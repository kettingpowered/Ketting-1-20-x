com/mojang/blaze3d/Blaze3D dfs
	getTime ()D b
	youJustLostTheGame ()V a
com/mojang/blaze3d/audio/Channel dft
	LOGGER a
	initialized c
	source b
	stream e
	streamingBufferSize d
	attachBufferStream (Lnet/minecraft/client/sounds/AudioStream;)V a
	attachStaticBuffer (Lcom/mojang/blaze3d/audio/SoundBuffer;)V a
	calculateBufferSize (Ljavax/sound/sampled/AudioFormat;I)I a
	create ()Lcom/mojang/blaze3d/audio/Channel; a
	destroy ()V b
	disableAttenuation ()V h
	getState ()I j
	linearAttenuation (F)V c
	pause ()V d
	play ()V c
	pumpBuffers (I)V a
	removeProcessedBuffers ()I k
	setLooping (Z)V a
	setPitch (F)V a
	setRelative (Z)V b
	setSelfPosition (Lnet/minecraft/world/phys/Vec3;)V a
	setVolume (F)V b
	stop ()V f
	stopped ()Z g
	unpause ()V e
	updateStream ()V i
com/mojang/blaze3d/audio/Library dfu
	EMPTY d
	LOGGER a
	context c
	device b
	listener g
	staticChannels e
	streamingChannels f
	acquireChannel (Lcom/mojang/blaze3d/audio/Library$Pool;)Lcom/mojang/blaze3d/audio/Channel; a
	cleanup ()V b
	getChannelCount ()I f
	getDebugString ()Ljava/lang/String; d
	getListener ()Lcom/mojang/blaze3d/audio/Listener; c
	init ()V a
	releaseChannel (Lcom/mojang/blaze3d/audio/Channel;)V a
	tryOpenDevice ()J g
com/mojang/blaze3d/audio/Library$ChannelPool dfu$a
	acquire ()Lcom/mojang/blaze3d/audio/Channel; a
	cleanup ()V b
	getMaxCount ()I c
	getUsedCount ()I d
	release (Lcom/mojang/blaze3d/audio/Channel;)Z a
com/mojang/blaze3d/audio/Library$CountingChannelPool dfu$b
	activeChannels b
	limit a
	acquire ()Lcom/mojang/blaze3d/audio/Channel; a
	cleanup ()V b
	getMaxCount ()I c
	getUsedCount ()I d
	release (Lcom/mojang/blaze3d/audio/Channel;)Z a
com/mojang/blaze3d/audio/Library$Pool dfu$c
	$VALUES c
	STATIC a
	STREAMING b
com/mojang/blaze3d/audio/Listener dfv
	gain a
	position b
	getGain ()F b
	getListenerPosition ()Lnet/minecraft/world/phys/Vec3; a
	reset ()V c
	setGain (F)V a
	setListenerOrientation (Lcom/mojang/math/Vector3f;Lcom/mojang/math/Vector3f;)V a
	setListenerPosition (Lnet/minecraft/world/phys/Vec3;)V a
com/mojang/blaze3d/audio/OggAudioStream dfw
	audioFormat b
	buffer d
	handle a
	input c
	convertMono (Ljava/nio/FloatBuffer;Lcom/mojang/blaze3d/audio/OggAudioStream$OutputConcat;)V a
	convertStereo (Ljava/nio/FloatBuffer;Ljava/nio/FloatBuffer;Lcom/mojang/blaze3d/audio/OggAudioStream$OutputConcat;)V a
	forwardBuffer ()V d
	getFormat ()Ljavax/sound/sampled/AudioFormat; a
	read (I)Ljava/nio/ByteBuffer; a
	readAll ()Ljava/nio/ByteBuffer; b
	readFrame (Lcom/mojang/blaze3d/audio/OggAudioStream$OutputConcat;)Z a
	refillFromStream ()Z c
com/mojang/blaze3d/audio/OggAudioStream$OutputConcat dfw$a
	bufferSize b
	buffers a
	byteCount c
	currentBuffer d
	createNewBuffer ()V b
	get ()Ljava/nio/ByteBuffer; a
	put (F)V a
com/mojang/blaze3d/audio/OpenAlUtil dfx
	LOGGER a
	alErrorToString (I)Ljava/lang/String; a
	alcErrorToString (I)Ljava/lang/String; b
	audioFormatToOpenAl (Ljavax/sound/sampled/AudioFormat;)I a
	checkALCError (JLjava/lang/String;)Z a
	checkALError (Ljava/lang/String;)Z a
com/mojang/blaze3d/audio/SoundBuffer dfy
	alBuffer d
	data a
	format b
	hasAlBuffer c
	discardAlBuffer ()V b
	getAlBuffer ()Ljava/util/OptionalInt; a
	releaseAlBuffer ()Ljava/util/OptionalInt; c
com/mojang/blaze3d/font/GlyphInfo dfz
	getAdvance (Z)F a
	getBearingX ()F a
	getBoldOffset ()F b
	getShadowOffset ()F c
com/mojang/blaze3d/font/GlyphProvider dga
	getGlyph (I)Lcom/mojang/blaze3d/font/RawGlyph; a
	getSupportedGlyphs ()Lit/unimi/dsi/fastutil/ints/IntSet; a
com/mojang/blaze3d/font/RawGlyph dgb
	getBearingY ()F l
	getDown ()F k
	getLeft ()F h
	getOversample ()F g
	getPixelHeight ()I e
	getPixelWidth ()I d
	getRight ()F i
	getUp ()F j
	isColored ()Z f
	upload (II)V a
com/mojang/blaze3d/font/TrueTypeGlyphProvider dgc
	ascent h
	font b
	fontMemory a
	oversample c
	pointScale g
	shiftX e
	shiftY f
	skip d
	getGlyph (I)Lcom/mojang/blaze3d/font/RawGlyph; a
	getGlyph (I)Lcom/mojang/blaze3d/font/TrueTypeGlyphProvider$Glyph; b
	getSupportedGlyphs ()Lit/unimi/dsi/fastutil/ints/IntSet; a
com/mojang/blaze3d/font/TrueTypeGlyphProvider$Glyph dgc$a
	advance f
	bearingX d
	bearingY e
	height c
	index g
	width b
	getBearingX ()F a
	getBearingY ()F l
	getOversample ()F g
	getPixelHeight ()I e
	getPixelWidth ()I d
	isColored ()Z f
	upload (II)V a
com/mojang/blaze3d/pipeline/RenderCall dgd
com/mojang/blaze3d/pipeline/RenderPipeline dge
	processedBuffer c
	recordingBuffer b
	renderCalls a
	renderingBuffer d
com/mojang/blaze3d/pipeline/RenderTarget dgf
	clearChannels i
	colorTextureId g
	depthBufferId h
	filterMode j
	frameBufferId f
	height b
	useDepth e
	viewHeight d
	viewWidth c
	width a
	_bindWrite (Z)V c
	_blitToScreen (IIZ)V e
	_resize (IIZ)V d
	bindRead ()V c
	bindWrite (Z)V a
	blitToScreen (II)V a
	blitToScreen (IIZ)V c
	checkStatus ()V b
	clear (Z)V b
	copyDepthFrom (Lcom/mojang/blaze3d/pipeline/RenderTarget;)V a
	createBuffers (IIZ)V b
	destroyBuffers ()V a
	resize (IIZ)V a
	setClearColor (FFFF)V a
	setFilterMode (I)V a
	unbindRead ()V d
	unbindWrite ()V e
com/mojang/blaze3d/platform/ClipboardManager dgg
	clipboardScratchBuffer a
	getClipboard (JLorg/lwjgl/glfw/GLFWErrorCallbackI;)Ljava/lang/String; a
	pushClipboard (JLjava/nio/ByteBuffer;[B)V a
	setClipboard (JLjava/lang/String;)V a
com/mojang/blaze3d/platform/DebugMemoryUntracker dgh
	UNTRACK a
	untrack (J)V a
	untrack (Lorg/lwjgl/system/Pointer;)V a
com/mojang/blaze3d/platform/DisplayData dgi
	fullscreenHeight d
	fullscreenWidth c
	height b
	isFullscreen e
	width a
com/mojang/blaze3d/platform/GlConst dgj
	GL_COLOR_ATTACHMENT0 c
	GL_DEPTH_ATTACHMENT d
	GL_FRAMEBUFFER a
	GL_FRAMEBUFFER_COMPLETE e
	GL_FRAMEBUFFER_INCOMPLETE_ATTACHMENT f
	GL_FRAMEBUFFER_INCOMPLETE_DRAW_BUFFER h
	GL_FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT g
	GL_FRAMEBUFFER_INCOMPLETE_READ_BUFFER i
	GL_RENDERBUFFER b
com/mojang/blaze3d/platform/GlDebug dgk
	BYTE_BUFFER a
	BY_ID g
	DEBUG_LEVELS h
	DEBUG_LEVELS_ARB i
	FLOAT_BUFFER b
	INT_BUFFER c
	LOGGER d
	NEWLINE_JOINER e
	SAVED_STATES j
	STATEMENT_JOINER f
	enableDebugCallback (IZ)V a
	printDebugLog (IIIIIJJ)V a
	printUnknownToken (I)Ljava/lang/String; a
	setup (ILjava/lang/String;)V a
	severityToString (I)Ljava/lang/String; d
	sourceToString (I)Ljava/lang/String; b
	typeToString (I)Ljava/lang/String; c
com/mojang/blaze3d/platform/GlStateManager dgl
	ALPHA_TEST b
	BLEND f
	COLOR t
	COLOR_LOGIC k
	COLOR_MASK s
	COLOR_MATERIAL e
	CULL i
	DEPTH g
	FLOAT_ARG_BUFFER n
	FOG h
	LIGHTING c
	LIGHT_ENABLE d
	MATRIX_BUFFER a
	POLY_OFFSET j
	RESCALE_NORMAL r
	STENCIL m
	TEXTURES p
	TEX_GEN l
	activeTexture o
	fboBlitMode v
	fboMode u
	shadeModel q
	_activeTexture (I)V q
	_alphaFunc (IF)V a
	_bindTexture (I)V s
	_blendColor (FFFF)V a
	_blendEquation (I)V c
	_blendFunc (II)V b
	_blendFuncSeparate (IIII)V a
	_clear (IZ)V a
	_clearColor (FFFF)V b
	_clearCurrentColor ()V Q
	_clearDepth (D)V a
	_clearStencil (I)V v
	_color4f (FFFF)V d
	_colorMask (ZZZZ)V a
	_colorMaterial (II)V a
	_colorPointer (IIIJ)V c
	_deleteTexture (I)V r
	_depthFunc (I)V b
	_depthMask (Z)V a
	_disableAlphaTest ()V d
	_disableBlend ()V l
	_disableClientState (I)V y
	_disableColorLogicOp ()V H
	_disableColorMaterial ()V i
	_disableCull ()V B
	_disableDepthTest ()V j
	_disableFog ()V z
	_disableLighting ()V g
	_disableLineOffset ()V F
	_disablePolygonOffset ()V D
	_disableRescaleNormal ()V M
	_disableTexGen (Lcom/mojang/blaze3d/platform/GlStateManager$TexGen;)V b
	_disableTexture ()V J
	_disableVertexAttribArray (I)V A
	_drawArrays (III)V f
	_enableAlphaTest ()V e
	_enableBlend ()V m
	_enableClientState (I)V x
	_enableColorLogicOp ()V G
	_enableColorMaterial ()V h
	_enableCull ()V A
	_enableDepthTest ()V k
	_enableFog ()V y
	_enableLight (I)V a
	_enableLighting ()V f
	_enableLineOffset ()V E
	_enablePolygonOffset ()V C
	_enableRescaleNormal ()V L
	_enableTexGen (Lcom/mojang/blaze3d/platform/GlStateManager$TexGen;)V a
	_enableTexture ()V I
	_enableVertexAttribArray (I)V z
	_fog (I[F)V a
	_fogDensity (F)V a
	_fogEnd (F)V c
	_fogMode (I)V o
	_fogStart (F)V b
	_fogi (II)V l
	_genTexture ()I K
	_getError ()I R
	_getInteger (I)I C
	_getMatrix (ILjava/nio/FloatBuffer;)V f
	_getString (I)Ljava/lang/String; B
	_getTexImage (IIIIJ)V a
	_getTexLevelParameter (III)I c
	_glBindBuffer (II)V g
	_glBindFramebuffer (II)V h
	_glBlitFrameBuffer (IIIIIIIIII)V a
	_glBufferData (ILjava/nio/ByteBuffer;I)V a
	_glClientActiveTexture (I)V n
	_glCopyTexSubImage2D (IIIIIIII)V a
	_glDeleteBuffers (I)V j
	_glDeleteFramebuffers (I)V k
	_glFramebufferTexture2D (IIIII)V a
	_glGenBuffers ()I o
	_glGetAttribLocation (ILjava/lang/CharSequence;)I c
	_glGetUniformLocation (ILjava/lang/CharSequence;)I b
	_glMultiTexCoord2f (IFF)V a
	_glUniform1 (ILjava/nio/FloatBuffer;)V b
	_glUniform1 (ILjava/nio/IntBuffer;)V a
	_glUniform1i (II)V f
	_glUniform2 (ILjava/nio/FloatBuffer;)V c
	_glUniform2 (ILjava/nio/IntBuffer;)V b
	_glUniform3 (ILjava/nio/FloatBuffer;)V d
	_glUniform3 (ILjava/nio/IntBuffer;)V c
	_glUniform4 (ILjava/nio/FloatBuffer;)V e
	_glUniform4 (ILjava/nio/IntBuffer;)V d
	_glUniformMatrix2 (IZLjava/nio/FloatBuffer;)V a
	_glUniformMatrix3 (IZLjava/nio/FloatBuffer;)V b
	_glUniformMatrix4 (IZLjava/nio/FloatBuffer;)V c
	_glUseProgram (I)V g
	_init_fbo (Lorg/lwjgl/opengl/GLCapabilities;)Ljava/lang/String; a
	_light (IILjava/nio/FloatBuffer;)V a
	_lightModel (ILjava/nio/FloatBuffer;)V a
	_lineWidth (F)V d
	_loadIdentity ()V N
	_logicOp (I)V p
	_matrixMode (I)V w
	_multMatrix (Lcom/mojang/math/Matrix4f;)V a
	_multMatrix (Ljava/nio/FloatBuffer;)V a
	_normal3f (FFF)V a
	_normalPointer (IIJ)V a
	_ortho (DDDDDD)V a
	_pixelStore (II)V n
	_pixelTransfer (IF)V b
	_polygonMode (II)V m
	_polygonOffset (FF)V a
	_popAttributes ()V c
	_popMatrix ()V P
	_pushLightingAttributes ()V a
	_pushMatrix ()V O
	_pushTextureAttributes ()V b
	_readPixels (IIIIIILjava/nio/ByteBuffer;)V a
	_rotatef (FFFF)V c
	_scaled (DDD)V a
	_scalef (FFF)V b
	_shadeModel (I)V t
	_stencilFunc (III)V d
	_stencilMask (I)V u
	_stencilOp (III)V e
	_texCoordPointer (IIIJ)V a
	_texEnv (III)V a
	_texGenMode (Lcom/mojang/blaze3d/platform/GlStateManager$TexGen;I)V a
	_texGenParam (Lcom/mojang/blaze3d/platform/GlStateManager$TexGen;ILjava/nio/FloatBuffer;)V a
	_texImage2D (IIIIIIIILjava/nio/IntBuffer;)V a
	_texParameter (IIF)V a
	_texParameter (III)V b
	_texSubImage2D (IIIIIIIIJ)V a
	_translated (DDD)V b
	_translatef (FFF)V c
	_vertexAttribPointer (IIIZIJ)V a
	_vertexPointer (IIIJ)V b
	_viewport (IIII)V c
	alpha1arg (II)V p
	clearTexGen ()V w
	color1arg (II)V o
	color3arg (IIII)V d
	getActiveTextureName ()I r
	getBuffer (FFFF)Ljava/nio/FloatBuffer; e
	getFramebufferDepthTexture ()I p
	getTexGen (Lcom/mojang/blaze3d/platform/GlStateManager$TexGen;)Lcom/mojang/blaze3d/platform/GlStateManager$TexGenCoord; c
	glActiveTexture (I)V m
	glAttachShader (II)V d
	glBlendFuncSeparate (IIII)V b
	glCheckFramebufferStatus (I)I l
	glCompileShader (I)V f
	glCreateProgram ()I n
	glCreateShader (I)I e
	glDeleteProgram (I)V h
	glDeleteShader (I)V d
	glGenFramebuffers ()I q
	glGetProgramInfoLog (II)Ljava/lang/String; j
	glGetProgrami (II)I c
	glGetShaderInfoLog (II)Ljava/lang/String; i
	glGetShaderi (II)I e
	glLinkProgram (I)V i
	glShaderSource (ILjava/lang/CharSequence;)V a
	mulTextureByProjModelView ()V x
	setupEndPortalTexGen ()V v
	setupGui3DDiffuseLighting (Lcom/mojang/math/Vector3f;Lcom/mojang/math/Vector3f;)V b
	setupGuiFlatDiffuseLighting (Lcom/mojang/math/Vector3f;Lcom/mojang/math/Vector3f;)V a
	setupLevelDiffuseLighting (Lcom/mojang/math/Vector3f;Lcom/mojang/math/Vector3f;Lcom/mojang/math/Matrix4f;)V a
	setupOutline ()V s
	setupOverlayColor (II)V k
	supportsFramebufferBlit ()Z S
	teardownOutline ()V t
	teardownOverlayColor ()V u
com/mojang/blaze3d/platform/GlStateManager$AlphaState dgl$a
	func b
	mode a
	reference c
com/mojang/blaze3d/platform/GlStateManager$BlendState dgl$b
	dstAlpha e
	dstRgb c
	mode a
	srcAlpha d
	srcRgb b
com/mojang/blaze3d/platform/GlStateManager$BooleanState dgl$c
	enabled b
	state a
	disable ()V a
	enable ()V b
	setEnabled (Z)V a
com/mojang/blaze3d/platform/GlStateManager$Color dgl$d
	a d
	b c
	g b
	r a
com/mojang/blaze3d/platform/GlStateManager$ColorLogicState dgl$e
	enable a
	op b
com/mojang/blaze3d/platform/GlStateManager$ColorMask dgl$f
	alpha d
	blue c
	green b
	red a
com/mojang/blaze3d/platform/GlStateManager$ColorMaterialState dgl$g
	enable a
	face b
	mode c
com/mojang/blaze3d/platform/GlStateManager$CullState dgl$h
	enable a
	mode b
com/mojang/blaze3d/platform/GlStateManager$DepthState dgl$i
	func c
	mask b
	mode a
com/mojang/blaze3d/platform/GlStateManager$DestFactor dgl$j
	$VALUES p
	CONSTANT_ALPHA a
	CONSTANT_COLOR b
	DST_ALPHA c
	DST_COLOR d
	ONE e
	ONE_MINUS_CONSTANT_ALPHA f
	ONE_MINUS_CONSTANT_COLOR g
	ONE_MINUS_DST_ALPHA h
	ONE_MINUS_DST_COLOR i
	ONE_MINUS_SRC_ALPHA j
	ONE_MINUS_SRC_COLOR k
	SRC_ALPHA l
	SRC_COLOR m
	ZERO n
	value o
com/mojang/blaze3d/platform/GlStateManager$FboBlitMode dgl$k
	$VALUES d
	BASE a
	EXT b
	NONE c
com/mojang/blaze3d/platform/GlStateManager$FboMode dgl$l
	$VALUES d
	ARB b
	BASE a
	EXT c
com/mojang/blaze3d/platform/GlStateManager$FogMode dgl$m
	$VALUES e
	EXP b
	EXP2 c
	LINEAR a
	value d
com/mojang/blaze3d/platform/GlStateManager$FogState dgl$n
	density c
	enable a
	end e
	mode b
	start d
com/mojang/blaze3d/platform/GlStateManager$LogicOp dgl$o
	$VALUES r
	AND a
	AND_INVERTED b
	AND_REVERSE c
	CLEAR d
	COPY e
	COPY_INVERTED f
	EQUIV g
	INVERT h
	NAND i
	NOOP j
	NOR k
	OR l
	OR_INVERTED m
	OR_REVERSE n
	SET o
	XOR p
	value q
com/mojang/blaze3d/platform/GlStateManager$PolygonOffsetState dgl$p
	factor c
	fill a
	line b
	units d
com/mojang/blaze3d/platform/GlStateManager$SourceFactor dgl$q
	$VALUES q
	CONSTANT_ALPHA a
	CONSTANT_COLOR b
	DST_ALPHA c
	DST_COLOR d
	ONE e
	ONE_MINUS_CONSTANT_ALPHA f
	ONE_MINUS_CONSTANT_COLOR g
	ONE_MINUS_DST_ALPHA h
	ONE_MINUS_DST_COLOR i
	ONE_MINUS_SRC_ALPHA j
	ONE_MINUS_SRC_COLOR k
	SRC_ALPHA l
	SRC_ALPHA_SATURATE m
	SRC_COLOR n
	ZERO o
	value p
com/mojang/blaze3d/platform/GlStateManager$StencilFunc dgl$r
	func a
	mask c
	ref b
com/mojang/blaze3d/platform/GlStateManager$StencilState dgl$s
	fail c
	func a
	mask b
	zfail d
	zpass e
com/mojang/blaze3d/platform/GlStateManager$TexGen dgl$t
	$VALUES e
	Q d
	R c
	S a
	T b
com/mojang/blaze3d/platform/GlStateManager$TexGenCoord dgl$u
	coord b
	enable a
	mode c
com/mojang/blaze3d/platform/GlStateManager$TexGenState dgl$v
	q d
	r c
	s a
	t b
com/mojang/blaze3d/platform/GlStateManager$TextureState dgl$w
	binding b
	enable a
com/mojang/blaze3d/platform/GlStateManager$Viewport dgl$x
	$VALUES f
	INSTANCE a
	height e
	width d
	x b
	y c
com/mojang/blaze3d/platform/GlUtil dgm
	allocateMemory (I)Ljava/nio/ByteBuffer; a
	freeMemory (Ljava/nio/Buffer;)V a
	getCpuInfo ()Ljava/lang/String; b
	getOpenGLVersion ()Ljava/lang/String; d
	getRenderer ()Ljava/lang/String; c
	getVendor ()Ljava/lang/String; a
	populateSnooperWithOpenGL (Lcom/mojang/blaze3d/platform/SnooperAccess;)V a
com/mojang/blaze3d/platform/InputConstants dgn
	GLFW_RAW_MOUSE_MOTION c
	UNKNOWN a
	glfwRawMouseMotionSupported b
	getKey (II)Lcom/mojang/blaze3d/platform/InputConstants$Key; a
	getKey (Ljava/lang/String;)Lcom/mojang/blaze3d/platform/InputConstants$Key; a
	grabOrReleaseMouse (JIDD)V a
	isKeyDown (JI)Z a
	isRawMouseInputSupported ()Z a
	setupKeyboardCallbacks (JLorg/lwjgl/glfw/GLFWKeyCallbackI;Lorg/lwjgl/glfw/GLFWCharModsCallbackI;)V a
	setupMouseCallbacks (JLorg/lwjgl/glfw/GLFWCursorPosCallbackI;Lorg/lwjgl/glfw/GLFWMouseButtonCallbackI;Lorg/lwjgl/glfw/GLFWScrollCallbackI;Lorg/lwjgl/glfw/GLFWDropCallbackI;)V a
	updateRawMouseInput (JZ)V a
com/mojang/blaze3d/platform/InputConstants$Key dgn$a
	NAME_MAP e
	displayName d
	name a
	type b
	value c
	getDisplayName ()Lnet/minecraft/network/chat/Component; d
	getName ()Ljava/lang/String; c
	getNumericKeyValue ()Ljava/util/OptionalInt; e
	getType ()Lcom/mojang/blaze3d/platform/InputConstants$Type; a
	getValue ()I b
com/mojang/blaze3d/platform/InputConstants$Type dgn$b
	$VALUES g
	KEYSYM a
	MOUSE c
	SCANCODE b
	defaultPrefix e
	displayTextSupplier f
	map d
	addKey (Lcom/mojang/blaze3d/platform/InputConstants$Type;Ljava/lang/String;I)V a
	getOrCreate (I)Lcom/mojang/blaze3d/platform/InputConstants$Key; a
com/mojang/blaze3d/platform/Lighting dgo
	DIFFUSE_LIGHT_0 a
	DIFFUSE_LIGHT_1 b
	NETHER_DIFFUSE_LIGHT_0 c
	NETHER_DIFFUSE_LIGHT_1 d
	setupFor3DItems ()V d
	setupForFlatItems ()V c
	setupLevel (Lcom/mojang/math/Matrix4f;)V b
	setupNetherLevel (Lcom/mojang/math/Matrix4f;)V a
	turnBackOn ()V a
	turnOff ()V b
com/mojang/blaze3d/platform/MemoryTracker dgp
	createByteBuffer (I)Ljava/nio/ByteBuffer; a
	createFloatBuffer (I)Ljava/nio/FloatBuffer; b
com/mojang/blaze3d/platform/Monitor dgq
	currentMode c
	monitor a
	videoModes b
	x d
	y e
	getCurrentMode ()Lcom/mojang/blaze3d/platform/VideoMode; b
	getMode (I)Lcom/mojang/blaze3d/platform/VideoMode; a
	getModeCount ()I e
	getMonitor ()J f
	getPreferredVidMode (Ljava/util/Optional;)Lcom/mojang/blaze3d/platform/VideoMode; a
	getVideoModeIndex (Lcom/mojang/blaze3d/platform/VideoMode;)I a
	getX ()I c
	getY ()I d
	refreshVideoModes ()V a
com/mojang/blaze3d/platform/MonitorCreator dgr
com/mojang/blaze3d/platform/NativeImage dgs
	LOGGER a
	OPEN_OPTIONS b
	format c
	height e
	pixels g
	size h
	useStbFree f
	width d
	_upload (IIIIIIIZZZZ)V b
	asByteArray ()[B e
	checkAllocated ()V h
	combine (IIII)I a
	copyFrom (Lcom/mojang/blaze3d/platform/NativeImage;)V a
	copyFromFont (Lorg/lwjgl/stb/STBTTFontinfo;IIIFFFFII)V a
	copyRect (IIIIIIZZ)V a
	downloadTexture (IZ)V a
	fillRect (IIIII)V a
	flipY ()V f
	format ()Lcom/mojang/blaze3d/platform/NativeImage$Format; c
	fromBase64 (Ljava/lang/String;)Lcom/mojang/blaze3d/platform/NativeImage; a
	getA (I)I a
	getB (I)I d
	getG (I)I c
	getHeight ()I b
	getLuminanceOrAlpha (II)B b
	getPixelRGBA (II)I a
	getR (I)I b
	getWidth ()I a
	makePixelArray ()[I d
	read (Lcom/mojang/blaze3d/platform/NativeImage$Format;Ljava/io/InputStream;)Lcom/mojang/blaze3d/platform/NativeImage; a
	read (Lcom/mojang/blaze3d/platform/NativeImage$Format;Ljava/nio/ByteBuffer;)Lcom/mojang/blaze3d/platform/NativeImage; a
	read (Ljava/io/InputStream;)Lcom/mojang/blaze3d/platform/NativeImage; a
	read (Ljava/nio/ByteBuffer;)Lcom/mojang/blaze3d/platform/NativeImage; a
	resizeSubRectTo (IIIILcom/mojang/blaze3d/platform/NativeImage;)V a
	setClamp (Z)V a
	setFilter (ZZ)V a
	setPixelRGBA (III)V a
	untrack ()V g
	upload (IIIIIIIZZ)V a
	upload (IIIIIIIZZZZ)V a
	upload (IIIZ)V a
	writeToChannel (Ljava/nio/channels/WritableByteChannel;)Z a
	writeToFile (Ljava/io/File;)V a
	writeToFile (Ljava/nio/file/Path;)V a
com/mojang/blaze3d/platform/NativeImage$Format dgs$a
	$VALUES r
	LUMINANCE d
	LUMINANCE_ALPHA c
	RGB b
	RGBA a
	alphaOffset p
	blueOffset n
	components e
	glFormat f
	greenOffset m
	hasAlpha k
	hasBlue i
	hasGreen h
	hasLuminance j
	hasRed g
	luminanceOffset o
	redOffset l
	supportedByStb q
	alphaOffset ()I f
	components ()I a
	getStbFormat (I)Lcom/mojang/blaze3d/platform/NativeImage$Format; b
	glFormat ()I d
	hasAlpha ()Z e
	hasLuminanceOrAlpha ()Z g
	luminanceOrAlphaOffset ()I h
	setPackPixelStoreState ()V b
	setUnpackPixelStoreState ()V c
	supportedByStb ()Z i
com/mojang/blaze3d/platform/NativeImage$InternalGlFormat dgs$b
	$VALUES g
	INTENSITY e
	LUMINANCE d
	LUMINANCE_ALPHA c
	RGB b
	RGBA a
	glFormat f
	glFormat ()I a
com/mojang/blaze3d/platform/NativeImage$WriteCallback dgs$c
	exception b
	output a
	throwIfException ()V a
com/mojang/blaze3d/platform/PngInfo dgt
	height b
	width a
	createCallbacks (Ljava/io/InputStream;)Lcom/mojang/blaze3d/platform/PngInfo$StbReader; a
com/mojang/blaze3d/platform/PngInfo$StbReader dgt$a
	closed a
	eof (J)I a
	read (JI)I b
	read (JJI)I a
	skip (I)V a
	skip (JI)V a
com/mojang/blaze3d/platform/PngInfo$StbReaderBufferedChannel dgt$b
	bufferSize d
	channel b
	consumed f
	read e
	readBufferAddress c
	fillReadBuffer (I)V b
	read (JI)I b
	skip (I)V a
com/mojang/blaze3d/platform/PngInfo$StbReaderSeekableByteChannel dgt$c
	channel b
	eof (J)I a
	read (JI)I b
	skip (I)V a
com/mojang/blaze3d/platform/ScreenManager dgu
	monitorCreator b
	monitors a
	clamp (III)I a
	findBestMonitor (Lcom/mojang/blaze3d/platform/Window;)Lcom/mojang/blaze3d/platform/Monitor; a
	getMonitor (J)Lcom/mojang/blaze3d/platform/Monitor; a
	onMonitorChange (JI)V a
	shutdown ()V a
com/mojang/blaze3d/platform/SnooperAccess dgv
com/mojang/blaze3d/platform/TextureUtil dgw
	LOGGER a
	bind (I)V b
	generateTextureId ()I a
	initTexture (Ljava/nio/IntBuffer;II)V a
	prepareImage (III)V a
	prepareImage (IIII)V a
	prepareImage (Lcom/mojang/blaze3d/platform/NativeImage$InternalGlFormat;III)V a
	prepareImage (Lcom/mojang/blaze3d/platform/NativeImage$InternalGlFormat;IIII)V a
	readResource (Ljava/io/InputStream;)Ljava/nio/ByteBuffer; a
	readResourceAsString (Ljava/io/InputStream;)Ljava/lang/String; b
	releaseTextureId (I)V a
com/mojang/blaze3d/platform/VideoMode dgx
	PATTERN g
	blueBits e
	greenBits d
	height b
	redBits c
	refreshRate f
	width a
	getBlueBits ()I e
	getGreenBits ()I d
	getHeight ()I b
	getRedBits ()I c
	getRefreshRate ()I f
	getWidth ()I a
	read (Ljava/lang/String;)Ljava/util/Optional; a
	write ()Ljava/lang/String; g
com/mojang/blaze3d/platform/Window dgy
	LOGGER a
	actuallyFullscreen l
	defaultErrorCallback b
	dirty w
	errorSection v
	eventHandler c
	framebufferHeight r
	framebufferWidth q
	framerateLimit x
	fullscreen k
	guiScale u
	guiScaledHeight t
	guiScaledWidth s
	height p
	preferredFullscreenVideoMode j
	screenManager d
	vsync y
	width o
	window e
	windowedHeight i
	windowedWidth h
	windowedX f
	windowedY g
	x m
	y n
	bootCrash (IJ)V b
	calculateScale (IZ)I a
	changeFullscreenVideoMode ()V g
	checkGlfwError (Ljava/util/function/BiConsumer;)V a
	defaultErrorCallback (IJ)V a
	findBestMonitor ()Lcom/mojang/blaze3d/platform/Monitor; t
	getFramerateLimit ()I d
	getGuiScale ()D s
	getGuiScaledHeight ()I p
	getGuiScaledWidth ()I o
	getHeight ()I l
	getPreferredFullscreenVideoMode ()Ljava/util/Optional; f
	getRefreshRate ()I a
	getScreenHeight ()I n
	getScreenWidth ()I m
	getWidth ()I k
	getWindow ()J i
	getX ()I q
	getY ()I r
	isFullscreen ()Z j
	onEnter (JZ)V b
	onFocus (JZ)V a
	onFramebufferResize (JII)V b
	onMove (JII)V a
	onResize (JII)V c
	readIconPixels (Ljava/io/InputStream;Ljava/nio/IntBuffer;Ljava/nio/IntBuffer;Ljava/nio/IntBuffer;)Ljava/nio/ByteBuffer; a
	refreshFramebufferSize ()V v
	setBootErrorCallback ()V u
	setDefaultErrorCallback ()V c
	setErrorSection (Ljava/lang/String;)V a
	setFramerateLimit (I)V a
	setGuiScale (D)V a
	setHeight (I)V c
	setIcon (Ljava/io/InputStream;Ljava/io/InputStream;)V a
	setMode ()V w
	setPreferredFullscreenVideoMode (Ljava/util/Optional;)V a
	setTitle (Ljava/lang/String;)V b
	setWidth (I)V b
	shouldClose ()Z b
	toggleFullScreen ()V h
	updateDisplay ()V e
	updateFullscreen (Z)V c
	updateRawMouseInput (Z)V b
	updateVsync (Z)V a
com/mojang/blaze3d/platform/Window$WindowInitFailed dgy$a
com/mojang/blaze3d/platform/WindowEventHandler dgz
	cursorEntered ()V b
	resizeDisplay ()V a
	setWindowActive (Z)V a
com/mojang/blaze3d/shaders/AbstractUniform dha
	set (F)V a
	set (FF)V a
	set (FFF)V a
	set (FFFF)V a
	set (Lcom/mojang/math/Matrix4f;)V a
	set ([F)V a
	setSafe (FFFF)V b
	setSafe (IIII)V a
com/mojang/blaze3d/shaders/BlendMode dhb
	blendFunc f
	dstAlphaFactor e
	dstColorFactor d
	lastApplied a
	opaque h
	separateBlend g
	srcAlphaFactor c
	srcColorFactor b
	apply ()V a
	isOpaque ()Z b
	stringToBlendFactor (Ljava/lang/String;)I b
	stringToBlendFunc (Ljava/lang/String;)I a
com/mojang/blaze3d/shaders/Effect dhc
	getFragmentProgram ()Lcom/mojang/blaze3d/shaders/Program; d
	getId ()I a
	getVertexProgram ()Lcom/mojang/blaze3d/shaders/Program; c
	markDirty ()V b
com/mojang/blaze3d/shaders/Program dhd
	id c
	name b
	references d
	type a
	attachToEffect (Lcom/mojang/blaze3d/shaders/Effect;)V a
	close ()V a
	compileShader (Lcom/mojang/blaze3d/shaders/Program$Type;Ljava/lang/String;Ljava/io/InputStream;)Lcom/mojang/blaze3d/shaders/Program; a
	getName ()Ljava/lang/String; b
com/mojang/blaze3d/shaders/Program$Type dhd$a
	$VALUES g
	FRAGMENT b
	VERTEX a
	extension d
	glType e
	name c
	programs f
	getExtension ()Ljava/lang/String; b
	getGlType ()I d
	getName ()Ljava/lang/String; a
	getPrograms ()Ljava/util/Map; c
com/mojang/blaze3d/shaders/ProgramManager dhe
	LOGGER a
	createProgram ()I a
	glUseProgram (I)V a
	linkProgram (Lcom/mojang/blaze3d/shaders/Effect;)V b
	releaseProgram (Lcom/mojang/blaze3d/shaders/Effect;)V a
com/mojang/blaze3d/shaders/Uniform dhf
	LOGGER a
	count c
	dirty h
	floatValues f
	intValues e
	location b
	name g
	parent i
	type d
	getName ()Ljava/lang/String; a
	getTypeFromString (Ljava/lang/String;)I a
	glGetAttribLocation (ILjava/lang/CharSequence;)I b
	glGetUniformLocation (ILjava/lang/CharSequence;)I a
	markDirty ()V c
	set (F)V a
	set (FF)V a
	set (FFF)V a
	set (FFFF)V a
	set (Lcom/mojang/math/Matrix4f;)V a
	set ([F)V a
	setLocation (I)V a
	setSafe (FFFF)V b
	setSafe (IIII)V a
	upload ()V b
	uploadAsFloat ()V e
	uploadAsInteger ()V d
	uploadAsMatrix ()V f
	uploadInteger (II)V a
com/mojang/blaze3d/vertex/BufferBuilder dhg
	LOGGER g
	buffer h
	building u
	currentElement o
	elementIndex p
	fastFormat s
	format r
	fullFormat t
	lastRenderedCountIndex j
	mode q
	nextElementByte l
	totalRenderedBytes k
	totalUploadedBytes m
	vertexCounts i
	vertices n
	begin (ILcom/mojang/blaze3d/vertex/VertexFormat;)V a
	building ()Z j
	clear ()V g
	color (IIII)Lcom/mojang/blaze3d/vertex/VertexConsumer; a
	currentElement ()Lcom/mojang/blaze3d/vertex/VertexFormatElement; i
	discard ()V h
	end ()V c
	endVertex ()V d
	ensureCapacity (I)V c
	ensureVertexCapacity ()V a
	getQuadDistanceFromPlayer (Ljava/nio/FloatBuffer;FFFII)F a
	getState ()Lcom/mojang/blaze3d/vertex/BufferBuilder$State; b
	limitToVertex (Ljava/nio/FloatBuffer;I)V a
	nextElement ()V e
	popNextBuffer ()Lcom/mojang/datafixers/util/Pair; f
	putByte (IB)V a
	putFloat (IF)V a
	putShort (IS)V a
	restoreState (Lcom/mojang/blaze3d/vertex/BufferBuilder$State;)V a
	roundUp (I)I d
	sortQuads (FFF)V a
	switchFormat (Lcom/mojang/blaze3d/vertex/VertexFormat;)V a
	vertex (FFFFFFFFFIIFFF)V a
com/mojang/blaze3d/vertex/BufferBuilder$DrawState dhg$a
	format a
	mode c
	vertexCount b
	format ()Lcom/mojang/blaze3d/vertex/VertexFormat; a
	mode ()I c
	vertexCount ()I b
com/mojang/blaze3d/vertex/BufferBuilder$State dhg$b
	data a
	format b
com/mojang/blaze3d/vertex/BufferUploader dhh
	_end (Ljava/nio/ByteBuffer;ILcom/mojang/blaze3d/vertex/VertexFormat;I)V a
	end (Lcom/mojang/blaze3d/vertex/BufferBuilder;)V a
com/mojang/blaze3d/vertex/BufferVertexConsumer dhi
	color (IIII)Lcom/mojang/blaze3d/vertex/VertexConsumer; a
	currentElement ()Lcom/mojang/blaze3d/vertex/VertexFormatElement; i
	nextElement ()V e
	normal (FFF)Lcom/mojang/blaze3d/vertex/VertexConsumer; b
	normalIntValue (F)B a
	overlayCoords (II)Lcom/mojang/blaze3d/vertex/VertexConsumer; a
	putByte (IB)V a
	putFloat (IF)V a
	putShort (IS)V a
	uv (FF)Lcom/mojang/blaze3d/vertex/VertexConsumer; a
	uv2 (II)Lcom/mojang/blaze3d/vertex/VertexConsumer; b
	uvShort (SSI)Lcom/mojang/blaze3d/vertex/VertexConsumer; a
	vertex (DDD)Lcom/mojang/blaze3d/vertex/VertexConsumer; a
com/mojang/blaze3d/vertex/DefaultVertexFormat dhj
	BLOCK h
	ELEMENT_COLOR b
	ELEMENT_NORMAL f
	ELEMENT_PADDING g
	ELEMENT_POSITION a
	ELEMENT_UV0 c
	ELEMENT_UV1 d
	ELEMENT_UV2 e
	NEW_ENTITY i
	PARTICLE j
	POSITION k
	POSITION_COLOR l
	POSITION_COLOR_LIGHTMAP m
	POSITION_COLOR_TEX o
	POSITION_COLOR_TEX_LIGHTMAP q
	POSITION_TEX n
	POSITION_TEX_COLOR p
	POSITION_TEX_COLOR_NORMAL s
	POSITION_TEX_LIGHTMAP_COLOR r
com/mojang/blaze3d/vertex/DefaultedVertexConsumer dhk
	defaultA e
	defaultB d
	defaultColorSet a
	defaultG c
	defaultR b
	defaultColor (IIII)V b
	unsetDefaultColor ()V k
com/mojang/blaze3d/vertex/PoseStack dhl
	poseStack a
	clear ()Z d
	last ()Lcom/mojang/blaze3d/vertex/PoseStack$Pose; c
	mulPose (Lcom/mojang/math/Quaternion;)V a
	popPose ()V b
	pushPose ()V a
	scale (FFF)V a
	translate (DDD)V a
com/mojang/blaze3d/vertex/PoseStack$Pose dhl$a
	normal b
	pose a
	normal ()Lcom/mojang/math/Matrix3f; b
	pose ()Lcom/mojang/math/Matrix4f; a
com/mojang/blaze3d/vertex/SheetedDecalTextureGenerator dhm
	cameraInversePose h
	delegate g
	lightCoords o
	normalInversePose i
	nx p
	ny q
	nz r
	overlayU m
	overlayV n
	x j
	y k
	z l
	color (IIII)Lcom/mojang/blaze3d/vertex/VertexConsumer; a
	endVertex ()V d
	normal (FFF)Lcom/mojang/blaze3d/vertex/VertexConsumer; b
	overlayCoords (II)Lcom/mojang/blaze3d/vertex/VertexConsumer; a
	resetState ()V a
	uv (FF)Lcom/mojang/blaze3d/vertex/VertexConsumer; a
	uv2 (II)Lcom/mojang/blaze3d/vertex/VertexConsumer; b
	vertex (DDD)Lcom/mojang/blaze3d/vertex/VertexConsumer; a
com/mojang/blaze3d/vertex/Tesselator dhn
	INSTANCE b
	builder a
	end ()V b
	getBuilder ()Lcom/mojang/blaze3d/vertex/BufferBuilder; c
	getInstance ()Lcom/mojang/blaze3d/vertex/Tesselator; a
com/mojang/blaze3d/vertex/VertexBuffer dho
	format b
	id a
	vertexCount c
	bind ()V a
	draw (Lcom/mojang/math/Matrix4f;I)V a
	unbind ()V b
	upload (Lcom/mojang/blaze3d/vertex/BufferBuilder;)V a
	uploadLater (Lcom/mojang/blaze3d/vertex/BufferBuilder;)Ljava/util/concurrent/CompletableFuture; b
	upload_ (Lcom/mojang/blaze3d/vertex/BufferBuilder;)V c
com/mojang/blaze3d/vertex/VertexConsumer dhp
	LOGGER f
	color (FFFF)Lcom/mojang/blaze3d/vertex/VertexConsumer; a
	color (IIII)Lcom/mojang/blaze3d/vertex/VertexConsumer; a
	defaultColor (IIII)V b
	endVertex ()V d
	normal (FFF)Lcom/mojang/blaze3d/vertex/VertexConsumer; b
	normal (Lcom/mojang/math/Matrix3f;FFF)Lcom/mojang/blaze3d/vertex/VertexConsumer; a
	overlayCoords (I)Lcom/mojang/blaze3d/vertex/VertexConsumer; b
	overlayCoords (II)Lcom/mojang/blaze3d/vertex/VertexConsumer; a
	putBulkData (Lcom/mojang/blaze3d/vertex/PoseStack$Pose;Lnet/minecraft/client/renderer/block/model/BakedQuad;FFFII)V a
	putBulkData (Lcom/mojang/blaze3d/vertex/PoseStack$Pose;Lnet/minecraft/client/renderer/block/model/BakedQuad;[FFFF[IIZ)V a
	unsetDefaultColor ()V k
	uv (FF)Lcom/mojang/blaze3d/vertex/VertexConsumer; a
	uv2 (I)Lcom/mojang/blaze3d/vertex/VertexConsumer; a
	uv2 (II)Lcom/mojang/blaze3d/vertex/VertexConsumer; b
	vertex (DDD)Lcom/mojang/blaze3d/vertex/VertexConsumer; a
	vertex (FFFFFFFFFIIFFF)V a
	vertex (Lcom/mojang/math/Matrix4f;FFF)Lcom/mojang/blaze3d/vertex/VertexConsumer; a
com/mojang/blaze3d/vertex/VertexFormat dhq
	elements a
	offsets b
	vertexSize c
	clearBufferState ()V d
	getElements ()Lcom/google/common/collect/ImmutableList; c
	getIntegerSize ()I a
	getVertexSize ()I b
	setupBufferState (J)V a
com/mojang/blaze3d/vertex/VertexFormatElement dhr
	LOGGER a
	byteSize f
	count e
	index d
	type b
	usage c
	clearBufferState ()V e
	getByteSize ()I d
	getIndex ()I c
	getType ()Lcom/mojang/blaze3d/vertex/VertexFormatElement$Type; a
	getUsage ()Lcom/mojang/blaze3d/vertex/VertexFormatElement$Usage; b
	setupBufferState (JI)V a
	supportsUsage (ILcom/mojang/blaze3d/vertex/VertexFormatElement$Usage;)Z a
com/mojang/blaze3d/vertex/VertexFormatElement$Type dhr$a
	$VALUES k
	BYTE c
	FLOAT a
	INT g
	SHORT e
	UBYTE b
	UINT f
	USHORT d
	glType j
	name i
	size h
	getGlType ()I c
	getName ()Ljava/lang/String; b
	getSize ()I a
com/mojang/blaze3d/vertex/VertexFormatElement$Usage dhr$b
	$VALUES j
	COLOR c
	GENERIC f
	NORMAL b
	PADDING e
	POSITION a
	UV d
	clearState i
	name g
	setupState h
	clearBufferState (I)V a
	getName ()Ljava/lang/String; a
	setupBufferState (IIIJI)V a
com/mojang/blaze3d/vertex/VertexFormatElement$Usage$SetupState dhr$b$a
com/mojang/blaze3d/vertex/VertexMultiConsumer dhs
	create (Lcom/mojang/blaze3d/vertex/VertexConsumer;Lcom/mojang/blaze3d/vertex/VertexConsumer;)Lcom/mojang/blaze3d/vertex/VertexConsumer; a
com/mojang/blaze3d/vertex/VertexMultiConsumer$Double dhs$a
	first a
	second b
	color (IIII)Lcom/mojang/blaze3d/vertex/VertexConsumer; a
	defaultColor (IIII)V b
	endVertex ()V d
	normal (FFF)Lcom/mojang/blaze3d/vertex/VertexConsumer; b
	overlayCoords (II)Lcom/mojang/blaze3d/vertex/VertexConsumer; a
	unsetDefaultColor ()V k
	uv (FF)Lcom/mojang/blaze3d/vertex/VertexConsumer; a
	uv2 (II)Lcom/mojang/blaze3d/vertex/VertexConsumer; b
	vertex (DDD)Lcom/mojang/blaze3d/vertex/VertexConsumer; a
	vertex (FFFFFFFFFIIFFF)V a
com/mojang/math/Matrix3f a
	CS k
	G j
	SQ2 m
	SS l
	m00 a
	m01 b
	m02 c
	m10 d
	m11 e
	m12 f
	m20 g
	m21 h
	m22 i
	adjugateAndDet ()F e
	approxGivensQuat (FFF)Lcom/mojang/datafixers/util/Pair; a
	copy ()Lcom/mojang/math/Matrix3f; d
	createScaleMatrix (FFF)Lcom/mojang/math/Matrix3f; b
	invert ()Z f
	load (Lcom/mojang/math/Matrix3f;)V a
	mul (F)V a
	mul (Lcom/mojang/math/Matrix3f;)V b
	mul (Lcom/mojang/math/Quaternion;)V a
	qrGivensQuat (FF)Lcom/mojang/datafixers/util/Pair; a
	set (IIF)V a
	setIdentity ()V c
	stepJacobi (Lcom/mojang/math/Matrix3f;)Lcom/mojang/math/Quaternion; c
	svdDecompose ()Lorg/apache/commons/lang3/tuple/Triple; b
	transpose ()V a
com/mojang/math/Matrix4f b
	m00 a
	m01 b
	m02 c
	m03 d
	m10 e
	m11 f
	m12 g
	m13 h
	m20 i
	m21 j
	m22 k
	m23 l
	m30 m
	m31 n
	m32 o
	m33 p
	adjugateAndDet ()F b
	bufferIndex (II)I a
	copy ()Lcom/mojang/math/Matrix4f; d
	createScaleMatrix (FFF)Lcom/mojang/math/Matrix4f; a
	createTranslateMatrix (FFF)Lcom/mojang/math/Matrix4f; b
	invert ()Z c
	multiply (F)V a
	multiply (Lcom/mojang/math/Matrix4f;)V a
	multiply (Lcom/mojang/math/Quaternion;)V a
	orthographic (FFFF)Lcom/mojang/math/Matrix4f; a
	perspective (DFFF)Lcom/mojang/math/Matrix4f; a
	setIdentity ()V a
	store (Ljava/nio/FloatBuffer;)V a
	translate (Lcom/mojang/math/Vector3f;)V a
	transpose ()V e
com/mojang/math/OctahedralGroup c
	$VALUES af
	IDENTITY a
	INVERSION y
	INVERT_X z
	INVERT_Y A
	INVERT_Z B
	ROT_120_NNN e
	ROT_120_NNP f
	ROT_120_NPN g
	ROT_120_NPP h
	ROT_120_PNN i
	ROT_120_PNP j
	ROT_120_PPN k
	ROT_120_PPP l
	ROT_180_EDGE_XY_NEG m
	ROT_180_EDGE_XY_POS n
	ROT_180_EDGE_XZ_NEG o
	ROT_180_EDGE_XZ_POS p
	ROT_180_EDGE_YZ_NEG q
	ROT_180_EDGE_YZ_POS r
	ROT_180_FACE_XY b
	ROT_180_FACE_XZ c
	ROT_180_FACE_YZ d
	ROT_60_REF_NNN C
	ROT_60_REF_NNP D
	ROT_60_REF_NPN E
	ROT_60_REF_NPP F
	ROT_60_REF_PNN G
	ROT_60_REF_PNP H
	ROT_60_REF_PPN I
	ROT_60_REF_PPP J
	ROT_90_REF_X_NEG Q
	ROT_90_REF_X_POS R
	ROT_90_REF_Y_NEG S
	ROT_90_REF_Y_POS T
	ROT_90_REF_Z_NEG U
	ROT_90_REF_Z_POS V
	ROT_90_X_NEG s
	ROT_90_X_POS t
	ROT_90_Y_NEG u
	ROT_90_Y_POS v
	ROT_90_Z_NEG w
	ROT_90_Z_POS x
	SWAP_NEG_XY N
	SWAP_NEG_XZ P
	SWAP_NEG_YZ O
	SWAP_XY K
	SWAP_XZ M
	SWAP_YZ L
	cayleyTable ad
	inverseTable ae
	invertX Z
	invertY aa
	invertZ ab
	name X
	permutation ac
	rotatedDirections Y
	transformation W
	compose (Lcom/mojang/math/OctahedralGroup;)Lcom/mojang/math/OctahedralGroup; a
	getSerializedName ()Ljava/lang/String; a
	inverts (Lnet/minecraft/core/Direction$Axis;)Z a
	packInversions ()Lit/unimi/dsi/fastutil/booleans/BooleanList; b
	rotate (Lnet/minecraft/core/Direction;)Lnet/minecraft/core/Direction; a
	rotate (Lnet/minecraft/core/FrontAndTop;)Lnet/minecraft/core/FrontAndTop; a
com/mojang/math/Quaternion d
	ONE a
	i b
	j c
	k d
	r e
	conj ()V e
	copy ()Lcom/mojang/math/Quaternion; g
	cos (F)F b
	i ()F a
	j ()F b
	k ()F c
	mul (F)V a
	mul (Lcom/mojang/math/Quaternion;)V a
	normalize ()V f
	r ()F d
	set (FFFF)V a
	sin (F)F c
com/mojang/math/SymmetricGroup3 e
	$VALUES j
	P123 a
	P132 c
	P213 b
	P231 d
	P312 e
	P321 f
	cayleyTable i
	permutation g
	transformation h
	compose (Lcom/mojang/math/SymmetricGroup3;)Lcom/mojang/math/SymmetricGroup3; a
	permutation (I)I a
	transformation ()Lcom/mojang/math/Matrix3f; a
com/mojang/math/Transformation f
	IDENTITY g
	decomposed b
	leftRotation d
	matrix a
	rightRotation f
	scale e
	translation c
	compose (Lcom/mojang/math/Transformation;)Lcom/mojang/math/Transformation; a
	compose (Lcom/mojang/math/Vector3f;Lcom/mojang/math/Quaternion;Lcom/mojang/math/Vector3f;Lcom/mojang/math/Quaternion;)Lcom/mojang/math/Matrix4f; a
	ensureDecomposed ()V e
	getLeftRotation ()Lcom/mojang/math/Quaternion; d
	getMatrix ()Lcom/mojang/math/Matrix4f; c
	identity ()Lcom/mojang/math/Transformation; a
	inverse ()Lcom/mojang/math/Transformation; b
	toAffine (Lcom/mojang/math/Matrix4f;)Lcom/mojang/datafixers/util/Pair; a
com/mojang/math/Vector3d dht
	x a
	y b
	z c
com/mojang/math/Vector3f g
	XN a
	XP b
	YN c
	YP d
	ZN e
	ZP f
	x g
	y h
	z i
	add (FFF)V c
	add (Lcom/mojang/math/Vector3f;)V a
	clamp (FF)V a
	copy ()Lcom/mojang/math/Vector3f; e
	cross (Lcom/mojang/math/Vector3f;)V d
	dot (Lcom/mojang/math/Vector3f;)F c
	lerp (Lcom/mojang/math/Vector3f;F)V a
	map (Lit/unimi/dsi/fastutil/floats/Float2FloatFunction;)V a
	mul (F)V b
	mul (FFF)V b
	normalize ()Z d
	rotation (F)Lcom/mojang/math/Quaternion; c
	rotationDegrees (F)Lcom/mojang/math/Quaternion; a
	set (FFF)V a
	sub (Lcom/mojang/math/Vector3f;)V b
	transform (Lcom/mojang/math/Matrix3f;)V a
	transform (Lcom/mojang/math/Quaternion;)V a
	x ()F a
	y ()F b
	z ()F c
com/mojang/math/Vector4f h
	w d
	x a
	y b
	z c
	dot (Lcom/mojang/math/Vector4f;)F a
	mul (Lcom/mojang/math/Vector3f;)V a
	normalize ()Z e
	perspectiveDivide ()V f
	set (FFFF)V a
	transform (Lcom/mojang/math/Matrix4f;)V a
	transform (Lcom/mojang/math/Quaternion;)V a
	w ()F d
	x ()F a
	y ()F b
	z ()F c
com/mojang/realmsclient/KeyCombo dhu
	chars a
	matchIndex b
	onCompletion c
	keyPressed (C)Z a
	reset ()V a
com/mojang/realmsclient/RealmsMainScreen dhv
	BUTTON_LOCATION D
	CONFIGURE_LOCATION w
	CROSS_ICON_LOCATION B
	DARKEN_LOCATION A
	EXPIRED_ICON_LOCATION p
	EXPIRES_SOON_ICON_LOCATION q
	INVITATION_ICONS_LOCATION s
	INVITE_ICON_LOCATION t
	LEAVE_ICON_LOCATION r
	LOGGER a
	LOGO_LOCATION v
	NEWS_LOCATION y
	OFF_ICON_LOCATION c
	ON_ICON_LOCATION b
	POPUP_LOCATION z
	QUESTIONMARK_LOCATION x
	REALMS_DATA_FETCHER F
	TRIAL_ICON_LOCATION C
	WORLDICON_LOCATION u
	animTick aa
	backButton T
	buyARealmButton au
	carouselIndex aj
	carouselTick ak
	checkedClientCompatability K
	checkedParentalConsent J
	clicks an
	closeButton av
	configureButton V
	connectLock ao
	createTrialButton at
	createdTrial af
	dontSetConnectedToRealms O
	hasFetchedServers ab
	hasParentalConsent I
	hasSwitchedCarouselImage al
	hasUnreadNews ah
	hoveredElement ap
	inviteNarrationLimiter N
	justClosedPopup ad
	keyCombos am
	lastScreen P
	lastScrollYPosition H
	leaveButton W
	newsButton as
	newsLink ai
	numberOfPendingInvites Z
	overrideConfigure G
	pendingInvitesButton ar
	playButton S
	popupOpenedByUser ac
	realmSelectionList Q
	realmsGenericErrorScreen L
	realmsServers Y
	regionsPinged M
	renewButton U
	selectedServerId R
	showPopupButton aq
	showingPopup ag
	teaserImages E
	toolTip X
	trialsAvailable ae
	addButtons ()V c
	charTyped (CI)Z a
	checkClientCompatability ()V B
	checkParentalConsent ()V D
	checkUnreadNews ()V C
	configureClicked (Lcom/mojang/realmsclient/dto/RealmsServer;)V f
	drawClose (Lcom/mojang/blaze3d/vertex/PoseStack;IIII)V e
	drawConfigure (Lcom/mojang/blaze3d/vertex/PoseStack;IIII)V g
	drawExpired (Lcom/mojang/blaze3d/vertex/PoseStack;IIII)V c
	drawExpiring (Lcom/mojang/blaze3d/vertex/PoseStack;IIIII)V b
	drawInvitationPendingIcon (Lcom/mojang/blaze3d/vertex/PoseStack;IIIIZZ)V a
	drawLeave (Lcom/mojang/blaze3d/vertex/PoseStack;IIII)V f
	drawOpen (Lcom/mojang/blaze3d/vertex/PoseStack;IIII)V d
	drawPopup (Lcom/mojang/blaze3d/vertex/PoseStack;II)V b
	drawRealmsLogo (Lcom/mojang/blaze3d/vertex/PoseStack;II)V a
	findServer (J)Lcom/mojang/realmsclient/dto/RealmsServer; a
	getOwnedNonExpiredWorldIds ()Ljava/util/List; z
	hasParentalConsent ()Z w
	inPendingInvitationArea (DD)Z c
	init ()V b
	isOutsidePopup (DD)Z a
	isSelfOwnedNonExpiredServer (Lcom/mojang/realmsclient/dto/RealmsServer;)Z i
	isSelfOwnedServer (Lcom/mojang/realmsclient/dto/RealmsServer;)Z h
	keyPressed (III)Z a
	leaveClicked (Lcom/mojang/realmsclient/dto/RealmsServer;)V g
	leaveServer (Z)V d
	mouseClicked (DDI)Z a
	newScreen ()Lcom/mojang/realmsclient/RealmsMainScreen; g
	onClosePopup ()V J
	onRenew ()V A
	pendingButtonPress (Lnet/minecraft/client/gui/components/Button;)V a
	pingRegions ()V y
	play (Lcom/mojang/realmsclient/dto/RealmsServer;Lnet/minecraft/client/gui/screens/Screen;)V a
	popupX0 ()I K
	popupY0 ()I L
	removeSelection ()V ar_
	removed ()V e
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V a
	renderLocal (Lcom/mojang/blaze3d/vertex/PoseStack;)V b
	renderMoreInfo (Lcom/mojang/blaze3d/vertex/PoseStack;IIIIZ)V a
	renderMousehoverTooltip (Lcom/mojang/blaze3d/vertex/PoseStack;Ljava/util/List;II)V a
	renderNews (Lcom/mojang/blaze3d/vertex/PoseStack;IIZIIZZ)V a
	renderStage (Lcom/mojang/blaze3d/vertex/PoseStack;)V c
	saveListScrollPosition ()V I
	setTooltip ([Lnet/minecraft/network/chat/Component;)V a
	shouldConfigureButtonBeVisible (Lcom/mojang/realmsclient/dto/RealmsServer;)Z d
	shouldLeaveButtonBeVisible (Lcom/mojang/realmsclient/dto/RealmsServer;)Z e
	shouldPlayButtonBeActive (Lcom/mojang/realmsclient/dto/RealmsServer;)Z b
	shouldRenewButtonBeActive (Lcom/mojang/realmsclient/dto/RealmsServer;)Z c
	shouldShowMessageInList ()Z v
	shouldShowPopup ()Z aq_
	shouldShowPopupButton ()Z x
	stopRealmsFetcher ()V H
	switchToLocal ()V F
	switchToProd ()V G
	switchToStage ()V E
	tick ()V d
	updateButtonStates (Lcom/mojang/realmsclient/dto/RealmsServer;)V a
	updateTeaserImages (Lnet/minecraft/server/packs/resources/ResourceManager;)V a
com/mojang/realmsclient/RealmsMainScreen$CloseButton dhv$a
	renderButton (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V b
com/mojang/realmsclient/RealmsMainScreen$Entry dhv$b
com/mojang/realmsclient/RealmsMainScreen$HoveredElement dhv$c
	$VALUES e
	CONFIGURE d
	EXPIRED b
	LEAVE c
	NONE a
com/mojang/realmsclient/RealmsMainScreen$NewsButton dhv$d
	renderButton (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V b
com/mojang/realmsclient/RealmsMainScreen$PendingInvitesButton dhv$e
	renderButton (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V b
	tick ()V d
com/mojang/realmsclient/RealmsMainScreen$RealmSelectionList dhv$f
	showingMessage o
	addMessageEntry (Lcom/mojang/realmsclient/RealmsMainScreen$Entry;)I a
	clear ()V a
	getMaxPosition ()I c
	getRowWidth ()I d
	isFocused ()Z b
	itemClicked (IIDDI)V a
	keyPressed (III)Z a
	mouseClicked (DDI)Z a
	selectItem (I)V a
	setSelected (Lcom/mojang/realmsclient/RealmsMainScreen$Entry;)V b
	setSelected (Lnet/minecraft/client/gui/components/AbstractSelectionList$Entry;)V a
com/mojang/realmsclient/RealmsMainScreen$ServerEntry dhv$g
	serverData c
	mouseClicked (DDI)Z a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIIIIIIZF)V a
	renderLegacy (Lcom/mojang/realmsclient/dto/RealmsServer;Lcom/mojang/blaze3d/vertex/PoseStack;IIII)V b
	renderMcoServerItem (Lcom/mojang/realmsclient/dto/RealmsServer;Lcom/mojang/blaze3d/vertex/PoseStack;IIII)V a
com/mojang/realmsclient/RealmsMainScreen$ShowPopupButton dhv$h
	renderButton (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V b
com/mojang/realmsclient/RealmsMainScreen$TrialEntry dhv$i
	mouseClicked (DDI)Z a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIIIIIIZF)V a
	renderTrialItem (Lcom/mojang/blaze3d/vertex/PoseStack;IIIII)V a
com/mojang/realmsclient/Unit dhw
	$VALUES e
	B a
	GB d
	KB b
	MB c
	convertTo (JLcom/mojang/realmsclient/Unit;)D a
	getLargest (J)Lcom/mojang/realmsclient/Unit; a
	humanReadable (J)Ljava/lang/String; b
	humanReadable (JLcom/mojang/realmsclient/Unit;)Ljava/lang/String; b
com/mojang/realmsclient/client/FileDownload dhx
	INVALID_FILE_NAMES k
	LOGGER a
	cancelled b
	currentThread i
	error d
	extracting e
	finished c
	request h
	requestConfig j
	resourcePackPath g
	tempFile f
	cancel ()V a
	contentLength (Ljava/lang/String;)J a
	deletePlayerTag (Ljava/io/File;)V a
	download (Lcom/mojang/realmsclient/dto/WorldDownload;Ljava/lang/String;Lcom/mojang/realmsclient/gui/screens/RealmsDownloadLatestWorldScreen$DownloadStatus;Lnet/minecraft/world/level/storage/LevelStorageSource;)V a
	findAvailableFolderName (Ljava/lang/String;)Ljava/lang/String; b
	isError ()Z c
	isExtracting ()Z d
	isFinished ()Z b
	untarGzipArchive (Ljava/lang/String;Ljava/io/File;Lnet/minecraft/world/level/storage/LevelStorageSource;)V a
com/mojang/realmsclient/client/FileDownload$DownloadCountingOutputStream dhx$a
	listener b
	setListener (Ljava/awt/event/ActionListener;)V a
com/mojang/realmsclient/client/FileDownload$ProgressListener dhx$b
	downloadStatus e
	levelStorageSource d
	tempFile c
	worldName b
com/mojang/realmsclient/client/FileDownload$ResourcePackProgressListener dhx$c
	downloadStatus c
	tempFile b
	worldDownload d
com/mojang/realmsclient/client/FileUpload dhy
	LOGGER a
	cancelled j
	clientVersion h
	file b
	requestConfig l
	sessionId f
	slotId d
	uploadInfo e
	uploadStatus i
	uploadTask k
	username g
	worldId c
	cancel ()V a
	cleanup (Lorg/apache/http/client/methods/HttpPost;Lorg/apache/http/impl/client/CloseableHttpClient;)V a
	getRetryDelaySeconds (Lorg/apache/http/HttpResponse;)J a
	handleResponse (Lorg/apache/http/HttpResponse;Lcom/mojang/realmsclient/gui/screens/UploadResult$Builder;)V a
	isFinished ()Z b
	requestUpload (I)Lcom/mojang/realmsclient/gui/screens/UploadResult; a
	retryUploadAfter (JI)Lcom/mojang/realmsclient/gui/screens/UploadResult; b
	setupRequest (Lorg/apache/http/client/methods/HttpPost;)V a
	shouldRetry (JI)Z a
	upload (Ljava/util/function/Consumer;)V a
com/mojang/realmsclient/client/FileUpload$CustomInputStreamEntity dhy$a
	content b
	length a
	uploadStatus c
com/mojang/realmsclient/client/Ping dhz
	close (Ljava/net/Socket;)V a
	now ()J b
	ping (Ljava/lang/String;)I a
	ping ([Lcom/mojang/realmsclient/client/Ping$Region;)Ljava/util/List; a
	pingAllRegions ()Ljava/util/List; a
com/mojang/realmsclient/client/Ping$Region dhz$a
	$VALUES k
	AP_NORTHEAST_1 g
	AP_SOUTHEAST_1 e
	AP_SOUTHEAST_2 f
	EU_WEST_1 d
	SA_EAST_1 h
	US_EAST_1 a
	US_WEST_1 c
	US_WEST_2 b
	endpoint j
	name i
com/mojang/realmsclient/client/RealmsClient dia
	GSON f
	LOGGER c
	currentEnvironment a
	initialized b
	sessionId d
	username e
	acceptInvitation (Ljava/lang/String;)V a
	agreeToTos ()V l
	backupsFor (J)Lcom/mojang/realmsclient/dto/BackupList; d
	clientCompatible ()Lcom/mojang/realmsclient/client/RealmsClient$CompatibleVersionResponse; i
	close (J)Ljava/lang/Boolean; f
	create ()Lcom/mojang/realmsclient/client/RealmsClient; a
	deleteWorld (J)V h
	deop (JLjava/lang/String;)Lcom/mojang/realmsclient/dto/Ops; f
	download (JI)Lcom/mojang/realmsclient/dto/WorldDownload; b
	execute (Lcom/mojang/realmsclient/client/Request;)Ljava/lang/String; a
	fetchWorldTemplates (IILcom/mojang/realmsclient/dto/RealmsServer$WorldType;)Lcom/mojang/realmsclient/dto/WorldTemplatePaginatedList; a
	getLiveStats ()Lcom/mojang/realmsclient/dto/RealmsServerPlayerLists; f
	getNews ()Lcom/mojang/realmsclient/dto/RealmsNews; m
	getOwnWorld (J)Lcom/mojang/realmsclient/dto/RealmsServer; a
	initializeWorld (JLjava/lang/String;Ljava/lang/String;)V a
	invite (JLjava/lang/String;)Lcom/mojang/realmsclient/dto/RealmsServer; b
	join (J)Lcom/mojang/realmsclient/dto/RealmsServerAddress; b
	listWorlds ()Lcom/mojang/realmsclient/dto/RealmsServerList; e
	mcoEnabled ()Ljava/lang/Boolean; g
	op (JLjava/lang/String;)Lcom/mojang/realmsclient/dto/Ops; e
	open (J)Ljava/lang/Boolean; e
	pendingInvites ()Lcom/mojang/realmsclient/dto/PendingInvitesList; k
	pendingInvitesCount ()I j
	putIntoMinigameMode (JLjava/lang/String;)Ljava/lang/Boolean; d
	rejectInvitation (Ljava/lang/String;)V b
	resetWorldWithSeed (JLjava/lang/String;Ljava/lang/Integer;Z)Ljava/lang/Boolean; a
	resetWorldWithTemplate (JLjava/lang/String;)Ljava/lang/Boolean; g
	restoreWorld (JLjava/lang/String;)V c
	sendPingResults (Lcom/mojang/realmsclient/dto/PingResult;)V a
	stageAvailable ()Ljava/lang/Boolean; h
	subscriptionFor (J)Lcom/mojang/realmsclient/dto/Subscription; g
	switchSlot (JI)Z a
	switchToLocal ()V d
	switchToProd ()V c
	switchToStage ()V b
	trialAvailable ()Ljava/lang/Boolean; n
	uninvite (JLjava/lang/String;)V a
	uninviteMyselfFrom (J)V c
	update (JLjava/lang/String;Ljava/lang/String;)V b
	updateSlot (JILcom/mojang/realmsclient/dto/RealmsWorldOptions;)V a
	upload (JLjava/lang/String;)Lcom/mojang/realmsclient/dto/UploadInfo; h
	url (Ljava/lang/String;)Ljava/lang/String; c
	url (Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; a
com/mojang/realmsclient/client/RealmsClient$CompatibleVersionResponse dia$a
	$VALUES d
	COMPATIBLE a
	OTHER c
	OUTDATED b
com/mojang/realmsclient/client/RealmsClient$Environment dia$b
	$VALUES f
	LOCAL c
	PRODUCTION a
	STAGE b
	baseUrl d
	protocol e
com/mojang/realmsclient/client/RealmsClientConfig dib
	proxy a
	getProxy ()Ljava/net/Proxy; a
	setProxy (Ljava/net/Proxy;)V a
com/mojang/realmsclient/client/RealmsError dic
	LOGGER a
	errorCode c
	errorMessage b
	create (Ljava/lang/String;)Lcom/mojang/realmsclient/client/RealmsError; a
	getErrorCode ()I b
	getErrorMessage ()Ljava/lang/String; a
com/mojang/realmsclient/client/Request did
	connected c
	connection a
	url b
	connect ()Lcom/mojang/realmsclient/client/Request; d
	cookie (Ljava/lang/String;Ljava/lang/String;)V a
	cookie (Ljava/net/HttpURLConnection;Ljava/lang/String;Ljava/lang/String;)V a
	delete (Ljava/lang/String;)Lcom/mojang/realmsclient/client/Request; b
	dispose ()V f
	doConnect ()Lcom/mojang/realmsclient/client/Request; e
	get (Ljava/lang/String;)Lcom/mojang/realmsclient/client/Request; a
	get (Ljava/lang/String;II)Lcom/mojang/realmsclient/client/Request; a
	getHeader (Ljava/lang/String;)Ljava/lang/String; c
	getHeader (Ljava/net/HttpURLConnection;Ljava/lang/String;)Ljava/lang/String; a
	getRetryAfterHeader ()I a
	getRetryAfterHeader (Ljava/net/HttpURLConnection;)I a
	post (Ljava/lang/String;Ljava/lang/String;)Lcom/mojang/realmsclient/client/Request; b
	post (Ljava/lang/String;Ljava/lang/String;II)Lcom/mojang/realmsclient/client/Request; a
	put (Ljava/lang/String;Ljava/lang/String;)Lcom/mojang/realmsclient/client/Request; c
	put (Ljava/lang/String;Ljava/lang/String;II)Lcom/mojang/realmsclient/client/Request; b
	read (Ljava/io/InputStream;)Ljava/lang/String; a
	responseCode ()I b
	text ()Ljava/lang/String; c
com/mojang/realmsclient/client/Request$Delete did$a
	doConnect ()Lcom/mojang/realmsclient/client/Request$Delete; f
	doConnect ()Lcom/mojang/realmsclient/client/Request; e
com/mojang/realmsclient/client/Request$Get did$b
	doConnect ()Lcom/mojang/realmsclient/client/Request$Get; f
	doConnect ()Lcom/mojang/realmsclient/client/Request; e
com/mojang/realmsclient/client/Request$Post did$c
	content c
	doConnect ()Lcom/mojang/realmsclient/client/Request$Post; f
	doConnect ()Lcom/mojang/realmsclient/client/Request; e
com/mojang/realmsclient/client/Request$Put did$d
	content c
	doConnect ()Lcom/mojang/realmsclient/client/Request$Put; f
	doConnect ()Lcom/mojang/realmsclient/client/Request; e
com/mojang/realmsclient/client/UploadStatus die
	bytesWritten a
	totalBytes b
com/mojang/realmsclient/dto/Backup dif
	LOGGER f
	backupId a
	changeList e
	lastModifiedDate b
	metadata d
	size c
	uploadedVersion g
	format (Ljava/lang/String;)Ljava/lang/String; a
	isUploadedVersion ()Z a
	parse (Lcom/google/gson/JsonElement;)Lcom/mojang/realmsclient/dto/Backup; a
	setUploadedVersion (Z)V a
com/mojang/realmsclient/dto/BackupList dig
	LOGGER b
	backups a
	parse (Ljava/lang/String;)Lcom/mojang/realmsclient/dto/BackupList; a
com/mojang/realmsclient/dto/GuardedSerializer dih
	gson a
	fromJson (Ljava/lang/String;Ljava/lang/Class;)Lcom/mojang/realmsclient/dto/ReflectionBasedSerialization; a
	toJson (Lcom/mojang/realmsclient/dto/ReflectionBasedSerialization;)Ljava/lang/String; a
com/mojang/realmsclient/dto/Ops dii
	ops a
	parse (Ljava/lang/String;)Lcom/mojang/realmsclient/dto/Ops; a
com/mojang/realmsclient/dto/PendingInvite dij
	LOGGER f
	date e
	invitationId a
	worldName b
	worldOwnerName c
	worldOwnerUuid d
	parse (Lcom/google/gson/JsonObject;)Lcom/mojang/realmsclient/dto/PendingInvite; a
com/mojang/realmsclient/dto/PendingInvitesList dik
	LOGGER b
	pendingInvites a
	parse (Ljava/lang/String;)Lcom/mojang/realmsclient/dto/PendingInvitesList; a
com/mojang/realmsclient/dto/PingResult dil
	pingResults a
	worldIds b
com/mojang/realmsclient/dto/PlayerInfo dim
	accepted d
	name a
	online e
	operator c
	uuid b
	getAccepted ()Z d
	getName ()Ljava/lang/String; a
	getOnline ()Z e
	getUuid ()Ljava/lang/String; b
	isOperator ()Z c
	setAccepted (Z)V b
	setName (Ljava/lang/String;)V a
	setOnline (Z)V c
	setOperator (Z)V a
	setUuid (Ljava/lang/String;)V b
com/mojang/realmsclient/dto/RealmsDescriptionDto din
	description b
	name a
com/mojang/realmsclient/dto/RealmsNews dio
	LOGGER b
	newsLink a
	parse (Ljava/lang/String;)Lcom/mojang/realmsclient/dto/RealmsNews; a
com/mojang/realmsclient/dto/RealmsServer dip
	LOGGER s
	activeSlot n
	daysLeft l
	expired j
	expiredTrial k
	id a
	minigameId p
	minigameImage q
	minigameName o
	motd d
	name c
	owner f
	ownerUUID g
	players h
	remoteSubscriptionId b
	serverPing r
	slots i
	state e
	worldType m
	clone ()Lcom/mojang/realmsclient/dto/RealmsServer; d
	cloneSlots (Ljava/util/Map;)Ljava/util/Map; a
	createEmptySlots ()Ljava/util/Map; e
	getDescription ()Ljava/lang/String; a
	getMinigameName ()Ljava/lang/String; c
	getName ()Ljava/lang/String; b
	getState (Ljava/lang/String;)Lcom/mojang/realmsclient/dto/RealmsServer$State; d
	getWorldName (I)Ljava/lang/String; a
	getWorldType (Ljava/lang/String;)Lcom/mojang/realmsclient/dto/RealmsServer$WorldType; e
	parse (Lcom/google/gson/JsonObject;)Lcom/mojang/realmsclient/dto/RealmsServer; a
	parse (Ljava/lang/String;)Lcom/mojang/realmsclient/dto/RealmsServer; c
	parseInvited (Lcom/google/gson/JsonArray;)Ljava/util/List; a
	parseSlots (Lcom/google/gson/JsonArray;)Ljava/util/Map; b
	setDescription (Ljava/lang/String;)V b
	setName (Ljava/lang/String;)V a
	sortInvited (Lcom/mojang/realmsclient/dto/RealmsServer;)V a
	updateServerPing (Lcom/mojang/realmsclient/dto/RealmsServerPlayerList;)V a
com/mojang/realmsclient/dto/RealmsServer$McoServerComparator dip$a
	refOwner a
	compare (Lcom/mojang/realmsclient/dto/RealmsServer;Lcom/mojang/realmsclient/dto/RealmsServer;)I a
com/mojang/realmsclient/dto/RealmsServer$State dip$b
	$VALUES d
	CLOSED a
	OPEN b
	UNINITIALIZED c
com/mojang/realmsclient/dto/RealmsServer$WorldType dip$c
	$VALUES f
	ADVENTUREMAP c
	EXPERIENCE d
	INSPIRATION e
	MINIGAME b
	NORMAL a
com/mojang/realmsclient/dto/RealmsServerAddress diq
	LOGGER d
	address a
	resourcePackHash c
	resourcePackUrl b
	parse (Ljava/lang/String;)Lcom/mojang/realmsclient/dto/RealmsServerAddress; a
com/mojang/realmsclient/dto/RealmsServerList dir
	LOGGER b
	servers a
	parse (Ljava/lang/String;)Lcom/mojang/realmsclient/dto/RealmsServerList; a
com/mojang/realmsclient/dto/RealmsServerPing dis
	nrOfPlayers a
	playerList b
com/mojang/realmsclient/dto/RealmsServerPlayerList dit
	JSON_PARSER d
	LOGGER c
	players b
	serverId a
	parse (Lcom/google/gson/JsonObject;)Lcom/mojang/realmsclient/dto/RealmsServerPlayerList; a
	parsePlayers (Lcom/google/gson/JsonArray;)Ljava/util/List; a
com/mojang/realmsclient/dto/RealmsServerPlayerLists diu
	LOGGER b
	servers a
	parse (Ljava/lang/String;)Lcom/mojang/realmsclient/dto/RealmsServerPlayerLists; a
com/mojang/realmsclient/dto/RealmsWorldOptions div
	DEFAULT_TEMPLATE_IMAGE o
	adventureMap m
	commandBlocks f
	difficulty h
	empty n
	forceGameMode g
	gameMode i
	pvp a
	slotName j
	spawnAnimals b
	spawnMonsters c
	spawnNPCs d
	spawnProtection e
	templateId k
	templateImage l
	clone ()Lcom/mojang/realmsclient/dto/RealmsWorldOptions; d
	createDefaults ()Lcom/mojang/realmsclient/dto/RealmsWorldOptions; a
	createEmptyDefaults ()Lcom/mojang/realmsclient/dto/RealmsWorldOptions; b
	getDefaultSlotName (I)Ljava/lang/String; b
	getSlotName (I)Ljava/lang/String; a
	parse (Lcom/google/gson/JsonObject;)Lcom/mojang/realmsclient/dto/RealmsWorldOptions; a
	setEmpty (Z)V a
	toJson ()Ljava/lang/String; c
com/mojang/realmsclient/dto/RealmsWorldResetDto diw
	generateStructures d
	levelType c
	seed a
	worldTemplateId b
com/mojang/realmsclient/dto/ReflectionBasedSerialization dix
com/mojang/realmsclient/dto/RegionPingResult diy
	ping b
	regionName a
	ping ()I a
com/mojang/realmsclient/dto/Subscription diz
	LOGGER d
	daysLeft b
	startDate a
	type c
	parse (Ljava/lang/String;)Lcom/mojang/realmsclient/dto/Subscription; a
	typeFrom (Ljava/lang/String;)Lcom/mojang/realmsclient/dto/Subscription$SubscriptionType; b
com/mojang/realmsclient/dto/Subscription$SubscriptionType diz$a
	$VALUES c
	NORMAL a
	RECURRING b
com/mojang/realmsclient/dto/UploadInfo dja
	LOGGER a
	port e
	token c
	uploadEndpoint d
	worldClosed b
	getPort ()I d
	getToken ()Ljava/lang/String; a
	getUploadEndpoint ()Ljava/lang/String; b
	isWorldClosed ()Z c
	parse (Ljava/lang/String;)Lcom/mojang/realmsclient/dto/UploadInfo; a
	setToken (Ljava/lang/String;)V b
com/mojang/realmsclient/dto/ValueObject djb
	getName (Ljava/lang/reflect/Field;)Ljava/lang/String; a
	isStatic (Ljava/lang/reflect/Field;)Z b
com/mojang/realmsclient/dto/WorldDownload djc
	LOGGER d
	downloadLink a
	resourcePackHash c
	resourcePackUrl b
	parse (Ljava/lang/String;)Lcom/mojang/realmsclient/dto/WorldDownload; a
com/mojang/realmsclient/dto/WorldTemplate djd
	LOGGER j
	author d
	id a
	image f
	link e
	name b
	recommendedPlayers h
	trailer g
	type i
	version c
	parse (Lcom/google/gson/JsonObject;)Lcom/mojang/realmsclient/dto/WorldTemplate; a
com/mojang/realmsclient/dto/WorldTemplate$WorldTemplateType djd$a
	$VALUES f
	ADVENTUREMAP c
	EXPERIENCE d
	INSPIRATION e
	MINIGAME b
	WORLD_TEMPLATE a
com/mojang/realmsclient/dto/WorldTemplatePaginatedList dje
	LOGGER e
	page b
	size c
	templates a
	total d
	parse (Ljava/lang/String;)Lcom/mojang/realmsclient/dto/WorldTemplatePaginatedList; a
com/mojang/realmsclient/exception/RealmsDefaultUncaughtExceptionHandler djf
	logger a
com/mojang/realmsclient/exception/RealmsHttpException djg
com/mojang/realmsclient/exception/RealmsServiceException djh
	errorCode c
	errorMsg d
	httpResponseContent b
	httpResultCode a
com/mojang/realmsclient/exception/RetryCallException dji
	delaySeconds e
com/mojang/realmsclient/gui/ErrorCallback djj
	error (Ljava/lang/String;)V a
	error (Lnet/minecraft/network/chat/Component;)V a
com/mojang/realmsclient/gui/RealmsDataFetcher djk
	LOGGER a
	fetchStatus u
	hasUnreadNews n
	liveStatsScheduledFuture s
	liveStatsTask g
	livestats k
	newsLink o
	pendingInviteScheduledFuture q
	pendingInviteUpdateTask e
	pendingInvitesCount l
	removedServers i
	scheduler b
	serverListScheduledFuture p
	serverListUpdateTask d
	servers j
	stopped c
	trialAvailabilityTask f
	trialAvailable m
	trialAvailableScheduledFuture r
	unreadNewsScheduledFuture t
	unreadNewsTask h
	cancelTasks ()V o
	forceUpdate ()V e
	getLivestats ()Lcom/mojang/realmsclient/dto/RealmsServerPlayerLists; i
	getPendingInvitesCount ()I g
	getServers ()Ljava/util/List; f
	hasUnreadNews ()Z j
	init ()V b
	initWithSpecificTaskList ()V c
	isActive ()Z p
	isFetchedSinceLastTry (Lcom/mojang/realmsclient/gui/RealmsDataFetcher$Task;)Z a
	isStopped ()Z a
	isTrialAvailable ()Z h
	markClean ()V d
	newsLink ()Ljava/lang/String; k
	removeItem (Lcom/mojang/realmsclient/dto/RealmsServer;)V a
	scheduleTasks ()V n
	setServers (Ljava/util/List;)V a
	stop ()V l
com/mojang/realmsclient/gui/RealmsDataFetcher$LiveStatsTask djk$a
	getLiveStats ()V a
com/mojang/realmsclient/gui/RealmsDataFetcher$PendingInviteUpdateTask djk$b
	updatePendingInvites ()V a
com/mojang/realmsclient/gui/RealmsDataFetcher$ServerListUpdateTask djk$c
	updateServersList ()V a
com/mojang/realmsclient/gui/RealmsDataFetcher$Task djk$d
	$VALUES f
	LIVE_STATS d
	PENDING_INVITE b
	SERVER_LIST a
	TRIAL_AVAILABLE c
	UNREAD_NEWS e
com/mojang/realmsclient/gui/RealmsDataFetcher$TrialAvailabilityTask djk$e
	getTrialAvailable ()V a
com/mojang/realmsclient/gui/RealmsDataFetcher$UnreadNewsTask djk$f
	getUnreadNews ()V a
com/mojang/realmsclient/gui/RealmsWorldSlotButton djl
	DEFAULT_WORLD_SLOT_1 c
	DEFAULT_WORLD_SLOT_2 d
	DEFAULT_WORLD_SLOT_3 e
	EMPTY_SLOT_LOCATION b
	SLOT_FRAME_LOCATION a
	animTick y
	serverDataProvider v
	slotIndex x
	state z
	toolTipSetter w
	drawSlotFrame (Lcom/mojang/blaze3d/vertex/PoseStack;IIIIZLjava/lang/String;IJLjava/lang/String;ZZLcom/mojang/realmsclient/gui/RealmsWorldSlotButton$Action;Lnet/minecraft/network/chat/Component;)V a
	getAction (Lcom/mojang/realmsclient/dto/RealmsServer;ZZ)Lcom/mojang/realmsclient/gui/RealmsWorldSlotButton$Action; a
	getState ()Lcom/mojang/realmsclient/gui/RealmsWorldSlotButton$State; a
	getTooltipAndNarration (Lcom/mojang/realmsclient/dto/RealmsServer;Ljava/lang/String;ZZLcom/mojang/realmsclient/gui/RealmsWorldSlotButton$Action;)Lcom/mojang/datafixers/util/Pair; a
	renderButton (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V b
	tick ()V d
com/mojang/realmsclient/gui/RealmsWorldSlotButton$Action djl$a
	$VALUES d
	JOIN c
	NOTHING a
	SWITCH_SLOT b
com/mojang/realmsclient/gui/RealmsWorldSlotButton$State djl$b
	action c
	actionPrompt h
	empty a
	image g
	imageId f
	isCurrentlyActiveSlot d
	minigame b
	slotName e
com/mojang/realmsclient/gui/RowButton djm
	height b
	width a
	xOffset c
	yOffset d
	draw (Lcom/mojang/blaze3d/vertex/PoseStack;IIZ)V a
	drawButtonsInRow (Lcom/mojang/blaze3d/vertex/PoseStack;Ljava/util/List;Lnet/minecraft/realms/RealmsObjectSelectionList;IIII)V a
	drawForRowAt (Lcom/mojang/blaze3d/vertex/PoseStack;IIII)V a
	getBottom ()I b
	getRight ()I a
	onClick (I)V a
	rowButtonMouseClicked (Lnet/minecraft/realms/RealmsObjectSelectionList;Lnet/minecraft/client/gui/components/ObjectSelectionList$Entry;Ljava/util/List;IDD)V a
com/mojang/realmsclient/gui/screens/RealmsBackupInfoScreen djn
	backup b
	backupInfoList c
	lastScreen a
	checkForSpecificMetadata (Ljava/lang/String;Ljava/lang/String;)Lnet/minecraft/network/chat/Component; a
	gameDifficultyMetadata (Ljava/lang/String;)Lnet/minecraft/network/chat/Component; a
	gameModeMetadata (Ljava/lang/String;)Lnet/minecraft/network/chat/Component; b
	init ()V b
	keyPressed (III)Z a
	removed ()V e
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V a
	tick ()V d
com/mojang/realmsclient/gui/screens/RealmsBackupInfoScreen$BackupInfoList djn$a
com/mojang/realmsclient/gui/screens/RealmsBackupInfoScreen$BackupInfoListEntry djn$b
	key b
	value c
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIIIIIIZF)V a
com/mojang/realmsclient/gui/screens/RealmsBackupScreen djo
	LOGGER a
	PLUS_ICON_LOCATION b
	RESTORE_ICON_LOCATION c
	backupObjectSelectionList t
	backups r
	changesButton y
	downloadButton w
	lastScreen q
	lastScrollPosition p
	noBackups z
	restoreButton x
	selectedBackup u
	serverData A
	slotId v
	titleLabel B
	toolTip s
	addToChangeList (Lcom/mojang/realmsclient/dto/Backup;Ljava/lang/String;)V a
	downloadClicked ()V n
	downloadWorldData ()V v
	generateChangeList ()V i
	init ()V b
	keyPressed (III)Z a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V a
	renderMousehoverTooltip (Lcom/mojang/blaze3d/vertex/PoseStack;Ljava/lang/String;II)V a
	restore ()V w
	restoreClicked (I)V b
	shouldChangesButtonBeVisible ()Z l
	shouldRestoreButtonBeVisible ()Z m
	updateButtonStates ()V k
com/mojang/realmsclient/gui/screens/RealmsBackupScreen$BackupObjectSelectionList djo$a
	addEntry (Lcom/mojang/realmsclient/dto/Backup;)V a
	getMaxPosition ()I c
	getRowWidth ()I d
	getScrollbarPosition ()I e
	isFocused ()Z b
	itemClicked (IIDDI)V a
	mouseClicked (DDI)Z a
	renderBackground (Lcom/mojang/blaze3d/vertex/PoseStack;)V a
	selectInviteListItem (I)V b
	selectItem (I)V a
	setSelected (Lcom/mojang/realmsclient/gui/screens/RealmsBackupScreen$Entry;)V a
	setSelected (Lnet/minecraft/client/gui/components/AbstractSelectionList$Entry;)V a
com/mojang/realmsclient/gui/screens/RealmsBackupScreen$Entry djo$b
	backup b
	drawInfo (Lcom/mojang/blaze3d/vertex/PoseStack;IIII)V b
	drawRestore (Lcom/mojang/blaze3d/vertex/PoseStack;IIII)V a
	getMediumDatePresentation (Ljava/util/Date;)Ljava/lang/String; a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIIIIIIZF)V a
	renderBackupItem (Lcom/mojang/blaze3d/vertex/PoseStack;Lcom/mojang/realmsclient/dto/Backup;IIII)V a
com/mojang/realmsclient/gui/screens/RealmsBrokenWorldScreen djp
	LOGGER a
	animTick w
	header r
	lastScreen b
	leftX t
	mainScreen c
	message s
	rightX u
	serverData p
	serverId q
	slotsThatHasBeenDownloaded v
	addButtons ()V i
	backButtonClicked ()V k
	doSwitchOrReset ()V a
	downloadWorld (I)V b
	drawSlotFrame (Lcom/mojang/blaze3d/vertex/PoseStack;IIIIZLjava/lang/String;IJLjava/lang/String;Z)V a
	fetchServerData (J)V a
	getFramePositionX (I)I a
	init ()V b
	isMinigame ()Z l
	keyPressed (III)Z a
	removed ()V e
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V a
	tick ()V d
com/mojang/realmsclient/gui/screens/RealmsClientOutdatedScreen djq
	lastScreen a
	outdated b
	init ()V b
	keyPressed (III)Z a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V a
com/mojang/realmsclient/gui/screens/RealmsConfigureWorldScreen djr
	EXPIRED_ICON_LOCATION p
	EXPIRES_SOON_ICON_LOCATION q
	LOGGER a
	OFF_ICON_LOCATION c
	ON_ICON_LOCATION b
	animTick F
	backupButton B
	clicks G
	lastScreen s
	leftX v
	optionsButton A
	playersButton x
	resetWorldButton C
	rightX w
	serverData t
	serverId u
	settingsButton y
	stateChanged E
	subscriptionButton z
	switchMinigameButton D
	toolTip r
	addSlotButton (I)V a
	backButtonClicked ()V i
	callback (Lcom/mojang/realmsclient/dto/WorldTemplate;)V a
	centerButton (II)I b
	closeTheWorld (Lnet/minecraft/client/gui/screens/Screen;)V a
	disableButtons ()V k
	drawClose (Lcom/mojang/blaze3d/vertex/PoseStack;IIII)V f
	drawExpired (Lcom/mojang/blaze3d/vertex/PoseStack;IIII)V d
	drawExpiring (Lcom/mojang/blaze3d/vertex/PoseStack;IIIII)V b
	drawOpen (Lcom/mojang/blaze3d/vertex/PoseStack;IIII)V e
	drawServerStatus (Lcom/mojang/blaze3d/vertex/PoseStack;IIII)V c
	fetchServerData (J)V a
	frame (I)I c
	getNewScreen ()Lcom/mojang/realmsclient/gui/screens/RealmsConfigureWorldScreen; c
	hide (Lnet/minecraft/client/gui/components/Button;)V a
	hideMinigameButtons ()V v
	hideRegularButtons ()V n
	init ()V b
	isMinigame ()Z m
	joinRealm (Lcom/mojang/realmsclient/dto/RealmsServer;)V a
	keyPressed (III)Z a
	leftButton (I)I b
	openTheWorld (ZLnet/minecraft/client/gui/screens/Screen;)V a
	removed ()V e
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V a
	renderMousehoverTooltip (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/network/chat/Component;II)V a
	saveSettings (Ljava/lang/String;Ljava/lang/String;)V a
	saveSlotSettings (Lcom/mojang/realmsclient/dto/RealmsWorldOptions;)V a
	show (Lnet/minecraft/client/gui/components/Button;)V b
	stateChanged ()V a
	switchToEmptySlot (ILcom/mojang/realmsclient/dto/RealmsServer;)V b
	switchToFullSlot (ILcom/mojang/realmsclient/dto/RealmsServer;)V a
	switchToMinigame ()V l
	tick ()V d
com/mojang/realmsclient/gui/screens/RealmsConfirmScreen djs
	callback a
	delayTicker p
	title1 b
	title2 c
	init ()V b
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V a
	tick ()V d
com/mojang/realmsclient/gui/screens/RealmsCreateRealmScreen djt
	createButton q
	createRealmLabel r
	descriptionBox p
	lastScreen b
	nameBox c
	server a
	charTyped (CI)Z a
	createWorld ()V i
	init ()V b
	keyPressed (III)Z a
	removed ()V e
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V a
	tick ()V d
	valid ()Z k
com/mojang/realmsclient/gui/screens/RealmsDownloadLatestWorldScreen dju
	DOTS G
	DOWNLOAD_LOCK b
	LOGGER a
	animTick F
	bytesPersSecond E
	callback J
	cancelButton s
	cancelled y
	checked I
	dotIndex H
	downloadStatus u
	downloadTitle q
	errorMessage v
	extracting B
	finished A
	lastScreen c
	narrationRateLimiter r
	previousTimeSnapshot D
	previousWrittenBytes C
	progress x
	showDots z
	status w
	worldDownload p
	worldName t
	backButtonClicked ()V k
	checkDownloadSize ()V i
	downloadCancelled ()V m
	downloadSave ()V l
	drawDots (Lcom/mojang/blaze3d/vertex/PoseStack;)V b
	drawDownloadSpeed (Lcom/mojang/blaze3d/vertex/PoseStack;)V d
	drawDownloadSpeed0 (Lcom/mojang/blaze3d/vertex/PoseStack;J)V a
	drawProgressBar (Lcom/mojang/blaze3d/vertex/PoseStack;)V c
	getContentLength (Ljava/lang/String;)J a
	init ()V b
	keyPressed (III)Z a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V a
	tick ()V d
com/mojang/realmsclient/gui/screens/RealmsDownloadLatestWorldScreen$DownloadStatus dju$a
	bytesWritten a
	totalBytes b
com/mojang/realmsclient/gui/screens/RealmsGenericErrorScreen djv
	line1 b
	line2 c
	nextScreen a
	errorMessage (Lcom/mojang/realmsclient/exception/RealmsServiceException;)V a
	errorMessage (Lnet/minecraft/network/chat/Component;)V a
	errorMessage (Lnet/minecraft/network/chat/Component;Lnet/minecraft/network/chat/Component;)V a
	init ()V b
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V a
com/mojang/realmsclient/gui/screens/RealmsInviteScreen djw
	LOGGER a
	configureScreen p
	errorMsg r
	lastScreen q
	profileName b
	serverData c
	showError s
	init ()V b
	keyPressed (III)Z a
	onInvite ()V i
	removed ()V e
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V a
	showError (Ljava/lang/String;)V a
	tick ()V d
com/mojang/realmsclient/gui/screens/RealmsLongConfirmationScreen djx
	callback a
	line2 c
	line3 p
	type b
	yesNoQuestion q
	init ()V b
	keyPressed (III)Z a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V a
com/mojang/realmsclient/gui/screens/RealmsLongConfirmationScreen$Type djx$a
	$VALUES e
	Info b
	Warning a
	colorCode c
	text d
com/mojang/realmsclient/gui/screens/RealmsLongRunningMcoTaskScreen djy
	LOGGER b
	SYMBOLS a
	aborted s
	animTicks t
	buttonLength v
	error q
	errorMessage r
	lastScreen c
	task u
	title p
	aborted ()Z c
	buttonsClear ()V a
	cancelOrBackButtonClicked ()V i
	error (Lnet/minecraft/network/chat/Component;)V a
	init ()V b
	keyPressed (III)Z a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V a
	setTitle (Ljava/lang/String;)V b
	tick ()V d
com/mojang/realmsclient/gui/screens/RealmsNotificationsScreen djz
	INVITE_ICON_LOCATION a
	NEWS_ICON_LOCATION c
	REALMS_DATA_FETCHER p
	TRIAL_ICON_LOCATION b
	checkedMcoAvailability r
	hasUnreadNews u
	numberOfPendingInvites q
	trialAvailable s
	validClient t
	checkIfMcoEnabled ()V l
	drawIcons (Lcom/mojang/blaze3d/vertex/PoseStack;II)V a
	getRealmsNotificationsEnabled ()Z i
	inTitleScreen ()Z k
	init ()V b
	removed ()V e
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V a
	tick ()V d
com/mojang/realmsclient/gui/screens/RealmsParentalConsentScreen dka
	nextScreen a
	init ()V b
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V a
com/mojang/realmsclient/gui/screens/RealmsPendingInvitesScreen dkb
	ACCEPT_ICON_LOCATION b
	LOGGER a
	REJECT_ICON_LOCATION c
	acceptButton v
	lastScreen p
	loaded r
	pendingInvitationSelectionList s
	rejectButton w
	selectedInvite u
	titleLabel t
	toolTip q
	accept (I)V c
	init ()V b
	keyPressed (III)Z a
	reject (I)V b
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V a
	renderMousehoverTooltip (Lcom/mojang/blaze3d/vertex/PoseStack;Ljava/lang/String;II)V a
	shouldAcceptAndRejectButtonBeVisible (I)Z d
	updateButtonStates ()V i
	updateList (I)V a
com/mojang/realmsclient/gui/screens/RealmsPendingInvitesScreen$Entry dkb$a
	pendingInvite b
	rowButtons c
	mouseClicked (DDI)Z a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIIIIIIZF)V a
	renderPendingInvitationItem (Lcom/mojang/blaze3d/vertex/PoseStack;Lcom/mojang/realmsclient/dto/PendingInvite;IIII)V a
com/mojang/realmsclient/gui/screens/RealmsPendingInvitesScreen$Entry$AcceptRowButton dkb$a$a
	draw (Lcom/mojang/blaze3d/vertex/PoseStack;IIZ)V a
	onClick (I)V a
com/mojang/realmsclient/gui/screens/RealmsPendingInvitesScreen$Entry$RejectRowButton dkb$a$b
	draw (Lcom/mojang/blaze3d/vertex/PoseStack;IIZ)V a
	onClick (I)V a
com/mojang/realmsclient/gui/screens/RealmsPendingInvitesScreen$PendingInvitationSelectionList dkb$b
	getMaxPosition ()I c
	getRowWidth ()I d
	isFocused ()Z b
	removeAtIndex (I)V b
	renderBackground (Lcom/mojang/blaze3d/vertex/PoseStack;)V a
	selectInviteListItem (I)V c
	selectItem (I)V a
	setSelected (Lcom/mojang/realmsclient/gui/screens/RealmsPendingInvitesScreen$Entry;)V a
	setSelected (Lnet/minecraft/client/gui/components/AbstractSelectionList$Entry;)V a
com/mojang/realmsclient/gui/screens/RealmsPlayerScreen dkc
	CROSS_ICON_LOCATION p
	LOGGER a
	OPTIONS_BACKGROUND q
	OP_ICON_LOCATION b
	USER_ICON_LOCATION c
	column1X v
	column2X x
	columnWidth w
	invitedObjectSelectionList u
	lastScreen s
	opdeopButton z
	player C
	removeButton y
	selectedInvited B
	selectedInvitedIndex A
	serverData t
	stateChanged D
	titleLabel E
	toolTip r
	backButtonClicked ()V k
	deleteFromInvitedList (I)V p
	deop (I)V n
	drawNormal (Lcom/mojang/blaze3d/vertex/PoseStack;IIII)V e
	drawOpped (Lcom/mojang/blaze3d/vertex/PoseStack;IIII)V d
	drawRemoveIcon (Lcom/mojang/blaze3d/vertex/PoseStack;IIII)V c
	init ()V b
	keyPressed (III)Z a
	op (I)V m
	removed ()V e
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V a
	renderMousehoverTooltip (Lcom/mojang/blaze3d/vertex/PoseStack;Ljava/lang/String;II)V a
	shouldRemoveAndOpdeopButtonBeVisible (I)Z l
	uninvite (I)V o
	updateButtonStates ()V i
	updateOps (Lcom/mojang/realmsclient/dto/Ops;)V a
com/mojang/realmsclient/gui/screens/RealmsPlayerScreen$Entry dkc$a
	playerInfo b
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIIIIIIZF)V a
	renderInvitedItem (Lcom/mojang/blaze3d/vertex/PoseStack;Lcom/mojang/realmsclient/dto/PlayerInfo;IIII)V a
com/mojang/realmsclient/gui/screens/RealmsPlayerScreen$InvitedObjectSelectionList dkc$b
	addEntry (Lcom/mojang/realmsclient/dto/PlayerInfo;)V a
	getMaxPosition ()I c
	getRowWidth ()I d
	getScrollbarPosition ()I e
	isFocused ()Z b
	itemClicked (IIDDI)V a
	mouseClicked (DDI)Z a
	renderBackground (Lcom/mojang/blaze3d/vertex/PoseStack;)V a
	selectInviteListItem (I)V b
	selectItem (I)V a
	setSelected (Lcom/mojang/realmsclient/gui/screens/RealmsPlayerScreen$Entry;)V a
	setSelected (Lnet/minecraft/client/gui/components/AbstractSelectionList$Entry;)V a
com/mojang/realmsclient/gui/screens/RealmsResetNormalWorldScreen dkd
	buttonTitle s
	generateStructures p
	lastScreen a
	levelTypeIndex q
	levelTypes r
	seedEdit c
	titleLabel b
	generateStructuresTitle ()Lnet/minecraft/network/chat/Component; k
	init ()V b
	keyPressed (III)Z a
	levelTypeTitle ()Lnet/minecraft/network/chat/Component; i
	removed ()V e
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V a
	tick ()V d
com/mojang/realmsclient/gui/screens/RealmsResetWorldScreen dke
	ADVENTURE_MAP_LOCATION y
	EXPERIENCE_LOCATION B
	INSPIRATION_LOCATION C
	LOGGER b
	NEW_WORLD_LOCATION A
	SLOT_FRAME_LOCATION w
	SURVIVAL_SPAWN_LOCATION z
	UPLOAD_LOCATION x
	adventuremaps E
	buttonTitle u
	callback M
	experiences F
	inspirations G
	lastScreen c
	resetTitle K
	resetWorldRunnable L
	serverData p
	slot a
	subtitle t
	subtitleColor v
	subtitleLabel r
	templates D
	title s
	titleLabel q
	typeToReset H
	worldInfoToReset I
	worldTemplateToReset J
	callback (Lcom/mojang/realmsclient/dto/WorldTemplate;)V a
	drawFrame (Lcom/mojang/blaze3d/vertex/PoseStack;IILnet/minecraft/network/chat/Component;Lnet/minecraft/resources/ResourceLocation;ZZ)V a
	frame (I)I b
	init ()V b
	keyPressed (III)Z a
	removed ()V e
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V a
	resetWorld (Lcom/mojang/realmsclient/gui/screens/RealmsResetWorldScreen$ResetWorldInfo;)V a
	resetWorld (Ljava/lang/String;Lcom/mojang/realmsclient/dto/WorldTemplate;IZ)V a
	resetWorldWithTemplate (Lcom/mojang/realmsclient/dto/WorldTemplate;)V b
	setResetTitle (Ljava/lang/String;)V a
	setSlot (I)V a
	switchSlot ()V i
	switchSlot (Ljava/lang/Runnable;)V a
	triggerResetWorld (Lcom/mojang/realmsclient/gui/screens/RealmsResetWorldScreen$ResetWorldInfo;)V b
com/mojang/realmsclient/gui/screens/RealmsResetWorldScreen$FrameButton dke$a
	image b
	renderButton (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V b
com/mojang/realmsclient/gui/screens/RealmsResetWorldScreen$ResetType dke$b
	$VALUES h
	ADVENTURE d
	EXPERIENCE f
	GENERATE b
	INSPIRATION g
	NONE a
	SURVIVAL_SPAWN e
	UPLOAD c
com/mojang/realmsclient/gui/screens/RealmsResetWorldScreen$ResetWorldInfo dke$c
	generateStructures c
	levelType b
	seed a
com/mojang/realmsclient/gui/screens/RealmsScreenWithCallback dkf
	callback (Lcom/mojang/realmsclient/dto/WorldTemplate;)V a
com/mojang/realmsclient/gui/screens/RealmsSelectFileToUploadScreen dkg
	DATE_FORMAT b
	LOGGER a
	callback A
	conversionLang w
	lastScreen c
	levelList s
	noWorldsLabel z
	selectedWorld t
	slotId q
	subtitleLabel y
	titleLabel x
	uploadButton r
	worldId p
	worldLang v
	worldSelectionList u
	formatLastPlayed (Lnet/minecraft/world/level/storage/LevelSummary;)Ljava/lang/String; d
	gameModeName (Lnet/minecraft/world/level/storage/LevelSummary;)Ljava/lang/String; c
	init ()V b
	keyPressed (III)Z a
	loadLevelList ()V i
	removed ()V e
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V a
	upload ()V k
com/mojang/realmsclient/gui/screens/RealmsSelectFileToUploadScreen$Entry dkg$a
	levelSummary b
	mouseClicked (DDI)Z a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIIIIIIZF)V a
	renderItem (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/world/level/storage/LevelSummary;III)V a
com/mojang/realmsclient/gui/screens/RealmsSelectFileToUploadScreen$WorldSelectionList dkg$b
	addEntry (Lnet/minecraft/world/level/storage/LevelSummary;)V a
	getMaxPosition ()I c
	isFocused ()Z b
	renderBackground (Lcom/mojang/blaze3d/vertex/PoseStack;)V a
	selectItem (I)V a
	setSelected (Lcom/mojang/realmsclient/gui/screens/RealmsSelectFileToUploadScreen$Entry;)V a
	setSelected (Lnet/minecraft/client/gui/components/AbstractSelectionList$Entry;)V a
com/mojang/realmsclient/gui/screens/RealmsSelectWorldTemplateScreen dkh
	LINK_ICON b
	LOGGER a
	SLOT_FRAME_LOCATION p
	TRAILER_ICON c
	clicks A
	currentLink y
	displayWarning D
	hoverWarning E
	lastScreen q
	noTemplatesMessage F
	publisherButton w
	selectButton u
	selectedTemplate s
	title t
	toolTip x
	trailerButton v
	warning B
	warningURL C
	worldTemplateObjectSelectionList r
	worldType z
	backButtonClicked ()V v
	fetchTemplates (Lcom/mojang/realmsclient/dto/WorldTemplatePaginatedList;Lcom/mojang/realmsclient/client/RealmsClient;)Lcom/mojang/datafixers/util/Either; a
	fetchTemplatesAsync (Lcom/mojang/realmsclient/dto/WorldTemplatePaginatedList;)V a
	getSelectedTemplate ()Lcom/mojang/realmsclient/dto/WorldTemplate; m
	hasValidTemplate ()Z x
	init ()V b
	keyPressed (III)Z a
	mouseClicked (DDI)Z a
	onPublish ()V z
	onTrailer ()V y
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V a
	renderMousehoverTooltip (Lcom/mojang/blaze3d/vertex/PoseStack;Ljava/lang/String;II)V a
	renderMultilineMessage (Lcom/mojang/blaze3d/vertex/PoseStack;IILjava/util/List;)V a
	selectTemplate ()V w
	setTitle (Lnet/minecraft/network/chat/Component;)V a
	setWarning ([Lnet/minecraft/network/chat/Component;)V a
	shouldPublisherBeVisible ()Z l
	shouldSelectButtonBeActive ()Z k
	shouldTrailerBeVisible ()Z n
	tick ()V d
	updateButtonStates ()V i
com/mojang/realmsclient/gui/screens/RealmsSelectWorldTemplateScreen$Entry dkh$a
	template b
	drawIcons (Lcom/mojang/blaze3d/vertex/PoseStack;IIIILjava/lang/String;Ljava/lang/String;Ljava/lang/String;)V a
	drawImage (Lcom/mojang/blaze3d/vertex/PoseStack;IIIILcom/mojang/realmsclient/dto/WorldTemplate;)V a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIIIIIIZF)V a
	renderWorldTemplateItem (Lcom/mojang/blaze3d/vertex/PoseStack;Lcom/mojang/realmsclient/dto/WorldTemplate;IIII)V a
com/mojang/realmsclient/gui/screens/RealmsSelectWorldTemplateScreen$WorldTemplateObjectSelectionList dkh$b
	addEntry (Lcom/mojang/realmsclient/dto/WorldTemplate;)V a
	get (I)Lcom/mojang/realmsclient/dto/WorldTemplate; b
	getMaxPosition ()I c
	getRowWidth ()I d
	getTemplates ()Ljava/util/List; g
	isEmpty ()Z f
	isFocused ()Z b
	mouseClicked (DDI)Z a
	renderBackground (Lcom/mojang/blaze3d/vertex/PoseStack;)V a
	selectItem (I)V a
	setSelected (Lcom/mojang/realmsclient/gui/screens/RealmsSelectWorldTemplateScreen$Entry;)V a
	setSelected (Lnet/minecraft/client/gui/components/AbstractSelectionList$Entry;)V a
com/mojang/realmsclient/gui/screens/RealmsSettingsScreen dki
	configureWorldScreen a
	descEdit p
	doneButton c
	nameEdit q
	serverData b
	titleLabel r
	init ()V b
	keyPressed (III)Z a
	removed ()V e
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V a
	save ()V a
	tick ()V d
com/mojang/realmsclient/gui/screens/RealmsSlotOptionsScreen dkj
	DIFFICULTIES a
	GAME_MODES b
	TEXT_OFF q
	TEXT_ON p
	activeSlot x
	column1X s
	column2X u
	columnWidth t
	commandBlocks F
	commandBlocksButton M
	difficulty y
	forceGameMode G
	forceGameModeButton N
	gameMode z
	nameEdit r
	options v
	parent c
	pvp A
	pvpButton H
	spawnAnimals C
	spawnAnimalsButton I
	spawnMonsters D
	spawnMonstersButton J
	spawnNPCs B
	spawnNPCsButton K
	spawnProtection E
	spawnProtectionButton L
	titleLabel O
	warningLabel P
	worldType w
	commandBlocksTitle ()Lnet/minecraft/network/chat/Component; w
	difficultyTitle ()Lnet/minecraft/network/chat/Component; i
	forceGameModeTitle ()Lnet/minecraft/network/chat/Component; x
	gameModeTitle ()Lnet/minecraft/network/chat/Component; k
	getOnOff (Z)Lnet/minecraft/network/chat/Component; c
	getSlotName ()Ljava/lang/String; y
	init ()V b
	keyPressed (III)Z a
	pvpTitle ()Lnet/minecraft/network/chat/Component; l
	removed ()V e
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V a
	saveSettings ()V z
	spawnAnimalsTitle ()Lnet/minecraft/network/chat/Component; m
	spawnMonstersTitle ()Lnet/minecraft/network/chat/Component; n
	spawnNPCsTitle ()Lnet/minecraft/network/chat/Component; v
	tick ()V d
com/mojang/realmsclient/gui/screens/RealmsSlotOptionsScreen$SettingsSlider dkj$a
	maxValue d
	minValue c
	applyValue ()V a
	onClick (DD)V a
	onRelease (DD)V a_
	updateMessage ()V b
com/mojang/realmsclient/gui/screens/RealmsSubscriptionInfoScreen dkk
	LOGGER a
	daysLeft u
	daysLeftLabelText t
	lastScreen b
	mainScreen p
	serverData c
	startDate v
	subscriptionStartLabelText r
	subscriptionTitle q
	timeLeftLabelText s
	type w
	daysLeftPresentation (I)Ljava/lang/String; a
	deleteRealm (Z)V c
	getSubscription (J)V a
	init ()V b
	keyPressed (III)Z a
	localPresentation (J)Ljava/lang/String; b
	removed ()V e
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V a
com/mojang/realmsclient/gui/screens/RealmsTermsScreen dkl
	LOGGER a
	lastScreen b
	mainScreen c
	onLink q
	realmsServer p
	realmsToSUrl r
	agreedToTos ()V i
	init ()V b
	keyPressed (III)Z a
	mouseClicked (DDI)Z a
	removed ()V e
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V a
com/mojang/realmsclient/gui/screens/RealmsUploadScreen dkm
	DOTS c
	LOGGER a
	UPLOAD_LOCK b
	backButton C
	bytesPersSecond H
	callback I
	cancelButton D
	cancelled y
	errorMessage v
	lastScreen p
	narrationRateLimiter u
	previousTimeSnapshot G
	previousWrittenBytes F
	progress x
	selectedLevel q
	showDots A
	slotId s
	status w
	tickCount E
	uploadFinished z
	uploadStarted B
	uploadStatus t
	worldId r
	addFileToTarGz (Lorg/apache/commons/compress/archivers/tar/TarArchiveOutputStream;Ljava/lang/String;Ljava/lang/String;Z)V a
	drawDots (Lcom/mojang/blaze3d/vertex/PoseStack;)V b
	drawProgressBar (Lcom/mojang/blaze3d/vertex/PoseStack;)V c
	drawUploadSpeed (Lcom/mojang/blaze3d/vertex/PoseStack;)V d
	drawUploadSpeed0 (Lcom/mojang/blaze3d/vertex/PoseStack;J)V a
	init ()V b
	keyPressed (III)Z a
	onBack ()V i
	onCancel ()V k
	removed ()V e
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V a
	setErrorMessage ([Lnet/minecraft/network/chat/Component;)V a
	tarGzipArchive (Ljava/io/File;)Ljava/io/File; b
	tick ()V d
	upload ()V l
	uploadCancelled ()V m
	verify (Ljava/io/File;)Z a
com/mojang/realmsclient/gui/screens/UploadResult dkn
	errorMessage b
	statusCode a
com/mojang/realmsclient/gui/screens/UploadResult$Builder dkn$a
	errorMessage b
	statusCode a
	build ()Lcom/mojang/realmsclient/gui/screens/UploadResult; a
	withErrorMessage (Ljava/lang/String;)Lcom/mojang/realmsclient/gui/screens/UploadResult$Builder; a
	withStatusCode (I)Lcom/mojang/realmsclient/gui/screens/UploadResult$Builder; a
com/mojang/realmsclient/util/JsonUtils dko
	getBooleanOr (Ljava/lang/String;Lcom/google/gson/JsonObject;Z)Z a
	getDateOr (Ljava/lang/String;Lcom/google/gson/JsonObject;)Ljava/util/Date; a
	getIntOr (Ljava/lang/String;Lcom/google/gson/JsonObject;I)I a
	getLongOr (Ljava/lang/String;Lcom/google/gson/JsonObject;J)J a
	getStringOr (Ljava/lang/String;Lcom/google/gson/JsonObject;Ljava/lang/String;)Ljava/lang/String; a
com/mojang/realmsclient/util/RealmsPersistence dkp
	GSON a
	getPathToData ()Ljava/io/File; b
	readFile ()Lcom/mojang/realmsclient/util/RealmsPersistence$RealmsPersistenceData; a
	writeFile (Lcom/mojang/realmsclient/util/RealmsPersistence$RealmsPersistenceData;)V a
com/mojang/realmsclient/util/RealmsPersistence$RealmsPersistenceData dkp$a
	hasUnreadNews b
	newsLink a
com/mojang/realmsclient/util/RealmsTextureManager dkq
	FETCHED_SKINS c
	LOGGER d
	SKIN_FETCH_STATUS b
	TEMPLATE_ICON_LOCATION e
	TEXTURES a
	bindDefaultFace (Ljava/util/UUID;)V a
	bindFace (Ljava/lang/String;)V a
	bindWorldTemplate (Ljava/lang/String;Ljava/lang/String;)V a
	getTextureId (Ljava/lang/String;Ljava/lang/String;)I b
	withBoundFace (Ljava/lang/String;Ljava/lang/Runnable;)V a
com/mojang/realmsclient/util/RealmsTextureManager$RealmsTexture dkq$a
	image a
	textureId b
com/mojang/realmsclient/util/RealmsUtil dkr
	AUTHENTICATION_SERVICE b
	SESSION_SERVICE c
	gameProfileCache a
	convertToAgePresentation (J)Ljava/lang/String; a
	convertToAgePresentationFromInstant (Ljava/util/Date;)Ljava/lang/String; a
	getTextures (Ljava/lang/String;)Ljava/util/Map; b
	uuidToName (Ljava/lang/String;)Ljava/lang/String; a
com/mojang/realmsclient/util/SkinProcessor dks
	height c
	pixels a
	width b
	doLegacyTransparencyHack (IIII)V a
	process (Ljava/awt/image/BufferedImage;)Ljava/awt/image/BufferedImage; a
	setNoAlpha (IIII)V b
com/mojang/realmsclient/util/TextRenderingUtils dkt
	decompose (Ljava/lang/String;Ljava/util/List;)Ljava/util/List; a
	decompose (Ljava/lang/String;[Lcom/mojang/realmsclient/util/TextRenderingUtils$LineSegment;)Ljava/util/List; a
	insertLinks (Ljava/util/List;Ljava/util/List;)Ljava/util/List; a
	lineBreak (Ljava/lang/String;)Ljava/util/List; a
	split (Ljava/lang/String;Ljava/lang/String;)Ljava/util/List; a
com/mojang/realmsclient/util/TextRenderingUtils$Line dkt$a
	segments a
com/mojang/realmsclient/util/TextRenderingUtils$LineSegment dkt$b
	fullText a
	linkTitle b
	linkUrl c
	getLinkUrl ()Ljava/lang/String; c
	isLink ()Z b
	link (Ljava/lang/String;Ljava/lang/String;)Lcom/mojang/realmsclient/util/TextRenderingUtils$LineSegment; a
	renderedText ()Ljava/lang/String; a
	text (Ljava/lang/String;)Lcom/mojang/realmsclient/util/TextRenderingUtils$LineSegment; a
com/mojang/realmsclient/util/UploadTokenCache dku
	TOKEN_CACHE a
	get (J)Ljava/lang/String; a
	invalidate (J)V b
	put (JLjava/lang/String;)V a
com/mojang/realmsclient/util/task/CloseServerTask dkv
	configureScreen d
	serverData c
com/mojang/realmsclient/util/task/ConnectTask dkw
	address d
	realmsConnect c
	abortTask ()V a
	tick ()V b
com/mojang/realmsclient/util/task/DownloadTask dkx
	downloadName f
	lastScreen e
	slot d
	worldId c
com/mojang/realmsclient/util/task/GetServerDetailsTask dky
	connectLock f
	lastScreen d
	mainScreen e
	server c
	sleep (I)V b
com/mojang/realmsclient/util/task/LongRunningTask dkz
	LOGGER a
	longRunningMcoTaskScreen b
	abortTask ()V a
	aborted ()Z c
	error (Lnet/minecraft/network/chat/Component;)V a
	init ()V d
	pause (I)V a
	setScreen (Lcom/mojang/realmsclient/gui/screens/RealmsLongRunningMcoTaskScreen;)V a
	setScreen (Lnet/minecraft/client/gui/screens/Screen;)V a
	setTitle (Ljava/lang/String;)V b
	tick ()V b
com/mojang/realmsclient/util/task/OpenServerTask dla
	join e
	mainScreen f
	returnScreen d
	serverData c
com/mojang/realmsclient/util/task/ResettingWorldTask dlb
	callback i
	generateStructures f
	levelType e
	seed c
	serverId g
	title h
	worldTemplate d
com/mojang/realmsclient/util/task/RestoreTask dlc
	backup c
	lastScreen e
	worldId d
com/mojang/realmsclient/util/task/SwitchMinigameTask dld
	lastScreen e
	worldId c
	worldTemplate d
com/mojang/realmsclient/util/task/SwitchSlotTask dle
	callback e
	slot d
	worldId c
com/mojang/realmsclient/util/task/WorldCreationTask dlf
	lastScreen f
	motd d
	name c
	worldId e
net/minecraft/ChatFormatting i
	$VALUES E
	AQUA l
	BLACK a
	BLUE j
	BOLD r
	DARK_AQUA d
	DARK_BLUE b
	DARK_GRAY i
	DARK_GREEN c
	DARK_PURPLE f
	DARK_RED e
	FORMATTING_BY_NAME w
	GOLD g
	GRAY h
	GREEN k
	ITALIC u
	LIGHT_PURPLE n
	OBFUSCATED q
	RED m
	RESET v
	STRIKETHROUGH s
	STRIP_FORMATTING_PATTERN x
	UNDERLINE t
	WHITE p
	YELLOW o
	code z
	color D
	id C
	isFormat A
	name y
	toString B
	cleanName (Ljava/lang/String;)Ljava/lang/String; c
	getByCode (C)Lnet/minecraft/ChatFormatting; a
	getById (I)Lnet/minecraft/ChatFormatting; a
	getByName (Ljava/lang/String;)Lnet/minecraft/ChatFormatting; b
	getChar ()C a
	getColor ()Ljava/lang/Integer; e
	getId ()I b
	getName ()Ljava/lang/String; f
	getNames (ZZ)Ljava/util/Collection; a
	isColor ()Z d
	isFormat ()Z c
	stripFormatting (Ljava/lang/String;)Ljava/lang/String; a
net/minecraft/CrashReport j
	LOGGER a
	details e
	exception c
	saveFile f
	systemDetails d
	title b
	trackingStackTrace g
	uncategorizedStackTrace h
	addCategory (Ljava/lang/String;)Lnet/minecraft/CrashReportCategory; a
	addCategory (Ljava/lang/String;I)Lnet/minecraft/CrashReportCategory; a
	forThrowable (Ljava/lang/Throwable;Ljava/lang/String;)Lnet/minecraft/CrashReport; a
	getDetails ()Ljava/lang/String; c
	getDetails (Ljava/lang/StringBuilder;)V a
	getErrorComment ()Ljava/lang/String; j
	getException ()Ljava/lang/Throwable; b
	getExceptionMessage ()Ljava/lang/String; d
	getFriendlyReport ()Ljava/lang/String; e
	getSaveFile ()Ljava/io/File; f
	getSystemDetails ()Lnet/minecraft/CrashReportCategory; g
	getTitle ()Ljava/lang/String; a
	initDetails ()V i
	preload ()V h
	saveToFile (Ljava/io/File;)Z a
net/minecraft/CrashReportCategory k
	entries c
	report a
	stackTrace d
	title b
	fillInStackTrace (I)I a
	formatLocation (DDD)Ljava/lang/String; a
	formatLocation (III)Ljava/lang/String; a
	formatLocation (Lnet/minecraft/core/BlockPos;)Ljava/lang/String; a
	getDetails (Ljava/lang/StringBuilder;)V a
	getStacktrace ()[Ljava/lang/StackTraceElement; a
	populateBlockDetails (Lnet/minecraft/CrashReportCategory;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V a
	setDetail (Ljava/lang/String;Ljava/lang/Object;)Lnet/minecraft/CrashReportCategory; a
	setDetail (Ljava/lang/String;Lnet/minecraft/CrashReportDetail;)Lnet/minecraft/CrashReportCategory; a
	setDetailError (Ljava/lang/String;Ljava/lang/Throwable;)V a
	trimStacktrace (I)V b
	validateStackTrace (Ljava/lang/StackTraceElement;Ljava/lang/StackTraceElement;)Z a
net/minecraft/CrashReportCategory$Entry k$a
	key a
	value b
	getKey ()Ljava/lang/String; a
	getValue ()Ljava/lang/String; b
net/minecraft/CrashReportDetail l
net/minecraft/DefaultUncaughtExceptionHandler m
	logger a
net/minecraft/DefaultUncaughtExceptionHandlerWithName n
	logger a
net/minecraft/DetectedVersion o
	BUILT_IN a
	LOGGER b
	buildTime i
	id c
	name d
	packVersion h
	protocolVersion g
	releaseTarget j
	stable e
	worldVersion f
	tryDetectVersion ()Lcom/mojang/bridge/game/GameVersion; a
net/minecraft/FieldsAreNonnullByDefault p
net/minecraft/FileUtil q
	COPY_COUNTER_PATTERN a
	RESERVED_WINDOWS_FILENAMES b
	createPathToResource (Ljava/nio/file/Path;Ljava/lang/String;Ljava/lang/String;)Ljava/nio/file/Path; b
	findAvailableName (Ljava/nio/file/Path;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; a
	isPathNormalized (Ljava/nio/file/Path;)Z a
	isPathPortable (Ljava/nio/file/Path;)Z b
net/minecraft/MethodsReturnNonnullByDefault r
net/minecraft/ReportedException s
	report a
	getReport ()Lnet/minecraft/CrashReport; a
net/minecraft/ResourceLocationException t
net/minecraft/SharedConstants u
	CHECK_DATA_FIXER_SCHEMA c
	CURRENT_VERSION f
	ILLEGAL_FILE_CHARACTERS e
	IS_RUNNING_IN_IDE d
	MAXIMUM_TICK_TIME_NANOS b
	NETTY_LEAK_DETECTION a
	filterText (Ljava/lang/String;)Ljava/lang/String; a
	getCurrentVersion ()Lcom/mojang/bridge/game/GameVersion; a
	isAllowedChatCharacter (C)Z a
	setVersion (Lcom/mojang/bridge/game/GameVersion;)V a
net/minecraft/Util v
	BACKGROUND_EXECUTOR e
	BOOTSTRAP_EXECUTOR d
	IO_POOL f
	LOGGER g
	NIL_UUID b
	WORKER_COUNT c
	timeSource a
	backgroundExecutor ()Ljava/util/concurrent/Executor; f
	bootstrapExecutor ()Ljava/util/concurrent/Executor; e
	copyBetweenDirs (Ljava/nio/file/Path;Ljava/nio/file/Path;Ljava/nio/file/Path;)V a
	describeError (Ljava/lang/Throwable;)Ljava/lang/String; d
	doFetchChoiceType (Lcom/mojang/datafixers/DSL$TypeReference;Ljava/lang/String;)Lcom/mojang/datafixers/types/Type; b
	failedFuture (Ljava/lang/Throwable;)Ljava/util/concurrent/CompletableFuture; a
	fetchChoiceType (Lcom/mojang/datafixers/DSL$TypeReference;Ljava/lang/String;)Lcom/mojang/datafixers/types/Type; a
	findNextInIterable (Ljava/lang/Iterable;Ljava/lang/Object;)Ljava/lang/Object; a
	findPreviousInIterable (Ljava/lang/Iterable;Ljava/lang/Object;)Ljava/lang/Object; b
	fixedSize (Ljava/util/stream/IntStream;I)Lcom/mojang/serialization/DataResult; a
	getEpochMillis ()J d
	getMillis ()J b
	getNanos ()J c
	getPlatform ()Lnet/minecraft/Util$OS; i
	getPropertyName (Lnet/minecraft/world/level/block/state/properties/Property;Ljava/lang/Object;)Ljava/lang/String; a
	getRandom ([ILjava/util/Random;)I a
	getRandom ([Ljava/lang/Object;Ljava/util/Random;)Ljava/lang/Object; a
	getVmArguments ()Ljava/util/stream/Stream; j
	identityStrategy ()Lit/unimi/dsi/fastutil/Hash$Strategy; k
	ifElse (Ljava/util/Optional;Ljava/util/function/Consumer;Ljava/lang/Runnable;)Ljava/util/Optional; a
	ioPool ()Ljava/util/concurrent/Executor; g
	lastOf (Ljava/util/List;)Ljava/lang/Object; a
	make (Ljava/lang/Object;Ljava/util/function/Consumer;)Ljava/lang/Object; a
	make (Ljava/util/function/Supplier;)Ljava/lang/Object; a
	makeDescriptionId (Ljava/lang/String;Lnet/minecraft/resources/ResourceLocation;)Ljava/lang/String; a
	makeExecutor (Ljava/lang/String;)Ljava/util/concurrent/ExecutorService; a
	makeIoExecutor ()Ljava/util/concurrent/ExecutorService; n
	name (Ljava/lang/Runnable;Ljava/util/function/Supplier;)Ljava/lang/Runnable; a
	offsetByCodepoints (Ljava/lang/String;II)I a
	onThreadException (Ljava/lang/Thread;Ljava/lang/Throwable;)V a
	pauseInIde (Ljava/lang/Throwable;)Ljava/lang/Throwable; c
	prefix (Ljava/lang/String;Ljava/util/function/Consumer;)Ljava/util/function/Consumer; a
	safeReplaceFile (Ljava/io/File;Ljava/io/File;Ljava/io/File;)V a
	sequence (Ljava/util/List;)Ljava/util/concurrent/CompletableFuture; b
	shutdownExecutor (Ljava/util/concurrent/ExecutorService;)V a
	shutdownExecutors ()V h
	startTimerHackThread ()V l
	throwAsRuntime (Ljava/lang/Throwable;)V b
	toMap ()Ljava/util/stream/Collector; a
	toStream (Ljava/util/Optional;)Ljava/util/stream/Stream; a
net/minecraft/Util$IdentityStrategy v$a
	$VALUES b
	INSTANCE a
net/minecraft/Util$OS v$b
	$VALUES f
	LINUX a
	OSX d
	SOLARIS b
	UNKNOWN e
	WINDOWS c
	getOpenUrlArguments (Ljava/net/URL;)[Ljava/lang/String; b
	openFile (Ljava/io/File;)V a
	openUri (Ljava/lang/String;)V a
	openUri (Ljava/net/URI;)V a
	openUrl (Ljava/net/URL;)V a
net/minecraft/advancements/Advancement w
	chatComponent h
	children g
	criteria e
	display b
	id d
	parent a
	requirements f
	rewards c
	addChild (Lnet/minecraft/advancements/Advancement;)V a
	deconstruct ()Lnet/minecraft/advancements/Advancement$Builder; a
	getChatComponent ()Lnet/minecraft/network/chat/Component; j
	getChildren ()Ljava/lang/Iterable; e
	getCriteria ()Ljava/util/Map; f
	getDisplay ()Lnet/minecraft/advancements/DisplayInfo; c
	getId ()Lnet/minecraft/resources/ResourceLocation; h
	getMaxCriteraRequired ()I g
	getParent ()Lnet/minecraft/advancements/Advancement; b
	getRequirements ()[[Ljava/lang/String; i
	getRewards ()Lnet/minecraft/advancements/AdvancementRewards; d
net/minecraft/advancements/Advancement$Builder w$a
	criteria e
	display c
	parent b
	parentId a
	requirements f
	requirementsStrategy g
	rewards d
	addCriterion (Ljava/lang/String;Lnet/minecraft/advancements/Criterion;)Lnet/minecraft/advancements/Advancement$Builder; a
	addCriterion (Ljava/lang/String;Lnet/minecraft/advancements/CriterionTriggerInstance;)Lnet/minecraft/advancements/Advancement$Builder; a
	advancement ()Lnet/minecraft/advancements/Advancement$Builder; a
	build (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/advancements/Advancement; b
	canBuild (Ljava/util/function/Function;)Z a
	display (Lnet/minecraft/advancements/DisplayInfo;)Lnet/minecraft/advancements/Advancement$Builder; a
	display (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/network/chat/Component;Lnet/minecraft/network/chat/Component;Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/advancements/FrameType;ZZZ)Lnet/minecraft/advancements/Advancement$Builder; a
	display (Lnet/minecraft/world/level/ItemLike;Lnet/minecraft/network/chat/Component;Lnet/minecraft/network/chat/Component;Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/advancements/FrameType;ZZZ)Lnet/minecraft/advancements/Advancement$Builder; a
	fromJson (Lcom/google/gson/JsonObject;Lnet/minecraft/advancements/critereon/DeserializationContext;)Lnet/minecraft/advancements/Advancement$Builder; a
	fromNetwork (Lnet/minecraft/network/FriendlyByteBuf;)Lnet/minecraft/advancements/Advancement$Builder; b
	getCriteria ()Ljava/util/Map; c
	parent (Lnet/minecraft/advancements/Advancement;)Lnet/minecraft/advancements/Advancement$Builder; a
	parent (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/advancements/Advancement$Builder; a
	requirements (Lnet/minecraft/advancements/RequirementsStrategy;)Lnet/minecraft/advancements/Advancement$Builder; a
	requirements ([[Ljava/lang/String;)Lnet/minecraft/advancements/Advancement$Builder; a
	rewards (Lnet/minecraft/advancements/AdvancementRewards$Builder;)Lnet/minecraft/advancements/Advancement$Builder; a
	rewards (Lnet/minecraft/advancements/AdvancementRewards;)Lnet/minecraft/advancements/Advancement$Builder; a
	save (Ljava/util/function/Consumer;Ljava/lang/String;)Lnet/minecraft/advancements/Advancement; a
	serializeToJson ()Lcom/google/gson/JsonObject; b
	serializeToNetwork (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/advancements/AdvancementList x
	LOGGER a
	advancements b
	listener e
	roots c
	tasks d
	add (Ljava/util/Map;)V a
	clear ()V a
	get (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/advancements/Advancement; a
	getAllAdvancements ()Ljava/util/Collection; c
	getRoots ()Ljava/lang/Iterable; b
	remove (Ljava/util/Set;)V a
	remove (Lnet/minecraft/advancements/Advancement;)V a
	setListener (Lnet/minecraft/advancements/AdvancementList$Listener;)V a
net/minecraft/advancements/AdvancementList$Listener x$a
	onAddAdvancementRoot (Lnet/minecraft/advancements/Advancement;)V a
	onAddAdvancementTask (Lnet/minecraft/advancements/Advancement;)V c
	onAdvancementsCleared ()V a
	onRemoveAdvancementRoot (Lnet/minecraft/advancements/Advancement;)V b
	onRemoveAdvancementTask (Lnet/minecraft/advancements/Advancement;)V d
net/minecraft/advancements/AdvancementProgress y
	criteria a
	requirements b
	compareTo (Lnet/minecraft/advancements/AdvancementProgress;)I a
	countCompletedRequirements ()I h
	fromNetwork (Lnet/minecraft/network/FriendlyByteBuf;)Lnet/minecraft/advancements/AdvancementProgress; b
	getCompletedCriteria ()Ljava/lang/Iterable; f
	getCriterion (Ljava/lang/String;)Lnet/minecraft/advancements/CriterionProgress; c
	getFirstProgressDate ()Ljava/util/Date; g
	getPercent ()F c
	getProgressText ()Ljava/lang/String; d
	getRemainingCriteria ()Ljava/lang/Iterable; e
	grantProgress (Ljava/lang/String;)Z a
	hasProgress ()Z b
	isDone ()Z a
	revokeProgress (Ljava/lang/String;)Z b
	serializeToNetwork (Lnet/minecraft/network/FriendlyByteBuf;)V a
	update (Ljava/util/Map;[[Ljava/lang/String;)V a
net/minecraft/advancements/AdvancementProgress$Serializer y$a
	deserialize (Lcom/google/gson/JsonElement;Ljava/lang/reflect/Type;Lcom/google/gson/JsonDeserializationContext;)Lnet/minecraft/advancements/AdvancementProgress; a
	serialize (Lnet/minecraft/advancements/AdvancementProgress;Ljava/lang/reflect/Type;Lcom/google/gson/JsonSerializationContext;)Lcom/google/gson/JsonElement; a
net/minecraft/advancements/AdvancementRewards z
	EMPTY a
	experience b
	function e
	loot c
	recipes d
	deserialize (Lcom/google/gson/JsonObject;)Lnet/minecraft/advancements/AdvancementRewards; a
	getRecipes ()[Lnet/minecraft/resources/ResourceLocation; a
	grant (Lnet/minecraft/server/level/ServerPlayer;)V a
	serializeToJson ()Lcom/google/gson/JsonElement; b
net/minecraft/advancements/AdvancementRewards$Builder z$a
	experience a
	function d
	loot b
	recipes c
	addExperience (I)Lnet/minecraft/advancements/AdvancementRewards$Builder; b
	addLootTable (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/advancements/AdvancementRewards$Builder; b
	addRecipe (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/advancements/AdvancementRewards$Builder; d
	build ()Lnet/minecraft/advancements/AdvancementRewards; a
	experience (I)Lnet/minecraft/advancements/AdvancementRewards$Builder; a
	function (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/advancements/AdvancementRewards$Builder; e
	loot (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/advancements/AdvancementRewards$Builder; a
	recipe (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/advancements/AdvancementRewards$Builder; c
	runs (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/advancements/AdvancementRewards$Builder; f
net/minecraft/advancements/CriteriaTriggers aa
	BAD_OMEN I
	BEE_NEST_DESTROYED K
	BRED_ANIMALS o
	BREWED_POTION k
	CHANGED_DIMENSION v
	CHANNELED_LIGHTNING E
	CONSTRUCT_BEACON l
	CONSUME_ITEM z
	CRITERIA Q
	CURED_ZOMBIE_VILLAGER r
	EFFECTS_CHANGED A
	ENCHANTED_ITEM i
	ENTER_BLOCK d
	ENTITY_HURT_PLAYER h
	ENTITY_KILLED_PLAYER c
	FILLED_BUCKET j
	FISHING_ROD_HOOKED D
	GENERATE_LOOT N
	HONEY_BLOCK_SLIDE J
	IMPOSSIBLE a
	INVENTORY_CHANGED e
	ITEM_DURABILITY_CHANGED t
	ITEM_PICKED_UP_BY_ENTITY O
	ITEM_USED_ON_BLOCK M
	KILLED_BY_CROSSBOW G
	LEVITATION u
	LOCATION p
	NETHER_TRAVEL C
	PLACED_BLOCK y
	PLAYER_HURT_ENTITY g
	PLAYER_INTERACTED_WITH_ENTITY P
	PLAYER_KILLED_ENTITY b
	RAID_WIN H
	RECIPE_UNLOCKED f
	SHOT_CROSSBOW F
	SLEPT_IN_BED q
	SUMMONED_ENTITY n
	TAME_ANIMAL x
	TARGET_BLOCK_HIT L
	TICK w
	TRADE s
	USED_ENDER_EYE m
	USED_TOTEM B
	all ()Ljava/lang/Iterable; a
	getCriterion (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/advancements/CriterionTrigger; a
	register (Lnet/minecraft/advancements/CriterionTrigger;)Lnet/minecraft/advancements/CriterionTrigger; a
net/minecraft/advancements/Criterion ab
	trigger a
	criteriaFromJson (Lcom/google/gson/JsonObject;Lnet/minecraft/advancements/critereon/DeserializationContext;)Ljava/util/Map; b
	criteriaFromNetwork (Lnet/minecraft/network/FriendlyByteBuf;)Ljava/util/Map; c
	criterionFromJson (Lcom/google/gson/JsonObject;Lnet/minecraft/advancements/critereon/DeserializationContext;)Lnet/minecraft/advancements/Criterion; a
	criterionFromNetwork (Lnet/minecraft/network/FriendlyByteBuf;)Lnet/minecraft/advancements/Criterion; b
	getTrigger ()Lnet/minecraft/advancements/CriterionTriggerInstance; a
	serializeToJson ()Lcom/google/gson/JsonElement; b
	serializeToNetwork (Ljava/util/Map;Lnet/minecraft/network/FriendlyByteBuf;)V a
	serializeToNetwork (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/advancements/CriterionProgress ac
	DATE_FORMAT a
	obtained b
	fromJson (Ljava/lang/String;)Lnet/minecraft/advancements/CriterionProgress; a
	fromNetwork (Lnet/minecraft/network/FriendlyByteBuf;)Lnet/minecraft/advancements/CriterionProgress; b
	getObtained ()Ljava/util/Date; d
	grant ()V b
	isDone ()Z a
	revoke ()V c
	serializeToJson ()Lcom/google/gson/JsonElement; e
	serializeToNetwork (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/advancements/CriterionTrigger ad
	addPlayerListener (Lnet/minecraft/server/PlayerAdvancements;Lnet/minecraft/advancements/CriterionTrigger$Listener;)V a
	createInstance (Lcom/google/gson/JsonObject;Lnet/minecraft/advancements/critereon/DeserializationContext;)Lnet/minecraft/advancements/CriterionTriggerInstance; a
	getId ()Lnet/minecraft/resources/ResourceLocation; a
	removePlayerListener (Lnet/minecraft/server/PlayerAdvancements;Lnet/minecraft/advancements/CriterionTrigger$Listener;)V b
	removePlayerListeners (Lnet/minecraft/server/PlayerAdvancements;)V a
net/minecraft/advancements/CriterionTrigger$Listener ad$a
	advancement b
	criterion c
	trigger a
	getTriggerInstance ()Lnet/minecraft/advancements/CriterionTriggerInstance; a
	run (Lnet/minecraft/server/PlayerAdvancements;)V a
net/minecraft/advancements/CriterionTriggerInstance ae
	getCriterion ()Lnet/minecraft/resources/ResourceLocation; a
	serializeToJson (Lnet/minecraft/advancements/critereon/SerializationContext;)Lcom/google/gson/JsonObject; a
net/minecraft/advancements/DisplayInfo af
	announceChat g
	background d
	description b
	frame e
	hidden h
	icon c
	showToast f
	title a
	x i
	y j
	fromJson (Lcom/google/gson/JsonObject;)Lnet/minecraft/advancements/DisplayInfo; a
	fromNetwork (Lnet/minecraft/network/FriendlyByteBuf;)Lnet/minecraft/advancements/DisplayInfo; b
	getBackground ()Lnet/minecraft/resources/ResourceLocation; d
	getDescription ()Lnet/minecraft/network/chat/Component; b
	getFrame ()Lnet/minecraft/advancements/FrameType; e
	getIcon ()Lnet/minecraft/world/item/ItemStack; c
	getIcon (Lcom/google/gson/JsonObject;)Lnet/minecraft/world/item/ItemStack; b
	getTitle ()Lnet/minecraft/network/chat/Component; a
	getX ()F f
	getY ()F g
	isHidden ()Z j
	serializeIcon ()Lcom/google/gson/JsonObject; l
	serializeToJson ()Lcom/google/gson/JsonElement; k
	serializeToNetwork (Lnet/minecraft/network/FriendlyByteBuf;)V a
	setLocation (FF)V a
	shouldAnnounceChat ()Z i
	shouldShowToast ()Z h
net/minecraft/advancements/FrameType ag
	$VALUES g
	CHALLENGE b
	GOAL c
	TASK a
	chatColor f
	name d
	texture e
	byName (Ljava/lang/String;)Lnet/minecraft/advancements/FrameType; a
	getChatColor ()Lnet/minecraft/ChatFormatting; c
	getName ()Ljava/lang/String; a
	getTexture ()I b
net/minecraft/advancements/RequirementsStrategy ah
	AND a
	OR b
net/minecraft/advancements/TreeNodePosition ai
	advancement a
	ancestor f
	change k
	childIndex d
	children e
	mod j
	parent b
	previousSibling c
	shift l
	thread g
	x h
	y i
	addChild (Lnet/minecraft/advancements/Advancement;Lnet/minecraft/advancements/TreeNodePosition;)Lnet/minecraft/advancements/TreeNodePosition; a
	apportion (Lnet/minecraft/advancements/TreeNodePosition;)Lnet/minecraft/advancements/TreeNodePosition; a
	executeShifts ()V b
	finalizePosition ()V e
	firstWalk ()V a
	getAncestor (Lnet/minecraft/advancements/TreeNodePosition;Lnet/minecraft/advancements/TreeNodePosition;)Lnet/minecraft/advancements/TreeNodePosition; a
	moveSubtree (Lnet/minecraft/advancements/TreeNodePosition;F)V a
	nextOrThread ()Lnet/minecraft/advancements/TreeNodePosition; d
	previousOrThread ()Lnet/minecraft/advancements/TreeNodePosition; c
	run (Lnet/minecraft/advancements/Advancement;)V a
	secondWalk (FIF)F a
	thirdWalk (F)V a
net/minecraft/advancements/critereon/AbstractCriterionTriggerInstance aj
	criterion a
	player b
	getCriterion ()Lnet/minecraft/resources/ResourceLocation; a
	getPlayerPredicate ()Lnet/minecraft/advancements/critereon/EntityPredicate$Composite; b
	serializeToJson (Lnet/minecraft/advancements/critereon/SerializationContext;)Lcom/google/gson/JsonObject; a
net/minecraft/advancements/critereon/BeeNestDestroyedTrigger ak
	ID a
	createInstance (Lcom/google/gson/JsonObject;Lnet/minecraft/advancements/critereon/EntityPredicate$Composite;Lnet/minecraft/advancements/critereon/DeserializationContext;)Lnet/minecraft/advancements/critereon/AbstractCriterionTriggerInstance; b
	createInstance (Lcom/google/gson/JsonObject;Lnet/minecraft/advancements/critereon/EntityPredicate$Composite;Lnet/minecraft/advancements/critereon/DeserializationContext;)Lnet/minecraft/advancements/critereon/BeeNestDestroyedTrigger$TriggerInstance; a
	deserializeBlock (Lcom/google/gson/JsonObject;)Lnet/minecraft/world/level/block/Block; a
	getId ()Lnet/minecraft/resources/ResourceLocation; a
	trigger (Lnet/minecraft/server/level/ServerPlayer;Lnet/minecraft/world/level/block/Block;Lnet/minecraft/world/item/ItemStack;I)V a
net/minecraft/advancements/critereon/BeeNestDestroyedTrigger$TriggerInstance ak$a
	block a
	item b
	numBees c
	destroyedBeeNest (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/advancements/critereon/ItemPredicate$Builder;Lnet/minecraft/advancements/critereon/MinMaxBounds$Ints;)Lnet/minecraft/advancements/critereon/BeeNestDestroyedTrigger$TriggerInstance; a
	matches (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/world/item/ItemStack;I)Z a
	serializeToJson (Lnet/minecraft/advancements/critereon/SerializationContext;)Lcom/google/gson/JsonObject; a
net/minecraft/advancements/critereon/BlockPredicate al
	ANY a
	block c
	nbt e
	properties d
	tag b
	fromJson (Lcom/google/gson/JsonElement;)Lnet/minecraft/advancements/critereon/BlockPredicate; a
	matches (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;)Z a
	serializeToJson ()Lcom/google/gson/JsonElement; a
net/minecraft/advancements/critereon/BlockPredicate$Builder al$a
	block a
	blocks b
	nbt d
	properties c
	block ()Lnet/minecraft/advancements/critereon/BlockPredicate$Builder; a
	build ()Lnet/minecraft/advancements/critereon/BlockPredicate; b
	hasNbt (Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/advancements/critereon/BlockPredicate$Builder; a
	of (Lnet/minecraft/tags/Tag;)Lnet/minecraft/advancements/critereon/BlockPredicate$Builder; a
	of (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/advancements/critereon/BlockPredicate$Builder; a
	setProperties (Lnet/minecraft/advancements/critereon/StatePropertiesPredicate;)Lnet/minecraft/advancements/critereon/BlockPredicate$Builder; a
net/minecraft/advancements/critereon/BredAnimalsTrigger am
	ID a
	createInstance (Lcom/google/gson/JsonObject;Lnet/minecraft/advancements/critereon/EntityPredicate$Composite;Lnet/minecraft/advancements/critereon/DeserializationContext;)Lnet/minecraft/advancements/critereon/AbstractCriterionTriggerInstance; b
	createInstance (Lcom/google/gson/JsonObject;Lnet/minecraft/advancements/critereon/EntityPredicate$Composite;Lnet/minecraft/advancements/critereon/DeserializationContext;)Lnet/minecraft/advancements/critereon/BredAnimalsTrigger$TriggerInstance; a
	getId ()Lnet/minecraft/resources/ResourceLocation; a
	trigger (Lnet/minecraft/server/level/ServerPlayer;Lnet/minecraft/world/entity/animal/Animal;Lnet/minecraft/world/entity/animal/Animal;Lnet/minecraft/world/entity/AgableMob;)V a
net/minecraft/advancements/critereon/BredAnimalsTrigger$TriggerInstance am$a
	child c
	parent a
	partner b
	bredAnimals ()Lnet/minecraft/advancements/critereon/BredAnimalsTrigger$TriggerInstance; c
	bredAnimals (Lnet/minecraft/advancements/critereon/EntityPredicate$Builder;)Lnet/minecraft/advancements/critereon/BredAnimalsTrigger$TriggerInstance; a
	bredAnimals (Lnet/minecraft/advancements/critereon/EntityPredicate;Lnet/minecraft/advancements/critereon/EntityPredicate;Lnet/minecraft/advancements/critereon/EntityPredicate;)Lnet/minecraft/advancements/critereon/BredAnimalsTrigger$TriggerInstance; a
	matches (Lnet/minecraft/world/level/storage/loot/LootContext;Lnet/minecraft/world/level/storage/loot/LootContext;Lnet/minecraft/world/level/storage/loot/LootContext;)Z a
	serializeToJson (Lnet/minecraft/advancements/critereon/SerializationContext;)Lcom/google/gson/JsonObject; a
net/minecraft/advancements/critereon/BrewedPotionTrigger an
	ID a
	createInstance (Lcom/google/gson/JsonObject;Lnet/minecraft/advancements/critereon/EntityPredicate$Composite;Lnet/minecraft/advancements/critereon/DeserializationContext;)Lnet/minecraft/advancements/critereon/AbstractCriterionTriggerInstance; b
	createInstance (Lcom/google/gson/JsonObject;Lnet/minecraft/advancements/critereon/EntityPredicate$Composite;Lnet/minecraft/advancements/critereon/DeserializationContext;)Lnet/minecraft/advancements/critereon/BrewedPotionTrigger$TriggerInstance; a
	getId ()Lnet/minecraft/resources/ResourceLocation; a
	trigger (Lnet/minecraft/server/level/ServerPlayer;Lnet/minecraft/world/item/alchemy/Potion;)V a
net/minecraft/advancements/critereon/BrewedPotionTrigger$TriggerInstance an$a
	potion a
	brewedPotion ()Lnet/minecraft/advancements/critereon/BrewedPotionTrigger$TriggerInstance; c
	matches (Lnet/minecraft/world/item/alchemy/Potion;)Z a
	serializeToJson (Lnet/minecraft/advancements/critereon/SerializationContext;)Lcom/google/gson/JsonObject; a
net/minecraft/advancements/critereon/ChangeDimensionTrigger ao
	ID a
	createInstance (Lcom/google/gson/JsonObject;Lnet/minecraft/advancements/critereon/EntityPredicate$Composite;Lnet/minecraft/advancements/critereon/DeserializationContext;)Lnet/minecraft/advancements/critereon/AbstractCriterionTriggerInstance; b
	createInstance (Lcom/google/gson/JsonObject;Lnet/minecraft/advancements/critereon/EntityPredicate$Composite;Lnet/minecraft/advancements/critereon/DeserializationContext;)Lnet/minecraft/advancements/critereon/ChangeDimensionTrigger$TriggerInstance; a
	getId ()Lnet/minecraft/resources/ResourceLocation; a
	trigger (Lnet/minecraft/server/level/ServerPlayer;Lnet/minecraft/resources/ResourceKey;Lnet/minecraft/resources/ResourceKey;)V a
net/minecraft/advancements/critereon/ChangeDimensionTrigger$TriggerInstance ao$a
	from a
	to b
	changedDimension ()Lnet/minecraft/advancements/critereon/ChangeDimensionTrigger$TriggerInstance; c
	changedDimension (Lnet/minecraft/resources/ResourceKey;Lnet/minecraft/resources/ResourceKey;)Lnet/minecraft/advancements/critereon/ChangeDimensionTrigger$TriggerInstance; a
	changedDimensionFrom (Lnet/minecraft/resources/ResourceKey;)Lnet/minecraft/advancements/critereon/ChangeDimensionTrigger$TriggerInstance; b
	changedDimensionTo (Lnet/minecraft/resources/ResourceKey;)Lnet/minecraft/advancements/critereon/ChangeDimensionTrigger$TriggerInstance; a
	matches (Lnet/minecraft/resources/ResourceKey;Lnet/minecraft/resources/ResourceKey;)Z b
	serializeToJson (Lnet/minecraft/advancements/critereon/SerializationContext;)Lcom/google/gson/JsonObject; a
net/minecraft/advancements/critereon/ChanneledLightningTrigger ap
	ID a
	createInstance (Lcom/google/gson/JsonObject;Lnet/minecraft/advancements/critereon/EntityPredicate$Composite;Lnet/minecraft/advancements/critereon/DeserializationContext;)Lnet/minecraft/advancements/critereon/AbstractCriterionTriggerInstance; b
	createInstance (Lcom/google/gson/JsonObject;Lnet/minecraft/advancements/critereon/EntityPredicate$Composite;Lnet/minecraft/advancements/critereon/DeserializationContext;)Lnet/minecraft/advancements/critereon/ChanneledLightningTrigger$TriggerInstance; a
	getId ()Lnet/minecraft/resources/ResourceLocation; a
	trigger (Lnet/minecraft/server/level/ServerPlayer;Ljava/util/Collection;)V a
net/minecraft/advancements/critereon/ChanneledLightningTrigger$TriggerInstance ap$a
	victims a
	channeledLightning ([Lnet/minecraft/advancements/critereon/EntityPredicate;)Lnet/minecraft/advancements/critereon/ChanneledLightningTrigger$TriggerInstance; a
	matches (Ljava/util/Collection;)Z a
	serializeToJson (Lnet/minecraft/advancements/critereon/SerializationContext;)Lcom/google/gson/JsonObject; a
net/minecraft/advancements/critereon/ConstructBeaconTrigger aq
	ID a
	createInstance (Lcom/google/gson/JsonObject;Lnet/minecraft/advancements/critereon/EntityPredicate$Composite;Lnet/minecraft/advancements/critereon/DeserializationContext;)Lnet/minecraft/advancements/critereon/AbstractCriterionTriggerInstance; b
	createInstance (Lcom/google/gson/JsonObject;Lnet/minecraft/advancements/critereon/EntityPredicate$Composite;Lnet/minecraft/advancements/critereon/DeserializationContext;)Lnet/minecraft/advancements/critereon/ConstructBeaconTrigger$TriggerInstance; a
	getId ()Lnet/minecraft/resources/ResourceLocation; a
	trigger (Lnet/minecraft/server/level/ServerPlayer;Lnet/minecraft/world/level/block/entity/BeaconBlockEntity;)V a
net/minecraft/advancements/critereon/ConstructBeaconTrigger$TriggerInstance aq$a
	level a
	constructedBeacon ()Lnet/minecraft/advancements/critereon/ConstructBeaconTrigger$TriggerInstance; c
	constructedBeacon (Lnet/minecraft/advancements/critereon/MinMaxBounds$Ints;)Lnet/minecraft/advancements/critereon/ConstructBeaconTrigger$TriggerInstance; a
	matches (Lnet/minecraft/world/level/block/entity/BeaconBlockEntity;)Z a
	serializeToJson (Lnet/minecraft/advancements/critereon/SerializationContext;)Lcom/google/gson/JsonObject; a
net/minecraft/advancements/critereon/ConsumeItemTrigger ar
	ID a
	createInstance (Lcom/google/gson/JsonObject;Lnet/minecraft/advancements/critereon/EntityPredicate$Composite;Lnet/minecraft/advancements/critereon/DeserializationContext;)Lnet/minecraft/advancements/critereon/AbstractCriterionTriggerInstance; b
	createInstance (Lcom/google/gson/JsonObject;Lnet/minecraft/advancements/critereon/EntityPredicate$Composite;Lnet/minecraft/advancements/critereon/DeserializationContext;)Lnet/minecraft/advancements/critereon/ConsumeItemTrigger$TriggerInstance; a
	getId ()Lnet/minecraft/resources/ResourceLocation; a
	trigger (Lnet/minecraft/server/level/ServerPlayer;Lnet/minecraft/world/item/ItemStack;)V a
net/minecraft/advancements/critereon/ConsumeItemTrigger$TriggerInstance ar$a
	item a
	matches (Lnet/minecraft/world/item/ItemStack;)Z a
	serializeToJson (Lnet/minecraft/advancements/critereon/SerializationContext;)Lcom/google/gson/JsonObject; a
	usedItem ()Lnet/minecraft/advancements/critereon/ConsumeItemTrigger$TriggerInstance; c
	usedItem (Lnet/minecraft/advancements/critereon/ItemPredicate;)Lnet/minecraft/advancements/critereon/ConsumeItemTrigger$TriggerInstance; a
	usedItem (Lnet/minecraft/world/level/ItemLike;)Lnet/minecraft/advancements/critereon/ConsumeItemTrigger$TriggerInstance; a
net/minecraft/advancements/critereon/CuredZombieVillagerTrigger as
	ID a
	createInstance (Lcom/google/gson/JsonObject;Lnet/minecraft/advancements/critereon/EntityPredicate$Composite;Lnet/minecraft/advancements/critereon/DeserializationContext;)Lnet/minecraft/advancements/critereon/AbstractCriterionTriggerInstance; b
	createInstance (Lcom/google/gson/JsonObject;Lnet/minecraft/advancements/critereon/EntityPredicate$Composite;Lnet/minecraft/advancements/critereon/DeserializationContext;)Lnet/minecraft/advancements/critereon/CuredZombieVillagerTrigger$TriggerInstance; a
	getId ()Lnet/minecraft/resources/ResourceLocation; a
	trigger (Lnet/minecraft/server/level/ServerPlayer;Lnet/minecraft/world/entity/monster/Zombie;Lnet/minecraft/world/entity/npc/Villager;)V a
net/minecraft/advancements/critereon/CuredZombieVillagerTrigger$TriggerInstance as$a
	villager b
	zombie a
	curedZombieVillager ()Lnet/minecraft/advancements/critereon/CuredZombieVillagerTrigger$TriggerInstance; c
	matches (Lnet/minecraft/world/level/storage/loot/LootContext;Lnet/minecraft/world/level/storage/loot/LootContext;)Z a
	serializeToJson (Lnet/minecraft/advancements/critereon/SerializationContext;)Lcom/google/gson/JsonObject; a
net/minecraft/advancements/critereon/DamagePredicate at
	ANY a
	blocked e
	dealtDamage b
	sourceEntity d
	takenDamage c
	type f
	fromJson (Lcom/google/gson/JsonElement;)Lnet/minecraft/advancements/critereon/DamagePredicate; a
	matches (Lnet/minecraft/server/level/ServerPlayer;Lnet/minecraft/world/damagesource/DamageSource;FFZ)Z a
	serializeToJson ()Lcom/google/gson/JsonElement; a
net/minecraft/advancements/critereon/DamagePredicate$Builder at$a
	blocked d
	dealtDamage a
	sourceEntity c
	takenDamage b
	type e
	blocked (Ljava/lang/Boolean;)Lnet/minecraft/advancements/critereon/DamagePredicate$Builder; a
	build ()Lnet/minecraft/advancements/critereon/DamagePredicate; b
	damageInstance ()Lnet/minecraft/advancements/critereon/DamagePredicate$Builder; a
	dealtDamage (Lnet/minecraft/advancements/critereon/MinMaxBounds$Floats;)Lnet/minecraft/advancements/critereon/DamagePredicate$Builder; a
	sourceEntity (Lnet/minecraft/advancements/critereon/EntityPredicate;)Lnet/minecraft/advancements/critereon/DamagePredicate$Builder; a
	takenDamage (Lnet/minecraft/advancements/critereon/MinMaxBounds$Floats;)Lnet/minecraft/advancements/critereon/DamagePredicate$Builder; b
	type (Lnet/minecraft/advancements/critereon/DamageSourcePredicate$Builder;)Lnet/minecraft/advancements/critereon/DamagePredicate$Builder; a
	type (Lnet/minecraft/advancements/critereon/DamageSourcePredicate;)Lnet/minecraft/advancements/critereon/DamagePredicate$Builder; a
net/minecraft/advancements/critereon/DamageSourcePredicate au
	ANY a
	bypassesArmor d
	bypassesInvulnerability e
	bypassesMagic f
	directEntity j
	isExplosion c
	isFire g
	isLightning i
	isMagic h
	isProjectile b
	sourceEntity k
	addOptionally (Lcom/google/gson/JsonObject;Ljava/lang/String;Ljava/lang/Boolean;)V a
	fromJson (Lcom/google/gson/JsonElement;)Lnet/minecraft/advancements/critereon/DamageSourcePredicate; a
	getOptionalBoolean (Lcom/google/gson/JsonObject;Ljava/lang/String;)Ljava/lang/Boolean; a
	matches (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/phys/Vec3;Lnet/minecraft/world/damagesource/DamageSource;)Z a
	matches (Lnet/minecraft/server/level/ServerPlayer;Lnet/minecraft/world/damagesource/DamageSource;)Z a
	serializeToJson ()Lcom/google/gson/JsonElement; a
net/minecraft/advancements/critereon/DamageSourcePredicate$Builder au$a
	bypassesArmor c
	bypassesInvulnerability d
	bypassesMagic e
	directEntity i
	isExplosion b
	isFire f
	isLightning h
	isMagic g
	isProjectile a
	sourceEntity j
	build ()Lnet/minecraft/advancements/critereon/DamageSourcePredicate; b
	bypassesArmor (Ljava/lang/Boolean;)Lnet/minecraft/advancements/critereon/DamageSourcePredicate$Builder; c
	bypassesInvulnerability (Ljava/lang/Boolean;)Lnet/minecraft/advancements/critereon/DamageSourcePredicate$Builder; d
	bypassesMagic (Ljava/lang/Boolean;)Lnet/minecraft/advancements/critereon/DamageSourcePredicate$Builder; e
	damageType ()Lnet/minecraft/advancements/critereon/DamageSourcePredicate$Builder; a
	direct (Lnet/minecraft/advancements/critereon/EntityPredicate$Builder;)Lnet/minecraft/advancements/critereon/DamageSourcePredicate$Builder; a
	direct (Lnet/minecraft/advancements/critereon/EntityPredicate;)Lnet/minecraft/advancements/critereon/DamageSourcePredicate$Builder; a
	isExplosion (Ljava/lang/Boolean;)Lnet/minecraft/advancements/critereon/DamageSourcePredicate$Builder; b
	isFire (Ljava/lang/Boolean;)Lnet/minecraft/advancements/critereon/DamageSourcePredicate$Builder; f
	isLightning (Ljava/lang/Boolean;)Lnet/minecraft/advancements/critereon/DamageSourcePredicate$Builder; h
	isMagic (Ljava/lang/Boolean;)Lnet/minecraft/advancements/critereon/DamageSourcePredicate$Builder; g
	isProjectile (Ljava/lang/Boolean;)Lnet/minecraft/advancements/critereon/DamageSourcePredicate$Builder; a
	source (Lnet/minecraft/advancements/critereon/EntityPredicate$Builder;)Lnet/minecraft/advancements/critereon/DamageSourcePredicate$Builder; b
	source (Lnet/minecraft/advancements/critereon/EntityPredicate;)Lnet/minecraft/advancements/critereon/DamageSourcePredicate$Builder; b
net/minecraft/advancements/critereon/DeserializationContext av
	LOGGER a
	id b
	predicateGson d
	predicateManager c
	deserializeConditions (Lcom/google/gson/JsonArray;Ljava/lang/String;Lnet/minecraft/world/level/storage/loot/parameters/LootContextParamSet;)[Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition; a
	getAdvancementId ()Lnet/minecraft/resources/ResourceLocation; a
net/minecraft/advancements/critereon/DistancePredicate aw
	ANY a
	absolute f
	horizontal e
	x b
	y c
	z d
	fromJson (Lcom/google/gson/JsonElement;)Lnet/minecraft/advancements/critereon/DistancePredicate; a
	horizontal (Lnet/minecraft/advancements/critereon/MinMaxBounds$Floats;)Lnet/minecraft/advancements/critereon/DistancePredicate; a
	matches (DDDDDD)Z a
	serializeToJson ()Lcom/google/gson/JsonElement; a
	vertical (Lnet/minecraft/advancements/critereon/MinMaxBounds$Floats;)Lnet/minecraft/advancements/critereon/DistancePredicate; b
net/minecraft/advancements/critereon/EffectsChangedTrigger ax
	ID a
	createInstance (Lcom/google/gson/JsonObject;Lnet/minecraft/advancements/critereon/EntityPredicate$Composite;Lnet/minecraft/advancements/critereon/DeserializationContext;)Lnet/minecraft/advancements/critereon/AbstractCriterionTriggerInstance; b
	createInstance (Lcom/google/gson/JsonObject;Lnet/minecraft/advancements/critereon/EntityPredicate$Composite;Lnet/minecraft/advancements/critereon/DeserializationContext;)Lnet/minecraft/advancements/critereon/EffectsChangedTrigger$TriggerInstance; a
	getId ()Lnet/minecraft/resources/ResourceLocation; a
	trigger (Lnet/minecraft/server/level/ServerPlayer;)V a
net/minecraft/advancements/critereon/EffectsChangedTrigger$TriggerInstance ax$a
	effects a
	hasEffects (Lnet/minecraft/advancements/critereon/MobEffectsPredicate;)Lnet/minecraft/advancements/critereon/EffectsChangedTrigger$TriggerInstance; a
	matches (Lnet/minecraft/server/level/ServerPlayer;)Z a
	serializeToJson (Lnet/minecraft/advancements/critereon/SerializationContext;)Lcom/google/gson/JsonObject; a
net/minecraft/advancements/critereon/EnchantedItemTrigger ay
	ID a
	createInstance (Lcom/google/gson/JsonObject;Lnet/minecraft/advancements/critereon/EntityPredicate$Composite;Lnet/minecraft/advancements/critereon/DeserializationContext;)Lnet/minecraft/advancements/critereon/AbstractCriterionTriggerInstance; b
	createInstance (Lcom/google/gson/JsonObject;Lnet/minecraft/advancements/critereon/EntityPredicate$Composite;Lnet/minecraft/advancements/critereon/DeserializationContext;)Lnet/minecraft/advancements/critereon/EnchantedItemTrigger$TriggerInstance; a
	getId ()Lnet/minecraft/resources/ResourceLocation; a
	trigger (Lnet/minecraft/server/level/ServerPlayer;Lnet/minecraft/world/item/ItemStack;I)V a
net/minecraft/advancements/critereon/EnchantedItemTrigger$TriggerInstance ay$a
	item a
	levels b
	enchantedItem ()Lnet/minecraft/advancements/critereon/EnchantedItemTrigger$TriggerInstance; c
	matches (Lnet/minecraft/world/item/ItemStack;I)Z a
	serializeToJson (Lnet/minecraft/advancements/critereon/SerializationContext;)Lcom/google/gson/JsonObject; a
net/minecraft/advancements/critereon/EnchantmentPredicate az
	ANY a
	NONE b
	enchantment c
	level d
	containedIn (Ljava/util/Map;)Z a
	fromJson (Lcom/google/gson/JsonElement;)Lnet/minecraft/advancements/critereon/EnchantmentPredicate; a
	fromJsonArray (Lcom/google/gson/JsonElement;)[Lnet/minecraft/advancements/critereon/EnchantmentPredicate; b
	serializeToJson ()Lcom/google/gson/JsonElement; a
net/minecraft/advancements/critereon/EnterBlockTrigger ba
	ID a
	createInstance (Lcom/google/gson/JsonObject;Lnet/minecraft/advancements/critereon/EntityPredicate$Composite;Lnet/minecraft/advancements/critereon/DeserializationContext;)Lnet/minecraft/advancements/critereon/AbstractCriterionTriggerInstance; b
	createInstance (Lcom/google/gson/JsonObject;Lnet/minecraft/advancements/critereon/EntityPredicate$Composite;Lnet/minecraft/advancements/critereon/DeserializationContext;)Lnet/minecraft/advancements/critereon/EnterBlockTrigger$TriggerInstance; a
	deserializeBlock (Lcom/google/gson/JsonObject;)Lnet/minecraft/world/level/block/Block; a
	getId ()Lnet/minecraft/resources/ResourceLocation; a
	trigger (Lnet/minecraft/server/level/ServerPlayer;Lnet/minecraft/world/level/block/state/BlockState;)V a
net/minecraft/advancements/critereon/EnterBlockTrigger$TriggerInstance ba$a
	block a
	state b
	entersBlock (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/advancements/critereon/EnterBlockTrigger$TriggerInstance; a
	matches (Lnet/minecraft/world/level/block/state/BlockState;)Z a
	serializeToJson (Lnet/minecraft/advancements/critereon/SerializationContext;)Lcom/google/gson/JsonObject; a
net/minecraft/advancements/critereon/EntityEquipmentPredicate bb
	ANY a
	CAPTAIN b
	chest d
	feet f
	head c
	legs e
	mainhand g
	offhand h
	fromJson (Lcom/google/gson/JsonElement;)Lnet/minecraft/advancements/critereon/EntityEquipmentPredicate; a
	matches (Lnet/minecraft/world/entity/Entity;)Z a
	serializeToJson ()Lcom/google/gson/JsonElement; a
net/minecraft/advancements/critereon/EntityEquipmentPredicate$Builder bb$a
	chest b
	feet d
	head a
	legs c
	mainhand e
	offhand f
	build ()Lnet/minecraft/advancements/critereon/EntityEquipmentPredicate; b
	chest (Lnet/minecraft/advancements/critereon/ItemPredicate;)Lnet/minecraft/advancements/critereon/EntityEquipmentPredicate$Builder; b
	equipment ()Lnet/minecraft/advancements/critereon/EntityEquipmentPredicate$Builder; a
	feet (Lnet/minecraft/advancements/critereon/ItemPredicate;)Lnet/minecraft/advancements/critereon/EntityEquipmentPredicate$Builder; d
	head (Lnet/minecraft/advancements/critereon/ItemPredicate;)Lnet/minecraft/advancements/critereon/EntityEquipmentPredicate$Builder; a
	legs (Lnet/minecraft/advancements/critereon/ItemPredicate;)Lnet/minecraft/advancements/critereon/EntityEquipmentPredicate$Builder; c
	mainhand (Lnet/minecraft/advancements/critereon/ItemPredicate;)Lnet/minecraft/advancements/critereon/EntityEquipmentPredicate$Builder; e
	offhand (Lnet/minecraft/advancements/critereon/ItemPredicate;)Lnet/minecraft/advancements/critereon/EntityEquipmentPredicate$Builder; f
net/minecraft/advancements/critereon/EntityFlagsPredicate bc
	ANY a
	isBaby f
	isCrouching c
	isOnFire b
	isSprinting d
	isSwimming e
	addOptionalBoolean (Lcom/google/gson/JsonObject;Ljava/lang/String;Ljava/lang/Boolean;)V a
	fromJson (Lcom/google/gson/JsonElement;)Lnet/minecraft/advancements/critereon/EntityFlagsPredicate; a
	getOptionalBoolean (Lcom/google/gson/JsonObject;Ljava/lang/String;)Ljava/lang/Boolean; a
	matches (Lnet/minecraft/world/entity/Entity;)Z a
	serializeToJson ()Lcom/google/gson/JsonElement; a
net/minecraft/advancements/critereon/EntityFlagsPredicate$Builder bc$a
	isBaby e
	isCrouching b
	isOnFire a
	isSprinting c
	isSwimming d
	build ()Lnet/minecraft/advancements/critereon/EntityFlagsPredicate; b
	flags ()Lnet/minecraft/advancements/critereon/EntityFlagsPredicate$Builder; a
	setCrouching (Ljava/lang/Boolean;)Lnet/minecraft/advancements/critereon/EntityFlagsPredicate$Builder; b
	setIsBaby (Ljava/lang/Boolean;)Lnet/minecraft/advancements/critereon/EntityFlagsPredicate$Builder; e
	setOnFire (Ljava/lang/Boolean;)Lnet/minecraft/advancements/critereon/EntityFlagsPredicate$Builder; a
	setSprinting (Ljava/lang/Boolean;)Lnet/minecraft/advancements/critereon/EntityFlagsPredicate$Builder; c
	setSwimming (Ljava/lang/Boolean;)Lnet/minecraft/advancements/critereon/EntityFlagsPredicate$Builder; d
net/minecraft/advancements/critereon/EntityHurtPlayerTrigger bd
	ID a
	createInstance (Lcom/google/gson/JsonObject;Lnet/minecraft/advancements/critereon/EntityPredicate$Composite;Lnet/minecraft/advancements/critereon/DeserializationContext;)Lnet/minecraft/advancements/critereon/AbstractCriterionTriggerInstance; b
	createInstance (Lcom/google/gson/JsonObject;Lnet/minecraft/advancements/critereon/EntityPredicate$Composite;Lnet/minecraft/advancements/critereon/DeserializationContext;)Lnet/minecraft/advancements/critereon/EntityHurtPlayerTrigger$TriggerInstance; a
	getId ()Lnet/minecraft/resources/ResourceLocation; a
	trigger (Lnet/minecraft/server/level/ServerPlayer;Lnet/minecraft/world/damagesource/DamageSource;FFZ)V a
net/minecraft/advancements/critereon/EntityHurtPlayerTrigger$TriggerInstance bd$a
	damage a
	entityHurtPlayer ()Lnet/minecraft/advancements/critereon/EntityHurtPlayerTrigger$TriggerInstance; c
	entityHurtPlayer (Lnet/minecraft/advancements/critereon/DamagePredicate$Builder;)Lnet/minecraft/advancements/critereon/EntityHurtPlayerTrigger$TriggerInstance; a
	entityHurtPlayer (Lnet/minecraft/advancements/critereon/DamagePredicate;)Lnet/minecraft/advancements/critereon/EntityHurtPlayerTrigger$TriggerInstance; a
	matches (Lnet/minecraft/server/level/ServerPlayer;Lnet/minecraft/world/damagesource/DamageSource;FFZ)Z a
	serializeToJson (Lnet/minecraft/advancements/critereon/SerializationContext;)Lcom/google/gson/JsonObject; a
net/minecraft/advancements/critereon/EntityPredicate be
	ANY a
	catType n
	distanceToPlayer c
	effects e
	entityType b
	equipment h
	fishingHook j
	flags g
	location d
	nbt f
	player i
	targetedEntity l
	team m
	vehicle k
	createContext (Lnet/minecraft/server/level/ServerPlayer;Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/world/level/storage/loot/LootContext; b
	fromJson (Lcom/google/gson/JsonElement;)Lnet/minecraft/advancements/critereon/EntityPredicate; a
	matches (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/phys/Vec3;Lnet/minecraft/world/entity/Entity;)Z a
	matches (Lnet/minecraft/server/level/ServerPlayer;Lnet/minecraft/world/entity/Entity;)Z a
	serializeToJson ()Lcom/google/gson/JsonElement; a
net/minecraft/advancements/critereon/EntityPredicate$Builder be$a
	catType m
	distanceToPlayer b
	effects d
	entityType a
	equipment g
	fishingHook i
	flags f
	location c
	nbt e
	player h
	targetedEntity k
	team l
	vehicle j
	build ()Lnet/minecraft/advancements/critereon/EntityPredicate; b
	catType (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/advancements/critereon/EntityPredicate$Builder; b
	distance (Lnet/minecraft/advancements/critereon/DistancePredicate;)Lnet/minecraft/advancements/critereon/EntityPredicate$Builder; a
	effects (Lnet/minecraft/advancements/critereon/MobEffectsPredicate;)Lnet/minecraft/advancements/critereon/EntityPredicate$Builder; a
	entity ()Lnet/minecraft/advancements/critereon/EntityPredicate$Builder; a
	entityType (Lnet/minecraft/advancements/critereon/EntityTypePredicate;)Lnet/minecraft/advancements/critereon/EntityPredicate$Builder; a
	equipment (Lnet/minecraft/advancements/critereon/EntityEquipmentPredicate;)Lnet/minecraft/advancements/critereon/EntityPredicate$Builder; a
	fishingHook (Lnet/minecraft/advancements/critereon/FishingHookPredicate;)Lnet/minecraft/advancements/critereon/EntityPredicate$Builder; a
	flags (Lnet/minecraft/advancements/critereon/EntityFlagsPredicate;)Lnet/minecraft/advancements/critereon/EntityPredicate$Builder; a
	located (Lnet/minecraft/advancements/critereon/LocationPredicate;)Lnet/minecraft/advancements/critereon/EntityPredicate$Builder; a
	nbt (Lnet/minecraft/advancements/critereon/NbtPredicate;)Lnet/minecraft/advancements/critereon/EntityPredicate$Builder; a
	of (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/advancements/critereon/EntityPredicate$Builder; a
	of (Lnet/minecraft/tags/Tag;)Lnet/minecraft/advancements/critereon/EntityPredicate$Builder; a
	of (Lnet/minecraft/world/entity/EntityType;)Lnet/minecraft/advancements/critereon/EntityPredicate$Builder; a
	player (Lnet/minecraft/advancements/critereon/PlayerPredicate;)Lnet/minecraft/advancements/critereon/EntityPredicate$Builder; a
	targetedEntity (Lnet/minecraft/advancements/critereon/EntityPredicate;)Lnet/minecraft/advancements/critereon/EntityPredicate$Builder; b
	team (Ljava/lang/String;)Lnet/minecraft/advancements/critereon/EntityPredicate$Builder; a
	vehicle (Lnet/minecraft/advancements/critereon/EntityPredicate;)Lnet/minecraft/advancements/critereon/EntityPredicate$Builder; a
net/minecraft/advancements/critereon/EntityPredicate$Composite be$b
	ANY a
	compositePredicates c
	conditions b
	create ([Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition;)Lnet/minecraft/advancements/critereon/EntityPredicate$Composite; a
	fromElement (Ljava/lang/String;Lnet/minecraft/advancements/critereon/DeserializationContext;Lcom/google/gson/JsonElement;)Lnet/minecraft/advancements/critereon/EntityPredicate$Composite; a
	fromJson (Lcom/google/gson/JsonObject;Ljava/lang/String;Lnet/minecraft/advancements/critereon/DeserializationContext;)Lnet/minecraft/advancements/critereon/EntityPredicate$Composite; a
	fromJsonArray (Lcom/google/gson/JsonObject;Ljava/lang/String;Lnet/minecraft/advancements/critereon/DeserializationContext;)[Lnet/minecraft/advancements/critereon/EntityPredicate$Composite; b
	matches (Lnet/minecraft/world/level/storage/loot/LootContext;)Z a
	toJson (Lnet/minecraft/advancements/critereon/SerializationContext;)Lcom/google/gson/JsonElement; a
	toJson ([Lnet/minecraft/advancements/critereon/EntityPredicate$Composite;Lnet/minecraft/advancements/critereon/SerializationContext;)Lcom/google/gson/JsonElement; a
	wrap (Lnet/minecraft/advancements/critereon/EntityPredicate;)Lnet/minecraft/advancements/critereon/EntityPredicate$Composite; a
net/minecraft/advancements/critereon/EntityTypePredicate bf
	ANY a
	COMMA_JOINER b
	fromJson (Lcom/google/gson/JsonElement;)Lnet/minecraft/advancements/critereon/EntityTypePredicate; a
	matches (Lnet/minecraft/world/entity/EntityType;)Z a
	of (Lnet/minecraft/tags/Tag;)Lnet/minecraft/advancements/critereon/EntityTypePredicate; a
	of (Lnet/minecraft/world/entity/EntityType;)Lnet/minecraft/advancements/critereon/EntityTypePredicate; b
	serializeToJson ()Lcom/google/gson/JsonElement; a
net/minecraft/advancements/critereon/EntityTypePredicate$TagPredicate bf$a
	tag b
	matches (Lnet/minecraft/world/entity/EntityType;)Z a
	serializeToJson ()Lcom/google/gson/JsonElement; a
net/minecraft/advancements/critereon/EntityTypePredicate$TypePredicate bf$b
	type b
	matches (Lnet/minecraft/world/entity/EntityType;)Z a
	serializeToJson ()Lcom/google/gson/JsonElement; a
net/minecraft/advancements/critereon/FilledBucketTrigger bg
	ID a
	createInstance (Lcom/google/gson/JsonObject;Lnet/minecraft/advancements/critereon/EntityPredicate$Composite;Lnet/minecraft/advancements/critereon/DeserializationContext;)Lnet/minecraft/advancements/critereon/AbstractCriterionTriggerInstance; b
	createInstance (Lcom/google/gson/JsonObject;Lnet/minecraft/advancements/critereon/EntityPredicate$Composite;Lnet/minecraft/advancements/critereon/DeserializationContext;)Lnet/minecraft/advancements/critereon/FilledBucketTrigger$TriggerInstance; a
	getId ()Lnet/minecraft/resources/ResourceLocation; a
	trigger (Lnet/minecraft/server/level/ServerPlayer;Lnet/minecraft/world/item/ItemStack;)V a
net/minecraft/advancements/critereon/FilledBucketTrigger$TriggerInstance bg$a
	item a
	filledBucket (Lnet/minecraft/advancements/critereon/ItemPredicate;)Lnet/minecraft/advancements/critereon/FilledBucketTrigger$TriggerInstance; a
	matches (Lnet/minecraft/world/item/ItemStack;)Z a
	serializeToJson (Lnet/minecraft/advancements/critereon/SerializationContext;)Lcom/google/gson/JsonObject; a
net/minecraft/advancements/critereon/FishingHookPredicate bh
	ANY a
	inOpenWater b
	fromJson (Lcom/google/gson/JsonElement;)Lnet/minecraft/advancements/critereon/FishingHookPredicate; a
	inOpenWater (Z)Lnet/minecraft/advancements/critereon/FishingHookPredicate; a
	matches (Lnet/minecraft/world/entity/Entity;)Z a
	serializeToJson ()Lcom/google/gson/JsonElement; a
net/minecraft/advancements/critereon/FishingRodHookedTrigger bi
	ID a
	createInstance (Lcom/google/gson/JsonObject;Lnet/minecraft/advancements/critereon/EntityPredicate$Composite;Lnet/minecraft/advancements/critereon/DeserializationContext;)Lnet/minecraft/advancements/critereon/AbstractCriterionTriggerInstance; b
	createInstance (Lcom/google/gson/JsonObject;Lnet/minecraft/advancements/critereon/EntityPredicate$Composite;Lnet/minecraft/advancements/critereon/DeserializationContext;)Lnet/minecraft/advancements/critereon/FishingRodHookedTrigger$TriggerInstance; a
	getId ()Lnet/minecraft/resources/ResourceLocation; a
	trigger (Lnet/minecraft/server/level/ServerPlayer;Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/entity/projectile/FishingHook;Ljava/util/Collection;)V a
net/minecraft/advancements/critereon/FishingRodHookedTrigger$TriggerInstance bi$a
	entity b
	item c
	rod a
	fishedItem (Lnet/minecraft/advancements/critereon/ItemPredicate;Lnet/minecraft/advancements/critereon/EntityPredicate;Lnet/minecraft/advancements/critereon/ItemPredicate;)Lnet/minecraft/advancements/critereon/FishingRodHookedTrigger$TriggerInstance; a
	matches (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/storage/loot/LootContext;Ljava/util/Collection;)Z a
	serializeToJson (Lnet/minecraft/advancements/critereon/SerializationContext;)Lcom/google/gson/JsonObject; a
net/minecraft/advancements/critereon/FluidPredicate bj
	ANY a
	fluid c
	properties d
	tag b
	fromJson (Lcom/google/gson/JsonElement;)Lnet/minecraft/advancements/critereon/FluidPredicate; a
	matches (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;)Z a
	serializeToJson ()Lcom/google/gson/JsonElement; a
net/minecraft/advancements/critereon/FluidPredicate$Builder bj$a
	fluid a
	fluids b
	properties c
	build ()Lnet/minecraft/advancements/critereon/FluidPredicate; b
	fluid ()Lnet/minecraft/advancements/critereon/FluidPredicate$Builder; a
	of (Lnet/minecraft/tags/Tag;)Lnet/minecraft/advancements/critereon/FluidPredicate$Builder; a
	of (Lnet/minecraft/world/level/material/Fluid;)Lnet/minecraft/advancements/critereon/FluidPredicate$Builder; a
	setProperties (Lnet/minecraft/advancements/critereon/StatePropertiesPredicate;)Lnet/minecraft/advancements/critereon/FluidPredicate$Builder; a
net/minecraft/advancements/critereon/ImpossibleTrigger bk
	ID a
	addPlayerListener (Lnet/minecraft/server/PlayerAdvancements;Lnet/minecraft/advancements/CriterionTrigger$Listener;)V a
	createInstance (Lcom/google/gson/JsonObject;Lnet/minecraft/advancements/critereon/DeserializationContext;)Lnet/minecraft/advancements/CriterionTriggerInstance; a
	createInstance (Lcom/google/gson/JsonObject;Lnet/minecraft/advancements/critereon/DeserializationContext;)Lnet/minecraft/advancements/critereon/ImpossibleTrigger$TriggerInstance; b
	getId ()Lnet/minecraft/resources/ResourceLocation; a
	removePlayerListener (Lnet/minecraft/server/PlayerAdvancements;Lnet/minecraft/advancements/CriterionTrigger$Listener;)V b
	removePlayerListeners (Lnet/minecraft/server/PlayerAdvancements;)V a
net/minecraft/advancements/critereon/ImpossibleTrigger$TriggerInstance bk$a
	getCriterion ()Lnet/minecraft/resources/ResourceLocation; a
	serializeToJson (Lnet/minecraft/advancements/critereon/SerializationContext;)Lcom/google/gson/JsonObject; a
net/minecraft/advancements/critereon/InventoryChangeTrigger bl
	ID a
	createInstance (Lcom/google/gson/JsonObject;Lnet/minecraft/advancements/critereon/EntityPredicate$Composite;Lnet/minecraft/advancements/critereon/DeserializationContext;)Lnet/minecraft/advancements/critereon/AbstractCriterionTriggerInstance; b
	createInstance (Lcom/google/gson/JsonObject;Lnet/minecraft/advancements/critereon/EntityPredicate$Composite;Lnet/minecraft/advancements/critereon/DeserializationContext;)Lnet/minecraft/advancements/critereon/InventoryChangeTrigger$TriggerInstance; a
	getId ()Lnet/minecraft/resources/ResourceLocation; a
	trigger (Lnet/minecraft/server/level/ServerPlayer;Lnet/minecraft/world/entity/player/Inventory;Lnet/minecraft/world/item/ItemStack;)V a
	trigger (Lnet/minecraft/server/level/ServerPlayer;Lnet/minecraft/world/entity/player/Inventory;Lnet/minecraft/world/item/ItemStack;III)V a
net/minecraft/advancements/critereon/InventoryChangeTrigger$TriggerInstance bl$a
	predicates d
	slotsEmpty c
	slotsFull b
	slotsOccupied a
	hasItems ([Lnet/minecraft/advancements/critereon/ItemPredicate;)Lnet/minecraft/advancements/critereon/InventoryChangeTrigger$TriggerInstance; a
	hasItems ([Lnet/minecraft/world/level/ItemLike;)Lnet/minecraft/advancements/critereon/InventoryChangeTrigger$TriggerInstance; a
	matches (Lnet/minecraft/world/entity/player/Inventory;Lnet/minecraft/world/item/ItemStack;III)Z a
	serializeToJson (Lnet/minecraft/advancements/critereon/SerializationContext;)Lcom/google/gson/JsonObject; a
net/minecraft/advancements/critereon/ItemDurabilityTrigger bm
	ID a
	createInstance (Lcom/google/gson/JsonObject;Lnet/minecraft/advancements/critereon/EntityPredicate$Composite;Lnet/minecraft/advancements/critereon/DeserializationContext;)Lnet/minecraft/advancements/critereon/AbstractCriterionTriggerInstance; b
	createInstance (Lcom/google/gson/JsonObject;Lnet/minecraft/advancements/critereon/EntityPredicate$Composite;Lnet/minecraft/advancements/critereon/DeserializationContext;)Lnet/minecraft/advancements/critereon/ItemDurabilityTrigger$TriggerInstance; a
	getId ()Lnet/minecraft/resources/ResourceLocation; a
	trigger (Lnet/minecraft/server/level/ServerPlayer;Lnet/minecraft/world/item/ItemStack;I)V a
net/minecraft/advancements/critereon/ItemDurabilityTrigger$TriggerInstance bm$a
	delta c
	durability b
	item a
	changedDurability (Lnet/minecraft/advancements/critereon/EntityPredicate$Composite;Lnet/minecraft/advancements/critereon/ItemPredicate;Lnet/minecraft/advancements/critereon/MinMaxBounds$Ints;)Lnet/minecraft/advancements/critereon/ItemDurabilityTrigger$TriggerInstance; a
	changedDurability (Lnet/minecraft/advancements/critereon/ItemPredicate;Lnet/minecraft/advancements/critereon/MinMaxBounds$Ints;)Lnet/minecraft/advancements/critereon/ItemDurabilityTrigger$TriggerInstance; a
	matches (Lnet/minecraft/world/item/ItemStack;I)Z a
	serializeToJson (Lnet/minecraft/advancements/critereon/SerializationContext;)Lcom/google/gson/JsonObject; a
net/minecraft/advancements/critereon/ItemPickedUpByEntityTrigger bn
	ID a
	createInstance (Lcom/google/gson/JsonObject;Lnet/minecraft/advancements/critereon/EntityPredicate$Composite;Lnet/minecraft/advancements/critereon/DeserializationContext;)Lnet/minecraft/advancements/critereon/AbstractCriterionTriggerInstance; b
	createInstance (Lcom/google/gson/JsonObject;Lnet/minecraft/advancements/critereon/EntityPredicate$Composite;Lnet/minecraft/advancements/critereon/DeserializationContext;)Lnet/minecraft/advancements/critereon/ItemPickedUpByEntityTrigger$TriggerInstance; a
	getId ()Lnet/minecraft/resources/ResourceLocation; a
	trigger (Lnet/minecraft/server/level/ServerPlayer;Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/entity/Entity;)V a
net/minecraft/advancements/critereon/ItemPickedUpByEntityTrigger$TriggerInstance bn$a
	entity b
	item a
	itemPickedUpByEntity (Lnet/minecraft/advancements/critereon/EntityPredicate$Composite;Lnet/minecraft/advancements/critereon/ItemPredicate$Builder;Lnet/minecraft/advancements/critereon/EntityPredicate$Composite;)Lnet/minecraft/advancements/critereon/ItemPickedUpByEntityTrigger$TriggerInstance; a
	matches (Lnet/minecraft/server/level/ServerPlayer;Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/storage/loot/LootContext;)Z a
	serializeToJson (Lnet/minecraft/advancements/critereon/SerializationContext;)Lcom/google/gson/JsonObject; a
net/minecraft/advancements/critereon/ItemPredicate bo
	ANY a
	count d
	durability e
	enchantments f
	item c
	nbt i
	potion h
	storedEnchantments g
	tag b
	fromJson (Lcom/google/gson/JsonElement;)Lnet/minecraft/advancements/critereon/ItemPredicate; a
	fromJsonArray (Lcom/google/gson/JsonElement;)[Lnet/minecraft/advancements/critereon/ItemPredicate; b
	matches (Lnet/minecraft/world/item/ItemStack;)Z a
	serializeToJson ()Lcom/google/gson/JsonElement; a
net/minecraft/advancements/critereon/ItemPredicate$Builder bo$a
	count e
	durability f
	enchantments a
	item c
	nbt h
	potion g
	storedEnchantments b
	tag d
	build ()Lnet/minecraft/advancements/critereon/ItemPredicate; b
	hasDurability (Lnet/minecraft/advancements/critereon/MinMaxBounds$Ints;)Lnet/minecraft/advancements/critereon/ItemPredicate$Builder; b
	hasEnchantment (Lnet/minecraft/advancements/critereon/EnchantmentPredicate;)Lnet/minecraft/advancements/critereon/ItemPredicate$Builder; a
	hasNbt (Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/advancements/critereon/ItemPredicate$Builder; a
	hasStoredEnchantment (Lnet/minecraft/advancements/critereon/EnchantmentPredicate;)Lnet/minecraft/advancements/critereon/ItemPredicate$Builder; b
	isPotion (Lnet/minecraft/world/item/alchemy/Potion;)Lnet/minecraft/advancements/critereon/ItemPredicate$Builder; a
	item ()Lnet/minecraft/advancements/critereon/ItemPredicate$Builder; a
	of (Lnet/minecraft/tags/Tag;)Lnet/minecraft/advancements/critereon/ItemPredicate$Builder; a
	of (Lnet/minecraft/world/level/ItemLike;)Lnet/minecraft/advancements/critereon/ItemPredicate$Builder; a
	withCount (Lnet/minecraft/advancements/critereon/MinMaxBounds$Ints;)Lnet/minecraft/advancements/critereon/ItemPredicate$Builder; a
net/minecraft/advancements/critereon/ItemUsedOnBlockTrigger bp
	ID a
	createInstance (Lcom/google/gson/JsonObject;Lnet/minecraft/advancements/critereon/EntityPredicate$Composite;Lnet/minecraft/advancements/critereon/DeserializationContext;)Lnet/minecraft/advancements/critereon/AbstractCriterionTriggerInstance; b
	createInstance (Lcom/google/gson/JsonObject;Lnet/minecraft/advancements/critereon/EntityPredicate$Composite;Lnet/minecraft/advancements/critereon/DeserializationContext;)Lnet/minecraft/advancements/critereon/ItemUsedOnBlockTrigger$TriggerInstance; a
	getId ()Lnet/minecraft/resources/ResourceLocation; a
	trigger (Lnet/minecraft/server/level/ServerPlayer;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/item/ItemStack;)V a
net/minecraft/advancements/critereon/ItemUsedOnBlockTrigger$TriggerInstance bp$a
	item b
	location a
	itemUsedOnBlock (Lnet/minecraft/advancements/critereon/LocationPredicate$Builder;Lnet/minecraft/advancements/critereon/ItemPredicate$Builder;)Lnet/minecraft/advancements/critereon/ItemUsedOnBlockTrigger$TriggerInstance; a
	matches (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/item/ItemStack;)Z a
	serializeToJson (Lnet/minecraft/advancements/critereon/SerializationContext;)Lcom/google/gson/JsonObject; a
net/minecraft/advancements/critereon/KilledByCrossbowTrigger bq
	ID a
	createInstance (Lcom/google/gson/JsonObject;Lnet/minecraft/advancements/critereon/EntityPredicate$Composite;Lnet/minecraft/advancements/critereon/DeserializationContext;)Lnet/minecraft/advancements/critereon/AbstractCriterionTriggerInstance; b
	createInstance (Lcom/google/gson/JsonObject;Lnet/minecraft/advancements/critereon/EntityPredicate$Composite;Lnet/minecraft/advancements/critereon/DeserializationContext;)Lnet/minecraft/advancements/critereon/KilledByCrossbowTrigger$TriggerInstance; a
	getId ()Lnet/minecraft/resources/ResourceLocation; a
	trigger (Lnet/minecraft/server/level/ServerPlayer;Ljava/util/Collection;)V a
net/minecraft/advancements/critereon/KilledByCrossbowTrigger$TriggerInstance bq$a
	uniqueEntityTypes b
	victims a
	crossbowKilled (Lnet/minecraft/advancements/critereon/MinMaxBounds$Ints;)Lnet/minecraft/advancements/critereon/KilledByCrossbowTrigger$TriggerInstance; a
	crossbowKilled ([Lnet/minecraft/advancements/critereon/EntityPredicate$Builder;)Lnet/minecraft/advancements/critereon/KilledByCrossbowTrigger$TriggerInstance; a
	matches (Ljava/util/Collection;I)Z a
	serializeToJson (Lnet/minecraft/advancements/critereon/SerializationContext;)Lcom/google/gson/JsonObject; a
net/minecraft/advancements/critereon/KilledTrigger br
	id a
	createInstance (Lcom/google/gson/JsonObject;Lnet/minecraft/advancements/critereon/EntityPredicate$Composite;Lnet/minecraft/advancements/critereon/DeserializationContext;)Lnet/minecraft/advancements/critereon/AbstractCriterionTriggerInstance; b
	createInstance (Lcom/google/gson/JsonObject;Lnet/minecraft/advancements/critereon/EntityPredicate$Composite;Lnet/minecraft/advancements/critereon/DeserializationContext;)Lnet/minecraft/advancements/critereon/KilledTrigger$TriggerInstance; a
	getId ()Lnet/minecraft/resources/ResourceLocation; a
	trigger (Lnet/minecraft/server/level/ServerPlayer;Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/damagesource/DamageSource;)V a
net/minecraft/advancements/critereon/KilledTrigger$TriggerInstance br$a
	entityPredicate a
	killingBlow b
	entityKilledPlayer ()Lnet/minecraft/advancements/critereon/KilledTrigger$TriggerInstance; d
	entityKilledPlayer (Lnet/minecraft/advancements/critereon/EntityPredicate$Builder;)Lnet/minecraft/advancements/critereon/KilledTrigger$TriggerInstance; b
	entityKilledPlayer (Lnet/minecraft/advancements/critereon/EntityPredicate$Builder;Lnet/minecraft/advancements/critereon/DamageSourcePredicate$Builder;)Lnet/minecraft/advancements/critereon/KilledTrigger$TriggerInstance; b
	entityKilledPlayer (Lnet/minecraft/advancements/critereon/EntityPredicate$Builder;Lnet/minecraft/advancements/critereon/DamageSourcePredicate;)Lnet/minecraft/advancements/critereon/KilledTrigger$TriggerInstance; b
	entityKilledPlayer (Lnet/minecraft/advancements/critereon/EntityPredicate;)Lnet/minecraft/advancements/critereon/KilledTrigger$TriggerInstance; b
	entityKilledPlayer (Lnet/minecraft/advancements/critereon/EntityPredicate;Lnet/minecraft/advancements/critereon/DamageSourcePredicate$Builder;)Lnet/minecraft/advancements/critereon/KilledTrigger$TriggerInstance; b
	entityKilledPlayer (Lnet/minecraft/advancements/critereon/EntityPredicate;Lnet/minecraft/advancements/critereon/DamageSourcePredicate;)Lnet/minecraft/advancements/critereon/KilledTrigger$TriggerInstance; b
	matches (Lnet/minecraft/server/level/ServerPlayer;Lnet/minecraft/world/level/storage/loot/LootContext;Lnet/minecraft/world/damagesource/DamageSource;)Z a
	playerKilledEntity ()Lnet/minecraft/advancements/critereon/KilledTrigger$TriggerInstance; c
	playerKilledEntity (Lnet/minecraft/advancements/critereon/EntityPredicate$Builder;)Lnet/minecraft/advancements/critereon/KilledTrigger$TriggerInstance; a
	playerKilledEntity (Lnet/minecraft/advancements/critereon/EntityPredicate$Builder;Lnet/minecraft/advancements/critereon/DamageSourcePredicate$Builder;)Lnet/minecraft/advancements/critereon/KilledTrigger$TriggerInstance; a
	playerKilledEntity (Lnet/minecraft/advancements/critereon/EntityPredicate$Builder;Lnet/minecraft/advancements/critereon/DamageSourcePredicate;)Lnet/minecraft/advancements/critereon/KilledTrigger$TriggerInstance; a
	playerKilledEntity (Lnet/minecraft/advancements/critereon/EntityPredicate;)Lnet/minecraft/advancements/critereon/KilledTrigger$TriggerInstance; a
	playerKilledEntity (Lnet/minecraft/advancements/critereon/EntityPredicate;Lnet/minecraft/advancements/critereon/DamageSourcePredicate$Builder;)Lnet/minecraft/advancements/critereon/KilledTrigger$TriggerInstance; a
	playerKilledEntity (Lnet/minecraft/advancements/critereon/EntityPredicate;Lnet/minecraft/advancements/critereon/DamageSourcePredicate;)Lnet/minecraft/advancements/critereon/KilledTrigger$TriggerInstance; a
	serializeToJson (Lnet/minecraft/advancements/critereon/SerializationContext;)Lcom/google/gson/JsonObject; a
net/minecraft/advancements/critereon/LevitationTrigger bs
	ID a
	createInstance (Lcom/google/gson/JsonObject;Lnet/minecraft/advancements/critereon/EntityPredicate$Composite;Lnet/minecraft/advancements/critereon/DeserializationContext;)Lnet/minecraft/advancements/critereon/AbstractCriterionTriggerInstance; b
	createInstance (Lcom/google/gson/JsonObject;Lnet/minecraft/advancements/critereon/EntityPredicate$Composite;Lnet/minecraft/advancements/critereon/DeserializationContext;)Lnet/minecraft/advancements/critereon/LevitationTrigger$TriggerInstance; a
	getId ()Lnet/minecraft/resources/ResourceLocation; a
	trigger (Lnet/minecraft/server/level/ServerPlayer;Lnet/minecraft/world/phys/Vec3;I)V a
net/minecraft/advancements/critereon/LevitationTrigger$TriggerInstance bs$a
	distance a
	duration b
	levitated (Lnet/minecraft/advancements/critereon/DistancePredicate;)Lnet/minecraft/advancements/critereon/LevitationTrigger$TriggerInstance; a
	matches (Lnet/minecraft/server/level/ServerPlayer;Lnet/minecraft/world/phys/Vec3;I)Z a
	serializeToJson (Lnet/minecraft/advancements/critereon/SerializationContext;)Lcom/google/gson/JsonObject; a
net/minecraft/advancements/critereon/LightPredicate bt
	ANY a
	composite b
	fromJson (Lcom/google/gson/JsonElement;)Lnet/minecraft/advancements/critereon/LightPredicate; a
	matches (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;)Z a
	serializeToJson ()Lcom/google/gson/JsonElement; a
net/minecraft/advancements/critereon/LightPredicate$Builder bt$a
	composite a
	build ()Lnet/minecraft/advancements/critereon/LightPredicate; b
	light ()Lnet/minecraft/advancements/critereon/LightPredicate$Builder; a
	setComposite (Lnet/minecraft/advancements/critereon/MinMaxBounds$Ints;)Lnet/minecraft/advancements/critereon/LightPredicate$Builder; a
net/minecraft/advancements/critereon/LocationPredicate bu
	ANY a
	LOGGER b
	biome f
	block k
	dimension h
	feature g
	fluid l
	light j
	smokey i
	x c
	y d
	z e
	fromJson (Lcom/google/gson/JsonElement;)Lnet/minecraft/advancements/critereon/LocationPredicate; a
	inBiome (Lnet/minecraft/world/level/biome/Biome;)Lnet/minecraft/advancements/critereon/LocationPredicate; a
	inDimension (Lnet/minecraft/resources/ResourceKey;)Lnet/minecraft/advancements/critereon/LocationPredicate; a
	inFeature (Lnet/minecraft/world/level/levelgen/feature/StructureFeature;)Lnet/minecraft/advancements/critereon/LocationPredicate; a
	matches (Lnet/minecraft/server/level/ServerLevel;DDD)Z a
	matches (Lnet/minecraft/server/level/ServerLevel;FFF)Z a
	serializeToJson ()Lcom/google/gson/JsonElement; a
net/minecraft/advancements/critereon/LocationPredicate$Builder bu$a
	biome d
	block i
	dimension f
	feature e
	fluid j
	light h
	smokey g
	x a
	y b
	z c
	build ()Lnet/minecraft/advancements/critereon/LocationPredicate; b
	location ()Lnet/minecraft/advancements/critereon/LocationPredicate$Builder; a
	setBiome (Lnet/minecraft/world/level/biome/Biome;)Lnet/minecraft/advancements/critereon/LocationPredicate$Builder; a
	setBlock (Lnet/minecraft/advancements/critereon/BlockPredicate;)Lnet/minecraft/advancements/critereon/LocationPredicate$Builder; a
	setDimension (Lnet/minecraft/resources/ResourceKey;)Lnet/minecraft/advancements/critereon/LocationPredicate$Builder; a
	setFeature (Lnet/minecraft/world/level/levelgen/feature/StructureFeature;)Lnet/minecraft/advancements/critereon/LocationPredicate$Builder; a
	setFluid (Lnet/minecraft/advancements/critereon/FluidPredicate;)Lnet/minecraft/advancements/critereon/LocationPredicate$Builder; a
	setLight (Lnet/minecraft/advancements/critereon/LightPredicate;)Lnet/minecraft/advancements/critereon/LocationPredicate$Builder; a
	setSmokey (Ljava/lang/Boolean;)Lnet/minecraft/advancements/critereon/LocationPredicate$Builder; a
	setX (Lnet/minecraft/advancements/critereon/MinMaxBounds$Floats;)Lnet/minecraft/advancements/critereon/LocationPredicate$Builder; a
	setY (Lnet/minecraft/advancements/critereon/MinMaxBounds$Floats;)Lnet/minecraft/advancements/critereon/LocationPredicate$Builder; b
	setZ (Lnet/minecraft/advancements/critereon/MinMaxBounds$Floats;)Lnet/minecraft/advancements/critereon/LocationPredicate$Builder; c
net/minecraft/advancements/critereon/LocationTrigger bv
	id a
	createInstance (Lcom/google/gson/JsonObject;Lnet/minecraft/advancements/critereon/EntityPredicate$Composite;Lnet/minecraft/advancements/critereon/DeserializationContext;)Lnet/minecraft/advancements/critereon/AbstractCriterionTriggerInstance; b
	createInstance (Lcom/google/gson/JsonObject;Lnet/minecraft/advancements/critereon/EntityPredicate$Composite;Lnet/minecraft/advancements/critereon/DeserializationContext;)Lnet/minecraft/advancements/critereon/LocationTrigger$TriggerInstance; a
	getId ()Lnet/minecraft/resources/ResourceLocation; a
	trigger (Lnet/minecraft/server/level/ServerPlayer;)V a
net/minecraft/advancements/critereon/LocationTrigger$TriggerInstance bv$a
	location a
	located (Lnet/minecraft/advancements/critereon/LocationPredicate;)Lnet/minecraft/advancements/critereon/LocationTrigger$TriggerInstance; a
	matches (Lnet/minecraft/server/level/ServerLevel;DDD)Z a
	raidWon ()Lnet/minecraft/advancements/critereon/LocationTrigger$TriggerInstance; d
	serializeToJson (Lnet/minecraft/advancements/critereon/SerializationContext;)Lcom/google/gson/JsonObject; a
	sleptInBed ()Lnet/minecraft/advancements/critereon/LocationTrigger$TriggerInstance; c
net/minecraft/advancements/critereon/LootTableTrigger bw
	ID a
	createInstance (Lcom/google/gson/JsonObject;Lnet/minecraft/advancements/critereon/EntityPredicate$Composite;Lnet/minecraft/advancements/critereon/DeserializationContext;)Lnet/minecraft/advancements/critereon/AbstractCriterionTriggerInstance; b
	createInstance (Lcom/google/gson/JsonObject;Lnet/minecraft/advancements/critereon/EntityPredicate$Composite;Lnet/minecraft/advancements/critereon/DeserializationContext;)Lnet/minecraft/advancements/critereon/LootTableTrigger$TriggerInstance; a
	getId ()Lnet/minecraft/resources/ResourceLocation; a
	trigger (Lnet/minecraft/server/level/ServerPlayer;Lnet/minecraft/resources/ResourceLocation;)V a
net/minecraft/advancements/critereon/LootTableTrigger$TriggerInstance bw$a
	lootTable a
	lootTableUsed (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/advancements/critereon/LootTableTrigger$TriggerInstance; a
	matches (Lnet/minecraft/resources/ResourceLocation;)Z b
	serializeToJson (Lnet/minecraft/advancements/critereon/SerializationContext;)Lcom/google/gson/JsonObject; a
net/minecraft/advancements/critereon/MinMaxBounds bx
	ERROR_EMPTY a
	ERROR_SWAPPED b
	max d
	min c
	fromJson (Lcom/google/gson/JsonElement;Lnet/minecraft/advancements/critereon/MinMaxBounds;Ljava/util/function/BiFunction;Lnet/minecraft/advancements/critereon/MinMaxBounds$BoundsFactory;)Lnet/minecraft/advancements/critereon/MinMaxBounds; a
	fromReader (Lcom/mojang/brigadier/StringReader;Lnet/minecraft/advancements/critereon/MinMaxBounds$BoundsFromReaderFactory;Ljava/util/function/Function;Ljava/util/function/Supplier;Ljava/util/function/Function;)Lnet/minecraft/advancements/critereon/MinMaxBounds; a
	getMax ()Ljava/lang/Number; b
	getMin ()Ljava/lang/Number; a
	isAllowedInputChat (Lcom/mojang/brigadier/StringReader;)Z a
	isAny ()Z c
	optionallyFormat (Ljava/lang/Object;Ljava/util/function/Function;)Ljava/lang/Object; a
	readNumber (Lcom/mojang/brigadier/StringReader;Ljava/util/function/Function;Ljava/util/function/Supplier;)Ljava/lang/Number; a
	serializeToJson ()Lcom/google/gson/JsonElement; d
net/minecraft/advancements/critereon/MinMaxBounds$BoundsFactory bx$a
net/minecraft/advancements/critereon/MinMaxBounds$BoundsFromReaderFactory bx$b
net/minecraft/advancements/critereon/MinMaxBounds$Floats bx$c
	ANY e
	maxSq g
	minSq f
	atLeast (F)Lnet/minecraft/advancements/critereon/MinMaxBounds$Floats; b
	atMost (F)Lnet/minecraft/advancements/critereon/MinMaxBounds$Floats; c
	between (FF)Lnet/minecraft/advancements/critereon/MinMaxBounds$Floats; a
	create (Lcom/mojang/brigadier/StringReader;Ljava/lang/Float;Ljava/lang/Float;)Lnet/minecraft/advancements/critereon/MinMaxBounds$Floats; a
	exactly (F)Lnet/minecraft/advancements/critereon/MinMaxBounds$Floats; a
	fromJson (Lcom/google/gson/JsonElement;)Lnet/minecraft/advancements/critereon/MinMaxBounds$Floats; a
	fromReader (Lcom/mojang/brigadier/StringReader;)Lnet/minecraft/advancements/critereon/MinMaxBounds$Floats; a
	fromReader (Lcom/mojang/brigadier/StringReader;Ljava/util/function/Function;)Lnet/minecraft/advancements/critereon/MinMaxBounds$Floats; a
	matches (F)Z d
	matchesSqr (D)Z a
	squareOpt (Ljava/lang/Float;)Ljava/lang/Double; a
net/minecraft/advancements/critereon/MinMaxBounds$Ints bx$d
	ANY e
	maxSq g
	minSq f
	atLeast (I)Lnet/minecraft/advancements/critereon/MinMaxBounds$Ints; b
	atMost (I)Lnet/minecraft/advancements/critereon/MinMaxBounds$Ints; c
	between (II)Lnet/minecraft/advancements/critereon/MinMaxBounds$Ints; a
	create (Lcom/mojang/brigadier/StringReader;Ljava/lang/Integer;Ljava/lang/Integer;)Lnet/minecraft/advancements/critereon/MinMaxBounds$Ints; a
	exactly (I)Lnet/minecraft/advancements/critereon/MinMaxBounds$Ints; a
	fromJson (Lcom/google/gson/JsonElement;)Lnet/minecraft/advancements/critereon/MinMaxBounds$Ints; a
	fromReader (Lcom/mojang/brigadier/StringReader;)Lnet/minecraft/advancements/critereon/MinMaxBounds$Ints; a
	fromReader (Lcom/mojang/brigadier/StringReader;Ljava/util/function/Function;)Lnet/minecraft/advancements/critereon/MinMaxBounds$Ints; a
	matches (I)Z d
	matchesSqr (J)Z a
	squareOpt (Ljava/lang/Integer;)Ljava/lang/Long; a
net/minecraft/advancements/critereon/MobEffectsPredicate by
	ANY a
	effects b
	and (Lnet/minecraft/world/effect/MobEffect;)Lnet/minecraft/advancements/critereon/MobEffectsPredicate; a
	and (Lnet/minecraft/world/effect/MobEffect;Lnet/minecraft/advancements/critereon/MobEffectsPredicate$MobEffectInstancePredicate;)Lnet/minecraft/advancements/critereon/MobEffectsPredicate; a
	effects ()Lnet/minecraft/advancements/critereon/MobEffectsPredicate; a
	fromJson (Lcom/google/gson/JsonElement;)Lnet/minecraft/advancements/critereon/MobEffectsPredicate; a
	matches (Ljava/util/Map;)Z a
	matches (Lnet/minecraft/world/entity/Entity;)Z a
	matches (Lnet/minecraft/world/entity/LivingEntity;)Z a
	serializeToJson ()Lcom/google/gson/JsonElement; b
net/minecraft/advancements/critereon/MobEffectsPredicate$MobEffectInstancePredicate by$a
	ambient c
	amplifier a
	duration b
	visible d
	fromJson (Lcom/google/gson/JsonObject;)Lnet/minecraft/advancements/critereon/MobEffectsPredicate$MobEffectInstancePredicate; a
	matches (Lnet/minecraft/world/effect/MobEffectInstance;)Z a
	serializeToJson ()Lcom/google/gson/JsonElement; a
net/minecraft/advancements/critereon/NbtPredicate bz
	ANY a
	tag b
	fromJson (Lcom/google/gson/JsonElement;)Lnet/minecraft/advancements/critereon/NbtPredicate; a
	getEntityTagToCompare (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/nbt/CompoundTag; b
	matches (Lnet/minecraft/nbt/Tag;)Z a
	matches (Lnet/minecraft/world/entity/Entity;)Z a
	matches (Lnet/minecraft/world/item/ItemStack;)Z a
	serializeToJson ()Lcom/google/gson/JsonElement; a
net/minecraft/advancements/critereon/NetherTravelTrigger ca
	ID a
	createInstance (Lcom/google/gson/JsonObject;Lnet/minecraft/advancements/critereon/EntityPredicate$Composite;Lnet/minecraft/advancements/critereon/DeserializationContext;)Lnet/minecraft/advancements/critereon/AbstractCriterionTriggerInstance; b
	createInstance (Lcom/google/gson/JsonObject;Lnet/minecraft/advancements/critereon/EntityPredicate$Composite;Lnet/minecraft/advancements/critereon/DeserializationContext;)Lnet/minecraft/advancements/critereon/NetherTravelTrigger$TriggerInstance; a
	getId ()Lnet/minecraft/resources/ResourceLocation; a
	trigger (Lnet/minecraft/server/level/ServerPlayer;Lnet/minecraft/world/phys/Vec3;)V a
net/minecraft/advancements/critereon/NetherTravelTrigger$TriggerInstance ca$a
	distance c
	entered a
	exited b
	matches (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/phys/Vec3;DDD)Z a
	serializeToJson (Lnet/minecraft/advancements/critereon/SerializationContext;)Lcom/google/gson/JsonObject; a
	travelledThroughNether (Lnet/minecraft/advancements/critereon/DistancePredicate;)Lnet/minecraft/advancements/critereon/NetherTravelTrigger$TriggerInstance; a
net/minecraft/advancements/critereon/PlacedBlockTrigger cb
	ID a
	createInstance (Lcom/google/gson/JsonObject;Lnet/minecraft/advancements/critereon/EntityPredicate$Composite;Lnet/minecraft/advancements/critereon/DeserializationContext;)Lnet/minecraft/advancements/critereon/AbstractCriterionTriggerInstance; b
	createInstance (Lcom/google/gson/JsonObject;Lnet/minecraft/advancements/critereon/EntityPredicate$Composite;Lnet/minecraft/advancements/critereon/DeserializationContext;)Lnet/minecraft/advancements/critereon/PlacedBlockTrigger$TriggerInstance; a
	deserializeBlock (Lcom/google/gson/JsonObject;)Lnet/minecraft/world/level/block/Block; a
	getId ()Lnet/minecraft/resources/ResourceLocation; a
	trigger (Lnet/minecraft/server/level/ServerPlayer;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/item/ItemStack;)V a
net/minecraft/advancements/critereon/PlacedBlockTrigger$TriggerInstance cb$a
	block a
	item d
	location c
	state b
	matches (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/BlockPos;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/item/ItemStack;)Z a
	placedBlock (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/advancements/critereon/PlacedBlockTrigger$TriggerInstance; a
	serializeToJson (Lnet/minecraft/advancements/critereon/SerializationContext;)Lcom/google/gson/JsonObject; a
net/minecraft/advancements/critereon/PlayerHurtEntityTrigger cc
	ID a
	createInstance (Lcom/google/gson/JsonObject;Lnet/minecraft/advancements/critereon/EntityPredicate$Composite;Lnet/minecraft/advancements/critereon/DeserializationContext;)Lnet/minecraft/advancements/critereon/AbstractCriterionTriggerInstance; b
	createInstance (Lcom/google/gson/JsonObject;Lnet/minecraft/advancements/critereon/EntityPredicate$Composite;Lnet/minecraft/advancements/critereon/DeserializationContext;)Lnet/minecraft/advancements/critereon/PlayerHurtEntityTrigger$TriggerInstance; a
	getId ()Lnet/minecraft/resources/ResourceLocation; a
	trigger (Lnet/minecraft/server/level/ServerPlayer;Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/damagesource/DamageSource;FFZ)V a
net/minecraft/advancements/critereon/PlayerHurtEntityTrigger$TriggerInstance cc$a
	damage a
	entity b
	matches (Lnet/minecraft/server/level/ServerPlayer;Lnet/minecraft/world/level/storage/loot/LootContext;Lnet/minecraft/world/damagesource/DamageSource;FFZ)Z a
	playerHurtEntity ()Lnet/minecraft/advancements/critereon/PlayerHurtEntityTrigger$TriggerInstance; c
	playerHurtEntity (Lnet/minecraft/advancements/critereon/DamagePredicate$Builder;)Lnet/minecraft/advancements/critereon/PlayerHurtEntityTrigger$TriggerInstance; a
	playerHurtEntity (Lnet/minecraft/advancements/critereon/DamagePredicate$Builder;Lnet/minecraft/advancements/critereon/EntityPredicate;)Lnet/minecraft/advancements/critereon/PlayerHurtEntityTrigger$TriggerInstance; a
	playerHurtEntity (Lnet/minecraft/advancements/critereon/DamagePredicate;)Lnet/minecraft/advancements/critereon/PlayerHurtEntityTrigger$TriggerInstance; a
	playerHurtEntity (Lnet/minecraft/advancements/critereon/DamagePredicate;Lnet/minecraft/advancements/critereon/EntityPredicate;)Lnet/minecraft/advancements/critereon/PlayerHurtEntityTrigger$TriggerInstance; a
	playerHurtEntity (Lnet/minecraft/advancements/critereon/EntityPredicate;)Lnet/minecraft/advancements/critereon/PlayerHurtEntityTrigger$TriggerInstance; a
	serializeToJson (Lnet/minecraft/advancements/critereon/SerializationContext;)Lcom/google/gson/JsonObject; a
net/minecraft/advancements/critereon/PlayerInteractTrigger cd
	ID a
	createInstance (Lcom/google/gson/JsonObject;Lnet/minecraft/advancements/critereon/EntityPredicate$Composite;Lnet/minecraft/advancements/critereon/DeserializationContext;)Lnet/minecraft/advancements/critereon/AbstractCriterionTriggerInstance; b
	createInstance (Lcom/google/gson/JsonObject;Lnet/minecraft/advancements/critereon/EntityPredicate$Composite;Lnet/minecraft/advancements/critereon/DeserializationContext;)Lnet/minecraft/advancements/critereon/PlayerInteractTrigger$TriggerInstance; a
	getId ()Lnet/minecraft/resources/ResourceLocation; a
	trigger (Lnet/minecraft/server/level/ServerPlayer;Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/entity/Entity;)V a
net/minecraft/advancements/critereon/PlayerInteractTrigger$TriggerInstance cd$a
	entity b
	item a
	itemUsedOnEntity (Lnet/minecraft/advancements/critereon/EntityPredicate$Composite;Lnet/minecraft/advancements/critereon/ItemPredicate$Builder;Lnet/minecraft/advancements/critereon/EntityPredicate$Composite;)Lnet/minecraft/advancements/critereon/PlayerInteractTrigger$TriggerInstance; a
	matches (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/storage/loot/LootContext;)Z a
	serializeToJson (Lnet/minecraft/advancements/critereon/SerializationContext;)Lcom/google/gson/JsonObject; a
net/minecraft/advancements/critereon/PlayerPredicate ce
	ANY a
	advancements f
	gameType c
	level b
	recipes e
	stats d
	advancementPredicateFromJson (Lcom/google/gson/JsonElement;)Lnet/minecraft/advancements/critereon/PlayerPredicate$AdvancementPredicate; b
	fromJson (Lcom/google/gson/JsonElement;)Lnet/minecraft/advancements/critereon/PlayerPredicate; a
	getStat (Lnet/minecraft/stats/StatType;Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/stats/Stat; a
	getStatValueId (Lnet/minecraft/stats/Stat;)Lnet/minecraft/resources/ResourceLocation; a
	matches (Lnet/minecraft/world/entity/Entity;)Z a
	serializeToJson ()Lcom/google/gson/JsonElement; a
net/minecraft/advancements/critereon/PlayerPredicate$AdvancementCriterionsPredicate ce$a
	criterions a
	test (Lnet/minecraft/advancements/AdvancementProgress;)Z a
	toJson ()Lcom/google/gson/JsonElement; a
net/minecraft/advancements/critereon/PlayerPredicate$AdvancementDonePredicate ce$b
	state a
	test (Lnet/minecraft/advancements/AdvancementProgress;)Z a
	toJson ()Lcom/google/gson/JsonElement; a
net/minecraft/advancements/critereon/PlayerPredicate$AdvancementPredicate ce$c
	toJson ()Lcom/google/gson/JsonElement; a
net/minecraft/advancements/critereon/PlayerPredicate$Builder ce$d
	advancements e
	gameType b
	level a
	recipes d
	stats c
	addRecipe (Lnet/minecraft/resources/ResourceLocation;Z)Lnet/minecraft/advancements/critereon/PlayerPredicate$Builder; a
	addStat (Lnet/minecraft/stats/Stat;Lnet/minecraft/advancements/critereon/MinMaxBounds$Ints;)Lnet/minecraft/advancements/critereon/PlayerPredicate$Builder; a
	build ()Lnet/minecraft/advancements/critereon/PlayerPredicate; b
	checkAdvancementCriterions (Lnet/minecraft/resources/ResourceLocation;Ljava/util/Map;)Lnet/minecraft/advancements/critereon/PlayerPredicate$Builder; a
	checkAdvancementDone (Lnet/minecraft/resources/ResourceLocation;Z)Lnet/minecraft/advancements/critereon/PlayerPredicate$Builder; b
	player ()Lnet/minecraft/advancements/critereon/PlayerPredicate$Builder; a
	setGameType (Lnet/minecraft/world/level/GameType;)Lnet/minecraft/advancements/critereon/PlayerPredicate$Builder; a
	setLevel (Lnet/minecraft/advancements/critereon/MinMaxBounds$Ints;)Lnet/minecraft/advancements/critereon/PlayerPredicate$Builder; a
net/minecraft/advancements/critereon/RecipeUnlockedTrigger cf
	ID a
	createInstance (Lcom/google/gson/JsonObject;Lnet/minecraft/advancements/critereon/EntityPredicate$Composite;Lnet/minecraft/advancements/critereon/DeserializationContext;)Lnet/minecraft/advancements/critereon/AbstractCriterionTriggerInstance; b
	createInstance (Lcom/google/gson/JsonObject;Lnet/minecraft/advancements/critereon/EntityPredicate$Composite;Lnet/minecraft/advancements/critereon/DeserializationContext;)Lnet/minecraft/advancements/critereon/RecipeUnlockedTrigger$TriggerInstance; a
	getId ()Lnet/minecraft/resources/ResourceLocation; a
	trigger (Lnet/minecraft/server/level/ServerPlayer;Lnet/minecraft/world/item/crafting/Recipe;)V a
	unlocked (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/advancements/critereon/RecipeUnlockedTrigger$TriggerInstance; a
net/minecraft/advancements/critereon/RecipeUnlockedTrigger$TriggerInstance cf$a
	recipe a
	matches (Lnet/minecraft/world/item/crafting/Recipe;)Z a
	serializeToJson (Lnet/minecraft/advancements/critereon/SerializationContext;)Lcom/google/gson/JsonObject; a
net/minecraft/advancements/critereon/SerializationContext cg
	INSTANCE a
	predicateGson b
	serializeConditions ([Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition;)Lcom/google/gson/JsonElement; a
net/minecraft/advancements/critereon/ShotCrossbowTrigger ch
	ID a
	createInstance (Lcom/google/gson/JsonObject;Lnet/minecraft/advancements/critereon/EntityPredicate$Composite;Lnet/minecraft/advancements/critereon/DeserializationContext;)Lnet/minecraft/advancements/critereon/AbstractCriterionTriggerInstance; b
	createInstance (Lcom/google/gson/JsonObject;Lnet/minecraft/advancements/critereon/EntityPredicate$Composite;Lnet/minecraft/advancements/critereon/DeserializationContext;)Lnet/minecraft/advancements/critereon/ShotCrossbowTrigger$TriggerInstance; a
	getId ()Lnet/minecraft/resources/ResourceLocation; a
	trigger (Lnet/minecraft/server/level/ServerPlayer;Lnet/minecraft/world/item/ItemStack;)V a
net/minecraft/advancements/critereon/ShotCrossbowTrigger$TriggerInstance ch$a
	item a
	matches (Lnet/minecraft/world/item/ItemStack;)Z a
	serializeToJson (Lnet/minecraft/advancements/critereon/SerializationContext;)Lcom/google/gson/JsonObject; a
	shotCrossbow (Lnet/minecraft/advancements/critereon/ItemPredicate;)Lnet/minecraft/advancements/critereon/ShotCrossbowTrigger$TriggerInstance; a
	shotCrossbow (Lnet/minecraft/world/level/ItemLike;)Lnet/minecraft/advancements/critereon/ShotCrossbowTrigger$TriggerInstance; a
net/minecraft/advancements/critereon/SimpleCriterionTrigger ci
	players a
	addPlayerListener (Lnet/minecraft/server/PlayerAdvancements;Lnet/minecraft/advancements/CriterionTrigger$Listener;)V a
	createInstance (Lcom/google/gson/JsonObject;Lnet/minecraft/advancements/critereon/DeserializationContext;)Lnet/minecraft/advancements/CriterionTriggerInstance; a
	createInstance (Lcom/google/gson/JsonObject;Lnet/minecraft/advancements/critereon/DeserializationContext;)Lnet/minecraft/advancements/critereon/AbstractCriterionTriggerInstance; b
	createInstance (Lcom/google/gson/JsonObject;Lnet/minecraft/advancements/critereon/EntityPredicate$Composite;Lnet/minecraft/advancements/critereon/DeserializationContext;)Lnet/minecraft/advancements/critereon/AbstractCriterionTriggerInstance; b
	removePlayerListener (Lnet/minecraft/server/PlayerAdvancements;Lnet/minecraft/advancements/CriterionTrigger$Listener;)V b
	removePlayerListeners (Lnet/minecraft/server/PlayerAdvancements;)V a
	trigger (Lnet/minecraft/server/level/ServerPlayer;Ljava/util/function/Predicate;)V a
net/minecraft/advancements/critereon/SlideDownBlockTrigger cj
	ID a
	createInstance (Lcom/google/gson/JsonObject;Lnet/minecraft/advancements/critereon/EntityPredicate$Composite;Lnet/minecraft/advancements/critereon/DeserializationContext;)Lnet/minecraft/advancements/critereon/AbstractCriterionTriggerInstance; b
	createInstance (Lcom/google/gson/JsonObject;Lnet/minecraft/advancements/critereon/EntityPredicate$Composite;Lnet/minecraft/advancements/critereon/DeserializationContext;)Lnet/minecraft/advancements/critereon/SlideDownBlockTrigger$TriggerInstance; a
	deserializeBlock (Lcom/google/gson/JsonObject;)Lnet/minecraft/world/level/block/Block; a
	getId ()Lnet/minecraft/resources/ResourceLocation; a
	trigger (Lnet/minecraft/server/level/ServerPlayer;Lnet/minecraft/world/level/block/state/BlockState;)V a
net/minecraft/advancements/critereon/SlideDownBlockTrigger$TriggerInstance cj$a
	block a
	state b
	matches (Lnet/minecraft/world/level/block/state/BlockState;)Z a
	serializeToJson (Lnet/minecraft/advancements/critereon/SerializationContext;)Lcom/google/gson/JsonObject; a
	slidesDownBlock (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/advancements/critereon/SlideDownBlockTrigger$TriggerInstance; a
net/minecraft/advancements/critereon/StatePropertiesPredicate ck
	ANY a
	properties b
	checkState (Lnet/minecraft/world/level/block/state/StateDefinition;Ljava/util/function/Consumer;)V a
	fromJson (Lcom/google/gson/JsonElement;)Lnet/minecraft/advancements/critereon/StatePropertiesPredicate; a
	fromJson (Ljava/lang/String;Lcom/google/gson/JsonElement;)Lnet/minecraft/advancements/critereon/StatePropertiesPredicate$PropertyMatcher; a
	getStringOrNull (Lcom/google/gson/JsonElement;)Ljava/lang/String; b
	matches (Lnet/minecraft/world/level/block/state/BlockState;)Z a
	matches (Lnet/minecraft/world/level/block/state/StateDefinition;Lnet/minecraft/world/level/block/state/StateHolder;)Z a
	matches (Lnet/minecraft/world/level/material/FluidState;)Z a
	serializeToJson ()Lcom/google/gson/JsonElement; a
net/minecraft/advancements/critereon/StatePropertiesPredicate$Builder ck$a
	matchers a
	build ()Lnet/minecraft/advancements/critereon/StatePropertiesPredicate; b
	hasProperty (Lnet/minecraft/world/level/block/state/properties/Property;I)Lnet/minecraft/advancements/critereon/StatePropertiesPredicate$Builder; a
	hasProperty (Lnet/minecraft/world/level/block/state/properties/Property;Ljava/lang/Comparable;)Lnet/minecraft/advancements/critereon/StatePropertiesPredicate$Builder; a
	hasProperty (Lnet/minecraft/world/level/block/state/properties/Property;Ljava/lang/String;)Lnet/minecraft/advancements/critereon/StatePropertiesPredicate$Builder; a
	hasProperty (Lnet/minecraft/world/level/block/state/properties/Property;Z)Lnet/minecraft/advancements/critereon/StatePropertiesPredicate$Builder; a
	properties ()Lnet/minecraft/advancements/critereon/StatePropertiesPredicate$Builder; a
net/minecraft/advancements/critereon/StatePropertiesPredicate$ExactPropertyMatcher ck$b
	value a
	match (Lnet/minecraft/world/level/block/state/StateHolder;Lnet/minecraft/world/level/block/state/properties/Property;)Z a
	toJson ()Lcom/google/gson/JsonElement; a
net/minecraft/advancements/critereon/StatePropertiesPredicate$PropertyMatcher ck$c
	name a
	checkState (Lnet/minecraft/world/level/block/state/StateDefinition;Ljava/util/function/Consumer;)V a
	getName ()Ljava/lang/String; b
	match (Lnet/minecraft/world/level/block/state/StateDefinition;Lnet/minecraft/world/level/block/state/StateHolder;)Z a
	match (Lnet/minecraft/world/level/block/state/StateHolder;Lnet/minecraft/world/level/block/state/properties/Property;)Z a
	toJson ()Lcom/google/gson/JsonElement; a
net/minecraft/advancements/critereon/StatePropertiesPredicate$RangedPropertyMatcher ck$d
	maxValue b
	minValue a
	match (Lnet/minecraft/world/level/block/state/StateHolder;Lnet/minecraft/world/level/block/state/properties/Property;)Z a
	toJson ()Lcom/google/gson/JsonElement; a
net/minecraft/advancements/critereon/SummonedEntityTrigger cl
	ID a
	createInstance (Lcom/google/gson/JsonObject;Lnet/minecraft/advancements/critereon/EntityPredicate$Composite;Lnet/minecraft/advancements/critereon/DeserializationContext;)Lnet/minecraft/advancements/critereon/AbstractCriterionTriggerInstance; b
	createInstance (Lcom/google/gson/JsonObject;Lnet/minecraft/advancements/critereon/EntityPredicate$Composite;Lnet/minecraft/advancements/critereon/DeserializationContext;)Lnet/minecraft/advancements/critereon/SummonedEntityTrigger$TriggerInstance; a
	getId ()Lnet/minecraft/resources/ResourceLocation; a
	trigger (Lnet/minecraft/server/level/ServerPlayer;Lnet/minecraft/world/entity/Entity;)V a
net/minecraft/advancements/critereon/SummonedEntityTrigger$TriggerInstance cl$a
	entity a
	matches (Lnet/minecraft/world/level/storage/loot/LootContext;)Z a
	serializeToJson (Lnet/minecraft/advancements/critereon/SerializationContext;)Lcom/google/gson/JsonObject; a
	summonedEntity (Lnet/minecraft/advancements/critereon/EntityPredicate$Builder;)Lnet/minecraft/advancements/critereon/SummonedEntityTrigger$TriggerInstance; a
net/minecraft/advancements/critereon/TameAnimalTrigger cm
	ID a
	createInstance (Lcom/google/gson/JsonObject;Lnet/minecraft/advancements/critereon/EntityPredicate$Composite;Lnet/minecraft/advancements/critereon/DeserializationContext;)Lnet/minecraft/advancements/critereon/AbstractCriterionTriggerInstance; b
	createInstance (Lcom/google/gson/JsonObject;Lnet/minecraft/advancements/critereon/EntityPredicate$Composite;Lnet/minecraft/advancements/critereon/DeserializationContext;)Lnet/minecraft/advancements/critereon/TameAnimalTrigger$TriggerInstance; a
	getId ()Lnet/minecraft/resources/ResourceLocation; a
	trigger (Lnet/minecraft/server/level/ServerPlayer;Lnet/minecraft/world/entity/animal/Animal;)V a
net/minecraft/advancements/critereon/TameAnimalTrigger$TriggerInstance cm$a
	entity a
	matches (Lnet/minecraft/world/level/storage/loot/LootContext;)Z a
	serializeToJson (Lnet/minecraft/advancements/critereon/SerializationContext;)Lcom/google/gson/JsonObject; a
	tamedAnimal ()Lnet/minecraft/advancements/critereon/TameAnimalTrigger$TriggerInstance; c
	tamedAnimal (Lnet/minecraft/advancements/critereon/EntityPredicate;)Lnet/minecraft/advancements/critereon/TameAnimalTrigger$TriggerInstance; a
net/minecraft/advancements/critereon/TargetBlockTrigger cn
	ID a
	createInstance (Lcom/google/gson/JsonObject;Lnet/minecraft/advancements/critereon/EntityPredicate$Composite;Lnet/minecraft/advancements/critereon/DeserializationContext;)Lnet/minecraft/advancements/critereon/AbstractCriterionTriggerInstance; b
	createInstance (Lcom/google/gson/JsonObject;Lnet/minecraft/advancements/critereon/EntityPredicate$Composite;Lnet/minecraft/advancements/critereon/DeserializationContext;)Lnet/minecraft/advancements/critereon/TargetBlockTrigger$TriggerInstance; a
	getId ()Lnet/minecraft/resources/ResourceLocation; a
	trigger (Lnet/minecraft/server/level/ServerPlayer;Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/phys/Vec3;I)V a
net/minecraft/advancements/critereon/TargetBlockTrigger$TriggerInstance cn$a
	projectile b
	signalStrength a
	matches (Lnet/minecraft/world/level/storage/loot/LootContext;Lnet/minecraft/world/phys/Vec3;I)Z a
	serializeToJson (Lnet/minecraft/advancements/critereon/SerializationContext;)Lcom/google/gson/JsonObject; a
	targetHit (Lnet/minecraft/advancements/critereon/MinMaxBounds$Ints;Lnet/minecraft/advancements/critereon/EntityPredicate$Composite;)Lnet/minecraft/advancements/critereon/TargetBlockTrigger$TriggerInstance; a
net/minecraft/advancements/critereon/TickTrigger co
	ID a
	createInstance (Lcom/google/gson/JsonObject;Lnet/minecraft/advancements/critereon/EntityPredicate$Composite;Lnet/minecraft/advancements/critereon/DeserializationContext;)Lnet/minecraft/advancements/critereon/AbstractCriterionTriggerInstance; b
	createInstance (Lcom/google/gson/JsonObject;Lnet/minecraft/advancements/critereon/EntityPredicate$Composite;Lnet/minecraft/advancements/critereon/DeserializationContext;)Lnet/minecraft/advancements/critereon/TickTrigger$TriggerInstance; a
	getId ()Lnet/minecraft/resources/ResourceLocation; a
	trigger (Lnet/minecraft/server/level/ServerPlayer;)V a
net/minecraft/advancements/critereon/TickTrigger$TriggerInstance co$a
net/minecraft/advancements/critereon/TradeTrigger cp
	ID a
	createInstance (Lcom/google/gson/JsonObject;Lnet/minecraft/advancements/critereon/EntityPredicate$Composite;Lnet/minecraft/advancements/critereon/DeserializationContext;)Lnet/minecraft/advancements/critereon/AbstractCriterionTriggerInstance; b
	createInstance (Lcom/google/gson/JsonObject;Lnet/minecraft/advancements/critereon/EntityPredicate$Composite;Lnet/minecraft/advancements/critereon/DeserializationContext;)Lnet/minecraft/advancements/critereon/TradeTrigger$TriggerInstance; a
	getId ()Lnet/minecraft/resources/ResourceLocation; a
	trigger (Lnet/minecraft/server/level/ServerPlayer;Lnet/minecraft/world/entity/npc/AbstractVillager;Lnet/minecraft/world/item/ItemStack;)V a
net/minecraft/advancements/critereon/TradeTrigger$TriggerInstance cp$a
	item b
	villager a
	matches (Lnet/minecraft/world/level/storage/loot/LootContext;Lnet/minecraft/world/item/ItemStack;)Z a
	serializeToJson (Lnet/minecraft/advancements/critereon/SerializationContext;)Lcom/google/gson/JsonObject; a
	tradedWithVillager ()Lnet/minecraft/advancements/critereon/TradeTrigger$TriggerInstance; c
net/minecraft/advancements/critereon/UsedEnderEyeTrigger cq
	ID a
	createInstance (Lcom/google/gson/JsonObject;Lnet/minecraft/advancements/critereon/EntityPredicate$Composite;Lnet/minecraft/advancements/critereon/DeserializationContext;)Lnet/minecraft/advancements/critereon/AbstractCriterionTriggerInstance; b
	createInstance (Lcom/google/gson/JsonObject;Lnet/minecraft/advancements/critereon/EntityPredicate$Composite;Lnet/minecraft/advancements/critereon/DeserializationContext;)Lnet/minecraft/advancements/critereon/UsedEnderEyeTrigger$TriggerInstance; a
	getId ()Lnet/minecraft/resources/ResourceLocation; a
	trigger (Lnet/minecraft/server/level/ServerPlayer;Lnet/minecraft/core/BlockPos;)V a
net/minecraft/advancements/critereon/UsedEnderEyeTrigger$TriggerInstance cq$a
	level a
	matches (D)Z a
net/minecraft/advancements/critereon/UsedTotemTrigger cr
	ID a
	createInstance (Lcom/google/gson/JsonObject;Lnet/minecraft/advancements/critereon/EntityPredicate$Composite;Lnet/minecraft/advancements/critereon/DeserializationContext;)Lnet/minecraft/advancements/critereon/AbstractCriterionTriggerInstance; b
	createInstance (Lcom/google/gson/JsonObject;Lnet/minecraft/advancements/critereon/EntityPredicate$Composite;Lnet/minecraft/advancements/critereon/DeserializationContext;)Lnet/minecraft/advancements/critereon/UsedTotemTrigger$TriggerInstance; a
	getId ()Lnet/minecraft/resources/ResourceLocation; a
	trigger (Lnet/minecraft/server/level/ServerPlayer;Lnet/minecraft/world/item/ItemStack;)V a
net/minecraft/advancements/critereon/UsedTotemTrigger$TriggerInstance cr$a
	item a
	matches (Lnet/minecraft/world/item/ItemStack;)Z a
	serializeToJson (Lnet/minecraft/advancements/critereon/SerializationContext;)Lcom/google/gson/JsonObject; a
	usedTotem (Lnet/minecraft/advancements/critereon/ItemPredicate;)Lnet/minecraft/advancements/critereon/UsedTotemTrigger$TriggerInstance; a
	usedTotem (Lnet/minecraft/world/level/ItemLike;)Lnet/minecraft/advancements/critereon/UsedTotemTrigger$TriggerInstance; a
net/minecraft/advancements/critereon/WrappedMinMaxBounds cs
	ANY a
	ERROR_INTS_ONLY b
	max d
	min c
	atLeast (F)Lnet/minecraft/advancements/critereon/WrappedMinMaxBounds; b
	atMost (F)Lnet/minecraft/advancements/critereon/WrappedMinMaxBounds; c
	between (FF)Lnet/minecraft/advancements/critereon/WrappedMinMaxBounds; a
	exactly (F)Lnet/minecraft/advancements/critereon/WrappedMinMaxBounds; a
	fromJson (Lcom/google/gson/JsonElement;)Lnet/minecraft/advancements/critereon/WrappedMinMaxBounds; a
	fromReader (Lcom/mojang/brigadier/StringReader;Z)Lnet/minecraft/advancements/critereon/WrappedMinMaxBounds; a
	fromReader (Lcom/mojang/brigadier/StringReader;ZLjava/util/function/Function;)Lnet/minecraft/advancements/critereon/WrappedMinMaxBounds; a
	getMax ()Ljava/lang/Float; b
	getMin ()Ljava/lang/Float; a
	isAllowedNumber (Lcom/mojang/brigadier/StringReader;Z)Z c
	matches (F)Z d
	matchesSqr (D)Z a
	optionallyFormat (Ljava/lang/Float;Ljava/util/function/Function;)Ljava/lang/Float; a
	readNumber (Lcom/mojang/brigadier/StringReader;Z)Ljava/lang/Float; b
	serializeToJson ()Lcom/google/gson/JsonElement; c
net/minecraft/client/AmbientOcclusionStatus dlg
	$VALUES g
	BY_ID d
	MAX c
	MIN b
	OFF a
	id e
	key f
	byId (I)Lnet/minecraft/client/AmbientOcclusionStatus; a
	getId ()I a
	getKey ()Ljava/lang/String; b
net/minecraft/client/AttackIndicatorStatus dlh
	$VALUES g
	BY_ID d
	CROSSHAIR b
	HOTBAR c
	OFF a
	id e
	key f
	byId (I)Lnet/minecraft/client/AttackIndicatorStatus; a
	getId ()I a
	getKey ()Ljava/lang/String; b
net/minecraft/client/BooleanOption dli
	getter V
	setter W
	createButton (Lnet/minecraft/client/Options;III)Lnet/minecraft/client/gui/components/AbstractWidget; a
	get (Lnet/minecraft/client/Options;)Z b
	getMessage (Lnet/minecraft/client/Options;)Lnet/minecraft/network/chat/Component; c
	set (Lnet/minecraft/client/Options;Ljava/lang/String;)V a
	set (Lnet/minecraft/client/Options;Z)V a
	toggle (Lnet/minecraft/client/Options;)V a
net/minecraft/client/Camera dlj
	blockPosition e
	detached l
	entity c
	eyeHeight n
	eyeHeightOld o
	forwards f
	initialized a
	left h
	level b
	mirror m
	position d
	rotation k
	up g
	xRot i
	yRot j
	getBlockPosition ()Lnet/minecraft/core/BlockPos; c
	getEntity ()Lnet/minecraft/world/entity/Entity; g
	getFluidInCamera ()Lnet/minecraft/world/level/material/FluidState; k
	getLeftVector ()Lcom/mojang/math/Vector3f; n
	getLookVector ()Lcom/mojang/math/Vector3f; l
	getMaxZoom (D)D a
	getPosition ()Lnet/minecraft/world/phys/Vec3; b
	getUpVector ()Lcom/mojang/math/Vector3f; m
	getXRot ()F d
	getYRot ()F e
	isDetached ()Z i
	isInitialized ()Z h
	isMirror ()Z j
	move (DDD)V a
	reset ()V o
	rotation ()Lcom/mojang/math/Quaternion; f
	setPosition (DDD)V b
	setPosition (Lnet/minecraft/world/phys/Vec3;)V a
	setRotation (FF)V a
	setup (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/world/entity/Entity;ZZF)V a
	tick ()V a
net/minecraft/client/ClientRecipeBook dlk
	LOGGER k
	collections n
	collectionsByTab m
	recipes l
	addToCollection (Lnet/minecraft/client/RecipeBookCategories;Lnet/minecraft/client/gui/screens/recipebook/RecipeCollection;)V a
	createCollection (Lnet/minecraft/client/RecipeBookCategories;)Lnet/minecraft/client/gui/screens/recipebook/RecipeCollection; b
	getCategories (Lnet/minecraft/world/inventory/RecipeBookMenu;)Ljava/util/List; b
	getCategory (Lnet/minecraft/world/item/crafting/Recipe;)Lnet/minecraft/client/RecipeBookCategories; g
	getCollection (Lnet/minecraft/client/RecipeBookCategories;)Ljava/util/List; a
	getCollections ()Ljava/util/List; j
	setupCollections ()V i
net/minecraft/client/CloudStatus dll
	$VALUES g
	BY_ID d
	FANCY c
	FAST b
	OFF a
	id e
	key f
	byId (I)Lnet/minecraft/client/CloudStatus; a
	getId ()I a
	getKey ()Ljava/lang/String; b
net/minecraft/client/ComponentCollector dlm
	parts a
	append (Lnet/minecraft/network/chat/FormattedText;)V a
	getResult ()Lnet/minecraft/network/chat/FormattedText; a
	getResultOrEmpty ()Lnet/minecraft/network/chat/FormattedText; b
	reset ()V c
net/minecraft/client/CycleOption dln
	setter V
	toString W
	createButton (Lnet/minecraft/client/Options;III)Lnet/minecraft/client/gui/components/AbstractWidget; a
	getMessage (Lnet/minecraft/client/Options;)Lnet/minecraft/network/chat/Component; c
	toggle (Lnet/minecraft/client/Options;I)V a
net/minecraft/client/DebugQueryHandler dlo
	callback c
	connection a
	transactionId b
	handleResponse (ILnet/minecraft/nbt/CompoundTag;)Z a
	queryBlockEntityTag (Lnet/minecraft/core/BlockPos;Ljava/util/function/Consumer;)V a
	queryEntityTag (ILjava/util/function/Consumer;)V a
	startTransaction (Ljava/util/function/Consumer;)I a
net/minecraft/client/FullscreenResolutionProgressOption dlp
net/minecraft/client/Game dlq
	launcher b
	listener c
	minecraft a
	onLeaveGameSession ()V b
	onStartGameSession ()V a
net/minecraft/client/Game$Metrics dlq$a
	average c
	max b
	min a
	samples d
net/minecraft/client/GraphicsStatus dlr
	$VALUES g
	BY_ID d
	FABULOUS c
	FANCY b
	FAST a
	id e
	key f
	byId (I)Lnet/minecraft/client/GraphicsStatus; a
	cycleNext ()Lnet/minecraft/client/GraphicsStatus; c
	getId ()I a
	getKey ()Ljava/lang/String; b
net/minecraft/client/GuiMessage dls
	addedTime a
	id c
	message b
	getAddedTime ()I b
	getId ()I c
	getMessage ()Lnet/minecraft/network/chat/FormattedText; a
net/minecraft/client/HotbarManager dlt
	LOGGER a
	fixerUpper c
	hotbars d
	loaded e
	optionsFile b
	get (I)Lnet/minecraft/client/player/inventory/Hotbar; a
	load ()V b
	save ()V a
net/minecraft/client/KeyMapping dlu
	ALL a
	CATEGORIES c
	CATEGORY_SORT_ORDER d
	MAP b
	category g
	clickCount j
	defaultKey f
	isDown i
	key h
	name e
	click (Lcom/mojang/blaze3d/platform/InputConstants$Key;)V a
	compareTo (Lnet/minecraft/client/KeyMapping;)I a
	consumeClick ()Z f
	createNameSupplier (Ljava/lang/String;)Ljava/util/function/Supplier; a
	getCategory ()Ljava/lang/String; e
	getDefaultKey ()Lcom/mojang/blaze3d/platform/InputConstants$Key; h
	getName ()Ljava/lang/String; g
	getTranslatedKeyMessage ()Lnet/minecraft/network/chat/Component; j
	isDefault ()Z k
	isDown ()Z d
	isUnbound ()Z i
	matches (II)Z a
	matchesMouse (I)Z a
	release ()V m
	releaseAll ()V b
	resetMapping ()V c
	same (Lnet/minecraft/client/KeyMapping;)Z b
	saveString ()Ljava/lang/String; l
	set (Lcom/mojang/blaze3d/platform/InputConstants$Key;Z)V a
	setAll ()V a
	setDown (Z)V a
	setKey (Lcom/mojang/blaze3d/platform/InputConstants$Key;)V b
net/minecraft/client/KeyboardHandler dlv
	clipboardManager c
	debugCrashKeyReportedCount f
	debugCrashKeyReportedTime e
	debugCrashKeyTime d
	handledDebugKey g
	minecraft a
	sendRepeatsToGui b
	charTyped (JII)V a
	copyCreateBlockCommand (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/BlockPos;Lnet/minecraft/nbt/CompoundTag;)V a
	copyCreateEntityCommand (Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/world/phys/Vec3;Lnet/minecraft/nbt/CompoundTag;)V a
	copyRecreateCommand (ZZ)V a
	debugFeedback (Ljava/lang/String;[Ljava/lang/Object;)V c
	debugFeedbackTranslated (Ljava/lang/String;[Ljava/lang/Object;)V a
	debugWarningTranslated (Ljava/lang/String;[Ljava/lang/Object;)V b
	getClipboard ()Ljava/lang/String; a
	handleChunkDebugKeys (I)Z a
	handleDebugKeys (I)Z b
	keyPress (JIIII)V a
	setClipboard (Ljava/lang/String;)V a
	setSendRepeatsToGui (Z)V a
	setup (J)V a
	tick ()V b
net/minecraft/client/LogaritmicProgressOption dlw
	toPct (D)D a
	toValue (D)D b
net/minecraft/client/Minecraft dlx
	ALT_FONT d
	DEFAULT_FONT b
	LOGGER G
	ON_OSX a
	RESOURCE_RELOAD_INITIAL_TASK H
	UNIFORM_FONT c
	allowsChat af
	allowsMultiplayer ae
	blockColors ak
	blockRenderer av
	cameraEntity t
	chunkPath C
	chunkVisibility D
	clientPackSource ah
	connectedToRealms aL
	crosshairPickEntity u
	currentServer aC
	debugPath aX
	debugRenderer i
	delayedCrash aO
	demo ad
	entityRenderDispatcher R
	fixerUpper L
	font g
	fontManager ap
	fps aP
	fpsPieProfiler aV
	fpsPieRenderTicks aU
	fpsPieResults aW
	fpsString A
	frameTimer o
	frames aK
	game az
	gameDirectory n
	gameMode q
	gameRenderer h
	gameThread aM
	gpuWarnlistManager ar
	gui j
	hitResult v
	hotbarManager X
	instance F
	is64bit ac
	isLocalServer aE
	itemColors al
	itemInHandRenderer T
	itemRenderer S
	keyboardHandler m
	languageManager aj
	lastNanoTime aI
	lastTime aJ
	launchedVersion Y
	level r
	levelRenderer e
	levelSource ab
	mainRenderTarget am
	minecraftSessionService as
	missTime w
	mobEffectTextures ax
	modelManager au
	mouseHandler l
	musicManager ao
	noRender x
	options k
	overlay z
	paintingTextures aw
	particleEngine f
	pause aG
	pausePartialTick aH
	pendingConnection aD
	pendingReload aS
	player s
	profileProperties J
	profiler aT
	progressListener W
	progressTasks aR
	proxy aa
	renderBuffers Q
	reserve p
	resourceManager ag
	resourcePackDirectory I
	resourcePackRepository ai
	rightClickDelay aF
	running aN
	screen y
	searchRegistry U
	singleplayerServer aB
	skinManager at
	smartCull E
	snooper P
	soundManager an
	splashManager aq
	textureManager K
	timer O
	toast ay
	tutorial aA
	user V
	versionType Z
	virtualScreen M
	window N
	windowActive aQ
	wireframe B
	adaptV3 (Ljava/util/function/Supplier;)Ljava/util/function/Supplier; b
	adaptV4 (Ljava/util/function/Supplier;)Ljava/util/function/Supplier; c
	addCustomNbtData (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/block/entity/BlockEntity;)Lnet/minecraft/world/item/ItemStack; a
	allowsChat ()Z t
	allowsMultiplayer ()Z s
	checkIs64Bit ()Z aF
	clearLevel ()V r
	clearLevel (Lnet/minecraft/client/gui/screens/Screen;)V b
	continueAttack (Z)V f
	crash (Lnet/minecraft/CrashReport;)V b
	createClientPackAdapter (Ljava/lang/String;ZLjava/util/function/Supplier;Lnet/minecraft/server/packs/PackResources;Lnet/minecraft/server/packs/metadata/pack/PackMetadataSection;Lnet/minecraft/server/packs/repository/Pack$Position;Lnet/minecraft/server/packs/repository/PackSource;)Lnet/minecraft/client/resources/ResourcePack; a
	createLevel (Ljava/lang/String;Lnet/minecraft/world/level/LevelSettings;Lnet/minecraft/core/RegistryAccess$RegistryHolder;Lnet/minecraft/world/level/levelgen/WorldGenSettings;)V a
	createSearchTrees ()V aE
	createTitle ()Ljava/lang/String; aD
	cursorEntered ()V b
	debugFpsMeterKeyPress (I)V a
	delayCrash (Lnet/minecraft/CrashReport;)V a
	delayTextureReload ()Ljava/util/concurrent/CompletableFuture; C
	destroy ()V l
	displayExperimentalConfirmationDialog (Lnet/minecraft/client/Minecraft$ExperimentalDialogType;Ljava/lang/String;ZLjava/lang/Runnable;)V a
	doLoadLevel (Ljava/lang/String;Lnet/minecraft/core/RegistryAccess$RegistryHolder;Ljava/util/function/Function;Lcom/mojang/datafixers/util/Function4;ZLnet/minecraft/client/Minecraft$ExperimentalDialogType;)V a
	emergencySave ()V m
	fillReport (Lnet/minecraft/CrashReport;)Lnet/minecraft/CrashReport; c
	fillReport (Lnet/minecraft/client/resources/language/LanguageManager;Ljava/lang/String;Lnet/minecraft/client/Options;Lnet/minecraft/CrashReport;)V a
	finishProfilers (ZLnet/minecraft/util/profiling/SingleTickProfiler;)V b
	forceSetScreen (Lnet/minecraft/client/gui/screens/Screen;)V c
	getAverageFps ()I ae
	getBlockColors ()Lnet/minecraft/client/color/block/BlockColors; ak
	getBlockRenderer ()Lnet/minecraft/client/renderer/block/BlockRenderDispatcher; aa
	getCameraEntity ()Lnet/minecraft/world/entity/Entity; Z
	getClientPackSource ()Lnet/minecraft/client/resources/ClientPackSource; O
	getConnection ()Lnet/minecraft/client/multiplayer/ClientPacketListener; v
	getCurrentServer ()Lnet/minecraft/client/multiplayer/ServerData; D
	getCurrentSnooperAction ()Ljava/lang/String; aN
	getDeltaFrameTime ()F aj
	getEntityRenderDispatcher ()Lnet/minecraft/client/renderer/entity/EntityRenderDispatcher; ab
	getFixerUpper ()Lcom/mojang/datafixers/DataFixer; ah
	getFrameTime ()F ai
	getFrameTimer ()Lnet/minecraft/util/FrameTimer; af
	getFramerateLimit ()I aI
	getGame ()Lnet/minecraft/client/Game; aw
	getGpuWarnlistManager ()Lnet/minecraft/client/renderer/GpuWarnlistManager; U
	getHotbarManager ()Lnet/minecraft/client/HotbarManager; ap
	getInstance ()Lnet/minecraft/client/Minecraft; B
	getItemInHandRenderer ()Lnet/minecraft/client/renderer/ItemInHandRenderer; ad
	getItemRenderer ()Lnet/minecraft/client/renderer/entity/ItemRenderer; ac
	getLanguageManager ()Lnet/minecraft/client/resources/language/LanguageManager; Q
	getLaunchedVersion ()Ljava/lang/String; g
	getLevelSource ()Lnet/minecraft/world/level/storage/LevelStorageSource; k
	getMainRenderTarget ()Lcom/mojang/blaze3d/pipeline/RenderTarget; f
	getMinecraftSessionService ()Lcom/mojang/authlib/minecraft/MinecraftSessionService; X
	getMobEffectTextures ()Lnet/minecraft/client/resources/MobEffectTextureManager; as
	getModelManager ()Lnet/minecraft/client/resources/model/ModelManager; aq
	getMusicManager ()Lnet/minecraft/client/sounds/MusicManager; p
	getOverlay ()Lnet/minecraft/client/gui/screens/Overlay; az
	getPaintingTextures ()Lnet/minecraft/client/resources/PaintingTextureManager; ar
	getProfileProperties ()Lcom/mojang/authlib/properties/PropertyMap; J
	getProfiler ()Lnet/minecraft/util/profiling/ProfilerFiller; av
	getProgressListener ()Lnet/minecraft/server/level/progress/StoringChunkProgressListener; ax
	getProxy ()Ljava/net/Proxy; K
	getResourceManager ()Lnet/minecraft/server/packs/resources/ResourceManager; M
	getResourcePackDirectory ()Ljava/io/File; P
	getResourcePackRepository ()Lnet/minecraft/server/packs/repository/PackRepository; N
	getRunningThread ()Ljava/lang/Thread; au
	getSearchTree (Lnet/minecraft/client/searchtree/SearchRegistry$Key;)Lnet/minecraft/client/searchtree/MutableSearchTree; a
	getSingleplayerServer ()Lnet/minecraft/client/server/IntegratedServer; G
	getSituationalMusic ()Lnet/minecraft/sounds/Music; W
	getSkinManager ()Lnet/minecraft/client/resources/SkinManager; Y
	getSnooper ()Lnet/minecraft/world/Snooper; H
	getSoundManager ()Lnet/minecraft/client/sounds/SoundManager; V
	getSplashManager ()Lnet/minecraft/client/resources/SplashManager; ay
	getTextureAtlas (Lnet/minecraft/resources/ResourceLocation;)Ljava/util/function/Function; a
	getTextureManager ()Lnet/minecraft/client/renderer/texture/TextureManager; L
	getToasts ()Lnet/minecraft/client/gui/components/toasts/ToastComponent; am
	getTutorial ()Lnet/minecraft/client/tutorial/Tutorial; an
	getUser ()Lnet/minecraft/client/User; I
	getVersionType ()Ljava/lang/String; h
	getWindow ()Lcom/mojang/blaze3d/platform/Window; aB
	grabHugeScreenshot (Ljava/io/File;IIII)Lnet/minecraft/network/chat/Component; a
	grabPanoramixScreenshot (Ljava/io/File;II)Lnet/minecraft/network/chat/Component; a
	handleKeybinds ()V aL
	hasSingleplayerServer ()Z F
	is64Bit ()Z R
	isBlocked (Ljava/util/UUID;)Z a
	isConnectedToRealms ()Z ag
	isDemo ()Z u
	isEnforceUnicode ()Z i
	isLocalServer ()Z E
	isPaused ()Z T
	isProbablyModded ()Z d
	isRunning ()Z o
	isSnooperEnabled ()Z S
	isWindowActive ()Z ao
	loadDataPacks (Lnet/minecraft/world/level/storage/LevelStorageSource$LevelStorageAccess;)Lnet/minecraft/world/level/DataPackConfig; a
	loadLevel (Ljava/lang/String;)V a
	loadWorldData (Lnet/minecraft/world/level/storage/LevelStorageSource$LevelStorageAccess;Lnet/minecraft/core/RegistryAccess$RegistryHolder;Lnet/minecraft/server/packs/resources/ResourceManager;Lnet/minecraft/world/level/DataPackConfig;)Lnet/minecraft/world/level/storage/WorldData; a
	makeServerStem (Lnet/minecraft/core/RegistryAccess$RegistryHolder;Ljava/util/function/Function;Lcom/mojang/datafixers/util/Function4;ZLnet/minecraft/world/level/storage/LevelStorageSource$LevelStorageAccess;)Lnet/minecraft/client/Minecraft$ServerStem; a
	onFullscreenError (IJ)V a
	openChatScreen (Ljava/lang/String;)V b
	pauseGame (Z)V c
	pickBlock ()V aM
	populateSnooper (Lnet/minecraft/world/Snooper;)V a
	populateSnooperInitial (Lnet/minecraft/world/Snooper;)V b
	populateSnooperWithOpenGL (Lnet/minecraft/world/Snooper;)V c
	reloadResourcePacks ()Ljava/util/concurrent/CompletableFuture; j
	renderBuffers ()Lnet/minecraft/client/renderer/RenderBuffers; aC
	renderFpsMeter (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/util/profiling/ProfileResults;)V a
	renderNames ()Z w
	renderOnThread ()Z aA
	resizeDisplay ()V a
	rollbackResourcePacks (Ljava/lang/Throwable;)V a
	run ()V e
	runTick (Z)V e
	selectMainFont (Z)V b
	selfTest ()V aG
	setCameraEntity (Lnet/minecraft/world/entity/Entity;)V a
	setConnectedToRealms (Z)V d
	setCurrentServer (Lnet/minecraft/client/multiplayer/ServerData;)V a
	setLevel (Lnet/minecraft/client/multiplayer/ClientLevel;)V a
	setOverlay (Lnet/minecraft/client/gui/screens/Overlay;)V a
	setScreen (Lnet/minecraft/client/gui/screens/Screen;)V a
	setWindowActive (Z)V a
	shouldEntityAppearGlowing (Lnet/minecraft/world/entity/Entity;)Z b
	shouldRenderFpsPie ()Z aH
	shouldRun (Ljava/lang/Runnable;)Z d
	showOnlyReducedInfo ()Z al
	startAttack ()V aJ
	startProfilers (ZLnet/minecraft/util/profiling/SingleTickProfiler;)V a
	startUseItem ()V aK
	stop ()V n
	tick ()V q
	updateLevelInEngines (Lnet/minecraft/client/multiplayer/ClientLevel;)V b
	updateMaxMipLevel (I)V b
	updateScreenAndTick (Lnet/minecraft/client/gui/screens/Screen;)V d
	updateTitle ()V c
	useAmbientOcclusion ()Z A
	useFancyGraphics ()Z y
	useShaderTransparency ()Z z
	wrapRunnable (Ljava/lang/Runnable;)Ljava/lang/Runnable; e
net/minecraft/client/Minecraft$ExperimentalDialogType dlx$a
	$VALUES d
	BACKUP c
	CREATE b
	NONE a
net/minecraft/client/Minecraft$ServerStem dlx$b
	packRepository a
	serverResources b
	worldData c
	packRepository ()Lnet/minecraft/server/packs/repository/PackRepository; a
	serverResources ()Lnet/minecraft/server/ServerResources; b
	worldData ()Lnet/minecraft/world/level/storage/WorldData; c
net/minecraft/client/MouseHandler dly
	accumulatedDX n
	accumulatedDY o
	accumulatedScroll p
	activeButton h
	clickDepth j
	fakeRightMouse g
	ignoreFirstMove i
	isLeftPressed b
	isMiddlePressed c
	isRightPressed d
	lastMouseEventTime q
	minecraft a
	mouseGrabbed r
	mousePressedTime k
	smoothTurnX l
	smoothTurnY m
	xpos e
	ypos f
	cursorEntered ()V k
	grabMouse ()V i
	isLeftPressed ()Z b
	isMiddlePressed ()Z c
	isMouseGrabbed ()Z h
	isRightPressed ()Z d
	onDrop (JLjava/util/List;)V a
	onMove (JDD)V b
	onPress (JIII)V a
	onScroll (JDD)V a
	releaseMouse ()V j
	setIgnoreFirstMove ()V g
	setup (J)V a
	turnPlayer ()V a
	xpos ()D e
	ypos ()D f
net/minecraft/client/NarratorStatus dlz
	$VALUES h
	ALL b
	BY_ID e
	CHAT c
	OFF a
	SYSTEM d
	id f
	name g
	byId (I)Lnet/minecraft/client/NarratorStatus; a
	getId ()I a
	getName ()Lnet/minecraft/network/chat/Component; b
net/minecraft/client/Option dma
	AMBIENT_OCCLUSION s
	ATTACK_INDICATOR t
	AUTO_JUMP C
	AUTO_SUGGESTIONS D
	BIOME_BLEND_RADIUS a
	CHAT_COLOR E
	CHAT_DELAY h
	CHAT_HEIGHT_FOCUSED b
	CHAT_HEIGHT_UNFOCUSED c
	CHAT_LINE_SPACING g
	CHAT_LINKS F
	CHAT_LINKS_PROMPT G
	CHAT_OPACITY d
	CHAT_SCALE e
	CHAT_VISIBILITY u
	CHAT_WIDTH f
	DISCRETE_MOUSE_SCROLL H
	ENABLE_VSYNC I
	ENTITY_DISTANCE_SCALING p
	ENTITY_SHADOWS J
	FORCE_UNICODE_FONT K
	FOV i
	FRAMERATE_LIMIT j
	GAMMA k
	GRAPHICS v
	GRAPHICS_TOOLTIP_FABULOUS W
	GRAPHICS_TOOLTIP_FANCY X
	GRAPHICS_TOOLTIP_FAST V
	GUI_SCALE w
	INVERT_MOUSE L
	MAIN_HAND x
	MIPMAP_LEVELS l
	MOUSE_WHEEL_SENSITIVITY m
	NARRATOR y
	PARTICLES z
	RAW_MOUSE_INPUT n
	REALMS_NOTIFICATIONS M
	REDUCED_DEBUG_INFO N
	RENDER_CLOUDS A
	RENDER_DISTANCE o
	SENSITIVITY q
	SHOW_SUBTITLES O
	SNOOPER_ENABLED P
	TEXT_BACKGROUND B
	TEXT_BACKGROUND_OPACITY r
	TOGGLE_CROUCH Q
	TOGGLE_SPRINT R
	TOUCHSCREEN S
	USE_FULLSCREEN T
	VIEW_BOBBING U
	captionId Y
	toolTip Z
	createButton (Lnet/minecraft/client/Options;III)Lnet/minecraft/client/gui/components/AbstractWidget; a
	createCaption ()Lnet/minecraft/network/chat/MutableComponent; a
	getMessage (Lnet/minecraft/client/Options;)Lnet/minecraft/network/chat/Component; c
	getTooltip ()Ljava/util/Optional; b
	setTooltip (Ljava/util/List;)V a
net/minecraft/client/Options dmb
	GSON aU
	LOGGER aT
	OPTION_SPLITTER aW
	RESOURCE_PACK_TYPE aV
	advancedItemTooltips p
	ambientOcclusion g
	attackIndicator C
	autoJump I
	autoSuggestions J
	backgroundForChatOnly W
	biomeBlendRadius E
	bobView Z
	chatColors K
	chatDelay z
	chatHeightFocused y
	chatHeightUnfocused x
	chatLineSpacing l
	chatLinks L
	chatLinksPrompt M
	chatOpacity k
	chatScale v
	chatVisibility j
	chatWidth w
	difficulty aE
	discreteMouseScroll R
	enableVsync N
	entityDistanceScaling c
	entityShadows O
	forceUnicodeFont P
	fov aM
	framerateLimit d
	fullscreen Y
	fullscreenVideoModeString n
	gamma aN
	glDebugVerbosity H
	graphicsMode f
	guiScale aO
	heldItemTooltips u
	hideGui aF
	hideServerAddress o
	incompatibleResourcePacks i
	invertYMouse Q
	keyAdvancements ay
	keyAttack ao
	keyChat aq
	keyCommand as
	keyDown af
	keyDrop am
	keyFullscreen aw
	keyHotbarSlots az
	keyInventory ak
	keyJump ah
	keyLeft ae
	keyLoadHotbarActivator aB
	keyMappings aC
	keyPickItem ap
	keyPlayerList ar
	keyRight ag
	keySaveHotbarActivator aA
	keyScreenshot at
	keyShift ai
	keySmoothCamera av
	keySpectatorOutlines ax
	keySprint aj
	keySwapOffhand al
	keyTogglePerspective au
	keyUp ad
	keyUse an
	languageCode aR
	lastMpIp aK
	mainHand r
	minecraft aD
	mipmapLevels A
	modelParts aX
	mouseWheelSensitivity F
	narratorStatus aQ
	optionsFile aZ
	overrideHeight t
	overrideWidth s
	particles aP
	pauseOnLostFocus q
	rawMouseInput G
	realmsNotifications S
	reducedDebugInfo T
	renderClouds e
	renderDebug aH
	renderDebugCharts aI
	renderDistance b
	renderFpsChart aJ
	resourcePacks h
	sensitivity a
	showSubtitles V
	skipMultiplayerWarning ac
	smoothCamera aL
	snooperEnabled U
	sourceVolumes aY
	syncWrites aS
	textBackgroundOpacity m
	thirdPersonView aG
	toggleCrouch aa
	toggleSprint ab
	touchscreen X
	tutorialStep D
	useNativeTransport B
	broadcastOptions ()V c
	dataFix (Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/nbt/CompoundTag; a
	getBackgroundColor (F)I b
	getBackgroundColor (I)I a
	getBackgroundOpacity (F)F a
	getCloudsType ()Lnet/minecraft/client/CloudStatus; e
	getModelParts ()Ljava/util/Set; d
	getSoundSourceVolume (Lnet/minecraft/sounds/SoundSource;)F a
	load ()V a
	loadSelectedResourcePacks (Lnet/minecraft/server/packs/repository/PackRepository;)V a
	readFloat (Ljava/lang/String;)F a
	save ()V b
	setKey (Lnet/minecraft/client/KeyMapping;Lcom/mojang/blaze3d/platform/InputConstants$Key;)V a
	setModelPart (Lnet/minecraft/world/entity/player/PlayerModelPart;Z)V a
	setSoundCategoryVolume (Lnet/minecraft/sounds/SoundSource;F)V a
	toggleModelPart (Lnet/minecraft/world/entity/player/PlayerModelPart;)V a
	useNativeTransport ()Z f
net/minecraft/client/ParticleStatus dmc
	$VALUES g
	ALL a
	BY_ID d
	DECREASED b
	MINIMAL c
	id e
	key f
	byId (I)Lnet/minecraft/client/ParticleStatus; a
	getId ()I b
	getKey ()Ljava/lang/String; a
net/minecraft/client/ProgressOption dmd
	getter Y
	maxValue X
	minValue W
	setter Z
	steps V
	toString aa
	clamp (D)D c
	createButton (Lnet/minecraft/client/Options;III)Lnet/minecraft/client/gui/components/AbstractWidget; a
	get (Lnet/minecraft/client/Options;)D a
	getMaxValue ()D d
	getMessage (Lnet/minecraft/client/Options;)Lnet/minecraft/network/chat/Component; c
	getMinValue ()D c
	set (Lnet/minecraft/client/Options;D)V a
	setMaxValue (F)V a
	toPct (D)D a
	toValue (D)D b
net/minecraft/client/RecipeBookCategories dme
	$VALUES t
	BLAST_FURNACE_BLOCKS k
	BLAST_FURNACE_MISC l
	BLAST_FURNACE_SEARCH j
	CAMPFIRE q
	CRAFTING_BUILDING_BLOCKS b
	CRAFTING_EQUIPMENT d
	CRAFTING_MISC e
	CRAFTING_REDSTONE c
	FURNACE_BLOCKS h
	FURNACE_FOOD g
	FURNACE_MISC i
	FURNACE_SEARCH f
	SEARCH a
	SMITHING p
	SMOKER_FOOD n
	SMOKER_SEARCH m
	STONECUTTER o
	UNKNOWN r
	itemIcons s
	getIconItems ()Ljava/util/List; a
net/minecraft/client/Screenshot dmf
	DATE_FORMAT b
	LOGGER a
	bytes e
	file h
	height g
	outputStream d
	rowHeight c
	width f
	_grab (Ljava/io/File;Ljava/lang/String;IILcom/mojang/blaze3d/pipeline/RenderTarget;Ljava/util/function/Consumer;)V b
	addRegion (Ljava/nio/ByteBuffer;IIII)V a
	close ()Ljava/io/File; b
	getFile (Ljava/io/File;)Ljava/io/File; a
	grab (Ljava/io/File;IILcom/mojang/blaze3d/pipeline/RenderTarget;Ljava/util/function/Consumer;)V a
	grab (Ljava/io/File;Ljava/lang/String;IILcom/mojang/blaze3d/pipeline/RenderTarget;Ljava/util/function/Consumer;)V a
	saveRow ()V a
	takeScreenshot (IILcom/mojang/blaze3d/pipeline/RenderTarget;)Lcom/mojang/blaze3d/platform/NativeImage; a
net/minecraft/client/Session dmg
	difficulty c
	gameMode d
	id e
	isRemoteServer b
	players a
net/minecraft/client/StringDecomposer dmh
	STOP_ITERATION a
	feedChar (Lnet/minecraft/network/chat/Style;Lnet/minecraft/client/StringDecomposer$Output;IC)Z a
	filterBrokenSurrogates (Ljava/lang/String;)Ljava/lang/String; a
	iterate (Ljava/lang/String;Lnet/minecraft/network/chat/Style;Lnet/minecraft/client/StringDecomposer$Output;)Z a
	iterateBackwards (Ljava/lang/String;Lnet/minecraft/network/chat/Style;Lnet/minecraft/client/StringDecomposer$Output;)Z b
	iterateFormatted (Ljava/lang/String;ILnet/minecraft/network/chat/Style;Lnet/minecraft/client/StringDecomposer$Output;)Z a
	iterateFormatted (Ljava/lang/String;ILnet/minecraft/network/chat/Style;Lnet/minecraft/network/chat/Style;Lnet/minecraft/client/StringDecomposer$Output;)Z a
	iterateFormatted (Ljava/lang/String;Lnet/minecraft/network/chat/Style;Lnet/minecraft/client/StringDecomposer$Output;)Z c
	iterateFormatted (Lnet/minecraft/network/chat/FormattedText;Lnet/minecraft/network/chat/Style;Lnet/minecraft/client/StringDecomposer$Output;)Z a
net/minecraft/client/StringDecomposer$Output dmh$a
net/minecraft/client/StringSplitter dmi
	widthProvider a
	componentStyleAtWidth (Lnet/minecraft/network/chat/FormattedText;I)Lnet/minecraft/network/chat/Style; a
	findLineBreak (Ljava/lang/String;ILnet/minecraft/network/chat/Style;)I f
	formattedHeadByWidth (Ljava/lang/String;ILnet/minecraft/network/chat/Style;)Ljava/lang/String; e
	formattedIndexByWidth (Ljava/lang/String;ILnet/minecraft/network/chat/Style;)I d
	formattedLine (Lnet/minecraft/network/chat/FormattedText;ZLnet/minecraft/network/chat/FormattedText;)Lnet/minecraft/network/chat/FormattedText; a
	getWordPosition (Ljava/lang/String;IIZ)I a
	headByWidth (Lnet/minecraft/network/chat/FormattedText;ILnet/minecraft/network/chat/Style;)Lnet/minecraft/network/chat/FormattedText; a
	plainHeadByWidth (Ljava/lang/String;ILnet/minecraft/network/chat/Style;)Ljava/lang/String; b
	plainIndexAtWidth (Ljava/lang/String;ILnet/minecraft/network/chat/Style;)I a
	plainTailByWidth (Ljava/lang/String;ILnet/minecraft/network/chat/Style;)Ljava/lang/String; c
	splitLines (Ljava/lang/String;ILnet/minecraft/network/chat/Style;)Ljava/util/List; g
	splitLines (Ljava/lang/String;ILnet/minecraft/network/chat/Style;ZLnet/minecraft/client/StringSplitter$LinePosConsumer;)V a
	splitLines (Lnet/minecraft/network/chat/FormattedText;ILnet/minecraft/network/chat/Style;)Ljava/util/List; b
	splitLines (Lnet/minecraft/network/chat/FormattedText;ILnet/minecraft/network/chat/Style;Lnet/minecraft/network/chat/FormattedText;)Ljava/util/List; a
	stringWidth (Ljava/lang/String;)F a
	stringWidth (Lnet/minecraft/network/chat/FormattedText;)F a
net/minecraft/client/StringSplitter$FlatComponents dmi$a
	flatParts b
	parts a
	charAt (I)C a
	getRemainder ()Lnet/minecraft/network/chat/FormattedText; a
	splitAt (IILnet/minecraft/network/chat/Style;)Lnet/minecraft/network/chat/FormattedText; a
net/minecraft/client/StringSplitter$LineBreakFinder dmi$b
	hadNonZeroWidthChar e
	lastSpace g
	lastSpaceStyle h
	lineBreak c
	lineBreakStyle d
	maxWidth b
	nextChar i
	offset j
	width f
	addToOffset (I)V a
	finishIteration (ILnet/minecraft/network/chat/Style;)Z a
	getSplitPosition ()I a
	getSplitStyle ()Lnet/minecraft/network/chat/Style; b
	lineBreakFound ()Z c
net/minecraft/client/StringSplitter$LineComponent dmi$c
	contents a
	style d
	visit (Lnet/minecraft/network/chat/FormattedText$ContentConsumer;)Ljava/util/Optional; a
	visit (Lnet/minecraft/network/chat/FormattedText$StyledContentConsumer;Lnet/minecraft/network/chat/Style;)Ljava/util/Optional; a
net/minecraft/client/StringSplitter$LinePosConsumer dmi$d
net/minecraft/client/StringSplitter$WidthLimitedCharSink dmi$e
	maxWidth b
	position c
	getPosition ()I a
	resetPosition ()V b
net/minecraft/client/StringSplitter$WidthProvider dmi$f
net/minecraft/client/Timer dmj
	lastMs c
	msPerTick d
	partialTick a
	tickDelta b
	advanceTime (J)I a
net/minecraft/client/ToggleKeyMapping dmk
	needsToggle a
	setDown (Z)V a
net/minecraft/client/User dml
	accessToken c
	name a
	type d
	uuid b
	getAccessToken ()Ljava/lang/String; d
	getGameProfile ()Lcom/mojang/authlib/GameProfile; e
	getName ()Ljava/lang/String; c
	getSessionId ()Ljava/lang/String; a
	getType ()Lnet/minecraft/client/User$Type; f
	getUuid ()Ljava/lang/String; b
net/minecraft/client/User$Type dml$a
	$VALUES e
	BY_NAME c
	LEGACY a
	MOJANG b
	name d
	byName (Ljava/lang/String;)Lnet/minecraft/client/User$Type; a
net/minecraft/client/color/block/BlockColor dmm
net/minecraft/client/color/block/BlockColors dmn
	blockColors a
	coloringStates b
	addColoringState (Lnet/minecraft/world/level/block/state/properties/Property;[Lnet/minecraft/world/level/block/Block;)V a
	addColoringStates (Ljava/util/Set;[Lnet/minecraft/world/level/block/Block;)V a
	createDefault ()Lnet/minecraft/client/color/block/BlockColors; a
	getColor (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockAndTintGetter;Lnet/minecraft/core/BlockPos;I)I a
	getColor (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)I a
	getColoringProperties (Lnet/minecraft/world/level/block/Block;)Ljava/util/Set; a
	register (Lnet/minecraft/client/color/block/BlockColor;[Lnet/minecraft/world/level/block/Block;)V a
net/minecraft/client/color/block/BlockTintCache dmo
	cache b
	latestChunkOnThread a
	lock c
	findOrCreateChunkCache (II)[I b
	getColor (Lnet/minecraft/core/BlockPos;Ljava/util/function/IntSupplier;)I a
	invalidateAll ()V a
	invalidateForChunk (II)V a
net/minecraft/client/color/block/BlockTintCache$LatestCacheInfo dmo$a
	cache c
	x a
	z b
net/minecraft/client/color/item/ItemColor dmq
net/minecraft/client/color/item/ItemColors dmr
	itemColors a
	createDefault (Lnet/minecraft/client/color/block/BlockColors;)Lnet/minecraft/client/color/item/ItemColors; a
	getColor (Lnet/minecraft/world/item/ItemStack;I)I a
	register (Lnet/minecraft/client/color/item/ItemColor;[Lnet/minecraft/world/level/ItemLike;)V a
net/minecraft/client/gui/Font dmt
	SHADOW_OFFSET c
	fonts d
	lineHeight a
	random b
	splitter e
	adjustColor (I)I a
	bidirectionalShaping (Ljava/lang/String;)Ljava/lang/String; a
	draw (Lcom/mojang/blaze3d/vertex/PoseStack;Ljava/lang/String;FFI)I b
	draw (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/network/chat/FormattedText;FFI)I b
	drawInBatch (Ljava/lang/String;FFIZLcom/mojang/math/Matrix4f;Lnet/minecraft/client/renderer/MultiBufferSource;ZII)I a
	drawInBatch (Ljava/lang/String;FFIZLcom/mojang/math/Matrix4f;Lnet/minecraft/client/renderer/MultiBufferSource;ZIIZ)I a
	drawInBatch (Lnet/minecraft/network/chat/FormattedText;FFIZLcom/mojang/math/Matrix4f;Lnet/minecraft/client/renderer/MultiBufferSource;ZII)I a
	drawInternal (Ljava/lang/String;FFILcom/mojang/math/Matrix4f;ZZ)I a
	drawInternal (Ljava/lang/String;FFIZLcom/mojang/math/Matrix4f;Lnet/minecraft/client/renderer/MultiBufferSource;ZIIZ)I b
	drawInternal (Lnet/minecraft/network/chat/FormattedText;FFILcom/mojang/math/Matrix4f;Z)I a
	drawInternal (Lnet/minecraft/network/chat/FormattedText;FFIZLcom/mojang/math/Matrix4f;Lnet/minecraft/client/renderer/MultiBufferSource;ZII)I b
	drawRaw (Lcom/mojang/blaze3d/vertex/PoseStack;Ljava/lang/String;FFIZ)I b
	drawShadow (Lcom/mojang/blaze3d/vertex/PoseStack;Ljava/lang/String;FFI)I a
	drawShadow (Lcom/mojang/blaze3d/vertex/PoseStack;Ljava/lang/String;FFIZ)I a
	drawShadow (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/network/chat/FormattedText;FFI)I a
	drawWordWrap (Lnet/minecraft/network/chat/FormattedText;IIII)V a
	getFontSet (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/client/gui/font/FontSet; a
	getSplitter ()Lnet/minecraft/client/StringSplitter; b
	isBidirectional ()Z a
	plainSubstrByWidth (Ljava/lang/String;I)Ljava/lang/String; a
	plainSubstrByWidth (Ljava/lang/String;IZ)Ljava/lang/String; a
	renderChar (Lnet/minecraft/client/gui/font/glyphs/BakedGlyph;ZZFFFLcom/mojang/math/Matrix4f;Lcom/mojang/blaze3d/vertex/VertexConsumer;FFFFI)V a
	renderText (Ljava/lang/String;FFIZLcom/mojang/math/Matrix4f;Lnet/minecraft/client/renderer/MultiBufferSource;ZII)F b
	renderText (Lnet/minecraft/network/chat/FormattedText;FFIZLcom/mojang/math/Matrix4f;Lnet/minecraft/client/renderer/MultiBufferSource;ZII)F c
	split (Lnet/minecraft/network/chat/FormattedText;I)Ljava/util/List; b
	substrByWidth (Lnet/minecraft/network/chat/FormattedText;I)Lnet/minecraft/network/chat/FormattedText; a
	width (Ljava/lang/String;)I b
	width (Lnet/minecraft/network/chat/FormattedText;)I a
	wordWrapHeight (Ljava/lang/String;I)I b
net/minecraft/client/gui/Font$StringRenderOutput dmt$a
	a h
	b g
	bufferSource a
	dimFactor d
	dropShadow c
	effects n
	g f
	packedLightCoords k
	pose i
	r e
	seeThrough j
	x l
	y m
	addEffect (Lnet/minecraft/client/gui/font/glyphs/BakedGlyph$Effect;)V a
	finish (IF)F a
net/minecraft/client/gui/Gui dmu
	PUMPKIN_BLUR_LOCATION d
	VIGNETTE_LOCATION b
	WIDGETS_LOCATION c
	animateOverlayMessageColor o
	bossOverlay v
	chat k
	chatListeners I
	debugScreen r
	displayHealth D
	healthBlinkTime F
	itemRenderer j
	lastHealth C
	lastHealthTime E
	lastToolHighlight q
	minecraft i
	overlayMessageString m
	overlayMessageTime n
	random e
	screenHeight H
	screenWidth G
	spectatorGui t
	subtitle y
	subtitleOverlay s
	tabList u
	tickCount l
	title x
	titleFadeInTime z
	titleFadeOutTime B
	titleStayTime A
	titleTime w
	toolHighlightTimer p
	vignetteBrightness a
	canRenderCrosshairForSpectator (Lnet/minecraft/world/phys/HitResult;)Z a
	clearCache ()V j
	displayScoreboardSidebar (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/world/scores/Objective;)V a
	drawBackdrop (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/gui/Font;III)V a
	getBossOverlay ()Lnet/minecraft/client/gui/components/BossHealthOverlay; i
	getCameraPlayer ()Lnet/minecraft/world/entity/player/Player; k
	getChat ()Lnet/minecraft/client/gui/components/ChatComponent; c
	getFont ()Lnet/minecraft/client/gui/Font; e
	getGuiTicks ()I d
	getPlayerVehicleWithHealth ()Lnet/minecraft/world/entity/LivingEntity; l
	getSpectatorGui ()Lnet/minecraft/client/gui/components/spectator/SpectatorGui; f
	getTabList ()Lnet/minecraft/client/gui/components/PlayerTabOverlay; g
	getVehicleMaxHearts (Lnet/minecraft/world/entity/LivingEntity;)I a
	getVisibleVehicleHeartRows (I)I a
	handleChat (Lnet/minecraft/network/chat/ChatType;Lnet/minecraft/network/chat/Component;Ljava/util/UUID;)V a
	onDisconnected ()V h
	render (Lcom/mojang/blaze3d/vertex/PoseStack;F)V a
	renderCrosshair (Lcom/mojang/blaze3d/vertex/PoseStack;)V d
	renderDemoOverlay (Lcom/mojang/blaze3d/vertex/PoseStack;)V c
	renderEffects (Lcom/mojang/blaze3d/vertex/PoseStack;)V a
	renderExperienceBar (Lcom/mojang/blaze3d/vertex/PoseStack;I)V b
	renderHotbar (FLcom/mojang/blaze3d/vertex/PoseStack;)V a
	renderJumpMeter (Lcom/mojang/blaze3d/vertex/PoseStack;I)V a
	renderPlayerHealth (Lcom/mojang/blaze3d/vertex/PoseStack;)V e
	renderPortalOverlay (F)V a
	renderPumpkin ()V m
	renderSelectedItemName (Lcom/mojang/blaze3d/vertex/PoseStack;)V b
	renderSlot (IIFLnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/item/ItemStack;)V a
	renderVehicleHealth (Lcom/mojang/blaze3d/vertex/PoseStack;)V f
	renderVignette (Lnet/minecraft/world/entity/Entity;)V b
	resetTitleTimes ()V a
	setNowPlaying (Lnet/minecraft/network/chat/Component;)V a
	setOverlayMessage (Lnet/minecraft/network/chat/Component;Z)V a
	setTitles (Lnet/minecraft/network/chat/Component;Lnet/minecraft/network/chat/Component;III)V a
	tick ()V b
	updateVignetteBrightness (Lnet/minecraft/world/entity/Entity;)V a
net/minecraft/client/gui/GuiComponent dmv
	BACKGROUND_LOCATION f
	GUI_ICONS_LOCATION h
	STATS_ICON_LOCATION g
	blitOffset a
	blit (Lcom/mojang/blaze3d/vertex/PoseStack;IIFFIIII)V a
	blit (Lcom/mojang/blaze3d/vertex/PoseStack;IIIFFIIII)V a
	blit (Lcom/mojang/blaze3d/vertex/PoseStack;IIIIFFIIII)V a
	blit (Lcom/mojang/blaze3d/vertex/PoseStack;IIIIII)V b
	blit (Lcom/mojang/blaze3d/vertex/PoseStack;IIIIILnet/minecraft/client/renderer/texture/TextureAtlasSprite;)V a
	blitOutlineBlack (IILjava/util/function/BiConsumer;)V a
	drawCenteredString (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/gui/Font;Ljava/lang/String;III)V a
	drawCenteredString (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/gui/Font;Lnet/minecraft/network/chat/FormattedText;III)V a
	drawRightAlignedString (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/gui/Font;Ljava/lang/String;III)V b
	drawString (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/gui/Font;Ljava/lang/String;III)V c
	drawString (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/gui/Font;Lnet/minecraft/network/chat/FormattedText;III)V b
	fill (Lcom/mojang/blaze3d/vertex/PoseStack;IIIII)V a
	fillGradient (Lcom/mojang/blaze3d/vertex/PoseStack;IIIIII)V a
	fillGradient (Lcom/mojang/math/Matrix4f;Lcom/mojang/blaze3d/vertex/BufferBuilder;IIIIIII)V a
	getBlitOffset ()I o
	hLine (Lcom/mojang/blaze3d/vertex/PoseStack;IIII)V a
	innerBlit (Lcom/mojang/blaze3d/vertex/PoseStack;IIIIIIIFFII)V a
	innerBlit (Lcom/mojang/math/Matrix4f;IIIIIFFFF)V a
	innerFill (Lcom/mojang/math/Matrix4f;IIIII)V a
	setBlitOffset (I)V e
	vLine (Lcom/mojang/blaze3d/vertex/PoseStack;IIII)V b
net/minecraft/client/gui/MapRenderer dmw
	MAP_ICONS b
	MAP_ICONS_LOCATION a
	maps d
	textureManager c
	getData (Lnet/minecraft/client/gui/MapRenderer$MapInstance;)Lnet/minecraft/world/level/saveddata/maps/MapItemSavedData; a
	getMapInstance (Lnet/minecraft/world/level/saveddata/maps/MapItemSavedData;)Lnet/minecraft/client/gui/MapRenderer$MapInstance; b
	getMapInstanceIfExists (Ljava/lang/String;)Lnet/minecraft/client/gui/MapRenderer$MapInstance; a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;Lnet/minecraft/world/level/saveddata/maps/MapItemSavedData;ZI)V a
	resetData ()V a
	update (Lnet/minecraft/world/level/saveddata/maps/MapItemSavedData;)V a
net/minecraft/client/gui/MapRenderer$MapInstance dmw$a
	data b
	renderType d
	texture c
	draw (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;ZI)V a
	updateTexture ()V a
net/minecraft/client/gui/chat/ChatListener dmx
	handle (Lnet/minecraft/network/chat/ChatType;Lnet/minecraft/network/chat/Component;Ljava/util/UUID;)V a
net/minecraft/client/gui/chat/NarratorChatListener dmy
	INSTANCE b
	LOGGER c
	NO_TITLE a
	narrator d
	clear ()V b
	destroy ()V c
	doSay (ZLjava/lang/String;)V a
	getStatus ()Lnet/minecraft/client/NarratorStatus; d
	handle (Lnet/minecraft/network/chat/ChatType;Lnet/minecraft/network/chat/Component;Ljava/util/UUID;)V a
	isActive ()Z a
	sayNow (Ljava/lang/String;)V a
	updateNarratorStatus (Lnet/minecraft/client/NarratorStatus;)V a
net/minecraft/client/gui/chat/OverlayChatListener dmz
	minecraft a
	handle (Lnet/minecraft/network/chat/ChatType;Lnet/minecraft/network/chat/Component;Ljava/util/UUID;)V a
net/minecraft/client/gui/chat/StandardChatListener dna
	minecraft a
	handle (Lnet/minecraft/network/chat/ChatType;Lnet/minecraft/network/chat/Component;Ljava/util/UUID;)V a
net/minecraft/client/gui/components/AbstractButton dnc
	keyPressed (III)Z a
	onClick (DD)V a
	onPress ()V b
net/minecraft/client/gui/components/AbstractOptionSliderButton dnd
	options a
net/minecraft/client/gui/components/AbstractSelectionList dne
	centerListVertically m
	children a
	headerHeight n
	height e
	itemHeight c
	minecraft b
	renderHeader q
	renderSelection p
	scrollAmount o
	scrolling r
	selected s
	width d
	x0 l
	x1 k
	y0 i
	y1 j
	addEntry (Lnet/minecraft/client/gui/components/AbstractSelectionList$Entry;)I b
	bindEntryToSelf (Lnet/minecraft/client/gui/components/AbstractSelectionList$Entry;)V f
	centerScrollOn (Lnet/minecraft/client/gui/components/AbstractSelectionList$Entry;)V c
	children ()Ljava/util/List; av_
	clearEntries ()V k
	clickedHeader (II)V a
	ensureVisible (Lnet/minecraft/client/gui/components/AbstractSelectionList$Entry;)V d
	getEntry (I)Lnet/minecraft/client/gui/components/AbstractSelectionList$Entry; d
	getEntryAtPosition (DD)Lnet/minecraft/client/gui/components/AbstractSelectionList$Entry; a
	getFocused ()Lnet/minecraft/client/gui/components/AbstractSelectionList$Entry; i
	getFocused ()Lnet/minecraft/client/gui/components/events/GuiEventListener; r
	getItemCount ()I l
	getMaxPosition ()I c
	getMaxScroll ()I f
	getRowBottom (I)I b
	getRowLeft ()I q
	getRowTop (I)I h
	getRowWidth ()I d
	getScrollAmount ()D m
	getScrollBottom ()I n
	getScrollbarPosition ()I e
	getSelected ()Lnet/minecraft/client/gui/components/AbstractSelectionList$Entry; h
	isFocused ()Z b
	isMouseOver (DD)Z b
	isSelectedItem (I)Z f
	keyPressed (III)Z a
	mouseClicked (DDI)Z a
	mouseDragged (DDIDD)Z a
	mouseReleased (DDI)Z c
	mouseScrolled (DDD)Z a
	moveSelection (Lnet/minecraft/client/gui/components/AbstractSelectionList$SelectionDirection;)V a
	moveSelection (Lnet/minecraft/client/gui/components/AbstractSelectionList$SelectionDirection;Ljava/util/function/Predicate;)V a
	refreshSelection ()V p
	remove (I)Lnet/minecraft/client/gui/components/AbstractSelectionList$Entry; i
	removeEntry (Lnet/minecraft/client/gui/components/AbstractSelectionList$Entry;)Z e
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V a
	renderBackground (Lcom/mojang/blaze3d/vertex/PoseStack;)V a
	renderDecorations (Lcom/mojang/blaze3d/vertex/PoseStack;II)V a
	renderHeader (Lcom/mojang/blaze3d/vertex/PoseStack;IILcom/mojang/blaze3d/vertex/Tesselator;)V a
	renderList (Lcom/mojang/blaze3d/vertex/PoseStack;IIIIF)V a
	replaceEntries (Ljava/util/Collection;)V a
	scroll (I)V a
	setLeftPos (I)V g
	setRenderHeader (ZI)V a
	setRenderSelection (Z)V a
	setScrollAmount (D)V a
	setSelected (Lnet/minecraft/client/gui/components/AbstractSelectionList$Entry;)V a
	updateScrollingState (DDI)V b
	updateSize (IIII)V a
net/minecraft/client/gui/components/AbstractSelectionList$Entry dne$a
	list a
	isMouseOver (DD)Z b
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIIIIIIZF)V a
net/minecraft/client/gui/components/AbstractSelectionList$SelectionDirection dne$b
	$VALUES c
	DOWN b
	UP a
net/minecraft/client/gui/components/AbstractSelectionList$TrackedList dne$c
	delegate b
	add (ILnet/minecraft/client/gui/components/AbstractSelectionList$Entry;)V b
	get (I)Lnet/minecraft/client/gui/components/AbstractSelectionList$Entry; a
	remove (I)Lnet/minecraft/client/gui/components/AbstractSelectionList$Entry; b
	set (ILnet/minecraft/client/gui/components/AbstractSelectionList$Entry;)Lnet/minecraft/client/gui/components/AbstractSelectionList$Entry; a
net/minecraft/client/gui/components/AbstractSliderButton dnf
	value b
	applyValue ()V a
	createNarrationMessage ()Lnet/minecraft/network/chat/MutableComponent; c
	getYImage (Z)I a
	keyPressed (III)Z a
	onClick (DD)V a
	onDrag (DDDD)V a
	onRelease (DD)V a_
	playDownSound (Lnet/minecraft/client/sounds/SoundManager;)V a
	renderBg (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/Minecraft;II)V a
	setValue (D)V b
	setValueFromMouse (D)V a
	updateMessage ()V b
net/minecraft/client/gui/components/AbstractWidget dng
	WIDGETS_LOCATION i
	active o
	alpha q
	focused c
	height k
	isHovered n
	message a
	nextNarration r
	visible p
	wasHovered b
	width j
	x l
	y m
	changeFocus (Z)Z c_
	clicked (DD)Z c
	createNarrationMessage ()Lnet/minecraft/network/chat/MutableComponent; c
	getHeight ()I e
	getMessage ()Lnet/minecraft/network/chat/Component; i
	getWidth ()I h
	getYImage (Z)I a
	isFocused ()Z j
	isHovered ()Z g
	isMouseOver (DD)Z b
	isValidClickButton (I)Z a
	mouseClicked (DDI)Z a
	mouseDragged (DDIDD)Z a
	mouseReleased (DDI)Z c
	narrate ()V f
	onClick (DD)V a
	onDrag (DDDD)V a
	onFocusedChanged (Z)V c
	onRelease (DD)V a_
	playDownSound (Lnet/minecraft/client/sounds/SoundManager;)V a
	queueNarration (I)V c
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V a
	renderBg (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/Minecraft;II)V a
	renderButton (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V b
	renderToolTip (Lcom/mojang/blaze3d/vertex/PoseStack;II)V a
	setAlpha (F)V a
	setFocused (Z)V d
	setMessage (Lnet/minecraft/network/chat/Component;)V a
	setWidth (I)V b
net/minecraft/client/gui/components/BossHealthOverlay dnh
	GUI_BARS_LOCATION a
	events c
	minecraft b
	drawBar (Lcom/mojang/blaze3d/vertex/PoseStack;IILnet/minecraft/world/BossEvent;)V a
	hasBoss ()Z b
	render (Lcom/mojang/blaze3d/vertex/PoseStack;)V a
	reset ()V a
	shouldCreateWorldFog ()Z e
	shouldDarkenScreen ()Z d
	shouldPlayMusic ()Z c
	update (Lnet/minecraft/network/protocol/game/ClientboundBossEventPacket;)V a
net/minecraft/client/gui/components/Button dni
	NO_TOOLTIP s
	onPress t
	onTooltip u
	onPress ()V b
	renderButton (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V b
	renderToolTip (Lcom/mojang/blaze3d/vertex/PoseStack;II)V a
net/minecraft/client/gui/components/Button$OnPress dni$a
net/minecraft/client/gui/components/Button$OnTooltip dni$b
net/minecraft/client/gui/components/ChatComponent dnj
	LOGGER a
	allMessages d
	chatQueue i
	chatScrollbarPos j
	lastMessage l
	minecraft b
	newMessageSinceScroll k
	recentChat c
	trimmedMessages e
	addMessage (Lnet/minecraft/network/chat/Component;)V a
	addMessage (Lnet/minecraft/network/chat/Component;I)V a
	addMessage (Lnet/minecraft/network/chat/FormattedText;IIZ)V a
	addRecentChat (Ljava/lang/String;)V a
	clearMessages (Z)V a
	enqueueMessage (Lnet/minecraft/network/chat/Component;)V b
	getChatRateMillis ()J j
	getClickedComponentStyleAt (DD)Lnet/minecraft/network/chat/Style; b
	getHeight ()I f
	getHeight (D)I c
	getLinesPerPage ()I h
	getRecentChat ()Ljava/util/List; b
	getScale ()D g
	getTimeFactor (I)D b
	getWidth ()I e
	getWidth (D)I b
	handleChatQueueClicked (DD)Z a
	isChatFocused ()Z d
	isChatHidden ()Z i
	processPendingMessages ()V k
	removeById (I)V a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;I)V a
	rescaleChat ()V a
	resetChatScroll ()V c
	scrollChat (D)V a
net/minecraft/client/gui/components/Checkbox dnk
	TEXTURE a
	selected b
	showLabel c
	onPress ()V b
	renderButton (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V b
	selected ()Z a
net/minecraft/client/gui/components/CommandSuggestions dnl
	WHITESPACE_PATTERN a
	allowSuggestions r
	anchorToBottom j
	commandUsage l
	commandUsagePosition m
	commandUsageWidth n
	commandsOnly f
	currentParse o
	fillColor k
	font e
	input d
	keepSuggestions s
	lineStartOffset h
	minecraft b
	onlyShowIfCursorPastError g
	pendingSuggestions p
	screen c
	suggestionLineLimit i
	suggestions q
	calculateSuggestionSuffix (Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; b
	fillNodeUsage (Lnet/minecraft/ChatFormatting;)V a
	formatChat (Ljava/lang/String;I)Ljava/lang/String; a
	formatText (Lcom/mojang/brigadier/ParseResults;Ljava/lang/String;I)Ljava/lang/String; a
	getLastWordIndex (Ljava/lang/String;)I a
	getNarrationMessage ()Ljava/lang/String; c
	keyPressed (III)Z a
	mouseClicked (DDI)Z a
	mouseScrolled (D)Z a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;II)V a
	setAllowSuggestions (Z)V a
	showSuggestions (Z)V b
	sortSuggestions (Lcom/mojang/brigadier/suggestion/Suggestions;)Ljava/util/List; a
	updateCommandInfo ()V a
	updateUsageInfo ()V b
net/minecraft/client/gui/components/CommandSuggestions$SuggestionsList dnl$a
	current f
	lastMouse g
	lastNarratedEntry i
	offset e
	originalContents c
	rect b
	suggestionList d
	tabCycles h
	cycle (I)V a
	getNarrationMessage ()Ljava/lang/String; c
	hide ()V b
	keyPressed (III)Z b
	mouseClicked (III)Z a
	mouseScrolled (D)Z a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;II)V a
	select (I)V b
	useSuggestion ()V a
net/minecraft/client/gui/components/ComponentRenderUtils dnm
	INDENT a
	stripColor (Ljava/lang/String;)Ljava/lang/String; a
	wrapComponents (Lnet/minecraft/network/chat/FormattedText;ILnet/minecraft/client/gui/Font;)Ljava/util/List; a
net/minecraft/client/gui/components/ContainerObjectSelectionList dnn
	changeFocus (Z)Z c_
	isSelectedItem (I)Z f
net/minecraft/client/gui/components/ContainerObjectSelectionList$Entry dnn$a
	dragging b
	focused a
	getFocused ()Lnet/minecraft/client/gui/components/events/GuiEventListener; r
	isDragging ()Z aw_
	setDragging (Z)V b_
	setFocused (Lnet/minecraft/client/gui/components/events/GuiEventListener;)V a
net/minecraft/client/gui/components/DebugScreenOverlay dno
	HEIGHTMAP_NAMES a
	block d
	clientChunk j
	font c
	lastPos i
	liquid e
	minecraft b
	serverChunk k
	bytesToMegabytes (J)J a
	clearChunkCache ()V a
	colorLerp (IIF)I a
	drawChart (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/util/FrameTimer;IIZ)V a
	drawGameInformation (Lcom/mojang/blaze3d/vertex/PoseStack;)V b
	drawSystemInformation (Lcom/mojang/blaze3d/vertex/PoseStack;)V c
	getClientChunk ()Lnet/minecraft/world/level/chunk/LevelChunk; h
	getGameInformation ()Ljava/util/List; b
	getLevel ()Lnet/minecraft/world/level/Level; f
	getPropertyValueString (Ljava/util/Map$Entry;)Ljava/lang/String; a
	getSampleColor (IIII)I a
	getServerChunk ()Lnet/minecraft/world/level/chunk/LevelChunk; g
	getServerChunkStats ()Ljava/lang/String; e
	getServerLevel ()Lnet/minecraft/server/level/ServerLevel; d
	getSystemInformation ()Ljava/util/List; c
	render (Lcom/mojang/blaze3d/vertex/PoseStack;)V a
net/minecraft/client/gui/components/EditBox dnp
	bordered e
	canLoseFocus s
	cursorPos w
	displayPos v
	filter C
	font a
	formatter D
	frame d
	highlightPos x
	isEditable t
	maxLength c
	responder B
	shiftPressed u
	suggestion A
	textColor y
	textColorUneditable z
	value b
	canConsumeInput ()Z m
	changeFocus (Z)Z c_
	charTyped (CI)Z a
	createNarrationMessage ()Lnet/minecraft/network/chat/MutableComponent; c
	deleteChars (I)V f
	deleteText (I)V q
	deleteWords (I)V d
	getCursorPos (I)I r
	getCursorPosition ()I n
	getHighlighted ()Ljava/lang/String; d
	getInnerWidth ()I p
	getMaxLength ()I r
	getScreenX (I)I o
	getValue ()Ljava/lang/String; b
	getWordPosition (I)I g
	getWordPosition (II)I a
	getWordPosition (IIZ)I a
	insertText (Ljava/lang/String;)V b
	isBordered ()Z s
	isEditable ()Z t
	isMouseOver (DD)Z b
	isVisible ()Z q
	keyPressed (III)Z a
	mouseClicked (DDI)Z a
	moveCursor (I)V h
	moveCursorTo (I)V i
	moveCursorToEnd ()V l
	moveCursorToStart ()V k
	onFocusedChanged (Z)V c
	onValueChange (Ljava/lang/String;)V d
	renderButton (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V b
	renderHighlight (IIII)V a
	setBordered (Z)V f
	setCanLoseFocus (Z)V h
	setCursorPosition (I)V j
	setEditable (Z)V g
	setFilter (Ljava/util/function/Predicate;)V a
	setFocus (Z)V e
	setFormatter (Ljava/util/function/BiFunction;)V a
	setHighlightPos (I)V n
	setMaxLength (I)V k
	setResponder (Ljava/util/function/Consumer;)V a
	setSuggestion (Ljava/lang/String;)V c
	setTextColor (I)V l
	setTextColorUneditable (I)V m
	setValue (Ljava/lang/String;)V a
	setVisible (Z)V i
	setX (I)V p
	tick ()V a
net/minecraft/client/gui/components/ImageButton dnq
	resourceLocation a
	textureHeight v
	textureWidth e
	xTexStart b
	yDiffTex d
	yTexStart c
	renderButton (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V b
	setPosition (II)V a
net/minecraft/client/gui/components/LerpingBossEvent dnr
	setTime i
	targetPercent h
	getPercent ()F k
	setPercent (F)V a
	update (Lnet/minecraft/network/protocol/game/ClientboundBossEventPacket;)V a
net/minecraft/client/gui/components/LockIconButton dns
	locked a
	createNarrationMessage ()Lnet/minecraft/network/chat/MutableComponent; c
	isLocked ()Z a
	renderButton (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V b
	setLocked (Z)V e
net/minecraft/client/gui/components/LockIconButton$Icon dns$a
	$VALUES i
	LOCKED a
	LOCKED_DISABLED c
	LOCKED_HOVER b
	UNLOCKED d
	UNLOCKED_DISABLED f
	UNLOCKED_HOVER e
	x g
	y h
	getX ()I a
	getY ()I b
net/minecraft/client/gui/components/ObjectSelectionList dnt
	inFocus a
	changeFocus (Z)Z c_
net/minecraft/client/gui/components/ObjectSelectionList$Entry dnt$a
	changeFocus (Z)Z c_
net/minecraft/client/gui/components/OptionButton dnu
	option a
	getOption ()Lnet/minecraft/client/Option; a
net/minecraft/client/gui/components/OptionsList dnv
	addBig (Lnet/minecraft/client/Option;)I a
	addSmall (Lnet/minecraft/client/Option;Lnet/minecraft/client/Option;)V a
	addSmall ([Lnet/minecraft/client/Option;)V a
	getMouseOver (DD)Ljava/util/Optional; c
	getRowWidth ()I d
	getScrollbarPosition ()I e
net/minecraft/client/gui/components/OptionsList$Entry dnv$a
	children a
	big (Lnet/minecraft/client/Options;ILnet/minecraft/client/Option;)Lnet/minecraft/client/gui/components/OptionsList$Entry; a
	children ()Ljava/util/List; av_
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIIIIIIZF)V a
	small (Lnet/minecraft/client/Options;ILnet/minecraft/client/Option;Lnet/minecraft/client/Option;)Lnet/minecraft/client/gui/components/OptionsList$Entry; a
net/minecraft/client/gui/components/PlayerTabOverlay dnw
	PLAYER_ORDERING a
	footer d
	gui c
	header e
	minecraft b
	visibilityId i
	visible j
	decorateName (Lnet/minecraft/client/multiplayer/PlayerInfo;Lnet/minecraft/network/chat/MutableComponent;)Lnet/minecraft/network/chat/Component; a
	getNameForDisplay (Lnet/minecraft/client/multiplayer/PlayerInfo;)Lnet/minecraft/network/chat/Component; a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;ILnet/minecraft/world/scores/Scoreboard;Lnet/minecraft/world/scores/Objective;)V a
	renderPingIcon (Lcom/mojang/blaze3d/vertex/PoseStack;IIILnet/minecraft/client/multiplayer/PlayerInfo;)V a
	renderTablistScore (Lnet/minecraft/world/scores/Objective;ILjava/lang/String;IILnet/minecraft/client/multiplayer/PlayerInfo;Lcom/mojang/blaze3d/vertex/PoseStack;)V a
	reset ()V a
	setFooter (Lnet/minecraft/network/chat/Component;)V a
	setHeader (Lnet/minecraft/network/chat/Component;)V b
	setVisible (Z)V a
net/minecraft/client/gui/components/PlayerTabOverlay$PlayerInfoComparator dnw$a
	compare (Lnet/minecraft/client/multiplayer/PlayerInfo;Lnet/minecraft/client/multiplayer/PlayerInfo;)I a
net/minecraft/client/gui/components/SliderButton dnx
	option c
	applyValue ()V a
	updateMessage ()V b
net/minecraft/client/gui/components/StateSwitchingButton dny
	isStateTriggered b
	resourceLocation a
	xDiffTex e
	xTexStart c
	yDiffTex s
	yTexStart d
	initTextureValues (IIIILnet/minecraft/resources/ResourceLocation;)V a
	isStateTriggered ()Z a
	renderButton (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V b
	setPosition (II)V a
	setStateTriggered (Z)V e
net/minecraft/client/gui/components/SubtitleOverlay dnz
	isListening c
	minecraft a
	subtitles b
	onPlaySound (Lnet/minecraft/client/resources/sounds/SoundInstance;Lnet/minecraft/client/sounds/WeighedSoundEvents;)V a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;)V a
net/minecraft/client/gui/components/SubtitleOverlay$Subtitle dnz$a
	location d
	text b
	time c
	getLocation ()Lnet/minecraft/world/phys/Vec3; c
	getText ()Lnet/minecraft/network/chat/Component; a
	getTime ()J b
	refresh (Lnet/minecraft/world/phys/Vec3;)V a
net/minecraft/client/gui/components/TickableWidget doa
	tick ()V d
net/minecraft/client/gui/components/VolumeSlider dob
	source c
	applyValue ()V a
	updateMessage ()V b
net/minecraft/client/gui/components/Widget doc
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V a
net/minecraft/client/gui/components/events/AbstractContainerEventHandler dod
	focused a
	isDragging b
	getFocused ()Lnet/minecraft/client/gui/components/events/GuiEventListener; r
	isDragging ()Z aw_
	setDragging (Z)V b_
	setFocused (Lnet/minecraft/client/gui/components/events/GuiEventListener;)V a
net/minecraft/client/gui/components/events/ContainerEventHandler doe
	changeFocus (Z)Z c_
	charTyped (CI)Z a
	children ()Ljava/util/List; av_
	getChildAt (DD)Ljava/util/Optional; d
	getFocused ()Lnet/minecraft/client/gui/components/events/GuiEventListener; r
	isDragging ()Z aw_
	keyPressed (III)Z a
	keyReleased (III)Z b
	magicalSpecialHackyFocus (Lnet/minecraft/client/gui/components/events/GuiEventListener;)V c
	mouseClicked (DDI)Z a
	mouseDragged (DDIDD)Z a
	mouseReleased (DDI)Z c
	mouseScrolled (DDD)Z a
	setDragging (Z)V b_
	setFocused (Lnet/minecraft/client/gui/components/events/GuiEventListener;)V a
	setInitialFocus (Lnet/minecraft/client/gui/components/events/GuiEventListener;)V b
net/minecraft/client/gui/components/events/GuiEventListener dof
	changeFocus (Z)Z c_
	charTyped (CI)Z a
	isMouseOver (DD)Z b
	keyPressed (III)Z a
	keyReleased (III)Z b
	mouseClicked (DDI)Z a
	mouseDragged (DDIDD)Z a
	mouseMoved (DD)V e
	mouseReleased (DDI)Z c
	mouseScrolled (DDD)Z a
net/minecraft/client/gui/components/spectator/SpectatorGui doi
	SPECTATOR_LOCATION a
	WIDGETS_LOCATION b
	lastSelectionTime d
	menu e
	minecraft c
	getHotbarAlpha ()F c
	isMenuActive ()Z a
	onHotbarSelected (I)V a
	onMouseMiddleClick ()V b
	onMouseScrolled (D)V a
	onSpectatorMenuClosed (Lnet/minecraft/client/gui/spectator/SpectatorMenu;)V a
	renderHotbar (Lcom/mojang/blaze3d/vertex/PoseStack;F)V a
	renderPage (Lcom/mojang/blaze3d/vertex/PoseStack;FIILnet/minecraft/client/gui/spectator/categories/SpectatorPage;)V a
	renderSlot (Lcom/mojang/blaze3d/vertex/PoseStack;IIFFLnet/minecraft/client/gui/spectator/SpectatorMenuItem;)V a
	renderTooltip (Lcom/mojang/blaze3d/vertex/PoseStack;)V a
net/minecraft/client/gui/components/toasts/AdvancementToast dok
	advancement c
	playedSound d
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/gui/components/toasts/ToastComponent;J)Lnet/minecraft/client/gui/components/toasts/Toast$Visibility; a
net/minecraft/client/gui/components/toasts/RecipeToast dol
	changed e
	lastChanged d
	recipes c
	addItem (Lnet/minecraft/world/item/crafting/Recipe;)V a
	addOrUpdate (Lnet/minecraft/client/gui/components/toasts/ToastComponent;Lnet/minecraft/world/item/crafting/Recipe;)V a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/gui/components/toasts/ToastComponent;J)Lnet/minecraft/client/gui/components/toasts/Toast$Visibility; a
net/minecraft/client/gui/components/toasts/SystemToast dom
	changed g
	id c
	lastChanged f
	messageLines e
	title d
	width h
	add (Lnet/minecraft/client/gui/components/toasts/ToastComponent;Lnet/minecraft/client/gui/components/toasts/SystemToast$SystemToastIds;Lnet/minecraft/network/chat/Component;Lnet/minecraft/network/chat/Component;)V a
	addOrUpdate (Lnet/minecraft/client/gui/components/toasts/ToastComponent;Lnet/minecraft/client/gui/components/toasts/SystemToast$SystemToastIds;Lnet/minecraft/network/chat/Component;Lnet/minecraft/network/chat/Component;)V b
	getToken ()Ljava/lang/Object; c
	getToken ()Lnet/minecraft/client/gui/components/toasts/SystemToast$SystemToastIds; b
	multiline (Lnet/minecraft/client/Minecraft;Lnet/minecraft/client/gui/components/toasts/SystemToast$SystemToastIds;Lnet/minecraft/network/chat/Component;Lnet/minecraft/network/chat/Component;)Lnet/minecraft/client/gui/components/toasts/SystemToast; a
	nullToEmpty (Lnet/minecraft/network/chat/Component;)Lcom/google/common/collect/ImmutableList; a
	onPackCopyFailure (Lnet/minecraft/client/Minecraft;Ljava/lang/String;)V c
	onWorldAccessFailure (Lnet/minecraft/client/Minecraft;Ljava/lang/String;)V a
	onWorldDeleteFailure (Lnet/minecraft/client/Minecraft;Ljava/lang/String;)V b
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/gui/components/toasts/ToastComponent;J)Lnet/minecraft/client/gui/components/toasts/Toast$Visibility; a
	renderBackgroundRow (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/gui/components/toasts/ToastComponent;IIII)V a
	reset (Lnet/minecraft/network/chat/Component;Lnet/minecraft/network/chat/Component;)V a
	width ()I a
net/minecraft/client/gui/components/toasts/SystemToast$SystemToastIds dom$a
	$VALUES h
	NARRATOR_TOGGLE b
	PACK_COPY_FAILURE g
	PACK_LOAD_FAILURE e
	TUTORIAL_HINT a
	WORLD_ACCESS_FAILURE f
	WORLD_BACKUP c
	WORLD_GEN_SETTINGS_TRANSFER d
net/minecraft/client/gui/components/toasts/Toast don
	NO_TOKEN b
	TEXTURE a
	getToken ()Ljava/lang/Object; c
	height ()I d
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/gui/components/toasts/ToastComponent;J)Lnet/minecraft/client/gui/components/toasts/Toast$Visibility; a
	width ()I a
net/minecraft/client/gui/components/toasts/Toast$Visibility don$a
	$VALUES d
	HIDE b
	SHOW a
	soundEvent c
	playSound (Lnet/minecraft/client/sounds/SoundManager;)V a
net/minecraft/client/gui/components/toasts/ToastComponent doo
	minecraft a
	queued c
	visible b
	addToast (Lnet/minecraft/client/gui/components/toasts/Toast;)V a
	clear ()V a
	getMinecraft ()Lnet/minecraft/client/Minecraft; b
	getToast (Ljava/lang/Class;Ljava/lang/Object;)Lnet/minecraft/client/gui/components/toasts/Toast; a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;)V a
net/minecraft/client/gui/components/toasts/ToastComponent$ToastInstance doo$a
	animationTime c
	toast b
	visibility e
	visibleTime d
	getToast ()Lnet/minecraft/client/gui/components/toasts/Toast; a
	getVisibility (J)F a
	render (IILcom/mojang/blaze3d/vertex/PoseStack;)Z a
net/minecraft/client/gui/components/toasts/TutorialToast dop
	icon c
	lastProgress h
	lastProgressTime g
	message e
	progress i
	progressable j
	title d
	visibility f
	hide ()V b
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/gui/components/toasts/ToastComponent;J)Lnet/minecraft/client/gui/components/toasts/Toast$Visibility; a
	updateProgress (F)V a
net/minecraft/client/gui/components/toasts/TutorialToast$Icons dop$a
	$VALUES h
	MOUSE b
	MOVEMENT_KEYS a
	RECIPE_BOOK d
	TREE c
	WOODEN_PLANKS e
	x f
	y g
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/gui/GuiComponent;II)V a
net/minecraft/client/gui/font/AllMissingGlyphProvider dor
	getGlyph (I)Lcom/mojang/blaze3d/font/RawGlyph; a
	getSupportedGlyphs ()Lit/unimi/dsi/fastutil/ints/IntSet; a
net/minecraft/client/gui/font/FontManager dos
	LOGGER b
	MISSING_FONT a
	fontSets d
	missingFontSet c
	reloadListener g
	renames f
	textureManager e
	createFont ()Lnet/minecraft/client/gui/Font; a
	getReloadListener ()Lnet/minecraft/server/packs/resources/PreparableReloadListener; b
	setRenames (Ljava/util/Map;)V a
net/minecraft/client/gui/font/FontSet dot
	RANDOM c
	SPACE_GLYPH a
	SPACE_INFO b
	glyphInfos j
	glyphs i
	glyphsByWidth k
	missingGlyph f
	name e
	providers h
	textureManager d
	textures l
	whiteGlyph g
	closeProviders ()V b
	closeTextures ()V c
	getGlyph (I)Lnet/minecraft/client/gui/font/glyphs/BakedGlyph; b
	getGlyphInfo (I)Lcom/mojang/blaze3d/font/GlyphInfo; a
	getRandomGlyph (Lcom/mojang/blaze3d/font/GlyphInfo;)Lnet/minecraft/client/gui/font/glyphs/BakedGlyph; a
	getRaw (I)Lcom/mojang/blaze3d/font/RawGlyph; c
	reload (Ljava/util/List;)V a
	stitch (Lcom/mojang/blaze3d/font/RawGlyph;)Lnet/minecraft/client/gui/font/glyphs/BakedGlyph; a
	whiteGlyph ()Lnet/minecraft/client/gui/font/glyphs/BakedGlyph; a
net/minecraft/client/gui/font/FontTexture dou
	colored g
	name d
	normalType e
	root h
	seeThroughType f
	add (Lcom/mojang/blaze3d/font/RawGlyph;)Lnet/minecraft/client/gui/font/glyphs/BakedGlyph; a
	getName ()Lnet/minecraft/resources/ResourceLocation; a
	load (Lnet/minecraft/server/packs/resources/ResourceManager;)V a
net/minecraft/client/gui/font/FontTexture$Node dou$a
	height d
	left e
	occupied g
	right f
	width c
	x a
	y b
	insert (Lcom/mojang/blaze3d/font/RawGlyph;)Lnet/minecraft/client/gui/font/FontTexture$Node; a
net/minecraft/client/gui/font/TextFieldHelper dov
	cursorPos f
	getClipboardFn c
	getMessageFn a
	selectionPos g
	setClipboardFn d
	setMessageFn b
	stringValidator e
	charTyped (C)Z a
	clampToMsgLength (I)I g
	copy ()V c
	createClipboardGetter (Lnet/minecraft/client/Minecraft;)Ljava/util/function/Supplier; a
	createClipboardSetter (Lnet/minecraft/client/Minecraft;)Ljava/util/function/Consumer; c
	cut ()V a
	deleteSelection (Ljava/lang/String;)Ljava/lang/String; c
	getClipboardContents (Lnet/minecraft/client/Minecraft;)Ljava/lang/String; b
	getCursorPos ()I g
	getSelected (Ljava/lang/String;)Ljava/lang/String; b
	getSelectionPos ()I h
	insertText (Ljava/lang/String;)V a
	insertText (Ljava/lang/String;Ljava/lang/String;)V a
	isSelecting ()Z i
	keyPressed (I)Z a
	moveByChars (I)V b
	moveByChars (IZ)V a
	moveByWords (I)V c
	moveByWords (IZ)V b
	paste ()V b
	removeCharsFromCursor (I)V d
	resetSelectionIfNeeded (Z)V a
	selectAll ()V d
	setClipboardContents (Lnet/minecraft/client/Minecraft;Ljava/lang/String;)V a
	setCursorPos (I)V e
	setCursorPos (IZ)V c
	setCursorToEnd ()V f
	setCursorToEnd (Z)V c
	setCursorToStart ()V e
	setCursorToStart (Z)V b
	setSelectionPos (I)V f
	setSelectionRange (II)V a
net/minecraft/client/gui/font/glyphs/BakedGlyph dow
	down j
	left g
	normalType a
	right h
	seeThroughType b
	u0 c
	u1 d
	up i
	v0 e
	v1 f
	render (ZFFLcom/mojang/math/Matrix4f;Lcom/mojang/blaze3d/vertex/VertexConsumer;FFFFI)V a
	renderEffect (Lnet/minecraft/client/gui/font/glyphs/BakedGlyph$Effect;Lcom/mojang/math/Matrix4f;Lcom/mojang/blaze3d/vertex/VertexConsumer;I)V a
	renderType (Z)Lnet/minecraft/client/renderer/RenderType; a
net/minecraft/client/gui/font/glyphs/BakedGlyph$Effect dow$a
	a i
	b h
	depth e
	r f
	x0 a
	x1 c
	y0 b
	y1 d
net/minecraft/client/gui/font/glyphs/EmptyGlyph dox
	render (ZFFLcom/mojang/math/Matrix4f;Lcom/mojang/blaze3d/vertex/VertexConsumer;FFFFI)V a
net/minecraft/client/gui/font/glyphs/MissingGlyph doy
	$VALUES c
	IMAGE_DATA b
	INSTANCE a
	getOversample ()F g
	getPixelHeight ()I e
	getPixelWidth ()I d
	isColored ()Z f
	upload (II)V a
net/minecraft/client/gui/font/glyphs/WhiteGlyph doz
	$VALUES c
	IMAGE_DATA b
	INSTANCE a
	getOversample ()F g
	getPixelHeight ()I e
	getPixelWidth ()I d
	isColored ()Z f
	upload (II)V a
net/minecraft/client/gui/font/providers/BitmapProvider dpc
	LOGGER a
	glyphs c
	image b
	getGlyph (I)Lcom/mojang/blaze3d/font/RawGlyph; a
	getSupportedGlyphs ()Lit/unimi/dsi/fastutil/ints/IntSet; a
net/minecraft/client/gui/font/providers/BitmapProvider$Builder dpc$a
	ascent d
	chars b
	height c
	texture a
	create (Lnet/minecraft/server/packs/resources/ResourceManager;)Lcom/mojang/blaze3d/font/GlyphProvider; a
	fromJson (Lcom/google/gson/JsonObject;)Lnet/minecraft/client/gui/font/providers/BitmapProvider$Builder; a
	getActualGlyphWidth (Lcom/mojang/blaze3d/platform/NativeImage;IIII)I a
net/minecraft/client/gui/font/providers/BitmapProvider$Glyph dpc$b
	advance g
	ascent h
	height f
	image b
	offsetX c
	offsetY d
	scale a
	width e
	getBearingY ()F l
	getOversample ()F g
	getPixelHeight ()I e
	getPixelWidth ()I d
	isColored ()Z f
	upload (II)V a
net/minecraft/client/gui/font/providers/GlyphProviderBuilder dpd
	create (Lnet/minecraft/server/packs/resources/ResourceManager;)Lcom/mojang/blaze3d/font/GlyphProvider; a
net/minecraft/client/gui/font/providers/GlyphProviderBuilderType dpe
	$VALUES g
	BITMAP a
	BY_NAME d
	LEGACY_UNICODE c
	TTF b
	factory f
	name e
	byName (Ljava/lang/String;)Lnet/minecraft/client/gui/font/providers/GlyphProviderBuilderType; a
	create (Lcom/google/gson/JsonObject;)Lnet/minecraft/client/gui/font/providers/GlyphProviderBuilder; a
net/minecraft/client/gui/font/providers/LegacyUnicodeBitmapsProvider dpf
	LOGGER a
	resourceManager b
	sizes c
	texturePattern d
	textures e
	getGlyph (I)Lcom/mojang/blaze3d/font/RawGlyph; a
	getLeft (B)I a
	getRight (B)I b
	getSheetLocation (I)Lnet/minecraft/resources/ResourceLocation; b
	getSupportedGlyphs ()Lit/unimi/dsi/fastutil/ints/IntSet; a
	loadTexture (Lnet/minecraft/resources/ResourceLocation;)Lcom/mojang/blaze3d/platform/NativeImage; a
net/minecraft/client/gui/font/providers/LegacyUnicodeBitmapsProvider$Builder dpf$a
	metadata a
	texturePattern b
	create (Lnet/minecraft/server/packs/resources/ResourceManager;)Lcom/mojang/blaze3d/font/GlyphProvider; a
	fromJson (Lcom/google/gson/JsonObject;)Lnet/minecraft/client/gui/font/providers/GlyphProviderBuilder; a
net/minecraft/client/gui/font/providers/LegacyUnicodeBitmapsProvider$Glyph dpf$b
	height b
	source e
	sourceX c
	sourceY d
	width a
	getBoldOffset ()F b
	getOversample ()F g
	getPixelHeight ()I e
	getPixelWidth ()I d
	getShadowOffset ()F c
	isColored ()Z f
	upload (II)V a
net/minecraft/client/gui/font/providers/TrueTypeGlyphProviderBuilder dpg
	LOGGER a
	location b
	oversample d
	shiftX e
	shiftY f
	size c
	skip g
	create (Lnet/minecraft/server/packs/resources/ResourceManager;)Lcom/mojang/blaze3d/font/GlyphProvider; a
	fromJson (Lcom/google/gson/JsonObject;)Lnet/minecraft/client/gui/font/providers/GlyphProviderBuilder; a
net/minecraft/client/gui/screens/AccessibilityOptionsScreen dpj
	OPTIONS c
	narratorButton p
	init ()V b
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V a
	updateNarratorButton ()V c
net/minecraft/client/gui/screens/AlertScreen dpk
	callback c
	delayTicker q
	lines p
	okButton b
	text a
	init ()V b
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V a
	setDelay (I)V a
	tick ()V d
net/minecraft/client/gui/screens/BackupConfirmScreen dpl
	description c
	eraseCache r
	lastScreen b
	lines q
	listener a
	promptForCacheErase p
	init ()V b
	keyPressed (III)Z a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V a
	shouldCloseOnEsc ()Z at_
net/minecraft/client/gui/screens/BackupConfirmScreen$Listener dpl$a
net/minecraft/client/gui/screens/ChatOptionsScreen dpm
	CHAT_OPTIONS c
	narratorButton p
	init ()V b
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V a
	updateNarratorButton ()V f
net/minecraft/client/gui/screens/ChatScreen dpn
	commandSuggestions q
	historyBuffer b
	historyPos c
	initial p
	input a
	init ()V b
	insertText (Ljava/lang/String;Z)V a
	isPauseScreen ()Z ax_
	keyPressed (III)Z a
	mouseClicked (DDI)Z a
	mouseScrolled (DDD)Z a
	moveInHistory (I)V a
	onEdited (Ljava/lang/String;)V a
	removed ()V e
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V a
	resize (Lnet/minecraft/client/Minecraft;II)V a
	setChatLine (Ljava/lang/String;)V b
	tick ()V d
net/minecraft/client/gui/screens/ConfirmLinkScreen dpo
	copyButton q
	showWarning s
	url r
	warning p
	copyToClipboard ()V g
	init ()V b
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V a
net/minecraft/client/gui/screens/ConfirmScreen dpp
	callback c
	delayTicker r
	lines q
	noButton b
	title2 p
	yesButton a
	getNarrationMessage ()Ljava/lang/String; as_
	init ()V b
	keyPressed (III)Z a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V a
	setDelay (I)V a
	shouldCloseOnEsc ()Z at_
	tick ()V d
net/minecraft/client/gui/screens/ConnectScreen dpq
	LOGGER b
	UNIQUE_THREAD_ID a
	aborted p
	connection c
	lastNarration s
	parent q
	status r
	connect (Ljava/lang/String;I)V a
	init ()V b
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V a
	shouldCloseOnEsc ()Z at_
	tick ()V d
	updateStatus (Lnet/minecraft/network/chat/Component;)V a
net/minecraft/client/gui/screens/CreateBuffetWorldScreen dpr
	applySettings b
	biome p
	doneButton q
	list c
	parent a
	init ()V b
	onClose ()V au_
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V a
	updateButtonValidity ()V i
net/minecraft/client/gui/screens/CreateBuffetWorldScreen$BiomeList dpr$a
	isFocused ()Z b
	setSelected (Lnet/minecraft/client/gui/components/AbstractSelectionList$Entry;)V a
	setSelected (Lnet/minecraft/client/gui/screens/CreateBuffetWorldScreen$BiomeList$Entry;)V a
net/minecraft/client/gui/screens/CreateBuffetWorldScreen$BiomeList$Entry dpr$a$a
	biome b
	mouseClicked (DDI)Z a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIIIIIIZF)V a
net/minecraft/client/gui/screens/CreateFlatWorldScreen dps
	applySettings b
	columnHeight q
	columnType p
	deleteLayerButton s
	generator c
	list r
	parent a
	hasValidSelection ()Z l
	init ()V b
	onClose ()V au_
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V a
	setConfig (Lnet/minecraft/world/level/levelgen/flat/FlatLevelGeneratorSettings;)V a
	settings ()Lnet/minecraft/world/level/levelgen/flat/FlatLevelGeneratorSettings; i
	updateButtonValidity ()V k
net/minecraft/client/gui/screens/CreateFlatWorldScreen$DetailsList dps$a
	getScrollbarPosition ()I e
	isFocused ()Z b
	resetRows ()V f
	setSelected (Lnet/minecraft/client/gui/components/AbstractSelectionList$Entry;)V a
	setSelected (Lnet/minecraft/client/gui/screens/CreateFlatWorldScreen$DetailsList$Entry;)V a
net/minecraft/client/gui/screens/CreateFlatWorldScreen$DetailsList$Entry dps$a$a
	blitSlot (Lcom/mojang/blaze3d/vertex/PoseStack;IILnet/minecraft/world/item/ItemStack;)V a
	blitSlotBg (Lcom/mojang/blaze3d/vertex/PoseStack;II)V a
	mouseClicked (DDI)Z a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIIIIIIZF)V a
net/minecraft/client/gui/screens/DataPackSelectScreen dpt
	DEFAULT_ICON a
net/minecraft/client/gui/screens/DatapackLoadFailureScreen dpu
	callback b
	lines a
	init ()V b
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V a
	shouldCloseOnEsc ()Z at_
net/minecraft/client/gui/screens/DeathScreen dpv
	causeOfDeath b
	delayTicker a
	hardcore c
	confirmResult (Z)V c
	exitToTitleScreen ()V i
	getClickedComponentStyleAt (I)Lnet/minecraft/network/chat/Style; a
	init ()V b
	isPauseScreen ()Z ax_
	mouseClicked (DDI)Z a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V a
	shouldCloseOnEsc ()Z at_
	tick ()V d
net/minecraft/client/gui/screens/DemoIntroScreen dpw
	DEMO_BACKGROUND_LOCATION a
	init ()V b
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V a
	renderBackground (Lcom/mojang/blaze3d/vertex/PoseStack;)V a
net/minecraft/client/gui/screens/DirectJoinServerScreen dpx
	callback p
	ipEdit c
	lastScreen q
	selectButton a
	serverData b
	init ()V b
	keyPressed (III)Z a
	onClose ()V au_
	onSelect ()V i
	removed ()V e
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V a
	resize (Lnet/minecraft/client/Minecraft;II)V a
	tick ()V d
	updateSelectButtonStatus ()V k
net/minecraft/client/gui/screens/DisconnectedScreen dpy
	lines b
	parent c
	reason a
	textHeight p
	init ()V b
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V a
	shouldCloseOnEsc ()Z at_
net/minecraft/client/gui/screens/EditServerScreen dpz
	addButton a
	addressFilter t
	callback b
	ipEdit p
	lastScreen s
	nameEdit q
	serverData c
	serverPackButton r
	cleanUp ()V k
	createServerButtonText (Lnet/minecraft/client/multiplayer/ServerData$ServerPackStatus;)Lnet/minecraft/network/chat/Component; a
	init ()V b
	onAdd ()V i
	onClose ()V au_
	onEdited (Ljava/lang/String;)V a
	removed ()V e
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V a
	resize (Lnet/minecraft/client/Minecraft;II)V a
	tick ()V d
net/minecraft/client/gui/screens/ErrorScreen dqa
	message a
	init ()V b
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V a
	shouldCloseOnEsc ()Z at_
net/minecraft/client/gui/screens/GenericDirtMessageScreen dqb
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V a
	shouldCloseOnEsc ()Z at_
net/minecraft/client/gui/screens/InBedChatScreen dqc
	init ()V b
	keyPressed (III)Z a
	onClose ()V au_
	sendWakeUp ()V i
net/minecraft/client/gui/screens/LanguageSelectScreen dqd
	doneButton r
	forceUnicodeButton q
	languageManager p
	packSelectionList c
	init ()V b
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V a
net/minecraft/client/gui/screens/LanguageSelectScreen$LanguageSelectionList dqd$a
	getRowWidth ()I d
	getScrollbarPosition ()I e
	isFocused ()Z b
	renderBackground (Lcom/mojang/blaze3d/vertex/PoseStack;)V a
	setSelected (Lnet/minecraft/client/gui/components/AbstractSelectionList$Entry;)V a
	setSelected (Lnet/minecraft/client/gui/screens/LanguageSelectScreen$LanguageSelectionList$Entry;)V a
net/minecraft/client/gui/screens/LanguageSelectScreen$LanguageSelectionList$Entry dqd$a$a
	language b
	mouseClicked (DDI)Z a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIIIIIIZF)V a
	select ()V a
net/minecraft/client/gui/screens/LevelLoadingScreen dqe
	COLORS c
	lastNarration b
	progressListener a
	removed ()V e
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V a
	renderChunks (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/server/level/progress/StoringChunkProgressListener;IIII)V a
	shouldCloseOnEsc ()Z at_
net/minecraft/client/gui/screens/LoadingOverlay dqf
	BRAND_BACKGROUND b
	BRAND_BACKGROUND_NO_ALPHA c
	MOJANG_STUDIOS_LOGO_LOCATION a
	currentProgress k
	fadeIn j
	fadeInStart m
	fadeOutStart l
	minecraft d
	onFinish i
	reload e
	drawProgressBar (Lcom/mojang/blaze3d/vertex/PoseStack;IIIIF)V a
	isPauseScreen ()Z a
	registerTextures (Lnet/minecraft/client/Minecraft;)V a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V a
net/minecraft/client/gui/screens/LoadingOverlay$LogoTexture dqf$a
	getTextureImage (Lnet/minecraft/server/packs/resources/ResourceManager;)Lnet/minecraft/client/renderer/texture/SimpleTexture$TextureImage; b
net/minecraft/client/gui/screens/MenuScreens dqg
	LOGGER a
	SCREENS b
	create (Lnet/minecraft/world/inventory/MenuType;Lnet/minecraft/client/Minecraft;ILnet/minecraft/network/chat/Component;)V a
	getConstructor (Lnet/minecraft/world/inventory/MenuType;)Lnet/minecraft/client/gui/screens/MenuScreens$ScreenConstructor; a
	register (Lnet/minecraft/world/inventory/MenuType;Lnet/minecraft/client/gui/screens/MenuScreens$ScreenConstructor;)V a
	selfTest ()Z a
net/minecraft/client/gui/screens/MenuScreens$ScreenConstructor dqg$a
	fromPacket (Lnet/minecraft/network/chat/Component;Lnet/minecraft/world/inventory/MenuType;Lnet/minecraft/client/Minecraft;I)V a
net/minecraft/client/gui/screens/MouseSettingsScreen dqh
	OPTIONS p
	list c
	init ()V b
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V a
net/minecraft/client/gui/screens/OptionsScreen dqi
	OPTION_SCREEN_OPTIONS a
	currentDifficulty r
	difficultyButton p
	lastScreen b
	lockButton q
	options c
	getDifficultyText (Lnet/minecraft/world/Difficulty;)Lnet/minecraft/network/chat/Component; a
	init ()V b
	lockCallback (Z)V c
	removed ()V e
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V a
	updatePackList (Lnet/minecraft/server/packs/repository/PackRepository;)V a
net/minecraft/client/gui/screens/OptionsSubScreen dqj
	lastScreen a
	options b
	onClose ()V au_
	removed ()V e
net/minecraft/client/gui/screens/OutOfMemoryScreen dqk
	init ()V b
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V a
	shouldCloseOnEsc ()Z at_
net/minecraft/client/gui/screens/Overlay dql
	isPauseScreen ()Z a
net/minecraft/client/gui/screens/PauseScreen dqm
	showPauseMenu a
	createPauseMenu ()V i
	init ()V b
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V a
	tick ()V d
net/minecraft/client/gui/screens/PopupScreen dqn
	buttonOptions b
	buttonWidth q
	contentTop p
	message a
	messageLines c
	getNarrationMessage ()Ljava/lang/String; as_
	init (Lnet/minecraft/client/Minecraft;II)V b
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V a
	shouldCloseOnEsc ()Z at_
net/minecraft/client/gui/screens/PopupScreen$ButtonOption dqn$a
	message a
	onPress b
net/minecraft/client/gui/screens/PresetFlatWorldScreen dqo
	LOGGER a
	PRESETS b
	export t
	list r
	listText q
	parent c
	selectButton s
	settings u
	shareText p
	fromString (Ljava/lang/String;Lnet/minecraft/world/level/levelgen/flat/FlatLevelGeneratorSettings;)Lnet/minecraft/world/level/levelgen/flat/FlatLevelGeneratorSettings; a
	getLayerInfoFromString (Ljava/lang/String;I)Lnet/minecraft/world/level/levelgen/flat/FlatLayerInfo; a
	getLayersInfoFromString (Ljava/lang/String;)Ljava/util/List; a
	init ()V b
	mouseScrolled (DDD)Z a
	onClose ()V au_
	preset (Lnet/minecraft/network/chat/Component;Lnet/minecraft/world/level/ItemLike;Lnet/minecraft/world/level/biome/Biome;Ljava/util/List;ZZZ[Lnet/minecraft/world/level/levelgen/flat/FlatLayerInfo;)V a
	removed ()V e
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V a
	resize (Lnet/minecraft/client/Minecraft;II)V a
	save (Lnet/minecraft/world/level/levelgen/flat/FlatLevelGeneratorSettings;)Ljava/lang/String; b
	tick ()V d
	updateButtonValidity (Z)V c
net/minecraft/client/gui/screens/PresetFlatWorldScreen$PresetInfo dqo$a
	icon a
	name b
	settings c
	getName ()Lnet/minecraft/network/chat/Component; a
net/minecraft/client/gui/screens/PresetFlatWorldScreen$PresetsList dqo$b
	isFocused ()Z b
	keyPressed (III)Z a
	setSelected (Lnet/minecraft/client/gui/components/AbstractSelectionList$Entry;)V a
	setSelected (Lnet/minecraft/client/gui/screens/PresetFlatWorldScreen$PresetsList$Entry;)V a
net/minecraft/client/gui/screens/PresetFlatWorldScreen$PresetsList$Entry dqo$b$a
	blitSlot (Lcom/mojang/blaze3d/vertex/PoseStack;IILnet/minecraft/world/item/Item;)V a
	blitSlotBg (Lcom/mojang/blaze3d/vertex/PoseStack;II)V a
	mouseClicked (DDI)Z a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIIIIIIZF)V a
	select ()V a
net/minecraft/client/gui/screens/ProgressScreen dqp
	header a
	progress c
	stage b
	stop p
	progressStage (Lnet/minecraft/network/chat/Component;)V c
	progressStagePercentage (I)V a
	progressStart (Lnet/minecraft/network/chat/Component;)V b
	progressStartNoAbort (Lnet/minecraft/network/chat/Component;)V a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V a
	shouldCloseOnEsc ()Z at_
	stop ()V a
net/minecraft/client/gui/screens/ReceivingLevelScreen dqq
	isPauseScreen ()Z ax_
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V a
	shouldCloseOnEsc ()Z at_
net/minecraft/client/gui/screens/ResourcePackSelectScreen dqr
net/minecraft/client/gui/screens/Screen dqs
	ALLOWED_PROTOCOLS b
	LOGGER a
	buttons m
	children e
	clickedLink c
	font o
	height l
	itemRenderer j
	minecraft i
	passEvents n
	title d
	width k
	addButton (Lnet/minecraft/client/gui/components/AbstractWidget;)Lnet/minecraft/client/gui/components/AbstractWidget; a
	addWidget (Lnet/minecraft/client/gui/components/events/GuiEventListener;)Lnet/minecraft/client/gui/components/events/GuiEventListener; d
	children ()Ljava/util/List; av_
	confirmLink (Z)V c
	getNarrationMessage ()Ljava/lang/String; as_
	getTitle ()Lnet/minecraft/network/chat/Component; p
	getTooltipFromItem (Lnet/minecraft/world/item/ItemStack;)Ljava/util/List; a
	handleComponentClicked (Lnet/minecraft/network/chat/Style;)Z a
	hasAltDown ()Z t
	hasControlDown ()Z q
	hasShiftDown ()Z s
	init ()V b
	init (Lnet/minecraft/client/Minecraft;II)V b
	insertText (Ljava/lang/String;Z)V a
	isCopy (I)Z i
	isCut (I)Z g
	isMouseOver (DD)Z b
	isPaste (I)Z h
	isPauseScreen ()Z ax_
	isSelectAll (I)Z j
	isValidCharacterForName (Ljava/lang/String;CI)Z a
	keyPressed (III)Z a
	onClose ()V au_
	onFilesDrop (Ljava/util/List;)V a
	openLink (Ljava/net/URI;)V a
	removed ()V e
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V a
	renderBackground (Lcom/mojang/blaze3d/vertex/PoseStack;)V a
	renderBackground (Lcom/mojang/blaze3d/vertex/PoseStack;I)V a
	renderComponentHoverEffect (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/network/chat/Style;II)V a
	renderDirtBackground (I)V f
	renderTooltip (Lcom/mojang/blaze3d/vertex/PoseStack;Ljava/util/List;II)V b
	renderTooltip (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/network/chat/FormattedText;II)V a
	renderTooltip (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/world/item/ItemStack;II)V a
	resize (Lnet/minecraft/client/Minecraft;II)V a
	sendMessage (Ljava/lang/String;)V c
	sendMessage (Ljava/lang/String;Z)V b
	setSize (II)V a
	shouldCloseOnEsc ()Z at_
	tick ()V d
	wrapScreenError (Ljava/lang/Runnable;Ljava/lang/String;Ljava/lang/String;)V a
net/minecraft/client/gui/screens/ShareToLanScreen dqt
	commands q
	commandsButton b
	gameModeName p
	lastScreen a
	modeButton c
	init ()V b
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V a
	updateSelectionStrings ()V i
net/minecraft/client/gui/screens/SkinCustomizationScreen dqu
	getMessage (Lnet/minecraft/world/entity/player/PlayerModelPart;)Lnet/minecraft/network/chat/Component; a
	init ()V b
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V a
net/minecraft/client/gui/screens/SoundOptionsScreen dqv
	init ()V b
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V a
net/minecraft/client/gui/screens/TitleScreen dqw
	ACCESSIBILITY_TEXTURE p
	CUBE_MAP a
	LOGGER b
	MINECRAFT_EDITION u
	MINECRAFT_LOGO t
	PANORAMA_OVERLAY c
	copyrightWidth x
	copyrightX y
	fadeInStart B
	fading A
	minceraftEasterEgg q
	panorama z
	realmsNotificationsInitialized v
	realmsNotificationsScreen w
	resetDemoButton s
	splash r
	confirmDemo (Z)V c
	createDemoMenuOptions (II)V c
	createNormalMenuOptions (II)V b
	init ()V b
	isPauseScreen ()Z ax_
	mouseClicked (DDI)Z a
	preloadResources (Lnet/minecraft/client/renderer/texture/TextureManager;Ljava/util/concurrent/Executor;)Ljava/util/concurrent/CompletableFuture; a
	realmsButtonClicked ()V k
	realmsNotificationsEnabled ()Z i
	removed ()V e
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V a
	shouldCloseOnEsc ()Z at_
	tick ()V d
net/minecraft/client/gui/screens/VideoSettingsScreen dqx
	BUTTON_ACCEPT r
	BUTTON_CANCEL s
	FABULOUS c
	NEW_LINE t
	OPTIONS u
	WARNING_MESSAGE p
	WARNING_TITLE q
	gpuWarnlistManager x
	list w
	oldMipmaps y
	tooltip v
	init ()V b
	mouseClicked (DDI)Z a
	mouseReleased (DDI)Z c
	reinitialize ()V i
	removed ()V e
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V a
net/minecraft/client/gui/screens/WinScreen dqy
	EDITION_LOCATION c
	LOGGER a
	LOGO_LOCATION b
	OBFUSCATE_TOKEN q
	VIGNETTE_LOCATION p
	centeredLines v
	lines u
	onFinished s
	poem r
	scrollSpeed x
	time t
	totalScrollLength w
	init ()V b
	onClose ()V au_
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V a
	renderBg (IIF)V a
	respawn ()V i
	tick ()V d
net/minecraft/client/gui/screens/achievement/StatsScreen dqz
	activeList s
	isLoading t
	itemStatsList p
	lastScreen a
	mobsStatsList q
	stats r
	statsList c
	blitSlot (Lcom/mojang/blaze3d/vertex/PoseStack;IILnet/minecraft/world/item/Item;)V a
	blitSlotIcon (Lcom/mojang/blaze3d/vertex/PoseStack;IIII)V c
	getActiveList ()Lnet/minecraft/client/gui/components/ObjectSelectionList; m
	getColumnX (I)I a
	getTranslationKey (Lnet/minecraft/stats/Stat;)Ljava/lang/String; b
	init ()V b
	initButtons ()V k
	initLists ()V i
	isPauseScreen ()Z ax_
	onStatsUpdated ()V l
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V a
	setActiveList (Lnet/minecraft/client/gui/components/ObjectSelectionList;)V a
net/minecraft/client/gui/screens/achievement/StatsScreen$GeneralStatisticsList dqz$a
	renderBackground (Lcom/mojang/blaze3d/vertex/PoseStack;)V a
net/minecraft/client/gui/screens/achievement/StatsScreen$GeneralStatisticsList$Entry dqz$a$a
	stat b
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIIIIIIZF)V a
net/minecraft/client/gui/screens/achievement/StatsScreen$ItemStatisticsList dqz$b
	blockColumns a
	headerPressed p
	iconOffsets v
	itemColumns o
	itemStatSorter r
	sortColumn s
	sortOrder t
	statItemList q
	clickedHeader (II)V a
	getColumn (I)Lnet/minecraft/stats/StatType; a
	getColumnIndex (Lnet/minecraft/stats/StatType;)I b
	getRowWidth ()I d
	getScrollbarPosition ()I e
	getString (Lnet/minecraft/world/item/Item;)Lnet/minecraft/network/chat/Component; a
	renderBackground (Lcom/mojang/blaze3d/vertex/PoseStack;)V a
	renderDecorations (Lcom/mojang/blaze3d/vertex/PoseStack;II)V a
	renderHeader (Lcom/mojang/blaze3d/vertex/PoseStack;IILcom/mojang/blaze3d/vertex/Tesselator;)V a
	renderMousehoverTooltip (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/network/chat/Component;II)V a
	sortByColumn (Lnet/minecraft/stats/StatType;)V a
net/minecraft/client/gui/screens/achievement/StatsScreen$ItemStatisticsList$ItemComparator dqz$b$a
	compare (Lnet/minecraft/world/item/Item;Lnet/minecraft/world/item/Item;)I a
net/minecraft/client/gui/screens/achievement/StatsScreen$ItemStatisticsList$ItemRow dqz$b$b
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIIIIIIZF)V a
	renderStat (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/stats/Stat;IIZ)V a
net/minecraft/client/gui/screens/achievement/StatsScreen$MobsStatisticsList dqz$c
	renderBackground (Lcom/mojang/blaze3d/vertex/PoseStack;)V a
net/minecraft/client/gui/screens/achievement/StatsScreen$MobsStatisticsList$MobRow dqz$c$a
	type b
	killedByMessage (Ljava/lang/String;I)Ljava/lang/String; b
	killsMessage (Ljava/lang/String;I)Ljava/lang/String; a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIIIIIIZF)V a
net/minecraft/client/gui/screens/achievement/StatsUpdateListener dra
	LOADING_SYMBOLS b
	onStatsUpdated ()V l
net/minecraft/client/gui/screens/advancements/AdvancementTab drc
	advancement e
	centered u
	display i
	fade t
	icon j
	index d
	maxX r
	maxY s
	minX p
	minY q
	minecraft a
	root l
	screen b
	scrollX n
	scrollY o
	title k
	type c
	widgets m
	addAdvancement (Lnet/minecraft/advancements/Advancement;)V a
	addWidget (Lnet/minecraft/client/gui/screens/advancements/AdvancementWidget;Lnet/minecraft/advancements/Advancement;)V a
	create (Lnet/minecraft/client/Minecraft;Lnet/minecraft/client/gui/screens/advancements/AdvancementsScreen;ILnet/minecraft/advancements/Advancement;)Lnet/minecraft/client/gui/screens/advancements/AdvancementTab; a
	drawContents (Lcom/mojang/blaze3d/vertex/PoseStack;)V a
	drawIcon (IILnet/minecraft/client/renderer/entity/ItemRenderer;)V a
	drawTab (Lcom/mojang/blaze3d/vertex/PoseStack;IIZ)V a
	drawTooltips (Lcom/mojang/blaze3d/vertex/PoseStack;IIII)V c
	getAdvancement ()Lnet/minecraft/advancements/Advancement; c
	getDisplay ()Lnet/minecraft/advancements/DisplayInfo; e
	getIndex ()I b
	getScreen ()Lnet/minecraft/client/gui/screens/advancements/AdvancementsScreen; f
	getTitle ()Lnet/minecraft/network/chat/Component; d
	getType ()Lnet/minecraft/client/gui/screens/advancements/AdvancementTabType; a
	getWidget (Lnet/minecraft/advancements/Advancement;)Lnet/minecraft/client/gui/screens/advancements/AdvancementWidget; b
	isMouseOver (IIDD)Z a
	scroll (DD)V a
net/minecraft/client/gui/screens/advancements/AdvancementTabType drd
	$VALUES j
	ABOVE a
	BELOW b
	LEFT c
	RIGHT d
	height h
	max i
	textureX e
	textureY f
	width g
	draw (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/gui/GuiComponent;IIZI)V a
	drawIcon (IIILnet/minecraft/client/renderer/entity/ItemRenderer;Lnet/minecraft/world/item/ItemStack;)V a
	getMax ()I a
	getX (I)I a
	getY (I)I b
	isMouseOver (IIIDD)Z a
net/minecraft/client/gui/screens/advancements/AdvancementWidget dre
	TEST_SPLIT_OFFSETS b
	WIDGETS_LOCATION a
	advancement d
	children n
	description k
	display e
	minecraft l
	parent m
	progress o
	tab c
	title i
	width j
	x p
	y q
	addChild (Lnet/minecraft/client/gui/screens/advancements/AdvancementWidget;)V a
	attachToParent ()V b
	draw (Lcom/mojang/blaze3d/vertex/PoseStack;II)V a
	drawConnectivity (Lcom/mojang/blaze3d/vertex/PoseStack;IIZ)V a
	drawHover (Lcom/mojang/blaze3d/vertex/PoseStack;IIFII)V a
	findOptimalLines (Lnet/minecraft/network/chat/Component;I)Ljava/util/List; a
	getFirstVisibleParent (Lnet/minecraft/advancements/Advancement;)Lnet/minecraft/client/gui/screens/advancements/AdvancementWidget; a
	getMaxWidth (Lnet/minecraft/client/StringSplitter;Ljava/util/List;)F a
	getWidth ()I a
	getX ()I d
	getY ()I c
	isMouseOver (IIII)Z a
	render9Sprite (Lcom/mojang/blaze3d/vertex/PoseStack;IIIIIIIII)V a
	renderRepeating (Lcom/mojang/blaze3d/vertex/PoseStack;IIIIIIII)V a
	setProgress (Lnet/minecraft/advancements/AdvancementProgress;)V a
net/minecraft/client/gui/screens/advancements/AdvancementWidgetType drf
	$VALUES d
	OBTAINED a
	UNOBTAINED b
	y c
	getIndex ()I a
net/minecraft/client/gui/screens/advancements/AdvancementsScreen drg
	TABS_LOCATION b
	WINDOW_LOCATION a
	advancements c
	isScrolling r
	selectedTab q
	tabs p
	getAdvancementWidget (Lnet/minecraft/advancements/Advancement;)Lnet/minecraft/client/gui/screens/advancements/AdvancementWidget; f
	getTab (Lnet/minecraft/advancements/Advancement;)Lnet/minecraft/client/gui/screens/advancements/AdvancementTab; g
	init ()V b
	keyPressed (III)Z a
	mouseClicked (DDI)Z a
	mouseDragged (DDIDD)Z a
	onAddAdvancementRoot (Lnet/minecraft/advancements/Advancement;)V a
	onAddAdvancementTask (Lnet/minecraft/advancements/Advancement;)V c
	onAdvancementsCleared ()V a
	onRemoveAdvancementRoot (Lnet/minecraft/advancements/Advancement;)V b
	onRemoveAdvancementTask (Lnet/minecraft/advancements/Advancement;)V d
	onSelectedTabChanged (Lnet/minecraft/advancements/Advancement;)V e
	onUpdateAdvancementProgress (Lnet/minecraft/advancements/Advancement;Lnet/minecraft/advancements/AdvancementProgress;)V a
	removed ()V e
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V a
	renderInside (Lcom/mojang/blaze3d/vertex/PoseStack;IIII)V c
	renderTooltips (Lcom/mojang/blaze3d/vertex/PoseStack;IIII)V d
	renderWindow (Lcom/mojang/blaze3d/vertex/PoseStack;II)V a
net/minecraft/client/gui/screens/controls/ControlList dri
	controlsScreen a
	maxNameWidth o
	getRowWidth ()I d
	getScrollbarPosition ()I e
net/minecraft/client/gui/screens/controls/ControlList$CategoryEntry dri$a
	name b
	width c
	changeFocus (Z)Z c_
	children ()Ljava/util/List; av_
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIIIIIIZF)V a
net/minecraft/client/gui/screens/controls/ControlList$Entry dri$b
net/minecraft/client/gui/screens/controls/ControlList$KeyEntry dri$c
	changeButton d
	key b
	name c
	resetButton e
	children ()Ljava/util/List; av_
	mouseClicked (DDI)Z a
	mouseReleased (DDI)Z c
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIIIIIIZF)V a
net/minecraft/client/gui/screens/controls/ControlsScreen drj
	controlList q
	lastKeySelection p
	resetButton r
	selectedKey c
	init ()V b
	keyPressed (III)Z a
	mouseClicked (DDI)Z a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V a
net/minecraft/client/gui/screens/debug/GameModeSwitcherScreen drl
	ALL_SLOTS_WIDTH b
	GAMEMODE_SWITCHER_LOCATION a
	SELECT_KEY c
	currentlyHovered q
	firstMouseX r
	firstMouseY s
	previousHovered p
	setFirstMousePos t
	slots u
	checkToClose ()Z m
	getDefaultSelected ()Lnet/minecraft/world/level/GameType; k
	init ()V b
	isPauseScreen ()Z ax_
	keyPressed (III)Z a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V a
	switchToHoveredGameMode ()V l
	switchToHoveredGameMode (Lnet/minecraft/client/Minecraft;Ljava/util/Optional;)V a
net/minecraft/client/gui/screens/debug/GameModeSwitcherScreen$GameModeIcon drl$a
	$VALUES i
	ADVENTURE c
	CREATIVE a
	SPECTATOR d
	SURVIVAL b
	VALUES e
	command g
	name f
	renderStack h
	drawIcon (Lnet/minecraft/client/renderer/entity/ItemRenderer;II)V a
	getCommand ()Ljava/lang/String; b
	getFromGameType (Lnet/minecraft/world/level/GameType;)Ljava/util/Optional; b
	getName ()Lnet/minecraft/network/chat/Component; a
	getNext ()Ljava/util/Optional; c
net/minecraft/client/gui/screens/debug/GameModeSwitcherScreen$GameModeSlot drl$b
	icon b
	isSelected c
	drawSelection (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/texture/TextureManager;)V b
	drawSlot (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/texture/TextureManager;)V a
	isHovered ()Z g
	renderButton (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V b
	setSelected (Z)V e
net/minecraft/client/gui/screens/inventory/AbstractCommandBlockEditScreen drm
	cancelButton p
	commandEdit a
	commandSuggestions s
	doneButton c
	outputButton q
	previousEdit b
	trackOutput r
	getCommandBlock ()Lnet/minecraft/world/level/BaseCommandBlock; i
	getPreviousY ()I k
	init ()V b
	keyPressed (III)Z a
	mouseClicked (DDI)Z a
	mouseScrolled (DDD)Z a
	onClose ()V au_
	onDone ()V m
	onEdited (Ljava/lang/String;)V a
	populateAndSendPacket (Lnet/minecraft/world/level/BaseCommandBlock;)V a
	removed ()V e
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V a
	resize (Lnet/minecraft/client/Minecraft;II)V a
	tick ()V d
	updateCommandOutput ()V l
net/minecraft/client/gui/screens/inventory/AbstractContainerScreen drn
	INVENTORY_LOCATION a
	clickedSlot A
	doubleclick R
	draggingItem F
	hoveredSlot v
	imageHeight c
	imageWidth b
	inventory u
	inventoryLabelX r
	inventoryLabelY s
	isQuickCrafting z
	isSplittingStack E
	lastClickButton Q
	lastClickSlot D
	lastClickTime P
	lastQuickMoved S
	leftPos w
	menu t
	quickCraftSlots y
	quickCraftingButton M
	quickCraftingRemainder O
	quickCraftingType L
	quickdropSlot C
	quickdropTime K
	skipNextRelease N
	snapbackEnd B
	snapbackItem J
	snapbackStartX G
	snapbackStartY H
	snapbackTime I
	titleLabelX p
	titleLabelY q
	topPos x
	checkHotbarKeyPressed (II)Z b
	checkHotbarMouseClicked (I)V a
	findSlot (DD)Lnet/minecraft/world/inventory/Slot; a
	getMenu ()Lnet/minecraft/world/inventory/AbstractContainerMenu; i
	hasClickedOutside (DDIII)Z a
	init ()V b
	isHovering (IIIIDD)Z a
	isHovering (Lnet/minecraft/world/inventory/Slot;DD)Z a
	isPauseScreen ()Z ax_
	keyPressed (III)Z a
	mouseClicked (DDI)Z a
	mouseDragged (DDIDD)Z a
	mouseReleased (DDI)Z c
	recalculateQuickCraftRemaining ()V m
	removed ()V e
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V a
	renderBg (Lcom/mojang/blaze3d/vertex/PoseStack;FII)V a
	renderFloatingItem (Lnet/minecraft/world/item/ItemStack;IILjava/lang/String;)V a
	renderLabels (Lcom/mojang/blaze3d/vertex/PoseStack;II)V b
	renderSlot (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/world/inventory/Slot;)V a
	renderTooltip (Lcom/mojang/blaze3d/vertex/PoseStack;II)V a
	shouldCloseOnEsc ()Z at_
	slotClicked (Lnet/minecraft/world/inventory/Slot;IILnet/minecraft/world/inventory/ClickType;)V a
	tick ()V d
net/minecraft/client/gui/screens/inventory/AbstractFurnaceScreen dro
	RECIPE_BUTTON_LOCATION B
	recipeBookComponent A
	texture D
	widthTooNarrow C
	charTyped (CI)Z a
	getRecipeBookComponent ()Lnet/minecraft/client/gui/screens/recipebook/RecipeBookComponent; l
	hasClickedOutside (DDIII)Z a
	init ()V b
	keyPressed (III)Z a
	mouseClicked (DDI)Z a
	recipesUpdated ()V ay_
	removed ()V e
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V a
	renderBg (Lcom/mojang/blaze3d/vertex/PoseStack;FII)V a
	slotClicked (Lnet/minecraft/world/inventory/Slot;IILnet/minecraft/world/inventory/ClickType;)V a
	tick ()V d
net/minecraft/client/gui/screens/inventory/AnvilScreen drp
	ANVIL_LOCATION A
	name B
	keyPressed (III)Z a
	onNameChanged (Ljava/lang/String;)V a
	removed ()V e
	renderFg (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V b
	renderLabels (Lcom/mojang/blaze3d/vertex/PoseStack;II)V b
	resize (Lnet/minecraft/client/Minecraft;II)V a
	slotChanged (Lnet/minecraft/world/inventory/AbstractContainerMenu;ILnet/minecraft/world/item/ItemStack;)V a
	subInit ()V k
net/minecraft/client/gui/screens/inventory/BeaconScreen drq
	BEACON_LOCATION A
	confirmButton B
	initPowerButtons C
	primary D
	secondary E
	init ()V b
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V a
	renderBg (Lcom/mojang/blaze3d/vertex/PoseStack;FII)V a
	renderLabels (Lcom/mojang/blaze3d/vertex/PoseStack;II)V b
	tick ()V d
net/minecraft/client/gui/screens/inventory/BeaconScreen$BeaconCancelButton drq$a
	onPress ()V b
	renderToolTip (Lcom/mojang/blaze3d/vertex/PoseStack;II)V a
net/minecraft/client/gui/screens/inventory/BeaconScreen$BeaconConfirmButton drq$b
	onPress ()V b
	renderToolTip (Lcom/mojang/blaze3d/vertex/PoseStack;II)V a
net/minecraft/client/gui/screens/inventory/BeaconScreen$BeaconPowerButton drq$c
	effect b
	isPrimary d
	sprite c
	onPress ()V b
	renderIcon (Lcom/mojang/blaze3d/vertex/PoseStack;)V a
	renderToolTip (Lcom/mojang/blaze3d/vertex/PoseStack;II)V a
net/minecraft/client/gui/screens/inventory/BeaconScreen$BeaconScreenButton drq$d
	selected a
	isSelected ()Z a
	renderButton (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V b
	renderIcon (Lcom/mojang/blaze3d/vertex/PoseStack;)V a
	setSelected (Z)V e
net/minecraft/client/gui/screens/inventory/BeaconScreen$BeaconSpriteScreenButton drq$e
	iconX a
	iconY b
	renderIcon (Lcom/mojang/blaze3d/vertex/PoseStack;)V a
net/minecraft/client/gui/screens/inventory/BlastFurnaceScreen drr
	TEXTURE B
net/minecraft/client/gui/screens/inventory/BookEditScreen drs
	backButton z
	book b
	cancelButton D
	currentPage r
	displayCache F
	doneButton A
	finalizeButton C
	forwardButton y
	frameTick q
	hand E
	isModified c
	isSigning p
	lastClickTime w
	lastIndex x
	owner a
	pageEdit u
	pages s
	signButton B
	title t
	titleEdit v
	appendPageToBook ()V v
	bookKeyPressed (III)Z c
	changeLine (I)V a
	charTyped (CI)Z a
	clearDisplayCache ()V C
	clearDisplayCacheAfterPageChange ()V D
	convertLocalToScreen (Lnet/minecraft/client/gui/screens/inventory/BookEditScreen$Pos2i;)Lnet/minecraft/client/gui/screens/inventory/BookEditScreen$Pos2i; b
	convertScreenToLocal (Lnet/minecraft/client/gui/screens/inventory/BookEditScreen$Pos2i;)Lnet/minecraft/client/gui/screens/inventory/BookEditScreen$Pos2i; a
	createPartialLineSelection (Ljava/lang/String;Lnet/minecraft/client/StringSplitter;IIII)Lnet/minecraft/client/renderer/Rect2i; a
	createSelection (Lnet/minecraft/client/gui/screens/inventory/BookEditScreen$Pos2i;Lnet/minecraft/client/gui/screens/inventory/BookEditScreen$Pos2i;)Lnet/minecraft/client/renderer/Rect2i; a
	eraseEmptyTrailingPages ()V u
	findLineFromPos ([II)I b
	getClipboard ()Ljava/lang/String; i
	getCurrentPageText ()Ljava/lang/String; A
	getDisplayCache ()Lnet/minecraft/client/gui/screens/inventory/BookEditScreen$DisplayCache; B
	getNumPages ()I k
	init ()V b
	keyDown ()V x
	keyEnd ()V z
	keyHome ()V y
	keyPressed (III)Z a
	keyUp ()V w
	mouseClicked (DDI)Z a
	mouseDragged (DDIDD)Z a
	pageBack ()V l
	pageForward ()V m
	rebuildDisplayCache ()Lnet/minecraft/client/gui/screens/inventory/BookEditScreen$DisplayCache; E
	removed ()V e
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V a
	renderCursor (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/gui/screens/inventory/BookEditScreen$Pos2i;Z)V a
	renderHighlight ([Lnet/minecraft/client/renderer/Rect2i;)V a
	saveChanges (Z)V c
	selectWord (I)V b
	setClipboard (Ljava/lang/String;)V a
	setCurrentPageText (Ljava/lang/String;)V b
	strWidth (Ljava/lang/String;)I d
	tick ()V d
	titleKeyPressed (III)Z d
	updateButtonVisibility ()V n
net/minecraft/client/gui/screens/inventory/BookEditScreen$DisplayCache drs$a
	EMPTY a
	cursor c
	cursorAtEnd d
	fullText b
	lineStarts e
	lines f
	selection g
	changeLine (II)I a
	findLineEnd (I)I b
	findLineStart (I)I a
	getIndexAtPosition (Lnet/minecraft/client/gui/Font;Lnet/minecraft/client/gui/screens/inventory/BookEditScreen$Pos2i;)I a
net/minecraft/client/gui/screens/inventory/BookEditScreen$LineInfo drs$b
	asComponent c
	contents b
	style a
	x d
	y e
net/minecraft/client/gui/screens/inventory/BookEditScreen$Pos2i drs$c
	x a
	y b
net/minecraft/client/gui/screens/inventory/BookViewScreen drt
	BOOK_LOCATION b
	EMPTY_ACCESS a
	backButton t
	bookAccess c
	cachedPage r
	cachedPageComponents q
	currentPage p
	forwardButton s
	playTurnSound u
	convertPages (Lnet/minecraft/nbt/CompoundTag;)Ljava/util/List; a
	createMenuControls ()V k
	createPageControlButtons ()V l
	forcePage (I)Z b
	getClickedComponentStyleAt (DD)Lnet/minecraft/network/chat/Style; a
	getNumPages ()I i
	handleComponentClicked (Lnet/minecraft/network/chat/Style;)Z a
	init ()V b
	keyPressed (III)Z a
	mouseClicked (DDI)Z a
	pageBack ()V m
	pageForward ()V n
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V a
	setBookAccess (Lnet/minecraft/client/gui/screens/inventory/BookViewScreen$BookAccess;)V a
	setPage (I)Z a
	strWidth (Ljava/lang/String;)I a
	updateButtonVisibility ()V u
net/minecraft/client/gui/screens/inventory/BookViewScreen$BookAccess drt$a
	fromItem (Lnet/minecraft/world/item/ItemStack;)Lnet/minecraft/client/gui/screens/inventory/BookViewScreen$BookAccess; a
	getPage (I)Lnet/minecraft/network/chat/FormattedText; b
	getPageCount ()I a
	getPageRaw (I)Lnet/minecraft/network/chat/FormattedText; a
net/minecraft/client/gui/screens/inventory/BookViewScreen$WritableBookAccess drt$b
	pages a
	getPageCount ()I a
	getPageRaw (I)Lnet/minecraft/network/chat/FormattedText; a
	readPages (Lnet/minecraft/world/item/ItemStack;)Ljava/util/List; b
net/minecraft/client/gui/screens/inventory/BookViewScreen$WrittenBookAccess drt$c
	pages a
	getPageCount ()I a
	getPageRaw (I)Lnet/minecraft/network/chat/FormattedText; a
	readPages (Lnet/minecraft/world/item/ItemStack;)Ljava/util/List; b
net/minecraft/client/gui/screens/inventory/BrewingStandScreen dru
	BREWING_STAND_LOCATION A
	BUBBLELENGTHS B
	init ()V b
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V a
	renderBg (Lcom/mojang/blaze3d/vertex/PoseStack;FII)V a
net/minecraft/client/gui/screens/inventory/CartographyTableScreen drv
	BG_LOCATION A
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V a
	renderBg (Lcom/mojang/blaze3d/vertex/PoseStack;FII)V a
	renderMap (Lnet/minecraft/world/level/saveddata/maps/MapItemSavedData;IIF)V a
	renderResultingMap (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/world/level/saveddata/maps/MapItemSavedData;ZZZZ)V a
net/minecraft/client/gui/screens/inventory/CommandBlockEditScreen drw
	autoCommandBlock s
	autoexec y
	autoexecButton v
	conditional x
	conditionalButton u
	mode w
	modeButton t
	getCommandBlock ()Lnet/minecraft/world/level/BaseCommandBlock; i
	getPreviousY ()I k
	init ()V b
	nextMode ()V v
	populateAndSendPacket (Lnet/minecraft/world/level/BaseCommandBlock;)V a
	resize (Lnet/minecraft/client/Minecraft;II)V a
	updateAutoexec ()V x
	updateConditional ()V w
	updateGui ()V n
	updateMode ()V u
net/minecraft/client/gui/screens/inventory/ContainerScreen drx
	CONTAINER_BACKGROUND A
	containerRows B
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V a
	renderBg (Lcom/mojang/blaze3d/vertex/PoseStack;FII)V a
net/minecraft/client/gui/screens/inventory/CraftingScreen dry
	CRAFTING_TABLE_LOCATION A
	RECIPE_BUTTON_LOCATION B
	recipeBookComponent C
	widthTooNarrow D
	getRecipeBookComponent ()Lnet/minecraft/client/gui/screens/recipebook/RecipeBookComponent; l
	hasClickedOutside (DDIII)Z a
	init ()V b
	isHovering (IIIIDD)Z a
	mouseClicked (DDI)Z a
	recipesUpdated ()V ay_
	removed ()V e
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V a
	renderBg (Lcom/mojang/blaze3d/vertex/PoseStack;FII)V a
	slotClicked (Lnet/minecraft/world/inventory/Slot;IILnet/minecraft/world/inventory/ClickType;)V a
	tick ()V d
net/minecraft/client/gui/screens/inventory/CreativeInventoryListener drz
	minecraft a
	refreshContainer (Lnet/minecraft/world/inventory/AbstractContainerMenu;Lnet/minecraft/core/NonNullList;)V a
	setContainerData (Lnet/minecraft/world/inventory/AbstractContainerMenu;II)V a
	slotChanged (Lnet/minecraft/world/inventory/AbstractContainerMenu;ILnet/minecraft/world/item/ItemStack;)V a
net/minecraft/client/gui/screens/inventory/CreativeModeInventoryScreen dsa
	CONTAINER C
	CREATIVE_TABS_LOCATION B
	destroyItemSlot I
	hasClickedOutside L
	ignoreTextInput K
	listener J
	originalSlots H
	scrollOffs E
	scrolling F
	searchBox G
	selectedTab D
	visibleTags M
	canScroll ()Z u
	charTyped (CI)Z a
	checkEffectRendering ()V k
	checkTabClicked (Lnet/minecraft/world/item/CreativeModeTab;DD)Z a
	checkTabHovering (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/world/item/CreativeModeTab;II)Z a
	getSelectedTab ()I l
	handleHotbarLoadOrSave (Lnet/minecraft/client/Minecraft;IZZ)V a
	hasClickedOutside (DDIII)Z a
	init ()V b
	insideScrollbar (DD)Z a
	isCreativeSlot (Lnet/minecraft/world/inventory/Slot;)Z a
	keyPressed (III)Z a
	keyReleased (III)Z b
	mouseClicked (DDI)Z a
	mouseDragged (DDIDD)Z a
	mouseReleased (DDI)Z c
	mouseScrolled (DDD)Z a
	refreshSearchResults ()V n
	removed ()V e
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V a
	renderBg (Lcom/mojang/blaze3d/vertex/PoseStack;FII)V a
	renderLabels (Lcom/mojang/blaze3d/vertex/PoseStack;II)V b
	renderTabButton (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/world/item/CreativeModeTab;)V a
	renderTooltip (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/world/item/ItemStack;II)V a
	resize (Lnet/minecraft/client/Minecraft;II)V a
	selectTab (Lnet/minecraft/world/item/CreativeModeTab;)V a
	slotClicked (Lnet/minecraft/world/inventory/Slot;IILnet/minecraft/world/inventory/ClickType;)V a
	tick ()V d
	updateVisibleTags (Ljava/lang/String;)V a
net/minecraft/client/gui/screens/inventory/CreativeModeInventoryScreen$CustomCreativeSlot dsa$a
	mayPickup (Lnet/minecraft/world/entity/player/Player;)Z a
net/minecraft/client/gui/screens/inventory/CreativeModeInventoryScreen$ItemPickerMenu dsa$b
	items c
	canDragTo (Lnet/minecraft/world/inventory/Slot;)Z b
	canScroll ()Z e
	canTakeItemForPickAll (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/inventory/Slot;)Z a
	quickMoveStack (Lnet/minecraft/world/entity/player/Player;I)Lnet/minecraft/world/item/ItemStack; b
	scrollTo (F)V a
	stillValid (Lnet/minecraft/world/entity/player/Player;)Z a
net/minecraft/client/gui/screens/inventory/CreativeModeInventoryScreen$SlotWrapper dsa$c
	target a
	getItem ()Lnet/minecraft/world/item/ItemStack; e
	getMaxStackSize ()I a
	getMaxStackSize (Lnet/minecraft/world/item/ItemStack;)I b
	getNoItemIcon ()Lcom/mojang/datafixers/util/Pair; c
	hasItem ()Z f
	isActive ()Z b
	isAt (Lnet/minecraft/world/Container;I)Z a
	mayPickup (Lnet/minecraft/world/entity/player/Player;)Z a
	mayPlace (Lnet/minecraft/world/item/ItemStack;)Z a
	onTake (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/item/ItemStack;)Lnet/minecraft/world/item/ItemStack; a
	remove (I)Lnet/minecraft/world/item/ItemStack; a
	set (Lnet/minecraft/world/item/ItemStack;)V d
	setChanged ()V d
	swap (Lnet/minecraft/world/inventory/Slot;)V a
net/minecraft/client/gui/screens/inventory/DispenserScreen dsb
	CONTAINER_LOCATION A
	init ()V b
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V a
	renderBg (Lcom/mojang/blaze3d/vertex/PoseStack;FII)V a
net/minecraft/client/gui/screens/inventory/EffectRenderingInventoryScreen dsc
	doRenderEffects A
	checkEffectRendering ()V k
	init ()V b
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V a
	renderBackgrounds (Lcom/mojang/blaze3d/vertex/PoseStack;IILjava/lang/Iterable;)V a
	renderEffects (Lcom/mojang/blaze3d/vertex/PoseStack;)V b
	renderIcons (Lcom/mojang/blaze3d/vertex/PoseStack;IILjava/lang/Iterable;)V b
	renderLabels (Lcom/mojang/blaze3d/vertex/PoseStack;IILjava/lang/Iterable;)V c
net/minecraft/client/gui/screens/inventory/EnchantmentNames dsd
	ALT_FONT a
	INSTANCE c
	ROOT_STYLE b
	random d
	words e
	getInstance ()Lnet/minecraft/client/gui/screens/inventory/EnchantmentNames; a
	getRandomName (Lnet/minecraft/client/gui/Font;I)Lnet/minecraft/network/chat/FormattedText; a
	initSeed (J)V a
net/minecraft/client/gui/screens/inventory/EnchantmentScreen dse
	BOOK_MODEL J
	ENCHANTING_BOOK_LOCATION I
	ENCHANTING_TABLE_LOCATION H
	flip B
	flipA E
	flipT D
	last L
	oFlip C
	oOpen G
	open F
	random K
	time A
	mouseClicked (DDI)Z a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V a
	renderBg (Lcom/mojang/blaze3d/vertex/PoseStack;FII)V a
	tick ()V d
	tickBook ()V k
net/minecraft/client/gui/screens/inventory/FurnaceScreen dsf
	TEXTURE B
net/minecraft/client/gui/screens/inventory/GrindstoneScreen dsg
	GRINDSTONE_LOCATION A
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V a
	renderBg (Lcom/mojang/blaze3d/vertex/PoseStack;FII)V a
net/minecraft/client/gui/screens/inventory/HopperScreen dsh
	HOPPER_LOCATION A
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V a
	renderBg (Lcom/mojang/blaze3d/vertex/PoseStack;FII)V a
net/minecraft/client/gui/screens/inventory/HorseInventoryScreen dsi
	HORSE_INVENTORY_LOCATION A
	horse B
	xMouse C
	yMouse D
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V a
	renderBg (Lcom/mojang/blaze3d/vertex/PoseStack;FII)V a
net/minecraft/client/gui/screens/inventory/InventoryScreen dsj
	RECIPE_BUTTON_LOCATION B
	buttonClicked H
	recipeBookComponent E
	recipeBookComponentInitialized F
	widthTooNarrow G
	xMouse C
	yMouse D
	getRecipeBookComponent ()Lnet/minecraft/client/gui/screens/recipebook/RecipeBookComponent; l
	hasClickedOutside (DDIII)Z a
	init ()V b
	isHovering (IIIIDD)Z a
	mouseClicked (DDI)Z a
	mouseReleased (DDI)Z c
	recipesUpdated ()V ay_
	removed ()V e
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V a
	renderBg (Lcom/mojang/blaze3d/vertex/PoseStack;FII)V a
	renderEntityInInventory (IIIFFLnet/minecraft/world/entity/LivingEntity;)V a
	renderLabels (Lcom/mojang/blaze3d/vertex/PoseStack;II)V b
	slotClicked (Lnet/minecraft/world/inventory/Slot;IILnet/minecraft/world/inventory/ClickType;)V a
	tick ()V d
net/minecraft/client/gui/screens/inventory/ItemCombinerScreen dsk
	menuResource A
	init ()V b
	refreshContainer (Lnet/minecraft/world/inventory/AbstractContainerMenu;Lnet/minecraft/core/NonNullList;)V a
	removed ()V e
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V a
	renderBg (Lcom/mojang/blaze3d/vertex/PoseStack;FII)V a
	renderFg (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V b
	setContainerData (Lnet/minecraft/world/inventory/AbstractContainerMenu;II)V a
	slotChanged (Lnet/minecraft/world/inventory/AbstractContainerMenu;ILnet/minecraft/world/item/ItemStack;)V a
	subInit ()V k
net/minecraft/client/gui/screens/inventory/JigsawBlockEditScreen dsl
	doneButton u
	finalStateEdit q
	jigsawEntity a
	joint v
	jointButton t
	keepJigsaws s
	levels r
	nameEdit b
	poolEdit p
	targetEdit c
	getJointText ()Lnet/minecraft/network/chat/Component; u
	init ()V b
	keyPressed (III)Z a
	onCancel ()V k
	onClose ()V au_
	onDone ()V i
	removed ()V e
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V a
	resize (Lnet/minecraft/client/Minecraft;II)V a
	sendGenerate ()V m
	sendToServer ()V l
	tick ()V d
	updateValidity ()V n
net/minecraft/client/gui/screens/inventory/LecternScreen dsm
	listener p
	menu c
	bookChanged ()V v
	createMenuControls ()V k
	forcePage (I)Z b
	getMenu ()Lnet/minecraft/world/inventory/AbstractContainerMenu; i
	getMenu ()Lnet/minecraft/world/inventory/LecternMenu; u
	init ()V b
	isPauseScreen ()Z ax_
	onClose ()V au_
	pageBack ()V m
	pageChanged ()V w
	pageForward ()V n
	removed ()V e
	sendButtonClick (I)V c
net/minecraft/client/gui/screens/inventory/LoomScreen dsn
	BG_LOCATION A
	TOTAL_PATTERN_ROWS B
	bannerStack E
	displayPatterns H
	displaySpecialPattern I
	dyeStack F
	flag C
	hasMaxPatterns J
	patternStack G
	resultBannerPatterns D
	scrollOffs K
	scrolling L
	startIndex M
	containerChanged ()V k
	hasClickedOutside (DDIII)Z a
	mouseClicked (DDI)Z a
	mouseDragged (DDIDD)Z a
	mouseScrolled (DDD)Z a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V a
	renderBg (Lcom/mojang/blaze3d/vertex/PoseStack;FII)V a
	renderPattern (III)V c
net/minecraft/client/gui/screens/inventory/MenuAccess dso
	getMenu ()Lnet/minecraft/world/inventory/AbstractContainerMenu; i
net/minecraft/client/gui/screens/inventory/MerchantScreen dsp
	VILLAGER_LOCATION A
	isDragging E
	scrollOff D
	shopItem B
	tradeOfferButtons C
	canScroll (I)Z a
	init ()V b
	mouseClicked (DDI)Z a
	mouseDragged (DDIDD)Z a
	mouseScrolled (DDD)Z a
	postButtonClick ()V k
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V a
	renderAndDecorateCostA (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/item/ItemStack;II)V a
	renderBg (Lcom/mojang/blaze3d/vertex/PoseStack;FII)V a
	renderButtonArrows (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/world/item/trading/MerchantOffer;II)V a
	renderLabels (Lcom/mojang/blaze3d/vertex/PoseStack;II)V b
	renderProgressBar (Lcom/mojang/blaze3d/vertex/PoseStack;IILnet/minecraft/world/item/trading/MerchantOffer;)V a
	renderScroller (Lcom/mojang/blaze3d/vertex/PoseStack;IILnet/minecraft/world/item/trading/MerchantOffers;)V a
net/minecraft/client/gui/screens/inventory/MerchantScreen$TradeOfferButton dsp$a
	index a
	getIndex ()I a
	renderToolTip (Lcom/mojang/blaze3d/vertex/PoseStack;II)V a
net/minecraft/client/gui/screens/inventory/MinecartCommandBlockEditScreen dsq
	commandBlock s
	getCommandBlock ()Lnet/minecraft/world/level/BaseCommandBlock; i
	getPreviousY ()I k
	init ()V b
	populateAndSendPacket (Lnet/minecraft/world/level/BaseCommandBlock;)V a
net/minecraft/client/gui/screens/inventory/PageButton dsr
	isForward a
	playTurnSound b
	playDownSound (Lnet/minecraft/client/sounds/SoundManager;)V a
	renderButton (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V b
net/minecraft/client/gui/screens/inventory/ShulkerBoxScreen dss
	CONTAINER_TEXTURE A
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V a
	renderBg (Lcom/mojang/blaze3d/vertex/PoseStack;FII)V a
net/minecraft/client/gui/screens/inventory/SignEditScreen dst
	frame c
	line p
	messages r
	sign b
	signField q
	signModel a
	charTyped (CI)Z a
	init ()V b
	keyPressed (III)Z a
	onClose ()V au_
	onDone ()V i
	removed ()V e
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V a
	tick ()V d
net/minecraft/client/gui/screens/inventory/SmithingScreen dsu
	SMITHING_LOCATION A
	renderLabels (Lcom/mojang/blaze3d/vertex/PoseStack;II)V b
net/minecraft/client/gui/screens/inventory/SmokerScreen dsv
	TEXTURE B
net/minecraft/client/gui/screens/inventory/StonecutterScreen dsw
	BG_LOCATION A
	displayRecipes E
	scrollOffs B
	scrolling C
	startIndex D
	containerChanged ()V m
	getOffscreenRows ()I k
	isScrollBarActive ()Z l
	mouseClicked (DDI)Z a
	mouseDragged (DDIDD)Z a
	mouseScrolled (DDD)Z a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V a
	renderBg (Lcom/mojang/blaze3d/vertex/PoseStack;FII)V a
	renderButtons (Lcom/mojang/blaze3d/vertex/PoseStack;IIIII)V b
	renderRecipes (III)V c
	renderTooltip (Lcom/mojang/blaze3d/vertex/PoseStack;II)V a
net/minecraft/client/gui/screens/inventory/StructureBlockEditScreen dsx
	cancelButton E
	dataEdit C
	decimalFormat R
	detectButton M
	doneButton D
	entitiesButton N
	initialEntityIgnoring q
	initialMirror b
	initialMode p
	initialRotation c
	initialShowAir r
	initialShowBoundingBox s
	integrityEdit A
	loadButton G
	mirrorButton O
	modeButton L
	nameEdit t
	posXEdit u
	posYEdit v
	posZEdit w
	rot0Button H
	rot180Button J
	rot270Button K
	rot90Button I
	saveButton F
	seedEdit B
	sizeXEdit x
	sizeYEdit y
	sizeZEdit z
	structure a
	toggleAirButton P
	toggleBoundingBox Q
	init ()V b
	isPauseScreen ()Z ax_
	keyPressed (III)Z a
	onCancel ()V k
	onClose ()V au_
	onDone ()V i
	parseCoordinate (Ljava/lang/String;)I d
	parseIntegrity (Ljava/lang/String;)F b
	parseSeed (Ljava/lang/String;)J a
	removed ()V e
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V a
	resize (Lnet/minecraft/client/Minecraft;II)V a
	sendToServer (Lnet/minecraft/world/level/block/entity/StructureBlockEntity$UpdateType;)Z a
	tick ()V d
	updateDirectionButtons ()V v
	updateEntitiesButton ()V l
	updateMirrorButton ()V u
	updateMode ()V w
	updateToggleAirButton ()V m
	updateToggleBoundingBox ()V n
net/minecraft/client/gui/screens/multiplayer/JoinMultiplayerScreen dta
	LOGGER b
	deleteButton t
	editButton r
	editingServer v
	initedOnce y
	lanServerDetector x
	lanServerList w
	lastScreen p
	pinger c
	selectButton s
	serverSelectionList a
	servers q
	toolTip u
	addServerCallback (Z)V e
	deleteCallback (Z)V c
	directJoinCallback (Z)V f
	editServerCallback (Z)V d
	getPinger ()Lnet/minecraft/client/multiplayer/ServerStatusPinger; l
	getServers ()Lnet/minecraft/client/multiplayer/ServerList; m
	init ()V b
	join (Lnet/minecraft/client/multiplayer/ServerData;)V a
	joinSelectedServer ()V i
	keyPressed (III)Z a
	onSelectedChange ()V k
	refreshServerList ()V n
	removed ()V e
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V a
	setSelected (Lnet/minecraft/client/gui/screens/multiplayer/ServerSelectionList$Entry;)V a
	setToolTip (Ljava/util/List;)V b
	tick ()V d
net/minecraft/client/gui/screens/multiplayer/SafetyScreen dtb
	CHECK p
	CONTENT c
	NARRATION q
	TITLE b
	lines s
	previous a
	stopShowing r
	getNarrationMessage ()Ljava/lang/String; as_
	init ()V b
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V a
net/minecraft/client/gui/screens/multiplayer/ServerSelectionList dtc
	ICON_MISSING p
	ICON_OVERLAY_LOCATION q
	LOGGER a
	THREAD_POOL o
	lanHeader t
	networkServers u
	onlineServers s
	screen r
	getRowWidth ()I d
	getScrollbarPosition ()I e
	isFocused ()Z b
	keyPressed (III)Z a
	moveSelection (Lnet/minecraft/client/gui/components/AbstractSelectionList$SelectionDirection;)V a
	refreshEntries ()V u
	setSelected (Lnet/minecraft/client/gui/components/AbstractSelectionList$Entry;)V a
	setSelected (Lnet/minecraft/client/gui/screens/multiplayer/ServerSelectionList$Entry;)V a
	updateNetworkServers (Ljava/util/List;)V a
	updateOnlineServers (Lnet/minecraft/client/multiplayer/ServerList;)V a
net/minecraft/client/gui/screens/multiplayer/ServerSelectionList$Entry dtc$a
net/minecraft/client/gui/screens/multiplayer/ServerSelectionList$LANHeader dtc$b
	minecraft a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIIIIIIZF)V a
net/minecraft/client/gui/screens/multiplayer/ServerSelectionList$NetworkServerEntry dtc$c
	lastClickTime d
	minecraft a
	screen c
	serverData b
	getServerData ()Lnet/minecraft/client/server/LanServer; a
	mouseClicked (DDI)Z a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIIIIIIZF)V a
net/minecraft/client/gui/screens/multiplayer/ServerSelectionList$OnlineServerEntry dtc$d
	icon g
	iconLocation e
	lastClickTime h
	lastIconB64 f
	minecraft c
	screen b
	serverData d
	canJoin ()Z c
	drawIcon (Lcom/mojang/blaze3d/vertex/PoseStack;IILnet/minecraft/resources/ResourceLocation;)V a
	getServerData ()Lnet/minecraft/client/multiplayer/ServerData; b
	keyPressed (III)Z a
	mouseClicked (DDI)Z a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIIIIIIZF)V a
	swap (II)V a
	updateServerList ()V a
	uploadServerIcon (Ljava/lang/String;)Z a
net/minecraft/client/gui/screens/packs/PackSelectionModel dtf
	iconBinder d
	onListChanged e
	output f
	repository a
	selected b
	unselected c
	commit ()V c
	findNewPacks ()V d
	getSelected ()Ljava/util/stream/Stream; b
	getUnselected ()Ljava/util/stream/Stream; a
net/minecraft/client/gui/screens/packs/PackSelectionModel$Entry dtf$a
	bindIcon (Lnet/minecraft/client/renderer/texture/TextureManager;)V a
	canMoveDown ()Z p
	canMoveUp ()Z o
	canSelect ()Z m
	canUnselect ()Z n
	getCompatibility ()Lnet/minecraft/server/packs/repository/PackCompatibility; a
	getDescription ()Lnet/minecraft/network/chat/Component; c
	getExtendedDescription ()Lnet/minecraft/network/chat/FormattedText; e
	getPackSource ()Lnet/minecraft/server/packs/repository/PackSource; d
	getTitle ()Lnet/minecraft/network/chat/Component; b
	isFixedPosition ()Z f
	isRequired ()Z g
	isSelected ()Z l
	moveDown ()V k
	moveUp ()V j
	select ()V h
	unselect ()V i
net/minecraft/client/gui/screens/packs/PackSelectionModel$EntryBase dtf$b
	pack b
	bindIcon (Lnet/minecraft/client/renderer/texture/TextureManager;)V a
	canMoveDown ()Z p
	canMoveUp ()Z o
	getCompatibility ()Lnet/minecraft/server/packs/repository/PackCompatibility; a
	getDescription ()Lnet/minecraft/network/chat/Component; c
	getOtherList ()Ljava/util/List; r
	getPackSource ()Lnet/minecraft/server/packs/repository/PackSource; d
	getSelfList ()Ljava/util/List; q
	getTitle ()Lnet/minecraft/network/chat/Component; b
	isFixedPosition ()Z f
	isRequired ()Z g
	move (I)V a
	moveDown ()V k
	moveUp ()V j
	toggleSelection ()V s
net/minecraft/client/gui/screens/packs/PackSelectionModel$SelectedPackEntry dtf$c
	getOtherList ()Ljava/util/List; r
	getSelfList ()Ljava/util/List; q
	isSelected ()Z l
	select ()V h
	unselect ()V i
net/minecraft/client/gui/screens/packs/PackSelectionModel$UnselectedPackEntry dtf$d
	getOtherList ()Ljava/util/List; r
	getSelfList ()Ljava/util/List; q
	isSelected ()Z l
	select ()V h
	unselect ()V i
net/minecraft/client/gui/screens/packs/PackSelectionScreen dtg
	DIRECTORY_BUTTON_TOOLTIP c
	DRAG_AND_DROP b
	LOGGER a
	availablePackList s
	doneButton v
	lastScreen q
	model p
	packDir u
	selectedPackList t
	shouldCommit r
	copyPacks (Lnet/minecraft/client/Minecraft;Ljava/util/List;Ljava/nio/file/Path;)V a
	init ()V b
	onClose ()V au_
	onFilesDrop (Ljava/util/List;)V a
	populateLists ()V i
	reload ()V k
	removed ()V e
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V a
	updateList (Lnet/minecraft/client/gui/screens/packs/TransferableSelectionList;Ljava/util/stream/Stream;)V a
net/minecraft/client/gui/screens/packs/TransferableSelectionList dth
	ICON_OVERLAY_LOCATION a
	INCOMPATIBLE_CONFIRM_TITLE p
	INCOMPATIBLE_TITLE o
	title q
	getRowWidth ()I d
	getScrollbarPosition ()I e
	renderHeader (Lcom/mojang/blaze3d/vertex/PoseStack;IILcom/mojang/blaze3d/vertex/Tesselator;)V a
net/minecraft/client/gui/screens/packs/TransferableSelectionList$PackEntry dth$a
	minecraft a
	pack d
	parent c
	screen b
	mouseClicked (DDI)Z a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIIIIIIZF)V a
	showHoverOverlay ()Z a
net/minecraft/client/gui/screens/recipebook/AbstractFurnaceRecipeBookComponent dtj
	fuel o
	fuelSlot n
	fuels m
	iterator l
	time p
	getFilterButtonTooltip ()Lnet/minecraft/network/chat/Component; f
	getFilteringCraftable ()Z b
	getFuel ()Lnet/minecraft/world/item/Item; n
	getFuelItems ()Ljava/util/Set; h
	getRecipeFilterName ()Lnet/minecraft/network/chat/Component; g
	initFilterButtonTextures ()V e
	isGuiOpen ()Z d
	isVisible ()Z c
	renderGhostRecipe (Lcom/mojang/blaze3d/vertex/PoseStack;IIZF)V a
	setFilteringCraftable (Z)V a
	setGuiOpen (Z)V d
	setVisible (Z)V c
	setupGhostRecipe (Lnet/minecraft/world/item/crafting/Recipe;Ljava/util/List;)V a
	slotClicked (Lnet/minecraft/world/inventory/Slot;)V a
	updateFiltering ()Z a
net/minecraft/client/gui/screens/recipebook/BlastingRecipeBookComponent dtk
	getFilteringCraftable ()Z b
	getFuelItems ()Ljava/util/Set; h
	getRecipeFilterName ()Lnet/minecraft/network/chat/Component; g
	isGuiOpen ()Z d
	setFilteringCraftable (Z)V a
	setGuiOpen (Z)V d
net/minecraft/client/gui/screens/recipebook/GhostRecipe dtl
	ingredients b
	recipe a
	time c
	addIngredient (Lnet/minecraft/world/item/crafting/Ingredient;II)V a
	clear ()V a
	get (I)Lnet/minecraft/client/gui/screens/recipebook/GhostRecipe$GhostIngredient; a
	getRecipe ()Lnet/minecraft/world/item/crafting/Recipe; c
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/Minecraft;IIZF)V a
	setRecipe (Lnet/minecraft/world/item/crafting/Recipe;)V a
	size ()I b
net/minecraft/client/gui/screens/recipebook/GhostRecipe$GhostIngredient dtl$a
	ingredient b
	x c
	y d
	getItem ()Lnet/minecraft/world/item/ItemStack; c
	getX ()I a
	getY ()I b
net/minecraft/client/gui/screens/recipebook/OverlayRecipeComponent dtm
	RECIPE_BOOK_LOCATION a
	collection j
	isFurnaceMenu m
	isVisible c
	lastRecipeClicked k
	minecraft i
	recipeButtons b
	time l
	x d
	y e
	changeFocus (Z)Z c_
	getLastRecipeClicked ()Lnet/minecraft/world/item/crafting/Recipe; b
	getRecipeCollection ()Lnet/minecraft/client/gui/screens/recipebook/RecipeCollection; a
	init (Lnet/minecraft/client/Minecraft;Lnet/minecraft/client/gui/screens/recipebook/RecipeCollection;IIIIF)V a
	isMouseOver (DD)Z b
	isVisible ()Z c
	mouseClicked (DDI)Z a
	nineInchSprite (Lcom/mojang/blaze3d/vertex/PoseStack;IIIIII)V c
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V a
	setVisible (Z)V a
net/minecraft/client/gui/screens/recipebook/OverlayRecipeComponent$OverlayRecipeButton dtm$a
	ingredientPos a
	isCraftable d
	recipe c
	addItemToSlot (Ljava/util/Iterator;IIII)V a
	calculateIngredientsPositions (Lnet/minecraft/world/item/crafting/Recipe;)V a
	renderButton (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V b
net/minecraft/client/gui/screens/recipebook/OverlayRecipeComponent$OverlayRecipeButton$Pos dtm$a$a
	ingredients a
	x b
	y c
net/minecraft/client/gui/screens/recipebook/OverlayRecipeComponent$OverlaySmeltingRecipeButton dtm$b
	calculateIngredientsPositions (Lnet/minecraft/world/item/crafting/Recipe;)V a
net/minecraft/client/gui/screens/recipebook/RecipeBookComponent dtn
	RECIPE_BOOK_LOCATION a
	SEARCH_HINT l
	book i
	filterButton c
	ghostRecipe b
	height o
	ignoreTextInput u
	lastSearch s
	menu d
	minecraft e
	recipeBookPage j
	searchBox r
	selectedTab q
	stackedContents k
	tabButtons p
	timesInventoryChanged t
	width n
	xOffset m
	addItemToSlot (Ljava/util/Iterator;IIII)V a
	changeFocus (Z)Z c_
	charTyped (CI)Z a
	checkSearchStringUpdate ()V g
	getFilterButtonTooltip ()Lnet/minecraft/network/chat/Component; f
	hasClickedOutside (DDIIIII)Z a
	init (IILnet/minecraft/client/Minecraft;ZLnet/minecraft/world/inventory/RecipeBookMenu;)V a
	initFilterButtonTextures ()V e
	initVisuals (Z)V e
	isMouseOver (DD)Z b
	isOffsetNextToMainGUI ()Z h
	isVisible ()Z c
	keyPressed (III)Z a
	keyReleased (III)Z b
	mouseClicked (DDI)Z a
	pirateSpeechForThePeople (Ljava/lang/String;)V a
	recipesShown (Ljava/util/List;)V a
	recipesUpdated ()V l
	removed ()V i
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V a
	renderGhostRecipe (Lcom/mojang/blaze3d/vertex/PoseStack;IIZF)V a
	renderGhostRecipeTooltip (Lcom/mojang/blaze3d/vertex/PoseStack;IIII)V d
	renderTooltip (Lcom/mojang/blaze3d/vertex/PoseStack;IIII)V c
	sendUpdateSettings ()V m
	setVisible (Z)V c
	setupGhostRecipe (Lnet/minecraft/world/item/crafting/Recipe;Ljava/util/List;)V a
	slotClicked (Lnet/minecraft/world/inventory/Slot;)V a
	tick ()V k
	toggleVisibility ()V j
	updateCollections (Z)V a
	updateFiltering ()Z a
	updateScreenPosition (ZII)I a
	updateStackedContents ()V d
	updateTabs ()V b
net/minecraft/client/gui/screens/recipebook/RecipeBookPage dto
	backButton h
	buttons a
	currentPage j
	forwardButton g
	hoveredButton b
	lastClickedRecipe l
	lastClickedRecipeCollection m
	minecraft d
	overlay c
	recipeBook k
	recipeCollections f
	showListeners e
	totalPages i
	addListener (Lnet/minecraft/client/gui/screens/recipebook/RecipeBookComponent;)V a
	getLastClickedRecipe ()Lnet/minecraft/world/item/crafting/Recipe; a
	getLastClickedRecipeCollection ()Lnet/minecraft/client/gui/screens/recipebook/RecipeCollection; b
	getMinecraft ()Lnet/minecraft/client/Minecraft; d
	getRecipeBook ()Lnet/minecraft/stats/RecipeBook; e
	init (Lnet/minecraft/client/Minecraft;II)V a
	mouseClicked (DDIIIII)Z a
	recipesShown (Ljava/util/List;)V a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIIIF)V a
	renderTooltip (Lcom/mojang/blaze3d/vertex/PoseStack;II)V a
	setInvisible ()V c
	updateArrowButtons ()V g
	updateButtonsForPage ()V f
	updateCollections (Ljava/util/List;Z)V a
net/minecraft/client/gui/screens/recipebook/RecipeBookTabButton dtp
	animationTime u
	category t
	getCategory ()Lnet/minecraft/client/RecipeBookCategories; b
	renderButton (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V b
	renderIcon (Lnet/minecraft/client/renderer/entity/ItemRenderer;)V a
	startAnimation (Lnet/minecraft/client/Minecraft;)V a
	updateVisibility (Lnet/minecraft/client/ClientRecipeBook;)Z a
net/minecraft/client/gui/screens/recipebook/RecipeButton dtq
	RECIPE_BOOK_LOCATION a
	animationTime s
	book c
	collection d
	currentIndex t
	menu b
	time e
	getCollection ()Lnet/minecraft/client/gui/screens/recipebook/RecipeCollection; a
	getOrderedRecipes ()Ljava/util/List; k
	getRecipe ()Lnet/minecraft/world/item/crafting/Recipe; d
	getTooltipText (Lnet/minecraft/client/gui/screens/Screen;)Ljava/util/List; a
	getWidth ()I h
	init (Lnet/minecraft/client/gui/screens/recipebook/RecipeCollection;Lnet/minecraft/client/gui/screens/recipebook/RecipeBookPage;)V a
	isOnlyOption ()Z b
	isValidClickButton (I)Z a
	renderButton (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V b
	setPosition (II)V a
net/minecraft/client/gui/screens/recipebook/RecipeCollection dtr
	craftable b
	fitsDimensions c
	known d
	recipes a
	singleResultItem e
	add (Lnet/minecraft/world/item/crafting/Recipe;)V b
	canCraft (Lnet/minecraft/world/entity/player/StackedContents;IILnet/minecraft/stats/RecipeBook;)V a
	getDisplayRecipes (Z)Ljava/util/List; b
	getRecipes ()Ljava/util/List; d
	getRecipes (Z)Ljava/util/List; a
	hasCraftable ()Z b
	hasFitting ()Z c
	hasKnownRecipes ()Z a
	hasSingleResultItem ()Z e
	isCraftable (Lnet/minecraft/world/item/crafting/Recipe;)Z a
	updateKnownRecipes (Lnet/minecraft/stats/RecipeBook;)V a
net/minecraft/client/gui/screens/recipebook/RecipeShownListener dts
	recipesShown (Ljava/util/List;)V a
net/minecraft/client/gui/screens/recipebook/RecipeUpdateListener dtt
	getRecipeBookComponent ()Lnet/minecraft/client/gui/screens/recipebook/RecipeBookComponent; l
	recipesUpdated ()V ay_
net/minecraft/client/gui/screens/recipebook/SmeltingRecipeBookComponent dtu
	getFilteringCraftable ()Z b
	getFuelItems ()Ljava/util/Set; h
	getRecipeFilterName ()Lnet/minecraft/network/chat/Component; g
	isGuiOpen ()Z d
	setFilteringCraftable (Z)V a
	setGuiOpen (Z)V d
net/minecraft/client/gui/screens/recipebook/SmokingRecipeBookComponent dtv
	getFilteringCraftable ()Z b
	getFuelItems ()Ljava/util/Set; h
	getRecipeFilterName ()Lnet/minecraft/network/chat/Component; g
	isGuiOpen ()Z d
	setFilteringCraftable (Z)V a
	setGuiOpen (Z)V d
net/minecraft/client/gui/screens/worldselection/CreateWorldScreen dty
	LOGGER p
	commands x
	commandsButton H
	commandsChanged y
	createButton B
	dataPacks b
	dataPacksButton G
	difficultyButton D
	displayOptions A
	effectiveDifficulty w
	gameMode t
	gameModeHelp1 I
	gameModeHelp2 J
	gameRules L
	gameRulesButton F
	hardCore a
	initName K
	lastScreen q
	modeButton C
	moreOptionsButton E
	nameEdit r
	oldGameMode u
	resultFolder s
	selectedDifficulty v
	tempDataPackDir z
	worldGenSettingsComponent c
	addButton (Lnet/minecraft/client/gui/components/AbstractWidget;)Lnet/minecraft/client/gui/components/AbstractWidget; a
	addWidget (Lnet/minecraft/client/gui/components/events/GuiEventListener;)Lnet/minecraft/client/gui/components/events/GuiEventListener; d
	copyBetweenDirs (Ljava/nio/file/Path;Ljava/nio/file/Path;Ljava/nio/file/Path;)V a
	copyTempDataPackDirToNewWorld ()Z x
	createTempDataPackDirFromExistingWorld (Ljava/nio/file/Path;Lnet/minecraft/client/Minecraft;)Ljava/nio/file/Path; a
	getTempDataPackDir ()Ljava/nio/file/Path; k
	init ()V b
	keyPressed (III)Z a
	onClose ()V au_
	onCreate ()V n
	openDataPackSelectionScreen ()V v
	removeTempDataPackDir ()V w
	removed ()V e
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V a
	setDisplayOptions (Z)V c
	setGameMode (Lnet/minecraft/client/gui/screens/worldselection/CreateWorldScreen$SelectedGameMode;)V a
	tick ()V d
	toggleDisplayOptions ()V u
	tryApplyNewDataPacks (Lnet/minecraft/server/packs/repository/PackRepository;)V a
	updateDisplayOptions ()V i
	updateGameModeHelp ()V l
	updateResultFolder ()V m
net/minecraft/client/gui/screens/worldselection/CreateWorldScreen$OperationFailedException dty$a
net/minecraft/client/gui/screens/worldselection/CreateWorldScreen$SelectedGameMode dty$b
	$VALUES g
	CREATIVE c
	DEBUG d
	HARDCORE b
	SURVIVAL a
	gameType f
	name e
net/minecraft/client/gui/screens/worldselection/EditGameRulesScreen dtz
	doneButton p
	exitCallback a
	gameRules r
	invalidEntries c
	rules b
	tooltip q
	clearInvalid (Lnet/minecraft/client/gui/screens/worldselection/EditGameRulesScreen$RuleEntry;)V b
	init ()V b
	markInvalid (Lnet/minecraft/client/gui/screens/worldselection/EditGameRulesScreen$RuleEntry;)V a
	onClose ()V au_
	removed ()V e
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V a
	setTooltip (Ljava/util/List;)V b
	updateDoneButton ()V i
net/minecraft/client/gui/screens/worldselection/EditGameRulesScreen$BooleanRuleEntry dtz$a
	checkbox e
	createFullMessage (Lnet/minecraft/network/chat/Component;Z)Lnet/minecraft/network/chat/MutableComponent; a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIIIIIIZF)V a
net/minecraft/client/gui/screens/worldselection/EditGameRulesScreen$CategoryRuleEntry dtz$b
	label b
	children ()Ljava/util/List; av_
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIIIIIIZF)V a
net/minecraft/client/gui/screens/worldselection/EditGameRulesScreen$EntryFactory dtz$c
net/minecraft/client/gui/screens/worldselection/EditGameRulesScreen$GameRuleEntry dtz$d
	children b
	label a
	children ()Ljava/util/List; av_
	renderLabel (Lcom/mojang/blaze3d/vertex/PoseStack;II)V a
net/minecraft/client/gui/screens/worldselection/EditGameRulesScreen$IntegerRuleEntry dtz$e
	input e
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIIIIIIZF)V a
net/minecraft/client/gui/screens/worldselection/EditGameRulesScreen$RuleEntry dtz$f
	tooltip a
net/minecraft/client/gui/screens/worldselection/EditGameRulesScreen$RuleList dtz$g
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V a
net/minecraft/client/gui/screens/worldselection/EditWorldScreen dua
	LOGGER a
	WORLD_GEN_SETTINGS_GSON b
	callback p
	levelAccess r
	nameEdit q
	renameButton c
	init ()V b
	makeBackupAndShowToast (Lnet/minecraft/world/level/storage/LevelStorageSource$LevelStorageAccess;)Z a
	makeBackupAndShowToast (Lnet/minecraft/world/level/storage/LevelStorageSource;Ljava/lang/String;)V a
	onClose ()V au_
	onRename ()V i
	removed ()V e
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V a
	resize (Lnet/minecraft/client/Minecraft;II)V a
	tick ()V d
net/minecraft/client/gui/screens/worldselection/OptimizeWorldScreen dub
	DIMENSION_COLORS b
	LOGGER a
	callback c
	upgrader p
	create (Lnet/minecraft/client/Minecraft;Lit/unimi/dsi/fastutil/booleans/BooleanConsumer;Lcom/mojang/datafixers/DataFixer;Lnet/minecraft/world/level/storage/LevelStorageSource$LevelStorageAccess;Z)Lnet/minecraft/client/gui/screens/worldselection/OptimizeWorldScreen; a
	init ()V b
	onClose ()V au_
	removed ()V e
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V a
	tick ()V d
net/minecraft/client/gui/screens/worldselection/SelectWorldScreen duc
	copyButton s
	deleteButton p
	lastScreen a
	list t
	renameButton r
	searchBox b
	selectButton q
	toolTip c
	charTyped (CI)Z a
	init ()V b
	keyPressed (III)Z a
	mouseScrolled (DDD)Z a
	onClose ()V au_
	removed ()V e
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V a
	setToolTip (Ljava/util/List;)V b
	tick ()V d
	updateButtonStatus (Z)V c
net/minecraft/client/gui/screens/worldselection/WorldGenSettingsComponent dud
	AMPLIFIED_HELP_TEXT d
	CUSTOM_WORLD_DESCRIPTION c
	LOGGER b
	bonusItemsButton a
	customizeTypeButton j
	featuresButton h
	font e
	importSettingsButton k
	initSeed o
	preset n
	registryHolder l
	seedEdit g
	settings m
	typeButton i
	width f
	importSettings (Lnet/minecraft/core/RegistryAccess$RegistryHolder;Lnet/minecraft/world/level/levelgen/WorldGenSettings;)V a
	init (Lnet/minecraft/client/gui/screens/worldselection/CreateWorldScreen;Lnet/minecraft/client/Minecraft;Lnet/minecraft/client/gui/Font;)V a
	isDebug ()Z a
	makeSettings (Z)Lnet/minecraft/world/level/levelgen/WorldGenSettings; a
	parseLong (Ljava/lang/String;)Ljava/util/OptionalLong; a
	registryHolder ()Lnet/minecraft/core/RegistryAccess$RegistryHolder; b
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V a
	setDisplayOptions (Z)V b
	tick ()V d
	updateSettings (Lnet/minecraft/world/level/levelgen/WorldGenSettings;)V a
net/minecraft/client/gui/screens/worldselection/WorldPreset due
	AMPLIFIED b
	DEBUG j
	EDITORS d
	FLAT e
	LARGE_BIOMES f
	NORMAL a
	PRESETS c
	SINGLE_BIOME_CAVES h
	SINGLE_BIOME_FLOATING_ISLANDS i
	SINGLE_BIOME_SURFACE g
	description k
	create (Lnet/minecraft/core/RegistryAccess$RegistryHolder;JZZ)Lnet/minecraft/world/level/levelgen/WorldGenSettings; a
	description ()Lnet/minecraft/network/chat/Component; a
	fromBuffetSettings (Lnet/minecraft/world/level/levelgen/WorldGenSettings;Lnet/minecraft/client/gui/screens/worldselection/WorldPreset;Lnet/minecraft/world/level/biome/Biome;)Lnet/minecraft/world/level/levelgen/WorldGenSettings; a
	generator (J)Lnet/minecraft/world/level/chunk/ChunkGenerator; a
	of (Lnet/minecraft/world/level/levelgen/WorldGenSettings;)Ljava/util/Optional; a
	parseBuffetSettings (Lnet/minecraft/world/level/levelgen/WorldGenSettings;)Lnet/minecraft/world/level/biome/Biome; b
net/minecraft/client/gui/screens/worldselection/WorldPreset$PresetEditor due$a
net/minecraft/client/gui/screens/worldselection/WorldSelectionList duf
	DATE_FORMAT o
	ICON_MISSING p
	ICON_OVERLAY_LOCATION q
	LOGGER a
	cachedList s
	screen r
	getRowWidth ()I d
	getScreen ()Lnet/minecraft/client/gui/screens/worldselection/SelectWorldScreen; g
	getScrollbarPosition ()I e
	getSelectedOpt ()Ljava/util/Optional; f
	isFocused ()Z b
	moveSelection (Lnet/minecraft/client/gui/components/AbstractSelectionList$SelectionDirection;)V a
	refreshList (Ljava/util/function/Supplier;Z)V a
	setSelected (Lnet/minecraft/client/gui/components/AbstractSelectionList$Entry;)V a
	setSelected (Lnet/minecraft/client/gui/screens/worldselection/WorldSelectionList$WorldListEntry;)V a
net/minecraft/client/gui/screens/worldselection/WorldSelectionList$WorldListEntry duf$a
	icon g
	iconFile f
	iconLocation e
	lastClickTime h
	minecraft b
	screen c
	summary d
	deleteWorld ()V b
	editWorld ()V c
	joinWorld ()V a
	loadServerIcon ()Lnet/minecraft/client/renderer/texture/DynamicTexture; g
	loadWorld ()V e
	mouseClicked (DDI)Z a
	queueLoadScreen ()V f
	recreateWorld ()V d
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIIIIIIZF)V a
net/minecraft/client/gui/spectator/PlayerMenuItem duh
	location b
	profile a
	getName ()Lnet/minecraft/network/chat/Component; az_
	isEnabled ()Z aA_
	renderIcon (Lcom/mojang/blaze3d/vertex/PoseStack;FI)V a
	selectItem (Lnet/minecraft/client/gui/spectator/SpectatorMenu;)V a
net/minecraft/client/gui/spectator/RootSpectatorMenuCategory dui
	items a
	getItems ()Ljava/util/List; a
	getPrompt ()Lnet/minecraft/network/chat/Component; b
net/minecraft/client/gui/spectator/SpectatorMenu duj
	CLOSE_ITEM b
	EMPTY_SLOT a
	SCROLL_LEFT c
	SCROLL_RIGHT_DISABLED e
	SCROLL_RIGHT_ENABLED d
	category g
	listener f
	page i
	selectedSlot h
	exit ()V d
	getCurrentPage ()Lnet/minecraft/client/gui/spectator/categories/SpectatorPage; f
	getItem (I)Lnet/minecraft/client/gui/spectator/SpectatorMenuItem; a
	getItems ()Ljava/util/List; a
	getSelectedCategory ()Lnet/minecraft/client/gui/spectator/SpectatorMenuCategory; c
	getSelectedItem ()Lnet/minecraft/client/gui/spectator/SpectatorMenuItem; b
	getSelectedSlot ()I e
	selectCategory (Lnet/minecraft/client/gui/spectator/SpectatorMenuCategory;)V a
	selectSlot (I)V b
net/minecraft/client/gui/spectator/SpectatorMenu$CloseSpectatorItem duj$a
	getName ()Lnet/minecraft/network/chat/Component; az_
	isEnabled ()Z aA_
	renderIcon (Lcom/mojang/blaze3d/vertex/PoseStack;FI)V a
	selectItem (Lnet/minecraft/client/gui/spectator/SpectatorMenu;)V a
net/minecraft/client/gui/spectator/SpectatorMenu$ScrollMenuItem duj$b
	direction a
	enabled b
	getName ()Lnet/minecraft/network/chat/Component; az_
	isEnabled ()Z aA_
	renderIcon (Lcom/mojang/blaze3d/vertex/PoseStack;FI)V a
	selectItem (Lnet/minecraft/client/gui/spectator/SpectatorMenu;)V a
net/minecraft/client/gui/spectator/SpectatorMenuCategory duk
	getItems ()Ljava/util/List; a
	getPrompt ()Lnet/minecraft/network/chat/Component; b
net/minecraft/client/gui/spectator/SpectatorMenuItem dul
	getName ()Lnet/minecraft/network/chat/Component; az_
	isEnabled ()Z aA_
	renderIcon (Lcom/mojang/blaze3d/vertex/PoseStack;FI)V a
	selectItem (Lnet/minecraft/client/gui/spectator/SpectatorMenu;)V a
net/minecraft/client/gui/spectator/SpectatorMenuListener dum
	onSpectatorMenuClosed (Lnet/minecraft/client/gui/spectator/SpectatorMenu;)V a
net/minecraft/client/gui/spectator/categories/SpectatorPage dun
	category a
	items b
	selection c
	getCategory ()Lnet/minecraft/client/gui/spectator/SpectatorMenuCategory; a
	getItem (I)Lnet/minecraft/client/gui/spectator/SpectatorMenuItem; a
	getSelectedSlot ()I b
net/minecraft/client/gui/spectator/categories/TeleportToPlayerMenuCategory duo
	PROFILE_ORDER a
	items b
	getItems ()Ljava/util/List; a
	getName ()Lnet/minecraft/network/chat/Component; az_
	getPrompt ()Lnet/minecraft/network/chat/Component; b
	isEnabled ()Z aA_
	renderIcon (Lcom/mojang/blaze3d/vertex/PoseStack;FI)V a
	selectItem (Lnet/minecraft/client/gui/spectator/SpectatorMenu;)V a
net/minecraft/client/gui/spectator/categories/TeleportToTeamMenuCategory dup
	items a
	getItems ()Ljava/util/List; a
	getName ()Lnet/minecraft/network/chat/Component; az_
	getPrompt ()Lnet/minecraft/network/chat/Component; b
	isEnabled ()Z aA_
	renderIcon (Lcom/mojang/blaze3d/vertex/PoseStack;FI)V a
	selectItem (Lnet/minecraft/client/gui/spectator/SpectatorMenu;)V a
net/minecraft/client/gui/spectator/categories/TeleportToTeamMenuCategory$TeamSelectionItem dup$a
	location c
	players d
	team b
	getName ()Lnet/minecraft/network/chat/Component; az_
	isEnabled ()Z aA_
	renderIcon (Lcom/mojang/blaze3d/vertex/PoseStack;FI)V a
	selectItem (Lnet/minecraft/client/gui/spectator/SpectatorMenu;)V a
net/minecraft/client/main/GameConfig dus
	display b
	game d
	location c
	server e
	user a
net/minecraft/client/main/GameConfig$FolderData dus$a
	assetDirectory c
	assetIndex d
	gameDirectory a
	resourcePackDirectory b
	getAssetIndex ()Lnet/minecraft/client/resources/AssetIndex; a
net/minecraft/client/main/GameConfig$GameData dus$b
	demo a
	disableChat e
	disableMultiplayer d
	launchVersion b
	versionType c
net/minecraft/client/main/GameConfig$ServerData dus$c
	hostname a
	port b
net/minecraft/client/main/GameConfig$UserData dus$d
	profileProperties c
	proxy d
	user a
	userProperties b
net/minecraft/client/main/SilentInitException dut
net/minecraft/client/map/Map duv
	COLOR c
	LOGGER e
	ODD_COLOR d
	distCount q
	hovered o
	image f
	lastDistData r
	newScale j
	scale i
	seed m
	teleportCommand p
	updates n
	w g
	xCam a
	xMouse k
	yCam b
	yMouse l
	getColor (Lnet/minecraft/world/level/biome/Biome;)I a
	getNewScale ()D a
	getOddColor (Lnet/minecraft/world/level/biome/Biome;)I b
	invalidateAndUpdate ()V b
	main ([Ljava/lang/String;)V a
	makeBiomeSource (J)Lnet/minecraft/world/level/biome/BiomeSource; a
	setColor (Lnet/minecraft/world/level/biome/Biome;I)V a
	setColor (Lnet/minecraft/world/level/biome/Biome;II)V a
net/minecraft/client/model/AbstractZombieModel dux
	isAggressive (Lnet/minecraft/world/entity/monster/Monster;)Z a
	setupAnim (Lnet/minecraft/world/entity/Entity;FFFFF)V a
	setupAnim (Lnet/minecraft/world/entity/LivingEntity;FFFFF)V a
	setupAnim (Lnet/minecraft/world/entity/monster/Monster;FFFFF)V a
net/minecraft/client/model/AgeableListModel duy
	babyBodyScale h
	babyHeadScale g
	bodyYOffset i
	scaleHead a
	yHeadOffset b
	zHeadOffset f
	bodyParts ()Ljava/lang/Iterable; b
	headParts ()Ljava/lang/Iterable; a
	renderToBuffer (Lcom/mojang/blaze3d/vertex/PoseStack;Lcom/mojang/blaze3d/vertex/VertexConsumer;IIFFFF)V a
net/minecraft/client/model/AnimationUtils duz
	animateCrossbowCharge (Lnet/minecraft/client/model/geom/ModelPart;Lnet/minecraft/client/model/geom/ModelPart;Lnet/minecraft/world/entity/LivingEntity;Z)V a
	animateCrossbowHold (Lnet/minecraft/client/model/geom/ModelPart;Lnet/minecraft/client/model/geom/ModelPart;Lnet/minecraft/client/model/geom/ModelPart;Z)V a
	animateZombieArms (Lnet/minecraft/client/model/geom/ModelPart;Lnet/minecraft/client/model/geom/ModelPart;ZFF)V a
	bobArms (Lnet/minecraft/client/model/geom/ModelPart;Lnet/minecraft/client/model/geom/ModelPart;F)V a
	swingWeaponDown (Lnet/minecraft/client/model/geom/ModelPart;Lnet/minecraft/client/model/geom/ModelPart;Lnet/minecraft/world/entity/Mob;FF)V a
net/minecraft/client/model/ArmedModel dva
	translateToHand (Lnet/minecraft/world/entity/HumanoidArm;Lcom/mojang/blaze3d/vertex/PoseStack;)V a
net/minecraft/client/model/ArmorStandArmorModel dvb
	setupAnim (Lnet/minecraft/world/entity/Entity;FFFFF)V a
	setupAnim (Lnet/minecraft/world/entity/LivingEntity;FFFFF)V a
	setupAnim (Lnet/minecraft/world/entity/decoration/ArmorStand;FFFFF)V a
net/minecraft/client/model/ArmorStandModel dvc
	basePlate u
	bodyStick1 a
	bodyStick2 b
	shoulderStick t
	bodyParts ()Ljava/lang/Iterable; b
	prepareMobModel (Lnet/minecraft/world/entity/Entity;FFF)V a
	prepareMobModel (Lnet/minecraft/world/entity/LivingEntity;FFF)V a
	prepareMobModel (Lnet/minecraft/world/entity/decoration/ArmorStand;FFF)V a
	setupAnim (Lnet/minecraft/world/entity/Entity;FFFFF)V a
	setupAnim (Lnet/minecraft/world/entity/LivingEntity;FFFFF)V a
	setupAnim (Lnet/minecraft/world/entity/decoration/ArmorStand;FFFFF)V a
	translateToHand (Lnet/minecraft/world/entity/HumanoidArm;Lcom/mojang/blaze3d/vertex/PoseStack;)V a
net/minecraft/client/model/BatModel dvd
	body b
	head a
	leftWing g
	leftWingTip i
	rightWing f
	rightWingTip h
	parts ()Ljava/lang/Iterable; a
	setupAnim (Lnet/minecraft/world/entity/Entity;FFFFF)V a
	setupAnim (Lnet/minecraft/world/entity/ambient/Bat;FFFFF)V a
net/minecraft/client/model/BeeModel dve
	backLeg j
	body b
	bone a
	frontLeg h
	leftAntenna l
	leftWing g
	midLeg i
	rightAntenna m
	rightWing f
	rollAmount n
	stinger k
	bodyParts ()Ljava/lang/Iterable; b
	headParts ()Ljava/lang/Iterable; a
	prepareMobModel (Lnet/minecraft/world/entity/Entity;FFF)V a
	prepareMobModel (Lnet/minecraft/world/entity/animal/Bee;FFF)V a
	setupAnim (Lnet/minecraft/world/entity/Entity;FFFFF)V a
	setupAnim (Lnet/minecraft/world/entity/animal/Bee;FFFFF)V a
net/minecraft/client/model/BlazeModel dvf
	head b
	parts f
	upperBodyParts a
	parts ()Ljava/lang/Iterable; a
	setupAnim (Lnet/minecraft/world/entity/Entity;FFFFF)V a
net/minecraft/client/model/BoatModel dvg
	paddles a
	parts f
	waterPatch b
	animatePaddle (Lnet/minecraft/world/entity/vehicle/Boat;IF)V a
	makePaddle (Z)Lnet/minecraft/client/model/geom/ModelPart; a
	parts ()Lcom/google/common/collect/ImmutableList; b
	parts ()Ljava/lang/Iterable; a
	setupAnim (Lnet/minecraft/world/entity/Entity;FFFFF)V a
	setupAnim (Lnet/minecraft/world/entity/vehicle/Boat;FFFFF)V a
	waterPatch ()Lnet/minecraft/client/model/geom/ModelPart; c
net/minecraft/client/model/BookModel dvh
	flipPage1 e
	flipPage2 f
	leftLid a
	leftPages c
	parts h
	rightLid b
	rightPages d
	seam g
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lcom/mojang/blaze3d/vertex/VertexConsumer;IIFFFF)V b
	renderToBuffer (Lcom/mojang/blaze3d/vertex/PoseStack;Lcom/mojang/blaze3d/vertex/VertexConsumer;IIFFFF)V a
	setupAnim (FFFF)V a
net/minecraft/client/model/CatModel dvi
	lieDownAmount m
	lieDownAmountTail n
	relaxStateOneAmount o
	prepareMobModel (Lnet/minecraft/world/entity/Entity;FFF)V a
	prepareMobModel (Lnet/minecraft/world/entity/animal/Cat;FFF)V a
	setupAnim (Lnet/minecraft/world/entity/Entity;FFFFF)V a
	setupAnim (Lnet/minecraft/world/entity/animal/Cat;FFFFF)V a
net/minecraft/client/model/ChestedHorseModel dvj
	boxL f
	boxR g
	addEarModels (Lnet/minecraft/client/model/geom/ModelPart;)V a
	setupAnim (Lnet/minecraft/world/entity/Entity;FFFFF)V a
	setupAnim (Lnet/minecraft/world/entity/animal/horse/AbstractChestedHorse;FFFFF)V a
	setupAnim (Lnet/minecraft/world/entity/animal/horse/AbstractHorse;FFFFF)V a
net/minecraft/client/model/ChickenModel dvk
	beak j
	body b
	head a
	leg0 f
	leg1 g
	redThing k
	wing0 h
	wing1 i
	bodyParts ()Ljava/lang/Iterable; b
	headParts ()Ljava/lang/Iterable; a
	setupAnim (Lnet/minecraft/world/entity/Entity;FFFFF)V a
net/minecraft/client/model/CodModel dvl
	body a
	head f
	nose g
	sideFin0 h
	sideFin1 i
	tailFin j
	topFin b
	parts ()Ljava/lang/Iterable; a
	setupAnim (Lnet/minecraft/world/entity/Entity;FFFFF)V a
net/minecraft/client/model/ColorableAgeableListModel dvm
	b f
	g b
	r a
	renderToBuffer (Lcom/mojang/blaze3d/vertex/PoseStack;Lcom/mojang/blaze3d/vertex/VertexConsumer;IIFFFF)V a
	setColor (FFF)V a
net/minecraft/client/model/ColorableListModel dvn
	b f
	g b
	r a
	renderToBuffer (Lcom/mojang/blaze3d/vertex/PoseStack;Lcom/mojang/blaze3d/vertex/VertexConsumer;IIFFFF)V a
	setColor (FFF)V a
net/minecraft/client/model/CowModel dvo
	getHead ()Lnet/minecraft/client/model/geom/ModelPart; c
net/minecraft/client/model/CreeperModel dvp
	body f
	hair b
	head a
	leg0 g
	leg1 h
	leg2 i
	leg3 j
	parts ()Ljava/lang/Iterable; a
	setupAnim (Lnet/minecraft/world/entity/Entity;FFFFF)V a
net/minecraft/client/model/DolphinModel dvq
	body a
	tail b
	tailFin f
	parts ()Ljava/lang/Iterable; a
	setupAnim (Lnet/minecraft/world/entity/Entity;FFFFF)V a
net/minecraft/client/model/DrownedModel dvr
	prepareMobModel (Lnet/minecraft/world/entity/Entity;FFF)V a
	prepareMobModel (Lnet/minecraft/world/entity/LivingEntity;FFF)V a
	prepareMobModel (Lnet/minecraft/world/entity/monster/Zombie;FFF)V a
	setupAnim (Lnet/minecraft/world/entity/Entity;FFFFF)V a
	setupAnim (Lnet/minecraft/world/entity/LivingEntity;FFFFF)V a
	setupAnim (Lnet/minecraft/world/entity/monster/Monster;FFFFF)V a
	setupAnim (Lnet/minecraft/world/entity/monster/Zombie;FFFFF)V a
net/minecraft/client/model/ElytraModel dvs
	leftWing b
	rightWing a
	bodyParts ()Ljava/lang/Iterable; b
	headParts ()Ljava/lang/Iterable; a
	setupAnim (Lnet/minecraft/world/entity/Entity;FFFFF)V a
	setupAnim (Lnet/minecraft/world/entity/LivingEntity;FFFFF)V a
net/minecraft/client/model/EndermanModel dvt
	carrying a
	creepy b
	setupAnim (Lnet/minecraft/world/entity/Entity;FFFFF)V a
	setupAnim (Lnet/minecraft/world/entity/LivingEntity;FFFFF)V a
net/minecraft/client/model/EndermiteModel dvu
	BODY_COUNT f
	BODY_SIZES a
	BODY_TEXS b
	bodyParts g
	parts ()Ljava/lang/Iterable; a
	setupAnim (Lnet/minecraft/world/entity/Entity;FFFFF)V a
net/minecraft/client/model/EntityModel dvv
	attackTime c
	riding d
	young e
	copyPropertiesTo (Lnet/minecraft/client/model/EntityModel;)V a
	prepareMobModel (Lnet/minecraft/world/entity/Entity;FFF)V a
	setupAnim (Lnet/minecraft/world/entity/Entity;FFFFF)V a
net/minecraft/client/model/EvokerFangsModel dvw
	base a
	lowerJaw f
	upperJaw b
	parts ()Ljava/lang/Iterable; a
	setupAnim (Lnet/minecraft/world/entity/Entity;FFFFF)V a
net/minecraft/client/model/FoxModel dvx
	body h
	earL b
	earR f
	head a
	leg0 i
	leg1 j
	leg2 k
	leg3 l
	legMotionPos n
	nose g
	tail m
	bodyParts ()Ljava/lang/Iterable; b
	headParts ()Ljava/lang/Iterable; a
	prepareMobModel (Lnet/minecraft/world/entity/Entity;FFF)V a
	prepareMobModel (Lnet/minecraft/world/entity/animal/Fox;FFF)V a
	setupAnim (Lnet/minecraft/world/entity/Entity;FFFFF)V a
	setupAnim (Lnet/minecraft/world/entity/animal/Fox;FFFFF)V a
net/minecraft/client/model/GhastModel dvy
	parts b
	tentacles a
	parts ()Ljava/lang/Iterable; a
	setupAnim (Lnet/minecraft/world/entity/Entity;FFFFF)V a
net/minecraft/client/model/GiantZombieModel dvz
	isAggressive (Lnet/minecraft/world/entity/monster/Giant;)Z a
	isAggressive (Lnet/minecraft/world/entity/monster/Monster;)Z a
net/minecraft/client/model/GuardianModel dwa
	SPIKE_X g
	SPIKE_X_ROT a
	SPIKE_Y h
	SPIKE_Y_ROT b
	SPIKE_Z i
	SPIKE_Z_ROT f
	eye k
	head j
	spikeParts l
	tailParts m
	parts ()Ljava/lang/Iterable; a
	setupAnim (Lnet/minecraft/world/entity/Entity;FFFFF)V a
	setupAnim (Lnet/minecraft/world/entity/monster/Guardian;FFFFF)V a
	setupSpikes (FF)V a
net/minecraft/client/model/HeadedModel dwb
	getHead ()Lnet/minecraft/client/model/geom/ModelPart; c
net/minecraft/client/model/HoglinModel dwc
	backLeftLeg k
	backRightLeg j
	body g
	frontLeftLeg i
	frontRightLeg h
	head a
	leftEar f
	mane l
	rightEar b
	bodyParts ()Ljava/lang/Iterable; b
	headParts ()Ljava/lang/Iterable; a
	setupAnim (Lnet/minecraft/world/entity/Entity;FFFFF)V a
	setupAnim (Lnet/minecraft/world/entity/Mob;FFFFF)V a
net/minecraft/client/model/HorseModel dwd
	babyLeg1 j
	babyLeg2 k
	babyLeg3 l
	babyLeg4 m
	body a
	headParts b
	leg1 f
	leg2 g
	leg3 h
	leg4 i
	ridingParts p
	saddleParts o
	tail n
	addEarModels (Lnet/minecraft/client/model/geom/ModelPart;)V a
	bodyParts ()Ljava/lang/Iterable; b
	headParts ()Ljava/lang/Iterable; a
	prepareMobModel (Lnet/minecraft/world/entity/Entity;FFF)V a
	prepareMobModel (Lnet/minecraft/world/entity/animal/horse/AbstractHorse;FFF)V a
	setupAnim (Lnet/minecraft/world/entity/Entity;FFFFF)V a
	setupAnim (Lnet/minecraft/world/entity/animal/horse/AbstractHorse;FFFFF)V a
net/minecraft/client/model/HumanoidHeadModel dwe
	hat b
	renderToBuffer (Lcom/mojang/blaze3d/vertex/PoseStack;Lcom/mojang/blaze3d/vertex/VertexConsumer;IIFFFF)V a
	setupAnim (FFF)V a
net/minecraft/client/model/HumanoidModel dwf
	body h
	crouching o
	hat g
	head f
	leftArm j
	leftArmPose m
	leftLeg l
	rightArm i
	rightArmPose n
	rightLeg k
	swimAmount p
	bodyParts ()Ljava/lang/Iterable; b
	copyPropertiesTo (Lnet/minecraft/client/model/HumanoidModel;)V a
	getArm (Lnet/minecraft/world/entity/HumanoidArm;)Lnet/minecraft/client/model/geom/ModelPart; a
	getAttackArm (Lnet/minecraft/world/entity/LivingEntity;)Lnet/minecraft/world/entity/HumanoidArm; a
	getHead ()Lnet/minecraft/client/model/geom/ModelPart; c
	headParts ()Ljava/lang/Iterable; a
	poseLeftArm (Lnet/minecraft/world/entity/LivingEntity;)V c
	poseRightArm (Lnet/minecraft/world/entity/LivingEntity;)V b
	prepareMobModel (Lnet/minecraft/world/entity/Entity;FFF)V a
	prepareMobModel (Lnet/minecraft/world/entity/LivingEntity;FFF)V a
	quadraticArmUpdate (F)F a
	rotlerpRad (FFF)F a
	setAllVisible (Z)V d_
	setupAnim (Lnet/minecraft/world/entity/Entity;FFFFF)V a
	setupAnim (Lnet/minecraft/world/entity/LivingEntity;FFFFF)V a
	setupAttackAnimation (Lnet/minecraft/world/entity/LivingEntity;F)V a
	translateToHand (Lnet/minecraft/world/entity/HumanoidArm;Lcom/mojang/blaze3d/vertex/PoseStack;)V a
net/minecraft/client/model/HumanoidModel$ArmPose dwf$a
	$VALUES i
	BLOCK c
	BOW_AND_ARROW d
	CROSSBOW_CHARGE f
	CROSSBOW_HOLD g
	EMPTY a
	ITEM b
	THROW_SPEAR e
	twoHanded h
	isTwoHanded ()Z a
net/minecraft/client/model/IllagerModel dwg
	arms g
	body f
	hat b
	head a
	leftArm k
	leftLeg h
	rightArm j
	rightLeg i
	getArm (Lnet/minecraft/world/entity/HumanoidArm;)Lnet/minecraft/client/model/geom/ModelPart; a
	getHat ()Lnet/minecraft/client/model/geom/ModelPart; b
	getHead ()Lnet/minecraft/client/model/geom/ModelPart; c
	parts ()Ljava/lang/Iterable; a
	setupAnim (Lnet/minecraft/world/entity/Entity;FFFFF)V a
	setupAnim (Lnet/minecraft/world/entity/monster/AbstractIllager;FFFFF)V a
	translateToHand (Lnet/minecraft/world/entity/HumanoidArm;Lcom/mojang/blaze3d/vertex/PoseStack;)V a
net/minecraft/client/model/IronGolemModel dwh
	arm0 f
	arm1 g
	body b
	head a
	leg0 h
	leg1 i
	getFlowerHoldingArm ()Lnet/minecraft/client/model/geom/ModelPart; b
	parts ()Ljava/lang/Iterable; a
	prepareMobModel (Lnet/minecraft/world/entity/Entity;FFF)V a
	prepareMobModel (Lnet/minecraft/world/entity/animal/IronGolem;FFF)V a
	setupAnim (Lnet/minecraft/world/entity/Entity;FFFFF)V a
	setupAnim (Lnet/minecraft/world/entity/animal/IronGolem;FFFFF)V a
net/minecraft/client/model/LavaSlimeModel dwi
	bodyCubes a
	insideCube b
	parts f
	parts ()Lcom/google/common/collect/ImmutableList; b
	parts ()Ljava/lang/Iterable; a
	prepareMobModel (Lnet/minecraft/world/entity/Entity;FFF)V a
	prepareMobModel (Lnet/minecraft/world/entity/monster/Slime;FFF)V a
	setupAnim (Lnet/minecraft/world/entity/Entity;FFFFF)V a
	setupAnim (Lnet/minecraft/world/entity/monster/Slime;FFFFF)V a
net/minecraft/client/model/LeashKnotModel dwj
	knot a
	parts ()Ljava/lang/Iterable; a
	setupAnim (Lnet/minecraft/world/entity/Entity;FFFFF)V a
net/minecraft/client/model/ListModel dwk
	parts ()Ljava/lang/Iterable; a
	renderToBuffer (Lcom/mojang/blaze3d/vertex/PoseStack;Lcom/mojang/blaze3d/vertex/VertexConsumer;IIFFFF)V a
net/minecraft/client/model/LlamaModel dwl
	body b
	chest1 j
	chest2 k
	head a
	leg0 f
	leg1 g
	leg2 h
	leg3 i
	renderToBuffer (Lcom/mojang/blaze3d/vertex/PoseStack;Lcom/mojang/blaze3d/vertex/VertexConsumer;IIFFFF)V a
	setupAnim (Lnet/minecraft/world/entity/Entity;FFFFF)V a
	setupAnim (Lnet/minecraft/world/entity/animal/horse/AbstractChestedHorse;FFFFF)V a
net/minecraft/client/model/LlamaSpitModel dwm
	main a
	parts ()Ljava/lang/Iterable; a
	setupAnim (Lnet/minecraft/world/entity/Entity;FFFFF)V a
net/minecraft/client/model/MinecartModel dwn
	cubes a
	parts ()Ljava/lang/Iterable; a
	setupAnim (Lnet/minecraft/world/entity/Entity;FFFFF)V a
net/minecraft/client/model/Model dwo
	renderType q
	texHeight s
	texWidth r
	accept (Lnet/minecraft/client/model/geom/ModelPart;)V b
	renderToBuffer (Lcom/mojang/blaze3d/vertex/PoseStack;Lcom/mojang/blaze3d/vertex/VertexConsumer;IIFFFF)V a
	renderType (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/client/renderer/RenderType; a
net/minecraft/client/model/ModelUtils dwp
	rotlerpRad (FFF)F a
net/minecraft/client/model/OcelotModel dwq
	backLegL a
	backLegR b
	body k
	frontLegL f
	frontLegR g
	head j
	state l
	tail1 h
	tail2 i
	bodyParts ()Ljava/lang/Iterable; b
	headParts ()Ljava/lang/Iterable; a
	prepareMobModel (Lnet/minecraft/world/entity/Entity;FFF)V a
	setupAnim (Lnet/minecraft/world/entity/Entity;FFFFF)V a
net/minecraft/client/model/PandaModel dwr
	lieOnBackAmount k
	rollAmount l
	sitAmount j
	prepareMobModel (Lnet/minecraft/world/entity/Entity;FFF)V a
	prepareMobModel (Lnet/minecraft/world/entity/animal/Panda;FFF)V a
	setupAnim (Lnet/minecraft/world/entity/Entity;FFFFF)V a
	setupAnim (Lnet/minecraft/world/entity/animal/Panda;FFFFF)V a
net/minecraft/client/model/ParrotModel dws
	beak1 j
	beak2 k
	body a
	feather l
	head h
	head2 i
	legLeft m
	legRight n
	tail b
	wingLeft f
	wingRight g
	getState (Lnet/minecraft/world/entity/animal/Parrot;)Lnet/minecraft/client/model/ParrotModel$State; a
	parts ()Ljava/lang/Iterable; a
	prepare (Lnet/minecraft/client/model/ParrotModel$State;)V a
	prepareMobModel (Lnet/minecraft/world/entity/Entity;FFF)V a
	prepareMobModel (Lnet/minecraft/world/entity/animal/Parrot;FFF)V a
	renderOnShoulder (Lcom/mojang/blaze3d/vertex/PoseStack;Lcom/mojang/blaze3d/vertex/VertexConsumer;IIFFFFI)V a
	setupAnim (Lnet/minecraft/client/model/ParrotModel$State;IFFFFF)V a
	setupAnim (Lnet/minecraft/world/entity/Entity;FFFFF)V a
	setupAnim (Lnet/minecraft/world/entity/animal/Parrot;FFFFF)V a
net/minecraft/client/model/ParrotModel$State dws$a
	$VALUES f
	FLYING a
	ON_SHOULDER e
	PARTY d
	SITTING c
	STANDING b
net/minecraft/client/model/PhantomModel dwt
	body a
	leftWingBase b
	leftWingTip f
	rightWingBase g
	rightWingTip h
	tailBase i
	tailTip j
	parts ()Ljava/lang/Iterable; a
	setupAnim (Lnet/minecraft/world/entity/Entity;FFFFF)V a
net/minecraft/client/model/PigModel dwu
net/minecraft/client/model/PiglinModel dwv
	bodyDefault y
	earLeft b
	earRight a
	headDefault z
	leftArmDefault A
	rightArmDefault B
	holdWeaponHigh (Lnet/minecraft/world/entity/Mob;)V a
	setupAnim (Lnet/minecraft/world/entity/Entity;FFFFF)V a
	setupAnim (Lnet/minecraft/world/entity/LivingEntity;FFFFF)V a
	setupAnim (Lnet/minecraft/world/entity/Mob;FFFFF)V a
	setupAttackAnimation (Lnet/minecraft/world/entity/LivingEntity;F)V a
	setupAttackAnimation (Lnet/minecraft/world/entity/Mob;F)V a
net/minecraft/client/model/PlayerModel dww
	cloak b
	cubes a
	ear y
	jacket x
	leftPants v
	leftSleeve t
	rightPants w
	rightSleeve u
	slim z
	accept (Lnet/minecraft/client/model/geom/ModelPart;)V b
	bodyParts ()Ljava/lang/Iterable; b
	getRandomModelPart (Ljava/util/Random;)Lnet/minecraft/client/model/geom/ModelPart; a
	renderCloak (Lcom/mojang/blaze3d/vertex/PoseStack;Lcom/mojang/blaze3d/vertex/VertexConsumer;II)V b
	renderEars (Lcom/mojang/blaze3d/vertex/PoseStack;Lcom/mojang/blaze3d/vertex/VertexConsumer;II)V a
	setAllVisible (Z)V d_
	setupAnim (Lnet/minecraft/world/entity/Entity;FFFFF)V a
	setupAnim (Lnet/minecraft/world/entity/LivingEntity;FFFFF)V a
	translateToHand (Lnet/minecraft/world/entity/HumanoidArm;Lcom/mojang/blaze3d/vertex/PoseStack;)V a
net/minecraft/client/model/PolarBearModel dwx
	setupAnim (Lnet/minecraft/world/entity/Entity;FFFFF)V a
	setupAnim (Lnet/minecraft/world/entity/animal/PolarBear;FFFFF)V a
net/minecraft/client/model/PufferfishBigModel dwy
	blueFin0 b
	blueFin1 f
	bottomBackFin m
	bottomFrontFin l
	bottomMidFin n
	cube a
	sideBackFin0 o
	sideBackFin1 p
	sideFrontFin0 j
	sideFrontFin1 k
	topBackFin i
	topFrontFin g
	topMidFin h
	parts ()Ljava/lang/Iterable; a
	setupAnim (Lnet/minecraft/world/entity/Entity;FFFFF)V a
net/minecraft/client/model/PufferfishMidModel dwz
	cube a
	finBlue0 b
	finBlue1 f
	finBottom0 m
	finBottom1 n
	finSide0 i
	finSide1 j
	finSide2 k
	finSide3 l
	finTop0 g
	finTop1 h
	parts ()Ljava/lang/Iterable; a
	setupAnim (Lnet/minecraft/world/entity/Entity;FFFFF)V a
net/minecraft/client/model/PufferfishSmallModel dxa
	cube a
	eye0 b
	eye1 f
	fin0 g
	fin1 h
	finBack i
	parts ()Ljava/lang/Iterable; a
	setupAnim (Lnet/minecraft/world/entity/Entity;FFFFF)V a
net/minecraft/client/model/QuadrupedModel dxb
	body b
	head a
	leg0 f
	leg1 g
	leg2 h
	leg3 i
	bodyParts ()Ljava/lang/Iterable; b
	headParts ()Ljava/lang/Iterable; a
	setupAnim (Lnet/minecraft/world/entity/Entity;FFFFF)V a
net/minecraft/client/model/RabbitModel dxc
	body h
	earLeft m
	earRight l
	frontLegLeft i
	frontLegRight j
	haunchLeft f
	haunchRight g
	head k
	jumpRotation p
	nose o
	rearFootLeft a
	rearFootRight b
	tail n
	prepareMobModel (Lnet/minecraft/world/entity/Entity;FFF)V a
	prepareMobModel (Lnet/minecraft/world/entity/animal/Rabbit;FFF)V a
	renderToBuffer (Lcom/mojang/blaze3d/vertex/PoseStack;Lcom/mojang/blaze3d/vertex/VertexConsumer;IIFFFF)V a
	setRotation (Lnet/minecraft/client/model/geom/ModelPart;FFF)V a
	setupAnim (Lnet/minecraft/world/entity/Entity;FFFFF)V a
	setupAnim (Lnet/minecraft/world/entity/animal/Rabbit;FFFFF)V a
net/minecraft/client/model/RavagerModel dxd
	body f
	head a
	leg0 g
	leg1 h
	leg2 i
	leg3 j
	mouth b
	neck k
	parts ()Ljava/lang/Iterable; a
	prepareMobModel (Lnet/minecraft/world/entity/Entity;FFF)V a
	prepareMobModel (Lnet/minecraft/world/entity/monster/Ravager;FFF)V a
	setupAnim (Lnet/minecraft/world/entity/Entity;FFFFF)V a
	setupAnim (Lnet/minecraft/world/entity/monster/Ravager;FFFFF)V a
net/minecraft/client/model/SalmonModel dxe
	bodyBack b
	bodyFront a
	head f
	sideFin0 g
	sideFin1 h
	parts ()Ljava/lang/Iterable; a
	setupAnim (Lnet/minecraft/world/entity/Entity;FFFFF)V a
net/minecraft/client/model/SheepFurModel dxf
	headXRot j
	prepareMobModel (Lnet/minecraft/world/entity/Entity;FFF)V a
	prepareMobModel (Lnet/minecraft/world/entity/animal/Sheep;FFF)V a
	setupAnim (Lnet/minecraft/world/entity/Entity;FFFFF)V a
	setupAnim (Lnet/minecraft/world/entity/animal/Sheep;FFFFF)V a
net/minecraft/client/model/SheepModel dxg
	headXRot j
	prepareMobModel (Lnet/minecraft/world/entity/Entity;FFF)V a
	prepareMobModel (Lnet/minecraft/world/entity/animal/Sheep;FFF)V a
	setupAnim (Lnet/minecraft/world/entity/Entity;FFFFF)V a
	setupAnim (Lnet/minecraft/world/entity/animal/Sheep;FFFFF)V a
net/minecraft/client/model/ShieldModel dxh
	handle b
	plate a
	handle ()Lnet/minecraft/client/model/geom/ModelPart; b
	plate ()Lnet/minecraft/client/model/geom/ModelPart; a
	renderToBuffer (Lcom/mojang/blaze3d/vertex/PoseStack;Lcom/mojang/blaze3d/vertex/VertexConsumer;IIFFFF)V a
net/minecraft/client/model/ShulkerBulletModel dxi
	main a
	parts ()Ljava/lang/Iterable; a
	setupAnim (Lnet/minecraft/world/entity/Entity;FFFFF)V a
net/minecraft/client/model/ShulkerModel dxj
	base a
	head f
	lid b
	getBase ()Lnet/minecraft/client/model/geom/ModelPart; b
	getHead ()Lnet/minecraft/client/model/geom/ModelPart; d
	getLid ()Lnet/minecraft/client/model/geom/ModelPart; c
	parts ()Ljava/lang/Iterable; a
	setupAnim (Lnet/minecraft/world/entity/Entity;FFFFF)V a
	setupAnim (Lnet/minecraft/world/entity/monster/Shulker;FFFFF)V a
net/minecraft/client/model/SilverfishModel dxk
	BODY_SIZES h
	BODY_TEXS i
	bodyLayers b
	bodyParts a
	parts f
	zPlacement g
	parts ()Lcom/google/common/collect/ImmutableList; b
	parts ()Ljava/lang/Iterable; a
	setupAnim (Lnet/minecraft/world/entity/Entity;FFFFF)V a
net/minecraft/client/model/SkeletonModel dxl
	prepareMobModel (Lnet/minecraft/world/entity/Entity;FFF)V a
	prepareMobModel (Lnet/minecraft/world/entity/LivingEntity;FFF)V a
	prepareMobModel (Lnet/minecraft/world/entity/Mob;FFF)V a
	setupAnim (Lnet/minecraft/world/entity/Entity;FFFFF)V a
	setupAnim (Lnet/minecraft/world/entity/LivingEntity;FFFFF)V a
	setupAnim (Lnet/minecraft/world/entity/Mob;FFFFF)V a
	translateToHand (Lnet/minecraft/world/entity/HumanoidArm;Lcom/mojang/blaze3d/vertex/PoseStack;)V a
net/minecraft/client/model/SkullModel dxm
	head a
	renderToBuffer (Lcom/mojang/blaze3d/vertex/PoseStack;Lcom/mojang/blaze3d/vertex/VertexConsumer;IIFFFF)V a
	setupAnim (FFF)V a
net/minecraft/client/model/SlimeModel dxn
	cube a
	eye0 b
	eye1 f
	mouth g
	parts ()Ljava/lang/Iterable; a
	setupAnim (Lnet/minecraft/world/entity/Entity;FFFFF)V a
net/minecraft/client/model/SnowGolemModel dxo
	arm1 g
	arm2 h
	head f
	piece1 a
	piece2 b
	getHead ()Lnet/minecraft/client/model/geom/ModelPart; b
	parts ()Ljava/lang/Iterable; a
	setupAnim (Lnet/minecraft/world/entity/Entity;FFFFF)V a
net/minecraft/client/model/SpiderModel dxp
	body0 b
	body1 f
	head a
	leg0 g
	leg1 h
	leg2 i
	leg3 j
	leg4 k
	leg5 l
	leg6 m
	leg7 n
	parts ()Ljava/lang/Iterable; a
	setupAnim (Lnet/minecraft/world/entity/Entity;FFFFF)V a
net/minecraft/client/model/SquidModel dxq
	body a
	parts f
	tentacles b
	parts ()Ljava/lang/Iterable; a
	setupAnim (Lnet/minecraft/world/entity/Entity;FFFFF)V a
net/minecraft/client/model/StriderModel dxr
	body f
	bristle0 g
	bristle1 h
	bristle2 i
	bristle3 j
	bristle4 k
	bristle5 l
	leftLeg b
	rightLeg a
	parts ()Ljava/lang/Iterable; a
	setRotationAngle (Lnet/minecraft/client/model/geom/ModelPart;FFF)V a
	setupAnim (Lnet/minecraft/world/entity/Entity;FFFFF)V a
	setupAnim (Lnet/minecraft/world/entity/monster/Strider;FFFFF)V a
net/minecraft/client/model/TridentModel dxs
	TEXTURE a
	pole b
	renderToBuffer (Lcom/mojang/blaze3d/vertex/PoseStack;Lcom/mojang/blaze3d/vertex/VertexConsumer;IIFFFF)V a
net/minecraft/client/model/TropicalFishModelA dxt
	body a
	leftFin f
	rightFin g
	tail b
	topFin h
	parts ()Ljava/lang/Iterable; a
	setupAnim (Lnet/minecraft/world/entity/Entity;FFFFF)V a
net/minecraft/client/model/TropicalFishModelB dxu
	body a
	bottomFin i
	leftFin f
	rightFin g
	tail b
	topFin h
	parts ()Ljava/lang/Iterable; a
	setupAnim (Lnet/minecraft/world/entity/Entity;FFFFF)V a
net/minecraft/client/model/TurtleModel dxv
	eggBelly j
	bodyParts ()Ljava/lang/Iterable; b
	renderToBuffer (Lcom/mojang/blaze3d/vertex/PoseStack;Lcom/mojang/blaze3d/vertex/VertexConsumer;IIFFFF)V a
	setupAnim (Lnet/minecraft/world/entity/Entity;FFFFF)V a
	setupAnim (Lnet/minecraft/world/entity/animal/Turtle;FFFFF)V a
net/minecraft/client/model/VexModel dxw
	leftWing a
	rightWing b
	bodyParts ()Ljava/lang/Iterable; b
	setupAnim (Lnet/minecraft/world/entity/Entity;FFFFF)V a
	setupAnim (Lnet/minecraft/world/entity/LivingEntity;FFFFF)V a
	setupAnim (Lnet/minecraft/world/entity/monster/Vex;FFFFF)V a
net/minecraft/client/model/VillagerHeadModel dxx
	hatVisible (Z)V a
net/minecraft/client/model/VillagerModel dxy
	arms i
	body g
	hat b
	hatRim f
	head a
	jacket h
	leg0 j
	leg1 k
	nose l
	getHead ()Lnet/minecraft/client/model/geom/ModelPart; c
	hatVisible (Z)V a
	parts ()Ljava/lang/Iterable; a
	setupAnim (Lnet/minecraft/world/entity/Entity;FFFFF)V a
net/minecraft/client/model/WitchModel dxz
	holdingItem m
	mole n
	getNose ()Lnet/minecraft/client/model/geom/ModelPart; b
	setHoldingItem (Z)V b
	setupAnim (Lnet/minecraft/world/entity/Entity;FFFFF)V a
net/minecraft/client/model/WitherBossModel dya
	heads b
	parts f
	upperBodyParts a
	parts ()Lcom/google/common/collect/ImmutableList; b
	parts ()Ljava/lang/Iterable; a
	prepareMobModel (Lnet/minecraft/world/entity/Entity;FFF)V a
	prepareMobModel (Lnet/minecraft/world/entity/boss/wither/WitherBoss;FFF)V a
	setupAnim (Lnet/minecraft/world/entity/Entity;FFFFF)V a
	setupAnim (Lnet/minecraft/world/entity/boss/wither/WitherBoss;FFFFF)V a
net/minecraft/client/model/WolfModel dyb
	body f
	head a
	leg0 g
	leg1 h
	leg2 i
	leg3 j
	realHead b
	realTail l
	tail k
	upperBody m
	bodyParts ()Ljava/lang/Iterable; b
	headParts ()Ljava/lang/Iterable; a
	prepareMobModel (Lnet/minecraft/world/entity/Entity;FFF)V a
	prepareMobModel (Lnet/minecraft/world/entity/animal/Wolf;FFF)V a
	setupAnim (Lnet/minecraft/world/entity/Entity;FFFFF)V a
	setupAnim (Lnet/minecraft/world/entity/animal/Wolf;FFFFF)V a
net/minecraft/client/model/ZombieModel dyc
	isAggressive (Lnet/minecraft/world/entity/monster/Monster;)Z a
	isAggressive (Lnet/minecraft/world/entity/monster/Zombie;)Z a
net/minecraft/client/model/ZombieVillagerModel dyd
	hatRim a
	hatVisible (Z)V a
	setupAnim (Lnet/minecraft/world/entity/Entity;FFFFF)V a
	setupAnim (Lnet/minecraft/world/entity/LivingEntity;FFFFF)V a
	setupAnim (Lnet/minecraft/world/entity/monster/Zombie;FFFFF)V a
net/minecraft/client/model/dragon/DragonHeadModel dye
	head b
	jaw c
	renderToBuffer (Lcom/mojang/blaze3d/vertex/PoseStack;Lcom/mojang/blaze3d/vertex/VertexConsumer;IIFFFF)V a
	setupAnim (FFF)V a
net/minecraft/client/model/geom/ModelPart dyg
	children n
	cubes m
	mirror g
	visible h
	x a
	xRot d
	xTexOffs k
	xTexSize i
	y b
	yRot e
	yTexOffs l
	yTexSize j
	z c
	zRot f
	addBox (FFFFFF)Lnet/minecraft/client/model/geom/ModelPart; a
	addBox (FFFFFFF)V a
	addBox (FFFFFFFFF)V a
	addBox (FFFFFFFZ)V a
	addBox (FFFFFFZ)Lnet/minecraft/client/model/geom/ModelPart; a
	addBox (IIFFFFFFFFFZZ)V a
	addBox (Ljava/lang/String;FFFIIIFII)Lnet/minecraft/client/model/geom/ModelPart; a
	addChild (Lnet/minecraft/client/model/geom/ModelPart;)V b
	compile (Lcom/mojang/blaze3d/vertex/PoseStack$Pose;Lcom/mojang/blaze3d/vertex/VertexConsumer;IIFFFF)V a
	copyFrom (Lnet/minecraft/client/model/geom/ModelPart;)V a
	createShallowCopy ()Lnet/minecraft/client/model/geom/ModelPart; a
	getRandomCube (Ljava/util/Random;)Lnet/minecraft/client/model/geom/ModelPart$Cube; a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lcom/mojang/blaze3d/vertex/VertexConsumer;II)V a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lcom/mojang/blaze3d/vertex/VertexConsumer;IIFFFF)V a
	setPos (FFF)V a
	setTexSize (II)Lnet/minecraft/client/model/geom/ModelPart; b
	texOffs (II)Lnet/minecraft/client/model/geom/ModelPart; a
	translateAndRotate (Lcom/mojang/blaze3d/vertex/PoseStack;)V a
net/minecraft/client/model/geom/ModelPart$Cube dyg$a
	maxX d
	maxY e
	maxZ f
	minX a
	minY b
	minZ c
	polygons g
net/minecraft/client/model/geom/ModelPart$Polygon dyg$b
	normal b
	vertices a
net/minecraft/client/model/geom/ModelPart$Vertex dyg$c
	pos a
	u b
	v c
	remap (FF)Lnet/minecraft/client/model/geom/ModelPart$Vertex; a
net/minecraft/client/multiplayer/ClientAdvancements dyj
	LOGGER a
	advancements c
	listener e
	minecraft b
	progress d
	selectedTab f
	getAdvancements ()Lnet/minecraft/advancements/AdvancementList; a
	getProgress ()Ljava/util/Map; b
	setListener (Lnet/minecraft/client/multiplayer/ClientAdvancements$Listener;)V a
	setSelectedTab (Lnet/minecraft/advancements/Advancement;Z)V a
	update (Lnet/minecraft/network/protocol/game/ClientboundUpdateAdvancementsPacket;)V a
net/minecraft/client/multiplayer/ClientAdvancements$Listener dyj$a
	onSelectedTabChanged (Lnet/minecraft/advancements/Advancement;)V e
	onUpdateAdvancementProgress (Lnet/minecraft/advancements/Advancement;Lnet/minecraft/advancements/AdvancementProgress;)V a
net/minecraft/client/multiplayer/ClientChunkCache dyk
	LOGGER a
	emptyChunk b
	level e
	lightEngine c
	storage d
	calculateStorageRange (I)I b
	drop (II)V d
	gatherStats ()Ljava/lang/String; e
	getChunk (IILnet/minecraft/world/level/chunk/ChunkStatus;Z)Lnet/minecraft/world/level/chunk/ChunkAccess; a
	getChunk (IILnet/minecraft/world/level/chunk/ChunkStatus;Z)Lnet/minecraft/world/level/chunk/LevelChunk; b
	getLevel ()Lnet/minecraft/world/level/BlockGetter; m
	getLightEngine ()Lnet/minecraft/world/level/lighting/LevelLightEngine; l
	getLoadedChunksCount ()I h
	isEntityTickingChunk (Lnet/minecraft/world/entity/Entity;)Z a
	isEntityTickingChunk (Lnet/minecraft/world/level/ChunkPos;)Z a
	isTickingChunk (Lnet/minecraft/core/BlockPos;)Z a
	isValidChunk (Lnet/minecraft/world/level/chunk/LevelChunk;II)Z a
	onLightUpdate (Lnet/minecraft/world/level/LightLayer;Lnet/minecraft/core/SectionPos;)V a
	replaceWithPacketData (IILnet/minecraft/world/level/chunk/ChunkBiomeContainer;Lnet/minecraft/network/FriendlyByteBuf;Lnet/minecraft/nbt/CompoundTag;IZ)Lnet/minecraft/world/level/chunk/LevelChunk; a
	tick (Ljava/util/function/BooleanSupplier;)V a
	updateViewCenter (II)V e
	updateViewRadius (I)V a
net/minecraft/client/multiplayer/ClientChunkCache$Storage dyk$a
	chunkCount g
	chunkRadius c
	chunks b
	viewCenterX e
	viewCenterZ f
	viewRange d
	dumpChunks (Ljava/lang/String;)V a
	getChunk (I)Lnet/minecraft/world/level/chunk/LevelChunk; a
	getIndex (II)I a
	inRange (II)Z b
	replace (ILnet/minecraft/world/level/chunk/LevelChunk;)V a
	replace (ILnet/minecraft/world/level/chunk/LevelChunk;Lnet/minecraft/world/level/chunk/LevelChunk;)Lnet/minecraft/world/level/chunk/LevelChunk; a
net/minecraft/client/multiplayer/ClientHandshakePacketListenerImpl dyl
	LOGGER a
	connection e
	localGameProfile f
	minecraft b
	parent c
	updateStatus d
	authenticateServer (Ljava/lang/String;)Lnet/minecraft/network/chat/Component; a
	getConnection ()Lnet/minecraft/network/Connection; a
	getMinecraftSessionService ()Lcom/mojang/authlib/minecraft/MinecraftSessionService; b
	handleCompression (Lnet/minecraft/network/protocol/login/ClientboundLoginCompressionPacket;)V a
	handleCustomQuery (Lnet/minecraft/network/protocol/login/ClientboundCustomQueryPacket;)V a
	handleDisconnect (Lnet/minecraft/network/protocol/login/ClientboundLoginDisconnectPacket;)V a
	handleGameProfile (Lnet/minecraft/network/protocol/login/ClientboundGameProfilePacket;)V a
	handleHello (Lnet/minecraft/network/protocol/login/ClientboundHelloPacket;)V a
	onDisconnect (Lnet/minecraft/network/chat/Component;)V a
net/minecraft/client/multiplayer/ClientLevel dym
	chunkSource E
	clientLevelData d
	connection b
	effects x
	entitiesById a
	levelRenderer c
	mapData B
	minecraft y
	players z
	scoreboard A
	skyFlashTime C
	tintCaches D
	addAlwaysVisibleParticle (Lnet/minecraft/core/particles/ParticleOptions;DDDDDD)V b
	addAlwaysVisibleParticle (Lnet/minecraft/core/particles/ParticleOptions;ZDDDDDD)V b
	addEntity (ILnet/minecraft/world/entity/Entity;)V b
	addParticle (Lnet/minecraft/core/particles/ParticleOptions;DDDDDD)V a
	addParticle (Lnet/minecraft/core/particles/ParticleOptions;ZDDDDDD)V a
	addPlayer (ILnet/minecraft/client/player/AbstractClientPlayer;)V a
	animateTick (III)V c
	calculateBlockTint (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/ColorResolver;)I b
	clearTintCaches ()V h
	createFireworks (DDDDDDLnet/minecraft/nbt/CompoundTag;)V a
	destroyBlockProgress (ILnet/minecraft/core/BlockPos;I)V a
	disconnect ()V P
	doAnimateTick (IIIILjava/util/Random;ZLnet/minecraft/core/BlockPos$MutableBlockPos;)V a
	effects ()Lnet/minecraft/client/renderer/DimensionSpecialEffects; a
	entitiesForRendering ()Ljava/lang/Iterable; b
	fillReportDetails (Lnet/minecraft/CrashReport;)Lnet/minecraft/CrashReportCategory; a
	getBlockTicks ()Lnet/minecraft/world/level/TickList; G
	getBlockTint (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/ColorResolver;)I a
	getChunkSource ()Lnet/minecraft/client/multiplayer/ClientChunkCache; k
	getChunkSource ()Lnet/minecraft/world/level/chunk/ChunkSource; E
	getCloudColor (F)Lnet/minecraft/world/phys/Vec3; h
	getEntity (I)Lnet/minecraft/world/entity/Entity; a
	getEntityCount ()I i
	getFreeMapId ()I t
	getLevelData ()Lnet/minecraft/client/multiplayer/ClientLevel$ClientLevelData; v
	getLevelData ()Lnet/minecraft/world/level/storage/LevelData; u_
	getLiquidTicks ()Lnet/minecraft/world/level/TickList; F
	getMapData (Ljava/lang/String;)Lnet/minecraft/world/level/saveddata/maps/MapItemSavedData; a
	getRecipeManager ()Lnet/minecraft/world/item/crafting/RecipeManager; o
	getScoreboard ()Lnet/minecraft/world/scores/Scoreboard; D
	getShade (Lnet/minecraft/core/Direction;Z)F a
	getSharedSpawnPos ()Lnet/minecraft/core/BlockPos; u
	getSkyColor (Lnet/minecraft/core/BlockPos;F)Lnet/minecraft/world/phys/Vec3; a
	getSkyDarken (F)F g
	getSkyFlashTime ()I s
	getStarBrightness (F)F i
	getTagManager ()Lnet/minecraft/tags/TagManager; p
	getUncachedNoiseBiome (III)Lnet/minecraft/world/level/biome/Biome; a
	globalLevelEvent (ILnet/minecraft/core/BlockPos;I)V b
	hasChunk (II)Z b
	levelEvent (Lnet/minecraft/world/entity/player/Player;ILnet/minecraft/core/BlockPos;I)V a
	onChunkLoaded (II)V e
	onEntityRemoved (Lnet/minecraft/world/entity/Entity;)V d
	playLocalSound (DDDLnet/minecraft/sounds/SoundEvent;Lnet/minecraft/sounds/SoundSource;FFZ)V a
	playLocalSound (Lnet/minecraft/core/BlockPos;Lnet/minecraft/sounds/SoundEvent;Lnet/minecraft/sounds/SoundSource;FFZ)V a
	playSound (Lnet/minecraft/world/entity/player/Player;DDDLnet/minecraft/sounds/SoundEvent;Lnet/minecraft/sounds/SoundSource;FF)V a
	playSound (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/entity/Entity;Lnet/minecraft/sounds/SoundEvent;Lnet/minecraft/sounds/SoundSource;FF)V a
	players ()Ljava/util/List; w
	putNonPlayerEntity (ILnet/minecraft/world/entity/Entity;)V a
	reAddEntitiesToChunk (Lnet/minecraft/world/level/chunk/LevelChunk;)V b
	registryAccess ()Lnet/minecraft/core/RegistryAccess; r
	removeAllPendingEntityRemovals ()V j
	removeEntity (I)V d
	sendBlockUpdated (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/state/BlockState;I)V a
	sendPacketToServer (Lnet/minecraft/network/protocol/Packet;)V a
	setBlocksDirty (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/state/BlockState;)V b
	setDayTime (J)V b
	setDefaultSpawnPos (Lnet/minecraft/core/BlockPos;)V a
	setGameTime (J)V a
	setKnownState (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V b
	setMapData (Lnet/minecraft/world/level/saveddata/maps/MapItemSavedData;)V a
	setScoreboard (Lnet/minecraft/world/scores/Scoreboard;)V a
	setSectionDirtyWithNeighbors (III)V d
	setSkyFlashTime (I)V c
	spawnFluidParticle (DDDDDLnet/minecraft/core/particles/ParticleOptions;)V a
	spawnParticle (Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/particles/ParticleOptions;Lnet/minecraft/world/phys/shapes/VoxelShape;D)V a
	tick (Ljava/util/function/BooleanSupplier;)V a
	tickEntities ()V g
	tickNonPassenger (Lnet/minecraft/world/entity/Entity;)V a
	tickPassenger (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/entity/Entity;)V a
	tickTime ()V x
	trySpawnDripParticles (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/particles/ParticleOptions;Z)V a
	unload (Lnet/minecraft/world/level/chunk/LevelChunk;)V a
	updateChunkPos (Lnet/minecraft/world/entity/Entity;)V b
net/minecraft/client/multiplayer/ClientLevel$ClientLevelData dym$a
	dayTime h
	difficulty j
	difficultyLocked k
	gameRules b
	gameTime g
	hardcore a
	isFlat c
	raining i
	xSpawn d
	ySpawn e
	zSpawn f
	fillCrashReportCategory (Lnet/minecraft/CrashReportCategory;)V a
	getClearColorScale ()D g
	getDayTime ()J e
	getDifficulty ()Lnet/minecraft/world/Difficulty; r
	getGameRules ()Lnet/minecraft/world/level/GameRules; p
	getGameTime ()J d
	getHorizonHeight ()D f
	getXSpawn ()I a
	getYSpawn ()I b
	getZSpawn ()I c
	isDifficultyLocked ()Z s
	isHardcore ()Z m
	isRaining ()Z j
	isThundering ()Z h
	setDayTime (J)V b
	setDifficulty (Lnet/minecraft/world/Difficulty;)V a
	setDifficultyLocked (Z)V a
	setGameTime (J)V a
	setRaining (Z)V b
	setSpawn (Lnet/minecraft/core/BlockPos;)V a
	setXSpawn (I)V b
	setYSpawn (I)V c
	setZSpawn (I)V d
net/minecraft/client/multiplayer/ClientPacketListener dyn
	LOGGER a
	advancements j
	callbackScreen d
	commands p
	connection b
	debugQueryHandler m
	id r
	level f
	levelData g
	levels s
	localGameProfile c
	minecraft e
	playerInfoMap i
	random o
	recipeManager q
	registryAccess t
	serverChunkRadius n
	started h
	suggestionsProvider k
	tags l
	cleanup ()V c
	downloadCallback (Ljava/util/concurrent/CompletableFuture;)V a
	findTotem (Lnet/minecraft/world/entity/player/Player;)Lnet/minecraft/world/item/ItemStack; a
	getAdvancements ()Lnet/minecraft/client/multiplayer/ClientAdvancements; g
	getCommands ()Lcom/mojang/brigadier/CommandDispatcher; h
	getConnection ()Lnet/minecraft/network/Connection; a
	getDebugQueryHandler ()Lnet/minecraft/client/DebugQueryHandler; k
	getId ()Ljava/util/UUID; l
	getLevel ()Lnet/minecraft/client/multiplayer/ClientLevel; i
	getLocalGameProfile ()Lcom/mojang/authlib/GameProfile; f
	getOnlinePlayers ()Ljava/util/Collection; e
	getPlayerInfo (Ljava/lang/String;)Lnet/minecraft/client/multiplayer/PlayerInfo; a
	getPlayerInfo (Ljava/util/UUID;)Lnet/minecraft/client/multiplayer/PlayerInfo; a
	getRecipeManager ()Lnet/minecraft/world/item/crafting/RecipeManager; d
	getSuggestionsProvider ()Lnet/minecraft/client/multiplayer/ClientSuggestionProvider; b
	getTags ()Lnet/minecraft/tags/TagManager; j
	handleAddEntity (Lnet/minecraft/network/protocol/game/ClientboundAddEntityPacket;)V a
	handleAddExperienceOrb (Lnet/minecraft/network/protocol/game/ClientboundAddExperienceOrbPacket;)V a
	handleAddMob (Lnet/minecraft/network/protocol/game/ClientboundAddMobPacket;)V a
	handleAddObjective (Lnet/minecraft/network/protocol/game/ClientboundSetObjectivePacket;)V a
	handleAddOrRemoveRecipes (Lnet/minecraft/network/protocol/game/ClientboundRecipePacket;)V a
	handleAddPainting (Lnet/minecraft/network/protocol/game/ClientboundAddPaintingPacket;)V a
	handleAddPlayer (Lnet/minecraft/network/protocol/game/ClientboundAddPlayerPacket;)V a
	handleAnimate (Lnet/minecraft/network/protocol/game/ClientboundAnimatePacket;)V a
	handleAwardStats (Lnet/minecraft/network/protocol/game/ClientboundAwardStatsPacket;)V a
	handleBlockBreakAck (Lnet/minecraft/network/protocol/game/ClientboundBlockBreakAckPacket;)V a
	handleBlockDestruction (Lnet/minecraft/network/protocol/game/ClientboundBlockDestructionPacket;)V a
	handleBlockEntityData (Lnet/minecraft/network/protocol/game/ClientboundBlockEntityDataPacket;)V a
	handleBlockEvent (Lnet/minecraft/network/protocol/game/ClientboundBlockEventPacket;)V a
	handleBlockUpdate (Lnet/minecraft/network/protocol/game/ClientboundBlockUpdatePacket;)V a
	handleBossUpdate (Lnet/minecraft/network/protocol/game/ClientboundBossEventPacket;)V a
	handleChangeDifficulty (Lnet/minecraft/network/protocol/game/ClientboundChangeDifficultyPacket;)V a
	handleChat (Lnet/minecraft/network/protocol/game/ClientboundChatPacket;)V a
	handleChunkBlocksUpdate (Lnet/minecraft/network/protocol/game/ClientboundChunkBlocksUpdatePacket;)V a
	handleCommandSuggestions (Lnet/minecraft/network/protocol/game/ClientboundCommandSuggestionsPacket;)V a
	handleCommands (Lnet/minecraft/network/protocol/game/ClientboundCommandsPacket;)V a
	handleContainerAck (Lnet/minecraft/network/protocol/game/ClientboundContainerAckPacket;)V a
	handleContainerClose (Lnet/minecraft/network/protocol/game/ClientboundContainerClosePacket;)V a
	handleContainerContent (Lnet/minecraft/network/protocol/game/ClientboundContainerSetContentPacket;)V a
	handleContainerSetData (Lnet/minecraft/network/protocol/game/ClientboundContainerSetDataPacket;)V a
	handleContainerSetSlot (Lnet/minecraft/network/protocol/game/ClientboundContainerSetSlotPacket;)V a
	handleCustomPayload (Lnet/minecraft/network/protocol/game/ClientboundCustomPayloadPacket;)V a
	handleCustomSoundEvent (Lnet/minecraft/network/protocol/game/ClientboundCustomSoundPacket;)V a
	handleDisconnect (Lnet/minecraft/network/protocol/game/ClientboundDisconnectPacket;)V a
	handleEntityEvent (Lnet/minecraft/network/protocol/game/ClientboundEntityEventPacket;)V a
	handleEntityLinkPacket (Lnet/minecraft/network/protocol/game/ClientboundSetEntityLinkPacket;)V a
	handleExplosion (Lnet/minecraft/network/protocol/game/ClientboundExplodePacket;)V a
	handleForgetLevelChunk (Lnet/minecraft/network/protocol/game/ClientboundForgetLevelChunkPacket;)V a
	handleGameEvent (Lnet/minecraft/network/protocol/game/ClientboundGameEventPacket;)V a
	handleHorseScreenOpen (Lnet/minecraft/network/protocol/game/ClientboundHorseScreenOpenPacket;)V a
	handleItemCooldown (Lnet/minecraft/network/protocol/game/ClientboundCooldownPacket;)V a
	handleKeepAlive (Lnet/minecraft/network/protocol/game/ClientboundKeepAlivePacket;)V a
	handleLevelChunk (Lnet/minecraft/network/protocol/game/ClientboundLevelChunkPacket;)V a
	handleLevelEvent (Lnet/minecraft/network/protocol/game/ClientboundLevelEventPacket;)V a
	handleLightUpdatePacked (Lnet/minecraft/network/protocol/game/ClientboundLightUpdatePacket;)V a
	handleLogin (Lnet/minecraft/network/protocol/game/ClientboundLoginPacket;)V a
	handleLookAt (Lnet/minecraft/network/protocol/game/ClientboundPlayerLookAtPacket;)V a
	handleMapItemData (Lnet/minecraft/network/protocol/game/ClientboundMapItemDataPacket;)V a
	handleMerchantOffers (Lnet/minecraft/network/protocol/game/ClientboundMerchantOffersPacket;)V a
	handleMoveEntity (Lnet/minecraft/network/protocol/game/ClientboundMoveEntityPacket;)V a
	handleMovePlayer (Lnet/minecraft/network/protocol/game/ClientboundPlayerPositionPacket;)V a
	handleMoveVehicle (Lnet/minecraft/network/protocol/game/ClientboundMoveVehiclePacket;)V a
	handleOpenBook (Lnet/minecraft/network/protocol/game/ClientboundOpenBookPacket;)V a
	handleOpenScreen (Lnet/minecraft/network/protocol/game/ClientboundOpenScreenPacket;)V a
	handleOpenSignEditor (Lnet/minecraft/network/protocol/game/ClientboundOpenSignEditorPacket;)V a
	handleParticleEvent (Lnet/minecraft/network/protocol/game/ClientboundLevelParticlesPacket;)V a
	handlePlaceRecipe (Lnet/minecraft/network/protocol/game/ClientboundPlaceGhostRecipePacket;)V a
	handlePlayerAbilities (Lnet/minecraft/network/protocol/game/ClientboundPlayerAbilitiesPacket;)V a
	handlePlayerCombat (Lnet/minecraft/network/protocol/game/ClientboundPlayerCombatPacket;)V a
	handlePlayerInfo (Lnet/minecraft/network/protocol/game/ClientboundPlayerInfoPacket;)V a
	handleRemoveEntity (Lnet/minecraft/network/protocol/game/ClientboundRemoveEntitiesPacket;)V a
	handleRemoveMobEffect (Lnet/minecraft/network/protocol/game/ClientboundRemoveMobEffectPacket;)V a
	handleResourcePack (Lnet/minecraft/network/protocol/game/ClientboundResourcePackPacket;)V a
	handleRespawn (Lnet/minecraft/network/protocol/game/ClientboundRespawnPacket;)V a
	handleRotateMob (Lnet/minecraft/network/protocol/game/ClientboundRotateHeadPacket;)V a
	handleSelectAdvancementsTab (Lnet/minecraft/network/protocol/game/ClientboundSelectAdvancementsTabPacket;)V a
	handleSetBorder (Lnet/minecraft/network/protocol/game/ClientboundSetBorderPacket;)V a
	handleSetCamera (Lnet/minecraft/network/protocol/game/ClientboundSetCameraPacket;)V a
	handleSetCarriedItem (Lnet/minecraft/network/protocol/game/ClientboundSetCarriedItemPacket;)V a
	handleSetChunkCacheCenter (Lnet/minecraft/network/protocol/game/ClientboundSetChunkCacheCenterPacket;)V a
	handleSetChunkCacheRadius (Lnet/minecraft/network/protocol/game/ClientboundSetChunkCacheRadiusPacket;)V a
	handleSetDisplayObjective (Lnet/minecraft/network/protocol/game/ClientboundSetDisplayObjectivePacket;)V a
	handleSetEntityData (Lnet/minecraft/network/protocol/game/ClientboundSetEntityDataPacket;)V a
	handleSetEntityMotion (Lnet/minecraft/network/protocol/game/ClientboundSetEntityMotionPacket;)V a
	handleSetEntityPassengersPacket (Lnet/minecraft/network/protocol/game/ClientboundSetPassengersPacket;)V a
	handleSetEquipment (Lnet/minecraft/network/protocol/game/ClientboundSetEquipmentPacket;)V a
	handleSetExperience (Lnet/minecraft/network/protocol/game/ClientboundSetExperiencePacket;)V a
	handleSetHealth (Lnet/minecraft/network/protocol/game/ClientboundSetHealthPacket;)V a
	handleSetPlayerTeamPacket (Lnet/minecraft/network/protocol/game/ClientboundSetPlayerTeamPacket;)V a
	handleSetScore (Lnet/minecraft/network/protocol/game/ClientboundSetScorePacket;)V a
	handleSetSpawn (Lnet/minecraft/network/protocol/game/ClientboundSetDefaultSpawnPositionPacket;)V a
	handleSetTime (Lnet/minecraft/network/protocol/game/ClientboundSetTimePacket;)V a
	handleSetTitles (Lnet/minecraft/network/protocol/game/ClientboundSetTitlesPacket;)V a
	handleSoundEntityEvent (Lnet/minecraft/network/protocol/game/ClientboundSoundEntityPacket;)V a
	handleSoundEvent (Lnet/minecraft/network/protocol/game/ClientboundSoundPacket;)V a
	handleStopSoundEvent (Lnet/minecraft/network/protocol/game/ClientboundStopSoundPacket;)V a
	handleTabListCustomisation (Lnet/minecraft/network/protocol/game/ClientboundTabListPacket;)V a
	handleTagQueryPacket (Lnet/minecraft/network/protocol/game/ClientboundTagQueryPacket;)V a
	handleTakeItemEntity (Lnet/minecraft/network/protocol/game/ClientboundTakeItemEntityPacket;)V a
	handleTeleportEntity (Lnet/minecraft/network/protocol/game/ClientboundTeleportEntityPacket;)V a
	handleUpdateAdvancementsPacket (Lnet/minecraft/network/protocol/game/ClientboundUpdateAdvancementsPacket;)V a
	handleUpdateAttributes (Lnet/minecraft/network/protocol/game/ClientboundUpdateAttributesPacket;)V a
	handleUpdateMobEffect (Lnet/minecraft/network/protocol/game/ClientboundUpdateMobEffectPacket;)V a
	handleUpdateRecipes (Lnet/minecraft/network/protocol/game/ClientboundUpdateRecipesPacket;)V a
	handleUpdateTags (Lnet/minecraft/network/protocol/game/ClientboundUpdateTagsPacket;)V a
	levels ()Ljava/util/Set; m
	onDisconnect (Lnet/minecraft/network/chat/Component;)V a
	readSectionList (IILnet/minecraft/world/level/lighting/LevelLightEngine;Lnet/minecraft/world/level/LightLayer;IILjava/util/Iterator;Z)V a
	registryAccess ()Lnet/minecraft/core/RegistryAccess; n
	send (Lnet/minecraft/network/protocol/Packet;)V a
	send (Lnet/minecraft/network/protocol/game/ServerboundResourcePackPacket$Action;)V a
	validateResourcePackUrl (Ljava/lang/String;)Z b
net/minecraft/client/multiplayer/ClientSuggestionProvider dyo
	connection a
	minecraft b
	pendingSuggestionsFuture d
	pendingSuggestionsId c
	completeCustomSuggestions (ILcom/mojang/brigadier/suggestion/Suggestions;)V a
	customSuggestion (Lcom/mojang/brigadier/context/CommandContext;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture; a
	getAbsoluteCoordinates ()Ljava/util/Collection; t
	getAllTeams ()Ljava/util/Collection; m
	getAvailableSoundEvents ()Ljava/util/Collection; n
	getOnlinePlayerNames ()Ljava/util/Collection; l
	getRecipeNames ()Ljava/util/stream/Stream; o
	getRelevantCoordinates ()Ljava/util/Collection; s
	getSelectedEntities ()Ljava/util/Collection; r
	hasPermission (I)Z c
	levels ()Ljava/util/Set; p
	prettyPrint (D)Ljava/lang/String; a
	prettyPrint (I)Ljava/lang/String; a
	registryAccess ()Lnet/minecraft/core/RegistryAccess; q
net/minecraft/client/multiplayer/MultiPlayerGameMode dyp
	LOGGER a
	carriedIndex m
	connection c
	destroyBlockPos d
	destroyDelay h
	destroyProgress f
	destroyTicks g
	destroyingItem e
	isDestroying i
	localPlayerMode j
	minecraft b
	previousLocalPlayerMode k
	unAckedActions l
	adjustPlayer (Lnet/minecraft/world/entity/player/Player;)V a
	attack (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/entity/Entity;)V a
	canHurtPlayer ()Z a
	continueDestroyBlock (Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;)Z b
	createPlayer (Lnet/minecraft/client/multiplayer/ClientLevel;Lnet/minecraft/stats/StatsCounter;Lnet/minecraft/client/ClientRecipeBook;)Lnet/minecraft/client/player/LocalPlayer; a
	createPlayer (Lnet/minecraft/client/multiplayer/ClientLevel;Lnet/minecraft/stats/StatsCounter;Lnet/minecraft/client/ClientRecipeBook;ZZ)Lnet/minecraft/client/player/LocalPlayer; a
	destroyBlock (Lnet/minecraft/core/BlockPos;)Z a
	ensureHasSentCarriedItem ()V n
	getPickRange ()F c
	getPlayerMode ()Lnet/minecraft/world/level/GameType; l
	getPreviousPlayerMode ()Lnet/minecraft/world/level/GameType; k
	handleBlockBreakAck (Lnet/minecraft/client/multiplayer/ClientLevel;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/network/protocol/game/ServerboundPlayerActionPacket$Action;Z)V a
	handleCreativeModeItemAdd (Lnet/minecraft/world/item/ItemStack;I)V a
	handleCreativeModeItemDrop (Lnet/minecraft/world/item/ItemStack;)V a
	handleInventoryButtonClick (II)V a
	handleInventoryMouseClick (IIILnet/minecraft/world/inventory/ClickType;Lnet/minecraft/world/entity/player/Player;)Lnet/minecraft/world/item/ItemStack; a
	handlePickItem (I)V a
	handlePlaceRecipe (ILnet/minecraft/world/item/crafting/Recipe;Z)V a
	hasExperience ()Z e
	hasFarPickRange ()Z h
	hasInfiniteItems ()Z g
	hasMissTime ()Z f
	interact (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResult; a
	interactAt (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/phys/EntityHitResult;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResult; a
	isAlwaysFlying ()Z j
	isDestroying ()Z m
	isServerControlledInventory ()Z i
	releaseUsingItem (Lnet/minecraft/world/entity/player/Player;)V b
	sameDestroyTarget (Lnet/minecraft/core/BlockPos;)Z b
	sendBlockAction (Lnet/minecraft/network/protocol/game/ServerboundPlayerActionPacket$Action;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;)V a
	setLocalMode (Lnet/minecraft/world/level/GameType;)V b
	setPreviousLocalMode (Lnet/minecraft/world/level/GameType;)V a
	startDestroyBlock (Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;)Z a
	stopDestroyBlock ()V b
	tick ()V d
	useItem (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/level/Level;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResult; a
	useItemOn (Lnet/minecraft/client/player/LocalPlayer;Lnet/minecraft/client/multiplayer/ClientLevel;Lnet/minecraft/world/InteractionHand;Lnet/minecraft/world/phys/BlockHitResult;)Lnet/minecraft/world/InteractionResult; a
net/minecraft/client/multiplayer/PlayerInfo dyq
	displayHealth i
	gameMode c
	healthBlinkTime k
	lastHealth h
	lastHealthTime j
	latency d
	pendingTextures e
	profile a
	renderVisibilityId l
	skinModel f
	tabListDisplayName g
	textureLocations b
	getCapeLocation ()Lnet/minecraft/resources/ResourceLocation; h
	getDisplayHealth ()I n
	getElytraLocation ()Lnet/minecraft/resources/ResourceLocation; i
	getGameMode ()Lnet/minecraft/world/level/GameType; b
	getHealthBlinkTime ()J p
	getLastHealth ()I m
	getLastHealthTime ()J o
	getLatency ()I c
	getModelName ()Ljava/lang/String; f
	getProfile ()Lcom/mojang/authlib/GameProfile; a
	getRenderVisibilityId ()J q
	getSkinLocation ()Lnet/minecraft/resources/ResourceLocation; g
	getTabListDisplayName ()Lnet/minecraft/network/chat/Component; l
	getTeam ()Lnet/minecraft/world/scores/PlayerTeam; j
	isCapeLoaded ()Z d
	isSkinLoaded ()Z e
	registerTextures ()V k
	setDisplayHealth (I)V c
	setGameMode (Lnet/minecraft/world/level/GameType;)V a
	setHealthBlinkTime (J)V b
	setLastHealth (I)V b
	setLastHealthTime (J)V a
	setLatency (I)V a
	setRenderVisibilityId (J)V c
	setTabListDisplayName (Lnet/minecraft/network/chat/Component;)V a
net/minecraft/client/multiplayer/ServerAddress dyr
	host a
	port b
	getHost ()Ljava/lang/String; a
	getPort ()I b
	lookupSrv (Ljava/lang/String;)Lcom/mojang/datafixers/util/Pair; b
	parseInt (Ljava/lang/String;I)I a
	parseString (Ljava/lang/String;)Lnet/minecraft/client/multiplayer/ServerAddress; a
net/minecraft/client/multiplayer/ServerData dys
	iconB64 k
	ip b
	lan l
	motd d
	name a
	packStatus j
	ping e
	pinged h
	playerList i
	protocol f
	status c
	version g
	copyFrom (Lnet/minecraft/client/multiplayer/ServerData;)V a
	getIconB64 ()Ljava/lang/String; c
	getResourcePackStatus ()Lnet/minecraft/client/multiplayer/ServerData$ServerPackStatus; b
	isLan ()Z d
	read (Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/client/multiplayer/ServerData; a
	setIconB64 (Ljava/lang/String;)V a
	setResourcePackStatus (Lnet/minecraft/client/multiplayer/ServerData$ServerPackStatus;)V a
	write ()Lnet/minecraft/nbt/CompoundTag; a
net/minecraft/client/multiplayer/ServerData$ServerPackStatus dys$a
	$VALUES e
	DISABLED b
	ENABLED a
	PROMPT c
	name d
	getName ()Lnet/minecraft/network/chat/Component; a
net/minecraft/client/multiplayer/ServerList dyt
	LOGGER a
	minecraft b
	serverList c
	add (Lnet/minecraft/client/multiplayer/ServerData;)V b
	get (I)Lnet/minecraft/client/multiplayer/ServerData; a
	load ()V a
	remove (Lnet/minecraft/client/multiplayer/ServerData;)V a
	replace (ILnet/minecraft/client/multiplayer/ServerData;)V a
	save ()V b
	saveSingleServer (Lnet/minecraft/client/multiplayer/ServerData;)V c
	size ()I c
	swap (II)V a
net/minecraft/client/multiplayer/ServerStatusPinger dyu
	LOGGER b
	SPLITTER a
	connections c
	formatPlayerCount (II)Lnet/minecraft/network/chat/Component; b
	pingLegacyServer (Lnet/minecraft/client/multiplayer/ServerData;)V a
	pingServer (Lnet/minecraft/client/multiplayer/ServerData;Ljava/lang/Runnable;)V a
	removeAll ()V b
	tick ()V a
net/minecraft/client/particle/AshParticle dyx
net/minecraft/client/particle/AshParticle$Provider dyx$a
	sprites a
	createParticle (Lnet/minecraft/core/particles/ParticleOptions;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
	createParticle (Lnet/minecraft/core/particles/SimpleParticleType;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
net/minecraft/client/particle/AttackSweepParticle dyy
	sprites a
	getLightColor (F)I a
	getRenderType ()Lnet/minecraft/client/particle/ParticleRenderType; b
	tick ()V a
net/minecraft/client/particle/AttackSweepParticle$Provider dyy$a
	sprites a
	createParticle (Lnet/minecraft/core/particles/ParticleOptions;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
	createParticle (Lnet/minecraft/core/particles/SimpleParticleType;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
net/minecraft/client/particle/BarrierParticle dyz
	getQuadSize (F)F b
	getRenderType ()Lnet/minecraft/client/particle/ParticleRenderType; b
net/minecraft/client/particle/BarrierParticle$Provider dyz$a
	createParticle (Lnet/minecraft/core/particles/ParticleOptions;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
	createParticle (Lnet/minecraft/core/particles/SimpleParticleType;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
net/minecraft/client/particle/BaseAshSmokeParticle dza
	fallSpeed b
	sprites a
	getQuadSize (F)F b
	getRenderType ()Lnet/minecraft/client/particle/ParticleRenderType; b
	tick ()V a
net/minecraft/client/particle/BreakingItemParticle dzb
	uo a
	vo b
	getRenderType ()Lnet/minecraft/client/particle/ParticleRenderType; b
	getU0 ()F c
	getU1 ()F d
	getV0 ()F e
	getV1 ()F f
net/minecraft/client/particle/BreakingItemParticle$Provider dzb$a
	createParticle (Lnet/minecraft/core/particles/ItemParticleOption;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
	createParticle (Lnet/minecraft/core/particles/ParticleOptions;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
net/minecraft/client/particle/BreakingItemParticle$SlimeProvider dzb$b
	createParticle (Lnet/minecraft/core/particles/ParticleOptions;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
	createParticle (Lnet/minecraft/core/particles/SimpleParticleType;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
net/minecraft/client/particle/BreakingItemParticle$SnowballProvider dzb$c
	createParticle (Lnet/minecraft/core/particles/ParticleOptions;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
	createParticle (Lnet/minecraft/core/particles/SimpleParticleType;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
net/minecraft/client/particle/BubbleColumnUpParticle dzc
	getRenderType ()Lnet/minecraft/client/particle/ParticleRenderType; b
	tick ()V a
net/minecraft/client/particle/BubbleColumnUpParticle$Provider dzc$a
	sprite a
	createParticle (Lnet/minecraft/core/particles/ParticleOptions;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
	createParticle (Lnet/minecraft/core/particles/SimpleParticleType;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
net/minecraft/client/particle/BubbleParticle dzd
	getRenderType ()Lnet/minecraft/client/particle/ParticleRenderType; b
	tick ()V a
net/minecraft/client/particle/BubbleParticle$Provider dzd$a
	sprite a
	createParticle (Lnet/minecraft/core/particles/ParticleOptions;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
	createParticle (Lnet/minecraft/core/particles/SimpleParticleType;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
net/minecraft/client/particle/BubblePopParticle dze
	sprites a
	getRenderType ()Lnet/minecraft/client/particle/ParticleRenderType; b
	tick ()V a
net/minecraft/client/particle/BubblePopParticle$Provider dze$a
	sprites a
	createParticle (Lnet/minecraft/core/particles/ParticleOptions;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
	createParticle (Lnet/minecraft/core/particles/SimpleParticleType;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
net/minecraft/client/particle/CampfireSmokeParticle dzf
	getRenderType ()Lnet/minecraft/client/particle/ParticleRenderType; b
	tick ()V a
net/minecraft/client/particle/CampfireSmokeParticle$CosyProvider dzf$a
	sprites a
	createParticle (Lnet/minecraft/core/particles/ParticleOptions;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
	createParticle (Lnet/minecraft/core/particles/SimpleParticleType;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
net/minecraft/client/particle/CampfireSmokeParticle$SignalProvider dzf$b
	sprites a
	createParticle (Lnet/minecraft/core/particles/ParticleOptions;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
	createParticle (Lnet/minecraft/core/particles/SimpleParticleType;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
net/minecraft/client/particle/CritParticle dzg
	getQuadSize (F)F b
	getRenderType ()Lnet/minecraft/client/particle/ParticleRenderType; b
	tick ()V a
net/minecraft/client/particle/CritParticle$DamageIndicatorProvider dzg$a
	sprite a
	createParticle (Lnet/minecraft/core/particles/ParticleOptions;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
	createParticle (Lnet/minecraft/core/particles/SimpleParticleType;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
net/minecraft/client/particle/CritParticle$MagicProvider dzg$b
	sprite a
	createParticle (Lnet/minecraft/core/particles/ParticleOptions;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
	createParticle (Lnet/minecraft/core/particles/SimpleParticleType;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
net/minecraft/client/particle/CritParticle$Provider dzg$c
	sprite a
	createParticle (Lnet/minecraft/core/particles/ParticleOptions;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
	createParticle (Lnet/minecraft/core/particles/SimpleParticleType;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
net/minecraft/client/particle/DragonBreathParticle dzh
	hasHitGround a
	sprites b
	getQuadSize (F)F b
	getRenderType ()Lnet/minecraft/client/particle/ParticleRenderType; b
	tick ()V a
net/minecraft/client/particle/DragonBreathParticle$Provider dzh$a
	sprites a
	createParticle (Lnet/minecraft/core/particles/ParticleOptions;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
	createParticle (Lnet/minecraft/core/particles/SimpleParticleType;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
net/minecraft/client/particle/DripParticle dzi
	isGlowing a
	type b
	getLightColor (F)I a
	getRenderType ()Lnet/minecraft/client/particle/ParticleRenderType; b
	postMoveUpdate ()V h
	preMoveUpdate ()V g
	tick ()V a
net/minecraft/client/particle/DripParticle$CoolingDripHangParticle dzi$a
	preMoveUpdate ()V g
net/minecraft/client/particle/DripParticle$DripHangParticle dzi$b
	fallingParticle b
	postMoveUpdate ()V h
	preMoveUpdate ()V g
net/minecraft/client/particle/DripParticle$DripLandParticle dzi$c
net/minecraft/client/particle/DripParticle$FallAndLandParticle dzi$d
	landParticle b
	postMoveUpdate ()V h
net/minecraft/client/particle/DripParticle$FallingParticle dzi$e
	postMoveUpdate ()V h
net/minecraft/client/particle/DripParticle$HoneyFallAndLandParticle dzi$f
	postMoveUpdate ()V h
net/minecraft/client/particle/DripParticle$HoneyFallProvider dzi$g
	sprite a
	createParticle (Lnet/minecraft/core/particles/ParticleOptions;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
	createParticle (Lnet/minecraft/core/particles/SimpleParticleType;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
net/minecraft/client/particle/DripParticle$HoneyHangProvider dzi$h
	sprite a
	createParticle (Lnet/minecraft/core/particles/ParticleOptions;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
	createParticle (Lnet/minecraft/core/particles/SimpleParticleType;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
net/minecraft/client/particle/DripParticle$HoneyLandProvider dzi$i
	sprite a
	createParticle (Lnet/minecraft/core/particles/ParticleOptions;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
	createParticle (Lnet/minecraft/core/particles/SimpleParticleType;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
net/minecraft/client/particle/DripParticle$LavaFallProvider dzi$j
	sprite a
	createParticle (Lnet/minecraft/core/particles/ParticleOptions;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
	createParticle (Lnet/minecraft/core/particles/SimpleParticleType;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
net/minecraft/client/particle/DripParticle$LavaHangProvider dzi$k
	sprite a
	createParticle (Lnet/minecraft/core/particles/ParticleOptions;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
	createParticle (Lnet/minecraft/core/particles/SimpleParticleType;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
net/minecraft/client/particle/DripParticle$LavaLandProvider dzi$l
	sprite a
	createParticle (Lnet/minecraft/core/particles/ParticleOptions;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
	createParticle (Lnet/minecraft/core/particles/SimpleParticleType;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
net/minecraft/client/particle/DripParticle$NectarFallProvider dzi$m
	sprite a
	createParticle (Lnet/minecraft/core/particles/ParticleOptions;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
	createParticle (Lnet/minecraft/core/particles/SimpleParticleType;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
net/minecraft/client/particle/DripParticle$ObsidianTearFallProvider dzi$n
	sprite a
	createParticle (Lnet/minecraft/core/particles/ParticleOptions;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
	createParticle (Lnet/minecraft/core/particles/SimpleParticleType;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
net/minecraft/client/particle/DripParticle$ObsidianTearHangProvider dzi$o
	sprite a
	createParticle (Lnet/minecraft/core/particles/ParticleOptions;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
	createParticle (Lnet/minecraft/core/particles/SimpleParticleType;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
net/minecraft/client/particle/DripParticle$ObsidianTearLandProvider dzi$p
	sprite a
	createParticle (Lnet/minecraft/core/particles/ParticleOptions;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
	createParticle (Lnet/minecraft/core/particles/SimpleParticleType;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
net/minecraft/client/particle/DripParticle$WaterFallProvider dzi$q
	sprite a
	createParticle (Lnet/minecraft/core/particles/ParticleOptions;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
	createParticle (Lnet/minecraft/core/particles/SimpleParticleType;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
net/minecraft/client/particle/DripParticle$WaterHangProvider dzi$r
	sprite a
	createParticle (Lnet/minecraft/core/particles/ParticleOptions;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
	createParticle (Lnet/minecraft/core/particles/SimpleParticleType;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
net/minecraft/client/particle/DustParticle dzj
	sprites a
	getQuadSize (F)F b
	getRenderType ()Lnet/minecraft/client/particle/ParticleRenderType; b
	tick ()V a
net/minecraft/client/particle/DustParticle$Provider dzj$a
	sprites a
	createParticle (Lnet/minecraft/core/particles/DustParticleOptions;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
	createParticle (Lnet/minecraft/core/particles/ParticleOptions;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
net/minecraft/client/particle/EnchantmentTableParticle dzk
	xStart a
	yStart b
	zStart D
	getLightColor (F)I a
	getRenderType ()Lnet/minecraft/client/particle/ParticleRenderType; b
	move (DDD)V a
	tick ()V a
net/minecraft/client/particle/EnchantmentTableParticle$NautilusProvider dzk$a
	sprite a
	createParticle (Lnet/minecraft/core/particles/ParticleOptions;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
	createParticle (Lnet/minecraft/core/particles/SimpleParticleType;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
net/minecraft/client/particle/EnchantmentTableParticle$Provider dzk$b
	sprite a
	createParticle (Lnet/minecraft/core/particles/ParticleOptions;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
	createParticle (Lnet/minecraft/core/particles/SimpleParticleType;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
net/minecraft/client/particle/EndRodParticle dzl
	move (DDD)V a
net/minecraft/client/particle/EndRodParticle$Provider dzl$a
	sprites a
	createParticle (Lnet/minecraft/core/particles/ParticleOptions;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
	createParticle (Lnet/minecraft/core/particles/SimpleParticleType;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
net/minecraft/client/particle/ExplodeParticle dzm
	sprites a
	getRenderType ()Lnet/minecraft/client/particle/ParticleRenderType; b
	tick ()V a
net/minecraft/client/particle/ExplodeParticle$Provider dzm$a
	sprites a
	createParticle (Lnet/minecraft/core/particles/ParticleOptions;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
	createParticle (Lnet/minecraft/core/particles/SimpleParticleType;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
net/minecraft/client/particle/FallingDustParticle dzn
	rotSpeed a
	sprites b
	getQuadSize (F)F b
	getRenderType ()Lnet/minecraft/client/particle/ParticleRenderType; b
	tick ()V a
net/minecraft/client/particle/FallingDustParticle$Provider dzn$a
	sprite a
	createParticle (Lnet/minecraft/core/particles/BlockParticleOption;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
	createParticle (Lnet/minecraft/core/particles/ParticleOptions;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
net/minecraft/client/particle/FireworkParticles dzo
net/minecraft/client/particle/FireworkParticles$FlashProvider dzo$a
	sprite a
	createParticle (Lnet/minecraft/core/particles/ParticleOptions;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
	createParticle (Lnet/minecraft/core/particles/SimpleParticleType;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
net/minecraft/client/particle/FireworkParticles$OverlayParticle dzo$b
	getQuadSize (F)F b
	getRenderType ()Lnet/minecraft/client/particle/ParticleRenderType; b
	render (Lcom/mojang/blaze3d/vertex/VertexConsumer;Lnet/minecraft/client/Camera;F)V a
net/minecraft/client/particle/FireworkParticles$SparkParticle dzo$c
	engine E
	fadeB H
	fadeG G
	fadeR F
	flicker D
	hasFade I
	trail b
	render (Lcom/mojang/blaze3d/vertex/VertexConsumer;Lnet/minecraft/client/Camera;F)V a
	setFlicker (Z)V b
	setTrail (Z)V a
	tick ()V a
net/minecraft/client/particle/FireworkParticles$SparkProvider dzo$d
	sprites a
	createParticle (Lnet/minecraft/core/particles/ParticleOptions;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
	createParticle (Lnet/minecraft/core/particles/SimpleParticleType;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
net/minecraft/client/particle/FireworkParticles$Starter dzo$e
	engine b
	explosions B
	life a
	twinkleDelay C
	createParticle (DDDDDD[I[IZZ)V a
	createParticleBall (DI[I[IZZ)V a
	createParticleBurst ([I[IZZ)V a
	createParticleShape (D[[D[I[IZZZ)V a
	isFarAwayFromCamera ()Z c
	tick ()V a
net/minecraft/client/particle/FlameParticle dzp
	getLightColor (F)I a
	getQuadSize (F)F b
	getRenderType ()Lnet/minecraft/client/particle/ParticleRenderType; b
	move (DDD)V a
net/minecraft/client/particle/FlameParticle$Provider dzp$a
	sprite a
	createParticle (Lnet/minecraft/core/particles/ParticleOptions;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
	createParticle (Lnet/minecraft/core/particles/SimpleParticleType;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
net/minecraft/client/particle/HeartParticle dzq
	getQuadSize (F)F b
	getRenderType ()Lnet/minecraft/client/particle/ParticleRenderType; b
	tick ()V a
net/minecraft/client/particle/HeartParticle$AngryVillagerProvider dzq$a
	sprite a
	createParticle (Lnet/minecraft/core/particles/ParticleOptions;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
	createParticle (Lnet/minecraft/core/particles/SimpleParticleType;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
net/minecraft/client/particle/HeartParticle$Provider dzq$b
	sprite a
	createParticle (Lnet/minecraft/core/particles/ParticleOptions;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
	createParticle (Lnet/minecraft/core/particles/SimpleParticleType;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
net/minecraft/client/particle/HugeExplosionParticle dzr
	sprites a
	getLightColor (F)I a
	getRenderType ()Lnet/minecraft/client/particle/ParticleRenderType; b
	tick ()V a
net/minecraft/client/particle/HugeExplosionParticle$Provider dzr$a
	sprites a
	createParticle (Lnet/minecraft/core/particles/ParticleOptions;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
	createParticle (Lnet/minecraft/core/particles/SimpleParticleType;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
net/minecraft/client/particle/HugeExplosionSeedParticle dzs
	life a
	lifeTime b
	tick ()V a
net/minecraft/client/particle/HugeExplosionSeedParticle$Provider dzs$a
	createParticle (Lnet/minecraft/core/particles/ParticleOptions;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
	createParticle (Lnet/minecraft/core/particles/SimpleParticleType;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
net/minecraft/client/particle/ItemPickupParticle dzt
	entityRenderDispatcher D
	itemEntity b
	life C
	renderBuffers a
	target B
	getRenderType ()Lnet/minecraft/client/particle/ParticleRenderType; b
	getSafeCopy (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/world/entity/Entity; a
	render (Lcom/mojang/blaze3d/vertex/VertexConsumer;Lnet/minecraft/client/Camera;F)V a
	tick ()V a
net/minecraft/client/particle/LargeSmokeParticle dzu
net/minecraft/client/particle/LargeSmokeParticle$Provider dzu$a
	sprites a
	createParticle (Lnet/minecraft/core/particles/ParticleOptions;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
	createParticle (Lnet/minecraft/core/particles/SimpleParticleType;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
net/minecraft/client/particle/LavaParticle dzv
	getLightColor (F)I a
	getQuadSize (F)F b
	getRenderType ()Lnet/minecraft/client/particle/ParticleRenderType; b
	tick ()V a
net/minecraft/client/particle/LavaParticle$Provider dzv$a
	sprite a
	createParticle (Lnet/minecraft/core/particles/ParticleOptions;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
	createParticle (Lnet/minecraft/core/particles/SimpleParticleType;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
net/minecraft/client/particle/MobAppearanceParticle dzw
	model a
	renderType b
	getRenderType ()Lnet/minecraft/client/particle/ParticleRenderType; b
	render (Lcom/mojang/blaze3d/vertex/VertexConsumer;Lnet/minecraft/client/Camera;F)V a
net/minecraft/client/particle/MobAppearanceParticle$Provider dzw$a
	createParticle (Lnet/minecraft/core/particles/ParticleOptions;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
	createParticle (Lnet/minecraft/core/particles/SimpleParticleType;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
net/minecraft/client/particle/NoRenderParticle dzx
	getRenderType ()Lnet/minecraft/client/particle/ParticleRenderType; b
	render (Lcom/mojang/blaze3d/vertex/VertexConsumer;Lnet/minecraft/client/Camera;F)V a
net/minecraft/client/particle/NoteParticle dzy
	getQuadSize (F)F b
	getRenderType ()Lnet/minecraft/client/particle/ParticleRenderType; b
	tick ()V a
net/minecraft/client/particle/NoteParticle$Provider dzy$a
	sprite a
	createParticle (Lnet/minecraft/core/particles/ParticleOptions;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
	createParticle (Lnet/minecraft/core/particles/SimpleParticleType;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
net/minecraft/client/particle/Particle dzz
	INITIAL_AABB a
	age s
	alpha y
	bCol x
	bb b
	bbHeight q
	bbWidth p
	gCol w
	gravity u
	hasPhysics n
	level c
	lifetime t
	oRoll A
	onGround m
	rCol v
	random r
	removed o
	roll z
	stoppedByCollision B
	x g
	xd j
	xo d
	y h
	yd k
	yo e
	z i
	zd l
	zo f
	getBoundingBox ()Lnet/minecraft/world/phys/AABB; m
	getLifetime ()I i
	getLightColor (F)I a
	getRenderType ()Lnet/minecraft/client/particle/ParticleRenderType; b
	isAlive ()Z l
	move (DDD)V a
	remove ()V j
	render (Lcom/mojang/blaze3d/vertex/VertexConsumer;Lnet/minecraft/client/Camera;F)V a
	scale (F)Lnet/minecraft/client/particle/Particle; d
	setAlpha (F)V e
	setBoundingBox (Lnet/minecraft/world/phys/AABB;)V a
	setColor (FFF)V a
	setLifetime (I)V a
	setLocationFromBoundingbox ()V k
	setPos (DDD)V b
	setPower (F)Lnet/minecraft/client/particle/Particle; c
	setSize (FF)V a
	tick ()V a
net/minecraft/client/particle/ParticleDescription eaa
	textures a
	fromJson (Lcom/google/gson/JsonObject;)Lnet/minecraft/client/particle/ParticleDescription; a
	getTextures ()Ljava/util/List; a
net/minecraft/client/particle/ParticleEngine eab
	RENDER_ORDER b
	level a
	particles c
	particlesToAdd h
	providers g
	random f
	spriteSets i
	textureAtlas j
	textureManager e
	trackingEmitters d
	add (Lnet/minecraft/client/particle/Particle;)V a
	close ()V a
	countParticles ()Ljava/lang/String; d
	crack (Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;)V a
	createParticle (Lnet/minecraft/core/particles/ParticleOptions;DDDDDD)Lnet/minecraft/client/particle/Particle; a
	createTrackingEmitter (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/core/particles/ParticleOptions;)V a
	createTrackingEmitter (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/core/particles/ParticleOptions;I)V a
	destroy (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V a
	loadParticleDescription (Lnet/minecraft/server/packs/resources/ResourceManager;Lnet/minecraft/resources/ResourceLocation;Ljava/util/Map;)V a
	makeParticle (Lnet/minecraft/core/particles/ParticleOptions;DDDDDD)Lnet/minecraft/client/particle/Particle; b
	register (Lnet/minecraft/core/particles/ParticleType;Lnet/minecraft/client/particle/ParticleEngine$SpriteParticleRegistration;)V a
	register (Lnet/minecraft/core/particles/ParticleType;Lnet/minecraft/client/particle/ParticleProvider;)V a
	registerProviders ()V e
	reload (Lnet/minecraft/server/packs/resources/PreparableReloadListener$PreparationBarrier;Lnet/minecraft/server/packs/resources/ResourceManager;Lnet/minecraft/util/profiling/ProfilerFiller;Lnet/minecraft/util/profiling/ProfilerFiller;Ljava/util/concurrent/Executor;Ljava/util/concurrent/Executor;)Ljava/util/concurrent/CompletableFuture; a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource$BufferSource;Lnet/minecraft/client/renderer/LightTexture;Lnet/minecraft/client/Camera;F)V a
	setLevel (Lnet/minecraft/client/multiplayer/ClientLevel;)V a
	tick ()V b
	tickParticle (Lnet/minecraft/client/particle/Particle;)V b
	tickParticleList (Ljava/util/Collection;)V a
net/minecraft/client/particle/ParticleEngine$MutableSpriteSet eab$a
	sprites b
	get (II)Lnet/minecraft/client/renderer/texture/TextureAtlasSprite; a
	get (Ljava/util/Random;)Lnet/minecraft/client/renderer/texture/TextureAtlasSprite; a
	rebind (Ljava/util/List;)V a
net/minecraft/client/particle/ParticleEngine$SpriteParticleRegistration eab$b
net/minecraft/client/particle/ParticleProvider eac
	createParticle (Lnet/minecraft/core/particles/ParticleOptions;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
net/minecraft/client/particle/ParticleRenderType ead
	CUSTOM e
	NO_RENDER f
	PARTICLE_SHEET_LIT d
	PARTICLE_SHEET_OPAQUE b
	PARTICLE_SHEET_TRANSLUCENT c
	TERRAIN_SHEET a
	begin (Lcom/mojang/blaze3d/vertex/BufferBuilder;Lnet/minecraft/client/renderer/texture/TextureManager;)V a
	end (Lcom/mojang/blaze3d/vertex/Tesselator;)V a
net/minecraft/client/particle/PlayerCloudParticle eae
	sprites a
	getQuadSize (F)F b
	getRenderType ()Lnet/minecraft/client/particle/ParticleRenderType; b
	tick ()V a
net/minecraft/client/particle/PlayerCloudParticle$Provider eae$a
	sprites a
	createParticle (Lnet/minecraft/core/particles/ParticleOptions;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
	createParticle (Lnet/minecraft/core/particles/SimpleParticleType;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
net/minecraft/client/particle/PlayerCloudParticle$SneezeProvider eae$b
	sprites a
	createParticle (Lnet/minecraft/core/particles/ParticleOptions;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
	createParticle (Lnet/minecraft/core/particles/SimpleParticleType;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
net/minecraft/client/particle/PortalParticle eaf
	xStart a
	yStart b
	zStart D
	getLightColor (F)I a
	getQuadSize (F)F b
	getRenderType ()Lnet/minecraft/client/particle/ParticleRenderType; b
	move (DDD)V a
	tick ()V a
net/minecraft/client/particle/PortalParticle$Provider eaf$a
	sprite a
	createParticle (Lnet/minecraft/core/particles/ParticleOptions;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
	createParticle (Lnet/minecraft/core/particles/SimpleParticleType;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
net/minecraft/client/particle/ReversePortalParticle eag
	getQuadSize (F)F b
	tick ()V a
net/minecraft/client/particle/ReversePortalParticle$ReversePortalProvider eag$a
	sprite a
	createParticle (Lnet/minecraft/core/particles/ParticleOptions;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
	createParticle (Lnet/minecraft/core/particles/SimpleParticleType;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
net/minecraft/client/particle/RisingParticle eah
	tick ()V a
net/minecraft/client/particle/SimpleAnimatedParticle eai
	baseAirFriction D
	baseGravity b
	fadeB G
	fadeG F
	fadeR E
	hasFade H
	sprites a
	getLightColor (F)I a
	getRenderType ()Lnet/minecraft/client/particle/ParticleRenderType; b
	setBaseAirFriction (F)V f
	setColor (I)V b
	setFadeColor (I)V c
	tick ()V a
net/minecraft/client/particle/SingleQuadParticle eaj
	quadSize B
	getQuadSize (F)F b
	getU0 ()F c
	getU1 ()F d
	getV0 ()F e
	getV1 ()F f
	render (Lcom/mojang/blaze3d/vertex/VertexConsumer;Lnet/minecraft/client/Camera;F)V a
	scale (F)Lnet/minecraft/client/particle/Particle; d
net/minecraft/client/particle/SmokeParticle eak
net/minecraft/client/particle/SmokeParticle$Provider eak$a
	sprites a
	createParticle (Lnet/minecraft/core/particles/ParticleOptions;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
	createParticle (Lnet/minecraft/core/particles/SimpleParticleType;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
net/minecraft/client/particle/SoulParticle eal
	sprites a
	getRenderType ()Lnet/minecraft/client/particle/ParticleRenderType; b
	tick ()V a
net/minecraft/client/particle/SoulParticle$Provider eal$a
	sprite a
	createParticle (Lnet/minecraft/core/particles/ParticleOptions;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
	createParticle (Lnet/minecraft/core/particles/SimpleParticleType;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
net/minecraft/client/particle/SpellParticle eam
	RANDOM a
	sprites b
	getRenderType ()Lnet/minecraft/client/particle/ParticleRenderType; b
	tick ()V a
net/minecraft/client/particle/SpellParticle$AmbientMobProvider eam$a
	sprite a
	createParticle (Lnet/minecraft/core/particles/ParticleOptions;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
	createParticle (Lnet/minecraft/core/particles/SimpleParticleType;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
net/minecraft/client/particle/SpellParticle$InstantProvider eam$b
	sprite a
	createParticle (Lnet/minecraft/core/particles/ParticleOptions;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
	createParticle (Lnet/minecraft/core/particles/SimpleParticleType;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
net/minecraft/client/particle/SpellParticle$MobProvider eam$c
	sprite a
	createParticle (Lnet/minecraft/core/particles/ParticleOptions;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
	createParticle (Lnet/minecraft/core/particles/SimpleParticleType;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
net/minecraft/client/particle/SpellParticle$Provider eam$d
	sprite a
	createParticle (Lnet/minecraft/core/particles/ParticleOptions;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
	createParticle (Lnet/minecraft/core/particles/SimpleParticleType;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
net/minecraft/client/particle/SpellParticle$WitchProvider eam$e
	sprite a
	createParticle (Lnet/minecraft/core/particles/ParticleOptions;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
	createParticle (Lnet/minecraft/core/particles/SimpleParticleType;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
net/minecraft/client/particle/SpitParticle ean
	tick ()V a
net/minecraft/client/particle/SpitParticle$Provider ean$a
	sprites a
	createParticle (Lnet/minecraft/core/particles/ParticleOptions;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
	createParticle (Lnet/minecraft/core/particles/SimpleParticleType;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
net/minecraft/client/particle/SplashParticle eao
net/minecraft/client/particle/SplashParticle$Provider eao$a
	sprite a
	createParticle (Lnet/minecraft/core/particles/ParticleOptions;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
	createParticle (Lnet/minecraft/core/particles/SimpleParticleType;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
net/minecraft/client/particle/SpriteSet eap
	get (II)Lnet/minecraft/client/renderer/texture/TextureAtlasSprite; a
	get (Ljava/util/Random;)Lnet/minecraft/client/renderer/texture/TextureAtlasSprite; a
net/minecraft/client/particle/SquidInkParticle eaq
	tick ()V a
net/minecraft/client/particle/SquidInkParticle$Provider eaq$a
	sprites a
	createParticle (Lnet/minecraft/core/particles/ParticleOptions;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
	createParticle (Lnet/minecraft/core/particles/SimpleParticleType;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
net/minecraft/client/particle/SuspendedParticle ear
	getRenderType ()Lnet/minecraft/client/particle/ParticleRenderType; b
	tick ()V a
net/minecraft/client/particle/SuspendedParticle$CrimsonSporeProvider ear$a
	sprite a
	createParticle (Lnet/minecraft/core/particles/ParticleOptions;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
	createParticle (Lnet/minecraft/core/particles/SimpleParticleType;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
net/minecraft/client/particle/SuspendedParticle$UnderwaterProvider ear$b
	sprite a
	createParticle (Lnet/minecraft/core/particles/ParticleOptions;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
	createParticle (Lnet/minecraft/core/particles/SimpleParticleType;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
net/minecraft/client/particle/SuspendedParticle$WarpedSporeProvider ear$c
	sprite a
	createParticle (Lnet/minecraft/core/particles/ParticleOptions;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
	createParticle (Lnet/minecraft/core/particles/SimpleParticleType;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
net/minecraft/client/particle/SuspendedTownParticle eas
	getRenderType ()Lnet/minecraft/client/particle/ParticleRenderType; b
	move (DDD)V a
	tick ()V a
net/minecraft/client/particle/SuspendedTownParticle$ComposterFillProvider eas$a
	sprite a
	createParticle (Lnet/minecraft/core/particles/ParticleOptions;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
	createParticle (Lnet/minecraft/core/particles/SimpleParticleType;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
net/minecraft/client/particle/SuspendedTownParticle$DolphinSpeedProvider eas$b
	sprite a
	createParticle (Lnet/minecraft/core/particles/ParticleOptions;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
	createParticle (Lnet/minecraft/core/particles/SimpleParticleType;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
net/minecraft/client/particle/SuspendedTownParticle$HappyVillagerProvider eas$c
	sprite a
	createParticle (Lnet/minecraft/core/particles/ParticleOptions;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
	createParticle (Lnet/minecraft/core/particles/SimpleParticleType;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
net/minecraft/client/particle/SuspendedTownParticle$Provider eas$d
	sprite a
	createParticle (Lnet/minecraft/core/particles/ParticleOptions;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
	createParticle (Lnet/minecraft/core/particles/SimpleParticleType;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
net/minecraft/client/particle/TerrainParticle eat
	blockState a
	pos b
	uo D
	vo E
	getLightColor (F)I a
	getRenderType ()Lnet/minecraft/client/particle/ParticleRenderType; b
	getU0 ()F c
	getU1 ()F d
	getV0 ()F e
	getV1 ()F f
	init ()Lnet/minecraft/client/particle/TerrainParticle; g
	init (Lnet/minecraft/core/BlockPos;)Lnet/minecraft/client/particle/TerrainParticle; a
	multiplyColor (Lnet/minecraft/core/BlockPos;)V b
net/minecraft/client/particle/TerrainParticle$Provider eat$a
	createParticle (Lnet/minecraft/core/particles/BlockParticleOption;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
	createParticle (Lnet/minecraft/core/particles/ParticleOptions;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
net/minecraft/client/particle/TextureSheetParticle eau
	sprite C
	getU0 ()F c
	getU1 ()F d
	getV0 ()F e
	getV1 ()F f
	pickSprite (Lnet/minecraft/client/particle/SpriteSet;)V a
	setSprite (Lnet/minecraft/client/renderer/texture/TextureAtlasSprite;)V a
	setSpriteFromAge (Lnet/minecraft/client/particle/SpriteSet;)V b
net/minecraft/client/particle/TotemParticle eav
net/minecraft/client/particle/TotemParticle$Provider eav$a
	sprites a
	createParticle (Lnet/minecraft/core/particles/ParticleOptions;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
	createParticle (Lnet/minecraft/core/particles/SimpleParticleType;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
net/minecraft/client/particle/TrackingEmitter eaw
	entity a
	life b
	lifeTime B
	particleType C
	tick ()V a
net/minecraft/client/particle/WakeParticle eax
	sprites a
	getRenderType ()Lnet/minecraft/client/particle/ParticleRenderType; b
	tick ()V a
net/minecraft/client/particle/WakeParticle$Provider eax$a
	sprites a
	createParticle (Lnet/minecraft/core/particles/ParticleOptions;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
	createParticle (Lnet/minecraft/core/particles/SimpleParticleType;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
net/minecraft/client/particle/WaterCurrentDownParticle eay
	angle a
	getRenderType ()Lnet/minecraft/client/particle/ParticleRenderType; b
	tick ()V a
net/minecraft/client/particle/WaterCurrentDownParticle$Provider eay$a
	sprite a
	createParticle (Lnet/minecraft/core/particles/ParticleOptions;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
	createParticle (Lnet/minecraft/core/particles/SimpleParticleType;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
net/minecraft/client/particle/WaterDropParticle eaz
	getRenderType ()Lnet/minecraft/client/particle/ParticleRenderType; b
	tick ()V a
net/minecraft/client/particle/WaterDropParticle$Provider eaz$a
	sprite a
	createParticle (Lnet/minecraft/core/particles/ParticleOptions;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
	createParticle (Lnet/minecraft/core/particles/SimpleParticleType;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
net/minecraft/client/particle/WhiteAshParticle eba
net/minecraft/client/particle/WhiteAshParticle$Provider eba$a
	sprites a
	createParticle (Lnet/minecraft/core/particles/ParticleOptions;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
	createParticle (Lnet/minecraft/core/particles/SimpleParticleType;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
net/minecraft/client/player/AbstractClientPlayer ebc
	clientLevel d
	elytraRotX a
	elytraRotY b
	elytraRotZ c
	playerInfo e
	getCloakTextureLocation ()Lnet/minecraft/resources/ResourceLocation; p
	getElytraTextureLocation ()Lnet/minecraft/resources/ResourceLocation; r
	getFieldOfViewModifier ()F v
	getModelName ()Ljava/lang/String; u
	getPlayerInfo ()Lnet/minecraft/client/multiplayer/PlayerInfo; f
	getSkinLocation (Ljava/lang/String;)Lnet/minecraft/resources/ResourceLocation; d
	getSkinTextureLocation ()Lnet/minecraft/resources/ResourceLocation; o
	getSkullPath (Ljava/lang/String;)Lnet/minecraft/resources/ResourceLocation; e
	isCapeLoaded ()Z c
	isCreative ()Z b_
	isElytraLoaded ()Z q
	isSkinLoaded ()Z n
	isSpectator ()Z a_
	registerSkinTexture (Lnet/minecraft/resources/ResourceLocation;Ljava/lang/String;)Lnet/minecraft/client/renderer/texture/HttpTexture; a
net/minecraft/client/player/Input ebd
	down d
	forwardImpulse b
	jumping g
	left e
	leftImpulse a
	right f
	shiftKeyDown h
	up c
	getMoveVector ()Lnet/minecraft/world/phys/Vec2; a
	hasForwardImpulse ()Z b
	tick (Z)V a
net/minecraft/client/player/KeyboardInput ebe
	options i
	tick (Z)V a
net/minecraft/client/player/LocalPlayer ebf
	ambientSoundHandlers ca
	autoJumpEnabled ct
	autoJumpTime cu
	connection e
	crouching ci
	flashOnSetHealth cm
	handsBusy cs
	input f
	jumpRidingScale cp
	jumpRidingTicks co
	lastOnGround ch
	minecraft g
	oPortalTime bX
	permissionLevel cb
	portalTime bW
	positionReminder cl
	recipeBook bZ
	serverBrand cn
	showDeathScreen cx
	sprintTime bR
	sprintTriggerTime bQ
	startedUsingItem cq
	stats bY
	usingItemHand cr
	wasFallFlying cv
	wasShiftKeyDown cj
	wasSprinting ck
	waterVisionTime cw
	xBob bT
	xBobO bV
	xLast cc
	xRotLast cg
	yBob bS
	yBobO bU
	yLast1 cd
	yRotLast cf
	zLast ce
	actuallyHurt (Lnet/minecraft/world/damagesource/DamageSource;F)V e
	aiStep ()V k
	blocked (Lnet/minecraft/core/BlockPos;)Z g
	canAutoJump ()Z eY
	canSpawnSoulSpeedParticle ()Z cM
	canSpawnSprintParticle ()Z aK
	chat (Ljava/lang/String;)V f
	checkInBlock (DDD)V k
	clientSideCloseContainer ()V x
	closeContainer ()V m
	crit (Lnet/minecraft/world/entity/Entity;)V a
	displayClientMessage (Lnet/minecraft/network/chat/Component;Z)V a
	drop (Z)Z a
	getCurrentMood ()F w
	getJumpRidingScale ()F I
	getPermissionLevel ()I y
	getRecipeBook ()Lnet/minecraft/client/ClientRecipeBook; F
	getServerBrand ()Ljava/lang/String; B
	getStats ()Lnet/minecraft/stats/StatsCounter; D
	getUsedItemHand ()Lnet/minecraft/world/InteractionHand; dW
	getViewXRot (F)F g
	getViewYRot (F)F h
	getWaterVision ()F N
	handleEntityEvent (B)V a
	handleNetherPortalClient ()V eX
	hasEnoughImpulseToStartSprinting ()Z fa
	heal (F)V b
	hurt (Lnet/minecraft/world/damagesource/DamageSource;F)Z a
	hurtTo (F)V s
	isAutoJumpEnabled ()Z M
	isControlledCamera ()Z K
	isCrouching ()Z bv
	isEffectiveAi ()Z dR
	isHandsBusy ()Z L
	isLocalPlayer ()Z ey
	isMoving ()Z eZ
	isMovingSlowly ()Z J
	isRidingJumpable ()Z H
	isShiftKeyDown ()Z bq
	isSuppressingSlidingDownLadder ()Z ed
	isUnderWater ()Z aE
	isUsingItem ()Z dV
	magicCrit (Lnet/minecraft/world/entity/Entity;)V b
	move (Lnet/minecraft/world/entity/MoverType;Lnet/minecraft/world/phys/Vec3;)V a
	onSyncedDataUpdated (Lnet/minecraft/network/syncher/EntityDataAccessor;)V a
	onUpdateAbilities ()V t
	openCommandBlock (Lnet/minecraft/world/level/block/entity/CommandBlockEntity;)V a
	openItemGui (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/InteractionHand;)V a
	openJigsawBlock (Lnet/minecraft/world/level/block/entity/JigsawBlockEntity;)V a
	openMinecartCommandBlock (Lnet/minecraft/world/level/BaseCommandBlock;)V a
	openStructureBlock (Lnet/minecraft/world/level/block/entity/StructureBlockEntity;)V a
	openTextEdit (Lnet/minecraft/world/level/block/entity/SignBlockEntity;)V a
	playNotifySound (Lnet/minecraft/sounds/SoundEvent;Lnet/minecraft/sounds/SoundSource;FF)V a
	playSound (Lnet/minecraft/sounds/SoundEvent;FF)V a
	removeEffectNoUpdate (Lnet/minecraft/world/effect/MobEffect;)Lnet/minecraft/world/effect/MobEffectInstance; c
	removeRecipeHighlight (Lnet/minecraft/world/item/crafting/Recipe;)V a
	removeVehicle ()V bb
	respawn ()V ex
	rideTick ()V aW
	sendMessage (Lnet/minecraft/network/chat/Component;Ljava/util/UUID;)V a
	sendOpenInventory ()V A
	sendPosition ()V eW
	sendRidingJump ()V z
	serverAiStep ()V dO
	setExperienceValues (FII)V a
	setPermissionLevel (I)V a
	setServerBrand (Ljava/lang/String;)V g
	setShowDeathScreen (Z)V b
	setSprinting (Z)V g
	shouldShowDeathScreen ()Z G
	startRiding (Lnet/minecraft/world/entity/Entity;Z)Z a
	startUsingItem (Lnet/minecraft/world/InteractionHand;)V c
	stopUsingItem ()V eb
	swing (Lnet/minecraft/world/InteractionHand;)V a
	tick ()V j
	updateAutoJump (FF)V g
	updateIsUnderwater ()Z es
net/minecraft/client/player/RemotePlayer ebg
	aiStep ()V k
	hurt (Lnet/minecraft/world/damagesource/DamageSource;F)Z a
	sendMessage (Lnet/minecraft/network/chat/Component;Ljava/util/UUID;)V a
	shouldRenderAtSqrDistance (D)Z a
	tick ()V j
	updatePlayerPose ()V et
net/minecraft/client/player/inventory/Hotbar ebh
	items a
	createTag ()Lnet/minecraft/nbt/ListTag; a
	fromTag (Lnet/minecraft/nbt/ListTag;)V a
net/minecraft/client/renderer/BiomeColors ebk
	FOLIAGE_COLOR_RESOLVER b
	GRASS_COLOR_RESOLVER a
	WATER_COLOR_RESOLVER c
	getAverageColor (Lnet/minecraft/world/level/BlockAndTintGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/ColorResolver;)I a
	getAverageFoliageColor (Lnet/minecraft/world/level/BlockAndTintGetter;Lnet/minecraft/core/BlockPos;)I b
	getAverageGrassColor (Lnet/minecraft/world/level/BlockAndTintGetter;Lnet/minecraft/core/BlockPos;)I a
	getAverageWaterColor (Lnet/minecraft/world/level/BlockAndTintGetter;Lnet/minecraft/core/BlockPos;)I c
net/minecraft/client/renderer/BlockEntityWithoutLevelRenderer ebl
	DEFAULT_SHULKER_BOX c
	SHULKER_BOXES b
	banner g
	bed h
	chest d
	conduit i
	enderChest f
	instance a
	shieldModel j
	trappedChest e
	tridentModel k
	renderByItem (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/client/renderer/block/model/ItemTransforms$TransformType;Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;II)V a
net/minecraft/client/renderer/ChunkBufferBuilderPack ebm
	builders a
	builder (Lnet/minecraft/client/renderer/RenderType;)Lcom/mojang/blaze3d/vertex/BufferBuilder; a
	clearAll ()V a
	discardAll ()V b
net/minecraft/client/renderer/CubeMap ebn
	images a
	preload (Lnet/minecraft/client/renderer/texture/TextureManager;Ljava/util/concurrent/Executor;)Ljava/util/concurrent/CompletableFuture; a
	render (Lnet/minecraft/client/Minecraft;FFF)V a
net/minecraft/client/renderer/DimensionSpecialEffects ebo
	EFFECTS a
	cloudLevel c
	constantAmbientLight g
	forceBrightLightmap f
	hasGround d
	skyType e
	sunriseCol b
	constantAmbientLight ()Z e
	forType (Ljava/util/Optional;)Lnet/minecraft/client/renderer/DimensionSpecialEffects; a
	forceBrightLightmap ()Z d
	getBrightnessDependentFogColor (Lnet/minecraft/world/phys/Vec3;F)Lnet/minecraft/world/phys/Vec3; a
	getCloudHeight ()F a
	getSunriseColor (FF)[F a
	hasGround ()Z b
	isFoggyAt (II)Z a
	skyType ()Lnet/minecraft/client/renderer/DimensionSpecialEffects$SkyType; c
net/minecraft/client/renderer/DimensionSpecialEffects$EndEffects ebo$a
	getBrightnessDependentFogColor (Lnet/minecraft/world/phys/Vec3;F)Lnet/minecraft/world/phys/Vec3; a
	getSunriseColor (FF)[F a
	isFoggyAt (II)Z a
net/minecraft/client/renderer/DimensionSpecialEffects$NetherEffects ebo$b
	getBrightnessDependentFogColor (Lnet/minecraft/world/phys/Vec3;F)Lnet/minecraft/world/phys/Vec3; a
	isFoggyAt (II)Z a
net/minecraft/client/renderer/DimensionSpecialEffects$OverworldEffects ebo$c
	getBrightnessDependentFogColor (Lnet/minecraft/world/phys/Vec3;F)Lnet/minecraft/world/phys/Vec3; a
	isFoggyAt (II)Z a
net/minecraft/client/renderer/DimensionSpecialEffects$SkyType ebo$d
	$VALUES d
	END c
	NONE a
	NORMAL b
net/minecraft/client/renderer/EffectInstance ebp
	DUMMY_UNIFORM b
	LOGGER a
	attributeNames p
	attributes o
	blend n
	dirty m
	fragmentProgram r
	lastAppliedEffect c
	lastProgramId d
	name l
	programId k
	samplerLocations g
	samplerMap e
	samplerNames f
	uniformLocations i
	uniformMap j
	uniforms h
	vertexProgram q
	apply ()V f
	clear ()V e
	getFragmentProgram ()Lcom/mojang/blaze3d/shaders/Program; d
	getId ()I a
	getName ()Ljava/lang/String; g
	getOrCreate (Lnet/minecraft/server/packs/resources/ResourceManager;Lcom/mojang/blaze3d/shaders/Program$Type;Ljava/lang/String;)Lcom/mojang/blaze3d/shaders/Program; a
	getUniform (Ljava/lang/String;)Lcom/mojang/blaze3d/shaders/Uniform; a
	getVertexProgram ()Lcom/mojang/blaze3d/shaders/Program; c
	markDirty ()V b
	parseBlendNode (Lcom/google/gson/JsonObject;)Lcom/mojang/blaze3d/shaders/BlendMode; a
	parseSamplerNode (Lcom/google/gson/JsonElement;)V a
	parseUniformNode (Lcom/google/gson/JsonElement;)V b
	safeGetUniform (Ljava/lang/String;)Lcom/mojang/blaze3d/shaders/AbstractUniform; b
	setSampler (Ljava/lang/String;Ljava/lang/Object;)V a
	updateLocations ()V h
net/minecraft/client/renderer/FaceInfo ebq
	$VALUES i
	BY_FACING g
	DOWN a
	EAST f
	NORTH c
	SOUTH d
	UP b
	WEST e
	infos h
	fromFacing (Lnet/minecraft/core/Direction;)Lnet/minecraft/client/renderer/FaceInfo; a
	getVertexInfo (I)Lnet/minecraft/client/renderer/FaceInfo$VertexInfo; a
net/minecraft/client/renderer/FaceInfo$Constants ebq$a
	MAX_X c
	MAX_Y b
	MAX_Z a
	MIN_X f
	MIN_Y e
	MIN_Z d
net/minecraft/client/renderer/FaceInfo$VertexInfo ebq$b
	xFace a
	yFace b
	zFace c
net/minecraft/client/renderer/FogRenderer ebr
	biomeChangedTime f
	fogBlue c
	fogGreen b
	fogRed a
	previousBiomeFog e
	targetBiomeFog d
	levelFogColor ()V b
	setupColor (Lnet/minecraft/client/Camera;FLnet/minecraft/client/multiplayer/ClientLevel;IF)V a
	setupFog (Lnet/minecraft/client/Camera;Lnet/minecraft/client/renderer/FogRenderer$FogMode;FZ)V a
	setupNoFog ()V a
net/minecraft/client/renderer/FogRenderer$FogMode ebr$a
	$VALUES c
	FOG_SKY a
	FOG_TERRAIN b
net/minecraft/client/renderer/GameRenderer ebs
	EFFECTS D
	EFFECT_NONE b
	LOGGER c
	darkenWorldAmount m
	darkenWorldAmountO n
	effectActive F
	effectIndex E
	fov k
	itemActivationItem y
	itemActivationOffX A
	itemActivationOffY B
	itemActivationTicks z
	itemInHandRenderer a
	lastActiveTime r
	lastScreenshotAttempt q
	lightTexture s
	mainCamera G
	mapRenderer h
	minecraft d
	oldFov l
	overlayTexture t
	panoramicMode u
	postEffect C
	random f
	renderBlockOutline p
	renderBuffers i
	renderDistance g
	renderHand o
	resourceManager e
	tick j
	zoom v
	zoomX w
	zoomY x
	bobHurt (Lcom/mojang/blaze3d/vertex/PoseStack;F)V a
	bobView (Lcom/mojang/blaze3d/vertex/PoseStack;F)V b
	checkEntityPostEffect (Lnet/minecraft/world/entity/Entity;)V a
	currentEffect ()Lnet/minecraft/client/renderer/PostChain; f
	cycleEffect ()V d
	displayItemActivation (Lnet/minecraft/world/item/ItemStack;)V a
	getDarkenWorldAmount (F)F b
	getFov (Lnet/minecraft/client/Camera;FZ)D b
	getMainCamera ()Lnet/minecraft/client/Camera; k
	getMapRenderer ()Lnet/minecraft/client/gui/MapRenderer; h
	getMinecraft ()Lnet/minecraft/client/Minecraft; i
	getNightVisionScale (Lnet/minecraft/world/entity/LivingEntity;F)F a
	getProjectionMatrix (Lnet/minecraft/client/Camera;FZ)Lcom/mojang/math/Matrix4f; a
	getRenderDistance ()F j
	lightTexture ()Lnet/minecraft/client/renderer/LightTexture; l
	loadEffect (Lnet/minecraft/resources/ResourceLocation;)V a
	onResourceManagerReload (Lnet/minecraft/server/packs/resources/ResourceManager;)V a
	overlayTexture ()Lnet/minecraft/client/renderer/texture/OverlayTexture; m
	pick (F)V a
	render (FJZ)V a
	renderItemActivationAnimation (IIF)V a
	renderItemInHand (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/Camera;F)V a
	renderLevel (FJLcom/mojang/blaze3d/vertex/PoseStack;)V a
	renderZoomed (FFF)V a
	resetData ()V g
	resetProjectionMatrix (Lcom/mojang/math/Matrix4f;)V a
	resize (II)V a
	setPanoramicMode (Z)V c
	setRenderBlockOutline (Z)V b
	setRenderHand (Z)V a
	shouldRenderBlockOutline ()Z p
	shutdownEffect ()V a
	takeAutoScreenshot ()V o
	tick ()V e
	tickFov ()V n
	togglePostEffect ()V b
net/minecraft/client/renderer/GpuWarnlistManager ebt
	GPU_WARNLIST_LOCATION b
	LOGGER a
	showWarning d
	skipFabulous f
	warningDismissed e
	warnings c
	apply (Ljava/lang/Object;Lnet/minecraft/server/packs/resources/ResourceManager;Lnet/minecraft/util/profiling/ProfilerFiller;)V a
	apply (Lnet/minecraft/client/renderer/GpuWarnlistManager$Preparations;Lnet/minecraft/server/packs/resources/ResourceManager;Lnet/minecraft/util/profiling/ProfilerFiller;)V a
	compilePatterns (Lcom/google/gson/JsonArray;Ljava/util/List;)V a
	dismissWarning ()V e
	dismissWarningAndSkipFabulous ()V f
	getRendererWarnings ()Ljava/lang/String; j
	getVendorWarnings ()Ljava/lang/String; l
	getVersionWarnings ()Ljava/lang/String; k
	hasWarnings ()Z a
	isShowingWarning ()Z g
	isSkippingFabulous ()Z h
	parseJson (Lnet/minecraft/server/packs/resources/ResourceManager;Lnet/minecraft/util/profiling/ProfilerFiller;)Lcom/google/gson/JsonObject; c
	prepare (Lnet/minecraft/server/packs/resources/ResourceManager;Lnet/minecraft/util/profiling/ProfilerFiller;)Ljava/lang/Object; b
	prepare (Lnet/minecraft/server/packs/resources/ResourceManager;Lnet/minecraft/util/profiling/ProfilerFiller;)Lnet/minecraft/client/renderer/GpuWarnlistManager$Preparations; a
	resetWarnings ()V i
	showWarning ()V d
	willShowWarning ()Z b
net/minecraft/client/renderer/GpuWarnlistManager$Preparations ebt$a
	rendererPatterns a
	vendorPatterns c
	versionPatterns b
	apply ()Lcom/google/common/collect/ImmutableMap; a
	matchAny (Ljava/util/List;Ljava/lang/String;)Ljava/lang/String; a
net/minecraft/client/renderer/ItemBlockRenderTypes ebu
	TYPE_BY_BLOCK a
	TYPE_BY_FLUID b
	renderCutout c
	getChunkRenderType (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/client/renderer/RenderType; a
	getMovingBlockRenderType (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/client/renderer/RenderType; b
	getRenderLayer (Lnet/minecraft/world/level/material/FluidState;)Lnet/minecraft/client/renderer/RenderType; a
	getRenderType (Lnet/minecraft/world/item/ItemStack;Z)Lnet/minecraft/client/renderer/RenderType; a
	getRenderType (Lnet/minecraft/world/level/block/state/BlockState;Z)Lnet/minecraft/client/renderer/RenderType; a
	setFancy (Z)V a
net/minecraft/client/renderer/ItemInHandRenderer ebv
	MAP_BACKGROUND a
	MAP_BACKGROUND_CHECKERBOARD b
	entityRenderDispatcher j
	itemRenderer k
	mainHandHeight f
	mainHandItem d
	minecraft c
	oMainHandHeight g
	oOffHandHeight i
	offHandHeight h
	offHandItem e
	applyEatTransform (Lcom/mojang/blaze3d/vertex/PoseStack;FLnet/minecraft/world/entity/HumanoidArm;Lnet/minecraft/world/item/ItemStack;)V a
	applyItemArmAttackTransform (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/world/entity/HumanoidArm;F)V a
	applyItemArmTransform (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/world/entity/HumanoidArm;F)V b
	calculateMapTilt (F)F a
	itemUsed (Lnet/minecraft/world/InteractionHand;)V a
	renderArmWithItem (Lnet/minecraft/client/player/AbstractClientPlayer;FFLnet/minecraft/world/InteractionHand;FLnet/minecraft/world/item/ItemStack;FLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	renderHandsWithItems (FLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource$BufferSource;Lnet/minecraft/client/player/LocalPlayer;I)V a
	renderItem (Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/client/renderer/block/model/ItemTransforms$TransformType;ZLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	renderMap (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;ILnet/minecraft/world/item/ItemStack;)V a
	renderMapHand (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;ILnet/minecraft/world/entity/HumanoidArm;)V a
	renderOneHandedMap (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;IFLnet/minecraft/world/entity/HumanoidArm;FLnet/minecraft/world/item/ItemStack;)V a
	renderPlayerArm (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;IFFLnet/minecraft/world/entity/HumanoidArm;)V a
	renderTwoHandedMap (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;IFFF)V a
	tick ()V a
net/minecraft/client/renderer/ItemModelShaper ebw
	modelManager c
	shapes a
	shapesCache b
	getIndex (Lnet/minecraft/world/item/Item;)I b
	getItemModel (Lnet/minecraft/world/item/Item;)Lnet/minecraft/client/resources/model/BakedModel; a
	getItemModel (Lnet/minecraft/world/item/ItemStack;)Lnet/minecraft/client/resources/model/BakedModel; b
	getModelManager ()Lnet/minecraft/client/resources/model/ModelManager; a
	getParticleIcon (Lnet/minecraft/world/item/ItemStack;)Lnet/minecraft/client/renderer/texture/TextureAtlasSprite; a
	getParticleIcon (Lnet/minecraft/world/level/ItemLike;)Lnet/minecraft/client/renderer/texture/TextureAtlasSprite; a
	rebuildCache ()V b
	register (Lnet/minecraft/world/item/Item;Lnet/minecraft/client/resources/model/ModelResourceLocation;)V a
net/minecraft/client/renderer/LevelRenderer ebx
	CLOUDS_LOCATION e
	DIRECTIONS a
	END_SKY_LOCATION f
	FORCEFIELD_LOCATION g
	LOGGER b
	MOON_LOCATION c
	RAIN_LOCATION h
	SNOW_LOCATION i
	SUN_LOCATION d
	captureFrustum ag
	capturedFrustum ah
	chunkRenderDispatcher ab
	chunksToCompile o
	cloudBuffer x
	cloudsTarget J
	culledEntities af
	darkBuffer v
	destroyingBlocks A
	destructionProgress B
	entityEffect E
	entityRenderDispatcher l
	entityTarget D
	format ac
	frameId ao
	frameTimes y
	frustumPoints ai
	frustumPos aj
	generateClouds w
	globalBlockEntities q
	itemEntityTarget G
	lastCameraChunkX O
	lastCameraChunkY P
	lastCameraChunkZ Q
	lastCameraX L
	lastCameraY M
	lastCameraZ N
	lastViewDistance ad
	level n
	minecraft j
	needsUpdate an
	particlesTarget H
	playingRecords C
	prevCamRotX U
	prevCamRotY V
	prevCamX R
	prevCamY S
	prevCamZ T
	prevCloudColor Z
	prevCloudX W
	prevCloudY X
	prevCloudZ Y
	prevCloudsType aa
	rainSizeX aq
	rainSizeZ ar
	rainSoundTime ap
	renderBuffers m
	renderChunks p
	renderedEntities ae
	skyBuffer u
	skyFormat s
	starBuffer t
	textureManager k
	ticks z
	translucentTarget F
	transparencyChain K
	viewArea r
	weatherTarget I
	xTransparentOld ak
	yTransparentOld al
	zTransparentOld am
	addChainedFilledBoxVertices (Lcom/mojang/blaze3d/vertex/BufferBuilder;DDDDDDFFFF)V a
	addFrustumQuad (Lcom/mojang/blaze3d/vertex/VertexConsumer;IIIIIII)V a
	addFrustumVertex (Lcom/mojang/blaze3d/vertex/VertexConsumer;I)V a
	addParticle (Lnet/minecraft/core/particles/ParticleOptions;DDDDDD)V a
	addParticle (Lnet/minecraft/core/particles/ParticleOptions;ZDDDDDD)V a
	addParticle (Lnet/minecraft/core/particles/ParticleOptions;ZZDDDDDD)V a
	addParticleInternal (Lnet/minecraft/core/particles/ParticleOptions;ZDDDDDD)Lnet/minecraft/client/particle/Particle; b
	addParticleInternal (Lnet/minecraft/core/particles/ParticleOptions;ZZDDDDDD)Lnet/minecraft/client/particle/Particle; b
	allChanged ()V e
	blockChanged (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/state/BlockState;I)V a
	buildClouds (Lcom/mojang/blaze3d/vertex/BufferBuilder;DDDLnet/minecraft/world/phys/Vec3;)V a
	calculateParticleLevel (Z)Lnet/minecraft/client/ParticleStatus; a
	canSee (Lnet/minecraft/core/Direction;Lcom/mojang/math/Vector3f;)Z a
	canSee (Lnet/minecraft/core/Direction;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Z a
	captureFrustum ()V j
	captureFrustum (Lcom/mojang/math/Matrix4f;Lcom/mojang/math/Matrix4f;DDDLnet/minecraft/client/renderer/culling/Frustum;)V a
	checkPoseStack (Lcom/mojang/blaze3d/vertex/PoseStack;)V a
	clear ()V m
	compileChunksUntil (J)V a
	countRenderedChunks ()I h
	createDarkSky ()V x
	createLightSky ()V y
	createStars ()V z
	deinitTransparency ()V w
	destroyBlockProgress (ILnet/minecraft/core/BlockPos;I)V b
	doEntityOutline ()V b
	drawSkyHemisphere (Lcom/mojang/blaze3d/vertex/BufferBuilder;FZ)V a
	drawStars (Lcom/mojang/blaze3d/vertex/BufferBuilder;)V a
	entityTarget ()Lcom/mojang/blaze3d/pipeline/RenderTarget; p
	getChunkStatistics ()Ljava/lang/String; g
	getCloudsTarget ()Lcom/mojang/blaze3d/pipeline/RenderTarget; u
	getEntityStatistics ()Ljava/lang/String; i
	getItemEntityTarget ()Lcom/mojang/blaze3d/pipeline/RenderTarget; r
	getLightColor (Lnet/minecraft/world/level/BlockAndTintGetter;Lnet/minecraft/core/BlockPos;)I a
	getLightColor (Lnet/minecraft/world/level/BlockAndTintGetter;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/BlockPos;)I a
	getParticlesTarget ()Lcom/mojang/blaze3d/pipeline/RenderTarget; s
	getRelativeFrom (Lnet/minecraft/core/BlockPos;Lnet/minecraft/client/renderer/chunk/ChunkRenderDispatcher$RenderChunk;Lnet/minecraft/core/Direction;)Lnet/minecraft/client/renderer/chunk/ChunkRenderDispatcher$RenderChunk; a
	getTranslucentTarget ()Lcom/mojang/blaze3d/pipeline/RenderTarget; q
	getViewVector (Lnet/minecraft/world/entity/Entity;D)Lcom/mojang/math/Vector3f; a
	getWeatherTarget ()Lcom/mojang/blaze3d/pipeline/RenderTarget; t
	globalLevelEvent (ILnet/minecraft/core/BlockPos;I)V a
	hasRenderedAllChunks ()Z n
	initOutline ()V a
	initTransparency ()V v
	isAdjacentChunk (Lnet/minecraft/core/BlockPos;Lnet/minecraft/client/renderer/chunk/ChunkRenderDispatcher$RenderChunk;)Z a
	killFrustum ()V k
	levelEvent (Lnet/minecraft/world/entity/player/Player;ILnet/minecraft/core/BlockPos;I)V a
	needsUpdate ()V o
	notifyNearbyEntities (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Z)V a
	onResourceManagerReload (Lnet/minecraft/server/packs/resources/ResourceManager;)V a
	playStreamingMusic (Lnet/minecraft/sounds/SoundEvent;Lnet/minecraft/core/BlockPos;)V a
	removeProgress (Lnet/minecraft/server/level/BlockDestructionProgress;)V a
	renderChunkLayer (Lnet/minecraft/client/renderer/RenderType;Lcom/mojang/blaze3d/vertex/PoseStack;DDD)V a
	renderClouds (Lcom/mojang/blaze3d/vertex/PoseStack;FDDD)V a
	renderDebug (Lnet/minecraft/client/Camera;)V b
	renderEndSky (Lcom/mojang/blaze3d/vertex/PoseStack;)V b
	renderEntity (Lnet/minecraft/world/entity/Entity;DDDFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;)V a
	renderHitOutline (Lcom/mojang/blaze3d/vertex/PoseStack;Lcom/mojang/blaze3d/vertex/VertexConsumer;Lnet/minecraft/world/entity/Entity;DDDLnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V a
	renderLevel (Lcom/mojang/blaze3d/vertex/PoseStack;FJZLnet/minecraft/client/Camera;Lnet/minecraft/client/renderer/GameRenderer;Lnet/minecraft/client/renderer/LightTexture;Lcom/mojang/math/Matrix4f;)V a
	renderLineBox (Lcom/mojang/blaze3d/vertex/PoseStack;Lcom/mojang/blaze3d/vertex/VertexConsumer;DDDDDDFFFF)V a
	renderLineBox (Lcom/mojang/blaze3d/vertex/PoseStack;Lcom/mojang/blaze3d/vertex/VertexConsumer;DDDDDDFFFFFFF)V a
	renderLineBox (Lcom/mojang/blaze3d/vertex/PoseStack;Lcom/mojang/blaze3d/vertex/VertexConsumer;Lnet/minecraft/world/phys/AABB;FFFF)V a
	renderLineBox (Lcom/mojang/blaze3d/vertex/VertexConsumer;DDDDDDFFFF)V a
	renderShape (Lcom/mojang/blaze3d/vertex/PoseStack;Lcom/mojang/blaze3d/vertex/VertexConsumer;Lnet/minecraft/world/phys/shapes/VoxelShape;DDDFFFF)V b
	renderSky (Lcom/mojang/blaze3d/vertex/PoseStack;F)V a
	renderSnowAndRain (Lnet/minecraft/client/renderer/LightTexture;FDDD)V a
	renderVoxelShape (Lcom/mojang/blaze3d/vertex/PoseStack;Lcom/mojang/blaze3d/vertex/VertexConsumer;Lnet/minecraft/world/phys/shapes/VoxelShape;DDDFFFF)V a
	renderWorldBounds (Lnet/minecraft/client/Camera;)V c
	resetChunksToCompile ()V f
	resize (II)V a
	setBlockDirty (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/state/BlockState;)V a
	setBlockDirty (Lnet/minecraft/core/BlockPos;Z)V a
	setBlocksDirty (IIIIII)V a
	setLevel (Lnet/minecraft/client/multiplayer/ClientLevel;)V a
	setSectionDirty (III)V b
	setSectionDirty (IIIZ)V a
	setSectionDirtyWithNeighbors (III)V a
	setupRender (Lnet/minecraft/client/Camera;Lnet/minecraft/client/renderer/culling/Frustum;ZIZ)V a
	shouldShowEntityOutlines ()Z d
	tick ()V l
	tickRain (Lnet/minecraft/client/Camera;)V a
	updateGlobalBlockEntities (Ljava/util/Collection;Ljava/util/Collection;)V a
	vertex (Lcom/mojang/blaze3d/vertex/BufferBuilder;DDDDIDFF)V a
net/minecraft/client/renderer/LevelRenderer$RenderChunkInfo ebx$a
	chunk b
	directions d
	sourceDirection c
	step e
	hasDirection (Lnet/minecraft/core/Direction;)Z a
	setDirections (BLnet/minecraft/core/Direction;)V a
net/minecraft/client/renderer/LevelRenderer$TranparencyShaderException ebx$b
net/minecraft/client/renderer/LightTexture eby
	blockLightRedFlicker e
	lightPixels b
	lightTexture a
	lightTextureLocation c
	minecraft g
	renderer f
	updateLightTexture d
	block (I)I a
	getBrightness (Lnet/minecraft/world/level/Level;I)F a
	notGamma (F)F b
	pack (II)I a
	sky (I)I b
	tick ()V a
	turnOffLightLayer ()V b
	turnOnLightLayer ()V c
	updateLightTexture (F)V a
net/minecraft/client/renderer/MultiBufferSource ebz
	immediate (Lcom/mojang/blaze3d/vertex/BufferBuilder;)Lnet/minecraft/client/renderer/MultiBufferSource$BufferSource; a
	immediateWithBuffers (Ljava/util/Map;Lcom/mojang/blaze3d/vertex/BufferBuilder;)Lnet/minecraft/client/renderer/MultiBufferSource$BufferSource; a
net/minecraft/client/renderer/MultiBufferSource$BufferSource ebz$a
	builder a
	fixedBuffers b
	lastState c
	startedBuffers d
	endBatch ()V a
	endBatch (Lnet/minecraft/client/renderer/RenderType;)V a
	getBuilderRaw (Lnet/minecraft/client/renderer/RenderType;)Lcom/mojang/blaze3d/vertex/BufferBuilder; b
net/minecraft/client/renderer/OutlineBufferSource eca
	bufferSource a
	outlineBufferSource b
	teamA f
	teamB e
	teamG d
	teamR c
	endOutlineBatch ()V a
	setColor (IIII)V a
net/minecraft/client/renderer/OutlineBufferSource$EntityOutlineGenerator eca$a
	delegate g
	u k
	v l
	x h
	y i
	z j
	color (IIII)Lcom/mojang/blaze3d/vertex/VertexConsumer; a
	defaultColor (IIII)V b
	endVertex ()V d
	normal (FFF)Lcom/mojang/blaze3d/vertex/VertexConsumer; b
	overlayCoords (II)Lcom/mojang/blaze3d/vertex/VertexConsumer; a
	unsetDefaultColor ()V k
	uv (FF)Lcom/mojang/blaze3d/vertex/VertexConsumer; a
	uv2 (II)Lcom/mojang/blaze3d/vertex/VertexConsumer; b
	vertex (DDD)Lcom/mojang/blaze3d/vertex/VertexConsumer; a
	vertex (FFFFFFFFFIIFFF)V a
net/minecraft/client/renderer/PanoramaRenderer ecb
	cubeMap b
	minecraft a
	time c
	render (FF)V a
net/minecraft/client/renderer/PostChain ecc
	customRenderTargets e
	fullSizedTargets f
	lastStamp k
	name c
	passes d
	resourceManager b
	screenHeight i
	screenTarget a
	screenWidth h
	shaderOrthoMatrix g
	time j
	addPass (Ljava/lang/String;Lcom/mojang/blaze3d/pipeline/RenderTarget;Lcom/mojang/blaze3d/pipeline/RenderTarget;)Lnet/minecraft/client/renderer/PostPass; a
	addTempTarget (Ljava/lang/String;II)V a
	getName ()Ljava/lang/String; a
	getRenderTarget (Ljava/lang/String;)Lcom/mojang/blaze3d/pipeline/RenderTarget; b
	getTempTarget (Ljava/lang/String;)Lcom/mojang/blaze3d/pipeline/RenderTarget; a
	load (Lnet/minecraft/client/renderer/texture/TextureManager;Lnet/minecraft/resources/ResourceLocation;)V a
	parsePassNode (Lnet/minecraft/client/renderer/texture/TextureManager;Lcom/google/gson/JsonElement;)V a
	parseTargetNode (Lcom/google/gson/JsonElement;)V a
	parseUniformNode (Lcom/google/gson/JsonElement;)V b
	process (F)V a
	resize (II)V a
	updateOrthoMatrix ()V b
net/minecraft/client/renderer/PostPass ecd
	auxAssets d
	auxHeights g
	auxNames e
	auxWidths f
	effect c
	inTarget a
	outTarget b
	shaderOrthoMatrix h
	addAuxAsset (Ljava/lang/String;Ljava/lang/Object;II)V a
	getEffect ()Lnet/minecraft/client/renderer/EffectInstance; b
	getName ()Ljava/lang/String; a
	process (F)V a
	setOrthoMatrix (Lcom/mojang/math/Matrix4f;)V a
net/minecraft/client/renderer/Rect2i ece
	height d
	width c
	xPos a
	yPos b
	contains (II)Z b
	getHeight ()I d
	getWidth ()I c
	getX ()I a
	getY ()I b
	intersect (Lnet/minecraft/client/renderer/Rect2i;)Lnet/minecraft/client/renderer/Rect2i; a
	setHeight (I)V d
	setPosition (II)V a
	setWidth (I)V c
	setX (I)V a
	setY (I)V b
net/minecraft/client/renderer/RenderBuffers ecf
	bufferSource c
	crumblingBufferSource d
	fixedBufferPack a
	fixedBuffers b
	outlineBufferSource e
	bufferSource ()Lnet/minecraft/client/renderer/MultiBufferSource$BufferSource; b
	crumblingBufferSource ()Lnet/minecraft/client/renderer/MultiBufferSource$BufferSource; c
	fixedBufferPack ()Lnet/minecraft/client/renderer/ChunkBufferBuilderPack; a
	outlineBufferSource ()Lnet/minecraft/client/renderer/OutlineBufferSource; d
	put (Lit/unimi/dsi/fastutil/objects/Object2ObjectLinkedOpenHashMap;Lnet/minecraft/client/renderer/RenderType;)V a
net/minecraft/client/renderer/RenderStateShard ecg
	ADDITIVE_TRANSPARENCY c
	BLACK_FOG N
	BLOCK_SHEET o
	BLOCK_SHEET_MIPPED n
	CLOUDS_TARGET T
	COLOR_DEPTH_WRITE F
	COLOR_WRITE G
	CRUMBLING_TRANSPARENCY g
	CULL A
	DEFAULT_ALPHA j
	DEFAULT_LINE V
	DEFAULT_TEXTURING q
	DEPTH_WRITE H
	DIFFUSE_LIGHTING y
	ENTITY_GLINT_TEXTURING t
	EQUAL_DEPTH_TEST D
	FLAT_SHADE l
	FOG M
	GLINT_DIRECT_TRANSPARENCY f
	GLINT_TEXTURING s
	GLINT_TRANSPARENCY e
	ITEM_ENTITY_TARGET U
	LEQUAL_DEPTH_TEST E
	LIGHTMAP u
	LIGHTNING_TRANSPARENCY d
	MAIN_TARGET O
	MIDWAY_ALPHA k
	NO_ALPHA i
	NO_CULL B
	NO_DEPTH_TEST C
	NO_DIFFUSE_LIGHTING z
	NO_FOG L
	NO_LAYERING I
	NO_LIGHTMAP v
	NO_OVERLAY x
	NO_TEXTURE p
	NO_TRANSPARENCY b
	OUTLINE_TARGET P
	OUTLINE_TEXTURING r
	OVERLAY w
	PARTICLES_TARGET R
	POLYGON_OFFSET_LAYERING J
	SMOOTH_SHADE m
	TRANSLUCENT_TARGET Q
	TRANSLUCENT_TRANSPARENCY h
	VIEW_OFFSET_Z_LAYERING K
	WEATHER_TARGET S
	clearState X
	name a
	setupState W
	clearRenderState ()V b
	setupGlintTexturing (F)V a
	setupRenderState ()V a
net/minecraft/client/renderer/RenderStateShard$AlphaStateShard ecg$a
	cutoff W
net/minecraft/client/renderer/RenderStateShard$BooleanStateShard ecg$b
	enabled W
net/minecraft/client/renderer/RenderStateShard$CullStateShard ecg$c
net/minecraft/client/renderer/RenderStateShard$DepthTestStateShard ecg$d
	function X
	functionName W
net/minecraft/client/renderer/RenderStateShard$DiffuseLightingStateShard ecg$e
net/minecraft/client/renderer/RenderStateShard$FogStateShard ecg$f
net/minecraft/client/renderer/RenderStateShard$LayeringStateShard ecg$g
net/minecraft/client/renderer/RenderStateShard$LightmapStateShard ecg$h
net/minecraft/client/renderer/RenderStateShard$LineStateShard ecg$i
	width W
net/minecraft/client/renderer/RenderStateShard$OffsetTexturingStateShard ecg$j
	uOffset W
	vOffset X
net/minecraft/client/renderer/RenderStateShard$OutputStateShard ecg$k
net/minecraft/client/renderer/RenderStateShard$OverlayStateShard ecg$l
net/minecraft/client/renderer/RenderStateShard$PortalTexturingStateShard ecg$m
	iteration W
net/minecraft/client/renderer/RenderStateShard$ShadeModelStateShard ecg$n
	smooth W
net/minecraft/client/renderer/RenderStateShard$TextureStateShard ecg$o
	blur X
	mipmap Y
	texture W
	texture ()Ljava/util/Optional; c
net/minecraft/client/renderer/RenderStateShard$TexturingStateShard ecg$p
net/minecraft/client/renderer/RenderStateShard$TransparencyStateShard ecg$q
net/minecraft/client/renderer/RenderStateShard$WriteMaskStateShard ecg$r
	writeColor W
	writeDepth X
net/minecraft/client/renderer/RenderType ech
	ARMOR_ENTITY_GLINT ag
	ARMOR_GLINT af
	CUTOUT Z
	CUTOUT_MIPPED Y
	ENTITY_GLINT aj
	ENTITY_GLINT_DIRECT ak
	GLINT ah
	GLINT_DIRECT ai
	LEASH ad
	LIGHTNING al
	LINES W
	SOLID X
	TRANSLUCENT aa
	TRANSLUCENT_MOVING_BLOCK ab
	TRANSLUCENT_NO_CRUMBLING ac
	TRIPWIRE am
	WATER_MASK ae
	affectsCrumbling aq
	asOptional as
	bufferSize ap
	format an
	mode ao
	sortOnUpload ar
	affectsCrumbling ()Z z
	armorCutoutNoCull (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/client/renderer/RenderType; a
	armorEntityGlint ()Lnet/minecraft/client/renderer/RenderType; l
	armorGlint ()Lnet/minecraft/client/renderer/RenderType; k
	asOptional ()Ljava/util/Optional; A
	beaconBeam (Lnet/minecraft/resources/ResourceLocation;Z)Lnet/minecraft/client/renderer/RenderType; d
	bufferSize ()I u
	chunkBufferLayers ()Ljava/util/List; t
	create (Ljava/lang/String;Lcom/mojang/blaze3d/vertex/VertexFormat;IILnet/minecraft/client/renderer/RenderType$CompositeState;)Lnet/minecraft/client/renderer/RenderType$CompositeRenderType; a
	create (Ljava/lang/String;Lcom/mojang/blaze3d/vertex/VertexFormat;IIZZLnet/minecraft/client/renderer/RenderType$CompositeState;)Lnet/minecraft/client/renderer/RenderType$CompositeRenderType; a
	crumbling (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/client/renderer/RenderType; o
	cutout ()Lnet/minecraft/client/renderer/RenderType; e
	cutoutMipped ()Lnet/minecraft/client/renderer/RenderType; d
	dragonExplosionAlpha (Lnet/minecraft/resources/ResourceLocation;F)Lnet/minecraft/client/renderer/RenderType; a
	end (Lcom/mojang/blaze3d/vertex/BufferBuilder;III)V a
	endPortal (I)Lnet/minecraft/client/renderer/RenderType; a
	energySwirl (Lnet/minecraft/resources/ResourceLocation;FF)Lnet/minecraft/client/renderer/RenderType; a
	entityCutout (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/client/renderer/RenderType; c
	entityCutoutNoCull (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/client/renderer/RenderType; d
	entityCutoutNoCull (Lnet/minecraft/resources/ResourceLocation;Z)Lnet/minecraft/client/renderer/RenderType; a
	entityCutoutNoCullZOffset (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/client/renderer/RenderType; e
	entityCutoutNoCullZOffset (Lnet/minecraft/resources/ResourceLocation;Z)Lnet/minecraft/client/renderer/RenderType; b
	entityDecal (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/client/renderer/RenderType; j
	entityGlint ()Lnet/minecraft/client/renderer/RenderType; o
	entityGlintDirect ()Lnet/minecraft/client/renderer/RenderType; p
	entityNoOutline (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/client/renderer/RenderType; k
	entityShadow (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/client/renderer/RenderType; l
	entitySmoothCutout (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/client/renderer/RenderType; i
	entitySolid (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/client/renderer/RenderType; b
	entityTranslucent (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/client/renderer/RenderType; h
	entityTranslucent (Lnet/minecraft/resources/ResourceLocation;Z)Lnet/minecraft/client/renderer/RenderType; c
	entityTranslucentCull (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/client/renderer/RenderType; g
	eyes (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/client/renderer/RenderType; m
	format ()Lcom/mojang/blaze3d/vertex/VertexFormat; v
	glint ()Lnet/minecraft/client/renderer/RenderType; m
	glintDirect ()Lnet/minecraft/client/renderer/RenderType; n
	isOutline ()Z y
	itemEntityTranslucentCull (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/client/renderer/RenderType; f
	leash ()Lnet/minecraft/client/renderer/RenderType; i
	lightning ()Lnet/minecraft/client/renderer/RenderType; q
	lines ()Lnet/minecraft/client/renderer/RenderType; s
	mode ()I w
	outline ()Ljava/util/Optional; x
	outline (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/client/renderer/RenderType; n
	outline (Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/client/renderer/RenderStateShard$CullStateShard;)Lnet/minecraft/client/renderer/RenderType; a
	solid ()Lnet/minecraft/client/renderer/RenderType; c
	text (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/client/renderer/RenderType; p
	textSeeThrough (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/client/renderer/RenderType; q
	translucent ()Lnet/minecraft/client/renderer/RenderType; f
	translucentMovingBlock ()Lnet/minecraft/client/renderer/RenderType; g
	translucentMovingBlockState ()Lnet/minecraft/client/renderer/RenderType$CompositeState; C
	translucentNoCrumbling ()Lnet/minecraft/client/renderer/RenderType; h
	translucentState ()Lnet/minecraft/client/renderer/RenderType$CompositeState; B
	tripwire ()Lnet/minecraft/client/renderer/RenderType; r
	tripwireState ()Lnet/minecraft/client/renderer/RenderType$CompositeState; D
	waterMask ()Lnet/minecraft/client/renderer/RenderType; j
net/minecraft/client/renderer/RenderType$CompositeRenderType ech$a
	INSTANCES X
	hashCode Z
	isOutline ab
	outline aa
	state Y
	isOutline ()Z y
	memoize (Ljava/lang/String;Lcom/mojang/blaze3d/vertex/VertexFormat;IIZZLnet/minecraft/client/renderer/RenderType$CompositeState;)Lnet/minecraft/client/renderer/RenderType$CompositeRenderType; c
	outline ()Ljava/util/Optional; x
	state ()Lnet/minecraft/client/renderer/RenderType$CompositeState; B
net/minecraft/client/renderer/RenderType$CompositeRenderType$EqualsStrategy ech$a$a
	$VALUES b
	INSTANCE a
	equals (Lnet/minecraft/client/renderer/RenderType$CompositeRenderType;Lnet/minecraft/client/renderer/RenderType$CompositeRenderType;)Z a
	hashCode (Lnet/minecraft/client/renderer/RenderType$CompositeRenderType;)I a
net/minecraft/client/renderer/RenderType$CompositeState ech$b
	alphaState e
	cullState g
	depthTestState f
	diffuseLightingState c
	fogState j
	layeringState k
	lightmapState h
	lineState o
	outlineProperty p
	outputState l
	overlayState i
	shadeModelState d
	states q
	textureState a
	texturingState m
	transparencyState b
	writeMaskState n
	builder ()Lnet/minecraft/client/renderer/RenderType$CompositeState$CompositeStateBuilder; a
net/minecraft/client/renderer/RenderType$CompositeState$CompositeStateBuilder ech$b$a
	alphaState e
	cullState g
	depthTestState f
	diffuseLightingState c
	fogState j
	layeringState k
	lightmapState h
	lineState o
	outputState l
	overlayState i
	shadeModelState d
	textureState a
	texturingState m
	transparencyState b
	writeMaskState n
	createCompositeState (Lnet/minecraft/client/renderer/RenderType$OutlineProperty;)Lnet/minecraft/client/renderer/RenderType$CompositeState; a
	createCompositeState (Z)Lnet/minecraft/client/renderer/RenderType$CompositeState; a
	setAlphaState (Lnet/minecraft/client/renderer/RenderStateShard$AlphaStateShard;)Lnet/minecraft/client/renderer/RenderType$CompositeState$CompositeStateBuilder; a
	setCullState (Lnet/minecraft/client/renderer/RenderStateShard$CullStateShard;)Lnet/minecraft/client/renderer/RenderType$CompositeState$CompositeStateBuilder; a
	setDepthTestState (Lnet/minecraft/client/renderer/RenderStateShard$DepthTestStateShard;)Lnet/minecraft/client/renderer/RenderType$CompositeState$CompositeStateBuilder; a
	setDiffuseLightingState (Lnet/minecraft/client/renderer/RenderStateShard$DiffuseLightingStateShard;)Lnet/minecraft/client/renderer/RenderType$CompositeState$CompositeStateBuilder; a
	setFogState (Lnet/minecraft/client/renderer/RenderStateShard$FogStateShard;)Lnet/minecraft/client/renderer/RenderType$CompositeState$CompositeStateBuilder; a
	setLayeringState (Lnet/minecraft/client/renderer/RenderStateShard$LayeringStateShard;)Lnet/minecraft/client/renderer/RenderType$CompositeState$CompositeStateBuilder; a
	setLightmapState (Lnet/minecraft/client/renderer/RenderStateShard$LightmapStateShard;)Lnet/minecraft/client/renderer/RenderType$CompositeState$CompositeStateBuilder; a
	setLineState (Lnet/minecraft/client/renderer/RenderStateShard$LineStateShard;)Lnet/minecraft/client/renderer/RenderType$CompositeState$CompositeStateBuilder; a
	setOutputState (Lnet/minecraft/client/renderer/RenderStateShard$OutputStateShard;)Lnet/minecraft/client/renderer/RenderType$CompositeState$CompositeStateBuilder; a
	setOverlayState (Lnet/minecraft/client/renderer/RenderStateShard$OverlayStateShard;)Lnet/minecraft/client/renderer/RenderType$CompositeState$CompositeStateBuilder; a
	setShadeModelState (Lnet/minecraft/client/renderer/RenderStateShard$ShadeModelStateShard;)Lnet/minecraft/client/renderer/RenderType$CompositeState$CompositeStateBuilder; a
	setTextureState (Lnet/minecraft/client/renderer/RenderStateShard$TextureStateShard;)Lnet/minecraft/client/renderer/RenderType$CompositeState$CompositeStateBuilder; a
	setTexturingState (Lnet/minecraft/client/renderer/RenderStateShard$TexturingStateShard;)Lnet/minecraft/client/renderer/RenderType$CompositeState$CompositeStateBuilder; a
	setTransparencyState (Lnet/minecraft/client/renderer/RenderStateShard$TransparencyStateShard;)Lnet/minecraft/client/renderer/RenderType$CompositeState$CompositeStateBuilder; a
	setWriteMaskState (Lnet/minecraft/client/renderer/RenderStateShard$WriteMaskStateShard;)Lnet/minecraft/client/renderer/RenderType$CompositeState$CompositeStateBuilder; a
net/minecraft/client/renderer/RenderType$OutlineProperty ech$c
	$VALUES e
	AFFECTS_OUTLINE c
	IS_OUTLINE b
	NONE a
	name d
net/minecraft/client/renderer/RunningTrimmedMean eci
	count b
	cursor c
	values a
	registerValueAndGetMean (J)J a
net/minecraft/client/renderer/ScreenEffectRenderer ecj
	UNDERWATER_LOCATION a
	getViewBlockingState (Lnet/minecraft/world/entity/player/Player;)Lnet/minecraft/world/level/block/state/BlockState; a
	renderFire (Lnet/minecraft/client/Minecraft;Lcom/mojang/blaze3d/vertex/PoseStack;)V c
	renderScreenEffect (Lnet/minecraft/client/Minecraft;Lcom/mojang/blaze3d/vertex/PoseStack;)V a
	renderTex (Lnet/minecraft/client/Minecraft;Lnet/minecraft/client/renderer/texture/TextureAtlasSprite;Lcom/mojang/blaze3d/vertex/PoseStack;)V a
	renderWater (Lnet/minecraft/client/Minecraft;Lcom/mojang/blaze3d/vertex/PoseStack;)V b
net/minecraft/client/renderer/Sheets eck
	BANNER_SHEET c
	BANNER_SHEET_TYPE w
	BED_SHEET b
	BED_SHEET_TYPE v
	BED_TEXTURES j
	CHEST_LOCATION q
	CHEST_LOCATION_LEFT r
	CHEST_LOCATION_RIGHT s
	CHEST_SHEET f
	CHEST_SHEET_TYPE z
	CHEST_TRAP_LOCATION k
	CHEST_TRAP_LOCATION_LEFT l
	CHEST_TRAP_LOCATION_RIGHT m
	CHEST_XMAS_LOCATION n
	CHEST_XMAS_LOCATION_LEFT o
	CHEST_XMAS_LOCATION_RIGHT p
	CUTOUT_BLOCK_SHEET B
	DEFAULT_SHULKER_TEXTURE_LOCATION g
	ENDER_CHEST_LOCATION t
	SHIELD_SHEET d
	SHIELD_SHEET_TYPE x
	SHULKER_BOX_SHEET_TYPE u
	SHULKER_SHEET a
	SHULKER_TEXTURE_LOCATION h
	SIGN_MATERIALS i
	SIGN_SHEET e
	SIGN_SHEET_TYPE y
	SOLID_BLOCK_SHEET A
	TRANSLUCENT_CULL_BLOCK_SHEET D
	TRANSLUCENT_ITEM_CULL_BLOCK_SHEET C
	bannerSheet ()Lnet/minecraft/client/renderer/RenderType; a
	bedSheet ()Lnet/minecraft/client/renderer/RenderType; c
	chestMaterial (Ljava/lang/String;)Lnet/minecraft/client/resources/model/Material; a
	chestSheet ()Lnet/minecraft/client/renderer/RenderType; f
	chooseMaterial (Lnet/minecraft/world/level/block/entity/BlockEntity;Lnet/minecraft/world/level/block/state/properties/ChestType;Z)Lnet/minecraft/client/resources/model/Material; a
	chooseMaterial (Lnet/minecraft/world/level/block/state/properties/ChestType;Lnet/minecraft/client/resources/model/Material;Lnet/minecraft/client/resources/model/Material;Lnet/minecraft/client/resources/model/Material;)Lnet/minecraft/client/resources/model/Material; a
	cutoutBlockSheet ()Lnet/minecraft/client/renderer/RenderType; h
	getAllMaterials (Ljava/util/function/Consumer;)V a
	shieldSheet ()Lnet/minecraft/client/renderer/RenderType; b
	shulkerBoxSheet ()Lnet/minecraft/client/renderer/RenderType; d
	signSheet ()Lnet/minecraft/client/renderer/RenderType; e
	signTexture (Lnet/minecraft/world/level/block/state/properties/WoodType;)Lnet/minecraft/client/resources/model/Material; a
	solidBlockSheet ()Lnet/minecraft/client/renderer/RenderType; g
	translucentCullBlockSheet ()Lnet/minecraft/client/renderer/RenderType; j
	translucentItemSheet ()Lnet/minecraft/client/renderer/RenderType; i
net/minecraft/client/renderer/SpriteCoordinateExpander ecl
	delegate a
	sprite b
	color (IIII)Lcom/mojang/blaze3d/vertex/VertexConsumer; a
	defaultColor (IIII)V b
	endVertex ()V d
	normal (FFF)Lcom/mojang/blaze3d/vertex/VertexConsumer; b
	overlayCoords (II)Lcom/mojang/blaze3d/vertex/VertexConsumer; a
	unsetDefaultColor ()V k
	uv (FF)Lcom/mojang/blaze3d/vertex/VertexConsumer; a
	uv2 (II)Lcom/mojang/blaze3d/vertex/VertexConsumer; b
	vertex (DDD)Lcom/mojang/blaze3d/vertex/VertexConsumer; a
	vertex (FFFFFFFFFIIFFF)V a
net/minecraft/client/renderer/ViewArea ecm
	chunkGridSizeX d
	chunkGridSizeY c
	chunkGridSizeZ e
	chunks f
	level b
	levelRenderer a
	createChunks (Lnet/minecraft/client/renderer/chunk/ChunkRenderDispatcher;)V a
	getChunkIndex (III)I a
	getRenderChunkAt (Lnet/minecraft/core/BlockPos;)Lnet/minecraft/client/renderer/chunk/ChunkRenderDispatcher$RenderChunk; a
	releaseAllBuffers ()V a
	repositionCamera (DD)V a
	setDirty (IIIZ)V a
	setViewDistance (I)V a
net/minecraft/client/renderer/VirtualScreen ecn
	minecraft a
	screenManager b
	newWindow (Lcom/mojang/blaze3d/platform/DisplayData;Ljava/lang/String;Ljava/lang/String;)Lcom/mojang/blaze3d/platform/Window; a
net/minecraft/client/renderer/block/BlockModelShaper ecp
	modelByStateCache a
	modelManager b
	getBlockModel (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/client/resources/model/BakedModel; b
	getModelManager ()Lnet/minecraft/client/resources/model/ModelManager; a
	getParticleIcon (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/client/renderer/texture/TextureAtlasSprite; a
	getValue (Lnet/minecraft/world/level/block/state/properties/Property;Ljava/lang/Comparable;)Ljava/lang/String; a
	rebuildCache ()V b
	statePropertiesToString (Ljava/util/Map;)Ljava/lang/String; a
	stateToModelLocation (Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/client/resources/model/ModelResourceLocation; a
	stateToModelLocation (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/client/resources/model/ModelResourceLocation; c
net/minecraft/client/renderer/block/BlockRenderDispatcher ecq
	blockColors e
	blockModelShaper a
	liquidBlockRenderer c
	modelRenderer b
	random d
	getBlockModel (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/client/resources/model/BakedModel; a
	getBlockModelShaper ()Lnet/minecraft/client/renderer/block/BlockModelShaper; a
	getModelRenderer ()Lnet/minecraft/client/renderer/block/ModelBlockRenderer; b
	onResourceManagerReload (Lnet/minecraft/server/packs/resources/ResourceManager;)V a
	renderBatched (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/BlockAndTintGetter;Lcom/mojang/blaze3d/vertex/PoseStack;Lcom/mojang/blaze3d/vertex/VertexConsumer;ZLjava/util/Random;)Z a
	renderBreakingTexture (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/BlockAndTintGetter;Lcom/mojang/blaze3d/vertex/PoseStack;Lcom/mojang/blaze3d/vertex/VertexConsumer;)V a
	renderLiquid (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/BlockAndTintGetter;Lcom/mojang/blaze3d/vertex/VertexConsumer;Lnet/minecraft/world/level/material/FluidState;)Z a
	renderSingleBlock (Lnet/minecraft/world/level/block/state/BlockState;Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;II)V a
net/minecraft/client/renderer/block/LiquidBlockRenderer ecr
	lavaIcons a
	waterIcons b
	waterOverlay c
	getLightColor (Lnet/minecraft/world/level/BlockAndTintGetter;Lnet/minecraft/core/BlockPos;)I a
	getWaterHeight (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/material/Fluid;)F a
	isFaceOccludedByNeighbor (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;F)Z a
	isFaceOccludedBySelf (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;)Z a
	isFaceOccludedByState (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/Direction;FLnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Z a
	isNeighborSameFluid (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/material/FluidState;)Z a
	setupSprites ()V a
	shouldRenderFace (Lnet/minecraft/world/level/BlockAndTintGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/material/FluidState;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;)Z a
	tesselate (Lnet/minecraft/world/level/BlockAndTintGetter;Lnet/minecraft/core/BlockPos;Lcom/mojang/blaze3d/vertex/VertexConsumer;Lnet/minecraft/world/level/material/FluidState;)Z a
	vertex (Lcom/mojang/blaze3d/vertex/VertexConsumer;DDDFFFFFI)V a
net/minecraft/client/renderer/block/ModelBlockRenderer ecs
	CACHE b
	blockColors a
	calculateShape (Lnet/minecraft/world/level/BlockAndTintGetter;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/BlockPos;[ILnet/minecraft/core/Direction;[FLjava/util/BitSet;)V a
	clearCache ()V b
	enableCaching ()V a
	putQuadData (Lnet/minecraft/world/level/BlockAndTintGetter;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/BlockPos;Lcom/mojang/blaze3d/vertex/VertexConsumer;Lcom/mojang/blaze3d/vertex/PoseStack$Pose;Lnet/minecraft/client/renderer/block/model/BakedQuad;FFFFIIIII)V a
	renderModel (Lcom/mojang/blaze3d/vertex/PoseStack$Pose;Lcom/mojang/blaze3d/vertex/VertexConsumer;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/client/resources/model/BakedModel;FFFII)V a
	renderModelFaceAO (Lnet/minecraft/world/level/BlockAndTintGetter;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/BlockPos;Lcom/mojang/blaze3d/vertex/PoseStack;Lcom/mojang/blaze3d/vertex/VertexConsumer;Ljava/util/List;[FLjava/util/BitSet;Lnet/minecraft/client/renderer/block/ModelBlockRenderer$AmbientOcclusionFace;I)V a
	renderModelFaceFlat (Lnet/minecraft/world/level/BlockAndTintGetter;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/BlockPos;IIZLcom/mojang/blaze3d/vertex/PoseStack;Lcom/mojang/blaze3d/vertex/VertexConsumer;Ljava/util/List;Ljava/util/BitSet;)V a
	renderQuadList (Lcom/mojang/blaze3d/vertex/PoseStack$Pose;Lcom/mojang/blaze3d/vertex/VertexConsumer;FFFLjava/util/List;II)V a
	tesselateBlock (Lnet/minecraft/world/level/BlockAndTintGetter;Lnet/minecraft/client/resources/model/BakedModel;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/BlockPos;Lcom/mojang/blaze3d/vertex/PoseStack;Lcom/mojang/blaze3d/vertex/VertexConsumer;ZLjava/util/Random;JI)Z a
	tesselateWithAO (Lnet/minecraft/world/level/BlockAndTintGetter;Lnet/minecraft/client/resources/model/BakedModel;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/BlockPos;Lcom/mojang/blaze3d/vertex/PoseStack;Lcom/mojang/blaze3d/vertex/VertexConsumer;ZLjava/util/Random;JI)Z b
	tesselateWithoutAO (Lnet/minecraft/world/level/BlockAndTintGetter;Lnet/minecraft/client/resources/model/BakedModel;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/BlockPos;Lcom/mojang/blaze3d/vertex/PoseStack;Lcom/mojang/blaze3d/vertex/VertexConsumer;ZLjava/util/Random;JI)Z c
net/minecraft/client/renderer/block/ModelBlockRenderer$AdjacencyInfo ecs$a
	$VALUES n
	BY_FACING m
	DOWN a
	EAST f
	NORTH c
	SOUTH d
	UP b
	WEST e
	corners g
	doNonCubicWeight h
	vert0Weights i
	vert1Weights j
	vert2Weights k
	vert3Weights l
	fromFacing (Lnet/minecraft/core/Direction;)Lnet/minecraft/client/renderer/block/ModelBlockRenderer$AdjacencyInfo; a
net/minecraft/client/renderer/block/ModelBlockRenderer$AmbientOcclusionFace ecs$b
	brightness b
	lightmap c
	blend (IIII)I a
	blend (IIIIFFFF)I a
	calculate (Lnet/minecraft/world/level/BlockAndTintGetter;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;[FLjava/util/BitSet;Z)V a
net/minecraft/client/renderer/block/ModelBlockRenderer$AmbientVertexRemap ecs$c
	$VALUES l
	BY_FACING k
	DOWN a
	EAST f
	NORTH c
	SOUTH d
	UP b
	WEST e
	vert0 g
	vert1 h
	vert2 i
	vert3 j
	fromFacing (Lnet/minecraft/core/Direction;)Lnet/minecraft/client/renderer/block/ModelBlockRenderer$AmbientVertexRemap; a
net/minecraft/client/renderer/block/ModelBlockRenderer$Cache ecs$d
	brightnessCache c
	colorCache b
	enabled a
	disable ()V b
	enable ()V a
	getLightColor (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockAndTintGetter;Lnet/minecraft/core/BlockPos;)I a
	getShadeBrightness (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockAndTintGetter;Lnet/minecraft/core/BlockPos;)F b
net/minecraft/client/renderer/block/ModelBlockRenderer$SizeInfo ecs$e
	$VALUES n
	DOWN a
	EAST f
	FLIP_DOWN g
	FLIP_EAST l
	FLIP_NORTH i
	FLIP_SOUTH j
	FLIP_UP h
	FLIP_WEST k
	NORTH c
	SOUTH d
	UP b
	WEST e
	shape m
net/minecraft/client/renderer/block/model/BakedQuad ect
	direction c
	shade e
	sprite d
	tintIndex b
	vertices a
	getDirection ()Lnet/minecraft/core/Direction; e
	getSprite ()Lnet/minecraft/client/renderer/texture/TextureAtlasSprite; a
	getTintIndex ()I d
	getVertices ()[I b
	isShade ()Z f
	isTinted ()Z c
net/minecraft/client/renderer/block/model/BlockElement ecu
	faces c
	from a
	rotation d
	shade e
	to b
	fillUvs ()V a
	uvsByFace (Lnet/minecraft/core/Direction;)[F a
net/minecraft/client/renderer/block/model/BlockElement$Deserializer ecu$a
	deserialize (Lcom/google/gson/JsonElement;Ljava/lang/reflect/Type;Lcom/google/gson/JsonDeserializationContext;)Lnet/minecraft/client/renderer/block/model/BlockElement; a
	filterNullFromFaces (Lcom/google/gson/JsonDeserializationContext;Lcom/google/gson/JsonObject;)Ljava/util/Map; b
	getAngle (Lcom/google/gson/JsonObject;)F b
	getAxis (Lcom/google/gson/JsonObject;)Lnet/minecraft/core/Direction$Axis; c
	getFaces (Lcom/google/gson/JsonDeserializationContext;Lcom/google/gson/JsonObject;)Ljava/util/Map; a
	getFacing (Ljava/lang/String;)Lnet/minecraft/core/Direction; a
	getFrom (Lcom/google/gson/JsonObject;)Lcom/mojang/math/Vector3f; e
	getRotation (Lcom/google/gson/JsonObject;)Lnet/minecraft/client/renderer/block/model/BlockElementRotation; a
	getTo (Lcom/google/gson/JsonObject;)Lcom/mojang/math/Vector3f; d
	getVector3f (Lcom/google/gson/JsonObject;Ljava/lang/String;)Lcom/mojang/math/Vector3f; a
net/minecraft/client/renderer/block/model/BlockElementFace ecv
	cullForDirection a
	texture c
	tintIndex b
	uv d
net/minecraft/client/renderer/block/model/BlockElementFace$Deserializer ecv$a
	deserialize (Lcom/google/gson/JsonElement;Ljava/lang/reflect/Type;Lcom/google/gson/JsonDeserializationContext;)Lnet/minecraft/client/renderer/block/model/BlockElementFace; a
	getCullFacing (Lcom/google/gson/JsonObject;)Lnet/minecraft/core/Direction; c
	getTexture (Lcom/google/gson/JsonObject;)Ljava/lang/String; b
	getTintIndex (Lcom/google/gson/JsonObject;)I a
net/minecraft/client/renderer/block/model/BlockElementRotation ecw
	angle c
	axis b
	origin a
	rescale d
net/minecraft/client/renderer/block/model/BlockFaceUV ecx
	rotation b
	uvs a
	getReverseIndex (I)I c
	getShiftedIndex (I)I d
	getU (I)F a
	getV (I)F b
	setMissingUv ([F)V a
net/minecraft/client/renderer/block/model/BlockFaceUV$Deserializer ecx$a
	deserialize (Lcom/google/gson/JsonElement;Ljava/lang/reflect/Type;Lcom/google/gson/JsonDeserializationContext;)Lnet/minecraft/client/renderer/block/model/BlockFaceUV; a
	getRotation (Lcom/google/gson/JsonObject;)I a
	getUVs (Lcom/google/gson/JsonObject;)[F b
net/minecraft/client/renderer/block/model/BlockModel ecy
	FACE_BAKERY g
	GSON a
	LOGGER f
	elements h
	guiLight i
	hasAmbientOcclusion j
	name b
	overrides l
	parent d
	parentLocation e
	textureMap c
	transforms k
	bake (Lnet/minecraft/client/resources/model/ModelBakery;Ljava/util/function/Function;Lnet/minecraft/client/resources/model/ModelState;Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/client/resources/model/BakedModel; a
	bake (Lnet/minecraft/client/resources/model/ModelBakery;Lnet/minecraft/client/renderer/block/model/BlockModel;Ljava/util/function/Function;Lnet/minecraft/client/resources/model/ModelState;Lnet/minecraft/resources/ResourceLocation;Z)Lnet/minecraft/client/resources/model/BakedModel; a
	bakeFace (Lnet/minecraft/client/renderer/block/model/BlockElement;Lnet/minecraft/client/renderer/block/model/BlockElementFace;Lnet/minecraft/client/renderer/texture/TextureAtlasSprite;Lnet/minecraft/core/Direction;Lnet/minecraft/client/resources/model/ModelState;Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/client/renderer/block/model/BakedQuad; a
	findTextureEntry (Ljava/lang/String;)Lcom/mojang/datafixers/util/Either; e
	fromStream (Ljava/io/Reader;)Lnet/minecraft/client/renderer/block/model/BlockModel; a
	fromString (Ljava/lang/String;)Lnet/minecraft/client/renderer/block/model/BlockModel; a
	getDependencies ()Ljava/util/Collection; f
	getElements ()Ljava/util/List; a
	getGuiLight ()Lnet/minecraft/client/renderer/block/model/BlockModel$GuiLight; c
	getItemOverrides (Lnet/minecraft/client/resources/model/ModelBakery;Lnet/minecraft/client/renderer/block/model/BlockModel;)Lnet/minecraft/client/renderer/block/model/ItemOverrides; a
	getMaterial (Ljava/lang/String;)Lnet/minecraft/client/resources/model/Material; c
	getMaterials (Ljava/util/function/Function;Ljava/util/Set;)Ljava/util/Collection; a
	getOverrides ()Ljava/util/List; e
	getRootModel ()Lnet/minecraft/client/renderer/block/model/BlockModel; g
	getTransform (Lnet/minecraft/client/renderer/block/model/ItemTransforms$TransformType;)Lnet/minecraft/client/renderer/block/model/ItemTransform; a
	getTransforms ()Lnet/minecraft/client/renderer/block/model/ItemTransforms; h
	hasAmbientOcclusion ()Z b
	hasTexture (Ljava/lang/String;)Z b
	isResolved ()Z d
	isTextureReference (Ljava/lang/String;)Z f
net/minecraft/client/renderer/block/model/BlockModel$Deserializer ecy$a
	deserialize (Lcom/google/gson/JsonElement;Ljava/lang/reflect/Type;Lcom/google/gson/JsonDeserializationContext;)Lnet/minecraft/client/renderer/block/model/BlockModel; a
	getAmbientOcclusion (Lcom/google/gson/JsonObject;)Z a
	getElements (Lcom/google/gson/JsonDeserializationContext;Lcom/google/gson/JsonObject;)Ljava/util/List; b
	getOverrides (Lcom/google/gson/JsonDeserializationContext;Lcom/google/gson/JsonObject;)Ljava/util/List; a
	getParentName (Lcom/google/gson/JsonObject;)Ljava/lang/String; c
	getTextureMap (Lcom/google/gson/JsonObject;)Ljava/util/Map; b
	parseTextureLocationOrReference (Lnet/minecraft/resources/ResourceLocation;Ljava/lang/String;)Lcom/mojang/datafixers/util/Either; a
net/minecraft/client/renderer/block/model/BlockModel$GuiLight ecy$b
	$VALUES d
	FRONT a
	SIDE b
	name c
	getByName (Ljava/lang/String;)Lnet/minecraft/client/renderer/block/model/BlockModel$GuiLight; a
	lightLikeBlock ()Z a
net/minecraft/client/renderer/block/model/BlockModel$LoopException ecy$c
net/minecraft/client/renderer/block/model/BlockModelDefinition ecz
	multiPart b
	variants a
	fromStream (Lnet/minecraft/client/renderer/block/model/BlockModelDefinition$Context;Ljava/io/Reader;)Lnet/minecraft/client/renderer/block/model/BlockModelDefinition; a
	getMultiPart ()Lnet/minecraft/client/renderer/block/model/multipart/MultiPart; d
	getMultiVariants ()Ljava/util/Set; b
	getVariant (Ljava/lang/String;)Lnet/minecraft/client/renderer/block/model/MultiVariant; b
	getVariants ()Ljava/util/Map; a
	hasVariant (Ljava/lang/String;)Z a
	isMultiPart ()Z c
net/minecraft/client/renderer/block/model/BlockModelDefinition$Context ecz$a
	definition b
	gson a
	getDefinition ()Lnet/minecraft/world/level/block/state/StateDefinition; a
	setDefinition (Lnet/minecraft/world/level/block/state/StateDefinition;)V a
net/minecraft/client/renderer/block/model/BlockModelDefinition$Deserializer ecz$b
	deserialize (Lcom/google/gson/JsonElement;Ljava/lang/reflect/Type;Lcom/google/gson/JsonDeserializationContext;)Lnet/minecraft/client/renderer/block/model/BlockModelDefinition; a
	getMultiPart (Lcom/google/gson/JsonDeserializationContext;Lcom/google/gson/JsonObject;)Lnet/minecraft/client/renderer/block/model/multipart/MultiPart; b
	getVariants (Lcom/google/gson/JsonDeserializationContext;Lcom/google/gson/JsonObject;)Ljava/util/Map; a
net/minecraft/client/renderer/block/model/BlockModelDefinition$MissingVariantException ecz$c
net/minecraft/client/renderer/block/model/FaceBakery eda
	RESCALE_22_5 a
	RESCALE_45 b
	applyElementRotation (Lcom/mojang/math/Vector3f;Lnet/minecraft/client/renderer/block/model/BlockElementRotation;)V a
	applyModelRotation (Lcom/mojang/math/Vector3f;Lcom/mojang/math/Transformation;)V a
	bakeQuad (Lcom/mojang/math/Vector3f;Lcom/mojang/math/Vector3f;Lnet/minecraft/client/renderer/block/model/BlockElementFace;Lnet/minecraft/client/renderer/texture/TextureAtlasSprite;Lnet/minecraft/core/Direction;Lnet/minecraft/client/resources/model/ModelState;Lnet/minecraft/client/renderer/block/model/BlockElementRotation;ZLnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/client/renderer/block/model/BakedQuad; a
	bakeVertex ([IILnet/minecraft/core/Direction;Lnet/minecraft/client/renderer/block/model/BlockFaceUV;[FLnet/minecraft/client/renderer/texture/TextureAtlasSprite;Lcom/mojang/math/Transformation;Lnet/minecraft/client/renderer/block/model/BlockElementRotation;Z)V a
	calculateFacing ([I)Lnet/minecraft/core/Direction; a
	fillVertex ([IILcom/mojang/math/Vector3f;Lnet/minecraft/client/renderer/texture/TextureAtlasSprite;Lnet/minecraft/client/renderer/block/model/BlockFaceUV;)V a
	makeVertices (Lnet/minecraft/client/renderer/block/model/BlockFaceUV;Lnet/minecraft/client/renderer/texture/TextureAtlasSprite;Lnet/minecraft/core/Direction;[FLcom/mojang/math/Transformation;Lnet/minecraft/client/renderer/block/model/BlockElementRotation;Z)[I a
	recalculateWinding ([ILnet/minecraft/core/Direction;)V a
	recomputeUVs (Lnet/minecraft/client/renderer/block/model/BlockFaceUV;Lnet/minecraft/core/Direction;Lcom/mojang/math/Transformation;Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/client/renderer/block/model/BlockFaceUV; a
	rotateVertexBy (Lcom/mojang/math/Vector3f;Lcom/mojang/math/Vector3f;Lcom/mojang/math/Matrix4f;Lcom/mojang/math/Vector3f;)V a
	setupShape (Lcom/mojang/math/Vector3f;Lcom/mojang/math/Vector3f;)[F a
net/minecraft/client/renderer/block/model/ItemModelGenerator edb
	LAYERS a
	checkTransition (Lnet/minecraft/client/renderer/block/model/ItemModelGenerator$SpanFacing;Ljava/util/List;Lnet/minecraft/client/renderer/texture/TextureAtlasSprite;IIIIIZ)V a
	createOrExpandSpan (Ljava/util/List;Lnet/minecraft/client/renderer/block/model/ItemModelGenerator$SpanFacing;II)V a
	createSideElements (Lnet/minecraft/client/renderer/texture/TextureAtlasSprite;Ljava/lang/String;I)Ljava/util/List; a
	generateBlockModel (Ljava/util/function/Function;Lnet/minecraft/client/renderer/block/model/BlockModel;)Lnet/minecraft/client/renderer/block/model/BlockModel; a
	getSpans (Lnet/minecraft/client/renderer/texture/TextureAtlasSprite;)Ljava/util/List; a
	isTransparent (Lnet/minecraft/client/renderer/texture/TextureAtlasSprite;IIIII)Z a
	processFrames (ILjava/lang/String;Lnet/minecraft/client/renderer/texture/TextureAtlasSprite;)Ljava/util/List; a
net/minecraft/client/renderer/block/model/ItemModelGenerator$Span edb$a
	anchor d
	facing a
	max c
	min b
	expand (I)V a
	getAnchor ()I d
	getFacing ()Lnet/minecraft/client/renderer/block/model/ItemModelGenerator$SpanFacing; a
	getMax ()I c
	getMin ()I b
net/minecraft/client/renderer/block/model/ItemModelGenerator$SpanFacing edb$b
	$VALUES h
	DOWN b
	LEFT c
	RIGHT d
	UP a
	direction e
	xOffset f
	yOffset g
	getDirection ()Lnet/minecraft/core/Direction; a
	getXOffset ()I b
	getYOffset ()I c
	isHorizontal ()Z d
net/minecraft/client/renderer/block/model/ItemOverride edc
	model a
	predicates b
	getModel ()Lnet/minecraft/resources/ResourceLocation; a
	test (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/client/multiplayer/ClientLevel;Lnet/minecraft/world/entity/LivingEntity;)Z a
net/minecraft/client/renderer/block/model/ItemOverride$Deserializer edc$a
	deserialize (Lcom/google/gson/JsonElement;Ljava/lang/reflect/Type;Lcom/google/gson/JsonDeserializationContext;)Lnet/minecraft/client/renderer/block/model/ItemOverride; a
	getPredicates (Lcom/google/gson/JsonObject;)Ljava/util/Map; a
net/minecraft/client/renderer/block/model/ItemOverrides edd
	EMPTY a
	overrideModels c
	overrides b
	resolve (Lnet/minecraft/client/resources/model/BakedModel;Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/client/multiplayer/ClientLevel;Lnet/minecraft/world/entity/LivingEntity;)Lnet/minecraft/client/resources/model/BakedModel; a
net/minecraft/client/renderer/block/model/ItemTransform ede
	NO_TRANSFORM a
	rotation b
	scale d
	translation c
	apply (ZLcom/mojang/blaze3d/vertex/PoseStack;)V a
net/minecraft/client/renderer/block/model/ItemTransform$Deserializer ede$a
	DEFAULT_ROTATION a
	DEFAULT_SCALE c
	DEFAULT_TRANSLATION b
	deserialize (Lcom/google/gson/JsonElement;Ljava/lang/reflect/Type;Lcom/google/gson/JsonDeserializationContext;)Lnet/minecraft/client/renderer/block/model/ItemTransform; a
	getVector3f (Lcom/google/gson/JsonObject;Ljava/lang/String;Lcom/mojang/math/Vector3f;)Lcom/mojang/math/Vector3f; a
net/minecraft/client/renderer/block/model/ItemTransforms edf
	NO_TRANSFORMS a
	firstPersonLeftHand d
	firstPersonRightHand e
	fixed i
	ground h
	gui g
	head f
	thirdPersonLeftHand b
	thirdPersonRightHand c
	getTransform (Lnet/minecraft/client/renderer/block/model/ItemTransforms$TransformType;)Lnet/minecraft/client/renderer/block/model/ItemTransform; a
	hasTransform (Lnet/minecraft/client/renderer/block/model/ItemTransforms$TransformType;)Z b
net/minecraft/client/renderer/block/model/ItemTransforms$Deserializer edf$a
	deserialize (Lcom/google/gson/JsonElement;Ljava/lang/reflect/Type;Lcom/google/gson/JsonDeserializationContext;)Lnet/minecraft/client/renderer/block/model/ItemTransforms; a
	getTransform (Lcom/google/gson/JsonDeserializationContext;Lcom/google/gson/JsonObject;Ljava/lang/String;)Lnet/minecraft/client/renderer/block/model/ItemTransform; a
net/minecraft/client/renderer/block/model/ItemTransforms$TransformType edf$b
	$VALUES j
	FIRST_PERSON_LEFT_HAND d
	FIRST_PERSON_RIGHT_HAND e
	FIXED i
	GROUND h
	GUI g
	HEAD f
	NONE a
	THIRD_PERSON_LEFT_HAND b
	THIRD_PERSON_RIGHT_HAND c
	firstPerson ()Z a
net/minecraft/client/renderer/block/model/MultiVariant edg
	variants a
	bake (Lnet/minecraft/client/resources/model/ModelBakery;Ljava/util/function/Function;Lnet/minecraft/client/resources/model/ModelState;Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/client/resources/model/BakedModel; a
	getDependencies ()Ljava/util/Collection; f
	getMaterials (Ljava/util/function/Function;Ljava/util/Set;)Ljava/util/Collection; a
	getVariants ()Ljava/util/List; a
net/minecraft/client/renderer/block/model/MultiVariant$Deserializer edg$a
	deserialize (Lcom/google/gson/JsonElement;Ljava/lang/reflect/Type;Lcom/google/gson/JsonDeserializationContext;)Lnet/minecraft/client/renderer/block/model/MultiVariant; a
net/minecraft/client/renderer/block/model/Variant edh
	modelLocation a
	rotation b
	uvLock c
	weight d
	getModelLocation ()Lnet/minecraft/resources/ResourceLocation; a
	getRotation ()Lcom/mojang/math/Transformation; b
	getWeight ()I d
	isUvLocked ()Z c
net/minecraft/client/renderer/block/model/Variant$Deserializer edh$a
	deserialize (Lcom/google/gson/JsonElement;Ljava/lang/reflect/Type;Lcom/google/gson/JsonDeserializationContext;)Lnet/minecraft/client/renderer/block/model/Variant; a
	getBlockRotation (Lcom/google/gson/JsonObject;)Lnet/minecraft/client/resources/model/BlockModelRotation; a
	getModel (Lcom/google/gson/JsonObject;)Lnet/minecraft/resources/ResourceLocation; b
	getUvLock (Lcom/google/gson/JsonObject;)Z d
	getWeight (Lcom/google/gson/JsonObject;)I c
net/minecraft/client/renderer/block/model/multipart/AndCondition edi
	conditions c
net/minecraft/client/renderer/block/model/multipart/Condition edj
	FALSE b
	TRUE a
net/minecraft/client/renderer/block/model/multipart/KeyValueCondition edk
	PIPE_SPLITTER c
	key d
	value e
	getBlockStatePredicate (Lnet/minecraft/world/level/block/state/StateDefinition;Lnet/minecraft/world/level/block/state/properties/Property;Ljava/lang/String;)Ljava/util/function/Predicate; a
net/minecraft/client/renderer/block/model/multipart/MultiPart edl
	definition a
	selectors b
	bake (Lnet/minecraft/client/resources/model/ModelBakery;Ljava/util/function/Function;Lnet/minecraft/client/resources/model/ModelState;Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/client/resources/model/BakedModel; a
	getDependencies ()Ljava/util/Collection; f
	getMaterials (Ljava/util/function/Function;Ljava/util/Set;)Ljava/util/Collection; a
	getMultiVariants ()Ljava/util/Set; b
	getSelectors ()Ljava/util/List; a
net/minecraft/client/renderer/block/model/multipart/MultiPart$Deserializer edl$a
	context a
	deserialize (Lcom/google/gson/JsonElement;Ljava/lang/reflect/Type;Lcom/google/gson/JsonDeserializationContext;)Lnet/minecraft/client/renderer/block/model/multipart/MultiPart; a
	getSelectors (Lcom/google/gson/JsonDeserializationContext;Lcom/google/gson/JsonArray;)Ljava/util/List; a
net/minecraft/client/renderer/block/model/multipart/OrCondition edm
	conditions c
net/minecraft/client/renderer/block/model/multipart/Selector edn
	condition a
	variant b
	getPredicate (Lnet/minecraft/world/level/block/state/StateDefinition;)Ljava/util/function/Predicate; a
	getVariant ()Lnet/minecraft/client/renderer/block/model/MultiVariant; a
net/minecraft/client/renderer/block/model/multipart/Selector$Deserializer edn$a
	deserialize (Lcom/google/gson/JsonElement;Ljava/lang/reflect/Type;Lcom/google/gson/JsonDeserializationContext;)Lnet/minecraft/client/renderer/block/model/multipart/Selector; a
	getCondition (Lcom/google/gson/JsonObject;)Lnet/minecraft/client/renderer/block/model/multipart/Condition; a
	getKeyValueCondition (Ljava/util/Map$Entry;)Lnet/minecraft/client/renderer/block/model/multipart/Condition; a
	getSelector (Lcom/google/gson/JsonObject;)Lnet/minecraft/client/renderer/block/model/multipart/Condition; b
net/minecraft/client/renderer/blockentity/BannerRenderer eds
	bar d
	flag a
	pole c
	makeFlag ()Lnet/minecraft/client/model/geom/ModelPart; a
	render (Lnet/minecraft/world/level/block/entity/BannerBlockEntity;FLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;II)V a
	render (Lnet/minecraft/world/level/block/entity/BlockEntity;FLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;II)V a
	renderPatterns (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;IILnet/minecraft/client/model/geom/ModelPart;Lnet/minecraft/client/resources/model/Material;ZLjava/util/List;)V a
	renderPatterns (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;IILnet/minecraft/client/model/geom/ModelPart;Lnet/minecraft/client/resources/model/Material;ZLjava/util/List;Z)V a
net/minecraft/client/renderer/blockentity/BeaconRenderer edt
	BEAM_LOCATION a
	addVertex (Lcom/mojang/math/Matrix4f;Lcom/mojang/math/Matrix3f;Lcom/mojang/blaze3d/vertex/VertexConsumer;FFFFIFFFF)V a
	render (Lnet/minecraft/world/level/block/entity/BeaconBlockEntity;FLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;II)V a
	render (Lnet/minecraft/world/level/block/entity/BlockEntity;FLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;II)V a
	renderBeaconBeam (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;FJII[F)V a
	renderBeaconBeam (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;Lnet/minecraft/resources/ResourceLocation;FFJII[FFF)V a
	renderPart (Lcom/mojang/blaze3d/vertex/PoseStack;Lcom/mojang/blaze3d/vertex/VertexConsumer;FFFFIIFFFFFFFFFFFF)V a
	renderQuad (Lcom/mojang/math/Matrix4f;Lcom/mojang/math/Matrix3f;Lcom/mojang/blaze3d/vertex/VertexConsumer;FFFFIIFFFFFFFF)V a
	shouldRenderOffScreen (Lnet/minecraft/world/level/block/entity/BeaconBlockEntity;)Z a
	shouldRenderOffScreen (Lnet/minecraft/world/level/block/entity/BlockEntity;)Z a
net/minecraft/client/renderer/blockentity/BedRenderer edu
	footPiece c
	headPiece a
	legs d
	render (Lnet/minecraft/world/level/block/entity/BedBlockEntity;FLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;II)V a
	render (Lnet/minecraft/world/level/block/entity/BlockEntity;FLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;II)V a
	renderPiece (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;ZLnet/minecraft/core/Direction;Lnet/minecraft/client/resources/model/Material;IIZ)V a
net/minecraft/client/renderer/blockentity/BellRenderer edv
	BELL_RESOURCE_LOCATION a
	bellBody c
	render (Lnet/minecraft/world/level/block/entity/BellBlockEntity;FLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;II)V a
	render (Lnet/minecraft/world/level/block/entity/BlockEntity;FLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;II)V a
net/minecraft/client/renderer/blockentity/BlockEntityRenderDispatcher edw
	camera d
	cameraHitResult e
	font h
	instance a
	level c
	renderers f
	singleRenderBuffer g
	textureManager b
	getFont ()Lnet/minecraft/client/gui/Font; a
	getRenderer (Lnet/minecraft/world/level/block/entity/BlockEntity;)Lnet/minecraft/client/renderer/blockentity/BlockEntityRenderer; a
	prepare (Lnet/minecraft/world/level/Level;Lnet/minecraft/client/renderer/texture/TextureManager;Lnet/minecraft/client/gui/Font;Lnet/minecraft/client/Camera;Lnet/minecraft/world/phys/HitResult;)V a
	register (Lnet/minecraft/world/level/block/entity/BlockEntityType;Lnet/minecraft/client/renderer/blockentity/BlockEntityRenderer;)V a
	render (Lnet/minecraft/world/level/block/entity/BlockEntity;FLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;)V a
	renderItem (Lnet/minecraft/world/level/block/entity/BlockEntity;Lcom/mojang/blaze3d/vertex/PoseStack;)V a
	renderItem (Lnet/minecraft/world/level/block/entity/BlockEntity;Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;II)Z a
	setLevel (Lnet/minecraft/world/level/Level;)V a
	setupAndRender (Lnet/minecraft/client/renderer/blockentity/BlockEntityRenderer;Lnet/minecraft/world/level/block/entity/BlockEntity;FLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;)V a
	tryRender (Lnet/minecraft/world/level/block/entity/BlockEntity;Ljava/lang/Runnable;)V a
net/minecraft/client/renderer/blockentity/BlockEntityRenderer edx
	renderer b
	render (Lnet/minecraft/world/level/block/entity/BlockEntity;FLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;II)V a
	shouldRenderOffScreen (Lnet/minecraft/world/level/block/entity/BlockEntity;)Z a
net/minecraft/client/renderer/blockentity/BrightnessCombiner edy
	acceptDouble (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object; a
	acceptDouble (Lnet/minecraft/world/level/block/entity/BlockEntity;Lnet/minecraft/world/level/block/entity/BlockEntity;)Lit/unimi/dsi/fastutil/ints/Int2IntFunction; a
	acceptNone ()Lit/unimi/dsi/fastutil/ints/Int2IntFunction; a
	acceptNone ()Ljava/lang/Object; b
	acceptSingle (Ljava/lang/Object;)Ljava/lang/Object; a
	acceptSingle (Lnet/minecraft/world/level/block/entity/BlockEntity;)Lit/unimi/dsi/fastutil/ints/Int2IntFunction; a
net/minecraft/client/renderer/blockentity/CampfireRenderer edz
	render (Lnet/minecraft/world/level/block/entity/BlockEntity;FLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;II)V a
	render (Lnet/minecraft/world/level/block/entity/CampfireBlockEntity;FLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;II)V a
net/minecraft/client/renderer/blockentity/ChestRenderer eea
	bottom c
	doubleLeftBottom f
	doubleLeftLid e
	doubleLeftLock g
	doubleRightBottom i
	doubleRightLid h
	doubleRightLock j
	lid a
	lock d
	xmasTextures k
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lcom/mojang/blaze3d/vertex/VertexConsumer;Lnet/minecraft/client/model/geom/ModelPart;Lnet/minecraft/client/model/geom/ModelPart;Lnet/minecraft/client/model/geom/ModelPart;FII)V a
	render (Lnet/minecraft/world/level/block/entity/BlockEntity;FLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;II)V a
net/minecraft/client/renderer/blockentity/ConduitRenderer eeb
	ACTIVE_SHELL_TEXTURE c
	CLOSED_EYE_TEXTURE g
	OPEN_EYE_TEXTURE f
	SHELL_TEXTURE a
	VERTICAL_WIND_TEXTURE e
	WIND_TEXTURE d
	cage k
	eye h
	shell j
	wind i
	render (Lnet/minecraft/world/level/block/entity/BlockEntity;FLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;II)V a
	render (Lnet/minecraft/world/level/block/entity/ConduitBlockEntity;FLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;II)V a
net/minecraft/client/renderer/blockentity/EnchantTableRenderer eec
	BOOK_LOCATION a
	bookModel c
	render (Lnet/minecraft/world/level/block/entity/BlockEntity;FLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;II)V a
	render (Lnet/minecraft/world/level/block/entity/EnchantmentTableBlockEntity;FLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;II)V a
net/minecraft/client/renderer/blockentity/LecternRenderer eed
	bookModel a
	render (Lnet/minecraft/world/level/block/entity/BlockEntity;FLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;II)V a
	render (Lnet/minecraft/world/level/block/entity/LecternBlockEntity;FLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;II)V a
net/minecraft/client/renderer/blockentity/PistonHeadRenderer eee
	blockRenderer a
	render (Lnet/minecraft/world/level/block/entity/BlockEntity;FLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;II)V a
	render (Lnet/minecraft/world/level/block/piston/PistonMovingBlockEntity;FLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;II)V a
	renderBlock (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;Lnet/minecraft/world/level/Level;ZI)V a
net/minecraft/client/renderer/blockentity/ShulkerBoxRenderer eef
	model a
	render (Lnet/minecraft/world/level/block/entity/BlockEntity;FLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;II)V a
	render (Lnet/minecraft/world/level/block/entity/ShulkerBoxBlockEntity;FLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;II)V a
net/minecraft/client/renderer/blockentity/SignRenderer eeg
	signModel a
	getMaterial (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/client/resources/model/Material; a
	render (Lnet/minecraft/world/level/block/entity/BlockEntity;FLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;II)V a
	render (Lnet/minecraft/world/level/block/entity/SignBlockEntity;FLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;II)V a
net/minecraft/client/renderer/blockentity/SignRenderer$SignModel eeg$a
	sign a
	stick b
	renderToBuffer (Lcom/mojang/blaze3d/vertex/PoseStack;Lcom/mojang/blaze3d/vertex/VertexConsumer;IIFFFF)V a
net/minecraft/client/renderer/blockentity/SkullBlockRenderer eeh
	MODEL_BY_TYPE a
	SKIN_BY_TYPE c
	getRenderType (Lnet/minecraft/world/level/block/SkullBlock$Type;Lcom/mojang/authlib/GameProfile;)Lnet/minecraft/client/renderer/RenderType; a
	render (Lnet/minecraft/world/level/block/entity/BlockEntity;FLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;II)V a
	render (Lnet/minecraft/world/level/block/entity/SkullBlockEntity;FLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;II)V a
	renderSkull (Lnet/minecraft/core/Direction;FLnet/minecraft/world/level/block/SkullBlock$Type;Lcom/mojang/authlib/GameProfile;FLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
net/minecraft/client/renderer/blockentity/SpawnerRenderer eei
	render (Lnet/minecraft/world/level/block/entity/BlockEntity;FLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;II)V a
	render (Lnet/minecraft/world/level/block/entity/SpawnerBlockEntity;FLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;II)V a
net/minecraft/client/renderer/blockentity/StructureBlockRenderer eej
	render (Lnet/minecraft/world/level/block/entity/BlockEntity;FLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;II)V a
	render (Lnet/minecraft/world/level/block/entity/StructureBlockEntity;FLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;II)V a
	renderInvisibleBlocks (Lnet/minecraft/world/level/block/entity/StructureBlockEntity;Lcom/mojang/blaze3d/vertex/VertexConsumer;Lnet/minecraft/core/BlockPos;ZLcom/mojang/blaze3d/vertex/PoseStack;)V a
	shouldRenderOffScreen (Lnet/minecraft/world/level/block/entity/BlockEntity;)Z a
	shouldRenderOffScreen (Lnet/minecraft/world/level/block/entity/StructureBlockEntity;)Z a
net/minecraft/client/renderer/blockentity/TheEndGatewayRenderer eek
	BEAM_LOCATION d
	getOffset ()F a
	getPasses (D)I a
	render (Lnet/minecraft/world/level/block/entity/BlockEntity;FLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;II)V a
	render (Lnet/minecraft/world/level/block/entity/TheEndGatewayBlockEntity;FLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;II)V a
	render (Lnet/minecraft/world/level/block/entity/TheEndPortalBlockEntity;FLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;II)V a
net/minecraft/client/renderer/blockentity/TheEndPortalRenderer eel
	END_PORTAL_LOCATION c
	END_SKY_LOCATION a
	RANDOM d
	RENDER_TYPES e
	getOffset ()F a
	getPasses (D)I a
	render (Lnet/minecraft/world/level/block/entity/BlockEntity;FLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;II)V a
	render (Lnet/minecraft/world/level/block/entity/TheEndPortalBlockEntity;FLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;II)V a
	renderCube (Lnet/minecraft/world/level/block/entity/TheEndPortalBlockEntity;FFLcom/mojang/math/Matrix4f;Lcom/mojang/blaze3d/vertex/VertexConsumer;)V a
	renderFace (Lnet/minecraft/world/level/block/entity/TheEndPortalBlockEntity;Lcom/mojang/math/Matrix4f;Lcom/mojang/blaze3d/vertex/VertexConsumer;FFFFFFFFFFFLnet/minecraft/core/Direction;)V a
net/minecraft/client/renderer/chunk/ChunkRenderDispatcher een
	LOGGER a
	camera l
	executor i
	fixedBuffers g
	freeBufferCount f
	freeBuffers c
	level j
	mailbox h
	renderer k
	toBatch b
	toBatchCount e
	toUpload d
	blockUntilClear ()V e
	clearBatchQueue ()V i
	dispose ()V g
	doUploadChunkLayer (Lcom/mojang/blaze3d/vertex/BufferBuilder;Lcom/mojang/blaze3d/vertex/VertexBuffer;)Ljava/util/concurrent/CompletableFuture; b
	fixedBuffers ()Lnet/minecraft/client/renderer/ChunkBufferBuilderPack; a
	getCameraPosition ()Lnet/minecraft/world/phys/Vec3; c
	getStats ()Ljava/lang/String; b
	isQueueEmpty ()Z f
	rebuildChunkSync (Lnet/minecraft/client/renderer/chunk/ChunkRenderDispatcher$RenderChunk;)V a
	runTask ()V h
	schedule (Lnet/minecraft/client/renderer/chunk/ChunkRenderDispatcher$RenderChunk$ChunkCompileTask;)V a
	setCamera (Lnet/minecraft/world/phys/Vec3;)V a
	setLevel (Lnet/minecraft/world/level/Level;)V a
	uploadAllPendingUploads ()Z d
	uploadChunkLayer (Lcom/mojang/blaze3d/vertex/BufferBuilder;Lcom/mojang/blaze3d/vertex/VertexBuffer;)Ljava/util/concurrent/CompletableFuture; a
net/minecraft/client/renderer/chunk/ChunkRenderDispatcher$ChunkTaskResult een$a
	$VALUES c
	CANCELLED b
	SUCCESSFUL a
net/minecraft/client/renderer/chunk/ChunkRenderDispatcher$CompiledChunk een$b
	UNCOMPILED a
	hasBlocks b
	hasLayer c
	isCompletelyEmpty d
	renderableBlockEntities e
	transparencyState g
	visibilitySet f
	facesCanSeeEachother (Lnet/minecraft/core/Direction;Lnet/minecraft/core/Direction;)Z a
	getRenderableBlockEntities ()Ljava/util/List; b
	hasNoRenderableLayers ()Z a
	isEmpty (Lnet/minecraft/client/renderer/RenderType;)Z a
net/minecraft/client/renderer/chunk/ChunkRenderDispatcher$RenderChunk een$c
	bb b
	buffers g
	compiled a
	dirty i
	globalBlockEntities f
	lastFrame h
	lastRebuildTask d
	lastResortTransparencyTask e
	origin j
	playerChanged l
	relativeOrigins k
	beginLayer (Lcom/mojang/blaze3d/vertex/BufferBuilder;)V a
	cancelTasks ()V i
	compileSync ()V k
	createCompileTask ()Lnet/minecraft/client/renderer/chunk/ChunkRenderDispatcher$RenderChunk$ChunkCompileTask; j
	doesChunkExistAt (Lnet/minecraft/core/BlockPos;)Z a
	getBuffer (Lnet/minecraft/client/renderer/RenderType;)Lcom/mojang/blaze3d/vertex/VertexBuffer; a
	getCompiledChunk ()Lnet/minecraft/client/renderer/chunk/ChunkRenderDispatcher$CompiledChunk; c
	getDistToPlayerSqr ()D b
	getOrigin ()Lnet/minecraft/core/BlockPos; e
	getRelativeOrigin (Lnet/minecraft/core/Direction;)Lnet/minecraft/core/BlockPos; a
	hasAllNeighbors ()Z a
	isDirty ()Z g
	isDirtyFromPlayer ()Z h
	rebuildChunkAsync (Lnet/minecraft/client/renderer/chunk/ChunkRenderDispatcher;)V a
	releaseBuffers ()V d
	reset ()V l
	resortTransparency (Lnet/minecraft/client/renderer/RenderType;Lnet/minecraft/client/renderer/chunk/ChunkRenderDispatcher;)Z a
	setDirty (Z)V a
	setFrame (I)Z a
	setNotDirty ()V f
	setOrigin (III)V a
	updateGlobalBlockEntities (Ljava/util/Set;)V a
net/minecraft/client/renderer/chunk/ChunkRenderDispatcher$RenderChunk$ChunkCompileTask een$c$a
	distAtCreation a
	isCancelled b
	cancel ()V a
	compareTo (Lnet/minecraft/client/renderer/chunk/ChunkRenderDispatcher$RenderChunk$ChunkCompileTask;)I a
	doTask (Lnet/minecraft/client/renderer/ChunkBufferBuilderPack;)Ljava/util/concurrent/CompletableFuture; a
net/minecraft/client/renderer/chunk/ChunkRenderDispatcher$RenderChunk$RebuildTask een$c$b
	region d
	cancel ()V a
	compile (FFFLnet/minecraft/client/renderer/chunk/ChunkRenderDispatcher$CompiledChunk;Lnet/minecraft/client/renderer/ChunkBufferBuilderPack;)Ljava/util/Set; a
	doTask (Lnet/minecraft/client/renderer/ChunkBufferBuilderPack;)Ljava/util/concurrent/CompletableFuture; a
	handleBlockEntity (Lnet/minecraft/client/renderer/chunk/ChunkRenderDispatcher$CompiledChunk;Ljava/util/Set;Lnet/minecraft/world/level/block/entity/BlockEntity;)V a
net/minecraft/client/renderer/chunk/ChunkRenderDispatcher$RenderChunk$ResortTransparencyTask een$c$c
	compiledChunk e
	cancel ()V a
	doTask (Lnet/minecraft/client/renderer/ChunkBufferBuilderPack;)Ljava/util/concurrent/CompletableFuture; a
net/minecraft/client/renderer/chunk/RenderChunkRegion eeo
	blockStates h
	centerX a
	centerZ b
	chunks g
	fluidStates i
	level j
	start c
	xLength d
	yLength e
	zLength f
	createIfNotEmpty (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;I)Lnet/minecraft/client/renderer/chunk/RenderChunkRegion; a
	getBlockEntity (Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/entity/BlockEntity; c
	getBlockEntity (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/chunk/LevelChunk$EntityCreationType;)Lnet/minecraft/world/level/block/entity/BlockEntity; a
	getBlockState (Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; d_
	getBlockTint (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/ColorResolver;)I a
	getFluidState (Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/material/FluidState; b
	getLightEngine ()Lnet/minecraft/world/level/lighting/LevelLightEngine; e
	getShade (Lnet/minecraft/core/Direction;Z)F a
	index (III)I a
	index (Lnet/minecraft/core/BlockPos;)I a
	isAllEmpty (Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;II[[Lnet/minecraft/world/level/chunk/LevelChunk;)Z a
net/minecraft/client/renderer/chunk/VisGraph eep
	DIRECTIONS d
	DX a
	DY c
	DZ b
	INDEX_OF_EDGES f
	bitSet e
	empty g
	addEdges (ILjava/util/Set;)V a
	floodFill (I)Ljava/util/Set; a
	floodFill (Lnet/minecraft/core/BlockPos;)Ljava/util/Set; b
	getIndex (III)I a
	getIndex (Lnet/minecraft/core/BlockPos;)I c
	getNeighborIndexAtFace (ILnet/minecraft/core/Direction;)I a
	resolve ()Lnet/minecraft/client/renderer/chunk/VisibilitySet; a
	setOpaque (Lnet/minecraft/core/BlockPos;)V a
net/minecraft/client/renderer/chunk/VisibilitySet eeq
	FACINGS a
	data b
	add (Ljava/util/Set;)V a
	set (Lnet/minecraft/core/Direction;Lnet/minecraft/core/Direction;Z)V a
	setAll (Z)V a
	visibilityBetween (Lnet/minecraft/core/Direction;Lnet/minecraft/core/Direction;)Z a
net/minecraft/client/renderer/culling/Frustum ees
	camX b
	camY c
	camZ d
	frustumData a
	calculateFrustum (Lcom/mojang/math/Matrix4f;Lcom/mojang/math/Matrix4f;)V a
	cubeInFrustum (DDDDDD)Z a
	cubeInFrustum (FFFFFF)Z a
	getPlane (Lcom/mojang/math/Matrix4f;IIII)V a
	isVisible (Lnet/minecraft/world/phys/AABB;)Z a
	prepare (DDD)V a
net/minecraft/client/renderer/debug/BeeDebugRenderer eeu
	beeInfosPerEntity c
	hives b
	lastLookedAtUuid d
	minecraft a
	addOrUpdateBeeInfo (Lnet/minecraft/client/renderer/debug/BeeDebugRenderer$BeeInfo;)V a
	addOrUpdateHiveInfo (Lnet/minecraft/client/renderer/debug/BeeDebugRenderer$HiveInfo;)V a
	clear ()V a
	clearRemovedBees ()V b
	clearRemovedHives ()V c
	createHiveBlacklistMap ()Ljava/util/Map; e
	doRender ()V d
	getBeeUuidsAsString (Ljava/util/Collection;)Ljava/lang/String; a
	getCamera ()Lnet/minecraft/client/Camera; g
	getGhostHives ()Ljava/util/Map; h
	getHiveMemberNames (Lnet/minecraft/client/renderer/debug/BeeDebugRenderer$HiveInfo;)Ljava/util/Set; b
	getHiveMembers (Lnet/minecraft/core/BlockPos;)Ljava/util/Collection; b
	getPosDescription (Lnet/minecraft/client/renderer/debug/BeeDebugRenderer$BeeInfo;Lnet/minecraft/core/BlockPos;)Ljava/lang/String; a
	highlightHive (Lnet/minecraft/core/BlockPos;)V a
	isBeeSelected (Lnet/minecraft/client/renderer/debug/BeeDebugRenderer$BeeInfo;)Z d
	isPlayerCloseEnoughToMob (Lnet/minecraft/client/renderer/debug/BeeDebugRenderer$BeeInfo;)Z e
	removeBeeInfo (I)V a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;DDD)V a
	renderBeeInfo (Lnet/minecraft/client/renderer/debug/BeeDebugRenderer$BeeInfo;)V c
	renderFlowerInfos ()V f
	renderGhostHive (Lnet/minecraft/core/BlockPos;Ljava/util/List;)V a
	renderHiveInfo (Lnet/minecraft/client/renderer/debug/BeeDebugRenderer$HiveInfo;Ljava/util/Collection;)V a
	renderPath (Lnet/minecraft/client/renderer/debug/BeeDebugRenderer$BeeInfo;)V b
	renderTextOverHive (Ljava/lang/String;Lnet/minecraft/client/renderer/debug/BeeDebugRenderer$HiveInfo;II)V a
	renderTextOverMob (Lnet/minecraft/core/Position;ILjava/lang/String;IF)V a
	renderTextOverPos (Ljava/lang/String;Lnet/minecraft/core/BlockPos;II)V a
	renderTransparentFilledBox (Lnet/minecraft/core/BlockPos;FFFFF)V a
	updateLastLookedAtUuid ()V i
net/minecraft/client/renderer/debug/BeeDebugRenderer$BeeInfo eeu$a
	blacklistedHives i
	flowerPos f
	goals h
	hivePos e
	id b
	path d
	pos c
	travelTicks g
	uuid a
	getName ()Ljava/lang/String; b
	getUuid ()Ljava/util/UUID; a
	hasFlower ()Z c
	hasHive (Lnet/minecraft/core/BlockPos;)Z a
net/minecraft/client/renderer/debug/BeeDebugRenderer$HiveInfo eeu$b
	hiveType b
	honeyLevel d
	lastSeen f
	occupantCount c
	pos a
	sedated e
net/minecraft/client/renderer/debug/BrainDebugRenderer eev
	LOGGER a
	brainDumpsPerEntity d
	lastLookedAtUuid e
	minecraft b
	pois c
	addOrUpdateBrainDump (Lnet/minecraft/client/renderer/debug/BrainDebugRenderer$BrainDump;)V a
	addPoi (Lnet/minecraft/client/renderer/debug/BrainDebugRenderer$PoiInfo;)V a
	clear ()V a
	clearRemovedEntities ()V b
	doRender (DDD)V a
	getGhostPois ()Ljava/util/Map; c
	getPotentialTicketHolderNames (Lnet/minecraft/client/renderer/debug/BrainDebugRenderer$PoiInfo;)Ljava/util/Set; d
	getPotentialTicketHolders (Lnet/minecraft/core/BlockPos;)Ljava/util/Collection; d
	getTicketHolderNames (Lnet/minecraft/client/renderer/debug/BrainDebugRenderer$PoiInfo;)Ljava/util/Set; c
	getTicketHolders (Lnet/minecraft/core/BlockPos;)Ljava/util/Collection; c
	highlightPoi (Lnet/minecraft/core/BlockPos;)V b
	isMobSelected (Lnet/minecraft/client/renderer/debug/BrainDebugRenderer$BrainDump;)Z b
	isPlayerCloseEnoughToMob (Lnet/minecraft/client/renderer/debug/BrainDebugRenderer$BrainDump;)Z c
	removeBrainDump (I)V a
	removePoi (Lnet/minecraft/core/BlockPos;)V a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;DDD)V a
	renderBrainInfo (Lnet/minecraft/client/renderer/debug/BrainDebugRenderer$BrainDump;DDD)V b
	renderGhostPoi (Lnet/minecraft/core/BlockPos;Ljava/util/List;)V a
	renderPath (Lnet/minecraft/client/renderer/debug/BrainDebugRenderer$BrainDump;DDD)V a
	renderPoiInfo (Lnet/minecraft/client/renderer/debug/BrainDebugRenderer$PoiInfo;)V b
	renderTextOverMob (Lnet/minecraft/core/Position;ILjava/lang/String;IF)V a
	renderTextOverPoi (Ljava/lang/String;Lnet/minecraft/client/renderer/debug/BrainDebugRenderer$PoiInfo;II)V a
	renderTextOverPos (Ljava/lang/String;Lnet/minecraft/core/BlockPos;II)V a
	setFreeTicketCount (Lnet/minecraft/core/BlockPos;I)V a
	updateLastLookedAtUuid ()V d
net/minecraft/client/renderer/debug/BrainDebugRenderer$BrainDump eev$a
	activities l
	behaviors m
	gossips o
	health f
	id b
	inventory i
	maxHealth g
	memories n
	name c
	path j
	pois p
	pos h
	potentialPois q
	profession d
	uuid a
	wantsGolem k
	xp e
	getUuid ()Ljava/util/UUID; a
	hasPoi (Lnet/minecraft/core/BlockPos;)Z a
	hasPotentialPoi (Lnet/minecraft/core/BlockPos;)Z b
net/minecraft/client/renderer/debug/BrainDebugRenderer$PoiInfo eev$b
	freeTicketCount c
	pos a
	type b
net/minecraft/client/renderer/debug/CaveDebugRenderer eew
	startPoses c
	thicknessMap b
	tunnelsList a
	addTunnel (Lnet/minecraft/core/BlockPos;Ljava/util/List;Ljava/util/List;)V a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;DDD)V a
net/minecraft/client/renderer/debug/ChunkBorderRenderer eex
	minecraft a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;DDD)V a
net/minecraft/client/renderer/debug/ChunkDebugRenderer eey
	data d
	lastUpdateTime b
	minecraft a
	radius c
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;DDD)V a
net/minecraft/client/renderer/debug/ChunkDebugRenderer$ChunkData eey$a
	clientData b
	serverData c
net/minecraft/client/renderer/debug/CollisionBoxRenderer eez
	lastUpdateTime b
	minecraft a
	shapes c
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;DDD)V a
net/minecraft/client/renderer/debug/DebugRenderer efa
	beeDebugRenderer o
	brainDebugRenderer m
	caveRenderer g
	chunkBorderRenderer c
	chunkRenderer l
	collisionBoxRenderer e
	gameTestDebugRenderer r
	goalSelectorRenderer q
	heightMapRenderer d
	lightDebugRenderer i
	neighborsUpdateRenderer f
	pathfindingRenderer a
	raidDebugRenderer p
	renderChunkborder s
	solidFaceRenderer k
	structureRenderer h
	villageSectionsDebugRenderer n
	waterDebugRenderer b
	worldGenAttemptRenderer j
	clear ()V a
	getTargetedEntity (Lnet/minecraft/world/entity/Entity;I)Ljava/util/Optional; a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource$BufferSource;DDD)V a
	renderFilledBox (DDDDDDFFFF)V a
	renderFilledBox (Lnet/minecraft/core/BlockPos;FFFFF)V a
	renderFilledBox (Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;FFFF)V a
	renderFilledBox (Lnet/minecraft/world/phys/AABB;FFFF)V a
	renderFloatingText (Ljava/lang/String;DDDI)V a
	renderFloatingText (Ljava/lang/String;DDDIF)V a
	renderFloatingText (Ljava/lang/String;DDDIFZFZ)V a
	renderFloatingText (Ljava/lang/String;IIII)V a
	switchRenderChunkborder ()Z b
net/minecraft/client/renderer/debug/DebugRenderer$SimpleDebugRenderer efa$a
	clear ()V a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;DDD)V a
net/minecraft/client/renderer/debug/GameTestDebugRenderer efb
	markers a
	addMarker (Lnet/minecraft/core/BlockPos;ILjava/lang/String;I)V a
	clear ()V a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;DDD)V a
	renderMarker (Lnet/minecraft/core/BlockPos;Lnet/minecraft/client/renderer/debug/GameTestDebugRenderer$Marker;)V a
net/minecraft/client/renderer/debug/GameTestDebugRenderer$Marker efb$a
	color a
	removeAtTime c
	text b
	getA ()F d
	getB ()F c
	getG ()F b
	getR ()F a
net/minecraft/client/renderer/debug/GoalSelectorDebugRenderer efc
	goalSelectors b
	minecraft a
	addGoalSelector (ILjava/util/List;)V a
	clear ()V a
	removeGoalSelector (I)V a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;DDD)V a
net/minecraft/client/renderer/debug/GoalSelectorDebugRenderer$DebugGoal efc$a
	isRunning d
	name c
	pos a
	priority b
net/minecraft/client/renderer/debug/HeightMapRenderer efd
	minecraft a
	getColor (Lnet/minecraft/world/level/levelgen/Heightmap$Types;)Lcom/mojang/math/Vector3f; a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;DDD)V a
net/minecraft/client/renderer/debug/LightDebugRenderer efe
	minecraft a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;DDD)V a
net/minecraft/client/renderer/debug/NeighborsUpdateRenderer eff
	lastUpdate b
	minecraft a
	addUpdate (JLnet/minecraft/core/BlockPos;)V a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;DDD)V a
net/minecraft/client/renderer/debug/PathfindingRenderer efg
	creationMap c
	pathMap a
	pathMaxDist b
	addPath (ILnet/minecraft/world/level/pathfinder/Path;F)V a
	distanceToCamera (Lnet/minecraft/core/BlockPos;DDD)F a
	doRenderPath (Lnet/minecraft/world/level/pathfinder/Path;FZZDDD)V b
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;DDD)V a
	renderPath (Lnet/minecraft/world/level/pathfinder/Path;FZZDDD)V a
	renderPathLine (Lnet/minecraft/world/level/pathfinder/Path;DDD)V a
net/minecraft/client/renderer/debug/RaidDebugRenderer efh
	minecraft a
	raidCenters b
	getCamera ()Lnet/minecraft/client/Camera; b
	highlightRaidCenter (Lnet/minecraft/core/BlockPos;)V a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;DDD)V a
	renderTextOverBlock (Ljava/lang/String;Lnet/minecraft/core/BlockPos;I)V a
	setRaidCenters (Ljava/util/Collection;)V a
net/minecraft/client/renderer/debug/SolidFaceRenderer efi
	minecraft a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;DDD)V a
net/minecraft/client/renderer/debug/StructureRenderer efj
	minecraft a
	postMainBoxes b
	postPiecesBoxes c
	startPiecesMap d
	addBoundingBox (Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Ljava/util/List;Ljava/util/List;Lnet/minecraft/world/level/dimension/DimensionType;)V a
	clear ()V a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;DDD)V a
net/minecraft/client/renderer/debug/VillageSectionsDebugRenderer efk
	villageSections a
	clear ()V a
	doRender (DDD)V a
	highlightVillageSection (Lnet/minecraft/core/SectionPos;)V c
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;DDD)V a
	setNotVillageSection (Lnet/minecraft/core/SectionPos;)V b
	setVillageSection (Lnet/minecraft/core/SectionPos;)V a
net/minecraft/client/renderer/debug/WaterDebugRenderer efl
	minecraft a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;DDD)V a
net/minecraft/client/renderer/debug/WorldGenAttemptRenderer efm
	alphas c
	blues f
	greens e
	reds d
	scales b
	toRender a
	addPos (Lnet/minecraft/core/BlockPos;FFFFF)V a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;DDD)V a
net/minecraft/client/renderer/entity/AbstractHorseRenderer efo
	scale a
	scale (Lnet/minecraft/world/entity/LivingEntity;Lcom/mojang/blaze3d/vertex/PoseStack;F)V a
	scale (Lnet/minecraft/world/entity/animal/horse/AbstractHorse;Lcom/mojang/blaze3d/vertex/PoseStack;F)V a
net/minecraft/client/renderer/entity/AbstractZombieRenderer efp
	ZOMBIE_LOCATION a
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/Mob;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/monster/Zombie;)Lnet/minecraft/resources/ResourceLocation; a
	isShaking (Lnet/minecraft/world/entity/LivingEntity;)Z a
	isShaking (Lnet/minecraft/world/entity/monster/Zombie;)Z b
net/minecraft/client/renderer/entity/AreaEffectCloudRenderer efq
	getTextureLocation (Lnet/minecraft/world/entity/AreaEffectCloud;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
net/minecraft/client/renderer/entity/ArmorStandRenderer efr
	DEFAULT_SKIN_LOCATION a
	getRenderType (Lnet/minecraft/world/entity/LivingEntity;ZZZ)Lnet/minecraft/client/renderer/RenderType; a
	getRenderType (Lnet/minecraft/world/entity/decoration/ArmorStand;ZZZ)Lnet/minecraft/client/renderer/RenderType; a
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/decoration/ArmorStand;)Lnet/minecraft/resources/ResourceLocation; a
	setupRotations (Lnet/minecraft/world/entity/LivingEntity;Lcom/mojang/blaze3d/vertex/PoseStack;FFF)V a
	setupRotations (Lnet/minecraft/world/entity/decoration/ArmorStand;Lcom/mojang/blaze3d/vertex/PoseStack;FFF)V a
	shouldShowName (Lnet/minecraft/world/entity/Entity;)Z b
	shouldShowName (Lnet/minecraft/world/entity/LivingEntity;)Z b
	shouldShowName (Lnet/minecraft/world/entity/decoration/ArmorStand;)Z b
net/minecraft/client/renderer/entity/ArrowRenderer efs
	render (Lnet/minecraft/world/entity/Entity;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	render (Lnet/minecraft/world/entity/projectile/AbstractArrow;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	vertex (Lcom/mojang/math/Matrix4f;Lcom/mojang/math/Matrix3f;Lcom/mojang/blaze3d/vertex/VertexConsumer;IIIFFIIII)V a
net/minecraft/client/renderer/entity/BatRenderer eft
	BAT_LOCATION a
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/ambient/Bat;)Lnet/minecraft/resources/ResourceLocation; a
	scale (Lnet/minecraft/world/entity/LivingEntity;Lcom/mojang/blaze3d/vertex/PoseStack;F)V a
	scale (Lnet/minecraft/world/entity/ambient/Bat;Lcom/mojang/blaze3d/vertex/PoseStack;F)V a
	setupRotations (Lnet/minecraft/world/entity/LivingEntity;Lcom/mojang/blaze3d/vertex/PoseStack;FFF)V a
	setupRotations (Lnet/minecraft/world/entity/ambient/Bat;Lcom/mojang/blaze3d/vertex/PoseStack;FFF)V a
net/minecraft/client/renderer/entity/BeeRenderer efu
	ANGRY_BEE_TEXTURE a
	ANGRY_NECTAR_BEE_TEXTURE g
	BEE_TEXTURE h
	NECTAR_BEE_TEXTURE i
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/animal/Bee;)Lnet/minecraft/resources/ResourceLocation; a
net/minecraft/client/renderer/entity/BlazeRenderer efv
	BLAZE_LOCATION a
	getBlockLightLevel (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/core/BlockPos;)I a
	getBlockLightLevel (Lnet/minecraft/world/entity/monster/Blaze;Lnet/minecraft/core/BlockPos;)I a
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/monster/Blaze;)Lnet/minecraft/resources/ResourceLocation; a
net/minecraft/client/renderer/entity/BoatRenderer efw
	BOAT_TEXTURE_LOCATIONS e
	model a
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/vehicle/Boat;)Lnet/minecraft/resources/ResourceLocation; a
	render (Lnet/minecraft/world/entity/Entity;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	render (Lnet/minecraft/world/entity/vehicle/Boat;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
net/minecraft/client/renderer/entity/CatRenderer efx
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/animal/Cat;)Lnet/minecraft/resources/ResourceLocation; a
	scale (Lnet/minecraft/world/entity/LivingEntity;Lcom/mojang/blaze3d/vertex/PoseStack;F)V a
	scale (Lnet/minecraft/world/entity/animal/Cat;Lcom/mojang/blaze3d/vertex/PoseStack;F)V a
	setupRotations (Lnet/minecraft/world/entity/LivingEntity;Lcom/mojang/blaze3d/vertex/PoseStack;FFF)V a
	setupRotations (Lnet/minecraft/world/entity/animal/Cat;Lcom/mojang/blaze3d/vertex/PoseStack;FFF)V a
net/minecraft/client/renderer/entity/CaveSpiderRenderer efy
	CAVE_SPIDER_LOCATION a
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/monster/CaveSpider;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/monster/Spider;)Lnet/minecraft/resources/ResourceLocation; a
	scale (Lnet/minecraft/world/entity/LivingEntity;Lcom/mojang/blaze3d/vertex/PoseStack;F)V a
	scale (Lnet/minecraft/world/entity/monster/CaveSpider;Lcom/mojang/blaze3d/vertex/PoseStack;F)V a
net/minecraft/client/renderer/entity/ChestedHorseRenderer efz
	MAP a
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/animal/horse/AbstractChestedHorse;)Lnet/minecraft/resources/ResourceLocation; a
net/minecraft/client/renderer/entity/ChickenRenderer ega
	CHICKEN_LOCATION a
	getBob (Lnet/minecraft/world/entity/LivingEntity;F)F a
	getBob (Lnet/minecraft/world/entity/animal/Chicken;F)F a
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/animal/Chicken;)Lnet/minecraft/resources/ResourceLocation; a
net/minecraft/client/renderer/entity/CodRenderer egb
	COD_LOCATION a
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/animal/Cod;)Lnet/minecraft/resources/ResourceLocation; a
	setupRotations (Lnet/minecraft/world/entity/LivingEntity;Lcom/mojang/blaze3d/vertex/PoseStack;FFF)V a
	setupRotations (Lnet/minecraft/world/entity/animal/Cod;Lcom/mojang/blaze3d/vertex/PoseStack;FFF)V a
net/minecraft/client/renderer/entity/CowRenderer egc
	COW_LOCATION a
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/animal/Cow;)Lnet/minecraft/resources/ResourceLocation; a
net/minecraft/client/renderer/entity/CreeperRenderer egd
	CREEPER_LOCATION a
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/monster/Creeper;)Lnet/minecraft/resources/ResourceLocation; a
	getWhiteOverlayProgress (Lnet/minecraft/world/entity/LivingEntity;F)F b
	getWhiteOverlayProgress (Lnet/minecraft/world/entity/monster/Creeper;F)F a
	scale (Lnet/minecraft/world/entity/LivingEntity;Lcom/mojang/blaze3d/vertex/PoseStack;F)V a
	scale (Lnet/minecraft/world/entity/monster/Creeper;Lcom/mojang/blaze3d/vertex/PoseStack;F)V a
net/minecraft/client/renderer/entity/DolphinRenderer ege
	DOLPHIN_LOCATION a
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/animal/Dolphin;)Lnet/minecraft/resources/ResourceLocation; a
net/minecraft/client/renderer/entity/DragonFireballRenderer egf
	RENDER_TYPE e
	TEXTURE_LOCATION a
	getBlockLightLevel (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/core/BlockPos;)I a
	getBlockLightLevel (Lnet/minecraft/world/entity/projectile/DragonFireball;Lnet/minecraft/core/BlockPos;)I a
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/projectile/DragonFireball;)Lnet/minecraft/resources/ResourceLocation; a
	render (Lnet/minecraft/world/entity/Entity;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	render (Lnet/minecraft/world/entity/projectile/DragonFireball;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	vertex (Lcom/mojang/blaze3d/vertex/VertexConsumer;Lcom/mojang/math/Matrix4f;Lcom/mojang/math/Matrix3f;IFIII)V a
net/minecraft/client/renderer/entity/DrownedRenderer egg
	DROWNED_LOCATION a
	getTextureLocation (Lnet/minecraft/world/entity/monster/Zombie;)Lnet/minecraft/resources/ResourceLocation; a
	setupRotations (Lnet/minecraft/world/entity/LivingEntity;Lcom/mojang/blaze3d/vertex/PoseStack;FFF)V a
	setupRotations (Lnet/minecraft/world/entity/monster/Drowned;Lcom/mojang/blaze3d/vertex/PoseStack;FFF)V a
net/minecraft/client/renderer/entity/ElderGuardianRenderer egh
	GUARDIAN_ELDER_LOCATION a
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/monster/Guardian;)Lnet/minecraft/resources/ResourceLocation; a
	scale (Lnet/minecraft/world/entity/LivingEntity;Lcom/mojang/blaze3d/vertex/PoseStack;F)V a
	scale (Lnet/minecraft/world/entity/monster/Guardian;Lcom/mojang/blaze3d/vertex/PoseStack;F)V a
net/minecraft/client/renderer/entity/EndCrystalRenderer egi
	END_CRYSTAL_LOCATION a
	RENDER_TYPE e
	SIN_45 f
	base i
	cube g
	glass h
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/boss/enderdragon/EndCrystal;)Lnet/minecraft/resources/ResourceLocation; a
	getY (Lnet/minecraft/world/entity/boss/enderdragon/EndCrystal;F)F a
	render (Lnet/minecraft/world/entity/Entity;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	render (Lnet/minecraft/world/entity/boss/enderdragon/EndCrystal;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	shouldRender (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/client/renderer/culling/Frustum;DDD)Z a
	shouldRender (Lnet/minecraft/world/entity/boss/enderdragon/EndCrystal;Lnet/minecraft/client/renderer/culling/Frustum;DDD)Z a
net/minecraft/client/renderer/entity/EnderDragonRenderer egj
	BEAM k
	CRYSTAL_BEAM_LOCATION a
	DECAL i
	DRAGON_EXPLODING_LOCATION e
	DRAGON_EYES_LOCATION g
	DRAGON_LOCATION f
	EYES j
	HALF_SQRT_3 l
	RENDER_TYPE h
	model m
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/boss/enderdragon/EnderDragon;)Lnet/minecraft/resources/ResourceLocation; a
	render (Lnet/minecraft/world/entity/Entity;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	render (Lnet/minecraft/world/entity/boss/enderdragon/EnderDragon;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	renderCrystalBeams (FFFFILcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	vertex01 (Lcom/mojang/blaze3d/vertex/VertexConsumer;Lcom/mojang/math/Matrix4f;I)V a
	vertex2 (Lcom/mojang/blaze3d/vertex/VertexConsumer;Lcom/mojang/math/Matrix4f;FF)V a
	vertex3 (Lcom/mojang/blaze3d/vertex/VertexConsumer;Lcom/mojang/math/Matrix4f;FF)V b
	vertex4 (Lcom/mojang/blaze3d/vertex/VertexConsumer;Lcom/mojang/math/Matrix4f;FF)V c
net/minecraft/client/renderer/entity/EnderDragonRenderer$DragonModel egj$a
	a B
	body g
	entity A
	head a
	jaw f
	leftFrontFoot l
	leftFrontLeg j
	leftFrontLegTip k
	leftRearFoot o
	leftRearLeg m
	leftRearLegTip n
	leftWing h
	leftWingTip i
	neck b
	rightFrontFoot w
	rightFrontLeg u
	rightFrontLegTip v
	rightRearFoot z
	rightRearLeg x
	rightRearLegTip y
	rightWing p
	rightWingTip t
	prepareMobModel (Lnet/minecraft/world/entity/Entity;FFF)V a
	prepareMobModel (Lnet/minecraft/world/entity/boss/enderdragon/EnderDragon;FFF)V a
	renderSide (Lcom/mojang/blaze3d/vertex/PoseStack;Lcom/mojang/blaze3d/vertex/VertexConsumer;IIFLnet/minecraft/client/model/geom/ModelPart;Lnet/minecraft/client/model/geom/ModelPart;Lnet/minecraft/client/model/geom/ModelPart;Lnet/minecraft/client/model/geom/ModelPart;Lnet/minecraft/client/model/geom/ModelPart;Lnet/minecraft/client/model/geom/ModelPart;Lnet/minecraft/client/model/geom/ModelPart;)V a
	renderToBuffer (Lcom/mojang/blaze3d/vertex/PoseStack;Lcom/mojang/blaze3d/vertex/VertexConsumer;IIFFFF)V a
	setupAnim (Lnet/minecraft/world/entity/Entity;FFFFF)V a
	setupAnim (Lnet/minecraft/world/entity/boss/enderdragon/EnderDragon;FFFFF)V a
net/minecraft/client/renderer/entity/EndermanRenderer egk
	ENDERMAN_LOCATION a
	random g
	getRenderOffset (Lnet/minecraft/world/entity/Entity;F)Lnet/minecraft/world/phys/Vec3; a
	getRenderOffset (Lnet/minecraft/world/entity/monster/EnderMan;F)Lnet/minecraft/world/phys/Vec3; a
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/monster/EnderMan;)Lnet/minecraft/resources/ResourceLocation; a
	render (Lnet/minecraft/world/entity/Entity;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	render (Lnet/minecraft/world/entity/LivingEntity;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	render (Lnet/minecraft/world/entity/Mob;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	render (Lnet/minecraft/world/entity/monster/EnderMan;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
net/minecraft/client/renderer/entity/EndermiteRenderer egl
	ENDERMITE_LOCATION a
	getFlipDegrees (Lnet/minecraft/world/entity/LivingEntity;)F c
	getFlipDegrees (Lnet/minecraft/world/entity/monster/Endermite;)F a
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/monster/Endermite;)Lnet/minecraft/resources/ResourceLocation; b
net/minecraft/client/renderer/entity/EntityRenderDispatcher egm
	SHADOW_RENDER_TYPE e
	camera b
	cameraOrientation k
	crosshairPickEntity c
	defaultPlayerRenderer h
	font i
	level j
	options d
	playerRenderers g
	renderHitBoxes m
	renderers f
	shouldRenderShadow l
	textureManager a
	cameraOrientation ()Lcom/mojang/math/Quaternion; b
	distanceToSqr (DDD)D a
	distanceToSqr (Lnet/minecraft/world/entity/Entity;)D b
	fireVertex (Lcom/mojang/blaze3d/vertex/PoseStack$Pose;Lcom/mojang/blaze3d/vertex/VertexConsumer;FFFFF)V a
	getFont ()Lnet/minecraft/client/gui/Font; c
	getPackedLightCoords (Lnet/minecraft/world/entity/Entity;F)I a
	getRenderer (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/client/renderer/entity/EntityRenderer; a
	overrideCameraOrientation (Lcom/mojang/math/Quaternion;)V a
	prepare (Lnet/minecraft/world/level/Level;Lnet/minecraft/client/Camera;Lnet/minecraft/world/entity/Entity;)V a
	register (Lnet/minecraft/world/entity/EntityType;Lnet/minecraft/client/renderer/entity/EntityRenderer;)V a
	registerRenderers (Lnet/minecraft/client/renderer/entity/ItemRenderer;Lnet/minecraft/server/packs/resources/ReloadableResourceManager;)V a
	render (Lnet/minecraft/world/entity/Entity;DDDFFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	renderBlockShadow (Lcom/mojang/blaze3d/vertex/PoseStack$Pose;Lcom/mojang/blaze3d/vertex/VertexConsumer;Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;DDDFF)V a
	renderBox (Lcom/mojang/blaze3d/vertex/PoseStack;Lcom/mojang/blaze3d/vertex/VertexConsumer;Lnet/minecraft/world/entity/Entity;FFF)V a
	renderFlame (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;Lnet/minecraft/world/entity/Entity;)V a
	renderHitbox (Lcom/mojang/blaze3d/vertex/PoseStack;Lcom/mojang/blaze3d/vertex/VertexConsumer;Lnet/minecraft/world/entity/Entity;F)V a
	renderShadow (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;Lnet/minecraft/world/entity/Entity;FFLnet/minecraft/world/level/LevelReader;F)V a
	setLevel (Lnet/minecraft/world/level/Level;)V a
	setRenderHitBoxes (Z)V b
	setRenderShadow (Z)V a
	shadowVertex (Lcom/mojang/blaze3d/vertex/PoseStack$Pose;Lcom/mojang/blaze3d/vertex/VertexConsumer;FFFFFF)V a
	shouldRender (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/client/renderer/culling/Frustum;DDD)Z a
	shouldRenderHitBoxes ()Z a
net/minecraft/client/renderer/entity/EntityRenderer egn
	entityRenderDispatcher b
	shadowRadius c
	shadowStrength d
	getBlockLightLevel (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/core/BlockPos;)I a
	getDispatcher ()Lnet/minecraft/client/renderer/entity/EntityRenderDispatcher; b
	getFont ()Lnet/minecraft/client/gui/Font; a
	getPackedLightCoords (Lnet/minecraft/world/entity/Entity;F)I b
	getRenderOffset (Lnet/minecraft/world/entity/Entity;F)Lnet/minecraft/world/phys/Vec3; a
	getSkyLightLevel (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/core/BlockPos;)I b
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	render (Lnet/minecraft/world/entity/Entity;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	renderNameTag (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/network/chat/Component;Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	shouldRender (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/client/renderer/culling/Frustum;DDD)Z a
	shouldShowName (Lnet/minecraft/world/entity/Entity;)Z b
net/minecraft/client/renderer/entity/EvokerFangsRenderer ego
	TEXTURE_LOCATION a
	model e
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/projectile/EvokerFangs;)Lnet/minecraft/resources/ResourceLocation; a
	render (Lnet/minecraft/world/entity/Entity;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	render (Lnet/minecraft/world/entity/projectile/EvokerFangs;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
net/minecraft/client/renderer/entity/EvokerRenderer egp
	EVOKER_ILLAGER a
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/monster/SpellcasterIllager;)Lnet/minecraft/resources/ResourceLocation; a
net/minecraft/client/renderer/entity/ExperienceOrbRenderer egq
	EXPERIENCE_ORB_LOCATION a
	RENDER_TYPE e
	getBlockLightLevel (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/core/BlockPos;)I a
	getBlockLightLevel (Lnet/minecraft/world/entity/ExperienceOrb;Lnet/minecraft/core/BlockPos;)I a
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/ExperienceOrb;)Lnet/minecraft/resources/ResourceLocation; a
	render (Lnet/minecraft/world/entity/Entity;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	render (Lnet/minecraft/world/entity/ExperienceOrb;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	vertex (Lcom/mojang/blaze3d/vertex/VertexConsumer;Lcom/mojang/math/Matrix4f;Lcom/mojang/math/Matrix3f;FFIIIFFI)V a
net/minecraft/client/renderer/entity/FallingBlockRenderer egr
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/item/FallingBlockEntity;)Lnet/minecraft/resources/ResourceLocation; a
	render (Lnet/minecraft/world/entity/Entity;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	render (Lnet/minecraft/world/entity/item/FallingBlockEntity;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
net/minecraft/client/renderer/entity/FireworkEntityRenderer egs
	itemRenderer a
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/projectile/FireworkRocketEntity;)Lnet/minecraft/resources/ResourceLocation; a
	render (Lnet/minecraft/world/entity/Entity;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	render (Lnet/minecraft/world/entity/projectile/FireworkRocketEntity;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
net/minecraft/client/renderer/entity/FishingHookRenderer egt
	RENDER_TYPE e
	TEXTURE_LOCATION a
	fraction (II)F a
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/projectile/FishingHook;)Lnet/minecraft/resources/ResourceLocation; a
	render (Lnet/minecraft/world/entity/Entity;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	render (Lnet/minecraft/world/entity/projectile/FishingHook;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	stringVertex (FFFLcom/mojang/blaze3d/vertex/VertexConsumer;Lcom/mojang/math/Matrix4f;F)V a
	vertex (Lcom/mojang/blaze3d/vertex/VertexConsumer;Lcom/mojang/math/Matrix4f;Lcom/mojang/math/Matrix3f;IFIII)V a
net/minecraft/client/renderer/entity/FoxRenderer egu
	RED_FOX_SLEEP_TEXTURE g
	RED_FOX_TEXTURE a
	SNOW_FOX_SLEEP_TEXTURE i
	SNOW_FOX_TEXTURE h
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/animal/Fox;)Lnet/minecraft/resources/ResourceLocation; a
	setupRotations (Lnet/minecraft/world/entity/LivingEntity;Lcom/mojang/blaze3d/vertex/PoseStack;FFF)V a
	setupRotations (Lnet/minecraft/world/entity/animal/Fox;Lcom/mojang/blaze3d/vertex/PoseStack;FFF)V a
net/minecraft/client/renderer/entity/GhastRenderer egv
	GHAST_LOCATION a
	GHAST_SHOOTING_LOCATION g
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/monster/Ghast;)Lnet/minecraft/resources/ResourceLocation; a
	scale (Lnet/minecraft/world/entity/LivingEntity;Lcom/mojang/blaze3d/vertex/PoseStack;F)V a
	scale (Lnet/minecraft/world/entity/monster/Ghast;Lcom/mojang/blaze3d/vertex/PoseStack;F)V a
net/minecraft/client/renderer/entity/GiantMobRenderer egw
	ZOMBIE_LOCATION a
	scale g
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/monster/Giant;)Lnet/minecraft/resources/ResourceLocation; a
	scale (Lnet/minecraft/world/entity/LivingEntity;Lcom/mojang/blaze3d/vertex/PoseStack;F)V a
	scale (Lnet/minecraft/world/entity/monster/Giant;Lcom/mojang/blaze3d/vertex/PoseStack;F)V a
net/minecraft/client/renderer/entity/GuardianRenderer egx
	BEAM_RENDER_TYPE h
	GUARDIAN_BEAM_LOCATION g
	GUARDIAN_LOCATION a
	getPosition (Lnet/minecraft/world/entity/LivingEntity;DF)Lnet/minecraft/world/phys/Vec3; a
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/monster/Guardian;)Lnet/minecraft/resources/ResourceLocation; a
	render (Lnet/minecraft/world/entity/Entity;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	render (Lnet/minecraft/world/entity/LivingEntity;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	render (Lnet/minecraft/world/entity/Mob;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	render (Lnet/minecraft/world/entity/monster/Guardian;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	shouldRender (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/client/renderer/culling/Frustum;DDD)Z a
	shouldRender (Lnet/minecraft/world/entity/Mob;Lnet/minecraft/client/renderer/culling/Frustum;DDD)Z a
	shouldRender (Lnet/minecraft/world/entity/monster/Guardian;Lnet/minecraft/client/renderer/culling/Frustum;DDD)Z a
	vertex (Lcom/mojang/blaze3d/vertex/VertexConsumer;Lcom/mojang/math/Matrix4f;Lcom/mojang/math/Matrix3f;FFFIIIFF)V a
net/minecraft/client/renderer/entity/HoglinRenderer egy
	HOGLIN_LOCATION a
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/monster/hoglin/Hoglin;)Lnet/minecraft/resources/ResourceLocation; a
	isShaking (Lnet/minecraft/world/entity/LivingEntity;)Z a
	isShaking (Lnet/minecraft/world/entity/monster/hoglin/Hoglin;)Z b
net/minecraft/client/renderer/entity/HorseRenderer egz
	LOCATION_BY_VARIANT a
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/animal/horse/Horse;)Lnet/minecraft/resources/ResourceLocation; a
net/minecraft/client/renderer/entity/HumanoidMobRenderer eha
	DEFAULT_LOCATION a
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/Mob;)Lnet/minecraft/resources/ResourceLocation; a
net/minecraft/client/renderer/entity/HuskRenderer ehb
	HUSK_LOCATION a
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/Mob;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/monster/Zombie;)Lnet/minecraft/resources/ResourceLocation; a
	scale (Lnet/minecraft/world/entity/LivingEntity;Lcom/mojang/blaze3d/vertex/PoseStack;F)V a
	scale (Lnet/minecraft/world/entity/monster/Zombie;Lcom/mojang/blaze3d/vertex/PoseStack;F)V a
net/minecraft/client/renderer/entity/IllagerRenderer ehc
	scale (Lnet/minecraft/world/entity/LivingEntity;Lcom/mojang/blaze3d/vertex/PoseStack;F)V a
	scale (Lnet/minecraft/world/entity/monster/AbstractIllager;Lcom/mojang/blaze3d/vertex/PoseStack;F)V a
net/minecraft/client/renderer/entity/IllusionerRenderer ehd
	ILLUSIONER a
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/monster/Illusioner;)Lnet/minecraft/resources/ResourceLocation; a
	isBodyVisible (Lnet/minecraft/world/entity/LivingEntity;)Z d
	isBodyVisible (Lnet/minecraft/world/entity/monster/Illusioner;)Z b
	render (Lnet/minecraft/world/entity/Entity;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	render (Lnet/minecraft/world/entity/LivingEntity;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	render (Lnet/minecraft/world/entity/Mob;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	render (Lnet/minecraft/world/entity/monster/Illusioner;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
net/minecraft/client/renderer/entity/IronGolemRenderer ehe
	GOLEM_LOCATION a
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/animal/IronGolem;)Lnet/minecraft/resources/ResourceLocation; a
	setupRotations (Lnet/minecraft/world/entity/LivingEntity;Lcom/mojang/blaze3d/vertex/PoseStack;FFF)V a
	setupRotations (Lnet/minecraft/world/entity/animal/IronGolem;Lcom/mojang/blaze3d/vertex/PoseStack;FFF)V a
net/minecraft/client/renderer/entity/ItemEntityRenderer ehf
	itemRenderer a
	random e
	getRenderAmount (Lnet/minecraft/world/item/ItemStack;)I a
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/item/ItemEntity;)Lnet/minecraft/resources/ResourceLocation; a
	render (Lnet/minecraft/world/entity/Entity;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	render (Lnet/minecraft/world/entity/item/ItemEntity;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
net/minecraft/client/renderer/entity/ItemFrameRenderer ehg
	FRAME_LOCATION a
	MAP_FRAME_LOCATION e
	itemRenderer g
	minecraft f
	getRenderOffset (Lnet/minecraft/world/entity/Entity;F)Lnet/minecraft/world/phys/Vec3; a
	getRenderOffset (Lnet/minecraft/world/entity/decoration/ItemFrame;F)Lnet/minecraft/world/phys/Vec3; a
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/decoration/ItemFrame;)Lnet/minecraft/resources/ResourceLocation; a
	render (Lnet/minecraft/world/entity/Entity;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	render (Lnet/minecraft/world/entity/decoration/ItemFrame;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	renderNameTag (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/network/chat/Component;Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	renderNameTag (Lnet/minecraft/world/entity/decoration/ItemFrame;Lnet/minecraft/network/chat/Component;Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	shouldShowName (Lnet/minecraft/world/entity/Entity;)Z b
	shouldShowName (Lnet/minecraft/world/entity/decoration/ItemFrame;)Z b
net/minecraft/client/renderer/entity/ItemRenderer ehh
	ENCHANT_GLINT_LOCATION a
	IGNORED c
	blitOffset b
	itemColors f
	itemModelShaper d
	textureManager e
	fillRect (Lcom/mojang/blaze3d/vertex/BufferBuilder;IIIIIIII)V a
	getArmorFoilBuffer (Lnet/minecraft/client/renderer/MultiBufferSource;Lnet/minecraft/client/renderer/RenderType;ZZ)Lcom/mojang/blaze3d/vertex/VertexConsumer; a
	getCompassFoilBuffer (Lnet/minecraft/client/renderer/MultiBufferSource;Lnet/minecraft/client/renderer/RenderType;Lcom/mojang/blaze3d/vertex/PoseStack$Pose;)Lcom/mojang/blaze3d/vertex/VertexConsumer; a
	getCompassFoilBufferDirect (Lnet/minecraft/client/renderer/MultiBufferSource;Lnet/minecraft/client/renderer/RenderType;Lcom/mojang/blaze3d/vertex/PoseStack$Pose;)Lcom/mojang/blaze3d/vertex/VertexConsumer; b
	getFoilBuffer (Lnet/minecraft/client/renderer/MultiBufferSource;Lnet/minecraft/client/renderer/RenderType;ZZ)Lcom/mojang/blaze3d/vertex/VertexConsumer; b
	getFoilBufferDirect (Lnet/minecraft/client/renderer/MultiBufferSource;Lnet/minecraft/client/renderer/RenderType;ZZ)Lcom/mojang/blaze3d/vertex/VertexConsumer; c
	getItemModelShaper ()Lnet/minecraft/client/renderer/ItemModelShaper; a
	getModel (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/LivingEntity;)Lnet/minecraft/client/resources/model/BakedModel; a
	onResourceManagerReload (Lnet/minecraft/server/packs/resources/ResourceManager;)V a
	render (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/client/renderer/block/model/ItemTransforms$TransformType;ZLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;IILnet/minecraft/client/resources/model/BakedModel;)V a
	renderAndDecorateFakeItem (Lnet/minecraft/world/item/ItemStack;II)V c
	renderAndDecorateItem (Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/item/ItemStack;II)V a
	renderAndDecorateItem (Lnet/minecraft/world/item/ItemStack;II)V b
	renderGuiItem (Lnet/minecraft/world/item/ItemStack;II)V a
	renderGuiItem (Lnet/minecraft/world/item/ItemStack;IILnet/minecraft/client/resources/model/BakedModel;)V a
	renderGuiItemDecorations (Lnet/minecraft/client/gui/Font;Lnet/minecraft/world/item/ItemStack;II)V a
	renderGuiItemDecorations (Lnet/minecraft/client/gui/Font;Lnet/minecraft/world/item/ItemStack;IILjava/lang/String;)V a
	renderModelLists (Lnet/minecraft/client/resources/model/BakedModel;Lnet/minecraft/world/item/ItemStack;IILcom/mojang/blaze3d/vertex/PoseStack;Lcom/mojang/blaze3d/vertex/VertexConsumer;)V a
	renderQuadList (Lcom/mojang/blaze3d/vertex/PoseStack;Lcom/mojang/blaze3d/vertex/VertexConsumer;Ljava/util/List;Lnet/minecraft/world/item/ItemStack;II)V a
	renderStatic (Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/client/renderer/block/model/ItemTransforms$TransformType;ZLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;Lnet/minecraft/world/level/Level;II)V a
	renderStatic (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/client/renderer/block/model/ItemTransforms$TransformType;IILcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;)V a
	tryRenderGuiItem (Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/item/ItemStack;II)V b
net/minecraft/client/renderer/entity/LeashKnotRenderer ehi
	KNOT_LOCATION a
	model e
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/decoration/LeashFenceKnotEntity;)Lnet/minecraft/resources/ResourceLocation; a
	render (Lnet/minecraft/world/entity/Entity;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	render (Lnet/minecraft/world/entity/decoration/LeashFenceKnotEntity;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
net/minecraft/client/renderer/entity/LightningBoltRenderer ehj
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/LightningBolt;)Lnet/minecraft/resources/ResourceLocation; a
	quad (Lcom/mojang/math/Matrix4f;Lcom/mojang/blaze3d/vertex/VertexConsumer;FFIFFFFFFFZZZZ)V a
	render (Lnet/minecraft/world/entity/Entity;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	render (Lnet/minecraft/world/entity/LightningBolt;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
net/minecraft/client/renderer/entity/LivingEntityRenderer ehk
	LOGGER a
	layers f
	model e
	addLayer (Lnet/minecraft/client/renderer/entity/layers/RenderLayer;)Z a
	getAttackAnim (Lnet/minecraft/world/entity/LivingEntity;F)F d
	getBob (Lnet/minecraft/world/entity/LivingEntity;F)F a
	getFlipDegrees (Lnet/minecraft/world/entity/LivingEntity;)F c
	getModel ()Lnet/minecraft/client/model/EntityModel; c
	getOverlayCoords (Lnet/minecraft/world/entity/LivingEntity;F)I c
	getRenderType (Lnet/minecraft/world/entity/LivingEntity;ZZZ)Lnet/minecraft/client/renderer/RenderType; a
	getWhiteOverlayProgress (Lnet/minecraft/world/entity/LivingEntity;F)F b
	isBodyVisible (Lnet/minecraft/world/entity/LivingEntity;)Z d
	isShaking (Lnet/minecraft/world/entity/LivingEntity;)Z a
	render (Lnet/minecraft/world/entity/Entity;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	render (Lnet/minecraft/world/entity/LivingEntity;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	scale (Lnet/minecraft/world/entity/LivingEntity;Lcom/mojang/blaze3d/vertex/PoseStack;F)V a
	setupRotations (Lnet/minecraft/world/entity/LivingEntity;Lcom/mojang/blaze3d/vertex/PoseStack;FFF)V a
	shouldShowName (Lnet/minecraft/world/entity/Entity;)Z b
	shouldShowName (Lnet/minecraft/world/entity/LivingEntity;)Z b
	sleepDirectionToRotation (Lnet/minecraft/core/Direction;)F a
net/minecraft/client/renderer/entity/LlamaRenderer ehl
	LLAMA_LOCATIONS a
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/animal/horse/Llama;)Lnet/minecraft/resources/ResourceLocation; a
net/minecraft/client/renderer/entity/LlamaSpitRenderer ehm
	LLAMA_SPIT_LOCATION a
	model e
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/projectile/LlamaSpit;)Lnet/minecraft/resources/ResourceLocation; a
	render (Lnet/minecraft/world/entity/Entity;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	render (Lnet/minecraft/world/entity/projectile/LlamaSpit;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
net/minecraft/client/renderer/entity/MagmaCubeRenderer ehn
	MAGMACUBE_LOCATION a
	getBlockLightLevel (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/core/BlockPos;)I a
	getBlockLightLevel (Lnet/minecraft/world/entity/monster/MagmaCube;Lnet/minecraft/core/BlockPos;)I a
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/monster/MagmaCube;)Lnet/minecraft/resources/ResourceLocation; a
	scale (Lnet/minecraft/world/entity/LivingEntity;Lcom/mojang/blaze3d/vertex/PoseStack;F)V a
	scale (Lnet/minecraft/world/entity/monster/MagmaCube;Lcom/mojang/blaze3d/vertex/PoseStack;F)V a
net/minecraft/client/renderer/entity/MinecartRenderer eho
	MINECART_LOCATION e
	model a
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/vehicle/AbstractMinecart;)Lnet/minecraft/resources/ResourceLocation; a
	render (Lnet/minecraft/world/entity/Entity;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	render (Lnet/minecraft/world/entity/vehicle/AbstractMinecart;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	renderMinecartContents (Lnet/minecraft/world/entity/vehicle/AbstractMinecart;FLnet/minecraft/world/level/block/state/BlockState;Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
net/minecraft/client/renderer/entity/MobRenderer ehp
	addVertexPair (Lcom/mojang/blaze3d/vertex/VertexConsumer;Lcom/mojang/math/Matrix4f;IFFFFFIIZFF)V a
	render (Lnet/minecraft/world/entity/Entity;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	render (Lnet/minecraft/world/entity/LivingEntity;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	render (Lnet/minecraft/world/entity/Mob;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	renderLeash (Lnet/minecraft/world/entity/Mob;FLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;Lnet/minecraft/world/entity/Entity;)V a
	renderSide (Lcom/mojang/blaze3d/vertex/VertexConsumer;Lcom/mojang/math/Matrix4f;FFFIIIIFFFF)V a
	shouldRender (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/client/renderer/culling/Frustum;DDD)Z a
	shouldRender (Lnet/minecraft/world/entity/Mob;Lnet/minecraft/client/renderer/culling/Frustum;DDD)Z a
	shouldShowName (Lnet/minecraft/world/entity/Entity;)Z b
	shouldShowName (Lnet/minecraft/world/entity/LivingEntity;)Z b
	shouldShowName (Lnet/minecraft/world/entity/Mob;)Z b
net/minecraft/client/renderer/entity/MushroomCowRenderer ehq
	TEXTURES a
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/animal/MushroomCow;)Lnet/minecraft/resources/ResourceLocation; a
net/minecraft/client/renderer/entity/OcelotRenderer ehr
	CAT_OCELOT_LOCATION a
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/animal/Ocelot;)Lnet/minecraft/resources/ResourceLocation; a
net/minecraft/client/renderer/entity/PaintingRenderer ehs
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/decoration/Painting;)Lnet/minecraft/resources/ResourceLocation; a
	render (Lnet/minecraft/world/entity/Entity;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	render (Lnet/minecraft/world/entity/decoration/Painting;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	renderPainting (Lcom/mojang/blaze3d/vertex/PoseStack;Lcom/mojang/blaze3d/vertex/VertexConsumer;Lnet/minecraft/world/entity/decoration/Painting;IILnet/minecraft/client/renderer/texture/TextureAtlasSprite;Lnet/minecraft/client/renderer/texture/TextureAtlasSprite;)V a
	vertex (Lcom/mojang/math/Matrix4f;Lcom/mojang/math/Matrix3f;Lcom/mojang/blaze3d/vertex/VertexConsumer;FFFFFIIII)V a
net/minecraft/client/renderer/entity/PandaRenderer eht
	TEXTURES a
	getAngle (FFIFF)F a
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/animal/Panda;)Lnet/minecraft/resources/ResourceLocation; a
	setupRotations (Lnet/minecraft/world/entity/LivingEntity;Lcom/mojang/blaze3d/vertex/PoseStack;FFF)V a
	setupRotations (Lnet/minecraft/world/entity/animal/Panda;Lcom/mojang/blaze3d/vertex/PoseStack;FFF)V a
net/minecraft/client/renderer/entity/ParrotRenderer ehu
	PARROT_LOCATIONS a
	getBob (Lnet/minecraft/world/entity/LivingEntity;F)F a
	getBob (Lnet/minecraft/world/entity/animal/Parrot;F)F a
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/animal/Parrot;)Lnet/minecraft/resources/ResourceLocation; a
net/minecraft/client/renderer/entity/PhantomRenderer ehv
	PHANTOM_LOCATION a
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/monster/Phantom;)Lnet/minecraft/resources/ResourceLocation; a
	scale (Lnet/minecraft/world/entity/LivingEntity;Lcom/mojang/blaze3d/vertex/PoseStack;F)V a
	scale (Lnet/minecraft/world/entity/monster/Phantom;Lcom/mojang/blaze3d/vertex/PoseStack;F)V a
	setupRotations (Lnet/minecraft/world/entity/LivingEntity;Lcom/mojang/blaze3d/vertex/PoseStack;FFF)V a
	setupRotations (Lnet/minecraft/world/entity/monster/Phantom;Lcom/mojang/blaze3d/vertex/PoseStack;FFF)V a
net/minecraft/client/renderer/entity/PigRenderer ehw
	PIG_LOCATION a
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/animal/Pig;)Lnet/minecraft/resources/ResourceLocation; a
net/minecraft/client/renderer/entity/PiglinRenderer ehx
	PIGLIN_LOCATION a
	ZOMBIFIED_PIGLIN_LOCATION g
	createModel (Z)Lnet/minecraft/client/model/PiglinModel; a
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/Mob;)Lnet/minecraft/resources/ResourceLocation; a
	isShaking (Lnet/minecraft/world/entity/LivingEntity;)Z a
	isShaking (Lnet/minecraft/world/entity/Mob;)Z c
net/minecraft/client/renderer/entity/PillagerRenderer ehy
	PILLAGER a
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/monster/Pillager;)Lnet/minecraft/resources/ResourceLocation; a
net/minecraft/client/renderer/entity/PolarBearRenderer ehz
	BEAR_LOCATION a
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/animal/PolarBear;)Lnet/minecraft/resources/ResourceLocation; a
	scale (Lnet/minecraft/world/entity/LivingEntity;Lcom/mojang/blaze3d/vertex/PoseStack;F)V a
	scale (Lnet/minecraft/world/entity/animal/PolarBear;Lcom/mojang/blaze3d/vertex/PoseStack;F)V a
net/minecraft/client/renderer/entity/PufferfishRenderer eia
	PUFFER_LOCATION a
	big j
	mid i
	puffStateO g
	small h
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/animal/Pufferfish;)Lnet/minecraft/resources/ResourceLocation; a
	render (Lnet/minecraft/world/entity/Entity;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	render (Lnet/minecraft/world/entity/LivingEntity;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	render (Lnet/minecraft/world/entity/Mob;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	render (Lnet/minecraft/world/entity/animal/Pufferfish;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	setupRotations (Lnet/minecraft/world/entity/LivingEntity;Lcom/mojang/blaze3d/vertex/PoseStack;FFF)V a
	setupRotations (Lnet/minecraft/world/entity/animal/Pufferfish;Lcom/mojang/blaze3d/vertex/PoseStack;FFF)V a
net/minecraft/client/renderer/entity/RabbitRenderer eib
	RABBIT_BLACK_LOCATION h
	RABBIT_BROWN_LOCATION a
	RABBIT_EVIL_LOCATION m
	RABBIT_GOLD_LOCATION i
	RABBIT_SALT_LOCATION j
	RABBIT_TOAST_LOCATION l
	RABBIT_WHITE_LOCATION g
	RABBIT_WHITE_SPLOTCHED_LOCATION k
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/animal/Rabbit;)Lnet/minecraft/resources/ResourceLocation; a
net/minecraft/client/renderer/entity/RavagerRenderer eic
	TEXTURE_LOCATION a
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/monster/Ravager;)Lnet/minecraft/resources/ResourceLocation; a
net/minecraft/client/renderer/entity/RenderLayerParent eid
	getModel ()Lnet/minecraft/client/model/EntityModel; c
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
net/minecraft/client/renderer/entity/SalmonRenderer eie
	SALMON_LOCATION a
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/animal/Salmon;)Lnet/minecraft/resources/ResourceLocation; a
	setupRotations (Lnet/minecraft/world/entity/LivingEntity;Lcom/mojang/blaze3d/vertex/PoseStack;FFF)V a
	setupRotations (Lnet/minecraft/world/entity/animal/Salmon;Lcom/mojang/blaze3d/vertex/PoseStack;FFF)V a
net/minecraft/client/renderer/entity/SheepRenderer eif
	SHEEP_LOCATION a
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/animal/Sheep;)Lnet/minecraft/resources/ResourceLocation; a
net/minecraft/client/renderer/entity/ShulkerBulletRenderer eig
	RENDER_TYPE e
	TEXTURE_LOCATION a
	model f
	getBlockLightLevel (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/core/BlockPos;)I a
	getBlockLightLevel (Lnet/minecraft/world/entity/projectile/ShulkerBullet;Lnet/minecraft/core/BlockPos;)I a
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/projectile/ShulkerBullet;)Lnet/minecraft/resources/ResourceLocation; a
	render (Lnet/minecraft/world/entity/Entity;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	render (Lnet/minecraft/world/entity/projectile/ShulkerBullet;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
net/minecraft/client/renderer/entity/ShulkerRenderer eih
	DEFAULT_TEXTURE_LOCATION a
	TEXTURE_LOCATION g
	getRenderOffset (Lnet/minecraft/world/entity/Entity;F)Lnet/minecraft/world/phys/Vec3; a
	getRenderOffset (Lnet/minecraft/world/entity/monster/Shulker;F)Lnet/minecraft/world/phys/Vec3; a
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/monster/Shulker;)Lnet/minecraft/resources/ResourceLocation; a
	setupRotations (Lnet/minecraft/world/entity/LivingEntity;Lcom/mojang/blaze3d/vertex/PoseStack;FFF)V a
	setupRotations (Lnet/minecraft/world/entity/monster/Shulker;Lcom/mojang/blaze3d/vertex/PoseStack;FFF)V a
	shouldRender (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/client/renderer/culling/Frustum;DDD)Z a
	shouldRender (Lnet/minecraft/world/entity/Mob;Lnet/minecraft/client/renderer/culling/Frustum;DDD)Z a
	shouldRender (Lnet/minecraft/world/entity/monster/Shulker;Lnet/minecraft/client/renderer/culling/Frustum;DDD)Z a
net/minecraft/client/renderer/entity/SilverfishRenderer eii
	SILVERFISH_LOCATION a
	getFlipDegrees (Lnet/minecraft/world/entity/LivingEntity;)F c
	getFlipDegrees (Lnet/minecraft/world/entity/monster/Silverfish;)F a
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/monster/Silverfish;)Lnet/minecraft/resources/ResourceLocation; b
net/minecraft/client/renderer/entity/SkeletonRenderer eij
	SKELETON_LOCATION a
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/Mob;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/monster/AbstractSkeleton;)Lnet/minecraft/resources/ResourceLocation; a
net/minecraft/client/renderer/entity/SlimeRenderer eik
	SLIME_LOCATION a
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/monster/Slime;)Lnet/minecraft/resources/ResourceLocation; a
	render (Lnet/minecraft/world/entity/Entity;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	render (Lnet/minecraft/world/entity/LivingEntity;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	render (Lnet/minecraft/world/entity/Mob;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	render (Lnet/minecraft/world/entity/monster/Slime;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	scale (Lnet/minecraft/world/entity/LivingEntity;Lcom/mojang/blaze3d/vertex/PoseStack;F)V a
	scale (Lnet/minecraft/world/entity/monster/Slime;Lcom/mojang/blaze3d/vertex/PoseStack;F)V a
net/minecraft/client/renderer/entity/SnowGolemRenderer eil
	SNOW_GOLEM_LOCATION a
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/animal/SnowGolem;)Lnet/minecraft/resources/ResourceLocation; a
net/minecraft/client/renderer/entity/SpectralArrowRenderer eim
	SPECTRAL_ARROW_LOCATION a
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/projectile/SpectralArrow;)Lnet/minecraft/resources/ResourceLocation; a
net/minecraft/client/renderer/entity/SpiderRenderer ein
	SPIDER_LOCATION a
	getFlipDegrees (Lnet/minecraft/world/entity/LivingEntity;)F c
	getFlipDegrees (Lnet/minecraft/world/entity/monster/Spider;)F b
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/monster/Spider;)Lnet/minecraft/resources/ResourceLocation; a
net/minecraft/client/renderer/entity/SquidRenderer eio
	SQUID_LOCATION a
	getBob (Lnet/minecraft/world/entity/LivingEntity;F)F a
	getBob (Lnet/minecraft/world/entity/animal/Squid;F)F a
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/animal/Squid;)Lnet/minecraft/resources/ResourceLocation; a
	setupRotations (Lnet/minecraft/world/entity/LivingEntity;Lcom/mojang/blaze3d/vertex/PoseStack;FFF)V a
	setupRotations (Lnet/minecraft/world/entity/animal/Squid;Lcom/mojang/blaze3d/vertex/PoseStack;FFF)V a
net/minecraft/client/renderer/entity/StrayRenderer eip
	STRAY_SKELETON_LOCATION a
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/Mob;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/monster/AbstractSkeleton;)Lnet/minecraft/resources/ResourceLocation; a
net/minecraft/client/renderer/entity/StriderRenderer eiq
	COLD_LOCATION g
	STRIDER_LOCATION a
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/monster/Strider;)Lnet/minecraft/resources/ResourceLocation; a
	isShaking (Lnet/minecraft/world/entity/LivingEntity;)Z a
	isShaking (Lnet/minecraft/world/entity/monster/Strider;)Z b
	scale (Lnet/minecraft/world/entity/LivingEntity;Lcom/mojang/blaze3d/vertex/PoseStack;F)V a
	scale (Lnet/minecraft/world/entity/monster/Strider;Lcom/mojang/blaze3d/vertex/PoseStack;F)V a
net/minecraft/client/renderer/entity/ThrownItemRenderer eir
	fullBright f
	itemRenderer a
	scale e
	getBlockLightLevel (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/core/BlockPos;)I a
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	render (Lnet/minecraft/world/entity/Entity;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
net/minecraft/client/renderer/entity/ThrownTridentRenderer eis
	TRIDENT_LOCATION a
	model e
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/projectile/ThrownTrident;)Lnet/minecraft/resources/ResourceLocation; a
	render (Lnet/minecraft/world/entity/Entity;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	render (Lnet/minecraft/world/entity/projectile/ThrownTrident;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
net/minecraft/client/renderer/entity/TippableArrowRenderer eit
	NORMAL_ARROW_LOCATION a
	TIPPED_ARROW_LOCATION e
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/projectile/Arrow;)Lnet/minecraft/resources/ResourceLocation; a
net/minecraft/client/renderer/entity/TntMinecartRenderer eiu
	renderMinecartContents (Lnet/minecraft/world/entity/vehicle/AbstractMinecart;FLnet/minecraft/world/level/block/state/BlockState;Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	renderMinecartContents (Lnet/minecraft/world/entity/vehicle/MinecartTNT;FLnet/minecraft/world/level/block/state/BlockState;Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	renderWhiteSolidBlock (Lnet/minecraft/world/level/block/state/BlockState;Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;IZ)V a
net/minecraft/client/renderer/entity/TntRenderer eiv
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/item/PrimedTnt;)Lnet/minecraft/resources/ResourceLocation; a
	render (Lnet/minecraft/world/entity/Entity;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	render (Lnet/minecraft/world/entity/item/PrimedTnt;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
net/minecraft/client/renderer/entity/TropicalFishRenderer eiw
	modelA a
	modelB g
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/animal/TropicalFish;)Lnet/minecraft/resources/ResourceLocation; a
	render (Lnet/minecraft/world/entity/Entity;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	render (Lnet/minecraft/world/entity/LivingEntity;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	render (Lnet/minecraft/world/entity/Mob;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	render (Lnet/minecraft/world/entity/animal/TropicalFish;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	setupRotations (Lnet/minecraft/world/entity/LivingEntity;Lcom/mojang/blaze3d/vertex/PoseStack;FFF)V a
	setupRotations (Lnet/minecraft/world/entity/animal/TropicalFish;Lcom/mojang/blaze3d/vertex/PoseStack;FFF)V a
net/minecraft/client/renderer/entity/TurtleRenderer eix
	TURTLE_LOCATION a
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/animal/Turtle;)Lnet/minecraft/resources/ResourceLocation; a
	render (Lnet/minecraft/world/entity/Entity;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	render (Lnet/minecraft/world/entity/LivingEntity;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	render (Lnet/minecraft/world/entity/Mob;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	render (Lnet/minecraft/world/entity/animal/Turtle;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
net/minecraft/client/renderer/entity/UndeadHorseRenderer eiy
	MAP a
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/animal/horse/AbstractHorse;)Lnet/minecraft/resources/ResourceLocation; a
net/minecraft/client/renderer/entity/VexRenderer eiz
	VEX_CHARGING_LOCATION g
	VEX_LOCATION a
	getBlockLightLevel (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/core/BlockPos;)I a
	getBlockLightLevel (Lnet/minecraft/world/entity/monster/Vex;Lnet/minecraft/core/BlockPos;)I a
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/Mob;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/monster/Vex;)Lnet/minecraft/resources/ResourceLocation; a
	scale (Lnet/minecraft/world/entity/LivingEntity;Lcom/mojang/blaze3d/vertex/PoseStack;F)V a
	scale (Lnet/minecraft/world/entity/monster/Vex;Lcom/mojang/blaze3d/vertex/PoseStack;F)V a
net/minecraft/client/renderer/entity/VillagerRenderer eja
	VILLAGER_BASE_SKIN a
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/npc/Villager;)Lnet/minecraft/resources/ResourceLocation; a
	scale (Lnet/minecraft/world/entity/LivingEntity;Lcom/mojang/blaze3d/vertex/PoseStack;F)V a
	scale (Lnet/minecraft/world/entity/npc/Villager;Lcom/mojang/blaze3d/vertex/PoseStack;F)V a
net/minecraft/client/renderer/entity/VindicatorRenderer ejb
	VINDICATOR a
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/monster/Vindicator;)Lnet/minecraft/resources/ResourceLocation; a
net/minecraft/client/renderer/entity/WanderingTraderRenderer ejc
	VILLAGER_BASE_SKIN a
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/npc/WanderingTrader;)Lnet/minecraft/resources/ResourceLocation; a
	scale (Lnet/minecraft/world/entity/LivingEntity;Lcom/mojang/blaze3d/vertex/PoseStack;F)V a
	scale (Lnet/minecraft/world/entity/npc/WanderingTrader;Lcom/mojang/blaze3d/vertex/PoseStack;F)V a
net/minecraft/client/renderer/entity/WitchRenderer ejd
	WITCH_LOCATION a
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/monster/Witch;)Lnet/minecraft/resources/ResourceLocation; a
	render (Lnet/minecraft/world/entity/Entity;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	render (Lnet/minecraft/world/entity/LivingEntity;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	render (Lnet/minecraft/world/entity/Mob;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	render (Lnet/minecraft/world/entity/monster/Witch;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	scale (Lnet/minecraft/world/entity/LivingEntity;Lcom/mojang/blaze3d/vertex/PoseStack;F)V a
	scale (Lnet/minecraft/world/entity/monster/Witch;Lcom/mojang/blaze3d/vertex/PoseStack;F)V a
net/minecraft/client/renderer/entity/WitherBossRenderer eje
	WITHER_INVULNERABLE_LOCATION a
	WITHER_LOCATION g
	getBlockLightLevel (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/core/BlockPos;)I a
	getBlockLightLevel (Lnet/minecraft/world/entity/boss/wither/WitherBoss;Lnet/minecraft/core/BlockPos;)I a
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/boss/wither/WitherBoss;)Lnet/minecraft/resources/ResourceLocation; a
	scale (Lnet/minecraft/world/entity/LivingEntity;Lcom/mojang/blaze3d/vertex/PoseStack;F)V a
	scale (Lnet/minecraft/world/entity/boss/wither/WitherBoss;Lcom/mojang/blaze3d/vertex/PoseStack;F)V a
net/minecraft/client/renderer/entity/WitherSkeletonRenderer ejf
	WITHER_SKELETON_LOCATION a
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/Mob;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/monster/AbstractSkeleton;)Lnet/minecraft/resources/ResourceLocation; a
	scale (Lnet/minecraft/world/entity/LivingEntity;Lcom/mojang/blaze3d/vertex/PoseStack;F)V a
	scale (Lnet/minecraft/world/entity/monster/AbstractSkeleton;Lcom/mojang/blaze3d/vertex/PoseStack;F)V a
net/minecraft/client/renderer/entity/WitherSkullRenderer ejg
	WITHER_INVULNERABLE_LOCATION a
	WITHER_LOCATION e
	model f
	getBlockLightLevel (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/core/BlockPos;)I a
	getBlockLightLevel (Lnet/minecraft/world/entity/projectile/WitherSkull;Lnet/minecraft/core/BlockPos;)I a
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/projectile/WitherSkull;)Lnet/minecraft/resources/ResourceLocation; a
	render (Lnet/minecraft/world/entity/Entity;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	render (Lnet/minecraft/world/entity/projectile/WitherSkull;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
net/minecraft/client/renderer/entity/WolfRenderer ejh
	WOLF_ANGRY_LOCATION h
	WOLF_LOCATION a
	WOLF_TAME_LOCATION g
	getBob (Lnet/minecraft/world/entity/LivingEntity;F)F a
	getBob (Lnet/minecraft/world/entity/animal/Wolf;F)F a
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/animal/Wolf;)Lnet/minecraft/resources/ResourceLocation; a
	render (Lnet/minecraft/world/entity/Entity;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	render (Lnet/minecraft/world/entity/LivingEntity;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	render (Lnet/minecraft/world/entity/Mob;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	render (Lnet/minecraft/world/entity/animal/Wolf;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
net/minecraft/client/renderer/entity/ZoglinRenderer eji
	ZOGLIN_LOCATION a
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/monster/Zoglin;)Lnet/minecraft/resources/ResourceLocation; a
net/minecraft/client/renderer/entity/ZombieRenderer ejj
net/minecraft/client/renderer/entity/ZombieVillagerRenderer ejk
	ZOMBIE_VILLAGER_LOCATION a
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/Mob;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/monster/ZombieVillager;)Lnet/minecraft/resources/ResourceLocation; a
	isShaking (Lnet/minecraft/world/entity/LivingEntity;)Z a
	isShaking (Lnet/minecraft/world/entity/monster/ZombieVillager;)Z b
net/minecraft/client/renderer/entity/layers/ArrowLayer ejl
	arrow b
	dispatcher a
	numStuck (Lnet/minecraft/world/entity/LivingEntity;)I a
	renderStuckItem (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;ILnet/minecraft/world/entity/Entity;FFFF)V a
net/minecraft/client/renderer/entity/layers/BeeStingerLayer ejm
	BEE_STINGER_LOCATION a
	numStuck (Lnet/minecraft/world/entity/LivingEntity;)I a
	renderStuckItem (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;ILnet/minecraft/world/entity/Entity;FFFF)V a
	vertex (Lcom/mojang/blaze3d/vertex/VertexConsumer;Lcom/mojang/math/Matrix4f;Lcom/mojang/math/Matrix3f;FIFFI)V a
net/minecraft/client/renderer/entity/layers/CapeLayer ejn
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;ILnet/minecraft/client/player/AbstractClientPlayer;FFFFFF)V a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;ILnet/minecraft/world/entity/Entity;FFFFFF)V a
net/minecraft/client/renderer/entity/layers/CarriedBlockLayer ejo
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;ILnet/minecraft/world/entity/Entity;FFFFFF)V a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;ILnet/minecraft/world/entity/monster/EnderMan;FFFFFF)V a
net/minecraft/client/renderer/entity/layers/CatCollarLayer ejp
	CAT_COLLAR_LOCATION a
	catModel b
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;ILnet/minecraft/world/entity/Entity;FFFFFF)V a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;ILnet/minecraft/world/entity/animal/Cat;FFFFFF)V a
net/minecraft/client/renderer/entity/layers/CreeperPowerLayer ejq
	POWER_LOCATION a
	model b
	getTextureLocation ()Lnet/minecraft/resources/ResourceLocation; a
	model ()Lnet/minecraft/client/model/EntityModel; b
	xOffset (F)F a
net/minecraft/client/renderer/entity/layers/CrossedArmsItemLayer ejr
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;ILnet/minecraft/world/entity/Entity;FFFFFF)V a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;ILnet/minecraft/world/entity/LivingEntity;FFFFFF)V a
net/minecraft/client/renderer/entity/layers/CustomHeadLayer ejs
	scaleX a
	scaleY b
	scaleZ c
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;ILnet/minecraft/world/entity/Entity;FFFFFF)V a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;ILnet/minecraft/world/entity/LivingEntity;FFFFFF)V a
net/minecraft/client/renderer/entity/layers/Deadmau5EarsLayer ejt
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;ILnet/minecraft/client/player/AbstractClientPlayer;FFFFFF)V a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;ILnet/minecraft/world/entity/Entity;FFFFFF)V a
net/minecraft/client/renderer/entity/layers/DolphinCarryingItemLayer eju
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;ILnet/minecraft/world/entity/Entity;FFFFFF)V a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;ILnet/minecraft/world/entity/animal/Dolphin;FFFFFF)V a
net/minecraft/client/renderer/entity/layers/DrownedOuterLayer ejv
	DROWNED_OUTER_LAYER_LOCATION a
	model b
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;ILnet/minecraft/world/entity/Entity;FFFFFF)V a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;ILnet/minecraft/world/entity/monster/Drowned;FFFFFF)V a
net/minecraft/client/renderer/entity/layers/ElytraLayer ejw
	WINGS_LOCATION a
	elytraModel b
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;ILnet/minecraft/world/entity/Entity;FFFFFF)V a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;ILnet/minecraft/world/entity/LivingEntity;FFFFFF)V a
net/minecraft/client/renderer/entity/layers/EnderEyesLayer ejx
	ENDERMAN_EYES a
	renderType ()Lnet/minecraft/client/renderer/RenderType; a
net/minecraft/client/renderer/entity/layers/EnergySwirlLayer ejy
	getTextureLocation ()Lnet/minecraft/resources/ResourceLocation; a
	model ()Lnet/minecraft/client/model/EntityModel; b
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;ILnet/minecraft/world/entity/Entity;FFFFFF)V a
	xOffset (F)F a
net/minecraft/client/renderer/entity/layers/EyesLayer ejz
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;ILnet/minecraft/world/entity/Entity;FFFFFF)V a
	renderType ()Lnet/minecraft/client/renderer/RenderType; a
net/minecraft/client/renderer/entity/layers/FoxHeldItemLayer eka
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;ILnet/minecraft/world/entity/Entity;FFFFFF)V a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;ILnet/minecraft/world/entity/animal/Fox;FFFFFF)V a
net/minecraft/client/renderer/entity/layers/HorseArmorLayer ekb
	model a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;ILnet/minecraft/world/entity/Entity;FFFFFF)V a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;ILnet/minecraft/world/entity/animal/horse/Horse;FFFFFF)V a
net/minecraft/client/renderer/entity/layers/HorseMarkingLayer ekc
	LOCATION_BY_MARKINGS a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;ILnet/minecraft/world/entity/Entity;FFFFFF)V a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;ILnet/minecraft/world/entity/animal/horse/Horse;FFFFFF)V a
net/minecraft/client/renderer/entity/layers/HumanoidArmorLayer ekd
	ARMOR_LOCATION_CACHE a
	innerModel b
	outerModel c
	getArmorLocation (Lnet/minecraft/world/item/ArmorItem;ZLjava/lang/String;)Lnet/minecraft/resources/ResourceLocation; a
	getArmorModel (Lnet/minecraft/world/entity/EquipmentSlot;)Lnet/minecraft/client/model/HumanoidModel; a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;ILnet/minecraft/world/entity/Entity;FFFFFF)V a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;ILnet/minecraft/world/entity/LivingEntity;FFFFFF)V a
	renderArmorPiece (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/entity/EquipmentSlot;ILnet/minecraft/client/model/HumanoidModel;)V a
	renderModel (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;ILnet/minecraft/world/item/ArmorItem;ZLnet/minecraft/client/model/HumanoidModel;ZFFFLjava/lang/String;)V a
	setPartVisibility (Lnet/minecraft/client/model/HumanoidModel;Lnet/minecraft/world/entity/EquipmentSlot;)V a
	usesInnerModel (Lnet/minecraft/world/entity/EquipmentSlot;)Z b
net/minecraft/client/renderer/entity/layers/IronGolemCrackinessLayer eke
	resourceLocations a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;ILnet/minecraft/world/entity/Entity;FFFFFF)V a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;ILnet/minecraft/world/entity/animal/IronGolem;FFFFFF)V a
net/minecraft/client/renderer/entity/layers/IronGolemFlowerLayer ekf
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;ILnet/minecraft/world/entity/Entity;FFFFFF)V a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;ILnet/minecraft/world/entity/animal/IronGolem;FFFFFF)V a
net/minecraft/client/renderer/entity/layers/ItemInHandLayer ekg
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;ILnet/minecraft/world/entity/Entity;FFFFFF)V a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;ILnet/minecraft/world/entity/LivingEntity;FFFFFF)V a
	renderArmWithItem (Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/client/renderer/block/model/ItemTransforms$TransformType;Lnet/minecraft/world/entity/HumanoidArm;Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
net/minecraft/client/renderer/entity/layers/LlamaDecorLayer ekh
	TEXTURE_LOCATION a
	TRADER_LLAMA b
	model c
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;ILnet/minecraft/world/entity/Entity;FFFFFF)V a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;ILnet/minecraft/world/entity/animal/horse/Llama;FFFFFF)V a
net/minecraft/client/renderer/entity/layers/MushroomCowMushroomLayer eki
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;ILnet/minecraft/world/entity/Entity;FFFFFF)V a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;ILnet/minecraft/world/entity/animal/MushroomCow;FFFFFF)V a
net/minecraft/client/renderer/entity/layers/PandaHoldsItemLayer ekj
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;ILnet/minecraft/world/entity/Entity;FFFFFF)V a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;ILnet/minecraft/world/entity/animal/Panda;FFFFFF)V a
net/minecraft/client/renderer/entity/layers/ParrotOnShoulderLayer ekk
	model a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;ILnet/minecraft/world/entity/Entity;FFFFFF)V a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;ILnet/minecraft/world/entity/player/Player;FFFFFF)V a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;ILnet/minecraft/world/entity/player/Player;FFFFZ)V a
net/minecraft/client/renderer/entity/layers/PhantomEyesLayer ekl
	PHANTOM_EYES a
	renderType ()Lnet/minecraft/client/renderer/RenderType; a
net/minecraft/client/renderer/entity/layers/RenderLayer ekm
	renderer a
	coloredCutoutModelCopyLayerRender (Lnet/minecraft/client/model/EntityModel;Lnet/minecraft/client/model/EntityModel;Lnet/minecraft/resources/ResourceLocation;Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;ILnet/minecraft/world/entity/LivingEntity;FFFFFFFFF)V a
	getParentModel ()Lnet/minecraft/client/model/EntityModel; aB_
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;ILnet/minecraft/world/entity/Entity;FFFFFF)V a
	renderColoredCutoutModel (Lnet/minecraft/client/model/EntityModel;Lnet/minecraft/resources/ResourceLocation;Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;ILnet/minecraft/world/entity/LivingEntity;FFF)V a
net/minecraft/client/renderer/entity/layers/SaddleLayer ekn
	model b
	textureLocation a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;ILnet/minecraft/world/entity/Entity;FFFFFF)V a
net/minecraft/client/renderer/entity/layers/SheepFurLayer eko
	SHEEP_FUR_LOCATION a
	model b
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;ILnet/minecraft/world/entity/Entity;FFFFFF)V a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;ILnet/minecraft/world/entity/animal/Sheep;FFFFFF)V a
net/minecraft/client/renderer/entity/layers/ShulkerHeadLayer ekp
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;ILnet/minecraft/world/entity/Entity;FFFFFF)V a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;ILnet/minecraft/world/entity/monster/Shulker;FFFFFF)V a
net/minecraft/client/renderer/entity/layers/SlimeOuterLayer ekq
	model a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;ILnet/minecraft/world/entity/Entity;FFFFFF)V a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;ILnet/minecraft/world/entity/LivingEntity;FFFFFF)V a
net/minecraft/client/renderer/entity/layers/SnowGolemHeadLayer ekr
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;ILnet/minecraft/world/entity/Entity;FFFFFF)V a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;ILnet/minecraft/world/entity/animal/SnowGolem;FFFFFF)V a
net/minecraft/client/renderer/entity/layers/SpiderEyesLayer eks
	SPIDER_EYES a
	renderType ()Lnet/minecraft/client/renderer/RenderType; a
net/minecraft/client/renderer/entity/layers/SpinAttackEffectLayer ekt
	TEXTURE a
	box b
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;ILnet/minecraft/world/entity/Entity;FFFFFF)V a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;ILnet/minecraft/world/entity/LivingEntity;FFFFFF)V a
net/minecraft/client/renderer/entity/layers/StrayClothingLayer eku
	STRAY_CLOTHES_LOCATION a
	layerModel b
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;ILnet/minecraft/world/entity/Entity;FFFFFF)V a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;ILnet/minecraft/world/entity/Mob;FFFFFF)V a
net/minecraft/client/renderer/entity/layers/StuckInBodyLayer ekv
	numStuck (Lnet/minecraft/world/entity/LivingEntity;)I a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;ILnet/minecraft/world/entity/Entity;FFFFFF)V a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;ILnet/minecraft/world/entity/LivingEntity;FFFFFF)V a
	renderStuckItem (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;ILnet/minecraft/world/entity/Entity;FFFF)V a
net/minecraft/client/renderer/entity/layers/TropicalFishPatternLayer ekw
	modelA a
	modelB b
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;ILnet/minecraft/world/entity/Entity;FFFFFF)V a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;ILnet/minecraft/world/entity/animal/TropicalFish;FFFFFF)V a
net/minecraft/client/renderer/entity/layers/VillagerProfessionLayer ekx
	LEVEL_LOCATIONS a
	path e
	professionHatCache c
	resourceManager d
	typeHatCache b
	getHatData (Lit/unimi/dsi/fastutil/objects/Object2ObjectMap;Ljava/lang/String;Lnet/minecraft/core/DefaultedRegistry;Ljava/lang/Object;)Lnet/minecraft/client/resources/metadata/animation/VillagerMetaDataSection$Hat; a
	getResourceLocation (Ljava/lang/String;Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/resources/ResourceLocation; a
	onResourceManagerReload (Lnet/minecraft/server/packs/resources/ResourceManager;)V a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;ILnet/minecraft/world/entity/Entity;FFFFFF)V a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;ILnet/minecraft/world/entity/LivingEntity;FFFFFF)V a
net/minecraft/client/renderer/entity/layers/WitchItemLayer eky
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;ILnet/minecraft/world/entity/Entity;FFFFFF)V a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;ILnet/minecraft/world/entity/LivingEntity;FFFFFF)V a
net/minecraft/client/renderer/entity/layers/WitherArmorLayer ekz
	WITHER_ARMOR_LOCATION a
	model b
	getTextureLocation ()Lnet/minecraft/resources/ResourceLocation; a
	model ()Lnet/minecraft/client/model/EntityModel; b
	xOffset (F)F a
net/minecraft/client/renderer/entity/layers/WolfCollarLayer ela
	WOLF_COLLAR_LOCATION a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;ILnet/minecraft/world/entity/Entity;FFFFFF)V a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;ILnet/minecraft/world/entity/animal/Wolf;FFFFFF)V a
net/minecraft/client/renderer/entity/player/PlayerRenderer eld
	getArmPose (Lnet/minecraft/client/player/AbstractClientPlayer;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/client/model/HumanoidModel$ArmPose; a
	getRenderOffset (Lnet/minecraft/client/player/AbstractClientPlayer;F)Lnet/minecraft/world/phys/Vec3; a
	getRenderOffset (Lnet/minecraft/world/entity/Entity;F)Lnet/minecraft/world/phys/Vec3; a
	getTextureLocation (Lnet/minecraft/client/player/AbstractClientPlayer;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	render (Lnet/minecraft/client/player/AbstractClientPlayer;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	render (Lnet/minecraft/world/entity/Entity;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	render (Lnet/minecraft/world/entity/LivingEntity;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	renderHand (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;ILnet/minecraft/client/player/AbstractClientPlayer;Lnet/minecraft/client/model/geom/ModelPart;Lnet/minecraft/client/model/geom/ModelPart;)V a
	renderLeftHand (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;ILnet/minecraft/client/player/AbstractClientPlayer;)V b
	renderNameTag (Lnet/minecraft/client/player/AbstractClientPlayer;Lnet/minecraft/network/chat/Component;Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	renderNameTag (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/network/chat/Component;Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	renderRightHand (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;ILnet/minecraft/client/player/AbstractClientPlayer;)V a
	scale (Lnet/minecraft/client/player/AbstractClientPlayer;Lcom/mojang/blaze3d/vertex/PoseStack;F)V a
	scale (Lnet/minecraft/world/entity/LivingEntity;Lcom/mojang/blaze3d/vertex/PoseStack;F)V a
	setModelProperties (Lnet/minecraft/client/player/AbstractClientPlayer;)V b
	setupRotations (Lnet/minecraft/client/player/AbstractClientPlayer;Lcom/mojang/blaze3d/vertex/PoseStack;FFF)V a
	setupRotations (Lnet/minecraft/world/entity/LivingEntity;Lcom/mojang/blaze3d/vertex/PoseStack;FFF)V a
net/minecraft/client/renderer/item/ItemProperties elf
	DAMAGE c
	DAMAGED b
	GENERIC_PROPERTIES a
	PROPERTIES f
	PROPERTY_DAMAGE e
	PROPERTY_DAMAGED d
	getProperty (Lnet/minecraft/world/item/Item;Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/client/renderer/item/ItemPropertyFunction; a
	register (Lnet/minecraft/world/item/Item;Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/client/renderer/item/ItemPropertyFunction;)V a
	registerGeneric (Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/client/renderer/item/ItemPropertyFunction;)Lnet/minecraft/client/renderer/item/ItemPropertyFunction; a
net/minecraft/client/renderer/item/ItemProperties$CompassWobble elf$a
	deltaRotation b
	lastUpdateTick c
	rotation a
	shouldUpdate (J)Z a
	update (JD)V a
net/minecraft/client/renderer/item/ItemPropertyFunction elg
net/minecraft/client/renderer/texture/AbstractTexture elj
	blur b
	id a
	mipmap c
	bind ()V d
	getId ()I b
	load (Lnet/minecraft/server/packs/resources/ResourceManager;)V a
	releaseId ()V c
	reset (Lnet/minecraft/client/renderer/texture/TextureManager;Lnet/minecraft/server/packs/resources/ResourceManager;Lnet/minecraft/resources/ResourceLocation;Ljava/util/concurrent/Executor;)V a
	setFilter (ZZ)V a
net/minecraft/client/renderer/texture/AtlasSet elk
	atlases a
	getAtlas (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/client/renderer/texture/TextureAtlas; a
	getSprite (Lnet/minecraft/client/resources/model/Material;)Lnet/minecraft/client/renderer/texture/TextureAtlasSprite; a
net/minecraft/client/renderer/texture/DynamicTexture ell
	pixels d
	getPixels ()Lcom/mojang/blaze3d/platform/NativeImage; e
	load (Lnet/minecraft/server/packs/resources/ResourceManager;)V a
	setPixels (Lcom/mojang/blaze3d/platform/NativeImage;)V a
	upload ()V a
net/minecraft/client/renderer/texture/HttpTexture elm
	LOGGER e
	file f
	future j
	onDownloaded i
	processLegacySkin h
	uploaded k
	urlString g
	doNotchTransparencyHack (Lcom/mojang/blaze3d/platform/NativeImage;IIII)V a
	load (Ljava/io/InputStream;)Lcom/mojang/blaze3d/platform/NativeImage; a
	load (Lnet/minecraft/server/packs/resources/ResourceManager;)V a
	loadCallback (Lcom/mojang/blaze3d/platform/NativeImage;)V a
	processLegacySkin (Lcom/mojang/blaze3d/platform/NativeImage;)Lcom/mojang/blaze3d/platform/NativeImage; c
	setNoAlpha (Lcom/mojang/blaze3d/platform/NativeImage;IIII)V b
	upload (Lcom/mojang/blaze3d/platform/NativeImage;)V b
net/minecraft/client/renderer/texture/MipmapGenerator eln
	POW22 a
	alphaBlend (IIIIZ)I a
	gammaBlend (IIIII)I a
	generateMipLevels (Lcom/mojang/blaze3d/platform/NativeImage;I)[Lcom/mojang/blaze3d/platform/NativeImage; a
	getPow22 (I)F a
net/minecraft/client/renderer/texture/MissingTextureAtlasSprite elo
	INFO e
	MISSING_IMAGE_DATA d
	MISSING_TEXTURE_LOCATION b
	missingTexture c
	getLocation ()Lnet/minecraft/resources/ResourceLocation; a
	getTexture ()Lnet/minecraft/client/renderer/texture/DynamicTexture; c
	info ()Lnet/minecraft/client/renderer/texture/TextureAtlasSprite$Info; b
	newInstance (Lnet/minecraft/client/renderer/texture/TextureAtlas;IIIII)Lnet/minecraft/client/renderer/texture/MissingTextureAtlasSprite; a
net/minecraft/client/renderer/texture/OverlayTexture elp
	NO_OVERLAY a
	texture b
	pack (FZ)I a
	pack (II)I a
	setupOverlayColor ()V a
	teardownOverlayColor ()V b
	u (F)I a
	v (Z)I a
net/minecraft/client/renderer/texture/PreloadedTexture elq
	future e
	executor (Ljava/util/concurrent/Executor;)Ljava/util/concurrent/Executor; a
	getFuture ()Ljava/util/concurrent/CompletableFuture; a
	getTextureImage (Lnet/minecraft/server/packs/resources/ResourceManager;)Lnet/minecraft/client/renderer/texture/SimpleTexture$TextureImage; b
	reset (Lnet/minecraft/client/renderer/texture/TextureManager;Lnet/minecraft/server/packs/resources/ResourceManager;Lnet/minecraft/resources/ResourceLocation;Ljava/util/concurrent/Executor;)V a
net/minecraft/client/renderer/texture/SimpleTexture elr
	LOGGER e
	location d
	doLoad (Lcom/mojang/blaze3d/platform/NativeImage;ZZ)V a
	getTextureImage (Lnet/minecraft/server/packs/resources/ResourceManager;)Lnet/minecraft/client/renderer/texture/SimpleTexture$TextureImage; b
	load (Lnet/minecraft/server/packs/resources/ResourceManager;)V a
net/minecraft/client/renderer/texture/SimpleTexture$TextureImage elr$a
	exception c
	image b
	metadata a
	getImage ()Lcom/mojang/blaze3d/platform/NativeImage; b
	getTextureMetadata ()Lnet/minecraft/client/resources/metadata/texture/TextureMetadataSection; a
	load (Lnet/minecraft/server/packs/resources/ResourceManager;Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/client/renderer/texture/SimpleTexture$TextureImage; a
	throwIfError ()V c
net/minecraft/client/renderer/texture/Stitcher els
	HOLDER_COMPARATOR a
	maxHeight h
	maxWidth g
	mipLevel b
	storage d
	storageX e
	storageY f
	texturesToBeStitched c
	addToStorage (Lnet/minecraft/client/renderer/texture/Stitcher$Holder;)Z a
	expand (Lnet/minecraft/client/renderer/texture/Stitcher$Holder;)Z b
	gatherSprites (Lnet/minecraft/client/renderer/texture/Stitcher$SpriteLoader;)V a
	getHeight ()I b
	getWidth ()I a
	registerSprite (Lnet/minecraft/client/renderer/texture/TextureAtlasSprite$Info;)V a
	smallestFittingMinTexel (II)I b
	stitch ()V c
net/minecraft/client/renderer/texture/Stitcher$Holder els$a
	height c
	spriteInfo a
	width b
net/minecraft/client/renderer/texture/Stitcher$Region els$b
	height d
	holder f
	originX a
	originY b
	subSlots e
	width c
	add (Lnet/minecraft/client/renderer/texture/Stitcher$Holder;)Z a
	getHolder ()Lnet/minecraft/client/renderer/texture/Stitcher$Holder; a
	getX ()I b
	getY ()I c
	walk (Ljava/util/function/Consumer;)V a
net/minecraft/client/renderer/texture/Stitcher$SpriteLoader els$c
net/minecraft/client/renderer/texture/StitcherException elt
	allSprites a
	getAllSprites ()Ljava/util/Collection; a
net/minecraft/client/renderer/texture/TextureAtlas elu
	LOCATION_BLOCKS d
	LOCATION_PARTICLES e
	LOGGER f
	animatedTextures g
	location j
	maxSupportedTextureSize k
	sprites h
	texturesByName i
	clearTextureData ()V f
	cycleAnimationFrames ()V a
	getBasicSpriteInfos (Lnet/minecraft/server/packs/resources/ResourceManager;Ljava/util/Set;)Ljava/util/Collection; a
	getLoadedSprites (Lnet/minecraft/server/packs/resources/ResourceManager;Lnet/minecraft/client/renderer/texture/Stitcher;I)Ljava/util/List; a
	getResourceLocation (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/resources/ResourceLocation; b
	getSprite (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/client/renderer/texture/TextureAtlasSprite; a
	getTexture (Ljava/lang/String;)Lnet/minecraft/client/renderer/texture/TextureAtlasSprite; a
	load (Lnet/minecraft/server/packs/resources/ResourceManager;)V a
	load (Lnet/minecraft/server/packs/resources/ResourceManager;Lnet/minecraft/client/renderer/texture/TextureAtlasSprite$Info;IIIII)Lnet/minecraft/client/renderer/texture/TextureAtlasSprite; a
	location ()Lnet/minecraft/resources/ResourceLocation; g
	prepareToStitch (Lnet/minecraft/server/packs/resources/ResourceManager;Ljava/util/stream/Stream;Lnet/minecraft/util/profiling/ProfilerFiller;I)Lnet/minecraft/client/renderer/texture/TextureAtlas$Preparations; a
	register (Ljava/util/Set;Lnet/minecraft/resources/ResourceLocation;)V a
	reload (Lnet/minecraft/client/renderer/texture/TextureAtlas$Preparations;)V a
	tick ()V e
	updateFilter (Lnet/minecraft/client/renderer/texture/TextureAtlas$Preparations;)V b
net/minecraft/client/renderer/texture/TextureAtlas$Preparations elu$a
	height c
	mipLevel d
	regions e
	sprites a
	width b
net/minecraft/client/renderer/texture/TextureAtlasSprite elv
	atlas b
	frame n
	framesX e
	framesY f
	info c
	interpolationData g
	mainImage a
	metadata d
	subFrame o
	u0 j
	u1 k
	v0 l
	v1 m
	x h
	y i
	atlas ()Lnet/minecraft/client/renderer/texture/TextureAtlas; m
	atlasSize ()F a
	cycleFrames ()V q
	fixupMipTransparency ([[I)V a
	getFrameCount ()I n
	getHeight ()I g
	getName ()Lnet/minecraft/resources/ResourceLocation; l
	getU (D)F a
	getU0 ()F h
	getU1 ()F i
	getUOffset (F)F a
	getV (D)F b
	getV0 ()F j
	getV1 ()F k
	getVOffset (F)F b
	getWidth ()I f
	getX ()I d
	getY ()I e
	isAnimation ()Z r
	isTransparent (III)Z a
	upload (I)V a
	upload (II[Lcom/mojang/blaze3d/platform/NativeImage;)V a
	uploadFirstFrame ()V o
	uvShrinkRatio ()F p
	wrap (Lcom/mojang/blaze3d/vertex/VertexConsumer;)Lcom/mojang/blaze3d/vertex/VertexConsumer; a
net/minecraft/client/renderer/texture/TextureAtlasSprite$Info elv$a
	height c
	metadata d
	name a
	width b
	height ()I c
	name ()Lnet/minecraft/resources/ResourceLocation; a
	width ()I b
net/minecraft/client/renderer/texture/TextureAtlasSprite$InterpolationData elv$b
	activeFrame b
	getPixel (IIII)I a
	mix (DII)I a
	uploadInterpolatedFrame ()V a
net/minecraft/client/renderer/texture/TextureManager elw
	INTENTIONAL_MISSING_TEXTURE a
	LOGGER b
	byPath c
	prefixRegister e
	resourceManager f
	tickableTextures d
	_bind (Lnet/minecraft/resources/ResourceLocation;)V d
	bind (Lnet/minecraft/resources/ResourceLocation;)V a
	execute (Ljava/lang/Runnable;)V a
	getTexture (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/client/renderer/texture/AbstractTexture; b
	loadTexture (Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/client/renderer/texture/AbstractTexture;)Lnet/minecraft/client/renderer/texture/AbstractTexture; b
	preload (Lnet/minecraft/resources/ResourceLocation;Ljava/util/concurrent/Executor;)Ljava/util/concurrent/CompletableFuture; a
	register (Ljava/lang/String;Lnet/minecraft/client/renderer/texture/DynamicTexture;)Lnet/minecraft/resources/ResourceLocation; a
	register (Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/client/renderer/texture/AbstractTexture;)V a
	release (Lnet/minecraft/resources/ResourceLocation;)V c
	reload (Lnet/minecraft/server/packs/resources/PreparableReloadListener$PreparationBarrier;Lnet/minecraft/server/packs/resources/ResourceManager;Lnet/minecraft/util/profiling/ProfilerFiller;Lnet/minecraft/util/profiling/ProfilerFiller;Ljava/util/concurrent/Executor;Ljava/util/concurrent/Executor;)Ljava/util/concurrent/CompletableFuture; a
	tick ()V e
net/minecraft/client/renderer/texture/Tickable elx
	tick ()V e
net/minecraft/client/resources/AssetIndex elz
	LOGGER a
	namespacedFiles c
	rootFiles b
	getFile (Lnet/minecraft/resources/ResourceLocation;)Ljava/io/File; a
	getFiles (Ljava/lang/String;Ljava/lang/String;ILjava/util/function/Predicate;)Ljava/util/Collection; a
	getRootFile (Ljava/lang/String;)Ljava/io/File; a
net/minecraft/client/resources/ClientPackSource ema
	LOGGER a
	SHA1 b
	assetIndex f
	currentDownload g
	downloadLock e
	serverPack h
	serverPackDir d
	vanillaPack c
	checkHash (Ljava/lang/String;Ljava/io/File;)Z a
	clearOldDownloads ()V d
	clearServerPack ()V c
	createProgrammerArtDirPack (Ljava/io/File;)Lnet/minecraft/server/packs/FolderPackResources; b
	createProgrammerArtPack (Lnet/minecraft/server/packs/repository/Pack$PackConstructor;)Lnet/minecraft/server/packs/repository/Pack; a
	createProgrammerArtPack (Lnet/minecraft/server/packs/repository/Pack$PackConstructor;Ljava/util/function/Supplier;)Lnet/minecraft/server/packs/repository/Pack; a
	createProgrammerArtZipPack (Ljava/io/File;)Lnet/minecraft/server/packs/PackResources; c
	deleteQuietly (Ljava/io/File;)V a
	downloadAndSelectResourcePack (Ljava/lang/String;Ljava/lang/String;)Ljava/util/concurrent/CompletableFuture; a
	getDownloadHeaders ()Ljava/util/Map; b
	getVanillaPack ()Lnet/minecraft/server/packs/VanillaPackResources; a
	loadPacks (Ljava/util/function/Consumer;Lnet/minecraft/server/packs/repository/Pack$PackConstructor;)V a
	setServerPack (Ljava/io/File;Lnet/minecraft/server/packs/repository/PackSource;)Ljava/util/concurrent/CompletableFuture; a
net/minecraft/client/resources/DefaultClientPackResources emb
	assetIndex d
	getResourceAsStream (Ljava/lang/String;)Ljava/io/InputStream; a
	getResourceAsStream (Lnet/minecraft/server/packs/PackType;Lnet/minecraft/resources/ResourceLocation;)Ljava/io/InputStream; c
	getResources (Lnet/minecraft/server/packs/PackType;Ljava/lang/String;Ljava/lang/String;ILjava/util/function/Predicate;)Ljava/util/Collection; a
	hasResource (Lnet/minecraft/server/packs/PackType;Lnet/minecraft/resources/ResourceLocation;)Z b
net/minecraft/client/resources/DefaultPlayerSkin emc
	ALEX_SKIN_LOCATION b
	STEVE_SKIN_LOCATION a
	getDefaultSkin ()Lnet/minecraft/resources/ResourceLocation; a
	getDefaultSkin (Ljava/util/UUID;)Lnet/minecraft/resources/ResourceLocation; a
	getSkinModelName (Ljava/util/UUID;)Ljava/lang/String; b
	isAlexDefault (Ljava/util/UUID;)Z c
net/minecraft/client/resources/DirectAssetIndex emd
	assetsDirectory b
	getFile (Lnet/minecraft/resources/ResourceLocation;)Ljava/io/File; a
	getFiles (Ljava/lang/String;Ljava/lang/String;ILjava/util/function/Predicate;)Ljava/util/Collection; a
	getRootFile (Ljava/lang/String;)Ljava/io/File; a
net/minecraft/client/resources/FoliageColorReloadListener eme
	LOCATION a
	apply (Ljava/lang/Object;Lnet/minecraft/server/packs/resources/ResourceManager;Lnet/minecraft/util/profiling/ProfilerFiller;)V a
	apply ([ILnet/minecraft/server/packs/resources/ResourceManager;Lnet/minecraft/util/profiling/ProfilerFiller;)V a
	prepare (Lnet/minecraft/server/packs/resources/ResourceManager;Lnet/minecraft/util/profiling/ProfilerFiller;)Ljava/lang/Object; b
	prepare (Lnet/minecraft/server/packs/resources/ResourceManager;Lnet/minecraft/util/profiling/ProfilerFiller;)[I a
net/minecraft/client/resources/GrassColorReloadListener emf
	LOCATION a
	apply (Ljava/lang/Object;Lnet/minecraft/server/packs/resources/ResourceManager;Lnet/minecraft/util/profiling/ProfilerFiller;)V a
	apply ([ILnet/minecraft/server/packs/resources/ResourceManager;Lnet/minecraft/util/profiling/ProfilerFiller;)V a
	prepare (Lnet/minecraft/server/packs/resources/ResourceManager;Lnet/minecraft/util/profiling/ProfilerFiller;)Ljava/lang/Object; b
	prepare (Lnet/minecraft/server/packs/resources/ResourceManager;Lnet/minecraft/util/profiling/ProfilerFiller;)[I a
net/minecraft/client/resources/LegacyPackResourcesAdapter emg
	V3 a
	patches c
	source b
	getMetadataSection (Lnet/minecraft/server/packs/metadata/MetadataSectionSerializer;)Ljava/lang/Object; a
	getName ()Ljava/lang/String; a
	getNamespaces (Lnet/minecraft/server/packs/PackType;)Ljava/util/Set; a
	getResource (Lnet/minecraft/server/packs/PackType;Lnet/minecraft/resources/ResourceLocation;)Ljava/io/InputStream; a
	getResources (Lnet/minecraft/server/packs/PackType;Ljava/lang/String;Ljava/lang/String;ILjava/util/function/Predicate;)Ljava/util/Collection; a
	getRootResource (Ljava/lang/String;)Ljava/io/InputStream; b
	hasResource (Lnet/minecraft/server/packs/PackType;Lnet/minecraft/resources/ResourceLocation;)Z b
	map (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/resources/ResourceLocation; b
	toMetaLocation (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/resources/ResourceLocation; a
net/minecraft/client/resources/LegacyStuffWrapper emh
	getPixels (Lnet/minecraft/server/packs/resources/ResourceManager;Lnet/minecraft/resources/ResourceLocation;)[I a
net/minecraft/client/resources/MobEffectTextureManager emi
	get (Lnet/minecraft/world/effect/MobEffect;)Lnet/minecraft/client/renderer/texture/TextureAtlasSprite; a
	getResourcesToLoad ()Ljava/util/stream/Stream; a
net/minecraft/client/resources/PackResourcesAdapterV4 emj
	BANNERS g
	BANNER_BASE b
	CHESTS d
	OLD_IRON_GOLEM_LOCATION c
	PATTERNS e
	SHIELDS f
	SHIELD_BASE a
	pack h
	copyRect (Lcom/mojang/blaze3d/platform/NativeImage;Lcom/mojang/blaze3d/platform/NativeImage;IIIIIIIZZ)V a
	fixConduitEyeTexture (Ljava/io/InputStream;)Ljava/io/InputStream; a
	fixLeftChest (Ljava/io/InputStream;)Ljava/io/InputStream; b
	fixPattern (Ljava/io/InputStream;Ljava/io/InputStream;IIIII)Ljava/io/InputStream; a
	fixRightChest (Ljava/io/InputStream;)Ljava/io/InputStream; c
	fixSingleChest (Ljava/io/InputStream;)Ljava/io/InputStream; d
	getMetadataSection (Lnet/minecraft/server/packs/metadata/MetadataSectionSerializer;)Ljava/lang/Object; a
	getName ()Ljava/lang/String; a
	getNamespaces (Lnet/minecraft/server/packs/PackType;)Ljava/util/Set; a
	getResource (Lnet/minecraft/server/packs/PackType;Lnet/minecraft/resources/ResourceLocation;)Ljava/io/InputStream; a
	getResources (Lnet/minecraft/server/packs/PackType;Ljava/lang/String;Ljava/lang/String;ILjava/util/function/Predicate;)Ljava/util/Collection; a
	getRootResource (Ljava/lang/String;)Ljava/io/InputStream; b
	hasResource (Lnet/minecraft/server/packs/PackType;Lnet/minecraft/resources/ResourceLocation;)Z b
net/minecraft/client/resources/PaintingTextureManager emk
	BACK_SPRITE_LOCATION a
	get (Lnet/minecraft/world/entity/decoration/Motive;)Lnet/minecraft/client/renderer/texture/TextureAtlasSprite; a
	getBackSprite ()Lnet/minecraft/client/renderer/texture/TextureAtlasSprite; b
	getResourcesToLoad ()Ljava/util/stream/Stream; a
net/minecraft/client/resources/ResourcePack eml
	icon a
	iconLocation b
	bindIcon (Lnet/minecraft/client/renderer/texture/TextureManager;)V a
	getIcon ()Lcom/mojang/blaze3d/platform/NativeImage; j
	readIcon (Lnet/minecraft/server/packs/PackResources;)Lcom/mojang/blaze3d/platform/NativeImage; a
net/minecraft/client/resources/SkinManager emm
	insecureSkinCache d
	sessionService c
	skinsDirectory b
	textureManager a
	getInsecureSkinInformation (Lcom/mojang/authlib/GameProfile;)Ljava/util/Map; a
	registerSkins (Lcom/mojang/authlib/GameProfile;Lnet/minecraft/client/resources/SkinManager$SkinTextureCallback;Z)V a
	registerTexture (Lcom/mojang/authlib/minecraft/MinecraftProfileTexture;Lcom/mojang/authlib/minecraft/MinecraftProfileTexture$Type;)Lnet/minecraft/resources/ResourceLocation; a
	registerTexture (Lcom/mojang/authlib/minecraft/MinecraftProfileTexture;Lcom/mojang/authlib/minecraft/MinecraftProfileTexture$Type;Lnet/minecraft/client/resources/SkinManager$SkinTextureCallback;)Lnet/minecraft/resources/ResourceLocation; a
net/minecraft/client/resources/SkinManager$SkinTextureCallback emm$a
net/minecraft/client/resources/SplashManager emn
	RANDOM b
	SPLASHES_LOCATION a
	splashes c
	user d
	apply (Ljava/lang/Object;Lnet/minecraft/server/packs/resources/ResourceManager;Lnet/minecraft/util/profiling/ProfilerFiller;)V a
	apply (Ljava/util/List;Lnet/minecraft/server/packs/resources/ResourceManager;Lnet/minecraft/util/profiling/ProfilerFiller;)V a
	getSplash ()Ljava/lang/String; a
	prepare (Lnet/minecraft/server/packs/resources/ResourceManager;Lnet/minecraft/util/profiling/ProfilerFiller;)Ljava/lang/Object; b
	prepare (Lnet/minecraft/server/packs/resources/ResourceManager;Lnet/minecraft/util/profiling/ProfilerFiller;)Ljava/util/List; a
net/minecraft/client/resources/TextureAtlasHolder emo
	prefix b
	textureAtlas a
	apply (Ljava/lang/Object;Lnet/minecraft/server/packs/resources/ResourceManager;Lnet/minecraft/util/profiling/ProfilerFiller;)V a
	apply (Lnet/minecraft/client/renderer/texture/TextureAtlas$Preparations;Lnet/minecraft/server/packs/resources/ResourceManager;Lnet/minecraft/util/profiling/ProfilerFiller;)V a
	getResourcesToLoad ()Ljava/util/stream/Stream; a
	getSprite (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/client/renderer/texture/TextureAtlasSprite; a
	prepare (Lnet/minecraft/server/packs/resources/ResourceManager;Lnet/minecraft/util/profiling/ProfilerFiller;)Ljava/lang/Object; b
	prepare (Lnet/minecraft/server/packs/resources/ResourceManager;Lnet/minecraft/util/profiling/ProfilerFiller;)Lnet/minecraft/client/renderer/texture/TextureAtlas$Preparations; a
	resolveLocation (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/resources/ResourceLocation; b
net/minecraft/client/resources/language/ClientLanguage emp
	FORMAT_PATTERN b
	LOGGER a
	requiresReordering d
	storage c
	appendFrom (Ljava/util/List;Ljava/util/Map;)V a
	getOrDefault (Ljava/lang/String;)Ljava/lang/String; a
	has (Ljava/lang/String;)Z b
	loadFrom (Lnet/minecraft/server/packs/resources/ResourceManager;Ljava/util/List;)Lnet/minecraft/client/resources/language/ClientLanguage; a
	reorder (Ljava/lang/String;)Ljava/lang/String; d
	reorder (Ljava/lang/String;Z)Ljava/lang/String; a
	requiresReordering ()Z b
	wrapFormatCodes (Ljava/lang/String;)Ljava/lang/String; c
net/minecraft/client/resources/language/I18n emq
	language a
	exists (Ljava/lang/String;)Z a
	get (Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String; a
	setLanguage (Lnet/minecraft/locale/Language;)V a
net/minecraft/client/resources/language/LanguageInfo emr
	bidirectional d
	code a
	name c
	region b
	compareTo (Lnet/minecraft/client/resources/language/LanguageInfo;)I a
	isBidirectional ()Z a
net/minecraft/client/resources/language/LanguageManager ems
	DEFAULT_LANGUAGE b
	LOGGER a
	currentCode d
	currentLanguage e
	languages c
	extractLanguages (Ljava/util/stream/Stream;)Ljava/util/Map; a
	getLanguage (Ljava/lang/String;)Lnet/minecraft/client/resources/language/LanguageInfo; a
	getLanguages ()Ljava/util/SortedSet; d
	getSelected ()Lnet/minecraft/client/resources/language/LanguageInfo; b
	isBidirectional ()Z a
	onResourceManagerReload (Lnet/minecraft/server/packs/resources/ResourceManager;)V a
	setSelected (Lnet/minecraft/client/resources/language/LanguageInfo;)V a
net/minecraft/client/resources/metadata/animation/AnimationFrame emu
	index a
	time b
	getIndex ()I c
	getTime ()I b
	isTimeUnknown ()Z a
net/minecraft/client/resources/metadata/animation/AnimationMetadataSection emv
	EMPTY b
	SERIALIZER a
	defaultFrameTime f
	frameHeight e
	frameWidth d
	frames c
	interpolatedFrames g
	calculateFrameSize (II)Lcom/mojang/datafixers/util/Pair; c
	getDefaultFrameTime ()I b
	getFrame (I)Lnet/minecraft/client/resources/metadata/animation/AnimationFrame; f
	getFrameCount ()I a
	getFrameHeight (I)I a
	getFrameIndex (I)I e
	getFrameSize (II)Lcom/mojang/datafixers/util/Pair; a
	getFrameTime (I)I c
	getFrameWidth (I)I b
	getUniqueFrameIndices ()Ljava/util/Set; d
	hasCustomFrameTime (I)Z d
	isDivisionInteger (II)Z b
	isInterpolatedFrames ()Z c
net/minecraft/client/resources/metadata/animation/AnimationMetadataSectionSerializer emw
	fromJson (Lcom/google/gson/JsonObject;)Ljava/lang/Object; a
	fromJson (Lcom/google/gson/JsonObject;)Lnet/minecraft/client/resources/metadata/animation/AnimationMetadataSection; b
	getFrame (ILcom/google/gson/JsonElement;)Lnet/minecraft/client/resources/metadata/animation/AnimationFrame; a
	getMetadataSectionName ()Ljava/lang/String; a
net/minecraft/client/resources/metadata/animation/VillagerMetaDataSection emx
	SERIALIZER a
	hat b
	getHat ()Lnet/minecraft/client/resources/metadata/animation/VillagerMetaDataSection$Hat; a
net/minecraft/client/resources/metadata/animation/VillagerMetaDataSection$Hat emx$a
	$VALUES f
	BY_NAME d
	FULL c
	NONE a
	PARTIAL b
	name e
	getByName (Ljava/lang/String;)Lnet/minecraft/client/resources/metadata/animation/VillagerMetaDataSection$Hat; a
	getName ()Ljava/lang/String; a
net/minecraft/client/resources/metadata/animation/VillagerMetadataSectionSerializer emy
	fromJson (Lcom/google/gson/JsonObject;)Ljava/lang/Object; a
	fromJson (Lcom/google/gson/JsonObject;)Lnet/minecraft/client/resources/metadata/animation/VillagerMetaDataSection; b
	getMetadataSectionName ()Ljava/lang/String; a
net/minecraft/client/resources/metadata/language/LanguageMetadataSection ena
	SERIALIZER a
	languages b
	getLanguages ()Ljava/util/Collection; a
net/minecraft/client/resources/metadata/language/LanguageMetadataSectionSerializer enb
	fromJson (Lcom/google/gson/JsonObject;)Ljava/lang/Object; a
	fromJson (Lcom/google/gson/JsonObject;)Lnet/minecraft/client/resources/metadata/language/LanguageMetadataSection; b
	getMetadataSectionName ()Ljava/lang/String; a
net/minecraft/client/resources/metadata/texture/TextureMetadataSection ene
	SERIALIZER a
	blur b
	clamp c
	isBlur ()Z a
	isClamp ()Z b
net/minecraft/client/resources/metadata/texture/TextureMetadataSectionSerializer enf
	fromJson (Lcom/google/gson/JsonObject;)Ljava/lang/Object; a
	fromJson (Lcom/google/gson/JsonObject;)Lnet/minecraft/client/resources/metadata/texture/TextureMetadataSection; b
	getMetadataSectionName ()Ljava/lang/String; a
net/minecraft/client/resources/model/BakedModel enh
	getOverrides ()Lnet/minecraft/client/renderer/block/model/ItemOverrides; g
	getParticleIcon ()Lnet/minecraft/client/renderer/texture/TextureAtlasSprite; e
	getQuads (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Ljava/util/Random;)Ljava/util/List; a
	getTransforms ()Lnet/minecraft/client/renderer/block/model/ItemTransforms; f
	isCustomRenderer ()Z d
	isGui3d ()Z b
	useAmbientOcclusion ()Z a
	usesBlockLight ()Z c
net/minecraft/client/resources/model/BlockModelRotation eni
	$VALUES u
	BY_INDEX q
	X0_Y0 a
	X0_Y180 c
	X0_Y270 d
	X0_Y90 b
	X180_Y0 i
	X180_Y180 k
	X180_Y270 l
	X180_Y90 j
	X270_Y0 m
	X270_Y180 o
	X270_Y270 p
	X270_Y90 n
	X90_Y0 e
	X90_Y180 g
	X90_Y270 h
	X90_Y90 f
	actualRotation s
	index t
	transformation r
	actualRotation ()Lcom/mojang/math/OctahedralGroup; a
	by (II)Lnet/minecraft/client/resources/model/BlockModelRotation; a
	getIndex (II)I b
	getRotation ()Lcom/mojang/math/Transformation; b
net/minecraft/client/resources/model/BuiltInModel enj
	itemTransforms a
	overrides b
	particleTexture c
	usesBlockLight d
	getOverrides ()Lnet/minecraft/client/renderer/block/model/ItemOverrides; g
	getParticleIcon ()Lnet/minecraft/client/renderer/texture/TextureAtlasSprite; e
	getQuads (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Ljava/util/Random;)Ljava/util/List; a
	getTransforms ()Lnet/minecraft/client/renderer/block/model/ItemTransforms; f
	isCustomRenderer ()Z d
	isGui3d ()Z b
	useAmbientOcclusion ()Z a
	usesBlockLight ()Z c
net/minecraft/client/resources/model/Material enk
	atlasLocation a
	renderType c
	texture b
	atlasLocation ()Lnet/minecraft/resources/ResourceLocation; a
	buffer (Lnet/minecraft/client/renderer/MultiBufferSource;Ljava/util/function/Function;)Lcom/mojang/blaze3d/vertex/VertexConsumer; a
	buffer (Lnet/minecraft/client/renderer/MultiBufferSource;Ljava/util/function/Function;Z)Lcom/mojang/blaze3d/vertex/VertexConsumer; a
	renderType (Ljava/util/function/Function;)Lnet/minecraft/client/renderer/RenderType; a
	sprite ()Lnet/minecraft/client/renderer/texture/TextureAtlasSprite; c
	texture ()Lnet/minecraft/resources/ResourceLocation; b
net/minecraft/client/resources/model/ModelBakery enl
	BANNER_BASE f
	BLOCK_ENTITY_MARKER o
	BREAKING_LOCATIONS j
	BUILTIN_MODELS s
	COMMA_SPLITTER t
	DESTROY_STAGES i
	DESTROY_TYPES k
	EQUAL_SPLITTER u
	FIRE_0 a
	FIRE_1 b
	GENERATION_MARKER n
	ITEM_FRAME_FAKE_DEFINITION v
	ITEM_MODEL_GENERATOR w
	LAVA_FLOW c
	LOGGER q
	MISSING_MODEL_LOCATION l
	MISSING_MODEL_LOCATION_STRING r
	MISSING_MODEL_MESH m
	NO_PATTERN_SHIELD h
	SHIELD_BASE g
	STATIC_DEFINITIONS x
	UNREFERENCED_TEXTURES p
	WATER_FLOW d
	WATER_OVERLAY e
	atlasPreparations H
	atlasSet z
	bakedCache E
	bakedTopLevelModels G
	blockColors A
	context C
	loadingStack B
	modelGroups J
	nextModelGroup I
	resourceManager y
	topLevelModels F
	unbakedCache D
	bake (Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/client/resources/model/ModelState;)Lnet/minecraft/client/resources/model/BakedModel; a
	cacheAndQueueDependencies (Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/client/resources/model/UnbakedModel;)V a
	getBakedTopLevelModels ()Ljava/util/Map; a
	getModel (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/client/resources/model/UnbakedModel; a
	getModelGroups ()Lit/unimi/dsi/fastutil/objects/Object2IntMap; b
	getValueHelper (Lnet/minecraft/world/level/block/state/properties/Property;Ljava/lang/String;)Ljava/lang/Comparable; a
	loadBlockModel (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/client/renderer/block/model/BlockModel; c
	loadModel (Lnet/minecraft/resources/ResourceLocation;)V b
	loadTopLevel (Lnet/minecraft/client/resources/model/ModelResourceLocation;)V a
	predicate (Lnet/minecraft/world/level/block/state/StateDefinition;Ljava/lang/String;)Ljava/util/function/Predicate; a
	registerModelGroup (Ljava/lang/Iterable;)V a
	uploadTextures (Lnet/minecraft/client/renderer/texture/TextureManager;Lnet/minecraft/util/profiling/ProfilerFiller;)Lnet/minecraft/client/renderer/texture/AtlasSet; a
net/minecraft/client/resources/model/ModelBakery$BlockStateDefinitionException enl$a
net/minecraft/client/resources/model/ModelBakery$ModelGroupKey enl$b
	coloringValues b
	models a
	create (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/client/renderer/block/model/multipart/MultiPart;Ljava/util/Collection;)Lnet/minecraft/client/resources/model/ModelBakery$ModelGroupKey; a
	create (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/client/resources/model/UnbakedModel;Ljava/util/Collection;)Lnet/minecraft/client/resources/model/ModelBakery$ModelGroupKey; a
	getColoringValues (Lnet/minecraft/world/level/block/state/BlockState;Ljava/util/Collection;)Ljava/util/List; a
net/minecraft/client/resources/model/ModelManager enm
	atlases b
	bakedRegistry a
	blockColors e
	blockModelShaper c
	maxMipmapLevels f
	missingModel g
	modelGroups h
	textureManager d
	apply (Ljava/lang/Object;Lnet/minecraft/server/packs/resources/ResourceManager;Lnet/minecraft/util/profiling/ProfilerFiller;)V a
	apply (Lnet/minecraft/client/resources/model/ModelBakery;Lnet/minecraft/server/packs/resources/ResourceManager;Lnet/minecraft/util/profiling/ProfilerFiller;)V a
	getAtlas (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/client/renderer/texture/TextureAtlas; a
	getBlockModelShaper ()Lnet/minecraft/client/renderer/block/BlockModelShaper; b
	getMissingModel ()Lnet/minecraft/client/resources/model/BakedModel; a
	getModel (Lnet/minecraft/client/resources/model/ModelResourceLocation;)Lnet/minecraft/client/resources/model/BakedModel; a
	prepare (Lnet/minecraft/server/packs/resources/ResourceManager;Lnet/minecraft/util/profiling/ProfilerFiller;)Ljava/lang/Object; b
	prepare (Lnet/minecraft/server/packs/resources/ResourceManager;Lnet/minecraft/util/profiling/ProfilerFiller;)Lnet/minecraft/client/resources/model/ModelBakery; a
	requiresRender (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/state/BlockState;)Z a
	updateMaxMipLevel (I)V a
net/minecraft/client/resources/model/ModelResourceLocation enn
	variant d
	decompose (Ljava/lang/String;)[Ljava/lang/String; c
	getVariant ()Ljava/lang/String; d
net/minecraft/client/resources/model/ModelState eno
	getRotation ()Lcom/mojang/math/Transformation; b
	isUvLocked ()Z c
net/minecraft/client/resources/model/MultiPartBakedModel enp
	hasAmbientOcclusion a
	isGui3d b
	overrides f
	particleIcon d
	selectorCache h
	selectors g
	transforms e
	usesBlockLight c
	getOverrides ()Lnet/minecraft/client/renderer/block/model/ItemOverrides; g
	getParticleIcon ()Lnet/minecraft/client/renderer/texture/TextureAtlasSprite; e
	getQuads (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Ljava/util/Random;)Ljava/util/List; a
	getTransforms ()Lnet/minecraft/client/renderer/block/model/ItemTransforms; f
	isCustomRenderer ()Z d
	isGui3d ()Z b
	useAmbientOcclusion ()Z a
	usesBlockLight ()Z c
net/minecraft/client/resources/model/MultiPartBakedModel$Builder enp$a
	selectors a
	add (Ljava/util/function/Predicate;Lnet/minecraft/client/resources/model/BakedModel;)V a
	build ()Lnet/minecraft/client/resources/model/BakedModel; a
net/minecraft/client/resources/model/SimpleBakedModel enq
	culledFaces b
	hasAmbientOcclusion c
	isGui3d d
	overrides h
	particleIcon f
	transforms g
	unculledFaces a
	usesBlockLight e
	getOverrides ()Lnet/minecraft/client/renderer/block/model/ItemOverrides; g
	getParticleIcon ()Lnet/minecraft/client/renderer/texture/TextureAtlasSprite; e
	getQuads (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Ljava/util/Random;)Ljava/util/List; a
	getTransforms ()Lnet/minecraft/client/renderer/block/model/ItemTransforms; f
	isCustomRenderer ()Z d
	isGui3d ()Z b
	useAmbientOcclusion ()Z a
	usesBlockLight ()Z c
net/minecraft/client/resources/model/SimpleBakedModel$Builder enq$a
	culledFaces b
	hasAmbientOcclusion d
	isGui3d g
	overrides c
	particleIcon e
	transforms h
	unculledFaces a
	usesBlockLight f
	addCulledFace (Lnet/minecraft/core/Direction;Lnet/minecraft/client/renderer/block/model/BakedQuad;)Lnet/minecraft/client/resources/model/SimpleBakedModel$Builder; a
	addUnculledFace (Lnet/minecraft/client/renderer/block/model/BakedQuad;)Lnet/minecraft/client/resources/model/SimpleBakedModel$Builder; a
	build ()Lnet/minecraft/client/resources/model/BakedModel; b
	item ()Lnet/minecraft/client/resources/model/SimpleBakedModel$Builder; a
	particle (Lnet/minecraft/client/renderer/texture/TextureAtlasSprite;)Lnet/minecraft/client/resources/model/SimpleBakedModel$Builder; a
net/minecraft/client/resources/model/UnbakedModel enr
	bake (Lnet/minecraft/client/resources/model/ModelBakery;Ljava/util/function/Function;Lnet/minecraft/client/resources/model/ModelState;Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/client/resources/model/BakedModel; a
	getDependencies ()Ljava/util/Collection; f
	getMaterials (Ljava/util/function/Function;Ljava/util/Set;)Ljava/util/Collection; a
net/minecraft/client/resources/model/WeightedBakedModel ens
	list b
	totalWeight a
	wrapped c
	getOverrides ()Lnet/minecraft/client/renderer/block/model/ItemOverrides; g
	getParticleIcon ()Lnet/minecraft/client/renderer/texture/TextureAtlasSprite; e
	getQuads (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Ljava/util/Random;)Ljava/util/List; a
	getTransforms ()Lnet/minecraft/client/renderer/block/model/ItemTransforms; f
	isCustomRenderer ()Z d
	isGui3d ()Z b
	useAmbientOcclusion ()Z a
	usesBlockLight ()Z c
net/minecraft/client/resources/model/WeightedBakedModel$Builder ens$a
	list a
	add (Lnet/minecraft/client/resources/model/BakedModel;I)Lnet/minecraft/client/resources/model/WeightedBakedModel$Builder; a
	build ()Lnet/minecraft/client/resources/model/BakedModel; a
net/minecraft/client/resources/model/WeightedBakedModel$WeightedModel ens$b
	model b
net/minecraft/client/resources/sounds/AbstractSoundInstance env
	attenuation k
	delay j
	location c
	looping i
	pitch e
	priority l
	relative m
	sound a
	source b
	volume d
	x f
	y g
	z h
	getAttenuation ()Lnet/minecraft/client/resources/sounds/SoundInstance$Attenuation; k
	getDelay ()I e
	getLocation ()Lnet/minecraft/resources/ResourceLocation; a
	getPitch ()F g
	getSound ()Lnet/minecraft/client/resources/sounds/Sound; b
	getSource ()Lnet/minecraft/sounds/SoundSource; c
	getVolume ()F f
	getX ()D h
	getY ()D i
	getZ ()D j
	hasPriority ()Z l
	isLooping ()Z d
	isRelative ()Z m
	resolve (Lnet/minecraft/client/sounds/SoundManager;)Lnet/minecraft/client/sounds/WeighedSoundEvents; a
net/minecraft/client/resources/sounds/AbstractTickableSoundInstance enw
	stopped n
	isStopped ()Z n
	stop ()V o
net/minecraft/client/resources/sounds/AmbientSoundHandler enx
	tick ()V a
net/minecraft/client/resources/sounds/BeeAggressiveSoundInstance eny
	getAlternativeSoundInstance ()Lnet/minecraft/client/resources/sounds/AbstractTickableSoundInstance; p
	shouldSwitchSounds ()Z q
net/minecraft/client/resources/sounds/BeeFlyingSoundInstance enz
	getAlternativeSoundInstance ()Lnet/minecraft/client/resources/sounds/AbstractTickableSoundInstance; p
	shouldSwitchSounds ()Z q
net/minecraft/client/resources/sounds/BeeSoundInstance eoa
	bee n
	hasSwitched o
	canPlaySound ()Z t
	canStartSilent ()Z s
	getAlternativeSoundInstance ()Lnet/minecraft/client/resources/sounds/AbstractTickableSoundInstance; p
	getMaxPitch ()F v
	getMinPitch ()F u
	shouldSwitchSounds ()Z q
	tick ()V r
net/minecraft/client/resources/sounds/BiomeAmbientSoundsHandler eob
	additionsSettings g
	biomeManager c
	loopSounds e
	moodSettings f
	moodiness h
	player a
	previousBiome i
	random d
	soundManager b
	getMoodiness ()F b
	tick ()V a
net/minecraft/client/resources/sounds/BiomeAmbientSoundsHandler$LoopSoundInstance eob$a
	fade o
	fadeDirection n
	fadeIn ()V q
	fadeOut ()V p
	tick ()V r
net/minecraft/client/resources/sounds/BubbleColumnAmbientSoundHandler eoc
	firstTick c
	player a
	wasInBubbleColumn b
	tick ()V a
net/minecraft/client/resources/sounds/ElytraOnPlayerSoundInstance eod
	player n
	time o
	tick ()V r
net/minecraft/client/resources/sounds/EntityBoundSoundInstance eoe
	entity n
	canPlaySound ()Z t
	tick ()V r
net/minecraft/client/resources/sounds/GuardianAttackSoundInstance eof
	guardian n
	canPlaySound ()Z t
	tick ()V r
net/minecraft/client/resources/sounds/MinecartSoundInstance eog
	minecart n
	pitch o
	canPlaySound ()Z t
	canStartSilent ()Z s
	tick ()V r
net/minecraft/client/resources/sounds/RidingMinecartSoundInstance eoh
	minecart o
	player n
	canPlaySound ()Z t
	canStartSilent ()Z s
	tick ()V r
net/minecraft/client/resources/sounds/SimpleSoundInstance eoi
	forAmbientAddition (Lnet/minecraft/sounds/SoundEvent;)Lnet/minecraft/client/resources/sounds/SimpleSoundInstance; b
	forAmbientMood (Lnet/minecraft/sounds/SoundEvent;DDD)Lnet/minecraft/client/resources/sounds/SimpleSoundInstance; b
	forLocalAmbience (Lnet/minecraft/sounds/SoundEvent;FF)Lnet/minecraft/client/resources/sounds/SimpleSoundInstance; b
	forMusic (Lnet/minecraft/sounds/SoundEvent;)Lnet/minecraft/client/resources/sounds/SimpleSoundInstance; a
	forRecord (Lnet/minecraft/sounds/SoundEvent;DDD)Lnet/minecraft/client/resources/sounds/SimpleSoundInstance; a
	forUI (Lnet/minecraft/sounds/SoundEvent;F)Lnet/minecraft/client/resources/sounds/SimpleSoundInstance; a
	forUI (Lnet/minecraft/sounds/SoundEvent;FF)Lnet/minecraft/client/resources/sounds/SimpleSoundInstance; a
net/minecraft/client/resources/sounds/Sound eoj
	attenuationDistance h
	location a
	pitch c
	preload g
	stream f
	type e
	volume b
	weight d
	getAttenuationDistance ()I j
	getLocation ()Lnet/minecraft/resources/ResourceLocation; a
	getPath ()Lnet/minecraft/resources/ResourceLocation; b
	getPitch ()F d
	getSound ()Ljava/lang/Object; k
	getSound ()Lnet/minecraft/client/resources/sounds/Sound; f
	getType ()Lnet/minecraft/client/resources/sounds/Sound$Type; g
	getVolume ()F c
	getWeight ()I e
	preloadIfRequired (Lnet/minecraft/client/sounds/SoundEngine;)V a
	shouldPreload ()Z i
	shouldStream ()Z h
net/minecraft/client/resources/sounds/Sound$Type eoj$a
	$VALUES d
	FILE a
	SOUND_EVENT b
	name c
	getByName (Ljava/lang/String;)Lnet/minecraft/client/resources/sounds/Sound$Type; a
net/minecraft/client/resources/sounds/SoundEventRegistration eok
	replace b
	sounds a
	subtitle c
	getSounds ()Ljava/util/List; a
	getSubtitle ()Ljava/lang/String; c
	isReplace ()Z b
net/minecraft/client/resources/sounds/SoundEventRegistrationSerializer eol
	deserialize (Lcom/google/gson/JsonElement;Ljava/lang/reflect/Type;Lcom/google/gson/JsonDeserializationContext;)Lnet/minecraft/client/resources/sounds/SoundEventRegistration; a
	getSound (Lcom/google/gson/JsonObject;)Lnet/minecraft/client/resources/sounds/Sound; b
	getSounds (Lcom/google/gson/JsonObject;)Ljava/util/List; a
	getType (Lcom/google/gson/JsonObject;Lnet/minecraft/client/resources/sounds/Sound$Type;)Lnet/minecraft/client/resources/sounds/Sound$Type; a
net/minecraft/client/resources/sounds/SoundInstance eom
	canPlaySound ()Z t
	canStartSilent ()Z s
	getAttenuation ()Lnet/minecraft/client/resources/sounds/SoundInstance$Attenuation; k
	getDelay ()I e
	getLocation ()Lnet/minecraft/resources/ResourceLocation; a
	getPitch ()F g
	getSound ()Lnet/minecraft/client/resources/sounds/Sound; b
	getSource ()Lnet/minecraft/sounds/SoundSource; c
	getVolume ()F f
	getX ()D h
	getY ()D i
	getZ ()D j
	hasPriority ()Z l
	isLooping ()Z d
	isRelative ()Z m
	resolve (Lnet/minecraft/client/sounds/SoundManager;)Lnet/minecraft/client/sounds/WeighedSoundEvents; a
net/minecraft/client/resources/sounds/SoundInstance$Attenuation eom$a
	$VALUES c
	LINEAR b
	NONE a
net/minecraft/client/resources/sounds/TickableSoundInstance eon
	isStopped ()Z n
	tick ()V r
net/minecraft/client/resources/sounds/UnderwaterAmbientSoundHandler eoo
	player a
	soundManager b
	tickDelay c
	tick ()V a
net/minecraft/client/resources/sounds/UnderwaterAmbientSoundInstances eop
net/minecraft/client/resources/sounds/UnderwaterAmbientSoundInstances$SubSound eop$a
	player n
	tick ()V r
net/minecraft/client/resources/sounds/UnderwaterAmbientSoundInstances$UnderwaterAmbientSoundInstance eop$b
	fade o
	player n
	tick ()V r
net/minecraft/client/searchtree/MutableSearchTree eor
	add (Ljava/lang/Object;)V a
	clear ()V a
	refresh ()V b
net/minecraft/client/searchtree/ReloadableIdSearchTree eos
	contents d
	idGetter c
	namespaceTree a
	orderT e
	pathTree b
	add (Ljava/lang/Object;)V a
	clear ()V a
	comparePosition (Ljava/lang/Object;Ljava/lang/Object;)I a
	index (Ljava/lang/Object;)V b
	refresh ()V b
	search (Ljava/lang/String;)Ljava/util/List; a
net/minecraft/client/searchtree/ReloadableIdSearchTree$IntersectionIterator eos$a
	firstIterator a
	orderT c
	secondIterator b
net/minecraft/client/searchtree/ReloadableSearchTree eot
	filler d
	tree c
	index (Ljava/lang/Object;)V b
	refresh ()V b
	search (Ljava/lang/String;)Ljava/util/List; a
net/minecraft/client/searchtree/ReloadableSearchTree$MergingUniqueIterator eot$a
	firstIterator a
	orderT c
	secondIterator b
net/minecraft/client/searchtree/SearchRegistry eou
	CREATIVE_NAMES a
	CREATIVE_TAGS b
	RECIPE_COLLECTIONS c
	searchTrees d
	getTree (Lnet/minecraft/client/searchtree/SearchRegistry$Key;)Lnet/minecraft/client/searchtree/MutableSearchTree; a
	onResourceManagerReload (Lnet/minecraft/server/packs/resources/ResourceManager;)V a
	register (Lnet/minecraft/client/searchtree/SearchRegistry$Key;Lnet/minecraft/client/searchtree/MutableSearchTree;)V a
net/minecraft/client/searchtree/SearchRegistry$Key eou$a
net/minecraft/client/searchtree/SearchTree eov
	search (Ljava/lang/String;)Ljava/util/List; a
net/minecraft/client/searchtree/SuffixArray eow
	DEBUG_ARRAY c
	DEBUG_COMPARISONS b
	LOGGER d
	chars e
	list a
	maxStringLength i
	offsets h
	suffixToT g
	wordStarts f
	add (Ljava/lang/Object;Ljava/lang/String;)V a
	compare (Ljava/lang/String;I)I a
	generate ()V a
	getString (I)Ljava/lang/String; a
	print ()V b
	search (Ljava/lang/String;)Ljava/util/List; a
net/minecraft/client/server/IntegratedPlayerList eoy
	playerData a
	canPlayerLogin (Ljava/net/SocketAddress;Lcom/mojang/authlib/GameProfile;)Lnet/minecraft/network/chat/Component; a
	getServer ()Lnet/minecraft/client/server/IntegratedServer; b
	getServer ()Lnet/minecraft/server/MinecraftServer; c
	getSingleplayerData ()Lnet/minecraft/nbt/CompoundTag; q
	save (Lnet/minecraft/server/level/ServerPlayer;)V b
net/minecraft/client/server/IntegratedServer eoz
	LOGGER a
	lanPinger m
	minecraft j
	paused k
	publishedPort l
	uuid n
	fillReport (Lnet/minecraft/CrashReport;)Lnet/minecraft/CrashReport; b
	forceSynchronousWrites ()Z aT
	getFunctionCompilationLevel ()I h
	getModdedStatus ()Ljava/util/Optional; n
	getOperatorUserPermissionLevel ()I g
	getPort ()I L
	getScaledTrackingDistance (I)I b
	getServerDirectory ()Ljava/io/File; A
	halt (Z)V a
	initServer ()Z d
	isCommandBlockEnabled ()Z l
	isDedicatedServer ()Z j
	isEpollEnabled ()Z k
	isPublished ()Z m
	isSingleplayerOwner (Lcom/mojang/authlib/GameProfile;)Z a
	isSnooperEnabled ()Z S
	onServerCrash (Lnet/minecraft/CrashReport;)V a
	populateSnooper (Lnet/minecraft/world/Snooper;)V a
	publishServer (Lnet/minecraft/world/level/GameType;ZI)Z a
	setDefaultGameType (Lnet/minecraft/world/level/GameType;)V a
	setUUID (Ljava/util/UUID;)V a
	shouldInformAdmins ()Z S_
	shouldRconBroadcast ()Z i
	stopServer ()V s
	tickServer (Ljava/util/function/BooleanSupplier;)V a
net/minecraft/client/server/LanServer epa
	address b
	motd a
	pingTime c
	getAddress ()Ljava/lang/String; b
	getMotd ()Ljava/lang/String; a
	isUpToDate ()Z d
	updatePingTime ()V c
net/minecraft/client/server/LanServerDetection epb
	LOGGER b
	UNIQUE_THREAD_ID a
net/minecraft/client/server/LanServerDetection$LanServerDetector epb$a
	pingGroup b
	serverList a
	socket c
net/minecraft/client/server/LanServerDetection$LanServerList epb$b
	isDirty b
	servers a
	addServer (Ljava/lang/String;Ljava/net/InetAddress;)V a
	getServers ()Ljava/util/List; c
	isDirty ()Z a
	markClean ()V b
net/minecraft/client/server/LanServerPinger epc
	LOGGER b
	UNIQUE_THREAD_ID a
	isRunning e
	motd c
	serverAddress f
	socket d
	createPingString (Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; a
	parseAddress (Ljava/lang/String;)Ljava/lang/String; b
	parseMotd (Ljava/lang/String;)Ljava/lang/String; a
net/minecraft/client/sounds/AudioStream epf
	getFormat ()Ljavax/sound/sampled/AudioFormat; a
	read (I)Ljava/nio/ByteBuffer; a
net/minecraft/client/sounds/ChannelAccess epg
	channels a
	executor c
	library b
	clear ()V b
	createHandle (Lcom/mojang/blaze3d/audio/Library$Pool;)Ljava/util/concurrent/CompletableFuture; a
	executeOnChannels (Ljava/util/function/Consumer;)V a
	scheduleTick ()V a
net/minecraft/client/sounds/ChannelAccess$ChannelHandle epg$a
	channel b
	stopped c
	execute (Ljava/util/function/Consumer;)V a
	isStopped ()Z a
	release ()V b
net/minecraft/client/sounds/LoopingAudioStream eph
	bufferedInputStream c
	provider a
	stream b
	getFormat ()Ljavax/sound/sampled/AudioFormat; a
	read (I)Ljava/nio/ByteBuffer; a
net/minecraft/client/sounds/LoopingAudioStream$AudioStreamProvider eph$a
net/minecraft/client/sounds/LoopingAudioStream$NoCloseBuffer eph$b
net/minecraft/client/sounds/MusicManager epi
	currentMusic c
	minecraft b
	nextSongDelay d
	random a
	isPlayingMusic (Lnet/minecraft/sounds/Music;)Z b
	startPlaying (Lnet/minecraft/sounds/Music;)V a
	stopPlaying ()V b
	tick ()V a
net/minecraft/client/sounds/SoundBufferLibrary epj
	cache b
	resourceManager a
	clear ()V a
	getCompleteBuffer (Lnet/minecraft/resources/ResourceLocation;)Ljava/util/concurrent/CompletableFuture; a
	getStream (Lnet/minecraft/resources/ResourceLocation;Z)Ljava/util/concurrent/CompletableFuture; a
	preload (Ljava/util/Collection;)Ljava/util/concurrent/CompletableFuture; a
net/minecraft/client/sounds/SoundEngine epk
	LOGGER b
	MARKER a
	ONLY_WARN_ONCE c
	channelAccess k
	executor j
	instanceBySource n
	instanceToChannel m
	library g
	listener h
	listeners r
	loaded f
	options e
	preloadQueue t
	queuedSounds p
	queuedTickableSounds s
	soundBuffers i
	soundDeleteTime q
	soundManager d
	tickCount l
	tickingSounds o
	addEventListener (Lnet/minecraft/client/sounds/SoundEventListener;)V a
	calculatePitch (Lnet/minecraft/client/resources/sounds/SoundInstance;)F g
	calculateVolume (Lnet/minecraft/client/resources/sounds/SoundInstance;)F h
	destroy ()V b
	getDebugString ()Ljava/lang/String; f
	getVolume (Lnet/minecraft/sounds/SoundSource;)F a
	isActive (Lnet/minecraft/client/resources/sounds/SoundInstance;)Z b
	loadLibrary ()V g
	pause ()V d
	play (Lnet/minecraft/client/resources/sounds/SoundInstance;)V c
	playDelayed (Lnet/minecraft/client/resources/sounds/SoundInstance;I)V a
	queueTickingSound (Lnet/minecraft/client/resources/sounds/TickableSoundInstance;)V a
	reload ()V a
	removeEventListener (Lnet/minecraft/client/sounds/SoundEventListener;)V b
	requestPreload (Lnet/minecraft/client/resources/sounds/Sound;)V a
	requiresManualLooping (Lnet/minecraft/client/resources/sounds/SoundInstance;)Z d
	resume ()V e
	shouldLoopAutomatically (Lnet/minecraft/client/resources/sounds/SoundInstance;)Z f
	shouldLoopManually (Lnet/minecraft/client/resources/sounds/SoundInstance;)Z e
	stop (Lnet/minecraft/client/resources/sounds/SoundInstance;)V a
	stop (Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/sounds/SoundSource;)V a
	stopAll ()V c
	tick (Z)V a
	tickNonPaused ()V h
	updateCategoryVolume (Lnet/minecraft/sounds/SoundSource;F)V a
	updateSource (Lnet/minecraft/client/Camera;)V a
net/minecraft/client/sounds/SoundEngineExecutor epl
	shutdown b
	thread a
	createThread ()Ljava/lang/Thread; b
	flush ()V a
	getRunningThread ()Ljava/lang/Thread; au
	run ()V c
	shouldRun (Ljava/lang/Runnable;)Z d
	waitForTasks ()V bk
	wrapRunnable (Ljava/lang/Runnable;)Ljava/lang/Runnable; e
net/minecraft/client/sounds/SoundEventListener epm
	onPlaySound (Lnet/minecraft/client/resources/sounds/SoundInstance;Lnet/minecraft/client/sounds/WeighedSoundEvents;)V a
net/minecraft/client/sounds/SoundManager epn
	EMPTY_SOUND a
	GSON c
	LOGGER b
	SOUND_EVENT_REGISTRATION_TYPE d
	registry e
	soundEngine f
	addListener (Lnet/minecraft/client/sounds/SoundEventListener;)V a
	apply (Ljava/lang/Object;Lnet/minecraft/server/packs/resources/ResourceManager;Lnet/minecraft/util/profiling/ProfilerFiller;)V a
	apply (Lnet/minecraft/client/sounds/SoundManager$Preparations;Lnet/minecraft/server/packs/resources/ResourceManager;Lnet/minecraft/util/profiling/ProfilerFiller;)V a
	destroy ()V e
	getAvailableSounds ()Ljava/util/Collection; a
	getDebugString ()Ljava/lang/String; g
	getSoundEvent (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/client/sounds/WeighedSoundEvents; a
	isActive (Lnet/minecraft/client/resources/sounds/SoundInstance;)Z c
	pause ()V b
	play (Lnet/minecraft/client/resources/sounds/SoundInstance;)V a
	playDelayed (Lnet/minecraft/client/resources/sounds/SoundInstance;I)V a
	prepare (Lnet/minecraft/server/packs/resources/ResourceManager;Lnet/minecraft/util/profiling/ProfilerFiller;)Ljava/lang/Object; b
	prepare (Lnet/minecraft/server/packs/resources/ResourceManager;Lnet/minecraft/util/profiling/ProfilerFiller;)Lnet/minecraft/client/sounds/SoundManager$Preparations; a
	queueTickingSound (Lnet/minecraft/client/resources/sounds/TickableSoundInstance;)V a
	removeListener (Lnet/minecraft/client/sounds/SoundEventListener;)V b
	resume ()V f
	stop ()V d
	stop (Lnet/minecraft/client/resources/sounds/SoundInstance;)V b
	stop (Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/sounds/SoundSource;)V a
	tick (Z)V a
	updateSource (Lnet/minecraft/client/Camera;)V a
	updateSourceVolume (Lnet/minecraft/sounds/SoundSource;F)V a
	validateSoundResource (Lnet/minecraft/client/resources/sounds/Sound;Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/server/packs/resources/ResourceManager;)Z b
net/minecraft/client/sounds/SoundManager$Preparations epn$a
	registry a
	apply (Ljava/util/Map;Lnet/minecraft/client/sounds/SoundEngine;)V a
	handleRegistration (Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/client/resources/sounds/SoundEventRegistration;Lnet/minecraft/server/packs/resources/ResourceManager;)V a
net/minecraft/client/sounds/WeighedSoundEvents epo
	list a
	location c
	random b
	subtitle d
	addSound (Lnet/minecraft/client/sounds/Weighted;)V a
	getResourceLocation ()Lnet/minecraft/resources/ResourceLocation; b
	getSound ()Ljava/lang/Object; k
	getSound ()Lnet/minecraft/client/resources/sounds/Sound; a
	getSubtitle ()Lnet/minecraft/network/chat/Component; c
	getWeight ()I e
	preloadIfRequired (Lnet/minecraft/client/sounds/SoundEngine;)V a
net/minecraft/client/sounds/Weighted epp
	getSound ()Ljava/lang/Object; k
	getWeight ()I e
	preloadIfRequired (Lnet/minecraft/client/sounds/SoundEngine;)V a
net/minecraft/client/tutorial/CompletedTutorialStepInstance epr
	tutorial a
net/minecraft/client/tutorial/CraftPlanksTutorialStep eps
	CRAFT_DESCRIPTION b
	CRAFT_TITLE a
	timeWaiting e
	toast d
	tutorial c
	clear ()V b
	hasCraftedPlanksPreviously (Lnet/minecraft/client/player/LocalPlayer;Lnet/minecraft/tags/Tag;)Z a
	onGetItem (Lnet/minecraft/world/item/ItemStack;)V a
	tick ()V a
net/minecraft/client/tutorial/FindTreeTutorialStepInstance ept
	DESCRIPTION c
	TITLE b
	TREE_BLOCKS a
	timeWaiting f
	toast e
	tutorial d
	clear ()V b
	hasPunchedTreesPreviously (Lnet/minecraft/client/player/LocalPlayer;)Z a
	onGetItem (Lnet/minecraft/world/item/ItemStack;)V a
	onLookAt (Lnet/minecraft/client/multiplayer/ClientLevel;Lnet/minecraft/world/phys/HitResult;)V a
	tick ()V a
net/minecraft/client/tutorial/MovementTutorialStepInstance epu
	LOOK_DESCRIPTION d
	LOOK_TITLE c
	MOVE_DESCRIPTION b
	MOVE_TITLE a
	lookCompleted n
	lookToast g
	moveCompleted m
	moveToast f
	moved k
	timeLooked j
	timeMoved i
	timeWaiting h
	turned l
	tutorial e
	clear ()V b
	onInput (Lnet/minecraft/client/player/Input;)V a
	onMouse (DD)V a
	tick ()V a
net/minecraft/client/tutorial/OpenInventoryTutorialStep epv
	DESCRIPTION b
	TITLE a
	timeWaiting e
	toast d
	tutorial c
	clear ()V b
	onOpenInventory ()V c
	tick ()V a
net/minecraft/client/tutorial/PunchTreeTutorialStepInstance epw
	DESCRIPTION b
	TITLE a
	resetCount f
	timeWaiting e
	toast d
	tutorial c
	clear ()V b
	onDestroyBlock (Lnet/minecraft/client/multiplayer/ClientLevel;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;F)V a
	onGetItem (Lnet/minecraft/world/item/ItemStack;)V a
	tick ()V a
net/minecraft/client/tutorial/Tutorial epx
	instance b
	minecraft a
	getGameMode ()Lnet/minecraft/world/level/GameType; f
	getMinecraft ()Lnet/minecraft/client/Minecraft; e
	key (Ljava/lang/String;)Lnet/minecraft/network/chat/Component; a
	onDestroyBlock (Lnet/minecraft/client/multiplayer/ClientLevel;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;F)V a
	onGetItem (Lnet/minecraft/world/item/ItemStack;)V a
	onInput (Lnet/minecraft/client/player/Input;)V a
	onLookAt (Lnet/minecraft/client/multiplayer/ClientLevel;Lnet/minecraft/world/phys/HitResult;)V a
	onMouse (DD)V a
	onOpenInventory ()V a
	setStep (Lnet/minecraft/client/tutorial/TutorialSteps;)V a
	start ()V c
	stop ()V b
	tick ()V d
net/minecraft/client/tutorial/TutorialStepInstance epy
	clear ()V b
	onDestroyBlock (Lnet/minecraft/client/multiplayer/ClientLevel;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;F)V a
	onGetItem (Lnet/minecraft/world/item/ItemStack;)V a
	onInput (Lnet/minecraft/client/player/Input;)V a
	onLookAt (Lnet/minecraft/client/multiplayer/ClientLevel;Lnet/minecraft/world/phys/HitResult;)V a
	onMouse (DD)V a
	onOpenInventory ()V c
	tick ()V a
net/minecraft/client/tutorial/TutorialSteps epz
	$VALUES i
	CRAFT_PLANKS e
	FIND_TREE b
	MOVEMENT a
	NONE f
	OPEN_INVENTORY d
	PUNCH_TREE c
	constructor h
	name g
	create (Lnet/minecraft/client/tutorial/Tutorial;)Lnet/minecraft/client/tutorial/TutorialStepInstance; a
	getByName (Ljava/lang/String;)Lnet/minecraft/client/tutorial/TutorialSteps; a
	getName ()Ljava/lang/String; a
net/minecraft/commands/BrigadierExceptions cv
	DISPATCHER_EXPECTED_ARGUMENT_SEPARATOR z
	DISPATCHER_PARSE_EXCEPTION A
	DISPATCHER_UNKNOWN_ARGUMENT y
	DISPATCHER_UNKNOWN_COMMAND x
	DOUBLE_TOO_BIG b
	DOUBLE_TOO_SMALL a
	FLOAT_TOO_BIG d
	FLOAT_TOO_SMALL c
	INTEGER_TOO_BIG f
	INTEGER_TOO_SMALL e
	LITERAL_INCORRECT i
	LONG_TOO_BIG h
	LONG_TOO_SMALL g
	READER_EXPECTED_BOOL v
	READER_EXPECTED_DOUBLE s
	READER_EXPECTED_END_OF_QUOTE k
	READER_EXPECTED_FLOAT u
	READER_EXPECTED_INT o
	READER_EXPECTED_LONG q
	READER_EXPECTED_START_OF_QUOTE j
	READER_EXPECTED_SYMBOL w
	READER_INVALID_BOOL m
	READER_INVALID_DOUBLE r
	READER_INVALID_ESCAPE l
	READER_INVALID_FLOAT t
	READER_INVALID_INT n
	READER_INVALID_LONG p
net/minecraft/commands/CommandFunction cw
	entries a
	id b
	fromLines (Lnet/minecraft/resources/ResourceLocation;Lcom/mojang/brigadier/CommandDispatcher;Lnet/minecraft/commands/CommandSourceStack;Ljava/util/List;)Lnet/minecraft/commands/CommandFunction; a
	getEntries ()[Lnet/minecraft/commands/CommandFunction$Entry; b
	getId ()Lnet/minecraft/resources/ResourceLocation; a
net/minecraft/commands/CommandFunction$CacheableFunction cw$a
	NONE a
	function d
	id b
	resolved c
	get (Lnet/minecraft/server/ServerFunctionManager;)Ljava/util/Optional; a
	getId ()Lnet/minecraft/resources/ResourceLocation; a
net/minecraft/commands/CommandFunction$CommandEntry cw$b
	parse a
	execute (Lnet/minecraft/server/ServerFunctionManager;Lnet/minecraft/commands/CommandSourceStack;Ljava/util/ArrayDeque;I)V a
net/minecraft/commands/CommandFunction$Entry cw$c
	execute (Lnet/minecraft/server/ServerFunctionManager;Lnet/minecraft/commands/CommandSourceStack;Ljava/util/ArrayDeque;I)V a
net/minecraft/commands/CommandFunction$FunctionEntry cw$d
	function a
	execute (Lnet/minecraft/server/ServerFunctionManager;Lnet/minecraft/commands/CommandSourceStack;Ljava/util/ArrayDeque;I)V a
net/minecraft/commands/CommandRuntimeException cx
	message a
	getComponent ()Lnet/minecraft/network/chat/Component; a
net/minecraft/commands/CommandSource cy
	NULL a_
	acceptsFailure ()Z b
	acceptsSuccess ()Z a
	sendMessage (Lnet/minecraft/network/chat/Component;Ljava/util/UUID;)V a
	shouldInformAdmins ()Z S_
net/minecraft/commands/CommandSourceStack cz
	ERROR_NOT_ENTITY b
	ERROR_NOT_PLAYER a
	anchor m
	consumer l
	displayName h
	entity k
	level e
	permissionLevel f
	rotation n
	server i
	silent j
	source c
	textName g
	worldPosition d
	broadcastToAdmins (Lnet/minecraft/network/chat/Component;)V b
	customSuggestion (Lcom/mojang/brigadier/context/CommandContext;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture; a
	facing (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/commands/arguments/EntityAnchorArgument$Anchor;)Lnet/minecraft/commands/CommandSourceStack; a
	facing (Lnet/minecraft/world/phys/Vec3;)Lnet/minecraft/commands/CommandSourceStack; b
	getAllTeams ()Ljava/util/Collection; m
	getAnchor ()Lnet/minecraft/commands/arguments/EntityAnchorArgument$Anchor; k
	getAvailableSoundEvents ()Ljava/util/Collection; n
	getDisplayName ()Lnet/minecraft/network/chat/Component; b
	getEntity ()Lnet/minecraft/world/entity/Entity; f
	getEntityOrException ()Lnet/minecraft/world/entity/Entity; g
	getLevel ()Lnet/minecraft/server/level/ServerLevel; e
	getOnlinePlayerNames ()Ljava/util/Collection; l
	getPlayerOrException ()Lnet/minecraft/server/level/ServerPlayer; h
	getPosition ()Lnet/minecraft/world/phys/Vec3; d
	getRecipeNames ()Ljava/util/stream/Stream; o
	getRotation ()Lnet/minecraft/world/phys/Vec2; i
	getServer ()Lnet/minecraft/server/MinecraftServer; j
	getTextName ()Ljava/lang/String; c
	hasPermission (I)Z c
	levels ()Ljava/util/Set; p
	onCommandComplete (Lcom/mojang/brigadier/context/CommandContext;ZI)V a
	registryAccess ()Lnet/minecraft/core/RegistryAccess; q
	sendFailure (Lnet/minecraft/network/chat/Component;)V a
	sendSuccess (Lnet/minecraft/network/chat/Component;Z)V a
	withAnchor (Lnet/minecraft/commands/arguments/EntityAnchorArgument$Anchor;)Lnet/minecraft/commands/CommandSourceStack; a
	withCallback (Lcom/mojang/brigadier/ResultConsumer;)Lnet/minecraft/commands/CommandSourceStack; a
	withCallback (Lcom/mojang/brigadier/ResultConsumer;Ljava/util/function/BinaryOperator;)Lnet/minecraft/commands/CommandSourceStack; a
	withEntity (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/commands/CommandSourceStack; a
	withLevel (Lnet/minecraft/server/level/ServerLevel;)Lnet/minecraft/commands/CommandSourceStack; a
	withMaximumPermission (I)Lnet/minecraft/commands/CommandSourceStack; b
	withPermission (I)Lnet/minecraft/commands/CommandSourceStack; a
	withPosition (Lnet/minecraft/world/phys/Vec3;)Lnet/minecraft/commands/CommandSourceStack; a
	withRotation (Lnet/minecraft/world/phys/Vec2;)Lnet/minecraft/commands/CommandSourceStack; a
	withSuppressedOutput ()Lnet/minecraft/commands/CommandSourceStack; a
net/minecraft/commands/Commands da
	LOGGER a
	dispatcher b
	argument (Ljava/lang/String;Lcom/mojang/brigadier/arguments/ArgumentType;)Lcom/mojang/brigadier/builder/RequiredArgumentBuilder; a
	createValidator (Lnet/minecraft/commands/Commands$ParseFunction;)Ljava/util/function/Predicate; a
	fillUsableCommands (Lcom/mojang/brigadier/tree/CommandNode;Lcom/mojang/brigadier/tree/CommandNode;Lnet/minecraft/commands/CommandSourceStack;Ljava/util/Map;)V a
	getDispatcher ()Lcom/mojang/brigadier/CommandDispatcher; a
	getParseException (Lcom/mojang/brigadier/ParseResults;)Lcom/mojang/brigadier/exceptions/CommandSyntaxException; a
	literal (Ljava/lang/String;)Lcom/mojang/brigadier/builder/LiteralArgumentBuilder; a
	performCommand (Lnet/minecraft/commands/CommandSourceStack;Ljava/lang/String;)I a
	sendCommands (Lnet/minecraft/server/level/ServerPlayer;)V a
	serializeTreeToFile (Ljava/io/File;)V a
net/minecraft/commands/Commands$CommandSelection da$a
	$VALUES f
	ALL a
	DEDICATED b
	INTEGRATED c
	includeDedicated e
	includeIntegrated d
net/minecraft/commands/Commands$ParseFunction da$b
net/minecraft/commands/SharedSuggestionProvider db
	customSuggestion (Lcom/mojang/brigadier/context/CommandContext;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture; a
	filterResources (Ljava/lang/Iterable;Ljava/lang/String;Ljava/lang/String;Ljava/util/function/Function;Ljava/util/function/Consumer;)V a
	filterResources (Ljava/lang/Iterable;Ljava/lang/String;Ljava/util/function/Function;Ljava/util/function/Consumer;)V a
	getAbsoluteCoordinates ()Ljava/util/Collection; t
	getAllTeams ()Ljava/util/Collection; m
	getAvailableSoundEvents ()Ljava/util/Collection; n
	getOnlinePlayerNames ()Ljava/util/Collection; l
	getRecipeNames ()Ljava/util/stream/Stream; o
	getRelevantCoordinates ()Ljava/util/Collection; s
	getSelectedEntities ()Ljava/util/Collection; r
	hasPermission (I)Z c
	levels ()Ljava/util/Set; p
	matchesSubStr (Ljava/lang/String;Ljava/lang/String;)Z a
	registryAccess ()Lnet/minecraft/core/RegistryAccess; q
	suggest (Ljava/lang/Iterable;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture; b
	suggest (Ljava/lang/Iterable;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Ljava/util/function/Function;Ljava/util/function/Function;)Ljava/util/concurrent/CompletableFuture; b
	suggest (Ljava/util/stream/Stream;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture; b
	suggest ([Ljava/lang/String;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture; a
	suggest2DCoordinates (Ljava/lang/String;Ljava/util/Collection;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Ljava/util/function/Predicate;)Ljava/util/concurrent/CompletableFuture; b
	suggestCoordinates (Ljava/lang/String;Ljava/util/Collection;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Ljava/util/function/Predicate;)Ljava/util/concurrent/CompletableFuture; a
	suggestResource (Ljava/lang/Iterable;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture; a
	suggestResource (Ljava/lang/Iterable;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Ljava/lang/String;)Ljava/util/concurrent/CompletableFuture; a
	suggestResource (Ljava/lang/Iterable;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Ljava/util/function/Function;Ljava/util/function/Function;)Ljava/util/concurrent/CompletableFuture; a
	suggestResource (Ljava/util/stream/Stream;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture; a
	suggestResource (Ljava/util/stream/Stream;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Ljava/util/function/Function;Ljava/util/function/Function;)Ljava/util/concurrent/CompletableFuture; a
net/minecraft/commands/SharedSuggestionProvider$TextCoordinates db$a
	DEFAULT_GLOBAL b
	DEFAULT_LOCAL a
	x c
	y d
	z e
net/minecraft/commands/arguments/ColorArgument dc
	ERROR_INVALID_VALUE a
	EXAMPLES b
	color ()Lnet/minecraft/commands/arguments/ColorArgument; a
	getColor (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lnet/minecraft/ChatFormatting; a
	parse (Lcom/mojang/brigadier/StringReader;)Lnet/minecraft/ChatFormatting; a
net/minecraft/commands/arguments/ComponentArgument dd
	ERROR_INVALID_JSON a
	EXAMPLES b
	getComponent (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lnet/minecraft/network/chat/Component; a
	parse (Lcom/mojang/brigadier/StringReader;)Lnet/minecraft/network/chat/Component; a
	textComponent ()Lnet/minecraft/commands/arguments/ComponentArgument; a
net/minecraft/commands/arguments/CompoundTagArgument de
	EXAMPLES a
	compoundTag ()Lnet/minecraft/commands/arguments/CompoundTagArgument; a
	getCompoundTag (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lnet/minecraft/nbt/CompoundTag; a
	parse (Lcom/mojang/brigadier/StringReader;)Lnet/minecraft/nbt/CompoundTag; a
net/minecraft/commands/arguments/DimensionArgument df
	ERROR_INVALID_VALUE b
	EXAMPLES a
	dimension ()Lnet/minecraft/commands/arguments/DimensionArgument; a
	getDimension (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lnet/minecraft/server/level/ServerLevel; a
	parse (Lcom/mojang/brigadier/StringReader;)Lnet/minecraft/resources/ResourceLocation; a
net/minecraft/commands/arguments/EntityAnchorArgument dg
	ERROR_INVALID b
	EXAMPLES a
	anchor ()Lnet/minecraft/commands/arguments/EntityAnchorArgument; a
	getAnchor (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lnet/minecraft/commands/arguments/EntityAnchorArgument$Anchor; a
	parse (Lcom/mojang/brigadier/StringReader;)Lnet/minecraft/commands/arguments/EntityAnchorArgument$Anchor; a
net/minecraft/commands/arguments/EntityAnchorArgument$Anchor dg$a
	$VALUES f
	BY_NAME c
	EYES b
	FEET a
	name d
	transform e
	apply (Lnet/minecraft/commands/CommandSourceStack;)Lnet/minecraft/world/phys/Vec3; a
	apply (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/world/phys/Vec3; a
	getByName (Ljava/lang/String;)Lnet/minecraft/commands/arguments/EntityAnchorArgument$Anchor; a
net/minecraft/commands/arguments/EntityArgument dh
	ERROR_NOT_SINGLE_ENTITY a
	ERROR_NOT_SINGLE_PLAYER b
	ERROR_ONLY_PLAYERS_ALLOWED c
	ERROR_SELECTORS_NOT_ALLOWED f
	EXAMPLES g
	NO_ENTITIES_FOUND d
	NO_PLAYERS_FOUND e
	playersOnly i
	single h
	entities ()Lnet/minecraft/commands/arguments/EntityArgument; b
	entity ()Lnet/minecraft/commands/arguments/EntityArgument; a
	getEntities (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Ljava/util/Collection; b
	getEntity (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lnet/minecraft/world/entity/Entity; a
	getOptionalEntities (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Ljava/util/Collection; c
	getOptionalPlayers (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Ljava/util/Collection; d
	getPlayer (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lnet/minecraft/server/level/ServerPlayer; e
	getPlayers (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Ljava/util/Collection; f
	parse (Lcom/mojang/brigadier/StringReader;)Lnet/minecraft/commands/arguments/selector/EntitySelector; a
	player ()Lnet/minecraft/commands/arguments/EntityArgument; c
	players ()Lnet/minecraft/commands/arguments/EntityArgument; d
net/minecraft/commands/arguments/EntityArgument$Serializer dh$a
	deserializeFromNetwork (Lnet/minecraft/network/FriendlyByteBuf;)Lcom/mojang/brigadier/arguments/ArgumentType; b
	deserializeFromNetwork (Lnet/minecraft/network/FriendlyByteBuf;)Lnet/minecraft/commands/arguments/EntityArgument; a
	serializeToJson (Lcom/mojang/brigadier/arguments/ArgumentType;Lcom/google/gson/JsonObject;)V a
	serializeToJson (Lnet/minecraft/commands/arguments/EntityArgument;Lcom/google/gson/JsonObject;)V a
	serializeToNetwork (Lcom/mojang/brigadier/arguments/ArgumentType;Lnet/minecraft/network/FriendlyByteBuf;)V a
	serializeToNetwork (Lnet/minecraft/commands/arguments/EntityArgument;Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/commands/arguments/EntitySummonArgument di
	ERROR_UNKNOWN_ENTITY a
	EXAMPLES b
	getSummonableEntity (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lnet/minecraft/resources/ResourceLocation; a
	id ()Lnet/minecraft/commands/arguments/EntitySummonArgument; a
	parse (Lcom/mojang/brigadier/StringReader;)Lnet/minecraft/resources/ResourceLocation; a
	verifyCanSummon (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/resources/ResourceLocation; a
net/minecraft/commands/arguments/GameProfileArgument dj
	ERROR_UNKNOWN_PLAYER a
	EXAMPLES b
	gameProfile ()Lnet/minecraft/commands/arguments/GameProfileArgument; a
	getGameProfiles (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Ljava/util/Collection; a
	parse (Lcom/mojang/brigadier/StringReader;)Lnet/minecraft/commands/arguments/GameProfileArgument$Result; a
net/minecraft/commands/arguments/GameProfileArgument$Result dj$a
net/minecraft/commands/arguments/GameProfileArgument$SelectorResult dj$b
	selector a
net/minecraft/commands/arguments/ItemEnchantmentArgument dk
	ERROR_UNKNOWN_ENCHANTMENT a
	EXAMPLES b
	enchantment ()Lnet/minecraft/commands/arguments/ItemEnchantmentArgument; a
	getEnchantment (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lnet/minecraft/world/item/enchantment/Enchantment; a
	parse (Lcom/mojang/brigadier/StringReader;)Lnet/minecraft/world/item/enchantment/Enchantment; a
net/minecraft/commands/arguments/MessageArgument dl
	EXAMPLES a
	getMessage (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lnet/minecraft/network/chat/Component; a
	message ()Lnet/minecraft/commands/arguments/MessageArgument; a
	parse (Lcom/mojang/brigadier/StringReader;)Lnet/minecraft/commands/arguments/MessageArgument$Message; a
net/minecraft/commands/arguments/MessageArgument$Message dl$a
	parts b
	text a
	getParts ()[Lnet/minecraft/commands/arguments/MessageArgument$Part; b
	getText ()Ljava/lang/String; a
	parseText (Lcom/mojang/brigadier/StringReader;Z)Lnet/minecraft/commands/arguments/MessageArgument$Message; a
	toComponent (Lnet/minecraft/commands/CommandSourceStack;Z)Lnet/minecraft/network/chat/Component; a
net/minecraft/commands/arguments/MessageArgument$Part dl$b
	end b
	selector c
	start a
	getEnd ()I b
	getSelector ()Lnet/minecraft/commands/arguments/selector/EntitySelector; c
	getStart ()I a
	toComponent (Lnet/minecraft/commands/CommandSourceStack;)Lnet/minecraft/network/chat/Component; a
net/minecraft/commands/arguments/MobEffectArgument dm
	ERROR_UNKNOWN_EFFECT a
	EXAMPLES b
	effect ()Lnet/minecraft/commands/arguments/MobEffectArgument; a
	getEffect (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lnet/minecraft/world/effect/MobEffect; a
	parse (Lcom/mojang/brigadier/StringReader;)Lnet/minecraft/world/effect/MobEffect; a
net/minecraft/commands/arguments/NbtPathArgument dn
	ERROR_INVALID_NODE a
	ERROR_NOTHING_FOUND b
	EXAMPLES c
	createTagPredicate (Lnet/minecraft/nbt/CompoundTag;)Ljava/util/function/Predicate; b
	getPath (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lnet/minecraft/commands/arguments/NbtPathArgument$NbtPath; a
	isAllowedInUnquotedName (C)Z a
	nbtPath ()Lnet/minecraft/commands/arguments/NbtPathArgument; a
	parse (Lcom/mojang/brigadier/StringReader;)Lnet/minecraft/commands/arguments/NbtPathArgument$NbtPath; a
	parseNode (Lcom/mojang/brigadier/StringReader;Z)Lnet/minecraft/commands/arguments/NbtPathArgument$Node; a
	readObjectNode (Lcom/mojang/brigadier/StringReader;Ljava/lang/String;)Lnet/minecraft/commands/arguments/NbtPathArgument$Node; a
	readUnquotedName (Lcom/mojang/brigadier/StringReader;)Ljava/lang/String; b
net/minecraft/commands/arguments/NbtPathArgument$AllElementsNode dn$a
	INSTANCE a
	createPreferredParentTag ()Lnet/minecraft/nbt/Tag; a
	getOrCreateTag (Lnet/minecraft/nbt/Tag;Ljava/util/function/Supplier;Ljava/util/List;)V a
	getTag (Lnet/minecraft/nbt/Tag;Ljava/util/List;)V a
	removeTag (Lnet/minecraft/nbt/Tag;)I a
	setTag (Lnet/minecraft/nbt/Tag;Ljava/util/function/Supplier;)I a
net/minecraft/commands/arguments/NbtPathArgument$CompoundChildNode dn$b
	name a
	createPreferredParentTag ()Lnet/minecraft/nbt/Tag; a
	getOrCreateTag (Lnet/minecraft/nbt/Tag;Ljava/util/function/Supplier;Ljava/util/List;)V a
	getTag (Lnet/minecraft/nbt/Tag;Ljava/util/List;)V a
	removeTag (Lnet/minecraft/nbt/Tag;)I a
	setTag (Lnet/minecraft/nbt/Tag;Ljava/util/function/Supplier;)I a
net/minecraft/commands/arguments/NbtPathArgument$IndexedElementNode dn$c
	index a
	createPreferredParentTag ()Lnet/minecraft/nbt/Tag; a
	getOrCreateTag (Lnet/minecraft/nbt/Tag;Ljava/util/function/Supplier;Ljava/util/List;)V a
	getTag (Lnet/minecraft/nbt/Tag;Ljava/util/List;)V a
	removeTag (Lnet/minecraft/nbt/Tag;)I a
	setTag (Lnet/minecraft/nbt/Tag;Ljava/util/function/Supplier;)I a
net/minecraft/commands/arguments/NbtPathArgument$ListElementFunction dn$d
	apply (Lnet/minecraft/nbt/ListTag;ILnet/minecraft/nbt/Tag;)Z a
net/minecraft/commands/arguments/NbtPathArgument$MatchElementNode dn$e
	pattern a
	predicate b
	createPreferredParentTag ()Lnet/minecraft/nbt/Tag; a
	getOrCreateTag (Lnet/minecraft/nbt/Tag;Ljava/util/function/Supplier;Ljava/util/List;)V a
	getTag (Lnet/minecraft/nbt/Tag;Ljava/util/List;)V a
	removeTag (Lnet/minecraft/nbt/Tag;)I a
	setTag (Lnet/minecraft/nbt/Tag;Ljava/util/function/Supplier;)I a
net/minecraft/commands/arguments/NbtPathArgument$MatchObjectNode dn$f
	name a
	pattern b
	predicate c
	createPreferredParentTag ()Lnet/minecraft/nbt/Tag; a
	getOrCreateTag (Lnet/minecraft/nbt/Tag;Ljava/util/function/Supplier;Ljava/util/List;)V a
	getTag (Lnet/minecraft/nbt/Tag;Ljava/util/List;)V a
	removeTag (Lnet/minecraft/nbt/Tag;)I a
	setTag (Lnet/minecraft/nbt/Tag;Ljava/util/function/Supplier;)I a
net/minecraft/commands/arguments/NbtPathArgument$MatchRootObjectNode dn$g
	predicate a
	createPreferredParentTag ()Lnet/minecraft/nbt/Tag; a
	getOrCreateTag (Lnet/minecraft/nbt/Tag;Ljava/util/function/Supplier;Ljava/util/List;)V a
	getTag (Lnet/minecraft/nbt/Tag;Ljava/util/List;)V a
	removeTag (Lnet/minecraft/nbt/Tag;)I a
	setTag (Lnet/minecraft/nbt/Tag;Ljava/util/function/Supplier;)I a
net/minecraft/commands/arguments/NbtPathArgument$NbtPath dn$h
	nodeToOriginalPosition b
	nodes c
	original a
	apply (Ljava/util/List;Ljava/util/function/Function;)I a
	countMatching (Lnet/minecraft/nbt/Tag;)I b
	createNotFoundException (Lnet/minecraft/commands/arguments/NbtPathArgument$Node;)Lcom/mojang/brigadier/exceptions/CommandSyntaxException; a
	get (Lnet/minecraft/nbt/Tag;)Ljava/util/List; a
	getOrCreate (Lnet/minecraft/nbt/Tag;Ljava/util/function/Supplier;)Ljava/util/List; a
	getOrCreateParents (Lnet/minecraft/nbt/Tag;)Ljava/util/List; d
	remove (Lnet/minecraft/nbt/Tag;)I c
	set (Lnet/minecraft/nbt/Tag;Ljava/util/function/Supplier;)I b
	set (Lnet/minecraft/nbt/Tag;Lnet/minecraft/nbt/Tag;)I a
net/minecraft/commands/arguments/NbtPathArgument$Node dn$i
	collect (Ljava/util/List;Ljava/util/function/BiConsumer;)Ljava/util/List; a
	createPreferredParentTag ()Lnet/minecraft/nbt/Tag; a
	get (Ljava/util/List;)Ljava/util/List; a
	getOrCreate (Ljava/util/List;Ljava/util/function/Supplier;)Ljava/util/List; a
	getOrCreateTag (Lnet/minecraft/nbt/Tag;Ljava/util/function/Supplier;Ljava/util/List;)V a
	getTag (Lnet/minecraft/nbt/Tag;Ljava/util/List;)V a
	removeTag (Lnet/minecraft/nbt/Tag;)I a
	setTag (Lnet/minecraft/nbt/Tag;Ljava/util/function/Supplier;)I a
net/minecraft/commands/arguments/NbtTagArgument dp
	EXAMPLES a
	getNbtTag (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lnet/minecraft/nbt/Tag; a
	nbtTag ()Lnet/minecraft/commands/arguments/NbtTagArgument; a
	parse (Lcom/mojang/brigadier/StringReader;)Lnet/minecraft/nbt/Tag; a
net/minecraft/commands/arguments/ObjectiveArgument dq
	ERROR_OBJECTIVE_NAME_TOO_LONG a
	ERROR_OBJECTIVE_NOT_FOUND c
	ERROR_OBJECTIVE_READ_ONLY d
	EXAMPLES b
	getObjective (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lnet/minecraft/world/scores/Objective; a
	getWritableObjective (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lnet/minecraft/world/scores/Objective; b
	objective ()Lnet/minecraft/commands/arguments/ObjectiveArgument; a
	parse (Lcom/mojang/brigadier/StringReader;)Ljava/lang/String; a
net/minecraft/commands/arguments/ObjectiveCriteriaArgument dr
	ERROR_INVALID_VALUE a
	EXAMPLES b
	criteria ()Lnet/minecraft/commands/arguments/ObjectiveCriteriaArgument; a
	getCriteria (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lnet/minecraft/world/scores/criteria/ObjectiveCriteria; a
	getName (Lnet/minecraft/stats/StatType;Ljava/lang/Object;)Ljava/lang/String; a
	parse (Lcom/mojang/brigadier/StringReader;)Lnet/minecraft/world/scores/criteria/ObjectiveCriteria; a
net/minecraft/commands/arguments/OperationArgument ds
	ERROR_DIVIDE_BY_ZERO c
	ERROR_INVALID_OPERATION b
	EXAMPLES a
	getOperation (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lnet/minecraft/commands/arguments/OperationArgument$Operation; a
	getOperation (Ljava/lang/String;)Lnet/minecraft/commands/arguments/OperationArgument$Operation; a
	getSimpleOperation (Ljava/lang/String;)Lnet/minecraft/commands/arguments/OperationArgument$SimpleOperation; b
	operation ()Lnet/minecraft/commands/arguments/OperationArgument; a
	parse (Lcom/mojang/brigadier/StringReader;)Lnet/minecraft/commands/arguments/OperationArgument$Operation; a
net/minecraft/commands/arguments/OperationArgument$Operation ds$a
net/minecraft/commands/arguments/OperationArgument$SimpleOperation ds$b
net/minecraft/commands/arguments/ParticleArgument dt
	ERROR_UNKNOWN_PARTICLE a
	EXAMPLES b
	getParticle (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lnet/minecraft/core/particles/ParticleOptions; a
	parse (Lcom/mojang/brigadier/StringReader;)Lnet/minecraft/core/particles/ParticleOptions; a
	particle ()Lnet/minecraft/commands/arguments/ParticleArgument; a
	readParticle (Lcom/mojang/brigadier/StringReader;)Lnet/minecraft/core/particles/ParticleOptions; b
	readParticle (Lcom/mojang/brigadier/StringReader;Lnet/minecraft/core/particles/ParticleType;)Lnet/minecraft/core/particles/ParticleOptions; a
net/minecraft/commands/arguments/RangeArgument du
	doubleRange ()Lnet/minecraft/commands/arguments/RangeArgument$Floats; b
	intRange ()Lnet/minecraft/commands/arguments/RangeArgument$Ints; a
net/minecraft/commands/arguments/RangeArgument$Floats du$a
	EXAMPLES a
	getRange (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lnet/minecraft/advancements/critereon/MinMaxBounds$Floats; a
	parse (Lcom/mojang/brigadier/StringReader;)Lnet/minecraft/advancements/critereon/MinMaxBounds$Floats; a
net/minecraft/commands/arguments/RangeArgument$Floats$Serializer du$a$a
	deserializeFromNetwork (Lnet/minecraft/network/FriendlyByteBuf;)Lcom/mojang/brigadier/arguments/ArgumentType; b
	deserializeFromNetwork (Lnet/minecraft/network/FriendlyByteBuf;)Lnet/minecraft/commands/arguments/RangeArgument$Floats; a
net/minecraft/commands/arguments/RangeArgument$Ints du$b
	EXAMPLES a
	getRange (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lnet/minecraft/advancements/critereon/MinMaxBounds$Ints; a
	parse (Lcom/mojang/brigadier/StringReader;)Lnet/minecraft/advancements/critereon/MinMaxBounds$Ints; a
net/minecraft/commands/arguments/RangeArgument$Ints$Serializer du$b$a
	deserializeFromNetwork (Lnet/minecraft/network/FriendlyByteBuf;)Lcom/mojang/brigadier/arguments/ArgumentType; b
	deserializeFromNetwork (Lnet/minecraft/network/FriendlyByteBuf;)Lnet/minecraft/commands/arguments/RangeArgument$Ints; a
net/minecraft/commands/arguments/RangeArgument$Serializer du$c
	serializeToJson (Lcom/mojang/brigadier/arguments/ArgumentType;Lcom/google/gson/JsonObject;)V a
	serializeToJson (Lnet/minecraft/commands/arguments/RangeArgument;Lcom/google/gson/JsonObject;)V a
	serializeToNetwork (Lcom/mojang/brigadier/arguments/ArgumentType;Lnet/minecraft/network/FriendlyByteBuf;)V a
	serializeToNetwork (Lnet/minecraft/commands/arguments/RangeArgument;Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/commands/arguments/ResourceLocationArgument dv
	ERROR_UNKNOWN_ADVANCEMENT b
	ERROR_UNKNOWN_ATTRIBUTE e
	ERROR_UNKNOWN_PREDICATE d
	ERROR_UNKNOWN_RECIPE c
	EXAMPLES a
	getAdvancement (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lnet/minecraft/advancements/Advancement; a
	getAttribute (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lnet/minecraft/world/entity/ai/attributes/Attribute; d
	getId (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lnet/minecraft/resources/ResourceLocation; e
	getPredicate (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition; c
	getRecipe (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lnet/minecraft/world/item/crafting/Recipe; b
	id ()Lnet/minecraft/commands/arguments/ResourceLocationArgument; a
	parse (Lcom/mojang/brigadier/StringReader;)Lnet/minecraft/resources/ResourceLocation; a
net/minecraft/commands/arguments/ScoreHolderArgument dw
	ERROR_NO_RESULTS c
	EXAMPLES b
	SUGGEST_SCORE_HOLDERS a
	multiple d
	getName (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Ljava/lang/String; a
	getNames (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Ljava/util/Collection; b
	getNames (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;Ljava/util/function/Supplier;)Ljava/util/Collection; a
	getNamesWithDefaultWildcard (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Ljava/util/Collection; c
	parse (Lcom/mojang/brigadier/StringReader;)Lnet/minecraft/commands/arguments/ScoreHolderArgument$Result; a
	scoreHolder ()Lnet/minecraft/commands/arguments/ScoreHolderArgument; a
	scoreHolders ()Lnet/minecraft/commands/arguments/ScoreHolderArgument; b
net/minecraft/commands/arguments/ScoreHolderArgument$Result dw$a
net/minecraft/commands/arguments/ScoreHolderArgument$SelectorResult dw$b
	selector a
net/minecraft/commands/arguments/ScoreHolderArgument$Serializer dw$c
	deserializeFromNetwork (Lnet/minecraft/network/FriendlyByteBuf;)Lcom/mojang/brigadier/arguments/ArgumentType; b
	deserializeFromNetwork (Lnet/minecraft/network/FriendlyByteBuf;)Lnet/minecraft/commands/arguments/ScoreHolderArgument; a
	serializeToJson (Lcom/mojang/brigadier/arguments/ArgumentType;Lcom/google/gson/JsonObject;)V a
	serializeToJson (Lnet/minecraft/commands/arguments/ScoreHolderArgument;Lcom/google/gson/JsonObject;)V a
	serializeToNetwork (Lcom/mojang/brigadier/arguments/ArgumentType;Lnet/minecraft/network/FriendlyByteBuf;)V a
	serializeToNetwork (Lnet/minecraft/commands/arguments/ScoreHolderArgument;Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/commands/arguments/ScoreboardSlotArgument dx
	ERROR_INVALID_VALUE a
	EXAMPLES b
	displaySlot ()Lnet/minecraft/commands/arguments/ScoreboardSlotArgument; a
	getDisplaySlot (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)I a
	parse (Lcom/mojang/brigadier/StringReader;)Ljava/lang/Integer; a
net/minecraft/commands/arguments/SlotArgument dy
	ERROR_UNKNOWN_SLOT b
	EXAMPLES a
	SLOTS c
	getSlot (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)I a
	parse (Lcom/mojang/brigadier/StringReader;)Ljava/lang/Integer; a
	slot ()Lnet/minecraft/commands/arguments/SlotArgument; a
net/minecraft/commands/arguments/TeamArgument dz
	ERROR_TEAM_NOT_FOUND b
	EXAMPLES a
	getTeam (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lnet/minecraft/world/scores/PlayerTeam; a
	parse (Lcom/mojang/brigadier/StringReader;)Ljava/lang/String; a
	team ()Lnet/minecraft/commands/arguments/TeamArgument; a
net/minecraft/commands/arguments/TimeArgument ea
	ERROR_INVALID_TICK_COUNT c
	ERROR_INVALID_UNIT b
	EXAMPLES a
	UNITS d
	parse (Lcom/mojang/brigadier/StringReader;)Ljava/lang/Integer; a
	time ()Lnet/minecraft/commands/arguments/TimeArgument; a
net/minecraft/commands/arguments/UuidArgument eb
	ALLOWED_CHARACTERS c
	ERROR_INVALID_UUID a
	EXAMPLES b
	getUuid (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Ljava/util/UUID; a
	parse (Lcom/mojang/brigadier/StringReader;)Ljava/util/UUID; a
	uuid ()Lnet/minecraft/commands/arguments/UuidArgument; a
net/minecraft/commands/arguments/blocks/BlockInput ec
	properties b
	state a
	tag c
	getDefinedProperties ()Ljava/util/Set; c
	getState ()Lnet/minecraft/world/level/block/state/BlockState; a
	getTag ()Lnet/minecraft/nbt/CompoundTag; b
	place (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;I)Z a
	test (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;)Z a
	test (Lnet/minecraft/world/level/block/state/pattern/BlockInWorld;)Z a
net/minecraft/commands/arguments/blocks/BlockPredicateArgument ed
	ERROR_UNKNOWN_TAG b
	EXAMPLES a
	blockPredicate ()Lnet/minecraft/commands/arguments/blocks/BlockPredicateArgument; a
	getBlockPredicate (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Ljava/util/function/Predicate; a
	parse (Lcom/mojang/brigadier/StringReader;)Lnet/minecraft/commands/arguments/blocks/BlockPredicateArgument$Result; a
net/minecraft/commands/arguments/blocks/BlockPredicateArgument$BlockPredicate ed$a
	nbt c
	properties b
	state a
	test (Lnet/minecraft/world/level/block/state/pattern/BlockInWorld;)Z a
net/minecraft/commands/arguments/blocks/BlockPredicateArgument$Result ed$b
net/minecraft/commands/arguments/blocks/BlockPredicateArgument$TagPredicate ed$c
	nbt b
	tag a
	vagueProperties c
	test (Lnet/minecraft/world/level/block/state/pattern/BlockInWorld;)Z a
net/minecraft/commands/arguments/blocks/BlockStateArgument ee
	EXAMPLES a
	block ()Lnet/minecraft/commands/arguments/blocks/BlockStateArgument; a
	getBlock (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lnet/minecraft/commands/arguments/blocks/BlockInput; a
	parse (Lcom/mojang/brigadier/StringReader;)Lnet/minecraft/commands/arguments/blocks/BlockInput; a
net/minecraft/commands/arguments/blocks/BlockStateParser ef
	ERROR_DUPLICATE_PROPERTY d
	ERROR_EXPECTED_END_OF_PROPERTIES g
	ERROR_EXPECTED_VALUE f
	ERROR_INVALID_VALUE e
	ERROR_NO_TAGS_ALLOWED a
	ERROR_UNKNOWN_BLOCK b
	ERROR_UNKNOWN_PROPERTY c
	SUGGEST_NOTHING h
	definition n
	forTesting j
	id m
	nbt p
	properties k
	reader i
	state o
	suggestions s
	tag q
	tagCursor r
	vagueProperties l
	addSuggestions (Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Lnet/minecraft/world/level/block/state/properties/Property;)Lcom/mojang/brigadier/suggestion/SuggestionsBuilder; a
	appendProperty (Ljava/lang/StringBuilder;Lnet/minecraft/world/level/block/state/properties/Property;Ljava/lang/Comparable;)V a
	fillSuggestions (Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Lnet/minecraft/tags/TagCollection;)Ljava/util/concurrent/CompletableFuture; a
	getNbt ()Lnet/minecraft/nbt/CompoundTag; c
	getProperties ()Ljava/util/Map; a
	getState ()Lnet/minecraft/world/level/block/state/BlockState; b
	getTag ()Lnet/minecraft/resources/ResourceLocation; d
	getVagueProperties ()Ljava/util/Map; j
	hasBlockEntity (Lnet/minecraft/tags/TagCollection;)Z a
	parse (Z)Lnet/minecraft/commands/arguments/blocks/BlockStateParser; a
	readBlock ()V e
	readNbt ()V i
	readProperties ()V g
	readTag ()V f
	readVagueProperties ()V h
	serialize (Lnet/minecraft/world/level/block/state/BlockState;)Ljava/lang/String; a
	setValue (Lnet/minecraft/world/level/block/state/properties/Property;Ljava/lang/String;I)V a
	suggestBlockIdOrTag (Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Lnet/minecraft/tags/TagCollection;)Ljava/util/concurrent/CompletableFuture; l
	suggestEquals (Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Lnet/minecraft/tags/TagCollection;)Ljava/util/concurrent/CompletableFuture; g
	suggestNextPropertyOrEnd (Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Lnet/minecraft/tags/TagCollection;)Ljava/util/concurrent/CompletableFuture; h
	suggestOpenNbt (Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Lnet/minecraft/tags/TagCollection;)Ljava/util/concurrent/CompletableFuture; f
	suggestOpenPropertiesOrNbt (Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Lnet/minecraft/tags/TagCollection;)Ljava/util/concurrent/CompletableFuture; j
	suggestOpenVaguePropertiesOrNbt (Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Lnet/minecraft/tags/TagCollection;)Ljava/util/concurrent/CompletableFuture; i
	suggestPropertyName (Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Lnet/minecraft/tags/TagCollection;)Ljava/util/concurrent/CompletableFuture; d
	suggestPropertyNameOrEnd (Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Lnet/minecraft/tags/TagCollection;)Ljava/util/concurrent/CompletableFuture; b
	suggestTag (Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Lnet/minecraft/tags/TagCollection;)Ljava/util/concurrent/CompletableFuture; k
	suggestVaguePropertyName (Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Lnet/minecraft/tags/TagCollection;)Ljava/util/concurrent/CompletableFuture; e
	suggestVaguePropertyNameOrEnd (Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Lnet/minecraft/tags/TagCollection;)Ljava/util/concurrent/CompletableFuture; c
	suggestVaguePropertyValue (Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Lnet/minecraft/tags/TagCollection;Ljava/lang/String;)Ljava/util/concurrent/CompletableFuture; a
net/minecraft/commands/arguments/coordinates/BlockPosArgument eh
	ERROR_NOT_LOADED a
	ERROR_OUT_OF_WORLD b
	EXAMPLES c
	blockPos ()Lnet/minecraft/commands/arguments/coordinates/BlockPosArgument; a
	getLoadedBlockPos (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lnet/minecraft/core/BlockPos; a
	getOrLoadBlockPos (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lnet/minecraft/core/BlockPos; b
	parse (Lcom/mojang/brigadier/StringReader;)Lnet/minecraft/commands/arguments/coordinates/Coordinates; a
net/minecraft/commands/arguments/coordinates/ColumnPosArgument ei
	ERROR_NOT_COMPLETE a
	EXAMPLES b
	columnPos ()Lnet/minecraft/commands/arguments/coordinates/ColumnPosArgument; a
	getColumnPos (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lnet/minecraft/server/level/ColumnPos; a
	parse (Lcom/mojang/brigadier/StringReader;)Lnet/minecraft/commands/arguments/coordinates/Coordinates; a
net/minecraft/commands/arguments/coordinates/Coordinates ej
	getBlockPos (Lnet/minecraft/commands/CommandSourceStack;)Lnet/minecraft/core/BlockPos; c
	getPosition (Lnet/minecraft/commands/CommandSourceStack;)Lnet/minecraft/world/phys/Vec3; a
	getRotation (Lnet/minecraft/commands/CommandSourceStack;)Lnet/minecraft/world/phys/Vec2; b
	isXRelative ()Z a
	isYRelative ()Z b
	isZRelative ()Z c
net/minecraft/commands/arguments/coordinates/LocalCoordinates ek
	forwards c
	left a
	up b
	getPosition (Lnet/minecraft/commands/CommandSourceStack;)Lnet/minecraft/world/phys/Vec3; a
	getRotation (Lnet/minecraft/commands/CommandSourceStack;)Lnet/minecraft/world/phys/Vec2; b
	isXRelative ()Z a
	isYRelative ()Z b
	isZRelative ()Z c
	parse (Lcom/mojang/brigadier/StringReader;)Lnet/minecraft/commands/arguments/coordinates/LocalCoordinates; a
	readDouble (Lcom/mojang/brigadier/StringReader;I)D a
net/minecraft/commands/arguments/coordinates/RotationArgument el
	ERROR_NOT_COMPLETE a
	EXAMPLES b
	getRotation (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lnet/minecraft/commands/arguments/coordinates/Coordinates; a
	parse (Lcom/mojang/brigadier/StringReader;)Lnet/minecraft/commands/arguments/coordinates/Coordinates; a
	rotation ()Lnet/minecraft/commands/arguments/coordinates/RotationArgument; a
net/minecraft/commands/arguments/coordinates/SwizzleArgument em
	ERROR_INVALID b
	EXAMPLES a
	getSwizzle (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Ljava/util/EnumSet; a
	parse (Lcom/mojang/brigadier/StringReader;)Ljava/util/EnumSet; a
	swizzle ()Lnet/minecraft/commands/arguments/coordinates/SwizzleArgument; a
net/minecraft/commands/arguments/coordinates/Vec2Argument en
	ERROR_NOT_COMPLETE a
	EXAMPLES b
	centerCorrect c
	getVec2 (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lnet/minecraft/world/phys/Vec2; a
	parse (Lcom/mojang/brigadier/StringReader;)Lnet/minecraft/commands/arguments/coordinates/Coordinates; a
	vec2 ()Lnet/minecraft/commands/arguments/coordinates/Vec2Argument; a
	vec2 (Z)Lnet/minecraft/commands/arguments/coordinates/Vec2Argument; a
net/minecraft/commands/arguments/coordinates/Vec3Argument eo
	ERROR_MIXED_TYPE b
	ERROR_NOT_COMPLETE a
	EXAMPLES c
	centerCorrect d
	getCoordinates (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lnet/minecraft/commands/arguments/coordinates/Coordinates; b
	getVec3 (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lnet/minecraft/world/phys/Vec3; a
	parse (Lcom/mojang/brigadier/StringReader;)Lnet/minecraft/commands/arguments/coordinates/Coordinates; a
	vec3 ()Lnet/minecraft/commands/arguments/coordinates/Vec3Argument; a
	vec3 (Z)Lnet/minecraft/commands/arguments/coordinates/Vec3Argument; a
net/minecraft/commands/arguments/coordinates/WorldCoordinate ep
	ERROR_EXPECTED_DOUBLE a
	ERROR_EXPECTED_INT b
	relative c
	value d
	get (D)D a
	isRelative ()Z a
	isRelative (Lcom/mojang/brigadier/StringReader;)Z b
	parseDouble (Lcom/mojang/brigadier/StringReader;Z)Lnet/minecraft/commands/arguments/coordinates/WorldCoordinate; a
	parseInt (Lcom/mojang/brigadier/StringReader;)Lnet/minecraft/commands/arguments/coordinates/WorldCoordinate; a
net/minecraft/commands/arguments/coordinates/WorldCoordinates eq
	x a
	y b
	z c
	absolute (DDD)Lnet/minecraft/commands/arguments/coordinates/WorldCoordinates; a
	absolute (Lnet/minecraft/world/phys/Vec2;)Lnet/minecraft/commands/arguments/coordinates/WorldCoordinates; a
	current ()Lnet/minecraft/commands/arguments/coordinates/WorldCoordinates; d
	getPosition (Lnet/minecraft/commands/CommandSourceStack;)Lnet/minecraft/world/phys/Vec3; a
	getRotation (Lnet/minecraft/commands/CommandSourceStack;)Lnet/minecraft/world/phys/Vec2; b
	isXRelative ()Z a
	isYRelative ()Z b
	isZRelative ()Z c
	parseDouble (Lcom/mojang/brigadier/StringReader;Z)Lnet/minecraft/commands/arguments/coordinates/WorldCoordinates; a
	parseInt (Lcom/mojang/brigadier/StringReader;)Lnet/minecraft/commands/arguments/coordinates/WorldCoordinates; a
net/minecraft/commands/arguments/item/FunctionArgument es
	ERROR_UNKNOWN_FUNCTION c
	ERROR_UNKNOWN_TAG b
	EXAMPLES a
	functions ()Lnet/minecraft/commands/arguments/item/FunctionArgument; a
	getFunction (Lcom/mojang/brigadier/context/CommandContext;Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/commands/CommandFunction; c
	getFunctionOrTag (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lcom/mojang/datafixers/util/Pair; b
	getFunctionTag (Lcom/mojang/brigadier/context/CommandContext;Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/tags/Tag; d
	getFunctions (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Ljava/util/Collection; a
	parse (Lcom/mojang/brigadier/StringReader;)Lnet/minecraft/commands/arguments/item/FunctionArgument$Result; a
net/minecraft/commands/arguments/item/FunctionArgument$Result es$a
	create (Lcom/mojang/brigadier/context/CommandContext;)Ljava/util/Collection; a
	unwrap (Lcom/mojang/brigadier/context/CommandContext;)Lcom/mojang/datafixers/util/Pair; b
net/minecraft/commands/arguments/item/ItemArgument et
	EXAMPLES a
	getItem (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lnet/minecraft/commands/arguments/item/ItemInput; a
	item ()Lnet/minecraft/commands/arguments/item/ItemArgument; a
	parse (Lcom/mojang/brigadier/StringReader;)Lnet/minecraft/commands/arguments/item/ItemInput; a
net/minecraft/commands/arguments/item/ItemInput eu
	ERROR_STACK_TOO_BIG a
	item b
	tag c
	createItemStack (IZ)Lnet/minecraft/world/item/ItemStack; a
	getItem ()Lnet/minecraft/world/item/Item; a
	getTag ()Lnet/minecraft/nbt/CompoundTag; b
	serialize ()Ljava/lang/String; c
	test (Lnet/minecraft/world/item/ItemStack;)Z a
net/minecraft/commands/arguments/item/ItemParser ev
	ERROR_NO_TAGS_ALLOWED a
	ERROR_UNKNOWN_ITEM b
	SUGGEST_NOTHING c
	forTesting e
	item g
	nbt h
	properties f
	reader d
	suggestions k
	tag i
	tagCursor j
	fillSuggestions (Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Lnet/minecraft/tags/TagCollection;)Ljava/util/concurrent/CompletableFuture; a
	getItem ()Lnet/minecraft/world/item/Item; b
	getNbt ()Lnet/minecraft/nbt/CompoundTag; c
	getProperties ()Ljava/util/Map; a
	getTag ()Lnet/minecraft/resources/ResourceLocation; d
	parse ()Lnet/minecraft/commands/arguments/item/ItemParser; h
	readItem ()V e
	readNbt ()V g
	readTag ()V f
	suggestItemIdOrTag (Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Lnet/minecraft/tags/TagCollection;)Ljava/util/concurrent/CompletableFuture; d
	suggestOpenNbt (Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Lnet/minecraft/tags/TagCollection;)Ljava/util/concurrent/CompletableFuture; b
	suggestTag (Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Lnet/minecraft/tags/TagCollection;)Ljava/util/concurrent/CompletableFuture; c
net/minecraft/commands/arguments/item/ItemPredicateArgument ew
	ERROR_UNKNOWN_TAG b
	EXAMPLES a
	getItemPredicate (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Ljava/util/function/Predicate; a
	itemPredicate ()Lnet/minecraft/commands/arguments/item/ItemPredicateArgument; a
	parse (Lcom/mojang/brigadier/StringReader;)Lnet/minecraft/commands/arguments/item/ItemPredicateArgument$Result; a
net/minecraft/commands/arguments/item/ItemPredicateArgument$ItemPredicate ew$a
	item a
	nbt b
	test (Lnet/minecraft/world/item/ItemStack;)Z a
net/minecraft/commands/arguments/item/ItemPredicateArgument$Result ew$b
net/minecraft/commands/arguments/item/ItemPredicateArgument$TagPredicate ew$c
	nbt b
	tag a
	test (Lnet/minecraft/world/item/ItemStack;)Z a
net/minecraft/commands/arguments/selector/EntitySelector ez
	aabb g
	currentEntity i
	entityUUID k
	includesEntities b
	maxResults a
	order h
	playerName j
	position f
	predicate d
	range e
	type l
	usesSelector m
	worldLimited c
	addEntities (Ljava/util/List;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/phys/Vec3;Ljava/util/function/Predicate;)V a
	checkPermissions (Lnet/minecraft/commands/CommandSourceStack;)V e
	findEntities (Lnet/minecraft/commands/CommandSourceStack;)Ljava/util/List; b
	findPlayers (Lnet/minecraft/commands/CommandSourceStack;)Ljava/util/List; d
	findSingleEntity (Lnet/minecraft/commands/CommandSourceStack;)Lnet/minecraft/world/entity/Entity; a
	findSinglePlayer (Lnet/minecraft/commands/CommandSourceStack;)Lnet/minecraft/server/level/ServerPlayer; c
	getMaxResults ()I a
	getPredicate (Lnet/minecraft/world/phys/Vec3;)Ljava/util/function/Predicate; a
	includesEntities ()Z b
	isSelfSelector ()Z c
	isWorldLimited ()Z d
	joinNames (Ljava/util/List;)Lnet/minecraft/network/chat/MutableComponent; a
	sortAndLimit (Lnet/minecraft/world/phys/Vec3;Ljava/util/List;)Ljava/util/List; a
	usesSelector ()Z e
net/minecraft/commands/arguments/selector/EntitySelectorParser fa
	ERROR_EXPECTED_END_OF_OPTIONS e
	ERROR_EXPECTED_OPTION_VALUE f
	ERROR_INVALID_NAME_OR_UUID a
	ERROR_MISSING_SELECTOR_TYPE d
	ERROR_SELECTORS_NOT_ALLOWED c
	ERROR_UNKNOWN_SELECTOR_TYPE b
	ORDER_ARBITRARY g
	ORDER_FURTHEST i
	ORDER_NEAREST h
	ORDER_RANDOM j
	SUGGEST_NOTHING k
	allowSelectors m
	currentEntity C
	deltaX v
	deltaY w
	deltaZ x
	distance q
	entityUUID F
	hasAdvancements S
	hasGamemodeEquals L
	hasGamemodeNotEquals M
	hasNameEquals H
	hasNameNotEquals I
	hasScores R
	hasTeamEquals N
	hasTeamNotEquals O
	includesEntities o
	isLimited J
	isSorted K
	level r
	maxResults n
	order B
	playerName D
	predicate A
	reader l
	rotX y
	rotY z
	startPosition E
	suggestions G
	type P
	typeInverse Q
	usesSelectors T
	worldLimited p
	x s
	y t
	z u
	addPredicate (Ljava/util/function/Predicate;)V a
	createAabb (DDD)Lnet/minecraft/world/phys/AABB; a
	createRotationPredicate (Lnet/minecraft/advancements/critereon/WrappedMinMaxBounds;Ljava/util/function/ToDoubleFunction;)Ljava/util/function/Predicate; a
	fillSelectorSuggestions (Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)V a
	fillSuggestions (Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Ljava/util/function/Consumer;)Ljava/util/concurrent/CompletableFuture; a
	finalizePredicates ()V I
	getDeltaX ()Ljava/lang/Double; p
	getDeltaY ()Ljava/lang/Double; q
	getDeltaZ ()Ljava/lang/Double; r
	getDistance ()Lnet/minecraft/advancements/critereon/MinMaxBounds$Floats; i
	getLevel ()Lnet/minecraft/advancements/critereon/MinMaxBounds$Ints; j
	getOrder ()Ljava/util/function/BiConsumer; s
	getReader ()Lcom/mojang/brigadier/StringReader; g
	getRotX ()Lnet/minecraft/advancements/critereon/WrappedMinMaxBounds; k
	getRotY ()Lnet/minecraft/advancements/critereon/WrappedMinMaxBounds; l
	getSelector ()Lnet/minecraft/commands/arguments/selector/EntitySelector; a
	getX ()Ljava/lang/Double; m
	getY ()Ljava/lang/Double; n
	getZ ()Ljava/lang/Double; o
	hasAdvancements ()Z H
	hasGamemodeEquals ()Z z
	hasGamemodeNotEquals ()Z A
	hasNameEquals ()Z v
	hasNameNotEquals ()Z w
	hasScores ()Z G
	hasTeamEquals ()Z B
	hasTeamNotEquals ()Z C
	isCurrentEntity ()Z u
	isLimited ()Z x
	isSorted ()Z y
	isTag ()Z f
	isTypeLimited ()Z E
	isTypeLimitedInversely ()Z F
	limitToType (Lnet/minecraft/world/entity/EntityType;)V a
	parse ()Lnet/minecraft/commands/arguments/selector/EntitySelector; t
	parseNameOrUUID ()V c
	parseOptions ()V d
	parseSelector ()V b
	setDeltaX (D)V d
	setDeltaY (D)V e
	setDeltaZ (D)V f
	setDistance (Lnet/minecraft/advancements/critereon/MinMaxBounds$Floats;)V a
	setHasAdvancements (Z)V k
	setHasGamemodeEquals (Z)V f
	setHasGamemodeNotEquals (Z)V g
	setHasNameEquals (Z)V b
	setHasNameNotEquals (Z)V c
	setHasScores (Z)V j
	setHasTeamEquals (Z)V h
	setHasTeamNotEquals (Z)V i
	setIncludesEntities (Z)V a
	setLevel (Lnet/minecraft/advancements/critereon/MinMaxBounds$Ints;)V a
	setLimited (Z)V d
	setMaxResults (I)V a
	setOrder (Ljava/util/function/BiConsumer;)V a
	setRotX (Lnet/minecraft/advancements/critereon/WrappedMinMaxBounds;)V a
	setRotY (Lnet/minecraft/advancements/critereon/WrappedMinMaxBounds;)V b
	setSorted (Z)V e
	setSuggestions (Ljava/util/function/BiFunction;)V a
	setTypeLimitedInversely ()V D
	setWorldLimited ()V h
	setX (D)V a
	setY (D)V b
	setZ (D)V c
	shouldInvertValue ()Z e
	suggestEquals (Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Ljava/util/function/Consumer;)Ljava/util/concurrent/CompletableFuture; i
	suggestName (Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Ljava/util/function/Consumer;)Ljava/util/concurrent/CompletableFuture; c
	suggestNameOrSelector (Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Ljava/util/function/Consumer;)Ljava/util/concurrent/CompletableFuture; b
	suggestOpenOptions (Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Ljava/util/function/Consumer;)Ljava/util/concurrent/CompletableFuture; e
	suggestOptionsKey (Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Ljava/util/function/Consumer;)Ljava/util/concurrent/CompletableFuture; g
	suggestOptionsKeyOrClose (Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Ljava/util/function/Consumer;)Ljava/util/concurrent/CompletableFuture; f
	suggestOptionsNextOrClose (Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Ljava/util/function/Consumer;)Ljava/util/concurrent/CompletableFuture; h
	suggestSelector (Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Ljava/util/function/Consumer;)Ljava/util/concurrent/CompletableFuture; d
net/minecraft/commands/arguments/selector/options/EntitySelectorOptions fb
	ERROR_ENTITY_TYPE_INVALID h
	ERROR_GAME_MODE_INVALID g
	ERROR_INAPPLICABLE_OPTION b
	ERROR_LEVEL_NEGATIVE d
	ERROR_LIMIT_TOO_SMALL e
	ERROR_RANGE_NEGATIVE c
	ERROR_SORT_UNKNOWN f
	ERROR_UNKNOWN_OPTION a
	OPTIONS i
	bootStrap ()V a
	get (Lnet/minecraft/commands/arguments/selector/EntitySelectorParser;Ljava/lang/String;I)Lnet/minecraft/commands/arguments/selector/options/EntitySelectorOptions$Modifier; a
	register (Ljava/lang/String;Lnet/minecraft/commands/arguments/selector/options/EntitySelectorOptions$Modifier;Ljava/util/function/Predicate;Lnet/minecraft/network/chat/Component;)V a
	suggestNames (Lnet/minecraft/commands/arguments/selector/EntitySelectorParser;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)V a
net/minecraft/commands/arguments/selector/options/EntitySelectorOptions$Modifier fb$a
net/minecraft/commands/arguments/selector/options/EntitySelectorOptions$Option fb$b
	description c
	modifier a
	predicate b
net/minecraft/commands/synchronization/ArgumentSerializer fg
	deserializeFromNetwork (Lnet/minecraft/network/FriendlyByteBuf;)Lcom/mojang/brigadier/arguments/ArgumentType; b
	serializeToJson (Lcom/mojang/brigadier/arguments/ArgumentType;Lcom/google/gson/JsonObject;)V a
	serializeToNetwork (Lcom/mojang/brigadier/arguments/ArgumentType;Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/commands/synchronization/ArgumentTypes fh
	BY_CLASS b
	BY_NAME c
	LOGGER a
	bootStrap ()V a
	deserialize (Lnet/minecraft/network/FriendlyByteBuf;)Lcom/mojang/brigadier/arguments/ArgumentType; a
	get (Lcom/mojang/brigadier/arguments/ArgumentType;)Lnet/minecraft/commands/synchronization/ArgumentTypes$Entry; a
	get (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/commands/synchronization/ArgumentTypes$Entry; a
	register (Ljava/lang/String;Ljava/lang/Class;Lnet/minecraft/commands/synchronization/ArgumentSerializer;)V a
	serialize (Lnet/minecraft/network/FriendlyByteBuf;Lcom/mojang/brigadier/arguments/ArgumentType;)V a
	serializeNodeToJson (Lcom/mojang/brigadier/CommandDispatcher;Lcom/mojang/brigadier/tree/CommandNode;)Lcom/google/gson/JsonObject; a
	serializeToJson (Lcom/google/gson/JsonObject;Lcom/mojang/brigadier/arguments/ArgumentType;)V a
net/minecraft/commands/synchronization/ArgumentTypes$Entry fh$a
	clazz a
	name c
	serializer b
net/minecraft/commands/synchronization/EmptyArgumentSerializer fi
	constructor a
	deserializeFromNetwork (Lnet/minecraft/network/FriendlyByteBuf;)Lcom/mojang/brigadier/arguments/ArgumentType; b
	serializeToJson (Lcom/mojang/brigadier/arguments/ArgumentType;Lcom/google/gson/JsonObject;)V a
	serializeToNetwork (Lcom/mojang/brigadier/arguments/ArgumentType;Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/commands/synchronization/SuggestionProviders fj
	ALL_RECIPES b
	ASK_SERVER a
	AVAILABLE_BIOMES d
	AVAILABLE_SOUNDS c
	DEFAULT_NAME g
	PROVIDERS_BY_NAME f
	SUMMONABLE_ENTITIES e
	getName (Lcom/mojang/brigadier/suggestion/SuggestionProvider;)Lnet/minecraft/resources/ResourceLocation; a
	getProvider (Lnet/minecraft/resources/ResourceLocation;)Lcom/mojang/brigadier/suggestion/SuggestionProvider; a
	register (Lnet/minecraft/resources/ResourceLocation;Lcom/mojang/brigadier/suggestion/SuggestionProvider;)Lcom/mojang/brigadier/suggestion/SuggestionProvider; a
	safelySwap (Lcom/mojang/brigadier/suggestion/SuggestionProvider;)Lcom/mojang/brigadier/suggestion/SuggestionProvider; b
net/minecraft/commands/synchronization/SuggestionProviders$Wrapper fj$a
	delegate a
	name b
net/minecraft/commands/synchronization/brigadier/BrigadierArgumentSerializers fk
	bootstrap ()V a
	createNumberFlags (ZZ)B a
	numberHasMax (B)Z b
	numberHasMin (B)Z a
net/minecraft/commands/synchronization/brigadier/DoubleArgumentSerializer fl
	deserializeFromNetwork (Lnet/minecraft/network/FriendlyByteBuf;)Lcom/mojang/brigadier/arguments/ArgumentType; b
	deserializeFromNetwork (Lnet/minecraft/network/FriendlyByteBuf;)Lcom/mojang/brigadier/arguments/DoubleArgumentType; a
	serializeToJson (Lcom/mojang/brigadier/arguments/ArgumentType;Lcom/google/gson/JsonObject;)V a
	serializeToJson (Lcom/mojang/brigadier/arguments/DoubleArgumentType;Lcom/google/gson/JsonObject;)V a
	serializeToNetwork (Lcom/mojang/brigadier/arguments/ArgumentType;Lnet/minecraft/network/FriendlyByteBuf;)V a
	serializeToNetwork (Lcom/mojang/brigadier/arguments/DoubleArgumentType;Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/commands/synchronization/brigadier/FloatArgumentSerializer fm
	deserializeFromNetwork (Lnet/minecraft/network/FriendlyByteBuf;)Lcom/mojang/brigadier/arguments/ArgumentType; b
	deserializeFromNetwork (Lnet/minecraft/network/FriendlyByteBuf;)Lcom/mojang/brigadier/arguments/FloatArgumentType; a
	serializeToJson (Lcom/mojang/brigadier/arguments/ArgumentType;Lcom/google/gson/JsonObject;)V a
	serializeToJson (Lcom/mojang/brigadier/arguments/FloatArgumentType;Lcom/google/gson/JsonObject;)V a
	serializeToNetwork (Lcom/mojang/brigadier/arguments/ArgumentType;Lnet/minecraft/network/FriendlyByteBuf;)V a
	serializeToNetwork (Lcom/mojang/brigadier/arguments/FloatArgumentType;Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/commands/synchronization/brigadier/IntegerArgumentSerializer fn
	deserializeFromNetwork (Lnet/minecraft/network/FriendlyByteBuf;)Lcom/mojang/brigadier/arguments/ArgumentType; b
	deserializeFromNetwork (Lnet/minecraft/network/FriendlyByteBuf;)Lcom/mojang/brigadier/arguments/IntegerArgumentType; a
	serializeToJson (Lcom/mojang/brigadier/arguments/ArgumentType;Lcom/google/gson/JsonObject;)V a
	serializeToJson (Lcom/mojang/brigadier/arguments/IntegerArgumentType;Lcom/google/gson/JsonObject;)V a
	serializeToNetwork (Lcom/mojang/brigadier/arguments/ArgumentType;Lnet/minecraft/network/FriendlyByteBuf;)V a
	serializeToNetwork (Lcom/mojang/brigadier/arguments/IntegerArgumentType;Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/commands/synchronization/brigadier/LongArgumentSerializer fo
	deserializeFromNetwork (Lnet/minecraft/network/FriendlyByteBuf;)Lcom/mojang/brigadier/arguments/ArgumentType; b
	deserializeFromNetwork (Lnet/minecraft/network/FriendlyByteBuf;)Lcom/mojang/brigadier/arguments/LongArgumentType; a
	serializeToJson (Lcom/mojang/brigadier/arguments/ArgumentType;Lcom/google/gson/JsonObject;)V a
	serializeToJson (Lcom/mojang/brigadier/arguments/LongArgumentType;Lcom/google/gson/JsonObject;)V a
	serializeToNetwork (Lcom/mojang/brigadier/arguments/ArgumentType;Lnet/minecraft/network/FriendlyByteBuf;)V a
	serializeToNetwork (Lcom/mojang/brigadier/arguments/LongArgumentType;Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/commands/synchronization/brigadier/StringArgumentSerializer fp
	deserializeFromNetwork (Lnet/minecraft/network/FriendlyByteBuf;)Lcom/mojang/brigadier/arguments/ArgumentType; b
	deserializeFromNetwork (Lnet/minecraft/network/FriendlyByteBuf;)Lcom/mojang/brigadier/arguments/StringArgumentType; a
	serializeToJson (Lcom/mojang/brigadier/arguments/ArgumentType;Lcom/google/gson/JsonObject;)V a
	serializeToJson (Lcom/mojang/brigadier/arguments/StringArgumentType;Lcom/google/gson/JsonObject;)V a
	serializeToNetwork (Lcom/mojang/brigadier/arguments/ArgumentType;Lnet/minecraft/network/FriendlyByteBuf;)V a
	serializeToNetwork (Lcom/mojang/brigadier/arguments/StringArgumentType;Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/core/AxisCycle fs
	$VALUES f
	AXIS_VALUES d
	BACKWARD c
	FORWARD b
	NONE a
	VALUES e
	between (Lnet/minecraft/core/Direction$Axis;Lnet/minecraft/core/Direction$Axis;)Lnet/minecraft/core/AxisCycle; a
	cycle (DDDLnet/minecraft/core/Direction$Axis;)D a
	cycle (IIILnet/minecraft/core/Direction$Axis;)I a
	cycle (Lnet/minecraft/core/Direction$Axis;)Lnet/minecraft/core/Direction$Axis; a
	inverse ()Lnet/minecraft/core/AxisCycle; a
net/minecraft/core/BlockMath ft
	LOGGER c
	vanillaUvTransformGlobalToLocal b
	vanillaUvTransformLocalToGlobal a
	blockCenterToCorner (Lcom/mojang/math/Transformation;)Lcom/mojang/math/Transformation; a
	blockCornerToCenter (Lcom/mojang/math/Transformation;)Lcom/mojang/math/Transformation; b
	getUVLockTransform (Lcom/mojang/math/Transformation;Lnet/minecraft/core/Direction;Ljava/util/function/Supplier;)Lcom/mojang/math/Transformation; a
net/minecraft/core/BlockPos fu
	CODEC a
	LOGGER e
	PACKED_X_LENGTH f
	PACKED_X_MASK i
	PACKED_Y_LENGTH h
	PACKED_Y_MASK j
	PACKED_Z_LENGTH g
	PACKED_Z_MASK k
	X_OFFSET m
	ZERO b
	Z_OFFSET l
	above ()Lnet/minecraft/core/BlockPos; b
	above ()Lnet/minecraft/core/Vec3i; o
	above (I)Lnet/minecraft/core/BlockPos; b
	above (I)Lnet/minecraft/core/Vec3i; m
	asLong ()J a
	asLong (III)J a
	below ()Lnet/minecraft/core/BlockPos; c
	below ()Lnet/minecraft/core/Vec3i; n
	below (I)Lnet/minecraft/core/BlockPos; c
	below (I)Lnet/minecraft/core/Vec3i; l
	betweenClosed (IIIIII)Ljava/lang/Iterable; b
	betweenClosed (Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Ljava/lang/Iterable; a
	betweenClosedStream (IIIIII)Ljava/util/stream/Stream; a
	betweenClosedStream (Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Ljava/util/stream/Stream; b
	betweenClosedStream (Lnet/minecraft/world/level/levelgen/structure/BoundingBox;)Ljava/util/stream/Stream; a
	betweenClosedStream (Lnet/minecraft/world/phys/AABB;)Ljava/util/stream/Stream; a
	cross (Lnet/minecraft/core/Vec3i;)Lnet/minecraft/core/BlockPos; c
	cross (Lnet/minecraft/core/Vec3i;)Lnet/minecraft/core/Vec3i; d
	east ()Lnet/minecraft/core/BlockPos; g
	east ()Lnet/minecraft/core/Vec3i; j
	east (I)Lnet/minecraft/core/BlockPos; g
	east (I)Lnet/minecraft/core/Vec3i; h
	findClosestMatch (Lnet/minecraft/core/BlockPos;IILjava/util/function/Predicate;)Ljava/util/Optional; a
	getFlatIndex (J)J f
	getX (J)I b
	getY (J)I c
	getZ (J)I d
	immutable ()Lnet/minecraft/core/BlockPos; h
	isOutsideBuildHeight (J)Z a
	multiply (I)Lnet/minecraft/core/BlockPos; a
	multiply (I)Lnet/minecraft/core/Vec3i; n
	mutable ()Lnet/minecraft/core/BlockPos$MutableBlockPos; i
	north ()Lnet/minecraft/core/BlockPos; d
	north ()Lnet/minecraft/core/Vec3i; m
	north (I)Lnet/minecraft/core/BlockPos; d
	north (I)Lnet/minecraft/core/Vec3i; k
	of (J)Lnet/minecraft/core/BlockPos; e
	offset (DDD)Lnet/minecraft/core/BlockPos; a
	offset (DDD)Lnet/minecraft/core/Vec3i; b
	offset (III)Lnet/minecraft/core/BlockPos; b
	offset (III)Lnet/minecraft/core/Vec3i; c
	offset (JIII)J a
	offset (JLnet/minecraft/core/Direction;)J a
	offset (Lnet/minecraft/core/Vec3i;)Lnet/minecraft/core/BlockPos; a
	offset (Lnet/minecraft/core/Vec3i;)Lnet/minecraft/core/Vec3i; f
	randomBetweenClosed (Ljava/util/Random;IIIIIII)Ljava/lang/Iterable; a
	relative (Lnet/minecraft/core/Direction$Axis;I)Lnet/minecraft/core/BlockPos; a
	relative (Lnet/minecraft/core/Direction$Axis;I)Lnet/minecraft/core/Vec3i; b
	relative (Lnet/minecraft/core/Direction;)Lnet/minecraft/core/BlockPos; a
	relative (Lnet/minecraft/core/Direction;)Lnet/minecraft/core/Vec3i; b
	relative (Lnet/minecraft/core/Direction;I)Lnet/minecraft/core/BlockPos; a
	relative (Lnet/minecraft/core/Direction;I)Lnet/minecraft/core/Vec3i; b
	rotate (Lnet/minecraft/world/level/block/Rotation;)Lnet/minecraft/core/BlockPos; a
	south ()Lnet/minecraft/core/BlockPos; e
	south ()Lnet/minecraft/core/Vec3i; l
	south (I)Lnet/minecraft/core/BlockPos; e
	south (I)Lnet/minecraft/core/Vec3i; j
	subtract (Lnet/minecraft/core/Vec3i;)Lnet/minecraft/core/BlockPos; b
	subtract (Lnet/minecraft/core/Vec3i;)Lnet/minecraft/core/Vec3i; e
	west ()Lnet/minecraft/core/BlockPos; f
	west ()Lnet/minecraft/core/Vec3i; k
	west (I)Lnet/minecraft/core/BlockPos; f
	west (I)Lnet/minecraft/core/Vec3i; i
	withinManhattan (Lnet/minecraft/core/BlockPos;III)Ljava/lang/Iterable; a
	withinManhattanStream (Lnet/minecraft/core/BlockPos;III)Ljava/util/stream/Stream; b
net/minecraft/core/BlockPos$MutableBlockPos fu$a
	above ()Lnet/minecraft/core/Vec3i; o
	above (I)Lnet/minecraft/core/Vec3i; m
	below ()Lnet/minecraft/core/Vec3i; n
	below (I)Lnet/minecraft/core/Vec3i; l
	clamp (Lnet/minecraft/core/Direction$Axis;II)Lnet/minecraft/core/BlockPos$MutableBlockPos; a
	cross (Lnet/minecraft/core/Vec3i;)Lnet/minecraft/core/Vec3i; d
	east ()Lnet/minecraft/core/Vec3i; j
	east (I)Lnet/minecraft/core/Vec3i; h
	immutable ()Lnet/minecraft/core/BlockPos; h
	move (III)Lnet/minecraft/core/BlockPos$MutableBlockPos; e
	move (Lnet/minecraft/core/Direction;)Lnet/minecraft/core/BlockPos$MutableBlockPos; c
	move (Lnet/minecraft/core/Direction;I)Lnet/minecraft/core/BlockPos$MutableBlockPos; c
	move (Lnet/minecraft/core/Vec3i;)Lnet/minecraft/core/BlockPos$MutableBlockPos; h
	multiply (I)Lnet/minecraft/core/BlockPos; a
	multiply (I)Lnet/minecraft/core/Vec3i; n
	north ()Lnet/minecraft/core/Vec3i; m
	north (I)Lnet/minecraft/core/Vec3i; k
	offset (DDD)Lnet/minecraft/core/BlockPos; a
	offset (DDD)Lnet/minecraft/core/Vec3i; b
	offset (III)Lnet/minecraft/core/BlockPos; b
	offset (III)Lnet/minecraft/core/Vec3i; c
	offset (Lnet/minecraft/core/Vec3i;)Lnet/minecraft/core/Vec3i; f
	relative (Lnet/minecraft/core/Direction$Axis;I)Lnet/minecraft/core/BlockPos; a
	relative (Lnet/minecraft/core/Direction$Axis;I)Lnet/minecraft/core/Vec3i; b
	relative (Lnet/minecraft/core/Direction;)Lnet/minecraft/core/Vec3i; b
	relative (Lnet/minecraft/core/Direction;I)Lnet/minecraft/core/BlockPos; a
	relative (Lnet/minecraft/core/Direction;I)Lnet/minecraft/core/Vec3i; b
	rotate (Lnet/minecraft/world/level/block/Rotation;)Lnet/minecraft/core/BlockPos; a
	set (DDD)Lnet/minecraft/core/BlockPos$MutableBlockPos; c
	set (III)Lnet/minecraft/core/BlockPos$MutableBlockPos; d
	set (J)Lnet/minecraft/core/BlockPos$MutableBlockPos; g
	set (Lnet/minecraft/core/AxisCycle;III)Lnet/minecraft/core/BlockPos$MutableBlockPos; a
	set (Lnet/minecraft/core/Vec3i;)Lnet/minecraft/core/BlockPos$MutableBlockPos; g
	setWithOffset (Lnet/minecraft/core/Vec3i;III)Lnet/minecraft/core/BlockPos$MutableBlockPos; a
	setWithOffset (Lnet/minecraft/core/Vec3i;Lnet/minecraft/core/Direction;)Lnet/minecraft/core/BlockPos$MutableBlockPos; a
	setWithOffset (Lnet/minecraft/core/Vec3i;Lnet/minecraft/core/Vec3i;)Lnet/minecraft/core/BlockPos$MutableBlockPos; a
	setX (I)V o
	setY (I)V p
	setZ (I)V q
	south ()Lnet/minecraft/core/Vec3i; l
	south (I)Lnet/minecraft/core/Vec3i; j
	subtract (Lnet/minecraft/core/Vec3i;)Lnet/minecraft/core/Vec3i; e
	west ()Lnet/minecraft/core/Vec3i; k
	west (I)Lnet/minecraft/core/Vec3i; i
net/minecraft/core/BlockSource fv
	getBlockState ()Lnet/minecraft/world/level/block/state/BlockState; e
	getEntity ()Lnet/minecraft/world/level/block/entity/BlockEntity; g
	getMaterial ()Lnet/minecraft/world/level/material/Material; f
	getPos ()Lnet/minecraft/core/BlockPos; d
	x ()D a
	y ()D b
	z ()D c
net/minecraft/core/BlockSourceImpl fw
	level a
	pos b
	getBlockState ()Lnet/minecraft/world/level/block/state/BlockState; e
	getEntity ()Lnet/minecraft/world/level/block/entity/BlockEntity; g
	getLevel ()Lnet/minecraft/world/level/Level; h
	getMaterial ()Lnet/minecraft/world/level/material/Material; f
	getPos ()Lnet/minecraft/core/BlockPos; d
	x ()D a
	y ()D b
	z ()D c
net/minecraft/core/Cursor3D fx
	depth f
	end g
	height e
	index h
	originX a
	originY b
	originZ c
	width d
	x i
	y j
	z k
	advance ()Z a
	getNextType ()I e
	nextX ()I b
	nextY ()I c
	nextZ ()I d
net/minecraft/core/DefaultedRegistry fy
	defaultKey bb
	defaultValue bc
	byId (I)Ljava/lang/Object; a
	get (Lnet/minecraft/resources/ResourceLocation;)Ljava/lang/Object; a
	getDefaultKey ()Lnet/minecraft/resources/ResourceLocation; a
	getId (Ljava/lang/Object;)I a
	getKey (Ljava/lang/Object;)Lnet/minecraft/resources/ResourceLocation; b
	getRandom (Ljava/util/Random;)Ljava/lang/Object; a
	registerMapping (ILnet/minecraft/resources/ResourceKey;Ljava/lang/Object;)Ljava/lang/Object; a
net/minecraft/core/Direction fz
	$VALUES s
	BY_2D_DATA q
	BY_3D_DATA p
	BY_NAME o
	BY_NORMAL r
	DOWN a
	EAST f
	NORTH c
	SOUTH d
	UP b
	VALUES n
	WEST e
	axis k
	axisDirection l
	data2d i
	data3d g
	name j
	normal m
	oppositeIndex h
	byName (Ljava/lang/String;)Lnet/minecraft/core/Direction; a
	from2DDataValue (I)Lnet/minecraft/core/Direction; b
	from3DDataValue (I)Lnet/minecraft/core/Direction; a
	fromAxisAndDirection (Lnet/minecraft/core/Direction$Axis;Lnet/minecraft/core/Direction$AxisDirection;)Lnet/minecraft/core/Direction; a
	fromNormal (III)Lnet/minecraft/core/Direction; a
	fromNormal (Lnet/minecraft/core/BlockPos;)Lnet/minecraft/core/Direction; a
	fromYRot (D)Lnet/minecraft/core/Direction; a
	get (Lnet/minecraft/core/Direction$AxisDirection;Lnet/minecraft/core/Direction$Axis;)Lnet/minecraft/core/Direction; a
	get2DDataValue ()I d
	get3DDataValue ()I c
	getAxis ()Lnet/minecraft/core/Direction$Axis; n
	getAxisDirection ()Lnet/minecraft/core/Direction$AxisDirection; e
	getClockWise ()Lnet/minecraft/core/Direction; g
	getClockWise (Lnet/minecraft/core/Direction$Axis;)Lnet/minecraft/core/Direction; a
	getClockWiseX ()Lnet/minecraft/core/Direction; q
	getClockWiseZ ()Lnet/minecraft/core/Direction; s
	getCounterClockWise ()Lnet/minecraft/core/Direction; h
	getCounterClockWise (Lnet/minecraft/core/Direction$Axis;)Lnet/minecraft/core/Direction; b
	getCounterClockWiseX ()Lnet/minecraft/core/Direction; r
	getCounterClockWiseZ ()Lnet/minecraft/core/Direction; t
	getName ()Ljava/lang/String; m
	getNearest (DDD)Lnet/minecraft/core/Direction; a
	getNearest (FFF)Lnet/minecraft/core/Direction; a
	getNormal ()Lnet/minecraft/core/Vec3i; p
	getOpposite ()Lnet/minecraft/core/Direction; f
	getRandom (Ljava/util/Random;)Lnet/minecraft/core/Direction; a
	getRotation ()Lcom/mojang/math/Quaternion; b
	getSerializedName ()Ljava/lang/String; a
	getStepX ()I i
	getStepY ()I j
	getStepZ ()I k
	makeDirectionArray (Lnet/minecraft/core/Direction;Lnet/minecraft/core/Direction;Lnet/minecraft/core/Direction;)[Lnet/minecraft/core/Direction; a
	orderedByNearest (Lnet/minecraft/world/entity/Entity;)[Lnet/minecraft/core/Direction; a
	rotate (Lcom/mojang/math/Matrix4f;Lnet/minecraft/core/Direction;)Lnet/minecraft/core/Direction; a
	step ()Lcom/mojang/math/Vector3f; l
	toYRot ()F o
net/minecraft/core/Direction$Axis fz$a
	$VALUES h
	BY_NAME f
	CODEC d
	VALUES e
	X a
	Y b
	Z c
	name g
	byName (Ljava/lang/String;)Lnet/minecraft/core/Direction$Axis; a
	choose (DDD)D a
	choose (III)I a
	getName ()Ljava/lang/String; b
	getPlane ()Lnet/minecraft/core/Direction$Plane; e
	getRandom (Ljava/util/Random;)Lnet/minecraft/core/Direction$Axis; a
	getSerializedName ()Ljava/lang/String; a
	isHorizontal ()Z d
	isVertical ()Z c
	test (Lnet/minecraft/core/Direction;)Z a
net/minecraft/core/Direction$AxisDirection fz$b
	$VALUES e
	NEGATIVE b
	POSITIVE a
	name d
	step c
	getName ()Ljava/lang/String; b
	getStep ()I a
	opposite ()Lnet/minecraft/core/Direction$AxisDirection; c
net/minecraft/core/Direction$Plane fz$c
	$VALUES e
	HORIZONTAL a
	VERTICAL b
	axis d
	faces c
	getRandomAxis (Ljava/util/Random;)Lnet/minecraft/core/Direction$Axis; b
	getRandomDirection (Ljava/util/Random;)Lnet/minecraft/core/Direction; a
	stream ()Ljava/util/stream/Stream; a
	test (Lnet/minecraft/core/Direction;)Z a
net/minecraft/core/Direction8 ga
	$VALUES r
	EAST c
	EAST_MASK n
	NORTH a
	NORTH_EAST b
	NORTH_EAST_MASK o
	NORTH_MASK p
	NORTH_WEST h
	NORTH_WEST_MASK i
	SOUTH e
	SOUTH_EAST d
	SOUTH_EAST_MASK m
	SOUTH_MASK l
	SOUTH_WEST f
	SOUTH_WEST_MASK k
	WEST g
	WEST_MASK j
	directions q
	getDirections ()Ljava/util/Set; a
	getSideMask (ZZZZ)I a
net/minecraft/core/FrontAndTop gb
	$VALUES q
	DOWN_EAST a
	DOWN_NORTH b
	DOWN_SOUTH c
	DOWN_WEST d
	EAST_UP j
	LOOKUP_TOP_FRONT m
	NORTH_UP k
	SOUTH_UP l
	UP_EAST e
	UP_NORTH f
	UP_SOUTH g
	UP_WEST h
	WEST_UP i
	front p
	name n
	top o
	fromFrontAndTop (Lnet/minecraft/core/Direction;Lnet/minecraft/core/Direction;)Lnet/minecraft/core/FrontAndTop; a
	front ()Lnet/minecraft/core/Direction; b
	getSerializedName ()Ljava/lang/String; a
	lookupKey (Lnet/minecraft/core/Direction;Lnet/minecraft/core/Direction;)I b
	top ()Lnet/minecraft/core/Direction; c
net/minecraft/core/GlobalPos gc
	CODEC a
	dimension b
	pos c
	dimension ()Lnet/minecraft/resources/ResourceKey; a
	of (Lnet/minecraft/resources/ResourceKey;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/core/GlobalPos; a
	pos ()Lnet/minecraft/core/BlockPos; b
net/minecraft/core/IdMap gd
	byId (I)Ljava/lang/Object; a
	getId (Ljava/lang/Object;)I a
net/minecraft/core/IdMapper ge
	idToT c
	nextId a
	tToId b
	add (Ljava/lang/Object;)V b
	addMapping (Ljava/lang/Object;I)V a
	byId (I)Ljava/lang/Object; a
	contains (I)Z b
	getId (Ljava/lang/Object;)I a
	size ()I a
net/minecraft/core/LocatableSource gf
net/minecraft/core/Location gg
	getLevel ()Lnet/minecraft/world/level/Level; h
net/minecraft/core/MappedRegistry gh
	LOGGER a
	keyStorage bb
	map b
	nextId bd
	persistent bc
	randomCache d
	storage c
	byId (I)Ljava/lang/Object; a
	containsId (I)Z b
	containsKey (Lnet/minecraft/resources/ResourceKey;)Z b
	containsKey (Lnet/minecraft/resources/ResourceLocation;)Z c
	dataPackCodec (Lnet/minecraft/resources/ResourceKey;Lcom/mojang/serialization/Lifecycle;Lcom/mojang/serialization/MapCodec;)Lcom/mojang/serialization/Codec; b
	directCodec (Lnet/minecraft/resources/ResourceKey;Lcom/mojang/serialization/Lifecycle;Lcom/mojang/serialization/MapCodec;)Lcom/mojang/serialization/Codec; c
	entrySet ()Ljava/util/Set; c
	get (Lnet/minecraft/resources/ResourceKey;)Ljava/lang/Object; a
	get (Lnet/minecraft/resources/ResourceLocation;)Ljava/lang/Object; a
	getId (Ljava/lang/Object;)I a
	getKey (Ljava/lang/Object;)Lnet/minecraft/resources/ResourceLocation; b
	getOptional (Lnet/minecraft/resources/ResourceLocation;)Ljava/util/Optional; b
	getRandom (Ljava/util/Random;)Ljava/lang/Object; a
	getResourceKey (Ljava/lang/Object;)Ljava/util/Optional; c
	isEmpty ()Z d
	keySet ()Ljava/util/Set; b
	networkCodec (Lnet/minecraft/resources/ResourceKey;Lcom/mojang/serialization/Lifecycle;Lcom/mojang/serialization/MapCodec;)Lcom/mojang/serialization/Codec; a
	persistent (Lnet/minecraft/resources/ResourceKey;)Z c
	register (Lnet/minecraft/resources/ResourceKey;Ljava/lang/Object;)Ljava/lang/Object; a
	registerMapping (ILnet/minecraft/resources/ResourceKey;Ljava/lang/Object;)Ljava/lang/Object; a
	setPersistent (Lnet/minecraft/resources/ResourceKey;)V d
net/minecraft/core/NonNullList gi
	defaultValue b
	list a
	create ()Lnet/minecraft/core/NonNullList; a
	of (Ljava/lang/Object;[Ljava/lang/Object;)Lnet/minecraft/core/NonNullList; a
	withSize (ILjava/lang/Object;)Lnet/minecraft/core/NonNullList; a
net/minecraft/core/Position gj
	x ()D a
	y ()D b
	z ()D c
net/minecraft/core/PositionImpl gk
	x a
	y b
	z c
	x ()D a
	y ()D b
	z ()D c
net/minecraft/core/Registry gl
	ACTIVITY aX
	ACTIVITY_REGISTRY Z
	ATTRIBUTE aP
	ATTRIBUTE_REGISTRY R
	BIOME as
	BIOME_REGISTRY u
	BIOME_SOURCE aA
	BIOME_SOURCE_REGISTRY C
	BLOCK aj
	BLOCKSTATE_PROVIDER_TYPES at
	BLOCK_ENTITY_TYPE aC
	BLOCK_ENTITY_TYPE_REGISTRY E
	BLOCK_PLACER_TYPES au
	BLOCK_PLACER_TYPE_REGISTRY w
	BLOCK_REGISTRY l
	BLOCK_STATE_PROVIDER_TYPE_REGISTRY v
	CARVER ao
	CARVER_REGISTRY q
	CHUNK_GENERATOR aB
	CHUNK_GENERATOR_REGISTRY D
	CHUNK_STATUS aF
	CHUNK_STATUS_REGISTRY H
	CUSTOM_STAT aE
	CUSTOM_STAT_REGISTRY G
	DECORATOR ar
	DECORATOR_REGISTRY t
	DIMENSION_REGISTRY ae
	DIMENSION_TYPE_REGISTRY ad
	ENCHANTMENT ak
	ENCHANTMENT_REGISTRY m
	ENTITY_TYPE al
	ENTITY_TYPE_REGISTRY n
	FEATURE aq
	FEATURE_REGISTRY s
	FEATURE_SIZE_TYPES ay
	FEATURE_SIZE_TYPE_REGISTRY A
	FLUID ah
	FLUID_REGISTRY j
	FOLIAGE_PLACER_TYPES av
	FOLIAGE_PLACER_TYPE_REGISTRY x
	ITEM am
	ITEM_REGISTRY o
	LEVEL_STEM_REGISTRY af
	LOADERS a
	LOGGER e
	LOOT_CONDITION_TYPE ba
	LOOT_ENTRY_REGISTRY aa
	LOOT_FUNCTION_REGISTRY ab
	LOOT_FUNCTION_TYPE aZ
	LOOT_ITEM_REGISTRY ac
	LOOT_POOL_ENTRY_TYPE aY
	MEMORY_MODULE_TYPE aU
	MEMORY_MODULE_TYPE_REGISTRY W
	MENU aM
	MENU_REGISTRY O
	MOB_EFFECT ai
	MOB_EFFECT_REGISTRY k
	MOTIVE aD
	MOTIVE_REGISTRY F
	PARTICLE_TYPE az
	PARTICLE_TYPE_REGISTRY B
	POINT_OF_INTEREST_TYPE aT
	POINT_OF_INTEREST_TYPE_REGISTRY V
	POS_RULE_TEST aJ
	POS_RULE_TEST_REGISTRY L
	POTION an
	POTION_REGISTRY p
	RECIPE_SERIALIZER aO
	RECIPE_SERIALIZER_REGISTRY Q
	RECIPE_TYPE aN
	RECIPE_TYPE_REGISTRY P
	REGISTRY h
	ROOT_REGISTRY_NAME f
	RULE_TEST aI
	RULE_TEST_REGISTRY K
	SCHEDULE aW
	SCHEDULE_REGISTRY Y
	SENSOR_TYPE aV
	SENSOR_TYPE_REGISTRY X
	SOUND_EVENT ag
	SOUND_EVENT_REGISTRY i
	STAT_TYPE aQ
	STAT_TYPE_REGISTRY S
	STRUCTURE_FEATURE aG
	STRUCTURE_FEATURE_REGISTRY I
	STRUCTURE_PIECE aH
	STRUCTURE_PIECE_REGISTRY J
	STRUCTURE_POOL_ELEMENT aL
	STRUCTURE_POOL_ELEMENT_REGISTRY N
	STRUCTURE_PROCESSOR aK
	STRUCTURE_PROCESSOR_REGISTRY M
	SURFACE_BUILDER ap
	SURFACE_BUILDER_REGISTRY r
	TREE_DECORATOR_TYPES ax
	TREE_DECORATOR_TYPE_REGISTRY z
	TRUNK_PLACER_TYPES aw
	TRUNK_PLACER_TYPE_REGISTRY y
	VILLAGER_PROFESSION aS
	VILLAGER_PROFESSION_REGISTRY U
	VILLAGER_TYPE aR
	VILLAGER_TYPE_REGISTRY T
	WRITABLE_REGISTRY g
	key b
	lifecycle c
	checkRegistry (Lnet/minecraft/core/WritableRegistry;)V a
	containsId (I)Z b
	containsKey (Lnet/minecraft/resources/ResourceKey;)Z b
	containsKey (Lnet/minecraft/resources/ResourceLocation;)Z c
	createRegistryKey (Ljava/lang/String;)Lnet/minecraft/resources/ResourceKey; a
	entrySet ()Ljava/util/Set; c
	get (Lnet/minecraft/resources/ResourceKey;)Ljava/lang/Object; a
	get (Lnet/minecraft/resources/ResourceLocation;)Ljava/lang/Object; a
	getId (Ljava/lang/Object;)I a
	getKey (Ljava/lang/Object;)Lnet/minecraft/resources/ResourceLocation; b
	getOptional (Lnet/minecraft/resources/ResourceLocation;)Ljava/util/Optional; b
	getRandom (Ljava/util/Random;)Ljava/lang/Object; a
	getResourceKey (Ljava/lang/Object;)Ljava/util/Optional; c
	internalRegister (Lnet/minecraft/resources/ResourceKey;Lnet/minecraft/core/WritableRegistry;Ljava/util/function/Supplier;)Lnet/minecraft/core/WritableRegistry; a
	keySet ()Ljava/util/Set; b
	persistent (Lnet/minecraft/resources/ResourceKey;)Z c
	register (Lnet/minecraft/core/Registry;Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object; a
	register (Lnet/minecraft/core/Registry;Lnet/minecraft/resources/ResourceLocation;Ljava/lang/Object;)Ljava/lang/Object; a
	registerDefaulted (Lnet/minecraft/resources/ResourceKey;Ljava/lang/String;Lcom/mojang/serialization/Lifecycle;Ljava/util/function/Supplier;)Lnet/minecraft/core/DefaultedRegistry; a
	registerDefaulted (Lnet/minecraft/resources/ResourceKey;Ljava/lang/String;Ljava/util/function/Supplier;)Lnet/minecraft/core/DefaultedRegistry; a
	registerMapping (Lnet/minecraft/core/Registry;ILjava/lang/String;Ljava/lang/Object;)Ljava/lang/Object; a
	registerSimple (Lnet/minecraft/resources/ResourceKey;Lcom/mojang/serialization/Lifecycle;Ljava/util/function/Supplier;)Lnet/minecraft/core/Registry; a
	registerSimple (Lnet/minecraft/resources/ResourceKey;Ljava/util/function/Supplier;)Lnet/minecraft/core/Registry; a
	stream ()Ljava/util/stream/Stream; e
net/minecraft/core/RegistryAccess gm
	builtin ()Lnet/minecraft/core/RegistryAccess$RegistryHolder; b
	dimensionTypes ()Lnet/minecraft/core/Registry; a
	registry (Lnet/minecraft/resources/ResourceKey;)Ljava/util/Optional; a
net/minecraft/core/RegistryAccess$RegistryHolder gm$a
	CODEC a
	dimensionTypes b
	dimensionTypes ()Lnet/minecraft/core/Registry; a
	registerDimension (Lnet/minecraft/resources/ResourceKey;Lnet/minecraft/world/level/dimension/DimensionType;)V a
	registry (Lnet/minecraft/resources/ResourceKey;)Ljava/util/Optional; a
net/minecraft/core/Rotations gn
	x a
	y b
	z c
	getWrappedX ()F e
	getWrappedY ()F f
	getWrappedZ ()F g
	getX ()F b
	getY ()F c
	getZ ()F d
	save ()Lnet/minecraft/nbt/ListTag; a
net/minecraft/core/SectionPos go
	aroundChunk (Lnet/minecraft/world/level/ChunkPos;I)Ljava/util/stream/Stream; b
	asLong ()J s
	asLong (III)J b
	betweenClosedStream (IIIIII)Ljava/util/stream/Stream; a
	blockToSection (J)J e
	blockToSectionCoord (I)I a
	blocksInside ()Ljava/util/stream/Stream; t
	center ()Lnet/minecraft/core/BlockPos; q
	chunk ()Lnet/minecraft/world/level/ChunkPos; r
	cube (Lnet/minecraft/core/SectionPos;I)Ljava/util/stream/Stream; a
	getZeroNode (J)J f
	maxBlockX ()I g
	maxBlockY ()I h
	maxBlockZ ()I i
	minBlockX ()I d
	minBlockY ()I e
	minBlockZ ()I f
	of (III)Lnet/minecraft/core/SectionPos; a
	of (J)Lnet/minecraft/core/SectionPos; a
	of (Lnet/minecraft/core/BlockPos;)Lnet/minecraft/core/SectionPos; a
	of (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/core/SectionPos; a
	of (Lnet/minecraft/world/level/ChunkPos;I)Lnet/minecraft/core/SectionPos; a
	offset (III)Lnet/minecraft/core/SectionPos; d
	offset (III)Lnet/minecraft/core/Vec3i; c
	offset (JIII)J a
	offset (JLnet/minecraft/core/Direction;)J a
	origin ()Lnet/minecraft/core/BlockPos; p
	sectionRelative (I)I b
	sectionRelativePos (Lnet/minecraft/core/BlockPos;)S b
	sectionToBlockCoord (I)I c
	x ()I a
	x (J)I b
	y ()I b
	y (J)I c
	z ()I c
	z (J)I d
net/minecraft/core/SerializableUUID gp
	CODEC a
	leastMostToIntArray (JJ)[I a
	readUUID (Lcom/mojang/serialization/Dynamic;)Ljava/util/UUID; a
	uuidFromIntArray ([I)Ljava/util/UUID; a
	uuidToIntArray (Ljava/util/UUID;)[I a
net/minecraft/core/Source gq
net/minecraft/core/Vec3i gr
	CODEC c
	ZERO d
	x a
	y b
	z e
	above ()Lnet/minecraft/core/Vec3i; o
	above (I)Lnet/minecraft/core/Vec3i; m
	below ()Lnet/minecraft/core/Vec3i; n
	below (I)Lnet/minecraft/core/Vec3i; l
	closerThan (Lnet/minecraft/core/Position;D)Z a
	closerThan (Lnet/minecraft/core/Vec3i;D)Z a
	compareTo (Lnet/minecraft/core/Vec3i;)I i
	cross (Lnet/minecraft/core/Vec3i;)Lnet/minecraft/core/Vec3i; d
	distManhattan (Lnet/minecraft/core/Vec3i;)I k
	distSqr (DDDZ)D a
	distSqr (Lnet/minecraft/core/Position;Z)D a
	distSqr (Lnet/minecraft/core/Vec3i;)D j
	east ()Lnet/minecraft/core/Vec3i; j
	east (I)Lnet/minecraft/core/Vec3i; h
	getX ()I u
	getY ()I v
	getZ ()I w
	multiply (I)Lnet/minecraft/core/Vec3i; n
	north ()Lnet/minecraft/core/Vec3i; m
	north (I)Lnet/minecraft/core/Vec3i; k
	offset (DDD)Lnet/minecraft/core/Vec3i; b
	offset (III)Lnet/minecraft/core/Vec3i; c
	offset (Lnet/minecraft/core/Vec3i;)Lnet/minecraft/core/Vec3i; f
	relative (Lnet/minecraft/core/Direction$Axis;I)Lnet/minecraft/core/Vec3i; b
	relative (Lnet/minecraft/core/Direction;)Lnet/minecraft/core/Vec3i; b
	relative (Lnet/minecraft/core/Direction;I)Lnet/minecraft/core/Vec3i; b
	setX (I)V o
	setY (I)V p
	setZ (I)V q
	south ()Lnet/minecraft/core/Vec3i; l
	south (I)Lnet/minecraft/core/Vec3i; j
	subtract (Lnet/minecraft/core/Vec3i;)Lnet/minecraft/core/Vec3i; e
	toShortString ()Ljava/lang/String; x
	west ()Lnet/minecraft/core/Vec3i; k
	west (I)Lnet/minecraft/core/Vec3i; i
net/minecraft/core/WritableRegistry gs
	isEmpty ()Z d
	register (Lnet/minecraft/resources/ResourceKey;Ljava/lang/Object;)Ljava/lang/Object; a
	registerMapping (ILnet/minecraft/resources/ResourceKey;Ljava/lang/Object;)Ljava/lang/Object; a
	setPersistent (Lnet/minecraft/resources/ResourceKey;)V d
net/minecraft/core/dispenser/AbstractProjectileDispenseBehavior gt
	execute (Lnet/minecraft/core/BlockSource;Lnet/minecraft/world/item/ItemStack;)Lnet/minecraft/world/item/ItemStack; a
	getPower ()F b
	getProjectile (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/Position;Lnet/minecraft/world/item/ItemStack;)Lnet/minecraft/world/entity/projectile/Projectile; a
	getUncertainty ()F a
	playSound (Lnet/minecraft/core/BlockSource;)V a
net/minecraft/core/dispenser/BoatDispenseItemBehavior gu
	defaultDispenseItemBehavior b
	type c
	execute (Lnet/minecraft/core/BlockSource;Lnet/minecraft/world/item/ItemStack;)Lnet/minecraft/world/item/ItemStack; a
	playSound (Lnet/minecraft/core/BlockSource;)V a
net/minecraft/core/dispenser/DefaultDispenseItemBehavior gv
	execute (Lnet/minecraft/core/BlockSource;Lnet/minecraft/world/item/ItemStack;)Lnet/minecraft/world/item/ItemStack; a
	playAnimation (Lnet/minecraft/core/BlockSource;Lnet/minecraft/core/Direction;)V a
	playSound (Lnet/minecraft/core/BlockSource;)V a
	spawnItem (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/item/ItemStack;ILnet/minecraft/core/Direction;Lnet/minecraft/core/Position;)V a
net/minecraft/core/dispenser/DispenseItemBehavior gw
	NOOP a
	bootStrap ()V c
	setEntityPokingOutOfBlock (Lnet/minecraft/core/BlockSource;Lnet/minecraft/world/entity/Entity;Lnet/minecraft/core/Direction;)V a
net/minecraft/core/dispenser/OptionalDispenseItemBehavior gx
	success b
	isSuccess ()Z a
	playSound (Lnet/minecraft/core/BlockSource;)V a
	setSuccess (Z)V a
net/minecraft/core/dispenser/ShearsDispenseItemBehavior gy
	execute (Lnet/minecraft/core/BlockSource;Lnet/minecraft/world/item/ItemStack;)Lnet/minecraft/world/item/ItemStack; a
	tryShearBeehive (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;)Z a
	tryShearLivingEntity (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;)Z b
net/minecraft/core/dispenser/ShulkerBoxDispenseBehavior gz
	execute (Lnet/minecraft/core/BlockSource;Lnet/minecraft/world/item/ItemStack;)Lnet/minecraft/world/item/ItemStack; a
net/minecraft/core/particles/BlockParticleOption hc
	DESERIALIZER a
	state c
	type b
	codec (Lnet/minecraft/core/particles/ParticleType;)Lcom/mojang/serialization/Codec; a
	getState ()Lnet/minecraft/world/level/block/state/BlockState; c
	getType ()Lnet/minecraft/core/particles/ParticleType; b
	writeToNetwork (Lnet/minecraft/network/FriendlyByteBuf;)V a
	writeToString ()Ljava/lang/String; a
net/minecraft/core/particles/DustParticleOptions hd
	CODEC b
	DESERIALIZER c
	REDSTONE a
	b f
	g e
	r d
	scale g
	getB ()F e
	getG ()F d
	getR ()F c
	getScale ()F f
	getType ()Lnet/minecraft/core/particles/ParticleType; b
	writeToNetwork (Lnet/minecraft/network/FriendlyByteBuf;)V a
	writeToString ()Ljava/lang/String; a
net/minecraft/core/particles/ItemParticleOption he
	DESERIALIZER a
	itemStack c
	type b
	codec (Lnet/minecraft/core/particles/ParticleType;)Lcom/mojang/serialization/Codec; a
	getItem ()Lnet/minecraft/world/item/ItemStack; c
	getType ()Lnet/minecraft/core/particles/ParticleType; b
	writeToNetwork (Lnet/minecraft/network/FriendlyByteBuf;)V a
	writeToString ()Ljava/lang/String; a
net/minecraft/core/particles/ParticleOptions hf
	getType ()Lnet/minecraft/core/particles/ParticleType; b
	writeToNetwork (Lnet/minecraft/network/FriendlyByteBuf;)V a
	writeToString ()Ljava/lang/String; a
net/minecraft/core/particles/ParticleOptions$Deserializer hf$a
	fromCommand (Lnet/minecraft/core/particles/ParticleType;Lcom/mojang/brigadier/StringReader;)Lnet/minecraft/core/particles/ParticleOptions; b
	fromNetwork (Lnet/minecraft/core/particles/ParticleType;Lnet/minecraft/network/FriendlyByteBuf;)Lnet/minecraft/core/particles/ParticleOptions; b
net/minecraft/core/particles/ParticleType hg
	deserializer b
	overrideLimiter a
	codec ()Lcom/mojang/serialization/Codec; e
	getDeserializer ()Lnet/minecraft/core/particles/ParticleOptions$Deserializer; d
	getOverrideLimiter ()Z c
net/minecraft/core/particles/ParticleTypes hh
	AMBIENT_ENTITY_EFFECT a
	ANGRY_VILLAGER b
	ASH am
	BARRIER c
	BLOCK d
	BUBBLE e
	BUBBLE_COLUMN_UP ad
	BUBBLE_POP ab
	CAMPFIRE_COSY_SMOKE ag
	CAMPFIRE_SIGNAL_SMOKE ah
	CLOUD f
	CODEC au
	COMPOSTER F
	CRIMSON_SPORE an
	CRIT g
	CURRENT_DOWN ac
	DAMAGE_INDICATOR h
	DOLPHIN af
	DRAGON_BREATH i
	DRIPPING_HONEY ai
	DRIPPING_LAVA j
	DRIPPING_OBSIDIAN_TEAR ap
	DRIPPING_WATER m
	DUST o
	EFFECT p
	ELDER_GUARDIAN q
	ENCHANT s
	ENCHANTED_HIT r
	END_ROD t
	ENTITY_EFFECT u
	EXPLOSION w
	EXPLOSION_EMITTER v
	FALLING_DUST x
	FALLING_HONEY aj
	FALLING_LAVA k
	FALLING_NECTAR al
	FALLING_OBSIDIAN_TEAR aq
	FALLING_WATER n
	FIREWORK y
	FISHING z
	FLAME A
	FLASH D
	HAPPY_VILLAGER E
	HEART G
	INSTANT_EFFECT H
	ITEM I
	ITEM_SLIME J
	ITEM_SNOWBALL K
	LANDING_HONEY ak
	LANDING_LAVA l
	LANDING_OBSIDIAN_TEAR ar
	LARGE_SMOKE L
	LAVA M
	MYCELIUM N
	NAUTILUS ae
	NOTE O
	POOF P
	PORTAL Q
	RAIN R
	REVERSE_PORTAL as
	SMOKE S
	SNEEZE T
	SOUL C
	SOUL_FIRE_FLAME B
	SPIT U
	SPLASH Z
	SQUID_INK V
	SWEEP_ATTACK W
	TOTEM_OF_UNDYING X
	UNDERWATER Y
	WARPED_SPORE ao
	WHITE_ASH at
	WITCH aa
	register (Ljava/lang/String;Lnet/minecraft/core/particles/ParticleOptions$Deserializer;Ljava/util/function/Function;)Lnet/minecraft/core/particles/ParticleType; a
	register (Ljava/lang/String;Z)Lnet/minecraft/core/particles/SimpleParticleType; a
net/minecraft/core/particles/SimpleParticleType hi
	DESERIALIZER a
	codec b
	codec ()Lcom/mojang/serialization/Codec; e
	getType ()Lnet/minecraft/core/particles/ParticleType; b
	getType ()Lnet/minecraft/core/particles/SimpleParticleType; f
	writeToNetwork (Lnet/minecraft/network/FriendlyByteBuf;)V a
	writeToString ()Ljava/lang/String; a
net/minecraft/data/DataGenerator hk
	LOGGER a
	inputFolders b
	outputFolder c
	providers d
	addProvider (Lnet/minecraft/data/DataProvider;)V a
	getInputFolders ()Ljava/util/Collection; a
	getOutputFolder ()Ljava/nio/file/Path; b
	run ()V c
net/minecraft/data/DataProvider hl
	SHA1 a
	getName ()Ljava/lang/String; a
	run (Lnet/minecraft/data/HashCache;)V a
	save (Lcom/google/gson/Gson;Lnet/minecraft/data/HashCache;Lcom/google/gson/JsonElement;Ljava/nio/file/Path;)V a
net/minecraft/data/HashCache hm
	LOGGER a
	cachePath c
	hits d
	keep g
	newCache f
	oldCache e
	path b
	getHash (Ljava/nio/file/Path;)Ljava/lang/String; a
	had (Ljava/nio/file/Path;)Z b
	keep (Ljava/nio/file/Path;)V c
	purgeStaleAndWrite ()V a
	putNew (Ljava/nio/file/Path;Ljava/lang/String;)V a
	removeStale ()V b
	walkOutputFiles ()Ljava/util/stream/Stream; c
net/minecraft/data/advancements/AdvancementProvider hn
	GSON c
	LOGGER b
	generator d
	tabs e
	createPath (Ljava/nio/file/Path;Lnet/minecraft/advancements/Advancement;)Ljava/nio/file/Path; a
	getName ()Ljava/lang/String; a
	run (Lnet/minecraft/data/HashCache;)V a
net/minecraft/data/advancements/AdventureAdvancements ho
	EXPLORABLE_BIOMES a
	MOBS_TO_KILL b
	accept (Ljava/util/function/Consumer;)V a
	addBiomes (Lnet/minecraft/advancements/Advancement$Builder;[Lnet/minecraft/world/level/biome/Biome;)Lnet/minecraft/advancements/Advancement$Builder; a
	addMobsToKill (Lnet/minecraft/advancements/Advancement$Builder;)Lnet/minecraft/advancements/Advancement$Builder; a
net/minecraft/data/advancements/HusbandryAdvancements hp
	BREEDABLE_ANIMALS a
	EDIBLE_ITEMS d
	FISH b
	FISH_BUCKETS c
	accept (Ljava/util/function/Consumer;)V a
	addBreedable (Lnet/minecraft/advancements/Advancement$Builder;)Lnet/minecraft/advancements/Advancement$Builder; b
	addCatVariants (Lnet/minecraft/advancements/Advancement$Builder;)Lnet/minecraft/advancements/Advancement$Builder; e
	addFish (Lnet/minecraft/advancements/Advancement$Builder;)Lnet/minecraft/advancements/Advancement$Builder; d
	addFishBuckets (Lnet/minecraft/advancements/Advancement$Builder;)Lnet/minecraft/advancements/Advancement$Builder; c
	addFood (Lnet/minecraft/advancements/Advancement$Builder;)Lnet/minecraft/advancements/Advancement$Builder; a
net/minecraft/data/advancements/NetherAdvancements hq
	DISTRACT_PIGLIN_PLAYER_ARMOR_PREDICATE b
	EXPLORABLE_BIOMES a
	accept (Ljava/util/function/Consumer;)V a
net/minecraft/data/advancements/StoryAdvancements hr
	accept (Ljava/util/function/Consumer;)V a
net/minecraft/data/advancements/TheEndAdvancements hs
	accept (Ljava/util/function/Consumer;)V a
net/minecraft/data/info/BlockListReport hu
	GSON b
	generator c
	getName ()Ljava/lang/String; a
	run (Lnet/minecraft/data/HashCache;)V a
net/minecraft/data/info/CommandsReport hv
	GSON b
	generator c
	getName ()Ljava/lang/String; a
	run (Lnet/minecraft/data/HashCache;)V a
net/minecraft/data/info/RegistryDumpReport hw
	GSON b
	generator c
	dumpRegistry (Lnet/minecraft/core/Registry;)Lcom/google/gson/JsonElement; a
	getName ()Ljava/lang/String; a
	run (Lnet/minecraft/data/HashCache;)V a
net/minecraft/data/loot/BlockLoot hy
	EXPLOSION_RESISTANT f
	HAS_NO_SHEARS_OR_SILK_TOUCH e
	HAS_NO_SILK_TOUCH b
	HAS_SHEARS c
	HAS_SHEARS_OR_SILK_TOUCH d
	HAS_SILK_TOUCH a
	JUNGLE_LEAVES_SAPLING_CHANGES h
	NORMAL_LEAVES_SAPLING_CHANCES g
	map i
	accept (Ljava/util/function/BiConsumer;)V a
	add (Lnet/minecraft/world/level/block/Block;Ljava/util/function/Function;)V a
	add (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/world/level/storage/loot/LootTable$Builder;)V a
	addNetherVinesDropTable (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/world/level/block/Block;)V c
	applyExplosionCondition (Lnet/minecraft/world/level/ItemLike;Lnet/minecraft/world/level/storage/loot/predicates/ConditionUserBuilder;)Ljava/lang/Object; a
	applyExplosionDecay (Lnet/minecraft/world/level/ItemLike;Lnet/minecraft/world/level/storage/loot/functions/FunctionUserBuilder;)Ljava/lang/Object; a
	createAttachedStemDrops (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/world/item/Item;)Lnet/minecraft/world/level/storage/loot/LootTable$Builder; c
	createBannerDrop (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/world/level/storage/loot/LootTable$Builder; h
	createBeeHiveDrop (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/world/level/storage/loot/LootTable$Builder; j
	createBeeNestDrop (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/world/level/storage/loot/LootTable$Builder; i
	createCropDrops (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/world/item/Item;Lnet/minecraft/world/item/Item;Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition$Builder;)Lnet/minecraft/world/level/storage/loot/LootTable$Builder; a
	createDoorTable (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/world/level/storage/loot/LootTable$Builder; a
	createDoublePlantShearsDrop (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/world/level/storage/loot/LootTable$Builder; l
	createDoublePlantWithSeedDrops (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/world/level/storage/loot/LootTable$Builder; b
	createGrassDrops (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/world/level/storage/loot/LootTable$Builder; k
	createLeavesDrops (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/world/level/block/Block;[F)Lnet/minecraft/world/level/storage/loot/LootTable$Builder; a
	createMushroomBlockDrop (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/world/level/ItemLike;)Lnet/minecraft/world/level/storage/loot/LootTable$Builder; c
	createNameableBlockEntityTable (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/world/level/storage/loot/LootTable$Builder; f
	createOakLeavesDrops (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/world/level/block/Block;[F)Lnet/minecraft/world/level/storage/loot/LootTable$Builder; b
	createOreDrop (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/world/item/Item;)Lnet/minecraft/world/level/storage/loot/LootTable$Builder; a
	createPotFlowerItemTable (Lnet/minecraft/world/level/ItemLike;)Lnet/minecraft/world/level/storage/loot/LootTable$Builder; c
	createSelfDropDispatchTable (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition$Builder;Lnet/minecraft/world/level/storage/loot/entries/LootPoolEntryContainer$Builder;)Lnet/minecraft/world/level/storage/loot/LootTable$Builder; a
	createShearsDispatchTable (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/world/level/storage/loot/entries/LootPoolEntryContainer$Builder;)Lnet/minecraft/world/level/storage/loot/LootTable$Builder; b
	createShearsOnlyDrop (Lnet/minecraft/world/level/ItemLike;)Lnet/minecraft/world/level/storage/loot/LootTable$Builder; d
	createShulkerBoxDrop (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/world/level/storage/loot/LootTable$Builder; g
	createSilkTouchDispatchTable (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/world/level/storage/loot/entries/LootPoolEntryContainer$Builder;)Lnet/minecraft/world/level/storage/loot/LootTable$Builder; a
	createSilkTouchOnlyTable (Lnet/minecraft/world/level/ItemLike;)Lnet/minecraft/world/level/storage/loot/LootTable$Builder; b
	createSilkTouchOrShearsDispatchTable (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/world/level/storage/loot/entries/LootPoolEntryContainer$Builder;)Lnet/minecraft/world/level/storage/loot/LootTable$Builder; c
	createSingleItemTable (Lnet/minecraft/world/level/ItemLike;)Lnet/minecraft/world/level/storage/loot/LootTable$Builder; a
	createSingleItemTable (Lnet/minecraft/world/level/ItemLike;Lnet/minecraft/world/level/storage/loot/RandomIntGenerator;)Lnet/minecraft/world/level/storage/loot/LootTable$Builder; a
	createSingleItemTableWithSilkTouch (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/world/level/ItemLike;)Lnet/minecraft/world/level/storage/loot/LootTable$Builder; b
	createSingleItemTableWithSilkTouch (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/world/level/ItemLike;Lnet/minecraft/world/level/storage/loot/RandomIntGenerator;)Lnet/minecraft/world/level/storage/loot/LootTable$Builder; a
	createSinglePropConditionTable (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/world/level/block/state/properties/Property;Ljava/lang/Comparable;)Lnet/minecraft/world/level/storage/loot/LootTable$Builder; a
	createSlabItemTable (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/world/level/storage/loot/LootTable$Builder; e
	createStemDrops (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/world/item/Item;)Lnet/minecraft/world/level/storage/loot/LootTable$Builder; b
	dropOther (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/world/level/ItemLike;)V a
	dropPottedContents (Lnet/minecraft/world/level/block/Block;)V b
	dropSelf (Lnet/minecraft/world/level/block/Block;)V d
	dropWhenSilkTouch (Lnet/minecraft/world/level/block/Block;)V c
	noDrop ()Lnet/minecraft/world/level/storage/loot/LootTable$Builder; a
	otherWhenSilkTouch (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/world/level/block/Block;)V a
net/minecraft/data/loot/ChestLoot hz
	accept (Ljava/util/function/BiConsumer;)V a
net/minecraft/data/loot/EntityLoot ia
	ENTITY_ON_FIRE a
	SPECIAL_LOOT_TABLE_TYPES b
	map c
	accept (Ljava/util/function/BiConsumer;)V a
	add (Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/world/level/storage/loot/LootTable$Builder;)V a
	add (Lnet/minecraft/world/entity/EntityType;Lnet/minecraft/world/level/storage/loot/LootTable$Builder;)V a
	createSheepTable (Lnet/minecraft/world/level/ItemLike;)Lnet/minecraft/world/level/storage/loot/LootTable$Builder; a
net/minecraft/data/loot/FishingLoot ib
	IN_BAMBOO_JUNGLE d
	IN_BAMBOO_JUNGLE_HILLS g
	IN_JUNGLE a
	IN_JUNGLE_EDGE c
	IN_JUNGLE_HILLS b
	IN_MODIFIED_JUNGLE e
	IN_MODIFIED_JUNGLE_EDGE f
	accept (Ljava/util/function/BiConsumer;)V a
net/minecraft/data/loot/GiftLoot ic
	accept (Ljava/util/function/BiConsumer;)V a
net/minecraft/data/loot/LootTableProvider id
	GSON c
	LOGGER b
	generator d
	subProviders e
	createPath (Ljava/nio/file/Path;Lnet/minecraft/resources/ResourceLocation;)Ljava/nio/file/Path; a
	getName ()Ljava/lang/String; a
	run (Lnet/minecraft/data/HashCache;)V a
net/minecraft/data/loot/PiglinBarterLoot ie
	accept (Ljava/util/function/BiConsumer;)V a
net/minecraft/data/models/BlockModelGenerators ih
	blockStateOutput a
	modelOutput b
	skippedAutoModelsOutput c
	applyRotation (Lnet/minecraft/core/FrontAndTop;Lnet/minecraft/data/models/blockstates/Variant;)Lnet/minecraft/data/models/blockstates/Variant; a
	blockEntityModels (Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/data/models/BlockModelGenerators$BlockEntityModelGenerator; a
	blockEntityModels (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/data/models/BlockModelGenerators$BlockEntityModelGenerator; d
	configureDoorHalf (Lnet/minecraft/data/models/blockstates/PropertyDispatch$C4;Lnet/minecraft/world/level/block/state/properties/DoubleBlockHalf;Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/data/models/blockstates/PropertyDispatch$C4; a
	copyModel (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/world/level/block/Block;)V i
	createActiveRail (Lnet/minecraft/world/level/block/Block;)V m
	createAirLikeBlock (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/resources/ResourceLocation;)V g
	createAirLikeBlock (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/world/item/Item;)V a
	createAnvil (Lnet/minecraft/world/level/block/Block;)V o
	createAxisAlignedPillarBlock (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/data/models/model/TexturedModel$Provider;)V a
	createAxisAlignedPillarBlock (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/data/models/blockstates/BlockStateGenerator; f
	createBamboo ()V i
	createBambooModels (I)Ljava/util/List; a
	createBarrel ()V k
	createBedItem (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/world/level/block/Block;)V k
	createBeeNest (Lnet/minecraft/world/level/block/Block;Ljava/util/function/Function;)V a
	createBell ()V l
	createBookshelf ()V n
	createBooleanModelDispatch (Lnet/minecraft/world/level/block/state/properties/BooleanProperty;Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/data/models/blockstates/PropertyDispatch; a
	createBrewingStand ()V r
	createButton (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/data/models/blockstates/BlockStateGenerator; f
	createCakeBlock ()V s
	createCampfires ([Lnet/minecraft/world/level/block/Block;)V a
	createCartographyTable ()V t
	createCauldron ()V w
	createChiseledSandsone (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/world/level/block/Block;)V g
	createChorusFlower ()V x
	createChorusPlant ()V z
	createCocoa ()V I
	createColoredBlockWithRandomRotations (Lnet/minecraft/data/models/model/TexturedModel$Provider;[Lnet/minecraft/world/level/block/Block;)V a
	createColoredBlockWithStateRotations (Lnet/minecraft/data/models/model/TexturedModel$Provider;[Lnet/minecraft/world/level/block/Block;)V b
	createColumnWithFacing ()Lnet/minecraft/data/models/blockstates/PropertyDispatch; j
	createCommandBlock (Lnet/minecraft/world/level/block/Block;)V n
	createComparator ()V p
	createComposter ()V A
	createCoral (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/world/level/block/Block;Lnet/minecraft/world/level/block/Block;Lnet/minecraft/world/level/block/Block;Lnet/minecraft/world/level/block/Block;Lnet/minecraft/world/level/block/Block;Lnet/minecraft/world/level/block/Block;Lnet/minecraft/world/level/block/Block;)V a
	createCoralFans (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/world/level/block/Block;)V b
	createCraftingTableLike (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/world/level/block/Block;Ljava/util/function/BiFunction;)V a
	createCropBlock (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/world/level/block/state/properties/Property;[I)V a
	createCrossBlock (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/data/models/BlockModelGenerators$TintState;)V b
	createCrossBlock (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/data/models/BlockModelGenerators$TintState;Lnet/minecraft/data/models/model/TextureMapping;)V b
	createCrossBlockWithDefaultItem (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/data/models/BlockModelGenerators$TintState;)V a
	createCrossBlockWithDefaultItem (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/data/models/BlockModelGenerators$TintState;Lnet/minecraft/data/models/model/TextureMapping;)V a
	createDaylightDetector ()V B
	createDispenserBlock (Lnet/minecraft/world/level/block/Block;)V q
	createDoor (Lnet/minecraft/world/level/block/Block;)V g
	createDoor (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/data/models/blockstates/BlockStateGenerator; b
	createDoubleBlock (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/resources/ResourceLocation;)V j
	createDoublePlant (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/data/models/BlockModelGenerators$TintState;)V c
	createEmptyOrFullDispatch (Lnet/minecraft/world/level/block/state/properties/Property;Ljava/lang/Comparable;Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/data/models/blockstates/PropertyDispatch; a
	createEndPortalFrame ()V y
	createEndRod ()V C
	createFacingDispatch ()Lnet/minecraft/data/models/blockstates/PropertyDispatch; e
	createFarmland ()V D
	createFence (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/data/models/blockstates/BlockStateGenerator; g
	createFenceGate (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/data/models/blockstates/BlockStateGenerator; c
	createFire ()V E
	createFloorFireModels (Lnet/minecraft/world/level/block/Block;)Ljava/util/List; s
	createFrostedIce ()V G
	createFurnace (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/data/models/model/TexturedModel$Provider;)V e
	createGlassBlocks (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/world/level/block/Block;)V f
	createGrassBlocks ()V H
	createGrassLikeBlock (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/data/models/blockstates/Variant;)V a
	createGrassPath ()V J
	createGrindstone ()V m
	createGrowingPlant (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/world/level/block/Block;Lnet/minecraft/data/models/BlockModelGenerators$TintState;)V b
	createHopper ()V K
	createHorizontalFacingDispatch ()Lnet/minecraft/data/models/blockstates/PropertyDispatch; b
	createHorizontalFacingDispatchAlt ()Lnet/minecraft/data/models/blockstates/PropertyDispatch; c
	createHorizontallyRotatedBlock (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/data/models/model/TexturedModel$Provider;)V b
	createInfestedStone ()V ah
	createIronBars ()V L
	createJigsaw ()V aj
	createLantern (Lnet/minecraft/world/level/block/Block;)V v
	createLever ()V M
	createLilyPad ()V N
	createMagmaBlock ()V ag
	createMushroomBlock (Lnet/minecraft/world/level/block/Block;)V p
	createNetherPortalBlock ()V O
	createNetherRoots (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/world/level/block/Block;)V l
	createNetherrack ()V P
	createNonTemplateHorizontalBlock (Lnet/minecraft/world/level/block/Block;)V w
	createNonTemplateModelBlock (Lnet/minecraft/world/level/block/Block;)V k
	createNonTemplateModelBlock (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/world/level/block/Block;)V a
	createNormalTorch (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/world/level/block/Block;)V j
	createNyliumBlock (Lnet/minecraft/world/level/block/Block;)V r
	createObserver ()V Q
	createOrientableTrapdoor (Lnet/minecraft/world/level/block/Block;)V h
	createOrientableTrapdoor (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/data/models/blockstates/BlockStateGenerator; f
	createPassiveRail (Lnet/minecraft/world/level/block/Block;)V l
	createPistonHeads ()V S
	createPistonVariant (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/data/models/model/TextureMapping;)V a
	createPistons ()V R
	createPlant (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/world/level/block/Block;Lnet/minecraft/data/models/BlockModelGenerators$TintState;)V a
	createPressurePlate (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/data/models/blockstates/BlockStateGenerator; i
	createPumpkinVariant (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/data/models/model/TextureMapping;)V a
	createPumpkins ()V v
	createRedstoneLamp ()V U
	createRedstoneTorch ()V V
	createRedstoneWire ()V o
	createRepeater ()V W
	createRespawnAnchor ()V ai
	createRotatedMirroredVariantBlock (Lnet/minecraft/world/level/block/Block;)V c
	createRotatedPillar ()Lnet/minecraft/data/models/blockstates/PropertyDispatch; f
	createRotatedPillarWithHorizontalVariant (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/data/models/model/TexturedModel$Provider;Lnet/minecraft/data/models/model/TexturedModel$Provider;)V a
	createRotatedPillarWithHorizontalVariant (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/data/models/blockstates/BlockStateGenerator; h
	createRotatedVariant (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/data/models/blockstates/MultiVariantGenerator; d
	createRotatedVariant (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/data/models/blockstates/MultiVariantGenerator; e
	createRotatedVariantBlock (Lnet/minecraft/world/level/block/Block;)V d
	createRotatedVariants (Lnet/minecraft/resources/ResourceLocation;)[Lnet/minecraft/data/models/blockstates/Variant; a
	createScaffolding ()V T
	createSeaPickle ()V X
	createShulkerBox (Lnet/minecraft/world/level/block/Block;)V x
	createSideFireModels (Lnet/minecraft/world/level/block/Block;)Ljava/util/List; t
	createSimpleBlock (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/data/models/blockstates/MultiVariantGenerator; e
	createSimpleFlatItemModel (Lnet/minecraft/world/item/Item;)V a
	createSimpleFlatItemModel (Lnet/minecraft/world/level/block/Block;)V b
	createSimpleFlatItemModel (Lnet/minecraft/world/level/block/Block;Ljava/lang/String;)V a
	createSlab (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/data/models/blockstates/BlockStateGenerator; h
	createSmithingTable ()V u
	createSmoothStoneSlab ()V q
	createSnowBlocks ()V Y
	createSoulFire ()V F
	createStairs (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/data/models/blockstates/BlockStateGenerator; e
	createStems (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/world/level/block/Block;)V c
	createStonecutter ()V Z
	createStructureBlock ()V aa
	createSuffixedVariant (Lnet/minecraft/world/level/block/Block;Ljava/lang/String;Lnet/minecraft/data/models/model/ModelTemplate;Ljava/util/function/Function;)Lnet/minecraft/resources/ResourceLocation; a
	createSunflower ()V g
	createSweetBerryBush ()V ab
	createTallSeagrass ()V h
	createTopFireModels (Lnet/minecraft/world/level/block/Block;)Ljava/util/List; u
	createTorchHorizontalDispatch ()Lnet/minecraft/data/models/blockstates/PropertyDispatch; d
	createTrapdoor (Lnet/minecraft/world/level/block/Block;)V i
	createTrapdoor (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/data/models/blockstates/BlockStateGenerator; g
	createTripwire ()V ac
	createTripwireHook ()V ad
	createTrivialBlock (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/data/models/model/TextureMapping;Lnet/minecraft/data/models/model/ModelTemplate;)V a
	createTrivialBlock (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/data/models/model/TexturedModel$Provider;)V c
	createTrivialCube (Lnet/minecraft/world/level/block/Block;)V e
	createTurtleEgg ()V ae
	createTurtleEggModel (ILjava/lang/String;Lnet/minecraft/data/models/model/TextureMapping;)Lnet/minecraft/resources/ResourceLocation; a
	createTurtleEggModel (Ljava/lang/Integer;Ljava/lang/Integer;)Lnet/minecraft/resources/ResourceLocation; a
	createVine ()V af
	createWall (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/data/models/blockstates/BlockStateGenerator; d
	createWeightedPressurePlate (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/world/level/block/Block;)V h
	createWoolBlocks (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/world/level/block/Block;)V e
	delegateItemModel (Lnet/minecraft/world/item/Item;Lnet/minecraft/resources/ResourceLocation;)V a
	delegateItemModel (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/resources/ResourceLocation;)V c
	family (Lnet/minecraft/data/models/model/TextureMapping;)Lnet/minecraft/data/models/BlockModelGenerators$BlockFamilyProvider; a
	family (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/data/models/BlockModelGenerators$BlockFamilyProvider; f
	family (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/data/models/model/TexturedModel$Provider;)Lnet/minecraft/data/models/BlockModelGenerators$BlockFamilyProvider; d
	family (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/data/models/model/TexturedModel;)Lnet/minecraft/data/models/BlockModelGenerators$BlockFamilyProvider; a
	run ()V a
	skipAutoItemBlock (Lnet/minecraft/world/level/block/Block;)V a
	woodProvider (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/data/models/BlockModelGenerators$WoodProvider; j
	wrapModels (Ljava/util/List;Ljava/util/function/UnaryOperator;)Ljava/util/List; a
net/minecraft/data/models/BlockModelGenerators$BlockEntityModelGenerator ih$a
	baseModel b
	create ([Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/data/models/BlockModelGenerators$BlockEntityModelGenerator; a
	createWithCustomBlockItemModel (Lnet/minecraft/data/models/model/ModelTemplate;[Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/data/models/BlockModelGenerators$BlockEntityModelGenerator; a
	createWithoutBlockItem ([Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/data/models/BlockModelGenerators$BlockEntityModelGenerator; b
net/minecraft/data/models/BlockModelGenerators$BlockFamilyProvider ih$b
	fullBlock c
	mapping b
	button (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/data/models/BlockModelGenerators$BlockFamilyProvider; a
	fence (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/data/models/BlockModelGenerators$BlockFamilyProvider; c
	fenceGate (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/data/models/BlockModelGenerators$BlockFamilyProvider; d
	fullBlock (Ljava/util/function/Function;)Lnet/minecraft/data/models/BlockModelGenerators$BlockFamilyProvider; a
	fullBlock (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/data/models/model/ModelTemplate;)Lnet/minecraft/data/models/BlockModelGenerators$BlockFamilyProvider; a
	pressurePlate (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/data/models/BlockModelGenerators$BlockFamilyProvider; e
	sign (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/data/models/BlockModelGenerators$BlockFamilyProvider; a
	slab (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/data/models/BlockModelGenerators$BlockFamilyProvider; f
	stairs (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/data/models/BlockModelGenerators$BlockFamilyProvider; g
	wall (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/data/models/BlockModelGenerators$BlockFamilyProvider; b
net/minecraft/data/models/BlockModelGenerators$TintState ih$c
	$VALUES c
	NOT_TINTED b
	TINTED a
	getCross ()Lnet/minecraft/data/models/model/ModelTemplate; a
	getCrossPot ()Lnet/minecraft/data/models/model/ModelTemplate; b
net/minecraft/data/models/BlockModelGenerators$WoodProvider ih$d
	logMapping b
	log (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/data/models/BlockModelGenerators$WoodProvider; b
	logWithHorizontal (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/data/models/BlockModelGenerators$WoodProvider; c
	wood (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/data/models/BlockModelGenerators$WoodProvider; a
net/minecraft/data/models/ItemModelGenerators ii
	output a
	generateFlatItem (Lnet/minecraft/world/item/Item;Ljava/lang/String;Lnet/minecraft/data/models/model/ModelTemplate;)V a
	generateFlatItem (Lnet/minecraft/world/item/Item;Lnet/minecraft/data/models/model/ModelTemplate;)V a
	generateFlatItem (Lnet/minecraft/world/item/Item;Lnet/minecraft/world/item/Item;Lnet/minecraft/data/models/model/ModelTemplate;)V a
	run ()V a
net/minecraft/data/models/ModelProvider ij
	GSON c
	LOGGER b
	generator d
	createBlockStatePath (Ljava/nio/file/Path;Lnet/minecraft/world/level/block/Block;)Ljava/nio/file/Path; a
	createModelPath (Ljava/nio/file/Path;Lnet/minecraft/resources/ResourceLocation;)Ljava/nio/file/Path; a
	getName ()Ljava/lang/String; a
	run (Lnet/minecraft/data/HashCache;)V a
	saveCollection (Lnet/minecraft/data/HashCache;Ljava/nio/file/Path;Ljava/util/Map;Ljava/util/function/BiFunction;)V a
net/minecraft/data/models/blockstates/BlockStateGenerator ik
	getBlock ()Lnet/minecraft/world/level/block/Block; a
net/minecraft/data/models/blockstates/Condition il
	and ([Lnet/minecraft/data/models/blockstates/Condition;)Lnet/minecraft/data/models/blockstates/Condition; a
	condition ()Lnet/minecraft/data/models/blockstates/Condition$TerminalCondition; a
	or ([Lnet/minecraft/data/models/blockstates/Condition;)Lnet/minecraft/data/models/blockstates/Condition; b
	validate (Lnet/minecraft/world/level/block/state/StateDefinition;)V a
net/minecraft/data/models/blockstates/Condition$CompositeCondition il$a
	operation a
	subconditions b
	get ()Lcom/google/gson/JsonElement; b
	validate (Lnet/minecraft/world/level/block/state/StateDefinition;)V a
net/minecraft/data/models/blockstates/Condition$Operation il$b
	$VALUES d
	AND a
	OR b
	id c
net/minecraft/data/models/blockstates/Condition$TerminalCondition il$c
	terms a
	get ()Lcom/google/gson/JsonElement; b
	getTerm (Lnet/minecraft/world/level/block/state/properties/Property;Ljava/lang/Comparable;[Ljava/lang/Comparable;)Ljava/lang/String; c
	joinValues (Lnet/minecraft/world/level/block/state/properties/Property;Ljava/util/stream/Stream;)Ljava/lang/String; a
	negatedTerm (Lnet/minecraft/world/level/block/state/properties/Property;Ljava/lang/Comparable;)Lnet/minecraft/data/models/blockstates/Condition$TerminalCondition; b
	negatedTerm (Lnet/minecraft/world/level/block/state/properties/Property;Ljava/lang/Comparable;[Ljava/lang/Comparable;)Lnet/minecraft/data/models/blockstates/Condition$TerminalCondition; b
	putValue (Lnet/minecraft/world/level/block/state/properties/Property;Ljava/lang/String;)V a
	term (Lnet/minecraft/world/level/block/state/properties/Property;Ljava/lang/Comparable;)Lnet/minecraft/data/models/blockstates/Condition$TerminalCondition; a
	term (Lnet/minecraft/world/level/block/state/properties/Property;Ljava/lang/Comparable;[Ljava/lang/Comparable;)Lnet/minecraft/data/models/blockstates/Condition$TerminalCondition; a
	validate (Lnet/minecraft/world/level/block/state/StateDefinition;)V a
net/minecraft/data/models/blockstates/MultiPartGenerator im
	block a
	parts b
	get ()Lcom/google/gson/JsonElement; b
	getBlock ()Lnet/minecraft/world/level/block/Block; a
	multiPart (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/data/models/blockstates/MultiPartGenerator; a
	with (Ljava/util/List;)Lnet/minecraft/data/models/blockstates/MultiPartGenerator; a
	with (Lnet/minecraft/data/models/blockstates/Condition;Ljava/util/List;)Lnet/minecraft/data/models/blockstates/MultiPartGenerator; a
	with (Lnet/minecraft/data/models/blockstates/Condition;Lnet/minecraft/data/models/blockstates/Variant;)Lnet/minecraft/data/models/blockstates/MultiPartGenerator; a
	with (Lnet/minecraft/data/models/blockstates/Condition;[Lnet/minecraft/data/models/blockstates/Variant;)Lnet/minecraft/data/models/blockstates/MultiPartGenerator; a
	with (Lnet/minecraft/data/models/blockstates/Variant;)Lnet/minecraft/data/models/blockstates/MultiPartGenerator; a
net/minecraft/data/models/blockstates/MultiPartGenerator$ConditionalEntry im$a
	condition a
	decorate (Lcom/google/gson/JsonObject;)V a
	validate (Lnet/minecraft/world/level/block/state/StateDefinition;)V a
net/minecraft/data/models/blockstates/MultiPartGenerator$Entry im$b
	variants a
	decorate (Lcom/google/gson/JsonObject;)V a
	get ()Lcom/google/gson/JsonElement; a
	validate (Lnet/minecraft/world/level/block/state/StateDefinition;)V a
net/minecraft/data/models/blockstates/MultiVariantGenerator in
	baseVariants b
	block a
	declaredPropertySets d
	seenProperties c
	get ()Lcom/google/gson/JsonElement; b
	getBlock ()Lnet/minecraft/world/level/block/Block; a
	mergeVariants (Ljava/util/List;Ljava/util/List;)Ljava/util/List; a
	multiVariant (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/data/models/blockstates/MultiVariantGenerator; a
	multiVariant (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/data/models/blockstates/Variant;)Lnet/minecraft/data/models/blockstates/MultiVariantGenerator; a
	multiVariant (Lnet/minecraft/world/level/block/Block;[Lnet/minecraft/data/models/blockstates/Variant;)Lnet/minecraft/data/models/blockstates/MultiVariantGenerator; a
	with (Lnet/minecraft/data/models/blockstates/PropertyDispatch;)Lnet/minecraft/data/models/blockstates/MultiVariantGenerator; a
net/minecraft/data/models/blockstates/PropertyDispatch io
	values a
	getDefinedProperties ()Ljava/util/List; b
	getEntries ()Ljava/util/Map; a
	properties (Lnet/minecraft/world/level/block/state/properties/Property;Lnet/minecraft/world/level/block/state/properties/Property;)Lnet/minecraft/data/models/blockstates/PropertyDispatch$C2; a
	properties (Lnet/minecraft/world/level/block/state/properties/Property;Lnet/minecraft/world/level/block/state/properties/Property;Lnet/minecraft/world/level/block/state/properties/Property;)Lnet/minecraft/data/models/blockstates/PropertyDispatch$C3; a
	properties (Lnet/minecraft/world/level/block/state/properties/Property;Lnet/minecraft/world/level/block/state/properties/Property;Lnet/minecraft/world/level/block/state/properties/Property;Lnet/minecraft/world/level/block/state/properties/Property;)Lnet/minecraft/data/models/blockstates/PropertyDispatch$C4; a
	properties (Lnet/minecraft/world/level/block/state/properties/Property;Lnet/minecraft/world/level/block/state/properties/Property;Lnet/minecraft/world/level/block/state/properties/Property;Lnet/minecraft/world/level/block/state/properties/Property;Lnet/minecraft/world/level/block/state/properties/Property;)Lnet/minecraft/data/models/blockstates/PropertyDispatch$C5; a
	property (Lnet/minecraft/world/level/block/state/properties/Property;)Lnet/minecraft/data/models/blockstates/PropertyDispatch$C1; a
	putValue (Lnet/minecraft/data/models/blockstates/Selector;Ljava/util/List;)V a
	verifyComplete ()V c
net/minecraft/data/models/blockstates/PropertyDispatch$C1 io$a
	property1 a
	generate (Ljava/util/function/Function;)Lnet/minecraft/data/models/blockstates/PropertyDispatch; a
	generateList (Ljava/util/function/Function;)Lnet/minecraft/data/models/blockstates/PropertyDispatch; b
	getDefinedProperties ()Ljava/util/List; b
	select (Ljava/lang/Comparable;Ljava/util/List;)Lnet/minecraft/data/models/blockstates/PropertyDispatch$C1; a
	select (Ljava/lang/Comparable;Lnet/minecraft/data/models/blockstates/Variant;)Lnet/minecraft/data/models/blockstates/PropertyDispatch$C1; a
net/minecraft/data/models/blockstates/PropertyDispatch$C2 io$b
	property1 a
	property2 b
	generate (Ljava/util/function/BiFunction;)Lnet/minecraft/data/models/blockstates/PropertyDispatch; a
	generateList (Ljava/util/function/BiFunction;)Lnet/minecraft/data/models/blockstates/PropertyDispatch; b
	getDefinedProperties ()Ljava/util/List; b
	select (Ljava/lang/Comparable;Ljava/lang/Comparable;Ljava/util/List;)Lnet/minecraft/data/models/blockstates/PropertyDispatch$C2; a
	select (Ljava/lang/Comparable;Ljava/lang/Comparable;Lnet/minecraft/data/models/blockstates/Variant;)Lnet/minecraft/data/models/blockstates/PropertyDispatch$C2; a
net/minecraft/data/models/blockstates/PropertyDispatch$C3 io$c
	property1 a
	property2 b
	property3 c
	generate (Lnet/minecraft/data/models/blockstates/PropertyDispatch$TriFunction;)Lnet/minecraft/data/models/blockstates/PropertyDispatch; a
	generateList (Lnet/minecraft/data/models/blockstates/PropertyDispatch$TriFunction;)Lnet/minecraft/data/models/blockstates/PropertyDispatch; b
	getDefinedProperties ()Ljava/util/List; b
	select (Ljava/lang/Comparable;Ljava/lang/Comparable;Ljava/lang/Comparable;Ljava/util/List;)Lnet/minecraft/data/models/blockstates/PropertyDispatch$C3; a
	select (Ljava/lang/Comparable;Ljava/lang/Comparable;Ljava/lang/Comparable;Lnet/minecraft/data/models/blockstates/Variant;)Lnet/minecraft/data/models/blockstates/PropertyDispatch$C3; a
net/minecraft/data/models/blockstates/PropertyDispatch$C4 io$d
	property1 a
	property2 b
	property3 c
	property4 d
	generate (Lnet/minecraft/data/models/blockstates/PropertyDispatch$QuadFunction;)Lnet/minecraft/data/models/blockstates/PropertyDispatch; a
	generateList (Lnet/minecraft/data/models/blockstates/PropertyDispatch$QuadFunction;)Lnet/minecraft/data/models/blockstates/PropertyDispatch; b
	getDefinedProperties ()Ljava/util/List; b
	select (Ljava/lang/Comparable;Ljava/lang/Comparable;Ljava/lang/Comparable;Ljava/lang/Comparable;Ljava/util/List;)Lnet/minecraft/data/models/blockstates/PropertyDispatch$C4; a
	select (Ljava/lang/Comparable;Ljava/lang/Comparable;Ljava/lang/Comparable;Ljava/lang/Comparable;Lnet/minecraft/data/models/blockstates/Variant;)Lnet/minecraft/data/models/blockstates/PropertyDispatch$C4; a
net/minecraft/data/models/blockstates/PropertyDispatch$C5 io$e
	property1 a
	property2 b
	property3 c
	property4 d
	property5 e
	generate (Lnet/minecraft/data/models/blockstates/PropertyDispatch$PentaFunction;)Lnet/minecraft/data/models/blockstates/PropertyDispatch; a
	generateList (Lnet/minecraft/data/models/blockstates/PropertyDispatch$PentaFunction;)Lnet/minecraft/data/models/blockstates/PropertyDispatch; b
	getDefinedProperties ()Ljava/util/List; b
	select (Ljava/lang/Comparable;Ljava/lang/Comparable;Ljava/lang/Comparable;Ljava/lang/Comparable;Ljava/lang/Comparable;Ljava/util/List;)Lnet/minecraft/data/models/blockstates/PropertyDispatch$C5; a
	select (Ljava/lang/Comparable;Ljava/lang/Comparable;Ljava/lang/Comparable;Ljava/lang/Comparable;Ljava/lang/Comparable;Lnet/minecraft/data/models/blockstates/Variant;)Lnet/minecraft/data/models/blockstates/PropertyDispatch$C5; a
net/minecraft/data/models/blockstates/PropertyDispatch$PentaFunction io$f
	apply (Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object; a
net/minecraft/data/models/blockstates/PropertyDispatch$QuadFunction io$g
	apply (Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object; a
net/minecraft/data/models/blockstates/PropertyDispatch$TriFunction io$h
net/minecraft/data/models/blockstates/Selector ip
	COMPARE_BY_NAME b
	EMPTY a
	values c
	empty ()Lnet/minecraft/data/models/blockstates/Selector; a
	extend (Lnet/minecraft/data/models/blockstates/Selector;)Lnet/minecraft/data/models/blockstates/Selector; a
	extend (Lnet/minecraft/world/level/block/state/properties/Property$Value;)Lnet/minecraft/data/models/blockstates/Selector; a
	getKey ()Ljava/lang/String; b
	of ([Lnet/minecraft/world/level/block/state/properties/Property$Value;)Lnet/minecraft/data/models/blockstates/Selector; a
net/minecraft/data/models/blockstates/Variant iq
	values a
	convertList (Ljava/util/List;)Lcom/google/gson/JsonElement; a
	get ()Lcom/google/gson/JsonElement; b
	merge (Lnet/minecraft/data/models/blockstates/Variant;Lnet/minecraft/data/models/blockstates/Variant;)Lnet/minecraft/data/models/blockstates/Variant; a
	variant ()Lnet/minecraft/data/models/blockstates/Variant; a
	with (Lnet/minecraft/data/models/blockstates/VariantProperty;Ljava/lang/Object;)Lnet/minecraft/data/models/blockstates/Variant; a
net/minecraft/data/models/blockstates/VariantProperties ir
	MODEL c
	UV_LOCK d
	WEIGHT e
	X_ROT a
	Y_ROT b
net/minecraft/data/models/blockstates/VariantProperties$Rotation ir$a
	$VALUES f
	R0 a
	R180 c
	R270 d
	R90 b
	value e
net/minecraft/data/models/blockstates/VariantProperty is
	key a
	serializer b
	withValue (Ljava/lang/Object;)Lnet/minecraft/data/models/blockstates/VariantProperty$Value; a
net/minecraft/data/models/blockstates/VariantProperty$Value is$a
	value b
	addToVariant (Lcom/google/gson/JsonObject;)V a
	getKey ()Lnet/minecraft/data/models/blockstates/VariantProperty; a
net/minecraft/data/models/model/DelegatedModel iu
	parent a
	get ()Lcom/google/gson/JsonElement; a
net/minecraft/data/models/model/ModelLocationUtils iv
	decorateBlockModelLocation (Ljava/lang/String;)Lnet/minecraft/resources/ResourceLocation; a
	decorateItemModelLocation (Ljava/lang/String;)Lnet/minecraft/resources/ResourceLocation; b
	getModelLocation (Lnet/minecraft/world/item/Item;)Lnet/minecraft/resources/ResourceLocation; a
	getModelLocation (Lnet/minecraft/world/item/Item;Ljava/lang/String;)Lnet/minecraft/resources/ResourceLocation; a
	getModelLocation (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/resources/ResourceLocation; a
	getModelLocation (Lnet/minecraft/world/level/block/Block;Ljava/lang/String;)Lnet/minecraft/resources/ResourceLocation; a
net/minecraft/data/models/model/ModelTemplate iw
	model a
	requiredSlots b
	suffix c
	create (Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/data/models/model/TextureMapping;Ljava/util/function/BiConsumer;)Lnet/minecraft/resources/ResourceLocation; a
	create (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/data/models/model/TextureMapping;Ljava/util/function/BiConsumer;)Lnet/minecraft/resources/ResourceLocation; a
	createMap (Lnet/minecraft/data/models/model/TextureMapping;)Ljava/util/Map; a
	createWithOverride (Lnet/minecraft/world/level/block/Block;Ljava/lang/String;Lnet/minecraft/data/models/model/TextureMapping;Ljava/util/function/BiConsumer;)Lnet/minecraft/resources/ResourceLocation; b
	createWithSuffix (Lnet/minecraft/world/level/block/Block;Ljava/lang/String;Lnet/minecraft/data/models/model/TextureMapping;Ljava/util/function/BiConsumer;)Lnet/minecraft/resources/ResourceLocation; a
net/minecraft/data/models/model/ModelTemplates ix
	ANVIL am
	ATTACHED_STEM ao
	BANNER_INVENTORY aP
	BED_INVENTORY aO
	BUTTON l
	BUTTON_INVENTORY n
	BUTTON_PRESSED m
	CAMPFIRE aw
	CARPET aa
	CHORUS_FLOWER ae
	COMMAND_BLOCK al
	CORAL_FAN ab
	CORAL_WALL_FAN ac
	CROP ap
	CROSS S
	CUBE a
	CUBE_ALL c
	CUBE_BOTTOM_TOP h
	CUBE_COLUMN e
	CUBE_COLUMN_HORIZONTAL f
	CUBE_DIRECTIONAL b
	CUBE_MIRRORED_ALL d
	CUBE_ORIENTABLE i
	CUBE_ORIENTABLE_TOP_BOTTOM j
	CUBE_ORIENTABLE_VERTICAL k
	CUBE_TOP g
	DAYLIGHT_DETECTOR af
	DOOR_BOTTOM o
	DOOR_BOTTOM_HINGE p
	DOOR_TOP q
	DOOR_TOP_HINGE r
	FARMLAND aq
	FENCE_GATE_CLOSED z
	FENCE_GATE_OPEN A
	FENCE_GATE_WALL_CLOSED B
	FENCE_GATE_WALL_OPEN C
	FENCE_INVENTORY u
	FENCE_POST s
	FENCE_SIDE t
	FIRE_FLOOR ar
	FIRE_SIDE as
	FIRE_SIDE_ALT at
	FIRE_UP au
	FIRE_UP_ALT av
	FLAT_HANDHELD_ITEM aL
	FLAT_HANDHELD_ROD_ITEM aM
	FLAT_ITEM aK
	FLOWER_POT_CROSS U
	FOUR_TURTLE_EGGS aI
	GLAZED_TERRACOTTA ad
	HANGING_LANTERN ay
	LANTERN ax
	LEAVES I
	ORIENTABLE_TRAPDOOR_BOTTOM Q
	ORIENTABLE_TRAPDOOR_OPEN R
	ORIENTABLE_TRAPDOOR_TOP P
	PARTICLE_ONLY F
	PISTON aB
	PISTON_HEAD aC
	PISTON_HEAD_SHORT aD
	PRESSURE_PLATE_DOWN E
	PRESSURE_PLATE_UP D
	RAIL_CURVED X
	RAIL_FLAT W
	RAIL_RAISED_NE Y
	RAIL_RAISED_SW Z
	SEAGRASS aE
	SHULKER_BOX_INVENTORY aN
	SINGLE_FACE aJ
	SKULL_INVENTORY aQ
	SLAB_BOTTOM G
	SLAB_TOP H
	STAINED_GLASS_PANE_NOSIDE ag
	STAINED_GLASS_PANE_NOSIDE_ALT ah
	STAINED_GLASS_PANE_POST ai
	STAINED_GLASS_PANE_SIDE aj
	STAINED_GLASS_PANE_SIDE_ALT ak
	STAIRS_INNER K
	STAIRS_OUTER L
	STAIRS_STRAIGHT J
	STEMS an
	THREE_TURTLE_EGGS aH
	TINTED_CROSS T
	TINTED_FLOWER_POT_CROSS V
	TORCH az
	TRAPDOOR_BOTTOM N
	TRAPDOOR_OPEN O
	TRAPDOOR_TOP M
	TURTLE_EGG aF
	TWO_TURTLE_EGGS aG
	WALL_INVENTORY y
	WALL_LOW_SIDE w
	WALL_POST v
	WALL_TALL_SIDE x
	WALL_TORCH aA
	create (Ljava/lang/String;Ljava/lang/String;[Lnet/minecraft/data/models/model/TextureSlot;)Lnet/minecraft/data/models/model/ModelTemplate; a
	create (Ljava/lang/String;[Lnet/minecraft/data/models/model/TextureSlot;)Lnet/minecraft/data/models/model/ModelTemplate; a
	create ([Lnet/minecraft/data/models/model/TextureSlot;)Lnet/minecraft/data/models/model/ModelTemplate; a
	createItem (Ljava/lang/String;[Lnet/minecraft/data/models/model/TextureSlot;)Lnet/minecraft/data/models/model/ModelTemplate; b
net/minecraft/data/models/model/TextureMapping iy
	forcedSlots b
	slots a
	attachedStem (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/data/models/model/TextureMapping; a
	campfire (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/data/models/model/TextureMapping; A
	column (Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/data/models/model/TextureMapping; a
	column (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/data/models/model/TextureMapping; j
	columnWithWall (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/data/models/model/TextureMapping; o
	commandBlock (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/data/models/model/TextureMapping; v
	copyAndUpdate (Lnet/minecraft/data/models/model/TextureSlot;Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/data/models/model/TextureMapping; c
	copyForced (Lnet/minecraft/data/models/model/TextureSlot;Lnet/minecraft/data/models/model/TextureSlot;)Lnet/minecraft/data/models/model/TextureMapping; b
	copySlot (Lnet/minecraft/data/models/model/TextureSlot;Lnet/minecraft/data/models/model/TextureSlot;)Lnet/minecraft/data/models/model/TextureMapping; a
	craftingTable (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/data/models/model/TextureMapping; c
	crop (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/data/models/model/TextureMapping; g
	cross (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/data/models/model/TextureMapping; c
	cross (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/data/models/model/TextureMapping; c
	cube (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/data/models/model/TextureMapping; b
	cube (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/data/models/model/TextureMapping; a
	cubeBottomTop (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/data/models/model/TextureMapping; m
	cubeBottomTopWithWall (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/data/models/model/TextureMapping; n
	cubeTop (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/data/models/model/TextureMapping; k
	defaultTexture (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/data/models/model/TextureMapping; a
	defaultTexture (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/data/models/model/TextureMapping; b
	door (Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/data/models/model/TextureMapping; b
	door (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/data/models/model/TextureMapping; p
	fan (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/data/models/model/TextureMapping; i
	fire0 (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/data/models/model/TextureMapping; r
	fire1 (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/data/models/model/TextureMapping; s
	fletchingTable (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/data/models/model/TextureMapping; d
	get (Lnet/minecraft/data/models/model/TextureSlot;)Lnet/minecraft/resources/ResourceLocation; a
	getBlockTexture (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/resources/ResourceLocation; C
	getBlockTexture (Lnet/minecraft/world/level/block/Block;Ljava/lang/String;)Lnet/minecraft/resources/ResourceLocation; a
	getForced ()Ljava/util/stream/Stream; a
	getItemTexture (Lnet/minecraft/world/item/Item;)Lnet/minecraft/resources/ResourceLocation; c
	getItemTexture (Lnet/minecraft/world/item/Item;Ljava/lang/String;)Lnet/minecraft/resources/ResourceLocation; a
	lantern (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/data/models/model/TextureMapping; t
	layer0 (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/data/models/model/TextureMapping; j
	layer0 (Lnet/minecraft/world/item/Item;)Lnet/minecraft/data/models/model/TextureMapping; b
	layer0 (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/data/models/model/TextureMapping; B
	logColumn (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/data/models/model/TextureMapping; l
	orientableCube (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/data/models/model/TextureMapping; w
	orientableCubeOnlyTop (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/data/models/model/TextureMapping; x
	orientableCubeSameEnds (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/data/models/model/TextureMapping; y
	pane (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/data/models/model/TextureMapping; b
	particle (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/data/models/model/TextureMapping; h
	particle (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/data/models/model/TextureMapping; q
	particleFromItem (Lnet/minecraft/world/item/Item;)Lnet/minecraft/data/models/model/TextureMapping; a
	pattern (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/data/models/model/TextureMapping; h
	plant (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/data/models/model/TextureMapping; d
	plant (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/data/models/model/TextureMapping; d
	put (Lnet/minecraft/data/models/model/TextureSlot;Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/data/models/model/TextureMapping; a
	putForced (Lnet/minecraft/data/models/model/TextureSlot;Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/data/models/model/TextureMapping; b
	rail (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/data/models/model/TextureMapping; e
	rail (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/data/models/model/TextureMapping; e
	singleSlot (Lnet/minecraft/data/models/model/TextureSlot;Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/data/models/model/TextureMapping; d
	stem (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/data/models/model/TextureMapping; g
	top (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/data/models/model/TextureMapping; z
	torch (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/data/models/model/TextureMapping; i
	torch (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/data/models/model/TextureMapping; u
	wool (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/data/models/model/TextureMapping; f
	wool (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/data/models/model/TextureMapping; f
net/minecraft/data/models/model/TextureSlot iz
	ALL a
	BACK h
	BOTTOM e
	CROP A
	CROSS p
	DIRT B
	DOWN o
	EAST l
	EDGE w
	END d
	FAN x
	FIRE C
	FRONT g
	LANTERN D
	LAYER0 H
	LIT_LOG I
	NORTH j
	PANE v
	PARTICLE c
	PATTERN u
	PLANT q
	PLATFORM E
	RAIL s
	SIDE i
	SOUTH k
	STEM y
	TEXTURE b
	TOP f
	TORCH G
	UNSTICKY F
	UP n
	UPPER_STEM z
	WALL r
	WEST m
	WOOL t
	id J
	parent K
	create (Ljava/lang/String;)Lnet/minecraft/data/models/model/TextureSlot; a
	create (Ljava/lang/String;Lnet/minecraft/data/models/model/TextureSlot;)Lnet/minecraft/data/models/model/TextureSlot; a
	getId ()Ljava/lang/String; a
	getParent ()Lnet/minecraft/data/models/model/TextureSlot; b
net/minecraft/data/models/model/TexturedModel ja
	ANVIL m
	CARPET i
	COLUMN c
	COLUMN_ALT r
	COLUMN_HORIZONTAL d
	COLUMN_HORIZONTAL_ALT s
	COLUMN_WITH_WALL u
	CORAL_FAN k
	CUBE a
	CUBE_MIRRORED b
	CUBE_TOP f
	CUBE_TOP_BOTTOM e
	GLAZED_TERRACOTTA j
	HANGING_LANTERN p
	LANTERN o
	LEAVES n
	ORIENTABLE h
	ORIENTABLE_ONLY_TOP g
	PARTICLE_ONLY l
	SEAGRASS q
	TOP_BOTTOM_WITH_WALL t
	mapping v
	template w
	create (Lnet/minecraft/world/level/block/Block;Ljava/util/function/BiConsumer;)Lnet/minecraft/resources/ResourceLocation; a
	createAllSame (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/data/models/model/TexturedModel; a
	createDefault (Ljava/util/function/Function;Lnet/minecraft/data/models/model/ModelTemplate;)Lnet/minecraft/data/models/model/TexturedModel$Provider; a
	createWithSuffix (Lnet/minecraft/world/level/block/Block;Ljava/lang/String;Ljava/util/function/BiConsumer;)Lnet/minecraft/resources/ResourceLocation; a
	getMapping ()Lnet/minecraft/data/models/model/TextureMapping; b
	getTemplate ()Lnet/minecraft/data/models/model/ModelTemplate; a
	updateTextures (Ljava/util/function/Consumer;)Lnet/minecraft/data/models/model/TexturedModel; a
net/minecraft/data/models/model/TexturedModel$Provider ja$a
	create (Lnet/minecraft/world/level/block/Block;Ljava/util/function/BiConsumer;)Lnet/minecraft/resources/ResourceLocation; a
	createWithSuffix (Lnet/minecraft/world/level/block/Block;Ljava/lang/String;Ljava/util/function/BiConsumer;)Lnet/minecraft/resources/ResourceLocation; a
	updateTexture (Ljava/util/function/Consumer;)Lnet/minecraft/data/models/model/TexturedModel$Provider; a
net/minecraft/data/recipes/FinishedRecipe je
	getAdvancementId ()Lnet/minecraft/resources/ResourceLocation; e
	getId ()Lnet/minecraft/resources/ResourceLocation; b
	getType ()Lnet/minecraft/world/item/crafting/RecipeSerializer; c
	serializeAdvancement ()Lcom/google/gson/JsonObject; d
	serializeRecipe ()Lcom/google/gson/JsonObject; a
	serializeRecipeData (Lcom/google/gson/JsonObject;)V a
net/minecraft/data/recipes/RecipeProvider jf
	GSON c
	LOGGER b
	generator d
	banner (Ljava/util/function/Consumer;Lnet/minecraft/world/level/ItemLike;Lnet/minecraft/world/level/ItemLike;)V q
	bedFromPlanksAndWool (Ljava/util/function/Consumer;Lnet/minecraft/world/level/ItemLike;Lnet/minecraft/world/level/ItemLike;)V o
	bedFromWhiteBedAndDye (Ljava/util/function/Consumer;Lnet/minecraft/world/level/ItemLike;Lnet/minecraft/world/level/ItemLike;)V p
	buildShapelessRecipes (Ljava/util/function/Consumer;)V a
	carpetFromWool (Ljava/util/function/Consumer;Lnet/minecraft/world/level/ItemLike;Lnet/minecraft/world/level/ItemLike;)V m
	coloredCarpetFromWhiteCarpetAndDye (Ljava/util/function/Consumer;Lnet/minecraft/world/level/ItemLike;Lnet/minecraft/world/level/ItemLike;)V n
	coloredTerracottaFromTerracottaAndDye (Ljava/util/function/Consumer;Lnet/minecraft/world/level/ItemLike;Lnet/minecraft/world/level/ItemLike;)V u
	coloredWoolFromWhiteWoolAndDye (Ljava/util/function/Consumer;Lnet/minecraft/world/level/ItemLike;Lnet/minecraft/world/level/ItemLike;)V l
	concretePowder (Ljava/util/function/Consumer;Lnet/minecraft/world/level/ItemLike;Lnet/minecraft/world/level/ItemLike;)V v
	cookRecipes (Ljava/util/function/Consumer;Ljava/lang/String;Lnet/minecraft/world/item/crafting/SimpleCookingSerializer;I)V a
	getName ()Ljava/lang/String; a
	has (Lnet/minecraft/advancements/critereon/MinMaxBounds$Ints;Lnet/minecraft/world/level/ItemLike;)Lnet/minecraft/advancements/critereon/InventoryChangeTrigger$TriggerInstance; a
	has (Lnet/minecraft/tags/Tag;)Lnet/minecraft/advancements/critereon/InventoryChangeTrigger$TriggerInstance; a
	has (Lnet/minecraft/world/level/ItemLike;)Lnet/minecraft/advancements/critereon/InventoryChangeTrigger$TriggerInstance; a
	insideOf (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/advancements/critereon/EnterBlockTrigger$TriggerInstance; a
	inventoryTrigger ([Lnet/minecraft/advancements/critereon/ItemPredicate;)Lnet/minecraft/advancements/critereon/InventoryChangeTrigger$TriggerInstance; a
	netheriteSmithing (Ljava/util/function/Consumer;Lnet/minecraft/world/item/Item;Lnet/minecraft/world/item/Item;)V a
	planksFromLog (Ljava/util/function/Consumer;Lnet/minecraft/world/level/ItemLike;Lnet/minecraft/tags/Tag;)V a
	planksFromLogs (Ljava/util/function/Consumer;Lnet/minecraft/world/level/ItemLike;Lnet/minecraft/tags/Tag;)V b
	run (Lnet/minecraft/data/HashCache;)V a
	saveAdvancement (Lnet/minecraft/data/HashCache;Lcom/google/gson/JsonObject;Ljava/nio/file/Path;)V b
	saveRecipe (Lnet/minecraft/data/HashCache;Lcom/google/gson/JsonObject;Ljava/nio/file/Path;)V a
	stainedGlassFromGlassAndDye (Ljava/util/function/Consumer;Lnet/minecraft/world/level/ItemLike;Lnet/minecraft/world/level/ItemLike;)V r
	stainedGlassPaneFromGlassPaneAndDye (Ljava/util/function/Consumer;Lnet/minecraft/world/level/ItemLike;Lnet/minecraft/world/level/ItemLike;)V t
	stainedGlassPaneFromStainedGlass (Ljava/util/function/Consumer;Lnet/minecraft/world/level/ItemLike;Lnet/minecraft/world/level/ItemLike;)V s
	woodFromLogs (Ljava/util/function/Consumer;Lnet/minecraft/world/level/ItemLike;Lnet/minecraft/world/level/ItemLike;)V a
	woodenBoat (Ljava/util/function/Consumer;Lnet/minecraft/world/level/ItemLike;Lnet/minecraft/world/level/ItemLike;)V b
	woodenButton (Ljava/util/function/Consumer;Lnet/minecraft/world/level/ItemLike;Lnet/minecraft/world/level/ItemLike;)V c
	woodenDoor (Ljava/util/function/Consumer;Lnet/minecraft/world/level/ItemLike;Lnet/minecraft/world/level/ItemLike;)V d
	woodenFence (Ljava/util/function/Consumer;Lnet/minecraft/world/level/ItemLike;Lnet/minecraft/world/level/ItemLike;)V e
	woodenFenceGate (Ljava/util/function/Consumer;Lnet/minecraft/world/level/ItemLike;Lnet/minecraft/world/level/ItemLike;)V f
	woodenPressurePlate (Ljava/util/function/Consumer;Lnet/minecraft/world/level/ItemLike;Lnet/minecraft/world/level/ItemLike;)V g
	woodenSign (Ljava/util/function/Consumer;Lnet/minecraft/world/level/ItemLike;Lnet/minecraft/world/level/ItemLike;)V k
	woodenSlab (Ljava/util/function/Consumer;Lnet/minecraft/world/level/ItemLike;Lnet/minecraft/world/level/ItemLike;)V h
	woodenStairs (Ljava/util/function/Consumer;Lnet/minecraft/world/level/ItemLike;Lnet/minecraft/world/level/ItemLike;)V i
	woodenTrapdoor (Ljava/util/function/Consumer;Lnet/minecraft/world/level/ItemLike;Lnet/minecraft/world/level/ItemLike;)V j
net/minecraft/data/recipes/ShapedRecipeBuilder jg
	LOGGER a
	advancement f
	count c
	group g
	key e
	result b
	rows d
	define (Ljava/lang/Character;Lnet/minecraft/tags/Tag;)Lnet/minecraft/data/recipes/ShapedRecipeBuilder; a
	define (Ljava/lang/Character;Lnet/minecraft/world/item/crafting/Ingredient;)Lnet/minecraft/data/recipes/ShapedRecipeBuilder; a
	define (Ljava/lang/Character;Lnet/minecraft/world/level/ItemLike;)Lnet/minecraft/data/recipes/ShapedRecipeBuilder; a
	ensureValid (Lnet/minecraft/resources/ResourceLocation;)V a
	group (Ljava/lang/String;)Lnet/minecraft/data/recipes/ShapedRecipeBuilder; b
	pattern (Ljava/lang/String;)Lnet/minecraft/data/recipes/ShapedRecipeBuilder; a
	save (Ljava/util/function/Consumer;)V a
	save (Ljava/util/function/Consumer;Ljava/lang/String;)V a
	save (Ljava/util/function/Consumer;Lnet/minecraft/resources/ResourceLocation;)V a
	shaped (Lnet/minecraft/world/level/ItemLike;)Lnet/minecraft/data/recipes/ShapedRecipeBuilder; a
	shaped (Lnet/minecraft/world/level/ItemLike;I)Lnet/minecraft/data/recipes/ShapedRecipeBuilder; a
	unlockedBy (Ljava/lang/String;Lnet/minecraft/advancements/CriterionTriggerInstance;)Lnet/minecraft/data/recipes/ShapedRecipeBuilder; a
net/minecraft/data/recipes/ShapedRecipeBuilder$Result jg$a
	advancement h
	advancementId i
	count d
	group e
	id b
	key g
	pattern f
	result c
	getAdvancementId ()Lnet/minecraft/resources/ResourceLocation; e
	getId ()Lnet/minecraft/resources/ResourceLocation; b
	getType ()Lnet/minecraft/world/item/crafting/RecipeSerializer; c
	serializeAdvancement ()Lcom/google/gson/JsonObject; d
	serializeRecipeData (Lcom/google/gson/JsonObject;)V a
net/minecraft/data/recipes/ShapelessRecipeBuilder jh
	LOGGER a
	advancement e
	count c
	group f
	ingredients d
	result b
	ensureValid (Lnet/minecraft/resources/ResourceLocation;)V a
	group (Ljava/lang/String;)Lnet/minecraft/data/recipes/ShapelessRecipeBuilder; a
	requires (Lnet/minecraft/tags/Tag;)Lnet/minecraft/data/recipes/ShapelessRecipeBuilder; a
	requires (Lnet/minecraft/world/item/crafting/Ingredient;)Lnet/minecraft/data/recipes/ShapelessRecipeBuilder; a
	requires (Lnet/minecraft/world/item/crafting/Ingredient;I)Lnet/minecraft/data/recipes/ShapelessRecipeBuilder; a
	requires (Lnet/minecraft/world/level/ItemLike;)Lnet/minecraft/data/recipes/ShapelessRecipeBuilder; b
	requires (Lnet/minecraft/world/level/ItemLike;I)Lnet/minecraft/data/recipes/ShapelessRecipeBuilder; b
	save (Ljava/util/function/Consumer;)V a
	save (Ljava/util/function/Consumer;Ljava/lang/String;)V a
	save (Ljava/util/function/Consumer;Lnet/minecraft/resources/ResourceLocation;)V a
	shapeless (Lnet/minecraft/world/level/ItemLike;)Lnet/minecraft/data/recipes/ShapelessRecipeBuilder; a
	shapeless (Lnet/minecraft/world/level/ItemLike;I)Lnet/minecraft/data/recipes/ShapelessRecipeBuilder; a
	unlockedBy (Ljava/lang/String;Lnet/minecraft/advancements/CriterionTriggerInstance;)Lnet/minecraft/data/recipes/ShapelessRecipeBuilder; a
net/minecraft/data/recipes/ShapelessRecipeBuilder$Result jh$a
	advancement f
	advancementId g
	count c
	group d
	id a
	ingredients e
	result b
	getAdvancementId ()Lnet/minecraft/resources/ResourceLocation; e
	getId ()Lnet/minecraft/resources/ResourceLocation; b
	getType ()Lnet/minecraft/world/item/crafting/RecipeSerializer; c
	serializeAdvancement ()Lcom/google/gson/JsonObject; d
	serializeRecipeData (Lcom/google/gson/JsonObject;)V a
net/minecraft/data/recipes/SimpleCookingRecipeBuilder ji
	advancement e
	cookingTime d
	experience c
	group f
	ingredient b
	result a
	serializer g
	blasting (Lnet/minecraft/world/item/crafting/Ingredient;Lnet/minecraft/world/level/ItemLike;FI)Lnet/minecraft/data/recipes/SimpleCookingRecipeBuilder; b
	campfireCooking (Lnet/minecraft/world/item/crafting/Ingredient;Lnet/minecraft/world/level/ItemLike;FI)Lnet/minecraft/data/recipes/SimpleCookingRecipeBuilder; a
	cooking (Lnet/minecraft/world/item/crafting/Ingredient;Lnet/minecraft/world/level/ItemLike;FILnet/minecraft/world/item/crafting/SimpleCookingSerializer;)Lnet/minecraft/data/recipes/SimpleCookingRecipeBuilder; a
	ensureValid (Lnet/minecraft/resources/ResourceLocation;)V a
	group (Ljava/lang/String;)Lnet/minecraft/data/recipes/SimpleCookingRecipeBuilder; a
	save (Ljava/util/function/Consumer;)V a
	save (Ljava/util/function/Consumer;Ljava/lang/String;)V a
	save (Ljava/util/function/Consumer;Lnet/minecraft/resources/ResourceLocation;)V a
	smelting (Lnet/minecraft/world/item/crafting/Ingredient;Lnet/minecraft/world/level/ItemLike;FI)Lnet/minecraft/data/recipes/SimpleCookingRecipeBuilder; c
	smoking (Lnet/minecraft/world/item/crafting/Ingredient;Lnet/minecraft/world/level/ItemLike;FI)Lnet/minecraft/data/recipes/SimpleCookingRecipeBuilder; d
	unlockedBy (Ljava/lang/String;Lnet/minecraft/advancements/CriterionTriggerInstance;)Lnet/minecraft/data/recipes/SimpleCookingRecipeBuilder; a
net/minecraft/data/recipes/SimpleCookingRecipeBuilder$Result ji$a
	advancement g
	advancementId h
	cookingTime f
	experience e
	group b
	id a
	ingredient c
	result d
	serializer i
	getAdvancementId ()Lnet/minecraft/resources/ResourceLocation; e
	getId ()Lnet/minecraft/resources/ResourceLocation; b
	getType ()Lnet/minecraft/world/item/crafting/RecipeSerializer; c
	serializeAdvancement ()Lcom/google/gson/JsonObject; d
	serializeRecipeData (Lcom/google/gson/JsonObject;)V a
net/minecraft/data/recipes/SingleItemRecipeBuilder jj
	advancement d
	count c
	group e
	ingredient b
	result a
	type f
	ensureValid (Lnet/minecraft/resources/ResourceLocation;)V a
	group (Ljava/lang/String;)Lnet/minecraft/data/recipes/SingleItemRecipeBuilder; a
	save (Ljava/util/function/Consumer;Ljava/lang/String;)V a
	save (Ljava/util/function/Consumer;Lnet/minecraft/resources/ResourceLocation;)V a
	stonecutting (Lnet/minecraft/world/item/crafting/Ingredient;Lnet/minecraft/world/level/ItemLike;)Lnet/minecraft/data/recipes/SingleItemRecipeBuilder; a
	stonecutting (Lnet/minecraft/world/item/crafting/Ingredient;Lnet/minecraft/world/level/ItemLike;I)Lnet/minecraft/data/recipes/SingleItemRecipeBuilder; a
	unlocks (Ljava/lang/String;Lnet/minecraft/advancements/CriterionTriggerInstance;)Lnet/minecraft/data/recipes/SingleItemRecipeBuilder; a
net/minecraft/data/recipes/SingleItemRecipeBuilder$Result jj$a
	advancement f
	advancementId g
	count e
	group b
	id a
	ingredient c
	result d
	type h
	getAdvancementId ()Lnet/minecraft/resources/ResourceLocation; e
	getId ()Lnet/minecraft/resources/ResourceLocation; b
	getType ()Lnet/minecraft/world/item/crafting/RecipeSerializer; c
	serializeAdvancement ()Lcom/google/gson/JsonObject; d
	serializeRecipeData (Lcom/google/gson/JsonObject;)V a
net/minecraft/data/recipes/SpecialRecipeBuilder jk
	serializer a
	save (Ljava/util/function/Consumer;Ljava/lang/String;)V a
	special (Lnet/minecraft/world/item/crafting/SimpleRecipeSerializer;)Lnet/minecraft/data/recipes/SpecialRecipeBuilder; a
net/minecraft/data/recipes/UpgradeRecipeBuilder jl
	addition b
	advancement d
	base a
	result c
	type e
	ensureValid (Lnet/minecraft/resources/ResourceLocation;)V a
	save (Ljava/util/function/Consumer;Ljava/lang/String;)V a
	save (Ljava/util/function/Consumer;Lnet/minecraft/resources/ResourceLocation;)V a
	smithing (Lnet/minecraft/world/item/crafting/Ingredient;Lnet/minecraft/world/item/crafting/Ingredient;Lnet/minecraft/world/item/Item;)Lnet/minecraft/data/recipes/UpgradeRecipeBuilder; a
	unlocks (Ljava/lang/String;Lnet/minecraft/advancements/CriterionTriggerInstance;)Lnet/minecraft/data/recipes/UpgradeRecipeBuilder; a
net/minecraft/data/recipes/UpgradeRecipeBuilder$Result jl$a
	addition c
	advancement e
	advancementId f
	base b
	id a
	result d
	type g
	getAdvancementId ()Lnet/minecraft/resources/ResourceLocation; e
	getId ()Lnet/minecraft/resources/ResourceLocation; b
	getType ()Lnet/minecraft/world/item/crafting/RecipeSerializer; c
	serializeAdvancement ()Lcom/google/gson/JsonObject; d
	serializeRecipeData (Lcom/google/gson/JsonObject;)V a
net/minecraft/data/structures/NbtToSnbt jn
	LOGGER b
	generator c
	convertStructure (Ljava/nio/file/Path;Ljava/lang/String;Ljava/nio/file/Path;)Ljava/nio/file/Path; a
	getName ()Ljava/lang/String; a
	getName (Ljava/nio/file/Path;Ljava/nio/file/Path;)Ljava/lang/String; a
	run (Lnet/minecraft/data/HashCache;)V a
net/minecraft/data/structures/SnbtToNbt jo
	LOGGER c
	dumpSnbtTo b
	filters e
	generator d
	addFilter (Lnet/minecraft/data/structures/SnbtToNbt$Filter;)Lnet/minecraft/data/structures/SnbtToNbt; a
	applyFilters (Ljava/lang/String;Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/nbt/CompoundTag; a
	getName ()Ljava/lang/String; a
	getName (Ljava/nio/file/Path;Ljava/nio/file/Path;)Ljava/lang/String; a
	readStructure (Ljava/nio/file/Path;Ljava/lang/String;)Lnet/minecraft/data/structures/SnbtToNbt$TaskResult; a
	run (Lnet/minecraft/data/HashCache;)V a
	storeStructureIfChanged (Lnet/minecraft/data/HashCache;Lnet/minecraft/data/structures/SnbtToNbt$TaskResult;Ljava/nio/file/Path;)V a
net/minecraft/data/structures/SnbtToNbt$Filter jo$a
	apply (Ljava/lang/String;Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/nbt/CompoundTag; a
net/minecraft/data/structures/SnbtToNbt$TaskResult jo$b
	hash d
	name a
	payload b
	snbtPayload c
net/minecraft/data/structures/StructureUpdater jp
	LOGGER a
	apply (Ljava/lang/String;Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/nbt/CompoundTag; a
	patchVersion (Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/nbt/CompoundTag; a
	updateStructure (Ljava/lang/String;Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/nbt/CompoundTag; b
net/minecraft/data/tags/BlockTagsProvider jr
	addTags ()V b
	getName ()Ljava/lang/String; a
	getPath (Lnet/minecraft/resources/ResourceLocation;)Ljava/nio/file/Path; a
net/minecraft/data/tags/EntityTypeTagsProvider js
	addTags ()V b
	getName ()Ljava/lang/String; a
	getPath (Lnet/minecraft/resources/ResourceLocation;)Ljava/nio/file/Path; a
net/minecraft/data/tags/FluidTagsProvider jt
	addTags ()V b
	getName ()Ljava/lang/String; a
	getPath (Lnet/minecraft/resources/ResourceLocation;)Ljava/nio/file/Path; a
net/minecraft/data/tags/ItemTagsProvider ju
	blockTags d
	addTags ()V b
	copy (Lnet/minecraft/tags/Tag$Named;Lnet/minecraft/tags/Tag$Named;)V a
	getName ()Ljava/lang/String; a
	getPath (Lnet/minecraft/resources/ResourceLocation;)Ljava/nio/file/Path; a
net/minecraft/data/tags/TagsProvider jv
	GSON e
	LOGGER d
	builders f
	generator b
	registry c
	addTags ()V b
	getOrCreateRawBuilder (Lnet/minecraft/tags/Tag$Named;)Lnet/minecraft/tags/Tag$Builder; b
	getPath (Lnet/minecraft/resources/ResourceLocation;)Ljava/nio/file/Path; a
	run (Lnet/minecraft/data/HashCache;)V a
	tag (Lnet/minecraft/tags/Tag$Named;)Lnet/minecraft/data/tags/TagsProvider$TagAppender; a
net/minecraft/data/tags/TagsProvider$TagAppender jv$a
	builder a
	registry b
	source c
	add (Ljava/lang/Object;)Lnet/minecraft/data/tags/TagsProvider$TagAppender; a
	add ([Ljava/lang/Object;)Lnet/minecraft/data/tags/TagsProvider$TagAppender; a
	addTag (Lnet/minecraft/tags/Tag$Named;)Lnet/minecraft/data/tags/TagsProvider$TagAppender; a
net/minecraft/gametest/framework/BeforeBatch jx
	batch ()Ljava/lang/String; a
net/minecraft/gametest/framework/GameTest jy
	batch ()Ljava/lang/String; b
	required ()Z d
	rotationSteps ()I c
	setupTicks ()J f
	template ()Ljava/lang/String; e
	timeoutTicks ()I a
net/minecraft/gametest/framework/GameTestAssertException jz
net/minecraft/gametest/framework/GameTestAssertPosException ka
	absolutePos a
	relativePos b
	tick c
	getAbsolutePos ()Lnet/minecraft/core/BlockPos; c
	getMessageToShowAtBlock ()Ljava/lang/String; a
	getRelativePos ()Lnet/minecraft/core/BlockPos; b
net/minecraft/gametest/framework/GameTestBatch kb
	beforeBatchFunction c
	name a
	testFunctions b
	getName ()Ljava/lang/String; a
	getTestFunctions ()Ljava/util/Collection; b
	runBeforeBatchFunction (Lnet/minecraft/server/level/ServerLevel;)V a
net/minecraft/gametest/framework/GameTestBatchRunner kc
	LOGGER a
	allTestInfos f
	batches h
	currentBatchIndex j
	currentBatchTracker i
	firstTestNorthWestCorner b
	level c
	nextTestNorthWestCorner k
	northWestCorners g
	testTicker d
	testsPerRow e
	createStructuresForBatch (Ljava/util/Collection;)V a
	getTestInfos ()Ljava/util/List; a
	runBatch (I)V a
	start ()V b
	testCompleted (Lnet/minecraft/gametest/framework/GameTestInfo;)V a
net/minecraft/gametest/framework/GameTestEvent kd
	assertion b
	expectedDelay a
	create (JLjava/lang/Runnable;)Lnet/minecraft/gametest/framework/GameTestEvent; a
	create (Ljava/lang/Runnable;)Lnet/minecraft/gametest/framework/GameTestEvent; a
net/minecraft/gametest/framework/GameTestGenerator ke
net/minecraft/gametest/framework/GameTestHelper kf
	finalCheckAdded b
	testInfo a
	absolutePos (Lnet/minecraft/core/BlockPos;)Lnet/minecraft/core/BlockPos; e
	absoluteVec (Lnet/minecraft/world/phys/Vec3;)Lnet/minecraft/world/phys/Vec3; a
	assertAtTickTimeContainerContains (JLnet/minecraft/core/BlockPos;Lnet/minecraft/world/item/Item;)V a
	assertAtTickTimeContainerEmpty (JLnet/minecraft/core/BlockPos;)V a
	assertBlock (Lnet/minecraft/core/BlockPos;Ljava/util/function/Predicate;Ljava/lang/String;)V a
	assertBlock (Lnet/minecraft/core/BlockPos;Ljava/util/function/Predicate;Ljava/util/function/Supplier;)V a
	assertBlockNotPresent (Lnet/minecraft/world/level/block/Block;III)V b
	assertBlockNotPresent (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/core/BlockPos;)V b
	assertBlockPresent (Lnet/minecraft/world/level/block/Block;III)V a
	assertBlockPresent (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/core/BlockPos;)V a
	assertBlockProperty (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/properties/Property;Ljava/lang/Comparable;)V a
	assertBlockProperty (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/properties/Property;Ljava/util/function/Predicate;Ljava/lang/String;)V a
	assertBlockState (Lnet/minecraft/core/BlockPos;Ljava/util/function/Predicate;Ljava/util/function/Supplier;)V b
	assertContainerContains (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/item/Item;)V a
	assertContainerEmpty (Lnet/minecraft/core/BlockPos;)V d
	assertEntityData (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/EntityType;Ljava/util/function/Function;Ljava/lang/Object;)V a
	assertEntityNotPresent (Lnet/minecraft/world/entity/EntityType;)V b
	assertEntityNotPresent (Lnet/minecraft/world/entity/EntityType;III)V d
	assertEntityNotPresent (Lnet/minecraft/world/entity/EntityType;Lnet/minecraft/core/BlockPos;)V d
	assertEntityNotTouching (Lnet/minecraft/world/entity/EntityType;DDD)V b
	assertEntityPresent (Lnet/minecraft/world/entity/EntityType;)V a
	assertEntityPresent (Lnet/minecraft/world/entity/EntityType;III)V c
	assertEntityPresent (Lnet/minecraft/world/entity/EntityType;Lnet/minecraft/core/BlockPos;)V c
	assertEntityPresent (Lnet/minecraft/world/entity/EntityType;Lnet/minecraft/core/BlockPos;D)V a
	assertEntityTouching (Lnet/minecraft/world/entity/EntityType;DDD)V a
	assertItemEntityPresent (Lnet/minecraft/world/item/Item;Lnet/minecraft/core/BlockPos;D)V a
	ensureSingleFinalCheck ()V g
	failIf (Ljava/lang/Runnable;)V c
	getBlockType (Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/Block; g
	getBounds ()Lnet/minecraft/world/phys/AABB; h
	getLevel ()Lnet/minecraft/server/level/ServerLevel; a
	killAllEntities ()V b
	makeAboutToDrown (Lnet/minecraft/world/entity/LivingEntity;)Lnet/minecraft/world/entity/LivingEntity; a
	makeMockPlayer ()Lnet/minecraft/world/entity/player/Player; f
	pressButton (III)V a
	pressButton (Lnet/minecraft/core/BlockPos;)V a
	pullLever (III)V b
	pullLever (Lnet/minecraft/core/BlockPos;)V c
	pulseRedstone (Lnet/minecraft/core/BlockPos;J)V a
	relativePos (Lnet/minecraft/core/BlockPos;)Lnet/minecraft/core/BlockPos; f
	runAfterDelay (JLjava/lang/Runnable;)V b
	runAtTickTime (JLjava/lang/Runnable;)V a
	setBlock (IIILnet/minecraft/world/level/block/Block;)V a
	setBlock (IIILnet/minecraft/world/level/block/state/BlockState;)V a
	setBlock (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Block;)V a
	setBlock (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V a
	setDayTime (I)V a
	setNight ()V c
	spawn (Lnet/minecraft/world/entity/EntityType;FFF)Lnet/minecraft/world/entity/Entity; a
	spawn (Lnet/minecraft/world/entity/EntityType;III)Lnet/minecraft/world/entity/Entity; a
	spawn (Lnet/minecraft/world/entity/EntityType;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/entity/Entity; a
	spawn (Lnet/minecraft/world/entity/EntityType;Lnet/minecraft/world/phys/Vec3;)Lnet/minecraft/world/entity/Entity; a
	spawnItem (Lnet/minecraft/world/item/Item;FFF)Lnet/minecraft/world/entity/item/ItemEntity; a
	spawnWithNoFreeWill (Lnet/minecraft/world/entity/EntityType;FFF)Lnet/minecraft/world/entity/Mob; b
	spawnWithNoFreeWill (Lnet/minecraft/world/entity/EntityType;III)Lnet/minecraft/world/entity/Mob; b
	spawnWithNoFreeWill (Lnet/minecraft/world/entity/EntityType;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/entity/Mob; b
	spawnWithNoFreeWill (Lnet/minecraft/world/entity/EntityType;Lnet/minecraft/world/phys/Vec3;)Lnet/minecraft/world/entity/Mob; b
	startSequence ()Lnet/minecraft/gametest/framework/GameTestSequence; e
	succeed ()V d
	succeedIf (Ljava/lang/Runnable;)V a
	succeedOnTickWhen (ILjava/lang/Runnable;)V a
	succeedWhen (Ljava/lang/Runnable;)V b
	succeedWhenBlockPresent (Lnet/minecraft/world/level/block/Block;III)V c
	succeedWhenBlockPresent (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/core/BlockPos;)V c
	succeedWhenEntityData (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/EntityType;Ljava/util/function/Function;Ljava/lang/Object;)V b
	succeedWhenEntityNotPresent (Lnet/minecraft/world/entity/EntityType;III)V f
	succeedWhenEntityNotPresent (Lnet/minecraft/world/entity/EntityType;Lnet/minecraft/core/BlockPos;)V f
	succeedWhenEntityPresent (Lnet/minecraft/world/entity/EntityType;III)V e
	succeedWhenEntityPresent (Lnet/minecraft/world/entity/EntityType;Lnet/minecraft/core/BlockPos;)V e
	useBlock (Lnet/minecraft/core/BlockPos;)V b
	walkTo (Lnet/minecraft/world/entity/Mob;Lnet/minecraft/core/BlockPos;F)Lnet/minecraft/gametest/framework/GameTestSequence; a
net/minecraft/gametest/framework/GameTestInfo kg
	done l
	error n
	level c
	listeners d
	rotation m
	runAtTickTimeMap g
	sequences f
	startTick h
	started j
	structureBlockPos b
	testFunction a
	tickCount i
	timeoutTicks e
	timer k
	addListener (Lnet/minecraft/gametest/framework/GameTestListener;)V a
	createSequence ()Lnet/minecraft/gametest/framework/GameTestSequence; p
	fail (Ljava/lang/Throwable;)V a
	finish ()V x
	getError ()Ljava/lang/Throwable; n
	getLevel ()Lnet/minecraft/server/level/ServerLevel; g
	getRotation ()Lnet/minecraft/world/level/block/Rotation; t
	getRunTime ()J l
	getStructureBlockEntity ()Lnet/minecraft/world/level/block/entity/StructureBlockEntity; w
	getStructureBlockPos ()Lnet/minecraft/core/BlockPos; d
	getStructureBounds ()Lnet/minecraft/world/phys/AABB; f
	getStructureName ()Ljava/lang/String; s
	getStructureSize ()Lnet/minecraft/core/BlockPos; e
	getTestFunction ()Lnet/minecraft/gametest/framework/TestFunction; u
	getTestName ()Ljava/lang/String; c
	getTick ()J o
	hasFailed ()Z i
	hasStarted ()Z j
	hasSucceeded ()Z h
	isDone ()Z k
	isOptional ()Z r
	isRequired ()Z q
	setRunAtTickTime (JLjava/lang/Runnable;)V a
	setStructureBlockPos (Lnet/minecraft/core/BlockPos;)V a
	spawnStructure (Lnet/minecraft/core/BlockPos;I)V a
	startExecution ()V a
	startTest ()V v
	succeed ()V m
	tick ()V b
net/minecraft/gametest/framework/GameTestListener kh
	testFailed (Lnet/minecraft/gametest/framework/GameTestInfo;)V c
	testPassed (Lnet/minecraft/gametest/framework/GameTestInfo;)V b
	testStructureLoaded (Lnet/minecraft/gametest/framework/GameTestInfo;)V a
net/minecraft/gametest/framework/GameTestRegistry ki
	beforeBatchFunctions c
	lastFailedTests d
	testClassNames b
	testFunctions a
	findTestFunction (Ljava/lang/String;)Ljava/util/Optional; d
	forgetFailedTests ()V d
	getAllTestClassNames ()Ljava/util/Collection; b
	getAllTestFunctions ()Ljava/util/Collection; a
	getBeforeBatchFunction (Ljava/lang/String;)Ljava/util/function/Consumer; c
	getLastFailedTests ()Ljava/util/Collection; c
	getTestFunction (Ljava/lang/String;)Lnet/minecraft/gametest/framework/TestFunction; e
	getTestFunctionsForClassName (Ljava/lang/String;)Ljava/util/Collection; a
	isTestClass (Ljava/lang/String;)Z b
	isTestFunctionPartOfClass (Lnet/minecraft/gametest/framework/TestFunction;Ljava/lang/String;)Z a
	register (Ljava/lang/Class;)V a
	register (Ljava/lang/reflect/Method;)V a
	rememberFailedTest (Lnet/minecraft/gametest/framework/TestFunction;)V a
	turnMethodIntoConsumer (Ljava/lang/reflect/Method;)Ljava/util/function/Consumer; d
	turnMethodIntoTestFunction (Ljava/lang/reflect/Method;)Lnet/minecraft/gametest/framework/TestFunction; c
	useTestGeneratorMethod (Ljava/lang/reflect/Method;)Ljava/util/Collection; b
net/minecraft/gametest/framework/GameTestRunner kj
	TEST_REPORTER a
	clearAllTests (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Lnet/minecraft/gametest/framework/GameTestTicker;I)V a
	clearMarkers (Lnet/minecraft/server/level/ServerLevel;)V a
	createBook (Ljava/lang/String;ZLjava/lang/String;)Lnet/minecraft/world/item/ItemStack; a
	groupTestsIntoBatches (Ljava/util/Collection;)Ljava/util/Collection; a
	runTest (Lnet/minecraft/gametest/framework/GameTestInfo;Lnet/minecraft/core/BlockPos;Lnet/minecraft/gametest/framework/GameTestTicker;)V a
	runTestBatches (Ljava/util/Collection;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Rotation;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/gametest/framework/GameTestTicker;I)Ljava/util/Collection; a
	runTests (Ljava/util/Collection;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Rotation;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/gametest/framework/GameTestTicker;I)Ljava/util/Collection; b
	say (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/ChatFormatting;Ljava/lang/String;)V a
	showRedBox (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Ljava/lang/String;)V a
	spawnBeacon (Lnet/minecraft/gametest/framework/GameTestInfo;Lnet/minecraft/world/level/block/Block;)V b
	spawnLectern (Lnet/minecraft/gametest/framework/GameTestInfo;Ljava/lang/String;)V b
	visualizeFailedTest (Lnet/minecraft/gametest/framework/GameTestInfo;)V c
	visualizePassedTest (Lnet/minecraft/gametest/framework/GameTestInfo;)V d
net/minecraft/gametest/framework/GameTestSequence kk
	events b
	lastTick c
	parent a
	executeWithoutFail (Ljava/lang/Runnable;)V c
	thenExecute (Ljava/lang/Runnable;)Lnet/minecraft/gametest/framework/GameTestSequence; b
	thenExecuteAfter (ILjava/lang/Runnable;)Lnet/minecraft/gametest/framework/GameTestSequence; a
	thenFail (Ljava/util/function/Supplier;)V a
	thenIdle (I)Lnet/minecraft/gametest/framework/GameTestSequence; a
	thenSucceed ()V a
	thenTrigger ()Lnet/minecraft/gametest/framework/GameTestSequence$Condition; b
	thenWait (JLjava/lang/Runnable;)Lnet/minecraft/gametest/framework/GameTestSequence; a
	thenWait (Ljava/lang/Runnable;)Lnet/minecraft/gametest/framework/GameTestSequence; a
	tick (J)V c
	tickAndContinue (J)V a
	tickAndFailIfNotComplete (J)V b
net/minecraft/gametest/framework/GameTestSequence$Condition kk$a
	triggerTime b
	assertTriggeredThisTick ()V a
	trigger (J)V a
net/minecraft/gametest/framework/GameTestServer kl
	LOGGER j
	TEST_GAME_RULES m
	TEST_SETTINGS n
	TEST_WORLD_GEN_SETTINGS o
	spawnPos l
	testBatches k
	testTracker p
	getFunctionCompilationLevel ()I h
	getModdedStatus ()Ljava/util/Optional; n
	getOperatorUserPermissionLevel ()I g
	haveTestsStarted ()Z aY
	initServer ()Z d
	isCommandBlockEnabled ()Z l
	isDedicatedServer ()Z j
	isEpollEnabled ()Z k
	isHardcore ()Z f
	isPublished ()Z m
	isSingleplayerOwner (Lcom/mojang/authlib/GameProfile;)Z a
	onServerCrash (Lnet/minecraft/CrashReport;)V a
	onServerExit ()V e
	publishServer (Lnet/minecraft/world/level/GameType;ZI)Z a
	shouldInformAdmins ()Z S_
	shouldRconBroadcast ()Z i
	startTests (Lnet/minecraft/server/level/ServerLevel;)V b
	tickServer (Ljava/util/function/BooleanSupplier;)V a
net/minecraft/gametest/framework/GameTestTicker km
	singleton a
	testInfos b
	add (Lnet/minecraft/gametest/framework/GameTestInfo;)V a
	clear ()V a
	tick ()V b
net/minecraft/gametest/framework/GameTestTimeoutException kn
net/minecraft/gametest/framework/JUnitLikeTestReporter ko
	destination d
	document a
	stopwatch c
	testSuite b
	createTestCase (Lnet/minecraft/gametest/framework/GameTestInfo;Ljava/lang/String;)Lorg/w3c/dom/Element; a
	finish ()V a
	onTestFailed (Lnet/minecraft/gametest/framework/GameTestInfo;)V a
	onTestSuccess (Lnet/minecraft/gametest/framework/GameTestInfo;)V b
	save (Ljava/io/File;)V a
net/minecraft/gametest/framework/LogTestReporter kp
	LOGGER a
	onTestFailed (Lnet/minecraft/gametest/framework/GameTestInfo;)V a
	onTestSuccess (Lnet/minecraft/gametest/framework/GameTestInfo;)V b
net/minecraft/gametest/framework/MultipleTestTracker kq
	listeners b
	tests a
	addFailureListener (Ljava/util/function/Consumer;)V a
	addListener (Lnet/minecraft/gametest/framework/GameTestListener;)V a
	addTestToTrack (Lnet/minecraft/gametest/framework/GameTestInfo;)V a
	getDoneCount ()I c
	getFailedOptional ()Ljava/util/Collection; g
	getFailedOptionalCount ()I b
	getFailedRequired ()Ljava/util/Collection; f
	getFailedRequiredCount ()I a
	getProgressBar ()Ljava/lang/String; j
	getTotalCount ()I h
	hasFailedOptional ()Z e
	hasFailedRequired ()Z d
	isDone ()Z i
net/minecraft/gametest/framework/StructureUtils kr
	testStructuresDir a
	addCommandBlockAndButtonToStartTest (Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Rotation;Lnet/minecraft/server/level/ServerLevel;)V a
	clearBlock (ILnet/minecraft/core/BlockPos;Lnet/minecraft/server/level/ServerLevel;)V a
	clearSpaceForStructure (Lnet/minecraft/world/level/levelgen/structure/BoundingBox;ILnet/minecraft/server/level/ServerLevel;)V a
	createNewEmptyStructureBlock (Ljava/lang/String;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Rotation;Lnet/minecraft/server/level/ServerLevel;)V a
	createStructureBlock (Ljava/lang/String;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Rotation;Lnet/minecraft/server/level/ServerLevel;Z)Lnet/minecraft/world/level/block/entity/StructureBlockEntity; a
	doesStructureContain (Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;Lnet/minecraft/server/level/ServerLevel;)Z a
	findNearestStructureBlock (Lnet/minecraft/core/BlockPos;ILnet/minecraft/server/level/ServerLevel;)Lnet/minecraft/core/BlockPos; b
	findStructureBlockContainingPos (Lnet/minecraft/core/BlockPos;ILnet/minecraft/server/level/ServerLevel;)Ljava/util/Optional; a
	findStructureBlocks (Lnet/minecraft/core/BlockPos;ILnet/minecraft/server/level/ServerLevel;)Ljava/util/Collection; c
	forceLoadChunks (Lnet/minecraft/core/BlockPos;Lnet/minecraft/server/level/ServerLevel;)V a
	getRotationForRotationSteps (I)Lnet/minecraft/world/level/block/Rotation; a
	getRotationStepsForRotation (Lnet/minecraft/world/level/block/Rotation;)I a
	getStructureBoundingBox (Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Rotation;)Lnet/minecraft/world/level/levelgen/structure/BoundingBox; a
	getStructureBoundingBox (Lnet/minecraft/world/level/block/entity/StructureBlockEntity;)Lnet/minecraft/world/level/levelgen/structure/BoundingBox; b
	getStructureBounds (Lnet/minecraft/world/level/block/entity/StructureBlockEntity;)Lnet/minecraft/world/phys/AABB; a
	getStructureTemplate (Ljava/lang/String;Lnet/minecraft/server/level/ServerLevel;)Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplate; a
	spawnStructure (Ljava/lang/String;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Rotation;ILnet/minecraft/server/level/ServerLevel;Z)Lnet/minecraft/world/level/block/entity/StructureBlockEntity; a
	tryLoadStructure (Ljava/nio/file/Path;)Lnet/minecraft/nbt/CompoundTag; a
net/minecraft/gametest/framework/TeamcityTestReporter ks
	ESCAPER b
	LOGGER a
	onTestFailed (Lnet/minecraft/gametest/framework/GameTestInfo;)V a
	onTestSuccess (Lnet/minecraft/gametest/framework/GameTestInfo;)V b
net/minecraft/gametest/framework/TestClassNameArgument kt
	EXAMPLES a
	getTestClassName (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Ljava/lang/String; a
	parse (Lcom/mojang/brigadier/StringReader;)Ljava/lang/String; a
	testClassName ()Lnet/minecraft/gametest/framework/TestClassNameArgument; a
net/minecraft/gametest/framework/TestCommand ku
	clearAllTests (Lnet/minecraft/commands/CommandSourceStack;I)I a
	createNewStructure (Lnet/minecraft/commands/CommandSourceStack;Ljava/lang/String;III)I a
	exportNearestTestStructure (Lnet/minecraft/commands/CommandSourceStack;)I c
	exportTestStructure (Lnet/minecraft/commands/CommandSourceStack;Ljava/lang/String;)I c
	importTestStructure (Lnet/minecraft/commands/CommandSourceStack;Ljava/lang/String;)I d
	register (Lcom/mojang/brigadier/CommandDispatcher;)V a
	runAllNearbyTests (Lnet/minecraft/commands/CommandSourceStack;)I b
	runAllTests (Lnet/minecraft/commands/CommandSourceStack;II)I a
	runAllTestsInClass (Lnet/minecraft/commands/CommandSourceStack;Ljava/lang/String;II)I a
	runLastFailedTests (Lnet/minecraft/commands/CommandSourceStack;ZII)I a
	runNearbyTest (Lnet/minecraft/commands/CommandSourceStack;)I a
	runTest (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/gametest/framework/TestFunction;I)I a
	runTest (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Lnet/minecraft/gametest/framework/MultipleTestTracker;)V a
	runTestPreparation (Lnet/minecraft/gametest/framework/TestFunction;Lnet/minecraft/server/level/ServerLevel;)V a
	runTests (Lnet/minecraft/commands/CommandSourceStack;Ljava/util/Collection;II)V a
	say (Lnet/minecraft/commands/CommandSourceStack;Ljava/lang/String;)V b
	say (Lnet/minecraft/server/level/ServerLevel;Ljava/lang/String;Lnet/minecraft/ChatFormatting;)V a
	showPos (Lnet/minecraft/commands/CommandSourceStack;Ljava/lang/String;)I a
	showTestSummaryIfAllDone (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/gametest/framework/MultipleTestTracker;)V b
net/minecraft/gametest/framework/TestCommand$TestSummaryDisplayer ku$a
	level a
	tracker b
	testFailed (Lnet/minecraft/gametest/framework/GameTestInfo;)V c
	testPassed (Lnet/minecraft/gametest/framework/GameTestInfo;)V b
	testStructureLoaded (Lnet/minecraft/gametest/framework/GameTestInfo;)V a
net/minecraft/gametest/framework/TestFunction kv
	batchName a
	function e
	maxTicks f
	required d
	rotation h
	setupTicks g
	structureName c
	testName b
	getBatchName ()Ljava/lang/String; e
	getMaxTicks ()I c
	getRotation ()Lnet/minecraft/world/level/block/Rotation; g
	getSetupTicks ()J f
	getStructureName ()Ljava/lang/String; b
	getTestName ()Ljava/lang/String; a
	isRequired ()Z d
	run (Lnet/minecraft/gametest/framework/GameTestHelper;)V a
net/minecraft/gametest/framework/TestFunctionArgument kw
	EXAMPLES a
	getTestFunction (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lnet/minecraft/gametest/framework/TestFunction; a
	parse (Lcom/mojang/brigadier/StringReader;)Lnet/minecraft/gametest/framework/TestFunction; a
	testFunctionArgument ()Lnet/minecraft/gametest/framework/TestFunctionArgument; a
net/minecraft/gametest/framework/TestReporter kx
	finish ()V a
	onTestFailed (Lnet/minecraft/gametest/framework/GameTestInfo;)V a
	onTestSuccess (Lnet/minecraft/gametest/framework/GameTestInfo;)V b
net/minecraft/locale/Language kz
	GSON b
	LOGGER a
	UNSUPPORTED_FORMAT_PATTERN c
	instance d
	getInstance ()Lnet/minecraft/locale/Language; a
	getOrDefault (Ljava/lang/String;)Ljava/lang/String; a
	has (Ljava/lang/String;)Z b
	inject (Lnet/minecraft/locale/Language;)V a
	loadDefault ()Lnet/minecraft/locale/Language; c
	loadFromJson (Ljava/io/InputStream;Ljava/util/function/BiConsumer;)V a
	reorder (Ljava/lang/String;Z)Ljava/lang/String; a
	requiresReordering ()Z b
net/minecraft/nbt/ByteArrayTag lb
	TYPE a
	data b
	add (ILnet/minecraft/nbt/ByteTag;)V b
	add (ILnet/minecraft/nbt/Tag;)V c
	addTag (ILnet/minecraft/nbt/Tag;)Z b
	copy ()Lnet/minecraft/nbt/Tag; c
	get (I)Lnet/minecraft/nbt/ByteTag; a
	getAsByteArray ()[B d
	getElementType ()B d_
	getId ()B a
	getPrettyDisplay (Ljava/lang/String;I)Lnet/minecraft/network/chat/Component; a
	getType ()Lnet/minecraft/nbt/TagType; b
	remove (I)Lnet/minecraft/nbt/ByteTag; b
	remove (I)Lnet/minecraft/nbt/Tag; c
	set (ILnet/minecraft/nbt/ByteTag;)Lnet/minecraft/nbt/ByteTag; a
	set (ILnet/minecraft/nbt/Tag;)Lnet/minecraft/nbt/Tag; d
	setTag (ILnet/minecraft/nbt/Tag;)Z a
	toArray (Ljava/util/List;)[B a
	write (Ljava/io/DataOutput;)V a
net/minecraft/nbt/ByteTag lc
	ONE c
	TYPE a
	ZERO b
	data h
	copy ()Lnet/minecraft/nbt/ByteTag; d
	copy ()Lnet/minecraft/nbt/Tag; c
	getAsByte ()B h
	getAsDouble ()D i
	getAsFloat ()F j
	getAsInt ()I f
	getAsLong ()J e
	getAsNumber ()Ljava/lang/Number; k
	getAsShort ()S g
	getId ()B a
	getPrettyDisplay (Ljava/lang/String;I)Lnet/minecraft/network/chat/Component; a
	getType ()Lnet/minecraft/nbt/TagType; b
	valueOf (B)Lnet/minecraft/nbt/ByteTag; a
	valueOf (Z)Lnet/minecraft/nbt/ByteTag; a
	write (Ljava/io/DataOutput;)V a
net/minecraft/nbt/ByteTag$Cache lc$a
	cache a
net/minecraft/nbt/CollectionTag ld
	add (ILnet/minecraft/nbt/Tag;)V c
	addTag (ILnet/minecraft/nbt/Tag;)Z b
	getElementType ()B d_
	remove (I)Lnet/minecraft/nbt/Tag; c
	set (ILnet/minecraft/nbt/Tag;)Lnet/minecraft/nbt/Tag; d
	setTag (ILnet/minecraft/nbt/Tag;)Z a
net/minecraft/nbt/CompoundTag le
	CODEC a
	LOGGER c
	SIMPLE_VALUE h
	TYPE b
	tags i
	contains (Ljava/lang/String;)Z e
	contains (Ljava/lang/String;I)Z c
	copy ()Lnet/minecraft/nbt/CompoundTag; g
	copy ()Lnet/minecraft/nbt/Tag; c
	createReport (Ljava/lang/String;Lnet/minecraft/nbt/TagType;Ljava/lang/ClassCastException;)Lnet/minecraft/CrashReport; a
	entries ()Ljava/util/Map; h
	get (Ljava/lang/String;)Lnet/minecraft/nbt/Tag; c
	getAllKeys ()Ljava/util/Set; d
	getBoolean (Ljava/lang/String;)Z q
	getByte (Ljava/lang/String;)B f
	getByteArray (Ljava/lang/String;)[B m
	getCompound (Ljava/lang/String;)Lnet/minecraft/nbt/CompoundTag; p
	getDouble (Ljava/lang/String;)D k
	getFloat (Ljava/lang/String;)F j
	getId ()B a
	getInt (Ljava/lang/String;)I h
	getIntArray (Ljava/lang/String;)[I n
	getList (Ljava/lang/String;I)Lnet/minecraft/nbt/ListTag; d
	getLong (Ljava/lang/String;)J i
	getLongArray (Ljava/lang/String;)[J o
	getPrettyDisplay (Ljava/lang/String;I)Lnet/minecraft/network/chat/Component; a
	getShort (Ljava/lang/String;)S g
	getString (Ljava/lang/String;)Ljava/lang/String; l
	getTagType (Ljava/lang/String;)B d
	getType ()Lnet/minecraft/nbt/TagType; b
	getUUID (Ljava/lang/String;)Ljava/util/UUID; a
	handleEscape (Ljava/lang/String;)Ljava/lang/String; s
	handleEscapePretty (Ljava/lang/String;)Lnet/minecraft/network/chat/Component; t
	hasUUID (Ljava/lang/String;)Z b
	merge (Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/nbt/CompoundTag; a
	put (Ljava/lang/String;Lnet/minecraft/nbt/Tag;)Lnet/minecraft/nbt/Tag; a
	putBoolean (Ljava/lang/String;Z)V a
	putByte (Ljava/lang/String;B)V a
	putByteArray (Ljava/lang/String;Ljava/util/List;)V a
	putByteArray (Ljava/lang/String;[B)V a
	putDouble (Ljava/lang/String;D)V a
	putFloat (Ljava/lang/String;F)V a
	putInt (Ljava/lang/String;I)V b
	putIntArray (Ljava/lang/String;Ljava/util/List;)V b
	putIntArray (Ljava/lang/String;[I)V a
	putLong (Ljava/lang/String;J)V a
	putLongArray (Ljava/lang/String;Ljava/util/List;)V c
	putLongArray (Ljava/lang/String;[J)V a
	putShort (Ljava/lang/String;S)V a
	putString (Ljava/lang/String;Ljava/lang/String;)V a
	putUUID (Ljava/lang/String;Ljava/util/UUID;)V a
	readNamedTagData (Lnet/minecraft/nbt/TagType;Ljava/lang/String;Ljava/io/DataInput;ILnet/minecraft/nbt/NbtAccounter;)Lnet/minecraft/nbt/Tag; b
	readNamedTagName (Ljava/io/DataInput;Lnet/minecraft/nbt/NbtAccounter;)Ljava/lang/String; d
	readNamedTagType (Ljava/io/DataInput;Lnet/minecraft/nbt/NbtAccounter;)B c
	remove (Ljava/lang/String;)V r
	size ()I e
	stripEmptyChildren ()V e_
	write (Ljava/io/DataOutput;)V a
	writeNamedTag (Ljava/lang/String;Lnet/minecraft/nbt/Tag;Ljava/io/DataOutput;)V a
net/minecraft/nbt/DoubleTag lf
	TYPE b
	ZERO a
	data c
	copy ()Lnet/minecraft/nbt/DoubleTag; d
	copy ()Lnet/minecraft/nbt/Tag; c
	getAsByte ()B h
	getAsDouble ()D i
	getAsFloat ()F j
	getAsInt ()I f
	getAsLong ()J e
	getAsNumber ()Ljava/lang/Number; k
	getAsShort ()S g
	getId ()B a
	getPrettyDisplay (Ljava/lang/String;I)Lnet/minecraft/network/chat/Component; a
	getType ()Lnet/minecraft/nbt/TagType; b
	valueOf (D)Lnet/minecraft/nbt/DoubleTag; a
	write (Ljava/io/DataOutput;)V a
net/minecraft/nbt/EndTag lg
	INSTANCE b
	TYPE a
	copy ()Lnet/minecraft/nbt/EndTag; d
	copy ()Lnet/minecraft/nbt/Tag; c
	getId ()B a
	getPrettyDisplay (Ljava/lang/String;I)Lnet/minecraft/network/chat/Component; a
	getType ()Lnet/minecraft/nbt/TagType; b
	write (Ljava/io/DataOutput;)V a
net/minecraft/nbt/FloatTag lh
	TYPE b
	ZERO a
	data c
	copy ()Lnet/minecraft/nbt/FloatTag; d
	copy ()Lnet/minecraft/nbt/Tag; c
	getAsByte ()B h
	getAsDouble ()D i
	getAsFloat ()F j
	getAsInt ()I f
	getAsLong ()J e
	getAsNumber ()Ljava/lang/Number; k
	getAsShort ()S g
	getId ()B a
	getPrettyDisplay (Ljava/lang/String;I)Lnet/minecraft/network/chat/Component; a
	getType ()Lnet/minecraft/nbt/TagType; b
	valueOf (F)Lnet/minecraft/nbt/FloatTag; a
	write (Ljava/io/DataOutput;)V a
net/minecraft/nbt/IntArrayTag li
	TYPE a
	data b
	add (ILnet/minecraft/nbt/IntTag;)V b
	add (ILnet/minecraft/nbt/Tag;)V c
	addTag (ILnet/minecraft/nbt/Tag;)Z b
	copy ()Lnet/minecraft/nbt/IntArrayTag; d
	copy ()Lnet/minecraft/nbt/Tag; c
	get (I)Lnet/minecraft/nbt/IntTag; a
	getAsIntArray ()[I g
	getElementType ()B d_
	getId ()B a
	getPrettyDisplay (Ljava/lang/String;I)Lnet/minecraft/network/chat/Component; a
	getType ()Lnet/minecraft/nbt/TagType; b
	remove (I)Lnet/minecraft/nbt/IntTag; b
	remove (I)Lnet/minecraft/nbt/Tag; c
	set (ILnet/minecraft/nbt/IntTag;)Lnet/minecraft/nbt/IntTag; a
	set (ILnet/minecraft/nbt/Tag;)Lnet/minecraft/nbt/Tag; d
	setTag (ILnet/minecraft/nbt/Tag;)Z a
	toArray (Ljava/util/List;)[I a
	write (Ljava/io/DataOutput;)V a
net/minecraft/nbt/IntTag lj
	TYPE a
	data b
	copy ()Lnet/minecraft/nbt/IntTag; d
	copy ()Lnet/minecraft/nbt/Tag; c
	getAsByte ()B h
	getAsDouble ()D i
	getAsFloat ()F j
	getAsInt ()I f
	getAsLong ()J e
	getAsNumber ()Ljava/lang/Number; k
	getAsShort ()S g
	getId ()B a
	getPrettyDisplay (Ljava/lang/String;I)Lnet/minecraft/network/chat/Component; a
	getType ()Lnet/minecraft/nbt/TagType; b
	valueOf (I)Lnet/minecraft/nbt/IntTag; a
	write (Ljava/io/DataOutput;)V a
net/minecraft/nbt/IntTag$Cache lj$a
	cache a
net/minecraft/nbt/ListTag lk
	INLINE_ELEMENT_TYPES b
	TYPE a
	list c
	type h
	add (ILnet/minecraft/nbt/Tag;)V c
	addTag (ILnet/minecraft/nbt/Tag;)Z b
	copy ()Lnet/minecraft/nbt/ListTag; d
	copy ()Lnet/minecraft/nbt/Tag; c
	get (I)Lnet/minecraft/nbt/Tag; k
	getCompound (I)Lnet/minecraft/nbt/CompoundTag; a
	getDouble (I)D h
	getElementType ()B d_
	getFloat (I)F i
	getId ()B a
	getInt (I)I e
	getIntArray (I)[I f
	getList (I)Lnet/minecraft/nbt/ListTag; b
	getLongArray (I)[J g
	getPrettyDisplay (Ljava/lang/String;I)Lnet/minecraft/network/chat/Component; a
	getShort (I)S d
	getString (I)Ljava/lang/String; j
	getType ()Lnet/minecraft/nbt/TagType; b
	remove (I)Lnet/minecraft/nbt/Tag; c
	set (ILnet/minecraft/nbt/Tag;)Lnet/minecraft/nbt/Tag; d
	setTag (ILnet/minecraft/nbt/Tag;)Z a
	stripEmptyChildren ()V e_
	updateType (Lnet/minecraft/nbt/Tag;)Z a
	updateTypeAfterRemove ()V g
	write (Ljava/io/DataOutput;)V a
net/minecraft/nbt/LongArrayTag ll
	TYPE a
	data b
	add (ILnet/minecraft/nbt/LongTag;)V b
	add (ILnet/minecraft/nbt/Tag;)V c
	addTag (ILnet/minecraft/nbt/Tag;)Z b
	copy ()Lnet/minecraft/nbt/LongArrayTag; d
	copy ()Lnet/minecraft/nbt/Tag; c
	get (I)Lnet/minecraft/nbt/LongTag; a
	getAsLongArray ()[J g
	getElementType ()B d_
	getId ()B a
	getPrettyDisplay (Ljava/lang/String;I)Lnet/minecraft/network/chat/Component; a
	getType ()Lnet/minecraft/nbt/TagType; b
	remove (I)Lnet/minecraft/nbt/LongTag; b
	remove (I)Lnet/minecraft/nbt/Tag; c
	set (ILnet/minecraft/nbt/LongTag;)Lnet/minecraft/nbt/LongTag; a
	set (ILnet/minecraft/nbt/Tag;)Lnet/minecraft/nbt/Tag; d
	setTag (ILnet/minecraft/nbt/Tag;)Z a
	toArray (Ljava/util/List;)[J a
	write (Ljava/io/DataOutput;)V a
net/minecraft/nbt/LongTag lm
	TYPE a
	data b
	copy ()Lnet/minecraft/nbt/LongTag; d
	copy ()Lnet/minecraft/nbt/Tag; c
	getAsByte ()B h
	getAsDouble ()D i
	getAsFloat ()F j
	getAsInt ()I f
	getAsLong ()J e
	getAsNumber ()Ljava/lang/Number; k
	getAsShort ()S g
	getId ()B a
	getPrettyDisplay (Ljava/lang/String;I)Lnet/minecraft/network/chat/Component; a
	getType ()Lnet/minecraft/nbt/TagType; b
	valueOf (J)Lnet/minecraft/nbt/LongTag; a
	write (Ljava/io/DataOutput;)V a
net/minecraft/nbt/LongTag$Cache lm$a
	cache a
net/minecraft/nbt/NbtAccounter ln
	UNLIMITED a
	quota b
	usage c
	accountBits (J)V a
net/minecraft/nbt/NbtIo lo
	read (Ljava/io/DataInput;Lnet/minecraft/nbt/NbtAccounter;)Lnet/minecraft/nbt/CompoundTag; a
	read (Ljava/io/DataInputStream;)Lnet/minecraft/nbt/CompoundTag; a
	read (Ljava/io/File;)Lnet/minecraft/nbt/CompoundTag; a
	readCompressed (Ljava/io/InputStream;)Lnet/minecraft/nbt/CompoundTag; a
	readUnnamedTag (Ljava/io/DataInput;ILnet/minecraft/nbt/NbtAccounter;)Lnet/minecraft/nbt/Tag; a
	write (Lnet/minecraft/nbt/CompoundTag;Ljava/io/DataOutput;)V a
	write (Lnet/minecraft/nbt/CompoundTag;Ljava/io/File;)V a
	writeCompressed (Lnet/minecraft/nbt/CompoundTag;Ljava/io/OutputStream;)V a
	writeUnnamedTag (Lnet/minecraft/nbt/Tag;Ljava/io/DataOutput;)V a
net/minecraft/nbt/NbtOps lp
	INSTANCE a
	convertTo (Lcom/mojang/serialization/DynamicOps;Lnet/minecraft/nbt/Tag;)Ljava/lang/Object; a
	createBoolean (Z)Lnet/minecraft/nbt/Tag; a
	createByte (B)Lnet/minecraft/nbt/Tag; a
	createByteList (Ljava/nio/ByteBuffer;)Lnet/minecraft/nbt/Tag; a
	createDouble (D)Lnet/minecraft/nbt/Tag; a
	createFloat (F)Lnet/minecraft/nbt/Tag; a
	createGenericList (BB)Lnet/minecraft/nbt/CollectionTag; a
	createInt (I)Lnet/minecraft/nbt/Tag; a
	createIntList (Ljava/util/stream/IntStream;)Lnet/minecraft/nbt/Tag; a
	createList (Ljava/util/stream/Stream;)Lnet/minecraft/nbt/Tag; b
	createLong (J)Lnet/minecraft/nbt/Tag; a
	createLongList (Ljava/util/stream/LongStream;)Lnet/minecraft/nbt/Tag; a
	createMap (Ljava/util/stream/Stream;)Lnet/minecraft/nbt/Tag; a
	createNumeric (Ljava/lang/Number;)Lnet/minecraft/nbt/Tag; a
	createShort (S)Lnet/minecraft/nbt/Tag; a
	createString (Ljava/lang/String;)Lnet/minecraft/nbt/Tag; a
	empty ()Lnet/minecraft/nbt/Tag; a
	fillMany (Lnet/minecraft/nbt/CollectionTag;Lnet/minecraft/nbt/Tag;Ljava/util/List;)V a
	fillOne (Lnet/minecraft/nbt/CollectionTag;Lnet/minecraft/nbt/Tag;Lnet/minecraft/nbt/Tag;)V a
	getByteBuffer (Lnet/minecraft/nbt/Tag;)Lcom/mojang/serialization/DataResult; h
	getIntStream (Lnet/minecraft/nbt/Tag;)Lcom/mojang/serialization/DataResult; i
	getList (Lnet/minecraft/nbt/Tag;)Lcom/mojang/serialization/DataResult; g
	getLongStream (Lnet/minecraft/nbt/Tag;)Lcom/mojang/serialization/DataResult; j
	getMap (Lnet/minecraft/nbt/Tag;)Lcom/mojang/serialization/DataResult; e
	getMapEntries (Lnet/minecraft/nbt/Tag;)Lcom/mojang/serialization/DataResult; d
	getMapValues (Lnet/minecraft/nbt/Tag;)Lcom/mojang/serialization/DataResult; c
	getNumberValue (Lnet/minecraft/nbt/Tag;)Lcom/mojang/serialization/DataResult; a
	getStream (Lnet/minecraft/nbt/Tag;)Lcom/mojang/serialization/DataResult; f
	getStringValue (Lnet/minecraft/nbt/Tag;)Lcom/mojang/serialization/DataResult; b
	mergeToList (Lnet/minecraft/nbt/Tag;Ljava/util/List;)Lcom/mojang/serialization/DataResult; a
	mergeToList (Lnet/minecraft/nbt/Tag;Lnet/minecraft/nbt/Tag;)Lcom/mojang/serialization/DataResult; a
	mergeToMap (Lnet/minecraft/nbt/Tag;Lcom/mojang/serialization/MapLike;)Lcom/mojang/serialization/DataResult; a
	mergeToMap (Lnet/minecraft/nbt/Tag;Lnet/minecraft/nbt/Tag;Lnet/minecraft/nbt/Tag;)Lcom/mojang/serialization/DataResult; a
	remove (Lnet/minecraft/nbt/Tag;Ljava/lang/String;)Lnet/minecraft/nbt/Tag; a
	typesMatch (BBB)Z a
net/minecraft/nbt/NbtOps$NbtRecordBuilder lp$a
	append (Ljava/lang/String;Lnet/minecraft/nbt/Tag;Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/nbt/CompoundTag; a
	build (Lnet/minecraft/nbt/CompoundTag;Lnet/minecraft/nbt/Tag;)Lcom/mojang/serialization/DataResult; a
	initBuilder ()Lnet/minecraft/nbt/CompoundTag; a
net/minecraft/nbt/NbtUtils lq
	LOGGER a
	compareNbt (Lnet/minecraft/nbt/Tag;Lnet/minecraft/nbt/Tag;Z)Z a
	createUUID (Ljava/util/UUID;)Lnet/minecraft/nbt/IntArrayTag; a
	getName (Lnet/minecraft/world/level/block/state/properties/Property;Ljava/lang/Comparable;)Ljava/lang/String; a
	indent (ILjava/lang/StringBuilder;)Ljava/lang/StringBuilder; a
	loadUUID (Lnet/minecraft/nbt/Tag;)Ljava/util/UUID; a
	prettyPrint (Ljava/lang/StringBuilder;Lnet/minecraft/nbt/Tag;IZ)Ljava/lang/StringBuilder; a
	prettyPrint (Lnet/minecraft/nbt/Tag;)Ljava/lang/String; b
	prettyPrint (Lnet/minecraft/nbt/Tag;Z)Ljava/lang/String; a
	readBlockPos (Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/core/BlockPos; b
	readBlockState (Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/world/level/block/state/BlockState; c
	readGameProfile (Lnet/minecraft/nbt/CompoundTag;)Lcom/mojang/authlib/GameProfile; a
	setValueHelper (Lnet/minecraft/world/level/block/state/StateHolder;Lnet/minecraft/world/level/block/state/properties/Property;Ljava/lang/String;Lnet/minecraft/nbt/CompoundTag;Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/world/level/block/state/StateHolder; a
	update (Lcom/mojang/datafixers/DataFixer;Lnet/minecraft/util/datafix/DataFixTypes;Lnet/minecraft/nbt/CompoundTag;I)Lnet/minecraft/nbt/CompoundTag; a
	update (Lcom/mojang/datafixers/DataFixer;Lnet/minecraft/util/datafix/DataFixTypes;Lnet/minecraft/nbt/CompoundTag;II)Lnet/minecraft/nbt/CompoundTag; a
	writeBlockPos (Lnet/minecraft/core/BlockPos;)Lnet/minecraft/nbt/CompoundTag; a
	writeBlockState (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/nbt/CompoundTag; a
	writeFluidState (Lnet/minecraft/world/level/material/FluidState;)Lnet/minecraft/nbt/CompoundTag; a
	writeGameProfile (Lnet/minecraft/nbt/CompoundTag;Lcom/mojang/authlib/GameProfile;)Lnet/minecraft/nbt/CompoundTag; a
net/minecraft/nbt/NumericTag lr
	getAsByte ()B h
	getAsDouble ()D i
	getAsFloat ()F j
	getAsInt ()I f
	getAsLong ()J e
	getAsNumber ()Ljava/lang/Number; k
	getAsShort ()S g
net/minecraft/nbt/ShortTag ls
	TYPE a
	data b
	copy ()Lnet/minecraft/nbt/ShortTag; d
	copy ()Lnet/minecraft/nbt/Tag; c
	getAsByte ()B h
	getAsDouble ()D i
	getAsFloat ()F j
	getAsInt ()I f
	getAsLong ()J e
	getAsNumber ()Ljava/lang/Number; k
	getAsShort ()S g
	getId ()B a
	getPrettyDisplay (Ljava/lang/String;I)Lnet/minecraft/network/chat/Component; a
	getType ()Lnet/minecraft/nbt/TagType; b
	valueOf (S)Lnet/minecraft/nbt/ShortTag; a
	write (Ljava/io/DataOutput;)V a
net/minecraft/nbt/ShortTag$Cache ls$a
	cache a
net/minecraft/nbt/StringTag lt
	EMPTY b
	TYPE a
	data c
	copy ()Lnet/minecraft/nbt/StringTag; d
	copy ()Lnet/minecraft/nbt/Tag; c
	getAsString ()Ljava/lang/String; f_
	getId ()B a
	getPrettyDisplay (Ljava/lang/String;I)Lnet/minecraft/network/chat/Component; a
	getType ()Lnet/minecraft/nbt/TagType; b
	quoteAndEscape (Ljava/lang/String;)Ljava/lang/String; b
	valueOf (Ljava/lang/String;)Lnet/minecraft/nbt/StringTag; a
	write (Ljava/io/DataOutput;)V a
net/minecraft/nbt/Tag lu
	SYNTAX_HIGHLIGHTING_KEY d
	SYNTAX_HIGHLIGHTING_NUMBER f
	SYNTAX_HIGHLIGHTING_NUMBER_TYPE g
	SYNTAX_HIGHLIGHTING_STRING e
	copy ()Lnet/minecraft/nbt/Tag; c
	getAsString ()Ljava/lang/String; f_
	getId ()B a
	getPrettyDisplay ()Lnet/minecraft/network/chat/Component; l
	getPrettyDisplay (Ljava/lang/String;I)Lnet/minecraft/network/chat/Component; a
	getType ()Lnet/minecraft/nbt/TagType; b
	stripEmptyChildren ()V e_
	write (Ljava/io/DataOutput;)V a
net/minecraft/nbt/TagParser lv
	BYTE_PATTERN j
	DOUBLE_PATTERN h
	DOUBLE_PATTERN_NOSUFFIX g
	ERROR_EXPECTED_KEY b
	ERROR_EXPECTED_VALUE c
	ERROR_INSERT_MIXED_ARRAY e
	ERROR_INSERT_MIXED_LIST d
	ERROR_INVALID_ARRAY f
	ERROR_TRAILING_DATA a
	FLOAT_PATTERN i
	INT_PATTERN m
	LONG_PATTERN k
	SHORT_PATTERN l
	reader n
	expect (C)V a
	hasElementSeparator ()Z i
	parseTag (Ljava/lang/String;)Lnet/minecraft/nbt/CompoundTag; a
	readArray (Lnet/minecraft/nbt/TagType;Lnet/minecraft/nbt/TagType;)Ljava/util/List; a
	readArrayTag ()Lnet/minecraft/nbt/Tag; h
	readKey ()Ljava/lang/String; b
	readList ()Lnet/minecraft/nbt/Tag; e
	readListTag ()Lnet/minecraft/nbt/Tag; g
	readSingleStruct ()Lnet/minecraft/nbt/CompoundTag; a
	readStruct ()Lnet/minecraft/nbt/CompoundTag; f
	readTypedValue ()Lnet/minecraft/nbt/Tag; c
	readValue ()Lnet/minecraft/nbt/Tag; d
	type (Ljava/lang/String;)Lnet/minecraft/nbt/Tag; b
net/minecraft/nbt/TagType lw
	createInvalid (I)Lnet/minecraft/nbt/TagType; a
	getName ()Ljava/lang/String; a
	getPrettyName ()Ljava/lang/String; b
	isValue ()Z c
	load (Ljava/io/DataInput;ILnet/minecraft/nbt/NbtAccounter;)Lnet/minecraft/nbt/Tag; b
net/minecraft/nbt/TagTypes lx
	TYPES a
	getType (I)Lnet/minecraft/nbt/TagType; a
net/minecraft/network/CipherBase lz
	cipher a
	heapIn b
	heapOut c
	bufToByte (Lio/netty/buffer/ByteBuf;)[B a
	decipher (Lio/netty/channel/ChannelHandlerContext;Lio/netty/buffer/ByteBuf;)Lio/netty/buffer/ByteBuf; a
	encipher (Lio/netty/buffer/ByteBuf;Lio/netty/buffer/ByteBuf;)V a
net/minecraft/network/CipherDecoder ma
	cipher a
	decode (Lio/netty/channel/ChannelHandlerContext;Lio/netty/buffer/ByteBuf;Ljava/util/List;)V a
net/minecraft/network/CipherEncoder mb
	cipher a
	encode (Lio/netty/channel/ChannelHandlerContext;Lio/netty/buffer/ByteBuf;Lio/netty/buffer/ByteBuf;)V a
net/minecraft/network/CompressionDecoder mc
	inflater a
	threshold b
	getThreshold ()I a
	setThreshold (I)V a
net/minecraft/network/CompressionEncoder md
	deflater b
	encodeBuf a
	threshold c
	encode (Lio/netty/channel/ChannelHandlerContext;Lio/netty/buffer/ByteBuf;Lio/netty/buffer/ByteBuf;)V a
	getThreshold ()I a
	setThreshold (I)V a
net/minecraft/network/Connection me
	ATTRIBUTE_PROTOCOL c
	LOCAL_WORKER_GROUP f
	LOGGER g
	NETWORK_EPOLL_WORKER_GROUP e
	NETWORK_WORKER_GROUP d
	PACKET_MARKER b
	ROOT_MARKER a
	address k
	averageReceivedPackets r
	averageSentPackets s
	channel j
	disconnectedReason m
	disconnectionHandled o
	encrypted n
	handlingFault u
	packetListener l
	queue i
	receivedPackets p
	receiving h
	sentPackets q
	tickCount t
	channelRead0 (Lio/netty/channel/ChannelHandlerContext;Lnet/minecraft/network/protocol/Packet;)V a
	connectToLocalServer (Ljava/net/SocketAddress;)Lnet/minecraft/network/Connection; a
	connectToServer (Ljava/net/InetAddress;IZ)Lnet/minecraft/network/Connection; a
	disconnect (Lnet/minecraft/network/chat/Component;)V a
	flushQueue ()V o
	genericsFtw (Lnet/minecraft/network/protocol/Packet;Lnet/minecraft/network/PacketListener;)V a
	getAverageReceivedPackets ()F m
	getAverageSentPackets ()F n
	getDisconnectedReason ()Lnet/minecraft/network/chat/Component; j
	getPacketListener ()Lnet/minecraft/network/PacketListener; i
	getReceiving ()Lnet/minecraft/network/protocol/PacketFlow; d
	getRemoteAddress ()Ljava/net/SocketAddress; b
	getSending ()Lnet/minecraft/network/protocol/PacketFlow; e
	handleDisconnection ()V l
	isConnected ()Z g
	isConnecting ()Z h
	isEncrypted ()Z f
	isMemoryConnection ()Z c
	send (Lnet/minecraft/network/protocol/Packet;)V a
	send (Lnet/minecraft/network/protocol/Packet;Lio/netty/util/concurrent/GenericFutureListener;)V a
	sendPacket (Lnet/minecraft/network/protocol/Packet;Lio/netty/util/concurrent/GenericFutureListener;)V b
	setEncryptionKey (Ljavax/crypto/SecretKey;)V a
	setListener (Lnet/minecraft/network/PacketListener;)V a
	setProtocol (Lnet/minecraft/network/ConnectionProtocol;)V a
	setReadOnly ()V k
	setupCompression (I)V a
	tick ()V a
net/minecraft/network/Connection$PacketHolder me$a
	listener b
	packet a
net/minecraft/network/ConnectionProtocol mf
	$VALUES i
	HANDSHAKING a
	LOGIN d
	LOOKUP e
	PLAY b
	PROTOCOL_BY_PACKET f
	STATUS c
	flows h
	id g
	createPacket (Lnet/minecraft/network/protocol/PacketFlow;I)Lnet/minecraft/network/protocol/Packet; a
	getById (I)Lnet/minecraft/network/ConnectionProtocol; a
	getId ()I a
	getPacketId (Lnet/minecraft/network/protocol/PacketFlow;Lnet/minecraft/network/protocol/Packet;)Ljava/lang/Integer; a
	getProtocolForPacket (Lnet/minecraft/network/protocol/Packet;)Lnet/minecraft/network/ConnectionProtocol; a
	protocol ()Lnet/minecraft/network/ConnectionProtocol$ProtocolBuilder; b
net/minecraft/network/ConnectionProtocol$PacketSet mf$a
	classToId a
	idToConstructor b
	addPacket (Ljava/lang/Class;Ljava/util/function/Supplier;)Lnet/minecraft/network/ConnectionProtocol$PacketSet; a
	createPacket (I)Lnet/minecraft/network/protocol/Packet; a
	getAllPackets ()Ljava/lang/Iterable; a
	getId (Ljava/lang/Class;)Ljava/lang/Integer; a
net/minecraft/network/ConnectionProtocol$ProtocolBuilder mf$b
	flows a
	addFlow (Lnet/minecraft/network/protocol/PacketFlow;Lnet/minecraft/network/ConnectionProtocol$PacketSet;)Lnet/minecraft/network/ConnectionProtocol$ProtocolBuilder; a
net/minecraft/network/FriendlyByteBuf mg
	source a
	accessByteBufWithCorrectSize ()[B d
	getVarIntSize (I)I a
	getVarLongSize (J)I a
	readBlockHitResult ()Lnet/minecraft/world/phys/BlockHitResult; q
	readBlockPos ()Lnet/minecraft/core/BlockPos; e
	readByteArray ()[B a
	readByteArray (I)[B b
	readChunkPos ()Lnet/minecraft/world/level/ChunkPos; f
	readComponent ()Lnet/minecraft/network/chat/Component; h
	readDate ()Ljava/util/Date; p
	readEnum (Ljava/lang/Class;)Ljava/lang/Enum; a
	readItem ()Lnet/minecraft/world/item/ItemStack; m
	readLongArray ()[J c
	readLongArray ([J)[J b
	readLongArray ([JI)[J a
	readNbt ()Lnet/minecraft/nbt/CompoundTag; l
	readResourceLocation ()Lnet/minecraft/resources/ResourceLocation; o
	readSectionPos ()Lnet/minecraft/core/SectionPos; g
	readUUID ()Ljava/util/UUID; k
	readUtf ()Ljava/lang/String; n
	readUtf (I)Ljava/lang/String; e
	readVarInt ()I i
	readVarIntArray ()[I b
	readVarIntArray (I)[I c
	readVarLong ()J j
	readWithCodec (Lcom/mojang/serialization/Codec;)Ljava/lang/Object; a
	writeBlockHitResult (Lnet/minecraft/world/phys/BlockHitResult;)V a
	writeBlockPos (Lnet/minecraft/core/BlockPos;)Lnet/minecraft/network/FriendlyByteBuf; a
	writeByteArray ([B)Lnet/minecraft/network/FriendlyByteBuf; a
	writeChunkPos (Lnet/minecraft/world/level/ChunkPos;)Lnet/minecraft/network/FriendlyByteBuf; a
	writeCollection (Ljava/util/Collection;Ljava/util/function/BiConsumer;)V a
	writeComponent (Lnet/minecraft/network/chat/Component;)Lnet/minecraft/network/FriendlyByteBuf; a
	writeDate (Ljava/util/Date;)Lnet/minecraft/network/FriendlyByteBuf; a
	writeEnum (Ljava/lang/Enum;)Lnet/minecraft/network/FriendlyByteBuf; a
	writeItem (Lnet/minecraft/world/item/ItemStack;)Lnet/minecraft/network/FriendlyByteBuf; a
	writeLongArray ([J)Lnet/minecraft/network/FriendlyByteBuf; a
	writeNbt (Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/network/FriendlyByteBuf; a
	writeResourceLocation (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/network/FriendlyByteBuf; a
	writeSectionPos (Lnet/minecraft/core/SectionPos;)Lnet/minecraft/network/FriendlyByteBuf; a
	writeUUID (Ljava/util/UUID;)Lnet/minecraft/network/FriendlyByteBuf; a
	writeUtf (Ljava/lang/String;)Lnet/minecraft/network/FriendlyByteBuf; a
	writeUtf (Ljava/lang/String;I)Lnet/minecraft/network/FriendlyByteBuf; a
	writeVarInt (I)Lnet/minecraft/network/FriendlyByteBuf; d
	writeVarIntArray ([I)Lnet/minecraft/network/FriendlyByteBuf; a
	writeVarLong (J)Lnet/minecraft/network/FriendlyByteBuf; b
	writeWithCodec (Lcom/mojang/serialization/Codec;Ljava/lang/Object;)V a
net/minecraft/network/PacketDecoder mh
	LOGGER a
	MARKER b
	flow c
net/minecraft/network/PacketEncoder mi
	LOGGER a
	MARKER b
	flow c
	encode (Lio/netty/channel/ChannelHandlerContext;Lnet/minecraft/network/protocol/Packet;Lio/netty/buffer/ByteBuf;)V a
net/minecraft/network/PacketListener mj
	getConnection ()Lnet/minecraft/network/Connection; a
	onDisconnect (Lnet/minecraft/network/chat/Component;)V a
net/minecraft/network/SkipPacketException mk
net/minecraft/network/Varint21FrameDecoder ml
net/minecraft/network/Varint21LengthFieldPrepender mm
	encode (Lio/netty/channel/ChannelHandlerContext;Lio/netty/buffer/ByteBuf;Lio/netty/buffer/ByteBuf;)V a
net/minecraft/network/chat/BaseComponent mn
	siblings a
	style d
	append (Lnet/minecraft/network/chat/Component;)Lnet/minecraft/network/chat/MutableComponent; a
	copy ()Lnet/minecraft/network/chat/MutableComponent; e
	getContents ()Ljava/lang/String; a
	getSiblings ()Ljava/util/List; b
	getStyle ()Lnet/minecraft/network/chat/Style; c
	plainCopy ()Lnet/minecraft/network/chat/BaseComponent; d
	plainCopy ()Lnet/minecraft/network/chat/MutableComponent; f
	setStyle (Lnet/minecraft/network/chat/Style;)Lnet/minecraft/network/chat/MutableComponent; a
net/minecraft/network/chat/ChatType mo
	$VALUES f
	CHAT a
	GAME_INFO c
	SYSTEM b
	index d
	interrupt e
	getForIndex (B)Lnet/minecraft/network/chat/ChatType; a
	getIndex ()B a
	shouldInterrupt ()Z b
net/minecraft/network/chat/ClickEvent mp
	action a
	value b
	getAction ()Lnet/minecraft/network/chat/ClickEvent$Action; a
	getValue ()Ljava/lang/String; b
net/minecraft/network/chat/ClickEvent$Action mp$a
	$VALUES j
	CHANGE_PAGE e
	COPY_TO_CLIPBOARD f
	LOOKUP g
	OPEN_FILE b
	OPEN_URL a
	RUN_COMMAND c
	SUGGEST_COMMAND d
	allowFromServer h
	name i
	getByName (Ljava/lang/String;)Lnet/minecraft/network/chat/ClickEvent$Action; a
	getName ()Ljava/lang/String; b
	isAllowedFromServer ()Z a
net/minecraft/network/chat/CommonComponents mq
	GUI_BACK h
	GUI_CANCEL d
	GUI_DONE c
	GUI_NO f
	GUI_PROCEED g
	GUI_YES e
	OPTION_OFF b
	OPTION_ON a
	optionStatus (Z)Lnet/minecraft/network/chat/Component; a
net/minecraft/network/chat/Component mr
	copy ()Lnet/minecraft/network/chat/MutableComponent; e
	getContents ()Ljava/lang/String; a
	getSiblings ()Ljava/util/List; b
	getString (I)Ljava/lang/String; a
	getStyle ()Lnet/minecraft/network/chat/Style; c
	nullToEmpty (Ljava/lang/String;)Lnet/minecraft/network/chat/Component; a
	plainCopy ()Lnet/minecraft/network/chat/MutableComponent; f
	toFlatList (Lnet/minecraft/network/chat/Style;)Ljava/util/List; b
	visit (Lnet/minecraft/network/chat/FormattedText$ContentConsumer;)Ljava/util/Optional; a
	visit (Lnet/minecraft/network/chat/FormattedText$StyledContentConsumer;Lnet/minecraft/network/chat/Style;)Ljava/util/Optional; a
	visitSelf (Lnet/minecraft/network/chat/FormattedText$ContentConsumer;)Ljava/util/Optional; b
	visitSelf (Lnet/minecraft/network/chat/FormattedText$StyledContentConsumer;Lnet/minecraft/network/chat/Style;)Ljava/util/Optional; b
net/minecraft/network/chat/Component$Serializer mr$a
	GSON a
	JSON_READER_LINESTART c
	JSON_READER_POS b
	deserialize (Lcom/google/gson/JsonElement;Ljava/lang/reflect/Type;Lcom/google/gson/JsonDeserializationContext;)Lnet/minecraft/network/chat/MutableComponent; a
	fromJson (Lcom/google/gson/JsonElement;)Lnet/minecraft/network/chat/MutableComponent; a
	fromJson (Lcom/mojang/brigadier/StringReader;)Lnet/minecraft/network/chat/MutableComponent; a
	fromJson (Ljava/lang/String;)Lnet/minecraft/network/chat/MutableComponent; a
	fromJsonLenient (Ljava/lang/String;)Lnet/minecraft/network/chat/MutableComponent; b
	getPos (Lcom/google/gson/stream/JsonReader;)I a
	serialize (Lnet/minecraft/network/chat/Component;Ljava/lang/reflect/Type;Lcom/google/gson/JsonSerializationContext;)Lcom/google/gson/JsonElement; a
	serializeStyle (Lnet/minecraft/network/chat/Style;Lcom/google/gson/JsonObject;Lcom/google/gson/JsonSerializationContext;)V a
	toJson (Lnet/minecraft/network/chat/Component;)Ljava/lang/String; a
	toJsonTree (Lnet/minecraft/network/chat/Component;)Lcom/google/gson/JsonElement; b
net/minecraft/network/chat/ComponentUtils ms
	formatAndSortList (Ljava/util/Collection;Ljava/util/function/Function;)Lnet/minecraft/network/chat/Component; a
	formatList (Ljava/util/Collection;)Lnet/minecraft/network/chat/Component; a
	formatList (Ljava/util/Collection;Ljava/util/function/Function;)Lnet/minecraft/network/chat/MutableComponent; b
	fromMessage (Lcom/mojang/brigadier/Message;)Lnet/minecraft/network/chat/Component; a
	getDisplayName (Lcom/mojang/authlib/GameProfile;)Lnet/minecraft/network/chat/Component; a
	mergeStyles (Lnet/minecraft/network/chat/MutableComponent;Lnet/minecraft/network/chat/Style;)Lnet/minecraft/network/chat/MutableComponent; a
	resolveStyle (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/network/chat/Style;Lnet/minecraft/world/entity/Entity;I)Lnet/minecraft/network/chat/Style; a
	updateForEntity (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/network/chat/Component;Lnet/minecraft/world/entity/Entity;I)Lnet/minecraft/network/chat/MutableComponent; a
	wrapInSquareBrackets (Lnet/minecraft/network/chat/Component;)Lnet/minecraft/network/chat/MutableComponent; a
net/minecraft/network/chat/ContextAwareComponent mt
	resolve (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/world/entity/Entity;I)Lnet/minecraft/network/chat/MutableComponent; a
net/minecraft/network/chat/FormattedText mu
	EMPTY c
	STOP_ITERATION b
	composite (Ljava/util/List;)Lnet/minecraft/network/chat/FormattedText; a
	composite ([Lnet/minecraft/network/chat/FormattedText;)Lnet/minecraft/network/chat/FormattedText; a
	of (Ljava/lang/String;)Lnet/minecraft/network/chat/FormattedText; b
	of (Ljava/lang/String;Lnet/minecraft/network/chat/Style;)Lnet/minecraft/network/chat/FormattedText; a
	visit (Lnet/minecraft/network/chat/FormattedText$ContentConsumer;)Ljava/util/Optional; a
	visit (Lnet/minecraft/network/chat/FormattedText$StyledContentConsumer;Lnet/minecraft/network/chat/Style;)Ljava/util/Optional; a
net/minecraft/network/chat/FormattedText$ContentConsumer mu$a
net/minecraft/network/chat/FormattedText$StyledContentConsumer mu$b
net/minecraft/network/chat/HoverEvent mv
	LOGGER a
	action b
	value c
	deserialize (Lcom/google/gson/JsonObject;)Lnet/minecraft/network/chat/HoverEvent; a
	getAction ()Lnet/minecraft/network/chat/HoverEvent$Action; a
	getValue (Lnet/minecraft/network/chat/HoverEvent$Action;)Ljava/lang/Object; a
	serialize ()Lcom/google/gson/JsonObject; b
net/minecraft/network/chat/HoverEvent$Action mv$a
	LOOKUP d
	SHOW_ENTITY c
	SHOW_ITEM b
	SHOW_TEXT a
	allowFromServer f
	argDeserializer g
	argSerializer h
	legacyArgDeserializer i
	name e
	cast (Ljava/lang/Object;)Ljava/lang/Object; b
	deserialize (Lcom/google/gson/JsonElement;)Lnet/minecraft/network/chat/HoverEvent; a
	deserializeFromLegacy (Lnet/minecraft/network/chat/Component;)Lnet/minecraft/network/chat/HoverEvent; a
	getByName (Ljava/lang/String;)Lnet/minecraft/network/chat/HoverEvent$Action; a
	getName ()Ljava/lang/String; b
	isAllowedFromServer ()Z a
	serializeArg (Ljava/lang/Object;)Lcom/google/gson/JsonElement; a
net/minecraft/network/chat/HoverEvent$EntityTooltipInfo mv$b
	id b
	linesCache d
	name c
	type a
	create (Lcom/google/gson/JsonElement;)Lnet/minecraft/network/chat/HoverEvent$EntityTooltipInfo; a
	create (Lnet/minecraft/network/chat/Component;)Lnet/minecraft/network/chat/HoverEvent$EntityTooltipInfo; a
	getTooltipLines ()Ljava/util/List; b
	serialize ()Lcom/google/gson/JsonElement; a
net/minecraft/network/chat/HoverEvent$ItemStackInfo mv$c
	count b
	item a
	itemStack d
	tag c
	create (Lcom/google/gson/JsonElement;)Lnet/minecraft/network/chat/HoverEvent$ItemStackInfo; b
	create (Lnet/minecraft/network/chat/Component;)Lnet/minecraft/network/chat/HoverEvent$ItemStackInfo; b
	getItemStack ()Lnet/minecraft/world/item/ItemStack; a
	serialize ()Lcom/google/gson/JsonElement; b
net/minecraft/network/chat/KeybindComponent mw
	keyResolver d
	name e
	nameResolver f
	getName ()Ljava/lang/String; h
	getNestedComponent ()Lnet/minecraft/network/chat/Component; i
	plainCopy ()Lnet/minecraft/network/chat/BaseComponent; d
	plainCopy ()Lnet/minecraft/network/chat/KeybindComponent; g
	plainCopy ()Lnet/minecraft/network/chat/MutableComponent; f
	setKeyResolver (Ljava/util/function/Function;)V a
	visitSelf (Lnet/minecraft/network/chat/FormattedText$ContentConsumer;)Ljava/util/Optional; b
	visitSelf (Lnet/minecraft/network/chat/FormattedText$StyledContentConsumer;Lnet/minecraft/network/chat/Style;)Ljava/util/Optional; b
net/minecraft/network/chat/MutableComponent mx
	append (Ljava/lang/String;)Lnet/minecraft/network/chat/MutableComponent; c
	append (Lnet/minecraft/network/chat/Component;)Lnet/minecraft/network/chat/MutableComponent; a
	setStyle (Lnet/minecraft/network/chat/Style;)Lnet/minecraft/network/chat/MutableComponent; a
	withStyle (Ljava/util/function/UnaryOperator;)Lnet/minecraft/network/chat/MutableComponent; a
	withStyle (Lnet/minecraft/ChatFormatting;)Lnet/minecraft/network/chat/MutableComponent; a
	withStyle (Lnet/minecraft/network/chat/Style;)Lnet/minecraft/network/chat/MutableComponent; c
	withStyle ([Lnet/minecraft/ChatFormatting;)Lnet/minecraft/network/chat/MutableComponent; a
net/minecraft/network/chat/NbtComponent my
	LOGGER g
	compiledNbtPath f
	interpreting d
	nbtPathPattern e
	compileNbtPath (Ljava/lang/String;)Lnet/minecraft/commands/arguments/NbtPathArgument$NbtPath; d
	getData (Lnet/minecraft/commands/CommandSourceStack;)Ljava/util/stream/Stream; a
	getNbtPath ()Ljava/lang/String; g
	isInterpreting ()Z h
	resolve (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/world/entity/Entity;I)Lnet/minecraft/network/chat/MutableComponent; a
net/minecraft/network/chat/NbtComponent$BlockNbtComponent my$a
	compiledPos h
	posPattern g
	compilePos (Ljava/lang/String;)Lnet/minecraft/commands/arguments/coordinates/Coordinates; d
	getData (Lnet/minecraft/commands/CommandSourceStack;)Ljava/util/stream/Stream; a
	getPos ()Ljava/lang/String; i
	plainCopy ()Lnet/minecraft/network/chat/BaseComponent; d
	plainCopy ()Lnet/minecraft/network/chat/MutableComponent; f
	plainCopy ()Lnet/minecraft/network/chat/NbtComponent$BlockNbtComponent; j
net/minecraft/network/chat/NbtComponent$EntityNbtComponent my$b
	compiledSelector h
	selectorPattern g
	compileSelector (Ljava/lang/String;)Lnet/minecraft/commands/arguments/selector/EntitySelector; d
	getData (Lnet/minecraft/commands/CommandSourceStack;)Ljava/util/stream/Stream; a
	getSelector ()Ljava/lang/String; i
	plainCopy ()Lnet/minecraft/network/chat/BaseComponent; d
	plainCopy ()Lnet/minecraft/network/chat/MutableComponent; f
	plainCopy ()Lnet/minecraft/network/chat/NbtComponent$EntityNbtComponent; j
net/minecraft/network/chat/NbtComponent$StorageNbtComponent my$c
	id g
	getData (Lnet/minecraft/commands/CommandSourceStack;)Ljava/util/stream/Stream; a
	getId ()Lnet/minecraft/resources/ResourceLocation; i
	plainCopy ()Lnet/minecraft/network/chat/BaseComponent; d
	plainCopy ()Lnet/minecraft/network/chat/MutableComponent; f
	plainCopy ()Lnet/minecraft/network/chat/NbtComponent$StorageNbtComponent; j
net/minecraft/network/chat/ScoreComponent mz
	name d
	objective f
	selector e
	findTargetName (Lnet/minecraft/commands/CommandSourceStack;)Ljava/lang/String; a
	getName ()Ljava/lang/String; g
	getObjective ()Ljava/lang/String; i
	getScore (Ljava/lang/String;Lnet/minecraft/commands/CommandSourceStack;)Ljava/lang/String; a
	getSelector ()Lnet/minecraft/commands/arguments/selector/EntitySelector; h
	parseSelector (Ljava/lang/String;)Lnet/minecraft/commands/arguments/selector/EntitySelector; d
	plainCopy ()Lnet/minecraft/network/chat/BaseComponent; d
	plainCopy ()Lnet/minecraft/network/chat/MutableComponent; f
	plainCopy ()Lnet/minecraft/network/chat/ScoreComponent; j
	resolve (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/world/entity/Entity;I)Lnet/minecraft/network/chat/MutableComponent; a
net/minecraft/network/chat/SelectorComponent na
	LOGGER d
	pattern e
	selector f
	getContents ()Ljava/lang/String; a
	getPattern ()Ljava/lang/String; g
	getSelector ()Lnet/minecraft/commands/arguments/selector/EntitySelector; h
	plainCopy ()Lnet/minecraft/network/chat/BaseComponent; d
	plainCopy ()Lnet/minecraft/network/chat/MutableComponent; f
	plainCopy ()Lnet/minecraft/network/chat/SelectorComponent; i
	resolve (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/world/entity/Entity;I)Lnet/minecraft/network/chat/MutableComponent; a
net/minecraft/network/chat/Style nb
	DEFAULT_FONT a
	EMPTY b
	bold d
	clickEvent i
	color c
	font l
	hoverEvent j
	insertion k
	italic e
	obfuscated h
	strikethrough g
	underlined f
	applyFormat (Lnet/minecraft/ChatFormatting;)Lnet/minecraft/network/chat/Style; b
	applyFormats ([Lnet/minecraft/ChatFormatting;)Lnet/minecraft/network/chat/Style; a
	applyLegacyFormat (Lnet/minecraft/ChatFormatting;)Lnet/minecraft/network/chat/Style; c
	applyTo (Lnet/minecraft/network/chat/Style;)Lnet/minecraft/network/chat/Style; a
	getClickEvent ()Lnet/minecraft/network/chat/ClickEvent; h
	getColor ()Lnet/minecraft/network/chat/TextColor; a
	getFont ()Lnet/minecraft/resources/ResourceLocation; k
	getHoverEvent ()Lnet/minecraft/network/chat/HoverEvent; i
	getInsertion ()Ljava/lang/String; j
	isBold ()Z b
	isEmpty ()Z g
	isItalic ()Z c
	isObfuscated ()Z f
	isStrikethrough ()Z d
	isUnderlined ()Z e
	withBold (Ljava/lang/Boolean;)Lnet/minecraft/network/chat/Style; a
	withClickEvent (Lnet/minecraft/network/chat/ClickEvent;)Lnet/minecraft/network/chat/Style; a
	withColor (I)Lnet/minecraft/network/chat/Style; a
	withColor (Lnet/minecraft/ChatFormatting;)Lnet/minecraft/network/chat/Style; a
	withColor (Lnet/minecraft/network/chat/TextColor;)Lnet/minecraft/network/chat/Style; a
	withFont (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/network/chat/Style; a
	withHoverEvent (Lnet/minecraft/network/chat/HoverEvent;)Lnet/minecraft/network/chat/Style; a
	withInsertion (Ljava/lang/String;)Lnet/minecraft/network/chat/Style; a
	withItalic (Ljava/lang/Boolean;)Lnet/minecraft/network/chat/Style; b
	withObfuscated (Ljava/lang/Boolean;)Lnet/minecraft/network/chat/Style; e
	withStrikethrough (Ljava/lang/Boolean;)Lnet/minecraft/network/chat/Style; d
	withUnderlined (Ljava/lang/Boolean;)Lnet/minecraft/network/chat/Style; c
net/minecraft/network/chat/Style$Serializer nb$a
	deserialize (Lcom/google/gson/JsonElement;Ljava/lang/reflect/Type;Lcom/google/gson/JsonDeserializationContext;)Lnet/minecraft/network/chat/Style; a
	getClickEvent (Lcom/google/gson/JsonObject;)Lnet/minecraft/network/chat/ClickEvent; c
	getFont (Lcom/google/gson/JsonObject;)Lnet/minecraft/resources/ResourceLocation; a
	getHoverEvent (Lcom/google/gson/JsonObject;)Lnet/minecraft/network/chat/HoverEvent; b
	getInsertion (Lcom/google/gson/JsonObject;)Ljava/lang/String; d
	getOptionalFlag (Lcom/google/gson/JsonObject;Ljava/lang/String;)Ljava/lang/Boolean; a
	getTextColor (Lcom/google/gson/JsonObject;)Lnet/minecraft/network/chat/TextColor; e
	serialize (Lnet/minecraft/network/chat/Style;Ljava/lang/reflect/Type;Lcom/google/gson/JsonSerializationContext;)Lcom/google/gson/JsonElement; a
net/minecraft/network/chat/TextColor nc
	LEGACY_FORMAT_TO_COLOR a
	NAMED_COLORS b
	name d
	value c
	formatValue ()Ljava/lang/String; c
	fromLegacyFormat (Lnet/minecraft/ChatFormatting;)Lnet/minecraft/network/chat/TextColor; a
	fromRgb (I)Lnet/minecraft/network/chat/TextColor; a
	getValue ()I a
	parseColor (Ljava/lang/String;)Lnet/minecraft/network/chat/TextColor; a
	serialize ()Ljava/lang/String; b
net/minecraft/network/chat/TextComponent nd
	EMPTY d
	decomposedWith f
	reorderedText g
	text e
	getContents ()Ljava/lang/String; a
	getText ()Ljava/lang/String; g
	plainCopy ()Lnet/minecraft/network/chat/BaseComponent; d
	plainCopy ()Lnet/minecraft/network/chat/MutableComponent; f
	plainCopy ()Lnet/minecraft/network/chat/TextComponent; h
net/minecraft/network/chat/TranslatableComponent ne
	FORMAT_PATTERN k
	NO_ARGS d
	TEXT_NULL f
	TEXT_PERCENT e
	args h
	decomposedParts j
	decomposedWith i
	key g
	decompose ()V j
	decomposeTemplate (Ljava/lang/String;Lnet/minecraft/locale/Language;)V a
	getArgs ()[Ljava/lang/Object; i
	getArgument (ILnet/minecraft/locale/Language;)Lnet/minecraft/network/chat/FormattedText; a
	getKey ()Ljava/lang/String; h
	plainCopy ()Lnet/minecraft/network/chat/BaseComponent; d
	plainCopy ()Lnet/minecraft/network/chat/MutableComponent; f
	plainCopy ()Lnet/minecraft/network/chat/TranslatableComponent; g
	resolve (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/world/entity/Entity;I)Lnet/minecraft/network/chat/MutableComponent; a
	visitSelf (Lnet/minecraft/network/chat/FormattedText$ContentConsumer;)Ljava/util/Optional; b
	visitSelf (Lnet/minecraft/network/chat/FormattedText$StyledContentConsumer;Lnet/minecraft/network/chat/Style;)Ljava/util/Optional; b
net/minecraft/network/chat/TranslatableFormatException nf
net/minecraft/network/protocol/Packet ni
	handle (Lnet/minecraft/network/PacketListener;)V a
	isSkippable ()Z a
	read (Lnet/minecraft/network/FriendlyByteBuf;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V b
net/minecraft/network/protocol/PacketFlow nj
	$VALUES c
	CLIENTBOUND b
	SERVERBOUND a
	getOpposite ()Lnet/minecraft/network/protocol/PacketFlow; a
net/minecraft/network/protocol/PacketUtils nk
	LOGGER a
	ensureRunningOnSameThread (Lnet/minecraft/network/protocol/Packet;Lnet/minecraft/network/PacketListener;Lnet/minecraft/server/level/ServerLevel;)V a
	ensureRunningOnSameThread (Lnet/minecraft/network/protocol/Packet;Lnet/minecraft/network/PacketListener;Lnet/minecraft/util/thread/BlockableEventLoop;)V a
net/minecraft/network/protocol/game/ClientGamePacketListener nl
	handleAddEntity (Lnet/minecraft/network/protocol/game/ClientboundAddEntityPacket;)V a
	handleAddExperienceOrb (Lnet/minecraft/network/protocol/game/ClientboundAddExperienceOrbPacket;)V a
	handleAddMob (Lnet/minecraft/network/protocol/game/ClientboundAddMobPacket;)V a
	handleAddObjective (Lnet/minecraft/network/protocol/game/ClientboundSetObjectivePacket;)V a
	handleAddOrRemoveRecipes (Lnet/minecraft/network/protocol/game/ClientboundRecipePacket;)V a
	handleAddPainting (Lnet/minecraft/network/protocol/game/ClientboundAddPaintingPacket;)V a
	handleAddPlayer (Lnet/minecraft/network/protocol/game/ClientboundAddPlayerPacket;)V a
	handleAnimate (Lnet/minecraft/network/protocol/game/ClientboundAnimatePacket;)V a
	handleAwardStats (Lnet/minecraft/network/protocol/game/ClientboundAwardStatsPacket;)V a
	handleBlockBreakAck (Lnet/minecraft/network/protocol/game/ClientboundBlockBreakAckPacket;)V a
	handleBlockDestruction (Lnet/minecraft/network/protocol/game/ClientboundBlockDestructionPacket;)V a
	handleBlockEntityData (Lnet/minecraft/network/protocol/game/ClientboundBlockEntityDataPacket;)V a
	handleBlockEvent (Lnet/minecraft/network/protocol/game/ClientboundBlockEventPacket;)V a
	handleBlockUpdate (Lnet/minecraft/network/protocol/game/ClientboundBlockUpdatePacket;)V a
	handleBossUpdate (Lnet/minecraft/network/protocol/game/ClientboundBossEventPacket;)V a
	handleChangeDifficulty (Lnet/minecraft/network/protocol/game/ClientboundChangeDifficultyPacket;)V a
	handleChat (Lnet/minecraft/network/protocol/game/ClientboundChatPacket;)V a
	handleChunkBlocksUpdate (Lnet/minecraft/network/protocol/game/ClientboundChunkBlocksUpdatePacket;)V a
	handleCommandSuggestions (Lnet/minecraft/network/protocol/game/ClientboundCommandSuggestionsPacket;)V a
	handleCommands (Lnet/minecraft/network/protocol/game/ClientboundCommandsPacket;)V a
	handleContainerAck (Lnet/minecraft/network/protocol/game/ClientboundContainerAckPacket;)V a
	handleContainerClose (Lnet/minecraft/network/protocol/game/ClientboundContainerClosePacket;)V a
	handleContainerContent (Lnet/minecraft/network/protocol/game/ClientboundContainerSetContentPacket;)V a
	handleContainerSetData (Lnet/minecraft/network/protocol/game/ClientboundContainerSetDataPacket;)V a
	handleContainerSetSlot (Lnet/minecraft/network/protocol/game/ClientboundContainerSetSlotPacket;)V a
	handleCustomPayload (Lnet/minecraft/network/protocol/game/ClientboundCustomPayloadPacket;)V a
	handleCustomSoundEvent (Lnet/minecraft/network/protocol/game/ClientboundCustomSoundPacket;)V a
	handleDisconnect (Lnet/minecraft/network/protocol/game/ClientboundDisconnectPacket;)V a
	handleEntityEvent (Lnet/minecraft/network/protocol/game/ClientboundEntityEventPacket;)V a
	handleEntityLinkPacket (Lnet/minecraft/network/protocol/game/ClientboundSetEntityLinkPacket;)V a
	handleExplosion (Lnet/minecraft/network/protocol/game/ClientboundExplodePacket;)V a
	handleForgetLevelChunk (Lnet/minecraft/network/protocol/game/ClientboundForgetLevelChunkPacket;)V a
	handleGameEvent (Lnet/minecraft/network/protocol/game/ClientboundGameEventPacket;)V a
	handleHorseScreenOpen (Lnet/minecraft/network/protocol/game/ClientboundHorseScreenOpenPacket;)V a
	handleItemCooldown (Lnet/minecraft/network/protocol/game/ClientboundCooldownPacket;)V a
	handleKeepAlive (Lnet/minecraft/network/protocol/game/ClientboundKeepAlivePacket;)V a
	handleLevelChunk (Lnet/minecraft/network/protocol/game/ClientboundLevelChunkPacket;)V a
	handleLevelEvent (Lnet/minecraft/network/protocol/game/ClientboundLevelEventPacket;)V a
	handleLightUpdatePacked (Lnet/minecraft/network/protocol/game/ClientboundLightUpdatePacket;)V a
	handleLogin (Lnet/minecraft/network/protocol/game/ClientboundLoginPacket;)V a
	handleLookAt (Lnet/minecraft/network/protocol/game/ClientboundPlayerLookAtPacket;)V a
	handleMapItemData (Lnet/minecraft/network/protocol/game/ClientboundMapItemDataPacket;)V a
	handleMerchantOffers (Lnet/minecraft/network/protocol/game/ClientboundMerchantOffersPacket;)V a
	handleMoveEntity (Lnet/minecraft/network/protocol/game/ClientboundMoveEntityPacket;)V a
	handleMovePlayer (Lnet/minecraft/network/protocol/game/ClientboundPlayerPositionPacket;)V a
	handleMoveVehicle (Lnet/minecraft/network/protocol/game/ClientboundMoveVehiclePacket;)V a
	handleOpenBook (Lnet/minecraft/network/protocol/game/ClientboundOpenBookPacket;)V a
	handleOpenScreen (Lnet/minecraft/network/protocol/game/ClientboundOpenScreenPacket;)V a
	handleOpenSignEditor (Lnet/minecraft/network/protocol/game/ClientboundOpenSignEditorPacket;)V a
	handleParticleEvent (Lnet/minecraft/network/protocol/game/ClientboundLevelParticlesPacket;)V a
	handlePlaceRecipe (Lnet/minecraft/network/protocol/game/ClientboundPlaceGhostRecipePacket;)V a
	handlePlayerAbilities (Lnet/minecraft/network/protocol/game/ClientboundPlayerAbilitiesPacket;)V a
	handlePlayerCombat (Lnet/minecraft/network/protocol/game/ClientboundPlayerCombatPacket;)V a
	handlePlayerInfo (Lnet/minecraft/network/protocol/game/ClientboundPlayerInfoPacket;)V a
	handleRemoveEntity (Lnet/minecraft/network/protocol/game/ClientboundRemoveEntitiesPacket;)V a
	handleRemoveMobEffect (Lnet/minecraft/network/protocol/game/ClientboundRemoveMobEffectPacket;)V a
	handleResourcePack (Lnet/minecraft/network/protocol/game/ClientboundResourcePackPacket;)V a
	handleRespawn (Lnet/minecraft/network/protocol/game/ClientboundRespawnPacket;)V a
	handleRotateMob (Lnet/minecraft/network/protocol/game/ClientboundRotateHeadPacket;)V a
	handleSelectAdvancementsTab (Lnet/minecraft/network/protocol/game/ClientboundSelectAdvancementsTabPacket;)V a
	handleSetBorder (Lnet/minecraft/network/protocol/game/ClientboundSetBorderPacket;)V a
	handleSetCamera (Lnet/minecraft/network/protocol/game/ClientboundSetCameraPacket;)V a
	handleSetCarriedItem (Lnet/minecraft/network/protocol/game/ClientboundSetCarriedItemPacket;)V a
	handleSetChunkCacheCenter (Lnet/minecraft/network/protocol/game/ClientboundSetChunkCacheCenterPacket;)V a
	handleSetChunkCacheRadius (Lnet/minecraft/network/protocol/game/ClientboundSetChunkCacheRadiusPacket;)V a
	handleSetDisplayObjective (Lnet/minecraft/network/protocol/game/ClientboundSetDisplayObjectivePacket;)V a
	handleSetEntityData (Lnet/minecraft/network/protocol/game/ClientboundSetEntityDataPacket;)V a
	handleSetEntityMotion (Lnet/minecraft/network/protocol/game/ClientboundSetEntityMotionPacket;)V a
	handleSetEntityPassengersPacket (Lnet/minecraft/network/protocol/game/ClientboundSetPassengersPacket;)V a
	handleSetEquipment (Lnet/minecraft/network/protocol/game/ClientboundSetEquipmentPacket;)V a
	handleSetExperience (Lnet/minecraft/network/protocol/game/ClientboundSetExperiencePacket;)V a
	handleSetHealth (Lnet/minecraft/network/protocol/game/ClientboundSetHealthPacket;)V a
	handleSetPlayerTeamPacket (Lnet/minecraft/network/protocol/game/ClientboundSetPlayerTeamPacket;)V a
	handleSetScore (Lnet/minecraft/network/protocol/game/ClientboundSetScorePacket;)V a
	handleSetSpawn (Lnet/minecraft/network/protocol/game/ClientboundSetDefaultSpawnPositionPacket;)V a
	handleSetTime (Lnet/minecraft/network/protocol/game/ClientboundSetTimePacket;)V a
	handleSetTitles (Lnet/minecraft/network/protocol/game/ClientboundSetTitlesPacket;)V a
	handleSoundEntityEvent (Lnet/minecraft/network/protocol/game/ClientboundSoundEntityPacket;)V a
	handleSoundEvent (Lnet/minecraft/network/protocol/game/ClientboundSoundPacket;)V a
	handleStopSoundEvent (Lnet/minecraft/network/protocol/game/ClientboundStopSoundPacket;)V a
	handleTabListCustomisation (Lnet/minecraft/network/protocol/game/ClientboundTabListPacket;)V a
	handleTagQueryPacket (Lnet/minecraft/network/protocol/game/ClientboundTagQueryPacket;)V a
	handleTakeItemEntity (Lnet/minecraft/network/protocol/game/ClientboundTakeItemEntityPacket;)V a
	handleTeleportEntity (Lnet/minecraft/network/protocol/game/ClientboundTeleportEntityPacket;)V a
	handleUpdateAdvancementsPacket (Lnet/minecraft/network/protocol/game/ClientboundUpdateAdvancementsPacket;)V a
	handleUpdateAttributes (Lnet/minecraft/network/protocol/game/ClientboundUpdateAttributesPacket;)V a
	handleUpdateMobEffect (Lnet/minecraft/network/protocol/game/ClientboundUpdateMobEffectPacket;)V a
	handleUpdateRecipes (Lnet/minecraft/network/protocol/game/ClientboundUpdateRecipesPacket;)V a
	handleUpdateTags (Lnet/minecraft/network/protocol/game/ClientboundUpdateTagsPacket;)V a
net/minecraft/network/protocol/game/ClientboundAddEntityPacket nm
	data l
	id a
	type k
	uuid b
	x c
	xRot i
	xa f
	y d
	yRot j
	ya g
	z e
	za h
	getData ()I m
	getId ()I b
	getType ()Lnet/minecraft/world/entity/EntityType; l
	getUUID ()Ljava/util/UUID; c
	getX ()D d
	getXa ()D g
	getY ()D e
	getYa ()D h
	getZ ()D f
	getZa ()D i
	getxRot ()I j
	getyRot ()I k
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	read (Lnet/minecraft/network/FriendlyByteBuf;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V b
net/minecraft/network/protocol/game/ClientboundAddExperienceOrbPacket nn
	id a
	value e
	x b
	y c
	z d
	getId ()I b
	getValue ()I f
	getX ()D c
	getY ()D d
	getZ ()D e
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	read (Lnet/minecraft/network/FriendlyByteBuf;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V b
net/minecraft/network/protocol/game/ClientboundAddMobPacket no
	id a
	type c
	uuid b
	x d
	xRot k
	xd g
	y e
	yHeadRot l
	yRot j
	yd h
	z f
	zd i
	getId ()I b
	getType ()I d
	getUUID ()Ljava/util/UUID; c
	getX ()D e
	getXd ()I h
	getY ()D f
	getYd ()I i
	getZ ()D g
	getZd ()I j
	getxRot ()B l
	getyHeadRot ()B m
	getyRot ()B k
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	read (Lnet/minecraft/network/FriendlyByteBuf;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V b
net/minecraft/network/protocol/game/ClientboundAddPaintingPacket np
	direction d
	id a
	motive e
	pos c
	uuid b
	getDirection ()Lnet/minecraft/core/Direction; e
	getId ()I b
	getMotive ()Lnet/minecraft/world/entity/decoration/Motive; f
	getPos ()Lnet/minecraft/core/BlockPos; d
	getUUID ()Ljava/util/UUID; c
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	read (Lnet/minecraft/network/FriendlyByteBuf;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V b
net/minecraft/network/protocol/game/ClientboundAddPlayerPacket nq
	entityId a
	playerId b
	x c
	xRot g
	y d
	yRot f
	z e
	getEntityId ()I b
	getPlayerId ()Ljava/util/UUID; c
	getX ()D d
	getY ()D e
	getZ ()D f
	getxRot ()B h
	getyRot ()B g
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	read (Lnet/minecraft/network/FriendlyByteBuf;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V b
net/minecraft/network/protocol/game/ClientboundAnimatePacket nr
	action b
	id a
	getAction ()I c
	getId ()I b
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	read (Lnet/minecraft/network/FriendlyByteBuf;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V b
net/minecraft/network/protocol/game/ClientboundAwardStatsPacket ns
	stats a
	getId (Lnet/minecraft/stats/Stat;)I a
	getStats ()Ljava/util/Map; b
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	read (Lnet/minecraft/network/FriendlyByteBuf;)V a
	readStat (Lnet/minecraft/stats/StatType;Lnet/minecraft/network/FriendlyByteBuf;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V b
net/minecraft/network/protocol/game/ClientboundBlockBreakAckPacket nt
	LOGGER b
	action a
	allGood e
	pos c
	state d
	action ()Lnet/minecraft/network/protocol/game/ServerboundPlayerActionPacket$Action; e
	allGood ()Z d
	getPos ()Lnet/minecraft/core/BlockPos; c
	getState ()Lnet/minecraft/world/level/block/state/BlockState; b
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	read (Lnet/minecraft/network/FriendlyByteBuf;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V b
net/minecraft/network/protocol/game/ClientboundBlockDestructionPacket nu
	id a
	pos b
	progress c
	getId ()I b
	getPos ()Lnet/minecraft/core/BlockPos; c
	getProgress ()I d
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	read (Lnet/minecraft/network/FriendlyByteBuf;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V b
net/minecraft/network/protocol/game/ClientboundBlockEntityDataPacket nv
	pos a
	tag c
	type b
	getPos ()Lnet/minecraft/core/BlockPos; b
	getTag ()Lnet/minecraft/nbt/CompoundTag; d
	getType ()I c
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	read (Lnet/minecraft/network/FriendlyByteBuf;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V b
net/minecraft/network/protocol/game/ClientboundBlockEventPacket nw
	b0 b
	b1 c
	block d
	pos a
	getB0 ()I c
	getB1 ()I d
	getBlock ()Lnet/minecraft/world/level/block/Block; e
	getPos ()Lnet/minecraft/core/BlockPos; b
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	read (Lnet/minecraft/network/FriendlyByteBuf;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V b
net/minecraft/network/protocol/game/ClientboundBlockUpdatePacket nx
	blockState b
	pos a
	getBlockState ()Lnet/minecraft/world/level/block/state/BlockState; b
	getPos ()Lnet/minecraft/core/BlockPos; c
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	read (Lnet/minecraft/network/FriendlyByteBuf;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V b
net/minecraft/network/protocol/game/ClientboundBossEventPacket ny
	color e
	createWorldFog i
	darkenScreen g
	id a
	name c
	operation b
	overlay f
	pct d
	playMusic h
	decodeProperties (I)V a
	encodeProperties ()I k
	getColor ()Lnet/minecraft/world/BossEvent$BossBarColor; f
	getId ()Ljava/util/UUID; b
	getName ()Lnet/minecraft/network/chat/Component; d
	getOperation ()Lnet/minecraft/network/protocol/game/ClientboundBossEventPacket$Operation; c
	getOverlay ()Lnet/minecraft/world/BossEvent$BossBarOverlay; g
	getPercent ()F e
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	read (Lnet/minecraft/network/FriendlyByteBuf;)V a
	shouldCreateWorldFog ()Z j
	shouldDarkenScreen ()Z h
	shouldPlayMusic ()Z i
	write (Lnet/minecraft/network/FriendlyByteBuf;)V b
net/minecraft/network/protocol/game/ClientboundBossEventPacket$Operation ny$a
	$VALUES g
	ADD a
	REMOVE b
	UPDATE_NAME d
	UPDATE_PCT c
	UPDATE_PROPERTIES f
	UPDATE_STYLE e
net/minecraft/network/protocol/game/ClientboundChangeDifficultyPacket nz
	difficulty a
	locked b
	getDifficulty ()Lnet/minecraft/world/Difficulty; c
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	isLocked ()Z b
	read (Lnet/minecraft/network/FriendlyByteBuf;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V b
net/minecraft/network/protocol/game/ClientboundChatPacket oa
	message a
	sender c
	type b
	getMessage ()Lnet/minecraft/network/chat/Component; b
	getSender ()Ljava/util/UUID; e
	getType ()Lnet/minecraft/network/chat/ChatType; d
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	isSkippable ()Z a
	isSystem ()Z c
	read (Lnet/minecraft/network/FriendlyByteBuf;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V b
net/minecraft/network/protocol/game/ClientboundChunkBlocksUpdatePacket ob
	chunkPos a
	updates b
	getUpdates ()[Lnet/minecraft/network/protocol/game/ClientboundChunkBlocksUpdatePacket$BlockUpdate; b
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	read (Lnet/minecraft/network/FriendlyByteBuf;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V b
net/minecraft/network/protocol/game/ClientboundChunkBlocksUpdatePacket$BlockUpdate ob$a
	block c
	offset b
	getBlock ()Lnet/minecraft/world/level/block/state/BlockState; c
	getOffset ()S b
	getPos ()Lnet/minecraft/core/BlockPos; a
net/minecraft/network/protocol/game/ClientboundCommandSuggestionsPacket oc
	id a
	suggestions b
	getId ()I b
	getSuggestions ()Lcom/mojang/brigadier/suggestion/Suggestions; c
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	read (Lnet/minecraft/network/FriendlyByteBuf;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V b
net/minecraft/network/protocol/game/ClientboundCommandsPacket od
	root a
	createBuilder (Lnet/minecraft/network/FriendlyByteBuf;B)Lcom/mojang/brigadier/builder/ArgumentBuilder; a
	getRoot ()Lcom/mojang/brigadier/tree/RootCommandNode; b
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	read (Lnet/minecraft/network/FriendlyByteBuf;)V a
	readNode (Lnet/minecraft/network/FriendlyByteBuf;)Lnet/minecraft/network/protocol/game/ClientboundCommandsPacket$Entry; c
	write (Lnet/minecraft/network/FriendlyByteBuf;)V b
	writeNode (Lnet/minecraft/network/FriendlyByteBuf;Lcom/mojang/brigadier/tree/CommandNode;Ljava/util/Map;)V a
net/minecraft/network/protocol/game/ClientboundCommandsPacket$Entry od$a
	builder a
	children d
	flags b
	node e
	redirect c
	build ([Lnet/minecraft/network/protocol/game/ClientboundCommandsPacket$Entry;)Z a
net/minecraft/network/protocol/game/ClientboundContainerAckPacket oe
	accepted c
	containerId a
	uid b
	getContainerId ()I b
	getUid ()S c
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	isAccepted ()Z d
	read (Lnet/minecraft/network/FriendlyByteBuf;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V b
net/minecraft/network/protocol/game/ClientboundContainerClosePacket of
	containerId a
	getContainerId ()I b
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	read (Lnet/minecraft/network/FriendlyByteBuf;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V b
net/minecraft/network/protocol/game/ClientboundContainerSetContentPacket og
	containerId a
	items b
	getContainerId ()I b
	getItems ()Ljava/util/List; c
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	read (Lnet/minecraft/network/FriendlyByteBuf;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V b
net/minecraft/network/protocol/game/ClientboundContainerSetDataPacket oh
	containerId a
	id b
	value c
	getContainerId ()I b
	getId ()I c
	getValue ()I d
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	read (Lnet/minecraft/network/FriendlyByteBuf;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V b
net/minecraft/network/protocol/game/ClientboundContainerSetSlotPacket oi
	containerId a
	itemStack c
	slot b
	getContainerId ()I b
	getItem ()Lnet/minecraft/world/item/ItemStack; d
	getSlot ()I c
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	read (Lnet/minecraft/network/FriendlyByteBuf;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V b
net/minecraft/network/protocol/game/ClientboundCooldownPacket oj
	duration b
	item a
	getDuration ()I c
	getItem ()Lnet/minecraft/world/item/Item; b
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	read (Lnet/minecraft/network/FriendlyByteBuf;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V b
net/minecraft/network/protocol/game/ClientboundCustomPayloadPacket ok
	BRAND a
	DEBUG_BEE m
	DEBUG_BRAIN l
	DEBUG_CAVES_PACKET d
	DEBUG_GAME_TEST_ADD_MARKER o
	DEBUG_GAME_TEST_CLEAR p
	DEBUG_GOAL_SELECTOR k
	DEBUG_HIVE n
	DEBUG_NEIGHBORSUPDATE_PACKET c
	DEBUG_PATHFINDING_PACKET b
	DEBUG_POI_ADDED_PACKET h
	DEBUG_POI_REMOVED_PACKET i
	DEBUG_POI_TICKET_COUNT_PACKET g
	DEBUG_RAIDS q
	DEBUG_STRUCTURES_PACKET e
	DEBUG_VILLAGE_SECTIONS j
	DEBUG_WORLDGENATTEMPT_PACKET f
	data s
	identifier r
	getData ()Lnet/minecraft/network/FriendlyByteBuf; c
	getIdentifier ()Lnet/minecraft/resources/ResourceLocation; b
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	read (Lnet/minecraft/network/FriendlyByteBuf;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V b
net/minecraft/network/protocol/game/ClientboundCustomSoundPacket ol
	name a
	pitch g
	source b
	volume f
	x c
	y d
	z e
	getName ()Lnet/minecraft/resources/ResourceLocation; b
	getPitch ()F h
	getSource ()Lnet/minecraft/sounds/SoundSource; c
	getVolume ()F g
	getX ()D d
	getY ()D e
	getZ ()D f
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	read (Lnet/minecraft/network/FriendlyByteBuf;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V b
net/minecraft/network/protocol/game/ClientboundDisconnectPacket om
	reason a
	getReason ()Lnet/minecraft/network/chat/Component; b
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	read (Lnet/minecraft/network/FriendlyByteBuf;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V b
net/minecraft/network/protocol/game/ClientboundEntityEventPacket on
	entityId a
	eventId b
	getEntity (Lnet/minecraft/world/level/Level;)Lnet/minecraft/world/entity/Entity; a
	getEventId ()B b
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	read (Lnet/minecraft/network/FriendlyByteBuf;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V b
net/minecraft/network/protocol/game/ClientboundExplodePacket oo
	knockbackX f
	knockbackY g
	knockbackZ h
	power d
	toBlow e
	x a
	y b
	z c
	getKnockbackX ()F b
	getKnockbackY ()F c
	getKnockbackZ ()F d
	getPower ()F h
	getToBlow ()Ljava/util/List; i
	getX ()D e
	getY ()D f
	getZ ()D g
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	read (Lnet/minecraft/network/FriendlyByteBuf;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V b
net/minecraft/network/protocol/game/ClientboundForgetLevelChunkPacket op
	x a
	z b
	getX ()I b
	getZ ()I c
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	read (Lnet/minecraft/network/FriendlyByteBuf;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V b
net/minecraft/network/protocol/game/ClientboundGameEventPacket oq
	ARROW_HIT_PLAYER g
	CHANGE_GAME_MODE d
	DEMO_EVENT f
	GUARDIAN_ELDER_EFFECT k
	IMMEDIATE_RESPAWN l
	NO_RESPAWN_BLOCK_AVAILABLE a
	PUFFER_FISH_STING j
	RAIN_LEVEL_CHANGE h
	START_RAINING b
	STOP_RAINING c
	THUNDER_LEVEL_CHANGE i
	WIN_GAME e
	event m
	param n
	getEvent ()Lnet/minecraft/network/protocol/game/ClientboundGameEventPacket$Type; b
	getParam ()F c
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	read (Lnet/minecraft/network/FriendlyByteBuf;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V b
net/minecraft/network/protocol/game/ClientboundGameEventPacket$Type oq$a
	TYPES a
	id b
net/minecraft/network/protocol/game/ClientboundHorseScreenOpenPacket or
	containerId a
	entityId c
	size b
	getContainerId ()I b
	getEntityId ()I d
	getSize ()I c
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	read (Lnet/minecraft/network/FriendlyByteBuf;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V b
net/minecraft/network/protocol/game/ClientboundKeepAlivePacket os
	id a
	getId ()J b
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	read (Lnet/minecraft/network/FriendlyByteBuf;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V b
net/minecraft/network/protocol/game/ClientboundLevelChunkPacket ot
	availableSections c
	biomes e
	blockEntitiesTags g
	buffer f
	forgetOldData i
	fullChunk h
	heightmaps d
	x a
	z b
	calculateChunkSize (Lnet/minecraft/world/level/chunk/LevelChunk;I)I a
	extractChunkData (Lnet/minecraft/network/FriendlyByteBuf;Lnet/minecraft/world/level/chunk/LevelChunk;I)I a
	forgetOldData ()Z g
	getAvailableSections ()I e
	getBiomes ()Lnet/minecraft/world/level/chunk/ChunkBiomeContainer; j
	getBlockEntitiesTags ()Ljava/util/List; i
	getHeightmaps ()Lnet/minecraft/nbt/CompoundTag; h
	getReadBuffer ()Lnet/minecraft/network/FriendlyByteBuf; b
	getWriteBuffer ()Lio/netty/buffer/ByteBuf; k
	getX ()I c
	getZ ()I d
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	isFullChunk ()Z f
	read (Lnet/minecraft/network/FriendlyByteBuf;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V b
net/minecraft/network/protocol/game/ClientboundLevelEventPacket ou
	data c
	globalEvent d
	pos b
	type a
	getData ()I d
	getPos ()Lnet/minecraft/core/BlockPos; e
	getType ()I c
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	isGlobalEvent ()Z b
	read (Lnet/minecraft/network/FriendlyByteBuf;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V b
net/minecraft/network/protocol/game/ClientboundLevelParticlesPacket ov
	count h
	maxSpeed g
	overrideLimiter i
	particle j
	x a
	xDist d
	y b
	yDist e
	z c
	zDist f
	getCount ()I j
	getMaxSpeed ()F i
	getParticle ()Lnet/minecraft/core/particles/ParticleOptions; k
	getX ()D c
	getXDist ()F f
	getY ()D d
	getYDist ()F g
	getZ ()D e
	getZDist ()F h
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	isOverrideLimiter ()Z b
	read (Lnet/minecraft/network/FriendlyByteBuf;)V a
	readParticle (Lnet/minecraft/network/FriendlyByteBuf;Lnet/minecraft/core/particles/ParticleType;)Lnet/minecraft/core/particles/ParticleOptions; a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V b
net/minecraft/network/protocol/game/ClientboundLightUpdatePacket ow
	blockUpdates h
	blockYMask d
	emptyBlockYMask f
	emptySkyYMask e
	skyUpdates g
	skyYMask c
	trustEdges i
	x a
	z b
	getBlockUpdates ()Ljava/util/List; i
	getBlockYMask ()I g
	getEmptyBlockYMask ()I h
	getEmptySkyYMask ()I e
	getSkyUpdates ()Ljava/util/List; f
	getSkyYMask ()I d
	getTrustEdges ()Z j
	getX ()I b
	getZ ()I c
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	read (Lnet/minecraft/network/FriendlyByteBuf;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V b
net/minecraft/network/protocol/game/ClientboundLoginPacket ox
	chunkRadius k
	dimension i
	dimensionType h
	gameType d
	hardcore c
	isDebug n
	isFlat o
	levels f
	maxPlayers j
	playerId a
	previousGameType e
	reducedDebugInfo l
	registryHolder g
	seed b
	showDeathScreen m
	getChunkRadius ()I l
	getDimension ()Lnet/minecraft/resources/ResourceKey; j
	getDimensionType ()Lnet/minecraft/resources/ResourceKey; i
	getGameType ()Lnet/minecraft/world/level/GameType; e
	getMaxPlayers ()I k
	getPlayerId ()I b
	getPreviousGameType ()Lnet/minecraft/world/level/GameType; f
	getSeed ()J c
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	isDebug ()Z o
	isFlat ()Z p
	isHardcore ()Z d
	isReducedDebugInfo ()Z m
	levels ()Ljava/util/Set; g
	read (Lnet/minecraft/network/FriendlyByteBuf;)V a
	registryAccess ()Lnet/minecraft/core/RegistryAccess; h
	shouldShowDeathScreen ()Z n
	write (Lnet/minecraft/network/FriendlyByteBuf;)V b
net/minecraft/network/protocol/game/ClientboundMapItemDataPacket oy
	decorations e
	height i
	locked d
	mapColors j
	mapId a
	scale b
	startX f
	startY g
	trackingPosition c
	width h
	applyToMap (Lnet/minecraft/world/level/saveddata/maps/MapItemSavedData;)V a
	getMapId ()I b
	getScale ()B c
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	read (Lnet/minecraft/network/FriendlyByteBuf;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V b
net/minecraft/network/protocol/game/ClientboundMerchantOffersPacket oz
	canRestock f
	containerId a
	offers b
	showProgress e
	villagerLevel c
	villagerXp d
	canRestock ()Z g
	getContainerId ()I b
	getOffers ()Lnet/minecraft/world/item/trading/MerchantOffers; c
	getVillagerLevel ()I d
	getVillagerXp ()I e
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	read (Lnet/minecraft/network/FriendlyByteBuf;)V a
	showProgress ()Z f
	write (Lnet/minecraft/network/FriendlyByteBuf;)V b
net/minecraft/network/protocol/game/ClientboundMoveEntityPacket pa
	entityId a
	hasPos i
	hasRot h
	onGround g
	xRot f
	xa b
	yRot e
	ya c
	za d
	entityToPacket (D)J a
	getEntity (Lnet/minecraft/world/level/Level;)Lnet/minecraft/world/entity/Entity; a
	getXa ()S b
	getYa ()S c
	getZa ()S d
	getxRot ()B f
	getyRot ()B e
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	hasPosition ()Z h
	hasRotation ()Z g
	isOnGround ()Z i
	packetToEntity (JJJ)Lnet/minecraft/world/phys/Vec3; a
	read (Lnet/minecraft/network/FriendlyByteBuf;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V b
net/minecraft/network/protocol/game/ClientboundMoveEntityPacket$Pos pa$a
	handle (Lnet/minecraft/network/PacketListener;)V a
	read (Lnet/minecraft/network/FriendlyByteBuf;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V b
net/minecraft/network/protocol/game/ClientboundMoveEntityPacket$PosRot pa$b
	handle (Lnet/minecraft/network/PacketListener;)V a
	read (Lnet/minecraft/network/FriendlyByteBuf;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V b
net/minecraft/network/protocol/game/ClientboundMoveEntityPacket$Rot pa$c
	handle (Lnet/minecraft/network/PacketListener;)V a
	read (Lnet/minecraft/network/FriendlyByteBuf;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V b
net/minecraft/network/protocol/game/ClientboundMoveVehiclePacket pb
	x a
	xRot e
	y b
	yRot d
	z c
	getX ()D b
	getXRot ()F f
	getY ()D c
	getYRot ()F e
	getZ ()D d
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	read (Lnet/minecraft/network/FriendlyByteBuf;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V b
net/minecraft/network/protocol/game/ClientboundOpenBookPacket pc
	hand a
	getHand ()Lnet/minecraft/world/InteractionHand; b
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	read (Lnet/minecraft/network/FriendlyByteBuf;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V b
net/minecraft/network/protocol/game/ClientboundOpenScreenPacket pd
	containerId a
	title c
	type b
	getContainerId ()I b
	getTitle ()Lnet/minecraft/network/chat/Component; d
	getType ()Lnet/minecraft/world/inventory/MenuType; c
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	read (Lnet/minecraft/network/FriendlyByteBuf;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V b
net/minecraft/network/protocol/game/ClientboundOpenSignEditorPacket pe
	pos a
	getPos ()Lnet/minecraft/core/BlockPos; b
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	read (Lnet/minecraft/network/FriendlyByteBuf;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V b
net/minecraft/network/protocol/game/ClientboundPlaceGhostRecipePacket pf
	containerId a
	recipe b
	getContainerId ()I c
	getRecipe ()Lnet/minecraft/resources/ResourceLocation; b
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	read (Lnet/minecraft/network/FriendlyByteBuf;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V b
net/minecraft/network/protocol/game/ClientboundPlayerAbilitiesPacket pg
	canFly c
	flyingSpeed e
	instabuild d
	invulnerable a
	isFlying b
	walkingSpeed f
	canFly ()Z d
	canInstabuild ()Z e
	getFlyingSpeed ()F f
	getWalkingSpeed ()F g
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	isFlying ()Z c
	isInvulnerable ()Z b
	read (Lnet/minecraft/network/FriendlyByteBuf;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V b
net/minecraft/network/protocol/game/ClientboundPlayerCombatPacket ph
	duration d
	event a
	killerId c
	message e
	playerId b
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	isSkippable ()Z a
	read (Lnet/minecraft/network/FriendlyByteBuf;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V b
net/minecraft/network/protocol/game/ClientboundPlayerCombatPacket$Event ph$a
	$VALUES d
	END_COMBAT b
	ENTER_COMBAT a
	ENTITY_DIED c
net/minecraft/network/protocol/game/ClientboundPlayerInfoPacket pi
	action a
	entries b
	getAction ()Lnet/minecraft/network/protocol/game/ClientboundPlayerInfoPacket$Action; c
	getEntries ()Ljava/util/List; b
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	read (Lnet/minecraft/network/FriendlyByteBuf;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V b
net/minecraft/network/protocol/game/ClientboundPlayerInfoPacket$Action pi$a
	$VALUES f
	ADD_PLAYER a
	REMOVE_PLAYER e
	UPDATE_DISPLAY_NAME d
	UPDATE_GAME_MODE b
	UPDATE_LATENCY c
net/minecraft/network/protocol/game/ClientboundPlayerInfoPacket$PlayerUpdate pi$b
	displayName e
	gameMode c
	latency b
	profile d
	getDisplayName ()Lnet/minecraft/network/chat/Component; d
	getGameMode ()Lnet/minecraft/world/level/GameType; c
	getLatency ()I b
	getProfile ()Lcom/mojang/authlib/GameProfile; a
net/minecraft/network/protocol/game/ClientboundPlayerLookAtPacket pj
	atEntity g
	entity d
	fromAnchor e
	toAnchor f
	x a
	y b
	z c
	getFromAnchor ()Lnet/minecraft/commands/arguments/EntityAnchorArgument$Anchor; b
	getPosition (Lnet/minecraft/world/level/Level;)Lnet/minecraft/world/phys/Vec3; a
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	read (Lnet/minecraft/network/FriendlyByteBuf;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V b
net/minecraft/network/protocol/game/ClientboundPlayerPositionPacket pk
	id g
	relativeArguments f
	x a
	xRot e
	y b
	yRot d
	z c
	getId ()I g
	getRelativeArguments ()Ljava/util/Set; h
	getX ()D b
	getXRot ()F f
	getY ()D c
	getYRot ()F e
	getZ ()D d
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	read (Lnet/minecraft/network/FriendlyByteBuf;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V b
net/minecraft/network/protocol/game/ClientboundPlayerPositionPacket$RelativeArgument pk$a
	$VALUES g
	X a
	X_ROT e
	Y b
	Y_ROT d
	Z c
	bit f
	getMask ()I a
	isSet (I)Z b
	pack (Ljava/util/Set;)I a
	unpack (I)Ljava/util/Set; a
net/minecraft/network/protocol/game/ClientboundRecipePacket pl
	filteringCraftable e
	furnaceFilteringCraftable g
	furnaceGuiOpen f
	guiOpen d
	recipes b
	state a
	toHighlight c
	getHighlights ()Ljava/util/List; c
	getRecipes ()Ljava/util/List; b
	getState ()Lnet/minecraft/network/protocol/game/ClientboundRecipePacket$State; h
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	isFilteringCraftable ()Z e
	isFurnaceFilteringCraftable ()Z g
	isFurnaceGuiOpen ()Z f
	isGuiOpen ()Z d
	read (Lnet/minecraft/network/FriendlyByteBuf;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V b
net/minecraft/network/protocol/game/ClientboundRecipePacket$State pl$a
	$VALUES d
	ADD b
	INIT a
	REMOVE c
net/minecraft/network/protocol/game/ClientboundRemoveEntitiesPacket pm
	entityIds a
	getEntityIds ()[I b
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	read (Lnet/minecraft/network/FriendlyByteBuf;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V b
net/minecraft/network/protocol/game/ClientboundRemoveMobEffectPacket pn
	effect b
	entityId a
	getEffect ()Lnet/minecraft/world/effect/MobEffect; b
	getEntity (Lnet/minecraft/world/level/Level;)Lnet/minecraft/world/entity/Entity; a
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	read (Lnet/minecraft/network/FriendlyByteBuf;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V b
net/minecraft/network/protocol/game/ClientboundResourcePackPacket po
	hash b
	url a
	getHash ()Ljava/lang/String; c
	getUrl ()Ljava/lang/String; b
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	read (Lnet/minecraft/network/FriendlyByteBuf;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V b
net/minecraft/network/protocol/game/ClientboundRespawnPacket pp
	dimension b
	dimensionType a
	isDebug f
	isFlat g
	keepAllPlayerData h
	playerGameType d
	previousPlayerGameType e
	seed c
	getDimension ()Lnet/minecraft/resources/ResourceKey; c
	getDimensionType ()Lnet/minecraft/resources/ResourceKey; b
	getPlayerGameType ()Lnet/minecraft/world/level/GameType; e
	getPreviousPlayerGameType ()Lnet/minecraft/world/level/GameType; f
	getSeed ()J d
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	isDebug ()Z g
	isFlat ()Z h
	read (Lnet/minecraft/network/FriendlyByteBuf;)V a
	shouldKeepAllPlayerData ()Z i
	write (Lnet/minecraft/network/FriendlyByteBuf;)V b
net/minecraft/network/protocol/game/ClientboundRotateHeadPacket pq
	entityId a
	yHeadRot b
	getEntity (Lnet/minecraft/world/level/Level;)Lnet/minecraft/world/entity/Entity; a
	getYHeadRot ()B b
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	read (Lnet/minecraft/network/FriendlyByteBuf;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V b
net/minecraft/network/protocol/game/ClientboundSelectAdvancementsTabPacket pr
	tab a
	getTab ()Lnet/minecraft/resources/ResourceLocation; b
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	read (Lnet/minecraft/network/FriendlyByteBuf;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V b
net/minecraft/network/protocol/game/ClientboundSetBorderPacket ps
	lerpTime g
	newAbsoluteMaxSize b
	newCenterX c
	newCenterZ d
	newSize e
	oldSize f
	type a
	warningBlocks i
	warningTime h
	applyChanges (Lnet/minecraft/world/level/border/WorldBorder;)V a
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	read (Lnet/minecraft/network/FriendlyByteBuf;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V b
net/minecraft/network/protocol/game/ClientboundSetBorderPacket$Type ps$a
	$VALUES g
	INITIALIZE d
	LERP_SIZE b
	SET_CENTER c
	SET_SIZE a
	SET_WARNING_BLOCKS f
	SET_WARNING_TIME e
net/minecraft/network/protocol/game/ClientboundSetCameraPacket pt
	cameraId a
	getEntity (Lnet/minecraft/world/level/Level;)Lnet/minecraft/world/entity/Entity; a
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	read (Lnet/minecraft/network/FriendlyByteBuf;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V b
net/minecraft/network/protocol/game/ClientboundSetCarriedItemPacket pu
	slot a
	getSlot ()I b
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	read (Lnet/minecraft/network/FriendlyByteBuf;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V b
net/minecraft/network/protocol/game/ClientboundSetChunkCacheCenterPacket pv
	x a
	z b
	getX ()I b
	getZ ()I c
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	read (Lnet/minecraft/network/FriendlyByteBuf;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V b
net/minecraft/network/protocol/game/ClientboundSetChunkCacheRadiusPacket pw
	radius a
	getRadius ()I b
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	read (Lnet/minecraft/network/FriendlyByteBuf;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V b
net/minecraft/network/protocol/game/ClientboundSetDefaultSpawnPositionPacket px
	pos a
	getPos ()Lnet/minecraft/core/BlockPos; b
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	read (Lnet/minecraft/network/FriendlyByteBuf;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V b
net/minecraft/network/protocol/game/ClientboundSetDisplayObjectivePacket py
	objectiveName b
	slot a
	getObjectiveName ()Ljava/lang/String; c
	getSlot ()I b
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	read (Lnet/minecraft/network/FriendlyByteBuf;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V b
net/minecraft/network/protocol/game/ClientboundSetEntityDataPacket pz
	id a
	packedItems b
	getId ()I c
	getUnpackedData ()Ljava/util/List; b
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	read (Lnet/minecraft/network/FriendlyByteBuf;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V b
net/minecraft/network/protocol/game/ClientboundSetEntityLinkPacket qa
	destId b
	sourceId a
	getDestId ()I c
	getSourceId ()I b
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	read (Lnet/minecraft/network/FriendlyByteBuf;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V b
net/minecraft/network/protocol/game/ClientboundSetEntityMotionPacket qb
	id a
	xa b
	ya c
	za d
	getId ()I b
	getXa ()I c
	getYa ()I d
	getZa ()I e
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	read (Lnet/minecraft/network/FriendlyByteBuf;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V b
net/minecraft/network/protocol/game/ClientboundSetEquipmentPacket qc
	entity a
	slots b
	getEntity ()I b
	getSlots ()Ljava/util/List; c
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	read (Lnet/minecraft/network/FriendlyByteBuf;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V b
net/minecraft/network/protocol/game/ClientboundSetExperiencePacket qd
	experienceLevel c
	experienceProgress a
	totalExperience b
	getExperienceLevel ()I d
	getExperienceProgress ()F b
	getTotalExperience ()I c
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	read (Lnet/minecraft/network/FriendlyByteBuf;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V b
net/minecraft/network/protocol/game/ClientboundSetHealthPacket qe
	food b
	health a
	saturation c
	getFood ()I c
	getHealth ()F b
	getSaturation ()F d
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	read (Lnet/minecraft/network/FriendlyByteBuf;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V b
net/minecraft/network/protocol/game/ClientboundSetObjectivePacket qf
	displayName b
	method d
	objectiveName a
	renderType c
	getDisplayName ()Lnet/minecraft/network/chat/Component; c
	getMethod ()I d
	getObjectiveName ()Ljava/lang/String; b
	getRenderType ()Lnet/minecraft/world/scores/criteria/ObjectiveCriteria$RenderType; e
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	read (Lnet/minecraft/network/FriendlyByteBuf;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V b
net/minecraft/network/protocol/game/ClientboundSetPassengersPacket qg
	passengers b
	vehicle a
	getPassengers ()[I b
	getVehicle ()I c
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	read (Lnet/minecraft/network/FriendlyByteBuf;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V b
net/minecraft/network/protocol/game/ClientboundSetPlayerTeamPacket qh
	collisionRule f
	color g
	displayName b
	method i
	name a
	nametagVisibility e
	options j
	playerPrefix c
	playerSuffix d
	players h
	getCollisionRule ()Ljava/lang/String; i
	getColor ()Lnet/minecraft/ChatFormatting; g
	getDisplayName ()Lnet/minecraft/network/chat/Component; c
	getMethod ()I e
	getName ()Ljava/lang/String; b
	getNametagVisibility ()Ljava/lang/String; h
	getOptions ()I f
	getPlayerPrefix ()Lnet/minecraft/network/chat/Component; j
	getPlayerSuffix ()Lnet/minecraft/network/chat/Component; k
	getPlayers ()Ljava/util/Collection; d
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	read (Lnet/minecraft/network/FriendlyByteBuf;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V b
net/minecraft/network/protocol/game/ClientboundSetScorePacket qi
	method d
	objectiveName b
	owner a
	score c
	getMethod ()Lnet/minecraft/server/ServerScoreboard$Method; e
	getObjectiveName ()Ljava/lang/String; c
	getOwner ()Ljava/lang/String; b
	getScore ()I d
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	read (Lnet/minecraft/network/FriendlyByteBuf;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V b
net/minecraft/network/protocol/game/ClientboundSetTimePacket qj
	dayTime b
	gameTime a
	getDayTime ()J c
	getGameTime ()J b
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	read (Lnet/minecraft/network/FriendlyByteBuf;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V b
net/minecraft/network/protocol/game/ClientboundSetTitlesPacket qk
	fadeInTime c
	fadeOutTime e
	stayTime d
	text b
	type a
	getFadeInTime ()I d
	getFadeOutTime ()I f
	getStayTime ()I e
	getText ()Lnet/minecraft/network/chat/Component; c
	getType ()Lnet/minecraft/network/protocol/game/ClientboundSetTitlesPacket$Type; b
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	read (Lnet/minecraft/network/FriendlyByteBuf;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V b
net/minecraft/network/protocol/game/ClientboundSetTitlesPacket$Type qk$a
	$VALUES g
	ACTIONBAR c
	CLEAR e
	RESET f
	SUBTITLE b
	TIMES d
	TITLE a
net/minecraft/network/protocol/game/ClientboundSoundEntityPacket ql
	id c
	pitch e
	sound a
	source b
	volume d
	getId ()I d
	getPitch ()F f
	getSound ()Lnet/minecraft/sounds/SoundEvent; b
	getSource ()Lnet/minecraft/sounds/SoundSource; c
	getVolume ()F e
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	read (Lnet/minecraft/network/FriendlyByteBuf;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V b
net/minecraft/network/protocol/game/ClientboundSoundPacket qm
	pitch g
	sound a
	source b
	volume f
	x c
	y d
	z e
	getPitch ()F h
	getSound ()Lnet/minecraft/sounds/SoundEvent; b
	getSource ()Lnet/minecraft/sounds/SoundSource; c
	getVolume ()F g
	getX ()D d
	getY ()D e
	getZ ()D f
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	read (Lnet/minecraft/network/FriendlyByteBuf;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V b
net/minecraft/network/protocol/game/ClientboundStopSoundPacket qn
	name a
	source b
	getName ()Lnet/minecraft/resources/ResourceLocation; b
	getSource ()Lnet/minecraft/sounds/SoundSource; c
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	read (Lnet/minecraft/network/FriendlyByteBuf;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V b
net/minecraft/network/protocol/game/ClientboundTabListPacket qo
	footer b
	header a
	getFooter ()Lnet/minecraft/network/chat/Component; c
	getHeader ()Lnet/minecraft/network/chat/Component; b
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	read (Lnet/minecraft/network/FriendlyByteBuf;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V b
net/minecraft/network/protocol/game/ClientboundTagQueryPacket qp
	tag b
	transactionId a
	getTag ()Lnet/minecraft/nbt/CompoundTag; c
	getTransactionId ()I b
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	isSkippable ()Z a
	read (Lnet/minecraft/network/FriendlyByteBuf;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V b
net/minecraft/network/protocol/game/ClientboundTakeItemEntityPacket qq
	amount c
	itemId a
	playerId b
	getAmount ()I d
	getItemId ()I b
	getPlayerId ()I c
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	read (Lnet/minecraft/network/FriendlyByteBuf;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V b
net/minecraft/network/protocol/game/ClientboundTeleportEntityPacket qr
	id a
	onGround g
	x b
	xRot f
	y c
	yRot e
	z d
	getId ()I b
	getX ()D c
	getY ()D d
	getZ ()D e
	getxRot ()B g
	getyRot ()B f
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	isOnGround ()Z h
	read (Lnet/minecraft/network/FriendlyByteBuf;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V b
net/minecraft/network/protocol/game/ClientboundUpdateAdvancementsPacket qs
	added b
	progress d
	removed c
	reset a
	getAdded ()Ljava/util/Map; b
	getProgress ()Ljava/util/Map; d
	getRemoved ()Ljava/util/Set; c
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	read (Lnet/minecraft/network/FriendlyByteBuf;)V a
	shouldReset ()Z e
	write (Lnet/minecraft/network/FriendlyByteBuf;)V b
net/minecraft/network/protocol/game/ClientboundUpdateAttributesPacket qt
	attributes b
	entityId a
	getEntityId ()I b
	getValues ()Ljava/util/List; c
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	read (Lnet/minecraft/network/FriendlyByteBuf;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V b
net/minecraft/network/protocol/game/ClientboundUpdateAttributesPacket$AttributeSnapshot qt$a
	attribute b
	base c
	modifiers d
	getAttribute ()Lnet/minecraft/world/entity/ai/attributes/Attribute; a
	getBase ()D b
	getModifiers ()Ljava/util/Collection; c
net/minecraft/network/protocol/game/ClientboundUpdateMobEffectPacket qu
	effectAmplifier c
	effectDurationTicks d
	effectId b
	entityId a
	flags e
	effectShowsIcon ()Z i
	getEffectAmplifier ()B e
	getEffectDurationTicks ()I f
	getEffectId ()B d
	getEntityId ()I c
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	isEffectAmbient ()Z h
	isEffectVisible ()Z g
	isSuperLongDuration ()Z b
	read (Lnet/minecraft/network/FriendlyByteBuf;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V b
net/minecraft/network/protocol/game/ClientboundUpdateRecipesPacket qv
	recipes a
	fromNetwork (Lnet/minecraft/network/FriendlyByteBuf;)Lnet/minecraft/world/item/crafting/Recipe; c
	getRecipes ()Ljava/util/List; b
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	read (Lnet/minecraft/network/FriendlyByteBuf;)V a
	toNetwork (Lnet/minecraft/world/item/crafting/Recipe;Lnet/minecraft/network/FriendlyByteBuf;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V b
net/minecraft/network/protocol/game/ClientboundUpdateTagsPacket qw
	tags a
	getTags ()Lnet/minecraft/tags/TagManager; b
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	read (Lnet/minecraft/network/FriendlyByteBuf;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V b
net/minecraft/network/protocol/game/DebugEntityNameGenerator qx
	NAMES_FIRST_PART a
	NAMES_SECOND_PART b
	getEntityName (Ljava/util/UUID;)Ljava/lang/String; a
	getEntityName (Lnet/minecraft/world/entity/Entity;)Ljava/lang/String; a
	getRandom (Ljava/util/UUID;)Ljava/util/Random; b
	getRandomString (Ljava/util/Random;[Ljava/lang/String;)Ljava/lang/String; a
net/minecraft/network/protocol/game/DebugPackets qy
	LOGGER a
	getMemoryDescriptions (Lnet/minecraft/world/entity/LivingEntity;J)Ljava/util/List; a
	getShortDescription (Lnet/minecraft/server/level/ServerLevel;Ljava/lang/Object;)Ljava/lang/String; a
	sendBeeInfo (Lnet/minecraft/world/entity/animal/Bee;)V a
	sendEntityBrain (Lnet/minecraft/world/entity/LivingEntity;)V a
	sendGameTestAddMarker (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Ljava/lang/String;II)V a
	sendGameTestClearPacket (Lnet/minecraft/server/level/ServerLevel;)V a
	sendGoalSelector (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/Mob;Lnet/minecraft/world/entity/ai/goal/GoalSelector;)V a
	sendHiveInfo (Lnet/minecraft/world/level/block/entity/BeehiveBlockEntity;)V a
	sendNeighborsUpdatePacket (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)V a
	sendPacketToAllPlayers (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/network/FriendlyByteBuf;Lnet/minecraft/resources/ResourceLocation;)V a
	sendPathFindingPacket (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/Mob;Lnet/minecraft/world/level/pathfinder/Path;F)V a
	sendPoiAddedPacket (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;)V a
	sendPoiPacketsForChunk (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/level/ChunkPos;)V a
	sendPoiRemovedPacket (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;)V b
	sendPoiTicketCountPacket (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;)V c
	sendRaids (Lnet/minecraft/server/level/ServerLevel;Ljava/util/Collection;)V a
	sendStructurePacket (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/world/level/levelgen/structure/StructureStart;)V a
	sendVillageSectionsPacket (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;)V d
	writeBrain (Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ServerGamePacketListener qz
	handleAcceptTeleportPacket (Lnet/minecraft/network/protocol/game/ServerboundAcceptTeleportationPacket;)V a
	handleAnimate (Lnet/minecraft/network/protocol/game/ServerboundSwingPacket;)V a
	handleBlockEntityTagQuery (Lnet/minecraft/network/protocol/game/ServerboundBlockEntityTagQuery;)V a
	handleChangeDifficulty (Lnet/minecraft/network/protocol/game/ServerboundChangeDifficultyPacket;)V a
	handleChat (Lnet/minecraft/network/protocol/game/ServerboundChatPacket;)V a
	handleClientCommand (Lnet/minecraft/network/protocol/game/ServerboundClientCommandPacket;)V a
	handleClientInformation (Lnet/minecraft/network/protocol/game/ServerboundClientInformationPacket;)V a
	handleContainerAck (Lnet/minecraft/network/protocol/game/ServerboundContainerAckPacket;)V a
	handleContainerButtonClick (Lnet/minecraft/network/protocol/game/ServerboundContainerButtonClickPacket;)V a
	handleContainerClick (Lnet/minecraft/network/protocol/game/ServerboundContainerClickPacket;)V a
	handleContainerClose (Lnet/minecraft/network/protocol/game/ServerboundContainerClosePacket;)V a
	handleCustomCommandSuggestions (Lnet/minecraft/network/protocol/game/ServerboundCommandSuggestionPacket;)V a
	handleCustomPayload (Lnet/minecraft/network/protocol/game/ServerboundCustomPayloadPacket;)V a
	handleEditBook (Lnet/minecraft/network/protocol/game/ServerboundEditBookPacket;)V a
	handleEntityTagQuery (Lnet/minecraft/network/protocol/game/ServerboundEntityTagQuery;)V a
	handleInteract (Lnet/minecraft/network/protocol/game/ServerboundInteractPacket;)V a
	handleJigsawGenerate (Lnet/minecraft/network/protocol/game/ServerboundJigsawGeneratePacket;)V a
	handleKeepAlive (Lnet/minecraft/network/protocol/game/ServerboundKeepAlivePacket;)V a
	handleLockDifficulty (Lnet/minecraft/network/protocol/game/ServerboundLockDifficultyPacket;)V a
	handleMovePlayer (Lnet/minecraft/network/protocol/game/ServerboundMovePlayerPacket;)V a
	handleMoveVehicle (Lnet/minecraft/network/protocol/game/ServerboundMoveVehiclePacket;)V a
	handlePaddleBoat (Lnet/minecraft/network/protocol/game/ServerboundPaddleBoatPacket;)V a
	handlePickItem (Lnet/minecraft/network/protocol/game/ServerboundPickItemPacket;)V a
	handlePlaceRecipe (Lnet/minecraft/network/protocol/game/ServerboundPlaceRecipePacket;)V a
	handlePlayerAbilities (Lnet/minecraft/network/protocol/game/ServerboundPlayerAbilitiesPacket;)V a
	handlePlayerAction (Lnet/minecraft/network/protocol/game/ServerboundPlayerActionPacket;)V a
	handlePlayerCommand (Lnet/minecraft/network/protocol/game/ServerboundPlayerCommandPacket;)V a
	handlePlayerInput (Lnet/minecraft/network/protocol/game/ServerboundPlayerInputPacket;)V a
	handleRecipeBookUpdatePacket (Lnet/minecraft/network/protocol/game/ServerboundRecipeBookUpdatePacket;)V a
	handleRenameItem (Lnet/minecraft/network/protocol/game/ServerboundRenameItemPacket;)V a
	handleResourcePackResponse (Lnet/minecraft/network/protocol/game/ServerboundResourcePackPacket;)V a
	handleSeenAdvancements (Lnet/minecraft/network/protocol/game/ServerboundSeenAdvancementsPacket;)V a
	handleSelectTrade (Lnet/minecraft/network/protocol/game/ServerboundSelectTradePacket;)V a
	handleSetBeaconPacket (Lnet/minecraft/network/protocol/game/ServerboundSetBeaconPacket;)V a
	handleSetCarriedItem (Lnet/minecraft/network/protocol/game/ServerboundSetCarriedItemPacket;)V a
	handleSetCommandBlock (Lnet/minecraft/network/protocol/game/ServerboundSetCommandBlockPacket;)V a
	handleSetCommandMinecart (Lnet/minecraft/network/protocol/game/ServerboundSetCommandMinecartPacket;)V a
	handleSetCreativeModeSlot (Lnet/minecraft/network/protocol/game/ServerboundSetCreativeModeSlotPacket;)V a
	handleSetJigsawBlock (Lnet/minecraft/network/protocol/game/ServerboundSetJigsawBlockPacket;)V a
	handleSetStructureBlock (Lnet/minecraft/network/protocol/game/ServerboundSetStructureBlockPacket;)V a
	handleSignUpdate (Lnet/minecraft/network/protocol/game/ServerboundSignUpdatePacket;)V a
	handleTeleportToEntityPacket (Lnet/minecraft/network/protocol/game/ServerboundTeleportToEntityPacket;)V a
	handleUseItem (Lnet/minecraft/network/protocol/game/ServerboundUseItemPacket;)V a
	handleUseItemOn (Lnet/minecraft/network/protocol/game/ServerboundUseItemOnPacket;)V a
net/minecraft/network/protocol/game/ServerboundAcceptTeleportationPacket ra
	id a
	getId ()I b
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ServerGamePacketListener;)V a
	read (Lnet/minecraft/network/FriendlyByteBuf;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V b
net/minecraft/network/protocol/game/ServerboundBlockEntityTagQuery rb
	pos b
	transactionId a
	getPos ()Lnet/minecraft/core/BlockPos; c
	getTransactionId ()I b
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ServerGamePacketListener;)V a
	read (Lnet/minecraft/network/FriendlyByteBuf;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V b
net/minecraft/network/protocol/game/ServerboundChangeDifficultyPacket rc
	difficulty a
	getDifficulty ()Lnet/minecraft/world/Difficulty; b
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ServerGamePacketListener;)V a
	read (Lnet/minecraft/network/FriendlyByteBuf;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V b
net/minecraft/network/protocol/game/ServerboundChatPacket rd
	message a
	getMessage ()Ljava/lang/String; b
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ServerGamePacketListener;)V a
	read (Lnet/minecraft/network/FriendlyByteBuf;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V b
net/minecraft/network/protocol/game/ServerboundClientCommandPacket re
	action a
	getAction ()Lnet/minecraft/network/protocol/game/ServerboundClientCommandPacket$Action; b
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ServerGamePacketListener;)V a
	read (Lnet/minecraft/network/FriendlyByteBuf;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V b
net/minecraft/network/protocol/game/ServerboundClientCommandPacket$Action re$a
	$VALUES c
	PERFORM_RESPAWN a
	REQUEST_STATS b
net/minecraft/network/protocol/game/ServerboundClientInformationPacket rf
	chatColors d
	chatVisibility c
	language a
	mainHand f
	modelCustomisation e
	viewDistance b
	getChatColors ()Z e
	getChatVisibility ()Lnet/minecraft/world/entity/player/ChatVisiblity; d
	getLanguage ()Ljava/lang/String; b
	getMainHand ()Lnet/minecraft/world/entity/HumanoidArm; g
	getModelCustomisation ()I f
	getViewDistance ()I c
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ServerGamePacketListener;)V a
	read (Lnet/minecraft/network/FriendlyByteBuf;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V b
net/minecraft/network/protocol/game/ServerboundCommandSuggestionPacket rg
	command b
	id a
	getCommand ()Ljava/lang/String; c
	getId ()I b
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ServerGamePacketListener;)V a
	read (Lnet/minecraft/network/FriendlyByteBuf;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V b
net/minecraft/network/protocol/game/ServerboundContainerAckPacket rh
	accepted c
	containerId a
	uid b
	getContainerId ()I b
	getUid ()S c
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ServerGamePacketListener;)V a
	isAccepted ()Z d
	read (Lnet/minecraft/network/FriendlyByteBuf;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V b
net/minecraft/network/protocol/game/ServerboundContainerButtonClickPacket ri
	buttonId b
	containerId a
	getButtonId ()I c
	getContainerId ()I b
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ServerGamePacketListener;)V a
	read (Lnet/minecraft/network/FriendlyByteBuf;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V b
net/minecraft/network/protocol/game/ServerboundContainerClickPacket rj
	buttonNum c
	clickType f
	containerId a
	itemStack e
	slotNum b
	uid d
	getButtonNum ()I d
	getClickType ()Lnet/minecraft/world/inventory/ClickType; g
	getContainerId ()I b
	getItem ()Lnet/minecraft/world/item/ItemStack; f
	getSlotNum ()I c
	getUid ()S e
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ServerGamePacketListener;)V a
	read (Lnet/minecraft/network/FriendlyByteBuf;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V b
net/minecraft/network/protocol/game/ServerboundContainerClosePacket rk
	containerId a
	getContainerId ()I b
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ServerGamePacketListener;)V a
	read (Lnet/minecraft/network/FriendlyByteBuf;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V b
net/minecraft/network/protocol/game/ServerboundCustomPayloadPacket rl
	BRAND a
	data c
	identifier b
	getData ()Lnet/minecraft/network/FriendlyByteBuf; c
	getIdentifier ()Lnet/minecraft/resources/ResourceLocation; b
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ServerGamePacketListener;)V a
	read (Lnet/minecraft/network/FriendlyByteBuf;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V b
net/minecraft/network/protocol/game/ServerboundEditBookPacket rm
	book a
	hand c
	signing b
	getBook ()Lnet/minecraft/world/item/ItemStack; b
	getHand ()Lnet/minecraft/world/InteractionHand; d
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ServerGamePacketListener;)V a
	isSigning ()Z c
	read (Lnet/minecraft/network/FriendlyByteBuf;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V b
net/minecraft/network/protocol/game/ServerboundEntityTagQuery rn
	entityId b
	transactionId a
	getEntityId ()I c
	getTransactionId ()I b
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ServerGamePacketListener;)V a
	read (Lnet/minecraft/network/FriendlyByteBuf;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V b
net/minecraft/network/protocol/game/ServerboundInteractPacket ro
	action b
	entityId a
	hand d
	location c
	usingSecondaryAction e
	getAction ()Lnet/minecraft/network/protocol/game/ServerboundInteractPacket$Action; b
	getHand ()Lnet/minecraft/world/InteractionHand; c
	getLocation ()Lnet/minecraft/world/phys/Vec3; d
	getTarget (Lnet/minecraft/world/level/Level;)Lnet/minecraft/world/entity/Entity; a
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ServerGamePacketListener;)V a
	isUsingSecondaryAction ()Z e
	read (Lnet/minecraft/network/FriendlyByteBuf;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V b
net/minecraft/network/protocol/game/ServerboundInteractPacket$Action ro$a
	$VALUES d
	ATTACK b
	INTERACT a
	INTERACT_AT c
net/minecraft/network/protocol/game/ServerboundJigsawGeneratePacket rp
	keepJigsaws c
	levels b
	pos a
	getPos ()Lnet/minecraft/core/BlockPos; b
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ServerGamePacketListener;)V a
	keepJigsaws ()Z d
	levels ()I c
	read (Lnet/minecraft/network/FriendlyByteBuf;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V b
net/minecraft/network/protocol/game/ServerboundKeepAlivePacket rq
	id a
	getId ()J b
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ServerGamePacketListener;)V a
	read (Lnet/minecraft/network/FriendlyByteBuf;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V b
net/minecraft/network/protocol/game/ServerboundLockDifficultyPacket rr
	locked a
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ServerGamePacketListener;)V a
	isLocked ()Z b
	read (Lnet/minecraft/network/FriendlyByteBuf;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V b
net/minecraft/network/protocol/game/ServerboundMovePlayerPacket rs
	hasPos g
	hasRot h
	onGround f
	x a
	xRot e
	y b
	yRot d
	z c
	getX (D)D a
	getXRot (F)F b
	getY (D)D b
	getYRot (F)F a
	getZ (D)D c
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ServerGamePacketListener;)V a
	hasPosition ()Z c
	hasRotation ()Z d
	isOnGround ()Z b
	read (Lnet/minecraft/network/FriendlyByteBuf;)V a
	setHasPosition (Z)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V b
net/minecraft/network/protocol/game/ServerboundMovePlayerPacket$Pos rs$a
	handle (Lnet/minecraft/network/PacketListener;)V a
	read (Lnet/minecraft/network/FriendlyByteBuf;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V b
net/minecraft/network/protocol/game/ServerboundMovePlayerPacket$PosRot rs$b
	handle (Lnet/minecraft/network/PacketListener;)V a
	read (Lnet/minecraft/network/FriendlyByteBuf;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V b
net/minecraft/network/protocol/game/ServerboundMovePlayerPacket$Rot rs$c
	handle (Lnet/minecraft/network/PacketListener;)V a
	read (Lnet/minecraft/network/FriendlyByteBuf;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V b
net/minecraft/network/protocol/game/ServerboundMoveVehiclePacket rt
	x a
	xRot e
	y b
	yRot d
	z c
	getX ()D b
	getXRot ()F f
	getY ()D c
	getYRot ()F e
	getZ ()D d
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ServerGamePacketListener;)V a
	read (Lnet/minecraft/network/FriendlyByteBuf;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V b
net/minecraft/network/protocol/game/ServerboundPaddleBoatPacket ru
	left a
	right b
	getLeft ()Z b
	getRight ()Z c
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ServerGamePacketListener;)V a
	read (Lnet/minecraft/network/FriendlyByteBuf;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V b
net/minecraft/network/protocol/game/ServerboundPickItemPacket rv
	slot a
	getSlot ()I b
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ServerGamePacketListener;)V a
	read (Lnet/minecraft/network/FriendlyByteBuf;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V b
net/minecraft/network/protocol/game/ServerboundPlaceRecipePacket rw
	containerId a
	recipe b
	shiftDown c
	getContainerId ()I b
	getRecipe ()Lnet/minecraft/resources/ResourceLocation; c
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ServerGamePacketListener;)V a
	isShiftDown ()Z d
	read (Lnet/minecraft/network/FriendlyByteBuf;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V b
net/minecraft/network/protocol/game/ServerboundPlayerAbilitiesPacket rx
	isFlying a
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ServerGamePacketListener;)V a
	isFlying ()Z b
	read (Lnet/minecraft/network/FriendlyByteBuf;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V b
net/minecraft/network/protocol/game/ServerboundPlayerActionPacket ry
	action c
	direction b
	pos a
	getAction ()Lnet/minecraft/network/protocol/game/ServerboundPlayerActionPacket$Action; d
	getDirection ()Lnet/minecraft/core/Direction; c
	getPos ()Lnet/minecraft/core/BlockPos; b
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ServerGamePacketListener;)V a
	read (Lnet/minecraft/network/FriendlyByteBuf;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V b
net/minecraft/network/protocol/game/ServerboundPlayerActionPacket$Action ry$a
	$VALUES h
	ABORT_DESTROY_BLOCK b
	DROP_ALL_ITEMS d
	DROP_ITEM e
	RELEASE_USE_ITEM f
	START_DESTROY_BLOCK a
	STOP_DESTROY_BLOCK c
	SWAP_ITEM_WITH_OFFHAND g
net/minecraft/network/protocol/game/ServerboundPlayerCommandPacket rz
	action b
	data c
	id a
	getAction ()Lnet/minecraft/network/protocol/game/ServerboundPlayerCommandPacket$Action; c
	getData ()I d
	getId ()I b
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ServerGamePacketListener;)V a
	read (Lnet/minecraft/network/FriendlyByteBuf;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V b
net/minecraft/network/protocol/game/ServerboundPlayerCommandPacket$Action rz$a
	$VALUES j
	OPEN_INVENTORY h
	PRESS_SHIFT_KEY a
	RELEASE_SHIFT_KEY b
	START_FALL_FLYING i
	START_RIDING_JUMP f
	START_SPRINTING d
	STOP_RIDING_JUMP g
	STOP_SLEEPING c
	STOP_SPRINTING e
net/minecraft/network/protocol/game/ServerboundPlayerInputPacket sa
	isJumping c
	isShiftKeyDown d
	xxa a
	zza b
	getXxa ()F b
	getZza ()F c
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ServerGamePacketListener;)V a
	isJumping ()Z d
	isShiftKeyDown ()Z e
	read (Lnet/minecraft/network/FriendlyByteBuf;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V b
net/minecraft/network/protocol/game/ServerboundRecipeBookUpdatePacket sb
	blastFurnaceFilteringCraftable h
	blastFurnaceGuiOpen g
	filteringCraftable d
	furnaceFilteringCraftable f
	furnaceGuiOpen e
	guiOpen c
	purpose a
	recipe b
	smokerFilteringCraftable j
	smokerGuiOpen i
	getPurpose ()Lnet/minecraft/network/protocol/game/ServerboundRecipeBookUpdatePacket$Purpose; b
	getRecipe ()Lnet/minecraft/resources/ResourceLocation; c
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ServerGamePacketListener;)V a
	isBlastFurnaceFilteringCraftable ()Z i
	isBlastFurnaceGuiOpen ()Z h
	isFilteringCraftable ()Z e
	isFurnaceFilteringCraftable ()Z g
	isFurnaceGuiOpen ()Z f
	isGuiOpen ()Z d
	isSmokerFilteringCraftable ()Z k
	isSmokerGuiOpen ()Z j
	read (Lnet/minecraft/network/FriendlyByteBuf;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V b
net/minecraft/network/protocol/game/ServerboundRecipeBookUpdatePacket$Purpose sb$a
	$VALUES c
	SETTINGS b
	SHOWN a
net/minecraft/network/protocol/game/ServerboundRenameItemPacket sc
	name a
	getName ()Ljava/lang/String; b
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ServerGamePacketListener;)V a
	read (Lnet/minecraft/network/FriendlyByteBuf;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V b
net/minecraft/network/protocol/game/ServerboundResourcePackPacket sd
	action a
	getAction ()Lnet/minecraft/network/protocol/game/ServerboundResourcePackPacket$Action; b
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ServerGamePacketListener;)V a
	read (Lnet/minecraft/network/FriendlyByteBuf;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V b
net/minecraft/network/protocol/game/ServerboundResourcePackPacket$Action sd$a
	$VALUES e
	ACCEPTED d
	DECLINED b
	FAILED_DOWNLOAD c
	SUCCESSFULLY_LOADED a
net/minecraft/network/protocol/game/ServerboundSeenAdvancementsPacket se
	action a
	tab b
	closedScreen ()Lnet/minecraft/network/protocol/game/ServerboundSeenAdvancementsPacket; b
	getAction ()Lnet/minecraft/network/protocol/game/ServerboundSeenAdvancementsPacket$Action; c
	getTab ()Lnet/minecraft/resources/ResourceLocation; d
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ServerGamePacketListener;)V a
	openedTab (Lnet/minecraft/advancements/Advancement;)Lnet/minecraft/network/protocol/game/ServerboundSeenAdvancementsPacket; a
	read (Lnet/minecraft/network/FriendlyByteBuf;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V b
net/minecraft/network/protocol/game/ServerboundSeenAdvancementsPacket$Action se$a
	$VALUES c
	CLOSED_SCREEN b
	OPENED_TAB a
net/minecraft/network/protocol/game/ServerboundSelectTradePacket sf
	item a
	getItem ()I b
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ServerGamePacketListener;)V a
	read (Lnet/minecraft/network/FriendlyByteBuf;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V b
net/minecraft/network/protocol/game/ServerboundSetBeaconPacket sg
	primary a
	secondary b
	getPrimary ()I b
	getSecondary ()I c
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ServerGamePacketListener;)V a
	read (Lnet/minecraft/network/FriendlyByteBuf;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V b
net/minecraft/network/protocol/game/ServerboundSetCarriedItemPacket sh
	slot a
	getSlot ()I b
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ServerGamePacketListener;)V a
	read (Lnet/minecraft/network/FriendlyByteBuf;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V b
net/minecraft/network/protocol/game/ServerboundSetCommandBlockPacket si
	automatic e
	command b
	conditional d
	mode f
	pos a
	trackOutput c
	getCommand ()Ljava/lang/String; c
	getMode ()Lnet/minecraft/world/level/block/entity/CommandBlockEntity$Mode; g
	getPos ()Lnet/minecraft/core/BlockPos; b
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ServerGamePacketListener;)V a
	isAutomatic ()Z f
	isConditional ()Z e
	isTrackOutput ()Z d
	read (Lnet/minecraft/network/FriendlyByteBuf;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V b
net/minecraft/network/protocol/game/ServerboundSetCommandMinecartPacket sj
	command b
	entity a
	trackOutput c
	getCommand ()Ljava/lang/String; b
	getCommandBlock (Lnet/minecraft/world/level/Level;)Lnet/minecraft/world/level/BaseCommandBlock; a
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ServerGamePacketListener;)V a
	isTrackOutput ()Z c
	read (Lnet/minecraft/network/FriendlyByteBuf;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V b
net/minecraft/network/protocol/game/ServerboundSetCreativeModeSlotPacket sk
	itemStack b
	slotNum a
	getItem ()Lnet/minecraft/world/item/ItemStack; c
	getSlotNum ()I b
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ServerGamePacketListener;)V a
	read (Lnet/minecraft/network/FriendlyByteBuf;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V b
net/minecraft/network/protocol/game/ServerboundSetJigsawBlockPacket sl
	finalState e
	joint f
	name b
	pool d
	pos a
	target c
	getFinalState ()Ljava/lang/String; f
	getJoint ()Lnet/minecraft/world/level/block/entity/JigsawBlockEntity$JointType; g
	getName ()Lnet/minecraft/resources/ResourceLocation; c
	getPool ()Lnet/minecraft/resources/ResourceLocation; e
	getPos ()Lnet/minecraft/core/BlockPos; b
	getTarget ()Lnet/minecraft/resources/ResourceLocation; d
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ServerGamePacketListener;)V a
	read (Lnet/minecraft/network/FriendlyByteBuf;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V b
net/minecraft/network/protocol/game/ServerboundSetStructureBlockPacket sm
	data i
	ignoreEntities j
	integrity m
	mirror g
	mode c
	name d
	offset e
	pos a
	rotation h
	seed n
	showAir k
	showBoundingBox l
	size f
	updateType b
	getData ()Ljava/lang/String; j
	getIntegrity ()F n
	getMirror ()Lnet/minecraft/world/level/block/Mirror; h
	getMode ()Lnet/minecraft/world/level/block/state/properties/StructureMode; d
	getName ()Ljava/lang/String; e
	getOffset ()Lnet/minecraft/core/BlockPos; f
	getPos ()Lnet/minecraft/core/BlockPos; b
	getRotation ()Lnet/minecraft/world/level/block/Rotation; i
	getSeed ()J o
	getSize ()Lnet/minecraft/core/BlockPos; g
	getUpdateType ()Lnet/minecraft/world/level/block/entity/StructureBlockEntity$UpdateType; c
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ServerGamePacketListener;)V a
	isIgnoreEntities ()Z k
	isShowAir ()Z l
	isShowBoundingBox ()Z m
	read (Lnet/minecraft/network/FriendlyByteBuf;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V b
net/minecraft/network/protocol/game/ServerboundSignUpdatePacket sn
	lines b
	pos a
	getLines ()[Ljava/lang/String; c
	getPos ()Lnet/minecraft/core/BlockPos; b
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ServerGamePacketListener;)V a
	read (Lnet/minecraft/network/FriendlyByteBuf;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V b
net/minecraft/network/protocol/game/ServerboundSwingPacket so
	hand a
	getHand ()Lnet/minecraft/world/InteractionHand; b
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ServerGamePacketListener;)V a
	read (Lnet/minecraft/network/FriendlyByteBuf;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V b
net/minecraft/network/protocol/game/ServerboundTeleportToEntityPacket sp
	uuid a
	getEntity (Lnet/minecraft/server/level/ServerLevel;)Lnet/minecraft/world/entity/Entity; a
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ServerGamePacketListener;)V a
	read (Lnet/minecraft/network/FriendlyByteBuf;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V b
net/minecraft/network/protocol/game/ServerboundUseItemOnPacket sq
	blockHit a
	hand b
	getHand ()Lnet/minecraft/world/InteractionHand; b
	getHitResult ()Lnet/minecraft/world/phys/BlockHitResult; c
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ServerGamePacketListener;)V a
	read (Lnet/minecraft/network/FriendlyByteBuf;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V b
net/minecraft/network/protocol/game/ServerboundUseItemPacket sr
	hand a
	getHand ()Lnet/minecraft/world/InteractionHand; b
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ServerGamePacketListener;)V a
	read (Lnet/minecraft/network/FriendlyByteBuf;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V b
net/minecraft/network/protocol/handshake/ClientIntentionPacket st
	hostName b
	intention d
	port c
	protocolVersion a
	getHostName ()Ljava/lang/String; d
	getIntention ()Lnet/minecraft/network/ConnectionProtocol; b
	getPort ()I e
	getProtocolVersion ()I c
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/handshake/ServerHandshakePacketListener;)V a
	read (Lnet/minecraft/network/FriendlyByteBuf;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V b
net/minecraft/network/protocol/handshake/ServerHandshakePacketListener su
	handleIntention (Lnet/minecraft/network/protocol/handshake/ClientIntentionPacket;)V a
net/minecraft/network/protocol/login/ClientLoginPacketListener sw
	handleCompression (Lnet/minecraft/network/protocol/login/ClientboundLoginCompressionPacket;)V a
	handleCustomQuery (Lnet/minecraft/network/protocol/login/ClientboundCustomQueryPacket;)V a
	handleDisconnect (Lnet/minecraft/network/protocol/login/ClientboundLoginDisconnectPacket;)V a
	handleGameProfile (Lnet/minecraft/network/protocol/login/ClientboundGameProfilePacket;)V a
	handleHello (Lnet/minecraft/network/protocol/login/ClientboundHelloPacket;)V a
net/minecraft/network/protocol/login/ClientboundCustomQueryPacket sx
	data c
	identifier b
	transactionId a
	getData ()Lnet/minecraft/network/FriendlyByteBuf; d
	getIdentifier ()Lnet/minecraft/resources/ResourceLocation; c
	getTransactionId ()I b
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/login/ClientLoginPacketListener;)V a
	read (Lnet/minecraft/network/FriendlyByteBuf;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V b
net/minecraft/network/protocol/login/ClientboundGameProfilePacket sy
	gameProfile a
	getGameProfile ()Lcom/mojang/authlib/GameProfile; b
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/login/ClientLoginPacketListener;)V a
	read (Lnet/minecraft/network/FriendlyByteBuf;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V b
net/minecraft/network/protocol/login/ClientboundHelloPacket sz
	nonce c
	publicKey b
	serverId a
	getNonce ()[B d
	getPublicKey ()Ljava/security/PublicKey; c
	getServerId ()Ljava/lang/String; b
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/login/ClientLoginPacketListener;)V a
	read (Lnet/minecraft/network/FriendlyByteBuf;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V b
net/minecraft/network/protocol/login/ClientboundLoginCompressionPacket ta
	compressionThreshold a
	getCompressionThreshold ()I b
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/login/ClientLoginPacketListener;)V a
	read (Lnet/minecraft/network/FriendlyByteBuf;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V b
net/minecraft/network/protocol/login/ClientboundLoginDisconnectPacket tb
	reason a
	getReason ()Lnet/minecraft/network/chat/Component; b
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/login/ClientLoginPacketListener;)V a
	read (Lnet/minecraft/network/FriendlyByteBuf;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V b
net/minecraft/network/protocol/login/ServerLoginPacketListener tc
	handleCustomQueryPacket (Lnet/minecraft/network/protocol/login/ServerboundCustomQueryPacket;)V a
	handleHello (Lnet/minecraft/network/protocol/login/ServerboundHelloPacket;)V a
	handleKey (Lnet/minecraft/network/protocol/login/ServerboundKeyPacket;)V a
net/minecraft/network/protocol/login/ServerboundCustomQueryPacket td
	data b
	transactionId a
	getData ()Lnet/minecraft/network/FriendlyByteBuf; c
	getTransactionId ()I b
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/login/ServerLoginPacketListener;)V a
	read (Lnet/minecraft/network/FriendlyByteBuf;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V b
net/minecraft/network/protocol/login/ServerboundHelloPacket te
	gameProfile a
	getGameProfile ()Lcom/mojang/authlib/GameProfile; b
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/login/ServerLoginPacketListener;)V a
	read (Lnet/minecraft/network/FriendlyByteBuf;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V b
net/minecraft/network/protocol/login/ServerboundKeyPacket tf
	keybytes a
	nonce b
	getNonce (Ljava/security/PrivateKey;)[B b
	getSecretKey (Ljava/security/PrivateKey;)Ljavax/crypto/SecretKey; a
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/login/ServerLoginPacketListener;)V a
	read (Lnet/minecraft/network/FriendlyByteBuf;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V b
net/minecraft/network/protocol/status/ClientStatusPacketListener ti
	handlePongResponse (Lnet/minecraft/network/protocol/status/ClientboundPongResponsePacket;)V a
	handleStatusResponse (Lnet/minecraft/network/protocol/status/ClientboundStatusResponsePacket;)V a
net/minecraft/network/protocol/status/ClientboundPongResponsePacket tj
	time a
	getTime ()J b
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/status/ClientStatusPacketListener;)V a
	read (Lnet/minecraft/network/FriendlyByteBuf;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V b
net/minecraft/network/protocol/status/ClientboundStatusResponsePacket tk
	GSON a
	status b
	getStatus ()Lnet/minecraft/network/protocol/status/ServerStatus; b
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/status/ClientStatusPacketListener;)V a
	read (Lnet/minecraft/network/FriendlyByteBuf;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V b
net/minecraft/network/protocol/status/ServerStatus tl
	description a
	favicon d
	players b
	version c
	getDescription ()Lnet/minecraft/network/chat/Component; a
	getFavicon ()Ljava/lang/String; d
	getPlayers ()Lnet/minecraft/network/protocol/status/ServerStatus$Players; b
	getVersion ()Lnet/minecraft/network/protocol/status/ServerStatus$Version; c
	setDescription (Lnet/minecraft/network/chat/Component;)V a
	setFavicon (Ljava/lang/String;)V a
	setPlayers (Lnet/minecraft/network/protocol/status/ServerStatus$Players;)V a
	setVersion (Lnet/minecraft/network/protocol/status/ServerStatus$Version;)V a
net/minecraft/network/protocol/status/ServerStatus$Players tl$a
	maxPlayers a
	numPlayers b
	sample c
	getMaxPlayers ()I a
	getNumPlayers ()I b
	getSample ()[Lcom/mojang/authlib/GameProfile; c
	setSample ([Lcom/mojang/authlib/GameProfile;)V a
net/minecraft/network/protocol/status/ServerStatus$Players$Serializer tl$a$a
	deserialize (Lcom/google/gson/JsonElement;Ljava/lang/reflect/Type;Lcom/google/gson/JsonDeserializationContext;)Lnet/minecraft/network/protocol/status/ServerStatus$Players; a
	serialize (Lnet/minecraft/network/protocol/status/ServerStatus$Players;Ljava/lang/reflect/Type;Lcom/google/gson/JsonSerializationContext;)Lcom/google/gson/JsonElement; a
net/minecraft/network/protocol/status/ServerStatus$Serializer tl$b
	deserialize (Lcom/google/gson/JsonElement;Ljava/lang/reflect/Type;Lcom/google/gson/JsonDeserializationContext;)Lnet/minecraft/network/protocol/status/ServerStatus; a
	serialize (Lnet/minecraft/network/protocol/status/ServerStatus;Ljava/lang/reflect/Type;Lcom/google/gson/JsonSerializationContext;)Lcom/google/gson/JsonElement; a
net/minecraft/network/protocol/status/ServerStatus$Version tl$c
	name a
	protocol b
	getName ()Ljava/lang/String; a
	getProtocol ()I b
net/minecraft/network/protocol/status/ServerStatus$Version$Serializer tl$c$a
	deserialize (Lcom/google/gson/JsonElement;Ljava/lang/reflect/Type;Lcom/google/gson/JsonDeserializationContext;)Lnet/minecraft/network/protocol/status/ServerStatus$Version; a
	serialize (Lnet/minecraft/network/protocol/status/ServerStatus$Version;Ljava/lang/reflect/Type;Lcom/google/gson/JsonSerializationContext;)Lcom/google/gson/JsonElement; a
net/minecraft/network/protocol/status/ServerStatusPacketListener tm
	handlePingRequest (Lnet/minecraft/network/protocol/status/ServerboundPingRequestPacket;)V a
	handleStatusRequest (Lnet/minecraft/network/protocol/status/ServerboundStatusRequestPacket;)V a
net/minecraft/network/protocol/status/ServerboundPingRequestPacket tn
	time a
	getTime ()J b
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/status/ServerStatusPacketListener;)V a
	read (Lnet/minecraft/network/FriendlyByteBuf;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V b
net/minecraft/network/protocol/status/ServerboundStatusRequestPacket to
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/status/ServerStatusPacketListener;)V a
	read (Lnet/minecraft/network/FriendlyByteBuf;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V b
net/minecraft/network/syncher/EntityDataAccessor tq
	id a
	serializer b
	getId ()I a
	getSerializer ()Lnet/minecraft/network/syncher/EntityDataSerializer; b
net/minecraft/network/syncher/EntityDataSerializer tr
	copy (Ljava/lang/Object;)Ljava/lang/Object; a
	createAccessor (I)Lnet/minecraft/network/syncher/EntityDataAccessor; a
	read (Lnet/minecraft/network/FriendlyByteBuf;)Ljava/lang/Object; a
	write (Lnet/minecraft/network/FriendlyByteBuf;Ljava/lang/Object;)V a
net/minecraft/network/syncher/EntityDataSerializers ts
	BLOCK_POS l
	BLOCK_STATE h
	BOOLEAN i
	BYTE a
	COMPONENT e
	COMPOUND_TAG p
	DIRECTION n
	FLOAT c
	INT b
	ITEM_STACK g
	OPTIONAL_BLOCK_POS m
	OPTIONAL_COMPONENT f
	OPTIONAL_UNSIGNED_INT r
	OPTIONAL_UUID o
	PARTICLE j
	POSE s
	ROTATIONS k
	SERIALIZERS t
	STRING d
	VILLAGER_DATA q
	getSerializedId (Lnet/minecraft/network/syncher/EntityDataSerializer;)I b
	getSerializer (I)Lnet/minecraft/network/syncher/EntityDataSerializer; a
	registerSerializer (Lnet/minecraft/network/syncher/EntityDataSerializer;)V a
net/minecraft/network/syncher/SynchedEntityData tt
	ENTITY_ID_POOL b
	LOGGER a
	entity c
	isDirty g
	isEmpty f
	itemsById d
	lock e
	assignValue (Lnet/minecraft/network/syncher/SynchedEntityData$DataItem;Lnet/minecraft/network/syncher/SynchedEntityData$DataItem;)V a
	assignValues (Ljava/util/List;)V a
	clearDirty ()V e
	createDataItem (Lnet/minecraft/network/syncher/EntityDataAccessor;Ljava/lang/Object;)V c
	define (Lnet/minecraft/network/syncher/EntityDataAccessor;Ljava/lang/Object;)V a
	defineId (Ljava/lang/Class;Lnet/minecraft/network/syncher/EntityDataSerializer;)Lnet/minecraft/network/syncher/EntityDataAccessor; a
	genericHelper (Lnet/minecraft/network/FriendlyByteBuf;ILnet/minecraft/network/syncher/EntityDataSerializer;)Lnet/minecraft/network/syncher/SynchedEntityData$DataItem; a
	get (Lnet/minecraft/network/syncher/EntityDataAccessor;)Ljava/lang/Object; a
	getAll ()Ljava/util/List; c
	getItem (Lnet/minecraft/network/syncher/EntityDataAccessor;)Lnet/minecraft/network/syncher/SynchedEntityData$DataItem; b
	isDirty ()Z a
	isEmpty ()Z d
	pack (Ljava/util/List;Lnet/minecraft/network/FriendlyByteBuf;)V a
	packDirty ()Ljava/util/List; b
	set (Lnet/minecraft/network/syncher/EntityDataAccessor;Ljava/lang/Object;)V b
	unpack (Lnet/minecraft/network/FriendlyByteBuf;)Ljava/util/List; a
	writeDataItem (Lnet/minecraft/network/FriendlyByteBuf;Lnet/minecraft/network/syncher/SynchedEntityData$DataItem;)V a
net/minecraft/network/syncher/SynchedEntityData$DataItem tt$a
	accessor a
	dirty c
	value b
	copy ()Lnet/minecraft/network/syncher/SynchedEntityData$DataItem; d
	getAccessor ()Lnet/minecraft/network/syncher/EntityDataAccessor; a
	getValue ()Ljava/lang/Object; b
	isDirty ()Z c
	setDirty (Z)V a
	setValue (Ljava/lang/Object;)V a
net/minecraft/realms/DisconnectedRealmsScreen eqb
	lines c
	parent p
	reason b
	textHeight q
	title a
	init ()V b
	keyPressed (III)Z a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V a
net/minecraft/realms/NarrationHelper eqc
	REPEATED_NARRATOR a
	fixNarrationNewlines (Ljava/lang/String;)Ljava/lang/String; c
	join (Ljava/lang/Iterable;)Ljava/lang/String; b
	now (Ljava/lang/Iterable;)V a
	now (Ljava/lang/String;)V a
	now ([Ljava/lang/String;)V a
	repeatedly (Ljava/lang/String;)V b
net/minecraft/realms/RealmsBridge eqd
	previousScreen a
	getNotificationScreen (Lnet/minecraft/client/gui/screens/Screen;)Lnet/minecraft/realms/RealmsScreen; b
	init ()V b
	switchToRealms (Lnet/minecraft/client/gui/screens/Screen;)V a
net/minecraft/realms/RealmsConnect eqe
	LOGGER a
	aborted c
	connection d
	onlineScreen b
	abort ()V a
	connect (Ljava/lang/String;I)V a
	tick ()V b
net/minecraft/realms/RealmsLabel eqf
	color d
	text a
	x b
	y c
	getText ()Ljava/lang/String; a
	render (Lnet/minecraft/client/gui/screens/Screen;Lcom/mojang/blaze3d/vertex/PoseStack;)V a
net/minecraft/realms/RealmsObjectSelectionList eqg
	addEntry (Lnet/minecraft/client/gui/components/AbstractSelectionList$Entry;)I b
	addEntry (Lnet/minecraft/client/gui/components/ObjectSelectionList$Entry;)I a
	clear ()V a
	getItemCount ()I l
	getMaxPosition ()I c
	getRowLeft ()I q
	getRowTop (I)I h
	getRowWidth ()I d
	getScrollbarPosition ()I e
	itemClicked (IIDDI)V a
	replaceEntries (Ljava/util/Collection;)V a
	selectItem (I)V a
	setSelectedItem (I)V j
net/minecraft/realms/RealmsScreen eqh
	narrateLabels ()V u
	row (I)I k
	tick ()V d
net/minecraft/realms/RealmsServerAddress eqi
	host a
	port b
	getHost ()Ljava/lang/String; a
	getPort ()I b
	parseString (Ljava/lang/String;)Lnet/minecraft/realms/RealmsServerAddress; a
net/minecraft/realms/RepeatedNarrator eqj
	params b
	permitsPerSecond a
	narrate (Ljava/lang/String;)V a
net/minecraft/realms/RepeatedNarrator$Params eqj$a
	narration a
	rateLimiter b
net/minecraft/recipebook/PlaceRecipe tx
	addItemToSlot (Ljava/util/Iterator;IIII)V a
	placeRecipe (IIILnet/minecraft/world/item/crafting/Recipe;Ljava/util/Iterator;I)V a
net/minecraft/recipebook/ServerPlaceRecipe ty
	LOGGER a
	inventory c
	menu d
	stackedContents b
	addItemToSlot (Ljava/util/Iterator;IIII)V a
	clearGrid ()V a
	getAmountOfFreeSlotsInInventory ()I c
	getStackSize (ZIZ)I a
	handleRecipeClicked (Lnet/minecraft/world/item/crafting/Recipe;Z)V a
	moveItemToGrid (Lnet/minecraft/world/inventory/Slot;Lnet/minecraft/world/item/ItemStack;)V a
	moveItemToInventory (I)V a
	recipeClicked (Lnet/minecraft/server/level/ServerPlayer;Lnet/minecraft/world/item/crafting/Recipe;Z)V a
	testClearGrid ()Z b
net/minecraft/recipebook/ServerPlaceSmeltingRecipe tz
	recipeMatchesPlaced e
	clearGrid ()V a
	handleRecipeClicked (Lnet/minecraft/world/item/crafting/Recipe;Z)V a
	placeRecipe (ILit/unimi/dsi/fastutil/ints/IntList;)V a
net/minecraft/resources/DelegatingOps ub
	delegate a
net/minecraft/resources/RegistryDataPackCodec uc
	directCodec a
	elementCodec c
	registryKey b
	create (Lnet/minecraft/resources/ResourceKey;Lcom/mojang/serialization/Lifecycle;Lcom/mojang/serialization/MapCodec;)Lnet/minecraft/resources/RegistryDataPackCodec; a
	encode (Lnet/minecraft/core/MappedRegistry;Lcom/mojang/serialization/DynamicOps;Ljava/lang/Object;)Lcom/mojang/serialization/DataResult; a
net/minecraft/resources/RegistryFileCodec ud
	elementCodec b
	registryKey a
	create (Lnet/minecraft/resources/ResourceKey;Lcom/mojang/serialization/MapCodec;)Lnet/minecraft/resources/RegistryFileCodec; a
	encode (Ljava/util/function/Supplier;Lcom/mojang/serialization/DynamicOps;Ljava/lang/Object;)Lcom/mojang/serialization/DataResult; a
net/minecraft/resources/RegistryReadOps ue
	LOGGER b
	readCache e
	registryHolder d
	resourceManager c
	create (Lcom/mojang/serialization/DynamicOps;Lnet/minecraft/server/packs/resources/ResourceManager;Lnet/minecraft/core/RegistryAccess;)Lnet/minecraft/resources/RegistryReadOps; a
	decodeElement (Ljava/lang/Object;Lnet/minecraft/resources/ResourceKey;Lcom/mojang/serialization/MapCodec;)Lcom/mojang/serialization/DataResult; a
	decodeElements (Lnet/minecraft/core/MappedRegistry;Lnet/minecraft/resources/ResourceKey;Lcom/mojang/serialization/MapCodec;)Lcom/mojang/serialization/DataResult; a
	readAndRegisterElement (Lnet/minecraft/resources/ResourceKey;Lnet/minecraft/core/WritableRegistry;Lcom/mojang/serialization/MapCodec;Lnet/minecraft/resources/ResourceLocation;)Lcom/mojang/serialization/DataResult; a
	readCache (Lnet/minecraft/resources/ResourceKey;)Lnet/minecraft/resources/RegistryReadOps$ReadCache; a
	readElementFromFile (Lnet/minecraft/resources/ResourceKey;Lnet/minecraft/resources/ResourceKey;Lcom/mojang/serialization/MapCodec;)Lcom/mojang/serialization/DataResult; a
net/minecraft/resources/RegistryReadOps$ReadCache ue$a
	values a
net/minecraft/resources/RegistryWriteOps uf
	registryHolder b
	create (Lcom/mojang/serialization/DynamicOps;Lnet/minecraft/core/RegistryAccess;)Lnet/minecraft/resources/RegistryWriteOps; a
	encode (Ljava/lang/Object;Ljava/lang/Object;Lnet/minecraft/resources/ResourceKey;Lcom/mojang/serialization/MapCodec;)Lcom/mojang/serialization/DataResult; a
net/minecraft/resources/ResourceKey ug
	VALUES a
	location c
	registryName b
	create (Lnet/minecraft/resources/ResourceKey;Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/resources/ResourceKey; a
	create (Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/resources/ResourceKey; a
	createRegistryKey (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/resources/ResourceKey; a
	elementKey (Lnet/minecraft/resources/ResourceKey;)Ljava/util/function/Function; a
	location ()Lnet/minecraft/resources/ResourceLocation; a
net/minecraft/resources/ResourceLocation uh
	CODEC a
	ERROR_INVALID d
	namespace b
	path c
	compareTo (Lnet/minecraft/resources/ResourceLocation;)I a
	decompose (Ljava/lang/String;C)[Ljava/lang/String; b
	getNamespace ()Ljava/lang/String; b
	getPath ()Ljava/lang/String; a
	isAllowedInResourceLocation (C)Z a
	isValidNamespace (Ljava/lang/String;)Z e
	isValidPath (Ljava/lang/String;)Z d
	isValidResourceLocation (Ljava/lang/String;)Z b
	of (Ljava/lang/String;C)Lnet/minecraft/resources/ResourceLocation; a
	read (Lcom/mojang/brigadier/StringReader;)Lnet/minecraft/resources/ResourceLocation; a
	read (Ljava/lang/String;)Lcom/mojang/serialization/DataResult; c
	toDebugFileName ()Ljava/lang/String; c
	tryParse (Ljava/lang/String;)Lnet/minecraft/resources/ResourceLocation; a
	validNamespaceChar (C)Z c
	validPathChar (C)Z b
net/minecraft/resources/ResourceLocation$Serializer uh$a
	deserialize (Lcom/google/gson/JsonElement;Ljava/lang/reflect/Type;Lcom/google/gson/JsonDeserializationContext;)Lnet/minecraft/resources/ResourceLocation; a
	serialize (Lnet/minecraft/resources/ResourceLocation;Ljava/lang/reflect/Type;Lcom/google/gson/JsonSerializationContext;)Lcom/google/gson/JsonElement; a
net/minecraft/server/Bootstrap uj
	LOGGER c
	STDOUT a
	isBootstrapped b
	bootStrap ()V a
	checkGameruleTranslations (Ljava/util/Set;)V a
	checkTranslations (Ljava/lang/Iterable;Ljava/util/function/Function;Ljava/util/Set;)V a
	getMissingTranslations ()Ljava/util/Set; b
	realStdoutPrintln (Ljava/lang/String;)V a
	validate ()V c
	wrapStreams ()V d
net/minecraft/server/ChainedJsonException uk
	entries a
	message b
	forException (Ljava/lang/Exception;)Lnet/minecraft/server/ChainedJsonException; a
	prependJsonKey (Ljava/lang/String;)V a
	setFilenameAndFlush (Ljava/lang/String;)V b
net/minecraft/server/ChainedJsonException$Entry uk$a
	filename a
	jsonKeys b
	addJsonKey (Ljava/lang/String;)V a
	getFilename ()Ljava/lang/String; a
	getJsonKeys ()Ljava/lang/String; b
net/minecraft/server/ConsoleInput ul
	msg a
	source b
net/minecraft/server/ConsoleInputSource um
	info (Ljava/lang/String;)V a
	warn (Ljava/lang/String;)V b
net/minecraft/server/DebugLoggedPrintStream un
	logLine (Ljava/lang/String;)V a
net/minecraft/server/Eula uo
	LOGGER a
	agreed c
	file b
	hasAgreedToEULA ()Z a
	readFile ()Z b
	saveDefaults ()V c
net/minecraft/server/LoggedPrintStream up
	LOGGER a
	name b
	logLine (Ljava/lang/String;)V a
net/minecraft/server/PlayerAdvancements uq
	GSON b
	LOGGER a
	TYPE_TOKEN c
	advancements g
	dataFixer d
	file f
	isFirstPacket m
	lastSelectedTab l
	player k
	playerList e
	progressChanged j
	visibilityChanged i
	visible h
	award (Lnet/minecraft/advancements/Advancement;Ljava/lang/String;)Z a
	checkForAutomaticTriggers (Lnet/minecraft/server/ServerAdvancementManager;)V c
	ensureAllVisible ()V c
	ensureVisibility (Lnet/minecraft/advancements/Advancement;)V e
	flushDirty (Lnet/minecraft/server/level/ServerPlayer;)V b
	getOrStartProgress (Lnet/minecraft/advancements/Advancement;)Lnet/minecraft/advancements/AdvancementProgress; b
	hasCompletedChildrenOrSelf (Lnet/minecraft/advancements/Advancement;)Z g
	load (Lnet/minecraft/server/ServerAdvancementManager;)V d
	registerListeners (Lnet/minecraft/advancements/Advancement;)V c
	registerListeners (Lnet/minecraft/server/ServerAdvancementManager;)V b
	reload (Lnet/minecraft/server/ServerAdvancementManager;)V a
	revoke (Lnet/minecraft/advancements/Advancement;Ljava/lang/String;)Z b
	save ()V b
	setPlayer (Lnet/minecraft/server/level/ServerPlayer;)V a
	setSelectedTab (Lnet/minecraft/advancements/Advancement;)V a
	shouldBeVisible (Lnet/minecraft/advancements/Advancement;)Z f
	startProgress (Lnet/minecraft/advancements/Advancement;Lnet/minecraft/advancements/AdvancementProgress;)V a
	stopListening ()V a
	unregisterListeners (Lnet/minecraft/advancements/Advancement;)V d
net/minecraft/server/RunningOnDifferentThreadException ur
	RUNNING_ON_DIFFERENT_THREAD a
net/minecraft/server/ServerAdvancementManager us
	GSON b
	LOGGER a
	advancements c
	predicateManager d
	apply (Ljava/lang/Object;Lnet/minecraft/server/packs/resources/ResourceManager;Lnet/minecraft/util/profiling/ProfilerFiller;)V a
	apply (Ljava/util/Map;Lnet/minecraft/server/packs/resources/ResourceManager;Lnet/minecraft/util/profiling/ProfilerFiller;)V a
	getAdvancement (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/advancements/Advancement; a
	getAllAdvancements ()Ljava/util/Collection; a
net/minecraft/server/ServerFunctionLibrary ut
	LOGGER a
	PATH_PREFIX_LENGTH b
	PATH_SUFFIX_LENGTH c
	dispatcher g
	functionCompilationLevel f
	functions d
	tags e
	getFunction (Lnet/minecraft/resources/ResourceLocation;)Ljava/util/Optional; a
	getFunctions ()Ljava/util/Map; a
	getTag (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/tags/Tag; b
	getTags ()Lnet/minecraft/tags/TagCollection; b
	readLines (Lnet/minecraft/server/packs/resources/ResourceManager;Lnet/minecraft/resources/ResourceLocation;)Ljava/util/List; a
	reload (Lnet/minecraft/server/packs/resources/PreparableReloadListener$PreparationBarrier;Lnet/minecraft/server/packs/resources/ResourceManager;Lnet/minecraft/util/profiling/ProfilerFiller;Lnet/minecraft/util/profiling/ProfilerFiller;Ljava/util/concurrent/Executor;Ljava/util/concurrent/Executor;)Ljava/util/concurrent/CompletableFuture; a
net/minecraft/server/ServerFunctionManager uu
	LOAD_FUNCTION_TAG b
	TICK_FUNCTION_TAG a
	commandQueue e
	isInFunction d
	library i
	nestedCalls f
	postReload h
	server c
	ticking g
	execute (Lnet/minecraft/commands/CommandFunction;Lnet/minecraft/commands/CommandSourceStack;)I a
	executeTagFunctions (Ljava/util/Collection;Lnet/minecraft/resources/ResourceLocation;)V a
	get (Lnet/minecraft/resources/ResourceLocation;)Ljava/util/Optional; a
	getCommandLimit ()I b
	getDispatcher ()Lcom/mojang/brigadier/CommandDispatcher; c
	getFunctionNames ()Ljava/lang/Iterable; f
	getGameLoopSender ()Lnet/minecraft/commands/CommandSourceStack; e
	getServer ()Lnet/minecraft/server/MinecraftServer; a
	getTag (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/tags/Tag; b
	getTagNames ()Ljava/lang/Iterable; g
	postReload (Lnet/minecraft/server/ServerFunctionLibrary;)V b
	replaceLibrary (Lnet/minecraft/server/ServerFunctionLibrary;)V a
	tick ()V d
net/minecraft/server/ServerFunctionManager$QueuedCommand uu$a
	entry c
	manager a
	sender b
	execute (Ljava/util/ArrayDeque;I)V a
net/minecraft/server/ServerInterface uv
	getLevelIdName ()Ljava/lang/String; k_
	getMaxPlayers ()I I
	getPlayerCount ()I H
	getPlayerNames ()[Ljava/lang/String; J
	getPluginNames ()Ljava/lang/String; j_
	getProperties ()Lnet/minecraft/server/dedicated/DedicatedServerProperties; g_
	getServerIp ()Ljava/lang/String; h_
	getServerName ()Ljava/lang/String; i_
	getServerPort ()I o
	getServerVersion ()Ljava/lang/String; G
	runCommand (Ljava/lang/String;)Ljava/lang/String; a
net/minecraft/server/ServerResources uw
	DATA_RELOAD_INITIAL_TASK a
	advancements h
	commands c
	functionLibrary i
	lootTables g
	predicateManager f
	recipes d
	resources b
	tags e
	getAdvancements ()Lnet/minecraft/server/ServerAdvancementManager; g
	getCommands ()Lnet/minecraft/commands/Commands; f
	getFunctionLibrary ()Lnet/minecraft/server/ServerFunctionLibrary; a
	getLootTables ()Lnet/minecraft/world/level/storage/loot/LootTables; c
	getPredicateManager ()Lnet/minecraft/world/level/storage/loot/PredicateManager; b
	getRecipeManager ()Lnet/minecraft/world/item/crafting/RecipeManager; e
	getResourceManager ()Lnet/minecraft/server/packs/resources/ResourceManager; h
	getTags ()Lnet/minecraft/tags/TagManager; d
	loadResources (Ljava/util/List;Lnet/minecraft/commands/Commands$CommandSelection;ILjava/util/concurrent/Executor;Ljava/util/concurrent/Executor;)Ljava/util/concurrent/CompletableFuture; a
	updateGlobals ()V i
net/minecraft/server/ServerScoreboard ux
	dirtyListeners c
	server a
	trackedObjectives b
	addDirtyListener (Ljava/lang/Runnable;)V a
	addPlayerToTeam (Ljava/lang/String;Lnet/minecraft/world/scores/PlayerTeam;)Z a
	getObjectiveDisplaySlotCount (Lnet/minecraft/world/scores/Objective;)I h
	getServer ()Lnet/minecraft/server/MinecraftServer; a
	getStartTrackingPackets (Lnet/minecraft/world/scores/Objective;)Ljava/util/List; d
	getStopTrackingPackets (Lnet/minecraft/world/scores/Objective;)Ljava/util/List; f
	onObjectiveAdded (Lnet/minecraft/world/scores/Objective;)V a
	onObjectiveChanged (Lnet/minecraft/world/scores/Objective;)V b
	onObjectiveRemoved (Lnet/minecraft/world/scores/Objective;)V c
	onPlayerRemoved (Ljava/lang/String;)V a
	onPlayerScoreRemoved (Ljava/lang/String;Lnet/minecraft/world/scores/Objective;)V a
	onScoreChanged (Lnet/minecraft/world/scores/Score;)V a
	onTeamAdded (Lnet/minecraft/world/scores/PlayerTeam;)V a
	onTeamChanged (Lnet/minecraft/world/scores/PlayerTeam;)V b
	onTeamRemoved (Lnet/minecraft/world/scores/PlayerTeam;)V c
	removePlayerFromTeam (Ljava/lang/String;Lnet/minecraft/world/scores/PlayerTeam;)V b
	setDirty ()V b
	setDisplayObjective (ILnet/minecraft/world/scores/Objective;)V a
	startTrackingObjective (Lnet/minecraft/world/scores/Objective;)V e
	stopTrackingObjective (Lnet/minecraft/world/scores/Objective;)V g
net/minecraft/server/ServerScoreboard$Method ux$a
	$VALUES c
	CHANGE a
	REMOVE b
net/minecraft/server/TickTask uy
	runnable b
	tick a
	getTick ()I a
net/minecraft/server/bossevents/CustomBossEvent uz
	id h
	max k
	players i
	value j
	addOfflinePlayer (Ljava/util/UUID;)V a
	addPlayer (Lnet/minecraft/server/level/ServerPlayer;)V a
	getDisplayName ()Lnet/minecraft/network/chat/Component; e
	getMax ()I d
	getTextId ()Lnet/minecraft/resources/ResourceLocation; a
	getValue ()I c
	load (Lnet/minecraft/nbt/CompoundTag;Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/server/bossevents/CustomBossEvent; a
	onPlayerConnect (Lnet/minecraft/server/level/ServerPlayer;)V c
	onPlayerDisconnect (Lnet/minecraft/server/level/ServerPlayer;)V d
	removeAllPlayers ()V b
	removePlayer (Lnet/minecraft/server/level/ServerPlayer;)V b
	save ()Lnet/minecraft/nbt/CompoundTag; f
	setMax (I)V b
	setPlayers (Ljava/util/Collection;)Z a
	setValue (I)V a
net/minecraft/server/bossevents/CustomBossEvents va
	events a
	create (Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/network/chat/Component;)Lnet/minecraft/server/bossevents/CustomBossEvent; a
	get (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/server/bossevents/CustomBossEvent; a
	getEvents ()Ljava/util/Collection; b
	getIds ()Ljava/util/Collection; a
	load (Lnet/minecraft/nbt/CompoundTag;)V a
	onPlayerConnect (Lnet/minecraft/server/level/ServerPlayer;)V a
	onPlayerDisconnect (Lnet/minecraft/server/level/ServerPlayer;)V b
	remove (Lnet/minecraft/server/bossevents/CustomBossEvent;)V a
	save ()Lnet/minecraft/nbt/CompoundTag; c
net/minecraft/server/commands/AdvancementCommands vc
	SUGGEST_ADVANCEMENTS a
	addChildren (Lnet/minecraft/advancements/Advancement;Ljava/util/List;)V a
	getAdvancements (Lnet/minecraft/advancements/Advancement;Lnet/minecraft/server/commands/AdvancementCommands$Mode;)Ljava/util/List; a
	perform (Lnet/minecraft/commands/CommandSourceStack;Ljava/util/Collection;Lnet/minecraft/server/commands/AdvancementCommands$Action;Ljava/util/Collection;)I a
	performCriterion (Lnet/minecraft/commands/CommandSourceStack;Ljava/util/Collection;Lnet/minecraft/server/commands/AdvancementCommands$Action;Lnet/minecraft/advancements/Advancement;Ljava/lang/String;)I a
	register (Lcom/mojang/brigadier/CommandDispatcher;)V a
net/minecraft/server/commands/AdvancementCommands$Action vc$a
	$VALUES d
	GRANT a
	REVOKE b
	key c
	getKey ()Ljava/lang/String; a
	perform (Lnet/minecraft/server/level/ServerPlayer;Ljava/lang/Iterable;)I a
	perform (Lnet/minecraft/server/level/ServerPlayer;Lnet/minecraft/advancements/Advancement;)Z a
	performCriterion (Lnet/minecraft/server/level/ServerPlayer;Lnet/minecraft/advancements/Advancement;Ljava/lang/String;)Z a
net/minecraft/server/commands/AdvancementCommands$Mode vc$b
	$VALUES h
	EVERYTHING e
	FROM c
	ONLY a
	THROUGH b
	UNTIL d
	children g
	parents f
net/minecraft/server/commands/AttributeCommand vd
	AVAILABLE_ATTRIBUTES a
	ERROR_MODIFIER_ALREADY_PRESENT e
	ERROR_NOT_LIVING_ENTITY b
	ERROR_NO_SUCH_ATTRIBUTE c
	ERROR_NO_SUCH_MODIFIER d
	addModifier (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/entity/ai/attributes/Attribute;Ljava/util/UUID;Ljava/lang/String;DLnet/minecraft/world/entity/ai/attributes/AttributeModifier$Operation;)I a
	getAttributeBase (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/entity/ai/attributes/Attribute;D)I b
	getAttributeInstance (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/entity/ai/attributes/Attribute;)Lnet/minecraft/world/entity/ai/attributes/AttributeInstance; a
	getAttributeModifier (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/entity/ai/attributes/Attribute;Ljava/util/UUID;D)I a
	getAttributeValue (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/entity/ai/attributes/Attribute;D)I a
	getEntityWithAttribute (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/entity/ai/attributes/Attribute;)Lnet/minecraft/world/entity/LivingEntity; b
	getLivingEntity (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/world/entity/LivingEntity; a
	register (Lcom/mojang/brigadier/CommandDispatcher;)V a
	removeModifier (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/entity/ai/attributes/Attribute;Ljava/util/UUID;)I a
	setAttributeBase (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/entity/ai/attributes/Attribute;D)I c
net/minecraft/server/commands/BanIpCommands ve
	ERROR_ALREADY_BANNED c
	ERROR_INVALID_IP b
	IP_ADDRESS_PATTERN a
	banIp (Lnet/minecraft/commands/CommandSourceStack;Ljava/lang/String;Lnet/minecraft/network/chat/Component;)I b
	banIpOrName (Lnet/minecraft/commands/CommandSourceStack;Ljava/lang/String;Lnet/minecraft/network/chat/Component;)I a
	register (Lcom/mojang/brigadier/CommandDispatcher;)V a
net/minecraft/server/commands/BanListCommands vf
	register (Lcom/mojang/brigadier/CommandDispatcher;)V a
	showList (Lnet/minecraft/commands/CommandSourceStack;Ljava/util/Collection;)I a
net/minecraft/server/commands/BanPlayerCommands vg
	ERROR_ALREADY_BANNED a
	banPlayers (Lnet/minecraft/commands/CommandSourceStack;Ljava/util/Collection;Lnet/minecraft/network/chat/Component;)I a
	register (Lcom/mojang/brigadier/CommandDispatcher;)V a
net/minecraft/server/commands/BossBarCommands vh
	ERROR_ALREADY_EXISTS b
	ERROR_ALREADY_HIDDEN j
	ERROR_ALREADY_VISIBLE k
	ERROR_DOESNT_EXIST c
	ERROR_NO_COLOR_CHANGE f
	ERROR_NO_MAX_CHANGE i
	ERROR_NO_NAME_CHANGE e
	ERROR_NO_PLAYER_CHANGE d
	ERROR_NO_STYLE_CHANGE g
	ERROR_NO_VALUE_CHANGE h
	SUGGEST_BOSS_BAR a
	createBar (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/network/chat/Component;)I a
	getBossBar (Lcom/mojang/brigadier/context/CommandContext;)Lnet/minecraft/server/bossevents/CustomBossEvent; a
	getMax (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/server/bossevents/CustomBossEvent;)I b
	getPlayers (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/server/bossevents/CustomBossEvent;)I d
	getValue (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/server/bossevents/CustomBossEvent;)I a
	getVisible (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/server/bossevents/CustomBossEvent;)I c
	listBars (Lnet/minecraft/commands/CommandSourceStack;)I a
	register (Lcom/mojang/brigadier/CommandDispatcher;)V a
	removeBar (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/server/bossevents/CustomBossEvent;)I e
	setColor (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/server/bossevents/CustomBossEvent;Lnet/minecraft/world/BossEvent$BossBarColor;)I a
	setMax (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/server/bossevents/CustomBossEvent;I)I b
	setName (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/server/bossevents/CustomBossEvent;Lnet/minecraft/network/chat/Component;)I a
	setPlayers (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/server/bossevents/CustomBossEvent;Ljava/util/Collection;)I a
	setStyle (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/server/bossevents/CustomBossEvent;Lnet/minecraft/world/BossEvent$BossBarOverlay;)I a
	setValue (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/server/bossevents/CustomBossEvent;I)I a
	setVisible (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/server/bossevents/CustomBossEvent;Z)I a
net/minecraft/server/commands/ClearInventoryCommands vi
	ERROR_MULTIPLE b
	ERROR_SINGLE a
	clearInventory (Lnet/minecraft/commands/CommandSourceStack;Ljava/util/Collection;Ljava/util/function/Predicate;I)I a
	register (Lcom/mojang/brigadier/CommandDispatcher;)V a
net/minecraft/server/commands/CloneCommands vj
	ERROR_AREA_TOO_LARGE c
	ERROR_FAILED d
	ERROR_OVERLAP b
	FILTER_AIR a
	clone (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;Ljava/util/function/Predicate;Lnet/minecraft/server/commands/CloneCommands$Mode;)I a
	register (Lcom/mojang/brigadier/CommandDispatcher;)V a
net/minecraft/server/commands/CloneCommands$CloneBlockInfo vj$a
	pos a
	state b
	tag c
net/minecraft/server/commands/CloneCommands$Mode vj$b
	$VALUES e
	FORCE a
	MOVE b
	NORMAL c
	canOverlap d
	canOverlap ()Z a
net/minecraft/server/commands/DataPackCommand vk
	ERROR_PACK_ALREADY_DISABLED c
	ERROR_PACK_ALREADY_ENABLED b
	ERROR_UNKNOWN_PACK a
	SELECTED_PACKS d
	UNSELECTED_PACKS e
	disablePack (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/server/packs/repository/Pack;)I a
	enablePack (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/server/packs/repository/Pack;Lnet/minecraft/server/commands/DataPackCommand$Inserter;)I a
	getPack (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;Z)Lnet/minecraft/server/packs/repository/Pack; a
	listAvailablePacks (Lnet/minecraft/commands/CommandSourceStack;)I b
	listEnabledPacks (Lnet/minecraft/commands/CommandSourceStack;)I c
	listPacks (Lnet/minecraft/commands/CommandSourceStack;)I a
	register (Lcom/mojang/brigadier/CommandDispatcher;)V a
net/minecraft/server/commands/DataPackCommand$Inserter vk$a
net/minecraft/server/commands/DeOpCommands vl
	ERROR_NOT_OP a
	deopPlayers (Lnet/minecraft/commands/CommandSourceStack;Ljava/util/Collection;)I a
	register (Lcom/mojang/brigadier/CommandDispatcher;)V a
net/minecraft/server/commands/DebugCommand vm
	ERROR_ALREADY_RUNNING c
	ERROR_NOT_RUNNING b
	LOGGER a
	ZIP_FS_PROVIDER d
	register (Lcom/mojang/brigadier/CommandDispatcher;)V a
	report (Lnet/minecraft/commands/CommandSourceStack;)I c
	start (Lnet/minecraft/commands/CommandSourceStack;)I a
	stop (Lnet/minecraft/commands/CommandSourceStack;)I b
net/minecraft/server/commands/DebugMobSpawningCommand vn
	register (Lcom/mojang/brigadier/CommandDispatcher;)V a
	spawnMobs (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/world/entity/MobCategory;Lnet/minecraft/core/BlockPos;)I a
net/minecraft/server/commands/DebugPathCommand vo
	ERROR_NOT_COMPLETE c
	ERROR_NOT_MOB a
	ERROR_NO_PATH b
	fillBlocks (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/core/BlockPos;)I a
	register (Lcom/mojang/brigadier/CommandDispatcher;)V a
net/minecraft/server/commands/DefaultGameModeCommands vp
	register (Lcom/mojang/brigadier/CommandDispatcher;)V a
	setMode (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/world/level/GameType;)I a
net/minecraft/server/commands/DifficultyCommand vq
	ERROR_ALREADY_DIFFICULT a
	register (Lcom/mojang/brigadier/CommandDispatcher;)V a
	setDifficulty (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/world/Difficulty;)I a
net/minecraft/server/commands/EffectCommands vr
	ERROR_CLEAR_EVERYTHING_FAILED b
	ERROR_CLEAR_SPECIFIC_FAILED c
	ERROR_GIVE_FAILED a
	clearEffect (Lnet/minecraft/commands/CommandSourceStack;Ljava/util/Collection;Lnet/minecraft/world/effect/MobEffect;)I a
	clearEffects (Lnet/minecraft/commands/CommandSourceStack;Ljava/util/Collection;)I a
	giveEffect (Lnet/minecraft/commands/CommandSourceStack;Ljava/util/Collection;Lnet/minecraft/world/effect/MobEffect;Ljava/lang/Integer;IZ)I a
	register (Lcom/mojang/brigadier/CommandDispatcher;)V a
net/minecraft/server/commands/EmoteCommands vs
	register (Lcom/mojang/brigadier/CommandDispatcher;)V a
net/minecraft/server/commands/EnchantCommand vt
	ERROR_INCOMPATIBLE c
	ERROR_LEVEL_TOO_HIGH d
	ERROR_NOTHING_HAPPENED e
	ERROR_NOT_LIVING_ENTITY a
	ERROR_NO_ITEM b
	enchant (Lnet/minecraft/commands/CommandSourceStack;Ljava/util/Collection;Lnet/minecraft/world/item/enchantment/Enchantment;I)I a
	register (Lcom/mojang/brigadier/CommandDispatcher;)V a
net/minecraft/server/commands/ExecuteCommand vu
	CALLBACK_CHAINER d
	ERROR_AREA_TOO_LARGE a
	ERROR_CONDITIONAL_FAILED b
	ERROR_CONDITIONAL_FAILED_COUNT c
	SUGGEST_PREDICATE e
	addConditional (Lcom/mojang/brigadier/tree/CommandNode;Lcom/mojang/brigadier/builder/ArgumentBuilder;ZLnet/minecraft/server/commands/ExecuteCommand$CommandPredicate;)Lcom/mojang/brigadier/builder/ArgumentBuilder; a
	addConditionals (Lcom/mojang/brigadier/tree/CommandNode;Lcom/mojang/brigadier/builder/LiteralArgumentBuilder;Z)Lcom/mojang/brigadier/builder/ArgumentBuilder; a
	addIfBlocksConditional (Lcom/mojang/brigadier/tree/CommandNode;Lcom/mojang/brigadier/builder/ArgumentBuilder;ZZ)Lcom/mojang/brigadier/builder/ArgumentBuilder; a
	checkCustomPredicate (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition;)Z a
	checkIfRegions (Lcom/mojang/brigadier/context/CommandContext;Z)I a
	checkMatchingData (Lnet/minecraft/server/commands/data/DataAccessor;Lnet/minecraft/commands/arguments/NbtPathArgument$NbtPath;)I a
	checkRegions (Lcom/mojang/brigadier/context/CommandContext;Z)Ljava/util/OptionalInt; c
	checkRegions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;Z)Ljava/util/OptionalInt; a
	checkScore (Lcom/mojang/brigadier/context/CommandContext;Ljava/util/function/BiPredicate;)Z a
	checkScore (Lcom/mojang/brigadier/context/CommandContext;Lnet/minecraft/advancements/critereon/MinMaxBounds$Ints;)Z a
	checkUnlessRegions (Lcom/mojang/brigadier/context/CommandContext;Z)I b
	createNumericConditionalHandler (ZLnet/minecraft/server/commands/ExecuteCommand$CommandNumericPredicate;)Lcom/mojang/brigadier/Command; a
	expect (Lcom/mojang/brigadier/context/CommandContext;ZZ)Ljava/util/Collection; a
	register (Lcom/mojang/brigadier/CommandDispatcher;)V a
	storeData (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/server/commands/data/DataAccessor;Lnet/minecraft/commands/arguments/NbtPathArgument$NbtPath;Ljava/util/function/IntFunction;Z)Lnet/minecraft/commands/CommandSourceStack; a
	storeValue (Lnet/minecraft/commands/CommandSourceStack;Ljava/util/Collection;Lnet/minecraft/world/scores/Objective;Z)Lnet/minecraft/commands/CommandSourceStack; a
	storeValue (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/server/bossevents/CustomBossEvent;ZZ)Lnet/minecraft/commands/CommandSourceStack; a
	wrapStores (Lcom/mojang/brigadier/tree/LiteralCommandNode;Lcom/mojang/brigadier/builder/LiteralArgumentBuilder;Z)Lcom/mojang/brigadier/builder/ArgumentBuilder; a
net/minecraft/server/commands/ExecuteCommand$CommandNumericPredicate vu$a
net/minecraft/server/commands/ExecuteCommand$CommandPredicate vu$b
net/minecraft/server/commands/ExperienceCommand vv
	ERROR_SET_POINTS_INVALID a
	addExperience (Lnet/minecraft/commands/CommandSourceStack;Ljava/util/Collection;ILnet/minecraft/server/commands/ExperienceCommand$Type;)I a
	queryExperience (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/server/level/ServerPlayer;Lnet/minecraft/server/commands/ExperienceCommand$Type;)I a
	register (Lcom/mojang/brigadier/CommandDispatcher;)V a
	setExperience (Lnet/minecraft/commands/CommandSourceStack;Ljava/util/Collection;ILnet/minecraft/server/commands/ExperienceCommand$Type;)I b
net/minecraft/server/commands/ExperienceCommand$Type vv$a
	$VALUES g
	LEVELS b
	POINTS a
	add c
	name e
	query f
	set d
net/minecraft/server/commands/FillCommand vw
	ERROR_AREA_TOO_LARGE a
	ERROR_FAILED c
	HOLLOW_CORE b
	fillBlocks (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Lnet/minecraft/commands/arguments/blocks/BlockInput;Lnet/minecraft/server/commands/FillCommand$Mode;Ljava/util/function/Predicate;)I a
	register (Lcom/mojang/brigadier/CommandDispatcher;)V a
net/minecraft/server/commands/FillCommand$Mode vw$a
	$VALUES f
	DESTROY d
	HOLLOW c
	OUTLINE b
	REPLACE a
	filter e
net/minecraft/server/commands/ForceLoadCommand vx
	ERROR_ALL_ADDED c
	ERROR_NONE_REMOVED d
	ERROR_NOT_TICKING b
	ERROR_TOO_MANY_CHUNKS a
	changeForceLoad (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/server/level/ColumnPos;Lnet/minecraft/server/level/ColumnPos;Z)I a
	listForceLoad (Lnet/minecraft/commands/CommandSourceStack;)I a
	queryForceLoad (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/server/level/ColumnPos;)I a
	register (Lcom/mojang/brigadier/CommandDispatcher;)V a
	removeAll (Lnet/minecraft/commands/CommandSourceStack;)I b
net/minecraft/server/commands/FunctionCommand vy
	SUGGEST_FUNCTION a
	register (Lcom/mojang/brigadier/CommandDispatcher;)V a
	runFunction (Lnet/minecraft/commands/CommandSourceStack;Ljava/util/Collection;)I a
net/minecraft/server/commands/GameModeCommand vz
	logGamemodeChange (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/server/level/ServerPlayer;Lnet/minecraft/world/level/GameType;)V a
	register (Lcom/mojang/brigadier/CommandDispatcher;)V a
	setMode (Lcom/mojang/brigadier/context/CommandContext;Ljava/util/Collection;Lnet/minecraft/world/level/GameType;)I a
net/minecraft/server/commands/GameRuleCommand wa
	queryRule (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/world/level/GameRules$Key;)I b
	register (Lcom/mojang/brigadier/CommandDispatcher;)V a
	setRule (Lcom/mojang/brigadier/context/CommandContext;Lnet/minecraft/world/level/GameRules$Key;)I b
net/minecraft/server/commands/GiveCommand wb
	giveItem (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/commands/arguments/item/ItemInput;Ljava/util/Collection;I)I a
	register (Lcom/mojang/brigadier/CommandDispatcher;)V a
net/minecraft/server/commands/HelpCommand wc
	ERROR_FAILED a
	register (Lcom/mojang/brigadier/CommandDispatcher;)V a
net/minecraft/server/commands/KickCommand wd
	kickPlayers (Lnet/minecraft/commands/CommandSourceStack;Ljava/util/Collection;Lnet/minecraft/network/chat/Component;)I a
	register (Lcom/mojang/brigadier/CommandDispatcher;)V a
net/minecraft/server/commands/KillCommand we
	kill (Lnet/minecraft/commands/CommandSourceStack;Ljava/util/Collection;)I a
	register (Lcom/mojang/brigadier/CommandDispatcher;)V a
net/minecraft/server/commands/ListPlayersCommand wf
	format (Lnet/minecraft/commands/CommandSourceStack;Ljava/util/function/Function;)I a
	listPlayers (Lnet/minecraft/commands/CommandSourceStack;)I a
	listPlayersWithUuids (Lnet/minecraft/commands/CommandSourceStack;)I b
	register (Lcom/mojang/brigadier/CommandDispatcher;)V a
net/minecraft/server/commands/LocateBiomeCommand wg
	ERROR_BIOME_NOT_FOUND b
	ERROR_INVALID_BIOME a
	locateBiome (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/resources/ResourceLocation;)I a
	register (Lcom/mojang/brigadier/CommandDispatcher;)V a
net/minecraft/server/commands/LocateCommand wh
	ERROR_FAILED a
	dist (IIII)F a
	locate (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/world/level/levelgen/feature/StructureFeature;)I a
	register (Lcom/mojang/brigadier/CommandDispatcher;)V a
	showLocateResult (Lnet/minecraft/commands/CommandSourceStack;Ljava/lang/String;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;Ljava/lang/String;)I a
net/minecraft/server/commands/LootCommand wi
	ERROR_NO_HELD_ITEMS b
	ERROR_NO_LOOT_TABLE c
	SUGGEST_LOOT_TABLE a
	addTargets (Lcom/mojang/brigadier/builder/ArgumentBuilder;Lnet/minecraft/server/commands/LootCommand$TailProvider;)Lcom/mojang/brigadier/builder/ArgumentBuilder; a
	blockDistribute (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/core/BlockPos;Ljava/util/List;Lnet/minecraft/server/commands/LootCommand$Callback;)I a
	blockReplace (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/core/BlockPos;IILjava/util/List;Lnet/minecraft/server/commands/LootCommand$Callback;)I a
	callback (Lnet/minecraft/commands/CommandSourceStack;Ljava/util/List;)V a
	callback (Lnet/minecraft/commands/CommandSourceStack;Ljava/util/List;Lnet/minecraft/resources/ResourceLocation;)V a
	canMergeItems (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/item/ItemStack;)Z a
	distributeToContainer (Lnet/minecraft/world/Container;Lnet/minecraft/world/item/ItemStack;)Z a
	drop (Lcom/mojang/brigadier/context/CommandContext;Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/world/level/storage/loot/LootContext;Lnet/minecraft/server/commands/LootCommand$DropConsumer;)I a
	dropBlockLoot (Lcom/mojang/brigadier/context/CommandContext;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/server/commands/LootCommand$DropConsumer;)I a
	dropChestLoot (Lcom/mojang/brigadier/context/CommandContext;Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/server/commands/LootCommand$DropConsumer;)I a
	dropFishingLoot (Lcom/mojang/brigadier/context/CommandContext;Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/server/commands/LootCommand$DropConsumer;)I a
	dropInWorld (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/world/phys/Vec3;Ljava/util/List;Lnet/minecraft/server/commands/LootCommand$Callback;)I a
	dropKillLoot (Lcom/mojang/brigadier/context/CommandContext;Lnet/minecraft/world/entity/Entity;Lnet/minecraft/server/commands/LootCommand$DropConsumer;)I a
	entityReplace (Ljava/util/Collection;IILjava/util/List;Lnet/minecraft/server/commands/LootCommand$Callback;)I a
	getContainer (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/Container; a
	getSourceHandItem (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/world/entity/EquipmentSlot;)Lnet/minecraft/world/item/ItemStack; a
	playerGive (Ljava/util/Collection;Ljava/util/List;Lnet/minecraft/server/commands/LootCommand$Callback;)I a
	register (Lcom/mojang/brigadier/CommandDispatcher;)V a
	setSlots (Lnet/minecraft/world/entity/Entity;Ljava/util/List;IILjava/util/List;)V a
net/minecraft/server/commands/LootCommand$Callback wi$a
net/minecraft/server/commands/LootCommand$DropConsumer wi$b
net/minecraft/server/commands/LootCommand$TailProvider wi$c
net/minecraft/server/commands/MsgCommand wj
	register (Lcom/mojang/brigadier/CommandDispatcher;)V a
	sendMessage (Lnet/minecraft/commands/CommandSourceStack;Ljava/util/Collection;Lnet/minecraft/network/chat/Component;)I a
net/minecraft/server/commands/OpCommand wk
	ERROR_ALREADY_OP a
	opPlayers (Lnet/minecraft/commands/CommandSourceStack;Ljava/util/Collection;)I a
	register (Lcom/mojang/brigadier/CommandDispatcher;)V a
net/minecraft/server/commands/PardonCommand wl
	ERROR_NOT_BANNED a
	pardonPlayers (Lnet/minecraft/commands/CommandSourceStack;Ljava/util/Collection;)I a
	register (Lcom/mojang/brigadier/CommandDispatcher;)V a
net/minecraft/server/commands/PardonIpCommand wm
	ERROR_INVALID a
	ERROR_NOT_BANNED b
	register (Lcom/mojang/brigadier/CommandDispatcher;)V a
	unban (Lnet/minecraft/commands/CommandSourceStack;Ljava/lang/String;)I a
net/minecraft/server/commands/ParticleCommand wn
	ERROR_FAILED a
	register (Lcom/mojang/brigadier/CommandDispatcher;)V a
	sendParticles (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/core/particles/ParticleOptions;Lnet/minecraft/world/phys/Vec3;Lnet/minecraft/world/phys/Vec3;FIZLjava/util/Collection;)I a
net/minecraft/server/commands/PlaySoundCommand wo
	ERROR_TOO_FAR a
	playSound (Lnet/minecraft/commands/CommandSourceStack;Ljava/util/Collection;Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/sounds/SoundSource;Lnet/minecraft/world/phys/Vec3;FFF)I a
	register (Lcom/mojang/brigadier/CommandDispatcher;)V a
	source (Lnet/minecraft/sounds/SoundSource;)Lcom/mojang/brigadier/builder/LiteralArgumentBuilder; a
net/minecraft/server/commands/PublishCommand wp
	ERROR_ALREADY_PUBLISHED b
	ERROR_FAILED a
	publish (Lnet/minecraft/commands/CommandSourceStack;I)I a
	register (Lcom/mojang/brigadier/CommandDispatcher;)V a
net/minecraft/server/commands/RaidCommand wq
	check (Lnet/minecraft/commands/CommandSourceStack;)I d
	getRaid (Lnet/minecraft/server/level/ServerPlayer;)Lnet/minecraft/world/entity/raid/Raid; a
	glow (Lnet/minecraft/commands/CommandSourceStack;)I a
	playSound (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/network/chat/Component;)I a
	register (Lcom/mojang/brigadier/CommandDispatcher;)V a
	setBadOmenLevel (Lnet/minecraft/commands/CommandSourceStack;I)I a
	spawnLeader (Lnet/minecraft/commands/CommandSourceStack;)I b
	start (Lnet/minecraft/commands/CommandSourceStack;I)I b
	stop (Lnet/minecraft/commands/CommandSourceStack;)I c
net/minecraft/server/commands/RecipeCommand wr
	ERROR_GIVE_FAILED a
	ERROR_TAKE_FAILED b
	giveRecipes (Lnet/minecraft/commands/CommandSourceStack;Ljava/util/Collection;Ljava/util/Collection;)I a
	register (Lcom/mojang/brigadier/CommandDispatcher;)V a
	takeRecipes (Lnet/minecraft/commands/CommandSourceStack;Ljava/util/Collection;Ljava/util/Collection;)I b
net/minecraft/server/commands/ReloadCommand ws
	LOGGER a
	discoverNewPacks (Lnet/minecraft/server/packs/repository/PackRepository;Lnet/minecraft/world/level/storage/WorldData;Ljava/util/Collection;)Ljava/util/Collection; a
	register (Lcom/mojang/brigadier/CommandDispatcher;)V a
	reloadPacks (Ljava/util/Collection;Lnet/minecraft/commands/CommandSourceStack;)V a
net/minecraft/server/commands/ReplaceItemCommand wt
	ERROR_ENTITY_SLOT c
	ERROR_INAPPLICABLE_SLOT b
	ERROR_NOT_A_CONTAINER a
	register (Lcom/mojang/brigadier/CommandDispatcher;)V a
	setBlockItem (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/core/BlockPos;ILnet/minecraft/world/item/ItemStack;)I a
	setEntityItem (Lnet/minecraft/commands/CommandSourceStack;Ljava/util/Collection;ILnet/minecraft/world/item/ItemStack;)I a
net/minecraft/server/commands/SaveAllCommand wu
	ERROR_FAILED a
	register (Lcom/mojang/brigadier/CommandDispatcher;)V a
	saveAll (Lnet/minecraft/commands/CommandSourceStack;Z)I a
net/minecraft/server/commands/SaveOffCommand wv
	ERROR_ALREADY_OFF a
	register (Lcom/mojang/brigadier/CommandDispatcher;)V a
net/minecraft/server/commands/SaveOnCommand ww
	ERROR_ALREADY_ON a
	register (Lcom/mojang/brigadier/CommandDispatcher;)V a
net/minecraft/server/commands/SayCommand wx
	register (Lcom/mojang/brigadier/CommandDispatcher;)V a
net/minecraft/server/commands/ScheduleCommand wy
	ERROR_CANT_REMOVE b
	ERROR_SAME_TICK a
	SUGGEST_SCHEDULE c
	register (Lcom/mojang/brigadier/CommandDispatcher;)V a
	remove (Lnet/minecraft/commands/CommandSourceStack;Ljava/lang/String;)I a
	schedule (Lnet/minecraft/commands/CommandSourceStack;Lcom/mojang/datafixers/util/Pair;IZ)I a
net/minecraft/server/commands/ScoreboardCommand wz
	ERROR_DISPLAY_SLOT_ALREADY_EMPTY b
	ERROR_DISPLAY_SLOT_ALREADY_SET c
	ERROR_NOT_TRIGGER e
	ERROR_NO_VALUE f
	ERROR_OBJECTIVE_ALREADY_EXISTS a
	ERROR_TRIGGER_ALREADY_ENABLED d
	addObjective (Lnet/minecraft/commands/CommandSourceStack;Ljava/lang/String;Lnet/minecraft/world/scores/criteria/ObjectiveCriteria;Lnet/minecraft/network/chat/Component;)I a
	addScore (Lnet/minecraft/commands/CommandSourceStack;Ljava/util/Collection;Lnet/minecraft/world/scores/Objective;I)I b
	clearDisplaySlot (Lnet/minecraft/commands/CommandSourceStack;I)I a
	createRenderTypeModify ()Lcom/mojang/brigadier/builder/LiteralArgumentBuilder; a
	enableTrigger (Lnet/minecraft/commands/CommandSourceStack;Ljava/util/Collection;Lnet/minecraft/world/scores/Objective;)I a
	getScore (Lnet/minecraft/commands/CommandSourceStack;Ljava/lang/String;Lnet/minecraft/world/scores/Objective;)I a
	listObjectives (Lnet/minecraft/commands/CommandSourceStack;)I b
	listTrackedPlayerScores (Lnet/minecraft/commands/CommandSourceStack;Ljava/lang/String;)I a
	listTrackedPlayers (Lnet/minecraft/commands/CommandSourceStack;)I a
	performOperation (Lnet/minecraft/commands/CommandSourceStack;Ljava/util/Collection;Lnet/minecraft/world/scores/Objective;Lnet/minecraft/commands/arguments/OperationArgument$Operation;Ljava/util/Collection;Lnet/minecraft/world/scores/Objective;)I a
	register (Lcom/mojang/brigadier/CommandDispatcher;)V a
	removeObjective (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/world/scores/Objective;)I a
	removeScore (Lnet/minecraft/commands/CommandSourceStack;Ljava/util/Collection;Lnet/minecraft/world/scores/Objective;I)I c
	resetScore (Lnet/minecraft/commands/CommandSourceStack;Ljava/util/Collection;Lnet/minecraft/world/scores/Objective;)I b
	resetScores (Lnet/minecraft/commands/CommandSourceStack;Ljava/util/Collection;)I a
	setDisplayName (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/world/scores/Objective;Lnet/minecraft/network/chat/Component;)I a
	setDisplaySlot (Lnet/minecraft/commands/CommandSourceStack;ILnet/minecraft/world/scores/Objective;)I a
	setRenderType (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/world/scores/Objective;Lnet/minecraft/world/scores/criteria/ObjectiveCriteria$RenderType;)I a
	setScore (Lnet/minecraft/commands/CommandSourceStack;Ljava/util/Collection;Lnet/minecraft/world/scores/Objective;I)I a
	suggestTriggers (Lnet/minecraft/commands/CommandSourceStack;Ljava/util/Collection;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture; a
net/minecraft/server/commands/SeedCommand xa
	register (Lcom/mojang/brigadier/CommandDispatcher;Z)V a
net/minecraft/server/commands/SetBlockCommand xb
	ERROR_FAILED a
	register (Lcom/mojang/brigadier/CommandDispatcher;)V a
	setBlock (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/core/BlockPos;Lnet/minecraft/commands/arguments/blocks/BlockInput;Lnet/minecraft/server/commands/SetBlockCommand$Mode;Ljava/util/function/Predicate;)I a
net/minecraft/server/commands/SetBlockCommand$Filter xb$a
net/minecraft/server/commands/SetBlockCommand$Mode xb$b
	$VALUES c
	DESTROY b
	REPLACE a
net/minecraft/server/commands/SetPlayerIdleTimeoutCommand xc
	register (Lcom/mojang/brigadier/CommandDispatcher;)V a
	setIdleTimeout (Lnet/minecraft/commands/CommandSourceStack;I)I a
net/minecraft/server/commands/SetSpawnCommand xd
	register (Lcom/mojang/brigadier/CommandDispatcher;)V a
	setSpawn (Lnet/minecraft/commands/CommandSourceStack;Ljava/util/Collection;Lnet/minecraft/core/BlockPos;)I a
net/minecraft/server/commands/SetWorldSpawnCommand xe
	register (Lcom/mojang/brigadier/CommandDispatcher;)V a
	setSpawn (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/core/BlockPos;)I a
net/minecraft/server/commands/SpectateCommand xf
	ERROR_NOT_SPECTATOR b
	ERROR_SELF a
	register (Lcom/mojang/brigadier/CommandDispatcher;)V a
	spectate (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/world/entity/Entity;Lnet/minecraft/server/level/ServerPlayer;)I a
net/minecraft/server/commands/SpreadPlayersCommand xg
	ERROR_FAILED_TO_SPREAD_ENTITIES b
	ERROR_FAILED_TO_SPREAD_TEAMS a
	createInitialPositions (Ljava/util/Random;IDDDD)[Lnet/minecraft/server/commands/SpreadPlayersCommand$Position; a
	getNumberOfTeams (Ljava/util/Collection;)I a
	register (Lcom/mojang/brigadier/CommandDispatcher;)V a
	setPlayerPositions (Ljava/util/Collection;Lnet/minecraft/server/level/ServerLevel;[Lnet/minecraft/server/commands/SpreadPlayersCommand$Position;IZ)D a
	spreadPlayers (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/world/phys/Vec2;FFIZLjava/util/Collection;)I a
	spreadPositions (Lnet/minecraft/world/phys/Vec2;DLnet/minecraft/server/level/ServerLevel;Ljava/util/Random;DDDDI[Lnet/minecraft/server/commands/SpreadPlayersCommand$Position;Z)V a
net/minecraft/server/commands/SpreadPlayersCommand$Position xg$a
	x a
	z b
	clamp (DDDD)Z a
	dist (Lnet/minecraft/server/commands/SpreadPlayersCommand$Position;)D a
	getLength ()F b
	getSpawnY (Lnet/minecraft/world/level/BlockGetter;I)I a
	isSafe (Lnet/minecraft/world/level/BlockGetter;I)Z b
	moveAway (Lnet/minecraft/server/commands/SpreadPlayersCommand$Position;)V b
	normalize ()V a
	randomize (Ljava/util/Random;DDDD)V a
	set (DD)V a
net/minecraft/server/commands/StopCommand xh
	register (Lcom/mojang/brigadier/CommandDispatcher;)V a
net/minecraft/server/commands/StopSoundCommand xi
	register (Lcom/mojang/brigadier/CommandDispatcher;)V a
	stopSound (Lnet/minecraft/commands/CommandSourceStack;Ljava/util/Collection;Lnet/minecraft/sounds/SoundSource;Lnet/minecraft/resources/ResourceLocation;)I a
net/minecraft/server/commands/SummonCommand xj
	ERROR_FAILED a
	INVALID_POSITION b
	register (Lcom/mojang/brigadier/CommandDispatcher;)V a
	spawnEntity (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/world/phys/Vec3;Lnet/minecraft/nbt/CompoundTag;Z)I a
net/minecraft/server/commands/TagCommand xk
	ERROR_ADD_FAILED a
	ERROR_REMOVE_FAILED b
	addTag (Lnet/minecraft/commands/CommandSourceStack;Ljava/util/Collection;Ljava/lang/String;)I a
	getTags (Ljava/util/Collection;)Ljava/util/Collection; a
	listTags (Lnet/minecraft/commands/CommandSourceStack;Ljava/util/Collection;)I a
	register (Lcom/mojang/brigadier/CommandDispatcher;)V a
	removeTag (Lnet/minecraft/commands/CommandSourceStack;Ljava/util/Collection;Ljava/lang/String;)I b
net/minecraft/server/commands/TeamCommand xl
	ERROR_TEAM_ALREADY_COLOR e
	ERROR_TEAM_ALREADY_EMPTY c
	ERROR_TEAM_ALREADY_EXISTS a
	ERROR_TEAM_ALREADY_FRIENDLYFIRE_DISABLED g
	ERROR_TEAM_ALREADY_FRIENDLYFIRE_ENABLED f
	ERROR_TEAM_ALREADY_FRIENDLYINVISIBLES_DISABLED i
	ERROR_TEAM_ALREADY_FRIENDLYINVISIBLES_ENABLED h
	ERROR_TEAM_ALREADY_NAME d
	ERROR_TEAM_COLLISION_UNCHANGED l
	ERROR_TEAM_DEATH_MESSAGE_VISIBLITY_UNCHANGED k
	ERROR_TEAM_NAMETAG_VISIBLITY_UNCHANGED j
	ERROR_TEAM_NAME_TOO_LONG b
	createTeam (Lnet/minecraft/commands/CommandSourceStack;Ljava/lang/String;)I a
	createTeam (Lnet/minecraft/commands/CommandSourceStack;Ljava/lang/String;Lnet/minecraft/network/chat/Component;)I a
	deleteTeam (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/world/scores/PlayerTeam;)I b
	emptyTeam (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/world/scores/PlayerTeam;)I a
	joinTeam (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/world/scores/PlayerTeam;Ljava/util/Collection;)I a
	leaveTeam (Lnet/minecraft/commands/CommandSourceStack;Ljava/util/Collection;)I a
	listMembers (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/world/scores/PlayerTeam;)I c
	listTeams (Lnet/minecraft/commands/CommandSourceStack;)I a
	register (Lcom/mojang/brigadier/CommandDispatcher;)V a
	setCollision (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/world/scores/PlayerTeam;Lnet/minecraft/world/scores/Team$CollisionRule;)I a
	setColor (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/world/scores/PlayerTeam;Lnet/minecraft/ChatFormatting;)I a
	setDeathMessageVisibility (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/world/scores/PlayerTeam;Lnet/minecraft/world/scores/Team$Visibility;)I b
	setDisplayName (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/world/scores/PlayerTeam;Lnet/minecraft/network/chat/Component;)I a
	setFriendlyFire (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/world/scores/PlayerTeam;Z)I b
	setFriendlySight (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/world/scores/PlayerTeam;Z)I a
	setNametagVisibility (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/world/scores/PlayerTeam;Lnet/minecraft/world/scores/Team$Visibility;)I a
	setPrefix (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/world/scores/PlayerTeam;Lnet/minecraft/network/chat/Component;)I b
	setSuffix (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/world/scores/PlayerTeam;Lnet/minecraft/network/chat/Component;)I c
net/minecraft/server/commands/TeamMsgCommand xm
	ERROR_NOT_ON_TEAM b
	SUGGEST_STYLE a
	register (Lcom/mojang/brigadier/CommandDispatcher;)V a
	sendMessage (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/network/chat/Component;)I a
net/minecraft/server/commands/TeleportCommand xn
	INVALID_POSITION a
	performTeleport (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/world/entity/Entity;Lnet/minecraft/server/level/ServerLevel;DDDLjava/util/Set;FFLnet/minecraft/server/commands/TeleportCommand$LookAt;)V a
	register (Lcom/mojang/brigadier/CommandDispatcher;)V a
	teleportToEntity (Lnet/minecraft/commands/CommandSourceStack;Ljava/util/Collection;Lnet/minecraft/world/entity/Entity;)I a
	teleportToPos (Lnet/minecraft/commands/CommandSourceStack;Ljava/util/Collection;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/commands/arguments/coordinates/Coordinates;Lnet/minecraft/commands/arguments/coordinates/Coordinates;Lnet/minecraft/server/commands/TeleportCommand$LookAt;)I a
net/minecraft/server/commands/TeleportCommand$LookAt xn$a
	anchor c
	entity b
	position a
	perform (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/world/entity/Entity;)V a
net/minecraft/server/commands/TellRawCommand xo
	register (Lcom/mojang/brigadier/CommandDispatcher;)V a
net/minecraft/server/commands/TimeCommand xp
	addTime (Lnet/minecraft/commands/CommandSourceStack;I)I b
	getDayTime (Lnet/minecraft/server/level/ServerLevel;)I a
	queryTime (Lnet/minecraft/commands/CommandSourceStack;I)I c
	register (Lcom/mojang/brigadier/CommandDispatcher;)V a
	setTime (Lnet/minecraft/commands/CommandSourceStack;I)I a
net/minecraft/server/commands/TitleCommand xq
	clearTitle (Lnet/minecraft/commands/CommandSourceStack;Ljava/util/Collection;)I a
	register (Lcom/mojang/brigadier/CommandDispatcher;)V a
	resetTitle (Lnet/minecraft/commands/CommandSourceStack;Ljava/util/Collection;)I b
	setTimes (Lnet/minecraft/commands/CommandSourceStack;Ljava/util/Collection;III)I a
	showTitle (Lnet/minecraft/commands/CommandSourceStack;Ljava/util/Collection;Lnet/minecraft/network/chat/Component;Lnet/minecraft/network/protocol/game/ClientboundSetTitlesPacket$Type;)I a
net/minecraft/server/commands/TriggerCommand xr
	ERROR_INVALID_OBJECTIVE b
	ERROR_NOT_PRIMED a
	addValue (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/world/scores/Score;I)I a
	getScore (Lnet/minecraft/server/level/ServerPlayer;Lnet/minecraft/world/scores/Objective;)Lnet/minecraft/world/scores/Score; a
	register (Lcom/mojang/brigadier/CommandDispatcher;)V a
	setValue (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/world/scores/Score;I)I b
	simpleTrigger (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/world/scores/Score;)I a
	suggestObjectives (Lnet/minecraft/commands/CommandSourceStack;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture; a
net/minecraft/server/commands/WeatherCommand xs
	register (Lcom/mojang/brigadier/CommandDispatcher;)V a
	setClear (Lnet/minecraft/commands/CommandSourceStack;I)I a
	setRain (Lnet/minecraft/commands/CommandSourceStack;I)I b
	setThunder (Lnet/minecraft/commands/CommandSourceStack;I)I c
net/minecraft/server/commands/WhitelistCommand xt
	ERROR_ALREADY_DISABLED b
	ERROR_ALREADY_ENABLED a
	ERROR_ALREADY_WHITELISTED c
	ERROR_NOT_WHITELISTED d
	addPlayers (Lnet/minecraft/commands/CommandSourceStack;Ljava/util/Collection;)I a
	disableWhitelist (Lnet/minecraft/commands/CommandSourceStack;)I c
	enableWhitelist (Lnet/minecraft/commands/CommandSourceStack;)I b
	register (Lcom/mojang/brigadier/CommandDispatcher;)V a
	reload (Lnet/minecraft/commands/CommandSourceStack;)I a
	removePlayers (Lnet/minecraft/commands/CommandSourceStack;Ljava/util/Collection;)I b
	showList (Lnet/minecraft/commands/CommandSourceStack;)I d
net/minecraft/server/commands/WorldBorderCommand xu
	ERROR_SAME_CENTER a
	ERROR_SAME_DAMAGE_AMOUNT h
	ERROR_SAME_DAMAGE_BUFFER g
	ERROR_SAME_SIZE b
	ERROR_SAME_WARNING_DISTANCE f
	ERROR_SAME_WARNING_TIME e
	ERROR_TOO_BIG d
	ERROR_TOO_SMALL c
	getSize (Lnet/minecraft/commands/CommandSourceStack;)I a
	register (Lcom/mojang/brigadier/CommandDispatcher;)V a
	setCenter (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/world/phys/Vec2;)I a
	setDamageAmount (Lnet/minecraft/commands/CommandSourceStack;F)I b
	setDamageBuffer (Lnet/minecraft/commands/CommandSourceStack;F)I a
	setSize (Lnet/minecraft/commands/CommandSourceStack;DJ)I a
	setWarningDistance (Lnet/minecraft/commands/CommandSourceStack;I)I b
	setWarningTime (Lnet/minecraft/commands/CommandSourceStack;I)I a
net/minecraft/server/commands/data/BlockDataAccessor xv
	ERROR_NOT_A_BLOCK_ENTITY b
	PROVIDER a
	entity c
	pos d
	getData ()Lnet/minecraft/nbt/CompoundTag; a
	getModifiedSuccess ()Lnet/minecraft/network/chat/Component; b
	getPrintSuccess (Lnet/minecraft/commands/arguments/NbtPathArgument$NbtPath;DI)Lnet/minecraft/network/chat/Component; a
	getPrintSuccess (Lnet/minecraft/nbt/Tag;)Lnet/minecraft/network/chat/Component; a
	setData (Lnet/minecraft/nbt/CompoundTag;)V a
net/minecraft/server/commands/data/DataAccessor xw
	getData ()Lnet/minecraft/nbt/CompoundTag; a
	getModifiedSuccess ()Lnet/minecraft/network/chat/Component; b
	getPrintSuccess (Lnet/minecraft/commands/arguments/NbtPathArgument$NbtPath;DI)Lnet/minecraft/network/chat/Component; a
	getPrintSuccess (Lnet/minecraft/nbt/Tag;)Lnet/minecraft/network/chat/Component; a
	setData (Lnet/minecraft/nbt/CompoundTag;)V a
net/minecraft/server/commands/data/DataCommands xx
	ALL_PROVIDERS a
	ERROR_EXPECTED_LIST h
	ERROR_EXPECTED_OBJECT i
	ERROR_GET_NON_EXISTENT f
	ERROR_GET_NOT_NUMBER e
	ERROR_INVALID_INDEX j
	ERROR_MERGE_UNCHANGED d
	ERROR_MULTIPLE_TAGS g
	SOURCE_PROVIDERS c
	TARGET_PROVIDERS b
	decorateModification (Ljava/util/function/BiConsumer;)Lcom/mojang/brigadier/builder/ArgumentBuilder; a
	getData (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/server/commands/data/DataAccessor;)I a
	getData (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/server/commands/data/DataAccessor;Lnet/minecraft/commands/arguments/NbtPathArgument$NbtPath;)I b
	getNumeric (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/server/commands/data/DataAccessor;Lnet/minecraft/commands/arguments/NbtPathArgument$NbtPath;D)I a
	getSingleTag (Lnet/minecraft/commands/arguments/NbtPathArgument$NbtPath;Lnet/minecraft/server/commands/data/DataAccessor;)Lnet/minecraft/nbt/Tag; a
	insertAtIndex (ILnet/minecraft/nbt/CompoundTag;Lnet/minecraft/commands/arguments/NbtPathArgument$NbtPath;Ljava/util/List;)I a
	manipulateData (Lcom/mojang/brigadier/context/CommandContext;Lnet/minecraft/server/commands/data/DataCommands$DataProvider;Lnet/minecraft/server/commands/data/DataCommands$DataManipulator;Ljava/util/List;)I a
	mergeData (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/server/commands/data/DataAccessor;Lnet/minecraft/nbt/CompoundTag;)I a
	register (Lcom/mojang/brigadier/CommandDispatcher;)V a
	removeData (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/server/commands/data/DataAccessor;Lnet/minecraft/commands/arguments/NbtPathArgument$NbtPath;)I a
net/minecraft/server/commands/data/DataCommands$DataManipulator xx$a
net/minecraft/server/commands/data/DataCommands$DataManipulatorDecorator xx$b
net/minecraft/server/commands/data/DataCommands$DataProvider xx$c
	access (Lcom/mojang/brigadier/context/CommandContext;)Lnet/minecraft/server/commands/data/DataAccessor; a
	wrap (Lcom/mojang/brigadier/builder/ArgumentBuilder;Ljava/util/function/Function;)Lcom/mojang/brigadier/builder/ArgumentBuilder; a
net/minecraft/server/commands/data/EntityDataAccessor xy
	ERROR_NO_PLAYERS b
	PROVIDER a
	entity c
	getData ()Lnet/minecraft/nbt/CompoundTag; a
	getModifiedSuccess ()Lnet/minecraft/network/chat/Component; b
	getPrintSuccess (Lnet/minecraft/commands/arguments/NbtPathArgument$NbtPath;DI)Lnet/minecraft/network/chat/Component; a
	getPrintSuccess (Lnet/minecraft/nbt/Tag;)Lnet/minecraft/network/chat/Component; a
	setData (Lnet/minecraft/nbt/CompoundTag;)V a
net/minecraft/server/commands/data/StorageDataAccessor xz
	PROVIDER a
	SUGGEST_STORAGE b
	id d
	storage c
	getData ()Lnet/minecraft/nbt/CompoundTag; a
	getGlobalTags (Lcom/mojang/brigadier/context/CommandContext;)Lnet/minecraft/world/level/storage/CommandStorage; b
	getModifiedSuccess ()Lnet/minecraft/network/chat/Component; b
	getPrintSuccess (Lnet/minecraft/commands/arguments/NbtPathArgument$NbtPath;DI)Lnet/minecraft/network/chat/Component; a
	getPrintSuccess (Lnet/minecraft/nbt/Tag;)Lnet/minecraft/network/chat/Component; a
	setData (Lnet/minecraft/nbt/CompoundTag;)V a
net/minecraft/server/dedicated/DedicatedPlayerList yc
	LOGGER a
	blackList (Lcom/mojang/authlib/GameProfile;)V c
	canBypassPlayerLimit (Lcom/mojang/authlib/GameProfile;)Z f
	deop (Lcom/mojang/authlib/GameProfile;)V b
	getServer ()Lnet/minecraft/server/MinecraftServer; c
	getServer ()Lnet/minecraft/server/dedicated/DedicatedServer; b
	isWhiteListed (Lcom/mojang/authlib/GameProfile;)Z e
	loadIpBanList ()V x
	loadOps ()V z
	loadUserBanList ()V y
	loadWhiteList ()V B
	op (Lcom/mojang/authlib/GameProfile;)V a
	reloadWhiteList ()V a
	saveIpBanList ()V v
	saveOps ()V A
	saveUserBanList ()V w
	saveWhiteList ()V C
	setUsingWhiteList (Z)V a
	whiteList (Lcom/mojang/authlib/GameProfile;)V d
net/minecraft/server/dedicated/DedicatedServer yd
	LOGGER j
	SHA1 k
	consoleInput l
	gui q
	queryThreadGs4 m
	rconConsoleSource n
	rconThread o
	settings p
	areNpcsEnabled ()Z W
	convertOldUsers ()Z bc
	fillReport (Lnet/minecraft/CrashReport;)Lnet/minecraft/CrashReport; b
	forceDifficulty ()V p
	forceSynchronousWrites ()Z aT
	getAbsoluteMaxWorldSize ()I as
	getCompressionThreshold ()I av
	getFunctionCompilationLevel ()I h
	getLevelIdName ()Ljava/lang/String; k_
	getMaxTickLength ()J bd
	getModdedStatus ()Ljava/util/Optional; n
	getOperatorUserPermissionLevel ()I g
	getPackHash ()Ljava/lang/String; aY
	getPlayerList ()Lnet/minecraft/server/dedicated/DedicatedPlayerList; ba
	getPlayerList ()Lnet/minecraft/server/players/PlayerList; ac
	getPluginNames ()Ljava/lang/String; j_
	getProperties ()Lnet/minecraft/server/dedicated/DedicatedServerProperties; g_
	getScaledTrackingDistance (I)I b
	getServerIp ()Ljava/lang/String; h_
	getServerName ()Ljava/lang/String; i_
	getServerPort ()I o
	getSpawnProtectionRadius ()I ai
	handleConsoleInput (Ljava/lang/String;Lnet/minecraft/commands/CommandSourceStack;)V a
	handleConsoleInputs ()V aZ
	hasGui ()Z af
	initServer ()Z d
	isCommandBlockEnabled ()Z l
	isDedicatedServer ()Z j
	isEpollEnabled ()Z k
	isHardcore ()Z f
	isNetherEnabled ()Z B
	isPublished ()Z m
	isSingleplayerOwner (Lcom/mojang/authlib/GameProfile;)Z a
	isSnooperEnabled ()Z S
	isSpawningAnimals ()Z V
	isSpawningMonsters ()Z O
	isUnderSpawnProtection (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/player/Player;)Z a
	onServerExit ()V e
	populateSnooper (Lnet/minecraft/world/Snooper;)V a
	publishServer (Lnet/minecraft/world/level/GameType;ZI)Z a
	repliesToStatus ()Z ak
	runCommand (Ljava/lang/String;)Ljava/lang/String; a
	setPlayerIdleTimeout (I)V d
	shouldInformAdmins ()Z S_
	shouldRconBroadcast ()Z i
	showGui ()V bb
	stopServer ()V s
	storeUsingWhiteList (Z)V j
	tickChildren (Ljava/util/function/BooleanSupplier;)V b
	waitForRetry ()V bm
net/minecraft/server/dedicated/DedicatedServerProperties ye
	allowFlight g
	allowNether z
	announcePlayerAchievements q
	broadcastConsoleToOps M
	broadcastRconToOps L
	difficulty l
	enableCommandBlock D
	enableJmxMonitoring P
	enableQuery r
	enableRcon t
	enableStatus Q
	enforceWhitelist k
	entityBroadcastRangePercentage R
	forceGameMode j
	functionPermissionLevel G
	gamemode m
	hardcore y
	levelName n
	maxBuildHeight p
	maxPlayers J
	maxTickTime H
	maxWorldSize N
	motd i
	networkCompressionThreshold K
	onlineMode a
	opPermissionLevel F
	playerIdleTimeout S
	preventProxyConnections b
	pvp f
	queryPort s
	rconPassword v
	rconPort u
	resourcePack h
	resourcePackHash w
	resourcePackSha1 x
	serverIp c
	serverPort o
	snooperEnabled B
	spawnAnimals d
	spawnMonsters A
	spawnNpcs e
	spawnProtection E
	syncChunkWrites O
	useNativeTransport C
	viewDistance I
	whiteList T
	worldGenSettings U
	fromFile (Ljava/nio/file/Path;)Lnet/minecraft/server/dedicated/DedicatedServerProperties; a
	reload (Ljava/util/Properties;)Lnet/minecraft/server/dedicated/DedicatedServerProperties; a
	reload (Ljava/util/Properties;)Lnet/minecraft/server/dedicated/Settings; b
net/minecraft/server/dedicated/DedicatedServerSettings yf
	properties b
	source a
	forceSave ()V b
	getProperties ()Lnet/minecraft/server/dedicated/DedicatedServerProperties; a
	update (Ljava/util/function/UnaryOperator;)Lnet/minecraft/server/dedicated/DedicatedServerSettings; a
net/minecraft/server/dedicated/ServerWatchdog yg
	LOGGER a
	maxTickTime c
	server b
	exit ()V a
net/minecraft/server/dedicated/Settings yh
	LOGGER a
	properties b
	cloneProperties ()Ljava/util/Properties; a
	dispatchNumberOrString (Ljava/util/function/IntFunction;Ljava/util/function/Function;)Ljava/util/function/Function; a
	get (Ljava/lang/String;I)I a
	get (Ljava/lang/String;J)J a
	get (Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; a
	get (Ljava/lang/String;Ljava/util/function/Function;Ljava/lang/Object;)Ljava/lang/Object; a
	get (Ljava/lang/String;Ljava/util/function/Function;Ljava/util/function/Function;Ljava/lang/Object;)Ljava/lang/Object; a
	get (Ljava/lang/String;Ljava/util/function/Function;Ljava/util/function/UnaryOperator;Ljava/util/function/Function;Ljava/lang/Object;)Ljava/lang/Object; a
	get (Ljava/lang/String;Ljava/util/function/UnaryOperator;I)I a
	get (Ljava/lang/String;Z)Z a
	getLegacy (Ljava/lang/String;Ljava/util/function/Function;)Ljava/lang/Object; a
	getLegacyBoolean (Ljava/lang/String;)Ljava/lang/Boolean; b
	getLegacyString (Ljava/lang/String;)Ljava/lang/String; a
	getMutable (Ljava/lang/String;I)Lnet/minecraft/server/dedicated/Settings$MutableValue; b
	getMutable (Ljava/lang/String;Ljava/util/function/Function;Ljava/lang/Object;)Lnet/minecraft/server/dedicated/Settings$MutableValue; b
	getMutable (Ljava/lang/String;Ljava/util/function/Function;Ljava/util/function/Function;Ljava/lang/Object;)Lnet/minecraft/server/dedicated/Settings$MutableValue; b
	getMutable (Ljava/lang/String;Z)Lnet/minecraft/server/dedicated/Settings$MutableValue; b
	getStringRaw (Ljava/lang/String;)Ljava/lang/String; c
	loadFromFile (Ljava/nio/file/Path;)Ljava/util/Properties; b
	reload (Ljava/util/Properties;)Lnet/minecraft/server/dedicated/Settings; b
	store (Ljava/nio/file/Path;)V c
	wrapNumberDeserializer (Ljava/util/function/Function;)Ljava/util/function/Function; a
net/minecraft/server/dedicated/Settings$MutableValue yh$a
	key b
	serializer d
	value c
	update (Ljava/lang/Object;)Lnet/minecraft/server/dedicated/Settings; a
net/minecraft/server/gui/MinecraftServerGui yj
	LOGGER b
	MONOSPACED a
	finalizers e
	isClosing f
	logAppenderThread d
	server c
	addFinalizer (Ljava/lang/Runnable;)V a
	buildChatPanel ()Ljavax/swing/JComponent; e
	buildInfoPanel ()Ljavax/swing/JComponent; c
	buildPlayerPanel ()Ljavax/swing/JComponent; d
	close ()V b
	print (Ljavax/swing/JTextArea;Ljavax/swing/JScrollPane;Ljava/lang/String;)V a
	runFinalizers ()V f
	showFrameFor (Lnet/minecraft/server/dedicated/DedicatedServer;)Lnet/minecraft/server/gui/MinecraftServerGui; a
	start ()V a
net/minecraft/server/gui/PlayerListComponent yk
	server a
	tickCount b
	tick ()V a
net/minecraft/server/gui/StatsComponent yl
	DECIMAL_FORMAT a
	msgs d
	server e
	timer f
	values b
	vp c
	close ()V a
	getAverage ([J)D a
	tick ()V b
net/minecraft/server/level/BlockDestructionProgress yn
	id a
	pos b
	progress c
	updatedRenderTick d
	compareTo (Lnet/minecraft/server/level/BlockDestructionProgress;)I a
	getId ()I a
	getPos ()Lnet/minecraft/core/BlockPos; b
	getProgress ()I c
	getUpdatedRenderTick ()I d
	setProgress (I)V a
	updateTick (I)V b
net/minecraft/server/level/ChunkHolder yo
	CHUNK_STATUSES e
	FULL_CHUNK_STATUSES f
	UNLOADED_CHUNK a
	UNLOADED_CHUNK_FUTURE b
	UNLOADED_LEVEL_CHUNK c
	UNLOADED_LEVEL_CHUNK_FUTURE d
	blockChangedLightSectionFilter s
	changedBlocks p
	changedSectionFilter r
	changes q
	chunkToSave k
	entityTickingChunkFuture j
	fullChunkFuture h
	futures g
	lightEngine u
	oldTicketLevel l
	onLevelChange v
	playerProvider w
	pos o
	queueLevel n
	skyChangedLightSectionFilter t
	ticketLevel m
	tickingChunkFuture i
	wasAccessibleSinceLastSave x
	blockChanged (III)V a
	broadcast (Lnet/minecraft/network/protocol/Packet;Z)V a
	broadcastBlockEntity (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)V a
	broadcastChanges (Lnet/minecraft/world/level/chunk/LevelChunk;)V a
	getChunkToSave ()Ljava/util/concurrent/CompletableFuture; g
	getEntityTickingChunkFuture ()Ljava/util/concurrent/CompletableFuture; b
	getFullChunkFuture ()Ljava/util/concurrent/CompletableFuture; c
	getFullChunkStatus (I)Lnet/minecraft/server/level/ChunkHolder$FullChunkStatus; c
	getFullStatus ()Lnet/minecraft/server/level/ChunkHolder$FullChunkStatus; h
	getFutureIfPresent (Lnet/minecraft/world/level/chunk/ChunkStatus;)Ljava/util/concurrent/CompletableFuture; b
	getFutureIfPresentUnchecked (Lnet/minecraft/world/level/chunk/ChunkStatus;)Ljava/util/concurrent/CompletableFuture; a
	getLastAvailable ()Lnet/minecraft/world/level/chunk/ChunkAccess; f
	getLastAvailableStatus ()Lnet/minecraft/world/level/chunk/ChunkStatus; e
	getOrScheduleFuture (Lnet/minecraft/world/level/chunk/ChunkStatus;Lnet/minecraft/server/level/ChunkMap;)Ljava/util/concurrent/CompletableFuture; a
	getPos ()Lnet/minecraft/world/level/ChunkPos; i
	getQueueLevel ()I k
	getStatus (I)Lnet/minecraft/world/level/chunk/ChunkStatus; b
	getTicketLevel ()I j
	getTickingChunk ()Lnet/minecraft/world/level/chunk/LevelChunk; d
	getTickingChunkFuture ()Ljava/util/concurrent/CompletableFuture; a
	refreshAccessibility ()V m
	replaceProtoChunk (Lnet/minecraft/world/level/chunk/ImposterProtoChunk;)V a
	sectionLightChanged (Lnet/minecraft/world/level/LightLayer;I)V a
	setQueueLevel (I)V d
	setTicketLevel (I)V a
	updateChunkToSave (Ljava/util/concurrent/CompletableFuture;)V a
	updateFutures (Lnet/minecraft/server/level/ChunkMap;)V a
	wasAccessibleSinceLastSave ()Z l
net/minecraft/server/level/ChunkHolder$ChunkLoadingFailure yo$a
	UNLOADED b
net/minecraft/server/level/ChunkHolder$FullChunkStatus yo$b
	$VALUES e
	BORDER b
	ENTITY_TICKING d
	INACCESSIBLE a
	TICKING c
	isOrAfter (Lnet/minecraft/server/level/ChunkHolder$FullChunkStatus;)Z a
net/minecraft/server/level/ChunkHolder$LevelChangeListener yo$c
	onLevelChange (Lnet/minecraft/world/level/ChunkPos;Ljava/util/function/IntSupplier;ILjava/util/function/IntConsumer;)V a
net/minecraft/server/level/ChunkHolder$PlayerProvider yo$d
	getPlayers (Lnet/minecraft/world/level/ChunkPos;Z)Ljava/util/stream/Stream; a
net/minecraft/server/level/ChunkMap yp
	LOGGER c
	MAX_CHUNK_DISTANCE a
	chunkTypeCache z
	distanceManager t
	entitiesInLevel g
	entityMap y
	generator k
	level h
	lightEngine i
	mainThreadExecutor j
	mainThreadMailbox r
	modified o
	overworldDataStorage l
	pendingUnloads f
	playerMap x
	poiManager m
	progressListener s
	queueSorter p
	storageFolder w
	structureManager v
	tickingGenerated u
	toDrop n
	unloadQueue A
	updatingChunkMap d
	viewDistance B
	visibleChunkMap e
	worldgenMailbox q
	addEntity (Lnet/minecraft/world/entity/Entity;)V a
	broadcast (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/network/protocol/Packet;)V a
	broadcastAndSend (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/network/protocol/Packet;)V b
	checkerboardDistance (Lnet/minecraft/world/level/ChunkPos;II)I a
	checkerboardDistance (Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/server/level/ServerPlayer;Z)I b
	checkerboardDistance (Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/world/entity/Entity;)I b
	dumpChunks (Ljava/io/Writer;)V a
	euclideanDistanceSquared (Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/world/entity/Entity;)D a
	getChunkDebugData (Lnet/minecraft/world/level/ChunkPos;)Ljava/lang/String; a
	getChunkQueueLevel (J)Ljava/util/function/IntSupplier; c
	getChunkRangeFuture (Lnet/minecraft/world/level/ChunkPos;ILjava/util/function/IntFunction;)Ljava/util/concurrent/CompletableFuture; a
	getChunks ()Ljava/lang/Iterable; f
	getDependencyStatus (Lnet/minecraft/world/level/chunk/ChunkStatus;I)Lnet/minecraft/world/level/chunk/ChunkStatus; a
	getDistanceManager ()Lnet/minecraft/server/level/ChunkMap$DistanceManager; e
	getEntityTickingRangeFuture (Lnet/minecraft/world/level/ChunkPos;)Ljava/util/concurrent/CompletableFuture; b
	getLightEngine ()Lnet/minecraft/server/level/ThreadedLevelLightEngine; a
	getPlayers (Lnet/minecraft/world/level/ChunkPos;Z)Ljava/util/stream/Stream; a
	getPoiManager ()Lnet/minecraft/world/entity/ai/village/poi/PoiManager; h
	getTickingGenerated ()I c
	getUpdatingChunkIfPresent (J)Lnet/minecraft/server/level/ChunkHolder; a
	getVisibleChunkIfPresent (J)Lnet/minecraft/server/level/ChunkHolder; b
	isExistingChunkFull (Lnet/minecraft/world/level/ChunkPos;)Z h
	markPosition (Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/world/level/chunk/ChunkStatus$ChunkType;)B a
	markPositionReplaceable (Lnet/minecraft/world/level/ChunkPos;)V g
	move (Lnet/minecraft/server/level/ServerPlayer;)V a
	noPlayersCloseForSpawning (Lnet/minecraft/world/level/ChunkPos;)Z d
	packTicks (Lnet/minecraft/world/level/chunk/LevelChunk;)Ljava/util/concurrent/CompletableFuture; a
	playerLoadedChunk (Lnet/minecraft/server/level/ServerPlayer;[Lnet/minecraft/network/protocol/Packet;Lnet/minecraft/world/level/chunk/LevelChunk;)V a
	postProcess (Lnet/minecraft/server/level/ChunkHolder;)Ljava/util/concurrent/CompletableFuture; a
	printFuture (Ljava/util/concurrent/CompletableFuture;)Ljava/lang/String; a
	processUnloads (Ljava/util/function/BooleanSupplier;)V b
	promoteChunkMap ()Z b
	protoChunkToFullChunk (Lnet/minecraft/server/level/ChunkHolder;)Ljava/util/concurrent/CompletableFuture; c
	readChunk (Lnet/minecraft/world/level/ChunkPos;)Lnet/minecraft/nbt/CompoundTag; i
	releaseLightTicket (Lnet/minecraft/world/level/ChunkPos;)V c
	removeEntity (Lnet/minecraft/world/entity/Entity;)V b
	save (Lnet/minecraft/world/level/chunk/ChunkAccess;)Z a
	saveAllChunks (Z)V a
	schedule (Lnet/minecraft/server/level/ChunkHolder;Lnet/minecraft/world/level/chunk/ChunkStatus;)Ljava/util/concurrent/CompletableFuture; a
	scheduleChunkGeneration (Lnet/minecraft/server/level/ChunkHolder;Lnet/minecraft/world/level/chunk/ChunkStatus;)Ljava/util/concurrent/CompletableFuture; b
	scheduleChunkLoad (Lnet/minecraft/world/level/ChunkPos;)Ljava/util/concurrent/CompletableFuture; f
	scheduleUnload (JLnet/minecraft/server/level/ChunkHolder;)V a
	setViewDistance (I)V a
	size ()I d
	skipPlayer (Lnet/minecraft/server/level/ServerPlayer;)Z b
	tick ()V g
	tick (Ljava/util/function/BooleanSupplier;)V a
	unpackTicks (Lnet/minecraft/server/level/ChunkHolder;)Ljava/util/concurrent/CompletableFuture; b
	updateChunkScheduling (JILnet/minecraft/server/level/ChunkHolder;I)Lnet/minecraft/server/level/ChunkHolder; a
	updateChunkTracking (Lnet/minecraft/server/level/ServerPlayer;Lnet/minecraft/world/level/ChunkPos;[Lnet/minecraft/network/protocol/Packet;ZZ)V a
	updatePlayerPos (Lnet/minecraft/server/level/ServerPlayer;)Lnet/minecraft/core/SectionPos; c
	updatePlayerStatus (Lnet/minecraft/server/level/ServerPlayer;Z)V a
net/minecraft/server/level/ChunkMap$DistanceManager yp$a
	getChunk (J)Lnet/minecraft/server/level/ChunkHolder; b
	isChunkToRemove (J)Z a
	updateChunkScheduling (JILnet/minecraft/server/level/ChunkHolder;I)Lnet/minecraft/server/level/ChunkHolder; a
net/minecraft/server/level/ChunkMap$TrackedEntity yp$b
	entity c
	lastSectionPos e
	range d
	seenBy f
	serverEntity b
	broadcast (Lnet/minecraft/network/protocol/Packet;)V a
	broadcastAndSend (Lnet/minecraft/network/protocol/Packet;)V b
	broadcastRemoved ()V a
	getEffectiveRange ()I b
	removePlayer (Lnet/minecraft/server/level/ServerPlayer;)V a
	scaledRange (I)I a
	updatePlayer (Lnet/minecraft/server/level/ServerPlayer;)V b
	updatePlayers (Ljava/util/List;)V a
net/minecraft/server/level/ChunkTaskPriorityQueue yq
	PRIORITY_LEVEL_COUNT a
	acquired e
	firstQueue c
	maxTasks f
	name d
	taskQueue b
	acquire (J)Ljava/lang/Runnable; a
	getAcquired ()Lit/unimi/dsi/fastutil/longs/LongSet; b
	pop ()Ljava/util/stream/Stream; a
	release (JZ)V a
	resortChunkTasks (ILnet/minecraft/world/level/ChunkPos;I)V a
	submit (Ljava/util/Optional;JI)V a
net/minecraft/server/level/ChunkTaskPriorityQueueSorter yr
	LOGGER a
	mailbox d
	queues b
	sleeping c
	getDebugStatus ()Ljava/lang/String; a
	getProcessor (Lnet/minecraft/util/thread/ProcessorHandle;Z)Lnet/minecraft/util/thread/ProcessorHandle; a
	getQueue (Lnet/minecraft/util/thread/ProcessorHandle;)Lnet/minecraft/server/level/ChunkTaskPriorityQueue; b
	getReleaseProcessor (Lnet/minecraft/util/thread/ProcessorHandle;)Lnet/minecraft/util/thread/ProcessorHandle; a
	message (Ljava/lang/Runnable;JLjava/util/function/IntSupplier;)Lnet/minecraft/server/level/ChunkTaskPriorityQueueSorter$Message; a
	message (Ljava/util/function/Function;JLjava/util/function/IntSupplier;)Lnet/minecraft/server/level/ChunkTaskPriorityQueueSorter$Message; a
	message (Lnet/minecraft/server/level/ChunkHolder;Ljava/lang/Runnable;)Lnet/minecraft/server/level/ChunkTaskPriorityQueueSorter$Message; a
	message (Lnet/minecraft/server/level/ChunkHolder;Ljava/util/function/Function;)Lnet/minecraft/server/level/ChunkTaskPriorityQueueSorter$Message; a
	onLevelChange (Lnet/minecraft/world/level/ChunkPos;Ljava/util/function/IntSupplier;ILjava/util/function/IntConsumer;)V a
	pollTask (Lnet/minecraft/server/level/ChunkTaskPriorityQueue;Lnet/minecraft/util/thread/ProcessorHandle;)V a
	release (Ljava/lang/Runnable;JZ)Lnet/minecraft/server/level/ChunkTaskPriorityQueueSorter$Release; a
	release (Lnet/minecraft/util/thread/ProcessorHandle;JLjava/lang/Runnable;Z)V a
	submit (Lnet/minecraft/util/thread/ProcessorHandle;Ljava/util/function/Function;JLjava/util/function/IntSupplier;Z)V a
net/minecraft/server/level/ChunkTaskPriorityQueueSorter$Message yr$a
	level c
	pos b
	task a
net/minecraft/server/level/ChunkTaskPriorityQueueSorter$Release yr$b
	clearQueue c
	pos b
	task a
net/minecraft/server/level/ChunkTracker ys
	checkNeighborsAfterUpdate (JIZ)V a
	computeLevelFromNeighbor (JJI)I b
	getComputedLevel (JJI)I a
	getLevelFromSource (J)I b
	isSource (J)Z a
	update (JIZ)V b
net/minecraft/server/level/ColumnPos yt
	x a
	z b
	asLong (II)J a
	toChunkPos ()Lnet/minecraft/world/level/ChunkPos; a
	toLong ()J b
net/minecraft/server/level/DemoMode yu
	demoEndedReminder e
	demoHasEnded d
	displayedIntro c
	gameModeTicks f
	handleBlockBreakAction (Lnet/minecraft/core/BlockPos;Lnet/minecraft/network/protocol/game/ServerboundPlayerActionPacket$Action;Lnet/minecraft/core/Direction;I)V a
	outputDemoReminder ()V f
	tick ()V a
	useItem (Lnet/minecraft/server/level/ServerPlayer;Lnet/minecraft/world/level/Level;Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResult; a
	useItemOn (Lnet/minecraft/server/level/ServerPlayer;Lnet/minecraft/world/level/Level;Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/InteractionHand;Lnet/minecraft/world/phys/BlockHitResult;)Lnet/minecraft/world/InteractionResult; a
net/minecraft/server/level/DistanceManager yv
	LOGGER a
	PLAYER_TICKET_LEVEL b
	chunksToUpdateFutures h
	mainThreadExecutor m
	naturalSpawnChunkCounter f
	playerTicketManager g
	playersPerChunk c
	ticketThrottler i
	ticketThrottlerInput j
	ticketThrottlerReleaser k
	ticketTickCounter n
	ticketTracker e
	tickets d
	ticketsToRelease l
	addPlayer (Lnet/minecraft/core/SectionPos;Lnet/minecraft/server/level/ServerPlayer;)V a
	addRegionTicket (Lnet/minecraft/server/level/TicketType;Lnet/minecraft/world/level/ChunkPos;ILjava/lang/Object;)V c
	addTicket (JLnet/minecraft/server/level/Ticket;)V a
	addTicket (Lnet/minecraft/server/level/TicketType;Lnet/minecraft/world/level/ChunkPos;ILjava/lang/Object;)V a
	dumpTickets (Ljava/lang/String;)V a
	getChunk (J)Lnet/minecraft/server/level/ChunkHolder; b
	getDebugStatus ()Ljava/lang/String; c
	getNaturalSpawnChunkCount ()I b
	getTicketDebugString (J)Ljava/lang/String; c
	getTicketLevelAt (Lnet/minecraft/util/SortedArraySet;)I a
	getTickets (J)Lnet/minecraft/util/SortedArraySet; e
	hasPlayersNearby (J)Z d
	isChunkToRemove (J)Z a
	purgeStaleTickets ()V a
	removePlayer (Lnet/minecraft/core/SectionPos;Lnet/minecraft/server/level/ServerPlayer;)V b
	removeRegionTicket (Lnet/minecraft/server/level/TicketType;Lnet/minecraft/world/level/ChunkPos;ILjava/lang/Object;)V d
	removeTicket (JLnet/minecraft/server/level/Ticket;)V b
	removeTicket (Lnet/minecraft/server/level/TicketType;Lnet/minecraft/world/level/ChunkPos;ILjava/lang/Object;)V b
	runAllUpdates (Lnet/minecraft/server/level/ChunkMap;)Z a
	updateChunkForced (Lnet/minecraft/world/level/ChunkPos;Z)V a
	updateChunkScheduling (JILnet/minecraft/server/level/ChunkHolder;I)Lnet/minecraft/server/level/ChunkHolder; a
	updatePlayerTickets (I)V a
net/minecraft/server/level/DistanceManager$ChunkTicketTracker yv$a
	getLevel (J)I c
	getLevelFromSource (J)I b
	runDistnaceUpdates (I)I a
	setLevel (JI)V a
net/minecraft/server/level/DistanceManager$FixedPlayerDistanceChunkTracker yv$b
	chunks a
	maxDistance b
	dumpChunks (Ljava/lang/String;)V a
	getLevel (J)I c
	getLevelFromSource (J)I b
	havePlayer (J)Z d
	onLevelChange (JII)V a
	runAllUpdates ()V a
	setLevel (JI)V a
net/minecraft/server/level/DistanceManager$PlayerTicketTracker yv$c
	queueLevels f
	toUpdate g
	viewDistance e
	haveTicketFor (I)Z c
	onLevelChange (JII)V a
	onLevelChange (JIZZ)V a
	runAllUpdates ()V a
	updateViewDistance (I)V a
net/minecraft/server/level/FeatureSimulator yw
	maxPos b
	minPos a
	destroyBlock (Lnet/minecraft/core/BlockPos;ZLnet/minecraft/world/entity/Entity;I)Z a
	getBoundingBox ()Lnet/minecraft/world/level/levelgen/structure/BoundingBox; a
	getHeightmapPos (Lnet/minecraft/world/level/levelgen/Heightmap$Types;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/core/BlockPos; a
	isFluidAtPosition (Lnet/minecraft/core/BlockPos;Ljava/util/function/Predicate;)Z b
	isStateAtPosition (Lnet/minecraft/core/BlockPos;Ljava/util/function/Predicate;)Z a
	removeBlock (Lnet/minecraft/core/BlockPos;Z)Z a
	setBlock (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;II)Z a
net/minecraft/server/level/PlayerMap yx
	players a
	addPlayer (JLnet/minecraft/server/level/ServerPlayer;Z)V a
	getPlayers (J)Ljava/util/stream/Stream; a
	ignorePlayer (Lnet/minecraft/server/level/ServerPlayer;)V a
	ignored (Lnet/minecraft/server/level/ServerPlayer;)Z d
	ignoredOrUnknown (Lnet/minecraft/server/level/ServerPlayer;)Z c
	removePlayer (JLnet/minecraft/server/level/ServerPlayer;)V a
	unIgnorePlayer (Lnet/minecraft/server/level/ServerPlayer;)V b
	updatePlayer (JJLnet/minecraft/server/level/ServerPlayer;)V a
net/minecraft/server/level/PlayerRespawnLogic yy
	getOverworldRespawnPos (Lnet/minecraft/server/level/ServerLevel;IIZ)Lnet/minecraft/core/BlockPos; a
	getSpawnPosInChunk (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/level/ChunkPos;Z)Lnet/minecraft/core/BlockPos; a
net/minecraft/server/level/SectionTracker yz
	checkNeighborsAfterUpdate (JIZ)V a
	computeLevelFromNeighbor (JJI)I b
	getComputedLevel (JJI)I a
	getLevelFromSource (J)I b
	isSource (J)Z a
	update (JIZ)V b
net/minecraft/server/level/ServerBossEvent za
	players h
	unmodifiablePlayers i
	visible j
	addPlayer (Lnet/minecraft/server/level/ServerPlayer;)V a
	broadcast (Lnet/minecraft/network/protocol/game/ClientboundBossEventPacket$Operation;)V a
	getPlayers ()Ljava/util/Collection; h
	isVisible ()Z g
	removeAllPlayers ()V b
	removePlayer (Lnet/minecraft/server/level/ServerPlayer;)V b
	setColor (Lnet/minecraft/world/BossEvent$BossBarColor;)V a
	setCreateWorldFog (Z)Lnet/minecraft/world/BossEvent; c
	setDarkenScreen (Z)Lnet/minecraft/world/BossEvent; a
	setName (Lnet/minecraft/network/chat/Component;)V a
	setOverlay (Lnet/minecraft/world/BossEvent$BossBarOverlay;)V a
	setPercent (F)V a
	setPlayBossMusic (Z)Lnet/minecraft/world/BossEvent; b
	setVisible (Z)V d
net/minecraft/server/level/ServerChunkCache zb
	CHUNK_STATUSES b
	chunkMap a
	dataStorage i
	distanceManager c
	generator d
	lastChunk o
	lastChunkPos m
	lastChunkStatus n
	lastInhabitedUpdate j
	lastSpawnState p
	level e
	lightEngine g
	mainThread f
	mainThreadProcessor h
	spawnEnemies k
	spawnFriendlies l
	addEntity (Lnet/minecraft/world/entity/Entity;)V c
	addRegionTicket (Lnet/minecraft/server/level/TicketType;Lnet/minecraft/world/level/ChunkPos;ILjava/lang/Object;)V a
	blockChanged (Lnet/minecraft/core/BlockPos;)V b
	broadcast (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/network/protocol/Packet;)V b
	broadcastAndSend (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/network/protocol/Packet;)V a
	checkChunkFuture (JLjava/util/function/Function;)Z a
	chunkAbsent (Lnet/minecraft/server/level/ChunkHolder;I)Z a
	clearCache ()V n
	gatherStats ()Ljava/lang/String; e
	getChunk (IILnet/minecraft/world/level/chunk/ChunkStatus;Z)Lnet/minecraft/world/level/chunk/ChunkAccess; a
	getChunkDebugData (Lnet/minecraft/world/level/ChunkPos;)Ljava/lang/String; b
	getChunkForLighting (II)Lnet/minecraft/world/level/BlockGetter; c
	getChunkFuture (IILnet/minecraft/world/level/chunk/ChunkStatus;Z)Ljava/util/concurrent/CompletableFuture; b
	getChunkFutureMainThread (IILnet/minecraft/world/level/chunk/ChunkStatus;Z)Ljava/util/concurrent/CompletableFuture; c
	getChunkNow (II)Lnet/minecraft/world/level/chunk/LevelChunk; a
	getDataStorage ()Lnet/minecraft/world/level/storage/DimensionDataStorage; i
	getFullChunk (JLjava/util/function/Consumer;)V a
	getGenerator ()Lnet/minecraft/world/level/chunk/ChunkGenerator; g
	getLastSpawnState ()Lnet/minecraft/world/level/NaturalSpawner$SpawnState; k
	getLevel ()Lnet/minecraft/world/level/BlockGetter; m
	getLevel ()Lnet/minecraft/world/level/Level; c
	getLightEngine ()Lnet/minecraft/server/level/ThreadedLevelLightEngine; a
	getLightEngine ()Lnet/minecraft/world/level/lighting/LevelLightEngine; l
	getLoadedChunksCount ()I h
	getPendingTasksCount ()I f
	getPoiManager ()Lnet/minecraft/world/entity/ai/village/poi/PoiManager; j
	getTickingGenerated ()I b
	getVisibleChunkIfPresent (J)Lnet/minecraft/server/level/ChunkHolder; a
	hasChunk (II)Z b
	isEntityTickingChunk (Lnet/minecraft/world/entity/Entity;)Z a
	isEntityTickingChunk (Lnet/minecraft/world/level/ChunkPos;)Z a
	isTickingChunk (Lnet/minecraft/core/BlockPos;)Z a
	move (Lnet/minecraft/server/level/ServerPlayer;)V a
	onLightUpdate (Lnet/minecraft/world/level/LightLayer;Lnet/minecraft/core/SectionPos;)V a
	pollTask ()Z d
	removeEntity (Lnet/minecraft/world/entity/Entity;)V b
	removeRegionTicket (Lnet/minecraft/server/level/TicketType;Lnet/minecraft/world/level/ChunkPos;ILjava/lang/Object;)V b
	runDistanceManagerUpdates ()Z o
	save (Z)V a
	setSpawnSettings (ZZ)V a
	setViewDistance (I)V a
	storeInCache (JLnet/minecraft/world/level/chunk/ChunkAccess;Lnet/minecraft/world/level/chunk/ChunkStatus;)V a
	tick (Ljava/util/function/BooleanSupplier;)V a
	tickChunks ()V p
	updateChunkForced (Lnet/minecraft/world/level/ChunkPos;Z)V a
net/minecraft/server/level/ServerChunkCache$MainThreadExecutor zb$a
	doRunTask (Ljava/lang/Runnable;)V c
	getRunningThread ()Ljava/lang/Thread; au
	pollTask ()Z x
	scheduleExecutables ()Z at
	shouldRun (Ljava/lang/Runnable;)Z d
	wrapRunnable (Ljava/lang/Runnable;)Ljava/lang/Runnable; e
net/minecraft/server/level/ServerEntity zc
	LOGGER a
	ap m
	broadcast f
	entity c
	lastPassengers p
	level b
	teleportDelay o
	tickCount n
	trackDelta e
	updateInterval d
	wasOnGround r
	wasRiding q
	xRotp k
	xp g
	yHeadRotp l
	yRotp j
	yp h
	zp i
	addPairing (Lnet/minecraft/server/level/ServerPlayer;)V b
	broadcastAndSend (Lnet/minecraft/network/protocol/Packet;)V a
	removePairing (Lnet/minecraft/server/level/ServerPlayer;)V a
	sendChanges ()V a
	sendDirtyEntityData ()V c
	sendPairingData (Ljava/util/function/Consumer;)V a
	sentPos ()Lnet/minecraft/world/phys/Vec3; b
	updateSentPos ()V d
net/minecraft/server/level/ServerLevel zd
	END_SPAWN_POINT a
	LOGGER x
	allPlayersSleeping F
	blockEvents L
	blockTicks I
	chunkSource C
	customSpawners N
	dragonFight O
	emptyTime G
	entitiesById y
	entitiesByUuid z
	handlingTick M
	liquidTicks J
	navigations K
	noSave c
	players B
	portalForcer H
	raids d
	server D
	serverLevelData E
	structureFeatureManager P
	tickTime Q
	tickingEntities b
	toAddAfterTick A
	add (Lnet/minecraft/world/entity/Entity;)V m
	addDuringCommandTeleport (Lnet/minecraft/server/level/ServerPlayer;)V a
	addDuringPortalTeleport (Lnet/minecraft/server/level/ServerPlayer;)V b
	addEntity (Lnet/minecraft/world/entity/Entity;)Z k
	addFreshEntity (Lnet/minecraft/world/entity/Entity;)Z c
	addFromAnotherDimension (Lnet/minecraft/world/entity/Entity;)V e
	addNewPlayer (Lnet/minecraft/server/level/ServerPlayer;)V c
	addPlayer (Lnet/minecraft/server/level/ServerPlayer;)V f
	addRespawnedPlayer (Lnet/minecraft/server/level/ServerPlayer;)V d
	addWithUUID (Lnet/minecraft/world/entity/Entity;)Z d
	blockEvent (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Block;II)V a
	blockUpdated (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Block;)V a
	broadcastEntityEvent (Lnet/minecraft/world/entity/Entity;B)V a
	clearBlockEvents (Lnet/minecraft/world/level/levelgen/structure/BoundingBox;)V a
	despawn (Lnet/minecraft/world/entity/Entity;)V h
	destroyBlockProgress (ILnet/minecraft/core/BlockPos;I)V a
	doBlockEvent (Lnet/minecraft/world/level/BlockEventData;)Z a
	dragonFight ()Lnet/minecraft/world/level/dimension/end/EndDragonFight; C
	dumpBlockEntities (Ljava/io/Writer;)V a
	dumpEntities (Ljava/io/Writer;Ljava/lang/Iterable;)V a
	explode (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/damagesource/DamageSource;Lnet/minecraft/world/level/ExplosionDamageCalculator;DDDFZLnet/minecraft/world/level/Explosion$BlockInteraction;)Lnet/minecraft/world/level/Explosion; a
	findLightingTargetAround (Lnet/minecraft/core/BlockPos;)Lnet/minecraft/core/BlockPos; a
	findNearestBiome (Lnet/minecraft/world/level/biome/Biome;Lnet/minecraft/core/BlockPos;II)Lnet/minecraft/core/BlockPos; a
	findNearestMapFeature (Lnet/minecraft/world/level/levelgen/feature/StructureFeature;Lnet/minecraft/core/BlockPos;IZ)Lnet/minecraft/core/BlockPos; a
	getAllEntities ()Ljava/lang/Iterable; z
	getBlockTicks ()Lnet/minecraft/world/level/ServerTickList; j
	getBlockTicks ()Lnet/minecraft/world/level/TickList; G
	getChunkSource ()Lnet/minecraft/server/level/ServerChunkCache; i
	getChunkSource ()Lnet/minecraft/world/level/chunk/ChunkSource; E
	getDataStorage ()Lnet/minecraft/world/level/storage/DimensionDataStorage; s
	getDragons ()Ljava/util/List; g
	getEntities (Lnet/minecraft/world/entity/EntityType;Ljava/util/function/Predicate;)Ljava/util/List; a
	getEntity (I)Lnet/minecraft/world/entity/Entity; a
	getEntity (Ljava/util/UUID;)Lnet/minecraft/world/entity/Entity; a
	getForcedChunks ()Lit/unimi/dsi/fastutil/longs/LongSet; v
	getFreeMapId ()I t
	getLiquidTicks ()Lnet/minecraft/world/level/ServerTickList; k
	getLiquidTicks ()Lnet/minecraft/world/level/TickList; F
	getMapData (Ljava/lang/String;)Lnet/minecraft/world/level/saveddata/maps/MapItemSavedData; a
	getPlayers (Ljava/util/function/Predicate;)Ljava/util/List; a
	getPoiManager ()Lnet/minecraft/world/entity/ai/village/poi/PoiManager; x
	getPortalForcer ()Lnet/minecraft/world/level/PortalForcer; q_
	getRaidAt (Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/entity/raid/Raid; c_
	getRaids ()Lnet/minecraft/world/entity/raid/Raids; y
	getRandomPlayer ()Lnet/minecraft/server/level/ServerPlayer; h
	getRecipeManager ()Lnet/minecraft/world/item/crafting/RecipeManager; o
	getScoreboard ()Lnet/minecraft/server/ServerScoreboard; o_
	getScoreboard ()Lnet/minecraft/world/scores/Scoreboard; D
	getSeed ()J B
	getServer ()Lnet/minecraft/server/MinecraftServer; l
	getShade (Lnet/minecraft/core/Direction;Z)F a
	getSharedSpawnPos ()Lnet/minecraft/core/BlockPos; u
	getStructureManager ()Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureManager; r_
	getTagManager ()Lnet/minecraft/tags/TagManager; p
	getUncachedNoiseBiome (III)Lnet/minecraft/world/level/biome/Biome; a
	globalLevelEvent (ILnet/minecraft/core/BlockPos;I)V b
	isCloseToVillage (Lnet/minecraft/core/BlockPos;I)Z a
	isFlat ()Z A
	isHandlingTick ()Z m_
	isRaided (Lnet/minecraft/core/BlockPos;)Z e
	isUUIDUsed (Lnet/minecraft/world/entity/Entity;)Z l
	isVillage (Lnet/minecraft/core/BlockPos;)Z b_
	isVillage (Lnet/minecraft/core/SectionPos;)Z a
	levelEvent (Lnet/minecraft/world/entity/player/Player;ILnet/minecraft/core/BlockPos;I)V a
	loadFromChunk (Lnet/minecraft/world/entity/Entity;)Z f
	makeObsidianPlatform (Lnet/minecraft/server/level/ServerLevel;)V a
	mayInteract (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/core/BlockPos;)Z a
	noSave ()Z q
	onBlockStateChange (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/state/BlockState;)V a
	onEntityRemoved (Lnet/minecraft/world/entity/Entity;)V g
	onReputationEvent (Lnet/minecraft/world/entity/ai/village/ReputationEventType;Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/entity/ReputationEventHandler;)V a
	playSound (Lnet/minecraft/world/entity/player/Player;DDDLnet/minecraft/sounds/SoundEvent;Lnet/minecraft/sounds/SoundSource;FF)V a
	playSound (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/entity/Entity;Lnet/minecraft/sounds/SoundEvent;Lnet/minecraft/sounds/SoundSource;FF)V a
	players ()Ljava/util/List; w
	registryAccess ()Lnet/minecraft/core/RegistryAccess; r
	removeFromChunk (Lnet/minecraft/world/entity/Entity;)V n
	removePlayerImmediately (Lnet/minecraft/server/level/ServerPlayer;)V e
	resetEmptyTime ()V p_
	runBlockEvents ()V ah
	save (Lnet/minecraft/util/ProgressListener;ZZ)V a
	saveDebugReport (Ljava/nio/file/Path;)V a
	saveLevelData ()V ag
	sectionsToVillage (Lnet/minecraft/core/SectionPos;)I b
	sendBlockUpdated (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/state/BlockState;I)V a
	sendParticles (Lnet/minecraft/core/particles/ParticleOptions;DDDIDDDD)I a
	sendParticles (Lnet/minecraft/server/level/ServerPlayer;Lnet/minecraft/core/particles/ParticleOptions;ZDDDIDDDD)Z a
	sendParticles (Lnet/minecraft/server/level/ServerPlayer;ZDDDLnet/minecraft/network/protocol/Packet;)Z a
	setChunkForced (IIZ)Z a
	setDayTime (J)V a
	setDefaultSpawnPos (Lnet/minecraft/core/BlockPos;)V a_
	setMapData (Lnet/minecraft/world/level/saveddata/maps/MapItemSavedData;)V a
	setWeatherParameters (IIZZ)V a
	stopWeather ()V af
	structureFeatureManager ()Lnet/minecraft/world/level/StructureFeatureManager; a
	tick (Ljava/util/function/BooleanSupplier;)V a
	tickBlock (Lnet/minecraft/world/level/TickNextTickData;)V b
	tickChunk (Lnet/minecraft/world/level/chunk/LevelChunk;I)V a
	tickCustomSpawners (ZZ)V a
	tickLiquid (Lnet/minecraft/world/level/TickNextTickData;)V a
	tickNonPassenger (Lnet/minecraft/world/entity/Entity;)V a
	tickPassenger (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/entity/Entity;)V a
	tickTime ()V b
	unload (Lnet/minecraft/world/level/chunk/LevelChunk;)V a
	updateChunkPos (Lnet/minecraft/world/entity/Entity;)V b
	updateSleepingPlayerList ()V n_
	wakeUpAllPlayers ()V ae
net/minecraft/server/level/ServerPlayer ze
	LOGGER bQ
	advancements bS
	camera ci
	canChatColor cg
	chatVisibility cf
	connection b
	containerCounter cu
	disconnected co
	enteredNetherPosition cp
	entitiesToRemove bR
	gameMode d
	ignoreSlotUpdateHack e
	isChangingDimension cj
	lastActionTime ch
	lastFoodSaturationZero cc
	lastRecordedAirLevel bW
	lastRecordedArmor bX
	lastRecordedExperience bZ
	lastRecordedFoodLevel bV
	lastRecordedHealthAndAbsorption bU
	lastRecordedLevel bY
	lastSectionPos cq
	lastSentExp cd
	lastSentFood cb
	lastSentHealth ca
	latency f
	levitationStartPos cm
	levitationStartTime cn
	recipeBook cl
	respawnDimension cr
	respawnForced ct
	respawnPosition cs
	seenCredits ck
	server c
	spawnInvulnerableTime ce
	stats bT
	wonGame g
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	attack (Lnet/minecraft/world/entity/Entity;)V f
	awardKillScore (Lnet/minecraft/world/entity/Entity;ILnet/minecraft/world/damagesource/DamageSource;)V a
	awardRecipes (Ljava/util/Collection;)I a
	awardRecipesByKey ([Lnet/minecraft/resources/ResourceLocation;)V a
	awardStat (Lnet/minecraft/stats/Stat;I)V a
	bedBlocked (Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;)Z b
	bedInRange (Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;)Z a
	broadcast (Lnet/minecraft/world/level/block/entity/BlockEntity;)V a
	broadcastCarriedItem ()V n
	broadcastToPlayer (Lnet/minecraft/server/level/ServerPlayer;)Z a
	canChatInColor ()Z w
	canHarmPlayer (Lnet/minecraft/world/entity/player/Player;)Z a
	cancelRemoveEntity (Lnet/minecraft/world/entity/Entity;)V d
	changeDimension (Lnet/minecraft/server/level/ServerLevel;)Lnet/minecraft/world/entity/Entity; a
	checkFallDamage (DZLnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/BlockPos;)V a
	closeContainer ()V m
	completeUsingItem ()V s
	createItemCooldowns ()Lnet/minecraft/world/item/ItemCooldowns; i
	crit (Lnet/minecraft/world/entity/Entity;)V a
	die (Lnet/minecraft/world/damagesource/DamageSource;)V a
	disconnect ()V p
	displayClientMessage (Lnet/minecraft/network/chat/Component;Z)V a
	doCheckFallDamage (DZ)V a
	doCloseContainer ()V o
	doTick ()V w_
	drop (Lnet/minecraft/world/item/ItemStack;ZZ)Lnet/minecraft/world/entity/item/ItemEntity; a
	fudgeSpawnLocation (Lnet/minecraft/server/level/ServerLevel;)V b
	getAddEntityPacket ()Lnet/minecraft/network/protocol/Packet; O
	getAdvancements ()Lnet/minecraft/server/PlayerAdvancements; J
	getCamera ()Lnet/minecraft/world/entity/Entity; D
	getChatVisibility ()Lnet/minecraft/world/entity/player/ChatVisiblity; x
	getCoprime (I)I u
	getIpAddress ()Ljava/lang/String; v
	getLastActionTime ()J F
	getLastSectionPos ()Lnet/minecraft/core/SectionPos; N
	getLevel ()Lnet/minecraft/server/level/ServerLevel; u
	getPermissionLevel ()I y
	getRecipeBook ()Lnet/minecraft/stats/ServerRecipeBook; B
	getRespawnDimension ()Lnet/minecraft/resources/ResourceKey; L
	getRespawnPosition ()Lnet/minecraft/core/BlockPos; K
	getStats ()Lnet/minecraft/stats/ServerStatsCounter; A
	getTabListDisplayName ()Lnet/minecraft/network/chat/Component; G
	giveExperienceLevels (I)V c
	giveExperiencePoints (I)V d
	handleTeamKill (Ljava/lang/String;Ljava/lang/String;[Lnet/minecraft/world/scores/criteria/ObjectiveCriteria;)V a
	hasChangedDimension ()V I
	hasDisconnected ()Z q
	hurt (Lnet/minecraft/world/damagesource/DamageSource;F)Z a
	initMenu ()V f
	isChangingDimension ()Z H
	isCreative ()Z b_
	isInvulnerableTo (Lnet/minecraft/world/damagesource/DamageSource;)Z b
	isPvpAllowed ()Z eX
	isReachableBedBlock (Lnet/minecraft/core/BlockPos;)Z g
	isRespawnForced ()Z M
	isSpectator ()Z a_
	lookAt (Lnet/minecraft/commands/arguments/EntityAnchorArgument$Anchor;Lnet/minecraft/world/entity/Entity;Lnet/minecraft/commands/arguments/EntityAnchorArgument$Anchor;)V a
	lookAt (Lnet/minecraft/commands/arguments/EntityAnchorArgument$Anchor;Lnet/minecraft/world/phys/Vec3;)V a
	magicCrit (Lnet/minecraft/world/entity/Entity;)V b
	moveTo (DDD)V b
	nextContainerCounter ()V eY
	onChangedBlock (Lnet/minecraft/core/BlockPos;)V c
	onEffectAdded (Lnet/minecraft/world/effect/MobEffectInstance;)V a
	onEffectRemoved (Lnet/minecraft/world/effect/MobEffectInstance;)V b
	onEffectUpdated (Lnet/minecraft/world/effect/MobEffectInstance;Z)V a
	onEnchantmentPerformed (Lnet/minecraft/world/item/ItemStack;I)V a
	onEnterCombat ()V g
	onInsideBlock (Lnet/minecraft/world/level/block/state/BlockState;)V a
	onLeaveCombat ()V h
	onUpdateAbilities ()V t
	openCommandBlock (Lnet/minecraft/world/level/block/entity/CommandBlockEntity;)V a
	openHorseInventory (Lnet/minecraft/world/entity/animal/horse/AbstractHorse;Lnet/minecraft/world/Container;)V a
	openItemGui (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/InteractionHand;)V a
	openMenu (Lnet/minecraft/world/MenuProvider;)Ljava/util/OptionalInt; a
	openTextEdit (Lnet/minecraft/world/level/block/entity/SignBlockEntity;)V a
	playNotifySound (Lnet/minecraft/sounds/SoundEvent;Lnet/minecraft/sounds/SoundSource;FF)V a
	processDimensionDelay ()V E
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	refreshContainer (Lnet/minecraft/world/inventory/AbstractContainerMenu;)V a
	refreshContainer (Lnet/minecraft/world/inventory/AbstractContainerMenu;Lnet/minecraft/core/NonNullList;)V a
	resetLastActionTime ()V z
	resetRecipes (Ljava/util/Collection;)I b
	resetSentInfo ()V r
	resetStat (Lnet/minecraft/stats/Stat;)V a
	restoreFrom (Lnet/minecraft/server/level/ServerPlayer;Z)V a
	sendMerchantOffers (ILnet/minecraft/world/item/trading/MerchantOffers;IIZZ)V a
	sendMessage (Lnet/minecraft/network/chat/Component;Ljava/util/UUID;)V a
	sendMessage (Lnet/minecraft/network/chat/Component;Lnet/minecraft/network/chat/ChatType;Ljava/util/UUID;)V a
	sendRemoveEntity (Lnet/minecraft/world/entity/Entity;)V c
	sendTexturePack (Ljava/lang/String;Ljava/lang/String;)V a
	setCamera (Lnet/minecraft/world/entity/Entity;)V e
	setContainerData (Lnet/minecraft/world/inventory/AbstractContainerMenu;II)V a
	setExperienceLevels (I)V b
	setExperiencePoints (I)V a
	setGameMode (Lnet/minecraft/world/level/GameType;)V a
	setLastSectionPos (Lnet/minecraft/core/SectionPos;)V a
	setPlayerInput (FFZZ)V a
	setRespawnPosition (Lnet/minecraft/resources/ResourceKey;Lnet/minecraft/core/BlockPos;ZZ)V a
	slotChanged (Lnet/minecraft/world/inventory/AbstractContainerMenu;ILnet/minecraft/world/item/ItemStack;)V a
	startRiding (Lnet/minecraft/world/entity/Entity;Z)Z a
	startSleepInBed (Lnet/minecraft/core/BlockPos;)Lcom/mojang/datafixers/util/Either; a
	startSleeping (Lnet/minecraft/core/BlockPos;)V b
	stopRiding ()V l
	stopSleepInBed (ZZ)V a
	swing (Lnet/minecraft/world/InteractionHand;)V a
	take (Lnet/minecraft/world/entity/Entity;I)V a
	teleportTo (DDD)V a
	teleportTo (Lnet/minecraft/server/level/ServerLevel;DDDFF)V a
	tellNeutralMobsThatIDied ()V eW
	tick ()V j
	trackChunk (Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/network/protocol/Packet;Lnet/minecraft/network/protocol/Packet;)V a
	triggerDimensionChangeTriggers (Lnet/minecraft/server/level/ServerLevel;)V c
	untrackChunk (Lnet/minecraft/world/level/ChunkPos;)V a
	updateInvisibilityStatus ()V C
	updateOptions (Lnet/minecraft/network/protocol/game/ServerboundClientInformationPacket;)V a
	updateScoreForCriteria (Lnet/minecraft/world/scores/criteria/ObjectiveCriteria;I)V a
net/minecraft/server/level/ServerPlayerGameMode zf
	LOGGER c
	delayedDestroyPos k
	delayedTickStart l
	destroyPos h
	destroyProgressStart g
	gameModeForPlayer d
	gameTicks i
	hasDelayedDestroy j
	isDestroyingBlock f
	lastSentState m
	level a
	player b
	previousGameModeForPlayer e
	destroyAndAck (Lnet/minecraft/core/BlockPos;Lnet/minecraft/network/protocol/game/ServerboundPlayerActionPacket$Action;Ljava/lang/String;)V a
	destroyBlock (Lnet/minecraft/core/BlockPos;)Z a
	getGameModeForPlayer ()Lnet/minecraft/world/level/GameType; b
	getPreviousGameModeForPlayer ()Lnet/minecraft/world/level/GameType; c
	handleBlockBreakAction (Lnet/minecraft/core/BlockPos;Lnet/minecraft/network/protocol/game/ServerboundPlayerActionPacket$Action;Lnet/minecraft/core/Direction;I)V a
	incrementDestroyProgress (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/BlockPos;I)F a
	isCreative ()Z e
	isSurvival ()Z d
	setGameModeForPlayer (Lnet/minecraft/world/level/GameType;)V a
	setGameModeForPlayer (Lnet/minecraft/world/level/GameType;Lnet/minecraft/world/level/GameType;)V a
	setLevel (Lnet/minecraft/server/level/ServerLevel;)V a
	tick ()V a
	updateGameMode (Lnet/minecraft/world/level/GameType;)V b
	useItem (Lnet/minecraft/server/level/ServerPlayer;Lnet/minecraft/world/level/Level;Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResult; a
	useItemOn (Lnet/minecraft/server/level/ServerPlayer;Lnet/minecraft/world/level/Level;Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/InteractionHand;Lnet/minecraft/world/phys/BlockHitResult;)Lnet/minecraft/world/InteractionResult; a
net/minecraft/server/level/ThreadedLevelLightEngine zg
	LOGGER a
	chunkMap d
	lightTasks c
	scheduled g
	sorterMailbox e
	taskMailbox b
	taskPerBatch f
	addTask (IILjava/util/function/IntSupplier;Lnet/minecraft/server/level/ThreadedLevelLightEngine$TaskType;Ljava/lang/Runnable;)V a
	addTask (IILnet/minecraft/server/level/ThreadedLevelLightEngine$TaskType;Ljava/lang/Runnable;)V a
	checkBlock (Lnet/minecraft/core/BlockPos;)V a
	enableLightSources (Lnet/minecraft/world/level/ChunkPos;Z)V a
	lightChunk (Lnet/minecraft/world/level/chunk/ChunkAccess;Z)Ljava/util/concurrent/CompletableFuture; a
	onBlockEmissionIncrease (Lnet/minecraft/core/BlockPos;I)V a
	queueSectionData (Lnet/minecraft/world/level/LightLayer;Lnet/minecraft/core/SectionPos;Lnet/minecraft/world/level/chunk/DataLayer;Z)V a
	retainData (Lnet/minecraft/world/level/ChunkPos;Z)V b
	runUpdate ()V b
	runUpdates (IZZ)I a
	setTaskPerBatch (I)V a
	tryScheduleUpdate ()V A_
	updateChunkStatus (Lnet/minecraft/world/level/ChunkPos;)V a
	updateSectionStatus (Lnet/minecraft/core/SectionPos;Z)V a
net/minecraft/server/level/ThreadedLevelLightEngine$TaskType zg$a
	$VALUES c
	POST_UPDATE b
	PRE_UPDATE a
net/minecraft/server/level/Ticket zh
	createdTick d
	key c
	ticketLevel b
	type a
	compareTo (Lnet/minecraft/server/level/Ticket;)I a
	getTicketLevel ()I b
	getType ()Lnet/minecraft/server/level/TicketType; a
	setCreatedTick (J)V a
	timedOut (J)Z b
net/minecraft/server/level/TicketType zi
	DRAGON b
	FORCED d
	LIGHT e
	PLAYER c
	PORTAL f
	POST_TELEPORT g
	START a
	UNKNOWN h
	comparator j
	name i
	timeout k
	create (Ljava/lang/String;Ljava/util/Comparator;)Lnet/minecraft/server/level/TicketType; a
	create (Ljava/lang/String;Ljava/util/Comparator;I)Lnet/minecraft/server/level/TicketType; a
	getComparator ()Ljava/util/Comparator; a
	timeout ()J b
net/minecraft/server/level/WorldGenRegion zj
	LOGGER a
	biomeManager m
	blockTicks k
	cache b
	dimensionType j
	firstPos n
	lastPos o
	level f
	levelData h
	liquidTicks l
	random i
	seed g
	size e
	x c
	z d
	addFreshEntity (Lnet/minecraft/world/entity/Entity;)Z c
	addParticle (Lnet/minecraft/core/particles/ParticleOptions;DDDDDD)V a
	destroyBlock (Lnet/minecraft/core/BlockPos;ZLnet/minecraft/world/entity/Entity;I)Z a
	dimensionType ()Lnet/minecraft/world/level/dimension/DimensionType; m
	getBiomeManager ()Lnet/minecraft/world/level/biome/BiomeManager; d
	getBlockEntity (Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/entity/BlockEntity; c
	getBlockState (Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; d_
	getBlockTicks ()Lnet/minecraft/world/level/TickList; G
	getCenterX ()I a
	getCenterZ ()I b
	getChunk (II)Lnet/minecraft/world/level/chunk/ChunkAccess; a
	getChunk (IILnet/minecraft/world/level/chunk/ChunkStatus;Z)Lnet/minecraft/world/level/chunk/ChunkAccess; a
	getChunkSource ()Lnet/minecraft/world/level/chunk/ChunkSource; E
	getCurrentDifficultyAt (Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/DifficultyInstance; d
	getEntities (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/phys/AABB;Ljava/util/function/Predicate;)Ljava/util/List; a
	getEntitiesOfClass (Ljava/lang/Class;Lnet/minecraft/world/phys/AABB;Ljava/util/function/Predicate;)Ljava/util/List; a
	getFluidState (Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/material/FluidState; b
	getHeight (Lnet/minecraft/world/level/levelgen/Heightmap$Types;II)I a
	getLevel ()Lnet/minecraft/server/level/ServerLevel; h
	getLevel ()Lnet/minecraft/world/level/Level; n
	getLevelData ()Lnet/minecraft/world/level/storage/LevelData; u_
	getLightEngine ()Lnet/minecraft/world/level/lighting/LevelLightEngine; e
	getLiquidTicks ()Lnet/minecraft/world/level/TickList; F
	getNearestPlayer (DDDDLjava/util/function/Predicate;)Lnet/minecraft/world/entity/player/Player; a
	getRandom ()Ljava/util/Random; v_
	getSeaLevel ()I t_
	getSeed ()J B
	getServer ()Lnet/minecraft/server/MinecraftServer; l
	getShade (Lnet/minecraft/core/Direction;Z)F a
	getSkyDarken ()I c
	getUncachedNoiseBiome (III)Lnet/minecraft/world/level/biome/Biome; a
	getWorldBorder ()Lnet/minecraft/world/level/border/WorldBorder; f
	hasChunk (II)Z b
	isClientSide ()Z s_
	isFluidAtPosition (Lnet/minecraft/core/BlockPos;Ljava/util/function/Predicate;)Z b
	isStateAtPosition (Lnet/minecraft/core/BlockPos;Ljava/util/function/Predicate;)Z a
	levelEvent (Lnet/minecraft/world/entity/player/Player;ILnet/minecraft/core/BlockPos;I)V a
	markPosForPostprocessing (Lnet/minecraft/core/BlockPos;)V e
	playSound (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/core/BlockPos;Lnet/minecraft/sounds/SoundEvent;Lnet/minecraft/sounds/SoundSource;FF)V a
	players ()Ljava/util/List; w
	removeBlock (Lnet/minecraft/core/BlockPos;Z)Z a
	setBlock (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;II)Z a
net/minecraft/server/level/WorldGenTickList zk
	index a
	hasScheduledTick (Lnet/minecraft/core/BlockPos;Ljava/lang/Object;)Z a
	scheduleTick (Lnet/minecraft/core/BlockPos;Ljava/lang/Object;ILnet/minecraft/world/level/TickPriority;)V a
	size ()I a
	willTickThisTick (Lnet/minecraft/core/BlockPos;Ljava/lang/Object;)Z b
net/minecraft/server/level/progress/ChunkProgressListener zm
	onStatusChange (Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/world/level/chunk/ChunkStatus;)V a
	start ()V a
	stop ()V b
	updateSpawnPos (Lnet/minecraft/world/level/ChunkPos;)V a
net/minecraft/server/level/progress/ChunkProgressListenerFactory zn
net/minecraft/server/level/progress/LoggerChunkProgressListener zo
	LOGGER a
	count c
	maxCount b
	nextTickTime e
	startTime d
	getProgress ()I c
	onStatusChange (Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/world/level/chunk/ChunkStatus;)V a
	start ()V a
	stop ()V b
	updateSpawnPos (Lnet/minecraft/world/level/ChunkPos;)V a
net/minecraft/server/level/progress/ProcessorChunkProgressListener zp
	delegate a
	mailbox b
	onStatusChange (Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/world/level/chunk/ChunkStatus;)V a
	start ()V a
	stop ()V b
	updateSpawnPos (Lnet/minecraft/world/level/ChunkPos;)V a
net/minecraft/server/level/progress/StoringChunkProgressListener zq
	delegate a
	diameter f
	fullDiameter d
	radius e
	spawnPos c
	started g
	statuses b
	getDiameter ()I d
	getFullDiameter ()I c
	getProgress ()I e
	getStatus (II)Lnet/minecraft/world/level/chunk/ChunkStatus; a
	onStatusChange (Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/world/level/chunk/ChunkStatus;)V a
	start ()V a
	stop ()V b
	updateSpawnPos (Lnet/minecraft/world/level/ChunkPos;)V a
net/minecraft/server/network/LegacyQueryHandler zs
	LOGGER a
	serverConnectionListener b
	createReply (Ljava/lang/String;)Lio/netty/buffer/ByteBuf; a
	sendFlushAndClose (Lio/netty/channel/ChannelHandlerContext;Lio/netty/buffer/ByteBuf;)V a
net/minecraft/server/network/MemoryServerHandshakePacketListenerImpl zt
	connection b
	server a
	getConnection ()Lnet/minecraft/network/Connection; a
	handleIntention (Lnet/minecraft/network/protocol/handshake/ClientIntentionPacket;)V a
	onDisconnect (Lnet/minecraft/network/chat/Component;)V a
net/minecraft/server/network/ServerConnectionListener zu
	LOGGER d
	SERVER_EPOLL_EVENT_GROUP b
	SERVER_EVENT_GROUP a
	channels f
	connections g
	running c
	server e
	getServer ()Lnet/minecraft/server/MinecraftServer; d
	startMemoryChannel ()Ljava/net/SocketAddress; a
	startTcpServerListener (Ljava/net/InetAddress;I)V a
	stop ()V b
	tick ()V c
net/minecraft/server/network/ServerConnectionListener$LatencySimulator zu$a
	TIMER a
	delay b
	delayDownstream (Lio/netty/channel/ChannelHandlerContext;Ljava/lang/Object;)V a
net/minecraft/server/network/ServerGamePacketListenerImpl zv
	LOGGER c
	aboveGroundTickCount C
	aboveGroundVehicleTickCount E
	awaitingPositionFromClient y
	awaitingTeleport z
	awaitingTeleportTime A
	chatSpamTickCount i
	clientIsFloating B
	clientVehicleIsFloating D
	connection a
	dropSpamTickCount j
	expectedAcks k
	firstGoodX l
	firstGoodY m
	firstGoodZ n
	keepAliveChallenge h
	keepAlivePending g
	keepAliveTime f
	knownMovePacketCount G
	lastGoodX o
	lastGoodY p
	lastGoodZ q
	lastVehicle r
	player b
	receivedMovePacketCount F
	server d
	tickCount e
	vehicleFirstGoodX s
	vehicleFirstGoodY t
	vehicleFirstGoodZ u
	vehicleLastGoodX v
	vehicleLastGoodY w
	vehicleLastGoodZ x
	containsInvalidValues (Lnet/minecraft/network/protocol/game/ServerboundMovePlayerPacket;)Z b
	containsInvalidValues (Lnet/minecraft/network/protocol/game/ServerboundMoveVehiclePacket;)Z b
	disconnect (Lnet/minecraft/network/chat/Component;)V b
	getConnection ()Lnet/minecraft/network/Connection; a
	handleAcceptTeleportPacket (Lnet/minecraft/network/protocol/game/ServerboundAcceptTeleportationPacket;)V a
	handleAnimate (Lnet/minecraft/network/protocol/game/ServerboundSwingPacket;)V a
	handleBlockEntityTagQuery (Lnet/minecraft/network/protocol/game/ServerboundBlockEntityTagQuery;)V a
	handleChangeDifficulty (Lnet/minecraft/network/protocol/game/ServerboundChangeDifficultyPacket;)V a
	handleChat (Lnet/minecraft/network/protocol/game/ServerboundChatPacket;)V a
	handleClientCommand (Lnet/minecraft/network/protocol/game/ServerboundClientCommandPacket;)V a
	handleClientInformation (Lnet/minecraft/network/protocol/game/ServerboundClientInformationPacket;)V a
	handleCommand (Ljava/lang/String;)V c
	handleContainerAck (Lnet/minecraft/network/protocol/game/ServerboundContainerAckPacket;)V a
	handleContainerButtonClick (Lnet/minecraft/network/protocol/game/ServerboundContainerButtonClickPacket;)V a
	handleContainerClick (Lnet/minecraft/network/protocol/game/ServerboundContainerClickPacket;)V a
	handleContainerClose (Lnet/minecraft/network/protocol/game/ServerboundContainerClosePacket;)V a
	handleCustomCommandSuggestions (Lnet/minecraft/network/protocol/game/ServerboundCommandSuggestionPacket;)V a
	handleCustomPayload (Lnet/minecraft/network/protocol/game/ServerboundCustomPayloadPacket;)V a
	handleEditBook (Lnet/minecraft/network/protocol/game/ServerboundEditBookPacket;)V a
	handleEntityTagQuery (Lnet/minecraft/network/protocol/game/ServerboundEntityTagQuery;)V a
	handleInteract (Lnet/minecraft/network/protocol/game/ServerboundInteractPacket;)V a
	handleJigsawGenerate (Lnet/minecraft/network/protocol/game/ServerboundJigsawGeneratePacket;)V a
	handleKeepAlive (Lnet/minecraft/network/protocol/game/ServerboundKeepAlivePacket;)V a
	handleLockDifficulty (Lnet/minecraft/network/protocol/game/ServerboundLockDifficultyPacket;)V a
	handleMovePlayer (Lnet/minecraft/network/protocol/game/ServerboundMovePlayerPacket;)V a
	handleMoveVehicle (Lnet/minecraft/network/protocol/game/ServerboundMoveVehiclePacket;)V a
	handlePaddleBoat (Lnet/minecraft/network/protocol/game/ServerboundPaddleBoatPacket;)V a
	handlePickItem (Lnet/minecraft/network/protocol/game/ServerboundPickItemPacket;)V a
	handlePlaceRecipe (Lnet/minecraft/network/protocol/game/ServerboundPlaceRecipePacket;)V a
	handlePlayerAbilities (Lnet/minecraft/network/protocol/game/ServerboundPlayerAbilitiesPacket;)V a
	handlePlayerAction (Lnet/minecraft/network/protocol/game/ServerboundPlayerActionPacket;)V a
	handlePlayerCommand (Lnet/minecraft/network/protocol/game/ServerboundPlayerCommandPacket;)V a
	handlePlayerInput (Lnet/minecraft/network/protocol/game/ServerboundPlayerInputPacket;)V a
	handleRecipeBookUpdatePacket (Lnet/minecraft/network/protocol/game/ServerboundRecipeBookUpdatePacket;)V a
	handleRenameItem (Lnet/minecraft/network/protocol/game/ServerboundRenameItemPacket;)V a
	handleResourcePackResponse (Lnet/minecraft/network/protocol/game/ServerboundResourcePackPacket;)V a
	handleSeenAdvancements (Lnet/minecraft/network/protocol/game/ServerboundSeenAdvancementsPacket;)V a
	handleSelectTrade (Lnet/minecraft/network/protocol/game/ServerboundSelectTradePacket;)V a
	handleSetBeaconPacket (Lnet/minecraft/network/protocol/game/ServerboundSetBeaconPacket;)V a
	handleSetCarriedItem (Lnet/minecraft/network/protocol/game/ServerboundSetCarriedItemPacket;)V a
	handleSetCommandBlock (Lnet/minecraft/network/protocol/game/ServerboundSetCommandBlockPacket;)V a
	handleSetCommandMinecart (Lnet/minecraft/network/protocol/game/ServerboundSetCommandMinecartPacket;)V a
	handleSetCreativeModeSlot (Lnet/minecraft/network/protocol/game/ServerboundSetCreativeModeSlotPacket;)V a
	handleSetJigsawBlock (Lnet/minecraft/network/protocol/game/ServerboundSetJigsawBlockPacket;)V a
	handleSetStructureBlock (Lnet/minecraft/network/protocol/game/ServerboundSetStructureBlockPacket;)V a
	handleSignUpdate (Lnet/minecraft/network/protocol/game/ServerboundSignUpdatePacket;)V a
	handleTeleportToEntityPacket (Lnet/minecraft/network/protocol/game/ServerboundTeleportToEntityPacket;)V a
	handleUseItem (Lnet/minecraft/network/protocol/game/ServerboundUseItemPacket;)V a
	handleUseItemOn (Lnet/minecraft/network/protocol/game/ServerboundUseItemOnPacket;)V a
	info (Ljava/lang/String;)V a
	isPlayerCollidingWithAnythingNew (Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/world/phys/AABB;)Z a
	isSingleplayerOwner ()Z d
	noBlocksAround (Lnet/minecraft/world/entity/Entity;)Z a
	onDisconnect (Lnet/minecraft/network/chat/Component;)V a
	resetPosition ()V c
	send (Lnet/minecraft/network/protocol/Packet;)V a
	send (Lnet/minecraft/network/protocol/Packet;Lio/netty/util/concurrent/GenericFutureListener;)V a
	teleport (DDDFF)V a
	teleport (DDDFFLjava/util/Set;)V a
	tick ()V b
	warn (Ljava/lang/String;)V b
	wasBlockPlacementAttempt (Lnet/minecraft/server/level/ServerPlayer;Lnet/minecraft/world/item/ItemStack;)Z a
net/minecraft/server/network/ServerHandshakePacketListenerImpl zw
	IGNORE_STATUS_REASON a
	connection c
	server b
	getConnection ()Lnet/minecraft/network/Connection; a
	handleIntention (Lnet/minecraft/network/protocol/handshake/ClientIntentionPacket;)V a
	onDisconnect (Lnet/minecraft/network/chat/Component;)V a
net/minecraft/server/network/ServerLoginPacketListenerImpl zx
	LOGGER c
	RANDOM d
	UNIQUE_THREAD_ID b
	connection a
	delayedAcceptPlayer l
	gameProfile i
	nonce e
	secretKey k
	server f
	serverId j
	state g
	tick h
	createFakeProfile (Lcom/mojang/authlib/GameProfile;)Lcom/mojang/authlib/GameProfile; a
	disconnect (Lnet/minecraft/network/chat/Component;)V b
	getConnection ()Lnet/minecraft/network/Connection; a
	getUserName ()Ljava/lang/String; d
	handleAcceptedLogin ()V c
	handleCustomQueryPacket (Lnet/minecraft/network/protocol/login/ServerboundCustomQueryPacket;)V a
	handleHello (Lnet/minecraft/network/protocol/login/ServerboundHelloPacket;)V a
	handleKey (Lnet/minecraft/network/protocol/login/ServerboundKeyPacket;)V a
	onDisconnect (Lnet/minecraft/network/chat/Component;)V a
	tick ()V b
net/minecraft/server/network/ServerLoginPacketListenerImpl$State zx$a
	$VALUES h
	ACCEPTED g
	AUTHENTICATING c
	DELAY_ACCEPT f
	HELLO a
	KEY b
	NEGOTIATING d
	READY_TO_ACCEPT e
net/minecraft/server/network/ServerStatusPacketListenerImpl zy
	DISCONNECT_REASON a
	connection c
	hasRequestedStatus d
	server b
	getConnection ()Lnet/minecraft/network/Connection; a
	handlePingRequest (Lnet/minecraft/network/protocol/status/ServerboundPingRequestPacket;)V a
	handleStatusRequest (Lnet/minecraft/network/protocol/status/ServerboundStatusRequestPacket;)V a
	onDisconnect (Lnet/minecraft/network/chat/Component;)V a
net/minecraft/server/packs/AbstractPackResources aab
	LOGGER b
	file a
	getMetadataFromStream (Lnet/minecraft/server/packs/metadata/MetadataSectionSerializer;Ljava/io/InputStream;)Ljava/lang/Object; a
	getMetadataSection (Lnet/minecraft/server/packs/metadata/MetadataSectionSerializer;)Ljava/lang/Object; a
	getName ()Ljava/lang/String; a
	getPathFromLocation (Lnet/minecraft/server/packs/PackType;Lnet/minecraft/resources/ResourceLocation;)Ljava/lang/String; c
	getRelativePath (Ljava/io/File;Ljava/io/File;)Ljava/lang/String; a
	getResource (Ljava/lang/String;)Ljava/io/InputStream; a
	getResource (Lnet/minecraft/server/packs/PackType;Lnet/minecraft/resources/ResourceLocation;)Ljava/io/InputStream; a
	getRootResource (Ljava/lang/String;)Ljava/io/InputStream; b
	hasResource (Ljava/lang/String;)Z c
	hasResource (Lnet/minecraft/server/packs/PackType;Lnet/minecraft/resources/ResourceLocation;)Z b
	logWarning (Ljava/lang/String;)V d
net/minecraft/server/packs/FilePackResources aac
	SPLITTER b
	zipFile c
	getNamespaces (Lnet/minecraft/server/packs/PackType;)Ljava/util/Set; a
	getOrCreateZipFile ()Ljava/util/zip/ZipFile; b
	getResource (Ljava/lang/String;)Ljava/io/InputStream; a
	getResources (Lnet/minecraft/server/packs/PackType;Ljava/lang/String;Ljava/lang/String;ILjava/util/function/Predicate;)Ljava/util/Collection; a
	hasResource (Ljava/lang/String;)Z c
net/minecraft/server/packs/FolderPackResources aad
	BACKSLASH_MATCHER d
	LOGGER b
	ON_WINDOWS c
	getFile (Ljava/lang/String;)Ljava/io/File; e
	getNamespaces (Lnet/minecraft/server/packs/PackType;)Ljava/util/Set; a
	getResource (Ljava/lang/String;)Ljava/io/InputStream; a
	getResources (Lnet/minecraft/server/packs/PackType;Ljava/lang/String;Ljava/lang/String;ILjava/util/function/Predicate;)Ljava/util/Collection; a
	hasResource (Ljava/lang/String;)Z c
	listResources (Ljava/io/File;ILjava/lang/String;Ljava/util/List;Ljava/lang/String;Ljava/util/function/Predicate;)V a
	validatePath (Ljava/io/File;Ljava/lang/String;)Z a
net/minecraft/server/packs/PackResources aae
	getMetadataSection (Lnet/minecraft/server/packs/metadata/MetadataSectionSerializer;)Ljava/lang/Object; a
	getName ()Ljava/lang/String; a
	getNamespaces (Lnet/minecraft/server/packs/PackType;)Ljava/util/Set; a
	getResource (Lnet/minecraft/server/packs/PackType;Lnet/minecraft/resources/ResourceLocation;)Ljava/io/InputStream; a
	getResources (Lnet/minecraft/server/packs/PackType;Ljava/lang/String;Ljava/lang/String;ILjava/util/function/Predicate;)Ljava/util/Collection; a
	getRootResource (Ljava/lang/String;)Ljava/io/InputStream; b
	hasResource (Lnet/minecraft/server/packs/PackType;Lnet/minecraft/resources/ResourceLocation;)Z b
net/minecraft/server/packs/PackType aaf
	$VALUES d
	CLIENT_RESOURCES a
	SERVER_DATA b
	directory c
	getDirectory ()Ljava/lang/String; a
net/minecraft/server/packs/ResourcePackFileNotFoundException aag
net/minecraft/server/packs/VanillaPackResources aah
	JAR_FILESYSTEM_BY_TYPE e
	LOGGER d
	clientObject b
	generatedDir a
	namespaces c
	createPath (Lnet/minecraft/server/packs/PackType;Lnet/minecraft/resources/ResourceLocation;)Ljava/lang/String; d
	getMetadataSection (Lnet/minecraft/server/packs/metadata/MetadataSectionSerializer;)Ljava/lang/Object; a
	getName ()Ljava/lang/String; a
	getNamespaces (Lnet/minecraft/server/packs/PackType;)Ljava/util/Set; a
	getResource (Lnet/minecraft/server/packs/PackType;Lnet/minecraft/resources/ResourceLocation;)Ljava/io/InputStream; a
	getResourceAsStream (Ljava/lang/String;)Ljava/io/InputStream; a
	getResourceAsStream (Lnet/minecraft/server/packs/PackType;Lnet/minecraft/resources/ResourceLocation;)Ljava/io/InputStream; c
	getResources (Ljava/util/Collection;ILjava/lang/String;Ljava/nio/file/Path;Ljava/lang/String;Ljava/util/function/Predicate;)V a
	getResources (Lnet/minecraft/server/packs/PackType;Ljava/lang/String;Ljava/lang/String;ILjava/util/function/Predicate;)Ljava/util/Collection; a
	getRootResource (Ljava/lang/String;)Ljava/io/InputStream; b
	hasResource (Lnet/minecraft/server/packs/PackType;Lnet/minecraft/resources/ResourceLocation;)Z b
	isResourceUrlValid (Ljava/lang/String;Ljava/net/URL;)Z a
net/minecraft/server/packs/metadata/MetadataSectionSerializer aai
	fromJson (Lcom/google/gson/JsonObject;)Ljava/lang/Object; a
	getMetadataSectionName ()Ljava/lang/String; a
net/minecraft/server/packs/metadata/pack/PackMetadataSection aaj
	SERIALIZER a
	description b
	packFormat c
	getDescription ()Lnet/minecraft/network/chat/Component; a
	getPackFormat ()I b
net/minecraft/server/packs/metadata/pack/PackMetadataSectionSerializer aak
	fromJson (Lcom/google/gson/JsonObject;)Ljava/lang/Object; a
	fromJson (Lcom/google/gson/JsonObject;)Lnet/minecraft/server/packs/metadata/pack/PackMetadataSection; b
	getMetadataSectionName ()Ljava/lang/String; a
net/minecraft/server/packs/repository/FolderRepositorySource aao
	RESOURCEPACK_FILTER a
	folder b
	packSource c
	createSupplier (Ljava/io/File;)Ljava/util/function/Supplier; a
	loadPacks (Ljava/util/function/Consumer;Lnet/minecraft/server/packs/repository/Pack$PackConstructor;)V a
net/minecraft/server/packs/repository/Pack aap
	BROKEN_ASSETS_FALLBACK b
	LOGGER a
	compatibility g
	defaultPosition h
	description f
	fixedPosition j
	id c
	packSource k
	required i
	supplier d
	title e
	create (Ljava/lang/String;ZLjava/util/function/Supplier;Lnet/minecraft/server/packs/repository/Pack$PackConstructor;Lnet/minecraft/server/packs/repository/Pack$Position;Lnet/minecraft/server/packs/repository/PackSource;)Lnet/minecraft/server/packs/repository/Pack; a
	getChatLink (Z)Lnet/minecraft/network/chat/Component; a
	getCompatibility ()Lnet/minecraft/server/packs/repository/PackCompatibility; c
	getDefaultPosition ()Lnet/minecraft/server/packs/repository/Pack$Position; h
	getDescription ()Lnet/minecraft/network/chat/Component; b
	getId ()Ljava/lang/String; e
	getPackSource ()Lnet/minecraft/server/packs/repository/PackSource; i
	getTitle ()Lnet/minecraft/network/chat/Component; a
	isFixedPosition ()Z g
	isRequired ()Z f
	open ()Lnet/minecraft/server/packs/PackResources; d
net/minecraft/server/packs/repository/Pack$PackConstructor aap$a
net/minecraft/server/packs/repository/Pack$Position aap$b
	$VALUES c
	BOTTOM b
	TOP a
	insert (Ljava/util/List;Ljava/lang/Object;Ljava/util/function/Function;Z)I a
	opposite ()Lnet/minecraft/server/packs/repository/Pack$Position; a
net/minecraft/server/packs/repository/PackCompatibility aaq
	$VALUES f
	COMPATIBLE c
	TOO_NEW b
	TOO_OLD a
	confirmation e
	description d
	forFormat (I)Lnet/minecraft/server/packs/repository/PackCompatibility; a
	getConfirmation ()Lnet/minecraft/network/chat/Component; c
	getDescription ()Lnet/minecraft/network/chat/Component; b
	isCompatible ()Z a
net/minecraft/server/packs/repository/PackRepository aar
	available b
	constructor d
	selected c
	sources a
	discoverAvailable ()Ljava/util/Map; g
	getAvailableIds ()Ljava/util/Collection; b
	getAvailablePacks ()Ljava/util/Collection; c
	getAvailablePacks (Ljava/util/Collection;)Ljava/util/stream/Stream; c
	getPack (Ljava/lang/String;)Lnet/minecraft/server/packs/repository/Pack; a
	getSelectedIds ()Ljava/util/Collection; d
	getSelectedPacks ()Ljava/util/Collection; e
	isAvailable (Ljava/lang/String;)Z b
	openAllSelected ()Ljava/util/List; f
	rebuildSelected (Ljava/util/Collection;)Ljava/util/List; b
	reload ()V a
	setSelected (Ljava/util/Collection;)V a
net/minecraft/server/packs/repository/PackSource aas
	BUILT_IN b
	DEFAULT a
	SERVER d
	WORLD c
	decorating (Ljava/lang/String;)Lnet/minecraft/server/packs/repository/PackSource; a
	passThrough ()Lnet/minecraft/server/packs/repository/PackSource; a
net/minecraft/server/packs/repository/RepositorySource aat
	loadPacks (Ljava/util/function/Consumer;Lnet/minecraft/server/packs/repository/Pack$PackConstructor;)V a
net/minecraft/server/packs/repository/ServerPacksSource aau
	vanillaPack a
	loadPacks (Ljava/util/function/Consumer;Lnet/minecraft/server/packs/repository/Pack$PackConstructor;)V a
net/minecraft/server/packs/resources/FallbackResourceManager aaw
	LOGGER b
	fallbacks a
	namespace d
	type c
	add (Lnet/minecraft/server/packs/PackResources;)V a
	getMetadataLocation (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/resources/ResourceLocation; d
	getNamespaces ()Ljava/util/Set; a
	getResource (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/server/packs/resources/Resource; a
	getResources (Lnet/minecraft/resources/ResourceLocation;)Ljava/util/List; c
	getWrappedResource (Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/server/packs/PackResources;)Ljava/io/InputStream; a
	hasResource (Lnet/minecraft/resources/ResourceLocation;)Z b
	isValidLocation (Lnet/minecraft/resources/ResourceLocation;)Z f
	listPacks ()Ljava/util/stream/Stream; b
	listResources (Ljava/lang/String;Ljava/util/function/Predicate;)Ljava/util/Collection; a
	listResources (Lnet/minecraft/resources/ResourceLocation;Ljava/util/function/Predicate;)Ljava/util/Collection; a
	validateLocation (Lnet/minecraft/resources/ResourceLocation;)V e
net/minecraft/server/packs/resources/FallbackResourceManager$LeakedResourceWarningInputStream aaw$a
	closed b
	message a
net/minecraft/server/packs/resources/PreparableReloadListener aax
	getName ()Ljava/lang/String; c
	reload (Lnet/minecraft/server/packs/resources/PreparableReloadListener$PreparationBarrier;Lnet/minecraft/server/packs/resources/ResourceManager;Lnet/minecraft/util/profiling/ProfilerFiller;Lnet/minecraft/util/profiling/ProfilerFiller;Ljava/util/concurrent/Executor;Ljava/util/concurrent/Executor;)Ljava/util/concurrent/CompletableFuture; a
net/minecraft/server/packs/resources/PreparableReloadListener$PreparationBarrier aax$a
	wait (Ljava/lang/Object;)Ljava/util/concurrent/CompletableFuture; a
net/minecraft/server/packs/resources/ProfiledReloadInstance aay
	LOGGER d
	total e
	finish (Ljava/util/List;)V a
net/minecraft/server/packs/resources/ProfiledReloadInstance$State aay$a
	name a
	preparationNanos d
	preparationResult b
	reloadNanos e
	reloadResult c
net/minecraft/server/packs/resources/ReloadInstance aaz
	checkExceptions ()V e
	done ()Ljava/util/concurrent/CompletableFuture; a
	getActualProgress ()F b
	isApplying ()Z c
	isDone ()Z d
net/minecraft/server/packs/resources/ReloadableResourceManager aba
	createFullReload (Ljava/util/concurrent/Executor;Ljava/util/concurrent/Executor;Ljava/util/concurrent/CompletableFuture;Ljava/util/List;)Lnet/minecraft/server/packs/resources/ReloadInstance; a
	createQueuedReload (Ljava/util/concurrent/Executor;Ljava/util/concurrent/Executor;Ljava/util/concurrent/CompletableFuture;)Lnet/minecraft/server/packs/resources/ReloadInstance; a
	registerReloadListener (Lnet/minecraft/server/packs/resources/PreparableReloadListener;)V a
	reload (Ljava/util/concurrent/Executor;Ljava/util/concurrent/Executor;Ljava/util/List;Ljava/util/concurrent/CompletableFuture;)Ljava/util/concurrent/CompletableFuture; a
net/minecraft/server/packs/resources/Resource abb
	getInputStream ()Ljava/io/InputStream; b
	getLocation ()Lnet/minecraft/resources/ResourceLocation; a
	getMetadata (Lnet/minecraft/server/packs/metadata/MetadataSectionSerializer;)Ljava/lang/Object; a
	getSourceName ()Ljava/lang/String; d
	hasMetadata ()Z c
net/minecraft/server/packs/resources/ResourceManager abc
	getNamespaces ()Ljava/util/Set; a
	getResource (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/server/packs/resources/Resource; a
	getResources (Lnet/minecraft/resources/ResourceLocation;)Ljava/util/List; c
	hasResource (Lnet/minecraft/resources/ResourceLocation;)Z b
	listPacks ()Ljava/util/stream/Stream; b
	listResources (Ljava/lang/String;Ljava/util/function/Predicate;)Ljava/util/Collection; a
	listResources (Lnet/minecraft/resources/ResourceLocation;Ljava/util/function/Predicate;)Ljava/util/Collection; a
net/minecraft/server/packs/resources/ResourceManager$Empty abc$a
	$VALUES b
	INSTANCE a
	getNamespaces ()Ljava/util/Set; a
	getResource (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/server/packs/resources/Resource; a
	getResources (Lnet/minecraft/resources/ResourceLocation;)Ljava/util/List; c
	hasResource (Lnet/minecraft/resources/ResourceLocation;)Z b
	listPacks ()Ljava/util/stream/Stream; b
	listResources (Ljava/lang/String;Ljava/util/function/Predicate;)Ljava/util/Collection; a
	listResources (Lnet/minecraft/resources/ResourceLocation;Ljava/util/function/Predicate;)Ljava/util/Collection; a
net/minecraft/server/packs/resources/ResourceManagerReloadListener abd
	onResourceManagerReload (Lnet/minecraft/server/packs/resources/ResourceManager;)V a
	reload (Lnet/minecraft/server/packs/resources/PreparableReloadListener$PreparationBarrier;Lnet/minecraft/server/packs/resources/ResourceManager;Lnet/minecraft/util/profiling/ProfilerFiller;Lnet/minecraft/util/profiling/ProfilerFiller;Ljava/util/concurrent/Executor;Ljava/util/concurrent/Executor;)Ljava/util/concurrent/CompletableFuture; a
net/minecraft/server/packs/resources/SimpleJsonResourceReloadListener abe
	LOGGER a
	PATH_SUFFIX_LENGTH b
	directory d
	gson c
	prepare (Lnet/minecraft/server/packs/resources/ResourceManager;Lnet/minecraft/util/profiling/ProfilerFiller;)Ljava/lang/Object; b
	prepare (Lnet/minecraft/server/packs/resources/ResourceManager;Lnet/minecraft/util/profiling/ProfilerFiller;)Ljava/util/Map; a
net/minecraft/server/packs/resources/SimplePreparableReloadListener abf
	apply (Ljava/lang/Object;Lnet/minecraft/server/packs/resources/ResourceManager;Lnet/minecraft/util/profiling/ProfilerFiller;)V a
	prepare (Lnet/minecraft/server/packs/resources/ResourceManager;Lnet/minecraft/util/profiling/ProfilerFiller;)Ljava/lang/Object; b
	reload (Lnet/minecraft/server/packs/resources/PreparableReloadListener$PreparationBarrier;Lnet/minecraft/server/packs/resources/ResourceManager;Lnet/minecraft/util/profiling/ProfilerFiller;Lnet/minecraft/util/profiling/ProfilerFiller;Ljava/util/concurrent/Executor;Ljava/util/concurrent/Executor;)Ljava/util/concurrent/CompletableFuture; a
net/minecraft/server/packs/resources/SimpleReloadInstance abg
	allDone c
	allPreparations b
	doneTaskCounter i
	finishedReloads g
	listenerCount e
	preparingListeners d
	resourceManager a
	startedReloads f
	startedTaskCounter h
	checkExceptions ()V e
	done ()Ljava/util/concurrent/CompletableFuture; a
	getActualProgress ()F b
	isApplying ()Z c
	isDone ()Z d
	of (Lnet/minecraft/server/packs/resources/ResourceManager;Ljava/util/List;Ljava/util/concurrent/Executor;Ljava/util/concurrent/Executor;Ljava/util/concurrent/CompletableFuture;)Lnet/minecraft/server/packs/resources/SimpleReloadInstance; a
net/minecraft/server/packs/resources/SimpleReloadInstance$StateFactory abg$a
net/minecraft/server/packs/resources/SimpleReloadableResourceManager abh
	LOGGER a
	listeners c
	namespacedPacks b
	namespaces e
	packs f
	recentlyRegistered d
	type g
	add (Lnet/minecraft/server/packs/PackResources;)V a
	clear ()V c
	createFullReload (Ljava/util/concurrent/Executor;Ljava/util/concurrent/Executor;Ljava/util/concurrent/CompletableFuture;Ljava/util/List;)Lnet/minecraft/server/packs/resources/ReloadInstance; a
	createQueuedReload (Ljava/util/concurrent/Executor;Ljava/util/concurrent/Executor;Ljava/util/concurrent/CompletableFuture;)Lnet/minecraft/server/packs/resources/ReloadInstance; a
	createReload (Ljava/util/concurrent/Executor;Ljava/util/concurrent/Executor;Ljava/util/List;Ljava/util/concurrent/CompletableFuture;)Lnet/minecraft/server/packs/resources/ReloadInstance; b
	getNamespaces ()Ljava/util/Set; a
	getResource (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/server/packs/resources/Resource; a
	getResources (Lnet/minecraft/resources/ResourceLocation;)Ljava/util/List; c
	hasResource (Lnet/minecraft/resources/ResourceLocation;)Z b
	listPacks ()Ljava/util/stream/Stream; b
	listResources (Ljava/lang/String;Ljava/util/function/Predicate;)Ljava/util/Collection; a
	listResources (Lnet/minecraft/resources/ResourceLocation;Ljava/util/function/Predicate;)Ljava/util/Collection; a
	registerReloadListener (Lnet/minecraft/server/packs/resources/PreparableReloadListener;)V a
net/minecraft/server/packs/resources/SimpleReloadableResourceManager$FailingReloadInstance abh$a
	exception a
	failedFuture b
	checkExceptions ()V e
	done ()Ljava/util/concurrent/CompletableFuture; a
	getActualProgress ()F b
	isApplying ()Z c
	isDone ()Z d
net/minecraft/server/packs/resources/SimpleReloadableResourceManager$ResourcePackLoadingFailure abh$b
	pack a
	getPack ()Lnet/minecraft/server/packs/PackResources; a
net/minecraft/server/packs/resources/SimpleResource abi
	location b
	metadata f
	metadataStream d
	resourceStream c
	sourceName a
	triedMetadata e
	getInputStream ()Ljava/io/InputStream; b
	getLocation ()Lnet/minecraft/resources/ResourceLocation; a
	getMetadata (Lnet/minecraft/server/packs/metadata/MetadataSectionSerializer;)Ljava/lang/Object; a
	getSourceName ()Ljava/lang/String; d
	hasMetadata ()Z c
net/minecraft/server/players/BanListEntry abk
	DATE_FORMAT a
	created b
	expires d
	reason e
	source c
	getCreated ()Ljava/util/Date; a
	getDisplayName ()Lnet/minecraft/network/chat/Component; e
	getExpires ()Ljava/util/Date; c
	getReason ()Ljava/lang/String; d
	getSource ()Ljava/lang/String; b
	hasExpired ()Z f
	serialize (Lcom/google/gson/JsonObject;)V a
net/minecraft/server/players/GameProfileCache abl
	DATE_FORMAT a
	GAMEPROFILE_ENTRY_TYPE i
	file h
	gson b
	profileMRUList f
	profileRepository g
	profilesByName d
	profilesByUUID e
	usesAuthentication c
	add (Lcom/mojang/authlib/GameProfile;)V a
	add (Lcom/mojang/authlib/GameProfile;Ljava/util/Date;)V a
	get (Ljava/lang/String;)Lcom/mojang/authlib/GameProfile; a
	get (Ljava/util/UUID;)Lcom/mojang/authlib/GameProfile; a
	getKnownNames ()[Ljava/lang/String; a
	getProfileInfo (Ljava/util/UUID;)Lnet/minecraft/server/players/GameProfileCache$GameProfileInfo; b
	getTopMRUProfiles (I)Ljava/util/List; a
	load ()V b
	lookupGameProfile (Lcom/mojang/authlib/GameProfileRepository;Ljava/lang/String;)Lcom/mojang/authlib/GameProfile; a
	save ()V c
	setUsesAuthentication (Z)V a
	usesAuthentication ()Z d
net/minecraft/server/players/GameProfileCache$GameProfileInfo abl$a
	expirationDate c
	profile b
	getExpirationDate ()Ljava/util/Date; b
	getProfile ()Lcom/mojang/authlib/GameProfile; a
net/minecraft/server/players/GameProfileCache$Serializer abl$b
	deserialize (Lcom/google/gson/JsonElement;Ljava/lang/reflect/Type;Lcom/google/gson/JsonDeserializationContext;)Lnet/minecraft/server/players/GameProfileCache$GameProfileInfo; a
	serialize (Lnet/minecraft/server/players/GameProfileCache$GameProfileInfo;Ljava/lang/reflect/Type;Lcom/google/gson/JsonSerializationContext;)Lcom/google/gson/JsonElement; a
net/minecraft/server/players/IpBanList abm
	createEntry (Lcom/google/gson/JsonObject;)Lnet/minecraft/server/players/StoredUserEntry; a
	get (Ljava/net/SocketAddress;)Lnet/minecraft/server/players/IpBanListEntry; b
	getIpFromAddress (Ljava/net/SocketAddress;)Ljava/lang/String; c
	isBanned (Ljava/lang/String;)Z a
	isBanned (Ljava/net/SocketAddress;)Z a
net/minecraft/server/players/IpBanListEntry abn
	createIpInfo (Lcom/google/gson/JsonObject;)Ljava/lang/String; b
	getDisplayName ()Lnet/minecraft/network/chat/Component; e
	serialize (Lcom/google/gson/JsonObject;)V a
net/minecraft/server/players/OldUsersConverter abo
	LOGGER e
	OLD_IPBANLIST a
	OLD_OPLIST c
	OLD_USERBANLIST b
	OLD_WHITELIST d
	areOldPlayersConverted (Lnet/minecraft/server/MinecraftServer;)Z f
	areOldUserlistsRemoved ()Z b
	convertIpBanlist (Lnet/minecraft/server/MinecraftServer;)Z b
	convertMobOwnerIfNecessary (Lnet/minecraft/server/MinecraftServer;Ljava/lang/String;)Ljava/util/UUID; a
	convertOpsList (Lnet/minecraft/server/MinecraftServer;)Z c
	convertPlayers (Lnet/minecraft/server/dedicated/DedicatedServer;)Z a
	convertUserBanlist (Lnet/minecraft/server/MinecraftServer;)Z a
	convertWhiteList (Lnet/minecraft/server/MinecraftServer;)Z d
	ensureDirectoryExists (Ljava/io/File;)V b
	getWorldPlayersDirectory (Lnet/minecraft/server/MinecraftServer;)Ljava/io/File; g
	lookupPlayers (Lnet/minecraft/server/MinecraftServer;Ljava/util/Collection;Lcom/mojang/authlib/ProfileLookupCallback;)V a
	parseDate (Ljava/lang/String;Ljava/util/Date;)Ljava/util/Date; b
	readOldListFormat (Ljava/io/File;Ljava/util/Map;)Ljava/util/List; a
	renameOldFile (Ljava/io/File;)V c
	serverReadyAfterUserconversion (Lnet/minecraft/server/MinecraftServer;)Z e
net/minecraft/server/players/OldUsersConverter$ConversionError abo$a
net/minecraft/server/players/PlayerList abp
	BAN_DATE_FORMAT g
	IPBANLIST_FILE c
	LOGGER a
	OPLIST_FILE d
	USERBANLIST_FILE b
	WHITELIST_FILE e
	advancements p
	allowCheatsForAllPlayers v
	bans k
	doWhiteList r
	ipBans l
	maxPlayers f
	ops m
	overrideGameMode u
	playerIo q
	players i
	playersByUUID j
	registryHolder s
	sendAllPlayerInfoIn w
	server h
	stats o
	viewDistance t
	whitelist n
	blackList (Lcom/mojang/authlib/GameProfile;)V c
	broadcast (Lnet/minecraft/world/entity/player/Player;DDDDLnet/minecraft/resources/ResourceKey;Lnet/minecraft/network/protocol/Packet;)V a
	broadcastAll (Lnet/minecraft/network/protocol/Packet;)V a
	broadcastAll (Lnet/minecraft/network/protocol/Packet;Lnet/minecraft/resources/ResourceKey;)V a
	broadcastMessage (Lnet/minecraft/network/chat/Component;Lnet/minecraft/network/chat/ChatType;Ljava/util/UUID;)V a
	broadcastToAllExceptTeam (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/network/chat/Component;)V b
	broadcastToTeam (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/network/chat/Component;)V a
	canBypassPlayerLimit (Lcom/mojang/authlib/GameProfile;)Z f
	canPlayerLogin (Ljava/net/SocketAddress;Lcom/mojang/authlib/GameProfile;)Lnet/minecraft/network/chat/Component; a
	deop (Lcom/mojang/authlib/GameProfile;)V b
	getBans ()Lnet/minecraft/server/players/UserBanList; f
	getIpBans ()Lnet/minecraft/server/players/IpBanList; g
	getMaxPlayers ()I n
	getOpNames ()[Ljava/lang/String; l
	getOps ()Lnet/minecraft/server/players/ServerOpList; k
	getPlayer (Ljava/util/UUID;)Lnet/minecraft/server/level/ServerPlayer; a
	getPlayerAdvancements (Lnet/minecraft/server/level/ServerPlayer;)Lnet/minecraft/server/PlayerAdvancements; f
	getPlayerByName (Ljava/lang/String;)Lnet/minecraft/server/level/ServerPlayer; a
	getPlayerCount ()I m
	getPlayerForLogin (Lcom/mojang/authlib/GameProfile;)Lnet/minecraft/server/level/ServerPlayer; g
	getPlayerNamesArray ()[Ljava/lang/String; e
	getPlayerStats (Lnet/minecraft/world/entity/player/Player;)Lnet/minecraft/stats/ServerStatsCounter; a
	getPlayers ()Ljava/util/List; s
	getPlayersWithAddress (Ljava/lang/String;)Ljava/util/List; b
	getServer ()Lnet/minecraft/server/MinecraftServer; c
	getSingleplayerData ()Lnet/minecraft/nbt/CompoundTag; q
	getViewDistance ()I p
	getWhiteList ()Lnet/minecraft/server/players/UserWhiteList; i
	getWhiteListNames ()[Ljava/lang/String; j
	isAllowCheatsForAllPlayers ()Z u
	isOp (Lcom/mojang/authlib/GameProfile;)Z h
	isUsingWhitelist ()Z o
	isWhiteListed (Lcom/mojang/authlib/GameProfile;)Z e
	load (Lnet/minecraft/server/level/ServerPlayer;)Lnet/minecraft/nbt/CompoundTag; a
	op (Lcom/mojang/authlib/GameProfile;)V a
	placeNewPlayer (Lnet/minecraft/network/Connection;Lnet/minecraft/server/level/ServerPlayer;)V a
	reloadResources ()V t
	reloadWhiteList ()V a
	remove (Lnet/minecraft/server/level/ServerPlayer;)V c
	removeAll ()V r
	respawn (Lnet/minecraft/server/level/ServerPlayer;Z)Lnet/minecraft/server/level/ServerPlayer; a
	save (Lnet/minecraft/server/level/ServerPlayer;)V b
	saveAll ()V h
	sendAllPlayerInfo (Lnet/minecraft/server/level/ServerPlayer;)V e
	sendLevelInfo (Lnet/minecraft/server/level/ServerPlayer;Lnet/minecraft/server/level/ServerLevel;)V a
	sendPlayerPermissionLevel (Lnet/minecraft/server/level/ServerPlayer;)V d
	sendPlayerPermissionLevel (Lnet/minecraft/server/level/ServerPlayer;I)V a
	setAllowCheatsForAllPlayers (Z)V b
	setLevel (Lnet/minecraft/server/level/ServerLevel;)V a
	setOverrideGameMode (Lnet/minecraft/world/level/GameType;)V a
	setUsingWhiteList (Z)V a
	setViewDistance (I)V a
	tick ()V d
	updateEntireScoreboard (Lnet/minecraft/server/ServerScoreboard;Lnet/minecraft/server/level/ServerPlayer;)V a
	updatePlayerGameMode (Lnet/minecraft/server/level/ServerPlayer;Lnet/minecraft/server/level/ServerPlayer;Lnet/minecraft/server/level/ServerLevel;)V a
	whiteList (Lcom/mojang/authlib/GameProfile;)V d
net/minecraft/server/players/ServerOpList abq
	canBypassPlayerLimit (Lcom/mojang/authlib/GameProfile;)Z b
	createEntry (Lcom/google/gson/JsonObject;)Lnet/minecraft/server/players/StoredUserEntry; a
	find (Ljava/lang/String;)Lcom/mojang/authlib/GameProfile; a
	getKeyForUser (Lcom/mojang/authlib/GameProfile;)Ljava/lang/String; c
	getKeyForUser (Ljava/lang/Object;)Ljava/lang/String; a
	getOpLevel (Lcom/mojang/authlib/GameProfile;)I a
	getUserList ()[Ljava/lang/String; a
net/minecraft/server/players/ServerOpListEntry abr
	bypassesPlayerLimit b
	level a
	createGameProfile (Lcom/google/gson/JsonObject;)Lcom/mojang/authlib/GameProfile; b
	getBypassesPlayerLimit ()Z b
	getLevel ()I a
	serialize (Lcom/google/gson/JsonObject;)V a
net/minecraft/server/players/StoredUserEntry abs
	user a
	getUser ()Ljava/lang/Object; g
	hasExpired ()Z f
	serialize (Lcom/google/gson/JsonObject;)V a
net/minecraft/server/players/StoredUserList abt
	GSON b
	LOGGER a
	file c
	map d
	add (Lnet/minecraft/server/players/StoredUserEntry;)V a
	contains (Ljava/lang/Object;)Z d
	createEntry (Lcom/google/gson/JsonObject;)Lnet/minecraft/server/players/StoredUserEntry; a
	get (Ljava/lang/Object;)Lnet/minecraft/server/players/StoredUserEntry; b
	getEntries ()Ljava/util/Collection; d
	getFile ()Ljava/io/File; b
	getKeyForUser (Ljava/lang/Object;)Ljava/lang/String; a
	getUserList ()[Ljava/lang/String; a
	isEmpty ()Z c
	load ()V f
	remove (Ljava/lang/Object;)V c
	remove (Lnet/minecraft/server/players/StoredUserEntry;)V b
	removeExpired ()V g
	save ()V e
net/minecraft/server/players/UserBanList abu
	createEntry (Lcom/google/gson/JsonObject;)Lnet/minecraft/server/players/StoredUserEntry; a
	find (Ljava/lang/String;)Lcom/mojang/authlib/GameProfile; a
	getKeyForUser (Lcom/mojang/authlib/GameProfile;)Ljava/lang/String; b
	getKeyForUser (Ljava/lang/Object;)Ljava/lang/String; a
	getUserList ()[Ljava/lang/String; a
	isBanned (Lcom/mojang/authlib/GameProfile;)Z a
net/minecraft/server/players/UserBanListEntry abv
	createGameProfile (Lcom/google/gson/JsonObject;)Lcom/mojang/authlib/GameProfile; b
	getDisplayName ()Lnet/minecraft/network/chat/Component; e
	serialize (Lcom/google/gson/JsonObject;)V a
net/minecraft/server/players/UserWhiteList abw
	createEntry (Lcom/google/gson/JsonObject;)Lnet/minecraft/server/players/StoredUserEntry; a
	find (Ljava/lang/String;)Lcom/mojang/authlib/GameProfile; a
	getKeyForUser (Lcom/mojang/authlib/GameProfile;)Ljava/lang/String; b
	getKeyForUser (Ljava/lang/Object;)Ljava/lang/String; a
	getUserList ()[Ljava/lang/String; a
	isWhiteListed (Lcom/mojang/authlib/GameProfile;)Z a
net/minecraft/server/players/UserWhiteListEntry abx
	createGameProfile (Lcom/google/gson/JsonObject;)Lcom/mojang/authlib/GameProfile; b
	serialize (Lcom/google/gson/JsonObject;)V a
net/minecraft/server/rcon/NetworkDataOutputStream abz
	dataOutputStream b
	outputStream a
	reset ()V b
	toByteArray ()[B a
	write (I)V a
	writeBytes ([B)V a
	writeFloat (F)V a
	writeInt (I)V b
	writeShort (S)V a
	writeString (Ljava/lang/String;)V a
net/minecraft/server/rcon/PktUtils aca
	HEX_CHAR a
	intFromByteArray ([BI)I a
	intFromByteArray ([BII)I b
	intFromNetworkByteArray ([BII)I c
	stringFromByteArray ([BII)Ljava/lang/String; a
	toHexString (B)Ljava/lang/String; a
net/minecraft/server/rcon/RconConsoleSource acb
	RCON_COMPONENT b
	buffer c
	server d
	acceptsFailure ()Z b
	acceptsSuccess ()Z a
	createCommandSourceStack ()Lnet/minecraft/commands/CommandSourceStack; f
	getCommandResponse ()Ljava/lang/String; e
	prepareForCommand ()V d
	sendMessage (Lnet/minecraft/network/chat/Component;Ljava/util/UUID;)V a
	shouldInformAdmins ()Z S_
net/minecraft/server/rcon/thread/GenericThread acd
	LOGGER d
	UNIQUE_THREAD_ID e
	name b
	running a
	thread c
	isRunning ()Z c
	start ()V a
	stop ()V b
net/minecraft/server/rcon/thread/QueryThreadGs4 ace
	LOGGER d
	buffer l
	hostIp m
	lastChallengeCheck e
	lastRulesResponse q
	maxPlayers h
	port f
	rulesResponse p
	serverInterface r
	serverIp n
	serverName i
	serverPort g
	socket k
	validChallenges o
	worldName j
	buildRuleResponse (Ljava/net/DatagramPacket;)[B b
	getIdentBytes (Ljava/net/SocketAddress;)[B a
	initSocket ()Z e
	processPacket (Ljava/net/DatagramPacket;)Z a
	pruneChallenges ()V d
	recoverSocketError (Ljava/lang/Exception;)V a
	sendChallenge (Ljava/net/DatagramPacket;)V d
	sendTo ([BLjava/net/DatagramPacket;)V a
	start ()V a
	validChallenge (Ljava/net/DatagramPacket;)Ljava/lang/Boolean; c
net/minecraft/server/rcon/thread/QueryThreadGs4$RequestChallenge ace$a
	challenge b
	challengeBytes d
	ident e
	identBytes c
	time a
	before (J)Ljava/lang/Boolean; a
	getChallenge ()I a
	getChallengeBytes ()[B b
	getIdent ()Ljava/lang/String; d
	getIdentBytes ()[B c
net/minecraft/server/rcon/thread/RconClient acf
	LOGGER d
	authed e
	buf g
	client f
	rconPassword h
	serverInterface i
	closeSocket ()V e
	send (IILjava/lang/String;)V a
	sendAuthFailure ()V d
	sendCmdResponse (ILjava/lang/String;)V a
	stop ()V b
net/minecraft/server/rcon/thread/RconThread acg
	LOGGER d
	clients i
	port e
	rconPassword h
	serverInterface j
	serverIp f
	socket g
	clearClients ()V d
	closeSocket (Ljava/net/ServerSocket;)V a
	start ()V a
	stop ()V b
net/minecraft/sounds/Music aci
	CODEC a
	event b
	maxDelay d
	minDelay c
	replaceCurrentMusic e
	getEvent ()Lnet/minecraft/sounds/SoundEvent; a
	getMaxDelay ()I c
	getMinDelay ()I b
	replaceCurrentMusic ()Z d
net/minecraft/sounds/Musics acj
	CREATIVE b
	CREDITS c
	END e
	END_BOSS d
	GAME g
	MENU a
	UNDER_WATER f
	createGameMusic (Lnet/minecraft/sounds/SoundEvent;)Lnet/minecraft/sounds/Music; a
net/minecraft/sounds/SoundEvent ack
	CODEC a
	location b
	getLocation ()Lnet/minecraft/resources/ResourceLocation; a
net/minecraft/sounds/SoundEvents acl
	AMBIENT_BASALT_DELTAS_ADDITIONS b
	AMBIENT_BASALT_DELTAS_LOOP c
	AMBIENT_BASALT_DELTAS_MOOD d
	AMBIENT_CAVE a
	AMBIENT_CRIMSON_FOREST_ADDITIONS e
	AMBIENT_CRIMSON_FOREST_LOOP f
	AMBIENT_CRIMSON_FOREST_MOOD g
	AMBIENT_NETHER_WASTES_ADDITIONS h
	AMBIENT_NETHER_WASTES_LOOP i
	AMBIENT_NETHER_WASTES_MOOD j
	AMBIENT_SOUL_SAND_VALLEY_ADDITIONS k
	AMBIENT_SOUL_SAND_VALLEY_LOOP l
	AMBIENT_SOUL_SAND_VALLEY_MOOD m
	AMBIENT_UNDERWATER_ENTER q
	AMBIENT_UNDERWATER_EXIT r
	AMBIENT_UNDERWATER_LOOP s
	AMBIENT_UNDERWATER_LOOP_ADDITIONS t
	AMBIENT_UNDERWATER_LOOP_ADDITIONS_RARE u
	AMBIENT_UNDERWATER_LOOP_ADDITIONS_ULTRA_RARE v
	AMBIENT_WARPED_FOREST_ADDITIONS n
	AMBIENT_WARPED_FOREST_LOOP o
	AMBIENT_WARPED_FOREST_MOOD p
	ANCIENT_DEBRIS_BREAK w
	ANCIENT_DEBRIS_FALL A
	ANCIENT_DEBRIS_HIT z
	ANCIENT_DEBRIS_PLACE y
	ANCIENT_DEBRIS_STEP x
	ANVIL_BREAK B
	ANVIL_DESTROY C
	ANVIL_FALL D
	ANVIL_HIT E
	ANVIL_LAND F
	ANVIL_PLACE G
	ANVIL_STEP H
	ANVIL_USE I
	ARMOR_EQUIP_CHAIN J
	ARMOR_EQUIP_DIAMOND K
	ARMOR_EQUIP_ELYTRA L
	ARMOR_EQUIP_GENERIC M
	ARMOR_EQUIP_GOLD N
	ARMOR_EQUIP_IRON O
	ARMOR_EQUIP_LEATHER P
	ARMOR_EQUIP_NETHERITE Q
	ARMOR_EQUIP_TURTLE R
	ARMOR_STAND_BREAK S
	ARMOR_STAND_FALL T
	ARMOR_STAND_HIT U
	ARMOR_STAND_PLACE V
	ARROW_HIT W
	ARROW_HIT_PLAYER X
	ARROW_SHOOT Y
	AXE_STRIP Z
	BAMBOO_BREAK aa
	BAMBOO_FALL ab
	BAMBOO_HIT ac
	BAMBOO_PLACE ad
	BAMBOO_SAPLING_BREAK af
	BAMBOO_SAPLING_HIT ag
	BAMBOO_SAPLING_PLACE ah
	BAMBOO_STEP ae
	BARREL_CLOSE ai
	BARREL_OPEN aj
	BASALT_BREAK ak
	BASALT_FALL ao
	BASALT_HIT an
	BASALT_PLACE am
	BASALT_STEP al
	BAT_AMBIENT ap
	BAT_DEATH aq
	BAT_HURT ar
	BAT_LOOP as
	BAT_TAKEOFF at
	BEACON_ACTIVATE au
	BEACON_AMBIENT av
	BEACON_DEACTIVATE aw
	BEACON_POWER_SELECT ax
	BEEHIVE_DRIP aE
	BEEHIVE_ENTER aF
	BEEHIVE_EXIT aG
	BEEHIVE_SHEAR aH
	BEEHIVE_WORK aI
	BEE_DEATH ay
	BEE_HURT az
	BEE_LOOP aB
	BEE_LOOP_AGGRESSIVE aA
	BEE_POLLINATE aD
	BEE_STING aC
	BELL_BLOCK aJ
	BELL_RESONATE aK
	BLASTFURNACE_FIRE_CRACKLE aZ
	BLAZE_AMBIENT aL
	BLAZE_BURN aM
	BLAZE_DEATH aN
	BLAZE_HURT aO
	BLAZE_SHOOT aP
	BOAT_PADDLE_LAND aQ
	BOAT_PADDLE_WATER aR
	BONE_BLOCK_BREAK aS
	BONE_BLOCK_FALL aT
	BONE_BLOCK_HIT aU
	BONE_BLOCK_PLACE aV
	BONE_BLOCK_STEP aW
	BOOK_PAGE_TURN aX
	BOOK_PUT aY
	BOTTLE_EMPTY ba
	BOTTLE_FILL bb
	BOTTLE_FILL_DRAGONBREATH bc
	BREWING_STAND_BREW bd
	BUBBLE_COLUMN_BUBBLE_POP be
	BUBBLE_COLUMN_UPWARDS_AMBIENT bf
	BUBBLE_COLUMN_UPWARDS_INSIDE bg
	BUBBLE_COLUMN_WHIRLPOOL_AMBIENT bh
	BUBBLE_COLUMN_WHIRLPOOL_INSIDE bi
	BUCKET_EMPTY bj
	BUCKET_EMPTY_FISH bk
	BUCKET_EMPTY_LAVA bl
	BUCKET_FILL bm
	BUCKET_FILL_FISH bn
	BUCKET_FILL_LAVA bo
	CAMPFIRE_CRACKLE bp
	CAT_AMBIENT bq
	CAT_BEG_FOR_FOOD bv
	CAT_DEATH bs
	CAT_EAT bt
	CAT_HISS bu
	CAT_HURT bw
	CAT_PURR bx
	CAT_PURREOW by
	CAT_STRAY_AMBIENT br
	CHAIN_BREAK bz
	CHAIN_FALL bA
	CHAIN_HIT bB
	CHAIN_PLACE bC
	CHAIN_STEP bD
	CHEST_CLOSE bE
	CHEST_LOCKED bF
	CHEST_OPEN bG
	CHICKEN_AMBIENT bH
	CHICKEN_DEATH bI
	CHICKEN_EGG bJ
	CHICKEN_HURT bK
	CHICKEN_STEP bL
	CHORUS_FLOWER_DEATH bM
	CHORUS_FLOWER_GROW bN
	CHORUS_FRUIT_TELEPORT bO
	COD_AMBIENT bP
	COD_DEATH bQ
	COD_FLOP bR
	COD_HURT bS
	COMPARATOR_CLICK bT
	COMPOSTER_EMPTY bU
	COMPOSTER_FILL bV
	COMPOSTER_FILL_SUCCESS bW
	COMPOSTER_READY bX
	CONDUIT_ACTIVATE bY
	CONDUIT_AMBIENT bZ
	CONDUIT_AMBIENT_SHORT ca
	CONDUIT_ATTACK_TARGET cb
	CONDUIT_DEACTIVATE cc
	CORAL_BLOCK_BREAK cd
	CORAL_BLOCK_FALL ce
	CORAL_BLOCK_HIT cf
	CORAL_BLOCK_PLACE cg
	CORAL_BLOCK_STEP ch
	COW_AMBIENT ci
	COW_DEATH cj
	COW_HURT ck
	COW_MILK cl
	COW_STEP cm
	CREEPER_DEATH cn
	CREEPER_HURT co
	CREEPER_PRIMED cp
	CROP_BREAK cq
	CROP_PLANTED cr
	CROSSBOW_HIT cs
	CROSSBOW_LOADING_END ct
	CROSSBOW_LOADING_MIDDLE cu
	CROSSBOW_LOADING_START cv
	CROSSBOW_QUICK_CHARGE_1 cw
	CROSSBOW_QUICK_CHARGE_2 cx
	CROSSBOW_QUICK_CHARGE_3 cy
	CROSSBOW_SHOOT cz
	DISPENSER_DISPENSE cA
	DISPENSER_FAIL cB
	DISPENSER_LAUNCH cC
	DOLPHIN_AMBIENT cD
	DOLPHIN_AMBIENT_WATER cE
	DOLPHIN_ATTACK cF
	DOLPHIN_DEATH cG
	DOLPHIN_EAT cH
	DOLPHIN_HURT cI
	DOLPHIN_JUMP cJ
	DOLPHIN_PLAY cK
	DOLPHIN_SPLASH cL
	DOLPHIN_SWIM cM
	DONKEY_AMBIENT cN
	DONKEY_ANGRY cO
	DONKEY_CHEST cP
	DONKEY_DEATH cQ
	DONKEY_EAT cR
	DONKEY_HURT cS
	DRAGON_FIREBALL_EXPLODE dr
	DROWNED_AMBIENT cT
	DROWNED_AMBIENT_WATER cU
	DROWNED_DEATH cV
	DROWNED_DEATH_WATER cW
	DROWNED_HURT cX
	DROWNED_HURT_WATER cY
	DROWNED_SHOOT cZ
	DROWNED_STEP da
	DROWNED_SWIM db
	EGG_THROW dc
	ELDER_GUARDIAN_AMBIENT dd
	ELDER_GUARDIAN_AMBIENT_LAND de
	ELDER_GUARDIAN_CURSE df
	ELDER_GUARDIAN_DEATH dg
	ELDER_GUARDIAN_DEATH_LAND dh
	ELDER_GUARDIAN_FLOP di
	ELDER_GUARDIAN_HURT dj
	ELDER_GUARDIAN_HURT_LAND dk
	ELYTRA_FLYING dl
	ENCHANTMENT_TABLE_USE dm
	ENDERMAN_AMBIENT dy
	ENDERMAN_DEATH dz
	ENDERMAN_HURT dA
	ENDERMAN_SCREAM dB
	ENDERMAN_STARE dC
	ENDERMAN_TELEPORT dD
	ENDERMITE_AMBIENT dE
	ENDERMITE_DEATH dF
	ENDERMITE_HURT dG
	ENDERMITE_STEP dH
	ENDER_CHEST_CLOSE dn
	ENDER_CHEST_OPEN do
	ENDER_DRAGON_AMBIENT dp
	ENDER_DRAGON_DEATH dq
	ENDER_DRAGON_FLAP ds
	ENDER_DRAGON_GROWL dt
	ENDER_DRAGON_HURT du
	ENDER_DRAGON_SHOOT dv
	ENDER_EYE_DEATH dw
	ENDER_EYE_LAUNCH dx
	ENDER_PEARL_THROW dI
	END_GATEWAY_SPAWN dJ
	END_PORTAL_FRAME_FILL dK
	END_PORTAL_SPAWN dL
	EVOKER_AMBIENT dM
	EVOKER_CAST_SPELL dN
	EVOKER_CELEBRATE dO
	EVOKER_DEATH dP
	EVOKER_FANGS_ATTACK dQ
	EVOKER_HURT dR
	EVOKER_PREPARE_ATTACK dS
	EVOKER_PREPARE_SUMMON dT
	EVOKER_PREPARE_WOLOLO dU
	EXPERIENCE_BOTTLE_THROW dV
	EXPERIENCE_ORB_PICKUP dW
	FENCE_GATE_CLOSE dX
	FENCE_GATE_OPEN dY
	FIRECHARGE_USE dZ
	FIREWORK_ROCKET_BLAST ea
	FIREWORK_ROCKET_BLAST_FAR eb
	FIREWORK_ROCKET_LARGE_BLAST ec
	FIREWORK_ROCKET_LARGE_BLAST_FAR ed
	FIREWORK_ROCKET_LAUNCH ee
	FIREWORK_ROCKET_SHOOT ef
	FIREWORK_ROCKET_TWINKLE eg
	FIREWORK_ROCKET_TWINKLE_FAR eh
	FIRE_AMBIENT ei
	FIRE_EXTINGUISH ej
	FISHING_BOBBER_RETRIEVE el
	FISHING_BOBBER_SPLASH em
	FISHING_BOBBER_THROW en
	FISH_SWIM ek
	FLINTANDSTEEL_USE eo
	FOX_AGGRO ep
	FOX_AMBIENT eq
	FOX_BITE er
	FOX_DEATH es
	FOX_EAT et
	FOX_HURT eu
	FOX_SCREECH ev
	FOX_SLEEP ew
	FOX_SNIFF ex
	FOX_SPIT ey
	FOX_TELEPORT ez
	FUNGUS_BREAK iQ
	FUNGUS_FALL iU
	FUNGUS_HIT iT
	FUNGUS_PLACE iS
	FUNGUS_STEP iR
	FURNACE_FIRE_CRACKLE eF
	GENERIC_BIG_FALL eG
	GENERIC_BURN eH
	GENERIC_DEATH eI
	GENERIC_DRINK eJ
	GENERIC_EAT eK
	GENERIC_EXPLODE eL
	GENERIC_EXTINGUISH_FIRE eM
	GENERIC_HURT eN
	GENERIC_SMALL_FALL eO
	GENERIC_SPLASH eP
	GENERIC_SWIM eQ
	GHAST_AMBIENT eR
	GHAST_DEATH eS
	GHAST_HURT eT
	GHAST_SCREAM eU
	GHAST_SHOOT eV
	GHAST_WARN eW
	GILDED_BLACKSTONE_BREAK eX
	GILDED_BLACKSTONE_FALL eY
	GILDED_BLACKSTONE_HIT eZ
	GILDED_BLACKSTONE_PLACE fa
	GILDED_BLACKSTONE_STEP fb
	GLASS_BREAK fc
	GLASS_FALL fd
	GLASS_HIT fe
	GLASS_PLACE ff
	GLASS_STEP fg
	GRASS_BREAK fh
	GRASS_FALL fi
	GRASS_HIT fj
	GRASS_PLACE fk
	GRASS_STEP fl
	GRAVEL_BREAK fm
	GRAVEL_FALL fn
	GRAVEL_HIT fo
	GRAVEL_PLACE fp
	GRAVEL_STEP fq
	GRINDSTONE_USE fr
	GUARDIAN_AMBIENT fs
	GUARDIAN_AMBIENT_LAND ft
	GUARDIAN_ATTACK fu
	GUARDIAN_DEATH fv
	GUARDIAN_DEATH_LAND fw
	GUARDIAN_FLOP fx
	GUARDIAN_HURT fy
	GUARDIAN_HURT_LAND fz
	HOE_TILL fA
	HOGLIN_AMBIENT fB
	HOGLIN_ANGRY fC
	HOGLIN_ATTACK fD
	HOGLIN_CONVERTED_TO_ZOMBIFIED fE
	HOGLIN_DEATH fF
	HOGLIN_HURT fG
	HOGLIN_RETREAT fH
	HOGLIN_STEP fI
	HONEY_BLOCK_BREAK fJ
	HONEY_BLOCK_FALL fK
	HONEY_BLOCK_HIT fL
	HONEY_BLOCK_PLACE fM
	HONEY_BLOCK_SLIDE fN
	HONEY_BLOCK_STEP fO
	HONEY_DRINK fP
	HORSE_AMBIENT fQ
	HORSE_ANGRY fR
	HORSE_ARMOR fS
	HORSE_BREATHE fT
	HORSE_DEATH fU
	HORSE_EAT fV
	HORSE_GALLOP fW
	HORSE_HURT fX
	HORSE_JUMP fY
	HORSE_LAND fZ
	HORSE_SADDLE ga
	HORSE_STEP gb
	HORSE_STEP_WOOD gc
	HOSTILE_BIG_FALL gd
	HOSTILE_DEATH ge
	HOSTILE_HURT gf
	HOSTILE_SMALL_FALL gg
	HOSTILE_SPLASH gh
	HOSTILE_SWIM gi
	HUSK_AMBIENT gj
	HUSK_CONVERTED_TO_ZOMBIE gk
	HUSK_DEATH gl
	HUSK_HURT gm
	HUSK_STEP gn
	ILLUSIONER_AMBIENT go
	ILLUSIONER_CAST_SPELL gp
	ILLUSIONER_DEATH gq
	ILLUSIONER_HURT gr
	ILLUSIONER_MIRROR_MOVE gs
	ILLUSIONER_PREPARE_BLINDNESS gt
	ILLUSIONER_PREPARE_MIRROR gu
	IRON_DOOR_CLOSE gv
	IRON_DOOR_OPEN gw
	IRON_GOLEM_ATTACK gx
	IRON_GOLEM_DAMAGE gy
	IRON_GOLEM_DEATH gz
	IRON_GOLEM_HURT gA
	IRON_GOLEM_REPAIR gB
	IRON_GOLEM_STEP gC
	IRON_TRAPDOOR_CLOSE gD
	IRON_TRAPDOOR_OPEN gE
	ITEM_BREAK gK
	ITEM_FRAME_ADD_ITEM gF
	ITEM_FRAME_BREAK gG
	ITEM_FRAME_PLACE gH
	ITEM_FRAME_REMOVE_ITEM gI
	ITEM_FRAME_ROTATE_ITEM gJ
	ITEM_PICKUP gL
	LADDER_BREAK gM
	LADDER_FALL gN
	LADDER_HIT gO
	LADDER_PLACE gP
	LADDER_STEP gQ
	LANTERN_BREAK gR
	LANTERN_FALL gS
	LANTERN_HIT gT
	LANTERN_PLACE gU
	LANTERN_STEP gV
	LAVA_AMBIENT gW
	LAVA_EXTINGUISH gX
	LAVA_POP gY
	LEASH_KNOT_BREAK gZ
	LEASH_KNOT_PLACE ha
	LEVER_CLICK hb
	LIGHTNING_BOLT_IMPACT hc
	LIGHTNING_BOLT_THUNDER hd
	LILY_PAD_PLACE qk
	LINGERING_POTION_THROW he
	LLAMA_AMBIENT hf
	LLAMA_ANGRY hg
	LLAMA_CHEST hh
	LLAMA_DEATH hi
	LLAMA_EAT hj
	LLAMA_HURT hk
	LLAMA_SPIT hl
	LLAMA_STEP hm
	LLAMA_SWAG hn
	LODESTONE_BREAK hp
	LODESTONE_COMPASS_LOCK hu
	LODESTONE_FALL ht
	LODESTONE_HIT hs
	LODESTONE_PLACE hr
	LODESTONE_STEP hq
	MAGMA_CUBE_DEATH hv
	MAGMA_CUBE_DEATH_SMALL ho
	MAGMA_CUBE_HURT hw
	MAGMA_CUBE_HURT_SMALL hx
	MAGMA_CUBE_JUMP hy
	MAGMA_CUBE_SQUISH hz
	MAGMA_CUBE_SQUISH_SMALL hA
	METAL_BREAK hB
	METAL_FALL hC
	METAL_HIT hD
	METAL_PLACE hE
	METAL_PRESSURE_PLATE_CLICK_OFF hF
	METAL_PRESSURE_PLATE_CLICK_ON hG
	METAL_STEP hH
	MINECART_INSIDE hI
	MINECART_RIDING hJ
	MOOSHROOM_CONVERT hK
	MOOSHROOM_EAT hL
	MOOSHROOM_MILK hM
	MOOSHROOM_MILK_SUSPICIOUSLY hN
	MOOSHROOM_SHEAR hO
	MULE_AMBIENT hP
	MULE_ANGRY hQ
	MULE_CHEST hR
	MULE_DEATH hS
	MULE_EAT hT
	MULE_HURT hU
	MUSIC_BIOME_BASALT_DELTAS io
	MUSIC_BIOME_CRIMSON_FOREST ir
	MUSIC_BIOME_NETHER_WASTES ip
	MUSIC_BIOME_SOUL_SAND_VALLEY iq
	MUSIC_BIOME_WARPED_FOREST is
	MUSIC_CREATIVE hV
	MUSIC_CREDITS hW
	MUSIC_DISC_11 hX
	MUSIC_DISC_13 hY
	MUSIC_DISC_BLOCKS hZ
	MUSIC_DISC_CAT ia
	MUSIC_DISC_CHIRP ib
	MUSIC_DISC_FAR ic
	MUSIC_DISC_MALL id
	MUSIC_DISC_MELLOHI ie
	MUSIC_DISC_PIGSTEP if
	MUSIC_DISC_STAL ig
	MUSIC_DISC_STRAD ih
	MUSIC_DISC_WAIT ii
	MUSIC_DISC_WARD ij
	MUSIC_DRAGON ik
	MUSIC_END il
	MUSIC_GAME im
	MUSIC_MENU in
	MUSIC_UNDER_WATER it
	NETHERITE_BLOCK_BREAK jf
	NETHERITE_BLOCK_FALL jj
	NETHERITE_BLOCK_HIT ji
	NETHERITE_BLOCK_PLACE jh
	NETHERITE_BLOCK_STEP jg
	NETHERRACK_BREAK jk
	NETHERRACK_FALL jo
	NETHERRACK_HIT jn
	NETHERRACK_PLACE jm
	NETHERRACK_STEP jl
	NETHER_BRICKS_BREAK iu
	NETHER_BRICKS_FALL iy
	NETHER_BRICKS_HIT ix
	NETHER_BRICKS_PLACE iw
	NETHER_BRICKS_STEP iv
	NETHER_GOLD_ORE_BREAK mf
	NETHER_GOLD_ORE_FALL mg
	NETHER_GOLD_ORE_HIT mh
	NETHER_GOLD_ORE_PLACE mi
	NETHER_GOLD_ORE_STEP mj
	NETHER_ORE_BREAK mk
	NETHER_ORE_FALL ml
	NETHER_ORE_HIT mm
	NETHER_ORE_PLACE mn
	NETHER_ORE_STEP mo
	NETHER_SPROUTS_BREAK iL
	NETHER_SPROUTS_FALL iP
	NETHER_SPROUTS_HIT iO
	NETHER_SPROUTS_PLACE iN
	NETHER_SPROUTS_STEP iM
	NETHER_WART_BREAK iz
	NETHER_WART_PLANTED iA
	NOTE_BLOCK_BANJO jE
	NOTE_BLOCK_BASEDRUM jp
	NOTE_BLOCK_BASS jq
	NOTE_BLOCK_BELL jr
	NOTE_BLOCK_BIT jD
	NOTE_BLOCK_CHIME js
	NOTE_BLOCK_COW_BELL jB
	NOTE_BLOCK_DIDGERIDOO jC
	NOTE_BLOCK_FLUTE jt
	NOTE_BLOCK_GUITAR ju
	NOTE_BLOCK_HARP jv
	NOTE_BLOCK_HAT jw
	NOTE_BLOCK_IRON_XYLOPHONE jA
	NOTE_BLOCK_PLING jx
	NOTE_BLOCK_SNARE jy
	NOTE_BLOCK_XYLOPHONE jz
	NYLIUM_BREAK iG
	NYLIUM_FALL iK
	NYLIUM_HIT iJ
	NYLIUM_PLACE iI
	NYLIUM_STEP iH
	OCELOT_AMBIENT jG
	OCELOT_DEATH jH
	OCELOT_HURT jF
	PAINTING_BREAK jI
	PAINTING_PLACE jJ
	PANDA_AGGRESSIVE_AMBIENT jR
	PANDA_AMBIENT jM
	PANDA_BITE jU
	PANDA_CANT_BREED jQ
	PANDA_DEATH jN
	PANDA_EAT jO
	PANDA_HURT jT
	PANDA_PRE_SNEEZE jK
	PANDA_SNEEZE jL
	PANDA_STEP jP
	PANDA_WORRIED_AMBIENT jS
	PARROT_AMBIENT jV
	PARROT_DEATH jW
	PARROT_EAT jX
	PARROT_FLY jY
	PARROT_HURT jZ
	PARROT_IMITATE_BLAZE ka
	PARROT_IMITATE_CREEPER kb
	PARROT_IMITATE_DROWNED kc
	PARROT_IMITATE_ELDER_GUARDIAN kd
	PARROT_IMITATE_ENDERMITE kf
	PARROT_IMITATE_ENDER_DRAGON ke
	PARROT_IMITATE_EVOKER kg
	PARROT_IMITATE_GHAST kh
	PARROT_IMITATE_GUARDIAN ki
	PARROT_IMITATE_HOGLIN kj
	PARROT_IMITATE_HUSK kk
	PARROT_IMITATE_ILLUSIONER kl
	PARROT_IMITATE_MAGMA_CUBE km
	PARROT_IMITATE_PHANTOM kn
	PARROT_IMITATE_PIGLIN ko
	PARROT_IMITATE_PILLAGER kp
	PARROT_IMITATE_RAVAGER kq
	PARROT_IMITATE_SHULKER kr
	PARROT_IMITATE_SILVERFISH ks
	PARROT_IMITATE_SKELETON kt
	PARROT_IMITATE_SLIME ku
	PARROT_IMITATE_SPIDER kv
	PARROT_IMITATE_STRAY kw
	PARROT_IMITATE_VEX kx
	PARROT_IMITATE_VINDICATOR ky
	PARROT_IMITATE_WITCH kz
	PARROT_IMITATE_WITHER kA
	PARROT_IMITATE_WITHER_SKELETON kB
	PARROT_IMITATE_ZOGLIN kC
	PARROT_IMITATE_ZOMBIE kD
	PARROT_IMITATE_ZOMBIE_VILLAGER kE
	PARROT_STEP kF
	PHANTOM_AMBIENT kG
	PHANTOM_BITE kH
	PHANTOM_DEATH kI
	PHANTOM_FLAP kJ
	PHANTOM_HURT kK
	PHANTOM_SWOOP kL
	PIGLIN_ADMIRING_ITEM kR
	PIGLIN_AMBIENT kS
	PIGLIN_ANGRY kT
	PIGLIN_CELEBRATE kU
	PIGLIN_CONVERTED_TO_ZOMBIFIED la
	PIGLIN_DEATH kV
	PIGLIN_HURT kX
	PIGLIN_JEALOUS kW
	PIGLIN_RETREAT kY
	PIGLIN_STEP kZ
	PIG_AMBIENT kM
	PIG_DEATH kN
	PIG_HURT kO
	PIG_SADDLE kP
	PIG_STEP kQ
	PILLAGER_AMBIENT lb
	PILLAGER_CELEBRATE lc
	PILLAGER_DEATH ld
	PILLAGER_HURT le
	PISTON_CONTRACT lf
	PISTON_EXTEND lg
	PLAYER_ATTACK_CRIT lh
	PLAYER_ATTACK_KNOCKBACK li
	PLAYER_ATTACK_NODAMAGE lj
	PLAYER_ATTACK_STRONG lk
	PLAYER_ATTACK_SWEEP ll
	PLAYER_ATTACK_WEAK lm
	PLAYER_BIG_FALL ln
	PLAYER_BREATH lo
	PLAYER_BURP lp
	PLAYER_DEATH lq
	PLAYER_HURT lr
	PLAYER_HURT_DROWN ls
	PLAYER_HURT_ON_FIRE lt
	PLAYER_HURT_SWEET_BERRY_BUSH lu
	PLAYER_LEVELUP lv
	PLAYER_SMALL_FALL lw
	PLAYER_SPLASH lx
	PLAYER_SPLASH_HIGH_SPEED ly
	PLAYER_SWIM lz
	POLAR_BEAR_AMBIENT lA
	POLAR_BEAR_AMBIENT_BABY lB
	POLAR_BEAR_DEATH lC
	POLAR_BEAR_HURT lD
	POLAR_BEAR_STEP lE
	POLAR_BEAR_WARNING lF
	PORTAL_AMBIENT lG
	PORTAL_TRAVEL lH
	PORTAL_TRIGGER lI
	PUFFER_FISH_AMBIENT lJ
	PUFFER_FISH_BLOW_OUT lK
	PUFFER_FISH_BLOW_UP lL
	PUFFER_FISH_DEATH lM
	PUFFER_FISH_FLOP lN
	PUFFER_FISH_HURT lO
	PUFFER_FISH_STING lP
	PUMPKIN_CARVE lQ
	RABBIT_AMBIENT lR
	RABBIT_ATTACK lS
	RABBIT_DEATH lT
	RABBIT_HURT lU
	RABBIT_JUMP lV
	RAID_HORN lW
	RAVAGER_AMBIENT lX
	RAVAGER_ATTACK lY
	RAVAGER_CELEBRATE lZ
	RAVAGER_DEATH ma
	RAVAGER_HURT mb
	RAVAGER_ROAR me
	RAVAGER_STEP mc
	RAVAGER_STUNNED md
	REDSTONE_TORCH_BURNOUT mp
	RESPAWN_ANCHOR_AMBIENT mq
	RESPAWN_ANCHOR_CHARGE mr
	RESPAWN_ANCHOR_DEPLETE ms
	RESPAWN_ANCHOR_SET_SPAWN mt
	ROOTS_BREAK eA
	ROOTS_FALL eE
	ROOTS_HIT eD
	ROOTS_PLACE eC
	ROOTS_STEP eB
	SALMON_AMBIENT mu
	SALMON_DEATH mv
	SALMON_FLOP mw
	SALMON_HURT mx
	SAND_BREAK my
	SAND_FALL mz
	SAND_HIT mA
	SAND_PLACE mB
	SAND_STEP mC
	SCAFFOLDING_BREAK mD
	SCAFFOLDING_FALL mE
	SCAFFOLDING_HIT mF
	SCAFFOLDING_PLACE mG
	SCAFFOLDING_STEP mH
	SHEEP_AMBIENT mI
	SHEEP_DEATH mJ
	SHEEP_HURT mK
	SHEEP_SHEAR mL
	SHEEP_STEP mM
	SHIELD_BLOCK mN
	SHIELD_BREAK mO
	SHOVEL_FLATTEN mU
	SHROOMLIGHT_BREAK mP
	SHROOMLIGHT_FALL mT
	SHROOMLIGHT_HIT mS
	SHROOMLIGHT_PLACE mR
	SHROOMLIGHT_STEP mQ
	SHULKER_AMBIENT mV
	SHULKER_BOX_CLOSE mW
	SHULKER_BOX_OPEN mX
	SHULKER_BULLET_HIT mY
	SHULKER_BULLET_HURT mZ
	SHULKER_CLOSE na
	SHULKER_DEATH nb
	SHULKER_HURT nc
	SHULKER_HURT_CLOSED nd
	SHULKER_OPEN ne
	SHULKER_SHOOT nf
	SHULKER_TELEPORT ng
	SILVERFISH_AMBIENT nh
	SILVERFISH_DEATH ni
	SILVERFISH_HURT nj
	SILVERFISH_STEP nk
	SKELETON_AMBIENT nl
	SKELETON_DEATH nm
	SKELETON_HORSE_AMBIENT nn
	SKELETON_HORSE_AMBIENT_WATER nr
	SKELETON_HORSE_DEATH no
	SKELETON_HORSE_GALLOP_WATER ns
	SKELETON_HORSE_HURT np
	SKELETON_HORSE_JUMP_WATER nt
	SKELETON_HORSE_STEP_WATER nu
	SKELETON_HORSE_SWIM nq
	SKELETON_HURT nv
	SKELETON_SHOOT nw
	SKELETON_STEP nx
	SLIME_ATTACK ny
	SLIME_BLOCK_BREAK nD
	SLIME_BLOCK_FALL nE
	SLIME_BLOCK_HIT nF
	SLIME_BLOCK_PLACE nG
	SLIME_BLOCK_STEP nH
	SLIME_DEATH nz
	SLIME_DEATH_SMALL oc
	SLIME_HURT nA
	SLIME_HURT_SMALL od
	SLIME_JUMP nB
	SLIME_JUMP_SMALL oe
	SLIME_SQUISH nC
	SLIME_SQUISH_SMALL of
	SMITHING_TABLE_USE og
	SMOKER_SMOKE oh
	SNOWBALL_THROW oi
	SNOW_BREAK oj
	SNOW_FALL ok
	SNOW_GOLEM_AMBIENT ol
	SNOW_GOLEM_DEATH om
	SNOW_GOLEM_HURT on
	SNOW_GOLEM_SHEAR op
	SNOW_GOLEM_SHOOT oo
	SNOW_HIT oq
	SNOW_PLACE or
	SNOW_STEP os
	SOUL_ESCAPE nS
	SOUL_SAND_BREAK nI
	SOUL_SAND_FALL nM
	SOUL_SAND_HIT nL
	SOUL_SAND_PLACE nK
	SOUL_SAND_STEP nJ
	SOUL_SOIL_BREAK nN
	SOUL_SOIL_FALL nR
	SOUL_SOIL_HIT nQ
	SOUL_SOIL_PLACE nP
	SOUL_SOIL_STEP nO
	SPIDER_AMBIENT ot
	SPIDER_DEATH ou
	SPIDER_HURT ov
	SPIDER_STEP ow
	SPLASH_POTION_BREAK ox
	SPLASH_POTION_THROW oy
	SQUID_AMBIENT oz
	SQUID_DEATH oA
	SQUID_HURT oB
	SQUID_SQUIRT oC
	STEM_BREAK iB
	STEM_FALL iF
	STEM_HIT iE
	STEM_PLACE iD
	STEM_STEP iC
	STONE_BREAK oD
	STONE_BUTTON_CLICK_OFF oE
	STONE_BUTTON_CLICK_ON oF
	STONE_FALL oG
	STONE_HIT oH
	STONE_PLACE oI
	STONE_PRESSURE_PLATE_CLICK_OFF oJ
	STONE_PRESSURE_PLATE_CLICK_ON oK
	STONE_STEP oL
	STRAY_AMBIENT oM
	STRAY_DEATH oN
	STRAY_HURT oO
	STRAY_STEP oP
	STRIDER_AMBIENT nT
	STRIDER_DEATH nW
	STRIDER_EAT oa
	STRIDER_HAPPY nU
	STRIDER_HURT nX
	STRIDER_RETREAT nV
	STRIDER_SADDLE ob
	STRIDER_STEP nY
	STRIDER_STEP_LAVA nZ
	SWEET_BERRY_BUSH_BREAK oQ
	SWEET_BERRY_BUSH_PICK_BERRIES oS
	SWEET_BERRY_BUSH_PLACE oR
	THORNS_HIT oT
	TNT_PRIMED oU
	TOTEM_USE oV
	TRIDENT_HIT oW
	TRIDENT_HIT_GROUND oX
	TRIDENT_RETURN oY
	TRIDENT_RIPTIDE_1 oZ
	TRIDENT_RIPTIDE_2 pa
	TRIDENT_RIPTIDE_3 pb
	TRIDENT_THROW pc
	TRIDENT_THUNDER pd
	TRIPWIRE_ATTACH pe
	TRIPWIRE_CLICK_OFF pf
	TRIPWIRE_CLICK_ON pg
	TRIPWIRE_DETACH ph
	TROPICAL_FISH_AMBIENT pi
	TROPICAL_FISH_DEATH pj
	TROPICAL_FISH_FLOP pk
	TROPICAL_FISH_HURT pl
	TURTLE_AMBIENT_LAND pm
	TURTLE_DEATH pn
	TURTLE_DEATH_BABY po
	TURTLE_EGG_BREAK pp
	TURTLE_EGG_CRACK pq
	TURTLE_EGG_HATCH pr
	TURTLE_HURT ps
	TURTLE_HURT_BABY pt
	TURTLE_LAY_EGG pu
	TURTLE_SHAMBLE pv
	TURTLE_SHAMBLE_BABY pw
	TURTLE_SWIM px
	UI_BUTTON_CLICK py
	UI_CARTOGRAPHY_TABLE_TAKE_RESULT pB
	UI_LOOM_SELECT_PATTERN pz
	UI_LOOM_TAKE_RESULT pA
	UI_STONECUTTER_SELECT_RECIPE pD
	UI_STONECUTTER_TAKE_RESULT pC
	UI_TOAST_CHALLENGE_COMPLETE pE
	UI_TOAST_IN pF
	UI_TOAST_OUT pG
	VEX_AMBIENT pH
	VEX_CHARGE pI
	VEX_DEATH pJ
	VEX_HURT pK
	VILLAGER_AMBIENT pL
	VILLAGER_CELEBRATE pM
	VILLAGER_DEATH pN
	VILLAGER_HURT pO
	VILLAGER_NO pP
	VILLAGER_TRADE pQ
	VILLAGER_WORK_ARMORER pS
	VILLAGER_WORK_BUTCHER pT
	VILLAGER_WORK_CARTOGRAPHER pU
	VILLAGER_WORK_CLERIC pV
	VILLAGER_WORK_FARMER pW
	VILLAGER_WORK_FISHERMAN pX
	VILLAGER_WORK_FLETCHER pY
	VILLAGER_WORK_LEATHERWORKER pZ
	VILLAGER_WORK_LIBRARIAN qa
	VILLAGER_WORK_MASON qb
	VILLAGER_WORK_SHEPHERD qc
	VILLAGER_WORK_TOOLSMITH qd
	VILLAGER_WORK_WEAPONSMITH qe
	VILLAGER_YES pR
	VINDICATOR_AMBIENT qf
	VINDICATOR_CELEBRATE qg
	VINDICATOR_DEATH qh
	VINDICATOR_HURT qi
	VINE_STEP qj
	WANDERING_TRADER_AMBIENT ql
	WANDERING_TRADER_DEATH qm
	WANDERING_TRADER_DISAPPEARED qn
	WANDERING_TRADER_DRINK_MILK qo
	WANDERING_TRADER_DRINK_POTION qp
	WANDERING_TRADER_HURT qq
	WANDERING_TRADER_NO qr
	WANDERING_TRADER_REAPPEARED qs
	WANDERING_TRADER_TRADE qt
	WANDERING_TRADER_YES qu
	WART_BLOCK_BREAK ja
	WART_BLOCK_FALL je
	WART_BLOCK_HIT jd
	WART_BLOCK_PLACE jc
	WART_BLOCK_STEP jb
	WATER_AMBIENT qv
	WEATHER_RAIN qw
	WEATHER_RAIN_ABOVE qx
	WEEPING_VINES_BREAK iV
	WEEPING_VINES_FALL iZ
	WEEPING_VINES_HIT iY
	WEEPING_VINES_PLACE iX
	WEEPING_VINES_STEP iW
	WET_GRASS_BREAK qy
	WET_GRASS_FALL qz
	WET_GRASS_HIT qA
	WET_GRASS_PLACE qB
	WET_GRASS_STEP qC
	WITCH_AMBIENT qD
	WITCH_CELEBRATE qE
	WITCH_DEATH qF
	WITCH_DRINK qG
	WITCH_HURT qH
	WITCH_THROW qI
	WITHER_AMBIENT qJ
	WITHER_BREAK_BLOCK qK
	WITHER_DEATH qL
	WITHER_HURT qM
	WITHER_SHOOT qN
	WITHER_SKELETON_AMBIENT qO
	WITHER_SKELETON_DEATH qP
	WITHER_SKELETON_HURT qQ
	WITHER_SKELETON_STEP qR
	WITHER_SPAWN qS
	WOLF_AMBIENT qT
	WOLF_DEATH qU
	WOLF_GROWL qV
	WOLF_HOWL qW
	WOLF_HURT qX
	WOLF_PANT qY
	WOLF_SHAKE qZ
	WOLF_STEP ra
	WOLF_WHINE rb
	WOODEN_BUTTON_CLICK_OFF rh
	WOODEN_BUTTON_CLICK_ON ri
	WOODEN_DOOR_CLOSE rc
	WOODEN_DOOR_OPEN rd
	WOODEN_PRESSURE_PLATE_CLICK_OFF rm
	WOODEN_PRESSURE_PLATE_CLICK_ON rn
	WOODEN_TRAPDOOR_CLOSE re
	WOODEN_TRAPDOOR_OPEN rf
	WOOD_BREAK rg
	WOOD_FALL rj
	WOOD_HIT rk
	WOOD_PLACE rl
	WOOD_STEP ro
	WOOL_BREAK rp
	WOOL_FALL rq
	WOOL_HIT rr
	WOOL_PLACE rs
	WOOL_STEP rt
	ZOGLIN_AMBIENT ru
	ZOGLIN_ANGRY rv
	ZOGLIN_ATTACK rw
	ZOGLIN_DEATH rx
	ZOGLIN_HURT ry
	ZOGLIN_STEP rz
	ZOMBIE_AMBIENT rA
	ZOMBIE_ATTACK_IRON_DOOR rC
	ZOMBIE_ATTACK_WOODEN_DOOR rB
	ZOMBIE_BREAK_WOODEN_DOOR rD
	ZOMBIE_CONVERTED_TO_DROWNED rE
	ZOMBIE_DEATH rF
	ZOMBIE_DESTROY_EGG rG
	ZOMBIE_HORSE_AMBIENT rH
	ZOMBIE_HORSE_DEATH rI
	ZOMBIE_HORSE_HURT rJ
	ZOMBIE_HURT rK
	ZOMBIE_INFECT rL
	ZOMBIE_STEP rQ
	ZOMBIE_VILLAGER_AMBIENT rR
	ZOMBIE_VILLAGER_CONVERTED rS
	ZOMBIE_VILLAGER_CURE rT
	ZOMBIE_VILLAGER_DEATH rU
	ZOMBIE_VILLAGER_HURT rV
	ZOMBIE_VILLAGER_STEP rW
	ZOMBIFIED_PIGLIN_AMBIENT rM
	ZOMBIFIED_PIGLIN_ANGRY rN
	ZOMBIFIED_PIGLIN_DEATH rO
	ZOMBIFIED_PIGLIN_HURT rP
	register (Ljava/lang/String;)Lnet/minecraft/sounds/SoundEvent; a
net/minecraft/sounds/SoundSource acm
	$VALUES m
	AMBIENT i
	BLOCKS e
	BY_NAME k
	HOSTILE f
	MASTER a
	MUSIC b
	NEUTRAL g
	PLAYERS h
	RECORDS c
	VOICE j
	WEATHER d
	name l
	byName (Ljava/lang/String;)Lnet/minecraft/sounds/SoundSource; a
	getName ()Ljava/lang/String; a
	getNames ()Ljava/util/Set; b
net/minecraft/stats/RecipeBook aco
	blastingFurnaceFilteringCraftable h
	blastingFurnaceGuiOpen g
	filteringCraftable d
	furnaceFilteringCraftable f
	furnaceGuiOpen e
	guiOpen c
	highlight b
	known a
	smokerFilteringCraftable j
	smokerGuiOpen i
	add (Lnet/minecraft/resources/ResourceLocation;)V a
	add (Lnet/minecraft/world/item/crafting/Recipe;)V a
	addHighlight (Lnet/minecraft/resources/ResourceLocation;)V d
	addHighlight (Lnet/minecraft/world/item/crafting/Recipe;)V f
	contains (Lnet/minecraft/resources/ResourceLocation;)Z b
	contains (Lnet/minecraft/world/item/crafting/Recipe;)Z b
	copyOverData (Lnet/minecraft/stats/RecipeBook;)V a
	isBlastingFurnaceFilteringCraftable ()Z f
	isBlastingFurnaceGuiOpen ()Z e
	isFilteringCraftable ()Z b
	isFilteringCraftable (Lnet/minecraft/world/inventory/RecipeBookMenu;)Z a
	isFurnaceFilteringCraftable ()Z d
	isFurnaceGuiOpen ()Z c
	isGuiOpen ()Z a
	isSmokerFilteringCraftable ()Z h
	isSmokerGuiOpen ()Z g
	remove (Lnet/minecraft/resources/ResourceLocation;)V c
	remove (Lnet/minecraft/world/item/crafting/Recipe;)V c
	removeHighlight (Lnet/minecraft/world/item/crafting/Recipe;)V e
	setBlastingFurnaceFilteringCraftable (Z)V f
	setBlastingFurnaceGuiOpen (Z)V e
	setFilteringCraftable (Z)V b
	setFurnaceFilteringCraftable (Z)V d
	setFurnaceGuiOpen (Z)V c
	setGuiOpen (Z)V a
	setSmokerFilteringCraftable (Z)V h
	setSmokerGuiOpen (Z)V g
	willHighlight (Lnet/minecraft/world/item/crafting/Recipe;)Z d
net/minecraft/stats/ServerRecipeBook acp
	LOGGER k
	addRecipes (Ljava/util/Collection;Lnet/minecraft/server/level/ServerPlayer;)I a
	fromNbt (Lnet/minecraft/nbt/CompoundTag;Lnet/minecraft/world/item/crafting/RecipeManager;)V a
	loadRecipes (Lnet/minecraft/nbt/ListTag;Ljava/util/function/Consumer;Lnet/minecraft/world/item/crafting/RecipeManager;)V a
	removeRecipes (Ljava/util/Collection;Lnet/minecraft/server/level/ServerPlayer;)I b
	sendInitialRecipeBook (Lnet/minecraft/server/level/ServerPlayer;)V a
	sendRecipes (Lnet/minecraft/network/protocol/game/ClientboundRecipePacket$State;Lnet/minecraft/server/level/ServerPlayer;Ljava/util/List;)V a
	toNbt ()Lnet/minecraft/nbt/CompoundTag; i
net/minecraft/stats/ServerStatsCounter acq
	LOGGER b
	dirty e
	file d
	lastStatRequest f
	server c
	fromJson (Lcom/google/gson/JsonObject;)Lnet/minecraft/nbt/CompoundTag; a
	getDirty ()Ljava/util/Set; d
	getKey (Lnet/minecraft/stats/Stat;)Lnet/minecraft/resources/ResourceLocation; b
	getStat (Lnet/minecraft/stats/StatType;Ljava/lang/String;)Ljava/util/Optional; a
	markAllDirty ()V c
	parseLocal (Lcom/mojang/datafixers/DataFixer;Ljava/lang/String;)V a
	save ()V a
	sendStats (Lnet/minecraft/server/level/ServerPlayer;)V a
	setValue (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/stats/Stat;I)V a
	toJson ()Ljava/lang/String; b
net/minecraft/stats/Stat acr
	formatter o
	type q
	value p
	buildName (Lnet/minecraft/stats/StatType;Ljava/lang/Object;)Ljava/lang/String; a
	format (I)Ljava/lang/String; a
	getType ()Lnet/minecraft/stats/StatType; a
	getValue ()Ljava/lang/Object; b
	locationToKey (Lnet/minecraft/resources/ResourceLocation;)Ljava/lang/String; a
net/minecraft/stats/StatFormatter acs
	DECIMAL_FORMAT a
	DEFAULT b
	DISTANCE d
	DIVIDE_BY_TEN c
	TIME e
net/minecraft/stats/StatType act
	map b
	registry a
	contains (Ljava/lang/Object;)Z a
	get (Ljava/lang/Object;)Lnet/minecraft/stats/Stat; b
	get (Ljava/lang/Object;Lnet/minecraft/stats/StatFormatter;)Lnet/minecraft/stats/Stat; a
	getRegistry ()Lnet/minecraft/core/Registry; a
	getTranslationKey ()Ljava/lang/String; c
	size ()I b
net/minecraft/stats/Stats acu
	ANIMALS_BRED O
	AVIATE_ONE_CM A
	BELL_RING ay
	BLOCK_MINED a
	BOAT_ONE_CM x
	CLEAN_ARMOR W
	CLEAN_BANNER X
	CLEAN_SHULKER_BOX Y
	CLIMB_ONE_CM t
	CROUCH_ONE_CM p
	CROUCH_TIME n
	CUSTOM i
	DAMAGE_ABSORBED K
	DAMAGE_BLOCKED_BY_SHIELD J
	DAMAGE_DEALT F
	DAMAGE_DEALT_ABSORBED G
	DAMAGE_DEALT_RESISTED H
	DAMAGE_RESISTED L
	DAMAGE_TAKEN I
	DEATHS M
	DROP E
	EAT_CAKE_SLICE T
	ENCHANT_ITEM aj
	ENTITY_KILLED g
	ENTITY_KILLED_BY h
	FALL_ONE_CM s
	FILL_CAULDRON U
	FISH_CAUGHT Q
	FLY_ONE_CM u
	HORSE_ONE_CM z
	INSPECT_DISPENSER ad
	INSPECT_DROPPER ab
	INSPECT_HOPPER ac
	INTERACT_WITH_ANVIL aB
	INTERACT_WITH_BEACON aa
	INTERACT_WITH_BLAST_FURNACE ar
	INTERACT_WITH_BREWINGSTAND Z
	INTERACT_WITH_CAMPFIRE au
	INTERACT_WITH_CARTOGRAPHY_TABLE av
	INTERACT_WITH_CRAFTING_TABLE am
	INTERACT_WITH_FURNACE al
	INTERACT_WITH_GRINDSTONE aC
	INTERACT_WITH_LECTERN at
	INTERACT_WITH_LOOM aw
	INTERACT_WITH_SMITHING_TABLE aE
	INTERACT_WITH_SMOKER as
	INTERACT_WITH_STONECUTTER ax
	ITEM_BROKEN d
	ITEM_CRAFTED b
	ITEM_DROPPED f
	ITEM_PICKED_UP e
	ITEM_USED c
	JUMP D
	LEAVE_GAME j
	MINECART_ONE_CM w
	MOB_KILLS N
	OPEN_BARREL aq
	OPEN_CHEST an
	OPEN_ENDERCHEST ai
	OPEN_SHULKER_BOX ap
	PIG_ONE_CM y
	PLAYER_KILLS P
	PLAY_NOTEBLOCK ae
	PLAY_ONE_MINUTE k
	PLAY_RECORD ak
	POT_FLOWER ag
	RAID_TRIGGER az
	RAID_WIN aA
	SLEEP_IN_BED ao
	SPRINT_ONE_CM q
	STRIDER_ONE_CM C
	SWIM_ONE_CM B
	TALKED_TO_VILLAGER R
	TARGET_HIT aD
	TIME_SINCE_DEATH l
	TIME_SINCE_REST m
	TRADED_WITH_VILLAGER S
	TRIGGER_TRAPPED_CHEST ah
	TUNE_NOTEBLOCK af
	USE_CAULDRON V
	WALK_ONE_CM o
	WALK_ON_WATER_ONE_CM r
	WALK_UNDER_WATER_ONE_CM v
	makeCustomStat (Ljava/lang/String;Lnet/minecraft/stats/StatFormatter;)Lnet/minecraft/resources/ResourceLocation; a
	makeRegistryStatType (Ljava/lang/String;Lnet/minecraft/core/Registry;)Lnet/minecraft/stats/StatType; a
net/minecraft/stats/StatsCounter acv
	stats a
	getValue (Lnet/minecraft/stats/Stat;)I a
	getValue (Lnet/minecraft/stats/StatType;Ljava/lang/Object;)I a
	increment (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/stats/Stat;I)V b
	setValue (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/stats/Stat;I)V a
net/minecraft/tags/BlockTags acx
	ACACIA_LOGS v
	ANVIL F
	BAMBOO_PLANTABLE_ON ab
	BANNERS A
	BEACON_BASE_BLOCKS ap
	BEDS K
	BEEHIVES ai
	BEE_GROWABLES ak
	BIRCH_LOGS u
	BUTTONS e
	CAMPFIRES ax
	CARPETS f
	CLIMBABLE as
	CORALS aa
	CORAL_BLOCKS X
	CORAL_PLANTS Z
	CRIMSON_STEMS y
	CROPS aj
	DARK_OAK_LOGS s
	DOORS o
	DRAGON_IMMUNE af
	ENDERMAN_HOLDABLE S
	FENCES L
	FENCE_GATES aA
	FIRE am
	FLOWERS N
	FLOWER_POTS R
	GOLD_ORES P
	GUARDED_BY_PIGLINS ay
	HELPER aF
	HOGLIN_REPELLENTS au
	ICE T
	IMPERMEABLE V
	INFINIBURN_END aE
	INFINIBURN_NETHER aD
	INFINIBURN_OVERWORLD aC
	JUNGLE_LOGS w
	LEAVES H
	LOGS r
	LOGS_THAT_BURN q
	NON_FLAMMABLE_WOOD Q
	NYLIUM an
	OAK_LOGS t
	PIGLIN_REPELLENTS O
	PLANKS b
	PORTALS al
	PRESSURE_PLATES k
	PREVENT_MOB_SPAWNING_INSIDE az
	RAILS G
	SAND B
	SAPLINGS p
	SHULKER_BOXES at
	SIGNS ae
	SLABS D
	SMALL_FLOWERS J
	SOUL_FIRE_BASE_BLOCKS av
	SOUL_SPEED_BLOCKS aq
	SPRUCE_LOGS x
	STAIRS C
	STANDING_SIGNS ac
	STONE_BRICKS c
	STONE_PRESSURE_PLATES m
	STRIDER_WARM_BLOCKS aw
	TALL_FLOWERS M
	TRAPDOORS I
	UNDERWATER_BONEMEALS W
	UNSTABLE_BOTTOM_CENTER aB
	VALID_SPAWN U
	WALLS E
	WALL_CORALS Y
	WALL_POST_OVERRIDE ar
	WALL_SIGNS ad
	WARPED_STEMS z
	WART_BLOCKS ao
	WITHER_IMMUNE ag
	WITHER_SUMMON_BASE_BLOCKS ah
	WOODEN_BUTTONS d
	WOODEN_DOORS g
	WOODEN_FENCES j
	WOODEN_PRESSURE_PLATES l
	WOODEN_SLABS i
	WOODEN_STAIRS h
	WOODEN_TRAPDOORS n
	WOOL a
	bind (Ljava/lang/String;)Lnet/minecraft/tags/Tag$Named; a
	getAllTags ()Lnet/minecraft/tags/TagCollection; b
	getMissingTags (Lnet/minecraft/tags/TagCollection;)Ljava/util/Set; b
	reset (Lnet/minecraft/tags/TagCollection;)V a
	resetToEmpty ()V a
net/minecraft/tags/EntityTypeTags acy
	ARROWS d
	BEEHIVE_INHABITORS c
	HELPER f
	IMPACT_PROJECTILES e
	RAIDERS b
	SKELETONS a
	bind (Ljava/lang/String;)Lnet/minecraft/tags/Tag$Named; a
	getAllTags ()Lnet/minecraft/tags/TagCollection; b
	getMissingTags (Lnet/minecraft/tags/TagCollection;)Ljava/util/Set; b
	reset (Lnet/minecraft/tags/TagCollection;)V a
	resetToEmpty ()V a
net/minecraft/tags/FluidTags acz
	HELPER c
	LAVA b
	WATER a
	bind (Ljava/lang/String;)Lnet/minecraft/tags/Tag$Named; a
	getAllTags ()Lnet/minecraft/tags/TagCollection; b
	getMissingTags (Lnet/minecraft/tags/TagCollection;)Ljava/util/Set; b
	getWrappers ()Ljava/util/List; c
	reset (Lnet/minecraft/tags/TagCollection;)V a
	resetToEmpty ()V a
net/minecraft/tags/ItemTags ada
	ACACIA_LOGS t
	ANVIL D
	ARROWS X
	BANNERS y
	BEACON_PAYMENT_ITEMS Z
	BEDS I
	BIRCH_LOGS s
	BOATS R
	BUTTONS e
	CARPETS f
	COALS W
	CREEPER_DROP_MUSIC_DISCS V
	CRIMSON_STEMS w
	DARK_OAK_LOGS q
	DOORS m
	FENCES J
	FISHES S
	FLOWERS L
	FURNACE_MATERIALS ab
	GOLD_ORES O
	HELPER ac
	JUNGLE_LOGS u
	LEAVES F
	LECTERN_BOOKS Y
	LOGS p
	LOGS_THAT_BURN o
	MUSIC_DISCS U
	NON_FLAMMABLE_WOOD P
	OAK_LOGS r
	PIGLIN_LOVED N
	PIGLIN_REPELLENTS M
	PLANKS b
	RAILS E
	SAND z
	SAPLINGS n
	SIGNS T
	SLABS B
	SMALL_FLOWERS H
	SOUL_FIRE_BASE_BLOCKS Q
	SPRUCE_LOGS v
	STAIRS A
	STONE_BRICKS c
	STONE_TOOL_MATERIALS aa
	TALL_FLOWERS K
	TRAPDOORS G
	WALLS C
	WARPED_STEMS x
	WOODEN_BUTTONS d
	WOODEN_DOORS g
	WOODEN_FENCES j
	WOODEN_PRESSURE_PLATES k
	WOODEN_SLABS i
	WOODEN_STAIRS h
	WOODEN_TRAPDOORS l
	WOOL a
	bind (Ljava/lang/String;)Lnet/minecraft/tags/Tag$Named; a
	getAllTags ()Lnet/minecraft/tags/TagCollection; b
	getMissingTags (Lnet/minecraft/tags/TagCollection;)Ljava/util/Set; b
	reset (Lnet/minecraft/tags/TagCollection;)V a
	resetToEmpty ()V a
net/minecraft/tags/SerializationTags adb
	blocks b
	entityTypes e
	fluids d
	instance a
	items c
	bind (Lnet/minecraft/tags/TagCollection;Lnet/minecraft/tags/TagCollection;Lnet/minecraft/tags/TagCollection;Lnet/minecraft/tags/TagCollection;)V a
	getBlocks ()Lnet/minecraft/tags/TagCollection; a
	getEntityTypes ()Lnet/minecraft/tags/TagCollection; d
	getFluids ()Lnet/minecraft/tags/TagCollection; c
	getInstance ()Lnet/minecraft/tags/SerializationTags; e
	getItems ()Lnet/minecraft/tags/TagCollection; b
net/minecraft/tags/SetTag adc
	closestCommonSuperType a
	values c
	valuesList b
	contains (Ljava/lang/Object;)Z a
	create (Ljava/util/Set;)Lnet/minecraft/tags/SetTag; a
	empty ()Lnet/minecraft/tags/SetTag; a
	findClosestAncestor (Ljava/lang/Class;Ljava/lang/Class;)Ljava/lang/Class; a
	findCommonSuperClass (Ljava/util/Set;)Ljava/lang/Class; c
	getValues ()Ljava/util/List; b
net/minecraft/tags/StaticTagHelper add
	empty a
	source b
	wrappers c
	bind (Ljava/lang/String;)Lnet/minecraft/tags/Tag$Named; a
	getAllTags ()Lnet/minecraft/tags/TagCollection; b
	getMissingTags (Lnet/minecraft/tags/TagCollection;)Ljava/util/Set; b
	getWrappers ()Ljava/util/List; c
	reset (Lnet/minecraft/tags/TagCollection;)V a
	resetToEmpty ()V a
net/minecraft/tags/StaticTagHelper$Wrapper add$a
	name a
	tag b
	contains (Ljava/lang/Object;)Z a
	getName ()Lnet/minecraft/resources/ResourceLocation; a
	getValues ()Ljava/util/List; b
	rebind (Ljava/util/function/Function;)V a
	resolve ()Lnet/minecraft/tags/Tag; c
net/minecraft/tags/SynchronizableTagCollection ade
	registry a
	loadFromNetwork (Lnet/minecraft/network/FriendlyByteBuf;)V b
	serializeToNetwork (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/tags/Tag adf
	codec (Ljava/util/function/Supplier;)Lcom/mojang/serialization/Codec; a
	contains (Ljava/lang/Object;)Z a
	fromSet (Ljava/util/Set;)Lnet/minecraft/tags/Tag; b
	getRandomElement (Ljava/util/Random;)Ljava/lang/Object; a
	getValues ()Ljava/util/List; b
net/minecraft/tags/Tag$Builder adf$a
	entries a
	add (Lnet/minecraft/tags/Tag$BuilderEntry;)Lnet/minecraft/tags/Tag$Builder; a
	add (Lnet/minecraft/tags/Tag$Entry;Ljava/lang/String;)Lnet/minecraft/tags/Tag$Builder; a
	addElement (Lnet/minecraft/resources/ResourceLocation;Ljava/lang/String;)Lnet/minecraft/tags/Tag$Builder; a
	addFromJson (Lcom/google/gson/JsonObject;Ljava/lang/String;)Lnet/minecraft/tags/Tag$Builder; a
	addTag (Lnet/minecraft/resources/ResourceLocation;Ljava/lang/String;)Lnet/minecraft/tags/Tag$Builder; b
	build (Ljava/util/function/Function;Ljava/util/function/Function;)Ljava/util/Optional; a
	getEntries ()Ljava/util/stream/Stream; b
	getUnresolvedEntries (Ljava/util/function/Function;Ljava/util/function/Function;)Ljava/util/stream/Stream; b
	serializeToJson ()Lcom/google/gson/JsonObject; c
	tag ()Lnet/minecraft/tags/Tag$Builder; a
net/minecraft/tags/Tag$BuilderEntry adf$b
	entry a
	source b
	getEntry ()Lnet/minecraft/tags/Tag$Entry; a
	getSource ()Ljava/lang/String; b
net/minecraft/tags/Tag$ElementEntry adf$c
	id a
	build (Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/Consumer;)Z a
	serializeTo (Lcom/google/gson/JsonArray;)V a
net/minecraft/tags/Tag$Entry adf$d
	build (Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/Consumer;)Z a
	serializeTo (Lcom/google/gson/JsonArray;)V a
net/minecraft/tags/Tag$Named adf$e
	getName ()Lnet/minecraft/resources/ResourceLocation; a
net/minecraft/tags/Tag$TagEntry adf$f
	id a
	build (Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/Consumer;)Z a
	serializeTo (Lcom/google/gson/JsonArray;)V a
net/minecraft/tags/TagCollection adg
	GSON b
	LOGGER a
	PATH_SUFFIX_LENGTH c
	directory g
	empty d
	idToValue f
	name h
	tags e
	getAllTags ()Ljava/util/Map; b
	getAvailableTags ()Ljava/util/Collection; a
	getId (Lnet/minecraft/tags/Tag$Named;)Lnet/minecraft/resources/ResourceLocation; a
	getId (Lnet/minecraft/tags/Tag;)Lnet/minecraft/resources/ResourceLocation; a
	getIdOrThrow (Lnet/minecraft/tags/Tag;)Lnet/minecraft/resources/ResourceLocation; b
	getMatchingTags (Ljava/lang/Object;)Ljava/util/Collection; a
	getTag (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/tags/Tag; a
	getTagOrEmpty (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/tags/Tag; b
	hasTag (Lnet/minecraft/resources/ResourceLocation;)Z c
	load (Ljava/util/Map;)V a
	prepare (Lnet/minecraft/server/packs/resources/ResourceManager;Ljava/util/concurrent/Executor;)Ljava/util/concurrent/CompletableFuture; a
	replace (Ljava/util/Map;)V b
net/minecraft/tags/TagManager adh
	blocks a
	entityTypes d
	fluids c
	items b
	bindToGlobal ()V f
	deserializeFromNetwork (Lnet/minecraft/network/FriendlyByteBuf;)Lnet/minecraft/tags/TagManager; b
	getBlocks ()Lnet/minecraft/tags/SynchronizableTagCollection; a
	getEntityTypes ()Lnet/minecraft/tags/SynchronizableTagCollection; e
	getFluids ()Lnet/minecraft/tags/SynchronizableTagCollection; d
	getItems ()Lnet/minecraft/tags/SynchronizableTagCollection; b
	reload (Lnet/minecraft/server/packs/resources/PreparableReloadListener$PreparationBarrier;Lnet/minecraft/server/packs/resources/ResourceManager;Lnet/minecraft/util/profiling/ProfilerFiller;Lnet/minecraft/util/profiling/ProfilerFiller;Ljava/util/concurrent/Executor;Ljava/util/concurrent/Executor;)Ljava/util/concurrent/CompletableFuture; a
	serializeToNetwork (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/util/BitStorage adj
	MAGIC a
	bits c
	data b
	divideAdd h
	divideMul g
	divideShift i
	mask d
	size e
	valuesPerLong f
	cellIndex (I)I b
	get (I)I a
	getAll (Ljava/util/function/IntConsumer;)V a
	getAndSet (II)I a
	getBits ()I c
	getRaw ()[J a
	getSize ()I b
	set (II)V b
net/minecraft/util/ClassInstanceMultiMap adk
	allInstances c
	baseClass b
	byClass a
	find (Ljava/lang/Class;)Ljava/util/Collection; a
	getAllInstances ()Ljava/util/List; a
net/minecraft/util/Codecs adl
	checkRange (DD)Ljava/util/function/Function; b
	checkRange (II)Ljava/util/function/Function; b
	doubleRange (DD)Lcom/mojang/serialization/Codec; a
	intRange (II)Lcom/mojang/serialization/Codec; a
	mapResult (Lcom/mojang/serialization/MapCodec;Lnet/minecraft/util/Codecs$ResultFunction;)Lcom/mojang/serialization/MapCodec; a
	setPartial (Lcom/mojang/serialization/MapCodec;Ljava/util/function/Supplier;)Lcom/mojang/serialization/MapCodec; a
	withDefault (Lcom/mojang/serialization/MapCodec;Ljava/util/function/Consumer;Ljava/util/function/Supplier;)Lcom/mojang/serialization/MapCodec; a
	withName (Lnet/minecraft/resources/ResourceKey;Lcom/mojang/serialization/MapCodec;)Lcom/mojang/serialization/MapCodec; a
net/minecraft/util/Codecs$ResultFunction adl$a
	apply (Lcom/mojang/serialization/DynamicOps;Lcom/mojang/serialization/MapLike;Lcom/mojang/serialization/DataResult;)Lcom/mojang/serialization/DataResult; a
	coApply (Lcom/mojang/serialization/DynamicOps;Ljava/lang/Object;Lcom/mojang/serialization/RecordBuilder;)Lcom/mojang/serialization/RecordBuilder; a
net/minecraft/util/CrudeIncrementalIntIdentityHashBiMap adm
	EMPTY_SLOT a
	byId d
	keys b
	nextId e
	size f
	values c
	add (Ljava/lang/Object;)I c
	addMapping (Ljava/lang/Object;I)V a
	byId (I)Ljava/lang/Object; a
	clear ()V a
	contains (I)Z b
	contains (Ljava/lang/Object;)Z b
	findEmpty (I)I e
	getId (Ljava/lang/Object;)I a
	getValue (I)I c
	grow (I)V d
	hash (Ljava/lang/Object;)I d
	indexOf (Ljava/lang/Object;I)I b
	nextId ()I c
	size ()I b
net/minecraft/util/Crypt adn
	LOGGER a
	byteToPublicKey ([B)Ljava/security/PublicKey; a
	cipherData (ILjava/security/Key;[B)[B a
	decryptByteToSecretKey (Ljava/security/PrivateKey;[B)Ljavax/crypto/SecretKey; a
	decryptUsingKey (Ljava/security/Key;[B)[B b
	digestData (Ljava/lang/String;Ljava/security/PublicKey;Ljavax/crypto/SecretKey;)[B a
	digestData (Ljava/lang/String;[[B)[B a
	encryptUsingKey (Ljava/security/Key;[B)[B a
	generateKeyPair ()Ljava/security/KeyPair; b
	generateSecretKey ()Ljavax/crypto/SecretKey; a
	getCipher (ILjava/security/Key;)Ljavax/crypto/Cipher; a
	setupCipher (ILjava/lang/String;Ljava/security/Key;)Ljavax/crypto/Cipher; a
net/minecraft/util/CsvOutput ado
	columnCount b
	output a
	builder ()Lnet/minecraft/util/CsvOutput$Builder; a
	getStringValue (Ljava/lang/Object;)Ljava/lang/String; a
	writeLine (Ljava/util/stream/Stream;)V a
	writeRow ([Ljava/lang/Object;)V a
net/minecraft/util/CsvOutput$Builder ado$a
	headers a
	addColumn (Ljava/lang/String;)Lnet/minecraft/util/CsvOutput$Builder; a
	build (Ljava/io/Writer;)Lnet/minecraft/util/CsvOutput; a
net/minecraft/util/DirectoryLock adp
	DUMMY c
	lock b
	lockFile a
	create (Ljava/nio/file/Path;)Lnet/minecraft/util/DirectoryLock; a
	isLocked (Ljava/nio/file/Path;)Z b
	isValid ()Z a
net/minecraft/util/DirectoryLock$LockException adp$a
	alreadyLocked (Ljava/nio/file/Path;)Lnet/minecraft/util/DirectoryLock$LockException; a
net/minecraft/util/ExceptionCollector adq
	result a
	add (Ljava/lang/Throwable;)V a
	throwIfPresent ()V a
net/minecraft/util/FastColor adr
net/minecraft/util/FastColor$ARGB32 adr$a
	alpha (I)I a
	blue (I)I d
	color (IIII)I a
	green (I)I c
	multiply (II)I a
	red (I)I b
net/minecraft/util/FrameTimer ads
	logEnd d
	logLength c
	logStart b
	loggedTimes a
	getAverageDuration (I)J a
	getLog ()[J c
	getLogEnd ()I b
	getLogStart ()I a
	logFrameDuration (J)V a
	scaleAverageDurationTo (II)I a
	scaleSampleTo (JII)I a
	wrapIndex (I)I b
net/minecraft/util/GsonHelper adt
	GSON a
	convertToBigDecimal (Lcom/google/gson/JsonElement;Ljava/lang/String;)Ljava/math/BigDecimal; j
	convertToBigInteger (Lcom/google/gson/JsonElement;Ljava/lang/String;)Ljava/math/BigInteger; k
	convertToBoolean (Lcom/google/gson/JsonElement;Ljava/lang/String;)Z c
	convertToByte (Lcom/google/gson/JsonElement;Ljava/lang/String;)B h
	convertToCharacter (Lcom/google/gson/JsonElement;Ljava/lang/String;)C i
	convertToDouble (Lcom/google/gson/JsonElement;Ljava/lang/String;)D d
	convertToFloat (Lcom/google/gson/JsonElement;Ljava/lang/String;)F e
	convertToInt (Lcom/google/gson/JsonElement;Ljava/lang/String;)I g
	convertToItem (Lcom/google/gson/JsonElement;Ljava/lang/String;)Lnet/minecraft/world/item/Item; b
	convertToJsonArray (Lcom/google/gson/JsonElement;Ljava/lang/String;)Lcom/google/gson/JsonArray; n
	convertToJsonObject (Lcom/google/gson/JsonElement;Ljava/lang/String;)Lcom/google/gson/JsonObject; m
	convertToLong (Lcom/google/gson/JsonElement;Ljava/lang/String;)J f
	convertToObject (Lcom/google/gson/JsonElement;Ljava/lang/String;Lcom/google/gson/JsonDeserializationContext;Ljava/lang/Class;)Ljava/lang/Object; a
	convertToShort (Lcom/google/gson/JsonElement;Ljava/lang/String;)S l
	convertToString (Lcom/google/gson/JsonElement;Ljava/lang/String;)Ljava/lang/String; a
	fromJson (Lcom/google/gson/Gson;Ljava/io/Reader;Lcom/google/gson/reflect/TypeToken;)Ljava/lang/Object; a
	fromJson (Lcom/google/gson/Gson;Ljava/io/Reader;Lcom/google/gson/reflect/TypeToken;Z)Ljava/lang/Object; a
	fromJson (Lcom/google/gson/Gson;Ljava/io/Reader;Ljava/lang/Class;)Ljava/lang/Object; a
	fromJson (Lcom/google/gson/Gson;Ljava/io/Reader;Ljava/lang/Class;Z)Ljava/lang/Object; a
	fromJson (Lcom/google/gson/Gson;Ljava/lang/String;Lcom/google/gson/reflect/TypeToken;)Ljava/lang/Object; a
	fromJson (Lcom/google/gson/Gson;Ljava/lang/String;Lcom/google/gson/reflect/TypeToken;Z)Ljava/lang/Object; a
	fromJson (Lcom/google/gson/Gson;Ljava/lang/String;Ljava/lang/Class;)Ljava/lang/Object; a
	fromJson (Lcom/google/gson/Gson;Ljava/lang/String;Ljava/lang/Class;Z)Ljava/lang/Object; a
	getAsBigDecimal (Lcom/google/gson/JsonObject;Ljava/lang/String;)Ljava/math/BigDecimal; q
	getAsBigDecimal (Lcom/google/gson/JsonObject;Ljava/lang/String;Ljava/math/BigDecimal;)Ljava/math/BigDecimal; a
	getAsBigInteger (Lcom/google/gson/JsonObject;Ljava/lang/String;)Ljava/math/BigInteger; r
	getAsBigInteger (Lcom/google/gson/JsonObject;Ljava/lang/String;Ljava/math/BigInteger;)Ljava/math/BigInteger; a
	getAsBoolean (Lcom/google/gson/JsonObject;Ljava/lang/String;)Z j
	getAsBoolean (Lcom/google/gson/JsonObject;Ljava/lang/String;Z)Z a
	getAsByte (Lcom/google/gson/JsonObject;Ljava/lang/String;)B o
	getAsByte (Lcom/google/gson/JsonObject;Ljava/lang/String;B)B a
	getAsCharacter (Lcom/google/gson/JsonObject;Ljava/lang/String;)C p
	getAsCharacter (Lcom/google/gson/JsonObject;Ljava/lang/String;C)C a
	getAsDouble (Lcom/google/gson/JsonObject;Ljava/lang/String;)D k
	getAsDouble (Lcom/google/gson/JsonObject;Ljava/lang/String;D)D a
	getAsFloat (Lcom/google/gson/JsonObject;Ljava/lang/String;)F l
	getAsFloat (Lcom/google/gson/JsonObject;Ljava/lang/String;F)F a
	getAsInt (Lcom/google/gson/JsonObject;Ljava/lang/String;)I n
	getAsInt (Lcom/google/gson/JsonObject;Ljava/lang/String;I)I a
	getAsItem (Lcom/google/gson/JsonObject;Ljava/lang/String;)Lnet/minecraft/world/item/Item; i
	getAsItem (Lcom/google/gson/JsonObject;Ljava/lang/String;Lnet/minecraft/world/item/Item;)Lnet/minecraft/world/item/Item; a
	getAsJsonArray (Lcom/google/gson/JsonObject;Ljava/lang/String;)Lcom/google/gson/JsonArray; u
	getAsJsonArray (Lcom/google/gson/JsonObject;Ljava/lang/String;Lcom/google/gson/JsonArray;)Lcom/google/gson/JsonArray; a
	getAsJsonObject (Lcom/google/gson/JsonObject;Ljava/lang/String;)Lcom/google/gson/JsonObject; t
	getAsJsonObject (Lcom/google/gson/JsonObject;Ljava/lang/String;Lcom/google/gson/JsonObject;)Lcom/google/gson/JsonObject; a
	getAsLong (Lcom/google/gson/JsonObject;Ljava/lang/String;)J m
	getAsLong (Lcom/google/gson/JsonObject;Ljava/lang/String;J)J a
	getAsObject (Lcom/google/gson/JsonObject;Ljava/lang/String;Lcom/google/gson/JsonDeserializationContext;Ljava/lang/Class;)Ljava/lang/Object; a
	getAsObject (Lcom/google/gson/JsonObject;Ljava/lang/String;Ljava/lang/Object;Lcom/google/gson/JsonDeserializationContext;Ljava/lang/Class;)Ljava/lang/Object; a
	getAsShort (Lcom/google/gson/JsonObject;Ljava/lang/String;)S s
	getAsShort (Lcom/google/gson/JsonObject;Ljava/lang/String;S)S a
	getAsString (Lcom/google/gson/JsonObject;Ljava/lang/String;)Ljava/lang/String; h
	getAsString (Lcom/google/gson/JsonObject;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; a
	getType (Lcom/google/gson/JsonElement;)Ljava/lang/String; d
	isArrayNode (Lcom/google/gson/JsonObject;Ljava/lang/String;)Z d
	isBooleanValue (Lcom/google/gson/JsonElement;)Z c
	isBooleanValue (Lcom/google/gson/JsonObject;Ljava/lang/String;)Z c
	isNumberValue (Lcom/google/gson/JsonElement;)Z b
	isNumberValue (Lcom/google/gson/JsonObject;Ljava/lang/String;)Z b
	isObjectNode (Lcom/google/gson/JsonObject;Ljava/lang/String;)Z e
	isStringValue (Lcom/google/gson/JsonElement;)Z a
	isStringValue (Lcom/google/gson/JsonObject;Ljava/lang/String;)Z a
	isValidNode (Lcom/google/gson/JsonObject;Ljava/lang/String;)Z g
	isValidPrimitive (Lcom/google/gson/JsonObject;Ljava/lang/String;)Z f
	parse (Ljava/io/Reader;)Lcom/google/gson/JsonObject; a
	parse (Ljava/io/Reader;Z)Lcom/google/gson/JsonObject; a
	parse (Ljava/lang/String;)Lcom/google/gson/JsonObject; a
	parse (Ljava/lang/String;Z)Lcom/google/gson/JsonObject; a
net/minecraft/util/HeapDumper adu
	hotspotMBean a
	dumpHeap (Ljava/lang/String;Z)V a
	getHotspotMBean ()Lcom/sun/management/HotSpotDiagnosticMXBean; a
net/minecraft/util/HttpUtil adv
	DOWNLOAD_EXECUTOR a
	LOGGER b
	buildQuery (Ljava/util/Map;)Ljava/lang/String; a
	downloadTo (Ljava/io/File;Ljava/lang/String;Ljava/util/Map;ILnet/minecraft/util/ProgressListener;Ljava/net/Proxy;)Ljava/util/concurrent/CompletableFuture; a
	getAvailablePort ()I a
	performPost (Ljava/net/URL;Ljava/lang/String;ZLjava/net/Proxy;)Ljava/lang/String; a
	performPost (Ljava/net/URL;Ljava/util/Map;ZLjava/net/Proxy;)Ljava/lang/String; a
net/minecraft/util/InsensitiveStringMap adw
	map a
	put (Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object; a
net/minecraft/util/IntRange adx
	maxInclusive b
	minInclusive a
	getMaxInclusive ()I b
	getMinInclusive ()I a
	of (II)Lnet/minecraft/util/IntRange; a
	randomValue (Ljava/util/Random;)I a
net/minecraft/util/LazyLoadedValue ady
	factory a
	value b
	get ()Ljava/lang/Object; a
net/minecraft/util/LimitedCapacityList adz
	clazz b
	head e
	items a
	locks c
	size d
	add (Ljava/lang/Object;)Ljava/lang/Object; a
	getItems ()[Ljava/lang/Object; c
	getMaxSize ()I b
	getSize ()I a
net/minecraft/util/LinearCongruentialGenerator aea
	next (JJ)J a
net/minecraft/util/LowerCaseEnumTypeAdapterFactory aeb
	toLowercase (Ljava/lang/Object;)Ljava/lang/String; a
net/minecraft/util/Mth aec
	ASIN_TAB f
	COS_TAB g
	FRAC_BIAS e
	MULTIPLY_DE_BRUIJN_BIT_POSITION d
	RANDOM c
	SIN b
	SQRT_OF_TWO a
	abs (F)F e
	abs (I)I a
	absFloor (D)I e
	absMax (DD)D a
	approach (FFF)F c
	approachDegrees (FFF)F d
	atan2 (DD)D d
	average ([J)D a
	binBiModalNormalDistribution (DDDDDDII)[D a
	binLogDistribution (DDII)[D a
	binNormalDistribution (DDDII)[D a
	binarySearch (IILjava/util/function/IntPredicate;)I a
	catmullRomSplinePos (Lnet/minecraft/world/phys/Vec3;Lnet/minecraft/world/phys/Vec3;Lnet/minecraft/world/phys/Vec3;Lnet/minecraft/world/phys/Vec3;D)Lnet/minecraft/world/phys/Vec3; a
	ceil (D)I f
	ceil (F)I f
	ceillog2 (I)I e
	clamp (BBB)B a
	clamp (DDD)D a
	clamp (FFF)F a
	clamp (III)I a
	clamp (JJJ)J a
	clampedLerp (DDD)D b
	color (FFF)I e
	color (III)I b
	colorMultiply (IFFF)I a
	colorMultiply (II)I d
	cos (F)F b
	createInsecureUUID ()Ljava/util/UUID; a
	createInsecureUUID (Ljava/util/Random;)Ljava/util/UUID; a
	cumulativeSum ([D)[D a
	degreesDifference (FF)F c
	degreesDifferenceAbs (FF)F d
	diffuseLight (FFF)F i
	equal (DD)Z b
	equal (FF)Z a
	fastFloor (D)I b
	fastInvCubeRoot (F)F j
	fastInvSqrt (D)D i
	fastInvSqrt (F)F i
	floor (D)I c
	floor (F)I d
	frac (D)D h
	frac (F)F h
	getDouble (Ljava/lang/String;D)D a
	getDouble (Ljava/lang/String;DD)D a
	getInt (Ljava/lang/String;I)I a
	getInt (Ljava/lang/String;II)I a
	getRandomForDistributionIntegral (Ljava/util/Random;[D)I a
	getSeed (III)J c
	getSeed (Lnet/minecraft/core/Vec3i;)J a
	hsvToRgb (FFF)I f
	intFloorDiv (II)I a
	inverseLerp (DDD)D c
	isPowerOfTwo (I)Z d
	lerp (DDD)D d
	lerp (FFF)F g
	lerp2 (DDDDDD)D a
	lerp3 (DDDDDDDDDDD)D a
	lfloor (D)J d
	log2 (I)I f
	murmurHash3Mixer (I)I g
	murmurHash3Mixer (J)J a
	nextDouble (Ljava/util/Random;DD)D a
	nextFloat (Ljava/util/Random;FF)F a
	nextInt (Ljava/util/Random;II)I a
	positiveModulo (DD)D c
	positiveModulo (FF)F b
	positiveModulo (II)I b
	rayIntersectsAABB (Lnet/minecraft/world/phys/Vec3;Lnet/minecraft/world/phys/Vec3;Lnet/minecraft/world/phys/AABB;)Z a
	rotLerp (FFF)F h
	rotWrap (D)F l
	rotateIfNecessary (FFF)F b
	rotlerp (FFF)F j
	roundUp (II)I c
	sign (D)I k
	sin (F)F a
	smallestEncompassingPowerOfTwo (I)I c
	smoothstep (D)D j
	sqrt (D)F a
	sqrt (F)F c
	square (D)D m
	square (F)F k
	triangleWave (FF)F e
	wrapDegrees (D)D g
	wrapDegrees (F)F g
	wrapDegrees (I)I b
net/minecraft/util/ProgressListener aed
	progressStage (Lnet/minecraft/network/chat/Component;)V c
	progressStagePercentage (I)V a
	progressStart (Lnet/minecraft/network/chat/Component;)V b
	progressStartNoAbort (Lnet/minecraft/network/chat/Component;)V a
	stop ()V a
net/minecraft/util/RewindableStream aee
	cache a
	source b
	getStream ()Ljava/util/stream/Stream; a
net/minecraft/util/SmoothDouble aef
	lastAmount c
	remainingValue b
	targetValue a
	getNewDeltaValue (DD)D a
	reset ()V a
net/minecraft/util/SortedArraySet aeg
	comparator a
	contents b
	size c
	addInternal (Ljava/lang/Object;I)V a
	addOrGet (Ljava/lang/Object;)Ljava/lang/Object; a
	castRawArray ([Ljava/lang/Object;)[Ljava/lang/Object; a
	create ()Lnet/minecraft/util/SortedArraySet; a
	create (I)Lnet/minecraft/util/SortedArraySet; a
	create (Ljava/util/Comparator;)Lnet/minecraft/util/SortedArraySet; a
	create (Ljava/util/Comparator;I)Lnet/minecraft/util/SortedArraySet; a
	findIndex (Ljava/lang/Object;)I c
	first ()Ljava/lang/Object; b
	get (Ljava/lang/Object;)Ljava/lang/Object; b
	getInsertionPosition (I)I b
	getInternal (I)Ljava/lang/Object; e
	grow (I)V c
	last ()Ljava/lang/Object; c
	removeInternal (I)V d
net/minecraft/util/SortedArraySet$ArrayIterator aeg$a
	index b
	last c
net/minecraft/util/StringRepresentable aeh
	fromEnum (Ljava/util/function/Supplier;Ljava/util/function/Function;)Lcom/mojang/serialization/Codec; a
	fromStringResolver (Ljava/util/function/ToIntFunction;Ljava/util/function/IntFunction;Ljava/util/function/Function;)Lcom/mojang/serialization/Codec; a
	getSerializedName ()Ljava/lang/String; a
	keys ([Lnet/minecraft/util/StringRepresentable;)Lcom/mojang/serialization/Keyable; a
net/minecraft/util/StringUtil aei
	STRIP_COLOR_PATTERN a
	formatTickDuration (I)Ljava/lang/String; a
	isNullOrEmpty (Ljava/lang/String;)Z b
	stripColor (Ljava/lang/String;)Ljava/lang/String; a
	truncateStringIfNecessary (Ljava/lang/String;IZ)Ljava/lang/String; a
net/minecraft/util/TimeUtil aej
	rangeOfSeconds (II)Lnet/minecraft/util/IntRange; a
net/minecraft/util/Tuple aek
	getA ()Ljava/lang/Object; a
	getB ()Ljava/lang/Object; b
	setA (Ljava/lang/Object;)V a
	setB (Ljava/lang/Object;)V b
net/minecraft/util/Unit ael
	$VALUES b
	INSTANCE a
net/minecraft/util/VisibleForDebug aem
net/minecraft/util/WeighedRandom aen
	getRandomItem (Ljava/util/Random;Ljava/util/List;)Lnet/minecraft/util/WeighedRandom$WeighedRandomItem; a
	getRandomItem (Ljava/util/Random;Ljava/util/List;I)Lnet/minecraft/util/WeighedRandom$WeighedRandomItem; a
	getTotalWeight (Ljava/util/List;)I a
	getWeightedItem (Ljava/util/List;I)Lnet/minecraft/util/WeighedRandom$WeighedRandomItem; a
net/minecraft/util/WeighedRandom$WeighedRandomItem aen$a
	weight a
net/minecraft/util/datafix/DataFixTypes aeo
	$VALUES m
	ADVANCEMENTS i
	CHUNK c
	HOTBAR d
	LEVEL a
	OPTIONS e
	PLAYER b
	POI_CHUNK j
	SAVED_DATA h
	STATS g
	STRUCTURE f
	WORLD_GEN_SETTINGS k
	type l
	getType ()Lcom/mojang/datafixers/DSL$TypeReference; a
net/minecraft/util/datafix/DataFixers aep
	DATA_FIXER c
	SAME a
	SAME_NAMESPACED b
	addFixers (Lcom/mojang/datafixers/DataFixerBuilder;)V a
	createFixerUpper ()Lcom/mojang/datafixers/DataFixer; b
	createRenamer (Ljava/lang/String;Ljava/lang/String;)Ljava/util/function/UnaryOperator; a
	createRenamer (Ljava/util/Map;)Ljava/util/function/UnaryOperator; a
	getDataFixer ()Lcom/mojang/datafixers/DataFixer; a
net/minecraft/util/datafix/PackedBitStorage aeq
	bits b
	data a
	mask c
	size d
	get (I)I a
	getBits ()I b
	getRaw ()[J a
	set (II)V a
net/minecraft/util/datafix/fixes/AbstractUUIDFix aer
	LOGGER a
	typeReference b
	createUUIDFromLongs (Lcom/mojang/serialization/Dynamic;Ljava/lang/String;Ljava/lang/String;)Ljava/util/Optional; d
	createUUIDFromML (Lcom/mojang/serialization/Dynamic;)Ljava/util/Optional; a
	createUUIDFromString (Lcom/mojang/serialization/Dynamic;Ljava/lang/String;)Ljava/util/Optional; a
	createUUIDTag (Lcom/mojang/serialization/Dynamic;JJ)Ljava/util/Optional; a
	replaceUUIDLeastMost (Lcom/mojang/serialization/Dynamic;Ljava/lang/String;Ljava/lang/String;)Ljava/util/Optional; c
	replaceUUIDMLTag (Lcom/mojang/serialization/Dynamic;Ljava/lang/String;Ljava/lang/String;)Ljava/util/Optional; b
	replaceUUIDString (Lcom/mojang/serialization/Dynamic;Ljava/lang/String;Ljava/lang/String;)Ljava/util/Optional; a
	updateNamedChoice (Lcom/mojang/datafixers/Typed;Ljava/lang/String;Ljava/util/function/Function;)Lcom/mojang/datafixers/Typed; a
net/minecraft/util/datafix/fixes/AddNewChoices aes
	name a
	type b
	cap (Ljava/lang/String;Lcom/mojang/datafixers/types/templates/TaggedChoice$TaggedChoiceType;Lcom/mojang/datafixers/types/templates/TaggedChoice$TaggedChoiceType;)Lcom/mojang/datafixers/TypeRewriteRule; a
net/minecraft/util/datafix/fixes/AdvancementsFix aet
	RENAMES a
net/minecraft/util/datafix/fixes/AdvancementsRenameFix aeu
	name a
	renamer b
net/minecraft/util/datafix/fixes/AttributesRename aev
	RENAMES a
	fixEntity (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; b
	fixItemStackTag (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; a
	fixName (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; a
net/minecraft/util/datafix/fixes/BedBlockEntityInjecter aew
	cap (Lcom/mojang/datafixers/types/Type;Lcom/mojang/datafixers/types/templates/List$ListType;)Lcom/mojang/datafixers/TypeRewriteRule; a
net/minecraft/util/datafix/fixes/BedItemColorFix aex
net/minecraft/util/datafix/fixes/BeehivePoiRenameFix aey
	rename (Ljava/lang/String;)Ljava/lang/String; a
net/minecraft/util/datafix/fixes/BiomeFix aez
	BIOMES a
net/minecraft/util/datafix/fixes/BitStorageAlignFix afa
	addPadding (II[J)[J a
	updateBitStorage (Lcom/mojang/serialization/Dynamic;Lcom/mojang/serialization/Dynamic;II)Lcom/mojang/serialization/Dynamic; a
	updateHeightmaps (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; a
	updateSections (Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; a
net/minecraft/util/datafix/fixes/BlockEntityBannerColorFix afb
	fix (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; a
	fixTag (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; a
net/minecraft/util/datafix/fixes/BlockEntityBlockStateFix afc
	fix (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; a
net/minecraft/util/datafix/fixes/BlockEntityCustomNameToComponentFix afd
net/minecraft/util/datafix/fixes/BlockEntityIdFix afe
	ID_MAP a
net/minecraft/util/datafix/fixes/BlockEntityJukeboxFix aff
	fix (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; a
net/minecraft/util/datafix/fixes/BlockEntityKeepPacked afg
	fix (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; a
	fixTag (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; a
net/minecraft/util/datafix/fixes/BlockEntityShulkerBoxColorFix afh
	fix (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; a
net/minecraft/util/datafix/fixes/BlockEntitySignTextStrictJsonFix afi
	GSON a
	fix (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; a
	updateLine (Lcom/mojang/serialization/Dynamic;Ljava/lang/String;)Lcom/mojang/serialization/Dynamic; a
net/minecraft/util/datafix/fixes/BlockEntityUUIDFix afj
	updateConduit (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; c
	updateSkull (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; b
net/minecraft/util/datafix/fixes/BlockNameFlatteningFix afk
net/minecraft/util/datafix/fixes/BlockRenameFix afl
	name a
	create (Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;Ljava/util/function/Function;)Lcom/mojang/datafixers/DataFix; a
	fixBlock (Ljava/lang/String;)Ljava/lang/String; a
net/minecraft/util/datafix/fixes/BlockRenameFixWithJigsaw afm
	name a
	create (Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;Ljava/util/function/Function;)Lcom/mojang/datafixers/DataFix; b
net/minecraft/util/datafix/fixes/BlockStateData afn
	BLOCK_DEFAULTS c
	ID_BY_OLD d
	ID_BY_OLD_NAME e
	LOGGER a
	MAP b
	finalizeMaps ()V a
	getTag (I)Lcom/mojang/serialization/Dynamic; b
	parse (Ljava/lang/String;)Lcom/mojang/serialization/Dynamic; b
	register (ILjava/lang/String;[Ljava/lang/String;)V a
	upgradeBlock (I)Ljava/lang/String; a
	upgradeBlock (Ljava/lang/String;)Ljava/lang/String; a
	upgradeBlockStateTag (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; a
net/minecraft/util/datafix/fixes/BlockStateStructureTemplateFix afo
net/minecraft/util/datafix/fixes/CatTypeFix afp
	fix (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; a
	fixTag (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; a
net/minecraft/util/datafix/fixes/ChunkBiomeFix afq
net/minecraft/util/datafix/fixes/ChunkLightRemoveFix afr
net/minecraft/util/datafix/fixes/ChunkPalettedStorageFix afs
	AIR u
	BANNER_BLOCK_MAP t
	BED_BLOCK_MAP s
	DOOR_MAP p
	DYE_COLOR_MAP r
	FIX c
	FLOWER_POT_MAP n
	LOGGER a
	NOTE_BLOCK_MAP q
	PUMPKIN d
	SKULL_MAP o
	SNOWY_GRASS f
	SNOWY_MYCELIUM g
	SNOWY_PODZOL e
	UPPER_LARGE_FERN k
	UPPER_LILAC i
	UPPER_PEONY m
	UPPER_ROSE_BUSH l
	UPPER_SUNFLOWER h
	UPPER_TALL_GRASS j
	VIRTUAL b
	addBanners (Ljava/util/Map;ILjava/lang/String;)V b
	addBeds (Ljava/util/Map;ILjava/lang/String;)V a
	fix (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; b
	getName (Lcom/mojang/serialization/Dynamic;)Ljava/lang/String; a
	getProperty (Lcom/mojang/serialization/Dynamic;Ljava/lang/String;)Ljava/lang/String; a
	getSideMask (ZZZZ)I a
	idFor (Lnet/minecraft/util/CrudeIncrementalIntIdentityHashBiMap;Lcom/mojang/serialization/Dynamic;)I a
	mapDoor (Ljava/util/Map;Ljava/lang/String;I)V a
	mapSkull (Ljava/util/Map;ILjava/lang/String;Ljava/lang/String;)V a
net/minecraft/util/datafix/fixes/ChunkPalettedStorageFix$DataLayer afs$a
	data a
	get (III)I a
	getPosition (I)I b
	isFirst (I)Z a
net/minecraft/util/datafix/fixes/ChunkPalettedStorageFix$Direction afs$b
	$VALUES i
	DOWN a
	EAST f
	NORTH c
	SOUTH d
	UP b
	WEST e
	axis g
	axisDirection h
	getAxis ()Lnet/minecraft/util/datafix/fixes/ChunkPalettedStorageFix$Direction$Axis; b
	getAxisDirection ()Lnet/minecraft/util/datafix/fixes/ChunkPalettedStorageFix$Direction$AxisDirection; a
net/minecraft/util/datafix/fixes/ChunkPalettedStorageFix$Direction$Axis afs$b$a
	$VALUES d
	X a
	Y b
	Z c
net/minecraft/util/datafix/fixes/ChunkPalettedStorageFix$Direction$AxisDirection afs$b$b
	$VALUES d
	NEGATIVE b
	POSITIVE a
	step c
	getStep ()I a
net/minecraft/util/datafix/fixes/ChunkPalettedStorageFix$Section afs$c
	buffer i
	hasData e
	listTag c
	palette b
	section d
	seen h
	toFix f
	update g
	y a
	addFix (II)V a
	getBlock (I)Lcom/mojang/serialization/Dynamic; a
	setBlock (ILcom/mojang/serialization/Dynamic;)V a
	upgrade (I)I b
	write ()Lcom/mojang/serialization/Dynamic; a
net/minecraft/util/datafix/fixes/ChunkPalettedStorageFix$UpgradeChunk afs$d
	blockEntities f
	level c
	sections b
	sides a
	x d
	z e
	getBlock (I)Lcom/mojang/serialization/Dynamic; a
	getBlockEntity (I)Lcom/mojang/serialization/Dynamic; b
	getSection (I)Lnet/minecraft/util/datafix/fixes/ChunkPalettedStorageFix$Section; d
	relative (ILnet/minecraft/util/datafix/fixes/ChunkPalettedStorageFix$Direction;)I a
	removeBlockEntity (I)Lcom/mojang/serialization/Dynamic; c
	setBlock (ILcom/mojang/serialization/Dynamic;)V a
	write ()Lcom/mojang/serialization/Dynamic; a
net/minecraft/util/datafix/fixes/ChunkStatusFix aft
net/minecraft/util/datafix/fixes/ChunkStatusFix2 afu
	RENAMES_AND_DOWNGRADES a
net/minecraft/util/datafix/fixes/ChunkStructuresTemplateRenameFix afv
	RENAMES a
	fixTag (Lcom/mojang/serialization/Dynamic;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; a
net/minecraft/util/datafix/fixes/ChunkToProtochunkFix afw
	packOffsetCoordinates (III)S a
net/minecraft/util/datafix/fixes/ColorlessShulkerEntityFix afx
	fix (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; a
net/minecraft/util/datafix/fixes/DyeItemRenameFix afy
	RENAMED_IDS a
net/minecraft/util/datafix/fixes/EntityArmorStandSilentFix afz
	fix (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; a
	fixTag (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; a
net/minecraft/util/datafix/fixes/EntityBlockStateFix aga
	MAP a
	getBlockId (Ljava/lang/String;)I a
	updateBlockToBlockState (Lcom/mojang/datafixers/Typed;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lcom/mojang/datafixers/Typed; a
	updateEntity (Lcom/mojang/datafixers/Typed;Ljava/lang/String;Ljava/util/function/Function;)Lcom/mojang/datafixers/Typed; a
	updateFallingBlock (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; a
net/minecraft/util/datafix/fixes/EntityCatSplitFix agb
	getNewNameAndTag (Ljava/lang/String;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/datafixers/util/Pair; a
net/minecraft/util/datafix/fixes/EntityCodSalmonFix agc
	RENAMED_EGG_IDS b
	RENAMED_IDS a
	rename (Ljava/lang/String;)Ljava/lang/String; a
net/minecraft/util/datafix/fixes/EntityCustomNameToComponentFix agd
	fixTagCustomName (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; a
net/minecraft/util/datafix/fixes/EntityElderGuardianSplitFix age
	getNewNameAndTag (Ljava/lang/String;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/datafixers/util/Pair; a
net/minecraft/util/datafix/fixes/EntityEquipmentToArmorAndHandFix agf
	cap (Lcom/mojang/datafixers/types/Type;)Lcom/mojang/datafixers/TypeRewriteRule; a
net/minecraft/util/datafix/fixes/EntityHealthFix agg
	ENTITIES a
	fixTag (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; a
net/minecraft/util/datafix/fixes/EntityHorseSaddleFix agh
	fix (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; a
net/minecraft/util/datafix/fixes/EntityHorseSplitFix agi
	fix (Ljava/lang/String;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/util/Pair; a
net/minecraft/util/datafix/fixes/EntityIdFix agj
	ID_MAP a
net/minecraft/util/datafix/fixes/EntityItemFrameDirectionFix agk
	direction2dTo3d (B)B a
	fix (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; a
	fixTag (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; a
net/minecraft/util/datafix/fixes/EntityMinecartIdentifiersFix agl
	MINECART_BY_ID a
net/minecraft/util/datafix/fixes/EntityPaintingItemFrameDirectionFix agm
	DIRECTIONS a
	doFix (Lcom/mojang/serialization/Dynamic;ZZ)Lcom/mojang/serialization/Dynamic; a
net/minecraft/util/datafix/fixes/EntityPaintingMotiveFix agn
	MAP a
	fix (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; a
	fixTag (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; a
net/minecraft/util/datafix/fixes/EntityProjectileOwnerFix ago
	createUUIDArray (JJ)[I a
	setUUID (Lcom/mojang/serialization/Dynamic;JJ)Lcom/mojang/serialization/Dynamic; a
	updateEntity (Lcom/mojang/datafixers/Typed;Ljava/lang/String;Ljava/util/function/Function;)Lcom/mojang/datafixers/Typed; a
	updateItemPotion (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; c
	updateOwnerArrow (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; a
	updateOwnerLlamaSpit (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; b
	updateOwnerThrowable (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; d
	updateProjectiles (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; a
net/minecraft/util/datafix/fixes/EntityPufferfishRenameFix agp
	RENAMED_IDS a
	rename (Ljava/lang/String;)Ljava/lang/String; a
net/minecraft/util/datafix/fixes/EntityRavagerRenameFix agq
	RENAMED_IDS a
	rename (Ljava/lang/String;)Ljava/lang/String; a
net/minecraft/util/datafix/fixes/EntityRedundantChanceTagsFix agr
	FLOAT_LIST_CODEC a
	isZeroList (Lcom/mojang/serialization/OptionalDynamic;I)Z a
net/minecraft/util/datafix/fixes/EntityRenameFix ags
	name a
	fix (Ljava/lang/String;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/util/Pair; a
	getEntity (Ljava/lang/Object;Lcom/mojang/serialization/DynamicOps;Lcom/mojang/datafixers/types/Type;)Lcom/mojang/datafixers/Typed; a
net/minecraft/util/datafix/fixes/EntityRidingToPassengersFix agt
	cap (Lcom/mojang/datafixers/schemas/Schema;Lcom/mojang/datafixers/schemas/Schema;Lcom/mojang/datafixers/types/Type;Lcom/mojang/datafixers/types/Type;Lcom/mojang/datafixers/types/Type;)Lcom/mojang/datafixers/TypeRewriteRule; a
net/minecraft/util/datafix/fixes/EntityShulkerColorFix agu
	fix (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; a
	fixTag (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; a
net/minecraft/util/datafix/fixes/EntityShulkerRotationFix agv
	fix (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; a
	fixTag (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; a
net/minecraft/util/datafix/fixes/EntitySkeletonSplitFix agw
	getNewNameAndTag (Ljava/lang/String;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/datafixers/util/Pair; a
net/minecraft/util/datafix/fixes/EntityStringUuidFix agx
net/minecraft/util/datafix/fixes/EntityTheRenameningFix agy
	RENAMED_BLOCKS b
	RENAMED_IDS a
	RENAMED_ITEMS c
	rename (Ljava/lang/String;)Ljava/lang/String; a
net/minecraft/util/datafix/fixes/EntityTippedArrowFix agz
	rename (Ljava/lang/String;)Ljava/lang/String; a
net/minecraft/util/datafix/fixes/EntityUUIDFix aha
	ABSTRACT_HORSES c
	ANIMALS e
	LIVING_ENTITIES g
	MOBS f
	PROJECTILES h
	TAMEABLE_ANIMALS d
	updateAnimal (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; m
	updateAnimalOwner (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; l
	updateAreaEffectCloud (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; g
	updateEntityUUID (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; c
	updateEvokerFangs (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; e
	updateFox (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; j
	updateHurtBy (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; k
	updateItem (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; i
	updateLivingEntity (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; b
	updateMob (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; n
	updatePiglin (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; d
	updateProjectile (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; o
	updateShulkerBullet (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; h
	updateZombieVillager (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; f
net/minecraft/util/datafix/fixes/EntityWolfColorFix ahb
	fix (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; a
	fixTag (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; a
net/minecraft/util/datafix/fixes/EntityZombieSplitFix ahc
	getNewNameAndTag (Ljava/lang/String;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/datafixers/util/Pair; a
net/minecraft/util/datafix/fixes/EntityZombieVillagerTypeFix ahd
	RANDOM a
	fix (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; a
	fixTag (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; a
	getVillagerProfession (I)I a
net/minecraft/util/datafix/fixes/EntityZombifiedPiglinRenameFix ahe
	RENAMED_IDS a
	rename (Ljava/lang/String;)Ljava/lang/String; a
net/minecraft/util/datafix/fixes/ForcePoiRebuild ahf
	cap (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; a
net/minecraft/util/datafix/fixes/FurnaceRecipeFix ahg
	cap (Lcom/mojang/datafixers/types/Type;)Lcom/mojang/datafixers/TypeRewriteRule; a
	updateFurnaceContents (Lcom/mojang/datafixers/types/Type;Lcom/mojang/datafixers/types/Type;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; a
net/minecraft/util/datafix/fixes/GossipUUIDFix ahh
	fix (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; a
net/minecraft/util/datafix/fixes/HeightmapRenamingFix ahi
	fix (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; a
net/minecraft/util/datafix/fixes/IglooMetadataRemovalFix ahj
	fixTag (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; a
	isIglooPiece (Lcom/mojang/serialization/Dynamic;)Z c
	removeIglooPieces (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; b
net/minecraft/util/datafix/fixes/ItemBannerColorFix ahk
net/minecraft/util/datafix/fixes/ItemCustomNameToComponentFix ahl
	fixTag (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; a
net/minecraft/util/datafix/fixes/ItemIdFix ahm
	ITEM_NAMES a
	getItem (I)Ljava/lang/String; a
net/minecraft/util/datafix/fixes/ItemLoreFix ahn
	fixLoreEntry (Ljava/lang/String;)Ljava/lang/String; a
	fixLoreList (Ljava/util/stream/Stream;)Ljava/util/stream/Stream; a
net/minecraft/util/datafix/fixes/ItemPotionFix aho
	POTIONS a
net/minecraft/util/datafix/fixes/ItemRenameFix ahp
	name a
	create (Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;Ljava/util/function/Function;)Lcom/mojang/datafixers/DataFix; a
	fixItem (Ljava/lang/String;)Ljava/lang/String; a
net/minecraft/util/datafix/fixes/ItemShulkerBoxColorFix ahq
	NAMES_BY_COLOR a
net/minecraft/util/datafix/fixes/ItemSpawnEggFix ahr
	ID_TO_ENTITY a
net/minecraft/util/datafix/fixes/ItemStackEnchantmentNamesFix ahs
	MAP a
	fixTag (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; a
net/minecraft/util/datafix/fixes/ItemStackMapIdFix aht
net/minecraft/util/datafix/fixes/ItemStackSpawnEggFix ahu
	MAP a
net/minecraft/util/datafix/fixes/ItemStackTheFlatteningFix ahv
	DAMAGE_IDS c
	IDS b
	MAP a
	updateItem (Ljava/lang/String;I)Ljava/lang/String; a
net/minecraft/util/datafix/fixes/ItemStackUUIDFix ahw
	updateAttributeModifiers (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; b
	updateSkullOwner (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; c
net/minecraft/util/datafix/fixes/ItemWaterPotionFix ahx
net/minecraft/util/datafix/fixes/ItemWrittenBookPagesStrictJsonFix ahy
	fixTag (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; a
net/minecraft/util/datafix/fixes/JigsawPropertiesFix ahz
	fix (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; a
	fixTag (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; a
net/minecraft/util/datafix/fixes/JigsawRotationFix aia
	renames a
	fix (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; a
net/minecraft/util/datafix/fixes/LeavesFix aib
	DIRECTIONS a
	LEAVES b
	LOGS c
	getIndex (III)I a
	getSideMask (ZZZZ)I a
	getX (I)I a
	getY (I)I b
	getZ (I)I c
net/minecraft/util/datafix/fixes/LeavesFix$LeavesSection aib$a
	leaveIds e
	logIds f
	stateToIdMap g
	getDistance (I)I d
	isLeaf (I)Z b
	isLog (I)Z a
	makeLeafTag (Lcom/mojang/serialization/Dynamic;Ljava/lang/String;ZI)Lcom/mojang/serialization/Dynamic; a
	setDistance (III)V a
	skippable ()Z a
net/minecraft/util/datafix/fixes/LeavesFix$Section aib$b
	blockStateType e
	index c
	palette b
	paletteFinder a
	storage d
	getBlock (I)I c
	getIndex ()I c
	getStateId (Ljava/lang/String;ZI)I a
	isSkippable ()Z b
	readStorage (Lcom/mojang/serialization/Dynamic;)V a
	skippable ()Z a
	write (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; a
net/minecraft/util/datafix/fixes/LevelDataGeneratorOptionsFix aic
	MAP a
	convert (Ljava/lang/String;Lcom/mojang/serialization/DynamicOps;)Lcom/mojang/serialization/Dynamic; a
	getLayerInfoFromString (Ljava/lang/String;)Lcom/mojang/datafixers/util/Pair; a
	getLayersInfoFromString (Ljava/lang/String;)Ljava/util/List; b
net/minecraft/util/datafix/fixes/LevelFlatGeneratorInfoFix aid
	AMOUNT_SPLITTER d
	BLOCK_SPLITTER e
	LAYER_SPLITTER b
	OLD_AMOUNT_SPLITTER c
	SPLITTER a
	fix (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; a
	fixString (Ljava/lang/String;)Ljava/lang/String; a
net/minecraft/util/datafix/fixes/LevelUUIDFix aie
	updateCustomBossEvents (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; d
	updateDragonFight (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; c
	updateWanderingTrader (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; b
net/minecraft/util/datafix/fixes/MapIdFix aif
net/minecraft/util/datafix/fixes/MemoryExpiryDataFix aig
	fix (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; a
	fixTag (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; a
	updateBrain (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; b
	updateMemories (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; c
	updateMemoryEntry (Lcom/mojang/datafixers/util/Pair;)Lcom/mojang/datafixers/util/Pair; a
	wrapMemoryValue (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; d
net/minecraft/util/datafix/fixes/MissingDimensionFix aih
	fields (Ljava/lang/String;Lcom/mojang/datafixers/types/Type;)Lcom/mojang/datafixers/types/Type; a
	optionalFields (Ljava/lang/String;Lcom/mojang/datafixers/types/Type;)Lcom/mojang/datafixers/types/Type; b
	optionalFields (Ljava/lang/String;Lcom/mojang/datafixers/types/Type;Ljava/lang/String;Lcom/mojang/datafixers/types/Type;)Lcom/mojang/datafixers/types/Type; a
	recreateSettings (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; a
net/minecraft/util/datafix/fixes/MobSpawnerEntityIdentifiersFix aii
	fix (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; a
net/minecraft/util/datafix/fixes/NamedEntityFix aij
	entityName b
	name a
	type c
	fix (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; a
net/minecraft/util/datafix/fixes/NewVillageFix aik
	cap (Lcom/mojang/datafixers/types/templates/CompoundList$CompoundListType;)Lcom/mojang/datafixers/TypeRewriteRule; a
net/minecraft/util/datafix/fixes/ObjectiveDisplayNameFix ail
net/minecraft/util/datafix/fixes/ObjectiveRenderTypeFix aim
	getRenderType (Ljava/lang/String;)Lnet/minecraft/world/scores/criteria/ObjectiveCriteria$RenderType; a
net/minecraft/util/datafix/fixes/OminousBannerBlockEntityRenameFix ain
	fix (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; a
	fixTag (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; a
net/minecraft/util/datafix/fixes/OminousBannerRenameFix aio
	fixTag (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; a
net/minecraft/util/datafix/fixes/OptionsAddTextBackgroundFix aip
	calculateBackground (Ljava/lang/String;)D a
net/minecraft/util/datafix/fixes/OptionsForceVBOFix aiq
net/minecraft/util/datafix/fixes/OptionsKeyLwjgl3Fix air
	MAP a
net/minecraft/util/datafix/fixes/OptionsKeyTranslationFix ais
net/minecraft/util/datafix/fixes/OptionsLowerCaseLanguageFix ait
net/minecraft/util/datafix/fixes/OptionsRenameFieldFix aiu
	fieldFrom b
	fieldTo c
	fixName a
net/minecraft/util/datafix/fixes/PlayerUUIDFix aiv
net/minecraft/util/datafix/fixes/PoiTypeRename aiw
	cap (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; a
	rename (Ljava/lang/String;)Ljava/lang/String; a
	renameRecords (Lcom/mojang/serialization/Dynamic;)Ljava/util/Optional; b
net/minecraft/util/datafix/fixes/RecipesFix aix
	RECIPES a
net/minecraft/util/datafix/fixes/RecipesRenameFix aiy
	name a
	renamer b
net/minecraft/util/datafix/fixes/RecipesRenameningFix aiz
	RECIPES a
net/minecraft/util/datafix/fixes/RedstoneWireConnectionsFix aja
	isConnected (Ljava/lang/String;)Z a
	updateRedstoneConnections (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; a
net/minecraft/util/datafix/fixes/References ajb
	ADVANCEMENTS i
	BIOME x
	BLOCK_ENTITY k
	BLOCK_NAME q
	BLOCK_STATE m
	CHUNK c
	ENTITY p
	ENTITY_NAME n
	ENTITY_TREE o
	HOTBAR d
	ITEM_NAME r
	ITEM_STACK l
	LEVEL a
	OBJECTIVE u
	OPTIONS e
	PLAYER b
	POI_CHUNK j
	RECIPE w
	SAVED_DATA h
	STATS g
	STRUCTURE f
	STRUCTURE_FEATURE t
	TEAM v
	UNTAGGED_SPAWNER s
	WORLD_GEN_SETTINGS y
net/minecraft/util/datafix/fixes/RenameBiomesFix ajc
	biomes b
	name a
net/minecraft/util/datafix/fixes/RenamedCoralFansFix ajd
	RENAMED_IDS a
net/minecraft/util/datafix/fixes/RenamedCoralFix aje
	RENAMED_IDS a
net/minecraft/util/datafix/fixes/ReorganizePoi ajf
	cap (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; a
net/minecraft/util/datafix/fixes/SavedDataUUIDFix ajg
net/minecraft/util/datafix/fixes/SavedDataVillageCropFix ajh
	fixTag (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; a
	updateChildren (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; b
	updateChildren (Ljava/util/stream/Stream;)Ljava/util/stream/Stream; a
	updateCrop (Lcom/mojang/serialization/Dynamic;Ljava/lang/String;)Lcom/mojang/serialization/Dynamic; a
	updateDoubleField (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; d
	updateSingleField (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; c
net/minecraft/util/datafix/fixes/SimpleEntityRenameFix aji
	fix (Ljava/lang/String;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/util/Pair; a
	getNewNameAndTag (Ljava/lang/String;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/datafixers/util/Pair; a
net/minecraft/util/datafix/fixes/SimplestEntityRenameFix ajj
	name a
	rename (Ljava/lang/String;)Ljava/lang/String; a
net/minecraft/util/datafix/fixes/StatsCounterFix ajk
	CUSTOM_MAP b
	ENTITIES e
	ENTITY_KEYS d
	ITEM_KEYS c
	SKIP a
	upgradeBlock (Ljava/lang/String;)Ljava/lang/String; b
	upgradeItem (Ljava/lang/String;)Ljava/lang/String; a
net/minecraft/util/datafix/fixes/StriderGravityFix ajl
	fix (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; a
	fixTag (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; a
net/minecraft/util/datafix/fixes/StructureReferenceCountFix ajm
	setCountToAtLeastOne (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; a
net/minecraft/util/datafix/fixes/SwimStatsRenameFix ajn
net/minecraft/util/datafix/fixes/TeamDisplayNameFix ajo
net/minecraft/util/datafix/fixes/TrappedChestBlockEntityFix ajp
	LOGGER a
net/minecraft/util/datafix/fixes/TrappedChestBlockEntityFix$TrappedChestSection ajp$a
	chestIds e
	isTrappedChest (I)Z a
	skippable ()Z a
net/minecraft/util/datafix/fixes/VillagerDataFix ajq
	fix (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; a
	upgradeData (II)Ljava/lang/String; a
net/minecraft/util/datafix/fixes/VillagerFollowRangeFix ajr
	fix (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; a
	fixValue (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; a
net/minecraft/util/datafix/fixes/VillagerRebuildLevelAndXpFix ajs
	LEVEL_XP_THRESHOLDS a
	addLevel (Lcom/mojang/datafixers/Typed;I)Lcom/mojang/datafixers/Typed; a
	addXpFromLevel (Lcom/mojang/datafixers/Typed;I)Lcom/mojang/datafixers/Typed; b
	getMinXpPerLevel (I)I a
net/minecraft/util/datafix/fixes/VillagerTradeFix ajt
	fix (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; a
	updateItemStack (Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; a
net/minecraft/util/datafix/fixes/WallPropertyFix aju
	WALL_BLOCKS a
	fixWallProperty (Lcom/mojang/serialization/Dynamic;Ljava/lang/String;)Lcom/mojang/serialization/Dynamic; a
	mapProperty (Ljava/lang/String;)Ljava/lang/String; a
	upgradeBlockStateTag (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; a
net/minecraft/util/datafix/fixes/WorldGenSettingsFix ajv
	DEFAULTS a
	defaultOverworld (Lcom/mojang/serialization/Dynamic;J)Lcom/mojang/serialization/Dynamic; a
	fix (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; a
	fixFlatStructures (Lcom/mojang/serialization/DynamicOps;Lcom/mojang/serialization/OptionalDynamic;)Ljava/util/Map; a
	getInt (Ljava/lang/String;I)I a
	getInt (Ljava/lang/String;II)I a
	noise (JLcom/mojang/serialization/DynamicLike;Lcom/mojang/serialization/Dynamic;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; a
	setSpacing (Ljava/util/Map;Ljava/lang/String;Ljava/lang/String;I)V a
	vanillaBiomeSource (Lcom/mojang/serialization/Dynamic;JZZ)Lcom/mojang/serialization/Dynamic; a
	vanillaLevels (Lcom/mojang/serialization/Dynamic;JLcom/mojang/serialization/Dynamic;Z)Ljava/lang/Object; a
net/minecraft/util/datafix/fixes/WorldGenSettingsFix$StructureFeatureConfiguration ajv$a
	CODEC a
	salt d
	separation c
	spacing b
	serialize (Lcom/mojang/serialization/DynamicOps;)Lcom/mojang/serialization/Dynamic; a
net/minecraft/util/datafix/fixes/WriteAndReadFix ajw
	name a
	type b
net/minecraft/util/datafix/fixes/ZombieVillagerRebuildXpFix ajx
	fix (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; a
net/minecraft/util/datafix/schemas/NamespacedSchema aka
	NAMESPACED_STRING b
	NAMESPACED_STRING_CODEC a
	ensureNamespaced (Ljava/lang/String;)Ljava/lang/String; a
	namespacedString ()Lcom/mojang/datafixers/types/Type; a
net/minecraft/util/datafix/schemas/V100 akb
	equipment (Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate; a
	registerMob (Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/lang/String;)V a
net/minecraft/util/datafix/schemas/V102 akc
net/minecraft/util/datafix/schemas/V1022 akd
net/minecraft/util/datafix/schemas/V106 ake
net/minecraft/util/datafix/schemas/V107 akf
net/minecraft/util/datafix/schemas/V1125 akg
net/minecraft/util/datafix/schemas/V135 akh
net/minecraft/util/datafix/schemas/V143 aki
net/minecraft/util/datafix/schemas/V1451 akj
net/minecraft/util/datafix/schemas/V1451_1 akk
net/minecraft/util/datafix/schemas/V1451_2 akl
net/minecraft/util/datafix/schemas/V1451_3 akm
net/minecraft/util/datafix/schemas/V1451_4 akn
net/minecraft/util/datafix/schemas/V1451_5 ako
net/minecraft/util/datafix/schemas/V1451_6 akp
net/minecraft/util/datafix/schemas/V1451_7 akq
net/minecraft/util/datafix/schemas/V1460 akr
	registerInventory (Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/lang/String;)V b
	registerMob (Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/lang/String;)V a
net/minecraft/util/datafix/schemas/V1466 aks
net/minecraft/util/datafix/schemas/V1470 akt
	registerMob (Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/lang/String;)V a
net/minecraft/util/datafix/schemas/V1481 aku
net/minecraft/util/datafix/schemas/V1483 akv
net/minecraft/util/datafix/schemas/V1486 akw
net/minecraft/util/datafix/schemas/V1510 akx
net/minecraft/util/datafix/schemas/V1800 aky
	registerMob (Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/lang/String;)V a
net/minecraft/util/datafix/schemas/V1801 akz
	registerMob (Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/lang/String;)V a
net/minecraft/util/datafix/schemas/V1904 ala
	registerMob (Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/lang/String;)V a
net/minecraft/util/datafix/schemas/V1906 alb
	registerInventory (Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/lang/String;)V a
net/minecraft/util/datafix/schemas/V1909 alc
net/minecraft/util/datafix/schemas/V1920 ald
	registerInventory (Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/lang/String;)V a
net/minecraft/util/datafix/schemas/V1928 ale
	equipment (Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate; a
	registerMob (Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/lang/String;)V a
net/minecraft/util/datafix/schemas/V1929 alf
net/minecraft/util/datafix/schemas/V1931 alg
	registerMob (Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/lang/String;)V a
net/minecraft/util/datafix/schemas/V2100 alh
	registerMob (Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/lang/String;)V a
net/minecraft/util/datafix/schemas/V2501 ali
	registerFurnace (Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/lang/String;)V a
net/minecraft/util/datafix/schemas/V2502 alj
	registerMob (Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/lang/String;)V a
net/minecraft/util/datafix/schemas/V2505 alk
	registerMob (Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/lang/String;)V a
net/minecraft/util/datafix/schemas/V2509 all
	registerMob (Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/lang/String;)V a
net/minecraft/util/datafix/schemas/V2519 alm
	registerMob (Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/lang/String;)V a
net/minecraft/util/datafix/schemas/V2522 aln
	registerMob (Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/lang/String;)V a
net/minecraft/util/datafix/schemas/V2551 alo
net/minecraft/util/datafix/schemas/V501 alp
	registerMob (Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/lang/String;)V a
net/minecraft/util/datafix/schemas/V700 alq
	registerMob (Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/lang/String;)V a
net/minecraft/util/datafix/schemas/V701 alr
	registerMob (Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/lang/String;)V a
net/minecraft/util/datafix/schemas/V702 als
	registerMob (Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/lang/String;)V a
net/minecraft/util/datafix/schemas/V703 alt
net/minecraft/util/datafix/schemas/V704 alu
	ADD_NAMES b
	ITEM_TO_BLOCKENTITY a
	registerInventory (Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/lang/String;)V a
net/minecraft/util/datafix/schemas/V705 alv
	ADD_NAMES b
	registerMob (Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/lang/String;)V a
	registerThrowableProjectile (Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/lang/String;)V b
net/minecraft/util/datafix/schemas/V808 alw
	registerInventory (Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/lang/String;)V a
net/minecraft/util/datafix/schemas/V99 alx
	ADD_NAMES a
	ITEM_TO_BLOCKENTITY c
	LOGGER b
	addNames (Lcom/mojang/serialization/Dynamic;Ljava/util/Map;Ljava/lang/String;)Ljava/lang/Object; a
	equipment (Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate; a
	registerInventory (Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/lang/String;)V d
	registerMinecart (Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/lang/String;)V c
	registerMob (Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/lang/String;)V a
	registerThrowableProjectile (Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/lang/String;)V b
net/minecraft/util/monitoring/jmx/MinecraftServerStatistics alz
	LOGGER a
	attributeDescriptionByName d
	mBeanInfo c
	server b
	getAverageTickTime ()F a
	getTickTimes ()[J b
	registerJmxMonitoring (Lnet/minecraft/server/MinecraftServer;)V a
net/minecraft/util/monitoring/jmx/MinecraftServerStatistics$AttributeDescription alz$a
	description c
	getter b
	name a
	type d
	asMBeanAttributeInfo ()Ljavax/management/MBeanAttributeInfo; a
net/minecraft/util/profiling/ActiveProfiler amb
	LOGGER b
	WARNING_TIME_NANOS a
	currentEntry l
	entries e
	getRealTime g
	getTickTime f
	path j
	paths c
	startTimeNano h
	startTimeTicks i
	startTimes d
	started k
	warn m
	endTick ()V b
	getCurrentEntry ()Lnet/minecraft/util/profiling/ActiveProfiler$PathEntry; e
	getResults ()Lnet/minecraft/util/profiling/ProfileResults; d
	incrementCounter (Ljava/lang/String;)V c
	incrementCounter (Ljava/util/function/Supplier;)V c
	pop ()V c
	popPush (Ljava/lang/String;)V b
	popPush (Ljava/util/function/Supplier;)V b
	push (Ljava/lang/String;)V a
	push (Ljava/util/function/Supplier;)V a
	startTick ()V a
net/minecraft/util/profiling/ActiveProfiler$PathEntry amb$a
	count b
	counters c
	duration a
	getCount ()J b
	getCounters ()Lit/unimi/dsi/fastutil/objects/Object2LongMap; c
	getDuration ()J a
net/minecraft/util/profiling/ContinuousProfiler amc
	profiler c
	realTime a
	tickCount b
	disable ()V b
	enable ()V c
	getFiller ()Lnet/minecraft/util/profiling/ProfilerFiller; d
	getResults ()Lnet/minecraft/util/profiling/ProfileResults; e
	isEnabled ()Z a
net/minecraft/util/profiling/EmptyProfileResults amd
	EMPTY a
	getEndTimeNano ()J c
	getEndTimeTicks ()I d
	getProfilerResults ()Ljava/lang/String; e
	getStartTimeNano ()J a
	getStartTimeTicks ()I b
	getTimes (Ljava/lang/String;)Ljava/util/List; a
	saveResults (Ljava/io/File;)Z a
net/minecraft/util/profiling/FilledProfileResults ame
	COUNTER_ENTRY_COMPARATOR d
	EMPTY b
	LOGGER a
	SPLITTER c
	endTimeNano h
	endTimeTicks i
	entries e
	startTimeNano f
	startTimeTicks g
	tickDuration j
	appendCounterResults (ILjava/lang/String;Lnet/minecraft/util/profiling/FilledProfileResults$CounterCollector;ILjava/lang/StringBuilder;)V a
	appendCounters (Ljava/util/Map;Ljava/lang/StringBuilder;I)V a
	appendProfilerResults (ILjava/lang/String;Ljava/lang/StringBuilder;)V a
	getComment ()Ljava/lang/String; i
	getCounterValues ()Ljava/util/Map; h
	getEndTimeNano ()J c
	getEndTimeTicks ()I d
	getEntry (Ljava/lang/String;)Lnet/minecraft/util/profiling/ProfilerPathEntry; c
	getProfilerResults ()Ljava/lang/String; e
	getProfilerResults (JI)Ljava/lang/String; a
	getStartTimeNano ()J a
	getStartTimeTicks ()I b
	getTickDuration ()I f
	getTimes (Ljava/lang/String;)Ljava/util/List; a
	indentLine (Ljava/lang/StringBuilder;I)Ljava/lang/StringBuilder; a
	isDirectChild (Ljava/lang/String;Ljava/lang/String;)Z a
	saveResults (Ljava/io/File;)Z a
net/minecraft/util/profiling/FilledProfileResults$CounterCollector ame$a
	children c
	selfValue a
	totalValue b
	addValue (Ljava/util/Iterator;J)V a
net/minecraft/util/profiling/InactiveProfiler amf
	INSTANCE a
	endTick ()V b
	getResults ()Lnet/minecraft/util/profiling/ProfileResults; d
	incrementCounter (Ljava/lang/String;)V c
	incrementCounter (Ljava/util/function/Supplier;)V c
	pop ()V c
	popPush (Ljava/lang/String;)V b
	popPush (Ljava/util/function/Supplier;)V b
	push (Ljava/lang/String;)V a
	push (Ljava/util/function/Supplier;)V a
	startTick ()V a
net/minecraft/util/profiling/ProfileCollector amg
	getResults ()Lnet/minecraft/util/profiling/ProfileResults; d
net/minecraft/util/profiling/ProfileResults amh
	demanglePath (Ljava/lang/String;)Ljava/lang/String; b
	getEndTimeNano ()J c
	getEndTimeTicks ()I d
	getNanoDuration ()J g
	getProfilerResults ()Ljava/lang/String; e
	getStartTimeNano ()J a
	getStartTimeTicks ()I b
	getTickDuration ()I f
	getTimes (Ljava/lang/String;)Ljava/util/List; a
	saveResults (Ljava/io/File;)Z a
net/minecraft/util/profiling/ProfilerFiller ami
	endTick ()V b
	incrementCounter (Ljava/lang/String;)V c
	incrementCounter (Ljava/util/function/Supplier;)V c
	pop ()V c
	popPush (Ljava/lang/String;)V b
	popPush (Ljava/util/function/Supplier;)V b
	push (Ljava/lang/String;)V a
	push (Ljava/util/function/Supplier;)V a
	startTick ()V a
	tee (Lnet/minecraft/util/profiling/ProfilerFiller;Lnet/minecraft/util/profiling/ProfilerFiller;)Lnet/minecraft/util/profiling/ProfilerFiller; a
net/minecraft/util/profiling/ProfilerPathEntry amj
	getCount ()J b
	getCounters ()Lit/unimi/dsi/fastutil/objects/Object2LongMap; c
	getDuration ()J a
net/minecraft/util/profiling/ResultField amk
	count c
	globalPercentage b
	name d
	percentage a
	compareTo (Lnet/minecraft/util/profiling/ResultField;)I a
	getColor ()I a
net/minecraft/util/profiling/SingleTickProfiler aml
	LOGGER a
	location e
	profiler f
	realTime b
	saveThreshold c
	tick d
	createTickProfiler (Ljava/lang/String;)Lnet/minecraft/util/profiling/SingleTickProfiler; a
	decorateFiller (Lnet/minecraft/util/profiling/ProfilerFiller;Lnet/minecraft/util/profiling/SingleTickProfiler;)Lnet/minecraft/util/profiling/ProfilerFiller; a
	endTick ()V b
	startTick ()Lnet/minecraft/util/profiling/ProfilerFiller; a
net/minecraft/util/thread/BlockableEventLoop amn
	LOGGER c
	blockingCount e
	name b
	pendingRunnables d
	doRunTask (Ljava/lang/Runnable;)V c
	dropAllTasks ()V bi
	executeBlocking (Ljava/lang/Runnable;)V g
	getPendingTasksCount ()I bg
	getRunningThread ()Ljava/lang/Thread; au
	isSameThread ()Z bf
	managedBlock (Ljava/util/function/BooleanSupplier;)V c
	name ()Ljava/lang/String; bh
	pollTask ()Z x
	runAllTasks ()V bj
	scheduleExecutables ()Z at
	shouldRun (Ljava/lang/Runnable;)Z d
	submit (Ljava/lang/Runnable;)Ljava/util/concurrent/CompletableFuture; f
	submit (Ljava/util/function/Supplier;)Ljava/util/concurrent/CompletableFuture; a
	submitAsync (Ljava/lang/Runnable;)Ljava/util/concurrent/CompletableFuture; a
	tell (Ljava/lang/Object;)V a
	tell (Ljava/lang/Runnable;)V h
	waitForTasks ()V bk
	wrapRunnable (Ljava/lang/Runnable;)Ljava/lang/Runnable; e
net/minecraft/util/thread/NamedThreadFactory amo
	LOGGER a
	group b
	namePrefix d
	threadNumber c
net/minecraft/util/thread/ProcessorHandle amp
	ask (Ljava/util/function/Function;)Ljava/util/concurrent/CompletableFuture; b
	askEither (Ljava/util/function/Function;)Ljava/util/concurrent/CompletableFuture; c
	name ()Ljava/lang/String; bh
	of (Ljava/lang/String;Ljava/util/function/Consumer;)Lnet/minecraft/util/thread/ProcessorHandle; a
	tell (Ljava/lang/Object;)V a
net/minecraft/util/thread/ProcessorMailbox amq
	LOGGER b
	dispatcher d
	name e
	queue a
	status c
	canBeScheduled ()Z c
	create (Ljava/util/concurrent/Executor;Ljava/lang/String;)Lnet/minecraft/util/thread/ProcessorMailbox; a
	name ()Ljava/lang/String; bh
	pollTask ()Z e
	pollUntil (Lit/unimi/dsi/fastutil/ints/Int2BooleanFunction;)I a
	registerForExecution ()V f
	setAsIdle ()V b
	setAsScheduled ()Z a
	shouldProcess ()Z d
	tell (Ljava/lang/Object;)V a
net/minecraft/util/thread/ReentrantBlockableEventLoop amr
	reentrantCount b
	doRunTask (Ljava/lang/Runnable;)V c
	runningTask ()Z bl
	scheduleExecutables ()Z at
net/minecraft/util/thread/StrictQueue ams
	isEmpty ()Z b
	pop ()Ljava/lang/Object; a
	push (Ljava/lang/Object;)Z a
net/minecraft/util/thread/StrictQueue$FixedPriorityQueue ams$a
	queueList a
	isEmpty ()Z b
	pop ()Ljava/lang/Object; a
	pop ()Ljava/lang/Runnable; c
	push (Ljava/lang/Object;)Z a
	push (Lnet/minecraft/util/thread/StrictQueue$IntRunnable;)Z a
net/minecraft/util/thread/StrictQueue$IntRunnable ams$b
	priority a
	task b
	getPriority ()I a
net/minecraft/util/thread/StrictQueue$QueueStrictQueue ams$c
	queue a
	isEmpty ()Z b
	pop ()Ljava/lang/Object; a
	push (Ljava/lang/Object;)Z a
net/minecraft/util/worldupdate/WorldUpgrader amu
	LOGGER a
	REGEX p
	THREAD_FACTORY b
	converted l
	dataFixer g
	eraseCache d
	finished i
	levelStorage e
	levels c
	overworldDataStorage q
	progress j
	progressMap n
	running h
	skipped m
	status o
	thread f
	totalChunks k
	cancel ()V a
	dimensionProgress (Lnet/minecraft/resources/ResourceKey;)F a
	getAllChunkPos (Lnet/minecraft/resources/ResourceKey;)Ljava/util/List; b
	getConverted ()I f
	getProgress ()F d
	getSkipped ()I g
	getStatus ()Lnet/minecraft/network/chat/Component; h
	getTotalChunks ()I e
	isFinished ()Z b
	levels ()Lcom/google/common/collect/ImmutableSet; c
	work ()V i
net/minecraft/world/BossEvent amw
	color c
	createWorldFog g
	darkenScreen e
	id h
	name a
	overlay d
	percent b
	playBossMusic f
	getColor ()Lnet/minecraft/world/BossEvent$BossBarColor; l
	getId ()Ljava/util/UUID; i
	getName ()Lnet/minecraft/network/chat/Component; j
	getOverlay ()Lnet/minecraft/world/BossEvent$BossBarOverlay; m
	getPercent ()F k
	setColor (Lnet/minecraft/world/BossEvent$BossBarColor;)V a
	setCreateWorldFog (Z)Lnet/minecraft/world/BossEvent; c
	setDarkenScreen (Z)Lnet/minecraft/world/BossEvent; a
	setName (Lnet/minecraft/network/chat/Component;)V a
	setOverlay (Lnet/minecraft/world/BossEvent$BossBarOverlay;)V a
	setPercent (F)V a
	setPlayBossMusic (Z)Lnet/minecraft/world/BossEvent; b
	shouldCreateWorldFog ()Z p
	shouldDarkenScreen ()Z n
	shouldPlayBossMusic ()Z o
net/minecraft/world/BossEvent$BossBarColor amw$a
	$VALUES j
	BLUE b
	GREEN d
	PINK a
	PURPLE f
	RED c
	WHITE g
	YELLOW e
	formatting i
	name h
	byName (Ljava/lang/String;)Lnet/minecraft/world/BossEvent$BossBarColor; a
	getFormatting ()Lnet/minecraft/ChatFormatting; a
	getName ()Ljava/lang/String; b
net/minecraft/world/BossEvent$BossBarOverlay amw$b
	$VALUES g
	NOTCHED_10 c
	NOTCHED_12 d
	NOTCHED_20 e
	NOTCHED_6 b
	PROGRESS a
	name f
	byName (Ljava/lang/String;)Lnet/minecraft/world/BossEvent$BossBarOverlay; a
	getName ()Ljava/lang/String; a
net/minecraft/world/Clearable amx
	clearContent ()V aa_
	tryClear (Ljava/lang/Object;)V a
net/minecraft/world/CompoundContainer amy
	container1 a
	container2 b
	canPlaceItem (ILnet/minecraft/world/item/ItemStack;)Z b
	clearContent ()V aa_
	contains (Lnet/minecraft/world/Container;)Z a
	getContainerSize ()I ab_
	getItem (I)Lnet/minecraft/world/item/ItemStack; a
	getMaxStackSize ()I X_
	isEmpty ()Z c
	removeItem (II)Lnet/minecraft/world/item/ItemStack; a
	removeItemNoUpdate (I)Lnet/minecraft/world/item/ItemStack; b
	setChanged ()V Z_
	setItem (ILnet/minecraft/world/item/ItemStack;)V a
	startOpen (Lnet/minecraft/world/entity/player/Player;)V c_
	stillValid (Lnet/minecraft/world/entity/player/Player;)Z a
	stopOpen (Lnet/minecraft/world/entity/player/Player;)V b_
net/minecraft/world/Container amz
	canPlaceItem (ILnet/minecraft/world/item/ItemStack;)Z b
	countItem (Lnet/minecraft/world/item/Item;)I a
	getContainerSize ()I ab_
	getItem (I)Lnet/minecraft/world/item/ItemStack; a
	getMaxStackSize ()I X_
	hasAnyOf (Ljava/util/Set;)Z a
	isEmpty ()Z c
	removeItem (II)Lnet/minecraft/world/item/ItemStack; a
	removeItemNoUpdate (I)Lnet/minecraft/world/item/ItemStack; b
	setChanged ()V Z_
	setItem (ILnet/minecraft/world/item/ItemStack;)V a
	startOpen (Lnet/minecraft/world/entity/player/Player;)V c_
	stillValid (Lnet/minecraft/world/entity/player/Player;)Z a
	stopOpen (Lnet/minecraft/world/entity/player/Player;)V b_
net/minecraft/world/ContainerHelper ana
	clearOrCountMatchingItems (Lnet/minecraft/world/Container;Ljava/util/function/Predicate;IZ)I a
	clearOrCountMatchingItems (Lnet/minecraft/world/item/ItemStack;Ljava/util/function/Predicate;IZ)I a
	loadAllItems (Lnet/minecraft/nbt/CompoundTag;Lnet/minecraft/core/NonNullList;)V b
	removeItem (Ljava/util/List;II)Lnet/minecraft/world/item/ItemStack; a
	saveAllItems (Lnet/minecraft/nbt/CompoundTag;Lnet/minecraft/core/NonNullList;)Lnet/minecraft/nbt/CompoundTag; a
	saveAllItems (Lnet/minecraft/nbt/CompoundTag;Lnet/minecraft/core/NonNullList;Z)Lnet/minecraft/nbt/CompoundTag; a
	takeItem (Ljava/util/List;I)Lnet/minecraft/world/item/ItemStack; a
net/minecraft/world/ContainerListener anb
	containerChanged (Lnet/minecraft/world/Container;)V a
net/minecraft/world/Containers anc
	RANDOM a
	dropContents (Lnet/minecraft/world/level/Level;DDDLnet/minecraft/world/Container;)V a
	dropContents (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/NonNullList;)V a
	dropContents (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/Container;)V a
	dropContents (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/Container;)V a
	dropItemStack (Lnet/minecraft/world/level/Level;DDDLnet/minecraft/world/item/ItemStack;)V a
net/minecraft/world/Difficulty and
	$VALUES h
	BY_ID e
	EASY b
	HARD d
	NORMAL c
	PEACEFUL a
	id f
	key g
	byId (I)Lnet/minecraft/world/Difficulty; a
	byName (Ljava/lang/String;)Lnet/minecraft/world/Difficulty; a
	getDisplayName ()Lnet/minecraft/network/chat/Component; b
	getId ()I a
	getKey ()Ljava/lang/String; c
	nextById ()Lnet/minecraft/world/Difficulty; d
net/minecraft/world/DifficultyInstance ane
	base a
	effectiveDifficulty b
	calculateDifficulty (Lnet/minecraft/world/Difficulty;JJF)F a
	getDifficulty ()Lnet/minecraft/world/Difficulty; a
	getEffectiveDifficulty ()F b
	getSpecialMultiplier ()F d
	isHard ()Z c
	isHarderThan (F)Z a
net/minecraft/world/InteractionHand anf
	$VALUES c
	MAIN_HAND a
	OFF_HAND b
net/minecraft/world/InteractionResult ang
	$VALUES e
	CONSUME b
	FAIL d
	PASS c
	SUCCESS a
	consumesAction ()Z a
	shouldSwing ()Z b
	sidedSuccess (Z)Lnet/minecraft/world/InteractionResult; a
net/minecraft/world/InteractionResultHolder anh
	object b
	result a
	consume (Ljava/lang/Object;)Lnet/minecraft/world/InteractionResultHolder; b
	fail (Ljava/lang/Object;)Lnet/minecraft/world/InteractionResultHolder; d
	getObject ()Ljava/lang/Object; b
	getResult ()Lnet/minecraft/world/InteractionResult; a
	pass (Ljava/lang/Object;)Lnet/minecraft/world/InteractionResultHolder; c
	sidedSuccess (Ljava/lang/Object;Z)Lnet/minecraft/world/InteractionResultHolder; a
	success (Ljava/lang/Object;)Lnet/minecraft/world/InteractionResultHolder; a
net/minecraft/world/LockCode ani
	NO_LOCK a
	key b
	addToTag (Lnet/minecraft/nbt/CompoundTag;)V a
	fromTag (Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/world/LockCode; b
	unlocksWith (Lnet/minecraft/world/item/ItemStack;)Z a
net/minecraft/world/MenuProvider anj
	getDisplayName ()Lnet/minecraft/network/chat/Component; d
net/minecraft/world/Nameable ank
	getCustomName ()Lnet/minecraft/network/chat/Component; R
	getDisplayName ()Lnet/minecraft/network/chat/Component; d
	getName ()Lnet/minecraft/network/chat/Component; P
	hasCustomName ()Z Q
net/minecraft/world/ShulkerSharedHelper anl
	openBoundingBox (Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;)Lnet/minecraft/world/phys/AABB; a
net/minecraft/world/SimpleContainer anm
	items b
	listeners c
	size a
	addItem (Lnet/minecraft/world/item/ItemStack;)Lnet/minecraft/world/item/ItemStack; a
	addListener (Lnet/minecraft/world/ContainerListener;)V a
	canAddItem (Lnet/minecraft/world/item/ItemStack;)Z b
	clearContent ()V aa_
	createTag ()Lnet/minecraft/nbt/ListTag; g
	fillStackedContents (Lnet/minecraft/world/entity/player/StackedContents;)V a
	fromTag (Lnet/minecraft/nbt/ListTag;)V a
	getContainerSize ()I ab_
	getItem (I)Lnet/minecraft/world/item/ItemStack; a
	isEmpty ()Z c
	isSameItem (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/item/ItemStack;)Z a
	moveItemToEmptySlots (Lnet/minecraft/world/item/ItemStack;)V c
	moveItemToOccupiedSlotsWithSameType (Lnet/minecraft/world/item/ItemStack;)V d
	moveItemsBetweenStacks (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/item/ItemStack;)V b
	removeAllItems ()Ljava/util/List; f
	removeItem (II)Lnet/minecraft/world/item/ItemStack; a
	removeItemNoUpdate (I)Lnet/minecraft/world/item/ItemStack; b
	removeItemType (Lnet/minecraft/world/item/Item;I)Lnet/minecraft/world/item/ItemStack; a
	removeListener (Lnet/minecraft/world/ContainerListener;)V b
	setChanged ()V Z_
	setItem (ILnet/minecraft/world/item/ItemStack;)V a
	stillValid (Lnet/minecraft/world/entity/player/Player;)Z a
net/minecraft/world/SimpleMenuProvider ann
	menuConstructor b
	title a
	getDisplayName ()Lnet/minecraft/network/chat/Component; d
net/minecraft/world/Snooper ano
	count j
	dynamicData b
	fixedData a
	lock g
	populator e
	started i
	startupTime h
	timer f
	token c
	url d
	getStartupTime ()J g
	getToken ()Ljava/lang/String; f
	getValues ()Ljava/util/Map; c
	interrupt ()V e
	isStarted ()Z d
	populateFixedData ()V h
	prepare ()V b
	setDynamicData (Ljava/lang/String;Ljava/lang/Object;)V a
	setFixedData (Ljava/lang/String;Ljava/lang/Object;)V b
	setJvmArgs ()V i
	start ()V a
net/minecraft/world/SnooperPopulator anp
	isSnooperEnabled ()Z S
	populateSnooper (Lnet/minecraft/world/Snooper;)V a
	populateSnooperInitial (Lnet/minecraft/world/Snooper;)V b
net/minecraft/world/WorldlyContainer anq
	canPlaceItemThroughFace (ILnet/minecraft/world/item/ItemStack;Lnet/minecraft/core/Direction;)Z a
	canTakeItemThroughFace (ILnet/minecraft/world/item/ItemStack;Lnet/minecraft/core/Direction;)Z b
	getSlotsForFace (Lnet/minecraft/core/Direction;)[I a
net/minecraft/world/WorldlyContainerHolder anr
	getContainer (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/WorldlyContainer; a
net/minecraft/world/damagesource/BadRespawnPointDamage ans
	getLocalizedDeathMessage (Lnet/minecraft/world/entity/LivingEntity;)Lnet/minecraft/network/chat/Component; a
net/minecraft/world/damagesource/CombatEntry ant
	damage c
	fallDistance f
	health d
	location e
	source a
	time b
	getAttacker ()Lnet/minecraft/world/entity/Entity; i
	getAttackerName ()Lnet/minecraft/network/chat/Component; h
	getDamage ()F c
	getFallDistance ()F j
	getHealthAfterDamage ()F e
	getHealthBeforeDamage ()F d
	getLocation ()Ljava/lang/String; g
	getSource ()Lnet/minecraft/world/damagesource/DamageSource; a
	getTime ()I b
	isCombatRelated ()Z f
net/minecraft/world/damagesource/CombatRules anu
	getDamageAfterAbsorb (FFF)F a
	getDamageAfterMagicAbsorb (FF)F a
net/minecraft/world/damagesource/CombatTracker anv
	combatEndTime e
	combatStartTime d
	entries a
	inCombat f
	lastDamageTime c
	mob b
	nextLocation h
	takingDamage g
	getCombatDuration ()I f
	getDeathMessage ()Lnet/minecraft/network/chat/Component; b
	getFallLocation (Lnet/minecraft/world/damagesource/CombatEntry;)Ljava/lang/String; a
	getKiller ()Lnet/minecraft/world/entity/LivingEntity; c
	getLastEntry ()Lnet/minecraft/world/damagesource/CombatEntry; i
	getMob ()Lnet/minecraft/world/entity/LivingEntity; h
	getMostSignificantFall ()Lnet/minecraft/world/damagesource/CombatEntry; j
	isInCombat ()Z e
	isTakingDamage ()Z d
	prepareForDamage ()V a
	recheckStatus ()V g
	recordDamage (Lnet/minecraft/world/damagesource/DamageSource;FF)V a
	resetPreparedStatus ()V k
net/minecraft/world/damagesource/DamageSource anw
	ANVIL q
	CACTUS j
	CRAMMING g
	DRAGON_BREATH s
	DROWN h
	DRY_OUT t
	FALL k
	FALLING_BLOCK r
	FLY_INTO_WALL l
	GENERIC n
	HOT_FLOOR e
	IN_FIRE a
	IN_WALL f
	LAVA d
	LIGHTNING_BOLT b
	MAGIC o
	ON_FIRE c
	OUT_OF_WORLD m
	STARVE i
	SWEET_BERRY_BUSH u
	WITHER p
	bypassArmor w
	bypassInvul x
	bypassMagic y
	exhaustion z
	isExplosion E
	isFireSource A
	isMagic D
	isProjectile B
	msgId v
	scalesWithDifficulty C
	arrow (Lnet/minecraft/world/entity/projectile/AbstractArrow;Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/world/damagesource/DamageSource; a
	badRespawnPointExplosion ()Lnet/minecraft/world/damagesource/DamageSource; a
	bypassArmor ()Lnet/minecraft/world/damagesource/DamageSource; l
	bypassInvul ()Lnet/minecraft/world/damagesource/DamageSource; m
	bypassMagic ()Lnet/minecraft/world/damagesource/DamageSource; n
	explosion (Lnet/minecraft/world/entity/LivingEntity;)Lnet/minecraft/world/damagesource/DamageSource; d
	explosion (Lnet/minecraft/world/level/Explosion;)Lnet/minecraft/world/damagesource/DamageSource; a
	fireball (Lnet/minecraft/world/entity/projectile/Fireball;Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/world/damagesource/DamageSource; a
	fireworks (Lnet/minecraft/world/entity/projectile/FireworkRocketEntity;Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/world/damagesource/DamageSource; a
	getDirectEntity ()Lnet/minecraft/world/entity/Entity; j
	getEntity ()Lnet/minecraft/world/entity/Entity; k
	getFoodExhaustion ()F g
	getLocalizedDeathMessage (Lnet/minecraft/world/entity/LivingEntity;)Lnet/minecraft/network/chat/Component; a
	getMsgId ()Ljava/lang/String; q
	getSourcePosition ()Lnet/minecraft/world/phys/Vec3; w
	indirectMagic (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/world/damagesource/DamageSource; c
	indirectMobAttack (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/entity/LivingEntity;)Lnet/minecraft/world/damagesource/DamageSource; a
	isBypassArmor ()Z f
	isBypassInvul ()Z h
	isBypassMagic ()Z i
	isCreativePlayer ()Z v
	isExplosion ()Z d
	isFire ()Z p
	isMagic ()Z t
	isProjectile ()Z b
	mobAttack (Lnet/minecraft/world/entity/LivingEntity;)Lnet/minecraft/world/damagesource/DamageSource; c
	playerAttack (Lnet/minecraft/world/entity/player/Player;)Lnet/minecraft/world/damagesource/DamageSource; a
	scalesWithDifficulty ()Z s
	setExplosion ()Lnet/minecraft/world/damagesource/DamageSource; e
	setIsFire ()Lnet/minecraft/world/damagesource/DamageSource; o
	setMagic ()Lnet/minecraft/world/damagesource/DamageSource; u
	setProjectile ()Lnet/minecraft/world/damagesource/DamageSource; c
	setScalesWithDifficulty ()Lnet/minecraft/world/damagesource/DamageSource; r
	sting (Lnet/minecraft/world/entity/LivingEntity;)Lnet/minecraft/world/damagesource/DamageSource; b
	thorns (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/world/damagesource/DamageSource; a
	thrown (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/world/damagesource/DamageSource; b
	trident (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/world/damagesource/DamageSource; a
	witherSkull (Lnet/minecraft/world/entity/projectile/WitherSkull;Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/world/damagesource/DamageSource; a
net/minecraft/world/damagesource/EntityDamageSource anx
	entity w
	isThorns x
	getEntity ()Lnet/minecraft/world/entity/Entity; k
	getLocalizedDeathMessage (Lnet/minecraft/world/entity/LivingEntity;)Lnet/minecraft/network/chat/Component; a
	getSourcePosition ()Lnet/minecraft/world/phys/Vec3; w
	isThorns ()Z y
	scalesWithDifficulty ()Z s
	setThorns ()Lnet/minecraft/world/damagesource/EntityDamageSource; x
net/minecraft/world/damagesource/IndirectEntityDamageSource any
	owner x
	getDirectEntity ()Lnet/minecraft/world/entity/Entity; j
	getEntity ()Lnet/minecraft/world/entity/Entity; k
	getLocalizedDeathMessage (Lnet/minecraft/world/entity/LivingEntity;)Lnet/minecraft/network/chat/Component; a
net/minecraft/world/effect/AbsoptionMobEffect aoa
	addAttributeModifiers (Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/entity/ai/attributes/AttributeMap;I)V b
	removeAttributeModifiers (Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/entity/ai/attributes/AttributeMap;I)V a
net/minecraft/world/effect/AttackDamageMobEffect aob
	multiplier a
	getAttributeModifierValue (ILnet/minecraft/world/entity/ai/attributes/AttributeModifier;)D a
net/minecraft/world/effect/HealthBoostMobEffect aoc
	removeAttributeModifiers (Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/entity/ai/attributes/AttributeMap;I)V a
net/minecraft/world/effect/InstantenousMobEffect aod
	isDurationEffectTick (II)Z a
	isInstantenous ()Z a
net/minecraft/world/effect/MobEffect aoe
	attributeModifiers a
	category b
	color c
	descriptionId d
	addAttributeModifier (Lnet/minecraft/world/entity/ai/attributes/Attribute;Ljava/lang/String;DLnet/minecraft/world/entity/ai/attributes/AttributeModifier$Operation;)Lnet/minecraft/world/effect/MobEffect; a
	addAttributeModifiers (Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/entity/ai/attributes/AttributeMap;I)V b
	applyEffectTick (Lnet/minecraft/world/entity/LivingEntity;I)V a
	applyInstantenousEffect (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/entity/LivingEntity;ID)V a
	byId (I)Lnet/minecraft/world/effect/MobEffect; a
	getAttributeModifierValue (ILnet/minecraft/world/entity/ai/attributes/AttributeModifier;)D a
	getAttributeModifiers ()Ljava/util/Map; g
	getCategory ()Lnet/minecraft/world/effect/MobEffectCategory; e
	getColor ()I f
	getDescriptionId ()Ljava/lang/String; c
	getDisplayName ()Lnet/minecraft/network/chat/Component; d
	getId (Lnet/minecraft/world/effect/MobEffect;)I a
	getOrCreateDescriptionId ()Ljava/lang/String; b
	isBeneficial ()Z h
	isDurationEffectTick (II)Z a
	isInstantenous ()Z a
	removeAttributeModifiers (Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/entity/ai/attributes/AttributeMap;I)V a
net/minecraft/world/effect/MobEffectCategory aof
	$VALUES e
	BENEFICIAL a
	HARMFUL b
	NEUTRAL c
	tooltipFormatting d
	getTooltipFormatting ()Lnet/minecraft/ChatFormatting; a
net/minecraft/world/effect/MobEffectInstance aog
	LOGGER a
	ambient f
	amplifier d
	duration c
	effect b
	hiddenEffect j
	noCounter g
	showIcon i
	splash e
	visible h
	applyEffect (Lnet/minecraft/world/entity/LivingEntity;)V a
	compareTo (Lnet/minecraft/world/effect/MobEffectInstance;)I c
	getAmplifier ()I c
	getDescriptionId ()Ljava/lang/String; g
	getDuration ()I b
	getEffect ()Lnet/minecraft/world/effect/MobEffect; a
	isAmbient ()Z d
	isNoCounter ()Z h
	isVisible ()Z e
	load (Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/world/effect/MobEffectInstance; b
	loadSpecifiedEffect (Lnet/minecraft/world/effect/MobEffect;Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/world/effect/MobEffectInstance; a
	save (Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/nbt/CompoundTag; a
	setDetailsFrom (Lnet/minecraft/world/effect/MobEffectInstance;)V a
	setNoCounter (Z)V b
	setSplash (Z)V a
	showIcon ()Z f
	tick (Lnet/minecraft/world/entity/LivingEntity;Ljava/lang/Runnable;)Z a
	tickDownDuration ()I i
	update (Lnet/minecraft/world/effect/MobEffectInstance;)Z b
	writeDetailsTo (Lnet/minecraft/nbt/CompoundTag;)V c
net/minecraft/world/effect/MobEffectUtil aoh
	formatDuration (Lnet/minecraft/world/effect/MobEffectInstance;F)Ljava/lang/String; a
	getDigSpeedAmplification (Lnet/minecraft/world/entity/LivingEntity;)I b
	hasDigSpeed (Lnet/minecraft/world/entity/LivingEntity;)Z a
	hasWaterBreathing (Lnet/minecraft/world/entity/LivingEntity;)Z c
net/minecraft/world/effect/MobEffects aoi
	ABSORPTION v
	BAD_OMEN E
	BLINDNESS o
	CONDUIT_POWER C
	CONFUSION i
	DAMAGE_BOOST e
	DAMAGE_RESISTANCE k
	DIG_SLOWDOWN d
	DIG_SPEED c
	DOLPHINS_GRACE D
	FIRE_RESISTANCE l
	GLOWING x
	HARM g
	HEAL f
	HEALTH_BOOST u
	HERO_OF_THE_VILLAGE F
	HUNGER q
	INVISIBILITY n
	JUMP h
	LEVITATION y
	LUCK z
	MOVEMENT_SLOWDOWN b
	MOVEMENT_SPEED a
	NIGHT_VISION p
	POISON s
	REGENERATION j
	SATURATION w
	SLOW_FALLING B
	UNLUCK A
	WATER_BREATHING m
	WEAKNESS r
	WITHER t
	register (ILjava/lang/String;Lnet/minecraft/world/effect/MobEffect;)Lnet/minecraft/world/effect/MobEffect; a
net/minecraft/world/entity/AgableMob aok
	DATA_BABY_ID bv
	age b
	forcedAge c
	forcedAgeTimer d
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	ageBoundaryReached ()V m
	ageUp (I)V a
	ageUp (IZ)V a
	aiStep ()V k
	canBreed ()Z f
	defineSynchedData ()V e
	finalizeSpawn (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/world/DifficultyInstance;Lnet/minecraft/world/entity/MobSpawnType;Lnet/minecraft/world/entity/SpawnGroupData;Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/world/entity/SpawnGroupData; a
	getAge ()I i
	getBreedOffspring (Lnet/minecraft/world/entity/AgableMob;)Lnet/minecraft/world/entity/AgableMob; a
	isBaby ()Z x_
	onSyncedDataUpdated (Lnet/minecraft/network/syncher/EntityDataAccessor;)V a
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	setAge (I)V c_
	setBaby (Z)V a
net/minecraft/world/entity/AgableMob$AgableMobGroupData aok$a
	babySpawnChance c
	groupSize a
	shouldSpawnBaby b
	getBabySpawnChance ()F d
	getGroupSize ()I a
	increaseGroupSizeByOne ()V b
	isShouldSpawnBaby ()Z c
	setBabySpawnChance (F)V a
	setShouldSpawnBaby (Z)V a
net/minecraft/world/entity/AreaEffectCloud aol
	DATA_COLOR d
	DATA_PARTICLE f
	DATA_RADIUS c
	DATA_WAITING e
	LOGGER b
	duration ap
	durationOnUse at
	effects an
	fixedColor as
	owner aw
	ownerUUID ax
	potion g
	radiusOnUse au
	radiusPerTick av
	reapplicationDelay ar
	victims ao
	waitTime aq
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	addEffect (Lnet/minecraft/world/effect/MobEffectInstance;)V a
	canUse ()Z s
	defineSynchedData ()V e
	getAddEntityPacket ()Lnet/minecraft/network/protocol/Packet; O
	getColor ()I h
	getDimensions (Lnet/minecraft/world/entity/Pose;)Lnet/minecraft/world/entity/EntityDimensions; a
	getDuration ()I m
	getDurationOnUse ()I p
	getEffects ()Ljava/util/List; v
	getOwner ()Lnet/minecraft/world/entity/LivingEntity; t
	getParticle ()Lnet/minecraft/core/particles/ParticleOptions; i
	getPistonPushReaction ()Lnet/minecraft/world/level/material/PushReaction; z_
	getPotion ()Lnet/minecraft/world/item/alchemy/Potion; u
	getRadius ()F g
	getRadiusOnUse ()F n
	getRadiusPerTick ()F o
	getWaitTime ()I q
	isWaiting ()Z k
	onSyncedDataUpdated (Lnet/minecraft/network/syncher/EntityDataAccessor;)V a
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	refreshDimensions ()V y_
	setDuration (I)V b
	setDurationOnUse (I)V c
	setFixedColor (I)V a
	setOwner (Lnet/minecraft/world/entity/LivingEntity;)V a
	setParticle (Lnet/minecraft/core/particles/ParticleOptions;)V a
	setPotion (Lnet/minecraft/world/item/alchemy/Potion;)V a
	setRadius (F)V a
	setRadiusOnUse (F)V b
	setRadiusPerTick (F)V c
	setWaitTime (I)V d
	setWaiting (Z)V a
	tick ()V j
	updateColor ()V x
	use ()V r
net/minecraft/world/entity/Entity aom
	DATA_AIR_SUPPLY_ID aw
	DATA_CUSTOM_NAME ax
	DATA_CUSTOM_NAME_VISIBLE ay
	DATA_NO_GRAVITY aA
	DATA_POSE U
	DATA_SHARED_FLAGS_ID T
	DATA_SILENT az
	EMPTY_LIST c
	ENTITY_COUNTER b
	INITIAL_AABB d
	LOGGER h
	bb as
	blockPosition aq
	blocksBuilding i
	boardingCooldown j
	changingDimensionDelay ae
	deltaMovement ar
	dimensions aH
	entityData S
	eyeHeight aI
	fallDistance C
	firstTick R
	fluidHeight M
	fluidOnEyes O
	forceChunkAddition aE
	forcedLoading k
	glowing am
	hasImpulse ad
	horizontalCollision u
	hurtMarked w
	id g
	inChunk V
	invulnerable aC
	invulnerableTime Q
	isInsidePortal af
	isTouchingLava P
	level l
	maxUpStep G
	moveDist B
	movedSinceLastChunkCheck aB
	nextFlap au
	nextStep at
	noCulling ac
	noPhysics H
	onGround t
	passengers an
	pistonDeltas aF
	pistonDeltasGameTime aG
	portalEntranceBlock ah
	portalEntranceForwards aj
	portalEntranceOffset ai
	portalTime ag
	position ap
	pushthrough I
	random J
	remainingFireTicks av
	removed y
	stringUUID al
	stuckSpeedMultiplier x
	tags aD
	tickCount K
	type f
	uuid ak
	vehicle ao
	verticalCollision v
	viewScale e
	walkDist A
	walkDistO z
	wasEyeInWater N
	wasTouchingWater L
	xChunk W
	xOld D
	xRot q
	xRotO s
	xo m
	xp Z
	yChunk X
	yOld E
	yRot p
	yRotO r
	yo n
	yp aa
	zChunk Y
	zOld F
	zo o
	zp ab
	absMoveTo (DDDFF)V a
	acceptsFailure ()Z b
	acceptsSuccess ()Z a
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	addPassenger (Lnet/minecraft/world/entity/Entity;)V o
	addTag (Ljava/lang/String;)Z a
	animateHurt ()V bi
	applyPistonMovementRestriction (Lnet/minecraft/core/Direction$Axis;D)D a
	awardKillScore (Lnet/minecraft/world/entity/Entity;ILnet/minecraft/world/damagesource/DamageSource;)V a
	baseTick ()V ad
	blockPosition ()Lnet/minecraft/core/BlockPos; cA
	broadcastToPlayer (Lnet/minecraft/server/level/ServerPlayer;)Z a
	burn (I)V h
	calculateUpVector (FF)Lnet/minecraft/world/phys/Vec3; d
	calculateViewVector (FF)Lnet/minecraft/world/phys/Vec3; c
	canAddPassenger (Lnet/minecraft/world/entity/Entity;)Z q
	canChangeDimensions ()Z bK
	canEnterPose (Lnet/minecraft/world/entity/Pose;)Z c
	canRide (Lnet/minecraft/world/entity/Entity;)Z n
	canSpawnSprintParticle ()Z aK
	causeFallDamage (FF)Z b
	changeDimension (Lnet/minecraft/server/level/ServerLevel;)Lnet/minecraft/world/entity/Entity; a
	checkAndResetForcedChunkAdditionFlag ()Z cj
	checkAndResetUpdateChunkPos ()Z ck
	checkDespawn ()V cH
	checkFallDamage (DZLnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/BlockPos;)V a
	checkInBlock (DDD)V k
	checkInsideBlocks ()V at
	clearFire ()V ah
	closerThan (Lnet/minecraft/world/entity/Entity;D)Z a
	collide (Lnet/minecraft/world/phys/Vec3;)Lnet/minecraft/world/phys/Vec3; f
	collideBoundingBox (Lnet/minecraft/world/phys/Vec3;Lnet/minecraft/world/phys/AABB;Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/world/phys/shapes/CollisionContext;Lnet/minecraft/util/RewindableStream;)Lnet/minecraft/world/phys/Vec3; a
	collideBoundingBoxHeuristically (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/phys/Vec3;Lnet/minecraft/world/phys/AABB;Lnet/minecraft/world/level/Level;Lnet/minecraft/world/phys/shapes/CollisionContext;Lnet/minecraft/util/RewindableStream;)Lnet/minecraft/world/phys/Vec3; a
	collideBoundingBoxLegacy (Lnet/minecraft/world/phys/Vec3;Lnet/minecraft/world/phys/AABB;Lnet/minecraft/util/RewindableStream;)Lnet/minecraft/world/phys/Vec3; a
	copyPosition (Lnet/minecraft/world/entity/Entity;)V u
	createCommandSourceStack ()Lnet/minecraft/commands/CommandSourceStack; cv
	createHoverEvent ()Lnet/minecraft/network/chat/HoverEvent; ca
	defineSynchedData ()V e
	displayFireAnimation ()Z bQ
	distanceTo (Lnet/minecraft/world/entity/Entity;)F g
	distanceToSqr (DDD)D g
	distanceToSqr (Lnet/minecraft/world/entity/Entity;)D h
	distanceToSqr (Lnet/minecraft/world/phys/Vec3;)D d
	doEnchantDamageEffects (Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/entity/Entity;)V a
	doWaterSplashEffect ()V aI
	ejectPassengers ()V ba
	fillCrashReportCategory (Lnet/minecraft/CrashReportCategory;)V a
	fillIndirectPassengers (ZLjava/util/Set;)V a
	fireImmune ()Z az
	getAddEntityPacket ()Lnet/minecraft/network/protocol/Packet; O
	getAirSupply ()I bE
	getAllSlots ()Ljava/lang/Iterable; bl
	getArmorSlots ()Ljava/lang/Iterable; bk
	getBbHeight ()F cy
	getBbWidth ()F cx
	getBlockExplosionResistance (Lnet/minecraft/world/level/Explosion;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/material/FluidState;F)F a
	getBlockJumpFactor ()F al
	getBlockPosBelowThatAffectsMyMovement ()Lnet/minecraft/core/BlockPos; an
	getBlockSpeedFactor ()F am
	getBlockStateOn ()Lnet/minecraft/world/level/block/state/BlockState; aJ
	getBoundingBox ()Lnet/minecraft/world/phys/AABB; cb
	getBoundingBoxForCulling ()Lnet/minecraft/world/phys/AABB; cc
	getBoundingBoxForPose (Lnet/minecraft/world/entity/Pose;)Lnet/minecraft/world/phys/AABB; d
	getBrightness ()F aO
	getCollideAgainstBox (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/world/phys/AABB; j
	getCollideBox ()Lnet/minecraft/world/phys/AABB; ay
	getCollisionHorizontalEscapeVector (DDF)Lnet/minecraft/world/phys/Vec3; a
	getCommandSenderWorld ()Lnet/minecraft/world/level/Level; cf
	getControllingPassenger ()Lnet/minecraft/world/entity/Entity; cl
	getCustomName ()Lnet/minecraft/network/chat/Component; R
	getDeltaMovement ()Lnet/minecraft/world/phys/Vec3; cB
	getDimensionChangingDelay ()I bh
	getDimensions (Lnet/minecraft/world/entity/Pose;)Lnet/minecraft/world/entity/EntityDimensions; a
	getDirection ()Lnet/minecraft/core/Direction; bY
	getDismountLocationForPassenger (Lnet/minecraft/world/entity/LivingEntity;)Lnet/minecraft/world/phys/Vec3; c
	getDisplayName ()Lnet/minecraft/network/chat/Component; d
	getEncodeId ()Ljava/lang/String; aT
	getEntityData ()Lnet/minecraft/network/syncher/SynchedEntityData; Y
	getEyeHeight ()F cd
	getEyeHeight (Lnet/minecraft/world/entity/Pose;)F e
	getEyeHeight (Lnet/minecraft/world/entity/Pose;Lnet/minecraft/world/entity/EntityDimensions;)F a
	getEyePosition (F)Lnet/minecraft/world/phys/Vec3; j
	getEyeY ()D cF
	getFireImmuneTicks ()I cu
	getFluidHeight (Lnet/minecraft/tags/Tag;)D b
	getFluidJumpThreshold ()D cw
	getForward ()Lnet/minecraft/world/phys/Vec3; bf
	getHandSlots ()Ljava/lang/Iterable; bj
	getHorizontalDistanceSqr (Lnet/minecraft/world/phys/Vec3;)D b
	getId ()I V
	getIndirectPassengers ()Ljava/util/Collection; cn
	getInputVector (Lnet/minecraft/world/phys/Vec3;FF)Lnet/minecraft/world/phys/Vec3; a
	getLeashOffset ()Lnet/minecraft/world/phys/Vec3; ce
	getLookAngle ()Lnet/minecraft/world/phys/Vec3; bd
	getMaxAirSupply ()I bD
	getMaxFallDistance ()I bL
	getMotionDirection ()Lnet/minecraft/core/Direction; bZ
	getMyRidingOffset ()D aX
	getName ()Lnet/minecraft/network/chat/Component; P
	getOnPos ()Lnet/minecraft/core/BlockPos; ak
	getPassengers ()Ljava/util/List; cm
	getPassengersRidingOffset ()D aY
	getPermissionLevel ()I y
	getPickRadius ()F bc
	getPistonPushReaction ()Lnet/minecraft/world/level/material/PushReaction; z_
	getPortalEntranceBlock ()Lnet/minecraft/core/BlockPos; bM
	getPortalEntranceForwards ()Lnet/minecraft/core/Direction; bO
	getPortalEntranceOffset ()Lnet/minecraft/world/phys/Vec3; bN
	getPortalWaitTime ()I ae
	getPose ()Lnet/minecraft/world/entity/Pose; ab
	getRandomX (D)D d
	getRandomY ()D cE
	getRandomZ (D)D g
	getRemainingFireTicks ()I ag
	getRootVehicle ()Lnet/minecraft/world/entity/Entity; cq
	getRotationVector ()Lnet/minecraft/world/phys/Vec2; be
	getScoreboardName ()Ljava/lang/String; bT
	getSelfAndPassengers ()Ljava/util/stream/Stream; co
	getServer ()Lnet/minecraft/server/MinecraftServer; cg
	getSharedFlag (I)Z i
	getSoundSource ()Lnet/minecraft/sounds/SoundSource; ct
	getStringUUID ()Ljava/lang/String; bS
	getSwimHighSpeedSplashSound ()Lnet/minecraft/sounds/SoundEvent; as
	getSwimSound ()Lnet/minecraft/sounds/SoundEvent; aq
	getSwimSplashSound ()Lnet/minecraft/sounds/SoundEvent; ar
	getTags ()Ljava/util/Set; W
	getTeam ()Lnet/minecraft/world/scores/Team; bC
	getTeamColor ()I S
	getType ()Lnet/minecraft/world/entity/EntityType; U
	getTypeName ()Lnet/minecraft/network/chat/Component; bF
	getUUID ()Ljava/util/UUID; bR
	getUpVector (F)Lnet/minecraft/world/phys/Vec3; i
	getVehicle ()Lnet/minecraft/world/entity/Entity; cs
	getViewScale ()D bV
	getViewVector (F)Lnet/minecraft/world/phys/Vec3; f
	getViewXRot (F)F g
	getViewYRot (F)F h
	getX ()D cC
	getX (D)D c
	getY ()D cD
	getY (D)D e
	getYHeadRot ()F bG
	getZ ()D cG
	getZ (D)D f
	handleEntityEvent (B)V a
	handleInsidePortal (Lnet/minecraft/core/BlockPos;)V d
	handleNetherPortal ()V bg
	hasCustomName ()Z Q
	hasIndirectPassenger (Lnet/minecraft/world/entity/Entity;)Z y
	hasOnePlayerPassenger ()Z cp
	hasPassenger (Ljava/lang/Class;)Z a
	hasPassenger (Lnet/minecraft/world/entity/Entity;)Z w
	hasPermissions (I)Z k
	hurt (Lnet/minecraft/world/damagesource/DamageSource;F)Z a
	ignoreExplosion ()Z ch
	interact (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResult; a
	interactAt (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/phys/Vec3;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResult; a
	is (Lnet/minecraft/world/entity/Entity;)Z s
	isAlive ()Z aU
	isAlliedTo (Lnet/minecraft/world/entity/Entity;)Z r
	isAlliedTo (Lnet/minecraft/world/scores/Team;)Z a
	isAttackable ()Z bH
	isControlledByLocalInstance ()Z cr
	isCrouching ()Z bv
	isCustomNameVisible ()Z bW
	isDescending ()Z bu
	isDiscrete ()Z bt
	isEyeInFluid (Lnet/minecraft/tags/Tag;)Z a
	isFree (DDD)Z e
	isFree (Lnet/minecraft/world/phys/AABB;)Z b
	isGlowing ()Z bA
	isIgnoringBlockTriggers ()Z bP
	isInBubbleColumn ()Z k
	isInLava ()Z aN
	isInRain ()Z i
	isInWall ()Z aV
	isInWater ()Z aA
	isInWaterOrBubble ()Z aD
	isInWaterOrRain ()Z aB
	isInWaterRainOrBubble ()Z aC
	isInvisible ()Z bB
	isInvisibleTo (Lnet/minecraft/world/entity/player/Player;)Z c
	isInvulnerable ()Z bI
	isInvulnerableTo (Lnet/minecraft/world/damagesource/DamageSource;)Z b
	isMovementNoisy ()Z ax
	isNoGravity ()Z aw
	isOnFire ()Z bm
	isOnGround ()Z aj
	isPassenger ()Z bn
	isPassengerOfSameVehicle (Lnet/minecraft/world/entity/Entity;)Z x
	isPickable ()Z aQ
	isPushable ()Z aR
	isPushedByFluid ()Z bU
	isShiftKeyDown ()Z bq
	isSilent ()Z av
	isSpectator ()Z a_
	isSprinting ()Z bw
	isSteppingCarefully ()Z br
	isSuppressingBounce ()Z bs
	isSwimming ()Z bx
	isUnderWater ()Z aE
	isVehicle ()Z bo
	isVisuallyCrawling ()Z bz
	isVisuallySwimming ()Z by
	kill ()V X
	killed (Lnet/minecraft/world/entity/LivingEntity;)V a_
	lavaHurt ()V af
	lerpHeadTo (FI)V a
	lerpMotion (DDD)V j
	lerpTo (DDDFFIZ)V a
	limitPistonMovement (Lnet/minecraft/world/phys/Vec3;)Lnet/minecraft/world/phys/Vec3; a
	load (Lnet/minecraft/nbt/CompoundTag;)V f
	lookAt (Lnet/minecraft/commands/arguments/EntityAnchorArgument$Anchor;Lnet/minecraft/world/phys/Vec3;)V a
	makeFlySound ()Z au
	makeStuckInBlock (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/phys/Vec3;)V a
	markHurt ()V aP
	maybeBackOffFromEdge (Lnet/minecraft/world/phys/Vec3;Lnet/minecraft/world/entity/MoverType;)Lnet/minecraft/world/phys/Vec3; a
	mirror (Lnet/minecraft/world/level/block/Mirror;)F a
	move (Lnet/minecraft/world/entity/MoverType;Lnet/minecraft/world/phys/Vec3;)V a
	moveRelative (FLnet/minecraft/world/phys/Vec3;)V a
	moveTo (DDD)V b
	moveTo (DDDFF)V b
	moveTo (Lnet/minecraft/core/BlockPos;FF)V a
	moveTo (Lnet/minecraft/world/phys/Vec3;)V c
	newDoubleList ([D)Lnet/minecraft/nbt/ListTag; a
	newFloatList ([F)Lnet/minecraft/nbt/ListTag; a
	nextStep ()F ao
	onAboveBubbleCol (Z)V k
	onInsideBlock (Lnet/minecraft/world/level/block/state/BlockState;)V a
	onInsideBubbleColumn (Z)V l
	onPassengerTurned (Lnet/minecraft/world/entity/Entity;)V l
	onSyncedDataUpdated (Lnet/minecraft/network/syncher/EntityDataAccessor;)V a
	onlyOpCanSetNbt ()Z ci
	outOfWorld ()V ai
	pick (DFZ)Lnet/minecraft/world/phys/HitResult; a
	playFlySound (F)F e
	playSound (Lnet/minecraft/sounds/SoundEvent;FF)V a
	playStepSound (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V a
	playSwimSound (F)V d
	playerTouch (Lnet/minecraft/world/entity/player/Player;)V a_
	position ()Lnet/minecraft/world/phys/Vec3; cz
	positionRider (Lnet/minecraft/world/entity/Entity;)V k
	positionRider (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/entity/Entity$MoveFunction;)V a
	processDimensionDelay ()V E
	push (DDD)V h
	push (Lnet/minecraft/world/entity/Entity;)V i
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	reapplyPosition ()V ac
	refreshDimensions ()V y_
	remove ()V aa
	removeAction (Lnet/minecraft/network/chat/Component;)Lnet/minecraft/network/chat/Component; b
	removeAfterChangingDimensions ()V bJ
	removePassenger (Lnet/minecraft/world/entity/Entity;)V p
	removeTag (Ljava/lang/String;)Z b
	removeVehicle ()V bb
	repositionEntityAfterLoad ()Z aS
	resetPos ()V Z
	restoreFrom (Lnet/minecraft/world/entity/Entity;)V v
	rideTick ()V aW
	rideableUnderWater ()Z bp
	rotate (Lnet/minecraft/world/level/block/Rotation;)F a
	save (Lnet/minecraft/nbt/CompoundTag;)Z d
	saveAsPassenger (Lnet/minecraft/nbt/CompoundTag;)Z a_
	saveWithoutId (Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/nbt/CompoundTag; e
	sendMessage (Lnet/minecraft/network/chat/Component;Ljava/util/UUID;)V a
	setAirSupply (I)V j
	setBoundingBox (Lnet/minecraft/world/phys/AABB;)V a
	setCustomName (Lnet/minecraft/network/chat/Component;)V a
	setCustomNameVisible (Z)V n
	setDeltaMovement (DDD)V m
	setDeltaMovement (Lnet/minecraft/world/phys/Vec3;)V e
	setDropContainerContent (Z)V a_
	setGlowing (Z)V i
	setId (I)V e
	setInLava ()V aM
	setInvisible (Z)V j
	setInvulnerable (Z)V m
	setItemSlot (Lnet/minecraft/world/entity/EquipmentSlot;Lnet/minecraft/world/item/ItemStack;)V a
	setLevel (Lnet/minecraft/world/level/Level;)V a_
	setLocationFromBoundingbox ()V ap
	setNoGravity (Z)V e
	setOnGround (Z)V c
	setPacketCoordinates (DDD)V c
	setPos (DDD)V d
	setPosAndOldPos (DDD)V f
	setPosRaw (DDD)V n
	setPose (Lnet/minecraft/world/entity/Pose;)V b
	setRemainingFireTicks (I)V g
	setRot (FF)V a
	setSecondsOnFire (I)V f
	setSharedFlag (IZ)V b
	setShiftKeyDown (Z)V f
	setSilent (Z)V d
	setSlot (ILnet/minecraft/world/item/ItemStack;)Z a_
	setSprinting (Z)V g
	setSwimming (Z)V h
	setUUID (Ljava/util/UUID;)V a_
	setViewScale (D)V b
	setYBodyRot (F)V l
	setYHeadRot (F)V k
	shouldBlockExplode (Lnet/minecraft/world/level/Explosion;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;F)Z a
	shouldInformAdmins ()Z S_
	shouldRender (DDD)Z i
	shouldRenderAtSqrDistance (D)Z a
	shouldShowName ()Z bX
	showVehicleHealth ()Z aZ
	skipAttackInteraction (Lnet/minecraft/world/entity/Entity;)Z t
	spawnAtLocation (Lnet/minecraft/world/item/ItemStack;)Lnet/minecraft/world/entity/item/ItemEntity; a
	spawnAtLocation (Lnet/minecraft/world/item/ItemStack;F)Lnet/minecraft/world/entity/item/ItemEntity; a
	spawnAtLocation (Lnet/minecraft/world/level/ItemLike;)Lnet/minecraft/world/entity/item/ItemEntity; a
	spawnAtLocation (Lnet/minecraft/world/level/ItemLike;I)Lnet/minecraft/world/entity/item/ItemEntity; a
	spawnSprintParticle ()V aL
	startRiding (Lnet/minecraft/world/entity/Entity;)Z m
	startRiding (Lnet/minecraft/world/entity/Entity;Z)Z a
	startSeenByPlayer (Lnet/minecraft/server/level/ServerPlayer;)V b
	stopRiding ()V l
	stopSeenByPlayer (Lnet/minecraft/server/level/ServerPlayer;)V c
	teleportTo (DDD)V a
	teleportToWithTicket (DDD)V l
	thunderHit (Lnet/minecraft/world/entity/LightningBolt;)V a
	tick ()V j
	turn (DD)V a
	unRide ()V T
	updateFluidHeightAndDoFluidPushing (Lnet/minecraft/tags/Tag;D)Z a
	updateFluidOnEyes ()V n
	updateInWaterStateAndDoFluidPushing ()Z aG
	updateInWaterStateAndDoWaterCurrentPushing ()V aH
	updateSwimming ()V aF
net/minecraft/world/entity/Entity$MoveFunction aom$a
net/minecraft/world/entity/EntityDimensions aon
	fixed c
	height b
	width a
	fixed (FF)Lnet/minecraft/world/entity/EntityDimensions; c
	scalable (FF)Lnet/minecraft/world/entity/EntityDimensions; b
	scale (F)Lnet/minecraft/world/entity/EntityDimensions; a
	scale (FF)Lnet/minecraft/world/entity/EntityDimensions; a
net/minecraft/world/entity/EntityEvent aoo
net/minecraft/world/entity/EntitySelector aop
	ATTACK_ALLOWED f
	CONTAINER_ENTITY_SELECTOR d
	ENTITY_NOT_BEING_RIDDEN c
	ENTITY_STILL_ALIVE a
	LIVING_ENTITY_STILL_ALIVE b
	NO_CREATIVE_OR_SPECTATOR e
	NO_SPECTATORS g
	notRiding (Lnet/minecraft/world/entity/Entity;)Ljava/util/function/Predicate; b
	pushableBy (Lnet/minecraft/world/entity/Entity;)Ljava/util/function/Predicate; a
	withinDistance (DDDD)Ljava/util/function/Predicate; a
net/minecraft/world/entity/EntitySelector$MobCanWearArmorEntitySelector aop$a
	itemStack a
	test (Lnet/minecraft/world/entity/Entity;)Z a
net/minecraft/world/entity/EntityType aoq
	AREA_EFFECT_CLOUD a
	ARMOR_STAND b
	ARROW c
	BAT d
	BEE e
	BLAZE f
	BOAT g
	CAT h
	CAVE_SPIDER i
	CHEST_MINECART U
	CHICKEN j
	COD k
	COMMAND_BLOCK_MINECART V
	COW l
	CREEPER m
	DOLPHIN n
	DONKEY o
	DRAGON_FIREBALL p
	DROWNED q
	EGG aF
	ELDER_GUARDIAN r
	ENDERMAN u
	ENDERMITE v
	ENDER_DRAGON t
	ENDER_PEARL aG
	END_CRYSTAL s
	EVOKER w
	EVOKER_FANGS x
	EXPERIENCE_BOTTLE aH
	EXPERIENCE_ORB y
	EYE_OF_ENDER z
	FALLING_BLOCK A
	FIREBALL N
	FIREWORK_ROCKET B
	FISHING_BOBBER bc
	FOX C
	FURNACE_MINECART W
	GHAST D
	GIANT E
	GUARDIAN F
	HOGLIN G
	HOPPER_MINECART X
	HORSE H
	HUSK I
	ILLUSIONER J
	IRON_GOLEM K
	ITEM L
	ITEM_FRAME M
	LEASH_KNOT O
	LIGHTNING_BOLT P
	LLAMA Q
	LLAMA_SPIT R
	LOGGER bd
	MAGMA_CUBE S
	MINECART T
	MOOSHROOM ab
	MULE aa
	OCELOT ac
	PAINTING ad
	PANDA ae
	PARROT af
	PHANTOM ag
	PIG ah
	PIGLIN ai
	PILLAGER aj
	PLAYER bb
	POLAR_BEAR ak
	POTION aI
	PUFFERFISH am
	RABBIT an
	RAVAGER ao
	SALMON ap
	SHEEP aq
	SHULKER ar
	SHULKER_BULLET as
	SILVERFISH at
	SKELETON au
	SKELETON_HORSE av
	SLIME aw
	SMALL_FIREBALL ax
	SNOWBALL az
	SNOW_GOLEM ay
	SPAWNER_MINECART Y
	SPECTRAL_ARROW aA
	SPIDER aB
	SQUID aC
	STRAY aD
	STRIDER aE
	TNT al
	TNT_MINECART Z
	TRADER_LLAMA aK
	TRIDENT aJ
	TROPICAL_FISH aL
	TURTLE aM
	VEX aN
	VILLAGER aO
	VINDICATOR aP
	WANDERING_TRADER aQ
	WITCH aR
	WITHER aS
	WITHER_SKELETON aT
	WITHER_SKULL aU
	WOLF aV
	ZOGLIN aW
	ZOMBIE aX
	ZOMBIE_HORSE aY
	ZOMBIE_VILLAGER aZ
	ZOMBIFIED_PIGLIN ba
	canSpawnFarFromPlayer bk
	category bf
	clientTrackingRange bl
	description bo
	descriptionId bn
	dimensions bq
	factory be
	fireImmune bj
	immuneTo bg
	lootTable bp
	serialize bh
	summon bi
	updateInterval bm
	by (Lnet/minecraft/nbt/CompoundTag;)Ljava/util/Optional; a
	byString (Ljava/lang/String;)Ljava/util/Optional; a
	canSerialize ()Z a
	canSpawnFarFromPlayer ()Z d
	canSummon ()Z b
	clientTrackingRange ()I m
	create (ILnet/minecraft/world/level/Level;)Lnet/minecraft/world/entity/Entity; a
	create (Lnet/minecraft/nbt/CompoundTag;Lnet/minecraft/world/level/Level;)Ljava/util/Optional; a
	create (Lnet/minecraft/world/level/Level;)Lnet/minecraft/world/entity/Entity; a
	create (Lnet/minecraft/world/level/Level;Lnet/minecraft/nbt/CompoundTag;Lnet/minecraft/network/chat/Component;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/MobSpawnType;ZZ)Lnet/minecraft/world/entity/Entity; b
	create (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/EntityType;)Lnet/minecraft/world/entity/Entity; a
	fireImmune ()Z c
	getAABB (DDD)Lnet/minecraft/world/phys/AABB; a
	getCategory ()Lnet/minecraft/world/entity/MobCategory; e
	getDefaultLootTable ()Lnet/minecraft/resources/ResourceLocation; i
	getDescription ()Lnet/minecraft/network/chat/Component; g
	getDescriptionId ()Ljava/lang/String; f
	getDimensions ()Lnet/minecraft/world/entity/EntityDimensions; l
	getHeight ()F k
	getKey (Lnet/minecraft/world/entity/EntityType;)Lnet/minecraft/resources/ResourceLocation; a
	getWidth ()F j
	getYOffset (Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;ZLnet/minecraft/world/phys/AABB;)D a
	is (Lnet/minecraft/tags/Tag;)Z a
	isBlockDangerous (Lnet/minecraft/world/level/block/state/BlockState;)Z a
	loadEntityRecursive (Lnet/minecraft/nbt/CompoundTag;Lnet/minecraft/world/level/Level;Ljava/util/function/Function;)Lnet/minecraft/world/entity/Entity; a
	loadStaticEntity (Lnet/minecraft/nbt/CompoundTag;Lnet/minecraft/world/level/Level;)Ljava/util/Optional; b
	register (Ljava/lang/String;Lnet/minecraft/world/entity/EntityType$Builder;)Lnet/minecraft/world/entity/EntityType; a
	spawn (Lnet/minecraft/world/level/Level;Lnet/minecraft/nbt/CompoundTag;Lnet/minecraft/network/chat/Component;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/MobSpawnType;ZZ)Lnet/minecraft/world/entity/Entity; a
	spawn (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/MobSpawnType;ZZ)Lnet/minecraft/world/entity/Entity; a
	toShortString ()Ljava/lang/String; h
	trackDeltas ()Z o
	updateCustomEntityTag (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/entity/Entity;Lnet/minecraft/nbt/CompoundTag;)V a
	updateInterval ()I n
net/minecraft/world/entity/EntityType$Builder aoq$a
	canSpawnFarFromPlayer g
	category b
	clientTrackingRange h
	dimensions j
	factory a
	fireImmune f
	immuneTo c
	serialize d
	summon e
	updateInterval i
	build (Ljava/lang/String;)Lnet/minecraft/world/entity/EntityType; a
	canSpawnFarFromPlayer ()Lnet/minecraft/world/entity/EntityType$Builder; d
	clientTrackingRange (I)Lnet/minecraft/world/entity/EntityType$Builder; a
	createNothing (Lnet/minecraft/world/entity/MobCategory;)Lnet/minecraft/world/entity/EntityType$Builder; a
	fireImmune ()Lnet/minecraft/world/entity/EntityType$Builder; c
	immuneTo ([Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/world/entity/EntityType$Builder; a
	noSave ()Lnet/minecraft/world/entity/EntityType$Builder; b
	noSummon ()Lnet/minecraft/world/entity/EntityType$Builder; a
	of (Lnet/minecraft/world/entity/EntityType$EntityFactory;Lnet/minecraft/world/entity/MobCategory;)Lnet/minecraft/world/entity/EntityType$Builder; a
	sized (FF)Lnet/minecraft/world/entity/EntityType$Builder; a
	updateInterval (I)Lnet/minecraft/world/entity/EntityType$Builder; b
net/minecraft/world/entity/EntityType$EntityFactory aoq$b
net/minecraft/world/entity/EquipmentSlot aor
	$VALUES k
	CHEST e
	FEET c
	HEAD f
	LEGS d
	MAINHAND a
	OFFHAND b
	filterFlag i
	index h
	name j
	type g
	byName (Ljava/lang/String;)Lnet/minecraft/world/entity/EquipmentSlot; a
	byTypeAndIndex (Lnet/minecraft/world/entity/EquipmentSlot$Type;I)Lnet/minecraft/world/entity/EquipmentSlot; a
	getFilterFlag ()I c
	getIndex ()I b
	getName ()Ljava/lang/String; d
	getType ()Lnet/minecraft/world/entity/EquipmentSlot$Type; a
net/minecraft/world/entity/EquipmentSlot$Type aor$a
	$VALUES c
	ARMOR b
	HAND a
net/minecraft/world/entity/ExperienceOrb aos
	age c
	followingPlayer g
	followingTime an
	health e
	throwTime d
	tickCount b
	value f
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	burn (I)V h
	defineSynchedData ()V e
	doWaterSplashEffect ()V aI
	durabilityToXp (I)I b
	getAddEntityPacket ()Lnet/minecraft/network/protocol/Packet; O
	getExperienceValue (I)I a
	getIcon ()I h
	getValue ()I g
	hurt (Lnet/minecraft/world/damagesource/DamageSource;F)Z a
	isAttackable ()Z bH
	isMovementNoisy ()Z ax
	playerTouch (Lnet/minecraft/world/entity/player/Player;)V a_
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	setUnderwaterMovement ()V i
	tick ()V j
	xpToDurability (I)I c
net/minecraft/world/entity/FlyingMob aot
	causeFallDamage (FF)Z b
	checkFallDamage (DZLnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/BlockPos;)V a
	onClimbable ()Z c_
	travel (Lnet/minecraft/world/phys/Vec3;)V f
net/minecraft/world/entity/HumanoidArm aou
	$VALUES d
	LEFT a
	RIGHT b
	name c
	getName ()Lnet/minecraft/network/chat/Component; b
	getOpposite ()Lnet/minecraft/world/entity/HumanoidArm; a
net/minecraft/world/entity/ItemBasedSteering aov
	boostTime b
	boostTimeAccessor e
	boostTimeTotal c
	boosting a
	entityData d
	hasSaddleAccessor f
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	boost (Ljava/util/Random;)Z a
	hasSaddle ()Z b
	onSynced ()V a
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	setSaddle (Z)V a
net/minecraft/world/entity/ItemSteerable aow
	boost ()Z P_
	getSteeringSpeed ()F O_
	travel (Lnet/minecraft/world/entity/Mob;Lnet/minecraft/world/entity/ItemBasedSteering;Lnet/minecraft/world/phys/Vec3;)Z a
	travelWithInput (Lnet/minecraft/world/phys/Vec3;)V a_
net/minecraft/world/entity/LightningBolt aox
	cause f
	flashes d
	life c
	seed b
	visualOnly e
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	defineSynchedData ()V e
	getAddEntityPacket ()Lnet/minecraft/network/protocol/Packet; O
	getCause ()Lnet/minecraft/server/level/ServerPlayer; g
	getSoundSource ()Lnet/minecraft/sounds/SoundSource; ct
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	setCause (Lnet/minecraft/server/level/ServerPlayer;)V d
	setVisualOnly (Z)V a
	shouldRenderAtSqrDistance (D)Z a
	spawnFire (I)V a
	tick ()V j
net/minecraft/world/entity/LivingEntity aoy
	DATA_ARROW_COUNT_ID bo
	DATA_EFFECT_AMBIENCE_ID g
	DATA_EFFECT_COLOR_ID f
	DATA_HEALTH_ID e
	DATA_LIVING_ENTITY_FLAGS an
	DATA_STINGER_COUNT_ID bp
	SLEEPING_DIMENSIONS ao
	SLEEPING_POS_ID bq
	SPEED_MODIFIER_SOUL_SPEED_UUID c
	SPEED_MODIFIER_SPRINTING d
	SPEED_MODIFIER_SPRINTING_UUID b
	absorptionAmount bD
	activeEffects bt
	animStep aS
	animStepO aT
	animationPosition aD
	animationSpeed aC
	animationSpeedOld aB
	attackAnim az
	attackStrengthTicker aA
	attributes br
	autoSpinAttackTicks bm
	brain bn
	combatTracker bs
	dead aO
	deathScore aV
	deathTime ax
	effectsDirty bw
	fallFlyTicks bl
	flyingSpeed aL
	hurtDir aw
	hurtDuration av
	hurtTime au
	invulnerableDuration aE
	jumping aX
	lastArmorItemStacks bv
	lastClimbablePos bF
	lastDamageSource bG
	lastDamageStamp bH
	lastHandItemStacks bu
	lastHurt aW
	lastHurtByMob bx
	lastHurtByMobTimestamp by
	lastHurtByPlayer aM
	lastHurtByPlayerTime aN
	lastHurtMob bz
	lastHurtMobTimestamp bA
	lastPos bE
	lerpHeadSteps bi
	lerpSteps bb
	lerpX bc
	lerpXRot bg
	lerpY bd
	lerpYRot bf
	lerpZ be
	lyHeadRot bh
	noActionTime aP
	noJumpDelay bC
	oAttackAnim ay
	oRun aQ
	removeArrowTime as
	removeStingerTime at
	rotA aG
	rotOffs aU
	run aR
	speed bB
	swimAmount bI
	swimAmountO bJ
	swingTime ar
	swinging ap
	swingingArm aq
	timeOffs aF
	useItem bj
	useItemRemaining bk
	xxa aY
	yBodyRot aH
	yBodyRotO aI
	yHeadRot aJ
	yHeadRotO aK
	yya aZ
	zza ba
	actuallyHurt (Lnet/minecraft/world/damagesource/DamageSource;F)V e
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	addEatEffect (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/LivingEntity;)V a
	addEffect (Lnet/minecraft/world/effect/MobEffectInstance;)Z c
	aiStep ()V k
	animateHurt ()V bi
	areAllEffectsAmbient (Ljava/util/Collection;)Z c
	attackable ()Z eh
	baseTick ()V ad
	blockUsingShield (Lnet/minecraft/world/entity/LivingEntity;)V e
	blockedByShield (Lnet/minecraft/world/entity/LivingEntity;)V f
	brainProvider ()Lnet/minecraft/world/entity/ai/Brain$Provider; cJ
	breakItem (Lnet/minecraft/world/item/ItemStack;)V g
	broadcastBreakEvent (Lnet/minecraft/world/InteractionHand;)V d
	broadcastBreakEvent (Lnet/minecraft/world/entity/EquipmentSlot;)V c
	calculateEntityAnimation (Lnet/minecraft/world/entity/LivingEntity;Z)V a
	calculateFallDamage (FF)I e
	canAttack (Lnet/minecraft/world/entity/LivingEntity;)Z d
	canAttack (Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/entity/ai/targeting/TargetingConditions;)Z a
	canAttackType (Lnet/minecraft/world/entity/EntityType;)Z a
	canBeAffected (Lnet/minecraft/world/effect/MobEffectInstance;)Z d
	canBreatheUnderwater ()Z cL
	canSee (Lnet/minecraft/world/entity/Entity;)Z D
	canSpawnSoulSpeedParticle ()Z cM
	canStandOnFluid (Lnet/minecraft/world/level/material/Fluid;)Z a
	canTakeItem (Lnet/minecraft/world/item/ItemStack;)Z e
	causeFallDamage (FF)Z b
	checkAutoSpinAttack (Lnet/minecraft/world/phys/AABB;Lnet/minecraft/world/phys/AABB;)V a
	checkBedExists ()Z z
	checkFallDamage (DZLnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/BlockPos;)V a
	checkTotemDeathProtection (Lnet/minecraft/world/damagesource/DamageSource;)Z f
	clearSleepingPos ()V ek
	collectEquipmentChanges ()Ljava/util/Map; r
	completeUsingItem ()V s
	createLivingAttributes ()Lnet/minecraft/world/entity/ai/attributes/AttributeSupplier$Builder; cK
	createLootContext (ZLnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/world/level/storage/loot/LootContext$Builder; a
	createWitherRose (Lnet/minecraft/world/entity/LivingEntity;)V g
	decreaseAirSupply (I)I l
	defineSynchedData ()V e
	detectEquipmentUpdates ()V q
	die (Lnet/minecraft/world/damagesource/DamageSource;)V a
	dismountVehicle (Lnet/minecraft/world/entity/Entity;)V a
	doAutoAttackOnTouch (Lnet/minecraft/world/entity/LivingEntity;)V h
	doHurtTarget (Lnet/minecraft/world/entity/Entity;)Z B
	doPush (Lnet/minecraft/world/entity/Entity;)V C
	dropAllDeathLoot (Lnet/minecraft/world/damagesource/DamageSource;)V d
	dropCustomDeathLoot (Lnet/minecraft/world/damagesource/DamageSource;IZ)V a
	dropEquipment ()V dm
	dropExperience ()V dn
	dropFromLootTable (Lnet/minecraft/world/damagesource/DamageSource;Z)V a
	eat (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/item/ItemStack;)Lnet/minecraft/world/item/ItemStack; a
	entityEventForEquipmentBreak (Lnet/minecraft/world/entity/EquipmentSlot;)B f
	forceAddEffect (Lnet/minecraft/world/effect/MobEffectInstance;)V e
	getAbsorptionAmount ()F dS
	getActiveEffects ()Ljava/util/Collection; dg
	getActiveEffectsMap ()Ljava/util/Map; dh
	getAddEntityPacket ()Lnet/minecraft/network/protocol/Packet; O
	getArmorCoverPercentage ()F dE
	getArmorSlots ()Ljava/lang/Iterable; bk
	getArmorValue ()I dt
	getArrowCount ()I dx
	getAttackAnim (F)F o
	getAttribute (Lnet/minecraft/world/entity/ai/attributes/Attribute;)Lnet/minecraft/world/entity/ai/attributes/AttributeInstance; a
	getAttributeBaseValue (Lnet/minecraft/world/entity/ai/attributes/Attribute;)D c
	getAttributeValue (Lnet/minecraft/world/entity/ai/attributes/Attribute;)D b
	getAttributes ()Lnet/minecraft/world/entity/ai/attributes/AttributeMap; dA
	getBedOrientation ()Lnet/minecraft/core/Direction; en
	getBlockSpeedFactor ()F am
	getBrain ()Lnet/minecraft/world/entity/ai/Brain; cI
	getCombatTracker ()Lnet/minecraft/world/damagesource/CombatTracker; du
	getCurrentSwingDuration ()I o
	getDamageAfterArmorAbsorb (Lnet/minecraft/world/damagesource/DamageSource;F)F c
	getDamageAfterMagicAbsorb (Lnet/minecraft/world/damagesource/DamageSource;F)F d
	getDeathSound ()Lnet/minecraft/sounds/SoundEvent; dp
	getDimensions (Lnet/minecraft/world/entity/Pose;)Lnet/minecraft/world/entity/EntityDimensions; a
	getDismountPoses ()Lcom/google/common/collect/ImmutableList; ei
	getDrinkingSound (Lnet/minecraft/world/item/ItemStack;)Lnet/minecraft/sounds/SoundEvent; c
	getEatingSound (Lnet/minecraft/world/item/ItemStack;)Lnet/minecraft/sounds/SoundEvent; d
	getEffect (Lnet/minecraft/world/effect/MobEffect;)Lnet/minecraft/world/effect/MobEffectInstance; b
	getExperienceReward (Lnet/minecraft/world/entity/player/Player;)I d
	getEyeHeight (Lnet/minecraft/world/entity/Pose;Lnet/minecraft/world/entity/EntityDimensions;)F a
	getFallDamageSound (I)Lnet/minecraft/sounds/SoundEvent; o
	getFallFlyingTicks ()I ef
	getFeetBlockState ()Lnet/minecraft/world/level/block/state/BlockState; dr
	getFluidFallingAdjustedMovement (DZLnet/minecraft/world/phys/Vec3;)Lnet/minecraft/world/phys/Vec3; a
	getFrictionInfluencedSpeed (F)F q
	getHandSlots ()Ljava/lang/Iterable; bj
	getHealth ()F dj
	getHurtSound (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEvent; e
	getItemBySlot (Lnet/minecraft/world/entity/EquipmentSlot;)Lnet/minecraft/world/item/ItemStack; b
	getItemInHand (Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/item/ItemStack; b
	getJumpPower ()F dI
	getKillCredit ()Lnet/minecraft/world/entity/LivingEntity; dv
	getLastArmorItem (Lnet/minecraft/world/entity/EquipmentSlot;)Lnet/minecraft/world/item/ItemStack; d
	getLastClimbablePos ()Ljava/util/Optional; dq
	getLastDamageSource ()Lnet/minecraft/world/damagesource/DamageSource; dl
	getLastHandItem (Lnet/minecraft/world/entity/EquipmentSlot;)Lnet/minecraft/world/item/ItemStack; e
	getLastHurtByMob ()Lnet/minecraft/world/entity/LivingEntity; cY
	getLastHurtByMobTimestamp ()I cZ
	getLastHurtMob ()Lnet/minecraft/world/entity/LivingEntity; da
	getLastHurtMobTimestamp ()I db
	getLocalBoundsForPose (Lnet/minecraft/world/entity/Pose;)Lnet/minecraft/world/phys/AABB; f
	getLootTable ()Lnet/minecraft/resources/ResourceLocation; do
	getMainArm ()Lnet/minecraft/world/entity/HumanoidArm; dU
	getMainHandItem ()Lnet/minecraft/world/item/ItemStack; dC
	getMaxHealth ()F dw
	getMobType ()Lnet/minecraft/world/entity/MobType; dB
	getNoActionTime ()I dc
	getOffhandItem ()Lnet/minecraft/world/item/ItemStack; dD
	getProjectile (Lnet/minecraft/world/item/ItemStack;)Lnet/minecraft/world/item/ItemStack; f
	getRandom ()Ljava/util/Random; cX
	getScale ()F cR
	getSleepingPos ()Ljava/util/Optional; ej
	getSoundVolume ()F dF
	getSpeed ()F dM
	getStandingEyeHeight (Lnet/minecraft/world/entity/Pose;Lnet/minecraft/world/entity/EntityDimensions;)F b
	getStingerCount ()I dy
	getSwimAmount (F)F a
	getTicksUsingItem ()I dZ
	getUseItem ()Lnet/minecraft/world/item/ItemStack; dX
	getUseItemRemainingTicks ()I dY
	getUsedItemHand ()Lnet/minecraft/world/InteractionHand; dW
	getViewYRot (F)F h
	getVisibilityPercent (Lnet/minecraft/world/entity/Entity;)D A
	getVoicePitch ()F dG
	getWaterSlowDown ()F dL
	getYHeadRot ()F bG
	goDownInWater ()V dK
	handleEntityEvent (B)V a
	handleEquipmentChanges (Ljava/util/Map;)V b
	handleHandSwap (Ljava/util/Map;)V a
	handleOnClimbable (Lnet/minecraft/world/phys/Vec3;)Lnet/minecraft/world/phys/Vec3; g
	handleRelativeFrictionAndCalculateMovement (Lnet/minecraft/world/phys/Vec3;F)Lnet/minecraft/world/phys/Vec3; a
	hasEffect (Lnet/minecraft/world/effect/MobEffect;)Z a
	hasItemInSlot (Lnet/minecraft/world/entity/EquipmentSlot;)Z a
	heal (F)V b
	hurt (Lnet/minecraft/world/damagesource/DamageSource;F)Z a
	hurtArmor (Lnet/minecraft/world/damagesource/DamageSource;F)V b
	hurtCurrentlyUsedShield (F)V m
	increaseAirSupply (I)I m
	isAffectedByFluids ()Z cS
	isAffectedByPotions ()Z eg
	isAlive ()Z aU
	isAlwaysExperienceDropper ()Z cW
	isAutoSpinAttack ()Z dQ
	isBaby ()Z x_
	isBlocking ()Z ec
	isDamageSourceBlocked (Lnet/minecraft/world/damagesource/DamageSource;)Z g
	isDeadOrDying ()Z dk
	isEffectiveAi ()Z dR
	isFallFlying ()Z ee
	isHolding (Ljava/util/function/Predicate;)Z a
	isHolding (Lnet/minecraft/world/item/Item;)Z a
	isImmobile ()Z dH
	isInWall ()Z aV
	isInvertedHealAndHarm ()Z di
	isPickable ()Z aQ
	isPushable ()Z aR
	isSensitiveToWater ()Z dN
	isSleeping ()Z el
	isSuppressingSlidingDownLadder ()Z ed
	isUsingItem ()Z dV
	isVisuallySwimming ()Z by
	jumpFromGround ()V dJ
	jumpInLiquid (Lnet/minecraft/tags/Tag;)V c
	kill ()V X
	knockback (FDD)V a
	lerpHeadTo (FI)V a
	lerpTo (DDDFFIZ)V a
	lookAt (Lnet/minecraft/commands/arguments/EntityAnchorArgument$Anchor;Lnet/minecraft/world/phys/Vec3;)V a
	makeBrain (Lcom/mojang/serialization/Dynamic;)Lnet/minecraft/world/entity/ai/Brain; a
	markHurt ()V aP
	onChangedBlock (Lnet/minecraft/core/BlockPos;)V c
	onClimbable ()Z c_
	onEffectAdded (Lnet/minecraft/world/effect/MobEffectInstance;)V a
	onEffectRemoved (Lnet/minecraft/world/effect/MobEffectInstance;)V b
	onEffectUpdated (Lnet/minecraft/world/effect/MobEffectInstance;Z)V a
	onEnterCombat ()V g
	onItemPickup (Lnet/minecraft/world/entity/item/ItemEntity;)V a
	onLeaveCombat ()V h
	onSoulSpeedBlock ()Z cO
	onSyncedDataUpdated (Lnet/minecraft/network/syncher/EntityDataAccessor;)V a
	outOfWorld ()V ai
	playBlockFallSound ()V ds
	playEquipSound (Lnet/minecraft/world/item/ItemStack;)V b
	playHurtSound (Lnet/minecraft/world/damagesource/DamageSource;)V c
	push (Lnet/minecraft/world/entity/Entity;)V i
	pushEntities ()V dP
	randomTeleport (DDDZ)Z a
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	releaseUsingItem ()V ea
	removeAllEffects ()Z df
	removeEffect (Lnet/minecraft/world/effect/MobEffect;)Z d
	removeEffectNoUpdate (Lnet/minecraft/world/effect/MobEffect;)Lnet/minecraft/world/effect/MobEffectInstance; c
	removeEffectParticles ()V de
	removeSoulSpeed ()V cP
	rideTick ()V aW
	rideableUnderWater ()Z bp
	serverAiStep ()V dO
	setAbsorptionAmount (F)V p
	setArrowCount (I)V p
	setHealth (F)V c
	setItemInHand (Lnet/minecraft/world/InteractionHand;Lnet/minecraft/world/item/ItemStack;)V a
	setItemSlot (Lnet/minecraft/world/entity/EquipmentSlot;Lnet/minecraft/world/item/ItemStack;)V a
	setJumping (Z)V o
	setLastArmorItem (Lnet/minecraft/world/entity/EquipmentSlot;Lnet/minecraft/world/item/ItemStack;)V b
	setLastHandItem (Lnet/minecraft/world/entity/EquipmentSlot;Lnet/minecraft/world/item/ItemStack;)V c
	setLastHurtByMob (Lnet/minecraft/world/entity/LivingEntity;)V a
	setLastHurtByPlayer (Lnet/minecraft/world/entity/player/Player;)V e
	setLastHurtMob (Lnet/minecraft/world/entity/Entity;)V z
	setLivingEntityFlag (IZ)V c
	setNoActionTime (I)V n
	setOnGround (Z)V c
	setPosToBed (Lnet/minecraft/core/BlockPos;)V a
	setRecordPlayingNearby (Lnet/minecraft/core/BlockPos;Z)V a
	setSleepingPos (Lnet/minecraft/core/BlockPos;)V e
	setSpeed (F)V n
	setSprinting (Z)V g
	setStingerCount (I)V q
	setYBodyRot (F)V l
	setYHeadRot (F)V k
	shouldDropExperience ()Z cU
	shouldDropLoot ()Z cV
	shouldRemoveSoulSpeed (Lnet/minecraft/world/level/block/state/BlockState;)Z b
	shouldShowName ()Z bX
	shouldTriggerItemUseEffects ()Z v
	spawnItemParticles (Lnet/minecraft/world/item/ItemStack;I)V a
	spawnSoulSpeedParticle ()V cN
	startAutoSpinAttack (I)V r
	startSleeping (Lnet/minecraft/core/BlockPos;)V b
	startUsingItem (Lnet/minecraft/world/InteractionHand;)V c
	stopRiding ()V l
	stopSleeping ()V em
	stopUsingItem ()V eb
	swapHandItems ()V p
	swing (Lnet/minecraft/world/InteractionHand;)V a
	swing (Lnet/minecraft/world/InteractionHand;Z)V a
	take (Lnet/minecraft/world/entity/Entity;I)V a
	tick ()V j
	tickDeath ()V cT
	tickEffects ()V dd
	tickHeadTurn (FF)F f
	trapdoorUsableAsLadder (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Z b
	travel (Lnet/minecraft/world/phys/Vec3;)V f
	triggerItemUseEffects (Lnet/minecraft/world/item/ItemStack;I)V b
	tryAddSoulSpeed ()V cQ
	updateEffectVisibility ()V dT
	updateFallFlying ()V t
	updateInvisibilityStatus ()V C
	updateSwimAmount ()V x
	updateSwingTime ()V dz
	updatingUsingItem ()V u
net/minecraft/world/entity/Mob aoz
	DATA_MOB_FLAGS_ID b
	ambientSoundTime e
	armorDropChances bu
	armorItems bx
	bodyRotationControl c
	canPickUpLoot by
	delayedLeashHolderId bE
	goalSelector br
	handDropChances bt
	handItems bw
	jumpControl bp
	leashHolder bD
	leashInfoTag bF
	lookControl g
	lootTable bB
	lootTableSeed bC
	moveControl bo
	navigation bq
	pathfindingMalus bA
	persistenceRequired bz
	restrictCenter bG
	restrictRadius bH
	sensing bv
	target d
	targetSelector bs
	xpReward f
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	aiStep ()V k
	ate ()V B
	baseTick ()V ad
	canAttack (Lnet/minecraft/world/entity/LivingEntity;)Z d
	canAttackType (Lnet/minecraft/world/entity/EntityType;)Z a
	canBeControlledByRider ()Z es
	canBeLeashed (Lnet/minecraft/world/entity/player/Player;)Z a
	canCutCorner (Lnet/minecraft/world/level/pathfinder/BlockPathTypes;)Z b
	canFireProjectileWeapon (Lnet/minecraft/world/item/ProjectileWeaponItem;)Z a
	canHoldItem (Lnet/minecraft/world/item/ItemStack;)Z h
	canPickUpLoot ()Z eu
	canReplaceCurrentItem (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/item/ItemStack;)Z a
	canReplaceEqualItem (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/item/ItemStack;)Z b
	canTakeItem (Lnet/minecraft/world/item/ItemStack;)Z e
	checkAndHandleImportantInteractions (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResult; c
	checkDespawn ()V cH
	checkMobSpawnRules (Lnet/minecraft/world/entity/EntityType;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/world/entity/MobSpawnType;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)Z a
	checkSpawnObstruction (Lnet/minecraft/world/level/LevelReader;)Z a
	checkSpawnRules (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/world/entity/MobSpawnType;)Z a
	clearRestriction ()V ez
	convertTo (Lnet/minecraft/world/entity/EntityType;)Lnet/minecraft/world/entity/Mob; b
	createBodyControl ()Lnet/minecraft/world/entity/ai/control/BodyRotationControl; r
	createLootContext (ZLnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/world/level/storage/loot/LootContext$Builder; a
	createMobAttributes ()Lnet/minecraft/world/entity/ai/attributes/AttributeSupplier$Builder; p
	createNavigation (Lnet/minecraft/world/level/Level;)Lnet/minecraft/world/entity/ai/navigation/PathNavigation; b
	customServerAiStep ()V N
	defineSynchedData ()V e
	doHurtTarget (Lnet/minecraft/world/entity/Entity;)Z B
	dropCustomDeathLoot (Lnet/minecraft/world/damagesource/DamageSource;IZ)V a
	dropFromLootTable (Lnet/minecraft/world/damagesource/DamageSource;Z)V a
	dropLeash (ZZ)V a
	equipItemIfPossible (Lnet/minecraft/world/item/ItemStack;)Z g
	finalizeSpawn (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/world/DifficultyInstance;Lnet/minecraft/world/entity/MobSpawnType;Lnet/minecraft/world/entity/SpawnGroupData;Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/world/entity/SpawnGroupData; a
	getAmbientSound ()Lnet/minecraft/sounds/SoundEvent; I
	getAmbientSoundInterval ()I D
	getArmorSlots ()Ljava/lang/Iterable; bk
	getDefaultLootTable ()Lnet/minecraft/resources/ResourceLocation; J
	getEquipmentDropChance (Lnet/minecraft/world/entity/EquipmentSlot;)F e
	getEquipmentForSlot (Lnet/minecraft/world/entity/EquipmentSlot;I)Lnet/minecraft/world/item/Item; a
	getEquipmentSlotForItem (Lnet/minecraft/world/item/ItemStack;)Lnet/minecraft/world/entity/EquipmentSlot; j
	getExperienceReward (Lnet/minecraft/world/entity/player/Player;)I d
	getHandSlots ()Ljava/lang/Iterable; bj
	getHeadRotSpeed ()I eq
	getItemBySlot (Lnet/minecraft/world/entity/EquipmentSlot;)Lnet/minecraft/world/item/ItemStack; b
	getJumpControl ()Lnet/minecraft/world/entity/ai/control/JumpControl; v
	getLeashHolder ()Lnet/minecraft/world/entity/Entity; eD
	getLookControl ()Lnet/minecraft/world/entity/ai/control/LookControl; t
	getLootTable ()Lnet/minecraft/resources/ResourceLocation; do
	getMainArm ()Lnet/minecraft/world/entity/HumanoidArm; dU
	getMaxFallDistance ()I bL
	getMaxHeadXRot ()I eo
	getMaxHeadYRot ()I ep
	getMaxSpawnClusterSize ()I er
	getMoveControl ()Lnet/minecraft/world/entity/ai/control/MoveControl; u
	getNavigation ()Lnet/minecraft/world/entity/ai/navigation/PathNavigation; x
	getPathfindingMalus (Lnet/minecraft/world/level/pathfinder/BlockPathTypes;)F a
	getRestrictCenter ()Lnet/minecraft/core/BlockPos; ex
	getRestrictRadius ()F ey
	getSensing ()Lnet/minecraft/world/entity/ai/sensing/Sensing; z
	getTarget ()Lnet/minecraft/world/entity/LivingEntity; A
	handleEntityEvent (B)V a
	hasRestriction ()Z eA
	interact (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResult; a
	isAggressive ()Z eG
	isControlledByLocalInstance ()Z cr
	isEffectiveAi ()Z dR
	isLeashed ()Z eC
	isLeftHanded ()Z eF
	isMaxGroupSizeReached (I)Z c
	isNoAi ()Z eE
	isPersistenceRequired ()Z ev
	isSunBurnTick ()Z eH
	isValidSlotForItem (Lnet/minecraft/world/entity/EquipmentSlot;Lnet/minecraft/world/item/ItemStack;)Z c
	isWithinRestriction ()Z ew
	isWithinRestriction (Lnet/minecraft/core/BlockPos;)Z a
	jumpInLiquid (Lnet/minecraft/tags/Tag;)V c
	lookAt (Lnet/minecraft/world/entity/Entity;FF)V a
	maybeDisableShield (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/item/ItemStack;)V a
	mobInteract (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResult; b
	onOffspringSpawnedFromEgg (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/entity/Mob;)V a
	pickUpItem (Lnet/minecraft/world/entity/item/ItemEntity;)V b
	playAmbientSound ()V F
	playHurtSound (Lnet/minecraft/world/damagesource/DamageSource;)V c
	populateDefaultEquipmentEnchantments (Lnet/minecraft/world/DifficultyInstance;)V b
	populateDefaultEquipmentSlots (Lnet/minecraft/world/DifficultyInstance;)V a
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	registerGoals ()V o
	removeAfterChangingDimensions ()V bJ
	removeFreeWill ()V eI
	removeWhenFarAway (D)Z h
	requiresCustomPersistence ()Z K
	resetAmbientSoundTime ()V eJ
	restoreLeashFromSave ()V eK
	restrictTo (Lnet/minecraft/core/BlockPos;I)V a
	rotlerp (FFF)F a
	sendDebugPackets ()V M
	serverAiStep ()V dO
	setAggressive (Z)V s
	setBaby (Z)V a
	setCanPickUpLoot (Z)V p
	setDelayedLeashHolderId (I)V d
	setDropChance (Lnet/minecraft/world/entity/EquipmentSlot;F)V a
	setGuaranteedDrop (Lnet/minecraft/world/entity/EquipmentSlot;)V d
	setItemSlot (Lnet/minecraft/world/entity/EquipmentSlot;Lnet/minecraft/world/item/ItemStack;)V a
	setItemSlotAndDropWhenKilled (Lnet/minecraft/world/entity/EquipmentSlot;Lnet/minecraft/world/item/ItemStack;)V b
	setLeashedTo (Lnet/minecraft/world/entity/Entity;Z)V b
	setLeftHanded (Z)V r
	setNoAi (Z)V q
	setPathfindingMalus (Lnet/minecraft/world/level/pathfinder/BlockPathTypes;F)V a
	setPersistenceRequired ()V et
	setSlot (ILnet/minecraft/world/item/ItemStack;)Z a_
	setSpeed (F)V n
	setTarget (Lnet/minecraft/world/entity/LivingEntity;)V i
	setXxa (F)V s
	setYya (F)V r
	setZza (F)V q
	shouldDespawnInPeaceful ()Z L
	shouldPassengersInheritMalus ()Z q
	spawnAnim ()V G
	startRiding (Lnet/minecraft/world/entity/Entity;Z)Z a
	tick ()V j
	tickHeadTurn (FF)F f
	tickLeash ()V eB
	updateControlFlags ()V H
	wantsToPickUp (Lnet/minecraft/world/item/ItemStack;)Z i
net/minecraft/world/entity/MobCategory apa
	$VALUES o
	AMBIENT c
	BY_NAME h
	CODEC g
	CREATURE b
	MISC f
	MONSTER a
	WATER_AMBIENT e
	WATER_CREATURE d
	despawnDistance n
	isFriendly j
	isPersistent k
	max i
	name l
	noDespawnDistance m
	byName (Ljava/lang/String;)Lnet/minecraft/world/entity/MobCategory; a
	getDespawnDistance ()I f
	getMaxInstancesPerChunk ()I c
	getName ()Ljava/lang/String; b
	getNoDespawnDistance ()I g
	getSerializedName ()Ljava/lang/String; a
	isFriendly ()Z d
	isPersistent ()Z e
net/minecraft/world/entity/MobSpawnType apb
	$VALUES q
	BREEDING e
	BUCKET l
	CHUNK_GENERATION b
	COMMAND n
	CONVERSION i
	DISPENSER o
	EVENT h
	JOCKEY g
	MOB_SUMMONED f
	NATURAL a
	PATROL p
	REINFORCEMENT j
	SPAWNER c
	SPAWN_EGG m
	STRUCTURE d
	TRIGGERED k
net/minecraft/world/entity/MobType apc
	ARTHROPOD c
	ILLAGER d
	UNDEAD b
	UNDEFINED a
	WATER e
net/minecraft/world/entity/MoverType apd
	$VALUES f
	PISTON c
	PLAYER b
	SELF a
	SHULKER e
	SHULKER_BOX d
net/minecraft/world/entity/NeutralMob ape
	addPersistentAngerSaveData (Lnet/minecraft/nbt/CompoundTag;)V c
	forgetCurrentTargetAndRefreshUniversalAnger ()V J_
	getLastHurtByMob ()Lnet/minecraft/world/entity/LivingEntity; cY
	getPersistentAngerTarget ()Ljava/util/UUID; G_
	getRemainingPersistentAngerTime ()I F_
	getTarget ()Lnet/minecraft/world/entity/LivingEntity; A
	isAngry ()Z I_
	isAngryAt (Lnet/minecraft/world/entity/LivingEntity;)Z b
	isAngryAtAllPlayers (Lnet/minecraft/world/level/Level;)Z a
	playerDied (Lnet/minecraft/world/entity/player/Player;)V b
	readPersistentAngerSaveData (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/nbt/CompoundTag;)V a
	setLastHurtByMob (Lnet/minecraft/world/entity/LivingEntity;)V a
	setLastHurtByPlayer (Lnet/minecraft/world/entity/player/Player;)V e
	setPersistentAngerTarget (Ljava/util/UUID;)V a
	setRemainingPersistentAngerTime (I)V a_
	setTarget (Lnet/minecraft/world/entity/LivingEntity;)V i
	startPersistentAngerTimer ()V H_
	stopBeingAngry ()V K_
	updatePersistentAnger (Lnet/minecraft/server/level/ServerLevel;Z)V a
net/minecraft/world/entity/OwnableEntity apf
	getOwner ()Lnet/minecraft/world/entity/Entity; C_
	getOwnerUUID ()Ljava/util/UUID; B_
net/minecraft/world/entity/PathfinderMob apg
	checkSpawnRules (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/world/entity/MobSpawnType;)Z a
	followLeashSpeed ()D eK
	getWalkTargetValue (Lnet/minecraft/core/BlockPos;)F f
	getWalkTargetValue (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/LevelReader;)F a
	isPathFinding ()Z eJ
	onLeashDistance (F)V t
	tickLeash ()V eB
net/minecraft/world/entity/PlayerRideable aph
net/minecraft/world/entity/PlayerRideableJumping api
	canJump ()Z Q_
	getJumpRidingScale ()F R_
	handleStartJump (I)V b
	handleStopJump ()V c
	onPlayerJump (I)V b_
	setJumpRidingScale (F)V a_
net/minecraft/world/entity/Pose apj
	$VALUES h
	CROUCHING f
	DYING g
	FALL_FLYING b
	SLEEPING c
	SPIN_ATTACK e
	STANDING a
	SWIMMING d
net/minecraft/world/entity/PowerableMob apk
	isPowered ()Z T_
net/minecraft/world/entity/ReputationEventHandler apl
	onReputationEventFrom (Lnet/minecraft/world/entity/ai/village/ReputationEventType;Lnet/minecraft/world/entity/Entity;)V a
net/minecraft/world/entity/Saddleable apm
	equipSaddle (Lnet/minecraft/sounds/SoundSource;)V a
	isSaddleable ()Z M_
	isSaddled ()Z N_
net/minecraft/world/entity/Shearable apn
	readyForShearing ()Z L_
	shear (Lnet/minecraft/sounds/SoundSource;)V a
net/minecraft/world/entity/SpawnGroupData apo
net/minecraft/world/entity/SpawnPlacements app
	DATA_BY_TYPE a
	checkSpawnRules (Lnet/minecraft/world/entity/EntityType;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/world/entity/MobSpawnType;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)Z a
	getHeightmapType (Lnet/minecraft/world/entity/EntityType;)Lnet/minecraft/world/level/levelgen/Heightmap$Types; b
	getPlacementType (Lnet/minecraft/world/entity/EntityType;)Lnet/minecraft/world/entity/SpawnPlacements$Type; a
	register (Lnet/minecraft/world/entity/EntityType;Lnet/minecraft/world/entity/SpawnPlacements$Type;Lnet/minecraft/world/level/levelgen/Heightmap$Types;Lnet/minecraft/world/entity/SpawnPlacements$SpawnPredicate;)V a
net/minecraft/world/entity/SpawnPlacements$Data app$a
	heightMap a
	placement b
	predicate c
net/minecraft/world/entity/SpawnPlacements$SpawnPredicate app$b
net/minecraft/world/entity/SpawnPlacements$Type app$c
	$VALUES e
	IN_LAVA d
	IN_WATER b
	NO_RESTRICTIONS c
	ON_GROUND a
net/minecraft/world/entity/TamableAnimal apq
	DATA_FLAGS_ID bv
	DATA_OWNERUUID_ID bw
	orderedToSit bx
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	canAttack (Lnet/minecraft/world/entity/LivingEntity;)Z d
	canBeLeashed (Lnet/minecraft/world/entity/player/Player;)Z a
	defineSynchedData ()V e
	die (Lnet/minecraft/world/damagesource/DamageSource;)V a
	getOwner ()Lnet/minecraft/world/entity/Entity; C_
	getOwner ()Lnet/minecraft/world/entity/LivingEntity; eO
	getOwnerUUID ()Ljava/util/UUID; B_
	getTeam ()Lnet/minecraft/world/scores/Team; bC
	handleEntityEvent (B)V a
	isAlliedTo (Lnet/minecraft/world/entity/Entity;)Z r
	isInSittingPose ()Z eN
	isOrderedToSit ()Z eP
	isOwnedBy (Lnet/minecraft/world/entity/LivingEntity;)Z j
	isTame ()Z eL
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	reassessTameGoals ()V eM
	setInSittingPose (Z)V v
	setOrderedToSit (Z)V w
	setOwnerUUID (Ljava/util/UUID;)V b
	setTame (Z)V u
	spawnTamingParticles (Z)V t
	tame (Lnet/minecraft/world/entity/player/Player;)V f
	wantsToAttack (Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/entity/LivingEntity;)Z a
net/minecraft/world/entity/ai/Brain apr
	LOGGER a
	activeActivities j
	activityMemoriesToEraseWhenStopped h
	activityRequirements g
	availableBehaviorsByPriority e
	codec b
	coreActivities i
	defaultActivity k
	lastScheduleUpdate l
	memories c
	schedule f
	sensors d
	activityRequirementsAreMet (Lnet/minecraft/world/entity/schedule/Activity;)Z f
	addActivity (Lnet/minecraft/world/entity/schedule/Activity;ILcom/google/common/collect/ImmutableList;)V a
	addActivity (Lnet/minecraft/world/entity/schedule/Activity;Lcom/google/common/collect/ImmutableList;)V a
	addActivityAndRemoveMemoriesWhenStopped (Lnet/minecraft/world/entity/schedule/Activity;Lcom/google/common/collect/ImmutableList;Ljava/util/Set;Ljava/util/Set;)V a
	addActivityAndRemoveMemoryWhenStopped (Lnet/minecraft/world/entity/schedule/Activity;ILcom/google/common/collect/ImmutableList;Lnet/minecraft/world/entity/ai/memory/MemoryModuleType;)V a
	addActivityWithConditions (Lnet/minecraft/world/entity/schedule/Activity;Lcom/google/common/collect/ImmutableList;Ljava/util/Set;)V a
	checkMemory (Lnet/minecraft/world/entity/ai/memory/MemoryModuleType;Lnet/minecraft/world/entity/ai/memory/MemoryStatus;)Z a
	codec (Ljava/util/Collection;Ljava/util/Collection;)Lcom/mojang/serialization/Codec; b
	copyWithoutBehaviors ()Lnet/minecraft/world/entity/ai/Brain; h
	createPriorityPairs (ILcom/google/common/collect/ImmutableList;)Lcom/google/common/collect/ImmutableList; a
	eraseMemoriesForOtherActivitesThan (Lnet/minecraft/world/entity/schedule/Activity;)V e
	eraseMemory (Lnet/minecraft/world/entity/ai/memory/MemoryModuleType;)V b
	forgetOutdatedMemories ()V k
	getActiveActivities ()Ljava/util/Set; c
	getActiveNonCoreActivity ()Ljava/util/Optional; f
	getMemories ()Ljava/util/Map; a
	getMemory (Lnet/minecraft/world/entity/ai/memory/MemoryModuleType;)Ljava/util/Optional; c
	getRunningBehaviors ()Ljava/util/List; d
	getSchedule ()Lnet/minecraft/world/entity/schedule/Schedule; b
	hasMemoryValue (Lnet/minecraft/world/entity/ai/memory/MemoryModuleType;)Z a
	isActive (Lnet/minecraft/world/entity/schedule/Activity;)Z c
	isEmptyCollection (Ljava/lang/Object;)Z a
	isMemoryValue (Lnet/minecraft/world/entity/ai/memory/MemoryModuleType;Ljava/lang/Object;)Z b
	memories ()Ljava/util/stream/Stream; j
	provider (Ljava/util/Collection;Ljava/util/Collection;)Lnet/minecraft/world/entity/ai/Brain$Provider; a
	removeAllBehaviors ()V g
	serializeStart (Lcom/mojang/serialization/DynamicOps;)Lcom/mojang/serialization/DataResult; a
	setActiveActivity (Lnet/minecraft/world/entity/schedule/Activity;)V d
	setActiveActivityIfPossible (Lnet/minecraft/world/entity/schedule/Activity;)V a
	setActiveActivityToFirstValid (Ljava/util/List;)V a
	setCoreActivities (Ljava/util/Set;)V a
	setDefaultActivity (Lnet/minecraft/world/entity/schedule/Activity;)V b
	setMemory (Lnet/minecraft/world/entity/ai/memory/MemoryModuleType;Ljava/lang/Object;)V a
	setMemory (Lnet/minecraft/world/entity/ai/memory/MemoryModuleType;Ljava/util/Optional;)V a
	setMemoryInternal (Lnet/minecraft/world/entity/ai/memory/MemoryModuleType;Ljava/util/Optional;)V b
	setMemoryWithExpiry (Lnet/minecraft/world/entity/ai/memory/MemoryModuleType;Ljava/lang/Object;J)V a
	setSchedule (Lnet/minecraft/world/entity/schedule/Schedule;)V a
	startEachNonRunningBehavior (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)V d
	stopAll (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)V b
	tick (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)V a
	tickEachRunningBehavior (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)V e
	tickSensors (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)V c
	updateActivityFromSchedule (JJ)V a
	useDefaultActivity ()V e
net/minecraft/world/entity/ai/Brain$MemoryValue apr$a
	type a
	value b
	createUnchecked (Lnet/minecraft/world/entity/ai/memory/MemoryModuleType;Ljava/util/Optional;)Lnet/minecraft/world/entity/ai/Brain$MemoryValue; b
	serialize (Lcom/mojang/serialization/DynamicOps;Lcom/mojang/serialization/RecordBuilder;)V a
	setMemoryInternal (Lnet/minecraft/world/entity/ai/Brain;)V a
net/minecraft/world/entity/ai/Brain$Provider apr$b
	codec c
	memoryTypes a
	sensorTypes b
	makeBrain (Lcom/mojang/serialization/Dynamic;)Lnet/minecraft/world/entity/ai/Brain; a
net/minecraft/world/entity/ai/attributes/Attribute aps
	defaultValue a
	descriptionId c
	syncable b
	getDefaultValue ()D a
	getDescriptionId ()Ljava/lang/String; c
	isClientSyncable ()Z b
	sanitizeValue (D)D a
	setSyncable (Z)Lnet/minecraft/world/entity/ai/attributes/Attribute; a
net/minecraft/world/entity/ai/attributes/AttributeInstance apt
	attribute a
	baseValue e
	cachedValue g
	dirty f
	modifierById c
	modifiersByOperation b
	onDirty h
	permanentModifiers d
	addModifier (Lnet/minecraft/world/entity/ai/attributes/AttributeModifier;)V e
	addPermanentModifier (Lnet/minecraft/world/entity/ai/attributes/AttributeModifier;)V c
	addTransientModifier (Lnet/minecraft/world/entity/ai/attributes/AttributeModifier;)V b
	calculateValue ()D h
	getAttribute ()Lnet/minecraft/world/entity/ai/attributes/Attribute; a
	getBaseValue ()D b
	getModifier (Ljava/util/UUID;)Lnet/minecraft/world/entity/ai/attributes/AttributeModifier; a
	getModifiers ()Ljava/util/Set; c
	getModifiers (Lnet/minecraft/world/entity/ai/attributes/AttributeModifier$Operation;)Ljava/util/Set; a
	getModifiersOrEmpty (Lnet/minecraft/world/entity/ai/attributes/AttributeModifier$Operation;)Ljava/util/Collection; b
	getValue ()D f
	hasModifier (Lnet/minecraft/world/entity/ai/attributes/AttributeModifier;)Z a
	load (Lnet/minecraft/nbt/CompoundTag;)V a
	removeModifier (Ljava/util/UUID;)V b
	removeModifier (Lnet/minecraft/world/entity/ai/attributes/AttributeModifier;)V d
	removeModifiers ()V e
	removePermanentModifier (Ljava/util/UUID;)Z c
	replaceFrom (Lnet/minecraft/world/entity/ai/attributes/AttributeInstance;)V a
	save ()Lnet/minecraft/nbt/CompoundTag; g
	setBaseValue (D)V a
	setDirty ()V d
net/minecraft/world/entity/ai/attributes/AttributeMap apu
	LOGGER a
	attributes b
	dirtyAttributes c
	supplier d
	addTransientAttributeModifiers (Lcom/google/common/collect/Multimap;)V b
	assignValues (Lnet/minecraft/world/entity/ai/attributes/AttributeMap;)V a
	getBaseValue (Lnet/minecraft/world/entity/ai/attributes/Attribute;)D d
	getDirtyAttributes ()Ljava/util/Set; a
	getInstance (Lnet/minecraft/world/entity/ai/attributes/Attribute;)Lnet/minecraft/world/entity/ai/attributes/AttributeInstance; a
	getModifierValue (Lnet/minecraft/world/entity/ai/attributes/Attribute;Ljava/util/UUID;)D b
	getSyncableAttributes ()Ljava/util/Collection; b
	getValue (Lnet/minecraft/world/entity/ai/attributes/Attribute;)D c
	hasAttribute (Lnet/minecraft/world/entity/ai/attributes/Attribute;)Z b
	hasModifier (Lnet/minecraft/world/entity/ai/attributes/Attribute;Ljava/util/UUID;)Z a
	load (Lnet/minecraft/nbt/ListTag;)V a
	onAttributeModified (Lnet/minecraft/world/entity/ai/attributes/AttributeInstance;)V a
	removeAttributeModifiers (Lcom/google/common/collect/Multimap;)V a
	save ()Lnet/minecraft/nbt/ListTag; c
net/minecraft/world/entity/ai/attributes/AttributeModifier apv
	LOGGER a
	amount b
	id e
	nameGetter d
	operation c
	getAmount ()D d
	getId ()Ljava/util/UUID; a
	getName ()Ljava/lang/String; b
	getOperation ()Lnet/minecraft/world/entity/ai/attributes/AttributeModifier$Operation; c
	load (Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/world/entity/ai/attributes/AttributeModifier; a
	save ()Lnet/minecraft/nbt/CompoundTag; e
net/minecraft/world/entity/ai/attributes/AttributeModifier$Operation apv$a
	$VALUES f
	ADDITION a
	MULTIPLY_BASE b
	MULTIPLY_TOTAL c
	OPERATIONS d
	value e
	fromValue (I)Lnet/minecraft/world/entity/ai/attributes/AttributeModifier$Operation; a
	toValue ()I a
net/minecraft/world/entity/ai/attributes/AttributeSupplier apw
	instances a
	builder ()Lnet/minecraft/world/entity/ai/attributes/AttributeSupplier$Builder; a
	createInstance (Ljava/util/function/Consumer;Lnet/minecraft/world/entity/ai/attributes/Attribute;)Lnet/minecraft/world/entity/ai/attributes/AttributeInstance; a
	getAttributeInstance (Lnet/minecraft/world/entity/ai/attributes/Attribute;)Lnet/minecraft/world/entity/ai/attributes/AttributeInstance; d
	getBaseValue (Lnet/minecraft/world/entity/ai/attributes/Attribute;)D b
	getModifierValue (Lnet/minecraft/world/entity/ai/attributes/Attribute;Ljava/util/UUID;)D a
	getValue (Lnet/minecraft/world/entity/ai/attributes/Attribute;)D a
	hasAttribute (Lnet/minecraft/world/entity/ai/attributes/Attribute;)Z c
	hasModifier (Lnet/minecraft/world/entity/ai/attributes/Attribute;Ljava/util/UUID;)Z b
net/minecraft/world/entity/ai/attributes/AttributeSupplier$Builder apw$a
	builder a
	instanceFrozen b
	add (Lnet/minecraft/world/entity/ai/attributes/Attribute;)Lnet/minecraft/world/entity/ai/attributes/AttributeSupplier$Builder; a
	add (Lnet/minecraft/world/entity/ai/attributes/Attribute;D)Lnet/minecraft/world/entity/ai/attributes/AttributeSupplier$Builder; a
	build ()Lnet/minecraft/world/entity/ai/attributes/AttributeSupplier; a
	create (Lnet/minecraft/world/entity/ai/attributes/Attribute;)Lnet/minecraft/world/entity/ai/attributes/AttributeInstance; b
net/minecraft/world/entity/ai/attributes/Attributes apx
	ARMOR i
	ARMOR_TOUGHNESS j
	ATTACK_DAMAGE f
	ATTACK_KNOCKBACK g
	ATTACK_SPEED h
	FLYING_SPEED e
	FOLLOW_RANGE b
	JUMP_STRENGTH m
	KNOCKBACK_RESISTANCE c
	LUCK k
	MAX_HEALTH a
	MOVEMENT_SPEED d
	SPAWN_REINFORCEMENTS_CHANCE l
	register (Ljava/lang/String;Lnet/minecraft/world/entity/ai/attributes/Attribute;)Lnet/minecraft/world/entity/ai/attributes/Attribute; a
net/minecraft/world/entity/ai/attributes/DefaultAttributes apy
	LOGGER a
	SUPPLIERS b
	getSupplier (Lnet/minecraft/world/entity/EntityType;)Lnet/minecraft/world/entity/ai/attributes/AttributeSupplier; a
	hasSupplier (Lnet/minecraft/world/entity/EntityType;)Z b
	validate ()V a
net/minecraft/world/entity/ai/attributes/RangedAttribute apz
	maxValue b
	minValue a
	getMaxValue ()D e
	getMinValue ()D d
	sanitizeValue (D)D a
net/minecraft/world/entity/ai/behavior/AcquirePoi aqb
	batchCache f
	memoryToAcquire c
	nextScheduledStart e
	onlyIfAdult d
	poiType b
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)Z a
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/PathfinderMob;)Z a
	constructEntryConditionMap (Lnet/minecraft/world/entity/ai/memory/MemoryModuleType;Lnet/minecraft/world/entity/ai/memory/MemoryModuleType;)Lcom/google/common/collect/ImmutableMap; a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/PathfinderMob;J)V a
net/minecraft/world/entity/ai/behavior/AcquirePoi$JitteredLinearRetry aqb$a
	currentDelay d
	nextScheduledAttemptTimestamp c
	previousAttemptTimestamp b
	random a
	isStillValid (J)Z b
	markAttempt (J)V a
	shouldRetry (J)Z c
net/minecraft/world/entity/ai/behavior/AnimalMakeLove aqc
	partnerType b
	spawnChildAtTime d
	speedModifier c
	canStillUse (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)Z b
	canStillUse (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/animal/Animal;J)Z b
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)Z a
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/animal/Animal;)Z a
	findValidBreedPartner (Lnet/minecraft/world/entity/animal/Animal;)Ljava/util/Optional; c
	getBreedTarget (Lnet/minecraft/world/entity/animal/Animal;)Lnet/minecraft/world/entity/animal/Animal; a
	hasBreedTargetOfRightType (Lnet/minecraft/world/entity/animal/Animal;)Z b
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/animal/Animal;J)V a
	stop (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V c
	stop (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/animal/Animal;J)V d
	tick (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V d
	tick (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/animal/Animal;J)V c
net/minecraft/world/entity/ai/behavior/AssignProfessionFromJobSite aqd
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)Z a
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/npc/Villager;)Z a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/npc/Villager;J)V a
net/minecraft/world/entity/ai/behavior/BabyFollowAdult aqe
	followRange b
	speedModifier c
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/AgableMob;)Z a
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)Z a
	getNearestAdult (Lnet/minecraft/world/entity/AgableMob;)Lnet/minecraft/world/entity/AgableMob; a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/AgableMob;J)V a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V a
net/minecraft/world/entity/ai/behavior/BackUpIfTooClose aqf
	strafeSpeed c
	tooCloseDistance b
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)Z a
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/Mob;)Z a
	getTarget (Lnet/minecraft/world/entity/Mob;)Lnet/minecraft/world/entity/LivingEntity; c
	isTargetTooClose (Lnet/minecraft/world/entity/Mob;)Z b
	isTargetVisible (Lnet/minecraft/world/entity/Mob;)Z a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/Mob;J)V a
net/minecraft/world/entity/ai/behavior/BecomePassiveIfMemoryPresent aqg
	pacifyDuration b
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V a
net/minecraft/world/entity/ai/behavior/Behavior aqh
	endTimestamp c
	entryCondition a
	maxDuration e
	minDuration d
	status b
	canStillUse (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)Z b
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)Z a
	doStop (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V g
	getStatus ()Lnet/minecraft/world/entity/ai/behavior/Behavior$Status; a
	hasRequiredMemories (Lnet/minecraft/world/entity/LivingEntity;)Z a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V a
	stop (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V c
	tick (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V d
	tickOrStop (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V f
	timedOut (J)Z a
	tryStart (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)Z e
net/minecraft/world/entity/ai/behavior/Behavior$Status aqh$a
	$VALUES c
	RUNNING b
	STOPPED a
net/minecraft/world/entity/ai/behavior/BehaviorUtils aqi
	canSee (Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/entity/LivingEntity;)Z c
	entityIsVisible (Lnet/minecraft/world/entity/ai/Brain;Lnet/minecraft/world/entity/LivingEntity;)Z a
	findSectionClosestToVillage (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/SectionPos;I)Lnet/minecraft/core/SectionPos; a
	getLivingEntityFromUUIDMemory (Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/entity/ai/memory/MemoryModuleType;)Ljava/util/Optional; a
	getNearbyVillagersWithCondition (Lnet/minecraft/world/entity/npc/Villager;Ljava/util/function/Predicate;)Ljava/util/stream/Stream; a
	getNearestTarget (Lnet/minecraft/world/entity/LivingEntity;Ljava/util/Optional;Lnet/minecraft/world/entity/LivingEntity;)Lnet/minecraft/world/entity/LivingEntity; a
	getTargetNearestMe (Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/entity/LivingEntity;)Lnet/minecraft/world/entity/LivingEntity; a
	isOtherTargetMuchFurtherAwayThanCurrentAttackTarget (Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/entity/LivingEntity;D)Z a
	isWithinAttackRange (Lnet/minecraft/world/entity/Mob;Lnet/minecraft/world/entity/LivingEntity;I)Z a
	isWithinMeleeAttackRange (Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/entity/LivingEntity;)Z b
	lockGazeAndWalkToEachOther (Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/entity/LivingEntity;F)V a
	lookAtEachOther (Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/entity/LivingEntity;)V d
	lookAtEntity (Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/entity/LivingEntity;)V a
	setWalkAndLookTargetMemories (Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/core/BlockPos;FI)V a
	setWalkAndLookTargetMemories (Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/entity/Entity;FI)V a
	setWalkAndLookTargetMemoriesToEachOther (Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/entity/LivingEntity;F)V b
	targetIsValid (Lnet/minecraft/world/entity/ai/Brain;Lnet/minecraft/world/entity/ai/memory/MemoryModuleType;Ljava/util/function/Predicate;)Z a
	targetIsValid (Lnet/minecraft/world/entity/ai/Brain;Lnet/minecraft/world/entity/ai/memory/MemoryModuleType;Lnet/minecraft/world/entity/EntityType;)Z a
	throwItem (Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/phys/Vec3;)V a
net/minecraft/world/entity/ai/behavior/BlockPosTracker aqj
	blockPos a
	centerPosition b
	currentBlockPosition ()Lnet/minecraft/core/BlockPos; b
	currentPosition ()Lnet/minecraft/world/phys/Vec3; a
	isVisibleBy (Lnet/minecraft/world/entity/LivingEntity;)Z a
net/minecraft/world/entity/ai/behavior/CelebrateVillagersSurvivedRaid aqk
	currentRaid b
	canStillUse (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)Z b
	canStillUse (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/npc/Villager;J)Z a
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)Z a
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/npc/Villager;)Z a
	getFirework (Lnet/minecraft/world/item/DyeColor;I)Lnet/minecraft/world/item/ItemStack; a
	stop (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V c
	stop (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/npc/Villager;J)V b
	tick (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V d
	tick (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/npc/Villager;J)V c
net/minecraft/world/entity/ai/behavior/CopyMemoryWithExpiry aql
	durationOfCopy e
	predicate b
	sourceMemory c
	targetMemory d
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)Z a
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/Mob;)Z a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/Mob;J)V a
net/minecraft/world/entity/ai/behavior/CrossbowAttack aqm
	attackDelay b
	crossbowState c
	canStillUse (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)Z b
	canStillUse (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/Mob;J)Z a
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)Z a
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/Mob;)Z a
	crossbowAttack (Lnet/minecraft/world/entity/Mob;Lnet/minecraft/world/entity/LivingEntity;)V a
	getAttackTarget (Lnet/minecraft/world/entity/LivingEntity;)Lnet/minecraft/world/entity/LivingEntity; a
	lookAtTarget (Lnet/minecraft/world/entity/Mob;Lnet/minecraft/world/entity/LivingEntity;)V b
	stop (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V c
	stop (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/Mob;J)V c
	tick (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V d
	tick (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/Mob;J)V b
net/minecraft/world/entity/ai/behavior/CrossbowAttack$CrossbowState aqm$a
	$VALUES e
	CHARGED c
	CHARGING b
	READY_TO_ATTACK d
	UNCHARGED a
net/minecraft/world/entity/ai/behavior/DismountOrSkipMounting aqn
	dontRideIf c
	maxWalkDistToRideTarget b
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)Z a
	isVehicleValid (Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/entity/Entity;)Z a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V a
net/minecraft/world/entity/ai/behavior/DoNothing aqo
	canStillUse (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)Z b
net/minecraft/world/entity/ai/behavior/EntityTracker aqp
	entity a
	trackEyeHeight b
	currentBlockPosition ()Lnet/minecraft/core/BlockPos; b
	currentPosition ()Lnet/minecraft/world/phys/Vec3; a
	getEntity ()Lnet/minecraft/world/entity/Entity; c
	isVisibleBy (Lnet/minecraft/world/entity/LivingEntity;)Z a
net/minecraft/world/entity/ai/behavior/EraseMemoryIf aqq
	memoryType c
	predicate b
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)Z a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V a
net/minecraft/world/entity/ai/behavior/GateBehavior aqr
	behaviors e
	exitErasedMemories b
	orderPolicy c
	runningPolicy d
	canStillUse (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)Z b
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V a
	stop (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V c
	tick (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V d
	timedOut (J)Z a
net/minecraft/world/entity/ai/behavior/GateBehavior$OrderPolicy aqr$a
	$VALUES d
	ORDERED a
	SHUFFLED b
	consumer c
	apply (Lnet/minecraft/world/entity/ai/behavior/WeightedList;)V a
net/minecraft/world/entity/ai/behavior/GateBehavior$RunningPolicy aqr$b
	$VALUES c
	RUN_ONE a
	TRY_ALL b
	apply (Lnet/minecraft/world/entity/ai/behavior/WeightedList;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V a
net/minecraft/world/entity/ai/behavior/GiveGiftToHero aqs
	giftGivenDuringThisRun d
	gifts b
	timeSinceStart e
	timeUntilNextGift c
	calculateTimeUntilNextGift (Lnet/minecraft/server/level/ServerLevel;)I a
	canStillUse (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)Z b
	canStillUse (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/npc/Villager;J)Z b
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)Z a
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/npc/Villager;)Z a
	getItemToThrow (Lnet/minecraft/world/entity/npc/Villager;)Ljava/util/List; a
	getNearestTargetableHero (Lnet/minecraft/world/entity/npc/Villager;)Ljava/util/Optional; c
	isHero (Lnet/minecraft/world/entity/player/Player;)Z a
	isHeroVisible (Lnet/minecraft/world/entity/npc/Villager;)Z b
	isWithinThrowingDistance (Lnet/minecraft/world/entity/npc/Villager;Lnet/minecraft/world/entity/player/Player;)Z a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/npc/Villager;J)V a
	stop (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V c
	stop (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/npc/Villager;J)V d
	throwGift (Lnet/minecraft/world/entity/npc/Villager;Lnet/minecraft/world/entity/LivingEntity;)V a
	tick (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V d
	tick (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/npc/Villager;J)V c
net/minecraft/world/entity/ai/behavior/GoOutsideToCelebrate aqt
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)Z a
net/minecraft/world/entity/ai/behavior/GoToCelebrateLocation aqu
	closeEnoughDist b
	speedModifier c
	getCelebrateLocation (Lnet/minecraft/world/entity/Mob;)Lnet/minecraft/core/BlockPos; a
	getNearbyPos (Lnet/minecraft/world/entity/Mob;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/core/BlockPos; a
	getRandomOffset (Ljava/util/Random;)I a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/Mob;J)V a
net/minecraft/world/entity/ai/behavior/GoToClosestVillage aqv
	closeEnoughDistance c
	speedModifier b
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)Z a
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/npc/Villager;)Z a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/npc/Villager;J)V a
net/minecraft/world/entity/ai/behavior/GoToPotentialJobSite aqw
	speedModifier b
	canStillUse (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)Z b
	canStillUse (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/npc/Villager;J)Z a
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)Z a
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/npc/Villager;)Z a
	stop (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V c
	stop (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/npc/Villager;J)V c
	tick (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V d
	tick (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/npc/Villager;J)V b
net/minecraft/world/entity/ai/behavior/GoToWantedItem aqx
	maxDistToWalk c
	predicate b
	speedModifier d
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)Z a
	getClosestLovedItem (Lnet/minecraft/world/entity/LivingEntity;)Lnet/minecraft/world/entity/item/ItemEntity; a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V a
net/minecraft/world/entity/ai/behavior/HarvestFarmland aqy
	aboveFarmlandPos b
	nextOkStartTime c
	timeWorkedSoFar d
	validFarmlandAroundVillager e
	canStillUse (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)Z b
	canStillUse (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/npc/Villager;J)Z d
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)Z a
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/npc/Villager;)Z a
	getValidFarmland (Lnet/minecraft/server/level/ServerLevel;)Lnet/minecraft/core/BlockPos; a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/npc/Villager;J)V a
	stop (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V c
	stop (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/npc/Villager;J)V b
	tick (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V d
	tick (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/npc/Villager;J)V c
	validPos (Lnet/minecraft/core/BlockPos;Lnet/minecraft/server/level/ServerLevel;)Z a
net/minecraft/world/entity/ai/behavior/InsideBrownianWalk aqz
	speedModifier b
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)Z a
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/PathfinderMob;)Z a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/PathfinderMob;J)V a
net/minecraft/world/entity/ai/behavior/InteractWith ara
	interactionRangeSqr e
	maxDist b
	memory h
	selfFilter g
	speedModifier c
	targetFilter f
	type d
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)Z a
	isTargetValid (Lnet/minecraft/world/entity/LivingEntity;)Z b
	of (Lnet/minecraft/world/entity/EntityType;ILjava/util/function/Predicate;Lnet/minecraft/world/entity/ai/memory/MemoryModuleType;FI)Lnet/minecraft/world/entity/ai/behavior/InteractWith; a
	of (Lnet/minecraft/world/entity/EntityType;ILnet/minecraft/world/entity/ai/memory/MemoryModuleType;FI)Lnet/minecraft/world/entity/ai/behavior/InteractWith; a
	seesAtLeastOneValidTarget (Lnet/minecraft/world/entity/LivingEntity;)Z a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V a
net/minecraft/world/entity/ai/behavior/InteractWithDoor arb
	closeAllOpenedDoors (Lnet/minecraft/server/level/ServerLevel;Ljava/util/List;ILnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/entity/ai/Brain;)V a
	getDoorsThatAreOnMyPath (Lnet/minecraft/server/level/ServerLevel;Ljava/util/List;Ljava/util/List;)Ljava/util/Set; a
	openOrCloseDoors (Lnet/minecraft/server/level/ServerLevel;Ljava/util/List;Ljava/util/Set;ILnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/entity/ai/Brain;)V a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V a
net/minecraft/world/entity/ai/behavior/JumpOnBed arc
	remainingCooldownUntilNextJump f
	remainingJumps e
	remainingTimeToReachBed d
	speedModifier b
	targetBed c
	canStillUse (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)Z b
	canStillUse (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/Mob;J)Z c
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)Z a
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/Mob;)Z a
	getNearestBed (Lnet/minecraft/world/entity/Mob;)Ljava/util/Optional; a
	isBed (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;)Z a
	nearBed (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/Mob;)Z b
	onBedSurface (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/Mob;)Z d
	onOrOverBed (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/Mob;)Z c
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/Mob;J)V a
	startWalkingTowardsBed (Lnet/minecraft/world/entity/Mob;Lnet/minecraft/core/BlockPos;)V a
	stop (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V c
	stop (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/Mob;J)V b
	tick (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V d
	tick (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/Mob;J)V d
	timedOut (J)Z a
	tiredOfJumping (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/Mob;)Z f
	tiredOfWalking (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/Mob;)Z e
net/minecraft/world/entity/ai/behavior/LocateHidingPlace ard
	closeEnoughDist d
	currentPos e
	radius c
	speedModifier b
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)Z a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V a
net/minecraft/world/entity/ai/behavior/LocateHidingPlaceDuringRaid are
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)Z a
net/minecraft/world/entity/ai/behavior/LookAndFollowTradingPlayerSink arf
	speedModifier b
	canStillUse (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)Z b
	canStillUse (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/npc/Villager;J)Z a
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)Z a
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/npc/Villager;)Z a
	followPlayer (Lnet/minecraft/world/entity/npc/Villager;)V a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/npc/Villager;J)V b
	stop (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V c
	stop (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/npc/Villager;J)V c
	tick (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V d
	tick (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/npc/Villager;J)V d
	timedOut (J)Z a
net/minecraft/world/entity/ai/behavior/LookAtTargetSink arg
	canStillUse (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)Z b
	canStillUse (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/Mob;J)Z a
	stop (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V c
	stop (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/Mob;J)V b
	tick (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V d
	tick (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/Mob;J)V c
net/minecraft/world/entity/ai/behavior/MeleeAttack arh
	cooldownBetweenAttacks b
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)Z a
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/Mob;)Z a
	getAttackTarget (Lnet/minecraft/world/entity/Mob;)Lnet/minecraft/world/entity/LivingEntity; b
	isHoldingUsableProjectileWeapon (Lnet/minecraft/world/entity/Mob;)Z a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/Mob;J)V a
net/minecraft/world/entity/ai/behavior/Mount ari
	speedModifier b
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)Z a
	getRidableEntity (Lnet/minecraft/world/entity/LivingEntity;)Lnet/minecraft/world/entity/Entity; b
	isCloseEnoughToStartRiding (Lnet/minecraft/world/entity/LivingEntity;)Z a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V a
net/minecraft/world/entity/ai/behavior/MoveToSkySeeingSpot arj
	speedModifier b
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)Z a
	getOutdoorPosition (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)Lnet/minecraft/world/phys/Vec3; b
	hasNoBlocksAbove (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/core/BlockPos;)Z a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V a
net/minecraft/world/entity/ai/behavior/MoveToTargetSink ark
	lastTargetPos c
	path b
	remainingDelay e
	speedModifier d
	canStillUse (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)Z b
	canStillUse (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/Mob;J)Z a
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)Z a
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/Mob;)Z a
	reachedTarget (Lnet/minecraft/world/entity/Mob;Lnet/minecraft/world/entity/ai/memory/WalkTarget;)Z a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/Mob;J)V c
	stop (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V c
	stop (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/Mob;J)V b
	tick (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V d
	tick (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/Mob;J)V d
	tryComputePath (Lnet/minecraft/world/entity/Mob;Lnet/minecraft/world/entity/ai/memory/WalkTarget;J)Z a
net/minecraft/world/entity/ai/behavior/PlayTagWithOtherKids arl
	chaseKid (Lnet/minecraft/world/entity/PathfinderMob;Lnet/minecraft/world/entity/LivingEntity;)V a
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)Z a
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/PathfinderMob;)Z a
	checkHowManyChasersEachFriendHas (Lnet/minecraft/world/entity/PathfinderMob;)Ljava/util/Map; c
	findSomeoneBeingChased (Lnet/minecraft/world/entity/PathfinderMob;)Ljava/util/Optional; b
	findSomeoneToChase (Lnet/minecraft/world/entity/PathfinderMob;)Ljava/util/Optional; a
	fleeFromChaser (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/PathfinderMob;Lnet/minecraft/world/entity/LivingEntity;)V a
	getFriendsNearby (Lnet/minecraft/world/entity/PathfinderMob;)Ljava/util/List; d
	hasFriendsNearby (Lnet/minecraft/world/entity/PathfinderMob;)Z e
	isChasingSomeone (Lnet/minecraft/world/entity/LivingEntity;)Z c
	isFriendChasingMe (Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/entity/LivingEntity;)Z a
	seeIfSomeoneIsChasingMe (Lnet/minecraft/world/entity/LivingEntity;)Lnet/minecraft/world/entity/LivingEntity; b
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/PathfinderMob;J)V a
	whoAreYouChasing (Lnet/minecraft/world/entity/LivingEntity;)Lnet/minecraft/world/entity/LivingEntity; a
net/minecraft/world/entity/ai/behavior/PoiCompetitorScan arm
	profession b
	competesForSameJobsite (Lnet/minecraft/core/GlobalPos;Lnet/minecraft/world/entity/ai/village/poi/PoiType;Lnet/minecraft/world/entity/npc/Villager;)Z a
	hasJobSite (Lnet/minecraft/world/entity/npc/Villager;)Z a
	hasMatchingProfession (Lnet/minecraft/world/entity/ai/village/poi/PoiType;Lnet/minecraft/world/entity/npc/VillagerProfession;)Z a
	selectWinner (Lnet/minecraft/world/entity/npc/Villager;Lnet/minecraft/world/entity/npc/Villager;)Lnet/minecraft/world/entity/npc/Villager; a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/npc/Villager;J)V a
net/minecraft/world/entity/ai/behavior/PositionTracker arn
	currentBlockPosition ()Lnet/minecraft/core/BlockPos; b
	currentPosition ()Lnet/minecraft/world/phys/Vec3; a
	isVisibleBy (Lnet/minecraft/world/entity/LivingEntity;)Z a
net/minecraft/world/entity/ai/behavior/RandomStroll aro
	maxHorizontalDistance c
	maxVerticalDistance d
	speedModifier b
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/PathfinderMob;J)V a
net/minecraft/world/entity/ai/behavior/ReactToBell arp
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V a
net/minecraft/world/entity/ai/behavior/ResetProfession arq
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)Z a
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/npc/Villager;)Z a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/npc/Villager;J)V a
net/minecraft/world/entity/ai/behavior/ResetRaidStatus arr
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)Z a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V a
net/minecraft/world/entity/ai/behavior/RingBell ars
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)Z a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V a
net/minecraft/world/entity/ai/behavior/RunIf art
	checkWhileRunningAlso d
	predicate b
	wrappedBehavior c
	canStillUse (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)Z b
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)Z a
	mergeMaps (Ljava/util/Map;Ljava/util/Map;)Ljava/util/Map; a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V a
	stop (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V c
	tick (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V d
	timedOut (J)Z a
net/minecraft/world/entity/ai/behavior/RunOne aru
net/minecraft/world/entity/ai/behavior/RunSometimes arv
	interval d
	resetTicks b
	ticksUntilNextStart f
	wasRunning c
	wrappedBehavior e
	canStillUse (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)Z b
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)Z a
	resetTicksUntilNextStart (Lnet/minecraft/server/level/ServerLevel;)V a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V a
	stop (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V c
	tick (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V d
	timedOut (J)Z a
net/minecraft/world/entity/ai/behavior/SetClosestHomeAsWalkTarget arw
	batchCache c
	lastUpdate e
	speedModifier b
	triedCount d
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)Z a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V a
net/minecraft/world/entity/ai/behavior/SetEntityLookTarget arx
	maxDistSqr c
	predicate b
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)Z a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V a
net/minecraft/world/entity/ai/behavior/SetHiddenState ary
	closeEnoughDist b
	stayHiddenTicks c
	ticksHidden d
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V a
net/minecraft/world/entity/ai/behavior/SetLookAndInteract arz
	interactionRangeSqr c
	selfFilter e
	targetFilter d
	type b
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)Z a
	getVisibleEntities (Lnet/minecraft/world/entity/LivingEntity;)Ljava/util/List; b
	isMatchingTarget (Lnet/minecraft/world/entity/LivingEntity;)Z a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V a
net/minecraft/world/entity/ai/behavior/SetRaidStatus asa
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)Z a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V a
net/minecraft/world/entity/ai/behavior/SetWalkTargetAwayFrom asb
	desiredDistance d
	speedModifier c
	toPosition e
	walkAwayFromMemory b
	alreadyWalkingAwayFromPosWithSameSpeed (Lnet/minecraft/world/entity/PathfinderMob;)Z b
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)Z a
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/PathfinderMob;)Z a
	entity (Lnet/minecraft/world/entity/ai/memory/MemoryModuleType;FIZ)Lnet/minecraft/world/entity/ai/behavior/SetWalkTargetAwayFrom; b
	getPosToAvoid (Lnet/minecraft/world/entity/PathfinderMob;)Lnet/minecraft/world/phys/Vec3; a
	moveAwayFrom (Lnet/minecraft/world/entity/PathfinderMob;Lnet/minecraft/world/phys/Vec3;F)V a
	pos (Lnet/minecraft/world/entity/ai/memory/MemoryModuleType;FIZ)Lnet/minecraft/world/entity/ai/behavior/SetWalkTargetAwayFrom; a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/PathfinderMob;J)V a
net/minecraft/world/entity/ai/behavior/SetWalkTargetFromAttackTargetIfTargetOutOfReach asc
	speedModifier b
	clearWalkTarget (Lnet/minecraft/world/entity/LivingEntity;)V a
	setWalkAndLookTarget (Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/entity/LivingEntity;)V a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/Mob;J)V a
net/minecraft/world/entity/ai/behavior/SetWalkTargetFromBlockMemory asd
	closeEnoughDist d
	memoryType b
	speedModifier c
	tooFarDistance e
	tooLongUnreachableDuration f
	closeEnough (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/npc/Villager;Lnet/minecraft/core/GlobalPos;)Z b
	dropPOI (Lnet/minecraft/world/entity/npc/Villager;J)V a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/npc/Villager;J)V a
	tiredOfTryingToFindTarget (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/npc/Villager;)Z a
	tooFar (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/npc/Villager;Lnet/minecraft/core/GlobalPos;)Z a
net/minecraft/world/entity/ai/behavior/SetWalkTargetFromLookTarget ase
	closeEnoughDistance c
	speedModifier b
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V a
net/minecraft/world/entity/ai/behavior/ShowTradesToPlayer asf
	cycleCounter d
	displayIndex e
	displayItems c
	lookTime f
	playerItemStack b
	canStillUse (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)Z b
	canStillUse (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/npc/Villager;J)Z a
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)Z a
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/npc/Villager;)Z a
	displayCyclingItems (Lnet/minecraft/world/entity/npc/Villager;)V d
	displayFirstItem (Lnet/minecraft/world/entity/npc/Villager;)V a
	findItemsToDisplay (Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/entity/npc/Villager;)V a
	lookAtTarget (Lnet/minecraft/world/entity/npc/Villager;)Lnet/minecraft/world/entity/LivingEntity; c
	playerItemStackMatchesCostOfOffer (Lnet/minecraft/world/item/trading/MerchantOffer;)Z a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/npc/Villager;J)V b
	stop (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V c
	stop (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/npc/Villager;J)V d
	tick (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V d
	tick (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/npc/Villager;J)V c
	updateDisplayItems (Lnet/minecraft/world/entity/npc/Villager;)V b
net/minecraft/world/entity/ai/behavior/SleepInBed asg
	nextOkStartTime b
	canStillUse (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)Z b
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)Z a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V a
	stop (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V c
	timedOut (J)Z a
net/minecraft/world/entity/ai/behavior/SocializeAtBell ash
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)Z a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V a
net/minecraft/world/entity/ai/behavior/StartAttacking asi
	canAttackPredicate b
	targetFinderFunction c
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)Z a
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/Mob;)Z a
	setAttackTarget (Lnet/minecraft/world/entity/Mob;Lnet/minecraft/world/entity/LivingEntity;)V a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/Mob;J)V a
net/minecraft/world/entity/ai/behavior/StartCelebratingIfTargetDead asj
	celebrateDuration b
	dancePredicate c
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)Z a
	getAttackTarget (Lnet/minecraft/world/entity/LivingEntity;)Lnet/minecraft/world/entity/LivingEntity; a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V a
net/minecraft/world/entity/ai/behavior/StopAttackingIfTargetInvalid ask
	stopAttackingWhen b
	clearAttackTarget (Lnet/minecraft/world/entity/Mob;)V d
	getAttackTarget (Lnet/minecraft/world/entity/Mob;)Lnet/minecraft/world/entity/LivingEntity; b
	isCurrentTargetDeadOrRemoved (Lnet/minecraft/world/entity/Mob;)Z c
	isCurrentTargetInDifferentLevel (Lnet/minecraft/world/entity/Mob;)Z a
	isTiredOfTryingToReachTarget (Lnet/minecraft/world/entity/LivingEntity;)Z a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/Mob;J)V a
net/minecraft/world/entity/ai/behavior/StopBeingAngryIfTargetDead asl
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/Mob;J)V a
net/minecraft/world/entity/ai/behavior/StrollAroundPoi asm
	maxDistanceFromPoi d
	memoryType b
	nextOkStartTime c
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)Z a
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/PathfinderMob;)Z a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/PathfinderMob;J)V a
net/minecraft/world/entity/ai/behavior/StrollToPoi asn
	closeEnoughDist c
	maxDistanceFromPoi d
	memoryType b
	nextOkStartTime e
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)Z a
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/PathfinderMob;)Z a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/PathfinderMob;J)V a
net/minecraft/world/entity/ai/behavior/StrollToPoiList aso
	closeEnoughDist e
	maxDistanceFromPoi f
	mustBeCloseToMemoryType c
	nextOkStartTime g
	speedModifier d
	strollToMemoryType b
	targetPos h
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)Z a
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/npc/Villager;)Z a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/npc/Villager;J)V a
net/minecraft/world/entity/ai/behavior/Swim asp
	chance b
	canStillUse (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)Z b
	canStillUse (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/Mob;J)Z a
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)Z a
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/Mob;)Z a
	tick (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V d
	tick (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/Mob;J)V b
net/minecraft/world/entity/ai/behavior/TradeWithVillager asq
	trades b
	canStillUse (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)Z b
	canStillUse (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/npc/Villager;J)Z a
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)Z a
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/npc/Villager;)Z a
	figureOutWhatIAmWillingToTrade (Lnet/minecraft/world/entity/npc/Villager;Lnet/minecraft/world/entity/npc/Villager;)Ljava/util/Set; a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/npc/Villager;J)V b
	stop (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V c
	stop (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/npc/Villager;J)V d
	throwHalfStack (Lnet/minecraft/world/entity/npc/Villager;Ljava/util/Set;Lnet/minecraft/world/entity/LivingEntity;)V a
	tick (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V d
	tick (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/npc/Villager;J)V c
net/minecraft/world/entity/ai/behavior/UpdateActivityFromSchedule asr
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V a
net/minecraft/world/entity/ai/behavior/UseBonemeal ass
	cropPos e
	lastBonemealingSession c
	nextWorkCycleTime b
	timeWorkedSoFar d
	canStillUse (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)Z b
	canStillUse (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/npc/Villager;J)Z a
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)Z a
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/npc/Villager;)Z a
	pickNextTarget (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/npc/Villager;)Ljava/util/Optional; b
	setCurrentCropAsTarget (Lnet/minecraft/world/entity/npc/Villager;)V a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/npc/Villager;J)V b
	stop (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V c
	stop (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/npc/Villager;J)V c
	tick (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V d
	tick (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/npc/Villager;J)V d
	validPos (Lnet/minecraft/core/BlockPos;Lnet/minecraft/server/level/ServerLevel;)Z a
net/minecraft/world/entity/ai/behavior/ValidateNearbyPoi ast
	memoryType b
	poiPredicate c
	bedIsOccupied (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/LivingEntity;)Z a
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)Z a
	poiDoesntExist (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;)Z a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V a
net/minecraft/world/entity/ai/behavior/VictoryStroll asu
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)Z a
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/PathfinderMob;)Z a
net/minecraft/world/entity/ai/behavior/VillageBoundRandomStroll asv
	maxXyDist c
	maxYDist d
	speedModifier b
	setRandomPos (Lnet/minecraft/world/entity/PathfinderMob;)V a
	setTargetedPos (Lnet/minecraft/world/entity/PathfinderMob;Lnet/minecraft/core/SectionPos;)V a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/PathfinderMob;J)V a
net/minecraft/world/entity/ai/behavior/VillagerCalmDown asw
	isCloseToEntityThatHurtMe (Lnet/minecraft/world/entity/npc/Villager;)Z a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/npc/Villager;J)V a
net/minecraft/world/entity/ai/behavior/VillagerGoalPackages asx
	getCorePackage (Lnet/minecraft/world/entity/npc/VillagerProfession;F)Lcom/google/common/collect/ImmutableList; a
	getFullLookBehavior ()Lcom/mojang/datafixers/util/Pair; a
	getHidePackage (Lnet/minecraft/world/entity/npc/VillagerProfession;F)Lcom/google/common/collect/ImmutableList; i
	getIdlePackage (Lnet/minecraft/world/entity/npc/VillagerProfession;F)Lcom/google/common/collect/ImmutableList; e
	getMeetPackage (Lnet/minecraft/world/entity/npc/VillagerProfession;F)Lcom/google/common/collect/ImmutableList; d
	getMinimalLookBehavior ()Lcom/mojang/datafixers/util/Pair; b
	getPanicPackage (Lnet/minecraft/world/entity/npc/VillagerProfession;F)Lcom/google/common/collect/ImmutableList; f
	getPlayPackage (F)Lcom/google/common/collect/ImmutableList; a
	getPreRaidPackage (Lnet/minecraft/world/entity/npc/VillagerProfession;F)Lcom/google/common/collect/ImmutableList; g
	getRaidPackage (Lnet/minecraft/world/entity/npc/VillagerProfession;F)Lcom/google/common/collect/ImmutableList; h
	getRestPackage (Lnet/minecraft/world/entity/npc/VillagerProfession;F)Lcom/google/common/collect/ImmutableList; c
	getWorkPackage (Lnet/minecraft/world/entity/npc/VillagerProfession;F)Lcom/google/common/collect/ImmutableList; b
net/minecraft/world/entity/ai/behavior/VillagerMakeLove asy
	birthTimestamp b
	breed (Lnet/minecraft/world/entity/npc/Villager;Lnet/minecraft/world/entity/npc/Villager;)Ljava/util/Optional; a
	canReach (Lnet/minecraft/world/entity/npc/Villager;Lnet/minecraft/core/BlockPos;)Z a
	canStillUse (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)Z b
	canStillUse (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/npc/Villager;J)Z a
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)Z a
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/npc/Villager;)Z a
	giveBedToChild (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/npc/Villager;Lnet/minecraft/core/BlockPos;)V a
	isBreedingPossible (Lnet/minecraft/world/entity/npc/Villager;)Z a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/npc/Villager;J)V b
	stop (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V c
	stop (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/npc/Villager;J)V d
	takeVacantBed (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/npc/Villager;)Ljava/util/Optional; b
	tick (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V d
	tick (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/npc/Villager;J)V c
	tryToGiveBirth (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/npc/Villager;Lnet/minecraft/world/entity/npc/Villager;)V a
net/minecraft/world/entity/ai/behavior/VillagerPanicTrigger asz
	canStillUse (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)Z b
	canStillUse (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/npc/Villager;J)Z a
	hasHostile (Lnet/minecraft/world/entity/LivingEntity;)Z a
	isHurt (Lnet/minecraft/world/entity/LivingEntity;)Z b
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/npc/Villager;J)V b
	tick (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V d
	tick (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/npc/Villager;J)V c
net/minecraft/world/entity/ai/behavior/WakeUp ata
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)Z a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V a
net/minecraft/world/entity/ai/behavior/WeightedList atb
	entries a
	random b
	add (Ljava/lang/Object;I)Lnet/minecraft/world/entity/ai/behavior/WeightedList; a
	codec (Lcom/mojang/serialization/Codec;)Lcom/mojang/serialization/Codec; a
	getOne ()Ljava/lang/Object; d
	getOne (Ljava/util/Random;)Ljava/lang/Object; b
	isEmpty ()Z b
	shuffle ()Lnet/minecraft/world/entity/ai/behavior/WeightedList; a
	shuffle (Ljava/util/Random;)Lnet/minecraft/world/entity/ai/behavior/WeightedList; a
	stream ()Ljava/util/stream/Stream; c
net/minecraft/world/entity/ai/behavior/WeightedList$WeightedEntry atb$a
	data a
	randWeight c
	weight b
	codec (Lcom/mojang/serialization/Codec;)Lcom/mojang/serialization/Codec; a
	getData ()Ljava/lang/Object; a
	getRandWeight ()D c
	getWeight ()I b
	setRandom (F)V a
net/minecraft/world/entity/ai/behavior/WorkAtComposter atc
	COMPOSTABLE_ITEMS b
	compostItems (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/npc/Villager;Lnet/minecraft/core/GlobalPos;Lnet/minecraft/world/level/block/state/BlockState;)V a
	makeBread (Lnet/minecraft/world/entity/npc/Villager;)V a
	useWorkstation (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/npc/Villager;)V a
net/minecraft/world/entity/ai/behavior/WorkAtPoi atd
	lastCheck b
	canStillUse (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)Z b
	canStillUse (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/npc/Villager;J)Z b
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)Z a
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/npc/Villager;)Z b
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/npc/Villager;J)V a
	useWorkstation (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/npc/Villager;)V a
net/minecraft/world/entity/ai/behavior/YieldJobSite ate
	speedModifier b
	canReachPos (Lnet/minecraft/world/entity/npc/Villager;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/ai/village/poi/PoiType;)Z a
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)Z a
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/npc/Villager;)Z a
	eraseMemories (Lnet/minecraft/world/entity/npc/Villager;)V a
	nearbyWantsJobsite (Lnet/minecraft/world/entity/ai/village/poi/PoiType;Lnet/minecraft/world/entity/npc/Villager;Lnet/minecraft/core/BlockPos;)Z a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/npc/Villager;J)V a
	yieldJobSite (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/npc/Villager;Lnet/minecraft/world/entity/npc/Villager;Lnet/minecraft/core/BlockPos;Z)V a
net/minecraft/world/entity/ai/control/BodyRotationControl atg
	headStableTime b
	lastStableYHeadRot c
	mob a
	clientTick ()V a
	isMoving ()Z f
	notCarryingMobPassengers ()Z e
	rotateBodyIfNecessary ()V b
	rotateHeadIfNecessary ()V c
	rotateHeadTowardsFront ()V d
net/minecraft/world/entity/ai/control/Control ath
net/minecraft/world/entity/ai/control/DolphinLookControl ati
	maxYRotFromCenter h
	tick ()V a
net/minecraft/world/entity/ai/control/FlyingMoveControl atj
	hoversInPlace j
	maxTurn i
	tick ()V a
net/minecraft/world/entity/ai/control/JumpControl atk
	jump a
	mob b
	jump ()V a
	tick ()V b
net/minecraft/world/entity/ai/control/LookControl atl
	hasWanted d
	mob a
	wantedX e
	wantedY f
	wantedZ g
	xMaxRotAngle c
	yMaxRotSpeed b
	getWantedX ()D d
	getWantedY ()D e
	getWantedY (Lnet/minecraft/world/entity/Entity;)D b
	getWantedZ ()D f
	getXRotD ()F g
	getYRotD ()F h
	isHasWanted ()Z c
	resetXRotOnTick ()Z b
	rotateTowards (FFF)F a
	setLookAt (DDD)V a
	setLookAt (DDDFF)V a
	setLookAt (Lnet/minecraft/world/entity/Entity;)V a
	setLookAt (Lnet/minecraft/world/entity/Entity;FF)V a
	setLookAt (Lnet/minecraft/world/phys/Vec3;)V a
	tick ()V a
net/minecraft/world/entity/ai/control/MoveControl atm
	mob a
	operation h
	speedModifier e
	strafeForwards f
	strafeRight g
	wantedX b
	wantedY c
	wantedZ d
	copyFrom (Lnet/minecraft/world/entity/ai/control/MoveControl;)V a
	getSpeedModifier ()D c
	getWantedX ()D d
	getWantedY ()D e
	getWantedZ ()D f
	hasWanted ()Z b
	isWalkable (FF)Z b
	rotlerp (FFF)F a
	setWantedPosition (DDDD)V a
	strafe (FF)V a
	tick ()V a
net/minecraft/world/entity/ai/control/MoveControl$Operation atm$a
	$VALUES e
	JUMPING d
	MOVE_TO b
	STRAFE c
	WAIT a
net/minecraft/world/entity/ai/goal/AvoidEntityGoal ato
	avoidClass f
	avoidEntityTargeting k
	avoidPredicate g
	maxDist c
	mob a
	path d
	pathNav e
	predicateOnAvoidEntity h
	sprintSpeedModifier j
	toAvoid b
	walkSpeedModifier i
	canContinueToUse ()Z b
	canUse ()Z a
	start ()V c
	stop ()V d
	tick ()V e
net/minecraft/world/entity/ai/goal/BegGoal atp
	begTargeting f
	level c
	lookDistance d
	lookTime e
	player b
	wolf a
	canContinueToUse ()Z b
	canUse ()Z a
	playerHoldingInteresting (Lnet/minecraft/world/entity/player/Player;)Z a
	start ()V c
	stop ()V d
	tick ()V e
net/minecraft/world/entity/ai/goal/BoatGoals atq
	$VALUES c
	GO_IN_BOAT_DIRECTION b
	GO_TO_BOAT a
net/minecraft/world/entity/ai/goal/BreakDoorGoal atr
	breakTime a
	doorBreakTime c
	lastBreakProgress b
	validDifficulties g
	canContinueToUse ()Z b
	canUse ()Z a
	getDoorBreakTime ()I f
	isValidDifficulty (Lnet/minecraft/world/Difficulty;)Z a
	start ()V c
	stop ()V d
	tick ()V e
net/minecraft/world/entity/ai/goal/BreathAirGoal ats
	mob a
	canContinueToUse ()Z b
	canUse ()Z a
	findAirPosition ()V g
	givesAir (Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;)Z a
	isInterruptable ()Z D_
	start ()V c
	tick ()V e
net/minecraft/world/entity/ai/goal/BreedGoal att
	PARTNER_TARGETING d
	animal a
	level b
	loveTime f
	partner c
	partnerClass e
	speedModifier g
	breed ()V g
	canContinueToUse ()Z b
	canUse ()Z a
	getFreePartner ()Lnet/minecraft/world/entity/animal/Animal; h
	stop ()V d
	tick ()V e
net/minecraft/world/entity/ai/goal/CatLieOnBedGoal atu
	cat g
	canUse ()Z a
	isValidTarget (Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;)Z a
	nextStartTick (Lnet/minecraft/world/entity/PathfinderMob;)I a
	start ()V c
	stop ()V d
	tick ()V e
net/minecraft/world/entity/ai/goal/CatSitOnBlockGoal atv
	cat g
	canUse ()Z a
	isValidTarget (Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;)Z a
	start ()V c
	stop ()V d
	tick ()V e
net/minecraft/world/entity/ai/goal/DolphinJumpGoal atw
	STEPS_TO_CHECK a
	breached d
	dolphin b
	interval c
	canContinueToUse ()Z b
	canUse ()Z a
	isInterruptable ()Z D_
	start ()V c
	stop ()V d
	surfaceIsClear (Lnet/minecraft/core/BlockPos;III)Z b
	tick ()V e
	waterIsClear (Lnet/minecraft/core/BlockPos;III)Z a
net/minecraft/world/entity/ai/goal/DoorInteractGoal atx
	doorOpenDirX b
	doorOpenDirZ c
	doorPos e
	hasDoor f
	mob d
	passed a
	canContinueToUse ()Z b
	canUse ()Z a
	hasGroundPathNavigation ()Z h
	isOpen ()Z g
	setOpen (Z)V a
	start ()V c
	tick ()V e
net/minecraft/world/entity/ai/goal/EatBlockGoal aty
	IS_TALL_GRASS a
	eatAnimationTick d
	level c
	mob b
	canContinueToUse ()Z b
	canUse ()Z a
	getEatAnimationTick ()I g
	start ()V c
	stop ()V d
	tick ()V e
net/minecraft/world/entity/ai/goal/FleeSunGoal atz
	level f
	mob a
	speedModifier e
	wantedX b
	wantedY c
	wantedZ d
	canContinueToUse ()Z b
	canUse ()Z a
	getHidePos ()Lnet/minecraft/world/phys/Vec3; h
	setWantedPos ()Z g
	start ()V c
net/minecraft/world/entity/ai/goal/FloatGoal aua
	mob a
	canUse ()Z a
	tick ()V e
net/minecraft/world/entity/ai/goal/FollowBoatGoal aub
	currentGoal d
	following c
	mob b
	timeToRecalcPath a
	canContinueToUse ()Z b
	canUse ()Z a
	isInterruptable ()Z D_
	start ()V c
	stop ()V d
	tick ()V e
net/minecraft/world/entity/ai/goal/FollowFlockLeaderGoal auc
	mob a
	nextStartTick c
	timeToRecalcPath b
	canContinueToUse ()Z b
	canUse ()Z a
	nextStartTick (Lnet/minecraft/world/entity/animal/AbstractSchoolingFish;)I a
	start ()V c
	stop ()V d
	tick ()V e
net/minecraft/world/entity/ai/goal/FollowMobGoal aud
	areaSize i
	followPredicate b
	followingMob c
	mob a
	navigation e
	oldWaterCost h
	speedModifier d
	stopDistance g
	timeToRecalcPath f
	canContinueToUse ()Z b
	canUse ()Z a
	start ()V c
	stop ()V d
	tick ()V e
net/minecraft/world/entity/ai/goal/FollowOwnerGoal aue
	canFly j
	level c
	navigation e
	oldWaterCost i
	owner b
	speedModifier d
	startDistance h
	stopDistance g
	tamable a
	timeToRecalcPath f
	canContinueToUse ()Z b
	canTeleportTo (Lnet/minecraft/core/BlockPos;)Z a
	canUse ()Z a
	maybeTeleportTo (III)Z a
	randomIntInclusive (II)I a
	start ()V c
	stop ()V d
	teleportToOwner ()V g
	tick ()V e
net/minecraft/world/entity/ai/goal/FollowParentGoal auf
	animal a
	parent b
	speedModifier c
	timeToRecalcPath d
	canContinueToUse ()Z b
	canUse ()Z a
	start ()V c
	stop ()V d
	tick ()V e
net/minecraft/world/entity/ai/goal/Goal aug
	flags a
	canContinueToUse ()Z b
	canUse ()Z a
	getFlags ()Ljava/util/EnumSet; i
	isInterruptable ()Z D_
	setFlags (Ljava/util/EnumSet;)V a
	start ()V c
	stop ()V d
	tick ()V e
net/minecraft/world/entity/ai/goal/Goal$Flag aug$a
	$VALUES e
	JUMP c
	LOOK b
	MOVE a
	TARGET d
net/minecraft/world/entity/ai/goal/GoalSelector auh
	LOGGER a
	NO_GOAL b
	availableGoals d
	disabledFlags f
	lockedFlags c
	newGoalRate g
	profiler e
	addGoal (ILnet/minecraft/world/entity/ai/goal/Goal;)V a
	disableControlFlag (Lnet/minecraft/world/entity/ai/goal/Goal$Flag;)V a
	enableControlFlag (Lnet/minecraft/world/entity/ai/goal/Goal$Flag;)V b
	getAvailableGoals ()Ljava/util/Set; c
	getRunningGoals ()Ljava/util/stream/Stream; d
	removeAllGoals ()V a
	removeGoal (Lnet/minecraft/world/entity/ai/goal/Goal;)V a
	setControlFlag (Lnet/minecraft/world/entity/ai/goal/Goal$Flag;Z)V a
	setNewGoalRate (I)V a
	tick ()V b
net/minecraft/world/entity/ai/goal/GolemRandomStrollInVillageGoal aui
	doesVillagerWantGolem (Lnet/minecraft/world/entity/npc/Villager;)Z a
	getPosition ()Lnet/minecraft/world/phys/Vec3; g
	getPositionTowardsAnywhere ()Lnet/minecraft/world/phys/Vec3; j
	getPositionTowardsPoi ()Lnet/minecraft/world/phys/Vec3; l
	getPositionTowardsVillagerWhoWantsGolem ()Lnet/minecraft/world/phys/Vec3; k
	getRandomPoiWithinSection (Lnet/minecraft/core/SectionPos;)Lnet/minecraft/core/BlockPos; a
	getRandomVillageSection ()Lnet/minecraft/core/SectionPos; m
net/minecraft/world/entity/ai/goal/InteractGoal auj
net/minecraft/world/entity/ai/goal/JumpGoal auk
net/minecraft/world/entity/ai/goal/LandOnOwnersShoulderGoal aul
	entity a
	isSittingOnShoulder c
	owner b
	canUse ()Z a
	isInterruptable ()Z D_
	start ()V c
	tick ()V e
net/minecraft/world/entity/ai/goal/LeapAtTargetGoal aum
	mob a
	target b
	yd c
	canContinueToUse ()Z b
	canUse ()Z a
	start ()V c
net/minecraft/world/entity/ai/goal/LlamaFollowCaravanGoal aun
	distCheckCounter c
	llama a
	speedModifier b
	canContinueToUse ()Z b
	canUse ()Z a
	firstIsLeashed (Lnet/minecraft/world/entity/animal/horse/Llama;I)Z a
	stop ()V d
	tick ()V e
net/minecraft/world/entity/ai/goal/LookAtPlayerGoal auo
	lookAt b
	lookAtContext f
	lookAtType e
	lookDistance c
	lookTime g
	mob a
	probability d
	canContinueToUse ()Z b
	canUse ()Z a
	start ()V c
	stop ()V d
	tick ()V e
net/minecraft/world/entity/ai/goal/LookAtTradingPlayerGoal aup
	villager g
	canUse ()Z a
net/minecraft/world/entity/ai/goal/MeleeAttackGoal auq
	attackInterval j
	followingTargetEvenIfNotSeen c
	lastCanUseCheck k
	mob a
	path d
	pathedTargetX e
	pathedTargetY f
	pathedTargetZ g
	speedModifier b
	ticksUntilNextAttack i
	ticksUntilNextPathRecalculation h
	canContinueToUse ()Z b
	canUse ()Z a
	checkAndPerformAttack (Lnet/minecraft/world/entity/LivingEntity;D)V a
	getAttackInterval ()I k
	getAttackReachSqr (Lnet/minecraft/world/entity/LivingEntity;)D a
	getTicksUntilNextAttack ()I j
	isTimeToAttack ()Z h
	resetAttackCooldown ()V g
	start ()V c
	stop ()V d
	tick ()V e
net/minecraft/world/entity/ai/goal/MoveBackToVillageGoal aur
	canUse ()Z a
	getPosition ()Lnet/minecraft/world/phys/Vec3; g
net/minecraft/world/entity/ai/goal/MoveIndoorsGoal aus
	insideX b
	insideZ c
	mob a
	canContinueToUse ()Z b
	canUse ()Z a
	isInside ()Z g
	start ()V c
	stop ()V d
net/minecraft/world/entity/ai/goal/MoveThroughVillageGoal aut
	canDealWithDoors h
	distanceToPoi g
	mob a
	onlyAtNight e
	path c
	poiPos d
	speedModifier b
	visited f
	canContinueToUse ()Z b
	canUse ()Z a
	hasGroundPathNavigation ()Z h
	hasNotVisited (Lnet/minecraft/core/BlockPos;)Z a
	start ()V c
	stop ()V d
	updateVisited ()V g
net/minecraft/world/entity/ai/goal/MoveToBlockGoal auu
	blockPos e
	maxStayTicks g
	mob a
	nextStartTick c
	reachedTarget h
	searchRange i
	speedModifier b
	tryTicks d
	verticalSearchRange j
	verticalSearchStart f
	acceptedDistance ()D h
	canContinueToUse ()Z b
	canUse ()Z a
	findNearestBlock ()Z l
	isReachedTarget ()Z k
	isValidTarget (Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;)Z a
	moveMobToBlock ()V g
	nextStartTick (Lnet/minecraft/world/entity/PathfinderMob;)I a
	shouldRecalculatePath ()Z j
	start ()V c
	tick ()V e
net/minecraft/world/entity/ai/goal/MoveTowardsRestrictionGoal auv
	mob a
	speedModifier e
	wantedX b
	wantedY c
	wantedZ d
	canContinueToUse ()Z b
	canUse ()Z a
	start ()V c
net/minecraft/world/entity/ai/goal/MoveTowardsTargetGoal auw
	mob a
	speedModifier f
	target b
	wantedX c
	wantedY d
	wantedZ e
	within g
	canContinueToUse ()Z b
	canUse ()Z a
	start ()V c
	stop ()V d
net/minecraft/world/entity/ai/goal/OcelotAttackGoal auy
	attackTime d
	level a
	mob b
	target c
	canContinueToUse ()Z b
	canUse ()Z a
	stop ()V d
	tick ()V e
net/minecraft/world/entity/ai/goal/OfferFlowerGoal auz
	OFFER_TARGER_CONTEXT a
	golem b
	tick d
	villager c
	canContinueToUse ()Z b
	canUse ()Z a
	start ()V c
	stop ()V d
	tick ()V e
net/minecraft/world/entity/ai/goal/OpenDoorGoal ava
	closeDoor a
	forgetTime b
	canContinueToUse ()Z b
	start ()V c
	stop ()V d
	tick ()V e
net/minecraft/world/entity/ai/goal/PanicGoal avb
	isRunning f
	mob a
	posX c
	posY d
	posZ e
	speedModifier b
	canContinueToUse ()Z b
	canUse ()Z a
	findRandomPosition ()Z g
	isRunning ()Z h
	lookForWater (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/world/entity/Entity;II)Lnet/minecraft/core/BlockPos; a
	start ()V c
	stop ()V d
net/minecraft/world/entity/ai/goal/PathfindToRaidGoal avc
	mob a
	canContinueToUse ()Z b
	canUse ()Z a
	recruitNearby (Lnet/minecraft/world/entity/raid/Raid;)V a
	tick ()V e
net/minecraft/world/entity/ai/goal/PlayGoal avd
	followFriend b
	mob a
	playTime d
	speedModifier c
	canContinueToUse ()Z b
	canUse ()Z a
	start ()V c
	stop ()V d
	tick ()V e
net/minecraft/world/entity/ai/goal/RandomLookAroundGoal ave
	lookTime d
	mob a
	relX b
	relZ c
	canContinueToUse ()Z b
	canUse ()Z a
	start ()V c
	tick ()V e
net/minecraft/world/entity/ai/goal/RandomStrollGoal avf
	checkNoActionTime h
	forceTrigger g
	interval f
	mob a
	speedModifier e
	wantedX b
	wantedY c
	wantedZ d
	canContinueToUse ()Z b
	canUse ()Z a
	getPosition ()Lnet/minecraft/world/phys/Vec3; g
	setInterval (I)V a
	start ()V c
	stop ()V d
	trigger ()V h
net/minecraft/world/entity/ai/goal/RandomSwimmingGoal avg
	getPosition ()Lnet/minecraft/world/phys/Vec3; g
net/minecraft/world/entity/ai/goal/RangedAttackGoal avh
	attackIntervalMax h
	attackIntervalMin g
	attackRadius i
	attackRadiusSqr j
	attackTime d
	mob a
	rangedAttackMob b
	seeTime f
	speedModifier e
	target c
	canContinueToUse ()Z b
	canUse ()Z a
	stop ()V d
	tick ()V e
net/minecraft/world/entity/ai/goal/RangedBowAttackGoal avi
	attackIntervalMin c
	attackRadiusSqr d
	attackTime e
	mob a
	seeTime f
	speedModifier b
	strafingBackwards h
	strafingClockwise g
	strafingTime i
	canContinueToUse ()Z b
	canUse ()Z a
	isHoldingBow ()Z g
	setMinAttackInterval (I)V a
	start ()V c
	stop ()V d
	tick ()V e
net/minecraft/world/entity/ai/goal/RangedCrossbowAttackGoal avj
	PATHFINDING_DELAY_RANGE a
	attackDelay g
	attackRadiusSqr e
	crossbowState c
	mob b
	seeTime f
	speedModifier d
	updatePathDelay h
	canContinueToUse ()Z b
	canRun ()Z j
	canUse ()Z a
	isHoldingCrossbow ()Z g
	isValidTarget ()Z h
	stop ()V d
	tick ()V e
net/minecraft/world/entity/ai/goal/RangedCrossbowAttackGoal$CrossbowState avj$a
	$VALUES e
	CHARGED c
	CHARGING b
	READY_TO_ATTACK d
	UNCHARGED a
net/minecraft/world/entity/ai/goal/RemoveBlockGoal avk
	blockToRemove g
	removerMob h
	ticksSinceReachedGoal i
	canUse ()Z a
	getPosWithBlock (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/BlockGetter;)Lnet/minecraft/core/BlockPos; a
	isValidTarget (Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;)Z a
	playBreakSound (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)V a
	playDestroyProgressSound (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;)V a
	start ()V c
	stop ()V d
	tick ()V e
	tryFindBlock ()Z m
net/minecraft/world/entity/ai/goal/RestrictSunGoal avl
	mob a
	canUse ()Z a
	start ()V c
	stop ()V d
net/minecraft/world/entity/ai/goal/RunAroundLikeCrazyGoal avm
	horse a
	posX c
	posY d
	posZ e
	speedModifier b
	canContinueToUse ()Z b
	canUse ()Z a
	start ()V c
	tick ()V e
net/minecraft/world/entity/ai/goal/SitWhenOrderedToGoal avn
	mob a
	canContinueToUse ()Z b
	canUse ()Z a
	start ()V c
	stop ()V d
net/minecraft/world/entity/ai/goal/StrollThroughVillageGoal avo
	interval b
	mob a
	wantedPos c
	canContinueToUse ()Z b
	canUse ()Z a
	moveRandomly ()V g
	tick ()V e
net/minecraft/world/entity/ai/goal/SwellGoal avp
	creeper a
	target b
	canUse ()Z a
	start ()V c
	stop ()V d
	tick ()V e
net/minecraft/world/entity/ai/goal/TakeFlowerGoal avq
	golem b
	pickupTick c
	takeFlower d
	villager a
	canContinueToUse ()Z b
	canUse ()Z a
	start ()V c
	stop ()V d
	tick ()V e
net/minecraft/world/entity/ai/goal/TemptGoal avr
	TEMP_TARGETING c
	calmDown j
	canScare m
	isRunning k
	items l
	mob a
	pRotX h
	pRotY i
	player b
	px e
	py f
	pz g
	speedModifier d
	canContinueToUse ()Z b
	canScare ()Z g
	canUse ()Z a
	isRunning ()Z h
	shouldFollowItem (Lnet/minecraft/world/item/ItemStack;)Z a
	start ()V c
	stop ()V d
	tick ()V e
net/minecraft/world/entity/ai/goal/TradeWithPlayerGoal avs
	mob a
	canUse ()Z a
	start ()V c
	stop ()V d
net/minecraft/world/entity/ai/goal/TryFindWaterGoal avt
	mob a
	canUse ()Z a
	start ()V c
net/minecraft/world/entity/ai/goal/UseItemGoal avu
	canUseSelector c
	finishUsingSound d
	item b
	mob a
	canContinueToUse ()Z b
	canUse ()Z a
	start ()V c
	stop ()V d
net/minecraft/world/entity/ai/goal/WaterAvoidingRandomFlyingGoal avv
	getPosition ()Lnet/minecraft/world/phys/Vec3; g
	getTreePos ()Lnet/minecraft/world/phys/Vec3; j
net/minecraft/world/entity/ai/goal/WaterAvoidingRandomStrollGoal avw
	probability h
	getPosition ()Lnet/minecraft/world/phys/Vec3; g
net/minecraft/world/entity/ai/goal/WrappedGoal avx
	goal a
	isRunning c
	priority b
	canBeReplacedBy (Lnet/minecraft/world/entity/ai/goal/WrappedGoal;)Z a
	canContinueToUse ()Z b
	canUse ()Z a
	getFlags ()Ljava/util/EnumSet; i
	getGoal ()Lnet/minecraft/world/entity/ai/goal/Goal; j
	getPriority ()I h
	isInterruptable ()Z D_
	isRunning ()Z g
	setFlags (Ljava/util/EnumSet;)V a
	start ()V c
	stop ()V d
	tick ()V e
net/minecraft/world/entity/ai/goal/ZombieAttackGoal avy
	raiseArmTicks c
	zombie b
	start ()V c
	stop ()V d
	tick ()V e
net/minecraft/world/entity/ai/goal/target/DefendVillageTargetGoal awa
	attackTargeting c
	golem a
	potentialTarget b
	canUse ()Z a
	start ()V c
net/minecraft/world/entity/ai/goal/target/HurtByTargetGoal awb
	HURT_BY_TARGETING a
	alertSameType b
	timestamp c
	toIgnoreAlert i
	toIgnoreDamage d
	alertOther (Lnet/minecraft/world/entity/Mob;Lnet/minecraft/world/entity/LivingEntity;)V a
	alertOthers ()V g
	canUse ()Z a
	setAlertOthers ([Ljava/lang/Class;)Lnet/minecraft/world/entity/ai/goal/target/HurtByTargetGoal; a
	start ()V c
net/minecraft/world/entity/ai/goal/target/NearestAttackableTargetGoal awc
	randomInterval b
	target c
	targetConditions d
	targetType a
	canUse ()Z a
	findTarget ()V g
	getTargetSearchArea (D)Lnet/minecraft/world/phys/AABB; a
	setTarget (Lnet/minecraft/world/entity/LivingEntity;)V a
	start ()V c
net/minecraft/world/entity/ai/goal/target/NearestAttackableWitchTargetGoal awd
	canAttack i
	canUse ()Z a
	setCanAttack (Z)V a
net/minecraft/world/entity/ai/goal/target/NearestHealableRaiderTargetGoal awe
	cooldown i
	canUse ()Z a
	decrementCooldown ()V j
	getCooldown ()I h
	start ()V c
net/minecraft/world/entity/ai/goal/target/NonTameRandomTargetGoal awf
	tamableMob i
	canContinueToUse ()Z b
	canUse ()Z a
net/minecraft/world/entity/ai/goal/target/OwnerHurtByTargetGoal awg
	ownerLastHurtBy b
	tameAnimal a
	timestamp c
	canUse ()Z a
	start ()V c
net/minecraft/world/entity/ai/goal/target/OwnerHurtTargetGoal awh
	ownerLastHurt b
	tameAnimal a
	timestamp c
	canUse ()Z a
	start ()V c
net/minecraft/world/entity/ai/goal/target/ResetUniversalAngerTargetGoal awi
	alertOthersOfSameType b
	lastHurtByPlayerTimestamp c
	mob a
	canUse ()Z a
	getNearbyMobsOfSameType ()Ljava/util/List; h
	start ()V c
	wasHurtByPlayer ()Z g
net/minecraft/world/entity/ai/goal/target/TargetGoal awj
	mob e
	mustReach a
	mustSee f
	reachCache b
	reachCacheTime c
	targetMob g
	unseenMemoryTicks h
	unseenTicks d
	canAttack (Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/entity/ai/targeting/TargetingConditions;)Z a
	canContinueToUse ()Z b
	canReach (Lnet/minecraft/world/entity/LivingEntity;)Z a
	getFollowDistance ()D k
	setUnseenMemoryTicks (I)Lnet/minecraft/world/entity/ai/goal/target/TargetGoal; a
	start ()V c
	stop ()V d
net/minecraft/world/entity/ai/gossip/GossipContainer awl
	gossips a
	add (Ljava/util/UUID;Lnet/minecraft/world/entity/ai/gossip/GossipType;I)V a
	decay ()V b
	getCountForType (Lnet/minecraft/world/entity/ai/gossip/GossipType;Ljava/util/function/DoublePredicate;)J a
	getGossipEntries ()Ljava/util/Map; a
	getOrCreate (Ljava/util/UUID;)Lnet/minecraft/world/entity/ai/gossip/GossipContainer$EntityGossips; a
	getReputation (Ljava/util/UUID;Ljava/util/function/Predicate;)I a
	mergeValuesForAddition (Lnet/minecraft/world/entity/ai/gossip/GossipType;II)I a
	mergeValuesForTransfer (II)I a
	remove (Ljava/util/UUID;Lnet/minecraft/world/entity/ai/gossip/GossipType;)V a
	remove (Ljava/util/UUID;Lnet/minecraft/world/entity/ai/gossip/GossipType;I)V b
	remove (Lnet/minecraft/world/entity/ai/gossip/GossipType;)V a
	selectGossipsForTransfer (Ljava/util/Random;I)Ljava/util/Collection; a
	store (Lcom/mojang/serialization/DynamicOps;)Lcom/mojang/serialization/Dynamic; a
	transferFrom (Lnet/minecraft/world/entity/ai/gossip/GossipContainer;Ljava/util/Random;I)V a
	unpack ()Ljava/util/stream/Stream; c
	update (Lcom/mojang/serialization/Dynamic;)V a
net/minecraft/world/entity/ai/gossip/GossipContainer$EntityGossips awl$a
	entries a
	decay ()V a
	isEmpty ()Z b
	makeSureValueIsntTooLowOrTooHigh (Lnet/minecraft/world/entity/ai/gossip/GossipType;)V a
	remove (Lnet/minecraft/world/entity/ai/gossip/GossipType;)V b
	unpack (Ljava/util/UUID;)Ljava/util/stream/Stream; a
	weightedValue (Ljava/util/function/Predicate;)I a
net/minecraft/world/entity/ai/gossip/GossipContainer$GossipEntry awl$b
	target a
	type b
	value c
	load (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/DataResult; a
	store (Lcom/mojang/serialization/DynamicOps;)Lcom/mojang/serialization/Dynamic; a
	weightedValue ()I a
net/minecraft/world/entity/ai/gossip/GossipType awm
	$VALUES l
	BY_ID k
	MAJOR_NEGATIVE a
	MAJOR_POSITIVE d
	MINOR_NEGATIVE b
	MINOR_POSITIVE c
	TRADING e
	decayPerDay i
	decayPerTransfer j
	id f
	max h
	weight g
	byId (Ljava/lang/String;)Lnet/minecraft/world/entity/ai/gossip/GossipType; a
net/minecraft/world/entity/ai/memory/ExpirableValue awo
	timeToLive b
	value a
	canExpire ()Z e
	codec (Lcom/mojang/serialization/Codec;)Lcom/mojang/serialization/Codec; a
	getTimeToLive ()J b
	getValue ()Ljava/lang/Object; c
	hasExpired ()Z d
	of (Ljava/lang/Object;)Lnet/minecraft/world/entity/ai/memory/ExpirableValue; a
	of (Ljava/lang/Object;J)Lnet/minecraft/world/entity/ai/memory/ExpirableValue; a
	tick ()V a
net/minecraft/world/entity/ai/memory/MemoryModuleType awp
	ADMIRING_DISABLED O
	ADMIRING_ITEM N
	ANGRY_AT L
	ATE_RECENTLY ae
	ATTACK_COOLING_DOWN p
	ATTACK_TARGET o
	AVOID_TARGET z
	BREED_TARGET r
	CANT_REACH_WALK_TARGET_SINCE D
	CELEBRATE_LOCATION Q
	DANCING R
	DUMMY a
	GOLEM_LAST_SEEN_TIME E
	HEARD_BELL_TIME C
	HIDING_PLACE B
	HOME b
	HUNTED_RECENTLY P
	HURT_BY x
	HURT_BY_ENTITY y
	INTERACTABLE_DOORS u
	INTERACTION_TARGET q
	JOB_SITE c
	LAST_SLEPT F
	LAST_WOKEN G
	LAST_WORKED_AT_POI H
	LIVING_ENTITIES g
	LOOK_TARGET n
	MEETING_POINT e
	NEAREST_ADULT_PIGLINS W
	NEAREST_BED w
	NEAREST_HOSTILE A
	NEAREST_PLAYERS j
	NEAREST_PLAYER_HOLDING_WANTED_ITEM ad
	NEAREST_REPELLENT af
	NEAREST_TARGETABLE_PLAYER_NOT_WEARING_GOLD V
	NEAREST_VISIBLE_ADULT I
	NEAREST_VISIBLE_ADULT_HOGLINS Y
	NEAREST_VISIBLE_ADULT_PIGLIN Z
	NEAREST_VISIBLE_ADULT_PIGLINS X
	NEAREST_VISIBLE_BABY_HOGLIN T
	NEAREST_VISIBLE_BABY_PIGLIN U
	NEAREST_VISIBLE_HUNTABLE_HOGLIN S
	NEAREST_VISIBLE_NEMESIS K
	NEAREST_VISIBLE_PLAYER k
	NEAREST_VISIBLE_TARGETABLE_PLAYER l
	NEAREST_VISIBLE_WANTED_ITEM J
	NEAREST_VISIBLE_ZOMBIFIED aa
	OPENED_DOORS v
	PACIFIED ag
	PATH t
	POTENTIAL_JOB_SITE d
	RIDE_TARGET s
	SECONDARY_JOB_SITE f
	UNIVERSAL_ANGER M
	VISIBLE_ADULT_HOGLIN_COUNT ac
	VISIBLE_ADULT_PIGLIN_COUNT ab
	VISIBLE_LIVING_ENTITIES h
	VISIBLE_VILLAGER_BABIES i
	WALK_TARGET m
	codec ah
	getCodec ()Ljava/util/Optional; a
	register (Ljava/lang/String;)Lnet/minecraft/world/entity/ai/memory/MemoryModuleType; a
	register (Ljava/lang/String;Lcom/mojang/serialization/Codec;)Lnet/minecraft/world/entity/ai/memory/MemoryModuleType; a
net/minecraft/world/entity/ai/memory/MemoryStatus awq
	$VALUES d
	REGISTERED c
	VALUE_ABSENT b
	VALUE_PRESENT a
net/minecraft/world/entity/ai/memory/WalkTarget awr
	closeEnoughDist c
	speedModifier b
	target a
	getCloseEnoughDist ()I c
	getSpeedModifier ()F b
	getTarget ()Lnet/minecraft/world/entity/ai/behavior/PositionTracker; a
net/minecraft/world/entity/ai/navigation/FlyingPathNavigation awt
	canMoveDirectly (Lnet/minecraft/world/phys/Vec3;Lnet/minecraft/world/phys/Vec3;III)Z a
	canOpenDoors ()Z e
	canPassDoors ()Z d
	canUpdatePath ()Z a
	createPath (Lnet/minecraft/world/entity/Entity;I)Lnet/minecraft/world/level/pathfinder/Path; a
	createPathFinder (I)Lnet/minecraft/world/level/pathfinder/PathFinder; a
	getTempMobPos ()Lnet/minecraft/world/phys/Vec3; b
	isStableDestination (Lnet/minecraft/core/BlockPos;)Z a
	setCanOpenDoors (Z)V a
	setCanPassDoors (Z)V b
	tick ()V c
net/minecraft/world/entity/ai/navigation/GroundPathNavigation awu
	avoidSun p
	canMoveDirectly (Lnet/minecraft/world/phys/Vec3;Lnet/minecraft/world/phys/Vec3;III)Z a
	canOpenDoors ()Z f
	canPassDoors ()Z e
	canUpdatePath ()Z a
	canWalkAbove (IIIIIILnet/minecraft/world/phys/Vec3;DD)Z b
	canWalkOn (IIIIIILnet/minecraft/world/phys/Vec3;DD)Z a
	createPath (Lnet/minecraft/core/BlockPos;I)Lnet/minecraft/world/level/pathfinder/Path; a
	createPath (Lnet/minecraft/world/entity/Entity;I)Lnet/minecraft/world/level/pathfinder/Path; a
	createPathFinder (I)Lnet/minecraft/world/level/pathfinder/PathFinder; a
	getSurfaceY ()I t
	getTempMobPos ()Lnet/minecraft/world/phys/Vec3; b
	hasValidPathType (Lnet/minecraft/world/level/pathfinder/BlockPathTypes;)Z a
	setAvoidSun (Z)V c
	setCanOpenDoors (Z)V a
	setCanPassDoors (Z)V b
	trimPath ()V E_
net/minecraft/world/entity/ai/navigation/PathNavigation awv
	hasDelayedRecomputation m
	lastStuckCheck f
	lastStuckCheckPos g
	lastTimeoutCheck j
	level b
	maxDistanceToWaypoint l
	maxVisitedNodesMultiplier r
	mob a
	nodeEvaluator o
	path c
	pathFinder s
	reachRange q
	speedModifier d
	targetPos p
	tick e
	timeLastRecompute n
	timeoutCachedNode h
	timeoutLimit k
	timeoutTimer i
	canFloat ()Z r
	canMoveDirectly (Lnet/minecraft/world/phys/Vec3;Lnet/minecraft/world/phys/Vec3;III)Z a
	canUpdatePath ()Z a
	createPath (DDDI)Lnet/minecraft/world/level/pathfinder/Path; a
	createPath (Ljava/util/Set;I)Lnet/minecraft/world/level/pathfinder/Path; a
	createPath (Ljava/util/Set;IZI)Lnet/minecraft/world/level/pathfinder/Path; a
	createPath (Ljava/util/stream/Stream;I)Lnet/minecraft/world/level/pathfinder/Path; a
	createPath (Lnet/minecraft/core/BlockPos;I)Lnet/minecraft/world/level/pathfinder/Path; a
	createPath (Lnet/minecraft/world/entity/Entity;I)Lnet/minecraft/world/level/pathfinder/Path; a
	createPathFinder (I)Lnet/minecraft/world/level/pathfinder/PathFinder; a
	doStuckDetection (Lnet/minecraft/world/phys/Vec3;)V a
	followThePath ()V l
	getMaxDistanceToWaypoint ()F s
	getNodeEvaluator ()Lnet/minecraft/world/level/pathfinder/NodeEvaluator; q
	getPath ()Lnet/minecraft/world/level/pathfinder/Path; k
	getTargetPos ()Lnet/minecraft/core/BlockPos; h
	getTempMobPos ()Lnet/minecraft/world/phys/Vec3; b
	hasDelayedRecomputation ()Z i
	isDone ()Z m
	isInLiquid ()Z p
	isInProgress ()Z n
	isStableDestination (Lnet/minecraft/core/BlockPos;)Z a
	moveTo (DDDD)Z a
	moveTo (Lnet/minecraft/world/entity/Entity;D)Z a
	moveTo (Lnet/minecraft/world/level/pathfinder/Path;D)Z a
	recomputePath ()V j
	recomputePath (Lnet/minecraft/core/BlockPos;)V b
	resetMaxVisitedNodesMultiplier ()V g
	resetStuckTimeout ()V e
	setCanFloat (Z)V d
	setMaxVisitedNodesMultiplier (F)V a
	setSpeedModifier (D)V a
	shouldTargetNextNodeInDirection (Lnet/minecraft/world/phys/Vec3;)Z b
	stop ()V o
	tick ()V c
	trimPath ()V E_
net/minecraft/world/entity/ai/navigation/WallClimberNavigation aww
	pathToPosition p
	createPath (Lnet/minecraft/core/BlockPos;I)Lnet/minecraft/world/level/pathfinder/Path; a
	createPath (Lnet/minecraft/world/entity/Entity;I)Lnet/minecraft/world/level/pathfinder/Path; a
	moveTo (Lnet/minecraft/world/entity/Entity;D)Z a
	tick ()V c
net/minecraft/world/entity/ai/navigation/WaterBoundPathNavigation awx
	allowBreaching p
	canMoveDirectly (Lnet/minecraft/world/phys/Vec3;Lnet/minecraft/world/phys/Vec3;III)Z a
	canUpdatePath ()Z a
	createPathFinder (I)Lnet/minecraft/world/level/pathfinder/PathFinder; a
	doStuckDetection (Lnet/minecraft/world/phys/Vec3;)V a
	followThePath ()V l
	getTempMobPos ()Lnet/minecraft/world/phys/Vec3; b
	isStableDestination (Lnet/minecraft/core/BlockPos;)Z a
	setCanFloat (Z)V d
	tick ()V c
net/minecraft/world/entity/ai/sensing/AdultSensor axa
	doTick (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/AgableMob;)V a
	doTick (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)V a
	requires ()Ljava/util/Set; a
	setNearestVisibleAdult (Lnet/minecraft/world/entity/AgableMob;Ljava/util/List;)V a
net/minecraft/world/entity/ai/sensing/DummySensor axb
	doTick (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)V a
	requires ()Ljava/util/Set; a
net/minecraft/world/entity/ai/sensing/GolemSensor axc
	checkForNearbyGolem (JLnet/minecraft/world/entity/LivingEntity;)V a
	doTick (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)V a
	requires ()Ljava/util/Set; a
net/minecraft/world/entity/ai/sensing/HoglinSpecificSensor axd
	doTick (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)V a
	doTick (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/monster/hoglin/Hoglin;)V a
	findNearestRepellent (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/monster/hoglin/Hoglin;)Ljava/util/Optional; b
	requires ()Ljava/util/Set; a
net/minecraft/world/entity/ai/sensing/HurtBySensor axe
	doTick (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)V a
	requires ()Ljava/util/Set; a
net/minecraft/world/entity/ai/sensing/InteractableDoorsSensor axf
	doTick (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)V a
	requires ()Ljava/util/Set; a
net/minecraft/world/entity/ai/sensing/NearestBedSensor axg
	batchCache a
	lastUpdate c
	triedCount b
	doTick (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)V a
	doTick (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/Mob;)V a
	requires ()Ljava/util/Set; a
net/minecraft/world/entity/ai/sensing/NearestItemSensor axh
	doTick (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)V a
	doTick (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/Mob;)V a
	requires ()Ljava/util/Set; a
net/minecraft/world/entity/ai/sensing/NearestLivingEntitySensor axi
	TARGETING a
	doTick (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)V a
	requires ()Ljava/util/Set; a
net/minecraft/world/entity/ai/sensing/PiglinSpecificSensor axj
	doTick (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)V a
	findNearestRepellent (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)Ljava/util/Optional; c
	isValidRepellent (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;)Z a
	requires ()Ljava/util/Set; a
net/minecraft/world/entity/ai/sensing/PlayerSensor axk
	TARGETING a
	doTick (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)V a
	requires ()Ljava/util/Set; a
net/minecraft/world/entity/ai/sensing/SecondaryPoiSensor axl
	doTick (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)V a
	doTick (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/npc/Villager;)V a
	requires ()Ljava/util/Set; a
net/minecraft/world/entity/ai/sensing/Sensing axm
	mob a
	seen b
	unseen c
	canSee (Lnet/minecraft/world/entity/Entity;)Z a
	tick ()V a
net/minecraft/world/entity/ai/sensing/Sensor axn
	RANDOM a
	scanRate b
	timeToTick c
	doTick (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)V a
	requires ()Ljava/util/Set; a
	tick (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)V b
net/minecraft/world/entity/ai/sensing/SensorType axo
	DUMMY a
	GOLEM_LAST_SEEN k
	HOGLIN_SPECIFIC_SENSOR m
	HURT_BY g
	INTERACTABLE_DOORS e
	NEAREST_ADULT n
	NEAREST_BED f
	NEAREST_ITEMS b
	NEAREST_LIVING_ENTITIES c
	NEAREST_PLAYERS d
	PIGLIN_SPECIFIC_SENSOR l
	SECONDARY_POIS j
	VILLAGER_BABIES i
	VILLAGER_HOSTILES h
	factory o
	create ()Lnet/minecraft/world/entity/ai/sensing/Sensor; a
	register (Ljava/lang/String;Ljava/util/function/Supplier;)Lnet/minecraft/world/entity/ai/sensing/SensorType; a
net/minecraft/world/entity/ai/sensing/VillagerBabiesSensor axp
	doTick (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)V a
	getNearestVillagerBabies (Lnet/minecraft/world/entity/LivingEntity;)Ljava/util/List; a
	getVisibleEntities (Lnet/minecraft/world/entity/LivingEntity;)Ljava/util/List; c
	isVillagerBaby (Lnet/minecraft/world/entity/LivingEntity;)Z b
	requires ()Ljava/util/Set; a
net/minecraft/world/entity/ai/sensing/VillagerHostilesSensor axq
	ACCEPTABLE_DISTANCE_FROM_HOSTILES a
	compareMobDistance (Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/entity/LivingEntity;)I a
	doTick (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)V a
	getNearestHostile (Lnet/minecraft/world/entity/LivingEntity;)Ljava/util/Optional; a
	getVisibleEntities (Lnet/minecraft/world/entity/LivingEntity;)Ljava/util/Optional; b
	isClose (Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/entity/LivingEntity;)Z a
	isHostile (Lnet/minecraft/world/entity/LivingEntity;)Z c
	requires ()Ljava/util/Set; a
net/minecraft/world/entity/ai/targeting/TargetingConditions axs
	DEFAULT a
	allowInvulnerable c
	allowNonAttackable f
	allowSameTeam d
	allowUnseeable e
	range b
	selector h
	testInvisible g
	allowInvulnerable ()Lnet/minecraft/world/entity/ai/targeting/TargetingConditions; a
	allowNonAttackable ()Lnet/minecraft/world/entity/ai/targeting/TargetingConditions; d
	allowSameTeam ()Lnet/minecraft/world/entity/ai/targeting/TargetingConditions; b
	allowUnseeable ()Lnet/minecraft/world/entity/ai/targeting/TargetingConditions; c
	ignoreInvisibilityTesting ()Lnet/minecraft/world/entity/ai/targeting/TargetingConditions; e
	range (D)Lnet/minecraft/world/entity/ai/targeting/TargetingConditions; a
	selector (Ljava/util/function/Predicate;)Lnet/minecraft/world/entity/ai/targeting/TargetingConditions; a
	test (Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/entity/LivingEntity;)Z a
net/minecraft/world/entity/ai/util/RandomPos axu
	generateRandomPos (Lnet/minecraft/world/entity/PathfinderMob;IIILnet/minecraft/world/phys/Vec3;ZDLjava/util/function/ToDoubleFunction;ZIIZ)Lnet/minecraft/world/phys/Vec3; a
	getAboveLandPos (Lnet/minecraft/world/entity/PathfinderMob;IILnet/minecraft/world/phys/Vec3;FII)Lnet/minecraft/world/phys/Vec3; a
	getAirPos (Lnet/minecraft/world/entity/PathfinderMob;IIILnet/minecraft/world/phys/Vec3;D)Lnet/minecraft/world/phys/Vec3; a
	getAirPosTowards (Lnet/minecraft/world/entity/PathfinderMob;IIILnet/minecraft/world/phys/Vec3;D)Lnet/minecraft/world/phys/Vec3; b
	getLandPos (Lnet/minecraft/world/entity/PathfinderMob;II)Lnet/minecraft/world/phys/Vec3; b
	getLandPos (Lnet/minecraft/world/entity/PathfinderMob;IILjava/util/function/ToDoubleFunction;)Lnet/minecraft/world/phys/Vec3; a
	getLandPosAvoid (Lnet/minecraft/world/entity/PathfinderMob;IILnet/minecraft/world/phys/Vec3;)Lnet/minecraft/world/phys/Vec3; d
	getLandPosTowards (Lnet/minecraft/world/entity/PathfinderMob;IILnet/minecraft/world/phys/Vec3;)Lnet/minecraft/world/phys/Vec3; a
	getPos (Lnet/minecraft/world/entity/PathfinderMob;II)Lnet/minecraft/world/phys/Vec3; a
	getPosAvoid (Lnet/minecraft/world/entity/PathfinderMob;IILnet/minecraft/world/phys/Vec3;)Lnet/minecraft/world/phys/Vec3; c
	getPosTowards (Lnet/minecraft/world/entity/PathfinderMob;IILnet/minecraft/world/phys/Vec3;)Lnet/minecraft/world/phys/Vec3; b
	getPosTowards (Lnet/minecraft/world/entity/PathfinderMob;IILnet/minecraft/world/phys/Vec3;D)Lnet/minecraft/world/phys/Vec3; a
	getRandomDelta (Ljava/util/Random;IIILnet/minecraft/world/phys/Vec3;D)Lnet/minecraft/core/BlockPos; a
	moveUpToAboveSolid (Lnet/minecraft/core/BlockPos;IILjava/util/function/Predicate;)Lnet/minecraft/core/BlockPos; a
net/minecraft/world/entity/ai/village/ReputationEventType axw
	GOLEM_KILLED b
	TRADE e
	VILLAGER_HURT c
	VILLAGER_KILLED d
	ZOMBIE_VILLAGER_CURED a
	register (Ljava/lang/String;)Lnet/minecraft/world/entity/ai/village/ReputationEventType; a
net/minecraft/world/entity/ai/village/VillageSiege axx
	hasSetupSiege a
	nextSpawnTime d
	siegeState b
	spawnX e
	spawnY f
	spawnZ g
	zombiesToSpawn c
	findRandomSpawnPos (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/phys/Vec3; a
	tick (Lnet/minecraft/server/level/ServerLevel;ZZ)I a
	trySpawn (Lnet/minecraft/server/level/ServerLevel;)V b
	tryToSetupSiege (Lnet/minecraft/server/level/ServerLevel;)Z a
net/minecraft/world/entity/ai/village/VillageSiege$State axx$a
	$VALUES d
	SIEGE_CAN_ACTIVATE a
	SIEGE_DONE c
	SIEGE_TONIGHT b
net/minecraft/world/entity/ai/village/poi/PoiManager axz
	distanceTracker a
	loadedChunks b
	add (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/ai/village/poi/PoiType;)V a
	checkConsistencyWithBlocks (Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/world/level/chunk/LevelChunkSection;)V a
	ensureLoadedAndValid (Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;I)V a
	exists (Lnet/minecraft/core/BlockPos;Ljava/util/function/Predicate;)Z a
	existsAtPosition (Lnet/minecraft/world/entity/ai/village/poi/PoiType;Lnet/minecraft/core/BlockPos;)Z a
	find (Ljava/util/function/Predicate;Ljava/util/function/Predicate;Lnet/minecraft/core/BlockPos;ILnet/minecraft/world/entity/ai/village/poi/PoiManager$Occupancy;)Ljava/util/Optional; b
	findAll (Ljava/util/function/Predicate;Ljava/util/function/Predicate;Lnet/minecraft/core/BlockPos;ILnet/minecraft/world/entity/ai/village/poi/PoiManager$Occupancy;)Ljava/util/stream/Stream; a
	findClosest (Ljava/util/function/Predicate;Lnet/minecraft/core/BlockPos;ILnet/minecraft/world/entity/ai/village/poi/PoiManager$Occupancy;)Ljava/util/Optional; d
	getCountInRange (Ljava/util/function/Predicate;Lnet/minecraft/core/BlockPos;ILnet/minecraft/world/entity/ai/village/poi/PoiManager$Occupancy;)J a
	getFreeTickets (Lnet/minecraft/core/BlockPos;)I d
	getInChunk (Ljava/util/function/Predicate;Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/world/entity/ai/village/poi/PoiManager$Occupancy;)Ljava/util/stream/Stream; a
	getInRange (Ljava/util/function/Predicate;Lnet/minecraft/core/BlockPos;ILnet/minecraft/world/entity/ai/village/poi/PoiManager$Occupancy;)Ljava/util/stream/Stream; c
	getInSquare (Ljava/util/function/Predicate;Lnet/minecraft/core/BlockPos;ILnet/minecraft/world/entity/ai/village/poi/PoiManager$Occupancy;)Ljava/util/stream/Stream; b
	getRandom (Ljava/util/function/Predicate;Ljava/util/function/Predicate;Lnet/minecraft/world/entity/ai/village/poi/PoiManager$Occupancy;Lnet/minecraft/core/BlockPos;ILjava/util/Random;)Ljava/util/Optional; a
	getType (Lnet/minecraft/core/BlockPos;)Ljava/util/Optional; c
	isVillageCenter (J)Z f
	mayHavePoi (Lnet/minecraft/world/level/chunk/LevelChunkSection;)Z a
	onSectionLoad (J)V b
	release (Lnet/minecraft/core/BlockPos;)Z b
	remove (Lnet/minecraft/core/BlockPos;)V a
	sectionsToVillage (Lnet/minecraft/core/SectionPos;)I a
	setDirty (J)V a
	take (Ljava/util/function/Predicate;Ljava/util/function/Predicate;Lnet/minecraft/core/BlockPos;I)Ljava/util/Optional; a
	tick (Ljava/util/function/BooleanSupplier;)V a
	updateFromSection (Lnet/minecraft/world/level/chunk/LevelChunkSection;Lnet/minecraft/core/SectionPos;Ljava/util/function/BiConsumer;)V a
net/minecraft/world/entity/ai/village/poi/PoiManager$DistanceTracker axz$a
	levels b
	getLevel (J)I c
	getLevelFromSource (J)I b
	runAllUpdates ()V a
	setLevel (JI)V a
net/minecraft/world/entity/ai/village/poi/PoiManager$Occupancy axz$b
	$VALUES e
	ANY c
	HAS_SPACE a
	IS_OCCUPIED b
	test d
	getTest ()Ljava/util/function/Predicate; a
net/minecraft/world/entity/ai/village/poi/PoiRecord aya
	freeTickets c
	poiType b
	pos a
	setDirty d
	acquireTicket ()Z b
	codec (Ljava/lang/Runnable;)Lcom/mojang/serialization/Codec; a
	getFreeTickets ()I a
	getPoiType ()Lnet/minecraft/world/entity/ai/village/poi/PoiType; g
	getPos ()Lnet/minecraft/core/BlockPos; f
	hasSpace ()Z d
	isOccupied ()Z e
	releaseTicket ()Z c
net/minecraft/world/entity/ai/village/poi/PoiSection ayb
	LOGGER a
	byType c
	isValid e
	records b
	setDirty d
	add (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/ai/village/poi/PoiType;)V a
	add (Lnet/minecraft/world/entity/ai/village/poi/PoiRecord;)Z a
	clear ()V b
	codec (Ljava/lang/Runnable;)Lcom/mojang/serialization/Codec; a
	exists (Lnet/minecraft/core/BlockPos;Ljava/util/function/Predicate;)Z a
	getFreeTickets (Lnet/minecraft/core/BlockPos;)I b
	getRecords (Ljava/util/function/Predicate;Lnet/minecraft/world/entity/ai/village/poi/PoiManager$Occupancy;)Ljava/util/stream/Stream; a
	getType (Lnet/minecraft/core/BlockPos;)Ljava/util/Optional; d
	isValid ()Z a
	refresh (Ljava/util/function/Consumer;)V a
	release (Lnet/minecraft/core/BlockPos;)Z c
	remove (Lnet/minecraft/core/BlockPos;)V a
net/minecraft/world/entity/ai/village/poi/PoiType ayc
	ALL b
	ALL_JOBS a
	ALL_JOB_POI_TYPES y
	ALL_STATES x
	ARMORER d
	BEDS z
	BEEHIVE t
	BEE_NEST u
	BUTCHER e
	CARTOGRAPHER f
	CLERIC g
	FARMER h
	FISHERMAN i
	FLETCHER j
	HOME r
	LEATHERWORKER k
	LIBRARIAN l
	LODESTONE w
	MASON m
	MEETING s
	NETHER_PORTAL v
	NITWIT n
	SHEPHERD o
	TOOLSMITH p
	TYPE_BY_STATE A
	UNEMPLOYED c
	WEAPONSMITH q
	matchingStates C
	maxTickets D
	name B
	predicate E
	validRange F
	forState (Lnet/minecraft/world/level/block/state/BlockState;)Ljava/util/Optional; b
	getBlockStates (Lnet/minecraft/world/level/block/Block;)Ljava/util/Set; a
	getMaxTickets ()I b
	getName ()Ljava/lang/String; a
	getPredicate ()Ljava/util/function/Predicate; c
	getValidRange ()I d
	is (Lnet/minecraft/world/level/block/state/BlockState;)Z a
	register (Ljava/lang/String;Ljava/util/Set;II)Lnet/minecraft/world/entity/ai/village/poi/PoiType; a
	register (Ljava/lang/String;Ljava/util/Set;ILjava/util/function/Predicate;I)Lnet/minecraft/world/entity/ai/village/poi/PoiType; a
	registerBlockStates (Lnet/minecraft/world/entity/ai/village/poi/PoiType;)Lnet/minecraft/world/entity/ai/village/poi/PoiType; a
net/minecraft/world/entity/ambient/AmbientCreature aye
	canBeLeashed (Lnet/minecraft/world/entity/player/Player;)Z a
net/minecraft/world/entity/ambient/Bat ayf
	BAT_RESTING_TARGETING c
	DATA_ID_FLAGS b
	targetPosition d
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	causeFallDamage (FF)Z b
	checkBatSpawnRules (Lnet/minecraft/world/entity/EntityType;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/world/entity/MobSpawnType;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)Z b
	checkFallDamage (DZLnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/BlockPos;)V a
	createAttributes ()Lnet/minecraft/world/entity/ai/attributes/AttributeSupplier$Builder; m
	customServerAiStep ()V N
	defineSynchedData ()V e
	doPush (Lnet/minecraft/world/entity/Entity;)V C
	getAmbientSound ()Lnet/minecraft/sounds/SoundEvent; I
	getDeathSound ()Lnet/minecraft/sounds/SoundEvent; dp
	getHurtSound (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEvent; e
	getSoundVolume ()F dF
	getStandingEyeHeight (Lnet/minecraft/world/entity/Pose;Lnet/minecraft/world/entity/EntityDimensions;)F b
	getVoicePitch ()F dG
	hurt (Lnet/minecraft/world/damagesource/DamageSource;F)Z a
	isHalloween ()Z eK
	isIgnoringBlockTriggers ()Z bP
	isMovementNoisy ()Z ax
	isPushable ()Z aR
	isResting ()Z eJ
	pushEntities ()V dP
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	setResting (Z)V t
	tick ()V j
net/minecraft/world/entity/animal/AbstractFish ayh
	FROM_BUCKET b
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	aiStep ()V k
	canRandomSwim ()Z eM
	checkFishSpawnRules (Lnet/minecraft/world/entity/EntityType;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/world/entity/MobSpawnType;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)Z b
	createAttributes ()Lnet/minecraft/world/entity/ai/attributes/AttributeSupplier$Builder; m
	createNavigation (Lnet/minecraft/world/level/Level;)Lnet/minecraft/world/entity/ai/navigation/PathNavigation; b
	defineSynchedData ()V e
	fromBucket ()Z eO
	getBucketItemStack ()Lnet/minecraft/world/item/ItemStack; eL
	getFlopSound ()Lnet/minecraft/sounds/SoundEvent; eN
	getMaxSpawnClusterSize ()I er
	getStandingEyeHeight (Lnet/minecraft/world/entity/Pose;Lnet/minecraft/world/entity/EntityDimensions;)F b
	getSwimSound ()Lnet/minecraft/sounds/SoundEvent; aq
	mobInteract (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResult; b
	playStepSound (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V a
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	registerGoals ()V o
	removeWhenFarAway (D)Z h
	requiresCustomPersistence ()Z K
	saveToBucketTag (Lnet/minecraft/world/item/ItemStack;)V k
	setFromBucket (Z)V t
	travel (Lnet/minecraft/world/phys/Vec3;)V f
net/minecraft/world/entity/animal/AbstractFish$FishMoveControl ayh$a
	fish i
	tick ()V a
net/minecraft/world/entity/animal/AbstractFish$FishSwimGoal ayh$b
	fish h
	canUse ()Z a
net/minecraft/world/entity/animal/AbstractGolem ayi
	causeFallDamage (FF)Z b
	getAmbientSound ()Lnet/minecraft/sounds/SoundEvent; I
	getAmbientSoundInterval ()I D
	getDeathSound ()Lnet/minecraft/sounds/SoundEvent; dp
	getHurtSound (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEvent; e
	removeWhenFarAway (D)Z h
net/minecraft/world/entity/animal/AbstractSchoolingFish ayj
	leader b
	schoolSize c
	addFollower ()V eV
	addFollowers (Ljava/util/stream/Stream;)V a
	canBeFollowed ()Z eR
	canRandomSwim ()Z eM
	finalizeSpawn (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/world/DifficultyInstance;Lnet/minecraft/world/entity/MobSpawnType;Lnet/minecraft/world/entity/SpawnGroupData;Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/world/entity/SpawnGroupData; a
	getMaxSchoolSize ()I eO
	getMaxSpawnClusterSize ()I er
	hasFollowers ()Z eS
	inRangeOfLeader ()Z eT
	isFollower ()Z eP
	pathToLeader ()V eU
	registerGoals ()V o
	removeFollower ()V eW
	startFollowing (Lnet/minecraft/world/entity/animal/AbstractSchoolingFish;)Lnet/minecraft/world/entity/animal/AbstractSchoolingFish; a
	stopFollowing ()V eQ
	tick ()V j
net/minecraft/world/entity/animal/AbstractSchoolingFish$SchoolSpawnGroupData ayj$a
	leader a
net/minecraft/world/entity/animal/Animal ayk
	inLove bv
	loveCause bw
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	aiStep ()V k
	canFallInLove ()Z eQ
	canMate (Lnet/minecraft/world/entity/animal/Animal;)Z a
	checkAnimalSpawnRules (Lnet/minecraft/world/entity/EntityType;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/world/entity/MobSpawnType;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)Z b
	customServerAiStep ()V N
	getAmbientSoundInterval ()I D
	getExperienceReward (Lnet/minecraft/world/entity/player/Player;)I d
	getInLoveTime ()I eR
	getLoveCause ()Lnet/minecraft/server/level/ServerPlayer; eS
	getMyRidingOffset ()D aX
	getWalkTargetValue (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/LevelReader;)F a
	handleEntityEvent (B)V a
	hurt (Lnet/minecraft/world/damagesource/DamageSource;F)Z a
	isFood (Lnet/minecraft/world/item/ItemStack;)Z k
	isInLove ()Z eT
	mobInteract (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResult; b
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	removeWhenFarAway (D)Z h
	resetLove ()V eU
	setInLove (Lnet/minecraft/world/entity/player/Player;)V g
	setInLoveTime (I)V s
	spawnChildFromBreeding (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/animal/Animal;)V a
	usePlayerItem (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/item/ItemStack;)V a
net/minecraft/world/entity/animal/Bee ayl
	DATA_FLAGS_ID bv
	DATA_REMAINING_ANGER_TIME bw
	PERSISTENT_ANGER_TIME bx
	beePollinateGoal bJ
	goToHiveGoal bK
	goToKnownFlowerGoal bL
	hivePos bI
	numCropsGrownSincePollination bE
	persistentAngerTarget by
	remainingCooldownBeforeLocatingNewFlower bG
	remainingCooldownBeforeLocatingNewHive bF
	rollAmount bz
	rollAmountO bA
	savedFlowerPos bH
	stayOutOfHiveCountdown bD
	ticksWithoutNectarSinceExitingHive bC
	timeSinceSting bB
	underWaterTicks bM
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	aiStep ()V k
	causeFallDamage (FF)Z b
	checkFallDamage (DZLnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/BlockPos;)V a
	closerThan (Lnet/minecraft/core/BlockPos;I)Z b
	createAttributes ()Lnet/minecraft/world/entity/ai/attributes/AttributeSupplier$Builder; fa
	createNavigation (Lnet/minecraft/world/level/Level;)Lnet/minecraft/world/entity/ai/navigation/PathNavigation; b
	customServerAiStep ()V N
	defineSynchedData ()V e
	doHurtTarget (Lnet/minecraft/world/entity/Entity;)Z B
	doesHiveHaveSpace (Lnet/minecraft/core/BlockPos;)Z i
	dropOffNectar ()V fc
	getAmbientSound ()Lnet/minecraft/sounds/SoundEvent; I
	getBlacklistedHives ()Ljava/util/List; eO
	getBreedOffspring (Lnet/minecraft/world/entity/AgableMob;)Lnet/minecraft/world/entity/AgableMob; a
	getBreedOffspring (Lnet/minecraft/world/entity/AgableMob;)Lnet/minecraft/world/entity/animal/Bee; b
	getCropsGrownSincePollination ()I fh
	getDeathSound ()Lnet/minecraft/sounds/SoundEvent; dp
	getFlag (I)Z u
	getGoalSelector ()Lnet/minecraft/world/entity/ai/goal/GoalSelector; eX
	getHivePos ()Lnet/minecraft/core/BlockPos; eW
	getHurtSound (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEvent; e
	getLeashOffset ()Lnet/minecraft/world/phys/Vec3; ce
	getMobType ()Lnet/minecraft/world/entity/MobType; dB
	getPersistentAngerTarget ()Ljava/util/UUID; G_
	getRemainingPersistentAngerTime ()I F_
	getRollAmount (F)F u
	getSavedFlowerPos ()Lnet/minecraft/core/BlockPos; eL
	getSoundVolume ()F dF
	getStandingEyeHeight (Lnet/minecraft/world/entity/Pose;Lnet/minecraft/world/entity/EntityDimensions;)F b
	getTravellingTicks ()I eN
	getWalkTargetValue (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/LevelReader;)F a
	hasHive ()Z eV
	hasNectar ()Z eY
	hasSavedFlowerPos ()Z eM
	hasStung ()Z eZ
	hurt (Lnet/minecraft/world/damagesource/DamageSource;F)Z a
	incrementNumCropsGrownSincePollination ()V fj
	isFlowerValid (Lnet/minecraft/core/BlockPos;)Z k
	isFlying ()Z fb
	isFood (Lnet/minecraft/world/item/ItemStack;)Z k
	isHiveNearFire ()Z fg
	isHiveValid ()Z fk
	isRolling ()Z fl
	isTiredOfLookingForNectar ()Z fd
	isTooFarAway (Lnet/minecraft/core/BlockPos;)Z j
	jumpInLiquid (Lnet/minecraft/tags/Tag;)V c
	makeFlySound ()Z au
	pathfindRandomlyTowards (Lnet/minecraft/core/BlockPos;)V h
	playStepSound (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V a
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	registerGoals ()V o
	resetNumCropsGrownSincePollination ()V fi
	resetTicksWithoutNectarSinceExitingHive ()V eP
	sendDebugPackets ()V M
	setFlag (IZ)V d
	setHasNectar (Z)V t
	setHasStung (Z)V u
	setPersistentAngerTarget (Ljava/util/UUID;)V a
	setRemainingPersistentAngerTime (I)V a_
	setRolling (Z)V v
	setSavedFlowerPos (Lnet/minecraft/core/BlockPos;)V g
	setStayOutOfHiveCountdown (I)V t
	spawnFluidParticle (Lnet/minecraft/world/level/Level;DDDDDLnet/minecraft/core/particles/ParticleOptions;)V a
	startPersistentAngerTimer ()V H_
	tick ()V j
	updateRollAmount ()V ff
	wantsToEnterHive ()Z fe
net/minecraft/world/entity/animal/Bee$BaseBeeGoal ayl$a
	canBeeContinueToUse ()Z h
	canBeeUse ()Z g
	canContinueToUse ()Z b
	canUse ()Z a
net/minecraft/world/entity/animal/Bee$BeeAttackGoal ayl$b
	canContinueToUse ()Z b
	canUse ()Z a
net/minecraft/world/entity/animal/Bee$BeeBecomeAngryTargetGoal ayl$c
	beeCanTarget ()Z h
	canContinueToUse ()Z b
	canUse ()Z a
net/minecraft/world/entity/animal/Bee$BeeEnterHiveGoal ayl$d
	canBeeContinueToUse ()Z h
	canBeeUse ()Z g
	start ()V c
net/minecraft/world/entity/animal/Bee$BeeGoToHiveGoal ayl$e
	blacklistedTargets d
	lastPath e
	ticksStuck f
	travellingTicks c
	blacklistTarget (Lnet/minecraft/core/BlockPos;)V c
	canBeeContinueToUse ()Z h
	canBeeUse ()Z g
	canContinueToUse ()Z b
	canUse ()Z a
	clearBlacklist ()V j
	dropAndBlacklistHive ()V k
	dropHive ()V l
	hasReachedTarget (Lnet/minecraft/core/BlockPos;)Z d
	isTargetBlacklisted (Lnet/minecraft/core/BlockPos;)Z b
	pathfindDirectlyTowards (Lnet/minecraft/core/BlockPos;)Z a
	start ()V c
	stop ()V d
	tick ()V e
net/minecraft/world/entity/animal/Bee$BeeGoToKnownFlowerGoal ayl$f
	travellingTicks c
	canBeeContinueToUse ()Z h
	canBeeUse ()Z g
	canContinueToUse ()Z b
	canUse ()Z a
	start ()V c
	stop ()V d
	tick ()V e
	wantsToGoToKnownFlower ()Z j
net/minecraft/world/entity/animal/Bee$BeeGrowCropGoal ayl$g
	canBeeContinueToUse ()Z h
	canBeeUse ()Z g
	tick ()V e
net/minecraft/world/entity/animal/Bee$BeeHurtByOtherGoal ayl$h
	alertOther (Lnet/minecraft/world/entity/Mob;Lnet/minecraft/world/entity/LivingEntity;)V a
	canContinueToUse ()Z b
net/minecraft/world/entity/animal/Bee$BeeLocateHiveGoal ayl$i
	canBeeContinueToUse ()Z h
	canBeeUse ()Z g
	findNearbyHivesWithSpace ()Ljava/util/List; j
	start ()V c
net/minecraft/world/entity/animal/Bee$BeeLookControl ayl$j
	resetXRotOnTick ()Z b
	tick ()V a
net/minecraft/world/entity/animal/Bee$BeePollinateGoal ayl$k
	VALID_POLLINATION_BLOCKS c
	hoverPos g
	lastSoundPlayedTick e
	pollinating f
	pollinatingTicks h
	successfulPollinatingTicks d
	canBeeContinueToUse ()Z h
	canBeeUse ()Z g
	findNearbyFlower ()Ljava/util/Optional; o
	findNearestBlock (Ljava/util/function/Predicate;D)Ljava/util/Optional; a
	getOffset ()F n
	hasPollinatedLongEnough ()Z j
	isPollinating ()Z k
	setWantedPos ()V m
	start ()V c
	stop ()V d
	stopPollinating ()V l
	tick ()V e
net/minecraft/world/entity/animal/Bee$BeeWanderGoal ayl$l
	canContinueToUse ()Z b
	canUse ()Z a
	findPos ()Lnet/minecraft/world/phys/Vec3; g
	start ()V c
net/minecraft/world/entity/animal/Cat aym
	DATA_COLLAR_COLOR bC
	DATA_TYPE_ID bz
	IS_LYING bA
	RELAX_STATE_ONE bB
	TEMPT_INGREDIENT by
	TEXTURE_BY_TYPE bx
	avoidPlayersGoal bD
	lieDownAmount bF
	lieDownAmountO bG
	lieDownAmountOTail bI
	lieDownAmountTail bH
	relaxStateOneAmount bJ
	relaxStateOneAmountO bK
	temptGoal bE
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	canMate (Lnet/minecraft/world/entity/animal/Animal;)Z a
	causeFallDamage (FF)Z b
	createAttributes ()Lnet/minecraft/world/entity/ai/attributes/AttributeSupplier$Builder; fb
	customServerAiStep ()V N
	defineSynchedData ()V e
	doHurtTarget (Lnet/minecraft/world/entity/Entity;)Z B
	finalizeSpawn (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/world/DifficultyInstance;Lnet/minecraft/world/entity/MobSpawnType;Lnet/minecraft/world/entity/SpawnGroupData;Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/world/entity/SpawnGroupData; a
	getAmbientSound ()Lnet/minecraft/sounds/SoundEvent; I
	getAmbientSoundInterval ()I D
	getAttackDamage ()F fc
	getBreedOffspring (Lnet/minecraft/world/entity/AgableMob;)Lnet/minecraft/world/entity/AgableMob; a
	getBreedOffspring (Lnet/minecraft/world/entity/AgableMob;)Lnet/minecraft/world/entity/animal/Cat; b
	getCatType ()I eW
	getCollarColor ()Lnet/minecraft/world/item/DyeColor; eZ
	getDeathSound ()Lnet/minecraft/sounds/SoundEvent; dp
	getHurtSound (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEvent; e
	getLieDownAmount (F)F u
	getLieDownAmountTail (F)F v
	getRelaxStateOneAmount (F)F w
	getResourceLocation ()Lnet/minecraft/resources/ResourceLocation; eV
	getStandingEyeHeight (Lnet/minecraft/world/entity/Pose;Lnet/minecraft/world/entity/EntityDimensions;)F b
	handleLieDown ()V fd
	hiss ()V fa
	isFood (Lnet/minecraft/world/item/ItemStack;)Z k
	isLying ()Z eX
	isRelaxStateOne ()Z eY
	mobInteract (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResult; b
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	reassessTameGoals ()V eM
	registerGoals ()V o
	removeWhenFarAway (D)Z h
	setCatType (I)V t
	setCollarColor (Lnet/minecraft/world/item/DyeColor;)V a
	setLying (Z)V x
	setRelaxStateOne (Z)V y
	tick ()V j
	updateLieDownAmount ()V fe
	updateRelaxStateOneAmount ()V ff
	usePlayerItem (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/item/ItemStack;)V a
net/minecraft/world/entity/animal/Cat$CatAvoidEntityGoal aym$a
	cat i
	canContinueToUse ()Z b
	canUse ()Z a
net/minecraft/world/entity/animal/Cat$CatRelaxOnOwnerGoal aym$b
	cat a
	goalPos c
	onBedTicks d
	ownerPlayer b
	canContinueToUse ()Z b
	canUse ()Z a
	giveMorningGift ()V h
	spaceIsOccupied ()Z g
	start ()V c
	stop ()V d
	tick ()V e
net/minecraft/world/entity/animal/Cat$CatTemptGoal aym$c
	cat d
	selectedPlayer c
	canScare ()Z g
	canUse ()Z a
	tick ()V e
net/minecraft/world/entity/animal/Chicken ayn
	FOOD_ITEMS bC
	eggTime bA
	flap bv
	flapSpeed bw
	flapping bz
	isChickenJockey bB
	oFlap by
	oFlapSpeed bx
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	aiStep ()V k
	causeFallDamage (FF)Z b
	createAttributes ()Lnet/minecraft/world/entity/ai/attributes/AttributeSupplier$Builder; eL
	getAmbientSound ()Lnet/minecraft/sounds/SoundEvent; I
	getBreedOffspring (Lnet/minecraft/world/entity/AgableMob;)Lnet/minecraft/world/entity/AgableMob; a
	getBreedOffspring (Lnet/minecraft/world/entity/AgableMob;)Lnet/minecraft/world/entity/animal/Chicken; b
	getDeathSound ()Lnet/minecraft/sounds/SoundEvent; dp
	getExperienceReward (Lnet/minecraft/world/entity/player/Player;)I d
	getHurtSound (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEvent; e
	getStandingEyeHeight (Lnet/minecraft/world/entity/Pose;Lnet/minecraft/world/entity/EntityDimensions;)F b
	isChickenJockey ()Z eM
	isFood (Lnet/minecraft/world/item/ItemStack;)Z k
	playStepSound (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V a
	positionRider (Lnet/minecraft/world/entity/Entity;)V k
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	registerGoals ()V o
	removeWhenFarAway (D)Z h
	setChickenJockey (Z)V t
net/minecraft/world/entity/animal/Cod ayo
	getAmbientSound ()Lnet/minecraft/sounds/SoundEvent; I
	getBucketItemStack ()Lnet/minecraft/world/item/ItemStack; eL
	getDeathSound ()Lnet/minecraft/sounds/SoundEvent; dp
	getFlopSound ()Lnet/minecraft/sounds/SoundEvent; eN
	getHurtSound (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEvent; e
net/minecraft/world/entity/animal/Cow ayp
	createAttributes ()Lnet/minecraft/world/entity/ai/attributes/AttributeSupplier$Builder; eL
	getAmbientSound ()Lnet/minecraft/sounds/SoundEvent; I
	getBreedOffspring (Lnet/minecraft/world/entity/AgableMob;)Lnet/minecraft/world/entity/AgableMob; a
	getBreedOffspring (Lnet/minecraft/world/entity/AgableMob;)Lnet/minecraft/world/entity/animal/Cow; b
	getDeathSound ()Lnet/minecraft/sounds/SoundEvent; dp
	getHurtSound (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEvent; e
	getSoundVolume ()F dF
	getStandingEyeHeight (Lnet/minecraft/world/entity/Pose;Lnet/minecraft/world/entity/EntityDimensions;)F b
	mobInteract (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResult; b
	playStepSound (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V a
	registerGoals ()V o
net/minecraft/world/entity/animal/Dolphin ayq
	ALLOWED_ITEMS b
	GOT_FISH d
	MOISTNESS_LEVEL bv
	SWIM_WITH_PLAYER_TARGETING bw
	TREASURE_POS c
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	addParticlesAroundSelf (Lnet/minecraft/core/particles/ParticleOptions;)V a
	canBeLeashed (Lnet/minecraft/world/entity/player/Player;)Z a
	canBreatheUnderwater ()Z cL
	canRide (Lnet/minecraft/world/entity/Entity;)Z n
	canTakeItem (Lnet/minecraft/world/item/ItemStack;)Z e
	checkDolphinSpawnRules (Lnet/minecraft/world/entity/EntityType;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/world/entity/MobSpawnType;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)Z b
	closeToNextPos ()Z eO
	createAttributes ()Lnet/minecraft/world/entity/ai/attributes/AttributeSupplier$Builder; eN
	createNavigation (Lnet/minecraft/world/level/Level;)Lnet/minecraft/world/entity/ai/navigation/PathNavigation; b
	defineSynchedData ()V e
	doHurtTarget (Lnet/minecraft/world/entity/Entity;)Z B
	finalizeSpawn (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/world/DifficultyInstance;Lnet/minecraft/world/entity/MobSpawnType;Lnet/minecraft/world/entity/SpawnGroupData;Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/world/entity/SpawnGroupData; a
	getAmbientSound ()Lnet/minecraft/sounds/SoundEvent; I
	getDeathSound ()Lnet/minecraft/sounds/SoundEvent; dp
	getHurtSound (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEvent; e
	getMaxAirSupply ()I bD
	getMaxHeadXRot ()I eo
	getMaxHeadYRot ()I ep
	getMoistnessLevel ()I eM
	getStandingEyeHeight (Lnet/minecraft/world/entity/Pose;Lnet/minecraft/world/entity/EntityDimensions;)F b
	getSwimSound ()Lnet/minecraft/sounds/SoundEvent; aq
	getSwimSplashSound ()Lnet/minecraft/sounds/SoundEvent; ar
	getTreasurePos ()Lnet/minecraft/core/BlockPos; m
	gotFish ()Z eL
	handleAirSupply (I)V a
	handleEntityEvent (B)V a
	increaseAirSupply (I)I m
	mobInteract (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResult; b
	pickUpItem (Lnet/minecraft/world/entity/item/ItemEntity;)V b
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	registerGoals ()V o
	setGotFish (Z)V t
	setMoisntessLevel (I)V b
	setTreasurePos (Lnet/minecraft/core/BlockPos;)V g
	tick ()V j
	travel (Lnet/minecraft/world/phys/Vec3;)V f
net/minecraft/world/entity/animal/Dolphin$DolphinMoveControl ayq$a
	dolphin i
	tick ()V a
net/minecraft/world/entity/animal/Dolphin$DolphinSwimToTreasureGoal ayq$b
	dolphin a
	stuck b
	canContinueToUse ()Z b
	canUse ()Z a
	isInterruptable ()Z D_
	start ()V c
	stop ()V d
	tick ()V e
net/minecraft/world/entity/animal/Dolphin$DolphinSwimWithPlayerGoal ayq$c
	dolphin a
	player c
	speedModifier b
	canContinueToUse ()Z b
	canUse ()Z a
	start ()V c
	stop ()V d
	tick ()V e
net/minecraft/world/entity/animal/Dolphin$PlayWithItemsGoal ayq$d
	cooldown b
	canUse ()Z a
	drop (Lnet/minecraft/world/item/ItemStack;)V a
	start ()V c
	stop ()V d
	tick ()V e
net/minecraft/world/entity/animal/FlyingAnimal ayr
	isFlying ()Z fb
net/minecraft/world/entity/animal/Fox ays
	ALLOWED_ITEMS bz
	AVOID_PLAYERS bC
	DATA_FLAGS_ID bw
	DATA_TRUSTED_ID_0 bx
	DATA_TRUSTED_ID_1 by
	DATA_TYPE_ID bv
	STALKABLE_PREY bB
	TRUSTED_TARGET_SELECTOR bA
	crouchAmount bI
	crouchAmountO bJ
	fishTargetGoal bF
	interestedAngle bG
	interestedAngleO bH
	landTargetGoal bD
	ticksSinceEaten bK
	turtleEggTargetGoal bE
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	addTrustedUUID (Ljava/util/UUID;)V b
	aiStep ()V k
	calculateFallDamage (FF)I e
	canEat (Lnet/minecraft/world/item/ItemStack;)Z l
	canHoldItem (Lnet/minecraft/world/item/ItemStack;)Z h
	canMove ()Z ff
	canTakeItem (Lnet/minecraft/world/item/ItemStack;)Z e
	clearStates ()V fe
	createAttributes ()Lnet/minecraft/world/entity/ai/attributes/AttributeSupplier$Builder; eL
	defineSynchedData ()V e
	dropAllDeathLoot (Lnet/minecraft/world/damagesource/DamageSource;)V d
	dropItemStack (Lnet/minecraft/world/item/ItemStack;)V n
	finalizeSpawn (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/world/DifficultyInstance;Lnet/minecraft/world/entity/MobSpawnType;Lnet/minecraft/world/entity/SpawnGroupData;Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/world/entity/SpawnGroupData; a
	getAmbientSound ()Lnet/minecraft/sounds/SoundEvent; I
	getBreedOffspring (Lnet/minecraft/world/entity/AgableMob;)Lnet/minecraft/world/entity/AgableMob; a
	getBreedOffspring (Lnet/minecraft/world/entity/AgableMob;)Lnet/minecraft/world/entity/animal/Fox; b
	getCrouchAmount (F)F v
	getDeathSound ()Lnet/minecraft/sounds/SoundEvent; dp
	getEatingSound (Lnet/minecraft/world/item/ItemStack;)Lnet/minecraft/sounds/SoundEvent; d
	getFlag (I)Z t
	getFoxType ()Lnet/minecraft/world/entity/animal/Fox$Type; eM
	getHeadRollAngle (F)F u
	getHurtSound (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEvent; e
	getLeashOffset ()Lnet/minecraft/world/phys/Vec3; ce
	getStandingEyeHeight (Lnet/minecraft/world/entity/Pose;Lnet/minecraft/world/entity/EntityDimensions;)F b
	getTrustedUUIDs ()Ljava/util/List; fb
	handleEntityEvent (B)V a
	isCrouching ()Z bv
	isDefending ()Z fc
	isFaceplanted ()Z eO
	isFood (Lnet/minecraft/world/item/ItemStack;)Z k
	isFullyCrouched ()Z eW
	isImmobile ()Z dH
	isInterested ()Z eX
	isJumping ()Z eV
	isPathClear (Lnet/minecraft/world/entity/animal/Fox;Lnet/minecraft/world/entity/LivingEntity;)Z a
	isPouncing ()Z eP
	isSitting ()Z eN
	isSleeping ()Z el
	onOffspringSpawnedFromEgg (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/entity/Mob;)V a
	pickUpItem (Lnet/minecraft/world/entity/item/ItemEntity;)V b
	playAmbientSound ()V F
	populateDefaultEquipmentSlots (Lnet/minecraft/world/DifficultyInstance;)V a
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	registerGoals ()V o
	setDefending (Z)V y
	setFaceplanted (Z)V x
	setFlag (IZ)V d
	setFoxType (Lnet/minecraft/world/entity/animal/Fox$Type;)V a
	setIsCrouching (Z)V v
	setIsInterested (Z)V w
	setIsPouncing (Z)V u
	setSitting (Z)V t
	setSleeping (Z)V z
	setTarget (Lnet/minecraft/world/entity/LivingEntity;)V i
	setTargetGoals ()V fa
	spitOutItem (Lnet/minecraft/world/item/ItemStack;)V m
	tick ()V j
	trusts (Ljava/util/UUID;)Z c
	usePlayerItem (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/item/ItemStack;)V a
	wakeUp ()V fd
net/minecraft/world/entity/animal/Fox$DefendTrustedTargetGoal ays$a
	timestamp l
	trustedLastHurt k
	trustedLastHurtBy j
	canUse ()Z a
	start ()V c
net/minecraft/world/entity/animal/Fox$FaceplantGoal ays$b
	countdown a
	canContinueToUse ()Z b
	canUse ()Z a
	start ()V c
	stop ()V d
	tick ()V e
net/minecraft/world/entity/animal/Fox$FoxAlertableEntitiesSelector ays$c
	test (Lnet/minecraft/world/entity/LivingEntity;)Z a
net/minecraft/world/entity/animal/Fox$FoxBehaviorGoal ays$d
	alertableTargeting b
	alertable ()Z h
	hasShelter ()Z g
net/minecraft/world/entity/animal/Fox$FoxBreedGoal ays$e
	breed ()V g
	start ()V c
net/minecraft/world/entity/animal/Fox$FoxEatBerriesGoal ays$f
	ticksWaited g
	acceptedDistance ()D h
	canUse ()Z a
	isValidTarget (Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;)Z a
	onReachedTarget ()V m
	shouldRecalculatePath ()Z j
	start ()V c
	tick ()V e
net/minecraft/world/entity/animal/Fox$FoxFloatGoal ays$g
	canUse ()Z a
	start ()V c
net/minecraft/world/entity/animal/Fox$FoxFollowParentGoal ays$h
	fox b
	canContinueToUse ()Z b
	canUse ()Z a
	start ()V c
net/minecraft/world/entity/animal/Fox$FoxGroupData ays$i
	type a
net/minecraft/world/entity/animal/Fox$FoxLookAtPlayerGoal ays$j
	canContinueToUse ()Z b
	canUse ()Z a
net/minecraft/world/entity/animal/Fox$FoxLookControl ays$k
	resetXRotOnTick ()Z b
	tick ()V a
net/minecraft/world/entity/animal/Fox$FoxMeleeAttackGoal ays$l
	canUse ()Z a
	checkAndPerformAttack (Lnet/minecraft/world/entity/LivingEntity;D)V a
	start ()V c
net/minecraft/world/entity/animal/Fox$FoxMoveControl ays$m
	tick ()V a
net/minecraft/world/entity/animal/Fox$FoxPanicGoal ays$n
	canUse ()Z a
net/minecraft/world/entity/animal/Fox$FoxPounceGoal ays$o
	canContinueToUse ()Z b
	canUse ()Z a
	isInterruptable ()Z D_
	start ()V c
	stop ()V d
	tick ()V e
net/minecraft/world/entity/animal/Fox$FoxSearchForItemsGoal ays$p
	canUse ()Z a
	start ()V c
	tick ()V e
net/minecraft/world/entity/animal/Fox$FoxStrollThroughVillageGoal ays$q
	canContinueToUse ()Z b
	canFoxMove ()Z g
	canUse ()Z a
	start ()V c
net/minecraft/world/entity/animal/Fox$PerchAndSearchGoal ays$r
	lookTime e
	looksRemaining f
	relX c
	relZ d
	canContinueToUse ()Z b
	canUse ()Z a
	resetLook ()V j
	start ()V c
	stop ()V d
	tick ()V e
net/minecraft/world/entity/animal/Fox$SeekShelterGoal ays$s
	interval c
	canUse ()Z a
	start ()V c
net/minecraft/world/entity/animal/Fox$SleepGoal ays$t
	countdown c
	canContinueToUse ()Z b
	canSleep ()Z j
	canUse ()Z a
	start ()V c
	stop ()V d
net/minecraft/world/entity/animal/Fox$StalkPreyGoal ays$u
	canUse ()Z a
	start ()V c
	stop ()V d
	tick ()V e
net/minecraft/world/entity/animal/Fox$Type ays$v
	$VALUES h
	BY_ID c
	BY_NAME d
	RED a
	SNOW b
	biomes g
	id e
	name f
	byBiome (Lnet/minecraft/world/level/biome/Biome;)Lnet/minecraft/world/entity/animal/Fox$Type; a
	byId (I)Lnet/minecraft/world/entity/animal/Fox$Type; a
	byName (Ljava/lang/String;)Lnet/minecraft/world/entity/animal/Fox$Type; a
	getBiomes ()Ljava/util/List; b
	getId ()I c
	getName ()Ljava/lang/String; a
net/minecraft/world/entity/animal/IronGolem ayt
	DATA_FLAGS_ID b
	PERSISTENT_ANGER_TIME bv
	attackAnimationTick c
	offerFlowerTick d
	persistentAngerTarget bx
	remainingPersistentAngerTime bw
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	aiStep ()V k
	canAttackType (Lnet/minecraft/world/entity/EntityType;)Z a
	checkSpawnObstruction (Lnet/minecraft/world/level/LevelReader;)Z a
	createAttributes ()Lnet/minecraft/world/entity/ai/attributes/AttributeSupplier$Builder; m
	decreaseAirSupply (I)I l
	defineSynchedData ()V e
	die (Lnet/minecraft/world/damagesource/DamageSource;)V a
	doHurtTarget (Lnet/minecraft/world/entity/Entity;)Z B
	doPush (Lnet/minecraft/world/entity/Entity;)V C
	getAttackAnimationTick ()I eM
	getAttackDamage ()F eP
	getCrackiness ()Lnet/minecraft/world/entity/animal/IronGolem$Crackiness; eL
	getDeathSound ()Lnet/minecraft/sounds/SoundEvent; dp
	getHurtSound (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEvent; e
	getLeashOffset ()Lnet/minecraft/world/phys/Vec3; ce
	getOfferFlowerTick ()I eN
	getPersistentAngerTarget ()Ljava/util/UUID; G_
	getRemainingPersistentAngerTime ()I F_
	handleEntityEvent (B)V a
	hurt (Lnet/minecraft/world/damagesource/DamageSource;F)Z a
	isPlayerCreated ()Z eO
	mobInteract (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResult; b
	offerFlower (Z)V t
	playStepSound (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V a
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	registerGoals ()V o
	setPersistentAngerTarget (Ljava/util/UUID;)V a
	setPlayerCreated (Z)V u
	setRemainingPersistentAngerTime (I)V a_
	startPersistentAngerTimer ()V H_
net/minecraft/world/entity/animal/IronGolem$Crackiness ayt$a
	$VALUES g
	BY_DAMAGE e
	HIGH d
	LOW b
	MEDIUM c
	NONE a
	fraction f
	byFraction (F)Lnet/minecraft/world/entity/animal/IronGolem$Crackiness; a
net/minecraft/world/entity/animal/MushroomCow ayu
	DATA_TYPE bv
	effect bw
	effectDuration bx
	lastLightningBoltUUID by
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	checkMushroomSpawnRules (Lnet/minecraft/world/entity/EntityType;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/world/entity/MobSpawnType;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)Z c
	defineSynchedData ()V e
	getBreedOffspring (Lnet/minecraft/world/entity/AgableMob;)Lnet/minecraft/world/entity/AgableMob; a
	getBreedOffspring (Lnet/minecraft/world/entity/AgableMob;)Lnet/minecraft/world/entity/animal/Cow; b
	getBreedOffspring (Lnet/minecraft/world/entity/AgableMob;)Lnet/minecraft/world/entity/animal/MushroomCow; c
	getEffectFromItemStack (Lnet/minecraft/world/item/ItemStack;)Ljava/util/Optional; l
	getMushroomType ()Lnet/minecraft/world/entity/animal/MushroomCow$MushroomType; eM
	getOffspringType (Lnet/minecraft/world/entity/animal/MushroomCow;)Lnet/minecraft/world/entity/animal/MushroomCow$MushroomType; a
	getWalkTargetValue (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/LevelReader;)F a
	mobInteract (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResult; b
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	readyForShearing ()Z L_
	setMushroomType (Lnet/minecraft/world/entity/animal/MushroomCow$MushroomType;)V a
	shear (Lnet/minecraft/sounds/SoundSource;)V a
	thunderHit (Lnet/minecraft/world/entity/LightningBolt;)V a
net/minecraft/world/entity/animal/MushroomCow$MushroomType ayu$a
	$VALUES e
	BROWN b
	RED a
	blockState d
	type c
	byType (Ljava/lang/String;)Lnet/minecraft/world/entity/animal/MushroomCow$MushroomType; b
	getBlockState ()Lnet/minecraft/world/level/block/state/BlockState; a
net/minecraft/world/entity/animal/Ocelot ayv
	DATA_TRUSTING bw
	TEMPT_INGREDIENT bv
	ocelotAvoidPlayersGoal bx
	temptGoal by
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	causeFallDamage (FF)Z b
	checkOcelotSpawnRules (Lnet/minecraft/world/entity/EntityType;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/world/entity/MobSpawnType;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)Z c
	checkSpawnObstruction (Lnet/minecraft/world/level/LevelReader;)Z a
	createAttributes ()Lnet/minecraft/world/entity/ai/attributes/AttributeSupplier$Builder; eL
	customServerAiStep ()V N
	defineSynchedData ()V e
	doHurtTarget (Lnet/minecraft/world/entity/Entity;)Z B
	finalizeSpawn (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/world/DifficultyInstance;Lnet/minecraft/world/entity/MobSpawnType;Lnet/minecraft/world/entity/SpawnGroupData;Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/world/entity/SpawnGroupData; a
	getAmbientSound ()Lnet/minecraft/sounds/SoundEvent; I
	getAmbientSoundInterval ()I D
	getAttackDamage ()F eO
	getBreedOffspring (Lnet/minecraft/world/entity/AgableMob;)Lnet/minecraft/world/entity/AgableMob; a
	getBreedOffspring (Lnet/minecraft/world/entity/AgableMob;)Lnet/minecraft/world/entity/animal/Ocelot; b
	getDeathSound ()Lnet/minecraft/sounds/SoundEvent; dp
	getHurtSound (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEvent; e
	getLeashOffset ()Lnet/minecraft/world/phys/Vec3; ce
	handleEntityEvent (B)V a
	hurt (Lnet/minecraft/world/damagesource/DamageSource;F)Z a
	isFood (Lnet/minecraft/world/item/ItemStack;)Z k
	isTrusting ()Z eN
	mobInteract (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResult; b
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	reassessTrustingGoals ()V eM
	registerGoals ()V o
	removeWhenFarAway (D)Z h
	setTrusting (Z)V t
	spawnTrustingParticles (Z)V u
net/minecraft/world/entity/animal/Ocelot$OcelotAvoidEntityGoal ayv$a
	ocelot i
	canContinueToUse ()Z b
	canUse ()Z a
net/minecraft/world/entity/animal/Ocelot$OcelotTemptGoal ayv$b
	ocelot c
	canScare ()Z g
net/minecraft/world/entity/animal/Panda ayw
	BREED_TARGETING bC
	DATA_ID_FLAGS bB
	EAT_COUNTER by
	HIDDEN_GENE_ID bA
	MAIN_GENE_ID bz
	PANDA_ITEMS bN
	SNEEZE_COUNTER bx
	UNHAPPY_COUNTER bw
	didBite bE
	gotBamboo bD
	lookAtPlayerGoal bM
	onBackAmount bI
	onBackAmountO bJ
	rollAmount bK
	rollAmountO bL
	rollCounter bv
	rollDelta bF
	sitAmount bG
	sitAmountO bH
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	addEatingParticles ()V fn
	afterSneeze ()V fs
	canBeLeashed (Lnet/minecraft/world/entity/player/Player;)Z a
	canPerformAction ()Z fi
	canTakeItem (Lnet/minecraft/world/item/ItemStack;)Z e
	createAttributes ()Lnet/minecraft/world/entity/ai/attributes/AttributeSupplier$Builder; eZ
	defineSynchedData ()V e
	doHurtTarget (Lnet/minecraft/world/entity/Entity;)Z B
	eat (Z)V v
	finalizeSpawn (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/world/DifficultyInstance;Lnet/minecraft/world/entity/MobSpawnType;Lnet/minecraft/world/entity/SpawnGroupData;Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/world/entity/SpawnGroupData; a
	getAmbientSound ()Lnet/minecraft/sounds/SoundEvent; I
	getBreedOffspring (Lnet/minecraft/world/entity/AgableMob;)Lnet/minecraft/world/entity/AgableMob; a
	getDeathSound ()Lnet/minecraft/sounds/SoundEvent; dp
	getEatCounter ()I fl
	getFlag (I)Z w
	getHiddenGene ()Lnet/minecraft/world/entity/animal/Panda$Gene; eX
	getHurtSound (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEvent; e
	getLieOnBackAmount (F)F v
	getMainGene ()Lnet/minecraft/world/entity/animal/Panda$Gene; eW
	getOneOfGenesRandomly ()Lnet/minecraft/world/entity/animal/Panda$Gene; ft
	getRollAmount (F)F w
	getSitAmount (F)F u
	getSneezeCounter ()I eV
	getUnhappyCounter ()I eL
	getVariant ()Lnet/minecraft/world/entity/animal/Panda$Gene; fa
	handleEating ()V fm
	handleRoll ()V fr
	hurt (Lnet/minecraft/world/damagesource/DamageSource;F)Z a
	isAggressive ()Z eG
	isBrown ()Z fe
	isEating ()Z eP
	isFood (Lnet/minecraft/world/item/ItemStack;)Z k
	isFoodOrCake (Lnet/minecraft/world/item/ItemStack;)Z l
	isLazy ()Z fb
	isOnBack ()Z eO
	isPlayful ()Z fd
	isRolling ()Z eY
	isScared ()Z fg
	isSitting ()Z eN
	isSneezing ()Z eM
	isWeak ()Z ff
	isWorried ()Z fc
	mobInteract (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResult; b
	pickUpItem (Lnet/minecraft/world/entity/item/ItemEntity;)V b
	playStepSound (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V a
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	registerGoals ()V o
	roll (Z)V x
	setAttributes ()V fh
	setEatCounter (I)V v
	setFlag (IZ)V d
	setGeneFromParents (Lnet/minecraft/world/entity/animal/Panda;Lnet/minecraft/world/entity/animal/Panda;)V a
	setHiddenGene (Lnet/minecraft/world/entity/animal/Panda$Gene;)V b
	setMainGene (Lnet/minecraft/world/entity/animal/Panda$Gene;)V a
	setOnBack (Z)V u
	setSneezeCounter (I)V u
	setUnhappyCounter (I)V t
	sit (Z)V t
	sneeze (Z)V w
	tick ()V j
	tryToSit ()V fu
	updateOnBackAnimation ()V fp
	updateRollAmount ()V fq
	updateSitAmount ()V fo
net/minecraft/world/entity/animal/Panda$Gene ayw$a
	$VALUES l
	AGGRESSIVE g
	BROWN e
	BY_ID h
	LAZY b
	NORMAL a
	PLAYFUL d
	WEAK f
	WORRIED c
	id i
	isRecessive k
	name j
	byId (I)Lnet/minecraft/world/entity/animal/Panda$Gene; a
	byName (Ljava/lang/String;)Lnet/minecraft/world/entity/animal/Panda$Gene; a
	getId ()I a
	getName ()Ljava/lang/String; b
	getRandom (Ljava/util/Random;)Lnet/minecraft/world/entity/animal/Panda$Gene; a
	getVariantFromGenes (Lnet/minecraft/world/entity/animal/Panda$Gene;Lnet/minecraft/world/entity/animal/Panda$Gene;)Lnet/minecraft/world/entity/animal/Panda$Gene; b
	isRecessive ()Z c
net/minecraft/world/entity/animal/Panda$PandaAttackGoal ayw$b
	panda b
	canUse ()Z a
net/minecraft/world/entity/animal/Panda$PandaAvoidGoal ayw$c
	panda i
	canUse ()Z a
net/minecraft/world/entity/animal/Panda$PandaBreedGoal ayw$d
	panda e
	unhappyCooldown f
	canFindBamboo ()Z h
	canUse ()Z a
net/minecraft/world/entity/animal/Panda$PandaHurtByTargetGoal ayw$e
	panda a
	alertOther (Lnet/minecraft/world/entity/Mob;Lnet/minecraft/world/entity/LivingEntity;)V a
	canContinueToUse ()Z b
net/minecraft/world/entity/animal/Panda$PandaLieOnBackGoal ayw$f
	cooldown b
	panda a
	canContinueToUse ()Z b
	canUse ()Z a
	start ()V c
	stop ()V d
net/minecraft/world/entity/animal/Panda$PandaLookAtPlayerGoal ayw$g
	panda g
	canContinueToUse ()Z b
	canUse ()Z a
	setTarget (Lnet/minecraft/world/entity/LivingEntity;)V a
	tick ()V e
net/minecraft/world/entity/animal/Panda$PandaMoveControl ayw$h
	panda i
	tick ()V a
net/minecraft/world/entity/animal/Panda$PandaPanicGoal ayw$i
	panda g
	canContinueToUse ()Z b
	canUse ()Z a
net/minecraft/world/entity/animal/Panda$PandaRollGoal ayw$j
	panda a
	canContinueToUse ()Z b
	canUse ()Z a
	isInterruptable ()Z D_
	start ()V c
net/minecraft/world/entity/animal/Panda$PandaSitGoal ayw$k
	cooldown b
	canContinueToUse ()Z b
	canUse ()Z a
	start ()V c
	stop ()V d
	tick ()V e
net/minecraft/world/entity/animal/Panda$PandaSneezeGoal ayw$l
	panda a
	canContinueToUse ()Z b
	canUse ()Z a
	start ()V c
net/minecraft/world/entity/animal/Parrot ayx
	DATA_VARIANT_ID bB
	MOB_SOUND_MAP bF
	NOT_PARROT_PREDICATE bC
	POISONOUS_FOOD bD
	TAME_FOOD bE
	flap bx
	flapSpeed by
	flapping bG
	jukebox bI
	oFlap bA
	oFlapSpeed bz
	partyParrot bH
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	aiStep ()V k
	calculateFlapping ()V fa
	canMate (Lnet/minecraft/world/entity/animal/Animal;)Z a
	causeFallDamage (FF)Z b
	checkFallDamage (DZLnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/BlockPos;)V a
	checkParrotSpawnRules (Lnet/minecraft/world/entity/EntityType;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/world/entity/MobSpawnType;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)Z c
	createAttributes ()Lnet/minecraft/world/entity/ai/attributes/AttributeSupplier$Builder; eV
	createNavigation (Lnet/minecraft/world/level/Level;)Lnet/minecraft/world/entity/ai/navigation/PathNavigation; b
	defineSynchedData ()V e
	doHurtTarget (Lnet/minecraft/world/entity/Entity;)Z B
	doPush (Lnet/minecraft/world/entity/Entity;)V C
	finalizeSpawn (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/world/DifficultyInstance;Lnet/minecraft/world/entity/MobSpawnType;Lnet/minecraft/world/entity/SpawnGroupData;Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/world/entity/SpawnGroupData; a
	getAmbient (Lnet/minecraft/world/level/Level;Ljava/util/Random;)Lnet/minecraft/sounds/SoundEvent; a
	getAmbientSound ()Lnet/minecraft/sounds/SoundEvent; I
	getBreedOffspring (Lnet/minecraft/world/entity/AgableMob;)Lnet/minecraft/world/entity/AgableMob; a
	getDeathSound ()Lnet/minecraft/sounds/SoundEvent; dp
	getHurtSound (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEvent; e
	getImitatedSound (Lnet/minecraft/world/entity/EntityType;)Lnet/minecraft/sounds/SoundEvent; c
	getLeashOffset ()Lnet/minecraft/world/phys/Vec3; ce
	getPitch (Ljava/util/Random;)F a
	getSoundSource ()Lnet/minecraft/sounds/SoundSource; ct
	getStandingEyeHeight (Lnet/minecraft/world/entity/Pose;Lnet/minecraft/world/entity/EntityDimensions;)F b
	getVariant ()I eX
	getVoicePitch ()F dG
	hurt (Lnet/minecraft/world/damagesource/DamageSource;F)Z a
	imitateNearbyMobs (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/Entity;)Z a
	isBaby ()Z x_
	isFlying ()Z fb
	isFood (Lnet/minecraft/world/item/ItemStack;)Z k
	isPartyParrot ()Z eW
	isPushable ()Z aR
	makeFlySound ()Z au
	mobInteract (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResult; b
	playFlySound (F)F e
	playStepSound (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V a
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	registerGoals ()V o
	setRecordPlayingNearby (Lnet/minecraft/core/BlockPos;Z)V a
	setVariant (I)V t
net/minecraft/world/entity/animal/Pig ayy
	DATA_BOOST_TIME bw
	DATA_SADDLE_ID bv
	FOOD_ITEMS bx
	steering by
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	boost ()Z P_
	canBeControlledByRider ()Z es
	createAttributes ()Lnet/minecraft/world/entity/ai/attributes/AttributeSupplier$Builder; eL
	defineSynchedData ()V e
	dropEquipment ()V dm
	equipSaddle (Lnet/minecraft/sounds/SoundSource;)V a
	getAmbientSound ()Lnet/minecraft/sounds/SoundEvent; I
	getBreedOffspring (Lnet/minecraft/world/entity/AgableMob;)Lnet/minecraft/world/entity/AgableMob; a
	getBreedOffspring (Lnet/minecraft/world/entity/AgableMob;)Lnet/minecraft/world/entity/animal/Pig; b
	getControllingPassenger ()Lnet/minecraft/world/entity/Entity; cl
	getDeathSound ()Lnet/minecraft/sounds/SoundEvent; dp
	getDismountLocationForPassenger (Lnet/minecraft/world/entity/LivingEntity;)Lnet/minecraft/world/phys/Vec3; c
	getHurtSound (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEvent; e
	getLeashOffset ()Lnet/minecraft/world/phys/Vec3; ce
	getSteeringSpeed ()F O_
	isFood (Lnet/minecraft/world/item/ItemStack;)Z k
	isSaddleable ()Z M_
	isSaddled ()Z N_
	mobInteract (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResult; b
	onSyncedDataUpdated (Lnet/minecraft/network/syncher/EntityDataAccessor;)V a
	playStepSound (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V a
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	registerGoals ()V o
	thunderHit (Lnet/minecraft/world/entity/LightningBolt;)V a
	travel (Lnet/minecraft/world/phys/Vec3;)V f
	travelWithInput (Lnet/minecraft/world/phys/Vec3;)V a_
net/minecraft/world/entity/animal/PolarBear ayz
	DATA_STANDING_ID bv
	PERSISTENT_ANGER_TIME bz
	clientSideStandAnimation bx
	clientSideStandAnimationO bw
	persistentAngerTarget bB
	remainingPersistentAngerTime bA
	warningSoundTicks by
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	checkPolarBearSpawnRules (Lnet/minecraft/world/entity/EntityType;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/world/entity/MobSpawnType;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)Z c
	createAttributes ()Lnet/minecraft/world/entity/ai/attributes/AttributeSupplier$Builder; eL
	defineSynchedData ()V e
	doHurtTarget (Lnet/minecraft/world/entity/Entity;)Z B
	finalizeSpawn (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/world/DifficultyInstance;Lnet/minecraft/world/entity/MobSpawnType;Lnet/minecraft/world/entity/SpawnGroupData;Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/world/entity/SpawnGroupData; a
	getAmbientSound ()Lnet/minecraft/sounds/SoundEvent; I
	getBreedOffspring (Lnet/minecraft/world/entity/AgableMob;)Lnet/minecraft/world/entity/AgableMob; a
	getDeathSound ()Lnet/minecraft/sounds/SoundEvent; dp
	getDimensions (Lnet/minecraft/world/entity/Pose;)Lnet/minecraft/world/entity/EntityDimensions; a
	getHurtSound (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEvent; e
	getPersistentAngerTarget ()Ljava/util/UUID; G_
	getRemainingPersistentAngerTime ()I F_
	getStandingAnimationScale (F)F u
	getWaterSlowDown ()F dL
	isFood (Lnet/minecraft/world/item/ItemStack;)Z k
	isStanding ()Z eN
	playStepSound (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V a
	playWarningSound ()V eM
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	registerGoals ()V o
	setPersistentAngerTarget (Ljava/util/UUID;)V a
	setRemainingPersistentAngerTime (I)V a_
	setStanding (Z)V t
	startPersistentAngerTimer ()V H_
	tick ()V j
net/minecraft/world/entity/animal/PolarBear$PolarBearAttackPlayersGoal ayz$a
	canUse ()Z a
	getFollowDistance ()D k
net/minecraft/world/entity/animal/PolarBear$PolarBearHurtByTargetGoal ayz$b
	alertOther (Lnet/minecraft/world/entity/Mob;Lnet/minecraft/world/entity/LivingEntity;)V a
	start ()V c
net/minecraft/world/entity/animal/PolarBear$PolarBearMeleeAttackGoal ayz$c
	checkAndPerformAttack (Lnet/minecraft/world/entity/LivingEntity;D)V a
	getAttackReachSqr (Lnet/minecraft/world/entity/LivingEntity;)D a
	stop ()V d
net/minecraft/world/entity/animal/PolarBear$PolarBearPanicGoal ayz$d
	canUse ()Z a
net/minecraft/world/entity/animal/Pufferfish aza
	NO_SPECTATORS_AND_NO_WATER_MOB bv
	PUFF_STATE b
	deflateTimer d
	inflateCounter c
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	aiStep ()V k
	defineSynchedData ()V e
	getAmbientSound ()Lnet/minecraft/sounds/SoundEvent; I
	getBucketItemStack ()Lnet/minecraft/world/item/ItemStack; eL
	getDeathSound ()Lnet/minecraft/sounds/SoundEvent; dp
	getDimensions (Lnet/minecraft/world/entity/Pose;)Lnet/minecraft/world/entity/EntityDimensions; a
	getFlopSound ()Lnet/minecraft/sounds/SoundEvent; eN
	getHurtSound (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEvent; e
	getPuffState ()I eO
	getScale (I)F s
	onSyncedDataUpdated (Lnet/minecraft/network/syncher/EntityDataAccessor;)V a
	playerTouch (Lnet/minecraft/world/entity/player/Player;)V a_
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	registerGoals ()V o
	setPuffState (I)V b
	tick ()V j
	touch (Lnet/minecraft/world/entity/Mob;)V a
net/minecraft/world/entity/animal/Pufferfish$PufferfishPuffGoal aza$a
	fish a
	canContinueToUse ()Z b
	canUse ()Z a
	start ()V c
	stop ()V d
net/minecraft/world/entity/animal/Rabbit azb
	DATA_TYPE_ID bv
	KILLER_BUNNY bw
	jumpDelayTicks bA
	jumpDuration by
	jumpTicks bx
	moreCarrotTicks bB
	wasOnGround bz
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	aiStep ()V k
	canSpawnSprintParticle ()Z aK
	checkLandingDelay ()V eX
	checkRabbitSpawnRules (Lnet/minecraft/world/entity/EntityType;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/world/entity/MobSpawnType;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)Z c
	createAttributes ()Lnet/minecraft/world/entity/ai/attributes/AttributeSupplier$Builder; eM
	customServerAiStep ()V N
	defineSynchedData ()V e
	disableJumpControl ()V eV
	doHurtTarget (Lnet/minecraft/world/entity/Entity;)Z B
	enableJumpControl ()V eP
	facePoint (DD)V b
	finalizeSpawn (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/world/DifficultyInstance;Lnet/minecraft/world/entity/MobSpawnType;Lnet/minecraft/world/entity/SpawnGroupData;Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/world/entity/SpawnGroupData; a
	getAmbientSound ()Lnet/minecraft/sounds/SoundEvent; I
	getBreedOffspring (Lnet/minecraft/world/entity/AgableMob;)Lnet/minecraft/world/entity/AgableMob; a
	getBreedOffspring (Lnet/minecraft/world/entity/AgableMob;)Lnet/minecraft/world/entity/animal/Rabbit; b
	getDeathSound ()Lnet/minecraft/sounds/SoundEvent; dp
	getHurtSound (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEvent; e
	getJumpCompletion (F)F u
	getJumpPower ()F dI
	getJumpSound ()Lnet/minecraft/sounds/SoundEvent; eN
	getLeashOffset ()Lnet/minecraft/world/phys/Vec3; ce
	getRabbitType ()I eO
	getRandomRabbitType (Lnet/minecraft/world/level/LevelAccessor;)I a
	getSoundSource ()Lnet/minecraft/sounds/SoundSource; ct
	handleEntityEvent (B)V a
	hurt (Lnet/minecraft/world/damagesource/DamageSource;F)Z a
	isFood (Lnet/minecraft/world/item/ItemStack;)Z k
	isTemptingItem (Lnet/minecraft/world/item/Item;)Z b
	jumpFromGround ()V dJ
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	registerGoals ()V o
	setJumping (Z)V o
	setLandingDelay ()V eW
	setRabbitType (I)V t
	setSpeedModifier (D)V i
	startJumping ()V eL
	wantsMoreFood ()Z eY
net/minecraft/world/entity/animal/Rabbit$EvilRabbitAttackGoal azb$a
	getAttackReachSqr (Lnet/minecraft/world/entity/LivingEntity;)D a
net/minecraft/world/entity/animal/Rabbit$RabbitAvoidEntityGoal azb$b
	rabbit i
	canUse ()Z a
net/minecraft/world/entity/animal/Rabbit$RabbitGroupData azb$c
	rabbitType a
net/minecraft/world/entity/animal/Rabbit$RabbitJumpControl azb$d
	canJump d
	rabbit c
	canJump ()Z d
	setCanJump (Z)V a
	tick ()V b
	wantJump ()Z c
net/minecraft/world/entity/animal/Rabbit$RabbitMoveControl azb$e
	nextJumpSpeed j
	rabbit i
	setWantedPosition (DDDD)V a
	tick ()V a
net/minecraft/world/entity/animal/Rabbit$RabbitPanicGoal azb$f
	rabbit g
	tick ()V e
net/minecraft/world/entity/animal/Rabbit$RaidGardenGoal azb$g
	canRaid i
	rabbit g
	wantsToRaid h
	canContinueToUse ()Z b
	canUse ()Z a
	isValidTarget (Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;)Z a
	tick ()V e
net/minecraft/world/entity/animal/Salmon azc
	getAmbientSound ()Lnet/minecraft/sounds/SoundEvent; I
	getBucketItemStack ()Lnet/minecraft/world/item/ItemStack; eL
	getDeathSound ()Lnet/minecraft/sounds/SoundEvent; dp
	getFlopSound ()Lnet/minecraft/sounds/SoundEvent; eN
	getHurtSound (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEvent; e
	getMaxSchoolSize ()I eO
net/minecraft/world/entity/animal/Sheep azd
	COLORARRAY_BY_COLOR bx
	DATA_WOOL_ID bv
	ITEM_BY_DYE bw
	eatAnimationTick by
	eatBlockGoal bz
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	aiStep ()V k
	ate ()V B
	createAttributes ()Lnet/minecraft/world/entity/ai/attributes/AttributeSupplier$Builder; eL
	createSheepColor (Lnet/minecraft/world/item/DyeColor;)[F c
	customServerAiStep ()V N
	defineSynchedData ()V e
	finalizeSpawn (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/world/DifficultyInstance;Lnet/minecraft/world/entity/MobSpawnType;Lnet/minecraft/world/entity/SpawnGroupData;Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/world/entity/SpawnGroupData; a
	getAmbientSound ()Lnet/minecraft/sounds/SoundEvent; I
	getBreedOffspring (Lnet/minecraft/world/entity/AgableMob;)Lnet/minecraft/world/entity/AgableMob; a
	getBreedOffspring (Lnet/minecraft/world/entity/AgableMob;)Lnet/minecraft/world/entity/animal/Sheep; b
	getColor ()Lnet/minecraft/world/item/DyeColor; eM
	getColorArray (Lnet/minecraft/world/item/DyeColor;)[F a
	getDeathSound ()Lnet/minecraft/sounds/SoundEvent; dp
	getDefaultLootTable ()Lnet/minecraft/resources/ResourceLocation; J
	getHeadEatAngleScale (F)F v
	getHeadEatPositionScale (F)F u
	getHurtSound (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEvent; e
	getOffspringColor (Lnet/minecraft/world/entity/animal/Animal;Lnet/minecraft/world/entity/animal/Animal;)Lnet/minecraft/world/item/DyeColor; a
	getRandomSheepColor (Ljava/util/Random;)Lnet/minecraft/world/item/DyeColor; a
	getStandingEyeHeight (Lnet/minecraft/world/entity/Pose;Lnet/minecraft/world/entity/EntityDimensions;)F b
	handleEntityEvent (B)V a
	isSheared ()Z eN
	makeContainer (Lnet/minecraft/world/item/DyeColor;Lnet/minecraft/world/item/DyeColor;)Lnet/minecraft/world/inventory/CraftingContainer; a
	mobInteract (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResult; b
	playStepSound (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V a
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	readyForShearing ()Z L_
	registerGoals ()V o
	setColor (Lnet/minecraft/world/item/DyeColor;)V b
	setSheared (Z)V t
	shear (Lnet/minecraft/sounds/SoundSource;)V a
net/minecraft/world/entity/animal/ShoulderRidingEntity aze
	rideCooldownCounter bx
	canSitOnShoulder ()Z eZ
	setEntityOnShoulder (Lnet/minecraft/server/level/ServerPlayer;)Z d
	tick ()V j
net/minecraft/world/entity/animal/SnowGolem azf
	DATA_PUMPKIN_ID b
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	aiStep ()V k
	createAttributes ()Lnet/minecraft/world/entity/ai/attributes/AttributeSupplier$Builder; m
	defineSynchedData ()V e
	getAmbientSound ()Lnet/minecraft/sounds/SoundEvent; I
	getDeathSound ()Lnet/minecraft/sounds/SoundEvent; dp
	getHurtSound (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEvent; e
	getLeashOffset ()Lnet/minecraft/world/phys/Vec3; ce
	getStandingEyeHeight (Lnet/minecraft/world/entity/Pose;Lnet/minecraft/world/entity/EntityDimensions;)F b
	hasPumpkin ()Z eL
	isSensitiveToWater ()Z dN
	mobInteract (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResult; b
	performRangedAttack (Lnet/minecraft/world/entity/LivingEntity;F)V a
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	readyForShearing ()Z L_
	registerGoals ()V o
	setPumpkin (Z)V t
	shear (Lnet/minecraft/sounds/SoundSource;)V a
net/minecraft/world/entity/animal/Squid azg
	oldTentacleAngle bz
	oldTentacleMovement bx
	rotateSpeed bC
	speed bA
	tentacleAngle by
	tentacleMovement bw
	tentacleSpeed bB
	tx bD
	ty bE
	tz bF
	xBodyRot b
	xBodyRotO c
	zBodyRot d
	zBodyRotO bv
	aiStep ()V k
	checkSquidSpawnRules (Lnet/minecraft/world/entity/EntityType;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/world/entity/MobSpawnType;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)Z b
	createAttributes ()Lnet/minecraft/world/entity/ai/attributes/AttributeSupplier$Builder; m
	getAmbientSound ()Lnet/minecraft/sounds/SoundEvent; I
	getDeathSound ()Lnet/minecraft/sounds/SoundEvent; dp
	getHurtSound (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEvent; e
	getSoundVolume ()F dF
	getStandingEyeHeight (Lnet/minecraft/world/entity/Pose;Lnet/minecraft/world/entity/EntityDimensions;)F b
	handleEntityEvent (B)V a
	hasMovementVector ()Z eL
	hurt (Lnet/minecraft/world/damagesource/DamageSource;F)Z a
	isMovementNoisy ()Z ax
	registerGoals ()V o
	rotateVector (Lnet/minecraft/world/phys/Vec3;)Lnet/minecraft/world/phys/Vec3; g
	setMovementVector (FFF)V a
	spawnInk ()V eM
	travel (Lnet/minecraft/world/phys/Vec3;)V f
net/minecraft/world/entity/animal/Squid$SquidFleeGoal azg$a
	fleeTicks b
	canUse ()Z a
	start ()V c
	tick ()V e
net/minecraft/world/entity/animal/Squid$SquidRandomMovementGoal azg$b
	squid b
	canUse ()Z a
	tick ()V e
net/minecraft/world/entity/animal/TropicalFish azh
	BASE_TEXTURE_LOCATIONS d
	COMMON_VARIANTS b
	DATA_ID_TYPE_VARIANT c
	PATTERN_A_TEXTURE_LOCATIONS bv
	PATTERN_B_TEXTURE_LOCATIONS bw
	isSchool bx
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	calculateVariant (Lnet/minecraft/world/entity/animal/TropicalFish$Pattern;Lnet/minecraft/world/item/DyeColor;Lnet/minecraft/world/item/DyeColor;)I a
	defineSynchedData ()V e
	finalizeSpawn (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/world/DifficultyInstance;Lnet/minecraft/world/entity/MobSpawnType;Lnet/minecraft/world/entity/SpawnGroupData;Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/world/entity/SpawnGroupData; a
	getAmbientSound ()Lnet/minecraft/sounds/SoundEvent; I
	getBaseColor ()[F eW
	getBaseColor (I)Lnet/minecraft/world/item/DyeColor; s
	getBaseColorIdx (I)I x
	getBaseTextureLocation ()Lnet/minecraft/resources/ResourceLocation; fa
	getBaseVariant ()I eY
	getBaseVariant (I)I w
	getBucketItemStack ()Lnet/minecraft/world/item/ItemStack; eL
	getDeathSound ()Lnet/minecraft/sounds/SoundEvent; dp
	getFishTypeName (I)Ljava/lang/String; u
	getFlopSound ()Lnet/minecraft/sounds/SoundEvent; eN
	getHurtSound (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEvent; e
	getPatternColor ()[F eX
	getPatternColor (I)Lnet/minecraft/world/item/DyeColor; t
	getPatternColorIdx (I)I y
	getPatternTextureLocation ()Lnet/minecraft/resources/ResourceLocation; eZ
	getPatternVariant (I)I z
	getPredefinedName (I)Ljava/lang/String; b
	getVariant ()I eV
	isMaxGroupSizeReached (I)Z c
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	saveToBucketTag (Lnet/minecraft/world/item/ItemStack;)V k
	setVariant (I)V v
net/minecraft/world/entity/animal/TropicalFish$Pattern azh$a
	$VALUES p
	BETTY k
	BLOCKFISH j
	BRINELY e
	CLAYFISH l
	DASHER d
	FLOPPER g
	GLITTER i
	KOB a
	SNOOPER c
	SPOTTY f
	STRIPEY h
	SUNSTREAK b
	VALUES o
	base m
	index n
	getBase ()I a
	getIndex ()I b
	getName ()Ljava/lang/String; c
	getPatternName (II)Ljava/lang/String; a
net/minecraft/world/entity/animal/TropicalFish$TropicalFishGroupData azh$b
	base b
	baseColor d
	pattern c
	patternColor e
net/minecraft/world/entity/animal/Turtle azi
	BABY_ON_LAND_SELECTOR bv
	GOING_HOME bA
	HAS_EGG bx
	HOME_POS bw
	LAYING_EGG by
	TRAVELLING bB
	TRAVEL_POS bz
	layEggCounter bC
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	ageBoundaryReached ()V m
	aiStep ()V k
	canBeLeashed (Lnet/minecraft/world/entity/player/Player;)Z a
	canBreatheUnderwater ()Z cL
	canFallInLove ()Z eQ
	checkTurtleSpawnRules (Lnet/minecraft/world/entity/EntityType;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/world/entity/MobSpawnType;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)Z c
	createAttributes ()Lnet/minecraft/world/entity/ai/attributes/AttributeSupplier$Builder; eN
	createNavigation (Lnet/minecraft/world/level/Level;)Lnet/minecraft/world/entity/ai/navigation/PathNavigation; b
	defineSynchedData ()V e
	finalizeSpawn (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/world/DifficultyInstance;Lnet/minecraft/world/entity/MobSpawnType;Lnet/minecraft/world/entity/SpawnGroupData;Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/world/entity/SpawnGroupData; a
	getAmbientSound ()Lnet/minecraft/sounds/SoundEvent; I
	getAmbientSoundInterval ()I D
	getBreedOffspring (Lnet/minecraft/world/entity/AgableMob;)Lnet/minecraft/world/entity/AgableMob; a
	getDeathSound ()Lnet/minecraft/sounds/SoundEvent; dp
	getHomePos ()Lnet/minecraft/core/BlockPos; eO
	getHurtSound (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEvent; e
	getMobType ()Lnet/minecraft/world/entity/MobType; dB
	getScale ()F cR
	getSwimSound ()Lnet/minecraft/sounds/SoundEvent; aq
	getTravelPos ()Lnet/minecraft/core/BlockPos; eP
	getWalkTargetValue (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/LevelReader;)F a
	hasEgg ()Z eL
	isFood (Lnet/minecraft/world/item/ItemStack;)Z k
	isGoingHome ()Z eV
	isLayingEgg ()Z eM
	isPushedByFluid ()Z bU
	isTravelling ()Z eW
	nextStep ()F ao
	playStepSound (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V a
	playSwimSound (F)V d
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	registerGoals ()V o
	setGoingHome (Z)V v
	setHasEgg (Z)V t
	setHomePos (Lnet/minecraft/core/BlockPos;)V g
	setLayingEgg (Z)V u
	setTravelPos (Lnet/minecraft/core/BlockPos;)V h
	setTravelling (Z)V w
	thunderHit (Lnet/minecraft/world/entity/LightningBolt;)V a
	travel (Lnet/minecraft/world/phys/Vec3;)V f
net/minecraft/world/entity/animal/Turtle$TurtleBreedGoal azi$a
	turtle d
	breed ()V g
	canUse ()Z a
net/minecraft/world/entity/animal/Turtle$TurtleGoHomeGoal azi$b
	closeToHomeTryTicks d
	speedModifier b
	stuck c
	turtle a
	canContinueToUse ()Z b
	canUse ()Z a
	start ()V c
	stop ()V d
	tick ()V e
net/minecraft/world/entity/animal/Turtle$TurtleGoToWaterGoal azi$c
	turtle g
	canContinueToUse ()Z b
	canUse ()Z a
	isValidTarget (Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;)Z a
	shouldRecalculatePath ()Z j
net/minecraft/world/entity/animal/Turtle$TurtleLayEggGoal azi$d
	turtle g
	canContinueToUse ()Z b
	canUse ()Z a
	isValidTarget (Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;)Z a
	tick ()V e
net/minecraft/world/entity/animal/Turtle$TurtleMoveControl azi$e
	turtle i
	tick ()V a
	updateSpeed ()V g
net/minecraft/world/entity/animal/Turtle$TurtlePanicGoal azi$f
	canUse ()Z a
net/minecraft/world/entity/animal/Turtle$TurtlePathNavigation azi$g
	canUpdatePath ()Z a
	createPathFinder (I)Lnet/minecraft/world/level/pathfinder/PathFinder; a
	isStableDestination (Lnet/minecraft/core/BlockPos;)Z a
net/minecraft/world/entity/animal/Turtle$TurtleRandomStrollGoal azi$h
	turtle h
	canUse ()Z a
net/minecraft/world/entity/animal/Turtle$TurtleTemptGoal azi$i
	TEMPT_TARGETING a
	calmDown e
	items f
	player d
	speedModifier c
	turtle b
	canContinueToUse ()Z b
	canUse ()Z a
	shouldFollowItem (Lnet/minecraft/world/item/ItemStack;)Z a
	stop ()V d
	tick ()V e
net/minecraft/world/entity/animal/Turtle$TurtleTravelGoal azi$j
	speedModifier b
	stuck c
	turtle a
	canContinueToUse ()Z b
	canUse ()Z a
	start ()V c
	stop ()V d
	tick ()V e
net/minecraft/world/entity/animal/WaterAnimal azj
	baseTick ()V ad
	canBeLeashed (Lnet/minecraft/world/entity/player/Player;)Z a
	canBreatheUnderwater ()Z cL
	checkSpawnObstruction (Lnet/minecraft/world/level/LevelReader;)Z a
	getAmbientSoundInterval ()I D
	getExperienceReward (Lnet/minecraft/world/entity/player/Player;)I d
	getMobType ()Lnet/minecraft/world/entity/MobType; dB
	handleAirSupply (I)V a
	isPushedByFluid ()Z bU
net/minecraft/world/entity/animal/Wolf azk
	DATA_COLLAR_COLOR bz
	DATA_INTERESTED_ID by
	DATA_REMAINING_ANGER_TIME bA
	PERSISTENT_ANGER_TIME bH
	PREY_SELECTOR bx
	interestedAngle bB
	interestedAngleO bC
	isShaking bE
	isWet bD
	persistentAngerTarget bI
	shakeAnim bF
	shakeAnimO bG
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	aiStep ()V k
	canBeLeashed (Lnet/minecraft/world/entity/player/Player;)Z a
	canMate (Lnet/minecraft/world/entity/animal/Animal;)Z a
	createAttributes ()Lnet/minecraft/world/entity/ai/attributes/AttributeSupplier$Builder; eV
	defineSynchedData ()V e
	die (Lnet/minecraft/world/damagesource/DamageSource;)V a
	doHurtTarget (Lnet/minecraft/world/entity/Entity;)Z B
	getAmbientSound ()Lnet/minecraft/sounds/SoundEvent; I
	getBodyRollAngle (FF)F g
	getBreedOffspring (Lnet/minecraft/world/entity/AgableMob;)Lnet/minecraft/world/entity/AgableMob; a
	getBreedOffspring (Lnet/minecraft/world/entity/AgableMob;)Lnet/minecraft/world/entity/animal/Wolf; b
	getCollarColor ()Lnet/minecraft/world/item/DyeColor; eY
	getDeathSound ()Lnet/minecraft/sounds/SoundEvent; dp
	getHeadRollAngle (F)F v
	getHurtSound (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEvent; e
	getLeashOffset ()Lnet/minecraft/world/phys/Vec3; ce
	getMaxHeadXRot ()I eo
	getMaxSpawnClusterSize ()I er
	getPersistentAngerTarget ()Ljava/util/UUID; G_
	getRemainingPersistentAngerTime ()I F_
	getSoundVolume ()F dF
	getStandingEyeHeight (Lnet/minecraft/world/entity/Pose;Lnet/minecraft/world/entity/EntityDimensions;)F b
	getTailAngle ()F eX
	getWetShade (F)F u
	handleEntityEvent (B)V a
	hurt (Lnet/minecraft/world/damagesource/DamageSource;F)Z a
	isFood (Lnet/minecraft/world/item/ItemStack;)Z k
	isInterested ()Z eZ
	isWet ()Z eW
	mobInteract (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResult; b
	playStepSound (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V a
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	registerGoals ()V o
	setCollarColor (Lnet/minecraft/world/item/DyeColor;)V a
	setIsInterested (Z)V x
	setPersistentAngerTarget (Ljava/util/UUID;)V a
	setRemainingPersistentAngerTime (I)V a_
	setTame (Z)V u
	startPersistentAngerTimer ()V H_
	tick ()V j
	wantsToAttack (Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/entity/LivingEntity;)Z a
net/minecraft/world/entity/animal/Wolf$WolfAvoidEntityGoal azk$a
	wolf j
	avoidLlama (Lnet/minecraft/world/entity/animal/horse/Llama;)Z a
	canUse ()Z a
	start ()V c
	tick ()V e
net/minecraft/world/entity/animal/horse/AbstractChestedHorse azl
	DATA_ID_CHEST bD
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	createBaseChestedHorseAttributes ()Lnet/minecraft/world/entity/ai/attributes/AttributeSupplier$Builder; eM
	defineSynchedData ()V e
	dropEquipment ()V dm
	getInventoryColumns ()I eV
	getInventorySize ()I eO
	getPassengersRidingOffset ()D aY
	hasChest ()Z eN
	mobInteract (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResult; b
	playChestEquipsSound ()V eP
	randomizeAttributes ()V eL
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	setChest (Z)V t
	setSlot (ILnet/minecraft/world/item/ItemStack;)Z a_
net/minecraft/world/entity/animal/horse/AbstractHorse azm
	DATA_ID_FLAGS bG
	DATA_ID_OWNER_UUID bH
	FOOD_ITEMS bF
	MOMMY_TARGETING bE
	PARENT_HORSE_SELECTOR bD
	allowStandSliding bL
	canGallop bB
	eatAnim bM
	eatAnimO bN
	eatingCounter bI
	gallopSoundCounter bC
	inventory by
	isJumping bx
	mouthAnim bQ
	mouthAnimO bR
	mouthCounter bJ
	playerJumpPendingScale bA
	sprintCounter bw
	standAnim bO
	standAnimO bP
	standCounter bK
	tailCounter bv
	temper bz
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	addBehaviourGoals ()V eW
	aiStep ()V k
	calculateFallDamage (FF)I e
	canBeControlledByRider ()Z es
	canEatGrass ()Z fm
	canJump ()Z Q_
	canMate (Lnet/minecraft/world/entity/animal/Animal;)Z a
	canParent ()Z fp
	canWearArmor ()Z ft
	causeFallDamage (FF)Z b
	containerChanged (Lnet/minecraft/world/Container;)V a
	createBaseHorseAttributes ()Lnet/minecraft/world/entity/ai/attributes/AttributeSupplier$Builder; fj
	createInventory ()V fe
	defineSynchedData ()V e
	doPlayerRide (Lnet/minecraft/world/entity/player/Player;)V h
	dropEquipment ()V dm
	eating ()V eM
	equipSaddle (Lnet/minecraft/sounds/SoundSource;)V a
	fedFood (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/item/ItemStack;)Lnet/minecraft/world/InteractionResult; b
	finalizeSpawn (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/world/DifficultyInstance;Lnet/minecraft/world/entity/MobSpawnType;Lnet/minecraft/world/entity/SpawnGroupData;Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/world/entity/SpawnGroupData; a
	followMommy ()V fl
	generateRandomJumpStrength ()D fr
	generateRandomMaxHealth ()F fq
	generateRandomSpeed ()D fs
	getAmbientSound ()Lnet/minecraft/sounds/SoundEvent; I
	getAmbientSoundInterval ()I D
	getAngrySound ()Lnet/minecraft/sounds/SoundEvent; fi
	getBreedOffspring (Lnet/minecraft/world/entity/AgableMob;)Lnet/minecraft/world/entity/AgableMob; a
	getControllingPassenger ()Lnet/minecraft/world/entity/Entity; cl
	getCustomJump ()D fg
	getDeathSound ()Lnet/minecraft/sounds/SoundEvent; dp
	getDismountLocationForPassenger (Lnet/minecraft/world/entity/LivingEntity;)Lnet/minecraft/world/phys/Vec3; c
	getDismountLocationInDirection (Lnet/minecraft/world/phys/Vec3;Lnet/minecraft/world/entity/LivingEntity;)Lnet/minecraft/world/phys/Vec3; a
	getEatAnim (F)F u
	getEatingSound ()Lnet/minecraft/sounds/SoundEvent; fh
	getFlag (I)Z t
	getHurtSound (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEvent; e
	getInventorySize ()I eO
	getJumpRidingScale ()F R_
	getMaxSpawnClusterSize ()I er
	getMaxTemper ()I fk
	getMouthAnim (F)F w
	getOwnerUUID ()Ljava/util/UUID; eY
	getSoundVolume ()F dF
	getStandAnim (F)F v
	getStandingEyeHeight (Lnet/minecraft/world/entity/Pose;Lnet/minecraft/world/entity/EntityDimensions;)F b
	getTemper ()I fd
	handleEating (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/item/ItemStack;)Z c
	handleEntityEvent (B)V a
	handleStartJump (I)V b
	handleStopJump ()V c
	isArmor (Lnet/minecraft/world/item/ItemStack;)Z l
	isBred ()Z fc
	isEating ()Z fa
	isFood (Lnet/minecraft/world/item/ItemStack;)Z k
	isImmobile ()Z dH
	isJumping ()Z eZ
	isPushable ()Z aR
	isSaddleable ()Z M_
	isSaddled ()Z N_
	isStanding ()Z fb
	isTamed ()Z eX
	isWearingArmor ()Z fu
	makeMad ()V fn
	modifyTemper (I)I v
	moveTail ()V eN
	onClimbable ()Z c_
	onLeashDistance (F)V t
	onPlayerJump (I)V b_
	openInventory (Lnet/minecraft/world/entity/player/Player;)V f
	openMouth ()V eP
	playGallopSound (Lnet/minecraft/world/level/block/SoundType;)V a
	playJumpSound ()V fo
	playStepSound (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V a
	positionRider (Lnet/minecraft/world/entity/Entity;)V k
	randomizeAttributes ()V eL
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	registerGoals ()V o
	setBred (Z)V w
	setEating (Z)V x
	setFlag (IZ)V d
	setIsJumping (Z)V v
	setJumpRidingScale (F)V a_
	setOffspringAttributes (Lnet/minecraft/world/entity/AgableMob;Lnet/minecraft/world/entity/animal/horse/AbstractHorse;)V a
	setOwnerUUID (Ljava/util/UUID;)V b
	setSlot (ILnet/minecraft/world/item/ItemStack;)Z a_
	setStanding (Z)V y
	setTamed (Z)V u
	setTemper (I)V u
	spawnTamingParticles (Z)V z
	stand ()V eV
	tameWithName (Lnet/minecraft/world/entity/player/Player;)Z i
	tick ()V j
	travel (Lnet/minecraft/world/phys/Vec3;)V f
	updateContainerEquipment ()V ff
net/minecraft/world/entity/animal/horse/Donkey azn
	canMate (Lnet/minecraft/world/entity/animal/Animal;)Z a
	getAmbientSound ()Lnet/minecraft/sounds/SoundEvent; I
	getAngrySound ()Lnet/minecraft/sounds/SoundEvent; fi
	getBreedOffspring (Lnet/minecraft/world/entity/AgableMob;)Lnet/minecraft/world/entity/AgableMob; a
	getDeathSound ()Lnet/minecraft/sounds/SoundEvent; dp
	getEatingSound ()Lnet/minecraft/sounds/SoundEvent; fh
	getHurtSound (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEvent; e
net/minecraft/world/entity/animal/horse/Horse azo
	ARMOR_MODIFIER_UUID bD
	DATA_ID_TYPE_VARIANT bE
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	canMate (Lnet/minecraft/world/entity/animal/Animal;)Z a
	canWearArmor ()Z ft
	containerChanged (Lnet/minecraft/world/Container;)V a
	defineSynchedData ()V e
	finalizeSpawn (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/world/DifficultyInstance;Lnet/minecraft/world/entity/MobSpawnType;Lnet/minecraft/world/entity/SpawnGroupData;Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/world/entity/SpawnGroupData; a
	getAmbientSound ()Lnet/minecraft/sounds/SoundEvent; I
	getAngrySound ()Lnet/minecraft/sounds/SoundEvent; fi
	getArmor ()Lnet/minecraft/world/item/ItemStack; eM
	getBreedOffspring (Lnet/minecraft/world/entity/AgableMob;)Lnet/minecraft/world/entity/AgableMob; a
	getDeathSound ()Lnet/minecraft/sounds/SoundEvent; dp
	getEatingSound ()Lnet/minecraft/sounds/SoundEvent; fh
	getHurtSound (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEvent; e
	getMarkings ()Lnet/minecraft/world/entity/animal/horse/Markings; eP
	getTypeVariant ()I eV
	getVariant ()Lnet/minecraft/world/entity/animal/horse/Variant; eN
	isArmor (Lnet/minecraft/world/item/ItemStack;)Z l
	mobInteract (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResult; b
	playGallopSound (Lnet/minecraft/world/level/block/SoundType;)V a
	randomizeAttributes ()V eL
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	setArmor (Lnet/minecraft/world/item/ItemStack;)V m
	setArmorEquipment (Lnet/minecraft/world/item/ItemStack;)V n
	setTypeVariant (I)V w
	setVariantAndMarkings (Lnet/minecraft/world/entity/animal/horse/Variant;Lnet/minecraft/world/entity/animal/horse/Markings;)V a
	updateContainerEquipment ()V ff
net/minecraft/world/entity/animal/horse/Horse$HorseGroupData azo$a
	variant a
net/minecraft/world/entity/animal/horse/Llama azp
	DATA_STRENGTH_ID bE
	DATA_SWAG_ID bF
	DATA_VARIANT_ID bG
	FOOD_ITEMS bD
	caravanHead bI
	caravanTail bJ
	didSpit bH
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	canBeControlledByRider ()Z es
	canEatGrass ()Z fm
	canMate (Lnet/minecraft/world/entity/animal/Animal;)Z a
	canWearArmor ()Z ft
	causeFallDamage (FF)Z b
	containerChanged (Lnet/minecraft/world/Container;)V a
	createAttributes ()Lnet/minecraft/world/entity/ai/attributes/AttributeSupplier$Builder; fx
	defineSynchedData ()V e
	finalizeSpawn (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/world/DifficultyInstance;Lnet/minecraft/world/entity/MobSpawnType;Lnet/minecraft/world/entity/SpawnGroupData;Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/world/entity/SpawnGroupData; a
	followLeashSpeed ()D eK
	followMommy ()V fl
	getAmbientSound ()Lnet/minecraft/sounds/SoundEvent; I
	getAngrySound ()Lnet/minecraft/sounds/SoundEvent; fi
	getBreedOffspring (Lnet/minecraft/world/entity/AgableMob;)Lnet/minecraft/world/entity/AgableMob; a
	getBreedOffspring (Lnet/minecraft/world/entity/AgableMob;)Lnet/minecraft/world/entity/animal/horse/Llama; b
	getCaravanHead ()Lnet/minecraft/world/entity/animal/horse/Llama; fE
	getDeathSound ()Lnet/minecraft/sounds/SoundEvent; dp
	getDyeColor (Lnet/minecraft/world/item/ItemStack;)Lnet/minecraft/world/item/DyeColor; m
	getEatingSound ()Lnet/minecraft/sounds/SoundEvent; fh
	getHurtSound (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEvent; e
	getInventoryColumns ()I eV
	getInventorySize ()I eO
	getMaxTemper ()I fk
	getPassengersRidingOffset ()D aY
	getStrength ()I fw
	getSwag ()Lnet/minecraft/world/item/DyeColor; fz
	getVariant ()I fy
	handleEating (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/item/ItemStack;)Z c
	hasCaravanTail ()Z fC
	inCaravan ()Z fD
	isArmor (Lnet/minecraft/world/item/ItemStack;)Z l
	isFood (Lnet/minecraft/world/item/ItemStack;)Z k
	isImmobile ()Z dH
	isSaddleable ()Z M_
	isTraderLlama ()Z fv
	isWearingArmor ()Z fu
	joinCaravan (Lnet/minecraft/world/entity/animal/horse/Llama;)V a
	leaveCaravan ()V fB
	makeBabyLlama ()Lnet/minecraft/world/entity/animal/horse/Llama; fA
	makeMad ()V fn
	performRangedAttack (Lnet/minecraft/world/entity/LivingEntity;F)V a
	playChestEquipsSound ()V eP
	playStepSound (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V a
	positionRider (Lnet/minecraft/world/entity/Entity;)V k
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	registerGoals ()V o
	setDidSpit (Z)V A
	setRandomStrength ()V fF
	setStrength (I)V x
	setSwag (Lnet/minecraft/world/item/DyeColor;)V a
	setVariant (I)V w
	spit (Lnet/minecraft/world/entity/LivingEntity;)V j
	updateContainerEquipment ()V ff
net/minecraft/world/entity/animal/horse/Llama$LlamaAttackWolfGoal azp$a
	getFollowDistance ()D k
net/minecraft/world/entity/animal/horse/Llama$LlamaGroupData azp$b
	variant a
net/minecraft/world/entity/animal/horse/Llama$LlamaHurtByTargetGoal azp$c
	canContinueToUse ()Z b
net/minecraft/world/entity/animal/horse/Markings azq
	$VALUES h
	BLACK_DOTS e
	BY_ID f
	NONE a
	WHITE b
	WHITE_DOTS d
	WHITE_FIELD c
	id g
	byId (I)Lnet/minecraft/world/entity/animal/horse/Markings; a
	getId ()I a
net/minecraft/world/entity/animal/horse/Mule azr
	getAmbientSound ()Lnet/minecraft/sounds/SoundEvent; I
	getAngrySound ()Lnet/minecraft/sounds/SoundEvent; fi
	getBreedOffspring (Lnet/minecraft/world/entity/AgableMob;)Lnet/minecraft/world/entity/AgableMob; a
	getDeathSound ()Lnet/minecraft/sounds/SoundEvent; dp
	getEatingSound ()Lnet/minecraft/sounds/SoundEvent; fh
	getHurtSound (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEvent; e
	playChestEquipsSound ()V eP
net/minecraft/world/entity/animal/horse/SkeletonHorse azs
	isTrap bE
	skeletonTrapGoal bD
	trapTime bF
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	addBehaviourGoals ()V eW
	aiStep ()V k
	createAttributes ()Lnet/minecraft/world/entity/ai/attributes/AttributeSupplier$Builder; eM
	getAmbientSound ()Lnet/minecraft/sounds/SoundEvent; I
	getBreedOffspring (Lnet/minecraft/world/entity/AgableMob;)Lnet/minecraft/world/entity/AgableMob; a
	getDeathSound ()Lnet/minecraft/sounds/SoundEvent; dp
	getHurtSound (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEvent; e
	getMobType ()Lnet/minecraft/world/entity/MobType; dB
	getPassengersRidingOffset ()D aY
	getSwimSound ()Lnet/minecraft/sounds/SoundEvent; aq
	getWaterSlowDown ()F dL
	isTrap ()Z eN
	mobInteract (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResult; b
	playJumpSound ()V fo
	playSwimSound (F)V d
	randomizeAttributes ()V eL
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	rideableUnderWater ()Z bp
	setTrap (Z)V t
net/minecraft/world/entity/animal/horse/SkeletonTrapGoal azt
	horse a
	canUse ()Z a
	createHorse (Lnet/minecraft/world/DifficultyInstance;)Lnet/minecraft/world/entity/animal/horse/AbstractHorse; a
	createSkeleton (Lnet/minecraft/world/DifficultyInstance;Lnet/minecraft/world/entity/animal/horse/AbstractHorse;)Lnet/minecraft/world/entity/monster/Skeleton; a
	tick ()V e
net/minecraft/world/entity/animal/horse/TraderLlama azu
	despawnDelay bD
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	aiStep ()V k
	canDespawn ()Z fG
	doPlayerRide (Lnet/minecraft/world/entity/player/Player;)V h
	finalizeSpawn (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/world/DifficultyInstance;Lnet/minecraft/world/entity/MobSpawnType;Lnet/minecraft/world/entity/SpawnGroupData;Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/world/entity/SpawnGroupData; a
	isLeashedToSomethingOtherThanTheWanderingTrader ()Z fI
	isLeashedToWanderingTrader ()Z fH
	isTraderLlama ()Z fv
	makeBabyLlama ()Lnet/minecraft/world/entity/animal/horse/Llama; fA
	maybeDespawn ()V fF
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	registerGoals ()V o
	setDespawnDelay (I)V x
net/minecraft/world/entity/animal/horse/TraderLlama$TraderLlamaDefendWanderingTraderGoal azu$a
	llama b
	ownerLastHurtBy c
	timestamp d
	canUse ()Z a
	start ()V c
net/minecraft/world/entity/animal/horse/Variant azv
	$VALUES j
	BLACK e
	BROWN d
	BY_ID h
	CHESTNUT c
	CREAMY b
	DARKBROWN g
	GRAY f
	WHITE a
	id i
	byId (I)Lnet/minecraft/world/entity/animal/horse/Variant; a
	getId ()I a
net/minecraft/world/entity/animal/horse/ZombieHorse azw
	addBehaviourGoals ()V eW
	createAttributes ()Lnet/minecraft/world/entity/ai/attributes/AttributeSupplier$Builder; eM
	getAmbientSound ()Lnet/minecraft/sounds/SoundEvent; I
	getBreedOffspring (Lnet/minecraft/world/entity/AgableMob;)Lnet/minecraft/world/entity/AgableMob; a
	getDeathSound ()Lnet/minecraft/sounds/SoundEvent; dp
	getHurtSound (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEvent; e
	getMobType ()Lnet/minecraft/world/entity/MobType; dB
	mobInteract (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResult; b
	randomizeAttributes ()V eL
net/minecraft/world/entity/boss/BossMob azz
	getDisplayName ()Lnet/minecraft/network/chat/Component; d
	getHealth ()F dj
	getMaxHealth ()F dw
net/minecraft/world/entity/boss/EnderDragonPart baa
	name c
	parentMob b
	size d
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	defineSynchedData ()V e
	getAddEntityPacket ()Lnet/minecraft/network/protocol/Packet; O
	getDimensions (Lnet/minecraft/world/entity/Pose;)Lnet/minecraft/world/entity/EntityDimensions; a
	hurt (Lnet/minecraft/world/damagesource/DamageSource;F)Z a
	is (Lnet/minecraft/world/entity/Entity;)Z s
	isPickable ()Z aQ
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
net/minecraft/world/entity/boss/enderdragon/EndCrystal bab
	DATA_BEAM_TARGET c
	DATA_SHOW_BOTTOM d
	time b
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	defineSynchedData ()V e
	getAddEntityPacket ()Lnet/minecraft/network/protocol/Packet; O
	getBeamTarget ()Lnet/minecraft/core/BlockPos; g
	hurt (Lnet/minecraft/world/damagesource/DamageSource;F)Z a
	isMovementNoisy ()Z ax
	isPickable ()Z aQ
	kill ()V X
	onDestroyedBy (Lnet/minecraft/world/damagesource/DamageSource;)V a
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	setBeamTarget (Lnet/minecraft/core/BlockPos;)V a
	setShowBottom (Z)V a
	shouldRenderAtSqrDistance (D)Z a
	showsBottom ()Z h
	tick ()V j
net/minecraft/world/entity/boss/enderdragon/EnderDragon bac
	CRYSTAL_DESTROY_TARGETING bD
	DATA_PHASE b
	LOGGER bC
	body bG
	dragonDeathTime bz
	dragonFight bM
	flapTime bx
	growlTime bO
	head bv
	inWall by
	nearestCrystal bB
	neck bF
	nodeAdjacency bR
	nodes bQ
	oFlapTime bw
	openSet bS
	phaseManager bN
	posPointer d
	positions c
	sittingDamageReceived bP
	subEntities bE
	tail1 bH
	tail2 bI
	tail3 bJ
	wing1 bK
	wing2 bL
	yRotA bA
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	addEffect (Lnet/minecraft/world/effect/MobEffectInstance;)Z c
	aiStep ()V k
	canChangeDimensions ()Z bK
	canRide (Lnet/minecraft/world/entity/Entity;)Z n
	checkCrystals ()V eO
	checkDespawn ()V cH
	checkWalls (Lnet/minecraft/world/phys/AABB;)Z b
	createAttributes ()Lnet/minecraft/world/entity/ai/attributes/AttributeSupplier$Builder; m
	defineSynchedData ()V e
	dropExperience (I)V a
	findClosestNode ()I eJ
	findClosestNode (DDD)I o
	findPath (IILnet/minecraft/world/level/pathfinder/Node;)Lnet/minecraft/world/level/pathfinder/Path; a
	getAmbientSound ()Lnet/minecraft/sounds/SoundEvent; I
	getDragonFight ()Lnet/minecraft/world/level/dimension/end/EndDragonFight; eM
	getHeadLookVector (F)Lnet/minecraft/world/phys/Vec3; t
	getHeadPartYOffset (I[D[D)F a
	getHeadYOffset ()F eN
	getHurtSound (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEvent; e
	getLatencyPos (IF)[D a
	getPhaseManager ()Lnet/minecraft/world/entity/boss/enderdragon/phases/EnderDragonPhaseManager; eL
	getSoundSource ()Lnet/minecraft/sounds/SoundSource; ct
	getSoundVolume ()F dF
	getSubEntities ()[Lnet/minecraft/world/entity/boss/EnderDragonPart; eK
	hurt (Ljava/util/List;)V b
	hurt (Lnet/minecraft/world/damagesource/DamageSource;F)Z a
	hurt (Lnet/minecraft/world/entity/boss/EnderDragonPart;Lnet/minecraft/world/damagesource/DamageSource;F)Z a
	isPickable ()Z aQ
	kill ()V X
	knockBack (Ljava/util/List;)V a
	onCrystalDestroyed (Lnet/minecraft/world/entity/boss/enderdragon/EndCrystal;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/damagesource/DamageSource;)V a
	onSyncedDataUpdated (Lnet/minecraft/network/syncher/EntityDataAccessor;)V a
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	reallyHurt (Lnet/minecraft/world/damagesource/DamageSource;F)Z f
	reconstructPath (Lnet/minecraft/world/level/pathfinder/Node;Lnet/minecraft/world/level/pathfinder/Node;)Lnet/minecraft/world/level/pathfinder/Path; a
	rotWrap (D)F i
	tickDeath ()V cT
	tickPart (Lnet/minecraft/world/entity/boss/EnderDragonPart;DDD)V a
net/minecraft/world/entity/boss/enderdragon/phases/AbstractDragonPhaseInstance bae
	dragon a
	begin ()V d
	doClientTick ()V b
	doServerTick ()V c
	end ()V e
	getFlySpeed ()F f
	getFlyTargetLocation ()Lnet/minecraft/world/phys/Vec3; g
	getTurnSpeed ()F h
	isSitting ()Z a
	onCrystalDestroyed (Lnet/minecraft/world/entity/boss/enderdragon/EndCrystal;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/damagesource/DamageSource;Lnet/minecraft/world/entity/player/Player;)V a
	onHurt (Lnet/minecraft/world/damagesource/DamageSource;F)F a
net/minecraft/world/entity/boss/enderdragon/phases/AbstractDragonSittingPhase baf
	isSitting ()Z a
	onHurt (Lnet/minecraft/world/damagesource/DamageSource;F)F a
net/minecraft/world/entity/boss/enderdragon/phases/DragonChargePlayerPhase bag
	LOGGER b
	targetLocation c
	timeSinceCharge d
	begin ()V d
	doServerTick ()V c
	getFlySpeed ()F f
	getFlyTargetLocation ()Lnet/minecraft/world/phys/Vec3; g
	getPhase ()Lnet/minecraft/world/entity/boss/enderdragon/phases/EnderDragonPhase; i
	setTarget (Lnet/minecraft/world/phys/Vec3;)V a
net/minecraft/world/entity/boss/enderdragon/phases/DragonDeathPhase bah
	targetLocation b
	time c
	begin ()V d
	doClientTick ()V b
	doServerTick ()V c
	getFlySpeed ()F f
	getFlyTargetLocation ()Lnet/minecraft/world/phys/Vec3; g
	getPhase ()Lnet/minecraft/world/entity/boss/enderdragon/phases/EnderDragonPhase; i
net/minecraft/world/entity/boss/enderdragon/phases/DragonHoldingPatternPhase bai
	NEW_TARGET_TARGETING b
	clockwise e
	currentPath c
	targetLocation d
	begin ()V d
	doServerTick ()V c
	findNewTarget ()V j
	getFlyTargetLocation ()Lnet/minecraft/world/phys/Vec3; g
	getPhase ()Lnet/minecraft/world/entity/boss/enderdragon/phases/EnderDragonPhase; i
	navigateToNextPathNode ()V k
	onCrystalDestroyed (Lnet/minecraft/world/entity/boss/enderdragon/EndCrystal;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/damagesource/DamageSource;Lnet/minecraft/world/entity/player/Player;)V a
	strafePlayer (Lnet/minecraft/world/entity/player/Player;)V a
net/minecraft/world/entity/boss/enderdragon/phases/DragonHoverPhase baj
	targetLocation b
	begin ()V d
	doServerTick ()V c
	getFlySpeed ()F f
	getFlyTargetLocation ()Lnet/minecraft/world/phys/Vec3; g
	getPhase ()Lnet/minecraft/world/entity/boss/enderdragon/phases/EnderDragonPhase; i
	isSitting ()Z a
net/minecraft/world/entity/boss/enderdragon/phases/DragonLandingApproachPhase bak
	NEAR_EGG_TARGETING b
	currentPath c
	targetLocation d
	begin ()V d
	doServerTick ()V c
	findNewTarget ()V j
	getFlyTargetLocation ()Lnet/minecraft/world/phys/Vec3; g
	getPhase ()Lnet/minecraft/world/entity/boss/enderdragon/phases/EnderDragonPhase; i
	navigateToNextPathNode ()V k
net/minecraft/world/entity/boss/enderdragon/phases/DragonLandingPhase bal
	targetLocation b
	begin ()V d
	doClientTick ()V b
	doServerTick ()V c
	getFlySpeed ()F f
	getFlyTargetLocation ()Lnet/minecraft/world/phys/Vec3; g
	getPhase ()Lnet/minecraft/world/entity/boss/enderdragon/phases/EnderDragonPhase; i
	getTurnSpeed ()F h
net/minecraft/world/entity/boss/enderdragon/phases/DragonPhaseInstance bam
	begin ()V d
	doClientTick ()V b
	doServerTick ()V c
	end ()V e
	getFlySpeed ()F f
	getFlyTargetLocation ()Lnet/minecraft/world/phys/Vec3; g
	getPhase ()Lnet/minecraft/world/entity/boss/enderdragon/phases/EnderDragonPhase; i
	getTurnSpeed ()F h
	isSitting ()Z a
	onCrystalDestroyed (Lnet/minecraft/world/entity/boss/enderdragon/EndCrystal;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/damagesource/DamageSource;Lnet/minecraft/world/entity/player/Player;)V a
	onHurt (Lnet/minecraft/world/damagesource/DamageSource;F)F a
net/minecraft/world/entity/boss/enderdragon/phases/DragonSittingAttackingPhase ban
	attackingTicks b
	begin ()V d
	doClientTick ()V b
	doServerTick ()V c
	getPhase ()Lnet/minecraft/world/entity/boss/enderdragon/phases/EnderDragonPhase; i
net/minecraft/world/entity/boss/enderdragon/phases/DragonSittingFlamingPhase bao
	flame d
	flameCount c
	flameTicks b
	begin ()V d
	doClientTick ()V b
	doServerTick ()V c
	end ()V e
	getPhase ()Lnet/minecraft/world/entity/boss/enderdragon/phases/EnderDragonPhase; i
	resetFlameCount ()V j
net/minecraft/world/entity/boss/enderdragon/phases/DragonSittingScanningPhase bap
	CHARGE_TARGETING b
	scanTargeting c
	scanningTime d
	begin ()V d
	doServerTick ()V c
	getPhase ()Lnet/minecraft/world/entity/boss/enderdragon/phases/EnderDragonPhase; i
net/minecraft/world/entity/boss/enderdragon/phases/DragonStrafePlayerPhase baq
	LOGGER b
	attackTarget f
	currentPath d
	fireballCharge c
	holdingPatternClockwise g
	targetLocation e
	begin ()V d
	doServerTick ()V c
	findNewTarget ()V j
	getFlyTargetLocation ()Lnet/minecraft/world/phys/Vec3; g
	getPhase ()Lnet/minecraft/world/entity/boss/enderdragon/phases/EnderDragonPhase; i
	navigateToNextPathNode ()V k
	setTarget (Lnet/minecraft/world/entity/LivingEntity;)V a
net/minecraft/world/entity/boss/enderdragon/phases/DragonTakeoffPhase bar
	currentPath c
	firstTick b
	targetLocation d
	begin ()V d
	doServerTick ()V c
	findNewTarget ()V j
	getFlyTargetLocation ()Lnet/minecraft/world/phys/Vec3; g
	getPhase ()Lnet/minecraft/world/entity/boss/enderdragon/phases/EnderDragonPhase; i
	navigateToNextPathNode ()V k
net/minecraft/world/entity/boss/enderdragon/phases/EnderDragonPhase bas
	CHARGING_PLAYER i
	DYING j
	HOLDING_PATTERN a
	HOVERING k
	LANDING d
	LANDING_APPROACH c
	SITTING_ATTACKING h
	SITTING_FLAMING f
	SITTING_SCANNING g
	STRAFE_PLAYER b
	TAKEOFF e
	id n
	instanceClass m
	name o
	phases l
	create (Ljava/lang/Class;Ljava/lang/String;)Lnet/minecraft/world/entity/boss/enderdragon/phases/EnderDragonPhase; a
	createInstance (Lnet/minecraft/world/entity/boss/enderdragon/EnderDragon;)Lnet/minecraft/world/entity/boss/enderdragon/phases/DragonPhaseInstance; a
	getById (I)Lnet/minecraft/world/entity/boss/enderdragon/phases/EnderDragonPhase; a
	getConstructor ()Ljava/lang/reflect/Constructor; a
	getCount ()I c
	getId ()I b
net/minecraft/world/entity/boss/enderdragon/phases/EnderDragonPhaseManager bat
	LOGGER a
	currentPhase d
	dragon b
	phases c
	getCurrentPhase ()Lnet/minecraft/world/entity/boss/enderdragon/phases/DragonPhaseInstance; a
	getPhase (Lnet/minecraft/world/entity/boss/enderdragon/phases/EnderDragonPhase;)Lnet/minecraft/world/entity/boss/enderdragon/phases/DragonPhaseInstance; b
	setPhase (Lnet/minecraft/world/entity/boss/enderdragon/phases/EnderDragonPhase;)V a
net/minecraft/world/entity/boss/wither/WitherBoss baw
	DATA_ID_INV bw
	DATA_TARGETS bv
	DATA_TARGET_A b
	DATA_TARGET_B c
	DATA_TARGET_C d
	LIVING_ENTITY_SELECTOR bF
	TARGETING_CONDITIONS bG
	bossEvent bE
	destroyBlocksTick bD
	idleHeadUpdates bC
	nextHeadUpdate bB
	xRotHeads bx
	xRotOHeads bz
	yRotHeads by
	yRotOHeads bA
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	addEffect (Lnet/minecraft/world/effect/MobEffectInstance;)Z c
	aiStep ()V k
	canBeAffected (Lnet/minecraft/world/effect/MobEffectInstance;)Z d
	canChangeDimensions ()Z bK
	canDestroy (Lnet/minecraft/world/level/block/state/BlockState;)Z c
	canRide (Lnet/minecraft/world/entity/Entity;)Z n
	causeFallDamage (FF)Z b
	checkDespawn ()V cH
	createAttributes ()Lnet/minecraft/world/entity/ai/attributes/AttributeSupplier$Builder; eL
	customServerAiStep ()V N
	defineSynchedData ()V e
	dropCustomDeathLoot (Lnet/minecraft/world/damagesource/DamageSource;IZ)V a
	getAlternativeTarget (I)I t
	getAmbientSound ()Lnet/minecraft/sounds/SoundEvent; I
	getDeathSound ()Lnet/minecraft/sounds/SoundEvent; dp
	getHeadX (I)D u
	getHeadXRot (I)F b
	getHeadY (I)D v
	getHeadYRot (I)F a
	getHeadZ (I)D w
	getHurtSound (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEvent; e
	getInvulnerableTicks ()I eM
	getMobType ()Lnet/minecraft/world/entity/MobType; dB
	hurt (Lnet/minecraft/world/damagesource/DamageSource;F)Z a
	isPowered ()Z T_
	makeInvulnerable ()V m
	makeStuckInBlock (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/phys/Vec3;)V a
	performRangedAttack (IDDDZ)V a
	performRangedAttack (ILnet/minecraft/world/entity/LivingEntity;)V a
	performRangedAttack (Lnet/minecraft/world/entity/LivingEntity;F)V a
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	registerGoals ()V o
	rotlerp (FFF)F a
	setAlternativeTarget (II)V a
	setCustomName (Lnet/minecraft/network/chat/Component;)V a
	setInvulnerableTicks (I)V s
	startSeenByPlayer (Lnet/minecraft/server/level/ServerPlayer;)V b
	stopSeenByPlayer (Lnet/minecraft/server/level/ServerPlayer;)V c
net/minecraft/world/entity/boss/wither/WitherBoss$WitherDoNothingGoal baw$a
	canUse ()Z a
net/minecraft/world/entity/decoration/ArmorStand bay
	DATA_BODY_POSE d
	DATA_CLIENT_FLAGS b
	DATA_HEAD_POSE c
	DATA_LEFT_ARM_POSE e
	DATA_LEFT_LEG_POSE g
	DATA_RIGHT_ARM_POSE f
	DATA_RIGHT_LEG_POSE bo
	DEFAULT_BODY_POSE br
	DEFAULT_HEAD_POSE bq
	DEFAULT_LEFT_ARM_POSE bs
	DEFAULT_LEFT_LEG_POSE bu
	DEFAULT_RIGHT_ARM_POSE bt
	DEFAULT_RIGHT_LEG_POSE bv
	RIDABLE_MINECARTS bw
	armorItems by
	bodyPose bC
	disabledSlots bA
	handItems bx
	headPose bB
	invisible bz
	lastHit bp
	leftArmPose bD
	leftLegPose bF
	rightArmPose bE
	rightLegPose bG
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	attackable ()Z eh
	brokenByAnything (Lnet/minecraft/world/damagesource/DamageSource;)V g
	brokenByPlayer (Lnet/minecraft/world/damagesource/DamageSource;)V f
	canTakeItem (Lnet/minecraft/world/item/ItemStack;)Z e
	causeDamage (Lnet/minecraft/world/damagesource/DamageSource;F)V f
	defineSynchedData ()V e
	doPush (Lnet/minecraft/world/entity/Entity;)V C
	getArmorSlots ()Ljava/lang/Iterable; bk
	getBodyPose ()Lnet/minecraft/core/Rotations; t
	getClickedSlot (Lnet/minecraft/world/phys/Vec3;)Lnet/minecraft/world/entity/EquipmentSlot; g
	getDeathSound ()Lnet/minecraft/sounds/SoundEvent; dp
	getDimensions (Lnet/minecraft/world/entity/Pose;)Lnet/minecraft/world/entity/EntityDimensions; a
	getFallDamageSound (I)Lnet/minecraft/sounds/SoundEvent; o
	getHandSlots ()Ljava/lang/Iterable; bj
	getHeadPose ()Lnet/minecraft/core/Rotations; r
	getHurtSound (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEvent; e
	getItemBySlot (Lnet/minecraft/world/entity/EquipmentSlot;)Lnet/minecraft/world/item/ItemStack; b
	getLeftArmPose ()Lnet/minecraft/core/Rotations; u
	getLeftLegPose ()Lnet/minecraft/core/Rotations; x
	getMainArm ()Lnet/minecraft/world/entity/HumanoidArm; dU
	getMyRidingOffset ()D aX
	getPistonPushReaction ()Lnet/minecraft/world/level/material/PushReaction; z_
	getRightArmPose ()Lnet/minecraft/core/Rotations; v
	getRightLegPose ()Lnet/minecraft/core/Rotations; z
	getStandingEyeHeight (Lnet/minecraft/world/entity/Pose;Lnet/minecraft/world/entity/EntityDimensions;)F b
	handleEntityEvent (B)V a
	hasPhysics ()Z A
	hurt (Lnet/minecraft/world/damagesource/DamageSource;F)Z a
	ignoreExplosion ()Z ch
	interactAt (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/phys/Vec3;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResult; a
	isAffectedByPotions ()Z eg
	isBaby ()Z x_
	isDisabled (Lnet/minecraft/world/entity/EquipmentSlot;)Z d
	isEffectiveAi ()Z dR
	isMarker ()Z q
	isNoBasePlate ()Z p
	isPickable ()Z aQ
	isPushable ()Z aR
	isShowArms ()Z o
	isSmall ()Z m
	kill ()V X
	onSyncedDataUpdated (Lnet/minecraft/network/syncher/EntityDataAccessor;)V a
	playBrokenSound ()V F
	pushEntities ()V dP
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	readPose (Lnet/minecraft/nbt/CompoundTag;)V g
	refreshDimensions ()V y_
	setBit (BIZ)B a
	setBodyPose (Lnet/minecraft/core/Rotations;)V b
	setHeadPose (Lnet/minecraft/core/Rotations;)V a
	setInvisible (Z)V j
	setItemSlot (Lnet/minecraft/world/entity/EquipmentSlot;Lnet/minecraft/world/item/ItemStack;)V a
	setLeftArmPose (Lnet/minecraft/core/Rotations;)V c
	setLeftLegPose (Lnet/minecraft/core/Rotations;)V e
	setMarker (Z)V r
	setNoBasePlate (Z)V q
	setRightArmPose (Lnet/minecraft/core/Rotations;)V d
	setRightLegPose (Lnet/minecraft/core/Rotations;)V f
	setShowArms (Z)V p
	setSlot (ILnet/minecraft/world/item/ItemStack;)Z a_
	setSmall (Z)V a
	setYBodyRot (F)V l
	setYHeadRot (F)V k
	shouldRenderAtSqrDistance (D)Z a
	showBreakingParticles ()V D
	skipAttackInteraction (Lnet/minecraft/world/entity/Entity;)Z t
	swapItem (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/entity/EquipmentSlot;Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/InteractionHand;)Z a
	thunderHit (Lnet/minecraft/world/entity/LightningBolt;)V a
	tick ()V j
	tickHeadTurn (FF)F f
	travel (Lnet/minecraft/world/phys/Vec3;)V f
	updateInvisibilityStatus ()V C
	writePose ()Lnet/minecraft/nbt/CompoundTag; B
net/minecraft/world/entity/decoration/HangingEntity baz
	HANGING_ENTITY b
	checkInterval e
	direction d
	pos c
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	defineSynchedData ()V e
	dropItem (Lnet/minecraft/world/entity/Entity;)V a
	getDirection ()Lnet/minecraft/core/Direction; bY
	getHeight ()I k
	getPos ()Lnet/minecraft/core/BlockPos; n
	getWidth ()I i
	hurt (Lnet/minecraft/world/damagesource/DamageSource;F)Z a
	isPickable ()Z aQ
	mirror (Lnet/minecraft/world/level/block/Mirror;)F a
	move (Lnet/minecraft/world/entity/MoverType;Lnet/minecraft/world/phys/Vec3;)V a
	offs (I)D a
	playPlacementSound ()V m
	push (DDD)V h
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	recalculateBoundingBox ()V g
	refreshDimensions ()V y_
	repositionEntityAfterLoad ()Z aS
	rotate (Lnet/minecraft/world/level/block/Rotation;)F a
	setDirection (Lnet/minecraft/core/Direction;)V a
	setPos (DDD)V d
	skipAttackInteraction (Lnet/minecraft/world/entity/Entity;)Z t
	spawnAtLocation (Lnet/minecraft/world/item/ItemStack;F)Lnet/minecraft/world/entity/item/ItemEntity; a
	survives ()Z h
	thunderHit (Lnet/minecraft/world/entity/LightningBolt;)V a
	tick ()V j
net/minecraft/world/entity/decoration/ItemFrame bba
	DATA_ITEM f
	DATA_ROTATION g
	LOGGER e
	dropChance an
	fixed ao
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	defineSynchedData ()V e
	dropItem (Lnet/minecraft/world/entity/Entity;)V a
	dropItem (Lnet/minecraft/world/entity/Entity;Z)V b
	getAddEntityPacket ()Lnet/minecraft/network/protocol/Packet; O
	getAnalogOutput ()I q
	getEyeHeight (Lnet/minecraft/world/entity/Pose;Lnet/minecraft/world/entity/EntityDimensions;)F a
	getHeight ()I k
	getItem ()Lnet/minecraft/world/item/ItemStack; o
	getPickRadius ()F bc
	getRotation ()I p
	getWidth ()I i
	hurt (Lnet/minecraft/world/damagesource/DamageSource;F)Z a
	interact (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResult; a
	kill ()V X
	move (Lnet/minecraft/world/entity/MoverType;Lnet/minecraft/world/phys/Vec3;)V a
	onSyncedDataUpdated (Lnet/minecraft/network/syncher/EntityDataAccessor;)V a
	playPlacementSound ()V m
	push (DDD)V h
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	recalculateBoundingBox ()V g
	removeFramedMap (Lnet/minecraft/world/item/ItemStack;)V c
	setDirection (Lnet/minecraft/core/Direction;)V a
	setItem (Lnet/minecraft/world/item/ItemStack;)V b
	setItem (Lnet/minecraft/world/item/ItemStack;Z)V a
	setRotation (I)V a
	setRotation (IZ)V a
	setSlot (ILnet/minecraft/world/item/ItemStack;)Z a_
	shouldRenderAtSqrDistance (D)Z a
	survives ()Z h
net/minecraft/world/entity/decoration/LeashFenceKnotEntity bbb
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	dropItem (Lnet/minecraft/world/entity/Entity;)V a
	getAddEntityPacket ()Lnet/minecraft/network/protocol/Packet; O
	getEyeHeight (Lnet/minecraft/world/entity/Pose;Lnet/minecraft/world/entity/EntityDimensions;)F a
	getHeight ()I k
	getOrCreateKnot (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/entity/decoration/LeashFenceKnotEntity; a
	getWidth ()I i
	interact (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResult; a
	playPlacementSound ()V m
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	recalculateBoundingBox ()V g
	setDirection (Lnet/minecraft/core/Direction;)V a
	setPos (DDD)V d
	shouldRenderAtSqrDistance (D)Z a
	survives ()Z h
net/minecraft/world/entity/decoration/Motive bbc
	ALBAN c
	AZTEC b
	AZTEC2 d
	BOMB e
	BURNING_SKULL x
	BUST p
	COURBET i
	CREEBET l
	DONKEY_KONG z
	FIGHTERS u
	GRAHAM n
	KEBAB a
	MATCH o
	PIGSCENE w
	PLANT f
	POINTER v
	POOL h
	SEA j
	SKELETON y
	SKULL_AND_ROSES s
	STAGE q
	SUNSET k
	VOID r
	WANDERER m
	WASTELAND g
	WITHER t
	height B
	width A
	getHeight ()I b
	getWidth ()I a
	register (Ljava/lang/String;II)Lnet/minecraft/world/entity/decoration/Motive; a
net/minecraft/world/entity/decoration/Painting bbd
	motive e
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	dropItem (Lnet/minecraft/world/entity/Entity;)V a
	getAddEntityPacket ()Lnet/minecraft/network/protocol/Packet; O
	getHeight ()I k
	getWidth ()I i
	lerpTo (DDDFFIZ)V a
	moveTo (DDDFF)V b
	playPlacementSound ()V m
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
net/minecraft/world/entity/item/FallingBlockEntity bbf
	DATA_START_POS e
	blockData d
	blockState f
	cancelDrop g
	dropItem c
	fallDamageAmount ap
	fallDamageMax ao
	hurtEntities an
	time b
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	causeFallDamage (FF)Z b
	defineSynchedData ()V e
	displayFireAnimation ()Z bQ
	fillCrashReportCategory (Lnet/minecraft/CrashReportCategory;)V a
	getAddEntityPacket ()Lnet/minecraft/network/protocol/Packet; O
	getBlockState ()Lnet/minecraft/world/level/block/state/BlockState; i
	getLevel ()Lnet/minecraft/world/level/Level; h
	getStartPos ()Lnet/minecraft/core/BlockPos; g
	isAttackable ()Z bH
	isMovementNoisy ()Z ax
	isPickable ()Z aQ
	onlyOpCanSetNbt ()Z ci
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	setHurtsEntities (Z)V a
	setStartPos (Lnet/minecraft/core/BlockPos;)V a
	tick ()V j
net/minecraft/world/entity/item/ItemEntity bbg
	DATA_ITEM c
	age d
	bobOffs b
	health f
	owner an
	pickupDelay e
	thrower g
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	areMergable (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/item/ItemStack;)Z a
	burn (I)V h
	changeDimension (Lnet/minecraft/server/level/ServerLevel;)Lnet/minecraft/world/entity/Entity; a
	copy ()Lnet/minecraft/world/entity/item/ItemEntity; t
	defineSynchedData ()V e
	fireImmune ()Z az
	getAddEntityPacket ()Lnet/minecraft/network/protocol/Packet; O
	getAge ()I k
	getItem ()Lnet/minecraft/world/item/ItemStack; g
	getName ()Lnet/minecraft/network/chat/Component; P
	getOwner ()Ljava/util/UUID; h
	getSpin (F)F a
	getThrower ()Ljava/util/UUID; i
	hasPickUpDelay ()Z p
	hurt (Lnet/minecraft/world/damagesource/DamageSource;F)Z a
	isAttackable ()Z bH
	isMergable ()Z z
	isMovementNoisy ()Z ax
	makeFakeItem ()V s
	merge (Lnet/minecraft/world/entity/item/ItemEntity;Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/entity/item/ItemEntity;Lnet/minecraft/world/item/ItemStack;)V a
	merge (Lnet/minecraft/world/entity/item/ItemEntity;Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/item/ItemStack;)V a
	merge (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/item/ItemStack;I)Lnet/minecraft/world/item/ItemStack; a
	mergeWithNeighbours ()V x
	onSyncedDataUpdated (Lnet/minecraft/network/syncher/EntityDataAccessor;)V a
	playerTouch (Lnet/minecraft/world/entity/player/Player;)V a_
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	setDefaultPickUpDelay ()V m
	setExtendedLifetime ()V r
	setItem (Lnet/minecraft/world/item/ItemStack;)V b
	setNeverPickUp ()V o
	setNoPickUpDelay ()V n
	setOwner (Ljava/util/UUID;)V b
	setPickUpDelay (I)V a
	setThrower (Ljava/util/UUID;)V c
	setUnderLavaMovement ()V v
	setUnderwaterMovement ()V u
	setUnlimitedLifetime ()V q
	tick ()V j
	tryToMerge (Lnet/minecraft/world/entity/item/ItemEntity;)V a
net/minecraft/world/entity/item/PrimedTnt bbh
	DATA_FUSE_ID b
	life d
	owner c
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	defineSynchedData ()V e
	explode ()V k
	getAddEntityPacket ()Lnet/minecraft/network/protocol/Packet; O
	getEyeHeight (Lnet/minecraft/world/entity/Pose;Lnet/minecraft/world/entity/EntityDimensions;)F a
	getFuse ()I h
	getLife ()I i
	getOwner ()Lnet/minecraft/world/entity/LivingEntity; g
	isMovementNoisy ()Z ax
	isPickable ()Z aQ
	onSyncedDataUpdated (Lnet/minecraft/network/syncher/EntityDataAccessor;)V a
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	setFuse (I)V a
	tick ()V j
net/minecraft/world/entity/monster/AbstractIllager bbj
	getArmPose ()Lnet/minecraft/world/entity/monster/AbstractIllager$IllagerArmPose; m
	getMobType ()Lnet/minecraft/world/entity/MobType; dB
	registerGoals ()V o
net/minecraft/world/entity/monster/AbstractIllager$IllagerArmPose bbj$a
	$VALUES i
	ATTACKING b
	BOW_AND_ARROW d
	CELEBRATING g
	CROSSBOW_CHARGE f
	CROSSBOW_HOLD e
	CROSSED a
	NEUTRAL h
	SPELLCASTING c
net/minecraft/world/entity/monster/AbstractIllager$RaiderOpenDoorGoal bbj$b
	canUse ()Z a
net/minecraft/world/entity/monster/AbstractSkeleton bbk
	bowGoal b
	meleeGoal c
	aiStep ()V k
	canFireProjectileWeapon (Lnet/minecraft/world/item/ProjectileWeaponItem;)Z a
	createAttributes ()Lnet/minecraft/world/entity/ai/attributes/AttributeSupplier$Builder; m
	finalizeSpawn (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/world/DifficultyInstance;Lnet/minecraft/world/entity/MobSpawnType;Lnet/minecraft/world/entity/SpawnGroupData;Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/world/entity/SpawnGroupData; a
	getArrow (Lnet/minecraft/world/item/ItemStack;F)Lnet/minecraft/world/entity/projectile/AbstractArrow; b
	getMobType ()Lnet/minecraft/world/entity/MobType; dB
	getMyRidingOffset ()D aX
	getStandingEyeHeight (Lnet/minecraft/world/entity/Pose;Lnet/minecraft/world/entity/EntityDimensions;)F b
	getStepSound ()Lnet/minecraft/sounds/SoundEvent; eL
	performRangedAttack (Lnet/minecraft/world/entity/LivingEntity;F)V a
	playStepSound (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V a
	populateDefaultEquipmentSlots (Lnet/minecraft/world/DifficultyInstance;)V a
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	reassessWeaponGoal ()V eM
	registerGoals ()V o
	rideTick ()V aW
	setItemSlot (Lnet/minecraft/world/entity/EquipmentSlot;Lnet/minecraft/world/item/ItemStack;)V a
net/minecraft/world/entity/monster/Blaze bbl
	DATA_FLAGS_ID d
	allowedHeightOffset b
	nextHeightOffsetChangeTick c
	aiStep ()V k
	causeFallDamage (FF)Z b
	createAttributes ()Lnet/minecraft/world/entity/ai/attributes/AttributeSupplier$Builder; m
	customServerAiStep ()V N
	defineSynchedData ()V e
	getAmbientSound ()Lnet/minecraft/sounds/SoundEvent; I
	getBrightness ()F aO
	getDeathSound ()Lnet/minecraft/sounds/SoundEvent; dp
	getHurtSound (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEvent; e
	isCharged ()Z eL
	isOnFire ()Z bm
	isSensitiveToWater ()Z dN
	registerGoals ()V o
	setCharged (Z)V t
net/minecraft/world/entity/monster/Blaze$BlazeAttackGoal bbl$a
	attackStep b
	attackTime c
	blaze a
	lastSeen d
	canUse ()Z a
	getFollowDistance ()D g
	start ()V c
	stop ()V d
	tick ()V e
net/minecraft/world/entity/monster/CaveSpider bbm
	createCaveSpider ()Lnet/minecraft/world/entity/ai/attributes/AttributeSupplier$Builder; m
	doHurtTarget (Lnet/minecraft/world/entity/Entity;)Z B
	finalizeSpawn (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/world/DifficultyInstance;Lnet/minecraft/world/entity/MobSpawnType;Lnet/minecraft/world/entity/SpawnGroupData;Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/world/entity/SpawnGroupData; a
	getStandingEyeHeight (Lnet/minecraft/world/entity/Pose;Lnet/minecraft/world/entity/EntityDimensions;)F b
net/minecraft/world/entity/monster/Creeper bbn
	DATA_IS_IGNITED d
	DATA_IS_POWERED c
	DATA_SWELL_DIR b
	droppedSkulls bz
	explosionRadius by
	maxSwell bx
	oldSwell bv
	swell bw
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	canDropMobsSkull ()Z eO
	causeFallDamage (FF)Z b
	createAttributes ()Lnet/minecraft/world/entity/ai/attributes/AttributeSupplier$Builder; m
	defineSynchedData ()V e
	doHurtTarget (Lnet/minecraft/world/entity/Entity;)Z B
	dropCustomDeathLoot (Lnet/minecraft/world/damagesource/DamageSource;IZ)V a
	explodeCreeper ()V eQ
	getDeathSound ()Lnet/minecraft/sounds/SoundEvent; dp
	getHurtSound (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEvent; e
	getMaxFallDistance ()I bL
	getSwellDir ()I eL
	getSwelling (F)F u
	ignite ()V eN
	increaseDroppedSkulls ()V eP
	isIgnited ()Z eM
	isPowered ()Z T_
	mobInteract (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResult; b
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	registerGoals ()V o
	setSwellDir (I)V a
	spawnLingeringCloud ()V eT
	thunderHit (Lnet/minecraft/world/entity/LightningBolt;)V a
	tick ()V j
net/minecraft/world/entity/monster/CrossbowAttackMob bbo
	getProjectileShotVector (Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/phys/Vec3;F)Lcom/mojang/math/Vector3f; a
	getTarget ()Lnet/minecraft/world/entity/LivingEntity; A
	onCrossbowAttackPerformed ()V V_
	performCrossbowAttack (Lnet/minecraft/world/entity/LivingEntity;F)V b
	setChargingCrossbow (Z)V b
	shootCrossbowProjectile (Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/entity/projectile/Projectile;FF)V a
	shootCrossbowProjectile (Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/entity/projectile/Projectile;F)V a
net/minecraft/world/entity/monster/Drowned bbp
	groundNavigation c
	searchingForLand d
	waterNavigation b
	addBehaviourGoals ()V m
	canReplaceCurrentItem (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/item/ItemStack;)Z a
	checkDrownedSpawnRules (Lnet/minecraft/world/entity/EntityType;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/world/entity/MobSpawnType;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)Z b
	checkSpawnObstruction (Lnet/minecraft/world/level/LevelReader;)Z a
	closeToNextPos ()Z eP
	convertsInWater ()Z eO
	finalizeSpawn (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/world/DifficultyInstance;Lnet/minecraft/world/entity/MobSpawnType;Lnet/minecraft/world/entity/SpawnGroupData;Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/world/entity/SpawnGroupData; a
	getAmbientSound ()Lnet/minecraft/sounds/SoundEvent; I
	getDeathSound ()Lnet/minecraft/sounds/SoundEvent; dp
	getHurtSound (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEvent; e
	getSkull ()Lnet/minecraft/world/item/ItemStack; eN
	getStepSound ()Lnet/minecraft/sounds/SoundEvent; eM
	getSwimSound ()Lnet/minecraft/sounds/SoundEvent; aq
	isDeepEnoughToSpawn (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;)Z a
	isPushedByFluid ()Z bU
	okTarget (Lnet/minecraft/world/entity/LivingEntity;)Z j
	performRangedAttack (Lnet/minecraft/world/entity/LivingEntity;F)V a
	populateDefaultEquipmentSlots (Lnet/minecraft/world/DifficultyInstance;)V a
	setSearchingForLand (Z)V t
	supportsBreakDoorGoal ()Z eL
	travel (Lnet/minecraft/world/phys/Vec3;)V f
	updateSwimming ()V aF
	wantsToSwim ()Z eX
net/minecraft/world/entity/monster/Drowned$DrownedAttackGoal bbp$a
	drowned b
	canContinueToUse ()Z b
	canUse ()Z a
net/minecraft/world/entity/monster/Drowned$DrownedGoToBeachGoal bbp$b
	drowned g
	canContinueToUse ()Z b
	canUse ()Z a
	isValidTarget (Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;)Z a
	start ()V c
	stop ()V d
net/minecraft/world/entity/monster/Drowned$DrownedGoToWaterGoal bbp$c
	level f
	mob a
	speedModifier e
	wantedX b
	wantedY c
	wantedZ d
	canContinueToUse ()Z b
	canUse ()Z a
	getWaterPos ()Lnet/minecraft/world/phys/Vec3; g
	start ()V c
net/minecraft/world/entity/monster/Drowned$DrownedMoveControl bbp$d
	drowned i
	tick ()V a
net/minecraft/world/entity/monster/Drowned$DrownedSwimUpGoal bbp$e
	drowned a
	seaLevel c
	speedModifier b
	stuck d
	canContinueToUse ()Z b
	canUse ()Z a
	start ()V c
	stop ()V d
	tick ()V e
net/minecraft/world/entity/monster/Drowned$DrownedTridentAttackGoal bbp$f
	drowned a
	canUse ()Z a
	start ()V c
	stop ()V d
net/minecraft/world/entity/monster/ElderGuardian bbq
	ELDER_SIZE_SCALE b
	createAttributes ()Lnet/minecraft/world/entity/ai/attributes/AttributeSupplier$Builder; m
	customServerAiStep ()V N
	getAmbientSound ()Lnet/minecraft/sounds/SoundEvent; I
	getAttackDuration ()I eL
	getDeathSound ()Lnet/minecraft/sounds/SoundEvent; dp
	getFlopSound ()Lnet/minecraft/sounds/SoundEvent; eM
	getHurtSound (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEvent; e
net/minecraft/world/entity/monster/EnderMan bbr
	DATA_CARRY_STATE d
	DATA_CREEPY bv
	DATA_STARED_AT bw
	ENDERMITE_SELECTOR bx
	PERSISTENT_ANGER_TIME bA
	SPEED_MODIFIER_ATTACKING c
	SPEED_MODIFIER_ATTACKING_UUID b
	lastStareSound by
	persistentAngerTarget bC
	remainingPersistentAngerTime bB
	targetChangeTime bz
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	aiStep ()V k
	createAttributes ()Lnet/minecraft/world/entity/ai/attributes/AttributeSupplier$Builder; m
	customServerAiStep ()V N
	defineSynchedData ()V e
	dropCustomDeathLoot (Lnet/minecraft/world/damagesource/DamageSource;IZ)V a
	getAmbientSound ()Lnet/minecraft/sounds/SoundEvent; I
	getCarriedBlock ()Lnet/minecraft/world/level/block/state/BlockState; eN
	getDeathSound ()Lnet/minecraft/sounds/SoundEvent; dp
	getHurtSound (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEvent; e
	getPersistentAngerTarget ()Ljava/util/UUID; G_
	getRemainingPersistentAngerTime ()I F_
	getStandingEyeHeight (Lnet/minecraft/world/entity/Pose;Lnet/minecraft/world/entity/EntityDimensions;)F b
	hasBeenStaredAt ()Z eP
	hurt (Lnet/minecraft/world/damagesource/DamageSource;F)Z a
	isCreepy ()Z eO
	isLookingAtMe (Lnet/minecraft/world/entity/player/Player;)Z g
	isSensitiveToWater ()Z dN
	onSyncedDataUpdated (Lnet/minecraft/network/syncher/EntityDataAccessor;)V a
	playStareSound ()V eL
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	registerGoals ()V o
	requiresCustomPersistence ()Z K
	setBeingStaredAt ()V eQ
	setCarriedBlock (Lnet/minecraft/world/level/block/state/BlockState;)V c
	setPersistentAngerTarget (Ljava/util/UUID;)V a
	setRemainingPersistentAngerTime (I)V a_
	setTarget (Lnet/minecraft/world/entity/LivingEntity;)V i
	startPersistentAngerTimer ()V H_
	teleport ()Z eM
	teleport (DDD)Z o
	teleportTowards (Lnet/minecraft/world/entity/Entity;)Z a
net/minecraft/world/entity/monster/EnderMan$EndermanFreezeWhenLookedAt bbr$a
	enderman a
	target b
	canUse ()Z a
	start ()V c
	tick ()V e
net/minecraft/world/entity/monster/EnderMan$EndermanLeaveBlockGoal bbr$b
	enderman a
	canPlaceBlock (Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/BlockPos;)Z a
	canUse ()Z a
	tick ()V e
net/minecraft/world/entity/monster/EnderMan$EndermanLookForPlayerGoal bbr$c
	aggroTime k
	continueAggroTargetConditions n
	enderman i
	pendingTarget j
	startAggroTargetConditions m
	teleportTime l
	canContinueToUse ()Z b
	canUse ()Z a
	start ()V c
	stop ()V d
	tick ()V e
net/minecraft/world/entity/monster/EnderMan$EndermanTakeBlockGoal bbr$d
	enderman a
	canUse ()Z a
	tick ()V e
net/minecraft/world/entity/monster/Endermite bbs
	life b
	playerSpawned c
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	aiStep ()V k
	checkEndermiteSpawnRules (Lnet/minecraft/world/entity/EntityType;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/world/entity/MobSpawnType;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)Z b
	createAttributes ()Lnet/minecraft/world/entity/ai/attributes/AttributeSupplier$Builder; m
	getAmbientSound ()Lnet/minecraft/sounds/SoundEvent; I
	getDeathSound ()Lnet/minecraft/sounds/SoundEvent; dp
	getHurtSound (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEvent; e
	getMobType ()Lnet/minecraft/world/entity/MobType; dB
	getMyRidingOffset ()D aX
	getStandingEyeHeight (Lnet/minecraft/world/entity/Pose;Lnet/minecraft/world/entity/EntityDimensions;)F b
	isMovementNoisy ()Z ax
	isPlayerSpawned ()Z eL
	playStepSound (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V a
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	registerGoals ()V o
	setPlayerSpawned (Z)V t
	setYBodyRot (F)V l
	tick ()V j
net/minecraft/world/entity/monster/Enemy bbt
net/minecraft/world/entity/monster/Evoker bbu
	wololoTarget bv
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	applyRaidBuffs (IZ)V a
	createAttributes ()Lnet/minecraft/world/entity/ai/attributes/AttributeSupplier$Builder; eL
	customServerAiStep ()V N
	defineSynchedData ()V e
	getAmbientSound ()Lnet/minecraft/sounds/SoundEvent; I
	getCastingSoundEvent ()Lnet/minecraft/sounds/SoundEvent; eN
	getCelebrateSound ()Lnet/minecraft/sounds/SoundEvent; eM
	getDeathSound ()Lnet/minecraft/sounds/SoundEvent; dp
	getHurtSound (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEvent; e
	getWololoTarget ()Lnet/minecraft/world/entity/animal/Sheep; fh
	isAlliedTo (Lnet/minecraft/world/entity/Entity;)Z r
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	registerGoals ()V o
	setWololoTarget (Lnet/minecraft/world/entity/animal/Sheep;)V a
net/minecraft/world/entity/monster/Evoker$EvokerAttackSpellGoal bbu$a
	createSpellEntity (DDDDFI)V a
	getCastingInterval ()I h
	getCastingTime ()I g
	getSpell ()Lnet/minecraft/world/entity/monster/SpellcasterIllager$IllagerSpell; l
	getSpellPrepareSound ()Lnet/minecraft/sounds/SoundEvent; k
	performSpellCasting ()V j
net/minecraft/world/entity/monster/Evoker$EvokerCastingSpellGoal bbu$b
	tick ()V e
net/minecraft/world/entity/monster/Evoker$EvokerSummonSpellGoal bbu$c
	vexCountTargeting e
	canUse ()Z a
	getCastingInterval ()I h
	getCastingTime ()I g
	getSpell ()Lnet/minecraft/world/entity/monster/SpellcasterIllager$IllagerSpell; l
	getSpellPrepareSound ()Lnet/minecraft/sounds/SoundEvent; k
	performSpellCasting ()V j
net/minecraft/world/entity/monster/Evoker$EvokerWololoSpellGoal bbu$d
	wololoTargeting e
	canContinueToUse ()Z b
	canUse ()Z a
	getCastWarmupTime ()I m
	getCastingInterval ()I h
	getCastingTime ()I g
	getSpell ()Lnet/minecraft/world/entity/monster/SpellcasterIllager$IllagerSpell; l
	getSpellPrepareSound ()Lnet/minecraft/sounds/SoundEvent; k
	performSpellCasting ()V j
	start ()V c
	stop ()V d
	tick ()V e
net/minecraft/world/entity/monster/Ghast bbv
	DATA_IS_CHARGING b
	explosionPower c
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	checkGhastSpawnRules (Lnet/minecraft/world/entity/EntityType;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/world/entity/MobSpawnType;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)Z b
	createAttributes ()Lnet/minecraft/world/entity/ai/attributes/AttributeSupplier$Builder; eK
	defineSynchedData ()V e
	getAmbientSound ()Lnet/minecraft/sounds/SoundEvent; I
	getDeathSound ()Lnet/minecraft/sounds/SoundEvent; dp
	getExplosionPower ()I eJ
	getHurtSound (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEvent; e
	getMaxSpawnClusterSize ()I er
	getSoundSource ()Lnet/minecraft/sounds/SoundSource; ct
	getSoundVolume ()F dF
	getStandingEyeHeight (Lnet/minecraft/world/entity/Pose;Lnet/minecraft/world/entity/EntityDimensions;)F b
	hurt (Lnet/minecraft/world/damagesource/DamageSource;F)Z a
	isCharging ()Z m
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	registerGoals ()V o
	setCharging (Z)V t
	shouldDespawnInPeaceful ()Z L
net/minecraft/world/entity/monster/Ghast$GhastLookGoal bbv$a
	ghast a
	canUse ()Z a
	tick ()V e
net/minecraft/world/entity/monster/Ghast$GhastMoveControl bbv$b
	floatDuration j
	ghast i
	canReach (Lnet/minecraft/world/phys/Vec3;I)Z a
	tick ()V a
net/minecraft/world/entity/monster/Ghast$GhastShootFireballGoal bbv$c
	chargeTime a
	ghast b
	canUse ()Z a
	start ()V c
	stop ()V d
	tick ()V e
net/minecraft/world/entity/monster/Ghast$RandomFloatAroundGoal bbv$d
	ghast a
	canContinueToUse ()Z b
	canUse ()Z a
	start ()V c
net/minecraft/world/entity/monster/Giant bbw
	createAttributes ()Lnet/minecraft/world/entity/ai/attributes/AttributeSupplier$Builder; m
	getStandingEyeHeight (Lnet/minecraft/world/entity/Pose;Lnet/minecraft/world/entity/EntityDimensions;)F b
	getWalkTargetValue (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/LevelReader;)F a
net/minecraft/world/entity/monster/Guardian bbx
	DATA_ID_ATTACK_TARGET d
	DATA_ID_MOVING b
	clientSideAttackTime bB
	clientSideCachedAttackTarget bA
	clientSideSpikesAnimation by
	clientSideSpikesAnimationO bz
	clientSideTailAnimation bv
	clientSideTailAnimationO bw
	clientSideTailAnimationSpeed bx
	clientSideTouchedGround bC
	randomStrollGoal c
	aiStep ()V k
	canBreatheUnderwater ()Z cL
	checkGuardianSpawnRules (Lnet/minecraft/world/entity/EntityType;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/world/entity/MobSpawnType;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)Z b
	checkSpawnObstruction (Lnet/minecraft/world/level/LevelReader;)Z a
	createAttributes ()Lnet/minecraft/world/entity/ai/attributes/AttributeSupplier$Builder; eN
	createNavigation (Lnet/minecraft/world/level/Level;)Lnet/minecraft/world/entity/ai/navigation/PathNavigation; b
	defineSynchedData ()V e
	getActiveAttackTarget ()Lnet/minecraft/world/entity/LivingEntity; eQ
	getAmbientSound ()Lnet/minecraft/sounds/SoundEvent; I
	getAmbientSoundInterval ()I D
	getAttackAnimationScale (F)F w
	getAttackDuration ()I eL
	getDeathSound ()Lnet/minecraft/sounds/SoundEvent; dp
	getFlopSound ()Lnet/minecraft/sounds/SoundEvent; eM
	getHurtSound (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEvent; e
	getMaxHeadXRot ()I eo
	getMobType ()Lnet/minecraft/world/entity/MobType; dB
	getSpikesAnimation (F)F v
	getStandingEyeHeight (Lnet/minecraft/world/entity/Pose;Lnet/minecraft/world/entity/EntityDimensions;)F b
	getTailAnimation (F)F u
	getWalkTargetValue (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/LevelReader;)F a
	hasActiveAttackTarget ()Z eP
	hurt (Lnet/minecraft/world/damagesource/DamageSource;F)Z a
	isMovementNoisy ()Z ax
	isMoving ()Z eO
	onSyncedDataUpdated (Lnet/minecraft/network/syncher/EntityDataAccessor;)V a
	registerGoals ()V o
	setActiveAttackTarget (I)V a
	setMoving (Z)V t
	travel (Lnet/minecraft/world/phys/Vec3;)V f
net/minecraft/world/entity/monster/Guardian$GuardianAttackGoal bbx$a
	attackTime b
	elder c
	guardian a
	canContinueToUse ()Z b
	canUse ()Z a
	start ()V c
	stop ()V d
	tick ()V e
net/minecraft/world/entity/monster/Guardian$GuardianAttackSelector bbx$b
	guardian a
	test (Lnet/minecraft/world/entity/LivingEntity;)Z a
net/minecraft/world/entity/monster/Guardian$GuardianMoveControl bbx$c
	guardian i
	tick ()V a
net/minecraft/world/entity/monster/Husk bby
	checkHuskSpawnRules (Lnet/minecraft/world/entity/EntityType;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/world/entity/MobSpawnType;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)Z b
	convertsInWater ()Z eO
	doHurtTarget (Lnet/minecraft/world/entity/Entity;)Z B
	doUnderWaterConversion ()V eQ
	getAmbientSound ()Lnet/minecraft/sounds/SoundEvent; I
	getDeathSound ()Lnet/minecraft/sounds/SoundEvent; dp
	getHurtSound (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEvent; e
	getSkull ()Lnet/minecraft/world/item/ItemStack; eN
	getStepSound ()Lnet/minecraft/sounds/SoundEvent; eM
	isSunSensitive ()Z U_
net/minecraft/world/entity/monster/Illusioner bbz
	clientSideIllusionOffsets bw
	clientSideIllusionTicks bv
	aiStep ()V k
	applyRaidBuffs (IZ)V a
	createAttributes ()Lnet/minecraft/world/entity/ai/attributes/AttributeSupplier$Builder; eL
	defineSynchedData ()V e
	finalizeSpawn (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/world/DifficultyInstance;Lnet/minecraft/world/entity/MobSpawnType;Lnet/minecraft/world/entity/SpawnGroupData;Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/world/entity/SpawnGroupData; a
	getAmbientSound ()Lnet/minecraft/sounds/SoundEvent; I
	getArmPose ()Lnet/minecraft/world/entity/monster/AbstractIllager$IllagerArmPose; m
	getBoundingBoxForCulling ()Lnet/minecraft/world/phys/AABB; cc
	getCastingSoundEvent ()Lnet/minecraft/sounds/SoundEvent; eN
	getCelebrateSound ()Lnet/minecraft/sounds/SoundEvent; eM
	getDeathSound ()Lnet/minecraft/sounds/SoundEvent; dp
	getHurtSound (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEvent; e
	getIllusionOffsets (F)[Lnet/minecraft/world/phys/Vec3; u
	isAlliedTo (Lnet/minecraft/world/entity/Entity;)Z r
	performRangedAttack (Lnet/minecraft/world/entity/LivingEntity;F)V a
	registerGoals ()V o
net/minecraft/world/entity/monster/Illusioner$IllusionerBlindnessSpellGoal bbz$a
	lastTargetId e
	canUse ()Z a
	getCastingInterval ()I h
	getCastingTime ()I g
	getSpell ()Lnet/minecraft/world/entity/monster/SpellcasterIllager$IllagerSpell; l
	getSpellPrepareSound ()Lnet/minecraft/sounds/SoundEvent; k
	performSpellCasting ()V j
	start ()V c
net/minecraft/world/entity/monster/Illusioner$IllusionerMirrorSpellGoal bbz$b
	canUse ()Z a
	getCastingInterval ()I h
	getCastingTime ()I g
	getSpell ()Lnet/minecraft/world/entity/monster/SpellcasterIllager$IllagerSpell; l
	getSpellPrepareSound ()Lnet/minecraft/sounds/SoundEvent; k
	performSpellCasting ()V j
net/minecraft/world/entity/monster/MagmaCube bca
	causeFallDamage (FF)Z b
	checkMagmaCubeSpawnRules (Lnet/minecraft/world/entity/EntityType;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/world/entity/MobSpawnType;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)Z b
	checkSpawnObstruction (Lnet/minecraft/world/level/LevelReader;)Z a
	createAttributes ()Lnet/minecraft/world/entity/ai/attributes/AttributeSupplier$Builder; m
	decreaseSquish ()V eL
	getAttackDamage ()F eN
	getBrightness ()F aO
	getDeathSound ()Lnet/minecraft/sounds/SoundEvent; dp
	getDefaultLootTable ()Lnet/minecraft/resources/ResourceLocation; J
	getHurtSound (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEvent; e
	getJumpDelay ()I eK
	getJumpSound ()Lnet/minecraft/sounds/SoundEvent; eP
	getParticleType ()Lnet/minecraft/core/particles/ParticleOptions; eJ
	getSquishSound ()Lnet/minecraft/sounds/SoundEvent; eO
	isDealsDamage ()Z eM
	isOnFire ()Z bm
	jumpFromGround ()V dJ
	jumpInLiquid (Lnet/minecraft/tags/Tag;)V c
	setSize (IZ)V a
net/minecraft/world/entity/monster/Monster bcb
	aiStep ()V k
	checkAnyLightMonsterSpawnRules (Lnet/minecraft/world/entity/EntityType;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/world/entity/MobSpawnType;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)Z d
	checkMonsterSpawnRules (Lnet/minecraft/world/entity/EntityType;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/world/entity/MobSpawnType;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)Z c
	createMonsterAttributes ()Lnet/minecraft/world/entity/ai/attributes/AttributeSupplier$Builder; eS
	getDeathSound ()Lnet/minecraft/sounds/SoundEvent; dp
	getFallDamageSound (I)Lnet/minecraft/sounds/SoundEvent; o
	getHurtSound (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEvent; e
	getProjectile (Lnet/minecraft/world/item/ItemStack;)Lnet/minecraft/world/item/ItemStack; f
	getSoundSource ()Lnet/minecraft/sounds/SoundSource; ct
	getSwimSound ()Lnet/minecraft/sounds/SoundEvent; aq
	getSwimSplashSound ()Lnet/minecraft/sounds/SoundEvent; ar
	getWalkTargetValue (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/LevelReader;)F a
	hurt (Lnet/minecraft/world/damagesource/DamageSource;F)Z a
	isDarkEnoughToSpawn (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)Z a
	isPreventingPlayerRest (Lnet/minecraft/world/entity/player/Player;)Z f
	shouldDespawnInPeaceful ()Z L
	shouldDropExperience ()Z cU
	shouldDropLoot ()Z cV
	updateNoActionTime ()V eR
net/minecraft/world/entity/monster/PatrollingMonster bcc
	patrolLeader c
	patrolTarget b
	patrolling d
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	canBeLeader ()Z eO
	canJoinPatrol ()Z eU
	checkPatrollingMonsterSpawnRules (Lnet/minecraft/world/entity/EntityType;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/world/entity/MobSpawnType;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)Z b
	finalizeSpawn (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/world/DifficultyInstance;Lnet/minecraft/world/entity/MobSpawnType;Lnet/minecraft/world/entity/SpawnGroupData;Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/world/entity/SpawnGroupData; a
	findPatrolTarget ()V eV
	getMyRidingOffset ()D aX
	getPatrolTarget ()Lnet/minecraft/core/BlockPos; eP
	hasPatrolTarget ()Z eQ
	isPatrolLeader ()Z eT
	isPatrolling ()Z eW
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	registerGoals ()V o
	removeWhenFarAway (D)Z h
	setPatrolLeader (Z)V t
	setPatrolTarget (Lnet/minecraft/core/BlockPos;)V g
	setPatrolling (Z)V u
net/minecraft/world/entity/monster/PatrollingMonster$LongDistancePatrolGoal bcc$a
	cooldownUntil d
	leaderSpeedModifier c
	mob a
	speedModifier b
	canUse ()Z a
	findPatrolCompanions ()Ljava/util/List; g
	moveRandomly ()Z h
	start ()V c
	stop ()V d
	tick ()V e
net/minecraft/world/entity/monster/Phantom bcd
	ID_SIZE b
	anchorPoint d
	attackPhase bv
	moveTargetPoint c
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	aiStep ()V k
	canAttackType (Lnet/minecraft/world/entity/EntityType;)Z a
	createBodyControl ()Lnet/minecraft/world/entity/ai/control/BodyRotationControl; r
	customServerAiStep ()V N
	defineSynchedData ()V e
	finalizeSpawn (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/world/DifficultyInstance;Lnet/minecraft/world/entity/MobSpawnType;Lnet/minecraft/world/entity/SpawnGroupData;Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/world/entity/SpawnGroupData; a
	getAmbientSound ()Lnet/minecraft/sounds/SoundEvent; I
	getDeathSound ()Lnet/minecraft/sounds/SoundEvent; dp
	getDimensions (Lnet/minecraft/world/entity/Pose;)Lnet/minecraft/world/entity/EntityDimensions; a
	getHurtSound (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEvent; e
	getMobType ()Lnet/minecraft/world/entity/MobType; dB
	getMovementTarget ()Lnet/minecraft/world/phys/Vec3; eJ
	getPhantomSize ()I m
	getSoundSource ()Lnet/minecraft/sounds/SoundSource; ct
	getSoundVolume ()F dF
	getStandingEyeHeight (Lnet/minecraft/world/entity/Pose;Lnet/minecraft/world/entity/EntityDimensions;)F b
	onSyncedDataUpdated (Lnet/minecraft/network/syncher/EntityDataAccessor;)V a
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	registerGoals ()V o
	setPhantomSize (I)V a
	shouldDespawnInPeaceful ()Z L
	shouldRenderAtSqrDistance (D)Z a
	tick ()V j
	updatePhantomSizeInfo ()V eK
net/minecraft/world/entity/monster/Phantom$AttackPhase bcd$a
	$VALUES c
	CIRCLE a
	SWOOP b
net/minecraft/world/entity/monster/Phantom$PhantomAttackPlayerTargetGoal bcd$b
	attackTargeting b
	nextScanTick c
	canContinueToUse ()Z b
	canUse ()Z a
net/minecraft/world/entity/monster/Phantom$PhantomAttackStrategyGoal bcd$c
	nextSweepTick b
	canUse ()Z a
	setAnchorAboveTarget ()V g
	start ()V c
	stop ()V d
	tick ()V e
net/minecraft/world/entity/monster/Phantom$PhantomBodyRotationControl bcd$d
	clientTick ()V a
net/minecraft/world/entity/monster/Phantom$PhantomCircleAroundAnchorGoal bcd$e
	angle c
	clockwise f
	distance d
	height e
	canUse ()Z a
	selectNext ()V h
	start ()V c
	tick ()V e
net/minecraft/world/entity/monster/Phantom$PhantomLookControl bcd$f
	tick ()V a
net/minecraft/world/entity/monster/Phantom$PhantomMoveControl bcd$g
	speed j
	tick ()V a
net/minecraft/world/entity/monster/Phantom$PhantomMoveTargetGoal bcd$h
	touchingTarget ()Z g
net/minecraft/world/entity/monster/Phantom$PhantomSweepAttackGoal bcd$i
	canContinueToUse ()Z b
	canUse ()Z a
	start ()V c
	stop ()V d
	tick ()V e
net/minecraft/world/entity/monster/Pillager bce
	IS_CHARGING_CROSSBOW b
	inventory bv
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	applyRaidBuffs (IZ)V a
	canFireProjectileWeapon (Lnet/minecraft/world/item/ProjectileWeaponItem;)Z a
	createAttributes ()Lnet/minecraft/world/entity/ai/attributes/AttributeSupplier$Builder; eL
	defineSynchedData ()V e
	finalizeSpawn (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/world/DifficultyInstance;Lnet/minecraft/world/entity/MobSpawnType;Lnet/minecraft/world/entity/SpawnGroupData;Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/world/entity/SpawnGroupData; a
	getAmbientSound ()Lnet/minecraft/sounds/SoundEvent; I
	getArmPose ()Lnet/minecraft/world/entity/monster/AbstractIllager$IllagerArmPose; m
	getCelebrateSound ()Lnet/minecraft/sounds/SoundEvent; eM
	getDeathSound ()Lnet/minecraft/sounds/SoundEvent; dp
	getHurtSound (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEvent; e
	getInventory ()Lnet/minecraft/world/SimpleContainer; eX
	getMaxSpawnClusterSize ()I er
	getWalkTargetValue (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/LevelReader;)F a
	isAlliedTo (Lnet/minecraft/world/entity/Entity;)Z r
	isChargingCrossbow ()Z eN
	onCrossbowAttackPerformed ()V V_
	performRangedAttack (Lnet/minecraft/world/entity/LivingEntity;F)V a
	pickUpItem (Lnet/minecraft/world/entity/item/ItemEntity;)V b
	populateDefaultEquipmentSlots (Lnet/minecraft/world/DifficultyInstance;)V a
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	registerGoals ()V o
	setChargingCrossbow (Z)V b
	setSlot (ILnet/minecraft/world/item/ItemStack;)Z a_
	shootCrossbowProjectile (Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/entity/projectile/Projectile;F)V a
	wantsItem (Lnet/minecraft/world/item/Item;)Z b
net/minecraft/world/entity/monster/RangedAttackMob bcf
	performRangedAttack (Lnet/minecraft/world/entity/LivingEntity;F)V a
net/minecraft/world/entity/monster/Ravager bcg
	NO_RAVAGER_AND_ALIVE b
	attackTick bv
	roarTick bx
	stunnedTick bw
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	aiStep ()V k
	applyRaidBuffs (IZ)V a
	blockedByShield (Lnet/minecraft/world/entity/LivingEntity;)V f
	canBeControlledByRider ()Z es
	canBeLeader ()Z eO
	canSee (Lnet/minecraft/world/entity/Entity;)Z D
	checkSpawnObstruction (Lnet/minecraft/world/level/LevelReader;)Z a
	createAttributes ()Lnet/minecraft/world/entity/ai/attributes/AttributeSupplier$Builder; m
	createNavigation (Lnet/minecraft/world/level/Level;)Lnet/minecraft/world/entity/ai/navigation/PathNavigation; b
	doHurtTarget (Lnet/minecraft/world/entity/Entity;)Z B
	getAmbientSound ()Lnet/minecraft/sounds/SoundEvent; I
	getAttackTick ()I eL
	getCelebrateSound ()Lnet/minecraft/sounds/SoundEvent; eM
	getControllingPassenger ()Lnet/minecraft/world/entity/Entity; cl
	getDeathSound ()Lnet/minecraft/sounds/SoundEvent; dp
	getHurtSound (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEvent; e
	getMaxHeadYRot ()I ep
	getPassengersRidingOffset ()D aY
	getRoarTick ()I eX
	getStunnedTick ()I eN
	handleEntityEvent (B)V a
	isImmobile ()Z dH
	playStepSound (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V a
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	registerGoals ()V o
	roar ()V eZ
	strongKnockback (Lnet/minecraft/world/entity/Entity;)V a
	stunEffect ()V eY
	updateControlFlags ()V H
net/minecraft/world/entity/monster/Ravager$RavagerMeleeAttackGoal bcg$a
	getAttackReachSqr (Lnet/minecraft/world/entity/LivingEntity;)D a
net/minecraft/world/entity/monster/Ravager$RavagerNavigation bcg$b
	createPathFinder (I)Lnet/minecraft/world/level/pathfinder/PathFinder; a
net/minecraft/world/entity/monster/Ravager$RavagerNodeEvaluator bcg$c
	evaluateBlockPathType (Lnet/minecraft/world/level/BlockGetter;ZZLnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/pathfinder/BlockPathTypes;)Lnet/minecraft/world/level/pathfinder/BlockPathTypes; a
net/minecraft/world/entity/monster/Shulker bch
	COVERED_ARMOR_MODIFIER bx
	COVERED_ARMOR_MODIFIER_UUID bw
	DATA_ATTACH_FACE_ID b
	DATA_ATTACH_POS_ID c
	DATA_COLOR_ID bv
	DATA_PEEK_ID d
	clientSideTeleportInterpolation bB
	currentPeekAmount bz
	currentPeekAmountO by
	oldAttachPosition bA
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	aiStep ()V k
	canAttachOnBlockFace (Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;)Z a
	createAttributes ()Lnet/minecraft/world/entity/ai/attributes/AttributeSupplier$Builder; m
	createBodyControl ()Lnet/minecraft/world/entity/ai/control/BodyRotationControl; r
	defineSynchedData ()V e
	findAttachableFace (Lnet/minecraft/core/BlockPos;)Lnet/minecraft/core/Direction; g
	getAmbientSound ()Lnet/minecraft/sounds/SoundEvent; I
	getAttachFace ()Lnet/minecraft/core/Direction; eM
	getAttachPosition ()Lnet/minecraft/core/BlockPos; eN
	getClientPeekAmount (F)F u
	getClientSideTeleportInterpolation ()I eP
	getCollideBox ()Lnet/minecraft/world/phys/AABB; ay
	getColor ()Lnet/minecraft/world/item/DyeColor; eT
	getDeathSound ()Lnet/minecraft/sounds/SoundEvent; dp
	getHurtSound (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEvent; e
	getMaxHeadXRot ()I eo
	getMaxHeadYRot ()I ep
	getOldAttachPosition ()Lnet/minecraft/core/BlockPos; eQ
	getPickRadius ()F bc
	getRawPeekAmount ()I eO
	getSoundSource ()Lnet/minecraft/sounds/SoundSource; ct
	getStandingEyeHeight (Lnet/minecraft/world/entity/Pose;Lnet/minecraft/world/entity/EntityDimensions;)F b
	hasValidInterpolationPositions ()Z eR
	hurt (Lnet/minecraft/world/damagesource/DamageSource;F)Z a
	isClosed ()Z eU
	isMovementNoisy ()Z ax
	lerpTo (DDDFFIZ)V a
	move (Lnet/minecraft/world/entity/MoverType;Lnet/minecraft/world/phys/Vec3;)V a
	onSyncedDataUpdated (Lnet/minecraft/network/syncher/EntityDataAccessor;)V a
	playAmbientSound ()V F
	push (Lnet/minecraft/world/entity/Entity;)V i
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	registerGoals ()V o
	setAttachPosition (Lnet/minecraft/core/BlockPos;)V h
	setColor (Lnet/minecraft/world/item/DyeColor;)V a
	setDefaultColor ()V eS
	setPos (DDD)V d
	setRawPeekAmount (I)V a
	teleportSomewhere ()Z eL
	tick ()V j
net/minecraft/world/entity/monster/Shulker$ShulkerAttackGoal bch$a
	attackTime b
	canUse ()Z a
	start ()V c
	stop ()V d
	tick ()V e
net/minecraft/world/entity/monster/Shulker$ShulkerBodyRotationControl bch$b
	clientTick ()V a
net/minecraft/world/entity/monster/Shulker$ShulkerDefenseAttackGoal bch$c
	canUse ()Z a
	getTargetSearchArea (D)Lnet/minecraft/world/phys/AABB; a
net/minecraft/world/entity/monster/Shulker$ShulkerNearestAttackGoal bch$d
	canUse ()Z a
	getTargetSearchArea (D)Lnet/minecraft/world/phys/AABB; a
net/minecraft/world/entity/monster/Shulker$ShulkerPeekGoal bch$e
	peekTime b
	canContinueToUse ()Z b
	canUse ()Z a
	start ()V c
	stop ()V d
	tick ()V e
net/minecraft/world/entity/monster/Silverfish bci
	friendsGoal b
	checkSliverfishSpawnRules (Lnet/minecraft/world/entity/EntityType;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/world/entity/MobSpawnType;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)Z b
	createAttributes ()Lnet/minecraft/world/entity/ai/attributes/AttributeSupplier$Builder; m
	getAmbientSound ()Lnet/minecraft/sounds/SoundEvent; I
	getDeathSound ()Lnet/minecraft/sounds/SoundEvent; dp
	getHurtSound (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEvent; e
	getMobType ()Lnet/minecraft/world/entity/MobType; dB
	getMyRidingOffset ()D aX
	getStandingEyeHeight (Lnet/minecraft/world/entity/Pose;Lnet/minecraft/world/entity/EntityDimensions;)F b
	getWalkTargetValue (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/LevelReader;)F a
	hurt (Lnet/minecraft/world/damagesource/DamageSource;F)Z a
	isMovementNoisy ()Z ax
	playStepSound (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V a
	registerGoals ()V o
	setYBodyRot (F)V l
	tick ()V j
net/minecraft/world/entity/monster/Silverfish$SilverfishMergeWithStoneGoal bci$a
	doMerge i
	selectedDirection h
	canContinueToUse ()Z b
	canUse ()Z a
	start ()V c
net/minecraft/world/entity/monster/Silverfish$SilverfishWakeUpFriendsGoal bci$b
	lookForFriends b
	silverfish a
	canUse ()Z a
	notifyHurt ()V g
	tick ()V e
net/minecraft/world/entity/monster/Skeleton bcj
	dropCustomDeathLoot (Lnet/minecraft/world/damagesource/DamageSource;IZ)V a
	getAmbientSound ()Lnet/minecraft/sounds/SoundEvent; I
	getDeathSound ()Lnet/minecraft/sounds/SoundEvent; dp
	getHurtSound (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEvent; e
	getStepSound ()Lnet/minecraft/sounds/SoundEvent; eL
net/minecraft/world/entity/monster/Slime bck
	ID_SIZE bv
	oSquish d
	squish c
	targetSquish b
	wasOnGround bw
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	checkSlimeSpawnRules (Lnet/minecraft/world/entity/EntityType;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/world/entity/MobSpawnType;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)Z c
	dealDamage (Lnet/minecraft/world/entity/LivingEntity;)V j
	decreaseSquish ()V eL
	defineSynchedData ()V e
	doPlayJumpSound ()Z eS
	finalizeSpawn (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/world/DifficultyInstance;Lnet/minecraft/world/entity/MobSpawnType;Lnet/minecraft/world/entity/SpawnGroupData;Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/world/entity/SpawnGroupData; a
	getAttackDamage ()F eN
	getDeathSound ()Lnet/minecraft/sounds/SoundEvent; dp
	getDefaultLootTable ()Lnet/minecraft/resources/ResourceLocation; J
	getDimensions (Lnet/minecraft/world/entity/Pose;)Lnet/minecraft/world/entity/EntityDimensions; a
	getHurtSound (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEvent; e
	getJumpDelay ()I eK
	getJumpSound ()Lnet/minecraft/sounds/SoundEvent; eP
	getMaxHeadXRot ()I eo
	getParticleType ()Lnet/minecraft/core/particles/ParticleOptions; eJ
	getSize ()I eQ
	getSoundPitch ()F m
	getSoundVolume ()F dF
	getSquishSound ()Lnet/minecraft/sounds/SoundEvent; eO
	getStandingEyeHeight (Lnet/minecraft/world/entity/Pose;Lnet/minecraft/world/entity/EntityDimensions;)F b
	getType ()Lnet/minecraft/world/entity/EntityType; U
	isDealsDamage ()Z eM
	isTiny ()Z eR
	jumpFromGround ()V dJ
	onSyncedDataUpdated (Lnet/minecraft/network/syncher/EntityDataAccessor;)V a
	playerTouch (Lnet/minecraft/world/entity/player/Player;)V a_
	push (Lnet/minecraft/world/entity/Entity;)V i
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	refreshDimensions ()V y_
	registerGoals ()V o
	remove ()V aa
	setSize (IZ)V a
	shouldDespawnInPeaceful ()Z L
	tick ()V j
net/minecraft/world/entity/monster/Slime$SlimeAttackGoal bck$a
	growTiredTimer b
	slime a
	canContinueToUse ()Z b
	canUse ()Z a
	start ()V c
	tick ()V e
net/minecraft/world/entity/monster/Slime$SlimeFloatGoal bck$b
	slime a
	canUse ()Z a
	tick ()V e
net/minecraft/world/entity/monster/Slime$SlimeKeepOnJumpingGoal bck$c
	slime a
	canUse ()Z a
	tick ()V e
net/minecraft/world/entity/monster/Slime$SlimeMoveControl bck$d
	isAggressive l
	jumpDelay j
	slime k
	yRot i
	setDirection (FZ)V a
	setWantedMovement (D)V a
	tick ()V a
net/minecraft/world/entity/monster/Slime$SlimeRandomDirectionGoal bck$e
	chosenDegrees b
	nextRandomizeTime c
	slime a
	canUse ()Z a
	tick ()V e
net/minecraft/world/entity/monster/SpellcasterIllager bcl
	DATA_SPELL_CASTING_ID bv
	currentSpell bw
	spellCastingTickCount b
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	customServerAiStep ()V N
	defineSynchedData ()V e
	getArmPose ()Lnet/minecraft/world/entity/monster/AbstractIllager$IllagerArmPose; m
	getCastingSoundEvent ()Lnet/minecraft/sounds/SoundEvent; eN
	getCurrentSpell ()Lnet/minecraft/world/entity/monster/SpellcasterIllager$IllagerSpell; eY
	getSpellCastingTime ()I eZ
	isCastingSpell ()Z eX
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	setIsCastingSpell (Lnet/minecraft/world/entity/monster/SpellcasterIllager$IllagerSpell;)V a
	tick ()V j
net/minecraft/world/entity/monster/SpellcasterIllager$IllagerSpell bcl$a
	$VALUES i
	BLINDNESS f
	DISAPPEAR e
	FANGS c
	NONE a
	SUMMON_VEX b
	WOLOLO d
	id g
	spellColor h
	byId (I)Lnet/minecraft/world/entity/monster/SpellcasterIllager$IllagerSpell; a
net/minecraft/world/entity/monster/SpellcasterIllager$SpellcasterCastingSpellGoal bcl$b
	canUse ()Z a
	start ()V c
	stop ()V d
	tick ()V e
net/minecraft/world/entity/monster/SpellcasterIllager$SpellcasterUseSpellGoal bcl$c
	attackWarmupDelay b
	nextAttackTickCount c
	canContinueToUse ()Z b
	canUse ()Z a
	getCastWarmupTime ()I m
	getCastingInterval ()I h
	getCastingTime ()I g
	getSpell ()Lnet/minecraft/world/entity/monster/SpellcasterIllager$IllagerSpell; l
	getSpellPrepareSound ()Lnet/minecraft/sounds/SoundEvent; k
	performSpellCasting ()V j
	start ()V c
	tick ()V e
net/minecraft/world/entity/monster/Spider bcm
	DATA_FLAGS_ID b
	canBeAffected (Lnet/minecraft/world/effect/MobEffectInstance;)Z d
	createAttributes ()Lnet/minecraft/world/entity/ai/attributes/AttributeSupplier$Builder; eL
	createNavigation (Lnet/minecraft/world/level/Level;)Lnet/minecraft/world/entity/ai/navigation/PathNavigation; b
	defineSynchedData ()V e
	finalizeSpawn (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/world/DifficultyInstance;Lnet/minecraft/world/entity/MobSpawnType;Lnet/minecraft/world/entity/SpawnGroupData;Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/world/entity/SpawnGroupData; a
	getAmbientSound ()Lnet/minecraft/sounds/SoundEvent; I
	getDeathSound ()Lnet/minecraft/sounds/SoundEvent; dp
	getHurtSound (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEvent; e
	getMobType ()Lnet/minecraft/world/entity/MobType; dB
	getPassengersRidingOffset ()D aY
	getStandingEyeHeight (Lnet/minecraft/world/entity/Pose;Lnet/minecraft/world/entity/EntityDimensions;)F b
	isClimbing ()Z eM
	makeStuckInBlock (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/phys/Vec3;)V a
	onClimbable ()Z c_
	playStepSound (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V a
	registerGoals ()V o
	setClimbing (Z)V t
	tick ()V j
net/minecraft/world/entity/monster/Spider$SpiderAttackGoal bcm$a
	canContinueToUse ()Z b
	canUse ()Z a
	getAttackReachSqr (Lnet/minecraft/world/entity/LivingEntity;)D a
net/minecraft/world/entity/monster/Spider$SpiderEffectsGroupData bcm$b
	effect a
	setRandomEffect (Ljava/util/Random;)V a
net/minecraft/world/entity/monster/Spider$SpiderTargetGoal bcm$c
	canUse ()Z a
net/minecraft/world/entity/monster/Stray bcn
	checkStraySpawnRules (Lnet/minecraft/world/entity/EntityType;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/world/entity/MobSpawnType;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)Z b
	getAmbientSound ()Lnet/minecraft/sounds/SoundEvent; I
	getArrow (Lnet/minecraft/world/item/ItemStack;F)Lnet/minecraft/world/entity/projectile/AbstractArrow; b
	getDeathSound ()Lnet/minecraft/sounds/SoundEvent; dp
	getHurtSound (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEvent; e
	getStepSound ()Lnet/minecraft/sounds/SoundEvent; eL
net/minecraft/world/entity/monster/Strider bco
	DATA_BOOST_TIME bx
	DATA_SADDLE_ID bz
	DATA_SUFFOCATING by
	FOOD_ITEMS bv
	TEMPT_ITEMS bw
	panicGoal bC
	steering bA
	temptGoal bB
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	boost ()Z P_
	canAddPassenger (Lnet/minecraft/world/entity/Entity;)Z q
	canBeControlledByRider ()Z es
	canStandOnFluid (Lnet/minecraft/world/level/material/Fluid;)Z a
	checkFallDamage (DZLnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/BlockPos;)V a
	checkSpawnObstruction (Lnet/minecraft/world/level/LevelReader;)Z a
	checkStriderSpawnRules (Lnet/minecraft/world/entity/EntityType;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/world/entity/MobSpawnType;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)Z c
	createAttributes ()Lnet/minecraft/world/entity/ai/attributes/AttributeSupplier$Builder; eN
	createNavigation (Lnet/minecraft/world/level/Level;)Lnet/minecraft/world/entity/ai/navigation/PathNavigation; b
	defineSynchedData ()V e
	dropEquipment ()V dm
	equipSaddle (Lnet/minecraft/sounds/SoundSource;)V a
	finalizeSpawn (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/world/DifficultyInstance;Lnet/minecraft/world/entity/MobSpawnType;Lnet/minecraft/world/entity/SpawnGroupData;Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/world/entity/SpawnGroupData; a
	floatStrider ()V eV
	getAmbientSound ()Lnet/minecraft/sounds/SoundEvent; I
	getBreedOffspring (Lnet/minecraft/world/entity/AgableMob;)Lnet/minecraft/world/entity/AgableMob; a
	getBreedOffspring (Lnet/minecraft/world/entity/AgableMob;)Lnet/minecraft/world/entity/monster/Strider; b
	getCollideAgainstBox (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/world/phys/AABB; j
	getControllingPassenger ()Lnet/minecraft/world/entity/Entity; cl
	getDeathSound ()Lnet/minecraft/sounds/SoundEvent; dp
	getDismountLocationForPassenger (Lnet/minecraft/world/entity/LivingEntity;)Lnet/minecraft/world/phys/Vec3; c
	getHurtSound (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEvent; e
	getLeashOffset ()Lnet/minecraft/world/phys/Vec3; ce
	getMoveSpeed ()F eM
	getPassengersRidingOffset ()D aY
	getSteeringSpeed ()F O_
	getWalkTargetValue (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/LevelReader;)F a
	isBeingTempted ()Z eP
	isFood (Lnet/minecraft/world/item/ItemStack;)Z k
	isOnFire ()Z bm
	isPanicking ()Z eO
	isPushable ()Z aR
	isSaddleable ()Z M_
	isSaddled ()Z N_
	isSensitiveToWater ()Z dN
	isSuffocating ()Z eL
	mobInteract (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResult; b
	nextStep ()F ao
	onSyncedDataUpdated (Lnet/minecraft/network/syncher/EntityDataAccessor;)V a
	playStepSound (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V a
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	registerGoals ()V o
	setSuffocating (Z)V t
	shouldPassengersInheritMalus ()Z q
	tick ()V j
	travel (Lnet/minecraft/world/phys/Vec3;)V f
	travelWithInput (Lnet/minecraft/world/phys/Vec3;)V a_
net/minecraft/world/entity/monster/Strider$StriderGroupData bco$a
	rider a
net/minecraft/world/entity/monster/Strider$StriderGroupData$Rider bco$a$a
	$VALUES d
	BABY_RIDER b
	NO_RIDER a
	PIGLIN_RIDER c
net/minecraft/world/entity/monster/Strider$StriderPathNavigation bco$b
	createPathFinder (I)Lnet/minecraft/world/level/pathfinder/PathFinder; a
	hasValidPathType (Lnet/minecraft/world/level/pathfinder/BlockPathTypes;)Z a
	isStableDestination (Lnet/minecraft/core/BlockPos;)Z a
net/minecraft/world/entity/monster/Vex bcp
	DATA_FLAGS_ID b
	boundOrigin d
	hasLimitedLife bv
	limitedLifeTicks bw
	owner c
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	createAttributes ()Lnet/minecraft/world/entity/ai/attributes/AttributeSupplier$Builder; m
	defineSynchedData ()V e
	finalizeSpawn (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/world/DifficultyInstance;Lnet/minecraft/world/entity/MobSpawnType;Lnet/minecraft/world/entity/SpawnGroupData;Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/world/entity/SpawnGroupData; a
	getAmbientSound ()Lnet/minecraft/sounds/SoundEvent; I
	getBoundOrigin ()Lnet/minecraft/core/BlockPos; eM
	getBrightness ()F aO
	getDeathSound ()Lnet/minecraft/sounds/SoundEvent; dp
	getHurtSound (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEvent; e
	getOwner ()Lnet/minecraft/world/entity/Mob; eL
	getVexFlag (I)Z b
	isCharging ()Z eN
	move (Lnet/minecraft/world/entity/MoverType;Lnet/minecraft/world/phys/Vec3;)V a
	populateDefaultEquipmentSlots (Lnet/minecraft/world/DifficultyInstance;)V a
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	registerGoals ()V o
	setBoundOrigin (Lnet/minecraft/core/BlockPos;)V g
	setIsCharging (Z)V t
	setLimitedLife (I)V a
	setOwner (Lnet/minecraft/world/entity/Mob;)V a
	setVexFlag (IZ)V a
	tick ()V j
net/minecraft/world/entity/monster/Vex$VexChargeAttackGoal bcp$a
	canContinueToUse ()Z b
	canUse ()Z a
	start ()V c
	stop ()V d
	tick ()V e
net/minecraft/world/entity/monster/Vex$VexCopyOwnerTargetGoal bcp$b
	copyOwnerTargeting b
	canUse ()Z a
	start ()V c
net/minecraft/world/entity/monster/Vex$VexMoveControl bcp$c
	tick ()V a
net/minecraft/world/entity/monster/Vex$VexRandomMoveGoal bcp$d
	canContinueToUse ()Z b
	canUse ()Z a
	tick ()V e
net/minecraft/world/entity/monster/Vindicator bcq
	DOOR_BREAKING_PREDICATE b
	isJohnny bv
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	applyRaidBuffs (IZ)V a
	createAttributes ()Lnet/minecraft/world/entity/ai/attributes/AttributeSupplier$Builder; eL
	customServerAiStep ()V N
	finalizeSpawn (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/world/DifficultyInstance;Lnet/minecraft/world/entity/MobSpawnType;Lnet/minecraft/world/entity/SpawnGroupData;Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/world/entity/SpawnGroupData; a
	getAmbientSound ()Lnet/minecraft/sounds/SoundEvent; I
	getArmPose ()Lnet/minecraft/world/entity/monster/AbstractIllager$IllagerArmPose; m
	getCelebrateSound ()Lnet/minecraft/sounds/SoundEvent; eM
	getDeathSound ()Lnet/minecraft/sounds/SoundEvent; dp
	getHurtSound (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEvent; e
	isAlliedTo (Lnet/minecraft/world/entity/Entity;)Z r
	populateDefaultEquipmentSlots (Lnet/minecraft/world/DifficultyInstance;)V a
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	registerGoals ()V o
	setCustomName (Lnet/minecraft/network/chat/Component;)V a
net/minecraft/world/entity/monster/Vindicator$VindicatorBreakDoorGoal bcq$a
	canContinueToUse ()Z b
	canUse ()Z a
	start ()V c
net/minecraft/world/entity/monster/Vindicator$VindicatorJohnnyAttackGoal bcq$b
	canUse ()Z a
	start ()V c
net/minecraft/world/entity/monster/Vindicator$VindicatorMeleeAttackGoal bcq$c
	getAttackReachSqr (Lnet/minecraft/world/entity/LivingEntity;)D a
net/minecraft/world/entity/monster/Witch bcr
	DATA_USING_ITEM bw
	SPEED_MODIFIER_DRINKING bv
	SPEED_MODIFIER_DRINKING_UUID b
	attackPlayersGoal bz
	healRaidersGoal by
	usingTime bx
	aiStep ()V k
	applyRaidBuffs (IZ)V a
	canBeLeader ()Z eO
	createAttributes ()Lnet/minecraft/world/entity/ai/attributes/AttributeSupplier$Builder; eL
	defineSynchedData ()V e
	getAmbientSound ()Lnet/minecraft/sounds/SoundEvent; I
	getCelebrateSound ()Lnet/minecraft/sounds/SoundEvent; eM
	getDamageAfterMagicAbsorb (Lnet/minecraft/world/damagesource/DamageSource;F)F d
	getDeathSound ()Lnet/minecraft/sounds/SoundEvent; dp
	getHurtSound (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEvent; e
	getStandingEyeHeight (Lnet/minecraft/world/entity/Pose;Lnet/minecraft/world/entity/EntityDimensions;)F b
	handleEntityEvent (B)V a
	isDrinkingPotion ()Z m
	performRangedAttack (Lnet/minecraft/world/entity/LivingEntity;F)V a
	registerGoals ()V o
	setUsingItem (Z)V v
net/minecraft/world/entity/monster/WitherSkeleton bcs
	canBeAffected (Lnet/minecraft/world/effect/MobEffectInstance;)Z d
	doHurtTarget (Lnet/minecraft/world/entity/Entity;)Z B
	dropCustomDeathLoot (Lnet/minecraft/world/damagesource/DamageSource;IZ)V a
	finalizeSpawn (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/world/DifficultyInstance;Lnet/minecraft/world/entity/MobSpawnType;Lnet/minecraft/world/entity/SpawnGroupData;Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/world/entity/SpawnGroupData; a
	getAmbientSound ()Lnet/minecraft/sounds/SoundEvent; I
	getArrow (Lnet/minecraft/world/item/ItemStack;F)Lnet/minecraft/world/entity/projectile/AbstractArrow; b
	getDeathSound ()Lnet/minecraft/sounds/SoundEvent; dp
	getHurtSound (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEvent; e
	getStandingEyeHeight (Lnet/minecraft/world/entity/Pose;Lnet/minecraft/world/entity/EntityDimensions;)F b
	getStepSound ()Lnet/minecraft/sounds/SoundEvent; eL
	populateDefaultEquipmentEnchantments (Lnet/minecraft/world/DifficultyInstance;)V b
	populateDefaultEquipmentSlots (Lnet/minecraft/world/DifficultyInstance;)V a
	registerGoals ()V o
net/minecraft/world/entity/monster/Zoglin bct
	DATA_BABY_ID d
	MEMORY_TYPES c
	SENSOR_TYPES b
	attackAnimationRemainingTicks bv
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	aiStep ()V k
	blockedByShield (Lnet/minecraft/world/entity/LivingEntity;)V f
	brainProvider ()Lnet/minecraft/world/entity/ai/Brain$Provider; cJ
	createAttributes ()Lnet/minecraft/world/entity/ai/attributes/AttributeSupplier$Builder; m
	customServerAiStep ()V N
	defineSynchedData ()V e
	doHurtTarget (Lnet/minecraft/world/entity/Entity;)Z B
	findNearestValidAttackTarget ()Ljava/util/Optional; eP
	getAmbientSound ()Lnet/minecraft/sounds/SoundEvent; I
	getAttackAnimationRemainingTicks ()I eN
	getBrain ()Lnet/minecraft/world/entity/ai/Brain; cI
	getDeathSound ()Lnet/minecraft/sounds/SoundEvent; dp
	getHurtSound (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEvent; e
	getMobType ()Lnet/minecraft/world/entity/MobType; dB
	handleEntityEvent (B)V a
	hurt (Lnet/minecraft/world/damagesource/DamageSource;F)Z a
	initCoreActivity (Lnet/minecraft/world/entity/ai/Brain;)V a
	initFightActivity (Lnet/minecraft/world/entity/ai/Brain;)V c
	initIdleActivity (Lnet/minecraft/world/entity/ai/Brain;)V b
	isAdult ()Z eL
	isBaby ()Z x_
	isTargetable (Lnet/minecraft/world/entity/LivingEntity;)Z j
	makeBrain (Lcom/mojang/serialization/Dynamic;)Lnet/minecraft/world/entity/ai/Brain; a
	onSyncedDataUpdated (Lnet/minecraft/network/syncher/EntityDataAccessor;)V a
	playAngrySound ()V eO
	playStepSound (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V a
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	sendDebugPackets ()V M
	setAttackTarget (Lnet/minecraft/world/entity/LivingEntity;)V k
	setBaby (Z)V a
	updateActivity ()V eM
net/minecraft/world/entity/monster/Zombie bcu
	DATA_BABY_ID d
	DATA_DROWNED_CONVERSION_ID bw
	DATA_SPECIAL_TYPE_ID bv
	DOOR_BREAKING_PREDICATE bx
	SPEED_MODIFIER_BABY c
	SPEED_MODIFIER_BABY_UUID b
	breakDoorGoal by
	canBreakDoors bz
	conversionTime bB
	inWaterTime bA
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	addBehaviourGoals ()V m
	aiStep ()V k
	canBreakDoors ()Z eV
	canHoldItem (Lnet/minecraft/world/item/ItemStack;)Z h
	convertToZombieType (Lnet/minecraft/world/entity/EntityType;)V c
	convertsInWater ()Z eO
	createAttributes ()Lnet/minecraft/world/entity/ai/attributes/AttributeSupplier$Builder; eT
	defineSynchedData ()V e
	doHurtTarget (Lnet/minecraft/world/entity/Entity;)Z B
	doUnderWaterConversion ()V eQ
	dropCustomDeathLoot (Lnet/minecraft/world/damagesource/DamageSource;IZ)V a
	finalizeSpawn (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/world/DifficultyInstance;Lnet/minecraft/world/entity/MobSpawnType;Lnet/minecraft/world/entity/SpawnGroupData;Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/world/entity/SpawnGroupData; a
	getAmbientSound ()Lnet/minecraft/sounds/SoundEvent; I
	getDeathSound ()Lnet/minecraft/sounds/SoundEvent; dp
	getExperienceReward (Lnet/minecraft/world/entity/player/Player;)I d
	getHurtSound (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEvent; e
	getMobType ()Lnet/minecraft/world/entity/MobType; dB
	getMyRidingOffset ()D aX
	getSkull ()Lnet/minecraft/world/item/ItemStack; eN
	getSpawnAsBabyOdds (Ljava/util/Random;)Z a
	getStandingEyeHeight (Lnet/minecraft/world/entity/Pose;Lnet/minecraft/world/entity/EntityDimensions;)F b
	getStepSound ()Lnet/minecraft/sounds/SoundEvent; eM
	handleAttributes (F)V u
	hurt (Lnet/minecraft/world/damagesource/DamageSource;F)Z a
	isBaby ()Z x_
	isSunSensitive ()Z U_
	isUnderWaterConverting ()Z eU
	killed (Lnet/minecraft/world/entity/LivingEntity;)V a_
	onSyncedDataUpdated (Lnet/minecraft/network/syncher/EntityDataAccessor;)V a
	playStepSound (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V a
	populateDefaultEquipmentSlots (Lnet/minecraft/world/DifficultyInstance;)V a
	randomizeReinforcementsChance ()V eW
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	registerGoals ()V o
	setBaby (Z)V a
	setCanBreakDoors (Z)V u
	startUnderWaterConversion (I)V a
	supportsBreakDoorGoal ()Z eL
	tick ()V j
net/minecraft/world/entity/monster/Zombie$ZombieAttackTurtleEggGoal bcu$a
	acceptedDistance ()D h
	playBreakSound (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)V a
	playDestroyProgressSound (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;)V a
net/minecraft/world/entity/monster/Zombie$ZombieGroupData bcu$b
	canSpawnJockey b
	isBaby a
net/minecraft/world/entity/monster/ZombieVillager bcv
	DATA_CONVERTING_ID b
	DATA_VILLAGER_DATA c
	conversionStarter bv
	gossips bw
	tradeOffers bx
	villagerConversionTime d
	villagerXp by
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	convertsInWater ()Z eO
	defineSynchedData ()V e
	finalizeSpawn (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/world/DifficultyInstance;Lnet/minecraft/world/entity/MobSpawnType;Lnet/minecraft/world/entity/SpawnGroupData;Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/world/entity/SpawnGroupData; a
	finishConversion (Lnet/minecraft/server/level/ServerLevel;)V b
	getAmbientSound ()Lnet/minecraft/sounds/SoundEvent; I
	getConversionProgress ()I fa
	getDeathSound ()Lnet/minecraft/sounds/SoundEvent; dp
	getHurtSound (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEvent; e
	getSkull ()Lnet/minecraft/world/item/ItemStack; eN
	getStepSound ()Lnet/minecraft/sounds/SoundEvent; eM
	getVillagerData ()Lnet/minecraft/world/entity/npc/VillagerData; eY
	getVillagerXp ()I eZ
	getVoicePitch ()F dG
	handleEntityEvent (B)V a
	isConverting ()Z eX
	mobInteract (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResult; b
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	removeWhenFarAway (D)Z h
	setGossips (Lnet/minecraft/nbt/Tag;)V a
	setTradeOffers (Lnet/minecraft/nbt/CompoundTag;)V g
	setVillagerData (Lnet/minecraft/world/entity/npc/VillagerData;)V a
	setVillagerXp (I)V a
	startConverting (Ljava/util/UUID;I)V a
	tick ()V j
net/minecraft/world/entity/monster/ZombifiedPiglin bcw
	ALERT_INTERVAL bz
	FIRST_ANGER_SOUND_DELAY d
	PERSISTENT_ANGER_TIME bw
	SPEED_MODIFIER_ATTACKING c
	SPEED_MODIFIER_ATTACKING_UUID b
	persistentAngerTarget by
	playFirstAngerSoundIn bv
	remainingPersistentAngerTime bx
	ticksUntilNextAlert bA
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	addBehaviourGoals ()V m
	alertOthers ()V fa
	checkSpawnObstruction (Lnet/minecraft/world/level/LevelReader;)Z a
	checkZombifiedPiglinSpawnRules (Lnet/minecraft/world/entity/EntityType;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/world/entity/MobSpawnType;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)Z b
	convertsInWater ()Z eO
	createAttributes ()Lnet/minecraft/world/entity/ai/attributes/AttributeSupplier$Builder; eX
	customServerAiStep ()V N
	getAmbientSound ()Lnet/minecraft/sounds/SoundEvent; I
	getDeathSound ()Lnet/minecraft/sounds/SoundEvent; dp
	getHurtSound (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEvent; e
	getMyRidingOffset ()D aX
	getPersistentAngerTarget ()Ljava/util/UUID; G_
	getRemainingPersistentAngerTime ()I F_
	getSkull ()Lnet/minecraft/world/item/ItemStack; eN
	hurt (Lnet/minecraft/world/damagesource/DamageSource;F)Z a
	isPreventingPlayerRest (Lnet/minecraft/world/entity/player/Player;)Z f
	maybeAlertOthers ()V eZ
	maybePlayFirstAngerSound ()V eY
	playAngerSound ()V fb
	populateDefaultEquipmentSlots (Lnet/minecraft/world/DifficultyInstance;)V a
	randomizeReinforcementsChance ()V eW
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	setPersistentAngerTarget (Ljava/util/UUID;)V a
	setRemainingPersistentAngerTime (I)V a_
	setTarget (Lnet/minecraft/world/entity/LivingEntity;)V i
	startPersistentAngerTimer ()V H_
net/minecraft/world/entity/monster/hoglin/Hoglin bcx
	DATA_IMMUNE_TO_ZOMBIFICATION bx
	MEMORY_TYPES bw
	SENSOR_TYPES bv
	attackAnimationRemainingTicks by
	cannotBeHunted bA
	timeInOverworld bz
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	ageBoundaryReached ()V m
	aiStep ()V k
	blockedByShield (Lnet/minecraft/world/entity/LivingEntity;)V f
	brainProvider ()Lnet/minecraft/world/entity/ai/Brain$Provider; cJ
	canBeHunted ()Z eP
	canBeLeashed (Lnet/minecraft/world/entity/player/Player;)Z a
	canFallInLove ()Z eQ
	checkHoglinSpawnRules (Lnet/minecraft/world/entity/EntityType;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/world/entity/MobSpawnType;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)Z c
	createAttributes ()Lnet/minecraft/world/entity/ai/attributes/AttributeSupplier$Builder; eL
	customServerAiStep ()V N
	defineSynchedData ()V e
	doHurtTarget (Lnet/minecraft/world/entity/Entity;)Z B
	finalizeSpawn (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/world/DifficultyInstance;Lnet/minecraft/world/entity/MobSpawnType;Lnet/minecraft/world/entity/SpawnGroupData;Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/world/entity/SpawnGroupData; a
	finishConversion (Lnet/minecraft/server/level/ServerLevel;)V b
	getAmbientSound ()Lnet/minecraft/sounds/SoundEvent; I
	getAttackAnimationRemainingTicks ()I eN
	getBrain ()Lnet/minecraft/world/entity/ai/Brain; cI
	getBreedOffspring (Lnet/minecraft/world/entity/AgableMob;)Lnet/minecraft/world/entity/AgableMob; a
	getDeathSound ()Lnet/minecraft/sounds/SoundEvent; dp
	getExperienceReward (Lnet/minecraft/world/entity/player/Player;)I d
	getHurtSound (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEvent; e
	getMovementSpeed ()F eV
	getPassengersRidingOffset ()D aY
	getSoundSource ()Lnet/minecraft/sounds/SoundSource; ct
	getSwimSound ()Lnet/minecraft/sounds/SoundEvent; aq
	getSwimSplashSound ()Lnet/minecraft/sounds/SoundEvent; ar
	getWalkTargetValue (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/LevelReader;)F a
	handleEntityEvent (B)V a
	hurt (Lnet/minecraft/world/damagesource/DamageSource;F)Z a
	isAdult ()Z eM
	isConverting ()Z eO
	isFood (Lnet/minecraft/world/item/ItemStack;)Z k
	isImmuneToZombification ()Z eW
	makeBrain (Lcom/mojang/serialization/Dynamic;)Lnet/minecraft/world/entity/ai/Brain; a
	mobInteract (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResult; b
	playSound (Lnet/minecraft/sounds/SoundEvent;)V a
	playStepSound (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V a
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	removeWhenFarAway (D)Z h
	sendDebugPackets ()V M
	setCannotBeHunted (Z)V u
	setImmuneToZombification (Z)V t
	shouldDropExperience ()Z cU
net/minecraft/world/entity/monster/hoglin/HoglinAi bcy
	ADULT_FOLLOW_RANGE b
	RETREAT_DURATION a
	broadcastAttackTarget (Lnet/minecraft/world/entity/monster/hoglin/Hoglin;Lnet/minecraft/world/entity/LivingEntity;)V h
	broadcastRetreat (Lnet/minecraft/world/entity/monster/hoglin/Hoglin;Lnet/minecraft/world/entity/LivingEntity;)V c
	createIdleMovementBehaviors ()Lnet/minecraft/world/entity/ai/behavior/RunOne; a
	findNearestValidAttackTarget (Lnet/minecraft/world/entity/monster/hoglin/Hoglin;)Ljava/util/Optional; d
	getSoundForActivity (Lnet/minecraft/world/entity/monster/hoglin/Hoglin;Lnet/minecraft/world/entity/schedule/Activity;)Lnet/minecraft/sounds/SoundEvent; a
	getSoundForCurrentActivity (Lnet/minecraft/world/entity/monster/hoglin/Hoglin;)Ljava/util/Optional; b
	getVisibleAdultHoglins (Lnet/minecraft/world/entity/monster/hoglin/Hoglin;)Ljava/util/List; g
	initCoreActivity (Lnet/minecraft/world/entity/ai/Brain;)V b
	initFightActivity (Lnet/minecraft/world/entity/ai/Brain;)V d
	initIdleActivity (Lnet/minecraft/world/entity/ai/Brain;)V c
	initRetreatActivity (Lnet/minecraft/world/entity/ai/Brain;)V e
	isBreeding (Lnet/minecraft/world/entity/monster/hoglin/Hoglin;)Z i
	isNearRepellent (Lnet/minecraft/world/entity/monster/hoglin/Hoglin;)Z h
	isPacified (Lnet/minecraft/world/entity/monster/hoglin/Hoglin;)Z c
	isPosNearNearestRepellent (Lnet/minecraft/world/entity/monster/hoglin/Hoglin;Lnet/minecraft/core/BlockPos;)Z a
	makeBrain (Lnet/minecraft/world/entity/ai/Brain;)Lnet/minecraft/world/entity/ai/Brain; a
	maybeRetaliate (Lnet/minecraft/world/entity/monster/hoglin/Hoglin;Lnet/minecraft/world/entity/LivingEntity;)V f
	onHitTarget (Lnet/minecraft/world/entity/monster/hoglin/Hoglin;Lnet/minecraft/world/entity/LivingEntity;)V a
	piglinsOutnumberHoglins (Lnet/minecraft/world/entity/monster/hoglin/Hoglin;)Z f
	retreatFromNearestTarget (Lnet/minecraft/world/entity/monster/hoglin/Hoglin;Lnet/minecraft/world/entity/LivingEntity;)V d
	setAttackTarget (Lnet/minecraft/world/entity/monster/hoglin/Hoglin;Lnet/minecraft/world/entity/LivingEntity;)V g
	setAttackTargetIfCloserThanCurrent (Lnet/minecraft/world/entity/monster/hoglin/Hoglin;Lnet/minecraft/world/entity/LivingEntity;)V i
	setAvoidTarget (Lnet/minecraft/world/entity/monster/hoglin/Hoglin;Lnet/minecraft/world/entity/LivingEntity;)V e
	updateActivity (Lnet/minecraft/world/entity/monster/hoglin/Hoglin;)V a
	wantsToStopFleeing (Lnet/minecraft/world/entity/monster/hoglin/Hoglin;)Z e
	wasHurtBy (Lnet/minecraft/world/entity/monster/hoglin/Hoglin;Lnet/minecraft/world/entity/LivingEntity;)V b
net/minecraft/world/entity/monster/hoglin/HoglinBase bcz
	getAttackAnimationRemainingTicks ()I eN
	hurtAndThrowTarget (Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/entity/LivingEntity;)Z a
	throwTarget (Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/entity/LivingEntity;)V b
net/minecraft/world/entity/monster/piglin/Piglin bdc
	DATA_BABY_ID d
	DATA_IMMUNE_TO_ZOMBIFICATION bv
	DATA_IS_CHARGING_CROSSBOW bw
	DATA_IS_DANCING bx
	MEMORY_TYPES c
	SENSOR_TYPES b
	SPEED_MODIFIER_BABY bz
	SPEED_MODIFIER_BABY_UUID by
	cannotHunt bC
	inventory bB
	timeInOverworld bA
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	addToInventory (Lnet/minecraft/world/item/ItemStack;)Lnet/minecraft/world/item/ItemStack; k
	brainProvider ()Lnet/minecraft/world/entity/ai/Brain$Provider; cJ
	canAddToInventory (Lnet/minecraft/world/item/ItemStack;)Z l
	canFireProjectileWeapon (Lnet/minecraft/world/item/ProjectileWeaponItem;)Z a
	canHunt ()Z eN
	canReplaceCurrentItem (Lnet/minecraft/world/item/ItemStack;)Z o
	canReplaceCurrentItem (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/item/ItemStack;)Z a
	checkPiglinSpawnRules (Lnet/minecraft/world/entity/EntityType;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/world/entity/MobSpawnType;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)Z b
	createAttributes ()Lnet/minecraft/world/entity/ai/attributes/AttributeSupplier$Builder; eL
	createSpawnWeapon ()Lnet/minecraft/world/item/ItemStack; eU
	customServerAiStep ()V N
	defineSynchedData ()V e
	dropCustomDeathLoot (Lnet/minecraft/world/damagesource/DamageSource;IZ)V a
	finalizeSpawn (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/world/DifficultyInstance;Lnet/minecraft/world/entity/MobSpawnType;Lnet/minecraft/world/entity/SpawnGroupData;Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/world/entity/SpawnGroupData; a
	finishConversion (Lnet/minecraft/server/level/ServerLevel;)V b
	getAmbientSound ()Lnet/minecraft/sounds/SoundEvent; I
	getArmPose ()Lnet/minecraft/world/entity/monster/piglin/Piglin$PiglinArmPose; eP
	getBrain ()Lnet/minecraft/world/entity/ai/Brain; cI
	getDeathSound ()Lnet/minecraft/sounds/SoundEvent; dp
	getExperienceReward (Lnet/minecraft/world/entity/player/Player;)I d
	getHurtSound (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEvent; e
	getInventory ()Lnet/minecraft/world/Container; W_
	getMyRidingOffset ()D aX
	getPassengersRidingOffset ()D aY
	getStandingEyeHeight (Lnet/minecraft/world/entity/Pose;Lnet/minecraft/world/entity/EntityDimensions;)F b
	getTarget ()Lnet/minecraft/world/entity/LivingEntity; A
	getTopPassenger (Lnet/minecraft/world/entity/Entity;I)Lnet/minecraft/world/entity/Entity; b
	holdInMainHand (Lnet/minecraft/world/item/ItemStack;)V m
	holdInOffHand (Lnet/minecraft/world/item/ItemStack;)V n
	hurt (Lnet/minecraft/world/damagesource/DamageSource;F)Z a
	isAdult ()Z eM
	isBaby ()Z x_
	isChargingCrossbow ()Z eV
	isConverting ()Z eO
	isDancing ()Z eQ
	isHoldingMeleeWeapon ()Z eW
	isImmuneToZombification ()Z eT
	makeBrain (Lcom/mojang/serialization/Dynamic;)Lnet/minecraft/world/entity/ai/Brain; a
	maybeWearArmor (Lnet/minecraft/world/entity/EquipmentSlot;Lnet/minecraft/world/item/ItemStack;)V d
	mobInteract (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResult; b
	onCrossbowAttackPerformed ()V V_
	onSyncedDataUpdated (Lnet/minecraft/network/syncher/EntityDataAccessor;)V a
	performRangedAttack (Lnet/minecraft/world/entity/LivingEntity;F)V a
	pickUpItem (Lnet/minecraft/world/entity/item/ItemEntity;)V b
	playSound (Lnet/minecraft/sounds/SoundEvent;)V a
	playStepSound (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V a
	populateDefaultEquipmentSlots (Lnet/minecraft/world/DifficultyInstance;)V a
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	removeWhenFarAway (D)Z h
	sendDebugPackets ()V M
	setBaby (Z)V a
	setCannotHunt (Z)V v
	setChargingCrossbow (Z)V b
	setDancing (Z)V u
	setImmuneToZombification (Z)V t
	shootCrossbowProjectile (Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/entity/projectile/Projectile;F)V a
	shouldDespawnInPeaceful ()Z L
	startRiding (Lnet/minecraft/world/entity/Entity;Z)Z a
	wantsToPickUp (Lnet/minecraft/world/item/ItemStack;)Z i
net/minecraft/world/entity/monster/piglin/Piglin$PiglinArmPose bdc$a
	$VALUES g
	ADMIRING_ITEM d
	ATTACKING_WITH_MELEE_WEAPON a
	CROSSBOW_CHARGE c
	CROSSBOW_HOLD b
	DANCING e
	DEFAULT f
net/minecraft/world/entity/monster/piglin/PiglinAi bdd
	AVOID_ZOMBIFIED_DURATION f
	BABY_AVOID_NEMESIS_DURATION g
	BARTERING_ITEM a
	FOOD_ITEMS h
	RETREAT_DURATION e
	RIDE_DURATION d
	RIDE_START_INTERVAL c
	TIME_BETWEEN_HUNTS b
	admireGoldItem (Lnet/minecraft/world/entity/LivingEntity;)V d
	angerNearbyPiglins (Lnet/minecraft/world/entity/player/Player;Z)V a
	avoidRepellent ()Lnet/minecraft/world/entity/ai/behavior/SetWalkTargetAwayFrom; c
	avoidZombified ()Lnet/minecraft/world/entity/ai/behavior/CopyMemoryWithExpiry; e
	babyAvoidNemesis ()Lnet/minecraft/world/entity/ai/behavior/CopyMemoryWithExpiry; d
	babySometimesRideBabyHoglin ()Lnet/minecraft/world/entity/ai/behavior/RunSometimes; f
	broadcastAngerTarget (Lnet/minecraft/world/entity/monster/piglin/Piglin;Lnet/minecraft/world/entity/LivingEntity;)V b
	broadcastDontKillAnyMoreHoglinsForAWhile (Lnet/minecraft/world/entity/monster/piglin/Piglin;)V g
	broadcastRetreat (Lnet/minecraft/world/entity/monster/piglin/Piglin;Lnet/minecraft/world/entity/LivingEntity;)V h
	broadcastUniversalAnger (Lnet/minecraft/world/entity/monster/piglin/Piglin;)V f
	canAdmire (Lnet/minecraft/world/entity/monster/piglin/Piglin;Lnet/minecraft/world/item/ItemStack;)Z b
	cancelAdmiring (Lnet/minecraft/world/entity/monster/piglin/Piglin;)V c
	createIdleLookBehaviors ()Lnet/minecraft/world/entity/ai/behavior/RunOne; a
	createIdleMovementBehaviors ()Lnet/minecraft/world/entity/ai/behavior/RunOne; b
	doesntSeeAnyPlayerHoldingLovedItem (Lnet/minecraft/world/entity/LivingEntity;)Z g
	dontKillAnyMoreHoglinsForAWhile (Lnet/minecraft/world/entity/monster/piglin/Piglin;)V j
	eat (Lnet/minecraft/world/entity/monster/piglin/Piglin;)V y
	findNearestValidAttackTarget (Lnet/minecraft/world/entity/monster/piglin/Piglin;)Ljava/util/Optional; o
	getAdultPiglins (Lnet/minecraft/world/entity/monster/piglin/Piglin;)Ljava/util/List; r
	getAngerTarget (Lnet/minecraft/world/entity/monster/piglin/Piglin;)Ljava/util/Optional; t
	getAvoidTarget (Lnet/minecraft/world/entity/monster/piglin/Piglin;)Ljava/util/Optional; h
	getBarterResponseItems (Lnet/minecraft/world/entity/monster/piglin/Piglin;)Ljava/util/List; m
	getNearestVisibleTargetablePlayer (Lnet/minecraft/world/entity/monster/piglin/Piglin;)Ljava/util/Optional; i
	getRandomNearbyPos (Lnet/minecraft/world/entity/monster/piglin/Piglin;)Lnet/minecraft/world/phys/Vec3; z
	getSoundForActivity (Lnet/minecraft/world/entity/monster/piglin/Piglin;Lnet/minecraft/world/entity/schedule/Activity;)Lnet/minecraft/sounds/SoundEvent; a
	getSoundForCurrentActivity (Lnet/minecraft/world/entity/monster/piglin/Piglin;)Ljava/util/Optional; d
	getVisibleAdultPiglins (Lnet/minecraft/world/entity/monster/piglin/Piglin;)Ljava/util/List; q
	hasAnyoneNearbyHuntedRecently (Lnet/minecraft/world/entity/monster/piglin/Piglin;)Z e
	hasCrossbow (Lnet/minecraft/world/entity/LivingEntity;)Z c
	hasEatenRecently (Lnet/minecraft/world/entity/monster/piglin/Piglin;)Z A
	hoglinsOutnumberPiglins (Lnet/minecraft/world/entity/monster/piglin/Piglin;)Z w
	holdInOffhand (Lnet/minecraft/world/entity/monster/piglin/Piglin;Lnet/minecraft/world/item/ItemStack;)V c
	initAdmireItemActivity (Lnet/minecraft/world/entity/ai/Brain;)V d
	initCelebrateActivity (Lnet/minecraft/world/entity/ai/Brain;)V c
	initCoreActivity (Lnet/minecraft/world/entity/ai/Brain;)V a
	initFightActivity (Lnet/minecraft/world/entity/monster/piglin/Piglin;Lnet/minecraft/world/entity/ai/Brain;)V b
	initIdleActivity (Lnet/minecraft/world/entity/ai/Brain;)V b
	initMemories (Lnet/minecraft/world/entity/monster/piglin/Piglin;)V a
	initRetreatActivity (Lnet/minecraft/world/entity/ai/Brain;)V e
	initRideHoglinActivity (Lnet/minecraft/world/entity/ai/Brain;)V f
	isAdmiringDisabled (Lnet/minecraft/world/entity/monster/piglin/Piglin;)Z D
	isAdmiringItem (Lnet/minecraft/world/entity/monster/piglin/Piglin;)Z B
	isAttackAllowed (Lnet/minecraft/world/entity/LivingEntity;)Z e
	isBabyRidingBaby (Lnet/minecraft/world/entity/monster/piglin/Piglin;)Z l
	isBarterCurrency (Lnet/minecraft/world/item/Item;)Z b
	isFood (Lnet/minecraft/world/item/Item;)Z c
	isHoldingItemInOffHand (Lnet/minecraft/world/entity/monster/piglin/Piglin;)Z E
	isIdle (Lnet/minecraft/world/entity/monster/piglin/Piglin;)Z k
	isLovedItem (Lnet/minecraft/world/item/Item;)Z a
	isNearAvoidTarget (Lnet/minecraft/world/entity/monster/piglin/Piglin;)Z p
	isNearRepellent (Lnet/minecraft/world/entity/monster/piglin/Piglin;)Z C
	isNearZombified (Lnet/minecraft/world/entity/monster/piglin/Piglin;)Z n
	isNearestValidAttackTarget (Lnet/minecraft/world/entity/monster/piglin/Piglin;Lnet/minecraft/world/entity/LivingEntity;)Z d
	isNotHoldingLovedItemInOffHand (Lnet/minecraft/world/entity/monster/piglin/Piglin;)Z F
	isPlayerHoldingLovedItem (Lnet/minecraft/world/entity/LivingEntity;)Z b
	isWearingGold (Lnet/minecraft/world/entity/LivingEntity;)Z a
	isZombified (Lnet/minecraft/world/entity/EntityType;)Z a
	makeBrain (Lnet/minecraft/world/entity/monster/piglin/Piglin;Lnet/minecraft/world/entity/ai/Brain;)Lnet/minecraft/world/entity/ai/Brain; a
	maybeRetaliate (Lnet/minecraft/world/entity/monster/piglin/Piglin;Lnet/minecraft/world/entity/LivingEntity;)V e
	mobInteract (Lnet/minecraft/world/entity/monster/piglin/Piglin;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResult; a
	pickUpItem (Lnet/minecraft/world/entity/monster/piglin/Piglin;Lnet/minecraft/world/entity/item/ItemEntity;)V a
	piglinsEqualOrOutnumberHoglins (Lnet/minecraft/world/entity/monster/piglin/Piglin;)Z v
	putInInventory (Lnet/minecraft/world/entity/monster/piglin/Piglin;Lnet/minecraft/world/item/ItemStack;)V d
	removeOneItemFromItemEntity (Lnet/minecraft/world/entity/item/ItemEntity;)Lnet/minecraft/world/item/ItemStack; a
	retreatFromNearestTarget (Lnet/minecraft/world/entity/monster/piglin/Piglin;Lnet/minecraft/world/entity/LivingEntity;)V i
	seesPlayerHoldingLovedItem (Lnet/minecraft/world/entity/LivingEntity;)Z f
	seesPlayerHoldingWantedItem (Lnet/minecraft/world/entity/monster/piglin/Piglin;)Z x
	setAngerTarget (Lnet/minecraft/world/entity/monster/piglin/Piglin;Lnet/minecraft/world/entity/LivingEntity;)V c
	setAngerTargetIfCloserThanCurrent (Lnet/minecraft/world/entity/monster/piglin/Piglin;Lnet/minecraft/world/entity/LivingEntity;)V g
	setAngerTargetToNearestTargetablePlayerIfFound (Lnet/minecraft/world/entity/monster/piglin/Piglin;Lnet/minecraft/world/entity/LivingEntity;)V f
	setAvoidTargetAndDontHuntForAWhile (Lnet/minecraft/world/entity/monster/piglin/Piglin;Lnet/minecraft/world/entity/LivingEntity;)V j
	stopHoldingOffHandItem (Lnet/minecraft/world/entity/monster/piglin/Piglin;Z)V a
	stopWalking (Lnet/minecraft/world/entity/monster/piglin/Piglin;)V s
	throwItems (Lnet/minecraft/world/entity/monster/piglin/Piglin;Ljava/util/List;)V a
	throwItemsTowardPlayer (Lnet/minecraft/world/entity/monster/piglin/Piglin;Lnet/minecraft/world/entity/player/Player;Ljava/util/List;)V a
	throwItemsTowardPos (Lnet/minecraft/world/entity/monster/piglin/Piglin;Ljava/util/List;Lnet/minecraft/world/phys/Vec3;)V a
	throwItemsTowardRandomPos (Lnet/minecraft/world/entity/monster/piglin/Piglin;Ljava/util/List;)V b
	updateActivity (Lnet/minecraft/world/entity/monster/piglin/Piglin;)V b
	wantsToDance (Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/entity/LivingEntity;)Z a
	wantsToPickup (Lnet/minecraft/world/entity/monster/piglin/Piglin;Lnet/minecraft/world/item/ItemStack;)Z a
	wantsToStopFleeing (Lnet/minecraft/world/entity/monster/piglin/Piglin;)Z u
	wantsToStopRiding (Lnet/minecraft/world/entity/monster/piglin/Piglin;Lnet/minecraft/world/entity/Entity;)Z a
	wasHurtBy (Lnet/minecraft/world/entity/monster/piglin/Piglin;Lnet/minecraft/world/entity/LivingEntity;)V a
	wasHurtRecently (Lnet/minecraft/world/entity/LivingEntity;)Z h
net/minecraft/world/entity/monster/piglin/RememberIfHoglinWasKilled bde
	isAttackTargetDeadHoglin (Lnet/minecraft/world/entity/monster/piglin/Piglin;)Z a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/monster/piglin/Piglin;J)V a
net/minecraft/world/entity/monster/piglin/StartAdmiringItemIfSeen bdf
	admireDuration b
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)Z a
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/monster/piglin/Piglin;)Z a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/monster/piglin/Piglin;J)V a
net/minecraft/world/entity/monster/piglin/StartHuntingHoglin bdg
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)Z a
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/monster/piglin/Piglin;)Z a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/monster/piglin/Piglin;J)V a
net/minecraft/world/entity/monster/piglin/StopAdmiringIfItemTooFarAway bdh
	maxDistanceToItem b
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)Z a
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/monster/piglin/Piglin;)Z a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/monster/piglin/Piglin;J)V a
net/minecraft/world/entity/monster/piglin/StopHoldingItemIfNoLongerAdmiring bdi
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)Z a
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/monster/piglin/Piglin;)Z a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/monster/piglin/Piglin;J)V a
net/minecraft/world/entity/npc/AbstractVillager bdk
	DATA_UNHAPPY_COUNTER bw
	inventory by
	offers bv
	tradingPlayer bx
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	addOffersFromItemListings (Lnet/minecraft/world/item/trading/MerchantOffers;[Lnet/minecraft/world/entity/npc/VillagerTrades$ItemListing;I)V a
	addParticlesAroundSelf (Lnet/minecraft/core/particles/ParticleOptions;)V a
	canBeLeashed (Lnet/minecraft/world/entity/player/Player;)Z a
	changeDimension (Lnet/minecraft/server/level/ServerLevel;)Lnet/minecraft/world/entity/Entity; a
	defineSynchedData ()V e
	die (Lnet/minecraft/world/damagesource/DamageSource;)V a
	finalizeSpawn (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/world/DifficultyInstance;Lnet/minecraft/world/entity/MobSpawnType;Lnet/minecraft/world/entity/SpawnGroupData;Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/world/entity/SpawnGroupData; a
	getInventory ()Lnet/minecraft/world/Container; W_
	getInventory ()Lnet/minecraft/world/SimpleContainer; eU
	getLevel ()Lnet/minecraft/world/level/Level; eV
	getNotifyTradeSound ()Lnet/minecraft/sounds/SoundEvent; eR
	getOffers ()Lnet/minecraft/world/item/trading/MerchantOffers; eP
	getStandingEyeHeight (Lnet/minecraft/world/entity/Pose;Lnet/minecraft/world/entity/EntityDimensions;)F b
	getTradeUpdatedSound (Z)Lnet/minecraft/sounds/SoundEvent; t
	getTradingPlayer ()Lnet/minecraft/world/entity/player/Player; eN
	getUnhappyCounter ()I eL
	getVillagerXp ()I eM
	isTrading ()Z eO
	notifyTrade (Lnet/minecraft/world/item/trading/MerchantOffer;)V a
	notifyTradeUpdated (Lnet/minecraft/world/item/ItemStack;)V k
	overrideOffers (Lnet/minecraft/world/item/trading/MerchantOffers;)V a
	overrideXp (I)V t
	playCelebrateSound ()V eS
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	rewardTradeXp (Lnet/minecraft/world/item/trading/MerchantOffer;)V b
	setSlot (ILnet/minecraft/world/item/ItemStack;)Z a_
	setTradingPlayer (Lnet/minecraft/world/entity/player/Player;)V f
	setUnhappyCounter (I)V s
	showProgressBar ()Z eQ
	stopTrading ()V eT
	updateTrades ()V eW
net/minecraft/world/entity/npc/CatSpawner bdl
	nextTick a
	spawnCat (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/Level;)I a
	spawnInHut (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)I a
	spawnInVillage (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;)I a
	tick (Lnet/minecraft/server/level/ServerLevel;ZZ)I a
net/minecraft/world/entity/npc/ClientSideMerchant bdm
	container a
	offers c
	source b
	xp d
	getContainer ()Lnet/minecraft/world/Container; a
	getLevel ()Lnet/minecraft/world/level/Level; eV
	getNotifyTradeSound ()Lnet/minecraft/sounds/SoundEvent; eR
	getOffers ()Lnet/minecraft/world/item/trading/MerchantOffers; eP
	getTradingPlayer ()Lnet/minecraft/world/entity/player/Player; eN
	getVillagerXp ()I eM
	notifyTrade (Lnet/minecraft/world/item/trading/MerchantOffer;)V a
	notifyTradeUpdated (Lnet/minecraft/world/item/ItemStack;)V k
	overrideOffers (Lnet/minecraft/world/item/trading/MerchantOffers;)V a
	overrideXp (I)V t
	setTradingPlayer (Lnet/minecraft/world/entity/player/Player;)V f
	showProgressBar ()Z eQ
net/minecraft/world/entity/npc/InventoryCarrier bdn
	getInventory ()Lnet/minecraft/world/Container; W_
net/minecraft/world/entity/npc/Npc bdo
net/minecraft/world/entity/npc/Villager bdp
	DATA_VILLAGER_DATA by
	FOOD_POINTS bw
	MEMORY_TYPES bN
	POI_MEMORIES bx
	SENSOR_TYPES bO
	WANTED_ITEMS bz
	assignProfessionWhenSpawned bM
	chasing bD
	foodLevel bE
	gossips bF
	increaseProfessionLevelOnUpdate bB
	lastGossipDecayTime bH
	lastGossipTime bG
	lastRestockCheckDayTime bL
	lastRestockGameTime bJ
	lastTradedPlayer bC
	numberOfRestocksToday bK
	updateMerchantTimer bA
	villagerXp bI
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	ageBoundaryReached ()V m
	allowedToRestock ()Z fn
	assignProfessionWhenSpawned ()Z eZ
	brainProvider ()Lnet/minecraft/world/entity/ai/Brain$Provider; cJ
	canBreed ()Z f
	canRestock ()Z fa
	catchUpDemand ()V fo
	countFoodPointsInInventory ()I fu
	createAttributes ()Lnet/minecraft/world/entity/ai/attributes/AttributeSupplier$Builder; eX
	customServerAiStep ()V N
	defineSynchedData ()V e
	die (Lnet/minecraft/world/damagesource/DamageSource;)V a
	digestFood (I)V v
	eatAndDigestFood ()V ff
	eatUntilFull ()V fr
	finalizeSpawn (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/world/DifficultyInstance;Lnet/minecraft/world/entity/MobSpawnType;Lnet/minecraft/world/entity/SpawnGroupData;Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/world/entity/SpawnGroupData; a
	findSpawnPositionForGolemInColumn (Lnet/minecraft/core/BlockPos;DD)Lnet/minecraft/core/BlockPos; a
	getAmbientSound ()Lnet/minecraft/sounds/SoundEvent; I
	getBrain ()Lnet/minecraft/world/entity/ai/Brain; cI
	getBreedOffspring (Lnet/minecraft/world/entity/AgableMob;)Lnet/minecraft/world/entity/AgableMob; a
	getBreedOffspring (Lnet/minecraft/world/entity/AgableMob;)Lnet/minecraft/world/entity/npc/Villager; b
	getDeathSound ()Lnet/minecraft/sounds/SoundEvent; dp
	getGossips ()Lnet/minecraft/world/entity/ai/gossip/GossipContainer; fj
	getHurtSound (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEvent; e
	getPlayerReputation (Lnet/minecraft/world/entity/player/Player;)I g
	getTypeName ()Lnet/minecraft/network/chat/Component; bF
	getVillagerData ()Lnet/minecraft/world/entity/npc/VillagerData; eY
	getVillagerXp ()I eM
	golemSpawnConditionsMet (J)Z d
	gossip (Lnet/minecraft/world/entity/npc/Villager;J)V a
	handleEntityEvent (B)V a
	hasExcessFood ()Z fg
	hasFarmSeeds ()Z fi
	hasSeenGolemRecently (J)Z c
	hungry ()Z fq
	increaseMerchantCareer ()V ft
	isChasing ()Z fe
	makeBrain (Lcom/mojang/serialization/Dynamic;)Lnet/minecraft/world/entity/ai/Brain; a
	maybeDecayGossip ()V fv
	mobInteract (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResult; b
	needsToRestock ()Z fm
	onReputationEventFrom (Lnet/minecraft/world/entity/ai/village/ReputationEventType;Lnet/minecraft/world/entity/Entity;)V a
	pickUpItem (Lnet/minecraft/world/entity/item/ItemEntity;)V b
	playWorkSound ()V fd
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	refreshBrain (Lnet/minecraft/server/level/ServerLevel;)V b
	registerBrainGoals (Lnet/minecraft/world/entity/ai/Brain;)V a
	releasePoi (Lnet/minecraft/world/entity/ai/memory/MemoryModuleType;)V a
	removeWhenFarAway (D)Z h
	resetNumberOfRestocks ()V fx
	resetSpecialPrices ()V fl
	restock ()V fb
	rewardTradeXp (Lnet/minecraft/world/item/trading/MerchantOffer;)V b
	sawGolem (J)V b
	sendDebugPackets ()V M
	setChasing (Z)V u
	setGossips (Lnet/minecraft/nbt/Tag;)V a
	setLastHurtByMob (Lnet/minecraft/world/entity/LivingEntity;)V a
	setOffers (Lnet/minecraft/world/item/trading/MerchantOffers;)V b
	setTradingPlayer (Lnet/minecraft/world/entity/player/Player;)V f
	setUnhappy ()V fk
	setVillagerData (Lnet/minecraft/world/entity/npc/VillagerData;)V a
	setVillagerXp (I)V u
	shouldIncreaseLevel ()Z fs
	shouldRestock ()Z fc
	spawnGolemIfNeeded (JI)V a
	startSleeping (Lnet/minecraft/core/BlockPos;)V b
	startTrading (Lnet/minecraft/world/entity/player/Player;)V h
	stopSleeping ()V em
	stopTrading ()V eT
	tellWitnessesThatIWasMurdered (Lnet/minecraft/world/entity/Entity;)V a
	thunderHit (Lnet/minecraft/world/entity/LightningBolt;)V a
	tick ()V j
	trySpawnGolem ()Lnet/minecraft/world/entity/animal/IronGolem; fw
	updateDemand ()V fp
	updateSpecialPrices (Lnet/minecraft/world/entity/player/Player;)V i
	updateTrades ()V eW
	wantsMoreFood ()Z fh
	wantsToPickUp (Lnet/minecraft/world/item/ItemStack;)Z i
	wantsToSpawnGolem (J)Z a
net/minecraft/world/entity/npc/VillagerData bdq
	CODEC a
	NEXT_LEVEL_XP_THRESHOLDS b
	level e
	profession d
	type c
	canLevelUp (I)Z d
	getLevel ()I c
	getMaxXpPerLevel (I)I c
	getMinXpPerLevel (I)I b
	getProfession ()Lnet/minecraft/world/entity/npc/VillagerProfession; b
	getType ()Lnet/minecraft/world/entity/npc/VillagerType; a
	setLevel (I)Lnet/minecraft/world/entity/npc/VillagerData; a
	setProfession (Lnet/minecraft/world/entity/npc/VillagerProfession;)Lnet/minecraft/world/entity/npc/VillagerData; a
	setType (Lnet/minecraft/world/entity/npc/VillagerType;)Lnet/minecraft/world/entity/npc/VillagerData; a
net/minecraft/world/entity/npc/VillagerDataHolder bdr
	getVillagerData ()Lnet/minecraft/world/entity/npc/VillagerData; eY
	setVillagerData (Lnet/minecraft/world/entity/npc/VillagerData;)V a
net/minecraft/world/entity/npc/VillagerProfession bds
	ARMORER b
	BUTCHER c
	CARTOGRAPHER d
	CLERIC e
	FARMER f
	FISHERMAN g
	FLETCHER h
	LEATHERWORKER i
	LIBRARIAN j
	MASON k
	NITWIT l
	NONE a
	SHEPHERD m
	TOOLSMITH n
	WEAPONSMITH o
	jobPoiType q
	name p
	requestedItems r
	secondaryPoi s
	workSound t
	getJobPoiType ()Lnet/minecraft/world/entity/ai/village/poi/PoiType; b
	getName ()Ljava/lang/String; a
	getRequestedItems ()Lcom/google/common/collect/ImmutableSet; c
	getSecondaryPoi ()Lcom/google/common/collect/ImmutableSet; d
	getWorkSound ()Lnet/minecraft/sounds/SoundEvent; e
	register (Ljava/lang/String;Lnet/minecraft/world/entity/ai/village/poi/PoiType;Lcom/google/common/collect/ImmutableSet;Lcom/google/common/collect/ImmutableSet;Lnet/minecraft/sounds/SoundEvent;)Lnet/minecraft/world/entity/npc/VillagerProfession; a
	register (Ljava/lang/String;Lnet/minecraft/world/entity/ai/village/poi/PoiType;Lnet/minecraft/sounds/SoundEvent;)Lnet/minecraft/world/entity/npc/VillagerProfession; a
net/minecraft/world/entity/npc/VillagerTrades bdt
	TRADES a
	WANDERING_TRADER_TRADES b
	toIntMap (Lcom/google/common/collect/ImmutableMap;)Lit/unimi/dsi/fastutil/ints/Int2ObjectMap; a
net/minecraft/world/entity/npc/VillagerTrades$DyedArmorForEmeralds bdt$a
	item a
	maxUses c
	value b
	villagerXp d
	getOffer (Lnet/minecraft/world/entity/Entity;Ljava/util/Random;)Lnet/minecraft/world/item/trading/MerchantOffer; a
	getRandomDye (Ljava/util/Random;)Lnet/minecraft/world/item/DyeItem; a
net/minecraft/world/entity/npc/VillagerTrades$EmeraldForItems bdt$b
	cost b
	item a
	maxUses c
	priceMultiplier e
	villagerXp d
	getOffer (Lnet/minecraft/world/entity/Entity;Ljava/util/Random;)Lnet/minecraft/world/item/trading/MerchantOffer; a
net/minecraft/world/entity/npc/VillagerTrades$EmeraldsForVillagerTypeItem bdt$c
	cost b
	maxUses c
	trades a
	villagerXp d
	getOffer (Lnet/minecraft/world/entity/Entity;Ljava/util/Random;)Lnet/minecraft/world/item/trading/MerchantOffer; a
net/minecraft/world/entity/npc/VillagerTrades$EnchantBookForEmeralds bdt$d
	villagerXp a
	getOffer (Lnet/minecraft/world/entity/Entity;Ljava/util/Random;)Lnet/minecraft/world/item/trading/MerchantOffer; a
net/minecraft/world/entity/npc/VillagerTrades$EnchantedItemForEmeralds bdt$e
	baseEmeraldCost b
	itemStack a
	maxUses c
	priceMultiplier e
	villagerXp d
	getOffer (Lnet/minecraft/world/entity/Entity;Ljava/util/Random;)Lnet/minecraft/world/item/trading/MerchantOffer; a
net/minecraft/world/entity/npc/VillagerTrades$ItemListing bdt$f
	getOffer (Lnet/minecraft/world/entity/Entity;Ljava/util/Random;)Lnet/minecraft/world/item/trading/MerchantOffer; a
net/minecraft/world/entity/npc/VillagerTrades$ItemsAndEmeraldsToItems bdt$g
	emeraldCost c
	fromCount b
	fromItem a
	maxUses f
	priceMultiplier h
	toCount e
	toItem d
	villagerXp g
	getOffer (Lnet/minecraft/world/entity/Entity;Ljava/util/Random;)Lnet/minecraft/world/item/trading/MerchantOffer; a
net/minecraft/world/entity/npc/VillagerTrades$ItemsForEmeralds bdt$h
	emeraldCost b
	itemStack a
	maxUses d
	numberOfItems c
	priceMultiplier f
	villagerXp e
	getOffer (Lnet/minecraft/world/entity/Entity;Ljava/util/Random;)Lnet/minecraft/world/item/trading/MerchantOffer; a
net/minecraft/world/entity/npc/VillagerTrades$SuspisciousStewForEmerald bdt$i
	duration b
	effect a
	priceMultiplier d
	xp c
	getOffer (Lnet/minecraft/world/entity/Entity;Ljava/util/Random;)Lnet/minecraft/world/item/trading/MerchantOffer; a
net/minecraft/world/entity/npc/VillagerTrades$TippedArrowForItemsAndEmeralds bdt$j
	emeraldCost c
	fromCount g
	fromItem f
	maxUses d
	priceMultiplier h
	toCount b
	toItem a
	villagerXp e
	getOffer (Lnet/minecraft/world/entity/Entity;Ljava/util/Random;)Lnet/minecraft/world/item/trading/MerchantOffer; a
net/minecraft/world/entity/npc/VillagerTrades$TreasureMapForEmeralds bdt$k
	destination b
	destinationType c
	emeraldCost a
	maxUses d
	villagerXp e
	getOffer (Lnet/minecraft/world/entity/Entity;Ljava/util/Random;)Lnet/minecraft/world/item/trading/MerchantOffer; a
net/minecraft/world/entity/npc/VillagerType bdu
	BY_BIOME h
	DESERT a
	JUNGLE b
	PLAINS c
	SAVANNA d
	SNOW e
	SWAMP f
	TAIGA g
	byBiome (Lnet/minecraft/world/level/biome/Biome;)Lnet/minecraft/world/entity/npc/VillagerType; a
	register (Ljava/lang/String;)Lnet/minecraft/world/entity/npc/VillagerType; a
net/minecraft/world/entity/npc/WanderingTrader bdv
	despawnDelay bx
	wanderTarget bw
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	aiStep ()V k
	getAmbientSound ()Lnet/minecraft/sounds/SoundEvent; I
	getBreedOffspring (Lnet/minecraft/world/entity/AgableMob;)Lnet/minecraft/world/entity/AgableMob; a
	getDeathSound ()Lnet/minecraft/sounds/SoundEvent; dp
	getDespawnDelay ()I eX
	getDrinkingSound (Lnet/minecraft/world/item/ItemStack;)Lnet/minecraft/sounds/SoundEvent; c
	getHurtSound (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEvent; e
	getNotifyTradeSound ()Lnet/minecraft/sounds/SoundEvent; eR
	getTradeUpdatedSound (Z)Lnet/minecraft/sounds/SoundEvent; t
	getWanderTarget ()Lnet/minecraft/core/BlockPos; eZ
	maybeDespawn ()V eY
	mobInteract (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResult; b
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	registerGoals ()V o
	removeWhenFarAway (D)Z h
	rewardTradeXp (Lnet/minecraft/world/item/trading/MerchantOffer;)V b
	setDespawnDelay (I)V u
	setWanderTarget (Lnet/minecraft/core/BlockPos;)V g
	showProgressBar ()Z eQ
	updateTrades ()V eW
net/minecraft/world/entity/npc/WanderingTrader$WanderToPositionGoal bdv$a
	speedModifier c
	stopDistance b
	trader a
	canUse ()Z a
	isTooFarAway (Lnet/minecraft/core/BlockPos;D)Z a
	stop ()V d
	tick ()V e
net/minecraft/world/entity/npc/WanderingTraderSpawner bdw
	random a
	serverLevelData b
	spawnChance e
	spawnDelay d
	tickDelay c
	findSpawnPositionNear (Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;I)Lnet/minecraft/core/BlockPos; a
	hasEnoughSpace (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Z a
	spawn (Lnet/minecraft/server/level/ServerLevel;)Z a
	tick (Lnet/minecraft/server/level/ServerLevel;ZZ)I a
	tryToSpawnLlamaFor (Lnet/minecraft/world/entity/npc/WanderingTrader;I)V a
net/minecraft/world/entity/player/Abilities bdz
	flying b
	flyingSpeed f
	instabuild d
	invulnerable a
	mayBuild e
	mayfly c
	walkingSpeed g
	addSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	getFlyingSpeed ()F a
	getWalkingSpeed ()F b
	loadSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	setFlyingSpeed (F)V a
	setWalkingSpeed (F)V b
net/minecraft/world/entity/player/ChatVisiblity bea
	$VALUES g
	BY_ID d
	FULL a
	HIDDEN c
	SYSTEM b
	id e
	key f
	byId (I)Lnet/minecraft/world/entity/player/ChatVisiblity; a
	getId ()I a
	getKey ()Ljava/lang/String; b
net/minecraft/world/entity/player/Inventory beb
	armor b
	carried g
	compartments f
	items a
	offhand c
	player e
	selected d
	timesChanged h
	add (ILnet/minecraft/world/item/ItemStack;)Z c
	add (Lnet/minecraft/world/item/ItemStack;)Z e
	addResource (ILnet/minecraft/world/item/ItemStack;)I d
	addResource (Lnet/minecraft/world/item/ItemStack;)I i
	clearContent ()V aa_
	clearOrCountMatchingItems (Ljava/util/function/Predicate;ILnet/minecraft/world/Container;)I a
	contains (Lnet/minecraft/tags/Tag;)Z a
	contains (Lnet/minecraft/world/item/ItemStack;)Z h
	dropAll ()V k
	fillStackedContents (Lnet/minecraft/world/entity/player/StackedContents;)V a
	findSlotMatchingItem (Lnet/minecraft/world/item/ItemStack;)I b
	findSlotMatchingUnusedItem (Lnet/minecraft/world/item/ItemStack;)I c
	getArmor (I)Lnet/minecraft/world/item/ItemStack; e
	getCarried ()Lnet/minecraft/world/item/ItemStack; m
	getContainerSize ()I ab_
	getDestroySpeed (Lnet/minecraft/world/level/block/state/BlockState;)F a
	getFreeSlot ()I h
	getItem (I)Lnet/minecraft/world/item/ItemStack; a
	getName ()Lnet/minecraft/network/chat/Component; P
	getSelected ()Lnet/minecraft/world/item/ItemStack; f
	getSelectionSize ()I g
	getSlotWithRemainingSpace (Lnet/minecraft/world/item/ItemStack;)I d
	getSuitableHotbarSlot ()I i
	getTimesChanged ()I l
	hasRemainingSpaceForItem (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/item/ItemStack;)Z a
	hurtArmor (Lnet/minecraft/world/damagesource/DamageSource;F)V a
	isEmpty ()Z c
	isHotbarSlot (I)Z d
	isSameItem (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/item/ItemStack;)Z b
	load (Lnet/minecraft/nbt/ListTag;)V b
	pickSlot (I)V c
	placeItemBackInInventory (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/item/ItemStack;)V a
	removeItem (II)Lnet/minecraft/world/item/ItemStack; a
	removeItem (Lnet/minecraft/world/item/ItemStack;)V f
	removeItemNoUpdate (I)Lnet/minecraft/world/item/ItemStack; b
	replaceWith (Lnet/minecraft/world/entity/player/Inventory;)V a
	save (Lnet/minecraft/nbt/ListTag;)Lnet/minecraft/nbt/ListTag; a
	setCarried (Lnet/minecraft/world/item/ItemStack;)V g
	setChanged ()V Z_
	setItem (ILnet/minecraft/world/item/ItemStack;)V a
	setPickedItem (Lnet/minecraft/world/item/ItemStack;)V a
	stillValid (Lnet/minecraft/world/entity/player/Player;)Z a
	swapPaint (D)V a
	tick ()V j
net/minecraft/world/entity/player/Player bec
	DATA_PLAYER_ABSORPTION_ID c
	DATA_PLAYER_MAIN_HAND bq
	DATA_PLAYER_MODE_CUSTOMISATION bp
	DATA_SCORE_ID d
	DATA_SHOULDER_LEFT br
	DATA_SHOULDER_RIGHT bs
	POSES b
	STANDING_DIMENSIONS bo
	abilities bJ
	bob bA
	containerMenu bw
	cooldowns bT
	defaultFlySpeed bO
	enchantmentSeed bN
	enderChestInventory bu
	experienceLevel bK
	experienceProgress bM
	fishing bP
	foodData bx
	gameProfile bQ
	inventory bt
	inventoryMenu bv
	jumpTriggerTime by
	lastItemInMainHand bS
	lastLevelUpTime g
	oBob bz
	reducedDebugInfo bR
	sleepCounter f
	takeXpDelay bB
	timeEntitySatOnShoulder e
	totalExperience bL
	wasUnderwater bI
	xCloak bF
	xCloakO bC
	yCloak bG
	yCloakO bD
	zCloak bH
	zCloakO bE
	actuallyHurt (Lnet/minecraft/world/damagesource/DamageSource;F)V e
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	addItem (Lnet/minecraft/world/item/ItemStack;)Z g
	addParticlesAroundSelf (Lnet/minecraft/core/particles/ParticleOptions;)V a
	aiStep ()V k
	attack (Lnet/minecraft/world/entity/Entity;)V f
	awardRecipes (Ljava/util/Collection;)I a
	awardRecipesByKey ([Lnet/minecraft/resources/ResourceLocation;)V a
	awardStat (Lnet/minecraft/resources/ResourceLocation;)V a
	awardStat (Lnet/minecraft/resources/ResourceLocation;I)V a
	awardStat (Lnet/minecraft/stats/Stat;)V b
	awardStat (Lnet/minecraft/stats/Stat;I)V a
	blockActionRestricted (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/GameType;)Z a
	blockUsingShield (Lnet/minecraft/world/entity/LivingEntity;)V e
	canEat (Z)Z q
	canHarmPlayer (Lnet/minecraft/world/entity/player/Player;)Z a
	canTakeItem (Lnet/minecraft/world/item/ItemStack;)Z e
	canUseGameMasterBlocks ()Z eV
	causeFallDamage (FF)Z b
	causeFoodExhaustion (F)V q
	checkMovementStatistics (DDD)V o
	checkRidingStatistics (DDD)V p
	closeContainer ()V m
	createAttributes ()Lnet/minecraft/world/entity/ai/attributes/AttributeSupplier$Builder; eo
	createItemCooldowns ()Lnet/minecraft/world/item/ItemCooldowns; i
	createPlayerUUID (Lcom/mojang/authlib/GameProfile;)Ljava/util/UUID; a
	createPlayerUUID (Ljava/lang/String;)Ljava/util/UUID; c
	crit (Lnet/minecraft/world/entity/Entity;)V a
	decorateDisplayNameComponent (Lnet/minecraft/network/chat/MutableComponent;)Lnet/minecraft/network/chat/MutableComponent; a
	defineSynchedData ()V e
	destroyVanishingCursedItems ()V ev
	die (Lnet/minecraft/world/damagesource/DamageSource;)V a
	disableShield (Z)V p
	displayClientMessage (Lnet/minecraft/network/chat/Component;Z)V a
	doAutoAttackOnTouch (Lnet/minecraft/world/entity/LivingEntity;)V h
	doWaterSplashEffect ()V aI
	drop (Lnet/minecraft/world/item/ItemStack;Z)Lnet/minecraft/world/entity/item/ItemEntity; a
	drop (Lnet/minecraft/world/item/ItemStack;ZZ)Lnet/minecraft/world/entity/item/ItemEntity; a
	drop (Z)Z a
	dropEquipment ()V dm
	eat (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/item/ItemStack;)Lnet/minecraft/world/item/ItemStack; a
	findRespawnPositionAndUseSpawnBlock (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;ZZ)Ljava/util/Optional; a
	freeAt (Lnet/minecraft/core/BlockPos;)Z f
	getAbsorptionAmount ()F dS
	getArmorSlots ()Ljava/lang/Iterable; bk
	getAttackStrengthScale (F)F r
	getBlockSpeedFactor ()F am
	getCooldowns ()Lnet/minecraft/world/item/ItemCooldowns; eT
	getCurrentItemAttackStrengthDelay ()F eR
	getDeathSound ()Lnet/minecraft/sounds/SoundEvent; dp
	getDestroySpeed (Lnet/minecraft/world/level/block/state/BlockState;)F c
	getDimensionChangingDelay ()I bh
	getDimensions (Lnet/minecraft/world/entity/Pose;)Lnet/minecraft/world/entity/EntityDimensions; a
	getDismountPoses ()Lcom/google/common/collect/ImmutableList; ei
	getDisplayName ()Lnet/minecraft/network/chat/Component; d
	getDisplayNameWithUuid ()Lnet/minecraft/network/chat/Component; eN
	getEnchantmentSeed ()I eF
	getEnderChestInventory ()Lnet/minecraft/world/inventory/PlayerEnderChestContainer; eK
	getExperienceReward (Lnet/minecraft/world/entity/player/Player;)I d
	getFallDamageSound (I)Lnet/minecraft/sounds/SoundEvent; o
	getFireImmuneTicks ()I cu
	getFoodData ()Lnet/minecraft/world/food/FoodData; eH
	getGameProfile ()Lcom/mojang/authlib/GameProfile; ez
	getHandSlots ()Ljava/lang/Iterable; bj
	getHurtSound (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEvent; e
	getItemBySlot (Lnet/minecraft/world/entity/EquipmentSlot;)Lnet/minecraft/world/item/ItemStack; b
	getLuck ()F eU
	getMainArm ()Lnet/minecraft/world/entity/HumanoidArm; dU
	getMyRidingOffset ()D aX
	getName ()Lnet/minecraft/network/chat/Component; P
	getPortalWaitTime ()I ae
	getProjectile (Lnet/minecraft/world/item/ItemStack;)Lnet/minecraft/world/item/ItemStack; f
	getScore ()I eu
	getScoreboard ()Lnet/minecraft/world/scores/Scoreboard; eM
	getScoreboardName ()Ljava/lang/String; bT
	getShoulderEntityLeft ()Lnet/minecraft/nbt/CompoundTag; eP
	getShoulderEntityRight ()Lnet/minecraft/nbt/CompoundTag; eQ
	getSleepTimer ()I eB
	getSoundSource ()Lnet/minecraft/sounds/SoundSource; ct
	getSpeed ()F dM
	getStandingEyeHeight (Lnet/minecraft/world/entity/Pose;Lnet/minecraft/world/entity/EntityDimensions;)F b
	getSwimHighSpeedSplashSound ()Lnet/minecraft/sounds/SoundEvent; as
	getSwimSound ()Lnet/minecraft/sounds/SoundEvent; aq
	getSwimSplashSound ()Lnet/minecraft/sounds/SoundEvent; ar
	getXpNeededForNextLevel ()I eG
	giveExperienceLevels (I)V c
	giveExperiencePoints (I)V d
	handleEntityEvent (B)V a
	hasCorrectToolForDrops (Lnet/minecraft/world/level/block/state/BlockState;)Z d
	hurt (Lnet/minecraft/world/damagesource/DamageSource;F)Z a
	hurtArmor (Lnet/minecraft/world/damagesource/DamageSource;F)V b
	hurtCurrentlyUsedShield (F)V m
	increaseScore (I)V t
	interactOn (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResult; a
	isAffectedByFluids ()Z cS
	isAlwaysExperienceDropper ()Z cW
	isCreative ()Z b_
	isHurt ()Z eI
	isImmobile ()Z dH
	isInvulnerableTo (Lnet/minecraft/world/damagesource/DamageSource;)Z b
	isLocalPlayer ()Z ey
	isModelPartShown (Lnet/minecraft/world/entity/player/PlayerModelPart;)Z a
	isMovementNoisy ()Z ax
	isPushedByFluid ()Z bU
	isReducedDebugInfo ()Z eO
	isSecondaryUseActive ()Z ep
	isSleepingLongEnough ()Z eA
	isSpectator ()Z a_
	isStayingOnGroundSurface ()Z er
	isSwimming ()Z bx
	jumpFromGround ()V dJ
	killed (Lnet/minecraft/world/entity/LivingEntity;)V a_
	magicCrit (Lnet/minecraft/world/entity/Entity;)V b
	makeStuckInBlock (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/phys/Vec3;)V a
	mayBuild ()Z eJ
	mayUseItemAt (Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;Lnet/minecraft/world/item/ItemStack;)Z a
	maybeBackOffFromEdge (Lnet/minecraft/world/phys/Vec3;Lnet/minecraft/world/entity/MoverType;)Lnet/minecraft/world/phys/Vec3; a
	moveCloak ()V p
	onEnchantmentPerformed (Lnet/minecraft/world/item/ItemStack;I)V a
	onSoulSpeedBlock ()Z cO
	onUpdateAbilities ()V t
	openCommandBlock (Lnet/minecraft/world/level/block/entity/CommandBlockEntity;)V a
	openHorseInventory (Lnet/minecraft/world/entity/animal/horse/AbstractHorse;Lnet/minecraft/world/Container;)V a
	openItemGui (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/InteractionHand;)V a
	openJigsawBlock (Lnet/minecraft/world/level/block/entity/JigsawBlockEntity;)V a
	openMenu (Lnet/minecraft/world/MenuProvider;)Ljava/util/OptionalInt; a
	openMinecartCommandBlock (Lnet/minecraft/world/level/BaseCommandBlock;)V a
	openStructureBlock (Lnet/minecraft/world/level/block/entity/StructureBlockEntity;)V a
	openTextEdit (Lnet/minecraft/world/level/block/entity/SignBlockEntity;)V a
	playNotifySound (Lnet/minecraft/sounds/SoundEvent;Lnet/minecraft/sounds/SoundSource;FF)V a
	playShoulderEntityAmbientSound (Lnet/minecraft/nbt/CompoundTag;)V j
	playSound (Lnet/minecraft/sounds/SoundEvent;FF)V a
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	remove ()V aa
	removeEntitiesOnShoulder ()V eL
	removeVehicle ()V bb
	resetAttackStrengthTicker ()V eS
	resetPos ()V Z
	resetRecipes (Ljava/util/Collection;)I b
	resetStat (Lnet/minecraft/stats/Stat;)V a
	respawn ()V ex
	respawnEntityOnShoulder (Lnet/minecraft/nbt/CompoundTag;)V k
	rideTick ()V aW
	sendMerchantOffers (ILnet/minecraft/world/item/trading/MerchantOffers;IIZZ)V a
	serverAiStep ()V dO
	setAbsorptionAmount (F)V p
	setEntityOnShoulder (Lnet/minecraft/nbt/CompoundTag;)Z g
	setGameMode (Lnet/minecraft/world/level/GameType;)V a
	setItemSlot (Lnet/minecraft/world/entity/EquipmentSlot;Lnet/minecraft/world/item/ItemStack;)V a
	setMainArm (Lnet/minecraft/world/entity/HumanoidArm;)V a
	setReducedDebugInfo (Z)V r
	setRemainingFireTicks (I)V g
	setScore (I)V s
	setShoulderEntityLeft (Lnet/minecraft/nbt/CompoundTag;)V h
	setShoulderEntityRight (Lnet/minecraft/nbt/CompoundTag;)V i
	setSlot (ILnet/minecraft/world/item/ItemStack;)Z a_
	shouldRemoveSoulSpeed (Lnet/minecraft/world/level/block/state/BlockState;)Z b
	shouldShowName ()Z bX
	startFallFlying ()V eD
	startSleepInBed (Lnet/minecraft/core/BlockPos;)Lcom/mojang/datafixers/util/Either; a
	stopFallFlying ()V eE
	stopSleepInBed (ZZ)V a
	stopSleeping ()V em
	sweepAttack ()V ew
	tick ()V j
	touch (Lnet/minecraft/world/entity/Entity;)V c
	travel (Lnet/minecraft/world/phys/Vec3;)V f
	tryToStartFallFlying ()Z eC
	turtleHelmetTick ()V o
	updateIsUnderwater ()Z es
	updatePlayerPose ()V et
	updateSwimming ()V aF
	wantsToStopRiding ()Z eq
net/minecraft/world/entity/player/Player$BedSleepingProblem bec$a
	$VALUES h
	NOT_POSSIBLE_HERE a
	NOT_POSSIBLE_NOW b
	NOT_SAFE f
	OBSTRUCTED d
	OTHER_PROBLEM e
	TOO_FAR_AWAY c
	message g
	getMessage ()Lnet/minecraft/network/chat/Component; a
net/minecraft/world/entity/player/PlayerModelPart bed
	$VALUES l
	CAPE a
	HAT g
	JACKET b
	LEFT_PANTS_LEG e
	LEFT_SLEEVE c
	RIGHT_PANTS_LEG f
	RIGHT_SLEEVE d
	bit h
	id j
	mask i
	name k
	getBit ()I b
	getId ()Ljava/lang/String; c
	getMask ()I a
	getName ()Lnet/minecraft/network/chat/Component; d
net/minecraft/world/entity/player/StackedContents bee
	contents a
	accountSimpleStack (Lnet/minecraft/world/item/ItemStack;)V a
	accountStack (Lnet/minecraft/world/item/ItemStack;)V b
	accountStack (Lnet/minecraft/world/item/ItemStack;I)V a
	canCraft (Lnet/minecraft/world/item/crafting/Recipe;Lit/unimi/dsi/fastutil/ints/IntList;)Z a
	canCraft (Lnet/minecraft/world/item/crafting/Recipe;Lit/unimi/dsi/fastutil/ints/IntList;I)Z a
	clear ()V a
	fromStackingIndex (I)Lnet/minecraft/world/item/ItemStack; a
	getBiggestCraftableStack (Lnet/minecraft/world/item/crafting/Recipe;ILit/unimi/dsi/fastutil/ints/IntList;)I a
	getBiggestCraftableStack (Lnet/minecraft/world/item/crafting/Recipe;Lit/unimi/dsi/fastutil/ints/IntList;)I b
	getStackingIndex (Lnet/minecraft/world/item/ItemStack;)I c
	has (I)Z b
	put (II)V b
	take (II)I a
net/minecraft/world/entity/player/StackedContents$RecipePicker bee$a
	data g
	ingredientCount d
	ingredients c
	itemCount f
	items e
	path h
	recipe b
	dfs (I)Z a
	getIndex (ZII)I d
	getMinIngredientCount ()I b
	getSatisfiedIndex (I)I d
	getUniqueAvailableIngredientItems ()[I a
	getVisitedIndex (ZI)I c
	hasConnection (ZII)Z a
	hasResidual (ZII)Z b
	hasVisited (ZI)Z b
	isSatisfied (I)Z b
	setSatisfied (I)V c
	toggleResidual (ZII)V c
	tryPick (ILit/unimi/dsi/fastutil/ints/IntList;)Z a
	tryPickAll (ILit/unimi/dsi/fastutil/ints/IntList;)I b
	visit (ZI)V a
net/minecraft/world/entity/projectile/AbstractArrow beg
	ID_FLAGS f
	PIERCE_LEVEL g
	baseDamage ap
	inGround b
	inGroundTime c
	knockback aq
	lastState an
	life ao
	pickup d
	piercedAndKilledEntities at
	piercingIgnoreEntityIds as
	shakeTime e
	soundEvent ar
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	canHitEntity (Lnet/minecraft/world/entity/Entity;)Z a
	defineSynchedData ()V e
	doPostHurtEffects (Lnet/minecraft/world/entity/LivingEntity;)V a
	findHitEntity (Lnet/minecraft/world/phys/Vec3;Lnet/minecraft/world/phys/Vec3;)Lnet/minecraft/world/phys/EntityHitResult; a
	getAddEntityPacket ()Lnet/minecraft/network/protocol/Packet; O
	getBaseDamage ()D n
	getDefaultHitGroundSoundEvent ()Lnet/minecraft/sounds/SoundEvent; i
	getEyeHeight (Lnet/minecraft/world/entity/Pose;Lnet/minecraft/world/entity/EntityDimensions;)F a
	getHitGroundSoundEvent ()Lnet/minecraft/sounds/SoundEvent; k
	getKnockback ()I o
	getPickupItem ()Lnet/minecraft/world/item/ItemStack; m
	getPierceLevel ()B r
	getWaterInertia ()F s
	isAttackable ()Z bH
	isCritArrow ()Z p
	isInGround ()Z g
	isMovementNoisy ()Z ax
	isNoPhysics ()Z t
	lerpMotion (DDD)V j
	lerpTo (DDDFFIZ)V a
	move (Lnet/minecraft/world/entity/MoverType;Lnet/minecraft/world/phys/Vec3;)V a
	onHitBlock (Lnet/minecraft/world/phys/BlockHitResult;)V a
	onHitEntity (Lnet/minecraft/world/phys/EntityHitResult;)V a
	playerTouch (Lnet/minecraft/world/entity/player/Player;)V a_
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	resetPiercedEntities ()V A
	setBaseDamage (D)V h
	setCritArrow (Z)V a
	setEnchantmentEffectsFromEntity (Lnet/minecraft/world/entity/LivingEntity;F)V a
	setFlag (IZ)V a
	setKnockback (I)V a
	setNoPhysics (Z)V o
	setOwner (Lnet/minecraft/world/entity/Entity;)V b
	setPierceLevel (B)V b
	setShotFromCrossbow (Z)V p
	setSoundEvent (Lnet/minecraft/sounds/SoundEvent;)V a
	shoot (DDDFF)V c
	shotFromCrossbow ()Z q
	shouldFall ()Z u
	shouldRenderAtSqrDistance (D)Z a
	startFalling ()V z
	tick ()V j
	tickDespawn ()V h
net/minecraft/world/entity/projectile/AbstractArrow$Pickup beg$a
	$VALUES d
	ALLOWED b
	CREATIVE_ONLY c
	DISALLOWED a
	byOrdinal (I)Lnet/minecraft/world/entity/projectile/AbstractArrow$Pickup; a
net/minecraft/world/entity/projectile/AbstractHurtingProjectile beh
	xPower b
	yPower c
	zPower d
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	canHitEntity (Lnet/minecraft/world/entity/Entity;)Z a
	defineSynchedData ()V e
	getAddEntityPacket ()Lnet/minecraft/network/protocol/Packet; O
	getBrightness ()F aO
	getInertia ()F i
	getPickRadius ()F bc
	getTrailParticle ()Lnet/minecraft/core/particles/ParticleOptions; h
	hurt (Lnet/minecraft/world/damagesource/DamageSource;F)Z a
	isPickable ()Z aQ
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	shouldBurn ()Z Y_
	shouldRenderAtSqrDistance (D)Z a
	tick ()V j
net/minecraft/world/entity/projectile/Arrow bei
	ID_EFFECT_COLOR f
	effects an
	fixedColor ao
	potion g
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	addEffect (Lnet/minecraft/world/effect/MobEffectInstance;)V a
	defineSynchedData ()V e
	doPostHurtEffects (Lnet/minecraft/world/entity/LivingEntity;)V a
	getColor ()I u
	getCustomColor (Lnet/minecraft/world/item/ItemStack;)I c
	getPickupItem ()Lnet/minecraft/world/item/ItemStack; m
	handleEntityEvent (B)V a
	makeParticle (I)V b
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	setEffectsFromItem (Lnet/minecraft/world/item/ItemStack;)V b
	setFixedColor (I)V c
	tick ()V j
	updateColor ()V z
net/minecraft/world/entity/projectile/DragonFireball bej
	getTrailParticle ()Lnet/minecraft/core/particles/ParticleOptions; h
	hurt (Lnet/minecraft/world/damagesource/DamageSource;F)Z a
	isPickable ()Z aQ
	onHit (Lnet/minecraft/world/phys/HitResult;)V a
	shouldBurn ()Z Y_
net/minecraft/world/entity/projectile/EvokerFangs bek
	clientSideAttackStarted e
	lifeTicks d
	owner f
	ownerUUID g
	sentSpikeEvent c
	warmupDelayTicks b
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	dealDamageTo (Lnet/minecraft/world/entity/LivingEntity;)V d
	defineSynchedData ()V e
	getAddEntityPacket ()Lnet/minecraft/network/protocol/Packet; O
	getAnimationProgress (F)F a
	getOwner ()Lnet/minecraft/world/entity/LivingEntity; g
	handleEntityEvent (B)V a
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	setOwner (Lnet/minecraft/world/entity/LivingEntity;)V a
	tick ()V j
net/minecraft/world/entity/projectile/EyeOfEnder bel
	DATA_ITEM_STACK b
	life f
	surviveAfterDeath g
	tx c
	ty d
	tz e
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	defineSynchedData ()V e
	getAddEntityPacket ()Lnet/minecraft/network/protocol/Packet; O
	getBrightness ()F aO
	getItem ()Lnet/minecraft/world/item/ItemStack; g
	getItemRaw ()Lnet/minecraft/world/item/ItemStack; h
	isAttackable ()Z bH
	lerpMotion (DDD)V j
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	setItem (Lnet/minecraft/world/item/ItemStack;)V b
	shouldRenderAtSqrDistance (D)Z a
	signalTo (Lnet/minecraft/core/BlockPos;)V a
	tick ()V j
net/minecraft/world/entity/projectile/Fireball bem
	DATA_ITEM_STACK e
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	defineSynchedData ()V e
	getItem ()Lnet/minecraft/world/item/ItemStack; g
	getItemRaw ()Lnet/minecraft/world/item/ItemStack; k
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	setItem (Lnet/minecraft/world/item/ItemStack;)V b
net/minecraft/world/entity/projectile/FireworkRocketEntity ben
	DATA_ATTACHED_TO_TARGET c
	DATA_ID_FIREWORKS_ITEM b
	DATA_SHOT_AT_ANGLE d
	attachedToEntity g
	life e
	lifetime f
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	dealExplosionDamage ()V m
	defineSynchedData ()V e
	explode ()V i
	getAddEntityPacket ()Lnet/minecraft/network/protocol/Packet; O
	getItem ()Lnet/minecraft/world/item/ItemStack; g
	handleEntityEvent (B)V a
	hasExplosion ()Z k
	isAttachedToEntity ()Z n
	isAttackable ()Z bH
	isShotAtAngle ()Z h
	onHitBlock (Lnet/minecraft/world/phys/BlockHitResult;)V a
	onHitEntity (Lnet/minecraft/world/phys/EntityHitResult;)V a
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	shouldRender (DDD)Z i
	shouldRenderAtSqrDistance (D)Z a
	tick ()V j
net/minecraft/world/entity/projectile/FishingHook beo
	DATA_BITING f
	DATA_HOOKED_ENTITY e
	biting c
	currentState at
	fishAngle aq
	hookedIn as
	life g
	luck au
	lureSpeed av
	nibble an
	openWater ar
	outOfWaterTime d
	syncronizedRandom b
	timeUntilHooked ap
	timeUntilLured ao
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	bringInHookedEntity ()V h
	calculateOpenWater (Lnet/minecraft/core/BlockPos;)Z b
	canChangeDimensions ()Z bK
	canHitEntity (Lnet/minecraft/world/entity/Entity;)Z a
	catchingFish (Lnet/minecraft/core/BlockPos;)V a
	checkCollision ()V m
	defineSynchedData ()V e
	getAddEntityPacket ()Lnet/minecraft/network/protocol/Packet; O
	getHookedIn ()Lnet/minecraft/world/entity/Entity; k
	getOpenWaterTypeForArea (Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/entity/projectile/FishingHook$OpenWaterType; a
	getOpenWaterTypeForBlock (Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/entity/projectile/FishingHook$OpenWaterType; c
	getPlayerOwner ()Lnet/minecraft/world/entity/player/Player; i
	handleEntityEvent (B)V a
	isMovementNoisy ()Z ax
	isOpenWaterFishing ()Z g
	lerpTo (DDDFFIZ)V a
	onHitBlock (Lnet/minecraft/world/phys/BlockHitResult;)V a
	onHitEntity (Lnet/minecraft/world/phys/EntityHitResult;)V a
	onSyncedDataUpdated (Lnet/minecraft/network/syncher/EntityDataAccessor;)V a
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	remove ()V aa
	retrieve (Lnet/minecraft/world/item/ItemStack;)I b
	setHookedEntity ()V n
	shouldRenderAtSqrDistance (D)Z a
	shouldStopFishing (Lnet/minecraft/world/entity/player/Player;)Z a
	tick ()V j
net/minecraft/world/entity/projectile/FishingHook$FishHookState beo$a
	$VALUES d
	BOBBING c
	FLYING a
	HOOKED_IN_ENTITY b
net/minecraft/world/entity/projectile/FishingHook$OpenWaterType beo$b
	$VALUES d
	ABOVE_WATER a
	INSIDE_WATER b
	INVALID c
net/minecraft/world/entity/projectile/ItemSupplier bep
	getItem ()Lnet/minecraft/world/item/ItemStack; g
net/minecraft/world/entity/projectile/LargeFireball beq
	explosionPower e
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	onHit (Lnet/minecraft/world/phys/HitResult;)V a
	onHitEntity (Lnet/minecraft/world/phys/EntityHitResult;)V a
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
net/minecraft/world/entity/projectile/LlamaSpit ber
	defineSynchedData ()V e
	getAddEntityPacket ()Lnet/minecraft/network/protocol/Packet; O
	onHitBlock (Lnet/minecraft/world/phys/BlockHitResult;)V a
	onHitEntity (Lnet/minecraft/world/phys/EntityHitResult;)V a
	tick ()V j
net/minecraft/world/entity/projectile/Projectile bes
	leftOwner d
	ownerNetworkId c
	ownerUUID b
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	canHitEntity (Lnet/minecraft/world/entity/Entity;)Z a
	checkLeftOwner ()Z h
	getOwner ()Lnet/minecraft/world/entity/Entity; v
	lerpMotion (DDD)V j
	lerpRotation (FF)F e
	onHit (Lnet/minecraft/world/phys/HitResult;)V a
	onHitBlock (Lnet/minecraft/world/phys/BlockHitResult;)V a
	onHitEntity (Lnet/minecraft/world/phys/EntityHitResult;)V a
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	setOwner (Lnet/minecraft/world/entity/Entity;)V b
	shoot (DDDFF)V c
	shootFromRotation (Lnet/minecraft/world/entity/Entity;FFFFF)V a
	tick ()V j
	updateRotation ()V x
net/minecraft/world/entity/projectile/ProjectileUtil bet
	getEntityHitResult (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/phys/Vec3;Lnet/minecraft/world/phys/Vec3;Lnet/minecraft/world/phys/AABB;Ljava/util/function/Predicate;D)Lnet/minecraft/world/phys/EntityHitResult; a
	getEntityHitResult (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/phys/Vec3;Lnet/minecraft/world/phys/Vec3;Lnet/minecraft/world/phys/AABB;Ljava/util/function/Predicate;)Lnet/minecraft/world/phys/EntityHitResult; a
	getHitResult (Lnet/minecraft/world/entity/Entity;Ljava/util/function/Predicate;Lnet/minecraft/world/level/ClipContext$Block;)Lnet/minecraft/world/phys/HitResult; a
	getMobArrow (Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/item/ItemStack;F)Lnet/minecraft/world/entity/projectile/AbstractArrow; a
	getWeaponHoldingHand (Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/item/Item;)Lnet/minecraft/world/InteractionHand; a
	rotateTowardsMovement (Lnet/minecraft/world/entity/Entity;F)V a
net/minecraft/world/entity/projectile/ShulkerBullet beu
	currentMoveDirection c
	finalTarget b
	flightSteps d
	targetDeltaX e
	targetDeltaY f
	targetDeltaZ g
	targetId an
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	canHitEntity (Lnet/minecraft/world/entity/Entity;)Z a
	checkDespawn ()V cH
	defineSynchedData ()V e
	getAddEntityPacket ()Lnet/minecraft/network/protocol/Packet; O
	getBrightness ()F aO
	getMoveDirection ()Lnet/minecraft/core/Direction; g
	getSoundSource ()Lnet/minecraft/sounds/SoundSource; ct
	hurt (Lnet/minecraft/world/damagesource/DamageSource;F)Z a
	isOnFire ()Z bm
	isPickable ()Z aQ
	onHit (Lnet/minecraft/world/phys/HitResult;)V a
	onHitBlock (Lnet/minecraft/world/phys/BlockHitResult;)V a
	onHitEntity (Lnet/minecraft/world/phys/EntityHitResult;)V a
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	selectNextMoveDirection (Lnet/minecraft/core/Direction$Axis;)V a
	setMoveDirection (Lnet/minecraft/core/Direction;)V a
	shouldRenderAtSqrDistance (D)Z a
	tick ()V j
net/minecraft/world/entity/projectile/SmallFireball bev
	hurt (Lnet/minecraft/world/damagesource/DamageSource;F)Z a
	isPickable ()Z aQ
	onHit (Lnet/minecraft/world/phys/HitResult;)V a
	onHitBlock (Lnet/minecraft/world/phys/BlockHitResult;)V a
	onHitEntity (Lnet/minecraft/world/phys/EntityHitResult;)V a
net/minecraft/world/entity/projectile/Snowball bew
	getDefaultItem ()Lnet/minecraft/world/item/Item; h
	getParticle ()Lnet/minecraft/core/particles/ParticleOptions; m
	handleEntityEvent (B)V a
	onHit (Lnet/minecraft/world/phys/HitResult;)V a
	onHitEntity (Lnet/minecraft/world/phys/EntityHitResult;)V a
net/minecraft/world/entity/projectile/SpectralArrow bex
	duration f
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	doPostHurtEffects (Lnet/minecraft/world/entity/LivingEntity;)V a
	getPickupItem ()Lnet/minecraft/world/item/ItemStack; m
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	tick ()V j
net/minecraft/world/entity/projectile/ThrowableItemProjectile bey
	DATA_ITEM_STACK b
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	defineSynchedData ()V e
	getDefaultItem ()Lnet/minecraft/world/item/Item; h
	getItem ()Lnet/minecraft/world/item/ItemStack; g
	getItemRaw ()Lnet/minecraft/world/item/ItemStack; i
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	setItem (Lnet/minecraft/world/item/ItemStack;)V b
net/minecraft/world/entity/projectile/ThrowableProjectile bez
	getAddEntityPacket ()Lnet/minecraft/network/protocol/Packet; O
	getGravity ()F k
	shouldRenderAtSqrDistance (D)Z a
	tick ()V j
net/minecraft/world/entity/projectile/ThrownEgg bfa
	getDefaultItem ()Lnet/minecraft/world/item/Item; h
	handleEntityEvent (B)V a
	onHit (Lnet/minecraft/world/phys/HitResult;)V a
	onHitEntity (Lnet/minecraft/world/phys/EntityHitResult;)V a
net/minecraft/world/entity/projectile/ThrownEnderpearl bfb
	changeDimension (Lnet/minecraft/server/level/ServerLevel;)Lnet/minecraft/world/entity/Entity; a
	getDefaultItem ()Lnet/minecraft/world/item/Item; h
	onHit (Lnet/minecraft/world/phys/HitResult;)V a
	onHitEntity (Lnet/minecraft/world/phys/EntityHitResult;)V a
	tick ()V j
net/minecraft/world/entity/projectile/ThrownExperienceBottle bfc
	getDefaultItem ()Lnet/minecraft/world/item/Item; h
	getGravity ()F k
	onHit (Lnet/minecraft/world/phys/HitResult;)V a
net/minecraft/world/entity/projectile/ThrownPotion bfd
	WATER_SENSITIVE b
	applySplash (Ljava/util/List;Lnet/minecraft/world/entity/Entity;)V a
	applyWater ()V m
	dowseFire (Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;)V a
	getDefaultItem ()Lnet/minecraft/world/item/Item; h
	getGravity ()F k
	isLingering ()Z n
	makeAreaOfEffectCloud (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/item/alchemy/Potion;)V a
	onHit (Lnet/minecraft/world/phys/HitResult;)V a
	onHitBlock (Lnet/minecraft/world/phys/BlockHitResult;)V a
net/minecraft/world/entity/projectile/ThrownTrident bfe
	ID_FOIL an
	ID_LOYALTY g
	clientSideReturnTridentTickCount f
	dealtDamage ap
	tridentItem ao
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	defineSynchedData ()V e
	findHitEntity (Lnet/minecraft/world/phys/Vec3;Lnet/minecraft/world/phys/Vec3;)Lnet/minecraft/world/phys/EntityHitResult; a
	getDefaultHitGroundSoundEvent ()Lnet/minecraft/sounds/SoundEvent; i
	getPickupItem ()Lnet/minecraft/world/item/ItemStack; m
	getWaterInertia ()F s
	isAcceptibleReturnOwner ()Z z
	isFoil ()Z u
	onHitEntity (Lnet/minecraft/world/phys/EntityHitResult;)V a
	playerTouch (Lnet/minecraft/world/entity/player/Player;)V a_
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	shouldRender (DDD)Z i
	tick ()V j
	tickDespawn ()V h
net/minecraft/world/entity/projectile/WitherSkull bff
	DATA_DANGEROUS e
	defineSynchedData ()V e
	getBlockExplosionResistance (Lnet/minecraft/world/level/Explosion;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/material/FluidState;F)F a
	getInertia ()F i
	hurt (Lnet/minecraft/world/damagesource/DamageSource;F)Z a
	isDangerous ()Z k
	isOnFire ()Z bm
	isPickable ()Z aQ
	onHit (Lnet/minecraft/world/phys/HitResult;)V a
	onHitEntity (Lnet/minecraft/world/phys/EntityHitResult;)V a
	setDangerous (Z)V a
	shouldBurn ()Z Y_
net/minecraft/world/entity/raid/Raid bfh
	DEFEAT c
	RAID_BAR_DEFEAT_COMPONENT e
	RAID_BAR_VICTORY_COMPONENT d
	RAID_NAME_COMPONENT a
	VICTORY b
	active p
	badOmenLevel o
	celebrationTicks x
	center j
	groupRaiderMap g
	groupToLeaderMap f
	groupsSpawned q
	heroesOfTheVillage h
	id m
	level k
	numGroups v
	postRaidTicks s
	raidCooldownTicks t
	raidEvent r
	random u
	started l
	status w
	ticksActive i
	totalHealth n
	waveSpawnPos y
	absorbBadOmen (Lnet/minecraft/world/entity/player/Player;)V a
	addHeroOfTheVillage (Lnet/minecraft/world/entity/Entity;)V a
	addWaveMob (ILnet/minecraft/world/entity/raid/Raider;)Z b
	addWaveMob (ILnet/minecraft/world/entity/raid/Raider;Z)Z a
	findRandomSpawnPos (II)Lnet/minecraft/core/BlockPos; a
	getAllRaiders ()Ljava/util/Set; h
	getBadOmenLevel ()I m
	getCenter ()Lnet/minecraft/core/BlockPos; t
	getDefaultNumSpawns (Lnet/minecraft/world/entity/raid/Raid$RaiderType;IZ)I a
	getEnchantOdds ()F w
	getGroupsSpawned ()I k
	getHealthOfLivingRaiders ()F q
	getId ()I u
	getLeader (I)Lnet/minecraft/world/entity/raid/Raider; b
	getLeaderBannerInstance ()Lnet/minecraft/world/item/ItemStack; s
	getLevel ()Lnet/minecraft/world/level/Level; i
	getMaxBadOmenLevel ()I l
	getNumGroups (Lnet/minecraft/world/Difficulty;)I a
	getPotentialBonusSpawns (Lnet/minecraft/world/entity/raid/Raid$RaiderType;Ljava/util/Random;ILnet/minecraft/world/DifficultyInstance;Z)I a
	getTotalHealth ()F g
	getTotalRaidersAlive ()I r
	getValidSpawnPos (I)Ljava/util/Optional; d
	hasBonusWave ()Z C
	hasFirstWaveSpawned ()Z c
	hasMoreWaves ()Z A
	hasSpawnedBonusWave ()Z D
	isActive ()Z v
	isBetweenWaves ()Z b
	isFinalWave ()Z B
	isLoss ()Z f
	isOver ()Z a
	isStarted ()Z j
	isStopped ()Z d
	isVictory ()Z e
	joinRaid (ILnet/minecraft/world/entity/raid/Raider;Lnet/minecraft/core/BlockPos;Z)V a
	moveRaidCenterToNearbyVillageSection ()V z
	playSound (Lnet/minecraft/core/BlockPos;)V a
	removeFromRaid (Lnet/minecraft/world/entity/raid/Raider;Z)V a
	removeLeader (I)V c
	save (Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/nbt/CompoundTag; a
	setBadOmenLevel (I)V a
	setCenter (Lnet/minecraft/core/BlockPos;)V c
	setDirty ()V H
	setLeader (ILnet/minecraft/world/entity/raid/Raider;)V a
	shouldSpawnBonusGroup ()Z E
	shouldSpawnGroup ()Z G
	spawnGroup (Lnet/minecraft/core/BlockPos;)V b
	stop ()V n
	tick ()V o
	updateBossbar ()V p
	updatePlayers ()V y
	updateRaiders ()V F
	validPlayer ()Ljava/util/function/Predicate; x
net/minecraft/world/entity/raid/Raid$RaidStatus bfh$a
	$VALUES f
	LOSS c
	ONGOING a
	STOPPED d
	VALUES e
	VICTORY b
	getByName (Ljava/lang/String;)Lnet/minecraft/world/entity/raid/Raid$RaidStatus; b
	getName ()Ljava/lang/String; a
net/minecraft/world/entity/raid/Raid$RaiderType bfh$b
	$VALUES i
	EVOKER b
	PILLAGER c
	RAVAGER e
	VALUES f
	VINDICATOR a
	WITCH d
	entityType g
	spawnsPerWaveBeforeBonus h
net/minecraft/world/entity/raid/Raider bfi
	ALLOWED_ITEMS b
	IS_CELEBRATING c
	canJoinRaid bw
	raid d
	ticksOutsideRaid bx
	wave bv
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	aiStep ()V k
	applyRaidBuffs (IZ)V a
	canJoinPatrol ()Z eU
	canJoinRaid ()Z fa
	defineSynchedData ()V e
	die (Lnet/minecraft/world/damagesource/DamageSource;)V a
	finalizeSpawn (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/world/DifficultyInstance;Lnet/minecraft/world/entity/MobSpawnType;Lnet/minecraft/world/entity/SpawnGroupData;Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/world/entity/SpawnGroupData; a
	getCelebrateSound ()Lnet/minecraft/sounds/SoundEvent; eM
	getCurrentRaid ()Lnet/minecraft/world/entity/raid/Raid; fb
	getTicksOutsideRaid ()I ff
	getWave ()I fd
	hasActiveRaid ()Z fc
	hurt (Lnet/minecraft/world/damagesource/DamageSource;F)Z a
	isCelebrating ()Z fe
	pickUpItem (Lnet/minecraft/world/entity/item/ItemEntity;)V b
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	registerGoals ()V o
	removeWhenFarAway (D)Z h
	requiresCustomPersistence ()Z K
	setCanJoinRaid (Z)V w
	setCelebrating (Z)V x
	setCurrentRaid (Lnet/minecraft/world/entity/raid/Raid;)V a
	setTicksOutsideRaid (I)V b
	setWave (I)V a
	updateNoActionTime ()V eR
net/minecraft/world/entity/raid/Raider$HoldGroundAttackGoal bfi$a
	hostileRadiusSqr d
	mob c
	shoutTargeting a
	canUse ()Z a
	start ()V c
	stop ()V d
	tick ()V e
net/minecraft/world/entity/raid/Raider$ObtainRaidLeaderBannerGoal bfi$b
	mob b
	canUse ()Z a
	tick ()V e
net/minecraft/world/entity/raid/Raider$RaiderCelebration bfi$c
	mob b
	canUse ()Z a
	start ()V c
	stop ()V d
	tick ()V e
net/minecraft/world/entity/raid/Raider$RaiderMoveThroughVillageGoal bfi$d
	distanceToPoi e
	poiPos c
	raider a
	speedModifier b
	stuck f
	visited d
	canContinueToUse ()Z b
	canUse ()Z a
	hasNotVisited (Lnet/minecraft/core/BlockPos;)Z a
	hasSuitablePoi ()Z h
	isValidRaid ()Z g
	start ()V c
	stop ()V d
	tick ()V e
	updateVisited ()V j
net/minecraft/world/entity/raid/Raids bfj
	level b
	nextAvailableID c
	raidMap a
	tick d
	canJoinRaid (Lnet/minecraft/world/entity/raid/Raider;Lnet/minecraft/world/entity/raid/Raid;)Z a
	createOrExtendRaid (Lnet/minecraft/server/level/ServerPlayer;)Lnet/minecraft/world/entity/raid/Raid; a
	get (I)Lnet/minecraft/world/entity/raid/Raid; a
	getFileId (Lnet/minecraft/world/level/dimension/DimensionType;)Ljava/lang/String; a
	getNearbyRaid (Lnet/minecraft/core/BlockPos;I)Lnet/minecraft/world/entity/raid/Raid; a
	getOrCreateRaid (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/entity/raid/Raid; a
	getUniqueId ()I e
	load (Lnet/minecraft/nbt/CompoundTag;)V a
	save (Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/nbt/CompoundTag; b
	tick ()V a
net/minecraft/world/entity/schedule/Activity bfl
	ADMIRE_ITEM m
	AVOID n
	CELEBRATE l
	CORE a
	FIGHT k
	HIDE j
	IDLE b
	MEET f
	PANIC g
	PLAY d
	PRE_RAID i
	RAID h
	REST e
	RIDE o
	WORK c
	hashCode q
	name p
	getName ()Ljava/lang/String; a
	register (Ljava/lang/String;)Lnet/minecraft/world/entity/schedule/Activity; a
net/minecraft/world/entity/schedule/Keyframe bfm
	timeStamp a
	value b
	getTimeStamp ()I a
	getValue ()F b
net/minecraft/world/entity/schedule/Schedule bfn
	EMPTY a
	SIMPLE b
	VILLAGER_BABY c
	VILLAGER_DEFAULT d
	timelines e
	ensureTimelineExistsFor (Lnet/minecraft/world/entity/schedule/Activity;)V a
	getActivityAt (I)Lnet/minecraft/world/entity/schedule/Activity; a
	getAllTimelinesExceptFor (Lnet/minecraft/world/entity/schedule/Activity;)Ljava/util/List; c
	getTimelineFor (Lnet/minecraft/world/entity/schedule/Activity;)Lnet/minecraft/world/entity/schedule/Timeline; b
	register (Ljava/lang/String;)Lnet/minecraft/world/entity/schedule/ScheduleBuilder; a
net/minecraft/world/entity/schedule/ScheduleBuilder bfo
	schedule a
	transitions b
	build ()Lnet/minecraft/world/entity/schedule/Schedule; a
	changeActivityAt (ILnet/minecraft/world/entity/schedule/Activity;)Lnet/minecraft/world/entity/schedule/ScheduleBuilder; a
net/minecraft/world/entity/schedule/ScheduleBuilder$ActivityTransition bfo$a
	activity b
	time a
	getActivity ()Lnet/minecraft/world/entity/schedule/Activity; b
	getTime ()I a
net/minecraft/world/entity/schedule/Timeline bfp
	keyframes a
	previousIndex b
	addKeyframe (IF)Lnet/minecraft/world/entity/schedule/Timeline; a
	addKeyframes (Ljava/util/Collection;)Lnet/minecraft/world/entity/schedule/Timeline; a
	getKeyframes ()Lcom/google/common/collect/ImmutableList; a
	getValueAt (I)F a
	sortAndDeduplicateKeyframes ()V b
net/minecraft/world/entity/vehicle/AbstractMinecart bfr
	DATA_ID_CUSTOM_DISPLAY g
	DATA_ID_DAMAGE d
	DATA_ID_DISPLAY_BLOCK e
	DATA_ID_DISPLAY_OFFSET f
	DATA_ID_HURT b
	DATA_ID_HURTDIR c
	EXITS ap
	POSE_DISMOUNT_HEIGHTS an
	flipped ao
	lSteps aq
	lx ar
	lxd aw
	lxr av
	ly as
	lyd ax
	lyr au
	lz at
	lzd ay
	activateMinecart (IIIZ)V a
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	animateHurt ()V bi
	applyNaturalSlowdown ()V i
	comeOffTrack ()V h
	createMinecart (Lnet/minecraft/world/level/Level;DDDLnet/minecraft/world/entity/vehicle/AbstractMinecart$Type;)Lnet/minecraft/world/entity/vehicle/AbstractMinecart; a
	defineSynchedData ()V e
	destroy (Lnet/minecraft/world/damagesource/DamageSource;)V a
	exits (Lnet/minecraft/world/level/block/state/properties/RailShape;)Lcom/mojang/datafixers/util/Pair; a
	getAddEntityPacket ()Lnet/minecraft/network/protocol/Packet; O
	getBlockSpeedFactor ()F am
	getBoundingBoxForCulling ()Lnet/minecraft/world/phys/AABB; cc
	getCollideAgainstBox (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/world/phys/AABB; j
	getDamage ()F k
	getDefaultDisplayBlockState ()Lnet/minecraft/world/level/block/state/BlockState; q
	getDefaultDisplayOffset ()I s
	getDismountLocationForPassenger (Lnet/minecraft/world/entity/LivingEntity;)Lnet/minecraft/world/phys/Vec3; c
	getDisplayBlockState ()Lnet/minecraft/world/level/block/state/BlockState; p
	getDisplayOffset ()I r
	getHurtDir ()I n
	getHurtTime ()I m
	getMaxSpeed ()D g
	getMinecartType ()Lnet/minecraft/world/entity/vehicle/AbstractMinecart$Type; o
	getMotionDirection ()Lnet/minecraft/core/Direction; bZ
	getPassengersRidingOffset ()D aY
	getPos (DDD)Lnet/minecraft/world/phys/Vec3; o
	getPosOffs (DDDD)Lnet/minecraft/world/phys/Vec3; a
	hasCustomDisplay ()Z t
	hurt (Lnet/minecraft/world/damagesource/DamageSource;F)Z a
	isMovementNoisy ()Z ax
	isPickable ()Z aQ
	isPushable ()Z aR
	isRedstoneConductor (Lnet/minecraft/core/BlockPos;)Z a
	lerpMotion (DDD)V j
	lerpTo (DDDFFIZ)V a
	moveAlongTrack (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V b
	push (Lnet/minecraft/world/entity/Entity;)V i
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	setCustomDisplay (Z)V a
	setDamage (F)V a
	setDisplayBlockState (Lnet/minecraft/world/level/block/state/BlockState;)V b
	setDisplayOffset (I)V l
	setHurtDir (I)V d
	setHurtTime (I)V c
	tick ()V j
net/minecraft/world/entity/vehicle/AbstractMinecart$Type bfr$a
	$VALUES h
	CHEST b
	COMMAND_BLOCK g
	FURNACE c
	HOPPER f
	RIDEABLE a
	SPAWNER e
	TNT d
net/minecraft/world/entity/vehicle/AbstractMinecartContainer bfs
	dropEquipment c
	itemStacks b
	lootTable d
	lootTableSeed e
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	applyNaturalSlowdown ()V i
	changeDimension (Lnet/minecraft/server/level/ServerLevel;)Lnet/minecraft/world/entity/Entity; a
	clearContent ()V aa_
	createMenu (ILnet/minecraft/world/entity/player/Inventory;)Lnet/minecraft/world/inventory/AbstractContainerMenu; a
	destroy (Lnet/minecraft/world/damagesource/DamageSource;)V a
	getItem (I)Lnet/minecraft/world/item/ItemStack; a
	interact (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResult; a
	isEmpty ()Z c
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	remove ()V aa
	removeItem (II)Lnet/minecraft/world/item/ItemStack; a
	removeItemNoUpdate (I)Lnet/minecraft/world/item/ItemStack; b
	setChanged ()V Z_
	setDropContainerContent (Z)V a_
	setItem (ILnet/minecraft/world/item/ItemStack;)V a
	setLootTable (Lnet/minecraft/resources/ResourceLocation;J)V a
	setSlot (ILnet/minecraft/world/item/ItemStack;)Z a_
	stillValid (Lnet/minecraft/world/entity/player/Player;)Z a
	unpackLootTable (Lnet/minecraft/world/entity/player/Player;)V d
net/minecraft/world/entity/vehicle/Boat bft
	DATA_ID_BUBBLE_TIME an
	DATA_ID_DAMAGE d
	DATA_ID_HURT b
	DATA_ID_HURTDIR c
	DATA_ID_PADDLE_LEFT f
	DATA_ID_PADDLE_RIGHT g
	DATA_ID_TYPE e
	bubbleAngle aK
	bubbleAngleO aL
	bubbleColumnDirectionIsDown aI
	bubbleMultiplier aJ
	deltaRotation ar
	inputDown aB
	inputLeft ay
	inputRight az
	inputUp aA
	invFriction ap
	isAboveBubbleColumn aH
	landFriction aD
	lastYd aG
	lerpSteps as
	lerpX at
	lerpXRot ax
	lerpY au
	lerpYRot aw
	lerpZ av
	oldStatus aF
	outOfControlTicks aq
	paddlePositions ao
	status aE
	waterLevel aC
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	animateHurt ()V bi
	canAddPassenger (Lnet/minecraft/world/entity/Entity;)Z q
	checkFallDamage (DZLnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/BlockPos;)V a
	checkInWater ()Z t
	clampRotation (Lnet/minecraft/world/entity/Entity;)V a
	controlBoat ()V x
	defineSynchedData ()V e
	floatBoat ()V v
	getAddEntityPacket ()Lnet/minecraft/network/protocol/Packet; O
	getBoatType ()Lnet/minecraft/world/entity/vehicle/Boat$Type; p
	getBubbleAngle (F)F b
	getBubbleTime ()I z
	getCollideAgainstBox (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/world/phys/AABB; j
	getCollideBox ()Lnet/minecraft/world/phys/AABB; ay
	getControllingPassenger ()Lnet/minecraft/world/entity/Entity; cl
	getDamage ()F m
	getDismountLocationForPassenger (Lnet/minecraft/world/entity/LivingEntity;)Lnet/minecraft/world/phys/Vec3; c
	getDropItem ()Lnet/minecraft/world/item/Item; g
	getEyeHeight (Lnet/minecraft/world/entity/Pose;Lnet/minecraft/world/entity/EntityDimensions;)F a
	getGroundFriction ()F k
	getHurtDir ()I o
	getHurtTime ()I n
	getMotionDirection ()Lnet/minecraft/core/Direction; bZ
	getPaddleSound ()Lnet/minecraft/sounds/SoundEvent; h
	getPaddleState (I)Z a
	getPassengersRidingOffset ()D aY
	getRowingTime (IF)F a
	getStatus ()Lnet/minecraft/world/entity/vehicle/Boat$Status; s
	getWaterLevelAbove ()F i
	hurt (Lnet/minecraft/world/damagesource/DamageSource;F)Z a
	interact (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResult; a
	isMovementNoisy ()Z ax
	isPickable ()Z aQ
	isPushable ()Z aR
	isUnderWater ()Z aE
	isUnderwater ()Lnet/minecraft/world/entity/vehicle/Boat$Status; u
	lerpTo (DDDFFIZ)V a
	onAboveBubbleCol (Z)V k
	onPassengerTurned (Lnet/minecraft/world/entity/Entity;)V l
	positionRider (Lnet/minecraft/world/entity/Entity;)V k
	push (Lnet/minecraft/world/entity/Entity;)V i
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	setBubbleTime (I)V d
	setDamage (F)V a
	setHurtDir (I)V c
	setHurtTime (I)V b
	setInput (ZZZZ)V a
	setPaddleState (ZZ)V a
	setType (Lnet/minecraft/world/entity/vehicle/Boat$Type;)V a
	tick ()V j
	tickBubbleColumn ()V q
	tickLerp ()V r
net/minecraft/world/entity/vehicle/Boat$Status bft$a
	$VALUES f
	IN_AIR e
	IN_WATER a
	ON_LAND d
	UNDER_FLOWING_WATER c
	UNDER_WATER b
net/minecraft/world/entity/vehicle/Boat$Type bft$b
	$VALUES i
	ACACIA e
	BIRCH c
	DARK_OAK f
	JUNGLE d
	OAK a
	SPRUCE b
	name g
	planks h
	byId (I)Lnet/minecraft/world/entity/vehicle/Boat$Type; a
	byName (Ljava/lang/String;)Lnet/minecraft/world/entity/vehicle/Boat$Type; a
	getName ()Ljava/lang/String; a
	getPlanks ()Lnet/minecraft/world/level/block/Block; b
net/minecraft/world/entity/vehicle/DismountHelper bfu
	canDismountTo (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/phys/AABB;)Z a
	isFloorValid (D)Z a
	offsetsForDirection (Lnet/minecraft/core/Direction;)[[I a
net/minecraft/world/entity/vehicle/Minecart bfv
	activateMinecart (IIIZ)V a
	getMinecartType ()Lnet/minecraft/world/entity/vehicle/AbstractMinecart$Type; o
	interact (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResult; a
net/minecraft/world/entity/vehicle/MinecartChest bfw
	createMenu (ILnet/minecraft/world/entity/player/Inventory;)Lnet/minecraft/world/inventory/AbstractContainerMenu; a
	destroy (Lnet/minecraft/world/damagesource/DamageSource;)V a
	getContainerSize ()I ab_
	getDefaultDisplayBlockState ()Lnet/minecraft/world/level/block/state/BlockState; q
	getDefaultDisplayOffset ()I s
	getMinecartType ()Lnet/minecraft/world/entity/vehicle/AbstractMinecart$Type; o
net/minecraft/world/entity/vehicle/MinecartCommandBlock bfx
	DATA_ID_COMMAND_NAME b
	DATA_ID_LAST_OUTPUT c
	commandBlock d
	lastActivated e
	activateMinecart (IIIZ)V a
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	defineSynchedData ()V e
	getCommandBlock ()Lnet/minecraft/world/level/BaseCommandBlock; u
	getDefaultDisplayBlockState ()Lnet/minecraft/world/level/block/state/BlockState; q
	getMinecartType ()Lnet/minecraft/world/entity/vehicle/AbstractMinecart$Type; o
	interact (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResult; a
	onSyncedDataUpdated (Lnet/minecraft/network/syncher/EntityDataAccessor;)V a
	onlyOpCanSetNbt ()Z ci
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
net/minecraft/world/entity/vehicle/MinecartCommandBlock$MinecartCommandBase bfx$a
	createCommandSourceStack ()Lnet/minecraft/commands/CommandSourceStack; h
	getLevel ()Lnet/minecraft/server/level/ServerLevel; d
	getMinecart ()Lnet/minecraft/world/entity/vehicle/MinecartCommandBlock; g
	getPosition ()Lnet/minecraft/world/phys/Vec3; f
	onUpdated ()V e
net/minecraft/world/entity/vehicle/MinecartFurnace bfy
	DATA_ID_FUEL d
	INGREDIENT f
	fuel e
	xPush b
	zPush c
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	applyNaturalSlowdown ()V i
	defineSynchedData ()V e
	destroy (Lnet/minecraft/world/damagesource/DamageSource;)V a
	getDefaultDisplayBlockState ()Lnet/minecraft/world/level/block/state/BlockState; q
	getMaxSpeed ()D g
	getMinecartType ()Lnet/minecraft/world/entity/vehicle/AbstractMinecart$Type; o
	hasFuel ()Z u
	interact (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResult; a
	moveAlongTrack (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V b
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	setHasFuel (Z)V o
	tick ()V j
net/minecraft/world/entity/vehicle/MinecartHopper bfz
	cooldownTime e
	enabled d
	lastPosition f
	activateMinecart (IIIZ)V a
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	createMenu (ILnet/minecraft/world/entity/player/Inventory;)Lnet/minecraft/world/inventory/AbstractContainerMenu; a
	destroy (Lnet/minecraft/world/damagesource/DamageSource;)V a
	getContainerSize ()I ab_
	getDefaultDisplayBlockState ()Lnet/minecraft/world/level/block/state/BlockState; q
	getDefaultDisplayOffset ()I s
	getLevel ()Lnet/minecraft/world/level/Level; v
	getLevelX ()D x
	getLevelY ()D z
	getLevelZ ()D A
	getMinecartType ()Lnet/minecraft/world/entity/vehicle/AbstractMinecart$Type; o
	isEnabled ()Z u
	isOnCooldown ()Z C
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	setCooldown (I)V m
	setEnabled (Z)V o
	suckInItems ()Z B
	tick ()V j
net/minecraft/world/entity/vehicle/MinecartSpawner bga
	spawner b
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	getDefaultDisplayBlockState ()Lnet/minecraft/world/level/block/state/BlockState; q
	getMinecartType ()Lnet/minecraft/world/entity/vehicle/AbstractMinecart$Type; o
	getSpawner ()Lnet/minecraft/world/level/BaseSpawner; u
	handleEntityEvent (B)V a
	onlyOpCanSetNbt ()Z ci
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	tick ()V j
net/minecraft/world/entity/vehicle/MinecartTNT bgb
	fuse b
	activateMinecart (IIIZ)V a
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	causeFallDamage (FF)Z b
	destroy (Lnet/minecraft/world/damagesource/DamageSource;)V a
	explode (D)V h
	getBlockExplosionResistance (Lnet/minecraft/world/level/Explosion;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/material/FluidState;F)F a
	getDefaultDisplayBlockState ()Lnet/minecraft/world/level/block/state/BlockState; q
	getFuse ()I v
	getMinecartType ()Lnet/minecraft/world/entity/vehicle/AbstractMinecart$Type; o
	handleEntityEvent (B)V a
	hurt (Lnet/minecraft/world/damagesource/DamageSource;F)Z a
	isPrimed ()Z x
	primeFuse ()V u
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	shouldBlockExplode (Lnet/minecraft/world/level/Explosion;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;F)Z a
	tick ()V j
net/minecraft/world/food/FoodConstants bgd
net/minecraft/world/food/FoodData bge
	exhaustionLevel c
	foodLevel a
	lastFoodLevel e
	saturationLevel b
	tickTimer d
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	addExhaustion (F)V a
	eat (IF)V a
	eat (Lnet/minecraft/world/item/Item;Lnet/minecraft/world/item/ItemStack;)V a
	getExhaustionLevel ()F d
	getFoodLevel ()I a
	getLastFoodLevel ()I b
	getSaturationLevel ()F e
	needsFood ()Z c
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	setExhaustion (F)V c
	setFoodLevel (I)V a
	setSaturation (F)V b
	tick (Lnet/minecraft/world/entity/player/Player;)V a
net/minecraft/world/food/FoodProperties bgf
	canAlwaysEat d
	effects f
	fastFood e
	isMeat c
	nutrition a
	saturationModifier b
	canAlwaysEat ()Z d
	getEffects ()Ljava/util/List; f
	getNutrition ()I a
	getSaturationModifier ()F b
	isFastFood ()Z e
	isMeat ()Z c
net/minecraft/world/food/FoodProperties$Builder bgf$a
	canAlwaysEat d
	effects f
	fastFood e
	isMeat c
	nutrition a
	saturationModifier b
	alwaysEat ()Lnet/minecraft/world/food/FoodProperties$Builder; b
	build ()Lnet/minecraft/world/food/FoodProperties; d
	effect (Lnet/minecraft/world/effect/MobEffectInstance;F)Lnet/minecraft/world/food/FoodProperties$Builder; a
	fast ()Lnet/minecraft/world/food/FoodProperties$Builder; c
	meat ()Lnet/minecraft/world/food/FoodProperties$Builder; a
	nutrition (I)Lnet/minecraft/world/food/FoodProperties$Builder; a
	saturationMod (F)Lnet/minecraft/world/food/FoodProperties$Builder; a
net/minecraft/world/food/Foods bgg
	APPLE a
	BAKED_POTATO b
	BEEF c
	BEETROOT d
	BEETROOT_SOUP e
	BREAD f
	CARROT g
	CHICKEN h
	CHORUS_FRUIT i
	COD j
	COOKED_BEEF k
	COOKED_CHICKEN l
	COOKED_COD m
	COOKED_MUTTON n
	COOKED_PORKCHOP o
	COOKED_RABBIT p
	COOKED_SALMON q
	COOKIE r
	DRIED_KELP s
	ENCHANTED_GOLDEN_APPLE t
	GOLDEN_APPLE u
	GOLDEN_CARROT v
	HONEY_BOTTLE w
	MELON_SLICE x
	MUSHROOM_STEW y
	MUTTON z
	POISONOUS_POTATO A
	PORKCHOP B
	POTATO C
	PUFFERFISH D
	PUMPKIN_PIE E
	RABBIT F
	RABBIT_STEW G
	ROTTEN_FLESH H
	SALMON I
	SPIDER_EYE J
	SUSPICIOUS_STEW K
	SWEET_BERRIES L
	TROPICAL_FISH M
	stew (I)Lnet/minecraft/world/food/FoodProperties; a
net/minecraft/world/inventory/AbstractContainerMenu bgi
	changeUid f
	containerId b
	containerListeners j
	dataSlots d
	lastSlots c
	menuType e
	quickcraftSlots i
	quickcraftStatus h
	quickcraftType g
	slots a
	unSynchedPlayers k
	addDataSlot (Lnet/minecraft/world/inventory/DataSlot;)Lnet/minecraft/world/inventory/DataSlot; a
	addDataSlots (Lnet/minecraft/world/inventory/ContainerData;)V a
	addItem (ILnet/minecraft/world/item/ItemStack;)V b
	addSlot (Lnet/minecraft/world/inventory/Slot;)Lnet/minecraft/world/inventory/Slot; a
	addSlotListener (Lnet/minecraft/world/inventory/ContainerListener;)V a
	backup (Lnet/minecraft/world/entity/player/Inventory;)S a
	broadcastChanges ()V c
	canDragTo (Lnet/minecraft/world/inventory/Slot;)Z b
	canItemQuickReplace (Lnet/minecraft/world/inventory/Slot;Lnet/minecraft/world/item/ItemStack;Z)Z a
	canTakeItemForPickAll (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/inventory/Slot;)Z a
	checkContainerDataCount (Lnet/minecraft/world/inventory/ContainerData;I)V a
	checkContainerSize (Lnet/minecraft/world/Container;I)V a
	clearContainer (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/level/Level;Lnet/minecraft/world/Container;)V a
	clickMenuButton (Lnet/minecraft/world/entity/player/Player;I)Z a
	clicked (IILnet/minecraft/world/inventory/ClickType;Lnet/minecraft/world/entity/player/Player;)Lnet/minecraft/world/item/ItemStack; a
	consideredTheSameItem (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/item/ItemStack;)Z a
	doClick (IILnet/minecraft/world/inventory/ClickType;Lnet/minecraft/world/entity/player/Player;)Lnet/minecraft/world/item/ItemStack; b
	getItems ()Lnet/minecraft/core/NonNullList; b
	getQuickCraftSlotCount (Ljava/util/Set;ILnet/minecraft/world/item/ItemStack;I)V a
	getQuickcraftHeader (I)I c
	getQuickcraftMask (II)I b
	getQuickcraftType (I)I b
	getRedstoneSignalFromBlockEntity (Lnet/minecraft/world/level/block/entity/BlockEntity;)I a
	getRedstoneSignalFromContainer (Lnet/minecraft/world/Container;)I b
	getSlot (I)Lnet/minecraft/world/inventory/Slot; a
	getSlotFor (Lnet/minecraft/world/Container;I)Lnet/minecraft/world/inventory/Slot; b
	getType ()Lnet/minecraft/world/inventory/MenuType; a
	isSynched (Lnet/minecraft/world/entity/player/Player;)Z c
	isValidQuickcraftType (ILnet/minecraft/world/entity/player/Player;)Z a
	moveItemStackTo (Lnet/minecraft/world/item/ItemStack;IIZ)Z a
	quickMoveStack (Lnet/minecraft/world/entity/player/Player;I)Lnet/minecraft/world/item/ItemStack; b
	removeSlotListener (Lnet/minecraft/world/inventory/ContainerListener;)V b
	removed (Lnet/minecraft/world/entity/player/Player;)V b
	resetQuickCraft ()V d
	setAll (Ljava/util/List;)V a
	setData (II)V a
	setItem (ILnet/minecraft/world/item/ItemStack;)V a
	setSynched (Lnet/minecraft/world/entity/player/Player;Z)V a
	slotsChanged (Lnet/minecraft/world/Container;)V a
	stillValid (Lnet/minecraft/world/entity/player/Player;)Z a
	stillValid (Lnet/minecraft/world/inventory/ContainerLevelAccess;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/level/block/Block;)Z a
net/minecraft/world/inventory/AbstractFurnaceMenu bgj
	container d
	data e
	level c
	recipeType f
	canSmelt (Lnet/minecraft/world/item/ItemStack;)Z a
	clearCraftingContent ()V e
	fillCraftSlotsStackedContents (Lnet/minecraft/world/entity/player/StackedContents;)V a
	getBurnProgress ()I j
	getGridHeight ()I h
	getGridWidth ()I g
	getLitProgress ()I k
	getResultSlotIndex ()I f
	getSize ()I i
	handlePlacement (ZLnet/minecraft/world/item/crafting/Recipe;Lnet/minecraft/server/level/ServerPlayer;)V a
	isFuel (Lnet/minecraft/world/item/ItemStack;)Z b
	isLit ()Z l
	quickMoveStack (Lnet/minecraft/world/entity/player/Player;I)Lnet/minecraft/world/item/ItemStack; b
	recipeMatches (Lnet/minecraft/world/item/crafting/Recipe;)Z a
	stillValid (Lnet/minecraft/world/entity/player/Player;)Z a
net/minecraft/world/inventory/AnvilMenu bgk
	LOGGER g
	cost j
	itemName i
	repairItemCountCost h
	calculateIncreasedRepairCost (I)I d
	createResult ()V e
	getCost ()I f
	isValidBlock (Lnet/minecraft/world/level/block/state/BlockState;)Z a
	mayPickup (Lnet/minecraft/world/entity/player/Player;Z)Z b
	onTake (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/item/ItemStack;)Lnet/minecraft/world/item/ItemStack; a
	setItemName (Ljava/lang/String;)V a
net/minecraft/world/inventory/BeaconMenu bgl
	access e
	beacon c
	beaconData f
	paymentSlot d
	getLevels ()I e
	getPrimaryEffect ()Lnet/minecraft/world/effect/MobEffect; f
	getSecondaryEffect ()Lnet/minecraft/world/effect/MobEffect; g
	hasPayment ()Z h
	quickMoveStack (Lnet/minecraft/world/entity/player/Player;I)Lnet/minecraft/world/item/ItemStack; b
	removed (Lnet/minecraft/world/entity/player/Player;)V b
	setData (II)V a
	stillValid (Lnet/minecraft/world/entity/player/Player;)Z a
	updateEffects (II)V c
net/minecraft/world/inventory/BeaconMenu$PaymentSlot bgl$a
	getMaxStackSize ()I a
	mayPlace (Lnet/minecraft/world/item/ItemStack;)Z a
net/minecraft/world/inventory/BlastFurnaceMenu bgm
net/minecraft/world/inventory/BrewingStandMenu bgn
	brewingStand c
	brewingStandData d
	ingredientSlot e
	getBrewingTicks ()I f
	getFuel ()I e
	quickMoveStack (Lnet/minecraft/world/entity/player/Player;I)Lnet/minecraft/world/item/ItemStack; b
	stillValid (Lnet/minecraft/world/entity/player/Player;)Z a
net/minecraft/world/inventory/BrewingStandMenu$FuelSlot bgn$a
	getMaxStackSize ()I a
	mayPlace (Lnet/minecraft/world/item/ItemStack;)Z a
	mayPlaceItem (Lnet/minecraft/world/item/ItemStack;)Z a_
net/minecraft/world/inventory/BrewingStandMenu$IngredientsSlot bgn$b
	getMaxStackSize ()I a
	mayPlace (Lnet/minecraft/world/item/ItemStack;)Z a
net/minecraft/world/inventory/BrewingStandMenu$PotionSlot bgn$c
	getMaxStackSize ()I a
	mayPlace (Lnet/minecraft/world/item/ItemStack;)Z a
	mayPlaceItem (Lnet/minecraft/world/item/ItemStack;)Z b_
	onTake (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/item/ItemStack;)Lnet/minecraft/world/item/ItemStack; a
net/minecraft/world/inventory/CartographyTableMenu bgo
	access d
	container c
	lastSoundTime f
	quickMoved e
	resultContainer g
	canTakeItemForPickAll (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/inventory/Slot;)Z a
	quickMoveStack (Lnet/minecraft/world/entity/player/Player;I)Lnet/minecraft/world/item/ItemStack; b
	removed (Lnet/minecraft/world/entity/player/Player;)V b
	setupResultSlot (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/item/ItemStack;)V a
	slotsChanged (Lnet/minecraft/world/Container;)V a
	stillValid (Lnet/minecraft/world/entity/player/Player;)Z a
net/minecraft/world/inventory/ChestMenu bgp
	container c
	containerRows d
	fiveRows (ILnet/minecraft/world/entity/player/Inventory;)Lnet/minecraft/world/inventory/ChestMenu; e
	fourRows (ILnet/minecraft/world/entity/player/Inventory;)Lnet/minecraft/world/inventory/ChestMenu; d
	getContainer ()Lnet/minecraft/world/Container; e
	getRowCount ()I f
	oneRow (ILnet/minecraft/world/entity/player/Inventory;)Lnet/minecraft/world/inventory/ChestMenu; a
	quickMoveStack (Lnet/minecraft/world/entity/player/Player;I)Lnet/minecraft/world/item/ItemStack; b
	removed (Lnet/minecraft/world/entity/player/Player;)V b
	sixRows (ILnet/minecraft/world/entity/player/Inventory;)Lnet/minecraft/world/inventory/ChestMenu; f
	sixRows (ILnet/minecraft/world/entity/player/Inventory;Lnet/minecraft/world/Container;)Lnet/minecraft/world/inventory/ChestMenu; b
	stillValid (Lnet/minecraft/world/entity/player/Player;)Z a
	threeRows (ILnet/minecraft/world/entity/player/Inventory;)Lnet/minecraft/world/inventory/ChestMenu; c
	threeRows (ILnet/minecraft/world/entity/player/Inventory;Lnet/minecraft/world/Container;)Lnet/minecraft/world/inventory/ChestMenu; a
	twoRows (ILnet/minecraft/world/entity/player/Inventory;)Lnet/minecraft/world/inventory/ChestMenu; b
net/minecraft/world/inventory/ClickType bgq
	$VALUES h
	CLONE d
	PICKUP a
	PICKUP_ALL g
	QUICK_CRAFT f
	QUICK_MOVE b
	SWAP c
	THROW e
net/minecraft/world/inventory/ContainerData bgr
	get (I)I a
	getCount ()I a
	set (II)V a
net/minecraft/world/inventory/ContainerLevelAccess bgs
	NULL a
	create (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/inventory/ContainerLevelAccess; a
	evaluate (Ljava/util/function/BiFunction;)Ljava/util/Optional; a
	evaluate (Ljava/util/function/BiFunction;Ljava/lang/Object;)Ljava/lang/Object; a
	execute (Ljava/util/function/BiConsumer;)V a
net/minecraft/world/inventory/ContainerListener bgt
	refreshContainer (Lnet/minecraft/world/inventory/AbstractContainerMenu;Lnet/minecraft/core/NonNullList;)V a
	setContainerData (Lnet/minecraft/world/inventory/AbstractContainerMenu;II)V a
	slotChanged (Lnet/minecraft/world/inventory/AbstractContainerMenu;ILnet/minecraft/world/item/ItemStack;)V a
net/minecraft/world/inventory/CraftingContainer bgu
	height c
	items a
	menu d
	width b
	clearContent ()V aa_
	fillStackedContents (Lnet/minecraft/world/entity/player/StackedContents;)V a
	getContainerSize ()I ab_
	getHeight ()I f
	getItem (I)Lnet/minecraft/world/item/ItemStack; a
	getItem (II)Lnet/minecraft/world/item/ItemStack; b
	getWidth ()I g
	isEmpty ()Z c
	removeItem (II)Lnet/minecraft/world/item/ItemStack; a
	removeItemNoUpdate (I)Lnet/minecraft/world/item/ItemStack; b
	setChanged ()V Z_
	setItem (ILnet/minecraft/world/item/ItemStack;)V a
	stillValid (Lnet/minecraft/world/entity/player/Player;)Z a
net/minecraft/world/inventory/CraftingMenu bgv
	access e
	craftSlots c
	player f
	resultSlots d
	canTakeItemForPickAll (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/inventory/Slot;)Z a
	clearCraftingContent ()V e
	fillCraftSlotsStackedContents (Lnet/minecraft/world/entity/player/StackedContents;)V a
	getGridHeight ()I h
	getGridWidth ()I g
	getResultSlotIndex ()I f
	getSize ()I i
	quickMoveStack (Lnet/minecraft/world/entity/player/Player;I)Lnet/minecraft/world/item/ItemStack; b
	recipeMatches (Lnet/minecraft/world/item/crafting/Recipe;)Z a
	removed (Lnet/minecraft/world/entity/player/Player;)V b
	slotChangedCraftingGrid (ILnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/inventory/CraftingContainer;Lnet/minecraft/world/inventory/ResultContainer;)V a
	slotsChanged (Lnet/minecraft/world/Container;)V a
	stillValid (Lnet/minecraft/world/entity/player/Player;)Z a
net/minecraft/world/inventory/DataSlot bgw
	prevValue a
	checkAndClearUpdateFlag ()Z c
	forContainer (Lnet/minecraft/world/inventory/ContainerData;I)Lnet/minecraft/world/inventory/DataSlot; a
	get ()I b
	set (I)V a
	shared ([II)Lnet/minecraft/world/inventory/DataSlot; a
	standalone ()Lnet/minecraft/world/inventory/DataSlot; a
net/minecraft/world/inventory/DispenserMenu bgx
	dispenser c
	quickMoveStack (Lnet/minecraft/world/entity/player/Player;I)Lnet/minecraft/world/item/ItemStack; b
	removed (Lnet/minecraft/world/entity/player/Player;)V b
	stillValid (Lnet/minecraft/world/entity/player/Player;)Z a
net/minecraft/world/inventory/EnchantmentMenu bgy
	access g
	costs c
	enchantClue d
	enchantSlots f
	enchantmentSeed i
	levelClue e
	random h
	clickMenuButton (Lnet/minecraft/world/entity/player/Player;I)Z a
	getEnchantmentList (Lnet/minecraft/world/item/ItemStack;II)Ljava/util/List; a
	getEnchantmentSeed ()I f
	getGoldCount ()I e
	quickMoveStack (Lnet/minecraft/world/entity/player/Player;I)Lnet/minecraft/world/item/ItemStack; b
	removed (Lnet/minecraft/world/entity/player/Player;)V b
	slotsChanged (Lnet/minecraft/world/Container;)V a
	stillValid (Lnet/minecraft/world/entity/player/Player;)Z a
net/minecraft/world/inventory/FurnaceFuelSlot bgz
	menu a
	getMaxStackSize (Lnet/minecraft/world/item/ItemStack;)I b
	isBucket (Lnet/minecraft/world/item/ItemStack;)Z c_
	mayPlace (Lnet/minecraft/world/item/ItemStack;)Z a
net/minecraft/world/inventory/FurnaceMenu bha
net/minecraft/world/inventory/FurnaceResultSlot bhb
	player a
	removeCount b
	checkTakeAchievements (Lnet/minecraft/world/item/ItemStack;)V c
	mayPlace (Lnet/minecraft/world/item/ItemStack;)Z a
	onQuickCraft (Lnet/minecraft/world/item/ItemStack;I)V a
	onTake (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/item/ItemStack;)Lnet/minecraft/world/item/ItemStack; a
	remove (I)Lnet/minecraft/world/item/ItemStack; a
net/minecraft/world/inventory/GrindstoneMenu bhc
	access e
	repairSlots d
	resultSlots c
	createResult ()V e
	mergeEnchants (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/item/ItemStack;)Lnet/minecraft/world/item/ItemStack; b
	quickMoveStack (Lnet/minecraft/world/entity/player/Player;I)Lnet/minecraft/world/item/ItemStack; b
	removeNonCurses (Lnet/minecraft/world/item/ItemStack;II)Lnet/minecraft/world/item/ItemStack; a
	removed (Lnet/minecraft/world/entity/player/Player;)V b
	slotsChanged (Lnet/minecraft/world/Container;)V a
	stillValid (Lnet/minecraft/world/entity/player/Player;)Z a
net/minecraft/world/inventory/HopperMenu bhd
	hopper c
	getContainer ()Lnet/minecraft/world/Container; e
	quickMoveStack (Lnet/minecraft/world/entity/player/Player;I)Lnet/minecraft/world/item/ItemStack; b
	removed (Lnet/minecraft/world/entity/player/Player;)V b
	stillValid (Lnet/minecraft/world/entity/player/Player;)Z a
net/minecraft/world/inventory/HorseInventoryMenu bhe
	horse d
	horseContainer c
	getContainer ()Lnet/minecraft/world/Container; e
	quickMoveStack (Lnet/minecraft/world/entity/player/Player;I)Lnet/minecraft/world/item/ItemStack; b
	removed (Lnet/minecraft/world/entity/player/Player;)V b
	stillValid (Lnet/minecraft/world/entity/player/Player;)Z a
net/minecraft/world/inventory/InventoryMenu bhf
	BLOCK_ATLAS c
	EMPTY_ARMOR_SLOT_BOOTS g
	EMPTY_ARMOR_SLOT_CHESTPLATE e
	EMPTY_ARMOR_SLOT_HELMET d
	EMPTY_ARMOR_SLOT_LEGGINGS f
	EMPTY_ARMOR_SLOT_SHIELD h
	SLOT_IDS k
	TEXTURE_EMPTY_SLOTS j
	active i
	craftSlots l
	owner n
	resultSlots m
	canTakeItemForPickAll (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/inventory/Slot;)Z a
	clearCraftingContent ()V e
	fillCraftSlotsStackedContents (Lnet/minecraft/world/entity/player/StackedContents;)V a
	getCraftSlots ()Lnet/minecraft/world/inventory/CraftingContainer; j
	getGridHeight ()I h
	getGridWidth ()I g
	getResultSlotIndex ()I f
	getSize ()I i
	quickMoveStack (Lnet/minecraft/world/entity/player/Player;I)Lnet/minecraft/world/item/ItemStack; b
	recipeMatches (Lnet/minecraft/world/item/crafting/Recipe;)Z a
	removed (Lnet/minecraft/world/entity/player/Player;)V b
	slotsChanged (Lnet/minecraft/world/Container;)V a
	stillValid (Lnet/minecraft/world/entity/player/Player;)Z a
net/minecraft/world/inventory/ItemCombinerMenu bhg
	access e
	inputSlots d
	player f
	resultSlots c
	createResult ()V e
	isValidBlock (Lnet/minecraft/world/level/block/state/BlockState;)Z a
	mayPickup (Lnet/minecraft/world/entity/player/Player;Z)Z b
	onTake (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/item/ItemStack;)Lnet/minecraft/world/item/ItemStack; a
	quickMoveStack (Lnet/minecraft/world/entity/player/Player;I)Lnet/minecraft/world/item/ItemStack; b
	removed (Lnet/minecraft/world/entity/player/Player;)V b
	shouldQuickMoveToAdditionalSlot (Lnet/minecraft/world/item/ItemStack;)Z a
	slotsChanged (Lnet/minecraft/world/Container;)V a
	stillValid (Lnet/minecraft/world/entity/player/Player;)Z a
net/minecraft/world/inventory/LecternMenu bhh
	lectern c
	lecternData d
	clickMenuButton (Lnet/minecraft/world/entity/player/Player;I)Z a
	getBook ()Lnet/minecraft/world/item/ItemStack; e
	getPage ()I f
	setData (II)V a
	stillValid (Lnet/minecraft/world/entity/player/Player;)Z a
net/minecraft/world/inventory/LoomMenu bhi
	access c
	bannerSlot f
	dyeSlot g
	inputContainer k
	lastSoundTime j
	outputContainer l
	patternSlot h
	resultSlot i
	selectedBannerPatternIndex d
	slotUpdateListener e
	clickMenuButton (Lnet/minecraft/world/entity/player/Player;I)Z a
	getBannerSlot ()Lnet/minecraft/world/inventory/Slot; f
	getDyeSlot ()Lnet/minecraft/world/inventory/Slot; g
	getPatternSlot ()Lnet/minecraft/world/inventory/Slot; h
	getResultSlot ()Lnet/minecraft/world/inventory/Slot; i
	getSelectedBannerPatternIndex ()I e
	quickMoveStack (Lnet/minecraft/world/entity/player/Player;I)Lnet/minecraft/world/item/ItemStack; b
	registerUpdateListener (Ljava/lang/Runnable;)V a
	removed (Lnet/minecraft/world/entity/player/Player;)V b
	setupResultSlot ()V j
	slotsChanged (Lnet/minecraft/world/Container;)V a
	stillValid (Lnet/minecraft/world/entity/player/Player;)Z a
net/minecraft/world/inventory/MenuConstructor bhj
net/minecraft/world/inventory/MenuType bhk
	ANVIL h
	BEACON i
	BLAST_FURNACE j
	BREWING_STAND k
	CARTOGRAPHY_TABLE w
	CRAFTING l
	ENCHANTMENT m
	FURNACE n
	GENERIC_3x3 g
	GENERIC_9x1 a
	GENERIC_9x2 b
	GENERIC_9x3 c
	GENERIC_9x4 d
	GENERIC_9x5 e
	GENERIC_9x6 f
	GRINDSTONE o
	HOPPER p
	LECTERN q
	LOOM r
	MERCHANT s
	SHULKER_BOX t
	SMITHING u
	SMOKER v
	STONECUTTER x
	constructor y
	create (ILnet/minecraft/world/entity/player/Inventory;)Lnet/minecraft/world/inventory/AbstractContainerMenu; a
	register (Ljava/lang/String;Lnet/minecraft/world/inventory/MenuType$MenuSupplier;)Lnet/minecraft/world/inventory/MenuType; a
net/minecraft/world/inventory/MenuType$MenuSupplier bhk$a
net/minecraft/world/inventory/MerchantContainer bhl
	activeOffer c
	futureXp e
	itemStacks b
	merchant a
	selectionHint d
	clearContent ()V aa_
	getActiveOffer ()Lnet/minecraft/world/item/trading/MerchantOffer; g
	getContainerSize ()I ab_
	getFutureXp ()I h
	getItem (I)Lnet/minecraft/world/item/ItemStack; a
	isEmpty ()Z c
	isPaymentSlot (I)Z d
	removeItem (II)Lnet/minecraft/world/item/ItemStack; a
	removeItemNoUpdate (I)Lnet/minecraft/world/item/ItemStack; b
	setChanged ()V Z_
	setItem (ILnet/minecraft/world/item/ItemStack;)V a
	setSelectionHint (I)V c
	stillValid (Lnet/minecraft/world/entity/player/Player;)Z a
	updateSellItem ()V f
net/minecraft/world/inventory/MerchantMenu bhm
	canRestock g
	merchantLevel e
	showProgressBar f
	tradeContainer d
	trader c
	canRestock ()Z h
	canTakeItemForPickAll (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/inventory/Slot;)Z a
	getFutureTraderXp ()I f
	getOffers ()Lnet/minecraft/world/item/trading/MerchantOffers; i
	getTraderLevel ()I g
	getTraderXp ()I e
	isSameItem (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/item/ItemStack;)Z b
	moveFromInventoryToPaymentSlot (ILnet/minecraft/world/item/ItemStack;)V c
	playTradeSound ()V k
	quickMoveStack (Lnet/minecraft/world/entity/player/Player;I)Lnet/minecraft/world/item/ItemStack; b
	removed (Lnet/minecraft/world/entity/player/Player;)V b
	setCanRestock (Z)V b
	setMerchantLevel (I)V f
	setOffers (Lnet/minecraft/world/item/trading/MerchantOffers;)V a
	setSelectionHint (I)V d
	setShowProgressBar (Z)V a
	setXp (I)V e
	showProgressBar ()Z j
	slotsChanged (Lnet/minecraft/world/Container;)V a
	stillValid (Lnet/minecraft/world/entity/player/Player;)Z a
	tryMoveItems (I)V g
net/minecraft/world/inventory/MerchantResultSlot bhn
	merchant h
	player b
	removeCount g
	slots a
	checkTakeAchievements (Lnet/minecraft/world/item/ItemStack;)V c
	mayPlace (Lnet/minecraft/world/item/ItemStack;)Z a
	onQuickCraft (Lnet/minecraft/world/item/ItemStack;I)V a
	onTake (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/item/ItemStack;)Lnet/minecraft/world/item/ItemStack; a
	remove (I)Lnet/minecraft/world/item/ItemStack; a
net/minecraft/world/inventory/PlayerEnderChestContainer bho
	activeChest a
	createTag ()Lnet/minecraft/nbt/ListTag; g
	fromTag (Lnet/minecraft/nbt/ListTag;)V a
	setActiveChest (Lnet/minecraft/world/level/block/entity/EnderChestBlockEntity;)V a
	startOpen (Lnet/minecraft/world/entity/player/Player;)V c_
	stillValid (Lnet/minecraft/world/entity/player/Player;)Z a
	stopOpen (Lnet/minecraft/world/entity/player/Player;)V b_
net/minecraft/world/inventory/RecipeBookMenu bhp
	clearCraftingContent ()V e
	fillCraftSlotsStackedContents (Lnet/minecraft/world/entity/player/StackedContents;)V a
	getGridHeight ()I h
	getGridWidth ()I g
	getResultSlotIndex ()I f
	getSize ()I i
	handlePlacement (ZLnet/minecraft/world/item/crafting/Recipe;Lnet/minecraft/server/level/ServerPlayer;)V a
	recipeMatches (Lnet/minecraft/world/item/crafting/Recipe;)Z a
net/minecraft/world/inventory/RecipeHolder bhq
	awardUsedRecipes (Lnet/minecraft/world/entity/player/Player;)V b
	getRecipeUsed ()Lnet/minecraft/world/item/crafting/Recipe; am_
	setRecipeUsed (Lnet/minecraft/world/item/crafting/Recipe;)V a
	setRecipeUsed (Lnet/minecraft/world/level/Level;Lnet/minecraft/server/level/ServerPlayer;Lnet/minecraft/world/item/crafting/Recipe;)Z a
net/minecraft/world/inventory/ResultContainer bhr
	itemStacks a
	recipeUsed b
	clearContent ()V aa_
	getContainerSize ()I ab_
	getItem (I)Lnet/minecraft/world/item/ItemStack; a
	getRecipeUsed ()Lnet/minecraft/world/item/crafting/Recipe; am_
	isEmpty ()Z c
	removeItem (II)Lnet/minecraft/world/item/ItemStack; a
	removeItemNoUpdate (I)Lnet/minecraft/world/item/ItemStack; b
	setChanged ()V Z_
	setItem (ILnet/minecraft/world/item/ItemStack;)V a
	setRecipeUsed (Lnet/minecraft/world/item/crafting/Recipe;)V a
	stillValid (Lnet/minecraft/world/entity/player/Player;)Z a
net/minecraft/world/inventory/ResultSlot bhs
	craftSlots a
	player b
	removeCount g
	checkTakeAchievements (Lnet/minecraft/world/item/ItemStack;)V c
	mayPlace (Lnet/minecraft/world/item/ItemStack;)Z a
	onQuickCraft (Lnet/minecraft/world/item/ItemStack;I)V a
	onSwapCraft (I)V b
	onTake (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/item/ItemStack;)Lnet/minecraft/world/item/ItemStack; a
	remove (I)Lnet/minecraft/world/item/ItemStack; a
net/minecraft/world/inventory/ShulkerBoxMenu bht
	container c
	quickMoveStack (Lnet/minecraft/world/entity/player/Player;I)Lnet/minecraft/world/item/ItemStack; b
	removed (Lnet/minecraft/world/entity/player/Player;)V b
	stillValid (Lnet/minecraft/world/entity/player/Player;)Z a
net/minecraft/world/inventory/ShulkerBoxSlot bhu
	mayPlace (Lnet/minecraft/world/item/ItemStack;)Z a
net/minecraft/world/inventory/SimpleContainerData bhv
	ints a
	get (I)I a
	getCount ()I a
	set (II)V a
net/minecraft/world/inventory/Slot bhw
	container c
	index d
	slot a
	x e
	y f
	checkTakeAchievements (Lnet/minecraft/world/item/ItemStack;)V c
	getItem ()Lnet/minecraft/world/item/ItemStack; e
	getMaxStackSize ()I a
	getMaxStackSize (Lnet/minecraft/world/item/ItemStack;)I b
	getNoItemIcon ()Lcom/mojang/datafixers/util/Pair; c
	hasItem ()Z f
	isActive ()Z b
	isAt (Lnet/minecraft/world/Container;I)Z a
	mayPickup (Lnet/minecraft/world/entity/player/Player;)Z a
	mayPlace (Lnet/minecraft/world/item/ItemStack;)Z a
	onQuickCraft (Lnet/minecraft/world/item/ItemStack;I)V a
	onQuickCraft (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/item/ItemStack;)V a
	onSwapCraft (I)V b
	onTake (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/item/ItemStack;)Lnet/minecraft/world/item/ItemStack; a
	remove (I)Lnet/minecraft/world/item/ItemStack; a
	set (Lnet/minecraft/world/item/ItemStack;)V d
	setChanged ()V d
	swap (Lnet/minecraft/world/inventory/Slot;)V a
net/minecraft/world/inventory/SmithingMenu bhx
	level g
	recipes i
	selectedRecipe h
	createResult ()V e
	isValidBlock (Lnet/minecraft/world/level/block/state/BlockState;)Z a
	mayPickup (Lnet/minecraft/world/entity/player/Player;Z)Z b
	onTake (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/item/ItemStack;)Lnet/minecraft/world/item/ItemStack; a
	shouldQuickMoveToAdditionalSlot (Lnet/minecraft/world/item/ItemStack;)Z a
	shrinkStackInSlot (I)V d
net/minecraft/world/inventory/SmokerMenu bhy
net/minecraft/world/inventory/StackedContentsCompatible bhz
	fillStackedContents (Lnet/minecraft/world/entity/player/StackedContents;)V a
net/minecraft/world/inventory/StonecutterMenu bia
	access f
	container e
	input j
	inputSlot c
	lastSoundTime k
	level h
	recipes i
	resultContainer m
	resultSlot d
	selectedRecipeIndex g
	slotUpdateListener l
	canTakeItemForPickAll (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/inventory/Slot;)Z a
	clickMenuButton (Lnet/minecraft/world/entity/player/Player;I)Z a
	getNumRecipes ()I g
	getRecipes ()Ljava/util/List; f
	getSelectedRecipeIndex ()I e
	getType ()Lnet/minecraft/world/inventory/MenuType; a
	hasInputItem ()Z h
	isValidRecipeIndex (I)Z d
	quickMoveStack (Lnet/minecraft/world/entity/player/Player;I)Lnet/minecraft/world/item/ItemStack; b
	registerUpdateListener (Ljava/lang/Runnable;)V a
	removed (Lnet/minecraft/world/entity/player/Player;)V b
	setupRecipeList (Lnet/minecraft/world/Container;Lnet/minecraft/world/item/ItemStack;)V a
	setupResultSlot ()V i
	slotsChanged (Lnet/minecraft/world/Container;)V a
	stillValid (Lnet/minecraft/world/entity/player/Player;)Z a
net/minecraft/world/item/AirItem bic
	block a
	appendHoverText (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/Level;Ljava/util/List;Lnet/minecraft/world/item/TooltipFlag;)V a
	getDescriptionId ()Ljava/lang/String; a
net/minecraft/world/item/ArmorItem bid
	ARMOR_MODIFIER_UUID_PER_SLOT j
	DISPENSE_ITEM_BEHAVIOR a
	defaultModifiers m
	defense k
	knockbackResistance c
	material d
	slot b
	toughness l
	dispenseArmor (Lnet/minecraft/core/BlockSource;Lnet/minecraft/world/item/ItemStack;)Z a
	getDefaultAttributeModifiers (Lnet/minecraft/world/entity/EquipmentSlot;)Lcom/google/common/collect/Multimap; a
	getDefense ()I e
	getEnchantmentValue ()I c
	getMaterial ()Lnet/minecraft/world/item/ArmorMaterial; ad_
	getSlot ()Lnet/minecraft/world/entity/EquipmentSlot; b
	getToughness ()F f
	isValidRepairItem (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/item/ItemStack;)Z a
	use (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResultHolder; a
net/minecraft/world/item/ArmorMaterial bie
	getDefenseForSlot (Lnet/minecraft/world/entity/EquipmentSlot;)I b
	getDurabilityForSlot (Lnet/minecraft/world/entity/EquipmentSlot;)I a
	getEnchantmentValue ()I a
	getEquipSound ()Lnet/minecraft/sounds/SoundEvent; b
	getKnockbackResistance ()F f
	getName ()Ljava/lang/String; d
	getRepairIngredient ()Lnet/minecraft/world/item/crafting/Ingredient; c
	getToughness ()F e
net/minecraft/world/item/ArmorMaterials bif
	$VALUES q
	CHAIN b
	DIAMOND e
	GOLD d
	HEALTH_PER_SLOT h
	IRON c
	LEATHER a
	NETHERITE g
	TURTLE f
	durabilityMultiplier j
	enchantmentValue l
	knockbackResistance o
	name i
	repairIngredient p
	slotProtections k
	sound m
	toughness n
	getDefenseForSlot (Lnet/minecraft/world/entity/EquipmentSlot;)I b
	getDurabilityForSlot (Lnet/minecraft/world/entity/EquipmentSlot;)I a
	getEnchantmentValue ()I a
	getEquipSound ()Lnet/minecraft/sounds/SoundEvent; b
	getKnockbackResistance ()F f
	getName ()Ljava/lang/String; d
	getRepairIngredient ()Lnet/minecraft/world/item/crafting/Ingredient; c
	getToughness ()F e
net/minecraft/world/item/ArmorStandItem big
	randomizePose (Lnet/minecraft/world/entity/decoration/ArmorStand;Ljava/util/Random;)V a
	useOn (Lnet/minecraft/world/item/UseOnContext;)Lnet/minecraft/world/InteractionResult; a
net/minecraft/world/item/ArrowItem bih
	createArrow (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/entity/LivingEntity;)Lnet/minecraft/world/entity/projectile/AbstractArrow; a
net/minecraft/world/item/AxeItem bii
	DIGGABLE_MATERIALS c
	OTHER_DIGGABLE_BLOCKS d
	STRIPABLES a
	getDestroySpeed (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/block/state/BlockState;)F a
	useOn (Lnet/minecraft/world/item/UseOnContext;)Lnet/minecraft/world/InteractionResult; a
net/minecraft/world/item/BannerItem bij
	appendHoverText (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/Level;Ljava/util/List;Lnet/minecraft/world/item/TooltipFlag;)V a
	appendHoverTextFromBannerBlockEntityTag (Lnet/minecraft/world/item/ItemStack;Ljava/util/List;)V a
	getColor ()Lnet/minecraft/world/item/DyeColor; b
net/minecraft/world/item/BannerPatternItem bik
	bannerPattern a
	appendHoverText (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/Level;Ljava/util/List;Lnet/minecraft/world/item/TooltipFlag;)V a
	getBannerPattern ()Lnet/minecraft/world/level/block/entity/BannerPattern; b
	getDisplayName ()Lnet/minecraft/network/chat/MutableComponent; d
net/minecraft/world/item/BedItem bil
	placeBlock (Lnet/minecraft/world/item/BlockPlaceContext;Lnet/minecraft/world/level/block/state/BlockState;)Z a
net/minecraft/world/item/BlockItem bim
	block a
	appendHoverText (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/Level;Ljava/util/List;Lnet/minecraft/world/item/TooltipFlag;)V a
	canPlace (Lnet/minecraft/world/item/BlockPlaceContext;Lnet/minecraft/world/level/block/state/BlockState;)Z b
	fillItemCategory (Lnet/minecraft/world/item/CreativeModeTab;Lnet/minecraft/core/NonNullList;)V a
	getBlock ()Lnet/minecraft/world/level/block/Block; e
	getDescriptionId ()Ljava/lang/String; a
	getPlaceSound (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/sounds/SoundEvent; a
	getPlacementState (Lnet/minecraft/world/item/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; c
	mustSurvive ()Z d
	place (Lnet/minecraft/world/item/BlockPlaceContext;)Lnet/minecraft/world/InteractionResult; a
	placeBlock (Lnet/minecraft/world/item/BlockPlaceContext;Lnet/minecraft/world/level/block/state/BlockState;)Z a
	registerBlocks (Ljava/util/Map;Lnet/minecraft/world/item/Item;)V a
	updateBlockStateFromTag (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/Level;Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/state/BlockState; a
	updateCustomBlockEntityTag (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/block/state/BlockState;)Z a
	updateCustomBlockEntityTag (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/item/ItemStack;)Z a
	updatePlacementContext (Lnet/minecraft/world/item/BlockPlaceContext;)Lnet/minecraft/world/item/BlockPlaceContext; b
	updateState (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/state/properties/Property;Ljava/lang/String;)Lnet/minecraft/world/level/block/state/BlockState; a
	useOn (Lnet/minecraft/world/item/UseOnContext;)Lnet/minecraft/world/InteractionResult; a
net/minecraft/world/item/BlockPlaceContext bin
	relativePos g
	replaceClicked a
	at (Lnet/minecraft/world/item/BlockPlaceContext;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;)Lnet/minecraft/world/item/BlockPlaceContext; a
	canPlace ()Z b
	getClickedPos ()Lnet/minecraft/core/BlockPos; a
	getNearestLookingDirection ()Lnet/minecraft/core/Direction; d
	getNearestLookingDirections ()[Lnet/minecraft/core/Direction; e
	replacingClickedOnBlock ()Z c
net/minecraft/world/item/BoatItem bio
	ENTITY_PREDICATE a
	type b
	use (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResultHolder; a
net/minecraft/world/item/BoneMealItem bip
	addGrowthParticles (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;I)V a
	growCrop (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)Z a
	growWaterPlant (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;)Z a
	useOn (Lnet/minecraft/world/item/UseOnContext;)Lnet/minecraft/world/InteractionResult; a
net/minecraft/world/item/BookItem biq
	getEnchantmentValue ()I c
	isEnchantable (Lnet/minecraft/world/item/ItemStack;)Z f_
net/minecraft/world/item/BottleItem bir
	turnBottleIntoItem (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/item/ItemStack;)Lnet/minecraft/world/item/ItemStack; a
	use (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResultHolder; a
net/minecraft/world/item/BowItem bis
	getAllSupportedProjectiles ()Ljava/util/function/Predicate; b
	getDefaultProjectileRange ()I d
	getPowerForTime (I)F a
	getUseAnimation (Lnet/minecraft/world/item/ItemStack;)Lnet/minecraft/world/item/UseAnim; d_
	getUseDuration (Lnet/minecraft/world/item/ItemStack;)I e_
	releaseUsing (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/LivingEntity;I)V a
	use (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResultHolder; a
net/minecraft/world/item/BowlFoodItem bit
	finishUsingItem (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/LivingEntity;)Lnet/minecraft/world/item/ItemStack; a
net/minecraft/world/item/BucketItem biu
	content a
	checkExtraContent (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/core/BlockPos;)V a
	emptyBucket (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/BlockHitResult;)Z a
	getEmptySuccessItem (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/entity/player/Player;)Lnet/minecraft/world/item/ItemStack; a
	playEmptySound (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;)V a
	use (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResultHolder; a
net/minecraft/world/item/ChorusFruitItem biv
	finishUsingItem (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/LivingEntity;)Lnet/minecraft/world/item/ItemStack; a
net/minecraft/world/item/CompassItem biw
	LOGGER a
	addLodestoneTags (Lnet/minecraft/resources/ResourceKey;Lnet/minecraft/core/BlockPos;Lnet/minecraft/nbt/CompoundTag;)V a
	getDescriptionId (Lnet/minecraft/world/item/ItemStack;)Ljava/lang/String; f
	getLodestoneDimension (Lnet/minecraft/nbt/CompoundTag;)Ljava/util/Optional; a
	inventoryTick (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/Entity;IZ)V a
	isFoil (Lnet/minecraft/world/item/ItemStack;)Z e
	isLodestoneCompass (Lnet/minecraft/world/item/ItemStack;)Z d
	useOn (Lnet/minecraft/world/item/UseOnContext;)Lnet/minecraft/world/InteractionResult; a
net/minecraft/world/item/ComplexItem bix
	getUpdatePacket (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/player/Player;)Lnet/minecraft/network/protocol/Packet; a
	isComplex ()Z ae_
net/minecraft/world/item/CreativeModeTab biy
	TABS a
	TAB_BREWING k
	TAB_BUILDING_BLOCKS b
	TAB_COMBAT j
	TAB_DECORATIONS c
	TAB_FOOD h
	TAB_HOTBAR m
	TAB_INVENTORY n
	TAB_MATERIALS l
	TAB_MISC f
	TAB_REDSTONE d
	TAB_SEARCH g
	TAB_TOOLS i
	TAB_TRANSPORTATION e
	backgroundSuffix r
	canScroll s
	enchantmentCategories u
	iconItemStack v
	id o
	langId p
	recipeFolderName q
	showTitle t
	canScroll ()Z j
	fillItemList (Lnet/minecraft/core/NonNullList;)V a
	getBackgroundSuffix ()Ljava/lang/String; g
	getColumn ()I l
	getEnchantmentCategories ()[Lnet/minecraft/world/item/enchantment/EnchantmentCategory; o
	getIconItem ()Lnet/minecraft/world/item/ItemStack; e
	getId ()I a
	getLangId ()Ljava/lang/String; b
	getName ()Ljava/lang/String; d
	getRecipeFolderName ()Ljava/lang/String; c
	hasEnchantmentCategory (Lnet/minecraft/world/item/enchantment/EnchantmentCategory;)Z a
	hideScroll ()Lnet/minecraft/world/item/CreativeModeTab; k
	hideTitle ()Lnet/minecraft/world/item/CreativeModeTab; i
	isAlignedRight ()Z n
	isTopRow ()Z m
	makeIcon ()Lnet/minecraft/world/item/ItemStack; f
	setBackgroundSuffix (Ljava/lang/String;)Lnet/minecraft/world/item/CreativeModeTab; a
	setEnchantmentCategories ([Lnet/minecraft/world/item/enchantment/EnchantmentCategory;)Lnet/minecraft/world/item/CreativeModeTab; a
	setRecipeFolderName (Ljava/lang/String;)Lnet/minecraft/world/item/CreativeModeTab; b
	showTitle ()Z h
net/minecraft/world/item/CrossbowItem biz
	midLoadSoundPlayed d
	startSoundPlayed c
	addChargedProjectile (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/item/ItemStack;)V b
	appendHoverText (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/Level;Ljava/util/List;Lnet/minecraft/world/item/TooltipFlag;)V a
	clearChargedProjectiles (Lnet/minecraft/world/item/ItemStack;)V l
	containsChargedProjectile (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/item/Item;)Z a
	getAllSupportedProjectiles ()Ljava/util/function/Predicate; b
	getArrow (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/item/ItemStack;)Lnet/minecraft/world/entity/projectile/AbstractArrow; a
	getChargeDuration (Lnet/minecraft/world/item/ItemStack;)I g
	getChargedProjectiles (Lnet/minecraft/world/item/ItemStack;)Ljava/util/List; k
	getDefaultProjectileRange ()I d
	getPowerForTime (ILnet/minecraft/world/item/ItemStack;)F a
	getRandomShotPitch (Z)F a
	getShootingPower (Lnet/minecraft/world/item/ItemStack;)F m
	getShotPitches (Ljava/util/Random;)[F a
	getStartSound (I)Lnet/minecraft/sounds/SoundEvent; a
	getSupportedHeldProjectiles ()Ljava/util/function/Predicate; e
	getUseAnimation (Lnet/minecraft/world/item/ItemStack;)Lnet/minecraft/world/item/UseAnim; d_
	getUseDuration (Lnet/minecraft/world/item/ItemStack;)I e_
	isCharged (Lnet/minecraft/world/item/ItemStack;)Z d
	loadProjectile (Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/item/ItemStack;ZZ)Z a
	onCrossbowShot (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/item/ItemStack;)V a
	onUseTick (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/item/ItemStack;I)V a
	performShooting (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/InteractionHand;Lnet/minecraft/world/item/ItemStack;FF)V a
	releaseUsing (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/LivingEntity;I)V a
	setCharged (Lnet/minecraft/world/item/ItemStack;Z)V a
	shootProjectile (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/InteractionHand;Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/item/ItemStack;FZFFF)V a
	tryLoadProjectiles (Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/item/ItemStack;)Z a
	use (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResultHolder; a
net/minecraft/world/item/DebugStickItem bja
	canAttackBlock (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/player/Player;)Z a
	cycleState (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/state/properties/Property;Z)Lnet/minecraft/world/level/block/state/BlockState; a
	getNameHelper (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/state/properties/Property;)Ljava/lang/String; a
	getRelative (Ljava/lang/Iterable;Ljava/lang/Object;Z)Ljava/lang/Object; a
	handleInteraction (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;ZLnet/minecraft/world/item/ItemStack;)V a
	isFoil (Lnet/minecraft/world/item/ItemStack;)Z e
	message (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/network/chat/Component;)V a
	useOn (Lnet/minecraft/world/item/UseOnContext;)Lnet/minecraft/world/InteractionResult; a
net/minecraft/world/item/DiggerItem bjb
	attackDamageBaseline c
	blocks a
	defaultModifiers d
	speed b
	getAttackDamage ()F d
	getDefaultAttributeModifiers (Lnet/minecraft/world/entity/EquipmentSlot;)Lcom/google/common/collect/Multimap; a
	getDestroySpeed (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/block/state/BlockState;)F a
	hurtEnemy (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/entity/LivingEntity;)Z a
	mineBlock (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/Level;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/LivingEntity;)Z a
net/minecraft/world/item/DirectionalPlaceContext bjc
	direction g
	canPlace ()Z b
	getClickedPos ()Lnet/minecraft/core/BlockPos; a
	getHorizontalDirection ()Lnet/minecraft/core/Direction; f
	getNearestLookingDirection ()Lnet/minecraft/core/Direction; d
	getNearestLookingDirections ()[Lnet/minecraft/core/Direction; e
	getRotation ()F h
	isSecondaryUseActive ()Z g
	replacingClickedOnBlock ()Z c
net/minecraft/world/item/DoubleHighBlockItem bjd
	placeBlock (Lnet/minecraft/world/item/BlockPlaceContext;Lnet/minecraft/world/level/block/state/BlockState;)Z a
net/minecraft/world/item/DyeColor bje
	$VALUES A
	BLACK p
	BLUE l
	BROWN m
	BY_FIREWORK_COLOR r
	BY_ID q
	CYAN j
	GRAY h
	GREEN n
	LIGHT_BLUE d
	LIGHT_GRAY i
	LIME f
	MAGENTA c
	ORANGE b
	PINK g
	PURPLE k
	RED o
	WHITE a
	YELLOW e
	color u
	fireworkColor y
	id s
	name t
	textColor z
	textureDiffuseColor v
	textureDiffuseColorBGR w
	textureDiffuseColors x
	byFireworkColor (I)Lnet/minecraft/world/item/DyeColor; b
	byId (I)Lnet/minecraft/world/item/DyeColor; a
	byName (Ljava/lang/String;Lnet/minecraft/world/item/DyeColor;)Lnet/minecraft/world/item/DyeColor; a
	getFireworkColor ()I g
	getId ()I b
	getMaterialColor ()Lnet/minecraft/world/level/material/MaterialColor; f
	getName ()Ljava/lang/String; c
	getSerializedName ()Ljava/lang/String; a
	getTextColor ()I h
	getTextureDiffuseColorBGR ()I d
	getTextureDiffuseColors ()[F e
net/minecraft/world/item/DyeItem bjf
	ITEM_BY_COLOR a
	dyeColor b
	byColor (Lnet/minecraft/world/item/DyeColor;)Lnet/minecraft/world/item/DyeItem; a
	getDyeColor ()Lnet/minecraft/world/item/DyeColor; d
	interactLivingEntity (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResult; a
net/minecraft/world/item/DyeableArmorItem bjg
net/minecraft/world/item/DyeableHorseArmorItem bjh
net/minecraft/world/item/DyeableLeatherItem bji
	clearColor (Lnet/minecraft/world/item/ItemStack;)V c
	dyeArmor (Lnet/minecraft/world/item/ItemStack;Ljava/util/List;)Lnet/minecraft/world/item/ItemStack; a
	getColor (Lnet/minecraft/world/item/ItemStack;)I b
	hasCustomColor (Lnet/minecraft/world/item/ItemStack;)Z a
	setColor (Lnet/minecraft/world/item/ItemStack;I)V a
net/minecraft/world/item/EggItem bjj
	use (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResultHolder; a
net/minecraft/world/item/ElytraItem bjk
	isFlyEnabled (Lnet/minecraft/world/item/ItemStack;)Z d
	isValidRepairItem (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/item/ItemStack;)Z a
	use (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResultHolder; a
net/minecraft/world/item/EmptyMapItem bjl
	use (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResultHolder; a
net/minecraft/world/item/EnchantedBookItem bjm
	addEnchantment (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/item/enchantment/EnchantmentInstance;)V a
	appendHoverText (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/Level;Ljava/util/List;Lnet/minecraft/world/item/TooltipFlag;)V a
	createForEnchantment (Lnet/minecraft/world/item/enchantment/EnchantmentInstance;)Lnet/minecraft/world/item/ItemStack; a
	fillItemCategory (Lnet/minecraft/world/item/CreativeModeTab;Lnet/minecraft/core/NonNullList;)V a
	getEnchantments (Lnet/minecraft/world/item/ItemStack;)Lnet/minecraft/nbt/ListTag; d
	isEnchantable (Lnet/minecraft/world/item/ItemStack;)Z f_
	isFoil (Lnet/minecraft/world/item/ItemStack;)Z e
net/minecraft/world/item/EnchantedGoldenAppleItem bjn
	isFoil (Lnet/minecraft/world/item/ItemStack;)Z e
net/minecraft/world/item/EndCrystalItem bjo
	isFoil (Lnet/minecraft/world/item/ItemStack;)Z e
	useOn (Lnet/minecraft/world/item/UseOnContext;)Lnet/minecraft/world/InteractionResult; a
net/minecraft/world/item/EnderEyeItem bjp
	use (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResultHolder; a
	useOn (Lnet/minecraft/world/item/UseOnContext;)Lnet/minecraft/world/InteractionResult; a
net/minecraft/world/item/EnderpearlItem bjq
	use (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResultHolder; a
net/minecraft/world/item/ExperienceBottleItem bjr
	isFoil (Lnet/minecraft/world/item/ItemStack;)Z e
	use (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResultHolder; a
net/minecraft/world/item/FireChargeItem bjs
	playSound (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)V a
	useOn (Lnet/minecraft/world/item/UseOnContext;)Lnet/minecraft/world/InteractionResult; a
net/minecraft/world/item/FireworkRocketItem bjt
	appendHoverText (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/Level;Ljava/util/List;Lnet/minecraft/world/item/TooltipFlag;)V a
	use (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResultHolder; a
	useOn (Lnet/minecraft/world/item/UseOnContext;)Lnet/minecraft/world/InteractionResult; a
net/minecraft/world/item/FireworkRocketItem$Shape bjt$a
	$VALUES i
	BURST e
	BY_ID f
	CREEPER d
	LARGE_BALL b
	SMALL_BALL a
	STAR c
	id g
	name h
	byId (I)Lnet/minecraft/world/item/FireworkRocketItem$Shape; a
	getId ()I a
	getName ()Ljava/lang/String; b
net/minecraft/world/item/FireworkStarItem bju
	appendColors (Lnet/minecraft/network/chat/MutableComponent;[I)Lnet/minecraft/network/chat/Component; a
	appendHoverText (Lnet/minecraft/nbt/CompoundTag;Ljava/util/List;)V a
	appendHoverText (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/Level;Ljava/util/List;Lnet/minecraft/world/item/TooltipFlag;)V a
	getColorName (I)Lnet/minecraft/network/chat/Component; a
net/minecraft/world/item/FishBucketItem bjv
	type a
	appendHoverText (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/Level;Ljava/util/List;Lnet/minecraft/world/item/TooltipFlag;)V a
	checkExtraContent (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/core/BlockPos;)V a
	playEmptySound (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;)V a
	spawn (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/core/BlockPos;)V b
net/minecraft/world/item/FishingRodItem bjw
	getEnchantmentValue ()I c
	use (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResultHolder; a
net/minecraft/world/item/FlintAndSteelItem bjx
	useOn (Lnet/minecraft/world/item/UseOnContext;)Lnet/minecraft/world/InteractionResult; a
net/minecraft/world/item/FoodOnAStickItem bjy
	canInteractWith a
	consumeItemDamage b
	use (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResultHolder; a
net/minecraft/world/item/GameMasterBlockItem bjz
	getPlacementState (Lnet/minecraft/world/item/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; c
net/minecraft/world/item/HangingEntityItem bka
	type a
	mayPlace (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/core/Direction;Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/core/BlockPos;)Z a
	useOn (Lnet/minecraft/world/item/UseOnContext;)Lnet/minecraft/world/InteractionResult; a
net/minecraft/world/item/HoeItem bkb
	DIGGABLES c
	TILLABLES a
	useOn (Lnet/minecraft/world/item/UseOnContext;)Lnet/minecraft/world/InteractionResult; a
net/minecraft/world/item/HoneyBottleItem bkc
	finishUsingItem (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/LivingEntity;)Lnet/minecraft/world/item/ItemStack; a
	getDrinkingSound ()Lnet/minecraft/sounds/SoundEvent; ag_
	getEatingSound ()Lnet/minecraft/sounds/SoundEvent; af_
	getUseAnimation (Lnet/minecraft/world/item/ItemStack;)Lnet/minecraft/world/item/UseAnim; d_
	getUseDuration (Lnet/minecraft/world/item/ItemStack;)I e_
	use (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResultHolder; a
net/minecraft/world/item/HorseArmorItem bkd
	protection a
	texture b
	getProtection ()I g
	getTexture ()Lnet/minecraft/resources/ResourceLocation; f
net/minecraft/world/item/Item bke
	BASE_ATTACK_DAMAGE_UUID f
	BASE_ATTACK_SPEED_UUID g
	BY_BLOCK e
	category i
	craftingRemainingItem j
	descriptionId k
	foodProperties l
	isFireResistant d
	maxDamage c
	maxStackSize b
	random h
	rarity a
	allowdedIn (Lnet/minecraft/world/item/CreativeModeTab;)Z a
	appendHoverText (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/Level;Ljava/util/List;Lnet/minecraft/world/item/TooltipFlag;)V a
	asItem ()Lnet/minecraft/world/item/Item; h
	byBlock (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/world/item/Item; a
	byId (I)Lnet/minecraft/world/item/Item; b
	canAttackBlock (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/player/Player;)Z a
	canBeDepleted ()Z k
	canBeHurtBy (Lnet/minecraft/world/damagesource/DamageSource;)Z a
	fillItemCategory (Lnet/minecraft/world/item/CreativeModeTab;Lnet/minecraft/core/NonNullList;)V a
	finishUsingItem (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/LivingEntity;)Lnet/minecraft/world/item/ItemStack; a
	getCraftingRemainingItem ()Lnet/minecraft/world/item/Item; o
	getDefaultAttributeModifiers (Lnet/minecraft/world/entity/EquipmentSlot;)Lcom/google/common/collect/Multimap; a
	getDefaultInstance ()Lnet/minecraft/world/item/ItemStack; r
	getDescription ()Lnet/minecraft/network/chat/Component; l
	getDescriptionId ()Ljava/lang/String; a
	getDescriptionId (Lnet/minecraft/world/item/ItemStack;)Ljava/lang/String; f
	getDestroySpeed (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/block/state/BlockState;)F a
	getDrinkingSound ()Lnet/minecraft/sounds/SoundEvent; ag_
	getEatingSound ()Lnet/minecraft/sounds/SoundEvent; af_
	getEnchantmentValue ()I c
	getFoodProperties ()Lnet/minecraft/world/food/FoodProperties; t
	getId (Lnet/minecraft/world/item/Item;)I a
	getItemCategory ()Lnet/minecraft/world/item/CreativeModeTab; q
	getMaxDamage ()I j
	getMaxStackSize ()I i
	getName (Lnet/minecraft/world/item/ItemStack;)Lnet/minecraft/network/chat/Component; h
	getOrCreateDescriptionId ()Ljava/lang/String; m
	getPlayerPOVHitResult (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/level/ClipContext$Fluid;)Lnet/minecraft/world/phys/BlockHitResult; a
	getRarity (Lnet/minecraft/world/item/ItemStack;)Lnet/minecraft/world/item/Rarity; i
	getUseAnimation (Lnet/minecraft/world/item/ItemStack;)Lnet/minecraft/world/item/UseAnim; d_
	getUseDuration (Lnet/minecraft/world/item/ItemStack;)I e_
	hasCraftingRemainingItem ()Z p
	hurtEnemy (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/entity/LivingEntity;)Z a
	interactLivingEntity (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResult; a
	inventoryTick (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/Entity;IZ)V a
	is (Lnet/minecraft/tags/Tag;)Z a
	isComplex ()Z ae_
	isCorrectToolForDrops (Lnet/minecraft/world/level/block/state/BlockState;)Z b
	isEdible ()Z s
	isEnchantable (Lnet/minecraft/world/item/ItemStack;)Z f_
	isFireResistant ()Z u
	isFoil (Lnet/minecraft/world/item/ItemStack;)Z e
	isValidRepairItem (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/item/ItemStack;)Z a
	mineBlock (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/Level;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/LivingEntity;)Z a
	onCraftedBy (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/player/Player;)V b
	onUseTick (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/item/ItemStack;I)V a
	releaseUsing (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/LivingEntity;I)V a
	shouldOverrideMultiplayerNbt ()Z n
	use (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResultHolder; a
	useOn (Lnet/minecraft/world/item/UseOnContext;)Lnet/minecraft/world/InteractionResult; a
	useOnRelease (Lnet/minecraft/world/item/ItemStack;)Z j
	verifyTagAfterLoad (Lnet/minecraft/nbt/CompoundTag;)Z b
net/minecraft/world/item/Item$Properties bke$a
	category d
	craftingRemainingItem c
	foodProperties f
	isFireResistant g
	maxDamage b
	maxStackSize a
	rarity e
	craftRemainder (Lnet/minecraft/world/item/Item;)Lnet/minecraft/world/item/Item$Properties; a
	defaultDurability (I)Lnet/minecraft/world/item/Item$Properties; b
	durability (I)Lnet/minecraft/world/item/Item$Properties; c
	fireResistant ()Lnet/minecraft/world/item/Item$Properties; a
	food (Lnet/minecraft/world/food/FoodProperties;)Lnet/minecraft/world/item/Item$Properties; a
	rarity (Lnet/minecraft/world/item/Rarity;)Lnet/minecraft/world/item/Item$Properties; a
	stacksTo (I)Lnet/minecraft/world/item/Item$Properties; a
	tab (Lnet/minecraft/world/item/CreativeModeTab;)Lnet/minecraft/world/item/Item$Properties; a
net/minecraft/world/item/ItemCooldowns bkf
	cooldowns a
	tickCount b
	addCooldown (Lnet/minecraft/world/item/Item;I)V a
	getCooldownPercent (Lnet/minecraft/world/item/Item;F)F a
	isOnCooldown (Lnet/minecraft/world/item/Item;)Z a
	onCooldownEnded (Lnet/minecraft/world/item/Item;)V c
	onCooldownStarted (Lnet/minecraft/world/item/Item;I)V b
	removeCooldown (Lnet/minecraft/world/item/Item;)V b
	tick ()V a
net/minecraft/world/item/ItemCooldowns$CooldownInstance bkf$a
	endTime c
	startTime b
net/minecraft/world/item/ItemFrameItem bkg
	mayPlace (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/core/Direction;Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/core/BlockPos;)Z a
net/minecraft/world/item/ItemNameBlockItem bkh
	getDescriptionId ()Ljava/lang/String; a
net/minecraft/world/item/ItemStack bki
	ATTRIBUTE_MODIFIER_FORMAT c
	CODEC a
	EMPTY b
	LOGGER d
	LORE_STYLE e
	cachedBreakBlock l
	cachedBreakBlockResult m
	cachedPlaceBlock n
	cachedPlaceBlockResult o
	count f
	emptyCacheFlag j
	entityRepresentation k
	item h
	popTime g
	tag i
	addAttributeModifier (Lnet/minecraft/world/entity/ai/attributes/Attribute;Lnet/minecraft/world/entity/ai/attributes/AttributeModifier;Lnet/minecraft/world/entity/EquipmentSlot;)V a
	addTagElement (Ljava/lang/String;Lnet/minecraft/nbt/Tag;)V a
	appendEnchantmentNames (Ljava/util/List;Lnet/minecraft/nbt/ListTag;)V a
	areSameBlocks (Lnet/minecraft/world/level/block/state/pattern/BlockInWorld;Lnet/minecraft/world/level/block/state/pattern/BlockInWorld;)Z a
	copy ()Lnet/minecraft/world/item/ItemStack; i
	enchant (Lnet/minecraft/world/item/enchantment/Enchantment;I)V a
	expandBlockState (Ljava/lang/String;)Ljava/util/Collection; d
	finishUsingItem (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/LivingEntity;)Lnet/minecraft/world/item/ItemStack; a
	getAttributeModifiers (Lnet/minecraft/world/entity/EquipmentSlot;)Lcom/google/common/collect/Multimap; a
	getBaseRepairCost ()I B
	getCount ()I E
	getDamageValue ()I g
	getDescriptionId ()Ljava/lang/String; j
	getDestroySpeed (Lnet/minecraft/world/level/block/state/BlockState;)F a
	getDisplayName ()Lnet/minecraft/network/chat/Component; C
	getDrinkingSound ()Lnet/minecraft/sounds/SoundEvent; G
	getEatingSound ()Lnet/minecraft/sounds/SoundEvent; H
	getEnchantmentTags ()Lnet/minecraft/nbt/ListTag; q
	getEntityRepresentation ()Lnet/minecraft/world/entity/Entity; A
	getFrame ()Lnet/minecraft/world/entity/decoration/ItemFrame; z
	getHoverName ()Lnet/minecraft/network/chat/Component; r
	getItem ()Lnet/minecraft/world/item/Item; b
	getMaxDamage ()I h
	getMaxStackSize ()I c
	getOrCreateTag ()Lnet/minecraft/nbt/CompoundTag; p
	getOrCreateTagElement (Ljava/lang/String;)Lnet/minecraft/nbt/CompoundTag; a
	getPopTime ()I D
	getRarity ()Lnet/minecraft/world/item/Rarity; v
	getTag ()Lnet/minecraft/nbt/CompoundTag; o
	getTagElement (Ljava/lang/String;)Lnet/minecraft/nbt/CompoundTag; b
	getTooltipLines (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/item/TooltipFlag;)Ljava/util/List; a
	getUseAnimation ()Lnet/minecraft/world/item/UseAnim; l
	getUseDuration ()I k
	grow (I)V f
	hasAdventureModeBreakTagForBlock (Lnet/minecraft/tags/TagManager;Lnet/minecraft/world/level/block/state/pattern/BlockInWorld;)Z a
	hasAdventureModePlaceTagForBlock (Lnet/minecraft/tags/TagManager;Lnet/minecraft/world/level/block/state/pattern/BlockInWorld;)Z b
	hasCustomHoverName ()Z t
	hasFoil ()Z u
	hasTag ()Z n
	hurt (ILjava/util/Random;Lnet/minecraft/server/level/ServerPlayer;)Z a
	hurtAndBreak (ILnet/minecraft/world/entity/LivingEntity;Ljava/util/function/Consumer;)V a
	hurtEnemy (Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/entity/player/Player;)V a
	interactLivingEntity (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResult; a
	inventoryTick (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/Entity;IZ)V a
	isCorrectToolForDrops (Lnet/minecraft/world/level/block/state/BlockState;)Z b
	isDamageableItem ()Z e
	isDamaged ()Z f
	isEdible ()Z F
	isEmpty ()Z a
	isEnchantable ()Z w
	isEnchanted ()Z x
	isFramed ()Z y
	isSame (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/item/ItemStack;)Z c
	isSameIgnoreDurability (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/item/ItemStack;)Z d
	isStackable ()Z d
	matches (Lnet/minecraft/world/item/ItemStack;)Z c
	matches (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/item/ItemStack;)Z b
	mineBlock (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/player/Player;)V a
	of (Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/world/item/ItemStack; a
	onCraftedBy (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/player/Player;I)V a
	onUseTick (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/LivingEntity;I)V b
	releaseUsing (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/LivingEntity;I)V a
	removeTagKey (Ljava/lang/String;)V c
	resetHoverName ()V s
	sameItem (Lnet/minecraft/world/item/ItemStack;)Z a
	sameItemStackIgnoreDurability (Lnet/minecraft/world/item/ItemStack;)Z b
	save (Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/nbt/CompoundTag; b
	setCount (I)V e
	setDamageValue (I)V b
	setEntityRepresentation (Lnet/minecraft/world/entity/Entity;)V a
	setHoverName (Lnet/minecraft/network/chat/Component;)Lnet/minecraft/world/item/ItemStack; a
	setPopTime (I)V d
	setRepairCost (I)V c
	setTag (Lnet/minecraft/nbt/CompoundTag;)V c
	shrink (I)V g
	split (I)Lnet/minecraft/world/item/ItemStack; a
	tagMatches (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/item/ItemStack;)Z a
	updateEmptyCacheFlag ()V I
	use (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResultHolder; a
	useOn (Lnet/minecraft/world/item/UseOnContext;)Lnet/minecraft/world/InteractionResult; a
	useOnRelease ()Z m
net/minecraft/world/item/ItemUtils bkj
	createBucketResult (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/item/ItemStack;)Lnet/minecraft/world/item/ItemStack; a
	useDrink (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResultHolder; a
net/minecraft/world/item/Items bkk
	ACACIA_BOAT qr
	ACACIA_BUTTON eX
	ACACIA_DOOR jQ
	ACACIA_FENCE de
	ACACIA_FENCE_GATE dW
	ACACIA_LEAVES av
	ACACIA_LOG P
	ACACIA_PLANKS t
	ACACIA_PRESSURE_PLATE cN
	ACACIA_SAPLING B
	ACACIA_SIGN lG
	ACACIA_SLAB bM
	ACACIA_STAIRS gf
	ACACIA_TRAPDOOR dw
	ACACIA_WOOD an
	ACTIVATOR_RAIL fr
	AIR a
	ALLIUM bk
	ANCIENT_DEBRIS rx
	ANDESITE g
	ANDESITE_SLAB jG
	ANDESITE_STAIRS jt
	ANDESITE_WALL eK
	ANVIL fc
	APPLE ke
	ARMOR_STAND pB
	ARROW kg
	AZURE_BLUET bl
	BAKED_POTATO oZ
	BAMBOO bF
	BARREL qZ
	BARRIER fJ
	BASALT dn
	BAT_SPAWN_EGG nF
	BEACON eA
	BEDROCK D
	BEEF nl
	BEEHIVE rr
	BEETROOT qe
	BEETROOT_SEEDS qf
	BEETROOT_SOUP qg
	BEE_NEST rq
	BEE_SPAWN_EGG nG
	BELL ri
	BIRCH_BOAT qp
	BIRCH_BUTTON eV
	BIRCH_DOOR jO
	BIRCH_FENCE dc
	BIRCH_FENCE_GATE dU
	BIRCH_LEAVES at
	BIRCH_LOG N
	BIRCH_PLANKS r
	BIRCH_PRESSURE_PLATE cL
	BIRCH_SAPLING z
	BIRCH_SIGN lE
	BIRCH_SLAB bK
	BIRCH_STAIRS ev
	BIRCH_TRAPDOOR du
	BIRCH_WOOD al
	BLACKSTONE rA
	BLACKSTONE_SLAB rB
	BLACKSTONE_STAIRS rC
	BLACKSTONE_WALL eP
	BLACK_BANNER qa
	BLACK_BED nd
	BLACK_CARPET gb
	BLACK_CONCRETE il
	BLACK_CONCRETE_POWDER iB
	BLACK_DYE mJ
	BLACK_GLAZED_TERRACOTTA hV
	BLACK_SHULKER_BOX hF
	BLACK_STAINED_GLASS gE
	BLACK_STAINED_GLASS_PANE gU
	BLACK_TERRACOTTA fI
	BLACK_WOOL bg
	BLAST_FURNACE rb
	BLAZE_POWDER nz
	BLAZE_ROD nr
	BLAZE_SPAWN_EGG nH
	BLUE_BANNER pW
	BLUE_BED mZ
	BLUE_CARPET fX
	BLUE_CONCRETE ih
	BLUE_CONCRETE_POWDER ix
	BLUE_DYE mH
	BLUE_GLAZED_TERRACOTTA hR
	BLUE_ICE jh
	BLUE_ORCHID bj
	BLUE_SHULKER_BOX hB
	BLUE_STAINED_GLASS gA
	BLUE_STAINED_GLASS_PANE gQ
	BLUE_TERRACOTTA fE
	BLUE_WOOL bc
	BONE mL
	BONE_BLOCK hm
	BONE_MEAL mG
	BOOK mc
	BOOKSHELF cm
	BOW kf
	BOWL kC
	BRAIN_CORAL iO
	BRAIN_CORAL_BLOCK iJ
	BRAIN_CORAL_FAN iY
	BREAD kX
	BREWING_STAND nB
	BRICK lY
	BRICKS ck
	BRICK_SLAB bW
	BRICK_STAIRS ea
	BRICK_WALL eD
	BROWN_BANNER pX
	BROWN_BED na
	BROWN_CARPET fY
	BROWN_CONCRETE ii
	BROWN_CONCRETE_POWDER iy
	BROWN_DYE mI
	BROWN_GLAZED_TERRACOTTA hS
	BROWN_MUSHROOM bu
	BROWN_MUSHROOM_BLOCK dK
	BROWN_SHULKER_BOX hC
	BROWN_STAINED_GLASS gB
	BROWN_STAINED_GLASS_PANE gR
	BROWN_TERRACOTTA fF
	BROWN_WOOL bd
	BUBBLE_CORAL iP
	BUBBLE_CORAL_BLOCK iK
	BUBBLE_CORAL_FAN iZ
	BUCKET lK
	CACTUS cX
	CAKE mN
	CAMPFIRE rm
	CARROT oX
	CARROT_ON_A_STICK pj
	CARTOGRAPHY_TABLE rc
	CARVED_PUMPKIN dj
	CAT_SPAWN_EGG nI
	CAULDRON nC
	CAVE_SPIDER_SPAWN_EGG nJ
	CHAIN dO
	CHAINMAIL_BOOTS lf
	CHAINMAIL_CHESTPLATE ld
	CHAINMAIL_HELMET lc
	CHAINMAIL_LEGGINGS le
	CHAIN_COMMAND_BLOCK hh
	CHARCOAL ki
	CHEST cy
	CHEST_MINECART me
	CHICKEN nn
	CHICKEN_SPAWN_EGG nK
	CHIPPED_ANVIL fd
	CHISELED_NETHER_BRICKS eg
	CHISELED_POLISHED_BLACKSTONE rH
	CHISELED_QUARTZ_BLOCK fm
	CHISELED_RED_SANDSTONE hd
	CHISELED_SANDSTONE aE
	CHISELED_STONE_BRICKS dJ
	CHORUS_FLOWER cs
	CHORUS_FRUIT qc
	CHORUS_PLANT cr
	CLAY cY
	CLAY_BALL lZ
	CLOCK mj
	COAL kh
	COAL_BLOCK gd
	COAL_ORE J
	COARSE_DIRT k
	COBBLESTONE o
	COBBLESTONE_SLAB bV
	COBBLESTONE_STAIRS cG
	COBBLESTONE_WALL eB
	COBWEB aK
	COCOA_BEANS mu
	COD ml
	COD_BUCKET lW
	COD_SPAWN_EGG nL
	COMMAND_BLOCK ez
	COMMAND_BLOCK_MINECART pI
	COMPARATOR jV
	COMPASS mh
	COMPOSTER qY
	CONDUIT ji
	COOKED_BEEF nm
	COOKED_CHICKEN no
	COOKED_COD mp
	COOKED_MUTTON pK
	COOKED_PORKCHOP ly
	COOKED_RABBIT px
	COOKED_SALMON mq
	COOKIE ne
	CORNFLOWER br
	COW_SPAWN_EGG nM
	CRACKED_NETHER_BRICKS ef
	CRACKED_POLISHED_BLACKSTONE_BRICKS rL
	CRACKED_STONE_BRICKS dI
	CRAFTING_TABLE cB
	CREEPER_BANNER_PATTERN qT
	CREEPER_HEAD ph
	CREEPER_SPAWN_EGG nN
	CRIMSON_BUTTON eZ
	CRIMSON_DOOR jS
	CRIMSON_FENCE dg
	CRIMSON_FENCE_GATE dY
	CRIMSON_FUNGUS bw
	CRIMSON_HYPHAE ap
	CRIMSON_NYLIUM m
	CRIMSON_PLANKS v
	CRIMSON_PRESSURE_PLATE cP
	CRIMSON_ROOTS by
	CRIMSON_SIGN lI
	CRIMSON_SLAB bO
	CRIMSON_STAIRS ex
	CRIMSON_STEM R
	CRIMSON_TRAPDOOR dy
	CROSSBOW qP
	CRYING_OBSIDIAN rz
	CUT_RED_SANDSTONE he
	CUT_RED_SANDSTONE_SLAB cb
	CUT_SANDSTONE aF
	CUT_STANDSTONE_SLAB bT
	CYAN_BANNER pU
	CYAN_BED mX
	CYAN_CARPET fV
	CYAN_CONCRETE if
	CYAN_CONCRETE_POWDER iv
	CYAN_DYE mx
	CYAN_GLAZED_TERRACOTTA hP
	CYAN_SHULKER_BOX hz
	CYAN_STAINED_GLASS gy
	CYAN_STAINED_GLASS_PANE gO
	CYAN_TERRACOTTA fC
	CYAN_WOOL ba
	DAMAGED_ANVIL fe
	DANDELION bh
	DARK_OAK_BOAT qs
	DARK_OAK_BUTTON eY
	DARK_OAK_DOOR jR
	DARK_OAK_FENCE df
	DARK_OAK_FENCE_GATE dX
	DARK_OAK_LEAVES aw
	DARK_OAK_LOG Q
	DARK_OAK_PLANKS u
	DARK_OAK_PRESSURE_PLATE cO
	DARK_OAK_SAPLING C
	DARK_OAK_SIGN lH
	DARK_OAK_SLAB bN
	DARK_OAK_STAIRS gg
	DARK_OAK_TRAPDOOR dx
	DARK_OAK_WOOD ao
	DARK_PRISMARINE gX
	DARK_PRISMARINE_SLAB cf
	DARK_PRISMARINE_STAIRS ha
	DAYLIGHT_DETECTOR fi
	DEAD_BRAIN_CORAL iS
	DEAD_BRAIN_CORAL_BLOCK iE
	DEAD_BRAIN_CORAL_FAN jd
	DEAD_BUBBLE_CORAL iT
	DEAD_BUBBLE_CORAL_BLOCK iF
	DEAD_BUBBLE_CORAL_FAN je
	DEAD_BUSH aN
	DEAD_FIRE_CORAL iU
	DEAD_FIRE_CORAL_BLOCK iG
	DEAD_FIRE_CORAL_FAN jf
	DEAD_HORN_CORAL iV
	DEAD_HORN_CORAL_BLOCK iH
	DEAD_HORN_CORAL_FAN jg
	DEAD_TUBE_CORAL iW
	DEAD_TUBE_CORAL_BLOCK iD
	DEAD_TUBE_CORAL_FAN jc
	DEBUG_STICK qx
	DETECTOR_RAIL aI
	DIAMOND kj
	DIAMOND_AXE kA
	DIAMOND_BLOCK cA
	DIAMOND_BOOTS ln
	DIAMOND_CHESTPLATE ll
	DIAMOND_HELMET lk
	DIAMOND_HOE kS
	DIAMOND_HORSE_ARMOR pE
	DIAMOND_LEGGINGS lm
	DIAMOND_ORE cz
	DIAMOND_PICKAXE kz
	DIAMOND_SHOVEL ky
	DIAMOND_SWORD kx
	DIORITE e
	DIORITE_SLAB jJ
	DIORITE_STAIRS jw
	DIORITE_WALL eO
	DIRT j
	DISPENSER aC
	DOLPHIN_SPAWN_EGG nO
	DONKEY_SPAWN_EGG nP
	DRAGON_BREATH qh
	DRAGON_EGG en
	DRAGON_HEAD pi
	DRIED_KELP ni
	DRIED_KELP_BLOCK ma
	DROPPER fs
	DROWNED_SPAWN_EGG nQ
	EGG mg
	ELDER_GUARDIAN_SPAWN_EGG nR
	ELYTRA qn
	EMERALD oU
	EMERALD_BLOCK et
	EMERALD_ORE eq
	ENCHANTED_BOOK pp
	ENCHANTED_GOLDEN_APPLE lB
	ENCHANTING_TABLE ej
	ENDERMAN_SPAWN_EGG nS
	ENDERMITE_SPAWN_EGG nT
	ENDER_CHEST er
	ENDER_EYE nD
	ENDER_PEARL nq
	END_CRYSTAL qb
	END_PORTAL_FRAME ek
	END_ROD cq
	END_STONE el
	END_STONE_BRICKS em
	END_STONE_BRICK_SLAB jC
	END_STONE_BRICK_STAIRS jo
	END_STONE_BRICK_WALL eN
	EVOKER_SPAWN_EGG nU
	EXPERIENCE_BOTTLE oQ
	FARMLAND cC
	FEATHER kN
	FERMENTED_SPIDER_EYE ny
	FERN aM
	FILLED_MAP nf
	FIREWORK_ROCKET pn
	FIREWORK_STAR po
	FIRE_CHARGE oR
	FIRE_CORAL iQ
	FIRE_CORAL_BLOCK iL
	FIRE_CORAL_FAN ja
	FISHING_ROD mi
	FLETCHING_TABLE rd
	FLINT lw
	FLINT_AND_STEEL kd
	FLOWER_BANNER_PATTERN qS
	FLOWER_POT oW
	FOX_SPAWN_EGG nV
	FURNACE cD
	FURNACE_MINECART mf
	GHAST_SPAWN_EGG nW
	GHAST_TEAR ns
	GILDED_BLACKSTONE rD
	GLASS az
	GLASS_BOTTLE nw
	GLASS_PANE dP
	GLISTERING_MELON_SLICE nE
	GLOBE_BANNER_PATTER qW
	GLOWSTONE dq
	GLOWSTONE_DUST mk
	GOLDEN_APPLE lA
	GOLDEN_AXE kH
	GOLDEN_BOOTS lr
	GOLDEN_CARROT pc
	GOLDEN_CHESTPLATE lp
	GOLDEN_HELMET lo
	GOLDEN_HOE kT
	GOLDEN_HORSE_ARMOR pD
	GOLDEN_LEGGINGS lq
	GOLDEN_PICKAXE kG
	GOLDEN_SHOVEL kF
	GOLDEN_SWORD kE
	GOLD_BLOCK bG
	GOLD_INGOT kl
	GOLD_NUGGET nt
	GOLD_ORE H
	GRANITE c
	GRANITE_SLAB jF
	GRANITE_STAIRS js
	GRANITE_WALL eH
	GRASS aL
	GRASS_BLOCK i
	GRASS_PATH gi
	GRAVEL G
	GRAY_BANNER pS
	GRAY_BED mV
	GRAY_CARPET fT
	GRAY_CONCRETE id
	GRAY_CONCRETE_POWDER it
	GRAY_DYE mz
	GRAY_GLAZED_TERRACOTTA hN
	GRAY_SHULKER_BOX hx
	GRAY_STAINED_GLASS gw
	GRAY_STAINED_GLASS_PANE gM
	GRAY_TERRACOTTA fA
	GRAY_WOOL aY
	GREEN_BANNER pY
	GREEN_BED nb
	GREEN_CARPET fZ
	GREEN_CONCRETE ij
	GREEN_CONCRETE_POWDER iz
	GREEN_DYE mt
	GREEN_GLAZED_TERRACOTTA hT
	GREEN_SHULKER_BOX hD
	GREEN_STAINED_GLASS gC
	GREEN_STAINED_GLASS_PANE gS
	GREEN_TERRACOTTA fG
	GREEN_WOOL be
	GRINDSTONE re
	GUARDIAN_SPAWN_EGG nX
	GUNPOWDER kO
	HAY_BLOCK fL
	HEART_OF_THE_SEA qO
	HEAVY_WEIGHTED_PRESSURE_PLATE fh
	HOGLIN_SPAWN_EGG nY
	HONEYCOMB rp
	HONEYCOMB_BLOCK ru
	HONEY_BLOCK rt
	HONEY_BOTTLE rs
	HOPPER fl
	HOPPER_MINECART pt
	HORN_CORAL iR
	HORN_CORAL_BLOCK iM
	HORN_CORAL_FAN jb
	HORSE_SPAWN_EGG nZ
	HUSK_SPAWN_EGG oa
	ICE cV
	INFESTED_CHISELED_STONE_BRICKS dF
	INFESTED_COBBLESTONE dB
	INFESTED_CRACKED_STONE_BRICKS dE
	INFESTED_MOSSY_STONE_BRICKS dD
	INFESTED_STONE dA
	INFESTED_STONE_BRICKS dC
	INK_SAC mr
	IRON_AXE kc
	IRON_BARS dN
	IRON_BLOCK bH
	IRON_BOOTS lj
	IRON_CHESTPLATE lh
	IRON_DOOR jL
	IRON_HELMET lg
	IRON_HOE kR
	IRON_HORSE_ARMOR pC
	IRON_INGOT kk
	IRON_LEGGINGS li
	IRON_NUGGET qv
	IRON_ORE I
	IRON_PICKAXE kb
	IRON_SHOVEL ka
	IRON_SWORD ko
	IRON_TRAPDOOR fK
	ITEM_FRAME oV
	JACK_O_LANTERN dr
	JIGSAW jX
	JUKEBOX cZ
	JUNGLE_BOAT qq
	JUNGLE_BUTTON eW
	JUNGLE_DOOR jP
	JUNGLE_FENCE dd
	JUNGLE_FENCE_GATE dV
	JUNGLE_LEAVES au
	JUNGLE_LOG O
	JUNGLE_PLANKS s
	JUNGLE_PRESSURE_PLATE cM
	JUNGLE_SAPLING A
	JUNGLE_SIGN lF
	JUNGLE_SLAB bL
	JUNGLE_STAIRS ew
	JUNGLE_TRAPDOOR dv
	JUNGLE_WOOD am
	KELP bE
	KNOWLEDGE_BOOK qw
	LADDER cE
	LANTERN rj
	LAPIS_BLOCK aB
	LAPIS_LAZULI mv
	LAPIS_ORE aA
	LARGE_FERN go
	LAVA_BUCKET lM
	LEAD pG
	LEATHER lS
	LEATHER_BOOTS lb
	LEATHER_CHESTPLATE kZ
	LEATHER_HELMET kY
	LEATHER_HORSE_ARMOR pF
	LEATHER_LEGGINGS la
	LECTERN rf
	LEVER cH
	LIGHT_BLUE_BANNER pO
	LIGHT_BLUE_BED mR
	LIGHT_BLUE_CARPET fP
	LIGHT_BLUE_CONCRETE hZ
	LIGHT_BLUE_CONCRETE_POWDER ip
	LIGHT_BLUE_DYE mD
	LIGHT_BLUE_GLAZED_TERRACOTTA hJ
	LIGHT_BLUE_SHULKER_BOX ht
	LIGHT_BLUE_STAINED_GLASS gs
	LIGHT_BLUE_STAINED_GLASS_PANE gI
	LIGHT_BLUE_TERRACOTTA fw
	LIGHT_BLUE_WOOL aU
	LIGHT_GRAY_BANNER pT
	LIGHT_GRAY_BED mW
	LIGHT_GRAY_CARPET fU
	LIGHT_GRAY_CONCRETE ie
	LIGHT_GRAY_CONCRETE_POWDER iu
	LIGHT_GRAY_DYE my
	LIGHT_GRAY_GLAZED_TERRACOTTA hO
	LIGHT_GRAY_SHULKER_BOX hy
	LIGHT_GRAY_STAINED_GLASS gx
	LIGHT_GRAY_STAINED_GLASS_PANE gN
	LIGHT_GRAY_TERRACOTTA fB
	LIGHT_GRAY_WOOL aZ
	LIGHT_WEIGHTED_PRESSURE_PLATE fg
	LILAC gk
	LILY_OF_THE_VALLEY bs
	LILY_PAD ed
	LIME_BANNER pQ
	LIME_BED mT
	LIME_CARPET fR
	LIME_CONCRETE ib
	LIME_CONCRETE_POWDER ir
	LIME_DYE mB
	LIME_GLAZED_TERRACOTTA hL
	LIME_SHULKER_BOX hv
	LIME_STAINED_GLASS gu
	LIME_STAINED_GLASS_PANE gK
	LIME_TERRACOTTA fy
	LIME_WOOL aW
	LINGERING_POTION ql
	LLAMA_SPAWN_EGG ob
	LODESTONE rv
	LOOM qR
	MAGENTA_BANNER pN
	MAGENTA_BED mQ
	MAGENTA_CARPET fO
	MAGENTA_CONCRETE hY
	MAGENTA_CONCRETE_POWDER io
	MAGENTA_DYE mE
	MAGENTA_GLAZED_TERRACOTTA hI
	MAGENTA_SHULKER_BOX hs
	MAGENTA_STAINED_GLASS gr
	MAGENTA_STAINED_GLASS_PANE gH
	MAGENTA_TERRACOTTA fv
	MAGENTA_WOOL aT
	MAGMA_BLOCK hi
	MAGMA_CREAM nA
	MAGMA_CUBE_SPAWN_EGG oc
	MAP pb
	MELON dQ
	MELON_SEEDS nk
	MELON_SLICE nh
	MILK_BUCKET lT
	MINECART lN
	MOJANG_BANNER_PATTERN qV
	MOOSHROOM_SPAWN_EGG od
	MOSSY_COBBLESTONE cn
	MOSSY_COBBLESTONE_SLAB jB
	MOSSY_COBBLESTONE_STAIRS jn
	MOSSY_COBBLESTONE_WALL eC
	MOSSY_STONE_BRICKS dH
	MOSSY_STONE_BRICK_SLAB jz
	MOSSY_STONE_BRICK_STAIRS jl
	MOSSY_STONE_BRICK_WALL eG
	MULE_SPAWN_EGG oe
	MUSHROOM_STEM dM
	MUSHROOM_STEW kD
	MUSIC_DISC_11 qI
	MUSIC_DISC_13 qy
	MUSIC_DISC_BLOCKS qA
	MUSIC_DISC_CAT qz
	MUSIC_DISC_CHIRP qB
	MUSIC_DISC_FAR qC
	MUSIC_DISC_MALL qD
	MUSIC_DISC_MELLOHI qE
	MUSIC_DISC_PIGSTEP qK
	MUSIC_DISC_STAL qF
	MUSIC_DISC_STRAD qG
	MUSIC_DISC_WAIT qJ
	MUSIC_DISC_WARD qH
	MUTTON pJ
	MYCELIUM ec
	NAME_TAG pH
	NAUTILUS_SHELL qN
	NETHERITE_AXE kL
	NETHERITE_BLOCK rw
	NETHERITE_BOOTS lv
	NETHERITE_CHESTPLATE lt
	NETHERITE_HELMET ls
	NETHERITE_HOE kU
	NETHERITE_INGOT km
	NETHERITE_LEGGINGS lu
	NETHERITE_PICKAXE kK
	NETHERITE_SCRAP kn
	NETHERITE_SHOVEL kJ
	NETHERITE_SWORD kI
	NETHERRACK dk
	NETHER_BRICK pq
	NETHER_BRICKS ee
	NETHER_BRICK_FENCE eh
	NETHER_BRICK_SLAB bY
	NETHER_BRICK_STAIRS ei
	NETHER_BRICK_WALL eJ
	NETHER_GOLD_ORE K
	NETHER_QUARTZ_ORE fk
	NETHER_SPROUTS bA
	NETHER_STAR pl
	NETHER_WART nu
	NETHER_WART_BLOCK hj
	NOTE_BLOCK aG
	OAK_BOAT lR
	OAK_BUTTON eT
	OAK_DOOR jM
	OAK_FENCE da
	OAK_FENCE_GATE dS
	OAK_LEAVES ar
	OAK_LOG L
	OAK_PLANKS p
	OAK_PRESSURE_PLATE cJ
	OAK_SAPLING x
	OAK_SIGN lC
	OAK_SLAB bI
	OAK_STAIRS cx
	OAK_TRAPDOOR ds
	OAK_WOOD aj
	OBSERVER ho
	OBSIDIAN co
	OCELOT_SPAWN_EGG of
	ORANGE_BANNER pM
	ORANGE_BED mP
	ORANGE_CARPET fN
	ORANGE_CONCRETE hX
	ORANGE_CONCRETE_POWDER in
	ORANGE_DYE mF
	ORANGE_GLAZED_TERRACOTTA hH
	ORANGE_SHULKER_BOX hr
	ORANGE_STAINED_GLASS gq
	ORANGE_STAINED_GLASS_PANE gG
	ORANGE_TERRACOTTA fu
	ORANGE_TULIP bn
	ORANGE_WOOL aS
	OXEYE_DAISY bq
	PACKED_ICE ge
	PAINTING lz
	PANDA_SPAWN_EGG og
	PAPER mb
	PARROT_SPAWN_EGG oh
	PEONY gm
	PETRIFIED_OAK_SLAB bU
	PHANTOM_MEMBRANE qM
	PHANTOM_SPAWN_EGG oi
	PIGLIN_BANNER_PATTERN qX
	PIGLIN_SPAWN_EGG ok
	PIG_SPAWN_EGG oj
	PILLAGER_SPAWN_EGG ol
	PINK_BANNER pR
	PINK_BED mU
	PINK_CARPET fS
	PINK_CONCRETE ic
	PINK_CONCRETE_POWDER is
	PINK_DYE mA
	PINK_GLAZED_TERRACOTTA hM
	PINK_SHULKER_BOX hw
	PINK_STAINED_GLASS gv
	PINK_STAINED_GLASS_PANE gL
	PINK_TERRACOTTA fz
	PINK_TULIP bp
	PINK_WOOL aX
	PISTON aQ
	PLAYER_HEAD pf
	PODZOL l
	POISONOUS_POTATO pa
	POLAR_BEAR_SPAWN_EGG om
	POLISHED_ANDESITE h
	POLISHED_ANDESITE_SLAB jI
	POLISHED_ANDESITE_STAIRS jv
	POLISHED_BASALT do
	POLISHED_BLACKSTONE rE
	POLISHED_BLACKSTONE_BRICKS rI
	POLISHED_BLACKSTONE_BRICK_SLAB rJ
	POLISHED_BLACKSTONE_BRICK_STAIRS rK
	POLISHED_BLACKSTONE_BRICK_WALL eR
	POLISHED_BLACKSTONE_BUTTON fb
	POLISHED_BLACKSTONE_PRESSURE_PLATE cR
	POLISHED_BLACKSTONE_SLAB rF
	POLISHED_BLACKSTONE_STAIRS rG
	POLISHED_BLACKSTONE_WALL eQ
	POLISHED_DIORITE f
	POLISHED_DIORITE_SLAB jA
	POLISHED_DIORITE_STAIRS jm
	POLISHED_GRANITE d
	POLISHED_GRANITE_SLAB jx
	POLISHED_GRANITE_STAIRS jj
	POPPED_CHORUS_FRUIT qd
	POPPY bi
	PORKCHOP lx
	POTATO oY
	POTION nv
	POWERED_RAIL aH
	PRISMARINE gV
	PRISMARINE_BRICKS gW
	PRISMARINE_BRICK_SLAB ce
	PRISMARINE_BRICK_STAIRS gZ
	PRISMARINE_CRYSTALS pv
	PRISMARINE_SHARD pu
	PRISMARINE_SLAB cd
	PRISMARINE_STAIRS gY
	PRISMARINE_WALL eE
	PUFFERFISH mo
	PUFFERFISH_BUCKET lU
	PUFFERFISH_SPAWN_EGG on
	PUMPKIN di
	PUMPKIN_PIE pm
	PUMPKIN_SEEDS nj
	PURPLE_BANNER pV
	PURPLE_BED mY
	PURPLE_CARPET fW
	PURPLE_CONCRETE ig
	PURPLE_CONCRETE_POWDER iw
	PURPLE_DYE mw
	PURPLE_GLAZED_TERRACOTTA hQ
	PURPLE_SHULKER_BOX hA
	PURPLE_STAINED_GLASS gz
	PURPLE_STAINED_GLASS_PANE gP
	PURPLE_TERRACOTTA fD
	PURPLE_WOOL bb
	PURPUR_BLOCK ct
	PURPUR_PILLAR cu
	PURPUR_SLAB cc
	PURPUR_STAIRS cv
	QUARTZ pr
	QUARTZ_BLOCK fn
	QUARTZ_BRICKS fo
	QUARTZ_PILLAR fp
	QUARTZ_SLAB bZ
	QUARTZ_STAIRS fq
	RABBIT pw
	RABBIT_FOOT pz
	RABBIT_HIDE pA
	RABBIT_SPAWN_EGG oo
	RABBIT_STEW py
	RAIL cF
	RAVAGER_SPAWN_EGG op
	REDSTONE lP
	REDSTONE_BLOCK fj
	REDSTONE_LAMP eo
	REDSTONE_ORE cS
	REDSTONE_TORCH cT
	RED_BANNER pZ
	RED_BED nc
	RED_CARPET ga
	RED_CONCRETE ik
	RED_CONCRETE_POWDER iA
	RED_DYE ms
	RED_GLAZED_TERRACOTTA hU
	RED_MUSHROOM bv
	RED_MUSHROOM_BLOCK dL
	RED_NETHER_BRICKS hl
	RED_NETHER_BRICK_SLAB jH
	RED_NETHER_BRICK_STAIRS ju
	RED_NETHER_BRICK_WALL eL
	RED_SAND F
	RED_SANDSTONE hc
	RED_SANDSTONE_SLAB ca
	RED_SANDSTONE_STAIRS hf
	RED_SANDSTONE_WALL eF
	RED_SHULKER_BOX hE
	RED_STAINED_GLASS gD
	RED_STAINED_GLASS_PANE gT
	RED_TERRACOTTA fH
	RED_TULIP bm
	RED_WOOL bf
	REPEATER jU
	REPEATING_COMMAND_BLOCK hg
	RESPAWN_ANCHOR rM
	ROSE_BUSH gl
	ROTTEN_FLESH np
	SADDLE lO
	SALMON mm
	SALMON_BUCKET lV
	SALMON_SPAWN_EGG oq
	SAND E
	SANDSTONE aD
	SANDSTONE_SLAB bS
	SANDSTONE_STAIRS ep
	SANDSTONE_WALL eM
	SCAFFOLDING jK
	SCUTE jZ
	SEAGRASS aO
	SEA_LANTERN hb
	SEA_PICKLE aP
	SHEARS ng
	SHEEP_SPAWN_EGG or
	SHIELD qm
	SHROOMLIGHT ro
	SHULKER_BOX hp
	SHULKER_SHELL qu
	SHULKER_SPAWN_EGG os
	SILVERFISH_SPAWN_EGG ot
	SKELETON_HORSE_SPAWN_EGG ov
	SKELETON_SKULL pd
	SKELETON_SPAWN_EGG ou
	SKULL_BANNER_PATTERN qU
	SLIME_BALL md
	SLIME_BLOCK gh
	SLIME_SPAWN_EGG ow
	SMITHING_TABLE rg
	SMOKER ra
	SMOOTH_QUARTZ cg
	SMOOTH_QUARTZ_SLAB jE
	SMOOTH_QUARTZ_STAIRS jr
	SMOOTH_RED_SANDSTONE ch
	SMOOTH_RED_SANDSTONE_SLAB jy
	SMOOTH_RED_SANDSTONE_STAIRS jk
	SMOOTH_SANDSTONE ci
	SMOOTH_SANDSTONE_SLAB jD
	SMOOTH_SANDSTONE_STAIRS jq
	SMOOTH_STONE cj
	SMOOTH_STONE_SLAB bR
	SNOW cU
	SNOWBALL lQ
	SNOW_BLOCK cW
	SOUL_CAMPFIRE rn
	SOUL_LANTERN rk
	SOUL_SAND dl
	SOUL_SOIL dm
	SOUL_TORCH dp
	SPAWNER cw
	SPECTRAL_ARROW qj
	SPIDER_EYE nx
	SPIDER_SPAWN_EGG ox
	SPLASH_POTION qi
	SPONGE ax
	SPRUCE_BOAT qo
	SPRUCE_BUTTON eU
	SPRUCE_DOOR jN
	SPRUCE_FENCE db
	SPRUCE_FENCE_GATE dT
	SPRUCE_LEAVES as
	SPRUCE_LOG M
	SPRUCE_PLANKS q
	SPRUCE_PRESSURE_PLATE cK
	SPRUCE_SAPLING y
	SPRUCE_SIGN lD
	SPRUCE_SLAB bJ
	SPRUCE_STAIRS eu
	SPRUCE_TRAPDOOR dt
	SPRUCE_WOOD ak
	SQUID_SPAWN_EGG oy
	STICK kB
	STICKY_PISTON aJ
	STONE b
	STONECUTTER rh
	STONE_AXE kw
	STONE_BRICKS dG
	STONE_BRICK_SLAB bX
	STONE_BRICK_STAIRS eb
	STONE_BRICK_WALL eI
	STONE_BUTTON eS
	STONE_HOE kQ
	STONE_PICKAXE kv
	STONE_PRESSURE_PLATE cI
	STONE_SHOVEL ku
	STONE_SLAB bQ
	STONE_STAIRS jp
	STONE_SWORD kt
	STRAY_SPAWN_EGG oz
	STRIDER_SPAWN_EGG oA
	STRING kM
	STRIPPED_ACACIA_LOG X
	STRIPPED_ACACIA_WOOD af
	STRIPPED_BIRCH_LOG V
	STRIPPED_BIRCH_WOOD ad
	STRIPPED_CRIMSON_HYPHAE ah
	STRIPPED_CRIMSON_STEM Z
	STRIPPED_DARK_OAK_LOG Y
	STRIPPED_DARK_OAK_WOOD ag
	STRIPPED_JUNGLE_LOG W
	STRIPPED_JUNGLE_WOOD ae
	STRIPPED_OAK_LOG T
	STRIPPED_OAK_WOOD ab
	STRIPPED_SPRUCE_LOG U
	STRIPPED_SPRUCE_WOOD ac
	STRIPPED_WARPED_HYPHAE ai
	STRIPPED_WARPED_STEM aa
	STRUCTURE_BLOCK jW
	STRUCTURE_VOID hn
	SUGAR mM
	SUGAR_CANE bD
	SUNFLOWER gj
	SUSPICIOUS_STEW qQ
	SWEET_BERRIES rl
	TALL_GRASS gn
	TARGET ry
	TERRACOTTA gc
	TIPPED_ARROW qk
	TNT cl
	TNT_MINECART ps
	TORCH cp
	TOTEM_OF_UNDYING qt
	TRADER_LLAMA_SPAWN_EGG oB
	TRAPPED_CHEST ff
	TRIDENT qL
	TRIPWIRE_HOOK es
	TROPICAL_FISH mn
	TROPICAL_FISH_BUCKET lX
	TROPICAL_FISH_SPAWN_EGG oC
	TUBE_CORAL iN
	TUBE_CORAL_BLOCK iI
	TUBE_CORAL_FAN iX
	TURTLE_EGG iC
	TURTLE_HELMET jY
	TURTLE_SPAWN_EGG oD
	TWISTING_VINES bC
	VEX_SPAWN_EGG oE
	VILLAGER_SPAWN_EGG oF
	VINDICATOR_SPAWN_EGG oG
	VINE dR
	WANDERING_TRADER_SPAWN_EGG oH
	WARPED_BUTTON fa
	WARPED_DOOR jT
	WARPED_FENCE dh
	WARPED_FENCE_GATE dZ
	WARPED_FUNGUS bx
	WARPED_FUNGUS_ON_A_STICK pk
	WARPED_HYPHAE aq
	WARPED_NYLIUM n
	WARPED_PLANKS w
	WARPED_PRESSURE_PLATE cQ
	WARPED_ROOTS bz
	WARPED_SIGN lJ
	WARPED_SLAB bP
	WARPED_STAIRS ey
	WARPED_STEM S
	WARPED_TRAPDOOR dz
	WARPED_WART_BLOCK hk
	WATER_BUCKET lL
	WEEPING_VINES bB
	WET_SPONGE ay
	WHEAT kW
	WHEAT_SEEDS kV
	WHITE_BANNER pL
	WHITE_BED mO
	WHITE_CARPET fM
	WHITE_CONCRETE hW
	WHITE_CONCRETE_POWDER im
	WHITE_DYE mK
	WHITE_GLAZED_TERRACOTTA hG
	WHITE_SHULKER_BOX hq
	WHITE_STAINED_GLASS gp
	WHITE_STAINED_GLASS_PANE gF
	WHITE_TERRACOTTA ft
	WHITE_TULIP bo
	WHITE_WOOL aR
	WITCH_SPAWN_EGG oI
	WITHER_ROSE bt
	WITHER_SKELETON_SKULL pe
	WITHER_SKELETON_SPAWN_EGG oJ
	WOLF_SPAWN_EGG oK
	WOODEN_AXE ks
	WOODEN_HOE kP
	WOODEN_PICKAXE kr
	WOODEN_SHOVEL kq
	WOODEN_SWORD kp
	WRITABLE_BOOK oS
	WRITTEN_BOOK oT
	YELLOW_BANNER pP
	YELLOW_BED mS
	YELLOW_CARPET fQ
	YELLOW_CONCRETE ia
	YELLOW_CONCRETE_POWDER iq
	YELLOW_DYE mC
	YELLOW_GLAZED_TERRACOTTA hK
	YELLOW_SHULKER_BOX hu
	YELLOW_STAINED_GLASS gt
	YELLOW_STAINED_GLASS_PANE gJ
	YELLOW_TERRACOTTA fx
	YELLOW_WOOL aV
	ZOGLIN_SPAWN_EGG oL
	ZOMBIE_HEAD pg
	ZOMBIE_HORSE_SPAWN_EGG oN
	ZOMBIE_SPAWN_EGG oM
	ZOMBIE_VILLAGER_SPAWN_EGG oO
	ZOMBIFIED_PIGLIN_SPAWN_EGG oP
	registerBlock (Lnet/minecraft/world/item/BlockItem;)Lnet/minecraft/world/item/Item; a
	registerBlock (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/world/item/Item; a
	registerBlock (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/world/item/CreativeModeTab;)Lnet/minecraft/world/item/Item; a
	registerBlock (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/world/item/Item;)Lnet/minecraft/world/item/Item; a
	registerItem (Ljava/lang/String;Lnet/minecraft/world/item/Item;)Lnet/minecraft/world/item/Item; a
	registerItem (Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/world/item/Item;)Lnet/minecraft/world/item/Item; a
net/minecraft/world/item/KnowledgeBookItem bkl
	LOGGER a
	use (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResultHolder; a
net/minecraft/world/item/LeadItem bkm
	bindPlayerMobs (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/InteractionResult; a
	useOn (Lnet/minecraft/world/item/UseOnContext;)Lnet/minecraft/world/InteractionResult; a
net/minecraft/world/item/LingeringPotionItem bkn
	appendHoverText (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/Level;Ljava/util/List;Lnet/minecraft/world/item/TooltipFlag;)V a
	use (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResultHolder; a
net/minecraft/world/item/MapItem bko
	appendHoverText (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/Level;Ljava/util/List;Lnet/minecraft/world/item/TooltipFlag;)V a
	create (Lnet/minecraft/world/level/Level;IIBZZ)Lnet/minecraft/world/item/ItemStack; a
	createAndStoreSavedData (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/Level;IIIZZLnet/minecraft/resources/ResourceKey;)Lnet/minecraft/world/level/saveddata/maps/MapItemSavedData; a
	getColor (Lnet/minecraft/world/item/ItemStack;)I g
	getCorrectStateForFluidBlock (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
	getMapId (Lnet/minecraft/world/item/ItemStack;)I d
	getOrCreateSavedData (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/Level;)Lnet/minecraft/world/level/saveddata/maps/MapItemSavedData; b
	getSavedData (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/Level;)Lnet/minecraft/world/level/saveddata/maps/MapItemSavedData; a
	getUpdatePacket (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/player/Player;)Lnet/minecraft/network/protocol/Packet; a
	inventoryTick (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/Entity;IZ)V a
	isLand ([Lnet/minecraft/world/level/biome/Biome;III)Z a
	lockMap (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/item/ItemStack;)Lnet/minecraft/world/item/ItemStack; a
	makeKey (I)Ljava/lang/String; a
	onCraftedBy (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/player/Player;)V b
	renderBiomePreviewMap (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/item/ItemStack;)V a
	scaleMap (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/Level;I)V a
	update (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/level/saveddata/maps/MapItemSavedData;)V a
	useOn (Lnet/minecraft/world/item/UseOnContext;)Lnet/minecraft/world/InteractionResult; a
net/minecraft/world/item/MilkBucketItem bkp
	finishUsingItem (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/LivingEntity;)Lnet/minecraft/world/item/ItemStack; a
	getUseAnimation (Lnet/minecraft/world/item/ItemStack;)Lnet/minecraft/world/item/UseAnim; d_
	getUseDuration (Lnet/minecraft/world/item/ItemStack;)I e_
	use (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResultHolder; a
net/minecraft/world/item/MinecartItem bkq
	DISPENSE_ITEM_BEHAVIOR a
	type b
	useOn (Lnet/minecraft/world/item/UseOnContext;)Lnet/minecraft/world/InteractionResult; a
net/minecraft/world/item/NameTagItem bkr
	interactLivingEntity (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResult; a
net/minecraft/world/item/PickaxeItem bks
	DIGGABLES a
	getDestroySpeed (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/block/state/BlockState;)F a
	isCorrectToolForDrops (Lnet/minecraft/world/level/block/state/BlockState;)Z b
net/minecraft/world/item/PlayerHeadItem bkt
	getName (Lnet/minecraft/world/item/ItemStack;)Lnet/minecraft/network/chat/Component; h
	verifyTagAfterLoad (Lnet/minecraft/nbt/CompoundTag;)Z b
net/minecraft/world/item/PotionItem bku
	appendHoverText (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/Level;Ljava/util/List;Lnet/minecraft/world/item/TooltipFlag;)V a
	fillItemCategory (Lnet/minecraft/world/item/CreativeModeTab;Lnet/minecraft/core/NonNullList;)V a
	finishUsingItem (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/LivingEntity;)Lnet/minecraft/world/item/ItemStack; a
	getDefaultInstance ()Lnet/minecraft/world/item/ItemStack; r
	getDescriptionId (Lnet/minecraft/world/item/ItemStack;)Ljava/lang/String; f
	getUseAnimation (Lnet/minecraft/world/item/ItemStack;)Lnet/minecraft/world/item/UseAnim; d_
	getUseDuration (Lnet/minecraft/world/item/ItemStack;)I e_
	isFoil (Lnet/minecraft/world/item/ItemStack;)Z e
	use (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResultHolder; a
net/minecraft/world/item/ProjectileWeaponItem bkv
	ARROW_ONLY a
	ARROW_OR_FIREWORK b
	getAllSupportedProjectiles ()Ljava/util/function/Predicate; b
	getDefaultProjectileRange ()I d
	getEnchantmentValue ()I c
	getHeldProjectile (Lnet/minecraft/world/entity/LivingEntity;Ljava/util/function/Predicate;)Lnet/minecraft/world/item/ItemStack; a
	getSupportedHeldProjectiles ()Ljava/util/function/Predicate; e
net/minecraft/world/item/ProjectileWeaponItem$Type bkv$a
	$VALUES c
	BOW a
	CROSSBOW b
net/minecraft/world/item/Rarity bkw
	$VALUES f
	COMMON a
	EPIC d
	RARE c
	UNCOMMON b
	color e
net/minecraft/world/item/RecordItem bkx
	BY_NAME a
	analogOutput b
	sound c
	appendHoverText (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/Level;Ljava/util/List;Lnet/minecraft/world/item/TooltipFlag;)V a
	getAnalogOutput ()I f
	getBySound (Lnet/minecraft/sounds/SoundEvent;)Lnet/minecraft/world/item/RecordItem; a
	getDisplayName ()Lnet/minecraft/network/chat/MutableComponent; g
	getSound ()Lnet/minecraft/sounds/SoundEvent; v
	useOn (Lnet/minecraft/world/item/UseOnContext;)Lnet/minecraft/world/InteractionResult; a
net/minecraft/world/item/SaddleItem bky
	interactLivingEntity (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResult; a
net/minecraft/world/item/ScaffoldingBlockItem bkz
	mustSurvive ()Z d
	updatePlacementContext (Lnet/minecraft/world/item/BlockPlaceContext;)Lnet/minecraft/world/item/BlockPlaceContext; b
net/minecraft/world/item/ServerItemCooldowns bla
	player a
	onCooldownEnded (Lnet/minecraft/world/item/Item;)V c
	onCooldownStarted (Lnet/minecraft/world/item/Item;I)V b
net/minecraft/world/item/ShearsItem blb
	getDestroySpeed (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/block/state/BlockState;)F a
	isCorrectToolForDrops (Lnet/minecraft/world/level/block/state/BlockState;)Z b
	mineBlock (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/Level;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/LivingEntity;)Z a
net/minecraft/world/item/ShieldItem blc
	appendHoverText (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/Level;Ljava/util/List;Lnet/minecraft/world/item/TooltipFlag;)V a
	getColor (Lnet/minecraft/world/item/ItemStack;)Lnet/minecraft/world/item/DyeColor; d
	getDescriptionId (Lnet/minecraft/world/item/ItemStack;)Ljava/lang/String; f
	getUseAnimation (Lnet/minecraft/world/item/ItemStack;)Lnet/minecraft/world/item/UseAnim; d_
	getUseDuration (Lnet/minecraft/world/item/ItemStack;)I e_
	isValidRepairItem (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/item/ItemStack;)Z a
	use (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResultHolder; a
net/minecraft/world/item/ShovelItem bld
	DIGGABLES c
	FLATTENABLES a
	isCorrectToolForDrops (Lnet/minecraft/world/level/block/state/BlockState;)Z b
	useOn (Lnet/minecraft/world/item/UseOnContext;)Lnet/minecraft/world/InteractionResult; a
net/minecraft/world/item/SignItem ble
	updateCustomBlockEntityTag (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/block/state/BlockState;)Z a
net/minecraft/world/item/SimpleFoiledItem blf
	isFoil (Lnet/minecraft/world/item/ItemStack;)Z e
net/minecraft/world/item/SnowballItem blg
	use (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResultHolder; a
net/minecraft/world/item/SpawnEggItem blh
	BY_ID a
	color1 b
	color2 c
	defaultType d
	byId (Lnet/minecraft/world/entity/EntityType;)Lnet/minecraft/world/item/SpawnEggItem; a
	eggs ()Ljava/lang/Iterable; f
	getColor (I)I a
	getType (Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/world/entity/EntityType; a
	spawnOffspringFromSpawnEgg (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/entity/Mob;Lnet/minecraft/world/entity/EntityType;Lnet/minecraft/world/level/Level;Lnet/minecraft/world/phys/Vec3;Lnet/minecraft/world/item/ItemStack;)Ljava/util/Optional; a
	spawnsEntity (Lnet/minecraft/nbt/CompoundTag;Lnet/minecraft/world/entity/EntityType;)Z a
	use (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResultHolder; a
	useOn (Lnet/minecraft/world/item/UseOnContext;)Lnet/minecraft/world/InteractionResult; a
net/minecraft/world/item/SpectralArrowItem bli
	createArrow (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/entity/LivingEntity;)Lnet/minecraft/world/entity/projectile/AbstractArrow; a
net/minecraft/world/item/SplashPotionItem blj
	use (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResultHolder; a
net/minecraft/world/item/StandingAndWallBlockItem blk
	wallBlock a
	getPlacementState (Lnet/minecraft/world/item/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; c
	registerBlocks (Ljava/util/Map;Lnet/minecraft/world/item/Item;)V a
net/minecraft/world/item/SuspiciousStewItem bll
	finishUsingItem (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/LivingEntity;)Lnet/minecraft/world/item/ItemStack; a
	saveMobEffect (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/effect/MobEffect;I)V a
net/minecraft/world/item/SwordItem blm
	attackDamage a
	defaultModifiers b
	canAttackBlock (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/player/Player;)Z a
	getDamage ()F f
	getDefaultAttributeModifiers (Lnet/minecraft/world/entity/EquipmentSlot;)Lcom/google/common/collect/Multimap; a
	getDestroySpeed (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/block/state/BlockState;)F a
	hurtEnemy (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/entity/LivingEntity;)Z a
	isCorrectToolForDrops (Lnet/minecraft/world/level/block/state/BlockState;)Z b
	mineBlock (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/Level;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/LivingEntity;)Z a
net/minecraft/world/item/ThrowablePotionItem bln
	use (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResultHolder; a
net/minecraft/world/item/Tier blo
	getAttackDamageBonus ()F c
	getEnchantmentValue ()I e
	getLevel ()I d
	getRepairIngredient ()Lnet/minecraft/world/item/crafting/Ingredient; f
	getSpeed ()F b
	getUses ()I a
net/minecraft/world/item/TieredItem blp
	tier a
	getEnchantmentValue ()I c
	getTier ()Lnet/minecraft/world/item/Tier; g
	isValidRepairItem (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/item/ItemStack;)Z a
net/minecraft/world/item/Tiers blq
	$VALUES m
	DIAMOND d
	GOLD e
	IRON c
	NETHERITE f
	STONE b
	WOOD a
	damage j
	enchantmentValue k
	level g
	repairIngredient l
	speed i
	uses h
	getAttackDamageBonus ()F c
	getEnchantmentValue ()I e
	getLevel ()I d
	getRepairIngredient ()Lnet/minecraft/world/item/crafting/Ingredient; f
	getSpeed ()F b
	getUses ()I a
net/minecraft/world/item/TippedArrowItem blr
	appendHoverText (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/Level;Ljava/util/List;Lnet/minecraft/world/item/TooltipFlag;)V a
	fillItemCategory (Lnet/minecraft/world/item/CreativeModeTab;Lnet/minecraft/core/NonNullList;)V a
	getDefaultInstance ()Lnet/minecraft/world/item/ItemStack; r
	getDescriptionId (Lnet/minecraft/world/item/ItemStack;)Ljava/lang/String; f
net/minecraft/world/item/TooltipFlag bls
	isAdvanced ()Z a
net/minecraft/world/item/TooltipFlag$Default bls$a
	$VALUES d
	ADVANCED b
	NORMAL a
	advanced c
	isAdvanced ()Z a
net/minecraft/world/item/TridentItem blt
	defaultModifiers a
	canAttackBlock (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/player/Player;)Z a
	getDefaultAttributeModifiers (Lnet/minecraft/world/entity/EquipmentSlot;)Lcom/google/common/collect/Multimap; a
	getEnchantmentValue ()I c
	getUseAnimation (Lnet/minecraft/world/item/ItemStack;)Lnet/minecraft/world/item/UseAnim; d_
	getUseDuration (Lnet/minecraft/world/item/ItemStack;)I e_
	hurtEnemy (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/entity/LivingEntity;)Z a
	mineBlock (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/Level;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/LivingEntity;)Z a
	releaseUsing (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/LivingEntity;I)V a
	use (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResultHolder; a
net/minecraft/world/item/UseAnim blu
	$VALUES h
	BLOCK d
	BOW e
	CROSSBOW g
	DRINK c
	EAT b
	NONE a
	SPEAR f
net/minecraft/world/item/UseOnContext blv
	hand c
	hitResult d
	itemStack f
	level e
	player b
	getClickLocation ()Lnet/minecraft/world/phys/Vec3; j
	getClickedFace ()Lnet/minecraft/core/Direction; i
	getClickedPos ()Lnet/minecraft/core/BlockPos; a
	getHand ()Lnet/minecraft/world/InteractionHand; n
	getHorizontalDirection ()Lnet/minecraft/core/Direction; f
	getItemInHand ()Lnet/minecraft/world/item/ItemStack; l
	getLevel ()Lnet/minecraft/world/level/Level; o
	getPlayer ()Lnet/minecraft/world/entity/player/Player; m
	getRotation ()F h
	isInside ()Z k
	isSecondaryUseActive ()Z g
net/minecraft/world/item/Vanishable blw
net/minecraft/world/item/WaterLilyBlockItem blx
	use (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResultHolder; a
	useOn (Lnet/minecraft/world/item/UseOnContext;)Lnet/minecraft/world/InteractionResult; a
net/minecraft/world/item/Wearable bly
net/minecraft/world/item/WritableBookItem blz
	makeSureTagIsValid (Lnet/minecraft/nbt/CompoundTag;)Z a
	use (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResultHolder; a
	useOn (Lnet/minecraft/world/item/UseOnContext;)Lnet/minecraft/world/InteractionResult; a
net/minecraft/world/item/WrittenBookItem bma
	appendHoverText (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/Level;Ljava/util/List;Lnet/minecraft/world/item/TooltipFlag;)V a
	getGeneration (Lnet/minecraft/world/item/ItemStack;)I d
	getName (Lnet/minecraft/world/item/ItemStack;)Lnet/minecraft/network/chat/Component; h
	getPageCount (Lnet/minecraft/world/item/ItemStack;)I g
	isFoil (Lnet/minecraft/world/item/ItemStack;)Z e
	makeSureTagIsValid (Lnet/minecraft/nbt/CompoundTag;)Z a
	resolveBookComponents (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/world/entity/player/Player;)Z a
	use (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResultHolder; a
	useOn (Lnet/minecraft/world/item/UseOnContext;)Lnet/minecraft/world/InteractionResult; a
net/minecraft/world/item/alchemy/Potion bmb
	effects b
	name a
	byName (Ljava/lang/String;)Lnet/minecraft/world/item/alchemy/Potion; a
	getEffects ()Ljava/util/List; a
	getName (Ljava/lang/String;)Ljava/lang/String; b
	hasInstantEffects ()Z b
net/minecraft/world/item/alchemy/PotionBrewing bmc
	ALLOWED_CONTAINER d
	ALLOWED_CONTAINERS c
	CONTAINER_MIXES b
	POTION_MIXES a
	addContainer (Lnet/minecraft/world/item/Item;)V a
	addContainerRecipe (Lnet/minecraft/world/item/Item;Lnet/minecraft/world/item/Item;Lnet/minecraft/world/item/Item;)V a
	addMix (Lnet/minecraft/world/item/alchemy/Potion;Lnet/minecraft/world/item/Item;Lnet/minecraft/world/item/alchemy/Potion;)V a
	bootStrap ()V a
	hasContainerMix (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/item/ItemStack;)Z b
	hasMix (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/item/ItemStack;)Z a
	hasPotionMix (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/item/ItemStack;)Z c
	isBrewablePotion (Lnet/minecraft/world/item/alchemy/Potion;)Z a
	isContainerIngredient (Lnet/minecraft/world/item/ItemStack;)Z b
	isIngredient (Lnet/minecraft/world/item/ItemStack;)Z a
	isPotionIngredient (Lnet/minecraft/world/item/ItemStack;)Z c
	mix (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/item/ItemStack;)Lnet/minecraft/world/item/ItemStack; d
net/minecraft/world/item/alchemy/PotionBrewing$Mix bmc$a
	from a
	ingredient b
	to c
net/minecraft/world/item/alchemy/PotionUtils bmd
	addPotionTooltip (Lnet/minecraft/world/item/ItemStack;Ljava/util/List;F)V a
	getAllEffects (Lnet/minecraft/nbt/CompoundTag;)Ljava/util/List; a
	getAllEffects (Lnet/minecraft/world/item/alchemy/Potion;Ljava/util/Collection;)Ljava/util/List; a
	getColor (Ljava/util/Collection;)I a
	getColor (Lnet/minecraft/world/item/ItemStack;)I c
	getColor (Lnet/minecraft/world/item/alchemy/Potion;)I a
	getCustomEffects (Lnet/minecraft/nbt/CompoundTag;)Ljava/util/List; b
	getCustomEffects (Lnet/minecraft/nbt/CompoundTag;Ljava/util/List;)V a
	getCustomEffects (Lnet/minecraft/world/item/ItemStack;)Ljava/util/List; b
	getMobEffects (Lnet/minecraft/world/item/ItemStack;)Ljava/util/List; a
	getPotion (Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/world/item/alchemy/Potion; c
	getPotion (Lnet/minecraft/world/item/ItemStack;)Lnet/minecraft/world/item/alchemy/Potion; d
	setCustomEffects (Lnet/minecraft/world/item/ItemStack;Ljava/util/Collection;)Lnet/minecraft/world/item/ItemStack; a
	setPotion (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/item/alchemy/Potion;)Lnet/minecraft/world/item/ItemStack; a
net/minecraft/world/item/alchemy/Potions bme
	AWKWARD e
	EMPTY a
	FIRE_RESISTANCE m
	HARMING B
	HEALING z
	INVISIBILITY h
	LEAPING j
	LONG_FIRE_RESISTANCE n
	LONG_INVISIBILITY i
	LONG_LEAPING k
	LONG_NIGHT_VISION g
	LONG_POISON E
	LONG_REGENERATION H
	LONG_SLOWNESS s
	LONG_SLOW_FALLING Q
	LONG_STRENGTH K
	LONG_SWIFTNESS p
	LONG_TURTLE_MASTER v
	LONG_WATER_BREATHING y
	LONG_WEAKNESS N
	LUCK O
	MUNDANE c
	NIGHT_VISION f
	POISON D
	REGENERATION G
	SLOWNESS r
	SLOW_FALLING P
	STRENGTH J
	STRONG_HARMING C
	STRONG_HEALING A
	STRONG_LEAPING l
	STRONG_POISON F
	STRONG_REGENERATION I
	STRONG_SLOWNESS t
	STRONG_STRENGTH L
	STRONG_SWIFTNESS q
	STRONG_TURTLE_MASTER w
	SWIFTNESS o
	THICK d
	TURTLE_MASTER u
	WATER b
	WATER_BREATHING x
	WEAKNESS M
	register (Ljava/lang/String;Lnet/minecraft/world/item/alchemy/Potion;)Lnet/minecraft/world/item/alchemy/Potion; a
net/minecraft/world/item/crafting/AbstractCookingRecipe bmg
	cookingTime g
	experience f
	group c
	id b
	ingredient d
	result e
	type a
	assemble (Lnet/minecraft/world/Container;)Lnet/minecraft/world/item/ItemStack; a
	canCraftInDimensions (II)Z a
	getCookingTime ()I e
	getExperience ()F b
	getGroup ()Ljava/lang/String; d
	getId ()Lnet/minecraft/resources/ResourceLocation; f
	getIngredients ()Lnet/minecraft/core/NonNullList; a
	getResultItem ()Lnet/minecraft/world/item/ItemStack; c
	getType ()Lnet/minecraft/world/item/crafting/RecipeType; g
	matches (Lnet/minecraft/world/Container;Lnet/minecraft/world/level/Level;)Z a
net/minecraft/world/item/crafting/ArmorDyeRecipe bmh
	assemble (Lnet/minecraft/world/Container;)Lnet/minecraft/world/item/ItemStack; a
	assemble (Lnet/minecraft/world/inventory/CraftingContainer;)Lnet/minecraft/world/item/ItemStack; a
	canCraftInDimensions (II)Z a
	getSerializer ()Lnet/minecraft/world/item/crafting/RecipeSerializer; ai_
	matches (Lnet/minecraft/world/Container;Lnet/minecraft/world/level/Level;)Z a
	matches (Lnet/minecraft/world/inventory/CraftingContainer;Lnet/minecraft/world/level/Level;)Z a
net/minecraft/world/item/crafting/BannerDuplicateRecipe bmi
	assemble (Lnet/minecraft/world/Container;)Lnet/minecraft/world/item/ItemStack; a
	assemble (Lnet/minecraft/world/inventory/CraftingContainer;)Lnet/minecraft/world/item/ItemStack; a
	canCraftInDimensions (II)Z a
	getRemainingItems (Lnet/minecraft/world/Container;)Lnet/minecraft/core/NonNullList; b
	getRemainingItems (Lnet/minecraft/world/inventory/CraftingContainer;)Lnet/minecraft/core/NonNullList; b
	getSerializer ()Lnet/minecraft/world/item/crafting/RecipeSerializer; ai_
	matches (Lnet/minecraft/world/Container;Lnet/minecraft/world/level/Level;)Z a
	matches (Lnet/minecraft/world/inventory/CraftingContainer;Lnet/minecraft/world/level/Level;)Z a
net/minecraft/world/item/crafting/BlastingRecipe bmj
	getSerializer ()Lnet/minecraft/world/item/crafting/RecipeSerializer; ai_
	getToastSymbol ()Lnet/minecraft/world/item/ItemStack; h
net/minecraft/world/item/crafting/BookCloningRecipe bmk
	assemble (Lnet/minecraft/world/Container;)Lnet/minecraft/world/item/ItemStack; a
	assemble (Lnet/minecraft/world/inventory/CraftingContainer;)Lnet/minecraft/world/item/ItemStack; a
	canCraftInDimensions (II)Z a
	getRemainingItems (Lnet/minecraft/world/Container;)Lnet/minecraft/core/NonNullList; b
	getRemainingItems (Lnet/minecraft/world/inventory/CraftingContainer;)Lnet/minecraft/core/NonNullList; b
	getSerializer ()Lnet/minecraft/world/item/crafting/RecipeSerializer; ai_
	matches (Lnet/minecraft/world/Container;Lnet/minecraft/world/level/Level;)Z a
	matches (Lnet/minecraft/world/inventory/CraftingContainer;Lnet/minecraft/world/level/Level;)Z a
net/minecraft/world/item/crafting/CampfireCookingRecipe bml
	getSerializer ()Lnet/minecraft/world/item/crafting/RecipeSerializer; ai_
	getToastSymbol ()Lnet/minecraft/world/item/ItemStack; h
net/minecraft/world/item/crafting/CraftingRecipe bmm
	getType ()Lnet/minecraft/world/item/crafting/RecipeType; g
net/minecraft/world/item/crafting/CustomRecipe bmn
	id a
	getId ()Lnet/minecraft/resources/ResourceLocation; f
	getResultItem ()Lnet/minecraft/world/item/ItemStack; c
	isSpecial ()Z ah_
net/minecraft/world/item/crafting/FireworkRocketRecipe bmo
	GUNPOWDER_INGREDIENT b
	PAPER_INGREDIENT a
	STAR_INGREDIENT c
	assemble (Lnet/minecraft/world/Container;)Lnet/minecraft/world/item/ItemStack; a
	assemble (Lnet/minecraft/world/inventory/CraftingContainer;)Lnet/minecraft/world/item/ItemStack; a
	canCraftInDimensions (II)Z a
	getResultItem ()Lnet/minecraft/world/item/ItemStack; c
	getSerializer ()Lnet/minecraft/world/item/crafting/RecipeSerializer; ai_
	matches (Lnet/minecraft/world/Container;Lnet/minecraft/world/level/Level;)Z a
	matches (Lnet/minecraft/world/inventory/CraftingContainer;Lnet/minecraft/world/level/Level;)Z a
net/minecraft/world/item/crafting/FireworkStarFadeRecipe bmp
	STAR_INGREDIENT a
	assemble (Lnet/minecraft/world/Container;)Lnet/minecraft/world/item/ItemStack; a
	assemble (Lnet/minecraft/world/inventory/CraftingContainer;)Lnet/minecraft/world/item/ItemStack; a
	canCraftInDimensions (II)Z a
	getSerializer ()Lnet/minecraft/world/item/crafting/RecipeSerializer; ai_
	matches (Lnet/minecraft/world/Container;Lnet/minecraft/world/level/Level;)Z a
	matches (Lnet/minecraft/world/inventory/CraftingContainer;Lnet/minecraft/world/level/Level;)Z a
net/minecraft/world/item/crafting/FireworkStarRecipe bmq
	FLICKER_INGREDIENT c
	GUNPOWDER_INGREDIENT e
	SHAPE_BY_ITEM d
	SHAPE_INGREDIENT a
	TRAIL_INGREDIENT b
	assemble (Lnet/minecraft/world/Container;)Lnet/minecraft/world/item/ItemStack; a
	assemble (Lnet/minecraft/world/inventory/CraftingContainer;)Lnet/minecraft/world/item/ItemStack; a
	canCraftInDimensions (II)Z a
	getResultItem ()Lnet/minecraft/world/item/ItemStack; c
	getSerializer ()Lnet/minecraft/world/item/crafting/RecipeSerializer; ai_
	matches (Lnet/minecraft/world/Container;Lnet/minecraft/world/level/Level;)Z a
	matches (Lnet/minecraft/world/inventory/CraftingContainer;Lnet/minecraft/world/level/Level;)Z a
net/minecraft/world/item/crafting/Ingredient bmr
	EMPTY a
	itemStacks c
	stackingIds d
	values b
	dissolve ()V f
	fromJson (Lcom/google/gson/JsonElement;)Lnet/minecraft/world/item/crafting/Ingredient; a
	fromNetwork (Lnet/minecraft/network/FriendlyByteBuf;)Lnet/minecraft/world/item/crafting/Ingredient; b
	fromValues (Ljava/util/stream/Stream;)Lnet/minecraft/world/item/crafting/Ingredient; b
	getItems ()[Lnet/minecraft/world/item/ItemStack; a
	getStackingIds ()Lit/unimi/dsi/fastutil/ints/IntList; b
	isEmpty ()Z d
	of ()Lnet/minecraft/world/item/crafting/Ingredient; e
	of (Ljava/util/stream/Stream;)Lnet/minecraft/world/item/crafting/Ingredient; a
	of (Lnet/minecraft/tags/Tag;)Lnet/minecraft/world/item/crafting/Ingredient; a
	of ([Lnet/minecraft/world/item/ItemStack;)Lnet/minecraft/world/item/crafting/Ingredient; a
	of ([Lnet/minecraft/world/level/ItemLike;)Lnet/minecraft/world/item/crafting/Ingredient; a
	test (Lnet/minecraft/world/item/ItemStack;)Z a
	toJson ()Lcom/google/gson/JsonElement; c
	toNetwork (Lnet/minecraft/network/FriendlyByteBuf;)V a
	valueFromJson (Lcom/google/gson/JsonObject;)Lnet/minecraft/world/item/crafting/Ingredient$Value; a
net/minecraft/world/item/crafting/Ingredient$ItemValue bmr$a
	item a
	getItems ()Ljava/util/Collection; a
	serialize ()Lcom/google/gson/JsonObject; b
net/minecraft/world/item/crafting/Ingredient$TagValue bmr$b
	tag a
	getItems ()Ljava/util/Collection; a
	serialize ()Lcom/google/gson/JsonObject; b
net/minecraft/world/item/crafting/Ingredient$Value bmr$c
	getItems ()Ljava/util/Collection; a
	serialize ()Lcom/google/gson/JsonObject; b
net/minecraft/world/item/crafting/MapCloningRecipe bms
	assemble (Lnet/minecraft/world/Container;)Lnet/minecraft/world/item/ItemStack; a
	assemble (Lnet/minecraft/world/inventory/CraftingContainer;)Lnet/minecraft/world/item/ItemStack; a
	canCraftInDimensions (II)Z a
	getSerializer ()Lnet/minecraft/world/item/crafting/RecipeSerializer; ai_
	matches (Lnet/minecraft/world/Container;Lnet/minecraft/world/level/Level;)Z a
	matches (Lnet/minecraft/world/inventory/CraftingContainer;Lnet/minecraft/world/level/Level;)Z a
net/minecraft/world/item/crafting/MapExtendingRecipe bmt
	assemble (Lnet/minecraft/world/Container;)Lnet/minecraft/world/item/ItemStack; a
	assemble (Lnet/minecraft/world/inventory/CraftingContainer;)Lnet/minecraft/world/item/ItemStack; a
	getSerializer ()Lnet/minecraft/world/item/crafting/RecipeSerializer; ai_
	isExplorationMap (Lnet/minecraft/world/level/saveddata/maps/MapItemSavedData;)Z a
	isSpecial ()Z ah_
	matches (Lnet/minecraft/world/Container;Lnet/minecraft/world/level/Level;)Z a
	matches (Lnet/minecraft/world/inventory/CraftingContainer;Lnet/minecraft/world/level/Level;)Z a
net/minecraft/world/item/crafting/Recipe bmu
	assemble (Lnet/minecraft/world/Container;)Lnet/minecraft/world/item/ItemStack; a
	canCraftInDimensions (II)Z a
	getGroup ()Ljava/lang/String; d
	getId ()Lnet/minecraft/resources/ResourceLocation; f
	getIngredients ()Lnet/minecraft/core/NonNullList; a
	getRemainingItems (Lnet/minecraft/world/Container;)Lnet/minecraft/core/NonNullList; b
	getResultItem ()Lnet/minecraft/world/item/ItemStack; c
	getSerializer ()Lnet/minecraft/world/item/crafting/RecipeSerializer; ai_
	getToastSymbol ()Lnet/minecraft/world/item/ItemStack; h
	getType ()Lnet/minecraft/world/item/crafting/RecipeType; g
	isSpecial ()Z ah_
	matches (Lnet/minecraft/world/Container;Lnet/minecraft/world/level/Level;)Z a
net/minecraft/world/item/crafting/RecipeManager bmv
	GSON a
	LOGGER b
	hasErrors d
	recipes c
	apply (Ljava/lang/Object;Lnet/minecraft/server/packs/resources/ResourceManager;Lnet/minecraft/util/profiling/ProfilerFiller;)V a
	apply (Ljava/util/Map;Lnet/minecraft/server/packs/resources/ResourceManager;Lnet/minecraft/util/profiling/ProfilerFiller;)V a
	byKey (Lnet/minecraft/resources/ResourceLocation;)Ljava/util/Optional; a
	byType (Lnet/minecraft/world/item/crafting/RecipeType;)Ljava/util/Map; b
	fromJson (Lnet/minecraft/resources/ResourceLocation;Lcom/google/gson/JsonObject;)Lnet/minecraft/world/item/crafting/Recipe; a
	getAllRecipesFor (Lnet/minecraft/world/item/crafting/RecipeType;)Ljava/util/List; a
	getRecipeFor (Lnet/minecraft/world/item/crafting/RecipeType;Lnet/minecraft/world/Container;Lnet/minecraft/world/level/Level;)Ljava/util/Optional; a
	getRecipeIds ()Ljava/util/stream/Stream; d
	getRecipes ()Ljava/util/Collection; b
	getRecipesFor (Lnet/minecraft/world/item/crafting/RecipeType;Lnet/minecraft/world/Container;Lnet/minecraft/world/level/Level;)Ljava/util/List; b
	getRemainingItemsFor (Lnet/minecraft/world/item/crafting/RecipeType;Lnet/minecraft/world/Container;Lnet/minecraft/world/level/Level;)Lnet/minecraft/core/NonNullList; c
	hadErrorsLoading ()Z a
	replaceRecipes (Ljava/lang/Iterable;)V a
net/minecraft/world/item/crafting/RecipeSerializer bmw
	ARMOR_DYE c
	BANNER_DUPLICATE k
	BLASTING_RECIPE q
	BOOK_CLONING d
	CAMPFIRE_COOKING_RECIPE s
	FIREWORK_ROCKET g
	FIREWORK_STAR h
	FIREWORK_STAR_FADE i
	MAP_CLONING e
	MAP_EXTENDING f
	REPAIR_ITEM o
	SHAPED_RECIPE a
	SHAPELESS_RECIPE b
	SHIELD_DECORATION l
	SHULKER_BOX_COLORING m
	SMELTING_RECIPE p
	SMITHING u
	SMOKING_RECIPE r
	STONECUTTER t
	SUSPICIOUS_STEW n
	TIPPED_ARROW j
	fromJson (Lnet/minecraft/resources/ResourceLocation;Lcom/google/gson/JsonObject;)Lnet/minecraft/world/item/crafting/Recipe; a
	fromNetwork (Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/network/FriendlyByteBuf;)Lnet/minecraft/world/item/crafting/Recipe; a
	register (Ljava/lang/String;Lnet/minecraft/world/item/crafting/RecipeSerializer;)Lnet/minecraft/world/item/crafting/RecipeSerializer; a
	toNetwork (Lnet/minecraft/network/FriendlyByteBuf;Lnet/minecraft/world/item/crafting/Recipe;)V a
net/minecraft/world/item/crafting/RecipeType bmx
	BLASTING c
	CAMPFIRE_COOKING e
	CRAFTING a
	SMELTING b
	SMITHING g
	SMOKING d
	STONECUTTING f
	register (Ljava/lang/String;)Lnet/minecraft/world/item/crafting/RecipeType; a
	tryMatch (Lnet/minecraft/world/item/crafting/Recipe;Lnet/minecraft/world/level/Level;Lnet/minecraft/world/Container;)Ljava/util/Optional; a
net/minecraft/world/item/crafting/RepairItemRecipe bmy
	assemble (Lnet/minecraft/world/Container;)Lnet/minecraft/world/item/ItemStack; a
	assemble (Lnet/minecraft/world/inventory/CraftingContainer;)Lnet/minecraft/world/item/ItemStack; a
	canCraftInDimensions (II)Z a
	getSerializer ()Lnet/minecraft/world/item/crafting/RecipeSerializer; ai_
	matches (Lnet/minecraft/world/Container;Lnet/minecraft/world/level/Level;)Z a
	matches (Lnet/minecraft/world/inventory/CraftingContainer;Lnet/minecraft/world/level/Level;)Z a
net/minecraft/world/item/crafting/ShapedRecipe bmz
	group f
	height b
	id e
	recipeItems c
	result d
	width a
	assemble (Lnet/minecraft/world/Container;)Lnet/minecraft/world/item/ItemStack; a
	assemble (Lnet/minecraft/world/inventory/CraftingContainer;)Lnet/minecraft/world/item/ItemStack; a
	canCraftInDimensions (II)Z a
	dissolvePattern ([Ljava/lang/String;Ljava/util/Map;II)Lnet/minecraft/core/NonNullList; b
	firstNonSpace (Ljava/lang/String;)I a
	getGroup ()Ljava/lang/String; d
	getHeight ()I j
	getId ()Lnet/minecraft/resources/ResourceLocation; f
	getIngredients ()Lnet/minecraft/core/NonNullList; a
	getResultItem ()Lnet/minecraft/world/item/ItemStack; c
	getSerializer ()Lnet/minecraft/world/item/crafting/RecipeSerializer; ai_
	getWidth ()I i
	itemFromJson (Lcom/google/gson/JsonObject;)Lnet/minecraft/world/item/ItemStack; a
	keyFromJson (Lcom/google/gson/JsonObject;)Ljava/util/Map; c
	lastNonSpace (Ljava/lang/String;)I b
	matches (Lnet/minecraft/world/Container;Lnet/minecraft/world/level/Level;)Z a
	matches (Lnet/minecraft/world/inventory/CraftingContainer;IIZ)Z a
	matches (Lnet/minecraft/world/inventory/CraftingContainer;Lnet/minecraft/world/level/Level;)Z a
	patternFromJson (Lcom/google/gson/JsonArray;)[Ljava/lang/String; b
	shrink ([Ljava/lang/String;)[Ljava/lang/String; a
net/minecraft/world/item/crafting/ShapedRecipe$Serializer bmz$a
	fromJson (Lnet/minecraft/resources/ResourceLocation;Lcom/google/gson/JsonObject;)Lnet/minecraft/world/item/crafting/Recipe; a
	fromJson (Lnet/minecraft/resources/ResourceLocation;Lcom/google/gson/JsonObject;)Lnet/minecraft/world/item/crafting/ShapedRecipe; b
	fromNetwork (Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/network/FriendlyByteBuf;)Lnet/minecraft/world/item/crafting/Recipe; a
	fromNetwork (Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/network/FriendlyByteBuf;)Lnet/minecraft/world/item/crafting/ShapedRecipe; b
	toNetwork (Lnet/minecraft/network/FriendlyByteBuf;Lnet/minecraft/world/item/crafting/Recipe;)V a
	toNetwork (Lnet/minecraft/network/FriendlyByteBuf;Lnet/minecraft/world/item/crafting/ShapedRecipe;)V a
net/minecraft/world/item/crafting/ShapelessRecipe bna
	group b
	id a
	ingredients d
	result c
	assemble (Lnet/minecraft/world/Container;)Lnet/minecraft/world/item/ItemStack; a
	assemble (Lnet/minecraft/world/inventory/CraftingContainer;)Lnet/minecraft/world/item/ItemStack; a
	canCraftInDimensions (II)Z a
	getGroup ()Ljava/lang/String; d
	getId ()Lnet/minecraft/resources/ResourceLocation; f
	getIngredients ()Lnet/minecraft/core/NonNullList; a
	getResultItem ()Lnet/minecraft/world/item/ItemStack; c
	getSerializer ()Lnet/minecraft/world/item/crafting/RecipeSerializer; ai_
	matches (Lnet/minecraft/world/Container;Lnet/minecraft/world/level/Level;)Z a
	matches (Lnet/minecraft/world/inventory/CraftingContainer;Lnet/minecraft/world/level/Level;)Z a
net/minecraft/world/item/crafting/ShapelessRecipe$Serializer bna$a
	fromJson (Lnet/minecraft/resources/ResourceLocation;Lcom/google/gson/JsonObject;)Lnet/minecraft/world/item/crafting/Recipe; a
	fromJson (Lnet/minecraft/resources/ResourceLocation;Lcom/google/gson/JsonObject;)Lnet/minecraft/world/item/crafting/ShapelessRecipe; b
	fromNetwork (Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/network/FriendlyByteBuf;)Lnet/minecraft/world/item/crafting/Recipe; a
	fromNetwork (Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/network/FriendlyByteBuf;)Lnet/minecraft/world/item/crafting/ShapelessRecipe; b
	itemsFromJson (Lcom/google/gson/JsonArray;)Lnet/minecraft/core/NonNullList; a
	toNetwork (Lnet/minecraft/network/FriendlyByteBuf;Lnet/minecraft/world/item/crafting/Recipe;)V a
	toNetwork (Lnet/minecraft/network/FriendlyByteBuf;Lnet/minecraft/world/item/crafting/ShapelessRecipe;)V a
net/minecraft/world/item/crafting/ShieldDecorationRecipe bnb
	assemble (Lnet/minecraft/world/Container;)Lnet/minecraft/world/item/ItemStack; a
	assemble (Lnet/minecraft/world/inventory/CraftingContainer;)Lnet/minecraft/world/item/ItemStack; a
	canCraftInDimensions (II)Z a
	getSerializer ()Lnet/minecraft/world/item/crafting/RecipeSerializer; ai_
	matches (Lnet/minecraft/world/Container;Lnet/minecraft/world/level/Level;)Z a
	matches (Lnet/minecraft/world/inventory/CraftingContainer;Lnet/minecraft/world/level/Level;)Z a
net/minecraft/world/item/crafting/ShulkerBoxColoring bnc
	assemble (Lnet/minecraft/world/Container;)Lnet/minecraft/world/item/ItemStack; a
	assemble (Lnet/minecraft/world/inventory/CraftingContainer;)Lnet/minecraft/world/item/ItemStack; a
	canCraftInDimensions (II)Z a
	getSerializer ()Lnet/minecraft/world/item/crafting/RecipeSerializer; ai_
	matches (Lnet/minecraft/world/Container;Lnet/minecraft/world/level/Level;)Z a
	matches (Lnet/minecraft/world/inventory/CraftingContainer;Lnet/minecraft/world/level/Level;)Z a
net/minecraft/world/item/crafting/SimpleCookingSerializer bnd
	defaultCookingTime v
	factory w
	fromJson (Lnet/minecraft/resources/ResourceLocation;Lcom/google/gson/JsonObject;)Lnet/minecraft/world/item/crafting/AbstractCookingRecipe; b
	fromJson (Lnet/minecraft/resources/ResourceLocation;Lcom/google/gson/JsonObject;)Lnet/minecraft/world/item/crafting/Recipe; a
	fromNetwork (Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/network/FriendlyByteBuf;)Lnet/minecraft/world/item/crafting/AbstractCookingRecipe; b
	fromNetwork (Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/network/FriendlyByteBuf;)Lnet/minecraft/world/item/crafting/Recipe; a
	toNetwork (Lnet/minecraft/network/FriendlyByteBuf;Lnet/minecraft/world/item/crafting/AbstractCookingRecipe;)V a
	toNetwork (Lnet/minecraft/network/FriendlyByteBuf;Lnet/minecraft/world/item/crafting/Recipe;)V a
net/minecraft/world/item/crafting/SimpleCookingSerializer$CookieBaker bnd$a
net/minecraft/world/item/crafting/SimpleRecipeSerializer bne
	constructor v
	fromJson (Lnet/minecraft/resources/ResourceLocation;Lcom/google/gson/JsonObject;)Lnet/minecraft/world/item/crafting/Recipe; a
	fromNetwork (Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/network/FriendlyByteBuf;)Lnet/minecraft/world/item/crafting/Recipe; a
	toNetwork (Lnet/minecraft/network/FriendlyByteBuf;Lnet/minecraft/world/item/crafting/Recipe;)V a
net/minecraft/world/item/crafting/SingleItemRecipe bnf
	group d
	id c
	ingredient a
	result b
	serializer f
	type e
	assemble (Lnet/minecraft/world/Container;)Lnet/minecraft/world/item/ItemStack; a
	canCraftInDimensions (II)Z a
	getGroup ()Ljava/lang/String; d
	getId ()Lnet/minecraft/resources/ResourceLocation; f
	getIngredients ()Lnet/minecraft/core/NonNullList; a
	getResultItem ()Lnet/minecraft/world/item/ItemStack; c
	getSerializer ()Lnet/minecraft/world/item/crafting/RecipeSerializer; ai_
	getType ()Lnet/minecraft/world/item/crafting/RecipeType; g
net/minecraft/world/item/crafting/SingleItemRecipe$Serializer bnf$a
	factory v
	fromJson (Lnet/minecraft/resources/ResourceLocation;Lcom/google/gson/JsonObject;)Lnet/minecraft/world/item/crafting/Recipe; a
	fromJson (Lnet/minecraft/resources/ResourceLocation;Lcom/google/gson/JsonObject;)Lnet/minecraft/world/item/crafting/SingleItemRecipe; b
	fromNetwork (Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/network/FriendlyByteBuf;)Lnet/minecraft/world/item/crafting/Recipe; a
	fromNetwork (Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/network/FriendlyByteBuf;)Lnet/minecraft/world/item/crafting/SingleItemRecipe; b
	toNetwork (Lnet/minecraft/network/FriendlyByteBuf;Lnet/minecraft/world/item/crafting/Recipe;)V a
	toNetwork (Lnet/minecraft/network/FriendlyByteBuf;Lnet/minecraft/world/item/crafting/SingleItemRecipe;)V a
net/minecraft/world/item/crafting/SingleItemRecipe$Serializer$SingleItemMaker bnf$a$a
net/minecraft/world/item/crafting/SmeltingRecipe bng
	getSerializer ()Lnet/minecraft/world/item/crafting/RecipeSerializer; ai_
	getToastSymbol ()Lnet/minecraft/world/item/ItemStack; h
net/minecraft/world/item/crafting/SmokingRecipe bnh
	getSerializer ()Lnet/minecraft/world/item/crafting/RecipeSerializer; ai_
	getToastSymbol ()Lnet/minecraft/world/item/ItemStack; h
net/minecraft/world/item/crafting/StonecutterRecipe bni
	getToastSymbol ()Lnet/minecraft/world/item/ItemStack; h
	matches (Lnet/minecraft/world/Container;Lnet/minecraft/world/level/Level;)Z a
net/minecraft/world/item/crafting/SuspiciousStewRecipe bnj
	assemble (Lnet/minecraft/world/Container;)Lnet/minecraft/world/item/ItemStack; a
	assemble (Lnet/minecraft/world/inventory/CraftingContainer;)Lnet/minecraft/world/item/ItemStack; a
	canCraftInDimensions (II)Z a
	getSerializer ()Lnet/minecraft/world/item/crafting/RecipeSerializer; ai_
	matches (Lnet/minecraft/world/Container;Lnet/minecraft/world/level/Level;)Z a
	matches (Lnet/minecraft/world/inventory/CraftingContainer;Lnet/minecraft/world/level/Level;)Z a
net/minecraft/world/item/crafting/TippedArrowRecipe bnk
	assemble (Lnet/minecraft/world/Container;)Lnet/minecraft/world/item/ItemStack; a
	assemble (Lnet/minecraft/world/inventory/CraftingContainer;)Lnet/minecraft/world/item/ItemStack; a
	canCraftInDimensions (II)Z a
	getSerializer ()Lnet/minecraft/world/item/crafting/RecipeSerializer; ai_
	matches (Lnet/minecraft/world/Container;Lnet/minecraft/world/level/Level;)Z a
	matches (Lnet/minecraft/world/inventory/CraftingContainer;Lnet/minecraft/world/level/Level;)Z a
net/minecraft/world/item/crafting/UpgradeRecipe bnl
	addition b
	base a
	id d
	result c
	assemble (Lnet/minecraft/world/Container;)Lnet/minecraft/world/item/ItemStack; a
	canCraftInDimensions (II)Z a
	getId ()Lnet/minecraft/resources/ResourceLocation; f
	getResultItem ()Lnet/minecraft/world/item/ItemStack; c
	getSerializer ()Lnet/minecraft/world/item/crafting/RecipeSerializer; ai_
	getToastSymbol ()Lnet/minecraft/world/item/ItemStack; h
	getType ()Lnet/minecraft/world/item/crafting/RecipeType; g
	isAdditionIngredient (Lnet/minecraft/world/item/ItemStack;)Z a
	matches (Lnet/minecraft/world/Container;Lnet/minecraft/world/level/Level;)Z a
net/minecraft/world/item/crafting/UpgradeRecipe$Serializer bnl$a
	fromJson (Lnet/minecraft/resources/ResourceLocation;Lcom/google/gson/JsonObject;)Lnet/minecraft/world/item/crafting/Recipe; a
	fromJson (Lnet/minecraft/resources/ResourceLocation;Lcom/google/gson/JsonObject;)Lnet/minecraft/world/item/crafting/UpgradeRecipe; b
	fromNetwork (Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/network/FriendlyByteBuf;)Lnet/minecraft/world/item/crafting/Recipe; a
	fromNetwork (Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/network/FriendlyByteBuf;)Lnet/minecraft/world/item/crafting/UpgradeRecipe; b
	toNetwork (Lnet/minecraft/network/FriendlyByteBuf;Lnet/minecraft/world/item/crafting/Recipe;)V a
	toNetwork (Lnet/minecraft/network/FriendlyByteBuf;Lnet/minecraft/world/item/crafting/UpgradeRecipe;)V a
net/minecraft/world/item/enchantment/ArrowDamageEnchantment bnn
	getMaxCost (I)I b
	getMaxLevel ()I a
	getMinCost (I)I a
net/minecraft/world/item/enchantment/ArrowFireEnchantment bno
	getMaxCost (I)I b
	getMaxLevel ()I a
	getMinCost (I)I a
net/minecraft/world/item/enchantment/ArrowInfiniteEnchantment bnp
	checkCompatibility (Lnet/minecraft/world/item/enchantment/Enchantment;)Z a
	getMaxCost (I)I b
	getMaxLevel ()I a
	getMinCost (I)I a
net/minecraft/world/item/enchantment/ArrowKnockbackEnchantment bnq
	getMaxCost (I)I b
	getMaxLevel ()I a
	getMinCost (I)I a
net/minecraft/world/item/enchantment/ArrowPiercingEnchantment bnr
	checkCompatibility (Lnet/minecraft/world/item/enchantment/Enchantment;)Z a
	getMaxCost (I)I b
	getMaxLevel ()I a
	getMinCost (I)I a
net/minecraft/world/item/enchantment/BindingCurseEnchantment bns
	getMaxCost (I)I b
	getMaxLevel ()I a
	getMinCost (I)I a
	isCurse ()Z c
	isTreasureOnly ()Z b
net/minecraft/world/item/enchantment/DamageEnchantment bnt
	LEVEL_COST f
	LEVEL_COST_SPAN g
	MIN_COST e
	NAMES d
	type a
	canEnchant (Lnet/minecraft/world/item/ItemStack;)Z a
	checkCompatibility (Lnet/minecraft/world/item/enchantment/Enchantment;)Z a
	doPostAttack (Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/entity/Entity;I)V a
	getDamageBonus (ILnet/minecraft/world/entity/MobType;)F a
	getMaxCost (I)I b
	getMaxLevel ()I a
	getMinCost (I)I a
net/minecraft/world/item/enchantment/DigDurabilityEnchantment bnu
	canEnchant (Lnet/minecraft/world/item/ItemStack;)Z a
	getMaxCost (I)I b
	getMaxLevel ()I a
	getMinCost (I)I a
	shouldIgnoreDurabilityDrop (Lnet/minecraft/world/item/ItemStack;ILjava/util/Random;)Z a
net/minecraft/world/item/enchantment/DiggingEnchantment bnv
	canEnchant (Lnet/minecraft/world/item/ItemStack;)Z a
	getMaxCost (I)I b
	getMaxLevel ()I a
	getMinCost (I)I a
net/minecraft/world/item/enchantment/Enchantment bnw
	category b
	descriptionId c
	rarity d
	slots a
	byId (I)Lnet/minecraft/world/item/enchantment/Enchantment; c
	canEnchant (Lnet/minecraft/world/item/ItemStack;)Z a
	checkCompatibility (Lnet/minecraft/world/item/enchantment/Enchantment;)Z a
	doPostAttack (Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/entity/Entity;I)V a
	doPostHurt (Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/entity/Entity;I)V b
	getDamageBonus (ILnet/minecraft/world/entity/MobType;)F a
	getDamageProtection (ILnet/minecraft/world/damagesource/DamageSource;)I a
	getDescriptionId ()Ljava/lang/String; g
	getFullname (I)Lnet/minecraft/network/chat/Component; d
	getMaxCost (I)I b
	getMaxLevel ()I a
	getMinCost (I)I a
	getMinLevel ()I e
	getOrCreateDescriptionId ()Ljava/lang/String; f
	getRarity ()Lnet/minecraft/world/item/enchantment/Enchantment$Rarity; d
	getSlotItems (Lnet/minecraft/world/entity/LivingEntity;)Ljava/util/Map; a
	isCompatibleWith (Lnet/minecraft/world/item/enchantment/Enchantment;)Z b
	isCurse ()Z c
	isDiscoverable ()Z i
	isTradeable ()Z h
	isTreasureOnly ()Z b
net/minecraft/world/item/enchantment/Enchantment$Rarity bnw$a
	$VALUES f
	COMMON a
	RARE c
	UNCOMMON b
	VERY_RARE d
	weight e
	getWeight ()I a
net/minecraft/world/item/enchantment/EnchantmentCategory bnx
	$VALUES o
	ARMOR a
	ARMOR_CHEST d
	ARMOR_FEET b
	ARMOR_HEAD e
	ARMOR_LEGS c
	BOW k
	BREAKABLE j
	CROSSBOW m
	DIGGER g
	FISHING_ROD h
	TRIDENT i
	VANISHABLE n
	WEAPON f
	WEARABLE l
	canEnchant (Lnet/minecraft/world/item/Item;)Z a
net/minecraft/world/item/enchantment/EnchantmentHelper bny
	deserializeEnchantments (Lnet/minecraft/nbt/ListTag;)Ljava/util/Map; a
	doPostDamageEffects (Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/entity/Entity;)V b
	doPostHurtEffects (Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/entity/Entity;)V a
	enchantItem (Ljava/util/Random;Lnet/minecraft/world/item/ItemStack;IZ)Lnet/minecraft/world/item/ItemStack; a
	filterCompatibleEnchantments (Ljava/util/List;Lnet/minecraft/world/item/enchantment/EnchantmentInstance;)V a
	getAvailableEnchantmentResults (ILnet/minecraft/world/item/ItemStack;Z)Ljava/util/List; a
	getBlockEfficiency (Lnet/minecraft/world/entity/LivingEntity;)I f
	getDamageBonus (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/entity/MobType;)F a
	getDamageProtection (Ljava/lang/Iterable;Lnet/minecraft/world/damagesource/DamageSource;)I a
	getDepthStrider (Lnet/minecraft/world/entity/LivingEntity;)I e
	getEnchantmentCost (Ljava/util/Random;IILnet/minecraft/world/item/ItemStack;)I a
	getEnchantmentLevel (Lnet/minecraft/world/item/enchantment/Enchantment;Lnet/minecraft/world/entity/LivingEntity;)I a
	getEnchantments (Lnet/minecraft/world/item/ItemStack;)Ljava/util/Map; a
	getFireAspect (Lnet/minecraft/world/entity/LivingEntity;)I c
	getFishingLuckBonus (Lnet/minecraft/world/item/ItemStack;)I b
	getFishingSpeedBonus (Lnet/minecraft/world/item/ItemStack;)I c
	getItemEnchantmentLevel (Lnet/minecraft/world/item/enchantment/Enchantment;Lnet/minecraft/world/item/ItemStack;)I a
	getKnockbackBonus (Lnet/minecraft/world/entity/LivingEntity;)I b
	getLoyalty (Lnet/minecraft/world/item/ItemStack;)I f
	getMobLooting (Lnet/minecraft/world/entity/LivingEntity;)I g
	getRandomItemWith (Lnet/minecraft/world/item/enchantment/Enchantment;Lnet/minecraft/world/entity/LivingEntity;)Ljava/util/Map$Entry; b
	getRandomItemWith (Lnet/minecraft/world/item/enchantment/Enchantment;Lnet/minecraft/world/entity/LivingEntity;Ljava/util/function/Predicate;)Ljava/util/Map$Entry; a
	getRespiration (Lnet/minecraft/world/entity/LivingEntity;)I d
	getRiptide (Lnet/minecraft/world/item/ItemStack;)I g
	getSweepingDamageRatio (Lnet/minecraft/world/entity/LivingEntity;)F a
	hasAquaAffinity (Lnet/minecraft/world/entity/LivingEntity;)Z h
	hasBindingCurse (Lnet/minecraft/world/item/ItemStack;)Z d
	hasChanneling (Lnet/minecraft/world/item/ItemStack;)Z h
	hasFrostWalker (Lnet/minecraft/world/entity/LivingEntity;)Z i
	hasSoulSpeed (Lnet/minecraft/world/entity/LivingEntity;)Z j
	hasVanishingCurse (Lnet/minecraft/world/item/ItemStack;)Z e
	isEnchantmentCompatible (Ljava/util/Collection;Lnet/minecraft/world/item/enchantment/Enchantment;)Z a
	runIterationOnInventory (Lnet/minecraft/world/item/enchantment/EnchantmentHelper$EnchantmentVisitor;Ljava/lang/Iterable;)V a
	runIterationOnItem (Lnet/minecraft/world/item/enchantment/EnchantmentHelper$EnchantmentVisitor;Lnet/minecraft/world/item/ItemStack;)V a
	selectEnchantment (Ljava/util/Random;Lnet/minecraft/world/item/ItemStack;IZ)Ljava/util/List; b
	setEnchantments (Ljava/util/Map;Lnet/minecraft/world/item/ItemStack;)V a
net/minecraft/world/item/enchantment/EnchantmentHelper$EnchantmentVisitor bny$a
net/minecraft/world/item/enchantment/EnchantmentInstance bnz
	enchantment b
	level c
net/minecraft/world/item/enchantment/Enchantments boa
	ALL_DAMAGE_PROTECTION a
	AQUA_AFFINITY g
	ARMOR_SLOTS M
	BANE_OF_ARTHROPODS o
	BINDING_CURSE k
	BLAST_PROTECTION d
	BLOCK_EFFICIENCY t
	BLOCK_FORTUNE w
	CHANNELING G
	DEPTH_STRIDER i
	FALL_PROTECTION c
	FIRE_ASPECT q
	FIRE_PROTECTION b
	FISHING_LUCK B
	FISHING_SPEED C
	FLAMING_ARROWS z
	FROST_WALKER j
	IMPALING E
	INFINITY_ARROWS A
	KNOCKBACK p
	LOYALTY D
	MENDING K
	MOB_LOOTING r
	MULTISHOT H
	PIERCING J
	POWER_ARROWS x
	PROJECTILE_PROTECTION e
	PUNCH_ARROWS y
	QUICK_CHARGE I
	RESPIRATION f
	RIPTIDE F
	SHARPNESS m
	SILK_TOUCH u
	SMITE n
	SOUL_SPEED l
	SWEEPING_EDGE s
	THORNS h
	UNBREAKING v
	VANISHING_CURSE L
	register (Ljava/lang/String;Lnet/minecraft/world/item/enchantment/Enchantment;)Lnet/minecraft/world/item/enchantment/Enchantment; a
net/minecraft/world/item/enchantment/FireAspectEnchantment bob
	getMaxCost (I)I b
	getMaxLevel ()I a
	getMinCost (I)I a
net/minecraft/world/item/enchantment/FishingSpeedEnchantment boc
	getMaxCost (I)I b
	getMaxLevel ()I a
	getMinCost (I)I a
net/minecraft/world/item/enchantment/FrostWalkerEnchantment bod
	checkCompatibility (Lnet/minecraft/world/item/enchantment/Enchantment;)Z a
	getMaxCost (I)I b
	getMaxLevel ()I a
	getMinCost (I)I a
	isTreasureOnly ()Z b
	onEntityMoved (Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;I)V a
net/minecraft/world/item/enchantment/KnockbackEnchantment boe
	getMaxCost (I)I b
	getMaxLevel ()I a
	getMinCost (I)I a
net/minecraft/world/item/enchantment/LootBonusEnchantment bof
	checkCompatibility (Lnet/minecraft/world/item/enchantment/Enchantment;)Z a
	getMaxCost (I)I b
	getMaxLevel ()I a
	getMinCost (I)I a
net/minecraft/world/item/enchantment/MendingEnchantment bog
	getMaxCost (I)I b
	getMaxLevel ()I a
	getMinCost (I)I a
	isTreasureOnly ()Z b
net/minecraft/world/item/enchantment/MultiShotEnchantment boh
	checkCompatibility (Lnet/minecraft/world/item/enchantment/Enchantment;)Z a
	getMaxCost (I)I b
	getMaxLevel ()I a
	getMinCost (I)I a
net/minecraft/world/item/enchantment/OxygenEnchantment boi
	getMaxCost (I)I b
	getMaxLevel ()I a
	getMinCost (I)I a
net/minecraft/world/item/enchantment/ProtectionEnchantment boj
	type a
	checkCompatibility (Lnet/minecraft/world/item/enchantment/Enchantment;)Z a
	getDamageProtection (ILnet/minecraft/world/damagesource/DamageSource;)I a
	getExplosionKnockbackAfterDampener (Lnet/minecraft/world/entity/LivingEntity;D)D a
	getFireAfterDampener (Lnet/minecraft/world/entity/LivingEntity;I)I a
	getMaxCost (I)I b
	getMaxLevel ()I a
	getMinCost (I)I a
net/minecraft/world/item/enchantment/ProtectionEnchantment$Type boj$a
	$VALUES i
	ALL a
	EXPLOSION d
	FALL c
	FIRE b
	PROJECTILE e
	levelCost h
	minCost g
	name f
	getLevelCost ()I c
	getMinCost ()I b
	getName ()Ljava/lang/String; a
net/minecraft/world/item/enchantment/QuickChargeEnchantment bok
	getMaxCost (I)I b
	getMaxLevel ()I a
	getMinCost (I)I a
net/minecraft/world/item/enchantment/SoulSpeedEnchantment bol
	getMaxCost (I)I b
	getMaxLevel ()I a
	getMinCost (I)I a
	isDiscoverable ()Z i
	isTradeable ()Z h
	isTreasureOnly ()Z b
net/minecraft/world/item/enchantment/SweepingEdgeEnchantment bom
	getMaxCost (I)I b
	getMaxLevel ()I a
	getMinCost (I)I a
	getSweepingDamageRatio (I)F e
net/minecraft/world/item/enchantment/ThornsEnchantment bon
	canEnchant (Lnet/minecraft/world/item/ItemStack;)Z a
	doPostHurt (Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/entity/Entity;I)V b
	getDamage (ILjava/util/Random;)I b
	getMaxCost (I)I b
	getMaxLevel ()I a
	getMinCost (I)I a
	shouldHit (ILjava/util/Random;)Z a
net/minecraft/world/item/enchantment/TridentChannelingEnchantment boo
	checkCompatibility (Lnet/minecraft/world/item/enchantment/Enchantment;)Z a
	getMaxCost (I)I b
	getMaxLevel ()I a
	getMinCost (I)I a
net/minecraft/world/item/enchantment/TridentImpalerEnchantment bop
	getDamageBonus (ILnet/minecraft/world/entity/MobType;)F a
	getMaxCost (I)I b
	getMaxLevel ()I a
	getMinCost (I)I a
net/minecraft/world/item/enchantment/TridentLoyaltyEnchantment boq
	checkCompatibility (Lnet/minecraft/world/item/enchantment/Enchantment;)Z a
	getMaxCost (I)I b
	getMaxLevel ()I a
	getMinCost (I)I a
net/minecraft/world/item/enchantment/TridentRiptideEnchantment bor
	checkCompatibility (Lnet/minecraft/world/item/enchantment/Enchantment;)Z a
	getMaxCost (I)I b
	getMaxLevel ()I a
	getMinCost (I)I a
net/minecraft/world/item/enchantment/UntouchingEnchantment bos
	checkCompatibility (Lnet/minecraft/world/item/enchantment/Enchantment;)Z a
	getMaxCost (I)I b
	getMaxLevel ()I a
	getMinCost (I)I a
net/minecraft/world/item/enchantment/VanishingCurseEnchantment bot
	getMaxCost (I)I b
	getMaxLevel ()I a
	getMinCost (I)I a
	isCurse ()Z c
	isTreasureOnly ()Z b
net/minecraft/world/item/enchantment/WaterWalkerEnchantment bou
	checkCompatibility (Lnet/minecraft/world/item/enchantment/Enchantment;)Z a
	getMaxCost (I)I b
	getMaxLevel ()I a
	getMinCost (I)I a
net/minecraft/world/item/enchantment/WaterWorkerEnchantment bov
	getMaxCost (I)I b
	getMaxLevel ()I a
	getMinCost (I)I a
net/minecraft/world/item/trading/Merchant boy
	canRestock ()Z fa
	getLevel ()Lnet/minecraft/world/level/Level; eV
	getNotifyTradeSound ()Lnet/minecraft/sounds/SoundEvent; eR
	getOffers ()Lnet/minecraft/world/item/trading/MerchantOffers; eP
	getTradingPlayer ()Lnet/minecraft/world/entity/player/Player; eN
	getVillagerXp ()I eM
	notifyTrade (Lnet/minecraft/world/item/trading/MerchantOffer;)V a
	notifyTradeUpdated (Lnet/minecraft/world/item/ItemStack;)V k
	openTradingScreen (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/network/chat/Component;I)V a
	overrideOffers (Lnet/minecraft/world/item/trading/MerchantOffers;)V a
	overrideXp (I)V t
	setTradingPlayer (Lnet/minecraft/world/entity/player/Player;)V f
	showProgressBar ()Z eQ
net/minecraft/world/item/trading/MerchantOffer boz
	baseCostA a
	costB b
	demand h
	maxUses e
	priceMultiplier i
	result c
	rewardExp f
	specialPriceDiff g
	uses d
	xp j
	addToSpecialPriceDiff (I)V a
	assemble ()Lnet/minecraft/world/item/ItemStack; f
	createTag ()Lnet/minecraft/nbt/CompoundTag; t
	getBaseCostA ()Lnet/minecraft/world/item/ItemStack; a
	getCostA ()Lnet/minecraft/world/item/ItemStack; b
	getCostB ()Lnet/minecraft/world/item/ItemStack; c
	getDemand ()I k
	getMaxUses ()I i
	getPriceMultiplier ()F n
	getResult ()Lnet/minecraft/world/item/ItemStack; d
	getSpecialPriceDiff ()I m
	getUses ()I g
	getXp ()I o
	increaseUses ()V j
	isOutOfStock ()Z p
	isRequiredItem (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/item/ItemStack;)Z c
	isSame (Lnet/minecraft/world/item/trading/MerchantOffer;)Z a
	needsRestock ()Z r
	resetSpecialPriceDiff ()V l
	resetUses ()V h
	satisfiedBy (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/item/ItemStack;)Z a
	setSpecialPriceDiff (I)V b
	setToOutOfStock ()V q
	shouldRewardExp ()Z s
	take (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/item/ItemStack;)Z b
	updateDemand ()V e
net/minecraft/world/item/trading/MerchantOffers bpa
	createFromStream (Lnet/minecraft/network/FriendlyByteBuf;)Lnet/minecraft/world/item/trading/MerchantOffers; b
	createTag ()Lnet/minecraft/nbt/CompoundTag; a
	getRecipeFor (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/item/ItemStack;I)Lnet/minecraft/world/item/trading/MerchantOffer; a
	writeToStream (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/world/level/BaseCommandBlock bpc
	DEFAULT_NAME c
	TIME_FORMAT b
	command i
	lastExecution d
	lastOutput h
	name j
	successCount f
	trackOutput g
	updateLastExecution e
	acceptsFailure ()Z b
	acceptsSuccess ()Z a
	createCommandSourceStack ()Lnet/minecraft/commands/CommandSourceStack; h
	getCommand ()Ljava/lang/String; k
	getLastOutput ()Lnet/minecraft/network/chat/Component; j
	getLevel ()Lnet/minecraft/server/level/ServerLevel; d
	getName ()Lnet/minecraft/network/chat/Component; l
	getPosition ()Lnet/minecraft/world/phys/Vec3; f
	getSuccessCount ()I i
	isTrackOutput ()Z m
	load (Lnet/minecraft/nbt/CompoundTag;)V b
	onUpdated ()V e
	performCommand (Lnet/minecraft/world/level/Level;)Z a
	save (Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/nbt/CompoundTag; a
	sendMessage (Lnet/minecraft/network/chat/Component;Ljava/util/UUID;)V a
	setCommand (Ljava/lang/String;)V a
	setLastOutput (Lnet/minecraft/network/chat/Component;)V b
	setName (Lnet/minecraft/network/chat/Component;)V a
	setSuccessCount (I)V a
	setTrackOutput (Z)V a
	shouldInformAdmins ()Z S_
	usedBy (Lnet/minecraft/world/entity/player/Player;)Lnet/minecraft/world/InteractionResult; a
net/minecraft/world/level/BaseSpawner bpd
	LOGGER a
	displayEntity j
	maxNearbyEntities k
	maxSpawnDelay h
	minSpawnDelay g
	nextSpawnData d
	oSpin f
	requiredPlayerRange l
	spawnCount i
	spawnDelay b
	spawnPotentials c
	spawnRange m
	spin e
	addWithPassengers (Lnet/minecraft/world/entity/Entity;)V a
	broadcastEvent (I)V a
	delay ()V i
	getEntityId ()Lnet/minecraft/resources/ResourceLocation; g
	getLevel ()Lnet/minecraft/world/level/Level; a
	getOrCreateDisplayEntity ()Lnet/minecraft/world/entity/Entity; d
	getPos ()Lnet/minecraft/core/BlockPos; b
	getSpin ()D e
	getoSpin ()D f
	isNearPlayer ()Z h
	load (Lnet/minecraft/nbt/CompoundTag;)V a
	onEventTriggered (I)Z b
	save (Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/nbt/CompoundTag; b
	setEntityId (Lnet/minecraft/world/entity/EntityType;)V a
	setNextSpawnData (Lnet/minecraft/world/level/SpawnData;)V a
	tick ()V c
net/minecraft/world/level/BlockAndTintGetter bpe
	canSeeSky (Lnet/minecraft/core/BlockPos;)Z f
	getBlockTint (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/ColorResolver;)I a
	getBrightness (Lnet/minecraft/world/level/LightLayer;Lnet/minecraft/core/BlockPos;)I a
	getLightEngine ()Lnet/minecraft/world/level/lighting/LevelLightEngine; e
	getRawBrightness (Lnet/minecraft/core/BlockPos;I)I b
	getShade (Lnet/minecraft/core/Direction;Z)F a
net/minecraft/world/level/BlockEventData bpf
	block b
	paramA c
	paramB d
	pos a
	getBlock ()Lnet/minecraft/world/level/block/Block; b
	getParamA ()I c
	getParamB ()I d
	getPos ()Lnet/minecraft/core/BlockPos; a
net/minecraft/world/level/BlockGetter bpg
	clip (Lnet/minecraft/world/level/ClipContext;)Lnet/minecraft/world/phys/BlockHitResult; a
	clipWithInteractionOverride (Lnet/minecraft/world/phys/Vec3;Lnet/minecraft/world/phys/Vec3;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/VoxelShape;Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/phys/BlockHitResult; a
	getBlockEntity (Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/entity/BlockEntity; c
	getBlockState (Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; d_
	getBlockStates (Lnet/minecraft/world/phys/AABB;)Ljava/util/stream/Stream; a
	getFluidState (Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/material/FluidState; b
	getLightBlock (Lnet/minecraft/core/BlockPos;)I g
	getLightEmission (Lnet/minecraft/core/BlockPos;)I h
	getMaxBuildHeight ()I I
	getMaxLightLevel ()I H
	traverseBlocks (Lnet/minecraft/world/level/ClipContext;Ljava/util/function/BiFunction;Ljava/util/function/Function;)Ljava/lang/Object; a
net/minecraft/world/level/ChunkPos bph
	INVALID_CHUNK_POS a
	x b
	z c
	asLong (II)J a
	getBlockAt (III)Lnet/minecraft/core/BlockPos; a
	getChessboardDistance (Lnet/minecraft/world/level/ChunkPos;)I a
	getMaxBlockX ()I f
	getMaxBlockZ ()I g
	getMiddleBlockPosition (I)Lnet/minecraft/core/BlockPos; a
	getMiddleBlockX ()I b
	getMiddleBlockZ ()I c
	getMinBlockX ()I d
	getMinBlockZ ()I e
	getRegionLocalX ()I j
	getRegionLocalZ ()I k
	getRegionX ()I h
	getRegionZ ()I i
	getWorldPosition ()Lnet/minecraft/core/BlockPos; l
	getX (J)I a
	getZ (J)I b
	rangeClosed (Lnet/minecraft/world/level/ChunkPos;I)Ljava/util/stream/Stream; a
	rangeClosed (Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/world/level/ChunkPos;)Ljava/util/stream/Stream; a
	toLong ()J a
net/minecraft/world/level/ChunkTickList bpi
	ticks a
	toId b
	copyOut (Lnet/minecraft/world/level/TickList;)V a
	create (Lnet/minecraft/nbt/ListTag;Ljava/util/function/Function;Ljava/util/function/Function;)Lnet/minecraft/world/level/ChunkTickList; a
	hasScheduledTick (Lnet/minecraft/core/BlockPos;Ljava/lang/Object;)Z a
	save ()Lnet/minecraft/nbt/ListTag; b
	scheduleTick (Lnet/minecraft/core/BlockPos;Ljava/lang/Object;ILnet/minecraft/world/level/TickPriority;)V a
	size ()I a
	willTickThisTick (Lnet/minecraft/core/BlockPos;Ljava/lang/Object;)Z b
net/minecraft/world/level/ChunkTickList$ScheduledTick bpi$a
	delay b
	pos a
	priority c
	type d
net/minecraft/world/level/ClipContext bpj
	block c
	collisionContext e
	fluid d
	from a
	to b
	getBlockShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	getFluidShape (Lnet/minecraft/world/level/material/FluidState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	getFrom ()Lnet/minecraft/world/phys/Vec3; b
	getTo ()Lnet/minecraft/world/phys/Vec3; a
net/minecraft/world/level/ClipContext$Block bpj$a
	$VALUES e
	COLLIDER a
	OUTLINE b
	VISUAL c
	shapeGetter d
net/minecraft/world/level/ClipContext$Fluid bpj$b
	$VALUES e
	ANY c
	NONE a
	SOURCE_ONLY b
	canPick d
	canPick (Lnet/minecraft/world/level/material/FluidState;)Z a
net/minecraft/world/level/ClipContext$ShapeGetter bpj$c
net/minecraft/world/level/CollisionGetter bpk
	getBlockCollisions (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/phys/AABB;)Ljava/util/stream/Stream; b
	getBlockCollisions (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/phys/AABB;Ljava/util/function/BiPredicate;)Ljava/util/stream/Stream; a
	getChunkForCollisions (II)Lnet/minecraft/world/level/BlockGetter; c
	getCollisions (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/phys/AABB;Ljava/util/function/Predicate;)Ljava/util/stream/Stream; d
	getEntityCollisions (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/phys/AABB;Ljava/util/function/Predicate;)Ljava/util/stream/Stream; c
	getWorldBorder ()Lnet/minecraft/world/level/border/WorldBorder; f
	isUnobstructed (Lnet/minecraft/world/entity/Entity;)Z i
	isUnobstructed (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/phys/shapes/VoxelShape;)Z a
	isUnobstructed (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Z a
	noCollision (Lnet/minecraft/world/entity/Entity;)Z j
	noCollision (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/phys/AABB;)Z a_
	noCollision (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/phys/AABB;Ljava/util/function/Predicate;)Z b
	noCollision (Lnet/minecraft/world/phys/AABB;)Z b
net/minecraft/world/level/CollisionSpliterator bpl
	box b
	collisionGetter g
	context c
	cursor d
	entityShape f
	needsBorderCheck h
	pos e
	predicate i
	source a
	collisionCheck (Ljava/util/function/Consumer;)Z a
	getChunk (II)Lnet/minecraft/world/level/BlockGetter; a
	isBoxFullyWithinWorldBorder (Lnet/minecraft/world/level/border/WorldBorder;Lnet/minecraft/world/phys/AABB;)Z a
	isCloseToBorder (Lnet/minecraft/world/phys/shapes/VoxelShape;Lnet/minecraft/world/phys/AABB;)Z a
	isOutsideBorder (Lnet/minecraft/world/phys/shapes/VoxelShape;Lnet/minecraft/world/phys/AABB;)Z b
	worldBorderCheck (Ljava/util/function/Consumer;)Z b
net/minecraft/world/level/CustomSpawner bpm
	tick (Lnet/minecraft/server/level/ServerLevel;ZZ)I a
net/minecraft/world/level/DataPackConfig bpn
	CODEC b
	DEFAULT a
	disabled d
	enabled c
	getDisabled ()Ljava/util/List; b
	getEnabled ()Ljava/util/List; a
net/minecraft/world/level/DefaultExplosionDamageCalculator bpo
	$VALUES b
	INSTANCE a
	getBlockExplosionResistance (Lnet/minecraft/world/level/Explosion;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/material/FluidState;)Ljava/util/Optional; a
	shouldBlockExplode (Lnet/minecraft/world/level/Explosion;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;F)Z a
net/minecraft/world/level/EmptyBlockGetter bpp
	$VALUES b
	INSTANCE a
	getBlockEntity (Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/entity/BlockEntity; c
	getBlockState (Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; d_
	getFluidState (Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/material/FluidState; b
net/minecraft/world/level/EmptyTickList bpq
	INSTANCE a
	empty ()Lnet/minecraft/world/level/EmptyTickList; b
	hasScheduledTick (Lnet/minecraft/core/BlockPos;Ljava/lang/Object;)Z a
	scheduleTick (Lnet/minecraft/core/BlockPos;Ljava/lang/Object;I)V a
	scheduleTick (Lnet/minecraft/core/BlockPos;Ljava/lang/Object;ILnet/minecraft/world/level/TickPriority;)V a
	size ()I a
	willTickThisTick (Lnet/minecraft/core/BlockPos;Ljava/lang/Object;)Z b
net/minecraft/world/level/EntityBasedExplosionDamageCalculator bpr
	source a
	getBlockExplosionResistance (Lnet/minecraft/world/level/Explosion;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/material/FluidState;)Ljava/util/Optional; a
	shouldBlockExplode (Lnet/minecraft/world/level/Explosion;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;F)Z a
net/minecraft/world/level/EntityGetter bps
	getEntities (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/phys/AABB;)Ljava/util/List; a
	getEntities (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/phys/AABB;Ljava/util/function/Predicate;)Ljava/util/List; a
	getEntitiesOfClass (Ljava/lang/Class;Lnet/minecraft/world/phys/AABB;)Ljava/util/List; a
	getEntitiesOfClass (Ljava/lang/Class;Lnet/minecraft/world/phys/AABB;Ljava/util/function/Predicate;)Ljava/util/List; a
	getEntityCollisions (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/phys/AABB;Ljava/util/function/Predicate;)Ljava/util/stream/Stream; c
	getLoadedEntitiesOfClass (Ljava/lang/Class;Lnet/minecraft/world/phys/AABB;)Ljava/util/List; b
	getLoadedEntitiesOfClass (Ljava/lang/Class;Lnet/minecraft/world/phys/AABB;Ljava/util/function/Predicate;)Ljava/util/List; b
	getNearbyEntities (Ljava/lang/Class;Lnet/minecraft/world/entity/ai/targeting/TargetingConditions;Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/phys/AABB;)Ljava/util/List; a
	getNearbyPlayers (Lnet/minecraft/world/entity/ai/targeting/TargetingConditions;Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/phys/AABB;)Ljava/util/List; a
	getNearestEntity (Ljava/lang/Class;Lnet/minecraft/world/entity/ai/targeting/TargetingConditions;Lnet/minecraft/world/entity/LivingEntity;DDDLnet/minecraft/world/phys/AABB;)Lnet/minecraft/world/entity/LivingEntity; a
	getNearestEntity (Ljava/util/List;Lnet/minecraft/world/entity/ai/targeting/TargetingConditions;Lnet/minecraft/world/entity/LivingEntity;DDD)Lnet/minecraft/world/entity/LivingEntity; a
	getNearestLoadedEntity (Ljava/lang/Class;Lnet/minecraft/world/entity/ai/targeting/TargetingConditions;Lnet/minecraft/world/entity/LivingEntity;DDDLnet/minecraft/world/phys/AABB;)Lnet/minecraft/world/entity/LivingEntity; b
	getNearestPlayer (DDDDLjava/util/function/Predicate;)Lnet/minecraft/world/entity/player/Player; a
	getNearestPlayer (DDDDZ)Lnet/minecraft/world/entity/player/Player; a
	getNearestPlayer (Lnet/minecraft/world/entity/Entity;D)Lnet/minecraft/world/entity/player/Player; a
	getNearestPlayer (Lnet/minecraft/world/entity/ai/targeting/TargetingConditions;DDD)Lnet/minecraft/world/entity/player/Player; a
	getNearestPlayer (Lnet/minecraft/world/entity/ai/targeting/TargetingConditions;Lnet/minecraft/world/entity/LivingEntity;)Lnet/minecraft/world/entity/player/Player; a
	getNearestPlayer (Lnet/minecraft/world/entity/ai/targeting/TargetingConditions;Lnet/minecraft/world/entity/LivingEntity;DDD)Lnet/minecraft/world/entity/player/Player; a
	getPlayerByUUID (Ljava/util/UUID;)Lnet/minecraft/world/entity/player/Player; b
	hasNearbyAlivePlayer (DDDD)Z a
	isUnobstructed (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/phys/shapes/VoxelShape;)Z a
	players ()Ljava/util/List; w
net/minecraft/world/level/Explosion bpt
	blockInteraction b
	damageCalculator k
	damageSource j
	fire a
	hitPlayers m
	level d
	radius i
	random c
	source h
	toBlow l
	x e
	y f
	z g
	addBlockDrops (Lit/unimi/dsi/fastutil/objects/ObjectArrayList;Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/core/BlockPos;)V a
	clearToBlow ()V e
	explode ()V a
	finalizeExplosion (Z)V a
	getDamageSource ()Lnet/minecraft/world/damagesource/DamageSource; b
	getHitPlayers ()Ljava/util/Map; c
	getSeenPercent (Lnet/minecraft/world/phys/Vec3;Lnet/minecraft/world/entity/Entity;)F a
	getSourceMob ()Lnet/minecraft/world/entity/LivingEntity; d
	getToBlow ()Ljava/util/List; f
	makeDamageCalculator (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/world/level/ExplosionDamageCalculator; a
net/minecraft/world/level/Explosion$BlockInteraction bpt$a
	$VALUES d
	BREAK b
	DESTROY c
	NONE a
net/minecraft/world/level/ExplosionDamageCalculator bpu
	getBlockExplosionResistance (Lnet/minecraft/world/level/Explosion;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/material/FluidState;)Ljava/util/Optional; a
	shouldBlockExplode (Lnet/minecraft/world/level/Explosion;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;F)Z a
net/minecraft/world/level/FoliageColor bpv
	pixels a
	get (DD)I a
	getBirchColor ()I b
	getDefaultColor ()I c
	getEvergreenColor ()I a
	init ([I)V a
net/minecraft/world/level/ForcedChunksSavedData bpw
	chunks a
	getChunks ()Lit/unimi/dsi/fastutil/longs/LongSet; a
	load (Lnet/minecraft/nbt/CompoundTag;)V a
	save (Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/nbt/CompoundTag; b
net/minecraft/world/level/GameRules bpx
	GAME_RULE_TYPES I
	LOGGER H
	RULE_ANNOUNCE_ADVANCEMENTS w
	RULE_COMMANDBLOCKOUTPUT h
	RULE_DAYLIGHT j
	RULE_DISABLE_ELYTRA_MOVEMENT_CHECK r
	RULE_DISABLE_RAIDS x
	RULE_DOBLOCKDROPS f
	RULE_DOENTITYDROPS g
	RULE_DOFIRETICK a
	RULE_DOINSOMNIA y
	RULE_DOMOBLOOT e
	RULE_DOMOBSPAWNING d
	RULE_DO_IMMEDIATE_RESPAWN z
	RULE_DO_PATROL_SPAWNING D
	RULE_DO_TRADER_SPAWNING E
	RULE_DROWNING_DAMAGE A
	RULE_FALL_DAMAGE B
	RULE_FIRE_DAMAGE C
	RULE_FORGIVE_DEAD_PLAYERS F
	RULE_KEEPINVENTORY c
	RULE_LIMITED_CRAFTING u
	RULE_LOGADMINCOMMANDS k
	RULE_MAX_COMMAND_CHAIN_LENGTH v
	RULE_MAX_ENTITY_CRAMMING s
	RULE_MOBGRIEFING b
	RULE_NATURAL_REGENERATION i
	RULE_RANDOMTICKING m
	RULE_REDUCEDDEBUGINFO o
	RULE_SENDCOMMANDFEEDBACK n
	RULE_SHOWDEATHMESSAGES l
	RULE_SPAWN_RADIUS q
	RULE_SPECTATORSGENERATECHUNKS p
	RULE_UNIVERSAL_ANGER G
	RULE_WEATHER_CYCLE t
	rules J
	assignCap (Lnet/minecraft/world/level/GameRules$Key;Lnet/minecraft/world/level/GameRules;Lnet/minecraft/server/MinecraftServer;)V a
	assignFrom (Lnet/minecraft/world/level/GameRules;Lnet/minecraft/server/MinecraftServer;)V a
	callVisitorCap (Lnet/minecraft/world/level/GameRules$GameRuleTypeVisitor;Lnet/minecraft/world/level/GameRules$Key;Lnet/minecraft/world/level/GameRules$Type;)V a
	copy ()Lnet/minecraft/world/level/GameRules; b
	createTag ()Lnet/minecraft/nbt/CompoundTag; a
	getBoolean (Lnet/minecraft/world/level/GameRules$Key;)Z b
	getInt (Lnet/minecraft/world/level/GameRules$Key;)I c
	getRule (Lnet/minecraft/world/level/GameRules$Key;)Lnet/minecraft/world/level/GameRules$Value; a
	loadFromTag (Lcom/mojang/serialization/DynamicLike;)V a
	register (Ljava/lang/String;Lnet/minecraft/world/level/GameRules$Category;Lnet/minecraft/world/level/GameRules$Type;)Lnet/minecraft/world/level/GameRules$Key; a
	visitGameRuleTypes (Lnet/minecraft/world/level/GameRules$GameRuleTypeVisitor;)V a
net/minecraft/world/level/GameRules$BooleanValue bpx$a
	value b
	copy ()Lnet/minecraft/world/level/GameRules$BooleanValue; e
	copy ()Lnet/minecraft/world/level/GameRules$Value; f
	create (Z)Lnet/minecraft/world/level/GameRules$Type; b
	create (ZLjava/util/function/BiConsumer;)Lnet/minecraft/world/level/GameRules$Type; b
	deserialize (Ljava/lang/String;)V a
	get ()Z a
	getCommandResult ()I c
	getSelf ()Lnet/minecraft/world/level/GameRules$BooleanValue; d
	getSelf ()Lnet/minecraft/world/level/GameRules$Value; g
	serialize ()Ljava/lang/String; b
	set (ZLnet/minecraft/server/MinecraftServer;)V a
	setFrom (Lnet/minecraft/world/level/GameRules$BooleanValue;Lnet/minecraft/server/MinecraftServer;)V a
	setFrom (Lnet/minecraft/world/level/GameRules$Value;Lnet/minecraft/server/MinecraftServer;)V a
	updateFromArgument (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)V a
net/minecraft/world/level/GameRules$Category bpx$b
	$VALUES i
	CHAT f
	DROPS d
	MISC g
	MOBS b
	PLAYER a
	SPAWNING c
	UPDATES e
	descriptionId h
	getDescriptionId ()Ljava/lang/String; a
net/minecraft/world/level/GameRules$GameRuleTypeVisitor bpx$c
	visit (Lnet/minecraft/world/level/GameRules$Key;Lnet/minecraft/world/level/GameRules$Type;)V a
	visitBoolean (Lnet/minecraft/world/level/GameRules$Key;Lnet/minecraft/world/level/GameRules$Type;)V b
	visitInteger (Lnet/minecraft/world/level/GameRules$Key;Lnet/minecraft/world/level/GameRules$Type;)V c
net/minecraft/world/level/GameRules$IntegerValue bpx$d
	value b
	copy ()Lnet/minecraft/world/level/GameRules$IntegerValue; e
	copy ()Lnet/minecraft/world/level/GameRules$Value; f
	create (I)Lnet/minecraft/world/level/GameRules$Type; b
	create (ILjava/util/function/BiConsumer;)Lnet/minecraft/world/level/GameRules$Type; a
	deserialize (Ljava/lang/String;)V a
	get ()I a
	getCommandResult ()I c
	getSelf ()Lnet/minecraft/world/level/GameRules$IntegerValue; d
	getSelf ()Lnet/minecraft/world/level/GameRules$Value; g
	safeParse (Ljava/lang/String;)I c
	serialize ()Ljava/lang/String; b
	set (ILnet/minecraft/server/MinecraftServer;)V a
	setFrom (Lnet/minecraft/world/level/GameRules$IntegerValue;Lnet/minecraft/server/MinecraftServer;)V a
	setFrom (Lnet/minecraft/world/level/GameRules$Value;Lnet/minecraft/server/MinecraftServer;)V a
	tryDeserialize (Ljava/lang/String;)Z b
	updateFromArgument (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)V a
net/minecraft/world/level/GameRules$Key bpx$e
	category b
	id a
	getCategory ()Lnet/minecraft/world/level/GameRules$Category; c
	getDescriptionId ()Ljava/lang/String; b
	getId ()Ljava/lang/String; a
net/minecraft/world/level/GameRules$Type bpx$f
	argument a
	callback c
	constructor b
	visitorCaller d
	callVisitor (Lnet/minecraft/world/level/GameRules$GameRuleTypeVisitor;Lnet/minecraft/world/level/GameRules$Key;)V a
	createArgument (Ljava/lang/String;)Lcom/mojang/brigadier/builder/RequiredArgumentBuilder; a
	createRule ()Lnet/minecraft/world/level/GameRules$Value; a
net/minecraft/world/level/GameRules$Value bpx$g
	type a
	copy ()Lnet/minecraft/world/level/GameRules$Value; f
	deserialize (Ljava/lang/String;)V a
	getCommandResult ()I c
	getSelf ()Lnet/minecraft/world/level/GameRules$Value; g
	onChanged (Lnet/minecraft/server/MinecraftServer;)V a
	serialize ()Ljava/lang/String; b
	setFrom (Lnet/minecraft/world/level/GameRules$Value;Lnet/minecraft/server/MinecraftServer;)V a
	setFromArgument (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)V b
	updateFromArgument (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)V a
net/minecraft/world/level/GameRules$VisitorCaller bpx$h
net/minecraft/world/level/GameType bpy
	$VALUES h
	ADVENTURE d
	CREATIVE c
	NOT_SET a
	SPECTATOR e
	SURVIVAL b
	id f
	name g
	byId (I)Lnet/minecraft/world/level/GameType; a
	byId (ILnet/minecraft/world/level/GameType;)Lnet/minecraft/world/level/GameType; a
	byName (Ljava/lang/String;)Lnet/minecraft/world/level/GameType; a
	byName (Ljava/lang/String;Lnet/minecraft/world/level/GameType;)Lnet/minecraft/world/level/GameType; a
	getDisplayName ()Lnet/minecraft/network/chat/Component; c
	getId ()I a
	getName ()Ljava/lang/String; b
	isBlockPlacingRestricted ()Z d
	isCreative ()Z e
	isSurvival ()Z f
	updatePlayerAbilities (Lnet/minecraft/world/entity/player/Abilities;)V a
net/minecraft/world/level/GrassColor bpz
	pixels a
	get (DD)I a
	init ([I)V a
net/minecraft/world/level/ItemLike bqa
	asItem ()Lnet/minecraft/world/item/Item; h
net/minecraft/world/level/Level bqb
	DIRECTIONS a
	END i
	LOGGER e
	NETHER h
	OVERWORLD g
	RESOURCE_KEY_CODEC f
	addend o
	biomeManager A
	blockEntitiesToUnload m
	blockEntityList j
	dimension B
	dimensionType x
	dimensionTypeKey C
	isClientSide v
	isDebug c
	levelData u
	oRainLevel p
	oThunderLevel r
	pendingBlockEntities l
	profiler y
	rainLevel q
	randValue n
	random t
	skyDarken d
	thread b
	thunderLevel s
	tickableBlockEntities k
	updatingBlockEntities w
	worldBorder z
	addAllPendingBlockEntities (Ljava/util/Collection;)V a
	addAlwaysVisibleParticle (Lnet/minecraft/core/particles/ParticleOptions;DDDDDD)V b
	addAlwaysVisibleParticle (Lnet/minecraft/core/particles/ParticleOptions;ZDDDDDD)V b
	addBlockEntity (Lnet/minecraft/world/level/block/entity/BlockEntity;)Z a
	addParticle (Lnet/minecraft/core/particles/ParticleOptions;DDDDDD)V a
	addParticle (Lnet/minecraft/core/particles/ParticleOptions;ZDDDDDD)V a
	blockEntityChanged (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/entity/BlockEntity;)V b
	blockEvent (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Block;II)V a
	broadcastEntityEvent (Lnet/minecraft/world/entity/Entity;B)V a
	createFireworks (DDDDDDLnet/minecraft/nbt/CompoundTag;)V a
	destroyBlock (Lnet/minecraft/core/BlockPos;ZLnet/minecraft/world/entity/Entity;I)Z a
	destroyBlockProgress (ILnet/minecraft/core/BlockPos;I)V a
	dimension ()Lnet/minecraft/resources/ResourceKey; W
	dimensionType ()Lnet/minecraft/world/level/dimension/DimensionType; m
	dimensionTypeKey ()Lnet/minecraft/resources/ResourceKey; V
	disconnect ()V P
	explode (Lnet/minecraft/world/entity/Entity;DDDFLnet/minecraft/world/level/Explosion$BlockInteraction;)Lnet/minecraft/world/level/Explosion; a
	explode (Lnet/minecraft/world/entity/Entity;DDDFZLnet/minecraft/world/level/Explosion$BlockInteraction;)Lnet/minecraft/world/level/Explosion; a
	explode (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/damagesource/DamageSource;Lnet/minecraft/world/level/ExplosionDamageCalculator;DDDFZLnet/minecraft/world/level/Explosion$BlockInteraction;)Lnet/minecraft/world/level/Explosion; a
	fillReportDetails (Lnet/minecraft/CrashReport;)Lnet/minecraft/CrashReportCategory; a
	gatherChunkSourceStats ()Ljava/lang/String; M
	getBestNeighborSignal (Lnet/minecraft/core/BlockPos;)I s
	getBiomeManager ()Lnet/minecraft/world/level/biome/BiomeManager; d
	getBlockEntity (Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/entity/BlockEntity; c
	getBlockRandomPos (IIII)Lnet/minecraft/core/BlockPos; a
	getBlockState (Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; d_
	getChunk (II)Lnet/minecraft/world/level/chunk/ChunkAccess; a
	getChunk (II)Lnet/minecraft/world/level/chunk/LevelChunk; d
	getChunk (IILnet/minecraft/world/level/chunk/ChunkStatus;Z)Lnet/minecraft/world/level/chunk/ChunkAccess; a
	getChunkAt (Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/chunk/LevelChunk; n
	getChunkForCollisions (II)Lnet/minecraft/world/level/BlockGetter; c
	getCurrentDifficultyAt (Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/DifficultyInstance; d
	getDayTime ()J R
	getDirectSignalTo (Lnet/minecraft/core/BlockPos;)I q
	getEntities (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/phys/AABB;Ljava/util/function/Predicate;)Ljava/util/List; a
	getEntities (Lnet/minecraft/world/entity/EntityType;Lnet/minecraft/world/phys/AABB;Ljava/util/function/Predicate;)Ljava/util/List; a
	getEntitiesOfClass (Ljava/lang/Class;Lnet/minecraft/world/phys/AABB;Ljava/util/function/Predicate;)Ljava/util/List; a
	getEntity (I)Lnet/minecraft/world/entity/Entity; a
	getFluidState (Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/material/FluidState; b
	getFreeMapId ()I t
	getGameRules ()Lnet/minecraft/world/level/GameRules; S
	getGameTime ()J Q
	getHeight (Lnet/minecraft/world/level/levelgen/Heightmap$Types;II)I a
	getLevel ()Lnet/minecraft/world/level/Level; n
	getLevelData ()Lnet/minecraft/world/level/storage/LevelData; u_
	getLightEngine ()Lnet/minecraft/world/level/lighting/LevelLightEngine; e
	getLoadedEntitiesOfClass (Ljava/lang/Class;Lnet/minecraft/world/phys/AABB;Ljava/util/function/Predicate;)Ljava/util/List; b
	getMapData (Ljava/lang/String;)Lnet/minecraft/world/level/saveddata/maps/MapItemSavedData; a
	getPendingBlockEntityAt (Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/entity/BlockEntity; D
	getProfiler ()Lnet/minecraft/util/profiling/ProfilerFiller; X
	getProfilerSupplier ()Ljava/util/function/Supplier; Y
	getRainLevel (F)F d
	getRandom ()Ljava/util/Random; v_
	getRecipeManager ()Lnet/minecraft/world/item/crafting/RecipeManager; o
	getRelativeCeilingHeight (Lnet/minecraft/core/BlockPos;D)D a
	getRelativeFloorHeight (Lnet/minecraft/core/BlockPos;)D m
	getRelativeFloorHeight (Lnet/minecraft/core/BlockPos;Ljava/util/function/Predicate;)D c
	getScoreboard ()Lnet/minecraft/world/scores/Scoreboard; D
	getSeaLevel ()I t_
	getServer ()Lnet/minecraft/server/MinecraftServer; l
	getSignal (Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;)I b
	getSkyDarken ()I c
	getSunAngle (F)F a
	getTagManager ()Lnet/minecraft/tags/TagManager; p
	getThunderLevel (F)F b
	getTopBlockState (Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; i
	getWorldBorder ()Lnet/minecraft/world/level/border/WorldBorder; f
	globalLevelEvent (ILnet/minecraft/core/BlockPos;I)V b
	guardEntityTick (Ljava/util/function/Consumer;Lnet/minecraft/world/entity/Entity;)V a
	hasNeighborSignal (Lnet/minecraft/core/BlockPos;)Z r
	hasSignal (Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;)Z a
	isClientSide ()Z s_
	isDay ()Z J
	isDebug ()Z Z
	isFluidAtPosition (Lnet/minecraft/core/BlockPos;Ljava/util/function/Predicate;)Z b
	isHumidAt (Lnet/minecraft/core/BlockPos;)Z u
	isInSpawnableBounds (Lnet/minecraft/core/BlockPos;)Z k
	isInWorldBounds (Lnet/minecraft/core/BlockPos;)Z j
	isInWorldBoundsHorizontal (Lnet/minecraft/core/BlockPos;)Z e
	isLoaded (Lnet/minecraft/core/BlockPos;)Z p
	isNight ()Z K
	isOutsideBuildHeight (I)Z b
	isOutsideBuildHeight (Lnet/minecraft/core/BlockPos;)Z l
	isOutsideSpawnableHeight (I)Z d
	isRaining ()Z U
	isRainingAt (Lnet/minecraft/core/BlockPos;)Z t
	isStateAtPosition (Lnet/minecraft/core/BlockPos;Ljava/util/function/Predicate;)Z a
	isThundering ()Z T
	loadedAndEntityCanStandOn (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/Entity;)Z a
	loadedAndEntityCanStandOnFace (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/Entity;Lnet/minecraft/core/Direction;)Z a
	mayInteract (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/core/BlockPos;)Z a
	neighborChanged (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Block;Lnet/minecraft/core/BlockPos;)V a
	noSave ()Z q
	onBlockStateChange (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/state/BlockState;)V a
	playLocalSound (DDDLnet/minecraft/sounds/SoundEvent;Lnet/minecraft/sounds/SoundSource;FFZ)V a
	playSound (Lnet/minecraft/world/entity/player/Player;DDDLnet/minecraft/sounds/SoundEvent;Lnet/minecraft/sounds/SoundSource;FF)V a
	playSound (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/core/BlockPos;Lnet/minecraft/sounds/SoundEvent;Lnet/minecraft/sounds/SoundSource;FF)V a
	playSound (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/entity/Entity;Lnet/minecraft/sounds/SoundEvent;Lnet/minecraft/sounds/SoundSource;FF)V a
	prepareWeather ()V O
	registryAccess ()Lnet/minecraft/core/RegistryAccess; r
	removeBlock (Lnet/minecraft/core/BlockPos;Z)Z a
	removeBlockEntity (Lnet/minecraft/core/BlockPos;)V o
	sendBlockUpdated (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/state/BlockState;I)V a
	sendPacketToServer (Lnet/minecraft/network/protocol/Packet;)V a
	setBlock (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;I)Z a
	setBlock (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;II)Z a
	setBlockAndUpdate (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Z a
	setBlockEntity (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/entity/BlockEntity;)V a
	setBlocksDirty (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/state/BlockState;)V b
	setMapData (Lnet/minecraft/world/level/saveddata/maps/MapItemSavedData;)V a
	setRainLevel (F)V e
	setSkyFlashTime (I)V c
	setSpawnSettings (ZZ)V b
	setThunderLevel (F)V c
	tickBlockEntities ()V L
	updateNeighborsAt (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Block;)V b
	updateNeighborsAtExceptFromFacing (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Block;Lnet/minecraft/core/Direction;)V a
	updateNeighbourForOutputSignal (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Block;)V c
	updateSkyBrightness ()V N
net/minecraft/world/level/LevelAccessor bqc
	addParticle (Lnet/minecraft/core/particles/ParticleOptions;DDDDDD)V a
	blockUpdated (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Block;)V a
	getBlockTicks ()Lnet/minecraft/world/level/TickList; G
	getChunkSource ()Lnet/minecraft/world/level/chunk/ChunkSource; E
	getCurrentDifficultyAt (Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/DifficultyInstance; d
	getDifficulty ()Lnet/minecraft/world/Difficulty; ac
	getEntityCollisions (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/phys/AABB;Ljava/util/function/Predicate;)Ljava/util/stream/Stream; c
	getHeight ()I ad
	getHeightmapPos (Lnet/minecraft/world/level/levelgen/Heightmap$Types;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/core/BlockPos; a
	getLevel ()Lnet/minecraft/world/level/Level; n
	getLevelData ()Lnet/minecraft/world/level/storage/LevelData; u_
	getLiquidTicks ()Lnet/minecraft/world/level/TickList; F
	getMoonBrightness ()F aa
	getMoonPhase ()I ab
	getRandom ()Ljava/util/Random; v_
	getServer ()Lnet/minecraft/server/MinecraftServer; l
	getTimeOfDay (F)F f
	hasChunk (II)Z b
	isUnobstructed (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/phys/shapes/VoxelShape;)Z a
	levelEvent (ILnet/minecraft/core/BlockPos;I)V c
	levelEvent (Lnet/minecraft/world/entity/player/Player;ILnet/minecraft/core/BlockPos;I)V a
	playSound (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/core/BlockPos;Lnet/minecraft/sounds/SoundEvent;Lnet/minecraft/sounds/SoundSource;FF)V a
net/minecraft/world/level/LevelReader bqd
	canSeeSkyFromBelowWater (Lnet/minecraft/core/BlockPos;)Z x
	containsAnyLiquid (Lnet/minecraft/world/phys/AABB;)Z d
	dimensionType ()Lnet/minecraft/world/level/dimension/DimensionType; m
	getBiome (Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/biome/Biome; v
	getBiomeManager ()Lnet/minecraft/world/level/biome/BiomeManager; d
	getBlockStatesIfLoaded (Lnet/minecraft/world/phys/AABB;)Ljava/util/stream/Stream; c
	getBlockTint (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/ColorResolver;)I a
	getBrightness (Lnet/minecraft/core/BlockPos;)F y
	getChunk (II)Lnet/minecraft/world/level/chunk/ChunkAccess; a
	getChunk (IILnet/minecraft/world/level/chunk/ChunkStatus;)Lnet/minecraft/world/level/chunk/ChunkAccess; a
	getChunk (IILnet/minecraft/world/level/chunk/ChunkStatus;Z)Lnet/minecraft/world/level/chunk/ChunkAccess; a
	getChunk (Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/chunk/ChunkAccess; z
	getChunkForCollisions (II)Lnet/minecraft/world/level/BlockGetter; c
	getDirectSignal (Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;)I c
	getHeight (Lnet/minecraft/world/level/levelgen/Heightmap$Types;II)I a
	getHeightmapPos (Lnet/minecraft/world/level/levelgen/Heightmap$Types;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/core/BlockPos; a
	getMaxLocalRawBrightness (Lnet/minecraft/core/BlockPos;)I B
	getMaxLocalRawBrightness (Lnet/minecraft/core/BlockPos;I)I c
	getNoiseBiome (III)Lnet/minecraft/world/level/biome/Biome; b
	getSeaLevel ()I t_
	getSkyDarken ()I c
	getUncachedNoiseBiome (III)Lnet/minecraft/world/level/biome/Biome; a
	hasChunk (II)Z b
	hasChunkAt (Lnet/minecraft/core/BlockPos;)Z C
	hasChunksAt (IIIIII)Z a
	hasChunksAt (Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Z a
	isClientSide ()Z s_
	isEmptyBlock (Lnet/minecraft/core/BlockPos;)Z w
	isWaterAt (Lnet/minecraft/core/BlockPos;)Z A
net/minecraft/world/level/LevelSettings bqe
	allowCommands e
	dataPackConfig g
	difficulty d
	gameRules f
	gameType b
	hardcore c
	levelName a
	allowCommands ()Z e
	copy ()Lnet/minecraft/world/level/LevelSettings; h
	difficulty ()Lnet/minecraft/world/Difficulty; d
	gameRules ()Lnet/minecraft/world/level/GameRules; f
	gameType ()Lnet/minecraft/world/level/GameType; b
	getDataPackConfig ()Lnet/minecraft/world/level/DataPackConfig; g
	hardcore ()Z c
	levelName ()Ljava/lang/String; a
	parse (Lcom/mojang/serialization/Dynamic;Lnet/minecraft/world/level/DataPackConfig;)Lnet/minecraft/world/level/LevelSettings; a
	withDataPackConfig (Lnet/minecraft/world/level/DataPackConfig;)Lnet/minecraft/world/level/LevelSettings; a
	withDifficulty (Lnet/minecraft/world/Difficulty;)Lnet/minecraft/world/level/LevelSettings; a
	withGameType (Lnet/minecraft/world/level/GameType;)Lnet/minecraft/world/level/LevelSettings; a
net/minecraft/world/level/LevelSimulatedRW bqf
net/minecraft/world/level/LevelSimulatedReader bqg
	getHeightmapPos (Lnet/minecraft/world/level/levelgen/Heightmap$Types;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/core/BlockPos; a
	isFluidAtPosition (Lnet/minecraft/core/BlockPos;Ljava/util/function/Predicate;)Z b
	isStateAtPosition (Lnet/minecraft/core/BlockPos;Ljava/util/function/Predicate;)Z a
net/minecraft/world/level/LevelWriter bqh
	addFreshEntity (Lnet/minecraft/world/entity/Entity;)Z c
	destroyBlock (Lnet/minecraft/core/BlockPos;Z)Z b
	destroyBlock (Lnet/minecraft/core/BlockPos;ZLnet/minecraft/world/entity/Entity;)Z a
	destroyBlock (Lnet/minecraft/core/BlockPos;ZLnet/minecraft/world/entity/Entity;I)Z a
	removeBlock (Lnet/minecraft/core/BlockPos;Z)Z a
	setBlock (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;I)Z a
	setBlock (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;II)Z a
net/minecraft/world/level/LightLayer bqi
	$VALUES d
	BLOCK b
	SKY a
	surrounding c
net/minecraft/world/level/NaturalSpawner bqj
	LOGGER a
	MAGIC_NUMBER b
	SPAWNING_CATEGORIES c
	canSpawnMobAt (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/level/StructureFeatureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/world/entity/MobCategory;Lnet/minecraft/world/level/biome/Biome$SpawnerData;Lnet/minecraft/core/BlockPos;)Z a
	createState (ILjava/lang/Iterable;Lnet/minecraft/world/level/NaturalSpawner$ChunkGetter;)Lnet/minecraft/world/level/NaturalSpawner$SpawnState; a
	getMobForSpawn (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/EntityType;)Lnet/minecraft/world/entity/Mob; a
	getRandomPosWithin (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/level/chunk/LevelChunk;)Lnet/minecraft/core/BlockPos; a
	getRandomSpawnMobAt (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/level/StructureFeatureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/world/entity/MobCategory;Ljava/util/Random;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/biome/Biome$SpawnerData; a
	getRoughBiome (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/chunk/ChunkAccess;)Lnet/minecraft/world/level/biome/Biome; b
	getTopNonCollidingPos (Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/world/entity/EntityType;II)Lnet/minecraft/core/BlockPos; a
	isRightDistanceToPlayerAndSpawnPoint (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/level/chunk/ChunkAccess;Lnet/minecraft/core/BlockPos$MutableBlockPos;D)Z a
	isSpawnPositionOk (Lnet/minecraft/world/entity/SpawnPlacements$Type;Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/EntityType;)Z a
	isValidEmptySpawnBlock (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/material/FluidState;Lnet/minecraft/world/entity/EntityType;)Z a
	isValidPositionForMob (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/Mob;D)Z a
	isValidSpawnPostitionForType (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/MobCategory;Lnet/minecraft/world/level/StructureFeatureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/world/level/biome/Biome$SpawnerData;Lnet/minecraft/core/BlockPos$MutableBlockPos;D)Z a
	mobsAt (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/level/StructureFeatureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/world/entity/MobCategory;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/biome/Biome;)Ljava/util/List; a
	spawnCategoryForChunk (Lnet/minecraft/world/entity/MobCategory;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/level/chunk/LevelChunk;Lnet/minecraft/world/level/NaturalSpawner$SpawnPredicate;Lnet/minecraft/world/level/NaturalSpawner$AfterSpawnCallback;)V a
	spawnCategoryForPosition (Lnet/minecraft/world/entity/MobCategory;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;)V a
	spawnCategoryForPosition (Lnet/minecraft/world/entity/MobCategory;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/level/chunk/ChunkAccess;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/NaturalSpawner$SpawnPredicate;Lnet/minecraft/world/level/NaturalSpawner$AfterSpawnCallback;)V a
	spawnForChunk (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/level/chunk/LevelChunk;Lnet/minecraft/world/level/NaturalSpawner$SpawnState;ZZZ)V a
	spawnMobsForChunkGeneration (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/world/level/biome/Biome;IILjava/util/Random;)V a
net/minecraft/world/level/NaturalSpawner$AfterSpawnCallback bqj$a
net/minecraft/world/level/NaturalSpawner$ChunkGetter bqj$b
net/minecraft/world/level/NaturalSpawner$SpawnPredicate bqj$c
net/minecraft/world/level/NaturalSpawner$SpawnState bqj$d
	lastCharge g
	lastCheckedPos e
	lastCheckedType f
	mobCategoryCounts b
	spawnPotential c
	spawnableChunkCount a
	unmodifiableMobCategoryCounts d
	afterSpawn (Lnet/minecraft/world/entity/Mob;Lnet/minecraft/world/level/chunk/ChunkAccess;)V a
	canSpawn (Lnet/minecraft/world/entity/EntityType;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/chunk/ChunkAccess;)Z a
	canSpawnForCategory (Lnet/minecraft/world/entity/MobCategory;)Z a
	getMobCategoryCounts ()Lit/unimi/dsi/fastutil/objects/Object2IntMap; b
	getSpawnableChunkCount ()I a
net/minecraft/world/level/NoiseColumn bqk
	column a
	getBlockEntity (Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/entity/BlockEntity; c
	getBlockState (Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; d_
	getFluidState (Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/material/FluidState; b
net/minecraft/world/level/PathNavigationRegion bql
	allEmpty d
	centerX a
	centerZ b
	chunks c
	level e
	getBlockEntity (Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/entity/BlockEntity; c
	getBlockState (Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; d_
	getChunk (II)Lnet/minecraft/world/level/chunk/ChunkAccess; a
	getChunk (Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/chunk/ChunkAccess; d
	getChunkForCollisions (II)Lnet/minecraft/world/level/BlockGetter; c
	getCollisions (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/phys/AABB;Ljava/util/function/Predicate;)Ljava/util/stream/Stream; d
	getEntityCollisions (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/phys/AABB;Ljava/util/function/Predicate;)Ljava/util/stream/Stream; c
	getFluidState (Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/material/FluidState; b
	getWorldBorder ()Lnet/minecraft/world/level/border/WorldBorder; f
net/minecraft/world/level/PortalForcer bqm
	level a
	random b
	createPortal (Lnet/minecraft/world/entity/Entity;)Z a
	findAndMoveToPortal (Lnet/minecraft/world/entity/Entity;F)Z a
	findPortal (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/Vec3;Lnet/minecraft/core/Direction;DDZ)Lnet/minecraft/world/level/block/state/pattern/BlockPattern$PortalInfo; a
net/minecraft/world/level/PotentialCalculator bqn
	charges a
	addCharge (Lnet/minecraft/core/BlockPos;D)V a
	getPotentialEnergyChange (Lnet/minecraft/core/BlockPos;D)D b
net/minecraft/world/level/PotentialCalculator$PointCharge bqn$a
	charge b
	pos a
	getPotentialChange (Lnet/minecraft/core/BlockPos;)D a
net/minecraft/world/level/ServerTickList bqo
	alreadyTicked g
	currentlyTicking f
	ignore a
	level e
	tickNextTickList d
	tickNextTickSet c
	ticker h
	toId b
	addTickData (Lnet/minecraft/world/level/TickNextTickData;)V a
	copy (Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Lnet/minecraft/core/BlockPos;)V a
	fetchTicksInArea (Ljava/util/List;Ljava/util/Collection;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Z)Ljava/util/List; a
	fetchTicksInArea (Lnet/minecraft/world/level/levelgen/structure/BoundingBox;ZZ)Ljava/util/List; a
	fetchTicksInChunk (Lnet/minecraft/world/level/ChunkPos;ZZ)Ljava/util/List; a
	hasScheduledTick (Lnet/minecraft/core/BlockPos;Ljava/lang/Object;)Z a
	save (Lnet/minecraft/world/level/ChunkPos;)Lnet/minecraft/nbt/ListTag; a
	saveTickList (Ljava/util/function/Function;Ljava/lang/Iterable;J)Lnet/minecraft/nbt/ListTag; a
	scheduleTick (Lnet/minecraft/core/BlockPos;Ljava/lang/Object;ILnet/minecraft/world/level/TickPriority;)V a
	size ()I a
	tick ()V b
	willTickThisTick (Lnet/minecraft/core/BlockPos;Ljava/lang/Object;)Z b
net/minecraft/world/level/SpawnData bqp
	tag b
	getTag ()Lnet/minecraft/nbt/CompoundTag; b
	save ()Lnet/minecraft/nbt/CompoundTag; a
net/minecraft/world/level/StructureFeatureManager bqq
	level a
	worldGenSettings b
	addReferenceForFeature (Lnet/minecraft/core/SectionPos;Lnet/minecraft/world/level/levelgen/feature/StructureFeature;JLnet/minecraft/world/level/chunk/FeatureAccess;)V a
	forWorldGenRegion (Lnet/minecraft/server/level/WorldGenRegion;)Lnet/minecraft/world/level/StructureFeatureManager; a
	getStartForFeature (Lnet/minecraft/core/SectionPos;Lnet/minecraft/world/level/levelgen/feature/StructureFeature;Lnet/minecraft/world/level/chunk/FeatureAccess;)Lnet/minecraft/world/level/levelgen/structure/StructureStart; a
	getStructureAt (Lnet/minecraft/core/BlockPos;ZLnet/minecraft/world/level/levelgen/feature/StructureFeature;)Lnet/minecraft/world/level/levelgen/structure/StructureStart; a
	setStartForFeature (Lnet/minecraft/core/SectionPos;Lnet/minecraft/world/level/levelgen/feature/StructureFeature;Lnet/minecraft/world/level/levelgen/structure/StructureStart;Lnet/minecraft/world/level/chunk/FeatureAccess;)V a
	shouldGenerateFeatures ()Z a
	startsForFeature (Lnet/minecraft/core/SectionPos;Lnet/minecraft/world/level/levelgen/feature/StructureFeature;)Ljava/util/stream/Stream; a
net/minecraft/world/level/TickList bqr
	hasScheduledTick (Lnet/minecraft/core/BlockPos;Ljava/lang/Object;)Z a
	scheduleTick (Lnet/minecraft/core/BlockPos;Ljava/lang/Object;I)V a
	scheduleTick (Lnet/minecraft/core/BlockPos;Ljava/lang/Object;ILnet/minecraft/world/level/TickPriority;)V a
	size ()I a
	willTickThisTick (Lnet/minecraft/core/BlockPos;Ljava/lang/Object;)Z b
net/minecraft/world/level/TickNextTickData bqs
	c f
	counter d
	pos a
	priority c
	triggerTick b
	type e
	createTimeComparator ()Ljava/util/Comparator; a
	getType ()Ljava/lang/Object; b
net/minecraft/world/level/TickPriority bqt
	$VALUES i
	EXTREMELY_HIGH a
	EXTREMELY_LOW g
	HIGH c
	LOW e
	NORMAL d
	VERY_HIGH b
	VERY_LOW f
	value h
	byValue (I)Lnet/minecraft/world/level/TickPriority; a
	getValue ()I a
net/minecraft/world/level/WorldGenLevel bqu
	getSeed ()J B
net/minecraft/world/level/biome/AmbientAdditionsSettings bqv
	CODEC a
	soundEvent b
	tickChance c
	getSoundEvent ()Lnet/minecraft/sounds/SoundEvent; a
	getTickChance ()D b
net/minecraft/world/level/biome/AmbientMoodSettings bqw
	CODEC a
	LEGACY_CAVE_SETTINGS b
	blockSearchExtent e
	soundEvent c
	soundPositionOffset f
	tickDelay d
	getBlockSearchExtent ()I c
	getSoundEvent ()Lnet/minecraft/sounds/SoundEvent; a
	getSoundPositionOffset ()D d
	getTickDelay ()I b
net/minecraft/world/level/biome/AmbientParticleSettings bqx
	CODEC a
	options b
	probability c
	canSpawn (Ljava/util/Random;)Z a
	getOptions ()Lnet/minecraft/core/particles/ParticleOptions; a
net/minecraft/world/level/biome/BadlandsBiome bqy
	getFoliageColor ()I a
	getGrassColor (DD)I a
net/minecraft/world/level/biome/BadlandsPlateauBiome bqz
	getFoliageColor ()I a
	getGrassColor (DD)I a
net/minecraft/world/level/biome/BambooJungleBiome bra
net/minecraft/world/level/biome/BambooJungleHillsBiome brb
net/minecraft/world/level/biome/BasaltDeltasBiome brc
net/minecraft/world/level/biome/BeachBiome brd
net/minecraft/world/level/biome/Biome bre
	BIOME_INFO_NOISE f
	CODEC b
	EXPLORABLE_BIOMES c
	LOGGER a
	MUTATED_BIOMES d
	TEMPERATURE_NOISE e
	biomeCategory n
	carvers q
	depth h
	descriptionId g
	downfall k
	features r
	flowerFeatures s
	mobSpawnCosts w
	optimalParameters x
	parent l
	precipitation o
	scale i
	skyColor t
	spawners v
	specialEffects p
	surfaceBuilder m
	temperature j
	temperatureCache y
	validFeatureStarts u
	addCarver (Lnet/minecraft/world/level/levelgen/GenerationStep$Carving;Lnet/minecraft/world/level/levelgen/carver/ConfiguredWorldCarver;)V a
	addFeature (Lnet/minecraft/world/level/levelgen/GenerationStep$Decoration;Lnet/minecraft/world/level/levelgen/feature/ConfiguredFeature;)V a
	addMobCharge (Lnet/minecraft/world/entity/EntityType;DD)V a
	addSpawn (Lnet/minecraft/world/entity/MobCategory;Lnet/minecraft/world/level/biome/Biome$SpawnerData;)V a
	addStructureStart (Lnet/minecraft/world/level/levelgen/feature/ConfiguredStructureFeature;)V a
	buildSurfaceAt (Ljava/util/Random;Lnet/minecraft/world/level/chunk/ChunkAccess;IIIDLnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/state/BlockState;IJ)V a
	calculateSkyColor ()I D
	generate (Lnet/minecraft/world/level/levelgen/GenerationStep$Decoration;Lnet/minecraft/world/level/StructureFeatureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/world/level/WorldGenLevel;JLnet/minecraft/world/level/levelgen/WorldgenRandom;Lnet/minecraft/core/BlockPos;)V a
	getAmbientAdditions ()Ljava/util/Optional; w
	getAmbientLoop ()Ljava/util/Optional; u
	getAmbientMood ()Ljava/util/Optional; v
	getAmbientParticle ()Ljava/util/Optional; t
	getBackgroundMusic ()Ljava/util/Optional; x
	getBiome (ILnet/minecraft/world/level/biome/Biome;)Lnet/minecraft/world/level/biome/Biome; a
	getBiomeCategory ()Lnet/minecraft/world/level/biome/Biome$BiomeCategory; y
	getCarvers (Lnet/minecraft/world/level/levelgen/GenerationStep$Carving;)Ljava/util/List; a
	getCreatureProbability ()F f
	getDepth ()F k
	getDescriptionId ()Ljava/lang/String; n
	getDownfall ()F l
	getFeaturesForStep (Lnet/minecraft/world/level/levelgen/GenerationStep$Decoration;)Ljava/util/List; a
	getFlowerFeatures ()Ljava/util/List; h
	getFogColor ()I i
	getFoliageColor ()I a
	getGrassColor (DD)I a
	getMobSpawnCost (Lnet/minecraft/world/entity/EntityType;)Lnet/minecraft/world/level/biome/Biome$MobSpawnCost; a
	getMobs (Lnet/minecraft/world/entity/MobCategory;)Ljava/util/List; a
	getMutatedVariant (Lnet/minecraft/world/level/biome/Biome;)Lnet/minecraft/world/level/biome/Biome; a
	getName ()Lnet/minecraft/network/chat/Component; m
	getParent ()Ljava/lang/String; C
	getPrecipitation ()Lnet/minecraft/world/level/biome/Biome$Precipitation; d
	getScale ()F o
	getSkyColor ()I c
	getSpecialEffects ()Lnet/minecraft/world/level/biome/BiomeSpecialEffects; q
	getSurfaceBuilder ()Lnet/minecraft/world/level/levelgen/surfacebuilders/ConfiguredSurfaceBuilder; z
	getSurfaceBuilderConfig ()Lnet/minecraft/world/level/levelgen/surfacebuilders/SurfaceBuilderConfiguration; A
	getTemperature ()F p
	getTemperature (Lnet/minecraft/core/BlockPos;)F b
	getTemperatureCategory ()Lnet/minecraft/world/level/biome/Biome$BiomeTempCategory; j
	getTemperatureNoCache (Lnet/minecraft/core/BlockPos;)F a
	getWaterColor ()I r
	getWaterFogColor ()I s
	isHumid ()Z e
	isMutated ()Z b
	isValidStart (Lnet/minecraft/world/level/levelgen/feature/StructureFeature;)Z a
	makeCarver (Lnet/minecraft/world/level/levelgen/carver/WorldCarver;Lnet/minecraft/world/level/levelgen/carver/CarverConfiguration;)Lnet/minecraft/world/level/levelgen/carver/ConfiguredWorldCarver; a
	optimalParameters ()Ljava/util/stream/Stream; B
	shouldFreeze (Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;)Z a
	shouldFreeze (Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;Z)Z a
	shouldSnow (Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;)Z b
	structures ()Ljava/lang/Iterable; g
	withBiomeConfig (Lnet/minecraft/world/level/levelgen/feature/ConfiguredStructureFeature;)Lnet/minecraft/world/level/levelgen/feature/ConfiguredStructureFeature; b
net/minecraft/world/level/biome/Biome$BiomeBuilder bre$a
	biomeCategory c
	depth d
	downfall g
	optimalParameters i
	parent h
	precipitation b
	scale e
	specialEffects j
	surfaceBuilder a
	temperature f
	biomeCategory (Lnet/minecraft/world/level/biome/Biome$BiomeCategory;)Lnet/minecraft/world/level/biome/Biome$BiomeBuilder; a
	depth (F)Lnet/minecraft/world/level/biome/Biome$BiomeBuilder; a
	downfall (F)Lnet/minecraft/world/level/biome/Biome$BiomeBuilder; d
	optimalParameters (Ljava/util/List;)Lnet/minecraft/world/level/biome/Biome$BiomeBuilder; a
	parent (Ljava/lang/String;)Lnet/minecraft/world/level/biome/Biome$BiomeBuilder; a
	precipitation (Lnet/minecraft/world/level/biome/Biome$Precipitation;)Lnet/minecraft/world/level/biome/Biome$BiomeBuilder; a
	scale (F)Lnet/minecraft/world/level/biome/Biome$BiomeBuilder; b
	specialEffects (Lnet/minecraft/world/level/biome/BiomeSpecialEffects;)Lnet/minecraft/world/level/biome/Biome$BiomeBuilder; a
	surfaceBuilder (Lnet/minecraft/world/level/levelgen/surfacebuilders/ConfiguredSurfaceBuilder;)Lnet/minecraft/world/level/biome/Biome$BiomeBuilder; a
	surfaceBuilder (Lnet/minecraft/world/level/levelgen/surfacebuilders/SurfaceBuilder;Lnet/minecraft/world/level/levelgen/surfacebuilders/SurfaceBuilderConfiguration;)Lnet/minecraft/world/level/biome/Biome$BiomeBuilder; a
	temperature (F)Lnet/minecraft/world/level/biome/Biome$BiomeBuilder; c
net/minecraft/world/level/biome/Biome$BiomeCategory bre$b
	$VALUES u
	BEACH j
	BY_NAME s
	CODEC r
	DESERT m
	EXTREME_HILLS c
	FOREST k
	ICY h
	JUNGLE d
	MESA e
	MUSHROOM p
	NETHER q
	NONE a
	OCEAN l
	PLAINS f
	RIVER n
	SAVANNA g
	SWAMP o
	TAIGA b
	THEEND i
	name t
	byName (Ljava/lang/String;)Lnet/minecraft/world/level/biome/Biome$BiomeCategory; a
	getName ()Ljava/lang/String; b
	getSerializedName ()Ljava/lang/String; a
net/minecraft/world/level/biome/Biome$BiomeTempCategory bre$c
	$VALUES g
	BY_NAME e
	COLD b
	MEDIUM c
	OCEAN a
	WARM d
	name f
	byName (Ljava/lang/String;)Lnet/minecraft/world/level/biome/Biome$BiomeTempCategory; a
	getName ()Ljava/lang/String; a
net/minecraft/world/level/biome/Biome$ClimateParameters bre$d
	CODEC a
	altitude d
	humidity c
	offset f
	temperature b
	weirdness e
	fitness (Lnet/minecraft/world/level/biome/Biome$ClimateParameters;)F a
net/minecraft/world/level/biome/Biome$MobSpawnCost bre$e
	charge b
	energyBudget a
	getCharge ()D b
	getEnergyBudget ()D a
net/minecraft/world/level/biome/Biome$Precipitation bre$f
	$VALUES g
	BY_NAME e
	CODEC d
	NONE a
	RAIN b
	SNOW c
	name f
	byName (Ljava/lang/String;)Lnet/minecraft/world/level/biome/Biome$Precipitation; a
	getName ()Ljava/lang/String; b
	getSerializedName ()Ljava/lang/String; a
net/minecraft/world/level/biome/Biome$SpawnerData bre$g
	CODEC b
	maxCount e
	minCount d
	type c
net/minecraft/world/level/biome/BiomeDefaultFeatures brf
	ACACIA_LEAVES bl
	ACACIA_LOG bk
	ACACIA_TREE_CONFIG N
	ANDESITE bw
	BASALT_BLOBS_FEATURE_CONFIG aT
	BASALT_DELTA_FEATURE_CONFIG aV
	BASALT_DELTA_SPRING_CONFIG aN
	BASTION_REMNANT s
	BEEHIVE_0002 cx
	BEEHIVE_002 cy
	BEEHIVE_005 cz
	BIRCH_LEAVES bn
	BIRCH_LOG bm
	BIRCH_TREE_CONFIG O
	BIRCH_TREE_WITH_BEES_0002_CONFIG P
	BIRCH_TREE_WITH_BEES_002_CONFIG Q
	BIRCH_TREE_WITH_BEES_005_CONFIG R
	BLACKSTONE_BLOBS_FEATURE_CONFIG aU
	BLUE_ICE bT
	BLUE_ORCHID bV
	BROWN_MUSHROOM bP
	BROWN_MUSHROOM_CONFIG at
	BURIED_TREASURE r
	CACTUS cl
	CACTUS_CONFIG aB
	CLAY bH
	CLOSED_NETHER_SPRING_CONFIG aO
	CLOSED_NETHER_SPRING_SOUL_SAND_CONFIG aQ
	COAL_ORE bx
	CRIMSON_FOREST_CONFIG aY
	CRIMSON_ROOTS cg
	CRIMSON_ROOTS_CONFIG au
	CRIMSON_STEM cv
	DANDELION bX
	DARK_OAK_LEAVES bp
	DARK_OAK_LOG bo
	DARK_OAK_TREE_CONFIG Z
	DEAD_BUSH bY
	DEAD_BUSH_CONFIG al
	DEFAULT_FLOWER_CONFIG ai
	DEFAULT_GRASS_CONFIG ad
	DESERT_PYRAMID f
	DIAMOND_ORE bB
	DIORITE bv
	DIRT bs
	DOUBLE_LILAC_CONFIG av
	DOUBLE_PEONY_CONFIG ax
	DOUBLE_ROSE_BUSH_CONFIG aw
	EMERALD_ORE bE
	END_CITY q
	FANCY_TREE_CONFIG U
	FANCY_TREE_WITH_BEES_0002_CONFIG V
	FANCY_TREE_WITH_BEES_002_CONFIG W
	FANCY_TREE_WITH_BEES_005_CONFIG X
	FERN bc
	FIRE cc
	FIRE_CONFIG ap
	FOREST_FLOWER_CONFIG ak
	GENERAL_FOREST_FLOWER_CONFIG ag
	GOLD_ORE bz
	GRANITE bu
	GRASS bb
	GRASS_BLOCK bI
	GRAVEL bt
	HAY_PILE_CONFIG aD
	HUGE_BROWN_MUSHROOM co
	HUGE_BROWN_MUSHROOM_CONFIG aX
	HUGE_MUSHROOM_STEM cp
	HUGE_RED_MUSHROOM cn
	HUGE_RED_MUSHROOM_CONFIG aW
	ICE_PILE_CONFIG aH
	IGLOO g
	INFESTED_STONE bF
	IRON_ORE by
	JACK_O_LANTERN cj
	JUNGLE_BUSH_CONFIG Y
	JUNGLE_GRASS_CONFIG af
	JUNGLE_LEAVES bh
	JUNGLE_LOG bg
	JUNGLE_TEMPLE e
	JUNGLE_TREE_CONFIG J
	JUNGLE_TREE_NOVINE_CONFIG K
	LAPIS_ORE bC
	LARGE_BASALT_COLUMN_FEATURE_CONFIG aS
	LARGE_FERN bK
	LARGE_FERN_CONFIG aA
	LAVA br
	LAVA_SPRING_CONFIG aL
	LAVA_STATE aJ
	LILAC bM
	LILY_OF_THE_VALLEY bU
	LILY_PAD ch
	MEGA_JUNGLE_TREE_CONFIG ac
	MEGA_PINE_TREE_CONFIG ab
	MEGA_SPRUCE_TREE_CONFIG aa
	MELON bZ
	MELON_CONFIG am
	MELON_PILE_CONFIG aF
	MINESHAFT b
	MINESHAFT_MESA c
	MOSSY_COBBLESTONE bJ
	NETHERRACK ce
	NETHER_BRIDGE o
	NETHER_FOSSIL p
	NETHER_GOLD_ORE cq
	NETHER_QUARTZ_ORE cr
	NETHER_SPROUTS_CONFIG ba
	NETHER_WART_BLOCK cu
	NORMAL_TREE_CONFIG F
	NORMAL_TREE_WITH_BEES_0002_CONFIG G
	NORMAL_TREE_WITH_BEES_002_CONFIG H
	NORMAL_TREE_WITH_BEES_005_CONFIG I
	OAK_LEAVES bf
	OAK_LOG be
	OCEAN_MONUMENT l
	OCEAN_RUIN_COLD m
	OCEAN_RUIN_WARM n
	OPEN_NETHER_SPRING_CONFIG aM
	OPEN_NETHER_SPRING_SOUL_SAND_CONFIG aP
	PACKED_ICE bS
	PEONY bO
	PILLAGER_OUTPOST a
	PINE_TREE_CONFIG L
	PLAIN_FLOWER_CONFIG aj
	PODZOL bd
	POPPY bW
	PUMPKIN ca
	PUMPKIN_CONFIG an
	PUMPKIN_PILE_CONFIG aG
	REDSTONE_ORE bA
	RED_MUSHROOM bQ
	RED_MUSHROOM_CONFIG as
	ROSE_BUSH bN
	RUINED_PORTAL_DESERT z
	RUINED_PORTAL_JUNGLE A
	RUINED_PORTAL_MOUNTAIN C
	RUINED_PORTAL_NETHER E
	RUINED_PORTAL_OCEAN D
	RUINED_PORTAL_STANDARD y
	RUINED_PORTAL_SWAMP B
	SAND bG
	SEAGRASS bR
	SHIPWRECH_BEACHED i
	SHIPWRECK h
	SHROOMLIGHT cw
	SMALL_BASALT_COLUMN_FEATURE_CONFIG aR
	SNOW ci
	SNOW_PILE_CONFIG aE
	SOUL_FIRE cd
	SOUL_FIRE_CONFIG aq
	SOUL_SOIL cf
	SPRUCE_LEAVES bj
	SPRUCE_LOG bi
	SPRUCE_TREE_CONFIG M
	STONE bD
	STRONGHOLD k
	SUGAR_CANE cm
	SUGAR_CANE_CONFIG aC
	SUNFLOWER ck
	SUNFLOWER_CONFIG ay
	SUPER_BIRCH_TREE_WITH_BEES_0002_CONFIG S
	SWAMP_HUT j
	SWAMP_TREE_CONFIG T
	SWEET_BERRY_BUSH cb
	SWEET_BERRY_BUSH_CONFIG ao
	SwAMP_FLOWER_CONFIG ah
	TAIGA_GRASS_CONFIG ae
	TALL_GRASS bL
	TALL_GRASS_CONFIG az
	VILLAGE_DESERT u
	VILLAGE_PLAINS t
	VILLAGE_SAVANNA v
	VILLAGE_SNOVY w
	VILLAGE_TAIGA x
	WARPED_FOREST_CONFIG aZ
	WARPED_STEM cs
	WARPED_WART_BLOCK ct
	WATER bq
	WATERLILLY_CONFIG ar
	WATER_SPRING_CONFIG aK
	WATER_STATE aI
	WOODLAND_MANSION d
	addAncientDebris (Lnet/minecraft/world/level/biome/Biome;)V at
	addBadlandExtraVegetation (Lnet/minecraft/world/level/biome/Biome;)V ad
	addBadlandGrass (Lnet/minecraft/world/level/biome/Biome;)V O
	addBadlandsTrees (Lnet/minecraft/world/level/biome/Biome;)V G
	addBambooVegetation (Lnet/minecraft/world/level/biome/Biome;)V u
	addBerryBushes (Lnet/minecraft/world/level/biome/Biome;)V r
	addBirchTrees (Lnet/minecraft/world/level/biome/Biome;)V x
	addBlueIce (Lnet/minecraft/world/level/biome/Biome;)V aq
	addColdOceanExtraVegetation (Lnet/minecraft/world/level/biome/Biome;)V aj
	addCrimsonForestVegetation (Lnet/minecraft/world/level/biome/Biome;)V au
	addDeepWarmSeagrass (Lnet/minecraft/world/level/biome/Biome;)V am
	addDefaultCarvers (Lnet/minecraft/world/level/biome/Biome;)V d
	addDefaultExtraVegetation (Lnet/minecraft/world/level/biome/Biome;)V ac
	addDefaultFlowers (Lnet/minecraft/world/level/biome/Biome;)V W
	addDefaultGrass (Lnet/minecraft/world/level/biome/Biome;)V Y
	addDefaultLakes (Lnet/minecraft/world/level/biome/Biome;)V f
	addDefaultMonsterRoom (Lnet/minecraft/world/level/biome/Biome;)V h
	addDefaultMushrooms (Lnet/minecraft/world/level/biome/Biome;)V ab
	addDefaultOres (Lnet/minecraft/world/level/biome/Biome;)V j
	addDefaultOverworldLandMesaStructures (Lnet/minecraft/world/level/biome/Biome;)V a
	addDefaultOverworldLandStructures (Lnet/minecraft/world/level/biome/Biome;)V b
	addDefaultOverworldOceanStructures (Lnet/minecraft/world/level/biome/Biome;)V c
	addDefaultSeagrass (Lnet/minecraft/world/level/biome/Biome;)V ak
	addDefaultSoftDisks (Lnet/minecraft/world/level/biome/Biome;)V n
	addDefaultSprings (Lnet/minecraft/world/level/biome/Biome;)V ao
	addDefaultUndergroundVariety (Lnet/minecraft/world/level/biome/Biome;)V i
	addDesertExtraDecoration (Lnet/minecraft/world/level/biome/Biome;)V ah
	addDesertExtraVegetation (Lnet/minecraft/world/level/biome/Biome;)V af
	addDesertLakes (Lnet/minecraft/world/level/biome/Biome;)V g
	addDesertVegetation (Lnet/minecraft/world/level/biome/Biome;)V U
	addExtraEmeralds (Lnet/minecraft/world/level/biome/Biome;)V l
	addExtraGold (Lnet/minecraft/world/level/biome/Biome;)V k
	addFerns (Lnet/minecraft/world/level/biome/Biome;)V q
	addForestFlowers (Lnet/minecraft/world/level/biome/Biome;)V P
	addForestGrass (Lnet/minecraft/world/level/biome/Biome;)V Q
	addFossilDecoration (Lnet/minecraft/world/level/biome/Biome;)V ai
	addGiantSpruceTrees (Lnet/minecraft/world/level/biome/Biome;)V I
	addGiantTaigaVegetation (Lnet/minecraft/world/level/biome/Biome;)V V
	addGiantTrees (Lnet/minecraft/world/level/biome/Biome;)V J
	addIcebergs (Lnet/minecraft/world/level/biome/Biome;)V ap
	addInfestedStone (Lnet/minecraft/world/level/biome/Biome;)V m
	addJungleEdgeTrees (Lnet/minecraft/world/level/biome/Biome;)V F
	addJungleExtraVegetation (Lnet/minecraft/world/level/biome/Biome;)V ae
	addJungleGrass (Lnet/minecraft/world/level/biome/Biome;)V K
	addJungleTrees (Lnet/minecraft/world/level/biome/Biome;)V E
	addLightBambooVegetation (Lnet/minecraft/world/level/biome/Biome;)V t
	addLukeWarmKelp (Lnet/minecraft/world/level/biome/Biome;)V an
	addMossyStoneBlock (Lnet/minecraft/world/level/biome/Biome;)V p
	addMountainEdgeTrees (Lnet/minecraft/world/level/biome/Biome;)V D
	addMountainTrees (Lnet/minecraft/world/level/biome/Biome;)V C
	addMushroomFieldVegetation (Lnet/minecraft/world/level/biome/Biome;)V S
	addNetherDefaultOres (Lnet/minecraft/world/level/biome/Biome;)V as
	addNetherOres (Lnet/minecraft/world/level/biome/Biome;II)V a
	addOceanCarvers (Lnet/minecraft/world/level/biome/Biome;)V e
	addOtherBirchTrees (Lnet/minecraft/world/level/biome/Biome;)V y
	addPlainGrass (Lnet/minecraft/world/level/biome/Biome;)V aa
	addPlainVegetation (Lnet/minecraft/world/level/biome/Biome;)V T
	addSavannaExtraGrass (Lnet/minecraft/world/level/biome/Biome;)V N
	addSavannaGrass (Lnet/minecraft/world/level/biome/Biome;)V L
	addSavannaTrees (Lnet/minecraft/world/level/biome/Biome;)V A
	addShatteredSavannaGrass (Lnet/minecraft/world/level/biome/Biome;)V M
	addShatteredSavannaTrees (Lnet/minecraft/world/level/biome/Biome;)V B
	addSnowyTrees (Lnet/minecraft/world/level/biome/Biome;)V H
	addSparseBerryBushes (Lnet/minecraft/world/level/biome/Biome;)V s
	addSurfaceFreezing (Lnet/minecraft/world/level/biome/Biome;)V ar
	addSwampClayDisk (Lnet/minecraft/world/level/biome/Biome;)V o
	addSwampExtraVegetation (Lnet/minecraft/world/level/biome/Biome;)V ag
	addSwampVegetation (Lnet/minecraft/world/level/biome/Biome;)V R
	addTaigaGrass (Lnet/minecraft/world/level/biome/Biome;)V Z
	addTaigaTrees (Lnet/minecraft/world/level/biome/Biome;)V v
	addTallBirchTrees (Lnet/minecraft/world/level/biome/Biome;)V z
	addWarmFlowers (Lnet/minecraft/world/level/biome/Biome;)V X
	addWarmSeagrass (Lnet/minecraft/world/level/biome/Biome;)V al
	addWarpedForestVegetation (Lnet/minecraft/world/level/biome/Biome;)V av
	addWaterTrees (Lnet/minecraft/world/level/biome/Biome;)V w
net/minecraft/world/level/biome/BiomeManager brg
	biomeZoomSeed b
	noiseBiomeSource a
	zoomer c
	getBiome (Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/biome/Biome; a
	getNoiseBiomeAtPosition (DDD)Lnet/minecraft/world/level/biome/Biome; a
	getNoiseBiomeAtPosition (Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/biome/Biome; b
	getNoiseBiomeAtQuart (III)Lnet/minecraft/world/level/biome/Biome; a
	obfuscateSeed (J)J a
	withDifferentSource (Lnet/minecraft/world/level/biome/BiomeSource;)Lnet/minecraft/world/level/biome/BiomeManager; a
net/minecraft/world/level/biome/BiomeManager$NoiseBiomeSource brg$a
	getNoiseBiome (III)Lnet/minecraft/world/level/biome/Biome; b
net/minecraft/world/level/biome/BiomeSource brh
	CODEC a
	PLAYER_SPAWN_BIOMES e
	possibleBiomes d
	supportedStructures b
	surfaceBlocks c
	canGenerateStructure (Lnet/minecraft/world/level/levelgen/feature/StructureFeature;)Z a
	codec ()Lcom/mojang/serialization/Codec; a
	findBiomeHorizontal (IIIIILjava/util/List;Ljava/util/Random;Z)Lnet/minecraft/core/BlockPos; a
	findBiomeHorizontal (IIIILjava/util/List;Ljava/util/Random;)Lnet/minecraft/core/BlockPos; a
	getBiomesWithin (IIII)Ljava/util/Set; a
	getPlayerSpawnBiomes ()Ljava/util/List; b
	getSurfaceBlocks ()Ljava/util/Set; d
	possibleBiomes ()Ljava/util/List; c
	withSeed (J)Lnet/minecraft/world/level/biome/BiomeSource; a
net/minecraft/world/level/biome/BiomeSpecialEffects bri
	CODEC a
	ambientAdditionsSettings h
	ambientLoopSoundEvent f
	ambientMoodSettings g
	ambientParticleSettings e
	backgroundMusic i
	fogColor b
	waterColor c
	waterFogColor d
	getAmbientAdditionsSettings ()Ljava/util/Optional; g
	getAmbientLoopSoundEvent ()Ljava/util/Optional; e
	getAmbientMoodSettings ()Ljava/util/Optional; f
	getAmbientParticleSettings ()Ljava/util/Optional; d
	getBackgroundMusic ()Ljava/util/Optional; h
	getFogColor ()I a
	getWaterColor ()I b
	getWaterFogColor ()I c
net/minecraft/world/level/biome/BiomeSpecialEffects$Builder bri$a
	ambientAdditionsSettings g
	ambientLoopSoundEvent e
	ambientMoodSettings f
	ambientParticle d
	backgroundMusic h
	fogColor a
	waterColor b
	waterFogColor c
	ambientAdditionsSound (Lnet/minecraft/world/level/biome/AmbientAdditionsSettings;)Lnet/minecraft/world/level/biome/BiomeSpecialEffects$Builder; a
	ambientLoopSound (Lnet/minecraft/sounds/SoundEvent;)Lnet/minecraft/world/level/biome/BiomeSpecialEffects$Builder; a
	ambientMoodSound (Lnet/minecraft/world/level/biome/AmbientMoodSettings;)Lnet/minecraft/world/level/biome/BiomeSpecialEffects$Builder; a
	ambientParticle (Lnet/minecraft/world/level/biome/AmbientParticleSettings;)Lnet/minecraft/world/level/biome/BiomeSpecialEffects$Builder; a
	backgroundMusic (Lnet/minecraft/sounds/Music;)Lnet/minecraft/world/level/biome/BiomeSpecialEffects$Builder; a
	build ()Lnet/minecraft/world/level/biome/BiomeSpecialEffects; a
	fogColor (I)Lnet/minecraft/world/level/biome/BiomeSpecialEffects$Builder; a
	waterColor (I)Lnet/minecraft/world/level/biome/BiomeSpecialEffects$Builder; b
	waterFogColor (I)Lnet/minecraft/world/level/biome/BiomeSpecialEffects$Builder; c
net/minecraft/world/level/biome/BiomeZoomer brj
	getBiome (JIIILnet/minecraft/world/level/biome/BiomeManager$NoiseBiomeSource;)Lnet/minecraft/world/level/biome/Biome; a
net/minecraft/world/level/biome/Biomes brk
	BADLANDS M
	BADLANDS_PLATEAU O
	BAMBOO_JUNGLE aw
	BAMBOO_JUNGLE_HILLS ax
	BASALT_DELTAS aB
	BEACH r
	BIRCH_FOREST C
	BIRCH_FOREST_HILLS D
	COLD_OCEAN V
	CRIMSON_FOREST az
	DARK_FOREST E
	DARK_FOREST_HILLS am
	DEEP_COLD_OCEAN Y
	DEEP_FROZEN_OCEAN Z
	DEEP_LUKEWARM_OCEAN X
	DEEP_OCEAN z
	DEEP_WARM_OCEAN W
	DEFAULT b
	DESERT d
	DESERT_HILLS s
	DESERT_LAKES ac
	END_BARRENS S
	END_HIGHLANDS R
	END_MIDLANDS Q
	ERODED_BADLANDS at
	FLOWER_FOREST ae
	FOREST f
	FROZEN_OCEAN l
	FROZEN_RIVER m
	GIANT_SPRUCE_TAIGA ao
	GIANT_SPRUCE_TAIGA_HILLS ap
	GIANT_TREE_TAIGA H
	GIANT_TREE_TAIGA_HILLS I
	GRAVELLY_MOUNTAINS ad
	ICE_SPIKES ah
	JUNGLE w
	JUNGLE_EDGE y
	JUNGLE_HILLS x
	LUKEWARM_OCEAN U
	MODIFIED_BADLANDS_PLATEAU av
	MODIFIED_GRAVELLY_MOUNTAINS aq
	MODIFIED_JUNGLE ai
	MODIFIED_JUNGLE_EDGE aj
	MODIFIED_WOODED_BADLANDS_PLATEAU au
	MOUNTAINS e
	MOUNTAIN_EDGE v
	MUSHROOM_FIELDS p
	MUSHROOM_FIELD_SHORE q
	NETHER_WASTES j
	OCEAN a
	PLAINS c
	RIVER i
	SAVANNA K
	SAVANNA_PLATEAU L
	SHATTERED_SAVANNA ar
	SHATTERED_SAVANNA_PLATEAU as
	SMALL_END_ISLANDS P
	SNOWY_BEACH B
	SNOWY_MOUNTAINS o
	SNOWY_TAIGA F
	SNOWY_TAIGA_HILLS G
	SNOWY_TAIGA_MOUNTAINS an
	SNOWY_TUNDRA n
	SOUL_SAND_VALLEY ay
	STONE_SHORE A
	SUNFLOWER_PLAINS ab
	SWAMP h
	SWAMP_HILLS ag
	TAIGA g
	TAIGA_HILLS u
	TAIGA_MOUNTAINS af
	TALL_BIRCH_FOREST ak
	TALL_BIRCH_HILLS al
	THE_END k
	THE_VOID aa
	WARM_OCEAN T
	WARPED_FOREST aA
	WOODED_BADLANDS_PLATEAU N
	WOODED_HILLS t
	WOODED_MOUNTAINS J
	register (ILjava/lang/String;Lnet/minecraft/world/level/biome/Biome;)Lnet/minecraft/world/level/biome/Biome; a
net/minecraft/world/level/biome/BirchForestBiome brl
net/minecraft/world/level/biome/BirchForestHillsBiome brm
net/minecraft/world/level/biome/CheckerboardColumnBiomeSource brn
	CODEC e
	allowedBiomes f
	bitShift g
	size h
	codec ()Lcom/mojang/serialization/Codec; a
	getNoiseBiome (III)Lnet/minecraft/world/level/biome/Biome; b
	withSeed (J)Lnet/minecraft/world/level/biome/BiomeSource; a
net/minecraft/world/level/biome/ColdOceanBiome bro
net/minecraft/world/level/biome/CrimsonForestBiome brp
net/minecraft/world/level/biome/DarkForestBiome brq
	getGrassColor (DD)I a
net/minecraft/world/level/biome/DarkForestHillsBiome brr
	getGrassColor (DD)I a
net/minecraft/world/level/biome/DeepColdOceanBiome brs
net/minecraft/world/level/biome/DeepFrozenOceanBiome brt
	FROZEN_TEMPERATURE_NOISE t
	getTemperatureNoCache (Lnet/minecraft/core/BlockPos;)F a
net/minecraft/world/level/biome/DeepLukeWarmOceanBiome bru
net/minecraft/world/level/biome/DeepOceanBiome brv
net/minecraft/world/level/biome/DeepWarmOceanBiome brw
net/minecraft/world/level/biome/DesertBiome brx
net/minecraft/world/level/biome/DesertHillsBiome bry
net/minecraft/world/level/biome/DesertLakesBiome brz
net/minecraft/world/level/biome/EndBarrensBiome bsa
	getSkyColor ()I c
net/minecraft/world/level/biome/EndHighlandsBiome bsb
	getSkyColor ()I c
net/minecraft/world/level/biome/EndMidlandsBiome bsc
	getSkyColor ()I c
net/minecraft/world/level/biome/ErodedBadlandsBiome bsd
	getFoliageColor ()I a
	getGrassColor (DD)I a
net/minecraft/world/level/biome/FixedBiomeSource bse
	CODEC e
	biome f
	codec ()Lcom/mojang/serialization/Codec; a
	findBiomeHorizontal (IIIIILjava/util/List;Ljava/util/Random;Z)Lnet/minecraft/core/BlockPos; a
	getBiomesWithin (IIII)Ljava/util/Set; a
	getNoiseBiome (III)Lnet/minecraft/world/level/biome/Biome; b
	withSeed (J)Lnet/minecraft/world/level/biome/BiomeSource; a
net/minecraft/world/level/biome/ForestBiome bsf
net/minecraft/world/level/biome/ForestFlowerBiome bsg
net/minecraft/world/level/biome/FrozenOceanBiome bsh
	FROZEN_TEMPERATURE_NOISE t
	getTemperatureNoCache (Lnet/minecraft/core/BlockPos;)F a
net/minecraft/world/level/biome/FrozenRiverBiome bsi
net/minecraft/world/level/biome/FuzzyOffsetBiomeZoomer bsj
	$VALUES b
	INSTANCE a
	getBiome (JIIILnet/minecraft/world/level/biome/BiomeManager$NoiseBiomeSource;)Lnet/minecraft/world/level/biome/Biome; a
	getFiddle (J)D a
	getFiddledDistance (JIIIDDD)D a
	sqr (D)D a
net/minecraft/world/level/biome/FuzzyOffsetConstantColumnBiomeZoomer bsk
	$VALUES b
	INSTANCE a
	getBiome (JIIILnet/minecraft/world/level/biome/BiomeManager$NoiseBiomeSource;)Lnet/minecraft/world/level/biome/Biome; a
net/minecraft/world/level/biome/GiantSpruceTaigaBiome bsl
net/minecraft/world/level/biome/GiantSpruceTaigaHillsMutatedBiome bsm
net/minecraft/world/level/biome/GiantTreeTaigaBiome bsn
net/minecraft/world/level/biome/GiantTreeTaigaHillsBiome bso
net/minecraft/world/level/biome/GravellyMountainsBiome bsp
net/minecraft/world/level/biome/IceSpikesBiome bsq
	getCreatureProbability ()F f
net/minecraft/world/level/biome/JungleBiome bsr
net/minecraft/world/level/biome/JungleEdgeBiome bss
net/minecraft/world/level/biome/JungleHillsBiome bst
net/minecraft/world/level/biome/LukeWarmOceanBiome bsu
net/minecraft/world/level/biome/ModifiedBadlandsPlateauBiome bsv
	getFoliageColor ()I a
	getGrassColor (DD)I a
net/minecraft/world/level/biome/ModifiedGravellyMountainsBiome bsw
net/minecraft/world/level/biome/ModifiedJungleBiome bsx
net/minecraft/world/level/biome/ModifiedJungleEdgeBiome bsy
net/minecraft/world/level/biome/ModifiedWoodedBadlandsPlateauBiome bsz
	getFoliageColor ()I a
	getGrassColor (DD)I a
net/minecraft/world/level/biome/MountainBiome bta
net/minecraft/world/level/biome/MountainEdgeBiome btb
net/minecraft/world/level/biome/MultiNoiseBiomeSource btc
	CODEC f
	DIRECT_CODEC e
	altitudeNoise i
	humidityNoise h
	parameters k
	preset n
	seed m
	temperatureNoise g
	useY l
	weirdnessNoise j
	codec ()Lcom/mojang/serialization/Codec; a
	defaultNether (J)Lnet/minecraft/world/level/biome/MultiNoiseBiomeSource; d
	getNoiseBiome (III)Lnet/minecraft/world/level/biome/Biome; b
	stable (J)Z b
	withSeed (J)Lnet/minecraft/world/level/biome/BiomeSource; a
net/minecraft/world/level/biome/MultiNoiseBiomeSource$Preset btc$a
	BY_NAME c
	CODEC a
	NETHER b
	biomeSource e
	name d
	biomeSource (J)Lnet/minecraft/world/level/biome/MultiNoiseBiomeSource; a
net/minecraft/world/level/biome/MushroomFieldsBiome btd
net/minecraft/world/level/biome/MushroomFieldsShoreBiome bte
net/minecraft/world/level/biome/NearestNeighborBiomeZoomer btf
	$VALUES b
	INSTANCE a
	getBiome (JIIILnet/minecraft/world/level/biome/BiomeManager$NoiseBiomeSource;)Lnet/minecraft/world/level/biome/Biome; a
net/minecraft/world/level/biome/NetherWastesBiome btg
net/minecraft/world/level/biome/OceanBiome bth
net/minecraft/world/level/biome/OverworldBiomeSource bti
	CODEC e
	POSSIBLE_BIOMES g
	largeBiomes j
	legacyBiomeInitLayer i
	noiseBiomeLayer f
	seed h
	codec ()Lcom/mojang/serialization/Codec; a
	getNoiseBiome (III)Lnet/minecraft/world/level/biome/Biome; b
	withSeed (J)Lnet/minecraft/world/level/biome/BiomeSource; a
net/minecraft/world/level/biome/PlainsBiome btj
net/minecraft/world/level/biome/RiverBiome btk
net/minecraft/world/level/biome/SavannaBiome btl
net/minecraft/world/level/biome/SavannaPlateauBiome btm
net/minecraft/world/level/biome/ShatteredSavannaBiome btn
net/minecraft/world/level/biome/ShatteredSavannaPlateauBiome bto
net/minecraft/world/level/biome/SmallEndIslandsBiome btp
	getSkyColor ()I c
net/minecraft/world/level/biome/SnowyBeachBiome btq
net/minecraft/world/level/biome/SnowyMountainsBiome btr
	getCreatureProbability ()F f
net/minecraft/world/level/biome/SnowyTaigaBiome bts
net/minecraft/world/level/biome/SnowyTaigaHillsBiome btt
net/minecraft/world/level/biome/SnowyTaigaMountainsBiome btu
net/minecraft/world/level/biome/SnowyTundraBiome btv
	getCreatureProbability ()F f
net/minecraft/world/level/biome/SoulSandValleyBiome btw
net/minecraft/world/level/biome/StoneShoreBiome btx
net/minecraft/world/level/biome/SunflowerPlainsBiome bty
net/minecraft/world/level/biome/SwampBiome btz
	getFoliageColor ()I a
	getGrassColor (DD)I a
net/minecraft/world/level/biome/SwampHillsBiome bua
	getFoliageColor ()I a
	getGrassColor (DD)I a
net/minecraft/world/level/biome/TaigaBiome bub
net/minecraft/world/level/biome/TaigaHillsBiome buc
net/minecraft/world/level/biome/TaigaMountainsBiome bud
net/minecraft/world/level/biome/TallBirchForestBiome bue
net/minecraft/world/level/biome/TallBirchHillsBiome buf
net/minecraft/world/level/biome/TheEndBiome bug
	getSkyColor ()I c
net/minecraft/world/level/biome/TheEndBiomeSource buh
	CODEC e
	POSSIBLE_BIOMES g
	islandNoise f
	seed h
	codec ()Lcom/mojang/serialization/Codec; a
	getHeightValue (Lnet/minecraft/world/level/levelgen/synth/SimplexNoise;II)F a
	getNoiseBiome (III)Lnet/minecraft/world/level/biome/Biome; b
	stable (J)Z b
	withSeed (J)Lnet/minecraft/world/level/biome/BiomeSource; a
net/minecraft/world/level/biome/TheVoidBiome bui
net/minecraft/world/level/biome/WarmOceanBiome buj
net/minecraft/world/level/biome/WarpedForestBiome buk
net/minecraft/world/level/biome/WoodedBadlandsBiome bul
	getFoliageColor ()I a
	getGrassColor (DD)I a
net/minecraft/world/level/biome/WoodedHillsBiome bum
net/minecraft/world/level/biome/WoodedMountainBiome bun
net/minecraft/world/level/block/AbstractBannerBlock bup
	color a
	getCloneItemStack (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/item/ItemStack; a
	getColor ()Lnet/minecraft/world/item/DyeColor; b
	isPossibleToRespawnInThis ()Z ak_
	newBlockEntity (Lnet/minecraft/world/level/BlockGetter;)Lnet/minecraft/world/level/block/entity/BlockEntity; a
	setPlacedBy (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/item/ItemStack;)V a
net/minecraft/world/level/block/AbstractChestBlock buq
	blockEntityType a
	combine (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Z)Lnet/minecraft/world/level/block/DoubleBlockCombiner$NeighborCombineResult; a
net/minecraft/world/level/block/AbstractFurnaceBlock bur
	FACING a
	LIT b
	animateTick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)V a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getAnalogOutputSignal (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)I a
	getRenderShape (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/RenderShape; b
	getStateForPlacement (Lnet/minecraft/world/item/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	hasAnalogOutputSignal (Lnet/minecraft/world/level/block/state/BlockState;)Z a
	mirror (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Mirror;)Lnet/minecraft/world/level/block/state/BlockState; a
	onRemove (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)V a
	openContainer (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/player/Player;)V a
	rotate (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Rotation;)Lnet/minecraft/world/level/block/state/BlockState; a
	setPlacedBy (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/item/ItemStack;)V a
	use (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;Lnet/minecraft/world/phys/BlockHitResult;)Lnet/minecraft/world/InteractionResult; a
net/minecraft/world/level/block/AbstractGlassBlock bus
	getShadeBrightness (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)F a
	getVisualShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	propagatesSkylightDown (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Z b
net/minecraft/world/level/block/AbstractSkullBlock but
	type a
	getType ()Lnet/minecraft/world/level/block/SkullBlock$Type; b
	isPathfindable (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/pathfinder/PathComputationType;)Z a
	newBlockEntity (Lnet/minecraft/world/level/BlockGetter;)Lnet/minecraft/world/level/block/entity/BlockEntity; a
net/minecraft/world/level/block/AirBlock buu
	getRenderShape (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/RenderShape; b
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; b
net/minecraft/world/level/block/AnvilBlock buv
	BASE b
	CONTAINER_TITLE k
	FACING a
	X_AXIS_AABB i
	X_LEG1 c
	X_LEG2 d
	X_TOP e
	Z_AXIS_AABB j
	Z_LEG1 f
	Z_LEG2 g
	Z_TOP h
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	damage (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/state/BlockState; c
	falling (Lnet/minecraft/world/entity/item/FallingBlockEntity;)V a
	getDustColor (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)I c
	getMenuProvider (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/MenuProvider; b
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; b
	getStateForPlacement (Lnet/minecraft/world/item/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	isPathfindable (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/pathfinder/PathComputationType;)Z a
	onBroken (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/item/FallingBlockEntity;)V a
	onLand (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/entity/item/FallingBlockEntity;)V a
	rotate (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Rotation;)Lnet/minecraft/world/level/block/state/BlockState; a
	use (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;Lnet/minecraft/world/phys/BlockHitResult;)Lnet/minecraft/world/InteractionResult; a
net/minecraft/world/level/block/AttachedStemBlock buw
	AABBS c
	FACING a
	fruit b
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getCloneItemStack (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/item/ItemStack; a
	getSeedItem ()Lnet/minecraft/world/item/Item; b
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; b
	mayPlaceOn (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Z c
	mirror (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Mirror;)Lnet/minecraft/world/level/block/state/BlockState; a
	rotate (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Rotation;)Lnet/minecraft/world/level/block/state/BlockState; a
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
net/minecraft/world/level/block/BambooBlock bux
	AGE d
	COLLISION_SHAPE c
	LARGE_SHAPE b
	LEAVES e
	SMALL_SHAPE a
	STAGE f
	canSurvive (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;)Z a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getCollisionShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; c
	getDestroyProgress (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)F a
	getHeightAboveUpToMax (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)I a
	getHeightBelowUpToMax (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)I b
	getOffsetType ()Lnet/minecraft/world/level/block/state/BlockBehaviour$OffsetType; aj_
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; b
	getStateForPlacement (Lnet/minecraft/world/item/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	growBamboo (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Ljava/util/Random;I)V a
	isBonemealSuccess (Lnet/minecraft/world/level/Level;Ljava/util/Random;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Z a
	isPathfindable (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/pathfinder/PathComputationType;)Z a
	isRandomlyTicking (Lnet/minecraft/world/level/block/state/BlockState;)Z a_
	isValidBonemealTarget (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)Z a
	performBonemeal (Lnet/minecraft/server/level/ServerLevel;Ljava/util/Random;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V a
	propagatesSkylightDown (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Z b
	randomTick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)V b
	tick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)V a
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
net/minecraft/world/level/block/BambooSaplingBlock buy
	SAPLING_SHAPE a
	canSurvive (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;)Z a
	getCloneItemStack (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/item/ItemStack; a
	getDestroyProgress (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)F a
	getOffsetType ()Lnet/minecraft/world/level/block/state/BlockBehaviour$OffsetType; aj_
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; b
	growBamboo (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)V a
	isBonemealSuccess (Lnet/minecraft/world/level/Level;Ljava/util/Random;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Z a
	isValidBonemealTarget (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)Z a
	performBonemeal (Lnet/minecraft/server/level/ServerLevel;Ljava/util/Random;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V a
	randomTick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)V b
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
net/minecraft/world/level/block/BannerBlock buz
	BY_COLOR b
	ROTATION a
	SHAPE c
	byColor (Lnet/minecraft/world/item/DyeColor;)Lnet/minecraft/world/level/block/Block; a
	canSurvive (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;)Z a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; b
	getStateForPlacement (Lnet/minecraft/world/item/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	mirror (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Mirror;)Lnet/minecraft/world/level/block/state/BlockState; a
	rotate (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Rotation;)Lnet/minecraft/world/level/block/state/BlockState; a
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
net/minecraft/world/level/block/BarrelBlock bva
	FACING a
	OPEN b
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getAnalogOutputSignal (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)I a
	getRenderShape (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/RenderShape; b
	getStateForPlacement (Lnet/minecraft/world/item/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	hasAnalogOutputSignal (Lnet/minecraft/world/level/block/state/BlockState;)Z a
	mirror (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Mirror;)Lnet/minecraft/world/level/block/state/BlockState; a
	newBlockEntity (Lnet/minecraft/world/level/BlockGetter;)Lnet/minecraft/world/level/block/entity/BlockEntity; a
	onRemove (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)V a
	rotate (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Rotation;)Lnet/minecraft/world/level/block/state/BlockState; a
	setPlacedBy (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/item/ItemStack;)V a
	tick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)V a
	use (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;Lnet/minecraft/world/phys/BlockHitResult;)Lnet/minecraft/world/InteractionResult; a
net/minecraft/world/level/block/BarrierBlock bvb
	getRenderShape (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/RenderShape; b
	getShadeBrightness (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)F a
	propagatesSkylightDown (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Z b
net/minecraft/world/level/block/BaseCoralFanBlock bvc
	AABB a
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; b
net/minecraft/world/level/block/BaseCoralPlantBlock bvd
	SHAPE a
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; b
net/minecraft/world/level/block/BaseCoralPlantTypeBlock bve
	AABB a
	WATERLOGGED b
	canSurvive (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;)Z a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getFluidState (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/material/FluidState; d
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; b
	getStateForPlacement (Lnet/minecraft/world/item/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	scanForWater (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Z c
	tryScheduleDieTick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;)V a
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
net/minecraft/world/level/block/BaseCoralWallFanBlock bvf
	FACING a
	SHAPES c
	canSurvive (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;)Z a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; b
	getStateForPlacement (Lnet/minecraft/world/item/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	mirror (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Mirror;)Lnet/minecraft/world/level/block/state/BlockState; a
	rotate (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Rotation;)Lnet/minecraft/world/level/block/state/BlockState; a
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
net/minecraft/world/level/block/BaseEntityBlock bvg
	getMenuProvider (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/MenuProvider; b
	getRenderShape (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/RenderShape; b
	triggerEvent (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;II)Z a
net/minecraft/world/level/block/BaseFireBlock bvh
	DOWN_AABB b
	EAST_AABB d
	NORTH_AABB e
	SOUTH_AABB f
	UP_AABB a
	WEST_AABB c
	fireDamage g
	animateTick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)V a
	canBePlacedAt (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;)Z a
	canBurn (Lnet/minecraft/world/level/block/state/BlockState;)Z e
	entityInside (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/Entity;)V a
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; b
	getState (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
	getStateForPlacement (Lnet/minecraft/world/item/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	isPortal (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;)Z b
	onPlace (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)V b
	playerWillDestroy (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/entity/player/Player;)V a
net/minecraft/world/level/block/BasePressurePlateBlock bvi
	AABB b
	PRESSED_AABB a
	TOUCH_AABB c
	canSurvive (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;)Z a
	checkPressed (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;I)V a
	entityInside (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/Entity;)V a
	getDirectSignal (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;)I b
	getPistonPushReaction (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/material/PushReaction; f
	getPressedTime ()I c
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; b
	getSignal (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;)I a
	getSignalForState (Lnet/minecraft/world/level/block/state/BlockState;)I g
	getSignalStrength (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)I b
	isPossibleToRespawnInThis ()Z ak_
	isSignalSource (Lnet/minecraft/world/level/block/state/BlockState;)Z b_
	onRemove (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)V a
	playOffSound (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;)V b
	playOnSound (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;)V a
	setSignalForState (Lnet/minecraft/world/level/block/state/BlockState;I)Lnet/minecraft/world/level/block/state/BlockState; a
	tick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)V a
	updateNeighbours (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)V a
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
net/minecraft/world/level/block/BaseRailBlock bvj
	FLAT_AABB a
	HALF_BLOCK_AABB b
	isStraight c
	canSurvive (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;)Z a
	getPistonPushReaction (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/material/PushReaction; f
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; b
	getShapeProperty ()Lnet/minecraft/world/level/block/state/properties/Property; d
	getStateForPlacement (Lnet/minecraft/world/item/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	isRail (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)Z a
	isRail (Lnet/minecraft/world/level/block/state/BlockState;)Z g
	isStraight ()Z c
	neighborChanged (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Block;Lnet/minecraft/core/BlockPos;Z)V a
	onPlace (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)V b
	onRemove (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)V a
	shouldBeRemoved (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/Level;Lnet/minecraft/world/level/block/state/properties/RailShape;)Z a
	updateDir (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)Lnet/minecraft/world/level/block/state/BlockState; a
	updateState (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Block;)V a
	updateState (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Z)Lnet/minecraft/world/level/block/state/BlockState; a
net/minecraft/world/level/block/BeaconBeamBlock bvk
	getColor ()Lnet/minecraft/world/item/DyeColor; a
net/minecraft/world/level/block/BeaconBlock bvl
	getColor ()Lnet/minecraft/world/item/DyeColor; a
	getRenderShape (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/RenderShape; b
	newBlockEntity (Lnet/minecraft/world/level/BlockGetter;)Lnet/minecraft/world/level/block/entity/BlockEntity; a
	setPlacedBy (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/item/ItemStack;)V a
	use (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;Lnet/minecraft/world/phys/BlockHitResult;)Lnet/minecraft/world/InteractionResult; a
net/minecraft/world/level/block/BedBlock bvm
	BASE c
	EAST_SHAPE k
	LEG_NORTH_EAST f
	LEG_NORTH_WEST d
	LEG_SOUTH_EAST g
	LEG_SOUTH_WEST e
	NORTH_SHAPE h
	OCCUPIED b
	PART a
	SOUTH_SHAPE i
	WEST_SHAPE j
	color o
	bounceUp (Lnet/minecraft/world/entity/Entity;)V a
	canSetSpawn (Lnet/minecraft/world/level/Level;)Z a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	fallOn (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/Entity;F)V a
	findStandUpPosition (Lnet/minecraft/world/entity/EntityType;Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;I)Ljava/util/Optional; a
	getBedOrientation (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/core/Direction; a
	getBlockType (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/DoubleBlockCombiner$BlockType; h
	getColor ()Lnet/minecraft/world/item/DyeColor; c
	getConnectedDirection (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/core/Direction; g
	getNeighbourDirection (Lnet/minecraft/world/level/block/state/properties/BedPart;Lnet/minecraft/core/Direction;)Lnet/minecraft/core/Direction; a
	getPistonPushReaction (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/material/PushReaction; f
	getRenderShape (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/RenderShape; b
	getSeed (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/BlockPos;)J a
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; b
	getStandingLocationAtOrBelow (Lnet/minecraft/world/entity/EntityType;Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;)Ljava/util/Optional; a
	getStateForPlacement (Lnet/minecraft/world/item/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	isPathfindable (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/pathfinder/PathComputationType;)Z a
	kickVillagerOutOfBed (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)Z a
	newBlockEntity (Lnet/minecraft/world/level/BlockGetter;)Lnet/minecraft/world/level/block/entity/BlockEntity; a
	playerWillDestroy (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/entity/player/Player;)V a
	setPlacedBy (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/item/ItemStack;)V a
	updateEntityAfterFallOn (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/world/entity/Entity;)V a
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
	use (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;Lnet/minecraft/world/phys/BlockHitResult;)Lnet/minecraft/world/InteractionResult; a
net/minecraft/world/level/block/BeehiveBlock bvn
	FACING a
	HONEY_LEVEL b
	SPAWN_DIRECTIONS c
	angerNearbyBees (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)V b
	animateTick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)V a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	dropHoneycomb (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)V a
	getAnalogOutputSignal (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)I a
	getDrops (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/storage/loot/LootContext$Builder;)Ljava/util/List; a
	getRandomOffset (Ljava/util/Random;)Lnet/minecraft/core/Direction; a
	getRenderShape (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/RenderShape; b
	getStateForPlacement (Lnet/minecraft/world/item/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	hasAnalogOutputSignal (Lnet/minecraft/world/level/block/state/BlockState;)Z a
	hiveContainsBees (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)Z d
	newBlockEntity (Lnet/minecraft/world/level/BlockGetter;)Lnet/minecraft/world/level/block/entity/BlockEntity; a
	playerDestroy (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/entity/BlockEntity;Lnet/minecraft/world/item/ItemStack;)V a
	playerWillDestroy (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/entity/player/Player;)V a
	releaseBeesAndResetHoneyLevel (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/level/block/entity/BeehiveBlockEntity$BeeReleaseStatus;)V a
	resetHoneyLevel (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/BlockPos;)V a
	spawnFluidParticle (Lnet/minecraft/world/level/Level;DDDDD)V a
	spawnParticle (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/VoxelShape;D)V a
	trySpawnDripParticles (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V a
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
	use (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;Lnet/minecraft/world/phys/BlockHitResult;)Lnet/minecraft/world/InteractionResult; a
net/minecraft/world/level/block/BeetrootBlock bvo
	AGE a
	SHAPE_BY_AGE c
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getAgeProperty ()Lnet/minecraft/world/level/block/state/properties/IntegerProperty; c
	getBaseSeedId ()Lnet/minecraft/world/level/ItemLike; e
	getBonemealAgeIncrease (Lnet/minecraft/world/level/Level;)I a
	getMaxAge ()I d
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; b
	randomTick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)V b
net/minecraft/world/level/block/BellBlock bvp
	ATTACHMENT b
	BELL_BOTTOM_SHAPE g
	BELL_SHAPE h
	BELL_TOP_SHAPE f
	CEILING_SHAPE r
	EAST_WEST_BETWEEN j
	EAST_WEST_FLOOR_SHAPE e
	FACING a
	NORTH_SOUTH_BETWEEN i
	NORTH_SOUTH_FLOOR_SHAPE d
	POWERED c
	TO_EAST o
	TO_NORTH p
	TO_SOUTH q
	TO_WEST k
	attemptToRing (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;)Z a
	canSurvive (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;)Z a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getCollisionShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; c
	getConnectedDirection (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/core/Direction; l
	getPistonPushReaction (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/material/PushReaction; f
	getRenderShape (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/RenderShape; b
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; b
	getStateForPlacement (Lnet/minecraft/world/item/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	getVoxelShape (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/phys/shapes/VoxelShape; h
	isPathfindable (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/pathfinder/PathComputationType;)Z a
	isProperHit (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;D)Z a
	neighborChanged (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Block;Lnet/minecraft/core/BlockPos;Z)V a
	newBlockEntity (Lnet/minecraft/world/level/BlockGetter;)Lnet/minecraft/world/level/block/entity/BlockEntity; a
	onHit (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/phys/BlockHitResult;Lnet/minecraft/world/entity/player/Player;Z)Z a
	onProjectileHit (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/phys/BlockHitResult;Lnet/minecraft/world/entity/projectile/Projectile;)V a
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
	use (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;Lnet/minecraft/world/phys/BlockHitResult;)Lnet/minecraft/world/InteractionResult; a
net/minecraft/world/level/block/BlastFurnaceBlock bvq
	animateTick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)V a
	newBlockEntity (Lnet/minecraft/world/level/BlockGetter;)Lnet/minecraft/world/level/block/entity/BlockEntity; a
	openContainer (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/player/Player;)V a
net/minecraft/world/level/block/Block bvr
	BLOCK_STATE_REGISTRY m
	CENTER_SUPPORT_SHAPE c
	LOGGER l
	OCCLUSION_CACHE g
	RIGID_SUPPORT_SHAPE b
	SHAPE_FULL_BLOCK_CACHE a
	defaultBlockState d
	descriptionId e
	item f
	stateDefinition n
	animateTick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)V a
	appendHoverText (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/BlockGetter;Ljava/util/List;Lnet/minecraft/world/item/TooltipFlag;)V a
	asBlock ()Lnet/minecraft/world/level/block/Block; p
	asItem ()Lnet/minecraft/world/item/Item; h
	box (DDDDDD)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	byItem (Lnet/minecraft/world/item/Item;)Lnet/minecraft/world/level/block/Block; a
	canSupportCenter (Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;)Z a
	canSupportRigidBlock (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Z c
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	defaultBlockState ()Lnet/minecraft/world/level/block/state/BlockState; n
	destroy (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V a
	dropFromExplosion (Lnet/minecraft/world/level/Explosion;)Z a
	dropResources (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)V c
	dropResources (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/entity/BlockEntity;)V a
	dropResources (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/entity/BlockEntity;Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/item/ItemStack;)V a
	dropResources (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/storage/loot/LootContext$Builder;)V b
	fallOn (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/Entity;F)V a
	fillItemCategory (Lnet/minecraft/world/item/CreativeModeTab;Lnet/minecraft/core/NonNullList;)V a
	getCloneItemStack (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/item/ItemStack; a
	getDescriptionId ()Ljava/lang/String; i
	getDrops (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/entity/BlockEntity;)Ljava/util/List; a
	getDrops (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/entity/BlockEntity;Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/item/ItemStack;)Ljava/util/List; a
	getExplosionResistance ()F f
	getFriction ()F j
	getId (Lnet/minecraft/world/level/block/state/BlockState;)I i
	getJumpFactor ()F l
	getName ()Lnet/minecraft/network/chat/MutableComponent; g
	getSoundType (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/SoundType; k
	getSpeedFactor ()F k
	getStateDefinition ()Lnet/minecraft/world/level/block/state/StateDefinition; m
	getStateForPlacement (Lnet/minecraft/world/item/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	getTickDelay (Lnet/minecraft/world/level/LevelReader;)I a
	handleRain (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)V c
	hasDynamicShape ()Z o
	is (Lnet/minecraft/tags/Tag;)Z a
	is (Lnet/minecraft/world/level/block/Block;)Z a
	isExceptionForConnection (Lnet/minecraft/world/level/block/Block;)Z b
	isFaceFull (Lnet/minecraft/world/phys/shapes/VoxelShape;Lnet/minecraft/core/Direction;)Z a
	isFaceSturdy (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;)Z d
	isPossibleToRespawnInThis ()Z ak_
	isRandomlyTicking (Lnet/minecraft/world/level/block/state/BlockState;)Z a_
	isShapeFullBlock (Lnet/minecraft/world/phys/shapes/VoxelShape;)Z a
	playerDestroy (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/entity/BlockEntity;Lnet/minecraft/world/item/ItemStack;)V a
	playerWillDestroy (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/entity/player/Player;)V a
	popExperience (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;I)V a
	popResource (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/item/ItemStack;)V a
	prepareRender (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)V d
	propagatesSkylightDown (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Z b
	pushEntitiesUp (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
	registerDefaultState (Lnet/minecraft/world/level/block/state/BlockState;)V j
	setPlacedBy (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/item/ItemStack;)V a
	shouldRenderFace (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;)Z c
	stateById (I)Lnet/minecraft/world/level/block/state/BlockState; a
	stepOn (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/Entity;)V a
	updateEntityAfterFallOn (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/world/entity/Entity;)V a
	updateFromNeighbourShapes (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; b
	updateOrDestroy (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;I)V a
	updateOrDestroy (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;II)V a
	wasExploded (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/Explosion;)V a
net/minecraft/world/level/block/Block$BlockStatePairKey bvr$a
	direction c
	first a
	second b
net/minecraft/world/level/block/Blocks bvs
	ACACIA_BUTTON fa
	ACACIA_DOOR iu
	ACACIA_FENCE ip
	ACACIA_FENCE_GATE ik
	ACACIA_LEAVES al
	ACACIA_LOG N
	ACACIA_PLANKS r
	ACACIA_PRESSURE_PLATE cw
	ACACIA_SAPLING x
	ACACIA_SIGN cc
	ACACIA_SLAB hO
	ACACIA_STAIRS gl
	ACACIA_TRAPDOOR ds
	ACACIA_WALL_SIGN cm
	ACACIA_WOOD Z
	ACTIVATOR_RAIL fD
	AIR a
	ALLIUM bs
	ANCIENT_DEBRIS nh
	ANDESITE g
	ANDESITE_SLAB lA
	ANDESITE_STAIRS ln
	ANDESITE_WALL lL
	ANVIL fo
	ATTACHED_MELON_STEM dM
	ATTACHED_PUMPKIN_STEM dL
	AZURE_BLUET bt
	BAMBOO kY
	BAMBOO_SAPLING kX
	BARREL lS
	BARRIER go
	BASALT cO
	BEACON es
	BEDROCK z
	BEEHIVE nd
	BEETROOTS iD
	BEE_NEST nc
	BELL mb
	BIRCH_BUTTON eY
	BIRCH_DOOR is
	BIRCH_FENCE in
	BIRCH_FENCE_GATE ii
	BIRCH_LEAVES aj
	BIRCH_LOG L
	BIRCH_PLANKS p
	BIRCH_PRESSURE_PLATE cu
	BIRCH_SAPLING v
	BIRCH_SIGN cb
	BIRCH_SLAB hM
	BIRCH_STAIRS ep
	BIRCH_TRAPDOOR dq
	BIRCH_WALL_SIGN cl
	BIRCH_WOOD X
	BLACKSTONE np
	BLACKSTONE_SLAB ns
	BLACKSTONE_STAIRS nq
	BLACKSTONE_WALL nr
	BLACK_BANNER hp
	BLACK_BED aM
	BLACK_CARPET gQ
	BLACK_CONCRETE jL
	BLACK_CONCRETE_POWDER kb
	BLACK_GLAZED_TERRACOTTA jv
	BLACK_SHULKER_BOX jf
	BLACK_STAINED_GLASS dn
	BLACK_STAINED_GLASS_PANE gk
	BLACK_TERRACOTTA fU
	BLACK_WALL_BANNER hF
	BLACK_WOOL bn
	BLAST_FURNACE lU
	BLUE_BANNER hl
	BLUE_BED aI
	BLUE_CARPET gM
	BLUE_CONCRETE jH
	BLUE_CONCRETE_POWDER jX
	BLUE_GLAZED_TERRACOTTA jr
	BLUE_ICE kV
	BLUE_ORCHID br
	BLUE_SHULKER_BOX jb
	BLUE_STAINED_GLASS dj
	BLUE_STAINED_GLASS_PANE gg
	BLUE_TERRACOTTA fQ
	BLUE_WALL_BANNER hB
	BLUE_WOOL bj
	BONE_BLOCK iM
	BOOKSHELF bI
	BRAIN_CORAL kw
	BRAIN_CORAL_BLOCK km
	BRAIN_CORAL_FAN kG
	BRAIN_CORAL_WALL_FAN kQ
	BREWING_STAND ea
	BRICKS bG
	BRICK_SLAB hW
	BRICK_STAIRS dR
	BRICK_WALL lE
	BROWN_BANNER hm
	BROWN_BED aJ
	BROWN_CARPET gN
	BROWN_CONCRETE jI
	BROWN_CONCRETE_POWDER jY
	BROWN_GLAZED_TERRACOTTA js
	BROWN_MUSHROOM bC
	BROWN_MUSHROOM_BLOCK dE
	BROWN_SHULKER_BOX jc
	BROWN_STAINED_GLASS dk
	BROWN_STAINED_GLASS_PANE gh
	BROWN_TERRACOTTA fR
	BROWN_WALL_BANNER hC
	BROWN_WOOL bk
	BUBBLE_COLUMN lc
	BUBBLE_CORAL kx
	BUBBLE_CORAL_BLOCK kn
	BUBBLE_CORAL_FAN kH
	BUBBLE_CORAL_WALL_FAN kR
	CACTUS cF
	CAKE cW
	CAMPFIRE me
	CARROTS eU
	CARTOGRAPHY_TABLE lV
	CARVED_PUMPKIN cU
	CAULDRON eb
	CAVE_AIR lb
	CHAIN dI
	CHAIN_COMMAND_BLOCK iH
	CHEST bR
	CHIPPED_ANVIL fp
	CHISELED_NETHER_BRICKS nG
	CHISELED_POLISHED_BLACKSTONE nw
	CHISELED_QUARTZ_BLOCK fA
	CHISELED_RED_SANDSTONE hH
	CHISELED_SANDSTONE au
	CHISELED_STONE_BRICKS dx
	CHORUS_FLOWER iy
	CHORUS_PLANT ix
	CLAY cG
	COAL_BLOCK gS
	COAL_ORE H
	COARSE_DIRT k
	COBBLESTONE m
	COBBLESTONE_SLAB hV
	COBBLESTONE_STAIRS ci
	COBBLESTONE_WALL et
	COBWEB aQ
	COCOA eh
	COMMAND_BLOCK er
	COMPARATOR fu
	COMPOSTER na
	CONDUIT kW
	CORNFLOWER bz
	CRACKED_NETHER_BRICKS nH
	CRACKED_POLISHED_BLACKSTONE_BRICKS nv
	CRACKED_STONE_BRICKS dw
	CRAFTING_TABLE bV
	CREEPER_HEAD fk
	CREEPER_WALL_HEAD fl
	CRIMSON_BUTTON mQ
	CRIMSON_DOOR mS
	CRIMSON_FENCE mI
	CRIMSON_FENCE_GATE mM
	CRIMSON_FUNGUS mv
	CRIMSON_HYPHAE ms
	CRIMSON_NYLIUM mu
	CRIMSON_PLANKS mC
	CRIMSON_PRESSURE_PLATE mG
	CRIMSON_ROOTS mB
	CRIMSON_SIGN mU
	CRIMSON_SLAB mE
	CRIMSON_STAIRS mO
	CRIMSON_STEM mq
	CRIMSON_TRAPDOOR mK
	CRIMSON_WALL_SIGN mW
	CRYING_OBSIDIAN ni
	CUT_RED_SANDSTONE hI
	CUT_RED_SANDSTONE_SLAB ib
	CUT_SANDSTONE av
	CUT_SANDSTONE_SLAB hT
	CYAN_BANNER hj
	CYAN_BED aG
	CYAN_CARPET gK
	CYAN_CONCRETE jF
	CYAN_CONCRETE_POWDER jV
	CYAN_GLAZED_TERRACOTTA jp
	CYAN_SHULKER_BOX iZ
	CYAN_STAINED_GLASS dh
	CYAN_STAINED_GLASS_PANE ge
	CYAN_TERRACOTTA fO
	CYAN_WALL_BANNER hz
	CYAN_WOOL bh
	DAMAGED_ANVIL fq
	DANDELION bp
	DARK_OAK_BUTTON fb
	DARK_OAK_DOOR iv
	DARK_OAK_FENCE iq
	DARK_OAK_FENCE_GATE il
	DARK_OAK_LEAVES am
	DARK_OAK_LOG O
	DARK_OAK_PLANKS s
	DARK_OAK_PRESSURE_PLATE cx
	DARK_OAK_SAPLING y
	DARK_OAK_SIGN ce
	DARK_OAK_SLAB hP
	DARK_OAK_STAIRS gm
	DARK_OAK_TRAPDOOR dt
	DARK_OAK_WALL_SIGN co
	DARK_OAK_WOOD aa
	DARK_PRISMARINE gs
	DARK_PRISMARINE_SLAB gy
	DARK_PRISMARINE_STAIRS gv
	DAYLIGHT_DETECTOR fv
	DEAD_BRAIN_CORAL kr
	DEAD_BRAIN_CORAL_BLOCK kh
	DEAD_BRAIN_CORAL_FAN kB
	DEAD_BRAIN_CORAL_WALL_FAN kL
	DEAD_BUBBLE_CORAL ks
	DEAD_BUBBLE_CORAL_BLOCK ki
	DEAD_BUBBLE_CORAL_FAN kC
	DEAD_BUBBLE_CORAL_WALL_FAN kM
	DEAD_BUSH aT
	DEAD_FIRE_CORAL kt
	DEAD_FIRE_CORAL_BLOCK kj
	DEAD_FIRE_CORAL_FAN kD
	DEAD_FIRE_CORAL_WALL_FAN kN
	DEAD_HORN_CORAL ku
	DEAD_HORN_CORAL_BLOCK kk
	DEAD_HORN_CORAL_FAN kE
	DEAD_HORN_CORAL_WALL_FAN kO
	DEAD_TUBE_CORAL kq
	DEAD_TUBE_CORAL_BLOCK kg
	DEAD_TUBE_CORAL_FAN kA
	DEAD_TUBE_CORAL_WALL_FAN kK
	DETECTOR_RAIL aO
	DIAMOND_BLOCK bU
	DIAMOND_ORE bT
	DIORITE e
	DIORITE_SLAB lD
	DIORITE_STAIRS lq
	DIORITE_WALL lP
	DIRT j
	DISPENSER as
	DRAGON_EGG ef
	DRAGON_HEAD fm
	DRAGON_WALL_HEAD fn
	DRIED_KELP_BLOCK ke
	DROPPER fE
	EMERALD_BLOCK en
	EMERALD_ORE ej
	ENCHANTING_TABLE dZ
	ENDER_CHEST ek
	END_GATEWAY iF
	END_PORTAL ec
	END_PORTAL_FRAME ed
	END_ROD iw
	END_STONE ee
	END_STONE_BRICKS iC
	END_STONE_BRICK_SLAB lw
	END_STONE_BRICK_STAIRS li
	END_STONE_BRICK_WALL lO
	FARMLAND bX
	FERN aS
	FIRE bN
	FIRE_CORAL ky
	FIRE_CORAL_BLOCK ko
	FIRE_CORAL_FAN kI
	FIRE_CORAL_WALL_FAN kS
	FLETCHING_TABLE lW
	FLOWER_POT ev
	FROSTED_ICE iI
	FURNACE bY
	GILDED_BLACKSTONE nA
	GLASS ap
	GLASS_PANE dJ
	GLOWSTONE cS
	GOLD_BLOCK bE
	GOLD_ORE F
	GRANITE c
	GRANITE_SLAB lz
	GRANITE_STAIRS lm
	GRANITE_WALL lI
	GRASS aR
	GRASS_BLOCK i
	GRASS_PATH iE
	GRAVEL E
	GRAY_BANNER hh
	GRAY_BED aE
	GRAY_CARPET gI
	GRAY_CONCRETE jD
	GRAY_CONCRETE_POWDER jT
	GRAY_GLAZED_TERRACOTTA jn
	GRAY_SHULKER_BOX iX
	GRAY_STAINED_GLASS df
	GRAY_STAINED_GLASS_PANE gc
	GRAY_TERRACOTTA fM
	GRAY_WALL_BANNER hx
	GRAY_WOOL bf
	GREEN_BANNER hn
	GREEN_BED aK
	GREEN_CARPET gO
	GREEN_CONCRETE jJ
	GREEN_CONCRETE_POWDER jZ
	GREEN_GLAZED_TERRACOTTA jt
	GREEN_SHULKER_BOX jd
	GREEN_STAINED_GLASS dl
	GREEN_STAINED_GLASS_PANE gi
	GREEN_TERRACOTTA fS
	GREEN_WALL_BANNER hD
	GREEN_WOOL bl
	GRINDSTONE lX
	HAY_BLOCK gA
	HEAVY_WEIGHTED_PRESSURE_PLATE ft
	HONEYCOMB_BLOCK nf
	HONEY_BLOCK ne
	HOPPER fy
	HORN_CORAL kz
	HORN_CORAL_BLOCK kp
	HORN_CORAL_FAN kJ
	HORN_CORAL_WALL_FAN kT
	ICE cD
	INFESTED_CHISELED_STONE_BRICKS dD
	INFESTED_COBBLESTONE dz
	INFESTED_CRACKED_STONE_BRICKS dC
	INFESTED_MOSSY_STONE_BRICKS dB
	INFESTED_STONE dy
	INFESTED_STONE_BRICKS dA
	IRON_BARS dH
	IRON_BLOCK bF
	IRON_DOOR cr
	IRON_ORE G
	IRON_TRAPDOOR gp
	JACK_O_LANTERN cV
	JIGSAW mZ
	JUKEBOX cI
	JUNGLE_BUTTON eZ
	JUNGLE_DOOR it
	JUNGLE_FENCE io
	JUNGLE_FENCE_GATE ij
	JUNGLE_LEAVES ak
	JUNGLE_LOG M
	JUNGLE_PLANKS q
	JUNGLE_PRESSURE_PLATE cv
	JUNGLE_SAPLING w
	JUNGLE_SIGN cd
	JUNGLE_SLAB hN
	JUNGLE_STAIRS eq
	JUNGLE_TRAPDOOR dr
	JUNGLE_WALL_SIGN cn
	JUNGLE_WOOD Y
	KELP kc
	KELP_PLANT kd
	LADDER cg
	LANTERN mc
	LAPIS_BLOCK ar
	LAPIS_ORE aq
	LARGE_FERN gZ
	LAVA B
	LECTERN lY
	LEVER cp
	LIGHT_BLUE_BANNER hd
	LIGHT_BLUE_BED aA
	LIGHT_BLUE_CARPET gE
	LIGHT_BLUE_CONCRETE jz
	LIGHT_BLUE_CONCRETE_POWDER jP
	LIGHT_BLUE_GLAZED_TERRACOTTA jj
	LIGHT_BLUE_SHULKER_BOX iT
	LIGHT_BLUE_STAINED_GLASS db
	LIGHT_BLUE_STAINED_GLASS_PANE fY
	LIGHT_BLUE_TERRACOTTA fI
	LIGHT_BLUE_WALL_BANNER ht
	LIGHT_BLUE_WOOL bb
	LIGHT_GRAY_BANNER hi
	LIGHT_GRAY_BED aF
	LIGHT_GRAY_CARPET gJ
	LIGHT_GRAY_CONCRETE jE
	LIGHT_GRAY_CONCRETE_POWDER jU
	LIGHT_GRAY_GLAZED_TERRACOTTA jo
	LIGHT_GRAY_SHULKER_BOX iY
	LIGHT_GRAY_STAINED_GLASS dg
	LIGHT_GRAY_STAINED_GLASS_PANE gd
	LIGHT_GRAY_TERRACOTTA fN
	LIGHT_GRAY_WALL_BANNER hy
	LIGHT_GRAY_WOOL bg
	LIGHT_WEIGHTED_PRESSURE_PLATE fs
	LILAC gV
	LILY_OF_THE_VALLEY bB
	LILY_PAD dU
	LIME_BANNER hf
	LIME_BED aC
	LIME_CARPET gG
	LIME_CONCRETE jB
	LIME_CONCRETE_POWDER jR
	LIME_GLAZED_TERRACOTTA jl
	LIME_SHULKER_BOX iV
	LIME_STAINED_GLASS dd
	LIME_STAINED_GLASS_PANE ga
	LIME_TERRACOTTA fK
	LIME_WALL_BANNER hv
	LIME_WOOL bd
	LODESTONE no
	LOOM lR
	MAGENTA_BANNER hc
	MAGENTA_BED az
	MAGENTA_CARPET gD
	MAGENTA_CONCRETE jy
	MAGENTA_CONCRETE_POWDER jO
	MAGENTA_GLAZED_TERRACOTTA ji
	MAGENTA_SHULKER_BOX iS
	MAGENTA_STAINED_GLASS da
	MAGENTA_STAINED_GLASS_PANE fX
	MAGENTA_TERRACOTTA fH
	MAGENTA_WALL_BANNER hs
	MAGENTA_WOOL ba
	MAGMA_BLOCK iJ
	MELON dK
	MELON_STEM dO
	MOSSY_COBBLESTONE bJ
	MOSSY_COBBLESTONE_SLAB lv
	MOSSY_COBBLESTONE_STAIRS lh
	MOSSY_COBBLESTONE_WALL eu
	MOSSY_STONE_BRICKS dv
	MOSSY_STONE_BRICK_SLAB lt
	MOSSY_STONE_BRICK_STAIRS lf
	MOSSY_STONE_BRICK_WALL lH
	MOVING_PISTON bo
	MUSHROOM_STEM dG
	MYCELIUM dT
	NETHERITE_BLOCK ng
	NETHERRACK cL
	NETHER_BRICKS dV
	NETHER_BRICK_FENCE dW
	NETHER_BRICK_SLAB hY
	NETHER_BRICK_STAIRS dX
	NETHER_BRICK_WALL lK
	NETHER_GOLD_ORE I
	NETHER_PORTAL cT
	NETHER_QUARTZ_ORE fx
	NETHER_SPROUTS mp
	NETHER_WART dY
	NETHER_WART_BLOCK iK
	NOTE_BLOCK aw
	OAK_BUTTON eW
	OAK_DOOR cf
	OAK_FENCE cJ
	OAK_FENCE_GATE dQ
	OAK_LEAVES ah
	OAK_LOG J
	OAK_PLANKS n
	OAK_PRESSURE_PLATE cs
	OAK_SAPLING t
	OAK_SIGN bZ
	OAK_SLAB hK
	OAK_STAIRS bQ
	OAK_TRAPDOOR do
	OAK_WALL_SIGN cj
	OAK_WOOD V
	OBSERVER iO
	OBSIDIAN bK
	ORANGE_BANNER hb
	ORANGE_BED ay
	ORANGE_CARPET gC
	ORANGE_CONCRETE jx
	ORANGE_CONCRETE_POWDER jN
	ORANGE_GLAZED_TERRACOTTA jh
	ORANGE_SHULKER_BOX iR
	ORANGE_STAINED_GLASS cZ
	ORANGE_STAINED_GLASS_PANE fW
	ORANGE_TERRACOTTA fG
	ORANGE_TULIP bv
	ORANGE_WALL_BANNER hr
	ORANGE_WOOL aZ
	OXEYE_DAISY by
	PACKED_ICE gT
	PEONY gX
	PETRIFIED_OAK_SLAB hU
	PINK_BANNER hg
	PINK_BED aD
	PINK_CARPET gH
	PINK_CONCRETE jC
	PINK_CONCRETE_POWDER jS
	PINK_GLAZED_TERRACOTTA jm
	PINK_SHULKER_BOX iW
	PINK_STAINED_GLASS de
	PINK_STAINED_GLASS_PANE gb
	PINK_TERRACOTTA fL
	PINK_TULIP bx
	PINK_WALL_BANNER hw
	PINK_WOOL be
	PISTON aW
	PISTON_HEAD aX
	PLAYER_HEAD fi
	PLAYER_WALL_HEAD fj
	PODZOL l
	POLISHED_ANDESITE h
	POLISHED_ANDESITE_SLAB lC
	POLISHED_ANDESITE_STAIRS lp
	POLISHED_BASALT cP
	POLISHED_BLACKSTONE nt
	POLISHED_BLACKSTONE_BRICKS nu
	POLISHED_BLACKSTONE_BRICK_SLAB nx
	POLISHED_BLACKSTONE_BRICK_STAIRS ny
	POLISHED_BLACKSTONE_BRICK_WALL nz
	POLISHED_BLACKSTONE_BUTTON nE
	POLISHED_BLACKSTONE_PRESSURE_PLATE nD
	POLISHED_BLACKSTONE_SLAB nC
	POLISHED_BLACKSTONE_STAIRS nB
	POLISHED_BLACKSTONE_WALL nF
	POLISHED_DIORITE f
	POLISHED_DIORITE_SLAB lu
	POLISHED_DIORITE_STAIRS lg
	POLISHED_GRANITE d
	POLISHED_GRANITE_SLAB lr
	POLISHED_GRANITE_STAIRS ld
	POPPY bq
	POTATOES eV
	POTTED_ACACIA_SAPLING eA
	POTTED_ALLIUM eG
	POTTED_AZURE_BLUET eH
	POTTED_BAMBOO kZ
	POTTED_BIRCH_SAPLING ey
	POTTED_BLUE_ORCHID eF
	POTTED_BROWN_MUSHROOM eR
	POTTED_CACTUS eT
	POTTED_CORNFLOWER eN
	POTTED_CRIMSON_FUNGUS nk
	POTTED_CRIMSON_ROOTS nm
	POTTED_DANDELION eD
	POTTED_DARK_OAK_SAPLING eB
	POTTED_DEAD_BUSH eS
	POTTED_FERN eC
	POTTED_JUNGLE_SAPLING ez
	POTTED_LILY_OF_THE_VALLEY eO
	POTTED_OAK_SAPLING ew
	POTTED_ORANGE_TULIP eJ
	POTTED_OXEYE_DAISY eM
	POTTED_PINK_TULIP eL
	POTTED_POPPY eE
	POTTED_RED_MUSHROOM eQ
	POTTED_RED_TULIP eI
	POTTED_SPRUCE_SAPLING ex
	POTTED_WARPED_FUNGUS nl
	POTTED_WARPED_ROOTS nn
	POTTED_WHITE_TULIP eK
	POTTED_WITHER_ROSE eP
	POWERED_RAIL aN
	PRISMARINE gq
	PRISMARINE_BRICKS gr
	PRISMARINE_BRICK_SLAB gx
	PRISMARINE_BRICK_STAIRS gu
	PRISMARINE_SLAB gw
	PRISMARINE_STAIRS gt
	PRISMARINE_WALL lF
	PUMPKIN cK
	PUMPKIN_STEM dN
	PURPLE_BANNER hk
	PURPLE_BED aH
	PURPLE_CARPET gL
	PURPLE_CONCRETE jG
	PURPLE_CONCRETE_POWDER jW
	PURPLE_GLAZED_TERRACOTTA jq
	PURPLE_SHULKER_BOX ja
	PURPLE_STAINED_GLASS di
	PURPLE_STAINED_GLASS_PANE gf
	PURPLE_TERRACOTTA fP
	PURPLE_WALL_BANNER hA
	PURPLE_WOOL bi
	PURPUR_BLOCK iz
	PURPUR_PILLAR iA
	PURPUR_SLAB ic
	PURPUR_STAIRS iB
	QUARTZ_BLOCK fz
	QUARTZ_BRICKS nI
	QUARTZ_PILLAR fB
	QUARTZ_SLAB hZ
	QUARTZ_STAIRS fC
	RAIL ch
	REDSTONE_BLOCK fw
	REDSTONE_LAMP eg
	REDSTONE_ORE cy
	REDSTONE_TORCH cz
	REDSTONE_WALL_TORCH cA
	REDSTONE_WIRE bS
	RED_BANNER ho
	RED_BED aL
	RED_CARPET gP
	RED_CONCRETE jK
	RED_CONCRETE_POWDER ka
	RED_GLAZED_TERRACOTTA ju
	RED_MUSHROOM bD
	RED_MUSHROOM_BLOCK dF
	RED_NETHER_BRICKS iL
	RED_NETHER_BRICK_SLAB lB
	RED_NETHER_BRICK_STAIRS lo
	RED_NETHER_BRICK_WALL lM
	RED_SAND D
	RED_SANDSTONE hG
	RED_SANDSTONE_SLAB ia
	RED_SANDSTONE_STAIRS hJ
	RED_SANDSTONE_WALL lG
	RED_SHULKER_BOX je
	RED_STAINED_GLASS dm
	RED_STAINED_GLASS_PANE gj
	RED_TERRACOTTA fT
	RED_TULIP bu
	RED_WALL_BANNER hE
	RED_WOOL bm
	REPEATER cX
	REPEATING_COMMAND_BLOCK iG
	RESPAWN_ANCHOR nj
	ROSE_BUSH gW
	SAND C
	SANDSTONE at
	SANDSTONE_SLAB hS
	SANDSTONE_STAIRS ei
	SANDSTONE_WALL lN
	SCAFFOLDING lQ
	SEAGRASS aU
	SEA_LANTERN gz
	SEA_PICKLE kU
	SHROOMLIGHT mw
	SHULKER_BOX iP
	SKELETON_SKULL fc
	SKELETON_WALL_SKULL fd
	SLIME_BLOCK gn
	SMITHING_TABLE lZ
	SMOKER lT
	SMOOTH_QUARTZ if
	SMOOTH_QUARTZ_SLAB ly
	SMOOTH_QUARTZ_STAIRS ll
	SMOOTH_RED_SANDSTONE ig
	SMOOTH_RED_SANDSTONE_SLAB ls
	SMOOTH_RED_SANDSTONE_STAIRS le
	SMOOTH_SANDSTONE ie
	SMOOTH_SANDSTONE_SLAB lx
	SMOOTH_SANDSTONE_STAIRS lk
	SMOOTH_STONE id
	SMOOTH_STONE_SLAB hR
	SNOW cC
	SNOW_BLOCK cE
	SOUL_CAMPFIRE mf
	SOUL_FIRE bO
	SOUL_LANTERN md
	SOUL_SAND cM
	SOUL_SOIL cN
	SOUL_TORCH cQ
	SOUL_WALL_TORCH cR
	SPAWNER bP
	SPONGE an
	SPRUCE_BUTTON eX
	SPRUCE_DOOR ir
	SPRUCE_FENCE im
	SPRUCE_FENCE_GATE ih
	SPRUCE_LEAVES ai
	SPRUCE_LOG K
	SPRUCE_PLANKS o
	SPRUCE_PRESSURE_PLATE ct
	SPRUCE_SAPLING u
	SPRUCE_SIGN ca
	SPRUCE_SLAB hL
	SPRUCE_STAIRS eo
	SPRUCE_TRAPDOOR dp
	SPRUCE_WALL_SIGN ck
	SPRUCE_WOOD W
	STICKY_PISTON aP
	STONE b
	STONECUTTER ma
	STONE_BRICKS du
	STONE_BRICK_SLAB hX
	STONE_BRICK_STAIRS dS
	STONE_BRICK_WALL lJ
	STONE_BUTTON cB
	STONE_PRESSURE_PLATE cq
	STONE_SLAB hQ
	STONE_STAIRS lj
	STRIPPED_ACACIA_LOG S
	STRIPPED_ACACIA_WOOD af
	STRIPPED_BIRCH_LOG Q
	STRIPPED_BIRCH_WOOD ad
	STRIPPED_CRIMSON_HYPHAE mt
	STRIPPED_CRIMSON_STEM mr
	STRIPPED_DARK_OAK_LOG T
	STRIPPED_DARK_OAK_WOOD ag
	STRIPPED_JUNGLE_LOG R
	STRIPPED_JUNGLE_WOOD ae
	STRIPPED_OAK_LOG U
	STRIPPED_OAK_WOOD ab
	STRIPPED_SPRUCE_LOG P
	STRIPPED_SPRUCE_WOOD ac
	STRIPPED_WARPED_HYPHAE mk
	STRIPPED_WARPED_STEM mi
	STRUCTURE_BLOCK mY
	STRUCTURE_VOID iN
	SUGAR_CANE cH
	SUNFLOWER gU
	SWEET_BERRY_BUSH mg
	TALL_GRASS gY
	TALL_SEAGRASS aV
	TARGET nb
	TERRACOTTA gR
	TNT bH
	TORCH bL
	TRAPPED_CHEST fr
	TRIPWIRE em
	TRIPWIRE_HOOK el
	TUBE_CORAL kv
	TUBE_CORAL_BLOCK kl
	TUBE_CORAL_FAN kF
	TUBE_CORAL_WALL_FAN kP
	TURTLE_EGG kf
	TWISTING_VINES mz
	TWISTING_VINES_PLANT mA
	VINE dP
	VOID_AIR la
	WALL_TORCH bM
	WARPED_BUTTON mR
	WARPED_DOOR mT
	WARPED_FENCE mJ
	WARPED_FENCE_GATE mN
	WARPED_FUNGUS mm
	WARPED_HYPHAE mj
	WARPED_NYLIUM ml
	WARPED_PLANKS mD
	WARPED_PRESSURE_PLATE mH
	WARPED_ROOTS mo
	WARPED_SIGN mV
	WARPED_SLAB mF
	WARPED_STAIRS mP
	WARPED_STEM mh
	WARPED_TRAPDOOR mL
	WARPED_WALL_SIGN mX
	WARPED_WART_BLOCK mn
	WATER A
	WEEPING_VINES mx
	WEEPING_VINES_PLANT my
	WET_SPONGE ao
	WHEAT bW
	WHITE_BANNER ha
	WHITE_BED ax
	WHITE_CARPET gB
	WHITE_CONCRETE jw
	WHITE_CONCRETE_POWDER jM
	WHITE_GLAZED_TERRACOTTA jg
	WHITE_SHULKER_BOX iQ
	WHITE_STAINED_GLASS cY
	WHITE_STAINED_GLASS_PANE fV
	WHITE_TERRACOTTA fF
	WHITE_TULIP bw
	WHITE_WALL_BANNER hq
	WHITE_WOOL aY
	WITHER_ROSE bA
	WITHER_SKELETON_SKULL fe
	WITHER_SKELETON_WALL_SKULL ff
	YELLOW_BANNER he
	YELLOW_BED aB
	YELLOW_CARPET gF
	YELLOW_CONCRETE jA
	YELLOW_CONCRETE_POWDER jQ
	YELLOW_GLAZED_TERRACOTTA jk
	YELLOW_SHULKER_BOX iU
	YELLOW_STAINED_GLASS dc
	YELLOW_STAINED_GLASS_PANE fZ
	YELLOW_TERRACOTTA fJ
	YELLOW_WALL_BANNER hu
	YELLOW_WOOL bc
	ZOMBIE_HEAD fg
	ZOMBIE_WALL_HEAD fh
	always (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Z a
	always (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/EntityType;)Ljava/lang/Boolean; b
	bed (Lnet/minecraft/world/item/DyeColor;)Lnet/minecraft/world/level/block/BedBlock; a
	leaves ()Lnet/minecraft/world/level/block/LeavesBlock; b
	litBlockEmission (I)Ljava/util/function/ToIntFunction; a
	log (Lnet/minecraft/world/level/material/MaterialColor;Lnet/minecraft/world/level/material/MaterialColor;)Lnet/minecraft/world/level/block/RotatedPillarBlock; a
	netherStem (Lnet/minecraft/world/level/material/MaterialColor;)Lnet/minecraft/world/level/block/Block; a
	never (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Z b
	never (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/EntityType;)Ljava/lang/Boolean; a
	ocelotOrParrot (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/EntityType;)Ljava/lang/Boolean; c
	pistonBase (Z)Lnet/minecraft/world/level/block/piston/PistonBaseBlock; a
	rebuildCache ()V a
	register (Ljava/lang/String;Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/world/level/block/Block; a
	shulkerBox (Lnet/minecraft/world/item/DyeColor;Lnet/minecraft/world/level/block/state/BlockBehaviour$Properties;)Lnet/minecraft/world/level/block/ShulkerBoxBlock; a
	stainedGlass (Lnet/minecraft/world/item/DyeColor;)Lnet/minecraft/world/level/block/StainedGlassBlock; b
net/minecraft/world/level/block/BonemealableBlock bvt
	isBonemealSuccess (Lnet/minecraft/world/level/Level;Ljava/util/Random;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Z a
	isValidBonemealTarget (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)Z a
	performBonemeal (Lnet/minecraft/server/level/ServerLevel;Ljava/util/Random;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V a
net/minecraft/world/level/block/BrewingStandBlock bvu
	HAS_BOTTLE a
	SHAPE b
	animateTick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)V a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getAnalogOutputSignal (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)I a
	getRenderShape (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/RenderShape; b
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; b
	hasAnalogOutputSignal (Lnet/minecraft/world/level/block/state/BlockState;)Z a
	isPathfindable (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/pathfinder/PathComputationType;)Z a
	newBlockEntity (Lnet/minecraft/world/level/BlockGetter;)Lnet/minecraft/world/level/block/entity/BlockEntity; a
	onRemove (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)V a
	setPlacedBy (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/item/ItemStack;)V a
	use (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;Lnet/minecraft/world/phys/BlockHitResult;)Lnet/minecraft/world/InteractionResult; a
net/minecraft/world/level/block/BubbleColumnBlock bvv
	DRAG_DOWN a
	animateTick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)V a
	canExistIn (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;)Z a
	canSurvive (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;)Z a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	entityInside (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/Entity;)V a
	getDrag (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Z a
	getFluidState (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/material/FluidState; d
	getRenderShape (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/RenderShape; b
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; b
	growColumn (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Z)V a
	onPlace (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)V b
	takeLiquid (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/material/Fluid; b
	tick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)V a
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
net/minecraft/world/level/block/BucketPickup bvw
	takeLiquid (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/material/Fluid; b
net/minecraft/world/level/block/BushBlock bvx
	canSurvive (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;)Z a
	isPathfindable (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/pathfinder/PathComputationType;)Z a
	mayPlaceOn (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Z c
	propagatesSkylightDown (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Z b
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
net/minecraft/world/level/block/ButtonBlock bvy
	CEILING_AABB_X b
	CEILING_AABB_Z c
	EAST_AABB i
	FLOOR_AABB_X d
	FLOOR_AABB_Z e
	NORTH_AABB f
	POWERED a
	PRESSED_CEILING_AABB_X j
	PRESSED_CEILING_AABB_Z k
	PRESSED_EAST_AABB t
	PRESSED_FLOOR_AABB_X o
	PRESSED_FLOOR_AABB_Z p
	PRESSED_NORTH_AABB q
	PRESSED_SOUTH_AABB r
	PRESSED_WEST_AABB s
	SOUTH_AABB g
	WEST_AABB h
	sensitive v
	checkPressed (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)V e
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	entityInside (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/Entity;)V a
	getDirectSignal (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;)I b
	getPressDuration ()I c
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; b
	getSignal (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;)I a
	getSound (Z)Lnet/minecraft/sounds/SoundEvent; a
	isSignalSource (Lnet/minecraft/world/level/block/state/BlockState;)Z b_
	onRemove (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)V a
	playSound (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Z)V a
	press (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)V d
	tick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)V a
	updateNeighbours (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)V f
	use (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;Lnet/minecraft/world/phys/BlockHitResult;)Lnet/minecraft/world/InteractionResult; a
net/minecraft/world/level/block/CactusBlock bvz
	AGE a
	COLLISION_SHAPE b
	OUTLINE_SHAPE c
	canSurvive (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;)Z a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	entityInside (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/Entity;)V a
	getCollisionShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; c
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; b
	isPathfindable (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/pathfinder/PathComputationType;)Z a
	randomTick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)V b
	tick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)V a
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
net/minecraft/world/level/block/CakeBlock bwa
	BITES a
	SHAPE_BY_BITE b
	canSurvive (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;)Z a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	eat (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/entity/player/Player;)Lnet/minecraft/world/InteractionResult; a
	getAnalogOutputSignal (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)I a
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; b
	hasAnalogOutputSignal (Lnet/minecraft/world/level/block/state/BlockState;)Z a
	isPathfindable (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/pathfinder/PathComputationType;)Z a
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
	use (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;Lnet/minecraft/world/phys/BlockHitResult;)Lnet/minecraft/world/InteractionResult; a
net/minecraft/world/level/block/CampfireBlock bwb
	FACING e
	LIT b
	SHAPE a
	SIGNAL_FIRE c
	VIRTUAL_FENCE_POST f
	WATERLOGGED d
	fireDamage h
	spawnParticles g
	animateTick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)V a
	canLight (Lnet/minecraft/world/level/block/state/BlockState;)Z h
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	dowse (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V c
	entityInside (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/Entity;)V a
	getFluidState (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/material/FluidState; d
	getRenderShape (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/RenderShape; b
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; b
	getStateForPlacement (Lnet/minecraft/world/item/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	isLitCampfire (Lnet/minecraft/world/level/block/state/BlockState;)Z g
	isPathfindable (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/pathfinder/PathComputationType;)Z a
	isSmokeSource (Lnet/minecraft/world/level/block/state/BlockState;)Z l
	isSmokeyPos (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)Z a
	makeParticles (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;ZZ)V a
	mirror (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Mirror;)Lnet/minecraft/world/level/block/state/BlockState; a
	newBlockEntity (Lnet/minecraft/world/level/BlockGetter;)Lnet/minecraft/world/level/block/entity/BlockEntity; a
	onProjectileHit (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/phys/BlockHitResult;Lnet/minecraft/world/entity/projectile/Projectile;)V a
	onRemove (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)V a
	placeLiquid (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/material/FluidState;)Z a
	rotate (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Rotation;)Lnet/minecraft/world/level/block/state/BlockState; a
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
	use (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;Lnet/minecraft/world/phys/BlockHitResult;)Lnet/minecraft/world/InteractionResult; a
net/minecraft/world/level/block/CarrotBlock bwc
	SHAPE_BY_AGE a
	getBaseSeedId ()Lnet/minecraft/world/level/ItemLike; e
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; b
net/minecraft/world/level/block/CartographyTableBlock bwd
	CONTAINER_TITLE a
	getMenuProvider (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/MenuProvider; b
	use (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;Lnet/minecraft/world/phys/BlockHitResult;)Lnet/minecraft/world/InteractionResult; a
net/minecraft/world/level/block/CarvedPumpkinBlock bwe
	FACING a
	PUMPKINS_PREDICATE f
	ironGolemBase d
	ironGolemFull e
	snowGolemBase b
	snowGolemFull c
	canSpawnGolem (Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;)Z a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getOrCreateIronGolemBase ()Lnet/minecraft/world/level/block/state/pattern/BlockPattern; e
	getOrCreateIronGolemFull ()Lnet/minecraft/world/level/block/state/pattern/BlockPattern; t
	getOrCreateSnowGolemBase ()Lnet/minecraft/world/level/block/state/pattern/BlockPattern; c
	getOrCreateSnowGolemFull ()Lnet/minecraft/world/level/block/state/pattern/BlockPattern; d
	getStateForPlacement (Lnet/minecraft/world/item/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	onPlace (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)V b
	trySpawnGolem (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)V a
net/minecraft/world/level/block/CauldronBlock bwf
	INSIDE c
	LEVEL a
	SHAPE b
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	entityInside (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/Entity;)V a
	getAnalogOutputSignal (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)I a
	getInteractionShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/phys/shapes/VoxelShape; a_
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; b
	handleRain (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)V c
	hasAnalogOutputSignal (Lnet/minecraft/world/level/block/state/BlockState;)Z a
	isPathfindable (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/pathfinder/PathComputationType;)Z a
	setWaterLevel (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;I)V a
	use (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;Lnet/minecraft/world/phys/BlockHitResult;)Lnet/minecraft/world/InteractionResult; a
net/minecraft/world/level/block/ChainBlock bwg
	SHAPE a
	WATERLOGGED b
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getFluidState (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/material/FluidState; d
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; b
	getStateForPlacement (Lnet/minecraft/world/item/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	isPathfindable (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/pathfinder/PathComputationType;)Z a
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
net/minecraft/world/level/block/ChestBlock bwh
	AABB i
	CHEST_COMBINER j
	EAST_AABB h
	FACING b
	MENU_PROVIDER_COMBINER k
	NORTH_AABB e
	SOUTH_AABB f
	TYPE c
	WATERLOGGED d
	WEST_AABB g
	blockEntityType ()Lnet/minecraft/world/level/block/entity/BlockEntityType; d
	candidatePartnerFacing (Lnet/minecraft/world/item/BlockPlaceContext;Lnet/minecraft/core/Direction;)Lnet/minecraft/core/Direction; a
	combine (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Z)Lnet/minecraft/world/level/block/DoubleBlockCombiner$NeighborCombineResult; a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getAnalogOutputSignal (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)I a
	getBlockType (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/DoubleBlockCombiner$BlockType; g
	getConnectedDirection (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/core/Direction; h
	getContainer (Lnet/minecraft/world/level/block/ChestBlock;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Z)Lnet/minecraft/world/Container; a
	getFluidState (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/material/FluidState; d
	getMenuProvider (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/MenuProvider; b
	getOpenChestStat ()Lnet/minecraft/stats/Stat; c
	getRenderShape (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/RenderShape; b
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; b
	getStateForPlacement (Lnet/minecraft/world/item/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	hasAnalogOutputSignal (Lnet/minecraft/world/level/block/state/BlockState;)Z a
	isBlockedChestByBlock (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Z a
	isCatSittingOnChest (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;)Z b
	isChestBlockedAt (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;)Z a
	isPathfindable (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/pathfinder/PathComputationType;)Z a
	mirror (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Mirror;)Lnet/minecraft/world/level/block/state/BlockState; a
	newBlockEntity (Lnet/minecraft/world/level/BlockGetter;)Lnet/minecraft/world/level/block/entity/BlockEntity; a
	onRemove (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)V a
	opennessCombiner (Lnet/minecraft/world/level/block/entity/LidBlockEntity;)Lnet/minecraft/world/level/block/DoubleBlockCombiner$Combiner; a
	rotate (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Rotation;)Lnet/minecraft/world/level/block/state/BlockState; a
	setPlacedBy (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/item/ItemStack;)V a
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
	use (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;Lnet/minecraft/world/phys/BlockHitResult;)Lnet/minecraft/world/InteractionResult; a
net/minecraft/world/level/block/ChorusFlowerBlock bwi
	AGE a
	plant b
	allNeighborsEmpty (Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;)Z b
	canSurvive (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;)Z a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	generatePlant (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Ljava/util/Random;I)V a
	growTreeRecursive (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Ljava/util/Random;Lnet/minecraft/core/BlockPos;II)V a
	isRandomlyTicking (Lnet/minecraft/world/level/block/state/BlockState;)Z a_
	onProjectileHit (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/phys/BlockHitResult;Lnet/minecraft/world/entity/projectile/Projectile;)V a
	placeDeadFlower (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)V a
	placeGrownFlower (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;I)V b
	randomTick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)V b
	tick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)V a
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
net/minecraft/world/level/block/ChorusPlantBlock bwj
	canSurvive (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;)Z a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getStateForPlacement (Lnet/minecraft/world/item/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	getStateForPlacement (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
	isPathfindable (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/pathfinder/PathComputationType;)Z a
	tick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)V a
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
net/minecraft/world/level/block/CocoaBlock bwk
	AGE a
	EAST_AABB b
	NORTH_AABB d
	SOUTH_AABB e
	WEST_AABB c
	canSurvive (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;)Z a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; b
	getStateForPlacement (Lnet/minecraft/world/item/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	isBonemealSuccess (Lnet/minecraft/world/level/Level;Ljava/util/Random;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Z a
	isPathfindable (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/pathfinder/PathComputationType;)Z a
	isRandomlyTicking (Lnet/minecraft/world/level/block/state/BlockState;)Z a_
	isValidBonemealTarget (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)Z a
	performBonemeal (Lnet/minecraft/server/level/ServerLevel;Ljava/util/Random;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V a
	randomTick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)V b
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
net/minecraft/world/level/block/CommandBlock bwl
	CONDITIONAL b
	FACING a
	LOGGER c
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	execute (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/BaseCommandBlock;Z)V a
	executeChain (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;)V a
	getAnalogOutputSignal (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)I a
	getRenderShape (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/RenderShape; b
	getStateForPlacement (Lnet/minecraft/world/item/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	hasAnalogOutputSignal (Lnet/minecraft/world/level/block/state/BlockState;)Z a
	mirror (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Mirror;)Lnet/minecraft/world/level/block/state/BlockState; a
	neighborChanged (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Block;Lnet/minecraft/core/BlockPos;Z)V a
	newBlockEntity (Lnet/minecraft/world/level/BlockGetter;)Lnet/minecraft/world/level/block/entity/BlockEntity; a
	rotate (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Rotation;)Lnet/minecraft/world/level/block/state/BlockState; a
	setPlacedBy (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/item/ItemStack;)V a
	tick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)V a
	use (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;Lnet/minecraft/world/phys/BlockHitResult;)Lnet/minecraft/world/InteractionResult; a
net/minecraft/world/level/block/ComparatorBlock bwm
	MODE a
	calculateOutputSignal (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)I e
	checkTickOnNeighbor (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V c
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getDelay (Lnet/minecraft/world/level/block/state/BlockState;)I g
	getInputSignal (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)I b
	getItemFrame (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/Direction;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/entity/decoration/ItemFrame; a
	getOutputSignal (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)I b
	newBlockEntity (Lnet/minecraft/world/level/BlockGetter;)Lnet/minecraft/world/level/block/entity/BlockEntity; a
	refreshOutputState (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V f
	shouldTurnOn (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Z a
	tick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)V a
	triggerEvent (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;II)Z a
	use (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;Lnet/minecraft/world/phys/BlockHitResult;)Lnet/minecraft/world/InteractionResult; a
net/minecraft/world/level/block/ComposterBlock bwn
	COMPOSTABLES b
	LEVEL a
	OUTER_SHAPE c
	SHAPES d
	add (FLnet/minecraft/world/level/ItemLike;)V a
	addItem (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/item/ItemStack;)Lnet/minecraft/world/level/block/state/BlockState; b
	bootStrap ()V c
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	empty (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; d
	extractProduce (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; d
	getAnalogOutputSignal (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)I a
	getCollisionShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; c
	getContainer (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/WorldlyContainer; a
	getInteractionShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/phys/shapes/VoxelShape; a_
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; b
	handleFill (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Z)V a
	hasAnalogOutputSignal (Lnet/minecraft/world/level/block/state/BlockState;)Z a
	insertItem (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
	isPathfindable (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/pathfinder/PathComputationType;)Z a
	onPlace (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)V b
	tick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)V a
	use (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;Lnet/minecraft/world/phys/BlockHitResult;)Lnet/minecraft/world/InteractionResult; a
net/minecraft/world/level/block/ComposterBlock$EmptyContainer bwn$a
	canPlaceItemThroughFace (ILnet/minecraft/world/item/ItemStack;Lnet/minecraft/core/Direction;)Z a
	canTakeItemThroughFace (ILnet/minecraft/world/item/ItemStack;Lnet/minecraft/core/Direction;)Z b
	getSlotsForFace (Lnet/minecraft/core/Direction;)[I a
net/minecraft/world/level/block/ComposterBlock$InputContainer bwn$b
	changed d
	level b
	pos c
	state a
	canPlaceItemThroughFace (ILnet/minecraft/world/item/ItemStack;Lnet/minecraft/core/Direction;)Z a
	canTakeItemThroughFace (ILnet/minecraft/world/item/ItemStack;Lnet/minecraft/core/Direction;)Z b
	getMaxStackSize ()I X_
	getSlotsForFace (Lnet/minecraft/core/Direction;)[I a
	setChanged ()V Z_
net/minecraft/world/level/block/ComposterBlock$OutputContainer bwn$c
	changed d
	level b
	pos c
	state a
	canPlaceItemThroughFace (ILnet/minecraft/world/item/ItemStack;Lnet/minecraft/core/Direction;)Z a
	canTakeItemThroughFace (ILnet/minecraft/world/item/ItemStack;Lnet/minecraft/core/Direction;)Z b
	getMaxStackSize ()I X_
	getSlotsForFace (Lnet/minecraft/core/Direction;)[I a
	setChanged ()V Z_
net/minecraft/world/level/block/ConcretePowderBlock bwo
	concrete a
	canSolidify (Lnet/minecraft/world/level/block/state/BlockState;)Z l
	getDustColor (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)I c
	getStateForPlacement (Lnet/minecraft/world/item/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	onLand (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/entity/item/FallingBlockEntity;)V a
	shouldSolidify (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Z b
	touchesLiquid (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Z a
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
net/minecraft/world/level/block/ConduitBlock bwp
	SHAPE b
	WATERLOGGED a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getFluidState (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/material/FluidState; d
	getRenderShape (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/RenderShape; b
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; b
	getStateForPlacement (Lnet/minecraft/world/item/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	isPathfindable (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/pathfinder/PathComputationType;)Z a
	newBlockEntity (Lnet/minecraft/world/level/BlockGetter;)Lnet/minecraft/world/level/block/entity/BlockEntity; a
	setPlacedBy (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/item/ItemStack;)V a
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
net/minecraft/world/level/block/CoralBlock bwq
	deadBlock a
	getStateForPlacement (Lnet/minecraft/world/item/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	scanForWater (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Z a
	tick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)V a
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
net/minecraft/world/level/block/CoralFanBlock bwr
	deadBlock a
	onPlace (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)V b
	tick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)V a
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
net/minecraft/world/level/block/CoralPlantBlock bws
	SHAPE a
	deadBlock c
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; b
	onPlace (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)V b
	tick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)V a
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
net/minecraft/world/level/block/CoralWallFanBlock bwt
	deadBlock c
	onPlace (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)V b
	tick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)V a
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
net/minecraft/world/level/block/CraftingTableBlock bwu
	CONTAINER_TITLE a
	getMenuProvider (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/MenuProvider; b
	use (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;Lnet/minecraft/world/phys/BlockHitResult;)Lnet/minecraft/world/InteractionResult; a
net/minecraft/world/level/block/CropBlock bwv
	AGE b
	SHAPE_BY_AGE a
	canSurvive (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;)Z a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	entityInside (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/Entity;)V a
	getAge (Lnet/minecraft/world/level/block/state/BlockState;)I g
	getAgeProperty ()Lnet/minecraft/world/level/block/state/properties/IntegerProperty; c
	getBaseSeedId ()Lnet/minecraft/world/level/ItemLike; e
	getBonemealAgeIncrease (Lnet/minecraft/world/level/Level;)I a
	getCloneItemStack (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/item/ItemStack; a
	getGrowthSpeed (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)F a
	getMaxAge ()I d
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; b
	getStateForAge (I)Lnet/minecraft/world/level/block/state/BlockState; b
	growCrops (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V a
	isBonemealSuccess (Lnet/minecraft/world/level/Level;Ljava/util/Random;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Z a
	isMaxAge (Lnet/minecraft/world/level/block/state/BlockState;)Z h
	isRandomlyTicking (Lnet/minecraft/world/level/block/state/BlockState;)Z a_
	isValidBonemealTarget (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)Z a
	mayPlaceOn (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Z c
	performBonemeal (Lnet/minecraft/server/level/ServerLevel;Ljava/util/Random;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V a
	randomTick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)V b
net/minecraft/world/level/block/CrossCollisionBlock bww
	EAST b
	NORTH a
	PROPERTY_BY_DIRECTION f
	SOUTH c
	WATERLOGGED e
	WEST d
	collisionShapeByIndex g
	shapeByIndex h
	stateToIndex i
	getAABBIndex (Lnet/minecraft/world/level/block/state/BlockState;)I g
	getCollisionShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; c
	getFluidState (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/material/FluidState; d
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; b
	indexFor (Lnet/minecraft/core/Direction;)I a
	isPathfindable (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/pathfinder/PathComputationType;)Z a
	makeShapes (FFFFF)[Lnet/minecraft/world/phys/shapes/VoxelShape; a
	mirror (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Mirror;)Lnet/minecraft/world/level/block/state/BlockState; a
	propagatesSkylightDown (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Z b
	rotate (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Rotation;)Lnet/minecraft/world/level/block/state/BlockState; a
net/minecraft/world/level/block/CryingObsidianBlock bwx
	animateTick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)V a
net/minecraft/world/level/block/DaylightDetectorBlock bwy
	INVERTED b
	POWER a
	SHAPE c
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getRenderShape (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/RenderShape; b
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; b
	getSignal (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;)I a
	isSignalSource (Lnet/minecraft/world/level/block/state/BlockState;)Z b_
	newBlockEntity (Lnet/minecraft/world/level/BlockGetter;)Lnet/minecraft/world/level/block/entity/BlockEntity; a
	updateSignalStrength (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)V d
	use (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;Lnet/minecraft/world/phys/BlockHitResult;)Lnet/minecraft/world/InteractionResult; a
	useShapeForLightOcclusion (Lnet/minecraft/world/level/block/state/BlockState;)Z c_
net/minecraft/world/level/block/DeadBushBlock bwz
	SHAPE a
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; b
	mayPlaceOn (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Z c
net/minecraft/world/level/block/DetectorRailBlock bxa
	POWERED d
	SHAPE c
	checkPressed (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	entityInside (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/Entity;)V a
	getAnalogOutputSignal (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)I a
	getDirectSignal (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;)I b
	getInteractingMinecartOfType (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Ljava/lang/Class;Ljava/util/function/Predicate;)Ljava/util/List; a
	getSearchBB (Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/phys/AABB; a
	getShapeProperty ()Lnet/minecraft/world/level/block/state/properties/Property; d
	getSignal (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;)I a
	hasAnalogOutputSignal (Lnet/minecraft/world/level/block/state/BlockState;)Z a
	isSignalSource (Lnet/minecraft/world/level/block/state/BlockState;)Z b_
	mirror (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Mirror;)Lnet/minecraft/world/level/block/state/BlockState; a
	onPlace (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)V b
	rotate (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Rotation;)Lnet/minecraft/world/level/block/state/BlockState; a
	tick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)V a
	updatePowerToConnected (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)V b
net/minecraft/world/level/block/DiodeBlock bxb
	POWERED c
	SHAPE b
	canSurvive (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;)Z a
	checkTickOnNeighbor (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V c
	getAlternateSignal (Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)I b
	getAlternateSignalAt (Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;)I b
	getDelay (Lnet/minecraft/world/level/block/state/BlockState;)I g
	getDirectSignal (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;)I b
	getInputSignal (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)I b
	getOutputSignal (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)I b
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; b
	getSignal (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;)I a
	getStateForPlacement (Lnet/minecraft/world/item/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	isAlternateInput (Lnet/minecraft/world/level/block/state/BlockState;)Z h
	isDiode (Lnet/minecraft/world/level/block/state/BlockState;)Z l
	isLocked (Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Z a
	isSignalSource (Lnet/minecraft/world/level/block/state/BlockState;)Z b_
	neighborChanged (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Block;Lnet/minecraft/core/BlockPos;Z)V a
	onPlace (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)V b
	onRemove (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)V a
	setPlacedBy (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/item/ItemStack;)V a
	shouldPrioritize (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Z c
	shouldTurnOn (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Z a
	tick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)V a
	updateNeighborsInFront (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V d
net/minecraft/world/level/block/DirectionalBlock bxc
	FACING a
net/minecraft/world/level/block/DispenserBlock bxd
	DISPENSER_REGISTRY c
	FACING a
	TRIGGERED b
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	dispenseFrom (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)V a
	getAnalogOutputSignal (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)I a
	getDispenseMethod (Lnet/minecraft/world/item/ItemStack;)Lnet/minecraft/core/dispenser/DispenseItemBehavior; a
	getDispensePosition (Lnet/minecraft/core/BlockSource;)Lnet/minecraft/core/Position; a
	getRenderShape (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/RenderShape; b
	getStateForPlacement (Lnet/minecraft/world/item/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	hasAnalogOutputSignal (Lnet/minecraft/world/level/block/state/BlockState;)Z a
	mirror (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Mirror;)Lnet/minecraft/world/level/block/state/BlockState; a
	neighborChanged (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Block;Lnet/minecraft/core/BlockPos;Z)V a
	newBlockEntity (Lnet/minecraft/world/level/BlockGetter;)Lnet/minecraft/world/level/block/entity/BlockEntity; a
	onRemove (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)V a
	registerBehavior (Lnet/minecraft/world/level/ItemLike;Lnet/minecraft/core/dispenser/DispenseItemBehavior;)V a
	rotate (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Rotation;)Lnet/minecraft/world/level/block/state/BlockState; a
	setPlacedBy (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/item/ItemStack;)V a
	tick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)V a
	use (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;Lnet/minecraft/world/phys/BlockHitResult;)Lnet/minecraft/world/InteractionResult; a
net/minecraft/world/level/block/DoorBlock bxe
	EAST_AABB i
	FACING a
	HALF e
	HINGE c
	NORTH_AABB g
	OPEN b
	POWERED d
	SOUTH_AABB f
	WEST_AABB h
	canSurvive (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;)Z a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getCloseSound ()I c
	getHinge (Lnet/minecraft/world/item/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/properties/DoorHingeSide; b
	getOpenSound ()I d
	getPistonPushReaction (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/material/PushReaction; f
	getSeed (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/BlockPos;)J a
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; b
	getStateForPlacement (Lnet/minecraft/world/item/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	isPathfindable (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/pathfinder/PathComputationType;)Z a
	isWoodenDoor (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)Z a
	isWoodenDoor (Lnet/minecraft/world/level/block/state/BlockState;)Z h
	mirror (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Mirror;)Lnet/minecraft/world/level/block/state/BlockState; a
	neighborChanged (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Block;Lnet/minecraft/core/BlockPos;Z)V a
	playSound (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Z)V b
	playerWillDestroy (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/entity/player/Player;)V a
	rotate (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Rotation;)Lnet/minecraft/world/level/block/state/BlockState; a
	setOpen (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Z)V a
	setPlacedBy (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/item/ItemStack;)V a
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
	use (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;Lnet/minecraft/world/phys/BlockHitResult;)Lnet/minecraft/world/InteractionResult; a
net/minecraft/world/level/block/DoubleBlockCombiner bxf
	combineWithNeigbour (Lnet/minecraft/world/level/block/entity/BlockEntityType;Ljava/util/function/Function;Ljava/util/function/Function;Lnet/minecraft/world/level/block/state/properties/DirectionProperty;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Ljava/util/function/BiPredicate;)Lnet/minecraft/world/level/block/DoubleBlockCombiner$NeighborCombineResult; a
net/minecraft/world/level/block/DoubleBlockCombiner$BlockType bxf$a
	$VALUES d
	FIRST b
	SECOND c
	SINGLE a
net/minecraft/world/level/block/DoubleBlockCombiner$Combiner bxf$b
	acceptDouble (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object; a
	acceptNone ()Ljava/lang/Object; b
	acceptSingle (Ljava/lang/Object;)Ljava/lang/Object; a
net/minecraft/world/level/block/DoubleBlockCombiner$NeighborCombineResult bxf$c
net/minecraft/world/level/block/DoubleBlockCombiner$NeighborCombineResult$Double bxf$c$a
	first a
	second b
net/minecraft/world/level/block/DoubleBlockCombiner$NeighborCombineResult$Single bxf$c$b
	single a
net/minecraft/world/level/block/DoublePlantBlock bxg
	HALF a
	canSurvive (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;)Z a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getOffsetType ()Lnet/minecraft/world/level/block/state/BlockBehaviour$OffsetType; aj_
	getSeed (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/BlockPos;)J a
	getStateForPlacement (Lnet/minecraft/world/item/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	placeAt (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;I)V a
	playerDestroy (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/entity/BlockEntity;Lnet/minecraft/world/item/ItemStack;)V a
	playerWillDestroy (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/entity/player/Player;)V a
	preventCreativeDropFromBottomPart (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/entity/player/Player;)V b
	setPlacedBy (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/item/ItemStack;)V a
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
net/minecraft/world/level/block/DragonEggBlock bxh
	SHAPE a
	attack (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/player/Player;)V a
	getDelayAfterPlace ()I c
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; b
	isPathfindable (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/pathfinder/PathComputationType;)Z a
	teleport (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)V d
	use (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;Lnet/minecraft/world/phys/BlockHitResult;)Lnet/minecraft/world/InteractionResult; a
net/minecraft/world/level/block/DropperBlock bxi
	DISPENSE_BEHAVIOUR c
	dispenseFrom (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)V a
	getDispenseMethod (Lnet/minecraft/world/item/ItemStack;)Lnet/minecraft/core/dispenser/DispenseItemBehavior; a
	newBlockEntity (Lnet/minecraft/world/level/BlockGetter;)Lnet/minecraft/world/level/block/entity/BlockEntity; a
net/minecraft/world/level/block/EnchantmentTableBlock bxj
	SHAPE a
	animateTick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)V a
	getMenuProvider (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/MenuProvider; b
	getRenderShape (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/RenderShape; b
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; b
	isPathfindable (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/pathfinder/PathComputationType;)Z a
	newBlockEntity (Lnet/minecraft/world/level/BlockGetter;)Lnet/minecraft/world/level/block/entity/BlockEntity; a
	setPlacedBy (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/item/ItemStack;)V a
	use (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;Lnet/minecraft/world/phys/BlockHitResult;)Lnet/minecraft/world/InteractionResult; a
	useShapeForLightOcclusion (Lnet/minecraft/world/level/block/state/BlockState;)Z c_
net/minecraft/world/level/block/EndGatewayBlock bxk
	animateTick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)V a
	canBeReplaced (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/material/Fluid;)Z a
	getCloneItemStack (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/item/ItemStack; a
	newBlockEntity (Lnet/minecraft/world/level/BlockGetter;)Lnet/minecraft/world/level/block/entity/BlockEntity; a
net/minecraft/world/level/block/EndPortalBlock bxl
	SHAPE a
	animateTick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)V a
	canBeReplaced (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/material/Fluid;)Z a
	entityInside (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/Entity;)V a
	getCloneItemStack (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/item/ItemStack; a
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; b
	newBlockEntity (Lnet/minecraft/world/level/BlockGetter;)Lnet/minecraft/world/level/block/entity/BlockEntity; a
net/minecraft/world/level/block/EndPortalFrameBlock bxm
	BASE_SHAPE c
	EYE_SHAPE d
	FACING a
	FULL_SHAPE e
	HAS_EYE b
	portalShape f
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getAnalogOutputSignal (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)I a
	getOrCreatePortalShape ()Lnet/minecraft/world/level/block/state/pattern/BlockPattern; c
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; b
	getStateForPlacement (Lnet/minecraft/world/item/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	hasAnalogOutputSignal (Lnet/minecraft/world/level/block/state/BlockState;)Z a
	isPathfindable (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/pathfinder/PathComputationType;)Z a
	mirror (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Mirror;)Lnet/minecraft/world/level/block/state/BlockState; a
	rotate (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Rotation;)Lnet/minecraft/world/level/block/state/BlockState; a
	useShapeForLightOcclusion (Lnet/minecraft/world/level/block/state/BlockState;)Z c_
net/minecraft/world/level/block/EndRodBlock bxn
	X_AXIS_AABB d
	Y_AXIS_AABB b
	Z_AXIS_AABB c
	animateTick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)V a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getPistonPushReaction (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/material/PushReaction; f
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; b
	getStateForPlacement (Lnet/minecraft/world/item/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	isPathfindable (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/pathfinder/PathComputationType;)Z a
	mirror (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Mirror;)Lnet/minecraft/world/level/block/state/BlockState; a
	rotate (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Rotation;)Lnet/minecraft/world/level/block/state/BlockState; a
net/minecraft/world/level/block/EnderChestBlock bxo
	CONTAINER_TITLE e
	FACING b
	SHAPE d
	WATERLOGGED c
	animateTick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)V a
	combine (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Z)Lnet/minecraft/world/level/block/DoubleBlockCombiner$NeighborCombineResult; a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getFluidState (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/material/FluidState; d
	getRenderShape (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/RenderShape; b
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; b
	getStateForPlacement (Lnet/minecraft/world/item/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	isPathfindable (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/pathfinder/PathComputationType;)Z a
	mirror (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Mirror;)Lnet/minecraft/world/level/block/state/BlockState; a
	newBlockEntity (Lnet/minecraft/world/level/BlockGetter;)Lnet/minecraft/world/level/block/entity/BlockEntity; a
	rotate (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Rotation;)Lnet/minecraft/world/level/block/state/BlockState; a
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
	use (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;Lnet/minecraft/world/phys/BlockHitResult;)Lnet/minecraft/world/InteractionResult; a
net/minecraft/world/level/block/EntityBlock bxp
	newBlockEntity (Lnet/minecraft/world/level/BlockGetter;)Lnet/minecraft/world/level/block/entity/BlockEntity; a
net/minecraft/world/level/block/FaceAttachedHorizontalDirectionalBlock bxq
	FACE u
	canAttach (Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;)Z b
	canSurvive (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;)Z a
	getConnectedDirection (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/core/Direction; h
	getStateForPlacement (Lnet/minecraft/world/item/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
net/minecraft/world/level/block/FallingBlock bxr
	animateTick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)V a
	falling (Lnet/minecraft/world/entity/item/FallingBlockEntity;)V a
	getDelayAfterPlace ()I c
	getDustColor (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)I c
	isFree (Lnet/minecraft/world/level/block/state/BlockState;)Z h
	onBroken (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/item/FallingBlockEntity;)V a
	onLand (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/entity/item/FallingBlockEntity;)V a
	onPlace (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)V b
	tick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)V a
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
net/minecraft/world/level/block/FarmBlock bxs
	MOISTURE a
	SHAPE b
	canSurvive (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;)Z a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	fallOn (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/Entity;F)V a
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; b
	getStateForPlacement (Lnet/minecraft/world/item/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	isNearWater (Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;)Z a
	isPathfindable (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/pathfinder/PathComputationType;)Z a
	isUnderCrops (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Z a
	randomTick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)V b
	tick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)V a
	turnToDirt (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)V d
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
	useShapeForLightOcclusion (Lnet/minecraft/world/level/block/state/BlockState;)Z c_
net/minecraft/world/level/block/FenceBlock bxt
	occlusionByIndex i
	connectsTo (Lnet/minecraft/world/level/block/state/BlockState;ZLnet/minecraft/core/Direction;)Z a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getOcclusionShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/phys/shapes/VoxelShape; d
	getStateForPlacement (Lnet/minecraft/world/item/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	getVisualShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	isPathfindable (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/pathfinder/PathComputationType;)Z a
	isSameFence (Lnet/minecraft/world/level/block/Block;)Z c
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
	use (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;Lnet/minecraft/world/phys/BlockHitResult;)Lnet/minecraft/world/InteractionResult; a
net/minecraft/world/level/block/FenceGateBlock bxu
	IN_WALL c
	OPEN a
	POWERED b
	X_COLLISION_SHAPE i
	X_OCCLUSION_SHAPE k
	X_OCCLUSION_SHAPE_LOW p
	X_SHAPE e
	X_SHAPE_LOW g
	Z_COLLISION_SHAPE h
	Z_OCCLUSION_SHAPE j
	Z_OCCLUSION_SHAPE_LOW o
	Z_SHAPE d
	Z_SHAPE_LOW f
	connectsToDirection (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;)Z a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getCollisionShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; c
	getOcclusionShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/phys/shapes/VoxelShape; d
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; b
	getStateForPlacement (Lnet/minecraft/world/item/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	isPathfindable (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/pathfinder/PathComputationType;)Z a
	isWall (Lnet/minecraft/world/level/block/state/BlockState;)Z h
	neighborChanged (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Block;Lnet/minecraft/core/BlockPos;Z)V a
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
	use (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;Lnet/minecraft/world/phys/BlockHitResult;)Lnet/minecraft/world/InteractionResult; a
net/minecraft/world/level/block/FireBlock bxv
	AGE g
	EAST i
	NORTH h
	PROPERTY_BY_DIRECTION p
	SOUTH j
	UP o
	WEST k
	burnOdds r
	flameOdds q
	bootStrap ()V c
	canBurn (Lnet/minecraft/world/level/block/state/BlockState;)Z e
	canSurvive (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;)Z a
	checkBurnOut (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;ILjava/util/Random;I)V a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getBurnOdd (Lnet/minecraft/world/level/block/state/BlockState;)I h
	getFireOdds (Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;)I a
	getFireTickDelay (Ljava/util/Random;)I a
	getFlameOdds (Lnet/minecraft/world/level/block/state/BlockState;)I l
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; b
	getStateForPlacement (Lnet/minecraft/world/item/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	getStateForPlacement (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; b
	getStateWithAge (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;I)Lnet/minecraft/world/level/block/state/BlockState; a
	isNearRain (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)Z a
	isValidFireLocation (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Z e
	onPlace (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)V b
	setFlammable (Lnet/minecraft/world/level/block/Block;II)V a
	tick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)V a
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
net/minecraft/world/level/block/FletchingTableBlock bxw
	use (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;Lnet/minecraft/world/phys/BlockHitResult;)Lnet/minecraft/world/InteractionResult; a
net/minecraft/world/level/block/FlowerBlock bxx
	SHAPE a
	effectDuration c
	suspiciousStewEffect b
	getEffectDuration ()I d
	getOffsetType ()Lnet/minecraft/world/level/block/state/BlockBehaviour$OffsetType; aj_
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; b
	getSuspiciousStewEffect ()Lnet/minecraft/world/effect/MobEffect; c
net/minecraft/world/level/block/FlowerPotBlock bxy
	POTTED_BY_CONTENT b
	SHAPE a
	content c
	getCloneItemStack (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/item/ItemStack; a
	getContent ()Lnet/minecraft/world/level/block/Block; c
	getRenderShape (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/RenderShape; b
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; b
	isPathfindable (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/pathfinder/PathComputationType;)Z a
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
	use (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;Lnet/minecraft/world/phys/BlockHitResult;)Lnet/minecraft/world/InteractionResult; a
net/minecraft/world/level/block/FrostedIceBlock bxz
	AGE a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	fewerNeigboursThan (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;I)Z a
	getCloneItemStack (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/item/ItemStack; a
	neighborChanged (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Block;Lnet/minecraft/core/BlockPos;Z)V a
	randomTick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)V b
	slightlyMelt (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)Z e
	tick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)V a
net/minecraft/world/level/block/FungusBlock bya
	SHAPE a
	feature b
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; b
	isBonemealSuccess (Lnet/minecraft/world/level/Level;Ljava/util/Random;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Z a
	isValidBonemealTarget (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)Z a
	mayPlaceOn (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Z c
	performBonemeal (Lnet/minecraft/server/level/ServerLevel;Ljava/util/Random;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V a
net/minecraft/world/level/block/FurnaceBlock byb
	animateTick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)V a
	newBlockEntity (Lnet/minecraft/world/level/BlockGetter;)Lnet/minecraft/world/level/block/entity/BlockEntity; a
	openContainer (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/player/Player;)V a
net/minecraft/world/level/block/GlassBlock byc
net/minecraft/world/level/block/GlazedTerracottaBlock byd
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getPistonPushReaction (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/material/PushReaction; f
	getStateForPlacement (Lnet/minecraft/world/item/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
net/minecraft/world/level/block/GrassBlock bye
	isBonemealSuccess (Lnet/minecraft/world/level/Level;Ljava/util/Random;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Z a
	isValidBonemealTarget (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)Z a
	performBonemeal (Lnet/minecraft/server/level/ServerLevel;Ljava/util/Random;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V a
net/minecraft/world/level/block/GrassPathBlock byf
	SHAPE a
	canSurvive (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;)Z a
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; b
	getStateForPlacement (Lnet/minecraft/world/item/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	isPathfindable (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/pathfinder/PathComputationType;)Z a
	tick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)V a
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
	useShapeForLightOcclusion (Lnet/minecraft/world/level/block/state/BlockState;)Z c_
net/minecraft/world/level/block/GravelBlock byg
	getDustColor (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)I c
net/minecraft/world/level/block/GrindstoneBlock byh
	CEILING_EAST_WEST_ALL_LEGS ao
	CEILING_EAST_WEST_GRINDSTONE ap
	CEILING_EAST_WEST_LEFT_LEG am
	CEILING_EAST_WEST_LEFT_PIVOT ak
	CEILING_EAST_WEST_LEFT_POST ai
	CEILING_EAST_WEST_RIGHT_LEG an
	CEILING_EAST_WEST_RIGHT_PIVOT al
	CEILING_EAST_WEST_RIGHT_POST aj
	CEILING_NORTH_SOUTH_ALL_LEGS ag
	CEILING_NORTH_SOUTH_GRINDSTONE ah
	CEILING_NORTH_SOUTH_LEFT_LEG ae
	CEILING_NORTH_SOUTH_LEFT_PIVOT ac
	CEILING_NORTH_SOUTH_LEFT_POST aa
	CEILING_NORTH_SOUTH_RIGHT_LEG af
	CEILING_NORTH_SOUTH_RIGHT_PIVOT ad
	CEILING_NORTH_SOUTH_RIGHT_POST ab
	CONTAINER_TITLE aD
	FLOOR_EAST_WEST_ALL_LEGS r
	FLOOR_EAST_WEST_GRINDSTONE s
	FLOOR_EAST_WEST_LEFT_LEG p
	FLOOR_EAST_WEST_LEFT_PIVOT k
	FLOOR_EAST_WEST_LEFT_POST i
	FLOOR_EAST_WEST_RIGHT_LEG q
	FLOOR_EAST_WEST_RIGHT_PIVOT o
	FLOOR_EAST_WEST_RIGHT_POST j
	FLOOR_NORTH_SOUTH_ALL_LEGS g
	FLOOR_NORTH_SOUTH_GRINDSTONE h
	FLOOR_NORTH_SOUTH_LEFT_LEG e
	FLOOR_NORTH_SOUTH_LEFT_PIVOT c
	FLOOR_NORTH_SOUTH_LEFT_POST a
	FLOOR_NORTH_SOUTH_RIGHT_LEG f
	FLOOR_NORTH_SOUTH_RIGHT_PIVOT d
	FLOOR_NORTH_SOUTH_RIGHT_POST b
	WALL_EAST_ALL_LEGS Y
	WALL_EAST_GRINDSTONE Z
	WALL_EAST_LEFT_LEG W
	WALL_EAST_LEFT_PIVOT U
	WALL_EAST_LEFT_POST S
	WALL_EAST_RIGHT_LEG X
	WALL_EAST_RIGHT_PIVOT V
	WALL_EAST_RIGHT_POST T
	WALL_NORTH_ALL_LEGS I
	WALL_NORTH_GRINDSTONE J
	WALL_NORTH_LEFT_LEG G
	WALL_NORTH_LEFT_PIVOT E
	WALL_NORTH_LEFT_POST C
	WALL_NORTH_RIGHT_LEG H
	WALL_NORTH_RIGHT_PIVOT F
	WALL_NORTH_RIGHT_POST D
	WALL_SOUTH_ALL_LEGS A
	WALL_SOUTH_GRINDSTONE B
	WALL_SOUTH_LEFT_LEG y
	WALL_SOUTH_LEFT_PIVOT w
	WALL_SOUTH_LEFT_POST t
	WALL_SOUTH_RIGHT_LEG z
	WALL_SOUTH_RIGHT_PIVOT x
	WALL_SOUTH_RIGHT_POST v
	WALL_WEST_ALL_LEGS Q
	WALL_WEST_GRINDSTONE R
	WALL_WEST_LEFT_LEG O
	WALL_WEST_LEFT_PIVOT M
	WALL_WEST_LEFT_POST K
	WALL_WEST_RIGHT_LEG P
	WALL_WEST_RIGHT_PIVOT N
	WALL_WEST_RIGHT_POST L
	canSurvive (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;)Z a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getCollisionShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; c
	getMenuProvider (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/MenuProvider; b
	getRenderShape (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/RenderShape; b
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; b
	getVoxelShape (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/phys/shapes/VoxelShape; l
	isPathfindable (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/pathfinder/PathComputationType;)Z a
	mirror (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Mirror;)Lnet/minecraft/world/level/block/state/BlockState; a
	rotate (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Rotation;)Lnet/minecraft/world/level/block/state/BlockState; a
	use (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;Lnet/minecraft/world/phys/BlockHitResult;)Lnet/minecraft/world/InteractionResult; a
net/minecraft/world/level/block/GrowingPlantBlock byi
	growthDirection a
	scheduleFluidTicks b
	shape c
	canAttachToBlock (Lnet/minecraft/world/level/block/Block;)Z c
	canSurvive (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;)Z a
	getBodyBlock ()Lnet/minecraft/world/level/block/Block; d
	getHeadBlock ()Lnet/minecraft/world/level/block/GrowingPlantHeadBlock; c
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; b
net/minecraft/world/level/block/GrowingPlantBodyBlock byj
	canBeReplaced (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/item/BlockPlaceContext;)Z a
	getBodyBlock ()Lnet/minecraft/world/level/block/Block; d
	getCloneItemStack (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/item/ItemStack; a
	getHeadPos (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Ljava/util/Optional; b
	isBonemealSuccess (Lnet/minecraft/world/level/Level;Ljava/util/Random;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Z a
	isValidBonemealTarget (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)Z a
	performBonemeal (Lnet/minecraft/server/level/ServerLevel;Ljava/util/Random;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V a
	tick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)V a
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
net/minecraft/world/level/block/GrowingPlantHeadBlock byk
	AGE d
	growPerTickProbability e
	canGrowInto (Lnet/minecraft/world/level/block/state/BlockState;)Z h
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getBlocksToGrowWhenBonemealed (Ljava/util/Random;)I a
	getHeadBlock ()Lnet/minecraft/world/level/block/GrowingPlantHeadBlock; c
	getStateForPlacement (Lnet/minecraft/world/level/LevelAccessor;)Lnet/minecraft/world/level/block/state/BlockState; a
	isBonemealSuccess (Lnet/minecraft/world/level/Level;Ljava/util/Random;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Z a
	isRandomlyTicking (Lnet/minecraft/world/level/block/state/BlockState;)Z a_
	isValidBonemealTarget (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)Z a
	performBonemeal (Lnet/minecraft/server/level/ServerLevel;Ljava/util/Random;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V a
	randomTick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)V b
	tick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)V a
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
net/minecraft/world/level/block/HalfTransparentBlock byl
	skipRendering (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;)Z a
net/minecraft/world/level/block/HayBlock bym
	fallOn (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/Entity;F)V a
net/minecraft/world/level/block/HoneyBlock byn
	SHAPE a
	doSlideMovement (Lnet/minecraft/world/entity/Entity;)V d
	doesEntityDoHoneyBlockSlideEffects (Lnet/minecraft/world/entity/Entity;)Z c
	entityInside (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/Entity;)V a
	fallOn (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/Entity;F)V a
	getCollisionShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; c
	isSlidingDown (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/Entity;)Z a
	maybeDoSlideAchievement (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/core/BlockPos;)V a
	maybeDoSlideEffects (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/Entity;)V a
	showJumpParticles (Lnet/minecraft/world/entity/Entity;)V b
	showParticles (Lnet/minecraft/world/entity/Entity;I)V a
	showSlideParticles (Lnet/minecraft/world/entity/Entity;)V a
net/minecraft/world/level/block/HopperBlock byo
	BASE f
	CONVEX_BASE e
	DOWN_INTERACTION_SHAPE o
	DOWN_SHAPE g
	EAST_INTERACTION_SHAPE p
	EAST_SHAPE h
	ENABLED b
	FACING a
	FUNNEL d
	NORTH_INTERACTION_SHAPE q
	NORTH_SHAPE i
	SOUTH_INTERACTION_SHAPE r
	SOUTH_SHAPE j
	TOP c
	WEST_INTERACTION_SHAPE s
	WEST_SHAPE k
	checkPoweredState (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	entityInside (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/Entity;)V a
	getAnalogOutputSignal (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)I a
	getInteractionShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/phys/shapes/VoxelShape; a_
	getRenderShape (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/RenderShape; b
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; b
	getStateForPlacement (Lnet/minecraft/world/item/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	hasAnalogOutputSignal (Lnet/minecraft/world/level/block/state/BlockState;)Z a
	isPathfindable (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/pathfinder/PathComputationType;)Z a
	mirror (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Mirror;)Lnet/minecraft/world/level/block/state/BlockState; a
	neighborChanged (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Block;Lnet/minecraft/core/BlockPos;Z)V a
	newBlockEntity (Lnet/minecraft/world/level/BlockGetter;)Lnet/minecraft/world/level/block/entity/BlockEntity; a
	onPlace (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)V b
	onRemove (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)V a
	rotate (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Rotation;)Lnet/minecraft/world/level/block/state/BlockState; a
	setPlacedBy (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/item/ItemStack;)V a
	use (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;Lnet/minecraft/world/phys/BlockHitResult;)Lnet/minecraft/world/InteractionResult; a
net/minecraft/world/level/block/HorizontalDirectionalBlock byp
	FACING aq
	mirror (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Mirror;)Lnet/minecraft/world/level/block/state/BlockState; a
	rotate (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Rotation;)Lnet/minecraft/world/level/block/state/BlockState; a
net/minecraft/world/level/block/HugeMushroomBlock byq
	DOWN f
	EAST b
	NORTH a
	PROPERTY_BY_DIRECTION g
	SOUTH c
	UP e
	WEST d
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getStateForPlacement (Lnet/minecraft/world/item/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	mirror (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Mirror;)Lnet/minecraft/world/level/block/state/BlockState; a
	rotate (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Rotation;)Lnet/minecraft/world/level/block/state/BlockState; a
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
net/minecraft/world/level/block/IceBlock byr
	getPistonPushReaction (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/material/PushReaction; f
	melt (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)V d
	playerDestroy (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/entity/BlockEntity;Lnet/minecraft/world/item/ItemStack;)V a
	randomTick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)V b
net/minecraft/world/level/block/InfestedBlock bys
	BLOCK_BY_HOST_BLOCK b
	hostBlock a
	getHostBlock ()Lnet/minecraft/world/level/block/Block; c
	isCompatibleHostBlock (Lnet/minecraft/world/level/block/state/BlockState;)Z h
	spawnAfterBreak (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/item/ItemStack;)V a
	spawnInfestation (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)V a
	stateByHostBlock (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/world/level/block/state/BlockState; c
	wasExploded (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/Explosion;)V a
net/minecraft/world/level/block/IronBarsBlock byt
	attachsTo (Lnet/minecraft/world/level/block/state/BlockState;Z)Z a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getStateForPlacement (Lnet/minecraft/world/item/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	getVisualShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	skipRendering (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;)Z a
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
net/minecraft/world/level/block/JigsawBlock byu
	ORIENTATION a
	canAttach (Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplate$StructureBlockInfo;Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplate$StructureBlockInfo;)Z a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getFrontFacing (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/core/Direction; h
	getStateForPlacement (Lnet/minecraft/world/item/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	getTopFacing (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/core/Direction; l
	mirror (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Mirror;)Lnet/minecraft/world/level/block/state/BlockState; a
	newBlockEntity (Lnet/minecraft/world/level/BlockGetter;)Lnet/minecraft/world/level/block/entity/BlockEntity; a
	rotate (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Rotation;)Lnet/minecraft/world/level/block/state/BlockState; a
	use (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;Lnet/minecraft/world/phys/BlockHitResult;)Lnet/minecraft/world/InteractionResult; a
net/minecraft/world/level/block/JukeboxBlock byv
	HAS_RECORD a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	dropRecording (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)V a
	getAnalogOutputSignal (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)I a
	getRenderShape (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/RenderShape; b
	hasAnalogOutputSignal (Lnet/minecraft/world/level/block/state/BlockState;)Z a
	newBlockEntity (Lnet/minecraft/world/level/BlockGetter;)Lnet/minecraft/world/level/block/entity/BlockEntity; a
	onRemove (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)V a
	setPlacedBy (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/item/ItemStack;)V a
	setRecord (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/item/ItemStack;)V a
	use (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;Lnet/minecraft/world/phys/BlockHitResult;)Lnet/minecraft/world/InteractionResult; a
net/minecraft/world/level/block/KelpBlock byw
	SHAPE e
	canAttachToBlock (Lnet/minecraft/world/level/block/Block;)Z c
	canGrowInto (Lnet/minecraft/world/level/block/state/BlockState;)Z h
	canPlaceLiquid (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/material/Fluid;)Z a
	getBlocksToGrowWhenBonemealed (Ljava/util/Random;)I a
	getBodyBlock ()Lnet/minecraft/world/level/block/Block; d
	getFluidState (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/material/FluidState; d
	getStateForPlacement (Lnet/minecraft/world/item/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	placeLiquid (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/material/FluidState;)Z a
net/minecraft/world/level/block/KelpPlantBlock byx
	canPlaceLiquid (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/material/Fluid;)Z a
	getFluidState (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/material/FluidState; d
	getHeadBlock ()Lnet/minecraft/world/level/block/GrowingPlantHeadBlock; c
	placeLiquid (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/material/FluidState;)Z a
net/minecraft/world/level/block/LadderBlock byy
	EAST_AABB c
	FACING a
	NORTH_AABB f
	SOUTH_AABB e
	WATERLOGGED b
	WEST_AABB d
	canAttachTo (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;)Z a
	canSurvive (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;)Z a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getFluidState (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/material/FluidState; d
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; b
	getStateForPlacement (Lnet/minecraft/world/item/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	mirror (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Mirror;)Lnet/minecraft/world/level/block/state/BlockState; a
	rotate (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Rotation;)Lnet/minecraft/world/level/block/state/BlockState; a
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
net/minecraft/world/level/block/Lantern byz
	AABB b
	HANGING a
	HANGING_AABB c
	canSurvive (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;)Z a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getConnectedDirection (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/core/Direction; h
	getPistonPushReaction (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/material/PushReaction; f
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; b
	getStateForPlacement (Lnet/minecraft/world/item/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	isPathfindable (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/pathfinder/PathComputationType;)Z a
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
net/minecraft/world/level/block/LeavesBlock bza
	DISTANCE a
	PERSISTENT b
	animateTick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)V a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getBlockSupportShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/phys/shapes/VoxelShape; e
	getDistanceAt (Lnet/minecraft/world/level/block/state/BlockState;)I h
	getLightBlock (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)I f
	getStateForPlacement (Lnet/minecraft/world/item/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	isRandomlyTicking (Lnet/minecraft/world/level/block/state/BlockState;)Z a_
	randomTick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)V b
	tick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)V a
	updateDistance (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
net/minecraft/world/level/block/LecternBlock bzb
	FACING a
	HAS_BOOK c
	POWERED b
	SHAPE_BASE d
	SHAPE_COLLISION h
	SHAPE_COMMON f
	SHAPE_EAST k
	SHAPE_NORTH j
	SHAPE_POST e
	SHAPE_SOUTH o
	SHAPE_TOP_PLATE g
	SHAPE_WEST i
	changePowered (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)V b
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getAnalogOutputSignal (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)I a
	getCollisionShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; c
	getDirectSignal (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;)I b
	getMenuProvider (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/MenuProvider; b
	getOcclusionShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/phys/shapes/VoxelShape; d
	getRenderShape (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/RenderShape; b
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; b
	getSignal (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;)I a
	getStateForPlacement (Lnet/minecraft/world/item/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	hasAnalogOutputSignal (Lnet/minecraft/world/level/block/state/BlockState;)Z a
	isPathfindable (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/pathfinder/PathComputationType;)Z a
	isSignalSource (Lnet/minecraft/world/level/block/state/BlockState;)Z b_
	mirror (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Mirror;)Lnet/minecraft/world/level/block/state/BlockState; a
	newBlockEntity (Lnet/minecraft/world/level/BlockGetter;)Lnet/minecraft/world/level/block/entity/BlockEntity; a
	onRemove (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)V a
	openScreen (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/player/Player;)V a
	placeBook (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/item/ItemStack;)V b
	popBook (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)V d
	resetBookState (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)V a
	rotate (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Rotation;)Lnet/minecraft/world/level/block/state/BlockState; a
	signalPageChange (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V a
	tick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)V a
	tryPlaceBook (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/item/ItemStack;)Z a
	updateBelow (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V b
	use (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;Lnet/minecraft/world/phys/BlockHitResult;)Lnet/minecraft/world/InteractionResult; a
	useShapeForLightOcclusion (Lnet/minecraft/world/level/block/state/BlockState;)Z c_
net/minecraft/world/level/block/LevelEvent bzc
net/minecraft/world/level/block/LeverBlock bzd
	DOWN_AABB_X i
	DOWN_AABB_Z h
	EAST_AABB e
	NORTH_AABB b
	POWERED a
	SOUTH_AABB c
	UP_AABB_X g
	UP_AABB_Z f
	WEST_AABB d
	animateTick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)V a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getDirectSignal (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;)I b
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; b
	getSignal (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;)I a
	isSignalSource (Lnet/minecraft/world/level/block/state/BlockState;)Z b_
	makeParticle (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;F)V a
	onRemove (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)V a
	pull (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; d
	updateNeighbours (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)V e
	use (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;Lnet/minecraft/world/phys/BlockHitResult;)Lnet/minecraft/world/InteractionResult; a
net/minecraft/world/level/block/LiquidBlock bze
	LEVEL a
	STABLE_SHAPE c
	fluid b
	stateCache d
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	entityInside (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/Entity;)V a
	fizz (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;)V a
	getCollisionShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; c
	getDrops (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/storage/loot/LootContext$Builder;)Ljava/util/List; a
	getFluidState (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/material/FluidState; d
	getRenderShape (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/RenderShape; b
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; b
	isPathfindable (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/pathfinder/PathComputationType;)Z a
	isRandomlyTicking (Lnet/minecraft/world/level/block/state/BlockState;)Z a_
	neighborChanged (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Block;Lnet/minecraft/core/BlockPos;Z)V a
	onPlace (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)V b
	propagatesSkylightDown (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Z b
	randomTick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)V b
	shouldSpreadLiquid (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Z a
	skipRendering (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;)Z a
	takeLiquid (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/material/Fluid; b
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
net/minecraft/world/level/block/LiquidBlockContainer bzf
	canPlaceLiquid (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/material/Fluid;)Z a
	placeLiquid (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/material/FluidState;)Z a
net/minecraft/world/level/block/LoomBlock bzg
	CONTAINER_TITLE a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getMenuProvider (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/MenuProvider; b
	getStateForPlacement (Lnet/minecraft/world/item/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	use (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;Lnet/minecraft/world/phys/BlockHitResult;)Lnet/minecraft/world/InteractionResult; a
net/minecraft/world/level/block/MagmaBlock bzh
	onPlace (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)V b
	randomTick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)V b
	stepOn (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/Entity;)V a
	tick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)V a
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
net/minecraft/world/level/block/MelonBlock bzi
	getAttachedStem ()Lnet/minecraft/world/level/block/AttachedStemBlock; d
	getStem ()Lnet/minecraft/world/level/block/StemBlock; c
net/minecraft/world/level/block/Mirror bzj
	$VALUES e
	FRONT_BACK c
	LEFT_RIGHT b
	NONE a
	rotation d
	getRotation (Lnet/minecraft/core/Direction;)Lnet/minecraft/world/level/block/Rotation; a
	mirror (II)I a
	mirror (Lnet/minecraft/core/Direction;)Lnet/minecraft/core/Direction; b
	rotation ()Lcom/mojang/math/OctahedralGroup; a
net/minecraft/world/level/block/MushroomBlock bzk
	SHAPE a
	canSurvive (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;)Z a
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; b
	growMushroom (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Ljava/util/Random;)Z a
	isBonemealSuccess (Lnet/minecraft/world/level/Level;Ljava/util/Random;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Z a
	isValidBonemealTarget (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)Z a
	mayPlaceOn (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Z c
	performBonemeal (Lnet/minecraft/server/level/ServerLevel;Ljava/util/Random;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V a
	randomTick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)V b
net/minecraft/world/level/block/MyceliumBlock bzl
	animateTick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)V a
net/minecraft/world/level/block/NetherPortalBlock bzm
	AXIS a
	X_AXIS_AABB b
	Z_AXIS_AABB c
	animateTick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)V a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	entityInside (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/Entity;)V a
	getCloneItemStack (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/item/ItemStack; a
	getPortalShape (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/pattern/BlockPattern$BlockPatternMatch; c
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; b
	isPortal (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/NetherPortalBlock$PortalShape; b
	randomTick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)V b
	rotate (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Rotation;)Lnet/minecraft/world/level/block/state/BlockState; a
	trySpawnPortal (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;)Z a
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
net/minecraft/world/level/block/NetherPortalBlock$PortalShape bzm$a
	axis b
	bottomLeft f
	height g
	leftDir d
	level a
	numPortalBlocks e
	rightDir c
	width h
	calculatePortalHeight ()I c
	createPortalBlocks ()V e
	getDistanceUntilEdge (Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;)I a
	getHeight ()I a
	getWidth ()I b
	hasAllPortalBlocks ()Z g
	isComplete ()Z f
	isEmpty (Lnet/minecraft/world/level/block/state/BlockState;)Z a
	isValid ()Z d
net/minecraft/world/level/block/NetherSproutsBlock bzn
	SHAPE a
	getOffsetType ()Lnet/minecraft/world/level/block/state/BlockBehaviour$OffsetType; aj_
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; b
	mayPlaceOn (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Z c
net/minecraft/world/level/block/NetherVines bzo
	getBlocksToGrowWhenBonemealed (Ljava/util/Random;)I a
	isValidGrowthState (Lnet/minecraft/world/level/block/state/BlockState;)Z a
net/minecraft/world/level/block/NetherWartBlock bzp
	AGE a
	SHAPE_BY_AGE b
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getCloneItemStack (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/item/ItemStack; a
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; b
	isRandomlyTicking (Lnet/minecraft/world/level/block/state/BlockState;)Z a_
	mayPlaceOn (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Z c
	randomTick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)V b
net/minecraft/world/level/block/NetherrackBlock bzq
	isBonemealSuccess (Lnet/minecraft/world/level/Level;Ljava/util/Random;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Z a
	isValidBonemealTarget (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)Z a
	performBonemeal (Lnet/minecraft/server/level/ServerLevel;Ljava/util/Random;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V a
net/minecraft/world/level/block/NoteBlock bzr
	INSTRUMENT a
	NOTE c
	POWERED b
	attack (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/player/Player;)V a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getStateForPlacement (Lnet/minecraft/world/item/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	neighborChanged (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Block;Lnet/minecraft/core/BlockPos;Z)V a
	playNote (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)V a
	triggerEvent (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;II)Z a
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
	use (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;Lnet/minecraft/world/phys/BlockHitResult;)Lnet/minecraft/world/InteractionResult; a
net/minecraft/world/level/block/NyliumBlock bzs
	canBeNylium (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;)Z b
	isBonemealSuccess (Lnet/minecraft/world/level/Level;Ljava/util/Random;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Z a
	isValidBonemealTarget (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)Z a
	performBonemeal (Lnet/minecraft/server/level/ServerLevel;Ljava/util/Random;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V a
	randomTick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)V b
net/minecraft/world/level/block/ObserverBlock bzt
	POWERED b
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getDirectSignal (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;)I b
	getSignal (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;)I a
	getStateForPlacement (Lnet/minecraft/world/item/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	isSignalSource (Lnet/minecraft/world/level/block/state/BlockState;)Z b_
	mirror (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Mirror;)Lnet/minecraft/world/level/block/state/BlockState; a
	onPlace (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)V b
	onRemove (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)V a
	rotate (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Rotation;)Lnet/minecraft/world/level/block/state/BlockState; a
	startSignal (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;)V a
	tick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)V a
	updateNeighborsInFront (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V a
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
net/minecraft/world/level/block/OreBlock bzu
	spawnAfterBreak (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/item/ItemStack;)V a
	xpOnDrop (Ljava/util/Random;)I a
net/minecraft/world/level/block/PipeBlock bzv
	DIRECTIONS i
	DOWN f
	EAST b
	NORTH a
	PROPERTY_BY_DIRECTION g
	SOUTH c
	UP e
	WEST d
	shapeByIndex h
	getAABBIndex (Lnet/minecraft/world/level/block/state/BlockState;)I h
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; b
	makeShapes (F)[Lnet/minecraft/world/phys/shapes/VoxelShape; a
	propagatesSkylightDown (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Z b
net/minecraft/world/level/block/PlayerHeadBlock bzw
	setPlacedBy (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/item/ItemStack;)V a
net/minecraft/world/level/block/PlayerWallHeadBlock bzx
	getDrops (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/storage/loot/LootContext$Builder;)Ljava/util/List; a
	setPlacedBy (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/item/ItemStack;)V a
net/minecraft/world/level/block/PotatoBlock bzy
	SHAPE_BY_AGE a
	getBaseSeedId ()Lnet/minecraft/world/level/ItemLike; e
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; b
net/minecraft/world/level/block/PoweredBlock bzz
	getSignal (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;)I a
	isSignalSource (Lnet/minecraft/world/level/block/state/BlockState;)Z b_
net/minecraft/world/level/block/PoweredRailBlock caa
	POWERED d
	SHAPE c
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	findPoweredRailSignal (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;ZI)Z a
	getShapeProperty ()Lnet/minecraft/world/level/block/state/properties/Property; d
	isSameRailWithPower (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;ZILnet/minecraft/world/level/block/state/properties/RailShape;)Z a
	mirror (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Mirror;)Lnet/minecraft/world/level/block/state/BlockState; a
	rotate (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Rotation;)Lnet/minecraft/world/level/block/state/BlockState; a
	updateState (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Block;)V a
net/minecraft/world/level/block/PressurePlateBlock cab
	POWERED d
	sensitivity e
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getSignalForState (Lnet/minecraft/world/level/block/state/BlockState;)I g
	getSignalStrength (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)I b
	playOffSound (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;)V b
	playOnSound (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;)V a
	setSignalForState (Lnet/minecraft/world/level/block/state/BlockState;I)Lnet/minecraft/world/level/block/state/BlockState; a
net/minecraft/world/level/block/PressurePlateBlock$Sensitivity cab$a
	$VALUES c
	EVERYTHING a
	MOBS b
net/minecraft/world/level/block/PumpkinBlock cac
	getAttachedStem ()Lnet/minecraft/world/level/block/AttachedStemBlock; d
	getStem ()Lnet/minecraft/world/level/block/StemBlock; c
	use (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;Lnet/minecraft/world/phys/BlockHitResult;)Lnet/minecraft/world/InteractionResult; a
net/minecraft/world/level/block/RailBlock cad
	SHAPE c
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getShapeProperty ()Lnet/minecraft/world/level/block/state/properties/Property; d
	mirror (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Mirror;)Lnet/minecraft/world/level/block/state/BlockState; a
	rotate (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Rotation;)Lnet/minecraft/world/level/block/state/BlockState; a
	updateState (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Block;)V a
net/minecraft/world/level/block/RailState cae
	block c
	connections f
	isStraight e
	level a
	pos b
	state d
	canConnectTo (Lnet/minecraft/world/level/block/RailState;)Z b
	connectTo (Lnet/minecraft/world/level/block/RailState;)V c
	connectsTo (Lnet/minecraft/world/level/block/RailState;)Z a
	countPotentialConnections ()I b
	getConnections ()Ljava/util/List; a
	getRail (Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/RailState; b
	getState ()Lnet/minecraft/world/level/block/state/BlockState; c
	hasConnection (Lnet/minecraft/core/BlockPos;)Z c
	hasNeighborRail (Lnet/minecraft/core/BlockPos;)Z d
	hasRail (Lnet/minecraft/core/BlockPos;)Z a
	place (ZZLnet/minecraft/world/level/block/state/properties/RailShape;)Lnet/minecraft/world/level/block/RailState; a
	removeSoftConnections ()V d
	updateConnections (Lnet/minecraft/world/level/block/state/properties/RailShape;)V a
net/minecraft/world/level/block/RedStoneOreBlock caf
	LIT a
	animateTick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)V a
	attack (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/player/Player;)V a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	interact (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)V d
	isRandomlyTicking (Lnet/minecraft/world/level/block/state/BlockState;)Z a_
	randomTick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)V b
	spawnAfterBreak (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/item/ItemStack;)V a
	spawnParticles (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)V a
	stepOn (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/Entity;)V a
	use (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;Lnet/minecraft/world/phys/BlockHitResult;)Lnet/minecraft/world/InteractionResult; a
net/minecraft/world/level/block/RedStoneWireBlock cag
	COLORS k
	EAST b
	NORTH a
	POWER e
	PROPERTY_BY_DIRECTION f
	SHAPES_CACHE j
	SHAPES_FLOOR h
	SHAPES_UP i
	SHAPE_DOT g
	SOUTH c
	WEST d
	crossState o
	shouldSignal p
	animateTick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)V a
	calculateShape (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/phys/shapes/VoxelShape; l
	calculateTargetStrength (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)I a
	canSurvive (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;)Z a
	canSurviveOn (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Z b
	checkCornerChangeAt (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)V b
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getColorForPower (I)I b
	getConnectingSide (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;)Lnet/minecraft/world/level/block/state/properties/RedstoneSide; a
	getConnectingSide (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;Z)Lnet/minecraft/world/level/block/state/properties/RedstoneSide; a
	getConnectionState (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
	getDirectSignal (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;)I b
	getMissingConnections (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; b
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; b
	getSignal (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;)I a
	getStateForPlacement (Lnet/minecraft/world/item/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	getWireSignal (Lnet/minecraft/world/level/block/state/BlockState;)I o
	isCross (Lnet/minecraft/world/level/block/state/BlockState;)Z m
	isDot (Lnet/minecraft/world/level/block/state/BlockState;)Z n
	isSignalSource (Lnet/minecraft/world/level/block/state/BlockState;)Z b_
	mirror (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Mirror;)Lnet/minecraft/world/level/block/state/BlockState; a
	neighborChanged (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Block;Lnet/minecraft/core/BlockPos;Z)V a
	onPlace (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)V b
	onRemove (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)V a
	rotate (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Rotation;)Lnet/minecraft/world/level/block/state/BlockState; a
	shouldConnectTo (Lnet/minecraft/world/level/block/state/BlockState;)Z h
	shouldConnectTo (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;)Z a
	spawnParticlesAlongLine (Lnet/minecraft/world/level/Level;Ljava/util/Random;Lnet/minecraft/core/BlockPos;Lcom/mojang/math/Vector3f;Lnet/minecraft/core/Direction;Lnet/minecraft/core/Direction;FF)V a
	updateIndirectNeighbourShapes (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;II)V a
	updateNeighborsOfNeighboringWires (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)V d
	updatePowerStrength (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V a
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
	updatesOnShapeChange (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/state/BlockState;)V a
	use (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;Lnet/minecraft/world/phys/BlockHitResult;)Lnet/minecraft/world/InteractionResult; a
net/minecraft/world/level/block/RedstoneLampBlock cah
	LIT a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getStateForPlacement (Lnet/minecraft/world/item/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	neighborChanged (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Block;Lnet/minecraft/core/BlockPos;Z)V a
	tick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)V a
net/minecraft/world/level/block/RedstoneTorchBlock cai
	LIT a
	RECENT_TOGGLES b
	animateTick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)V a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getDirectSignal (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;)I b
	getSignal (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;)I a
	hasNeighborSignal (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Z a
	isSignalSource (Lnet/minecraft/world/level/block/state/BlockState;)Z b_
	isToggledTooFrequently (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Z)Z a
	neighborChanged (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Block;Lnet/minecraft/core/BlockPos;Z)V a
	onPlace (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)V b
	onRemove (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)V a
	tick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)V a
net/minecraft/world/level/block/RedstoneTorchBlock$Toggle cai$a
	pos a
	when b
net/minecraft/world/level/block/RedstoneWallTorchBlock caj
	FACING b
	LIT c
	animateTick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)V a
	canSurvive (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;)Z a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getDescriptionId ()Ljava/lang/String; i
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; b
	getSignal (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;)I a
	getStateForPlacement (Lnet/minecraft/world/item/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	hasNeighborSignal (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Z a
	mirror (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Mirror;)Lnet/minecraft/world/level/block/state/BlockState; a
	rotate (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Rotation;)Lnet/minecraft/world/level/block/state/BlockState; a
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
net/minecraft/world/level/block/RenderShape cak
	$VALUES d
	ENTITYBLOCK_ANIMATED b
	INVISIBLE a
	MODEL c
net/minecraft/world/level/block/RepeaterBlock cal
	DELAY d
	LOCKED a
	animateTick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)V a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getDelay (Lnet/minecraft/world/level/block/state/BlockState;)I g
	getStateForPlacement (Lnet/minecraft/world/item/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	isAlternateInput (Lnet/minecraft/world/level/block/state/BlockState;)Z h
	isLocked (Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Z a
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
	use (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;Lnet/minecraft/world/phys/BlockHitResult;)Lnet/minecraft/world/InteractionResult; a
net/minecraft/world/level/block/RespawnAnchorBlock cam
	CHARGE a
	animateTick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)V a
	canBeCharged (Lnet/minecraft/world/level/block/state/BlockState;)Z h
	canSetSpawn (Lnet/minecraft/world/level/Level;)Z a
	charge (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	explode (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)V d
	findStandUpPosition (Lnet/minecraft/world/entity/EntityType;Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;)Ljava/util/Optional; a
	getAnalogOutputSignal (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)I a
	getScaledChargeLevel (Lnet/minecraft/world/level/block/state/BlockState;I)I a
	hasAnalogOutputSignal (Lnet/minecraft/world/level/block/state/BlockState;)Z a
	isPathfindable (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/pathfinder/PathComputationType;)Z a
	isRespawnFuel (Lnet/minecraft/world/item/ItemStack;)Z a
	isWaterThatWouldFlow (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/Level;)Z a
	use (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;Lnet/minecraft/world/phys/BlockHitResult;)Lnet/minecraft/world/InteractionResult; a
net/minecraft/world/level/block/RootsBlock can
	SHAPE a
	getOffsetType ()Lnet/minecraft/world/level/block/state/BlockBehaviour$OffsetType; aj_
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; b
	mayPlaceOn (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Z c
net/minecraft/world/level/block/RotatedPillarBlock cao
	AXIS a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getStateForPlacement (Lnet/minecraft/world/item/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	rotate (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Rotation;)Lnet/minecraft/world/level/block/state/BlockState; a
net/minecraft/world/level/block/Rotation cap
	$VALUES f
	CLOCKWISE_180 c
	CLOCKWISE_90 b
	COUNTERCLOCKWISE_90 d
	NONE a
	rotation e
	getRandom (Ljava/util/Random;)Lnet/minecraft/world/level/block/Rotation; a
	getRotated (Lnet/minecraft/world/level/block/Rotation;)Lnet/minecraft/world/level/block/Rotation; a
	getShuffled (Ljava/util/Random;)Ljava/util/List; b
	rotate (II)I a
	rotate (Lnet/minecraft/core/Direction;)Lnet/minecraft/core/Direction; a
	rotation ()Lcom/mojang/math/OctahedralGroup; a
net/minecraft/world/level/block/SandBlock caq
	dustColor a
	getDustColor (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)I c
net/minecraft/world/level/block/SaplingBlock car
	SHAPE b
	STAGE a
	treeGrower c
	advanceTree (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Ljava/util/Random;)V a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; b
	isBonemealSuccess (Lnet/minecraft/world/level/Level;Ljava/util/Random;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Z a
	isValidBonemealTarget (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)Z a
	performBonemeal (Lnet/minecraft/server/level/ServerLevel;Ljava/util/Random;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V a
	randomTick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)V b
net/minecraft/world/level/block/ScaffoldingBlock cas
	BELOW_BLOCK g
	BOTTOM c
	DISTANCE a
	STABLE_SHAPE d
	UNSTABLE_SHAPE e
	UNSTABLE_SHAPE_BOTTOM f
	WATERLOGGED b
	canBeReplaced (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/item/BlockPlaceContext;)Z a
	canSurvive (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;)Z a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getCollisionShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; c
	getDistance (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)I a
	getFluidState (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/material/FluidState; d
	getInteractionShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/phys/shapes/VoxelShape; a_
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; b
	getStateForPlacement (Lnet/minecraft/world/item/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	isBottom (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;I)Z a
	onPlace (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)V b
	tick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)V a
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
net/minecraft/world/level/block/SeaPickleBlock cat
	FOUR_AABB f
	ONE_AABB c
	PICKLES a
	THREE_AABB e
	TWO_AABB d
	WATERLOGGED b
	canBeReplaced (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/item/BlockPlaceContext;)Z a
	canSurvive (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;)Z a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getFluidState (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/material/FluidState; d
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; b
	getStateForPlacement (Lnet/minecraft/world/item/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	isBonemealSuccess (Lnet/minecraft/world/level/Level;Ljava/util/Random;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Z a
	isDead (Lnet/minecraft/world/level/block/state/BlockState;)Z h
	isPathfindable (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/pathfinder/PathComputationType;)Z a
	isValidBonemealTarget (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)Z a
	mayPlaceOn (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Z c
	performBonemeal (Lnet/minecraft/server/level/ServerLevel;Ljava/util/Random;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V a
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
net/minecraft/world/level/block/Seagrass cau
	SHAPE a
	canPlaceLiquid (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/material/Fluid;)Z a
	getFluidState (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/material/FluidState; d
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; b
	getStateForPlacement (Lnet/minecraft/world/item/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	isBonemealSuccess (Lnet/minecraft/world/level/Level;Ljava/util/Random;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Z a
	isValidBonemealTarget (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)Z a
	mayPlaceOn (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Z c
	performBonemeal (Lnet/minecraft/server/level/ServerLevel;Ljava/util/Random;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V a
	placeLiquid (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/material/FluidState;)Z a
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
net/minecraft/world/level/block/ShulkerBoxBlock cav
	CONTENTS b
	FACING a
	color c
	appendHoverText (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/BlockGetter;Ljava/util/List;Lnet/minecraft/world/item/TooltipFlag;)V a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getAnalogOutputSignal (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)I a
	getBlockByColor (Lnet/minecraft/world/item/DyeColor;)Lnet/minecraft/world/level/block/Block; a
	getCloneItemStack (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/item/ItemStack; a
	getColor ()Lnet/minecraft/world/item/DyeColor; c
	getColorFromBlock (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/world/item/DyeColor; c
	getColorFromItem (Lnet/minecraft/world/item/Item;)Lnet/minecraft/world/item/DyeColor; b
	getColoredItemStack (Lnet/minecraft/world/item/DyeColor;)Lnet/minecraft/world/item/ItemStack; b
	getDrops (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/storage/loot/LootContext$Builder;)Ljava/util/List; a
	getPistonPushReaction (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/material/PushReaction; f
	getRenderShape (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/RenderShape; b
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; b
	getStateForPlacement (Lnet/minecraft/world/item/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	hasAnalogOutputSignal (Lnet/minecraft/world/level/block/state/BlockState;)Z a
	mirror (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Mirror;)Lnet/minecraft/world/level/block/state/BlockState; a
	newBlockEntity (Lnet/minecraft/world/level/BlockGetter;)Lnet/minecraft/world/level/block/entity/BlockEntity; a
	onRemove (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)V a
	playerWillDestroy (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/entity/player/Player;)V a
	rotate (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Rotation;)Lnet/minecraft/world/level/block/state/BlockState; a
	setPlacedBy (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/item/ItemStack;)V a
	use (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;Lnet/minecraft/world/phys/BlockHitResult;)Lnet/minecraft/world/InteractionResult; a
net/minecraft/world/level/block/SignBlock caw
	SHAPE b
	WATERLOGGED a
	type c
	getFluidState (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/material/FluidState; d
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; b
	isPossibleToRespawnInThis ()Z ak_
	newBlockEntity (Lnet/minecraft/world/level/BlockGetter;)Lnet/minecraft/world/level/block/entity/BlockEntity; a
	type ()Lnet/minecraft/world/level/block/state/properties/WoodType; c
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
	use (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;Lnet/minecraft/world/phys/BlockHitResult;)Lnet/minecraft/world/InteractionResult; a
net/minecraft/world/level/block/SimpleWaterloggedBlock cax
	canPlaceLiquid (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/material/Fluid;)Z a
	placeLiquid (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/material/FluidState;)Z a
	takeLiquid (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/material/Fluid; b
net/minecraft/world/level/block/SkullBlock cay
	ROTATION a
	SHAPE b
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getOcclusionShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/phys/shapes/VoxelShape; d
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; b
	getStateForPlacement (Lnet/minecraft/world/item/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	mirror (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Mirror;)Lnet/minecraft/world/level/block/state/BlockState; a
	rotate (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Rotation;)Lnet/minecraft/world/level/block/state/BlockState; a
net/minecraft/world/level/block/SkullBlock$Type cay$a
net/minecraft/world/level/block/SkullBlock$Types cay$b
	$VALUES g
	CREEPER e
	DRAGON f
	PLAYER c
	SKELETON a
	WITHER_SKELETON b
	ZOMBIE d
net/minecraft/world/level/block/SlabBlock caz
	BOTTOM_AABB c
	TOP_AABB d
	TYPE a
	WATERLOGGED b
	canBeReplaced (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/item/BlockPlaceContext;)Z a
	canPlaceLiquid (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/material/Fluid;)Z a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getFluidState (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/material/FluidState; d
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; b
	getStateForPlacement (Lnet/minecraft/world/item/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	isPathfindable (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/pathfinder/PathComputationType;)Z a
	placeLiquid (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/material/FluidState;)Z a
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
	useShapeForLightOcclusion (Lnet/minecraft/world/level/block/state/BlockState;)Z c_
net/minecraft/world/level/block/SlimeBlock cba
	bounceUp (Lnet/minecraft/world/entity/Entity;)V a
	fallOn (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/Entity;F)V a
	stepOn (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/Entity;)V a
	updateEntityAfterFallOn (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/world/entity/Entity;)V a
net/minecraft/world/level/block/SmithingTableBlock cbb
	CONTAINER_TITLE a
	getMenuProvider (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/MenuProvider; b
	use (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;Lnet/minecraft/world/phys/BlockHitResult;)Lnet/minecraft/world/InteractionResult; a
net/minecraft/world/level/block/SmokerBlock cbc
	animateTick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)V a
	newBlockEntity (Lnet/minecraft/world/level/BlockGetter;)Lnet/minecraft/world/level/block/entity/BlockEntity; a
	openContainer (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/player/Player;)V a
net/minecraft/world/level/block/SnowLayerBlock cbd
	LAYERS a
	SHAPE_BY_LAYER b
	canBeReplaced (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/item/BlockPlaceContext;)Z a
	canSurvive (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;)Z a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getBlockSupportShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/phys/shapes/VoxelShape; e
	getCollisionShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; c
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; b
	getStateForPlacement (Lnet/minecraft/world/item/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	getVisualShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	isPathfindable (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/pathfinder/PathComputationType;)Z a
	randomTick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)V b
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
	useShapeForLightOcclusion (Lnet/minecraft/world/level/block/state/BlockState;)Z c_
net/minecraft/world/level/block/SnowyDirtBlock cbe
	SNOWY a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getStateForPlacement (Lnet/minecraft/world/item/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
net/minecraft/world/level/block/SoulFireBlock cbf
	canBurn (Lnet/minecraft/world/level/block/state/BlockState;)Z e
	canSurvive (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;)Z a
	canSurviveOnBlock (Lnet/minecraft/world/level/block/Block;)Z c
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
net/minecraft/world/level/block/SoulSandBlock cbg
	SHAPE a
	getBlockSupportShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/phys/shapes/VoxelShape; e
	getCollisionShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; c
	getVisualShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	isPathfindable (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/pathfinder/PathComputationType;)Z a
	onPlace (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)V b
	tick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)V a
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
net/minecraft/world/level/block/SoundType cbh
	ANCIENT_DEBRIS Q
	ANVIL l
	BAMBOO q
	BAMBOO_SAPLING r
	BASALT I
	BONE_BLOCK O
	CHAIN S
	CORAL_BLOCK p
	CROP u
	FUNGUS B
	GILDED_BLACKSTONE U
	GLASS g
	GRASS c
	GRAVEL b
	HARD_CROP v
	HONEY_BLOCK n
	LADDER k
	LANTERN y
	LILY_PAD d
	LODESTONE R
	METAL f
	NETHERITE_BLOCK P
	NETHERRACK K
	NETHER_BRICKS L
	NETHER_GOLD_ORE T
	NETHER_ORE N
	NETHER_SPROUTS M
	NETHER_WART x
	NYLIUM A
	ROOTS C
	SAND i
	SCAFFOLDING s
	SHROOMLIGHT D
	SLIME_BLOCK m
	SNOW j
	SOUL_SAND G
	SOUL_SOIL H
	STEM z
	STONE e
	SWEET_BERRY_BUSH t
	TWISTING_VINES F
	VINE w
	WART_BLOCK J
	WEEPING_VINES E
	WET_GRASS o
	WOOD a
	WOOL h
	breakSound X
	fallSound ab
	hitSound aa
	pitch W
	placeSound Z
	stepSound Y
	volume V
	getBreakSound ()Lnet/minecraft/sounds/SoundEvent; c
	getFallSound ()Lnet/minecraft/sounds/SoundEvent; g
	getHitSound ()Lnet/minecraft/sounds/SoundEvent; f
	getPitch ()F b
	getPlaceSound ()Lnet/minecraft/sounds/SoundEvent; e
	getStepSound ()Lnet/minecraft/sounds/SoundEvent; d
	getVolume ()F a
net/minecraft/world/level/block/SpawnerBlock cbi
	getCloneItemStack (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/item/ItemStack; a
	getRenderShape (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/RenderShape; b
	newBlockEntity (Lnet/minecraft/world/level/BlockGetter;)Lnet/minecraft/world/level/block/entity/BlockEntity; a
	spawnAfterBreak (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/item/ItemStack;)V a
net/minecraft/world/level/block/SpongeBlock cbj
	neighborChanged (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Block;Lnet/minecraft/core/BlockPos;Z)V a
	onPlace (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)V b
	removeWaterBreadthFirstSearch (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)Z b
	tryAbsorbWater (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)V a
net/minecraft/world/level/block/SpreadingSnowyDirtBlock cbk
	canBeGrass (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;)Z b
	canPropagate (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;)Z c
	randomTick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)V b
net/minecraft/world/level/block/StainedGlassBlock cbl
	color a
	getColor ()Lnet/minecraft/world/item/DyeColor; a
net/minecraft/world/level/block/StainedGlassPaneBlock cbm
	color i
	getColor ()Lnet/minecraft/world/item/DyeColor; a
net/minecraft/world/level/block/StairBlock cbn
	BOTTOM_AABB f
	BOTTOM_SHAPES s
	FACING a
	HALF b
	OCTET_NNN g
	OCTET_NNP h
	OCTET_NPN i
	OCTET_NPP j
	OCTET_PNN k
	OCTET_PNP o
	OCTET_PPN p
	OCTET_PPP q
	SHAPE c
	SHAPE_BY_STATE t
	TOP_AABB e
	TOP_SHAPES r
	WATERLOGGED d
	base u
	baseState v
	animateTick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)V a
	attack (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/player/Player;)V a
	canTakeShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;)Z e
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	destroy (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V a
	getExplosionResistance ()F f
	getFluidState (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/material/FluidState; d
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; b
	getShapeIndex (Lnet/minecraft/world/level/block/state/BlockState;)I l
	getStairsShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/properties/StairsShape; g
	getStateForPlacement (Lnet/minecraft/world/item/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	isPathfindable (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/pathfinder/PathComputationType;)Z a
	isRandomlyTicking (Lnet/minecraft/world/level/block/state/BlockState;)Z a_
	isStairs (Lnet/minecraft/world/level/block/state/BlockState;)Z h
	makeShapes (Lnet/minecraft/world/phys/shapes/VoxelShape;Lnet/minecraft/world/phys/shapes/VoxelShape;Lnet/minecraft/world/phys/shapes/VoxelShape;Lnet/minecraft/world/phys/shapes/VoxelShape;Lnet/minecraft/world/phys/shapes/VoxelShape;)[Lnet/minecraft/world/phys/shapes/VoxelShape; a
	makeStairShape (ILnet/minecraft/world/phys/shapes/VoxelShape;Lnet/minecraft/world/phys/shapes/VoxelShape;Lnet/minecraft/world/phys/shapes/VoxelShape;Lnet/minecraft/world/phys/shapes/VoxelShape;Lnet/minecraft/world/phys/shapes/VoxelShape;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	mirror (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Mirror;)Lnet/minecraft/world/level/block/state/BlockState; a
	onPlace (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)V b
	onRemove (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)V a
	prepareRender (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)V d
	randomTick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)V b
	rotate (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Rotation;)Lnet/minecraft/world/level/block/state/BlockState; a
	stepOn (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/Entity;)V a
	tick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)V a
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
	use (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;Lnet/minecraft/world/phys/BlockHitResult;)Lnet/minecraft/world/InteractionResult; a
	useShapeForLightOcclusion (Lnet/minecraft/world/level/block/state/BlockState;)Z c_
	wasExploded (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/Explosion;)V a
net/minecraft/world/level/block/StandingSignBlock cbo
	ROTATION c
	canSurvive (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;)Z a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getStateForPlacement (Lnet/minecraft/world/item/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	mirror (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Mirror;)Lnet/minecraft/world/level/block/state/BlockState; a
	rotate (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Rotation;)Lnet/minecraft/world/level/block/state/BlockState; a
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
net/minecraft/world/level/block/StemBlock cbp
	AGE a
	SHAPE_BY_AGE b
	fruit c
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getCloneItemStack (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/item/ItemStack; a
	getFruit ()Lnet/minecraft/world/level/block/StemGrownBlock; d
	getSeedItem ()Lnet/minecraft/world/item/Item; c
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; b
	isBonemealSuccess (Lnet/minecraft/world/level/Level;Ljava/util/Random;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Z a
	isValidBonemealTarget (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)Z a
	mayPlaceOn (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Z c
	performBonemeal (Lnet/minecraft/server/level/ServerLevel;Ljava/util/Random;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V a
	randomTick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)V b
net/minecraft/world/level/block/StemGrownBlock cbq
	getAttachedStem ()Lnet/minecraft/world/level/block/AttachedStemBlock; d
	getStem ()Lnet/minecraft/world/level/block/StemBlock; c
net/minecraft/world/level/block/StoneButtonBlock cbr
	getSound (Z)Lnet/minecraft/sounds/SoundEvent; a
net/minecraft/world/level/block/StonecutterBlock cbs
	CONTAINER_TITLE c
	FACING a
	SHAPE b
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getMenuProvider (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/MenuProvider; b
	getRenderShape (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/RenderShape; b
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; b
	getStateForPlacement (Lnet/minecraft/world/item/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	isPathfindable (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/pathfinder/PathComputationType;)Z a
	mirror (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Mirror;)Lnet/minecraft/world/level/block/state/BlockState; a
	rotate (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Rotation;)Lnet/minecraft/world/level/block/state/BlockState; a
	use (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;Lnet/minecraft/world/phys/BlockHitResult;)Lnet/minecraft/world/InteractionResult; a
	useShapeForLightOcclusion (Lnet/minecraft/world/level/block/state/BlockState;)Z c_
net/minecraft/world/level/block/StructureBlock cbt
	MODE a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getRenderShape (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/RenderShape; b
	getStateForPlacement (Lnet/minecraft/world/item/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	neighborChanged (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Block;Lnet/minecraft/core/BlockPos;Z)V a
	newBlockEntity (Lnet/minecraft/world/level/BlockGetter;)Lnet/minecraft/world/level/block/entity/BlockEntity; a
	setPlacedBy (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/item/ItemStack;)V a
	trigger (Lnet/minecraft/world/level/block/entity/StructureBlockEntity;)V a
	use (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;Lnet/minecraft/world/phys/BlockHitResult;)Lnet/minecraft/world/InteractionResult; a
net/minecraft/world/level/block/StructureVoidBlock cbu
	SHAPE a
	getPistonPushReaction (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/material/PushReaction; f
	getRenderShape (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/RenderShape; b
	getShadeBrightness (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)F a
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; b
net/minecraft/world/level/block/SugarCaneBlock cbv
	AGE a
	SHAPE b
	canSurvive (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;)Z a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; b
	randomTick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)V b
	tick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)V a
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
net/minecraft/world/level/block/SweetBerryBushBlock cbw
	AGE a
	MID_GROWTH_SHAPE c
	SAPLING_SHAPE b
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	entityInside (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/Entity;)V a
	getCloneItemStack (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/item/ItemStack; a
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; b
	isBonemealSuccess (Lnet/minecraft/world/level/Level;Ljava/util/Random;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Z a
	isRandomlyTicking (Lnet/minecraft/world/level/block/state/BlockState;)Z a_
	isValidBonemealTarget (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)Z a
	performBonemeal (Lnet/minecraft/server/level/ServerLevel;Ljava/util/Random;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V a
	randomTick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)V b
	use (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;Lnet/minecraft/world/phys/BlockHitResult;)Lnet/minecraft/world/InteractionResult; a
net/minecraft/world/level/block/TallFlowerBlock cbx
	canBeReplaced (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/item/BlockPlaceContext;)Z a
	isBonemealSuccess (Lnet/minecraft/world/level/Level;Ljava/util/Random;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Z a
	isValidBonemealTarget (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)Z a
	performBonemeal (Lnet/minecraft/server/level/ServerLevel;Ljava/util/Random;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V a
net/minecraft/world/level/block/TallGrassBlock cby
	SHAPE a
	getOffsetType ()Lnet/minecraft/world/level/block/state/BlockBehaviour$OffsetType; aj_
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; b
	isBonemealSuccess (Lnet/minecraft/world/level/Level;Ljava/util/Random;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Z a
	isValidBonemealTarget (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)Z a
	performBonemeal (Lnet/minecraft/server/level/ServerLevel;Ljava/util/Random;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V a
net/minecraft/world/level/block/TallSeagrass cbz
	HALF b
	SHAPE c
	canPlaceLiquid (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/material/Fluid;)Z a
	canSurvive (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;)Z a
	getCloneItemStack (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/item/ItemStack; a
	getFluidState (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/material/FluidState; d
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; b
	getStateForPlacement (Lnet/minecraft/world/item/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	mayPlaceOn (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Z c
	placeLiquid (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/material/FluidState;)Z a
net/minecraft/world/level/block/TargetBlock cca
	OUTPUT_POWER a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getRedstoneStrength (Lnet/minecraft/world/phys/BlockHitResult;Lnet/minecraft/world/phys/Vec3;)I a
	getSignal (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;)I a
	isSignalSource (Lnet/minecraft/world/level/block/state/BlockState;)Z b_
	onPlace (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)V b
	onProjectileHit (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/phys/BlockHitResult;Lnet/minecraft/world/entity/projectile/Projectile;)V a
	setOutputPower (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/world/level/block/state/BlockState;ILnet/minecraft/core/BlockPos;I)V a
	tick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)V a
	updateRedstoneOutput (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/phys/BlockHitResult;Lnet/minecraft/world/entity/Entity;)I a
net/minecraft/world/level/block/TntBlock ccb
	UNSTABLE a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	dropFromExplosion (Lnet/minecraft/world/level/Explosion;)Z a
	explode (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)V a
	explode (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/LivingEntity;)V a
	neighborChanged (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Block;Lnet/minecraft/core/BlockPos;Z)V a
	onPlace (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)V b
	onProjectileHit (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/phys/BlockHitResult;Lnet/minecraft/world/entity/projectile/Projectile;)V a
	playerWillDestroy (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/entity/player/Player;)V a
	use (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;Lnet/minecraft/world/phys/BlockHitResult;)Lnet/minecraft/world/InteractionResult; a
	wasExploded (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/Explosion;)V a
net/minecraft/world/level/block/TorchBlock ccc
	AABB d
	flameParticle e
	animateTick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)V a
	canSurvive (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;)Z a
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; b
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
net/minecraft/world/level/block/TrapDoorBlock ccd
	BOTTOM_AABB i
	EAST_OPEN_AABB e
	HALF b
	NORTH_OPEN_AABB h
	OPEN a
	POWERED c
	SOUTH_OPEN_AABB g
	TOP_AABB j
	WATERLOGGED d
	WEST_OPEN_AABB f
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getFluidState (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/material/FluidState; d
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; b
	getStateForPlacement (Lnet/minecraft/world/item/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	isPathfindable (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/pathfinder/PathComputationType;)Z a
	neighborChanged (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Block;Lnet/minecraft/core/BlockPos;Z)V a
	playSound (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Z)V a
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
	use (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;Lnet/minecraft/world/phys/BlockHitResult;)Lnet/minecraft/world/InteractionResult; a
net/minecraft/world/level/block/TrappedChestBlock cce
	getDirectSignal (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;)I b
	getOpenChestStat ()Lnet/minecraft/stats/Stat; c
	getSignal (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;)I a
	isSignalSource (Lnet/minecraft/world/level/block/state/BlockState;)Z b_
	newBlockEntity (Lnet/minecraft/world/level/BlockGetter;)Lnet/minecraft/world/level/block/entity/BlockEntity; a
net/minecraft/world/level/block/TripWireBlock ccf
	AABB h
	ATTACHED b
	DISARMED c
	EAST e
	NORTH d
	NOT_ATTACHED_AABB i
	POWERED a
	PROPERTY_BY_DIRECTION j
	SOUTH f
	WEST g
	hook k
	checkPressed (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)V a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	entityInside (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/Entity;)V a
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; b
	getStateForPlacement (Lnet/minecraft/world/item/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	mirror (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Mirror;)Lnet/minecraft/world/level/block/state/BlockState; a
	onPlace (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)V b
	onRemove (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)V a
	playerWillDestroy (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/entity/player/Player;)V a
	rotate (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Rotation;)Lnet/minecraft/world/level/block/state/BlockState; a
	shouldConnectTo (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;)Z a
	tick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)V a
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
	updateSource (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V a
net/minecraft/world/level/block/TripWireHookBlock ccg
	ATTACHED c
	EAST_AABB g
	FACING a
	NORTH_AABB d
	POWERED b
	SOUTH_AABB e
	WEST_AABB f
	calculateState (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;ZZILnet/minecraft/world/level/block/state/BlockState;)V a
	canSurvive (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;)Z a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getDirectSignal (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;)I b
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; b
	getSignal (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;)I a
	getStateForPlacement (Lnet/minecraft/world/item/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	isSignalSource (Lnet/minecraft/world/level/block/state/BlockState;)Z b_
	mirror (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Mirror;)Lnet/minecraft/world/level/block/state/BlockState; a
	notifyNeighbors (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;)V a
	onRemove (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)V a
	playSound (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;ZZZZ)V a
	rotate (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Rotation;)Lnet/minecraft/world/level/block/state/BlockState; a
	setPlacedBy (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/item/ItemStack;)V a
	tick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)V a
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
net/minecraft/world/level/block/TurtleEggBlock cch
	EGGS b
	HATCH a
	MULTIPLE_EGGS_AABB d
	ONE_EGG_AABB c
	canBeReplaced (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/item/BlockPlaceContext;)Z a
	canDestroyEgg (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/Entity;)Z a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	decreaseEggs (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V a
	destroyEgg (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/Entity;I)V a
	fallOn (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/Entity;F)V a
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; b
	getStateForPlacement (Lnet/minecraft/world/item/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	isSand (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Z b
	onPlace (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)V b
	onSand (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Z a
	playerDestroy (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/entity/BlockEntity;Lnet/minecraft/world/item/ItemStack;)V a
	randomTick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)V b
	shouldUpdateHatchLevel (Lnet/minecraft/world/level/Level;)Z a
	stepOn (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/Entity;)V a
net/minecraft/world/level/block/TwistingVines cci
	SHAPE e
	canGrowInto (Lnet/minecraft/world/level/block/state/BlockState;)Z h
	getBlocksToGrowWhenBonemealed (Ljava/util/Random;)I a
	getBodyBlock ()Lnet/minecraft/world/level/block/Block; d
net/minecraft/world/level/block/TwistingVinesPlant ccj
	SHAPE d
	getHeadBlock ()Lnet/minecraft/world/level/block/GrowingPlantHeadBlock; c
net/minecraft/world/level/block/VineBlock cck
	EAST c
	EAST_AABB h
	NORTH b
	NORTH_AABB k
	PROPERTY_BY_DIRECTION f
	SOUTH d
	SOUTH_AABB j
	UP a
	UP_AABB g
	WEST e
	WEST_AABB i
	canBeReplaced (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/item/BlockPlaceContext;)Z a
	canSpread (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Z a
	canSupportAtFace (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;)Z b
	canSurvive (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;)Z a
	copyRandomFaces (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/state/BlockState;Ljava/util/Random;)Lnet/minecraft/world/level/block/state/BlockState; a
	countFaces (Lnet/minecraft/world/level/block/state/BlockState;)I l
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getPropertyForFace (Lnet/minecraft/core/Direction;)Lnet/minecraft/world/level/block/state/properties/BooleanProperty; a
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; b
	getStateForPlacement (Lnet/minecraft/world/item/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	getUpdatedState (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; g
	hasFaces (Lnet/minecraft/world/level/block/state/BlockState;)Z h
	hasHorizontalConnection (Lnet/minecraft/world/level/block/state/BlockState;)Z m
	isAcceptableNeighbour (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;)Z a
	mirror (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Mirror;)Lnet/minecraft/world/level/block/state/BlockState; a
	randomTick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)V b
	rotate (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Rotation;)Lnet/minecraft/world/level/block/state/BlockState; a
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
net/minecraft/world/level/block/WallBannerBlock ccl
	FACING a
	SHAPES b
	canSurvive (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;)Z a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getDescriptionId ()Ljava/lang/String; i
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; b
	getStateForPlacement (Lnet/minecraft/world/item/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	mirror (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Mirror;)Lnet/minecraft/world/level/block/state/BlockState; a
	rotate (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Rotation;)Lnet/minecraft/world/level/block/state/BlockState; a
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
net/minecraft/world/level/block/WallBlock ccm
	EAST_TEST p
	EAST_WALL b
	NORTH_TEST j
	NORTH_WALL c
	POST_TEST i
	SOUTH_TEST k
	SOUTH_WALL d
	UP a
	WATERLOGGED f
	WEST_TEST o
	WEST_WALL e
	collisionShapeByIndex h
	shapeByIndex g
	applyWallShape (Lnet/minecraft/world/phys/shapes/VoxelShape;Lnet/minecraft/world/level/block/state/properties/WallSide;Lnet/minecraft/world/phys/shapes/VoxelShape;Lnet/minecraft/world/phys/shapes/VoxelShape;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	connectsTo (Lnet/minecraft/world/level/block/state/BlockState;ZLnet/minecraft/core/Direction;)Z a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getCollisionShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; c
	getFluidState (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/material/FluidState; d
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; b
	getStateForPlacement (Lnet/minecraft/world/item/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	isConnected (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/state/properties/Property;)Z a
	isCovered (Lnet/minecraft/world/phys/shapes/VoxelShape;Lnet/minecraft/world/phys/shapes/VoxelShape;)Z a
	isPathfindable (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/pathfinder/PathComputationType;)Z a
	makeShapes (FFFFFF)Ljava/util/Map; a
	makeWallState (ZLnet/minecraft/world/phys/shapes/VoxelShape;Lnet/minecraft/world/phys/shapes/VoxelShape;)Lnet/minecraft/world/level/block/state/properties/WallSide; a
	mirror (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Mirror;)Lnet/minecraft/world/level/block/state/BlockState; a
	propagatesSkylightDown (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Z b
	rotate (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Rotation;)Lnet/minecraft/world/level/block/state/BlockState; a
	shouldRaisePost (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/phys/shapes/VoxelShape;)Z a
	sideUpdate (Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;)Lnet/minecraft/world/level/block/state/BlockState; a
	topUpdate (Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/state/BlockState; a
	updateShape (Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;ZZZZ)Lnet/minecraft/world/level/block/state/BlockState; a
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
	updateSides (Lnet/minecraft/world/level/block/state/BlockState;ZZZZLnet/minecraft/world/phys/shapes/VoxelShape;)Lnet/minecraft/world/level/block/state/BlockState; a
net/minecraft/world/level/block/WallSignBlock ccn
	AABBS d
	FACING c
	canSurvive (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;)Z a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getDescriptionId ()Ljava/lang/String; i
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; b
	getStateForPlacement (Lnet/minecraft/world/item/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	mirror (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Mirror;)Lnet/minecraft/world/level/block/state/BlockState; a
	rotate (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Rotation;)Lnet/minecraft/world/level/block/state/BlockState; a
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
net/minecraft/world/level/block/WallSkullBlock cco
	AABBS b
	FACING a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getDescriptionId ()Ljava/lang/String; i
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; b
	getStateForPlacement (Lnet/minecraft/world/item/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	mirror (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Mirror;)Lnet/minecraft/world/level/block/state/BlockState; a
	rotate (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Rotation;)Lnet/minecraft/world/level/block/state/BlockState; a
net/minecraft/world/level/block/WallTorchBlock ccp
	AABBS b
	FACING a
	animateTick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)V a
	canSurvive (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;)Z a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getDescriptionId ()Ljava/lang/String; i
	getShape (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/phys/shapes/VoxelShape; h
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; b
	getStateForPlacement (Lnet/minecraft/world/item/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	mirror (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Mirror;)Lnet/minecraft/world/level/block/state/BlockState; a
	rotate (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Rotation;)Lnet/minecraft/world/level/block/state/BlockState; a
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
net/minecraft/world/level/block/WaterlilyBlock ccq
	AABB a
	entityInside (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/Entity;)V a
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; b
	mayPlaceOn (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Z c
net/minecraft/world/level/block/WebBlock ccr
	entityInside (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/Entity;)V a
net/minecraft/world/level/block/WeepingVines ccs
	SHAPE e
	canGrowInto (Lnet/minecraft/world/level/block/state/BlockState;)Z h
	getBlocksToGrowWhenBonemealed (Ljava/util/Random;)I a
	getBodyBlock ()Lnet/minecraft/world/level/block/Block; d
net/minecraft/world/level/block/WeepingVinesPlant cct
	SHAPE d
	getHeadBlock ()Lnet/minecraft/world/level/block/GrowingPlantHeadBlock; c
net/minecraft/world/level/block/WeightedPressurePlateBlock ccu
	POWER d
	maxWeight e
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getPressedTime ()I c
	getSignalForState (Lnet/minecraft/world/level/block/state/BlockState;)I g
	getSignalStrength (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)I b
	playOffSound (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;)V b
	playOnSound (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;)V a
	setSignalForState (Lnet/minecraft/world/level/block/state/BlockState;I)Lnet/minecraft/world/level/block/state/BlockState; a
net/minecraft/world/level/block/WetSpongeBlock ccv
	animateTick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)V a
	onPlace (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)V b
net/minecraft/world/level/block/WitherRoseBlock ccw
	animateTick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)V a
	entityInside (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/Entity;)V a
	mayPlaceOn (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Z c
net/minecraft/world/level/block/WitherSkullBlock ccx
	witherPatternBase d
	witherPatternFull c
	canSpawnMob (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/item/ItemStack;)Z b
	checkSpawn (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/entity/SkullBlockEntity;)V a
	getOrCreateWitherBase ()Lnet/minecraft/world/level/block/state/pattern/BlockPattern; d
	getOrCreateWitherFull ()Lnet/minecraft/world/level/block/state/pattern/BlockPattern; c
	setPlacedBy (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/item/ItemStack;)V a
net/minecraft/world/level/block/WitherWallSkullBlock ccy
	setPlacedBy (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/item/ItemStack;)V a
net/minecraft/world/level/block/WoodButtonBlock ccz
	getSound (Z)Lnet/minecraft/sounds/SoundEvent; a
net/minecraft/world/level/block/WoolCarpetBlock cda
	SHAPE a
	color b
	canSurvive (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;)Z a
	getColor ()Lnet/minecraft/world/item/DyeColor; c
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; b
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
net/minecraft/world/level/block/entity/AbstractFurnaceBlockEntity cdb
	SLOTS_FOR_DOWN h
	SLOTS_FOR_SIDES i
	SLOTS_FOR_UP g
	cookingProgress l
	cookingTotalTime m
	dataAccess b
	items a
	litDuration k
	litTime j
	recipeType c
	recipesUsed n
	add (Ljava/util/Map;Lnet/minecraft/tags/Tag;I)V a
	add (Ljava/util/Map;Lnet/minecraft/world/level/ItemLike;I)V a
	awardUsedRecipes (Lnet/minecraft/world/entity/player/Player;)V b
	awardUsedRecipesAndPopExperience (Lnet/minecraft/world/entity/player/Player;)V d
	burn (Lnet/minecraft/world/item/crafting/Recipe;)V c
	canBurn (Lnet/minecraft/world/item/crafting/Recipe;)Z b
	canPlaceItem (ILnet/minecraft/world/item/ItemStack;)Z b
	canPlaceItemThroughFace (ILnet/minecraft/world/item/ItemStack;Lnet/minecraft/core/Direction;)Z a
	canTakeItemThroughFace (ILnet/minecraft/world/item/ItemStack;Lnet/minecraft/core/Direction;)Z b
	clearContent ()V aa_
	createExperience (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/phys/Vec3;IF)V a
	fillStackedContents (Lnet/minecraft/world/entity/player/StackedContents;)V a
	getBurnDuration (Lnet/minecraft/world/item/ItemStack;)I a
	getContainerSize ()I ab_
	getFuel ()Ljava/util/Map; f
	getItem (I)Lnet/minecraft/world/item/ItemStack; a
	getRecipeUsed ()Lnet/minecraft/world/item/crafting/Recipe; am_
	getRecipesToAwardAndPopExperience (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/phys/Vec3;)Ljava/util/List; a
	getSlotsForFace (Lnet/minecraft/core/Direction;)[I a
	getTotalCookTime ()I h
	isEmpty ()Z c
	isFuel (Lnet/minecraft/world/item/ItemStack;)Z b
	isLit ()Z j
	isNeverAFurnaceFuel (Lnet/minecraft/world/item/Item;)Z b
	load (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/nbt/CompoundTag;)V a
	removeItem (II)Lnet/minecraft/world/item/ItemStack; a
	removeItemNoUpdate (I)Lnet/minecraft/world/item/ItemStack; b
	save (Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/nbt/CompoundTag; a
	setItem (ILnet/minecraft/world/item/ItemStack;)V a
	setRecipeUsed (Lnet/minecraft/world/item/crafting/Recipe;)V a
	stillValid (Lnet/minecraft/world/entity/player/Player;)Z a
	tick ()V al_
net/minecraft/world/level/block/entity/BannerBlockEntity cdc
	baseColor b
	itemPatterns c
	name a
	patterns h
	receivedData g
	createPatterns (Lnet/minecraft/world/item/DyeColor;Lnet/minecraft/nbt/ListTag;)Ljava/util/List; a
	fromItem (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/item/DyeColor;)V a
	getBaseColor (Ljava/util/function/Supplier;)Lnet/minecraft/world/item/DyeColor; a
	getCustomName ()Lnet/minecraft/network/chat/Component; R
	getItem (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/item/ItemStack; a
	getItemPatterns (Lnet/minecraft/world/item/ItemStack;)Lnet/minecraft/nbt/ListTag; a
	getName ()Lnet/minecraft/network/chat/Component; P
	getPatternCount (Lnet/minecraft/world/item/ItemStack;)I b
	getPatterns ()Ljava/util/List; c
	getUpdatePacket ()Lnet/minecraft/network/protocol/game/ClientboundBlockEntityDataPacket; a
	getUpdateTag ()Lnet/minecraft/nbt/CompoundTag; b
	load (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/nbt/CompoundTag;)V a
	removeLastPattern (Lnet/minecraft/world/item/ItemStack;)V c
	save (Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/nbt/CompoundTag; a
	setCustomName (Lnet/minecraft/network/chat/Component;)V a
net/minecraft/world/level/block/entity/BannerPattern cdd
	$VALUES W
	AVAILABLE_PATTERNS R
	BASE a
	BORDER E
	BRICKS I
	CIRCLE_MIDDLE y
	COUNT P
	CREEPER K
	CROSS o
	CURLY_BORDER F
	DIAGONAL_LEFT u
	DIAGONAL_LEFT_MIRROR w
	DIAGONAL_RIGHT v
	DIAGONAL_RIGHT_MIRROR x
	FLOWER M
	GLOBE J
	GRADIENT G
	GRADIENT_UP H
	HALF_HORIZONTAL B
	HALF_HORIZONTAL_MIRROR D
	HALF_VERTICAL A
	HALF_VERTICAL_MIRROR C
	MOJANG N
	PATTERN_ITEM_COUNT Q
	PIGLIN O
	RHOMBUS_MIDDLE z
	SKULL L
	SQUARE_BOTTOM_LEFT b
	SQUARE_BOTTOM_RIGHT c
	SQUARE_TOP_LEFT d
	SQUARE_TOP_RIGHT e
	STRAIGHT_CROSS p
	STRIPE_BOTTOM f
	STRIPE_CENTER j
	STRIPE_DOWNLEFT m
	STRIPE_DOWNRIGHT l
	STRIPE_LEFT h
	STRIPE_MIDDLE k
	STRIPE_RIGHT i
	STRIPE_SMALL n
	STRIPE_TOP g
	TRIANGLES_BOTTOM s
	TRIANGLES_TOP t
	TRIANGLE_BOTTOM q
	TRIANGLE_TOP r
	VALUES S
	filename U
	hasPatternItem T
	hashname V
	byHash (Ljava/lang/String;)Lnet/minecraft/world/level/block/entity/BannerPattern; a
	getFilename ()Ljava/lang/String; a
	getHashname ()Ljava/lang/String; b
	location (Z)Lnet/minecraft/resources/ResourceLocation; a
net/minecraft/world/level/block/entity/BannerPattern$Builder cdd$a
	patterns a
	addPattern (Lnet/minecraft/world/level/block/entity/BannerPattern;Lnet/minecraft/world/item/DyeColor;)Lnet/minecraft/world/level/block/entity/BannerPattern$Builder; a
	toListTag ()Lnet/minecraft/nbt/ListTag; a
net/minecraft/world/level/block/entity/BarrelBlockEntity cde
	items a
	openCount b
	createMenu (ILnet/minecraft/world/entity/player/Inventory;)Lnet/minecraft/world/inventory/AbstractContainerMenu; a
	getContainerSize ()I ab_
	getDefaultName ()Lnet/minecraft/network/chat/Component; g
	getItems ()Lnet/minecraft/core/NonNullList; f
	load (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/nbt/CompoundTag;)V a
	playSound (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/sounds/SoundEvent;)V a
	recheckOpen ()V h
	save (Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/nbt/CompoundTag; a
	scheduleRecheck ()V j
	setItems (Lnet/minecraft/core/NonNullList;)V a
	startOpen (Lnet/minecraft/world/entity/player/Player;)V c_
	stopOpen (Lnet/minecraft/world/entity/player/Player;)V b_
	updateBlockState (Lnet/minecraft/world/level/block/state/BlockState;Z)V a
net/minecraft/world/level/block/entity/BaseContainerBlockEntity cdf
	lockKey a
	name b
	canOpen (Lnet/minecraft/world/entity/player/Player;)Z e
	canUnlock (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/LockCode;Lnet/minecraft/network/chat/Component;)Z a
	createMenu (ILnet/minecraft/world/entity/player/Inventory;)Lnet/minecraft/world/inventory/AbstractContainerMenu; a
	getCustomName ()Lnet/minecraft/network/chat/Component; R
	getDefaultName ()Lnet/minecraft/network/chat/Component; g
	getDisplayName ()Lnet/minecraft/network/chat/Component; d
	getName ()Lnet/minecraft/network/chat/Component; P
	load (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/nbt/CompoundTag;)V a
	save (Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/nbt/CompoundTag; a
	setCustomName (Lnet/minecraft/network/chat/Component;)V a
net/minecraft/world/level/block/entity/BeaconBlockEntity cdg
	BEACON_EFFECTS a
	VALID_EFFECTS b
	beamSections c
	checkingBeamSections g
	dataAccess n
	lastCheckY i
	levels h
	lockKey m
	name l
	primaryPower j
	secondaryPower k
	applyEffects ()V j
	getBeamSections ()Ljava/util/List; f
	getDisplayName ()Lnet/minecraft/network/chat/Component; d
	getLevels ()I h
	getUpdatePacket ()Lnet/minecraft/network/protocol/game/ClientboundBlockEntityDataPacket; a
	getUpdateTag ()Lnet/minecraft/nbt/CompoundTag; b
	getValidEffectById (I)Lnet/minecraft/world/effect/MobEffect; b
	getViewDistance ()D i
	load (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/nbt/CompoundTag;)V a
	playSound (Lnet/minecraft/sounds/SoundEvent;)V a
	save (Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/nbt/CompoundTag; a
	setCustomName (Lnet/minecraft/network/chat/Component;)V a
	setRemoved ()V an_
	tick ()V al_
	updateBase (III)V a
net/minecraft/world/level/block/entity/BeaconBlockEntity$BeaconBeamSection cdg$a
	color a
	height b
	getColor ()[F b
	getHeight ()I c
	increaseHeight ()V a
net/minecraft/world/level/block/entity/BedBlockEntity cdh
	color a
	getColor ()Lnet/minecraft/world/item/DyeColor; d
	getUpdatePacket ()Lnet/minecraft/network/protocol/game/ClientboundBlockEntityDataPacket; a
	setColor (Lnet/minecraft/world/item/DyeColor;)V a
net/minecraft/world/level/block/entity/BeehiveBlockEntity cdi
	savedFlowerPos b
	stored a
	addOccupant (Lnet/minecraft/world/entity/Entity;Z)V a
	addOccupantWithPresetTicks (Lnet/minecraft/world/entity/Entity;ZI)V a
	emptyAllLivingFromHive (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/entity/BeehiveBlockEntity$BeeReleaseStatus;)V a
	getHoneyLevel (Lnet/minecraft/world/level/block/state/BlockState;)I a
	getOccupantCount ()I j
	hasSavedFlowerPos ()Z x
	isEmpty ()Z f
	isFireNearby ()Z d
	isFull ()Z h
	isSedated ()Z k
	load (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/nbt/CompoundTag;)V a
	releaseAllOccupants (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/entity/BeehiveBlockEntity$BeeReleaseStatus;)Ljava/util/List; a
	releaseOccupant (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/entity/BeehiveBlockEntity$BeeData;Ljava/util/List;Lnet/minecraft/world/level/block/entity/BeehiveBlockEntity$BeeReleaseStatus;)Z a
	save (Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/nbt/CompoundTag; a
	sendDebugPackets ()V l
	setBeeReleaseData (ILnet/minecraft/world/entity/animal/Bee;)V a
	setChanged ()V Z_
	tick ()V al_
	tickOccupants ()V y
	writeBees ()Lnet/minecraft/nbt/ListTag; m
net/minecraft/world/level/block/entity/BeehiveBlockEntity$BeeData cdi$a
	entityData a
	minOccupationTicks c
	ticksInHive b
net/minecraft/world/level/block/entity/BeehiveBlockEntity$BeeReleaseStatus cdi$b
	$VALUES d
	BEE_RELEASED b
	EMERGENCY c
	HONEY_DELIVERED a
net/minecraft/world/level/block/entity/BellBlockEntity cdj
	clickDirection c
	lastRingTimestamp g
	nearbyEntities h
	resonating i
	resonationTicks j
	shaking b
	ticks a
	areRaidersNearby ()Z h
	glow (Lnet/minecraft/world/entity/LivingEntity;)V b
	isRaiderWithinRange (Lnet/minecraft/world/entity/LivingEntity;)Z a
	makeRaidersGlow (Lnet/minecraft/world/level/Level;)V a
	onHit (Lnet/minecraft/core/Direction;)V a
	playResonateSound ()V d
	showBellParticles (Lnet/minecraft/world/level/Level;)V b
	tick ()V al_
	triggerEvent (II)Z a_
	updateEntities ()V f
net/minecraft/world/level/block/entity/BlastFurnaceBlockEntity cdk
	createMenu (ILnet/minecraft/world/entity/player/Inventory;)Lnet/minecraft/world/inventory/AbstractContainerMenu; a
	getBurnDuration (Lnet/minecraft/world/item/ItemStack;)I a
	getDefaultName ()Lnet/minecraft/network/chat/Component; g
net/minecraft/world/level/block/entity/BlockEntity cdl
	LOGGER a
	blockState c
	hasLoggedInvalidStateBefore g
	level d
	remove f
	type b
	worldPosition e
	clearCache ()V s
	clearRemoved ()V r
	fillCrashReportCategory (Lnet/minecraft/CrashReportCategory;)V a
	getBlockPos ()Lnet/minecraft/core/BlockPos; o
	getBlockState ()Lnet/minecraft/world/level/block/state/BlockState; p
	getLevel ()Lnet/minecraft/world/level/Level; v
	getType ()Lnet/minecraft/world/level/block/entity/BlockEntityType; u
	getUpdatePacket ()Lnet/minecraft/network/protocol/game/ClientboundBlockEntityDataPacket; a
	getUpdateTag ()Lnet/minecraft/nbt/CompoundTag; b
	getViewDistance ()D i
	hasLevel ()Z n
	isRemoved ()Z q
	load (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/nbt/CompoundTag;)V a
	loadStatic (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/world/level/block/entity/BlockEntity; b
	logInvalidState ()V w
	mirror (Lnet/minecraft/world/level/block/Mirror;)V a
	onlyOpCanSetNbt ()Z t
	rotate (Lnet/minecraft/world/level/block/Rotation;)V a
	save (Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/nbt/CompoundTag; a
	saveMetadata (Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/nbt/CompoundTag; b
	setChanged ()V Z_
	setLevelAndPosition (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)V a
	setPosition (Lnet/minecraft/core/BlockPos;)V a
	setRemoved ()V an_
	triggerEvent (II)Z a_
net/minecraft/world/level/block/entity/BlockEntityType cdm
	BANNER s
	BARREL z
	BEACON n
	BED x
	BEEHIVE G
	BELL D
	BLAST_FURNACE B
	BREWING_STAND k
	CAMPFIRE F
	CHEST b
	COMMAND_BLOCK v
	COMPARATOR r
	CONDUIT y
	DAYLIGHT_DETECTOR p
	DISPENSER f
	DROPPER g
	ENCHANTING_TABLE l
	ENDER_CHEST d
	END_GATEWAY u
	END_PORTAL m
	FURNACE a
	HOPPER q
	JIGSAW E
	JUKEBOX e
	LECTERN C
	LOGGER H
	MOB_SPAWNER i
	PISTON j
	SHULKER_BOX w
	SIGN h
	SKULL o
	SMOKER A
	STRUCTURE_BLOCK t
	TRAPPED_CHEST c
	dataType K
	factory I
	validBlocks J
	create ()Lnet/minecraft/world/level/block/entity/BlockEntity; a
	getBlockEntity (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/entity/BlockEntity; a
	getKey (Lnet/minecraft/world/level/block/entity/BlockEntityType;)Lnet/minecraft/resources/ResourceLocation; a
	isValid (Lnet/minecraft/world/level/block/Block;)Z a
	register (Ljava/lang/String;Lnet/minecraft/world/level/block/entity/BlockEntityType$Builder;)Lnet/minecraft/world/level/block/entity/BlockEntityType; a
net/minecraft/world/level/block/entity/BlockEntityType$Builder cdm$a
	factory a
	validBlocks b
	build (Lcom/mojang/datafixers/types/Type;)Lnet/minecraft/world/level/block/entity/BlockEntityType; a
	of (Ljava/util/function/Supplier;[Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/world/level/block/entity/BlockEntityType$Builder; a
net/minecraft/world/level/block/entity/BrewingStandBlockEntity cdn
	SLOTS_FOR_DOWN c
	SLOTS_FOR_SIDES g
	SLOTS_FOR_UP b
	brewTime i
	dataAccess a
	fuel l
	ingredient k
	items h
	lastPotionCount j
	canPlaceItem (ILnet/minecraft/world/item/ItemStack;)Z b
	canPlaceItemThroughFace (ILnet/minecraft/world/item/ItemStack;Lnet/minecraft/core/Direction;)Z a
	canTakeItemThroughFace (ILnet/minecraft/world/item/ItemStack;Lnet/minecraft/core/Direction;)Z b
	clearContent ()V aa_
	createMenu (ILnet/minecraft/world/entity/player/Inventory;)Lnet/minecraft/world/inventory/AbstractContainerMenu; a
	doBrew ()V j
	getContainerSize ()I ab_
	getDefaultName ()Lnet/minecraft/network/chat/Component; g
	getItem (I)Lnet/minecraft/world/item/ItemStack; a
	getPotionBits ()[Z f
	getSlotsForFace (Lnet/minecraft/core/Direction;)[I a
	isBrewable ()Z h
	isEmpty ()Z c
	load (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/nbt/CompoundTag;)V a
	removeItem (II)Lnet/minecraft/world/item/ItemStack; a
	removeItemNoUpdate (I)Lnet/minecraft/world/item/ItemStack; b
	save (Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/nbt/CompoundTag; a
	setItem (ILnet/minecraft/world/item/ItemStack;)V a
	stillValid (Lnet/minecraft/world/entity/player/Player;)Z a
	tick ()V al_
net/minecraft/world/level/block/entity/CampfireBlockEntity cdo
	cookingProgress b
	cookingTime c
	items a
	clearContent ()V aa_
	cook ()V h
	dowse ()V f
	getCookableRecipe (Lnet/minecraft/world/item/ItemStack;)Ljava/util/Optional; a
	getItems ()Lnet/minecraft/core/NonNullList; d
	getUpdatePacket ()Lnet/minecraft/network/protocol/game/ClientboundBlockEntityDataPacket; a
	getUpdateTag ()Lnet/minecraft/nbt/CompoundTag; b
	load (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/nbt/CompoundTag;)V a
	makeParticles ()V j
	markUpdated ()V k
	placeFood (Lnet/minecraft/world/item/ItemStack;I)Z a
	save (Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/nbt/CompoundTag; a
	saveMetadataAndItems (Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/nbt/CompoundTag; b
	tick ()V al_
net/minecraft/world/level/block/entity/ChestBlockEntity cdp
	items i
	oOpenness b
	openCount c
	openness a
	tickInterval j
	createMenu (ILnet/minecraft/world/entity/player/Inventory;)Lnet/minecraft/world/inventory/AbstractContainerMenu; a
	getContainerSize ()I ab_
	getDefaultName ()Lnet/minecraft/network/chat/Component; g
	getItems ()Lnet/minecraft/core/NonNullList; f
	getOpenCount (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)I a
	getOpenCount (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/level/block/entity/BaseContainerBlockEntity;III)I a
	getOpenCount (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/level/block/entity/BaseContainerBlockEntity;IIIII)I a
	getOpenNess (F)F a
	load (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/nbt/CompoundTag;)V a
	playSound (Lnet/minecraft/sounds/SoundEvent;)V a
	save (Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/nbt/CompoundTag; a
	setItems (Lnet/minecraft/core/NonNullList;)V a
	signalOpenCount ()V h
	startOpen (Lnet/minecraft/world/entity/player/Player;)V c_
	stopOpen (Lnet/minecraft/world/entity/player/Player;)V b_
	swapContents (Lnet/minecraft/world/level/block/entity/ChestBlockEntity;Lnet/minecraft/world/level/block/entity/ChestBlockEntity;)V a
	tick ()V al_
	triggerEvent (II)Z a_
net/minecraft/world/level/block/entity/CommandBlockEntity cdq
	auto b
	commandBlock h
	conditionMet c
	powered a
	sendToClient g
	clearRemoved ()V r
	getCommandBlock ()Lnet/minecraft/world/level/BaseCommandBlock; d
	getMode ()Lnet/minecraft/world/level/block/entity/CommandBlockEntity$Mode; m
	getUpdatePacket ()Lnet/minecraft/network/protocol/game/ClientboundBlockEntityDataPacket; a
	isAutomatic ()Z g
	isConditional ()Z x
	isPowered ()Z f
	isSendToClient ()Z l
	load (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/nbt/CompoundTag;)V a
	markConditionMet ()Z k
	onModeSwitch ()V h
	onlyOpCanSetNbt ()Z t
	save (Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/nbt/CompoundTag; a
	scheduleTick ()V y
	setAutomatic (Z)V b
	setPowered (Z)V a
	setSendToClient (Z)V c
	wasConditionMet ()Z j
net/minecraft/world/level/block/entity/CommandBlockEntity$Mode cdq$a
	$VALUES d
	AUTO b
	REDSTONE c
	SEQUENCE a
net/minecraft/world/level/block/entity/ComparatorBlockEntity cdr
	output a
	getOutputSignal ()I d
	load (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/nbt/CompoundTag;)V a
	save (Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/nbt/CompoundTag; a
	setOutputSignal (I)V a
net/minecraft/world/level/block/entity/ConduitBlockEntity cds
	VALID_BLOCKS b
	activeRotation c
	destroyTarget j
	destroyTargetUUID k
	effectBlocks i
	isActive g
	isHunting h
	nextAmbientSoundActivation l
	tickCount a
	animationTick ()V y
	applyEffects ()V j
	findDestroyTarget ()Lnet/minecraft/world/entity/LivingEntity; x
	getActiveRotation (F)F a
	getDestroyRangeAABB ()Lnet/minecraft/world/phys/AABB; m
	getUpdatePacket ()Lnet/minecraft/network/protocol/game/ClientboundBlockEntityDataPacket; a
	getUpdateTag ()Lnet/minecraft/nbt/CompoundTag; b
	isActive ()Z d
	isHunting ()Z f
	load (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/nbt/CompoundTag;)V a
	playSound (Lnet/minecraft/sounds/SoundEvent;)V a
	save (Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/nbt/CompoundTag; a
	setActive (Z)V a
	setHunting (Z)V b
	tick ()V al_
	updateClientTarget ()V l
	updateDestroyTarget ()V k
	updateShape ()Z h
net/minecraft/world/level/block/entity/DaylightDetectorBlockEntity cdt
	tick ()V al_
net/minecraft/world/level/block/entity/DispenserBlockEntity cdu
	RANDOM a
	items b
	addItem (Lnet/minecraft/world/item/ItemStack;)I a
	createMenu (ILnet/minecraft/world/entity/player/Inventory;)Lnet/minecraft/world/inventory/AbstractContainerMenu; a
	getContainerSize ()I ab_
	getDefaultName ()Lnet/minecraft/network/chat/Component; g
	getItems ()Lnet/minecraft/core/NonNullList; f
	getRandomSlot ()I h
	load (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/nbt/CompoundTag;)V a
	save (Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/nbt/CompoundTag; a
	setItems (Lnet/minecraft/core/NonNullList;)V a
net/minecraft/world/level/block/entity/DropperBlockEntity cdv
	getDefaultName ()Lnet/minecraft/network/chat/Component; g
net/minecraft/world/level/block/entity/EnchantmentTableBlockEntity cdw
	RANDOM n
	flip b
	flipA h
	flipT g
	name o
	oFlip c
	oOpen j
	oRot l
	open i
	rot k
	tRot m
	time a
	getCustomName ()Lnet/minecraft/network/chat/Component; R
	getName ()Lnet/minecraft/network/chat/Component; P
	load (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/nbt/CompoundTag;)V a
	save (Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/nbt/CompoundTag; a
	setCustomName (Lnet/minecraft/network/chat/Component;)V a
	tick ()V al_
net/minecraft/world/level/block/entity/EnderChestBlockEntity cdx
	oOpenness b
	openCount c
	openness a
	tickInterval g
	getOpenNess (F)F a
	setRemoved ()V an_
	startOpen ()V d
	stillValid (Lnet/minecraft/world/entity/player/Player;)Z a
	stopOpen ()V f
	tick ()V al_
	triggerEvent (II)Z a_
net/minecraft/world/level/block/entity/FurnaceBlockEntity cdy
	createMenu (ILnet/minecraft/world/entity/player/Inventory;)Lnet/minecraft/world/inventory/AbstractContainerMenu; a
	getDefaultName ()Lnet/minecraft/network/chat/Component; g
net/minecraft/world/level/block/entity/Hopper cdz
	ABOVE b
	INSIDE a
	SUCK c
	getLevel ()Lnet/minecraft/world/level/Level; v
	getLevelX ()D x
	getLevelY ()D z
	getLevelZ ()D A
	getSuckShape ()Lnet/minecraft/world/phys/shapes/VoxelShape; ac_
net/minecraft/world/level/block/entity/HopperBlockEntity cea
	cooldownTime j
	items i
	tickedGameTime k
	addItem (Lnet/minecraft/world/Container;Lnet/minecraft/world/Container;Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/core/Direction;)Lnet/minecraft/world/item/ItemStack; a
	addItem (Lnet/minecraft/world/Container;Lnet/minecraft/world/entity/item/ItemEntity;)Z a
	canMergeItems (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/item/ItemStack;)Z a
	canPlaceItemInContainer (Lnet/minecraft/world/Container;Lnet/minecraft/world/item/ItemStack;ILnet/minecraft/core/Direction;)Z a
	canTakeItemFromContainer (Lnet/minecraft/world/Container;Lnet/minecraft/world/item/ItemStack;ILnet/minecraft/core/Direction;)Z b
	createMenu (ILnet/minecraft/world/entity/player/Inventory;)Lnet/minecraft/world/inventory/AbstractContainerMenu; a
	ejectItems ()Z k
	entityInside (Lnet/minecraft/world/entity/Entity;)V a
	getAttachedContainer ()Lnet/minecraft/world/Container; l
	getContainerAt (Lnet/minecraft/world/level/Level;DDD)Lnet/minecraft/world/Container; a
	getContainerAt (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/Container; b
	getContainerSize ()I ab_
	getDefaultName ()Lnet/minecraft/network/chat/Component; g
	getItems ()Lnet/minecraft/core/NonNullList; f
	getItemsAtAndAbove (Lnet/minecraft/world/level/block/entity/Hopper;)Ljava/util/List; c
	getLevelX ()D x
	getLevelY ()D z
	getLevelZ ()D A
	getSlots (Lnet/minecraft/world/Container;Lnet/minecraft/core/Direction;)Ljava/util/stream/IntStream; a
	getSourceContainer (Lnet/minecraft/world/level/block/entity/Hopper;)Lnet/minecraft/world/Container; b
	inventoryFull ()Z j
	isEmptyContainer (Lnet/minecraft/world/Container;Lnet/minecraft/core/Direction;)Z c
	isFullContainer (Lnet/minecraft/world/Container;Lnet/minecraft/core/Direction;)Z b
	isOnCooldown ()Z m
	isOnCustomCooldown ()Z y
	load (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/nbt/CompoundTag;)V a
	removeItem (II)Lnet/minecraft/world/item/ItemStack; a
	save (Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/nbt/CompoundTag; a
	setCooldown (I)V c
	setItem (ILnet/minecraft/world/item/ItemStack;)V a
	setItems (Lnet/minecraft/core/NonNullList;)V a
	suckInItems (Lnet/minecraft/world/level/block/entity/Hopper;)Z a
	tick ()V al_
	tryMoveInItem (Lnet/minecraft/world/Container;Lnet/minecraft/world/Container;Lnet/minecraft/world/item/ItemStack;ILnet/minecraft/core/Direction;)Lnet/minecraft/world/item/ItemStack; a
	tryMoveItems (Ljava/util/function/Supplier;)Z a
	tryTakeInItemFromSlot (Lnet/minecraft/world/level/block/entity/Hopper;Lnet/minecraft/world/Container;ILnet/minecraft/core/Direction;)Z a
net/minecraft/world/level/block/entity/JigsawBlockEntity ceb
	finalState h
	joint g
	name a
	pool c
	target b
	generate (Lnet/minecraft/server/level/ServerLevel;IZ)V a
	getFinalState ()Ljava/lang/String; h
	getJoint ()Lnet/minecraft/world/level/block/entity/JigsawBlockEntity$JointType; j
	getName ()Lnet/minecraft/resources/ResourceLocation; d
	getPool ()Lnet/minecraft/resources/ResourceLocation; g
	getTarget ()Lnet/minecraft/resources/ResourceLocation; f
	getUpdatePacket ()Lnet/minecraft/network/protocol/game/ClientboundBlockEntityDataPacket; a
	getUpdateTag ()Lnet/minecraft/nbt/CompoundTag; b
	load (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/nbt/CompoundTag;)V a
	save (Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/nbt/CompoundTag; a
	setFinalState (Ljava/lang/String;)V a
	setJoint (Lnet/minecraft/world/level/block/entity/JigsawBlockEntity$JointType;)V a
	setName (Lnet/minecraft/resources/ResourceLocation;)V a
	setPool (Lnet/minecraft/resources/ResourceLocation;)V c
	setTarget (Lnet/minecraft/resources/ResourceLocation;)V b
net/minecraft/world/level/block/entity/JigsawBlockEntity$JointType ceb$a
	$VALUES d
	ALIGNED b
	ROLLABLE a
	name c
	byName (Ljava/lang/String;)Ljava/util/Optional; a
	getSerializedName ()Ljava/lang/String; a
net/minecraft/world/level/block/entity/JigsawBlockEntity$RuntimePiece ceb$b
net/minecraft/world/level/block/entity/JukeboxBlockEntity cec
	record a
	clearContent ()V aa_
	getRecord ()Lnet/minecraft/world/item/ItemStack; d
	load (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/nbt/CompoundTag;)V a
	save (Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/nbt/CompoundTag; a
	setRecord (Lnet/minecraft/world/item/ItemStack;)V a
net/minecraft/world/level/block/entity/LecternBlockEntity ced
	book c
	bookAccess a
	dataAccess b
	page g
	pageCount h
	clearContent ()V aa_
	createCommandSourceStack (Lnet/minecraft/world/entity/player/Player;)Lnet/minecraft/commands/CommandSourceStack; a
	getBook ()Lnet/minecraft/world/item/ItemStack; f
	getDisplayName ()Lnet/minecraft/network/chat/Component; d
	getPage ()I h
	getRedstoneSignal ()I j
	hasBook ()Z g
	load (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/nbt/CompoundTag;)V a
	onBookItemRemove ()V k
	onlyOpCanSetNbt ()Z t
	resolveBook (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/entity/player/Player;)Lnet/minecraft/world/item/ItemStack; b
	save (Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/nbt/CompoundTag; a
	setBook (Lnet/minecraft/world/item/ItemStack;)V a
	setBook (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/entity/player/Player;)V a
	setPage (I)V a
net/minecraft/world/level/block/entity/LidBlockEntity cee
	getOpenNess (F)F a
net/minecraft/world/level/block/entity/RandomizableContainerBlockEntity cef
	lootTable g
	lootTableSeed h
	canOpen (Lnet/minecraft/world/entity/player/Player;)Z e
	clearContent ()V aa_
	getItem (I)Lnet/minecraft/world/item/ItemStack; a
	getItems ()Lnet/minecraft/core/NonNullList; f
	isEmpty ()Z c
	removeItem (II)Lnet/minecraft/world/item/ItemStack; a
	removeItemNoUpdate (I)Lnet/minecraft/world/item/ItemStack; b
	setItem (ILnet/minecraft/world/item/ItemStack;)V a
	setItems (Lnet/minecraft/core/NonNullList;)V a
	setLootTable (Lnet/minecraft/resources/ResourceLocation;J)V a
	setLootTable (Lnet/minecraft/world/level/BlockGetter;Ljava/util/Random;Lnet/minecraft/core/BlockPos;Lnet/minecraft/resources/ResourceLocation;)V a
	stillValid (Lnet/minecraft/world/entity/player/Player;)Z a
	tryLoadLootTable (Lnet/minecraft/nbt/CompoundTag;)Z b
	trySaveLootTable (Lnet/minecraft/nbt/CompoundTag;)Z c
	unpackLootTable (Lnet/minecraft/world/entity/player/Player;)V d
net/minecraft/world/level/block/entity/ShulkerBoxBlockEntity ceg
	SLOTS a
	animationStatus i
	color l
	itemStacks b
	loadColorFromBlock m
	openCount c
	progress j
	progressOld k
	canPlaceItemThroughFace (ILnet/minecraft/world/item/ItemStack;Lnet/minecraft/core/Direction;)Z a
	canTakeItemThroughFace (ILnet/minecraft/world/item/ItemStack;Lnet/minecraft/core/Direction;)Z b
	createMenu (ILnet/minecraft/world/entity/player/Inventory;)Lnet/minecraft/world/inventory/AbstractContainerMenu; a
	doNeighborUpdates ()V x
	getAnimationStatus ()Lnet/minecraft/world/level/block/entity/ShulkerBoxBlockEntity$AnimationStatus; j
	getBoundingBox (Lnet/minecraft/core/Direction;)Lnet/minecraft/world/phys/AABB; b
	getBoundingBox (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/phys/AABB; a
	getColor ()Lnet/minecraft/world/item/DyeColor; k
	getContainerSize ()I ab_
	getDefaultName ()Lnet/minecraft/network/chat/Component; g
	getItems ()Lnet/minecraft/core/NonNullList; f
	getProgress (F)F a
	getSlotsForFace (Lnet/minecraft/core/Direction;)[I a
	getTopBoundingBox (Lnet/minecraft/core/Direction;)Lnet/minecraft/world/phys/AABB; c
	isClosed ()Z l
	load (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/nbt/CompoundTag;)V a
	loadFromTag (Lnet/minecraft/nbt/CompoundTag;)V d
	moveCollidedEntities ()V m
	save (Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/nbt/CompoundTag; a
	saveToTag (Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/nbt/CompoundTag; e
	setItems (Lnet/minecraft/core/NonNullList;)V a
	startOpen (Lnet/minecraft/world/entity/player/Player;)V c_
	stopOpen (Lnet/minecraft/world/entity/player/Player;)V b_
	tick ()V al_
	triggerEvent (II)Z a_
	updateAnimation ()V h
net/minecraft/world/level/block/entity/ShulkerBoxBlockEntity$AnimationStatus ceg$a
	$VALUES e
	CLOSED a
	CLOSING d
	OPENED c
	OPENING b
net/minecraft/world/level/block/entity/SignBlockEntity ceh
	color h
	isEditable b
	messages a
	playerWhoMayEdit c
	renderMessages g
	createCommandSourceStack (Lnet/minecraft/server/level/ServerPlayer;)Lnet/minecraft/commands/CommandSourceStack; a
	executeClickCommands (Lnet/minecraft/world/entity/player/Player;)Z b
	getColor ()Lnet/minecraft/world/item/DyeColor; g
	getMessage (I)Lnet/minecraft/network/chat/Component; a
	getPlayerWhoMayEdit ()Lnet/minecraft/world/entity/player/Player; f
	getRenderMessage (ILjava/util/function/UnaryOperator;)Lnet/minecraft/network/chat/FormattedText; a
	getUpdatePacket ()Lnet/minecraft/network/protocol/game/ClientboundBlockEntityDataPacket; a
	getUpdateTag ()Lnet/minecraft/nbt/CompoundTag; b
	isEditable ()Z d
	load (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/nbt/CompoundTag;)V a
	onlyOpCanSetNbt ()Z t
	save (Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/nbt/CompoundTag; a
	setAllowedPlayerEditor (Lnet/minecraft/world/entity/player/Player;)V a
	setColor (Lnet/minecraft/world/item/DyeColor;)Z a
	setEditable (Z)V a
	setMessage (ILnet/minecraft/network/chat/Component;)V a
net/minecraft/world/level/block/entity/SkullBlockEntity cei
	isMovingMouth h
	mouthTickCount g
	owner c
	profileCache a
	sessionService b
	getMouthAnimation (F)F a
	getOwnerProfile ()Lcom/mojang/authlib/GameProfile; d
	getUpdatePacket ()Lnet/minecraft/network/protocol/game/ClientboundBlockEntityDataPacket; a
	getUpdateTag ()Lnet/minecraft/nbt/CompoundTag; b
	load (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/nbt/CompoundTag;)V a
	save (Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/nbt/CompoundTag; a
	setOwner (Lcom/mojang/authlib/GameProfile;)V a
	setProfileCache (Lnet/minecraft/server/players/GameProfileCache;)V a
	setSessionService (Lcom/mojang/authlib/minecraft/MinecraftSessionService;)V a
	tick ()V al_
	updateGameprofile (Lcom/mojang/authlib/GameProfile;)Lcom/mojang/authlib/GameProfile; b
	updateOwnerProfile ()V f
net/minecraft/world/level/block/entity/SmokerBlockEntity cej
	createMenu (ILnet/minecraft/world/entity/player/Inventory;)Lnet/minecraft/world/inventory/AbstractContainerMenu; a
	getBurnDuration (Lnet/minecraft/world/item/ItemStack;)I a
	getDefaultName ()Lnet/minecraft/network/chat/Component; g
net/minecraft/world/level/block/entity/SpawnerBlockEntity cek
	spawner a
	getSpawner ()Lnet/minecraft/world/level/BaseSpawner; d
	getUpdatePacket ()Lnet/minecraft/network/protocol/game/ClientboundBlockEntityDataPacket; a
	getUpdateTag ()Lnet/minecraft/nbt/CompoundTag; b
	load (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/nbt/CompoundTag;)V a
	onlyOpCanSetNbt ()Z t
	save (Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/nbt/CompoundTag; a
	tick ()V al_
	triggerEvent (II)Z a_
net/minecraft/world/level/block/entity/StructureBlockEntity cel
	author b
	ignoreEntities l
	integrity p
	metaData c
	mirror i
	mode k
	powered m
	rotation j
	seed q
	showAir n
	showBoundingBox o
	structureName a
	structurePos g
	structureSize h
	calculateEnclosingBoundingBox (Lnet/minecraft/core/BlockPos;Ljava/util/List;)Lnet/minecraft/world/level/levelgen/structure/BoundingBox; a
	createRandom (J)Ljava/util/Random; b
	createdBy (Lnet/minecraft/world/entity/LivingEntity;)V a
	detectSize ()Z C
	filterRelatedCornerBlocks (Ljava/util/List;)Ljava/util/List; a
	getDisplayName ()Lnet/minecraft/network/chat/Component; K
	getIntegrity ()F A
	getMetaData ()Ljava/lang/String; m
	getMirror ()Lnet/minecraft/world/level/block/Mirror; k
	getMode ()Lnet/minecraft/world/level/block/state/properties/StructureMode; x
	getNearbyCornerBlocks (Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Ljava/util/List; a
	getRotation ()Lnet/minecraft/world/level/block/Rotation; l
	getSeed ()J B
	getShowAir ()Z I
	getShowBoundingBox ()Z J
	getStructureBoundingBox (Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/levelgen/structure/BoundingBox; d
	getStructureName ()Ljava/lang/String; d
	getStructurePath ()Ljava/lang/String; f
	getStructurePos ()Lnet/minecraft/core/BlockPos; h
	getStructureSize ()Lnet/minecraft/core/BlockPos; j
	getUpdatePacket ()Lnet/minecraft/network/protocol/game/ClientboundBlockEntityDataPacket; a
	getUpdateTag ()Lnet/minecraft/nbt/CompoundTag; b
	getViewDistance ()D i
	hasStructureName ()Z g
	isIgnoreEntities ()Z z
	isPowered ()Z H
	isStructureLoadable ()Z G
	load (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/nbt/CompoundTag;)V a
	loadStructure ()Z E
	loadStructure (Z)Z c
	loadStructure (ZLnet/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplate;)Z a
	nextMode ()V y
	save (Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/nbt/CompoundTag; a
	saveStructure ()Z D
	saveStructure (Z)Z b
	setIgnoreEntities (Z)V a
	setIntegrity (F)V a
	setMetaData (Ljava/lang/String;)V b
	setMirror (Lnet/minecraft/world/level/block/Mirror;)V b
	setMode (Lnet/minecraft/world/level/block/state/properties/StructureMode;)V a
	setPowered (Z)V d
	setRotation (Lnet/minecraft/world/level/block/Rotation;)V b
	setSeed (J)V a
	setShowAir (Z)V e
	setShowBoundingBox (Z)V f
	setStructureName (Ljava/lang/String;)V a
	setStructureName (Lnet/minecraft/resources/ResourceLocation;)V a
	setStructurePos (Lnet/minecraft/core/BlockPos;)V b
	setStructureSize (Lnet/minecraft/core/BlockPos;)V c
	unloadStructure ()V F
	updateBlockState ()V L
	usedBy (Lnet/minecraft/world/entity/player/Player;)Z a
net/minecraft/world/level/block/entity/StructureBlockEntity$UpdateType cel$a
	$VALUES e
	LOAD_AREA c
	SAVE_AREA b
	SCAN_AREA d
	UPDATE_DATA a
net/minecraft/world/level/block/entity/TheEndGatewayBlockEntity cem
	LOGGER a
	age b
	exactTeleport h
	exitPortal g
	teleportCooldown c
	createExitPortal (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;)V a
	findExitPortal (Lnet/minecraft/server/level/ServerLevel;)V a
	findExitPosition ()Lnet/minecraft/core/BlockPos; k
	findTallestBlock (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;IZ)Lnet/minecraft/core/BlockPos; a
	findValidSpawnInChunk (Lnet/minecraft/world/level/chunk/LevelChunk;)Lnet/minecraft/core/BlockPos; a
	getChunk (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/phys/Vec3;)Lnet/minecraft/world/level/chunk/LevelChunk; a
	getCooldownPercent (F)F b
	getParticleAmount ()I j
	getSpawnPercent (F)F a
	getUpdatePacket ()Lnet/minecraft/network/protocol/game/ClientboundBlockEntityDataPacket; a
	getUpdateTag ()Lnet/minecraft/nbt/CompoundTag; b
	getViewDistance ()D i
	isCoolingDown ()Z f
	isSpawning ()Z d
	load (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/nbt/CompoundTag;)V a
	save (Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/nbt/CompoundTag; a
	setExitPosition (Lnet/minecraft/core/BlockPos;Z)V a
	shouldRenderFace (Lnet/minecraft/core/Direction;)Z a
	teleportEntity (Lnet/minecraft/world/entity/Entity;)V a
	tick ()V al_
	triggerCooldown ()V h
	triggerEvent (II)Z a_
net/minecraft/world/level/block/entity/TheEndPortalBlockEntity cen
	shouldRenderFace (Lnet/minecraft/core/Direction;)Z a
net/minecraft/world/level/block/entity/TickableBlockEntity ceo
	tick ()V al_
net/minecraft/world/level/block/entity/TrappedChestBlockEntity cep
	signalOpenCount ()V h
net/minecraft/world/level/block/grower/AbstractMegaTreeGrower cer
	getConfiguredMegaFeature (Ljava/util/Random;)Lnet/minecraft/world/level/levelgen/feature/ConfiguredFeature; a
	growTree (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Ljava/util/Random;)Z a
	isTwoByTwoSapling (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;II)Z a
	placeMega (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Ljava/util/Random;II)Z a
net/minecraft/world/level/block/grower/AbstractTreeGrower ces
	getConfiguredFeature (Ljava/util/Random;Z)Lnet/minecraft/world/level/levelgen/feature/ConfiguredFeature; a
	growTree (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Ljava/util/Random;)Z a
	hasFlowers (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;)Z a
net/minecraft/world/level/block/grower/AcaciaTreeGrower cet
	getConfiguredFeature (Ljava/util/Random;Z)Lnet/minecraft/world/level/levelgen/feature/ConfiguredFeature; a
net/minecraft/world/level/block/grower/BirchTreeGrower ceu
	getConfiguredFeature (Ljava/util/Random;Z)Lnet/minecraft/world/level/levelgen/feature/ConfiguredFeature; a
net/minecraft/world/level/block/grower/DarkOakTreeGrower cev
	getConfiguredFeature (Ljava/util/Random;Z)Lnet/minecraft/world/level/levelgen/feature/ConfiguredFeature; a
	getConfiguredMegaFeature (Ljava/util/Random;)Lnet/minecraft/world/level/levelgen/feature/ConfiguredFeature; a
net/minecraft/world/level/block/grower/JungleTreeGrower cew
	getConfiguredFeature (Ljava/util/Random;Z)Lnet/minecraft/world/level/levelgen/feature/ConfiguredFeature; a
	getConfiguredMegaFeature (Ljava/util/Random;)Lnet/minecraft/world/level/levelgen/feature/ConfiguredFeature; a
net/minecraft/world/level/block/grower/OakTreeGrower cex
	getConfiguredFeature (Ljava/util/Random;Z)Lnet/minecraft/world/level/levelgen/feature/ConfiguredFeature; a
net/minecraft/world/level/block/grower/SpruceTreeGrower cey
	getConfiguredFeature (Ljava/util/Random;Z)Lnet/minecraft/world/level/levelgen/feature/ConfiguredFeature; a
	getConfiguredMegaFeature (Ljava/util/Random;)Lnet/minecraft/world/level/levelgen/feature/ConfiguredFeature; a
net/minecraft/world/level/block/piston/MovingPistonBlock cfb
	FACING a
	TYPE b
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	destroy (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V a
	getBlockEntity (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/piston/PistonMovingBlockEntity; a
	getCloneItemStack (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/item/ItemStack; a
	getCollisionShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; c
	getDrops (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/storage/loot/LootContext$Builder;)Ljava/util/List; a
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; b
	isPathfindable (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/pathfinder/PathComputationType;)Z a
	mirror (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Mirror;)Lnet/minecraft/world/level/block/state/BlockState; a
	newBlockEntity (Lnet/minecraft/world/level/BlockGetter;)Lnet/minecraft/world/level/block/entity/BlockEntity; a
	newMovingBlockEntity (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;ZZ)Lnet/minecraft/world/level/block/entity/BlockEntity; a
	onRemove (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)V a
	rotate (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Rotation;)Lnet/minecraft/world/level/block/state/BlockState; a
	use (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;Lnet/minecraft/world/phys/BlockHitResult;)Lnet/minecraft/world/InteractionResult; a
net/minecraft/world/level/block/piston/PistonBaseBlock cfc
	DOWN_AABB h
	EAST_AABB c
	EXTENDED b
	NORTH_AABB f
	SOUTH_AABB e
	UP_AABB g
	WEST_AABB d
	isSticky i
	checkIfExtend (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getNeighborSignal (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;)Z a
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; b
	getStateForPlacement (Lnet/minecraft/world/item/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	isPathfindable (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/pathfinder/PathComputationType;)Z a
	isPushable (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;ZLnet/minecraft/core/Direction;)Z a
	mirror (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Mirror;)Lnet/minecraft/world/level/block/state/BlockState; a
	moveBlocks (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;Z)Z a
	neighborChanged (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Block;Lnet/minecraft/core/BlockPos;Z)V a
	onPlace (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)V b
	rotate (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Rotation;)Lnet/minecraft/world/level/block/state/BlockState; a
	setPlacedBy (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/item/ItemStack;)V a
	triggerEvent (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;II)Z a
	useShapeForLightOcclusion (Lnet/minecraft/world/level/block/state/BlockState;)Z c_
net/minecraft/world/level/block/piston/PistonHeadBlock cfd
	DOWN_AABB i
	DOWN_ARM_AABB k
	EAST_AABB d
	EAST_ARM_AABB q
	NORTH_AABB g
	NORTH_ARM_AABB p
	SHORT c
	SHORT_DOWN_ARM_AABB t
	SHORT_EAST_ARM_AABB w
	SHORT_NORTH_ARM_AABB v
	SHORT_SOUTH_ARM_AABB u
	SHORT_UP_ARM_AABB s
	SHORT_WEST_ARM_AABB x
	SOUTH_AABB f
	SOUTH_ARM_AABB o
	TYPE b
	UP_AABB h
	UP_ARM_AABB j
	WEST_AABB e
	WEST_ARM_AABB r
	canSurvive (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;)Z a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getArmShape (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/phys/shapes/VoxelShape; l
	getBaseShape (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/phys/shapes/VoxelShape; h
	getCloneItemStack (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/item/ItemStack; a
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; b
	isFittingBase (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/state/BlockState;)Z a
	isPathfindable (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/pathfinder/PathComputationType;)Z a
	mirror (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Mirror;)Lnet/minecraft/world/level/block/state/BlockState; a
	neighborChanged (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Block;Lnet/minecraft/core/BlockPos;Z)V a
	onRemove (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)V a
	playerWillDestroy (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/entity/player/Player;)V a
	rotate (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Rotation;)Lnet/minecraft/world/level/block/state/BlockState; a
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
	useShapeForLightOcclusion (Lnet/minecraft/world/level/block/state/BlockState;)Z c_
net/minecraft/world/level/block/piston/PistonMath cfe
	getMovementArea (Lnet/minecraft/world/phys/AABB;Lnet/minecraft/core/Direction;D)Lnet/minecraft/world/phys/AABB; a
net/minecraft/world/level/block/piston/PistonMovingBlockEntity cff
	NOCLIP h
	direction b
	extending c
	isSourcePiston g
	lastTicked k
	movedState a
	progress i
	progressO j
	finalTick ()V l
	fixEntityWithinPistonBase (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/core/Direction;D)V a
	getCollisionRelatedBlockState ()Lnet/minecraft/world/level/block/state/BlockState; x
	getCollisionShape (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	getDirection ()Lnet/minecraft/core/Direction; f
	getExtendedProgress (F)F e
	getLastTicked ()J m
	getMovedState ()Lnet/minecraft/world/level/block/state/BlockState; k
	getMovement (Lnet/minecraft/world/phys/AABB;Lnet/minecraft/core/Direction;Lnet/minecraft/world/phys/AABB;)D a
	getMovementDirection ()Lnet/minecraft/core/Direction; j
	getProgress (F)F a
	getUpdateTag ()Lnet/minecraft/nbt/CompoundTag; b
	getXOff (F)F b
	getYOff (F)F c
	getZOff (F)F d
	isExtending ()Z d
	isSourcePiston ()Z h
	isStickyForEntities ()Z y
	load (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/nbt/CompoundTag;)V a
	matchesStickyCritera (Lnet/minecraft/world/phys/AABB;Lnet/minecraft/world/entity/Entity;)Z a
	moveByPositionAndProgress (Lnet/minecraft/world/phys/AABB;)Lnet/minecraft/world/phys/AABB; a
	moveCollidedEntities (F)V f
	moveEntityByPiston (Lnet/minecraft/core/Direction;Lnet/minecraft/world/entity/Entity;DLnet/minecraft/core/Direction;)V a
	moveStuckEntities (F)V g
	save (Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/nbt/CompoundTag; a
	tick ()V al_
net/minecraft/world/level/block/piston/PistonStructureResolver cfg
	extending c
	level a
	pistonDirection h
	pistonPos b
	pushDirection e
	startPos d
	toDestroy g
	toPush f
	addBlockLine (Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;)Z a
	addBranchingBlocks (Lnet/minecraft/core/BlockPos;)Z a
	canStickToEachOther (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/world/level/block/Block;)Z a
	getPushDirection ()Lnet/minecraft/core/Direction; b
	getToDestroy ()Ljava/util/List; d
	getToPush ()Ljava/util/List; c
	isSticky (Lnet/minecraft/world/level/block/Block;)Z a
	reorderListAtCollision (II)V a
	resolve ()Z a
net/minecraft/world/level/block/state/BlockBehaviour cfi
	UPDATE_SHAPE_ORDER ar
	drops aC
	dynamicShape aA
	explosionResistance au
	friction ax
	hasCollision at
	isRandomlyTicking av
	jumpFactor az
	material as
	properties aB
	soundType aw
	speedFactor ay
	asBlock ()Lnet/minecraft/world/level/block/Block; p
	asItem ()Lnet/minecraft/world/item/Item; h
	attack (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/player/Player;)V a
	canBeReplaced (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/item/BlockPlaceContext;)Z a
	canBeReplaced (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/material/Fluid;)Z a
	canSurvive (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;)Z a
	defaultMaterialColor ()Lnet/minecraft/world/level/material/MaterialColor; s
	entityInside (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/Entity;)V a
	getAnalogOutputSignal (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)I a
	getBlockSupportShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/phys/shapes/VoxelShape; e
	getCollisionShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; c
	getDestroyProgress (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)F a
	getDirectSignal (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;)I b
	getDrops (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/storage/loot/LootContext$Builder;)Ljava/util/List; a
	getFluidState (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/material/FluidState; d
	getInteractionShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/phys/shapes/VoxelShape; a_
	getLightBlock (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)I f
	getLootTable ()Lnet/minecraft/resources/ResourceLocation; r
	getMenuProvider (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/MenuProvider; b
	getOcclusionShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/phys/shapes/VoxelShape; d
	getOffsetType ()Lnet/minecraft/world/level/block/state/BlockBehaviour$OffsetType; aj_
	getPistonPushReaction (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/material/PushReaction; f
	getRenderShape (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/RenderShape; b
	getSeed (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/BlockPos;)J a
	getShadeBrightness (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)F a
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; b
	getSignal (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;)I a
	getVisualShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	hasAnalogOutputSignal (Lnet/minecraft/world/level/block/state/BlockState;)Z a
	isEntityBlock ()Z q
	isPathfindable (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/pathfinder/PathComputationType;)Z a
	isSignalSource (Lnet/minecraft/world/level/block/state/BlockState;)Z b_
	mirror (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Mirror;)Lnet/minecraft/world/level/block/state/BlockState; a
	neighborChanged (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Block;Lnet/minecraft/core/BlockPos;Z)V a
	onPlace (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)V b
	onProjectileHit (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/phys/BlockHitResult;Lnet/minecraft/world/entity/projectile/Projectile;)V a
	onRemove (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)V a
	randomTick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)V b
	rotate (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Rotation;)Lnet/minecraft/world/level/block/state/BlockState; a
	skipRendering (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;)Z a
	spawnAfterBreak (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/item/ItemStack;)V a
	tick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)V a
	triggerEvent (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;II)Z a
	updateIndirectNeighbourShapes (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;II)V a
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
	use (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;Lnet/minecraft/world/phys/BlockHitResult;)Lnet/minecraft/world/InteractionResult; a
	useShapeForLightOcclusion (Lnet/minecraft/world/level/block/state/BlockState;)Z c_
net/minecraft/world/level/block/state/BlockBehaviour$BlockStateBase cfi$a
	cache a
	canOcclude k
	destroySpeed i
	emissiveRendering p
	hasPostProcess o
	isAir f
	isRedstoneConductor l
	isSuffocating m
	isViewBlocking n
	lightEmission b
	material g
	materialColor h
	requiresCorrectToolForDrops j
	useShapeForLightOcclusion e
	asState ()Lnet/minecraft/world/level/block/state/BlockState; p
	attack (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/player/Player;)V a
	canBeReplaced (Lnet/minecraft/world/item/BlockPlaceContext;)Z a
	canBeReplaced (Lnet/minecraft/world/level/material/Fluid;)Z a
	canOcclude ()Z l
	canSurvive (Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;)Z a
	emissiveRendering (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Z e
	entityCanStandOn (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/Entity;)Z a
	entityCanStandOnFace (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/Entity;Lnet/minecraft/core/Direction;)Z a
	entityInside (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/Entity;)V a
	getAnalogOutputSignal (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)I a
	getBlock ()Lnet/minecraft/world/level/block/Block; b
	getBlockSupportShape (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/phys/shapes/VoxelShape; l
	getCollisionShape (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/phys/shapes/VoxelShape; k
	getCollisionShape (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; b
	getDestroyProgress (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)F a
	getDestroySpeed (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)F h
	getDirectSignal (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;)I c
	getDrops (Lnet/minecraft/world/level/storage/loot/LootContext$Builder;)Ljava/util/List; a
	getFaceOcclusionShape (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	getFluidState ()Lnet/minecraft/world/level/material/FluidState; m
	getInteractionShape (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/phys/shapes/VoxelShape; m
	getLightBlock (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)I b
	getLightEmission ()I f
	getMapColor (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/material/MaterialColor; d
	getMaterial ()Lnet/minecraft/world/level/material/Material; c
	getMenuProvider (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/MenuProvider; b
	getOcclusionShape (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/phys/shapes/VoxelShape; c
	getOffset (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/phys/Vec3; n
	getPistonPushReaction ()Lnet/minecraft/world/level/material/PushReaction; k
	getRenderShape ()Lnet/minecraft/world/level/block/RenderShape; h
	getSeed (Lnet/minecraft/core/BlockPos;)J a
	getShadeBrightness (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)F f
	getShape (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/phys/shapes/VoxelShape; j
	getShape (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	getSignal (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;)I b
	getSoundType ()Lnet/minecraft/world/level/block/SoundType; o
	getVisualShape (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; c
	hasAnalogOutputSignal ()Z j
	hasLargeCollisionShape ()Z d
	hasPostProcess (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Z q
	initCache ()V a
	is (Lnet/minecraft/tags/Tag;)Z a
	is (Lnet/minecraft/tags/Tag;Ljava/util/function/Predicate;)Z a
	is (Lnet/minecraft/world/level/block/Block;)Z a
	isAir ()Z g
	isCollisionShapeFullBlock (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Z r
	isFaceSturdy (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;)Z d
	isPathfindable (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/pathfinder/PathComputationType;)Z a
	isRandomlyTicking ()Z n
	isRedstoneConductor (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Z g
	isSignalSource ()Z i
	isSolidRender (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Z i
	isSuffocating (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Z o
	isValidSpawn (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/EntityType;)Z a
	isViewBlocking (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Z p
	mirror (Lnet/minecraft/world/level/block/Mirror;)Lnet/minecraft/world/level/block/state/BlockState; a
	neighborChanged (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Block;Lnet/minecraft/core/BlockPos;Z)V a
	onPlace (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)V a
	onProjectileHit (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/phys/BlockHitResult;Lnet/minecraft/world/entity/projectile/Projectile;)V a
	onRemove (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)V b
	propagatesSkylightDown (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Z a
	randomTick (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)V b
	requiresCorrectToolForDrops ()Z q
	rotate (Lnet/minecraft/world/level/block/Rotation;)Lnet/minecraft/world/level/block/state/BlockState; a
	skipRendering (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;)Z a
	spawnAfterBreak (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/item/ItemStack;)V a
	tick (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)V a
	triggerEvent (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;II)Z a
	updateIndirectNeighbourShapes (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;I)V b
	updateIndirectNeighbourShapes (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;II)V b
	updateNeighbourShapes (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;I)V a
	updateNeighbourShapes (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;II)V a
	updateShape (Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
	use (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;Lnet/minecraft/world/phys/BlockHitResult;)Lnet/minecraft/world/InteractionResult; a
	useShapeForLightOcclusion ()Z e
net/minecraft/world/level/block/state/BlockBehaviour$BlockStateBase$Cache cfi$a$a
	DIRECTIONS f
	collisionShape b
	isCollisionShapeFullBlock e
	isFaceSturdy d
	largeCollisionShape c
	lightBlock h
	occlusionShapes i
	propagatesSkylightDown g
	solidRender a
net/minecraft/world/level/block/state/BlockBehaviour$OffsetType cfi$b
	$VALUES d
	NONE a
	XYZ c
	XZ b
net/minecraft/world/level/block/state/BlockBehaviour$Properties cfi$c
	canOcclude n
	destroyTime g
	drops m
	dynamicShape v
	emissiveRendering u
	explosionResistance f
	friction j
	hasCollision c
	hasPostProcess t
	isAir o
	isRandomlyTicking i
	isRedstoneConductor q
	isSuffocating r
	isValidSpawn p
	isViewBlocking s
	jumpFactor l
	lightEmission e
	material a
	materialColor b
	requiresCorrectToolForDrops h
	soundType d
	speedFactor k
	air ()Lnet/minecraft/world/level/block/state/BlockBehaviour$Properties; g
	copy (Lnet/minecraft/world/level/block/state/BlockBehaviour;)Lnet/minecraft/world/level/block/state/BlockBehaviour$Properties; a
	dropsLike (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/world/level/block/state/BlockBehaviour$Properties; a
	dynamicShape ()Lnet/minecraft/world/level/block/state/BlockBehaviour$Properties; e
	emissiveRendering (Lnet/minecraft/world/level/block/state/BlockBehaviour$StatePredicate;)Lnet/minecraft/world/level/block/state/BlockBehaviour$Properties; e
	friction (F)Lnet/minecraft/world/level/block/state/BlockBehaviour$Properties; a
	hasPostProcess (Lnet/minecraft/world/level/block/state/BlockBehaviour$StatePredicate;)Lnet/minecraft/world/level/block/state/BlockBehaviour$Properties; d
	instabreak ()Lnet/minecraft/world/level/block/state/BlockBehaviour$Properties; c
	isRedstoneConductor (Lnet/minecraft/world/level/block/state/BlockBehaviour$StatePredicate;)Lnet/minecraft/world/level/block/state/BlockBehaviour$Properties; a
	isSuffocating (Lnet/minecraft/world/level/block/state/BlockBehaviour$StatePredicate;)Lnet/minecraft/world/level/block/state/BlockBehaviour$Properties; b
	isValidSpawn (Lnet/minecraft/world/level/block/state/BlockBehaviour$StateArgumentPredicate;)Lnet/minecraft/world/level/block/state/BlockBehaviour$Properties; a
	isViewBlocking (Lnet/minecraft/world/level/block/state/BlockBehaviour$StatePredicate;)Lnet/minecraft/world/level/block/state/BlockBehaviour$Properties; c
	jumpFactor (F)Lnet/minecraft/world/level/block/state/BlockBehaviour$Properties; c
	lightLevel (Ljava/util/function/ToIntFunction;)Lnet/minecraft/world/level/block/state/BlockBehaviour$Properties; a
	noCollission ()Lnet/minecraft/world/level/block/state/BlockBehaviour$Properties; a
	noDrops ()Lnet/minecraft/world/level/block/state/BlockBehaviour$Properties; f
	noOcclusion ()Lnet/minecraft/world/level/block/state/BlockBehaviour$Properties; b
	of (Lnet/minecraft/world/level/material/Material;)Lnet/minecraft/world/level/block/state/BlockBehaviour$Properties; a
	of (Lnet/minecraft/world/level/material/Material;Ljava/util/function/Function;)Lnet/minecraft/world/level/block/state/BlockBehaviour$Properties; a
	of (Lnet/minecraft/world/level/material/Material;Lnet/minecraft/world/item/DyeColor;)Lnet/minecraft/world/level/block/state/BlockBehaviour$Properties; a
	of (Lnet/minecraft/world/level/material/Material;Lnet/minecraft/world/level/material/MaterialColor;)Lnet/minecraft/world/level/block/state/BlockBehaviour$Properties; a
	randomTicks ()Lnet/minecraft/world/level/block/state/BlockBehaviour$Properties; d
	requiresCorrectToolForDrops ()Lnet/minecraft/world/level/block/state/BlockBehaviour$Properties; h
	sound (Lnet/minecraft/world/level/block/SoundType;)Lnet/minecraft/world/level/block/state/BlockBehaviour$Properties; a
	speedFactor (F)Lnet/minecraft/world/level/block/state/BlockBehaviour$Properties; b
	strength (F)Lnet/minecraft/world/level/block/state/BlockBehaviour$Properties; d
	strength (FF)Lnet/minecraft/world/level/block/state/BlockBehaviour$Properties; a
net/minecraft/world/level/block/state/BlockBehaviour$StateArgumentPredicate cfi$d
net/minecraft/world/level/block/state/BlockBehaviour$StatePredicate cfi$e
net/minecraft/world/level/block/state/BlockState cfj
	CODEC b
	asState ()Lnet/minecraft/world/level/block/state/BlockState; p
net/minecraft/world/level/block/state/StateDefinition cfk
	NAME_PATTERN a
	owner b
	propertiesByName c
	states d
	any ()Lnet/minecraft/world/level/block/state/StateHolder; b
	appendPropertyCodec (Lcom/mojang/serialization/MapCodec;Ljava/util/function/Supplier;Ljava/lang/String;Lnet/minecraft/world/level/block/state/properties/Property;)Lcom/mojang/serialization/MapCodec; a
	getOwner ()Ljava/lang/Object; c
	getPossibleStates ()Lcom/google/common/collect/ImmutableList; a
	getProperties ()Ljava/util/Collection; d
	getProperty (Ljava/lang/String;)Lnet/minecraft/world/level/block/state/properties/Property; a
net/minecraft/world/level/block/state/StateDefinition$Builder cfk$a
	owner a
	properties b
	add ([Lnet/minecraft/world/level/block/state/properties/Property;)Lnet/minecraft/world/level/block/state/StateDefinition$Builder; a
	create (Ljava/util/function/Function;Lnet/minecraft/world/level/block/state/StateDefinition$Factory;)Lnet/minecraft/world/level/block/state/StateDefinition; a
	validateProperty (Lnet/minecraft/world/level/block/state/properties/Property;)V a
net/minecraft/world/level/block/state/StateDefinition$Factory cfk$b
net/minecraft/world/level/block/state/StateHolder cfl
	PROPERTY_ENTRY_TO_STRING_FUNCTION a
	neighbours e
	owner c
	propertiesCodec d
	values b
	codec (Lcom/mojang/serialization/Codec;Ljava/util/function/Function;)Lcom/mojang/serialization/Codec; a
	cycle (Lnet/minecraft/world/level/block/state/properties/Property;)Ljava/lang/Object; a
	findNextInCollection (Ljava/util/Collection;Ljava/lang/Object;)Ljava/lang/Object; a
	getOptionalValue (Lnet/minecraft/world/level/block/state/properties/Property;)Ljava/util/Optional; d
	getProperties ()Ljava/util/Collection; r
	getValue (Lnet/minecraft/world/level/block/state/properties/Property;)Ljava/lang/Comparable; c
	getValues ()Lcom/google/common/collect/ImmutableMap; s
	hasProperty (Lnet/minecraft/world/level/block/state/properties/Property;)Z b
	makeNeighbourValues (Lnet/minecraft/world/level/block/state/properties/Property;Ljava/lang/Comparable;)Ljava/util/Map; b
	populateNeighbours (Ljava/util/Map;)V a
	setValue (Lnet/minecraft/world/level/block/state/properties/Property;Ljava/lang/Comparable;)Ljava/lang/Object; a
net/minecraft/world/level/block/state/pattern/BlockInWorld cfn
	cachedEntity f
	entity e
	level a
	loadChunks c
	pos b
	state d
	getEntity ()Lnet/minecraft/world/level/block/entity/BlockEntity; b
	getLevel ()Lnet/minecraft/world/level/LevelReader; c
	getPos ()Lnet/minecraft/core/BlockPos; d
	getState ()Lnet/minecraft/world/level/block/state/BlockState; a
	hasState (Ljava/util/function/Predicate;)Ljava/util/function/Predicate; a
	hasState (Lnet/minecraft/world/level/block/state/BlockState;)Ljava/util/function/Predicate; a
net/minecraft/world/level/block/state/pattern/BlockPattern cfo
	depth b
	height c
	pattern a
	width d
	createLevelCache (Lnet/minecraft/world/level/LevelReader;Z)Lcom/google/common/cache/LoadingCache; a
	find (Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/pattern/BlockPattern$BlockPatternMatch; a
	getDepth ()I a
	getHeight ()I b
	getPattern ()[[[Ljava/util/function/Predicate; d
	getWidth ()I c
	matches (Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;Lnet/minecraft/core/Direction;Lcom/google/common/cache/LoadingCache;)Lnet/minecraft/world/level/block/state/pattern/BlockPattern$BlockPatternMatch; a
	matches (Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;Lnet/minecraft/core/Direction;)Lnet/minecraft/world/level/block/state/pattern/BlockPattern$BlockPatternMatch; a
	translateAndRotate (Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;Lnet/minecraft/core/Direction;III)Lnet/minecraft/core/BlockPos; a
net/minecraft/world/level/block/state/pattern/BlockPattern$BlockCacheLoader cfo$a
	level a
	loadChunks b
	load (Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/pattern/BlockInWorld; a
net/minecraft/world/level/block/state/pattern/BlockPattern$BlockPatternMatch cfo$b
	cache d
	depth g
	forwards b
	frontTopLeft a
	height f
	up c
	width e
	getBlock (III)Lnet/minecraft/world/level/block/state/pattern/BlockInWorld; a
	getDepth ()I f
	getForwards ()Lnet/minecraft/core/Direction; b
	getFrontTopLeft ()Lnet/minecraft/core/BlockPos; a
	getHeight ()I e
	getPortalOutput (Lnet/minecraft/core/Direction;Lnet/minecraft/core/BlockPos;DLnet/minecraft/world/phys/Vec3;D)Lnet/minecraft/world/level/block/state/pattern/BlockPattern$PortalInfo; a
	getUp ()Lnet/minecraft/core/Direction; c
	getWidth ()I d
net/minecraft/world/level/block/state/pattern/BlockPattern$PortalInfo cfo$c
	angle c
	pos a
	speed b
net/minecraft/world/level/block/state/pattern/BlockPatternBuilder cfp
	COMMA_JOINED a
	height d
	lookup c
	pattern b
	width e
	aisle ([Ljava/lang/String;)Lnet/minecraft/world/level/block/state/pattern/BlockPatternBuilder; a
	build ()Lnet/minecraft/world/level/block/state/pattern/BlockPattern; b
	createPattern ()[[[Ljava/util/function/Predicate; c
	ensureAllCharactersMatched ()V d
	start ()Lnet/minecraft/world/level/block/state/pattern/BlockPatternBuilder; a
	where (CLjava/util/function/Predicate;)Lnet/minecraft/world/level/block/state/pattern/BlockPatternBuilder; a
net/minecraft/world/level/block/state/predicate/BlockMaterialPredicate cfr
	AIR a
	material b
	forMaterial (Lnet/minecraft/world/level/material/Material;)Lnet/minecraft/world/level/block/state/predicate/BlockMaterialPredicate; a
	test (Lnet/minecraft/world/level/block/state/BlockState;)Z a
net/minecraft/world/level/block/state/predicate/BlockPredicate cfs
	block a
	forBlock (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/world/level/block/state/predicate/BlockPredicate; a
	test (Lnet/minecraft/world/level/block/state/BlockState;)Z a
net/minecraft/world/level/block/state/predicate/BlockStatePredicate cft
	ANY a
	definition b
	properties c
	applies (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/state/properties/Property;Ljava/util/function/Predicate;)Z a
	forBlock (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/world/level/block/state/predicate/BlockStatePredicate; a
	forDefinition (Lnet/minecraft/world/level/block/state/StateDefinition;)Lnet/minecraft/world/level/block/state/predicate/BlockStatePredicate; a
	test (Lnet/minecraft/world/level/block/state/BlockState;)Z a
	where (Lnet/minecraft/world/level/block/state/properties/Property;Ljava/util/function/Predicate;)Lnet/minecraft/world/level/block/state/predicate/BlockStatePredicate; a
net/minecraft/world/level/block/state/properties/AttachFace cfv
	$VALUES e
	CEILING c
	FLOOR a
	WALL b
	name d
	getSerializedName ()Ljava/lang/String; a
net/minecraft/world/level/block/state/properties/BambooLeaves cfw
	$VALUES e
	LARGE c
	NONE a
	SMALL b
	name d
	getSerializedName ()Ljava/lang/String; a
net/minecraft/world/level/block/state/properties/BedPart cfx
	$VALUES d
	FOOT b
	HEAD a
	name c
	getSerializedName ()Ljava/lang/String; a
net/minecraft/world/level/block/state/properties/BellAttachType cfy
	$VALUES f
	CEILING b
	DOUBLE_WALL d
	FLOOR a
	SINGLE_WALL c
	name e
	getSerializedName ()Ljava/lang/String; a
net/minecraft/world/level/block/state/properties/BlockStateProperties cfz
	AGE_1 ae
	AGE_15 aj
	AGE_2 af
	AGE_25 ak
	AGE_3 ag
	AGE_5 ah
	AGE_7 ai
	ATTACHED a
	ATTACH_FACE Q
	AXIS F
	BAMBOO_LEAVES aN
	BED_PART aE
	BELL_ATTACHMENT R
	BITES al
	BOTTOM b
	CHEST_TYPE aF
	CONDITIONAL c
	DELAY am
	DISARMED d
	DISTANCE an
	DOOR_HINGE aH
	DOUBLE_BLOCK_HALF aa
	DOWN H
	DRAG e
	EAST J
	EAST_REDSTONE W
	EAST_WALL S
	EGGS ao
	ENABLED f
	EXTENDED g
	EYE h
	FACING M
	FACING_HOPPER N
	FALLING i
	HALF ab
	HANGING j
	HAS_BOOK o
	HAS_BOTTLE_0 k
	HAS_BOTTLE_1 l
	HAS_BOTTLE_2 m
	HAS_RECORD n
	HATCH ap
	HORIZONTAL_AXIS E
	HORIZONTAL_FACING O
	INVERTED p
	IN_WALL q
	LAYERS aq
	LEVEL av
	LEVEL_CAULDRON ar
	LEVEL_COMPOSTER as
	LEVEL_FLOWING at
	LEVEL_HONEY au
	LIT r
	LOCKED s
	MODE_COMPARATOR aG
	MOISTURE aw
	NORTH I
	NORTH_REDSTONE X
	NORTH_WALL T
	NOTE ax
	NOTEBLOCK_INSTRUMENT aI
	OCCUPIED t
	OPEN u
	ORIENTATION P
	PERSISTENT v
	PICKLES ay
	PISTON_TYPE aJ
	POWER az
	POWERED w
	RAIL_SHAPE ac
	RAIL_SHAPE_STRAIGHT ad
	RESPAWN_ANCHOR_CHARGES aC
	ROTATION_16 aD
	SHORT x
	SIGNAL_FIRE y
	SLAB_TYPE aK
	SNOWY z
	SOUTH K
	SOUTH_REDSTONE Y
	SOUTH_WALL U
	STABILITY_DISTANCE aB
	STAGE aA
	STAIRS_SHAPE aL
	STRUCTUREBLOCK_MODE aM
	TRIGGERED A
	UNSTABLE B
	UP G
	VINE_END D
	WATERLOGGED C
	WEST L
	WEST_REDSTONE Z
	WEST_WALL V
net/minecraft/world/level/block/state/properties/BooleanProperty cga
	values a
	create (Ljava/lang/String;)Lnet/minecraft/world/level/block/state/properties/BooleanProperty; a
	generateHashCode ()I b
	getName (Ljava/lang/Boolean;)Ljava/lang/String; a
	getName (Ljava/lang/Comparable;)Ljava/lang/String; a
	getPossibleValues ()Ljava/util/Collection; a
	getValue (Ljava/lang/String;)Ljava/util/Optional; b
net/minecraft/world/level/block/state/properties/ChestType cgb
	$VALUES g
	BY_ID d
	LEFT b
	RIGHT c
	SINGLE a
	name e
	opposite f
	getOpposite ()Lnet/minecraft/world/level/block/state/properties/ChestType; b
	getSerializedName ()Ljava/lang/String; a
net/minecraft/world/level/block/state/properties/ComparatorMode cgc
	$VALUES d
	COMPARE a
	SUBTRACT b
	name c
	getSerializedName ()Ljava/lang/String; a
net/minecraft/world/level/block/state/properties/DirectionProperty cgd
	create (Ljava/lang/String;)Lnet/minecraft/world/level/block/state/properties/DirectionProperty; a
	create (Ljava/lang/String;Ljava/util/Collection;)Lnet/minecraft/world/level/block/state/properties/DirectionProperty; a
	create (Ljava/lang/String;Ljava/util/function/Predicate;)Lnet/minecraft/world/level/block/state/properties/DirectionProperty; a
	create (Ljava/lang/String;[Lnet/minecraft/core/Direction;)Lnet/minecraft/world/level/block/state/properties/DirectionProperty; a
net/minecraft/world/level/block/state/properties/DoorHingeSide cge
	$VALUES c
	LEFT a
	RIGHT b
	getSerializedName ()Ljava/lang/String; a
net/minecraft/world/level/block/state/properties/DoubleBlockHalf cgf
	$VALUES c
	LOWER b
	UPPER a
	getSerializedName ()Ljava/lang/String; a
net/minecraft/world/level/block/state/properties/EnumProperty cgg
	names b
	values a
	create (Ljava/lang/String;Ljava/lang/Class;)Lnet/minecraft/world/level/block/state/properties/EnumProperty; a
	create (Ljava/lang/String;Ljava/lang/Class;Ljava/util/Collection;)Lnet/minecraft/world/level/block/state/properties/EnumProperty; a
	create (Ljava/lang/String;Ljava/lang/Class;Ljava/util/function/Predicate;)Lnet/minecraft/world/level/block/state/properties/EnumProperty; a
	create (Ljava/lang/String;Ljava/lang/Class;[Ljava/lang/Enum;)Lnet/minecraft/world/level/block/state/properties/EnumProperty; a
	generateHashCode ()I b
	getName (Ljava/lang/Comparable;)Ljava/lang/String; a
	getName (Ljava/lang/Enum;)Ljava/lang/String; a
	getPossibleValues ()Ljava/util/Collection; a
	getValue (Ljava/lang/String;)Ljava/util/Optional; b
net/minecraft/world/level/block/state/properties/Half cgh
	$VALUES d
	BOTTOM b
	TOP a
	name c
	getSerializedName ()Ljava/lang/String; a
net/minecraft/world/level/block/state/properties/IntegerProperty cgi
	values a
	create (Ljava/lang/String;II)Lnet/minecraft/world/level/block/state/properties/IntegerProperty; a
	generateHashCode ()I b
	getName (Ljava/lang/Comparable;)Ljava/lang/String; a
	getName (Ljava/lang/Integer;)Ljava/lang/String; a
	getPossibleValues ()Ljava/util/Collection; a
	getValue (Ljava/lang/String;)Ljava/util/Optional; b
net/minecraft/world/level/block/state/properties/NoteBlockInstrument cgj
	$VALUES s
	BANJO o
	BASEDRUM b
	BASS e
	BELL g
	BIT n
	CHIME i
	COW_BELL l
	DIDGERIDOO m
	FLUTE f
	GUITAR h
	HARP a
	HAT d
	IRON_XYLOPHONE k
	PLING p
	SNARE c
	XYLOPHONE j
	name q
	soundEvent r
	byState (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/state/properties/NoteBlockInstrument; a
	getSerializedName ()Ljava/lang/String; a
	getSoundEvent ()Lnet/minecraft/sounds/SoundEvent; b
net/minecraft/world/level/block/state/properties/PistonType cgk
	$VALUES d
	DEFAULT a
	STICKY b
	name c
	getSerializedName ()Ljava/lang/String; a
net/minecraft/world/level/block/state/properties/Property cgl
	clazz a
	codec d
	hashCode c
	name b
	valueCodec e
	codec ()Lcom/mojang/serialization/Codec; d
	generateHashCode ()I b
	getAllValues ()Ljava/util/stream/Stream; c
	getName ()Ljava/lang/String; f
	getName (Ljava/lang/Comparable;)Ljava/lang/String; a
	getPossibleValues ()Ljava/util/Collection; a
	getValue (Ljava/lang/String;)Ljava/util/Optional; b
	getValueClass ()Ljava/lang/Class; g
	parseValue (Lcom/mojang/serialization/DynamicOps;Lnet/minecraft/world/level/block/state/StateHolder;Ljava/lang/Object;)Lcom/mojang/serialization/DataResult; a
	value (Ljava/lang/Comparable;)Lnet/minecraft/world/level/block/state/properties/Property$Value; b
	value (Lnet/minecraft/world/level/block/state/StateHolder;)Lnet/minecraft/world/level/block/state/properties/Property$Value; a
	valueCodec ()Lcom/mojang/serialization/Codec; e
net/minecraft/world/level/block/state/properties/Property$Value cgl$a
	property a
	value b
	getProperty ()Lnet/minecraft/world/level/block/state/properties/Property; a
	value ()Ljava/lang/Comparable; b
net/minecraft/world/level/block/state/properties/RailShape cgm
	$VALUES l
	ASCENDING_EAST c
	ASCENDING_NORTH e
	ASCENDING_SOUTH f
	ASCENDING_WEST d
	EAST_WEST b
	NORTH_EAST j
	NORTH_SOUTH a
	NORTH_WEST i
	SOUTH_EAST g
	SOUTH_WEST h
	name k
	getName ()Ljava/lang/String; b
	getSerializedName ()Ljava/lang/String; a
	isAscending ()Z c
net/minecraft/world/level/block/state/properties/RedstoneSide cgn
	$VALUES e
	NONE c
	SIDE b
	UP a
	name d
	getSerializedName ()Ljava/lang/String; a
	isConnected ()Z b
net/minecraft/world/level/block/state/properties/SlabType cgo
	$VALUES e
	BOTTOM b
	DOUBLE c
	TOP a
	name d
	getSerializedName ()Ljava/lang/String; a
net/minecraft/world/level/block/state/properties/StairsShape cgp
	$VALUES g
	INNER_LEFT b
	INNER_RIGHT c
	OUTER_LEFT d
	OUTER_RIGHT e
	STRAIGHT a
	name f
	getSerializedName ()Ljava/lang/String; a
net/minecraft/world/level/block/state/properties/StructureMode cgq
	$VALUES f
	CORNER c
	DATA d
	LOAD b
	SAVE a
	name e
	getSerializedName ()Ljava/lang/String; a
net/minecraft/world/level/block/state/properties/WallSide cgr
	$VALUES e
	LOW b
	NONE a
	TALL c
	name d
	getSerializedName ()Ljava/lang/String; a
net/minecraft/world/level/block/state/properties/WoodType cgs
	ACACIA d
	BIRCH c
	CRIMSON g
	DARK_OAK f
	JUNGLE e
	OAK a
	SPRUCE b
	VALUES i
	WARPED h
	name j
	name ()Ljava/lang/String; b
	register (Lnet/minecraft/world/level/block/state/properties/WoodType;)Lnet/minecraft/world/level/block/state/properties/WoodType; a
	values ()Ljava/util/stream/Stream; a
net/minecraft/world/level/border/BorderChangeListener cgu
	onBorderCenterSet (Lnet/minecraft/world/level/border/WorldBorder;DD)V a
	onBorderSetDamagePerBlock (Lnet/minecraft/world/level/border/WorldBorder;D)V b
	onBorderSetDamageSafeZOne (Lnet/minecraft/world/level/border/WorldBorder;D)V c
	onBorderSetWarningBlocks (Lnet/minecraft/world/level/border/WorldBorder;I)V b
	onBorderSetWarningTime (Lnet/minecraft/world/level/border/WorldBorder;I)V a
	onBorderSizeLerping (Lnet/minecraft/world/level/border/WorldBorder;DDJ)V a
	onBorderSizeSet (Lnet/minecraft/world/level/border/WorldBorder;D)V a
net/minecraft/world/level/border/BorderChangeListener$DelegateBorderChangeListener cgu$a
	worldBorder a
	onBorderCenterSet (Lnet/minecraft/world/level/border/WorldBorder;DD)V a
	onBorderSetDamagePerBlock (Lnet/minecraft/world/level/border/WorldBorder;D)V b
	onBorderSetDamageSafeZOne (Lnet/minecraft/world/level/border/WorldBorder;D)V c
	onBorderSetWarningBlocks (Lnet/minecraft/world/level/border/WorldBorder;I)V b
	onBorderSetWarningTime (Lnet/minecraft/world/level/border/WorldBorder;I)V a
	onBorderSizeLerping (Lnet/minecraft/world/level/border/WorldBorder;DDJ)V a
	onBorderSizeSet (Lnet/minecraft/world/level/border/WorldBorder;D)V a
net/minecraft/world/level/border/BorderStatus cgv
	$VALUES e
	GROWING a
	SHRINKING b
	STATIONARY c
	color d
	getColor ()I a
net/minecraft/world/level/border/WorldBorder cgw
	DEFAULT_SETTINGS b
	absoluteMaxSize i
	centerX g
	centerZ h
	damagePerBlock c
	damageSafeZone d
	extent j
	listeners a
	warningBlocks f
	warningTime e
	addListener (Lnet/minecraft/world/level/border/BorderChangeListener;)V a
	applySettings (Lnet/minecraft/world/level/border/WorldBorder$Settings;)V a
	createSettings ()Lnet/minecraft/world/level/border/WorldBorder$Settings; t
	getAbsoluteMaxSize ()I m
	getCenterX ()D a
	getCenterZ ()D b
	getCollisionShape ()Lnet/minecraft/world/phys/shapes/VoxelShape; c
	getDamagePerBlock ()D o
	getDamageSafeZone ()D n
	getDistanceToBorder (DD)D b
	getDistanceToBorder (Lnet/minecraft/world/entity/Entity;)D a
	getLerpRemainingTime ()J j
	getLerpSpeed ()D p
	getLerpTarget ()D k
	getListeners ()Ljava/util/List; l
	getMaxX ()D g
	getMaxZ ()D h
	getMinX ()D e
	getMinZ ()D f
	getSize ()D i
	getStatus ()Lnet/minecraft/world/level/border/BorderStatus; d
	getWarningBlocks ()I r
	getWarningTime ()I q
	isWithinBounds (DD)Z a
	isWithinBounds (Lnet/minecraft/core/BlockPos;)Z a
	isWithinBounds (Lnet/minecraft/world/level/ChunkPos;)Z a
	isWithinBounds (Lnet/minecraft/world/phys/AABB;)Z a
	lerpSizeBetween (DDJ)V a
	removeListener (Lnet/minecraft/world/level/border/BorderChangeListener;)V b
	setAbsoluteMaxSize (I)V a
	setCenter (DD)V c
	setDamagePerBlock (D)V c
	setDamageSafeZone (D)V b
	setSize (D)V a
	setWarningBlocks (I)V c
	setWarningTime (I)V b
	tick ()V s
net/minecraft/world/level/border/WorldBorder$BorderExtent cgw$a
	getCollisionShape ()Lnet/minecraft/world/phys/shapes/VoxelShape; m
	getLerpRemainingTime ()J g
	getLerpSpeed ()D f
	getLerpTarget ()D h
	getMaxX ()D b
	getMaxZ ()D d
	getMinX ()D a
	getMinZ ()D c
	getSize ()D e
	getStatus ()Lnet/minecraft/world/level/border/BorderStatus; i
	onAbsoluteMaxSizeChange ()V j
	onCenterChange ()V k
	update ()Lnet/minecraft/world/level/border/WorldBorder$BorderExtent; l
net/minecraft/world/level/border/WorldBorder$MovingBorderExtent cgw$b
	from b
	lerpBegin e
	lerpDuration f
	lerpEnd d
	to c
	getCollisionShape ()Lnet/minecraft/world/phys/shapes/VoxelShape; m
	getLerpRemainingTime ()J g
	getLerpSpeed ()D f
	getLerpTarget ()D h
	getMaxX ()D b
	getMaxZ ()D d
	getMinX ()D a
	getMinZ ()D c
	getSize ()D e
	getStatus ()Lnet/minecraft/world/level/border/BorderStatus; i
	onAbsoluteMaxSizeChange ()V j
	onCenterChange ()V k
	update ()Lnet/minecraft/world/level/border/WorldBorder$BorderExtent; l
net/minecraft/world/level/border/WorldBorder$Settings cgw$c
	centerX a
	centerZ b
	damagePerBlock c
	safeZone d
	size g
	sizeLerpTarget i
	sizeLerpTime h
	warningBlocks e
	warningTime f
	getCenterX ()D a
	getCenterZ ()D b
	getDamagePerBlock ()D c
	getSafeZone ()D d
	getSize ()D g
	getSizeLerpTarget ()D i
	getSizeLerpTime ()J h
	getWarningBlocks ()I e
	getWarningTime ()I f
	read (Lcom/mojang/serialization/DynamicLike;Lnet/minecraft/world/level/border/WorldBorder$Settings;)Lnet/minecraft/world/level/border/WorldBorder$Settings; a
	write (Lnet/minecraft/nbt/CompoundTag;)V a
net/minecraft/world/level/border/WorldBorder$StaticBorderExtent cgw$d
	maxX e
	maxZ f
	minX c
	minZ d
	shape g
	size b
	getCollisionShape ()Lnet/minecraft/world/phys/shapes/VoxelShape; m
	getLerpRemainingTime ()J g
	getLerpSpeed ()D f
	getLerpTarget ()D h
	getMaxX ()D b
	getMaxZ ()D d
	getMinX ()D a
	getMinZ ()D c
	getSize ()D e
	getStatus ()Lnet/minecraft/world/level/border/BorderStatus; i
	onAbsoluteMaxSizeChange ()V j
	onCenterChange ()V k
	update ()Lnet/minecraft/world/level/border/WorldBorder$BorderExtent; l
	updateBox ()V n
net/minecraft/world/level/chunk/ChunkAccess cgy
	addEntity (Lnet/minecraft/world/entity/Entity;)V a
	addPackedPostProcess (SI)V a
	getAllStarts ()Ljava/util/Map; h
	getBiomes ()Lnet/minecraft/world/level/chunk/ChunkBiomeContainer; i
	getBlockEntitiesPos ()Ljava/util/Set; c
	getBlockEntityNbt (Lnet/minecraft/core/BlockPos;)Lnet/minecraft/nbt/CompoundTag; f
	getBlockEntityNbtForSaving (Lnet/minecraft/core/BlockPos;)Lnet/minecraft/nbt/CompoundTag; i
	getBlockTicks ()Lnet/minecraft/world/level/TickList; n
	getHeighestPosition (Lnet/minecraft/world/level/levelgen/Heightmap$Types;)Lnet/minecraft/core/BlockPos; b
	getHeight (Lnet/minecraft/world/level/levelgen/Heightmap$Types;II)I a
	getHeightmaps ()Ljava/util/Collection; f
	getHighestSection ()Lnet/minecraft/world/level/chunk/LevelChunkSection; a
	getHighestSectionPosition ()I b
	getInhabitedTime ()J q
	getLightEngine ()Lnet/minecraft/world/level/lighting/LevelLightEngine; e
	getLights ()Ljava/util/stream/Stream; m
	getLiquidTicks ()Lnet/minecraft/world/level/TickList; o
	getOrCreateHeightmapUnprimed (Lnet/minecraft/world/level/levelgen/Heightmap$Types;)Lnet/minecraft/world/level/levelgen/Heightmap; a
	getOrCreateOffsetList ([Lit/unimi/dsi/fastutil/shorts/ShortList;I)Lit/unimi/dsi/fastutil/shorts/ShortList; a
	getPos ()Lnet/minecraft/world/level/ChunkPos; g
	getPostProcessing ()[Lit/unimi/dsi/fastutil/shorts/ShortList; l
	getSections ()[Lnet/minecraft/world/level/chunk/LevelChunkSection; d
	getStatus ()Lnet/minecraft/world/level/chunk/ChunkStatus; k
	getUpgradeData ()Lnet/minecraft/world/level/chunk/UpgradeData; p
	isLightCorrect ()Z r
	isUnsaved ()Z j
	isYSpaceEmpty (II)Z a
	markPosForPostprocessing (Lnet/minecraft/core/BlockPos;)V e
	removeBlockEntity (Lnet/minecraft/core/BlockPos;)V d
	setAllStarts (Ljava/util/Map;)V a
	setBlockEntity (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/entity/BlockEntity;)V a
	setBlockEntityNbt (Lnet/minecraft/nbt/CompoundTag;)V a
	setBlockState (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)Lnet/minecraft/world/level/block/state/BlockState; a
	setHeightmap (Lnet/minecraft/world/level/levelgen/Heightmap$Types;[J)V a
	setInhabitedTime (J)V b
	setLastSaveTime (J)V a
	setLightCorrect (Z)V b
	setUnsaved (Z)V a
net/minecraft/world/level/chunk/ChunkBiomeContainer cgz
	BIOMES_SIZE a
	HEIGHT_BITS f
	HORIZONTAL_MASK b
	LOGGER d
	VERTICAL_MASK c
	WIDTH_BITS e
	biomes g
	copy ()Lnet/minecraft/world/level/chunk/ChunkBiomeContainer; b
	getNoiseBiome (III)Lnet/minecraft/world/level/biome/Biome; b
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
	writeBiomes ()[I a
net/minecraft/world/level/chunk/ChunkGenerator cha
	CODEC a
	biomeSource b
	runtimeBiomeSource c
	settings d
	strongholdPositions f
	strongholdSeed e
	applyBiomeDecoration (Lnet/minecraft/server/level/WorldGenRegion;Lnet/minecraft/world/level/StructureFeatureManager;)V a
	applyCarvers (JLnet/minecraft/world/level/biome/BiomeManager;Lnet/minecraft/world/level/chunk/ChunkAccess;Lnet/minecraft/world/level/levelgen/GenerationStep$Carving;)V a
	buildSurfaceAndBedrock (Lnet/minecraft/server/level/WorldGenRegion;Lnet/minecraft/world/level/chunk/ChunkAccess;)V a
	codec ()Lcom/mojang/serialization/Codec; a
	createBiomes (Lnet/minecraft/world/level/chunk/ChunkAccess;)V a
	createReferences (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/world/level/StructureFeatureManager;Lnet/minecraft/world/level/chunk/ChunkAccess;)V a
	createStructure (Lnet/minecraft/world/level/levelgen/feature/ConfiguredStructureFeature;Lnet/minecraft/world/level/StructureFeatureManager;Lnet/minecraft/world/level/chunk/ChunkAccess;Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureManager;JLnet/minecraft/world/level/ChunkPos;Lnet/minecraft/world/level/biome/Biome;)V a
	createStructures (Lnet/minecraft/world/level/StructureFeatureManager;Lnet/minecraft/world/level/chunk/ChunkAccess;Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureManager;J)V a
	fillFromNoise (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/world/level/StructureFeatureManager;Lnet/minecraft/world/level/chunk/ChunkAccess;)V b
	findNearestMapFeature (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/level/levelgen/feature/StructureFeature;Lnet/minecraft/core/BlockPos;IZ)Lnet/minecraft/core/BlockPos; a
	generateStrongholds ()V g
	getBaseColumn (II)Lnet/minecraft/world/level/BlockGetter; a
	getBaseHeight (IILnet/minecraft/world/level/levelgen/Heightmap$Types;)I a
	getBiomeSource ()Lnet/minecraft/world/level/biome/BiomeSource; d
	getFirstFreeHeight (IILnet/minecraft/world/level/levelgen/Heightmap$Types;)I b
	getFirstOccupiedHeight (IILnet/minecraft/world/level/levelgen/Heightmap$Types;)I c
	getGenDepth ()I e
	getMobsAt (Lnet/minecraft/world/level/biome/Biome;Lnet/minecraft/world/level/StructureFeatureManager;Lnet/minecraft/world/entity/MobCategory;Lnet/minecraft/core/BlockPos;)Ljava/util/List; a
	getSeaLevel ()I f
	getSettings ()Lnet/minecraft/world/level/levelgen/StructureSettings; b
	getSpawnHeight ()I c
	hasStronghold (Lnet/minecraft/world/level/ChunkPos;)Z a
	spawnOriginalMobs (Lnet/minecraft/server/level/WorldGenRegion;)V a
	withSeed (J)Lnet/minecraft/world/level/chunk/ChunkGenerator; a
net/minecraft/world/level/chunk/ChunkSource chb
	gatherStats ()Ljava/lang/String; e
	getChunk (IILnet/minecraft/world/level/chunk/ChunkStatus;Z)Lnet/minecraft/world/level/chunk/ChunkAccess; a
	getChunk (IIZ)Lnet/minecraft/world/level/chunk/LevelChunk; a
	getChunkForLighting (II)Lnet/minecraft/world/level/BlockGetter; c
	getChunkNow (II)Lnet/minecraft/world/level/chunk/LevelChunk; a
	getLightEngine ()Lnet/minecraft/world/level/lighting/LevelLightEngine; l
	getLoadedChunksCount ()I h
	hasChunk (II)Z b
	isEntityTickingChunk (Lnet/minecraft/world/entity/Entity;)Z a
	isEntityTickingChunk (Lnet/minecraft/world/level/ChunkPos;)Z a
	isTickingChunk (Lnet/minecraft/core/BlockPos;)Z a
	setSpawnSettings (ZZ)V a
	tick (Ljava/util/function/BooleanSupplier;)V a
	updateChunkForced (Lnet/minecraft/world/level/ChunkPos;Z)V a
net/minecraft/world/level/chunk/ChunkStatus chc
	BIOMES d
	CARVERS g
	EMPTY a
	FEATURES i
	FULL m
	HEIGHTMAPS l
	LIGHT j
	LIQUID_CARVERS h
	NOISE e
	PASSTHROUGH_LOAD_TASK p
	POST_FEATURES o
	PRE_FEATURES n
	RANGE_BY_STATUS r
	SPAWN k
	STATUS_BY_RANGE q
	STRUCTURE_REFERENCES c
	STRUCTURE_STARTS b
	SURFACE f
	chunkType y
	generationTask v
	heightmapsAfter z
	index t
	loadingTask w
	name s
	parent u
	range x
	byName (Ljava/lang/String;)Lnet/minecraft/world/level/chunk/ChunkStatus; a
	generate (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureManager;Lnet/minecraft/server/level/ThreadedLevelLightEngine;Ljava/util/function/Function;Ljava/util/List;)Ljava/util/concurrent/CompletableFuture; a
	getChunkType ()Lnet/minecraft/world/level/chunk/ChunkStatus$ChunkType; g
	getDistance (Lnet/minecraft/world/level/chunk/ChunkStatus;)I a
	getIndex ()I c
	getName ()Ljava/lang/String; d
	getParent ()Lnet/minecraft/world/level/chunk/ChunkStatus; e
	getRange ()I f
	getStatus (I)Lnet/minecraft/world/level/chunk/ChunkStatus; a
	getStatusList ()Ljava/util/List; a
	heightmapsAfter ()Ljava/util/EnumSet; h
	isLighted (Lnet/minecraft/world/level/chunk/ChunkStatus;Lnet/minecraft/world/level/chunk/ChunkAccess;)Z a
	isOrAfter (Lnet/minecraft/world/level/chunk/ChunkStatus;)Z b
	lightChunk (Lnet/minecraft/world/level/chunk/ChunkStatus;Lnet/minecraft/server/level/ThreadedLevelLightEngine;Lnet/minecraft/world/level/chunk/ChunkAccess;)Ljava/util/concurrent/CompletableFuture; a
	load (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureManager;Lnet/minecraft/server/level/ThreadedLevelLightEngine;Ljava/util/function/Function;Lnet/minecraft/world/level/chunk/ChunkAccess;)Ljava/util/concurrent/CompletableFuture; a
	maxDistance ()I b
	register (Ljava/lang/String;Lnet/minecraft/world/level/chunk/ChunkStatus;ILjava/util/EnumSet;Lnet/minecraft/world/level/chunk/ChunkStatus$ChunkType;Lnet/minecraft/world/level/chunk/ChunkStatus$GenerationTask;)Lnet/minecraft/world/level/chunk/ChunkStatus; a
	register (Ljava/lang/String;Lnet/minecraft/world/level/chunk/ChunkStatus;ILjava/util/EnumSet;Lnet/minecraft/world/level/chunk/ChunkStatus$ChunkType;Lnet/minecraft/world/level/chunk/ChunkStatus$GenerationTask;Lnet/minecraft/world/level/chunk/ChunkStatus$LoadingTask;)Lnet/minecraft/world/level/chunk/ChunkStatus; a
	registerSimple (Ljava/lang/String;Lnet/minecraft/world/level/chunk/ChunkStatus;ILjava/util/EnumSet;Lnet/minecraft/world/level/chunk/ChunkStatus$ChunkType;Lnet/minecraft/world/level/chunk/ChunkStatus$SimpleGenerationTask;)Lnet/minecraft/world/level/chunk/ChunkStatus; a
net/minecraft/world/level/chunk/ChunkStatus$ChunkType chc$a
	$VALUES c
	LEVELCHUNK b
	PROTOCHUNK a
net/minecraft/world/level/chunk/ChunkStatus$GenerationTask chc$b
net/minecraft/world/level/chunk/ChunkStatus$LoadingTask chc$c
net/minecraft/world/level/chunk/ChunkStatus$SimpleGenerationTask chc$d
net/minecraft/world/level/chunk/DataLayer chd
	data a
	copy ()Lnet/minecraft/world/level/chunk/DataLayer; b
	get (I)I b
	get (III)I a
	getData ()[B a
	getIndex (III)I b
	getPosition (I)I d
	isEmpty ()Z c
	isFirst (I)Z c
	layerToString (I)Ljava/lang/String; a
	set (II)V a
	set (IIII)V a
net/minecraft/world/level/chunk/EmptyLevelChunk che
	BIOMES b
	addBlockEntity (Lnet/minecraft/world/level/block/entity/BlockEntity;)V a
	addEntity (Lnet/minecraft/world/entity/Entity;)V a
	getBlockEntity (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/chunk/LevelChunk$EntityCreationType;)Lnet/minecraft/world/level/block/entity/BlockEntity; a
	getBlockState (Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; d_
	getEntities (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/phys/AABB;Ljava/util/List;Ljava/util/function/Predicate;)V a
	getEntitiesOfClass (Ljava/lang/Class;Lnet/minecraft/world/phys/AABB;Ljava/util/List;Ljava/util/function/Predicate;)V a
	getFluidState (Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/material/FluidState; b
	getFullStatus ()Lnet/minecraft/server/level/ChunkHolder$FullChunkStatus; u
	getLightBlock (Lnet/minecraft/core/BlockPos;)I g
	getLightEmission (Lnet/minecraft/core/BlockPos;)I h
	getLightEngine ()Lnet/minecraft/world/level/lighting/LevelLightEngine; e
	isEmpty ()Z t
	isYSpaceEmpty (II)Z a
	markUnsaved ()V s
	removeBlockEntity (Lnet/minecraft/core/BlockPos;)V d
	removeEntity (Lnet/minecraft/world/entity/Entity;)V b
	removeEntity (Lnet/minecraft/world/entity/Entity;I)V a
	setBlockEntity (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/entity/BlockEntity;)V a
	setBlockState (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)Lnet/minecraft/world/level/block/state/BlockState; a
net/minecraft/world/level/chunk/FeatureAccess chf
	addReferenceForFeature (Lnet/minecraft/world/level/levelgen/feature/StructureFeature;J)V a
	getAllReferences ()Ljava/util/Map; v
	getReferencesForFeature (Lnet/minecraft/world/level/levelgen/feature/StructureFeature;)Lit/unimi/dsi/fastutil/longs/LongSet; b
	getStartForFeature (Lnet/minecraft/world/level/levelgen/feature/StructureFeature;)Lnet/minecraft/world/level/levelgen/structure/StructureStart; a
	setAllReferences (Ljava/util/Map;)V b
	setStartForFeature (Lnet/minecraft/world/level/levelgen/feature/StructureFeature;Lnet/minecraft/world/level/levelgen/structure/StructureStart;)V a
net/minecraft/world/level/chunk/GlobalPalette chg
	defaultValue b
	registry a
	getSerializedSize ()I a
	getSize ()I b
	idFor (Ljava/lang/Object;)I a
	maybeHas (Ljava/util/function/Predicate;)Z a
	read (Lnet/minecraft/nbt/ListTag;)V a
	read (Lnet/minecraft/network/FriendlyByteBuf;)V a
	valueFor (I)Ljava/lang/Object; a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V b
net/minecraft/world/level/chunk/HashMapPalette chh
	bits f
	reader d
	registry a
	resizeHandler c
	values b
	writer e
	getSerializedSize ()I a
	getSize ()I b
	idFor (Ljava/lang/Object;)I a
	maybeHas (Ljava/util/function/Predicate;)Z a
	read (Lnet/minecraft/nbt/ListTag;)V a
	read (Lnet/minecraft/network/FriendlyByteBuf;)V a
	valueFor (I)Ljava/lang/Object; a
	write (Lnet/minecraft/nbt/ListTag;)V b
	write (Lnet/minecraft/network/FriendlyByteBuf;)V b
net/minecraft/world/level/chunk/ImposterProtoChunk chi
	wrapped a
	addEntity (Lnet/minecraft/world/entity/Entity;)V a
	addReferenceForFeature (Lnet/minecraft/world/level/levelgen/feature/StructureFeature;J)V a
	fixType (Lnet/minecraft/world/level/levelgen/Heightmap$Types;)Lnet/minecraft/world/level/levelgen/Heightmap$Types; c
	getAllReferences ()Ljava/util/Map; v
	getAllStarts ()Ljava/util/Map; h
	getBiomes ()Lnet/minecraft/world/level/chunk/ChunkBiomeContainer; i
	getBlockEntity (Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/entity/BlockEntity; c
	getBlockEntityNbt (Lnet/minecraft/core/BlockPos;)Lnet/minecraft/nbt/CompoundTag; f
	getBlockEntityNbtForSaving (Lnet/minecraft/core/BlockPos;)Lnet/minecraft/nbt/CompoundTag; i
	getBlockState (Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; d_
	getBlockTicks ()Lnet/minecraft/world/level/TickList; n
	getBlockTicks ()Lnet/minecraft/world/level/chunk/ProtoTickList; s
	getCarvingMask (Lnet/minecraft/world/level/levelgen/GenerationStep$Carving;)Ljava/util/BitSet; a
	getFluidState (Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/material/FluidState; b
	getHeighestPosition (Lnet/minecraft/world/level/levelgen/Heightmap$Types;)Lnet/minecraft/core/BlockPos; b
	getHeight (Lnet/minecraft/world/level/levelgen/Heightmap$Types;II)I a
	getLightEngine ()Lnet/minecraft/world/level/lighting/LevelLightEngine; e
	getLights ()Ljava/util/stream/Stream; m
	getLiquidTicks ()Lnet/minecraft/world/level/TickList; o
	getLiquidTicks ()Lnet/minecraft/world/level/chunk/ProtoTickList; t
	getMaxLightLevel ()I H
	getOrCreateCarvingMask (Lnet/minecraft/world/level/levelgen/GenerationStep$Carving;)Ljava/util/BitSet; b
	getPos ()Lnet/minecraft/world/level/ChunkPos; g
	getReferencesForFeature (Lnet/minecraft/world/level/levelgen/feature/StructureFeature;)Lit/unimi/dsi/fastutil/longs/LongSet; b
	getSections ()[Lnet/minecraft/world/level/chunk/LevelChunkSection; d
	getStartForFeature (Lnet/minecraft/world/level/levelgen/feature/StructureFeature;)Lnet/minecraft/world/level/levelgen/structure/StructureStart; a
	getStatus ()Lnet/minecraft/world/level/chunk/ChunkStatus; k
	getWrapped ()Lnet/minecraft/world/level/chunk/LevelChunk; u
	isLightCorrect ()Z r
	isUnsaved ()Z j
	markPosForPostprocessing (Lnet/minecraft/core/BlockPos;)V e
	removeBlockEntity (Lnet/minecraft/core/BlockPos;)V d
	setAllReferences (Ljava/util/Map;)V b
	setAllStarts (Ljava/util/Map;)V a
	setBiomes (Lnet/minecraft/world/level/chunk/ChunkBiomeContainer;)V a
	setBlockEntity (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/entity/BlockEntity;)V a
	setBlockEntityNbt (Lnet/minecraft/nbt/CompoundTag;)V a
	setBlockState (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)Lnet/minecraft/world/level/block/state/BlockState; a
	setHeightmap (Lnet/minecraft/world/level/levelgen/Heightmap$Types;[J)V a
	setLastSaveTime (J)V a
	setLightCorrect (Z)V b
	setStartForFeature (Lnet/minecraft/world/level/levelgen/feature/StructureFeature;Lnet/minecraft/world/level/levelgen/structure/StructureStart;)V a
	setStatus (Lnet/minecraft/world/level/chunk/ChunkStatus;)V a
	setUnsaved (Z)V a
net/minecraft/world/level/chunk/LevelChunk chj
	EMPTY_SECTION a
	LOGGER b
	biomes d
	blockEntities j
	blockTicks o
	chunkPos w
	entitySections k
	fullStatus u
	heightmaps h
	inhabitedTime t
	isLightCorrect x
	lastSaveHadEntities q
	lastSaveTime r
	level g
	liquidTicks p
	loaded f
	pendingBlockEntities e
	postLoad v
	postProcessing n
	sections c
	structureStarts l
	structuresRefences m
	unsaved s
	upgradeData i
	addBlockEntity (Lnet/minecraft/world/level/block/entity/BlockEntity;)V a
	addEntity (Lnet/minecraft/world/entity/Entity;)V a
	addReferenceForFeature (Lnet/minecraft/world/level/levelgen/feature/StructureFeature;J)V a
	createBlockEntity (Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/entity/BlockEntity; j
	getAllReferences ()Ljava/util/Map; v
	getAllStarts ()Ljava/util/Map; h
	getBiomes ()Lnet/minecraft/world/level/chunk/ChunkBiomeContainer; i
	getBlockEntities ()Ljava/util/Map; y
	getBlockEntitiesPos ()Ljava/util/Set; c
	getBlockEntity (Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/entity/BlockEntity; c
	getBlockEntity (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/chunk/LevelChunk$EntityCreationType;)Lnet/minecraft/world/level/block/entity/BlockEntity; a
	getBlockEntityNbt (Lnet/minecraft/core/BlockPos;)Lnet/minecraft/nbt/CompoundTag; f
	getBlockEntityNbtForSaving (Lnet/minecraft/core/BlockPos;)Lnet/minecraft/nbt/CompoundTag; i
	getBlockState (Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; d_
	getBlockTicks ()Lnet/minecraft/world/level/TickList; n
	getEntities (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/phys/AABB;Ljava/util/List;Ljava/util/function/Predicate;)V a
	getEntities (Lnet/minecraft/world/entity/EntityType;Lnet/minecraft/world/phys/AABB;Ljava/util/List;Ljava/util/function/Predicate;)V a
	getEntitiesOfClass (Ljava/lang/Class;Lnet/minecraft/world/phys/AABB;Ljava/util/List;Ljava/util/function/Predicate;)V a
	getEntitySections ()[Lnet/minecraft/util/ClassInstanceMultiMap; z
	getFluidState (III)Lnet/minecraft/world/level/material/FluidState; a
	getFluidState (Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/material/FluidState; b
	getFullStatus ()Lnet/minecraft/server/level/ChunkHolder$FullChunkStatus; u
	getHeighestPosition (Lnet/minecraft/world/level/levelgen/Heightmap$Types;)Lnet/minecraft/core/BlockPos; b
	getHeight (Lnet/minecraft/world/level/levelgen/Heightmap$Types;II)I a
	getHeightmaps ()Ljava/util/Collection; f
	getInhabitedTime ()J q
	getLevel ()Lnet/minecraft/world/level/Level; x
	getLightEngine ()Lnet/minecraft/world/level/lighting/LevelLightEngine; e
	getLights ()Ljava/util/stream/Stream; m
	getLiquidTicks ()Lnet/minecraft/world/level/TickList; o
	getOrCreateHeightmapUnprimed (Lnet/minecraft/world/level/levelgen/Heightmap$Types;)Lnet/minecraft/world/level/levelgen/Heightmap; a
	getPos ()Lnet/minecraft/world/level/ChunkPos; g
	getPostProcessing ()[Lit/unimi/dsi/fastutil/shorts/ShortList; l
	getReferencesForFeature (Lnet/minecraft/world/level/levelgen/feature/StructureFeature;)Lit/unimi/dsi/fastutil/longs/LongSet; b
	getSections ()[Lnet/minecraft/world/level/chunk/LevelChunkSection; d
	getStartForFeature (Lnet/minecraft/world/level/levelgen/feature/StructureFeature;)Lnet/minecraft/world/level/levelgen/structure/StructureStart; a
	getStatus ()Lnet/minecraft/world/level/chunk/ChunkStatus; k
	getUpgradeData ()Lnet/minecraft/world/level/chunk/UpgradeData; p
	isEmpty ()Z t
	isLightCorrect ()Z r
	isUnsaved ()Z j
	markUnsaved ()V s
	packTicks (Lnet/minecraft/server/level/ServerLevel;)V a
	postProcessGeneration ()V A
	promotePendingBlockEntity (Lnet/minecraft/core/BlockPos;Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/world/level/block/entity/BlockEntity; a
	removeBlockEntity (Lnet/minecraft/core/BlockPos;)V d
	removeEntity (Lnet/minecraft/world/entity/Entity;)V b
	removeEntity (Lnet/minecraft/world/entity/Entity;I)V a
	replaceWithPacketData (Lnet/minecraft/world/level/chunk/ChunkBiomeContainer;Lnet/minecraft/network/FriendlyByteBuf;Lnet/minecraft/nbt/CompoundTag;I)V a
	runPostLoad ()V w
	setAllReferences (Ljava/util/Map;)V b
	setAllStarts (Ljava/util/Map;)V a
	setBlockEntity (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/entity/BlockEntity;)V a
	setBlockEntityNbt (Lnet/minecraft/nbt/CompoundTag;)V a
	setBlockState (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)Lnet/minecraft/world/level/block/state/BlockState; a
	setFullStatus (Ljava/util/function/Supplier;)V a
	setHeightmap (Lnet/minecraft/world/level/levelgen/Heightmap$Types;[J)V a
	setInhabitedTime (J)V b
	setLastSaveHadEntities (Z)V d
	setLastSaveTime (J)V a
	setLightCorrect (Z)V b
	setLoaded (Z)V c
	setStartForFeature (Lnet/minecraft/world/level/levelgen/feature/StructureFeature;Lnet/minecraft/world/level/levelgen/structure/StructureStart;)V a
	setUnsaved (Z)V a
	unpackTicks ()V B
net/minecraft/world/level/chunk/LevelChunk$EntityCreationType chj$a
	$VALUES d
	CHECK c
	IMMEDIATE a
	QUEUED b
net/minecraft/world/level/chunk/LevelChunkSection chk
	GLOBAL_BLOCKSTATE_PALETTE a
	bottomBlockY b
	nonEmptyBlockCount c
	states f
	tickingBlockCount d
	tickingFluidCount e
	acquire ()V a
	bottomBlockY ()I g
	getBlockState (III)Lnet/minecraft/world/level/block/state/BlockState; a
	getFluidState (III)Lnet/minecraft/world/level/material/FluidState; b
	getSerializedSize ()I j
	getStates ()Lnet/minecraft/world/level/chunk/PalettedContainer; i
	isEmpty ()Z c
	isEmpty (Lnet/minecraft/world/level/chunk/LevelChunkSection;)Z a
	isRandomlyTicking ()Z d
	isRandomlyTickingBlocks ()Z e
	isRandomlyTickingFluids ()Z f
	maybeHas (Ljava/util/function/Predicate;)Z a
	read (Lnet/minecraft/network/FriendlyByteBuf;)V a
	recalcBlockCounts ()V h
	release ()V b
	setBlockState (IIILnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/state/BlockState; a
	setBlockState (IIILnet/minecraft/world/level/block/state/BlockState;Z)Lnet/minecraft/world/level/block/state/BlockState; a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V b
net/minecraft/world/level/chunk/LightChunkGetter chl
	getChunkForLighting (II)Lnet/minecraft/world/level/BlockGetter; c
	getLevel ()Lnet/minecraft/world/level/BlockGetter; m
	onLightUpdate (Lnet/minecraft/world/level/LightLayer;Lnet/minecraft/core/SectionPos;)V a
net/minecraft/world/level/chunk/LinearPalette chm
	bits e
	reader d
	registry a
	resizeHandler c
	size f
	values b
	getSerializedSize ()I a
	getSize ()I b
	idFor (Ljava/lang/Object;)I a
	maybeHas (Ljava/util/function/Predicate;)Z a
	read (Lnet/minecraft/nbt/ListTag;)V a
	read (Lnet/minecraft/network/FriendlyByteBuf;)V a
	valueFor (I)Ljava/lang/Object; a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V b
net/minecraft/world/level/chunk/OldDataLayer chn
	data a
	depthBits b
	depthBitsPlusFour c
	get (III)I a
	isValid ()Z a
	set (IIII)V a
	setAll (I)V a
net/minecraft/world/level/chunk/Palette cho
	getSerializedSize ()I a
	getSize ()I b
	idFor (Ljava/lang/Object;)I a
	maybeHas (Ljava/util/function/Predicate;)Z a
	read (Lnet/minecraft/nbt/ListTag;)V a
	read (Lnet/minecraft/network/FriendlyByteBuf;)V a
	valueFor (I)Ljava/lang/Object; a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V b
net/minecraft/world/level/chunk/PaletteResize chp
net/minecraft/world/level/chunk/PalettedContainer chq
	bits i
	defaultValue g
	dummyPaletteResize c
	globalPalette b
	lock j
	palette h
	reader e
	registry d
	storage a
	writer f
	acquire ()V a
	count (Lnet/minecraft/world/level/chunk/PalettedContainer$CountConsumer;)V a
	get (I)Ljava/lang/Object; a
	get (III)Ljava/lang/Object; a
	getAndSet (IIILjava/lang/Object;)Ljava/lang/Object; a
	getAndSet (ILjava/lang/Object;)Ljava/lang/Object; a
	getAndSetUnchecked (IIILjava/lang/Object;)Ljava/lang/Object; b
	getIndex (III)I b
	getSerializedSize ()I c
	maybeHas (Ljava/util/function/Predicate;)Z a
	read (Lnet/minecraft/nbt/ListTag;[J)V a
	read (Lnet/minecraft/network/FriendlyByteBuf;)V a
	release ()V b
	set (IIILjava/lang/Object;)V c
	set (ILjava/lang/Object;)V b
	setBits (I)V b
	write (Lnet/minecraft/nbt/CompoundTag;Ljava/lang/String;Ljava/lang/String;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V b
net/minecraft/world/level/chunk/PalettedContainer$CountConsumer chq$a
net/minecraft/world/level/chunk/ProtoChunk chr
	LOGGER a
	biomes d
	blockEntities h
	blockEntityNbts i
	blockTicks q
	carvingMasks t
	chunkPos b
	entities k
	heightmaps f
	inhabitedTime s
	isDirty c
	isLightCorrect u
	lightEngine e
	lights l
	liquidTicks r
	postProcessing m
	sections j
	status g
	structureStarts n
	structuresRefences o
	upgradeData p
	addEntity (Lnet/minecraft/nbt/CompoundTag;)V b
	addEntity (Lnet/minecraft/world/entity/Entity;)V a
	addLight (Lnet/minecraft/core/BlockPos;)V j
	addLight (SI)V b
	addPackedPostProcess (SI)V a
	addReferenceForFeature (Lnet/minecraft/world/level/levelgen/feature/StructureFeature;J)V a
	getAllReferences ()Ljava/util/Map; v
	getAllStarts ()Ljava/util/Map; h
	getBiomes ()Lnet/minecraft/world/level/chunk/ChunkBiomeContainer; i
	getBlockEntities ()Ljava/util/Map; x
	getBlockEntitiesPos ()Ljava/util/Set; c
	getBlockEntity (Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/entity/BlockEntity; c
	getBlockEntityNbt (Lnet/minecraft/core/BlockPos;)Lnet/minecraft/nbt/CompoundTag; f
	getBlockEntityNbtForSaving (Lnet/minecraft/core/BlockPos;)Lnet/minecraft/nbt/CompoundTag; i
	getBlockEntityNbts ()Ljava/util/Map; z
	getBlockState (Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; d_
	getBlockTicks ()Lnet/minecraft/world/level/TickList; n
	getBlockTicks ()Lnet/minecraft/world/level/chunk/ProtoTickList; s
	getCarvingMask (Lnet/minecraft/world/level/levelgen/GenerationStep$Carving;)Ljava/util/BitSet; a
	getEntities ()Ljava/util/List; y
	getFluidState (Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/material/FluidState; b
	getHeighestPosition (Lnet/minecraft/world/level/levelgen/Heightmap$Types;)Lnet/minecraft/core/BlockPos; b
	getHeight (Lnet/minecraft/world/level/levelgen/Heightmap$Types;II)I a
	getHeightmaps ()Ljava/util/Collection; f
	getInhabitedTime ()J q
	getLightEngine ()Lnet/minecraft/world/level/lighting/LevelLightEngine; e
	getLights ()Ljava/util/stream/Stream; m
	getLiquidTicks ()Lnet/minecraft/world/level/TickList; o
	getLiquidTicks ()Lnet/minecraft/world/level/chunk/ProtoTickList; t
	getOrCreateCarvingMask (Lnet/minecraft/world/level/levelgen/GenerationStep$Carving;)Ljava/util/BitSet; b
	getOrCreateHeightmapUnprimed (Lnet/minecraft/world/level/levelgen/Heightmap$Types;)Lnet/minecraft/world/level/levelgen/Heightmap; a
	getOrCreateSection (I)Lnet/minecraft/world/level/chunk/LevelChunkSection; a
	getPackedLights ()[Lit/unimi/dsi/fastutil/shorts/ShortList; w
	getPos ()Lnet/minecraft/world/level/ChunkPos; g
	getPostProcessing ()[Lit/unimi/dsi/fastutil/shorts/ShortList; l
	getReferencesForFeature (Lnet/minecraft/world/level/levelgen/feature/StructureFeature;)Lit/unimi/dsi/fastutil/longs/LongSet; b
	getSections ()[Lnet/minecraft/world/level/chunk/LevelChunkSection; d
	getStartForFeature (Lnet/minecraft/world/level/levelgen/feature/StructureFeature;)Lnet/minecraft/world/level/levelgen/structure/StructureStart; a
	getStatus ()Lnet/minecraft/world/level/chunk/ChunkStatus; k
	getUpgradeData ()Lnet/minecraft/world/level/chunk/UpgradeData; p
	isLightCorrect ()Z r
	isUnsaved ()Z j
	markPosForPostprocessing (Lnet/minecraft/core/BlockPos;)V e
	packOffsetCoordinates (Lnet/minecraft/core/BlockPos;)S k
	removeBlockEntity (Lnet/minecraft/core/BlockPos;)V d
	setAllReferences (Ljava/util/Map;)V b
	setAllStarts (Ljava/util/Map;)V a
	setBiomes (Lnet/minecraft/world/level/chunk/ChunkBiomeContainer;)V a
	setBlockEntity (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/entity/BlockEntity;)V a
	setBlockEntityNbt (Lnet/minecraft/nbt/CompoundTag;)V a
	setBlockState (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)Lnet/minecraft/world/level/block/state/BlockState; a
	setCarvingMask (Lnet/minecraft/world/level/levelgen/GenerationStep$Carving;Ljava/util/BitSet;)V a
	setHeightmap (Lnet/minecraft/world/level/levelgen/Heightmap$Types;[J)V a
	setInhabitedTime (J)V b
	setLastSaveTime (J)V a
	setLightCorrect (Z)V b
	setLightEngine (Lnet/minecraft/world/level/lighting/LevelLightEngine;)V a
	setStartForFeature (Lnet/minecraft/world/level/levelgen/feature/StructureFeature;Lnet/minecraft/world/level/levelgen/structure/StructureStart;)V a
	setStatus (Lnet/minecraft/world/level/chunk/ChunkStatus;)V a
	setUnsaved (Z)V a
	unpackOffsetCoordinates (SILnet/minecraft/world/level/ChunkPos;)Lnet/minecraft/core/BlockPos; a
net/minecraft/world/level/chunk/ProtoTickList chs
	chunkPos b
	ignore a
	toBeTicked c
	copyOut (Lnet/minecraft/world/level/TickList;Ljava/util/function/Function;)V a
	hasScheduledTick (Lnet/minecraft/core/BlockPos;Ljava/lang/Object;)Z a
	save ()Lnet/minecraft/nbt/ListTag; b
	scheduleTick (Lnet/minecraft/core/BlockPos;Ljava/lang/Object;ILnet/minecraft/world/level/TickPriority;)V a
	size ()I a
	willTickThisTick (Lnet/minecraft/core/BlockPos;Ljava/lang/Object;)Z b
net/minecraft/world/level/chunk/UpgradeData cht
	CHUNKY_FIXERS g
	DIRECTIONS c
	EMPTY a
	LOGGER b
	MAP f
	index e
	sides d
	isEmpty ()Z a
	updateState (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
	upgrade (Lnet/minecraft/world/level/chunk/LevelChunk;)V a
	upgradeInside (Lnet/minecraft/world/level/chunk/LevelChunk;)V b
	upgradeSides (Lnet/minecraft/world/level/chunk/LevelChunk;Lnet/minecraft/core/Direction8;)V a
	write ()Lnet/minecraft/nbt/CompoundTag; b
net/minecraft/world/level/chunk/UpgradeData$BlockFixer cht$a
	processChunk (Lnet/minecraft/world/level/LevelAccessor;)V a
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
net/minecraft/world/level/chunk/UpgradeData$BlockFixers cht$b
	$VALUES g
	BLACKLIST a
	CHEST c
	DEFAULT b
	DIRECTIONS f
	LEAVES d
	STEM_BLOCK e
net/minecraft/world/level/chunk/storage/ChunkSerializer chv
	LOGGER a
	getChunkTypeFromTag (Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/world/level/chunk/ChunkStatus$ChunkType; a
	packOffsets ([Lit/unimi/dsi/fastutil/shorts/ShortList;)Lnet/minecraft/nbt/ListTag; a
	packStructureData (Lnet/minecraft/world/level/ChunkPos;Ljava/util/Map;Ljava/util/Map;)Lnet/minecraft/nbt/CompoundTag; a
	postLoadChunk (Lnet/minecraft/nbt/CompoundTag;Lnet/minecraft/world/level/chunk/LevelChunk;)V a
	read (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureManager;Lnet/minecraft/world/entity/ai/village/poi/PoiManager;Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/world/level/chunk/ProtoChunk; a
	unpackStructureReferences (Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/nbt/CompoundTag;)Ljava/util/Map; a
	unpackStructureStart (Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureManager;Lnet/minecraft/nbt/CompoundTag;J)Ljava/util/Map; a
	write (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/level/chunk/ChunkAccess;)Lnet/minecraft/nbt/CompoundTag; a
net/minecraft/world/level/chunk/storage/ChunkStorage chw
	fixerUpper b
	legacyStructureHandler c
	worker a
	flushWorker ()V i
	getVersion (Lnet/minecraft/nbt/CompoundTag;)I a
	read (Lnet/minecraft/world/level/ChunkPos;)Lnet/minecraft/nbt/CompoundTag; e
	upgradeChunkTag (Lnet/minecraft/resources/ResourceKey;Ljava/util/function/Supplier;Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/nbt/CompoundTag; a
	write (Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/nbt/CompoundTag;)V a
net/minecraft/world/level/chunk/storage/IOWorker chx
	LOGGER a
	mailbox c
	pendingWrites e
	shutdownRequested b
	storage d
	load (Lnet/minecraft/world/level/ChunkPos;)Lnet/minecraft/nbt/CompoundTag; a
	runStore (Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/world/level/chunk/storage/IOWorker$PendingStore;)V a
	store (Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/nbt/CompoundTag;)Ljava/util/concurrent/CompletableFuture; a
	storePendingChunk ()V b
	submitTask (Ljava/util/function/Supplier;)Ljava/util/concurrent/CompletableFuture; a
	synchronize ()Ljava/util/concurrent/CompletableFuture; a
	tellStorePending ()V c
net/minecraft/world/level/chunk/storage/IOWorker$PendingStore chx$a
	data a
	result b
net/minecraft/world/level/chunk/storage/IOWorker$Priority chx$b
	$VALUES c
	HIGH a
	LOW b
net/minecraft/world/level/chunk/storage/OldChunkStorage chy
	convertToAnvilFormat (Lnet/minecraft/world/level/chunk/storage/OldChunkStorage$OldLevelChunk;Lnet/minecraft/nbt/CompoundTag;Lnet/minecraft/world/level/biome/BiomeSource;)V a
	load (Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/world/level/chunk/storage/OldChunkStorage$OldLevelChunk; a
net/minecraft/world/level/chunk/storage/OldChunkStorage$OldLevelChunk chy$a
	blockEntities i
	blockLight d
	blockTicks j
	blocks g
	data f
	entities h
	heightmap c
	lastUpdated a
	skyLight e
	terrainPopulated b
	x k
	z l
net/minecraft/world/level/chunk/storage/RegionBitmap chz
	used a
	allocate (I)I a
	force (II)V a
	free (II)V b
	getUsed ()Lit/unimi/dsi/fastutil/ints/IntSet; a
net/minecraft/world/level/chunk/storage/RegionFile cia
	LOGGER a
	PADDING_BUFFER b
	externalFileDir d
	file c
	header f
	offsets g
	timestamps h
	usedSectors i
	version e
	createChunkInputStream (Lnet/minecraft/world/level/ChunkPos;BLjava/io/InputStream;)Ljava/io/DataInputStream; a
	createExternalChunkInputStream (Lnet/minecraft/world/level/ChunkPos;B)Ljava/io/DataInputStream; a
	createExternalStub ()Ljava/nio/ByteBuffer; b
	createStream (Ljava/nio/ByteBuffer;I)Ljava/io/ByteArrayInputStream; a
	doesChunkExist (Lnet/minecraft/world/level/ChunkPos;)Z b
	flush ()V a
	getChunkDataInputStream (Lnet/minecraft/world/level/ChunkPos;)Ljava/io/DataInputStream; a
	getChunkDataOutputStream (Lnet/minecraft/world/level/ChunkPos;)Ljava/io/DataOutputStream; c
	getExternalChunkPath (Lnet/minecraft/world/level/ChunkPos;)Ljava/nio/file/Path; e
	getExternalChunkVersion (B)B b
	getNumSectors (I)I a
	getOffset (Lnet/minecraft/world/level/ChunkPos;)I f
	getOffsetIndex (Lnet/minecraft/world/level/ChunkPos;)I g
	getSectorNumber (I)I b
	hasChunk (Lnet/minecraft/world/level/ChunkPos;)Z d
	isExternalStreamChunk (B)Z a
	packSectorOffset (II)I a
	padToFullSector ()V d
	sizeToSectors (I)I c
	write (Lnet/minecraft/world/level/ChunkPos;Ljava/nio/ByteBuffer;)V a
	writeHeader ()V c
	writeToExternalFile (Ljava/nio/file/Path;Ljava/nio/ByteBuffer;)Lnet/minecraft/world/level/chunk/storage/RegionFile$CommitOp; a
net/minecraft/world/level/chunk/storage/RegionFile$ChunkBuffer cia$a
	pos b
net/minecraft/world/level/chunk/storage/RegionFile$CommitOp cia$b
net/minecraft/world/level/chunk/storage/RegionFileStorage cib
	folder b
	regionCache a
	sync c
	flush ()V a
	getRegionFile (Lnet/minecraft/world/level/ChunkPos;)Lnet/minecraft/world/level/chunk/storage/RegionFile; b
	read (Lnet/minecraft/world/level/ChunkPos;)Lnet/minecraft/nbt/CompoundTag; a
	write (Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/nbt/CompoundTag;)V a
net/minecraft/world/level/chunk/storage/RegionFileVersion cic
	VERSIONS d
	VERSION_DEFLATE b
	VERSION_GZIP a
	VERSION_NONE c
	id e
	inputWrapper f
	outputWrapper g
	fromId (I)Lnet/minecraft/world/level/chunk/storage/RegionFileVersion; a
	getId ()I a
	isValidVersion (I)Z b
	register (Lnet/minecraft/world/level/chunk/storage/RegionFileVersion;)Lnet/minecraft/world/level/chunk/storage/RegionFileVersion; a
	wrap (Ljava/io/InputStream;)Ljava/io/InputStream; a
	wrap (Ljava/io/OutputStream;)Ljava/io/OutputStream; a
net/minecraft/world/level/chunk/storage/RegionFileVersion$StreamWrapper cic$a
net/minecraft/world/level/chunk/storage/SectionStorage cid
	LOGGER a
	codec e
	dirty d
	factory f
	fixerUpper g
	storage c
	type h
	worker b
	flush (Lnet/minecraft/world/level/ChunkPos;)V a
	get (J)Ljava/util/Optional; c
	getOrCreate (J)Ljava/lang/Object; e
	getOrLoad (J)Ljava/util/Optional; d
	getVersion (Lcom/mojang/serialization/Dynamic;)I a
	onSectionLoad (J)V b
	outsideStoredRange (Lnet/minecraft/core/SectionPos;)Z b
	readColumn (Lnet/minecraft/world/level/ChunkPos;)V b
	readColumn (Lnet/minecraft/world/level/ChunkPos;Lcom/mojang/serialization/DynamicOps;Ljava/lang/Object;)V a
	setDirty (J)V a
	tick (Ljava/util/function/BooleanSupplier;)V a
	tryRead (Lnet/minecraft/world/level/ChunkPos;)Lnet/minecraft/nbt/CompoundTag; c
	writeColumn (Lnet/minecraft/world/level/ChunkPos;)V d
	writeColumn (Lnet/minecraft/world/level/ChunkPos;Lcom/mojang/serialization/DynamicOps;)Lcom/mojang/serialization/Dynamic; a
net/minecraft/world/level/dimension/DimensionType cif
	CODEC k
	DEFAULT_END h
	DEFAULT_NETHER g
	DEFAULT_OVERWORLD f
	DEFAULT_OVERWORLD_CAVES j
	DIRECT_CODEC a
	END_LOCATION e
	MOON_BRIGHTNESS_PER_PHASE b
	NETHER_LOCATION d
	OVERWORLD_CAVES_LOCATION i
	OVERWORLD_LOCATION c
	ambientLight z
	bedWorks t
	biomeZoomer x
	brightnessRamp A
	createDragonFight r
	fixedTime l
	hasCeiling n
	hasRaids v
	hasSkylight m
	infiniburn y
	logicalHeight w
	natural p
	piglinSafe s
	respawnAnchorWorks u
	shrunk q
	ultraWarm o
	bedWorks ()Z j
	brightness (I)F a
	createDragonFight ()Z n
	defaultDimensions (J)Lnet/minecraft/core/MappedRegistry; a
	defaultEndGenerator (J)Lnet/minecraft/world/level/chunk/ChunkGenerator; d
	defaultNetherGenerator (J)Lnet/minecraft/world/level/chunk/ChunkGenerator; e
	defaultOverworld ()Lnet/minecraft/world/level/dimension/DimensionType; a
	defaultOverworldCaves ()Lnet/minecraft/world/level/dimension/DimensionType; b
	fillBrightnessRamp (F)[F a
	getBiomeZoomer ()Lnet/minecraft/world/level/biome/BiomeZoomer; o
	getFileSuffix ()Ljava/lang/String; c
	getStorageFolder (Lnet/minecraft/resources/ResourceKey;Ljava/io/File;)Ljava/io/File; a
	hasCeiling ()Z e
	hasFixedTime ()Z p
	hasRaids ()Z l
	hasSkyLight ()Z d
	infiniburn ()Lnet/minecraft/tags/Tag; q
	logicalHeight ()I m
	moonPhase (J)I c
	natural ()Z g
	parseLegacy (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/DataResult; a
	piglinSafe ()Z i
	registerBuiltin (Lnet/minecraft/core/RegistryAccess$RegistryHolder;)Lnet/minecraft/core/RegistryAccess$RegistryHolder; a
	respawnAnchorWorks ()Z k
	shrunk ()Z h
	timeOfDay (J)F b
	ultraWarm ()Z f
net/minecraft/world/level/dimension/LevelStem cig
	BUILTIN_ORDER e
	CODEC a
	END d
	NETHER c
	OVERWORLD b
	generator g
	type f
	generator ()Lnet/minecraft/world/level/chunk/ChunkGenerator; c
	sortMap (Lnet/minecraft/core/MappedRegistry;)Lnet/minecraft/core/MappedRegistry; a
	stable (JLnet/minecraft/core/MappedRegistry;)Z a
	type ()Lnet/minecraft/world/level/dimension/DimensionType; b
	typeSupplier ()Ljava/util/function/Supplier; a
net/minecraft/world/level/dimension/end/DragonRespawnAnimation cih
	$VALUES f
	END e
	PREPARING_TO_SUMMON_PILLARS b
	START a
	SUMMONING_DRAGON d
	SUMMONING_PILLARS c
	tick (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/level/dimension/end/EndDragonFight;Ljava/util/List;ILnet/minecraft/core/BlockPos;)V a
net/minecraft/world/level/dimension/end/EndDragonFight cii
	LOGGER a
	VALID_PLAYER b
	crystalsAlive h
	dragonEvent c
	dragonKilled k
	dragonUUID m
	exitPortalPattern f
	gateways e
	level d
	needsStateScanning n
	portalLocation o
	previouslyKilled l
	respawnCrystals r
	respawnStage p
	respawnTime q
	ticksSinceCrystalsScanned i
	ticksSinceDragonSeen g
	ticksSinceLastPlayerScan j
	createNewDragon ()Lnet/minecraft/world/entity/boss/enderdragon/EnderDragon; o
	findExitPortal ()Lnet/minecraft/world/level/block/state/pattern/BlockPattern$BlockPatternMatch; j
	findOrCreateDragon ()V h
	getCrystalsAlive ()I c
	hasActiveExitPortal ()Z i
	hasPreviouslyKilledDragon ()Z d
	isArenaLoaded ()Z k
	onCrystalDestroyed (Lnet/minecraft/world/entity/boss/enderdragon/EndCrystal;Lnet/minecraft/world/damagesource/DamageSource;)V a
	resetSpikeCrystals ()V f
	respawnDragon (Ljava/util/List;)V a
	saveData ()Lnet/minecraft/nbt/CompoundTag; a
	scanState ()V g
	setDragonKilled (Lnet/minecraft/world/entity/boss/enderdragon/EnderDragon;)V a
	setRespawnStage (Lnet/minecraft/world/level/dimension/end/DragonRespawnAnimation;)V a
	spawnExitPortal (Z)V a
	spawnNewGateway ()V n
	spawnNewGateway (Lnet/minecraft/core/BlockPos;)V a
	tick ()V b
	tryRespawn ()V e
	updateCrystalCount ()V m
	updateDragon (Lnet/minecraft/world/entity/boss/enderdragon/EnderDragon;)V b
	updatePlayers ()V l
net/minecraft/world/level/levelgen/DebugLevelSource cil
	AIR f
	ALL_BLOCKS h
	BARRIER g
	CODEC e
	GRID_HEIGHT j
	GRID_WIDTH i
	INSTANCE d
	applyBiomeDecoration (Lnet/minecraft/server/level/WorldGenRegion;Lnet/minecraft/world/level/StructureFeatureManager;)V a
	applyCarvers (JLnet/minecraft/world/level/biome/BiomeManager;Lnet/minecraft/world/level/chunk/ChunkAccess;Lnet/minecraft/world/level/levelgen/GenerationStep$Carving;)V a
	buildSurfaceAndBedrock (Lnet/minecraft/server/level/WorldGenRegion;Lnet/minecraft/world/level/chunk/ChunkAccess;)V a
	codec ()Lcom/mojang/serialization/Codec; a
	fillFromNoise (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/world/level/StructureFeatureManager;Lnet/minecraft/world/level/chunk/ChunkAccess;)V b
	getBaseColumn (II)Lnet/minecraft/world/level/BlockGetter; a
	getBaseHeight (IILnet/minecraft/world/level/levelgen/Heightmap$Types;)I a
	getBlockStateFor (II)Lnet/minecraft/world/level/block/state/BlockState; b
	withSeed (J)Lnet/minecraft/world/level/chunk/ChunkGenerator; a
net/minecraft/world/level/levelgen/FlatLevelSource cim
	CODEC d
	settings e
	buildSurfaceAndBedrock (Lnet/minecraft/server/level/WorldGenRegion;Lnet/minecraft/world/level/chunk/ChunkAccess;)V a
	codec ()Lcom/mojang/serialization/Codec; a
	fillFromNoise (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/world/level/StructureFeatureManager;Lnet/minecraft/world/level/chunk/ChunkAccess;)V b
	getBaseColumn (II)Lnet/minecraft/world/level/BlockGetter; a
	getBaseHeight (IILnet/minecraft/world/level/levelgen/Heightmap$Types;)I a
	getSpawnHeight ()I c
	settings ()Lnet/minecraft/world/level/levelgen/flat/FlatLevelGeneratorSettings; g
	withSeed (J)Lnet/minecraft/world/level/chunk/ChunkGenerator; a
net/minecraft/world/level/levelgen/GenerationStep cin
net/minecraft/world/level/levelgen/GenerationStep$Carving cin$a
	$VALUES f
	AIR a
	BY_NAME d
	CODEC c
	LIQUID b
	name e
	byName (Ljava/lang/String;)Lnet/minecraft/world/level/levelgen/GenerationStep$Carving; a
	getName ()Ljava/lang/String; b
	getSerializedName ()Ljava/lang/String; a
net/minecraft/world/level/levelgen/GenerationStep$Decoration cin$b
	$VALUES n
	BY_NAME l
	CODEC k
	LAKES b
	LOCAL_MODIFICATIONS c
	RAW_GENERATION a
	STRONGHOLDS f
	SURFACE_STRUCTURES e
	TOP_LAYER_MODIFICATION j
	UNDERGROUND_DECORATION h
	UNDERGROUND_ORES g
	UNDERGROUND_STRUCTURES d
	VEGETAL_DECORATION i
	name m
	byName (Ljava/lang/String;)Lnet/minecraft/world/level/levelgen/GenerationStep$Decoration; a
	getName ()Ljava/lang/String; b
	getSerializedName ()Ljava/lang/String; a
net/minecraft/world/level/levelgen/Heightmap cio
	MATERIAL_MOTION_BLOCKING b
	NOT_AIR a
	chunk e
	data c
	isOpaque d
	getFirstAvailable (I)I a
	getFirstAvailable (II)I a
	getHighestTaken (II)I b
	getIndex (II)I c
	getRawData ()[J a
	primeHeightmaps (Lnet/minecraft/world/level/chunk/ChunkAccess;Ljava/util/Set;)V a
	setHeight (III)V a
	setRawData ([J)V a
	update (IIILnet/minecraft/world/level/block/state/BlockState;)Z a
net/minecraft/world/level/levelgen/Heightmap$Types cio$a
	$VALUES l
	CODEC g
	MOTION_BLOCKING e
	MOTION_BLOCKING_NO_LEAVES f
	OCEAN_FLOOR d
	OCEAN_FLOOR_WG c
	REVERSE_LOOKUP k
	WORLD_SURFACE b
	WORLD_SURFACE_WG a
	isOpaque j
	serializationKey h
	usage i
	getFromKey (Ljava/lang/String;)Lnet/minecraft/world/level/levelgen/Heightmap$Types; a
	getSerializationKey ()Ljava/lang/String; b
	getSerializedName ()Ljava/lang/String; a
	isOpaque ()Ljava/util/function/Predicate; e
	keepAfterWorldgen ()Z d
	sendToClient ()Z c
net/minecraft/world/level/levelgen/Heightmap$Usage cio$b
	$VALUES d
	CLIENT c
	LIVE_WORLD b
	WORLDGEN a
net/minecraft/world/level/levelgen/NoiseBasedChunkGenerator cip
	AIR k
	BEARD_KERNEL i
	BIOME_WEIGHTS j
	CODEC d
	chunkCountX n
	chunkCountY o
	chunkCountZ p
	chunkHeight l
	chunkWidth m
	defaultBlock f
	defaultFluid g
	depthNoise u
	height x
	islandNoise v
	mainPerlinNoise s
	maxLimitPerlinNoise r
	minLimitPerlinNoise q
	random e
	seed w
	settings h
	surfaceNoise t
	buildSurfaceAndBedrock (Lnet/minecraft/server/level/WorldGenRegion;Lnet/minecraft/world/level/chunk/ChunkAccess;)V a
	codec ()Lcom/mojang/serialization/Codec; a
	computeContribution (III)D b
	fillFromNoise (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/world/level/StructureFeatureManager;Lnet/minecraft/world/level/chunk/ChunkAccess;)V b
	fillNoiseColumn ([DII)V a
	generateBaseState (DI)Lnet/minecraft/world/level/block/state/BlockState; a
	getBaseColumn (II)Lnet/minecraft/world/level/BlockGetter; a
	getBaseHeight (IILnet/minecraft/world/level/levelgen/Heightmap$Types;)I a
	getContribution (III)D a
	getGenDepth ()I e
	getMobsAt (Lnet/minecraft/world/level/biome/Biome;Lnet/minecraft/world/level/StructureFeatureManager;Lnet/minecraft/world/entity/MobCategory;Lnet/minecraft/core/BlockPos;)Ljava/util/List; a
	getRandomDensity (II)D c
	getSeaLevel ()I f
	iterateNoiseColumn (II[Lnet/minecraft/world/level/block/state/BlockState;Ljava/util/function/Predicate;)I a
	makeAndFillNoiseColumn (II)[D b
	sampleAndClampNoise (IIIDDDD)D a
	setBedrock (Lnet/minecraft/world/level/chunk/ChunkAccess;Ljava/util/Random;)V a
	spawnOriginalMobs (Lnet/minecraft/server/level/WorldGenRegion;)V a
	stable (JLnet/minecraft/world/level/levelgen/NoiseGeneratorSettings$Preset;)Z a
	withSeed (J)Lnet/minecraft/world/level/chunk/ChunkGenerator; a
net/minecraft/world/level/levelgen/NoiseGeneratorSettings ciq
	CODEC b
	DIRECT_CODEC a
	bedrockFloorPosition h
	bedrockRoofPosition g
	defaultBlock e
	defaultFluid f
	disableMobGeneration j
	noiseSettings d
	preset k
	seaLevel i
	structureSettings c
	disableMobGeneration ()Z h
	getBedrockFloorPosition ()I f
	getBedrockRoofPosition ()I e
	getDefaultBlock ()Lnet/minecraft/world/level/block/state/BlockState; c
	getDefaultFluid ()Lnet/minecraft/world/level/block/state/BlockState; d
	noiseSettings ()Lnet/minecraft/world/level/levelgen/NoiseSettings; b
	seaLevel ()I g
	stable (Lnet/minecraft/world/level/levelgen/NoiseGeneratorSettings$Preset;)Z a
	structureSettings ()Lnet/minecraft/world/level/levelgen/StructureSettings; a
net/minecraft/world/level/levelgen/NoiseGeneratorSettings$Preset ciq$a
	AMPLIFIED c
	BY_NAME h
	CAVES f
	CODEC a
	END e
	FLOATING_ISLANDS g
	NETHER d
	OVERWORLD b
	description i
	name j
	settings k
	description ()Lnet/minecraft/network/chat/Component; a
	end (Lnet/minecraft/world/level/levelgen/StructureSettings;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/levelgen/NoiseGeneratorSettings$Preset;ZZ)Lnet/minecraft/world/level/levelgen/NoiseGeneratorSettings; a
	nether (Lnet/minecraft/world/level/levelgen/StructureSettings;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/levelgen/NoiseGeneratorSettings$Preset;)Lnet/minecraft/world/level/levelgen/NoiseGeneratorSettings; a
	overworld (Lnet/minecraft/world/level/levelgen/StructureSettings;ZLnet/minecraft/world/level/levelgen/NoiseGeneratorSettings$Preset;)Lnet/minecraft/world/level/levelgen/NoiseGeneratorSettings; a
	settings ()Lnet/minecraft/world/level/levelgen/NoiseGeneratorSettings; b
net/minecraft/world/level/levelgen/NoiseSamplingSettings cir
	CODEC a
	SCALE_RANGE b
	xzFactor e
	xzScale c
	yFactor f
	yScale d
	xzFactor ()D c
	xzScale ()D a
	yFactor ()D d
	yScale ()D b
net/minecraft/world/level/levelgen/NoiseSettings cis
	CODEC a
	bottomSlideSettings e
	densityFactor h
	densityOffset i
	height b
	isAmplified m
	islandNoiseOverride l
	noiseSamplingSettings c
	noiseSizeHorizontal f
	noiseSizeVertical g
	randomDensityOffset k
	topSlideSettings d
	useSimplexSurfaceNoise j
	bottomSlideSettings ()Lnet/minecraft/world/level/levelgen/NoiseSlideSettings; d
	densityFactor ()D g
	densityOffset ()D h
	height ()I a
	isAmplified ()Z l
	islandNoiseOverride ()Z k
	noiseSamplingSettings ()Lnet/minecraft/world/level/levelgen/NoiseSamplingSettings; b
	noiseSizeHorizontal ()I e
	noiseSizeVertical ()I f
	randomDensityOffset ()Z j
	topSlideSettings ()Lnet/minecraft/world/level/levelgen/NoiseSlideSettings; c
	useSimplexSurfaceNoise ()Z i
net/minecraft/world/level/levelgen/NoiseSlideSettings cit
	CODEC a
	offset d
	size c
	target b
	offset ()I c
	size ()I b
	target ()I a
net/minecraft/world/level/levelgen/PatrolSpawner ciu
	nextTick a
	spawnPatrolMember (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Ljava/util/Random;Z)Z a
	tick (Lnet/minecraft/server/level/ServerLevel;ZZ)I a
net/minecraft/world/level/levelgen/PhantomSpawner civ
	nextTick a
	tick (Lnet/minecraft/server/level/ServerLevel;ZZ)I a
net/minecraft/world/level/levelgen/StructureSettings ciw
	CODEC a
	DEFAULTS b
	DEFAULT_STRONGHOLD c
	stronghold e
	structureConfig d
	getConfig (Lnet/minecraft/world/level/levelgen/feature/StructureFeature;)Lnet/minecraft/world/level/levelgen/feature/configurations/StructureFeatureConfiguration; a
	stronghold ()Lnet/minecraft/world/level/levelgen/feature/configurations/StrongholdConfiguration; b
	structureConfig ()Ljava/util/Map; a
net/minecraft/world/level/levelgen/WorldGenSettings cix
	CODEC a
	DEMO_SEED d
	DEMO_SETTINGS b
	LOGGER c
	dimensions h
	generateBonusChest g
	generateFeatures f
	legacyCustomOptions i
	seed e
	create (Ljava/util/Properties;)Lnet/minecraft/world/level/levelgen/WorldGenSettings; a
	dimensions ()Lnet/minecraft/core/MappedRegistry; e
	generateBonusChest ()Z d
	generateFeatures ()Z c
	guardExperimental ()Lcom/mojang/serialization/DataResult; n
	isDebug ()Z h
	isFlatWorld ()Z i
	isOldCustomizedWorld ()Z j
	levels ()Lcom/google/common/collect/ImmutableSet; g
	makeDefault ()Lnet/minecraft/world/level/levelgen/WorldGenSettings; a
	makeDefaultOverworld (J)Lnet/minecraft/world/level/levelgen/NoiseBasedChunkGenerator; a
	overworld ()Lnet/minecraft/world/level/chunk/ChunkGenerator; f
	seed ()J b
	stable ()Z o
	withBonusChest ()Lnet/minecraft/world/level/levelgen/WorldGenSettings; k
	withBonusChestToggled ()Lnet/minecraft/world/level/levelgen/WorldGenSettings; m
	withDimensions (Lnet/minecraft/core/MappedRegistry;)Lnet/minecraft/world/level/levelgen/WorldGenSettings; a
	withFeaturesToggled ()Lnet/minecraft/world/level/levelgen/WorldGenSettings; l
	withOverworld (Lnet/minecraft/core/MappedRegistry;Ljava/util/function/Supplier;Lnet/minecraft/world/level/chunk/ChunkGenerator;)Lnet/minecraft/core/MappedRegistry; a
	withOverworld (Lnet/minecraft/core/MappedRegistry;Lnet/minecraft/world/level/chunk/ChunkGenerator;)Lnet/minecraft/core/MappedRegistry; a
	withSeed (ZLjava/util/OptionalLong;)Lnet/minecraft/world/level/levelgen/WorldGenSettings; a
net/minecraft/world/level/levelgen/WorldgenRandom ciy
	count a
	consumeCount (I)V a
	getCount ()I a
	seedSlimeChunk (IIJJ)Ljava/util/Random; a
	setBaseChunkSeed (II)J a
	setDecorationSeed (JII)J a
	setFeatureSeed (JII)J b
	setLargeFeatureSeed (JII)J c
	setLargeFeatureWithSalt (JIII)J a
net/minecraft/world/level/levelgen/carver/CanyonWorldCarver ciz
	rs m
	carve (Lnet/minecraft/world/level/chunk/ChunkAccess;Ljava/util/function/Function;Ljava/util/Random;IIIIILjava/util/BitSet;Lnet/minecraft/world/level/levelgen/carver/CarverConfiguration;)Z a
	carve (Lnet/minecraft/world/level/chunk/ChunkAccess;Ljava/util/function/Function;Ljava/util/Random;IIIIILjava/util/BitSet;Lnet/minecraft/world/level/levelgen/feature/configurations/ProbabilityFeatureConfiguration;)Z a
	genCanyon (Lnet/minecraft/world/level/chunk/ChunkAccess;Ljava/util/function/Function;JIIIDDDFFFIIDLjava/util/BitSet;)V a
	isStartChunk (Ljava/util/Random;IILnet/minecraft/world/level/levelgen/carver/CarverConfiguration;)Z a
	isStartChunk (Ljava/util/Random;IILnet/minecraft/world/level/levelgen/feature/configurations/ProbabilityFeatureConfiguration;)Z a
	skip (DDDI)Z a
net/minecraft/world/level/levelgen/carver/CarverConfiguration cja
	NONE a
net/minecraft/world/level/levelgen/carver/CaveWorldCarver cjb
	carve (Lnet/minecraft/world/level/chunk/ChunkAccess;Ljava/util/function/Function;Ljava/util/Random;IIIIILjava/util/BitSet;Lnet/minecraft/world/level/levelgen/carver/CarverConfiguration;)Z a
	carve (Lnet/minecraft/world/level/chunk/ChunkAccess;Ljava/util/function/Function;Ljava/util/Random;IIIIILjava/util/BitSet;Lnet/minecraft/world/level/levelgen/feature/configurations/ProbabilityFeatureConfiguration;)Z a
	genRoom (Lnet/minecraft/world/level/chunk/ChunkAccess;Ljava/util/function/Function;JIIIDDDFDLjava/util/BitSet;)V a
	genTunnel (Lnet/minecraft/world/level/chunk/ChunkAccess;Ljava/util/function/Function;JIIIDDDFFFIIDLjava/util/BitSet;)V a
	getCaveBound ()I a
	getCaveY (Ljava/util/Random;)I b
	getThickness (Ljava/util/Random;)F a
	getYScale ()D b
	isStartChunk (Ljava/util/Random;IILnet/minecraft/world/level/levelgen/carver/CarverConfiguration;)Z a
	isStartChunk (Ljava/util/Random;IILnet/minecraft/world/level/levelgen/feature/configurations/ProbabilityFeatureConfiguration;)Z a
	skip (DDDI)Z a
net/minecraft/world/level/levelgen/carver/ConfiguredWorldCarver cjc
	CODEC a
	config c
	worldCarver b
	carve (Lnet/minecraft/world/level/chunk/ChunkAccess;Ljava/util/function/Function;Ljava/util/Random;IIIIILjava/util/BitSet;)Z a
	isStartChunk (Ljava/util/Random;II)Z a
net/minecraft/world/level/levelgen/carver/NetherWorldCarver cjd
	carveBlock (Lnet/minecraft/world/level/chunk/ChunkAccess;Ljava/util/function/Function;Ljava/util/BitSet;Ljava/util/Random;Lnet/minecraft/core/BlockPos$MutableBlockPos;Lnet/minecraft/core/BlockPos$MutableBlockPos;Lnet/minecraft/core/BlockPos$MutableBlockPos;IIIIIIIILorg/apache/commons/lang3/mutable/MutableBoolean;)Z a
	getCaveBound ()I a
	getCaveY (Ljava/util/Random;)I b
	getThickness (Ljava/util/Random;)F a
	getYScale ()D b
net/minecraft/world/level/levelgen/carver/NoneCarverConfiguration cje
	CODEC b
	INSTANCE c
net/minecraft/world/level/levelgen/carver/UnderwaterCanyonWorldCarver cjf
	carveBlock (Lnet/minecraft/world/level/chunk/ChunkAccess;Ljava/util/function/Function;Ljava/util/BitSet;Ljava/util/Random;Lnet/minecraft/core/BlockPos$MutableBlockPos;Lnet/minecraft/core/BlockPos$MutableBlockPos;Lnet/minecraft/core/BlockPos$MutableBlockPos;IIIIIIIILorg/apache/commons/lang3/mutable/MutableBoolean;)Z a
	hasWater (Lnet/minecraft/world/level/chunk/ChunkAccess;IIIIIIII)Z a
net/minecraft/world/level/levelgen/carver/UnderwaterCaveWorldCarver cjg
	carveBlock (Lnet/minecraft/world/level/chunk/ChunkAccess;Ljava/util/function/Function;Ljava/util/BitSet;Ljava/util/Random;Lnet/minecraft/core/BlockPos$MutableBlockPos;Lnet/minecraft/core/BlockPos$MutableBlockPos;Lnet/minecraft/core/BlockPos$MutableBlockPos;IIIIIIIILorg/apache/commons/lang3/mutable/MutableBoolean;)Z a
	carveBlock (Lnet/minecraft/world/level/levelgen/carver/WorldCarver;Lnet/minecraft/world/level/chunk/ChunkAccess;Ljava/util/BitSet;Ljava/util/Random;Lnet/minecraft/core/BlockPos$MutableBlockPos;IIIIIIII)Z a
	hasWater (Lnet/minecraft/world/level/chunk/ChunkAccess;IIIIIIII)Z a
net/minecraft/world/level/levelgen/carver/WorldCarver cjh
	AIR f
	CANYON c
	CAVE a
	CAVE_AIR g
	LAVA i
	NETHER_CAVE b
	UNDERWATER_CANYON d
	UNDERWATER_CAVE e
	WATER h
	configuredCodec m
	genHeight l
	liquids k
	replaceableBlocks j
	canReach (IIDDIIF)Z a
	canReplaceBlock (Lnet/minecraft/world/level/block/state/BlockState;)Z a
	canReplaceBlock (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/state/BlockState;)Z a
	carve (Lnet/minecraft/world/level/chunk/ChunkAccess;Ljava/util/function/Function;Ljava/util/Random;IIIIILjava/util/BitSet;Lnet/minecraft/world/level/levelgen/carver/CarverConfiguration;)Z a
	carveBlock (Lnet/minecraft/world/level/chunk/ChunkAccess;Ljava/util/function/Function;Ljava/util/BitSet;Ljava/util/Random;Lnet/minecraft/core/BlockPos$MutableBlockPos;Lnet/minecraft/core/BlockPos$MutableBlockPos;Lnet/minecraft/core/BlockPos$MutableBlockPos;IIIIIIIILorg/apache/commons/lang3/mutable/MutableBoolean;)Z a
	carveSphere (Lnet/minecraft/world/level/chunk/ChunkAccess;Ljava/util/function/Function;JIIIDDDDDLjava/util/BitSet;)Z a
	configuredCodec ()Lcom/mojang/serialization/Codec; c
	getRange ()I d
	hasWater (Lnet/minecraft/world/level/chunk/ChunkAccess;IIIIIIII)Z a
	isEdge (IIIIII)Z a
	isStartChunk (Ljava/util/Random;IILnet/minecraft/world/level/levelgen/carver/CarverConfiguration;)Z a
	register (Ljava/lang/String;Lnet/minecraft/world/level/levelgen/carver/WorldCarver;)Lnet/minecraft/world/level/levelgen/carver/WorldCarver; a
	skip (DDDI)Z a
net/minecraft/world/level/levelgen/feature/AbstractFlowerFeature cjj
	getCount (Lnet/minecraft/world/level/levelgen/feature/configurations/FeatureConfiguration;)I a
	getPos (Ljava/util/Random;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/levelgen/feature/configurations/FeatureConfiguration;)Lnet/minecraft/core/BlockPos; a
	getRandomFlower (Ljava/util/Random;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/levelgen/feature/configurations/FeatureConfiguration;)Lnet/minecraft/world/level/block/state/BlockState; b
	isValid (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/levelgen/feature/configurations/FeatureConfiguration;)Z a
	place (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/StructureFeatureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/levelgen/feature/configurations/FeatureConfiguration;)Z a
net/minecraft/world/level/levelgen/feature/AbstractHugeMushroomFeature cjk
	getTreeHeight (Ljava/util/Random;)I a
	getTreeRadiusForHeight (IIII)I a
	isValidPosition (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;ILnet/minecraft/core/BlockPos$MutableBlockPos;Lnet/minecraft/world/level/levelgen/feature/configurations/HugeMushroomFeatureConfiguration;)Z a
	makeCap (Lnet/minecraft/world/level/LevelAccessor;Ljava/util/Random;Lnet/minecraft/core/BlockPos;ILnet/minecraft/core/BlockPos$MutableBlockPos;Lnet/minecraft/world/level/levelgen/feature/configurations/HugeMushroomFeatureConfiguration;)V a
	place (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/StructureFeatureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/levelgen/feature/configurations/FeatureConfiguration;)Z a
	place (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/StructureFeatureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/levelgen/feature/configurations/HugeMushroomFeatureConfiguration;)Z a
	placeTrunk (Lnet/minecraft/world/level/LevelAccessor;Ljava/util/Random;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/levelgen/feature/configurations/HugeMushroomFeatureConfiguration;ILnet/minecraft/core/BlockPos$MutableBlockPos;)V a
net/minecraft/world/level/levelgen/feature/BambooFeature cjl
	BAMBOO_FINAL_LARGE ac
	BAMBOO_TOP_LARGE ad
	BAMBOO_TOP_SMALL ae
	BAMBOO_TRUNK a
	place (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/StructureFeatureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/levelgen/feature/configurations/FeatureConfiguration;)Z a
	place (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/StructureFeatureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/levelgen/feature/configurations/ProbabilityFeatureConfiguration;)Z a
net/minecraft/world/level/levelgen/feature/BasaltColumnsFeature cjm
	CANNOT_PLACE_ON a
	calculateHeight (Ljava/util/Random;Lnet/minecraft/world/level/levelgen/feature/configurations/ColumnFeatureConfiguration;)I a
	calculateReach (Ljava/util/Random;Lnet/minecraft/world/level/levelgen/feature/configurations/ColumnFeatureConfiguration;)I b
	findAir (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos$MutableBlockPos;I)Lnet/minecraft/core/BlockPos; a
	findSurface (Lnet/minecraft/world/level/LevelAccessor;ILnet/minecraft/core/BlockPos$MutableBlockPos;I)Lnet/minecraft/core/BlockPos; a
	isAirOrLavaOcean (Lnet/minecraft/world/level/LevelAccessor;ILnet/minecraft/core/BlockPos;)Z a
	place (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/StructureFeatureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/levelgen/feature/configurations/ColumnFeatureConfiguration;)Z a
	place (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/StructureFeatureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/levelgen/feature/configurations/FeatureConfiguration;)Z a
	placeColumn (Lnet/minecraft/world/level/LevelAccessor;ILnet/minecraft/core/BlockPos;II)Z a
net/minecraft/world/level/levelgen/feature/BasaltPillarFeature cjn
	place (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/StructureFeatureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/levelgen/feature/configurations/FeatureConfiguration;)Z a
	place (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/StructureFeatureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/levelgen/feature/configurations/NoneFeatureConfiguration;)Z a
	placeBaseHangOff (Lnet/minecraft/world/level/LevelAccessor;Ljava/util/Random;Lnet/minecraft/core/BlockPos;)V a
	placeHangOff (Lnet/minecraft/world/level/LevelAccessor;Ljava/util/Random;Lnet/minecraft/core/BlockPos;)Z b
net/minecraft/world/level/levelgen/feature/BastionBridgePools cjo
	bootstrap ()V a
net/minecraft/world/level/levelgen/feature/BastionFeature cjp
	getStartFactory ()Lnet/minecraft/world/level/levelgen/feature/StructureFeature$StructureStartFactory; a
	isFeatureChunk (Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/world/level/biome/BiomeSource;JLnet/minecraft/world/level/levelgen/WorldgenRandom;IILnet/minecraft/world/level/biome/Biome;Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/world/level/levelgen/feature/configurations/FeatureConfiguration;)Z a
	isFeatureChunk (Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/world/level/biome/BiomeSource;JLnet/minecraft/world/level/levelgen/WorldgenRandom;IILnet/minecraft/world/level/biome/Biome;Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/world/level/levelgen/feature/configurations/MultiJigsawConfiguration;)Z a
net/minecraft/world/level/levelgen/feature/BastionFeature$FeatureStart cjp$a
	generatePieces (Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureManager;IILnet/minecraft/world/level/biome/Biome;Lnet/minecraft/world/level/levelgen/feature/configurations/FeatureConfiguration;)V a
	generatePieces (Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureManager;IILnet/minecraft/world/level/biome/Biome;Lnet/minecraft/world/level/levelgen/feature/configurations/MultiJigsawConfiguration;)V a
net/minecraft/world/level/levelgen/feature/BastionHoglinStablePools cjq
	bootstrap ()V a
net/minecraft/world/level/levelgen/feature/BastionHousingUnitsPools cjr
	bootstrap ()V a
net/minecraft/world/level/levelgen/feature/BastionPieces cjs
	POOLS a
	addPieces (Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureManager;Lnet/minecraft/core/BlockPos;Ljava/util/List;Lnet/minecraft/world/level/levelgen/WorldgenRandom;Lnet/minecraft/world/level/levelgen/feature/configurations/MultiJigsawConfiguration;)V a
	bootstrap ()V a
net/minecraft/world/level/levelgen/feature/BastionPieces$BastionPiece cjs$a
net/minecraft/world/level/levelgen/feature/BastionSharedPools cjt
	GILDED_BLACKSTONE_REPLACEMENT_RULE a
	bootstrap ()V a
net/minecraft/world/level/levelgen/feature/BastionTreasureRoomPools cju
	bootstrap ()V a
net/minecraft/world/level/levelgen/feature/BlockBlobFeature cjv
	place (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/StructureFeatureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/levelgen/feature/configurations/BlockBlobConfiguration;)Z a
	place (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/StructureFeatureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/levelgen/feature/configurations/FeatureConfiguration;)Z a
net/minecraft/world/level/levelgen/feature/BlockPileFeature cjw
	mayPlaceOn (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)Z a
	place (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/StructureFeatureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/levelgen/feature/configurations/BlockPileConfiguration;)Z a
	place (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/StructureFeatureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/levelgen/feature/configurations/FeatureConfiguration;)Z a
	tryPlaceBlock (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Ljava/util/Random;Lnet/minecraft/world/level/levelgen/feature/configurations/BlockPileConfiguration;)V a
net/minecraft/world/level/levelgen/feature/BlueIceFeature cjx
	place (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/StructureFeatureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/levelgen/feature/configurations/FeatureConfiguration;)Z a
	place (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/StructureFeatureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/levelgen/feature/configurations/NoneFeatureConfiguration;)Z a
net/minecraft/world/level/levelgen/feature/BonusChestFeature cjy
	place (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/StructureFeatureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/levelgen/feature/configurations/FeatureConfiguration;)Z a
	place (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/StructureFeatureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/levelgen/feature/configurations/NoneFeatureConfiguration;)Z a
net/minecraft/world/level/levelgen/feature/BuriedTreasureFeature cjz
	getStartFactory ()Lnet/minecraft/world/level/levelgen/feature/StructureFeature$StructureStartFactory; a
	isFeatureChunk (Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/world/level/biome/BiomeSource;JLnet/minecraft/world/level/levelgen/WorldgenRandom;IILnet/minecraft/world/level/biome/Biome;Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/world/level/levelgen/feature/configurations/BuriedTreasureConfiguration;)Z a
	isFeatureChunk (Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/world/level/biome/BiomeSource;JLnet/minecraft/world/level/levelgen/WorldgenRandom;IILnet/minecraft/world/level/biome/Biome;Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/world/level/levelgen/feature/configurations/FeatureConfiguration;)Z a
net/minecraft/world/level/levelgen/feature/BuriedTreasureFeature$BuriedTreasureStart cjz$a
	generatePieces (Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureManager;IILnet/minecraft/world/level/biome/Biome;Lnet/minecraft/world/level/levelgen/feature/configurations/BuriedTreasureConfiguration;)V a
	generatePieces (Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureManager;IILnet/minecraft/world/level/biome/Biome;Lnet/minecraft/world/level/levelgen/feature/configurations/FeatureConfiguration;)V a
	getLocatePos ()Lnet/minecraft/core/BlockPos; a
net/minecraft/world/level/levelgen/feature/ChorusPlantFeature cka
	place (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/StructureFeatureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/levelgen/feature/configurations/FeatureConfiguration;)Z a
	place (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/StructureFeatureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/levelgen/feature/configurations/NoneFeatureConfiguration;)Z a
net/minecraft/world/level/levelgen/feature/ConfiguredFeature ckb
	CODEC b
	LOGGER c
	NOPE a
	config e
	feature d
	decorated (Lnet/minecraft/world/level/levelgen/placement/ConfiguredDecorator;)Lnet/minecraft/world/level/levelgen/feature/ConfiguredFeature; a
	place (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/StructureFeatureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/core/BlockPos;)Z a
	weighted (F)Lnet/minecraft/world/level/levelgen/feature/WeightedConfiguredFeature; a
net/minecraft/world/level/levelgen/feature/ConfiguredStructureFeature ckc
	CODEC a
	config c
	feature b
	generate (Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/world/level/biome/BiomeSource;Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureManager;JLnet/minecraft/world/level/ChunkPos;Lnet/minecraft/world/level/biome/Biome;ILnet/minecraft/world/level/levelgen/feature/configurations/StructureFeatureConfiguration;)Lnet/minecraft/world/level/levelgen/structure/StructureStart; a
net/minecraft/world/level/levelgen/feature/CoralClawFeature ckd
	placeFeature (Lnet/minecraft/world/level/LevelAccessor;Ljava/util/Random;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Z a
net/minecraft/world/level/levelgen/feature/CoralFeature cke
	place (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/StructureFeatureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/levelgen/feature/configurations/FeatureConfiguration;)Z a
	place (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/StructureFeatureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/levelgen/feature/configurations/NoneFeatureConfiguration;)Z a
	placeCoralBlock (Lnet/minecraft/world/level/LevelAccessor;Ljava/util/Random;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Z b
	placeFeature (Lnet/minecraft/world/level/LevelAccessor;Ljava/util/Random;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Z a
net/minecraft/world/level/levelgen/feature/CoralMushroomFeature ckf
	placeFeature (Lnet/minecraft/world/level/LevelAccessor;Ljava/util/Random;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Z a
net/minecraft/world/level/levelgen/feature/CoralTreeFeature ckg
	placeFeature (Lnet/minecraft/world/level/LevelAccessor;Ljava/util/Random;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Z a
net/minecraft/world/level/levelgen/feature/DecoratedFeature ckh
	place (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/StructureFeatureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/levelgen/feature/configurations/DecoratedFeatureConfiguration;)Z a
	place (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/StructureFeatureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/levelgen/feature/configurations/FeatureConfiguration;)Z a
net/minecraft/world/level/levelgen/feature/DecoratedFlowerFeature cki
net/minecraft/world/level/levelgen/feature/DefaultFlowerFeature ckj
	getCount (Lnet/minecraft/world/level/levelgen/feature/configurations/FeatureConfiguration;)I a
	getCount (Lnet/minecraft/world/level/levelgen/feature/configurations/RandomPatchConfiguration;)I a
	getPos (Ljava/util/Random;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/levelgen/feature/configurations/FeatureConfiguration;)Lnet/minecraft/core/BlockPos; a
	getPos (Ljava/util/Random;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/levelgen/feature/configurations/RandomPatchConfiguration;)Lnet/minecraft/core/BlockPos; a
	getRandomFlower (Ljava/util/Random;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/levelgen/feature/configurations/FeatureConfiguration;)Lnet/minecraft/world/level/block/state/BlockState; b
	getRandomFlower (Ljava/util/Random;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/levelgen/feature/configurations/RandomPatchConfiguration;)Lnet/minecraft/world/level/block/state/BlockState; b
	isValid (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/levelgen/feature/configurations/FeatureConfiguration;)Z a
	isValid (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/levelgen/feature/configurations/RandomPatchConfiguration;)Z a
net/minecraft/world/level/levelgen/feature/DeltaFeature ckk
	CANNOT_REPLACE a
	DIRECTIONS ac
	calculateRadius (Ljava/util/Random;Lnet/minecraft/world/level/levelgen/feature/configurations/DeltaFeatureConfiguration;)I a
	calculateRimSize (Ljava/util/Random;Lnet/minecraft/world/level/levelgen/feature/configurations/DeltaFeatureConfiguration;)I b
	findDeltaLevel (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos$MutableBlockPos;)Lnet/minecraft/core/BlockPos; a
	isClear (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/levelgen/feature/configurations/DeltaFeatureConfiguration;)Z a
	place (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/StructureFeatureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/levelgen/feature/configurations/DeltaFeatureConfiguration;)Z a
	place (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/StructureFeatureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/levelgen/feature/configurations/FeatureConfiguration;)Z a
net/minecraft/world/level/levelgen/feature/DesertPyramidFeature ckl
	getStartFactory ()Lnet/minecraft/world/level/levelgen/feature/StructureFeature$StructureStartFactory; a
net/minecraft/world/level/levelgen/feature/DesertPyramidFeature$FeatureStart ckl$a
	generatePieces (Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureManager;IILnet/minecraft/world/level/biome/Biome;Lnet/minecraft/world/level/levelgen/feature/configurations/FeatureConfiguration;)V a
	generatePieces (Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureManager;IILnet/minecraft/world/level/biome/Biome;Lnet/minecraft/world/level/levelgen/feature/configurations/NoneFeatureConfiguration;)V a
net/minecraft/world/level/levelgen/feature/DesertVillagePools ckm
	bootstrap ()V a
net/minecraft/world/level/levelgen/feature/DesertWellFeature ckn
	IS_SAND a
	sandSlab ac
	sandstone ad
	water ae
	place (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/StructureFeatureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/levelgen/feature/configurations/FeatureConfiguration;)Z a
	place (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/StructureFeatureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/levelgen/feature/configurations/NoneFeatureConfiguration;)Z a
net/minecraft/world/level/levelgen/feature/DiskReplaceFeature cko
	place (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/StructureFeatureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/levelgen/feature/configurations/DiskConfiguration;)Z a
	place (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/StructureFeatureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/levelgen/feature/configurations/FeatureConfiguration;)Z a
net/minecraft/world/level/levelgen/feature/EndCityFeature ckp
	getStartFactory ()Lnet/minecraft/world/level/levelgen/feature/StructureFeature$StructureStartFactory; a
	getYPositionForFeature (IILnet/minecraft/world/level/chunk/ChunkGenerator;)I b
	isFeatureChunk (Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/world/level/biome/BiomeSource;JLnet/minecraft/world/level/levelgen/WorldgenRandom;IILnet/minecraft/world/level/biome/Biome;Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/world/level/levelgen/feature/configurations/FeatureConfiguration;)Z a
	isFeatureChunk (Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/world/level/biome/BiomeSource;JLnet/minecraft/world/level/levelgen/WorldgenRandom;IILnet/minecraft/world/level/biome/Biome;Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/world/level/levelgen/feature/configurations/NoneFeatureConfiguration;)Z a
	linearSeparation ()Z b
net/minecraft/world/level/levelgen/feature/EndCityFeature$EndCityStart ckp$a
	generatePieces (Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureManager;IILnet/minecraft/world/level/biome/Biome;Lnet/minecraft/world/level/levelgen/feature/configurations/FeatureConfiguration;)V a
	generatePieces (Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureManager;IILnet/minecraft/world/level/biome/Biome;Lnet/minecraft/world/level/levelgen/feature/configurations/NoneFeatureConfiguration;)V a
net/minecraft/world/level/levelgen/feature/EndGatewayFeature ckq
	place (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/StructureFeatureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/levelgen/feature/configurations/EndGatewayConfiguration;)Z a
	place (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/StructureFeatureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/levelgen/feature/configurations/FeatureConfiguration;)Z a
net/minecraft/world/level/levelgen/feature/EndIslandFeature ckr
	place (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/StructureFeatureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/levelgen/feature/configurations/FeatureConfiguration;)Z a
	place (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/StructureFeatureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/levelgen/feature/configurations/NoneFeatureConfiguration;)Z a
net/minecraft/world/level/levelgen/feature/EndPodiumFeature cks
	END_PODIUM_LOCATION a
	active ac
	place (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/StructureFeatureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/levelgen/feature/configurations/FeatureConfiguration;)Z a
	place (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/StructureFeatureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/levelgen/feature/configurations/NoneFeatureConfiguration;)Z a
net/minecraft/world/level/levelgen/feature/Feature ckt
	BAMBOO K
	BASALT_COLUMNS P
	BASALT_PILLAR U
	BLOCK_PILE f
	BLUE_ICE t
	BONUS_CHEST T
	CHORUS_PLANT h
	CORAL_CLAW H
	CORAL_MUSHROOM G
	CORAL_TREE F
	DECORATED aa
	DECORATED_FLOWER ab
	DELTA_FEATURE Q
	DESERT_WELL k
	DISK w
	EMERALD_ORE i
	END_GATEWAY C
	END_ISLAND B
	END_SPIKE A
	FILL_LAYER S
	FLOWER d
	FOREST_ROCK v
	FOSSIL l
	FREEZE_TOP_LAYER q
	GLOWSTONE_BLOB p
	HUGE_BROWN_MUSHROOM n
	HUGE_FUNGUS L
	HUGE_RED_MUSHROOM m
	ICEBERG u
	ICE_PATCH x
	ICE_SPIKE o
	KELP E
	LAKE y
	MONSTER_ROOM s
	NETHER_FOREST_VEGETATION M
	NO_OP b
	NO_SURFACE_ORE V
	ORE z
	RANDOM_BOOLEAN_SELECTOR Z
	RANDOM_PATCH e
	RANDOM_RANDOM_SELECTOR W
	RANDOM_SELECTOR X
	REPLACE_BLOBS R
	SEAGRASS D
	SEA_PICKLE I
	SIMPLE_BLOCK J
	SIMPLE_RANDOM_SELECTOR Y
	SPRING g
	TREE c
	TWISTING_VINES O
	VINES r
	VOID_START_PLATFORM j
	WEEPING_VINES N
	configuredCodec a
	configured (Lnet/minecraft/world/level/levelgen/feature/configurations/FeatureConfiguration;)Lnet/minecraft/world/level/levelgen/feature/ConfiguredFeature; b
	configuredCodec ()Lcom/mojang/serialization/Codec; a
	isAir (Lnet/minecraft/world/level/LevelSimulatedReader;Lnet/minecraft/core/BlockPos;)Z b
	isDirt (Lnet/minecraft/world/level/block/Block;)Z b
	isGrassOrDirt (Lnet/minecraft/world/level/LevelSimulatedReader;Lnet/minecraft/core/BlockPos;)Z a
	isStone (Lnet/minecraft/world/level/block/Block;)Z a
	place (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/StructureFeatureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/levelgen/feature/configurations/FeatureConfiguration;)Z a
	register (Ljava/lang/String;Lnet/minecraft/world/level/levelgen/feature/Feature;)Lnet/minecraft/world/level/levelgen/feature/Feature; a
	setBlock (Lnet/minecraft/world/level/LevelWriter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V a
net/minecraft/world/level/levelgen/feature/FillLayerFeature cku
	place (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/StructureFeatureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/levelgen/feature/configurations/FeatureConfiguration;)Z a
	place (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/StructureFeatureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/levelgen/feature/configurations/LayerConfiguration;)Z a
net/minecraft/world/level/levelgen/feature/FossilFeature ckv
	SKULL_1 aj
	SKULL_1_COAL an
	SKULL_2 ak
	SKULL_2_COAL ao
	SKULL_3 al
	SKULL_3_COAL ap
	SKULL_4 am
	SKULL_4_COAL aq
	SPINE_1 a
	SPINE_1_COAL af
	SPINE_2 ac
	SPINE_2_COAL ag
	SPINE_3 ad
	SPINE_3_COAL ah
	SPINE_4 ae
	SPINE_4_COAL ai
	fossils ar
	fossilsCoal as
	place (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/StructureFeatureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/levelgen/feature/configurations/FeatureConfiguration;)Z a
	place (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/StructureFeatureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/levelgen/feature/configurations/NoneFeatureConfiguration;)Z a
net/minecraft/world/level/levelgen/feature/GlowstoneFeature ckw
	place (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/StructureFeatureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/levelgen/feature/configurations/FeatureConfiguration;)Z a
	place (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/StructureFeatureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/levelgen/feature/configurations/NoneFeatureConfiguration;)Z a
net/minecraft/world/level/levelgen/feature/HugeBrownMushroomFeature ckx
	getTreeRadiusForHeight (IIII)I a
	makeCap (Lnet/minecraft/world/level/LevelAccessor;Ljava/util/Random;Lnet/minecraft/core/BlockPos;ILnet/minecraft/core/BlockPos$MutableBlockPos;Lnet/minecraft/world/level/levelgen/feature/configurations/HugeMushroomFeatureConfiguration;)V a
net/minecraft/world/level/levelgen/feature/HugeFungusConfiguration cky
	CODEC a
	HUGE_CRIMSON_FUNGI_NOT_PLANTED_CONFIG c
	HUGE_CRIMSON_FUNGI_PLANTED_CONFIG b
	HUGE_WARPED_FUNGI_NOT_PLANTED_CONFIG e
	HUGE_WARPED_FUNGI_PLANTED_CONFIG d
	decorState i
	hatState h
	planted j
	stemState g
	validBaseState f
net/minecraft/world/level/levelgen/feature/HugeFungusFeature ckz
	findOnNyliumPosition (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/core/BlockPos$MutableBlockPos; a
	isReplaceable (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Z)Z a
	place (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/StructureFeatureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/levelgen/feature/HugeFungusConfiguration;)Z a
	place (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/StructureFeatureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/levelgen/feature/configurations/FeatureConfiguration;)Z a
	placeHat (Lnet/minecraft/world/level/LevelAccessor;Ljava/util/Random;Lnet/minecraft/world/level/levelgen/feature/HugeFungusConfiguration;Lnet/minecraft/core/BlockPos;IZ)V b
	placeHatBlock (Lnet/minecraft/world/level/LevelAccessor;Ljava/util/Random;Lnet/minecraft/world/level/levelgen/feature/HugeFungusConfiguration;Lnet/minecraft/core/BlockPos$MutableBlockPos;FFF)V a
	placeHatDropBlock (Lnet/minecraft/world/level/LevelAccessor;Ljava/util/Random;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)V a
	placeStem (Lnet/minecraft/world/level/LevelAccessor;Ljava/util/Random;Lnet/minecraft/world/level/levelgen/feature/HugeFungusConfiguration;Lnet/minecraft/core/BlockPos;IZ)V a
	tryPlaceWeepingVines (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/LevelAccessor;Ljava/util/Random;)V a
net/minecraft/world/level/levelgen/feature/HugeRedMushroomFeature cla
	getTreeRadiusForHeight (IIII)I a
	makeCap (Lnet/minecraft/world/level/LevelAccessor;Ljava/util/Random;Lnet/minecraft/core/BlockPos;ILnet/minecraft/core/BlockPos$MutableBlockPos;Lnet/minecraft/world/level/levelgen/feature/configurations/HugeMushroomFeatureConfiguration;)V a
net/minecraft/world/level/levelgen/feature/IcePatchFeature clb
	block a
	place (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/StructureFeatureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/levelgen/feature/configurations/FeatureConfiguration;)Z a
	place (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/StructureFeatureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/levelgen/feature/configurations/FeatureRadiusConfiguration;)Z a
net/minecraft/world/level/levelgen/feature/IceSpikeFeature clc
	place (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/StructureFeatureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/levelgen/feature/configurations/FeatureConfiguration;)Z a
	place (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/StructureFeatureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/levelgen/feature/configurations/NoneFeatureConfiguration;)Z a
net/minecraft/world/level/levelgen/feature/IcebergFeature cld
	belowIsAir (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Z a
	carve (IILnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/LevelAccessor;ZDLnet/minecraft/core/BlockPos;II)V a
	generateCutOut (Ljava/util/Random;Lnet/minecraft/world/level/LevelAccessor;IILnet/minecraft/core/BlockPos;ZIDI)V a
	generateIcebergBlock (Lnet/minecraft/world/level/LevelAccessor;Ljava/util/Random;Lnet/minecraft/core/BlockPos;IIIIIIZIDZLnet/minecraft/world/level/block/state/BlockState;)V a
	getEllipseC (III)I a
	heightDependentRadiusEllipse (III)I b
	heightDependentRadiusRound (Ljava/util/Random;III)I a
	heightDependentRadiusSteep (Ljava/util/Random;III)I b
	isIcebergBlock (Lnet/minecraft/world/level/block/Block;)Z c
	place (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/StructureFeatureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/levelgen/feature/configurations/BlockStateConfiguration;)Z a
	place (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/StructureFeatureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/levelgen/feature/configurations/FeatureConfiguration;)Z a
	removeFloatingSnowLayer (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;)V a
	setIcebergBlock (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/LevelAccessor;Ljava/util/Random;IIZZLnet/minecraft/world/level/block/state/BlockState;)V a
	signedDistanceCircle (IILnet/minecraft/core/BlockPos;ILjava/util/Random;)D a
	signedDistanceEllipse (IILnet/minecraft/core/BlockPos;IID)D a
	smooth (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;IIZI)V a
net/minecraft/world/level/levelgen/feature/IglooFeature cle
	getStartFactory ()Lnet/minecraft/world/level/levelgen/feature/StructureFeature$StructureStartFactory; a
net/minecraft/world/level/levelgen/feature/IglooFeature$FeatureStart cle$a
	generatePieces (Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureManager;IILnet/minecraft/world/level/biome/Biome;Lnet/minecraft/world/level/levelgen/feature/configurations/FeatureConfiguration;)V a
	generatePieces (Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureManager;IILnet/minecraft/world/level/biome/Biome;Lnet/minecraft/world/level/levelgen/feature/configurations/NoneFeatureConfiguration;)V a
net/minecraft/world/level/levelgen/feature/JunglePyramidFeature clf
	getStartFactory ()Lnet/minecraft/world/level/levelgen/feature/StructureFeature$StructureStartFactory; a
net/minecraft/world/level/levelgen/feature/JunglePyramidFeature$FeatureStart clf$a
	generatePieces (Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureManager;IILnet/minecraft/world/level/biome/Biome;Lnet/minecraft/world/level/levelgen/feature/configurations/FeatureConfiguration;)V a
	generatePieces (Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureManager;IILnet/minecraft/world/level/biome/Biome;Lnet/minecraft/world/level/levelgen/feature/configurations/NoneFeatureConfiguration;)V a
net/minecraft/world/level/levelgen/feature/KelpFeature clg
	place (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/StructureFeatureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/levelgen/feature/configurations/FeatureConfiguration;)Z a
	place (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/StructureFeatureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/levelgen/feature/configurations/NoneFeatureConfiguration;)Z a
net/minecraft/world/level/levelgen/feature/LakeFeature clh
	AIR a
	place (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/StructureFeatureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/levelgen/feature/configurations/BlockStateConfiguration;)Z a
	place (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/StructureFeatureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/levelgen/feature/configurations/FeatureConfiguration;)Z a
net/minecraft/world/level/levelgen/feature/MineshaftFeature cli
	getStartFactory ()Lnet/minecraft/world/level/levelgen/feature/StructureFeature$StructureStartFactory; a
	isFeatureChunk (Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/world/level/biome/BiomeSource;JLnet/minecraft/world/level/levelgen/WorldgenRandom;IILnet/minecraft/world/level/biome/Biome;Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/world/level/levelgen/feature/configurations/FeatureConfiguration;)Z a
	isFeatureChunk (Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/world/level/biome/BiomeSource;JLnet/minecraft/world/level/levelgen/WorldgenRandom;IILnet/minecraft/world/level/biome/Biome;Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/world/level/levelgen/feature/configurations/MineshaftConfiguration;)Z a
net/minecraft/world/level/levelgen/feature/MineshaftFeature$MineShaftStart cli$a
	generatePieces (Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureManager;IILnet/minecraft/world/level/biome/Biome;Lnet/minecraft/world/level/levelgen/feature/configurations/FeatureConfiguration;)V a
	generatePieces (Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureManager;IILnet/minecraft/world/level/biome/Biome;Lnet/minecraft/world/level/levelgen/feature/configurations/MineshaftConfiguration;)V a
net/minecraft/world/level/levelgen/feature/MineshaftFeature$Type cli$b
	$VALUES f
	BY_NAME d
	CODEC c
	MESA b
	NORMAL a
	name e
	byId (I)Lnet/minecraft/world/level/levelgen/feature/MineshaftFeature$Type; a
	byName (Ljava/lang/String;)Lnet/minecraft/world/level/levelgen/feature/MineshaftFeature$Type; a
	getName ()Ljava/lang/String; b
	getSerializedName ()Ljava/lang/String; a
net/minecraft/world/level/levelgen/feature/MonsterRoomFeature clj
	AIR ad
	LOGGER a
	MOBS ac
	place (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/StructureFeatureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/levelgen/feature/configurations/FeatureConfiguration;)Z a
	place (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/StructureFeatureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/levelgen/feature/configurations/NoneFeatureConfiguration;)Z a
	randomEntityId (Ljava/util/Random;)Lnet/minecraft/world/entity/EntityType; a
net/minecraft/world/level/levelgen/feature/NetherForestVegetationFeature clk
	place (Lnet/minecraft/world/level/LevelAccessor;Ljava/util/Random;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/levelgen/feature/configurations/BlockPileConfiguration;II)Z a
	place (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/StructureFeatureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/levelgen/feature/configurations/BlockPileConfiguration;)Z a
	place (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/StructureFeatureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/levelgen/feature/configurations/FeatureConfiguration;)Z a
net/minecraft/world/level/levelgen/feature/NetherFortressFeature cll
	FORTRESS_ENEMIES u
	getSpecialEnemies ()Ljava/util/List; c
	getStartFactory ()Lnet/minecraft/world/level/levelgen/feature/StructureFeature$StructureStartFactory; a
	isFeatureChunk (Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/world/level/biome/BiomeSource;JLnet/minecraft/world/level/levelgen/WorldgenRandom;IILnet/minecraft/world/level/biome/Biome;Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/world/level/levelgen/feature/configurations/FeatureConfiguration;)Z a
	isFeatureChunk (Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/world/level/biome/BiomeSource;JLnet/minecraft/world/level/levelgen/WorldgenRandom;IILnet/minecraft/world/level/biome/Biome;Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/world/level/levelgen/feature/configurations/NoneFeatureConfiguration;)Z a
net/minecraft/world/level/levelgen/feature/NetherFortressFeature$NetherBridgeStart cll$a
	generatePieces (Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureManager;IILnet/minecraft/world/level/biome/Biome;Lnet/minecraft/world/level/levelgen/feature/configurations/FeatureConfiguration;)V a
	generatePieces (Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureManager;IILnet/minecraft/world/level/biome/Biome;Lnet/minecraft/world/level/levelgen/feature/configurations/NoneFeatureConfiguration;)V a
net/minecraft/world/level/levelgen/feature/NoOpFeature clm
	place (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/StructureFeatureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/levelgen/feature/configurations/FeatureConfiguration;)Z a
	place (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/StructureFeatureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/levelgen/feature/configurations/NoneFeatureConfiguration;)Z a
net/minecraft/world/level/levelgen/feature/NoSurfaceOreFeature cln
	getRandomPlacementInOneAxisRelativeToOrigin (Ljava/util/Random;I)I a
	isFacingAir (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;)Z a
	offsetTargetPos (Lnet/minecraft/core/BlockPos$MutableBlockPos;Ljava/util/Random;Lnet/minecraft/core/BlockPos;I)V a
	place (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/StructureFeatureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/levelgen/feature/configurations/FeatureConfiguration;)Z a
	place (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/StructureFeatureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/levelgen/feature/configurations/OreConfiguration;)Z a
net/minecraft/world/level/levelgen/feature/OceanMonumentFeature clo
	MONUMENT_ENEMIES u
	getSpecialEnemies ()Ljava/util/List; c
	getStartFactory ()Lnet/minecraft/world/level/levelgen/feature/StructureFeature$StructureStartFactory; a
	isFeatureChunk (Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/world/level/biome/BiomeSource;JLnet/minecraft/world/level/levelgen/WorldgenRandom;IILnet/minecraft/world/level/biome/Biome;Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/world/level/levelgen/feature/configurations/FeatureConfiguration;)Z a
	isFeatureChunk (Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/world/level/biome/BiomeSource;JLnet/minecraft/world/level/levelgen/WorldgenRandom;IILnet/minecraft/world/level/biome/Biome;Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/world/level/levelgen/feature/configurations/NoneFeatureConfiguration;)Z a
	linearSeparation ()Z b
net/minecraft/world/level/levelgen/feature/OceanMonumentFeature$OceanMonumentStart clo$a
	isCreated e
	generatePieces (II)V b
	generatePieces (Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureManager;IILnet/minecraft/world/level/biome/Biome;Lnet/minecraft/world/level/levelgen/feature/configurations/FeatureConfiguration;)V a
	generatePieces (Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureManager;IILnet/minecraft/world/level/biome/Biome;Lnet/minecraft/world/level/levelgen/feature/configurations/NoneFeatureConfiguration;)V a
	placeInChunk (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/StructureFeatureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Lnet/minecraft/world/level/ChunkPos;)V a
net/minecraft/world/level/levelgen/feature/OreFeature clp
	doPlace (Lnet/minecraft/world/level/LevelAccessor;Ljava/util/Random;Lnet/minecraft/world/level/levelgen/feature/configurations/OreConfiguration;DDDDDDIIIII)Z a
	place (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/StructureFeatureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/levelgen/feature/configurations/FeatureConfiguration;)Z a
	place (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/StructureFeatureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/levelgen/feature/configurations/OreConfiguration;)Z a
net/minecraft/world/level/levelgen/feature/PillagerOutpostFeature clq
	OUTPOST_ENEMIES u
	getSpecialEnemies ()Ljava/util/List; c
	getStartFactory ()Lnet/minecraft/world/level/levelgen/feature/StructureFeature$StructureStartFactory; a
	isFeatureChunk (Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/world/level/biome/BiomeSource;JLnet/minecraft/world/level/levelgen/WorldgenRandom;IILnet/minecraft/world/level/biome/Biome;Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/world/level/levelgen/feature/configurations/FeatureConfiguration;)Z a
	isFeatureChunk (Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/world/level/biome/BiomeSource;JLnet/minecraft/world/level/levelgen/WorldgenRandom;IILnet/minecraft/world/level/biome/Biome;Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/world/level/levelgen/feature/configurations/NoneFeatureConfiguration;)Z a
net/minecraft/world/level/levelgen/feature/PillagerOutpostFeature$FeatureStart clq$a
	generatePieces (Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureManager;IILnet/minecraft/world/level/biome/Biome;Lnet/minecraft/world/level/levelgen/feature/configurations/FeatureConfiguration;)V a
	generatePieces (Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureManager;IILnet/minecraft/world/level/biome/Biome;Lnet/minecraft/world/level/levelgen/feature/configurations/NoneFeatureConfiguration;)V a
net/minecraft/world/level/levelgen/feature/PlainVillagePools clr
	bootstrap ()V a
net/minecraft/world/level/levelgen/feature/RandomBooleanSelectorFeature cls
	place (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/StructureFeatureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/levelgen/feature/configurations/FeatureConfiguration;)Z a
	place (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/StructureFeatureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/levelgen/feature/configurations/RandomBooleanFeatureConfiguration;)Z a
net/minecraft/world/level/levelgen/feature/RandomPatchFeature clt
	place (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/StructureFeatureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/levelgen/feature/configurations/FeatureConfiguration;)Z a
	place (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/StructureFeatureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/levelgen/feature/configurations/RandomPatchConfiguration;)Z a
net/minecraft/world/level/levelgen/feature/RandomRandomFeature clu
	place (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/StructureFeatureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/levelgen/feature/configurations/FeatureConfiguration;)Z a
	place (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/StructureFeatureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/levelgen/feature/configurations/RandomRandomFeatureConfiguration;)Z a
net/minecraft/world/level/levelgen/feature/RandomSelectorFeature clv
	place (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/StructureFeatureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/levelgen/feature/configurations/FeatureConfiguration;)Z a
	place (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/StructureFeatureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/levelgen/feature/configurations/RandomFeatureConfiguration;)Z a
net/minecraft/world/level/levelgen/feature/ReplaceBlobsFeature clw
	calculateReach (Ljava/util/Random;Lnet/minecraft/world/level/levelgen/feature/configurations/ReplaceSpheroidConfiguration;)Lnet/minecraft/core/Vec3i; a
	findTarget (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos$MutableBlockPos;Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/core/BlockPos; a
	place (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/StructureFeatureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/levelgen/feature/configurations/FeatureConfiguration;)Z a
	place (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/StructureFeatureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/levelgen/feature/configurations/ReplaceSpheroidConfiguration;)Z a
net/minecraft/world/level/levelgen/feature/ReplaceBlockFeature clx
	place (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/StructureFeatureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/levelgen/feature/configurations/FeatureConfiguration;)Z a
	place (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/StructureFeatureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/levelgen/feature/configurations/ReplaceBlockConfiguration;)Z a
net/minecraft/world/level/levelgen/feature/RuinedPortalFeature cly
	STRUCTURE_LOCATION_GIANT_PORTALS v
	STRUCTURE_LOCATION_PORTALS u
	findSuitableY (Ljava/util/Random;Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/world/level/levelgen/structure/RuinedPortalPiece$VerticalPlacement;ZIILnet/minecraft/world/level/levelgen/structure/BoundingBox;)I b
	getRandomWithinInterval (Ljava/util/Random;II)I b
	getStartFactory ()Lnet/minecraft/world/level/levelgen/feature/StructureFeature$StructureStartFactory; a
	isCold (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/biome/Biome;)Z b
	randomIntInclusive (Ljava/util/Random;II)I a
net/minecraft/world/level/levelgen/feature/RuinedPortalFeature$FeatureStart cly$a
	generatePieces (Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureManager;IILnet/minecraft/world/level/biome/Biome;Lnet/minecraft/world/level/levelgen/feature/configurations/FeatureConfiguration;)V a
	generatePieces (Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureManager;IILnet/minecraft/world/level/biome/Biome;Lnet/minecraft/world/level/levelgen/feature/configurations/RuinedPortalConfiguration;)V a
net/minecraft/world/level/levelgen/feature/RuinedPortalFeature$Type cly$b
	$VALUES k
	BY_NAME i
	CODEC h
	DESERT b
	JUNGLE c
	MOUNTAIN e
	NETHER g
	OCEAN f
	STANDARD a
	SWAMP d
	name j
	byName (Ljava/lang/String;)Lnet/minecraft/world/level/levelgen/feature/RuinedPortalFeature$Type; a
	getName ()Ljava/lang/String; b
	getSerializedName ()Ljava/lang/String; a
net/minecraft/world/level/levelgen/feature/SavannaVillagePools clz
	bootstrap ()V a
net/minecraft/world/level/levelgen/feature/SeaPickleFeature cma
	place (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/StructureFeatureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/levelgen/feature/configurations/CountFeatureConfiguration;)Z a
	place (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/StructureFeatureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/levelgen/feature/configurations/FeatureConfiguration;)Z a
net/minecraft/world/level/levelgen/feature/SeagrassFeature cmb
	place (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/StructureFeatureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/levelgen/feature/configurations/FeatureConfiguration;)Z a
	place (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/StructureFeatureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/levelgen/feature/configurations/SeagrassFeatureConfiguration;)Z a
net/minecraft/world/level/levelgen/feature/ShipwreckFeature cmc
	getStartFactory ()Lnet/minecraft/world/level/levelgen/feature/StructureFeature$StructureStartFactory; a
net/minecraft/world/level/levelgen/feature/ShipwreckFeature$FeatureStart cmc$a
	generatePieces (Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureManager;IILnet/minecraft/world/level/biome/Biome;Lnet/minecraft/world/level/levelgen/feature/configurations/FeatureConfiguration;)V a
	generatePieces (Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureManager;IILnet/minecraft/world/level/biome/Biome;Lnet/minecraft/world/level/levelgen/feature/configurations/ShipwreckConfiguration;)V a
net/minecraft/world/level/levelgen/feature/SimpleBlockFeature cmd
	place (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/StructureFeatureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/levelgen/feature/configurations/FeatureConfiguration;)Z a
	place (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/StructureFeatureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/levelgen/feature/configurations/SimpleBlockConfiguration;)Z a
net/minecraft/world/level/levelgen/feature/SimpleRandomSelectorFeature cme
	place (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/StructureFeatureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/levelgen/feature/configurations/FeatureConfiguration;)Z a
	place (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/StructureFeatureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/levelgen/feature/configurations/SimpleRandomFeatureConfiguration;)Z a
net/minecraft/world/level/levelgen/feature/SimulatedFeature cmf
	simulate (Lnet/minecraft/server/level/FeatureSimulator;Ljava/util/Random;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/levelgen/feature/configurations/FeatureConfiguration;)V a
net/minecraft/world/level/levelgen/feature/SnowAndFreezeFeature cmg
	place (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/StructureFeatureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/levelgen/feature/configurations/FeatureConfiguration;)Z a
	place (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/StructureFeatureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/levelgen/feature/configurations/NoneFeatureConfiguration;)Z a
net/minecraft/world/level/levelgen/feature/SnowyVillagePools cmh
	bootstrap ()V a
net/minecraft/world/level/levelgen/feature/SpikeFeature cmi
	SPIKE_CACHE a
	getSpikesForLevel (Lnet/minecraft/world/level/WorldGenLevel;)Ljava/util/List; a
	place (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/StructureFeatureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/levelgen/feature/configurations/FeatureConfiguration;)Z a
	place (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/StructureFeatureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/levelgen/feature/configurations/SpikeConfiguration;)Z a
	placeSpike (Lnet/minecraft/world/level/LevelAccessor;Ljava/util/Random;Lnet/minecraft/world/level/levelgen/feature/configurations/SpikeConfiguration;Lnet/minecraft/world/level/levelgen/feature/SpikeFeature$EndSpike;)V a
net/minecraft/world/level/levelgen/feature/SpikeFeature$EndSpike cmi$a
	CODEC a
	centerX b
	centerZ c
	guarded f
	height e
	radius d
	topBoundingBox g
	getCenterX ()I a
	getCenterZ ()I b
	getHeight ()I d
	getRadius ()I c
	getTopBoundingBox ()Lnet/minecraft/world/phys/AABB; f
	isCenterWithinChunk (Lnet/minecraft/core/BlockPos;)Z a
	isGuarded ()Z e
net/minecraft/world/level/levelgen/feature/SpikeFeature$SpikeCacheLoader cmi$b
	load (Ljava/lang/Long;)Ljava/util/List; a
net/minecraft/world/level/levelgen/feature/SpringFeature cmj
	place (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/StructureFeatureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/levelgen/feature/configurations/FeatureConfiguration;)Z a
	place (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/StructureFeatureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/levelgen/feature/configurations/SpringConfiguration;)Z a
net/minecraft/world/level/levelgen/feature/StrongholdFeature cmk
	getStartFactory ()Lnet/minecraft/world/level/levelgen/feature/StructureFeature$StructureStartFactory; a
	isFeatureChunk (Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/world/level/biome/BiomeSource;JLnet/minecraft/world/level/levelgen/WorldgenRandom;IILnet/minecraft/world/level/biome/Biome;Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/world/level/levelgen/feature/configurations/FeatureConfiguration;)Z a
	isFeatureChunk (Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/world/level/biome/BiomeSource;JLnet/minecraft/world/level/levelgen/WorldgenRandom;IILnet/minecraft/world/level/biome/Biome;Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/world/level/levelgen/feature/configurations/NoneFeatureConfiguration;)Z a
net/minecraft/world/level/levelgen/feature/StrongholdFeature$StrongholdStart cmk$a
	seed e
	generatePieces (Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureManager;IILnet/minecraft/world/level/biome/Biome;Lnet/minecraft/world/level/levelgen/feature/configurations/FeatureConfiguration;)V a
	generatePieces (Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureManager;IILnet/minecraft/world/level/biome/Biome;Lnet/minecraft/world/level/levelgen/feature/configurations/NoneFeatureConfiguration;)V a
net/minecraft/world/level/levelgen/feature/StructureFeature cml
	BASTION_REMNANT s
	BURIED_TREASURE p
	DESERT_PYRAMID f
	END_CITY o
	IGLOO g
	JUNGLE_TEMPLE e
	LOGGER v
	MINESHAFT c
	NETHER_BRIDGE n
	NETHER_FOSSIL r
	NOISE_AFFECTING_FEATURES t
	OCEAN_MONUMENT l
	OCEAN_RUIN m
	PILLAGER_OUTPOST b
	RUINED_PORTAL h
	SHIPWRECK i
	STEP u
	STRONGHOLD k
	STRUCTURES_REGISTRY a
	SWAMP_HUT j
	VILLAGE q
	WOODLAND_MANSION d
	configuredStructureCodec w
	bootstrap ()V g
	configured (Lnet/minecraft/world/level/levelgen/feature/configurations/FeatureConfiguration;)Lnet/minecraft/world/level/levelgen/feature/ConfiguredStructureFeature; a
	configuredStructureCodec ()Lcom/mojang/serialization/Codec; h
	createStart (IILnet/minecraft/world/level/levelgen/structure/BoundingBox;IJ)Lnet/minecraft/world/level/levelgen/structure/StructureStart; a
	generate (Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/world/level/biome/BiomeSource;Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureManager;JLnet/minecraft/world/level/ChunkPos;Lnet/minecraft/world/level/biome/Biome;ILnet/minecraft/world/level/levelgen/WorldgenRandom;Lnet/minecraft/world/level/levelgen/feature/configurations/StructureFeatureConfiguration;Lnet/minecraft/world/level/levelgen/feature/configurations/FeatureConfiguration;)Lnet/minecraft/world/level/levelgen/structure/StructureStart; a
	getFeatureName ()Ljava/lang/String; i
	getNearestGeneratedFeature (Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/world/level/StructureFeatureManager;Lnet/minecraft/core/BlockPos;IZJLnet/minecraft/world/level/levelgen/feature/configurations/StructureFeatureConfiguration;)Lnet/minecraft/core/BlockPos; a
	getPotentialFeatureChunk (Lnet/minecraft/world/level/levelgen/feature/configurations/StructureFeatureConfiguration;JLnet/minecraft/world/level/levelgen/WorldgenRandom;II)Lnet/minecraft/world/level/ChunkPos; a
	getSpecialAnimals ()Ljava/util/List; j
	getSpecialEnemies ()Ljava/util/List; c
	getStartFactory ()Lnet/minecraft/world/level/levelgen/feature/StructureFeature$StructureStartFactory; a
	isFeatureChunk (Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/world/level/biome/BiomeSource;JLnet/minecraft/world/level/levelgen/WorldgenRandom;IILnet/minecraft/world/level/biome/Biome;Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/world/level/levelgen/feature/configurations/FeatureConfiguration;)Z a
	linearSeparation ()Z b
	loadStaticStart (Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureManager;Lnet/minecraft/nbt/CompoundTag;J)Lnet/minecraft/world/level/levelgen/structure/StructureStart; a
	register (Ljava/lang/String;Lnet/minecraft/world/level/levelgen/feature/StructureFeature;Lnet/minecraft/world/level/levelgen/GenerationStep$Decoration;)Lnet/minecraft/world/level/levelgen/feature/StructureFeature; a
	step ()Lnet/minecraft/world/level/levelgen/GenerationStep$Decoration; f
net/minecraft/world/level/levelgen/feature/StructureFeature$StructureStartFactory cml$a
net/minecraft/world/level/levelgen/feature/StructurePieceType cmm
	BASTION_REMNANT af
	BURIED_TREASURE_PIECE ac
	DESERT_PYRAMID_PIECE N
	END_CITY_PIECE aa
	IGLOO K
	JUNGLE_PYRAMID_PIECE I
	MINE_SHAFT_CORRIDOR a
	MINE_SHAFT_CROSSING b
	MINE_SHAFT_ROOM c
	MINE_SHAFT_STAIRS d
	NETHER_FORTRESS_BRIDGE_CROSSING g
	NETHER_FORTRESS_BRIDGE_END_FILLER h
	NETHER_FORTRESS_BRIDGE_STRAIGHT i
	NETHER_FORTRESS_CASTLE_CORRIDOR_STAIRS j
	NETHER_FORTRESS_CASTLE_CORRIDOR_T_BALCONY k
	NETHER_FORTRESS_CASTLE_ENTRANCE l
	NETHER_FORTRESS_CASTLE_SMALL_CORRIDOR o
	NETHER_FORTRESS_CASTLE_SMALL_CORRIDOR_CROSSING m
	NETHER_FORTRESS_CASTLE_SMALL_CORRIDOR_LEFT_TURN n
	NETHER_FORTRESS_CASTLE_SMALL_CORRIDOR_RIGHT_TURN p
	NETHER_FORTRESS_CASTLE_STALK_ROOM q
	NETHER_FORTRESS_MONSTER_THRONE r
	NETHER_FORTRESS_ROOM_CROSSING s
	NETHER_FORTRESS_STAIRS_ROOM t
	NETHER_FORTRESS_START u
	NETHER_FOSSIL ae
	OCEAN_MONUMENT_BUILDING O
	OCEAN_MONUMENT_CORE_ROOM P
	OCEAN_MONUMENT_DOUBLE_XY_ROOM R
	OCEAN_MONUMENT_DOUBLE_X_ROOM Q
	OCEAN_MONUMENT_DOUBLE_YZ_ROOM T
	OCEAN_MONUMENT_DOUBLE_Y_ROOM S
	OCEAN_MONUMENT_DOUBLE_Z_ROOM U
	OCEAN_MONUMENT_ENTRY_ROOM V
	OCEAN_MONUMENT_PENTHOUSE W
	OCEAN_MONUMENT_SIMPLE_ROOM X
	OCEAN_MONUMENT_SIMPLE_TOP_ROOM Y
	OCEAN_MONUMENT_WING_ROOM Z
	OCEAN_RUIN J
	PILLAGER_OUTPOST e
	RUINED_PORTAL L
	RUNTIME ag
	SHIPWRECK_PIECE ad
	STRONGHOLD_CHEST_CORRIDOR v
	STRONGHOLD_FILLER_CORRIDOR w
	STRONGHOLD_FIVE_CROSSING x
	STRONGHOLD_LEFT_TURN y
	STRONGHOLD_LIBRARY z
	STRONGHOLD_PORTAL_ROOM A
	STRONGHOLD_PRISON_HALL B
	STRONGHOLD_RIGHT_TURN C
	STRONGHOLD_ROOM_CROSSING D
	STRONGHOLD_STAIRS_DOWN E
	STRONGHOLD_START F
	STRONGHOLD_STRAIGHT G
	STRONGHOLD_STRAIGHT_STAIRS_DOWN H
	SWAMPLAND_HUT M
	VILLAGE f
	WOODLAND_MANSION_PIECE ab
	setPieceId (Lnet/minecraft/world/level/levelgen/feature/StructurePieceType;Ljava/lang/String;)Lnet/minecraft/world/level/levelgen/feature/StructurePieceType; a
net/minecraft/world/level/levelgen/feature/SwamplandHutFeature cmn
	SWAMPHUT_ANIMALS v
	SWAMPHUT_ENEMIES u
	getSpecialAnimals ()Ljava/util/List; j
	getSpecialEnemies ()Ljava/util/List; c
	getStartFactory ()Lnet/minecraft/world/level/levelgen/feature/StructureFeature$StructureStartFactory; a
net/minecraft/world/level/levelgen/feature/SwamplandHutFeature$FeatureStart cmn$a
	generatePieces (Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureManager;IILnet/minecraft/world/level/biome/Biome;Lnet/minecraft/world/level/levelgen/feature/configurations/FeatureConfiguration;)V a
	generatePieces (Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureManager;IILnet/minecraft/world/level/biome/Biome;Lnet/minecraft/world/level/levelgen/feature/configurations/NoneFeatureConfiguration;)V a
net/minecraft/world/level/levelgen/feature/TaigaVillagePools cmo
	bootstrap ()V a
net/minecraft/world/level/levelgen/feature/TreeFeature cmp
	doPlace (Lnet/minecraft/world/level/LevelSimulatedRW;Ljava/util/Random;Lnet/minecraft/core/BlockPos;Ljava/util/Set;Ljava/util/Set;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Lnet/minecraft/world/level/levelgen/feature/configurations/TreeConfiguration;)Z a
	getMaxFreeTreeHeight (Lnet/minecraft/world/level/LevelSimulatedReader;ILnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/levelgen/feature/configurations/TreeConfiguration;)I a
	isAirOrLeaves (Lnet/minecraft/world/level/LevelSimulatedReader;Lnet/minecraft/core/BlockPos;)Z d
	isBlockWater (Lnet/minecraft/world/level/LevelSimulatedReader;Lnet/minecraft/core/BlockPos;)Z g
	isFree (Lnet/minecraft/world/level/LevelSimulatedReader;Lnet/minecraft/core/BlockPos;)Z c
	isGrassOrDirtOrFarmland (Lnet/minecraft/world/level/LevelSimulatedReader;Lnet/minecraft/core/BlockPos;)Z h
	isReplaceablePlant (Lnet/minecraft/world/level/LevelSimulatedReader;Lnet/minecraft/core/BlockPos;)Z i
	isVine (Lnet/minecraft/world/level/LevelSimulatedReader;Lnet/minecraft/core/BlockPos;)Z f
	place (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/StructureFeatureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/levelgen/feature/configurations/FeatureConfiguration;)Z a
	place (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/StructureFeatureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/levelgen/feature/configurations/TreeConfiguration;)Z a
	setBlock (Lnet/minecraft/world/level/LevelWriter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V a
	setBlockKnownShape (Lnet/minecraft/world/level/LevelWriter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V b
	simulate (Lnet/minecraft/server/level/FeatureSimulator;Ljava/util/Random;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/levelgen/feature/configurations/FeatureConfiguration;)V a
	simulate (Lnet/minecraft/server/level/FeatureSimulator;Ljava/util/Random;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/levelgen/feature/configurations/TreeConfiguration;)V a
	updateLeaves (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Ljava/util/Set;Ljava/util/Set;)Lnet/minecraft/world/phys/shapes/DiscreteVoxelShape; a
	validTreePos (Lnet/minecraft/world/level/LevelSimulatedReader;Lnet/minecraft/core/BlockPos;)Z e
net/minecraft/world/level/levelgen/feature/TwistingVinesFeature cmq
	findFirstAirBlockAboveGround (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos$MutableBlockPos;)Z a
	isInvalidPlacementLocation (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;)Z a
	place (Lnet/minecraft/world/level/LevelAccessor;Ljava/util/Random;Lnet/minecraft/core/BlockPos;III)Z a
	place (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/StructureFeatureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/levelgen/feature/configurations/FeatureConfiguration;)Z a
	place (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/StructureFeatureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/levelgen/feature/configurations/NoneFeatureConfiguration;)Z a
	placeTwistingVines (Lnet/minecraft/world/level/LevelAccessor;Ljava/util/Random;Lnet/minecraft/core/BlockPos;III)V b
	placeWeepingVinesColumn (Lnet/minecraft/world/level/LevelAccessor;Ljava/util/Random;Lnet/minecraft/core/BlockPos$MutableBlockPos;III)V a
net/minecraft/world/level/levelgen/feature/VillageFeature cmr
	getStartFactory ()Lnet/minecraft/world/level/levelgen/feature/StructureFeature$StructureStartFactory; a
net/minecraft/world/level/levelgen/feature/VillageFeature$FeatureStart cmr$a
	generatePieces (Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureManager;IILnet/minecraft/world/level/biome/Biome;Lnet/minecraft/world/level/levelgen/feature/configurations/FeatureConfiguration;)V a
	generatePieces (Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureManager;IILnet/minecraft/world/level/biome/Biome;Lnet/minecraft/world/level/levelgen/feature/configurations/JigsawConfiguration;)V a
net/minecraft/world/level/levelgen/feature/VillagePieces cms
	addPieces (Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureManager;Lnet/minecraft/core/BlockPos;Ljava/util/List;Lnet/minecraft/world/level/levelgen/WorldgenRandom;Lnet/minecraft/world/level/levelgen/feature/configurations/JigsawConfiguration;)V a
	bootstrap ()V a
net/minecraft/world/level/levelgen/feature/VillagePieces$VillagePiece cms$a
net/minecraft/world/level/levelgen/feature/VinesFeature cmt
	DIRECTIONS a
	place (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/StructureFeatureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/levelgen/feature/configurations/FeatureConfiguration;)Z a
	place (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/StructureFeatureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/levelgen/feature/configurations/NoneFeatureConfiguration;)Z a
net/minecraft/world/level/levelgen/feature/VoidStartPlatformFeature cmu
	PLATFORM_ORIGIN a
	PLATFORM_ORIGIN_CHUNK ac
	checkerboardDistance (IIII)I a
	place (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/StructureFeatureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/levelgen/feature/configurations/FeatureConfiguration;)Z a
	place (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/StructureFeatureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/levelgen/feature/configurations/NoneFeatureConfiguration;)Z a
net/minecraft/world/level/levelgen/feature/WeepingVinesFeature cmv
	DIRECTIONS a
	place (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/StructureFeatureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/levelgen/feature/configurations/FeatureConfiguration;)Z a
	place (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/StructureFeatureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/levelgen/feature/configurations/NoneFeatureConfiguration;)Z a
	placeRoofNetherWart (Lnet/minecraft/world/level/LevelAccessor;Ljava/util/Random;Lnet/minecraft/core/BlockPos;)V a
	placeRoofWeepingVines (Lnet/minecraft/world/level/LevelAccessor;Ljava/util/Random;Lnet/minecraft/core/BlockPos;)V b
	placeWeepingVinesColumn (Lnet/minecraft/world/level/LevelAccessor;Ljava/util/Random;Lnet/minecraft/core/BlockPos$MutableBlockPos;III)V a
net/minecraft/world/level/levelgen/feature/WeightedConfiguredFeature cmw
	CODEC a
	chance c
	feature b
	place (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/StructureFeatureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/core/BlockPos;)Z a
net/minecraft/world/level/levelgen/feature/WoodlandMansionFeature cmx
	getStartFactory ()Lnet/minecraft/world/level/levelgen/feature/StructureFeature$StructureStartFactory; a
	isFeatureChunk (Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/world/level/biome/BiomeSource;JLnet/minecraft/world/level/levelgen/WorldgenRandom;IILnet/minecraft/world/level/biome/Biome;Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/world/level/levelgen/feature/configurations/FeatureConfiguration;)Z a
	isFeatureChunk (Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/world/level/biome/BiomeSource;JLnet/minecraft/world/level/levelgen/WorldgenRandom;IILnet/minecraft/world/level/biome/Biome;Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/world/level/levelgen/feature/configurations/NoneFeatureConfiguration;)Z a
	linearSeparation ()Z b
net/minecraft/world/level/levelgen/feature/WoodlandMansionFeature$WoodlandMansionStart cmx$a
	generatePieces (Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureManager;IILnet/minecraft/world/level/biome/Biome;Lnet/minecraft/world/level/levelgen/feature/configurations/FeatureConfiguration;)V a
	generatePieces (Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureManager;IILnet/minecraft/world/level/biome/Biome;Lnet/minecraft/world/level/levelgen/feature/configurations/NoneFeatureConfiguration;)V a
	placeInChunk (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/StructureFeatureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Lnet/minecraft/world/level/ChunkPos;)V a
net/minecraft/world/level/levelgen/feature/blockplacers/BlockPlacer cmy
	CODEC a
	place (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Ljava/util/Random;)V a
	type ()Lnet/minecraft/world/level/levelgen/feature/blockplacers/BlockPlacerType; a
net/minecraft/world/level/levelgen/feature/blockplacers/BlockPlacerType cmz
	COLUMN_PLACER c
	DOUBLE_PLANT_PLACER b
	SIMPLE_BLOCK_PLACER a
	codec d
	codec ()Lcom/mojang/serialization/Codec; a
	register (Ljava/lang/String;Lcom/mojang/serialization/Codec;)Lnet/minecraft/world/level/levelgen/feature/blockplacers/BlockPlacerType; a
net/minecraft/world/level/levelgen/feature/blockplacers/ColumnPlacer cna
	CODEC b
	extraSize d
	minSize c
	place (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Ljava/util/Random;)V a
	type ()Lnet/minecraft/world/level/levelgen/feature/blockplacers/BlockPlacerType; a
net/minecraft/world/level/levelgen/feature/blockplacers/DoublePlantPlacer cnb
	CODEC b
	INSTANCE c
	place (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Ljava/util/Random;)V a
	type ()Lnet/minecraft/world/level/levelgen/feature/blockplacers/BlockPlacerType; a
net/minecraft/world/level/levelgen/feature/blockplacers/SimpleBlockPlacer cnc
	CODEC b
	INSTANCE c
	place (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Ljava/util/Random;)V a
	type ()Lnet/minecraft/world/level/levelgen/feature/blockplacers/BlockPlacerType; a
net/minecraft/world/level/levelgen/feature/configurations/BlockBlobConfiguration cne
	CODEC a
	startRadius c
	state b
net/minecraft/world/level/levelgen/feature/configurations/BlockPileConfiguration cnf
	CODEC a
	stateProvider b
net/minecraft/world/level/levelgen/feature/configurations/BlockStateConfiguration cng
	CODEC a
	state b
net/minecraft/world/level/levelgen/feature/configurations/BuriedTreasureConfiguration cnh
	CODEC a
	probability b
net/minecraft/world/level/levelgen/feature/configurations/ChanceRangeDecoratorConfiguration cni
	CODEC a
	bottomOffset c
	chance b
	top e
	topOffset d
net/minecraft/world/level/levelgen/feature/configurations/ColumnFeatureConfiguration cnj
	CODEC a
	maximumHeight e
	maximumReach c
	minimumHeight d
	minimumReach b
net/minecraft/world/level/levelgen/feature/configurations/ColumnFeatureConfiguration$Builder cnj$a
	maxHeight d
	maxReach b
	minHeight c
	minReach a
	build ()Lnet/minecraft/world/level/levelgen/feature/configurations/ColumnFeatureConfiguration; a
	heightRange (II)Lnet/minecraft/world/level/levelgen/feature/configurations/ColumnFeatureConfiguration$Builder; b
	horizontalReach (I)Lnet/minecraft/world/level/levelgen/feature/configurations/ColumnFeatureConfiguration$Builder; a
	horizontalReach (II)Lnet/minecraft/world/level/levelgen/feature/configurations/ColumnFeatureConfiguration$Builder; a
net/minecraft/world/level/levelgen/feature/configurations/CountFeatureConfiguration cnk
	CODEC a
	count b
net/minecraft/world/level/levelgen/feature/configurations/CountRangeDecoratorConfiguration cnl
	CODEC a
	bottomOffset c
	count b
	maximum e
	topOffset d
net/minecraft/world/level/levelgen/feature/configurations/DecoratedFeatureConfiguration cnm
	CODEC a
	decorator c
	feature b
net/minecraft/world/level/levelgen/feature/configurations/DecoratorConfiguration cnn
	NONE f
net/minecraft/world/level/levelgen/feature/configurations/DeltaFeatureConfiguration cno
	CODEC a
	contents b
	maximumRadius e
	maximumRimSize f
	minimumRadius d
	rim c
net/minecraft/world/level/levelgen/feature/configurations/DeltaFeatureConfiguration$Builder cno$a
	contents a
	maxRadius d
	maxRim e
	minRadius c
	rim b
	build ()Lnet/minecraft/world/level/levelgen/feature/configurations/DeltaFeatureConfiguration; a
	contents (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/levelgen/feature/configurations/DeltaFeatureConfiguration$Builder; a
	radius (II)Lnet/minecraft/world/level/levelgen/feature/configurations/DeltaFeatureConfiguration$Builder; a
	rim (Lnet/minecraft/world/level/block/state/BlockState;I)Lnet/minecraft/world/level/levelgen/feature/configurations/DeltaFeatureConfiguration$Builder; a
net/minecraft/world/level/levelgen/feature/configurations/DiskConfiguration cnp
	CODEC a
	radius c
	state b
	targets e
	ySize d
net/minecraft/world/level/levelgen/feature/configurations/EndGatewayConfiguration cnq
	CODEC a
	exact c
	exit b
	delayedExitSearch ()Lnet/minecraft/world/level/levelgen/feature/configurations/EndGatewayConfiguration; a
	getExit ()Ljava/util/Optional; b
	isExitExact ()Z c
	knownExit (Lnet/minecraft/core/BlockPos;Z)Lnet/minecraft/world/level/levelgen/feature/configurations/EndGatewayConfiguration; a
net/minecraft/world/level/levelgen/feature/configurations/FeatureConfiguration cnr
	NONE k
net/minecraft/world/level/levelgen/feature/configurations/FeatureRadiusConfiguration cns
	CODEC a
	radius b
net/minecraft/world/level/levelgen/feature/configurations/HugeMushroomFeatureConfiguration cnt
	CODEC a
	capProvider b
	foliageRadius d
	stemProvider c
net/minecraft/world/level/levelgen/feature/configurations/JigsawConfiguration cnu
	CODEC a
	size c
	startPool b
	getSize ()I a
	getStartPool ()Lnet/minecraft/resources/ResourceLocation; b
net/minecraft/world/level/levelgen/feature/configurations/LayerConfiguration cnv
	CODEC a
	height b
	state c
net/minecraft/world/level/levelgen/feature/configurations/MineshaftConfiguration cnw
	CODEC a
	probability b
	type c
net/minecraft/world/level/levelgen/feature/configurations/MultiJigsawConfiguration cnx
	CODEC a
	configurations b
	getRandomPool (Ljava/util/Random;)Lnet/minecraft/world/level/levelgen/feature/configurations/JigsawConfiguration; a
net/minecraft/world/level/levelgen/feature/configurations/NoiseDependantDecoratorConfiguration cny
	CODEC a
	aboveNoise d
	belowNoise c
	noiseLevel b
net/minecraft/world/level/levelgen/feature/configurations/NoneDecoratorConfiguration cnz
	CODEC a
	INSTANCE b
net/minecraft/world/level/levelgen/feature/configurations/NoneFeatureConfiguration coa
	CODEC a
	INSTANCE b
net/minecraft/world/level/levelgen/feature/configurations/OceanRuinConfiguration cob
	CODEC a
	biomeTemp b
	clusterProbability d
	largeProbability c
net/minecraft/world/level/levelgen/feature/configurations/OreConfiguration coc
	CODEC a
	size c
	state d
	target b
net/minecraft/world/level/levelgen/feature/configurations/OreConfiguration$Predicates coc$a
	$VALUES h
	BY_NAME e
	CODEC d
	NATURAL_STONE a
	NETHERRACK b
	NETHER_ORE_REPLACEABLES c
	name f
	predicate g
	byName (Ljava/lang/String;)Lnet/minecraft/world/level/levelgen/feature/configurations/OreConfiguration$Predicates; a
	getName ()Ljava/lang/String; b
	getPredicate ()Ljava/util/function/Predicate; c
	getSerializedName ()Ljava/lang/String; a
net/minecraft/world/level/levelgen/feature/configurations/ProbabilityFeatureConfiguration cod
	CODEC b
	probability c
net/minecraft/world/level/levelgen/feature/configurations/RandomBooleanFeatureConfiguration coe
	CODEC a
	featureFalse c
	featureTrue b
net/minecraft/world/level/levelgen/feature/configurations/RandomFeatureConfiguration cof
	CODEC a
	defaultFeature c
	features b
net/minecraft/world/level/levelgen/feature/configurations/RandomPatchConfiguration cog
	CODEC a
	blacklist e
	blockPlacer c
	canReplace j
	needWater m
	project l
	stateProvider b
	tries f
	whitelist d
	xspread g
	yspread h
	zspread i
net/minecraft/world/level/levelgen/feature/configurations/RandomPatchConfiguration$GrassConfigurationBuilder cog$a
	blacklist d
	blockPlacer b
	canReplace i
	needWater k
	project j
	stateProvider a
	tries e
	whitelist c
	xspread f
	yspread g
	zspread h
	blacklist (Ljava/util/Set;)Lnet/minecraft/world/level/levelgen/feature/configurations/RandomPatchConfiguration$GrassConfigurationBuilder; b
	build ()Lnet/minecraft/world/level/levelgen/feature/configurations/RandomPatchConfiguration; d
	canReplace ()Lnet/minecraft/world/level/levelgen/feature/configurations/RandomPatchConfiguration$GrassConfigurationBuilder; a
	needWater ()Lnet/minecraft/world/level/levelgen/feature/configurations/RandomPatchConfiguration$GrassConfigurationBuilder; c
	noProjection ()Lnet/minecraft/world/level/levelgen/feature/configurations/RandomPatchConfiguration$GrassConfigurationBuilder; b
	tries (I)Lnet/minecraft/world/level/levelgen/feature/configurations/RandomPatchConfiguration$GrassConfigurationBuilder; a
	whitelist (Ljava/util/Set;)Lnet/minecraft/world/level/levelgen/feature/configurations/RandomPatchConfiguration$GrassConfigurationBuilder; a
	xspread (I)Lnet/minecraft/world/level/levelgen/feature/configurations/RandomPatchConfiguration$GrassConfigurationBuilder; b
	yspread (I)Lnet/minecraft/world/level/levelgen/feature/configurations/RandomPatchConfiguration$GrassConfigurationBuilder; c
	zspread (I)Lnet/minecraft/world/level/levelgen/feature/configurations/RandomPatchConfiguration$GrassConfigurationBuilder; d
net/minecraft/world/level/levelgen/feature/configurations/RandomRandomFeatureConfiguration coh
	CODEC a
	count c
	features b
net/minecraft/world/level/levelgen/feature/configurations/ReplaceBlockConfiguration coi
	CODEC a
	state c
	target b
net/minecraft/world/level/levelgen/feature/configurations/ReplaceSpheroidConfiguration coj
	CODEC a
	maximumReach e
	minimumReach d
	replaceState c
	targetState b
net/minecraft/world/level/levelgen/feature/configurations/ReplaceSpheroidConfiguration$Builder coj$a
	maximumReach d
	minimumReach c
	state b
	target a
	build ()Lnet/minecraft/world/level/levelgen/feature/configurations/ReplaceSpheroidConfiguration; a
	maximumReach (Lnet/minecraft/core/Vec3i;)Lnet/minecraft/world/level/levelgen/feature/configurations/ReplaceSpheroidConfiguration$Builder; b
	minimumReach (Lnet/minecraft/core/Vec3i;)Lnet/minecraft/world/level/levelgen/feature/configurations/ReplaceSpheroidConfiguration$Builder; a
	replaceWithBlockState (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/levelgen/feature/configurations/ReplaceSpheroidConfiguration$Builder; b
	targetBlockState (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/levelgen/feature/configurations/ReplaceSpheroidConfiguration$Builder; a
net/minecraft/world/level/levelgen/feature/configurations/RuinedPortalConfiguration cok
	CODEC a
	portalType b
net/minecraft/world/level/levelgen/feature/configurations/SeagrassFeatureConfiguration col
	CODEC a
	count b
	tallSeagrassProbability c
net/minecraft/world/level/levelgen/feature/configurations/ShipwreckConfiguration com
	CODEC a
	isBeached b
net/minecraft/world/level/levelgen/feature/configurations/SimpleBlockConfiguration coo
	CODEC a
	placeIn d
	placeOn c
	placeUnder e
	toPlace b
net/minecraft/world/level/levelgen/feature/configurations/SimpleRandomFeatureConfiguration cop
	CODEC a
	features b
net/minecraft/world/level/levelgen/feature/configurations/SpikeConfiguration coq
	CODEC a
	crystalBeamTarget d
	crystalInvulnerable b
	spikes c
	getCrystalBeamTarget ()Lnet/minecraft/core/BlockPos; c
	getSpikes ()Ljava/util/List; b
	isCrystalInvulnerable ()Z a
net/minecraft/world/level/levelgen/feature/configurations/SpringConfiguration cor
	CODEC a
	holeCount e
	requiresBlockBelow c
	rockCount d
	state b
	validBlocks f
net/minecraft/world/level/levelgen/feature/configurations/StrongholdConfiguration cos
	CODEC a
	count d
	distance b
	spread c
	count ()I c
	distance ()I a
	spread ()I b
net/minecraft/world/level/levelgen/feature/configurations/StructureFeatureConfiguration cot
	CODEC a
	salt d
	separation c
	spacing b
	salt ()I c
	separation ()I b
	spacing ()I a
net/minecraft/world/level/levelgen/feature/configurations/TreeConfiguration cou
	CODEC a
	decorators d
	foliagePlacer f
	fromSapling e
	heightmap l
	ignoreVines j
	leavesProvider c
	maxWaterDepth i
	minimumSize h
	trunkPlacer g
	trunkProvider b
	setFromSapling ()V a
	withDecorators (Ljava/util/List;)Lnet/minecraft/world/level/levelgen/feature/configurations/TreeConfiguration; a
net/minecraft/world/level/levelgen/feature/configurations/TreeConfiguration$TreeConfigurationBuilder cou$a
	decorators f
	foliagePlacer c
	heightmap i
	ignoreVines h
	leavesProvider b
	maxWaterDepth g
	minimumSize e
	trunkPlacer d
	trunkProvider a
	build ()Lnet/minecraft/world/level/levelgen/feature/configurations/TreeConfiguration; b
	decorators (Ljava/util/List;)Lnet/minecraft/world/level/levelgen/feature/configurations/TreeConfiguration$TreeConfigurationBuilder; a
	heightmap (Lnet/minecraft/world/level/levelgen/Heightmap$Types;)Lnet/minecraft/world/level/levelgen/feature/configurations/TreeConfiguration$TreeConfigurationBuilder; a
	ignoreVines ()Lnet/minecraft/world/level/levelgen/feature/configurations/TreeConfiguration$TreeConfigurationBuilder; a
	maxWaterDepth (I)Lnet/minecraft/world/level/levelgen/feature/configurations/TreeConfiguration$TreeConfigurationBuilder; a
net/minecraft/world/level/levelgen/feature/featuresize/FeatureSize cow
	CODEC a
	minClippedHeight b
	getSizeAtHeight (II)I a
	minClippedHeight ()Ljava/util/OptionalInt; c
	minClippedHeightCodec ()Lcom/mojang/serialization/codecs/RecordCodecBuilder; a
	type ()Lnet/minecraft/world/level/levelgen/feature/featuresize/FeatureSizeType; b
net/minecraft/world/level/levelgen/feature/featuresize/FeatureSizeType cox
	THREE_LAYERS_FEATURE_SIZE b
	TWO_LAYERS_FEATURE_SIZE a
	codec c
	codec ()Lcom/mojang/serialization/Codec; a
	register (Ljava/lang/String;Lcom/mojang/serialization/Codec;)Lnet/minecraft/world/level/levelgen/feature/featuresize/FeatureSizeType; a
net/minecraft/world/level/levelgen/feature/featuresize/ThreeLayersFeatureSize coy
	CODEC c
	limit d
	lowerSize f
	middleSize g
	upperLimit e
	upperSize h
	getSizeAtHeight (II)I a
	type ()Lnet/minecraft/world/level/levelgen/feature/featuresize/FeatureSizeType; b
net/minecraft/world/level/levelgen/feature/featuresize/TwoLayersFeatureSize coz
	CODEC c
	limit d
	lowerSize e
	upperSize f
	getSizeAtHeight (II)I a
	type ()Lnet/minecraft/world/level/levelgen/feature/featuresize/FeatureSizeType; b
net/minecraft/world/level/levelgen/feature/foliageplacers/AcaciaFoliagePlacer cpb
	CODEC a
	createFoliage (Lnet/minecraft/world/level/LevelSimulatedRW;Ljava/util/Random;Lnet/minecraft/world/level/levelgen/feature/configurations/TreeConfiguration;ILnet/minecraft/world/level/levelgen/feature/foliageplacers/FoliagePlacer$FoliageAttachment;IILjava/util/Set;ILnet/minecraft/world/level/levelgen/structure/BoundingBox;)V a
	foliageHeight (Ljava/util/Random;ILnet/minecraft/world/level/levelgen/feature/configurations/TreeConfiguration;)I a
	shouldSkipLocation (Ljava/util/Random;IIIIZ)Z a
	type ()Lnet/minecraft/world/level/levelgen/feature/foliageplacers/FoliagePlacerType; a
net/minecraft/world/level/levelgen/feature/foliageplacers/BlobFoliagePlacer cpc
	CODEC a
	height b
	blobParts (Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/Products$P5; a
	createFoliage (Lnet/minecraft/world/level/LevelSimulatedRW;Ljava/util/Random;Lnet/minecraft/world/level/levelgen/feature/configurations/TreeConfiguration;ILnet/minecraft/world/level/levelgen/feature/foliageplacers/FoliagePlacer$FoliageAttachment;IILjava/util/Set;ILnet/minecraft/world/level/levelgen/structure/BoundingBox;)V a
	foliageHeight (Ljava/util/Random;ILnet/minecraft/world/level/levelgen/feature/configurations/TreeConfiguration;)I a
	shouldSkipLocation (Ljava/util/Random;IIIIZ)Z a
	type ()Lnet/minecraft/world/level/levelgen/feature/foliageplacers/FoliagePlacerType; a
net/minecraft/world/level/levelgen/feature/foliageplacers/BushFoliagePlacer cpd
	CODEC c
	createFoliage (Lnet/minecraft/world/level/LevelSimulatedRW;Ljava/util/Random;Lnet/minecraft/world/level/levelgen/feature/configurations/TreeConfiguration;ILnet/minecraft/world/level/levelgen/feature/foliageplacers/FoliagePlacer$FoliageAttachment;IILjava/util/Set;ILnet/minecraft/world/level/levelgen/structure/BoundingBox;)V a
	shouldSkipLocation (Ljava/util/Random;IIIIZ)Z a
	type ()Lnet/minecraft/world/level/levelgen/feature/foliageplacers/FoliagePlacerType; a
net/minecraft/world/level/levelgen/feature/foliageplacers/DarkOakFoliagePlacer cpe
	CODEC a
	createFoliage (Lnet/minecraft/world/level/LevelSimulatedRW;Ljava/util/Random;Lnet/minecraft/world/level/levelgen/feature/configurations/TreeConfiguration;ILnet/minecraft/world/level/levelgen/feature/foliageplacers/FoliagePlacer$FoliageAttachment;IILjava/util/Set;ILnet/minecraft/world/level/levelgen/structure/BoundingBox;)V a
	foliageHeight (Ljava/util/Random;ILnet/minecraft/world/level/levelgen/feature/configurations/TreeConfiguration;)I a
	shouldSkipLocation (Ljava/util/Random;IIIIZ)Z a
	shouldSkipLocationSigned (Ljava/util/Random;IIIIZ)Z b
	type ()Lnet/minecraft/world/level/levelgen/feature/foliageplacers/FoliagePlacerType; a
net/minecraft/world/level/levelgen/feature/foliageplacers/FancyFoliagePlacer cpf
	CODEC c
	createFoliage (Lnet/minecraft/world/level/LevelSimulatedRW;Ljava/util/Random;Lnet/minecraft/world/level/levelgen/feature/configurations/TreeConfiguration;ILnet/minecraft/world/level/levelgen/feature/foliageplacers/FoliagePlacer$FoliageAttachment;IILjava/util/Set;ILnet/minecraft/world/level/levelgen/structure/BoundingBox;)V a
	shouldSkipLocation (Ljava/util/Random;IIIIZ)Z a
net/minecraft/world/level/levelgen/feature/foliageplacers/FoliagePlacer cpg
	CODEC d
	offset g
	offsetRandom h
	radius e
	radiusRandom f
	createFoliage (Lnet/minecraft/world/level/LevelSimulatedRW;Ljava/util/Random;Lnet/minecraft/world/level/levelgen/feature/configurations/TreeConfiguration;ILnet/minecraft/world/level/levelgen/feature/foliageplacers/FoliagePlacer$FoliageAttachment;IILjava/util/Set;ILnet/minecraft/world/level/levelgen/structure/BoundingBox;)V a
	createFoliage (Lnet/minecraft/world/level/LevelSimulatedRW;Ljava/util/Random;Lnet/minecraft/world/level/levelgen/feature/configurations/TreeConfiguration;ILnet/minecraft/world/level/levelgen/feature/foliageplacers/FoliagePlacer$FoliageAttachment;IILjava/util/Set;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;)V a
	foliageHeight (Ljava/util/Random;ILnet/minecraft/world/level/levelgen/feature/configurations/TreeConfiguration;)I a
	foliagePlacerParts (Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/Products$P4; b
	foliageRadius (Ljava/util/Random;I)I a
	offset (Ljava/util/Random;)I a
	placeLeavesRow (Lnet/minecraft/world/level/LevelSimulatedRW;Ljava/util/Random;Lnet/minecraft/world/level/levelgen/feature/configurations/TreeConfiguration;Lnet/minecraft/core/BlockPos;ILjava/util/Set;IZLnet/minecraft/world/level/levelgen/structure/BoundingBox;)V a
	shouldSkipLocation (Ljava/util/Random;IIIIZ)Z a
	shouldSkipLocationSigned (Ljava/util/Random;IIIIZ)Z b
	type ()Lnet/minecraft/world/level/levelgen/feature/foliageplacers/FoliagePlacerType; a
net/minecraft/world/level/levelgen/feature/foliageplacers/FoliagePlacer$Factory cpg$a
	create (IIII)Lnet/minecraft/world/level/levelgen/feature/foliageplacers/FoliagePlacer; a
net/minecraft/world/level/levelgen/feature/foliageplacers/FoliagePlacer$FoliageAttachment cpg$b
	doubleTrunk c
	foliagePos a
	radiusOffset b
	doubleTrunk ()Z c
	foliagePos ()Lnet/minecraft/core/BlockPos; a
	radiusOffset ()I b
net/minecraft/world/level/levelgen/feature/foliageplacers/FoliagePlacerType cph
	ACACIA_FOLIAGE_PLACER d
	BLOB_FOLIAGE_PLACER a
	BUSH_FOLIAGE_PLACER e
	DARK_OAK_FOLIAGE_PLACER i
	FANCY_FOLIAGE_PLACER f
	MEGA_JUNGLE_FOLIAGE_PLACER g
	MEGA_PINE_FOLIAGE_PLACER h
	PINE_FOLIAGE_PLACER c
	SPRUCE_FOLIAGE_PLACER b
	codec j
	codec ()Lcom/mojang/serialization/Codec; a
	register (Ljava/lang/String;Lcom/mojang/serialization/Codec;)Lnet/minecraft/world/level/levelgen/feature/foliageplacers/FoliagePlacerType; a
net/minecraft/world/level/levelgen/feature/foliageplacers/MegaJungleFoliagePlacer cpi
	CODEC a
	height b
	createFoliage (Lnet/minecraft/world/level/LevelSimulatedRW;Ljava/util/Random;Lnet/minecraft/world/level/levelgen/feature/configurations/TreeConfiguration;ILnet/minecraft/world/level/levelgen/feature/foliageplacers/FoliagePlacer$FoliageAttachment;IILjava/util/Set;ILnet/minecraft/world/level/levelgen/structure/BoundingBox;)V a
	foliageHeight (Ljava/util/Random;ILnet/minecraft/world/level/levelgen/feature/configurations/TreeConfiguration;)I a
	shouldSkipLocation (Ljava/util/Random;IIIIZ)Z a
	type ()Lnet/minecraft/world/level/levelgen/feature/foliageplacers/FoliagePlacerType; a
net/minecraft/world/level/levelgen/feature/foliageplacers/MegaPineFoliagePlacer cpj
	CODEC a
	crownHeight c
	heightRand b
	createFoliage (Lnet/minecraft/world/level/LevelSimulatedRW;Ljava/util/Random;Lnet/minecraft/world/level/levelgen/feature/configurations/TreeConfiguration;ILnet/minecraft/world/level/levelgen/feature/foliageplacers/FoliagePlacer$FoliageAttachment;IILjava/util/Set;ILnet/minecraft/world/level/levelgen/structure/BoundingBox;)V a
	foliageHeight (Ljava/util/Random;ILnet/minecraft/world/level/levelgen/feature/configurations/TreeConfiguration;)I a
	shouldSkipLocation (Ljava/util/Random;IIIIZ)Z a
	type ()Lnet/minecraft/world/level/levelgen/feature/foliageplacers/FoliagePlacerType; a
net/minecraft/world/level/levelgen/feature/foliageplacers/PineFoliagePlacer cpk
	CODEC a
	height b
	heightRandom c
	createFoliage (Lnet/minecraft/world/level/LevelSimulatedRW;Ljava/util/Random;Lnet/minecraft/world/level/levelgen/feature/configurations/TreeConfiguration;ILnet/minecraft/world/level/levelgen/feature/foliageplacers/FoliagePlacer$FoliageAttachment;IILjava/util/Set;ILnet/minecraft/world/level/levelgen/structure/BoundingBox;)V a
	foliageHeight (Ljava/util/Random;ILnet/minecraft/world/level/levelgen/feature/configurations/TreeConfiguration;)I a
	foliageRadius (Ljava/util/Random;I)I a
	shouldSkipLocation (Ljava/util/Random;IIIIZ)Z a
	type ()Lnet/minecraft/world/level/levelgen/feature/foliageplacers/FoliagePlacerType; a
net/minecraft/world/level/levelgen/feature/foliageplacers/SpruceFoliagePlacer cpl
	CODEC a
	trunkHeight b
	trunkHeightRandom c
	createFoliage (Lnet/minecraft/world/level/LevelSimulatedRW;Ljava/util/Random;Lnet/minecraft/world/level/levelgen/feature/configurations/TreeConfiguration;ILnet/minecraft/world/level/levelgen/feature/foliageplacers/FoliagePlacer$FoliageAttachment;IILjava/util/Set;ILnet/minecraft/world/level/levelgen/structure/BoundingBox;)V a
	foliageHeight (Ljava/util/Random;ILnet/minecraft/world/level/levelgen/feature/configurations/TreeConfiguration;)I a
	shouldSkipLocation (Ljava/util/Random;IIIIZ)Z a
	type ()Lnet/minecraft/world/level/levelgen/feature/foliageplacers/FoliagePlacerType; a
net/minecraft/world/level/levelgen/feature/stateproviders/BlockStateProvider cpo
	CODEC a
	getState (Ljava/util/Random;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
	type ()Lnet/minecraft/world/level/levelgen/feature/stateproviders/BlockStateProviderType; a
net/minecraft/world/level/levelgen/feature/stateproviders/BlockStateProviderType cpp
	FOREST_FLOWER_PROVIDER d
	PLAIN_FLOWER_PROVIDER c
	ROTATED_BLOCK_PROVIDER e
	SIMPLE_STATE_PROVIDER a
	WEIGHTED_STATE_PROVIDER b
	codec f
	codec ()Lcom/mojang/serialization/Codec; a
	register (Ljava/lang/String;Lcom/mojang/serialization/Codec;)Lnet/minecraft/world/level/levelgen/feature/stateproviders/BlockStateProviderType; a
net/minecraft/world/level/levelgen/feature/stateproviders/ForestFlowerProvider cpq
	CODEC b
	FLOWERS d
	INSTANCE c
	getState (Ljava/util/Random;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
	type ()Lnet/minecraft/world/level/levelgen/feature/stateproviders/BlockStateProviderType; a
net/minecraft/world/level/levelgen/feature/stateproviders/PlainFlowerProvider cpr
	CODEC b
	HIGH_NOISE_FLOWERS e
	INSTANCE c
	LOW_NOISE_FLOWERS d
	getState (Ljava/util/Random;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
	type ()Lnet/minecraft/world/level/levelgen/feature/stateproviders/BlockStateProviderType; a
net/minecraft/world/level/levelgen/feature/stateproviders/RotatedBlockProvider cps
	CODEC b
	block c
	getState (Ljava/util/Random;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
	type ()Lnet/minecraft/world/level/levelgen/feature/stateproviders/BlockStateProviderType; a
net/minecraft/world/level/levelgen/feature/stateproviders/SimpleStateProvider cpt
	CODEC b
	state c
	getState (Ljava/util/Random;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
	read (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/DataResult; a
	type ()Lnet/minecraft/world/level/levelgen/feature/stateproviders/BlockStateProviderType; a
net/minecraft/world/level/levelgen/feature/stateproviders/WeightedStateProvider cpu
	CODEC b
	weightedList c
	add (Lnet/minecraft/world/level/block/state/BlockState;I)Lnet/minecraft/world/level/levelgen/feature/stateproviders/WeightedStateProvider; a
	create (Lnet/minecraft/world/entity/ai/behavior/WeightedList;)Lcom/mojang/serialization/DataResult; a
	getState (Ljava/util/Random;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
	type ()Lnet/minecraft/world/level/levelgen/feature/stateproviders/BlockStateProviderType; a
net/minecraft/world/level/levelgen/feature/structures/EmptyPoolElement cpw
	CODEC a
	INSTANCE b
	getBoundingBox (Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureManager;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Rotation;)Lnet/minecraft/world/level/levelgen/structure/BoundingBox; a
	getShuffledJigsawBlocks (Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureManager;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Rotation;Ljava/util/Random;)Ljava/util/List; a
	getSize (Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureManager;Lnet/minecraft/world/level/block/Rotation;)Lnet/minecraft/core/BlockPos; a
	getType ()Lnet/minecraft/world/level/levelgen/feature/structures/StructurePoolElementType; a
	place (Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureManager;Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/StructureFeatureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Rotation;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Ljava/util/Random;Z)Z a
net/minecraft/world/level/levelgen/feature/structures/FeaturePoolElement cpx
	CODEC a
	defaultJigsawNBT c
	feature b
	fillDefaultJigsawNBT ()Lnet/minecraft/nbt/CompoundTag; b
	getBoundingBox (Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureManager;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Rotation;)Lnet/minecraft/world/level/levelgen/structure/BoundingBox; a
	getShuffledJigsawBlocks (Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureManager;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Rotation;Ljava/util/Random;)Ljava/util/List; a
	getSize (Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureManager;Lnet/minecraft/world/level/block/Rotation;)Lnet/minecraft/core/BlockPos; a
	getType ()Lnet/minecraft/world/level/levelgen/feature/structures/StructurePoolElementType; a
	place (Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureManager;Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/StructureFeatureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Rotation;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Ljava/util/Random;Z)Z a
net/minecraft/world/level/levelgen/feature/structures/JigsawJunction cpy
	deltaY d
	destProjection e
	sourceGroundY b
	sourceX a
	sourceZ c
	deserialize (Lcom/mojang/serialization/Dynamic;)Lnet/minecraft/world/level/levelgen/feature/structures/JigsawJunction; a
	getDeltaY ()I d
	getDestProjection ()Lnet/minecraft/world/level/levelgen/feature/structures/StructureTemplatePool$Projection; e
	getSourceGroundY ()I b
	getSourceX ()I a
	getSourceZ ()I c
	serialize (Lcom/mojang/serialization/DynamicOps;)Lcom/mojang/serialization/Dynamic; a
net/minecraft/world/level/levelgen/feature/structures/JigsawPlacement cpz
	LOGGER b
	POOLS a
	addPieces (Lnet/minecraft/resources/ResourceLocation;ILnet/minecraft/world/level/levelgen/feature/structures/JigsawPlacement$PieceFactory;Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureManager;Lnet/minecraft/core/BlockPos;Ljava/util/List;Ljava/util/Random;ZZ)V a
	addPieces (Lnet/minecraft/world/level/levelgen/structure/PoolElementStructurePiece;ILnet/minecraft/world/level/levelgen/feature/structures/JigsawPlacement$PieceFactory;Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureManager;Ljava/util/List;Ljava/util/Random;)V a
	bootstrap ()V a
net/minecraft/world/level/levelgen/feature/structures/JigsawPlacement$PieceFactory cpz$a
net/minecraft/world/level/levelgen/feature/structures/JigsawPlacement$PieceState cpz$b
	boundsTop c
	depth d
	free b
	piece a
net/minecraft/world/level/levelgen/feature/structures/JigsawPlacement$Placer cpz$c
	chunkGenerator c
	factory b
	maxDepth a
	pieces e
	placing g
	random f
	structureManager d
	tryPlacingChildren (Lnet/minecraft/world/level/levelgen/structure/PoolElementStructurePiece;Lorg/apache/commons/lang3/mutable/MutableObject;IIZ)V a
net/minecraft/world/level/levelgen/feature/structures/LegacySinglePoolElement cqa
	CODEC a
	getSettings (Lnet/minecraft/world/level/block/Rotation;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Z)Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructurePlaceSettings; a
	getType ()Lnet/minecraft/world/level/levelgen/feature/structures/StructurePoolElementType; a
net/minecraft/world/level/levelgen/feature/structures/ListPoolElement cqb
	CODEC a
	elements b
	getBoundingBox (Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureManager;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Rotation;)Lnet/minecraft/world/level/levelgen/structure/BoundingBox; a
	getShuffledJigsawBlocks (Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureManager;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Rotation;Ljava/util/Random;)Ljava/util/List; a
	getSize (Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureManager;Lnet/minecraft/world/level/block/Rotation;)Lnet/minecraft/core/BlockPos; a
	getType ()Lnet/minecraft/world/level/levelgen/feature/structures/StructurePoolElementType; a
	place (Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureManager;Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/StructureFeatureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Rotation;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Ljava/util/Random;Z)Z a
	setProjection (Lnet/minecraft/world/level/levelgen/feature/structures/StructureTemplatePool$Projection;)Lnet/minecraft/world/level/levelgen/feature/structures/StructurePoolElement; a
	setProjectionOnEachElement (Lnet/minecraft/world/level/levelgen/feature/structures/StructureTemplatePool$Projection;)V b
net/minecraft/world/level/levelgen/feature/structures/SinglePoolElement cqc
	CODEC b
	TEMPLATE_CODEC a
	processors d
	template c
	encodeTemplate (Lcom/mojang/datafixers/util/Either;Lcom/mojang/serialization/DynamicOps;Ljava/lang/Object;)Lcom/mojang/serialization/DataResult; a
	getBoundingBox (Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureManager;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Rotation;)Lnet/minecraft/world/level/levelgen/structure/BoundingBox; a
	getDataMarkers (Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureManager;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Rotation;Z)Ljava/util/List; a
	getSettings (Lnet/minecraft/world/level/block/Rotation;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Z)Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructurePlaceSettings; a
	getShuffledJigsawBlocks (Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureManager;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Rotation;Ljava/util/Random;)Ljava/util/List; a
	getSize (Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureManager;Lnet/minecraft/world/level/block/Rotation;)Lnet/minecraft/core/BlockPos; a
	getTemplate (Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureManager;)Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplate; a
	getType ()Lnet/minecraft/world/level/levelgen/feature/structures/StructurePoolElementType; a
	place (Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureManager;Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/StructureFeatureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Rotation;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Ljava/util/Random;Z)Z a
	processorsCodec ()Lcom/mojang/serialization/codecs/RecordCodecBuilder; b
	templateCodec ()Lcom/mojang/serialization/codecs/RecordCodecBuilder; c
net/minecraft/world/level/levelgen/feature/structures/StructurePoolElement cqd
	CODEC e
	projection a
	getBoundingBox (Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureManager;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Rotation;)Lnet/minecraft/world/level/levelgen/structure/BoundingBox; a
	getGroundLevelDelta ()I f
	getProjection ()Lnet/minecraft/world/level/levelgen/feature/structures/StructureTemplatePool$Projection; e
	getShuffledJigsawBlocks (Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureManager;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Rotation;Ljava/util/Random;)Ljava/util/List; a
	getSize (Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureManager;Lnet/minecraft/world/level/block/Rotation;)Lnet/minecraft/core/BlockPos; a
	getType ()Lnet/minecraft/world/level/levelgen/feature/structures/StructurePoolElementType; a
	handleDataMarker (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplate$StructureBlockInfo;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Rotation;Ljava/util/Random;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;)V a
	place (Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureManager;Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/StructureFeatureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Rotation;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Ljava/util/Random;Z)Z a
	projectionCodec ()Lcom/mojang/serialization/codecs/RecordCodecBuilder; d
	setProjection (Lnet/minecraft/world/level/levelgen/feature/structures/StructureTemplatePool$Projection;)Lnet/minecraft/world/level/levelgen/feature/structures/StructurePoolElement; a
net/minecraft/world/level/levelgen/feature/structures/StructurePoolElementType cqe
	EMPTY d
	FEATURE c
	LEGACY e
	LIST b
	SINGLE a
	register (Ljava/lang/String;Lcom/mojang/serialization/Codec;)Lnet/minecraft/world/level/levelgen/feature/structures/StructurePoolElementType; a
net/minecraft/world/level/levelgen/feature/structures/StructureTemplatePool cqf
	CODEC a
	EMPTY b
	INVALID c
	LOGGER d
	fallback h
	maxSize j
	name e
	projection i
	rawTemplates f
	templates g
	getFallback ()Lnet/minecraft/resources/ResourceLocation; a
	getMaxSize (Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureManager;)I a
	getName ()Lnet/minecraft/resources/ResourceLocation; b
	getRandomTemplate (Ljava/util/Random;)Lnet/minecraft/world/level/levelgen/feature/structures/StructurePoolElement; a
	getShuffledTemplates (Ljava/util/Random;)Ljava/util/List; b
	getTemplate (I)Lnet/minecraft/world/level/levelgen/feature/structures/StructurePoolElement; a
	size ()I c
net/minecraft/world/level/levelgen/feature/structures/StructureTemplatePool$Projection cqf$a
	$VALUES g
	BY_NAME d
	CODEC c
	RIGID b
	TERRAIN_MATCHING a
	name e
	processors f
	byName (Ljava/lang/String;)Lnet/minecraft/world/level/levelgen/feature/structures/StructureTemplatePool$Projection; a
	getName ()Ljava/lang/String; b
	getProcessors ()Lcom/google/common/collect/ImmutableList; c
	getSerializedName ()Ljava/lang/String; a
net/minecraft/world/level/levelgen/feature/structures/StructureTemplatePools cqg
	pools a
	getPool (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/world/level/levelgen/feature/structures/StructureTemplatePool; a
	getPoolLocations ()Ljava/util/Set; a
	register (Lnet/minecraft/world/level/levelgen/feature/structures/StructureTemplatePool;)V a
net/minecraft/world/level/levelgen/feature/treedecorators/AlterGroundDecorator cqi
	CODEC a
	provider b
	place (Lnet/minecraft/world/level/LevelAccessor;Ljava/util/Random;Ljava/util/List;Ljava/util/List;Ljava/util/Set;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;)V a
	placeBlockAt (Lnet/minecraft/world/level/LevelSimulatedRW;Ljava/util/Random;Lnet/minecraft/core/BlockPos;)V b
	placeCircle (Lnet/minecraft/world/level/LevelSimulatedRW;Ljava/util/Random;Lnet/minecraft/core/BlockPos;)V a
	type ()Lnet/minecraft/world/level/levelgen/feature/treedecorators/TreeDecoratorType; a
net/minecraft/world/level/levelgen/feature/treedecorators/BeehiveDecorator cqj
	CODEC a
	probability b
	place (Lnet/minecraft/world/level/LevelAccessor;Ljava/util/Random;Ljava/util/List;Ljava/util/List;Ljava/util/Set;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;)V a
	type ()Lnet/minecraft/world/level/levelgen/feature/treedecorators/TreeDecoratorType; a
net/minecraft/world/level/levelgen/feature/treedecorators/CocoaDecorator cqk
	CODEC a
	probability b
	place (Lnet/minecraft/world/level/LevelAccessor;Ljava/util/Random;Ljava/util/List;Ljava/util/List;Ljava/util/Set;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;)V a
	type ()Lnet/minecraft/world/level/levelgen/feature/treedecorators/TreeDecoratorType; a
net/minecraft/world/level/levelgen/feature/treedecorators/LeaveVineDecorator cql
	CODEC a
	INSTANCE b
	addHangingVine (Lnet/minecraft/world/level/LevelSimulatedRW;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/properties/BooleanProperty;Ljava/util/Set;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;)V a
	place (Lnet/minecraft/world/level/LevelAccessor;Ljava/util/Random;Ljava/util/List;Ljava/util/List;Ljava/util/Set;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;)V a
	type ()Lnet/minecraft/world/level/levelgen/feature/treedecorators/TreeDecoratorType; a
net/minecraft/world/level/levelgen/feature/treedecorators/TreeDecorator cqm
	CODEC c
	place (Lnet/minecraft/world/level/LevelAccessor;Ljava/util/Random;Ljava/util/List;Ljava/util/List;Ljava/util/Set;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;)V a
	placeVine (Lnet/minecraft/world/level/LevelWriter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/properties/BooleanProperty;Ljava/util/Set;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;)V a
	setBlock (Lnet/minecraft/world/level/LevelWriter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Ljava/util/Set;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;)V a
	type ()Lnet/minecraft/world/level/levelgen/feature/treedecorators/TreeDecoratorType; a
net/minecraft/world/level/levelgen/feature/treedecorators/TreeDecoratorType cqn
	ALTER_GROUND e
	BEEHIVE d
	COCOA c
	LEAVE_VINE b
	TRUNK_VINE a
	codec f
	codec ()Lcom/mojang/serialization/Codec; a
	register (Ljava/lang/String;Lcom/mojang/serialization/Codec;)Lnet/minecraft/world/level/levelgen/feature/treedecorators/TreeDecoratorType; a
net/minecraft/world/level/levelgen/feature/treedecorators/TrunkVineDecorator cqo
	CODEC a
	INSTANCE b
	place (Lnet/minecraft/world/level/LevelAccessor;Ljava/util/Random;Ljava/util/List;Ljava/util/List;Ljava/util/Set;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;)V a
	type ()Lnet/minecraft/world/level/levelgen/feature/treedecorators/TreeDecoratorType; a
net/minecraft/world/level/levelgen/feature/trunkplacers/DarkOakTrunkPlacer cqq
	CODEC a
	placeTrunk (Lnet/minecraft/world/level/LevelSimulatedRW;Ljava/util/Random;ILnet/minecraft/core/BlockPos;Ljava/util/Set;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Lnet/minecraft/world/level/levelgen/feature/configurations/TreeConfiguration;)Ljava/util/List; a
	type ()Lnet/minecraft/world/level/levelgen/feature/trunkplacers/TrunkPlacerType; a
net/minecraft/world/level/levelgen/feature/trunkplacers/FancyTrunkPlacer cqr
	CODEC a
	getLogAxis (Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/core/Direction$Axis; a
	getSteps (Lnet/minecraft/core/BlockPos;)I a
	makeBranches (Lnet/minecraft/world/level/LevelSimulatedRW;Ljava/util/Random;ILnet/minecraft/core/BlockPos;Ljava/util/List;Ljava/util/Set;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Lnet/minecraft/world/level/levelgen/feature/configurations/TreeConfiguration;)V a
	makeLimb (Lnet/minecraft/world/level/LevelSimulatedRW;Ljava/util/Random;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;ZLjava/util/Set;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Lnet/minecraft/world/level/levelgen/feature/configurations/TreeConfiguration;)Z a
	placeTrunk (Lnet/minecraft/world/level/LevelSimulatedRW;Ljava/util/Random;ILnet/minecraft/core/BlockPos;Ljava/util/Set;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Lnet/minecraft/world/level/levelgen/feature/configurations/TreeConfiguration;)Ljava/util/List; a
	treeShape (II)F b
	trimBranches (II)Z a
	type ()Lnet/minecraft/world/level/levelgen/feature/trunkplacers/TrunkPlacerType; a
net/minecraft/world/level/levelgen/feature/trunkplacers/FancyTrunkPlacer$FoliageCoords cqr$a
	attachment a
	branchBase b
	getBranchBase ()I a
net/minecraft/world/level/levelgen/feature/trunkplacers/ForkingTrunkPlacer cqs
	CODEC a
	placeTrunk (Lnet/minecraft/world/level/LevelSimulatedRW;Ljava/util/Random;ILnet/minecraft/core/BlockPos;Ljava/util/Set;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Lnet/minecraft/world/level/levelgen/feature/configurations/TreeConfiguration;)Ljava/util/List; a
	type ()Lnet/minecraft/world/level/levelgen/feature/trunkplacers/TrunkPlacerType; a
net/minecraft/world/level/levelgen/feature/trunkplacers/GiantTrunkPlacer cqt
	CODEC a
	placeLogIfFreeWithOffset (Lnet/minecraft/world/level/LevelSimulatedRW;Ljava/util/Random;Lnet/minecraft/core/BlockPos$MutableBlockPos;Ljava/util/Set;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Lnet/minecraft/world/level/levelgen/feature/configurations/TreeConfiguration;Lnet/minecraft/core/BlockPos;III)V a
	placeTrunk (Lnet/minecraft/world/level/LevelSimulatedRW;Ljava/util/Random;ILnet/minecraft/core/BlockPos;Ljava/util/Set;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Lnet/minecraft/world/level/levelgen/feature/configurations/TreeConfiguration;)Ljava/util/List; a
	type ()Lnet/minecraft/world/level/levelgen/feature/trunkplacers/TrunkPlacerType; a
net/minecraft/world/level/levelgen/feature/trunkplacers/MegaJungleTrunkPlacer cqu
	CODEC b
	placeTrunk (Lnet/minecraft/world/level/LevelSimulatedRW;Ljava/util/Random;ILnet/minecraft/core/BlockPos;Ljava/util/Set;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Lnet/minecraft/world/level/levelgen/feature/configurations/TreeConfiguration;)Ljava/util/List; a
	type ()Lnet/minecraft/world/level/levelgen/feature/trunkplacers/TrunkPlacerType; a
net/minecraft/world/level/levelgen/feature/trunkplacers/StraightTrunkPlacer cqv
	CODEC a
	placeTrunk (Lnet/minecraft/world/level/LevelSimulatedRW;Ljava/util/Random;ILnet/minecraft/core/BlockPos;Ljava/util/Set;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Lnet/minecraft/world/level/levelgen/feature/configurations/TreeConfiguration;)Ljava/util/List; a
	type ()Lnet/minecraft/world/level/levelgen/feature/trunkplacers/TrunkPlacerType; a
net/minecraft/world/level/levelgen/feature/trunkplacers/TrunkPlacer cqw
	CODEC c
	baseHeight d
	heightRandA e
	heightRandB f
	getTreeHeight (Ljava/util/Random;)I a
	isDirt (Lnet/minecraft/world/level/LevelSimulatedReader;Lnet/minecraft/core/BlockPos;)Z a
	placeLog (Lnet/minecraft/world/level/LevelSimulatedRW;Ljava/util/Random;Lnet/minecraft/core/BlockPos;Ljava/util/Set;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Lnet/minecraft/world/level/levelgen/feature/configurations/TreeConfiguration;)Z a
	placeLogIfFree (Lnet/minecraft/world/level/LevelSimulatedRW;Ljava/util/Random;Lnet/minecraft/core/BlockPos$MutableBlockPos;Ljava/util/Set;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Lnet/minecraft/world/level/levelgen/feature/configurations/TreeConfiguration;)V a
	placeTrunk (Lnet/minecraft/world/level/LevelSimulatedRW;Ljava/util/Random;ILnet/minecraft/core/BlockPos;Ljava/util/Set;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Lnet/minecraft/world/level/levelgen/feature/configurations/TreeConfiguration;)Ljava/util/List; a
	setBlock (Lnet/minecraft/world/level/LevelWriter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;)V a
	setDirtAt (Lnet/minecraft/world/level/LevelSimulatedRW;Lnet/minecraft/core/BlockPos;)V a
	trunkPlacerParts (Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/Products$P3; a
	type ()Lnet/minecraft/world/level/levelgen/feature/trunkplacers/TrunkPlacerType; a
net/minecraft/world/level/levelgen/feature/trunkplacers/TrunkPlacerType cqx
	DARK_OAK_TRUNK_PLACER e
	FANCY_TRUNK_PLACER f
	FORKING_TRUNK_PLACER b
	GIANT_TRUNK_PLACER c
	MEGA_JUNGLE_TRUNK_PLACER d
	STRAIGHT_TRUNK_PLACER a
	codec g
	codec ()Lcom/mojang/serialization/Codec; a
	register (Ljava/lang/String;Lcom/mojang/serialization/Codec;)Lnet/minecraft/world/level/levelgen/feature/trunkplacers/TrunkPlacerType; a
net/minecraft/world/level/levelgen/flat/FlatLayerInfo cqz
	CODEC a
	blockState b
	height c
	start d
	getBlockState ()Lnet/minecraft/world/level/block/state/BlockState; b
	getHeight ()I a
	getStart ()I c
	setStart (I)V a
net/minecraft/world/level/levelgen/flat/FlatLevelGeneratorSettings cra
	CODEC a
	LAVA_LAKE_COMPOSITE_FEATURE d
	LOGGER b
	STRUCTURE_FEATURES e
	WATER_LAKE_COMPOSITE_FEATURE c
	addLakes l
	biome h
	decoration k
	layers i
	layersInfo g
	structureSettings f
	voidGen j
	getBiome ()Lnet/minecraft/world/level/biome/Biome; e
	getBiomeFromSettings ()Lnet/minecraft/world/level/biome/Biome; c
	getDefault ()Lnet/minecraft/world/level/levelgen/flat/FlatLevelGeneratorSettings; i
	getLayers ()[Lnet/minecraft/world/level/block/state/BlockState; g
	getLayersInfo ()Ljava/util/List; f
	setAddLakes ()V b
	setBiome (Lnet/minecraft/world/level/biome/Biome;)V a
	setDecoration ()V a
	structureSettings ()Lnet/minecraft/world/level/levelgen/StructureSettings; d
	updateLayers ()V h
	withLayers (Ljava/util/List;Lnet/minecraft/world/level/levelgen/StructureSettings;)Lnet/minecraft/world/level/levelgen/flat/FlatLevelGeneratorSettings; a
	withStructureSettings (Lnet/minecraft/world/level/levelgen/StructureSettings;)Lnet/minecraft/world/level/levelgen/flat/FlatLevelGeneratorSettings; a
net/minecraft/world/level/levelgen/placement/CarvingMaskDecorator crd
	getPositions (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/world/level/chunk/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/world/level/levelgen/feature/configurations/DecoratorConfiguration;Lnet/minecraft/core/BlockPos;)Ljava/util/stream/Stream; a
	getPositions (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/world/level/chunk/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/world/level/levelgen/placement/CarvingMaskDecoratorConfiguration;Lnet/minecraft/core/BlockPos;)Ljava/util/stream/Stream; a
net/minecraft/world/level/levelgen/placement/CarvingMaskDecoratorConfiguration cre
	CODEC a
	probability c
	step b
net/minecraft/world/level/levelgen/placement/ChanceDecoratorConfiguration crf
	CODEC a
	chance b
net/minecraft/world/level/levelgen/placement/ChanceHeightmapDecorator crg
	getPositions (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/world/level/chunk/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/world/level/levelgen/feature/configurations/DecoratorConfiguration;Lnet/minecraft/core/BlockPos;)Ljava/util/stream/Stream; a
	getPositions (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/world/level/chunk/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/world/level/levelgen/placement/ChanceDecoratorConfiguration;Lnet/minecraft/core/BlockPos;)Ljava/util/stream/Stream; a
net/minecraft/world/level/levelgen/placement/ChanceHeightmapDoubleDecorator crh
	getPositions (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/world/level/chunk/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/world/level/levelgen/feature/configurations/DecoratorConfiguration;Lnet/minecraft/core/BlockPos;)Ljava/util/stream/Stream; a
	getPositions (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/world/level/chunk/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/world/level/levelgen/placement/ChanceDecoratorConfiguration;Lnet/minecraft/core/BlockPos;)Ljava/util/stream/Stream; a
net/minecraft/world/level/levelgen/placement/ChancePassthroughDecorator cri
	place (Ljava/util/Random;Lnet/minecraft/world/level/levelgen/feature/configurations/DecoratorConfiguration;Lnet/minecraft/core/BlockPos;)Ljava/util/stream/Stream; a
	place (Ljava/util/Random;Lnet/minecraft/world/level/levelgen/placement/ChanceDecoratorConfiguration;Lnet/minecraft/core/BlockPos;)Ljava/util/stream/Stream; a
net/minecraft/world/level/levelgen/placement/ChanceTopSolidHeightmapDecorator crj
	getPositions (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/world/level/chunk/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/world/level/levelgen/feature/configurations/DecoratorConfiguration;Lnet/minecraft/core/BlockPos;)Ljava/util/stream/Stream; a
	getPositions (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/world/level/chunk/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/world/level/levelgen/placement/ChanceDecoratorConfiguration;Lnet/minecraft/core/BlockPos;)Ljava/util/stream/Stream; a
net/minecraft/world/level/levelgen/placement/ChorusPlantPlacementDecorator crk
	getPositions (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/world/level/chunk/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/world/level/levelgen/feature/configurations/DecoratorConfiguration;Lnet/minecraft/core/BlockPos;)Ljava/util/stream/Stream; a
	getPositions (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/world/level/chunk/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/world/level/levelgen/feature/configurations/NoneDecoratorConfiguration;Lnet/minecraft/core/BlockPos;)Ljava/util/stream/Stream; a
net/minecraft/world/level/levelgen/placement/ConfiguredDecorator crl
	CODEC a
	config c
	decorator b
	place (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/StructureFeatureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/levelgen/feature/ConfiguredFeature;)Z a
net/minecraft/world/level/levelgen/placement/CountBiasedRangeDecorator crm
	place (Ljava/util/Random;Lnet/minecraft/world/level/levelgen/feature/configurations/CountRangeDecoratorConfiguration;Lnet/minecraft/core/BlockPos;)Ljava/util/stream/Stream; a
	place (Ljava/util/Random;Lnet/minecraft/world/level/levelgen/feature/configurations/DecoratorConfiguration;Lnet/minecraft/core/BlockPos;)Ljava/util/stream/Stream; a
net/minecraft/world/level/levelgen/placement/CountChanceHeightmapDecorator crn
	getPositions (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/world/level/chunk/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/world/level/levelgen/feature/configurations/DecoratorConfiguration;Lnet/minecraft/core/BlockPos;)Ljava/util/stream/Stream; a
	getPositions (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/world/level/chunk/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/world/level/levelgen/placement/FrequencyChanceDecoratorConfiguration;Lnet/minecraft/core/BlockPos;)Ljava/util/stream/Stream; a
net/minecraft/world/level/levelgen/placement/CountChanceHeightmapDoubleDecorator cro
	getPositions (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/world/level/chunk/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/world/level/levelgen/feature/configurations/DecoratorConfiguration;Lnet/minecraft/core/BlockPos;)Ljava/util/stream/Stream; a
	getPositions (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/world/level/chunk/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/world/level/levelgen/placement/FrequencyChanceDecoratorConfiguration;Lnet/minecraft/core/BlockPos;)Ljava/util/stream/Stream; a
net/minecraft/world/level/levelgen/placement/CountDepthAverageDecorator crp
	place (Ljava/util/Random;Lnet/minecraft/world/level/levelgen/feature/configurations/DecoratorConfiguration;Lnet/minecraft/core/BlockPos;)Ljava/util/stream/Stream; a
	place (Ljava/util/Random;Lnet/minecraft/world/level/levelgen/placement/DepthAverageConfigation;Lnet/minecraft/core/BlockPos;)Ljava/util/stream/Stream; a
net/minecraft/world/level/levelgen/placement/CountHeighmapDoubleDecorator crq
	getPositions (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/world/level/chunk/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/world/level/levelgen/feature/configurations/DecoratorConfiguration;Lnet/minecraft/core/BlockPos;)Ljava/util/stream/Stream; a
	getPositions (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/world/level/chunk/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/world/level/levelgen/placement/FrequencyDecoratorConfiguration;Lnet/minecraft/core/BlockPos;)Ljava/util/stream/Stream; a
net/minecraft/world/level/levelgen/placement/CountHeight64Decorator crr
	getPositions (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/world/level/chunk/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/world/level/levelgen/feature/configurations/DecoratorConfiguration;Lnet/minecraft/core/BlockPos;)Ljava/util/stream/Stream; a
	getPositions (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/world/level/chunk/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/world/level/levelgen/placement/FrequencyDecoratorConfiguration;Lnet/minecraft/core/BlockPos;)Ljava/util/stream/Stream; a
net/minecraft/world/level/levelgen/placement/CountHeightmap32Decorator crs
	getPositions (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/world/level/chunk/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/world/level/levelgen/feature/configurations/DecoratorConfiguration;Lnet/minecraft/core/BlockPos;)Ljava/util/stream/Stream; a
	getPositions (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/world/level/chunk/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/world/level/levelgen/placement/FrequencyDecoratorConfiguration;Lnet/minecraft/core/BlockPos;)Ljava/util/stream/Stream; a
net/minecraft/world/level/levelgen/placement/CountHeightmapDecorator crt
	getPositions (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/world/level/chunk/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/world/level/levelgen/feature/configurations/DecoratorConfiguration;Lnet/minecraft/core/BlockPos;)Ljava/util/stream/Stream; a
	getPositions (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/world/level/chunk/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/world/level/levelgen/placement/FrequencyDecoratorConfiguration;Lnet/minecraft/core/BlockPos;)Ljava/util/stream/Stream; a
net/minecraft/world/level/levelgen/placement/CountTopSolidDecorator cru
	getPositions (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/world/level/chunk/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/world/level/levelgen/feature/configurations/DecoratorConfiguration;Lnet/minecraft/core/BlockPos;)Ljava/util/stream/Stream; a
	getPositions (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/world/level/chunk/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/world/level/levelgen/placement/FrequencyDecoratorConfiguration;Lnet/minecraft/core/BlockPos;)Ljava/util/stream/Stream; a
net/minecraft/world/level/levelgen/placement/CountVeryBiasedRangeDecorator crv
	place (Ljava/util/Random;Lnet/minecraft/world/level/levelgen/feature/configurations/CountRangeDecoratorConfiguration;Lnet/minecraft/core/BlockPos;)Ljava/util/stream/Stream; a
	place (Ljava/util/Random;Lnet/minecraft/world/level/levelgen/feature/configurations/DecoratorConfiguration;Lnet/minecraft/core/BlockPos;)Ljava/util/stream/Stream; a
net/minecraft/world/level/levelgen/placement/CountWithExtraChanceHeightmapDecorator crw
	getPositions (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/world/level/chunk/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/world/level/levelgen/feature/configurations/DecoratorConfiguration;Lnet/minecraft/core/BlockPos;)Ljava/util/stream/Stream; a
	getPositions (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/world/level/chunk/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/world/level/levelgen/placement/FrequencyWithExtraChanceDecoratorConfiguration;Lnet/minecraft/core/BlockPos;)Ljava/util/stream/Stream; a
net/minecraft/world/level/levelgen/placement/DarkOakTreePlacementDecorator crx
	getPositions (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/world/level/chunk/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/world/level/levelgen/feature/configurations/DecoratorConfiguration;Lnet/minecraft/core/BlockPos;)Ljava/util/stream/Stream; a
	getPositions (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/world/level/chunk/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/world/level/levelgen/feature/configurations/NoneDecoratorConfiguration;Lnet/minecraft/core/BlockPos;)Ljava/util/stream/Stream; a
net/minecraft/world/level/levelgen/placement/DepthAverageConfigation cry
	CODEC a
	baseline c
	count b
	spread d
net/minecraft/world/level/levelgen/placement/EmeraldPlacementDecorator crz
	place (Ljava/util/Random;Lnet/minecraft/world/level/levelgen/feature/configurations/DecoratorConfiguration;Lnet/minecraft/core/BlockPos;)Ljava/util/stream/Stream; a
	place (Ljava/util/Random;Lnet/minecraft/world/level/levelgen/feature/configurations/NoneDecoratorConfiguration;Lnet/minecraft/core/BlockPos;)Ljava/util/stream/Stream; a
net/minecraft/world/level/levelgen/placement/EndGatewayPlacementDecorator csa
	getPositions (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/world/level/chunk/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/world/level/levelgen/feature/configurations/DecoratorConfiguration;Lnet/minecraft/core/BlockPos;)Ljava/util/stream/Stream; a
	getPositions (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/world/level/chunk/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/world/level/levelgen/feature/configurations/NoneDecoratorConfiguration;Lnet/minecraft/core/BlockPos;)Ljava/util/stream/Stream; a
net/minecraft/world/level/levelgen/placement/EndIslandPlacementDecorator csb
	place (Ljava/util/Random;Lnet/minecraft/world/level/levelgen/feature/configurations/DecoratorConfiguration;Lnet/minecraft/core/BlockPos;)Ljava/util/stream/Stream; a
	place (Ljava/util/Random;Lnet/minecraft/world/level/levelgen/feature/configurations/NoneDecoratorConfiguration;Lnet/minecraft/core/BlockPos;)Ljava/util/stream/Stream; a
net/minecraft/world/level/levelgen/placement/FeatureDecorator csc
	CARVING_MASK y
	CHANCE_HEIGHTMAP i
	CHANCE_HEIGHTMAP_DOUBLE j
	CHANCE_PASSTHROUGH k
	CHANCE_RANGE r
	CHANCE_TOP_SOLID_HEIGHTMAP l
	CHORUS_PLANT K
	COUNT_BIASED_RANGE o
	COUNT_CHANCE_HEIGHTMAP s
	COUNT_CHANCE_HEIGHTMAP_DOUBLE t
	COUNT_DEPTH_AVERAGE u
	COUNT_EXTRA_HEIGHTMAP m
	COUNT_HEIGHTMAP b
	COUNT_HEIGHTMAP_32 d
	COUNT_HEIGHTMAP_DOUBLE e
	COUNT_HEIGHT_64 f
	COUNT_RANGE n
	COUNT_TOP_SOLID c
	COUNT_VERY_BIASED_RANGE p
	DARK_OAK_TREE G
	DUNGEONS F
	EMERALD_ORE C
	END_GATEWAY L
	END_ISLAND J
	FIRE A
	FOREST_ROCK z
	ICEBERG H
	LAVA_LAKE D
	LIGHT_GEM_CHANCE I
	MAGMA B
	NOISE_HEIGHTMAP_32 g
	NOISE_HEIGHTMAP_DOUBLE h
	NOPE a
	RANDOM_COUNT_RANGE q
	TOP_SOLID_HEIGHTMAP v
	TOP_SOLID_HEIGHTMAP_NOISE_BIASED x
	TOP_SOLID_HEIGHTMAP_RANGE w
	WATER_LAKE E
	configuredCodec M
	configured (Lnet/minecraft/world/level/levelgen/feature/configurations/DecoratorConfiguration;)Lnet/minecraft/world/level/levelgen/placement/ConfiguredDecorator; a
	configuredCodec ()Lcom/mojang/serialization/Codec; a
	getPositions (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/world/level/chunk/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/world/level/levelgen/feature/configurations/DecoratorConfiguration;Lnet/minecraft/core/BlockPos;)Ljava/util/stream/Stream; a
	placeFeature (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/StructureFeatureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/levelgen/feature/configurations/DecoratorConfiguration;Lnet/minecraft/world/level/levelgen/feature/ConfiguredFeature;)Z a
	register (Ljava/lang/String;Lnet/minecraft/world/level/levelgen/placement/FeatureDecorator;)Lnet/minecraft/world/level/levelgen/placement/FeatureDecorator; a
net/minecraft/world/level/levelgen/placement/ForestRockPlacementDecorator csd
	getPositions (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/world/level/chunk/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/world/level/levelgen/feature/configurations/DecoratorConfiguration;Lnet/minecraft/core/BlockPos;)Ljava/util/stream/Stream; a
	getPositions (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/world/level/chunk/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/world/level/levelgen/placement/FrequencyDecoratorConfiguration;Lnet/minecraft/core/BlockPos;)Ljava/util/stream/Stream; a
net/minecraft/world/level/levelgen/placement/FrequencyChanceDecoratorConfiguration cse
	CODEC a
	chance c
	count b
net/minecraft/world/level/levelgen/placement/FrequencyDecoratorConfiguration csf
	CODEC a
	count b
net/minecraft/world/level/levelgen/placement/FrequencyWithExtraChanceDecoratorConfiguration csg
	CODEC a
	count b
	extraChance c
	extraCount d
net/minecraft/world/level/levelgen/placement/IcebergPlacementDecorator csh
	getPositions (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/world/level/chunk/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/world/level/levelgen/feature/configurations/DecoratorConfiguration;Lnet/minecraft/core/BlockPos;)Ljava/util/stream/Stream; a
	getPositions (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/world/level/chunk/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/world/level/levelgen/placement/ChanceDecoratorConfiguration;Lnet/minecraft/core/BlockPos;)Ljava/util/stream/Stream; a
net/minecraft/world/level/levelgen/placement/LakeLavaPlacementDecorator csi
	getPositions (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/world/level/chunk/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/world/level/levelgen/feature/configurations/DecoratorConfiguration;Lnet/minecraft/core/BlockPos;)Ljava/util/stream/Stream; a
	getPositions (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/world/level/chunk/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/world/level/levelgen/placement/ChanceDecoratorConfiguration;Lnet/minecraft/core/BlockPos;)Ljava/util/stream/Stream; a
net/minecraft/world/level/levelgen/placement/LakeWaterPlacementDecorator csj
	getPositions (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/world/level/chunk/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/world/level/levelgen/feature/configurations/DecoratorConfiguration;Lnet/minecraft/core/BlockPos;)Ljava/util/stream/Stream; a
	getPositions (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/world/level/chunk/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/world/level/levelgen/placement/ChanceDecoratorConfiguration;Lnet/minecraft/core/BlockPos;)Ljava/util/stream/Stream; a
net/minecraft/world/level/levelgen/placement/MonsterRoomPlacementDecorator csk
	getPositions (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/world/level/chunk/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/world/level/levelgen/feature/configurations/DecoratorConfiguration;Lnet/minecraft/core/BlockPos;)Ljava/util/stream/Stream; a
	getPositions (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/world/level/chunk/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/world/level/levelgen/placement/ChanceDecoratorConfiguration;Lnet/minecraft/core/BlockPos;)Ljava/util/stream/Stream; a
net/minecraft/world/level/levelgen/placement/NoiseCountFactorDecoratorConfiguration csl
	CODEC a
	LOGGER g
	heightmap e
	noiseFactor c
	noiseOffset d
	noiseToCountRatio b
net/minecraft/world/level/levelgen/placement/NoiseHeightmap32Decorator csm
	getPositions (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/world/level/chunk/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/world/level/levelgen/feature/configurations/DecoratorConfiguration;Lnet/minecraft/core/BlockPos;)Ljava/util/stream/Stream; a
	getPositions (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/world/level/chunk/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/world/level/levelgen/feature/configurations/NoiseDependantDecoratorConfiguration;Lnet/minecraft/core/BlockPos;)Ljava/util/stream/Stream; a
net/minecraft/world/level/levelgen/placement/NoiseHeightmapDoubleDecorator csn
	getPositions (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/world/level/chunk/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/world/level/levelgen/feature/configurations/DecoratorConfiguration;Lnet/minecraft/core/BlockPos;)Ljava/util/stream/Stream; a
	getPositions (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/world/level/chunk/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/world/level/levelgen/feature/configurations/NoiseDependantDecoratorConfiguration;Lnet/minecraft/core/BlockPos;)Ljava/util/stream/Stream; a
net/minecraft/world/level/levelgen/placement/NopePlacementDecorator cso
	place (Ljava/util/Random;Lnet/minecraft/world/level/levelgen/feature/configurations/DecoratorConfiguration;Lnet/minecraft/core/BlockPos;)Ljava/util/stream/Stream; a
	place (Ljava/util/Random;Lnet/minecraft/world/level/levelgen/feature/configurations/NoneDecoratorConfiguration;Lnet/minecraft/core/BlockPos;)Ljava/util/stream/Stream; a
net/minecraft/world/level/levelgen/placement/RangeDecoratorConfiguration csp
	CODEC a
	max c
	min b
net/minecraft/world/level/levelgen/placement/SimpleFeatureDecorator csq
	getPositions (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/world/level/chunk/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/world/level/levelgen/feature/configurations/DecoratorConfiguration;Lnet/minecraft/core/BlockPos;)Ljava/util/stream/Stream; a
	place (Ljava/util/Random;Lnet/minecraft/world/level/levelgen/feature/configurations/DecoratorConfiguration;Lnet/minecraft/core/BlockPos;)Ljava/util/stream/Stream; a
net/minecraft/world/level/levelgen/placement/TopSolidHeightMapDecorator csr
	getPositions (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/world/level/chunk/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/world/level/levelgen/feature/configurations/DecoratorConfiguration;Lnet/minecraft/core/BlockPos;)Ljava/util/stream/Stream; a
	getPositions (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/world/level/chunk/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/world/level/levelgen/feature/configurations/NoneDecoratorConfiguration;Lnet/minecraft/core/BlockPos;)Ljava/util/stream/Stream; a
net/minecraft/world/level/levelgen/placement/TopSolidHeightMapNoiseBasedDecorator css
	getPositions (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/world/level/chunk/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/world/level/levelgen/feature/configurations/DecoratorConfiguration;Lnet/minecraft/core/BlockPos;)Ljava/util/stream/Stream; a
	getPositions (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/world/level/chunk/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/world/level/levelgen/placement/NoiseCountFactorDecoratorConfiguration;Lnet/minecraft/core/BlockPos;)Ljava/util/stream/Stream; a
net/minecraft/world/level/levelgen/placement/TopSolidHeightMapRangeDecorator cst
	getPositions (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/world/level/chunk/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/world/level/levelgen/feature/configurations/DecoratorConfiguration;Lnet/minecraft/core/BlockPos;)Ljava/util/stream/Stream; a
	getPositions (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/world/level/chunk/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/world/level/levelgen/placement/RangeDecoratorConfiguration;Lnet/minecraft/core/BlockPos;)Ljava/util/stream/Stream; a
net/minecraft/world/level/levelgen/placement/nether/ChanceRangeDecorator csu
	place (Ljava/util/Random;Lnet/minecraft/world/level/levelgen/feature/configurations/ChanceRangeDecoratorConfiguration;Lnet/minecraft/core/BlockPos;)Ljava/util/stream/Stream; a
	place (Ljava/util/Random;Lnet/minecraft/world/level/levelgen/feature/configurations/DecoratorConfiguration;Lnet/minecraft/core/BlockPos;)Ljava/util/stream/Stream; a
net/minecraft/world/level/levelgen/placement/nether/CountRangeDecorator csv
	place (Ljava/util/Random;Lnet/minecraft/world/level/levelgen/feature/configurations/CountRangeDecoratorConfiguration;Lnet/minecraft/core/BlockPos;)Ljava/util/stream/Stream; a
	place (Ljava/util/Random;Lnet/minecraft/world/level/levelgen/feature/configurations/DecoratorConfiguration;Lnet/minecraft/core/BlockPos;)Ljava/util/stream/Stream; a
net/minecraft/world/level/levelgen/placement/nether/FireDecorator csw
	place (Ljava/util/Random;Lnet/minecraft/world/level/levelgen/feature/configurations/DecoratorConfiguration;Lnet/minecraft/core/BlockPos;)Ljava/util/stream/Stream; a
	place (Ljava/util/Random;Lnet/minecraft/world/level/levelgen/placement/FrequencyDecoratorConfiguration;Lnet/minecraft/core/BlockPos;)Ljava/util/stream/Stream; a
net/minecraft/world/level/levelgen/placement/nether/LightGemChanceDecorator csx
	place (Ljava/util/Random;Lnet/minecraft/world/level/levelgen/feature/configurations/DecoratorConfiguration;Lnet/minecraft/core/BlockPos;)Ljava/util/stream/Stream; a
	place (Ljava/util/Random;Lnet/minecraft/world/level/levelgen/placement/FrequencyDecoratorConfiguration;Lnet/minecraft/core/BlockPos;)Ljava/util/stream/Stream; a
net/minecraft/world/level/levelgen/placement/nether/MagmaDecorator csy
	getPositions (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/world/level/chunk/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/world/level/levelgen/feature/configurations/DecoratorConfiguration;Lnet/minecraft/core/BlockPos;)Ljava/util/stream/Stream; a
	getPositions (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/world/level/chunk/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/world/level/levelgen/placement/FrequencyDecoratorConfiguration;Lnet/minecraft/core/BlockPos;)Ljava/util/stream/Stream; a
net/minecraft/world/level/levelgen/placement/nether/RandomCountRangeDecorator csz
	place (Ljava/util/Random;Lnet/minecraft/world/level/levelgen/feature/configurations/CountRangeDecoratorConfiguration;Lnet/minecraft/core/BlockPos;)Ljava/util/stream/Stream; a
	place (Ljava/util/Random;Lnet/minecraft/world/level/levelgen/feature/configurations/DecoratorConfiguration;Lnet/minecraft/core/BlockPos;)Ljava/util/stream/Stream; a
net/minecraft/world/level/levelgen/structure/BeardedStructureStart ctc
	calculateBoundingBox ()V b
net/minecraft/world/level/levelgen/structure/BoundingBox ctd
	x0 a
	x1 d
	y0 b
	y1 e
	z0 c
	z1 f
	createProper (IIIIII)Lnet/minecraft/world/level/levelgen/structure/BoundingBox; a
	createTag ()Lnet/minecraft/nbt/IntArrayTag; h
	expand (Lnet/minecraft/world/level/levelgen/structure/BoundingBox;)V c
	getCenter ()Lnet/minecraft/core/Vec3i; g
	getIntersection (Lnet/minecraft/world/level/levelgen/structure/BoundingBox;)Lnet/minecraft/world/level/levelgen/structure/BoundingBox; d
	getLength ()Lnet/minecraft/core/Vec3i; c
	getUnknownBox ()Lnet/minecraft/world/level/levelgen/structure/BoundingBox; a
	getXSpan ()I d
	getYSpan ()I e
	getZSpan ()I f
	infinite ()Lnet/minecraft/world/level/levelgen/structure/BoundingBox; b
	inflate (D)V a
	inflate (DDD)V a
	intersects (IIII)Z a
	intersects (IIIIII)Z b
	intersects (Lnet/minecraft/core/Vec3i;Lnet/minecraft/core/Vec3i;)Z a
	intersects (Lnet/minecraft/world/level/levelgen/structure/BoundingBox;)Z b
	isInside (Lnet/minecraft/core/Vec3i;)Z b
	isInsideOf (Lnet/minecraft/world/level/levelgen/structure/BoundingBox;)Z a
	move (III)V a
	move (Lnet/minecraft/core/Vec3i;)V a
	moved (III)Lnet/minecraft/world/level/levelgen/structure/BoundingBox; b
	orientBox (IIIIIIIIILnet/minecraft/core/Direction;)Lnet/minecraft/world/level/levelgen/structure/BoundingBox; a
net/minecraft/world/level/levelgen/structure/BuriedTreasurePieces cte
net/minecraft/world/level/levelgen/structure/BuriedTreasurePieces$BuriedTreasurePiece cte$a
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	isLiquid (Lnet/minecraft/world/level/block/state/BlockState;)Z a
	postProcess (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/StructureFeatureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/core/BlockPos;)Z a
net/minecraft/world/level/levelgen/structure/DesertPyramidPiece ctf
	hasPlacedChest e
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	postProcess (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/StructureFeatureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/core/BlockPos;)Z a
net/minecraft/world/level/levelgen/structure/EndCityPieces ctg
	FAT_TOWER_BRIDGES g
	FAT_TOWER_GENERATOR h
	HOUSE_TOWER_GENERATOR c
	INSERT b
	OVERWRITE a
	TOWER_BRIDGES d
	TOWER_BRIDGE_GENERATOR f
	TOWER_GENERATOR e
	addHelper (Ljava/util/List;Lnet/minecraft/world/level/levelgen/structure/EndCityPieces$EndCityPiece;)Lnet/minecraft/world/level/levelgen/structure/EndCityPieces$EndCityPiece; b
	addPiece (Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureManager;Lnet/minecraft/world/level/levelgen/structure/EndCityPieces$EndCityPiece;Lnet/minecraft/core/BlockPos;Ljava/lang/String;Lnet/minecraft/world/level/block/Rotation;Z)Lnet/minecraft/world/level/levelgen/structure/EndCityPieces$EndCityPiece; b
	recursiveChildren (Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureManager;Lnet/minecraft/world/level/levelgen/structure/EndCityPieces$SectionGenerator;ILnet/minecraft/world/level/levelgen/structure/EndCityPieces$EndCityPiece;Lnet/minecraft/core/BlockPos;Ljava/util/List;Ljava/util/Random;)Z b
	startHouseTower (Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureManager;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Rotation;Ljava/util/List;Ljava/util/Random;)V a
net/minecraft/world/level/levelgen/structure/EndCityPieces$EndCityPiece ctg$a
	overwrite f
	rotation e
	templateName d
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	handleDataMarker (Ljava/lang/String;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/LevelAccessor;Ljava/util/Random;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;)V a
	loadTemplate (Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureManager;)V a
net/minecraft/world/level/levelgen/structure/EndCityPieces$SectionGenerator ctg$b
	generate (Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureManager;ILnet/minecraft/world/level/levelgen/structure/EndCityPieces$EndCityPiece;Lnet/minecraft/core/BlockPos;Ljava/util/List;Ljava/util/Random;)Z a
	init ()V a
net/minecraft/world/level/levelgen/structure/IglooPieces cth
	OFFSETS e
	PIVOTS d
	STRUCTURE_LOCATION_IGLOO a
	STRUCTURE_LOCATION_LABORATORY c
	STRUCTURE_LOCATION_LADDER b
	addPieces (Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureManager;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Rotation;Ljava/util/List;Ljava/util/Random;)V a
net/minecraft/world/level/levelgen/structure/IglooPieces$IglooPiece cth$a
	rotation e
	templateLocation d
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	handleDataMarker (Ljava/lang/String;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/LevelAccessor;Ljava/util/Random;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;)V a
	loadTemplate (Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureManager;)V a
	postProcess (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/StructureFeatureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/core/BlockPos;)Z a
net/minecraft/world/level/levelgen/structure/JunglePyramidPiece cti
	STONE_SELECTOR i
	placedHiddenChest f
	placedMainChest e
	placedTrap1 g
	placedTrap2 h
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	postProcess (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/StructureFeatureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/core/BlockPos;)Z a
net/minecraft/world/level/levelgen/structure/JunglePyramidPiece$MossStoneSelector cti$a
	next (Ljava/util/Random;IIIZ)V a
net/minecraft/world/level/levelgen/structure/LegacyStructureDataHandler ctj
	CURRENT_TO_LEGACY_MAP a
	LEGACY_TO_CURRENT_MAP b
	currentKeys g
	dataMap d
	hasLegacyData c
	indexMap e
	legacyKeys f
	getLegacyStructureHandler (Lnet/minecraft/resources/ResourceKey;Lnet/minecraft/world/level/storage/DimensionDataStorage;)Lnet/minecraft/world/level/levelgen/structure/LegacyStructureDataHandler; a
	hasLegacyStart (IILjava/lang/String;)Z a
	isUnhandledStructureStart (II)Z a
	populateCaches (Lnet/minecraft/world/level/storage/DimensionDataStorage;)V a
	removeIndex (J)V a
	updateFromLegacy (Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/nbt/CompoundTag; a
	updateStructureStart (Lnet/minecraft/nbt/CompoundTag;Lnet/minecraft/world/level/ChunkPos;)Lnet/minecraft/nbt/CompoundTag; a
net/minecraft/world/level/levelgen/structure/MineShaftPieces ctk
	createRandomShaftPiece (Ljava/util/List;Ljava/util/Random;IIILnet/minecraft/core/Direction;ILnet/minecraft/world/level/levelgen/feature/MineshaftFeature$Type;)Lnet/minecraft/world/level/levelgen/structure/MineShaftPieces$MineShaftPiece; a
	generateAndAddPiece (Lnet/minecraft/world/level/levelgen/structure/StructurePiece;Ljava/util/List;Ljava/util/Random;IIILnet/minecraft/core/Direction;I)Lnet/minecraft/world/level/levelgen/structure/MineShaftPieces$MineShaftPiece; b
net/minecraft/world/level/levelgen/structure/MineShaftPieces$MineShaftCorridor ctk$a
	hasPlacedSpider d
	hasRails b
	numSections e
	spiderCorridor c
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	addChildren (Lnet/minecraft/world/level/levelgen/structure/StructurePiece;Ljava/util/List;Ljava/util/Random;)V a
	createChest (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Ljava/util/Random;IIILnet/minecraft/resources/ResourceLocation;)Z a
	findCorridorSize (Ljava/util/List;Ljava/util/Random;IIILnet/minecraft/core/Direction;)Lnet/minecraft/world/level/levelgen/structure/BoundingBox; a
	placeCobWeb (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Ljava/util/Random;FIII)V a
	placeSupport (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;IIIIILjava/util/Random;)V a
	postProcess (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/StructureFeatureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/core/BlockPos;)Z a
net/minecraft/world/level/levelgen/structure/MineShaftPieces$MineShaftCrossing ctk$b
	direction b
	isTwoFloored c
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	addChildren (Lnet/minecraft/world/level/levelgen/structure/StructurePiece;Ljava/util/List;Ljava/util/Random;)V a
	findCrossing (Ljava/util/List;Ljava/util/Random;IIILnet/minecraft/core/Direction;)Lnet/minecraft/world/level/levelgen/structure/BoundingBox; a
	placeSupportPillar (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;IIII)V a
	postProcess (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/StructureFeatureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/core/BlockPos;)Z a
net/minecraft/world/level/levelgen/structure/MineShaftPieces$MineShaftPiece ctk$c
	type a
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	getFenceBlock ()Lnet/minecraft/world/level/block/state/BlockState; b
	getPlanksBlock ()Lnet/minecraft/world/level/block/state/BlockState; a
	isSupportingBox (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;IIII)Z a
net/minecraft/world/level/levelgen/structure/MineShaftPieces$MineShaftRoom ctk$d
	childEntranceBoxes b
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	addChildren (Lnet/minecraft/world/level/levelgen/structure/StructurePiece;Ljava/util/List;Ljava/util/Random;)V a
	move (III)V a
	postProcess (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/StructureFeatureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/core/BlockPos;)Z a
net/minecraft/world/level/levelgen/structure/MineShaftPieces$MineShaftStairs ctk$e
	addChildren (Lnet/minecraft/world/level/levelgen/structure/StructurePiece;Ljava/util/List;Ljava/util/Random;)V a
	findStairs (Ljava/util/List;Ljava/util/Random;IIILnet/minecraft/core/Direction;)Lnet/minecraft/world/level/levelgen/structure/BoundingBox; a
	postProcess (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/StructureFeatureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/core/BlockPos;)Z a
net/minecraft/world/level/levelgen/structure/NetherBridgePieces ctl
	BRIDGE_PIECE_WEIGHTS a
	CASTLE_PIECE_WEIGHTS b
	findAndCreateBridgePieceFactory (Lnet/minecraft/world/level/levelgen/structure/NetherBridgePieces$PieceWeight;Ljava/util/List;Ljava/util/Random;IIILnet/minecraft/core/Direction;I)Lnet/minecraft/world/level/levelgen/structure/NetherBridgePieces$NetherBridgePiece; b
net/minecraft/world/level/levelgen/structure/NetherBridgePieces$BridgeCrossing ctl$a
	addChildren (Lnet/minecraft/world/level/levelgen/structure/StructurePiece;Ljava/util/List;Ljava/util/Random;)V a
	createPiece (Ljava/util/List;IIILnet/minecraft/core/Direction;I)Lnet/minecraft/world/level/levelgen/structure/NetherBridgePieces$BridgeCrossing; a
	postProcess (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/StructureFeatureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/core/BlockPos;)Z a
net/minecraft/world/level/levelgen/structure/NetherBridgePieces$BridgeEndFiller ctl$b
	selfSeed a
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	createPiece (Ljava/util/List;Ljava/util/Random;IIILnet/minecraft/core/Direction;I)Lnet/minecraft/world/level/levelgen/structure/NetherBridgePieces$BridgeEndFiller; a
	postProcess (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/StructureFeatureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/core/BlockPos;)Z a
net/minecraft/world/level/levelgen/structure/NetherBridgePieces$BridgeStraight ctl$c
	addChildren (Lnet/minecraft/world/level/levelgen/structure/StructurePiece;Ljava/util/List;Ljava/util/Random;)V a
	createPiece (Ljava/util/List;Ljava/util/Random;IIILnet/minecraft/core/Direction;I)Lnet/minecraft/world/level/levelgen/structure/NetherBridgePieces$BridgeStraight; a
	postProcess (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/StructureFeatureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/core/BlockPos;)Z a
net/minecraft/world/level/levelgen/structure/NetherBridgePieces$CastleCorridorStairsPiece ctl$d
	addChildren (Lnet/minecraft/world/level/levelgen/structure/StructurePiece;Ljava/util/List;Ljava/util/Random;)V a
	createPiece (Ljava/util/List;IIILnet/minecraft/core/Direction;I)Lnet/minecraft/world/level/levelgen/structure/NetherBridgePieces$CastleCorridorStairsPiece; a
	postProcess (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/StructureFeatureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/core/BlockPos;)Z a
net/minecraft/world/level/levelgen/structure/NetherBridgePieces$CastleCorridorTBalconyPiece ctl$e
	addChildren (Lnet/minecraft/world/level/levelgen/structure/StructurePiece;Ljava/util/List;Ljava/util/Random;)V a
	createPiece (Ljava/util/List;IIILnet/minecraft/core/Direction;I)Lnet/minecraft/world/level/levelgen/structure/NetherBridgePieces$CastleCorridorTBalconyPiece; a
	postProcess (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/StructureFeatureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/core/BlockPos;)Z a
net/minecraft/world/level/levelgen/structure/NetherBridgePieces$CastleEntrance ctl$f
	addChildren (Lnet/minecraft/world/level/levelgen/structure/StructurePiece;Ljava/util/List;Ljava/util/Random;)V a
	createPiece (Ljava/util/List;Ljava/util/Random;IIILnet/minecraft/core/Direction;I)Lnet/minecraft/world/level/levelgen/structure/NetherBridgePieces$CastleEntrance; a
	postProcess (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/StructureFeatureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/core/BlockPos;)Z a
net/minecraft/world/level/levelgen/structure/NetherBridgePieces$CastleSmallCorridorCrossingPiece ctl$g
	addChildren (Lnet/minecraft/world/level/levelgen/structure/StructurePiece;Ljava/util/List;Ljava/util/Random;)V a
	createPiece (Ljava/util/List;IIILnet/minecraft/core/Direction;I)Lnet/minecraft/world/level/levelgen/structure/NetherBridgePieces$CastleSmallCorridorCrossingPiece; a
	postProcess (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/StructureFeatureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/core/BlockPos;)Z a
net/minecraft/world/level/levelgen/structure/NetherBridgePieces$CastleSmallCorridorLeftTurnPiece ctl$h
	isNeedingChest a
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	addChildren (Lnet/minecraft/world/level/levelgen/structure/StructurePiece;Ljava/util/List;Ljava/util/Random;)V a
	createPiece (Ljava/util/List;Ljava/util/Random;IIILnet/minecraft/core/Direction;I)Lnet/minecraft/world/level/levelgen/structure/NetherBridgePieces$CastleSmallCorridorLeftTurnPiece; a
	postProcess (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/StructureFeatureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/core/BlockPos;)Z a
net/minecraft/world/level/levelgen/structure/NetherBridgePieces$CastleSmallCorridorPiece ctl$i
	addChildren (Lnet/minecraft/world/level/levelgen/structure/StructurePiece;Ljava/util/List;Ljava/util/Random;)V a
	createPiece (Ljava/util/List;IIILnet/minecraft/core/Direction;I)Lnet/minecraft/world/level/levelgen/structure/NetherBridgePieces$CastleSmallCorridorPiece; a
	postProcess (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/StructureFeatureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/core/BlockPos;)Z a
net/minecraft/world/level/levelgen/structure/NetherBridgePieces$CastleSmallCorridorRightTurnPiece ctl$j
	isNeedingChest a
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	addChildren (Lnet/minecraft/world/level/levelgen/structure/StructurePiece;Ljava/util/List;Ljava/util/Random;)V a
	createPiece (Ljava/util/List;Ljava/util/Random;IIILnet/minecraft/core/Direction;I)Lnet/minecraft/world/level/levelgen/structure/NetherBridgePieces$CastleSmallCorridorRightTurnPiece; a
	postProcess (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/StructureFeatureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/core/BlockPos;)Z a
net/minecraft/world/level/levelgen/structure/NetherBridgePieces$CastleStalkRoom ctl$k
	addChildren (Lnet/minecraft/world/level/levelgen/structure/StructurePiece;Ljava/util/List;Ljava/util/Random;)V a
	createPiece (Ljava/util/List;IIILnet/minecraft/core/Direction;I)Lnet/minecraft/world/level/levelgen/structure/NetherBridgePieces$CastleStalkRoom; a
	postProcess (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/StructureFeatureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/core/BlockPos;)Z a
net/minecraft/world/level/levelgen/structure/NetherBridgePieces$MonsterThrone ctl$l
	hasPlacedSpawner a
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	createPiece (Ljava/util/List;IIIILnet/minecraft/core/Direction;)Lnet/minecraft/world/level/levelgen/structure/NetherBridgePieces$MonsterThrone; a
	postProcess (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/StructureFeatureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/core/BlockPos;)Z a
net/minecraft/world/level/levelgen/structure/NetherBridgePieces$NetherBridgePiece ctl$m
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	generateAndAddPiece (Lnet/minecraft/world/level/levelgen/structure/NetherBridgePieces$StartPiece;Ljava/util/List;Ljava/util/Random;IIILnet/minecraft/core/Direction;IZ)Lnet/minecraft/world/level/levelgen/structure/StructurePiece; a
	generateChildForward (Lnet/minecraft/world/level/levelgen/structure/NetherBridgePieces$StartPiece;Ljava/util/List;Ljava/util/Random;IIZ)Lnet/minecraft/world/level/levelgen/structure/StructurePiece; a
	generateChildLeft (Lnet/minecraft/world/level/levelgen/structure/NetherBridgePieces$StartPiece;Ljava/util/List;Ljava/util/Random;IIZ)Lnet/minecraft/world/level/levelgen/structure/StructurePiece; b
	generateChildRight (Lnet/minecraft/world/level/levelgen/structure/NetherBridgePieces$StartPiece;Ljava/util/List;Ljava/util/Random;IIZ)Lnet/minecraft/world/level/levelgen/structure/StructurePiece; c
	generateLightPost (Lnet/minecraft/world/level/LevelAccessor;Ljava/util/Random;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;IIIII)V a
	generateLightPostFacingDown (Lnet/minecraft/world/level/LevelAccessor;Ljava/util/Random;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;III)V d
	generateLightPostFacingLeft (Lnet/minecraft/world/level/LevelAccessor;Ljava/util/Random;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;III)V b
	generateLightPostFacingRight (Lnet/minecraft/world/level/LevelAccessor;Ljava/util/Random;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;III)V a
	generateLightPostFacingUp (Lnet/minecraft/world/level/LevelAccessor;Ljava/util/Random;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;III)V c
	generatePiece (Lnet/minecraft/world/level/levelgen/structure/NetherBridgePieces$StartPiece;Ljava/util/List;Ljava/util/List;Ljava/util/Random;IIILnet/minecraft/core/Direction;I)Lnet/minecraft/world/level/levelgen/structure/NetherBridgePieces$NetherBridgePiece; a
	isOkBox (Lnet/minecraft/world/level/levelgen/structure/BoundingBox;)Z a
	updatePieceWeight (Ljava/util/List;)I a
net/minecraft/world/level/levelgen/structure/NetherBridgePieces$PieceWeight ctl$n
	allowInRow e
	maxPlaceCount d
	pieceClass a
	placeCount c
	weight b
	doPlace (I)Z a
	isValid ()Z a
net/minecraft/world/level/levelgen/structure/NetherBridgePieces$RoomCrossing ctl$o
	addChildren (Lnet/minecraft/world/level/levelgen/structure/StructurePiece;Ljava/util/List;Ljava/util/Random;)V a
	createPiece (Ljava/util/List;IIILnet/minecraft/core/Direction;I)Lnet/minecraft/world/level/levelgen/structure/NetherBridgePieces$RoomCrossing; a
	postProcess (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/StructureFeatureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/core/BlockPos;)Z a
net/minecraft/world/level/levelgen/structure/NetherBridgePieces$StairsRoom ctl$p
	addChildren (Lnet/minecraft/world/level/levelgen/structure/StructurePiece;Ljava/util/List;Ljava/util/Random;)V a
	createPiece (Ljava/util/List;IIIILnet/minecraft/core/Direction;)Lnet/minecraft/world/level/levelgen/structure/NetherBridgePieces$StairsRoom; a
	postProcess (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/StructureFeatureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/core/BlockPos;)Z a
net/minecraft/world/level/levelgen/structure/NetherBridgePieces$StartPiece ctl$q
	availableBridgePieces b
	availableCastlePieces c
	pendingChildren d
	previousPiece a
net/minecraft/world/level/levelgen/structure/NetherFossilFeature ctm
	getStartFactory ()Lnet/minecraft/world/level/levelgen/feature/StructureFeature$StructureStartFactory; a
net/minecraft/world/level/levelgen/structure/NetherFossilFeature$FeatureStart ctm$a
	generatePieces (Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureManager;IILnet/minecraft/world/level/biome/Biome;Lnet/minecraft/world/level/levelgen/feature/configurations/FeatureConfiguration;)V a
	generatePieces (Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureManager;IILnet/minecraft/world/level/biome/Biome;Lnet/minecraft/world/level/levelgen/feature/configurations/NoneFeatureConfiguration;)V a
net/minecraft/world/level/levelgen/structure/NetherFossilPieces ctn
	FOSSILS a
	addPieces (Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureManager;Ljava/util/List;Ljava/util/Random;Lnet/minecraft/core/BlockPos;)V a
net/minecraft/world/level/levelgen/structure/NetherFossilPieces$NetherFossilPiece ctn$a
	rotation e
	templateLocation d
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	handleDataMarker (Ljava/lang/String;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/LevelAccessor;Ljava/util/Random;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;)V a
	loadTemplate (Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureManager;)V a
	postProcess (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/StructureFeatureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/core/BlockPos;)Z a
net/minecraft/world/level/levelgen/structure/OceanMonumentPieces cto
net/minecraft/world/level/levelgen/structure/OceanMonumentPieces$FitDoubleXRoom cto$a
	create (Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/levelgen/structure/OceanMonumentPieces$RoomDefinition;Ljava/util/Random;)Lnet/minecraft/world/level/levelgen/structure/OceanMonumentPieces$OceanMonumentPiece; a
	fits (Lnet/minecraft/world/level/levelgen/structure/OceanMonumentPieces$RoomDefinition;)Z a
net/minecraft/world/level/levelgen/structure/OceanMonumentPieces$FitDoubleXYRoom cto$b
	create (Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/levelgen/structure/OceanMonumentPieces$RoomDefinition;Ljava/util/Random;)Lnet/minecraft/world/level/levelgen/structure/OceanMonumentPieces$OceanMonumentPiece; a
	fits (Lnet/minecraft/world/level/levelgen/structure/OceanMonumentPieces$RoomDefinition;)Z a
net/minecraft/world/level/levelgen/structure/OceanMonumentPieces$FitDoubleYRoom cto$c
	create (Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/levelgen/structure/OceanMonumentPieces$RoomDefinition;Ljava/util/Random;)Lnet/minecraft/world/level/levelgen/structure/OceanMonumentPieces$OceanMonumentPiece; a
	fits (Lnet/minecraft/world/level/levelgen/structure/OceanMonumentPieces$RoomDefinition;)Z a
net/minecraft/world/level/levelgen/structure/OceanMonumentPieces$FitDoubleYZRoom cto$d
	create (Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/levelgen/structure/OceanMonumentPieces$RoomDefinition;Ljava/util/Random;)Lnet/minecraft/world/level/levelgen/structure/OceanMonumentPieces$OceanMonumentPiece; a
	fits (Lnet/minecraft/world/level/levelgen/structure/OceanMonumentPieces$RoomDefinition;)Z a
net/minecraft/world/level/levelgen/structure/OceanMonumentPieces$FitDoubleZRoom cto$e
	create (Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/levelgen/structure/OceanMonumentPieces$RoomDefinition;Ljava/util/Random;)Lnet/minecraft/world/level/levelgen/structure/OceanMonumentPieces$OceanMonumentPiece; a
	fits (Lnet/minecraft/world/level/levelgen/structure/OceanMonumentPieces$RoomDefinition;)Z a
net/minecraft/world/level/levelgen/structure/OceanMonumentPieces$FitSimpleRoom cto$f
	create (Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/levelgen/structure/OceanMonumentPieces$RoomDefinition;Ljava/util/Random;)Lnet/minecraft/world/level/levelgen/structure/OceanMonumentPieces$OceanMonumentPiece; a
	fits (Lnet/minecraft/world/level/levelgen/structure/OceanMonumentPieces$RoomDefinition;)Z a
net/minecraft/world/level/levelgen/structure/OceanMonumentPieces$FitSimpleTopRoom cto$g
	create (Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/levelgen/structure/OceanMonumentPieces$RoomDefinition;Ljava/util/Random;)Lnet/minecraft/world/level/levelgen/structure/OceanMonumentPieces$OceanMonumentPiece; a
	fits (Lnet/minecraft/world/level/levelgen/structure/OceanMonumentPieces$RoomDefinition;)Z a
net/minecraft/world/level/levelgen/structure/OceanMonumentPieces$MonumentBuilding cto$h
	childPieces r
	coreRoom q
	sourceRoom p
	generateEntranceArchs (Lnet/minecraft/world/level/LevelAccessor;Ljava/util/Random;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;)V a
	generateEntranceWall (Lnet/minecraft/world/level/LevelAccessor;Ljava/util/Random;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;)V b
	generateLowerWall (Lnet/minecraft/world/level/LevelAccessor;Ljava/util/Random;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;)V d
	generateMiddleWall (Lnet/minecraft/world/level/LevelAccessor;Ljava/util/Random;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;)V e
	generateRoofPiece (Lnet/minecraft/world/level/LevelAccessor;Ljava/util/Random;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;)V c
	generateRoomGraph (Ljava/util/Random;)Ljava/util/List; a
	generateUpperWall (Lnet/minecraft/world/level/LevelAccessor;Ljava/util/Random;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;)V f
	generateWing (ZILnet/minecraft/world/level/LevelAccessor;Ljava/util/Random;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;)V a
	postProcess (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/StructureFeatureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/core/BlockPos;)Z a
net/minecraft/world/level/levelgen/structure/OceanMonumentPieces$MonumentRoomFitter cto$i
	create (Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/levelgen/structure/OceanMonumentPieces$RoomDefinition;Ljava/util/Random;)Lnet/minecraft/world/level/levelgen/structure/OceanMonumentPieces$OceanMonumentPiece; a
	fits (Lnet/minecraft/world/level/levelgen/structure/OceanMonumentPieces$RoomDefinition;)Z a
net/minecraft/world/level/levelgen/structure/OceanMonumentPieces$OceanMonumentCoreRoom cto$j
	postProcess (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/StructureFeatureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/core/BlockPos;)Z a
net/minecraft/world/level/levelgen/structure/OceanMonumentPieces$OceanMonumentDoubleXRoom cto$k
	postProcess (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/StructureFeatureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/core/BlockPos;)Z a
net/minecraft/world/level/levelgen/structure/OceanMonumentPieces$OceanMonumentDoubleXYRoom cto$l
	postProcess (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/StructureFeatureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/core/BlockPos;)Z a
net/minecraft/world/level/levelgen/structure/OceanMonumentPieces$OceanMonumentDoubleYRoom cto$m
	postProcess (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/StructureFeatureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/core/BlockPos;)Z a
net/minecraft/world/level/levelgen/structure/OceanMonumentPieces$OceanMonumentDoubleYZRoom cto$n
	postProcess (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/StructureFeatureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/core/BlockPos;)Z a
net/minecraft/world/level/levelgen/structure/OceanMonumentPieces$OceanMonumentDoubleZRoom cto$o
	postProcess (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/StructureFeatureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/core/BlockPos;)Z a
net/minecraft/world/level/levelgen/structure/OceanMonumentPieces$OceanMonumentEntryRoom cto$p
	postProcess (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/StructureFeatureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/core/BlockPos;)Z a
net/minecraft/world/level/levelgen/structure/OceanMonumentPieces$OceanMonumentPenthouse cto$q
	postProcess (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/StructureFeatureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/core/BlockPos;)Z a
net/minecraft/world/level/levelgen/structure/OceanMonumentPieces$OceanMonumentPiece cto$r
	BASE_BLACK c
	BASE_GRAY a
	BASE_LIGHT b
	DOT_DECO_DATA d
	FILL_BLOCK f
	FILL_KEEP g
	GRIDROOM_LEFTWING_CONNECT_INDEX j
	GRIDROOM_RIGHTWING_CONNECT_INDEX k
	GRIDROOM_SOURCE_INDEX h
	GRIDROOM_TOP_CONNECT_INDEX i
	LAMP_BLOCK e
	roomDefinition l
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	chunkIntersects (Lnet/minecraft/world/level/levelgen/structure/BoundingBox;IIII)Z a
	generateBoxOnFillOnly (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;IIIIIILnet/minecraft/world/level/block/state/BlockState;)V a
	generateDefaultFloor (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;IIZ)V a
	generateWaterBox (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;IIIIII)V a
	getRoomIndex (III)I b
	getRoomX (I)I a
	getRoomY (I)I b
	getRoomZ (I)I c
	spawnElder (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;III)Z a
net/minecraft/world/level/levelgen/structure/OceanMonumentPieces$OceanMonumentSimpleRoom cto$s
	mainDesign p
	postProcess (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/StructureFeatureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/core/BlockPos;)Z a
net/minecraft/world/level/levelgen/structure/OceanMonumentPieces$OceanMonumentSimpleTopRoom cto$t
	postProcess (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/StructureFeatureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/core/BlockPos;)Z a
net/minecraft/world/level/levelgen/structure/OceanMonumentPieces$OceanMonumentWingRoom cto$u
	mainDesign p
	postProcess (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/StructureFeatureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/core/BlockPos;)Z a
net/minecraft/world/level/levelgen/structure/OceanMonumentPieces$RoomDefinition cto$v
	claimed d
	connections b
	hasOpening c
	index a
	isSource e
	scanIndex f
	countOpenings ()I c
	findSource (I)Z a
	isSpecial ()Z b
	setConnection (Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/levelgen/structure/OceanMonumentPieces$RoomDefinition;)V a
	updateOpenings ()V a
net/minecraft/world/level/levelgen/structure/OceanRuinFeature ctp
	getStartFactory ()Lnet/minecraft/world/level/levelgen/feature/StructureFeature$StructureStartFactory; a
net/minecraft/world/level/levelgen/structure/OceanRuinFeature$OceanRuinStart ctp$a
	generatePieces (Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureManager;IILnet/minecraft/world/level/biome/Biome;Lnet/minecraft/world/level/levelgen/feature/configurations/FeatureConfiguration;)V a
	generatePieces (Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureManager;IILnet/minecraft/world/level/biome/Biome;Lnet/minecraft/world/level/levelgen/feature/configurations/OceanRuinConfiguration;)V a
net/minecraft/world/level/levelgen/structure/OceanRuinFeature$Type ctp$b
	$VALUES f
	BY_NAME d
	CODEC c
	COLD b
	WARM a
	name e
	byName (Ljava/lang/String;)Lnet/minecraft/world/level/levelgen/structure/OceanRuinFeature$Type; a
	getName ()Ljava/lang/String; b
	getSerializedName ()Ljava/lang/String; a
net/minecraft/world/level/levelgen/structure/OceanRuinPieces ctq
	BIG_RUINS_BRICK e
	BIG_RUINS_CRACKED g
	BIG_RUINS_MOSSY f
	BIG_WARM_RUINS h
	RUINS_BRICK b
	RUINS_CRACKED c
	RUINS_MOSSY d
	WARM_RUINS a
	addClusterRuins (Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureManager;Ljava/util/Random;Lnet/minecraft/world/level/block/Rotation;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/levelgen/feature/configurations/OceanRuinConfiguration;Ljava/util/List;)V a
	addPiece (Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureManager;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Rotation;Ljava/util/List;Ljava/util/Random;Lnet/minecraft/world/level/levelgen/feature/configurations/OceanRuinConfiguration;ZF)V a
	addPieces (Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureManager;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Rotation;Ljava/util/List;Ljava/util/Random;Lnet/minecraft/world/level/levelgen/feature/configurations/OceanRuinConfiguration;)V a
	allPositions (Ljava/util/Random;II)Ljava/util/List; a
	getBigWarmRuin (Ljava/util/Random;)Lnet/minecraft/resources/ResourceLocation; b
	getSmallWarmRuin (Ljava/util/Random;)Lnet/minecraft/resources/ResourceLocation; a
net/minecraft/world/level/levelgen/structure/OceanRuinPieces$OceanRuinPiece ctq$a
	biomeType d
	integrity e
	isLarge h
	rotation g
	templateLocation f
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	getHeight (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)I a
	handleDataMarker (Ljava/lang/String;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/LevelAccessor;Ljava/util/Random;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;)V a
	loadTemplate (Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureManager;)V a
	postProcess (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/StructureFeatureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/core/BlockPos;)Z a
net/minecraft/world/level/levelgen/structure/PillagerOutpostPieces ctr
	addPieces (Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureManager;Lnet/minecraft/core/BlockPos;Ljava/util/List;Lnet/minecraft/world/level/levelgen/WorldgenRandom;)V a
	bootstrap ()V a
net/minecraft/world/level/levelgen/structure/PillagerOutpostPieces$PillagerOutpostPiece ctr$a
net/minecraft/world/level/levelgen/structure/PoolElementStructurePiece cts
	LOGGER d
	element a
	groundLevelDelta e
	junctions f
	position b
	rotation c
	structureManager g
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	addJunction (Lnet/minecraft/world/level/levelgen/feature/structures/JigsawJunction;)V a
	getElement ()Lnet/minecraft/world/level/levelgen/feature/structures/StructurePoolElement; b
	getGroundLevelDelta ()I d
	getJunctions ()Ljava/util/List; e
	getPosition ()Lnet/minecraft/core/BlockPos; c
	getRotation ()Lnet/minecraft/world/level/block/Rotation; ap_
	move (III)V a
	place (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/StructureFeatureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Lnet/minecraft/core/BlockPos;Z)Z a
	postProcess (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/StructureFeatureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/core/BlockPos;)Z a
net/minecraft/world/level/levelgen/structure/RuinedPortalPiece ctt
	LOGGER d
	mirror g
	properties i
	rotation f
	templateLocation e
	verticalPlacement h
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	addNetherrackDripColumn (Ljava/util/Random;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;)V c
	addNetherrackDripColumnsBelowPortal (Ljava/util/Random;Lnet/minecraft/world/level/LevelAccessor;)V a
	canBlockBeReplacedByNetherrackOrMagma (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;)Z a
	getBlockReplaceRule (Lnet/minecraft/world/level/block/Block;FLnet/minecraft/world/level/block/Block;)Lnet/minecraft/world/level/levelgen/structure/templatesystem/ProcessorRule; a
	getBlockReplaceRule (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/world/level/levelgen/structure/templatesystem/ProcessorRule; a
	getHeightMapType (Lnet/minecraft/world/level/levelgen/structure/RuinedPortalPiece$VerticalPlacement;)Lnet/minecraft/world/level/levelgen/Heightmap$Types; a
	getLavaProcessorRule ()Lnet/minecraft/world/level/levelgen/structure/templatesystem/ProcessorRule; c
	getSurfaceY (Lnet/minecraft/world/level/LevelAccessor;IILnet/minecraft/world/level/levelgen/structure/RuinedPortalPiece$VerticalPlacement;)I a
	handleDataMarker (Ljava/lang/String;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/LevelAccessor;Ljava/util/Random;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;)V a
	loadTemplate (Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplate;Lnet/minecraft/core/BlockPos;)V a
	maybeAddLeavesAbove (Ljava/util/Random;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;)V b
	maybeAddVines (Ljava/util/Random;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;)V a
	placeNetherrackOrMagma (Ljava/util/Random;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;)V d
	postProcess (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/StructureFeatureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/core/BlockPos;)Z a
	spreadNetherrack (Ljava/util/Random;Lnet/minecraft/world/level/LevelAccessor;)V b
net/minecraft/world/level/levelgen/structure/RuinedPortalPiece$Properties ctt$a
	CODEC a
	airPocket d
	cold b
	mossiness c
	overgrown e
	replaceWithBlackstone g
	vines f
net/minecraft/world/level/levelgen/structure/RuinedPortalPiece$VerticalPlacement ctt$b
	$VALUES i
	BY_NAME g
	IN_MOUNTAIN d
	IN_NETHER f
	ON_LAND_SURFACE a
	ON_OCEAN_FLOOR c
	PARTLY_BURIED b
	UNDERGROUND e
	name h
	byName (Ljava/lang/String;)Lnet/minecraft/world/level/levelgen/structure/RuinedPortalPiece$VerticalPlacement; a
	getName ()Ljava/lang/String; a
net/minecraft/world/level/levelgen/structure/ScatteredFeaturePiece ctu
	depth c
	height b
	heightPosition d
	width a
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	updateAverageGroundHeight (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;I)Z a
net/minecraft/world/level/levelgen/structure/ShipwreckPieces ctv
	PIVOT a
	STRUCTURE_LOCATION_BEACHED b
	STRUCTURE_LOCATION_OCEAN c
	addPieces (Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureManager;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Rotation;Ljava/util/List;Ljava/util/Random;Lnet/minecraft/world/level/levelgen/feature/configurations/ShipwreckConfiguration;)V a
net/minecraft/world/level/levelgen/structure/ShipwreckPieces$ShipwreckPiece ctv$a
	isBeached f
	rotation d
	templateLocation e
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	handleDataMarker (Ljava/lang/String;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/LevelAccessor;Ljava/util/Random;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;)V a
	loadTemplate (Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureManager;)V a
	postProcess (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/StructureFeatureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/core/BlockPos;)Z a
net/minecraft/world/level/levelgen/structure/StrongholdPieces ctw
	SMOOTH_STONE_SELECTOR e
	STRONGHOLD_PIECE_WEIGHTS a
	currentPieces b
	imposedPiece c
	totalWeight d
	findAndCreatePieceFactory (Ljava/lang/Class;Ljava/util/List;Ljava/util/Random;IIILnet/minecraft/core/Direction;I)Lnet/minecraft/world/level/levelgen/structure/StrongholdPieces$StrongholdPiece; a
	generateAndAddPiece (Lnet/minecraft/world/level/levelgen/structure/StrongholdPieces$StartPiece;Ljava/util/List;Ljava/util/Random;IIILnet/minecraft/core/Direction;I)Lnet/minecraft/world/level/levelgen/structure/StructurePiece; c
	generatePieceFromSmallDoor (Lnet/minecraft/world/level/levelgen/structure/StrongholdPieces$StartPiece;Ljava/util/List;Ljava/util/Random;IIILnet/minecraft/core/Direction;I)Lnet/minecraft/world/level/levelgen/structure/StrongholdPieces$StrongholdPiece; b
	resetPieces ()V a
	updatePieceWeight ()Z c
net/minecraft/world/level/levelgen/structure/StrongholdPieces$ChestCorridor ctw$a
	hasPlacedChest a
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	addChildren (Lnet/minecraft/world/level/levelgen/structure/StructurePiece;Ljava/util/List;Ljava/util/Random;)V a
	createPiece (Ljava/util/List;Ljava/util/Random;IIILnet/minecraft/core/Direction;I)Lnet/minecraft/world/level/levelgen/structure/StrongholdPieces$ChestCorridor; a
	postProcess (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/StructureFeatureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/core/BlockPos;)Z a
net/minecraft/world/level/levelgen/structure/StrongholdPieces$FillerCorridor ctw$b
	steps a
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	findPieceBox (Ljava/util/List;Ljava/util/Random;IIILnet/minecraft/core/Direction;)Lnet/minecraft/world/level/levelgen/structure/BoundingBox; a
	postProcess (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/StructureFeatureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/core/BlockPos;)Z a
net/minecraft/world/level/levelgen/structure/StrongholdPieces$FiveCrossing ctw$c
	leftHigh b
	leftLow a
	rightHigh e
	rightLow c
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	addChildren (Lnet/minecraft/world/level/levelgen/structure/StructurePiece;Ljava/util/List;Ljava/util/Random;)V a
	createPiece (Ljava/util/List;Ljava/util/Random;IIILnet/minecraft/core/Direction;I)Lnet/minecraft/world/level/levelgen/structure/StrongholdPieces$FiveCrossing; a
	postProcess (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/StructureFeatureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/core/BlockPos;)Z a
net/minecraft/world/level/levelgen/structure/StrongholdPieces$LeftTurn ctw$d
	addChildren (Lnet/minecraft/world/level/levelgen/structure/StructurePiece;Ljava/util/List;Ljava/util/Random;)V a
	createPiece (Ljava/util/List;Ljava/util/Random;IIILnet/minecraft/core/Direction;I)Lnet/minecraft/world/level/levelgen/structure/StrongholdPieces$LeftTurn; a
	postProcess (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/StructureFeatureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/core/BlockPos;)Z a
net/minecraft/world/level/levelgen/structure/StrongholdPieces$Library ctw$e
	isTall a
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	createPiece (Ljava/util/List;Ljava/util/Random;IIILnet/minecraft/core/Direction;I)Lnet/minecraft/world/level/levelgen/structure/StrongholdPieces$Library; a
	postProcess (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/StructureFeatureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/core/BlockPos;)Z a
net/minecraft/world/level/levelgen/structure/StrongholdPieces$PieceWeight ctw$f
	maxPlaceCount d
	pieceClass a
	placeCount c
	weight b
	doPlace (I)Z a
	isValid ()Z a
net/minecraft/world/level/levelgen/structure/StrongholdPieces$PortalRoom ctw$g
	hasPlacedSpawner a
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	addChildren (Lnet/minecraft/world/level/levelgen/structure/StructurePiece;Ljava/util/List;Ljava/util/Random;)V a
	createPiece (Ljava/util/List;IIILnet/minecraft/core/Direction;I)Lnet/minecraft/world/level/levelgen/structure/StrongholdPieces$PortalRoom; a
	postProcess (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/StructureFeatureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/core/BlockPos;)Z a
net/minecraft/world/level/levelgen/structure/StrongholdPieces$PrisonHall ctw$h
	addChildren (Lnet/minecraft/world/level/levelgen/structure/StructurePiece;Ljava/util/List;Ljava/util/Random;)V a
	createPiece (Ljava/util/List;Ljava/util/Random;IIILnet/minecraft/core/Direction;I)Lnet/minecraft/world/level/levelgen/structure/StrongholdPieces$PrisonHall; a
	postProcess (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/StructureFeatureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/core/BlockPos;)Z a
net/minecraft/world/level/levelgen/structure/StrongholdPieces$RightTurn ctw$i
	addChildren (Lnet/minecraft/world/level/levelgen/structure/StructurePiece;Ljava/util/List;Ljava/util/Random;)V a
	createPiece (Ljava/util/List;Ljava/util/Random;IIILnet/minecraft/core/Direction;I)Lnet/minecraft/world/level/levelgen/structure/StrongholdPieces$RightTurn; a
	postProcess (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/StructureFeatureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/core/BlockPos;)Z a
net/minecraft/world/level/levelgen/structure/StrongholdPieces$RoomCrossing ctw$j
	type a
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	addChildren (Lnet/minecraft/world/level/levelgen/structure/StructurePiece;Ljava/util/List;Ljava/util/Random;)V a
	createPiece (Ljava/util/List;Ljava/util/Random;IIILnet/minecraft/core/Direction;I)Lnet/minecraft/world/level/levelgen/structure/StrongholdPieces$RoomCrossing; a
	postProcess (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/StructureFeatureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/core/BlockPos;)Z a
net/minecraft/world/level/levelgen/structure/StrongholdPieces$SmoothStoneSelector ctw$k
	next (Ljava/util/Random;IIIZ)V a
net/minecraft/world/level/levelgen/structure/StrongholdPieces$StairsDown ctw$l
	isSource a
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	addChildren (Lnet/minecraft/world/level/levelgen/structure/StructurePiece;Ljava/util/List;Ljava/util/Random;)V a
	createPiece (Ljava/util/List;Ljava/util/Random;IIILnet/minecraft/core/Direction;I)Lnet/minecraft/world/level/levelgen/structure/StrongholdPieces$StairsDown; a
	postProcess (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/StructureFeatureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/core/BlockPos;)Z a
net/minecraft/world/level/levelgen/structure/StrongholdPieces$StartPiece ctw$m
	pendingChildren c
	portalRoomPiece b
	previousPiece a
	getLocatorPosition ()Lnet/minecraft/core/BlockPos; ao_
net/minecraft/world/level/levelgen/structure/StrongholdPieces$Straight ctw$n
	leftChild a
	rightChild b
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	addChildren (Lnet/minecraft/world/level/levelgen/structure/StructurePiece;Ljava/util/List;Ljava/util/Random;)V a
	createPiece (Ljava/util/List;Ljava/util/Random;IIILnet/minecraft/core/Direction;I)Lnet/minecraft/world/level/levelgen/structure/StrongholdPieces$Straight; a
	postProcess (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/StructureFeatureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/core/BlockPos;)Z a
net/minecraft/world/level/levelgen/structure/StrongholdPieces$StraightStairsDown ctw$o
	addChildren (Lnet/minecraft/world/level/levelgen/structure/StructurePiece;Ljava/util/List;Ljava/util/Random;)V a
	createPiece (Ljava/util/List;Ljava/util/Random;IIILnet/minecraft/core/Direction;I)Lnet/minecraft/world/level/levelgen/structure/StrongholdPieces$StraightStairsDown; a
	postProcess (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/StructureFeatureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/core/BlockPos;)Z a
net/minecraft/world/level/levelgen/structure/StrongholdPieces$StrongholdPiece ctw$p
	entryDoor d
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	generateSmallDoor (Lnet/minecraft/world/level/LevelAccessor;Ljava/util/Random;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Lnet/minecraft/world/level/levelgen/structure/StrongholdPieces$StrongholdPiece$SmallDoorType;III)V a
	generateSmallDoorChildForward (Lnet/minecraft/world/level/levelgen/structure/StrongholdPieces$StartPiece;Ljava/util/List;Ljava/util/Random;II)Lnet/minecraft/world/level/levelgen/structure/StructurePiece; a
	generateSmallDoorChildLeft (Lnet/minecraft/world/level/levelgen/structure/StrongholdPieces$StartPiece;Ljava/util/List;Ljava/util/Random;II)Lnet/minecraft/world/level/levelgen/structure/StructurePiece; b
	generateSmallDoorChildRight (Lnet/minecraft/world/level/levelgen/structure/StrongholdPieces$StartPiece;Ljava/util/List;Ljava/util/Random;II)Lnet/minecraft/world/level/levelgen/structure/StructurePiece; c
	isOkBox (Lnet/minecraft/world/level/levelgen/structure/BoundingBox;)Z a
	randomSmallDoor (Ljava/util/Random;)Lnet/minecraft/world/level/levelgen/structure/StrongholdPieces$StrongholdPiece$SmallDoorType; a
net/minecraft/world/level/levelgen/structure/StrongholdPieces$StrongholdPiece$SmallDoorType ctw$p$a
	$VALUES e
	GRATES c
	IRON_DOOR d
	OPENING a
	WOOD_DOOR b
net/minecraft/world/level/levelgen/structure/StrongholdPieces$Turn ctw$q
net/minecraft/world/level/levelgen/structure/StructureFeatureIndexSavedData ctx
	all a
	remaining b
	addIndex (J)V a
	getAll ()Lit/unimi/dsi/fastutil/longs/LongSet; a
	hasStartIndex (J)Z b
	hasUnhandledIndex (J)Z c
	load (Lnet/minecraft/nbt/CompoundTag;)V a
	removeIndex (J)V d
	save (Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/nbt/CompoundTag; b
net/minecraft/world/level/levelgen/structure/StructurePiece cty
	CAVE_AIR m
	SHAPE_CHECK_BLOCKS e
	boundingBox n
	genDepth o
	mirror b
	orientation a
	rotation c
	type d
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	addChildren (Lnet/minecraft/world/level/levelgen/structure/StructurePiece;Ljava/util/List;Ljava/util/Random;)V a
	createChest (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Ljava/util/Random;IIILnet/minecraft/resources/ResourceLocation;)Z a
	createChest (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Ljava/util/Random;Lnet/minecraft/core/BlockPos;Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/world/level/block/state/BlockState;)Z a
	createDispenser (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Ljava/util/Random;IIILnet/minecraft/core/Direction;Lnet/minecraft/resources/ResourceLocation;)Z a
	createDoor (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Ljava/util/Random;IIILnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/DoorBlock;)V a
	createTag ()Lnet/minecraft/nbt/CompoundTag; f
	edgesLiquid (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;)Z a
	fillColumnDown (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/world/level/block/state/BlockState;IIILnet/minecraft/world/level/levelgen/structure/BoundingBox;)V b
	findCollisionPiece (Ljava/util/List;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;)Lnet/minecraft/world/level/levelgen/structure/StructurePiece; a
	generateAirBox (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;IIIIII)V b
	generateAirColumnUp (Lnet/minecraft/world/level/LevelAccessor;IIILnet/minecraft/world/level/levelgen/structure/BoundingBox;)V a
	generateBox (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;IIIIIILnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/state/BlockState;Z)V a
	generateBox (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;IIIIIIZLjava/util/Random;Lnet/minecraft/world/level/levelgen/structure/StructurePiece$BlockSelector;)V a
	generateBox (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/state/BlockState;Z)V a
	generateBox (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;ZLjava/util/Random;Lnet/minecraft/world/level/levelgen/structure/StructurePiece$BlockSelector;)V a
	generateMaybeBox (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Ljava/util/Random;FIIIIIILnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/state/BlockState;ZZ)V a
	generateUpperHalfSphere (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;IIIIIILnet/minecraft/world/level/block/state/BlockState;Z)V a
	getBlock (Lnet/minecraft/world/level/BlockGetter;IIILnet/minecraft/world/level/levelgen/structure/BoundingBox;)Lnet/minecraft/world/level/block/state/BlockState; a
	getBoundingBox ()Lnet/minecraft/world/level/levelgen/structure/BoundingBox; g
	getGenDepth ()I h
	getLocatorPosition ()Lnet/minecraft/core/BlockPos; ao_
	getMirror ()Lnet/minecraft/world/level/block/Mirror; j
	getOrientation ()Lnet/minecraft/core/Direction; i
	getRotation ()Lnet/minecraft/world/level/block/Rotation; ap_
	getType ()Lnet/minecraft/world/level/levelgen/feature/StructurePieceType; k
	getWorldPos (III)Lnet/minecraft/core/BlockPos; c
	getWorldX (II)I a
	getWorldY (I)I d
	getWorldZ (II)I b
	isCloseToChunk (Lnet/minecraft/world/level/ChunkPos;I)Z a
	isInterior (Lnet/minecraft/world/level/LevelReader;IIILnet/minecraft/world/level/levelgen/structure/BoundingBox;)Z a
	maybeGenerateBlock (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Ljava/util/Random;FIIILnet/minecraft/world/level/block/state/BlockState;)V a
	move (III)V a
	placeBlock (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/world/level/block/state/BlockState;IIILnet/minecraft/world/level/levelgen/structure/BoundingBox;)V a
	postProcess (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/StructureFeatureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/core/BlockPos;)Z a
	reorient (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/state/BlockState; a
	setOrientation (Lnet/minecraft/core/Direction;)V a
net/minecraft/world/level/levelgen/structure/StructurePiece$BlockSelector cty$a
	next a
	getNext ()Lnet/minecraft/world/level/block/state/BlockState; a
	next (Ljava/util/Random;IIIZ)V a
net/minecraft/world/level/levelgen/structure/StructureStart ctz
	INVALID_START a
	boundingBox c
	chunkX f
	chunkZ g
	feature e
	pieces b
	random d
	references h
	addReference ()V i
	calculateBoundingBox ()V b
	canBeReferenced ()Z h
	createTag (II)Lnet/minecraft/nbt/CompoundTag; a
	generatePieces (Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureManager;IILnet/minecraft/world/level/biome/Biome;Lnet/minecraft/world/level/levelgen/feature/configurations/FeatureConfiguration;)V a
	getBoundingBox ()Lnet/minecraft/world/level/levelgen/structure/BoundingBox; c
	getChunkX ()I f
	getChunkZ ()I g
	getFeature ()Lnet/minecraft/world/level/levelgen/feature/StructureFeature; l
	getLocatePos ()Lnet/minecraft/core/BlockPos; a
	getMaxReferences ()I k
	getPieces ()Ljava/util/List; d
	getReferences ()I j
	isValid ()Z e
	moveBelowSeaLevel (ILjava/util/Random;I)V a
	moveInsideHeights (Ljava/util/Random;II)V a
	placeInChunk (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/StructureFeatureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Lnet/minecraft/world/level/ChunkPos;)V a
net/minecraft/world/level/levelgen/structure/SwamplandHutPiece cua
	spawnedCat f
	spawnedWitch e
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	postProcess (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/StructureFeatureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/core/BlockPos;)Z a
	spawnCat (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;)V a
net/minecraft/world/level/levelgen/structure/TemplateStructurePiece cub
	LOGGER d
	placeSettings b
	template a
	templatePosition c
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	getRotation ()Lnet/minecraft/world/level/block/Rotation; ap_
	handleDataMarker (Ljava/lang/String;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/LevelAccessor;Ljava/util/Random;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;)V a
	move (III)V a
	postProcess (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/StructureFeatureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/core/BlockPos;)Z a
	setup (Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplate;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructurePlaceSettings;)V a
net/minecraft/world/level/levelgen/structure/WoodlandMansionPieces cuc
	generateMansion (Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureManager;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Rotation;Ljava/util/List;Ljava/util/Random;)V a
	main ([Ljava/lang/String;)V a
net/minecraft/world/level/levelgen/structure/WoodlandMansionPieces$FirstFloorRoomCollection cuc$a
	get1x1 (Ljava/util/Random;)Ljava/lang/String; a
	get1x1Secret (Ljava/util/Random;)Ljava/lang/String; b
	get1x2FrontEntrance (Ljava/util/Random;Z)Ljava/lang/String; b
	get1x2Secret (Ljava/util/Random;)Ljava/lang/String; c
	get1x2SideEntrance (Ljava/util/Random;Z)Ljava/lang/String; a
	get2x2 (Ljava/util/Random;)Ljava/lang/String; d
	get2x2Secret (Ljava/util/Random;)Ljava/lang/String; e
net/minecraft/world/level/levelgen/structure/WoodlandMansionPieces$FloorRoomCollection cuc$b
	get1x1 (Ljava/util/Random;)Ljava/lang/String; a
	get1x1Secret (Ljava/util/Random;)Ljava/lang/String; b
	get1x2FrontEntrance (Ljava/util/Random;Z)Ljava/lang/String; b
	get1x2Secret (Ljava/util/Random;)Ljava/lang/String; c
	get1x2SideEntrance (Ljava/util/Random;Z)Ljava/lang/String; a
	get2x2 (Ljava/util/Random;)Ljava/lang/String; d
	get2x2Secret (Ljava/util/Random;)Ljava/lang/String; e
net/minecraft/world/level/levelgen/structure/WoodlandMansionPieces$MansionGrid cuc$c
	baseGrid b
	entranceX e
	entranceY f
	floorRooms d
	random a
	thirdFloorGrid c
	cleanEdges (Lnet/minecraft/world/level/levelgen/structure/WoodlandMansionPieces$SimpleGrid;)Z a
	get1x2RoomDirection (Lnet/minecraft/world/level/levelgen/structure/WoodlandMansionPieces$SimpleGrid;IIII)Lnet/minecraft/core/Direction; b
	identifyRooms (Lnet/minecraft/world/level/levelgen/structure/WoodlandMansionPieces$SimpleGrid;Lnet/minecraft/world/level/levelgen/structure/WoodlandMansionPieces$SimpleGrid;)V a
	isHouse (Lnet/minecraft/world/level/levelgen/structure/WoodlandMansionPieces$SimpleGrid;II)Z a
	isRoomId (Lnet/minecraft/world/level/levelgen/structure/WoodlandMansionPieces$SimpleGrid;IIII)Z a
	print ()V a
	recursiveCorridor (Lnet/minecraft/world/level/levelgen/structure/WoodlandMansionPieces$SimpleGrid;IILnet/minecraft/core/Direction;I)V a
	setupThirdFloor ()V b
net/minecraft/world/level/levelgen/structure/WoodlandMansionPieces$MansionPiecePlacer cuc$d
	random b
	startX c
	startY d
	structureManager a
	addRoom1x1 (Ljava/util/List;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Rotation;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/levelgen/structure/WoodlandMansionPieces$FloorRoomCollection;)V a
	addRoom1x2 (Ljava/util/List;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Rotation;Lnet/minecraft/core/Direction;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/levelgen/structure/WoodlandMansionPieces$FloorRoomCollection;Z)V a
	addRoom2x2 (Ljava/util/List;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Rotation;Lnet/minecraft/core/Direction;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/levelgen/structure/WoodlandMansionPieces$FloorRoomCollection;)V a
	addRoom2x2Secret (Ljava/util/List;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Rotation;Lnet/minecraft/world/level/levelgen/structure/WoodlandMansionPieces$FloorRoomCollection;)V a
	createMansion (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Rotation;Ljava/util/List;Lnet/minecraft/world/level/levelgen/structure/WoodlandMansionPieces$MansionGrid;)V a
	createRoof (Ljava/util/List;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Rotation;Lnet/minecraft/world/level/levelgen/structure/WoodlandMansionPieces$SimpleGrid;Lnet/minecraft/world/level/levelgen/structure/WoodlandMansionPieces$SimpleGrid;)V a
	entrance (Ljava/util/List;Lnet/minecraft/world/level/levelgen/structure/WoodlandMansionPieces$PlacementData;)V a
	traverseInnerTurn (Ljava/util/List;Lnet/minecraft/world/level/levelgen/structure/WoodlandMansionPieces$PlacementData;)V d
	traverseOuterWalls (Ljava/util/List;Lnet/minecraft/world/level/levelgen/structure/WoodlandMansionPieces$PlacementData;Lnet/minecraft/world/level/levelgen/structure/WoodlandMansionPieces$SimpleGrid;Lnet/minecraft/core/Direction;IIII)V a
	traverseTurn (Ljava/util/List;Lnet/minecraft/world/level/levelgen/structure/WoodlandMansionPieces$PlacementData;)V c
	traverseWallPiece (Ljava/util/List;Lnet/minecraft/world/level/levelgen/structure/WoodlandMansionPieces$PlacementData;)V b
net/minecraft/world/level/levelgen/structure/WoodlandMansionPieces$PlacementData cuc$e
	position b
	rotation a
	wallType c
net/minecraft/world/level/levelgen/structure/WoodlandMansionPieces$SecondFloorRoomCollection cuc$f
	get1x1 (Ljava/util/Random;)Ljava/lang/String; a
	get1x1Secret (Ljava/util/Random;)Ljava/lang/String; b
	get1x2FrontEntrance (Ljava/util/Random;Z)Ljava/lang/String; b
	get1x2Secret (Ljava/util/Random;)Ljava/lang/String; c
	get1x2SideEntrance (Ljava/util/Random;Z)Ljava/lang/String; a
	get2x2 (Ljava/util/Random;)Ljava/lang/String; d
	get2x2Secret (Ljava/util/Random;)Ljava/lang/String; e
net/minecraft/world/level/levelgen/structure/WoodlandMansionPieces$SimpleGrid cuc$g
	grid a
	height c
	valueIfOutside d
	width b
	edgesTo (III)Z b
	get (II)I a
	set (III)V a
	set (IIIII)V a
	setif (IIII)V a
net/minecraft/world/level/levelgen/structure/WoodlandMansionPieces$ThirdFloorRoomCollection cuc$h
net/minecraft/world/level/levelgen/structure/WoodlandMansionPieces$WoodlandMansionPiece cuc$i
	mirror f
	rotation e
	templateName d
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	handleDataMarker (Ljava/lang/String;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/LevelAccessor;Ljava/util/Random;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;)V a
	loadTemplate (Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureManager;)V a
net/minecraft/world/level/levelgen/structure/templatesystem/AlwaysTrueTest cue
	CODEC a
	INSTANCE b
	getType ()Lnet/minecraft/world/level/levelgen/structure/templatesystem/RuleTestType; a
	test (Lnet/minecraft/world/level/block/state/BlockState;Ljava/util/Random;)Z a
net/minecraft/world/level/levelgen/structure/templatesystem/AxisAlignedLinearPosTest cuf
	CODEC a
	axis g
	maxChance d
	maxDist f
	minChance b
	minDist e
	getType ()Lnet/minecraft/world/level/levelgen/structure/templatesystem/PosRuleTestType; a
	test (Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)Z a
net/minecraft/world/level/levelgen/structure/templatesystem/BlackstoneReplaceProcessor cug
	CODEC a
	INSTANCE b
	replacements c
	getType ()Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureProcessorType; a
	processBlock (Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplate$StructureBlockInfo;Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplate$StructureBlockInfo;Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructurePlaceSettings;)Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplate$StructureBlockInfo; a
net/minecraft/world/level/levelgen/structure/templatesystem/BlockAgeProcessor cuh
	CODEC a
	mossiness b
	getRandomBlock (Ljava/util/Random;[Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/state/BlockState; a
	getRandomBlock (Ljava/util/Random;[Lnet/minecraft/world/level/block/state/BlockState;[Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/state/BlockState; a
	getRandomFacingStairs (Ljava/util/Random;Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/world/level/block/state/BlockState; a
	getType ()Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureProcessorType; a
	maybeReplaceFullStoneBlock (Ljava/util/Random;)Lnet/minecraft/world/level/block/state/BlockState; a
	maybeReplaceObsidian (Ljava/util/Random;)Lnet/minecraft/world/level/block/state/BlockState; d
	maybeReplaceSlab (Ljava/util/Random;)Lnet/minecraft/world/level/block/state/BlockState; b
	maybeReplaceStairs (Ljava/util/Random;Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/state/BlockState; a
	maybeReplaceWall (Ljava/util/Random;)Lnet/minecraft/world/level/block/state/BlockState; c
	processBlock (Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplate$StructureBlockInfo;Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplate$StructureBlockInfo;Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructurePlaceSettings;)Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplate$StructureBlockInfo; a
net/minecraft/world/level/levelgen/structure/templatesystem/BlockIgnoreProcessor cui
	AIR c
	CODEC a
	STRUCTURE_AND_AIR d
	STRUCTURE_BLOCK b
	toIgnore e
	getType ()Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureProcessorType; a
	processBlock (Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplate$StructureBlockInfo;Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplate$StructureBlockInfo;Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructurePlaceSettings;)Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplate$StructureBlockInfo; a
net/minecraft/world/level/levelgen/structure/templatesystem/BlockMatchTest cuj
	CODEC a
	block b
	getType ()Lnet/minecraft/world/level/levelgen/structure/templatesystem/RuleTestType; a
	test (Lnet/minecraft/world/level/block/state/BlockState;Ljava/util/Random;)Z a
net/minecraft/world/level/levelgen/structure/templatesystem/BlockRotProcessor cuk
	CODEC a
	integrity b
	getType ()Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureProcessorType; a
	processBlock (Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplate$StructureBlockInfo;Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplate$StructureBlockInfo;Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructurePlaceSettings;)Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplate$StructureBlockInfo; a
net/minecraft/world/level/levelgen/structure/templatesystem/BlockStateMatchTest cul
	CODEC a
	blockState b
	getType ()Lnet/minecraft/world/level/levelgen/structure/templatesystem/RuleTestType; a
	test (Lnet/minecraft/world/level/block/state/BlockState;Ljava/util/Random;)Z a
net/minecraft/world/level/levelgen/structure/templatesystem/GravityProcessor cum
	CODEC a
	heightmap b
	offset c
	getType ()Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureProcessorType; a
	processBlock (Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplate$StructureBlockInfo;Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplate$StructureBlockInfo;Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructurePlaceSettings;)Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplate$StructureBlockInfo; a
net/minecraft/world/level/levelgen/structure/templatesystem/JigsawReplacementProcessor cun
	CODEC a
	INSTANCE b
	getType ()Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureProcessorType; a
	processBlock (Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplate$StructureBlockInfo;Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplate$StructureBlockInfo;Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructurePlaceSettings;)Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplate$StructureBlockInfo; a
net/minecraft/world/level/levelgen/structure/templatesystem/LavaSubmergedBlockProcessor cuo
	CODEC a
	INSTANCE b
	getType ()Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureProcessorType; a
	processBlock (Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplate$StructureBlockInfo;Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplate$StructureBlockInfo;Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructurePlaceSettings;)Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplate$StructureBlockInfo; a
net/minecraft/world/level/levelgen/structure/templatesystem/LinearPosTest cup
	CODEC a
	maxChance d
	maxDist f
	minChance b
	minDist e
	getType ()Lnet/minecraft/world/level/levelgen/structure/templatesystem/PosRuleTestType; a
	test (Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)Z a
net/minecraft/world/level/levelgen/structure/templatesystem/NopProcessor cuq
	CODEC a
	INSTANCE b
	getType ()Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureProcessorType; a
	processBlock (Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplate$StructureBlockInfo;Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplate$StructureBlockInfo;Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructurePlaceSettings;)Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplate$StructureBlockInfo; a
net/minecraft/world/level/levelgen/structure/templatesystem/PosAlwaysTrueTest cur
	CODEC a
	INSTANCE b
	getType ()Lnet/minecraft/world/level/levelgen/structure/templatesystem/PosRuleTestType; a
	test (Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)Z a
net/minecraft/world/level/levelgen/structure/templatesystem/PosRuleTest cus
	CODEC c
	getType ()Lnet/minecraft/world/level/levelgen/structure/templatesystem/PosRuleTestType; a
	test (Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)Z a
net/minecraft/world/level/levelgen/structure/templatesystem/PosRuleTestType cut
	ALWAYS_TRUE_TEST a
	AXIS_ALIGNED_LINEAR_POS_TEST c
	LINEAR_POS_TEST b
	register (Ljava/lang/String;Lcom/mojang/serialization/Codec;)Lnet/minecraft/world/level/levelgen/structure/templatesystem/PosRuleTestType; a
net/minecraft/world/level/levelgen/structure/templatesystem/ProcessorRule cuu
	CODEC a
	inputPredicate b
	locPredicate c
	outputState e
	outputTag f
	posPredicate d
	getOutputState ()Lnet/minecraft/world/level/block/state/BlockState; a
	getOutputTag ()Lnet/minecraft/nbt/CompoundTag; b
	test (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)Z a
net/minecraft/world/level/levelgen/structure/templatesystem/RandomBlockMatchTest cuv
	CODEC a
	block b
	probability d
	getType ()Lnet/minecraft/world/level/levelgen/structure/templatesystem/RuleTestType; a
	test (Lnet/minecraft/world/level/block/state/BlockState;Ljava/util/Random;)Z a
net/minecraft/world/level/levelgen/structure/templatesystem/RandomBlockStateMatchTest cuw
	CODEC a
	blockState b
	probability d
	getType ()Lnet/minecraft/world/level/levelgen/structure/templatesystem/RuleTestType; a
	test (Lnet/minecraft/world/level/block/state/BlockState;Ljava/util/Random;)Z a
net/minecraft/world/level/levelgen/structure/templatesystem/RuleProcessor cux
	CODEC a
	rules b
	getType ()Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureProcessorType; a
	processBlock (Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplate$StructureBlockInfo;Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplate$StructureBlockInfo;Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructurePlaceSettings;)Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplate$StructureBlockInfo; a
net/minecraft/world/level/levelgen/structure/templatesystem/RuleTest cuy
	CODEC c
	getType ()Lnet/minecraft/world/level/levelgen/structure/templatesystem/RuleTestType; a
	test (Lnet/minecraft/world/level/block/state/BlockState;Ljava/util/Random;)Z a
net/minecraft/world/level/levelgen/structure/templatesystem/RuleTestType cuz
	ALWAYS_TRUE_TEST a
	BLOCKSTATE_TEST c
	BLOCK_TEST b
	RANDOM_BLOCKSTATE_TEST f
	RANDOM_BLOCK_TEST e
	TAG_TEST d
	register (Ljava/lang/String;Lcom/mojang/serialization/Codec;)Lnet/minecraft/world/level/levelgen/structure/templatesystem/RuleTestType; a
net/minecraft/world/level/levelgen/structure/templatesystem/StructureManager cva
	LOGGER a
	fixerUpper c
	generatedDir e
	resourceManager d
	structureRepository b
	createAndValidatePathToStructure (Lnet/minecraft/resources/ResourceLocation;Ljava/lang/String;)Ljava/nio/file/Path; b
	createPathToStructure (Lnet/minecraft/resources/ResourceLocation;Ljava/lang/String;)Ljava/nio/file/Path; a
	get (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplate; b
	getOrCreate (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplate; a
	loadFromGenerated (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplate; f
	loadFromResource (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplate; e
	onResourceManagerReload (Lnet/minecraft/server/packs/resources/ResourceManager;)V a
	readStructure (Ljava/io/InputStream;)Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplate; a
	readStructure (Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplate; a
	remove (Lnet/minecraft/resources/ResourceLocation;)V d
	save (Lnet/minecraft/resources/ResourceLocation;)Z c
net/minecraft/world/level/levelgen/structure/templatesystem/StructurePlaceSettings cvb
	boundingBox f
	chunkPos e
	finalizeEntities l
	ignoreEntities d
	keepLiquids g
	knownShape k
	mirror a
	palette i
	processors j
	random h
	rotation b
	rotationPivot c
	addProcessor (Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureProcessor;)Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructurePlaceSettings; a
	calculateBoundingBox (Lnet/minecraft/world/level/ChunkPos;)Lnet/minecraft/world/level/levelgen/structure/BoundingBox; b
	clearProcessors ()Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructurePlaceSettings; b
	copy ()Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructurePlaceSettings; a
	getBoundingBox ()Lnet/minecraft/world/level/levelgen/structure/BoundingBox; h
	getChunkPos ()Lnet/minecraft/world/level/ChunkPos; f
	getKnownShape ()Z i
	getMirror ()Lnet/minecraft/world/level/block/Mirror; c
	getProcessors ()Ljava/util/List; j
	getRandom (Lnet/minecraft/core/BlockPos;)Ljava/util/Random; b
	getRandomPalette (Ljava/util/List;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplate$Palette; a
	getRotation ()Lnet/minecraft/world/level/block/Rotation; d
	getRotationPivot ()Lnet/minecraft/core/BlockPos; e
	isIgnoreEntities ()Z g
	popProcessor (Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureProcessor;)Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructurePlaceSettings; b
	setBoundingBox (Lnet/minecraft/world/level/levelgen/structure/BoundingBox;)Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructurePlaceSettings; a
	setChunkPos (Lnet/minecraft/world/level/ChunkPos;)Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructurePlaceSettings; a
	setFinalizeEntities (Z)Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructurePlaceSettings; d
	setIgnoreEntities (Z)Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructurePlaceSettings; a
	setKeepLiquids (Z)Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructurePlaceSettings; b
	setKnownShape (Z)Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructurePlaceSettings; c
	setMirror (Lnet/minecraft/world/level/block/Mirror;)Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructurePlaceSettings; a
	setRandom (Ljava/util/Random;)Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructurePlaceSettings; a
	setRotation (Lnet/minecraft/world/level/block/Rotation;)Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructurePlaceSettings; a
	setRotationPivot (Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructurePlaceSettings; a
	shouldFinalizeEntities ()Z m
	shouldKeepLiquids ()Z l
	updateBoundingBoxFromChunkPos ()V k
net/minecraft/world/level/levelgen/structure/templatesystem/StructureProcessor cvc
	getType ()Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureProcessorType; a
	processBlock (Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplate$StructureBlockInfo;Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplate$StructureBlockInfo;Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructurePlaceSettings;)Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplate$StructureBlockInfo; a
net/minecraft/world/level/levelgen/structure/templatesystem/StructureProcessorType cvd
	BLACKSTONE_REPLACE h
	BLOCK_AGE g
	BLOCK_IGNORE a
	BLOCK_ROT b
	CODEC j
	GRAVITY c
	JIGSAW_REPLACEMENT d
	LAVA_SUBMERGED_BLOCK i
	NOP f
	RULE e
	register (Ljava/lang/String;Lcom/mojang/serialization/Codec;)Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureProcessorType; a
net/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplate cve
	author d
	entityInfoList b
	palettes a
	size c
	addToLists (Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplate$StructureBlockInfo;Ljava/util/List;Ljava/util/List;Ljava/util/List;)V a
	buildInfoList (Ljava/util/List;Ljava/util/List;Ljava/util/List;)Ljava/util/List; a
	calculateConnectedPosition (Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructurePlaceSettings;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructurePlaceSettings;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/core/BlockPos; a
	calculateRelativePosition (Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructurePlaceSettings;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/core/BlockPos; a
	createEntityIgnoreException (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/nbt/CompoundTag;)Ljava/util/Optional; a
	fillEntityList (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)V a
	fillFromWorld (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;ZLnet/minecraft/world/level/block/Block;)V a
	filterBlocks (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructurePlaceSettings;Lnet/minecraft/world/level/block/Block;)Ljava/util/List; a
	filterBlocks (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructurePlaceSettings;Lnet/minecraft/world/level/block/Block;Z)Ljava/util/List; a
	getAuthor ()Ljava/lang/String; b
	getBoundingBox (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Rotation;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Mirror;)Lnet/minecraft/world/level/levelgen/structure/BoundingBox; a
	getBoundingBox (Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructurePlaceSettings;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/levelgen/structure/BoundingBox; b
	getSize ()Lnet/minecraft/core/BlockPos; a
	getSize (Lnet/minecraft/world/level/block/Rotation;)Lnet/minecraft/core/BlockPos; a
	getZeroPositionWithTransform (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Mirror;Lnet/minecraft/world/level/block/Rotation;)Lnet/minecraft/core/BlockPos; a
	getZeroPositionWithTransform (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Mirror;Lnet/minecraft/world/level/block/Rotation;II)Lnet/minecraft/core/BlockPos; a
	load (Lnet/minecraft/nbt/CompoundTag;)V b
	loadPalette (Lnet/minecraft/nbt/ListTag;Lnet/minecraft/nbt/ListTag;)V a
	mirrorAABB (Lnet/minecraft/world/level/block/Rotation;IILnet/minecraft/world/level/levelgen/structure/BoundingBox;Lnet/minecraft/core/Direction;Lnet/minecraft/core/Direction;)V a
	newDoubleList ([D)Lnet/minecraft/nbt/ListTag; a
	newIntegerList ([I)Lnet/minecraft/nbt/ListTag; a
	placeEntities (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Mirror;Lnet/minecraft/world/level/block/Rotation;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Z)V a
	placeInWorld (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructurePlaceSettings;Ljava/util/Random;I)Z a
	placeInWorld (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructurePlaceSettings;Ljava/util/Random;)V b
	placeInWorldChunk (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructurePlaceSettings;Ljava/util/Random;)V a
	processBlockInfos (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructurePlaceSettings;Ljava/util/List;)Ljava/util/List; a
	save (Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/nbt/CompoundTag; a
	setAuthor (Ljava/lang/String;)V a
	transform (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Mirror;Lnet/minecraft/world/level/block/Rotation;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/core/BlockPos; a
	transform (Lnet/minecraft/world/phys/Vec3;Lnet/minecraft/world/level/block/Mirror;Lnet/minecraft/world/level/block/Rotation;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/phys/Vec3; a
	updateShapeAtEdge (Lnet/minecraft/world/level/LevelAccessor;ILnet/minecraft/world/phys/shapes/DiscreteVoxelShape;III)V a
net/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplate$Palette cve$a
	blocks a
	cache b
	blocks ()Ljava/util/List; a
	blocks (Lnet/minecraft/world/level/block/Block;)Ljava/util/List; a
net/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplate$SimplePalette cve$b
	DEFAULT_BLOCK_STATE a
	ids b
	lastId c
	addMapping (Lnet/minecraft/world/level/block/state/BlockState;I)V a
	idFor (Lnet/minecraft/world/level/block/state/BlockState;)I a
	stateFor (I)Lnet/minecraft/world/level/block/state/BlockState; a
net/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplate$StructureBlockInfo cve$c
	nbt c
	pos a
	state b
net/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplate$StructureEntityInfo cve$d
	blockPos b
	nbt c
	pos a
net/minecraft/world/level/levelgen/structure/templatesystem/TagMatchTest cvf
	CODEC a
	tag b
	getType ()Lnet/minecraft/world/level/levelgen/structure/templatesystem/RuleTestType; a
	test (Lnet/minecraft/world/level/block/state/BlockState;Ljava/util/Random;)Z a
net/minecraft/world/level/levelgen/surfacebuilders/BadlandsSurfaceBuilder cvh
	BROWN_TERRACOTTA al
	LIGHT_GRAY_TERRACOTTA an
	ORANGE_TERRACOTTA ai
	RED_TERRACOTTA am
	TERRACOTTA aj
	WHITE_TERRACOTTA ah
	YELLOW_TERRACOTTA ak
	clayBands a
	clayBandsOffsetNoise e
	pillarNoise c
	pillarRoofNoise d
	seed b
	apply (Ljava/util/Random;Lnet/minecraft/world/level/chunk/ChunkAccess;Lnet/minecraft/world/level/biome/Biome;IIIDLnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/state/BlockState;IJLnet/minecraft/world/level/levelgen/surfacebuilders/SurfaceBuilderBaseConfiguration;)V a
	apply (Ljava/util/Random;Lnet/minecraft/world/level/chunk/ChunkAccess;Lnet/minecraft/world/level/biome/Biome;IIIDLnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/state/BlockState;IJLnet/minecraft/world/level/levelgen/surfacebuilders/SurfaceBuilderConfiguration;)V a
	generateBands (J)V b
	getBand (III)Lnet/minecraft/world/level/block/state/BlockState; a
	initNoise (J)V a
net/minecraft/world/level/levelgen/surfacebuilders/BasaltDeltasSurfaceBuilder cvi
	BASALT a
	BLACKSTONE b
	CEILING_BLOCK_STATES e
	FLOOR_BLOCK_STATES d
	GRAVEL c
	getCeilingBlockStates ()Lcom/google/common/collect/ImmutableList; b
	getFloorBlockStates ()Lcom/google/common/collect/ImmutableList; a
	getPatchBlockState ()Lnet/minecraft/world/level/block/state/BlockState; c
net/minecraft/world/level/levelgen/surfacebuilders/ConfiguredSurfaceBuilder cvj
	CODEC a
	config c
	surfaceBuilder b
	apply (Ljava/util/Random;Lnet/minecraft/world/level/chunk/ChunkAccess;Lnet/minecraft/world/level/biome/Biome;IIIDLnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/state/BlockState;IJ)V a
	getSurfaceBuilderConfiguration ()Lnet/minecraft/world/level/levelgen/surfacebuilders/SurfaceBuilderConfiguration; a
	initNoise (J)V a
net/minecraft/world/level/levelgen/surfacebuilders/DefaultSurfaceBuilder cvk
	apply (Ljava/util/Random;Lnet/minecraft/world/level/chunk/ChunkAccess;Lnet/minecraft/world/level/biome/Biome;IIIDLnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/state/BlockState;IJLnet/minecraft/world/level/levelgen/surfacebuilders/SurfaceBuilderBaseConfiguration;)V a
	apply (Ljava/util/Random;Lnet/minecraft/world/level/chunk/ChunkAccess;Lnet/minecraft/world/level/biome/Biome;IIIDLnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/state/BlockState;IJLnet/minecraft/world/level/levelgen/surfacebuilders/SurfaceBuilderConfiguration;)V a
	apply (Ljava/util/Random;Lnet/minecraft/world/level/chunk/ChunkAccess;Lnet/minecraft/world/level/biome/Biome;IIIDLnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/state/BlockState;I)V a
net/minecraft/world/level/levelgen/surfacebuilders/ErodedBadlandsSurfaceBuilder cvl
	ORANGE_TERRACOTTA ai
	TERRACOTTA aj
	WHITE_TERRACOTTA ah
	apply (Ljava/util/Random;Lnet/minecraft/world/level/chunk/ChunkAccess;Lnet/minecraft/world/level/biome/Biome;IIIDLnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/state/BlockState;IJLnet/minecraft/world/level/levelgen/surfacebuilders/SurfaceBuilderBaseConfiguration;)V a
	apply (Ljava/util/Random;Lnet/minecraft/world/level/chunk/ChunkAccess;Lnet/minecraft/world/level/biome/Biome;IIIDLnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/state/BlockState;IJLnet/minecraft/world/level/levelgen/surfacebuilders/SurfaceBuilderConfiguration;)V a
net/minecraft/world/level/levelgen/surfacebuilders/FrozenOceanSurfaceBuilder cvm
	AIR c
	GRAVEL d
	ICE e
	PACKED_ICE a
	SNOW_BLOCK b
	icebergNoise ah
	icebergRoofNoise ai
	seed aj
	apply (Ljava/util/Random;Lnet/minecraft/world/level/chunk/ChunkAccess;Lnet/minecraft/world/level/biome/Biome;IIIDLnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/state/BlockState;IJLnet/minecraft/world/level/levelgen/surfacebuilders/SurfaceBuilderBaseConfiguration;)V a
	apply (Ljava/util/Random;Lnet/minecraft/world/level/chunk/ChunkAccess;Lnet/minecraft/world/level/biome/Biome;IIIDLnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/state/BlockState;IJLnet/minecraft/world/level/levelgen/surfacebuilders/SurfaceBuilderConfiguration;)V a
	initNoise (J)V a
net/minecraft/world/level/levelgen/surfacebuilders/GiantTreeTaigaSurfaceBuilder cvn
	apply (Ljava/util/Random;Lnet/minecraft/world/level/chunk/ChunkAccess;Lnet/minecraft/world/level/biome/Biome;IIIDLnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/state/BlockState;IJLnet/minecraft/world/level/levelgen/surfacebuilders/SurfaceBuilderBaseConfiguration;)V a
	apply (Ljava/util/Random;Lnet/minecraft/world/level/chunk/ChunkAccess;Lnet/minecraft/world/level/biome/Biome;IIIDLnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/state/BlockState;IJLnet/minecraft/world/level/levelgen/surfacebuilders/SurfaceBuilderConfiguration;)V a
net/minecraft/world/level/levelgen/surfacebuilders/GravellyMountainSurfaceBuilder cvo
	apply (Ljava/util/Random;Lnet/minecraft/world/level/chunk/ChunkAccess;Lnet/minecraft/world/level/biome/Biome;IIIDLnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/state/BlockState;IJLnet/minecraft/world/level/levelgen/surfacebuilders/SurfaceBuilderBaseConfiguration;)V a
	apply (Ljava/util/Random;Lnet/minecraft/world/level/chunk/ChunkAccess;Lnet/minecraft/world/level/biome/Biome;IIIDLnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/state/BlockState;IJLnet/minecraft/world/level/levelgen/surfacebuilders/SurfaceBuilderConfiguration;)V a
net/minecraft/world/level/levelgen/surfacebuilders/MountainSurfaceBuilder cvp
	apply (Ljava/util/Random;Lnet/minecraft/world/level/chunk/ChunkAccess;Lnet/minecraft/world/level/biome/Biome;IIIDLnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/state/BlockState;IJLnet/minecraft/world/level/levelgen/surfacebuilders/SurfaceBuilderBaseConfiguration;)V a
	apply (Ljava/util/Random;Lnet/minecraft/world/level/chunk/ChunkAccess;Lnet/minecraft/world/level/biome/Biome;IIIDLnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/state/BlockState;IJLnet/minecraft/world/level/levelgen/surfacebuilders/SurfaceBuilderConfiguration;)V a
net/minecraft/world/level/levelgen/surfacebuilders/NetherCappedSurfaceBuilder cvq
	ceilingNoises c
	floorNoises b
	patchNoise d
	seed a
	apply (Ljava/util/Random;Lnet/minecraft/world/level/chunk/ChunkAccess;Lnet/minecraft/world/level/biome/Biome;IIIDLnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/state/BlockState;IJLnet/minecraft/world/level/levelgen/surfacebuilders/SurfaceBuilderBaseConfiguration;)V a
	apply (Ljava/util/Random;Lnet/minecraft/world/level/chunk/ChunkAccess;Lnet/minecraft/world/level/biome/Biome;IIIDLnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/state/BlockState;IJLnet/minecraft/world/level/levelgen/surfacebuilders/SurfaceBuilderConfiguration;)V a
	getCeilingBlockStates ()Lcom/google/common/collect/ImmutableList; b
	getFloorBlockStates ()Lcom/google/common/collect/ImmutableList; a
	getPatchBlockState ()Lnet/minecraft/world/level/block/state/BlockState; c
	initNoise (J)V a
	initPerlinNoises (Lcom/google/common/collect/ImmutableList;J)Lcom/google/common/collect/ImmutableMap; a
net/minecraft/world/level/levelgen/surfacebuilders/NetherForestSurfaceBuilder cvr
	AIR b
	decorationNoise c
	seed a
	apply (Ljava/util/Random;Lnet/minecraft/world/level/chunk/ChunkAccess;Lnet/minecraft/world/level/biome/Biome;IIIDLnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/state/BlockState;IJLnet/minecraft/world/level/levelgen/surfacebuilders/SurfaceBuilderBaseConfiguration;)V a
	apply (Ljava/util/Random;Lnet/minecraft/world/level/chunk/ChunkAccess;Lnet/minecraft/world/level/biome/Biome;IIIDLnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/state/BlockState;IJLnet/minecraft/world/level/levelgen/surfacebuilders/SurfaceBuilderConfiguration;)V a
	initNoise (J)V a
net/minecraft/world/level/levelgen/surfacebuilders/NetherSurfaceBuilder cvs
	AIR c
	GRAVEL d
	SOUL_SAND e
	decorationNoise b
	seed a
	apply (Ljava/util/Random;Lnet/minecraft/world/level/chunk/ChunkAccess;Lnet/minecraft/world/level/biome/Biome;IIIDLnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/state/BlockState;IJLnet/minecraft/world/level/levelgen/surfacebuilders/SurfaceBuilderBaseConfiguration;)V a
	apply (Ljava/util/Random;Lnet/minecraft/world/level/chunk/ChunkAccess;Lnet/minecraft/world/level/biome/Biome;IIIDLnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/state/BlockState;IJLnet/minecraft/world/level/levelgen/surfacebuilders/SurfaceBuilderConfiguration;)V a
	initNoise (J)V a
net/minecraft/world/level/levelgen/surfacebuilders/NopeSurfaceBuilder cvt
	apply (Ljava/util/Random;Lnet/minecraft/world/level/chunk/ChunkAccess;Lnet/minecraft/world/level/biome/Biome;IIIDLnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/state/BlockState;IJLnet/minecraft/world/level/levelgen/surfacebuilders/SurfaceBuilderBaseConfiguration;)V a
	apply (Ljava/util/Random;Lnet/minecraft/world/level/chunk/ChunkAccess;Lnet/minecraft/world/level/biome/Biome;IIIDLnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/state/BlockState;IJLnet/minecraft/world/level/levelgen/surfacebuilders/SurfaceBuilderConfiguration;)V a
net/minecraft/world/level/levelgen/surfacebuilders/ShatteredSavanaSurfaceBuilder cvu
	apply (Ljava/util/Random;Lnet/minecraft/world/level/chunk/ChunkAccess;Lnet/minecraft/world/level/biome/Biome;IIIDLnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/state/BlockState;IJLnet/minecraft/world/level/levelgen/surfacebuilders/SurfaceBuilderBaseConfiguration;)V a
	apply (Ljava/util/Random;Lnet/minecraft/world/level/chunk/ChunkAccess;Lnet/minecraft/world/level/biome/Biome;IIIDLnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/state/BlockState;IJLnet/minecraft/world/level/levelgen/surfacebuilders/SurfaceBuilderConfiguration;)V a
net/minecraft/world/level/levelgen/surfacebuilders/SoulSandValleySurfaceBuilder cvv
	BLOCK_STATES d
	GRAVEL c
	SOUL_SAND a
	SOUL_SOIL b
	getCeilingBlockStates ()Lcom/google/common/collect/ImmutableList; b
	getFloorBlockStates ()Lcom/google/common/collect/ImmutableList; a
	getPatchBlockState ()Lnet/minecraft/world/level/block/state/BlockState; c
net/minecraft/world/level/levelgen/surfacebuilders/SurfaceBuilder cvw
	AIR f
	BADLANDS Y
	BASALT y
	BASALT_DELTAS af
	BLACKSTONE x
	COARSE_DIRT l
	CONFIG_BADLANDS K
	CONFIG_BASALT_DELTAS R
	CONFIG_COARSE_DIRT G
	CONFIG_CRIMSON_FOREST P
	CONFIG_DESERT H
	CONFIG_DIRT E
	CONFIG_EMPTY A
	CONFIG_FULL_SAND J
	CONFIG_GRASS D
	CONFIG_GRAVEL C
	CONFIG_HELL M
	CONFIG_MYCELIUM L
	CONFIG_OCEAN_SAND I
	CONFIG_PODZOL B
	CONFIG_SOUL_SAND_VALLEY N
	CONFIG_STONE F
	CONFIG_THEEND O
	CONFIG_WARPED_FOREST Q
	CRIMSON_NYLIUM t
	DEFAULT S
	DIRT g
	ENDSTONE s
	ERODED_BADLANDS aa
	FROZEN_OCEAN ab
	GIANT_TREE_TAIGA W
	GRASS_BLOCK h
	GRAVEL j
	GRAVELLY_MOUNTAIN V
	MAGMA z
	MOUNTAIN T
	MYCELIUM p
	NETHER ac
	NETHERRACK r
	NETHER_FOREST ad
	NETHER_WART_BLOCK v
	NOPE ag
	PODZOL i
	RED_SAND n
	SAND m
	SHATTERED_SAVANNA U
	SOUL_SAND q
	SOUL_SAND_VALLEY ae
	STONE k
	SWAMP X
	WARPED_NYLIUM u
	WARPED_WART_BLOCK w
	WHITE_TERRACOTTA o
	WOODED_BADLANDS Z
	configuredCodec a
	apply (Ljava/util/Random;Lnet/minecraft/world/level/chunk/ChunkAccess;Lnet/minecraft/world/level/biome/Biome;IIIDLnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/state/BlockState;IJLnet/minecraft/world/level/levelgen/surfacebuilders/SurfaceBuilderConfiguration;)V a
	configuredCodec ()Lcom/mojang/serialization/Codec; d
	initNoise (J)V a
	register (Ljava/lang/String;Lnet/minecraft/world/level/levelgen/surfacebuilders/SurfaceBuilder;)Lnet/minecraft/world/level/levelgen/surfacebuilders/SurfaceBuilder; a
net/minecraft/world/level/levelgen/surfacebuilders/SurfaceBuilderBaseConfiguration cvx
	CODEC a
	topMaterial b
	underMaterial c
	underwaterMaterial d
	getTopMaterial ()Lnet/minecraft/world/level/block/state/BlockState; a
	getUnderMaterial ()Lnet/minecraft/world/level/block/state/BlockState; b
	getUnderwaterMaterial ()Lnet/minecraft/world/level/block/state/BlockState; c
net/minecraft/world/level/levelgen/surfacebuilders/SurfaceBuilderConfiguration cvy
	getTopMaterial ()Lnet/minecraft/world/level/block/state/BlockState; a
	getUnderMaterial ()Lnet/minecraft/world/level/block/state/BlockState; b
	getUnderwaterMaterial ()Lnet/minecraft/world/level/block/state/BlockState; c
net/minecraft/world/level/levelgen/surfacebuilders/SwampSurfaceBuilder cvz
	apply (Ljava/util/Random;Lnet/minecraft/world/level/chunk/ChunkAccess;Lnet/minecraft/world/level/biome/Biome;IIIDLnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/state/BlockState;IJLnet/minecraft/world/level/levelgen/surfacebuilders/SurfaceBuilderBaseConfiguration;)V a
	apply (Ljava/util/Random;Lnet/minecraft/world/level/chunk/ChunkAccess;Lnet/minecraft/world/level/biome/Biome;IIIDLnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/state/BlockState;IJLnet/minecraft/world/level/levelgen/surfacebuilders/SurfaceBuilderConfiguration;)V a
net/minecraft/world/level/levelgen/surfacebuilders/WoodedBadlandsSurfaceBuilder cwa
	ORANGE_TERRACOTTA ai
	TERRACOTTA aj
	WHITE_TERRACOTTA ah
	apply (Ljava/util/Random;Lnet/minecraft/world/level/chunk/ChunkAccess;Lnet/minecraft/world/level/biome/Biome;IIIDLnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/state/BlockState;IJLnet/minecraft/world/level/levelgen/surfacebuilders/SurfaceBuilderBaseConfiguration;)V a
	apply (Ljava/util/Random;Lnet/minecraft/world/level/chunk/ChunkAccess;Lnet/minecraft/world/level/biome/Biome;IIIDLnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/state/BlockState;IJLnet/minecraft/world/level/levelgen/surfacebuilders/SurfaceBuilderConfiguration;)V a
net/minecraft/world/level/levelgen/synth/ImprovedNoise cwc
	p d
	xo a
	yo b
	zo c
	gradDot (IDDD)D a
	noise (DDDDD)D a
	p (I)I a
	sampleAndLerp (IIIDDDDDD)D a
net/minecraft/world/level/levelgen/synth/NormalNoise cwd
	first b
	second c
	valueFactor a
	expectedDeviation (I)D a
	getValue (DDD)D a
net/minecraft/world/level/levelgen/synth/PerlinNoise cwe
	highestFreqInputFactor c
	highestFreqValueFactor b
	noiseLevels a
	getOctaveNoise (I)Lnet/minecraft/world/level/levelgen/synth/ImprovedNoise; a
	getSurfaceNoiseValue (DDDD)D a
	getValue (DDD)D a
	getValue (DDDDDZ)D a
	wrap (D)D a
net/minecraft/world/level/levelgen/synth/PerlinSimplexNoise cwf
	highestFreqInputFactor c
	highestFreqValueFactor b
	noiseLevels a
	getSurfaceNoiseValue (DDDD)D a
	getValue (DDZ)D a
net/minecraft/world/level/levelgen/synth/SimplexNoise cwg
	F2 f
	G2 g
	GRADIENT a
	SQRT_3 e
	p h
	xo b
	yo c
	zo d
	dot ([IDDD)D a
	getCornerNoise3D (IDDDD)D a
	getValue (DD)D a
	getValue (DDD)D a
	p (I)I a
net/minecraft/world/level/levelgen/synth/SurfaceNoise cwh
	getSurfaceNoiseValue (DDDD)D a
net/minecraft/world/level/lighting/BlockLightEngine cwj
	DIRECTIONS e
	pos f
	checkNeighborsAfterUpdate (JIZ)V a
	computeLevelFromNeighbor (JJI)I b
	getComputedLevel (JJI)I a
	getLightEmission (J)I d
	onBlockEmissionIncrease (Lnet/minecraft/core/BlockPos;I)V a
net/minecraft/world/level/lighting/BlockLightSectionStorage cwk
	getLightValue (J)I d
net/minecraft/world/level/lighting/BlockLightSectionStorage$BlockDataLayerStorageMap cwk$a
	copy ()Lnet/minecraft/world/level/lighting/BlockLightSectionStorage$BlockDataLayerStorageMap; a
	copy ()Lnet/minecraft/world/level/lighting/DataLayerStorageMap; b
net/minecraft/world/level/lighting/DataLayerStorageMap cwl
	cacheEnabled d
	lastSectionKeys b
	lastSections c
	map a
	clearCache ()V c
	copy ()Lnet/minecraft/world/level/lighting/DataLayerStorageMap; b
	copyDataLayer (J)V a
	disableCache ()V d
	getLayer (J)Lnet/minecraft/world/level/chunk/DataLayer; c
	hasLayer (J)Z b
	removeLayer (J)Lnet/minecraft/world/level/chunk/DataLayer; d
	setLayer (JLnet/minecraft/world/level/chunk/DataLayer;)V a
net/minecraft/world/level/lighting/DynamicGraphMinFixedPoint cwm
	computedLevels c
	firstQueuedLevel d
	hasWork e
	levelCount a
	queues b
	checkEdge (JJIIIZ)V a
	checkEdge (JJIZ)V a
	checkFirstQueuedLevel (I)V a
	checkNeighbor (JJIZ)V b
	checkNeighborsAfterUpdate (JIZ)V a
	checkNode (J)V f
	computeLevelFromNeighbor (JJI)I b
	dequeue (JIIZ)V a
	enqueue (JII)V a
	getComputedLevel (JJI)I a
	getKey (II)I a
	getLevel (J)I c
	getQueueSize ()I c
	hasWork ()Z b
	isSource (J)Z a
	removeFromQueue (J)V e
	removeIf (Ljava/util/function/LongPredicate;)V a
	runUpdates (I)I b
	setLevel (JI)V a
net/minecraft/world/level/lighting/FlatDataLayer cwn
	getData ()[B a
	getIndex (III)I b
net/minecraft/world/level/lighting/LayerLightEngine cwo
	DIRECTIONS e
	chunkSource a
	lastChunk h
	lastChunkPos g
	layer b
	pos d
	runningLightUpdates f
	storage c
	checkBlock (Lnet/minecraft/core/BlockPos;)V a
	checkNode (J)V f
	clearCache ()V d
	computeLevelFromNeighbor (JJI)I b
	enableLightSources (Lnet/minecraft/world/level/ChunkPos;Z)V a
	getChunk (II)Lnet/minecraft/world/level/BlockGetter; a
	getComputedLevel (JJI)I a
	getDataLayerData (Lnet/minecraft/core/SectionPos;)Lnet/minecraft/world/level/chunk/DataLayer; a
	getDebugData (J)Ljava/lang/String; b
	getLevel (J)I c
	getLevel (Lnet/minecraft/world/level/chunk/DataLayer;J)I a
	getLightBlockInto (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;I)I a
	getLightValue (Lnet/minecraft/core/BlockPos;)I b
	getShape (Lnet/minecraft/world/level/block/state/BlockState;JLnet/minecraft/core/Direction;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	getStateAndOpacity (JLorg/apache/commons/lang3/mutable/MutableInt;)Lnet/minecraft/world/level/block/state/BlockState; a
	hasLightWork ()Z a
	isSource (J)Z a
	onBlockEmissionIncrease (Lnet/minecraft/core/BlockPos;I)V a
	queueSectionData (JLnet/minecraft/world/level/chunk/DataLayer;Z)V a
	retainData (Lnet/minecraft/world/level/ChunkPos;Z)V b
	runUpdates (IZZ)I a
	setLevel (JI)V a
	updateSectionStatus (Lnet/minecraft/core/SectionPos;Z)V a
net/minecraft/world/level/lighting/LayerLightEventListener cwp
	getDataLayerData (Lnet/minecraft/core/SectionPos;)Lnet/minecraft/world/level/chunk/DataLayer; a
	getLightValue (Lnet/minecraft/core/BlockPos;)I b
net/minecraft/world/level/lighting/LayerLightEventListener$DummyLightLayerEventListener cwp$a
	$VALUES b
	INSTANCE a
	checkBlock (Lnet/minecraft/core/BlockPos;)V a
	enableLightSources (Lnet/minecraft/world/level/ChunkPos;Z)V a
	getDataLayerData (Lnet/minecraft/core/SectionPos;)Lnet/minecraft/world/level/chunk/DataLayer; a
	getLightValue (Lnet/minecraft/core/BlockPos;)I b
	hasLightWork ()Z a
	onBlockEmissionIncrease (Lnet/minecraft/core/BlockPos;I)V a
	runUpdates (IZZ)I a
	updateSectionStatus (Lnet/minecraft/core/SectionPos;Z)V a
net/minecraft/world/level/lighting/LayerLightSectionStorage cwq
	DIRECTIONS k
	EMPTY_DATA a
	changedSections g
	chunkSource m
	columnsToRetainQueuedDataFor o
	dataSectionSet b
	hasToRemove j
	layer l
	queuedSections i
	sectionsAffectedByLightUpdates h
	toMarkData d
	toMarkNoData c
	toRemove p
	untrustedSections n
	updatingSectionData f
	visibleSectionData e
	checkEdgesForSection (Lnet/minecraft/world/level/lighting/LayerLightEngine;J)V b
	clearQueuedSectionBlocks (Lnet/minecraft/world/level/lighting/LayerLightEngine;J)V a
	createDataLayer (J)Lnet/minecraft/world/level/chunk/DataLayer; j
	enableLightSources (JZ)V b
	getDataLayer (JZ)Lnet/minecraft/world/level/chunk/DataLayer; a
	getDataLayer (Lnet/minecraft/world/level/lighting/DataLayerStorageMap;J)Lnet/minecraft/world/level/chunk/DataLayer; a
	getDataLayerData (J)Lnet/minecraft/world/level/chunk/DataLayer; h
	getLevel (J)I c
	getLevelFromSource (J)I b
	getLightValue (J)I d
	getStoredLevel (J)I i
	hasInconsistencies ()Z a
	markNewInconsistencies (Lnet/minecraft/world/level/lighting/LayerLightEngine;ZZ)V a
	onNodeAdded (J)V k
	onNodeRemoved (J)V l
	queueSectionData (JLnet/minecraft/world/level/chunk/DataLayer;Z)V a
	retainData (JZ)V c
	runAllUpdates ()V d
	setLevel (JI)V a
	setStoredLevel (JI)V b
	storingLightForSection (J)Z g
	swapSectionMap ()V e
	updateSectionStatus (JZ)V d
net/minecraft/world/level/lighting/LevelLightEngine cwr
	blockEngine a
	skyEngine b
	checkBlock (Lnet/minecraft/core/BlockPos;)V a
	enableLightSources (Lnet/minecraft/world/level/ChunkPos;Z)V a
	getDebugData (Lnet/minecraft/world/level/LightLayer;Lnet/minecraft/core/SectionPos;)Ljava/lang/String; a
	getLayerListener (Lnet/minecraft/world/level/LightLayer;)Lnet/minecraft/world/level/lighting/LayerLightEventListener; a
	getRawBrightness (Lnet/minecraft/core/BlockPos;I)I b
	hasLightWork ()Z a
	onBlockEmissionIncrease (Lnet/minecraft/core/BlockPos;I)V a
	queueSectionData (Lnet/minecraft/world/level/LightLayer;Lnet/minecraft/core/SectionPos;Lnet/minecraft/world/level/chunk/DataLayer;Z)V a
	retainData (Lnet/minecraft/world/level/ChunkPos;Z)V b
	runUpdates (IZZ)I a
	updateSectionStatus (Lnet/minecraft/core/SectionPos;Z)V a
net/minecraft/world/level/lighting/LightEventListener cws
	checkBlock (Lnet/minecraft/core/BlockPos;)V a
	enableLightSources (Lnet/minecraft/world/level/ChunkPos;Z)V a
	hasLightWork ()Z a
	onBlockEmissionIncrease (Lnet/minecraft/core/BlockPos;I)V a
	runUpdates (IZZ)I a
	updateSectionStatus (Lnet/minecraft/core/BlockPos;Z)V a
	updateSectionStatus (Lnet/minecraft/core/SectionPos;Z)V a
net/minecraft/world/level/lighting/SkyLightEngine cwt
	DIRECTIONS e
	HORIZONTALS f
	checkNeighborsAfterUpdate (JIZ)V a
	checkNode (J)V f
	computeLevelFromNeighbor (JJI)I b
	getComputedLevel (JJI)I a
	getDebugData (J)Ljava/lang/String; b
net/minecraft/world/level/lighting/SkyLightSectionStorage cwu
	HORIZONTALS k
	columnsWithSkySources o
	hasSourceInconsistencies p
	sectionsToAddSourcesTo m
	sectionsToRemoveSourcesFrom n
	sectionsWithSources l
	createDataLayer (J)Lnet/minecraft/world/level/chunk/DataLayer; j
	enableLightSources (JZ)V b
	getLightValue (J)I d
	hasInconsistencies ()Z a
	hasLightSource (J)Z m
	hasSectionsBelow (I)Z a
	isAboveData (J)Z n
	lightOnInSection (J)Z o
	markNewInconsistencies (Lnet/minecraft/world/level/lighting/LayerLightEngine;ZZ)V a
	onNodeAdded (J)V k
	onNodeRemoved (J)V l
	queueAddSource (J)V q
	queueRemoveSource (J)V p
	recheckInconsistencyFlag ()V f
net/minecraft/world/level/lighting/SkyLightSectionStorage$SkyDataLayerStorageMap cwu$a
	currentLowestY b
	topSections c
	copy ()Lnet/minecraft/world/level/lighting/DataLayerStorageMap; b
	copy ()Lnet/minecraft/world/level/lighting/SkyLightSectionStorage$SkyDataLayerStorageMap; a
net/minecraft/world/level/lighting/SpatialLongSet cwv
	map a
net/minecraft/world/level/lighting/SpatialLongSet$InternalMap cwv$a
	OUTER_MASK g
	X_BITS a
	X_OFFSET e
	Y_BITS c
	Z_BITS b
	Z_OFFSET d
	lastOuterKey i
	lastPos h
	minSize j
	addBit (J)Z c
	getFullKey (JI)J a
	getInnerKey (J)I b
	getOuterKey (J)J a
	removeBit (J)Z d
	removeFirstBit ()J a
	removeFromEntry (IJ)Z b
	removeFromNullEntry (J)Z e
	replaceBit (IJ)Z a
net/minecraft/world/level/material/EmptyFluid cwx
	canBeReplacedWith (Lnet/minecraft/world/level/material/FluidState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/material/Fluid;Lnet/minecraft/core/Direction;)Z a
	createLegacyBlock (Lnet/minecraft/world/level/material/FluidState;)Lnet/minecraft/world/level/block/state/BlockState; b
	getAmount (Lnet/minecraft/world/level/material/FluidState;)I d
	getBucket ()Lnet/minecraft/world/item/Item; a
	getExplosionResistance ()F c
	getFlow (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/material/FluidState;)Lnet/minecraft/world/phys/Vec3; a
	getHeight (Lnet/minecraft/world/level/material/FluidState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)F a
	getOwnHeight (Lnet/minecraft/world/level/material/FluidState;)F a
	getShape (Lnet/minecraft/world/level/material/FluidState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/phys/shapes/VoxelShape; b
	getTickDelay (Lnet/minecraft/world/level/LevelReader;)I a
	isEmpty ()Z b
	isSource (Lnet/minecraft/world/level/material/FluidState;)Z c
net/minecraft/world/level/material/FlowingFluid cwy
	FALLING a
	LEVEL b
	OCCLUSION_CACHE e
	shapes f
	affectsFlow (Lnet/minecraft/world/level/material/FluidState;)Z g
	beforeDestroyingBlock (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V a
	canConvertToSource ()Z f
	canHoldFluid (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/material/Fluid;)Z a
	canPassThrough (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/world/level/material/Fluid;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/material/FluidState;)Z a
	canPassThroughWall (Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Z a
	canSpreadTo (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/material/FluidState;Lnet/minecraft/world/level/material/Fluid;)Z a
	createFluidStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getAmount (Lnet/minecraft/world/level/material/FluidState;)I d
	getCacheKey (Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)S a
	getDropOff (Lnet/minecraft/world/level/LevelReader;)I c
	getFlow (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/material/FluidState;)Lnet/minecraft/world/phys/Vec3; a
	getFlowing ()Lnet/minecraft/world/level/material/Fluid; d
	getFlowing (IZ)Lnet/minecraft/world/level/material/FluidState; a
	getHeight (Lnet/minecraft/world/level/material/FluidState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)F a
	getLegacyLevel (Lnet/minecraft/world/level/material/FluidState;)I e
	getNewLiquid (Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/material/FluidState; a
	getOwnHeight (Lnet/minecraft/world/level/material/FluidState;)F a
	getShape (Lnet/minecraft/world/level/material/FluidState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/phys/shapes/VoxelShape; b
	getSlopeDistance (Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;ILnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/BlockPos;Lit/unimi/dsi/fastutil/shorts/Short2ObjectMap;Lit/unimi/dsi/fastutil/shorts/Short2BooleanMap;)I a
	getSlopeFindDistance (Lnet/minecraft/world/level/LevelReader;)I b
	getSource ()Lnet/minecraft/world/level/material/Fluid; e
	getSource (Z)Lnet/minecraft/world/level/material/FluidState; a
	getSpread (Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Ljava/util/Map; b
	getSpreadDelay (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/material/FluidState;Lnet/minecraft/world/level/material/FluidState;)I a
	hasSameAbove (Lnet/minecraft/world/level/material/FluidState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Z c
	isSolidFace (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;)Z a
	isSourceBlockOfThisType (Lnet/minecraft/world/level/material/FluidState;)Z h
	isWaterHole (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/world/level/material/Fluid;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Z a
	sourceNeighborCount (Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;)I a
	spread (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/material/FluidState;)V a
	spreadTo (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/material/FluidState;)V a
	spreadToSides (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/material/FluidState;Lnet/minecraft/world/level/block/state/BlockState;)V a
	tick (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/material/FluidState;)V a
net/minecraft/world/level/material/Fluid cwz
	FLUID_STATE_REGISTRY c
	defaultFluidState a
	stateDefinition d
	animateTick (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/material/FluidState;Ljava/util/Random;)V a
	canBeReplacedWith (Lnet/minecraft/world/level/material/FluidState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/material/Fluid;Lnet/minecraft/core/Direction;)Z a
	createFluidStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	createLegacyBlock (Lnet/minecraft/world/level/material/FluidState;)Lnet/minecraft/world/level/block/state/BlockState; b
	defaultFluidState ()Lnet/minecraft/world/level/material/FluidState; h
	getAmount (Lnet/minecraft/world/level/material/FluidState;)I d
	getBucket ()Lnet/minecraft/world/item/Item; a
	getDripParticle ()Lnet/minecraft/core/particles/ParticleOptions; i
	getExplosionResistance ()F c
	getFlow (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/material/FluidState;)Lnet/minecraft/world/phys/Vec3; a
	getHeight (Lnet/minecraft/world/level/material/FluidState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)F a
	getOwnHeight (Lnet/minecraft/world/level/material/FluidState;)F a
	getShape (Lnet/minecraft/world/level/material/FluidState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/phys/shapes/VoxelShape; b
	getStateDefinition ()Lnet/minecraft/world/level/block/state/StateDefinition; g
	getTickDelay (Lnet/minecraft/world/level/LevelReader;)I a
	is (Lnet/minecraft/tags/Tag;)Z a
	isEmpty ()Z b
	isRandomlyTicking ()Z j
	isSame (Lnet/minecraft/world/level/material/Fluid;)Z a
	isSource (Lnet/minecraft/world/level/material/FluidState;)Z c
	randomTick (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/material/FluidState;Ljava/util/Random;)V b
	registerDefaultState (Lnet/minecraft/world/level/material/FluidState;)V f
	tick (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/material/FluidState;)V a
net/minecraft/world/level/material/FluidState cxa
	CODEC a
	animateTick (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)V a
	canBeReplacedWith (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/material/Fluid;Lnet/minecraft/core/Direction;)Z a
	createLegacyBlock ()Lnet/minecraft/world/level/block/state/BlockState; g
	getAmount ()I e
	getDripParticle ()Lnet/minecraft/core/particles/ParticleOptions; h
	getExplosionResistance ()F i
	getFlow (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/phys/Vec3; c
	getHeight (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)F a
	getOwnHeight ()F d
	getShape (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/phys/shapes/VoxelShape; d
	getType ()Lnet/minecraft/world/level/material/Fluid; a
	is (Lnet/minecraft/tags/Tag;)Z a
	isEmpty ()Z c
	isRandomlyTicking ()Z f
	isSource ()Z b
	randomTick (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)V b
	shouldRenderBackwardUpFace (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Z b
	tick (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)V a
net/minecraft/world/level/material/Fluids cxb
	EMPTY a
	FLOWING_LAVA d
	FLOWING_WATER b
	LAVA e
	WATER c
	register (Ljava/lang/String;Lnet/minecraft/world/level/material/Fluid;)Lnet/minecraft/world/level/material/Fluid; a
net/minecraft/world/level/material/LavaFluid cxc
	animateTick (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/material/FluidState;Ljava/util/Random;)V a
	beforeDestroyingBlock (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V a
	canBeReplacedWith (Lnet/minecraft/world/level/material/FluidState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/material/Fluid;Lnet/minecraft/core/Direction;)Z a
	canConvertToSource ()Z f
	createLegacyBlock (Lnet/minecraft/world/level/material/FluidState;)Lnet/minecraft/world/level/block/state/BlockState; b
	fizz (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;)V a
	getBucket ()Lnet/minecraft/world/item/Item; a
	getDripParticle ()Lnet/minecraft/core/particles/ParticleOptions; i
	getDropOff (Lnet/minecraft/world/level/LevelReader;)I c
	getExplosionResistance ()F c
	getFlowing ()Lnet/minecraft/world/level/material/Fluid; d
	getSlopeFindDistance (Lnet/minecraft/world/level/LevelReader;)I b
	getSource ()Lnet/minecraft/world/level/material/Fluid; e
	getSpreadDelay (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/material/FluidState;Lnet/minecraft/world/level/material/FluidState;)I a
	getTickDelay (Lnet/minecraft/world/level/LevelReader;)I a
	hasFlammableNeighbours (Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;)Z a
	isFlammable (Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;)Z b
	isRandomlyTicking ()Z j
	isSame (Lnet/minecraft/world/level/material/Fluid;)Z a
	randomTick (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/material/FluidState;Ljava/util/Random;)V b
	spreadTo (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/material/FluidState;)V a
net/minecraft/world/level/material/LavaFluid$Flowing cxc$a
	createFluidStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getAmount (Lnet/minecraft/world/level/material/FluidState;)I d
	isSource (Lnet/minecraft/world/level/material/FluidState;)Z c
net/minecraft/world/level/material/LavaFluid$Source cxc$b
	getAmount (Lnet/minecraft/world/level/material/FluidState;)I d
	isSource (Lnet/minecraft/world/level/material/FluidState;)Z c
net/minecraft/world/level/material/Material cxd
	AIR a
	BAMBOO A
	BAMBOO_SAPLING z
	BARRIER L
	BUBBLE_COLUMN j
	BUILDABLE_GLASS p
	CACTUS G
	CAKE Q
	CLAY q
	CLOTH_DECORATION d
	CORAL N
	DECORATION n
	DIRT r
	EGG P
	EXPLOSIVE C
	FIRE m
	GLASS E
	GRASS s
	HEAVY_METAL K
	ICE F
	ICE_SOLID t
	LAVA k
	LEAVES D
	METAL I
	NETHER_WOOD y
	PISTON M
	PLANT e
	PORTAL c
	REPLACEABLE_PLANT g
	REPLACEABLE_WATER_PLANT h
	SAND u
	SHULKER_SHELL w
	SNOW J
	SPONGE v
	STONE H
	STRUCTURAL_AIR b
	TOP_SNOW l
	VEGETABLE O
	WATER i
	WATER_PLANT f
	WEB o
	WOOD x
	WOOL B
	blocksMotion T
	color R
	flammable U
	liquid V
	pushReaction S
	replaceable X
	solid Y
	solidBlocking W
	blocksMotion ()Z c
	getColor ()Lnet/minecraft/world/level/material/MaterialColor; h
	getPushReaction ()Lnet/minecraft/world/level/material/PushReaction; g
	isFlammable ()Z d
	isLiquid ()Z a
	isReplaceable ()Z e
	isSolid ()Z b
	isSolidBlocking ()Z f
net/minecraft/world/level/material/Material$Builder cxd$a
	blocksMotion b
	color g
	flammable c
	liquid d
	pushReaction a
	replaceable e
	solid f
	solidBlocking h
	build ()Lnet/minecraft/world/level/material/Material; h
	destroyOnPush ()Lnet/minecraft/world/level/material/Material$Builder; f
	flammable ()Lnet/minecraft/world/level/material/Material$Builder; d
	liquid ()Lnet/minecraft/world/level/material/Material$Builder; a
	noCollider ()Lnet/minecraft/world/level/material/Material$Builder; c
	nonSolid ()Lnet/minecraft/world/level/material/Material$Builder; b
	notPushable ()Lnet/minecraft/world/level/material/Material$Builder; g
	notSolidBlocking ()Lnet/minecraft/world/level/material/Material$Builder; i
	replaceable ()Lnet/minecraft/world/level/material/Material$Builder; e
net/minecraft/world/level/material/MaterialColor cxe
	CLAY k
	COLOR_BLACK E
	COLOR_BLUE A
	COLOR_BROWN B
	COLOR_CYAN y
	COLOR_GRAY w
	COLOR_GREEN C
	COLOR_LIGHT_BLUE s
	COLOR_LIGHT_GRAY x
	COLOR_LIGHT_GREEN u
	COLOR_MAGENTA r
	COLOR_ORANGE q
	COLOR_PINK v
	COLOR_PURPLE z
	COLOR_RED D
	COLOR_YELLOW t
	CRIMSON_HYPHAE ad
	CRIMSON_NYLIUM ab
	CRIMSON_STEM ac
	DIAMOND G
	DIRT l
	EMERALD I
	FIRE f
	GOLD F
	GRASS c
	ICE g
	LAPIS H
	MATERIAL_COLORS a
	METAL h
	NETHER K
	NONE b
	PLANT i
	PODZOL J
	QUARTZ p
	SAND d
	SNOW j
	STONE m
	TERRACOTTA_BLACK aa
	TERRACOTTA_BLUE W
	TERRACOTTA_BROWN X
	TERRACOTTA_CYAN U
	TERRACOTTA_GRAY S
	TERRACOTTA_GREEN Y
	TERRACOTTA_LIGHT_BLUE O
	TERRACOTTA_LIGHT_GRAY T
	TERRACOTTA_LIGHT_GREEN Q
	TERRACOTTA_MAGENTA N
	TERRACOTTA_ORANGE M
	TERRACOTTA_PINK R
	TERRACOTTA_PURPLE V
	TERRACOTTA_RED Z
	TERRACOTTA_WHITE L
	TERRACOTTA_YELLOW P
	WARPED_HYPHAE ag
	WARPED_NYLIUM ae
	WARPED_STEM af
	WARPED_WART_BLOCK ah
	WATER n
	WOOD o
	WOOL e
	col ai
	id aj
	calculateRGBColor (I)I a
net/minecraft/world/level/material/PushReaction cxf
	$VALUES f
	BLOCK c
	DESTROY b
	IGNORE d
	NORMAL a
	PUSH_ONLY e
net/minecraft/world/level/material/WaterFluid cxg
	animateTick (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/material/FluidState;Ljava/util/Random;)V a
	beforeDestroyingBlock (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V a
	canBeReplacedWith (Lnet/minecraft/world/level/material/FluidState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/material/Fluid;Lnet/minecraft/core/Direction;)Z a
	canConvertToSource ()Z f
	createLegacyBlock (Lnet/minecraft/world/level/material/FluidState;)Lnet/minecraft/world/level/block/state/BlockState; b
	getBucket ()Lnet/minecraft/world/item/Item; a
	getDripParticle ()Lnet/minecraft/core/particles/ParticleOptions; i
	getDropOff (Lnet/minecraft/world/level/LevelReader;)I c
	getExplosionResistance ()F c
	getFlowing ()Lnet/minecraft/world/level/material/Fluid; d
	getSlopeFindDistance (Lnet/minecraft/world/level/LevelReader;)I b
	getSource ()Lnet/minecraft/world/level/material/Fluid; e
	getTickDelay (Lnet/minecraft/world/level/LevelReader;)I a
	isSame (Lnet/minecraft/world/level/material/Fluid;)Z a
net/minecraft/world/level/material/WaterFluid$Flowing cxg$a
	createFluidStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getAmount (Lnet/minecraft/world/level/material/FluidState;)I d
	isSource (Lnet/minecraft/world/level/material/FluidState;)Z c
net/minecraft/world/level/material/WaterFluid$Source cxg$b
	getAmount (Lnet/minecraft/world/level/material/FluidState;)I d
	isSource (Lnet/minecraft/world/level/material/FluidState;)Z c
net/minecraft/world/level/newbiome/area/Area cxi
	get (II)I a
net/minecraft/world/level/newbiome/area/AreaFactory cxj
net/minecraft/world/level/newbiome/area/LazyArea cxk
	cache b
	maxCache c
	transformer a
	get (II)I a
	getMaxCache ()I a
net/minecraft/world/level/newbiome/context/BigContext cxm
	createResult (Lnet/minecraft/world/level/newbiome/layer/traits/PixelTransformer;)Lnet/minecraft/world/level/newbiome/area/Area; a
	createResult (Lnet/minecraft/world/level/newbiome/layer/traits/PixelTransformer;Lnet/minecraft/world/level/newbiome/area/Area;)Lnet/minecraft/world/level/newbiome/area/Area; a
	createResult (Lnet/minecraft/world/level/newbiome/layer/traits/PixelTransformer;Lnet/minecraft/world/level/newbiome/area/Area;Lnet/minecraft/world/level/newbiome/area/Area;)Lnet/minecraft/world/level/newbiome/area/Area; a
	getMixedSeed ()J a
	initRandom (JJ)V a
	random (II)I a
	random (IIII)I a
net/minecraft/world/level/newbiome/context/Context cxn
	getBiomeNoise ()Lnet/minecraft/world/level/levelgen/synth/ImprovedNoise; b
	nextRandom (I)I a
net/minecraft/world/level/newbiome/context/LazyAreaContext cxo
	biomeNoise c
	cache a
	maxCache b
	rval e
	seed d
	createResult (Lnet/minecraft/world/level/newbiome/layer/traits/PixelTransformer;)Lnet/minecraft/world/level/newbiome/area/Area; a
	createResult (Lnet/minecraft/world/level/newbiome/layer/traits/PixelTransformer;)Lnet/minecraft/world/level/newbiome/area/LazyArea; b
	createResult (Lnet/minecraft/world/level/newbiome/layer/traits/PixelTransformer;Lnet/minecraft/world/level/newbiome/area/Area;)Lnet/minecraft/world/level/newbiome/area/Area; a
	createResult (Lnet/minecraft/world/level/newbiome/layer/traits/PixelTransformer;Lnet/minecraft/world/level/newbiome/area/Area;Lnet/minecraft/world/level/newbiome/area/Area;)Lnet/minecraft/world/level/newbiome/area/Area; a
	createResult (Lnet/minecraft/world/level/newbiome/layer/traits/PixelTransformer;Lnet/minecraft/world/level/newbiome/area/LazyArea;)Lnet/minecraft/world/level/newbiome/area/LazyArea; a
	createResult (Lnet/minecraft/world/level/newbiome/layer/traits/PixelTransformer;Lnet/minecraft/world/level/newbiome/area/LazyArea;Lnet/minecraft/world/level/newbiome/area/LazyArea;)Lnet/minecraft/world/level/newbiome/area/LazyArea; a
	getBiomeNoise ()Lnet/minecraft/world/level/levelgen/synth/ImprovedNoise; b
	getMixedSeed ()J a
	initRandom (JJ)V a
	mixSeed (JJ)J b
	nextRandom (I)I a
net/minecraft/world/level/newbiome/layer/AddDeepOceanLayer cxq
	$VALUES b
	INSTANCE a
	apply (Lnet/minecraft/world/level/newbiome/context/Context;IIIII)I a
net/minecraft/world/level/newbiome/layer/AddEdgeLayer cxr
net/minecraft/world/level/newbiome/layer/AddEdgeLayer$CoolWarm cxr$a
	$VALUES b
	INSTANCE a
	apply (Lnet/minecraft/world/level/newbiome/context/Context;IIIII)I a
net/minecraft/world/level/newbiome/layer/AddEdgeLayer$HeatIce cxr$b
	$VALUES b
	INSTANCE a
	apply (Lnet/minecraft/world/level/newbiome/context/Context;IIIII)I a
net/minecraft/world/level/newbiome/layer/AddEdgeLayer$IntroduceSpecial cxr$c
	$VALUES b
	INSTANCE a
	apply (Lnet/minecraft/world/level/newbiome/context/Context;I)I a
net/minecraft/world/level/newbiome/layer/AddIslandLayer cxs
	$VALUES b
	INSTANCE a
	apply (Lnet/minecraft/world/level/newbiome/context/Context;IIIII)I a
net/minecraft/world/level/newbiome/layer/AddMushroomIslandLayer cxt
	$VALUES c
	INSTANCE a
	MUSHROOM_FIELDS b
	apply (Lnet/minecraft/world/level/newbiome/context/Context;IIIII)I a
net/minecraft/world/level/newbiome/layer/AddSnowLayer cxu
	$VALUES b
	INSTANCE a
	apply (Lnet/minecraft/world/level/newbiome/context/Context;I)I a
net/minecraft/world/level/newbiome/layer/BiomeEdgeLayer cxv
	$VALUES r
	BADLANDS i
	BADLANDS_PLATEAU j
	BAMBOO_JUNGLE g
	DESERT b
	GIANT_TREE_TAIGA m
	INSTANCE a
	JUNGLE f
	JUNGLE_EDGE h
	MOUNTAINS c
	MOUNTAIN_EDGE n
	PLAINS l
	SNOWY_TAIGA q
	SNOWY_TUNDRA e
	SWAMP o
	TAIGA p
	WOODED_BADLANDS_PLATEAU k
	WOODED_MOUNTAINS d
	apply (Lnet/minecraft/world/level/newbiome/context/Context;IIIII)I a
	checkEdge ([IIIIIIII)Z a
	checkEdgeStrict ([IIIIIIII)Z b
	isValidTemperatureEdge (II)Z a
net/minecraft/world/level/newbiome/layer/BiomeInitLayer cxw
	BADLANDS_PLATEAU g
	BIRCH_FOREST a
	COLD_BIOMES t
	DARK_FOREST l
	DESERT b
	FOREST d
	GIANT_TREE_TAIGA k
	ICE_BIOMES u
	JUNGLE f
	LEGACY_WARM_BIOMES q
	MEDIUM_BIOMES s
	MOUNTAINS c
	MUSHROOM_FIELDS i
	PLAINS j
	SAVANNA m
	SNOWY_TAIGA p
	SNOWY_TUNDRA e
	SWAMP n
	TAIGA o
	WARM_BIOMES r
	WOODED_BADLANDS_PLATEAU h
	warmBiomes v
	apply (Lnet/minecraft/world/level/newbiome/context/Context;I)I a
net/minecraft/world/level/newbiome/layer/IslandLayer cxx
	$VALUES b
	INSTANCE a
	applyPixel (Lnet/minecraft/world/level/newbiome/context/Context;II)I a
net/minecraft/world/level/newbiome/layer/Layer cxy
	LOGGER a
	area b
	get (II)Lnet/minecraft/world/level/biome/Biome; a
	getArea (IIII)[Lnet/minecraft/world/level/biome/Biome; a
	getBiome (I)Lnet/minecraft/world/level/biome/Biome; a
net/minecraft/world/level/newbiome/layer/Layers cxz
	COLD_OCEAN d
	DEEP_COLD_OCEAN i
	DEEP_FROZEN_OCEAN j
	DEEP_LUKEWARM_OCEAN g
	DEEP_OCEAN h
	DEEP_WARM_OCEAN f
	FROZEN_OCEAN e
	LUKEWARM_OCEAN b
	OCEAN c
	WARM_OCEAN a
	getDefaultLayer (JZII)Lnet/minecraft/world/level/newbiome/layer/Layer; a
	getDefaultLayer (ZIILjava/util/function/LongFunction;)Lnet/minecraft/world/level/newbiome/area/AreaFactory; a
	isOcean (I)Z a
	isSame (II)Z a
	isShallowOcean (I)Z b
	zoom (JLnet/minecraft/world/level/newbiome/layer/traits/AreaTransformer1;Lnet/minecraft/world/level/newbiome/area/AreaFactory;ILjava/util/function/LongFunction;)Lnet/minecraft/world/level/newbiome/area/AreaFactory; a
net/minecraft/world/level/newbiome/layer/OceanLayer cya
	$VALUES b
	INSTANCE a
	applyPixel (Lnet/minecraft/world/level/newbiome/context/Context;II)I a
net/minecraft/world/level/newbiome/layer/OceanMixerLayer cyb
	$VALUES b
	INSTANCE a
	applyPixel (Lnet/minecraft/world/level/newbiome/context/Context;Lnet/minecraft/world/level/newbiome/area/Area;Lnet/minecraft/world/level/newbiome/area/Area;II)I a
net/minecraft/world/level/newbiome/layer/RareBiomeLargeLayer cyc
	$VALUES d
	BAMBOO_JUNGLE c
	INSTANCE a
	JUNGLE b
	apply (Lnet/minecraft/world/level/newbiome/context/Context;I)I a
net/minecraft/world/level/newbiome/layer/RareBiomeSpotLayer cyd
	$VALUES d
	INSTANCE a
	PLAINS b
	SUNFLOWER_PLAINS c
	apply (Lnet/minecraft/world/level/newbiome/context/Context;I)I a
net/minecraft/world/level/newbiome/layer/RegionHillsLayer cye
	$VALUES C
	BADLANDS q
	BAMBOO_JUNGLE o
	BAMBOO_JUNGLE_HILLS p
	BIRCH_FOREST c
	BIRCH_FOREST_HILLS d
	DARK_FOREST v
	DESERT e
	DESERT_HILLS f
	FOREST i
	GIANT_TREE_TAIGA t
	GIANT_TREE_TAIGA_HILLS u
	INSTANCE a
	JUNGLE m
	JUNGLE_HILLS n
	LOGGER b
	MOUNTAINS g
	PLAINS s
	SAVANNA w
	SAVANNA_PLATEAU x
	SNOWY_MOUNTAIN l
	SNOWY_TAIGA z
	SNOWY_TAIGA_HILLS A
	SNOWY_TUNDRA k
	TAIGA y
	TAIGA_HILLS B
	WOODED_BADLANDS_PLATEAU r
	WOODED_HILLS j
	WOODED_MOUNTAINS h
	applyPixel (Lnet/minecraft/world/level/newbiome/context/Context;Lnet/minecraft/world/level/newbiome/area/Area;Lnet/minecraft/world/level/newbiome/area/Area;II)I a
net/minecraft/world/level/newbiome/layer/RemoveTooMuchOceanLayer cyf
	$VALUES b
	INSTANCE a
	apply (Lnet/minecraft/world/level/newbiome/context/Context;IIIII)I a
net/minecraft/world/level/newbiome/layer/RiverInitLayer cyg
	$VALUES b
	INSTANCE a
	apply (Lnet/minecraft/world/level/newbiome/context/Context;I)I a
net/minecraft/world/level/newbiome/layer/RiverLayer cyh
	$VALUES c
	INSTANCE a
	RIVER b
	apply (Lnet/minecraft/world/level/newbiome/context/Context;IIIII)I a
	riverFilter (I)I c
net/minecraft/world/level/newbiome/layer/RiverMixerLayer cyi
	$VALUES g
	FROZEN_RIVER b
	INSTANCE a
	MUSHROOM_FIELDS d
	MUSHROOM_FIELD_SHORE e
	RIVER f
	SNOWY_TUNDRA c
	applyPixel (Lnet/minecraft/world/level/newbiome/context/Context;Lnet/minecraft/world/level/newbiome/area/Area;Lnet/minecraft/world/level/newbiome/area/Area;II)I a
net/minecraft/world/level/newbiome/layer/ShoreLayer cyj
	$VALUES x
	BADLANDS k
	BADLANDS_PLATEAU m
	BEACH b
	DESERT d
	ERODED_BADLANDS n
	FOREST g
	INSTANCE a
	JUNGLE h
	JUNGLE_EDGE i
	JUNGLE_HILLS j
	MODIFIED_BADLANDS_PLATEAU p
	MODIFIED_WOODED_BADLANDS_PLATEAU o
	MOUNTAINS e
	MOUNTAIN_EDGE t
	MUSHROOM_FIELDS q
	MUSHROOM_FIELD_SHORE r
	RIVER s
	SNOWY_BEACH c
	STONE_SHORE u
	SWAMP v
	TAIGA w
	WOODED_BADLANDS_PLATEAU l
	WOODED_MOUNTAINS f
	apply (Lnet/minecraft/world/level/newbiome/context/Context;IIIII)I a
	isJungleCompatible (I)Z c
	isMesa (I)Z d
net/minecraft/world/level/newbiome/layer/SmoothLayer cyk
	$VALUES b
	INSTANCE a
	apply (Lnet/minecraft/world/level/newbiome/context/Context;IIIII)I a
net/minecraft/world/level/newbiome/layer/ZoomLayer cyl
	$VALUES c
	FUZZY b
	NORMAL a
	applyPixel (Lnet/minecraft/world/level/newbiome/context/BigContext;Lnet/minecraft/world/level/newbiome/area/Area;II)I a
	getParentX (I)I a
	getParentY (I)I b
	modeOrRandom (Lnet/minecraft/world/level/newbiome/context/BigContext;IIII)I a
net/minecraft/world/level/newbiome/layer/traits/AreaTransformer0 cyn
	applyPixel (Lnet/minecraft/world/level/newbiome/context/Context;II)I a
	run (Lnet/minecraft/world/level/newbiome/context/BigContext;)Lnet/minecraft/world/level/newbiome/area/AreaFactory; a
net/minecraft/world/level/newbiome/layer/traits/AreaTransformer1 cyo
	applyPixel (Lnet/minecraft/world/level/newbiome/context/BigContext;Lnet/minecraft/world/level/newbiome/area/Area;II)I a
	run (Lnet/minecraft/world/level/newbiome/context/BigContext;Lnet/minecraft/world/level/newbiome/area/AreaFactory;)Lnet/minecraft/world/level/newbiome/area/AreaFactory; a
net/minecraft/world/level/newbiome/layer/traits/AreaTransformer2 cyp
	applyPixel (Lnet/minecraft/world/level/newbiome/context/Context;Lnet/minecraft/world/level/newbiome/area/Area;Lnet/minecraft/world/level/newbiome/area/Area;II)I a
	run (Lnet/minecraft/world/level/newbiome/context/BigContext;Lnet/minecraft/world/level/newbiome/area/AreaFactory;Lnet/minecraft/world/level/newbiome/area/AreaFactory;)Lnet/minecraft/world/level/newbiome/area/AreaFactory; a
net/minecraft/world/level/newbiome/layer/traits/BishopTransformer cyq
	apply (Lnet/minecraft/world/level/newbiome/context/Context;IIIII)I a
	applyPixel (Lnet/minecraft/world/level/newbiome/context/BigContext;Lnet/minecraft/world/level/newbiome/area/Area;II)I a
net/minecraft/world/level/newbiome/layer/traits/C0Transformer cyr
	apply (Lnet/minecraft/world/level/newbiome/context/Context;I)I a
	applyPixel (Lnet/minecraft/world/level/newbiome/context/BigContext;Lnet/minecraft/world/level/newbiome/area/Area;II)I a
net/minecraft/world/level/newbiome/layer/traits/C1Transformer cys
	apply (Lnet/minecraft/world/level/newbiome/context/Context;I)I a
	applyPixel (Lnet/minecraft/world/level/newbiome/context/BigContext;Lnet/minecraft/world/level/newbiome/area/Area;II)I a
net/minecraft/world/level/newbiome/layer/traits/CastleTransformer cyt
	apply (Lnet/minecraft/world/level/newbiome/context/Context;IIIII)I a
	applyPixel (Lnet/minecraft/world/level/newbiome/context/BigContext;Lnet/minecraft/world/level/newbiome/area/Area;II)I a
net/minecraft/world/level/newbiome/layer/traits/DimensionOffset0Transformer cyu
	getParentX (I)I a
	getParentY (I)I b
net/minecraft/world/level/newbiome/layer/traits/DimensionOffset1Transformer cyv
	getParentX (I)I a
	getParentY (I)I b
net/minecraft/world/level/newbiome/layer/traits/DimensionTransformer cyw
	getParentX (I)I a
	getParentY (I)I b
net/minecraft/world/level/newbiome/layer/traits/PixelTransformer cyx
net/minecraft/world/level/pathfinder/BinaryHeap cza
	heap a
	size b
	changeCost (Lnet/minecraft/world/level/pathfinder/Node;F)V a
	clear ()V a
	downHeap (I)V b
	getHeap ()[Lnet/minecraft/world/level/pathfinder/Node; f
	insert (Lnet/minecraft/world/level/pathfinder/Node;)Lnet/minecraft/world/level/pathfinder/Node; a
	isEmpty ()Z e
	peek ()Lnet/minecraft/world/level/pathfinder/Node; b
	pop ()Lnet/minecraft/world/level/pathfinder/Node; c
	remove (Lnet/minecraft/world/level/pathfinder/Node;)V b
	size ()I d
	upHeap (I)V a
net/minecraft/world/level/pathfinder/BlockPathTypes czb
	$VALUES y
	BLOCKED a
	BREACH t
	COCOA w
	DAMAGE_CACTUS n
	DAMAGE_FIRE l
	DAMAGE_OTHER p
	DANGER_CACTUS m
	DANGER_FIRE k
	DANGER_OTHER o
	DOOR_IRON_CLOSED s
	DOOR_OPEN q
	DOOR_WOOD_CLOSED r
	FENCE e
	LAVA f
	LEAVES u
	OPEN b
	RAIL i
	STICKY_HONEY v
	TRAPDOOR d
	UNPASSABLE_RAIL j
	WALKABLE c
	WATER g
	WATER_BORDER h
	malus x
	getMalus ()F a
net/minecraft/world/level/pathfinder/FlyNodeEvaluator czc
	done ()V a
	getBlockPathType (Lnet/minecraft/world/entity/Mob;III)Lnet/minecraft/world/level/pathfinder/BlockPathTypes; a
	getBlockPathType (Lnet/minecraft/world/entity/Mob;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/pathfinder/BlockPathTypes; a
	getBlockPathType (Lnet/minecraft/world/level/BlockGetter;III)Lnet/minecraft/world/level/pathfinder/BlockPathTypes; a
	getBlockPathType (Lnet/minecraft/world/level/BlockGetter;IIILnet/minecraft/world/entity/Mob;IIIZZ)Lnet/minecraft/world/level/pathfinder/BlockPathTypes; a
	getGoal (DDD)Lnet/minecraft/world/level/pathfinder/Target; a
	getNeighbors ([Lnet/minecraft/world/level/pathfinder/Node;Lnet/minecraft/world/level/pathfinder/Node;)I a
	getNode (III)Lnet/minecraft/world/level/pathfinder/Node; a
	getStart ()Lnet/minecraft/world/level/pathfinder/Node; b
	hasMalus (Lnet/minecraft/world/level/pathfinder/Node;)Z a
	isOpen (Lnet/minecraft/world/level/pathfinder/Node;)Z b
	prepare (Lnet/minecraft/world/level/PathNavigationRegion;Lnet/minecraft/world/entity/Mob;)V a
net/minecraft/world/level/pathfinder/Node czd
	cameFrom h
	closed i
	costMalus k
	f g
	g e
	h f
	hash m
	heapIdx d
	type l
	walkedDistance j
	x a
	y b
	z c
	asBlockPos ()Lnet/minecraft/core/BlockPos; a
	asVec3 ()Lnet/minecraft/world/phys/Vec3; b
	cloneMove (III)Lnet/minecraft/world/level/pathfinder/Node; a
	createFromStream (Lnet/minecraft/network/FriendlyByteBuf;)Lnet/minecraft/world/level/pathfinder/Node; b
	createHash (III)I b
	distanceManhattan (Lnet/minecraft/core/BlockPos;)F c
	distanceManhattan (Lnet/minecraft/world/level/pathfinder/Node;)F c
	distanceTo (Lnet/minecraft/core/BlockPos;)F a
	distanceTo (Lnet/minecraft/world/level/pathfinder/Node;)F a
	distanceToSqr (Lnet/minecraft/core/BlockPos;)F b
	distanceToSqr (Lnet/minecraft/world/level/pathfinder/Node;)F b
	inOpenSet ()Z c
	writeToStream (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/world/level/pathfinder/NodeEvaluator cze
	canFloat i
	canOpenDoors h
	canPassDoors g
	entityDepth f
	entityHeight e
	entityWidth d
	level a
	mob b
	nodes c
	canFloat ()Z e
	canOpenDoors ()Z d
	canPassDoors ()Z c
	done ()V a
	getBlockPathType (Lnet/minecraft/world/level/BlockGetter;III)Lnet/minecraft/world/level/pathfinder/BlockPathTypes; a
	getBlockPathType (Lnet/minecraft/world/level/BlockGetter;IIILnet/minecraft/world/entity/Mob;IIIZZ)Lnet/minecraft/world/level/pathfinder/BlockPathTypes; a
	getGoal (DDD)Lnet/minecraft/world/level/pathfinder/Target; a
	getNeighbors ([Lnet/minecraft/world/level/pathfinder/Node;Lnet/minecraft/world/level/pathfinder/Node;)I a
	getNode (III)Lnet/minecraft/world/level/pathfinder/Node; a
	getNode (Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/pathfinder/Node; a
	getStart ()Lnet/minecraft/world/level/pathfinder/Node; b
	prepare (Lnet/minecraft/world/level/PathNavigationRegion;Lnet/minecraft/world/entity/Mob;)V a
	setCanFloat (Z)V c
	setCanOpenDoors (Z)V b
	setCanPassDoors (Z)V a
net/minecraft/world/level/pathfinder/Path czf
	closedSet c
	distToTarget g
	index e
	nodes a
	openSet b
	reached h
	target f
	targetNodes d
	canReach ()Z i
	createFromStream (Lnet/minecraft/network/FriendlyByteBuf;)Lnet/minecraft/world/level/pathfinder/Path; b
	currentNode ()Lnet/minecraft/world/level/pathfinder/Node; h
	currentPos ()Lnet/minecraft/core/Vec3i; g
	currentPos (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/world/phys/Vec3; a
	get (I)Lnet/minecraft/world/level/pathfinder/Node; a
	getClosedSet ()[Lnet/minecraft/world/level/pathfinder/Node; k
	getDistToTarget ()F n
	getIndex ()I f
	getNodes ()Ljava/util/List; d
	getOpenSet ()[Lnet/minecraft/world/level/pathfinder/Node; j
	getPos (Lnet/minecraft/world/entity/Entity;I)Lnet/minecraft/world/phys/Vec3; a
	getSize ()I e
	getTarget ()Lnet/minecraft/core/BlockPos; m
	isDone ()Z b
	last ()Lnet/minecraft/world/level/pathfinder/Node; c
	next ()V a
	sameAs (Lnet/minecraft/world/level/pathfinder/Path;)Z a
	set (ILnet/minecraft/world/level/pathfinder/Node;)V a
	setDebug ([Lnet/minecraft/world/level/pathfinder/Node;[Lnet/minecraft/world/level/pathfinder/Node;Ljava/util/Set;)V a
	setIndex (I)V c
	toDetailedString ()Ljava/lang/String; l
	truncate (I)V b
	writeToStream (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/world/level/pathfinder/PathComputationType czg
	$VALUES d
	AIR c
	LAND a
	WATER b
net/minecraft/world/level/pathfinder/PathFinder czh
	maxVisitedNodes b
	neighbors a
	nodeEvaluator c
	openSet d
	findPath (Lnet/minecraft/world/level/PathNavigationRegion;Lnet/minecraft/world/entity/Mob;Ljava/util/Set;FIF)Lnet/minecraft/world/level/pathfinder/Path; a
	findPath (Lnet/minecraft/world/level/pathfinder/Node;Ljava/util/Map;FIF)Lnet/minecraft/world/level/pathfinder/Path; a
	getBestH (Lnet/minecraft/world/level/pathfinder/Node;Ljava/util/Set;)F a
	reconstructPath (Lnet/minecraft/world/level/pathfinder/Node;Lnet/minecraft/core/BlockPos;Z)Lnet/minecraft/world/level/pathfinder/Path; a
net/minecraft/world/level/pathfinder/SwimNodeEvaluator czi
	allowBreaching j
	getBlockPathType (Lnet/minecraft/world/level/BlockGetter;III)Lnet/minecraft/world/level/pathfinder/BlockPathTypes; a
	getBlockPathType (Lnet/minecraft/world/level/BlockGetter;IIILnet/minecraft/world/entity/Mob;IIIZZ)Lnet/minecraft/world/level/pathfinder/BlockPathTypes; a
	getGoal (DDD)Lnet/minecraft/world/level/pathfinder/Target; a
	getNeighbors ([Lnet/minecraft/world/level/pathfinder/Node;Lnet/minecraft/world/level/pathfinder/Node;)I a
	getNode (III)Lnet/minecraft/world/level/pathfinder/Node; a
	getStart ()Lnet/minecraft/world/level/pathfinder/Node; b
	getWaterNode (III)Lnet/minecraft/world/level/pathfinder/Node; b
	isFree (III)Lnet/minecraft/world/level/pathfinder/BlockPathTypes; c
net/minecraft/world/level/pathfinder/Target czj
	bestHeuristic m
	bestNode n
	reached o
	createFromStream (Lnet/minecraft/network/FriendlyByteBuf;)Lnet/minecraft/world/level/pathfinder/Target; c
	getBestNode ()Lnet/minecraft/world/level/pathfinder/Node; d
	isReached ()Z f
	setReached ()V e
	updateBest (FLnet/minecraft/world/level/pathfinder/Node;)V a
net/minecraft/world/level/pathfinder/TurtleNodeEvaluator czk
	oldWalkableCost k
	oldWaterBorderCost l
	done ()V a
	evaluateBlockPathType (Lnet/minecraft/world/level/BlockGetter;ZZLnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/pathfinder/BlockPathTypes;)Lnet/minecraft/world/level/pathfinder/BlockPathTypes; a
	getAcceptedNode (IIIID)Lnet/minecraft/world/level/pathfinder/Node; a
	getBlockPathType (Lnet/minecraft/world/level/BlockGetter;III)Lnet/minecraft/world/level/pathfinder/BlockPathTypes; a
	getGoal (DDD)Lnet/minecraft/world/level/pathfinder/Target; a
	getNeighbors ([Lnet/minecraft/world/level/pathfinder/Node;Lnet/minecraft/world/level/pathfinder/Node;)I a
	getStart ()Lnet/minecraft/world/level/pathfinder/Node; b
	inWaterDependentPosHeight (Lnet/minecraft/core/BlockPos;)D b
	prepare (Lnet/minecraft/world/level/PathNavigationRegion;Lnet/minecraft/world/entity/Mob;)V a
net/minecraft/world/level/pathfinder/WalkNodeEvaluator czl
	collisionCache l
	oldWaterCost j
	pathTypesByPosCache k
	canReachWithoutCollision (Lnet/minecraft/world/level/pathfinder/Node;)Z a
	checkNeighbourBlocks (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos$MutableBlockPos;Lnet/minecraft/world/level/pathfinder/BlockPathTypes;)Lnet/minecraft/world/level/pathfinder/BlockPathTypes; a
	done ()V a
	evaluateBlockPathType (Lnet/minecraft/world/level/BlockGetter;ZZLnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/pathfinder/BlockPathTypes;)Lnet/minecraft/world/level/pathfinder/BlockPathTypes; a
	getBlockPathType (Lnet/minecraft/world/entity/Mob;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/pathfinder/BlockPathTypes; a
	getBlockPathType (Lnet/minecraft/world/level/BlockGetter;III)Lnet/minecraft/world/level/pathfinder/BlockPathTypes; a
	getBlockPathType (Lnet/minecraft/world/level/BlockGetter;IIILnet/minecraft/world/entity/Mob;IIIZZ)Lnet/minecraft/world/level/pathfinder/BlockPathTypes; a
	getBlockPathTypeRaw (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/pathfinder/BlockPathTypes; b
	getBlockPathTypeStatic (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos$MutableBlockPos;)Lnet/minecraft/world/level/pathfinder/BlockPathTypes; a
	getBlockPathTypes (Lnet/minecraft/world/level/BlockGetter;IIIIIIZZLjava/util/EnumSet;Lnet/minecraft/world/level/pathfinder/BlockPathTypes;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/pathfinder/BlockPathTypes; a
	getCachedBlockType (Lnet/minecraft/world/entity/Mob;III)Lnet/minecraft/world/level/pathfinder/BlockPathTypes; a
	getFloorLevel (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)D a
	getGoal (DDD)Lnet/minecraft/world/level/pathfinder/Target; a
	getLandNode (IIIIDLnet/minecraft/core/Direction;Lnet/minecraft/world/level/pathfinder/BlockPathTypes;)Lnet/minecraft/world/level/pathfinder/Node; a
	getNeighbors ([Lnet/minecraft/world/level/pathfinder/Node;Lnet/minecraft/world/level/pathfinder/Node;)I a
	getStart ()Lnet/minecraft/world/level/pathfinder/Node; b
	hasCollisions (Lnet/minecraft/world/phys/AABB;)Z a
	hasPositiveMalus (Lnet/minecraft/core/BlockPos;)Z b
	isBurningBlock (Lnet/minecraft/world/level/block/state/BlockState;)Z a
	isDiagonalValid (Lnet/minecraft/world/level/pathfinder/Node;Lnet/minecraft/world/level/pathfinder/Node;Lnet/minecraft/world/level/pathfinder/Node;Lnet/minecraft/world/level/pathfinder/Node;)Z a
	isNeighborValid (Lnet/minecraft/world/level/pathfinder/Node;Lnet/minecraft/world/level/pathfinder/Node;)Z a
	prepare (Lnet/minecraft/world/level/PathNavigationRegion;Lnet/minecraft/world/entity/Mob;)V a
net/minecraft/world/level/redstone/Redstone czn
net/minecraft/world/level/saveddata/SaveDataDirtyRunnable czp
	savedData a
net/minecraft/world/level/saveddata/SavedData czq
	LOGGER a
	dirty c
	id b
	getId ()Ljava/lang/String; d
	isDirty ()Z c
	load (Lnet/minecraft/nbt/CompoundTag;)V a
	save (Ljava/io/File;)V a
	save (Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/nbt/CompoundTag; b
	setDirty ()V b
	setDirty (Z)V a
net/minecraft/world/level/saveddata/maps/MapBanner czr
	color b
	name c
	pos a
	fromWorld (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/saveddata/maps/MapBanner; a
	getColor ()Lnet/minecraft/world/item/DyeColor; b
	getDecoration ()Lnet/minecraft/world/level/saveddata/maps/MapDecoration$Type; c
	getId ()Ljava/lang/String; f
	getName ()Lnet/minecraft/network/chat/Component; d
	getPos ()Lnet/minecraft/core/BlockPos; a
	load (Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/world/level/saveddata/maps/MapBanner; a
	save ()Lnet/minecraft/nbt/CompoundTag; e
net/minecraft/world/level/saveddata/maps/MapDecoration czs
	name e
	rot d
	type a
	x b
	y c
	getImage ()B a
	getName ()Lnet/minecraft/network/chat/Component; g
	getRot ()B e
	getType ()Lnet/minecraft/world/level/saveddata/maps/MapDecoration$Type; b
	getX ()B c
	getY ()B d
	renderOnFrame ()Z f
	setRot (B)V c
	setX (B)V a
	setY (B)V b
net/minecraft/world/level/saveddata/maps/MapDecoration$Type czs$a
	$VALUES E
	BANNER_BLACK z
	BANNER_BLUE v
	BANNER_BROWN w
	BANNER_CYAN t
	BANNER_GRAY r
	BANNER_GREEN x
	BANNER_LIGHT_BLUE n
	BANNER_LIGHT_GRAY s
	BANNER_LIME p
	BANNER_MAGENTA m
	BANNER_ORANGE l
	BANNER_PINK q
	BANNER_PURPLE u
	BANNER_RED y
	BANNER_WHITE k
	BANNER_YELLOW o
	BLUE_MARKER d
	FRAME b
	MANSION i
	MONUMENT j
	PLAYER a
	PLAYER_OFF_LIMITS h
	PLAYER_OFF_MAP g
	RED_MARKER c
	RED_X A
	TARGET_POINT f
	TARGET_X e
	icon B
	mapColor D
	renderedOnFrame C
	byIcon (B)Lnet/minecraft/world/level/saveddata/maps/MapDecoration$Type; a
	getIcon ()B a
	getMapColor ()I d
	hasMapColor ()Z c
	isRenderedOnFrame ()Z b
net/minecraft/world/level/saveddata/maps/MapFrame czt
	entityId c
	pos a
	rotation b
	frameId (Lnet/minecraft/core/BlockPos;)Ljava/lang/String; a
	getEntityId ()I d
	getId ()Ljava/lang/String; e
	getPos ()Lnet/minecraft/core/BlockPos; b
	getRotation ()I c
	load (Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/world/level/saveddata/maps/MapFrame; a
	save ()Lnet/minecraft/nbt/CompoundTag; a
net/minecraft/world/level/saveddata/maps/MapIndex czu
	usedAuxIds a
	getFreeAuxValueForMap ()I a
	load (Lnet/minecraft/nbt/CompoundTag;)V a
	save (Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/nbt/CompoundTag; b
net/minecraft/world/level/saveddata/maps/MapItemSavedData czv
	LOGGER k
	bannerMarkers m
	carriedBy i
	carriedByPlayers l
	colors g
	decorations j
	dimension c
	frameMarkers n
	locked h
	scale f
	trackingPosition d
	unlimitedTracking e
	x a
	z b
	addDecoration (Lnet/minecraft/world/level/saveddata/maps/MapDecoration$Type;Lnet/minecraft/world/level/LevelAccessor;Ljava/lang/String;DDDLnet/minecraft/network/chat/Component;)V a
	addTargetDecoration (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/core/BlockPos;Ljava/lang/String;Lnet/minecraft/world/level/saveddata/maps/MapDecoration$Type;)V a
	checkBanners (Lnet/minecraft/world/level/BlockGetter;II)V a
	getBanners ()Ljava/util/Collection; a
	getHoldingPlayer (Lnet/minecraft/world/entity/player/Player;)Lnet/minecraft/world/level/saveddata/maps/MapItemSavedData$HoldingPlayer; a
	getUpdatePacket (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/world/entity/player/Player;)Lnet/minecraft/network/protocol/Packet; a
	load (Lnet/minecraft/nbt/CompoundTag;)V a
	lockData (Lnet/minecraft/world/level/saveddata/maps/MapItemSavedData;)V a
	removedFromFrame (Lnet/minecraft/core/BlockPos;I)V a
	save (Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/nbt/CompoundTag; b
	setDirty (II)V a
	setOrigin (DDI)V a
	setProperties (IIIZZLnet/minecraft/resources/ResourceKey;)V a
	tickCarriedBy (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/item/ItemStack;)V a
	toggleBanner (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;)V a
net/minecraft/world/level/saveddata/maps/MapItemSavedData$HoldingPlayer czv$a
	dirtyData d
	maxDirtyX g
	maxDirtyY h
	minDirtyX e
	minDirtyY f
	player a
	step b
	tick i
	markDirty (II)V a
	nextUpdatePacket (Lnet/minecraft/world/item/ItemStack;)Lnet/minecraft/network/protocol/Packet; a
net/minecraft/world/level/storage/CommandStorage czy
	namespaces a
	storage b
	createId (Ljava/lang/String;)Ljava/lang/String; a
	get (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/nbt/CompoundTag; a
	keys ()Ljava/util/stream/Stream; a
	newStorage (Ljava/lang/String;Ljava/lang/String;)Lnet/minecraft/world/level/storage/CommandStorage$Container; a
	set (Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/nbt/CompoundTag;)V a
net/minecraft/world/level/storage/CommandStorage$Container czy$a
	storage a
	get (Ljava/lang/String;)Lnet/minecraft/nbt/CompoundTag; a
	getKeys (Ljava/lang/String;)Ljava/util/stream/Stream; b
	load (Lnet/minecraft/nbt/CompoundTag;)V a
	put (Ljava/lang/String;Lnet/minecraft/nbt/CompoundTag;)V a
	save (Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/nbt/CompoundTag; b
net/minecraft/world/level/storage/DerivedLevelData czz
	worldData a
	wrapped b
	fillCrashReportCategory (Lnet/minecraft/CrashReportCategory;)V a
	getAllowCommands ()Z n
	getClearWeatherTime ()I g
	getDayTime ()J e
	getDifficulty ()Lnet/minecraft/world/Difficulty; r
	getGameRules ()Lnet/minecraft/world/level/GameRules; p
	getGameTime ()J d
	getGameType ()Lnet/minecraft/world/level/GameType; l
	getLevelName ()Ljava/lang/String; f
	getRainTime ()I k
	getScheduledEvents ()Lnet/minecraft/world/level/timers/TimerQueue; t
	getThunderTime ()I i
	getWanderingTraderId ()Ljava/util/UUID; w
	getWanderingTraderSpawnChance ()I v
	getWanderingTraderSpawnDelay ()I u
	getWorldBorder ()Lnet/minecraft/world/level/border/WorldBorder$Settings; q
	getXSpawn ()I a
	getYSpawn ()I b
	getZSpawn ()I c
	isDifficultyLocked ()Z s
	isHardcore ()Z m
	isInitialized ()Z o
	isRaining ()Z j
	isThundering ()Z h
	setClearWeatherTime (I)V a
	setDayTime (J)V b
	setGameTime (J)V a
	setGameType (Lnet/minecraft/world/level/GameType;)V a
	setInitialized (Z)V c
	setRainTime (I)V f
	setRaining (Z)V b
	setSpawn (Lnet/minecraft/core/BlockPos;)V a
	setThunderTime (I)V e
	setThundering (Z)V a
	setWanderingTraderId (Ljava/util/UUID;)V a
	setWanderingTraderSpawnChance (I)V h
	setWanderingTraderSpawnDelay (I)V g
	setWorldBorder (Lnet/minecraft/world/level/border/WorldBorder$Settings;)V a
	setXSpawn (I)V b
	setYSpawn (I)V c
	setZSpawn (I)V d
net/minecraft/world/level/storage/DimensionDataStorage daa
	LOGGER a
	cache b
	dataFolder d
	fixerUpper c
	computeIfAbsent (Ljava/util/function/Supplier;Ljava/lang/String;)Lnet/minecraft/world/level/saveddata/SavedData; a
	get (Ljava/util/function/Supplier;Ljava/lang/String;)Lnet/minecraft/world/level/saveddata/SavedData; b
	getDataFile (Ljava/lang/String;)Ljava/io/File; a
	isGzip (Ljava/io/PushbackInputStream;)Z a
	readSavedData (Ljava/util/function/Supplier;Ljava/lang/String;)Lnet/minecraft/world/level/saveddata/SavedData; c
	readTagFromDisk (Ljava/lang/String;I)Lnet/minecraft/nbt/CompoundTag; a
	save ()V a
	set (Lnet/minecraft/world/level/saveddata/SavedData;)V a
net/minecraft/world/level/storage/LevelData dab
	fillCrashReportCategory (Lnet/minecraft/CrashReportCategory;)V a
	getDayTime ()J e
	getDifficulty ()Lnet/minecraft/world/Difficulty; r
	getGameRules ()Lnet/minecraft/world/level/GameRules; p
	getGameTime ()J d
	getXSpawn ()I a
	getYSpawn ()I b
	getZSpawn ()I c
	isDifficultyLocked ()Z s
	isHardcore ()Z m
	isRaining ()Z j
	isThundering ()Z h
	setRaining (Z)V b
net/minecraft/world/level/storage/LevelResource dac
	DATAPACK_DIR g
	GENERATED_DIR f
	LEVEL_DATA_FILE e
	MAP_RESOURCE_FILE h
	PLAYER_ADVANCEMENTS_DIR a
	PLAYER_DATA_DIR c
	PLAYER_OLD_DATA_DIR d
	PLAYER_STATS_DIR b
	ROOT i
	id j
	getId ()Ljava/lang/String; a
net/minecraft/world/level/storage/LevelStorageException dad
net/minecraft/world/level/storage/LevelStorageSource dae
	FORMATTER b
	LOGGER a
	OLD_SETTINGS_KEYS c
	backupDir e
	baseDir d
	fixerUpper f
	createAccess (Ljava/lang/String;)Lnet/minecraft/world/level/storage/LevelStorageSource$LevelStorageAccess; c
	createDefault (Ljava/nio/file/Path;)Lnet/minecraft/world/level/storage/LevelStorageSource; a
	getBackupPath ()Ljava/nio/file/Path; d
	getBaseDir ()Ljava/nio/file/Path; c
	getDataPacks (Ljava/io/File;Lcom/mojang/datafixers/DataFixer;)Lnet/minecraft/world/level/DataPackConfig; b
	getLevelData (Lcom/mojang/serialization/DynamicOps;Lnet/minecraft/world/level/DataPackConfig;)Ljava/util/function/BiFunction; b
	getLevelList ()Ljava/util/List; b
	getName ()Ljava/lang/String; a
	getStorageVersion ()I g
	isNewLevelIdAcceptable (Ljava/lang/String;)Z a
	levelExists (Ljava/lang/String;)Z b
	levelSummaryReader (Ljava/io/File;Z)Ljava/util/function/BiFunction; a
	readDataPackConfig (Lcom/mojang/serialization/Dynamic;)Lnet/minecraft/world/level/DataPackConfig; a
	readLevelData (Ljava/io/File;Ljava/util/function/BiFunction;)Ljava/lang/Object; a
	readWorldGenSettings (Lcom/mojang/serialization/Dynamic;Lcom/mojang/datafixers/DataFixer;I)Lcom/mojang/datafixers/util/Pair; a
net/minecraft/world/level/storage/LevelStorageSource$LevelStorageAccess dae$a
	levelId d
	levelPath c
	lock b
	resources e
	checkLock ()V i
	convertLevel (Lnet/minecraft/util/ProgressListener;)Z a
	createPlayerStorage ()Lnet/minecraft/world/level/storage/PlayerDataStorage; b
	deleteLevel ()V g
	getDataPacks ()Lnet/minecraft/world/level/DataPackConfig; e
	getDataTag (Lcom/mojang/serialization/DynamicOps;Lnet/minecraft/world/level/DataPackConfig;)Lnet/minecraft/world/level/storage/WorldData; a
	getDimensionPath (Lnet/minecraft/resources/ResourceKey;)Ljava/io/File; a
	getIconFile ()Ljava/io/File; f
	getLevelId ()Ljava/lang/String; a
	getLevelPath (Lnet/minecraft/world/level/storage/LevelResource;)Ljava/nio/file/Path; a
	getSummary ()Lnet/minecraft/world/level/storage/LevelSummary; d
	makeWorldBackup ()J h
	renameLevel (Ljava/lang/String;)V a
	requiresConversion ()Z c
	saveDataTag (Lnet/minecraft/core/RegistryAccess;Lnet/minecraft/world/level/storage/WorldData;)V a
	saveDataTag (Lnet/minecraft/core/RegistryAccess;Lnet/minecraft/world/level/storage/WorldData;Lnet/minecraft/nbt/CompoundTag;)V a
net/minecraft/world/level/storage/LevelSummary daf
	icon f
	info g
	levelId c
	levelVersion b
	locked e
	requiresConversion d
	settings a
	askToOpenWorld ()Z m
	compareTo (Lnet/minecraft/world/level/storage/LevelSummary;)I a
	createInfo ()Lnet/minecraft/network/chat/Component; q
	getGameMode ()Lnet/minecraft/world/level/GameType; g
	getIcon ()Ljava/io/File; c
	getInfo ()Lnet/minecraft/network/chat/Component; p
	getLastPlayed ()J e
	getLevelId ()Ljava/lang/String; a
	getLevelName ()Ljava/lang/String; b
	getSettings ()Lnet/minecraft/world/level/LevelSettings; f
	getWorldVersionName ()Lnet/minecraft/network/chat/MutableComponent; j
	hasCheats ()Z i
	isHardcore ()Z h
	isLocked ()Z o
	isRequiresConversion ()Z d
	levelVersion ()Lnet/minecraft/world/level/storage/LevelVersion; k
	markVersionInList ()Z l
	shouldBackup ()Z n
net/minecraft/world/level/storage/LevelVersion dag
	lastPlayed b
	levelDataVersion a
	minecraftVersion d
	minecraftVersionName c
	snapshot e
	lastPlayed ()J b
	levelDataVersion ()I a
	minecraftVersion ()I d
	minecraftVersionName ()Ljava/lang/String; c
	parse (Lcom/mojang/serialization/Dynamic;)Lnet/minecraft/world/level/storage/LevelVersion; a
	snapshot ()Z e
net/minecraft/world/level/storage/McRegionUpgrader dah
	LOGGER a
	addRegionFiles (Ljava/io/File;Ljava/util/Collection;)V a
	convertLevel (Lnet/minecraft/world/level/storage/LevelStorageSource$LevelStorageAccess;Lnet/minecraft/util/ProgressListener;)Z a
	convertRegion (Ljava/io/File;Ljava/io/File;Lnet/minecraft/world/level/biome/BiomeSource;IILnet/minecraft/util/ProgressListener;)V a
	convertRegions (Ljava/io/File;Ljava/lang/Iterable;Lnet/minecraft/world/level/biome/BiomeSource;IILnet/minecraft/util/ProgressListener;)V a
	makeMcrLevelDatBackup (Lnet/minecraft/world/level/storage/LevelStorageSource$LevelStorageAccess;)V a
net/minecraft/world/level/storage/PlayerDataStorage dai
	LOGGER b
	fixerUpper a
	playerDir c
	getSeenPlayers ()[Ljava/lang/String; a
	load (Lnet/minecraft/world/entity/player/Player;)Lnet/minecraft/nbt/CompoundTag; b
	save (Lnet/minecraft/world/entity/player/Player;)V a
net/minecraft/world/level/storage/PrimaryLevelData daj
	LOGGER a
	clearWeatherTime o
	customBossEvents x
	dayTime i
	difficultyLocked u
	endDragonFightData w
	fixerUpper j
	gameTime h
	initialized t
	knownServerBrands B
	loadedPlayerTag m
	playerDataVersion k
	rainTime q
	raining p
	scheduledEvents D
	settings b
	thunderTime s
	thundering r
	upgradedPlayerTag l
	version n
	wanderingTraderId A
	wanderingTraderSpawnChance z
	wanderingTraderSpawnDelay y
	wasModded C
	worldBorder v
	worldGenSettings c
	worldGenSettingsLifecycle d
	xSpawn e
	ySpawn f
	zSpawn g
	createTag (Lnet/minecraft/core/RegistryAccess;Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/nbt/CompoundTag; a
	endDragonFightData ()Lnet/minecraft/nbt/CompoundTag; B
	fillCrashReportCategory (Lnet/minecraft/CrashReportCategory;)V a
	getAllowCommands ()Z n
	getClearWeatherTime ()I g
	getCustomBossEvents ()Lnet/minecraft/nbt/CompoundTag; D
	getDataPackConfig ()Lnet/minecraft/world/level/DataPackConfig; C
	getDayTime ()J e
	getDifficulty ()Lnet/minecraft/world/Difficulty; r
	getGameRules ()Lnet/minecraft/world/level/GameRules; p
	getGameTime ()J d
	getGameType ()Lnet/minecraft/world/level/GameType; l
	getKnownServerBrands ()Ljava/util/Set; F
	getLevelName ()Ljava/lang/String; f
	getLevelSettings ()Lnet/minecraft/world/level/LevelSettings; H
	getLoadedPlayerTag ()Lnet/minecraft/nbt/CompoundTag; x
	getRainTime ()I k
	getScheduledEvents ()Lnet/minecraft/world/level/timers/TimerQueue; t
	getThunderTime ()I i
	getVersion ()I y
	getWanderingTraderId ()Ljava/util/UUID; w
	getWanderingTraderSpawnChance ()I v
	getWanderingTraderSpawnDelay ()I u
	getWorldBorder ()Lnet/minecraft/world/level/border/WorldBorder$Settings; q
	getXSpawn ()I a
	getYSpawn ()I b
	getZSpawn ()I c
	isDifficultyLocked ()Z s
	isHardcore ()Z m
	isInitialized ()Z o
	isRaining ()Z j
	isThundering ()Z h
	overworldData ()Lnet/minecraft/world/level/storage/ServerLevelData; G
	parse (Lcom/mojang/serialization/Dynamic;Lcom/mojang/datafixers/DataFixer;ILnet/minecraft/nbt/CompoundTag;Lnet/minecraft/world/level/LevelSettings;Lnet/minecraft/world/level/storage/LevelVersion;Lnet/minecraft/world/level/levelgen/WorldGenSettings;Lcom/mojang/serialization/Lifecycle;)Lnet/minecraft/world/level/storage/PrimaryLevelData; a
	setClearWeatherTime (I)V a
	setCustomBossEvents (Lnet/minecraft/nbt/CompoundTag;)V b
	setDataPackConfig (Lnet/minecraft/world/level/DataPackConfig;)V a
	setDayTime (J)V b
	setDifficulty (Lnet/minecraft/world/Difficulty;)V a
	setDifficultyLocked (Z)V d
	setEndDragonFightData (Lnet/minecraft/nbt/CompoundTag;)V a
	setGameTime (J)V a
	setGameType (Lnet/minecraft/world/level/GameType;)V a
	setInitialized (Z)V c
	setModdedInfo (Ljava/lang/String;Z)V a
	setRainTime (I)V f
	setRaining (Z)V b
	setSpawn (Lnet/minecraft/core/BlockPos;)V a
	setTagData (Lnet/minecraft/core/RegistryAccess;Lnet/minecraft/nbt/CompoundTag;Lnet/minecraft/nbt/CompoundTag;)V a
	setThunderTime (I)V e
	setThundering (Z)V a
	setWanderingTraderId (Ljava/util/UUID;)V a
	setWanderingTraderSpawnChance (I)V h
	setWanderingTraderSpawnDelay (I)V g
	setWorldBorder (Lnet/minecraft/world/level/border/WorldBorder$Settings;)V a
	setXSpawn (I)V b
	setYSpawn (I)V c
	setZSpawn (I)V d
	updatePlayerTag ()V I
	wasModded ()Z E
	worldGenSettings ()Lnet/minecraft/world/level/levelgen/WorldGenSettings; z
	worldGenSettingsLifecycle ()Lcom/mojang/serialization/Lifecycle; A
net/minecraft/world/level/storage/ServerLevelData dak
	fillCrashReportCategory (Lnet/minecraft/CrashReportCategory;)V a
	getAllowCommands ()Z n
	getClearWeatherTime ()I g
	getGameType ()Lnet/minecraft/world/level/GameType; l
	getLevelName ()Ljava/lang/String; f
	getRainTime ()I k
	getScheduledEvents ()Lnet/minecraft/world/level/timers/TimerQueue; t
	getThunderTime ()I i
	getWanderingTraderId ()Ljava/util/UUID; w
	getWanderingTraderSpawnChance ()I v
	getWanderingTraderSpawnDelay ()I u
	getWorldBorder ()Lnet/minecraft/world/level/border/WorldBorder$Settings; q
	isInitialized ()Z o
	setClearWeatherTime (I)V a
	setDayTime (J)V b
	setGameTime (J)V a
	setGameType (Lnet/minecraft/world/level/GameType;)V a
	setInitialized (Z)V c
	setRainTime (I)V f
	setThunderTime (I)V e
	setThundering (Z)V a
	setWanderingTraderId (Ljava/util/UUID;)V a
	setWanderingTraderSpawnChance (I)V h
	setWanderingTraderSpawnDelay (I)V g
	setWorldBorder (Lnet/minecraft/world/level/border/WorldBorder$Settings;)V a
net/minecraft/world/level/storage/WorldData dal
	createTag (Lnet/minecraft/core/RegistryAccess;Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/nbt/CompoundTag; a
	endDragonFightData ()Lnet/minecraft/nbt/CompoundTag; B
	fillCrashReportCategory (Lnet/minecraft/CrashReportCategory;)V a
	getAllowCommands ()Z n
	getCustomBossEvents ()Lnet/minecraft/nbt/CompoundTag; D
	getDataPackConfig ()Lnet/minecraft/world/level/DataPackConfig; C
	getDifficulty ()Lnet/minecraft/world/Difficulty; r
	getGameRules ()Lnet/minecraft/world/level/GameRules; p
	getGameType ()Lnet/minecraft/world/level/GameType; l
	getKnownServerBrands ()Ljava/util/Set; F
	getLevelName ()Ljava/lang/String; f
	getLevelSettings ()Lnet/minecraft/world/level/LevelSettings; H
	getLoadedPlayerTag ()Lnet/minecraft/nbt/CompoundTag; x
	getStorageVersionName (I)Ljava/lang/String; i
	getVersion ()I y
	isDifficultyLocked ()Z s
	isHardcore ()Z m
	overworldData ()Lnet/minecraft/world/level/storage/ServerLevelData; G
	setCustomBossEvents (Lnet/minecraft/nbt/CompoundTag;)V b
	setDataPackConfig (Lnet/minecraft/world/level/DataPackConfig;)V a
	setDifficulty (Lnet/minecraft/world/Difficulty;)V a
	setDifficultyLocked (Z)V d
	setEndDragonFightData (Lnet/minecraft/nbt/CompoundTag;)V a
	setGameType (Lnet/minecraft/world/level/GameType;)V a
	setModdedInfo (Ljava/lang/String;Z)V a
	wasModded ()Z E
	worldGenSettings ()Lnet/minecraft/world/level/levelgen/WorldGenSettings; z
	worldGenSettingsLifecycle ()Lcom/mojang/serialization/Lifecycle; A
net/minecraft/world/level/storage/WritableLevelData dam
	setSpawn (Lnet/minecraft/core/BlockPos;)V a
	setXSpawn (I)V b
	setYSpawn (I)V c
	setZSpawn (I)V d
net/minecraft/world/level/storage/loot/BinomialDistributionGenerator dan
	n d
	p e
	binomial (IF)Lnet/minecraft/world/level/storage/loot/BinomialDistributionGenerator; a
	getInt (Ljava/util/Random;)I a
	getType ()Lnet/minecraft/resources/ResourceLocation; a
net/minecraft/world/level/storage/loot/BinomialDistributionGenerator$Serializer dan$a
	deserialize (Lcom/google/gson/JsonElement;Ljava/lang/reflect/Type;Lcom/google/gson/JsonDeserializationContext;)Lnet/minecraft/world/level/storage/loot/BinomialDistributionGenerator; a
	serialize (Lnet/minecraft/world/level/storage/loot/BinomialDistributionGenerator;Ljava/lang/reflect/Type;Lcom/google/gson/JsonSerializationContext;)Lcom/google/gson/JsonElement; a
net/minecraft/world/level/storage/loot/BuiltInLootTables dao
	ABANDONED_MINESHAFT u
	ARMORER_GIFT al
	BASTION_BRIDGE N
	BASTION_HOGLIN_STABLE O
	BASTION_OTHER M
	BASTION_TREASURE L
	BURIED_TREASURE G
	BUTCHER_GIFT am
	CARTOGRAPHER_GIFT an
	CAT_MORNING_GIFT ak
	CLERIC_GIFT ao
	DESERT_PYRAMID z
	EMPTY a
	END_CITY_TREASURE c
	FARMER_GIFT ap
	FISHERMAN_GIFT aq
	FISHING ag
	FISHING_FISH aj
	FISHING_JUNK ah
	FISHING_TREASURE ai
	FLETCHER_GIFT ar
	IGLOO_CHEST C
	IMMUTABLE_LOCATIONS aA
	JUNGLE_TEMPLE A
	JUNGLE_TEMPLE_DISPENSER B
	LEATHERWORKER_GIFT as
	LIBRARIAN_GIFT at
	LOCATIONS az
	MASON_GIFT au
	NETHER_BRIDGE v
	PIGLIN_BARTERING ay
	PILLAGER_OUTPOST K
	RUINED_PORTAL P
	SHEEP_BLACK af
	SHEEP_BLUE ab
	SHEEP_BROWN ac
	SHEEP_CYAN Z
	SHEEP_GRAY X
	SHEEP_GREEN ad
	SHEEP_LIGHT_BLUE T
	SHEEP_LIGHT_GRAY Y
	SHEEP_LIME V
	SHEEP_MAGENTA S
	SHEEP_ORANGE R
	SHEEP_PINK W
	SHEEP_PURPLE aa
	SHEEP_RED ae
	SHEEP_WHITE Q
	SHEEP_YELLOW U
	SHEPHERD_GIFT av
	SHIPWRECK_MAP H
	SHIPWRECK_SUPPLY I
	SHIPWRECK_TREASURE J
	SIMPLE_DUNGEON d
	SPAWN_BONUS_CHEST b
	STRONGHOLD_CORRIDOR y
	STRONGHOLD_CROSSING x
	STRONGHOLD_LIBRARY w
	TOOLSMITH_GIFT aw
	UNDERWATER_RUIN_BIG F
	UNDERWATER_RUIN_SMALL E
	VILLAGE_ARMORER g
	VILLAGE_BUTCHER k
	VILLAGE_CARTOGRAPHER h
	VILLAGE_DESERT_HOUSE p
	VILLAGE_FISHER m
	VILLAGE_FLETCHER l
	VILLAGE_MASON i
	VILLAGE_PLAINS_HOUSE q
	VILLAGE_SAVANNA_HOUSE t
	VILLAGE_SHEPHERD j
	VILLAGE_SNOWY_HOUSE s
	VILLAGE_TAIGA_HOUSE r
	VILLAGE_TANNERY n
	VILLAGE_TEMPLE o
	VILLAGE_TOOLSMITH f
	VILLAGE_WEAPONSMITH e
	WEAPONSMITH_GIFT ax
	WOODLAND_MANSION D
	all ()Ljava/util/Set; a
	register (Ljava/lang/String;)Lnet/minecraft/resources/ResourceLocation; a
	register (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/resources/ResourceLocation; a
net/minecraft/world/level/storage/loot/ConstantIntValue dap
	value d
	exactly (I)Lnet/minecraft/world/level/storage/loot/ConstantIntValue; a
	getInt (Ljava/util/Random;)I a
	getType ()Lnet/minecraft/resources/ResourceLocation; a
net/minecraft/world/level/storage/loot/ConstantIntValue$Serializer dap$a
	deserialize (Lcom/google/gson/JsonElement;Ljava/lang/reflect/Type;Lcom/google/gson/JsonDeserializationContext;)Lnet/minecraft/world/level/storage/loot/ConstantIntValue; a
	serialize (Lnet/minecraft/world/level/storage/loot/ConstantIntValue;Ljava/lang/reflect/Type;Lcom/google/gson/JsonSerializationContext;)Lcom/google/gson/JsonElement; a
net/minecraft/world/level/storage/loot/Deserializers daq
	createConditionSerializer ()Lcom/google/gson/GsonBuilder; a
	createFunctionSerializer ()Lcom/google/gson/GsonBuilder; b
	createLootTableSerializer ()Lcom/google/gson/GsonBuilder; c
net/minecraft/world/level/storage/loot/GsonAdapterFactory dar
	builder (Lnet/minecraft/core/Registry;Ljava/lang/String;Ljava/lang/String;Ljava/util/function/Function;)Lnet/minecraft/world/level/storage/loot/GsonAdapterFactory$Builder; a
net/minecraft/world/level/storage/loot/GsonAdapterFactory$Builder dar$a
	defaultType e
	elementName b
	registry a
	typeGetter d
	typeKey c
	build ()Ljava/lang/Object; a
	withDefaultSerializer (Lnet/minecraft/world/level/storage/loot/SerializerType;Lnet/minecraft/world/level/storage/loot/GsonAdapterFactory$DefaultSerializer;)Lnet/minecraft/world/level/storage/loot/GsonAdapterFactory$Builder; a
net/minecraft/world/level/storage/loot/GsonAdapterFactory$DefaultSerializer dar$b
	deserialize (Lcom/google/gson/JsonElement;Lcom/google/gson/JsonDeserializationContext;)Ljava/lang/Object; a
	serialize (Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)Lcom/google/gson/JsonElement; a
net/minecraft/world/level/storage/loot/GsonAdapterFactory$JsonAdapter dar$c
	defaultType e
	elementName b
	registry a
	typeGetter d
	typeKey c
net/minecraft/world/level/storage/loot/IntLimiter das
	max b
	min a
	op c
	clamp (II)Lnet/minecraft/world/level/storage/loot/IntLimiter; a
	lowerBound (I)Lnet/minecraft/world/level/storage/loot/IntLimiter; a
	upperBound (I)Lnet/minecraft/world/level/storage/loot/IntLimiter; b
net/minecraft/world/level/storage/loot/IntLimiter$Serializer das$a
	deserialize (Lcom/google/gson/JsonElement;Ljava/lang/reflect/Type;Lcom/google/gson/JsonDeserializationContext;)Lnet/minecraft/world/level/storage/loot/IntLimiter; a
	serialize (Lnet/minecraft/world/level/storage/loot/IntLimiter;Ljava/lang/reflect/Type;Lcom/google/gson/JsonSerializationContext;)Lcom/google/gson/JsonElement; a
net/minecraft/world/level/storage/loot/LootContext dat
	conditions f
	dynamicDrops i
	level c
	lootTables d
	luck b
	params h
	random a
	visitedConditions g
	visitedTables e
	addDynamicDrops (Lnet/minecraft/resources/ResourceLocation;Ljava/util/function/Consumer;)V a
	addVisitedCondition (Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition;)Z a
	addVisitedTable (Lnet/minecraft/world/level/storage/loot/LootTable;)Z a
	getCondition (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition; b
	getLevel ()Lnet/minecraft/server/level/ServerLevel; c
	getLootTable (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/world/level/storage/loot/LootTable; a
	getLuck ()F b
	getParam (Lnet/minecraft/world/level/storage/loot/parameters/LootContextParam;)Ljava/lang/Object; b
	getParamOrNull (Lnet/minecraft/world/level/storage/loot/parameters/LootContextParam;)Ljava/lang/Object; c
	getRandom ()Ljava/util/Random; a
	hasParam (Lnet/minecraft/world/level/storage/loot/parameters/LootContextParam;)Z a
	removeVisitedCondition (Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition;)V b
	removeVisitedTable (Lnet/minecraft/world/level/storage/loot/LootTable;)V b
net/minecraft/world/level/storage/loot/LootContext$Builder dat$a
	dynamicDrops c
	level a
	luck e
	params b
	random d
	create (Lnet/minecraft/world/level/storage/loot/parameters/LootContextParamSet;)Lnet/minecraft/world/level/storage/loot/LootContext; a
	getLevel ()Lnet/minecraft/server/level/ServerLevel; a
	getOptionalParameter (Lnet/minecraft/world/level/storage/loot/parameters/LootContextParam;)Ljava/lang/Object; b
	getParameter (Lnet/minecraft/world/level/storage/loot/parameters/LootContextParam;)Ljava/lang/Object; a
	withDynamicDrop (Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/world/level/storage/loot/LootContext$DynamicDrop;)Lnet/minecraft/world/level/storage/loot/LootContext$Builder; a
	withLuck (F)Lnet/minecraft/world/level/storage/loot/LootContext$Builder; a
	withOptionalParameter (Lnet/minecraft/world/level/storage/loot/parameters/LootContextParam;Ljava/lang/Object;)Lnet/minecraft/world/level/storage/loot/LootContext$Builder; b
	withOptionalRandomSeed (J)Lnet/minecraft/world/level/storage/loot/LootContext$Builder; a
	withOptionalRandomSeed (JLjava/util/Random;)Lnet/minecraft/world/level/storage/loot/LootContext$Builder; a
	withParameter (Lnet/minecraft/world/level/storage/loot/parameters/LootContextParam;Ljava/lang/Object;)Lnet/minecraft/world/level/storage/loot/LootContext$Builder; a
	withRandom (Ljava/util/Random;)Lnet/minecraft/world/level/storage/loot/LootContext$Builder; a
net/minecraft/world/level/storage/loot/LootContext$DynamicDrop dat$b
net/minecraft/world/level/storage/loot/LootContext$EntityTarget dat$c
	$VALUES g
	DIRECT_KILLER c
	KILLER b
	KILLER_PLAYER d
	THIS a
	name e
	param f
	getByName (Ljava/lang/String;)Lnet/minecraft/world/level/storage/loot/LootContext$EntityTarget; a
	getParam ()Lnet/minecraft/world/level/storage/loot/parameters/LootContextParam; a
net/minecraft/world/level/storage/loot/LootContext$EntityTarget$Serializer dat$c$a
	read (Lcom/google/gson/stream/JsonReader;)Lnet/minecraft/world/level/storage/loot/LootContext$EntityTarget; a
	write (Lcom/google/gson/stream/JsonWriter;Lnet/minecraft/world/level/storage/loot/LootContext$EntityTarget;)V a
net/minecraft/world/level/storage/loot/LootContextUser dau
	getReferencedContextParams ()Ljava/util/Set; a
	validate (Lnet/minecraft/world/level/storage/loot/ValidationContext;)V a
net/minecraft/world/level/storage/loot/LootPool dav
	bonusRolls g
	compositeCondition c
	compositeFunction e
	conditions b
	entries a
	functions d
	rolls f
	addRandomItem (Ljava/util/function/Consumer;Lnet/minecraft/world/level/storage/loot/LootContext;)V b
	addRandomItems (Ljava/util/function/Consumer;Lnet/minecraft/world/level/storage/loot/LootContext;)V a
	lootPool ()Lnet/minecraft/world/level/storage/loot/LootPool$Builder; a
	validate (Lnet/minecraft/world/level/storage/loot/ValidationContext;)V a
net/minecraft/world/level/storage/loot/LootPool$Builder dav$a
	bonusRolls e
	conditions b
	entries a
	functions c
	rolls d
	add (Lnet/minecraft/world/level/storage/loot/entries/LootPoolEntryContainer$Builder;)Lnet/minecraft/world/level/storage/loot/LootPool$Builder; a
	apply (Lnet/minecraft/world/level/storage/loot/functions/LootItemFunction$Builder;)Ljava/lang/Object; b
	apply (Lnet/minecraft/world/level/storage/loot/functions/LootItemFunction$Builder;)Lnet/minecraft/world/level/storage/loot/LootPool$Builder; a
	build ()Lnet/minecraft/world/level/storage/loot/LootPool; b
	setBonusRolls (Lnet/minecraft/world/level/storage/loot/RandomValueBounds;)Lnet/minecraft/world/level/storage/loot/LootPool$Builder; a
	setRolls (Lnet/minecraft/world/level/storage/loot/RandomIntGenerator;)Lnet/minecraft/world/level/storage/loot/LootPool$Builder; a
	unwrap ()Ljava/lang/Object; c
	unwrap ()Lnet/minecraft/world/level/storage/loot/LootPool$Builder; a
	when (Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition$Builder;)Ljava/lang/Object; b
	when (Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition$Builder;)Lnet/minecraft/world/level/storage/loot/LootPool$Builder; a
net/minecraft/world/level/storage/loot/LootPool$Serializer dav$b
	deserialize (Lcom/google/gson/JsonElement;Ljava/lang/reflect/Type;Lcom/google/gson/JsonDeserializationContext;)Lnet/minecraft/world/level/storage/loot/LootPool; a
	serialize (Lnet/minecraft/world/level/storage/loot/LootPool;Ljava/lang/reflect/Type;Lcom/google/gson/JsonSerializationContext;)Lcom/google/gson/JsonElement; a
net/minecraft/world/level/storage/loot/LootTable daw
	DEFAULT_PARAM_SET b
	EMPTY a
	LOGGER c
	compositeFunction g
	functions f
	paramSet d
	pools e
	createStackSplitter (Ljava/util/function/Consumer;)Ljava/util/function/Consumer; a
	fill (Lnet/minecraft/world/Container;Lnet/minecraft/world/level/storage/loot/LootContext;)V a
	getAvailableSlots (Lnet/minecraft/world/Container;Ljava/util/Random;)Ljava/util/List; a
	getParamSet ()Lnet/minecraft/world/level/storage/loot/parameters/LootContextParamSet; a
	getRandomItems (Lnet/minecraft/world/level/storage/loot/LootContext;)Ljava/util/List; a
	getRandomItems (Lnet/minecraft/world/level/storage/loot/LootContext;Ljava/util/function/Consumer;)V b
	getRandomItemsRaw (Lnet/minecraft/world/level/storage/loot/LootContext;Ljava/util/function/Consumer;)V a
	lootTable ()Lnet/minecraft/world/level/storage/loot/LootTable$Builder; b
	shuffleAndSplitItems (Ljava/util/List;ILjava/util/Random;)V a
	validate (Lnet/minecraft/world/level/storage/loot/ValidationContext;)V a
net/minecraft/world/level/storage/loot/LootTable$Builder daw$a
	functions b
	paramSet c
	pools a
	apply (Lnet/minecraft/world/level/storage/loot/functions/LootItemFunction$Builder;)Ljava/lang/Object; b
	apply (Lnet/minecraft/world/level/storage/loot/functions/LootItemFunction$Builder;)Lnet/minecraft/world/level/storage/loot/LootTable$Builder; a
	build ()Lnet/minecraft/world/level/storage/loot/LootTable; b
	setParamSet (Lnet/minecraft/world/level/storage/loot/parameters/LootContextParamSet;)Lnet/minecraft/world/level/storage/loot/LootTable$Builder; a
	unwrap ()Ljava/lang/Object; c
	unwrap ()Lnet/minecraft/world/level/storage/loot/LootTable$Builder; a
	withPool (Lnet/minecraft/world/level/storage/loot/LootPool$Builder;)Lnet/minecraft/world/level/storage/loot/LootTable$Builder; a
net/minecraft/world/level/storage/loot/LootTable$Serializer daw$b
	deserialize (Lcom/google/gson/JsonElement;Ljava/lang/reflect/Type;Lcom/google/gson/JsonDeserializationContext;)Lnet/minecraft/world/level/storage/loot/LootTable; a
	serialize (Lnet/minecraft/world/level/storage/loot/LootTable;Ljava/lang/reflect/Type;Lcom/google/gson/JsonSerializationContext;)Lcom/google/gson/JsonElement; a
net/minecraft/world/level/storage/loot/LootTables dax
	GSON b
	LOGGER a
	predicateManager d
	tables c
	apply (Ljava/lang/Object;Lnet/minecraft/server/packs/resources/ResourceManager;Lnet/minecraft/util/profiling/ProfilerFiller;)V a
	apply (Ljava/util/Map;Lnet/minecraft/server/packs/resources/ResourceManager;Lnet/minecraft/util/profiling/ProfilerFiller;)V a
	get (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/world/level/storage/loot/LootTable; a
	getIds ()Ljava/util/Set; a
	serialize (Lnet/minecraft/world/level/storage/loot/LootTable;)Lcom/google/gson/JsonElement; a
	validate (Lnet/minecraft/world/level/storage/loot/ValidationContext;Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/world/level/storage/loot/LootTable;)V a
net/minecraft/world/level/storage/loot/PredicateManager day
	GSON b
	LOGGER a
	conditions c
	apply (Ljava/lang/Object;Lnet/minecraft/server/packs/resources/ResourceManager;Lnet/minecraft/util/profiling/ProfilerFiller;)V a
	apply (Ljava/util/Map;Lnet/minecraft/server/packs/resources/ResourceManager;Lnet/minecraft/util/profiling/ProfilerFiller;)V a
	get (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition; a
	getKeys ()Ljava/util/Set; a
net/minecraft/world/level/storage/loot/PredicateManager$CompositePredicate day$a
	composedPredicate b
	terms a
	getType ()Lnet/minecraft/world/level/storage/loot/predicates/LootItemConditionType; b
	test (Lnet/minecraft/world/level/storage/loot/LootContext;)Z a
	validate (Lnet/minecraft/world/level/storage/loot/ValidationContext;)V a
net/minecraft/world/level/storage/loot/RandomIntGenerator daz
	BINOMIAL c
	CONSTANT a
	UNIFORM b
	getInt (Ljava/util/Random;)I a
	getType ()Lnet/minecraft/resources/ResourceLocation; a
net/minecraft/world/level/storage/loot/RandomIntGenerators dba
	GENERATORS a
	deserialize (Lcom/google/gson/JsonElement;Lcom/google/gson/JsonDeserializationContext;)Lnet/minecraft/world/level/storage/loot/RandomIntGenerator; a
	serialize (Lnet/minecraft/world/level/storage/loot/RandomIntGenerator;Lcom/google/gson/JsonSerializationContext;)Lcom/google/gson/JsonElement; a
net/minecraft/world/level/storage/loot/RandomValueBounds dbb
	max e
	min d
	between (FF)Lnet/minecraft/world/level/storage/loot/RandomValueBounds; a
	exactly (F)Lnet/minecraft/world/level/storage/loot/RandomValueBounds; a
	getFloat (Ljava/util/Random;)F b
	getInt (Ljava/util/Random;)I a
	getMax ()F c
	getMin ()F b
	getType ()Lnet/minecraft/resources/ResourceLocation; a
	matchesValue (I)Z a
net/minecraft/world/level/storage/loot/RandomValueBounds$Serializer dbb$a
	deserialize (Lcom/google/gson/JsonElement;Ljava/lang/reflect/Type;Lcom/google/gson/JsonDeserializationContext;)Lnet/minecraft/world/level/storage/loot/RandomValueBounds; a
	serialize (Lnet/minecraft/world/level/storage/loot/RandomValueBounds;Ljava/lang/reflect/Type;Lcom/google/gson/JsonSerializationContext;)Lcom/google/gson/JsonElement; a
net/minecraft/world/level/storage/loot/Serializer dbc
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Ljava/lang/Object; a
	serialize (Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V a
net/minecraft/world/level/storage/loot/SerializerType dbd
	serializer a
	getSerializer ()Lnet/minecraft/world/level/storage/loot/Serializer; a
net/minecraft/world/level/storage/loot/ValidationContext dbe
	conditionResolver d
	context b
	contextCache h
	params c
	problems a
	tableResolver f
	visitedConditions e
	visitedTables g
	enterCondition (Ljava/lang/String;Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/world/level/storage/loot/ValidationContext; b
	enterTable (Ljava/lang/String;Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/world/level/storage/loot/ValidationContext; a
	forChild (Ljava/lang/String;)Lnet/minecraft/world/level/storage/loot/ValidationContext; b
	getContext ()Ljava/lang/String; b
	getProblems ()Lcom/google/common/collect/Multimap; a
	hasVisitedCondition (Lnet/minecraft/resources/ResourceLocation;)Z b
	hasVisitedTable (Lnet/minecraft/resources/ResourceLocation;)Z a
	reportProblem (Ljava/lang/String;)V a
	resolveCondition (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition; d
	resolveLootTable (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/world/level/storage/loot/LootTable; c
	setParams (Lnet/minecraft/world/level/storage/loot/parameters/LootContextParamSet;)Lnet/minecraft/world/level/storage/loot/ValidationContext; a
	validateUser (Lnet/minecraft/world/level/storage/loot/LootContextUser;)V a
net/minecraft/world/level/storage/loot/entries/AlternativesEntry dbf
	alternatives ([Lnet/minecraft/world/level/storage/loot/entries/LootPoolEntryContainer$Builder;)Lnet/minecraft/world/level/storage/loot/entries/AlternativesEntry$Builder; a
	compose ([Lnet/minecraft/world/level/storage/loot/entries/ComposableEntryContainer;)Lnet/minecraft/world/level/storage/loot/entries/ComposableEntryContainer; a
	getType ()Lnet/minecraft/world/level/storage/loot/entries/LootPoolEntryType; a
	validate (Lnet/minecraft/world/level/storage/loot/ValidationContext;)V a
net/minecraft/world/level/storage/loot/entries/AlternativesEntry$Builder dbf$a
	entries a
	build ()Lnet/minecraft/world/level/storage/loot/entries/LootPoolEntryContainer; b
	getThis ()Lnet/minecraft/world/level/storage/loot/entries/AlternativesEntry$Builder; a
	getThis ()Lnet/minecraft/world/level/storage/loot/entries/LootPoolEntryContainer$Builder; d
	otherwise (Lnet/minecraft/world/level/storage/loot/entries/LootPoolEntryContainer$Builder;)Lnet/minecraft/world/level/storage/loot/entries/AlternativesEntry$Builder; a
net/minecraft/world/level/storage/loot/entries/ComposableEntryContainer dbg
	ALWAYS_FALSE a
	ALWAYS_TRUE b
	and (Lnet/minecraft/world/level/storage/loot/entries/ComposableEntryContainer;)Lnet/minecraft/world/level/storage/loot/entries/ComposableEntryContainer; a
	or (Lnet/minecraft/world/level/storage/loot/entries/ComposableEntryContainer;)Lnet/minecraft/world/level/storage/loot/entries/ComposableEntryContainer; b
net/minecraft/world/level/storage/loot/entries/CompositeEntryBase dbh
	children c
	composedChildren e
	compose ([Lnet/minecraft/world/level/storage/loot/entries/ComposableEntryContainer;)Lnet/minecraft/world/level/storage/loot/entries/ComposableEntryContainer; a
	createSerializer (Lnet/minecraft/world/level/storage/loot/entries/CompositeEntryBase$CompositeEntryConstructor;)Lnet/minecraft/world/level/storage/loot/entries/LootPoolEntryContainer$Serializer; a
	validate (Lnet/minecraft/world/level/storage/loot/ValidationContext;)V a
net/minecraft/world/level/storage/loot/entries/CompositeEntryBase$CompositeEntryConstructor dbh$a
net/minecraft/world/level/storage/loot/entries/DynamicLoot dbi
	name g
	createItemStack (Ljava/util/function/Consumer;Lnet/minecraft/world/level/storage/loot/LootContext;)V a
	dynamicEntry (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/world/level/storage/loot/entries/LootPoolSingletonContainer$Builder; a
	getType ()Lnet/minecraft/world/level/storage/loot/entries/LootPoolEntryType; a
net/minecraft/world/level/storage/loot/entries/DynamicLoot$Serializer dbi$a
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;II[Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition;[Lnet/minecraft/world/level/storage/loot/functions/LootItemFunction;)Lnet/minecraft/world/level/storage/loot/entries/DynamicLoot; a
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;II[Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition;[Lnet/minecraft/world/level/storage/loot/functions/LootItemFunction;)Lnet/minecraft/world/level/storage/loot/entries/LootPoolSingletonContainer; b
	serializeCustom (Lcom/google/gson/JsonObject;Lnet/minecraft/world/level/storage/loot/entries/DynamicLoot;Lcom/google/gson/JsonSerializationContext;)V a
	serializeCustom (Lcom/google/gson/JsonObject;Lnet/minecraft/world/level/storage/loot/entries/LootPoolEntryContainer;Lcom/google/gson/JsonSerializationContext;)V a
	serializeCustom (Lcom/google/gson/JsonObject;Lnet/minecraft/world/level/storage/loot/entries/LootPoolSingletonContainer;Lcom/google/gson/JsonSerializationContext;)V a
net/minecraft/world/level/storage/loot/entries/EmptyLootItem dbj
	createItemStack (Ljava/util/function/Consumer;Lnet/minecraft/world/level/storage/loot/LootContext;)V a
	emptyItem ()Lnet/minecraft/world/level/storage/loot/entries/LootPoolSingletonContainer$Builder; b
	getType ()Lnet/minecraft/world/level/storage/loot/entries/LootPoolEntryType; a
net/minecraft/world/level/storage/loot/entries/EmptyLootItem$Serializer dbj$a
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;II[Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition;[Lnet/minecraft/world/level/storage/loot/functions/LootItemFunction;)Lnet/minecraft/world/level/storage/loot/entries/EmptyLootItem; a
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;II[Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition;[Lnet/minecraft/world/level/storage/loot/functions/LootItemFunction;)Lnet/minecraft/world/level/storage/loot/entries/LootPoolSingletonContainer; b
net/minecraft/world/level/storage/loot/entries/EntryGroup dbk
	compose ([Lnet/minecraft/world/level/storage/loot/entries/ComposableEntryContainer;)Lnet/minecraft/world/level/storage/loot/entries/ComposableEntryContainer; a
	getType ()Lnet/minecraft/world/level/storage/loot/entries/LootPoolEntryType; a
	list ([Lnet/minecraft/world/level/storage/loot/entries/LootPoolEntryContainer$Builder;)Lnet/minecraft/world/level/storage/loot/entries/EntryGroup$Builder; a
net/minecraft/world/level/storage/loot/entries/EntryGroup$Builder dbk$a
	entries a
	append (Lnet/minecraft/world/level/storage/loot/entries/LootPoolEntryContainer$Builder;)Lnet/minecraft/world/level/storage/loot/entries/EntryGroup$Builder; b
	build ()Lnet/minecraft/world/level/storage/loot/entries/LootPoolEntryContainer; b
	getThis ()Lnet/minecraft/world/level/storage/loot/entries/EntryGroup$Builder; a
	getThis ()Lnet/minecraft/world/level/storage/loot/entries/LootPoolEntryContainer$Builder; d
net/minecraft/world/level/storage/loot/entries/LootItem dbl
	item g
	createItemStack (Ljava/util/function/Consumer;Lnet/minecraft/world/level/storage/loot/LootContext;)V a
	getType ()Lnet/minecraft/world/level/storage/loot/entries/LootPoolEntryType; a
	lootTableItem (Lnet/minecraft/world/level/ItemLike;)Lnet/minecraft/world/level/storage/loot/entries/LootPoolSingletonContainer$Builder; a
net/minecraft/world/level/storage/loot/entries/LootItem$Serializer dbl$a
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;II[Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition;[Lnet/minecraft/world/level/storage/loot/functions/LootItemFunction;)Lnet/minecraft/world/level/storage/loot/entries/LootItem; a
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;II[Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition;[Lnet/minecraft/world/level/storage/loot/functions/LootItemFunction;)Lnet/minecraft/world/level/storage/loot/entries/LootPoolSingletonContainer; b
	serializeCustom (Lcom/google/gson/JsonObject;Lnet/minecraft/world/level/storage/loot/entries/LootItem;Lcom/google/gson/JsonSerializationContext;)V a
	serializeCustom (Lcom/google/gson/JsonObject;Lnet/minecraft/world/level/storage/loot/entries/LootPoolEntryContainer;Lcom/google/gson/JsonSerializationContext;)V a
	serializeCustom (Lcom/google/gson/JsonObject;Lnet/minecraft/world/level/storage/loot/entries/LootPoolSingletonContainer;Lcom/google/gson/JsonSerializationContext;)V a
net/minecraft/world/level/storage/loot/entries/LootPoolEntries dbm
	ALTERNATIVES f
	DYNAMIC d
	EMPTY a
	GROUP h
	ITEM b
	REFERENCE c
	SEQUENCE g
	TAG e
	createGsonAdapter ()Ljava/lang/Object; a
	register (Ljava/lang/String;Lnet/minecraft/world/level/storage/loot/Serializer;)Lnet/minecraft/world/level/storage/loot/entries/LootPoolEntryType; a
net/minecraft/world/level/storage/loot/entries/LootPoolEntry dbn
	createItemStack (Ljava/util/function/Consumer;Lnet/minecraft/world/level/storage/loot/LootContext;)V a
	getWeight (F)I a
net/minecraft/world/level/storage/loot/entries/LootPoolEntryContainer dbo
	compositeCondition c
	conditions d
	canRun (Lnet/minecraft/world/level/storage/loot/LootContext;)Z a
	getType ()Lnet/minecraft/world/level/storage/loot/entries/LootPoolEntryType; a
	validate (Lnet/minecraft/world/level/storage/loot/ValidationContext;)V a
net/minecraft/world/level/storage/loot/entries/LootPoolEntryContainer$Builder dbo$a
	conditions a
	append (Lnet/minecraft/world/level/storage/loot/entries/LootPoolEntryContainer$Builder;)Lnet/minecraft/world/level/storage/loot/entries/EntryGroup$Builder; b
	build ()Lnet/minecraft/world/level/storage/loot/entries/LootPoolEntryContainer; b
	getConditions ()[Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition; f
	getThis ()Lnet/minecraft/world/level/storage/loot/entries/LootPoolEntryContainer$Builder; d
	otherwise (Lnet/minecraft/world/level/storage/loot/entries/LootPoolEntryContainer$Builder;)Lnet/minecraft/world/level/storage/loot/entries/AlternativesEntry$Builder; a
	then (Lnet/minecraft/world/level/storage/loot/entries/LootPoolEntryContainer$Builder;)Lnet/minecraft/world/level/storage/loot/entries/SequentialEntry$Builder; c
	unwrap ()Ljava/lang/Object; c
	unwrap ()Lnet/minecraft/world/level/storage/loot/entries/LootPoolEntryContainer$Builder; e
	when (Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition$Builder;)Ljava/lang/Object; b
	when (Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition$Builder;)Lnet/minecraft/world/level/storage/loot/entries/LootPoolEntryContainer$Builder; a
net/minecraft/world/level/storage/loot/entries/LootPoolEntryContainer$Serializer dbo$b
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Ljava/lang/Object; a
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Lnet/minecraft/world/level/storage/loot/entries/LootPoolEntryContainer; b
	deserializeCustom (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition;)Lnet/minecraft/world/level/storage/loot/entries/LootPoolEntryContainer; b
	serialize (Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V a
	serialize (Lcom/google/gson/JsonObject;Lnet/minecraft/world/level/storage/loot/entries/LootPoolEntryContainer;Lcom/google/gson/JsonSerializationContext;)V b
	serializeCustom (Lcom/google/gson/JsonObject;Lnet/minecraft/world/level/storage/loot/entries/LootPoolEntryContainer;Lcom/google/gson/JsonSerializationContext;)V a
net/minecraft/world/level/storage/loot/entries/LootPoolEntryType dbp
net/minecraft/world/level/storage/loot/entries/LootPoolSingletonContainer dbq
	compositeFunction g
	entry h
	functions f
	quality e
	weight c
	createItemStack (Ljava/util/function/Consumer;Lnet/minecraft/world/level/storage/loot/LootContext;)V a
	simpleBuilder (Lnet/minecraft/world/level/storage/loot/entries/LootPoolSingletonContainer$EntryConstructor;)Lnet/minecraft/world/level/storage/loot/entries/LootPoolSingletonContainer$Builder; a
	validate (Lnet/minecraft/world/level/storage/loot/ValidationContext;)V a
net/minecraft/world/level/storage/loot/entries/LootPoolSingletonContainer$Builder dbq$a
	functions c
	quality b
	weight a
	apply (Lnet/minecraft/world/level/storage/loot/functions/LootItemFunction$Builder;)Ljava/lang/Object; b
	apply (Lnet/minecraft/world/level/storage/loot/functions/LootItemFunction$Builder;)Lnet/minecraft/world/level/storage/loot/entries/LootPoolSingletonContainer$Builder; a
	getFunctions ()[Lnet/minecraft/world/level/storage/loot/functions/LootItemFunction; a
	setQuality (I)Lnet/minecraft/world/level/storage/loot/entries/LootPoolSingletonContainer$Builder; b
	setWeight (I)Lnet/minecraft/world/level/storage/loot/entries/LootPoolSingletonContainer$Builder; a
net/minecraft/world/level/storage/loot/entries/LootPoolSingletonContainer$DummyBuilder dbq$b
	constructor c
	build ()Lnet/minecraft/world/level/storage/loot/entries/LootPoolEntryContainer; b
	getThis ()Lnet/minecraft/world/level/storage/loot/entries/LootPoolEntryContainer$Builder; d
	getThis ()Lnet/minecraft/world/level/storage/loot/entries/LootPoolSingletonContainer$DummyBuilder; g
net/minecraft/world/level/storage/loot/entries/LootPoolSingletonContainer$EntryBase dbq$c
	getWeight (F)I a
net/minecraft/world/level/storage/loot/entries/LootPoolSingletonContainer$EntryConstructor dbq$d
net/minecraft/world/level/storage/loot/entries/LootPoolSingletonContainer$Serializer dbq$e
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;II[Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition;[Lnet/minecraft/world/level/storage/loot/functions/LootItemFunction;)Lnet/minecraft/world/level/storage/loot/entries/LootPoolSingletonContainer; b
	deserializeCustom (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition;)Lnet/minecraft/world/level/storage/loot/entries/LootPoolEntryContainer; b
	deserializeCustom (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition;)Lnet/minecraft/world/level/storage/loot/entries/LootPoolSingletonContainer; a
	serializeCustom (Lcom/google/gson/JsonObject;Lnet/minecraft/world/level/storage/loot/entries/LootPoolEntryContainer;Lcom/google/gson/JsonSerializationContext;)V a
	serializeCustom (Lcom/google/gson/JsonObject;Lnet/minecraft/world/level/storage/loot/entries/LootPoolSingletonContainer;Lcom/google/gson/JsonSerializationContext;)V a
net/minecraft/world/level/storage/loot/entries/LootTableReference dbr
	name g
	createItemStack (Ljava/util/function/Consumer;Lnet/minecraft/world/level/storage/loot/LootContext;)V a
	getType ()Lnet/minecraft/world/level/storage/loot/entries/LootPoolEntryType; a
	lootTableReference (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/world/level/storage/loot/entries/LootPoolSingletonContainer$Builder; a
	validate (Lnet/minecraft/world/level/storage/loot/ValidationContext;)V a
net/minecraft/world/level/storage/loot/entries/LootTableReference$Serializer dbr$a
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;II[Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition;[Lnet/minecraft/world/level/storage/loot/functions/LootItemFunction;)Lnet/minecraft/world/level/storage/loot/entries/LootPoolSingletonContainer; b
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;II[Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition;[Lnet/minecraft/world/level/storage/loot/functions/LootItemFunction;)Lnet/minecraft/world/level/storage/loot/entries/LootTableReference; a
	serializeCustom (Lcom/google/gson/JsonObject;Lnet/minecraft/world/level/storage/loot/entries/LootPoolEntryContainer;Lcom/google/gson/JsonSerializationContext;)V a
	serializeCustom (Lcom/google/gson/JsonObject;Lnet/minecraft/world/level/storage/loot/entries/LootPoolSingletonContainer;Lcom/google/gson/JsonSerializationContext;)V a
	serializeCustom (Lcom/google/gson/JsonObject;Lnet/minecraft/world/level/storage/loot/entries/LootTableReference;Lcom/google/gson/JsonSerializationContext;)V a
net/minecraft/world/level/storage/loot/entries/SequentialEntry dbs
	compose ([Lnet/minecraft/world/level/storage/loot/entries/ComposableEntryContainer;)Lnet/minecraft/world/level/storage/loot/entries/ComposableEntryContainer; a
	getType ()Lnet/minecraft/world/level/storage/loot/entries/LootPoolEntryType; a
	sequential ([Lnet/minecraft/world/level/storage/loot/entries/LootPoolEntryContainer$Builder;)Lnet/minecraft/world/level/storage/loot/entries/SequentialEntry$Builder; a
net/minecraft/world/level/storage/loot/entries/SequentialEntry$Builder dbs$a
	entries a
	build ()Lnet/minecraft/world/level/storage/loot/entries/LootPoolEntryContainer; b
	getThis ()Lnet/minecraft/world/level/storage/loot/entries/LootPoolEntryContainer$Builder; d
	getThis ()Lnet/minecraft/world/level/storage/loot/entries/SequentialEntry$Builder; a
	then (Lnet/minecraft/world/level/storage/loot/entries/LootPoolEntryContainer$Builder;)Lnet/minecraft/world/level/storage/loot/entries/SequentialEntry$Builder; c
net/minecraft/world/level/storage/loot/entries/TagEntry dbt
	expand h
	tag g
	createItemStack (Ljava/util/function/Consumer;Lnet/minecraft/world/level/storage/loot/LootContext;)V a
	expandTag (Lnet/minecraft/tags/Tag;)Lnet/minecraft/world/level/storage/loot/entries/LootPoolSingletonContainer$Builder; b
	expandTag (Lnet/minecraft/world/level/storage/loot/LootContext;Ljava/util/function/Consumer;)Z a
	getType ()Lnet/minecraft/world/level/storage/loot/entries/LootPoolEntryType; a
	tagContents (Lnet/minecraft/tags/Tag;)Lnet/minecraft/world/level/storage/loot/entries/LootPoolSingletonContainer$Builder; a
net/minecraft/world/level/storage/loot/entries/TagEntry$Serializer dbt$a
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;II[Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition;[Lnet/minecraft/world/level/storage/loot/functions/LootItemFunction;)Lnet/minecraft/world/level/storage/loot/entries/LootPoolSingletonContainer; b
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;II[Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition;[Lnet/minecraft/world/level/storage/loot/functions/LootItemFunction;)Lnet/minecraft/world/level/storage/loot/entries/TagEntry; a
	serializeCustom (Lcom/google/gson/JsonObject;Lnet/minecraft/world/level/storage/loot/entries/LootPoolEntryContainer;Lcom/google/gson/JsonSerializationContext;)V a
	serializeCustom (Lcom/google/gson/JsonObject;Lnet/minecraft/world/level/storage/loot/entries/LootPoolSingletonContainer;Lcom/google/gson/JsonSerializationContext;)V a
	serializeCustom (Lcom/google/gson/JsonObject;Lnet/minecraft/world/level/storage/loot/entries/TagEntry;Lcom/google/gson/JsonSerializationContext;)V a
net/minecraft/world/level/storage/loot/functions/ApplyBonusCount dbv
	FORMULAS a
	enchantment b
	formula d
	addBonusBinomialDistributionCount (Lnet/minecraft/world/item/enchantment/Enchantment;FI)Lnet/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction$Builder; a
	addOreBonusCount (Lnet/minecraft/world/item/enchantment/Enchantment;)Lnet/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction$Builder; a
	addUniformBonusCount (Lnet/minecraft/world/item/enchantment/Enchantment;)Lnet/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction$Builder; b
	addUniformBonusCount (Lnet/minecraft/world/item/enchantment/Enchantment;I)Lnet/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction$Builder; a
	getReferencedContextParams ()Ljava/util/Set; a
	getType ()Lnet/minecraft/world/level/storage/loot/functions/LootItemFunctionType; b
	run (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/storage/loot/LootContext;)Lnet/minecraft/world/item/ItemStack; a
net/minecraft/world/level/storage/loot/functions/ApplyBonusCount$BinomialWithBonusCount dbv$a
	TYPE a
	extraRounds b
	probability c
	calculateNewCount (Ljava/util/Random;II)I a
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Lnet/minecraft/world/level/storage/loot/functions/ApplyBonusCount$Formula; a
	getType ()Lnet/minecraft/resources/ResourceLocation; a
	serializeParams (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonSerializationContext;)V a
net/minecraft/world/level/storage/loot/functions/ApplyBonusCount$Formula dbv$b
	calculateNewCount (Ljava/util/Random;II)I a
	getType ()Lnet/minecraft/resources/ResourceLocation; a
	serializeParams (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonSerializationContext;)V a
net/minecraft/world/level/storage/loot/functions/ApplyBonusCount$FormulaDeserializer dbv$c
net/minecraft/world/level/storage/loot/functions/ApplyBonusCount$OreDrops dbv$d
	TYPE a
	calculateNewCount (Ljava/util/Random;II)I a
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Lnet/minecraft/world/level/storage/loot/functions/ApplyBonusCount$Formula; a
	getType ()Lnet/minecraft/resources/ResourceLocation; a
	serializeParams (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonSerializationContext;)V a
net/minecraft/world/level/storage/loot/functions/ApplyBonusCount$Serializer dbv$e
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition;)Lnet/minecraft/world/level/storage/loot/functions/ApplyBonusCount; a
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition;)Lnet/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction; b
	serialize (Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V a
	serialize (Lcom/google/gson/JsonObject;Lnet/minecraft/world/level/storage/loot/functions/ApplyBonusCount;Lcom/google/gson/JsonSerializationContext;)V a
	serialize (Lcom/google/gson/JsonObject;Lnet/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction;Lcom/google/gson/JsonSerializationContext;)V a
net/minecraft/world/level/storage/loot/functions/ApplyBonusCount$UniformBonusCount dbv$f
	TYPE a
	bonusMultiplier b
	calculateNewCount (Ljava/util/Random;II)I a
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Lnet/minecraft/world/level/storage/loot/functions/ApplyBonusCount$Formula; a
	getType ()Lnet/minecraft/resources/ResourceLocation; a
	serializeParams (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonSerializationContext;)V a
net/minecraft/world/level/storage/loot/functions/ApplyExplosionDecay dbw
	explosionDecay ()Lnet/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction$Builder; c
	getType ()Lnet/minecraft/world/level/storage/loot/functions/LootItemFunctionType; b
	run (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/storage/loot/LootContext;)Lnet/minecraft/world/item/ItemStack; a
net/minecraft/world/level/storage/loot/functions/ApplyExplosionDecay$Serializer dbw$a
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition;)Lnet/minecraft/world/level/storage/loot/functions/ApplyExplosionDecay; a
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition;)Lnet/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction; b
net/minecraft/world/level/storage/loot/functions/CopyBlockState dbx
	block a
	properties b
	copyState (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/world/level/storage/loot/functions/CopyBlockState$Builder; a
	getReferencedContextParams ()Ljava/util/Set; a
	getType ()Lnet/minecraft/world/level/storage/loot/functions/LootItemFunctionType; b
	run (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/storage/loot/LootContext;)Lnet/minecraft/world/item/ItemStack; a
	serialize (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/state/properties/Property;)Ljava/lang/String; a
net/minecraft/world/level/storage/loot/functions/CopyBlockState$Builder dbx$a
	block a
	properties b
	build ()Lnet/minecraft/world/level/storage/loot/functions/LootItemFunction; b
	copy (Lnet/minecraft/world/level/block/state/properties/Property;)Lnet/minecraft/world/level/storage/loot/functions/CopyBlockState$Builder; a
	getThis ()Lnet/minecraft/world/level/storage/loot/functions/CopyBlockState$Builder; a
	getThis ()Lnet/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction$Builder; d
net/minecraft/world/level/storage/loot/functions/CopyBlockState$Serializer dbx$b
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition;)Lnet/minecraft/world/level/storage/loot/functions/CopyBlockState; a
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition;)Lnet/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction; b
	serialize (Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V a
	serialize (Lcom/google/gson/JsonObject;Lnet/minecraft/world/level/storage/loot/functions/CopyBlockState;Lcom/google/gson/JsonSerializationContext;)V a
	serialize (Lcom/google/gson/JsonObject;Lnet/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction;Lcom/google/gson/JsonSerializationContext;)V a
net/minecraft/world/level/storage/loot/functions/CopyNameFunction dby
	source a
	copyName (Lnet/minecraft/world/level/storage/loot/functions/CopyNameFunction$NameSource;)Lnet/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction$Builder; a
	getReferencedContextParams ()Ljava/util/Set; a
	getType ()Lnet/minecraft/world/level/storage/loot/functions/LootItemFunctionType; b
	run (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/storage/loot/LootContext;)Lnet/minecraft/world/item/ItemStack; a
net/minecraft/world/level/storage/loot/functions/CopyNameFunction$NameSource dby$a
	$VALUES g
	BLOCK_ENTITY d
	KILLER b
	KILLER_PLAYER c
	THIS a
	name e
	param f
	getByName (Ljava/lang/String;)Lnet/minecraft/world/level/storage/loot/functions/CopyNameFunction$NameSource; a
net/minecraft/world/level/storage/loot/functions/CopyNameFunction$Serializer dby$b
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition;)Lnet/minecraft/world/level/storage/loot/functions/CopyNameFunction; a
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition;)Lnet/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction; b
	serialize (Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V a
	serialize (Lcom/google/gson/JsonObject;Lnet/minecraft/world/level/storage/loot/functions/CopyNameFunction;Lcom/google/gson/JsonSerializationContext;)V a
	serialize (Lcom/google/gson/JsonObject;Lnet/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction;Lcom/google/gson/JsonSerializationContext;)V a
net/minecraft/world/level/storage/loot/functions/CopyNbtFunction dbz
	BLOCK_ENTITY_GETTER e
	ENTITY_GETTER d
	operations b
	source a
	compileNbtPath (Ljava/lang/String;)Lnet/minecraft/commands/arguments/NbtPathArgument$NbtPath; b
	copyData (Lnet/minecraft/world/level/storage/loot/functions/CopyNbtFunction$DataSource;)Lnet/minecraft/world/level/storage/loot/functions/CopyNbtFunction$Builder; a
	getReferencedContextParams ()Ljava/util/Set; a
	getType ()Lnet/minecraft/world/level/storage/loot/functions/LootItemFunctionType; b
	run (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/storage/loot/LootContext;)Lnet/minecraft/world/item/ItemStack; a
net/minecraft/world/level/storage/loot/functions/CopyNbtFunction$Builder dbz$a
	ops b
	source a
	build ()Lnet/minecraft/world/level/storage/loot/functions/LootItemFunction; b
	copy (Ljava/lang/String;Ljava/lang/String;)Lnet/minecraft/world/level/storage/loot/functions/CopyNbtFunction$Builder; a
	copy (Ljava/lang/String;Ljava/lang/String;Lnet/minecraft/world/level/storage/loot/functions/CopyNbtFunction$MergeStrategy;)Lnet/minecraft/world/level/storage/loot/functions/CopyNbtFunction$Builder; a
	getThis ()Lnet/minecraft/world/level/storage/loot/functions/CopyNbtFunction$Builder; a
	getThis ()Lnet/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction$Builder; d
net/minecraft/world/level/storage/loot/functions/CopyNbtFunction$CopyOperation dbz$b
	op e
	sourcePath b
	sourcePathText a
	targetPath d
	targetPathText c
	apply (Ljava/util/function/Supplier;Lnet/minecraft/nbt/Tag;)V a
	fromJson (Lcom/google/gson/JsonObject;)Lnet/minecraft/world/level/storage/loot/functions/CopyNbtFunction$CopyOperation; a
	toJson ()Lcom/google/gson/JsonObject; a
net/minecraft/world/level/storage/loot/functions/CopyNbtFunction$DataSource dbz$c
	$VALUES h
	BLOCK_ENTITY d
	KILLER b
	KILLER_PLAYER c
	THIS a
	getter g
	name e
	param f
	getByName (Ljava/lang/String;)Lnet/minecraft/world/level/storage/loot/functions/CopyNbtFunction$DataSource; a
net/minecraft/world/level/storage/loot/functions/CopyNbtFunction$MergeStrategy dbz$d
	$VALUES e
	APPEND b
	MERGE c
	REPLACE a
	name d
	getByName (Ljava/lang/String;)Lnet/minecraft/world/level/storage/loot/functions/CopyNbtFunction$MergeStrategy; a
	merge (Lnet/minecraft/nbt/Tag;Lnet/minecraft/commands/arguments/NbtPathArgument$NbtPath;Ljava/util/List;)V a
net/minecraft/world/level/storage/loot/functions/CopyNbtFunction$Serializer dbz$e
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition;)Lnet/minecraft/world/level/storage/loot/functions/CopyNbtFunction; a
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition;)Lnet/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction; b
	serialize (Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V a
	serialize (Lcom/google/gson/JsonObject;Lnet/minecraft/world/level/storage/loot/functions/CopyNbtFunction;Lcom/google/gson/JsonSerializationContext;)V a
	serialize (Lcom/google/gson/JsonObject;Lnet/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction;Lcom/google/gson/JsonSerializationContext;)V a
net/minecraft/world/level/storage/loot/functions/EnchantRandomlyFunction dca
	LOGGER a
	enchantments b
	enchantItem (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/item/enchantment/Enchantment;Ljava/util/Random;)Lnet/minecraft/world/item/ItemStack; a
	getType ()Lnet/minecraft/world/level/storage/loot/functions/LootItemFunctionType; b
	randomApplicableEnchantment ()Lnet/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction$Builder; d
	randomEnchantment ()Lnet/minecraft/world/level/storage/loot/functions/EnchantRandomlyFunction$Builder; c
	run (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/storage/loot/LootContext;)Lnet/minecraft/world/item/ItemStack; a
net/minecraft/world/level/storage/loot/functions/EnchantRandomlyFunction$Builder dca$a
	enchantments a
	build ()Lnet/minecraft/world/level/storage/loot/functions/LootItemFunction; b
	getThis ()Lnet/minecraft/world/level/storage/loot/functions/EnchantRandomlyFunction$Builder; a
	getThis ()Lnet/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction$Builder; d
	withEnchantment (Lnet/minecraft/world/item/enchantment/Enchantment;)Lnet/minecraft/world/level/storage/loot/functions/EnchantRandomlyFunction$Builder; a
net/minecraft/world/level/storage/loot/functions/EnchantRandomlyFunction$Serializer dca$b
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition;)Lnet/minecraft/world/level/storage/loot/functions/EnchantRandomlyFunction; a
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition;)Lnet/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction; b
	serialize (Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V a
	serialize (Lcom/google/gson/JsonObject;Lnet/minecraft/world/level/storage/loot/functions/EnchantRandomlyFunction;Lcom/google/gson/JsonSerializationContext;)V a
	serialize (Lcom/google/gson/JsonObject;Lnet/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction;Lcom/google/gson/JsonSerializationContext;)V a
net/minecraft/world/level/storage/loot/functions/EnchantWithLevelsFunction dcb
	levels a
	treasure b
	enchantWithLevels (Lnet/minecraft/world/level/storage/loot/RandomIntGenerator;)Lnet/minecraft/world/level/storage/loot/functions/EnchantWithLevelsFunction$Builder; a
	getType ()Lnet/minecraft/world/level/storage/loot/functions/LootItemFunctionType; b
	run (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/storage/loot/LootContext;)Lnet/minecraft/world/item/ItemStack; a
net/minecraft/world/level/storage/loot/functions/EnchantWithLevelsFunction$Builder dcb$a
	levels a
	treasure b
	allowTreasure ()Lnet/minecraft/world/level/storage/loot/functions/EnchantWithLevelsFunction$Builder; e
	build ()Lnet/minecraft/world/level/storage/loot/functions/LootItemFunction; b
	getThis ()Lnet/minecraft/world/level/storage/loot/functions/EnchantWithLevelsFunction$Builder; a
	getThis ()Lnet/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction$Builder; d
net/minecraft/world/level/storage/loot/functions/EnchantWithLevelsFunction$Serializer dcb$b
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition;)Lnet/minecraft/world/level/storage/loot/functions/EnchantWithLevelsFunction; a
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition;)Lnet/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction; b
	serialize (Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V a
	serialize (Lcom/google/gson/JsonObject;Lnet/minecraft/world/level/storage/loot/functions/EnchantWithLevelsFunction;Lcom/google/gson/JsonSerializationContext;)V a
	serialize (Lcom/google/gson/JsonObject;Lnet/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction;Lcom/google/gson/JsonSerializationContext;)V a
net/minecraft/world/level/storage/loot/functions/ExplorationMapFunction dcc
	DEFAULT_DECORATION b
	DEFAULT_FEATURE a
	LOGGER d
	destination e
	mapDecoration f
	searchRadius h
	skipKnownStructures i
	zoom g
	getReferencedContextParams ()Ljava/util/Set; a
	getType ()Lnet/minecraft/world/level/storage/loot/functions/LootItemFunctionType; b
	makeExplorationMap ()Lnet/minecraft/world/level/storage/loot/functions/ExplorationMapFunction$Builder; c
	run (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/storage/loot/LootContext;)Lnet/minecraft/world/item/ItemStack; a
net/minecraft/world/level/storage/loot/functions/ExplorationMapFunction$Builder dcc$a
	destination a
	mapDecoration b
	searchRadius d
	skipKnownStructures e
	zoom c
	build ()Lnet/minecraft/world/level/storage/loot/functions/LootItemFunction; b
	getThis ()Lnet/minecraft/world/level/storage/loot/functions/ExplorationMapFunction$Builder; a
	getThis ()Lnet/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction$Builder; d
	setDestination (Lnet/minecraft/world/level/levelgen/feature/StructureFeature;)Lnet/minecraft/world/level/storage/loot/functions/ExplorationMapFunction$Builder; a
	setMapDecoration (Lnet/minecraft/world/level/saveddata/maps/MapDecoration$Type;)Lnet/minecraft/world/level/storage/loot/functions/ExplorationMapFunction$Builder; a
	setSearchRadius (I)Lnet/minecraft/world/level/storage/loot/functions/ExplorationMapFunction$Builder; a
	setSkipKnownStructures (Z)Lnet/minecraft/world/level/storage/loot/functions/ExplorationMapFunction$Builder; a
	setZoom (B)Lnet/minecraft/world/level/storage/loot/functions/ExplorationMapFunction$Builder; a
net/minecraft/world/level/storage/loot/functions/ExplorationMapFunction$Serializer dcc$b
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition;)Lnet/minecraft/world/level/storage/loot/functions/ExplorationMapFunction; a
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition;)Lnet/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction; b
	readStructure (Lcom/google/gson/JsonObject;)Lnet/minecraft/world/level/levelgen/feature/StructureFeature; a
	serialize (Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V a
	serialize (Lcom/google/gson/JsonObject;Lnet/minecraft/world/level/storage/loot/functions/ExplorationMapFunction;Lcom/google/gson/JsonSerializationContext;)V a
	serialize (Lcom/google/gson/JsonObject;Lnet/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction;Lcom/google/gson/JsonSerializationContext;)V a
net/minecraft/world/level/storage/loot/functions/FillPlayerHead dcd
	entityTarget a
	fillPlayerHead (Lnet/minecraft/world/level/storage/loot/LootContext$EntityTarget;)Lnet/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction$Builder; a
	getReferencedContextParams ()Ljava/util/Set; a
	getType ()Lnet/minecraft/world/level/storage/loot/functions/LootItemFunctionType; b
	run (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/storage/loot/LootContext;)Lnet/minecraft/world/item/ItemStack; a
net/minecraft/world/level/storage/loot/functions/FillPlayerHead$Serializer dcd$a
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition;)Lnet/minecraft/world/level/storage/loot/functions/FillPlayerHead; a
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition;)Lnet/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction; b
	serialize (Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V a
	serialize (Lcom/google/gson/JsonObject;Lnet/minecraft/world/level/storage/loot/functions/FillPlayerHead;Lcom/google/gson/JsonSerializationContext;)V a
	serialize (Lcom/google/gson/JsonObject;Lnet/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction;Lcom/google/gson/JsonSerializationContext;)V a
net/minecraft/world/level/storage/loot/functions/FunctionUserBuilder dce
	apply (Lnet/minecraft/world/level/storage/loot/functions/LootItemFunction$Builder;)Ljava/lang/Object; b
	unwrap ()Ljava/lang/Object; c
net/minecraft/world/level/storage/loot/functions/LimitCount dcf
	limiter a
	getType ()Lnet/minecraft/world/level/storage/loot/functions/LootItemFunctionType; b
	limitCount (Lnet/minecraft/world/level/storage/loot/IntLimiter;)Lnet/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction$Builder; a
	run (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/storage/loot/LootContext;)Lnet/minecraft/world/item/ItemStack; a
net/minecraft/world/level/storage/loot/functions/LimitCount$Serializer dcf$a
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition;)Lnet/minecraft/world/level/storage/loot/functions/LimitCount; a
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition;)Lnet/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction; b
	serialize (Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V a
	serialize (Lcom/google/gson/JsonObject;Lnet/minecraft/world/level/storage/loot/functions/LimitCount;Lcom/google/gson/JsonSerializationContext;)V a
	serialize (Lcom/google/gson/JsonObject;Lnet/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction;Lcom/google/gson/JsonSerializationContext;)V a
net/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction dcg
	compositePredicates a
	predicates c
	apply (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/storage/loot/LootContext;)Lnet/minecraft/world/item/ItemStack; b
	run (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/storage/loot/LootContext;)Lnet/minecraft/world/item/ItemStack; a
	simpleBuilder (Ljava/util/function/Function;)Lnet/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction$Builder; a
	validate (Lnet/minecraft/world/level/storage/loot/ValidationContext;)V a
net/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction$Builder dcg$a
	conditions a
	getConditions ()[Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition; g
	getThis ()Lnet/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction$Builder; d
	unwrap ()Ljava/lang/Object; c
	unwrap ()Lnet/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction$Builder; f
	when (Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition$Builder;)Ljava/lang/Object; b
	when (Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition$Builder;)Lnet/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction$Builder; a
net/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction$DummyBuilder dcg$b
	constructor a
	build ()Lnet/minecraft/world/level/storage/loot/functions/LootItemFunction; b
	getThis ()Lnet/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction$Builder; d
	getThis ()Lnet/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction$DummyBuilder; a
net/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction$Serializer dcg$c
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Ljava/lang/Object; a
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Lnet/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction; b
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition;)Lnet/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction; b
	serialize (Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V a
	serialize (Lcom/google/gson/JsonObject;Lnet/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction;Lcom/google/gson/JsonSerializationContext;)V a
net/minecraft/world/level/storage/loot/functions/LootItemFunction dch
	decorate (Ljava/util/function/BiFunction;Ljava/util/function/Consumer;Lnet/minecraft/world/level/storage/loot/LootContext;)Ljava/util/function/Consumer; a
	getType ()Lnet/minecraft/world/level/storage/loot/functions/LootItemFunctionType; b
net/minecraft/world/level/storage/loot/functions/LootItemFunction$Builder dch$a
	build ()Lnet/minecraft/world/level/storage/loot/functions/LootItemFunction; b
net/minecraft/world/level/storage/loot/functions/LootItemFunctionType dci
net/minecraft/world/level/storage/loot/functions/LootItemFunctions dcj
	APPLY_BONUS p
	COPY_NAME m
	COPY_NBT u
	COPY_STATE v
	ENCHANT_RANDOMLY d
	ENCHANT_WITH_LEVELS c
	EXPLORATION_MAP k
	EXPLOSION_DECAY r
	FILL_PLAYER_HEAD t
	FURNACE_SMELT f
	IDENTITY a
	LIMIT_COUNT o
	LOOTING_ENCHANT g
	SET_ATTRIBUTES i
	SET_CONTENTS n
	SET_COUNT b
	SET_DAMAGE h
	SET_LOOT_TABLE q
	SET_LORE s
	SET_NAME j
	SET_NBT e
	SET_STEW_EFFECT l
	compose ([Ljava/util/function/BiFunction;)Ljava/util/function/BiFunction; a
	createGsonAdapter ()Ljava/lang/Object; a
	register (Ljava/lang/String;Lnet/minecraft/world/level/storage/loot/Serializer;)Lnet/minecraft/world/level/storage/loot/functions/LootItemFunctionType; a
net/minecraft/world/level/storage/loot/functions/LootingEnchantFunction dck
	limit b
	value a
	getReferencedContextParams ()Ljava/util/Set; a
	getType ()Lnet/minecraft/world/level/storage/loot/functions/LootItemFunctionType; b
	hasLimit ()Z c
	lootingMultiplier (Lnet/minecraft/world/level/storage/loot/RandomValueBounds;)Lnet/minecraft/world/level/storage/loot/functions/LootingEnchantFunction$Builder; a
	run (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/storage/loot/LootContext;)Lnet/minecraft/world/item/ItemStack; a
net/minecraft/world/level/storage/loot/functions/LootingEnchantFunction$Builder dck$a
	count a
	limit b
	build ()Lnet/minecraft/world/level/storage/loot/functions/LootItemFunction; b
	getThis ()Lnet/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction$Builder; d
	getThis ()Lnet/minecraft/world/level/storage/loot/functions/LootingEnchantFunction$Builder; a
	setLimit (I)Lnet/minecraft/world/level/storage/loot/functions/LootingEnchantFunction$Builder; a
net/minecraft/world/level/storage/loot/functions/LootingEnchantFunction$Serializer dck$b
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition;)Lnet/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction; b
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition;)Lnet/minecraft/world/level/storage/loot/functions/LootingEnchantFunction; a
	serialize (Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V a
	serialize (Lcom/google/gson/JsonObject;Lnet/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction;Lcom/google/gson/JsonSerializationContext;)V a
	serialize (Lcom/google/gson/JsonObject;Lnet/minecraft/world/level/storage/loot/functions/LootingEnchantFunction;Lcom/google/gson/JsonSerializationContext;)V a
net/minecraft/world/level/storage/loot/functions/SetAttributesFunction dcl
	modifiers a
	getType ()Lnet/minecraft/world/level/storage/loot/functions/LootItemFunctionType; b
	modifier (Ljava/lang/String;Lnet/minecraft/world/entity/ai/attributes/Attribute;Lnet/minecraft/world/entity/ai/attributes/AttributeModifier$Operation;Lnet/minecraft/world/level/storage/loot/RandomValueBounds;)Lnet/minecraft/world/level/storage/loot/functions/SetAttributesFunction$ModifierBuilder; a
	run (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/storage/loot/LootContext;)Lnet/minecraft/world/item/ItemStack; a
	setAttributes ()Lnet/minecraft/world/level/storage/loot/functions/SetAttributesFunction$Builder; c
net/minecraft/world/level/storage/loot/functions/SetAttributesFunction$Builder dcl$a
	modifiers a
	build ()Lnet/minecraft/world/level/storage/loot/functions/LootItemFunction; b
	getThis ()Lnet/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction$Builder; d
	getThis ()Lnet/minecraft/world/level/storage/loot/functions/SetAttributesFunction$Builder; a
	withModifier (Lnet/minecraft/world/level/storage/loot/functions/SetAttributesFunction$ModifierBuilder;)Lnet/minecraft/world/level/storage/loot/functions/SetAttributesFunction$Builder; a
net/minecraft/world/level/storage/loot/functions/SetAttributesFunction$Modifier dcl$b
	amount d
	attribute b
	id e
	name a
	operation c
	slots f
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Lnet/minecraft/world/level/storage/loot/functions/SetAttributesFunction$Modifier; a
	operationFromString (Ljava/lang/String;)Lnet/minecraft/world/entity/ai/attributes/AttributeModifier$Operation; a
	operationToString (Lnet/minecraft/world/entity/ai/attributes/AttributeModifier$Operation;)Ljava/lang/String; a
	serialize (Lcom/google/gson/JsonSerializationContext;)Lcom/google/gson/JsonObject; a
net/minecraft/world/level/storage/loot/functions/SetAttributesFunction$ModifierBuilder dcl$c
	amount d
	attribute b
	id e
	name a
	operation c
	slots f
	build ()Lnet/minecraft/world/level/storage/loot/functions/SetAttributesFunction$Modifier; a
	forSlot (Lnet/minecraft/world/entity/EquipmentSlot;)Lnet/minecraft/world/level/storage/loot/functions/SetAttributesFunction$ModifierBuilder; a
	withUuid (Ljava/util/UUID;)Lnet/minecraft/world/level/storage/loot/functions/SetAttributesFunction$ModifierBuilder; a
net/minecraft/world/level/storage/loot/functions/SetAttributesFunction$Serializer dcl$d
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition;)Lnet/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction; b
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition;)Lnet/minecraft/world/level/storage/loot/functions/SetAttributesFunction; a
	serialize (Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V a
	serialize (Lcom/google/gson/JsonObject;Lnet/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction;Lcom/google/gson/JsonSerializationContext;)V a
	serialize (Lcom/google/gson/JsonObject;Lnet/minecraft/world/level/storage/loot/functions/SetAttributesFunction;Lcom/google/gson/JsonSerializationContext;)V a
net/minecraft/world/level/storage/loot/functions/SetContainerContents dcm
	entries a
	getType ()Lnet/minecraft/world/level/storage/loot/functions/LootItemFunctionType; b
	run (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/storage/loot/LootContext;)Lnet/minecraft/world/item/ItemStack; a
	setContents ()Lnet/minecraft/world/level/storage/loot/functions/SetContainerContents$Builder; c
	validate (Lnet/minecraft/world/level/storage/loot/ValidationContext;)V a
net/minecraft/world/level/storage/loot/functions/SetContainerContents$Builder dcm$a
	entries a
	build ()Lnet/minecraft/world/level/storage/loot/functions/LootItemFunction; b
	getThis ()Lnet/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction$Builder; d
	getThis ()Lnet/minecraft/world/level/storage/loot/functions/SetContainerContents$Builder; a
	withEntry (Lnet/minecraft/world/level/storage/loot/entries/LootPoolEntryContainer$Builder;)Lnet/minecraft/world/level/storage/loot/functions/SetContainerContents$Builder; a
net/minecraft/world/level/storage/loot/functions/SetContainerContents$Serializer dcm$b
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition;)Lnet/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction; b
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition;)Lnet/minecraft/world/level/storage/loot/functions/SetContainerContents; a
	serialize (Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V a
	serialize (Lcom/google/gson/JsonObject;Lnet/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction;Lcom/google/gson/JsonSerializationContext;)V a
	serialize (Lcom/google/gson/JsonObject;Lnet/minecraft/world/level/storage/loot/functions/SetContainerContents;Lcom/google/gson/JsonSerializationContext;)V a
net/minecraft/world/level/storage/loot/functions/SetContainerLootTable dcn
	name a
	seed b
	getType ()Lnet/minecraft/world/level/storage/loot/functions/LootItemFunctionType; b
	run (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/storage/loot/LootContext;)Lnet/minecraft/world/item/ItemStack; a
	validate (Lnet/minecraft/world/level/storage/loot/ValidationContext;)V a
	withLootTable (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction$Builder; a
	withLootTable (Lnet/minecraft/resources/ResourceLocation;J)Lnet/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction$Builder; a
net/minecraft/world/level/storage/loot/functions/SetContainerLootTable$Serializer dcn$a
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition;)Lnet/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction; b
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition;)Lnet/minecraft/world/level/storage/loot/functions/SetContainerLootTable; a
	serialize (Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V a
	serialize (Lcom/google/gson/JsonObject;Lnet/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction;Lcom/google/gson/JsonSerializationContext;)V a
	serialize (Lcom/google/gson/JsonObject;Lnet/minecraft/world/level/storage/loot/functions/SetContainerLootTable;Lcom/google/gson/JsonSerializationContext;)V a
net/minecraft/world/level/storage/loot/functions/SetItemCountFunction dco
	value a
	getType ()Lnet/minecraft/world/level/storage/loot/functions/LootItemFunctionType; b
	run (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/storage/loot/LootContext;)Lnet/minecraft/world/item/ItemStack; a
	setCount (Lnet/minecraft/world/level/storage/loot/RandomIntGenerator;)Lnet/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction$Builder; a
net/minecraft/world/level/storage/loot/functions/SetItemCountFunction$Serializer dco$a
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition;)Lnet/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction; b
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition;)Lnet/minecraft/world/level/storage/loot/functions/SetItemCountFunction; a
	serialize (Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V a
	serialize (Lcom/google/gson/JsonObject;Lnet/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction;Lcom/google/gson/JsonSerializationContext;)V a
	serialize (Lcom/google/gson/JsonObject;Lnet/minecraft/world/level/storage/loot/functions/SetItemCountFunction;Lcom/google/gson/JsonSerializationContext;)V a
net/minecraft/world/level/storage/loot/functions/SetItemDamageFunction dcp
	LOGGER a
	damage b
	getType ()Lnet/minecraft/world/level/storage/loot/functions/LootItemFunctionType; b
	run (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/storage/loot/LootContext;)Lnet/minecraft/world/item/ItemStack; a
	setDamage (Lnet/minecraft/world/level/storage/loot/RandomValueBounds;)Lnet/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction$Builder; a
net/minecraft/world/level/storage/loot/functions/SetItemDamageFunction$Serializer dcp$a
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition;)Lnet/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction; b
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition;)Lnet/minecraft/world/level/storage/loot/functions/SetItemDamageFunction; a
	serialize (Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V a
	serialize (Lcom/google/gson/JsonObject;Lnet/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction;Lcom/google/gson/JsonSerializationContext;)V a
	serialize (Lcom/google/gson/JsonObject;Lnet/minecraft/world/level/storage/loot/functions/SetItemDamageFunction;Lcom/google/gson/JsonSerializationContext;)V a
net/minecraft/world/level/storage/loot/functions/SetLoreFunction dcq
	lore b
	replace a
	resolutionContext d
	getLoreTag (Lnet/minecraft/world/item/ItemStack;Z)Lnet/minecraft/nbt/ListTag; a
	getReferencedContextParams ()Ljava/util/Set; a
	getType ()Lnet/minecraft/world/level/storage/loot/functions/LootItemFunctionType; b
	run (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/storage/loot/LootContext;)Lnet/minecraft/world/item/ItemStack; a
	setLore ()Lnet/minecraft/world/level/storage/loot/functions/SetLoreFunction$Builder; c
net/minecraft/world/level/storage/loot/functions/SetLoreFunction$Builder dcq$a
	lore c
	replace a
	resolutionContext b
	addLine (Lnet/minecraft/network/chat/Component;)Lnet/minecraft/world/level/storage/loot/functions/SetLoreFunction$Builder; a
	build ()Lnet/minecraft/world/level/storage/loot/functions/LootItemFunction; b
	getThis ()Lnet/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction$Builder; d
	getThis ()Lnet/minecraft/world/level/storage/loot/functions/SetLoreFunction$Builder; a
	setReplace (Z)Lnet/minecraft/world/level/storage/loot/functions/SetLoreFunction$Builder; a
	setResolutionContext (Lnet/minecraft/world/level/storage/loot/LootContext$EntityTarget;)Lnet/minecraft/world/level/storage/loot/functions/SetLoreFunction$Builder; a
net/minecraft/world/level/storage/loot/functions/SetLoreFunction$Serializer dcq$b
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition;)Lnet/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction; b
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition;)Lnet/minecraft/world/level/storage/loot/functions/SetLoreFunction; a
	serialize (Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V a
	serialize (Lcom/google/gson/JsonObject;Lnet/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction;Lcom/google/gson/JsonSerializationContext;)V a
	serialize (Lcom/google/gson/JsonObject;Lnet/minecraft/world/level/storage/loot/functions/SetLoreFunction;Lcom/google/gson/JsonSerializationContext;)V a
net/minecraft/world/level/storage/loot/functions/SetNameFunction dcr
	LOGGER a
	name b
	resolutionContext d
	createResolver (Lnet/minecraft/world/level/storage/loot/LootContext;Lnet/minecraft/world/level/storage/loot/LootContext$EntityTarget;)Ljava/util/function/UnaryOperator; a
	getReferencedContextParams ()Ljava/util/Set; a
	getType ()Lnet/minecraft/world/level/storage/loot/functions/LootItemFunctionType; b
	run (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/storage/loot/LootContext;)Lnet/minecraft/world/item/ItemStack; a
	setName (Lnet/minecraft/network/chat/Component;)Lnet/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction$Builder; a
	setName (Lnet/minecraft/network/chat/Component;Lnet/minecraft/world/level/storage/loot/LootContext$EntityTarget;)Lnet/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction$Builder; a
net/minecraft/world/level/storage/loot/functions/SetNameFunction$Serializer dcr$a
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition;)Lnet/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction; b
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition;)Lnet/minecraft/world/level/storage/loot/functions/SetNameFunction; a
	serialize (Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V a
	serialize (Lcom/google/gson/JsonObject;Lnet/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction;Lcom/google/gson/JsonSerializationContext;)V a
	serialize (Lcom/google/gson/JsonObject;Lnet/minecraft/world/level/storage/loot/functions/SetNameFunction;Lcom/google/gson/JsonSerializationContext;)V a
net/minecraft/world/level/storage/loot/functions/SetNbtFunction dcs
	tag a
	getType ()Lnet/minecraft/world/level/storage/loot/functions/LootItemFunctionType; b
	run (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/storage/loot/LootContext;)Lnet/minecraft/world/item/ItemStack; a
	setTag (Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction$Builder; a
net/minecraft/world/level/storage/loot/functions/SetNbtFunction$Serializer dcs$a
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition;)Lnet/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction; b
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition;)Lnet/minecraft/world/level/storage/loot/functions/SetNbtFunction; a
	serialize (Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V a
	serialize (Lcom/google/gson/JsonObject;Lnet/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction;Lcom/google/gson/JsonSerializationContext;)V a
	serialize (Lcom/google/gson/JsonObject;Lnet/minecraft/world/level/storage/loot/functions/SetNbtFunction;Lcom/google/gson/JsonSerializationContext;)V a
net/minecraft/world/level/storage/loot/functions/SetStewEffectFunction dct
	effectDurationMap a
	getType ()Lnet/minecraft/world/level/storage/loot/functions/LootItemFunctionType; b
	run (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/storage/loot/LootContext;)Lnet/minecraft/world/item/ItemStack; a
	stewEffect ()Lnet/minecraft/world/level/storage/loot/functions/SetStewEffectFunction$Builder; c
net/minecraft/world/level/storage/loot/functions/SetStewEffectFunction$Builder dct$a
	effectDurationMap a
	build ()Lnet/minecraft/world/level/storage/loot/functions/LootItemFunction; b
	getThis ()Lnet/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction$Builder; d
	getThis ()Lnet/minecraft/world/level/storage/loot/functions/SetStewEffectFunction$Builder; a
	withEffect (Lnet/minecraft/world/effect/MobEffect;Lnet/minecraft/world/level/storage/loot/RandomValueBounds;)Lnet/minecraft/world/level/storage/loot/functions/SetStewEffectFunction$Builder; a
net/minecraft/world/level/storage/loot/functions/SetStewEffectFunction$Serializer dct$b
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition;)Lnet/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction; b
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition;)Lnet/minecraft/world/level/storage/loot/functions/SetStewEffectFunction; a
	serialize (Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V a
	serialize (Lcom/google/gson/JsonObject;Lnet/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction;Lcom/google/gson/JsonSerializationContext;)V a
	serialize (Lcom/google/gson/JsonObject;Lnet/minecraft/world/level/storage/loot/functions/SetStewEffectFunction;Lcom/google/gson/JsonSerializationContext;)V a
net/minecraft/world/level/storage/loot/functions/SmeltItemFunction dcu
	LOGGER a
	getType ()Lnet/minecraft/world/level/storage/loot/functions/LootItemFunctionType; b
	run (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/storage/loot/LootContext;)Lnet/minecraft/world/item/ItemStack; a
	smelted ()Lnet/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction$Builder; c
net/minecraft/world/level/storage/loot/functions/SmeltItemFunction$Serializer dcu$a
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition;)Lnet/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction; b
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition;)Lnet/minecraft/world/level/storage/loot/functions/SmeltItemFunction; a
net/minecraft/world/level/storage/loot/parameters/LootContextParam dcx
	name a
	getName ()Lnet/minecraft/resources/ResourceLocation; a
net/minecraft/world/level/storage/loot/parameters/LootContextParamSet dcy
	all b
	required a
	builder ()Lnet/minecraft/world/level/storage/loot/parameters/LootContextParamSet$Builder; c
	getAllowed ()Ljava/util/Set; b
	getRequired ()Ljava/util/Set; a
	isAllowed (Lnet/minecraft/world/level/storage/loot/parameters/LootContextParam;)Z a
	validateUser (Lnet/minecraft/world/level/storage/loot/ValidationContext;Lnet/minecraft/world/level/storage/loot/LootContextUser;)V a
net/minecraft/world/level/storage/loot/parameters/LootContextParamSet$Builder dcy$a
	optional b
	required a
	build ()Lnet/minecraft/world/level/storage/loot/parameters/LootContextParamSet; a
	optional (Lnet/minecraft/world/level/storage/loot/parameters/LootContextParam;)Lnet/minecraft/world/level/storage/loot/parameters/LootContextParamSet$Builder; b
	required (Lnet/minecraft/world/level/storage/loot/parameters/LootContextParam;)Lnet/minecraft/world/level/storage/loot/parameters/LootContextParamSet$Builder; a
net/minecraft/world/level/storage/loot/parameters/LootContextParamSets dcz
	ADVANCEMENT_ENTITY j
	ADVANCEMENT_REWARD i
	ALL_PARAMS k
	BLOCK l
	CHEST b
	COMMAND c
	EMPTY a
	ENTITY f
	FISHING e
	GIFT g
	PIGLIN_BARTER h
	REGISTRY m
	SELECTOR d
	get (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/world/level/storage/loot/parameters/LootContextParamSet; a
	getKey (Lnet/minecraft/world/level/storage/loot/parameters/LootContextParamSet;)Lnet/minecraft/resources/ResourceLocation; a
	register (Ljava/lang/String;Ljava/util/function/Consumer;)Lnet/minecraft/world/level/storage/loot/parameters/LootContextParamSet; a
net/minecraft/world/level/storage/loot/parameters/LootContextParams dda
	BLOCK_ENTITY i
	BLOCK_POS f
	BLOCK_STATE h
	DAMAGE_SOURCE c
	DIRECT_KILLER_ENTITY e
	EXPLOSION_RADIUS k
	KILLER_ENTITY d
	LAST_DAMAGE_PLAYER b
	ORIGIN g
	THIS_ENTITY a
	TOOL j
	create (Ljava/lang/String;)Lnet/minecraft/world/level/storage/loot/parameters/LootContextParam; a
net/minecraft/world/level/storage/loot/predicates/AlternativeLootItemCondition ddc
	composedPredicate b
	terms a
	alternative ([Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition$Builder;)Lnet/minecraft/world/level/storage/loot/predicates/AlternativeLootItemCondition$Builder; a
	getType ()Lnet/minecraft/world/level/storage/loot/predicates/LootItemConditionType; b
	test (Lnet/minecraft/world/level/storage/loot/LootContext;)Z a
	validate (Lnet/minecraft/world/level/storage/loot/ValidationContext;)V a
net/minecraft/world/level/storage/loot/predicates/AlternativeLootItemCondition$Builder ddc$a
	terms a
	or (Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition$Builder;)Lnet/minecraft/world/level/storage/loot/predicates/AlternativeLootItemCondition$Builder; a
net/minecraft/world/level/storage/loot/predicates/AlternativeLootItemCondition$Serializer ddc$b
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Ljava/lang/Object; a
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Lnet/minecraft/world/level/storage/loot/predicates/AlternativeLootItemCondition; b
	serialize (Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V a
	serialize (Lcom/google/gson/JsonObject;Lnet/minecraft/world/level/storage/loot/predicates/AlternativeLootItemCondition;Lcom/google/gson/JsonSerializationContext;)V a
net/minecraft/world/level/storage/loot/predicates/BonusLevelTableCondition ddd
	enchantment a
	values b
	bonusLevelFlatChance (Lnet/minecraft/world/item/enchantment/Enchantment;[F)Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition$Builder; a
	getReferencedContextParams ()Ljava/util/Set; a
	getType ()Lnet/minecraft/world/level/storage/loot/predicates/LootItemConditionType; b
	test (Lnet/minecraft/world/level/storage/loot/LootContext;)Z a
net/minecraft/world/level/storage/loot/predicates/BonusLevelTableCondition$Serializer ddd$a
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Ljava/lang/Object; a
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Lnet/minecraft/world/level/storage/loot/predicates/BonusLevelTableCondition; b
	serialize (Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V a
	serialize (Lcom/google/gson/JsonObject;Lnet/minecraft/world/level/storage/loot/predicates/BonusLevelTableCondition;Lcom/google/gson/JsonSerializationContext;)V a
net/minecraft/world/level/storage/loot/predicates/ConditionReference dde
	LOGGER a
	name b
	conditionReference (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition$Builder; a
	getType ()Lnet/minecraft/world/level/storage/loot/predicates/LootItemConditionType; b
	test (Lnet/minecraft/world/level/storage/loot/LootContext;)Z a
	validate (Lnet/minecraft/world/level/storage/loot/ValidationContext;)V a
net/minecraft/world/level/storage/loot/predicates/ConditionReference$Serializer dde$a
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Ljava/lang/Object; a
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Lnet/minecraft/world/level/storage/loot/predicates/ConditionReference; b
	serialize (Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V a
	serialize (Lcom/google/gson/JsonObject;Lnet/minecraft/world/level/storage/loot/predicates/ConditionReference;Lcom/google/gson/JsonSerializationContext;)V a
net/minecraft/world/level/storage/loot/predicates/ConditionUserBuilder ddf
	unwrap ()Ljava/lang/Object; c
	when (Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition$Builder;)Ljava/lang/Object; b
net/minecraft/world/level/storage/loot/predicates/DamageSourceCondition ddg
	predicate a
	getReferencedContextParams ()Ljava/util/Set; a
	getType ()Lnet/minecraft/world/level/storage/loot/predicates/LootItemConditionType; b
	hasDamageSource (Lnet/minecraft/advancements/critereon/DamageSourcePredicate$Builder;)Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition$Builder; a
	test (Lnet/minecraft/world/level/storage/loot/LootContext;)Z a
net/minecraft/world/level/storage/loot/predicates/DamageSourceCondition$Serializer ddg$a
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Ljava/lang/Object; a
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Lnet/minecraft/world/level/storage/loot/predicates/DamageSourceCondition; b
	serialize (Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V a
	serialize (Lcom/google/gson/JsonObject;Lnet/minecraft/world/level/storage/loot/predicates/DamageSourceCondition;Lcom/google/gson/JsonSerializationContext;)V a
net/minecraft/world/level/storage/loot/predicates/EntityHasScoreCondition ddh
	entityTarget b
	scores a
	getReferencedContextParams ()Ljava/util/Set; a
	getType ()Lnet/minecraft/world/level/storage/loot/predicates/LootItemConditionType; b
	hasScore (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/scores/Scoreboard;Ljava/lang/String;Lnet/minecraft/world/level/storage/loot/RandomValueBounds;)Z a
	hasScores (Lnet/minecraft/world/level/storage/loot/LootContext$EntityTarget;)Lnet/minecraft/world/level/storage/loot/predicates/EntityHasScoreCondition$Builder; a
	test (Lnet/minecraft/world/level/storage/loot/LootContext;)Z a
net/minecraft/world/level/storage/loot/predicates/EntityHasScoreCondition$Builder ddh$a
	entityTarget b
	scores a
	withScore (Ljava/lang/String;Lnet/minecraft/world/level/storage/loot/RandomValueBounds;)Lnet/minecraft/world/level/storage/loot/predicates/EntityHasScoreCondition$Builder; a
net/minecraft/world/level/storage/loot/predicates/EntityHasScoreCondition$Serializer ddh$b
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Ljava/lang/Object; a
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Lnet/minecraft/world/level/storage/loot/predicates/EntityHasScoreCondition; b
	serialize (Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V a
	serialize (Lcom/google/gson/JsonObject;Lnet/minecraft/world/level/storage/loot/predicates/EntityHasScoreCondition;Lcom/google/gson/JsonSerializationContext;)V a
net/minecraft/world/level/storage/loot/predicates/ExplosionCondition ddi
	INSTANCE a
	getReferencedContextParams ()Ljava/util/Set; a
	getType ()Lnet/minecraft/world/level/storage/loot/predicates/LootItemConditionType; b
	survivesExplosion ()Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition$Builder; c
	test (Lnet/minecraft/world/level/storage/loot/LootContext;)Z a
net/minecraft/world/level/storage/loot/predicates/ExplosionCondition$Serializer ddi$a
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Ljava/lang/Object; a
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Lnet/minecraft/world/level/storage/loot/predicates/ExplosionCondition; b
	serialize (Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V a
	serialize (Lcom/google/gson/JsonObject;Lnet/minecraft/world/level/storage/loot/predicates/ExplosionCondition;Lcom/google/gson/JsonSerializationContext;)V a
net/minecraft/world/level/storage/loot/predicates/InvertedLootItemCondition ddj
	term a
	getReferencedContextParams ()Ljava/util/Set; a
	getType ()Lnet/minecraft/world/level/storage/loot/predicates/LootItemConditionType; b
	invert (Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition$Builder;)Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition$Builder; a
	test (Lnet/minecraft/world/level/storage/loot/LootContext;)Z a
	validate (Lnet/minecraft/world/level/storage/loot/ValidationContext;)V a
net/minecraft/world/level/storage/loot/predicates/InvertedLootItemCondition$Serializer ddj$a
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Ljava/lang/Object; a
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Lnet/minecraft/world/level/storage/loot/predicates/InvertedLootItemCondition; b
	serialize (Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V a
	serialize (Lcom/google/gson/JsonObject;Lnet/minecraft/world/level/storage/loot/predicates/InvertedLootItemCondition;Lcom/google/gson/JsonSerializationContext;)V a
net/minecraft/world/level/storage/loot/predicates/LocationCheck ddk
	offset b
	predicate a
	checkLocation (Lnet/minecraft/advancements/critereon/LocationPredicate$Builder;)Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition$Builder; a
	checkLocation (Lnet/minecraft/advancements/critereon/LocationPredicate$Builder;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition$Builder; a
	getType ()Lnet/minecraft/world/level/storage/loot/predicates/LootItemConditionType; b
	test (Lnet/minecraft/world/level/storage/loot/LootContext;)Z a
net/minecraft/world/level/storage/loot/predicates/LocationCheck$Serializer ddk$a
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Ljava/lang/Object; a
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Lnet/minecraft/world/level/storage/loot/predicates/LocationCheck; b
	serialize (Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V a
	serialize (Lcom/google/gson/JsonObject;Lnet/minecraft/world/level/storage/loot/predicates/LocationCheck;Lcom/google/gson/JsonSerializationContext;)V a
net/minecraft/world/level/storage/loot/predicates/LootItemBlockStatePropertyCondition ddl
	block a
	properties b
	getReferencedContextParams ()Ljava/util/Set; a
	getType ()Lnet/minecraft/world/level/storage/loot/predicates/LootItemConditionType; b
	hasBlockStateProperties (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/world/level/storage/loot/predicates/LootItemBlockStatePropertyCondition$Builder; a
	test (Lnet/minecraft/world/level/storage/loot/LootContext;)Z a
net/minecraft/world/level/storage/loot/predicates/LootItemBlockStatePropertyCondition$Builder ddl$a
	block a
	properties b
	setProperties (Lnet/minecraft/advancements/critereon/StatePropertiesPredicate$Builder;)Lnet/minecraft/world/level/storage/loot/predicates/LootItemBlockStatePropertyCondition$Builder; a
net/minecraft/world/level/storage/loot/predicates/LootItemBlockStatePropertyCondition$Serializer ddl$b
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Ljava/lang/Object; a
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Lnet/minecraft/world/level/storage/loot/predicates/LootItemBlockStatePropertyCondition; b
	serialize (Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V a
	serialize (Lcom/google/gson/JsonObject;Lnet/minecraft/world/level/storage/loot/predicates/LootItemBlockStatePropertyCondition;Lcom/google/gson/JsonSerializationContext;)V a
net/minecraft/world/level/storage/loot/predicates/LootItemCondition ddm
	getType ()Lnet/minecraft/world/level/storage/loot/predicates/LootItemConditionType; b
net/minecraft/world/level/storage/loot/predicates/LootItemCondition$Builder ddm$a
	invert ()Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition$Builder; a
	or (Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition$Builder;)Lnet/minecraft/world/level/storage/loot/predicates/AlternativeLootItemCondition$Builder; a
net/minecraft/world/level/storage/loot/predicates/LootItemConditionType ddn
net/minecraft/world/level/storage/loot/predicates/LootItemConditions ddo
	ALTERNATIVE b
	BLOCK_STATE_PROPERTY h
	DAMAGE_SOURCE_PROPERTIES l
	ENTITY_PROPERTIES e
	ENTITY_SCORES g
	INVERTED a
	KILLED_BY_PLAYER f
	LOCATION_CHECK m
	MATCH_TOOL i
	RANDOM_CHANCE c
	RANDOM_CHANCE_WITH_LOOTING d
	REFERENCE o
	SURVIVES_EXPLOSION k
	TABLE_BONUS j
	TIME_CHECK p
	WEATHER_CHECK n
	andConditions ([Ljava/util/function/Predicate;)Ljava/util/function/Predicate; a
	createGsonAdapter ()Ljava/lang/Object; a
	orConditions ([Ljava/util/function/Predicate;)Ljava/util/function/Predicate; b
	register (Ljava/lang/String;Lnet/minecraft/world/level/storage/loot/Serializer;)Lnet/minecraft/world/level/storage/loot/predicates/LootItemConditionType; a
net/minecraft/world/level/storage/loot/predicates/LootItemEntityPropertyCondition ddp
	entityTarget b
	predicate a
	entityPresent (Lnet/minecraft/world/level/storage/loot/LootContext$EntityTarget;)Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition$Builder; a
	getReferencedContextParams ()Ljava/util/Set; a
	getType ()Lnet/minecraft/world/level/storage/loot/predicates/LootItemConditionType; b
	hasProperties (Lnet/minecraft/world/level/storage/loot/LootContext$EntityTarget;Lnet/minecraft/advancements/critereon/EntityPredicate$Builder;)Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition$Builder; a
	hasProperties (Lnet/minecraft/world/level/storage/loot/LootContext$EntityTarget;Lnet/minecraft/advancements/critereon/EntityPredicate;)Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition$Builder; a
	test (Lnet/minecraft/world/level/storage/loot/LootContext;)Z a
net/minecraft/world/level/storage/loot/predicates/LootItemEntityPropertyCondition$Serializer ddp$a
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Ljava/lang/Object; a
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Lnet/minecraft/world/level/storage/loot/predicates/LootItemEntityPropertyCondition; b
	serialize (Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V a
	serialize (Lcom/google/gson/JsonObject;Lnet/minecraft/world/level/storage/loot/predicates/LootItemEntityPropertyCondition;Lcom/google/gson/JsonSerializationContext;)V a
net/minecraft/world/level/storage/loot/predicates/LootItemKilledByPlayerCondition ddq
	INSTANCE a
	getReferencedContextParams ()Ljava/util/Set; a
	getType ()Lnet/minecraft/world/level/storage/loot/predicates/LootItemConditionType; b
	killedByPlayer ()Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition$Builder; c
	test (Lnet/minecraft/world/level/storage/loot/LootContext;)Z a
net/minecraft/world/level/storage/loot/predicates/LootItemKilledByPlayerCondition$Serializer ddq$a
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Ljava/lang/Object; a
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Lnet/minecraft/world/level/storage/loot/predicates/LootItemKilledByPlayerCondition; b
	serialize (Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V a
	serialize (Lcom/google/gson/JsonObject;Lnet/minecraft/world/level/storage/loot/predicates/LootItemKilledByPlayerCondition;Lcom/google/gson/JsonSerializationContext;)V a
net/minecraft/world/level/storage/loot/predicates/LootItemRandomChanceCondition ddr
	probability a
	getType ()Lnet/minecraft/world/level/storage/loot/predicates/LootItemConditionType; b
	randomChance (F)Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition$Builder; a
	test (Lnet/minecraft/world/level/storage/loot/LootContext;)Z a
net/minecraft/world/level/storage/loot/predicates/LootItemRandomChanceCondition$Serializer ddr$a
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Ljava/lang/Object; a
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Lnet/minecraft/world/level/storage/loot/predicates/LootItemRandomChanceCondition; b
	serialize (Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V a
	serialize (Lcom/google/gson/JsonObject;Lnet/minecraft/world/level/storage/loot/predicates/LootItemRandomChanceCondition;Lcom/google/gson/JsonSerializationContext;)V a
net/minecraft/world/level/storage/loot/predicates/LootItemRandomChanceWithLootingCondition dds
	lootingMultiplier b
	percent a
	getReferencedContextParams ()Ljava/util/Set; a
	getType ()Lnet/minecraft/world/level/storage/loot/predicates/LootItemConditionType; b
	randomChanceAndLootingBoost (FF)Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition$Builder; a
	test (Lnet/minecraft/world/level/storage/loot/LootContext;)Z a
net/minecraft/world/level/storage/loot/predicates/LootItemRandomChanceWithLootingCondition$Serializer dds$a
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Ljava/lang/Object; a
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Lnet/minecraft/world/level/storage/loot/predicates/LootItemRandomChanceWithLootingCondition; b
	serialize (Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V a
	serialize (Lcom/google/gson/JsonObject;Lnet/minecraft/world/level/storage/loot/predicates/LootItemRandomChanceWithLootingCondition;Lcom/google/gson/JsonSerializationContext;)V a
net/minecraft/world/level/storage/loot/predicates/MatchTool ddt
	predicate a
	getReferencedContextParams ()Ljava/util/Set; a
	getType ()Lnet/minecraft/world/level/storage/loot/predicates/LootItemConditionType; b
	test (Lnet/minecraft/world/level/storage/loot/LootContext;)Z a
	toolMatches (Lnet/minecraft/advancements/critereon/ItemPredicate$Builder;)Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition$Builder; a
net/minecraft/world/level/storage/loot/predicates/MatchTool$Serializer ddt$a
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Ljava/lang/Object; a
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Lnet/minecraft/world/level/storage/loot/predicates/MatchTool; b
	serialize (Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V a
	serialize (Lcom/google/gson/JsonObject;Lnet/minecraft/world/level/storage/loot/predicates/MatchTool;Lcom/google/gson/JsonSerializationContext;)V a
net/minecraft/world/level/storage/loot/predicates/TimeCheck ddu
	period a
	value b
	getType ()Lnet/minecraft/world/level/storage/loot/predicates/LootItemConditionType; b
	test (Lnet/minecraft/world/level/storage/loot/LootContext;)Z a
	time (Lnet/minecraft/world/level/storage/loot/RandomValueBounds;)Lnet/minecraft/world/level/storage/loot/predicates/TimeCheck$Builder; a
net/minecraft/world/level/storage/loot/predicates/TimeCheck$Builder ddu$a
	period a
	value b
	build ()Lnet/minecraft/world/level/storage/loot/predicates/TimeCheck; b
	setPeriod (J)Lnet/minecraft/world/level/storage/loot/predicates/TimeCheck$Builder; a
net/minecraft/world/level/storage/loot/predicates/TimeCheck$Serializer ddu$b
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Ljava/lang/Object; a
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Lnet/minecraft/world/level/storage/loot/predicates/TimeCheck; b
	serialize (Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V a
	serialize (Lcom/google/gson/JsonObject;Lnet/minecraft/world/level/storage/loot/predicates/TimeCheck;Lcom/google/gson/JsonSerializationContext;)V a
net/minecraft/world/level/storage/loot/predicates/WeatherCheck ddv
	isRaining a
	isThundering b
	getType ()Lnet/minecraft/world/level/storage/loot/predicates/LootItemConditionType; b
	test (Lnet/minecraft/world/level/storage/loot/LootContext;)Z a
	weather ()Lnet/minecraft/world/level/storage/loot/predicates/WeatherCheck$Builder; c
net/minecraft/world/level/storage/loot/predicates/WeatherCheck$Builder ddv$a
	isRaining a
	isThundering b
	build ()Lnet/minecraft/world/level/storage/loot/predicates/WeatherCheck; b
	setRaining (Ljava/lang/Boolean;)Lnet/minecraft/world/level/storage/loot/predicates/WeatherCheck$Builder; a
	setThundering (Ljava/lang/Boolean;)Lnet/minecraft/world/level/storage/loot/predicates/WeatherCheck$Builder; b
net/minecraft/world/level/storage/loot/predicates/WeatherCheck$Serializer ddv$b
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Ljava/lang/Object; a
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Lnet/minecraft/world/level/storage/loot/predicates/WeatherCheck; b
	serialize (Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V a
	serialize (Lcom/google/gson/JsonObject;Lnet/minecraft/world/level/storage/loot/predicates/WeatherCheck;Lcom/google/gson/JsonSerializationContext;)V a
net/minecraft/world/level/timers/FunctionCallback ddz
	functionId a
	handle (Ljava/lang/Object;Lnet/minecraft/world/level/timers/TimerQueue;J)V a
	handle (Lnet/minecraft/server/MinecraftServer;Lnet/minecraft/world/level/timers/TimerQueue;J)V a
net/minecraft/world/level/timers/FunctionCallback$Serializer ddz$a
	deserialize (Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/world/level/timers/FunctionCallback; a
	deserialize (Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/world/level/timers/TimerCallback; b
	serialize (Lnet/minecraft/nbt/CompoundTag;Lnet/minecraft/world/level/timers/FunctionCallback;)V a
	serialize (Lnet/minecraft/nbt/CompoundTag;Lnet/minecraft/world/level/timers/TimerCallback;)V a
net/minecraft/world/level/timers/FunctionTagCallback dea
	tagId a
	handle (Ljava/lang/Object;Lnet/minecraft/world/level/timers/TimerQueue;J)V a
	handle (Lnet/minecraft/server/MinecraftServer;Lnet/minecraft/world/level/timers/TimerQueue;J)V a
net/minecraft/world/level/timers/FunctionTagCallback$Serializer dea$a
	deserialize (Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/world/level/timers/FunctionTagCallback; a
	deserialize (Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/world/level/timers/TimerCallback; b
	serialize (Lnet/minecraft/nbt/CompoundTag;Lnet/minecraft/world/level/timers/FunctionTagCallback;)V a
	serialize (Lnet/minecraft/nbt/CompoundTag;Lnet/minecraft/world/level/timers/TimerCallback;)V a
net/minecraft/world/level/timers/TimerCallback deb
	handle (Ljava/lang/Object;Lnet/minecraft/world/level/timers/TimerQueue;J)V a
net/minecraft/world/level/timers/TimerCallback$Serializer deb$a
	cls b
	id a
	deserialize (Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/world/level/timers/TimerCallback; b
	getCls ()Ljava/lang/Class; b
	getId ()Lnet/minecraft/resources/ResourceLocation; a
	serialize (Lnet/minecraft/nbt/CompoundTag;Lnet/minecraft/world/level/timers/TimerCallback;)V a
net/minecraft/world/level/timers/TimerCallbacks dec
	LOGGER b
	SERVER_CALLBACKS a
	classToSerializer d
	idToSerializer c
	deserialize (Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/world/level/timers/TimerCallback; a
	getSerializer (Ljava/lang/Class;)Lnet/minecraft/world/level/timers/TimerCallback$Serializer; a
	register (Lnet/minecraft/world/level/timers/TimerCallback$Serializer;)Lnet/minecraft/world/level/timers/TimerCallbacks; a
	serialize (Lnet/minecraft/world/level/timers/TimerCallback;)Lnet/minecraft/nbt/CompoundTag; a
net/minecraft/world/level/timers/TimerQueue ded
	LOGGER a
	callbacksRegistry b
	events e
	queue c
	sequentialId d
	createComparator ()Ljava/util/Comparator; c
	getEventsIds ()Ljava/util/Set; a
	loadEvent (Lnet/minecraft/nbt/CompoundTag;)V a
	remove (Ljava/lang/String;)I a
	schedule (Ljava/lang/String;JLnet/minecraft/world/level/timers/TimerCallback;)V a
	store ()Lnet/minecraft/nbt/ListTag; b
	storeEvent (Lnet/minecraft/world/level/timers/TimerQueue$Event;)Lnet/minecraft/nbt/CompoundTag; a
	tick (Ljava/lang/Object;J)V a
net/minecraft/world/level/timers/TimerQueue$Event ded$a
	callback d
	id c
	sequentialId b
	triggerTime a
net/minecraft/world/phys/AABB deg
	maxX d
	maxY e
	maxZ f
	minX a
	minY b
	minZ c
	clip (Ljava/lang/Iterable;Lnet/minecraft/world/phys/Vec3;Lnet/minecraft/world/phys/Vec3;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/phys/BlockHitResult; a
	clip (Lnet/minecraft/world/phys/Vec3;Lnet/minecraft/world/phys/Vec3;)Ljava/util/Optional; b
	clipPoint ([DLnet/minecraft/core/Direction;DDDDDDDDLnet/minecraft/core/Direction;DDD)Lnet/minecraft/core/Direction; a
	clipXCollide (Lnet/minecraft/world/phys/AABB;D)D a
	clipYCollide (Lnet/minecraft/world/phys/AABB;D)D b
	clipZCollide (Lnet/minecraft/world/phys/AABB;D)D c
	contains (DDD)Z e
	contains (Lnet/minecraft/world/phys/Vec3;)Z d
	contract (DDD)Lnet/minecraft/world/phys/AABB; a
	deflate (D)Lnet/minecraft/world/phys/AABB; h
	deflate (DDD)Lnet/minecraft/world/phys/AABB; f
	expandTowards (DDD)Lnet/minecraft/world/phys/AABB; b
	expandTowards (Lnet/minecraft/world/phys/Vec3;)Lnet/minecraft/world/phys/AABB; b
	getCenter ()Lnet/minecraft/world/phys/Vec3; f
	getDirection (Lnet/minecraft/world/phys/AABB;Lnet/minecraft/world/phys/Vec3;[DLnet/minecraft/core/Direction;DDD)Lnet/minecraft/core/Direction; a
	getSize ()D a
	getXsize ()D b
	getYsize ()D c
	getZsize ()D d
	hasNaN ()Z e
	inflate (D)Lnet/minecraft/world/phys/AABB; g
	inflate (DDD)Lnet/minecraft/world/phys/AABB; c
	intersect (Lnet/minecraft/world/phys/AABB;)Lnet/minecraft/world/phys/AABB; a
	intersects (DDDDDD)Z a
	intersects (Lnet/minecraft/world/phys/AABB;)Z c
	intersects (Lnet/minecraft/world/phys/Vec3;Lnet/minecraft/world/phys/Vec3;)Z a
	max (Lnet/minecraft/core/Direction$Axis;)D b
	min (Lnet/minecraft/core/Direction$Axis;)D a
	minmax (Ljava/lang/Iterable;)Lnet/minecraft/world/phys/AABB; a
	minmax (Lnet/minecraft/world/phys/AABB;)Lnet/minecraft/world/phys/AABB; b
	move (DDD)Lnet/minecraft/world/phys/AABB; d
	move (Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/phys/AABB; a
	move (Lnet/minecraft/world/phys/Vec3;)Lnet/minecraft/world/phys/AABB; c
	of (Lnet/minecraft/world/level/levelgen/structure/BoundingBox;)Lnet/minecraft/world/phys/AABB; a
	ofSize (DDD)Lnet/minecraft/world/phys/AABB; g
	setMaxX (D)Lnet/minecraft/world/phys/AABB; d
	setMaxY (D)Lnet/minecraft/world/phys/AABB; e
	setMaxZ (D)Lnet/minecraft/world/phys/AABB; f
	setMinX (D)Lnet/minecraft/world/phys/AABB; a
	setMinY (D)Lnet/minecraft/world/phys/AABB; b
	setMinZ (D)Lnet/minecraft/world/phys/AABB; c
	unitCubeFromLowerCorner (Lnet/minecraft/world/phys/Vec3;)Lnet/minecraft/world/phys/AABB; a
net/minecraft/world/phys/BlockHitResult deh
	blockPos c
	direction b
	inside e
	miss d
	getBlockPos ()Lnet/minecraft/core/BlockPos; a
	getDirection ()Lnet/minecraft/core/Direction; b
	getType ()Lnet/minecraft/world/phys/HitResult$Type; c
	isInside ()Z d
	miss (Lnet/minecraft/world/phys/Vec3;Lnet/minecraft/core/Direction;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/phys/BlockHitResult; a
	withDirection (Lnet/minecraft/core/Direction;)Lnet/minecraft/world/phys/BlockHitResult; a
	withPosition (Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/phys/BlockHitResult; a
net/minecraft/world/phys/EntityHitResult dei
	entity b
	getEntity ()Lnet/minecraft/world/entity/Entity; a
	getType ()Lnet/minecraft/world/phys/HitResult$Type; c
net/minecraft/world/phys/HitResult dej
	location a
	distanceTo (Lnet/minecraft/world/entity/Entity;)D a
	getLocation ()Lnet/minecraft/world/phys/Vec3; e
	getType ()Lnet/minecraft/world/phys/HitResult$Type; c
net/minecraft/world/phys/HitResult$Type dej$a
	$VALUES d
	BLOCK b
	ENTITY c
	MISS a
net/minecraft/world/phys/PosAndRot dek
	pos a
	xRot b
	yRot c
	pos ()Lnet/minecraft/world/phys/Vec3; a
	xRot ()F b
	yRot ()F c
net/minecraft/world/phys/Vec2 del
	MAX g
	MIN h
	NEG_UNIT_X d
	NEG_UNIT_Y f
	ONE b
	UNIT_X c
	UNIT_Y e
	ZERO a
	x i
	y j
	add (F)Lnet/minecraft/world/phys/Vec2; b
	add (Lnet/minecraft/world/phys/Vec2;)Lnet/minecraft/world/phys/Vec2; b
	distanceToSqr (Lnet/minecraft/world/phys/Vec2;)F d
	dot (Lnet/minecraft/world/phys/Vec2;)F a
	equals (Lnet/minecraft/world/phys/Vec2;)Z c
	length ()F b
	lengthSquared ()F c
	negated ()Lnet/minecraft/world/phys/Vec2; d
	normalized ()Lnet/minecraft/world/phys/Vec2; a
	scale (F)Lnet/minecraft/world/phys/Vec2; a
net/minecraft/world/phys/Vec3 dem
	ZERO a
	x b
	y c
	z d
	add (DDD)Lnet/minecraft/world/phys/Vec3; b
	add (Lnet/minecraft/world/phys/Vec3;)Lnet/minecraft/world/phys/Vec3; e
	align (Ljava/util/EnumSet;)Lnet/minecraft/world/phys/Vec3; a
	atBottomCenterOf (Lnet/minecraft/core/Vec3i;)Lnet/minecraft/world/phys/Vec3; c
	atCenterOf (Lnet/minecraft/core/Vec3i;)Lnet/minecraft/world/phys/Vec3; a
	atLowerCornerOf (Lnet/minecraft/core/Vec3i;)Lnet/minecraft/world/phys/Vec3; b
	closerThan (Lnet/minecraft/core/Position;D)Z a
	cross (Lnet/minecraft/world/phys/Vec3;)Lnet/minecraft/world/phys/Vec3; c
	directionFromRotation (FF)Lnet/minecraft/world/phys/Vec3; a
	directionFromRotation (Lnet/minecraft/world/phys/Vec2;)Lnet/minecraft/world/phys/Vec3; a
	distanceTo (Lnet/minecraft/world/phys/Vec3;)D f
	distanceToSqr (DDD)D c
	distanceToSqr (Lnet/minecraft/world/phys/Vec3;)D g
	dot (Lnet/minecraft/world/phys/Vec3;)D b
	fromRGB24 (I)Lnet/minecraft/world/phys/Vec3; a
	get (Lnet/minecraft/core/Direction$Axis;)D a
	length ()D f
	lengthSqr ()D g
	lerp (Lnet/minecraft/world/phys/Vec3;D)Lnet/minecraft/world/phys/Vec3; a
	multiply (DDD)Lnet/minecraft/world/phys/Vec3; d
	multiply (Lnet/minecraft/world/phys/Vec3;)Lnet/minecraft/world/phys/Vec3; h
	normalize ()Lnet/minecraft/world/phys/Vec3; d
	reverse ()Lnet/minecraft/world/phys/Vec3; e
	scale (D)Lnet/minecraft/world/phys/Vec3; a
	subtract (DDD)Lnet/minecraft/world/phys/Vec3; a
	subtract (Lnet/minecraft/world/phys/Vec3;)Lnet/minecraft/world/phys/Vec3; d
	upFromBottomCenterOf (Lnet/minecraft/core/Vec3i;D)Lnet/minecraft/world/phys/Vec3; a
	vectorTo (Lnet/minecraft/world/phys/Vec3;)Lnet/minecraft/world/phys/Vec3; a
	x ()D a
	xRot (F)Lnet/minecraft/world/phys/Vec3; a
	y ()D b
	yRot (F)Lnet/minecraft/world/phys/Vec3; b
	z ()D c
	zRot (F)Lnet/minecraft/world/phys/Vec3; c
net/minecraft/world/phys/shapes/ArrayVoxelShape deo
	xs b
	ys c
	zs d
	getCoords (Lnet/minecraft/core/Direction$Axis;)Lit/unimi/dsi/fastutil/doubles/DoubleList; a
net/minecraft/world/phys/shapes/BitSetDiscreteVoxelShape dep
	storage d
	xMax h
	xMin e
	yMax i
	yMin f
	zMax j
	zMin g
	firstFull (Lnet/minecraft/core/Direction$Axis;)I a
	getIndex (III)I a
	isEmpty ()Z a
	isFull (III)Z b
	isZStripFull (IIII)Z a
	join (Lnet/minecraft/world/phys/shapes/DiscreteVoxelShape;Lnet/minecraft/world/phys/shapes/DiscreteVoxelShape;Lnet/minecraft/world/phys/shapes/IndexMerger;Lnet/minecraft/world/phys/shapes/IndexMerger;Lnet/minecraft/world/phys/shapes/IndexMerger;Lnet/minecraft/world/phys/shapes/BooleanOp;)Lnet/minecraft/world/phys/shapes/BitSetDiscreteVoxelShape; a
	lastFull (Lnet/minecraft/core/Direction$Axis;)I b
	setFull (IIIZZ)V a
	setZStrip (IIIIZ)V a
net/minecraft/world/phys/shapes/BooleanOp deq
	AND i
	CAUSED_BY n
	CAUSES l
	FALSE a
	FIRST m
	NOT_AND h
	NOT_FIRST d
	NOT_OR b
	NOT_SAME g
	NOT_SECOND f
	ONLY_FIRST e
	ONLY_SECOND c
	OR o
	SAME j
	SECOND k
	TRUE p
net/minecraft/world/phys/shapes/CollisionContext der
	canStandOnFluid (Lnet/minecraft/world/level/material/FluidState;Lnet/minecraft/world/level/material/FlowingFluid;)Z a
	empty ()Lnet/minecraft/world/phys/shapes/CollisionContext; a
	isAbove (Lnet/minecraft/world/phys/shapes/VoxelShape;Lnet/minecraft/core/BlockPos;Z)Z a
	isDescending ()Z b
	isHoldingItem (Lnet/minecraft/world/item/Item;)Z a
	of (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/world/phys/shapes/CollisionContext; a
net/minecraft/world/phys/shapes/CubePointRange des
	parts a
net/minecraft/world/phys/shapes/CubeVoxelShape det
	findIndex (Lnet/minecraft/core/Direction$Axis;D)I a
	getCoords (Lnet/minecraft/core/Direction$Axis;)Lit/unimi/dsi/fastutil/doubles/DoubleList; a
net/minecraft/world/phys/shapes/DiscreteCubeMerger deu
	firstSize b
	gcd d
	result a
	secondSize c
	forMergedIndexes (Lnet/minecraft/world/phys/shapes/IndexMerger$IndexConsumer;)Z a
	getList ()Lit/unimi/dsi/fastutil/doubles/DoubleList; a
net/minecraft/world/phys/shapes/DiscreteVoxelShape dev
	AXIS_VALUES d
	xSize a
	ySize b
	zSize c
	firstFull (Lnet/minecraft/core/Direction$Axis;)I a
	firstFull (Lnet/minecraft/core/Direction$Axis;II)I a
	forAllAxisEdges (Lnet/minecraft/world/phys/shapes/DiscreteVoxelShape$IntLineConsumer;Lnet/minecraft/core/AxisCycle;Z)V a
	forAllAxisFaces (Lnet/minecraft/world/phys/shapes/DiscreteVoxelShape$IntFaceConsumer;Lnet/minecraft/core/AxisCycle;)V a
	forAllBoxes (Lnet/minecraft/world/phys/shapes/DiscreteVoxelShape$IntLineConsumer;Z)V b
	forAllEdges (Lnet/minecraft/world/phys/shapes/DiscreteVoxelShape$IntLineConsumer;Z)V a
	forAllFaces (Lnet/minecraft/world/phys/shapes/DiscreteVoxelShape$IntFaceConsumer;)V a
	getSize (Lnet/minecraft/core/Direction$Axis;)I c
	getXSize ()I b
	getYSize ()I c
	getZSize ()I d
	isEmpty ()Z a
	isFull (III)Z b
	isFull (Lnet/minecraft/core/AxisCycle;III)Z b
	isFullWide (III)Z c
	isFullWide (Lnet/minecraft/core/AxisCycle;III)Z a
	isXZRectangleFull (IIIII)Z a
	isZStripFull (IIII)Z a
	lastFull (Lnet/minecraft/core/Direction$Axis;)I b
	lastFull (Lnet/minecraft/core/Direction$Axis;II)I b
	setFull (IIIZZ)V a
	setZStrip (IIIIZ)V a
net/minecraft/world/phys/shapes/DiscreteVoxelShape$IntFaceConsumer dev$a
net/minecraft/world/phys/shapes/DiscreteVoxelShape$IntLineConsumer dev$b
net/minecraft/world/phys/shapes/EntityCollisionContext dew
	EMPTY a
	canStandOnFluid e
	descending b
	entityBottom c
	heldItem d
	canStandOnFluid (Lnet/minecraft/world/level/material/FluidState;Lnet/minecraft/world/level/material/FlowingFluid;)Z a
	isAbove (Lnet/minecraft/world/phys/shapes/VoxelShape;Lnet/minecraft/core/BlockPos;Z)Z a
	isDescending ()Z b
	isHoldingItem (Lnet/minecraft/world/item/Item;)Z a
net/minecraft/world/phys/shapes/IdenticalMerger dex
	coords a
	forMergedIndexes (Lnet/minecraft/world/phys/shapes/IndexMerger$IndexConsumer;)Z a
	getList ()Lit/unimi/dsi/fastutil/doubles/DoubleList; a
net/minecraft/world/phys/shapes/IndexMerger dey
	forMergedIndexes (Lnet/minecraft/world/phys/shapes/IndexMerger$IndexConsumer;)Z a
	getList ()Lit/unimi/dsi/fastutil/doubles/DoubleList; a
net/minecraft/world/phys/shapes/IndexMerger$IndexConsumer dey$a
net/minecraft/world/phys/shapes/IndirectMerger dez
	firstIndices b
	result a
	secondIndices c
	forMergedIndexes (Lnet/minecraft/world/phys/shapes/IndexMerger$IndexConsumer;)Z a
	getList ()Lit/unimi/dsi/fastutil/doubles/DoubleList; a
net/minecraft/world/phys/shapes/IntPointRange dfa
	origin b
	parts a
net/minecraft/world/phys/shapes/NonOverlappingMerger dfb
	lower a
	swap c
	upper b
	forMergedIndexes (Lnet/minecraft/world/phys/shapes/IndexMerger$IndexConsumer;)Z a
	forNonSwappedIndexes (Lnet/minecraft/world/phys/shapes/IndexMerger$IndexConsumer;)Z b
	getList ()Lit/unimi/dsi/fastutil/doubles/DoubleList; a
net/minecraft/world/phys/shapes/OffsetDoubleList dfc
	delegate a
	offset b
net/minecraft/world/phys/shapes/Shapes dfd
	BLOCK b
	EMPTY c
	INFINITY a
	block ()Lnet/minecraft/world/phys/shapes/VoxelShape; b
	blockOccudes (Lnet/minecraft/world/phys/shapes/VoxelShape;Lnet/minecraft/world/phys/shapes/VoxelShape;Lnet/minecraft/core/Direction;)Z a
	box (DDDDDD)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	collide (Lnet/minecraft/core/Direction$Axis;Lnet/minecraft/world/phys/AABB;Ljava/util/stream/Stream;D)D a
	collide (Lnet/minecraft/core/Direction$Axis;Lnet/minecraft/world/phys/AABB;Lnet/minecraft/world/level/LevelReader;DLnet/minecraft/world/phys/shapes/CollisionContext;Ljava/util/stream/Stream;)D a
	collide (Lnet/minecraft/world/phys/AABB;Lnet/minecraft/world/level/LevelReader;DLnet/minecraft/world/phys/shapes/CollisionContext;Lnet/minecraft/core/AxisCycle;Ljava/util/stream/Stream;)D a
	create (Lnet/minecraft/world/phys/AABB;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	createIndexMerger (ILit/unimi/dsi/fastutil/doubles/DoubleList;Lit/unimi/dsi/fastutil/doubles/DoubleList;ZZ)Lnet/minecraft/world/phys/shapes/IndexMerger; a
	empty ()Lnet/minecraft/world/phys/shapes/VoxelShape; a
	faceShapeOccludes (Lnet/minecraft/world/phys/shapes/VoxelShape;Lnet/minecraft/world/phys/shapes/VoxelShape;)Z b
	findBits (DD)I a
	getFaceShape (Lnet/minecraft/world/phys/shapes/VoxelShape;Lnet/minecraft/core/Direction;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	join (Lnet/minecraft/world/phys/shapes/VoxelShape;Lnet/minecraft/world/phys/shapes/VoxelShape;Lnet/minecraft/world/phys/shapes/BooleanOp;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	joinIsNotEmpty (Lnet/minecraft/world/phys/shapes/IndexMerger;Lnet/minecraft/world/phys/shapes/IndexMerger;Lnet/minecraft/world/phys/shapes/IndexMerger;Lnet/minecraft/world/phys/shapes/DiscreteVoxelShape;Lnet/minecraft/world/phys/shapes/DiscreteVoxelShape;Lnet/minecraft/world/phys/shapes/BooleanOp;)Z a
	joinIsNotEmpty (Lnet/minecraft/world/phys/shapes/VoxelShape;Lnet/minecraft/world/phys/shapes/VoxelShape;Lnet/minecraft/world/phys/shapes/BooleanOp;)Z c
	joinUnoptimized (Lnet/minecraft/world/phys/shapes/VoxelShape;Lnet/minecraft/world/phys/shapes/VoxelShape;Lnet/minecraft/world/phys/shapes/BooleanOp;)Lnet/minecraft/world/phys/shapes/VoxelShape; b
	lastC (DDD)I a
	lcm (II)J a
	mergedFaceOccludes (Lnet/minecraft/world/phys/shapes/VoxelShape;Lnet/minecraft/world/phys/shapes/VoxelShape;Lnet/minecraft/core/Direction;)Z b
	or (Lnet/minecraft/world/phys/shapes/VoxelShape;Lnet/minecraft/world/phys/shapes/VoxelShape;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	or (Lnet/minecraft/world/phys/shapes/VoxelShape;[Lnet/minecraft/world/phys/shapes/VoxelShape;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
net/minecraft/world/phys/shapes/Shapes$DoubleLineConsumer dfd$a
net/minecraft/world/phys/shapes/SliceShape dfe
	SLICE_COORDS d
	axis c
	delegate b
	getCoords (Lnet/minecraft/core/Direction$Axis;)Lit/unimi/dsi/fastutil/doubles/DoubleList; a
	makeSlice (Lnet/minecraft/world/phys/shapes/DiscreteVoxelShape;Lnet/minecraft/core/Direction$Axis;I)Lnet/minecraft/world/phys/shapes/DiscreteVoxelShape; a
net/minecraft/world/phys/shapes/SubShape dff
	endX h
	endY i
	endZ j
	parent d
	startX e
	startY f
	startZ g
	firstFull (Lnet/minecraft/core/Direction$Axis;)I a
	isFull (III)Z b
	lastFull (Lnet/minecraft/core/Direction$Axis;)I b
	setFull (IIIZZ)V a
net/minecraft/world/phys/shapes/VoxelShape dfg
	faces b
	shape a
	bounds ()Lnet/minecraft/world/phys/AABB; a
	calculateFace (Lnet/minecraft/core/Direction;)Lnet/minecraft/world/phys/shapes/VoxelShape; b
	clip (Lnet/minecraft/world/phys/Vec3;Lnet/minecraft/world/phys/Vec3;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/phys/BlockHitResult; a
	collide (Lnet/minecraft/core/Direction$Axis;Lnet/minecraft/world/phys/AABB;D)D a
	collideX (Lnet/minecraft/core/AxisCycle;Lnet/minecraft/world/phys/AABB;D)D a
	findIndex (Lnet/minecraft/core/Direction$Axis;D)I a
	forAllBoxes (Lnet/minecraft/world/phys/shapes/Shapes$DoubleLineConsumer;)V b
	forAllEdges (Lnet/minecraft/world/phys/shapes/Shapes$DoubleLineConsumer;)V a
	get (Lnet/minecraft/core/Direction$Axis;I)D a
	getCoords (Lnet/minecraft/core/Direction$Axis;)Lit/unimi/dsi/fastutil/doubles/DoubleList; a
	getFaceShape (Lnet/minecraft/core/Direction;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	isEmpty ()Z b
	isFullWide (DDD)Z b
	max (Lnet/minecraft/core/Direction$Axis;)D c
	max (Lnet/minecraft/core/Direction$Axis;DD)D b
	min (Lnet/minecraft/core/Direction$Axis;)D b
	min (Lnet/minecraft/core/Direction$Axis;DD)D a
	move (DDD)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	optimize ()Lnet/minecraft/world/phys/shapes/VoxelShape; c
	toAabbs ()Ljava/util/List; d
net/minecraft/world/phys/shapes/WorldRegionIndirectVoxelShape dfh
	x b
	y c
	z d
	getCoords (Lnet/minecraft/core/Direction$Axis;)Lit/unimi/dsi/fastutil/doubles/DoubleList; a
net/minecraft/world/scores/Objective dfj
	criteria c
	displayName d
	formattedDisplayName e
	name b
	renderType f
	scoreboard a
	createFormattedDisplayName ()Lnet/minecraft/network/chat/Component; g
	getCriteria ()Lnet/minecraft/world/scores/criteria/ObjectiveCriteria; c
	getDisplayName ()Lnet/minecraft/network/chat/Component; d
	getFormattedDisplayName ()Lnet/minecraft/network/chat/Component; e
	getName ()Ljava/lang/String; b
	getRenderType ()Lnet/minecraft/world/scores/criteria/ObjectiveCriteria$RenderType; f
	getScoreboard ()Lnet/minecraft/world/scores/Scoreboard; a
	setDisplayName (Lnet/minecraft/network/chat/Component;)V a
	setRenderType (Lnet/minecraft/world/scores/criteria/ObjectiveCriteria$RenderType;)V a
net/minecraft/world/scores/PlayerTeam dfk
	allowFriendlyFire g
	collisionRule l
	color k
	deathMessageVisibility j
	displayName d
	displayNameStyle m
	name b
	nameTagVisibility i
	playerPrefix e
	playerSuffix f
	players c
	scoreboard a
	seeFriendlyInvisibles h
	canSeeFriendlyInvisibles ()Z i
	formatNameForTeam (Lnet/minecraft/world/scores/Team;Lnet/minecraft/network/chat/Component;)Lnet/minecraft/network/chat/MutableComponent; a
	getCollisionRule ()Lnet/minecraft/world/scores/Team$CollisionRule; l
	getColor ()Lnet/minecraft/ChatFormatting; n
	getDeathMessageVisibility ()Lnet/minecraft/world/scores/Team$Visibility; k
	getDisplayName ()Lnet/minecraft/network/chat/Component; c
	getFormattedDisplayName ()Lnet/minecraft/network/chat/MutableComponent; d
	getFormattedName (Lnet/minecraft/network/chat/Component;)Lnet/minecraft/network/chat/MutableComponent; d
	getName ()Ljava/lang/String; b
	getNameTagVisibility ()Lnet/minecraft/world/scores/Team$Visibility; j
	getPlayerPrefix ()Lnet/minecraft/network/chat/Component; e
	getPlayerSuffix ()Lnet/minecraft/network/chat/Component; f
	getPlayers ()Ljava/util/Collection; g
	getScoreboard ()Lnet/minecraft/world/scores/Scoreboard; a
	isAllowFriendlyFire ()Z h
	packOptions ()I m
	setAllowFriendlyFire (Z)V a
	setCollisionRule (Lnet/minecraft/world/scores/Team$CollisionRule;)V a
	setColor (Lnet/minecraft/ChatFormatting;)V a
	setDeathMessageVisibility (Lnet/minecraft/world/scores/Team$Visibility;)V b
	setDisplayName (Lnet/minecraft/network/chat/Component;)V a
	setNameTagVisibility (Lnet/minecraft/world/scores/Team$Visibility;)V a
	setPlayerPrefix (Lnet/minecraft/network/chat/Component;)V b
	setPlayerSuffix (Lnet/minecraft/network/chat/Component;)V c
	setSeeFriendlyInvisibles (Z)V b
	unpackOptions (I)V a
net/minecraft/world/scores/Score dfl
	SCORE_COMPARATOR a
	count e
	forceUpdate g
	locked f
	objective c
	owner d
	scoreboard b
	add (I)V a
	getObjective ()Lnet/minecraft/world/scores/Objective; d
	getOwner ()Ljava/lang/String; e
	getScore ()I b
	getScoreboard ()Lnet/minecraft/world/scores/Scoreboard; f
	increment ()V a
	isLocked ()Z g
	remove (I)V b
	reset ()V c
	setLocked (Z)V a
	setScore (I)V c
net/minecraft/world/scores/Scoreboard dfm
	displayObjectives d
	displaySlotNames g
	objectivesByCriteria b
	objectivesByName a
	playerScores c
	teamsByName e
	teamsByPlayer f
	addObjective (Ljava/lang/String;Lnet/minecraft/world/scores/criteria/ObjectiveCriteria;Lnet/minecraft/network/chat/Component;Lnet/minecraft/world/scores/criteria/ObjectiveCriteria$RenderType;)Lnet/minecraft/world/scores/Objective; a
	addPlayerTeam (Ljava/lang/String;)Lnet/minecraft/world/scores/PlayerTeam; g
	addPlayerToTeam (Ljava/lang/String;Lnet/minecraft/world/scores/PlayerTeam;)Z a
	entityRemoved (Lnet/minecraft/world/entity/Entity;)V a
	forAllObjectives (Lnet/minecraft/world/scores/criteria/ObjectiveCriteria;Ljava/lang/String;Ljava/util/function/Consumer;)V a
	getDisplayObjective (I)Lnet/minecraft/world/scores/Objective; a
	getDisplaySlotByName (Ljava/lang/String;)I j
	getDisplaySlotName (I)Ljava/lang/String; b
	getDisplaySlotNames ()[Ljava/lang/String; h
	getObjective (Ljava/lang/String;)Lnet/minecraft/world/scores/Objective; d
	getObjectiveNames ()Ljava/util/Collection; d
	getObjectives ()Ljava/util/Collection; c
	getOrCreateObjective (Ljava/lang/String;)Lnet/minecraft/world/scores/Objective; c
	getOrCreatePlayerScore (Ljava/lang/String;Lnet/minecraft/world/scores/Objective;)Lnet/minecraft/world/scores/Score; c
	getPlayerScores (Ljava/lang/String;)Ljava/util/Map; e
	getPlayerScores (Lnet/minecraft/world/scores/Objective;)Ljava/util/Collection; i
	getPlayerTeam (Ljava/lang/String;)Lnet/minecraft/world/scores/PlayerTeam; f
	getPlayerTeams ()Ljava/util/Collection; g
	getPlayersTeam (Ljava/lang/String;)Lnet/minecraft/world/scores/PlayerTeam; i
	getTeamNames ()Ljava/util/Collection; f
	getTrackedPlayers ()Ljava/util/Collection; e
	hasObjective (Ljava/lang/String;)Z b
	hasPlayerScore (Ljava/lang/String;Lnet/minecraft/world/scores/Objective;)Z b
	loadPlayerScores (Lnet/minecraft/nbt/ListTag;)V a
	onObjectiveAdded (Lnet/minecraft/world/scores/Objective;)V a
	onObjectiveChanged (Lnet/minecraft/world/scores/Objective;)V b
	onObjectiveRemoved (Lnet/minecraft/world/scores/Objective;)V c
	onPlayerRemoved (Ljava/lang/String;)V a
	onPlayerScoreRemoved (Ljava/lang/String;Lnet/minecraft/world/scores/Objective;)V a
	onScoreChanged (Lnet/minecraft/world/scores/Score;)V a
	onTeamAdded (Lnet/minecraft/world/scores/PlayerTeam;)V a
	onTeamChanged (Lnet/minecraft/world/scores/PlayerTeam;)V b
	onTeamRemoved (Lnet/minecraft/world/scores/PlayerTeam;)V c
	removeObjective (Lnet/minecraft/world/scores/Objective;)V j
	removePlayerFromTeam (Ljava/lang/String;)Z h
	removePlayerFromTeam (Ljava/lang/String;Lnet/minecraft/world/scores/PlayerTeam;)V b
	removePlayerTeam (Lnet/minecraft/world/scores/PlayerTeam;)V d
	resetPlayerScore (Ljava/lang/String;Lnet/minecraft/world/scores/Objective;)V d
	savePlayerScores ()Lnet/minecraft/nbt/ListTag; i
	setDisplayObjective (ILnet/minecraft/world/scores/Objective;)V a
net/minecraft/world/scores/ScoreboardSaveData dfn
	LOGGER a
	delayLoad c
	scoreboard b
	load (Lnet/minecraft/nbt/CompoundTag;)V a
	loadDisplaySlots (Lnet/minecraft/nbt/CompoundTag;)V c
	loadObjectives (Lnet/minecraft/nbt/ListTag;)V b
	loadTeamPlayers (Lnet/minecraft/world/scores/PlayerTeam;Lnet/minecraft/nbt/ListTag;)V a
	loadTeams (Lnet/minecraft/nbt/ListTag;)V a
	save (Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/nbt/CompoundTag; b
	saveDisplaySlots (Lnet/minecraft/nbt/CompoundTag;)V d
	saveObjectives ()Lnet/minecraft/nbt/ListTag; e
	saveTeams ()Lnet/minecraft/nbt/ListTag; a
	setScoreboard (Lnet/minecraft/world/scores/Scoreboard;)V a
net/minecraft/world/scores/Team dfo
	canSeeFriendlyInvisibles ()Z i
	getCollisionRule ()Lnet/minecraft/world/scores/Team$CollisionRule; l
	getColor ()Lnet/minecraft/ChatFormatting; n
	getDeathMessageVisibility ()Lnet/minecraft/world/scores/Team$Visibility; k
	getFormattedName (Lnet/minecraft/network/chat/Component;)Lnet/minecraft/network/chat/MutableComponent; d
	getName ()Ljava/lang/String; b
	getNameTagVisibility ()Lnet/minecraft/world/scores/Team$Visibility; j
	getPlayers ()Ljava/util/Collection; g
	isAlliedTo (Lnet/minecraft/world/scores/Team;)Z a
	isAllowFriendlyFire ()Z h
net/minecraft/world/scores/Team$CollisionRule dfo$a
	$VALUES h
	ALWAYS a
	BY_NAME g
	NEVER b
	PUSH_OTHER_TEAMS c
	PUSH_OWN_TEAM d
	id f
	name e
	byName (Ljava/lang/String;)Lnet/minecraft/world/scores/Team$CollisionRule; a
	getAllNames ()[Ljava/lang/String; a
	getDisplayName ()Lnet/minecraft/network/chat/Component; b
net/minecraft/world/scores/Team$Visibility dfo$b
	$VALUES h
	ALWAYS a
	BY_NAME g
	HIDE_FOR_OTHER_TEAMS c
	HIDE_FOR_OWN_TEAM d
	NEVER b
	id f
	name e
	byName (Ljava/lang/String;)Lnet/minecraft/world/scores/Team$Visibility; a
	getAllNames ()[Ljava/lang/String; a
	getDisplayName ()Lnet/minecraft/network/chat/Component; b
net/minecraft/world/scores/criteria/ObjectiveCriteria dfp
	AIR i
	ARMOR j
	CRITERIA_BY_NAME a
	DEATH_COUNT d
	DUMMY b
	EXPERIENCE k
	FOOD h
	HEALTH g
	KILLED_BY_TEAM n
	KILL_COUNT_ALL f
	KILL_COUNT_PLAYERS e
	LEVEL l
	TEAM_KILL m
	TRIGGER c
	name o
	readOnly p
	renderType q
	byName (Ljava/lang/String;)Ljava/util/Optional; a
	getDefaultRenderType ()Lnet/minecraft/world/scores/criteria/ObjectiveCriteria$RenderType; e
	getName ()Ljava/lang/String; c
	getStat (Lnet/minecraft/stats/StatType;Lnet/minecraft/resources/ResourceLocation;)Ljava/util/Optional; a
	isReadOnly ()Z d
net/minecraft/world/scores/criteria/ObjectiveCriteria$RenderType dfp$a
	$VALUES e
	BY_ID d
	HEARTS b
	INTEGER a
	id c
	byId (Ljava/lang/String;)Lnet/minecraft/world/scores/criteria/ObjectiveCriteria$RenderType; a
	getId ()Ljava/lang/String; a
net/minecraft/client/main/Main net/minecraft/client/main/Main
	LOGGER a
	ofNullable (Ljava/lang/Integer;)Ljava/util/OptionalInt; a
	parseArgument (Ljoptsimple/OptionSet;Ljoptsimple/OptionSpec;)Ljava/lang/Object; a
	stringHasValue (Ljava/lang/String;)Z a
net/minecraft/server/Main net/minecraft/server/Main
	LOGGER a
	forceUpgrade (Lnet/minecraft/world/level/storage/LevelStorageSource$LevelStorageAccess;Lcom/mojang/datafixers/DataFixer;ZLjava/util/function/BooleanSupplier;Lcom/google/common/collect/ImmutableSet;)V a
net/minecraft/server/MinecraftServer net/minecraft/server/MinecraftServer
	DEMO_SETTINGS c
	LOGGER j
	USERID_CACHE_FILE b
	allowFlight D
	averageTickTime ag
	commandStorage ab
	connection o
	continousProfiler m
	customBossEvents ac
	delayProfilerStart O
	delayedTasksMaxNextTickTime W
	enforceWhitelist af
	executor ah
	fixerUpper s
	forceGameType P
	frameTimer ae
	functionManager ad
	hasWorldScreenshot Y
	isDemo J
	isReady M
	keyPair H
	lastOverloadWarning N
	lastServerStatus T
	levels v
	localIp t
	maxBuildHeight F
	mayHaveDelayedTasks X
	motd E
	nextTickTime V
	onlineMode A
	packRepository Z
	playerDataStorage e
	playerIdleTimeout G
	playerList w
	port u
	preventProxyConnections B
	profileCache S
	profileRepository R
	profiler n
	progressListenerFactory p
	proxy g
	pvp C
	random r
	registryHolder f
	resourcePack K
	resourcePackHash L
	resources aj
	running x
	scoreboard aa
	serverId ai
	serverThread U
	sessionService Q
	singleplayerName I
	snooper k
	status q
	stopped y
	storageSource d
	structureManager ak
	tickCount z
	tickTimes h
	tickables l
	worldData i
	acceptsFailure ()Z b
	acceptsSuccess ()Z a
	addTickable (Ljava/lang/Runnable;)V b
	areNpcsEnabled ()Z W
	configurePackRepository (Lnet/minecraft/server/packs/repository/PackRepository;Lnet/minecraft/world/level/DataPackConfig;Z)Lnet/minecraft/world/level/DataPackConfig; a
	convertFromRegionFormatIfNeeded (Lnet/minecraft/world/level/storage/LevelStorageSource$LevelStorageAccess;)V a
	createCommandSourceStack ()Lnet/minecraft/commands/CommandSourceStack; aC
	createLevels (Lnet/minecraft/server/level/progress/ChunkProgressListener;)V a
	detectBundledResources ()V q
	doRunTask (Ljava/lang/Runnable;)V c
	doRunTask (Lnet/minecraft/server/TickTask;)V b
	dumpClasspath (Ljava/nio/file/Path;)V e
	dumpCrashCategory (Ljava/nio/file/Path;)V c
	dumpGameRules (Ljava/nio/file/Path;)V d
	dumpMiscStats (Ljava/nio/file/Path;)V b
	dumpThreads (Ljava/nio/file/Path;)V f
	endProfilerTick (Lnet/minecraft/util/profiling/SingleTickProfiler;)V b
	fillReport (Lnet/minecraft/CrashReport;)Lnet/minecraft/CrashReport; b
	finishProfiling ()Lnet/minecraft/util/profiling/ProfileResults; aS
	forceDifficulty ()V p
	forceSynchronousWrites ()Z aT
	getAbsoluteMaxWorldSize ()I as
	getAdvancements ()Lnet/minecraft/server/ServerAdvancementManager; ay
	getAllLevels ()Ljava/lang/Iterable; F
	getAverageTickTime ()F aM
	getBackgroundTaskExecutor ()Ljava/util/concurrent/Executor; aP
	getCommandStorage ()Lnet/minecraft/world/level/storage/CommandStorage; aG
	getCommands ()Lnet/minecraft/commands/Commands; aB
	getCompressionThreshold ()I av
	getConnection ()Lnet/minecraft/server/network/ServerConnectionListener; ad
	getCustomBossEvents ()Lnet/minecraft/server/bossevents/CustomBossEvents; aK
	getDefaultGameType ()Lnet/minecraft/world/level/GameType; r
	getFile (Ljava/lang/String;)Ljava/io/File; c
	getFixerUpper ()Lcom/mojang/datafixers/DataFixer; ax
	getForceGameType ()Z aj
	getFrameTimer ()Lnet/minecraft/util/FrameTimer; aN
	getFunctionCompilationLevel ()I h
	getFunctions ()Lnet/minecraft/server/ServerFunctionManager; az
	getGameRules ()Lnet/minecraft/world/level/GameRules; aJ
	getKeyPair ()Ljava/security/KeyPair; K
	getLevel (Lnet/minecraft/resources/ResourceKey;)Lnet/minecraft/server/level/ServerLevel; a
	getLocalIp ()Ljava/lang/String; t
	getLootTables ()Lnet/minecraft/world/level/storage/loot/LootTables; aH
	getMaxBuildHeight ()I aa
	getMaxPlayers ()I I
	getModdedStatus ()Ljava/util/Optional; n
	getMotd ()Ljava/lang/String; Z
	getNextTickTime ()J aw
	getOperatorUserPermissionLevel ()I g
	getPackRepository ()Lnet/minecraft/server/packs/repository/PackRepository; aA
	getPlayerCount ()I H
	getPlayerIdleTimeout ()I am
	getPlayerList ()Lnet/minecraft/server/players/PlayerList; ac
	getPlayerNames ()[Ljava/lang/String; J
	getPort ()I L
	getPredicateManager ()Lnet/minecraft/world/level/storage/loot/PredicateManager; aI
	getPreventProxyConnections ()Z U
	getProfileCache ()Lnet/minecraft/server/players/GameProfileCache; ap
	getProfilePermissions (Lcom/mojang/authlib/GameProfile;)I b
	getProfileRepository ()Lcom/mojang/authlib/GameProfileRepository; ao
	getProfiler ()Lnet/minecraft/util/profiling/ProfilerFiller; aO
	getProxy ()Ljava/net/Proxy; al
	getRecipeManager ()Lnet/minecraft/world/item/crafting/RecipeManager; aD
	getResourcePack ()Ljava/lang/String; Q
	getResourcePackHash ()Ljava/lang/String; R
	getRunningThread ()Ljava/lang/Thread; au
	getScaledTrackingDistance (I)I b
	getScoreboard ()Lnet/minecraft/server/ServerScoreboard; aF
	getSelectedPacks (Lnet/minecraft/server/packs/repository/PackRepository;)Lnet/minecraft/world/level/DataPackConfig; a
	getServerDirectory ()Ljava/io/File; A
	getServerVersion ()Ljava/lang/String; G
	getSessionService ()Lcom/mojang/authlib/minecraft/MinecraftSessionService; an
	getSingleplayerName ()Ljava/lang/String; M
	getSnooper ()Lnet/minecraft/world/Snooper; ah
	getSpawnProtectionRadius ()I ai
	getSpawnRadius (Lnet/minecraft/server/level/ServerLevel;)I a
	getStatus ()Lnet/minecraft/network/protocol/status/ServerStatus; aq
	getStructureManager ()Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureManager; aU
	getTags ()Lnet/minecraft/tags/TagManager; aE
	getTickCount ()I ag
	getWorldData ()Lnet/minecraft/world/level/storage/WorldData; aV
	getWorldPath (Lnet/minecraft/world/level/storage/LevelResource;)Ljava/nio/file/Path; a
	getWorldScreenshotFile ()Ljava/io/File; z
	halt (Z)V a
	hasGui ()Z af
	hasWorldScreenshot ()Z y
	haveTime ()Z aY
	initServer ()Z d
	invalidateStatus ()V ar
	isCommandBlockEnabled ()Z l
	isDedicatedServer ()Z j
	isDemo ()Z P
	isEnforceWhitelist ()Z aL
	isEpollEnabled ()Z k
	isFlightAllowed ()Z Y
	isHardcore ()Z f
	isNetherEnabled ()Z B
	isProfiling ()Z aQ
	isPublished ()Z m
	isPvpAllowed ()Z X
	isReady ()Z ae
	isRunning ()Z u
	isShutdown ()Z C
	isSingleplayer ()Z N
	isSingleplayerOwner (Lcom/mojang/authlib/GameProfile;)Z a
	isSnooperEnabled ()Z S
	isSpawningAnimals ()Z V
	isSpawningMonsters ()Z O
	isStopped ()Z ab
	isUnderSpawnProtection (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/player/Player;)Z a
	kickUnlistedPlayers (Lnet/minecraft/commands/CommandSourceStack;)V a
	levelKeys ()Ljava/util/Set; E
	loadLevel ()V l_
	onServerCrash (Lnet/minecraft/CrashReport;)V a
	onServerExit ()V e
	overworld ()Lnet/minecraft/server/level/ServerLevel; D
	pollTask ()Z x
	pollTaskInternal ()Z aZ
	populateSnooper (Lnet/minecraft/world/Snooper;)V a
	populateSnooperInitial (Lnet/minecraft/world/Snooper;)V b
	prepareLevels (Lnet/minecraft/server/level/progress/ChunkProgressListener;)V b
	publishServer (Lnet/minecraft/world/level/GameType;ZI)Z a
	readScoreboard (Lnet/minecraft/world/level/storage/DimensionDataStorage;)V a
	registryAccess ()Lnet/minecraft/core/RegistryAccess; aW
	reloadResources (Ljava/util/Collection;)Ljava/util/concurrent/CompletableFuture; a
	repliesToStatus ()Z ak
	runServer ()V v
	saveAllChunks (ZZZ)Z a
	saveDebugReport (Ljava/nio/file/Path;)V a
	scheduleExecutables ()Z at
	sendDifficultyUpdate (Lnet/minecraft/server/level/ServerPlayer;)V a
	sendMessage (Lnet/minecraft/network/chat/Component;Ljava/util/UUID;)V a
	setDefaultGameType (Lnet/minecraft/world/level/GameType;)V a
	setDemo (Z)V c
	setDifficulty (Lnet/minecraft/world/Difficulty;Z)V a
	setDifficultyLocked (Z)V b
	setEnforceWhitelist (Z)V i
	setFlightAllowed (Z)V g
	setForceGameType (Z)V h
	setId (Ljava/lang/String;)V b
	setInitialSpawn (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/level/storage/ServerLevelData;ZZZ)V a
	setKeyPair (Ljava/security/KeyPair;)V a
	setLocalIp (Ljava/lang/String;)V a_
	setMaxBuildHeight (I)V c
	setMotd (Ljava/lang/String;)V e
	setPlayerIdleTimeout (I)V d
	setPlayerList (Lnet/minecraft/server/players/PlayerList;)V a
	setPort (I)V a
	setPreventProxyConnections (Z)V e
	setPvpAllowed (Z)V f
	setResourcePack (Ljava/lang/String;Ljava/lang/String;)V a
	setSingleplayerName (Ljava/lang/String;)V d
	setUsesAuthentication (Z)V d
	setupDebugLevel (Lnet/minecraft/world/level/storage/WorldData;)V a
	shouldInformAdmins ()Z S_
	shouldRconBroadcast ()Z i
	shouldRun (Ljava/lang/Runnable;)Z d
	shouldRun (Lnet/minecraft/server/TickTask;)Z a
	spin (Ljava/util/function/Function;)Lnet/minecraft/server/MinecraftServer; a
	startProfilerTick (Lnet/minecraft/util/profiling/SingleTickProfiler;)V a
	startProfiling ()V aR
	stopServer ()V s
	tickChildren (Ljava/util/function/BooleanSupplier;)V b
	tickServer (Ljava/util/function/BooleanSupplier;)V a
	updateMobSpawningFlags ()V ba
	updateStatusIcon (Lnet/minecraft/network/protocol/status/ServerStatus;)V a
	usesAuthentication ()Z T
	waitUntilNextTick ()V w
	wrapRunnable (Ljava/lang/Runnable;)Ljava/lang/Runnable; e
	wrapRunnable (Ljava/lang/Runnable;)Lnet/minecraft/server/TickTask; a
net/minecraft/util/CubicSampler net/minecraft/util/CubicSampler
	GAUSSIAN_SAMPLE_KERNEL a
	gaussianSampleVec3 (Lnet/minecraft/world/phys/Vec3;Lnet/minecraft/util/CubicSampler$Vec3Fetcher;)Lnet/minecraft/world/phys/Vec3; a
net/minecraft/data/Main net/minecraft/data/Main
	createStandardGenerator (Ljava/nio/file/Path;Ljava/util/Collection;ZZZZZ)Lnet/minecraft/data/DataGenerator; a

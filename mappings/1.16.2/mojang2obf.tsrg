com/mojang/blaze3d/Blaze3D ddq
	getTime ()D b
	youJustLostTheGame ()V a
com/mojang/blaze3d/audio/Channel ddr
	LOGGER a
	initialized c
	source b
	stream e
	streamingBufferSize d
	attachBufferStream (Lnet/minecraft/client/sounds/AudioStream;)V a
	attachStaticBuffer (Lcom/mojang/blaze3d/audio/SoundBuffer;)V a
	calculateBufferSize (Ljavax/sound/sampled/AudioFormat;I)I a
	create ()Lcom/mojang/blaze3d/audio/Channel; a
	destroy ()V b
	disableAttenuation ()V h
	getState ()I j
	linearAttenuation (F)V c
	pause ()V d
	play ()V c
	pumpBuffers (I)V a
	removeProcessedBuffers ()I k
	setLooping (Z)V a
	setPitch (F)V a
	setRelative (Z)V b
	setSelfPosition (Lnet/minecraft/world/phys/Vec3;)V a
	setVolume (F)V b
	stop ()V f
	stopped ()Z g
	unpause ()V e
	updateStream ()V i
com/mojang/blaze3d/audio/Library dds
	EMPTY d
	LOGGER a
	context c
	device b
	listener g
	staticChannels e
	streamingChannels f
	acquireChannel (Lcom/mojang/blaze3d/audio/Library$Pool;)Lcom/mojang/blaze3d/audio/Channel; a
	cleanup ()V b
	getChannelCount ()I f
	getDebugString ()Ljava/lang/String; d
	getListener ()Lcom/mojang/blaze3d/audio/Listener; c
	init ()V a
	releaseChannel (Lcom/mojang/blaze3d/audio/Channel;)V a
	tryOpenDevice ()J g
com/mojang/blaze3d/audio/Library$ChannelPool dds$a
	acquire ()Lcom/mojang/blaze3d/audio/Channel; a
	cleanup ()V b
	getMaxCount ()I c
	getUsedCount ()I d
	release (Lcom/mojang/blaze3d/audio/Channel;)Z a
com/mojang/blaze3d/audio/Library$CountingChannelPool dds$b
	activeChannels b
	limit a
	acquire ()Lcom/mojang/blaze3d/audio/Channel; a
	cleanup ()V b
	getMaxCount ()I c
	getUsedCount ()I d
	release (Lcom/mojang/blaze3d/audio/Channel;)Z a
com/mojang/blaze3d/audio/Library$Pool dds$c
	$VALUES c
	STATIC a
	STREAMING b
com/mojang/blaze3d/audio/Listener ddt
	gain a
	position b
	getGain ()F b
	getListenerPosition ()Lnet/minecraft/world/phys/Vec3; a
	reset ()V c
	setGain (F)V a
	setListenerOrientation (Lcom/mojang/math/Vector3f;Lcom/mojang/math/Vector3f;)V a
	setListenerPosition (Lnet/minecraft/world/phys/Vec3;)V a
com/mojang/blaze3d/audio/OggAudioStream ddu
	audioFormat b
	buffer d
	handle a
	input c
	convertMono (Ljava/nio/FloatBuffer;Lcom/mojang/blaze3d/audio/OggAudioStream$OutputConcat;)V a
	convertStereo (Ljava/nio/FloatBuffer;Ljava/nio/FloatBuffer;Lcom/mojang/blaze3d/audio/OggAudioStream$OutputConcat;)V a
	forwardBuffer ()V d
	getFormat ()Ljavax/sound/sampled/AudioFormat; a
	read (I)Ljava/nio/ByteBuffer; a
	readAll ()Ljava/nio/ByteBuffer; b
	readFrame (Lcom/mojang/blaze3d/audio/OggAudioStream$OutputConcat;)Z a
	refillFromStream ()Z c
com/mojang/blaze3d/audio/OggAudioStream$OutputConcat ddu$a
	bufferSize b
	buffers a
	byteCount c
	currentBuffer d
	createNewBuffer ()V b
	get ()Ljava/nio/ByteBuffer; a
	put (F)V a
com/mojang/blaze3d/audio/OpenAlUtil ddv
	LOGGER a
	alErrorToString (I)Ljava/lang/String; a
	alcErrorToString (I)Ljava/lang/String; b
	audioFormatToOpenAl (Ljavax/sound/sampled/AudioFormat;)I a
	checkALCError (JLjava/lang/String;)Z a
	checkALError (Ljava/lang/String;)Z a
com/mojang/blaze3d/audio/SoundBuffer ddw
	alBuffer d
	data a
	format b
	hasAlBuffer c
	discardAlBuffer ()V b
	getAlBuffer ()Ljava/util/OptionalInt; a
	releaseAlBuffer ()Ljava/util/OptionalInt; c
com/mojang/blaze3d/font/GlyphInfo ddx
	getAdvance (Z)F a
	getBearingX ()F a
	getBoldOffset ()F b
	getShadowOffset ()F c
com/mojang/blaze3d/font/GlyphProvider ddy
	getGlyph (I)Lcom/mojang/blaze3d/font/RawGlyph; a
	getSupportedGlyphs ()Lit/unimi/dsi/fastutil/ints/IntSet; a
com/mojang/blaze3d/font/RawGlyph ddz
	getBearingY ()F l
	getDown ()F k
	getLeft ()F h
	getOversample ()F g
	getPixelHeight ()I e
	getPixelWidth ()I d
	getRight ()F i
	getUp ()F j
	isColored ()Z f
	upload (II)V a
com/mojang/blaze3d/font/TrueTypeGlyphProvider dea
	ascent h
	font b
	fontMemory a
	oversample c
	pointScale g
	shiftX e
	shiftY f
	skip d
	getGlyph (I)Lcom/mojang/blaze3d/font/RawGlyph; a
	getGlyph (I)Lcom/mojang/blaze3d/font/TrueTypeGlyphProvider$Glyph; b
	getSupportedGlyphs ()Lit/unimi/dsi/fastutil/ints/IntSet; a
com/mojang/blaze3d/font/TrueTypeGlyphProvider$Glyph dea$a
	advance f
	bearingX d
	bearingY e
	height c
	index g
	width b
	getBearingX ()F a
	getBearingY ()F l
	getOversample ()F g
	getPixelHeight ()I e
	getPixelWidth ()I d
	isColored ()Z f
	upload (II)V a
com/mojang/blaze3d/pipeline/RenderCall deb
com/mojang/blaze3d/pipeline/RenderPipeline dec
	processedBuffer c
	recordingBuffer b
	renderCalls a
	renderingBuffer d
com/mojang/blaze3d/pipeline/RenderTarget ded
	clearChannels g
	colorTextureId i
	depthBufferId j
	filterMode h
	frameBufferId f
	height b
	useDepth e
	viewHeight d
	viewWidth c
	width a
	_bindWrite (Z)V c
	_blitToScreen (IIZ)V e
	_resize (IIZ)V d
	bindRead ()V c
	bindWrite (Z)V a
	blitToScreen (II)V a
	blitToScreen (IIZ)V c
	checkStatus ()V b
	clear (Z)V b
	copyDepthFrom (Lcom/mojang/blaze3d/pipeline/RenderTarget;)V a
	createBuffers (IIZ)V b
	destroyBuffers ()V a
	getColorTextureId ()I f
	getDepthTextureId ()I g
	resize (IIZ)V a
	setClearColor (FFFF)V a
	setFilterMode (I)V a
	unbindRead ()V d
	unbindWrite ()V e
com/mojang/blaze3d/platform/ClipboardManager dee
	clipboardScratchBuffer a
	getClipboard (JLorg/lwjgl/glfw/GLFWErrorCallbackI;)Ljava/lang/String; a
	pushClipboard (JLjava/nio/ByteBuffer;[B)V a
	setClipboard (JLjava/lang/String;)V a
com/mojang/blaze3d/platform/DebugMemoryUntracker def
	UNTRACK a
	untrack (J)V a
	untrack (Lorg/lwjgl/system/Pointer;)V a
com/mojang/blaze3d/platform/DisplayData deg
	fullscreenHeight d
	fullscreenWidth c
	height b
	isFullscreen e
	width a
com/mojang/blaze3d/platform/GlConst deh
	GL_COLOR_ATTACHMENT0 c
	GL_DEPTH_ATTACHMENT d
	GL_FRAMEBUFFER a
	GL_FRAMEBUFFER_COMPLETE e
	GL_FRAMEBUFFER_INCOMPLETE_ATTACHMENT f
	GL_FRAMEBUFFER_INCOMPLETE_DRAW_BUFFER h
	GL_FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT g
	GL_FRAMEBUFFER_INCOMPLETE_READ_BUFFER i
	GL_RENDERBUFFER b
com/mojang/blaze3d/platform/GlDebug dei
	BYTE_BUFFER a
	BY_ID g
	DEBUG_LEVELS h
	DEBUG_LEVELS_ARB i
	FLOAT_BUFFER b
	INT_BUFFER c
	LOGGER d
	NEWLINE_JOINER e
	SAVED_STATES j
	STATEMENT_JOINER f
	enableDebugCallback (IZ)V a
	printDebugLog (IIIIIJJ)V a
	printUnknownToken (I)Ljava/lang/String; a
	setup (ILjava/lang/String;)V a
	severityToString (I)Ljava/lang/String; d
	sourceToString (I)Ljava/lang/String; b
	typeToString (I)Ljava/lang/String; c
com/mojang/blaze3d/platform/GlStateManager dej
	ALPHA_TEST b
	BLEND f
	COLOR t
	COLOR_LOGIC k
	COLOR_MASK s
	COLOR_MATERIAL e
	CULL i
	DEPTH g
	FLOAT_ARG_BUFFER n
	FOG h
	LIGHTING c
	LIGHT_ENABLE d
	MATRIX_BUFFER a
	POLY_OFFSET j
	RESCALE_NORMAL r
	STENCIL m
	TEXTURES p
	TEX_GEN l
	activeTexture o
	fboBlitMode v
	fboMode u
	shadeModel q
	_activeTexture (I)V q
	_alphaFunc (IF)V a
	_bindTexture (I)V s
	_blendColor (FFFF)V a
	_blendEquation (I)V c
	_blendFunc (II)V b
	_blendFuncSeparate (IIII)V a
	_clear (IZ)V a
	_clearColor (FFFF)V b
	_clearCurrentColor ()V Q
	_clearDepth (D)V a
	_clearStencil (I)V v
	_color4f (FFFF)V d
	_colorMask (ZZZZ)V a
	_colorMaterial (II)V a
	_colorPointer (IIIJ)V c
	_deleteTexture (I)V r
	_deleteTextures ([I)V b
	_depthFunc (I)V b
	_depthMask (Z)V a
	_disableAlphaTest ()V d
	_disableBlend ()V l
	_disableClientState (I)V y
	_disableColorLogicOp ()V H
	_disableColorMaterial ()V i
	_disableCull ()V B
	_disableDepthTest ()V j
	_disableFog ()V z
	_disableLighting ()V g
	_disableLineOffset ()V F
	_disablePolygonOffset ()V D
	_disableRescaleNormal ()V M
	_disableTexGen (Lcom/mojang/blaze3d/platform/GlStateManager$TexGen;)V b
	_disableTexture ()V J
	_disableVertexAttribArray (I)V A
	_drawArrays (III)V f
	_enableAlphaTest ()V e
	_enableBlend ()V m
	_enableClientState (I)V x
	_enableColorLogicOp ()V G
	_enableColorMaterial ()V h
	_enableCull ()V A
	_enableDepthTest ()V k
	_enableFog ()V y
	_enableLight (I)V a
	_enableLighting ()V f
	_enableLineOffset ()V E
	_enablePolygonOffset ()V C
	_enableRescaleNormal ()V L
	_enableTexGen (Lcom/mojang/blaze3d/platform/GlStateManager$TexGen;)V a
	_enableTexture ()V I
	_enableVertexAttribArray (I)V z
	_fog (I[F)V a
	_fogDensity (F)V a
	_fogEnd (F)V c
	_fogMode (I)V o
	_fogStart (F)V b
	_fogi (II)V l
	_genTexture ()I K
	_genTextures ([I)V a
	_getError ()I R
	_getInteger (I)I C
	_getMatrix (ILjava/nio/FloatBuffer;)V f
	_getString (I)Ljava/lang/String; B
	_getTexImage (IIIIJ)V a
	_getTexLevelParameter (III)I c
	_glBindBuffer (II)V g
	_glBindFramebuffer (II)V h
	_glBlitFrameBuffer (IIIIIIIIII)V a
	_glBufferData (ILjava/nio/ByteBuffer;I)V a
	_glClientActiveTexture (I)V n
	_glCopyTexSubImage2D (IIIIIIII)V a
	_glDeleteBuffers (I)V j
	_glDeleteFramebuffers (I)V k
	_glFramebufferTexture2D (IIIII)V a
	_glGenBuffers ()I o
	_glGetAttribLocation (ILjava/lang/CharSequence;)I c
	_glGetUniformLocation (ILjava/lang/CharSequence;)I b
	_glMultiTexCoord2f (IFF)V a
	_glUniform1 (ILjava/nio/FloatBuffer;)V b
	_glUniform1 (ILjava/nio/IntBuffer;)V a
	_glUniform1i (II)V f
	_glUniform2 (ILjava/nio/FloatBuffer;)V c
	_glUniform2 (ILjava/nio/IntBuffer;)V b
	_glUniform3 (ILjava/nio/FloatBuffer;)V d
	_glUniform3 (ILjava/nio/IntBuffer;)V c
	_glUniform4 (ILjava/nio/FloatBuffer;)V e
	_glUniform4 (ILjava/nio/IntBuffer;)V d
	_glUniformMatrix2 (IZLjava/nio/FloatBuffer;)V a
	_glUniformMatrix3 (IZLjava/nio/FloatBuffer;)V b
	_glUniformMatrix4 (IZLjava/nio/FloatBuffer;)V c
	_glUseProgram (I)V g
	_init_fbo (Lorg/lwjgl/opengl/GLCapabilities;)Ljava/lang/String; a
	_light (IILjava/nio/FloatBuffer;)V a
	_lightModel (ILjava/nio/FloatBuffer;)V a
	_lineWidth (F)V d
	_loadIdentity ()V N
	_logicOp (I)V p
	_matrixMode (I)V w
	_multMatrix (Lcom/mojang/math/Matrix4f;)V a
	_multMatrix (Ljava/nio/FloatBuffer;)V a
	_normal3f (FFF)V a
	_normalPointer (IIJ)V a
	_ortho (DDDDDD)V a
	_pixelStore (II)V n
	_pixelTransfer (IF)V b
	_polygonMode (II)V m
	_polygonOffset (FF)V a
	_popAttributes ()V c
	_popMatrix ()V P
	_pushLightingAttributes ()V a
	_pushMatrix ()V O
	_pushTextureAttributes ()V b
	_readPixels (IIIIIILjava/nio/ByteBuffer;)V a
	_rotatef (FFFF)V c
	_scaled (DDD)V a
	_scalef (FFF)V b
	_shadeModel (I)V t
	_stencilFunc (III)V d
	_stencilMask (I)V u
	_stencilOp (III)V e
	_texCoordPointer (IIIJ)V a
	_texEnv (III)V a
	_texGenMode (Lcom/mojang/blaze3d/platform/GlStateManager$TexGen;I)V a
	_texGenParam (Lcom/mojang/blaze3d/platform/GlStateManager$TexGen;ILjava/nio/FloatBuffer;)V a
	_texImage2D (IIIIIIIILjava/nio/IntBuffer;)V a
	_texParameter (IIF)V a
	_texParameter (III)V b
	_texSubImage2D (IIIIIIIIJ)V a
	_translated (DDD)V b
	_translatef (FFF)V c
	_vertexAttribPointer (IIIZIJ)V a
	_vertexPointer (IIIJ)V b
	_viewport (IIII)V c
	alpha1arg (II)V p
	clearTexGen ()V w
	color1arg (II)V o
	color3arg (IIII)V d
	getActiveTextureName ()I r
	getBuffer (FFFF)Ljava/nio/FloatBuffer; e
	getFramebufferDepthTexture ()I p
	getTexGen (Lcom/mojang/blaze3d/platform/GlStateManager$TexGen;)Lcom/mojang/blaze3d/platform/GlStateManager$TexGenCoord; c
	glActiveTexture (I)V m
	glAttachShader (II)V d
	glBlendFuncSeparate (IIII)V b
	glCheckFramebufferStatus (I)I l
	glCompileShader (I)V f
	glCreateProgram ()I n
	glCreateShader (I)I e
	glDeleteProgram (I)V h
	glDeleteShader (I)V d
	glGenFramebuffers ()I q
	glGetProgramInfoLog (II)Ljava/lang/String; j
	glGetProgrami (II)I c
	glGetShaderInfoLog (II)Ljava/lang/String; i
	glGetShaderi (II)I e
	glLinkProgram (I)V i
	glShaderSource (ILjava/lang/CharSequence;)V a
	mulTextureByProjModelView ()V x
	setupEndPortalTexGen ()V v
	setupGui3DDiffuseLighting (Lcom/mojang/math/Vector3f;Lcom/mojang/math/Vector3f;)V b
	setupGuiFlatDiffuseLighting (Lcom/mojang/math/Vector3f;Lcom/mojang/math/Vector3f;)V a
	setupLevelDiffuseLighting (Lcom/mojang/math/Vector3f;Lcom/mojang/math/Vector3f;Lcom/mojang/math/Matrix4f;)V a
	setupOutline ()V s
	setupOverlayColor (II)V k
	supportsFramebufferBlit ()Z S
	teardownOutline ()V t
	teardownOverlayColor ()V u
com/mojang/blaze3d/platform/GlStateManager$AlphaState dej$a
	func b
	mode a
	reference c
com/mojang/blaze3d/platform/GlStateManager$BlendState dej$b
	dstAlpha e
	dstRgb c
	mode a
	srcAlpha d
	srcRgb b
com/mojang/blaze3d/platform/GlStateManager$BooleanState dej$c
	enabled b
	state a
	disable ()V a
	enable ()V b
	setEnabled (Z)V a
com/mojang/blaze3d/platform/GlStateManager$Color dej$d
	a d
	b c
	g b
	r a
com/mojang/blaze3d/platform/GlStateManager$ColorLogicState dej$e
	enable a
	op b
com/mojang/blaze3d/platform/GlStateManager$ColorMask dej$f
	alpha d
	blue c
	green b
	red a
com/mojang/blaze3d/platform/GlStateManager$ColorMaterialState dej$g
	enable a
	face b
	mode c
com/mojang/blaze3d/platform/GlStateManager$CullState dej$h
	enable a
	mode b
com/mojang/blaze3d/platform/GlStateManager$DepthState dej$i
	func c
	mask b
	mode a
com/mojang/blaze3d/platform/GlStateManager$DestFactor dej$j
	$VALUES p
	CONSTANT_ALPHA a
	CONSTANT_COLOR b
	DST_ALPHA c
	DST_COLOR d
	ONE e
	ONE_MINUS_CONSTANT_ALPHA f
	ONE_MINUS_CONSTANT_COLOR g
	ONE_MINUS_DST_ALPHA h
	ONE_MINUS_DST_COLOR i
	ONE_MINUS_SRC_ALPHA j
	ONE_MINUS_SRC_COLOR k
	SRC_ALPHA l
	SRC_COLOR m
	ZERO n
	value o
com/mojang/blaze3d/platform/GlStateManager$FboBlitMode dej$k
	$VALUES d
	BASE a
	EXT b
	NONE c
com/mojang/blaze3d/platform/GlStateManager$FboMode dej$l
	$VALUES d
	ARB b
	BASE a
	EXT c
com/mojang/blaze3d/platform/GlStateManager$FogMode dej$m
	$VALUES e
	EXP b
	EXP2 c
	LINEAR a
	value d
com/mojang/blaze3d/platform/GlStateManager$FogState dej$n
	density c
	enable a
	end e
	mode b
	start d
com/mojang/blaze3d/platform/GlStateManager$LogicOp dej$o
	$VALUES r
	AND a
	AND_INVERTED b
	AND_REVERSE c
	CLEAR d
	COPY e
	COPY_INVERTED f
	EQUIV g
	INVERT h
	NAND i
	NOOP j
	NOR k
	OR l
	OR_INVERTED m
	OR_REVERSE n
	SET o
	XOR p
	value q
com/mojang/blaze3d/platform/GlStateManager$PolygonOffsetState dej$p
	factor c
	fill a
	line b
	units d
com/mojang/blaze3d/platform/GlStateManager$SourceFactor dej$q
	$VALUES q
	CONSTANT_ALPHA a
	CONSTANT_COLOR b
	DST_ALPHA c
	DST_COLOR d
	ONE e
	ONE_MINUS_CONSTANT_ALPHA f
	ONE_MINUS_CONSTANT_COLOR g
	ONE_MINUS_DST_ALPHA h
	ONE_MINUS_DST_COLOR i
	ONE_MINUS_SRC_ALPHA j
	ONE_MINUS_SRC_COLOR k
	SRC_ALPHA l
	SRC_ALPHA_SATURATE m
	SRC_COLOR n
	ZERO o
	value p
com/mojang/blaze3d/platform/GlStateManager$StencilFunc dej$r
	func a
	mask c
	ref b
com/mojang/blaze3d/platform/GlStateManager$StencilState dej$s
	fail c
	func a
	mask b
	zfail d
	zpass e
com/mojang/blaze3d/platform/GlStateManager$TexGen dej$t
	$VALUES e
	Q d
	R c
	S a
	T b
com/mojang/blaze3d/platform/GlStateManager$TexGenCoord dej$u
	coord b
	enable a
	mode c
com/mojang/blaze3d/platform/GlStateManager$TexGenState dej$v
	q d
	r c
	s a
	t b
com/mojang/blaze3d/platform/GlStateManager$TextureState dej$w
	binding b
	enable a
com/mojang/blaze3d/platform/GlStateManager$Viewport dej$x
	$VALUES f
	INSTANCE a
	height e
	width d
	x b
	y c
com/mojang/blaze3d/platform/GlUtil dek
	allocateMemory (I)Ljava/nio/ByteBuffer; a
	freeMemory (Ljava/nio/Buffer;)V a
	getCpuInfo ()Ljava/lang/String; b
	getOpenGLVersion ()Ljava/lang/String; d
	getRenderer ()Ljava/lang/String; c
	getVendor ()Ljava/lang/String; a
	populateSnooperWithOpenGL (Lcom/mojang/blaze3d/platform/SnooperAccess;)V a
com/mojang/blaze3d/platform/InputConstants del
	GLFW_RAW_MOUSE_MOTION c
	UNKNOWN a
	glfwRawMouseMotionSupported b
	getKey (II)Lcom/mojang/blaze3d/platform/InputConstants$Key; a
	getKey (Ljava/lang/String;)Lcom/mojang/blaze3d/platform/InputConstants$Key; a
	grabOrReleaseMouse (JIDD)V a
	isKeyDown (JI)Z a
	isRawMouseInputSupported ()Z a
	setupKeyboardCallbacks (JLorg/lwjgl/glfw/GLFWKeyCallbackI;Lorg/lwjgl/glfw/GLFWCharModsCallbackI;)V a
	setupMouseCallbacks (JLorg/lwjgl/glfw/GLFWCursorPosCallbackI;Lorg/lwjgl/glfw/GLFWMouseButtonCallbackI;Lorg/lwjgl/glfw/GLFWScrollCallbackI;Lorg/lwjgl/glfw/GLFWDropCallbackI;)V a
	updateRawMouseInput (JZ)V a
com/mojang/blaze3d/platform/InputConstants$Key del$a
	NAME_MAP e
	displayName d
	name a
	type b
	value c
	getDisplayName ()Lnet/minecraft/network/chat/Component; d
	getName ()Ljava/lang/String; c
	getNumericKeyValue ()Ljava/util/OptionalInt; e
	getType ()Lcom/mojang/blaze3d/platform/InputConstants$Type; a
	getValue ()I b
com/mojang/blaze3d/platform/InputConstants$Type del$b
	$VALUES g
	KEYSYM a
	MOUSE c
	SCANCODE b
	defaultPrefix e
	displayTextSupplier f
	map d
	addKey (Lcom/mojang/blaze3d/platform/InputConstants$Type;Ljava/lang/String;I)V a
	getOrCreate (I)Lcom/mojang/blaze3d/platform/InputConstants$Key; a
com/mojang/blaze3d/platform/Lighting dem
	DIFFUSE_LIGHT_0 a
	DIFFUSE_LIGHT_1 b
	NETHER_DIFFUSE_LIGHT_0 c
	NETHER_DIFFUSE_LIGHT_1 d
	setupFor3DItems ()V d
	setupForFlatItems ()V c
	setupLevel (Lcom/mojang/math/Matrix4f;)V b
	setupNetherLevel (Lcom/mojang/math/Matrix4f;)V a
	turnBackOn ()V a
	turnOff ()V b
com/mojang/blaze3d/platform/MemoryTracker den
	createByteBuffer (I)Ljava/nio/ByteBuffer; a
	createFloatBuffer (I)Ljava/nio/FloatBuffer; b
com/mojang/blaze3d/platform/Monitor deo
	currentMode c
	monitor a
	videoModes b
	x d
	y e
	getCurrentMode ()Lcom/mojang/blaze3d/platform/VideoMode; b
	getMode (I)Lcom/mojang/blaze3d/platform/VideoMode; a
	getModeCount ()I e
	getMonitor ()J f
	getPreferredVidMode (Ljava/util/Optional;)Lcom/mojang/blaze3d/platform/VideoMode; a
	getVideoModeIndex (Lcom/mojang/blaze3d/platform/VideoMode;)I a
	getX ()I c
	getY ()I d
	refreshVideoModes ()V a
com/mojang/blaze3d/platform/MonitorCreator dep
com/mojang/blaze3d/platform/NativeImage deq
	LOGGER a
	OPEN_OPTIONS b
	format c
	height e
	pixels g
	size h
	useStbFree f
	width d
	_upload (IIIIIIIZZZZ)V b
	asByteArray ()[B e
	checkAllocated ()V h
	combine (IIII)I a
	copyFrom (Lcom/mojang/blaze3d/platform/NativeImage;)V a
	copyFromFont (Lorg/lwjgl/stb/STBTTFontinfo;IIIFFFFII)V a
	copyRect (IIIIIIZZ)V a
	downloadTexture (IZ)V a
	fillRect (IIIII)V a
	flipY ()V f
	format ()Lcom/mojang/blaze3d/platform/NativeImage$Format; c
	fromBase64 (Ljava/lang/String;)Lcom/mojang/blaze3d/platform/NativeImage; a
	getA (I)I a
	getB (I)I d
	getG (I)I c
	getHeight ()I b
	getLuminanceOrAlpha (II)B b
	getPixelRGBA (II)I a
	getR (I)I b
	getWidth ()I a
	makePixelArray ()[I d
	read (Lcom/mojang/blaze3d/platform/NativeImage$Format;Ljava/io/InputStream;)Lcom/mojang/blaze3d/platform/NativeImage; a
	read (Lcom/mojang/blaze3d/platform/NativeImage$Format;Ljava/nio/ByteBuffer;)Lcom/mojang/blaze3d/platform/NativeImage; a
	read (Ljava/io/InputStream;)Lcom/mojang/blaze3d/platform/NativeImage; a
	read (Ljava/nio/ByteBuffer;)Lcom/mojang/blaze3d/platform/NativeImage; a
	resizeSubRectTo (IIIILcom/mojang/blaze3d/platform/NativeImage;)V a
	setClamp (Z)V a
	setFilter (ZZ)V a
	setPixelRGBA (III)V a
	untrack ()V g
	upload (IIIIIIIZZ)V a
	upload (IIIIIIIZZZZ)V a
	upload (IIIZ)V a
	writeToChannel (Ljava/nio/channels/WritableByteChannel;)Z a
	writeToFile (Ljava/io/File;)V a
	writeToFile (Ljava/nio/file/Path;)V a
com/mojang/blaze3d/platform/NativeImage$Format deq$a
	$VALUES r
	LUMINANCE d
	LUMINANCE_ALPHA c
	RGB b
	RGBA a
	alphaOffset p
	blueOffset n
	components e
	glFormat f
	greenOffset m
	hasAlpha k
	hasBlue i
	hasGreen h
	hasLuminance j
	hasRed g
	luminanceOffset o
	redOffset l
	supportedByStb q
	alphaOffset ()I f
	components ()I a
	getStbFormat (I)Lcom/mojang/blaze3d/platform/NativeImage$Format; b
	glFormat ()I d
	hasAlpha ()Z e
	hasLuminanceOrAlpha ()Z g
	luminanceOrAlphaOffset ()I h
	setPackPixelStoreState ()V b
	setUnpackPixelStoreState ()V c
	supportedByStb ()Z i
com/mojang/blaze3d/platform/NativeImage$InternalGlFormat deq$b
	$VALUES g
	INTENSITY e
	LUMINANCE d
	LUMINANCE_ALPHA c
	RGB b
	RGBA a
	glFormat f
	glFormat ()I a
com/mojang/blaze3d/platform/NativeImage$WriteCallback deq$c
	exception b
	output a
	throwIfException ()V a
com/mojang/blaze3d/platform/PngInfo der
	height b
	width a
	createCallbacks (Ljava/io/InputStream;)Lcom/mojang/blaze3d/platform/PngInfo$StbReader; a
com/mojang/blaze3d/platform/PngInfo$StbReader der$a
	closed a
	eof (J)I a
	read (JI)I b
	read (JJI)I a
	skip (I)V a
	skip (JI)V a
com/mojang/blaze3d/platform/PngInfo$StbReaderBufferedChannel der$b
	bufferSize d
	channel b
	consumed f
	read e
	readBufferAddress c
	fillReadBuffer (I)V b
	read (JI)I b
	skip (I)V a
com/mojang/blaze3d/platform/PngInfo$StbReaderSeekableByteChannel der$c
	channel b
	eof (J)I a
	read (JI)I b
	skip (I)V a
com/mojang/blaze3d/platform/ScreenManager des
	monitorCreator b
	monitors a
	clamp (III)I a
	findBestMonitor (Lcom/mojang/blaze3d/platform/Window;)Lcom/mojang/blaze3d/platform/Monitor; a
	getMonitor (J)Lcom/mojang/blaze3d/platform/Monitor; a
	onMonitorChange (JI)V a
	shutdown ()V a
com/mojang/blaze3d/platform/SnooperAccess det
com/mojang/blaze3d/platform/TextureUtil deu
	LOGGER a
	bind (I)V b
	generateTextureId ()I a
	initTexture (Ljava/nio/IntBuffer;II)V a
	prepareImage (III)V a
	prepareImage (IIII)V a
	prepareImage (Lcom/mojang/blaze3d/platform/NativeImage$InternalGlFormat;III)V a
	prepareImage (Lcom/mojang/blaze3d/platform/NativeImage$InternalGlFormat;IIII)V a
	readResource (Ljava/io/InputStream;)Ljava/nio/ByteBuffer; a
	readResourceAsString (Ljava/io/InputStream;)Ljava/lang/String; b
	releaseTextureId (I)V a
com/mojang/blaze3d/platform/VideoMode dev
	PATTERN g
	blueBits e
	greenBits d
	height b
	redBits c
	refreshRate f
	width a
	getBlueBits ()I e
	getGreenBits ()I d
	getHeight ()I b
	getRedBits ()I c
	getRefreshRate ()I f
	getWidth ()I a
	read (Ljava/lang/String;)Ljava/util/Optional; a
	write ()Ljava/lang/String; g
com/mojang/blaze3d/platform/Window dew
	LOGGER a
	actuallyFullscreen l
	defaultErrorCallback b
	dirty w
	errorSection v
	eventHandler c
	framebufferHeight r
	framebufferWidth q
	framerateLimit x
	fullscreen k
	guiScale u
	guiScaledHeight t
	guiScaledWidth s
	height p
	preferredFullscreenVideoMode j
	screenManager d
	vsync y
	width o
	window e
	windowedHeight i
	windowedWidth h
	windowedX f
	windowedY g
	x m
	y n
	bootCrash (IJ)V b
	calculateScale (IZ)I a
	changeFullscreenVideoMode ()V g
	checkGlfwError (Ljava/util/function/BiConsumer;)V a
	defaultErrorCallback (IJ)V a
	findBestMonitor ()Lcom/mojang/blaze3d/platform/Monitor; t
	getFramerateLimit ()I d
	getGuiScale ()D s
	getGuiScaledHeight ()I p
	getGuiScaledWidth ()I o
	getHeight ()I l
	getPreferredFullscreenVideoMode ()Ljava/util/Optional; f
	getRefreshRate ()I a
	getScreenHeight ()I n
	getScreenWidth ()I m
	getWidth ()I k
	getWindow ()J i
	getX ()I q
	getY ()I r
	isFullscreen ()Z j
	onEnter (JZ)V b
	onFocus (JZ)V a
	onFramebufferResize (JII)V b
	onMove (JII)V a
	onResize (JII)V c
	readIconPixels (Ljava/io/InputStream;Ljava/nio/IntBuffer;Ljava/nio/IntBuffer;Ljava/nio/IntBuffer;)Ljava/nio/ByteBuffer; a
	refreshFramebufferSize ()V v
	setBootErrorCallback ()V u
	setDefaultErrorCallback ()V c
	setErrorSection (Ljava/lang/String;)V a
	setFramerateLimit (I)V a
	setGuiScale (D)V a
	setHeight (I)V c
	setIcon (Ljava/io/InputStream;Ljava/io/InputStream;)V a
	setMode ()V w
	setPreferredFullscreenVideoMode (Ljava/util/Optional;)V a
	setTitle (Ljava/lang/String;)V b
	setWidth (I)V b
	shouldClose ()Z b
	toggleFullScreen ()V h
	updateDisplay ()V e
	updateFullscreen (Z)V c
	updateRawMouseInput (Z)V b
	updateVsync (Z)V a
com/mojang/blaze3d/platform/Window$WindowInitFailed dew$a
com/mojang/blaze3d/platform/WindowEventHandler dex
	cursorEntered ()V b
	resizeDisplay ()V a
	setWindowActive (Z)V a
com/mojang/blaze3d/shaders/AbstractUniform dey
	set (F)V a
	set (FF)V a
	set (FFF)V a
	set (FFFF)V a
	set (Lcom/mojang/math/Matrix4f;)V a
	set ([F)V a
	setSafe (FFFF)V b
	setSafe (IIII)V a
com/mojang/blaze3d/shaders/BlendMode dez
	blendFunc f
	dstAlphaFactor e
	dstColorFactor d
	lastApplied a
	opaque h
	separateBlend g
	srcAlphaFactor c
	srcColorFactor b
	apply ()V a
	isOpaque ()Z b
	stringToBlendFactor (Ljava/lang/String;)I b
	stringToBlendFunc (Ljava/lang/String;)I a
com/mojang/blaze3d/shaders/Effect dfa
	getFragmentProgram ()Lcom/mojang/blaze3d/shaders/Program; d
	getId ()I a
	getVertexProgram ()Lcom/mojang/blaze3d/shaders/Program; c
	markDirty ()V b
com/mojang/blaze3d/shaders/Program dfb
	id c
	name b
	references d
	type a
	attachToEffect (Lcom/mojang/blaze3d/shaders/Effect;)V a
	close ()V a
	compileShader (Lcom/mojang/blaze3d/shaders/Program$Type;Ljava/lang/String;Ljava/io/InputStream;Ljava/lang/String;)Lcom/mojang/blaze3d/shaders/Program; a
	getName ()Ljava/lang/String; b
com/mojang/blaze3d/shaders/Program$Type dfb$a
	$VALUES g
	FRAGMENT b
	VERTEX a
	extension d
	glType e
	name c
	programs f
	getExtension ()Ljava/lang/String; b
	getGlType ()I d
	getName ()Ljava/lang/String; a
	getPrograms ()Ljava/util/Map; c
com/mojang/blaze3d/shaders/ProgramManager dfc
	LOGGER a
	createProgram ()I a
	glUseProgram (I)V a
	linkProgram (Lcom/mojang/blaze3d/shaders/Effect;)V b
	releaseProgram (Lcom/mojang/blaze3d/shaders/Effect;)V a
com/mojang/blaze3d/shaders/Uniform dfd
	LOGGER a
	count c
	dirty h
	floatValues f
	intValues e
	location b
	name g
	parent i
	type d
	getName ()Ljava/lang/String; a
	getTypeFromString (Ljava/lang/String;)I a
	glGetAttribLocation (ILjava/lang/CharSequence;)I b
	glGetUniformLocation (ILjava/lang/CharSequence;)I a
	markDirty ()V c
	set (F)V a
	set (FF)V a
	set (FFF)V a
	set (FFFF)V a
	set (Lcom/mojang/math/Matrix4f;)V a
	set ([F)V a
	setLocation (I)V a
	setSafe (FFFF)V b
	setSafe (IIII)V a
	upload ()V b
	uploadAsFloat ()V e
	uploadAsInteger ()V d
	uploadAsMatrix ()V f
	uploadInteger (II)V a
com/mojang/blaze3d/vertex/BufferBuilder dfe
	LOGGER g
	buffer h
	building u
	currentElement o
	elementIndex p
	fastFormat s
	format r
	fullFormat t
	lastRenderedCountIndex j
	mode q
	nextElementByte l
	totalRenderedBytes k
	totalUploadedBytes m
	vertexCounts i
	vertices n
	begin (ILcom/mojang/blaze3d/vertex/VertexFormat;)V a
	building ()Z j
	clear ()V g
	color (IIII)Lcom/mojang/blaze3d/vertex/VertexConsumer; a
	currentElement ()Lcom/mojang/blaze3d/vertex/VertexFormatElement; i
	discard ()V h
	end ()V c
	endVertex ()V d
	ensureCapacity (I)V c
	ensureVertexCapacity ()V a
	getQuadDistanceFromPlayer (Ljava/nio/FloatBuffer;FFFII)F a
	getState ()Lcom/mojang/blaze3d/vertex/BufferBuilder$State; b
	limitToVertex (Ljava/nio/FloatBuffer;I)V a
	nextElement ()V e
	popNextBuffer ()Lcom/mojang/datafixers/util/Pair; f
	putByte (IB)V a
	putFloat (IF)V a
	putShort (IS)V a
	restoreState (Lcom/mojang/blaze3d/vertex/BufferBuilder$State;)V a
	roundUp (I)I d
	sortQuads (FFF)V a
	switchFormat (Lcom/mojang/blaze3d/vertex/VertexFormat;)V a
	vertex (FFFFFFFFFIIFFF)V a
com/mojang/blaze3d/vertex/BufferBuilder$DrawState dfe$a
	format a
	mode c
	vertexCount b
	format ()Lcom/mojang/blaze3d/vertex/VertexFormat; a
	mode ()I c
	vertexCount ()I b
com/mojang/blaze3d/vertex/BufferBuilder$State dfe$b
	data a
	format b
com/mojang/blaze3d/vertex/BufferUploader dff
	_end (Ljava/nio/ByteBuffer;ILcom/mojang/blaze3d/vertex/VertexFormat;I)V a
	end (Lcom/mojang/blaze3d/vertex/BufferBuilder;)V a
com/mojang/blaze3d/vertex/BufferVertexConsumer dfg
	color (IIII)Lcom/mojang/blaze3d/vertex/VertexConsumer; a
	currentElement ()Lcom/mojang/blaze3d/vertex/VertexFormatElement; i
	nextElement ()V e
	normal (FFF)Lcom/mojang/blaze3d/vertex/VertexConsumer; b
	normalIntValue (F)B a
	overlayCoords (II)Lcom/mojang/blaze3d/vertex/VertexConsumer; a
	putByte (IB)V a
	putFloat (IF)V a
	putShort (IS)V a
	uv (FF)Lcom/mojang/blaze3d/vertex/VertexConsumer; a
	uv2 (II)Lcom/mojang/blaze3d/vertex/VertexConsumer; b
	uvShort (SSI)Lcom/mojang/blaze3d/vertex/VertexConsumer; a
	vertex (DDD)Lcom/mojang/blaze3d/vertex/VertexConsumer; a
com/mojang/blaze3d/vertex/DefaultVertexFormat dfh
	BLOCK h
	ELEMENT_COLOR b
	ELEMENT_NORMAL f
	ELEMENT_PADDING g
	ELEMENT_POSITION a
	ELEMENT_UV0 c
	ELEMENT_UV1 d
	ELEMENT_UV2 e
	NEW_ENTITY i
	PARTICLE j
	POSITION k
	POSITION_COLOR l
	POSITION_COLOR_LIGHTMAP m
	POSITION_COLOR_TEX o
	POSITION_COLOR_TEX_LIGHTMAP q
	POSITION_TEX n
	POSITION_TEX_COLOR p
	POSITION_TEX_COLOR_NORMAL s
	POSITION_TEX_LIGHTMAP_COLOR r
com/mojang/blaze3d/vertex/DefaultedVertexConsumer dfi
	defaultA e
	defaultB d
	defaultColorSet a
	defaultG c
	defaultR b
	defaultColor (IIII)V b
	unsetDefaultColor ()V k
com/mojang/blaze3d/vertex/PoseStack dfj
	poseStack a
	clear ()Z d
	last ()Lcom/mojang/blaze3d/vertex/PoseStack$Pose; c
	mulPose (Lcom/mojang/math/Quaternion;)V a
	popPose ()V b
	pushPose ()V a
	scale (FFF)V a
	translate (DDD)V a
com/mojang/blaze3d/vertex/PoseStack$Pose dfj$a
	normal b
	pose a
	normal ()Lcom/mojang/math/Matrix3f; b
	pose ()Lcom/mojang/math/Matrix4f; a
com/mojang/blaze3d/vertex/SheetedDecalTextureGenerator dfk
	cameraInversePose h
	delegate g
	lightCoords o
	normalInversePose i
	nx p
	ny q
	nz r
	overlayU m
	overlayV n
	x j
	y k
	z l
	color (IIII)Lcom/mojang/blaze3d/vertex/VertexConsumer; a
	endVertex ()V d
	normal (FFF)Lcom/mojang/blaze3d/vertex/VertexConsumer; b
	overlayCoords (II)Lcom/mojang/blaze3d/vertex/VertexConsumer; a
	resetState ()V a
	uv (FF)Lcom/mojang/blaze3d/vertex/VertexConsumer; a
	uv2 (II)Lcom/mojang/blaze3d/vertex/VertexConsumer; b
	vertex (DDD)Lcom/mojang/blaze3d/vertex/VertexConsumer; a
com/mojang/blaze3d/vertex/Tesselator dfl
	INSTANCE b
	builder a
	end ()V b
	getBuilder ()Lcom/mojang/blaze3d/vertex/BufferBuilder; c
	getInstance ()Lcom/mojang/blaze3d/vertex/Tesselator; a
com/mojang/blaze3d/vertex/VertexBuffer dfm
	format b
	id a
	vertexCount c
	bind ()V a
	draw (Lcom/mojang/math/Matrix4f;I)V a
	unbind ()V b
	upload (Lcom/mojang/blaze3d/vertex/BufferBuilder;)V a
	uploadLater (Lcom/mojang/blaze3d/vertex/BufferBuilder;)Ljava/util/concurrent/CompletableFuture; b
	upload_ (Lcom/mojang/blaze3d/vertex/BufferBuilder;)V c
com/mojang/blaze3d/vertex/VertexConsumer dfn
	LOGGER f
	color (FFFF)Lcom/mojang/blaze3d/vertex/VertexConsumer; a
	color (IIII)Lcom/mojang/blaze3d/vertex/VertexConsumer; a
	defaultColor (IIII)V b
	endVertex ()V d
	normal (FFF)Lcom/mojang/blaze3d/vertex/VertexConsumer; b
	normal (Lcom/mojang/math/Matrix3f;FFF)Lcom/mojang/blaze3d/vertex/VertexConsumer; a
	overlayCoords (I)Lcom/mojang/blaze3d/vertex/VertexConsumer; b
	overlayCoords (II)Lcom/mojang/blaze3d/vertex/VertexConsumer; a
	putBulkData (Lcom/mojang/blaze3d/vertex/PoseStack$Pose;Lnet/minecraft/client/renderer/block/model/BakedQuad;FFFII)V a
	putBulkData (Lcom/mojang/blaze3d/vertex/PoseStack$Pose;Lnet/minecraft/client/renderer/block/model/BakedQuad;[FFFF[IIZ)V a
	unsetDefaultColor ()V k
	uv (FF)Lcom/mojang/blaze3d/vertex/VertexConsumer; a
	uv2 (I)Lcom/mojang/blaze3d/vertex/VertexConsumer; a
	uv2 (II)Lcom/mojang/blaze3d/vertex/VertexConsumer; b
	vertex (DDD)Lcom/mojang/blaze3d/vertex/VertexConsumer; a
	vertex (FFFFFFFFFIIFFF)V a
	vertex (Lcom/mojang/math/Matrix4f;FFF)Lcom/mojang/blaze3d/vertex/VertexConsumer; a
com/mojang/blaze3d/vertex/VertexFormat dfo
	elements a
	offsets b
	vertexSize c
	clearBufferState ()V d
	getElements ()Lcom/google/common/collect/ImmutableList; c
	getIntegerSize ()I a
	getVertexSize ()I b
	setupBufferState (J)V a
com/mojang/blaze3d/vertex/VertexFormatElement dfp
	LOGGER a
	byteSize f
	count e
	index d
	type b
	usage c
	clearBufferState ()V e
	getByteSize ()I d
	getIndex ()I c
	getType ()Lcom/mojang/blaze3d/vertex/VertexFormatElement$Type; a
	getUsage ()Lcom/mojang/blaze3d/vertex/VertexFormatElement$Usage; b
	setupBufferState (JI)V a
	supportsUsage (ILcom/mojang/blaze3d/vertex/VertexFormatElement$Usage;)Z a
com/mojang/blaze3d/vertex/VertexFormatElement$Type dfp$a
	$VALUES k
	BYTE c
	FLOAT a
	INT g
	SHORT e
	UBYTE b
	UINT f
	USHORT d
	glType j
	name i
	size h
	getGlType ()I c
	getName ()Ljava/lang/String; b
	getSize ()I a
com/mojang/blaze3d/vertex/VertexFormatElement$Usage dfp$b
	$VALUES j
	COLOR c
	GENERIC f
	NORMAL b
	PADDING e
	POSITION a
	UV d
	clearState i
	name g
	setupState h
	clearBufferState (I)V a
	getName ()Ljava/lang/String; a
	setupBufferState (IIIJI)V a
com/mojang/blaze3d/vertex/VertexFormatElement$Usage$SetupState dfp$b$a
com/mojang/blaze3d/vertex/VertexMultiConsumer dfq
	create (Lcom/mojang/blaze3d/vertex/VertexConsumer;Lcom/mojang/blaze3d/vertex/VertexConsumer;)Lcom/mojang/blaze3d/vertex/VertexConsumer; a
com/mojang/blaze3d/vertex/VertexMultiConsumer$Double dfq$a
	first a
	second b
	color (IIII)Lcom/mojang/blaze3d/vertex/VertexConsumer; a
	defaultColor (IIII)V b
	endVertex ()V d
	normal (FFF)Lcom/mojang/blaze3d/vertex/VertexConsumer; b
	overlayCoords (II)Lcom/mojang/blaze3d/vertex/VertexConsumer; a
	unsetDefaultColor ()V k
	uv (FF)Lcom/mojang/blaze3d/vertex/VertexConsumer; a
	uv2 (II)Lcom/mojang/blaze3d/vertex/VertexConsumer; b
	vertex (DDD)Lcom/mojang/blaze3d/vertex/VertexConsumer; a
	vertex (FFFFFFFFFIIFFF)V a
com/mojang/math/Matrix3f a
	CS k
	G j
	SQ2 m
	SS l
	m00 a
	m01 b
	m02 c
	m10 d
	m11 e
	m12 f
	m20 g
	m21 h
	m22 i
	adjugateAndDet ()F e
	approxGivensQuat (FFF)Lcom/mojang/datafixers/util/Pair; a
	copy ()Lcom/mojang/math/Matrix3f; d
	createScaleMatrix (FFF)Lcom/mojang/math/Matrix3f; b
	invert ()Z f
	load (Lcom/mojang/math/Matrix3f;)V a
	mul (F)V a
	mul (Lcom/mojang/math/Matrix3f;)V b
	mul (Lcom/mojang/math/Quaternion;)V a
	qrGivensQuat (FF)Lcom/mojang/datafixers/util/Pair; a
	set (IIF)V a
	setIdentity ()V c
	stepJacobi (Lcom/mojang/math/Matrix3f;)Lcom/mojang/math/Quaternion; c
	svdDecompose ()Lorg/apache/commons/lang3/tuple/Triple; b
	transpose ()V a
com/mojang/math/Matrix4f b
	m00 a
	m01 b
	m02 c
	m03 d
	m10 e
	m11 f
	m12 g
	m13 h
	m20 i
	m21 j
	m22 k
	m23 l
	m30 m
	m31 n
	m32 o
	m33 p
	adjugateAndDet ()F b
	bufferIndex (II)I a
	copy ()Lcom/mojang/math/Matrix4f; d
	createScaleMatrix (FFF)Lcom/mojang/math/Matrix4f; a
	createTranslateMatrix (FFF)Lcom/mojang/math/Matrix4f; b
	invert ()Z c
	multiply (F)V a
	multiply (Lcom/mojang/math/Matrix4f;)V a
	multiply (Lcom/mojang/math/Quaternion;)V a
	orthographic (FFFF)Lcom/mojang/math/Matrix4f; a
	perspective (DFFF)Lcom/mojang/math/Matrix4f; a
	setIdentity ()V a
	store (Ljava/nio/FloatBuffer;)V a
	translate (Lcom/mojang/math/Vector3f;)V a
	transpose ()V e
com/mojang/math/OctahedralGroup c
	$VALUES af
	IDENTITY a
	INVERSION y
	INVERT_X z
	INVERT_Y A
	INVERT_Z B
	ROT_120_NNN e
	ROT_120_NNP f
	ROT_120_NPN g
	ROT_120_NPP h
	ROT_120_PNN i
	ROT_120_PNP j
	ROT_120_PPN k
	ROT_120_PPP l
	ROT_180_EDGE_XY_NEG m
	ROT_180_EDGE_XY_POS n
	ROT_180_EDGE_XZ_NEG o
	ROT_180_EDGE_XZ_POS p
	ROT_180_EDGE_YZ_NEG q
	ROT_180_EDGE_YZ_POS r
	ROT_180_FACE_XY b
	ROT_180_FACE_XZ c
	ROT_180_FACE_YZ d
	ROT_60_REF_NNN C
	ROT_60_REF_NNP D
	ROT_60_REF_NPN E
	ROT_60_REF_NPP F
	ROT_60_REF_PNN G
	ROT_60_REF_PNP H
	ROT_60_REF_PPN I
	ROT_60_REF_PPP J
	ROT_90_REF_X_NEG Q
	ROT_90_REF_X_POS R
	ROT_90_REF_Y_NEG S
	ROT_90_REF_Y_POS T
	ROT_90_REF_Z_NEG U
	ROT_90_REF_Z_POS V
	ROT_90_X_NEG s
	ROT_90_X_POS t
	ROT_90_Y_NEG u
	ROT_90_Y_POS v
	ROT_90_Z_NEG w
	ROT_90_Z_POS x
	SWAP_NEG_XY N
	SWAP_NEG_XZ P
	SWAP_NEG_YZ O
	SWAP_XY K
	SWAP_XZ M
	SWAP_YZ L
	cayleyTable ad
	inverseTable ae
	invertX Z
	invertY aa
	invertZ ab
	name X
	permutation ac
	rotatedDirections Y
	transformation W
	compose (Lcom/mojang/math/OctahedralGroup;)Lcom/mojang/math/OctahedralGroup; a
	getSerializedName ()Ljava/lang/String; a
	inverts (Lnet/minecraft/core/Direction$Axis;)Z a
	packInversions ()Lit/unimi/dsi/fastutil/booleans/BooleanList; b
	rotate (Lnet/minecraft/core/Direction;)Lnet/minecraft/core/Direction; a
	rotate (Lnet/minecraft/core/FrontAndTop;)Lnet/minecraft/core/FrontAndTop; a
com/mojang/math/Quaternion d
	ONE a
	i b
	j c
	k d
	r e
	conj ()V e
	copy ()Lcom/mojang/math/Quaternion; g
	cos (F)F b
	i ()F a
	j ()F b
	k ()F c
	mul (F)V a
	mul (Lcom/mojang/math/Quaternion;)V a
	normalize ()V f
	r ()F d
	set (FFFF)V a
	sin (F)F c
com/mojang/math/SymmetricGroup3 e
	$VALUES j
	P123 a
	P132 c
	P213 b
	P231 d
	P312 e
	P321 f
	cayleyTable i
	permutation g
	transformation h
	compose (Lcom/mojang/math/SymmetricGroup3;)Lcom/mojang/math/SymmetricGroup3; a
	permutation (I)I a
	transformation ()Lcom/mojang/math/Matrix3f; a
com/mojang/math/Transformation f
	IDENTITY g
	decomposed b
	leftRotation d
	matrix a
	rightRotation f
	scale e
	translation c
	compose (Lcom/mojang/math/Transformation;)Lcom/mojang/math/Transformation; a
	compose (Lcom/mojang/math/Vector3f;Lcom/mojang/math/Quaternion;Lcom/mojang/math/Vector3f;Lcom/mojang/math/Quaternion;)Lcom/mojang/math/Matrix4f; a
	ensureDecomposed ()V e
	getLeftRotation ()Lcom/mojang/math/Quaternion; d
	getMatrix ()Lcom/mojang/math/Matrix4f; c
	identity ()Lcom/mojang/math/Transformation; a
	inverse ()Lcom/mojang/math/Transformation; b
	toAffine (Lcom/mojang/math/Matrix4f;)Lcom/mojang/datafixers/util/Pair; a
com/mojang/math/Vector3d dfr
	x a
	y b
	z c
com/mojang/math/Vector3f g
	XN a
	XP b
	YN c
	YP d
	ZN e
	ZP f
	x g
	y h
	z i
	add (FFF)V c
	add (Lcom/mojang/math/Vector3f;)V a
	clamp (FF)V a
	copy ()Lcom/mojang/math/Vector3f; e
	cross (Lcom/mojang/math/Vector3f;)V d
	dot (Lcom/mojang/math/Vector3f;)F c
	lerp (Lcom/mojang/math/Vector3f;F)V a
	map (Lit/unimi/dsi/fastutil/floats/Float2FloatFunction;)V a
	mul (F)V b
	mul (FFF)V b
	normalize ()Z d
	rotation (F)Lcom/mojang/math/Quaternion; c
	rotationDegrees (F)Lcom/mojang/math/Quaternion; a
	set (FFF)V a
	sub (Lcom/mojang/math/Vector3f;)V b
	transform (Lcom/mojang/math/Matrix3f;)V a
	transform (Lcom/mojang/math/Quaternion;)V a
	x ()F a
	y ()F b
	z ()F c
com/mojang/math/Vector4f h
	w d
	x a
	y b
	z c
	dot (Lcom/mojang/math/Vector4f;)F a
	mul (Lcom/mojang/math/Vector3f;)V a
	normalize ()Z e
	perspectiveDivide ()V f
	set (FFFF)V a
	transform (Lcom/mojang/math/Matrix4f;)V a
	transform (Lcom/mojang/math/Quaternion;)V a
	w ()F d
	x ()F a
	y ()F b
	z ()F c
com/mojang/realmsclient/KeyCombo dfs
	chars a
	matchIndex b
	onCompletion c
	keyPressed (C)Z a
	reset ()V a
com/mojang/realmsclient/RealmsMainScreen dft
	BUTTON_LOCATION D
	CONFIGURE_LOCATION w
	CONFIGURE_SERVER_TOOLTIP U
	CROSS_ICON_LOCATION B
	DARKEN_LOCATION A
	EXPIRED_ICON_LOCATION p
	EXPIRES_SOON_ICON_LOCATION q
	INVITATION_ICONS_LOCATION s
	INVITE_ICON_LOCATION t
	LEAVE_ICON_LOCATION r
	LEAVE_SERVER_TOOLTIP T
	LOGGER a
	LOGO_LOCATION v
	NEWS_LOCATION y
	NEWS_TOOLTIP W
	NO_PENDING_INVITES_TEXT E
	OFF_ICON_LOCATION c
	ON_ICON_LOCATION b
	PENDING_INVITES_TEXT F
	POPUP_LOCATION z
	POPUP_TEXT N
	QUESTIONMARK_LOCATION x
	REALMS_DATA_FETCHER Y
	SELECT_MINIGAME_PREFIX M
	SERVER_CLOSED_TOOLTIP S
	SERVER_EXPIRED_TOOLTIP O
	SERVER_EXPIRES_IN_DAY_TOOLTIP Q
	SERVER_EXPIRES_SOON_TOOLTIP P
	SERVER_INFO_TOOLTIP V
	SERVER_OPEN_TOOLTIP R
	SERVER_UNITIALIZED_TEXT H
	SUBSCRIPTION_CREATE_TEXT L
	SUBSCRIPTION_EXPIRED_TEXT I
	SUBSCRIPTION_RENEW_TEXT J
	TRIAL_EXPIRED_TEXT K
	TRIAL_ICON_LOCATION C
	TRIAL_MESSAGE_LINES G
	WORLDICON_LOCATION u
	animTick at
	backButton am
	buyARealmButton aO
	carouselIndex aC
	carouselTick aD
	checkedClientCompatability ad
	checkedParentalConsent ac
	clicks aG
	closeButton aP
	configureButton ao
	connectLock aH
	createTrialButton aN
	createdTrial ay
	dontSetConnectedToRealms ah
	formattedPopup aI
	hasFetchedServers au
	hasParentalConsent ab
	hasSwitchedCarouselImage aE
	hasUnreadNews aA
	hoveredElement aJ
	inviteNarrationLimiter ag
	justClosedPopup aw
	keyCombos aF
	lastScreen ai
	lastScrollYPosition aa
	leaveButton ap
	newsButton aM
	newsLink aB
	numberOfPendingInvites as
	overrideConfigure Z
	pendingInvitesButton aL
	playButton al
	popupOpenedByUser av
	realmSelectionList aj
	realmsGenericErrorScreen ae
	realmsServers ar
	regionsPinged af
	renewButton an
	selectedServerId ak
	showPopupButton aK
	showingPopup az
	teaserImages X
	toolTip aq
	trialsAvailable ax
	addButtons ()V c
	charTyped (CI)Z a
	checkClientCompatability ()V H
	checkParentalConsent ()V J
	checkUnreadNews ()V I
	configureClicked (Lcom/mojang/realmsclient/dto/RealmsServer;)V f
	drawClose (Lcom/mojang/blaze3d/vertex/PoseStack;IIII)V e
	drawConfigure (Lcom/mojang/blaze3d/vertex/PoseStack;IIII)V g
	drawExpired (Lcom/mojang/blaze3d/vertex/PoseStack;IIII)V c
	drawExpiring (Lcom/mojang/blaze3d/vertex/PoseStack;IIIII)V b
	drawInvitationPendingIcon (Lcom/mojang/blaze3d/vertex/PoseStack;IIIIZZ)V a
	drawLeave (Lcom/mojang/blaze3d/vertex/PoseStack;IIII)V f
	drawOpen (Lcom/mojang/blaze3d/vertex/PoseStack;IIII)V d
	drawPopup (Lcom/mojang/blaze3d/vertex/PoseStack;II)V b
	drawRealmsLogo (Lcom/mojang/blaze3d/vertex/PoseStack;II)V a
	findServer (J)Lcom/mojang/realmsclient/dto/RealmsServer; a
	getOwnedNonExpiredWorldIds ()Ljava/util/List; F
	hasParentalConsent ()Z C
	inPendingInvitationArea (DD)Z c
	init ()V b
	isOutsidePopup (DD)Z a
	isSelfOwnedNonExpiredServer (Lcom/mojang/realmsclient/dto/RealmsServer;)Z j
	isSelfOwnedServer (Lcom/mojang/realmsclient/dto/RealmsServer;)Z i
	keyPressed (III)Z a
	leaveClicked (Lcom/mojang/realmsclient/dto/RealmsServer;)V g
	leaveServer (Z)V d
	mouseClicked (DDI)Z a
	newScreen ()Lcom/mojang/realmsclient/RealmsMainScreen; g
	onClosePopup ()V P
	onRenew ()V G
	pendingButtonPress (Lnet/minecraft/client/gui/components/Button;)V a
	pingRegions ()V E
	play (Lcom/mojang/realmsclient/dto/RealmsServer;Lnet/minecraft/client/gui/screens/Screen;)V a
	popupX0 ()I Q
	popupY0 ()I R
	removeSelection ()V ar_
	removeServer (Lcom/mojang/realmsclient/dto/RealmsServer;)V h
	removed ()V e
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V a
	renderLocal (Lcom/mojang/blaze3d/vertex/PoseStack;)V b
	renderMoreInfo (Lcom/mojang/blaze3d/vertex/PoseStack;IIIIZ)V a
	renderMousehoverTooltip (Lcom/mojang/blaze3d/vertex/PoseStack;Ljava/util/List;II)V a
	renderNews (Lcom/mojang/blaze3d/vertex/PoseStack;IIZIIZZ)V a
	renderStage (Lcom/mojang/blaze3d/vertex/PoseStack;)V c
	saveListScrollPosition ()V O
	setTooltip ([Lnet/minecraft/network/chat/Component;)V a
	shouldConfigureButtonBeVisible (Lcom/mojang/realmsclient/dto/RealmsServer;)Z d
	shouldLeaveButtonBeVisible (Lcom/mojang/realmsclient/dto/RealmsServer;)Z e
	shouldPlayButtonBeActive (Lcom/mojang/realmsclient/dto/RealmsServer;)Z b
	shouldRenewButtonBeActive (Lcom/mojang/realmsclient/dto/RealmsServer;)Z c
	shouldShowMessageInList ()Z B
	shouldShowPopup ()Z aq_
	shouldShowPopupButton ()Z D
	stopRealmsFetcher ()V N
	switchToLocal ()V L
	switchToProd ()V M
	switchToStage ()V K
	tick ()V d
	updateButtonStates (Lcom/mojang/realmsclient/dto/RealmsServer;)V a
	updateTeaserImages (Lnet/minecraft/server/packs/resources/ResourceManager;)V a
com/mojang/realmsclient/RealmsMainScreen$CloseButton dft$a
	renderButton (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V b
com/mojang/realmsclient/RealmsMainScreen$Entry dft$b
com/mojang/realmsclient/RealmsMainScreen$HoveredElement dft$c
	$VALUES e
	CONFIGURE d
	EXPIRED b
	LEAVE c
	NONE a
com/mojang/realmsclient/RealmsMainScreen$NewsButton dft$d
	renderButton (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V b
com/mojang/realmsclient/RealmsMainScreen$PendingInvitesButton dft$e
	renderButton (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V b
	tick ()V d
com/mojang/realmsclient/RealmsMainScreen$RealmSelectionList dft$f
	showingMessage o
	addMessageEntry (Lcom/mojang/realmsclient/RealmsMainScreen$Entry;)I a
	clear ()V a
	getMaxPosition ()I c
	getRowWidth ()I d
	isFocused ()Z b
	itemClicked (IIDDI)V a
	keyPressed (III)Z a
	mouseClicked (DDI)Z a
	selectItem (I)V a
	setSelected (Lcom/mojang/realmsclient/RealmsMainScreen$Entry;)V b
	setSelected (Lnet/minecraft/client/gui/components/AbstractSelectionList$Entry;)V a
com/mojang/realmsclient/RealmsMainScreen$ServerEntry dft$g
	serverData c
	mouseClicked (DDI)Z a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIIIIIIZF)V a
	renderLegacy (Lcom/mojang/realmsclient/dto/RealmsServer;Lcom/mojang/blaze3d/vertex/PoseStack;IIII)V b
	renderMcoServerItem (Lcom/mojang/realmsclient/dto/RealmsServer;Lcom/mojang/blaze3d/vertex/PoseStack;IIII)V a
com/mojang/realmsclient/RealmsMainScreen$ShowPopupButton dft$h
	renderButton (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V b
com/mojang/realmsclient/RealmsMainScreen$TrialEntry dft$i
	mouseClicked (DDI)Z a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIIIIIIZF)V a
	renderTrialItem (Lcom/mojang/blaze3d/vertex/PoseStack;IIIII)V a
com/mojang/realmsclient/Unit dfu
	$VALUES e
	B a
	GB d
	KB b
	MB c
	convertTo (JLcom/mojang/realmsclient/Unit;)D a
	getLargest (J)Lcom/mojang/realmsclient/Unit; a
	humanReadable (J)Ljava/lang/String; b
	humanReadable (JLcom/mojang/realmsclient/Unit;)Ljava/lang/String; b
com/mojang/realmsclient/client/FileDownload dfv
	INVALID_FILE_NAMES k
	LOGGER a
	cancelled b
	currentThread i
	error d
	extracting e
	finished c
	request h
	requestConfig j
	resourcePackPath g
	tempFile f
	cancel ()V a
	contentLength (Ljava/lang/String;)J a
	deletePlayerTag (Ljava/io/File;)V a
	download (Lcom/mojang/realmsclient/dto/WorldDownload;Ljava/lang/String;Lcom/mojang/realmsclient/gui/screens/RealmsDownloadLatestWorldScreen$DownloadStatus;Lnet/minecraft/world/level/storage/LevelStorageSource;)V a
	findAvailableFolderName (Ljava/lang/String;)Ljava/lang/String; b
	isError ()Z c
	isExtracting ()Z d
	isFinished ()Z b
	untarGzipArchive (Ljava/lang/String;Ljava/io/File;Lnet/minecraft/world/level/storage/LevelStorageSource;)V a
com/mojang/realmsclient/client/FileDownload$DownloadCountingOutputStream dfv$a
	listener b
	setListener (Ljava/awt/event/ActionListener;)V a
com/mojang/realmsclient/client/FileDownload$ProgressListener dfv$b
	downloadStatus e
	levelStorageSource d
	tempFile c
	worldName b
com/mojang/realmsclient/client/FileDownload$ResourcePackProgressListener dfv$c
	downloadStatus c
	tempFile b
	worldDownload d
com/mojang/realmsclient/client/FileUpload dfw
	LOGGER a
	cancelled j
	clientVersion h
	file b
	requestConfig l
	sessionId f
	slotId d
	uploadInfo e
	uploadStatus i
	uploadTask k
	username g
	worldId c
	cancel ()V a
	cleanup (Lorg/apache/http/client/methods/HttpPost;Lorg/apache/http/impl/client/CloseableHttpClient;)V a
	getRetryDelaySeconds (Lorg/apache/http/HttpResponse;)J a
	handleResponse (Lorg/apache/http/HttpResponse;Lcom/mojang/realmsclient/gui/screens/UploadResult$Builder;)V a
	isFinished ()Z b
	requestUpload (I)Lcom/mojang/realmsclient/gui/screens/UploadResult; a
	retryUploadAfter (JI)Lcom/mojang/realmsclient/gui/screens/UploadResult; b
	setupRequest (Lorg/apache/http/client/methods/HttpPost;)V a
	shouldRetry (JI)Z a
	upload (Ljava/util/function/Consumer;)V a
com/mojang/realmsclient/client/FileUpload$CustomInputStreamEntity dfw$a
	content b
	length a
	uploadStatus c
com/mojang/realmsclient/client/Ping dfx
	close (Ljava/net/Socket;)V a
	now ()J b
	ping (Ljava/lang/String;)I a
	ping ([Lcom/mojang/realmsclient/client/Ping$Region;)Ljava/util/List; a
	pingAllRegions ()Ljava/util/List; a
com/mojang/realmsclient/client/Ping$Region dfx$a
	$VALUES k
	AP_NORTHEAST_1 g
	AP_SOUTHEAST_1 e
	AP_SOUTHEAST_2 f
	EU_WEST_1 d
	SA_EAST_1 h
	US_EAST_1 a
	US_WEST_1 c
	US_WEST_2 b
	endpoint j
	name i
com/mojang/realmsclient/client/RealmsClient dfy
	GSON f
	LOGGER c
	currentEnvironment a
	initialized b
	sessionId d
	username e
	acceptInvitation (Ljava/lang/String;)V a
	agreeToTos ()V l
	backupsFor (J)Lcom/mojang/realmsclient/dto/BackupList; d
	clientCompatible ()Lcom/mojang/realmsclient/client/RealmsClient$CompatibleVersionResponse; i
	close (J)Ljava/lang/Boolean; f
	create ()Lcom/mojang/realmsclient/client/RealmsClient; a
	deleteWorld (J)V h
	deop (JLjava/lang/String;)Lcom/mojang/realmsclient/dto/Ops; f
	execute (Lcom/mojang/realmsclient/client/Request;)Ljava/lang/String; a
	fetchWorldTemplates (IILcom/mojang/realmsclient/dto/RealmsServer$WorldType;)Lcom/mojang/realmsclient/dto/WorldTemplatePaginatedList; a
	getLiveStats ()Lcom/mojang/realmsclient/dto/RealmsServerPlayerLists; f
	getNews ()Lcom/mojang/realmsclient/dto/RealmsNews; m
	getOwnWorld (J)Lcom/mojang/realmsclient/dto/RealmsServer; a
	initializeWorld (JLjava/lang/String;Ljava/lang/String;)V a
	invite (JLjava/lang/String;)Lcom/mojang/realmsclient/dto/RealmsServer; b
	join (J)Lcom/mojang/realmsclient/dto/RealmsServerAddress; b
	listWorlds ()Lcom/mojang/realmsclient/dto/RealmsServerList; e
	mcoEnabled ()Ljava/lang/Boolean; g
	op (JLjava/lang/String;)Lcom/mojang/realmsclient/dto/Ops; e
	open (J)Ljava/lang/Boolean; e
	pendingInvites ()Lcom/mojang/realmsclient/dto/PendingInvitesList; k
	pendingInvitesCount ()I j
	putIntoMinigameMode (JLjava/lang/String;)Ljava/lang/Boolean; d
	rejectInvitation (Ljava/lang/String;)V b
	requestDownloadInfo (JI)Lcom/mojang/realmsclient/dto/WorldDownload; b
	requestUploadInfo (JLjava/lang/String;)Lcom/mojang/realmsclient/dto/UploadInfo; h
	resetWorldWithSeed (JLjava/lang/String;Ljava/lang/Integer;Z)Ljava/lang/Boolean; a
	resetWorldWithTemplate (JLjava/lang/String;)Ljava/lang/Boolean; g
	restoreWorld (JLjava/lang/String;)V c
	sendPingResults (Lcom/mojang/realmsclient/dto/PingResult;)V a
	stageAvailable ()Ljava/lang/Boolean; h
	subscriptionFor (J)Lcom/mojang/realmsclient/dto/Subscription; g
	switchSlot (JI)Z a
	switchToLocal ()V d
	switchToProd ()V c
	switchToStage ()V b
	trialAvailable ()Ljava/lang/Boolean; n
	uninvite (JLjava/lang/String;)V a
	uninviteMyselfFrom (J)V c
	update (JLjava/lang/String;Ljava/lang/String;)V b
	updateSlot (JILcom/mojang/realmsclient/dto/RealmsWorldOptions;)V a
	url (Ljava/lang/String;)Ljava/lang/String; c
	url (Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; a
com/mojang/realmsclient/client/RealmsClient$CompatibleVersionResponse dfy$a
	$VALUES d
	COMPATIBLE a
	OTHER c
	OUTDATED b
com/mojang/realmsclient/client/RealmsClient$Environment dfy$b
	$VALUES f
	LOCAL c
	PRODUCTION a
	STAGE b
	baseUrl d
	protocol e
com/mojang/realmsclient/client/RealmsClientConfig dfz
	proxy a
	getProxy ()Ljava/net/Proxy; a
	setProxy (Ljava/net/Proxy;)V a
com/mojang/realmsclient/client/RealmsError dga
	LOGGER a
	errorCode c
	errorMessage b
	create (Ljava/lang/String;)Lcom/mojang/realmsclient/client/RealmsError; a
	getErrorCode ()I b
	getErrorMessage ()Ljava/lang/String; a
com/mojang/realmsclient/client/Request dgb
	connected c
	connection a
	url b
	connect ()Lcom/mojang/realmsclient/client/Request; d
	cookie (Ljava/lang/String;Ljava/lang/String;)V a
	cookie (Ljava/net/HttpURLConnection;Ljava/lang/String;Ljava/lang/String;)V a
	delete (Ljava/lang/String;)Lcom/mojang/realmsclient/client/Request; b
	dispose ()V f
	doConnect ()Lcom/mojang/realmsclient/client/Request; e
	get (Ljava/lang/String;)Lcom/mojang/realmsclient/client/Request; a
	get (Ljava/lang/String;II)Lcom/mojang/realmsclient/client/Request; a
	getHeader (Ljava/lang/String;)Ljava/lang/String; c
	getHeader (Ljava/net/HttpURLConnection;Ljava/lang/String;)Ljava/lang/String; a
	getRetryAfterHeader ()I a
	getRetryAfterHeader (Ljava/net/HttpURLConnection;)I a
	post (Ljava/lang/String;Ljava/lang/String;)Lcom/mojang/realmsclient/client/Request; b
	post (Ljava/lang/String;Ljava/lang/String;II)Lcom/mojang/realmsclient/client/Request; a
	put (Ljava/lang/String;Ljava/lang/String;)Lcom/mojang/realmsclient/client/Request; c
	put (Ljava/lang/String;Ljava/lang/String;II)Lcom/mojang/realmsclient/client/Request; b
	read (Ljava/io/InputStream;)Ljava/lang/String; a
	responseCode ()I b
	text ()Ljava/lang/String; c
com/mojang/realmsclient/client/Request$Delete dgb$a
	doConnect ()Lcom/mojang/realmsclient/client/Request$Delete; f
	doConnect ()Lcom/mojang/realmsclient/client/Request; e
com/mojang/realmsclient/client/Request$Get dgb$b
	doConnect ()Lcom/mojang/realmsclient/client/Request$Get; f
	doConnect ()Lcom/mojang/realmsclient/client/Request; e
com/mojang/realmsclient/client/Request$Post dgb$c
	content c
	doConnect ()Lcom/mojang/realmsclient/client/Request$Post; f
	doConnect ()Lcom/mojang/realmsclient/client/Request; e
com/mojang/realmsclient/client/Request$Put dgb$d
	content c
	doConnect ()Lcom/mojang/realmsclient/client/Request$Put; f
	doConnect ()Lcom/mojang/realmsclient/client/Request; e
com/mojang/realmsclient/client/UploadStatus dgc
	bytesWritten a
	totalBytes b
com/mojang/realmsclient/dto/Backup dgd
	LOGGER f
	backupId a
	changeList e
	lastModifiedDate b
	metadata d
	size c
	uploadedVersion g
	format (Ljava/lang/String;)Ljava/lang/String; a
	isUploadedVersion ()Z a
	parse (Lcom/google/gson/JsonElement;)Lcom/mojang/realmsclient/dto/Backup; a
	setUploadedVersion (Z)V a
com/mojang/realmsclient/dto/BackupList dge
	LOGGER b
	backups a
	parse (Ljava/lang/String;)Lcom/mojang/realmsclient/dto/BackupList; a
com/mojang/realmsclient/dto/GuardedSerializer dgf
	gson a
	fromJson (Ljava/lang/String;Ljava/lang/Class;)Lcom/mojang/realmsclient/dto/ReflectionBasedSerialization; a
	toJson (Lcom/mojang/realmsclient/dto/ReflectionBasedSerialization;)Ljava/lang/String; a
com/mojang/realmsclient/dto/Ops dgg
	ops a
	parse (Ljava/lang/String;)Lcom/mojang/realmsclient/dto/Ops; a
com/mojang/realmsclient/dto/PendingInvite dgh
	LOGGER f
	date e
	invitationId a
	worldName b
	worldOwnerName c
	worldOwnerUuid d
	parse (Lcom/google/gson/JsonObject;)Lcom/mojang/realmsclient/dto/PendingInvite; a
com/mojang/realmsclient/dto/PendingInvitesList dgi
	LOGGER b
	pendingInvites a
	parse (Ljava/lang/String;)Lcom/mojang/realmsclient/dto/PendingInvitesList; a
com/mojang/realmsclient/dto/PingResult dgj
	pingResults a
	worldIds b
com/mojang/realmsclient/dto/PlayerInfo dgk
	accepted d
	name a
	online e
	operator c
	uuid b
	getAccepted ()Z d
	getName ()Ljava/lang/String; a
	getOnline ()Z e
	getUuid ()Ljava/lang/String; b
	isOperator ()Z c
	setAccepted (Z)V b
	setName (Ljava/lang/String;)V a
	setOnline (Z)V c
	setOperator (Z)V a
	setUuid (Ljava/lang/String;)V b
com/mojang/realmsclient/dto/RealmsDescriptionDto dgl
	description b
	name a
com/mojang/realmsclient/dto/RealmsNews dgm
	LOGGER b
	newsLink a
	parse (Ljava/lang/String;)Lcom/mojang/realmsclient/dto/RealmsNews; a
com/mojang/realmsclient/dto/RealmsServer dgn
	LOGGER s
	activeSlot n
	daysLeft l
	expired j
	expiredTrial k
	id a
	minigameId p
	minigameImage q
	minigameName o
	motd d
	name c
	owner f
	ownerUUID g
	players h
	remoteSubscriptionId b
	serverPing r
	slots i
	state e
	worldType m
	clone ()Lcom/mojang/realmsclient/dto/RealmsServer; d
	cloneSlots (Ljava/util/Map;)Ljava/util/Map; a
	createEmptySlots ()Ljava/util/Map; e
	getDescription ()Ljava/lang/String; a
	getMinigameName ()Ljava/lang/String; c
	getName ()Ljava/lang/String; b
	getState (Ljava/lang/String;)Lcom/mojang/realmsclient/dto/RealmsServer$State; d
	getWorldName (I)Ljava/lang/String; a
	getWorldType (Ljava/lang/String;)Lcom/mojang/realmsclient/dto/RealmsServer$WorldType; e
	parse (Lcom/google/gson/JsonObject;)Lcom/mojang/realmsclient/dto/RealmsServer; a
	parse (Ljava/lang/String;)Lcom/mojang/realmsclient/dto/RealmsServer; c
	parseInvited (Lcom/google/gson/JsonArray;)Ljava/util/List; a
	parseSlots (Lcom/google/gson/JsonArray;)Ljava/util/Map; b
	setDescription (Ljava/lang/String;)V b
	setName (Ljava/lang/String;)V a
	sortInvited (Lcom/mojang/realmsclient/dto/RealmsServer;)V a
	updateServerPing (Lcom/mojang/realmsclient/dto/RealmsServerPlayerList;)V a
com/mojang/realmsclient/dto/RealmsServer$McoServerComparator dgn$a
	refOwner a
	compare (Lcom/mojang/realmsclient/dto/RealmsServer;Lcom/mojang/realmsclient/dto/RealmsServer;)I a
com/mojang/realmsclient/dto/RealmsServer$State dgn$b
	$VALUES d
	CLOSED a
	OPEN b
	UNINITIALIZED c
com/mojang/realmsclient/dto/RealmsServer$WorldType dgn$c
	$VALUES f
	ADVENTUREMAP c
	EXPERIENCE d
	INSPIRATION e
	MINIGAME b
	NORMAL a
com/mojang/realmsclient/dto/RealmsServerAddress dgo
	LOGGER d
	address a
	resourcePackHash c
	resourcePackUrl b
	parse (Ljava/lang/String;)Lcom/mojang/realmsclient/dto/RealmsServerAddress; a
com/mojang/realmsclient/dto/RealmsServerList dgp
	LOGGER b
	servers a
	parse (Ljava/lang/String;)Lcom/mojang/realmsclient/dto/RealmsServerList; a
com/mojang/realmsclient/dto/RealmsServerPing dgq
	nrOfPlayers a
	playerList b
com/mojang/realmsclient/dto/RealmsServerPlayerList dgr
	JSON_PARSER d
	LOGGER c
	players b
	serverId a
	parse (Lcom/google/gson/JsonObject;)Lcom/mojang/realmsclient/dto/RealmsServerPlayerList; a
	parsePlayers (Lcom/google/gson/JsonArray;)Ljava/util/List; a
com/mojang/realmsclient/dto/RealmsServerPlayerLists dgs
	LOGGER b
	servers a
	parse (Ljava/lang/String;)Lcom/mojang/realmsclient/dto/RealmsServerPlayerLists; a
com/mojang/realmsclient/dto/RealmsWorldOptions dgt
	DEFAULT_TEMPLATE_IMAGE o
	adventureMap m
	commandBlocks f
	difficulty h
	empty n
	forceGameMode g
	gameMode i
	pvp a
	slotName j
	spawnAnimals b
	spawnMonsters c
	spawnNPCs d
	spawnProtection e
	templateId k
	templateImage l
	clone ()Lcom/mojang/realmsclient/dto/RealmsWorldOptions; d
	createDefaults ()Lcom/mojang/realmsclient/dto/RealmsWorldOptions; a
	createEmptyDefaults ()Lcom/mojang/realmsclient/dto/RealmsWorldOptions; b
	getDefaultSlotName (I)Ljava/lang/String; b
	getSlotName (I)Ljava/lang/String; a
	parse (Lcom/google/gson/JsonObject;)Lcom/mojang/realmsclient/dto/RealmsWorldOptions; a
	setEmpty (Z)V a
	toJson ()Ljava/lang/String; c
com/mojang/realmsclient/dto/RealmsWorldResetDto dgu
	generateStructures d
	levelType c
	seed a
	worldTemplateId b
com/mojang/realmsclient/dto/ReflectionBasedSerialization dgv
com/mojang/realmsclient/dto/RegionPingResult dgw
	ping b
	regionName a
	ping ()I a
com/mojang/realmsclient/dto/Subscription dgx
	LOGGER d
	daysLeft b
	startDate a
	type c
	parse (Ljava/lang/String;)Lcom/mojang/realmsclient/dto/Subscription; a
	typeFrom (Ljava/lang/String;)Lcom/mojang/realmsclient/dto/Subscription$SubscriptionType; b
com/mojang/realmsclient/dto/Subscription$SubscriptionType dgx$a
	$VALUES c
	NORMAL a
	RECURRING b
com/mojang/realmsclient/dto/UploadInfo dgy
	LOGGER a
	URI_SCHEMA_PATTERN b
	token d
	uploadEndpoint e
	worldClosed c
	assembleUri (Ljava/lang/String;I)Ljava/net/URI; a
	createRequest (Ljava/lang/String;)Ljava/lang/String; b
	ensureEndpointSchema (Ljava/lang/String;Ljava/util/regex/Matcher;)Ljava/lang/String; a
	getToken ()Ljava/lang/String; a
	getUploadEndpoint ()Ljava/net/URI; b
	isWorldClosed ()Z c
	parse (Ljava/lang/String;)Lcom/mojang/realmsclient/dto/UploadInfo; a
	selectPortOrDefault (II)I a
com/mojang/realmsclient/dto/ValueObject dgz
	getName (Ljava/lang/reflect/Field;)Ljava/lang/String; a
	isStatic (Ljava/lang/reflect/Field;)Z b
com/mojang/realmsclient/dto/WorldDownload dha
	LOGGER d
	downloadLink a
	resourcePackHash c
	resourcePackUrl b
	parse (Ljava/lang/String;)Lcom/mojang/realmsclient/dto/WorldDownload; a
com/mojang/realmsclient/dto/WorldTemplate dhb
	LOGGER j
	author d
	id a
	image f
	link e
	name b
	recommendedPlayers h
	trailer g
	type i
	version c
	parse (Lcom/google/gson/JsonObject;)Lcom/mojang/realmsclient/dto/WorldTemplate; a
com/mojang/realmsclient/dto/WorldTemplate$WorldTemplateType dhb$a
	$VALUES f
	ADVENTUREMAP c
	EXPERIENCE d
	INSPIRATION e
	MINIGAME b
	WORLD_TEMPLATE a
com/mojang/realmsclient/dto/WorldTemplatePaginatedList dhc
	LOGGER e
	page b
	size c
	templates a
	total d
	parse (Ljava/lang/String;)Lcom/mojang/realmsclient/dto/WorldTemplatePaginatedList; a
com/mojang/realmsclient/exception/RealmsDefaultUncaughtExceptionHandler dhd
	logger a
com/mojang/realmsclient/exception/RealmsHttpException dhe
com/mojang/realmsclient/exception/RealmsServiceException dhf
	errorCode c
	errorMsg d
	httpResponseContent b
	httpResultCode a
com/mojang/realmsclient/exception/RetryCallException dhg
	delaySeconds e
com/mojang/realmsclient/gui/ErrorCallback dhh
	error (Ljava/lang/String;)V a
	error (Lnet/minecraft/network/chat/Component;)V a
com/mojang/realmsclient/gui/RealmsDataFetcher dhi
	LOGGER a
	fetchStatus u
	hasUnreadNews n
	liveStatsScheduledFuture s
	liveStatsTask g
	livestats k
	newsLink o
	pendingInviteScheduledFuture q
	pendingInviteUpdateTask e
	pendingInvitesCount l
	removedServers i
	scheduler b
	serverListScheduledFuture p
	serverListUpdateTask d
	servers j
	stopped c
	trialAvailabilityTask f
	trialAvailable m
	trialAvailableScheduledFuture r
	unreadNewsScheduledFuture t
	unreadNewsTask h
	cancelTasks ()V o
	forceUpdate ()V e
	getLivestats ()Lcom/mojang/realmsclient/dto/RealmsServerPlayerLists; i
	getPendingInvitesCount ()I g
	getServers ()Ljava/util/List; f
	hasUnreadNews ()Z j
	init ()V b
	initWithSpecificTaskList ()V c
	isActive ()Z p
	isFetchedSinceLastTry (Lcom/mojang/realmsclient/gui/RealmsDataFetcher$Task;)Z a
	isStopped ()Z a
	isTrialAvailable ()Z h
	markClean ()V d
	newsLink ()Ljava/lang/String; k
	removeItem (Lcom/mojang/realmsclient/dto/RealmsServer;)V a
	scheduleTasks ()V n
	setServers (Ljava/util/List;)V a
	stop ()V l
com/mojang/realmsclient/gui/RealmsDataFetcher$LiveStatsTask dhi$a
	getLiveStats ()V a
com/mojang/realmsclient/gui/RealmsDataFetcher$PendingInviteUpdateTask dhi$b
	updatePendingInvites ()V a
com/mojang/realmsclient/gui/RealmsDataFetcher$ServerListUpdateTask dhi$c
	updateServersList ()V a
com/mojang/realmsclient/gui/RealmsDataFetcher$Task dhi$d
	$VALUES f
	LIVE_STATS d
	PENDING_INVITE b
	SERVER_LIST a
	TRIAL_AVAILABLE c
	UNREAD_NEWS e
com/mojang/realmsclient/gui/RealmsDataFetcher$TrialAvailabilityTask dhi$e
	getTrialAvailable ()V a
com/mojang/realmsclient/gui/RealmsDataFetcher$UnreadNewsTask dhi$f
	getUnreadNews ()V a
com/mojang/realmsclient/gui/RealmsWorldSlotButton dhj
	DEFAULT_WORLD_SLOT_1 c
	DEFAULT_WORLD_SLOT_2 d
	DEFAULT_WORLD_SLOT_3 e
	EMPTY_SLOT_LOCATION b
	SLOT_ACTIVE_TOOLTIP v
	SLOT_FRAME_LOCATION a
	SWITCH_TO_MINIGAME_SLOT_TOOLTIP w
	SWITCH_TO_WORLD_SLOT_TOOLTIP x
	animTick B
	serverDataProvider y
	slotIndex A
	state C
	toolTipSetter z
	drawSlotFrame (Lcom/mojang/blaze3d/vertex/PoseStack;IIIIZLjava/lang/String;IJLjava/lang/String;ZZLcom/mojang/realmsclient/gui/RealmsWorldSlotButton$Action;Lnet/minecraft/network/chat/Component;)V a
	getAction (Lcom/mojang/realmsclient/dto/RealmsServer;ZZ)Lcom/mojang/realmsclient/gui/RealmsWorldSlotButton$Action; a
	getState ()Lcom/mojang/realmsclient/gui/RealmsWorldSlotButton$State; a
	getTooltipAndNarration (Lcom/mojang/realmsclient/dto/RealmsServer;Ljava/lang/String;ZZLcom/mojang/realmsclient/gui/RealmsWorldSlotButton$Action;)Lcom/mojang/datafixers/util/Pair; a
	renderButton (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V b
	tick ()V d
com/mojang/realmsclient/gui/RealmsWorldSlotButton$Action dhj$a
	$VALUES d
	JOIN c
	NOTHING a
	SWITCH_SLOT b
com/mojang/realmsclient/gui/RealmsWorldSlotButton$State dhj$b
	action c
	actionPrompt h
	empty a
	image g
	imageId f
	isCurrentlyActiveSlot d
	minigame b
	slotName e
com/mojang/realmsclient/gui/RowButton dhk
	height b
	width a
	xOffset c
	yOffset d
	draw (Lcom/mojang/blaze3d/vertex/PoseStack;IIZ)V a
	drawButtonsInRow (Lcom/mojang/blaze3d/vertex/PoseStack;Ljava/util/List;Lnet/minecraft/realms/RealmsObjectSelectionList;IIII)V a
	drawForRowAt (Lcom/mojang/blaze3d/vertex/PoseStack;IIII)V a
	getBottom ()I b
	getRight ()I a
	onClick (I)V a
	rowButtonMouseClicked (Lnet/minecraft/realms/RealmsObjectSelectionList;Lnet/minecraft/client/gui/components/ObjectSelectionList$Entry;Ljava/util/List;IDD)V a
com/mojang/realmsclient/gui/screens/RealmsBackupInfoScreen dhl
	backup b
	backupInfoList c
	lastScreen a
	checkForSpecificMetadata (Ljava/lang/String;Ljava/lang/String;)Lnet/minecraft/network/chat/Component; a
	gameDifficultyMetadata (Ljava/lang/String;)Lnet/minecraft/network/chat/Component; b
	gameModeMetadata (Ljava/lang/String;)Lnet/minecraft/network/chat/Component; c
	init ()V b
	keyPressed (III)Z a
	removed ()V e
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V a
	tick ()V d
com/mojang/realmsclient/gui/screens/RealmsBackupInfoScreen$BackupInfoList dhl$a
com/mojang/realmsclient/gui/screens/RealmsBackupInfoScreen$BackupInfoListEntry dhl$b
	key b
	value c
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIIIIIIZF)V a
com/mojang/realmsclient/gui/screens/RealmsBackupScreen dhm
	HAS_CHANGES_TOOLTIP q
	LOGGER a
	NO_BACKUPS_LABEL s
	PLUS_ICON_LOCATION b
	RESTORE_ICON_LOCATION c
	RESTORE_TOOLTIP p
	TITLE r
	backupObjectSelectionList x
	backups v
	changesButton C
	downloadButton A
	lastScreen u
	lastScrollPosition t
	noBackups D
	restoreButton B
	selectedBackup y
	serverData E
	slotId z
	titleLabel F
	toolTip w
	addToChangeList (Lcom/mojang/realmsclient/dto/Backup;Ljava/lang/String;)V a
	downloadClicked ()V n
	downloadWorldData ()V o
	generateChangeList ()V i
	init ()V b
	keyPressed (III)Z a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V a
	renderMousehoverTooltip (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/network/chat/Component;II)V a
	restore ()V p
	restoreClicked (I)V b
	shouldChangesButtonBeVisible ()Z l
	shouldRestoreButtonBeVisible ()Z m
	updateButtonStates ()V k
com/mojang/realmsclient/gui/screens/RealmsBackupScreen$BackupObjectSelectionList dhm$a
	addEntry (Lcom/mojang/realmsclient/dto/Backup;)V a
	getMaxPosition ()I c
	getRowWidth ()I d
	getScrollbarPosition ()I e
	isFocused ()Z b
	itemClicked (IIDDI)V a
	mouseClicked (DDI)Z a
	renderBackground (Lcom/mojang/blaze3d/vertex/PoseStack;)V a
	selectInviteListItem (I)V b
	selectItem (I)V a
	setSelected (Lcom/mojang/realmsclient/gui/screens/RealmsBackupScreen$Entry;)V a
	setSelected (Lnet/minecraft/client/gui/components/AbstractSelectionList$Entry;)V a
com/mojang/realmsclient/gui/screens/RealmsBackupScreen$Entry dhm$b
	backup b
	drawInfo (Lcom/mojang/blaze3d/vertex/PoseStack;IIII)V b
	drawRestore (Lcom/mojang/blaze3d/vertex/PoseStack;IIII)V a
	getMediumDatePresentation (Ljava/util/Date;)Ljava/lang/String; a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIIIIIIZF)V a
	renderBackupItem (Lcom/mojang/blaze3d/vertex/PoseStack;Lcom/mojang/realmsclient/dto/Backup;IIII)V a
com/mojang/realmsclient/gui/screens/RealmsBrokenWorldScreen dhn
	LOGGER a
	animTick w
	header r
	lastScreen b
	leftX t
	mainScreen c
	message s
	rightX u
	serverData p
	serverId q
	slotsThatHasBeenDownloaded v
	addButtons ()V i
	backButtonClicked ()V k
	doSwitchOrReset ()V a
	downloadWorld (I)V b
	drawSlotFrame (Lcom/mojang/blaze3d/vertex/PoseStack;IIIIZLjava/lang/String;IJLjava/lang/String;Z)V a
	fetchServerData (J)V a
	getFramePositionX (I)I a
	init ()V b
	isMinigame ()Z l
	keyPressed (III)Z a
	removed ()V e
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V a
	tick ()V d
com/mojang/realmsclient/gui/screens/RealmsClientOutdatedScreen dho
	INCOMPATIBLE_MESSAGES p
	INCOMPATIBLE_TITLE c
	OUTDATED_MESSAGES b
	OUTDATED_TITLE a
	lastScreen q
	outdated r
	init ()V b
	keyPressed (III)Z a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V a
com/mojang/realmsclient/gui/screens/RealmsConfigureWorldScreen dhp
	EXPIRED_ICON_LOCATION p
	EXPIRES_SOON_ICON_LOCATION q
	LOGGER a
	MINIGAME_PREFIX t
	OFF_ICON_LOCATION c
	ON_ICON_LOCATION b
	SERVER_CLOSED_TOOLTIP y
	SERVER_EXPIRED_TOOLTIP u
	SERVER_EXPIRING_IN_DAY_TOOLTIP w
	SERVER_EXPIRING_SOON_TOOLTIP v
	SERVER_OPEN_TOOLTIP x
	TITLE r
	WORLD_TITLE s
	animTick N
	backupButton J
	clicks O
	lastScreen A
	leftX D
	optionsButton I
	playersButton F
	resetWorldButton K
	rightX E
	serverData B
	serverId C
	settingsButton G
	stateChanged M
	subscriptionButton H
	switchMinigameButton L
	toolTip z
	addSlotButton (I)V a
	backButtonClicked ()V i
	callback (Lcom/mojang/realmsclient/dto/WorldTemplate;)V a
	centerButton (II)I b
	closeTheWorld (Lnet/minecraft/client/gui/screens/Screen;)V a
	disableButtons ()V k
	drawClose (Lcom/mojang/blaze3d/vertex/PoseStack;IIII)V f
	drawExpired (Lcom/mojang/blaze3d/vertex/PoseStack;IIII)V d
	drawExpiring (Lcom/mojang/blaze3d/vertex/PoseStack;IIIII)V b
	drawOpen (Lcom/mojang/blaze3d/vertex/PoseStack;IIII)V e
	drawServerStatus (Lcom/mojang/blaze3d/vertex/PoseStack;IIII)V c
	fetchServerData (J)V a
	frame (I)I c
	getNewScreen ()Lcom/mojang/realmsclient/gui/screens/RealmsConfigureWorldScreen; c
	hide (Lnet/minecraft/client/gui/components/Button;)V a
	hideMinigameButtons ()V o
	hideRegularButtons ()V n
	init ()V b
	isMinigame ()Z m
	joinRealm (Lcom/mojang/realmsclient/dto/RealmsServer;)V a
	keyPressed (III)Z a
	leftButton (I)I b
	openTheWorld (ZLnet/minecraft/client/gui/screens/Screen;)V a
	removed ()V e
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V a
	renderMousehoverTooltip (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/network/chat/Component;II)V a
	saveSettings (Ljava/lang/String;Ljava/lang/String;)V a
	saveSlotSettings (Lcom/mojang/realmsclient/dto/RealmsWorldOptions;)V a
	show (Lnet/minecraft/client/gui/components/Button;)V b
	stateChanged ()V a
	switchToEmptySlot (ILcom/mojang/realmsclient/dto/RealmsServer;)V b
	switchToFullSlot (ILcom/mojang/realmsclient/dto/RealmsServer;)V a
	switchToMinigame ()V l
	tick ()V d
com/mojang/realmsclient/gui/screens/RealmsConfirmScreen dhq
	callback a
	delayTicker p
	title1 b
	title2 c
	init ()V b
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V a
	tick ()V d
com/mojang/realmsclient/gui/screens/RealmsCreateRealmScreen dhr
	DESCRIPTION_LABEL b
	NAME_LABEL a
	createButton s
	createRealmLabel t
	descriptionBox r
	lastScreen p
	nameBox q
	server c
	charTyped (CI)Z a
	createWorld ()V i
	init ()V b
	keyPressed (III)Z a
	removed ()V e
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V a
	tick ()V d
	valid ()Z k
com/mojang/realmsclient/gui/screens/RealmsDownloadLatestWorldScreen dhs
	DOTS G
	DOWNLOAD_LOCK b
	LOGGER a
	animTick F
	bytesPersSecond E
	callback J
	cancelButton s
	cancelled y
	checked I
	dotIndex H
	downloadStatus u
	downloadTitle q
	errorMessage v
	extracting B
	finished A
	lastScreen c
	narrationRateLimiter r
	previousTimeSnapshot D
	previousWrittenBytes C
	progress x
	showDots z
	status w
	worldDownload p
	worldName t
	backButtonClicked ()V k
	checkDownloadSize ()V i
	downloadCancelled ()V m
	downloadSave ()V l
	drawDots (Lcom/mojang/blaze3d/vertex/PoseStack;)V b
	drawDownloadSpeed (Lcom/mojang/blaze3d/vertex/PoseStack;)V d
	drawDownloadSpeed0 (Lcom/mojang/blaze3d/vertex/PoseStack;J)V a
	drawProgressBar (Lcom/mojang/blaze3d/vertex/PoseStack;)V c
	getContentLength (Ljava/lang/String;)J b
	init ()V b
	keyPressed (III)Z a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V a
	tick ()V d
com/mojang/realmsclient/gui/screens/RealmsDownloadLatestWorldScreen$DownloadStatus dhs$a
	bytesWritten a
	totalBytes b
com/mojang/realmsclient/gui/screens/RealmsGenericErrorScreen dht
	line1 b
	line2 c
	nextScreen a
	errorMessage (Lcom/mojang/realmsclient/exception/RealmsServiceException;)V a
	errorMessage (Lnet/minecraft/network/chat/Component;)V a
	errorMessage (Lnet/minecraft/network/chat/Component;Lnet/minecraft/network/chat/Component;)V a
	init ()V b
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V a
com/mojang/realmsclient/gui/screens/RealmsInviteScreen dhu
	LOGGER a
	NAME_LABEL b
	NO_SUCH_PLAYER_ERROR_TEXT c
	configureScreen r
	errorMsg t
	lastScreen s
	profileName p
	serverData q
	init ()V b
	keyPressed (III)Z a
	onInvite ()V i
	removed ()V e
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V a
	showError (Lnet/minecraft/network/chat/Component;)V a
	tick ()V d
com/mojang/realmsclient/gui/screens/RealmsLongConfirmationScreen dhv
	callback a
	line2 c
	line3 p
	type b
	yesNoQuestion q
	init ()V b
	keyPressed (III)Z a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V a
com/mojang/realmsclient/gui/screens/RealmsLongConfirmationScreen$Type dhv$a
	$VALUES e
	Info b
	Warning a
	colorCode c
	text d
com/mojang/realmsclient/gui/screens/RealmsLongRunningMcoTaskScreen dhw
	LOGGER b
	SYMBOLS a
	aborted r
	animTicks s
	buttonLength u
	errorMessage q
	lastScreen c
	task t
	title p
	aborted ()Z a
	buttonsClear ()V k
	cancelOrBackButtonClicked ()V i
	error (Lnet/minecraft/network/chat/Component;)V a
	init ()V b
	keyPressed (III)Z a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V a
	setTitle (Lnet/minecraft/network/chat/Component;)V b
	tick ()V d
com/mojang/realmsclient/gui/screens/RealmsNotificationsScreen dhx
	INVITE_ICON_LOCATION a
	NEWS_ICON_LOCATION c
	REALMS_DATA_FETCHER p
	TRIAL_ICON_LOCATION b
	checkedMcoAvailability r
	hasUnreadNews u
	numberOfPendingInvites q
	trialAvailable s
	validClient t
	checkIfMcoEnabled ()V l
	drawIcons (Lcom/mojang/blaze3d/vertex/PoseStack;II)V a
	getRealmsNotificationsEnabled ()Z i
	inTitleScreen ()Z k
	init ()V b
	removed ()V e
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V a
	tick ()V d
com/mojang/realmsclient/gui/screens/RealmsParentalConsentScreen dhy
	MESSAGE a
	messageLines c
	nextScreen b
	init ()V b
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V a
com/mojang/realmsclient/gui/screens/RealmsPendingInvitesScreen dhz
	ACCEPT_ICON_LOCATION b
	ACCEPT_INVITE_TOOLTIP q
	LOGGER a
	NO_PENDING_INVITES_TEXT p
	REJECT_ICON_LOCATION c
	REJECT_INVITE_TOOLTIP r
	acceptButton y
	lastScreen s
	loaded u
	pendingInvitationSelectionList v
	rejectButton z
	selectedInvite x
	titleLabel w
	toolTip t
	accept (I)V c
	init ()V b
	keyPressed (III)Z a
	reject (I)V b
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V a
	renderMousehoverTooltip (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/network/chat/Component;II)V a
	shouldAcceptAndRejectButtonBeVisible (I)Z k
	updateButtonStates ()V i
	updateList (I)V a
com/mojang/realmsclient/gui/screens/RealmsPendingInvitesScreen$Entry dhz$a
	pendingInvite b
	rowButtons c
	mouseClicked (DDI)Z a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIIIIIIZF)V a
	renderPendingInvitationItem (Lcom/mojang/blaze3d/vertex/PoseStack;Lcom/mojang/realmsclient/dto/PendingInvite;IIII)V a
com/mojang/realmsclient/gui/screens/RealmsPendingInvitesScreen$Entry$AcceptRowButton dhz$a$a
	draw (Lcom/mojang/blaze3d/vertex/PoseStack;IIZ)V a
	onClick (I)V a
com/mojang/realmsclient/gui/screens/RealmsPendingInvitesScreen$Entry$RejectRowButton dhz$a$b
	draw (Lcom/mojang/blaze3d/vertex/PoseStack;IIZ)V a
	onClick (I)V a
com/mojang/realmsclient/gui/screens/RealmsPendingInvitesScreen$PendingInvitationSelectionList dhz$b
	getMaxPosition ()I c
	getRowWidth ()I d
	isFocused ()Z b
	removeAtIndex (I)V b
	renderBackground (Lcom/mojang/blaze3d/vertex/PoseStack;)V a
	selectInviteListItem (I)V c
	selectItem (I)V a
	setSelected (Lcom/mojang/realmsclient/gui/screens/RealmsPendingInvitesScreen$Entry;)V a
	setSelected (Lnet/minecraft/client/gui/components/AbstractSelectionList$Entry;)V a
com/mojang/realmsclient/gui/screens/RealmsPlayerScreen dia
	CROSS_ICON_LOCATION p
	INVITED_LABEL u
	LOGGER a
	NORMAL_USER_TOOLTIP r
	OPTIONS_BACKGROUND q
	OP_ICON_LOCATION b
	OP_TOOLTIP s
	REMOVE_ENTRY_TOOLTIP t
	USER_ICON_LOCATION c
	column1X z
	column2X B
	columnWidth A
	hoveredUserAction J
	invitedObjectSelectionList y
	lastScreen w
	opdeopButton D
	player G
	removeButton C
	selectedInvited F
	selectedInvitedIndex E
	serverData x
	stateChanged H
	titleLabel I
	toolTip v
	backButtonClicked ()V k
	deleteFromInvitedList (I)V o
	deop (I)V m
	drawNormal (Lcom/mojang/blaze3d/vertex/PoseStack;IIII)V e
	drawOpped (Lcom/mojang/blaze3d/vertex/PoseStack;IIII)V d
	drawRemoveIcon (Lcom/mojang/blaze3d/vertex/PoseStack;IIII)V c
	init ()V b
	keyPressed (III)Z a
	op (I)V l
	removed ()V e
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V a
	renderMousehoverTooltip (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/network/chat/Component;II)V a
	shouldRemoveAndOpdeopButtonBeVisible (I)Z k
	uninvite (I)V n
	updateButtonStates ()V i
	updateOps (Lcom/mojang/realmsclient/dto/Ops;)V a
com/mojang/realmsclient/gui/screens/RealmsPlayerScreen$Entry dia$a
	playerInfo b
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIIIIIIZF)V a
	renderInvitedItem (Lcom/mojang/blaze3d/vertex/PoseStack;Lcom/mojang/realmsclient/dto/PlayerInfo;IIII)V a
com/mojang/realmsclient/gui/screens/RealmsPlayerScreen$InvitedObjectSelectionList dia$b
	addEntry (Lcom/mojang/realmsclient/dto/PlayerInfo;)V a
	getMaxPosition ()I c
	getRowWidth ()I d
	getScrollbarPosition ()I e
	isFocused ()Z b
	itemClicked (IIDDI)V a
	mouseClicked (DDI)Z a
	renderBackground (Lcom/mojang/blaze3d/vertex/PoseStack;)V a
	selectInviteListItem (I)V b
	selectItem (I)V a
	setSelected (Lcom/mojang/realmsclient/gui/screens/RealmsPlayerScreen$Entry;)V a
	setSelected (Lnet/minecraft/client/gui/components/AbstractSelectionList$Entry;)V a
com/mojang/realmsclient/gui/screens/RealmsPlayerScreen$UserAction dia$c
	$VALUES d
	NONE c
	REMOVE b
	TOGGLE_OP a
com/mojang/realmsclient/gui/screens/RealmsResetNormalWorldScreen dib
	LEVEL_TYPES b
	SEED_LABEL a
	buttonTitle t
	generateStructures r
	lastScreen c
	levelTypeIndex s
	seedEdit q
	titleLabel p
	generateStructuresTitle ()Lnet/minecraft/network/chat/Component; k
	init ()V b
	keyPressed (III)Z a
	levelTypeTitle ()Lnet/minecraft/network/chat/Component; i
	removed ()V e
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V a
	tick ()V d
com/mojang/realmsclient/gui/screens/RealmsResetWorldScreen dic
	ADVENTURE_MAP_LOCATION y
	EXPERIENCE_LOCATION B
	INSPIRATION_LOCATION C
	LOGGER b
	NEW_WORLD_LOCATION A
	SLOT_FRAME_LOCATION w
	SURVIVAL_SPAWN_LOCATION z
	UPLOAD_LOCATION x
	adventuremaps E
	buttonTitle u
	callback M
	experiences F
	inspirations G
	lastScreen c
	resetTitle K
	resetWorldRunnable L
	serverData p
	slot a
	subtitle t
	subtitleColor v
	subtitleLabel r
	templates D
	title s
	titleLabel q
	typeToReset H
	worldInfoToReset I
	worldTemplateToReset J
	callback (Lcom/mojang/realmsclient/dto/WorldTemplate;)V a
	drawFrame (Lcom/mojang/blaze3d/vertex/PoseStack;IILnet/minecraft/network/chat/Component;Lnet/minecraft/resources/ResourceLocation;ZZ)V a
	frame (I)I b
	init ()V b
	keyPressed (III)Z a
	removed ()V e
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V a
	resetWorld (Lcom/mojang/realmsclient/gui/screens/RealmsResetWorldScreen$ResetWorldInfo;)V a
	resetWorld (Ljava/lang/String;Lcom/mojang/realmsclient/dto/WorldTemplate;IZ)V a
	resetWorldWithTemplate (Lcom/mojang/realmsclient/dto/WorldTemplate;)V b
	setResetTitle (Lnet/minecraft/network/chat/Component;)V a
	setSlot (I)V a
	switchSlot ()V i
	switchSlot (Ljava/lang/Runnable;)V a
	triggerResetWorld (Lcom/mojang/realmsclient/gui/screens/RealmsResetWorldScreen$ResetWorldInfo;)V b
com/mojang/realmsclient/gui/screens/RealmsResetWorldScreen$FrameButton dic$a
	image b
	renderButton (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V b
com/mojang/realmsclient/gui/screens/RealmsResetWorldScreen$ResetType dic$b
	$VALUES h
	ADVENTURE d
	EXPERIENCE f
	GENERATE b
	INSPIRATION g
	NONE a
	SURVIVAL_SPAWN e
	UPLOAD c
com/mojang/realmsclient/gui/screens/RealmsResetWorldScreen$ResetWorldInfo dic$c
	generateStructures c
	levelType b
	seed a
com/mojang/realmsclient/gui/screens/RealmsScreenWithCallback did
	callback (Lcom/mojang/realmsclient/dto/WorldTemplate;)V a
com/mojang/realmsclient/gui/screens/RealmsSelectFileToUploadScreen die
	CHEATS_TEXT q
	DATE_FORMAT r
	HARDCORE_TEXT p
	LOGGER a
	REQUIRES_CONVERSION_TEXT c
	WORLD_TEXT b
	callback C
	lastScreen s
	levelList w
	noWorldsLabel B
	selectedWorld x
	slotId u
	subtitleLabel A
	titleLabel z
	uploadButton v
	worldId t
	worldSelectionList y
	formatLastPlayed (Lnet/minecraft/world/level/storage/LevelSummary;)Ljava/lang/String; d
	gameModeName (Lnet/minecraft/world/level/storage/LevelSummary;)Lnet/minecraft/network/chat/Component; c
	init ()V b
	keyPressed (III)Z a
	loadLevelList ()V i
	removed ()V e
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V a
	upload ()V k
com/mojang/realmsclient/gui/screens/RealmsSelectFileToUploadScreen$Entry die$a
	id d
	info e
	levelSummary b
	name c
	mouseClicked (DDI)Z a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIIIIIIZF)V a
	renderItem (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/world/level/storage/LevelSummary;III)V a
com/mojang/realmsclient/gui/screens/RealmsSelectFileToUploadScreen$WorldSelectionList die$b
	addEntry (Lnet/minecraft/world/level/storage/LevelSummary;)V a
	getMaxPosition ()I c
	isFocused ()Z b
	renderBackground (Lcom/mojang/blaze3d/vertex/PoseStack;)V a
	selectItem (I)V a
	setSelected (Lcom/mojang/realmsclient/gui/screens/RealmsSelectFileToUploadScreen$Entry;)V a
	setSelected (Lnet/minecraft/client/gui/components/AbstractSelectionList$Entry;)V a
com/mojang/realmsclient/gui/screens/RealmsSelectWorldTemplateScreen dif
	LINK_ICON b
	LOGGER a
	PUBLISHER_LINK_TOOLTIP q
	SLOT_FRAME_LOCATION p
	TRAILER_ICON c
	TRAILER_LINK_TOOLTIP r
	clicks C
	currentLink A
	displayWarning F
	hoverWarning G
	lastScreen s
	noTemplatesMessage H
	publisherButton y
	selectButton w
	selectedTemplate u
	title v
	toolTip z
	trailerButton x
	warning D
	warningURL E
	worldTemplateObjectSelectionList t
	worldType B
	backButtonClicked ()V p
	fetchTemplates (Lcom/mojang/realmsclient/dto/WorldTemplatePaginatedList;Lcom/mojang/realmsclient/client/RealmsClient;)Lcom/mojang/datafixers/util/Either; a
	fetchTemplatesAsync (Lcom/mojang/realmsclient/dto/WorldTemplatePaginatedList;)V a
	getSelectedTemplate ()Lcom/mojang/realmsclient/dto/WorldTemplate; n
	hasValidTemplate ()Z s
	init ()V b
	keyPressed (III)Z a
	mouseClicked (DDI)Z a
	onPublish ()V u
	onTrailer ()V t
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V a
	renderMousehoverTooltip (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/network/chat/Component;II)V a
	renderMultilineMessage (Lcom/mojang/blaze3d/vertex/PoseStack;IILjava/util/List;)V a
	selectTemplate ()V r
	setTitle (Lnet/minecraft/network/chat/Component;)V a
	setWarning ([Lnet/minecraft/network/chat/Component;)V a
	shouldPublisherBeVisible ()Z m
	shouldSelectButtonBeActive ()Z l
	shouldTrailerBeVisible ()Z o
	tick ()V d
	updateButtonStates ()V k
com/mojang/realmsclient/gui/screens/RealmsSelectWorldTemplateScreen$Entry dif$a
	template b
	drawIcons (Lcom/mojang/blaze3d/vertex/PoseStack;IIIILjava/lang/String;Ljava/lang/String;Ljava/lang/String;)V a
	drawImage (Lcom/mojang/blaze3d/vertex/PoseStack;IIIILcom/mojang/realmsclient/dto/WorldTemplate;)V a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIIIIIIZF)V a
	renderWorldTemplateItem (Lcom/mojang/blaze3d/vertex/PoseStack;Lcom/mojang/realmsclient/dto/WorldTemplate;IIII)V a
com/mojang/realmsclient/gui/screens/RealmsSelectWorldTemplateScreen$WorldTemplateObjectSelectionList dif$b
	addEntry (Lcom/mojang/realmsclient/dto/WorldTemplate;)V a
	get (I)Lcom/mojang/realmsclient/dto/WorldTemplate; b
	getMaxPosition ()I c
	getRowWidth ()I d
	getTemplates ()Ljava/util/List; g
	isEmpty ()Z f
	isFocused ()Z b
	mouseClicked (DDI)Z a
	renderBackground (Lcom/mojang/blaze3d/vertex/PoseStack;)V a
	selectItem (I)V a
	setSelected (Lcom/mojang/realmsclient/gui/screens/RealmsSelectWorldTemplateScreen$Entry;)V a
	setSelected (Lnet/minecraft/client/gui/components/AbstractSelectionList$Entry;)V a
com/mojang/realmsclient/gui/screens/RealmsSettingsScreen dig
	DESCRIPTION_LABEL b
	NAME_LABEL a
	configureWorldScreen c
	descEdit r
	doneButton q
	nameEdit s
	serverData p
	titleLabel t
	init ()V b
	keyPressed (III)Z a
	removed ()V e
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V a
	save ()V a
	tick ()V d
com/mojang/realmsclient/gui/screens/RealmsSlotOptionsScreen dih
	DIFFICULTIES a
	GAME_MODES b
	GAME_MODE_LABEL r
	NAME_LABEL s
	TEXT_OFF q
	TEXT_ON p
	activeSlot z
	column1X u
	column2X w
	columnWidth v
	commandBlocks H
	commandBlocksButton O
	difficulty A
	forceGameMode I
	forceGameModeButton P
	gameMode B
	nameEdit t
	options x
	parent c
	pvp C
	pvpButton J
	spawnAnimals E
	spawnAnimalsButton K
	spawnMonsters F
	spawnMonstersButton L
	spawnNPCs D
	spawnNPCsButton M
	spawnProtection G
	spawnProtectionButton N
	titleLabel Q
	warningLabel R
	worldType y
	commandBlocksTitle ()Lnet/minecraft/network/chat/Component; p
	difficultyTitle ()Lnet/minecraft/network/chat/Component; i
	forceGameModeTitle ()Lnet/minecraft/network/chat/Component; r
	gameModeTitle ()Lnet/minecraft/network/chat/Component; k
	getOnOff (Z)Lnet/minecraft/network/chat/Component; c
	getSlotName ()Ljava/lang/String; s
	init ()V b
	keyPressed (III)Z a
	pvpTitle ()Lnet/minecraft/network/chat/Component; l
	removed ()V e
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V a
	saveSettings ()V t
	spawnAnimalsTitle ()Lnet/minecraft/network/chat/Component; m
	spawnMonstersTitle ()Lnet/minecraft/network/chat/Component; n
	spawnNPCsTitle ()Lnet/minecraft/network/chat/Component; o
	tick ()V d
com/mojang/realmsclient/gui/screens/RealmsSlotOptionsScreen$SettingsSlider dih$a
	maxValue d
	minValue c
	applyValue ()V a
	onClick (DD)V a
	onRelease (DD)V a_
	updateMessage ()V b
com/mojang/realmsclient/gui/screens/RealmsSubscriptionInfoScreen dii
	DAYS_LEFT_LABEL q
	DAYS_SUFFIX w
	DAY_SUFFIX v
	LOGGER a
	MONTHS_SUFFIX u
	MONTH_SUFFIX t
	SUBSCRIPTION_EXPIRED_TEXT r
	SUBSCRIPTION_LESS_THAN_A_DAY_TEXT s
	SUBSCRIPTION_START_LABEL c
	SUBSCRIPTION_TITLE b
	TIME_LEFT_LABEL p
	daysLeft A
	lastScreen x
	mainScreen z
	serverData y
	startDate B
	type C
	daysLeftPresentation (I)Lnet/minecraft/network/chat/Component; a
	deleteRealm (Z)V c
	getSubscription (J)V a
	init ()V b
	keyPressed (III)Z a
	localPresentation (J)Ljava/lang/String; b
	removed ()V e
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V a
com/mojang/realmsclient/gui/screens/RealmsTermsScreen dij
	LOGGER a
	TERMS_LINK_TEXT p
	TERMS_STATIC_TEXT c
	TITLE b
	lastScreen q
	mainScreen r
	onLink t
	realmsServer s
	realmsToSUrl u
	agreedToTos ()V i
	init ()V b
	keyPressed (III)Z a
	mouseClicked (DDI)Z a
	removed ()V e
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V a
com/mojang/realmsclient/gui/screens/RealmsUploadScreen dik
	DOTS c
	LOGGER a
	UPLOAD_LOCK b
	VERIFYING_TEXT p
	backButton D
	bytesPersSecond I
	callback J
	cancelButton E
	cancelled z
	errorMessage w
	lastScreen q
	narrationRateLimiter v
	previousTimeSnapshot H
	previousWrittenBytes G
	progress y
	selectedLevel r
	showDots B
	slotId t
	status x
	tickCount F
	uploadFinished A
	uploadStarted C
	uploadStatus u
	worldId s
	addFileToTarGz (Lorg/apache/commons/compress/archivers/tar/TarArchiveOutputStream;Ljava/lang/String;Ljava/lang/String;Z)V a
	drawDots (Lcom/mojang/blaze3d/vertex/PoseStack;)V b
	drawProgressBar (Lcom/mojang/blaze3d/vertex/PoseStack;)V c
	drawUploadSpeed (Lcom/mojang/blaze3d/vertex/PoseStack;)V d
	drawUploadSpeed0 (Lcom/mojang/blaze3d/vertex/PoseStack;J)V a
	init ()V b
	keyPressed (III)Z a
	onBack ()V i
	onCancel ()V k
	removed ()V e
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V a
	setErrorMessage ([Lnet/minecraft/network/chat/Component;)V a
	tarGzipArchive (Ljava/io/File;)Ljava/io/File; b
	tick ()V d
	upload ()V l
	uploadCancelled ()V m
	verify (Ljava/io/File;)Z a
com/mojang/realmsclient/gui/screens/UploadResult dil
	errorMessage b
	statusCode a
com/mojang/realmsclient/gui/screens/UploadResult$Builder dil$a
	errorMessage b
	statusCode a
	build ()Lcom/mojang/realmsclient/gui/screens/UploadResult; a
	withErrorMessage (Ljava/lang/String;)Lcom/mojang/realmsclient/gui/screens/UploadResult$Builder; a
	withStatusCode (I)Lcom/mojang/realmsclient/gui/screens/UploadResult$Builder; a
com/mojang/realmsclient/util/JsonUtils dim
	getBooleanOr (Ljava/lang/String;Lcom/google/gson/JsonObject;Z)Z a
	getDateOr (Ljava/lang/String;Lcom/google/gson/JsonObject;)Ljava/util/Date; a
	getIntOr (Ljava/lang/String;Lcom/google/gson/JsonObject;I)I a
	getLongOr (Ljava/lang/String;Lcom/google/gson/JsonObject;J)J a
	getStringOr (Ljava/lang/String;Lcom/google/gson/JsonObject;Ljava/lang/String;)Ljava/lang/String; a
com/mojang/realmsclient/util/RealmsPersistence din
	GSON a
	getPathToData ()Ljava/io/File; b
	readFile ()Lcom/mojang/realmsclient/util/RealmsPersistence$RealmsPersistenceData; a
	writeFile (Lcom/mojang/realmsclient/util/RealmsPersistence$RealmsPersistenceData;)V a
com/mojang/realmsclient/util/RealmsPersistence$RealmsPersistenceData din$a
	hasUnreadNews b
	newsLink a
com/mojang/realmsclient/util/RealmsTextureManager dio
	FETCHED_SKINS c
	LOGGER d
	SKIN_FETCH_STATUS b
	TEMPLATE_ICON_LOCATION e
	TEXTURES a
	bindDefaultFace (Ljava/util/UUID;)V a
	bindFace (Ljava/lang/String;)V a
	bindWorldTemplate (Ljava/lang/String;Ljava/lang/String;)V a
	getTextureId (Ljava/lang/String;Ljava/lang/String;)I b
	withBoundFace (Ljava/lang/String;Ljava/lang/Runnable;)V a
com/mojang/realmsclient/util/RealmsTextureManager$RealmsTexture dio$a
	image a
	textureId b
com/mojang/realmsclient/util/RealmsUtil dip
	AUTHENTICATION_SERVICE b
	SESSION_SERVICE c
	gameProfileCache a
	convertToAgePresentation (J)Ljava/lang/String; a
	convertToAgePresentationFromInstant (Ljava/util/Date;)Ljava/lang/String; a
	getTextures (Ljava/lang/String;)Ljava/util/Map; b
	uuidToName (Ljava/lang/String;)Ljava/lang/String; a
com/mojang/realmsclient/util/SkinProcessor diq
	height c
	pixels a
	width b
	doLegacyTransparencyHack (IIII)V a
	process (Ljava/awt/image/BufferedImage;)Ljava/awt/image/BufferedImage; a
	setNoAlpha (IIII)V b
com/mojang/realmsclient/util/TextRenderingUtils dir
	decompose (Ljava/lang/String;Ljava/util/List;)Ljava/util/List; a
	decompose (Ljava/lang/String;[Lcom/mojang/realmsclient/util/TextRenderingUtils$LineSegment;)Ljava/util/List; a
	insertLinks (Ljava/util/List;Ljava/util/List;)Ljava/util/List; a
	lineBreak (Ljava/lang/String;)Ljava/util/List; a
	split (Ljava/lang/String;Ljava/lang/String;)Ljava/util/List; a
com/mojang/realmsclient/util/TextRenderingUtils$Line dir$a
	segments a
com/mojang/realmsclient/util/TextRenderingUtils$LineSegment dir$b
	fullText a
	linkTitle b
	linkUrl c
	getLinkUrl ()Ljava/lang/String; c
	isLink ()Z b
	link (Ljava/lang/String;Ljava/lang/String;)Lcom/mojang/realmsclient/util/TextRenderingUtils$LineSegment; a
	renderedText ()Ljava/lang/String; a
	text (Ljava/lang/String;)Lcom/mojang/realmsclient/util/TextRenderingUtils$LineSegment; a
com/mojang/realmsclient/util/UploadTokenCache dis
	TOKEN_CACHE a
	get (J)Ljava/lang/String; a
	invalidate (J)V b
	put (JLjava/lang/String;)V a
com/mojang/realmsclient/util/task/CloseServerTask dit
	configureScreen d
	serverData c
com/mojang/realmsclient/util/task/ConnectTask diu
	address d
	realmsConnect c
	abortTask ()V a
	tick ()V b
com/mojang/realmsclient/util/task/DownloadTask div
	downloadName f
	lastScreen e
	slot d
	worldId c
com/mojang/realmsclient/util/task/GetServerDetailsTask diw
	connectLock f
	lastScreen d
	mainScreen e
	server c
	sleep (I)V b
com/mojang/realmsclient/util/task/LongRunningTask dix
	LOGGER a
	longRunningMcoTaskScreen b
	abortTask ()V a
	aborted ()Z c
	error (Lnet/minecraft/network/chat/Component;)V a
	init ()V d
	pause (I)V a
	setScreen (Lcom/mojang/realmsclient/gui/screens/RealmsLongRunningMcoTaskScreen;)V a
	setScreen (Lnet/minecraft/client/gui/screens/Screen;)V a
	setTitle (Lnet/minecraft/network/chat/Component;)V b
	tick ()V b
com/mojang/realmsclient/util/task/OpenServerTask diy
	join e
	mainScreen f
	returnScreen d
	serverData c
com/mojang/realmsclient/util/task/ResettingWorldTask diz
	callback i
	generateStructures f
	levelType e
	seed c
	serverId g
	title h
	worldTemplate d
com/mojang/realmsclient/util/task/RestoreTask dja
	backup c
	lastScreen e
	worldId d
com/mojang/realmsclient/util/task/SwitchMinigameTask djb
	lastScreen e
	worldId c
	worldTemplate d
com/mojang/realmsclient/util/task/SwitchSlotTask djc
	callback e
	slot d
	worldId c
com/mojang/realmsclient/util/task/WorldCreationTask djd
	lastScreen f
	motd d
	name c
	worldId e
net/minecraft/BlockUtil i
	getLargestRectangleAround (Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction$Axis;ILnet/minecraft/core/Direction$Axis;ILjava/util/function/Predicate;)Lnet/minecraft/BlockUtil$FoundRectangle; a
	getLimit (Ljava/util/function/Predicate;Lnet/minecraft/core/BlockPos$MutableBlockPos;Lnet/minecraft/core/Direction;I)I a
	getMaxRectangleLocation ([I)Lcom/mojang/datafixers/util/Pair; a
net/minecraft/BlockUtil$FoundRectangle i$a
	axis1Size b
	axis2Size c
	minCorner a
net/minecraft/BlockUtil$IntBounds i$b
	max b
	min a
net/minecraft/CharPredicate j
	and (Lnet/minecraft/CharPredicate;)Lnet/minecraft/CharPredicate; a
	negate ()Lnet/minecraft/CharPredicate; a
	or (Lnet/minecraft/CharPredicate;)Lnet/minecraft/CharPredicate; b
net/minecraft/ChatFormatting k
	$VALUES E
	AQUA l
	BLACK a
	BLUE j
	BOLD r
	DARK_AQUA d
	DARK_BLUE b
	DARK_GRAY i
	DARK_GREEN c
	DARK_PURPLE f
	DARK_RED e
	FORMATTING_BY_NAME w
	GOLD g
	GRAY h
	GREEN k
	ITALIC u
	LIGHT_PURPLE n
	OBFUSCATED q
	RED m
	RESET v
	STRIKETHROUGH s
	STRIP_FORMATTING_PATTERN x
	UNDERLINE t
	WHITE p
	YELLOW o
	code z
	color D
	id C
	isFormat A
	name y
	toString B
	cleanName (Ljava/lang/String;)Ljava/lang/String; c
	getByCode (C)Lnet/minecraft/ChatFormatting; a
	getById (I)Lnet/minecraft/ChatFormatting; a
	getByName (Ljava/lang/String;)Lnet/minecraft/ChatFormatting; b
	getChar ()C a
	getColor ()Ljava/lang/Integer; e
	getId ()I b
	getName ()Ljava/lang/String; f
	getNames (ZZ)Ljava/util/Collection; a
	isColor ()Z d
	isFormat ()Z c
	stripFormatting (Ljava/lang/String;)Ljava/lang/String; a
net/minecraft/CrashReport l
	LOGGER a
	details e
	exception c
	saveFile f
	systemDetails d
	title b
	trackingStackTrace g
	uncategorizedStackTrace h
	addCategory (Ljava/lang/String;)Lnet/minecraft/CrashReportCategory; a
	addCategory (Ljava/lang/String;I)Lnet/minecraft/CrashReportCategory; a
	forThrowable (Ljava/lang/Throwable;Ljava/lang/String;)Lnet/minecraft/CrashReport; a
	getDetails ()Ljava/lang/String; c
	getDetails (Ljava/lang/StringBuilder;)V a
	getErrorComment ()Ljava/lang/String; j
	getException ()Ljava/lang/Throwable; b
	getExceptionMessage ()Ljava/lang/String; d
	getFriendlyReport ()Ljava/lang/String; e
	getSaveFile ()Ljava/io/File; f
	getSystemDetails ()Lnet/minecraft/CrashReportCategory; g
	getTitle ()Ljava/lang/String; a
	initDetails ()V i
	preload ()V h
	saveToFile (Ljava/io/File;)Z a
net/minecraft/CrashReportCategory m
	entries c
	report a
	stackTrace d
	title b
	fillInStackTrace (I)I a
	formatLocation (DDD)Ljava/lang/String; a
	formatLocation (III)Ljava/lang/String; a
	formatLocation (Lnet/minecraft/core/BlockPos;)Ljava/lang/String; a
	getDetails (Ljava/lang/StringBuilder;)V a
	getStacktrace ()[Ljava/lang/StackTraceElement; a
	populateBlockDetails (Lnet/minecraft/CrashReportCategory;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V a
	setDetail (Ljava/lang/String;Ljava/lang/Object;)Lnet/minecraft/CrashReportCategory; a
	setDetail (Ljava/lang/String;Lnet/minecraft/CrashReportDetail;)Lnet/minecraft/CrashReportCategory; a
	setDetailError (Ljava/lang/String;Ljava/lang/Throwable;)V a
	trimStacktrace (I)V b
	validateStackTrace (Ljava/lang/StackTraceElement;Ljava/lang/StackTraceElement;)Z a
net/minecraft/CrashReportCategory$Entry m$a
	key a
	value b
	getKey ()Ljava/lang/String; a
	getValue ()Ljava/lang/String; b
net/minecraft/CrashReportDetail n
net/minecraft/DefaultUncaughtExceptionHandler o
	logger a
net/minecraft/DefaultUncaughtExceptionHandlerWithName p
	logger a
net/minecraft/DetectedVersion q
	BUILT_IN a
	LOGGER b
	buildTime i
	id c
	name d
	packVersion h
	protocolVersion g
	releaseTarget j
	stable e
	worldVersion f
	tryDetectVersion ()Lcom/mojang/bridge/game/GameVersion; a
net/minecraft/FieldsAreNonnullByDefault r
net/minecraft/FileUtil s
	COPY_COUNTER_PATTERN a
	RESERVED_WINDOWS_FILENAMES b
	createPathToResource (Ljava/nio/file/Path;Ljava/lang/String;Ljava/lang/String;)Ljava/nio/file/Path; b
	findAvailableName (Ljava/nio/file/Path;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; a
	isPathNormalized (Ljava/nio/file/Path;)Z a
	isPathPortable (Ljava/nio/file/Path;)Z b
net/minecraft/MethodsReturnNonnullByDefault t
net/minecraft/ReportedException u
	report a
	getReport ()Lnet/minecraft/CrashReport; a
net/minecraft/ResourceLocationException v
net/minecraft/SharedConstants w
	CHECK_DATA_FIXER_SCHEMA c
	CURRENT_VERSION f
	ILLEGAL_FILE_CHARACTERS e
	IS_RUNNING_IN_IDE d
	MAXIMUM_TICK_TIME_NANOS b
	NETTY_LEAK_DETECTION a
	filterText (Ljava/lang/String;)Ljava/lang/String; a
	getCurrentVersion ()Lcom/mojang/bridge/game/GameVersion; a
	isAllowedChatCharacter (C)Z a
	setVersion (Lcom/mojang/bridge/game/GameVersion;)V a
net/minecraft/Util x
	BACKGROUND_EXECUTOR e
	BOOTSTRAP_EXECUTOR d
	IO_POOL f
	LOGGER g
	NIL_UUID b
	WORKER_COUNT c
	timeSource a
	backgroundExecutor ()Ljava/util/concurrent/Executor; f
	bootstrapExecutor ()Ljava/util/concurrent/Executor; e
	copyBetweenDirs (Ljava/nio/file/Path;Ljava/nio/file/Path;Ljava/nio/file/Path;)V b
	createDeleter (Ljava/nio/file/Path;)Ljava/util/function/BooleanSupplier; a
	createFileCreatedCheck (Ljava/nio/file/Path;)Ljava/util/function/BooleanSupplier; c
	createFileDeletedCheck (Ljava/nio/file/Path;)Ljava/util/function/BooleanSupplier; b
	createRenamer (Ljava/nio/file/Path;Ljava/nio/file/Path;)Ljava/util/function/BooleanSupplier; a
	describeError (Ljava/lang/Throwable;)Ljava/lang/String; d
	doFetchChoiceType (Lcom/mojang/datafixers/DSL$TypeReference;Ljava/lang/String;)Lcom/mojang/datafixers/types/Type; b
	executeInSequence ([Ljava/util/function/BooleanSupplier;)Z a
	failedFuture (Ljava/lang/Throwable;)Ljava/util/concurrent/CompletableFuture; a
	fetchChoiceType (Lcom/mojang/datafixers/DSL$TypeReference;Ljava/lang/String;)Lcom/mojang/datafixers/types/Type; a
	findNextInIterable (Ljava/lang/Iterable;Ljava/lang/Object;)Ljava/lang/Object; a
	findPreviousInIterable (Ljava/lang/Iterable;Ljava/lang/Object;)Ljava/lang/Object; b
	fixedSize (Ljava/util/stream/IntStream;I)Lcom/mojang/serialization/DataResult; a
	getEpochMillis ()J d
	getMillis ()J b
	getNanos ()J c
	getPlatform ()Lnet/minecraft/Util$OS; i
	getPropertyName (Lnet/minecraft/world/level/block/state/properties/Property;Ljava/lang/Object;)Ljava/lang/String; a
	getRandom ([ILjava/util/Random;)I a
	getRandom ([Ljava/lang/Object;Ljava/util/Random;)Ljava/lang/Object; a
	getVmArguments ()Ljava/util/stream/Stream; j
	identityStrategy ()Lit/unimi/dsi/fastutil/Hash$Strategy; k
	ifElse (Ljava/util/Optional;Ljava/util/function/Consumer;Ljava/lang/Runnable;)Ljava/util/Optional; a
	ioPool ()Ljava/util/concurrent/Executor; g
	lastOf (Ljava/util/List;)Ljava/lang/Object; a
	make (Ljava/lang/Object;Ljava/util/function/Consumer;)Ljava/lang/Object; a
	make (Ljava/util/function/Supplier;)Ljava/lang/Object; a
	makeDescriptionId (Ljava/lang/String;Lnet/minecraft/resources/ResourceLocation;)Ljava/lang/String; a
	makeExecutor (Ljava/lang/String;)Ljava/util/concurrent/ExecutorService; a
	makeIoExecutor ()Ljava/util/concurrent/ExecutorService; n
	name (Ljava/lang/Runnable;Ljava/util/function/Supplier;)Ljava/lang/Runnable; a
	offsetByCodepoints (Ljava/lang/String;II)I a
	onThreadException (Ljava/lang/Thread;Ljava/lang/Throwable;)V a
	pauseInIde (Ljava/lang/Throwable;)Ljava/lang/Throwable; c
	prefix (Ljava/lang/String;Ljava/util/function/Consumer;)Ljava/util/function/Consumer; a
	runWithRetries (ILjava/lang/String;[Ljava/util/function/BooleanSupplier;)Z a
	safeReplaceFile (Ljava/io/File;Ljava/io/File;Ljava/io/File;)V a
	safeReplaceFile (Ljava/nio/file/Path;Ljava/nio/file/Path;Ljava/nio/file/Path;)V a
	sanitizeName (Ljava/lang/String;Lnet/minecraft/CharPredicate;)Ljava/lang/String; a
	sequence (Ljava/util/List;)Ljava/util/concurrent/CompletableFuture; b
	shutdownExecutor (Ljava/util/concurrent/ExecutorService;)V a
	shutdownExecutors ()V h
	startTimerHackThread ()V l
	throwAsRuntime (Ljava/lang/Throwable;)V b
	toMap ()Ljava/util/stream/Collector; a
	toStream (Ljava/util/Optional;)Ljava/util/stream/Stream; a
net/minecraft/Util$IdentityStrategy x$a
	$VALUES b
	INSTANCE a
net/minecraft/Util$OS x$b
	$VALUES f
	LINUX a
	OSX d
	SOLARIS b
	UNKNOWN e
	WINDOWS c
	getOpenUrlArguments (Ljava/net/URL;)[Ljava/lang/String; b
	openFile (Ljava/io/File;)V a
	openUri (Ljava/lang/String;)V a
	openUri (Ljava/net/URI;)V a
	openUrl (Ljava/net/URL;)V a
net/minecraft/advancements/Advancement y
	chatComponent h
	children g
	criteria e
	display b
	id d
	parent a
	requirements f
	rewards c
	addChild (Lnet/minecraft/advancements/Advancement;)V a
	deconstruct ()Lnet/minecraft/advancements/Advancement$Builder; a
	getChatComponent ()Lnet/minecraft/network/chat/Component; j
	getChildren ()Ljava/lang/Iterable; e
	getCriteria ()Ljava/util/Map; f
	getDisplay ()Lnet/minecraft/advancements/DisplayInfo; c
	getId ()Lnet/minecraft/resources/ResourceLocation; h
	getMaxCriteraRequired ()I g
	getParent ()Lnet/minecraft/advancements/Advancement; b
	getRequirements ()[[Ljava/lang/String; i
	getRewards ()Lnet/minecraft/advancements/AdvancementRewards; d
net/minecraft/advancements/Advancement$Builder y$a
	criteria e
	display c
	parent b
	parentId a
	requirements f
	requirementsStrategy g
	rewards d
	addCriterion (Ljava/lang/String;Lnet/minecraft/advancements/Criterion;)Lnet/minecraft/advancements/Advancement$Builder; a
	addCriterion (Ljava/lang/String;Lnet/minecraft/advancements/CriterionTriggerInstance;)Lnet/minecraft/advancements/Advancement$Builder; a
	advancement ()Lnet/minecraft/advancements/Advancement$Builder; a
	build (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/advancements/Advancement; b
	canBuild (Ljava/util/function/Function;)Z a
	display (Lnet/minecraft/advancements/DisplayInfo;)Lnet/minecraft/advancements/Advancement$Builder; a
	display (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/network/chat/Component;Lnet/minecraft/network/chat/Component;Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/advancements/FrameType;ZZZ)Lnet/minecraft/advancements/Advancement$Builder; a
	display (Lnet/minecraft/world/level/ItemLike;Lnet/minecraft/network/chat/Component;Lnet/minecraft/network/chat/Component;Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/advancements/FrameType;ZZZ)Lnet/minecraft/advancements/Advancement$Builder; a
	fromJson (Lcom/google/gson/JsonObject;Lnet/minecraft/advancements/critereon/DeserializationContext;)Lnet/minecraft/advancements/Advancement$Builder; a
	fromNetwork (Lnet/minecraft/network/FriendlyByteBuf;)Lnet/minecraft/advancements/Advancement$Builder; b
	getCriteria ()Ljava/util/Map; c
	parent (Lnet/minecraft/advancements/Advancement;)Lnet/minecraft/advancements/Advancement$Builder; a
	parent (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/advancements/Advancement$Builder; a
	requirements (Lnet/minecraft/advancements/RequirementsStrategy;)Lnet/minecraft/advancements/Advancement$Builder; a
	requirements ([[Ljava/lang/String;)Lnet/minecraft/advancements/Advancement$Builder; a
	rewards (Lnet/minecraft/advancements/AdvancementRewards$Builder;)Lnet/minecraft/advancements/Advancement$Builder; a
	rewards (Lnet/minecraft/advancements/AdvancementRewards;)Lnet/minecraft/advancements/Advancement$Builder; a
	save (Ljava/util/function/Consumer;Ljava/lang/String;)Lnet/minecraft/advancements/Advancement; a
	serializeToJson ()Lcom/google/gson/JsonObject; b
	serializeToNetwork (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/advancements/AdvancementList z
	LOGGER a
	advancements b
	listener e
	roots c
	tasks d
	add (Ljava/util/Map;)V a
	clear ()V a
	get (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/advancements/Advancement; a
	getAllAdvancements ()Ljava/util/Collection; c
	getRoots ()Ljava/lang/Iterable; b
	remove (Ljava/util/Set;)V a
	remove (Lnet/minecraft/advancements/Advancement;)V a
	setListener (Lnet/minecraft/advancements/AdvancementList$Listener;)V a
net/minecraft/advancements/AdvancementList$Listener z$a
	onAddAdvancementRoot (Lnet/minecraft/advancements/Advancement;)V a
	onAddAdvancementTask (Lnet/minecraft/advancements/Advancement;)V c
	onAdvancementsCleared ()V a
	onRemoveAdvancementRoot (Lnet/minecraft/advancements/Advancement;)V b
	onRemoveAdvancementTask (Lnet/minecraft/advancements/Advancement;)V d
net/minecraft/advancements/AdvancementProgress aa
	criteria a
	requirements b
	compareTo (Lnet/minecraft/advancements/AdvancementProgress;)I a
	countCompletedRequirements ()I h
	fromNetwork (Lnet/minecraft/network/FriendlyByteBuf;)Lnet/minecraft/advancements/AdvancementProgress; b
	getCompletedCriteria ()Ljava/lang/Iterable; f
	getCriterion (Ljava/lang/String;)Lnet/minecraft/advancements/CriterionProgress; c
	getFirstProgressDate ()Ljava/util/Date; g
	getPercent ()F c
	getProgressText ()Ljava/lang/String; d
	getRemainingCriteria ()Ljava/lang/Iterable; e
	grantProgress (Ljava/lang/String;)Z a
	hasProgress ()Z b
	isDone ()Z a
	revokeProgress (Ljava/lang/String;)Z b
	serializeToNetwork (Lnet/minecraft/network/FriendlyByteBuf;)V a
	update (Ljava/util/Map;[[Ljava/lang/String;)V a
net/minecraft/advancements/AdvancementProgress$Serializer aa$a
	deserialize (Lcom/google/gson/JsonElement;Ljava/lang/reflect/Type;Lcom/google/gson/JsonDeserializationContext;)Lnet/minecraft/advancements/AdvancementProgress; a
	serialize (Lnet/minecraft/advancements/AdvancementProgress;Ljava/lang/reflect/Type;Lcom/google/gson/JsonSerializationContext;)Lcom/google/gson/JsonElement; a
net/minecraft/advancements/AdvancementRewards ab
	EMPTY a
	experience b
	function e
	loot c
	recipes d
	deserialize (Lcom/google/gson/JsonObject;)Lnet/minecraft/advancements/AdvancementRewards; a
	getRecipes ()[Lnet/minecraft/resources/ResourceLocation; a
	grant (Lnet/minecraft/server/level/ServerPlayer;)V a
	serializeToJson ()Lcom/google/gson/JsonElement; b
net/minecraft/advancements/AdvancementRewards$Builder ab$a
	experience a
	function d
	loot b
	recipes c
	addExperience (I)Lnet/minecraft/advancements/AdvancementRewards$Builder; b
	addLootTable (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/advancements/AdvancementRewards$Builder; b
	addRecipe (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/advancements/AdvancementRewards$Builder; d
	build ()Lnet/minecraft/advancements/AdvancementRewards; a
	experience (I)Lnet/minecraft/advancements/AdvancementRewards$Builder; a
	function (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/advancements/AdvancementRewards$Builder; e
	loot (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/advancements/AdvancementRewards$Builder; a
	recipe (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/advancements/AdvancementRewards$Builder; c
	runs (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/advancements/AdvancementRewards$Builder; f
net/minecraft/advancements/CriteriaTriggers ac
	BAD_OMEN I
	BEE_NEST_DESTROYED K
	BRED_ANIMALS o
	BREWED_POTION k
	CHANGED_DIMENSION v
	CHANNELED_LIGHTNING E
	CONSTRUCT_BEACON l
	CONSUME_ITEM z
	CRITERIA Q
	CURED_ZOMBIE_VILLAGER r
	EFFECTS_CHANGED A
	ENCHANTED_ITEM i
	ENTER_BLOCK d
	ENTITY_HURT_PLAYER h
	ENTITY_KILLED_PLAYER c
	FILLED_BUCKET j
	FISHING_ROD_HOOKED D
	GENERATE_LOOT N
	HONEY_BLOCK_SLIDE J
	IMPOSSIBLE a
	INVENTORY_CHANGED e
	ITEM_DURABILITY_CHANGED t
	ITEM_PICKED_UP_BY_ENTITY O
	ITEM_USED_ON_BLOCK M
	KILLED_BY_CROSSBOW G
	LEVITATION u
	LOCATION p
	NETHER_TRAVEL C
	PLACED_BLOCK y
	PLAYER_HURT_ENTITY g
	PLAYER_INTERACTED_WITH_ENTITY P
	PLAYER_KILLED_ENTITY b
	RAID_WIN H
	RECIPE_UNLOCKED f
	SHOT_CROSSBOW F
	SLEPT_IN_BED q
	SUMMONED_ENTITY n
	TAME_ANIMAL x
	TARGET_BLOCK_HIT L
	TICK w
	TRADE s
	USED_ENDER_EYE m
	USED_TOTEM B
	all ()Ljava/lang/Iterable; a
	getCriterion (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/advancements/CriterionTrigger; a
	register (Lnet/minecraft/advancements/CriterionTrigger;)Lnet/minecraft/advancements/CriterionTrigger; a
net/minecraft/advancements/Criterion ad
	trigger a
	criteriaFromJson (Lcom/google/gson/JsonObject;Lnet/minecraft/advancements/critereon/DeserializationContext;)Ljava/util/Map; b
	criteriaFromNetwork (Lnet/minecraft/network/FriendlyByteBuf;)Ljava/util/Map; c
	criterionFromJson (Lcom/google/gson/JsonObject;Lnet/minecraft/advancements/critereon/DeserializationContext;)Lnet/minecraft/advancements/Criterion; a
	criterionFromNetwork (Lnet/minecraft/network/FriendlyByteBuf;)Lnet/minecraft/advancements/Criterion; b
	getTrigger ()Lnet/minecraft/advancements/CriterionTriggerInstance; a
	serializeToJson ()Lcom/google/gson/JsonElement; b
	serializeToNetwork (Ljava/util/Map;Lnet/minecraft/network/FriendlyByteBuf;)V a
	serializeToNetwork (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/advancements/CriterionProgress ae
	DATE_FORMAT a
	obtained b
	fromJson (Ljava/lang/String;)Lnet/minecraft/advancements/CriterionProgress; a
	fromNetwork (Lnet/minecraft/network/FriendlyByteBuf;)Lnet/minecraft/advancements/CriterionProgress; b
	getObtained ()Ljava/util/Date; d
	grant ()V b
	isDone ()Z a
	revoke ()V c
	serializeToJson ()Lcom/google/gson/JsonElement; e
	serializeToNetwork (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/advancements/CriterionTrigger af
	addPlayerListener (Lnet/minecraft/server/PlayerAdvancements;Lnet/minecraft/advancements/CriterionTrigger$Listener;)V a
	createInstance (Lcom/google/gson/JsonObject;Lnet/minecraft/advancements/critereon/DeserializationContext;)Lnet/minecraft/advancements/CriterionTriggerInstance; a
	getId ()Lnet/minecraft/resources/ResourceLocation; a
	removePlayerListener (Lnet/minecraft/server/PlayerAdvancements;Lnet/minecraft/advancements/CriterionTrigger$Listener;)V b
	removePlayerListeners (Lnet/minecraft/server/PlayerAdvancements;)V a
net/minecraft/advancements/CriterionTrigger$Listener af$a
	advancement b
	criterion c
	trigger a
	getTriggerInstance ()Lnet/minecraft/advancements/CriterionTriggerInstance; a
	run (Lnet/minecraft/server/PlayerAdvancements;)V a
net/minecraft/advancements/CriterionTriggerInstance ag
	getCriterion ()Lnet/minecraft/resources/ResourceLocation; a
	serializeToJson (Lnet/minecraft/advancements/critereon/SerializationContext;)Lcom/google/gson/JsonObject; a
net/minecraft/advancements/DisplayInfo ah
	announceChat g
	background d
	description b
	frame e
	hidden h
	icon c
	showToast f
	title a
	x i
	y j
	fromJson (Lcom/google/gson/JsonObject;)Lnet/minecraft/advancements/DisplayInfo; a
	fromNetwork (Lnet/minecraft/network/FriendlyByteBuf;)Lnet/minecraft/advancements/DisplayInfo; b
	getBackground ()Lnet/minecraft/resources/ResourceLocation; d
	getDescription ()Lnet/minecraft/network/chat/Component; b
	getFrame ()Lnet/minecraft/advancements/FrameType; e
	getIcon ()Lnet/minecraft/world/item/ItemStack; c
	getIcon (Lcom/google/gson/JsonObject;)Lnet/minecraft/world/item/ItemStack; b
	getTitle ()Lnet/minecraft/network/chat/Component; a
	getX ()F f
	getY ()F g
	isHidden ()Z j
	serializeIcon ()Lcom/google/gson/JsonObject; l
	serializeToJson ()Lcom/google/gson/JsonElement; k
	serializeToNetwork (Lnet/minecraft/network/FriendlyByteBuf;)V a
	setLocation (FF)V a
	shouldAnnounceChat ()Z i
	shouldShowToast ()Z h
net/minecraft/advancements/FrameType ai
	$VALUES h
	CHALLENGE b
	GOAL c
	TASK a
	chatColor f
	displayName g
	name d
	texture e
	byName (Ljava/lang/String;)Lnet/minecraft/advancements/FrameType; a
	getChatColor ()Lnet/minecraft/ChatFormatting; c
	getDisplayName ()Lnet/minecraft/network/chat/Component; d
	getName ()Ljava/lang/String; a
	getTexture ()I b
net/minecraft/advancements/RequirementsStrategy aj
	AND a
	OR b
net/minecraft/advancements/TreeNodePosition ak
	advancement a
	ancestor f
	change k
	childIndex d
	children e
	mod j
	parent b
	previousSibling c
	shift l
	thread g
	x h
	y i
	addChild (Lnet/minecraft/advancements/Advancement;Lnet/minecraft/advancements/TreeNodePosition;)Lnet/minecraft/advancements/TreeNodePosition; a
	apportion (Lnet/minecraft/advancements/TreeNodePosition;)Lnet/minecraft/advancements/TreeNodePosition; a
	executeShifts ()V b
	finalizePosition ()V e
	firstWalk ()V a
	getAncestor (Lnet/minecraft/advancements/TreeNodePosition;Lnet/minecraft/advancements/TreeNodePosition;)Lnet/minecraft/advancements/TreeNodePosition; a
	moveSubtree (Lnet/minecraft/advancements/TreeNodePosition;F)V a
	nextOrThread ()Lnet/minecraft/advancements/TreeNodePosition; d
	previousOrThread ()Lnet/minecraft/advancements/TreeNodePosition; c
	run (Lnet/minecraft/advancements/Advancement;)V a
	secondWalk (FIF)F a
	thirdWalk (F)V a
net/minecraft/advancements/critereon/AbstractCriterionTriggerInstance al
	criterion a
	player b
	getCriterion ()Lnet/minecraft/resources/ResourceLocation; a
	getPlayerPredicate ()Lnet/minecraft/advancements/critereon/EntityPredicate$Composite; b
	serializeToJson (Lnet/minecraft/advancements/critereon/SerializationContext;)Lcom/google/gson/JsonObject; a
net/minecraft/advancements/critereon/BeeNestDestroyedTrigger am
	ID a
	createInstance (Lcom/google/gson/JsonObject;Lnet/minecraft/advancements/critereon/EntityPredicate$Composite;Lnet/minecraft/advancements/critereon/DeserializationContext;)Lnet/minecraft/advancements/critereon/AbstractCriterionTriggerInstance; b
	createInstance (Lcom/google/gson/JsonObject;Lnet/minecraft/advancements/critereon/EntityPredicate$Composite;Lnet/minecraft/advancements/critereon/DeserializationContext;)Lnet/minecraft/advancements/critereon/BeeNestDestroyedTrigger$TriggerInstance; a
	deserializeBlock (Lcom/google/gson/JsonObject;)Lnet/minecraft/world/level/block/Block; a
	getId ()Lnet/minecraft/resources/ResourceLocation; a
	trigger (Lnet/minecraft/server/level/ServerPlayer;Lnet/minecraft/world/level/block/Block;Lnet/minecraft/world/item/ItemStack;I)V a
net/minecraft/advancements/critereon/BeeNestDestroyedTrigger$TriggerInstance am$a
	block a
	item b
	numBees c
	destroyedBeeNest (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/advancements/critereon/ItemPredicate$Builder;Lnet/minecraft/advancements/critereon/MinMaxBounds$Ints;)Lnet/minecraft/advancements/critereon/BeeNestDestroyedTrigger$TriggerInstance; a
	matches (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/world/item/ItemStack;I)Z a
	serializeToJson (Lnet/minecraft/advancements/critereon/SerializationContext;)Lcom/google/gson/JsonObject; a
net/minecraft/advancements/critereon/BlockPredicate an
	ANY a
	block c
	nbt e
	properties d
	tag b
	fromJson (Lcom/google/gson/JsonElement;)Lnet/minecraft/advancements/critereon/BlockPredicate; a
	matches (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;)Z a
	serializeToJson ()Lcom/google/gson/JsonElement; a
net/minecraft/advancements/critereon/BlockPredicate$Builder an$a
	block a
	blocks b
	nbt d
	properties c
	block ()Lnet/minecraft/advancements/critereon/BlockPredicate$Builder; a
	build ()Lnet/minecraft/advancements/critereon/BlockPredicate; b
	hasNbt (Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/advancements/critereon/BlockPredicate$Builder; a
	of (Lnet/minecraft/tags/Tag;)Lnet/minecraft/advancements/critereon/BlockPredicate$Builder; a
	of (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/advancements/critereon/BlockPredicate$Builder; a
	setProperties (Lnet/minecraft/advancements/critereon/StatePropertiesPredicate;)Lnet/minecraft/advancements/critereon/BlockPredicate$Builder; a
net/minecraft/advancements/critereon/BredAnimalsTrigger ao
	ID a
	createInstance (Lcom/google/gson/JsonObject;Lnet/minecraft/advancements/critereon/EntityPredicate$Composite;Lnet/minecraft/advancements/critereon/DeserializationContext;)Lnet/minecraft/advancements/critereon/AbstractCriterionTriggerInstance; b
	createInstance (Lcom/google/gson/JsonObject;Lnet/minecraft/advancements/critereon/EntityPredicate$Composite;Lnet/minecraft/advancements/critereon/DeserializationContext;)Lnet/minecraft/advancements/critereon/BredAnimalsTrigger$TriggerInstance; a
	getId ()Lnet/minecraft/resources/ResourceLocation; a
	trigger (Lnet/minecraft/server/level/ServerPlayer;Lnet/minecraft/world/entity/animal/Animal;Lnet/minecraft/world/entity/animal/Animal;Lnet/minecraft/world/entity/AgableMob;)V a
net/minecraft/advancements/critereon/BredAnimalsTrigger$TriggerInstance ao$a
	child c
	parent a
	partner b
	bredAnimals ()Lnet/minecraft/advancements/critereon/BredAnimalsTrigger$TriggerInstance; c
	bredAnimals (Lnet/minecraft/advancements/critereon/EntityPredicate$Builder;)Lnet/minecraft/advancements/critereon/BredAnimalsTrigger$TriggerInstance; a
	bredAnimals (Lnet/minecraft/advancements/critereon/EntityPredicate;Lnet/minecraft/advancements/critereon/EntityPredicate;Lnet/minecraft/advancements/critereon/EntityPredicate;)Lnet/minecraft/advancements/critereon/BredAnimalsTrigger$TriggerInstance; a
	matches (Lnet/minecraft/world/level/storage/loot/LootContext;Lnet/minecraft/world/level/storage/loot/LootContext;Lnet/minecraft/world/level/storage/loot/LootContext;)Z a
	serializeToJson (Lnet/minecraft/advancements/critereon/SerializationContext;)Lcom/google/gson/JsonObject; a
net/minecraft/advancements/critereon/BrewedPotionTrigger ap
	ID a
	createInstance (Lcom/google/gson/JsonObject;Lnet/minecraft/advancements/critereon/EntityPredicate$Composite;Lnet/minecraft/advancements/critereon/DeserializationContext;)Lnet/minecraft/advancements/critereon/AbstractCriterionTriggerInstance; b
	createInstance (Lcom/google/gson/JsonObject;Lnet/minecraft/advancements/critereon/EntityPredicate$Composite;Lnet/minecraft/advancements/critereon/DeserializationContext;)Lnet/minecraft/advancements/critereon/BrewedPotionTrigger$TriggerInstance; a
	getId ()Lnet/minecraft/resources/ResourceLocation; a
	trigger (Lnet/minecraft/server/level/ServerPlayer;Lnet/minecraft/world/item/alchemy/Potion;)V a
net/minecraft/advancements/critereon/BrewedPotionTrigger$TriggerInstance ap$a
	potion a
	brewedPotion ()Lnet/minecraft/advancements/critereon/BrewedPotionTrigger$TriggerInstance; c
	matches (Lnet/minecraft/world/item/alchemy/Potion;)Z a
	serializeToJson (Lnet/minecraft/advancements/critereon/SerializationContext;)Lcom/google/gson/JsonObject; a
net/minecraft/advancements/critereon/ChangeDimensionTrigger aq
	ID a
	createInstance (Lcom/google/gson/JsonObject;Lnet/minecraft/advancements/critereon/EntityPredicate$Composite;Lnet/minecraft/advancements/critereon/DeserializationContext;)Lnet/minecraft/advancements/critereon/AbstractCriterionTriggerInstance; b
	createInstance (Lcom/google/gson/JsonObject;Lnet/minecraft/advancements/critereon/EntityPredicate$Composite;Lnet/minecraft/advancements/critereon/DeserializationContext;)Lnet/minecraft/advancements/critereon/ChangeDimensionTrigger$TriggerInstance; a
	getId ()Lnet/minecraft/resources/ResourceLocation; a
	trigger (Lnet/minecraft/server/level/ServerPlayer;Lnet/minecraft/resources/ResourceKey;Lnet/minecraft/resources/ResourceKey;)V a
net/minecraft/advancements/critereon/ChangeDimensionTrigger$TriggerInstance aq$a
	from a
	to b
	changedDimension ()Lnet/minecraft/advancements/critereon/ChangeDimensionTrigger$TriggerInstance; c
	changedDimension (Lnet/minecraft/resources/ResourceKey;Lnet/minecraft/resources/ResourceKey;)Lnet/minecraft/advancements/critereon/ChangeDimensionTrigger$TriggerInstance; a
	changedDimensionFrom (Lnet/minecraft/resources/ResourceKey;)Lnet/minecraft/advancements/critereon/ChangeDimensionTrigger$TriggerInstance; b
	changedDimensionTo (Lnet/minecraft/resources/ResourceKey;)Lnet/minecraft/advancements/critereon/ChangeDimensionTrigger$TriggerInstance; a
	matches (Lnet/minecraft/resources/ResourceKey;Lnet/minecraft/resources/ResourceKey;)Z b
	serializeToJson (Lnet/minecraft/advancements/critereon/SerializationContext;)Lcom/google/gson/JsonObject; a
net/minecraft/advancements/critereon/ChanneledLightningTrigger ar
	ID a
	createInstance (Lcom/google/gson/JsonObject;Lnet/minecraft/advancements/critereon/EntityPredicate$Composite;Lnet/minecraft/advancements/critereon/DeserializationContext;)Lnet/minecraft/advancements/critereon/AbstractCriterionTriggerInstance; b
	createInstance (Lcom/google/gson/JsonObject;Lnet/minecraft/advancements/critereon/EntityPredicate$Composite;Lnet/minecraft/advancements/critereon/DeserializationContext;)Lnet/minecraft/advancements/critereon/ChanneledLightningTrigger$TriggerInstance; a
	getId ()Lnet/minecraft/resources/ResourceLocation; a
	trigger (Lnet/minecraft/server/level/ServerPlayer;Ljava/util/Collection;)V a
net/minecraft/advancements/critereon/ChanneledLightningTrigger$TriggerInstance ar$a
	victims a
	channeledLightning ([Lnet/minecraft/advancements/critereon/EntityPredicate;)Lnet/minecraft/advancements/critereon/ChanneledLightningTrigger$TriggerInstance; a
	matches (Ljava/util/Collection;)Z a
	serializeToJson (Lnet/minecraft/advancements/critereon/SerializationContext;)Lcom/google/gson/JsonObject; a
net/minecraft/advancements/critereon/ConstructBeaconTrigger as
	ID a
	createInstance (Lcom/google/gson/JsonObject;Lnet/minecraft/advancements/critereon/EntityPredicate$Composite;Lnet/minecraft/advancements/critereon/DeserializationContext;)Lnet/minecraft/advancements/critereon/AbstractCriterionTriggerInstance; b
	createInstance (Lcom/google/gson/JsonObject;Lnet/minecraft/advancements/critereon/EntityPredicate$Composite;Lnet/minecraft/advancements/critereon/DeserializationContext;)Lnet/minecraft/advancements/critereon/ConstructBeaconTrigger$TriggerInstance; a
	getId ()Lnet/minecraft/resources/ResourceLocation; a
	trigger (Lnet/minecraft/server/level/ServerPlayer;Lnet/minecraft/world/level/block/entity/BeaconBlockEntity;)V a
net/minecraft/advancements/critereon/ConstructBeaconTrigger$TriggerInstance as$a
	level a
	constructedBeacon ()Lnet/minecraft/advancements/critereon/ConstructBeaconTrigger$TriggerInstance; c
	constructedBeacon (Lnet/minecraft/advancements/critereon/MinMaxBounds$Ints;)Lnet/minecraft/advancements/critereon/ConstructBeaconTrigger$TriggerInstance; a
	matches (Lnet/minecraft/world/level/block/entity/BeaconBlockEntity;)Z a
	serializeToJson (Lnet/minecraft/advancements/critereon/SerializationContext;)Lcom/google/gson/JsonObject; a
net/minecraft/advancements/critereon/ConsumeItemTrigger at
	ID a
	createInstance (Lcom/google/gson/JsonObject;Lnet/minecraft/advancements/critereon/EntityPredicate$Composite;Lnet/minecraft/advancements/critereon/DeserializationContext;)Lnet/minecraft/advancements/critereon/AbstractCriterionTriggerInstance; b
	createInstance (Lcom/google/gson/JsonObject;Lnet/minecraft/advancements/critereon/EntityPredicate$Composite;Lnet/minecraft/advancements/critereon/DeserializationContext;)Lnet/minecraft/advancements/critereon/ConsumeItemTrigger$TriggerInstance; a
	getId ()Lnet/minecraft/resources/ResourceLocation; a
	trigger (Lnet/minecraft/server/level/ServerPlayer;Lnet/minecraft/world/item/ItemStack;)V a
net/minecraft/advancements/critereon/ConsumeItemTrigger$TriggerInstance at$a
	item a
	matches (Lnet/minecraft/world/item/ItemStack;)Z a
	serializeToJson (Lnet/minecraft/advancements/critereon/SerializationContext;)Lcom/google/gson/JsonObject; a
	usedItem ()Lnet/minecraft/advancements/critereon/ConsumeItemTrigger$TriggerInstance; c
	usedItem (Lnet/minecraft/advancements/critereon/ItemPredicate;)Lnet/minecraft/advancements/critereon/ConsumeItemTrigger$TriggerInstance; a
	usedItem (Lnet/minecraft/world/level/ItemLike;)Lnet/minecraft/advancements/critereon/ConsumeItemTrigger$TriggerInstance; a
net/minecraft/advancements/critereon/CuredZombieVillagerTrigger au
	ID a
	createInstance (Lcom/google/gson/JsonObject;Lnet/minecraft/advancements/critereon/EntityPredicate$Composite;Lnet/minecraft/advancements/critereon/DeserializationContext;)Lnet/minecraft/advancements/critereon/AbstractCriterionTriggerInstance; b
	createInstance (Lcom/google/gson/JsonObject;Lnet/minecraft/advancements/critereon/EntityPredicate$Composite;Lnet/minecraft/advancements/critereon/DeserializationContext;)Lnet/minecraft/advancements/critereon/CuredZombieVillagerTrigger$TriggerInstance; a
	getId ()Lnet/minecraft/resources/ResourceLocation; a
	trigger (Lnet/minecraft/server/level/ServerPlayer;Lnet/minecraft/world/entity/monster/Zombie;Lnet/minecraft/world/entity/npc/Villager;)V a
net/minecraft/advancements/critereon/CuredZombieVillagerTrigger$TriggerInstance au$a
	villager b
	zombie a
	curedZombieVillager ()Lnet/minecraft/advancements/critereon/CuredZombieVillagerTrigger$TriggerInstance; c
	matches (Lnet/minecraft/world/level/storage/loot/LootContext;Lnet/minecraft/world/level/storage/loot/LootContext;)Z a
	serializeToJson (Lnet/minecraft/advancements/critereon/SerializationContext;)Lcom/google/gson/JsonObject; a
net/minecraft/advancements/critereon/DamagePredicate av
	ANY a
	blocked e
	dealtDamage b
	sourceEntity d
	takenDamage c
	type f
	fromJson (Lcom/google/gson/JsonElement;)Lnet/minecraft/advancements/critereon/DamagePredicate; a
	matches (Lnet/minecraft/server/level/ServerPlayer;Lnet/minecraft/world/damagesource/DamageSource;FFZ)Z a
	serializeToJson ()Lcom/google/gson/JsonElement; a
net/minecraft/advancements/critereon/DamagePredicate$Builder av$a
	blocked d
	dealtDamage a
	sourceEntity c
	takenDamage b
	type e
	blocked (Ljava/lang/Boolean;)Lnet/minecraft/advancements/critereon/DamagePredicate$Builder; a
	build ()Lnet/minecraft/advancements/critereon/DamagePredicate; b
	damageInstance ()Lnet/minecraft/advancements/critereon/DamagePredicate$Builder; a
	dealtDamage (Lnet/minecraft/advancements/critereon/MinMaxBounds$Floats;)Lnet/minecraft/advancements/critereon/DamagePredicate$Builder; a
	sourceEntity (Lnet/minecraft/advancements/critereon/EntityPredicate;)Lnet/minecraft/advancements/critereon/DamagePredicate$Builder; a
	takenDamage (Lnet/minecraft/advancements/critereon/MinMaxBounds$Floats;)Lnet/minecraft/advancements/critereon/DamagePredicate$Builder; b
	type (Lnet/minecraft/advancements/critereon/DamageSourcePredicate$Builder;)Lnet/minecraft/advancements/critereon/DamagePredicate$Builder; a
	type (Lnet/minecraft/advancements/critereon/DamageSourcePredicate;)Lnet/minecraft/advancements/critereon/DamagePredicate$Builder; a
net/minecraft/advancements/critereon/DamageSourcePredicate aw
	ANY a
	bypassesArmor d
	bypassesInvulnerability e
	bypassesMagic f
	directEntity j
	isExplosion c
	isFire g
	isLightning i
	isMagic h
	isProjectile b
	sourceEntity k
	addOptionally (Lcom/google/gson/JsonObject;Ljava/lang/String;Ljava/lang/Boolean;)V a
	fromJson (Lcom/google/gson/JsonElement;)Lnet/minecraft/advancements/critereon/DamageSourcePredicate; a
	getOptionalBoolean (Lcom/google/gson/JsonObject;Ljava/lang/String;)Ljava/lang/Boolean; a
	matches (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/phys/Vec3;Lnet/minecraft/world/damagesource/DamageSource;)Z a
	matches (Lnet/minecraft/server/level/ServerPlayer;Lnet/minecraft/world/damagesource/DamageSource;)Z a
	serializeToJson ()Lcom/google/gson/JsonElement; a
net/minecraft/advancements/critereon/DamageSourcePredicate$Builder aw$a
	bypassesArmor c
	bypassesInvulnerability d
	bypassesMagic e
	directEntity i
	isExplosion b
	isFire f
	isLightning h
	isMagic g
	isProjectile a
	sourceEntity j
	build ()Lnet/minecraft/advancements/critereon/DamageSourcePredicate; b
	bypassesArmor (Ljava/lang/Boolean;)Lnet/minecraft/advancements/critereon/DamageSourcePredicate$Builder; c
	bypassesInvulnerability (Ljava/lang/Boolean;)Lnet/minecraft/advancements/critereon/DamageSourcePredicate$Builder; d
	bypassesMagic (Ljava/lang/Boolean;)Lnet/minecraft/advancements/critereon/DamageSourcePredicate$Builder; e
	damageType ()Lnet/minecraft/advancements/critereon/DamageSourcePredicate$Builder; a
	direct (Lnet/minecraft/advancements/critereon/EntityPredicate$Builder;)Lnet/minecraft/advancements/critereon/DamageSourcePredicate$Builder; a
	direct (Lnet/minecraft/advancements/critereon/EntityPredicate;)Lnet/minecraft/advancements/critereon/DamageSourcePredicate$Builder; a
	isExplosion (Ljava/lang/Boolean;)Lnet/minecraft/advancements/critereon/DamageSourcePredicate$Builder; b
	isFire (Ljava/lang/Boolean;)Lnet/minecraft/advancements/critereon/DamageSourcePredicate$Builder; f
	isLightning (Ljava/lang/Boolean;)Lnet/minecraft/advancements/critereon/DamageSourcePredicate$Builder; h
	isMagic (Ljava/lang/Boolean;)Lnet/minecraft/advancements/critereon/DamageSourcePredicate$Builder; g
	isProjectile (Ljava/lang/Boolean;)Lnet/minecraft/advancements/critereon/DamageSourcePredicate$Builder; a
	source (Lnet/minecraft/advancements/critereon/EntityPredicate$Builder;)Lnet/minecraft/advancements/critereon/DamageSourcePredicate$Builder; b
	source (Lnet/minecraft/advancements/critereon/EntityPredicate;)Lnet/minecraft/advancements/critereon/DamageSourcePredicate$Builder; b
net/minecraft/advancements/critereon/DeserializationContext ax
	LOGGER a
	id b
	predicateGson d
	predicateManager c
	deserializeConditions (Lcom/google/gson/JsonArray;Ljava/lang/String;Lnet/minecraft/world/level/storage/loot/parameters/LootContextParamSet;)[Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition; a
	getAdvancementId ()Lnet/minecraft/resources/ResourceLocation; a
net/minecraft/advancements/critereon/DistancePredicate ay
	ANY a
	absolute f
	horizontal e
	x b
	y c
	z d
	fromJson (Lcom/google/gson/JsonElement;)Lnet/minecraft/advancements/critereon/DistancePredicate; a
	horizontal (Lnet/minecraft/advancements/critereon/MinMaxBounds$Floats;)Lnet/minecraft/advancements/critereon/DistancePredicate; a
	matches (DDDDDD)Z a
	serializeToJson ()Lcom/google/gson/JsonElement; a
	vertical (Lnet/minecraft/advancements/critereon/MinMaxBounds$Floats;)Lnet/minecraft/advancements/critereon/DistancePredicate; b
net/minecraft/advancements/critereon/EffectsChangedTrigger az
	ID a
	createInstance (Lcom/google/gson/JsonObject;Lnet/minecraft/advancements/critereon/EntityPredicate$Composite;Lnet/minecraft/advancements/critereon/DeserializationContext;)Lnet/minecraft/advancements/critereon/AbstractCriterionTriggerInstance; b
	createInstance (Lcom/google/gson/JsonObject;Lnet/minecraft/advancements/critereon/EntityPredicate$Composite;Lnet/minecraft/advancements/critereon/DeserializationContext;)Lnet/minecraft/advancements/critereon/EffectsChangedTrigger$TriggerInstance; a
	getId ()Lnet/minecraft/resources/ResourceLocation; a
	trigger (Lnet/minecraft/server/level/ServerPlayer;)V a
net/minecraft/advancements/critereon/EffectsChangedTrigger$TriggerInstance az$a
	effects a
	hasEffects (Lnet/minecraft/advancements/critereon/MobEffectsPredicate;)Lnet/minecraft/advancements/critereon/EffectsChangedTrigger$TriggerInstance; a
	matches (Lnet/minecraft/server/level/ServerPlayer;)Z a
	serializeToJson (Lnet/minecraft/advancements/critereon/SerializationContext;)Lcom/google/gson/JsonObject; a
net/minecraft/advancements/critereon/EnchantedItemTrigger ba
	ID a
	createInstance (Lcom/google/gson/JsonObject;Lnet/minecraft/advancements/critereon/EntityPredicate$Composite;Lnet/minecraft/advancements/critereon/DeserializationContext;)Lnet/minecraft/advancements/critereon/AbstractCriterionTriggerInstance; b
	createInstance (Lcom/google/gson/JsonObject;Lnet/minecraft/advancements/critereon/EntityPredicate$Composite;Lnet/minecraft/advancements/critereon/DeserializationContext;)Lnet/minecraft/advancements/critereon/EnchantedItemTrigger$TriggerInstance; a
	getId ()Lnet/minecraft/resources/ResourceLocation; a
	trigger (Lnet/minecraft/server/level/ServerPlayer;Lnet/minecraft/world/item/ItemStack;I)V a
net/minecraft/advancements/critereon/EnchantedItemTrigger$TriggerInstance ba$a
	item a
	levels b
	enchantedItem ()Lnet/minecraft/advancements/critereon/EnchantedItemTrigger$TriggerInstance; c
	matches (Lnet/minecraft/world/item/ItemStack;I)Z a
	serializeToJson (Lnet/minecraft/advancements/critereon/SerializationContext;)Lcom/google/gson/JsonObject; a
net/minecraft/advancements/critereon/EnchantmentPredicate bb
	ANY a
	NONE b
	enchantment c
	level d
	containedIn (Ljava/util/Map;)Z a
	fromJson (Lcom/google/gson/JsonElement;)Lnet/minecraft/advancements/critereon/EnchantmentPredicate; a
	fromJsonArray (Lcom/google/gson/JsonElement;)[Lnet/minecraft/advancements/critereon/EnchantmentPredicate; b
	serializeToJson ()Lcom/google/gson/JsonElement; a
net/minecraft/advancements/critereon/EnterBlockTrigger bc
	ID a
	createInstance (Lcom/google/gson/JsonObject;Lnet/minecraft/advancements/critereon/EntityPredicate$Composite;Lnet/minecraft/advancements/critereon/DeserializationContext;)Lnet/minecraft/advancements/critereon/AbstractCriterionTriggerInstance; b
	createInstance (Lcom/google/gson/JsonObject;Lnet/minecraft/advancements/critereon/EntityPredicate$Composite;Lnet/minecraft/advancements/critereon/DeserializationContext;)Lnet/minecraft/advancements/critereon/EnterBlockTrigger$TriggerInstance; a
	deserializeBlock (Lcom/google/gson/JsonObject;)Lnet/minecraft/world/level/block/Block; a
	getId ()Lnet/minecraft/resources/ResourceLocation; a
	trigger (Lnet/minecraft/server/level/ServerPlayer;Lnet/minecraft/world/level/block/state/BlockState;)V a
net/minecraft/advancements/critereon/EnterBlockTrigger$TriggerInstance bc$a
	block a
	state b
	entersBlock (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/advancements/critereon/EnterBlockTrigger$TriggerInstance; a
	matches (Lnet/minecraft/world/level/block/state/BlockState;)Z a
	serializeToJson (Lnet/minecraft/advancements/critereon/SerializationContext;)Lcom/google/gson/JsonObject; a
net/minecraft/advancements/critereon/EntityEquipmentPredicate bd
	ANY a
	CAPTAIN b
	chest d
	feet f
	head c
	legs e
	mainhand g
	offhand h
	fromJson (Lcom/google/gson/JsonElement;)Lnet/minecraft/advancements/critereon/EntityEquipmentPredicate; a
	matches (Lnet/minecraft/world/entity/Entity;)Z a
	serializeToJson ()Lcom/google/gson/JsonElement; a
net/minecraft/advancements/critereon/EntityEquipmentPredicate$Builder bd$a
	chest b
	feet d
	head a
	legs c
	mainhand e
	offhand f
	build ()Lnet/minecraft/advancements/critereon/EntityEquipmentPredicate; b
	chest (Lnet/minecraft/advancements/critereon/ItemPredicate;)Lnet/minecraft/advancements/critereon/EntityEquipmentPredicate$Builder; b
	equipment ()Lnet/minecraft/advancements/critereon/EntityEquipmentPredicate$Builder; a
	feet (Lnet/minecraft/advancements/critereon/ItemPredicate;)Lnet/minecraft/advancements/critereon/EntityEquipmentPredicate$Builder; d
	head (Lnet/minecraft/advancements/critereon/ItemPredicate;)Lnet/minecraft/advancements/critereon/EntityEquipmentPredicate$Builder; a
	legs (Lnet/minecraft/advancements/critereon/ItemPredicate;)Lnet/minecraft/advancements/critereon/EntityEquipmentPredicate$Builder; c
	mainhand (Lnet/minecraft/advancements/critereon/ItemPredicate;)Lnet/minecraft/advancements/critereon/EntityEquipmentPredicate$Builder; e
	offhand (Lnet/minecraft/advancements/critereon/ItemPredicate;)Lnet/minecraft/advancements/critereon/EntityEquipmentPredicate$Builder; f
net/minecraft/advancements/critereon/EntityFlagsPredicate be
	ANY a
	isBaby f
	isCrouching c
	isOnFire b
	isSprinting d
	isSwimming e
	addOptionalBoolean (Lcom/google/gson/JsonObject;Ljava/lang/String;Ljava/lang/Boolean;)V a
	fromJson (Lcom/google/gson/JsonElement;)Lnet/minecraft/advancements/critereon/EntityFlagsPredicate; a
	getOptionalBoolean (Lcom/google/gson/JsonObject;Ljava/lang/String;)Ljava/lang/Boolean; a
	matches (Lnet/minecraft/world/entity/Entity;)Z a
	serializeToJson ()Lcom/google/gson/JsonElement; a
net/minecraft/advancements/critereon/EntityFlagsPredicate$Builder be$a
	isBaby e
	isCrouching b
	isOnFire a
	isSprinting c
	isSwimming d
	build ()Lnet/minecraft/advancements/critereon/EntityFlagsPredicate; b
	flags ()Lnet/minecraft/advancements/critereon/EntityFlagsPredicate$Builder; a
	setCrouching (Ljava/lang/Boolean;)Lnet/minecraft/advancements/critereon/EntityFlagsPredicate$Builder; b
	setIsBaby (Ljava/lang/Boolean;)Lnet/minecraft/advancements/critereon/EntityFlagsPredicate$Builder; e
	setOnFire (Ljava/lang/Boolean;)Lnet/minecraft/advancements/critereon/EntityFlagsPredicate$Builder; a
	setSprinting (Ljava/lang/Boolean;)Lnet/minecraft/advancements/critereon/EntityFlagsPredicate$Builder; c
	setSwimming (Ljava/lang/Boolean;)Lnet/minecraft/advancements/critereon/EntityFlagsPredicate$Builder; d
net/minecraft/advancements/critereon/EntityHurtPlayerTrigger bf
	ID a
	createInstance (Lcom/google/gson/JsonObject;Lnet/minecraft/advancements/critereon/EntityPredicate$Composite;Lnet/minecraft/advancements/critereon/DeserializationContext;)Lnet/minecraft/advancements/critereon/AbstractCriterionTriggerInstance; b
	createInstance (Lcom/google/gson/JsonObject;Lnet/minecraft/advancements/critereon/EntityPredicate$Composite;Lnet/minecraft/advancements/critereon/DeserializationContext;)Lnet/minecraft/advancements/critereon/EntityHurtPlayerTrigger$TriggerInstance; a
	getId ()Lnet/minecraft/resources/ResourceLocation; a
	trigger (Lnet/minecraft/server/level/ServerPlayer;Lnet/minecraft/world/damagesource/DamageSource;FFZ)V a
net/minecraft/advancements/critereon/EntityHurtPlayerTrigger$TriggerInstance bf$a
	damage a
	entityHurtPlayer ()Lnet/minecraft/advancements/critereon/EntityHurtPlayerTrigger$TriggerInstance; c
	entityHurtPlayer (Lnet/minecraft/advancements/critereon/DamagePredicate$Builder;)Lnet/minecraft/advancements/critereon/EntityHurtPlayerTrigger$TriggerInstance; a
	entityHurtPlayer (Lnet/minecraft/advancements/critereon/DamagePredicate;)Lnet/minecraft/advancements/critereon/EntityHurtPlayerTrigger$TriggerInstance; a
	matches (Lnet/minecraft/server/level/ServerPlayer;Lnet/minecraft/world/damagesource/DamageSource;FFZ)Z a
	serializeToJson (Lnet/minecraft/advancements/critereon/SerializationContext;)Lcom/google/gson/JsonObject; a
net/minecraft/advancements/critereon/EntityPredicate bg
	ANY a
	catType n
	distanceToPlayer c
	effects e
	entityType b
	equipment h
	fishingHook j
	flags g
	location d
	nbt f
	player i
	targetedEntity l
	team m
	vehicle k
	createContext (Lnet/minecraft/server/level/ServerPlayer;Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/world/level/storage/loot/LootContext; b
	fromJson (Lcom/google/gson/JsonElement;)Lnet/minecraft/advancements/critereon/EntityPredicate; a
	matches (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/phys/Vec3;Lnet/minecraft/world/entity/Entity;)Z a
	matches (Lnet/minecraft/server/level/ServerPlayer;Lnet/minecraft/world/entity/Entity;)Z a
	serializeToJson ()Lcom/google/gson/JsonElement; a
net/minecraft/advancements/critereon/EntityPredicate$Builder bg$a
	catType m
	distanceToPlayer b
	effects d
	entityType a
	equipment g
	fishingHook i
	flags f
	location c
	nbt e
	player h
	targetedEntity k
	team l
	vehicle j
	build ()Lnet/minecraft/advancements/critereon/EntityPredicate; b
	catType (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/advancements/critereon/EntityPredicate$Builder; b
	distance (Lnet/minecraft/advancements/critereon/DistancePredicate;)Lnet/minecraft/advancements/critereon/EntityPredicate$Builder; a
	effects (Lnet/minecraft/advancements/critereon/MobEffectsPredicate;)Lnet/minecraft/advancements/critereon/EntityPredicate$Builder; a
	entity ()Lnet/minecraft/advancements/critereon/EntityPredicate$Builder; a
	entityType (Lnet/minecraft/advancements/critereon/EntityTypePredicate;)Lnet/minecraft/advancements/critereon/EntityPredicate$Builder; a
	equipment (Lnet/minecraft/advancements/critereon/EntityEquipmentPredicate;)Lnet/minecraft/advancements/critereon/EntityPredicate$Builder; a
	fishingHook (Lnet/minecraft/advancements/critereon/FishingHookPredicate;)Lnet/minecraft/advancements/critereon/EntityPredicate$Builder; a
	flags (Lnet/minecraft/advancements/critereon/EntityFlagsPredicate;)Lnet/minecraft/advancements/critereon/EntityPredicate$Builder; a
	located (Lnet/minecraft/advancements/critereon/LocationPredicate;)Lnet/minecraft/advancements/critereon/EntityPredicate$Builder; a
	nbt (Lnet/minecraft/advancements/critereon/NbtPredicate;)Lnet/minecraft/advancements/critereon/EntityPredicate$Builder; a
	of (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/advancements/critereon/EntityPredicate$Builder; a
	of (Lnet/minecraft/tags/Tag;)Lnet/minecraft/advancements/critereon/EntityPredicate$Builder; a
	of (Lnet/minecraft/world/entity/EntityType;)Lnet/minecraft/advancements/critereon/EntityPredicate$Builder; a
	player (Lnet/minecraft/advancements/critereon/PlayerPredicate;)Lnet/minecraft/advancements/critereon/EntityPredicate$Builder; a
	targetedEntity (Lnet/minecraft/advancements/critereon/EntityPredicate;)Lnet/minecraft/advancements/critereon/EntityPredicate$Builder; b
	team (Ljava/lang/String;)Lnet/minecraft/advancements/critereon/EntityPredicate$Builder; a
	vehicle (Lnet/minecraft/advancements/critereon/EntityPredicate;)Lnet/minecraft/advancements/critereon/EntityPredicate$Builder; a
net/minecraft/advancements/critereon/EntityPredicate$Composite bg$b
	ANY a
	compositePredicates c
	conditions b
	create ([Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition;)Lnet/minecraft/advancements/critereon/EntityPredicate$Composite; a
	fromElement (Ljava/lang/String;Lnet/minecraft/advancements/critereon/DeserializationContext;Lcom/google/gson/JsonElement;)Lnet/minecraft/advancements/critereon/EntityPredicate$Composite; a
	fromJson (Lcom/google/gson/JsonObject;Ljava/lang/String;Lnet/minecraft/advancements/critereon/DeserializationContext;)Lnet/minecraft/advancements/critereon/EntityPredicate$Composite; a
	fromJsonArray (Lcom/google/gson/JsonObject;Ljava/lang/String;Lnet/minecraft/advancements/critereon/DeserializationContext;)[Lnet/minecraft/advancements/critereon/EntityPredicate$Composite; b
	matches (Lnet/minecraft/world/level/storage/loot/LootContext;)Z a
	toJson (Lnet/minecraft/advancements/critereon/SerializationContext;)Lcom/google/gson/JsonElement; a
	toJson ([Lnet/minecraft/advancements/critereon/EntityPredicate$Composite;Lnet/minecraft/advancements/critereon/SerializationContext;)Lcom/google/gson/JsonElement; a
	wrap (Lnet/minecraft/advancements/critereon/EntityPredicate;)Lnet/minecraft/advancements/critereon/EntityPredicate$Composite; a
net/minecraft/advancements/critereon/EntityTypePredicate bh
	ANY a
	COMMA_JOINER b
	fromJson (Lcom/google/gson/JsonElement;)Lnet/minecraft/advancements/critereon/EntityTypePredicate; a
	matches (Lnet/minecraft/world/entity/EntityType;)Z a
	of (Lnet/minecraft/tags/Tag;)Lnet/minecraft/advancements/critereon/EntityTypePredicate; a
	of (Lnet/minecraft/world/entity/EntityType;)Lnet/minecraft/advancements/critereon/EntityTypePredicate; b
	serializeToJson ()Lcom/google/gson/JsonElement; a
net/minecraft/advancements/critereon/EntityTypePredicate$TagPredicate bh$a
	tag b
	matches (Lnet/minecraft/world/entity/EntityType;)Z a
	serializeToJson ()Lcom/google/gson/JsonElement; a
net/minecraft/advancements/critereon/EntityTypePredicate$TypePredicate bh$b
	type b
	matches (Lnet/minecraft/world/entity/EntityType;)Z a
	serializeToJson ()Lcom/google/gson/JsonElement; a
net/minecraft/advancements/critereon/FilledBucketTrigger bi
	ID a
	createInstance (Lcom/google/gson/JsonObject;Lnet/minecraft/advancements/critereon/EntityPredicate$Composite;Lnet/minecraft/advancements/critereon/DeserializationContext;)Lnet/minecraft/advancements/critereon/AbstractCriterionTriggerInstance; b
	createInstance (Lcom/google/gson/JsonObject;Lnet/minecraft/advancements/critereon/EntityPredicate$Composite;Lnet/minecraft/advancements/critereon/DeserializationContext;)Lnet/minecraft/advancements/critereon/FilledBucketTrigger$TriggerInstance; a
	getId ()Lnet/minecraft/resources/ResourceLocation; a
	trigger (Lnet/minecraft/server/level/ServerPlayer;Lnet/minecraft/world/item/ItemStack;)V a
net/minecraft/advancements/critereon/FilledBucketTrigger$TriggerInstance bi$a
	item a
	filledBucket (Lnet/minecraft/advancements/critereon/ItemPredicate;)Lnet/minecraft/advancements/critereon/FilledBucketTrigger$TriggerInstance; a
	matches (Lnet/minecraft/world/item/ItemStack;)Z a
	serializeToJson (Lnet/minecraft/advancements/critereon/SerializationContext;)Lcom/google/gson/JsonObject; a
net/minecraft/advancements/critereon/FishingHookPredicate bj
	ANY a
	inOpenWater b
	fromJson (Lcom/google/gson/JsonElement;)Lnet/minecraft/advancements/critereon/FishingHookPredicate; a
	inOpenWater (Z)Lnet/minecraft/advancements/critereon/FishingHookPredicate; a
	matches (Lnet/minecraft/world/entity/Entity;)Z a
	serializeToJson ()Lcom/google/gson/JsonElement; a
net/minecraft/advancements/critereon/FishingRodHookedTrigger bk
	ID a
	createInstance (Lcom/google/gson/JsonObject;Lnet/minecraft/advancements/critereon/EntityPredicate$Composite;Lnet/minecraft/advancements/critereon/DeserializationContext;)Lnet/minecraft/advancements/critereon/AbstractCriterionTriggerInstance; b
	createInstance (Lcom/google/gson/JsonObject;Lnet/minecraft/advancements/critereon/EntityPredicate$Composite;Lnet/minecraft/advancements/critereon/DeserializationContext;)Lnet/minecraft/advancements/critereon/FishingRodHookedTrigger$TriggerInstance; a
	getId ()Lnet/minecraft/resources/ResourceLocation; a
	trigger (Lnet/minecraft/server/level/ServerPlayer;Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/entity/projectile/FishingHook;Ljava/util/Collection;)V a
net/minecraft/advancements/critereon/FishingRodHookedTrigger$TriggerInstance bk$a
	entity b
	item c
	rod a
	fishedItem (Lnet/minecraft/advancements/critereon/ItemPredicate;Lnet/minecraft/advancements/critereon/EntityPredicate;Lnet/minecraft/advancements/critereon/ItemPredicate;)Lnet/minecraft/advancements/critereon/FishingRodHookedTrigger$TriggerInstance; a
	matches (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/storage/loot/LootContext;Ljava/util/Collection;)Z a
	serializeToJson (Lnet/minecraft/advancements/critereon/SerializationContext;)Lcom/google/gson/JsonObject; a
net/minecraft/advancements/critereon/FluidPredicate bl
	ANY a
	fluid c
	properties d
	tag b
	fromJson (Lcom/google/gson/JsonElement;)Lnet/minecraft/advancements/critereon/FluidPredicate; a
	matches (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;)Z a
	serializeToJson ()Lcom/google/gson/JsonElement; a
net/minecraft/advancements/critereon/FluidPredicate$Builder bl$a
	fluid a
	fluids b
	properties c
	build ()Lnet/minecraft/advancements/critereon/FluidPredicate; b
	fluid ()Lnet/minecraft/advancements/critereon/FluidPredicate$Builder; a
	of (Lnet/minecraft/tags/Tag;)Lnet/minecraft/advancements/critereon/FluidPredicate$Builder; a
	of (Lnet/minecraft/world/level/material/Fluid;)Lnet/minecraft/advancements/critereon/FluidPredicate$Builder; a
	setProperties (Lnet/minecraft/advancements/critereon/StatePropertiesPredicate;)Lnet/minecraft/advancements/critereon/FluidPredicate$Builder; a
net/minecraft/advancements/critereon/ImpossibleTrigger bm
	ID a
	addPlayerListener (Lnet/minecraft/server/PlayerAdvancements;Lnet/minecraft/advancements/CriterionTrigger$Listener;)V a
	createInstance (Lcom/google/gson/JsonObject;Lnet/minecraft/advancements/critereon/DeserializationContext;)Lnet/minecraft/advancements/CriterionTriggerInstance; a
	createInstance (Lcom/google/gson/JsonObject;Lnet/minecraft/advancements/critereon/DeserializationContext;)Lnet/minecraft/advancements/critereon/ImpossibleTrigger$TriggerInstance; b
	getId ()Lnet/minecraft/resources/ResourceLocation; a
	removePlayerListener (Lnet/minecraft/server/PlayerAdvancements;Lnet/minecraft/advancements/CriterionTrigger$Listener;)V b
	removePlayerListeners (Lnet/minecraft/server/PlayerAdvancements;)V a
net/minecraft/advancements/critereon/ImpossibleTrigger$TriggerInstance bm$a
	getCriterion ()Lnet/minecraft/resources/ResourceLocation; a
	serializeToJson (Lnet/minecraft/advancements/critereon/SerializationContext;)Lcom/google/gson/JsonObject; a
net/minecraft/advancements/critereon/InventoryChangeTrigger bn
	ID a
	createInstance (Lcom/google/gson/JsonObject;Lnet/minecraft/advancements/critereon/EntityPredicate$Composite;Lnet/minecraft/advancements/critereon/DeserializationContext;)Lnet/minecraft/advancements/critereon/AbstractCriterionTriggerInstance; b
	createInstance (Lcom/google/gson/JsonObject;Lnet/minecraft/advancements/critereon/EntityPredicate$Composite;Lnet/minecraft/advancements/critereon/DeserializationContext;)Lnet/minecraft/advancements/critereon/InventoryChangeTrigger$TriggerInstance; a
	getId ()Lnet/minecraft/resources/ResourceLocation; a
	trigger (Lnet/minecraft/server/level/ServerPlayer;Lnet/minecraft/world/entity/player/Inventory;Lnet/minecraft/world/item/ItemStack;)V a
	trigger (Lnet/minecraft/server/level/ServerPlayer;Lnet/minecraft/world/entity/player/Inventory;Lnet/minecraft/world/item/ItemStack;III)V a
net/minecraft/advancements/critereon/InventoryChangeTrigger$TriggerInstance bn$a
	predicates d
	slotsEmpty c
	slotsFull b
	slotsOccupied a
	hasItems ([Lnet/minecraft/advancements/critereon/ItemPredicate;)Lnet/minecraft/advancements/critereon/InventoryChangeTrigger$TriggerInstance; a
	hasItems ([Lnet/minecraft/world/level/ItemLike;)Lnet/minecraft/advancements/critereon/InventoryChangeTrigger$TriggerInstance; a
	matches (Lnet/minecraft/world/entity/player/Inventory;Lnet/minecraft/world/item/ItemStack;III)Z a
	serializeToJson (Lnet/minecraft/advancements/critereon/SerializationContext;)Lcom/google/gson/JsonObject; a
net/minecraft/advancements/critereon/ItemDurabilityTrigger bo
	ID a
	createInstance (Lcom/google/gson/JsonObject;Lnet/minecraft/advancements/critereon/EntityPredicate$Composite;Lnet/minecraft/advancements/critereon/DeserializationContext;)Lnet/minecraft/advancements/critereon/AbstractCriterionTriggerInstance; b
	createInstance (Lcom/google/gson/JsonObject;Lnet/minecraft/advancements/critereon/EntityPredicate$Composite;Lnet/minecraft/advancements/critereon/DeserializationContext;)Lnet/minecraft/advancements/critereon/ItemDurabilityTrigger$TriggerInstance; a
	getId ()Lnet/minecraft/resources/ResourceLocation; a
	trigger (Lnet/minecraft/server/level/ServerPlayer;Lnet/minecraft/world/item/ItemStack;I)V a
net/minecraft/advancements/critereon/ItemDurabilityTrigger$TriggerInstance bo$a
	delta c
	durability b
	item a
	changedDurability (Lnet/minecraft/advancements/critereon/EntityPredicate$Composite;Lnet/minecraft/advancements/critereon/ItemPredicate;Lnet/minecraft/advancements/critereon/MinMaxBounds$Ints;)Lnet/minecraft/advancements/critereon/ItemDurabilityTrigger$TriggerInstance; a
	changedDurability (Lnet/minecraft/advancements/critereon/ItemPredicate;Lnet/minecraft/advancements/critereon/MinMaxBounds$Ints;)Lnet/minecraft/advancements/critereon/ItemDurabilityTrigger$TriggerInstance; a
	matches (Lnet/minecraft/world/item/ItemStack;I)Z a
	serializeToJson (Lnet/minecraft/advancements/critereon/SerializationContext;)Lcom/google/gson/JsonObject; a
net/minecraft/advancements/critereon/ItemPickedUpByEntityTrigger bp
	ID a
	createInstance (Lcom/google/gson/JsonObject;Lnet/minecraft/advancements/critereon/EntityPredicate$Composite;Lnet/minecraft/advancements/critereon/DeserializationContext;)Lnet/minecraft/advancements/critereon/AbstractCriterionTriggerInstance; b
	createInstance (Lcom/google/gson/JsonObject;Lnet/minecraft/advancements/critereon/EntityPredicate$Composite;Lnet/minecraft/advancements/critereon/DeserializationContext;)Lnet/minecraft/advancements/critereon/ItemPickedUpByEntityTrigger$TriggerInstance; a
	getId ()Lnet/minecraft/resources/ResourceLocation; a
	trigger (Lnet/minecraft/server/level/ServerPlayer;Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/entity/Entity;)V a
net/minecraft/advancements/critereon/ItemPickedUpByEntityTrigger$TriggerInstance bp$a
	entity b
	item a
	itemPickedUpByEntity (Lnet/minecraft/advancements/critereon/EntityPredicate$Composite;Lnet/minecraft/advancements/critereon/ItemPredicate$Builder;Lnet/minecraft/advancements/critereon/EntityPredicate$Composite;)Lnet/minecraft/advancements/critereon/ItemPickedUpByEntityTrigger$TriggerInstance; a
	matches (Lnet/minecraft/server/level/ServerPlayer;Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/storage/loot/LootContext;)Z a
	serializeToJson (Lnet/minecraft/advancements/critereon/SerializationContext;)Lcom/google/gson/JsonObject; a
net/minecraft/advancements/critereon/ItemPredicate bq
	ANY a
	count d
	durability e
	enchantments f
	item c
	nbt i
	potion h
	storedEnchantments g
	tag b
	fromJson (Lcom/google/gson/JsonElement;)Lnet/minecraft/advancements/critereon/ItemPredicate; a
	fromJsonArray (Lcom/google/gson/JsonElement;)[Lnet/minecraft/advancements/critereon/ItemPredicate; b
	matches (Lnet/minecraft/world/item/ItemStack;)Z a
	serializeToJson ()Lcom/google/gson/JsonElement; a
net/minecraft/advancements/critereon/ItemPredicate$Builder bq$a
	count e
	durability f
	enchantments a
	item c
	nbt h
	potion g
	storedEnchantments b
	tag d
	build ()Lnet/minecraft/advancements/critereon/ItemPredicate; b
	hasDurability (Lnet/minecraft/advancements/critereon/MinMaxBounds$Ints;)Lnet/minecraft/advancements/critereon/ItemPredicate$Builder; b
	hasEnchantment (Lnet/minecraft/advancements/critereon/EnchantmentPredicate;)Lnet/minecraft/advancements/critereon/ItemPredicate$Builder; a
	hasNbt (Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/advancements/critereon/ItemPredicate$Builder; a
	hasStoredEnchantment (Lnet/minecraft/advancements/critereon/EnchantmentPredicate;)Lnet/minecraft/advancements/critereon/ItemPredicate$Builder; b
	isPotion (Lnet/minecraft/world/item/alchemy/Potion;)Lnet/minecraft/advancements/critereon/ItemPredicate$Builder; a
	item ()Lnet/minecraft/advancements/critereon/ItemPredicate$Builder; a
	of (Lnet/minecraft/tags/Tag;)Lnet/minecraft/advancements/critereon/ItemPredicate$Builder; a
	of (Lnet/minecraft/world/level/ItemLike;)Lnet/minecraft/advancements/critereon/ItemPredicate$Builder; a
	withCount (Lnet/minecraft/advancements/critereon/MinMaxBounds$Ints;)Lnet/minecraft/advancements/critereon/ItemPredicate$Builder; a
net/minecraft/advancements/critereon/ItemUsedOnBlockTrigger br
	ID a
	createInstance (Lcom/google/gson/JsonObject;Lnet/minecraft/advancements/critereon/EntityPredicate$Composite;Lnet/minecraft/advancements/critereon/DeserializationContext;)Lnet/minecraft/advancements/critereon/AbstractCriterionTriggerInstance; b
	createInstance (Lcom/google/gson/JsonObject;Lnet/minecraft/advancements/critereon/EntityPredicate$Composite;Lnet/minecraft/advancements/critereon/DeserializationContext;)Lnet/minecraft/advancements/critereon/ItemUsedOnBlockTrigger$TriggerInstance; a
	getId ()Lnet/minecraft/resources/ResourceLocation; a
	trigger (Lnet/minecraft/server/level/ServerPlayer;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/item/ItemStack;)V a
net/minecraft/advancements/critereon/ItemUsedOnBlockTrigger$TriggerInstance br$a
	item b
	location a
	itemUsedOnBlock (Lnet/minecraft/advancements/critereon/LocationPredicate$Builder;Lnet/minecraft/advancements/critereon/ItemPredicate$Builder;)Lnet/minecraft/advancements/critereon/ItemUsedOnBlockTrigger$TriggerInstance; a
	matches (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/item/ItemStack;)Z a
	serializeToJson (Lnet/minecraft/advancements/critereon/SerializationContext;)Lcom/google/gson/JsonObject; a
net/minecraft/advancements/critereon/KilledByCrossbowTrigger bs
	ID a
	createInstance (Lcom/google/gson/JsonObject;Lnet/minecraft/advancements/critereon/EntityPredicate$Composite;Lnet/minecraft/advancements/critereon/DeserializationContext;)Lnet/minecraft/advancements/critereon/AbstractCriterionTriggerInstance; b
	createInstance (Lcom/google/gson/JsonObject;Lnet/minecraft/advancements/critereon/EntityPredicate$Composite;Lnet/minecraft/advancements/critereon/DeserializationContext;)Lnet/minecraft/advancements/critereon/KilledByCrossbowTrigger$TriggerInstance; a
	getId ()Lnet/minecraft/resources/ResourceLocation; a
	trigger (Lnet/minecraft/server/level/ServerPlayer;Ljava/util/Collection;)V a
net/minecraft/advancements/critereon/KilledByCrossbowTrigger$TriggerInstance bs$a
	uniqueEntityTypes b
	victims a
	crossbowKilled (Lnet/minecraft/advancements/critereon/MinMaxBounds$Ints;)Lnet/minecraft/advancements/critereon/KilledByCrossbowTrigger$TriggerInstance; a
	crossbowKilled ([Lnet/minecraft/advancements/critereon/EntityPredicate$Builder;)Lnet/minecraft/advancements/critereon/KilledByCrossbowTrigger$TriggerInstance; a
	matches (Ljava/util/Collection;I)Z a
	serializeToJson (Lnet/minecraft/advancements/critereon/SerializationContext;)Lcom/google/gson/JsonObject; a
net/minecraft/advancements/critereon/KilledTrigger bt
	id a
	createInstance (Lcom/google/gson/JsonObject;Lnet/minecraft/advancements/critereon/EntityPredicate$Composite;Lnet/minecraft/advancements/critereon/DeserializationContext;)Lnet/minecraft/advancements/critereon/AbstractCriterionTriggerInstance; b
	createInstance (Lcom/google/gson/JsonObject;Lnet/minecraft/advancements/critereon/EntityPredicate$Composite;Lnet/minecraft/advancements/critereon/DeserializationContext;)Lnet/minecraft/advancements/critereon/KilledTrigger$TriggerInstance; a
	getId ()Lnet/minecraft/resources/ResourceLocation; a
	trigger (Lnet/minecraft/server/level/ServerPlayer;Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/damagesource/DamageSource;)V a
net/minecraft/advancements/critereon/KilledTrigger$TriggerInstance bt$a
	entityPredicate a
	killingBlow b
	entityKilledPlayer ()Lnet/minecraft/advancements/critereon/KilledTrigger$TriggerInstance; d
	entityKilledPlayer (Lnet/minecraft/advancements/critereon/EntityPredicate$Builder;)Lnet/minecraft/advancements/critereon/KilledTrigger$TriggerInstance; b
	entityKilledPlayer (Lnet/minecraft/advancements/critereon/EntityPredicate$Builder;Lnet/minecraft/advancements/critereon/DamageSourcePredicate$Builder;)Lnet/minecraft/advancements/critereon/KilledTrigger$TriggerInstance; b
	entityKilledPlayer (Lnet/minecraft/advancements/critereon/EntityPredicate$Builder;Lnet/minecraft/advancements/critereon/DamageSourcePredicate;)Lnet/minecraft/advancements/critereon/KilledTrigger$TriggerInstance; b
	entityKilledPlayer (Lnet/minecraft/advancements/critereon/EntityPredicate;)Lnet/minecraft/advancements/critereon/KilledTrigger$TriggerInstance; b
	entityKilledPlayer (Lnet/minecraft/advancements/critereon/EntityPredicate;Lnet/minecraft/advancements/critereon/DamageSourcePredicate$Builder;)Lnet/minecraft/advancements/critereon/KilledTrigger$TriggerInstance; b
	entityKilledPlayer (Lnet/minecraft/advancements/critereon/EntityPredicate;Lnet/minecraft/advancements/critereon/DamageSourcePredicate;)Lnet/minecraft/advancements/critereon/KilledTrigger$TriggerInstance; b
	matches (Lnet/minecraft/server/level/ServerPlayer;Lnet/minecraft/world/level/storage/loot/LootContext;Lnet/minecraft/world/damagesource/DamageSource;)Z a
	playerKilledEntity ()Lnet/minecraft/advancements/critereon/KilledTrigger$TriggerInstance; c
	playerKilledEntity (Lnet/minecraft/advancements/critereon/EntityPredicate$Builder;)Lnet/minecraft/advancements/critereon/KilledTrigger$TriggerInstance; a
	playerKilledEntity (Lnet/minecraft/advancements/critereon/EntityPredicate$Builder;Lnet/minecraft/advancements/critereon/DamageSourcePredicate$Builder;)Lnet/minecraft/advancements/critereon/KilledTrigger$TriggerInstance; a
	playerKilledEntity (Lnet/minecraft/advancements/critereon/EntityPredicate$Builder;Lnet/minecraft/advancements/critereon/DamageSourcePredicate;)Lnet/minecraft/advancements/critereon/KilledTrigger$TriggerInstance; a
	playerKilledEntity (Lnet/minecraft/advancements/critereon/EntityPredicate;)Lnet/minecraft/advancements/critereon/KilledTrigger$TriggerInstance; a
	playerKilledEntity (Lnet/minecraft/advancements/critereon/EntityPredicate;Lnet/minecraft/advancements/critereon/DamageSourcePredicate$Builder;)Lnet/minecraft/advancements/critereon/KilledTrigger$TriggerInstance; a
	playerKilledEntity (Lnet/minecraft/advancements/critereon/EntityPredicate;Lnet/minecraft/advancements/critereon/DamageSourcePredicate;)Lnet/minecraft/advancements/critereon/KilledTrigger$TriggerInstance; a
	serializeToJson (Lnet/minecraft/advancements/critereon/SerializationContext;)Lcom/google/gson/JsonObject; a
net/minecraft/advancements/critereon/LevitationTrigger bu
	ID a
	createInstance (Lcom/google/gson/JsonObject;Lnet/minecraft/advancements/critereon/EntityPredicate$Composite;Lnet/minecraft/advancements/critereon/DeserializationContext;)Lnet/minecraft/advancements/critereon/AbstractCriterionTriggerInstance; b
	createInstance (Lcom/google/gson/JsonObject;Lnet/minecraft/advancements/critereon/EntityPredicate$Composite;Lnet/minecraft/advancements/critereon/DeserializationContext;)Lnet/minecraft/advancements/critereon/LevitationTrigger$TriggerInstance; a
	getId ()Lnet/minecraft/resources/ResourceLocation; a
	trigger (Lnet/minecraft/server/level/ServerPlayer;Lnet/minecraft/world/phys/Vec3;I)V a
net/minecraft/advancements/critereon/LevitationTrigger$TriggerInstance bu$a
	distance a
	duration b
	levitated (Lnet/minecraft/advancements/critereon/DistancePredicate;)Lnet/minecraft/advancements/critereon/LevitationTrigger$TriggerInstance; a
	matches (Lnet/minecraft/server/level/ServerPlayer;Lnet/minecraft/world/phys/Vec3;I)Z a
	serializeToJson (Lnet/minecraft/advancements/critereon/SerializationContext;)Lcom/google/gson/JsonObject; a
net/minecraft/advancements/critereon/LightPredicate bv
	ANY a
	composite b
	fromJson (Lcom/google/gson/JsonElement;)Lnet/minecraft/advancements/critereon/LightPredicate; a
	matches (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;)Z a
	serializeToJson ()Lcom/google/gson/JsonElement; a
net/minecraft/advancements/critereon/LightPredicate$Builder bv$a
	composite a
	build ()Lnet/minecraft/advancements/critereon/LightPredicate; b
	light ()Lnet/minecraft/advancements/critereon/LightPredicate$Builder; a
	setComposite (Lnet/minecraft/advancements/critereon/MinMaxBounds$Ints;)Lnet/minecraft/advancements/critereon/LightPredicate$Builder; a
net/minecraft/advancements/critereon/LocationPredicate bw
	ANY a
	LOGGER b
	biome f
	block k
	dimension h
	feature g
	fluid l
	light j
	smokey i
	x c
	y d
	z e
	fromJson (Lcom/google/gson/JsonElement;)Lnet/minecraft/advancements/critereon/LocationPredicate; a
	inBiome (Lnet/minecraft/resources/ResourceKey;)Lnet/minecraft/advancements/critereon/LocationPredicate; a
	inDimension (Lnet/minecraft/resources/ResourceKey;)Lnet/minecraft/advancements/critereon/LocationPredicate; b
	inFeature (Lnet/minecraft/world/level/levelgen/feature/StructureFeature;)Lnet/minecraft/advancements/critereon/LocationPredicate; a
	matches (Lnet/minecraft/server/level/ServerLevel;DDD)Z a
	matches (Lnet/minecraft/server/level/ServerLevel;FFF)Z a
	serializeToJson ()Lcom/google/gson/JsonElement; a
net/minecraft/advancements/critereon/LocationPredicate$Builder bw$a
	biome d
	block i
	dimension f
	feature e
	fluid j
	light h
	smokey g
	x a
	y b
	z c
	build ()Lnet/minecraft/advancements/critereon/LocationPredicate; b
	location ()Lnet/minecraft/advancements/critereon/LocationPredicate$Builder; a
	setBiome (Lnet/minecraft/resources/ResourceKey;)Lnet/minecraft/advancements/critereon/LocationPredicate$Builder; a
	setBlock (Lnet/minecraft/advancements/critereon/BlockPredicate;)Lnet/minecraft/advancements/critereon/LocationPredicate$Builder; a
	setDimension (Lnet/minecraft/resources/ResourceKey;)Lnet/minecraft/advancements/critereon/LocationPredicate$Builder; b
	setFeature (Lnet/minecraft/world/level/levelgen/feature/StructureFeature;)Lnet/minecraft/advancements/critereon/LocationPredicate$Builder; a
	setFluid (Lnet/minecraft/advancements/critereon/FluidPredicate;)Lnet/minecraft/advancements/critereon/LocationPredicate$Builder; a
	setLight (Lnet/minecraft/advancements/critereon/LightPredicate;)Lnet/minecraft/advancements/critereon/LocationPredicate$Builder; a
	setSmokey (Ljava/lang/Boolean;)Lnet/minecraft/advancements/critereon/LocationPredicate$Builder; a
	setX (Lnet/minecraft/advancements/critereon/MinMaxBounds$Floats;)Lnet/minecraft/advancements/critereon/LocationPredicate$Builder; a
	setY (Lnet/minecraft/advancements/critereon/MinMaxBounds$Floats;)Lnet/minecraft/advancements/critereon/LocationPredicate$Builder; b
	setZ (Lnet/minecraft/advancements/critereon/MinMaxBounds$Floats;)Lnet/minecraft/advancements/critereon/LocationPredicate$Builder; c
net/minecraft/advancements/critereon/LocationTrigger bx
	id a
	createInstance (Lcom/google/gson/JsonObject;Lnet/minecraft/advancements/critereon/EntityPredicate$Composite;Lnet/minecraft/advancements/critereon/DeserializationContext;)Lnet/minecraft/advancements/critereon/AbstractCriterionTriggerInstance; b
	createInstance (Lcom/google/gson/JsonObject;Lnet/minecraft/advancements/critereon/EntityPredicate$Composite;Lnet/minecraft/advancements/critereon/DeserializationContext;)Lnet/minecraft/advancements/critereon/LocationTrigger$TriggerInstance; a
	getId ()Lnet/minecraft/resources/ResourceLocation; a
	trigger (Lnet/minecraft/server/level/ServerPlayer;)V a
net/minecraft/advancements/critereon/LocationTrigger$TriggerInstance bx$a
	location a
	located (Lnet/minecraft/advancements/critereon/LocationPredicate;)Lnet/minecraft/advancements/critereon/LocationTrigger$TriggerInstance; a
	matches (Lnet/minecraft/server/level/ServerLevel;DDD)Z a
	raidWon ()Lnet/minecraft/advancements/critereon/LocationTrigger$TriggerInstance; d
	serializeToJson (Lnet/minecraft/advancements/critereon/SerializationContext;)Lcom/google/gson/JsonObject; a
	sleptInBed ()Lnet/minecraft/advancements/critereon/LocationTrigger$TriggerInstance; c
net/minecraft/advancements/critereon/LootTableTrigger by
	ID a
	createInstance (Lcom/google/gson/JsonObject;Lnet/minecraft/advancements/critereon/EntityPredicate$Composite;Lnet/minecraft/advancements/critereon/DeserializationContext;)Lnet/minecraft/advancements/critereon/AbstractCriterionTriggerInstance; b
	createInstance (Lcom/google/gson/JsonObject;Lnet/minecraft/advancements/critereon/EntityPredicate$Composite;Lnet/minecraft/advancements/critereon/DeserializationContext;)Lnet/minecraft/advancements/critereon/LootTableTrigger$TriggerInstance; a
	getId ()Lnet/minecraft/resources/ResourceLocation; a
	trigger (Lnet/minecraft/server/level/ServerPlayer;Lnet/minecraft/resources/ResourceLocation;)V a
net/minecraft/advancements/critereon/LootTableTrigger$TriggerInstance by$a
	lootTable a
	lootTableUsed (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/advancements/critereon/LootTableTrigger$TriggerInstance; a
	matches (Lnet/minecraft/resources/ResourceLocation;)Z b
	serializeToJson (Lnet/minecraft/advancements/critereon/SerializationContext;)Lcom/google/gson/JsonObject; a
net/minecraft/advancements/critereon/MinMaxBounds bz
	ERROR_EMPTY a
	ERROR_SWAPPED b
	max d
	min c
	fromJson (Lcom/google/gson/JsonElement;Lnet/minecraft/advancements/critereon/MinMaxBounds;Ljava/util/function/BiFunction;Lnet/minecraft/advancements/critereon/MinMaxBounds$BoundsFactory;)Lnet/minecraft/advancements/critereon/MinMaxBounds; a
	fromReader (Lcom/mojang/brigadier/StringReader;Lnet/minecraft/advancements/critereon/MinMaxBounds$BoundsFromReaderFactory;Ljava/util/function/Function;Ljava/util/function/Supplier;Ljava/util/function/Function;)Lnet/minecraft/advancements/critereon/MinMaxBounds; a
	getMax ()Ljava/lang/Number; b
	getMin ()Ljava/lang/Number; a
	isAllowedInputChat (Lcom/mojang/brigadier/StringReader;)Z a
	isAny ()Z c
	optionallyFormat (Ljava/lang/Object;Ljava/util/function/Function;)Ljava/lang/Object; a
	readNumber (Lcom/mojang/brigadier/StringReader;Ljava/util/function/Function;Ljava/util/function/Supplier;)Ljava/lang/Number; a
	serializeToJson ()Lcom/google/gson/JsonElement; d
net/minecraft/advancements/critereon/MinMaxBounds$BoundsFactory bz$a
net/minecraft/advancements/critereon/MinMaxBounds$BoundsFromReaderFactory bz$b
net/minecraft/advancements/critereon/MinMaxBounds$Floats bz$c
	ANY e
	maxSq g
	minSq f
	atLeast (F)Lnet/minecraft/advancements/critereon/MinMaxBounds$Floats; b
	atMost (F)Lnet/minecraft/advancements/critereon/MinMaxBounds$Floats; c
	between (FF)Lnet/minecraft/advancements/critereon/MinMaxBounds$Floats; a
	create (Lcom/mojang/brigadier/StringReader;Ljava/lang/Float;Ljava/lang/Float;)Lnet/minecraft/advancements/critereon/MinMaxBounds$Floats; a
	exactly (F)Lnet/minecraft/advancements/critereon/MinMaxBounds$Floats; a
	fromJson (Lcom/google/gson/JsonElement;)Lnet/minecraft/advancements/critereon/MinMaxBounds$Floats; a
	fromReader (Lcom/mojang/brigadier/StringReader;)Lnet/minecraft/advancements/critereon/MinMaxBounds$Floats; a
	fromReader (Lcom/mojang/brigadier/StringReader;Ljava/util/function/Function;)Lnet/minecraft/advancements/critereon/MinMaxBounds$Floats; a
	matches (F)Z d
	matchesSqr (D)Z a
	squareOpt (Ljava/lang/Float;)Ljava/lang/Double; a
net/minecraft/advancements/critereon/MinMaxBounds$Ints bz$d
	ANY e
	maxSq g
	minSq f
	atLeast (I)Lnet/minecraft/advancements/critereon/MinMaxBounds$Ints; b
	atMost (I)Lnet/minecraft/advancements/critereon/MinMaxBounds$Ints; c
	between (II)Lnet/minecraft/advancements/critereon/MinMaxBounds$Ints; a
	create (Lcom/mojang/brigadier/StringReader;Ljava/lang/Integer;Ljava/lang/Integer;)Lnet/minecraft/advancements/critereon/MinMaxBounds$Ints; a
	exactly (I)Lnet/minecraft/advancements/critereon/MinMaxBounds$Ints; a
	fromJson (Lcom/google/gson/JsonElement;)Lnet/minecraft/advancements/critereon/MinMaxBounds$Ints; a
	fromReader (Lcom/mojang/brigadier/StringReader;)Lnet/minecraft/advancements/critereon/MinMaxBounds$Ints; a
	fromReader (Lcom/mojang/brigadier/StringReader;Ljava/util/function/Function;)Lnet/minecraft/advancements/critereon/MinMaxBounds$Ints; a
	matches (I)Z d
	matchesSqr (J)Z a
	squareOpt (Ljava/lang/Integer;)Ljava/lang/Long; a
net/minecraft/advancements/critereon/MobEffectsPredicate ca
	ANY a
	effects b
	and (Lnet/minecraft/world/effect/MobEffect;)Lnet/minecraft/advancements/critereon/MobEffectsPredicate; a
	and (Lnet/minecraft/world/effect/MobEffect;Lnet/minecraft/advancements/critereon/MobEffectsPredicate$MobEffectInstancePredicate;)Lnet/minecraft/advancements/critereon/MobEffectsPredicate; a
	effects ()Lnet/minecraft/advancements/critereon/MobEffectsPredicate; a
	fromJson (Lcom/google/gson/JsonElement;)Lnet/minecraft/advancements/critereon/MobEffectsPredicate; a
	matches (Ljava/util/Map;)Z a
	matches (Lnet/minecraft/world/entity/Entity;)Z a
	matches (Lnet/minecraft/world/entity/LivingEntity;)Z a
	serializeToJson ()Lcom/google/gson/JsonElement; b
net/minecraft/advancements/critereon/MobEffectsPredicate$MobEffectInstancePredicate ca$a
	ambient c
	amplifier a
	duration b
	visible d
	fromJson (Lcom/google/gson/JsonObject;)Lnet/minecraft/advancements/critereon/MobEffectsPredicate$MobEffectInstancePredicate; a
	matches (Lnet/minecraft/world/effect/MobEffectInstance;)Z a
	serializeToJson ()Lcom/google/gson/JsonElement; a
net/minecraft/advancements/critereon/NbtPredicate cb
	ANY a
	tag b
	fromJson (Lcom/google/gson/JsonElement;)Lnet/minecraft/advancements/critereon/NbtPredicate; a
	getEntityTagToCompare (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/nbt/CompoundTag; b
	matches (Lnet/minecraft/nbt/Tag;)Z a
	matches (Lnet/minecraft/world/entity/Entity;)Z a
	matches (Lnet/minecraft/world/item/ItemStack;)Z a
	serializeToJson ()Lcom/google/gson/JsonElement; a
net/minecraft/advancements/critereon/NetherTravelTrigger cc
	ID a
	createInstance (Lcom/google/gson/JsonObject;Lnet/minecraft/advancements/critereon/EntityPredicate$Composite;Lnet/minecraft/advancements/critereon/DeserializationContext;)Lnet/minecraft/advancements/critereon/AbstractCriterionTriggerInstance; b
	createInstance (Lcom/google/gson/JsonObject;Lnet/minecraft/advancements/critereon/EntityPredicate$Composite;Lnet/minecraft/advancements/critereon/DeserializationContext;)Lnet/minecraft/advancements/critereon/NetherTravelTrigger$TriggerInstance; a
	getId ()Lnet/minecraft/resources/ResourceLocation; a
	trigger (Lnet/minecraft/server/level/ServerPlayer;Lnet/minecraft/world/phys/Vec3;)V a
net/minecraft/advancements/critereon/NetherTravelTrigger$TriggerInstance cc$a
	distance c
	entered a
	exited b
	matches (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/phys/Vec3;DDD)Z a
	serializeToJson (Lnet/minecraft/advancements/critereon/SerializationContext;)Lcom/google/gson/JsonObject; a
	travelledThroughNether (Lnet/minecraft/advancements/critereon/DistancePredicate;)Lnet/minecraft/advancements/critereon/NetherTravelTrigger$TriggerInstance; a
net/minecraft/advancements/critereon/PlacedBlockTrigger cd
	ID a
	createInstance (Lcom/google/gson/JsonObject;Lnet/minecraft/advancements/critereon/EntityPredicate$Composite;Lnet/minecraft/advancements/critereon/DeserializationContext;)Lnet/minecraft/advancements/critereon/AbstractCriterionTriggerInstance; b
	createInstance (Lcom/google/gson/JsonObject;Lnet/minecraft/advancements/critereon/EntityPredicate$Composite;Lnet/minecraft/advancements/critereon/DeserializationContext;)Lnet/minecraft/advancements/critereon/PlacedBlockTrigger$TriggerInstance; a
	deserializeBlock (Lcom/google/gson/JsonObject;)Lnet/minecraft/world/level/block/Block; a
	getId ()Lnet/minecraft/resources/ResourceLocation; a
	trigger (Lnet/minecraft/server/level/ServerPlayer;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/item/ItemStack;)V a
net/minecraft/advancements/critereon/PlacedBlockTrigger$TriggerInstance cd$a
	block a
	item d
	location c
	state b
	matches (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/BlockPos;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/item/ItemStack;)Z a
	placedBlock (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/advancements/critereon/PlacedBlockTrigger$TriggerInstance; a
	serializeToJson (Lnet/minecraft/advancements/critereon/SerializationContext;)Lcom/google/gson/JsonObject; a
net/minecraft/advancements/critereon/PlayerHurtEntityTrigger ce
	ID a
	createInstance (Lcom/google/gson/JsonObject;Lnet/minecraft/advancements/critereon/EntityPredicate$Composite;Lnet/minecraft/advancements/critereon/DeserializationContext;)Lnet/minecraft/advancements/critereon/AbstractCriterionTriggerInstance; b
	createInstance (Lcom/google/gson/JsonObject;Lnet/minecraft/advancements/critereon/EntityPredicate$Composite;Lnet/minecraft/advancements/critereon/DeserializationContext;)Lnet/minecraft/advancements/critereon/PlayerHurtEntityTrigger$TriggerInstance; a
	getId ()Lnet/minecraft/resources/ResourceLocation; a
	trigger (Lnet/minecraft/server/level/ServerPlayer;Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/damagesource/DamageSource;FFZ)V a
net/minecraft/advancements/critereon/PlayerHurtEntityTrigger$TriggerInstance ce$a
	damage a
	entity b
	matches (Lnet/minecraft/server/level/ServerPlayer;Lnet/minecraft/world/level/storage/loot/LootContext;Lnet/minecraft/world/damagesource/DamageSource;FFZ)Z a
	playerHurtEntity ()Lnet/minecraft/advancements/critereon/PlayerHurtEntityTrigger$TriggerInstance; c
	playerHurtEntity (Lnet/minecraft/advancements/critereon/DamagePredicate$Builder;)Lnet/minecraft/advancements/critereon/PlayerHurtEntityTrigger$TriggerInstance; a
	playerHurtEntity (Lnet/minecraft/advancements/critereon/DamagePredicate$Builder;Lnet/minecraft/advancements/critereon/EntityPredicate;)Lnet/minecraft/advancements/critereon/PlayerHurtEntityTrigger$TriggerInstance; a
	playerHurtEntity (Lnet/minecraft/advancements/critereon/DamagePredicate;)Lnet/minecraft/advancements/critereon/PlayerHurtEntityTrigger$TriggerInstance; a
	playerHurtEntity (Lnet/minecraft/advancements/critereon/DamagePredicate;Lnet/minecraft/advancements/critereon/EntityPredicate;)Lnet/minecraft/advancements/critereon/PlayerHurtEntityTrigger$TriggerInstance; a
	playerHurtEntity (Lnet/minecraft/advancements/critereon/EntityPredicate;)Lnet/minecraft/advancements/critereon/PlayerHurtEntityTrigger$TriggerInstance; a
	serializeToJson (Lnet/minecraft/advancements/critereon/SerializationContext;)Lcom/google/gson/JsonObject; a
net/minecraft/advancements/critereon/PlayerInteractTrigger cf
	ID a
	createInstance (Lcom/google/gson/JsonObject;Lnet/minecraft/advancements/critereon/EntityPredicate$Composite;Lnet/minecraft/advancements/critereon/DeserializationContext;)Lnet/minecraft/advancements/critereon/AbstractCriterionTriggerInstance; b
	createInstance (Lcom/google/gson/JsonObject;Lnet/minecraft/advancements/critereon/EntityPredicate$Composite;Lnet/minecraft/advancements/critereon/DeserializationContext;)Lnet/minecraft/advancements/critereon/PlayerInteractTrigger$TriggerInstance; a
	getId ()Lnet/minecraft/resources/ResourceLocation; a
	trigger (Lnet/minecraft/server/level/ServerPlayer;Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/entity/Entity;)V a
net/minecraft/advancements/critereon/PlayerInteractTrigger$TriggerInstance cf$a
	entity b
	item a
	itemUsedOnEntity (Lnet/minecraft/advancements/critereon/EntityPredicate$Composite;Lnet/minecraft/advancements/critereon/ItemPredicate$Builder;Lnet/minecraft/advancements/critereon/EntityPredicate$Composite;)Lnet/minecraft/advancements/critereon/PlayerInteractTrigger$TriggerInstance; a
	matches (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/storage/loot/LootContext;)Z a
	serializeToJson (Lnet/minecraft/advancements/critereon/SerializationContext;)Lcom/google/gson/JsonObject; a
net/minecraft/advancements/critereon/PlayerPredicate cg
	ANY a
	advancements f
	gameType c
	level b
	recipes e
	stats d
	advancementPredicateFromJson (Lcom/google/gson/JsonElement;)Lnet/minecraft/advancements/critereon/PlayerPredicate$AdvancementPredicate; b
	fromJson (Lcom/google/gson/JsonElement;)Lnet/minecraft/advancements/critereon/PlayerPredicate; a
	getStat (Lnet/minecraft/stats/StatType;Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/stats/Stat; a
	getStatValueId (Lnet/minecraft/stats/Stat;)Lnet/minecraft/resources/ResourceLocation; a
	matches (Lnet/minecraft/world/entity/Entity;)Z a
	serializeToJson ()Lcom/google/gson/JsonElement; a
net/minecraft/advancements/critereon/PlayerPredicate$AdvancementCriterionsPredicate cg$a
	criterions a
	test (Lnet/minecraft/advancements/AdvancementProgress;)Z a
	toJson ()Lcom/google/gson/JsonElement; a
net/minecraft/advancements/critereon/PlayerPredicate$AdvancementDonePredicate cg$b
	state a
	test (Lnet/minecraft/advancements/AdvancementProgress;)Z a
	toJson ()Lcom/google/gson/JsonElement; a
net/minecraft/advancements/critereon/PlayerPredicate$AdvancementPredicate cg$c
	toJson ()Lcom/google/gson/JsonElement; a
net/minecraft/advancements/critereon/PlayerPredicate$Builder cg$d
	advancements e
	gameType b
	level a
	recipes d
	stats c
	addRecipe (Lnet/minecraft/resources/ResourceLocation;Z)Lnet/minecraft/advancements/critereon/PlayerPredicate$Builder; a
	addStat (Lnet/minecraft/stats/Stat;Lnet/minecraft/advancements/critereon/MinMaxBounds$Ints;)Lnet/minecraft/advancements/critereon/PlayerPredicate$Builder; a
	build ()Lnet/minecraft/advancements/critereon/PlayerPredicate; b
	checkAdvancementCriterions (Lnet/minecraft/resources/ResourceLocation;Ljava/util/Map;)Lnet/minecraft/advancements/critereon/PlayerPredicate$Builder; a
	checkAdvancementDone (Lnet/minecraft/resources/ResourceLocation;Z)Lnet/minecraft/advancements/critereon/PlayerPredicate$Builder; b
	player ()Lnet/minecraft/advancements/critereon/PlayerPredicate$Builder; a
	setGameType (Lnet/minecraft/world/level/GameType;)Lnet/minecraft/advancements/critereon/PlayerPredicate$Builder; a
	setLevel (Lnet/minecraft/advancements/critereon/MinMaxBounds$Ints;)Lnet/minecraft/advancements/critereon/PlayerPredicate$Builder; a
net/minecraft/advancements/critereon/RecipeUnlockedTrigger ch
	ID a
	createInstance (Lcom/google/gson/JsonObject;Lnet/minecraft/advancements/critereon/EntityPredicate$Composite;Lnet/minecraft/advancements/critereon/DeserializationContext;)Lnet/minecraft/advancements/critereon/AbstractCriterionTriggerInstance; b
	createInstance (Lcom/google/gson/JsonObject;Lnet/minecraft/advancements/critereon/EntityPredicate$Composite;Lnet/minecraft/advancements/critereon/DeserializationContext;)Lnet/minecraft/advancements/critereon/RecipeUnlockedTrigger$TriggerInstance; a
	getId ()Lnet/minecraft/resources/ResourceLocation; a
	trigger (Lnet/minecraft/server/level/ServerPlayer;Lnet/minecraft/world/item/crafting/Recipe;)V a
	unlocked (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/advancements/critereon/RecipeUnlockedTrigger$TriggerInstance; a
net/minecraft/advancements/critereon/RecipeUnlockedTrigger$TriggerInstance ch$a
	recipe a
	matches (Lnet/minecraft/world/item/crafting/Recipe;)Z a
	serializeToJson (Lnet/minecraft/advancements/critereon/SerializationContext;)Lcom/google/gson/JsonObject; a
net/minecraft/advancements/critereon/SerializationContext ci
	INSTANCE a
	predicateGson b
	serializeConditions ([Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition;)Lcom/google/gson/JsonElement; a
net/minecraft/advancements/critereon/ShotCrossbowTrigger cj
	ID a
	createInstance (Lcom/google/gson/JsonObject;Lnet/minecraft/advancements/critereon/EntityPredicate$Composite;Lnet/minecraft/advancements/critereon/DeserializationContext;)Lnet/minecraft/advancements/critereon/AbstractCriterionTriggerInstance; b
	createInstance (Lcom/google/gson/JsonObject;Lnet/minecraft/advancements/critereon/EntityPredicate$Composite;Lnet/minecraft/advancements/critereon/DeserializationContext;)Lnet/minecraft/advancements/critereon/ShotCrossbowTrigger$TriggerInstance; a
	getId ()Lnet/minecraft/resources/ResourceLocation; a
	trigger (Lnet/minecraft/server/level/ServerPlayer;Lnet/minecraft/world/item/ItemStack;)V a
net/minecraft/advancements/critereon/ShotCrossbowTrigger$TriggerInstance cj$a
	item a
	matches (Lnet/minecraft/world/item/ItemStack;)Z a
	serializeToJson (Lnet/minecraft/advancements/critereon/SerializationContext;)Lcom/google/gson/JsonObject; a
	shotCrossbow (Lnet/minecraft/advancements/critereon/ItemPredicate;)Lnet/minecraft/advancements/critereon/ShotCrossbowTrigger$TriggerInstance; a
	shotCrossbow (Lnet/minecraft/world/level/ItemLike;)Lnet/minecraft/advancements/critereon/ShotCrossbowTrigger$TriggerInstance; a
net/minecraft/advancements/critereon/SimpleCriterionTrigger ck
	players a
	addPlayerListener (Lnet/minecraft/server/PlayerAdvancements;Lnet/minecraft/advancements/CriterionTrigger$Listener;)V a
	createInstance (Lcom/google/gson/JsonObject;Lnet/minecraft/advancements/critereon/DeserializationContext;)Lnet/minecraft/advancements/CriterionTriggerInstance; a
	createInstance (Lcom/google/gson/JsonObject;Lnet/minecraft/advancements/critereon/DeserializationContext;)Lnet/minecraft/advancements/critereon/AbstractCriterionTriggerInstance; b
	createInstance (Lcom/google/gson/JsonObject;Lnet/minecraft/advancements/critereon/EntityPredicate$Composite;Lnet/minecraft/advancements/critereon/DeserializationContext;)Lnet/minecraft/advancements/critereon/AbstractCriterionTriggerInstance; b
	removePlayerListener (Lnet/minecraft/server/PlayerAdvancements;Lnet/minecraft/advancements/CriterionTrigger$Listener;)V b
	removePlayerListeners (Lnet/minecraft/server/PlayerAdvancements;)V a
	trigger (Lnet/minecraft/server/level/ServerPlayer;Ljava/util/function/Predicate;)V a
net/minecraft/advancements/critereon/SlideDownBlockTrigger cl
	ID a
	createInstance (Lcom/google/gson/JsonObject;Lnet/minecraft/advancements/critereon/EntityPredicate$Composite;Lnet/minecraft/advancements/critereon/DeserializationContext;)Lnet/minecraft/advancements/critereon/AbstractCriterionTriggerInstance; b
	createInstance (Lcom/google/gson/JsonObject;Lnet/minecraft/advancements/critereon/EntityPredicate$Composite;Lnet/minecraft/advancements/critereon/DeserializationContext;)Lnet/minecraft/advancements/critereon/SlideDownBlockTrigger$TriggerInstance; a
	deserializeBlock (Lcom/google/gson/JsonObject;)Lnet/minecraft/world/level/block/Block; a
	getId ()Lnet/minecraft/resources/ResourceLocation; a
	trigger (Lnet/minecraft/server/level/ServerPlayer;Lnet/minecraft/world/level/block/state/BlockState;)V a
net/minecraft/advancements/critereon/SlideDownBlockTrigger$TriggerInstance cl$a
	block a
	state b
	matches (Lnet/minecraft/world/level/block/state/BlockState;)Z a
	serializeToJson (Lnet/minecraft/advancements/critereon/SerializationContext;)Lcom/google/gson/JsonObject; a
	slidesDownBlock (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/advancements/critereon/SlideDownBlockTrigger$TriggerInstance; a
net/minecraft/advancements/critereon/StatePropertiesPredicate cm
	ANY a
	properties b
	checkState (Lnet/minecraft/world/level/block/state/StateDefinition;Ljava/util/function/Consumer;)V a
	fromJson (Lcom/google/gson/JsonElement;)Lnet/minecraft/advancements/critereon/StatePropertiesPredicate; a
	fromJson (Ljava/lang/String;Lcom/google/gson/JsonElement;)Lnet/minecraft/advancements/critereon/StatePropertiesPredicate$PropertyMatcher; a
	getStringOrNull (Lcom/google/gson/JsonElement;)Ljava/lang/String; b
	matches (Lnet/minecraft/world/level/block/state/BlockState;)Z a
	matches (Lnet/minecraft/world/level/block/state/StateDefinition;Lnet/minecraft/world/level/block/state/StateHolder;)Z a
	matches (Lnet/minecraft/world/level/material/FluidState;)Z a
	serializeToJson ()Lcom/google/gson/JsonElement; a
net/minecraft/advancements/critereon/StatePropertiesPredicate$Builder cm$a
	matchers a
	build ()Lnet/minecraft/advancements/critereon/StatePropertiesPredicate; b
	hasProperty (Lnet/minecraft/world/level/block/state/properties/Property;I)Lnet/minecraft/advancements/critereon/StatePropertiesPredicate$Builder; a
	hasProperty (Lnet/minecraft/world/level/block/state/properties/Property;Ljava/lang/Comparable;)Lnet/minecraft/advancements/critereon/StatePropertiesPredicate$Builder; a
	hasProperty (Lnet/minecraft/world/level/block/state/properties/Property;Ljava/lang/String;)Lnet/minecraft/advancements/critereon/StatePropertiesPredicate$Builder; a
	hasProperty (Lnet/minecraft/world/level/block/state/properties/Property;Z)Lnet/minecraft/advancements/critereon/StatePropertiesPredicate$Builder; a
	properties ()Lnet/minecraft/advancements/critereon/StatePropertiesPredicate$Builder; a
net/minecraft/advancements/critereon/StatePropertiesPredicate$ExactPropertyMatcher cm$b
	value a
	match (Lnet/minecraft/world/level/block/state/StateHolder;Lnet/minecraft/world/level/block/state/properties/Property;)Z a
	toJson ()Lcom/google/gson/JsonElement; a
net/minecraft/advancements/critereon/StatePropertiesPredicate$PropertyMatcher cm$c
	name a
	checkState (Lnet/minecraft/world/level/block/state/StateDefinition;Ljava/util/function/Consumer;)V a
	getName ()Ljava/lang/String; b
	match (Lnet/minecraft/world/level/block/state/StateDefinition;Lnet/minecraft/world/level/block/state/StateHolder;)Z a
	match (Lnet/minecraft/world/level/block/state/StateHolder;Lnet/minecraft/world/level/block/state/properties/Property;)Z a
	toJson ()Lcom/google/gson/JsonElement; a
net/minecraft/advancements/critereon/StatePropertiesPredicate$RangedPropertyMatcher cm$d
	maxValue b
	minValue a
	match (Lnet/minecraft/world/level/block/state/StateHolder;Lnet/minecraft/world/level/block/state/properties/Property;)Z a
	toJson ()Lcom/google/gson/JsonElement; a
net/minecraft/advancements/critereon/SummonedEntityTrigger cn
	ID a
	createInstance (Lcom/google/gson/JsonObject;Lnet/minecraft/advancements/critereon/EntityPredicate$Composite;Lnet/minecraft/advancements/critereon/DeserializationContext;)Lnet/minecraft/advancements/critereon/AbstractCriterionTriggerInstance; b
	createInstance (Lcom/google/gson/JsonObject;Lnet/minecraft/advancements/critereon/EntityPredicate$Composite;Lnet/minecraft/advancements/critereon/DeserializationContext;)Lnet/minecraft/advancements/critereon/SummonedEntityTrigger$TriggerInstance; a
	getId ()Lnet/minecraft/resources/ResourceLocation; a
	trigger (Lnet/minecraft/server/level/ServerPlayer;Lnet/minecraft/world/entity/Entity;)V a
net/minecraft/advancements/critereon/SummonedEntityTrigger$TriggerInstance cn$a
	entity a
	matches (Lnet/minecraft/world/level/storage/loot/LootContext;)Z a
	serializeToJson (Lnet/minecraft/advancements/critereon/SerializationContext;)Lcom/google/gson/JsonObject; a
	summonedEntity (Lnet/minecraft/advancements/critereon/EntityPredicate$Builder;)Lnet/minecraft/advancements/critereon/SummonedEntityTrigger$TriggerInstance; a
net/minecraft/advancements/critereon/TameAnimalTrigger co
	ID a
	createInstance (Lcom/google/gson/JsonObject;Lnet/minecraft/advancements/critereon/EntityPredicate$Composite;Lnet/minecraft/advancements/critereon/DeserializationContext;)Lnet/minecraft/advancements/critereon/AbstractCriterionTriggerInstance; b
	createInstance (Lcom/google/gson/JsonObject;Lnet/minecraft/advancements/critereon/EntityPredicate$Composite;Lnet/minecraft/advancements/critereon/DeserializationContext;)Lnet/minecraft/advancements/critereon/TameAnimalTrigger$TriggerInstance; a
	getId ()Lnet/minecraft/resources/ResourceLocation; a
	trigger (Lnet/minecraft/server/level/ServerPlayer;Lnet/minecraft/world/entity/animal/Animal;)V a
net/minecraft/advancements/critereon/TameAnimalTrigger$TriggerInstance co$a
	entity a
	matches (Lnet/minecraft/world/level/storage/loot/LootContext;)Z a
	serializeToJson (Lnet/minecraft/advancements/critereon/SerializationContext;)Lcom/google/gson/JsonObject; a
	tamedAnimal ()Lnet/minecraft/advancements/critereon/TameAnimalTrigger$TriggerInstance; c
	tamedAnimal (Lnet/minecraft/advancements/critereon/EntityPredicate;)Lnet/minecraft/advancements/critereon/TameAnimalTrigger$TriggerInstance; a
net/minecraft/advancements/critereon/TargetBlockTrigger cp
	ID a
	createInstance (Lcom/google/gson/JsonObject;Lnet/minecraft/advancements/critereon/EntityPredicate$Composite;Lnet/minecraft/advancements/critereon/DeserializationContext;)Lnet/minecraft/advancements/critereon/AbstractCriterionTriggerInstance; b
	createInstance (Lcom/google/gson/JsonObject;Lnet/minecraft/advancements/critereon/EntityPredicate$Composite;Lnet/minecraft/advancements/critereon/DeserializationContext;)Lnet/minecraft/advancements/critereon/TargetBlockTrigger$TriggerInstance; a
	getId ()Lnet/minecraft/resources/ResourceLocation; a
	trigger (Lnet/minecraft/server/level/ServerPlayer;Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/phys/Vec3;I)V a
net/minecraft/advancements/critereon/TargetBlockTrigger$TriggerInstance cp$a
	projectile b
	signalStrength a
	matches (Lnet/minecraft/world/level/storage/loot/LootContext;Lnet/minecraft/world/phys/Vec3;I)Z a
	serializeToJson (Lnet/minecraft/advancements/critereon/SerializationContext;)Lcom/google/gson/JsonObject; a
	targetHit (Lnet/minecraft/advancements/critereon/MinMaxBounds$Ints;Lnet/minecraft/advancements/critereon/EntityPredicate$Composite;)Lnet/minecraft/advancements/critereon/TargetBlockTrigger$TriggerInstance; a
net/minecraft/advancements/critereon/TickTrigger cq
	ID a
	createInstance (Lcom/google/gson/JsonObject;Lnet/minecraft/advancements/critereon/EntityPredicate$Composite;Lnet/minecraft/advancements/critereon/DeserializationContext;)Lnet/minecraft/advancements/critereon/AbstractCriterionTriggerInstance; b
	createInstance (Lcom/google/gson/JsonObject;Lnet/minecraft/advancements/critereon/EntityPredicate$Composite;Lnet/minecraft/advancements/critereon/DeserializationContext;)Lnet/minecraft/advancements/critereon/TickTrigger$TriggerInstance; a
	getId ()Lnet/minecraft/resources/ResourceLocation; a
	trigger (Lnet/minecraft/server/level/ServerPlayer;)V a
net/minecraft/advancements/critereon/TickTrigger$TriggerInstance cq$a
net/minecraft/advancements/critereon/TradeTrigger cr
	ID a
	createInstance (Lcom/google/gson/JsonObject;Lnet/minecraft/advancements/critereon/EntityPredicate$Composite;Lnet/minecraft/advancements/critereon/DeserializationContext;)Lnet/minecraft/advancements/critereon/AbstractCriterionTriggerInstance; b
	createInstance (Lcom/google/gson/JsonObject;Lnet/minecraft/advancements/critereon/EntityPredicate$Composite;Lnet/minecraft/advancements/critereon/DeserializationContext;)Lnet/minecraft/advancements/critereon/TradeTrigger$TriggerInstance; a
	getId ()Lnet/minecraft/resources/ResourceLocation; a
	trigger (Lnet/minecraft/server/level/ServerPlayer;Lnet/minecraft/world/entity/npc/AbstractVillager;Lnet/minecraft/world/item/ItemStack;)V a
net/minecraft/advancements/critereon/TradeTrigger$TriggerInstance cr$a
	item b
	villager a
	matches (Lnet/minecraft/world/level/storage/loot/LootContext;Lnet/minecraft/world/item/ItemStack;)Z a
	serializeToJson (Lnet/minecraft/advancements/critereon/SerializationContext;)Lcom/google/gson/JsonObject; a
	tradedWithVillager ()Lnet/minecraft/advancements/critereon/TradeTrigger$TriggerInstance; c
net/minecraft/advancements/critereon/UsedEnderEyeTrigger cs
	ID a
	createInstance (Lcom/google/gson/JsonObject;Lnet/minecraft/advancements/critereon/EntityPredicate$Composite;Lnet/minecraft/advancements/critereon/DeserializationContext;)Lnet/minecraft/advancements/critereon/AbstractCriterionTriggerInstance; b
	createInstance (Lcom/google/gson/JsonObject;Lnet/minecraft/advancements/critereon/EntityPredicate$Composite;Lnet/minecraft/advancements/critereon/DeserializationContext;)Lnet/minecraft/advancements/critereon/UsedEnderEyeTrigger$TriggerInstance; a
	getId ()Lnet/minecraft/resources/ResourceLocation; a
	trigger (Lnet/minecraft/server/level/ServerPlayer;Lnet/minecraft/core/BlockPos;)V a
net/minecraft/advancements/critereon/UsedEnderEyeTrigger$TriggerInstance cs$a
	level a
	matches (D)Z a
net/minecraft/advancements/critereon/UsedTotemTrigger ct
	ID a
	createInstance (Lcom/google/gson/JsonObject;Lnet/minecraft/advancements/critereon/EntityPredicate$Composite;Lnet/minecraft/advancements/critereon/DeserializationContext;)Lnet/minecraft/advancements/critereon/AbstractCriterionTriggerInstance; b
	createInstance (Lcom/google/gson/JsonObject;Lnet/minecraft/advancements/critereon/EntityPredicate$Composite;Lnet/minecraft/advancements/critereon/DeserializationContext;)Lnet/minecraft/advancements/critereon/UsedTotemTrigger$TriggerInstance; a
	getId ()Lnet/minecraft/resources/ResourceLocation; a
	trigger (Lnet/minecraft/server/level/ServerPlayer;Lnet/minecraft/world/item/ItemStack;)V a
net/minecraft/advancements/critereon/UsedTotemTrigger$TriggerInstance ct$a
	item a
	matches (Lnet/minecraft/world/item/ItemStack;)Z a
	serializeToJson (Lnet/minecraft/advancements/critereon/SerializationContext;)Lcom/google/gson/JsonObject; a
	usedTotem (Lnet/minecraft/advancements/critereon/ItemPredicate;)Lnet/minecraft/advancements/critereon/UsedTotemTrigger$TriggerInstance; a
	usedTotem (Lnet/minecraft/world/level/ItemLike;)Lnet/minecraft/advancements/critereon/UsedTotemTrigger$TriggerInstance; a
net/minecraft/advancements/critereon/WrappedMinMaxBounds cu
	ANY a
	ERROR_INTS_ONLY b
	max d
	min c
	atLeast (F)Lnet/minecraft/advancements/critereon/WrappedMinMaxBounds; b
	atMost (F)Lnet/minecraft/advancements/critereon/WrappedMinMaxBounds; c
	between (FF)Lnet/minecraft/advancements/critereon/WrappedMinMaxBounds; a
	exactly (F)Lnet/minecraft/advancements/critereon/WrappedMinMaxBounds; a
	fromJson (Lcom/google/gson/JsonElement;)Lnet/minecraft/advancements/critereon/WrappedMinMaxBounds; a
	fromReader (Lcom/mojang/brigadier/StringReader;Z)Lnet/minecraft/advancements/critereon/WrappedMinMaxBounds; a
	fromReader (Lcom/mojang/brigadier/StringReader;ZLjava/util/function/Function;)Lnet/minecraft/advancements/critereon/WrappedMinMaxBounds; a
	getMax ()Ljava/lang/Float; b
	getMin ()Ljava/lang/Float; a
	isAllowedNumber (Lcom/mojang/brigadier/StringReader;Z)Z c
	matches (F)Z d
	matchesSqr (D)Z a
	optionallyFormat (Ljava/lang/Float;Ljava/util/function/Function;)Ljava/lang/Float; a
	readNumber (Lcom/mojang/brigadier/StringReader;Z)Ljava/lang/Float; b
	serializeToJson ()Lcom/google/gson/JsonElement; c
net/minecraft/client/AmbientOcclusionStatus dje
	$VALUES g
	BY_ID d
	MAX c
	MIN b
	OFF a
	id e
	key f
	byId (I)Lnet/minecraft/client/AmbientOcclusionStatus; a
	getId ()I a
	getKey ()Ljava/lang/String; b
net/minecraft/client/AttackIndicatorStatus djf
	$VALUES g
	BY_ID d
	CROSSHAIR b
	HOTBAR c
	OFF a
	id e
	key f
	byId (I)Lnet/minecraft/client/AttackIndicatorStatus; a
	getId ()I a
	getKey ()Ljava/lang/String; b
net/minecraft/client/BooleanOption djg
	getter X
	setter Y
	createButton (Lnet/minecraft/client/Options;III)Lnet/minecraft/client/gui/components/AbstractWidget; a
	get (Lnet/minecraft/client/Options;)Z b
	getMessage (Lnet/minecraft/client/Options;)Lnet/minecraft/network/chat/Component; c
	set (Lnet/minecraft/client/Options;Ljava/lang/String;)V a
	set (Lnet/minecraft/client/Options;Z)V a
	toggle (Lnet/minecraft/client/Options;)V a
net/minecraft/client/Camera djh
	blockPosition e
	detached l
	entity c
	eyeHeight n
	eyeHeightOld o
	forwards f
	initialized a
	left h
	level b
	mirror m
	position d
	rotation k
	up g
	xRot i
	yRot j
	getBlockPosition ()Lnet/minecraft/core/BlockPos; c
	getEntity ()Lnet/minecraft/world/entity/Entity; g
	getFluidInCamera ()Lnet/minecraft/world/level/material/FluidState; k
	getLeftVector ()Lcom/mojang/math/Vector3f; n
	getLookVector ()Lcom/mojang/math/Vector3f; l
	getMaxZoom (D)D a
	getPosition ()Lnet/minecraft/world/phys/Vec3; b
	getUpVector ()Lcom/mojang/math/Vector3f; m
	getXRot ()F d
	getYRot ()F e
	isDetached ()Z i
	isInitialized ()Z h
	isMirror ()Z j
	move (DDD)V a
	reset ()V o
	rotation ()Lcom/mojang/math/Quaternion; f
	setPosition (DDD)V b
	setPosition (Lnet/minecraft/world/phys/Vec3;)V a
	setRotation (FF)V a
	setup (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/world/entity/Entity;ZZF)V a
	tick ()V a
net/minecraft/client/CameraType dji
	$VALUES g
	FIRST_PERSON a
	THIRD_PERSON_BACK b
	THIRD_PERSON_FRONT c
	VALUES d
	firstPerson e
	mirrored f
	cycle ()Lnet/minecraft/client/CameraType; c
	isFirstPerson ()Z a
	isMirrored ()Z b
net/minecraft/client/ClientRecipeBook djj
	LOGGER c
	allCollections e
	collectionsByTab d
	categorizeAndGroupRecipes (Ljava/lang/Iterable;)Ljava/util/Map; b
	getCategory (Lnet/minecraft/world/item/crafting/Recipe;)Lnet/minecraft/client/RecipeBookCategories; g
	getCollection (Lnet/minecraft/client/RecipeBookCategories;)Ljava/util/List; a
	getCollections ()Ljava/util/List; b
	setupCollections (Ljava/lang/Iterable;)V a
net/minecraft/client/CloudStatus djk
	$VALUES g
	BY_ID d
	FANCY c
	FAST b
	OFF a
	id e
	key f
	byId (I)Lnet/minecraft/client/CloudStatus; a
	getId ()I a
	getKey ()Ljava/lang/String; b
net/minecraft/client/ComponentCollector djl
	parts a
	append (Lnet/minecraft/network/chat/FormattedText;)V a
	getResult ()Lnet/minecraft/network/chat/FormattedText; a
	getResultOrEmpty ()Lnet/minecraft/network/chat/FormattedText; b
	reset ()V c
net/minecraft/client/CycleOption djm
	setter X
	toString Y
	createButton (Lnet/minecraft/client/Options;III)Lnet/minecraft/client/gui/components/AbstractWidget; a
	getMessage (Lnet/minecraft/client/Options;)Lnet/minecraft/network/chat/Component; c
	toggle (Lnet/minecraft/client/Options;I)V a
net/minecraft/client/DebugQueryHandler djn
	callback c
	connection a
	transactionId b
	handleResponse (ILnet/minecraft/nbt/CompoundTag;)Z a
	queryBlockEntityTag (Lnet/minecraft/core/BlockPos;Ljava/util/function/Consumer;)V a
	queryEntityTag (ILjava/util/function/Consumer;)V a
	startTransaction (Ljava/util/function/Consumer;)I a
net/minecraft/client/FullscreenResolutionProgressOption djo
net/minecraft/client/Game djp
	launcher b
	listener c
	minecraft a
	onLeaveGameSession ()V b
	onStartGameSession ()V a
net/minecraft/client/Game$Metrics djp$a
	average c
	max b
	min a
	samples d
net/minecraft/client/GraphicsStatus djq
	$VALUES g
	BY_ID d
	FABULOUS c
	FANCY b
	FAST a
	id e
	key f
	byId (I)Lnet/minecraft/client/GraphicsStatus; a
	cycleNext ()Lnet/minecraft/client/GraphicsStatus; c
	getId ()I a
	getKey ()Ljava/lang/String; b
net/minecraft/client/GuiMessage djr
	addedTime a
	id c
	message b
	getAddedTime ()I b
	getId ()I c
	getMessage ()Ljava/lang/Object; a
net/minecraft/client/HotbarManager djs
	LOGGER a
	fixerUpper c
	hotbars d
	loaded e
	optionsFile b
	get (I)Lnet/minecraft/client/player/inventory/Hotbar; a
	load ()V b
	save ()V a
net/minecraft/client/KeyMapping djt
	ALL a
	CATEGORIES c
	CATEGORY_SORT_ORDER d
	MAP b
	category g
	clickCount j
	defaultKey f
	isDown i
	key h
	name e
	click (Lcom/mojang/blaze3d/platform/InputConstants$Key;)V a
	compareTo (Lnet/minecraft/client/KeyMapping;)I a
	consumeClick ()Z f
	createNameSupplier (Ljava/lang/String;)Ljava/util/function/Supplier; a
	getCategory ()Ljava/lang/String; e
	getDefaultKey ()Lcom/mojang/blaze3d/platform/InputConstants$Key; h
	getName ()Ljava/lang/String; g
	getTranslatedKeyMessage ()Lnet/minecraft/network/chat/Component; j
	isDefault ()Z k
	isDown ()Z d
	isUnbound ()Z i
	matches (II)Z a
	matchesMouse (I)Z a
	release ()V m
	releaseAll ()V b
	resetMapping ()V c
	same (Lnet/minecraft/client/KeyMapping;)Z b
	saveString ()Ljava/lang/String; l
	set (Lcom/mojang/blaze3d/platform/InputConstants$Key;Z)V a
	setAll ()V a
	setDown (Z)V a
	setKey (Lcom/mojang/blaze3d/platform/InputConstants$Key;)V b
net/minecraft/client/KeyboardHandler dju
	clipboardManager c
	debugCrashKeyReportedCount f
	debugCrashKeyReportedTime e
	debugCrashKeyTime d
	handledDebugKey g
	minecraft a
	sendRepeatsToGui b
	charTyped (JII)V a
	copyCreateBlockCommand (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/BlockPos;Lnet/minecraft/nbt/CompoundTag;)V a
	copyCreateEntityCommand (Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/world/phys/Vec3;Lnet/minecraft/nbt/CompoundTag;)V a
	copyRecreateCommand (ZZ)V a
	debugFeedback (Ljava/lang/String;[Ljava/lang/Object;)V c
	debugFeedbackTranslated (Ljava/lang/String;[Ljava/lang/Object;)V a
	debugWarningTranslated (Ljava/lang/String;[Ljava/lang/Object;)V b
	getClipboard ()Ljava/lang/String; a
	handleChunkDebugKeys (I)Z a
	handleDebugKeys (I)Z b
	keyPress (JIIII)V a
	setClipboard (Ljava/lang/String;)V a
	setSendRepeatsToGui (Z)V a
	setup (J)V a
	tick ()V b
net/minecraft/client/LogaritmicProgressOption djv
	toPct (D)D a
	toValue (D)D b
net/minecraft/client/Minecraft djw
	ALT_FONT d
	DEFAULT_FONT b
	LOGGER G
	ON_OSX a
	RESOURCE_RELOAD_INITIAL_TASK H
	UNIFORM_FONT c
	allowsChat af
	allowsMultiplayer ae
	blockColors ak
	blockRenderer av
	cameraEntity t
	chunkPath C
	chunkVisibility D
	clientPackSource ah
	connectedToRealms aL
	crosshairPickEntity u
	currentServer aC
	debugPath aX
	debugRenderer i
	delayedCrash aO
	demo ad
	entityRenderDispatcher R
	fixerUpper L
	font g
	fontManager ap
	fps aP
	fpsPieProfiler aV
	fpsPieRenderTicks aU
	fpsPieResults aW
	fpsString A
	frameTimer o
	frames aK
	game az
	gameDirectory n
	gameMode q
	gameRenderer h
	gameThread aM
	gpuWarnlistManager ar
	gui j
	hitResult v
	hotbarManager X
	instance F
	is64bit ac
	isLocalServer aE
	itemColors al
	itemInHandRenderer T
	itemRenderer S
	keyboardHandler m
	languageManager aj
	lastNanoTime aI
	lastTime aJ
	launchedVersion Y
	level r
	levelRenderer e
	levelSource ab
	mainRenderTarget am
	minecraftSessionService as
	missTime w
	mobEffectTextures ax
	modelManager au
	mouseHandler l
	musicManager ao
	noRender x
	options k
	overlay z
	paintingTextures aw
	particleEngine f
	pause aG
	pausePartialTick aH
	pendingConnection aD
	pendingReload aS
	player s
	profileProperties J
	profiler aT
	progressListener W
	progressTasks aR
	proxy aa
	renderBuffers Q
	reserve p
	resourceManager ag
	resourcePackDirectory I
	resourcePackRepository ai
	rightClickDelay aF
	running aN
	screen y
	searchRegistry U
	singleplayerServer aB
	skinManager at
	smartCull E
	snooper P
	soundManager an
	splashManager aq
	textureManager K
	timer O
	toast ay
	tutorial aA
	user V
	versionType Z
	virtualScreen M
	window N
	windowActive aQ
	wireframe B
	adaptV3 (Ljava/util/function/Supplier;)Ljava/util/function/Supplier; b
	adaptV4 (Ljava/util/function/Supplier;)Ljava/util/function/Supplier; c
	addCustomNbtData (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/block/entity/BlockEntity;)Lnet/minecraft/world/item/ItemStack; a
	allowsChat ()Z t
	allowsMultiplayer ()Z s
	checkIs64Bit ()Z aF
	clearLevel ()V r
	clearLevel (Lnet/minecraft/client/gui/screens/Screen;)V b
	clearResourcePacksOnError (Ljava/lang/Throwable;Lnet/minecraft/network/chat/Component;)V a
	continueAttack (Z)V f
	crash (Lnet/minecraft/CrashReport;)V b
	createClientPackAdapter (Ljava/lang/String;ZLjava/util/function/Supplier;Lnet/minecraft/server/packs/PackResources;Lnet/minecraft/server/packs/metadata/pack/PackMetadataSection;Lnet/minecraft/server/packs/repository/Pack$Position;Lnet/minecraft/server/packs/repository/PackSource;)Lnet/minecraft/server/packs/repository/Pack; a
	createLevel (Ljava/lang/String;Lnet/minecraft/world/level/LevelSettings;Lnet/minecraft/core/RegistryAccess$RegistryHolder;Lnet/minecraft/world/level/levelgen/WorldGenSettings;)V a
	createSearchTrees ()V aE
	createTitle ()Ljava/lang/String; aD
	cursorEntered ()V b
	debugFpsMeterKeyPress (I)V a
	delayCrash (Lnet/minecraft/CrashReport;)V a
	delayTextureReload ()Ljava/util/concurrent/CompletableFuture; C
	destroy ()V l
	displayExperimentalConfirmationDialog (Lnet/minecraft/client/Minecraft$ExperimentalDialogType;Ljava/lang/String;ZLjava/lang/Runnable;)V a
	doLoadLevel (Ljava/lang/String;Lnet/minecraft/core/RegistryAccess$RegistryHolder;Ljava/util/function/Function;Lcom/mojang/datafixers/util/Function4;ZLnet/minecraft/client/Minecraft$ExperimentalDialogType;)V a
	emergencySave ()V m
	fillReport (Lnet/minecraft/CrashReport;)Lnet/minecraft/CrashReport; c
	fillReport (Lnet/minecraft/client/resources/language/LanguageManager;Ljava/lang/String;Lnet/minecraft/client/Options;Lnet/minecraft/CrashReport;)V a
	finishProfilers (ZLnet/minecraft/util/profiling/SingleTickProfiler;)V b
	forceSetScreen (Lnet/minecraft/client/gui/screens/Screen;)V c
	getAverageFps ()I ae
	getBlockColors ()Lnet/minecraft/client/color/block/BlockColors; ak
	getBlockRenderer ()Lnet/minecraft/client/renderer/block/BlockRenderDispatcher; aa
	getCameraEntity ()Lnet/minecraft/world/entity/Entity; Z
	getClientPackSource ()Lnet/minecraft/client/resources/ClientPackSource; O
	getConnection ()Lnet/minecraft/client/multiplayer/ClientPacketListener; v
	getCurrentServer ()Lnet/minecraft/client/multiplayer/ServerData; D
	getCurrentSnooperAction ()Ljava/lang/String; aN
	getDeltaFrameTime ()F aj
	getEntityRenderDispatcher ()Lnet/minecraft/client/renderer/entity/EntityRenderDispatcher; ab
	getFixerUpper ()Lcom/mojang/datafixers/DataFixer; ah
	getFrameTime ()F ai
	getFrameTimer ()Lnet/minecraft/util/FrameTimer; af
	getFramerateLimit ()I aI
	getGame ()Lnet/minecraft/client/Game; aw
	getGpuWarnlistManager ()Lnet/minecraft/client/renderer/GpuWarnlistManager; U
	getHotbarManager ()Lnet/minecraft/client/HotbarManager; ap
	getInstance ()Lnet/minecraft/client/Minecraft; B
	getItemInHandRenderer ()Lnet/minecraft/client/renderer/ItemInHandRenderer; ad
	getItemRenderer ()Lnet/minecraft/client/renderer/entity/ItemRenderer; ac
	getLanguageManager ()Lnet/minecraft/client/resources/language/LanguageManager; Q
	getLaunchedVersion ()Ljava/lang/String; g
	getLevelSource ()Lnet/minecraft/world/level/storage/LevelStorageSource; k
	getMainRenderTarget ()Lcom/mojang/blaze3d/pipeline/RenderTarget; f
	getMinecraftSessionService ()Lcom/mojang/authlib/minecraft/MinecraftSessionService; X
	getMobEffectTextures ()Lnet/minecraft/client/resources/MobEffectTextureManager; as
	getModelManager ()Lnet/minecraft/client/resources/model/ModelManager; aq
	getMusicManager ()Lnet/minecraft/client/sounds/MusicManager; p
	getOverlay ()Lnet/minecraft/client/gui/screens/Overlay; az
	getPaintingTextures ()Lnet/minecraft/client/resources/PaintingTextureManager; ar
	getProfileProperties ()Lcom/mojang/authlib/properties/PropertyMap; J
	getProfiler ()Lnet/minecraft/util/profiling/ProfilerFiller; at
	getProgressListener ()Lnet/minecraft/server/level/progress/StoringChunkProgressListener; ax
	getProxy ()Ljava/net/Proxy; K
	getResourceManager ()Lnet/minecraft/server/packs/resources/ResourceManager; M
	getResourcePackDirectory ()Ljava/io/File; P
	getResourcePackRepository ()Lnet/minecraft/server/packs/repository/PackRepository; N
	getRunningThread ()Ljava/lang/Thread; av
	getSearchTree (Lnet/minecraft/client/searchtree/SearchRegistry$Key;)Lnet/minecraft/client/searchtree/MutableSearchTree; a
	getSingleplayerServer ()Lnet/minecraft/client/server/IntegratedServer; G
	getSituationalMusic ()Lnet/minecraft/sounds/Music; W
	getSkinManager ()Lnet/minecraft/client/resources/SkinManager; Y
	getSnooper ()Lnet/minecraft/world/Snooper; H
	getSoundManager ()Lnet/minecraft/client/sounds/SoundManager; V
	getSplashManager ()Lnet/minecraft/client/resources/SplashManager; ay
	getTextureAtlas (Lnet/minecraft/resources/ResourceLocation;)Ljava/util/function/Function; a
	getTextureManager ()Lnet/minecraft/client/renderer/texture/TextureManager; L
	getToasts ()Lnet/minecraft/client/gui/components/toasts/ToastComponent; am
	getTutorial ()Lnet/minecraft/client/tutorial/Tutorial; an
	getUser ()Lnet/minecraft/client/User; I
	getVersionType ()Ljava/lang/String; h
	getWindow ()Lcom/mojang/blaze3d/platform/Window; aB
	grabHugeScreenshot (Ljava/io/File;IIII)Lnet/minecraft/network/chat/Component; a
	grabPanoramixScreenshot (Ljava/io/File;II)Lnet/minecraft/network/chat/Component; a
	handleKeybinds ()V aL
	hasSingleplayerServer ()Z F
	is64Bit ()Z R
	isBlocked (Ljava/util/UUID;)Z a
	isConnectedToRealms ()Z ag
	isDemo ()Z u
	isEnforceUnicode ()Z i
	isLocalServer ()Z E
	isPaused ()Z S
	isProbablyModded ()Z d
	isRunning ()Z o
	isSnooperEnabled ()Z T
	isWindowActive ()Z ao
	loadDataPacks (Lnet/minecraft/world/level/storage/LevelStorageSource$LevelStorageAccess;)Lnet/minecraft/world/level/DataPackConfig; a
	loadLevel (Ljava/lang/String;)V a
	loadWorldData (Lnet/minecraft/world/level/storage/LevelStorageSource$LevelStorageAccess;Lnet/minecraft/core/RegistryAccess$RegistryHolder;Lnet/minecraft/server/packs/resources/ResourceManager;Lnet/minecraft/world/level/DataPackConfig;)Lnet/minecraft/world/level/storage/WorldData; a
	makeServerStem (Lnet/minecraft/core/RegistryAccess$RegistryHolder;Ljava/util/function/Function;Lcom/mojang/datafixers/util/Function4;ZLnet/minecraft/world/level/storage/LevelStorageSource$LevelStorageAccess;)Lnet/minecraft/client/Minecraft$ServerStem; a
	onFullscreenError (IJ)V a
	openChatScreen (Ljava/lang/String;)V b
	pauseGame (Z)V c
	pickBlock ()V aM
	populateSnooper (Lnet/minecraft/world/Snooper;)V a
	populateSnooperInitial (Lnet/minecraft/world/Snooper;)V b
	populateSnooperWithOpenGL (Lnet/minecraft/world/Snooper;)V c
	reloadResourcePacks ()Ljava/util/concurrent/CompletableFuture; j
	renderBuffers ()Lnet/minecraft/client/renderer/RenderBuffers; aC
	renderFpsMeter (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/util/profiling/ProfileResults;)V a
	renderNames ()Z w
	renderOnThread ()Z aA
	resizeDisplay ()V a
	rollbackResourcePacks (Ljava/lang/Throwable;)V a
	run ()V e
	runTick (Z)V e
	selectMainFont (Z)V b
	selfTest ()V aG
	setCameraEntity (Lnet/minecraft/world/entity/Entity;)V a
	setConnectedToRealms (Z)V d
	setCurrentServer (Lnet/minecraft/client/multiplayer/ServerData;)V a
	setLevel (Lnet/minecraft/client/multiplayer/ClientLevel;)V a
	setOverlay (Lnet/minecraft/client/gui/screens/Overlay;)V a
	setScreen (Lnet/minecraft/client/gui/screens/Screen;)V a
	setWindowActive (Z)V a
	shouldEntityAppearGlowing (Lnet/minecraft/world/entity/Entity;)Z b
	shouldRenderFpsPie ()Z aH
	shouldRun (Ljava/lang/Runnable;)Z d
	showOnlyReducedInfo ()Z al
	startAttack ()V aJ
	startProfilers (ZLnet/minecraft/util/profiling/SingleTickProfiler;)V a
	startUseItem ()V aK
	stop ()V n
	tick ()V q
	updateLevelInEngines (Lnet/minecraft/client/multiplayer/ClientLevel;)V b
	updateMaxMipLevel (I)V b
	updateScreenAndTick (Lnet/minecraft/client/gui/screens/Screen;)V d
	updateTitle ()V c
	useAmbientOcclusion ()Z A
	useFancyGraphics ()Z x
	useShaderTransparency ()Z z
	wrapRunnable (Ljava/lang/Runnable;)Ljava/lang/Runnable; e
net/minecraft/client/Minecraft$ExperimentalDialogType djw$a
	$VALUES d
	BACKUP c
	CREATE b
	NONE a
net/minecraft/client/Minecraft$ServerStem djw$b
	packRepository a
	serverResources b
	worldData c
	packRepository ()Lnet/minecraft/server/packs/repository/PackRepository; a
	serverResources ()Lnet/minecraft/server/ServerResources; b
	worldData ()Lnet/minecraft/world/level/storage/WorldData; c
net/minecraft/client/MouseHandler djx
	accumulatedDX n
	accumulatedDY o
	accumulatedScroll p
	activeButton h
	clickDepth j
	fakeRightMouse g
	ignoreFirstMove i
	isLeftPressed b
	isMiddlePressed c
	isRightPressed d
	lastMouseEventTime q
	minecraft a
	mouseGrabbed r
	mousePressedTime k
	smoothTurnX l
	smoothTurnY m
	xpos e
	ypos f
	cursorEntered ()V k
	grabMouse ()V i
	isLeftPressed ()Z b
	isMiddlePressed ()Z c
	isMouseGrabbed ()Z h
	isRightPressed ()Z d
	onDrop (JLjava/util/List;)V a
	onMove (JDD)V b
	onPress (JIII)V a
	onScroll (JDD)V a
	releaseMouse ()V j
	setIgnoreFirstMove ()V g
	setup (J)V a
	turnPlayer ()V a
	xpos ()D e
	ypos ()D f
net/minecraft/client/NarratorStatus djy
	$VALUES h
	ALL b
	BY_ID e
	CHAT c
	OFF a
	SYSTEM d
	id f
	name g
	byId (I)Lnet/minecraft/client/NarratorStatus; a
	getId ()I a
	getName ()Lnet/minecraft/network/chat/Component; b
net/minecraft/client/Option djz
	ACCESSIBILITY_TOOLTIP_FOV_EFFECT X
	ACCESSIBILITY_TOOLTIP_SCREEN_EFFECT Y
	AMBIENT_OCCLUSION u
	ATTACK_INDICATOR v
	AUTO_JUMP E
	AUTO_SUGGESTIONS F
	BIOME_BLEND_RADIUS a
	CHAT_COLOR G
	CHAT_DELAY h
	CHAT_HEIGHT_FOCUSED b
	CHAT_HEIGHT_UNFOCUSED c
	CHAT_LINE_SPACING g
	CHAT_LINKS H
	CHAT_LINKS_PROMPT I
	CHAT_OPACITY d
	CHAT_SCALE e
	CHAT_VISIBILITY w
	CHAT_WIDTH f
	DISCRETE_MOUSE_SCROLL J
	ENABLE_VSYNC K
	ENTITY_DISTANCE_SCALING r
	ENTITY_SHADOWS L
	FORCE_UNICODE_FONT M
	FOV i
	FOV_EFFECTS_SCALE j
	FRAMERATE_LIMIT l
	GAMMA m
	GRAPHICS x
	GRAPHICS_TOOLTIP_FABULOUS aa
	GRAPHICS_TOOLTIP_FANCY ab
	GRAPHICS_TOOLTIP_FAST Z
	GUI_SCALE y
	INVERT_MOUSE N
	MAIN_HAND z
	MIPMAP_LEVELS n
	MOUSE_WHEEL_SENSITIVITY o
	NARRATOR A
	PARTICLES B
	RAW_MOUSE_INPUT p
	REALMS_NOTIFICATIONS O
	REDUCED_DEBUG_INFO P
	RENDER_CLOUDS C
	RENDER_DISTANCE q
	SCREEN_EFFECTS_SCALE k
	SENSITIVITY s
	SHOW_SUBTITLES Q
	SNOOPER_ENABLED R
	TEXT_BACKGROUND D
	TEXT_BACKGROUND_OPACITY t
	TOGGLE_CROUCH S
	TOGGLE_SPRINT T
	TOUCHSCREEN U
	USE_FULLSCREEN V
	VIEW_BOBBING W
	caption ac
	toolTip ad
	createButton (Lnet/minecraft/client/Options;III)Lnet/minecraft/client/gui/components/AbstractWidget; a
	genericValueLabel (I)Lnet/minecraft/network/chat/Component; c
	genericValueLabel (Lnet/minecraft/network/chat/Component;)Lnet/minecraft/network/chat/Component; a
	getCaption ()Lnet/minecraft/network/chat/Component; a
	getMessage (Lnet/minecraft/client/Options;)Lnet/minecraft/network/chat/Component; c
	getTooltip ()Ljava/util/Optional; b
	percentAddValueLabel (I)Lnet/minecraft/network/chat/Component; b
	percentValueLabel (D)Lnet/minecraft/network/chat/Component; c
	pixelValueLabel (I)Lnet/minecraft/network/chat/Component; a
	setTooltip (Ljava/util/List;)V a
net/minecraft/client/Options dka
	GSON aV
	LOGGER aU
	OPTION_SPLITTER aX
	RESOURCE_PACK_TYPE aW
	advancedItemTooltips p
	ambientOcclusion g
	attackIndicator C
	autoJump I
	autoSuggestions J
	backgroundForChatOnly W
	biomeBlendRadius E
	bobView Z
	cameraType bb
	chatColors K
	chatDelay z
	chatHeightFocused y
	chatHeightUnfocused x
	chatLineSpacing l
	chatLinks L
	chatLinksPrompt M
	chatOpacity k
	chatScale v
	chatVisibility j
	chatWidth w
	difficulty aE
	discreteMouseScroll R
	enableVsync N
	entityDistanceScaling c
	entityShadows O
	forceUnicodeFont P
	fov aL
	fovEffectScale aN
	framerateLimit d
	fullscreen Y
	fullscreenVideoModeString n
	gamma aO
	glDebugVerbosity H
	graphicsMode f
	guiScale aP
	heldItemTooltips u
	hideGui aF
	hideServerAddress o
	incompatibleResourcePacks i
	invertYMouse Q
	keyAdvancements ay
	keyAttack ao
	keyChat aq
	keyCommand as
	keyDown af
	keyDrop am
	keyFullscreen aw
	keyHotbarSlots az
	keyInventory ak
	keyJump ah
	keyLeft ae
	keyLoadHotbarActivator aB
	keyMappings aC
	keyPickItem ap
	keyPlayerList ar
	keyRight ag
	keySaveHotbarActivator aA
	keyScreenshot at
	keyShift ai
	keySmoothCamera av
	keySpectatorOutlines ax
	keySprint aj
	keySwapOffhand al
	keyTogglePerspective au
	keyUp ad
	keyUse an
	languageCode aS
	lastMpIp aJ
	mainHand r
	minecraft aD
	mipmapLevels A
	modelParts aY
	mouseWheelSensitivity F
	narratorStatus aR
	optionsFile ba
	overrideHeight t
	overrideWidth s
	particles aQ
	pauseOnLostFocus q
	rawMouseInput G
	realmsNotifications S
	reducedDebugInfo T
	renderClouds e
	renderDebug aG
	renderDebugCharts aH
	renderDistance b
	renderFpsChart aI
	resourcePacks h
	screenEffectScale aM
	sensitivity a
	showSubtitles V
	skipMultiplayerWarning ac
	smoothCamera aK
	snooperEnabled U
	sourceVolumes aZ
	syncWrites aT
	textBackgroundOpacity m
	toggleCrouch aa
	toggleSprint ab
	touchscreen X
	tutorialStep D
	useNativeTransport B
	broadcastOptions ()V c
	dataFix (Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/nbt/CompoundTag; a
	getBackgroundColor (F)I b
	getBackgroundColor (I)I a
	getBackgroundOpacity (F)F a
	getCameraType ()Lnet/minecraft/client/CameraType; g
	getCloudsType ()Lnet/minecraft/client/CloudStatus; e
	getModelParts ()Ljava/util/Set; d
	getSoundSourceVolume (Lnet/minecraft/sounds/SoundSource;)F a
	load ()V a
	loadSelectedResourcePacks (Lnet/minecraft/server/packs/repository/PackRepository;)V a
	readFloat (Ljava/lang/String;)F a
	save ()V b
	setCameraType (Lnet/minecraft/client/CameraType;)V a
	setKey (Lnet/minecraft/client/KeyMapping;Lcom/mojang/blaze3d/platform/InputConstants$Key;)V a
	setModelPart (Lnet/minecraft/world/entity/player/PlayerModelPart;Z)V a
	setSoundCategoryVolume (Lnet/minecraft/sounds/SoundSource;F)V a
	toggleModelPart (Lnet/minecraft/world/entity/player/PlayerModelPart;)V a
	useNativeTransport ()Z f
net/minecraft/client/ParticleStatus dkb
	$VALUES g
	ALL a
	BY_ID d
	DECREASED b
	MINIMAL c
	id e
	key f
	byId (I)Lnet/minecraft/client/ParticleStatus; a
	getId ()I b
	getKey ()Ljava/lang/String; a
net/minecraft/client/ProgressOption dkc
	getter aa
	maxValue Z
	minValue Y
	setter ab
	steps X
	toString ac
	clamp (D)D d
	createButton (Lnet/minecraft/client/Options;III)Lnet/minecraft/client/gui/components/AbstractWidget; a
	get (Lnet/minecraft/client/Options;)D a
	getMaxValue ()D d
	getMessage (Lnet/minecraft/client/Options;)Lnet/minecraft/network/chat/Component; c
	getMinValue ()D c
	set (Lnet/minecraft/client/Options;D)V a
	setMaxValue (F)V a
	toPct (D)D a
	toValue (D)D b
net/minecraft/client/RecipeBookCategories dkd
	$VALUES y
	AGGREGATE_CATEGORIES w
	BLAST_FURNACE_BLOCKS k
	BLAST_FURNACE_CATEGORIES t
	BLAST_FURNACE_MISC l
	BLAST_FURNACE_SEARCH j
	CAMPFIRE q
	CRAFTING_BUILDING_BLOCKS b
	CRAFTING_CATEGORIES v
	CRAFTING_EQUIPMENT d
	CRAFTING_MISC e
	CRAFTING_REDSTONE c
	CRAFTING_SEARCH a
	FURNACE_BLOCKS h
	FURNACE_CATEGORIES u
	FURNACE_FOOD g
	FURNACE_MISC i
	FURNACE_SEARCH f
	SMITHING p
	SMOKER_CATEGORIES s
	SMOKER_FOOD n
	SMOKER_SEARCH m
	STONECUTTER o
	UNKNOWN r
	itemIcons x
	getCategories (Lnet/minecraft/world/inventory/RecipeBookType;)Ljava/util/List; a
	getIconItems ()Ljava/util/List; a
net/minecraft/client/Screenshot dke
	DATE_FORMAT b
	LOGGER a
	bytes e
	file h
	height g
	outputStream d
	rowHeight c
	width f
	_grab (Ljava/io/File;Ljava/lang/String;IILcom/mojang/blaze3d/pipeline/RenderTarget;Ljava/util/function/Consumer;)V b
	addRegion (Ljava/nio/ByteBuffer;IIII)V a
	close ()Ljava/io/File; b
	getFile (Ljava/io/File;)Ljava/io/File; a
	grab (Ljava/io/File;IILcom/mojang/blaze3d/pipeline/RenderTarget;Ljava/util/function/Consumer;)V a
	grab (Ljava/io/File;Ljava/lang/String;IILcom/mojang/blaze3d/pipeline/RenderTarget;Ljava/util/function/Consumer;)V a
	saveRow ()V a
	takeScreenshot (IILcom/mojang/blaze3d/pipeline/RenderTarget;)Lcom/mojang/blaze3d/platform/NativeImage; a
net/minecraft/client/Session dkf
	difficulty c
	gameMode d
	id e
	isRemoteServer b
	players a
net/minecraft/client/StringSplitter dkg
	widthProvider a
	componentStyleAtWidth (Lnet/minecraft/network/chat/FormattedText;I)Lnet/minecraft/network/chat/Style; a
	componentStyleAtWidth (Lnet/minecraft/util/FormattedCharSequence;I)Lnet/minecraft/network/chat/Style; a
	findLineBreak (Ljava/lang/String;ILnet/minecraft/network/chat/Style;)I f
	formattedHeadByWidth (Ljava/lang/String;ILnet/minecraft/network/chat/Style;)Ljava/lang/String; e
	formattedIndexByWidth (Ljava/lang/String;ILnet/minecraft/network/chat/Style;)I d
	getWordPosition (Ljava/lang/String;IIZ)I a
	headByWidth (Lnet/minecraft/network/chat/FormattedText;ILnet/minecraft/network/chat/Style;)Lnet/minecraft/network/chat/FormattedText; a
	plainHeadByWidth (Ljava/lang/String;ILnet/minecraft/network/chat/Style;)Ljava/lang/String; b
	plainIndexAtWidth (Ljava/lang/String;ILnet/minecraft/network/chat/Style;)I a
	plainTailByWidth (Ljava/lang/String;ILnet/minecraft/network/chat/Style;)Ljava/lang/String; c
	splitLines (Ljava/lang/String;ILnet/minecraft/network/chat/Style;)Ljava/util/List; g
	splitLines (Ljava/lang/String;ILnet/minecraft/network/chat/Style;ZLnet/minecraft/client/StringSplitter$LinePosConsumer;)V a
	splitLines (Lnet/minecraft/network/chat/FormattedText;ILnet/minecraft/network/chat/Style;)Ljava/util/List; b
	splitLines (Lnet/minecraft/network/chat/FormattedText;ILnet/minecraft/network/chat/Style;Ljava/util/function/BiConsumer;)V a
	splitLines (Lnet/minecraft/network/chat/FormattedText;ILnet/minecraft/network/chat/Style;Lnet/minecraft/network/chat/FormattedText;)Ljava/util/List; a
	stringWidth (Ljava/lang/String;)F a
	stringWidth (Lnet/minecraft/network/chat/FormattedText;)F a
	stringWidth (Lnet/minecraft/util/FormattedCharSequence;)F a
net/minecraft/client/StringSplitter$FlatComponents dkg$a
	flatParts b
	parts a
	charAt (I)C a
	getRemainder ()Lnet/minecraft/network/chat/FormattedText; a
	splitAt (IILnet/minecraft/network/chat/Style;)Lnet/minecraft/network/chat/FormattedText; a
net/minecraft/client/StringSplitter$LineBreakFinder dkg$b
	hadNonZeroWidthChar e
	lastSpace g
	lastSpaceStyle h
	lineBreak c
	lineBreakStyle d
	maxWidth b
	nextChar i
	offset j
	width f
	addToOffset (I)V a
	finishIteration (ILnet/minecraft/network/chat/Style;)Z a
	getSplitPosition ()I a
	getSplitStyle ()Lnet/minecraft/network/chat/Style; b
	lineBreakFound ()Z c
net/minecraft/client/StringSplitter$LineComponent dkg$c
	contents a
	style d
	visit (Lnet/minecraft/network/chat/FormattedText$ContentConsumer;)Ljava/util/Optional; a
	visit (Lnet/minecraft/network/chat/FormattedText$StyledContentConsumer;Lnet/minecraft/network/chat/Style;)Ljava/util/Optional; a
net/minecraft/client/StringSplitter$LinePosConsumer dkg$d
net/minecraft/client/StringSplitter$WidthLimitedCharSink dkg$e
	maxWidth b
	position c
	getPosition ()I a
	resetPosition ()V b
net/minecraft/client/StringSplitter$WidthProvider dkg$f
net/minecraft/client/Timer dkh
	lastMs c
	msPerTick d
	partialTick a
	tickDelta b
	advanceTime (J)I a
net/minecraft/client/ToggleKeyMapping dki
	needsToggle a
	setDown (Z)V a
net/minecraft/client/User dkj
	accessToken c
	name a
	type d
	uuid b
	getAccessToken ()Ljava/lang/String; d
	getGameProfile ()Lcom/mojang/authlib/GameProfile; e
	getName ()Ljava/lang/String; c
	getSessionId ()Ljava/lang/String; a
	getType ()Lnet/minecraft/client/User$Type; f
	getUuid ()Ljava/lang/String; b
net/minecraft/client/User$Type dkj$a
	$VALUES e
	BY_NAME c
	LEGACY a
	MOJANG b
	name d
	byName (Ljava/lang/String;)Lnet/minecraft/client/User$Type; a
net/minecraft/client/color/block/BlockColor dkk
net/minecraft/client/color/block/BlockColors dkl
	blockColors a
	coloringStates b
	addColoringState (Lnet/minecraft/world/level/block/state/properties/Property;[Lnet/minecraft/world/level/block/Block;)V a
	addColoringStates (Ljava/util/Set;[Lnet/minecraft/world/level/block/Block;)V a
	createDefault ()Lnet/minecraft/client/color/block/BlockColors; a
	getColor (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockAndTintGetter;Lnet/minecraft/core/BlockPos;I)I a
	getColor (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)I a
	getColoringProperties (Lnet/minecraft/world/level/block/Block;)Ljava/util/Set; a
	register (Lnet/minecraft/client/color/block/BlockColor;[Lnet/minecraft/world/level/block/Block;)V a
net/minecraft/client/color/block/BlockTintCache dkm
	cache b
	latestChunkOnThread a
	lock c
	findOrCreateChunkCache (II)[I b
	getColor (Lnet/minecraft/core/BlockPos;Ljava/util/function/IntSupplier;)I a
	invalidateAll ()V a
	invalidateForChunk (II)V a
net/minecraft/client/color/block/BlockTintCache$LatestCacheInfo dkm$a
	cache c
	x a
	z b
net/minecraft/client/color/item/ItemColor dko
net/minecraft/client/color/item/ItemColors dkp
	itemColors a
	createDefault (Lnet/minecraft/client/color/block/BlockColors;)Lnet/minecraft/client/color/item/ItemColors; a
	getColor (Lnet/minecraft/world/item/ItemStack;I)I a
	register (Lnet/minecraft/client/color/item/ItemColor;[Lnet/minecraft/world/level/ItemLike;)V a
net/minecraft/client/gui/Font dkr
	SHADOW_OFFSET c
	fonts d
	lineHeight a
	random b
	splitter e
	adjustColor (I)I a
	bidirectionalShaping (Ljava/lang/String;)Ljava/lang/String; a
	draw (Lcom/mojang/blaze3d/vertex/PoseStack;Ljava/lang/String;FFI)I b
	draw (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/network/chat/Component;FFI)I b
	draw (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/util/FormattedCharSequence;FFI)I b
	drawInBatch (Ljava/lang/String;FFIZLcom/mojang/math/Matrix4f;Lnet/minecraft/client/renderer/MultiBufferSource;ZII)I a
	drawInBatch (Ljava/lang/String;FFIZLcom/mojang/math/Matrix4f;Lnet/minecraft/client/renderer/MultiBufferSource;ZIIZ)I a
	drawInBatch (Lnet/minecraft/network/chat/Component;FFIZLcom/mojang/math/Matrix4f;Lnet/minecraft/client/renderer/MultiBufferSource;ZII)I a
	drawInBatch (Lnet/minecraft/util/FormattedCharSequence;FFIZLcom/mojang/math/Matrix4f;Lnet/minecraft/client/renderer/MultiBufferSource;ZII)I a
	drawInternal (Ljava/lang/String;FFILcom/mojang/math/Matrix4f;ZZ)I a
	drawInternal (Ljava/lang/String;FFIZLcom/mojang/math/Matrix4f;Lnet/minecraft/client/renderer/MultiBufferSource;ZIIZ)I b
	drawInternal (Lnet/minecraft/util/FormattedCharSequence;FFILcom/mojang/math/Matrix4f;Z)I a
	drawInternal (Lnet/minecraft/util/FormattedCharSequence;FFIZLcom/mojang/math/Matrix4f;Lnet/minecraft/client/renderer/MultiBufferSource;ZII)I b
	drawShadow (Lcom/mojang/blaze3d/vertex/PoseStack;Ljava/lang/String;FFI)I a
	drawShadow (Lcom/mojang/blaze3d/vertex/PoseStack;Ljava/lang/String;FFIZ)I a
	drawShadow (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/network/chat/Component;FFI)I a
	drawShadow (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/util/FormattedCharSequence;FFI)I a
	drawWordWrap (Lnet/minecraft/network/chat/FormattedText;IIII)V a
	getFontSet (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/client/gui/font/FontSet; a
	getSplitter ()Lnet/minecraft/client/StringSplitter; b
	isBidirectional ()Z a
	plainSubstrByWidth (Ljava/lang/String;I)Ljava/lang/String; a
	plainSubstrByWidth (Ljava/lang/String;IZ)Ljava/lang/String; a
	renderChar (Lnet/minecraft/client/gui/font/glyphs/BakedGlyph;ZZFFFLcom/mojang/math/Matrix4f;Lcom/mojang/blaze3d/vertex/VertexConsumer;FFFFI)V a
	renderText (Ljava/lang/String;FFIZLcom/mojang/math/Matrix4f;Lnet/minecraft/client/renderer/MultiBufferSource;ZII)F b
	renderText (Lnet/minecraft/util/FormattedCharSequence;FFIZLcom/mojang/math/Matrix4f;Lnet/minecraft/client/renderer/MultiBufferSource;ZII)F c
	split (Lnet/minecraft/network/chat/FormattedText;I)Ljava/util/List; b
	substrByWidth (Lnet/minecraft/network/chat/FormattedText;I)Lnet/minecraft/network/chat/FormattedText; a
	width (Ljava/lang/String;)I b
	width (Lnet/minecraft/network/chat/FormattedText;)I a
	width (Lnet/minecraft/util/FormattedCharSequence;)I a
	wordWrapHeight (Ljava/lang/String;I)I b
net/minecraft/client/gui/Font$StringRenderOutput dkr$a
	a h
	b g
	bufferSource a
	dimFactor d
	dropShadow c
	effects n
	g f
	packedLightCoords k
	pose i
	r e
	seeThrough j
	x l
	y m
	addEffect (Lnet/minecraft/client/gui/font/glyphs/BakedGlyph$Effect;)V a
	finish (IF)F a
net/minecraft/client/gui/Gui dks
	DEMO_EXPIRED_TEXT e
	PUMPKIN_BLUR_LOCATION d
	VIGNETTE_LOCATION b
	WIDGETS_LOCATION c
	animateOverlayMessageColor p
	bossOverlay w
	chat l
	chatListeners J
	debugScreen s
	displayHealth E
	healthBlinkTime G
	itemRenderer k
	lastHealth D
	lastHealthTime F
	lastToolHighlight r
	minecraft j
	overlayMessageString n
	overlayMessageTime o
	random i
	screenHeight I
	screenWidth H
	spectatorGui u
	subtitle z
	subtitleOverlay t
	tabList v
	tickCount m
	title y
	titleFadeInTime A
	titleFadeOutTime C
	titleStayTime B
	titleTime x
	toolHighlightTimer q
	vignetteBrightness a
	canRenderCrosshairForSpectator (Lnet/minecraft/world/phys/HitResult;)Z a
	clearCache ()V j
	displayScoreboardSidebar (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/world/scores/Objective;)V a
	drawBackdrop (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/gui/Font;III)V a
	getBossOverlay ()Lnet/minecraft/client/gui/components/BossHealthOverlay; i
	getCameraPlayer ()Lnet/minecraft/world/entity/player/Player; k
	getChat ()Lnet/minecraft/client/gui/components/ChatComponent; c
	getFont ()Lnet/minecraft/client/gui/Font; e
	getGuiTicks ()I d
	getPlayerVehicleWithHealth ()Lnet/minecraft/world/entity/LivingEntity; l
	getSpectatorGui ()Lnet/minecraft/client/gui/components/spectator/SpectatorGui; f
	getTabList ()Lnet/minecraft/client/gui/components/PlayerTabOverlay; g
	getVehicleMaxHearts (Lnet/minecraft/world/entity/LivingEntity;)I a
	getVisibleVehicleHeartRows (I)I a
	handleChat (Lnet/minecraft/network/chat/ChatType;Lnet/minecraft/network/chat/Component;Ljava/util/UUID;)V a
	onDisconnected ()V h
	render (Lcom/mojang/blaze3d/vertex/PoseStack;F)V a
	renderCrosshair (Lcom/mojang/blaze3d/vertex/PoseStack;)V d
	renderDemoOverlay (Lcom/mojang/blaze3d/vertex/PoseStack;)V c
	renderEffects (Lcom/mojang/blaze3d/vertex/PoseStack;)V a
	renderExperienceBar (Lcom/mojang/blaze3d/vertex/PoseStack;I)V b
	renderHotbar (FLcom/mojang/blaze3d/vertex/PoseStack;)V a
	renderJumpMeter (Lcom/mojang/blaze3d/vertex/PoseStack;I)V a
	renderPlayerHealth (Lcom/mojang/blaze3d/vertex/PoseStack;)V e
	renderPortalOverlay (F)V a
	renderPumpkin ()V m
	renderSelectedItemName (Lcom/mojang/blaze3d/vertex/PoseStack;)V b
	renderSlot (IIFLnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/item/ItemStack;)V a
	renderVehicleHealth (Lcom/mojang/blaze3d/vertex/PoseStack;)V f
	renderVignette (Lnet/minecraft/world/entity/Entity;)V b
	resetTitleTimes ()V a
	setNowPlaying (Lnet/minecraft/network/chat/Component;)V a
	setOverlayMessage (Lnet/minecraft/network/chat/Component;Z)V a
	setTitles (Lnet/minecraft/network/chat/Component;Lnet/minecraft/network/chat/Component;III)V a
	tick ()V b
	updateVignetteBrightness (Lnet/minecraft/world/entity/Entity;)V a
net/minecraft/client/gui/GuiComponent dkt
	BACKGROUND_LOCATION f
	GUI_ICONS_LOCATION h
	STATS_ICON_LOCATION g
	blitOffset a
	blit (Lcom/mojang/blaze3d/vertex/PoseStack;IIFFIIII)V a
	blit (Lcom/mojang/blaze3d/vertex/PoseStack;IIIFFIIII)V a
	blit (Lcom/mojang/blaze3d/vertex/PoseStack;IIIIFFIIII)V a
	blit (Lcom/mojang/blaze3d/vertex/PoseStack;IIIIII)V b
	blit (Lcom/mojang/blaze3d/vertex/PoseStack;IIIIILnet/minecraft/client/renderer/texture/TextureAtlasSprite;)V a
	blitOutlineBlack (IILjava/util/function/BiConsumer;)V a
	drawCenteredString (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/gui/Font;Ljava/lang/String;III)V a
	drawCenteredString (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/gui/Font;Lnet/minecraft/network/chat/Component;III)V a
	drawCenteredString (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/gui/Font;Lnet/minecraft/util/FormattedCharSequence;III)V a
	drawString (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/gui/Font;Ljava/lang/String;III)V b
	drawString (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/gui/Font;Lnet/minecraft/network/chat/Component;III)V b
	drawString (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/gui/Font;Lnet/minecraft/util/FormattedCharSequence;III)V b
	fill (Lcom/mojang/blaze3d/vertex/PoseStack;IIIII)V a
	fillGradient (Lcom/mojang/blaze3d/vertex/PoseStack;IIIIII)V a
	fillGradient (Lcom/mojang/math/Matrix4f;Lcom/mojang/blaze3d/vertex/BufferBuilder;IIIIIII)V a
	getBlitOffset ()I v
	hLine (Lcom/mojang/blaze3d/vertex/PoseStack;IIII)V a
	innerBlit (Lcom/mojang/blaze3d/vertex/PoseStack;IIIIIIIFFII)V a
	innerBlit (Lcom/mojang/math/Matrix4f;IIIIIFFFF)V a
	innerFill (Lcom/mojang/math/Matrix4f;IIIII)V a
	setBlitOffset (I)V d
	vLine (Lcom/mojang/blaze3d/vertex/PoseStack;IIII)V b
net/minecraft/client/gui/MapRenderer dku
	MAP_ICONS b
	MAP_ICONS_LOCATION a
	maps d
	textureManager c
	getData (Lnet/minecraft/client/gui/MapRenderer$MapInstance;)Lnet/minecraft/world/level/saveddata/maps/MapItemSavedData; a
	getMapInstance (Lnet/minecraft/world/level/saveddata/maps/MapItemSavedData;)Lnet/minecraft/client/gui/MapRenderer$MapInstance; b
	getMapInstanceIfExists (Ljava/lang/String;)Lnet/minecraft/client/gui/MapRenderer$MapInstance; a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;Lnet/minecraft/world/level/saveddata/maps/MapItemSavedData;ZI)V a
	resetData ()V a
	update (Lnet/minecraft/world/level/saveddata/maps/MapItemSavedData;)V a
net/minecraft/client/gui/MapRenderer$MapInstance dku$a
	data b
	renderType d
	texture c
	draw (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;ZI)V a
	updateTexture ()V a
net/minecraft/client/gui/chat/ChatListener dkv
	handle (Lnet/minecraft/network/chat/ChatType;Lnet/minecraft/network/chat/Component;Ljava/util/UUID;)V a
net/minecraft/client/gui/chat/NarratorChatListener dkw
	INSTANCE b
	LOGGER c
	NO_TITLE a
	narrator d
	clear ()V b
	destroy ()V c
	doSay (ZLjava/lang/String;)V a
	getStatus ()Lnet/minecraft/client/NarratorStatus; d
	handle (Lnet/minecraft/network/chat/ChatType;Lnet/minecraft/network/chat/Component;Ljava/util/UUID;)V a
	isActive ()Z a
	sayNow (Ljava/lang/String;)V a
	updateNarratorStatus (Lnet/minecraft/client/NarratorStatus;)V a
net/minecraft/client/gui/chat/OverlayChatListener dkx
	minecraft a
	handle (Lnet/minecraft/network/chat/ChatType;Lnet/minecraft/network/chat/Component;Ljava/util/UUID;)V a
net/minecraft/client/gui/chat/StandardChatListener dky
	minecraft a
	handle (Lnet/minecraft/network/chat/ChatType;Lnet/minecraft/network/chat/Component;Ljava/util/UUID;)V a
net/minecraft/client/gui/components/AbstractButton dla
	keyPressed (III)Z a
	onClick (DD)V a
	onPress ()V b
net/minecraft/client/gui/components/AbstractOptionSliderButton dlb
	options a
net/minecraft/client/gui/components/AbstractSelectionList dlc
	centerListVertically m
	children a
	headerHeight n
	height e
	itemHeight c
	minecraft b
	renderHeader q
	renderSelection p
	scrollAmount o
	scrolling r
	selected s
	width d
	x0 l
	x1 k
	y0 i
	y1 j
	addEntry (Lnet/minecraft/client/gui/components/AbstractSelectionList$Entry;)I b
	bindEntryToSelf (Lnet/minecraft/client/gui/components/AbstractSelectionList$Entry;)V f
	centerScrollOn (Lnet/minecraft/client/gui/components/AbstractSelectionList$Entry;)V c
	children ()Ljava/util/List; av_
	clearEntries ()V k
	clickedHeader (II)V a
	ensureVisible (Lnet/minecraft/client/gui/components/AbstractSelectionList$Entry;)V d
	getEntry (I)Lnet/minecraft/client/gui/components/AbstractSelectionList$Entry; e
	getEntryAtPosition (DD)Lnet/minecraft/client/gui/components/AbstractSelectionList$Entry; a
	getFocused ()Lnet/minecraft/client/gui/components/AbstractSelectionList$Entry; i
	getFocused ()Lnet/minecraft/client/gui/components/events/GuiEventListener; aw_
	getItemCount ()I l
	getMaxPosition ()I c
	getMaxScroll ()I f
	getRowBottom (I)I b
	getRowLeft ()I p
	getRowTop (I)I h
	getRowWidth ()I d
	getScrollAmount ()D m
	getScrollBottom ()I n
	getScrollbarPosition ()I e
	getSelected ()Lnet/minecraft/client/gui/components/AbstractSelectionList$Entry; h
	isFocused ()Z b
	isMouseOver (DD)Z b
	isSelectedItem (I)Z f
	keyPressed (III)Z a
	mouseClicked (DDI)Z a
	mouseDragged (DDIDD)Z a
	mouseReleased (DDI)Z c
	mouseScrolled (DDD)Z a
	moveSelection (Lnet/minecraft/client/gui/components/AbstractSelectionList$SelectionDirection;)V a
	moveSelection (Lnet/minecraft/client/gui/components/AbstractSelectionList$SelectionDirection;Ljava/util/function/Predicate;)V a
	refreshSelection ()V o
	remove (I)Lnet/minecraft/client/gui/components/AbstractSelectionList$Entry; i
	removeEntry (Lnet/minecraft/client/gui/components/AbstractSelectionList$Entry;)Z e
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V a
	renderBackground (Lcom/mojang/blaze3d/vertex/PoseStack;)V a
	renderDecorations (Lcom/mojang/blaze3d/vertex/PoseStack;II)V a
	renderHeader (Lcom/mojang/blaze3d/vertex/PoseStack;IILcom/mojang/blaze3d/vertex/Tesselator;)V a
	renderList (Lcom/mojang/blaze3d/vertex/PoseStack;IIIIF)V a
	replaceEntries (Ljava/util/Collection;)V a
	scroll (I)V a
	setLeftPos (I)V g
	setRenderHeader (ZI)V a
	setRenderSelection (Z)V a
	setScrollAmount (D)V a
	setSelected (Lnet/minecraft/client/gui/components/AbstractSelectionList$Entry;)V a
	updateScrollingState (DDI)V b
	updateSize (IIII)V a
net/minecraft/client/gui/components/AbstractSelectionList$Entry dlc$a
	list a
	isMouseOver (DD)Z b
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIIIIIIZF)V a
net/minecraft/client/gui/components/AbstractSelectionList$SelectionDirection dlc$b
	$VALUES c
	DOWN b
	UP a
net/minecraft/client/gui/components/AbstractSelectionList$TrackedList dlc$c
	delegate b
	add (ILnet/minecraft/client/gui/components/AbstractSelectionList$Entry;)V b
	get (I)Lnet/minecraft/client/gui/components/AbstractSelectionList$Entry; a
	remove (I)Lnet/minecraft/client/gui/components/AbstractSelectionList$Entry; b
	set (ILnet/minecraft/client/gui/components/AbstractSelectionList$Entry;)Lnet/minecraft/client/gui/components/AbstractSelectionList$Entry; a
net/minecraft/client/gui/components/AbstractSliderButton dld
	value b
	applyValue ()V a
	createNarrationMessage ()Lnet/minecraft/network/chat/MutableComponent; c
	getYImage (Z)I a
	keyPressed (III)Z a
	onClick (DD)V a
	onDrag (DDDD)V a
	onRelease (DD)V a_
	playDownSound (Lnet/minecraft/client/sounds/SoundManager;)V a
	renderBg (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/Minecraft;II)V a
	setValue (D)V b
	setValueFromMouse (D)V a
	updateMessage ()V b
net/minecraft/client/gui/components/AbstractWidget dle
	WIDGETS_LOCATION i
	active o
	alpha q
	focused c
	height k
	isHovered n
	message a
	nextNarration r
	visible p
	wasHovered b
	width j
	x l
	y m
	changeFocus (Z)Z c_
	clicked (DD)Z c
	createNarrationMessage ()Lnet/minecraft/network/chat/MutableComponent; c
	getHeight ()I e
	getMessage ()Lnet/minecraft/network/chat/Component; i
	getWidth ()I h
	getYImage (Z)I a
	isFocused ()Z j
	isHovered ()Z g
	isMouseOver (DD)Z b
	isValidClickButton (I)Z a
	mouseClicked (DDI)Z a
	mouseDragged (DDIDD)Z a
	mouseReleased (DDI)Z c
	narrate ()V f
	onClick (DD)V a
	onDrag (DDDD)V a
	onFocusedChanged (Z)V c
	onRelease (DD)V a_
	playDownSound (Lnet/minecraft/client/sounds/SoundManager;)V a
	queueNarration (I)V c
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V a
	renderBg (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/Minecraft;II)V a
	renderButton (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V b
	renderToolTip (Lcom/mojang/blaze3d/vertex/PoseStack;II)V a
	setAlpha (F)V a
	setFocused (Z)V d
	setMessage (Lnet/minecraft/network/chat/Component;)V a
	setWidth (I)V b
net/minecraft/client/gui/components/BossHealthOverlay dlf
	GUI_BARS_LOCATION a
	events c
	minecraft b
	drawBar (Lcom/mojang/blaze3d/vertex/PoseStack;IILnet/minecraft/world/BossEvent;)V a
	hasBoss ()Z b
	render (Lcom/mojang/blaze3d/vertex/PoseStack;)V a
	reset ()V a
	shouldCreateWorldFog ()Z e
	shouldDarkenScreen ()Z d
	shouldPlayMusic ()Z c
	update (Lnet/minecraft/network/protocol/game/ClientboundBossEventPacket;)V a
net/minecraft/client/gui/components/Button dlg
	NO_TOOLTIP s
	onPress t
	onTooltip u
	onPress ()V b
	renderButton (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V b
	renderToolTip (Lcom/mojang/blaze3d/vertex/PoseStack;II)V a
net/minecraft/client/gui/components/Button$OnPress dlg$a
net/minecraft/client/gui/components/Button$OnTooltip dlg$b
net/minecraft/client/gui/components/ChatComponent dlh
	LOGGER a
	allMessages d
	chatQueue i
	chatScrollbarPos j
	lastMessage l
	minecraft b
	newMessageSinceScroll k
	recentChat c
	trimmedMessages e
	addMessage (Lnet/minecraft/network/chat/Component;)V a
	addMessage (Lnet/minecraft/network/chat/Component;I)V a
	addMessage (Lnet/minecraft/network/chat/Component;IIZ)V a
	addRecentChat (Ljava/lang/String;)V a
	clearMessages (Z)V a
	enqueueMessage (Lnet/minecraft/network/chat/Component;)V b
	getChatRateMillis ()J j
	getClickedComponentStyleAt (DD)Lnet/minecraft/network/chat/Style; b
	getHeight ()I e
	getHeight (D)I c
	getLinesPerPage ()I g
	getRecentChat ()Ljava/util/List; b
	getScale ()D f
	getTimeFactor (I)D a
	getWidth ()I d
	getWidth (D)I b
	handleChatQueueClicked (DD)Z a
	isChatFocused ()Z i
	isChatHidden ()Z h
	processPendingMessages ()V k
	removeById (I)V b
	render (Lcom/mojang/blaze3d/vertex/PoseStack;I)V a
	rescaleChat ()V a
	resetChatScroll ()V c
	scrollChat (D)V a
net/minecraft/client/gui/components/Checkbox dli
	TEXTURE a
	selected b
	showLabel c
	onPress ()V b
	renderButton (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V b
	selected ()Z a
net/minecraft/client/gui/components/CommandSuggestions dlj
	ARGUMENT_STYLES d
	LITERAL_STYLE c
	UNPARSED_STYLE b
	WHITESPACE_PATTERN a
	allowSuggestions u
	anchorToBottom m
	commandUsage o
	commandUsagePosition p
	commandUsageWidth q
	commandsOnly i
	currentParse r
	fillColor n
	font h
	input g
	keepSuggestions v
	lineStartOffset k
	minecraft e
	onlyShowIfCursorPastError j
	pendingSuggestions s
	screen f
	suggestionLineLimit l
	suggestions t
	calculateSuggestionSuffix (Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; b
	fillNodeUsage (Lnet/minecraft/ChatFormatting;)V a
	formatChat (Ljava/lang/String;I)Lnet/minecraft/util/FormattedCharSequence; a
	formatText (Lcom/mojang/brigadier/ParseResults;Ljava/lang/String;I)Lnet/minecraft/util/FormattedCharSequence; a
	getExceptionMessage (Lcom/mojang/brigadier/exceptions/CommandSyntaxException;)Lnet/minecraft/util/FormattedCharSequence; a
	getLastWordIndex (Ljava/lang/String;)I a
	getNarrationMessage ()Ljava/lang/String; b
	keyPressed (III)Z a
	mouseClicked (DDI)Z a
	mouseScrolled (D)Z a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;II)V a
	setAllowSuggestions (Z)V a
	showSuggestions (Z)V b
	sortSuggestions (Lcom/mojang/brigadier/suggestion/Suggestions;)Ljava/util/List; a
	updateCommandInfo ()V a
	updateUsageInfo ()V c
net/minecraft/client/gui/components/CommandSuggestions$SuggestionsList dlj$a
	current f
	lastMouse g
	lastNarratedEntry i
	offset e
	originalContents c
	rect b
	suggestionList d
	tabCycles h
	cycle (I)V a
	getNarrationMessage ()Ljava/lang/String; c
	hide ()V b
	keyPressed (III)Z b
	mouseClicked (III)Z a
	mouseScrolled (D)Z a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;II)V a
	select (I)V b
	useSuggestion ()V a
net/minecraft/client/gui/components/ComponentRenderUtils dlk
	INDENT a
	stripColor (Ljava/lang/String;)Ljava/lang/String; a
	wrapComponents (Lnet/minecraft/network/chat/FormattedText;ILnet/minecraft/client/gui/Font;)Ljava/util/List; a
net/minecraft/client/gui/components/ContainerObjectSelectionList dll
	changeFocus (Z)Z c_
	isSelectedItem (I)Z f
net/minecraft/client/gui/components/ContainerObjectSelectionList$Entry dll$a
	dragging b
	focused a
	getFocused ()Lnet/minecraft/client/gui/components/events/GuiEventListener; aw_
	isDragging ()Z ax_
	setDragging (Z)V b_
	setFocused (Lnet/minecraft/client/gui/components/events/GuiEventListener;)V a
net/minecraft/client/gui/components/DebugScreenOverlay dlm
	HEIGHTMAP_NAMES a
	block d
	clientChunk j
	font c
	lastPos i
	liquid e
	minecraft b
	serverChunk k
	bytesToMegabytes (J)J a
	clearChunkCache ()V a
	colorLerp (IIF)I a
	drawChart (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/util/FrameTimer;IIZ)V a
	drawGameInformation (Lcom/mojang/blaze3d/vertex/PoseStack;)V b
	drawSystemInformation (Lcom/mojang/blaze3d/vertex/PoseStack;)V c
	getClientChunk ()Lnet/minecraft/world/level/chunk/LevelChunk; h
	getGameInformation ()Ljava/util/List; b
	getLevel ()Lnet/minecraft/world/level/Level; f
	getPropertyValueString (Ljava/util/Map$Entry;)Ljava/lang/String; a
	getSampleColor (IIII)I a
	getServerChunk ()Lnet/minecraft/world/level/chunk/LevelChunk; g
	getServerChunkStats ()Ljava/lang/String; e
	getServerLevel ()Lnet/minecraft/server/level/ServerLevel; d
	getSystemInformation ()Ljava/util/List; c
	render (Lcom/mojang/blaze3d/vertex/PoseStack;)V a
net/minecraft/client/gui/components/EditBox dln
	bordered e
	canLoseFocus s
	cursorPos w
	displayPos v
	filter C
	font a
	formatter D
	frame d
	highlightPos x
	isEditable t
	maxLength c
	responder B
	shiftPressed u
	suggestion A
	textColor y
	textColorUneditable z
	value b
	canConsumeInput ()Z m
	changeFocus (Z)Z c_
	charTyped (CI)Z a
	createNarrationMessage ()Lnet/minecraft/network/chat/MutableComponent; c
	deleteChars (I)V f
	deleteText (I)V q
	deleteWords (I)V e
	getCursorPos (I)I r
	getCursorPosition ()I n
	getHighlighted ()Ljava/lang/String; d
	getInnerWidth ()I o
	getMaxLength ()I q
	getScreenX (I)I o
	getValue ()Ljava/lang/String; b
	getWordPosition (I)I g
	getWordPosition (II)I a
	getWordPosition (IIZ)I a
	insertText (Ljava/lang/String;)V b
	isBordered ()Z r
	isEditable ()Z s
	isMouseOver (DD)Z b
	isVisible ()Z p
	keyPressed (III)Z a
	mouseClicked (DDI)Z a
	moveCursor (I)V h
	moveCursorTo (I)V i
	moveCursorToEnd ()V l
	moveCursorToStart ()V k
	onFocusedChanged (Z)V c
	onValueChange (Ljava/lang/String;)V d
	renderButton (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V b
	renderHighlight (IIII)V a
	setBordered (Z)V f
	setCanLoseFocus (Z)V h
	setCursorPosition (I)V j
	setEditable (Z)V g
	setFilter (Ljava/util/function/Predicate;)V a
	setFocus (Z)V e
	setFormatter (Ljava/util/function/BiFunction;)V a
	setHighlightPos (I)V n
	setMaxLength (I)V k
	setResponder (Ljava/util/function/Consumer;)V a
	setSuggestion (Ljava/lang/String;)V c
	setTextColor (I)V l
	setTextColorUneditable (I)V m
	setValue (Ljava/lang/String;)V a
	setVisible (Z)V i
	setX (I)V p
	tick ()V a
net/minecraft/client/gui/components/ImageButton dlo
	resourceLocation a
	textureHeight v
	textureWidth e
	xTexStart b
	yDiffTex d
	yTexStart c
	renderButton (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V b
	setPosition (II)V a
net/minecraft/client/gui/components/LerpingBossEvent dlp
	setTime i
	targetPercent h
	getPercent ()F k
	setPercent (F)V a
	update (Lnet/minecraft/network/protocol/game/ClientboundBossEventPacket;)V a
net/minecraft/client/gui/components/LockIconButton dlq
	locked a
	createNarrationMessage ()Lnet/minecraft/network/chat/MutableComponent; c
	isLocked ()Z a
	renderButton (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V b
	setLocked (Z)V e
net/minecraft/client/gui/components/LockIconButton$Icon dlq$a
	$VALUES i
	LOCKED a
	LOCKED_DISABLED c
	LOCKED_HOVER b
	UNLOCKED d
	UNLOCKED_DISABLED f
	UNLOCKED_HOVER e
	x g
	y h
	getX ()I a
	getY ()I b
net/minecraft/client/gui/components/MultiLineLabel dlr
	EMPTY a
	create (Lnet/minecraft/client/gui/Font;Ljava/util/List;)Lnet/minecraft/client/gui/components/MultiLineLabel; a
	create (Lnet/minecraft/client/gui/Font;Lnet/minecraft/network/chat/FormattedText;I)Lnet/minecraft/client/gui/components/MultiLineLabel; a
	create (Lnet/minecraft/client/gui/Font;Lnet/minecraft/network/chat/FormattedText;II)Lnet/minecraft/client/gui/components/MultiLineLabel; a
	create (Lnet/minecraft/client/gui/Font;[Lnet/minecraft/network/chat/Component;)Lnet/minecraft/client/gui/components/MultiLineLabel; a
	createFixed (Lnet/minecraft/client/gui/Font;Ljava/util/List;)Lnet/minecraft/client/gui/components/MultiLineLabel; b
	getLineCount ()I a
	renderCentered (Lcom/mojang/blaze3d/vertex/PoseStack;II)I a
	renderCentered (Lcom/mojang/blaze3d/vertex/PoseStack;IIII)I a
	renderLeftAligned (Lcom/mojang/blaze3d/vertex/PoseStack;IIII)I b
	renderLeftAlignedNoShadow (Lcom/mojang/blaze3d/vertex/PoseStack;IIII)I c
net/minecraft/client/gui/components/MultiLineLabel$TextWithWidth dlr$a
	text a
	width b
net/minecraft/client/gui/components/ObjectSelectionList dls
	inFocus a
	changeFocus (Z)Z c_
net/minecraft/client/gui/components/ObjectSelectionList$Entry dls$a
	changeFocus (Z)Z c_
net/minecraft/client/gui/components/OptionButton dlt
	option a
	getOption ()Lnet/minecraft/client/Option; a
	getTooltip ()Ljava/util/Optional; d
net/minecraft/client/gui/components/OptionsList dlu
	addBig (Lnet/minecraft/client/Option;)I a
	addSmall (Lnet/minecraft/client/Option;Lnet/minecraft/client/Option;)V a
	addSmall ([Lnet/minecraft/client/Option;)V a
	findOption (Lnet/minecraft/client/Option;)Lnet/minecraft/client/gui/components/AbstractWidget; b
	getMouseOver (DD)Ljava/util/Optional; c
	getRowWidth ()I d
	getScrollbarPosition ()I e
net/minecraft/client/gui/components/OptionsList$Entry dlu$a
	children a
	big (Lnet/minecraft/client/Options;ILnet/minecraft/client/Option;)Lnet/minecraft/client/gui/components/OptionsList$Entry; a
	children ()Ljava/util/List; av_
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIIIIIIZF)V a
	small (Lnet/minecraft/client/Options;ILnet/minecraft/client/Option;Lnet/minecraft/client/Option;)Lnet/minecraft/client/gui/components/OptionsList$Entry; a
net/minecraft/client/gui/components/PlayerTabOverlay dlv
	PLAYER_ORDERING a
	footer d
	gui c
	header e
	minecraft b
	visibilityId i
	visible j
	decorateName (Lnet/minecraft/client/multiplayer/PlayerInfo;Lnet/minecraft/network/chat/MutableComponent;)Lnet/minecraft/network/chat/Component; a
	getNameForDisplay (Lnet/minecraft/client/multiplayer/PlayerInfo;)Lnet/minecraft/network/chat/Component; a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;ILnet/minecraft/world/scores/Scoreboard;Lnet/minecraft/world/scores/Objective;)V a
	renderPingIcon (Lcom/mojang/blaze3d/vertex/PoseStack;IIILnet/minecraft/client/multiplayer/PlayerInfo;)V a
	renderTablistScore (Lnet/minecraft/world/scores/Objective;ILjava/lang/String;IILnet/minecraft/client/multiplayer/PlayerInfo;Lcom/mojang/blaze3d/vertex/PoseStack;)V a
	reset ()V a
	setFooter (Lnet/minecraft/network/chat/Component;)V a
	setHeader (Lnet/minecraft/network/chat/Component;)V b
	setVisible (Z)V a
net/minecraft/client/gui/components/PlayerTabOverlay$PlayerInfoComparator dlv$a
	compare (Lnet/minecraft/client/multiplayer/PlayerInfo;Lnet/minecraft/client/multiplayer/PlayerInfo;)I a
net/minecraft/client/gui/components/SliderButton dlw
	option c
	applyValue ()V a
	getTooltip ()Ljava/util/Optional; d
	updateMessage ()V b
net/minecraft/client/gui/components/StateSwitchingButton dlx
	isStateTriggered b
	resourceLocation a
	xDiffTex e
	xTexStart c
	yDiffTex s
	yTexStart d
	initTextureValues (IIIILnet/minecraft/resources/ResourceLocation;)V a
	isStateTriggered ()Z a
	renderButton (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V b
	setPosition (II)V a
	setStateTriggered (Z)V e
net/minecraft/client/gui/components/SubtitleOverlay dly
	isListening c
	minecraft a
	subtitles b
	onPlaySound (Lnet/minecraft/client/resources/sounds/SoundInstance;Lnet/minecraft/client/sounds/WeighedSoundEvents;)V a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;)V a
net/minecraft/client/gui/components/SubtitleOverlay$Subtitle dly$a
	location d
	text b
	time c
	getLocation ()Lnet/minecraft/world/phys/Vec3; c
	getText ()Lnet/minecraft/network/chat/Component; a
	getTime ()J b
	refresh (Lnet/minecraft/world/phys/Vec3;)V a
net/minecraft/client/gui/components/TickableWidget dlz
	tick ()V d
net/minecraft/client/gui/components/TooltipAccessor dma
	getTooltip ()Ljava/util/Optional; d
net/minecraft/client/gui/components/VolumeSlider dmb
	source c
	applyValue ()V a
	updateMessage ()V b
net/minecraft/client/gui/components/Widget dmc
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V a
net/minecraft/client/gui/components/events/AbstractContainerEventHandler dmd
	focused a
	isDragging b
	getFocused ()Lnet/minecraft/client/gui/components/events/GuiEventListener; aw_
	isDragging ()Z ax_
	setDragging (Z)V b_
	setFocused (Lnet/minecraft/client/gui/components/events/GuiEventListener;)V a
net/minecraft/client/gui/components/events/ContainerEventHandler dme
	changeFocus (Z)Z c_
	charTyped (CI)Z a
	children ()Ljava/util/List; av_
	getChildAt (DD)Ljava/util/Optional; d
	getFocused ()Lnet/minecraft/client/gui/components/events/GuiEventListener; aw_
	isDragging ()Z ax_
	keyPressed (III)Z a
	keyReleased (III)Z b
	magicalSpecialHackyFocus (Lnet/minecraft/client/gui/components/events/GuiEventListener;)V c
	mouseClicked (DDI)Z a
	mouseDragged (DDIDD)Z a
	mouseReleased (DDI)Z c
	mouseScrolled (DDD)Z a
	setDragging (Z)V b_
	setFocused (Lnet/minecraft/client/gui/components/events/GuiEventListener;)V a
	setInitialFocus (Lnet/minecraft/client/gui/components/events/GuiEventListener;)V b
net/minecraft/client/gui/components/events/GuiEventListener dmf
	changeFocus (Z)Z c_
	charTyped (CI)Z a
	isMouseOver (DD)Z b
	keyPressed (III)Z a
	keyReleased (III)Z b
	mouseClicked (DDI)Z a
	mouseDragged (DDIDD)Z a
	mouseMoved (DD)V e
	mouseReleased (DDI)Z c
	mouseScrolled (DDD)Z a
net/minecraft/client/gui/components/spectator/SpectatorGui dmi
	SPECTATOR_LOCATION a
	WIDGETS_LOCATION b
	lastSelectionTime d
	menu e
	minecraft c
	getHotbarAlpha ()F c
	isMenuActive ()Z a
	onHotbarSelected (I)V a
	onMouseMiddleClick ()V b
	onMouseScrolled (D)V a
	onSpectatorMenuClosed (Lnet/minecraft/client/gui/spectator/SpectatorMenu;)V a
	renderHotbar (Lcom/mojang/blaze3d/vertex/PoseStack;F)V a
	renderPage (Lcom/mojang/blaze3d/vertex/PoseStack;FIILnet/minecraft/client/gui/spectator/categories/SpectatorPage;)V a
	renderSlot (Lcom/mojang/blaze3d/vertex/PoseStack;IIFFLnet/minecraft/client/gui/spectator/SpectatorMenuItem;)V a
	renderTooltip (Lcom/mojang/blaze3d/vertex/PoseStack;)V a
net/minecraft/client/gui/components/toasts/AdvancementToast dmk
	advancement c
	playedSound d
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/gui/components/toasts/ToastComponent;J)Lnet/minecraft/client/gui/components/toasts/Toast$Visibility; a
net/minecraft/client/gui/components/toasts/RecipeToast dml
	DESCRIPTION_TEXT d
	TITLE_TEXT c
	changed g
	lastChanged f
	recipes e
	addItem (Lnet/minecraft/world/item/crafting/Recipe;)V a
	addOrUpdate (Lnet/minecraft/client/gui/components/toasts/ToastComponent;Lnet/minecraft/world/item/crafting/Recipe;)V a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/gui/components/toasts/ToastComponent;J)Lnet/minecraft/client/gui/components/toasts/Toast$Visibility; a
net/minecraft/client/gui/components/toasts/SystemToast dmm
	changed g
	id c
	lastChanged f
	messageLines e
	title d
	width h
	add (Lnet/minecraft/client/gui/components/toasts/ToastComponent;Lnet/minecraft/client/gui/components/toasts/SystemToast$SystemToastIds;Lnet/minecraft/network/chat/Component;Lnet/minecraft/network/chat/Component;)V a
	addOrUpdate (Lnet/minecraft/client/gui/components/toasts/ToastComponent;Lnet/minecraft/client/gui/components/toasts/SystemToast$SystemToastIds;Lnet/minecraft/network/chat/Component;Lnet/minecraft/network/chat/Component;)V b
	getToken ()Ljava/lang/Object; c
	getToken ()Lnet/minecraft/client/gui/components/toasts/SystemToast$SystemToastIds; b
	multiline (Lnet/minecraft/client/Minecraft;Lnet/minecraft/client/gui/components/toasts/SystemToast$SystemToastIds;Lnet/minecraft/network/chat/Component;Lnet/minecraft/network/chat/Component;)Lnet/minecraft/client/gui/components/toasts/SystemToast; a
	nullToEmpty (Lnet/minecraft/network/chat/Component;)Lcom/google/common/collect/ImmutableList; a
	onPackCopyFailure (Lnet/minecraft/client/Minecraft;Ljava/lang/String;)V c
	onWorldAccessFailure (Lnet/minecraft/client/Minecraft;Ljava/lang/String;)V a
	onWorldDeleteFailure (Lnet/minecraft/client/Minecraft;Ljava/lang/String;)V b
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/gui/components/toasts/ToastComponent;J)Lnet/minecraft/client/gui/components/toasts/Toast$Visibility; a
	renderBackgroundRow (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/gui/components/toasts/ToastComponent;IIII)V a
	reset (Lnet/minecraft/network/chat/Component;Lnet/minecraft/network/chat/Component;)V a
	width ()I a
net/minecraft/client/gui/components/toasts/SystemToast$SystemToastIds dmm$a
	$VALUES h
	NARRATOR_TOGGLE b
	PACK_COPY_FAILURE g
	PACK_LOAD_FAILURE e
	TUTORIAL_HINT a
	WORLD_ACCESS_FAILURE f
	WORLD_BACKUP c
	WORLD_GEN_SETTINGS_TRANSFER d
net/minecraft/client/gui/components/toasts/Toast dmn
	NO_TOKEN b
	TEXTURE a
	getToken ()Ljava/lang/Object; c
	height ()I d
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/gui/components/toasts/ToastComponent;J)Lnet/minecraft/client/gui/components/toasts/Toast$Visibility; a
	width ()I a
net/minecraft/client/gui/components/toasts/Toast$Visibility dmn$a
	$VALUES d
	HIDE b
	SHOW a
	soundEvent c
	playSound (Lnet/minecraft/client/sounds/SoundManager;)V a
net/minecraft/client/gui/components/toasts/ToastComponent dmo
	minecraft a
	queued c
	visible b
	addToast (Lnet/minecraft/client/gui/components/toasts/Toast;)V a
	clear ()V a
	getMinecraft ()Lnet/minecraft/client/Minecraft; b
	getToast (Ljava/lang/Class;Ljava/lang/Object;)Lnet/minecraft/client/gui/components/toasts/Toast; a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;)V a
net/minecraft/client/gui/components/toasts/ToastComponent$ToastInstance dmo$a
	animationTime c
	toast b
	visibility e
	visibleTime d
	getToast ()Lnet/minecraft/client/gui/components/toasts/Toast; a
	getVisibility (J)F a
	render (IILcom/mojang/blaze3d/vertex/PoseStack;)Z a
net/minecraft/client/gui/components/toasts/TutorialToast dmp
	icon c
	lastProgress h
	lastProgressTime g
	message e
	progress i
	progressable j
	title d
	visibility f
	hide ()V b
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/gui/components/toasts/ToastComponent;J)Lnet/minecraft/client/gui/components/toasts/Toast$Visibility; a
	updateProgress (F)V a
net/minecraft/client/gui/components/toasts/TutorialToast$Icons dmp$a
	$VALUES h
	MOUSE b
	MOVEMENT_KEYS a
	RECIPE_BOOK d
	TREE c
	WOODEN_PLANKS e
	x f
	y g
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/gui/GuiComponent;II)V a
net/minecraft/client/gui/font/AllMissingGlyphProvider dmr
	getGlyph (I)Lcom/mojang/blaze3d/font/RawGlyph; a
	getSupportedGlyphs ()Lit/unimi/dsi/fastutil/ints/IntSet; a
net/minecraft/client/gui/font/FontManager dms
	LOGGER b
	MISSING_FONT a
	fontSets d
	missingFontSet c
	reloadListener g
	renames f
	textureManager e
	createFont ()Lnet/minecraft/client/gui/Font; a
	getReloadListener ()Lnet/minecraft/server/packs/resources/PreparableReloadListener; b
	setRenames (Ljava/util/Map;)V a
net/minecraft/client/gui/font/FontSet dmt
	RANDOM c
	SPACE_GLYPH a
	SPACE_INFO b
	glyphInfos j
	glyphs i
	glyphsByWidth k
	missingGlyph f
	name e
	providers h
	textureManager d
	textures l
	whiteGlyph g
	closeProviders ()V b
	closeTextures ()V c
	getGlyph (I)Lnet/minecraft/client/gui/font/glyphs/BakedGlyph; b
	getGlyphInfo (I)Lcom/mojang/blaze3d/font/GlyphInfo; a
	getRandomGlyph (Lcom/mojang/blaze3d/font/GlyphInfo;)Lnet/minecraft/client/gui/font/glyphs/BakedGlyph; a
	getRaw (I)Lcom/mojang/blaze3d/font/RawGlyph; c
	reload (Ljava/util/List;)V a
	stitch (Lcom/mojang/blaze3d/font/RawGlyph;)Lnet/minecraft/client/gui/font/glyphs/BakedGlyph; a
	whiteGlyph ()Lnet/minecraft/client/gui/font/glyphs/BakedGlyph; a
net/minecraft/client/gui/font/FontTexture dmu
	colored g
	name d
	normalType e
	root h
	seeThroughType f
	add (Lcom/mojang/blaze3d/font/RawGlyph;)Lnet/minecraft/client/gui/font/glyphs/BakedGlyph; a
	getName ()Lnet/minecraft/resources/ResourceLocation; a
	load (Lnet/minecraft/server/packs/resources/ResourceManager;)V a
net/minecraft/client/gui/font/FontTexture$Node dmu$a
	height d
	left e
	occupied g
	right f
	width c
	x a
	y b
	insert (Lcom/mojang/blaze3d/font/RawGlyph;)Lnet/minecraft/client/gui/font/FontTexture$Node; a
net/minecraft/client/gui/font/TextFieldHelper dmv
	cursorPos f
	getClipboardFn c
	getMessageFn a
	selectionPos g
	setClipboardFn d
	setMessageFn b
	stringValidator e
	charTyped (C)Z a
	clampToMsgLength (I)I g
	copy ()V c
	createClipboardGetter (Lnet/minecraft/client/Minecraft;)Ljava/util/function/Supplier; a
	createClipboardSetter (Lnet/minecraft/client/Minecraft;)Ljava/util/function/Consumer; c
	cut ()V a
	deleteSelection (Ljava/lang/String;)Ljava/lang/String; c
	getClipboardContents (Lnet/minecraft/client/Minecraft;)Ljava/lang/String; b
	getCursorPos ()I g
	getSelected (Ljava/lang/String;)Ljava/lang/String; b
	getSelectionPos ()I h
	insertText (Ljava/lang/String;)V a
	insertText (Ljava/lang/String;Ljava/lang/String;)V a
	isSelecting ()Z i
	keyPressed (I)Z a
	moveByChars (I)V b
	moveByChars (IZ)V a
	moveByWords (I)V c
	moveByWords (IZ)V b
	paste ()V b
	removeCharsFromCursor (I)V d
	resetSelectionIfNeeded (Z)V a
	selectAll ()V d
	setClipboardContents (Lnet/minecraft/client/Minecraft;Ljava/lang/String;)V a
	setCursorPos (I)V e
	setCursorPos (IZ)V c
	setCursorToEnd ()V f
	setCursorToEnd (Z)V c
	setCursorToStart ()V e
	setCursorToStart (Z)V b
	setSelectionPos (I)V f
	setSelectionRange (II)V a
net/minecraft/client/gui/font/glyphs/BakedGlyph dmw
	down j
	left g
	normalType a
	right h
	seeThroughType b
	u0 c
	u1 d
	up i
	v0 e
	v1 f
	render (ZFFLcom/mojang/math/Matrix4f;Lcom/mojang/blaze3d/vertex/VertexConsumer;FFFFI)V a
	renderEffect (Lnet/minecraft/client/gui/font/glyphs/BakedGlyph$Effect;Lcom/mojang/math/Matrix4f;Lcom/mojang/blaze3d/vertex/VertexConsumer;I)V a
	renderType (Z)Lnet/minecraft/client/renderer/RenderType; a
net/minecraft/client/gui/font/glyphs/BakedGlyph$Effect dmw$a
	a i
	b h
	depth e
	r f
	x0 a
	x1 c
	y0 b
	y1 d
net/minecraft/client/gui/font/glyphs/EmptyGlyph dmx
	render (ZFFLcom/mojang/math/Matrix4f;Lcom/mojang/blaze3d/vertex/VertexConsumer;FFFFI)V a
net/minecraft/client/gui/font/glyphs/MissingGlyph dmy
	$VALUES c
	IMAGE_DATA b
	INSTANCE a
	getOversample ()F g
	getPixelHeight ()I e
	getPixelWidth ()I d
	isColored ()Z f
	upload (II)V a
net/minecraft/client/gui/font/glyphs/WhiteGlyph dmz
	$VALUES c
	IMAGE_DATA b
	INSTANCE a
	getOversample ()F g
	getPixelHeight ()I e
	getPixelWidth ()I d
	isColored ()Z f
	upload (II)V a
net/minecraft/client/gui/font/providers/BitmapProvider dnc
	LOGGER a
	glyphs c
	image b
	getGlyph (I)Lcom/mojang/blaze3d/font/RawGlyph; a
	getSupportedGlyphs ()Lit/unimi/dsi/fastutil/ints/IntSet; a
net/minecraft/client/gui/font/providers/BitmapProvider$Builder dnc$a
	ascent d
	chars b
	height c
	texture a
	create (Lnet/minecraft/server/packs/resources/ResourceManager;)Lcom/mojang/blaze3d/font/GlyphProvider; a
	fromJson (Lcom/google/gson/JsonObject;)Lnet/minecraft/client/gui/font/providers/BitmapProvider$Builder; a
	getActualGlyphWidth (Lcom/mojang/blaze3d/platform/NativeImage;IIII)I a
net/minecraft/client/gui/font/providers/BitmapProvider$Glyph dnc$b
	advance g
	ascent h
	height f
	image b
	offsetX c
	offsetY d
	scale a
	width e
	getBearingY ()F l
	getOversample ()F g
	getPixelHeight ()I e
	getPixelWidth ()I d
	isColored ()Z f
	upload (II)V a
net/minecraft/client/gui/font/providers/GlyphProviderBuilder dnd
	create (Lnet/minecraft/server/packs/resources/ResourceManager;)Lcom/mojang/blaze3d/font/GlyphProvider; a
net/minecraft/client/gui/font/providers/GlyphProviderBuilderType dne
	$VALUES g
	BITMAP a
	BY_NAME d
	LEGACY_UNICODE c
	TTF b
	factory f
	name e
	byName (Ljava/lang/String;)Lnet/minecraft/client/gui/font/providers/GlyphProviderBuilderType; a
	create (Lcom/google/gson/JsonObject;)Lnet/minecraft/client/gui/font/providers/GlyphProviderBuilder; a
net/minecraft/client/gui/font/providers/LegacyUnicodeBitmapsProvider dnf
	LOGGER a
	resourceManager b
	sizes c
	texturePattern d
	textures e
	getGlyph (I)Lcom/mojang/blaze3d/font/RawGlyph; a
	getLeft (B)I a
	getRight (B)I b
	getSheetLocation (I)Lnet/minecraft/resources/ResourceLocation; b
	getSupportedGlyphs ()Lit/unimi/dsi/fastutil/ints/IntSet; a
	loadTexture (Lnet/minecraft/resources/ResourceLocation;)Lcom/mojang/blaze3d/platform/NativeImage; a
net/minecraft/client/gui/font/providers/LegacyUnicodeBitmapsProvider$Builder dnf$a
	metadata a
	texturePattern b
	create (Lnet/minecraft/server/packs/resources/ResourceManager;)Lcom/mojang/blaze3d/font/GlyphProvider; a
	fromJson (Lcom/google/gson/JsonObject;)Lnet/minecraft/client/gui/font/providers/GlyphProviderBuilder; a
net/minecraft/client/gui/font/providers/LegacyUnicodeBitmapsProvider$Glyph dnf$b
	height b
	source e
	sourceX c
	sourceY d
	width a
	getBoldOffset ()F b
	getOversample ()F g
	getPixelHeight ()I e
	getPixelWidth ()I d
	getShadowOffset ()F c
	isColored ()Z f
	upload (II)V a
net/minecraft/client/gui/font/providers/TrueTypeGlyphProviderBuilder dng
	LOGGER a
	location b
	oversample d
	shiftX e
	shiftY f
	size c
	skip g
	create (Lnet/minecraft/server/packs/resources/ResourceManager;)Lcom/mojang/blaze3d/font/GlyphProvider; a
	fromJson (Lcom/google/gson/JsonObject;)Lnet/minecraft/client/gui/font/providers/GlyphProviderBuilder; a
net/minecraft/client/gui/screens/AccessibilityOptionsScreen dnj
	OPTIONS c
net/minecraft/client/gui/screens/AlertScreen dnk
	callback c
	delayTicker q
	message p
	okButton b
	text a
	init ()V b
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V a
	setDelay (I)V a
	tick ()V d
net/minecraft/client/gui/screens/BackupConfirmScreen dnl
	description c
	eraseCache r
	lastScreen b
	listener a
	message q
	promptForCacheErase p
	init ()V b
	keyPressed (III)Z a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V a
	shouldCloseOnEsc ()Z at_
net/minecraft/client/gui/screens/BackupConfirmScreen$Listener dnl$a
net/minecraft/client/gui/screens/ChatOptionsScreen dnm
	CHAT_OPTIONS c
net/minecraft/client/gui/screens/ChatScreen dnn
	commandSuggestions q
	historyBuffer b
	historyPos c
	initial p
	input a
	init ()V b
	insertText (Ljava/lang/String;Z)V a
	isPauseScreen ()Z ay_
	keyPressed (III)Z a
	mouseClicked (DDI)Z a
	mouseScrolled (DDD)Z a
	moveInHistory (I)V a
	onEdited (Ljava/lang/String;)V b
	removed ()V e
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V a
	resize (Lnet/minecraft/client/Minecraft;II)V a
	setChatLine (Ljava/lang/String;)V c
	tick ()V d
net/minecraft/client/gui/screens/ConfirmLinkScreen dno
	copyButton q
	showWarning s
	url r
	warning p
	copyToClipboard ()V g
	init ()V b
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V a
net/minecraft/client/gui/screens/ConfirmScreen dnp
	callback c
	delayTicker r
	message q
	noButton b
	title2 p
	yesButton a
	getNarrationMessage ()Ljava/lang/String; as_
	init ()V b
	keyPressed (III)Z a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V a
	setDelay (I)V a
	shouldCloseOnEsc ()Z at_
	tick ()V d
net/minecraft/client/gui/screens/ConnectScreen dnq
	LOGGER b
	UNIQUE_THREAD_ID a
	aborted p
	connection c
	lastNarration s
	parent q
	status r
	connect (Ljava/lang/String;I)V a
	init ()V b
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V a
	shouldCloseOnEsc ()Z at_
	tick ()V d
	updateStatus (Lnet/minecraft/network/chat/Component;)V a
net/minecraft/client/gui/screens/CreateBuffetWorldScreen dnr
	BIOME_SELECT_INFO a
	applySettings c
	biome r
	biomes p
	doneButton s
	list q
	parent b
	init ()V b
	onClose ()V au_
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V a
	updateButtonValidity ()V i
net/minecraft/client/gui/screens/CreateBuffetWorldScreen$BiomeList dnr$a
	isFocused ()Z b
	setSelected (Lnet/minecraft/client/gui/components/AbstractSelectionList$Entry;)V a
	setSelected (Lnet/minecraft/client/gui/screens/CreateBuffetWorldScreen$BiomeList$Entry;)V a
net/minecraft/client/gui/screens/CreateBuffetWorldScreen$BiomeList$Entry dnr$a$a
	biome b
	name c
	mouseClicked (DDI)Z a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIIIIIIZF)V a
net/minecraft/client/gui/screens/CreateFlatWorldScreen dns
	applySettings b
	columnHeight q
	columnType p
	deleteLayerButton s
	generator c
	list r
	parent a
	hasValidSelection ()Z l
	init ()V b
	onClose ()V au_
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V a
	setConfig (Lnet/minecraft/world/level/levelgen/flat/FlatLevelGeneratorSettings;)V a
	settings ()Lnet/minecraft/world/level/levelgen/flat/FlatLevelGeneratorSettings; i
	updateButtonValidity ()V k
net/minecraft/client/gui/screens/CreateFlatWorldScreen$DetailsList dns$a
	getScrollbarPosition ()I e
	isFocused ()Z b
	resetRows ()V f
	setSelected (Lnet/minecraft/client/gui/components/AbstractSelectionList$Entry;)V a
	setSelected (Lnet/minecraft/client/gui/screens/CreateFlatWorldScreen$DetailsList$Entry;)V a
net/minecraft/client/gui/screens/CreateFlatWorldScreen$DetailsList$Entry dns$a$a
	blitSlot (Lcom/mojang/blaze3d/vertex/PoseStack;IILnet/minecraft/world/item/ItemStack;)V a
	blitSlotBg (Lcom/mojang/blaze3d/vertex/PoseStack;II)V a
	mouseClicked (DDI)Z a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIIIIIIZF)V a
net/minecraft/client/gui/screens/DatapackLoadFailureScreen dnt
	callback b
	message a
	init ()V b
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V a
	shouldCloseOnEsc ()Z at_
net/minecraft/client/gui/screens/DeathScreen dnu
	causeOfDeath b
	deathScore p
	delayTicker a
	hardcore c
	confirmResult (Z)V c
	exitToTitleScreen ()V i
	getClickedComponentStyleAt (I)Lnet/minecraft/network/chat/Style; a
	init ()V b
	isPauseScreen ()Z ay_
	mouseClicked (DDI)Z a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V a
	shouldCloseOnEsc ()Z at_
	tick ()V d
net/minecraft/client/gui/screens/DemoIntroScreen dnv
	DEMO_BACKGROUND_LOCATION a
	durationMessage c
	movementMessage b
	init ()V b
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V a
	renderBackground (Lcom/mojang/blaze3d/vertex/PoseStack;)V a
net/minecraft/client/gui/screens/DirectJoinServerScreen dnw
	ENTER_IP_LABEL a
	callback q
	ipEdit p
	lastScreen r
	selectButton b
	serverData c
	init ()V b
	keyPressed (III)Z a
	onClose ()V au_
	onSelect ()V i
	removed ()V e
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V a
	resize (Lnet/minecraft/client/Minecraft;II)V a
	tick ()V d
	updateSelectButtonStatus ()V k
net/minecraft/client/gui/screens/DisconnectedScreen dnx
	message b
	parent c
	reason a
	textHeight p
	init ()V b
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V a
	shouldCloseOnEsc ()Z at_
net/minecraft/client/gui/screens/EditServerScreen dny
	IP_LABEL b
	NAME_LABEL a
	addButton c
	addressFilter v
	callback p
	ipEdit r
	lastScreen u
	nameEdit s
	serverData q
	serverPackButton t
	cleanUp ()V k
	createServerButtonText (Lnet/minecraft/client/multiplayer/ServerData$ServerPackStatus;)Lnet/minecraft/network/chat/Component; a
	init ()V b
	onAdd ()V i
	onClose ()V au_
	onEdited (Ljava/lang/String;)V b
	removed ()V e
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V a
	resize (Lnet/minecraft/client/Minecraft;II)V a
	tick ()V d
net/minecraft/client/gui/screens/ErrorScreen dnz
	message a
	init ()V b
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V a
	shouldCloseOnEsc ()Z at_
net/minecraft/client/gui/screens/GenericDirtMessageScreen doa
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V a
	shouldCloseOnEsc ()Z at_
net/minecraft/client/gui/screens/InBedChatScreen dob
	init ()V b
	keyPressed (III)Z a
	onClose ()V au_
	sendWakeUp ()V i
net/minecraft/client/gui/screens/LanguageSelectScreen doc
	WARNING_LABEL c
	doneButton s
	forceUnicodeButton r
	languageManager q
	packSelectionList p
	init ()V b
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V a
net/minecraft/client/gui/screens/LanguageSelectScreen$LanguageSelectionList doc$a
	getRowWidth ()I d
	getScrollbarPosition ()I e
	isFocused ()Z b
	renderBackground (Lcom/mojang/blaze3d/vertex/PoseStack;)V a
	setSelected (Lnet/minecraft/client/gui/components/AbstractSelectionList$Entry;)V a
	setSelected (Lnet/minecraft/client/gui/screens/LanguageSelectScreen$LanguageSelectionList$Entry;)V a
net/minecraft/client/gui/screens/LanguageSelectScreen$LanguageSelectionList$Entry doc$a$a
	language b
	mouseClicked (DDI)Z a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIIIIIIZF)V a
	select ()V a
net/minecraft/client/gui/screens/LevelLoadingScreen dod
	COLORS c
	lastNarration b
	progressListener a
	removed ()V e
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V a
	renderChunks (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/server/level/progress/StoringChunkProgressListener;IIII)V a
	shouldCloseOnEsc ()Z at_
net/minecraft/client/gui/screens/LoadingOverlay doe
	BRAND_BACKGROUND b
	BRAND_BACKGROUND_NO_ALPHA c
	MOJANG_STUDIOS_LOGO_LOCATION a
	currentProgress k
	fadeIn j
	fadeInStart m
	fadeOutStart l
	minecraft d
	onFinish i
	reload e
	drawProgressBar (Lcom/mojang/blaze3d/vertex/PoseStack;IIIIF)V a
	isPauseScreen ()Z a
	registerTextures (Lnet/minecraft/client/Minecraft;)V a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V a
net/minecraft/client/gui/screens/LoadingOverlay$LogoTexture doe$a
	getTextureImage (Lnet/minecraft/server/packs/resources/ResourceManager;)Lnet/minecraft/client/renderer/texture/SimpleTexture$TextureImage; b
net/minecraft/client/gui/screens/MenuScreens dof
	LOGGER a
	SCREENS b
	create (Lnet/minecraft/world/inventory/MenuType;Lnet/minecraft/client/Minecraft;ILnet/minecraft/network/chat/Component;)V a
	getConstructor (Lnet/minecraft/world/inventory/MenuType;)Lnet/minecraft/client/gui/screens/MenuScreens$ScreenConstructor; a
	register (Lnet/minecraft/world/inventory/MenuType;Lnet/minecraft/client/gui/screens/MenuScreens$ScreenConstructor;)V a
	selfTest ()Z a
net/minecraft/client/gui/screens/MenuScreens$ScreenConstructor dof$a
	fromPacket (Lnet/minecraft/network/chat/Component;Lnet/minecraft/world/inventory/MenuType;Lnet/minecraft/client/Minecraft;I)V a
net/minecraft/client/gui/screens/MouseSettingsScreen dog
	OPTIONS p
	list c
	init ()V b
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V a
net/minecraft/client/gui/screens/OptionsScreen doh
	OPTION_SCREEN_OPTIONS a
	currentDifficulty r
	difficultyButton p
	lastScreen b
	lockButton q
	options c
	getDifficultyText (Lnet/minecraft/world/Difficulty;)Lnet/minecraft/network/chat/Component; a
	init ()V b
	lockCallback (Z)V c
	removed ()V e
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V a
	updatePackList (Lnet/minecraft/server/packs/repository/PackRepository;)V a
net/minecraft/client/gui/screens/OptionsSubScreen doi
	lastScreen a
	options b
	onClose ()V au_
	removed ()V e
	tooltipAt (Lnet/minecraft/client/gui/components/OptionsList;II)Ljava/util/List; a
net/minecraft/client/gui/screens/OutOfMemoryScreen doj
	init ()V b
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V a
	shouldCloseOnEsc ()Z at_
net/minecraft/client/gui/screens/Overlay dok
	isPauseScreen ()Z a
net/minecraft/client/gui/screens/PauseScreen dol
	showPauseMenu a
	createPauseMenu ()V i
	init ()V b
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V a
	tick ()V d
net/minecraft/client/gui/screens/PopupScreen dom
	buttonOptions b
	buttonWidth q
	contentTop p
	message a
	messageLines c
	getNarrationMessage ()Ljava/lang/String; as_
	init (Lnet/minecraft/client/Minecraft;II)V b
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V a
	shouldCloseOnEsc ()Z at_
net/minecraft/client/gui/screens/PopupScreen$ButtonOption dom$a
	message a
	onPress b
net/minecraft/client/gui/screens/PresetFlatWorldScreen don
	LOGGER a
	PRESETS b
	export t
	list r
	listText q
	parent c
	selectButton s
	settings u
	shareText p
	fromString (Lnet/minecraft/core/Registry;Ljava/lang/String;Lnet/minecraft/world/level/levelgen/flat/FlatLevelGeneratorSettings;)Lnet/minecraft/world/level/levelgen/flat/FlatLevelGeneratorSettings; a
	getLayerInfoFromString (Ljava/lang/String;I)Lnet/minecraft/world/level/levelgen/flat/FlatLayerInfo; a
	getLayersInfoFromString (Ljava/lang/String;)Ljava/util/List; b
	init ()V b
	mouseScrolled (DDD)Z a
	onClose ()V au_
	preset (Lnet/minecraft/network/chat/Component;Lnet/minecraft/world/level/ItemLike;Lnet/minecraft/resources/ResourceKey;Ljava/util/List;ZZZ[Lnet/minecraft/world/level/levelgen/flat/FlatLayerInfo;)V a
	removed ()V e
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V a
	resize (Lnet/minecraft/client/Minecraft;II)V a
	save (Lnet/minecraft/core/Registry;Lnet/minecraft/world/level/levelgen/flat/FlatLevelGeneratorSettings;)Ljava/lang/String; b
	tick ()V d
	updateButtonValidity (Z)V c
net/minecraft/client/gui/screens/PresetFlatWorldScreen$PresetInfo don$a
	icon a
	name b
	settings c
	getName ()Lnet/minecraft/network/chat/Component; a
net/minecraft/client/gui/screens/PresetFlatWorldScreen$PresetsList don$b
	isFocused ()Z b
	keyPressed (III)Z a
	setSelected (Lnet/minecraft/client/gui/components/AbstractSelectionList$Entry;)V a
	setSelected (Lnet/minecraft/client/gui/screens/PresetFlatWorldScreen$PresetsList$Entry;)V a
net/minecraft/client/gui/screens/PresetFlatWorldScreen$PresetsList$Entry don$b$a
	blitSlot (Lcom/mojang/blaze3d/vertex/PoseStack;IILnet/minecraft/world/item/Item;)V a
	blitSlotBg (Lcom/mojang/blaze3d/vertex/PoseStack;II)V a
	mouseClicked (DDI)Z a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIIIIIIZF)V a
	select ()V a
net/minecraft/client/gui/screens/ProgressScreen doo
	header a
	progress c
	stage b
	stop p
	progressStage (Lnet/minecraft/network/chat/Component;)V c
	progressStagePercentage (I)V a
	progressStart (Lnet/minecraft/network/chat/Component;)V b
	progressStartNoAbort (Lnet/minecraft/network/chat/Component;)V a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V a
	shouldCloseOnEsc ()Z at_
	stop ()V a
net/minecraft/client/gui/screens/ReceivingLevelScreen dop
	DOWNLOADING_TERRAIN_TEXT a
	isPauseScreen ()Z ay_
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V a
	shouldCloseOnEsc ()Z at_
net/minecraft/client/gui/screens/Screen doq
	ALLOWED_PROTOCOLS b
	LOGGER a
	buttons m
	children e
	clickedLink c
	font o
	height l
	itemRenderer j
	minecraft i
	passEvents n
	title d
	width k
	addButton (Lnet/minecraft/client/gui/components/AbstractWidget;)Lnet/minecraft/client/gui/components/AbstractWidget; a
	addWidget (Lnet/minecraft/client/gui/components/events/GuiEventListener;)Lnet/minecraft/client/gui/components/events/GuiEventListener; d
	children ()Ljava/util/List; av_
	confirmLink (Z)V c
	getNarrationMessage ()Ljava/lang/String; as_
	getTitle ()Lnet/minecraft/network/chat/Component; w
	getTooltipFromItem (Lnet/minecraft/world/item/ItemStack;)Ljava/util/List; a
	handleComponentClicked (Lnet/minecraft/network/chat/Style;)Z a
	hasAltDown ()Z z
	hasControlDown ()Z x
	hasShiftDown ()Z y
	init ()V b
	init (Lnet/minecraft/client/Minecraft;II)V b
	insertText (Ljava/lang/String;Z)V a
	isCopy (I)Z h
	isCut (I)Z f
	isMouseOver (DD)Z b
	isPaste (I)Z g
	isPauseScreen ()Z ay_
	isSelectAll (I)Z i
	isValidCharacterForName (Ljava/lang/String;CI)Z a
	keyPressed (III)Z a
	onClose ()V au_
	onFilesDrop (Ljava/util/List;)V a
	openLink (Ljava/net/URI;)V a
	removed ()V e
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V a
	renderBackground (Lcom/mojang/blaze3d/vertex/PoseStack;)V a
	renderBackground (Lcom/mojang/blaze3d/vertex/PoseStack;I)V a
	renderComponentHoverEffect (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/network/chat/Style;II)V a
	renderComponentTooltip (Lcom/mojang/blaze3d/vertex/PoseStack;Ljava/util/List;II)V b
	renderDirtBackground (I)V e
	renderTooltip (Lcom/mojang/blaze3d/vertex/PoseStack;Ljava/util/List;II)V c
	renderTooltip (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/network/chat/Component;II)V b
	renderTooltip (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/world/item/ItemStack;II)V a
	resize (Lnet/minecraft/client/Minecraft;II)V a
	sendMessage (Ljava/lang/String;)V b_
	sendMessage (Ljava/lang/String;Z)V b
	setSize (II)V a
	shouldCloseOnEsc ()Z at_
	tick ()V d
	wrapScreenError (Ljava/lang/Runnable;Ljava/lang/String;Ljava/lang/String;)V a
net/minecraft/client/gui/screens/ShareToLanScreen dor
	ALLOW_COMMANDS_LABEL a
	GAME_MODE_LABEL b
	INFO_TEXT c
	commands t
	commandsButton q
	gameModeName s
	lastScreen p
	modeButton r
	init ()V b
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V a
	updateSelectionStrings ()V i
net/minecraft/client/gui/screens/SimpleOptionsSubScreen dos
	list q
	narratorButton p
	smallOptions c
	init ()V b
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V a
	updateNarratorButton ()V i
net/minecraft/client/gui/screens/SkinCustomizationScreen dot
	getMessage (Lnet/minecraft/world/entity/player/PlayerModelPart;)Lnet/minecraft/network/chat/Component; a
	init ()V b
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V a
net/minecraft/client/gui/screens/SoundOptionsScreen dou
	init ()V b
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V a
net/minecraft/client/gui/screens/TitleScreen dov
	ACCESSIBILITY_TEXTURE p
	CUBE_MAP a
	LOGGER b
	MINECRAFT_EDITION u
	MINECRAFT_LOGO t
	PANORAMA_OVERLAY c
	copyrightWidth x
	copyrightX y
	fadeInStart B
	fading A
	minceraftEasterEgg q
	panorama z
	realmsNotificationsInitialized v
	realmsNotificationsScreen w
	resetDemoButton s
	splash r
	checkDemoWorldPresence ()Z k
	confirmDemo (Z)V c
	createDemoMenuOptions (II)V c
	createNormalMenuOptions (II)V b
	init ()V b
	isPauseScreen ()Z ay_
	mouseClicked (DDI)Z a
	preloadResources (Lnet/minecraft/client/renderer/texture/TextureManager;Ljava/util/concurrent/Executor;)Ljava/util/concurrent/CompletableFuture; a
	realmsButtonClicked ()V l
	realmsNotificationsEnabled ()Z i
	removed ()V e
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V a
	shouldCloseOnEsc ()Z at_
	tick ()V d
net/minecraft/client/gui/screens/VideoSettingsScreen dow
	BUTTON_ACCEPT r
	BUTTON_CANCEL s
	FABULOUS c
	NEW_LINE t
	OPTIONS u
	WARNING_MESSAGE p
	WARNING_TITLE q
	gpuWarnlistManager w
	list v
	oldMipmaps x
	init ()V b
	mouseClicked (DDI)Z a
	mouseReleased (DDI)Z c
	removed ()V e
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V a
net/minecraft/client/gui/screens/WinScreen dox
	EDITION_LOCATION c
	LOGGER a
	LOGO_LOCATION b
	OBFUSCATE_TOKEN q
	VIGNETTE_LOCATION p
	centeredLines v
	lines u
	onFinished s
	poem r
	scrollSpeed x
	time t
	totalScrollLength w
	init ()V b
	onClose ()V au_
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V a
	renderBg (IIF)V a
	respawn ()V i
	tick ()V d
net/minecraft/client/gui/screens/achievement/StatsScreen doy
	PENDING_TEXT c
	activeList t
	isLoading u
	itemStatsList q
	lastScreen a
	mobsStatsList r
	stats s
	statsList p
	blitSlot (Lcom/mojang/blaze3d/vertex/PoseStack;IILnet/minecraft/world/item/Item;)V a
	blitSlotIcon (Lcom/mojang/blaze3d/vertex/PoseStack;IIII)V c
	getActiveList ()Lnet/minecraft/client/gui/components/ObjectSelectionList; m
	getColumnX (I)I a
	getTranslationKey (Lnet/minecraft/stats/Stat;)Ljava/lang/String; b
	init ()V b
	initButtons ()V k
	initLists ()V i
	isPauseScreen ()Z ay_
	onStatsUpdated ()V l
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V a
	setActiveList (Lnet/minecraft/client/gui/components/ObjectSelectionList;)V a
net/minecraft/client/gui/screens/achievement/StatsScreen$GeneralStatisticsList doy$a
	renderBackground (Lcom/mojang/blaze3d/vertex/PoseStack;)V a
net/minecraft/client/gui/screens/achievement/StatsScreen$GeneralStatisticsList$Entry doy$a$a
	stat b
	statDisplay c
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIIIIIIZF)V a
net/minecraft/client/gui/screens/achievement/StatsScreen$ItemStatisticsList doy$b
	blockColumns a
	headerPressed p
	iconOffsets v
	itemColumns o
	itemStatSorter r
	sortColumn s
	sortOrder t
	statItemList q
	clickedHeader (II)V a
	getColumn (I)Lnet/minecraft/stats/StatType; a
	getColumnIndex (Lnet/minecraft/stats/StatType;)I b
	getRowWidth ()I d
	getScrollbarPosition ()I e
	getString (Lnet/minecraft/world/item/Item;)Lnet/minecraft/network/chat/Component; a
	renderBackground (Lcom/mojang/blaze3d/vertex/PoseStack;)V a
	renderDecorations (Lcom/mojang/blaze3d/vertex/PoseStack;II)V a
	renderHeader (Lcom/mojang/blaze3d/vertex/PoseStack;IILcom/mojang/blaze3d/vertex/Tesselator;)V a
	renderMousehoverTooltip (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/network/chat/Component;II)V a
	sortByColumn (Lnet/minecraft/stats/StatType;)V a
net/minecraft/client/gui/screens/achievement/StatsScreen$ItemStatisticsList$ItemComparator doy$b$a
	compare (Lnet/minecraft/world/item/Item;Lnet/minecraft/world/item/Item;)I a
net/minecraft/client/gui/screens/achievement/StatsScreen$ItemStatisticsList$ItemRow doy$b$b
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIIIIIIZF)V a
	renderStat (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/stats/Stat;IIZ)V a
net/minecraft/client/gui/screens/achievement/StatsScreen$MobsStatisticsList doy$c
	renderBackground (Lcom/mojang/blaze3d/vertex/PoseStack;)V a
net/minecraft/client/gui/screens/achievement/StatsScreen$MobsStatisticsList$MobRow doy$c$a
	hasKills e
	killedBy f
	kills d
	mobName c
	type b
	wasKilledBy g
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIIIIIIZF)V a
net/minecraft/client/gui/screens/achievement/StatsUpdateListener doz
	LOADING_SYMBOLS b
	onStatsUpdated ()V l
net/minecraft/client/gui/screens/advancements/AdvancementTab dpb
	advancement e
	centered u
	display i
	fade t
	icon j
	index d
	maxX r
	maxY s
	minX p
	minY q
	minecraft a
	root l
	screen b
	scrollX n
	scrollY o
	title k
	type c
	widgets m
	addAdvancement (Lnet/minecraft/advancements/Advancement;)V a
	addWidget (Lnet/minecraft/client/gui/screens/advancements/AdvancementWidget;Lnet/minecraft/advancements/Advancement;)V a
	create (Lnet/minecraft/client/Minecraft;Lnet/minecraft/client/gui/screens/advancements/AdvancementsScreen;ILnet/minecraft/advancements/Advancement;)Lnet/minecraft/client/gui/screens/advancements/AdvancementTab; a
	drawContents (Lcom/mojang/blaze3d/vertex/PoseStack;)V a
	drawIcon (IILnet/minecraft/client/renderer/entity/ItemRenderer;)V a
	drawTab (Lcom/mojang/blaze3d/vertex/PoseStack;IIZ)V a
	drawTooltips (Lcom/mojang/blaze3d/vertex/PoseStack;IIII)V c
	getAdvancement ()Lnet/minecraft/advancements/Advancement; c
	getDisplay ()Lnet/minecraft/advancements/DisplayInfo; e
	getIndex ()I b
	getScreen ()Lnet/minecraft/client/gui/screens/advancements/AdvancementsScreen; f
	getTitle ()Lnet/minecraft/network/chat/Component; d
	getType ()Lnet/minecraft/client/gui/screens/advancements/AdvancementTabType; a
	getWidget (Lnet/minecraft/advancements/Advancement;)Lnet/minecraft/client/gui/screens/advancements/AdvancementWidget; b
	isMouseOver (IIDD)Z a
	scroll (DD)V a
net/minecraft/client/gui/screens/advancements/AdvancementTabType dpc
	$VALUES j
	ABOVE a
	BELOW b
	LEFT c
	RIGHT d
	height h
	max i
	textureX e
	textureY f
	width g
	draw (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/gui/GuiComponent;IIZI)V a
	drawIcon (IIILnet/minecraft/client/renderer/entity/ItemRenderer;Lnet/minecraft/world/item/ItemStack;)V a
	getMax ()I a
	getX (I)I a
	getY (I)I b
	isMouseOver (IIIDD)Z a
net/minecraft/client/gui/screens/advancements/AdvancementWidget dpd
	TEST_SPLIT_OFFSETS b
	WIDGETS_LOCATION a
	advancement d
	children n
	description k
	display e
	minecraft l
	parent m
	progress o
	tab c
	title i
	width j
	x p
	y q
	addChild (Lnet/minecraft/client/gui/screens/advancements/AdvancementWidget;)V a
	attachToParent ()V b
	draw (Lcom/mojang/blaze3d/vertex/PoseStack;II)V a
	drawConnectivity (Lcom/mojang/blaze3d/vertex/PoseStack;IIZ)V a
	drawHover (Lcom/mojang/blaze3d/vertex/PoseStack;IIFII)V a
	findOptimalLines (Lnet/minecraft/network/chat/Component;I)Ljava/util/List; a
	getFirstVisibleParent (Lnet/minecraft/advancements/Advancement;)Lnet/minecraft/client/gui/screens/advancements/AdvancementWidget; a
	getMaxWidth (Lnet/minecraft/client/StringSplitter;Ljava/util/List;)F a
	getWidth ()I a
	getX ()I d
	getY ()I c
	isMouseOver (IIII)Z a
	render9Sprite (Lcom/mojang/blaze3d/vertex/PoseStack;IIIIIIIII)V a
	renderRepeating (Lcom/mojang/blaze3d/vertex/PoseStack;IIIIIIII)V a
	setProgress (Lnet/minecraft/advancements/AdvancementProgress;)V a
net/minecraft/client/gui/screens/advancements/AdvancementWidgetType dpe
	$VALUES d
	OBTAINED a
	UNOBTAINED b
	y c
	getIndex ()I a
net/minecraft/client/gui/screens/advancements/AdvancementsScreen dpf
	NO_ADVANCEMENTS_LABEL p
	TABS_LOCATION b
	TITLE q
	VERY_SAD_LABEL c
	WINDOW_LOCATION a
	advancements r
	isScrolling u
	selectedTab t
	tabs s
	getAdvancementWidget (Lnet/minecraft/advancements/Advancement;)Lnet/minecraft/client/gui/screens/advancements/AdvancementWidget; f
	getTab (Lnet/minecraft/advancements/Advancement;)Lnet/minecraft/client/gui/screens/advancements/AdvancementTab; g
	init ()V b
	keyPressed (III)Z a
	mouseClicked (DDI)Z a
	mouseDragged (DDIDD)Z a
	onAddAdvancementRoot (Lnet/minecraft/advancements/Advancement;)V a
	onAddAdvancementTask (Lnet/minecraft/advancements/Advancement;)V c
	onAdvancementsCleared ()V a
	onRemoveAdvancementRoot (Lnet/minecraft/advancements/Advancement;)V b
	onRemoveAdvancementTask (Lnet/minecraft/advancements/Advancement;)V d
	onSelectedTabChanged (Lnet/minecraft/advancements/Advancement;)V e
	onUpdateAdvancementProgress (Lnet/minecraft/advancements/Advancement;Lnet/minecraft/advancements/AdvancementProgress;)V a
	removed ()V e
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V a
	renderInside (Lcom/mojang/blaze3d/vertex/PoseStack;IIII)V c
	renderTooltips (Lcom/mojang/blaze3d/vertex/PoseStack;IIII)V d
	renderWindow (Lcom/mojang/blaze3d/vertex/PoseStack;II)V a
net/minecraft/client/gui/screens/controls/ControlList dph
	controlsScreen a
	maxNameWidth o
	getRowWidth ()I d
	getScrollbarPosition ()I e
net/minecraft/client/gui/screens/controls/ControlList$CategoryEntry dph$a
	name b
	width c
	changeFocus (Z)Z c_
	children ()Ljava/util/List; av_
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIIIIIIZF)V a
net/minecraft/client/gui/screens/controls/ControlList$Entry dph$b
net/minecraft/client/gui/screens/controls/ControlList$KeyEntry dph$c
	changeButton d
	key b
	name c
	resetButton e
	children ()Ljava/util/List; av_
	mouseClicked (DDI)Z a
	mouseReleased (DDI)Z c
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIIIIIIZF)V a
net/minecraft/client/gui/screens/controls/ControlsScreen dpi
	controlList q
	lastKeySelection p
	resetButton r
	selectedKey c
	init ()V b
	keyPressed (III)Z a
	mouseClicked (DDI)Z a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V a
net/minecraft/client/gui/screens/debug/GameModeSwitcherScreen dpk
	ALL_SLOTS_WIDTH b
	GAMEMODE_SWITCHER_LOCATION a
	SELECT_KEY c
	currentlyHovered q
	firstMouseX r
	firstMouseY s
	previousHovered p
	setFirstMousePos t
	slots u
	checkToClose ()Z m
	getDefaultSelected ()Lnet/minecraft/world/level/GameType; k
	init ()V b
	isPauseScreen ()Z ay_
	keyPressed (III)Z a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V a
	switchToHoveredGameMode ()V l
	switchToHoveredGameMode (Lnet/minecraft/client/Minecraft;Ljava/util/Optional;)V a
net/minecraft/client/gui/screens/debug/GameModeSwitcherScreen$GameModeIcon dpk$a
	$VALUES i
	ADVENTURE c
	CREATIVE a
	SPECTATOR d
	SURVIVAL b
	VALUES e
	command g
	name f
	renderStack h
	drawIcon (Lnet/minecraft/client/renderer/entity/ItemRenderer;II)V a
	getCommand ()Ljava/lang/String; b
	getFromGameType (Lnet/minecraft/world/level/GameType;)Ljava/util/Optional; b
	getName ()Lnet/minecraft/network/chat/Component; a
	getNext ()Ljava/util/Optional; c
net/minecraft/client/gui/screens/debug/GameModeSwitcherScreen$GameModeSlot dpk$b
	icon b
	isSelected c
	drawSelection (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/texture/TextureManager;)V b
	drawSlot (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/texture/TextureManager;)V a
	isHovered ()Z g
	renderButton (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V b
	setSelected (Z)V e
net/minecraft/client/gui/screens/inventory/AbstractCommandBlockEditScreen dpl
	COMMAND_LABEL t
	PREVIOUS_OUTPUT_LABEL u
	SET_COMMAND_LABEL s
	cancelButton p
	commandEdit a
	commandSuggestions v
	doneButton c
	outputButton q
	previousEdit b
	trackOutput r
	getCommandBlock ()Lnet/minecraft/world/level/BaseCommandBlock; i
	getPreviousY ()I k
	init ()V b
	keyPressed (III)Z a
	mouseClicked (DDI)Z a
	mouseScrolled (DDD)Z a
	onClose ()V au_
	onDone ()V m
	onEdited (Ljava/lang/String;)V b
	populateAndSendPacket (Lnet/minecraft/world/level/BaseCommandBlock;)V a
	removed ()V e
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V a
	resize (Lnet/minecraft/client/Minecraft;II)V a
	tick ()V d
	updateCommandOutput ()V l
net/minecraft/client/gui/screens/inventory/AbstractContainerScreen dpm
	INVENTORY_LOCATION a
	clickedSlot A
	doubleclick R
	draggingItem F
	hoveredSlot v
	imageHeight c
	imageWidth b
	inventory u
	inventoryLabelX r
	inventoryLabelY s
	isQuickCrafting z
	isSplittingStack E
	lastClickButton Q
	lastClickSlot D
	lastClickTime P
	lastQuickMoved S
	leftPos w
	menu t
	quickCraftSlots y
	quickCraftingButton M
	quickCraftingRemainder O
	quickCraftingType L
	quickdropSlot C
	quickdropTime K
	skipNextRelease N
	snapbackEnd B
	snapbackItem J
	snapbackStartX G
	snapbackStartY H
	snapbackTime I
	titleLabelX p
	titleLabelY q
	topPos x
	checkHotbarKeyPressed (II)Z b
	checkHotbarMouseClicked (I)V a
	findSlot (DD)Lnet/minecraft/world/inventory/Slot; a
	getMenu ()Lnet/minecraft/world/inventory/AbstractContainerMenu; i
	hasClickedOutside (DDIII)Z a
	init ()V b
	isHovering (IIIIDD)Z a
	isHovering (Lnet/minecraft/world/inventory/Slot;DD)Z a
	isPauseScreen ()Z ay_
	keyPressed (III)Z a
	mouseClicked (DDI)Z a
	mouseDragged (DDIDD)Z a
	mouseReleased (DDI)Z c
	onClose ()V au_
	recalculateQuickCraftRemaining ()V m
	removed ()V e
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V a
	renderBg (Lcom/mojang/blaze3d/vertex/PoseStack;FII)V a
	renderFloatingItem (Lnet/minecraft/world/item/ItemStack;IILjava/lang/String;)V a
	renderLabels (Lcom/mojang/blaze3d/vertex/PoseStack;II)V b
	renderSlot (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/world/inventory/Slot;)V a
	renderTooltip (Lcom/mojang/blaze3d/vertex/PoseStack;II)V a
	slotClicked (Lnet/minecraft/world/inventory/Slot;IILnet/minecraft/world/inventory/ClickType;)V a
	tick ()V d
net/minecraft/client/gui/screens/inventory/AbstractFurnaceScreen dpn
	RECIPE_BUTTON_LOCATION B
	recipeBookComponent A
	texture D
	widthTooNarrow C
	charTyped (CI)Z a
	getRecipeBookComponent ()Lnet/minecraft/client/gui/screens/recipebook/RecipeBookComponent; l
	hasClickedOutside (DDIII)Z a
	init ()V b
	keyPressed (III)Z a
	mouseClicked (DDI)Z a
	recipesUpdated ()V az_
	removed ()V e
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V a
	renderBg (Lcom/mojang/blaze3d/vertex/PoseStack;FII)V a
	slotClicked (Lnet/minecraft/world/inventory/Slot;IILnet/minecraft/world/inventory/ClickType;)V a
	tick ()V d
net/minecraft/client/gui/screens/inventory/AnvilScreen dpo
	ANVIL_LOCATION A
	TOO_EXPENSIVE_TEXT B
	name C
	keyPressed (III)Z a
	onNameChanged (Ljava/lang/String;)V b
	removed ()V e
	renderFg (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V b
	renderLabels (Lcom/mojang/blaze3d/vertex/PoseStack;II)V b
	resize (Lnet/minecraft/client/Minecraft;II)V a
	slotChanged (Lnet/minecraft/world/inventory/AbstractContainerMenu;ILnet/minecraft/world/item/ItemStack;)V a
	subInit ()V k
net/minecraft/client/gui/screens/inventory/BeaconScreen dpp
	BEACON_LOCATION A
	PRIMARY_EFFECT_LABEL B
	SECONDARY_EFFECT_LABEL C
	confirmButton D
	initPowerButtons E
	primary F
	secondary G
	init ()V b
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V a
	renderBg (Lcom/mojang/blaze3d/vertex/PoseStack;FII)V a
	renderLabels (Lcom/mojang/blaze3d/vertex/PoseStack;II)V b
	tick ()V d
net/minecraft/client/gui/screens/inventory/BeaconScreen$BeaconCancelButton dpp$a
	onPress ()V b
	renderToolTip (Lcom/mojang/blaze3d/vertex/PoseStack;II)V a
net/minecraft/client/gui/screens/inventory/BeaconScreen$BeaconConfirmButton dpp$b
	onPress ()V b
	renderToolTip (Lcom/mojang/blaze3d/vertex/PoseStack;II)V a
net/minecraft/client/gui/screens/inventory/BeaconScreen$BeaconPowerButton dpp$c
	effect b
	isPrimary d
	sprite c
	tooltip e
	createTooltip (Lnet/minecraft/world/effect/MobEffect;Z)Lnet/minecraft/network/chat/Component; a
	onPress ()V b
	renderIcon (Lcom/mojang/blaze3d/vertex/PoseStack;)V a
	renderToolTip (Lcom/mojang/blaze3d/vertex/PoseStack;II)V a
net/minecraft/client/gui/screens/inventory/BeaconScreen$BeaconScreenButton dpp$d
	selected a
	isSelected ()Z a
	renderButton (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V b
	renderIcon (Lcom/mojang/blaze3d/vertex/PoseStack;)V a
	setSelected (Z)V e
net/minecraft/client/gui/screens/inventory/BeaconScreen$BeaconSpriteScreenButton dpp$e
	iconX a
	iconY b
	renderIcon (Lcom/mojang/blaze3d/vertex/PoseStack;)V a
net/minecraft/client/gui/screens/inventory/BlastFurnaceScreen dpq
	TEXTURE B
net/minecraft/client/gui/screens/inventory/BookEditScreen dpr
	BLACK_CURSOR c
	EDIT_TITLE_LABEL a
	FINALIZE_WARNING_LABEL b
	GRAY_CURSOR p
	backButton D
	book r
	cancelButton H
	currentPage v
	displayCache J
	doneButton E
	finalizeButton G
	forwardButton C
	frameTick u
	hand I
	isModified s
	isSigning t
	lastClickTime A
	lastIndex B
	owner q
	ownerText L
	pageEdit y
	pageMsg K
	pages w
	signButton F
	title x
	titleEdit z
	appendPageToBook ()V p
	bookKeyPressed (III)Z c
	changeLine (I)V a
	charTyped (CI)Z a
	clearDisplayCache ()V C
	clearDisplayCacheAfterPageChange ()V D
	convertLocalToScreen (Lnet/minecraft/client/gui/screens/inventory/BookEditScreen$Pos2i;)Lnet/minecraft/client/gui/screens/inventory/BookEditScreen$Pos2i; b
	convertScreenToLocal (Lnet/minecraft/client/gui/screens/inventory/BookEditScreen$Pos2i;)Lnet/minecraft/client/gui/screens/inventory/BookEditScreen$Pos2i; a
	createPartialLineSelection (Ljava/lang/String;Lnet/minecraft/client/StringSplitter;IIII)Lnet/minecraft/client/renderer/Rect2i; a
	createSelection (Lnet/minecraft/client/gui/screens/inventory/BookEditScreen$Pos2i;Lnet/minecraft/client/gui/screens/inventory/BookEditScreen$Pos2i;)Lnet/minecraft/client/renderer/Rect2i; a
	eraseEmptyTrailingPages ()V o
	findLineFromPos ([II)I b
	getClipboard ()Ljava/lang/String; i
	getCurrentPageText ()Ljava/lang/String; A
	getDisplayCache ()Lnet/minecraft/client/gui/screens/inventory/BookEditScreen$DisplayCache; B
	getNumPages ()I k
	init ()V b
	keyDown ()V s
	keyEnd ()V u
	keyHome ()V t
	keyPressed (III)Z a
	keyUp ()V r
	mouseClicked (DDI)Z a
	mouseDragged (DDIDD)Z a
	pageBack ()V l
	pageForward ()V m
	rebuildDisplayCache ()Lnet/minecraft/client/gui/screens/inventory/BookEditScreen$DisplayCache; E
	removed ()V e
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V a
	renderCursor (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/gui/screens/inventory/BookEditScreen$Pos2i;Z)V a
	renderHighlight ([Lnet/minecraft/client/renderer/Rect2i;)V a
	saveChanges (Z)V c
	selectWord (I)V b
	setClipboard (Ljava/lang/String;)V b
	setCurrentPageText (Ljava/lang/String;)V c
	tick ()V d
	titleKeyPressed (III)Z d
	updateButtonVisibility ()V n
net/minecraft/client/gui/screens/inventory/BookEditScreen$DisplayCache dpr$a
	EMPTY a
	cursor c
	cursorAtEnd d
	fullText b
	lineStarts e
	lines f
	selection g
	changeLine (II)I a
	findLineEnd (I)I b
	findLineStart (I)I a
	getIndexAtPosition (Lnet/minecraft/client/gui/Font;Lnet/minecraft/client/gui/screens/inventory/BookEditScreen$Pos2i;)I a
net/minecraft/client/gui/screens/inventory/BookEditScreen$LineInfo dpr$b
	asComponent c
	contents b
	style a
	x d
	y e
net/minecraft/client/gui/screens/inventory/BookEditScreen$Pos2i dpr$c
	x a
	y b
net/minecraft/client/gui/screens/inventory/BookViewScreen dps
	BOOK_LOCATION b
	EMPTY_ACCESS a
	backButton u
	bookAccess c
	cachedPage r
	cachedPageComponents q
	currentPage p
	forwardButton t
	pageMsg s
	playTurnSound v
	convertPages (Lnet/minecraft/nbt/CompoundTag;)Ljava/util/List; a
	createMenuControls ()V k
	createPageControlButtons ()V l
	forcePage (I)Z b
	getClickedComponentStyleAt (DD)Lnet/minecraft/network/chat/Style; a
	getNumPages ()I i
	handleComponentClicked (Lnet/minecraft/network/chat/Style;)Z a
	init ()V b
	keyPressed (III)Z a
	mouseClicked (DDI)Z a
	pageBack ()V m
	pageForward ()V n
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V a
	setBookAccess (Lnet/minecraft/client/gui/screens/inventory/BookViewScreen$BookAccess;)V a
	setPage (I)Z a
	updateButtonVisibility ()V o
net/minecraft/client/gui/screens/inventory/BookViewScreen$BookAccess dps$a
	fromItem (Lnet/minecraft/world/item/ItemStack;)Lnet/minecraft/client/gui/screens/inventory/BookViewScreen$BookAccess; a
	getPage (I)Lnet/minecraft/network/chat/FormattedText; b
	getPageCount ()I a
	getPageRaw (I)Lnet/minecraft/network/chat/FormattedText; a
net/minecraft/client/gui/screens/inventory/BookViewScreen$WritableBookAccess dps$b
	pages a
	getPageCount ()I a
	getPageRaw (I)Lnet/minecraft/network/chat/FormattedText; a
	readPages (Lnet/minecraft/world/item/ItemStack;)Ljava/util/List; b
net/minecraft/client/gui/screens/inventory/BookViewScreen$WrittenBookAccess dps$c
	pages a
	getPageCount ()I a
	getPageRaw (I)Lnet/minecraft/network/chat/FormattedText; a
	readPages (Lnet/minecraft/world/item/ItemStack;)Ljava/util/List; b
net/minecraft/client/gui/screens/inventory/BrewingStandScreen dpt
	BREWING_STAND_LOCATION A
	BUBBLELENGTHS B
	init ()V b
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V a
	renderBg (Lcom/mojang/blaze3d/vertex/PoseStack;FII)V a
net/minecraft/client/gui/screens/inventory/CartographyTableScreen dpu
	BG_LOCATION A
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V a
	renderBg (Lcom/mojang/blaze3d/vertex/PoseStack;FII)V a
	renderMap (Lnet/minecraft/world/level/saveddata/maps/MapItemSavedData;IIF)V a
	renderResultingMap (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/world/level/saveddata/maps/MapItemSavedData;ZZZZ)V a
net/minecraft/client/gui/screens/inventory/CommandBlockEditScreen dpv
	autoCommandBlock s
	autoexec y
	autoexecButton v
	conditional x
	conditionalButton u
	mode w
	modeButton t
	getCommandBlock ()Lnet/minecraft/world/level/BaseCommandBlock; i
	getPreviousY ()I k
	init ()V b
	nextMode ()V p
	populateAndSendPacket (Lnet/minecraft/world/level/BaseCommandBlock;)V a
	resize (Lnet/minecraft/client/Minecraft;II)V a
	updateAutoexec ()V s
	updateConditional ()V r
	updateGui ()V n
	updateMode ()V o
net/minecraft/client/gui/screens/inventory/ContainerScreen dpw
	CONTAINER_BACKGROUND A
	containerRows B
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V a
	renderBg (Lcom/mojang/blaze3d/vertex/PoseStack;FII)V a
net/minecraft/client/gui/screens/inventory/CraftingScreen dpx
	CRAFTING_TABLE_LOCATION A
	RECIPE_BUTTON_LOCATION B
	recipeBookComponent C
	widthTooNarrow D
	getRecipeBookComponent ()Lnet/minecraft/client/gui/screens/recipebook/RecipeBookComponent; l
	hasClickedOutside (DDIII)Z a
	init ()V b
	isHovering (IIIIDD)Z a
	mouseClicked (DDI)Z a
	recipesUpdated ()V az_
	removed ()V e
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V a
	renderBg (Lcom/mojang/blaze3d/vertex/PoseStack;FII)V a
	slotClicked (Lnet/minecraft/world/inventory/Slot;IILnet/minecraft/world/inventory/ClickType;)V a
	tick ()V d
net/minecraft/client/gui/screens/inventory/CreativeInventoryListener dpy
	minecraft a
	refreshContainer (Lnet/minecraft/world/inventory/AbstractContainerMenu;Lnet/minecraft/core/NonNullList;)V a
	setContainerData (Lnet/minecraft/world/inventory/AbstractContainerMenu;II)V a
	slotChanged (Lnet/minecraft/world/inventory/AbstractContainerMenu;ILnet/minecraft/world/item/ItemStack;)V a
net/minecraft/client/gui/screens/inventory/CreativeModeInventoryScreen dpz
	CONTAINER C
	CREATIVE_TABS_LOCATION B
	TRASH_SLOT_TOOLTIP D
	destroyItemSlot J
	hasClickedOutside M
	ignoreTextInput L
	listener K
	originalSlots I
	scrollOffs F
	scrolling G
	searchBox H
	selectedTab E
	visibleTags N
	canScroll ()Z o
	charTyped (CI)Z a
	checkEffectRendering ()V k
	checkTabClicked (Lnet/minecraft/world/item/CreativeModeTab;DD)Z a
	checkTabHovering (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/world/item/CreativeModeTab;II)Z a
	getSelectedTab ()I l
	handleHotbarLoadOrSave (Lnet/minecraft/client/Minecraft;IZZ)V a
	hasClickedOutside (DDIII)Z a
	init ()V b
	insideScrollbar (DD)Z a
	isCreativeSlot (Lnet/minecraft/world/inventory/Slot;)Z a
	keyPressed (III)Z a
	keyReleased (III)Z b
	mouseClicked (DDI)Z a
	mouseDragged (DDIDD)Z a
	mouseReleased (DDI)Z c
	mouseScrolled (DDD)Z a
	refreshSearchResults ()V n
	removed ()V e
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V a
	renderBg (Lcom/mojang/blaze3d/vertex/PoseStack;FII)V a
	renderLabels (Lcom/mojang/blaze3d/vertex/PoseStack;II)V b
	renderTabButton (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/world/item/CreativeModeTab;)V a
	renderTooltip (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/world/item/ItemStack;II)V a
	resize (Lnet/minecraft/client/Minecraft;II)V a
	selectTab (Lnet/minecraft/world/item/CreativeModeTab;)V a
	slotClicked (Lnet/minecraft/world/inventory/Slot;IILnet/minecraft/world/inventory/ClickType;)V a
	tick ()V d
	updateVisibleTags (Ljava/lang/String;)V b
net/minecraft/client/gui/screens/inventory/CreativeModeInventoryScreen$CustomCreativeSlot dpz$a
	mayPickup (Lnet/minecraft/world/entity/player/Player;)Z a
net/minecraft/client/gui/screens/inventory/CreativeModeInventoryScreen$ItemPickerMenu dpz$b
	items c
	canDragTo (Lnet/minecraft/world/inventory/Slot;)Z b
	canScroll ()Z e
	canTakeItemForPickAll (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/inventory/Slot;)Z a
	quickMoveStack (Lnet/minecraft/world/entity/player/Player;I)Lnet/minecraft/world/item/ItemStack; b
	scrollTo (F)V a
	stillValid (Lnet/minecraft/world/entity/player/Player;)Z a
net/minecraft/client/gui/screens/inventory/CreativeModeInventoryScreen$SlotWrapper dpz$c
	target a
	getItem ()Lnet/minecraft/world/item/ItemStack; e
	getMaxStackSize ()I a
	getMaxStackSize (Lnet/minecraft/world/item/ItemStack;)I b
	getNoItemIcon ()Lcom/mojang/datafixers/util/Pair; c
	hasItem ()Z f
	isActive ()Z b
	isAt (Lnet/minecraft/world/Container;I)Z a
	mayPickup (Lnet/minecraft/world/entity/player/Player;)Z a
	mayPlace (Lnet/minecraft/world/item/ItemStack;)Z a
	onTake (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/item/ItemStack;)Lnet/minecraft/world/item/ItemStack; a
	remove (I)Lnet/minecraft/world/item/ItemStack; a
	set (Lnet/minecraft/world/item/ItemStack;)V d
	setChanged ()V d
	swap (Lnet/minecraft/world/inventory/Slot;)V a
net/minecraft/client/gui/screens/inventory/DispenserScreen dqa
	CONTAINER_LOCATION A
	init ()V b
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V a
	renderBg (Lcom/mojang/blaze3d/vertex/PoseStack;FII)V a
net/minecraft/client/gui/screens/inventory/EffectRenderingInventoryScreen dqb
	doRenderEffects A
	checkEffectRendering ()V k
	init ()V b
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V a
	renderBackgrounds (Lcom/mojang/blaze3d/vertex/PoseStack;IILjava/lang/Iterable;)V a
	renderEffects (Lcom/mojang/blaze3d/vertex/PoseStack;)V b
	renderIcons (Lcom/mojang/blaze3d/vertex/PoseStack;IILjava/lang/Iterable;)V b
	renderLabels (Lcom/mojang/blaze3d/vertex/PoseStack;IILjava/lang/Iterable;)V c
net/minecraft/client/gui/screens/inventory/EnchantmentNames dqc
	ALT_FONT a
	INSTANCE c
	ROOT_STYLE b
	random d
	words e
	getInstance ()Lnet/minecraft/client/gui/screens/inventory/EnchantmentNames; a
	getRandomName (Lnet/minecraft/client/gui/Font;I)Lnet/minecraft/network/chat/FormattedText; a
	initSeed (J)V a
net/minecraft/client/gui/screens/inventory/EnchantmentScreen dqd
	BOOK_MODEL J
	ENCHANTING_BOOK_LOCATION I
	ENCHANTING_TABLE_LOCATION H
	flip B
	flipA E
	flipT D
	last L
	oFlip C
	oOpen G
	open F
	random K
	time A
	mouseClicked (DDI)Z a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V a
	renderBg (Lcom/mojang/blaze3d/vertex/PoseStack;FII)V a
	tick ()V d
	tickBook ()V k
net/minecraft/client/gui/screens/inventory/FurnaceScreen dqe
	TEXTURE B
net/minecraft/client/gui/screens/inventory/GrindstoneScreen dqf
	GRINDSTONE_LOCATION A
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V a
	renderBg (Lcom/mojang/blaze3d/vertex/PoseStack;FII)V a
net/minecraft/client/gui/screens/inventory/HopperScreen dqg
	HOPPER_LOCATION A
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V a
	renderBg (Lcom/mojang/blaze3d/vertex/PoseStack;FII)V a
net/minecraft/client/gui/screens/inventory/HorseInventoryScreen dqh
	HORSE_INVENTORY_LOCATION A
	horse B
	xMouse C
	yMouse D
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V a
	renderBg (Lcom/mojang/blaze3d/vertex/PoseStack;FII)V a
net/minecraft/client/gui/screens/inventory/InventoryScreen dqi
	RECIPE_BUTTON_LOCATION B
	buttonClicked H
	recipeBookComponent E
	recipeBookComponentInitialized F
	widthTooNarrow G
	xMouse C
	yMouse D
	getRecipeBookComponent ()Lnet/minecraft/client/gui/screens/recipebook/RecipeBookComponent; l
	hasClickedOutside (DDIII)Z a
	init ()V b
	isHovering (IIIIDD)Z a
	mouseClicked (DDI)Z a
	mouseReleased (DDI)Z c
	recipesUpdated ()V az_
	removed ()V e
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V a
	renderBg (Lcom/mojang/blaze3d/vertex/PoseStack;FII)V a
	renderEntityInInventory (IIIFFLnet/minecraft/world/entity/LivingEntity;)V a
	renderLabels (Lcom/mojang/blaze3d/vertex/PoseStack;II)V b
	slotClicked (Lnet/minecraft/world/inventory/Slot;IILnet/minecraft/world/inventory/ClickType;)V a
	tick ()V d
net/minecraft/client/gui/screens/inventory/ItemCombinerScreen dqj
	menuResource A
	init ()V b
	refreshContainer (Lnet/minecraft/world/inventory/AbstractContainerMenu;Lnet/minecraft/core/NonNullList;)V a
	removed ()V e
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V a
	renderBg (Lcom/mojang/blaze3d/vertex/PoseStack;FII)V a
	renderFg (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V b
	setContainerData (Lnet/minecraft/world/inventory/AbstractContainerMenu;II)V a
	slotChanged (Lnet/minecraft/world/inventory/AbstractContainerMenu;ILnet/minecraft/world/item/ItemStack;)V a
	subInit ()V k
net/minecraft/client/gui/screens/inventory/JigsawBlockEditScreen dqk
	FINAL_STATE_LABEL q
	JOINT_LABEL a
	NAME_LABEL c
	POOL_LABEL b
	TARGET_LABEL p
	doneButton z
	finalStateEdit v
	jigsawEntity r
	joint A
	jointButton y
	keepJigsaws x
	levels w
	nameEdit s
	poolEdit u
	targetEdit t
	getJointText ()Lnet/minecraft/network/chat/Component; o
	init ()V b
	keyPressed (III)Z a
	onCancel ()V k
	onClose ()V au_
	onDone ()V i
	removed ()V e
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V a
	resize (Lnet/minecraft/client/Minecraft;II)V a
	sendGenerate ()V m
	sendToServer ()V l
	tick ()V d
	updateValidity ()V n
net/minecraft/client/gui/screens/inventory/LecternScreen dql
	listener p
	menu c
	bookChanged ()V p
	createMenuControls ()V k
	forcePage (I)Z b
	getMenu ()Lnet/minecraft/world/inventory/AbstractContainerMenu; i
	getMenu ()Lnet/minecraft/world/inventory/LecternMenu; o
	init ()V b
	isPauseScreen ()Z ay_
	onClose ()V au_
	pageBack ()V m
	pageChanged ()V r
	pageForward ()V n
	removed ()V e
	sendButtonClick (I)V c
net/minecraft/client/gui/screens/inventory/LoomScreen dqm
	BG_LOCATION A
	TOTAL_PATTERN_ROWS B
	bannerStack E
	displayPatterns H
	displaySpecialPattern I
	dyeStack F
	flag C
	hasMaxPatterns J
	patternStack G
	resultBannerPatterns D
	scrollOffs K
	scrolling L
	startIndex M
	containerChanged ()V k
	hasClickedOutside (DDIII)Z a
	mouseClicked (DDI)Z a
	mouseDragged (DDIDD)Z a
	mouseScrolled (DDD)Z a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V a
	renderBg (Lcom/mojang/blaze3d/vertex/PoseStack;FII)V a
	renderPattern (III)V c
net/minecraft/client/gui/screens/inventory/MenuAccess dqn
	getMenu ()Lnet/minecraft/world/inventory/AbstractContainerMenu; i
net/minecraft/client/gui/screens/inventory/MerchantScreen dqo
	DEPRECATED_TOOLTIP D
	LEVEL_SEPARATOR C
	TRADES_LABEL B
	VILLAGER_LOCATION A
	isDragging H
	scrollOff G
	shopItem E
	tradeOfferButtons F
	canScroll (I)Z a
	init ()V b
	mouseClicked (DDI)Z a
	mouseDragged (DDIDD)Z a
	mouseScrolled (DDD)Z a
	postButtonClick ()V k
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V a
	renderAndDecorateCostA (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/item/ItemStack;II)V a
	renderBg (Lcom/mojang/blaze3d/vertex/PoseStack;FII)V a
	renderButtonArrows (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/world/item/trading/MerchantOffer;II)V a
	renderLabels (Lcom/mojang/blaze3d/vertex/PoseStack;II)V b
	renderProgressBar (Lcom/mojang/blaze3d/vertex/PoseStack;IILnet/minecraft/world/item/trading/MerchantOffer;)V a
	renderScroller (Lcom/mojang/blaze3d/vertex/PoseStack;IILnet/minecraft/world/item/trading/MerchantOffers;)V a
net/minecraft/client/gui/screens/inventory/MerchantScreen$TradeOfferButton dqo$a
	index a
	getIndex ()I a
	renderToolTip (Lcom/mojang/blaze3d/vertex/PoseStack;II)V a
net/minecraft/client/gui/screens/inventory/MinecartCommandBlockEditScreen dqp
	commandBlock s
	getCommandBlock ()Lnet/minecraft/world/level/BaseCommandBlock; i
	getPreviousY ()I k
	init ()V b
	populateAndSendPacket (Lnet/minecraft/world/level/BaseCommandBlock;)V a
net/minecraft/client/gui/screens/inventory/PageButton dqq
	isForward a
	playTurnSound b
	playDownSound (Lnet/minecraft/client/sounds/SoundManager;)V a
	renderButton (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V b
net/minecraft/client/gui/screens/inventory/ShulkerBoxScreen dqr
	CONTAINER_TEXTURE A
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V a
	renderBg (Lcom/mojang/blaze3d/vertex/PoseStack;FII)V a
net/minecraft/client/gui/screens/inventory/SignEditScreen dqs
	frame c
	line p
	messages r
	sign b
	signField q
	signModel a
	charTyped (CI)Z a
	init ()V b
	keyPressed (III)Z a
	onClose ()V au_
	onDone ()V i
	removed ()V e
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V a
	tick ()V d
net/minecraft/client/gui/screens/inventory/SmithingScreen dqt
	SMITHING_LOCATION A
	renderLabels (Lcom/mojang/blaze3d/vertex/PoseStack;II)V b
net/minecraft/client/gui/screens/inventory/SmokerScreen dqu
	TEXTURE B
net/minecraft/client/gui/screens/inventory/StonecutterScreen dqv
	BG_LOCATION A
	displayRecipes E
	scrollOffs B
	scrolling C
	startIndex D
	containerChanged ()V m
	getOffscreenRows ()I k
	isScrollBarActive ()Z l
	mouseClicked (DDI)Z a
	mouseDragged (DDIDD)Z a
	mouseScrolled (DDD)Z a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V a
	renderBg (Lcom/mojang/blaze3d/vertex/PoseStack;FII)V a
	renderButtons (Lcom/mojang/blaze3d/vertex/PoseStack;IIIII)V b
	renderRecipes (III)V c
	renderTooltip (Lcom/mojang/blaze3d/vertex/PoseStack;II)V a
net/minecraft/client/gui/screens/inventory/StructureBlockEditScreen dqw
	CUSTOM_DATA_LABEL q
	DETECT_SIZE_LABEL s
	INCLUDE_ENTITIES_LABEL r
	INTEGRITY_LABEL p
	NAME_LABEL a
	POSITION_LABEL b
	SHOW_AIR_LABEL t
	SHOW_BOUNDING_BOX_LABEL u
	SIZE_LABEL c
	cancelButton N
	dataEdit L
	decimalFormat aa
	detectButton V
	doneButton M
	entitiesButton W
	initialEntityIgnoring z
	initialMirror w
	initialMode y
	initialRotation x
	initialShowAir A
	initialShowBoundingBox B
	integrityEdit J
	loadButton P
	mirrorButton X
	modeButton U
	nameEdit C
	posXEdit D
	posYEdit E
	posZEdit F
	rot0Button Q
	rot180Button S
	rot270Button T
	rot90Button R
	saveButton O
	seedEdit K
	sizeXEdit G
	sizeYEdit H
	sizeZEdit I
	structure v
	toggleAirButton Y
	toggleBoundingBox Z
	init ()V b
	isPauseScreen ()Z ay_
	keyPressed (III)Z a
	onCancel ()V k
	onClose ()V au_
	onDone ()V i
	parseCoordinate (Ljava/lang/String;)I d
	parseIntegrity (Ljava/lang/String;)F c
	parseSeed (Ljava/lang/String;)J b
	removed ()V e
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V a
	resize (Lnet/minecraft/client/Minecraft;II)V a
	sendToServer (Lnet/minecraft/world/level/block/entity/StructureBlockEntity$UpdateType;)Z a
	tick ()V d
	updateDirectionButtons ()V p
	updateEntitiesButton ()V l
	updateMirrorButton ()V o
	updateMode ()V r
	updateToggleAirButton ()V m
	updateToggleBoundingBox ()V n
net/minecraft/client/gui/screens/multiplayer/JoinMultiplayerScreen dqz
	LOGGER b
	deleteButton t
	editButton r
	editingServer v
	initedOnce y
	lanServerDetector x
	lanServerList w
	lastScreen p
	pinger c
	selectButton s
	serverSelectionList a
	servers q
	toolTip u
	addServerCallback (Z)V e
	deleteCallback (Z)V c
	directJoinCallback (Z)V f
	editServerCallback (Z)V d
	getPinger ()Lnet/minecraft/client/multiplayer/ServerStatusPinger; l
	getServers ()Lnet/minecraft/client/multiplayer/ServerList; m
	init ()V b
	join (Lnet/minecraft/client/multiplayer/ServerData;)V a
	joinSelectedServer ()V i
	keyPressed (III)Z a
	onSelectedChange ()V k
	refreshServerList ()V n
	removed ()V e
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V a
	setSelected (Lnet/minecraft/client/gui/screens/multiplayer/ServerSelectionList$Entry;)V a
	setToolTip (Ljava/util/List;)V b
	tick ()V d
net/minecraft/client/gui/screens/multiplayer/SafetyScreen dra
	CHECK p
	CONTENT c
	NARRATION q
	TITLE b
	message s
	previous a
	stopShowing r
	getNarrationMessage ()Ljava/lang/String; as_
	init ()V b
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V a
net/minecraft/client/gui/screens/multiplayer/ServerSelectionList drb
	CANT_CONNECT_TEXT t
	CANT_RESOLVE_TEXT s
	CLIENT_OUT_OF_DATE_TOOLTIP u
	ICON_MISSING p
	ICON_OVERLAY_LOCATION q
	LOGGER a
	NO_CONNECTION_TOOLTIP w
	PINGING_TOOLTIP x
	SCANNING_LABEL r
	SERVER_OUT_OF_DATE_TOOLTIP v
	THREAD_POOL o
	lanHeader A
	networkServers B
	onlineServers z
	screen y
	getRowWidth ()I d
	getScrollbarPosition ()I e
	isFocused ()Z b
	keyPressed (III)Z a
	moveSelection (Lnet/minecraft/client/gui/components/AbstractSelectionList$SelectionDirection;)V a
	refreshEntries ()V B
	setSelected (Lnet/minecraft/client/gui/components/AbstractSelectionList$Entry;)V a
	setSelected (Lnet/minecraft/client/gui/screens/multiplayer/ServerSelectionList$Entry;)V a
	updateNetworkServers (Ljava/util/List;)V a
	updateOnlineServers (Lnet/minecraft/client/multiplayer/ServerList;)V a
net/minecraft/client/gui/screens/multiplayer/ServerSelectionList$Entry drb$a
net/minecraft/client/gui/screens/multiplayer/ServerSelectionList$LANHeader drb$b
	minecraft a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIIIIIIZF)V a
net/minecraft/client/gui/screens/multiplayer/ServerSelectionList$NetworkServerEntry drb$c
	HIDDEN_ADDRESS_TEXT d
	LAN_SERVER_HEADER c
	lastClickTime f
	minecraft a
	screen e
	serverData b
	getServerData ()Lnet/minecraft/client/server/LanServer; a
	mouseClicked (DDI)Z a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIIIIIIZF)V a
net/minecraft/client/gui/screens/multiplayer/ServerSelectionList$OnlineServerEntry drb$d
	icon g
	iconLocation e
	lastClickTime h
	lastIconB64 f
	minecraft c
	screen b
	serverData d
	canJoin ()Z c
	drawIcon (Lcom/mojang/blaze3d/vertex/PoseStack;IILnet/minecraft/resources/ResourceLocation;)V a
	getServerData ()Lnet/minecraft/client/multiplayer/ServerData; b
	keyPressed (III)Z a
	mouseClicked (DDI)Z a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIIIIIIZF)V a
	swap (II)V a
	updateServerList ()V a
	uploadServerIcon (Ljava/lang/String;)Z a
net/minecraft/client/gui/screens/packs/PackSelectionModel dre
	iconGetter d
	onListChanged e
	output f
	repository a
	selected b
	unselected c
	commit ()V c
	findNewPacks ()V d
	getSelected ()Ljava/util/stream/Stream; b
	getUnselected ()Ljava/util/stream/Stream; a
net/minecraft/client/gui/screens/packs/PackSelectionModel$Entry dre$a
	canMoveDown ()Z q
	canMoveUp ()Z p
	canSelect ()Z n
	canUnselect ()Z o
	getCompatibility ()Lnet/minecraft/server/packs/repository/PackCompatibility; b
	getDescription ()Lnet/minecraft/network/chat/Component; d
	getExtendedDescription ()Lnet/minecraft/network/chat/Component; f
	getIconTexture ()Lnet/minecraft/resources/ResourceLocation; a
	getPackSource ()Lnet/minecraft/server/packs/repository/PackSource; e
	getTitle ()Lnet/minecraft/network/chat/Component; c
	isFixedPosition ()Z g
	isRequired ()Z h
	isSelected ()Z m
	moveDown ()V l
	moveUp ()V k
	select ()V i
	unselect ()V j
net/minecraft/client/gui/screens/packs/PackSelectionModel$EntryBase dre$b
	pack b
	canMoveDown ()Z q
	canMoveUp ()Z p
	getCompatibility ()Lnet/minecraft/server/packs/repository/PackCompatibility; b
	getDescription ()Lnet/minecraft/network/chat/Component; d
	getIconTexture ()Lnet/minecraft/resources/ResourceLocation; a
	getOtherList ()Ljava/util/List; s
	getPackSource ()Lnet/minecraft/server/packs/repository/PackSource; e
	getSelfList ()Ljava/util/List; r
	getTitle ()Lnet/minecraft/network/chat/Component; c
	isFixedPosition ()Z g
	isRequired ()Z h
	move (I)V a
	moveDown ()V l
	moveUp ()V k
	toggleSelection ()V t
net/minecraft/client/gui/screens/packs/PackSelectionModel$SelectedPackEntry dre$c
	getOtherList ()Ljava/util/List; s
	getSelfList ()Ljava/util/List; r
	isSelected ()Z m
	select ()V i
	unselect ()V j
net/minecraft/client/gui/screens/packs/PackSelectionModel$UnselectedPackEntry dre$d
	getOtherList ()Ljava/util/List; s
	getSelfList ()Ljava/util/List; r
	isSelected ()Z m
	select ()V i
	unselect ()V j
net/minecraft/client/gui/screens/packs/PackSelectionScreen drf
	DEFAULT_ICON p
	DIRECTORY_BUTTON_TOOLTIP c
	DRAG_AND_DROP b
	LOGGER a
	availablePackList u
	doneButton x
	lastScreen r
	model q
	packDir w
	packIcons y
	selectedPackList v
	ticksToReload t
	watcher s
	closeWatcher ()V k
	copyPacks (Lnet/minecraft/client/Minecraft;Ljava/util/List;Ljava/nio/file/Path;)V a
	getPackIcon (Lnet/minecraft/server/packs/repository/Pack;)Lnet/minecraft/resources/ResourceLocation; a
	init ()V b
	loadPackIcon (Lnet/minecraft/client/renderer/texture/TextureManager;Lnet/minecraft/server/packs/repository/Pack;)Lnet/minecraft/resources/ResourceLocation; a
	onClose ()V au_
	onFilesDrop (Ljava/util/List;)V a
	populateLists ()V l
	reload ()V m
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V a
	tick ()V d
	updateList (Lnet/minecraft/client/gui/screens/packs/TransferableSelectionList;Ljava/util/stream/Stream;)V a
net/minecraft/client/gui/screens/packs/PackSelectionScreen$Watcher drf$a
	packPath b
	watcher a
	create (Ljava/io/File;)Lnet/minecraft/client/gui/screens/packs/PackSelectionScreen$Watcher; a
	pollForChanges ()Z a
	watchDir (Ljava/nio/file/Path;)V a
net/minecraft/client/gui/screens/packs/TransferableSelectionList drg
	ICON_OVERLAY_LOCATION a
	INCOMPATIBLE_CONFIRM_TITLE p
	INCOMPATIBLE_TITLE o
	title q
	getRowWidth ()I d
	getScrollbarPosition ()I e
	renderHeader (Lcom/mojang/blaze3d/vertex/PoseStack;IILcom/mojang/blaze3d/vertex/Tesselator;)V a
net/minecraft/client/gui/screens/packs/TransferableSelectionList$PackEntry drg$a
	descriptionDisplayCache f
	incompatibleDescriptionDisplayCache h
	incompatibleNameDisplayCache g
	minecraft a
	nameDisplayCache e
	pack d
	parent c
	screen b
	cacheDescription (Lnet/minecraft/client/Minecraft;Lnet/minecraft/network/chat/Component;)Lnet/minecraft/client/gui/components/MultiLineLabel; b
	cacheName (Lnet/minecraft/client/Minecraft;Lnet/minecraft/network/chat/Component;)Lnet/minecraft/util/FormattedCharSequence; a
	mouseClicked (DDI)Z a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIIIIIIZF)V a
	showHoverOverlay ()Z a
net/minecraft/client/gui/screens/recipebook/AbstractFurnaceRecipeBookComponent dri
	fuel l
	fuelSlot k
	fuels j
	iterator i
	time m
	getFuel ()Lnet/minecraft/world/item/Item; j
	getFuelItems ()Ljava/util/Set; b
	initFilterButtonTextures ()V a
	renderGhostRecipe (Lcom/mojang/blaze3d/vertex/PoseStack;IIZF)V a
	setupGhostRecipe (Lnet/minecraft/world/item/crafting/Recipe;Ljava/util/List;)V a
	slotClicked (Lnet/minecraft/world/inventory/Slot;)V a
net/minecraft/client/gui/screens/recipebook/BlastingRecipeBookComponent drj
	FILTER_NAME i
	getFuelItems ()Ljava/util/Set; b
	getRecipeFilterName ()Lnet/minecraft/network/chat/Component; c
net/minecraft/client/gui/screens/recipebook/GhostRecipe drk
	ingredients b
	recipe a
	time c
	addIngredient (Lnet/minecraft/world/item/crafting/Ingredient;II)V a
	clear ()V a
	get (I)Lnet/minecraft/client/gui/screens/recipebook/GhostRecipe$GhostIngredient; a
	getRecipe ()Lnet/minecraft/world/item/crafting/Recipe; c
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/Minecraft;IIZF)V a
	setRecipe (Lnet/minecraft/world/item/crafting/Recipe;)V a
	size ()I b
net/minecraft/client/gui/screens/recipebook/GhostRecipe$GhostIngredient drk$a
	ingredient b
	x c
	y d
	getItem ()Lnet/minecraft/world/item/ItemStack; c
	getX ()I a
	getY ()I b
net/minecraft/client/gui/screens/recipebook/OverlayRecipeComponent drl
	RECIPE_BOOK_LOCATION a
	collection j
	isFurnaceMenu m
	isVisible c
	lastRecipeClicked k
	minecraft i
	recipeButtons b
	time l
	x d
	y e
	changeFocus (Z)Z c_
	getLastRecipeClicked ()Lnet/minecraft/world/item/crafting/Recipe; b
	getRecipeCollection ()Lnet/minecraft/client/gui/screens/recipebook/RecipeCollection; a
	init (Lnet/minecraft/client/Minecraft;Lnet/minecraft/client/gui/screens/recipebook/RecipeCollection;IIIIF)V a
	isMouseOver (DD)Z b
	isVisible ()Z c
	mouseClicked (DDI)Z a
	nineInchSprite (Lcom/mojang/blaze3d/vertex/PoseStack;IIIIII)V c
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V a
	setVisible (Z)V a
net/minecraft/client/gui/screens/recipebook/OverlayRecipeComponent$OverlayRecipeButton drl$a
	ingredientPos a
	isCraftable d
	recipe c
	addItemToSlot (Ljava/util/Iterator;IIII)V a
	calculateIngredientsPositions (Lnet/minecraft/world/item/crafting/Recipe;)V a
	renderButton (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V b
net/minecraft/client/gui/screens/recipebook/OverlayRecipeComponent$OverlayRecipeButton$Pos drl$a$a
	ingredients a
	x b
	y c
net/minecraft/client/gui/screens/recipebook/OverlayRecipeComponent$OverlaySmeltingRecipeButton drl$b
	calculateIngredientsPositions (Lnet/minecraft/world/item/crafting/Recipe;)V a
net/minecraft/client/gui/screens/recipebook/RecipeBookComponent drm
	ALL_RECIPES_TOOLTIP k
	ONLY_CRAFTABLES_TOOLTIP j
	RECIPE_BOOK_LOCATION a
	SEARCH_HINT i
	book s
	filterButton c
	ghostRecipe b
	height n
	ignoreTextInput w
	lastSearch r
	menu d
	minecraft e
	recipeBookPage t
	searchBox q
	selectedTab p
	stackedContents u
	tabButtons o
	timesInventoryChanged v
	width m
	xOffset l
	addItemToSlot (Ljava/util/Iterator;IIII)V a
	changeFocus (Z)Z c_
	charTyped (CI)Z a
	checkSearchStringUpdate ()V m
	getFilterButtonTooltip ()Lnet/minecraft/network/chat/Component; k
	getRecipeFilterName ()Lnet/minecraft/network/chat/Component; c
	hasClickedOutside (DDIIIII)Z a
	init (IILnet/minecraft/client/Minecraft;ZLnet/minecraft/world/inventory/RecipeBookMenu;)V a
	initFilterButtonTextures ()V a
	initVisuals (Z)V a
	isMouseOver (DD)Z b
	isOffsetNextToMainGUI ()Z n
	isVisible ()Z f
	keyPressed (III)Z a
	keyReleased (III)Z b
	mouseClicked (DDI)Z a
	pirateSpeechForThePeople (Ljava/lang/String;)V a
	recipesShown (Ljava/util/List;)V a
	recipesUpdated ()V h
	removed ()V d
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V a
	renderGhostRecipe (Lcom/mojang/blaze3d/vertex/PoseStack;IIZF)V a
	renderGhostRecipeTooltip (Lcom/mojang/blaze3d/vertex/PoseStack;IIII)V d
	renderTooltip (Lcom/mojang/blaze3d/vertex/PoseStack;IIII)V c
	sendUpdateSettings ()V i
	setVisible (Z)V c
	setupGhostRecipe (Lnet/minecraft/world/item/crafting/Recipe;Ljava/util/List;)V a
	slotClicked (Lnet/minecraft/world/inventory/Slot;)V a
	tick ()V g
	toggleFiltering ()Z l
	toggleVisibility ()V e
	updateCollections (Z)V d
	updateScreenPosition (ZII)I a
	updateStackedContents ()V j
	updateTabs ()V b
net/minecraft/client/gui/screens/recipebook/RecipeBookPage drn
	backButton h
	buttons a
	currentPage j
	forwardButton g
	hoveredButton b
	lastClickedRecipe l
	lastClickedRecipeCollection m
	minecraft d
	overlay c
	recipeBook k
	recipeCollections f
	showListeners e
	totalPages i
	addListener (Lnet/minecraft/client/gui/screens/recipebook/RecipeBookComponent;)V a
	getLastClickedRecipe ()Lnet/minecraft/world/item/crafting/Recipe; a
	getLastClickedRecipeCollection ()Lnet/minecraft/client/gui/screens/recipebook/RecipeCollection; b
	getMinecraft ()Lnet/minecraft/client/Minecraft; d
	getRecipeBook ()Lnet/minecraft/stats/RecipeBook; e
	init (Lnet/minecraft/client/Minecraft;II)V a
	mouseClicked (DDIIIII)Z a
	recipesShown (Ljava/util/List;)V a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIIIF)V a
	renderTooltip (Lcom/mojang/blaze3d/vertex/PoseStack;II)V a
	setInvisible ()V c
	updateArrowButtons ()V g
	updateButtonsForPage ()V f
	updateCollections (Ljava/util/List;Z)V a
net/minecraft/client/gui/screens/recipebook/RecipeBookTabButton dro
	animationTime u
	category t
	getCategory ()Lnet/minecraft/client/RecipeBookCategories; b
	renderButton (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V b
	renderIcon (Lnet/minecraft/client/renderer/entity/ItemRenderer;)V a
	startAnimation (Lnet/minecraft/client/Minecraft;)V a
	updateVisibility (Lnet/minecraft/client/ClientRecipeBook;)Z a
net/minecraft/client/gui/screens/recipebook/RecipeButton drp
	MORE_RECIPES_TOOLTIP b
	RECIPE_BOOK_LOCATION a
	animationTime t
	book d
	collection e
	currentIndex u
	menu c
	time s
	getCollection ()Lnet/minecraft/client/gui/screens/recipebook/RecipeCollection; a
	getOrderedRecipes ()Ljava/util/List; k
	getRecipe ()Lnet/minecraft/world/item/crafting/Recipe; d
	getTooltipText (Lnet/minecraft/client/gui/screens/Screen;)Ljava/util/List; a
	getWidth ()I h
	init (Lnet/minecraft/client/gui/screens/recipebook/RecipeCollection;Lnet/minecraft/client/gui/screens/recipebook/RecipeBookPage;)V a
	isOnlyOption ()Z b
	isValidClickButton (I)Z a
	renderButton (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V b
	setPosition (II)V a
net/minecraft/client/gui/screens/recipebook/RecipeCollection drq
	craftable c
	fitsDimensions d
	known e
	recipes a
	singleResultItem b
	allRecipesHaveSameResult (Ljava/util/List;)Z a
	canCraft (Lnet/minecraft/world/entity/player/StackedContents;IILnet/minecraft/stats/RecipeBook;)V a
	getDisplayRecipes (Z)Ljava/util/List; b
	getRecipes ()Ljava/util/List; d
	getRecipes (Z)Ljava/util/List; a
	hasCraftable ()Z b
	hasFitting ()Z c
	hasKnownRecipes ()Z a
	hasSingleResultItem ()Z e
	isCraftable (Lnet/minecraft/world/item/crafting/Recipe;)Z a
	updateKnownRecipes (Lnet/minecraft/stats/RecipeBook;)V a
net/minecraft/client/gui/screens/recipebook/RecipeShownListener drr
	recipesShown (Ljava/util/List;)V a
net/minecraft/client/gui/screens/recipebook/RecipeUpdateListener drs
	getRecipeBookComponent ()Lnet/minecraft/client/gui/screens/recipebook/RecipeBookComponent; l
	recipesUpdated ()V az_
net/minecraft/client/gui/screens/recipebook/SmeltingRecipeBookComponent drt
	FILTER_NAME i
	getFuelItems ()Ljava/util/Set; b
	getRecipeFilterName ()Lnet/minecraft/network/chat/Component; c
net/minecraft/client/gui/screens/recipebook/SmokingRecipeBookComponent dru
	FILTER_NAME i
	getFuelItems ()Ljava/util/Set; b
	getRecipeFilterName ()Lnet/minecraft/network/chat/Component; c
net/minecraft/client/gui/screens/worldselection/CreateWorldScreen drx
	COMMANDS_INFO v
	GAME_MODEL_LABEL q
	LOGGER p
	NAME_LABEL t
	OUTPUT_DIR_INFO u
	SEED_INFO s
	SEED_LABEL r
	commands D
	commandsButton O
	commandsChanged E
	createButton I
	dataPacks b
	dataPacksButton N
	difficultyButton K
	displayOptions H
	effectiveDifficulty C
	gameMode z
	gameModeHelp1 P
	gameModeHelp2 Q
	gameRules S
	gameRulesButton M
	hardCore a
	initName R
	lastScreen w
	modeButton J
	moreOptionsButton L
	nameEdit x
	oldGameMode A
	resultFolder y
	selectedDifficulty B
	tempDataPackDir F
	tempDataPackRepository G
	worldGenSettingsComponent c
	addButton (Lnet/minecraft/client/gui/components/AbstractWidget;)Lnet/minecraft/client/gui/components/AbstractWidget; a
	addWidget (Lnet/minecraft/client/gui/components/events/GuiEventListener;)Lnet/minecraft/client/gui/components/events/GuiEventListener; d
	cleanupTempResources ()V s
	copyBetweenDirs (Ljava/nio/file/Path;Ljava/nio/file/Path;Ljava/nio/file/Path;)V a
	copyTempDataPackDirToNewWorld ()Z A
	create (Lnet/minecraft/client/gui/screens/Screen;)Lnet/minecraft/client/gui/screens/worldselection/CreateWorldScreen; a
	createTempDataPackDirFromExistingWorld (Ljava/nio/file/Path;Lnet/minecraft/client/Minecraft;)Ljava/nio/file/Path; a
	getDataPackSelectionSettings ()Lcom/mojang/datafixers/util/Pair; B
	getTempDataPackDir ()Ljava/nio/file/Path; l
	init ()V b
	keyPressed (III)Z a
	onClose ()V au_
	onCreate ()V p
	openDataPackSelectionScreen ()V t
	popScreen ()V k
	removeTempDataPackDir ()V u
	removed ()V e
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V a
	setDisplayOptions (Z)V c
	setGameMode (Lnet/minecraft/client/gui/screens/worldselection/CreateWorldScreen$SelectedGameMode;)V a
	tick ()V d
	toggleDisplayOptions ()V r
	tryApplyNewDataPacks (Lnet/minecraft/server/packs/repository/PackRepository;)V a
	updateDisplayOptions ()V i
	updateGameModeHelp ()V n
	updateResultFolder ()V o
net/minecraft/client/gui/screens/worldselection/CreateWorldScreen$OperationFailedException drx$a
net/minecraft/client/gui/screens/worldselection/CreateWorldScreen$SelectedGameMode drx$b
	$VALUES g
	CREATIVE c
	DEBUG d
	HARDCORE b
	SURVIVAL a
	gameType f
	name e
net/minecraft/client/gui/screens/worldselection/EditGameRulesScreen dry
	doneButton p
	exitCallback a
	gameRules r
	invalidEntries c
	rules b
	tooltip q
	clearInvalid (Lnet/minecraft/client/gui/screens/worldselection/EditGameRulesScreen$RuleEntry;)V b
	init ()V b
	markInvalid (Lnet/minecraft/client/gui/screens/worldselection/EditGameRulesScreen$RuleEntry;)V a
	onClose ()V au_
	removed ()V e
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V a
	setTooltip (Ljava/util/List;)V b
	updateDoneButton ()V i
net/minecraft/client/gui/screens/worldselection/EditGameRulesScreen$BooleanRuleEntry dry$a
	checkbox e
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIIIIIIZF)V a
net/minecraft/client/gui/screens/worldselection/EditGameRulesScreen$CategoryRuleEntry dry$b
	label b
	children ()Ljava/util/List; av_
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIIIIIIZF)V a
net/minecraft/client/gui/screens/worldselection/EditGameRulesScreen$EntryFactory dry$c
net/minecraft/client/gui/screens/worldselection/EditGameRulesScreen$GameRuleEntry dry$d
	children b
	label a
	children ()Ljava/util/List; av_
	renderLabel (Lcom/mojang/blaze3d/vertex/PoseStack;II)V a
net/minecraft/client/gui/screens/worldselection/EditGameRulesScreen$IntegerRuleEntry dry$e
	input e
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIIIIIIZF)V a
net/minecraft/client/gui/screens/worldselection/EditGameRulesScreen$RuleEntry dry$f
	tooltip a
net/minecraft/client/gui/screens/worldselection/EditGameRulesScreen$RuleList dry$g
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V a
net/minecraft/client/gui/screens/worldselection/EditWorldScreen drz
	LOGGER a
	NAME_LABEL c
	WORLD_GEN_SETTINGS_GSON b
	callback q
	levelAccess s
	nameEdit r
	renameButton p
	init ()V b
	makeBackupAndShowToast (Lnet/minecraft/world/level/storage/LevelStorageSource$LevelStorageAccess;)Z a
	makeBackupAndShowToast (Lnet/minecraft/world/level/storage/LevelStorageSource;Ljava/lang/String;)V a
	onClose ()V au_
	onRename ()V i
	removed ()V e
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V a
	resize (Lnet/minecraft/client/Minecraft;II)V a
	tick ()V d
net/minecraft/client/gui/screens/worldselection/OptimizeWorldScreen dsa
	DIMENSION_COLORS b
	LOGGER a
	callback c
	upgrader p
	create (Lnet/minecraft/client/Minecraft;Lit/unimi/dsi/fastutil/booleans/BooleanConsumer;Lcom/mojang/datafixers/DataFixer;Lnet/minecraft/world/level/storage/LevelStorageSource$LevelStorageAccess;Z)Lnet/minecraft/client/gui/screens/worldselection/OptimizeWorldScreen; a
	init ()V b
	onClose ()V au_
	removed ()V e
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V a
	tick ()V d
net/minecraft/client/gui/screens/worldselection/SelectWorldScreen dsb
	copyButton s
	deleteButton p
	lastScreen a
	list t
	renameButton r
	searchBox b
	selectButton q
	toolTip c
	charTyped (CI)Z a
	init ()V b
	keyPressed (III)Z a
	mouseScrolled (DDD)Z a
	onClose ()V au_
	removed ()V e
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V a
	setToolTip (Ljava/util/List;)V b
	tick ()V d
	updateButtonStatus (Z)V c
net/minecraft/client/gui/screens/worldselection/WorldGenSettingsComponent dsc
	AMPLIFIED_HELP_TEXT d
	CUSTOM_WORLD_DESCRIPTION c
	LOGGER b
	MAP_FEATURES_INFO e
	amplifiedWorldInfo f
	bonusItemsButton a
	customizeTypeButton l
	featuresButton j
	font g
	importSettingsButton m
	preset p
	registryHolder n
	seed q
	seedEdit i
	settings o
	typeButton k
	width h
	importSettings (Lnet/minecraft/core/RegistryAccess$RegistryHolder;Lnet/minecraft/world/level/levelgen/WorldGenSettings;)V a
	init (Lnet/minecraft/client/gui/screens/worldselection/CreateWorldScreen;Lnet/minecraft/client/Minecraft;Lnet/minecraft/client/gui/Font;)V a
	isDebug ()Z a
	makeSettings (Z)Lnet/minecraft/world/level/levelgen/WorldGenSettings; a
	parseLong (Ljava/lang/String;)Ljava/util/OptionalLong; a
	parseSeed ()Ljava/util/OptionalLong; f
	registryHolder ()Lnet/minecraft/core/RegistryAccess$RegistryHolder; b
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V a
	setDisplayOptions (Z)V b
	tick ()V d
	toString (Ljava/util/OptionalLong;)Ljava/lang/String; a
	updateDataPacks (Lnet/minecraft/server/ServerResources;)V a
	updateSettings (Lnet/minecraft/world/level/levelgen/WorldGenSettings;)V a
net/minecraft/client/gui/screens/worldselection/WorldPreset dsd
	AMPLIFIED b
	DEBUG j
	EDITORS d
	FLAT e
	LARGE_BIOMES f
	NORMAL a
	PRESETS c
	SINGLE_BIOME_CAVES h
	SINGLE_BIOME_FLOATING_ISLANDS i
	SINGLE_BIOME_SURFACE g
	description k
	create (Lnet/minecraft/core/RegistryAccess$RegistryHolder;JZZ)Lnet/minecraft/world/level/levelgen/WorldGenSettings; a
	description ()Lnet/minecraft/network/chat/Component; a
	fromBuffetSettings (Lnet/minecraft/core/RegistryAccess;Lnet/minecraft/world/level/levelgen/WorldGenSettings;Lnet/minecraft/client/gui/screens/worldselection/WorldPreset;Lnet/minecraft/world/level/biome/Biome;)Lnet/minecraft/world/level/levelgen/WorldGenSettings; a
	generator (Lnet/minecraft/core/Registry;Lnet/minecraft/core/Registry;J)Lnet/minecraft/world/level/chunk/ChunkGenerator; a
	of (Lnet/minecraft/world/level/levelgen/WorldGenSettings;)Ljava/util/Optional; a
	parseBuffetSettings (Lnet/minecraft/core/RegistryAccess;Lnet/minecraft/world/level/levelgen/WorldGenSettings;)Lnet/minecraft/world/level/biome/Biome; a
net/minecraft/client/gui/screens/worldselection/WorldPreset$PresetEditor dsd$a
net/minecraft/client/gui/screens/worldselection/WorldSelectionList dse
	DATE_FORMAT o
	FROM_NEWER_TOOLTIP_1 r
	FROM_NEWER_TOOLTIP_2 s
	ICON_MISSING p
	ICON_OVERLAY_LOCATION q
	LOGGER a
	SNAPSHOT_TOOLTIP_1 t
	SNAPSHOT_TOOLTIP_2 u
	WORLD_LOCKED_TOOLTIP v
	cachedList x
	screen w
	getRowWidth ()I d
	getScreen ()Lnet/minecraft/client/gui/screens/worldselection/SelectWorldScreen; g
	getScrollbarPosition ()I e
	getSelectedOpt ()Ljava/util/Optional; f
	isFocused ()Z b
	moveSelection (Lnet/minecraft/client/gui/components/AbstractSelectionList$SelectionDirection;)V a
	refreshList (Ljava/util/function/Supplier;Z)V a
	setSelected (Lnet/minecraft/client/gui/components/AbstractSelectionList$Entry;)V a
	setSelected (Lnet/minecraft/client/gui/screens/worldselection/WorldSelectionList$WorldListEntry;)V a
net/minecraft/client/gui/screens/worldselection/WorldSelectionList$WorldListEntry dse$a
	icon g
	iconFile f
	iconLocation e
	lastClickTime h
	minecraft b
	screen c
	summary d
	deleteWorld ()V b
	editWorld ()V c
	joinWorld ()V a
	loadServerIcon ()Lnet/minecraft/client/renderer/texture/DynamicTexture; g
	loadWorld ()V e
	mouseClicked (DDI)Z a
	queueLoadScreen ()V f
	recreateWorld ()V d
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIIIIIIZF)V a
net/minecraft/client/gui/spectator/PlayerMenuItem dsg
	location b
	name c
	profile a
	getName ()Lnet/minecraft/network/chat/Component; aA_
	isEnabled ()Z aB_
	renderIcon (Lcom/mojang/blaze3d/vertex/PoseStack;FI)V a
	selectItem (Lnet/minecraft/client/gui/spectator/SpectatorMenu;)V a
net/minecraft/client/gui/spectator/RootSpectatorMenuCategory dsh
	PROMPT_TEXT a
	items b
	getItems ()Ljava/util/List; a
	getPrompt ()Lnet/minecraft/network/chat/Component; b
net/minecraft/client/gui/spectator/SpectatorMenu dsi
	CLOSE_ITEM b
	CLOSE_MENU_TEXT f
	EMPTY_SLOT a
	NEXT_PAGE_TEXT h
	PREVIOUS_PAGE_TEXT g
	SCROLL_LEFT c
	SCROLL_RIGHT_DISABLED e
	SCROLL_RIGHT_ENABLED d
	category j
	listener i
	page l
	selectedSlot k
	exit ()V d
	getCurrentPage ()Lnet/minecraft/client/gui/spectator/categories/SpectatorPage; f
	getItem (I)Lnet/minecraft/client/gui/spectator/SpectatorMenuItem; a
	getItems ()Ljava/util/List; a
	getSelectedCategory ()Lnet/minecraft/client/gui/spectator/SpectatorMenuCategory; c
	getSelectedItem ()Lnet/minecraft/client/gui/spectator/SpectatorMenuItem; b
	getSelectedSlot ()I e
	selectCategory (Lnet/minecraft/client/gui/spectator/SpectatorMenuCategory;)V a
	selectSlot (I)V b
net/minecraft/client/gui/spectator/SpectatorMenu$CloseSpectatorItem dsi$a
	getName ()Lnet/minecraft/network/chat/Component; aA_
	isEnabled ()Z aB_
	renderIcon (Lcom/mojang/blaze3d/vertex/PoseStack;FI)V a
	selectItem (Lnet/minecraft/client/gui/spectator/SpectatorMenu;)V a
net/minecraft/client/gui/spectator/SpectatorMenu$ScrollMenuItem dsi$b
	direction a
	enabled b
	getName ()Lnet/minecraft/network/chat/Component; aA_
	isEnabled ()Z aB_
	renderIcon (Lcom/mojang/blaze3d/vertex/PoseStack;FI)V a
	selectItem (Lnet/minecraft/client/gui/spectator/SpectatorMenu;)V a
net/minecraft/client/gui/spectator/SpectatorMenuCategory dsj
	getItems ()Ljava/util/List; a
	getPrompt ()Lnet/minecraft/network/chat/Component; b
net/minecraft/client/gui/spectator/SpectatorMenuItem dsk
	getName ()Lnet/minecraft/network/chat/Component; aA_
	isEnabled ()Z aB_
	renderIcon (Lcom/mojang/blaze3d/vertex/PoseStack;FI)V a
	selectItem (Lnet/minecraft/client/gui/spectator/SpectatorMenu;)V a
net/minecraft/client/gui/spectator/SpectatorMenuListener dsl
	onSpectatorMenuClosed (Lnet/minecraft/client/gui/spectator/SpectatorMenu;)V a
net/minecraft/client/gui/spectator/categories/SpectatorPage dsm
	category a
	items b
	selection c
	getCategory ()Lnet/minecraft/client/gui/spectator/SpectatorMenuCategory; a
	getItem (I)Lnet/minecraft/client/gui/spectator/SpectatorMenuItem; a
	getSelectedSlot ()I b
net/minecraft/client/gui/spectator/categories/TeleportToPlayerMenuCategory dsn
	PROFILE_ORDER a
	TELEPORT_PROMPT c
	TELEPORT_TEXT b
	items d
	getItems ()Ljava/util/List; a
	getName ()Lnet/minecraft/network/chat/Component; aA_
	getPrompt ()Lnet/minecraft/network/chat/Component; b
	isEnabled ()Z aB_
	renderIcon (Lcom/mojang/blaze3d/vertex/PoseStack;FI)V a
	selectItem (Lnet/minecraft/client/gui/spectator/SpectatorMenu;)V a
net/minecraft/client/gui/spectator/categories/TeleportToTeamMenuCategory dso
	TELEPORT_PROMPT b
	TELEPORT_TEXT a
	items c
	getItems ()Ljava/util/List; a
	getName ()Lnet/minecraft/network/chat/Component; aA_
	getPrompt ()Lnet/minecraft/network/chat/Component; b
	isEnabled ()Z aB_
	renderIcon (Lcom/mojang/blaze3d/vertex/PoseStack;FI)V a
	selectItem (Lnet/minecraft/client/gui/spectator/SpectatorMenu;)V a
net/minecraft/client/gui/spectator/categories/TeleportToTeamMenuCategory$TeamSelectionItem dso$a
	location c
	players d
	team b
	getName ()Lnet/minecraft/network/chat/Component; aA_
	isEnabled ()Z aB_
	renderIcon (Lcom/mojang/blaze3d/vertex/PoseStack;FI)V a
	selectItem (Lnet/minecraft/client/gui/spectator/SpectatorMenu;)V a
net/minecraft/client/main/GameConfig dsr
	display b
	game d
	location c
	server e
	user a
net/minecraft/client/main/GameConfig$FolderData dsr$a
	assetDirectory c
	assetIndex d
	gameDirectory a
	resourcePackDirectory b
	getAssetIndex ()Lnet/minecraft/client/resources/AssetIndex; a
net/minecraft/client/main/GameConfig$GameData dsr$b
	demo a
	disableChat e
	disableMultiplayer d
	launchVersion b
	versionType c
net/minecraft/client/main/GameConfig$ServerData dsr$c
	hostname a
	port b
net/minecraft/client/main/GameConfig$UserData dsr$d
	profileProperties c
	proxy d
	user a
	userProperties b
net/minecraft/client/main/SilentInitException dss
net/minecraft/client/map/Map dsu
	COLOR c
	LOGGER e
	ODD_COLOR d
	distCount q
	hovered o
	image f
	lastDistData r
	newScale j
	scale i
	seed m
	teleportCommand p
	updates n
	w g
	xCam a
	xMouse k
	yCam b
	yMouse l
	getColor (Lnet/minecraft/world/level/biome/Biome;)I a
	getNewScale ()D a
	getOddColor (Lnet/minecraft/world/level/biome/Biome;)I b
	invalidateAndUpdate ()V b
	main ([Ljava/lang/String;)V a
	makeBiomeSource (J)Lnet/minecraft/world/level/biome/BiomeSource; a
	setColor (Lnet/minecraft/resources/ResourceKey;I)V a
	setColor (Lnet/minecraft/resources/ResourceKey;II)V a
net/minecraft/client/model/AbstractZombieModel dsw
	isAggressive (Lnet/minecraft/world/entity/monster/Monster;)Z a
	setupAnim (Lnet/minecraft/world/entity/Entity;FFFFF)V a
	setupAnim (Lnet/minecraft/world/entity/LivingEntity;FFFFF)V a
	setupAnim (Lnet/minecraft/world/entity/monster/Monster;FFFFF)V a
net/minecraft/client/model/AgeableListModel dsx
	babyBodyScale h
	babyHeadScale g
	bodyYOffset i
	scaleHead a
	yHeadOffset b
	zHeadOffset f
	bodyParts ()Ljava/lang/Iterable; b
	headParts ()Ljava/lang/Iterable; a
	renderToBuffer (Lcom/mojang/blaze3d/vertex/PoseStack;Lcom/mojang/blaze3d/vertex/VertexConsumer;IIFFFF)V a
net/minecraft/client/model/AnimationUtils dsy
	animateCrossbowCharge (Lnet/minecraft/client/model/geom/ModelPart;Lnet/minecraft/client/model/geom/ModelPart;Lnet/minecraft/world/entity/LivingEntity;Z)V a
	animateCrossbowHold (Lnet/minecraft/client/model/geom/ModelPart;Lnet/minecraft/client/model/geom/ModelPart;Lnet/minecraft/client/model/geom/ModelPart;Z)V a
	animateZombieArms (Lnet/minecraft/client/model/geom/ModelPart;Lnet/minecraft/client/model/geom/ModelPart;ZFF)V a
	bobArms (Lnet/minecraft/client/model/geom/ModelPart;Lnet/minecraft/client/model/geom/ModelPart;F)V a
	swingWeaponDown (Lnet/minecraft/client/model/geom/ModelPart;Lnet/minecraft/client/model/geom/ModelPart;Lnet/minecraft/world/entity/Mob;FF)V a
net/minecraft/client/model/ArmedModel dsz
	translateToHand (Lnet/minecraft/world/entity/HumanoidArm;Lcom/mojang/blaze3d/vertex/PoseStack;)V a
net/minecraft/client/model/ArmorStandArmorModel dta
	setupAnim (Lnet/minecraft/world/entity/Entity;FFFFF)V a
	setupAnim (Lnet/minecraft/world/entity/LivingEntity;FFFFF)V a
	setupAnim (Lnet/minecraft/world/entity/decoration/ArmorStand;FFFFF)V a
net/minecraft/client/model/ArmorStandModel dtb
	basePlate u
	bodyStick1 a
	bodyStick2 b
	shoulderStick t
	bodyParts ()Ljava/lang/Iterable; b
	prepareMobModel (Lnet/minecraft/world/entity/Entity;FFF)V a
	prepareMobModel (Lnet/minecraft/world/entity/LivingEntity;FFF)V a
	prepareMobModel (Lnet/minecraft/world/entity/decoration/ArmorStand;FFF)V a
	setupAnim (Lnet/minecraft/world/entity/Entity;FFFFF)V a
	setupAnim (Lnet/minecraft/world/entity/LivingEntity;FFFFF)V a
	setupAnim (Lnet/minecraft/world/entity/decoration/ArmorStand;FFFFF)V a
	translateToHand (Lnet/minecraft/world/entity/HumanoidArm;Lcom/mojang/blaze3d/vertex/PoseStack;)V a
net/minecraft/client/model/BatModel dtc
	body b
	head a
	leftWing g
	leftWingTip i
	rightWing f
	rightWingTip h
	parts ()Ljava/lang/Iterable; a
	setupAnim (Lnet/minecraft/world/entity/Entity;FFFFF)V a
	setupAnim (Lnet/minecraft/world/entity/ambient/Bat;FFFFF)V a
net/minecraft/client/model/BeeModel dtd
	backLeg j
	body b
	bone a
	frontLeg h
	leftAntenna l
	leftWing g
	midLeg i
	rightAntenna m
	rightWing f
	rollAmount n
	stinger k
	bodyParts ()Ljava/lang/Iterable; b
	headParts ()Ljava/lang/Iterable; a
	prepareMobModel (Lnet/minecraft/world/entity/Entity;FFF)V a
	prepareMobModel (Lnet/minecraft/world/entity/animal/Bee;FFF)V a
	setupAnim (Lnet/minecraft/world/entity/Entity;FFFFF)V a
	setupAnim (Lnet/minecraft/world/entity/animal/Bee;FFFFF)V a
net/minecraft/client/model/BlazeModel dte
	head b
	parts f
	upperBodyParts a
	parts ()Ljava/lang/Iterable; a
	setupAnim (Lnet/minecraft/world/entity/Entity;FFFFF)V a
net/minecraft/client/model/BoatModel dtf
	paddles a
	parts f
	waterPatch b
	animatePaddle (Lnet/minecraft/world/entity/vehicle/Boat;IF)V a
	makePaddle (Z)Lnet/minecraft/client/model/geom/ModelPart; a
	parts ()Lcom/google/common/collect/ImmutableList; b
	parts ()Ljava/lang/Iterable; a
	setupAnim (Lnet/minecraft/world/entity/Entity;FFFFF)V a
	setupAnim (Lnet/minecraft/world/entity/vehicle/Boat;FFFFF)V a
	waterPatch ()Lnet/minecraft/client/model/geom/ModelPart; c
net/minecraft/client/model/BookModel dtg
	flipPage1 e
	flipPage2 f
	leftLid a
	leftPages c
	parts h
	rightLid b
	rightPages d
	seam g
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lcom/mojang/blaze3d/vertex/VertexConsumer;IIFFFF)V b
	renderToBuffer (Lcom/mojang/blaze3d/vertex/PoseStack;Lcom/mojang/blaze3d/vertex/VertexConsumer;IIFFFF)V a
	setupAnim (FFFF)V a
net/minecraft/client/model/CatModel dth
	lieDownAmount m
	lieDownAmountTail n
	relaxStateOneAmount o
	prepareMobModel (Lnet/minecraft/world/entity/Entity;FFF)V a
	prepareMobModel (Lnet/minecraft/world/entity/animal/Cat;FFF)V a
	setupAnim (Lnet/minecraft/world/entity/Entity;FFFFF)V a
	setupAnim (Lnet/minecraft/world/entity/animal/Cat;FFFFF)V a
net/minecraft/client/model/ChestedHorseModel dti
	boxL f
	boxR g
	addEarModels (Lnet/minecraft/client/model/geom/ModelPart;)V a
	setupAnim (Lnet/minecraft/world/entity/Entity;FFFFF)V a
	setupAnim (Lnet/minecraft/world/entity/animal/horse/AbstractChestedHorse;FFFFF)V a
	setupAnim (Lnet/minecraft/world/entity/animal/horse/AbstractHorse;FFFFF)V a
net/minecraft/client/model/ChickenModel dtj
	beak j
	body b
	head a
	leg0 f
	leg1 g
	redThing k
	wing0 h
	wing1 i
	bodyParts ()Ljava/lang/Iterable; b
	headParts ()Ljava/lang/Iterable; a
	setupAnim (Lnet/minecraft/world/entity/Entity;FFFFF)V a
net/minecraft/client/model/CodModel dtk
	body a
	head f
	nose g
	sideFin0 h
	sideFin1 i
	tailFin j
	topFin b
	parts ()Ljava/lang/Iterable; a
	setupAnim (Lnet/minecraft/world/entity/Entity;FFFFF)V a
net/minecraft/client/model/ColorableAgeableListModel dtl
	b f
	g b
	r a
	renderToBuffer (Lcom/mojang/blaze3d/vertex/PoseStack;Lcom/mojang/blaze3d/vertex/VertexConsumer;IIFFFF)V a
	setColor (FFF)V a
net/minecraft/client/model/ColorableListModel dtm
	b f
	g b
	r a
	renderToBuffer (Lcom/mojang/blaze3d/vertex/PoseStack;Lcom/mojang/blaze3d/vertex/VertexConsumer;IIFFFF)V a
	setColor (FFF)V a
net/minecraft/client/model/CowModel dtn
	getHead ()Lnet/minecraft/client/model/geom/ModelPart; c
net/minecraft/client/model/CreeperModel dto
	body f
	hair b
	head a
	leg0 g
	leg1 h
	leg2 i
	leg3 j
	parts ()Ljava/lang/Iterable; a
	setupAnim (Lnet/minecraft/world/entity/Entity;FFFFF)V a
net/minecraft/client/model/DolphinModel dtp
	body a
	tail b
	tailFin f
	parts ()Ljava/lang/Iterable; a
	setupAnim (Lnet/minecraft/world/entity/Entity;FFFFF)V a
net/minecraft/client/model/DrownedModel dtq
	prepareMobModel (Lnet/minecraft/world/entity/Entity;FFF)V a
	prepareMobModel (Lnet/minecraft/world/entity/LivingEntity;FFF)V a
	prepareMobModel (Lnet/minecraft/world/entity/monster/Zombie;FFF)V a
	setupAnim (Lnet/minecraft/world/entity/Entity;FFFFF)V a
	setupAnim (Lnet/minecraft/world/entity/LivingEntity;FFFFF)V a
	setupAnim (Lnet/minecraft/world/entity/monster/Monster;FFFFF)V a
	setupAnim (Lnet/minecraft/world/entity/monster/Zombie;FFFFF)V a
net/minecraft/client/model/ElytraModel dtr
	leftWing b
	rightWing a
	bodyParts ()Ljava/lang/Iterable; b
	headParts ()Ljava/lang/Iterable; a
	setupAnim (Lnet/minecraft/world/entity/Entity;FFFFF)V a
	setupAnim (Lnet/minecraft/world/entity/LivingEntity;FFFFF)V a
net/minecraft/client/model/EndermanModel dts
	carrying a
	creepy b
	setupAnim (Lnet/minecraft/world/entity/Entity;FFFFF)V a
	setupAnim (Lnet/minecraft/world/entity/LivingEntity;FFFFF)V a
net/minecraft/client/model/EndermiteModel dtt
	BODY_COUNT f
	BODY_SIZES a
	BODY_TEXS b
	bodyParts g
	parts ()Ljava/lang/Iterable; a
	setupAnim (Lnet/minecraft/world/entity/Entity;FFFFF)V a
net/minecraft/client/model/EntityModel dtu
	attackTime c
	riding d
	young e
	copyPropertiesTo (Lnet/minecraft/client/model/EntityModel;)V a
	prepareMobModel (Lnet/minecraft/world/entity/Entity;FFF)V a
	setupAnim (Lnet/minecraft/world/entity/Entity;FFFFF)V a
net/minecraft/client/model/EvokerFangsModel dtv
	base a
	lowerJaw f
	upperJaw b
	parts ()Ljava/lang/Iterable; a
	setupAnim (Lnet/minecraft/world/entity/Entity;FFFFF)V a
net/minecraft/client/model/FoxModel dtw
	body h
	earL b
	earR f
	head a
	leg0 i
	leg1 j
	leg2 k
	leg3 l
	legMotionPos n
	nose g
	tail m
	bodyParts ()Ljava/lang/Iterable; b
	headParts ()Ljava/lang/Iterable; a
	prepareMobModel (Lnet/minecraft/world/entity/Entity;FFF)V a
	prepareMobModel (Lnet/minecraft/world/entity/animal/Fox;FFF)V a
	setupAnim (Lnet/minecraft/world/entity/Entity;FFFFF)V a
	setupAnim (Lnet/minecraft/world/entity/animal/Fox;FFFFF)V a
net/minecraft/client/model/GhastModel dtx
	parts b
	tentacles a
	parts ()Ljava/lang/Iterable; a
	setupAnim (Lnet/minecraft/world/entity/Entity;FFFFF)V a
net/minecraft/client/model/GiantZombieModel dty
	isAggressive (Lnet/minecraft/world/entity/monster/Giant;)Z a
	isAggressive (Lnet/minecraft/world/entity/monster/Monster;)Z a
net/minecraft/client/model/GuardianModel dtz
	SPIKE_X g
	SPIKE_X_ROT a
	SPIKE_Y h
	SPIKE_Y_ROT b
	SPIKE_Z i
	SPIKE_Z_ROT f
	eye k
	head j
	spikeParts l
	tailParts m
	parts ()Ljava/lang/Iterable; a
	setupAnim (Lnet/minecraft/world/entity/Entity;FFFFF)V a
	setupAnim (Lnet/minecraft/world/entity/monster/Guardian;FFFFF)V a
	setupSpikes (FF)V a
net/minecraft/client/model/HeadedModel dua
	getHead ()Lnet/minecraft/client/model/geom/ModelPart; c
net/minecraft/client/model/HoglinModel dub
	backLeftLeg k
	backRightLeg j
	body g
	frontLeftLeg i
	frontRightLeg h
	head a
	leftEar f
	mane l
	rightEar b
	bodyParts ()Ljava/lang/Iterable; b
	headParts ()Ljava/lang/Iterable; a
	setupAnim (Lnet/minecraft/world/entity/Entity;FFFFF)V a
	setupAnim (Lnet/minecraft/world/entity/Mob;FFFFF)V a
net/minecraft/client/model/HorseModel duc
	babyLeg1 j
	babyLeg2 k
	babyLeg3 l
	babyLeg4 m
	body a
	headParts b
	leg1 f
	leg2 g
	leg3 h
	leg4 i
	ridingParts p
	saddleParts o
	tail n
	addEarModels (Lnet/minecraft/client/model/geom/ModelPart;)V a
	bodyParts ()Ljava/lang/Iterable; b
	headParts ()Ljava/lang/Iterable; a
	prepareMobModel (Lnet/minecraft/world/entity/Entity;FFF)V a
	prepareMobModel (Lnet/minecraft/world/entity/animal/horse/AbstractHorse;FFF)V a
	setupAnim (Lnet/minecraft/world/entity/Entity;FFFFF)V a
	setupAnim (Lnet/minecraft/world/entity/animal/horse/AbstractHorse;FFFFF)V a
net/minecraft/client/model/HumanoidHeadModel dud
	hat b
	renderToBuffer (Lcom/mojang/blaze3d/vertex/PoseStack;Lcom/mojang/blaze3d/vertex/VertexConsumer;IIFFFF)V a
	setupAnim (FFF)V a
net/minecraft/client/model/HumanoidModel due
	body h
	crouching o
	hat g
	head f
	leftArm j
	leftArmPose m
	leftLeg l
	rightArm i
	rightArmPose n
	rightLeg k
	swimAmount p
	bodyParts ()Ljava/lang/Iterable; b
	copyPropertiesTo (Lnet/minecraft/client/model/HumanoidModel;)V a
	getArm (Lnet/minecraft/world/entity/HumanoidArm;)Lnet/minecraft/client/model/geom/ModelPart; a
	getAttackArm (Lnet/minecraft/world/entity/LivingEntity;)Lnet/minecraft/world/entity/HumanoidArm; a
	getHead ()Lnet/minecraft/client/model/geom/ModelPart; c
	headParts ()Ljava/lang/Iterable; a
	poseLeftArm (Lnet/minecraft/world/entity/LivingEntity;)V c
	poseRightArm (Lnet/minecraft/world/entity/LivingEntity;)V b
	prepareMobModel (Lnet/minecraft/world/entity/Entity;FFF)V a
	prepareMobModel (Lnet/minecraft/world/entity/LivingEntity;FFF)V a
	quadraticArmUpdate (F)F a
	rotlerpRad (FFF)F a
	setAllVisible (Z)V d_
	setupAnim (Lnet/minecraft/world/entity/Entity;FFFFF)V a
	setupAnim (Lnet/minecraft/world/entity/LivingEntity;FFFFF)V a
	setupAttackAnimation (Lnet/minecraft/world/entity/LivingEntity;F)V a
	translateToHand (Lnet/minecraft/world/entity/HumanoidArm;Lcom/mojang/blaze3d/vertex/PoseStack;)V a
net/minecraft/client/model/HumanoidModel$ArmPose due$a
	$VALUES i
	BLOCK c
	BOW_AND_ARROW d
	CROSSBOW_CHARGE f
	CROSSBOW_HOLD g
	EMPTY a
	ITEM b
	THROW_SPEAR e
	twoHanded h
	isTwoHanded ()Z a
net/minecraft/client/model/IllagerModel duf
	arms g
	body f
	hat b
	head a
	leftArm k
	leftLeg h
	rightArm j
	rightLeg i
	getArm (Lnet/minecraft/world/entity/HumanoidArm;)Lnet/minecraft/client/model/geom/ModelPart; a
	getHat ()Lnet/minecraft/client/model/geom/ModelPart; b
	getHead ()Lnet/minecraft/client/model/geom/ModelPart; c
	parts ()Ljava/lang/Iterable; a
	setupAnim (Lnet/minecraft/world/entity/Entity;FFFFF)V a
	setupAnim (Lnet/minecraft/world/entity/monster/AbstractIllager;FFFFF)V a
	translateToHand (Lnet/minecraft/world/entity/HumanoidArm;Lcom/mojang/blaze3d/vertex/PoseStack;)V a
net/minecraft/client/model/IronGolemModel dug
	arm0 f
	arm1 g
	body b
	head a
	leg0 h
	leg1 i
	getFlowerHoldingArm ()Lnet/minecraft/client/model/geom/ModelPart; b
	parts ()Ljava/lang/Iterable; a
	prepareMobModel (Lnet/minecraft/world/entity/Entity;FFF)V a
	prepareMobModel (Lnet/minecraft/world/entity/animal/IronGolem;FFF)V a
	setupAnim (Lnet/minecraft/world/entity/Entity;FFFFF)V a
	setupAnim (Lnet/minecraft/world/entity/animal/IronGolem;FFFFF)V a
net/minecraft/client/model/LavaSlimeModel duh
	bodyCubes a
	insideCube b
	parts f
	parts ()Lcom/google/common/collect/ImmutableList; b
	parts ()Ljava/lang/Iterable; a
	prepareMobModel (Lnet/minecraft/world/entity/Entity;FFF)V a
	prepareMobModel (Lnet/minecraft/world/entity/monster/Slime;FFF)V a
	setupAnim (Lnet/minecraft/world/entity/Entity;FFFFF)V a
	setupAnim (Lnet/minecraft/world/entity/monster/Slime;FFFFF)V a
net/minecraft/client/model/LeashKnotModel dui
	knot a
	parts ()Ljava/lang/Iterable; a
	setupAnim (Lnet/minecraft/world/entity/Entity;FFFFF)V a
net/minecraft/client/model/ListModel duj
	parts ()Ljava/lang/Iterable; a
	renderToBuffer (Lcom/mojang/blaze3d/vertex/PoseStack;Lcom/mojang/blaze3d/vertex/VertexConsumer;IIFFFF)V a
net/minecraft/client/model/LlamaModel duk
	body b
	chest1 j
	chest2 k
	head a
	leg0 f
	leg1 g
	leg2 h
	leg3 i
	renderToBuffer (Lcom/mojang/blaze3d/vertex/PoseStack;Lcom/mojang/blaze3d/vertex/VertexConsumer;IIFFFF)V a
	setupAnim (Lnet/minecraft/world/entity/Entity;FFFFF)V a
	setupAnim (Lnet/minecraft/world/entity/animal/horse/AbstractChestedHorse;FFFFF)V a
net/minecraft/client/model/LlamaSpitModel dul
	main a
	parts ()Ljava/lang/Iterable; a
	setupAnim (Lnet/minecraft/world/entity/Entity;FFFFF)V a
net/minecraft/client/model/MinecartModel dum
	cubes a
	parts ()Ljava/lang/Iterable; a
	setupAnim (Lnet/minecraft/world/entity/Entity;FFFFF)V a
net/minecraft/client/model/Model dun
	renderType q
	texHeight s
	texWidth r
	accept (Lnet/minecraft/client/model/geom/ModelPart;)V b
	renderToBuffer (Lcom/mojang/blaze3d/vertex/PoseStack;Lcom/mojang/blaze3d/vertex/VertexConsumer;IIFFFF)V a
	renderType (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/client/renderer/RenderType; a
net/minecraft/client/model/ModelUtils duo
	rotlerpRad (FFF)F a
net/minecraft/client/model/OcelotModel dup
	backLegL a
	backLegR b
	body k
	frontLegL f
	frontLegR g
	head j
	state l
	tail1 h
	tail2 i
	bodyParts ()Ljava/lang/Iterable; b
	headParts ()Ljava/lang/Iterable; a
	prepareMobModel (Lnet/minecraft/world/entity/Entity;FFF)V a
	setupAnim (Lnet/minecraft/world/entity/Entity;FFFFF)V a
net/minecraft/client/model/PandaModel duq
	lieOnBackAmount k
	rollAmount l
	sitAmount j
	prepareMobModel (Lnet/minecraft/world/entity/Entity;FFF)V a
	prepareMobModel (Lnet/minecraft/world/entity/animal/Panda;FFF)V a
	setupAnim (Lnet/minecraft/world/entity/Entity;FFFFF)V a
	setupAnim (Lnet/minecraft/world/entity/animal/Panda;FFFFF)V a
net/minecraft/client/model/ParrotModel dur
	beak1 j
	beak2 k
	body a
	feather l
	head h
	head2 i
	legLeft m
	legRight n
	tail b
	wingLeft f
	wingRight g
	getState (Lnet/minecraft/world/entity/animal/Parrot;)Lnet/minecraft/client/model/ParrotModel$State; a
	parts ()Ljava/lang/Iterable; a
	prepare (Lnet/minecraft/client/model/ParrotModel$State;)V a
	prepareMobModel (Lnet/minecraft/world/entity/Entity;FFF)V a
	prepareMobModel (Lnet/minecraft/world/entity/animal/Parrot;FFF)V a
	renderOnShoulder (Lcom/mojang/blaze3d/vertex/PoseStack;Lcom/mojang/blaze3d/vertex/VertexConsumer;IIFFFFI)V a
	setupAnim (Lnet/minecraft/client/model/ParrotModel$State;IFFFFF)V a
	setupAnim (Lnet/minecraft/world/entity/Entity;FFFFF)V a
	setupAnim (Lnet/minecraft/world/entity/animal/Parrot;FFFFF)V a
net/minecraft/client/model/ParrotModel$State dur$a
	$VALUES f
	FLYING a
	ON_SHOULDER e
	PARTY d
	SITTING c
	STANDING b
net/minecraft/client/model/PhantomModel dus
	body a
	leftWingBase b
	leftWingTip f
	rightWingBase g
	rightWingTip h
	tailBase i
	tailTip j
	parts ()Ljava/lang/Iterable; a
	setupAnim (Lnet/minecraft/world/entity/Entity;FFFFF)V a
net/minecraft/client/model/PigModel dut
net/minecraft/client/model/PiglinModel duu
	bodyDefault y
	earLeft b
	earRight a
	headDefault z
	leftArmDefault A
	rightArmDefault B
	holdWeaponHigh (Lnet/minecraft/world/entity/Mob;)V a
	setupAnim (Lnet/minecraft/world/entity/Entity;FFFFF)V a
	setupAnim (Lnet/minecraft/world/entity/LivingEntity;FFFFF)V a
	setupAnim (Lnet/minecraft/world/entity/Mob;FFFFF)V a
	setupAttackAnimation (Lnet/minecraft/world/entity/LivingEntity;F)V a
	setupAttackAnimation (Lnet/minecraft/world/entity/Mob;F)V a
net/minecraft/client/model/PlayerModel duv
	cloak b
	cubes a
	ear y
	jacket x
	leftPants v
	leftSleeve t
	rightPants w
	rightSleeve u
	slim z
	accept (Lnet/minecraft/client/model/geom/ModelPart;)V b
	bodyParts ()Ljava/lang/Iterable; b
	getRandomModelPart (Ljava/util/Random;)Lnet/minecraft/client/model/geom/ModelPart; a
	renderCloak (Lcom/mojang/blaze3d/vertex/PoseStack;Lcom/mojang/blaze3d/vertex/VertexConsumer;II)V b
	renderEars (Lcom/mojang/blaze3d/vertex/PoseStack;Lcom/mojang/blaze3d/vertex/VertexConsumer;II)V a
	setAllVisible (Z)V d_
	setupAnim (Lnet/minecraft/world/entity/Entity;FFFFF)V a
	setupAnim (Lnet/minecraft/world/entity/LivingEntity;FFFFF)V a
	translateToHand (Lnet/minecraft/world/entity/HumanoidArm;Lcom/mojang/blaze3d/vertex/PoseStack;)V a
net/minecraft/client/model/PolarBearModel duw
	setupAnim (Lnet/minecraft/world/entity/Entity;FFFFF)V a
	setupAnim (Lnet/minecraft/world/entity/animal/PolarBear;FFFFF)V a
net/minecraft/client/model/PufferfishBigModel dux
	blueFin0 b
	blueFin1 f
	bottomBackFin m
	bottomFrontFin l
	bottomMidFin n
	cube a
	sideBackFin0 o
	sideBackFin1 p
	sideFrontFin0 j
	sideFrontFin1 k
	topBackFin i
	topFrontFin g
	topMidFin h
	parts ()Ljava/lang/Iterable; a
	setupAnim (Lnet/minecraft/world/entity/Entity;FFFFF)V a
net/minecraft/client/model/PufferfishMidModel duy
	cube a
	finBlue0 b
	finBlue1 f
	finBottom0 m
	finBottom1 n
	finSide0 i
	finSide1 j
	finSide2 k
	finSide3 l
	finTop0 g
	finTop1 h
	parts ()Ljava/lang/Iterable; a
	setupAnim (Lnet/minecraft/world/entity/Entity;FFFFF)V a
net/minecraft/client/model/PufferfishSmallModel duz
	cube a
	eye0 b
	eye1 f
	fin0 g
	fin1 h
	finBack i
	parts ()Ljava/lang/Iterable; a
	setupAnim (Lnet/minecraft/world/entity/Entity;FFFFF)V a
net/minecraft/client/model/QuadrupedModel dva
	body b
	head a
	leg0 f
	leg1 g
	leg2 h
	leg3 i
	bodyParts ()Ljava/lang/Iterable; b
	headParts ()Ljava/lang/Iterable; a
	setupAnim (Lnet/minecraft/world/entity/Entity;FFFFF)V a
net/minecraft/client/model/RabbitModel dvb
	body h
	earLeft m
	earRight l
	frontLegLeft i
	frontLegRight j
	haunchLeft f
	haunchRight g
	head k
	jumpRotation p
	nose o
	rearFootLeft a
	rearFootRight b
	tail n
	prepareMobModel (Lnet/minecraft/world/entity/Entity;FFF)V a
	prepareMobModel (Lnet/minecraft/world/entity/animal/Rabbit;FFF)V a
	renderToBuffer (Lcom/mojang/blaze3d/vertex/PoseStack;Lcom/mojang/blaze3d/vertex/VertexConsumer;IIFFFF)V a
	setRotation (Lnet/minecraft/client/model/geom/ModelPart;FFF)V a
	setupAnim (Lnet/minecraft/world/entity/Entity;FFFFF)V a
	setupAnim (Lnet/minecraft/world/entity/animal/Rabbit;FFFFF)V a
net/minecraft/client/model/RavagerModel dvc
	body f
	head a
	leg0 g
	leg1 h
	leg2 i
	leg3 j
	mouth b
	neck k
	parts ()Ljava/lang/Iterable; a
	prepareMobModel (Lnet/minecraft/world/entity/Entity;FFF)V a
	prepareMobModel (Lnet/minecraft/world/entity/monster/Ravager;FFF)V a
	setupAnim (Lnet/minecraft/world/entity/Entity;FFFFF)V a
	setupAnim (Lnet/minecraft/world/entity/monster/Ravager;FFFFF)V a
net/minecraft/client/model/SalmonModel dvd
	bodyBack b
	bodyFront a
	head f
	sideFin0 g
	sideFin1 h
	parts ()Ljava/lang/Iterable; a
	setupAnim (Lnet/minecraft/world/entity/Entity;FFFFF)V a
net/minecraft/client/model/SheepFurModel dve
	headXRot j
	prepareMobModel (Lnet/minecraft/world/entity/Entity;FFF)V a
	prepareMobModel (Lnet/minecraft/world/entity/animal/Sheep;FFF)V a
	setupAnim (Lnet/minecraft/world/entity/Entity;FFFFF)V a
	setupAnim (Lnet/minecraft/world/entity/animal/Sheep;FFFFF)V a
net/minecraft/client/model/SheepModel dvf
	headXRot j
	prepareMobModel (Lnet/minecraft/world/entity/Entity;FFF)V a
	prepareMobModel (Lnet/minecraft/world/entity/animal/Sheep;FFF)V a
	setupAnim (Lnet/minecraft/world/entity/Entity;FFFFF)V a
	setupAnim (Lnet/minecraft/world/entity/animal/Sheep;FFFFF)V a
net/minecraft/client/model/ShieldModel dvg
	handle b
	plate a
	handle ()Lnet/minecraft/client/model/geom/ModelPart; b
	plate ()Lnet/minecraft/client/model/geom/ModelPart; a
	renderToBuffer (Lcom/mojang/blaze3d/vertex/PoseStack;Lcom/mojang/blaze3d/vertex/VertexConsumer;IIFFFF)V a
net/minecraft/client/model/ShulkerBulletModel dvh
	main a
	parts ()Ljava/lang/Iterable; a
	setupAnim (Lnet/minecraft/world/entity/Entity;FFFFF)V a
net/minecraft/client/model/ShulkerModel dvi
	base a
	head f
	lid b
	getBase ()Lnet/minecraft/client/model/geom/ModelPart; b
	getHead ()Lnet/minecraft/client/model/geom/ModelPart; d
	getLid ()Lnet/minecraft/client/model/geom/ModelPart; c
	parts ()Ljava/lang/Iterable; a
	setupAnim (Lnet/minecraft/world/entity/Entity;FFFFF)V a
	setupAnim (Lnet/minecraft/world/entity/monster/Shulker;FFFFF)V a
net/minecraft/client/model/SilverfishModel dvj
	BODY_SIZES h
	BODY_TEXS i
	bodyLayers b
	bodyParts a
	parts f
	zPlacement g
	parts ()Lcom/google/common/collect/ImmutableList; b
	parts ()Ljava/lang/Iterable; a
	setupAnim (Lnet/minecraft/world/entity/Entity;FFFFF)V a
net/minecraft/client/model/SkeletonModel dvk
	prepareMobModel (Lnet/minecraft/world/entity/Entity;FFF)V a
	prepareMobModel (Lnet/minecraft/world/entity/LivingEntity;FFF)V a
	prepareMobModel (Lnet/minecraft/world/entity/Mob;FFF)V a
	setupAnim (Lnet/minecraft/world/entity/Entity;FFFFF)V a
	setupAnim (Lnet/minecraft/world/entity/LivingEntity;FFFFF)V a
	setupAnim (Lnet/minecraft/world/entity/Mob;FFFFF)V a
	translateToHand (Lnet/minecraft/world/entity/HumanoidArm;Lcom/mojang/blaze3d/vertex/PoseStack;)V a
net/minecraft/client/model/SkullModel dvl
	head a
	renderToBuffer (Lcom/mojang/blaze3d/vertex/PoseStack;Lcom/mojang/blaze3d/vertex/VertexConsumer;IIFFFF)V a
	setupAnim (FFF)V a
net/minecraft/client/model/SlimeModel dvm
	cube a
	eye0 b
	eye1 f
	mouth g
	parts ()Ljava/lang/Iterable; a
	setupAnim (Lnet/minecraft/world/entity/Entity;FFFFF)V a
net/minecraft/client/model/SnowGolemModel dvn
	arm1 g
	arm2 h
	head f
	piece1 a
	piece2 b
	getHead ()Lnet/minecraft/client/model/geom/ModelPart; b
	parts ()Ljava/lang/Iterable; a
	setupAnim (Lnet/minecraft/world/entity/Entity;FFFFF)V a
net/minecraft/client/model/SpiderModel dvo
	body0 b
	body1 f
	head a
	leg0 g
	leg1 h
	leg2 i
	leg3 j
	leg4 k
	leg5 l
	leg6 m
	leg7 n
	parts ()Ljava/lang/Iterable; a
	setupAnim (Lnet/minecraft/world/entity/Entity;FFFFF)V a
net/minecraft/client/model/SquidModel dvp
	body a
	parts f
	tentacles b
	parts ()Ljava/lang/Iterable; a
	setupAnim (Lnet/minecraft/world/entity/Entity;FFFFF)V a
net/minecraft/client/model/StriderModel dvq
	body f
	bristle0 g
	bristle1 h
	bristle2 i
	bristle3 j
	bristle4 k
	bristle5 l
	leftLeg b
	rightLeg a
	parts ()Ljava/lang/Iterable; a
	setRotationAngle (Lnet/minecraft/client/model/geom/ModelPart;FFF)V a
	setupAnim (Lnet/minecraft/world/entity/Entity;FFFFF)V a
	setupAnim (Lnet/minecraft/world/entity/monster/Strider;FFFFF)V a
net/minecraft/client/model/TridentModel dvr
	TEXTURE a
	pole b
	renderToBuffer (Lcom/mojang/blaze3d/vertex/PoseStack;Lcom/mojang/blaze3d/vertex/VertexConsumer;IIFFFF)V a
net/minecraft/client/model/TropicalFishModelA dvs
	body a
	leftFin f
	rightFin g
	tail b
	topFin h
	parts ()Ljava/lang/Iterable; a
	setupAnim (Lnet/minecraft/world/entity/Entity;FFFFF)V a
net/minecraft/client/model/TropicalFishModelB dvt
	body a
	bottomFin i
	leftFin f
	rightFin g
	tail b
	topFin h
	parts ()Ljava/lang/Iterable; a
	setupAnim (Lnet/minecraft/world/entity/Entity;FFFFF)V a
net/minecraft/client/model/TurtleModel dvu
	eggBelly j
	bodyParts ()Ljava/lang/Iterable; b
	renderToBuffer (Lcom/mojang/blaze3d/vertex/PoseStack;Lcom/mojang/blaze3d/vertex/VertexConsumer;IIFFFF)V a
	setupAnim (Lnet/minecraft/world/entity/Entity;FFFFF)V a
	setupAnim (Lnet/minecraft/world/entity/animal/Turtle;FFFFF)V a
net/minecraft/client/model/VexModel dvv
	leftWing a
	rightWing b
	bodyParts ()Ljava/lang/Iterable; b
	setupAnim (Lnet/minecraft/world/entity/Entity;FFFFF)V a
	setupAnim (Lnet/minecraft/world/entity/LivingEntity;FFFFF)V a
	setupAnim (Lnet/minecraft/world/entity/monster/Vex;FFFFF)V a
net/minecraft/client/model/VillagerHeadModel dvw
	hatVisible (Z)V a
net/minecraft/client/model/VillagerModel dvx
	arms i
	body g
	hat b
	hatRim f
	head a
	jacket h
	leg0 j
	leg1 k
	nose l
	getHead ()Lnet/minecraft/client/model/geom/ModelPart; c
	hatVisible (Z)V a
	parts ()Ljava/lang/Iterable; a
	setupAnim (Lnet/minecraft/world/entity/Entity;FFFFF)V a
net/minecraft/client/model/WitchModel dvy
	holdingItem m
	mole n
	getNose ()Lnet/minecraft/client/model/geom/ModelPart; b
	setHoldingItem (Z)V b
	setupAnim (Lnet/minecraft/world/entity/Entity;FFFFF)V a
net/minecraft/client/model/WitherBossModel dvz
	heads b
	parts f
	upperBodyParts a
	parts ()Lcom/google/common/collect/ImmutableList; b
	parts ()Ljava/lang/Iterable; a
	prepareMobModel (Lnet/minecraft/world/entity/Entity;FFF)V a
	prepareMobModel (Lnet/minecraft/world/entity/boss/wither/WitherBoss;FFF)V a
	setupAnim (Lnet/minecraft/world/entity/Entity;FFFFF)V a
	setupAnim (Lnet/minecraft/world/entity/boss/wither/WitherBoss;FFFFF)V a
net/minecraft/client/model/WolfModel dwa
	body f
	head a
	leg0 g
	leg1 h
	leg2 i
	leg3 j
	realHead b
	realTail l
	tail k
	upperBody m
	bodyParts ()Ljava/lang/Iterable; b
	headParts ()Ljava/lang/Iterable; a
	prepareMobModel (Lnet/minecraft/world/entity/Entity;FFF)V a
	prepareMobModel (Lnet/minecraft/world/entity/animal/Wolf;FFF)V a
	setupAnim (Lnet/minecraft/world/entity/Entity;FFFFF)V a
	setupAnim (Lnet/minecraft/world/entity/animal/Wolf;FFFFF)V a
net/minecraft/client/model/ZombieModel dwb
	isAggressive (Lnet/minecraft/world/entity/monster/Monster;)Z a
	isAggressive (Lnet/minecraft/world/entity/monster/Zombie;)Z a
net/minecraft/client/model/ZombieVillagerModel dwc
	hatRim a
	hatVisible (Z)V a
	setupAnim (Lnet/minecraft/world/entity/Entity;FFFFF)V a
	setupAnim (Lnet/minecraft/world/entity/LivingEntity;FFFFF)V a
	setupAnim (Lnet/minecraft/world/entity/monster/Zombie;FFFFF)V a
net/minecraft/client/model/dragon/DragonHeadModel dwd
	head b
	jaw c
	renderToBuffer (Lcom/mojang/blaze3d/vertex/PoseStack;Lcom/mojang/blaze3d/vertex/VertexConsumer;IIFFFF)V a
	setupAnim (FFF)V a
net/minecraft/client/model/geom/ModelPart dwf
	children n
	cubes m
	mirror g
	visible h
	x a
	xRot d
	xTexOffs k
	xTexSize i
	y b
	yRot e
	yTexOffs l
	yTexSize j
	z c
	zRot f
	addBox (FFFFFF)Lnet/minecraft/client/model/geom/ModelPart; a
	addBox (FFFFFFF)V a
	addBox (FFFFFFFFF)V a
	addBox (FFFFFFFZ)V a
	addBox (FFFFFFZ)Lnet/minecraft/client/model/geom/ModelPart; a
	addBox (IIFFFFFFFFFZZ)V a
	addBox (Ljava/lang/String;FFFIIIFII)Lnet/minecraft/client/model/geom/ModelPart; a
	addChild (Lnet/minecraft/client/model/geom/ModelPart;)V b
	compile (Lcom/mojang/blaze3d/vertex/PoseStack$Pose;Lcom/mojang/blaze3d/vertex/VertexConsumer;IIFFFF)V a
	copyFrom (Lnet/minecraft/client/model/geom/ModelPart;)V a
	createShallowCopy ()Lnet/minecraft/client/model/geom/ModelPart; a
	getRandomCube (Ljava/util/Random;)Lnet/minecraft/client/model/geom/ModelPart$Cube; a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lcom/mojang/blaze3d/vertex/VertexConsumer;II)V a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lcom/mojang/blaze3d/vertex/VertexConsumer;IIFFFF)V a
	setPos (FFF)V a
	setTexSize (II)Lnet/minecraft/client/model/geom/ModelPart; b
	texOffs (II)Lnet/minecraft/client/model/geom/ModelPart; a
	translateAndRotate (Lcom/mojang/blaze3d/vertex/PoseStack;)V a
net/minecraft/client/model/geom/ModelPart$Cube dwf$a
	maxX d
	maxY e
	maxZ f
	minX a
	minY b
	minZ c
	polygons g
net/minecraft/client/model/geom/ModelPart$Polygon dwf$b
	normal b
	vertices a
net/minecraft/client/model/geom/ModelPart$Vertex dwf$c
	pos a
	u b
	v c
	remap (FF)Lnet/minecraft/client/model/geom/ModelPart$Vertex; a
net/minecraft/client/multiplayer/ClientAdvancements dwi
	LOGGER a
	advancements c
	listener e
	minecraft b
	progress d
	selectedTab f
	getAdvancements ()Lnet/minecraft/advancements/AdvancementList; a
	getProgress ()Ljava/util/Map; b
	setListener (Lnet/minecraft/client/multiplayer/ClientAdvancements$Listener;)V a
	setSelectedTab (Lnet/minecraft/advancements/Advancement;Z)V a
	update (Lnet/minecraft/network/protocol/game/ClientboundUpdateAdvancementsPacket;)V a
net/minecraft/client/multiplayer/ClientAdvancements$Listener dwi$a
	onSelectedTabChanged (Lnet/minecraft/advancements/Advancement;)V e
	onUpdateAdvancementProgress (Lnet/minecraft/advancements/Advancement;Lnet/minecraft/advancements/AdvancementProgress;)V a
net/minecraft/client/multiplayer/ClientChunkCache dwj
	LOGGER a
	emptyChunk b
	level e
	lightEngine c
	storage d
	calculateStorageRange (I)I b
	drop (II)V d
	gatherStats ()Ljava/lang/String; e
	getChunk (IILnet/minecraft/world/level/chunk/ChunkStatus;Z)Lnet/minecraft/world/level/chunk/ChunkAccess; a
	getChunk (IILnet/minecraft/world/level/chunk/ChunkStatus;Z)Lnet/minecraft/world/level/chunk/LevelChunk; b
	getLevel ()Lnet/minecraft/world/level/BlockGetter; m
	getLightEngine ()Lnet/minecraft/world/level/lighting/LevelLightEngine; l
	getLoadedChunksCount ()I h
	isEntityTickingChunk (Lnet/minecraft/world/entity/Entity;)Z a
	isEntityTickingChunk (Lnet/minecraft/world/level/ChunkPos;)Z a
	isTickingChunk (Lnet/minecraft/core/BlockPos;)Z a
	isValidChunk (Lnet/minecraft/world/level/chunk/LevelChunk;II)Z a
	onLightUpdate (Lnet/minecraft/world/level/LightLayer;Lnet/minecraft/core/SectionPos;)V a
	replaceWithPacketData (IILnet/minecraft/world/level/chunk/ChunkBiomeContainer;Lnet/minecraft/network/FriendlyByteBuf;Lnet/minecraft/nbt/CompoundTag;IZ)Lnet/minecraft/world/level/chunk/LevelChunk; a
	tick (Ljava/util/function/BooleanSupplier;)V a
	updateViewCenter (II)V e
	updateViewRadius (I)V a
net/minecraft/client/multiplayer/ClientChunkCache$Storage dwj$a
	chunkCount g
	chunkRadius c
	chunks b
	viewCenterX e
	viewCenterZ f
	viewRange d
	dumpChunks (Ljava/lang/String;)V a
	getChunk (I)Lnet/minecraft/world/level/chunk/LevelChunk; a
	getIndex (II)I a
	inRange (II)Z b
	replace (ILnet/minecraft/world/level/chunk/LevelChunk;)V a
	replace (ILnet/minecraft/world/level/chunk/LevelChunk;Lnet/minecraft/world/level/chunk/LevelChunk;)Lnet/minecraft/world/level/chunk/LevelChunk; a
net/minecraft/client/multiplayer/ClientHandshakePacketListenerImpl dwk
	LOGGER a
	connection e
	localGameProfile f
	minecraft b
	parent c
	updateStatus d
	authenticateServer (Ljava/lang/String;)Lnet/minecraft/network/chat/Component; a
	getConnection ()Lnet/minecraft/network/Connection; a
	getMinecraftSessionService ()Lcom/mojang/authlib/minecraft/MinecraftSessionService; b
	handleCompression (Lnet/minecraft/network/protocol/login/ClientboundLoginCompressionPacket;)V a
	handleCustomQuery (Lnet/minecraft/network/protocol/login/ClientboundCustomQueryPacket;)V a
	handleDisconnect (Lnet/minecraft/network/protocol/login/ClientboundLoginDisconnectPacket;)V a
	handleGameProfile (Lnet/minecraft/network/protocol/login/ClientboundGameProfilePacket;)V a
	handleHello (Lnet/minecraft/network/protocol/login/ClientboundHelloPacket;)V a
	onDisconnect (Lnet/minecraft/network/chat/Component;)V a
net/minecraft/client/multiplayer/ClientLevel dwl
	chunkSource E
	clientLevelData d
	connection b
	effects x
	entitiesById a
	levelRenderer c
	mapData B
	minecraft y
	players z
	scoreboard A
	skyFlashTime C
	tintCaches D
	addAlwaysVisibleParticle (Lnet/minecraft/core/particles/ParticleOptions;DDDDDD)V b
	addAlwaysVisibleParticle (Lnet/minecraft/core/particles/ParticleOptions;ZDDDDDD)V b
	addEntity (ILnet/minecraft/world/entity/Entity;)V b
	addParticle (Lnet/minecraft/core/particles/ParticleOptions;DDDDDD)V a
	addParticle (Lnet/minecraft/core/particles/ParticleOptions;ZDDDDDD)V a
	addPlayer (ILnet/minecraft/client/player/AbstractClientPlayer;)V a
	animateTick (III)V c
	calculateBlockTint (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/ColorResolver;)I b
	clearTintCaches ()V i
	createFireworks (DDDDDDLnet/minecraft/nbt/CompoundTag;)V a
	destroyBlockProgress (ILnet/minecraft/core/BlockPos;I)V a
	disconnect ()V R
	doAnimateTick (IIIILjava/util/Random;ZLnet/minecraft/core/BlockPos$MutableBlockPos;)V a
	effects ()Lnet/minecraft/client/renderer/DimensionSpecialEffects; a
	entitiesForRendering ()Ljava/lang/Iterable; b
	fillReportDetails (Lnet/minecraft/CrashReport;)Lnet/minecraft/CrashReportCategory; a
	getBlockTicks ()Lnet/minecraft/world/level/TickList; I
	getBlockTint (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/ColorResolver;)I a
	getChunkSource ()Lnet/minecraft/client/multiplayer/ClientChunkCache; n
	getChunkSource ()Lnet/minecraft/world/level/chunk/ChunkSource; G
	getCloudColor (F)Lnet/minecraft/world/phys/Vec3; h
	getEntity (I)Lnet/minecraft/world/entity/Entity; a
	getEntityCount ()I j
	getFreeMapId ()I t
	getLevelData ()Lnet/minecraft/client/multiplayer/ClientLevel$ClientLevelData; w
	getLevelData ()Lnet/minecraft/world/level/storage/LevelData; h
	getLiquidTicks ()Lnet/minecraft/world/level/TickList; H
	getMapData (Ljava/lang/String;)Lnet/minecraft/world/level/saveddata/maps/MapItemSavedData; a
	getRecipeManager ()Lnet/minecraft/world/item/crafting/RecipeManager; o
	getScoreboard ()Lnet/minecraft/world/scores/Scoreboard; F
	getShade (Lnet/minecraft/core/Direction;Z)F a
	getSharedSpawnAngle ()F v
	getSharedSpawnPos ()Lnet/minecraft/core/BlockPos; u
	getSkyColor (Lnet/minecraft/core/BlockPos;F)Lnet/minecraft/world/phys/Vec3; a
	getSkyDarken (F)F g
	getSkyFlashTime ()I s
	getStarBrightness (F)F i
	getTagManager ()Lnet/minecraft/tags/TagContainer; p
	getUncachedNoiseBiome (III)Lnet/minecraft/world/level/biome/Biome; a
	globalLevelEvent (ILnet/minecraft/core/BlockPos;I)V b
	hasChunk (II)Z b
	levelEvent (Lnet/minecraft/world/entity/player/Player;ILnet/minecraft/core/BlockPos;I)V a
	onChunkLoaded (II)V e
	onEntityRemoved (Lnet/minecraft/world/entity/Entity;)V d
	playLocalSound (DDDLnet/minecraft/sounds/SoundEvent;Lnet/minecraft/sounds/SoundSource;FFZ)V a
	playLocalSound (Lnet/minecraft/core/BlockPos;Lnet/minecraft/sounds/SoundEvent;Lnet/minecraft/sounds/SoundSource;FFZ)V a
	playSound (Lnet/minecraft/world/entity/player/Player;DDDLnet/minecraft/sounds/SoundEvent;Lnet/minecraft/sounds/SoundSource;FF)V a
	playSound (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/entity/Entity;Lnet/minecraft/sounds/SoundEvent;Lnet/minecraft/sounds/SoundSource;FF)V a
	players ()Ljava/util/List; x
	putNonPlayerEntity (ILnet/minecraft/world/entity/Entity;)V a
	reAddEntitiesToChunk (Lnet/minecraft/world/level/chunk/LevelChunk;)V b
	registryAccess ()Lnet/minecraft/core/RegistryAccess; r
	removeAllPendingEntityRemovals ()V m
	removeEntity (I)V d
	sendBlockUpdated (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/state/BlockState;I)V a
	sendPacketToServer (Lnet/minecraft/network/protocol/Packet;)V a
	setBlocksDirty (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/state/BlockState;)V b
	setDayTime (J)V b
	setDefaultSpawnPos (Lnet/minecraft/core/BlockPos;F)V b
	setGameTime (J)V a
	setKnownState (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V b
	setMapData (Lnet/minecraft/world/level/saveddata/maps/MapItemSavedData;)V a
	setScoreboard (Lnet/minecraft/world/scores/Scoreboard;)V a
	setSectionDirtyWithNeighbors (III)V d
	setSkyFlashTime (I)V c
	spawnFluidParticle (DDDDDLnet/minecraft/core/particles/ParticleOptions;)V a
	spawnParticle (Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/particles/ParticleOptions;Lnet/minecraft/world/phys/shapes/VoxelShape;D)V a
	tick (Ljava/util/function/BooleanSupplier;)V a
	tickEntities ()V g
	tickNonPassenger (Lnet/minecraft/world/entity/Entity;)V a
	tickPassenger (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/entity/Entity;)V a
	tickTime ()V y
	trySpawnDripParticles (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/particles/ParticleOptions;Z)V a
	unload (Lnet/minecraft/world/level/chunk/LevelChunk;)V a
	updateChunkPos (Lnet/minecraft/world/entity/Entity;)V b
net/minecraft/client/multiplayer/ClientLevel$ClientLevelData dwl$a
	dayTime i
	difficulty k
	difficultyLocked l
	gameRules b
	gameTime h
	hardcore a
	isFlat c
	raining j
	spawnAngle g
	xSpawn d
	ySpawn e
	zSpawn f
	fillCrashReportCategory (Lnet/minecraft/CrashReportCategory;)V a
	getClearColorScale ()D h
	getDayTime ()J f
	getDifficulty ()Lnet/minecraft/world/Difficulty; s
	getGameRules ()Lnet/minecraft/world/level/GameRules; q
	getGameTime ()J e
	getHorizonHeight ()D g
	getSpawnAngle ()F d
	getXSpawn ()I a
	getYSpawn ()I b
	getZSpawn ()I c
	isDifficultyLocked ()Z t
	isHardcore ()Z n
	isRaining ()Z k
	isThundering ()Z i
	setDayTime (J)V b
	setDifficulty (Lnet/minecraft/world/Difficulty;)V a
	setDifficultyLocked (Z)V a
	setGameTime (J)V a
	setRaining (Z)V b
	setSpawn (Lnet/minecraft/core/BlockPos;F)V a
	setSpawnAngle (F)V a
	setXSpawn (I)V b
	setYSpawn (I)V c
	setZSpawn (I)V d
net/minecraft/client/multiplayer/ClientPacketListener dwm
	GENERIC_DISCONNECT_MESSAGE b
	LOGGER a
	advancements k
	callbackScreen e
	commands q
	connection c
	debugQueryHandler n
	id s
	level g
	levelData h
	levels t
	localGameProfile d
	minecraft f
	playerInfoMap j
	random p
	recipeManager r
	registryAccess u
	serverChunkRadius o
	started i
	suggestionsProvider l
	tags m
	cleanup ()V c
	downloadCallback (Ljava/util/concurrent/CompletableFuture;)V a
	findTotem (Lnet/minecraft/world/entity/player/Player;)Lnet/minecraft/world/item/ItemStack; a
	getAdvancements ()Lnet/minecraft/client/multiplayer/ClientAdvancements; g
	getCommands ()Lcom/mojang/brigadier/CommandDispatcher; h
	getConnection ()Lnet/minecraft/network/Connection; a
	getDebugQueryHandler ()Lnet/minecraft/client/DebugQueryHandler; k
	getId ()Ljava/util/UUID; l
	getLevel ()Lnet/minecraft/client/multiplayer/ClientLevel; i
	getLocalGameProfile ()Lcom/mojang/authlib/GameProfile; f
	getOnlinePlayers ()Ljava/util/Collection; e
	getPlayerInfo (Ljava/lang/String;)Lnet/minecraft/client/multiplayer/PlayerInfo; a
	getPlayerInfo (Ljava/util/UUID;)Lnet/minecraft/client/multiplayer/PlayerInfo; a
	getRecipeManager ()Lnet/minecraft/world/item/crafting/RecipeManager; d
	getSuggestionsProvider ()Lnet/minecraft/client/multiplayer/ClientSuggestionProvider; b
	getTags ()Lnet/minecraft/tags/TagContainer; j
	handleAddEntity (Lnet/minecraft/network/protocol/game/ClientboundAddEntityPacket;)V a
	handleAddExperienceOrb (Lnet/minecraft/network/protocol/game/ClientboundAddExperienceOrbPacket;)V a
	handleAddMob (Lnet/minecraft/network/protocol/game/ClientboundAddMobPacket;)V a
	handleAddObjective (Lnet/minecraft/network/protocol/game/ClientboundSetObjectivePacket;)V a
	handleAddOrRemoveRecipes (Lnet/minecraft/network/protocol/game/ClientboundRecipePacket;)V a
	handleAddPainting (Lnet/minecraft/network/protocol/game/ClientboundAddPaintingPacket;)V a
	handleAddPlayer (Lnet/minecraft/network/protocol/game/ClientboundAddPlayerPacket;)V a
	handleAnimate (Lnet/minecraft/network/protocol/game/ClientboundAnimatePacket;)V a
	handleAwardStats (Lnet/minecraft/network/protocol/game/ClientboundAwardStatsPacket;)V a
	handleBlockBreakAck (Lnet/minecraft/network/protocol/game/ClientboundBlockBreakAckPacket;)V a
	handleBlockDestruction (Lnet/minecraft/network/protocol/game/ClientboundBlockDestructionPacket;)V a
	handleBlockEntityData (Lnet/minecraft/network/protocol/game/ClientboundBlockEntityDataPacket;)V a
	handleBlockEvent (Lnet/minecraft/network/protocol/game/ClientboundBlockEventPacket;)V a
	handleBlockUpdate (Lnet/minecraft/network/protocol/game/ClientboundBlockUpdatePacket;)V a
	handleBossUpdate (Lnet/minecraft/network/protocol/game/ClientboundBossEventPacket;)V a
	handleChangeDifficulty (Lnet/minecraft/network/protocol/game/ClientboundChangeDifficultyPacket;)V a
	handleChat (Lnet/minecraft/network/protocol/game/ClientboundChatPacket;)V a
	handleChunkBlocksUpdate (Lnet/minecraft/network/protocol/game/ClientboundSectionBlocksUpdatePacket;)V a
	handleCommandSuggestions (Lnet/minecraft/network/protocol/game/ClientboundCommandSuggestionsPacket;)V a
	handleCommands (Lnet/minecraft/network/protocol/game/ClientboundCommandsPacket;)V a
	handleContainerAck (Lnet/minecraft/network/protocol/game/ClientboundContainerAckPacket;)V a
	handleContainerClose (Lnet/minecraft/network/protocol/game/ClientboundContainerClosePacket;)V a
	handleContainerContent (Lnet/minecraft/network/protocol/game/ClientboundContainerSetContentPacket;)V a
	handleContainerSetData (Lnet/minecraft/network/protocol/game/ClientboundContainerSetDataPacket;)V a
	handleContainerSetSlot (Lnet/minecraft/network/protocol/game/ClientboundContainerSetSlotPacket;)V a
	handleCustomPayload (Lnet/minecraft/network/protocol/game/ClientboundCustomPayloadPacket;)V a
	handleCustomSoundEvent (Lnet/minecraft/network/protocol/game/ClientboundCustomSoundPacket;)V a
	handleDisconnect (Lnet/minecraft/network/protocol/game/ClientboundDisconnectPacket;)V a
	handleEntityEvent (Lnet/minecraft/network/protocol/game/ClientboundEntityEventPacket;)V a
	handleEntityLinkPacket (Lnet/minecraft/network/protocol/game/ClientboundSetEntityLinkPacket;)V a
	handleExplosion (Lnet/minecraft/network/protocol/game/ClientboundExplodePacket;)V a
	handleForgetLevelChunk (Lnet/minecraft/network/protocol/game/ClientboundForgetLevelChunkPacket;)V a
	handleGameEvent (Lnet/minecraft/network/protocol/game/ClientboundGameEventPacket;)V a
	handleHorseScreenOpen (Lnet/minecraft/network/protocol/game/ClientboundHorseScreenOpenPacket;)V a
	handleItemCooldown (Lnet/minecraft/network/protocol/game/ClientboundCooldownPacket;)V a
	handleKeepAlive (Lnet/minecraft/network/protocol/game/ClientboundKeepAlivePacket;)V a
	handleLevelChunk (Lnet/minecraft/network/protocol/game/ClientboundLevelChunkPacket;)V a
	handleLevelEvent (Lnet/minecraft/network/protocol/game/ClientboundLevelEventPacket;)V a
	handleLightUpdatePacked (Lnet/minecraft/network/protocol/game/ClientboundLightUpdatePacket;)V a
	handleLogin (Lnet/minecraft/network/protocol/game/ClientboundLoginPacket;)V a
	handleLookAt (Lnet/minecraft/network/protocol/game/ClientboundPlayerLookAtPacket;)V a
	handleMapItemData (Lnet/minecraft/network/protocol/game/ClientboundMapItemDataPacket;)V a
	handleMerchantOffers (Lnet/minecraft/network/protocol/game/ClientboundMerchantOffersPacket;)V a
	handleMoveEntity (Lnet/minecraft/network/protocol/game/ClientboundMoveEntityPacket;)V a
	handleMovePlayer (Lnet/minecraft/network/protocol/game/ClientboundPlayerPositionPacket;)V a
	handleMoveVehicle (Lnet/minecraft/network/protocol/game/ClientboundMoveVehiclePacket;)V a
	handleOpenBook (Lnet/minecraft/network/protocol/game/ClientboundOpenBookPacket;)V a
	handleOpenScreen (Lnet/minecraft/network/protocol/game/ClientboundOpenScreenPacket;)V a
	handleOpenSignEditor (Lnet/minecraft/network/protocol/game/ClientboundOpenSignEditorPacket;)V a
	handleParticleEvent (Lnet/minecraft/network/protocol/game/ClientboundLevelParticlesPacket;)V a
	handlePlaceRecipe (Lnet/minecraft/network/protocol/game/ClientboundPlaceGhostRecipePacket;)V a
	handlePlayerAbilities (Lnet/minecraft/network/protocol/game/ClientboundPlayerAbilitiesPacket;)V a
	handlePlayerCombat (Lnet/minecraft/network/protocol/game/ClientboundPlayerCombatPacket;)V a
	handlePlayerInfo (Lnet/minecraft/network/protocol/game/ClientboundPlayerInfoPacket;)V a
	handleRemoveEntity (Lnet/minecraft/network/protocol/game/ClientboundRemoveEntitiesPacket;)V a
	handleRemoveMobEffect (Lnet/minecraft/network/protocol/game/ClientboundRemoveMobEffectPacket;)V a
	handleResourcePack (Lnet/minecraft/network/protocol/game/ClientboundResourcePackPacket;)V a
	handleRespawn (Lnet/minecraft/network/protocol/game/ClientboundRespawnPacket;)V a
	handleRotateMob (Lnet/minecraft/network/protocol/game/ClientboundRotateHeadPacket;)V a
	handleSelectAdvancementsTab (Lnet/minecraft/network/protocol/game/ClientboundSelectAdvancementsTabPacket;)V a
	handleSetBorder (Lnet/minecraft/network/protocol/game/ClientboundSetBorderPacket;)V a
	handleSetCamera (Lnet/minecraft/network/protocol/game/ClientboundSetCameraPacket;)V a
	handleSetCarriedItem (Lnet/minecraft/network/protocol/game/ClientboundSetCarriedItemPacket;)V a
	handleSetChunkCacheCenter (Lnet/minecraft/network/protocol/game/ClientboundSetChunkCacheCenterPacket;)V a
	handleSetChunkCacheRadius (Lnet/minecraft/network/protocol/game/ClientboundSetChunkCacheRadiusPacket;)V a
	handleSetDisplayObjective (Lnet/minecraft/network/protocol/game/ClientboundSetDisplayObjectivePacket;)V a
	handleSetEntityData (Lnet/minecraft/network/protocol/game/ClientboundSetEntityDataPacket;)V a
	handleSetEntityMotion (Lnet/minecraft/network/protocol/game/ClientboundSetEntityMotionPacket;)V a
	handleSetEntityPassengersPacket (Lnet/minecraft/network/protocol/game/ClientboundSetPassengersPacket;)V a
	handleSetEquipment (Lnet/minecraft/network/protocol/game/ClientboundSetEquipmentPacket;)V a
	handleSetExperience (Lnet/minecraft/network/protocol/game/ClientboundSetExperiencePacket;)V a
	handleSetHealth (Lnet/minecraft/network/protocol/game/ClientboundSetHealthPacket;)V a
	handleSetPlayerTeamPacket (Lnet/minecraft/network/protocol/game/ClientboundSetPlayerTeamPacket;)V a
	handleSetScore (Lnet/minecraft/network/protocol/game/ClientboundSetScorePacket;)V a
	handleSetSpawn (Lnet/minecraft/network/protocol/game/ClientboundSetDefaultSpawnPositionPacket;)V a
	handleSetTime (Lnet/minecraft/network/protocol/game/ClientboundSetTimePacket;)V a
	handleSetTitles (Lnet/minecraft/network/protocol/game/ClientboundSetTitlesPacket;)V a
	handleSoundEntityEvent (Lnet/minecraft/network/protocol/game/ClientboundSoundEntityPacket;)V a
	handleSoundEvent (Lnet/minecraft/network/protocol/game/ClientboundSoundPacket;)V a
	handleStopSoundEvent (Lnet/minecraft/network/protocol/game/ClientboundStopSoundPacket;)V a
	handleTabListCustomisation (Lnet/minecraft/network/protocol/game/ClientboundTabListPacket;)V a
	handleTagQueryPacket (Lnet/minecraft/network/protocol/game/ClientboundTagQueryPacket;)V a
	handleTakeItemEntity (Lnet/minecraft/network/protocol/game/ClientboundTakeItemEntityPacket;)V a
	handleTeleportEntity (Lnet/minecraft/network/protocol/game/ClientboundTeleportEntityPacket;)V a
	handleUpdateAdvancementsPacket (Lnet/minecraft/network/protocol/game/ClientboundUpdateAdvancementsPacket;)V a
	handleUpdateAttributes (Lnet/minecraft/network/protocol/game/ClientboundUpdateAttributesPacket;)V a
	handleUpdateMobEffect (Lnet/minecraft/network/protocol/game/ClientboundUpdateMobEffectPacket;)V a
	handleUpdateRecipes (Lnet/minecraft/network/protocol/game/ClientboundUpdateRecipesPacket;)V a
	handleUpdateTags (Lnet/minecraft/network/protocol/game/ClientboundUpdateTagsPacket;)V a
	levels ()Ljava/util/Set; m
	onDisconnect (Lnet/minecraft/network/chat/Component;)V a
	readSectionList (IILnet/minecraft/world/level/lighting/LevelLightEngine;Lnet/minecraft/world/level/LightLayer;IILjava/util/Iterator;Z)V a
	registryAccess ()Lnet/minecraft/core/RegistryAccess; n
	send (Lnet/minecraft/network/protocol/Packet;)V a
	send (Lnet/minecraft/network/protocol/game/ServerboundResourcePackPacket$Action;)V a
	validateResourcePackUrl (Ljava/lang/String;)Z b
net/minecraft/client/multiplayer/ClientSuggestionProvider dwn
	connection a
	minecraft b
	pendingSuggestionsFuture d
	pendingSuggestionsId c
	completeCustomSuggestions (ILcom/mojang/brigadier/suggestion/Suggestions;)V a
	customSuggestion (Lcom/mojang/brigadier/context/CommandContext;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture; a
	getAbsoluteCoordinates ()Ljava/util/Collection; t
	getAllTeams ()Ljava/util/Collection; m
	getAvailableSoundEvents ()Ljava/util/Collection; n
	getOnlinePlayerNames ()Ljava/util/Collection; l
	getRecipeNames ()Ljava/util/stream/Stream; o
	getRelevantCoordinates ()Ljava/util/Collection; s
	getSelectedEntities ()Ljava/util/Collection; r
	hasPermission (I)Z c
	levels ()Ljava/util/Set; p
	prettyPrint (D)Ljava/lang/String; a
	prettyPrint (I)Ljava/lang/String; a
	registryAccess ()Lnet/minecraft/core/RegistryAccess; q
net/minecraft/client/multiplayer/MultiPlayerGameMode dwo
	LOGGER a
	carriedIndex m
	connection c
	destroyBlockPos d
	destroyDelay h
	destroyProgress f
	destroyTicks g
	destroyingItem e
	isDestroying i
	localPlayerMode j
	minecraft b
	previousLocalPlayerMode k
	unAckedActions l
	adjustPlayer (Lnet/minecraft/world/entity/player/Player;)V a
	attack (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/entity/Entity;)V a
	canHurtPlayer ()Z a
	continueDestroyBlock (Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;)Z b
	createPlayer (Lnet/minecraft/client/multiplayer/ClientLevel;Lnet/minecraft/stats/StatsCounter;Lnet/minecraft/client/ClientRecipeBook;)Lnet/minecraft/client/player/LocalPlayer; a
	createPlayer (Lnet/minecraft/client/multiplayer/ClientLevel;Lnet/minecraft/stats/StatsCounter;Lnet/minecraft/client/ClientRecipeBook;ZZ)Lnet/minecraft/client/player/LocalPlayer; a
	destroyBlock (Lnet/minecraft/core/BlockPos;)Z a
	ensureHasSentCarriedItem ()V n
	getPickRange ()F c
	getPlayerMode ()Lnet/minecraft/world/level/GameType; l
	getPreviousPlayerMode ()Lnet/minecraft/world/level/GameType; k
	handleBlockBreakAck (Lnet/minecraft/client/multiplayer/ClientLevel;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/network/protocol/game/ServerboundPlayerActionPacket$Action;Z)V a
	handleCreativeModeItemAdd (Lnet/minecraft/world/item/ItemStack;I)V a
	handleCreativeModeItemDrop (Lnet/minecraft/world/item/ItemStack;)V a
	handleInventoryButtonClick (II)V a
	handleInventoryMouseClick (IIILnet/minecraft/world/inventory/ClickType;Lnet/minecraft/world/entity/player/Player;)Lnet/minecraft/world/item/ItemStack; a
	handlePickItem (I)V a
	handlePlaceRecipe (ILnet/minecraft/world/item/crafting/Recipe;Z)V a
	hasExperience ()Z e
	hasFarPickRange ()Z h
	hasInfiniteItems ()Z g
	hasMissTime ()Z f
	interact (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResult; a
	interactAt (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/phys/EntityHitResult;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResult; a
	isAlwaysFlying ()Z j
	isDestroying ()Z m
	isServerControlledInventory ()Z i
	releaseUsingItem (Lnet/minecraft/world/entity/player/Player;)V b
	sameDestroyTarget (Lnet/minecraft/core/BlockPos;)Z b
	sendBlockAction (Lnet/minecraft/network/protocol/game/ServerboundPlayerActionPacket$Action;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;)V a
	setLocalMode (Lnet/minecraft/world/level/GameType;)V b
	setPreviousLocalMode (Lnet/minecraft/world/level/GameType;)V a
	startDestroyBlock (Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;)Z a
	stopDestroyBlock ()V b
	tick ()V d
	useItem (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/level/Level;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResult; a
	useItemOn (Lnet/minecraft/client/player/LocalPlayer;Lnet/minecraft/client/multiplayer/ClientLevel;Lnet/minecraft/world/InteractionHand;Lnet/minecraft/world/phys/BlockHitResult;)Lnet/minecraft/world/InteractionResult; a
net/minecraft/client/multiplayer/PlayerInfo dwp
	displayHealth i
	gameMode c
	healthBlinkTime k
	lastHealth h
	lastHealthTime j
	latency d
	pendingTextures e
	profile a
	renderVisibilityId l
	skinModel f
	tabListDisplayName g
	textureLocations b
	getCapeLocation ()Lnet/minecraft/resources/ResourceLocation; h
	getDisplayHealth ()I n
	getElytraLocation ()Lnet/minecraft/resources/ResourceLocation; i
	getGameMode ()Lnet/minecraft/world/level/GameType; b
	getHealthBlinkTime ()J p
	getLastHealth ()I m
	getLastHealthTime ()J o
	getLatency ()I c
	getModelName ()Ljava/lang/String; f
	getProfile ()Lcom/mojang/authlib/GameProfile; a
	getRenderVisibilityId ()J q
	getSkinLocation ()Lnet/minecraft/resources/ResourceLocation; g
	getTabListDisplayName ()Lnet/minecraft/network/chat/Component; l
	getTeam ()Lnet/minecraft/world/scores/PlayerTeam; j
	isCapeLoaded ()Z d
	isSkinLoaded ()Z e
	registerTextures ()V k
	setDisplayHealth (I)V c
	setGameMode (Lnet/minecraft/world/level/GameType;)V a
	setHealthBlinkTime (J)V b
	setLastHealth (I)V b
	setLastHealthTime (J)V a
	setLatency (I)V a
	setRenderVisibilityId (J)V c
	setTabListDisplayName (Lnet/minecraft/network/chat/Component;)V a
net/minecraft/client/multiplayer/ServerAddress dwq
	host a
	port b
	getHost ()Ljava/lang/String; a
	getPort ()I b
	lookupSrv (Ljava/lang/String;)Lcom/mojang/datafixers/util/Pair; b
	parseInt (Ljava/lang/String;I)I a
	parseString (Ljava/lang/String;)Lnet/minecraft/client/multiplayer/ServerAddress; a
net/minecraft/client/multiplayer/ServerData dwr
	iconB64 k
	ip b
	lan l
	motd d
	name a
	packStatus j
	ping e
	pinged h
	playerList i
	protocol f
	status c
	version g
	copyFrom (Lnet/minecraft/client/multiplayer/ServerData;)V a
	getIconB64 ()Ljava/lang/String; c
	getResourcePackStatus ()Lnet/minecraft/client/multiplayer/ServerData$ServerPackStatus; b
	isLan ()Z d
	read (Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/client/multiplayer/ServerData; a
	setIconB64 (Ljava/lang/String;)V a
	setResourcePackStatus (Lnet/minecraft/client/multiplayer/ServerData$ServerPackStatus;)V a
	write ()Lnet/minecraft/nbt/CompoundTag; a
net/minecraft/client/multiplayer/ServerData$ServerPackStatus dwr$a
	$VALUES e
	DISABLED b
	ENABLED a
	PROMPT c
	name d
	getName ()Lnet/minecraft/network/chat/Component; a
net/minecraft/client/multiplayer/ServerList dws
	LOGGER a
	minecraft b
	serverList c
	add (Lnet/minecraft/client/multiplayer/ServerData;)V b
	get (I)Lnet/minecraft/client/multiplayer/ServerData; a
	load ()V a
	remove (Lnet/minecraft/client/multiplayer/ServerData;)V a
	replace (ILnet/minecraft/client/multiplayer/ServerData;)V a
	save ()V b
	saveSingleServer (Lnet/minecraft/client/multiplayer/ServerData;)V c
	size ()I c
	swap (II)V a
net/minecraft/client/multiplayer/ServerStatusPinger dwt
	LOGGER b
	SPLITTER a
	connections c
	formatPlayerCount (II)Lnet/minecraft/network/chat/Component; b
	pingLegacyServer (Lnet/minecraft/client/multiplayer/ServerData;)V a
	pingServer (Lnet/minecraft/client/multiplayer/ServerData;Ljava/lang/Runnable;)V a
	removeAll ()V b
	tick ()V a
net/minecraft/client/particle/AshParticle dww
net/minecraft/client/particle/AshParticle$Provider dww$a
	sprites a
	createParticle (Lnet/minecraft/core/particles/ParticleOptions;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
	createParticle (Lnet/minecraft/core/particles/SimpleParticleType;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
net/minecraft/client/particle/AttackSweepParticle dwx
	sprites a
	getLightColor (F)I a
	getRenderType ()Lnet/minecraft/client/particle/ParticleRenderType; b
	tick ()V a
net/minecraft/client/particle/AttackSweepParticle$Provider dwx$a
	sprites a
	createParticle (Lnet/minecraft/core/particles/ParticleOptions;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
	createParticle (Lnet/minecraft/core/particles/SimpleParticleType;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
net/minecraft/client/particle/BarrierParticle dwy
	getQuadSize (F)F b
	getRenderType ()Lnet/minecraft/client/particle/ParticleRenderType; b
net/minecraft/client/particle/BarrierParticle$Provider dwy$a
	createParticle (Lnet/minecraft/core/particles/ParticleOptions;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
	createParticle (Lnet/minecraft/core/particles/SimpleParticleType;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
net/minecraft/client/particle/BaseAshSmokeParticle dwz
	fallSpeed b
	sprites a
	getQuadSize (F)F b
	getRenderType ()Lnet/minecraft/client/particle/ParticleRenderType; b
	tick ()V a
net/minecraft/client/particle/BreakingItemParticle dxa
	uo a
	vo b
	getRenderType ()Lnet/minecraft/client/particle/ParticleRenderType; b
	getU0 ()F c
	getU1 ()F d
	getV0 ()F e
	getV1 ()F f
net/minecraft/client/particle/BreakingItemParticle$Provider dxa$a
	createParticle (Lnet/minecraft/core/particles/ItemParticleOption;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
	createParticle (Lnet/minecraft/core/particles/ParticleOptions;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
net/minecraft/client/particle/BreakingItemParticle$SlimeProvider dxa$b
	createParticle (Lnet/minecraft/core/particles/ParticleOptions;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
	createParticle (Lnet/minecraft/core/particles/SimpleParticleType;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
net/minecraft/client/particle/BreakingItemParticle$SnowballProvider dxa$c
	createParticle (Lnet/minecraft/core/particles/ParticleOptions;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
	createParticle (Lnet/minecraft/core/particles/SimpleParticleType;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
net/minecraft/client/particle/BubbleColumnUpParticle dxb
	getRenderType ()Lnet/minecraft/client/particle/ParticleRenderType; b
	tick ()V a
net/minecraft/client/particle/BubbleColumnUpParticle$Provider dxb$a
	sprite a
	createParticle (Lnet/minecraft/core/particles/ParticleOptions;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
	createParticle (Lnet/minecraft/core/particles/SimpleParticleType;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
net/minecraft/client/particle/BubbleParticle dxc
	getRenderType ()Lnet/minecraft/client/particle/ParticleRenderType; b
	tick ()V a
net/minecraft/client/particle/BubbleParticle$Provider dxc$a
	sprite a
	createParticle (Lnet/minecraft/core/particles/ParticleOptions;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
	createParticle (Lnet/minecraft/core/particles/SimpleParticleType;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
net/minecraft/client/particle/BubblePopParticle dxd
	sprites a
	getRenderType ()Lnet/minecraft/client/particle/ParticleRenderType; b
	tick ()V a
net/minecraft/client/particle/BubblePopParticle$Provider dxd$a
	sprites a
	createParticle (Lnet/minecraft/core/particles/ParticleOptions;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
	createParticle (Lnet/minecraft/core/particles/SimpleParticleType;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
net/minecraft/client/particle/CampfireSmokeParticle dxe
	getRenderType ()Lnet/minecraft/client/particle/ParticleRenderType; b
	tick ()V a
net/minecraft/client/particle/CampfireSmokeParticle$CosyProvider dxe$a
	sprites a
	createParticle (Lnet/minecraft/core/particles/ParticleOptions;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
	createParticle (Lnet/minecraft/core/particles/SimpleParticleType;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
net/minecraft/client/particle/CampfireSmokeParticle$SignalProvider dxe$b
	sprites a
	createParticle (Lnet/minecraft/core/particles/ParticleOptions;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
	createParticle (Lnet/minecraft/core/particles/SimpleParticleType;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
net/minecraft/client/particle/CritParticle dxf
	getQuadSize (F)F b
	getRenderType ()Lnet/minecraft/client/particle/ParticleRenderType; b
	tick ()V a
net/minecraft/client/particle/CritParticle$DamageIndicatorProvider dxf$a
	sprite a
	createParticle (Lnet/minecraft/core/particles/ParticleOptions;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
	createParticle (Lnet/minecraft/core/particles/SimpleParticleType;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
net/minecraft/client/particle/CritParticle$MagicProvider dxf$b
	sprite a
	createParticle (Lnet/minecraft/core/particles/ParticleOptions;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
	createParticle (Lnet/minecraft/core/particles/SimpleParticleType;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
net/minecraft/client/particle/CritParticle$Provider dxf$c
	sprite a
	createParticle (Lnet/minecraft/core/particles/ParticleOptions;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
	createParticle (Lnet/minecraft/core/particles/SimpleParticleType;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
net/minecraft/client/particle/DragonBreathParticle dxg
	hasHitGround a
	sprites b
	getQuadSize (F)F b
	getRenderType ()Lnet/minecraft/client/particle/ParticleRenderType; b
	tick ()V a
net/minecraft/client/particle/DragonBreathParticle$Provider dxg$a
	sprites a
	createParticle (Lnet/minecraft/core/particles/ParticleOptions;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
	createParticle (Lnet/minecraft/core/particles/SimpleParticleType;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
net/minecraft/client/particle/DripParticle dxh
	isGlowing a
	type b
	getLightColor (F)I a
	getRenderType ()Lnet/minecraft/client/particle/ParticleRenderType; b
	postMoveUpdate ()V h
	preMoveUpdate ()V g
	tick ()V a
net/minecraft/client/particle/DripParticle$CoolingDripHangParticle dxh$a
	preMoveUpdate ()V g
net/minecraft/client/particle/DripParticle$DripHangParticle dxh$b
	fallingParticle b
	postMoveUpdate ()V h
	preMoveUpdate ()V g
net/minecraft/client/particle/DripParticle$DripLandParticle dxh$c
net/minecraft/client/particle/DripParticle$FallAndLandParticle dxh$d
	landParticle b
	postMoveUpdate ()V h
net/minecraft/client/particle/DripParticle$FallingParticle dxh$e
	postMoveUpdate ()V h
net/minecraft/client/particle/DripParticle$HoneyFallAndLandParticle dxh$f
	postMoveUpdate ()V h
net/minecraft/client/particle/DripParticle$HoneyFallProvider dxh$g
	sprite a
	createParticle (Lnet/minecraft/core/particles/ParticleOptions;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
	createParticle (Lnet/minecraft/core/particles/SimpleParticleType;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
net/minecraft/client/particle/DripParticle$HoneyHangProvider dxh$h
	sprite a
	createParticle (Lnet/minecraft/core/particles/ParticleOptions;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
	createParticle (Lnet/minecraft/core/particles/SimpleParticleType;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
net/minecraft/client/particle/DripParticle$HoneyLandProvider dxh$i
	sprite a
	createParticle (Lnet/minecraft/core/particles/ParticleOptions;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
	createParticle (Lnet/minecraft/core/particles/SimpleParticleType;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
net/minecraft/client/particle/DripParticle$LavaFallProvider dxh$j
	sprite a
	createParticle (Lnet/minecraft/core/particles/ParticleOptions;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
	createParticle (Lnet/minecraft/core/particles/SimpleParticleType;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
net/minecraft/client/particle/DripParticle$LavaHangProvider dxh$k
	sprite a
	createParticle (Lnet/minecraft/core/particles/ParticleOptions;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
	createParticle (Lnet/minecraft/core/particles/SimpleParticleType;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
net/minecraft/client/particle/DripParticle$LavaLandProvider dxh$l
	sprite a
	createParticle (Lnet/minecraft/core/particles/ParticleOptions;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
	createParticle (Lnet/minecraft/core/particles/SimpleParticleType;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
net/minecraft/client/particle/DripParticle$NectarFallProvider dxh$m
	sprite a
	createParticle (Lnet/minecraft/core/particles/ParticleOptions;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
	createParticle (Lnet/minecraft/core/particles/SimpleParticleType;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
net/minecraft/client/particle/DripParticle$ObsidianTearFallProvider dxh$n
	sprite a
	createParticle (Lnet/minecraft/core/particles/ParticleOptions;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
	createParticle (Lnet/minecraft/core/particles/SimpleParticleType;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
net/minecraft/client/particle/DripParticle$ObsidianTearHangProvider dxh$o
	sprite a
	createParticle (Lnet/minecraft/core/particles/ParticleOptions;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
	createParticle (Lnet/minecraft/core/particles/SimpleParticleType;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
net/minecraft/client/particle/DripParticle$ObsidianTearLandProvider dxh$p
	sprite a
	createParticle (Lnet/minecraft/core/particles/ParticleOptions;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
	createParticle (Lnet/minecraft/core/particles/SimpleParticleType;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
net/minecraft/client/particle/DripParticle$WaterFallProvider dxh$q
	sprite a
	createParticle (Lnet/minecraft/core/particles/ParticleOptions;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
	createParticle (Lnet/minecraft/core/particles/SimpleParticleType;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
net/minecraft/client/particle/DripParticle$WaterHangProvider dxh$r
	sprite a
	createParticle (Lnet/minecraft/core/particles/ParticleOptions;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
	createParticle (Lnet/minecraft/core/particles/SimpleParticleType;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
net/minecraft/client/particle/DustParticle dxi
	sprites a
	getQuadSize (F)F b
	getRenderType ()Lnet/minecraft/client/particle/ParticleRenderType; b
	tick ()V a
net/minecraft/client/particle/DustParticle$Provider dxi$a
	sprites a
	createParticle (Lnet/minecraft/core/particles/DustParticleOptions;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
	createParticle (Lnet/minecraft/core/particles/ParticleOptions;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
net/minecraft/client/particle/EnchantmentTableParticle dxj
	xStart a
	yStart b
	zStart D
	getLightColor (F)I a
	getRenderType ()Lnet/minecraft/client/particle/ParticleRenderType; b
	move (DDD)V a
	tick ()V a
net/minecraft/client/particle/EnchantmentTableParticle$NautilusProvider dxj$a
	sprite a
	createParticle (Lnet/minecraft/core/particles/ParticleOptions;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
	createParticle (Lnet/minecraft/core/particles/SimpleParticleType;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
net/minecraft/client/particle/EnchantmentTableParticle$Provider dxj$b
	sprite a
	createParticle (Lnet/minecraft/core/particles/ParticleOptions;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
	createParticle (Lnet/minecraft/core/particles/SimpleParticleType;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
net/minecraft/client/particle/EndRodParticle dxk
	move (DDD)V a
net/minecraft/client/particle/EndRodParticle$Provider dxk$a
	sprites a
	createParticle (Lnet/minecraft/core/particles/ParticleOptions;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
	createParticle (Lnet/minecraft/core/particles/SimpleParticleType;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
net/minecraft/client/particle/ExplodeParticle dxl
	sprites a
	getRenderType ()Lnet/minecraft/client/particle/ParticleRenderType; b
	tick ()V a
net/minecraft/client/particle/ExplodeParticle$Provider dxl$a
	sprites a
	createParticle (Lnet/minecraft/core/particles/ParticleOptions;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
	createParticle (Lnet/minecraft/core/particles/SimpleParticleType;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
net/minecraft/client/particle/FallingDustParticle dxm
	rotSpeed a
	sprites b
	getQuadSize (F)F b
	getRenderType ()Lnet/minecraft/client/particle/ParticleRenderType; b
	tick ()V a
net/minecraft/client/particle/FallingDustParticle$Provider dxm$a
	sprite a
	createParticle (Lnet/minecraft/core/particles/BlockParticleOption;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
	createParticle (Lnet/minecraft/core/particles/ParticleOptions;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
net/minecraft/client/particle/FireworkParticles dxn
net/minecraft/client/particle/FireworkParticles$FlashProvider dxn$a
	sprite a
	createParticle (Lnet/minecraft/core/particles/ParticleOptions;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
	createParticle (Lnet/minecraft/core/particles/SimpleParticleType;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
net/minecraft/client/particle/FireworkParticles$OverlayParticle dxn$b
	getQuadSize (F)F b
	getRenderType ()Lnet/minecraft/client/particle/ParticleRenderType; b
	render (Lcom/mojang/blaze3d/vertex/VertexConsumer;Lnet/minecraft/client/Camera;F)V a
net/minecraft/client/particle/FireworkParticles$SparkParticle dxn$c
	engine E
	fadeB H
	fadeG G
	fadeR F
	flicker D
	hasFade I
	trail b
	render (Lcom/mojang/blaze3d/vertex/VertexConsumer;Lnet/minecraft/client/Camera;F)V a
	setFlicker (Z)V b
	setTrail (Z)V a
	tick ()V a
net/minecraft/client/particle/FireworkParticles$SparkProvider dxn$d
	sprites a
	createParticle (Lnet/minecraft/core/particles/ParticleOptions;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
	createParticle (Lnet/minecraft/core/particles/SimpleParticleType;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
net/minecraft/client/particle/FireworkParticles$Starter dxn$e
	engine b
	explosions B
	life a
	twinkleDelay C
	createParticle (DDDDDD[I[IZZ)V a
	createParticleBall (DI[I[IZZ)V a
	createParticleBurst ([I[IZZ)V a
	createParticleShape (D[[D[I[IZZZ)V a
	isFarAwayFromCamera ()Z c
	tick ()V a
net/minecraft/client/particle/FlameParticle dxo
	getLightColor (F)I a
	getQuadSize (F)F b
	getRenderType ()Lnet/minecraft/client/particle/ParticleRenderType; b
	move (DDD)V a
net/minecraft/client/particle/FlameParticle$Provider dxo$a
	sprite a
	createParticle (Lnet/minecraft/core/particles/ParticleOptions;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
	createParticle (Lnet/minecraft/core/particles/SimpleParticleType;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
net/minecraft/client/particle/HeartParticle dxp
	getQuadSize (F)F b
	getRenderType ()Lnet/minecraft/client/particle/ParticleRenderType; b
	tick ()V a
net/minecraft/client/particle/HeartParticle$AngryVillagerProvider dxp$a
	sprite a
	createParticle (Lnet/minecraft/core/particles/ParticleOptions;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
	createParticle (Lnet/minecraft/core/particles/SimpleParticleType;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
net/minecraft/client/particle/HeartParticle$Provider dxp$b
	sprite a
	createParticle (Lnet/minecraft/core/particles/ParticleOptions;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
	createParticle (Lnet/minecraft/core/particles/SimpleParticleType;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
net/minecraft/client/particle/HugeExplosionParticle dxq
	sprites a
	getLightColor (F)I a
	getRenderType ()Lnet/minecraft/client/particle/ParticleRenderType; b
	tick ()V a
net/minecraft/client/particle/HugeExplosionParticle$Provider dxq$a
	sprites a
	createParticle (Lnet/minecraft/core/particles/ParticleOptions;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
	createParticle (Lnet/minecraft/core/particles/SimpleParticleType;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
net/minecraft/client/particle/HugeExplosionSeedParticle dxr
	life a
	lifeTime b
	tick ()V a
net/minecraft/client/particle/HugeExplosionSeedParticle$Provider dxr$a
	createParticle (Lnet/minecraft/core/particles/ParticleOptions;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
	createParticle (Lnet/minecraft/core/particles/SimpleParticleType;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
net/minecraft/client/particle/ItemPickupParticle dxs
	entityRenderDispatcher D
	itemEntity b
	life C
	renderBuffers a
	target B
	getRenderType ()Lnet/minecraft/client/particle/ParticleRenderType; b
	getSafeCopy (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/world/entity/Entity; a
	render (Lcom/mojang/blaze3d/vertex/VertexConsumer;Lnet/minecraft/client/Camera;F)V a
	tick ()V a
net/minecraft/client/particle/LargeSmokeParticle dxt
net/minecraft/client/particle/LargeSmokeParticle$Provider dxt$a
	sprites a
	createParticle (Lnet/minecraft/core/particles/ParticleOptions;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
	createParticle (Lnet/minecraft/core/particles/SimpleParticleType;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
net/minecraft/client/particle/LavaParticle dxu
	getLightColor (F)I a
	getQuadSize (F)F b
	getRenderType ()Lnet/minecraft/client/particle/ParticleRenderType; b
	tick ()V a
net/minecraft/client/particle/LavaParticle$Provider dxu$a
	sprite a
	createParticle (Lnet/minecraft/core/particles/ParticleOptions;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
	createParticle (Lnet/minecraft/core/particles/SimpleParticleType;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
net/minecraft/client/particle/MobAppearanceParticle dxv
	model a
	renderType b
	getRenderType ()Lnet/minecraft/client/particle/ParticleRenderType; b
	render (Lcom/mojang/blaze3d/vertex/VertexConsumer;Lnet/minecraft/client/Camera;F)V a
net/minecraft/client/particle/MobAppearanceParticle$Provider dxv$a
	createParticle (Lnet/minecraft/core/particles/ParticleOptions;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
	createParticle (Lnet/minecraft/core/particles/SimpleParticleType;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
net/minecraft/client/particle/NoRenderParticle dxw
	getRenderType ()Lnet/minecraft/client/particle/ParticleRenderType; b
	render (Lcom/mojang/blaze3d/vertex/VertexConsumer;Lnet/minecraft/client/Camera;F)V a
net/minecraft/client/particle/NoteParticle dxx
	getQuadSize (F)F b
	getRenderType ()Lnet/minecraft/client/particle/ParticleRenderType; b
	tick ()V a
net/minecraft/client/particle/NoteParticle$Provider dxx$a
	sprite a
	createParticle (Lnet/minecraft/core/particles/ParticleOptions;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
	createParticle (Lnet/minecraft/core/particles/SimpleParticleType;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
net/minecraft/client/particle/Particle dxy
	INITIAL_AABB a
	age s
	alpha y
	bCol x
	bb b
	bbHeight q
	bbWidth p
	gCol w
	gravity u
	hasPhysics n
	level c
	lifetime t
	oRoll A
	onGround m
	rCol v
	random r
	removed o
	roll z
	stoppedByCollision B
	x g
	xd j
	xo d
	y h
	yd k
	yo e
	z i
	zd l
	zo f
	getBoundingBox ()Lnet/minecraft/world/phys/AABB; m
	getLifetime ()I i
	getLightColor (F)I a
	getRenderType ()Lnet/minecraft/client/particle/ParticleRenderType; b
	isAlive ()Z l
	move (DDD)V a
	remove ()V j
	render (Lcom/mojang/blaze3d/vertex/VertexConsumer;Lnet/minecraft/client/Camera;F)V a
	scale (F)Lnet/minecraft/client/particle/Particle; d
	setAlpha (F)V e
	setBoundingBox (Lnet/minecraft/world/phys/AABB;)V a
	setColor (FFF)V a
	setLifetime (I)V a
	setLocationFromBoundingbox ()V k
	setPos (DDD)V b
	setPower (F)Lnet/minecraft/client/particle/Particle; c
	setSize (FF)V a
	tick ()V a
net/minecraft/client/particle/ParticleDescription dxz
	textures a
	fromJson (Lcom/google/gson/JsonObject;)Lnet/minecraft/client/particle/ParticleDescription; a
	getTextures ()Ljava/util/List; a
net/minecraft/client/particle/ParticleEngine dya
	RENDER_ORDER b
	level a
	particles c
	particlesToAdd h
	providers g
	random f
	spriteSets i
	textureAtlas j
	textureManager e
	trackingEmitters d
	add (Lnet/minecraft/client/particle/Particle;)V a
	close ()V a
	countParticles ()Ljava/lang/String; d
	crack (Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;)V a
	createParticle (Lnet/minecraft/core/particles/ParticleOptions;DDDDDD)Lnet/minecraft/client/particle/Particle; a
	createTrackingEmitter (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/core/particles/ParticleOptions;)V a
	createTrackingEmitter (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/core/particles/ParticleOptions;I)V a
	destroy (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V a
	loadParticleDescription (Lnet/minecraft/server/packs/resources/ResourceManager;Lnet/minecraft/resources/ResourceLocation;Ljava/util/Map;)V a
	makeParticle (Lnet/minecraft/core/particles/ParticleOptions;DDDDDD)Lnet/minecraft/client/particle/Particle; b
	register (Lnet/minecraft/core/particles/ParticleType;Lnet/minecraft/client/particle/ParticleEngine$SpriteParticleRegistration;)V a
	register (Lnet/minecraft/core/particles/ParticleType;Lnet/minecraft/client/particle/ParticleProvider;)V a
	registerProviders ()V e
	reload (Lnet/minecraft/server/packs/resources/PreparableReloadListener$PreparationBarrier;Lnet/minecraft/server/packs/resources/ResourceManager;Lnet/minecraft/util/profiling/ProfilerFiller;Lnet/minecraft/util/profiling/ProfilerFiller;Ljava/util/concurrent/Executor;Ljava/util/concurrent/Executor;)Ljava/util/concurrent/CompletableFuture; a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource$BufferSource;Lnet/minecraft/client/renderer/LightTexture;Lnet/minecraft/client/Camera;F)V a
	setLevel (Lnet/minecraft/client/multiplayer/ClientLevel;)V a
	tick ()V b
	tickParticle (Lnet/minecraft/client/particle/Particle;)V b
	tickParticleList (Ljava/util/Collection;)V a
net/minecraft/client/particle/ParticleEngine$MutableSpriteSet dya$a
	sprites b
	get (II)Lnet/minecraft/client/renderer/texture/TextureAtlasSprite; a
	get (Ljava/util/Random;)Lnet/minecraft/client/renderer/texture/TextureAtlasSprite; a
	rebind (Ljava/util/List;)V a
net/minecraft/client/particle/ParticleEngine$SpriteParticleRegistration dya$b
net/minecraft/client/particle/ParticleProvider dyb
	createParticle (Lnet/minecraft/core/particles/ParticleOptions;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
net/minecraft/client/particle/ParticleRenderType dyc
	CUSTOM e
	NO_RENDER f
	PARTICLE_SHEET_LIT d
	PARTICLE_SHEET_OPAQUE b
	PARTICLE_SHEET_TRANSLUCENT c
	TERRAIN_SHEET a
	begin (Lcom/mojang/blaze3d/vertex/BufferBuilder;Lnet/minecraft/client/renderer/texture/TextureManager;)V a
	end (Lcom/mojang/blaze3d/vertex/Tesselator;)V a
net/minecraft/client/particle/PlayerCloudParticle dyd
	sprites a
	getQuadSize (F)F b
	getRenderType ()Lnet/minecraft/client/particle/ParticleRenderType; b
	tick ()V a
net/minecraft/client/particle/PlayerCloudParticle$Provider dyd$a
	sprites a
	createParticle (Lnet/minecraft/core/particles/ParticleOptions;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
	createParticle (Lnet/minecraft/core/particles/SimpleParticleType;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
net/minecraft/client/particle/PlayerCloudParticle$SneezeProvider dyd$b
	sprites a
	createParticle (Lnet/minecraft/core/particles/ParticleOptions;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
	createParticle (Lnet/minecraft/core/particles/SimpleParticleType;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
net/minecraft/client/particle/PortalParticle dye
	xStart a
	yStart b
	zStart D
	getLightColor (F)I a
	getQuadSize (F)F b
	getRenderType ()Lnet/minecraft/client/particle/ParticleRenderType; b
	move (DDD)V a
	tick ()V a
net/minecraft/client/particle/PortalParticle$Provider dye$a
	sprite a
	createParticle (Lnet/minecraft/core/particles/ParticleOptions;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
	createParticle (Lnet/minecraft/core/particles/SimpleParticleType;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
net/minecraft/client/particle/ReversePortalParticle dyf
	getQuadSize (F)F b
	tick ()V a
net/minecraft/client/particle/ReversePortalParticle$ReversePortalProvider dyf$a
	sprite a
	createParticle (Lnet/minecraft/core/particles/ParticleOptions;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
	createParticle (Lnet/minecraft/core/particles/SimpleParticleType;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
net/minecraft/client/particle/RisingParticle dyg
	tick ()V a
net/minecraft/client/particle/SimpleAnimatedParticle dyh
	baseAirFriction D
	baseGravity b
	fadeB G
	fadeG F
	fadeR E
	hasFade H
	sprites a
	getLightColor (F)I a
	getRenderType ()Lnet/minecraft/client/particle/ParticleRenderType; b
	setBaseAirFriction (F)V f
	setColor (I)V b
	setFadeColor (I)V c
	tick ()V a
net/minecraft/client/particle/SingleQuadParticle dyi
	quadSize B
	getQuadSize (F)F b
	getU0 ()F c
	getU1 ()F d
	getV0 ()F e
	getV1 ()F f
	render (Lcom/mojang/blaze3d/vertex/VertexConsumer;Lnet/minecraft/client/Camera;F)V a
	scale (F)Lnet/minecraft/client/particle/Particle; d
net/minecraft/client/particle/SmokeParticle dyj
net/minecraft/client/particle/SmokeParticle$Provider dyj$a
	sprites a
	createParticle (Lnet/minecraft/core/particles/ParticleOptions;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
	createParticle (Lnet/minecraft/core/particles/SimpleParticleType;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
net/minecraft/client/particle/SoulParticle dyk
	sprites a
	getRenderType ()Lnet/minecraft/client/particle/ParticleRenderType; b
	tick ()V a
net/minecraft/client/particle/SoulParticle$Provider dyk$a
	sprite a
	createParticle (Lnet/minecraft/core/particles/ParticleOptions;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
	createParticle (Lnet/minecraft/core/particles/SimpleParticleType;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
net/minecraft/client/particle/SpellParticle dyl
	RANDOM a
	sprites b
	getRenderType ()Lnet/minecraft/client/particle/ParticleRenderType; b
	tick ()V a
net/minecraft/client/particle/SpellParticle$AmbientMobProvider dyl$a
	sprite a
	createParticle (Lnet/minecraft/core/particles/ParticleOptions;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
	createParticle (Lnet/minecraft/core/particles/SimpleParticleType;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
net/minecraft/client/particle/SpellParticle$InstantProvider dyl$b
	sprite a
	createParticle (Lnet/minecraft/core/particles/ParticleOptions;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
	createParticle (Lnet/minecraft/core/particles/SimpleParticleType;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
net/minecraft/client/particle/SpellParticle$MobProvider dyl$c
	sprite a
	createParticle (Lnet/minecraft/core/particles/ParticleOptions;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
	createParticle (Lnet/minecraft/core/particles/SimpleParticleType;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
net/minecraft/client/particle/SpellParticle$Provider dyl$d
	sprite a
	createParticle (Lnet/minecraft/core/particles/ParticleOptions;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
	createParticle (Lnet/minecraft/core/particles/SimpleParticleType;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
net/minecraft/client/particle/SpellParticle$WitchProvider dyl$e
	sprite a
	createParticle (Lnet/minecraft/core/particles/ParticleOptions;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
	createParticle (Lnet/minecraft/core/particles/SimpleParticleType;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
net/minecraft/client/particle/SpitParticle dym
	tick ()V a
net/minecraft/client/particle/SpitParticle$Provider dym$a
	sprites a
	createParticle (Lnet/minecraft/core/particles/ParticleOptions;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
	createParticle (Lnet/minecraft/core/particles/SimpleParticleType;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
net/minecraft/client/particle/SplashParticle dyn
net/minecraft/client/particle/SplashParticle$Provider dyn$a
	sprite a
	createParticle (Lnet/minecraft/core/particles/ParticleOptions;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
	createParticle (Lnet/minecraft/core/particles/SimpleParticleType;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
net/minecraft/client/particle/SpriteSet dyo
	get (II)Lnet/minecraft/client/renderer/texture/TextureAtlasSprite; a
	get (Ljava/util/Random;)Lnet/minecraft/client/renderer/texture/TextureAtlasSprite; a
net/minecraft/client/particle/SquidInkParticle dyp
	tick ()V a
net/minecraft/client/particle/SquidInkParticle$Provider dyp$a
	sprites a
	createParticle (Lnet/minecraft/core/particles/ParticleOptions;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
	createParticle (Lnet/minecraft/core/particles/SimpleParticleType;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
net/minecraft/client/particle/SuspendedParticle dyq
	getRenderType ()Lnet/minecraft/client/particle/ParticleRenderType; b
	tick ()V a
net/minecraft/client/particle/SuspendedParticle$CrimsonSporeProvider dyq$a
	sprite a
	createParticle (Lnet/minecraft/core/particles/ParticleOptions;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
	createParticle (Lnet/minecraft/core/particles/SimpleParticleType;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
net/minecraft/client/particle/SuspendedParticle$UnderwaterProvider dyq$b
	sprite a
	createParticle (Lnet/minecraft/core/particles/ParticleOptions;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
	createParticle (Lnet/minecraft/core/particles/SimpleParticleType;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
net/minecraft/client/particle/SuspendedParticle$WarpedSporeProvider dyq$c
	sprite a
	createParticle (Lnet/minecraft/core/particles/ParticleOptions;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
	createParticle (Lnet/minecraft/core/particles/SimpleParticleType;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
net/minecraft/client/particle/SuspendedTownParticle dyr
	getRenderType ()Lnet/minecraft/client/particle/ParticleRenderType; b
	move (DDD)V a
	tick ()V a
net/minecraft/client/particle/SuspendedTownParticle$ComposterFillProvider dyr$a
	sprite a
	createParticle (Lnet/minecraft/core/particles/ParticleOptions;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
	createParticle (Lnet/minecraft/core/particles/SimpleParticleType;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
net/minecraft/client/particle/SuspendedTownParticle$DolphinSpeedProvider dyr$b
	sprite a
	createParticle (Lnet/minecraft/core/particles/ParticleOptions;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
	createParticle (Lnet/minecraft/core/particles/SimpleParticleType;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
net/minecraft/client/particle/SuspendedTownParticle$HappyVillagerProvider dyr$c
	sprite a
	createParticle (Lnet/minecraft/core/particles/ParticleOptions;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
	createParticle (Lnet/minecraft/core/particles/SimpleParticleType;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
net/minecraft/client/particle/SuspendedTownParticle$Provider dyr$d
	sprite a
	createParticle (Lnet/minecraft/core/particles/ParticleOptions;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
	createParticle (Lnet/minecraft/core/particles/SimpleParticleType;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
net/minecraft/client/particle/TerrainParticle dys
	blockState a
	pos b
	uo D
	vo E
	getLightColor (F)I a
	getRenderType ()Lnet/minecraft/client/particle/ParticleRenderType; b
	getU0 ()F c
	getU1 ()F d
	getV0 ()F e
	getV1 ()F f
	init ()Lnet/minecraft/client/particle/TerrainParticle; g
	init (Lnet/minecraft/core/BlockPos;)Lnet/minecraft/client/particle/TerrainParticle; a
	multiplyColor (Lnet/minecraft/core/BlockPos;)V b
net/minecraft/client/particle/TerrainParticle$Provider dys$a
	createParticle (Lnet/minecraft/core/particles/BlockParticleOption;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
	createParticle (Lnet/minecraft/core/particles/ParticleOptions;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
net/minecraft/client/particle/TextureSheetParticle dyt
	sprite C
	getU0 ()F c
	getU1 ()F d
	getV0 ()F e
	getV1 ()F f
	pickSprite (Lnet/minecraft/client/particle/SpriteSet;)V a
	setSprite (Lnet/minecraft/client/renderer/texture/TextureAtlasSprite;)V a
	setSpriteFromAge (Lnet/minecraft/client/particle/SpriteSet;)V b
net/minecraft/client/particle/TotemParticle dyu
net/minecraft/client/particle/TotemParticle$Provider dyu$a
	sprites a
	createParticle (Lnet/minecraft/core/particles/ParticleOptions;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
	createParticle (Lnet/minecraft/core/particles/SimpleParticleType;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
net/minecraft/client/particle/TrackingEmitter dyv
	entity a
	life b
	lifeTime B
	particleType C
	tick ()V a
net/minecraft/client/particle/WakeParticle dyw
	sprites a
	getRenderType ()Lnet/minecraft/client/particle/ParticleRenderType; b
	tick ()V a
net/minecraft/client/particle/WakeParticle$Provider dyw$a
	sprites a
	createParticle (Lnet/minecraft/core/particles/ParticleOptions;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
	createParticle (Lnet/minecraft/core/particles/SimpleParticleType;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
net/minecraft/client/particle/WaterCurrentDownParticle dyx
	angle a
	getRenderType ()Lnet/minecraft/client/particle/ParticleRenderType; b
	tick ()V a
net/minecraft/client/particle/WaterCurrentDownParticle$Provider dyx$a
	sprite a
	createParticle (Lnet/minecraft/core/particles/ParticleOptions;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
	createParticle (Lnet/minecraft/core/particles/SimpleParticleType;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
net/minecraft/client/particle/WaterDropParticle dyy
	getRenderType ()Lnet/minecraft/client/particle/ParticleRenderType; b
	tick ()V a
net/minecraft/client/particle/WaterDropParticle$Provider dyy$a
	sprite a
	createParticle (Lnet/minecraft/core/particles/ParticleOptions;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
	createParticle (Lnet/minecraft/core/particles/SimpleParticleType;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
net/minecraft/client/particle/WhiteAshParticle dyz
net/minecraft/client/particle/WhiteAshParticle$Provider dyz$a
	sprites a
	createParticle (Lnet/minecraft/core/particles/ParticleOptions;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
	createParticle (Lnet/minecraft/core/particles/SimpleParticleType;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
net/minecraft/client/player/AbstractClientPlayer dzb
	clientLevel d
	elytraRotX a
	elytraRotY b
	elytraRotZ c
	playerInfo e
	getCloakTextureLocation ()Lnet/minecraft/resources/ResourceLocation; p
	getElytraTextureLocation ()Lnet/minecraft/resources/ResourceLocation; r
	getFieldOfViewModifier ()F v
	getModelName ()Ljava/lang/String; u
	getPlayerInfo ()Lnet/minecraft/client/multiplayer/PlayerInfo; f
	getSkinLocation (Ljava/lang/String;)Lnet/minecraft/resources/ResourceLocation; d
	getSkinTextureLocation ()Lnet/minecraft/resources/ResourceLocation; o
	getSkullPath (Ljava/lang/String;)Lnet/minecraft/resources/ResourceLocation; e
	isCapeLoaded ()Z c
	isCreative ()Z b_
	isElytraLoaded ()Z q
	isSkinLoaded ()Z n
	isSpectator ()Z a_
	registerSkinTexture (Lnet/minecraft/resources/ResourceLocation;Ljava/lang/String;)Lnet/minecraft/client/renderer/texture/HttpTexture; a
net/minecraft/client/player/Input dzc
	down d
	forwardImpulse b
	jumping g
	left e
	leftImpulse a
	right f
	shiftKeyDown h
	up c
	getMoveVector ()Lnet/minecraft/world/phys/Vec2; a
	hasForwardImpulse ()Z b
	tick (Z)V a
net/minecraft/client/player/KeyboardInput dzd
	options i
	tick (Z)V a
net/minecraft/client/player/LocalPlayer dze
	ambientSoundHandlers bT
	autoJumpEnabled cm
	autoJumpTime cn
	connection e
	crouching cb
	flashOnSetHealth cf
	handsBusy cl
	input f
	jumpRidingScale ci
	jumpRidingTicks ch
	lastOnGround ca
	minecraft g
	oPortalTime bQ
	permissionLevel bU
	portalTime bP
	positionReminder ce
	recipeBook bS
	serverBrand cg
	showDeathScreen cq
	sprintTime bK
	sprintTriggerTime bJ
	startedUsingItem cj
	stats bR
	usingItemHand ck
	wasFallFlying co
	wasShiftKeyDown cc
	wasSprinting cd
	waterVisionTime cp
	xBob bM
	xBobO bO
	xLast bV
	xRotLast bZ
	yBob bL
	yBobO bN
	yLast1 bW
	yRotLast bY
	zLast bX
	actuallyHurt (Lnet/minecraft/world/damagesource/DamageSource;F)V e
	aiStep ()V k
	canAutoJump ()Z eW
	canSpawnSoulSpeedParticle ()Z cM
	canSpawnSprintParticle ()Z aN
	chat (Ljava/lang/String;)V f
	clientSideCloseContainer ()V x
	closeContainer ()V m
	crit (Lnet/minecraft/world/entity/Entity;)V a
	displayClientMessage (Lnet/minecraft/network/chat/Component;Z)V a
	drop (Z)Z a
	getCurrentMood ()F w
	getJumpRidingScale ()F I
	getPermissionLevel ()I y
	getRecipeBook ()Lnet/minecraft/client/ClientRecipeBook; F
	getRopeHoldPosition (F)Lnet/minecraft/world/phys/Vec3; o
	getServerBrand ()Ljava/lang/String; B
	getStats ()Lnet/minecraft/stats/StatsCounter; D
	getUsedItemHand ()Lnet/minecraft/world/InteractionHand; dW
	getViewXRot (F)F g
	getViewYRot (F)F h
	getWaterVision ()F N
	handleEntityEvent (B)V a
	handleNetherPortalClient ()V eV
	hasEnoughImpulseToStartSprinting ()Z eY
	heal (F)V b
	hurt (Lnet/minecraft/world/damagesource/DamageSource;F)Z a
	hurtTo (F)V v
	isAutoJumpEnabled ()Z M
	isControlledCamera ()Z K
	isCrouching ()Z by
	isEffectiveAi ()Z dR
	isHandsBusy ()Z L
	isLocalPlayer ()Z ey
	isMoving ()Z eX
	isMovingSlowly ()Z J
	isRidingJumpable ()Z H
	isShiftKeyDown ()Z bt
	isSuppressingSlidingDownLadder ()Z ed
	isUnderWater ()Z aH
	isUsingItem ()Z dV
	magicCrit (Lnet/minecraft/world/entity/Entity;)V b
	move (Lnet/minecraft/world/entity/MoverType;Lnet/minecraft/world/phys/Vec3;)V a
	moveTowardsClosestSpace (DD)V b
	onSyncedDataUpdated (Lnet/minecraft/network/syncher/EntityDataAccessor;)V a
	onUpdateAbilities ()V t
	openCommandBlock (Lnet/minecraft/world/level/block/entity/CommandBlockEntity;)V a
	openItemGui (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/InteractionHand;)V a
	openJigsawBlock (Lnet/minecraft/world/level/block/entity/JigsawBlockEntity;)V a
	openMinecartCommandBlock (Lnet/minecraft/world/level/BaseCommandBlock;)V a
	openStructureBlock (Lnet/minecraft/world/level/block/entity/StructureBlockEntity;)V a
	openTextEdit (Lnet/minecraft/world/level/block/entity/SignBlockEntity;)V a
	playNotifySound (Lnet/minecraft/sounds/SoundEvent;Lnet/minecraft/sounds/SoundSource;FF)V a
	playSound (Lnet/minecraft/sounds/SoundEvent;FF)V a
	removeEffectNoUpdate (Lnet/minecraft/world/effect/MobEffect;)Lnet/minecraft/world/effect/MobEffectInstance; c
	removeRecipeHighlight (Lnet/minecraft/world/item/crafting/Recipe;)V a
	removeVehicle ()V be
	respawn ()V ex
	rideTick ()V aZ
	sendMessage (Lnet/minecraft/network/chat/Component;Ljava/util/UUID;)V a
	sendOpenInventory ()V A
	sendPosition ()V O
	sendRidingJump ()V z
	serverAiStep ()V dO
	setExperienceValues (FII)V a
	setPermissionLevel (I)V a
	setServerBrand (Ljava/lang/String;)V g
	setShowDeathScreen (Z)V b
	setSprinting (Z)V g
	shouldShowDeathScreen ()Z G
	startRiding (Lnet/minecraft/world/entity/Entity;Z)Z a
	startUsingItem (Lnet/minecraft/world/InteractionHand;)V c
	stopUsingItem ()V eb
	suffocatesAt (Lnet/minecraft/core/BlockPos;)Z g
	swing (Lnet/minecraft/world/InteractionHand;)V a
	tick ()V j
	updateAutoJump (FF)V g
	updateIsUnderwater ()Z es
net/minecraft/client/player/RemotePlayer dzf
	aiStep ()V k
	hurt (Lnet/minecraft/world/damagesource/DamageSource;F)Z a
	sendMessage (Lnet/minecraft/network/chat/Component;Ljava/util/UUID;)V a
	shouldRenderAtSqrDistance (D)Z a
	tick ()V j
	updatePlayerPose ()V et
net/minecraft/client/player/inventory/Hotbar dzg
	items a
	createTag ()Lnet/minecraft/nbt/ListTag; a
	fromTag (Lnet/minecraft/nbt/ListTag;)V a
net/minecraft/client/renderer/BiomeColors dzj
	FOLIAGE_COLOR_RESOLVER b
	GRASS_COLOR_RESOLVER a
	WATER_COLOR_RESOLVER c
	getAverageColor (Lnet/minecraft/world/level/BlockAndTintGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/ColorResolver;)I a
	getAverageFoliageColor (Lnet/minecraft/world/level/BlockAndTintGetter;Lnet/minecraft/core/BlockPos;)I b
	getAverageGrassColor (Lnet/minecraft/world/level/BlockAndTintGetter;Lnet/minecraft/core/BlockPos;)I a
	getAverageWaterColor (Lnet/minecraft/world/level/BlockAndTintGetter;Lnet/minecraft/core/BlockPos;)I c
net/minecraft/client/renderer/BlockEntityWithoutLevelRenderer dzk
	DEFAULT_SHULKER_BOX c
	SHULKER_BOXES b
	banner g
	bed h
	chest d
	conduit i
	enderChest f
	instance a
	shieldModel j
	trappedChest e
	tridentModel k
	renderByItem (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/client/renderer/block/model/ItemTransforms$TransformType;Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;II)V a
net/minecraft/client/renderer/ChunkBufferBuilderPack dzl
	builders a
	builder (Lnet/minecraft/client/renderer/RenderType;)Lcom/mojang/blaze3d/vertex/BufferBuilder; a
	clearAll ()V a
	discardAll ()V b
net/minecraft/client/renderer/CubeMap dzm
	images a
	preload (Lnet/minecraft/client/renderer/texture/TextureManager;Ljava/util/concurrent/Executor;)Ljava/util/concurrent/CompletableFuture; a
	render (Lnet/minecraft/client/Minecraft;FFF)V a
net/minecraft/client/renderer/DimensionSpecialEffects dzn
	EFFECTS a
	cloudLevel c
	constantAmbientLight g
	forceBrightLightmap f
	hasGround d
	skyType e
	sunriseCol b
	constantAmbientLight ()Z e
	forType (Lnet/minecraft/world/level/dimension/DimensionType;)Lnet/minecraft/client/renderer/DimensionSpecialEffects; a
	forceBrightLightmap ()Z d
	getBrightnessDependentFogColor (Lnet/minecraft/world/phys/Vec3;F)Lnet/minecraft/world/phys/Vec3; a
	getCloudHeight ()F a
	getSunriseColor (FF)[F a
	hasGround ()Z b
	isFoggyAt (II)Z a
	skyType ()Lnet/minecraft/client/renderer/DimensionSpecialEffects$SkyType; c
net/minecraft/client/renderer/DimensionSpecialEffects$EndEffects dzn$a
	getBrightnessDependentFogColor (Lnet/minecraft/world/phys/Vec3;F)Lnet/minecraft/world/phys/Vec3; a
	getSunriseColor (FF)[F a
	isFoggyAt (II)Z a
net/minecraft/client/renderer/DimensionSpecialEffects$NetherEffects dzn$b
	getBrightnessDependentFogColor (Lnet/minecraft/world/phys/Vec3;F)Lnet/minecraft/world/phys/Vec3; a
	isFoggyAt (II)Z a
net/minecraft/client/renderer/DimensionSpecialEffects$OverworldEffects dzn$c
	getBrightnessDependentFogColor (Lnet/minecraft/world/phys/Vec3;F)Lnet/minecraft/world/phys/Vec3; a
	isFoggyAt (II)Z a
net/minecraft/client/renderer/DimensionSpecialEffects$SkyType dzn$d
	$VALUES d
	END c
	NONE a
	NORMAL b
net/minecraft/client/renderer/EffectInstance dzo
	DUMMY_UNIFORM b
	LOGGER a
	attributeNames p
	attributes o
	blend n
	dirty m
	fragmentProgram r
	lastAppliedEffect c
	lastProgramId d
	name l
	programId k
	samplerLocations g
	samplerMap e
	samplerNames f
	uniformLocations i
	uniformMap j
	uniforms h
	vertexProgram q
	apply ()V f
	clear ()V e
	getFragmentProgram ()Lcom/mojang/blaze3d/shaders/Program; d
	getId ()I a
	getName ()Ljava/lang/String; g
	getOrCreate (Lnet/minecraft/server/packs/resources/ResourceManager;Lcom/mojang/blaze3d/shaders/Program$Type;Ljava/lang/String;)Lcom/mojang/blaze3d/shaders/Program; a
	getUniform (Ljava/lang/String;)Lcom/mojang/blaze3d/shaders/Uniform; a
	getVertexProgram ()Lcom/mojang/blaze3d/shaders/Program; c
	markDirty ()V b
	parseBlendNode (Lcom/google/gson/JsonObject;)Lcom/mojang/blaze3d/shaders/BlendMode; a
	parseSamplerNode (Lcom/google/gson/JsonElement;)V a
	parseUniformNode (Lcom/google/gson/JsonElement;)V b
	safeGetUniform (Ljava/lang/String;)Lcom/mojang/blaze3d/shaders/AbstractUniform; b
	setSampler (Ljava/lang/String;Ljava/util/function/IntSupplier;)V a
	updateLocations ()V h
net/minecraft/client/renderer/FaceInfo dzp
	$VALUES i
	BY_FACING g
	DOWN a
	EAST f
	NORTH c
	SOUTH d
	UP b
	WEST e
	infos h
	fromFacing (Lnet/minecraft/core/Direction;)Lnet/minecraft/client/renderer/FaceInfo; a
	getVertexInfo (I)Lnet/minecraft/client/renderer/FaceInfo$VertexInfo; a
net/minecraft/client/renderer/FaceInfo$Constants dzp$a
	MAX_X c
	MAX_Y b
	MAX_Z a
	MIN_X f
	MIN_Y e
	MIN_Z d
net/minecraft/client/renderer/FaceInfo$VertexInfo dzp$b
	xFace a
	yFace b
	zFace c
net/minecraft/client/renderer/FogRenderer dzq
	biomeChangedTime f
	fogBlue c
	fogGreen b
	fogRed a
	previousBiomeFog e
	targetBiomeFog d
	levelFogColor ()V b
	setupColor (Lnet/minecraft/client/Camera;FLnet/minecraft/client/multiplayer/ClientLevel;IF)V a
	setupFog (Lnet/minecraft/client/Camera;Lnet/minecraft/client/renderer/FogRenderer$FogMode;FZ)V a
	setupNoFog ()V a
net/minecraft/client/renderer/FogRenderer$FogMode dzq$a
	$VALUES c
	FOG_SKY a
	FOG_TERRAIN b
net/minecraft/client/renderer/GameRenderer dzr
	EFFECTS E
	EFFECT_NONE b
	LOGGER d
	NAUSEA_LOCATION c
	darkenWorldAmount n
	darkenWorldAmountO o
	effectActive G
	effectIndex F
	fov l
	itemActivationItem z
	itemActivationOffX B
	itemActivationOffY C
	itemActivationTicks A
	itemInHandRenderer a
	lastActiveTime s
	lastScreenshotAttempt r
	lightTexture t
	mainCamera H
	mapRenderer i
	minecraft e
	oldFov m
	overlayTexture u
	panoramicMode v
	postEffect D
	random g
	renderBlockOutline q
	renderBuffers j
	renderDistance h
	renderHand p
	resourceManager f
	tick k
	zoom w
	zoomX x
	zoomY y
	bobHurt (Lcom/mojang/blaze3d/vertex/PoseStack;F)V a
	bobView (Lcom/mojang/blaze3d/vertex/PoseStack;F)V b
	checkEntityPostEffect (Lnet/minecraft/world/entity/Entity;)V a
	currentEffect ()Lnet/minecraft/client/renderer/PostChain; f
	cycleEffect ()V d
	displayItemActivation (Lnet/minecraft/world/item/ItemStack;)V a
	getDarkenWorldAmount (F)F b
	getFov (Lnet/minecraft/client/Camera;FZ)D b
	getMainCamera ()Lnet/minecraft/client/Camera; k
	getMapRenderer ()Lnet/minecraft/client/gui/MapRenderer; h
	getMinecraft ()Lnet/minecraft/client/Minecraft; i
	getNightVisionScale (Lnet/minecraft/world/entity/LivingEntity;F)F a
	getProjectionMatrix (Lnet/minecraft/client/Camera;FZ)Lcom/mojang/math/Matrix4f; a
	getRenderDistance ()F j
	lightTexture ()Lnet/minecraft/client/renderer/LightTexture; l
	loadEffect (Lnet/minecraft/resources/ResourceLocation;)V a
	onResourceManagerReload (Lnet/minecraft/server/packs/resources/ResourceManager;)V a
	overlayTexture ()Lnet/minecraft/client/renderer/texture/OverlayTexture; m
	pick (F)V a
	render (FJZ)V a
	renderConfusionOverlay (F)V c
	renderItemActivationAnimation (IIF)V a
	renderItemInHand (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/Camera;F)V a
	renderLevel (FJLcom/mojang/blaze3d/vertex/PoseStack;)V a
	renderZoomed (FFF)V a
	resetData ()V g
	resetProjectionMatrix (Lcom/mojang/math/Matrix4f;)V a
	resize (II)V a
	setPanoramicMode (Z)V c
	setRenderBlockOutline (Z)V b
	setRenderHand (Z)V a
	shouldRenderBlockOutline ()Z p
	shutdownEffect ()V a
	takeAutoScreenshot ()V o
	tick ()V e
	tickFov ()V n
	togglePostEffect ()V b
net/minecraft/client/renderer/GpuWarnlistManager dzs
	GPU_WARNLIST_LOCATION b
	LOGGER a
	showWarning d
	skipFabulous f
	warningDismissed e
	warnings c
	apply (Ljava/lang/Object;Lnet/minecraft/server/packs/resources/ResourceManager;Lnet/minecraft/util/profiling/ProfilerFiller;)V a
	apply (Lnet/minecraft/client/renderer/GpuWarnlistManager$Preparations;Lnet/minecraft/server/packs/resources/ResourceManager;Lnet/minecraft/util/profiling/ProfilerFiller;)V a
	compilePatterns (Lcom/google/gson/JsonArray;Ljava/util/List;)V a
	dismissWarning ()V e
	dismissWarningAndSkipFabulous ()V f
	getAllWarnings ()Ljava/lang/String; m
	getRendererWarnings ()Ljava/lang/String; j
	getVendorWarnings ()Ljava/lang/String; l
	getVersionWarnings ()Ljava/lang/String; k
	hasWarnings ()Z a
	isShowingWarning ()Z g
	isSkippingFabulous ()Z h
	parseJson (Lnet/minecraft/server/packs/resources/ResourceManager;Lnet/minecraft/util/profiling/ProfilerFiller;)Lcom/google/gson/JsonObject; c
	prepare (Lnet/minecraft/server/packs/resources/ResourceManager;Lnet/minecraft/util/profiling/ProfilerFiller;)Ljava/lang/Object; b
	prepare (Lnet/minecraft/server/packs/resources/ResourceManager;Lnet/minecraft/util/profiling/ProfilerFiller;)Lnet/minecraft/client/renderer/GpuWarnlistManager$Preparations; a
	resetWarnings ()V i
	showWarning ()V d
	willShowWarning ()Z b
net/minecraft/client/renderer/GpuWarnlistManager$Preparations dzs$a
	rendererPatterns a
	vendorPatterns c
	versionPatterns b
	apply ()Lcom/google/common/collect/ImmutableMap; a
	matchAny (Ljava/util/List;Ljava/lang/String;)Ljava/lang/String; a
net/minecraft/client/renderer/ItemBlockRenderTypes dzt
	TYPE_BY_BLOCK a
	TYPE_BY_FLUID b
	renderCutout c
	getChunkRenderType (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/client/renderer/RenderType; a
	getMovingBlockRenderType (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/client/renderer/RenderType; b
	getRenderLayer (Lnet/minecraft/world/level/material/FluidState;)Lnet/minecraft/client/renderer/RenderType; a
	getRenderType (Lnet/minecraft/world/item/ItemStack;Z)Lnet/minecraft/client/renderer/RenderType; a
	getRenderType (Lnet/minecraft/world/level/block/state/BlockState;Z)Lnet/minecraft/client/renderer/RenderType; a
	setFancy (Z)V a
net/minecraft/client/renderer/ItemInHandRenderer dzu
	MAP_BACKGROUND a
	MAP_BACKGROUND_CHECKERBOARD b
	entityRenderDispatcher j
	itemRenderer k
	mainHandHeight f
	mainHandItem d
	minecraft c
	oMainHandHeight g
	oOffHandHeight i
	offHandHeight h
	offHandItem e
	applyEatTransform (Lcom/mojang/blaze3d/vertex/PoseStack;FLnet/minecraft/world/entity/HumanoidArm;Lnet/minecraft/world/item/ItemStack;)V a
	applyItemArmAttackTransform (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/world/entity/HumanoidArm;F)V a
	applyItemArmTransform (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/world/entity/HumanoidArm;F)V b
	calculateMapTilt (F)F a
	itemUsed (Lnet/minecraft/world/InteractionHand;)V a
	renderArmWithItem (Lnet/minecraft/client/player/AbstractClientPlayer;FFLnet/minecraft/world/InteractionHand;FLnet/minecraft/world/item/ItemStack;FLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	renderHandsWithItems (FLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource$BufferSource;Lnet/minecraft/client/player/LocalPlayer;I)V a
	renderItem (Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/client/renderer/block/model/ItemTransforms$TransformType;ZLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	renderMap (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;ILnet/minecraft/world/item/ItemStack;)V a
	renderMapHand (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;ILnet/minecraft/world/entity/HumanoidArm;)V a
	renderOneHandedMap (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;IFLnet/minecraft/world/entity/HumanoidArm;FLnet/minecraft/world/item/ItemStack;)V a
	renderPlayerArm (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;IFFLnet/minecraft/world/entity/HumanoidArm;)V a
	renderTwoHandedMap (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;IFFF)V a
	tick ()V a
net/minecraft/client/renderer/ItemModelShaper dzv
	modelManager c
	shapes a
	shapesCache b
	getIndex (Lnet/minecraft/world/item/Item;)I b
	getItemModel (Lnet/minecraft/world/item/Item;)Lnet/minecraft/client/resources/model/BakedModel; a
	getItemModel (Lnet/minecraft/world/item/ItemStack;)Lnet/minecraft/client/resources/model/BakedModel; b
	getModelManager ()Lnet/minecraft/client/resources/model/ModelManager; a
	getParticleIcon (Lnet/minecraft/world/item/ItemStack;)Lnet/minecraft/client/renderer/texture/TextureAtlasSprite; a
	getParticleIcon (Lnet/minecraft/world/level/ItemLike;)Lnet/minecraft/client/renderer/texture/TextureAtlasSprite; a
	rebuildCache ()V b
	register (Lnet/minecraft/world/item/Item;Lnet/minecraft/client/resources/model/ModelResourceLocation;)V a
net/minecraft/client/renderer/LevelRenderer dzw
	CLOUDS_LOCATION e
	DIRECTIONS a
	END_SKY_LOCATION f
	FORCEFIELD_LOCATION g
	LOGGER b
	MOON_LOCATION c
	RAIN_LOCATION h
	SNOW_LOCATION i
	SUN_LOCATION d
	captureFrustum ag
	capturedFrustum ah
	chunkRenderDispatcher ab
	chunksToCompile o
	cloudBuffer x
	cloudsTarget J
	culledEntities af
	darkBuffer v
	destroyingBlocks A
	destructionProgress B
	entityEffect E
	entityRenderDispatcher l
	entityTarget D
	format ac
	frameId ao
	frameTimes y
	frustumPoints ai
	frustumPos aj
	generateClouds w
	globalBlockEntities q
	itemEntityTarget G
	lastCameraChunkX O
	lastCameraChunkY P
	lastCameraChunkZ Q
	lastCameraX L
	lastCameraY M
	lastCameraZ N
	lastViewDistance ad
	level n
	minecraft j
	needsUpdate an
	particlesTarget H
	playingRecords C
	prevCamRotX U
	prevCamRotY V
	prevCamX R
	prevCamY S
	prevCamZ T
	prevCloudColor Z
	prevCloudX W
	prevCloudY X
	prevCloudZ Y
	prevCloudsType aa
	rainSizeX aq
	rainSizeZ ar
	rainSoundTime ap
	renderBuffers m
	renderChunks p
	renderedEntities ae
	skyBuffer u
	skyFormat s
	starBuffer t
	textureManager k
	ticks z
	translucentTarget F
	transparencyChain K
	viewArea r
	weatherTarget I
	xTransparentOld ak
	yTransparentOld al
	zTransparentOld am
	addChainedFilledBoxVertices (Lcom/mojang/blaze3d/vertex/BufferBuilder;DDDDDDFFFF)V a
	addFrustumQuad (Lcom/mojang/blaze3d/vertex/VertexConsumer;IIIIIII)V a
	addFrustumVertex (Lcom/mojang/blaze3d/vertex/VertexConsumer;I)V a
	addParticle (Lnet/minecraft/core/particles/ParticleOptions;DDDDDD)V a
	addParticle (Lnet/minecraft/core/particles/ParticleOptions;ZDDDDDD)V a
	addParticle (Lnet/minecraft/core/particles/ParticleOptions;ZZDDDDDD)V a
	addParticleInternal (Lnet/minecraft/core/particles/ParticleOptions;ZDDDDDD)Lnet/minecraft/client/particle/Particle; b
	addParticleInternal (Lnet/minecraft/core/particles/ParticleOptions;ZZDDDDDD)Lnet/minecraft/client/particle/Particle; b
	allChanged ()V e
	blockChanged (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/state/BlockState;I)V a
	buildClouds (Lcom/mojang/blaze3d/vertex/BufferBuilder;DDDLnet/minecraft/world/phys/Vec3;)V a
	calculateParticleLevel (Z)Lnet/minecraft/client/ParticleStatus; a
	canSee (Lnet/minecraft/core/Direction;Lcom/mojang/math/Vector3f;)Z a
	canSee (Lnet/minecraft/core/Direction;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Z a
	captureFrustum ()V j
	captureFrustum (Lcom/mojang/math/Matrix4f;Lcom/mojang/math/Matrix4f;DDDLnet/minecraft/client/renderer/culling/Frustum;)V a
	checkPoseStack (Lcom/mojang/blaze3d/vertex/PoseStack;)V a
	clear ()V m
	compileChunksUntil (J)V a
	countRenderedChunks ()I h
	createDarkSky ()V x
	createLightSky ()V y
	createStars ()V z
	deinitTransparency ()V w
	destroyBlockProgress (ILnet/minecraft/core/BlockPos;I)V b
	doEntityOutline ()V b
	drawSkyHemisphere (Lcom/mojang/blaze3d/vertex/BufferBuilder;FZ)V a
	drawStars (Lcom/mojang/blaze3d/vertex/BufferBuilder;)V a
	entityTarget ()Lcom/mojang/blaze3d/pipeline/RenderTarget; p
	getChunkStatistics ()Ljava/lang/String; g
	getCloudsTarget ()Lcom/mojang/blaze3d/pipeline/RenderTarget; u
	getEntityStatistics ()Ljava/lang/String; i
	getItemEntityTarget ()Lcom/mojang/blaze3d/pipeline/RenderTarget; r
	getLightColor (Lnet/minecraft/world/level/BlockAndTintGetter;Lnet/minecraft/core/BlockPos;)I a
	getLightColor (Lnet/minecraft/world/level/BlockAndTintGetter;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/BlockPos;)I a
	getParticlesTarget ()Lcom/mojang/blaze3d/pipeline/RenderTarget; s
	getRelativeFrom (Lnet/minecraft/core/BlockPos;Lnet/minecraft/client/renderer/chunk/ChunkRenderDispatcher$RenderChunk;Lnet/minecraft/core/Direction;)Lnet/minecraft/client/renderer/chunk/ChunkRenderDispatcher$RenderChunk; a
	getTranslucentTarget ()Lcom/mojang/blaze3d/pipeline/RenderTarget; q
	getViewVector (Lnet/minecraft/world/entity/Entity;D)Lcom/mojang/math/Vector3f; a
	getWeatherTarget ()Lcom/mojang/blaze3d/pipeline/RenderTarget; t
	globalLevelEvent (ILnet/minecraft/core/BlockPos;I)V a
	hasRenderedAllChunks ()Z n
	initOutline ()V a
	initTransparency ()V v
	isAdjacentChunk (Lnet/minecraft/core/BlockPos;Lnet/minecraft/client/renderer/chunk/ChunkRenderDispatcher$RenderChunk;)Z a
	killFrustum ()V k
	levelEvent (Lnet/minecraft/world/entity/player/Player;ILnet/minecraft/core/BlockPos;I)V a
	needsUpdate ()V o
	notifyNearbyEntities (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Z)V a
	onResourceManagerReload (Lnet/minecraft/server/packs/resources/ResourceManager;)V a
	playStreamingMusic (Lnet/minecraft/sounds/SoundEvent;Lnet/minecraft/core/BlockPos;)V a
	removeProgress (Lnet/minecraft/server/level/BlockDestructionProgress;)V a
	renderChunkLayer (Lnet/minecraft/client/renderer/RenderType;Lcom/mojang/blaze3d/vertex/PoseStack;DDD)V a
	renderClouds (Lcom/mojang/blaze3d/vertex/PoseStack;FDDD)V a
	renderDebug (Lnet/minecraft/client/Camera;)V b
	renderEndSky (Lcom/mojang/blaze3d/vertex/PoseStack;)V b
	renderEntity (Lnet/minecraft/world/entity/Entity;DDDFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;)V a
	renderHitOutline (Lcom/mojang/blaze3d/vertex/PoseStack;Lcom/mojang/blaze3d/vertex/VertexConsumer;Lnet/minecraft/world/entity/Entity;DDDLnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V a
	renderLevel (Lcom/mojang/blaze3d/vertex/PoseStack;FJZLnet/minecraft/client/Camera;Lnet/minecraft/client/renderer/GameRenderer;Lnet/minecraft/client/renderer/LightTexture;Lcom/mojang/math/Matrix4f;)V a
	renderLineBox (Lcom/mojang/blaze3d/vertex/PoseStack;Lcom/mojang/blaze3d/vertex/VertexConsumer;DDDDDDFFFF)V a
	renderLineBox (Lcom/mojang/blaze3d/vertex/PoseStack;Lcom/mojang/blaze3d/vertex/VertexConsumer;DDDDDDFFFFFFF)V a
	renderLineBox (Lcom/mojang/blaze3d/vertex/PoseStack;Lcom/mojang/blaze3d/vertex/VertexConsumer;Lnet/minecraft/world/phys/AABB;FFFF)V a
	renderLineBox (Lcom/mojang/blaze3d/vertex/VertexConsumer;DDDDDDFFFF)V a
	renderShape (Lcom/mojang/blaze3d/vertex/PoseStack;Lcom/mojang/blaze3d/vertex/VertexConsumer;Lnet/minecraft/world/phys/shapes/VoxelShape;DDDFFFF)V b
	renderSky (Lcom/mojang/blaze3d/vertex/PoseStack;F)V a
	renderSnowAndRain (Lnet/minecraft/client/renderer/LightTexture;FDDD)V a
	renderVoxelShape (Lcom/mojang/blaze3d/vertex/PoseStack;Lcom/mojang/blaze3d/vertex/VertexConsumer;Lnet/minecraft/world/phys/shapes/VoxelShape;DDDFFFF)V a
	renderWorldBounds (Lnet/minecraft/client/Camera;)V c
	resetChunksToCompile ()V f
	resize (II)V a
	setBlockDirty (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/state/BlockState;)V a
	setBlockDirty (Lnet/minecraft/core/BlockPos;Z)V a
	setBlocksDirty (IIIIII)V a
	setLevel (Lnet/minecraft/client/multiplayer/ClientLevel;)V a
	setSectionDirty (III)V b
	setSectionDirty (IIIZ)V a
	setSectionDirtyWithNeighbors (III)V a
	setupRender (Lnet/minecraft/client/Camera;Lnet/minecraft/client/renderer/culling/Frustum;ZIZ)V a
	shouldShowEntityOutlines ()Z d
	tick ()V l
	tickRain (Lnet/minecraft/client/Camera;)V a
	updateGlobalBlockEntities (Ljava/util/Collection;Ljava/util/Collection;)V a
	vertex (Lcom/mojang/blaze3d/vertex/BufferBuilder;DDDDIDFF)V a
net/minecraft/client/renderer/LevelRenderer$RenderChunkInfo dzw$a
	chunk b
	directions d
	sourceDirection c
	step e
	hasDirection (Lnet/minecraft/core/Direction;)Z a
	setDirections (BLnet/minecraft/core/Direction;)V a
net/minecraft/client/renderer/LevelRenderer$TransparencyShaderException dzw$b
net/minecraft/client/renderer/LightTexture dzx
	blockLightRedFlicker e
	lightPixels b
	lightTexture a
	lightTextureLocation c
	minecraft g
	renderer f
	updateLightTexture d
	block (I)I a
	getBrightness (Lnet/minecraft/world/level/Level;I)F a
	notGamma (F)F b
	pack (II)I a
	sky (I)I b
	tick ()V a
	turnOffLightLayer ()V b
	turnOnLightLayer ()V c
	updateLightTexture (F)V a
net/minecraft/client/renderer/MultiBufferSource dzy
	immediate (Lcom/mojang/blaze3d/vertex/BufferBuilder;)Lnet/minecraft/client/renderer/MultiBufferSource$BufferSource; a
	immediateWithBuffers (Ljava/util/Map;Lcom/mojang/blaze3d/vertex/BufferBuilder;)Lnet/minecraft/client/renderer/MultiBufferSource$BufferSource; a
net/minecraft/client/renderer/MultiBufferSource$BufferSource dzy$a
	builder a
	fixedBuffers b
	lastState c
	startedBuffers d
	endBatch ()V a
	endBatch (Lnet/minecraft/client/renderer/RenderType;)V a
	getBuilderRaw (Lnet/minecraft/client/renderer/RenderType;)Lcom/mojang/blaze3d/vertex/BufferBuilder; b
net/minecraft/client/renderer/OutlineBufferSource dzz
	bufferSource a
	outlineBufferSource b
	teamA f
	teamB e
	teamG d
	teamR c
	endOutlineBatch ()V a
	setColor (IIII)V a
net/minecraft/client/renderer/OutlineBufferSource$EntityOutlineGenerator dzz$a
	delegate g
	u k
	v l
	x h
	y i
	z j
	color (IIII)Lcom/mojang/blaze3d/vertex/VertexConsumer; a
	defaultColor (IIII)V b
	endVertex ()V d
	normal (FFF)Lcom/mojang/blaze3d/vertex/VertexConsumer; b
	overlayCoords (II)Lcom/mojang/blaze3d/vertex/VertexConsumer; a
	unsetDefaultColor ()V k
	uv (FF)Lcom/mojang/blaze3d/vertex/VertexConsumer; a
	uv2 (II)Lcom/mojang/blaze3d/vertex/VertexConsumer; b
	vertex (DDD)Lcom/mojang/blaze3d/vertex/VertexConsumer; a
	vertex (FFFFFFFFFIIFFF)V a
net/minecraft/client/renderer/PanoramaRenderer eaa
	cubeMap b
	minecraft a
	time c
	render (FF)V a
net/minecraft/client/renderer/PostChain eab
	customRenderTargets e
	fullSizedTargets f
	lastStamp k
	name c
	passes d
	resourceManager b
	screenHeight i
	screenTarget a
	screenWidth h
	shaderOrthoMatrix g
	time j
	addPass (Ljava/lang/String;Lcom/mojang/blaze3d/pipeline/RenderTarget;Lcom/mojang/blaze3d/pipeline/RenderTarget;)Lnet/minecraft/client/renderer/PostPass; a
	addTempTarget (Ljava/lang/String;II)V a
	getName ()Ljava/lang/String; a
	getRenderTarget (Ljava/lang/String;)Lcom/mojang/blaze3d/pipeline/RenderTarget; b
	getTempTarget (Ljava/lang/String;)Lcom/mojang/blaze3d/pipeline/RenderTarget; a
	load (Lnet/minecraft/client/renderer/texture/TextureManager;Lnet/minecraft/resources/ResourceLocation;)V a
	parsePassNode (Lnet/minecraft/client/renderer/texture/TextureManager;Lcom/google/gson/JsonElement;)V a
	parseTargetNode (Lcom/google/gson/JsonElement;)V a
	parseUniformNode (Lcom/google/gson/JsonElement;)V b
	process (F)V a
	resize (II)V a
	updateOrthoMatrix ()V b
net/minecraft/client/renderer/PostPass eac
	auxAssets d
	auxHeights g
	auxNames e
	auxWidths f
	effect c
	inTarget a
	outTarget b
	shaderOrthoMatrix h
	addAuxAsset (Ljava/lang/String;Ljava/util/function/IntSupplier;II)V a
	getEffect ()Lnet/minecraft/client/renderer/EffectInstance; b
	getName ()Ljava/lang/String; a
	process (F)V a
	setOrthoMatrix (Lcom/mojang/math/Matrix4f;)V a
net/minecraft/client/renderer/Rect2i ead
	height d
	width c
	xPos a
	yPos b
	contains (II)Z b
	getHeight ()I d
	getWidth ()I c
	getX ()I a
	getY ()I b
	intersect (Lnet/minecraft/client/renderer/Rect2i;)Lnet/minecraft/client/renderer/Rect2i; a
	setHeight (I)V d
	setPosition (II)V a
	setWidth (I)V c
	setX (I)V a
	setY (I)V b
net/minecraft/client/renderer/RenderBuffers eae
	bufferSource c
	crumblingBufferSource d
	fixedBufferPack a
	fixedBuffers b
	outlineBufferSource e
	bufferSource ()Lnet/minecraft/client/renderer/MultiBufferSource$BufferSource; b
	crumblingBufferSource ()Lnet/minecraft/client/renderer/MultiBufferSource$BufferSource; c
	fixedBufferPack ()Lnet/minecraft/client/renderer/ChunkBufferBuilderPack; a
	outlineBufferSource ()Lnet/minecraft/client/renderer/OutlineBufferSource; d
	put (Lit/unimi/dsi/fastutil/objects/Object2ObjectLinkedOpenHashMap;Lnet/minecraft/client/renderer/RenderType;)V a
net/minecraft/client/renderer/RenderStateShard eaf
	ADDITIVE_TRANSPARENCY c
	BLACK_FOG M
	BLOCK_SHEET n
	BLOCK_SHEET_MIPPED m
	CLOUDS_TARGET S
	COLOR_DEPTH_WRITE E
	COLOR_WRITE F
	CRUMBLING_TRANSPARENCY f
	CULL z
	DEFAULT_ALPHA i
	DEFAULT_LINE U
	DEFAULT_TEXTURING p
	DEPTH_WRITE G
	DIFFUSE_LIGHTING x
	ENTITY_GLINT_TEXTURING s
	EQUAL_DEPTH_TEST C
	FLAT_SHADE k
	FOG L
	GLINT_TEXTURING r
	GLINT_TRANSPARENCY e
	ITEM_ENTITY_TARGET T
	LEQUAL_DEPTH_TEST D
	LIGHTMAP t
	LIGHTNING_TRANSPARENCY d
	MAIN_TARGET N
	MIDWAY_ALPHA j
	NO_ALPHA h
	NO_CULL A
	NO_DEPTH_TEST B
	NO_DIFFUSE_LIGHTING y
	NO_FOG K
	NO_LAYERING H
	NO_LIGHTMAP u
	NO_OVERLAY w
	NO_TEXTURE o
	NO_TRANSPARENCY b
	OUTLINE_TARGET O
	OUTLINE_TEXTURING q
	OVERLAY v
	PARTICLES_TARGET Q
	POLYGON_OFFSET_LAYERING I
	SMOOTH_SHADE l
	TRANSLUCENT_TARGET P
	TRANSLUCENT_TRANSPARENCY g
	VIEW_OFFSET_Z_LAYERING J
	WEATHER_TARGET R
	clearState W
	name a
	setupState V
	clearRenderState ()V b
	setupGlintTexturing (F)V a
	setupRenderState ()V a
net/minecraft/client/renderer/RenderStateShard$AlphaStateShard eaf$a
	cutoff V
net/minecraft/client/renderer/RenderStateShard$BooleanStateShard eaf$b
	enabled V
net/minecraft/client/renderer/RenderStateShard$CullStateShard eaf$c
net/minecraft/client/renderer/RenderStateShard$DepthTestStateShard eaf$d
	function W
	functionName V
net/minecraft/client/renderer/RenderStateShard$DiffuseLightingStateShard eaf$e
net/minecraft/client/renderer/RenderStateShard$FogStateShard eaf$f
net/minecraft/client/renderer/RenderStateShard$LayeringStateShard eaf$g
net/minecraft/client/renderer/RenderStateShard$LightmapStateShard eaf$h
net/minecraft/client/renderer/RenderStateShard$LineStateShard eaf$i
	width V
net/minecraft/client/renderer/RenderStateShard$OffsetTexturingStateShard eaf$j
	uOffset V
	vOffset W
net/minecraft/client/renderer/RenderStateShard$OutputStateShard eaf$k
net/minecraft/client/renderer/RenderStateShard$OverlayStateShard eaf$l
net/minecraft/client/renderer/RenderStateShard$PortalTexturingStateShard eaf$m
	iteration V
net/minecraft/client/renderer/RenderStateShard$ShadeModelStateShard eaf$n
	smooth V
net/minecraft/client/renderer/RenderStateShard$TextureStateShard eaf$o
	blur W
	mipmap X
	texture V
	texture ()Ljava/util/Optional; c
net/minecraft/client/renderer/RenderStateShard$TexturingStateShard eaf$p
net/minecraft/client/renderer/RenderStateShard$TransparencyStateShard eaf$q
net/minecraft/client/renderer/RenderStateShard$WriteMaskStateShard eaf$r
	writeColor V
	writeDepth W
net/minecraft/client/renderer/RenderType eag
	ARMOR_ENTITY_GLINT af
	ARMOR_GLINT ae
	CUTOUT Y
	CUTOUT_MIPPED X
	ENTITY_GLINT aj
	ENTITY_GLINT_DIRECT ak
	GLINT ah
	GLINT_DIRECT ai
	GLINT_TRANSLUCENT ag
	LEASH ac
	LIGHTNING al
	LINES V
	SOLID W
	TRANSLUCENT Z
	TRANSLUCENT_MOVING_BLOCK aa
	TRANSLUCENT_NO_CRUMBLING ab
	TRIPWIRE am
	WATER_MASK ad
	affectsCrumbling aq
	asOptional as
	bufferSize ap
	format an
	mode ao
	sortOnUpload ar
	affectsCrumbling ()Z A
	armorCutoutNoCull (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/client/renderer/RenderType; a
	armorEntityGlint ()Lnet/minecraft/client/renderer/RenderType; l
	armorGlint ()Lnet/minecraft/client/renderer/RenderType; k
	asOptional ()Ljava/util/Optional; B
	beaconBeam (Lnet/minecraft/resources/ResourceLocation;Z)Lnet/minecraft/client/renderer/RenderType; d
	bufferSize ()I v
	chunkBufferLayers ()Ljava/util/List; u
	create (Ljava/lang/String;Lcom/mojang/blaze3d/vertex/VertexFormat;IILnet/minecraft/client/renderer/RenderType$CompositeState;)Lnet/minecraft/client/renderer/RenderType$CompositeRenderType; a
	create (Ljava/lang/String;Lcom/mojang/blaze3d/vertex/VertexFormat;IIZZLnet/minecraft/client/renderer/RenderType$CompositeState;)Lnet/minecraft/client/renderer/RenderType$CompositeRenderType; a
	crumbling (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/client/renderer/RenderType; o
	cutout ()Lnet/minecraft/client/renderer/RenderType; e
	cutoutMipped ()Lnet/minecraft/client/renderer/RenderType; d
	dragonExplosionAlpha (Lnet/minecraft/resources/ResourceLocation;F)Lnet/minecraft/client/renderer/RenderType; a
	end (Lcom/mojang/blaze3d/vertex/BufferBuilder;III)V a
	endPortal (I)Lnet/minecraft/client/renderer/RenderType; a
	energySwirl (Lnet/minecraft/resources/ResourceLocation;FF)Lnet/minecraft/client/renderer/RenderType; a
	entityCutout (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/client/renderer/RenderType; c
	entityCutoutNoCull (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/client/renderer/RenderType; d
	entityCutoutNoCull (Lnet/minecraft/resources/ResourceLocation;Z)Lnet/minecraft/client/renderer/RenderType; a
	entityCutoutNoCullZOffset (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/client/renderer/RenderType; e
	entityCutoutNoCullZOffset (Lnet/minecraft/resources/ResourceLocation;Z)Lnet/minecraft/client/renderer/RenderType; b
	entityDecal (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/client/renderer/RenderType; j
	entityGlint ()Lnet/minecraft/client/renderer/RenderType; p
	entityGlintDirect ()Lnet/minecraft/client/renderer/RenderType; q
	entityNoOutline (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/client/renderer/RenderType; k
	entityShadow (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/client/renderer/RenderType; l
	entitySmoothCutout (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/client/renderer/RenderType; i
	entitySolid (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/client/renderer/RenderType; b
	entityTranslucent (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/client/renderer/RenderType; h
	entityTranslucent (Lnet/minecraft/resources/ResourceLocation;Z)Lnet/minecraft/client/renderer/RenderType; c
	entityTranslucentCull (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/client/renderer/RenderType; g
	eyes (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/client/renderer/RenderType; m
	format ()Lcom/mojang/blaze3d/vertex/VertexFormat; w
	glint ()Lnet/minecraft/client/renderer/RenderType; n
	glintDirect ()Lnet/minecraft/client/renderer/RenderType; o
	glintTranslucent ()Lnet/minecraft/client/renderer/RenderType; m
	isOutline ()Z z
	itemEntityTranslucentCull (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/client/renderer/RenderType; f
	leash ()Lnet/minecraft/client/renderer/RenderType; i
	lightning ()Lnet/minecraft/client/renderer/RenderType; r
	lines ()Lnet/minecraft/client/renderer/RenderType; t
	mode ()I x
	outline ()Ljava/util/Optional; y
	outline (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/client/renderer/RenderType; n
	outline (Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/client/renderer/RenderStateShard$CullStateShard;)Lnet/minecraft/client/renderer/RenderType; a
	solid ()Lnet/minecraft/client/renderer/RenderType; c
	text (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/client/renderer/RenderType; p
	textSeeThrough (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/client/renderer/RenderType; q
	translucent ()Lnet/minecraft/client/renderer/RenderType; f
	translucentMovingBlock ()Lnet/minecraft/client/renderer/RenderType; g
	translucentMovingBlockState ()Lnet/minecraft/client/renderer/RenderType$CompositeState; D
	translucentNoCrumbling ()Lnet/minecraft/client/renderer/RenderType; h
	translucentState ()Lnet/minecraft/client/renderer/RenderType$CompositeState; C
	tripwire ()Lnet/minecraft/client/renderer/RenderType; s
	tripwireState ()Lnet/minecraft/client/renderer/RenderType$CompositeState; E
	waterMask ()Lnet/minecraft/client/renderer/RenderType; j
net/minecraft/client/renderer/RenderType$CompositeRenderType eag$a
	INSTANCES W
	hashCode Y
	isOutline aa
	outline Z
	state X
	isOutline ()Z z
	memoize (Ljava/lang/String;Lcom/mojang/blaze3d/vertex/VertexFormat;IIZZLnet/minecraft/client/renderer/RenderType$CompositeState;)Lnet/minecraft/client/renderer/RenderType$CompositeRenderType; c
	outline ()Ljava/util/Optional; y
	state ()Lnet/minecraft/client/renderer/RenderType$CompositeState; C
net/minecraft/client/renderer/RenderType$CompositeRenderType$EqualsStrategy eag$a$a
	$VALUES b
	INSTANCE a
	equals (Lnet/minecraft/client/renderer/RenderType$CompositeRenderType;Lnet/minecraft/client/renderer/RenderType$CompositeRenderType;)Z a
	hashCode (Lnet/minecraft/client/renderer/RenderType$CompositeRenderType;)I a
net/minecraft/client/renderer/RenderType$CompositeState eag$b
	alphaState e
	cullState g
	depthTestState f
	diffuseLightingState c
	fogState j
	layeringState k
	lightmapState h
	lineState o
	outlineProperty p
	outputState l
	overlayState i
	shadeModelState d
	states q
	textureState a
	texturingState m
	transparencyState b
	writeMaskState n
	builder ()Lnet/minecraft/client/renderer/RenderType$CompositeState$CompositeStateBuilder; a
net/minecraft/client/renderer/RenderType$CompositeState$CompositeStateBuilder eag$b$a
	alphaState e
	cullState g
	depthTestState f
	diffuseLightingState c
	fogState j
	layeringState k
	lightmapState h
	lineState o
	outputState l
	overlayState i
	shadeModelState d
	textureState a
	texturingState m
	transparencyState b
	writeMaskState n
	createCompositeState (Lnet/minecraft/client/renderer/RenderType$OutlineProperty;)Lnet/minecraft/client/renderer/RenderType$CompositeState; a
	createCompositeState (Z)Lnet/minecraft/client/renderer/RenderType$CompositeState; a
	setAlphaState (Lnet/minecraft/client/renderer/RenderStateShard$AlphaStateShard;)Lnet/minecraft/client/renderer/RenderType$CompositeState$CompositeStateBuilder; a
	setCullState (Lnet/minecraft/client/renderer/RenderStateShard$CullStateShard;)Lnet/minecraft/client/renderer/RenderType$CompositeState$CompositeStateBuilder; a
	setDepthTestState (Lnet/minecraft/client/renderer/RenderStateShard$DepthTestStateShard;)Lnet/minecraft/client/renderer/RenderType$CompositeState$CompositeStateBuilder; a
	setDiffuseLightingState (Lnet/minecraft/client/renderer/RenderStateShard$DiffuseLightingStateShard;)Lnet/minecraft/client/renderer/RenderType$CompositeState$CompositeStateBuilder; a
	setFogState (Lnet/minecraft/client/renderer/RenderStateShard$FogStateShard;)Lnet/minecraft/client/renderer/RenderType$CompositeState$CompositeStateBuilder; a
	setLayeringState (Lnet/minecraft/client/renderer/RenderStateShard$LayeringStateShard;)Lnet/minecraft/client/renderer/RenderType$CompositeState$CompositeStateBuilder; a
	setLightmapState (Lnet/minecraft/client/renderer/RenderStateShard$LightmapStateShard;)Lnet/minecraft/client/renderer/RenderType$CompositeState$CompositeStateBuilder; a
	setLineState (Lnet/minecraft/client/renderer/RenderStateShard$LineStateShard;)Lnet/minecraft/client/renderer/RenderType$CompositeState$CompositeStateBuilder; a
	setOutputState (Lnet/minecraft/client/renderer/RenderStateShard$OutputStateShard;)Lnet/minecraft/client/renderer/RenderType$CompositeState$CompositeStateBuilder; a
	setOverlayState (Lnet/minecraft/client/renderer/RenderStateShard$OverlayStateShard;)Lnet/minecraft/client/renderer/RenderType$CompositeState$CompositeStateBuilder; a
	setShadeModelState (Lnet/minecraft/client/renderer/RenderStateShard$ShadeModelStateShard;)Lnet/minecraft/client/renderer/RenderType$CompositeState$CompositeStateBuilder; a
	setTextureState (Lnet/minecraft/client/renderer/RenderStateShard$TextureStateShard;)Lnet/minecraft/client/renderer/RenderType$CompositeState$CompositeStateBuilder; a
	setTexturingState (Lnet/minecraft/client/renderer/RenderStateShard$TexturingStateShard;)Lnet/minecraft/client/renderer/RenderType$CompositeState$CompositeStateBuilder; a
	setTransparencyState (Lnet/minecraft/client/renderer/RenderStateShard$TransparencyStateShard;)Lnet/minecraft/client/renderer/RenderType$CompositeState$CompositeStateBuilder; a
	setWriteMaskState (Lnet/minecraft/client/renderer/RenderStateShard$WriteMaskStateShard;)Lnet/minecraft/client/renderer/RenderType$CompositeState$CompositeStateBuilder; a
net/minecraft/client/renderer/RenderType$OutlineProperty eag$c
	$VALUES e
	AFFECTS_OUTLINE c
	IS_OUTLINE b
	NONE a
	name d
net/minecraft/client/renderer/RunningTrimmedMean eah
	count b
	cursor c
	values a
	registerValueAndGetMean (J)J a
net/minecraft/client/renderer/ScreenEffectRenderer eai
	UNDERWATER_LOCATION a
	getViewBlockingState (Lnet/minecraft/world/entity/player/Player;)Lnet/minecraft/world/level/block/state/BlockState; a
	renderFire (Lnet/minecraft/client/Minecraft;Lcom/mojang/blaze3d/vertex/PoseStack;)V c
	renderScreenEffect (Lnet/minecraft/client/Minecraft;Lcom/mojang/blaze3d/vertex/PoseStack;)V a
	renderTex (Lnet/minecraft/client/Minecraft;Lnet/minecraft/client/renderer/texture/TextureAtlasSprite;Lcom/mojang/blaze3d/vertex/PoseStack;)V a
	renderWater (Lnet/minecraft/client/Minecraft;Lcom/mojang/blaze3d/vertex/PoseStack;)V b
net/minecraft/client/renderer/Sheets eaj
	BANNER_SHEET c
	BANNER_SHEET_TYPE w
	BED_SHEET b
	BED_SHEET_TYPE v
	BED_TEXTURES j
	CHEST_LOCATION q
	CHEST_LOCATION_LEFT r
	CHEST_LOCATION_RIGHT s
	CHEST_SHEET f
	CHEST_SHEET_TYPE z
	CHEST_TRAP_LOCATION k
	CHEST_TRAP_LOCATION_LEFT l
	CHEST_TRAP_LOCATION_RIGHT m
	CHEST_XMAS_LOCATION n
	CHEST_XMAS_LOCATION_LEFT o
	CHEST_XMAS_LOCATION_RIGHT p
	CUTOUT_BLOCK_SHEET B
	DEFAULT_SHULKER_TEXTURE_LOCATION g
	ENDER_CHEST_LOCATION t
	SHIELD_SHEET d
	SHIELD_SHEET_TYPE x
	SHULKER_BOX_SHEET_TYPE u
	SHULKER_SHEET a
	SHULKER_TEXTURE_LOCATION h
	SIGN_MATERIALS i
	SIGN_SHEET e
	SIGN_SHEET_TYPE y
	SOLID_BLOCK_SHEET A
	TRANSLUCENT_CULL_BLOCK_SHEET D
	TRANSLUCENT_ITEM_CULL_BLOCK_SHEET C
	bannerSheet ()Lnet/minecraft/client/renderer/RenderType; a
	bedSheet ()Lnet/minecraft/client/renderer/RenderType; c
	chestMaterial (Ljava/lang/String;)Lnet/minecraft/client/resources/model/Material; a
	chestSheet ()Lnet/minecraft/client/renderer/RenderType; f
	chooseMaterial (Lnet/minecraft/world/level/block/entity/BlockEntity;Lnet/minecraft/world/level/block/state/properties/ChestType;Z)Lnet/minecraft/client/resources/model/Material; a
	chooseMaterial (Lnet/minecraft/world/level/block/state/properties/ChestType;Lnet/minecraft/client/resources/model/Material;Lnet/minecraft/client/resources/model/Material;Lnet/minecraft/client/resources/model/Material;)Lnet/minecraft/client/resources/model/Material; a
	cutoutBlockSheet ()Lnet/minecraft/client/renderer/RenderType; h
	getAllMaterials (Ljava/util/function/Consumer;)V a
	shieldSheet ()Lnet/minecraft/client/renderer/RenderType; b
	shulkerBoxSheet ()Lnet/minecraft/client/renderer/RenderType; d
	signSheet ()Lnet/minecraft/client/renderer/RenderType; e
	signTexture (Lnet/minecraft/world/level/block/state/properties/WoodType;)Lnet/minecraft/client/resources/model/Material; a
	solidBlockSheet ()Lnet/minecraft/client/renderer/RenderType; g
	translucentCullBlockSheet ()Lnet/minecraft/client/renderer/RenderType; j
	translucentItemSheet ()Lnet/minecraft/client/renderer/RenderType; i
net/minecraft/client/renderer/SpriteCoordinateExpander eak
	delegate a
	sprite b
	color (IIII)Lcom/mojang/blaze3d/vertex/VertexConsumer; a
	defaultColor (IIII)V b
	endVertex ()V d
	normal (FFF)Lcom/mojang/blaze3d/vertex/VertexConsumer; b
	overlayCoords (II)Lcom/mojang/blaze3d/vertex/VertexConsumer; a
	unsetDefaultColor ()V k
	uv (FF)Lcom/mojang/blaze3d/vertex/VertexConsumer; a
	uv2 (II)Lcom/mojang/blaze3d/vertex/VertexConsumer; b
	vertex (DDD)Lcom/mojang/blaze3d/vertex/VertexConsumer; a
	vertex (FFFFFFFFFIIFFF)V a
net/minecraft/client/renderer/ViewArea eal
	chunkGridSizeX d
	chunkGridSizeY c
	chunkGridSizeZ e
	chunks f
	level b
	levelRenderer a
	createChunks (Lnet/minecraft/client/renderer/chunk/ChunkRenderDispatcher;)V a
	getChunkIndex (III)I a
	getRenderChunkAt (Lnet/minecraft/core/BlockPos;)Lnet/minecraft/client/renderer/chunk/ChunkRenderDispatcher$RenderChunk; a
	releaseAllBuffers ()V a
	repositionCamera (DD)V a
	setDirty (IIIZ)V a
	setViewDistance (I)V a
net/minecraft/client/renderer/VirtualScreen eam
	minecraft a
	screenManager b
	newWindow (Lcom/mojang/blaze3d/platform/DisplayData;Ljava/lang/String;Ljava/lang/String;)Lcom/mojang/blaze3d/platform/Window; a
net/minecraft/client/renderer/block/BlockModelShaper eao
	modelByStateCache a
	modelManager b
	getBlockModel (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/client/resources/model/BakedModel; b
	getModelManager ()Lnet/minecraft/client/resources/model/ModelManager; a
	getParticleIcon (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/client/renderer/texture/TextureAtlasSprite; a
	getValue (Lnet/minecraft/world/level/block/state/properties/Property;Ljava/lang/Comparable;)Ljava/lang/String; a
	rebuildCache ()V b
	statePropertiesToString (Ljava/util/Map;)Ljava/lang/String; a
	stateToModelLocation (Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/client/resources/model/ModelResourceLocation; a
	stateToModelLocation (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/client/resources/model/ModelResourceLocation; c
net/minecraft/client/renderer/block/BlockRenderDispatcher eap
	blockColors e
	blockModelShaper a
	liquidBlockRenderer c
	modelRenderer b
	random d
	getBlockModel (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/client/resources/model/BakedModel; a
	getBlockModelShaper ()Lnet/minecraft/client/renderer/block/BlockModelShaper; a
	getModelRenderer ()Lnet/minecraft/client/renderer/block/ModelBlockRenderer; b
	onResourceManagerReload (Lnet/minecraft/server/packs/resources/ResourceManager;)V a
	renderBatched (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/BlockAndTintGetter;Lcom/mojang/blaze3d/vertex/PoseStack;Lcom/mojang/blaze3d/vertex/VertexConsumer;ZLjava/util/Random;)Z a
	renderBreakingTexture (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/BlockAndTintGetter;Lcom/mojang/blaze3d/vertex/PoseStack;Lcom/mojang/blaze3d/vertex/VertexConsumer;)V a
	renderLiquid (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/BlockAndTintGetter;Lcom/mojang/blaze3d/vertex/VertexConsumer;Lnet/minecraft/world/level/material/FluidState;)Z a
	renderSingleBlock (Lnet/minecraft/world/level/block/state/BlockState;Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;II)V a
net/minecraft/client/renderer/block/LiquidBlockRenderer eaq
	lavaIcons a
	waterIcons b
	waterOverlay c
	getLightColor (Lnet/minecraft/world/level/BlockAndTintGetter;Lnet/minecraft/core/BlockPos;)I a
	getWaterHeight (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/material/Fluid;)F a
	isFaceOccludedByNeighbor (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;F)Z a
	isFaceOccludedBySelf (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;)Z a
	isFaceOccludedByState (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/Direction;FLnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Z a
	isNeighborSameFluid (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/material/FluidState;)Z a
	setupSprites ()V a
	shouldRenderFace (Lnet/minecraft/world/level/BlockAndTintGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/material/FluidState;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;)Z a
	tesselate (Lnet/minecraft/world/level/BlockAndTintGetter;Lnet/minecraft/core/BlockPos;Lcom/mojang/blaze3d/vertex/VertexConsumer;Lnet/minecraft/world/level/material/FluidState;)Z a
	vertex (Lcom/mojang/blaze3d/vertex/VertexConsumer;DDDFFFFFI)V a
net/minecraft/client/renderer/block/ModelBlockRenderer ear
	CACHE b
	blockColors a
	calculateShape (Lnet/minecraft/world/level/BlockAndTintGetter;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/BlockPos;[ILnet/minecraft/core/Direction;[FLjava/util/BitSet;)V a
	clearCache ()V b
	enableCaching ()V a
	putQuadData (Lnet/minecraft/world/level/BlockAndTintGetter;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/BlockPos;Lcom/mojang/blaze3d/vertex/VertexConsumer;Lcom/mojang/blaze3d/vertex/PoseStack$Pose;Lnet/minecraft/client/renderer/block/model/BakedQuad;FFFFIIIII)V a
	renderModel (Lcom/mojang/blaze3d/vertex/PoseStack$Pose;Lcom/mojang/blaze3d/vertex/VertexConsumer;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/client/resources/model/BakedModel;FFFII)V a
	renderModelFaceAO (Lnet/minecraft/world/level/BlockAndTintGetter;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/BlockPos;Lcom/mojang/blaze3d/vertex/PoseStack;Lcom/mojang/blaze3d/vertex/VertexConsumer;Ljava/util/List;[FLjava/util/BitSet;Lnet/minecraft/client/renderer/block/ModelBlockRenderer$AmbientOcclusionFace;I)V a
	renderModelFaceFlat (Lnet/minecraft/world/level/BlockAndTintGetter;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/BlockPos;IIZLcom/mojang/blaze3d/vertex/PoseStack;Lcom/mojang/blaze3d/vertex/VertexConsumer;Ljava/util/List;Ljava/util/BitSet;)V a
	renderQuadList (Lcom/mojang/blaze3d/vertex/PoseStack$Pose;Lcom/mojang/blaze3d/vertex/VertexConsumer;FFFLjava/util/List;II)V a
	tesselateBlock (Lnet/minecraft/world/level/BlockAndTintGetter;Lnet/minecraft/client/resources/model/BakedModel;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/BlockPos;Lcom/mojang/blaze3d/vertex/PoseStack;Lcom/mojang/blaze3d/vertex/VertexConsumer;ZLjava/util/Random;JI)Z a
	tesselateWithAO (Lnet/minecraft/world/level/BlockAndTintGetter;Lnet/minecraft/client/resources/model/BakedModel;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/BlockPos;Lcom/mojang/blaze3d/vertex/PoseStack;Lcom/mojang/blaze3d/vertex/VertexConsumer;ZLjava/util/Random;JI)Z b
	tesselateWithoutAO (Lnet/minecraft/world/level/BlockAndTintGetter;Lnet/minecraft/client/resources/model/BakedModel;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/BlockPos;Lcom/mojang/blaze3d/vertex/PoseStack;Lcom/mojang/blaze3d/vertex/VertexConsumer;ZLjava/util/Random;JI)Z c
net/minecraft/client/renderer/block/ModelBlockRenderer$AdjacencyInfo ear$a
	$VALUES n
	BY_FACING m
	DOWN a
	EAST f
	NORTH c
	SOUTH d
	UP b
	WEST e
	corners g
	doNonCubicWeight h
	vert0Weights i
	vert1Weights j
	vert2Weights k
	vert3Weights l
	fromFacing (Lnet/minecraft/core/Direction;)Lnet/minecraft/client/renderer/block/ModelBlockRenderer$AdjacencyInfo; a
net/minecraft/client/renderer/block/ModelBlockRenderer$AmbientOcclusionFace ear$b
	brightness b
	lightmap c
	blend (IIII)I a
	blend (IIIIFFFF)I a
	calculate (Lnet/minecraft/world/level/BlockAndTintGetter;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;[FLjava/util/BitSet;Z)V a
net/minecraft/client/renderer/block/ModelBlockRenderer$AmbientVertexRemap ear$c
	$VALUES l
	BY_FACING k
	DOWN a
	EAST f
	NORTH c
	SOUTH d
	UP b
	WEST e
	vert0 g
	vert1 h
	vert2 i
	vert3 j
	fromFacing (Lnet/minecraft/core/Direction;)Lnet/minecraft/client/renderer/block/ModelBlockRenderer$AmbientVertexRemap; a
net/minecraft/client/renderer/block/ModelBlockRenderer$Cache ear$d
	brightnessCache c
	colorCache b
	enabled a
	disable ()V b
	enable ()V a
	getLightColor (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockAndTintGetter;Lnet/minecraft/core/BlockPos;)I a
	getShadeBrightness (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockAndTintGetter;Lnet/minecraft/core/BlockPos;)F b
net/minecraft/client/renderer/block/ModelBlockRenderer$SizeInfo ear$e
	$VALUES n
	DOWN a
	EAST f
	FLIP_DOWN g
	FLIP_EAST l
	FLIP_NORTH i
	FLIP_SOUTH j
	FLIP_UP h
	FLIP_WEST k
	NORTH c
	SOUTH d
	UP b
	WEST e
	shape m
net/minecraft/client/renderer/block/model/BakedQuad eas
	direction c
	shade e
	sprite d
	tintIndex b
	vertices a
	getDirection ()Lnet/minecraft/core/Direction; e
	getSprite ()Lnet/minecraft/client/renderer/texture/TextureAtlasSprite; a
	getTintIndex ()I d
	getVertices ()[I b
	isShade ()Z f
	isTinted ()Z c
net/minecraft/client/renderer/block/model/BlockElement eat
	faces c
	from a
	rotation d
	shade e
	to b
	fillUvs ()V a
	uvsByFace (Lnet/minecraft/core/Direction;)[F a
net/minecraft/client/renderer/block/model/BlockElement$Deserializer eat$a
	deserialize (Lcom/google/gson/JsonElement;Ljava/lang/reflect/Type;Lcom/google/gson/JsonDeserializationContext;)Lnet/minecraft/client/renderer/block/model/BlockElement; a
	filterNullFromFaces (Lcom/google/gson/JsonDeserializationContext;Lcom/google/gson/JsonObject;)Ljava/util/Map; b
	getAngle (Lcom/google/gson/JsonObject;)F b
	getAxis (Lcom/google/gson/JsonObject;)Lnet/minecraft/core/Direction$Axis; c
	getFaces (Lcom/google/gson/JsonDeserializationContext;Lcom/google/gson/JsonObject;)Ljava/util/Map; a
	getFacing (Ljava/lang/String;)Lnet/minecraft/core/Direction; a
	getFrom (Lcom/google/gson/JsonObject;)Lcom/mojang/math/Vector3f; e
	getRotation (Lcom/google/gson/JsonObject;)Lnet/minecraft/client/renderer/block/model/BlockElementRotation; a
	getTo (Lcom/google/gson/JsonObject;)Lcom/mojang/math/Vector3f; d
	getVector3f (Lcom/google/gson/JsonObject;Ljava/lang/String;)Lcom/mojang/math/Vector3f; a
net/minecraft/client/renderer/block/model/BlockElementFace eau
	cullForDirection a
	texture c
	tintIndex b
	uv d
net/minecraft/client/renderer/block/model/BlockElementFace$Deserializer eau$a
	deserialize (Lcom/google/gson/JsonElement;Ljava/lang/reflect/Type;Lcom/google/gson/JsonDeserializationContext;)Lnet/minecraft/client/renderer/block/model/BlockElementFace; a
	getCullFacing (Lcom/google/gson/JsonObject;)Lnet/minecraft/core/Direction; c
	getTexture (Lcom/google/gson/JsonObject;)Ljava/lang/String; b
	getTintIndex (Lcom/google/gson/JsonObject;)I a
net/minecraft/client/renderer/block/model/BlockElementRotation eav
	angle c
	axis b
	origin a
	rescale d
net/minecraft/client/renderer/block/model/BlockFaceUV eaw
	rotation b
	uvs a
	getReverseIndex (I)I c
	getShiftedIndex (I)I d
	getU (I)F a
	getV (I)F b
	setMissingUv ([F)V a
net/minecraft/client/renderer/block/model/BlockFaceUV$Deserializer eaw$a
	deserialize (Lcom/google/gson/JsonElement;Ljava/lang/reflect/Type;Lcom/google/gson/JsonDeserializationContext;)Lnet/minecraft/client/renderer/block/model/BlockFaceUV; a
	getRotation (Lcom/google/gson/JsonObject;)I a
	getUVs (Lcom/google/gson/JsonObject;)[F b
net/minecraft/client/renderer/block/model/BlockModel eax
	FACE_BAKERY g
	GSON a
	LOGGER f
	elements h
	guiLight i
	hasAmbientOcclusion j
	name b
	overrides l
	parent d
	parentLocation e
	textureMap c
	transforms k
	bake (Lnet/minecraft/client/resources/model/ModelBakery;Ljava/util/function/Function;Lnet/minecraft/client/resources/model/ModelState;Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/client/resources/model/BakedModel; a
	bake (Lnet/minecraft/client/resources/model/ModelBakery;Lnet/minecraft/client/renderer/block/model/BlockModel;Ljava/util/function/Function;Lnet/minecraft/client/resources/model/ModelState;Lnet/minecraft/resources/ResourceLocation;Z)Lnet/minecraft/client/resources/model/BakedModel; a
	bakeFace (Lnet/minecraft/client/renderer/block/model/BlockElement;Lnet/minecraft/client/renderer/block/model/BlockElementFace;Lnet/minecraft/client/renderer/texture/TextureAtlasSprite;Lnet/minecraft/core/Direction;Lnet/minecraft/client/resources/model/ModelState;Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/client/renderer/block/model/BakedQuad; a
	findTextureEntry (Ljava/lang/String;)Lcom/mojang/datafixers/util/Either; e
	fromStream (Ljava/io/Reader;)Lnet/minecraft/client/renderer/block/model/BlockModel; a
	fromString (Ljava/lang/String;)Lnet/minecraft/client/renderer/block/model/BlockModel; a
	getDependencies ()Ljava/util/Collection; f
	getElements ()Ljava/util/List; a
	getGuiLight ()Lnet/minecraft/client/renderer/block/model/BlockModel$GuiLight; c
	getItemOverrides (Lnet/minecraft/client/resources/model/ModelBakery;Lnet/minecraft/client/renderer/block/model/BlockModel;)Lnet/minecraft/client/renderer/block/model/ItemOverrides; a
	getMaterial (Ljava/lang/String;)Lnet/minecraft/client/resources/model/Material; c
	getMaterials (Ljava/util/function/Function;Ljava/util/Set;)Ljava/util/Collection; a
	getOverrides ()Ljava/util/List; e
	getRootModel ()Lnet/minecraft/client/renderer/block/model/BlockModel; g
	getTransform (Lnet/minecraft/client/renderer/block/model/ItemTransforms$TransformType;)Lnet/minecraft/client/renderer/block/model/ItemTransform; a
	getTransforms ()Lnet/minecraft/client/renderer/block/model/ItemTransforms; h
	hasAmbientOcclusion ()Z b
	hasTexture (Ljava/lang/String;)Z b
	isResolved ()Z d
	isTextureReference (Ljava/lang/String;)Z f
net/minecraft/client/renderer/block/model/BlockModel$Deserializer eax$a
	deserialize (Lcom/google/gson/JsonElement;Ljava/lang/reflect/Type;Lcom/google/gson/JsonDeserializationContext;)Lnet/minecraft/client/renderer/block/model/BlockModel; a
	getAmbientOcclusion (Lcom/google/gson/JsonObject;)Z a
	getElements (Lcom/google/gson/JsonDeserializationContext;Lcom/google/gson/JsonObject;)Ljava/util/List; b
	getOverrides (Lcom/google/gson/JsonDeserializationContext;Lcom/google/gson/JsonObject;)Ljava/util/List; a
	getParentName (Lcom/google/gson/JsonObject;)Ljava/lang/String; c
	getTextureMap (Lcom/google/gson/JsonObject;)Ljava/util/Map; b
	parseTextureLocationOrReference (Lnet/minecraft/resources/ResourceLocation;Ljava/lang/String;)Lcom/mojang/datafixers/util/Either; a
net/minecraft/client/renderer/block/model/BlockModel$GuiLight eax$b
	$VALUES d
	FRONT a
	SIDE b
	name c
	getByName (Ljava/lang/String;)Lnet/minecraft/client/renderer/block/model/BlockModel$GuiLight; a
	lightLikeBlock ()Z a
net/minecraft/client/renderer/block/model/BlockModel$LoopException eax$c
net/minecraft/client/renderer/block/model/BlockModelDefinition eay
	multiPart b
	variants a
	fromStream (Lnet/minecraft/client/renderer/block/model/BlockModelDefinition$Context;Ljava/io/Reader;)Lnet/minecraft/client/renderer/block/model/BlockModelDefinition; a
	getMultiPart ()Lnet/minecraft/client/renderer/block/model/multipart/MultiPart; d
	getMultiVariants ()Ljava/util/Set; b
	getVariant (Ljava/lang/String;)Lnet/minecraft/client/renderer/block/model/MultiVariant; b
	getVariants ()Ljava/util/Map; a
	hasVariant (Ljava/lang/String;)Z a
	isMultiPart ()Z c
net/minecraft/client/renderer/block/model/BlockModelDefinition$Context eay$a
	definition b
	gson a
	getDefinition ()Lnet/minecraft/world/level/block/state/StateDefinition; a
	setDefinition (Lnet/minecraft/world/level/block/state/StateDefinition;)V a
net/minecraft/client/renderer/block/model/BlockModelDefinition$Deserializer eay$b
	deserialize (Lcom/google/gson/JsonElement;Ljava/lang/reflect/Type;Lcom/google/gson/JsonDeserializationContext;)Lnet/minecraft/client/renderer/block/model/BlockModelDefinition; a
	getMultiPart (Lcom/google/gson/JsonDeserializationContext;Lcom/google/gson/JsonObject;)Lnet/minecraft/client/renderer/block/model/multipart/MultiPart; b
	getVariants (Lcom/google/gson/JsonDeserializationContext;Lcom/google/gson/JsonObject;)Ljava/util/Map; a
net/minecraft/client/renderer/block/model/BlockModelDefinition$MissingVariantException eay$c
net/minecraft/client/renderer/block/model/FaceBakery eaz
	RESCALE_22_5 a
	RESCALE_45 b
	applyElementRotation (Lcom/mojang/math/Vector3f;Lnet/minecraft/client/renderer/block/model/BlockElementRotation;)V a
	applyModelRotation (Lcom/mojang/math/Vector3f;Lcom/mojang/math/Transformation;)V a
	bakeQuad (Lcom/mojang/math/Vector3f;Lcom/mojang/math/Vector3f;Lnet/minecraft/client/renderer/block/model/BlockElementFace;Lnet/minecraft/client/renderer/texture/TextureAtlasSprite;Lnet/minecraft/core/Direction;Lnet/minecraft/client/resources/model/ModelState;Lnet/minecraft/client/renderer/block/model/BlockElementRotation;ZLnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/client/renderer/block/model/BakedQuad; a
	bakeVertex ([IILnet/minecraft/core/Direction;Lnet/minecraft/client/renderer/block/model/BlockFaceUV;[FLnet/minecraft/client/renderer/texture/TextureAtlasSprite;Lcom/mojang/math/Transformation;Lnet/minecraft/client/renderer/block/model/BlockElementRotation;Z)V a
	calculateFacing ([I)Lnet/minecraft/core/Direction; a
	fillVertex ([IILcom/mojang/math/Vector3f;Lnet/minecraft/client/renderer/texture/TextureAtlasSprite;Lnet/minecraft/client/renderer/block/model/BlockFaceUV;)V a
	makeVertices (Lnet/minecraft/client/renderer/block/model/BlockFaceUV;Lnet/minecraft/client/renderer/texture/TextureAtlasSprite;Lnet/minecraft/core/Direction;[FLcom/mojang/math/Transformation;Lnet/minecraft/client/renderer/block/model/BlockElementRotation;Z)[I a
	recalculateWinding ([ILnet/minecraft/core/Direction;)V a
	recomputeUVs (Lnet/minecraft/client/renderer/block/model/BlockFaceUV;Lnet/minecraft/core/Direction;Lcom/mojang/math/Transformation;Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/client/renderer/block/model/BlockFaceUV; a
	rotateVertexBy (Lcom/mojang/math/Vector3f;Lcom/mojang/math/Vector3f;Lcom/mojang/math/Matrix4f;Lcom/mojang/math/Vector3f;)V a
	setupShape (Lcom/mojang/math/Vector3f;Lcom/mojang/math/Vector3f;)[F a
net/minecraft/client/renderer/block/model/ItemModelGenerator eba
	LAYERS a
	checkTransition (Lnet/minecraft/client/renderer/block/model/ItemModelGenerator$SpanFacing;Ljava/util/List;Lnet/minecraft/client/renderer/texture/TextureAtlasSprite;IIIIIZ)V a
	createOrExpandSpan (Ljava/util/List;Lnet/minecraft/client/renderer/block/model/ItemModelGenerator$SpanFacing;II)V a
	createSideElements (Lnet/minecraft/client/renderer/texture/TextureAtlasSprite;Ljava/lang/String;I)Ljava/util/List; a
	generateBlockModel (Ljava/util/function/Function;Lnet/minecraft/client/renderer/block/model/BlockModel;)Lnet/minecraft/client/renderer/block/model/BlockModel; a
	getSpans (Lnet/minecraft/client/renderer/texture/TextureAtlasSprite;)Ljava/util/List; a
	isTransparent (Lnet/minecraft/client/renderer/texture/TextureAtlasSprite;IIIII)Z a
	processFrames (ILjava/lang/String;Lnet/minecraft/client/renderer/texture/TextureAtlasSprite;)Ljava/util/List; a
net/minecraft/client/renderer/block/model/ItemModelGenerator$Span eba$a
	anchor d
	facing a
	max c
	min b
	expand (I)V a
	getAnchor ()I d
	getFacing ()Lnet/minecraft/client/renderer/block/model/ItemModelGenerator$SpanFacing; a
	getMax ()I c
	getMin ()I b
net/minecraft/client/renderer/block/model/ItemModelGenerator$SpanFacing eba$b
	$VALUES h
	DOWN b
	LEFT c
	RIGHT d
	UP a
	direction e
	xOffset f
	yOffset g
	getDirection ()Lnet/minecraft/core/Direction; a
	getXOffset ()I b
	getYOffset ()I c
	isHorizontal ()Z d
net/minecraft/client/renderer/block/model/ItemOverride ebb
	model a
	predicates b
	getModel ()Lnet/minecraft/resources/ResourceLocation; a
	test (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/client/multiplayer/ClientLevel;Lnet/minecraft/world/entity/LivingEntity;)Z a
net/minecraft/client/renderer/block/model/ItemOverride$Deserializer ebb$a
	deserialize (Lcom/google/gson/JsonElement;Ljava/lang/reflect/Type;Lcom/google/gson/JsonDeserializationContext;)Lnet/minecraft/client/renderer/block/model/ItemOverride; a
	getPredicates (Lcom/google/gson/JsonObject;)Ljava/util/Map; a
net/minecraft/client/renderer/block/model/ItemOverrides ebc
	EMPTY a
	overrideModels c
	overrides b
	resolve (Lnet/minecraft/client/resources/model/BakedModel;Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/client/multiplayer/ClientLevel;Lnet/minecraft/world/entity/LivingEntity;)Lnet/minecraft/client/resources/model/BakedModel; a
net/minecraft/client/renderer/block/model/ItemTransform ebd
	NO_TRANSFORM a
	rotation b
	scale d
	translation c
	apply (ZLcom/mojang/blaze3d/vertex/PoseStack;)V a
net/minecraft/client/renderer/block/model/ItemTransform$Deserializer ebd$a
	DEFAULT_ROTATION a
	DEFAULT_SCALE c
	DEFAULT_TRANSLATION b
	deserialize (Lcom/google/gson/JsonElement;Ljava/lang/reflect/Type;Lcom/google/gson/JsonDeserializationContext;)Lnet/minecraft/client/renderer/block/model/ItemTransform; a
	getVector3f (Lcom/google/gson/JsonObject;Ljava/lang/String;Lcom/mojang/math/Vector3f;)Lcom/mojang/math/Vector3f; a
net/minecraft/client/renderer/block/model/ItemTransforms ebe
	NO_TRANSFORMS a
	firstPersonLeftHand d
	firstPersonRightHand e
	fixed i
	ground h
	gui g
	head f
	thirdPersonLeftHand b
	thirdPersonRightHand c
	getTransform (Lnet/minecraft/client/renderer/block/model/ItemTransforms$TransformType;)Lnet/minecraft/client/renderer/block/model/ItemTransform; a
	hasTransform (Lnet/minecraft/client/renderer/block/model/ItemTransforms$TransformType;)Z b
net/minecraft/client/renderer/block/model/ItemTransforms$Deserializer ebe$a
	deserialize (Lcom/google/gson/JsonElement;Ljava/lang/reflect/Type;Lcom/google/gson/JsonDeserializationContext;)Lnet/minecraft/client/renderer/block/model/ItemTransforms; a
	getTransform (Lcom/google/gson/JsonDeserializationContext;Lcom/google/gson/JsonObject;Ljava/lang/String;)Lnet/minecraft/client/renderer/block/model/ItemTransform; a
net/minecraft/client/renderer/block/model/ItemTransforms$TransformType ebe$b
	$VALUES j
	FIRST_PERSON_LEFT_HAND d
	FIRST_PERSON_RIGHT_HAND e
	FIXED i
	GROUND h
	GUI g
	HEAD f
	NONE a
	THIRD_PERSON_LEFT_HAND b
	THIRD_PERSON_RIGHT_HAND c
	firstPerson ()Z a
net/minecraft/client/renderer/block/model/MultiVariant ebf
	variants a
	bake (Lnet/minecraft/client/resources/model/ModelBakery;Ljava/util/function/Function;Lnet/minecraft/client/resources/model/ModelState;Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/client/resources/model/BakedModel; a
	getDependencies ()Ljava/util/Collection; f
	getMaterials (Ljava/util/function/Function;Ljava/util/Set;)Ljava/util/Collection; a
	getVariants ()Ljava/util/List; a
net/minecraft/client/renderer/block/model/MultiVariant$Deserializer ebf$a
	deserialize (Lcom/google/gson/JsonElement;Ljava/lang/reflect/Type;Lcom/google/gson/JsonDeserializationContext;)Lnet/minecraft/client/renderer/block/model/MultiVariant; a
net/minecraft/client/renderer/block/model/Variant ebg
	modelLocation a
	rotation b
	uvLock c
	weight d
	getModelLocation ()Lnet/minecraft/resources/ResourceLocation; a
	getRotation ()Lcom/mojang/math/Transformation; b
	getWeight ()I d
	isUvLocked ()Z c
net/minecraft/client/renderer/block/model/Variant$Deserializer ebg$a
	deserialize (Lcom/google/gson/JsonElement;Ljava/lang/reflect/Type;Lcom/google/gson/JsonDeserializationContext;)Lnet/minecraft/client/renderer/block/model/Variant; a
	getBlockRotation (Lcom/google/gson/JsonObject;)Lnet/minecraft/client/resources/model/BlockModelRotation; a
	getModel (Lcom/google/gson/JsonObject;)Lnet/minecraft/resources/ResourceLocation; b
	getUvLock (Lcom/google/gson/JsonObject;)Z d
	getWeight (Lcom/google/gson/JsonObject;)I c
net/minecraft/client/renderer/block/model/multipart/AndCondition ebh
	conditions c
net/minecraft/client/renderer/block/model/multipart/Condition ebi
	FALSE b
	TRUE a
net/minecraft/client/renderer/block/model/multipart/KeyValueCondition ebj
	PIPE_SPLITTER c
	key d
	value e
	getBlockStatePredicate (Lnet/minecraft/world/level/block/state/StateDefinition;Lnet/minecraft/world/level/block/state/properties/Property;Ljava/lang/String;)Ljava/util/function/Predicate; a
net/minecraft/client/renderer/block/model/multipart/MultiPart ebk
	definition a
	selectors b
	bake (Lnet/minecraft/client/resources/model/ModelBakery;Ljava/util/function/Function;Lnet/minecraft/client/resources/model/ModelState;Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/client/resources/model/BakedModel; a
	getDependencies ()Ljava/util/Collection; f
	getMaterials (Ljava/util/function/Function;Ljava/util/Set;)Ljava/util/Collection; a
	getMultiVariants ()Ljava/util/Set; b
	getSelectors ()Ljava/util/List; a
net/minecraft/client/renderer/block/model/multipart/MultiPart$Deserializer ebk$a
	context a
	deserialize (Lcom/google/gson/JsonElement;Ljava/lang/reflect/Type;Lcom/google/gson/JsonDeserializationContext;)Lnet/minecraft/client/renderer/block/model/multipart/MultiPart; a
	getSelectors (Lcom/google/gson/JsonDeserializationContext;Lcom/google/gson/JsonArray;)Ljava/util/List; a
net/minecraft/client/renderer/block/model/multipart/OrCondition ebl
	conditions c
net/minecraft/client/renderer/block/model/multipart/Selector ebm
	condition a
	variant b
	getPredicate (Lnet/minecraft/world/level/block/state/StateDefinition;)Ljava/util/function/Predicate; a
	getVariant ()Lnet/minecraft/client/renderer/block/model/MultiVariant; a
net/minecraft/client/renderer/block/model/multipart/Selector$Deserializer ebm$a
	deserialize (Lcom/google/gson/JsonElement;Ljava/lang/reflect/Type;Lcom/google/gson/JsonDeserializationContext;)Lnet/minecraft/client/renderer/block/model/multipart/Selector; a
	getCondition (Lcom/google/gson/JsonObject;)Lnet/minecraft/client/renderer/block/model/multipart/Condition; a
	getKeyValueCondition (Ljava/util/Map$Entry;)Lnet/minecraft/client/renderer/block/model/multipart/Condition; a
	getSelector (Lcom/google/gson/JsonObject;)Lnet/minecraft/client/renderer/block/model/multipart/Condition; b
net/minecraft/client/renderer/blockentity/BannerRenderer ebr
	bar d
	flag a
	pole c
	makeFlag ()Lnet/minecraft/client/model/geom/ModelPart; a
	render (Lnet/minecraft/world/level/block/entity/BannerBlockEntity;FLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;II)V a
	render (Lnet/minecraft/world/level/block/entity/BlockEntity;FLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;II)V a
	renderPatterns (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;IILnet/minecraft/client/model/geom/ModelPart;Lnet/minecraft/client/resources/model/Material;ZLjava/util/List;)V a
	renderPatterns (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;IILnet/minecraft/client/model/geom/ModelPart;Lnet/minecraft/client/resources/model/Material;ZLjava/util/List;Z)V a
net/minecraft/client/renderer/blockentity/BeaconRenderer ebs
	BEAM_LOCATION a
	addVertex (Lcom/mojang/math/Matrix4f;Lcom/mojang/math/Matrix3f;Lcom/mojang/blaze3d/vertex/VertexConsumer;FFFFIFFFF)V a
	render (Lnet/minecraft/world/level/block/entity/BeaconBlockEntity;FLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;II)V a
	render (Lnet/minecraft/world/level/block/entity/BlockEntity;FLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;II)V a
	renderBeaconBeam (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;FJII[F)V a
	renderBeaconBeam (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;Lnet/minecraft/resources/ResourceLocation;FFJII[FFF)V a
	renderPart (Lcom/mojang/blaze3d/vertex/PoseStack;Lcom/mojang/blaze3d/vertex/VertexConsumer;FFFFIIFFFFFFFFFFFF)V a
	renderQuad (Lcom/mojang/math/Matrix4f;Lcom/mojang/math/Matrix3f;Lcom/mojang/blaze3d/vertex/VertexConsumer;FFFFIIFFFFFFFF)V a
	shouldRenderOffScreen (Lnet/minecraft/world/level/block/entity/BeaconBlockEntity;)Z a
	shouldRenderOffScreen (Lnet/minecraft/world/level/block/entity/BlockEntity;)Z a
net/minecraft/client/renderer/blockentity/BedRenderer ebt
	footPiece c
	headPiece a
	legs d
	render (Lnet/minecraft/world/level/block/entity/BedBlockEntity;FLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;II)V a
	render (Lnet/minecraft/world/level/block/entity/BlockEntity;FLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;II)V a
	renderPiece (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;ZLnet/minecraft/core/Direction;Lnet/minecraft/client/resources/model/Material;IIZ)V a
net/minecraft/client/renderer/blockentity/BellRenderer ebu
	BELL_RESOURCE_LOCATION a
	bellBody c
	render (Lnet/minecraft/world/level/block/entity/BellBlockEntity;FLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;II)V a
	render (Lnet/minecraft/world/level/block/entity/BlockEntity;FLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;II)V a
net/minecraft/client/renderer/blockentity/BlockEntityRenderDispatcher ebv
	camera d
	cameraHitResult e
	font h
	instance a
	level c
	renderers f
	singleRenderBuffer g
	textureManager b
	getFont ()Lnet/minecraft/client/gui/Font; a
	getRenderer (Lnet/minecraft/world/level/block/entity/BlockEntity;)Lnet/minecraft/client/renderer/blockentity/BlockEntityRenderer; a
	prepare (Lnet/minecraft/world/level/Level;Lnet/minecraft/client/renderer/texture/TextureManager;Lnet/minecraft/client/gui/Font;Lnet/minecraft/client/Camera;Lnet/minecraft/world/phys/HitResult;)V a
	register (Lnet/minecraft/world/level/block/entity/BlockEntityType;Lnet/minecraft/client/renderer/blockentity/BlockEntityRenderer;)V a
	render (Lnet/minecraft/world/level/block/entity/BlockEntity;FLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;)V a
	renderItem (Lnet/minecraft/world/level/block/entity/BlockEntity;Lcom/mojang/blaze3d/vertex/PoseStack;)V a
	renderItem (Lnet/minecraft/world/level/block/entity/BlockEntity;Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;II)Z a
	setLevel (Lnet/minecraft/world/level/Level;)V a
	setupAndRender (Lnet/minecraft/client/renderer/blockentity/BlockEntityRenderer;Lnet/minecraft/world/level/block/entity/BlockEntity;FLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;)V a
	tryRender (Lnet/minecraft/world/level/block/entity/BlockEntity;Ljava/lang/Runnable;)V a
net/minecraft/client/renderer/blockentity/BlockEntityRenderer ebw
	renderer b
	render (Lnet/minecraft/world/level/block/entity/BlockEntity;FLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;II)V a
	shouldRenderOffScreen (Lnet/minecraft/world/level/block/entity/BlockEntity;)Z a
net/minecraft/client/renderer/blockentity/BrightnessCombiner ebx
	acceptDouble (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object; a
	acceptDouble (Lnet/minecraft/world/level/block/entity/BlockEntity;Lnet/minecraft/world/level/block/entity/BlockEntity;)Lit/unimi/dsi/fastutil/ints/Int2IntFunction; a
	acceptNone ()Lit/unimi/dsi/fastutil/ints/Int2IntFunction; a
	acceptNone ()Ljava/lang/Object; b
	acceptSingle (Ljava/lang/Object;)Ljava/lang/Object; a
	acceptSingle (Lnet/minecraft/world/level/block/entity/BlockEntity;)Lit/unimi/dsi/fastutil/ints/Int2IntFunction; a
net/minecraft/client/renderer/blockentity/CampfireRenderer eby
	render (Lnet/minecraft/world/level/block/entity/BlockEntity;FLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;II)V a
	render (Lnet/minecraft/world/level/block/entity/CampfireBlockEntity;FLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;II)V a
net/minecraft/client/renderer/blockentity/ChestRenderer ebz
	bottom c
	doubleLeftBottom f
	doubleLeftLid e
	doubleLeftLock g
	doubleRightBottom i
	doubleRightLid h
	doubleRightLock j
	lid a
	lock d
	xmasTextures k
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lcom/mojang/blaze3d/vertex/VertexConsumer;Lnet/minecraft/client/model/geom/ModelPart;Lnet/minecraft/client/model/geom/ModelPart;Lnet/minecraft/client/model/geom/ModelPart;FII)V a
	render (Lnet/minecraft/world/level/block/entity/BlockEntity;FLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;II)V a
net/minecraft/client/renderer/blockentity/ConduitRenderer eca
	ACTIVE_SHELL_TEXTURE c
	CLOSED_EYE_TEXTURE g
	OPEN_EYE_TEXTURE f
	SHELL_TEXTURE a
	VERTICAL_WIND_TEXTURE e
	WIND_TEXTURE d
	cage k
	eye h
	shell j
	wind i
	render (Lnet/minecraft/world/level/block/entity/BlockEntity;FLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;II)V a
	render (Lnet/minecraft/world/level/block/entity/ConduitBlockEntity;FLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;II)V a
net/minecraft/client/renderer/blockentity/EnchantTableRenderer ecb
	BOOK_LOCATION a
	bookModel c
	render (Lnet/minecraft/world/level/block/entity/BlockEntity;FLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;II)V a
	render (Lnet/minecraft/world/level/block/entity/EnchantmentTableBlockEntity;FLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;II)V a
net/minecraft/client/renderer/blockentity/LecternRenderer ecc
	bookModel a
	render (Lnet/minecraft/world/level/block/entity/BlockEntity;FLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;II)V a
	render (Lnet/minecraft/world/level/block/entity/LecternBlockEntity;FLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;II)V a
net/minecraft/client/renderer/blockentity/PistonHeadRenderer ecd
	blockRenderer a
	render (Lnet/minecraft/world/level/block/entity/BlockEntity;FLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;II)V a
	render (Lnet/minecraft/world/level/block/piston/PistonMovingBlockEntity;FLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;II)V a
	renderBlock (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;Lnet/minecraft/world/level/Level;ZI)V a
net/minecraft/client/renderer/blockentity/ShulkerBoxRenderer ece
	model a
	render (Lnet/minecraft/world/level/block/entity/BlockEntity;FLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;II)V a
	render (Lnet/minecraft/world/level/block/entity/ShulkerBoxBlockEntity;FLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;II)V a
net/minecraft/client/renderer/blockentity/SignRenderer ecf
	signModel a
	getMaterial (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/client/resources/model/Material; a
	render (Lnet/minecraft/world/level/block/entity/BlockEntity;FLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;II)V a
	render (Lnet/minecraft/world/level/block/entity/SignBlockEntity;FLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;II)V a
net/minecraft/client/renderer/blockentity/SignRenderer$SignModel ecf$a
	sign a
	stick b
	renderToBuffer (Lcom/mojang/blaze3d/vertex/PoseStack;Lcom/mojang/blaze3d/vertex/VertexConsumer;IIFFFF)V a
net/minecraft/client/renderer/blockentity/SkullBlockRenderer ecg
	MODEL_BY_TYPE a
	SKIN_BY_TYPE c
	getRenderType (Lnet/minecraft/world/level/block/SkullBlock$Type;Lcom/mojang/authlib/GameProfile;)Lnet/minecraft/client/renderer/RenderType; a
	render (Lnet/minecraft/world/level/block/entity/BlockEntity;FLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;II)V a
	render (Lnet/minecraft/world/level/block/entity/SkullBlockEntity;FLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;II)V a
	renderSkull (Lnet/minecraft/core/Direction;FLnet/minecraft/world/level/block/SkullBlock$Type;Lcom/mojang/authlib/GameProfile;FLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
net/minecraft/client/renderer/blockentity/SpawnerRenderer ech
	render (Lnet/minecraft/world/level/block/entity/BlockEntity;FLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;II)V a
	render (Lnet/minecraft/world/level/block/entity/SpawnerBlockEntity;FLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;II)V a
net/minecraft/client/renderer/blockentity/StructureBlockRenderer eci
	render (Lnet/minecraft/world/level/block/entity/BlockEntity;FLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;II)V a
	render (Lnet/minecraft/world/level/block/entity/StructureBlockEntity;FLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;II)V a
	renderInvisibleBlocks (Lnet/minecraft/world/level/block/entity/StructureBlockEntity;Lcom/mojang/blaze3d/vertex/VertexConsumer;Lnet/minecraft/core/BlockPos;ZLcom/mojang/blaze3d/vertex/PoseStack;)V a
	shouldRenderOffScreen (Lnet/minecraft/world/level/block/entity/BlockEntity;)Z a
	shouldRenderOffScreen (Lnet/minecraft/world/level/block/entity/StructureBlockEntity;)Z a
net/minecraft/client/renderer/blockentity/TheEndGatewayRenderer ecj
	BEAM_LOCATION d
	getOffset ()F a
	getPasses (D)I a
	render (Lnet/minecraft/world/level/block/entity/BlockEntity;FLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;II)V a
	render (Lnet/minecraft/world/level/block/entity/TheEndGatewayBlockEntity;FLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;II)V a
	render (Lnet/minecraft/world/level/block/entity/TheEndPortalBlockEntity;FLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;II)V a
net/minecraft/client/renderer/blockentity/TheEndPortalRenderer eck
	END_PORTAL_LOCATION c
	END_SKY_LOCATION a
	RANDOM d
	RENDER_TYPES e
	getOffset ()F a
	getPasses (D)I a
	render (Lnet/minecraft/world/level/block/entity/BlockEntity;FLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;II)V a
	render (Lnet/minecraft/world/level/block/entity/TheEndPortalBlockEntity;FLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;II)V a
	renderCube (Lnet/minecraft/world/level/block/entity/TheEndPortalBlockEntity;FFLcom/mojang/math/Matrix4f;Lcom/mojang/blaze3d/vertex/VertexConsumer;)V a
	renderFace (Lnet/minecraft/world/level/block/entity/TheEndPortalBlockEntity;Lcom/mojang/math/Matrix4f;Lcom/mojang/blaze3d/vertex/VertexConsumer;FFFFFFFFFFFLnet/minecraft/core/Direction;)V a
net/minecraft/client/renderer/chunk/ChunkRenderDispatcher ecm
	LOGGER a
	camera l
	executor i
	fixedBuffers g
	freeBufferCount f
	freeBuffers c
	level j
	mailbox h
	renderer k
	toBatch b
	toBatchCount e
	toUpload d
	blockUntilClear ()V e
	clearBatchQueue ()V i
	dispose ()V g
	doUploadChunkLayer (Lcom/mojang/blaze3d/vertex/BufferBuilder;Lcom/mojang/blaze3d/vertex/VertexBuffer;)Ljava/util/concurrent/CompletableFuture; b
	fixedBuffers ()Lnet/minecraft/client/renderer/ChunkBufferBuilderPack; a
	getCameraPosition ()Lnet/minecraft/world/phys/Vec3; c
	getStats ()Ljava/lang/String; b
	isQueueEmpty ()Z f
	rebuildChunkSync (Lnet/minecraft/client/renderer/chunk/ChunkRenderDispatcher$RenderChunk;)V a
	runTask ()V h
	schedule (Lnet/minecraft/client/renderer/chunk/ChunkRenderDispatcher$RenderChunk$ChunkCompileTask;)V a
	setCamera (Lnet/minecraft/world/phys/Vec3;)V a
	setLevel (Lnet/minecraft/world/level/Level;)V a
	uploadAllPendingUploads ()Z d
	uploadChunkLayer (Lcom/mojang/blaze3d/vertex/BufferBuilder;Lcom/mojang/blaze3d/vertex/VertexBuffer;)Ljava/util/concurrent/CompletableFuture; a
net/minecraft/client/renderer/chunk/ChunkRenderDispatcher$ChunkTaskResult ecm$a
	$VALUES c
	CANCELLED b
	SUCCESSFUL a
net/minecraft/client/renderer/chunk/ChunkRenderDispatcher$CompiledChunk ecm$b
	UNCOMPILED a
	hasBlocks b
	hasLayer c
	isCompletelyEmpty d
	renderableBlockEntities e
	transparencyState g
	visibilitySet f
	facesCanSeeEachother (Lnet/minecraft/core/Direction;Lnet/minecraft/core/Direction;)Z a
	getRenderableBlockEntities ()Ljava/util/List; b
	hasNoRenderableLayers ()Z a
	isEmpty (Lnet/minecraft/client/renderer/RenderType;)Z a
net/minecraft/client/renderer/chunk/ChunkRenderDispatcher$RenderChunk ecm$c
	bb b
	buffers g
	compiled a
	dirty i
	globalBlockEntities f
	lastFrame h
	lastRebuildTask d
	lastResortTransparencyTask e
	origin j
	playerChanged l
	relativeOrigins k
	beginLayer (Lcom/mojang/blaze3d/vertex/BufferBuilder;)V a
	cancelTasks ()V i
	compileSync ()V k
	createCompileTask ()Lnet/minecraft/client/renderer/chunk/ChunkRenderDispatcher$RenderChunk$ChunkCompileTask; j
	doesChunkExistAt (Lnet/minecraft/core/BlockPos;)Z a
	getBuffer (Lnet/minecraft/client/renderer/RenderType;)Lcom/mojang/blaze3d/vertex/VertexBuffer; a
	getCompiledChunk ()Lnet/minecraft/client/renderer/chunk/ChunkRenderDispatcher$CompiledChunk; c
	getDistToPlayerSqr ()D b
	getOrigin ()Lnet/minecraft/core/BlockPos; e
	getRelativeOrigin (Lnet/minecraft/core/Direction;)Lnet/minecraft/core/BlockPos; a
	hasAllNeighbors ()Z a
	isDirty ()Z g
	isDirtyFromPlayer ()Z h
	rebuildChunkAsync (Lnet/minecraft/client/renderer/chunk/ChunkRenderDispatcher;)V a
	releaseBuffers ()V d
	reset ()V l
	resortTransparency (Lnet/minecraft/client/renderer/RenderType;Lnet/minecraft/client/renderer/chunk/ChunkRenderDispatcher;)Z a
	setDirty (Z)V a
	setFrame (I)Z a
	setNotDirty ()V f
	setOrigin (III)V a
	updateGlobalBlockEntities (Ljava/util/Set;)V a
net/minecraft/client/renderer/chunk/ChunkRenderDispatcher$RenderChunk$ChunkCompileTask ecm$c$a
	distAtCreation a
	isCancelled b
	cancel ()V a
	compareTo (Lnet/minecraft/client/renderer/chunk/ChunkRenderDispatcher$RenderChunk$ChunkCompileTask;)I a
	doTask (Lnet/minecraft/client/renderer/ChunkBufferBuilderPack;)Ljava/util/concurrent/CompletableFuture; a
net/minecraft/client/renderer/chunk/ChunkRenderDispatcher$RenderChunk$RebuildTask ecm$c$b
	region d
	cancel ()V a
	compile (FFFLnet/minecraft/client/renderer/chunk/ChunkRenderDispatcher$CompiledChunk;Lnet/minecraft/client/renderer/ChunkBufferBuilderPack;)Ljava/util/Set; a
	doTask (Lnet/minecraft/client/renderer/ChunkBufferBuilderPack;)Ljava/util/concurrent/CompletableFuture; a
	handleBlockEntity (Lnet/minecraft/client/renderer/chunk/ChunkRenderDispatcher$CompiledChunk;Ljava/util/Set;Lnet/minecraft/world/level/block/entity/BlockEntity;)V a
net/minecraft/client/renderer/chunk/ChunkRenderDispatcher$RenderChunk$ResortTransparencyTask ecm$c$c
	compiledChunk e
	cancel ()V a
	doTask (Lnet/minecraft/client/renderer/ChunkBufferBuilderPack;)Ljava/util/concurrent/CompletableFuture; a
net/minecraft/client/renderer/chunk/RenderChunkRegion ecn
	blockStates h
	centerX a
	centerZ b
	chunks g
	fluidStates i
	level j
	start c
	xLength d
	yLength e
	zLength f
	createIfNotEmpty (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;I)Lnet/minecraft/client/renderer/chunk/RenderChunkRegion; a
	getBlockEntity (Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/entity/BlockEntity; c
	getBlockEntity (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/chunk/LevelChunk$EntityCreationType;)Lnet/minecraft/world/level/block/entity/BlockEntity; a
	getBlockState (Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; d_
	getBlockTint (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/ColorResolver;)I a
	getFluidState (Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/material/FluidState; b
	getLightEngine ()Lnet/minecraft/world/level/lighting/LevelLightEngine; e
	getShade (Lnet/minecraft/core/Direction;Z)F a
	index (III)I a
	index (Lnet/minecraft/core/BlockPos;)I a
	isAllEmpty (Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;II[[Lnet/minecraft/world/level/chunk/LevelChunk;)Z a
net/minecraft/client/renderer/chunk/VisGraph eco
	DIRECTIONS d
	DX a
	DY c
	DZ b
	INDEX_OF_EDGES f
	bitSet e
	empty g
	addEdges (ILjava/util/Set;)V a
	floodFill (I)Ljava/util/Set; a
	floodFill (Lnet/minecraft/core/BlockPos;)Ljava/util/Set; b
	getIndex (III)I a
	getIndex (Lnet/minecraft/core/BlockPos;)I c
	getNeighborIndexAtFace (ILnet/minecraft/core/Direction;)I a
	resolve ()Lnet/minecraft/client/renderer/chunk/VisibilitySet; a
	setOpaque (Lnet/minecraft/core/BlockPos;)V a
net/minecraft/client/renderer/chunk/VisibilitySet ecp
	FACINGS a
	data b
	add (Ljava/util/Set;)V a
	set (Lnet/minecraft/core/Direction;Lnet/minecraft/core/Direction;Z)V a
	setAll (Z)V a
	visibilityBetween (Lnet/minecraft/core/Direction;Lnet/minecraft/core/Direction;)Z a
net/minecraft/client/renderer/culling/Frustum ecr
	camX b
	camY c
	camZ d
	frustumData a
	calculateFrustum (Lcom/mojang/math/Matrix4f;Lcom/mojang/math/Matrix4f;)V a
	cubeInFrustum (DDDDDD)Z a
	cubeInFrustum (FFFFFF)Z a
	getPlane (Lcom/mojang/math/Matrix4f;IIII)V a
	isVisible (Lnet/minecraft/world/phys/AABB;)Z a
	prepare (DDD)V a
net/minecraft/client/renderer/debug/BeeDebugRenderer ect
	beeInfosPerEntity c
	hives b
	lastLookedAtUuid d
	minecraft a
	addOrUpdateBeeInfo (Lnet/minecraft/client/renderer/debug/BeeDebugRenderer$BeeInfo;)V a
	addOrUpdateHiveInfo (Lnet/minecraft/client/renderer/debug/BeeDebugRenderer$HiveInfo;)V a
	clear ()V a
	clearRemovedBees ()V b
	clearRemovedHives ()V c
	createHiveBlacklistMap ()Ljava/util/Map; e
	doRender ()V d
	getBeeUuidsAsString (Ljava/util/Collection;)Ljava/lang/String; a
	getCamera ()Lnet/minecraft/client/Camera; g
	getGhostHives ()Ljava/util/Map; h
	getHiveMemberNames (Lnet/minecraft/client/renderer/debug/BeeDebugRenderer$HiveInfo;)Ljava/util/Set; b
	getHiveMembers (Lnet/minecraft/core/BlockPos;)Ljava/util/Collection; b
	getPosDescription (Lnet/minecraft/client/renderer/debug/BeeDebugRenderer$BeeInfo;Lnet/minecraft/core/BlockPos;)Ljava/lang/String; a
	highlightHive (Lnet/minecraft/core/BlockPos;)V a
	isBeeSelected (Lnet/minecraft/client/renderer/debug/BeeDebugRenderer$BeeInfo;)Z d
	isPlayerCloseEnoughToMob (Lnet/minecraft/client/renderer/debug/BeeDebugRenderer$BeeInfo;)Z e
	removeBeeInfo (I)V a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;DDD)V a
	renderBeeInfo (Lnet/minecraft/client/renderer/debug/BeeDebugRenderer$BeeInfo;)V c
	renderFlowerInfos ()V f
	renderGhostHive (Lnet/minecraft/core/BlockPos;Ljava/util/List;)V a
	renderHiveInfo (Lnet/minecraft/client/renderer/debug/BeeDebugRenderer$HiveInfo;Ljava/util/Collection;)V a
	renderPath (Lnet/minecraft/client/renderer/debug/BeeDebugRenderer$BeeInfo;)V b
	renderTextOverHive (Ljava/lang/String;Lnet/minecraft/client/renderer/debug/BeeDebugRenderer$HiveInfo;II)V a
	renderTextOverMob (Lnet/minecraft/core/Position;ILjava/lang/String;IF)V a
	renderTextOverPos (Ljava/lang/String;Lnet/minecraft/core/BlockPos;II)V a
	renderTransparentFilledBox (Lnet/minecraft/core/BlockPos;FFFFF)V a
	updateLastLookedAtUuid ()V i
net/minecraft/client/renderer/debug/BeeDebugRenderer$BeeInfo ect$a
	blacklistedHives i
	flowerPos f
	goals h
	hivePos e
	id b
	path d
	pos c
	travelTicks g
	uuid a
	getName ()Ljava/lang/String; b
	getUuid ()Ljava/util/UUID; a
	hasFlower ()Z c
	hasHive (Lnet/minecraft/core/BlockPos;)Z a
net/minecraft/client/renderer/debug/BeeDebugRenderer$HiveInfo ect$b
	hiveType b
	honeyLevel d
	lastSeen f
	occupantCount c
	pos a
	sedated e
net/minecraft/client/renderer/debug/BrainDebugRenderer ecu
	LOGGER a
	brainDumpsPerEntity d
	lastLookedAtUuid e
	minecraft b
	pois c
	addOrUpdateBrainDump (Lnet/minecraft/client/renderer/debug/BrainDebugRenderer$BrainDump;)V a
	addPoi (Lnet/minecraft/client/renderer/debug/BrainDebugRenderer$PoiInfo;)V a
	clear ()V a
	clearRemovedEntities ()V b
	doRender (DDD)V a
	getGhostPois ()Ljava/util/Map; c
	getPotentialTicketHolderNames (Lnet/minecraft/client/renderer/debug/BrainDebugRenderer$PoiInfo;)Ljava/util/Set; d
	getPotentialTicketHolders (Lnet/minecraft/core/BlockPos;)Ljava/util/Collection; d
	getTicketHolderNames (Lnet/minecraft/client/renderer/debug/BrainDebugRenderer$PoiInfo;)Ljava/util/Set; c
	getTicketHolders (Lnet/minecraft/core/BlockPos;)Ljava/util/Collection; c
	highlightPoi (Lnet/minecraft/core/BlockPos;)V b
	isMobSelected (Lnet/minecraft/client/renderer/debug/BrainDebugRenderer$BrainDump;)Z b
	isPlayerCloseEnoughToMob (Lnet/minecraft/client/renderer/debug/BrainDebugRenderer$BrainDump;)Z c
	removeBrainDump (I)V a
	removePoi (Lnet/minecraft/core/BlockPos;)V a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;DDD)V a
	renderBrainInfo (Lnet/minecraft/client/renderer/debug/BrainDebugRenderer$BrainDump;DDD)V b
	renderGhostPoi (Lnet/minecraft/core/BlockPos;Ljava/util/List;)V a
	renderPath (Lnet/minecraft/client/renderer/debug/BrainDebugRenderer$BrainDump;DDD)V a
	renderPoiInfo (Lnet/minecraft/client/renderer/debug/BrainDebugRenderer$PoiInfo;)V b
	renderTextOverMob (Lnet/minecraft/core/Position;ILjava/lang/String;IF)V a
	renderTextOverPoi (Ljava/lang/String;Lnet/minecraft/client/renderer/debug/BrainDebugRenderer$PoiInfo;II)V a
	renderTextOverPos (Ljava/lang/String;Lnet/minecraft/core/BlockPos;II)V a
	setFreeTicketCount (Lnet/minecraft/core/BlockPos;I)V a
	updateLastLookedAtUuid ()V d
net/minecraft/client/renderer/debug/BrainDebugRenderer$BrainDump ecu$a
	activities l
	behaviors m
	gossips o
	health f
	id b
	inventory i
	maxHealth g
	memories n
	name c
	path j
	pois p
	pos h
	potentialPois q
	profession d
	uuid a
	wantsGolem k
	xp e
	getUuid ()Ljava/util/UUID; a
	hasPoi (Lnet/minecraft/core/BlockPos;)Z a
	hasPotentialPoi (Lnet/minecraft/core/BlockPos;)Z b
net/minecraft/client/renderer/debug/BrainDebugRenderer$PoiInfo ecu$b
	freeTicketCount c
	pos a
	type b
net/minecraft/client/renderer/debug/CaveDebugRenderer ecv
	startPoses c
	thicknessMap b
	tunnelsList a
	addTunnel (Lnet/minecraft/core/BlockPos;Ljava/util/List;Ljava/util/List;)V a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;DDD)V a
net/minecraft/client/renderer/debug/ChunkBorderRenderer ecw
	minecraft a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;DDD)V a
net/minecraft/client/renderer/debug/ChunkDebugRenderer ecx
	data d
	lastUpdateTime b
	minecraft a
	radius c
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;DDD)V a
net/minecraft/client/renderer/debug/ChunkDebugRenderer$ChunkData ecx$a
	clientData b
	serverData c
net/minecraft/client/renderer/debug/CollisionBoxRenderer ecy
	lastUpdateTime b
	minecraft a
	shapes c
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;DDD)V a
net/minecraft/client/renderer/debug/DebugRenderer ecz
	beeDebugRenderer o
	brainDebugRenderer m
	caveRenderer g
	chunkBorderRenderer c
	chunkRenderer l
	collisionBoxRenderer e
	gameTestDebugRenderer r
	goalSelectorRenderer q
	heightMapRenderer d
	lightDebugRenderer i
	neighborsUpdateRenderer f
	pathfindingRenderer a
	raidDebugRenderer p
	renderChunkborder s
	solidFaceRenderer k
	structureRenderer h
	villageSectionsDebugRenderer n
	waterDebugRenderer b
	worldGenAttemptRenderer j
	clear ()V a
	getTargetedEntity (Lnet/minecraft/world/entity/Entity;I)Ljava/util/Optional; a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource$BufferSource;DDD)V a
	renderFilledBox (DDDDDDFFFF)V a
	renderFilledBox (Lnet/minecraft/core/BlockPos;FFFFF)V a
	renderFilledBox (Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;FFFF)V a
	renderFilledBox (Lnet/minecraft/world/phys/AABB;FFFF)V a
	renderFloatingText (Ljava/lang/String;DDDI)V a
	renderFloatingText (Ljava/lang/String;DDDIF)V a
	renderFloatingText (Ljava/lang/String;DDDIFZFZ)V a
	renderFloatingText (Ljava/lang/String;IIII)V a
	switchRenderChunkborder ()Z b
net/minecraft/client/renderer/debug/DebugRenderer$SimpleDebugRenderer ecz$a
	clear ()V a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;DDD)V a
net/minecraft/client/renderer/debug/GameTestDebugRenderer eda
	markers a
	addMarker (Lnet/minecraft/core/BlockPos;ILjava/lang/String;I)V a
	clear ()V a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;DDD)V a
	renderMarker (Lnet/minecraft/core/BlockPos;Lnet/minecraft/client/renderer/debug/GameTestDebugRenderer$Marker;)V a
net/minecraft/client/renderer/debug/GameTestDebugRenderer$Marker eda$a
	color a
	removeAtTime c
	text b
	getA ()F d
	getB ()F c
	getG ()F b
	getR ()F a
net/minecraft/client/renderer/debug/GoalSelectorDebugRenderer edb
	goalSelectors b
	minecraft a
	addGoalSelector (ILjava/util/List;)V a
	clear ()V a
	removeGoalSelector (I)V a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;DDD)V a
net/minecraft/client/renderer/debug/GoalSelectorDebugRenderer$DebugGoal edb$a
	isRunning d
	name c
	pos a
	priority b
net/minecraft/client/renderer/debug/HeightMapRenderer edc
	minecraft a
	getColor (Lnet/minecraft/world/level/levelgen/Heightmap$Types;)Lcom/mojang/math/Vector3f; a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;DDD)V a
net/minecraft/client/renderer/debug/LightDebugRenderer edd
	minecraft a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;DDD)V a
net/minecraft/client/renderer/debug/NeighborsUpdateRenderer ede
	lastUpdate b
	minecraft a
	addUpdate (JLnet/minecraft/core/BlockPos;)V a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;DDD)V a
net/minecraft/client/renderer/debug/PathfindingRenderer edf
	creationMap c
	pathMap a
	pathMaxDist b
	addPath (ILnet/minecraft/world/level/pathfinder/Path;F)V a
	distanceToCamera (Lnet/minecraft/core/BlockPos;DDD)F a
	doRenderPath (Lnet/minecraft/world/level/pathfinder/Path;FZZDDD)V b
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;DDD)V a
	renderPath (Lnet/minecraft/world/level/pathfinder/Path;FZZDDD)V a
	renderPathLine (Lnet/minecraft/world/level/pathfinder/Path;DDD)V a
net/minecraft/client/renderer/debug/RaidDebugRenderer edg
	minecraft a
	raidCenters b
	getCamera ()Lnet/minecraft/client/Camera; b
	highlightRaidCenter (Lnet/minecraft/core/BlockPos;)V a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;DDD)V a
	renderTextOverBlock (Ljava/lang/String;Lnet/minecraft/core/BlockPos;I)V a
	setRaidCenters (Ljava/util/Collection;)V a
net/minecraft/client/renderer/debug/SolidFaceRenderer edh
	minecraft a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;DDD)V a
net/minecraft/client/renderer/debug/StructureRenderer edi
	minecraft a
	postMainBoxes b
	postPiecesBoxes c
	startPiecesMap d
	addBoundingBox (Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Ljava/util/List;Ljava/util/List;Lnet/minecraft/world/level/dimension/DimensionType;)V a
	clear ()V a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;DDD)V a
net/minecraft/client/renderer/debug/VillageSectionsDebugRenderer edj
	villageSections a
	clear ()V a
	doRender (DDD)V a
	highlightVillageSection (Lnet/minecraft/core/SectionPos;)V c
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;DDD)V a
	setNotVillageSection (Lnet/minecraft/core/SectionPos;)V b
	setVillageSection (Lnet/minecraft/core/SectionPos;)V a
net/minecraft/client/renderer/debug/WaterDebugRenderer edk
	minecraft a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;DDD)V a
net/minecraft/client/renderer/debug/WorldGenAttemptRenderer edl
	alphas c
	blues f
	greens e
	reds d
	scales b
	toRender a
	addPos (Lnet/minecraft/core/BlockPos;FFFFF)V a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;DDD)V a
net/minecraft/client/renderer/entity/AbstractHorseRenderer edn
	scale a
	scale (Lnet/minecraft/world/entity/LivingEntity;Lcom/mojang/blaze3d/vertex/PoseStack;F)V a
	scale (Lnet/minecraft/world/entity/animal/horse/AbstractHorse;Lcom/mojang/blaze3d/vertex/PoseStack;F)V a
net/minecraft/client/renderer/entity/AbstractZombieRenderer edo
	ZOMBIE_LOCATION a
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/Mob;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/monster/Zombie;)Lnet/minecraft/resources/ResourceLocation; a
	isShaking (Lnet/minecraft/world/entity/LivingEntity;)Z a
	isShaking (Lnet/minecraft/world/entity/monster/Zombie;)Z b
net/minecraft/client/renderer/entity/AreaEffectCloudRenderer edp
	getTextureLocation (Lnet/minecraft/world/entity/AreaEffectCloud;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
net/minecraft/client/renderer/entity/ArmorStandRenderer edq
	DEFAULT_SKIN_LOCATION a
	getRenderType (Lnet/minecraft/world/entity/LivingEntity;ZZZ)Lnet/minecraft/client/renderer/RenderType; a
	getRenderType (Lnet/minecraft/world/entity/decoration/ArmorStand;ZZZ)Lnet/minecraft/client/renderer/RenderType; a
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/decoration/ArmorStand;)Lnet/minecraft/resources/ResourceLocation; a
	setupRotations (Lnet/minecraft/world/entity/LivingEntity;Lcom/mojang/blaze3d/vertex/PoseStack;FFF)V a
	setupRotations (Lnet/minecraft/world/entity/decoration/ArmorStand;Lcom/mojang/blaze3d/vertex/PoseStack;FFF)V a
	shouldShowName (Lnet/minecraft/world/entity/Entity;)Z b
	shouldShowName (Lnet/minecraft/world/entity/LivingEntity;)Z b
	shouldShowName (Lnet/minecraft/world/entity/decoration/ArmorStand;)Z b
net/minecraft/client/renderer/entity/ArrowRenderer edr
	render (Lnet/minecraft/world/entity/Entity;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	render (Lnet/minecraft/world/entity/projectile/AbstractArrow;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	vertex (Lcom/mojang/math/Matrix4f;Lcom/mojang/math/Matrix3f;Lcom/mojang/blaze3d/vertex/VertexConsumer;IIIFFIIII)V a
net/minecraft/client/renderer/entity/BatRenderer eds
	BAT_LOCATION a
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/ambient/Bat;)Lnet/minecraft/resources/ResourceLocation; a
	scale (Lnet/minecraft/world/entity/LivingEntity;Lcom/mojang/blaze3d/vertex/PoseStack;F)V a
	scale (Lnet/minecraft/world/entity/ambient/Bat;Lcom/mojang/blaze3d/vertex/PoseStack;F)V a
	setupRotations (Lnet/minecraft/world/entity/LivingEntity;Lcom/mojang/blaze3d/vertex/PoseStack;FFF)V a
	setupRotations (Lnet/minecraft/world/entity/ambient/Bat;Lcom/mojang/blaze3d/vertex/PoseStack;FFF)V a
net/minecraft/client/renderer/entity/BeeRenderer edt
	ANGRY_BEE_TEXTURE a
	ANGRY_NECTAR_BEE_TEXTURE g
	BEE_TEXTURE h
	NECTAR_BEE_TEXTURE i
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/animal/Bee;)Lnet/minecraft/resources/ResourceLocation; a
net/minecraft/client/renderer/entity/BlazeRenderer edu
	BLAZE_LOCATION a
	getBlockLightLevel (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/core/BlockPos;)I a
	getBlockLightLevel (Lnet/minecraft/world/entity/monster/Blaze;Lnet/minecraft/core/BlockPos;)I a
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/monster/Blaze;)Lnet/minecraft/resources/ResourceLocation; a
net/minecraft/client/renderer/entity/BoatRenderer edv
	BOAT_TEXTURE_LOCATIONS e
	model a
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/vehicle/Boat;)Lnet/minecraft/resources/ResourceLocation; a
	render (Lnet/minecraft/world/entity/Entity;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	render (Lnet/minecraft/world/entity/vehicle/Boat;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
net/minecraft/client/renderer/entity/CatRenderer edw
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/animal/Cat;)Lnet/minecraft/resources/ResourceLocation; a
	scale (Lnet/minecraft/world/entity/LivingEntity;Lcom/mojang/blaze3d/vertex/PoseStack;F)V a
	scale (Lnet/minecraft/world/entity/animal/Cat;Lcom/mojang/blaze3d/vertex/PoseStack;F)V a
	setupRotations (Lnet/minecraft/world/entity/LivingEntity;Lcom/mojang/blaze3d/vertex/PoseStack;FFF)V a
	setupRotations (Lnet/minecraft/world/entity/animal/Cat;Lcom/mojang/blaze3d/vertex/PoseStack;FFF)V a
net/minecraft/client/renderer/entity/CaveSpiderRenderer edx
	CAVE_SPIDER_LOCATION a
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/monster/CaveSpider;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/monster/Spider;)Lnet/minecraft/resources/ResourceLocation; a
	scale (Lnet/minecraft/world/entity/LivingEntity;Lcom/mojang/blaze3d/vertex/PoseStack;F)V a
	scale (Lnet/minecraft/world/entity/monster/CaveSpider;Lcom/mojang/blaze3d/vertex/PoseStack;F)V a
net/minecraft/client/renderer/entity/ChestedHorseRenderer edy
	MAP a
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/animal/horse/AbstractChestedHorse;)Lnet/minecraft/resources/ResourceLocation; a
net/minecraft/client/renderer/entity/ChickenRenderer edz
	CHICKEN_LOCATION a
	getBob (Lnet/minecraft/world/entity/LivingEntity;F)F a
	getBob (Lnet/minecraft/world/entity/animal/Chicken;F)F a
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/animal/Chicken;)Lnet/minecraft/resources/ResourceLocation; a
net/minecraft/client/renderer/entity/CodRenderer eea
	COD_LOCATION a
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/animal/Cod;)Lnet/minecraft/resources/ResourceLocation; a
	setupRotations (Lnet/minecraft/world/entity/LivingEntity;Lcom/mojang/blaze3d/vertex/PoseStack;FFF)V a
	setupRotations (Lnet/minecraft/world/entity/animal/Cod;Lcom/mojang/blaze3d/vertex/PoseStack;FFF)V a
net/minecraft/client/renderer/entity/CowRenderer eeb
	COW_LOCATION a
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/animal/Cow;)Lnet/minecraft/resources/ResourceLocation; a
net/minecraft/client/renderer/entity/CreeperRenderer eec
	CREEPER_LOCATION a
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/monster/Creeper;)Lnet/minecraft/resources/ResourceLocation; a
	getWhiteOverlayProgress (Lnet/minecraft/world/entity/LivingEntity;F)F b
	getWhiteOverlayProgress (Lnet/minecraft/world/entity/monster/Creeper;F)F a
	scale (Lnet/minecraft/world/entity/LivingEntity;Lcom/mojang/blaze3d/vertex/PoseStack;F)V a
	scale (Lnet/minecraft/world/entity/monster/Creeper;Lcom/mojang/blaze3d/vertex/PoseStack;F)V a
net/minecraft/client/renderer/entity/DolphinRenderer eed
	DOLPHIN_LOCATION a
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/animal/Dolphin;)Lnet/minecraft/resources/ResourceLocation; a
net/minecraft/client/renderer/entity/DragonFireballRenderer eee
	RENDER_TYPE e
	TEXTURE_LOCATION a
	getBlockLightLevel (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/core/BlockPos;)I a
	getBlockLightLevel (Lnet/minecraft/world/entity/projectile/DragonFireball;Lnet/minecraft/core/BlockPos;)I a
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/projectile/DragonFireball;)Lnet/minecraft/resources/ResourceLocation; a
	render (Lnet/minecraft/world/entity/Entity;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	render (Lnet/minecraft/world/entity/projectile/DragonFireball;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	vertex (Lcom/mojang/blaze3d/vertex/VertexConsumer;Lcom/mojang/math/Matrix4f;Lcom/mojang/math/Matrix3f;IFIII)V a
net/minecraft/client/renderer/entity/DrownedRenderer eef
	DROWNED_LOCATION a
	getTextureLocation (Lnet/minecraft/world/entity/monster/Zombie;)Lnet/minecraft/resources/ResourceLocation; a
	setupRotations (Lnet/minecraft/world/entity/LivingEntity;Lcom/mojang/blaze3d/vertex/PoseStack;FFF)V a
	setupRotations (Lnet/minecraft/world/entity/monster/Drowned;Lcom/mojang/blaze3d/vertex/PoseStack;FFF)V a
net/minecraft/client/renderer/entity/ElderGuardianRenderer eeg
	GUARDIAN_ELDER_LOCATION a
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/monster/Guardian;)Lnet/minecraft/resources/ResourceLocation; a
	scale (Lnet/minecraft/world/entity/LivingEntity;Lcom/mojang/blaze3d/vertex/PoseStack;F)V a
	scale (Lnet/minecraft/world/entity/monster/Guardian;Lcom/mojang/blaze3d/vertex/PoseStack;F)V a
net/minecraft/client/renderer/entity/EndCrystalRenderer eeh
	END_CRYSTAL_LOCATION a
	RENDER_TYPE e
	SIN_45 f
	base i
	cube g
	glass h
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/boss/enderdragon/EndCrystal;)Lnet/minecraft/resources/ResourceLocation; a
	getY (Lnet/minecraft/world/entity/boss/enderdragon/EndCrystal;F)F a
	render (Lnet/minecraft/world/entity/Entity;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	render (Lnet/minecraft/world/entity/boss/enderdragon/EndCrystal;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	shouldRender (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/client/renderer/culling/Frustum;DDD)Z a
	shouldRender (Lnet/minecraft/world/entity/boss/enderdragon/EndCrystal;Lnet/minecraft/client/renderer/culling/Frustum;DDD)Z a
net/minecraft/client/renderer/entity/EnderDragonRenderer eei
	BEAM k
	CRYSTAL_BEAM_LOCATION a
	DECAL i
	DRAGON_EXPLODING_LOCATION e
	DRAGON_EYES_LOCATION g
	DRAGON_LOCATION f
	EYES j
	HALF_SQRT_3 l
	RENDER_TYPE h
	model m
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/boss/enderdragon/EnderDragon;)Lnet/minecraft/resources/ResourceLocation; a
	render (Lnet/minecraft/world/entity/Entity;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	render (Lnet/minecraft/world/entity/boss/enderdragon/EnderDragon;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	renderCrystalBeams (FFFFILcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	vertex01 (Lcom/mojang/blaze3d/vertex/VertexConsumer;Lcom/mojang/math/Matrix4f;I)V a
	vertex2 (Lcom/mojang/blaze3d/vertex/VertexConsumer;Lcom/mojang/math/Matrix4f;FF)V a
	vertex3 (Lcom/mojang/blaze3d/vertex/VertexConsumer;Lcom/mojang/math/Matrix4f;FF)V b
	vertex4 (Lcom/mojang/blaze3d/vertex/VertexConsumer;Lcom/mojang/math/Matrix4f;FF)V c
net/minecraft/client/renderer/entity/EnderDragonRenderer$DragonModel eei$a
	a B
	body g
	entity A
	head a
	jaw f
	leftFrontFoot l
	leftFrontLeg j
	leftFrontLegTip k
	leftRearFoot o
	leftRearLeg m
	leftRearLegTip n
	leftWing h
	leftWingTip i
	neck b
	rightFrontFoot w
	rightFrontLeg u
	rightFrontLegTip v
	rightRearFoot z
	rightRearLeg x
	rightRearLegTip y
	rightWing p
	rightWingTip t
	prepareMobModel (Lnet/minecraft/world/entity/Entity;FFF)V a
	prepareMobModel (Lnet/minecraft/world/entity/boss/enderdragon/EnderDragon;FFF)V a
	renderSide (Lcom/mojang/blaze3d/vertex/PoseStack;Lcom/mojang/blaze3d/vertex/VertexConsumer;IIFLnet/minecraft/client/model/geom/ModelPart;Lnet/minecraft/client/model/geom/ModelPart;Lnet/minecraft/client/model/geom/ModelPart;Lnet/minecraft/client/model/geom/ModelPart;Lnet/minecraft/client/model/geom/ModelPart;Lnet/minecraft/client/model/geom/ModelPart;Lnet/minecraft/client/model/geom/ModelPart;)V a
	renderToBuffer (Lcom/mojang/blaze3d/vertex/PoseStack;Lcom/mojang/blaze3d/vertex/VertexConsumer;IIFFFF)V a
	setupAnim (Lnet/minecraft/world/entity/Entity;FFFFF)V a
	setupAnim (Lnet/minecraft/world/entity/boss/enderdragon/EnderDragon;FFFFF)V a
net/minecraft/client/renderer/entity/EndermanRenderer eej
	ENDERMAN_LOCATION a
	random g
	getRenderOffset (Lnet/minecraft/world/entity/Entity;F)Lnet/minecraft/world/phys/Vec3; a
	getRenderOffset (Lnet/minecraft/world/entity/monster/EnderMan;F)Lnet/minecraft/world/phys/Vec3; a
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/monster/EnderMan;)Lnet/minecraft/resources/ResourceLocation; a
	render (Lnet/minecraft/world/entity/Entity;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	render (Lnet/minecraft/world/entity/LivingEntity;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	render (Lnet/minecraft/world/entity/Mob;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	render (Lnet/minecraft/world/entity/monster/EnderMan;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
net/minecraft/client/renderer/entity/EndermiteRenderer eek
	ENDERMITE_LOCATION a
	getFlipDegrees (Lnet/minecraft/world/entity/LivingEntity;)F c
	getFlipDegrees (Lnet/minecraft/world/entity/monster/Endermite;)F a
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/monster/Endermite;)Lnet/minecraft/resources/ResourceLocation; b
net/minecraft/client/renderer/entity/EntityRenderDispatcher eel
	SHADOW_RENDER_TYPE e
	camera b
	cameraOrientation k
	crosshairPickEntity c
	defaultPlayerRenderer h
	font i
	level j
	options d
	playerRenderers g
	renderHitBoxes m
	renderers f
	shouldRenderShadow l
	textureManager a
	cameraOrientation ()Lcom/mojang/math/Quaternion; b
	distanceToSqr (DDD)D a
	distanceToSqr (Lnet/minecraft/world/entity/Entity;)D b
	fireVertex (Lcom/mojang/blaze3d/vertex/PoseStack$Pose;Lcom/mojang/blaze3d/vertex/VertexConsumer;FFFFF)V a
	getFont ()Lnet/minecraft/client/gui/Font; c
	getPackedLightCoords (Lnet/minecraft/world/entity/Entity;F)I a
	getRenderer (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/client/renderer/entity/EntityRenderer; a
	overrideCameraOrientation (Lcom/mojang/math/Quaternion;)V a
	prepare (Lnet/minecraft/world/level/Level;Lnet/minecraft/client/Camera;Lnet/minecraft/world/entity/Entity;)V a
	register (Lnet/minecraft/world/entity/EntityType;Lnet/minecraft/client/renderer/entity/EntityRenderer;)V a
	registerRenderers (Lnet/minecraft/client/renderer/entity/ItemRenderer;Lnet/minecraft/server/packs/resources/ReloadableResourceManager;)V a
	render (Lnet/minecraft/world/entity/Entity;DDDFFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	renderBlockShadow (Lcom/mojang/blaze3d/vertex/PoseStack$Pose;Lcom/mojang/blaze3d/vertex/VertexConsumer;Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;DDDFF)V a
	renderBox (Lcom/mojang/blaze3d/vertex/PoseStack;Lcom/mojang/blaze3d/vertex/VertexConsumer;Lnet/minecraft/world/entity/Entity;FFF)V a
	renderFlame (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;Lnet/minecraft/world/entity/Entity;)V a
	renderHitbox (Lcom/mojang/blaze3d/vertex/PoseStack;Lcom/mojang/blaze3d/vertex/VertexConsumer;Lnet/minecraft/world/entity/Entity;F)V a
	renderShadow (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;Lnet/minecraft/world/entity/Entity;FFLnet/minecraft/world/level/LevelReader;F)V a
	setLevel (Lnet/minecraft/world/level/Level;)V a
	setRenderHitBoxes (Z)V b
	setRenderShadow (Z)V a
	shadowVertex (Lcom/mojang/blaze3d/vertex/PoseStack$Pose;Lcom/mojang/blaze3d/vertex/VertexConsumer;FFFFFF)V a
	shouldRender (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/client/renderer/culling/Frustum;DDD)Z a
	shouldRenderHitBoxes ()Z a
net/minecraft/client/renderer/entity/EntityRenderer eem
	entityRenderDispatcher b
	shadowRadius c
	shadowStrength d
	getBlockLightLevel (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/core/BlockPos;)I a
	getDispatcher ()Lnet/minecraft/client/renderer/entity/EntityRenderDispatcher; b
	getFont ()Lnet/minecraft/client/gui/Font; a
	getPackedLightCoords (Lnet/minecraft/world/entity/Entity;F)I b
	getRenderOffset (Lnet/minecraft/world/entity/Entity;F)Lnet/minecraft/world/phys/Vec3; a
	getSkyLightLevel (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/core/BlockPos;)I b
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	render (Lnet/minecraft/world/entity/Entity;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	renderNameTag (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/network/chat/Component;Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	shouldRender (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/client/renderer/culling/Frustum;DDD)Z a
	shouldShowName (Lnet/minecraft/world/entity/Entity;)Z b
net/minecraft/client/renderer/entity/EvokerFangsRenderer een
	TEXTURE_LOCATION a
	model e
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/projectile/EvokerFangs;)Lnet/minecraft/resources/ResourceLocation; a
	render (Lnet/minecraft/world/entity/Entity;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	render (Lnet/minecraft/world/entity/projectile/EvokerFangs;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
net/minecraft/client/renderer/entity/EvokerRenderer eeo
	EVOKER_ILLAGER a
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/monster/SpellcasterIllager;)Lnet/minecraft/resources/ResourceLocation; a
net/minecraft/client/renderer/entity/ExperienceOrbRenderer eep
	EXPERIENCE_ORB_LOCATION a
	RENDER_TYPE e
	getBlockLightLevel (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/core/BlockPos;)I a
	getBlockLightLevel (Lnet/minecraft/world/entity/ExperienceOrb;Lnet/minecraft/core/BlockPos;)I a
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/ExperienceOrb;)Lnet/minecraft/resources/ResourceLocation; a
	render (Lnet/minecraft/world/entity/Entity;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	render (Lnet/minecraft/world/entity/ExperienceOrb;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	vertex (Lcom/mojang/blaze3d/vertex/VertexConsumer;Lcom/mojang/math/Matrix4f;Lcom/mojang/math/Matrix3f;FFIIIFFI)V a
net/minecraft/client/renderer/entity/FallingBlockRenderer eeq
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/item/FallingBlockEntity;)Lnet/minecraft/resources/ResourceLocation; a
	render (Lnet/minecraft/world/entity/Entity;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	render (Lnet/minecraft/world/entity/item/FallingBlockEntity;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
net/minecraft/client/renderer/entity/FireworkEntityRenderer eer
	itemRenderer a
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/projectile/FireworkRocketEntity;)Lnet/minecraft/resources/ResourceLocation; a
	render (Lnet/minecraft/world/entity/Entity;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	render (Lnet/minecraft/world/entity/projectile/FireworkRocketEntity;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
net/minecraft/client/renderer/entity/FishingHookRenderer ees
	RENDER_TYPE e
	TEXTURE_LOCATION a
	fraction (II)F a
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/projectile/FishingHook;)Lnet/minecraft/resources/ResourceLocation; a
	render (Lnet/minecraft/world/entity/Entity;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	render (Lnet/minecraft/world/entity/projectile/FishingHook;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	stringVertex (FFFLcom/mojang/blaze3d/vertex/VertexConsumer;Lcom/mojang/math/Matrix4f;F)V a
	vertex (Lcom/mojang/blaze3d/vertex/VertexConsumer;Lcom/mojang/math/Matrix4f;Lcom/mojang/math/Matrix3f;IFIII)V a
net/minecraft/client/renderer/entity/FoxRenderer eet
	RED_FOX_SLEEP_TEXTURE g
	RED_FOX_TEXTURE a
	SNOW_FOX_SLEEP_TEXTURE i
	SNOW_FOX_TEXTURE h
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/animal/Fox;)Lnet/minecraft/resources/ResourceLocation; a
	setupRotations (Lnet/minecraft/world/entity/LivingEntity;Lcom/mojang/blaze3d/vertex/PoseStack;FFF)V a
	setupRotations (Lnet/minecraft/world/entity/animal/Fox;Lcom/mojang/blaze3d/vertex/PoseStack;FFF)V a
net/minecraft/client/renderer/entity/GhastRenderer eeu
	GHAST_LOCATION a
	GHAST_SHOOTING_LOCATION g
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/monster/Ghast;)Lnet/minecraft/resources/ResourceLocation; a
	scale (Lnet/minecraft/world/entity/LivingEntity;Lcom/mojang/blaze3d/vertex/PoseStack;F)V a
	scale (Lnet/minecraft/world/entity/monster/Ghast;Lcom/mojang/blaze3d/vertex/PoseStack;F)V a
net/minecraft/client/renderer/entity/GiantMobRenderer eev
	ZOMBIE_LOCATION a
	scale g
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/monster/Giant;)Lnet/minecraft/resources/ResourceLocation; a
	scale (Lnet/minecraft/world/entity/LivingEntity;Lcom/mojang/blaze3d/vertex/PoseStack;F)V a
	scale (Lnet/minecraft/world/entity/monster/Giant;Lcom/mojang/blaze3d/vertex/PoseStack;F)V a
net/minecraft/client/renderer/entity/GuardianRenderer eew
	BEAM_RENDER_TYPE h
	GUARDIAN_BEAM_LOCATION g
	GUARDIAN_LOCATION a
	getPosition (Lnet/minecraft/world/entity/LivingEntity;DF)Lnet/minecraft/world/phys/Vec3; a
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/monster/Guardian;)Lnet/minecraft/resources/ResourceLocation; a
	render (Lnet/minecraft/world/entity/Entity;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	render (Lnet/minecraft/world/entity/LivingEntity;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	render (Lnet/minecraft/world/entity/Mob;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	render (Lnet/minecraft/world/entity/monster/Guardian;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	shouldRender (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/client/renderer/culling/Frustum;DDD)Z a
	shouldRender (Lnet/minecraft/world/entity/Mob;Lnet/minecraft/client/renderer/culling/Frustum;DDD)Z a
	shouldRender (Lnet/minecraft/world/entity/monster/Guardian;Lnet/minecraft/client/renderer/culling/Frustum;DDD)Z a
	vertex (Lcom/mojang/blaze3d/vertex/VertexConsumer;Lcom/mojang/math/Matrix4f;Lcom/mojang/math/Matrix3f;FFFIIIFF)V a
net/minecraft/client/renderer/entity/HoglinRenderer eex
	HOGLIN_LOCATION a
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/monster/hoglin/Hoglin;)Lnet/minecraft/resources/ResourceLocation; a
	isShaking (Lnet/minecraft/world/entity/LivingEntity;)Z a
	isShaking (Lnet/minecraft/world/entity/monster/hoglin/Hoglin;)Z b
net/minecraft/client/renderer/entity/HorseRenderer eey
	LOCATION_BY_VARIANT a
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/animal/horse/Horse;)Lnet/minecraft/resources/ResourceLocation; a
net/minecraft/client/renderer/entity/HumanoidMobRenderer eez
	DEFAULT_LOCATION a
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/Mob;)Lnet/minecraft/resources/ResourceLocation; a
net/minecraft/client/renderer/entity/HuskRenderer efa
	HUSK_LOCATION a
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/Mob;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/monster/Zombie;)Lnet/minecraft/resources/ResourceLocation; a
	scale (Lnet/minecraft/world/entity/LivingEntity;Lcom/mojang/blaze3d/vertex/PoseStack;F)V a
	scale (Lnet/minecraft/world/entity/monster/Zombie;Lcom/mojang/blaze3d/vertex/PoseStack;F)V a
net/minecraft/client/renderer/entity/IllagerRenderer efb
	scale (Lnet/minecraft/world/entity/LivingEntity;Lcom/mojang/blaze3d/vertex/PoseStack;F)V a
	scale (Lnet/minecraft/world/entity/monster/AbstractIllager;Lcom/mojang/blaze3d/vertex/PoseStack;F)V a
net/minecraft/client/renderer/entity/IllusionerRenderer efc
	ILLUSIONER a
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/monster/Illusioner;)Lnet/minecraft/resources/ResourceLocation; a
	isBodyVisible (Lnet/minecraft/world/entity/LivingEntity;)Z d
	isBodyVisible (Lnet/minecraft/world/entity/monster/Illusioner;)Z b
	render (Lnet/minecraft/world/entity/Entity;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	render (Lnet/minecraft/world/entity/LivingEntity;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	render (Lnet/minecraft/world/entity/Mob;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	render (Lnet/minecraft/world/entity/monster/Illusioner;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
net/minecraft/client/renderer/entity/IronGolemRenderer efd
	GOLEM_LOCATION a
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/animal/IronGolem;)Lnet/minecraft/resources/ResourceLocation; a
	setupRotations (Lnet/minecraft/world/entity/LivingEntity;Lcom/mojang/blaze3d/vertex/PoseStack;FFF)V a
	setupRotations (Lnet/minecraft/world/entity/animal/IronGolem;Lcom/mojang/blaze3d/vertex/PoseStack;FFF)V a
net/minecraft/client/renderer/entity/ItemEntityRenderer efe
	itemRenderer a
	random e
	getRenderAmount (Lnet/minecraft/world/item/ItemStack;)I a
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/item/ItemEntity;)Lnet/minecraft/resources/ResourceLocation; a
	render (Lnet/minecraft/world/entity/Entity;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	render (Lnet/minecraft/world/entity/item/ItemEntity;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
net/minecraft/client/renderer/entity/ItemFrameRenderer eff
	FRAME_LOCATION a
	MAP_FRAME_LOCATION e
	itemRenderer g
	minecraft f
	getRenderOffset (Lnet/minecraft/world/entity/Entity;F)Lnet/minecraft/world/phys/Vec3; a
	getRenderOffset (Lnet/minecraft/world/entity/decoration/ItemFrame;F)Lnet/minecraft/world/phys/Vec3; a
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/decoration/ItemFrame;)Lnet/minecraft/resources/ResourceLocation; a
	render (Lnet/minecraft/world/entity/Entity;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	render (Lnet/minecraft/world/entity/decoration/ItemFrame;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	renderNameTag (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/network/chat/Component;Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	renderNameTag (Lnet/minecraft/world/entity/decoration/ItemFrame;Lnet/minecraft/network/chat/Component;Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	shouldShowName (Lnet/minecraft/world/entity/Entity;)Z b
	shouldShowName (Lnet/minecraft/world/entity/decoration/ItemFrame;)Z b
net/minecraft/client/renderer/entity/ItemRenderer efg
	ENCHANT_GLINT_LOCATION a
	IGNORED c
	blitOffset b
	itemColors f
	itemModelShaper d
	textureManager e
	fillRect (Lcom/mojang/blaze3d/vertex/BufferBuilder;IIIIIIII)V a
	getArmorFoilBuffer (Lnet/minecraft/client/renderer/MultiBufferSource;Lnet/minecraft/client/renderer/RenderType;ZZ)Lcom/mojang/blaze3d/vertex/VertexConsumer; a
	getCompassFoilBuffer (Lnet/minecraft/client/renderer/MultiBufferSource;Lnet/minecraft/client/renderer/RenderType;Lcom/mojang/blaze3d/vertex/PoseStack$Pose;)Lcom/mojang/blaze3d/vertex/VertexConsumer; a
	getCompassFoilBufferDirect (Lnet/minecraft/client/renderer/MultiBufferSource;Lnet/minecraft/client/renderer/RenderType;Lcom/mojang/blaze3d/vertex/PoseStack$Pose;)Lcom/mojang/blaze3d/vertex/VertexConsumer; b
	getFoilBuffer (Lnet/minecraft/client/renderer/MultiBufferSource;Lnet/minecraft/client/renderer/RenderType;ZZ)Lcom/mojang/blaze3d/vertex/VertexConsumer; b
	getFoilBufferDirect (Lnet/minecraft/client/renderer/MultiBufferSource;Lnet/minecraft/client/renderer/RenderType;ZZ)Lcom/mojang/blaze3d/vertex/VertexConsumer; c
	getItemModelShaper ()Lnet/minecraft/client/renderer/ItemModelShaper; a
	getModel (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/LivingEntity;)Lnet/minecraft/client/resources/model/BakedModel; a
	onResourceManagerReload (Lnet/minecraft/server/packs/resources/ResourceManager;)V a
	render (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/client/renderer/block/model/ItemTransforms$TransformType;ZLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;IILnet/minecraft/client/resources/model/BakedModel;)V a
	renderAndDecorateFakeItem (Lnet/minecraft/world/item/ItemStack;II)V c
	renderAndDecorateItem (Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/item/ItemStack;II)V a
	renderAndDecorateItem (Lnet/minecraft/world/item/ItemStack;II)V b
	renderGuiItem (Lnet/minecraft/world/item/ItemStack;II)V a
	renderGuiItem (Lnet/minecraft/world/item/ItemStack;IILnet/minecraft/client/resources/model/BakedModel;)V a
	renderGuiItemDecorations (Lnet/minecraft/client/gui/Font;Lnet/minecraft/world/item/ItemStack;II)V a
	renderGuiItemDecorations (Lnet/minecraft/client/gui/Font;Lnet/minecraft/world/item/ItemStack;IILjava/lang/String;)V a
	renderModelLists (Lnet/minecraft/client/resources/model/BakedModel;Lnet/minecraft/world/item/ItemStack;IILcom/mojang/blaze3d/vertex/PoseStack;Lcom/mojang/blaze3d/vertex/VertexConsumer;)V a
	renderQuadList (Lcom/mojang/blaze3d/vertex/PoseStack;Lcom/mojang/blaze3d/vertex/VertexConsumer;Ljava/util/List;Lnet/minecraft/world/item/ItemStack;II)V a
	renderStatic (Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/client/renderer/block/model/ItemTransforms$TransformType;ZLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;Lnet/minecraft/world/level/Level;II)V a
	renderStatic (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/client/renderer/block/model/ItemTransforms$TransformType;IILcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;)V a
	tryRenderGuiItem (Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/item/ItemStack;II)V b
net/minecraft/client/renderer/entity/LeashKnotRenderer efh
	KNOT_LOCATION a
	model e
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/decoration/LeashFenceKnotEntity;)Lnet/minecraft/resources/ResourceLocation; a
	render (Lnet/minecraft/world/entity/Entity;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	render (Lnet/minecraft/world/entity/decoration/LeashFenceKnotEntity;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
net/minecraft/client/renderer/entity/LightningBoltRenderer efi
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/LightningBolt;)Lnet/minecraft/resources/ResourceLocation; a
	quad (Lcom/mojang/math/Matrix4f;Lcom/mojang/blaze3d/vertex/VertexConsumer;FFIFFFFFFFZZZZ)V a
	render (Lnet/minecraft/world/entity/Entity;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	render (Lnet/minecraft/world/entity/LightningBolt;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
net/minecraft/client/renderer/entity/LivingEntityRenderer efj
	LOGGER a
	layers f
	model e
	addLayer (Lnet/minecraft/client/renderer/entity/layers/RenderLayer;)Z a
	getAttackAnim (Lnet/minecraft/world/entity/LivingEntity;F)F d
	getBob (Lnet/minecraft/world/entity/LivingEntity;F)F a
	getFlipDegrees (Lnet/minecraft/world/entity/LivingEntity;)F c
	getModel ()Lnet/minecraft/client/model/EntityModel; c
	getOverlayCoords (Lnet/minecraft/world/entity/LivingEntity;F)I c
	getRenderType (Lnet/minecraft/world/entity/LivingEntity;ZZZ)Lnet/minecraft/client/renderer/RenderType; a
	getWhiteOverlayProgress (Lnet/minecraft/world/entity/LivingEntity;F)F b
	isBodyVisible (Lnet/minecraft/world/entity/LivingEntity;)Z d
	isShaking (Lnet/minecraft/world/entity/LivingEntity;)Z a
	render (Lnet/minecraft/world/entity/Entity;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	render (Lnet/minecraft/world/entity/LivingEntity;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	scale (Lnet/minecraft/world/entity/LivingEntity;Lcom/mojang/blaze3d/vertex/PoseStack;F)V a
	setupRotations (Lnet/minecraft/world/entity/LivingEntity;Lcom/mojang/blaze3d/vertex/PoseStack;FFF)V a
	shouldShowName (Lnet/minecraft/world/entity/Entity;)Z b
	shouldShowName (Lnet/minecraft/world/entity/LivingEntity;)Z b
	sleepDirectionToRotation (Lnet/minecraft/core/Direction;)F a
net/minecraft/client/renderer/entity/LlamaRenderer efk
	LLAMA_LOCATIONS a
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/animal/horse/Llama;)Lnet/minecraft/resources/ResourceLocation; a
net/minecraft/client/renderer/entity/LlamaSpitRenderer efl
	LLAMA_SPIT_LOCATION a
	model e
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/projectile/LlamaSpit;)Lnet/minecraft/resources/ResourceLocation; a
	render (Lnet/minecraft/world/entity/Entity;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	render (Lnet/minecraft/world/entity/projectile/LlamaSpit;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
net/minecraft/client/renderer/entity/MagmaCubeRenderer efm
	MAGMACUBE_LOCATION a
	getBlockLightLevel (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/core/BlockPos;)I a
	getBlockLightLevel (Lnet/minecraft/world/entity/monster/MagmaCube;Lnet/minecraft/core/BlockPos;)I a
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/monster/MagmaCube;)Lnet/minecraft/resources/ResourceLocation; a
	scale (Lnet/minecraft/world/entity/LivingEntity;Lcom/mojang/blaze3d/vertex/PoseStack;F)V a
	scale (Lnet/minecraft/world/entity/monster/MagmaCube;Lcom/mojang/blaze3d/vertex/PoseStack;F)V a
net/minecraft/client/renderer/entity/MinecartRenderer efn
	MINECART_LOCATION e
	model a
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/vehicle/AbstractMinecart;)Lnet/minecraft/resources/ResourceLocation; a
	render (Lnet/minecraft/world/entity/Entity;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	render (Lnet/minecraft/world/entity/vehicle/AbstractMinecart;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	renderMinecartContents (Lnet/minecraft/world/entity/vehicle/AbstractMinecart;FLnet/minecraft/world/level/block/state/BlockState;Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
net/minecraft/client/renderer/entity/MobRenderer efo
	addVertexPair (Lcom/mojang/blaze3d/vertex/VertexConsumer;Lcom/mojang/math/Matrix4f;IFFFFFIIZFF)V a
	render (Lnet/minecraft/world/entity/Entity;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	render (Lnet/minecraft/world/entity/LivingEntity;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	render (Lnet/minecraft/world/entity/Mob;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	renderLeash (Lnet/minecraft/world/entity/Mob;FLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;Lnet/minecraft/world/entity/Entity;)V a
	renderSide (Lcom/mojang/blaze3d/vertex/VertexConsumer;Lcom/mojang/math/Matrix4f;FFFIIIIFFFF)V a
	shouldRender (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/client/renderer/culling/Frustum;DDD)Z a
	shouldRender (Lnet/minecraft/world/entity/Mob;Lnet/minecraft/client/renderer/culling/Frustum;DDD)Z a
	shouldShowName (Lnet/minecraft/world/entity/Entity;)Z b
	shouldShowName (Lnet/minecraft/world/entity/LivingEntity;)Z b
	shouldShowName (Lnet/minecraft/world/entity/Mob;)Z b
net/minecraft/client/renderer/entity/MushroomCowRenderer efp
	TEXTURES a
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/animal/MushroomCow;)Lnet/minecraft/resources/ResourceLocation; a
net/minecraft/client/renderer/entity/OcelotRenderer efq
	CAT_OCELOT_LOCATION a
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/animal/Ocelot;)Lnet/minecraft/resources/ResourceLocation; a
net/minecraft/client/renderer/entity/PaintingRenderer efr
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/decoration/Painting;)Lnet/minecraft/resources/ResourceLocation; a
	render (Lnet/minecraft/world/entity/Entity;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	render (Lnet/minecraft/world/entity/decoration/Painting;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	renderPainting (Lcom/mojang/blaze3d/vertex/PoseStack;Lcom/mojang/blaze3d/vertex/VertexConsumer;Lnet/minecraft/world/entity/decoration/Painting;IILnet/minecraft/client/renderer/texture/TextureAtlasSprite;Lnet/minecraft/client/renderer/texture/TextureAtlasSprite;)V a
	vertex (Lcom/mojang/math/Matrix4f;Lcom/mojang/math/Matrix3f;Lcom/mojang/blaze3d/vertex/VertexConsumer;FFFFFIIII)V a
net/minecraft/client/renderer/entity/PandaRenderer efs
	TEXTURES a
	getAngle (FFIFF)F a
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/animal/Panda;)Lnet/minecraft/resources/ResourceLocation; a
	setupRotations (Lnet/minecraft/world/entity/LivingEntity;Lcom/mojang/blaze3d/vertex/PoseStack;FFF)V a
	setupRotations (Lnet/minecraft/world/entity/animal/Panda;Lcom/mojang/blaze3d/vertex/PoseStack;FFF)V a
net/minecraft/client/renderer/entity/ParrotRenderer eft
	PARROT_LOCATIONS a
	getBob (Lnet/minecraft/world/entity/LivingEntity;F)F a
	getBob (Lnet/minecraft/world/entity/animal/Parrot;F)F a
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/animal/Parrot;)Lnet/minecraft/resources/ResourceLocation; a
net/minecraft/client/renderer/entity/PhantomRenderer efu
	PHANTOM_LOCATION a
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/monster/Phantom;)Lnet/minecraft/resources/ResourceLocation; a
	scale (Lnet/minecraft/world/entity/LivingEntity;Lcom/mojang/blaze3d/vertex/PoseStack;F)V a
	scale (Lnet/minecraft/world/entity/monster/Phantom;Lcom/mojang/blaze3d/vertex/PoseStack;F)V a
	setupRotations (Lnet/minecraft/world/entity/LivingEntity;Lcom/mojang/blaze3d/vertex/PoseStack;FFF)V a
	setupRotations (Lnet/minecraft/world/entity/monster/Phantom;Lcom/mojang/blaze3d/vertex/PoseStack;FFF)V a
net/minecraft/client/renderer/entity/PigRenderer efv
	PIG_LOCATION a
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/animal/Pig;)Lnet/minecraft/resources/ResourceLocation; a
net/minecraft/client/renderer/entity/PiglinRenderer efw
	resourceLocations a
	createModel (Z)Lnet/minecraft/client/model/PiglinModel; a
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/Mob;)Lnet/minecraft/resources/ResourceLocation; a
	isShaking (Lnet/minecraft/world/entity/LivingEntity;)Z a
	isShaking (Lnet/minecraft/world/entity/Mob;)Z c
net/minecraft/client/renderer/entity/PillagerRenderer efx
	PILLAGER a
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/monster/Pillager;)Lnet/minecraft/resources/ResourceLocation; a
net/minecraft/client/renderer/entity/PolarBearRenderer efy
	BEAR_LOCATION a
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/animal/PolarBear;)Lnet/minecraft/resources/ResourceLocation; a
	scale (Lnet/minecraft/world/entity/LivingEntity;Lcom/mojang/blaze3d/vertex/PoseStack;F)V a
	scale (Lnet/minecraft/world/entity/animal/PolarBear;Lcom/mojang/blaze3d/vertex/PoseStack;F)V a
net/minecraft/client/renderer/entity/PufferfishRenderer efz
	PUFFER_LOCATION a
	big j
	mid i
	puffStateO g
	small h
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/animal/Pufferfish;)Lnet/minecraft/resources/ResourceLocation; a
	render (Lnet/minecraft/world/entity/Entity;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	render (Lnet/minecraft/world/entity/LivingEntity;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	render (Lnet/minecraft/world/entity/Mob;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	render (Lnet/minecraft/world/entity/animal/Pufferfish;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	setupRotations (Lnet/minecraft/world/entity/LivingEntity;Lcom/mojang/blaze3d/vertex/PoseStack;FFF)V a
	setupRotations (Lnet/minecraft/world/entity/animal/Pufferfish;Lcom/mojang/blaze3d/vertex/PoseStack;FFF)V a
net/minecraft/client/renderer/entity/RabbitRenderer ega
	RABBIT_BLACK_LOCATION h
	RABBIT_BROWN_LOCATION a
	RABBIT_EVIL_LOCATION m
	RABBIT_GOLD_LOCATION i
	RABBIT_SALT_LOCATION j
	RABBIT_TOAST_LOCATION l
	RABBIT_WHITE_LOCATION g
	RABBIT_WHITE_SPLOTCHED_LOCATION k
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/animal/Rabbit;)Lnet/minecraft/resources/ResourceLocation; a
net/minecraft/client/renderer/entity/RavagerRenderer egb
	TEXTURE_LOCATION a
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/monster/Ravager;)Lnet/minecraft/resources/ResourceLocation; a
net/minecraft/client/renderer/entity/RenderLayerParent egc
	getModel ()Lnet/minecraft/client/model/EntityModel; c
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
net/minecraft/client/renderer/entity/SalmonRenderer egd
	SALMON_LOCATION a
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/animal/Salmon;)Lnet/minecraft/resources/ResourceLocation; a
	setupRotations (Lnet/minecraft/world/entity/LivingEntity;Lcom/mojang/blaze3d/vertex/PoseStack;FFF)V a
	setupRotations (Lnet/minecraft/world/entity/animal/Salmon;Lcom/mojang/blaze3d/vertex/PoseStack;FFF)V a
net/minecraft/client/renderer/entity/SheepRenderer ege
	SHEEP_LOCATION a
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/animal/Sheep;)Lnet/minecraft/resources/ResourceLocation; a
net/minecraft/client/renderer/entity/ShulkerBulletRenderer egf
	RENDER_TYPE e
	TEXTURE_LOCATION a
	model f
	getBlockLightLevel (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/core/BlockPos;)I a
	getBlockLightLevel (Lnet/minecraft/world/entity/projectile/ShulkerBullet;Lnet/minecraft/core/BlockPos;)I a
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/projectile/ShulkerBullet;)Lnet/minecraft/resources/ResourceLocation; a
	render (Lnet/minecraft/world/entity/Entity;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	render (Lnet/minecraft/world/entity/projectile/ShulkerBullet;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
net/minecraft/client/renderer/entity/ShulkerRenderer egg
	DEFAULT_TEXTURE_LOCATION a
	TEXTURE_LOCATION g
	getRenderOffset (Lnet/minecraft/world/entity/Entity;F)Lnet/minecraft/world/phys/Vec3; a
	getRenderOffset (Lnet/minecraft/world/entity/monster/Shulker;F)Lnet/minecraft/world/phys/Vec3; a
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/monster/Shulker;)Lnet/minecraft/resources/ResourceLocation; a
	setupRotations (Lnet/minecraft/world/entity/LivingEntity;Lcom/mojang/blaze3d/vertex/PoseStack;FFF)V a
	setupRotations (Lnet/minecraft/world/entity/monster/Shulker;Lcom/mojang/blaze3d/vertex/PoseStack;FFF)V a
	shouldRender (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/client/renderer/culling/Frustum;DDD)Z a
	shouldRender (Lnet/minecraft/world/entity/Mob;Lnet/minecraft/client/renderer/culling/Frustum;DDD)Z a
	shouldRender (Lnet/minecraft/world/entity/monster/Shulker;Lnet/minecraft/client/renderer/culling/Frustum;DDD)Z a
net/minecraft/client/renderer/entity/SilverfishRenderer egh
	SILVERFISH_LOCATION a
	getFlipDegrees (Lnet/minecraft/world/entity/LivingEntity;)F c
	getFlipDegrees (Lnet/minecraft/world/entity/monster/Silverfish;)F a
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/monster/Silverfish;)Lnet/minecraft/resources/ResourceLocation; b
net/minecraft/client/renderer/entity/SkeletonRenderer egi
	SKELETON_LOCATION a
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/Mob;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/monster/AbstractSkeleton;)Lnet/minecraft/resources/ResourceLocation; a
net/minecraft/client/renderer/entity/SlimeRenderer egj
	SLIME_LOCATION a
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/monster/Slime;)Lnet/minecraft/resources/ResourceLocation; a
	render (Lnet/minecraft/world/entity/Entity;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	render (Lnet/minecraft/world/entity/LivingEntity;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	render (Lnet/minecraft/world/entity/Mob;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	render (Lnet/minecraft/world/entity/monster/Slime;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	scale (Lnet/minecraft/world/entity/LivingEntity;Lcom/mojang/blaze3d/vertex/PoseStack;F)V a
	scale (Lnet/minecraft/world/entity/monster/Slime;Lcom/mojang/blaze3d/vertex/PoseStack;F)V a
net/minecraft/client/renderer/entity/SnowGolemRenderer egk
	SNOW_GOLEM_LOCATION a
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/animal/SnowGolem;)Lnet/minecraft/resources/ResourceLocation; a
net/minecraft/client/renderer/entity/SpectralArrowRenderer egl
	SPECTRAL_ARROW_LOCATION a
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/projectile/SpectralArrow;)Lnet/minecraft/resources/ResourceLocation; a
net/minecraft/client/renderer/entity/SpiderRenderer egm
	SPIDER_LOCATION a
	getFlipDegrees (Lnet/minecraft/world/entity/LivingEntity;)F c
	getFlipDegrees (Lnet/minecraft/world/entity/monster/Spider;)F b
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/monster/Spider;)Lnet/minecraft/resources/ResourceLocation; a
net/minecraft/client/renderer/entity/SquidRenderer egn
	SQUID_LOCATION a
	getBob (Lnet/minecraft/world/entity/LivingEntity;F)F a
	getBob (Lnet/minecraft/world/entity/animal/Squid;F)F a
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/animal/Squid;)Lnet/minecraft/resources/ResourceLocation; a
	setupRotations (Lnet/minecraft/world/entity/LivingEntity;Lcom/mojang/blaze3d/vertex/PoseStack;FFF)V a
	setupRotations (Lnet/minecraft/world/entity/animal/Squid;Lcom/mojang/blaze3d/vertex/PoseStack;FFF)V a
net/minecraft/client/renderer/entity/StrayRenderer ego
	STRAY_SKELETON_LOCATION a
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/Mob;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/monster/AbstractSkeleton;)Lnet/minecraft/resources/ResourceLocation; a
net/minecraft/client/renderer/entity/StriderRenderer egp
	COLD_LOCATION g
	STRIDER_LOCATION a
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/monster/Strider;)Lnet/minecraft/resources/ResourceLocation; a
	isShaking (Lnet/minecraft/world/entity/LivingEntity;)Z a
	isShaking (Lnet/minecraft/world/entity/monster/Strider;)Z b
	scale (Lnet/minecraft/world/entity/LivingEntity;Lcom/mojang/blaze3d/vertex/PoseStack;F)V a
	scale (Lnet/minecraft/world/entity/monster/Strider;Lcom/mojang/blaze3d/vertex/PoseStack;F)V a
net/minecraft/client/renderer/entity/ThrownItemRenderer egq
	fullBright f
	itemRenderer a
	scale e
	getBlockLightLevel (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/core/BlockPos;)I a
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	render (Lnet/minecraft/world/entity/Entity;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
net/minecraft/client/renderer/entity/ThrownTridentRenderer egr
	TRIDENT_LOCATION a
	model e
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/projectile/ThrownTrident;)Lnet/minecraft/resources/ResourceLocation; a
	render (Lnet/minecraft/world/entity/Entity;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	render (Lnet/minecraft/world/entity/projectile/ThrownTrident;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
net/minecraft/client/renderer/entity/TippableArrowRenderer egs
	NORMAL_ARROW_LOCATION a
	TIPPED_ARROW_LOCATION e
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/projectile/Arrow;)Lnet/minecraft/resources/ResourceLocation; a
net/minecraft/client/renderer/entity/TntMinecartRenderer egt
	renderMinecartContents (Lnet/minecraft/world/entity/vehicle/AbstractMinecart;FLnet/minecraft/world/level/block/state/BlockState;Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	renderMinecartContents (Lnet/minecraft/world/entity/vehicle/MinecartTNT;FLnet/minecraft/world/level/block/state/BlockState;Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	renderWhiteSolidBlock (Lnet/minecraft/world/level/block/state/BlockState;Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;IZ)V a
net/minecraft/client/renderer/entity/TntRenderer egu
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/item/PrimedTnt;)Lnet/minecraft/resources/ResourceLocation; a
	render (Lnet/minecraft/world/entity/Entity;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	render (Lnet/minecraft/world/entity/item/PrimedTnt;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
net/minecraft/client/renderer/entity/TropicalFishRenderer egv
	modelA a
	modelB g
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/animal/TropicalFish;)Lnet/minecraft/resources/ResourceLocation; a
	render (Lnet/minecraft/world/entity/Entity;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	render (Lnet/minecraft/world/entity/LivingEntity;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	render (Lnet/minecraft/world/entity/Mob;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	render (Lnet/minecraft/world/entity/animal/TropicalFish;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	setupRotations (Lnet/minecraft/world/entity/LivingEntity;Lcom/mojang/blaze3d/vertex/PoseStack;FFF)V a
	setupRotations (Lnet/minecraft/world/entity/animal/TropicalFish;Lcom/mojang/blaze3d/vertex/PoseStack;FFF)V a
net/minecraft/client/renderer/entity/TurtleRenderer egw
	TURTLE_LOCATION a
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/animal/Turtle;)Lnet/minecraft/resources/ResourceLocation; a
	render (Lnet/minecraft/world/entity/Entity;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	render (Lnet/minecraft/world/entity/LivingEntity;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	render (Lnet/minecraft/world/entity/Mob;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	render (Lnet/minecraft/world/entity/animal/Turtle;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
net/minecraft/client/renderer/entity/UndeadHorseRenderer egx
	MAP a
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/animal/horse/AbstractHorse;)Lnet/minecraft/resources/ResourceLocation; a
net/minecraft/client/renderer/entity/VexRenderer egy
	VEX_CHARGING_LOCATION g
	VEX_LOCATION a
	getBlockLightLevel (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/core/BlockPos;)I a
	getBlockLightLevel (Lnet/minecraft/world/entity/monster/Vex;Lnet/minecraft/core/BlockPos;)I a
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/Mob;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/monster/Vex;)Lnet/minecraft/resources/ResourceLocation; a
	scale (Lnet/minecraft/world/entity/LivingEntity;Lcom/mojang/blaze3d/vertex/PoseStack;F)V a
	scale (Lnet/minecraft/world/entity/monster/Vex;Lcom/mojang/blaze3d/vertex/PoseStack;F)V a
net/minecraft/client/renderer/entity/VillagerRenderer egz
	VILLAGER_BASE_SKIN a
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/npc/Villager;)Lnet/minecraft/resources/ResourceLocation; a
	scale (Lnet/minecraft/world/entity/LivingEntity;Lcom/mojang/blaze3d/vertex/PoseStack;F)V a
	scale (Lnet/minecraft/world/entity/npc/Villager;Lcom/mojang/blaze3d/vertex/PoseStack;F)V a
net/minecraft/client/renderer/entity/VindicatorRenderer eha
	VINDICATOR a
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/monster/Vindicator;)Lnet/minecraft/resources/ResourceLocation; a
net/minecraft/client/renderer/entity/WanderingTraderRenderer ehb
	VILLAGER_BASE_SKIN a
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/npc/WanderingTrader;)Lnet/minecraft/resources/ResourceLocation; a
	scale (Lnet/minecraft/world/entity/LivingEntity;Lcom/mojang/blaze3d/vertex/PoseStack;F)V a
	scale (Lnet/minecraft/world/entity/npc/WanderingTrader;Lcom/mojang/blaze3d/vertex/PoseStack;F)V a
net/minecraft/client/renderer/entity/WitchRenderer ehc
	WITCH_LOCATION a
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/monster/Witch;)Lnet/minecraft/resources/ResourceLocation; a
	render (Lnet/minecraft/world/entity/Entity;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	render (Lnet/minecraft/world/entity/LivingEntity;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	render (Lnet/minecraft/world/entity/Mob;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	render (Lnet/minecraft/world/entity/monster/Witch;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	scale (Lnet/minecraft/world/entity/LivingEntity;Lcom/mojang/blaze3d/vertex/PoseStack;F)V a
	scale (Lnet/minecraft/world/entity/monster/Witch;Lcom/mojang/blaze3d/vertex/PoseStack;F)V a
net/minecraft/client/renderer/entity/WitherBossRenderer ehd
	WITHER_INVULNERABLE_LOCATION a
	WITHER_LOCATION g
	getBlockLightLevel (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/core/BlockPos;)I a
	getBlockLightLevel (Lnet/minecraft/world/entity/boss/wither/WitherBoss;Lnet/minecraft/core/BlockPos;)I a
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/boss/wither/WitherBoss;)Lnet/minecraft/resources/ResourceLocation; a
	scale (Lnet/minecraft/world/entity/LivingEntity;Lcom/mojang/blaze3d/vertex/PoseStack;F)V a
	scale (Lnet/minecraft/world/entity/boss/wither/WitherBoss;Lcom/mojang/blaze3d/vertex/PoseStack;F)V a
net/minecraft/client/renderer/entity/WitherSkeletonRenderer ehe
	WITHER_SKELETON_LOCATION a
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/Mob;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/monster/AbstractSkeleton;)Lnet/minecraft/resources/ResourceLocation; a
	scale (Lnet/minecraft/world/entity/LivingEntity;Lcom/mojang/blaze3d/vertex/PoseStack;F)V a
	scale (Lnet/minecraft/world/entity/monster/AbstractSkeleton;Lcom/mojang/blaze3d/vertex/PoseStack;F)V a
net/minecraft/client/renderer/entity/WitherSkullRenderer ehf
	WITHER_INVULNERABLE_LOCATION a
	WITHER_LOCATION e
	model f
	getBlockLightLevel (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/core/BlockPos;)I a
	getBlockLightLevel (Lnet/minecraft/world/entity/projectile/WitherSkull;Lnet/minecraft/core/BlockPos;)I a
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/projectile/WitherSkull;)Lnet/minecraft/resources/ResourceLocation; a
	render (Lnet/minecraft/world/entity/Entity;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	render (Lnet/minecraft/world/entity/projectile/WitherSkull;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
net/minecraft/client/renderer/entity/WolfRenderer ehg
	WOLF_ANGRY_LOCATION h
	WOLF_LOCATION a
	WOLF_TAME_LOCATION g
	getBob (Lnet/minecraft/world/entity/LivingEntity;F)F a
	getBob (Lnet/minecraft/world/entity/animal/Wolf;F)F a
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/animal/Wolf;)Lnet/minecraft/resources/ResourceLocation; a
	render (Lnet/minecraft/world/entity/Entity;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	render (Lnet/minecraft/world/entity/LivingEntity;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	render (Lnet/minecraft/world/entity/Mob;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	render (Lnet/minecraft/world/entity/animal/Wolf;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
net/minecraft/client/renderer/entity/ZoglinRenderer ehh
	ZOGLIN_LOCATION a
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/monster/Zoglin;)Lnet/minecraft/resources/ResourceLocation; a
net/minecraft/client/renderer/entity/ZombieRenderer ehi
net/minecraft/client/renderer/entity/ZombieVillagerRenderer ehj
	ZOMBIE_VILLAGER_LOCATION a
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/Mob;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/monster/ZombieVillager;)Lnet/minecraft/resources/ResourceLocation; a
	isShaking (Lnet/minecraft/world/entity/LivingEntity;)Z a
	isShaking (Lnet/minecraft/world/entity/monster/ZombieVillager;)Z b
net/minecraft/client/renderer/entity/layers/ArrowLayer ehk
	arrow b
	dispatcher a
	numStuck (Lnet/minecraft/world/entity/LivingEntity;)I a
	renderStuckItem (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;ILnet/minecraft/world/entity/Entity;FFFF)V a
net/minecraft/client/renderer/entity/layers/BeeStingerLayer ehl
	BEE_STINGER_LOCATION a
	numStuck (Lnet/minecraft/world/entity/LivingEntity;)I a
	renderStuckItem (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;ILnet/minecraft/world/entity/Entity;FFFF)V a
	vertex (Lcom/mojang/blaze3d/vertex/VertexConsumer;Lcom/mojang/math/Matrix4f;Lcom/mojang/math/Matrix3f;FIFFI)V a
net/minecraft/client/renderer/entity/layers/CapeLayer ehm
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;ILnet/minecraft/client/player/AbstractClientPlayer;FFFFFF)V a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;ILnet/minecraft/world/entity/Entity;FFFFFF)V a
net/minecraft/client/renderer/entity/layers/CarriedBlockLayer ehn
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;ILnet/minecraft/world/entity/Entity;FFFFFF)V a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;ILnet/minecraft/world/entity/monster/EnderMan;FFFFFF)V a
net/minecraft/client/renderer/entity/layers/CatCollarLayer eho
	CAT_COLLAR_LOCATION a
	catModel b
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;ILnet/minecraft/world/entity/Entity;FFFFFF)V a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;ILnet/minecraft/world/entity/animal/Cat;FFFFFF)V a
net/minecraft/client/renderer/entity/layers/CreeperPowerLayer ehp
	POWER_LOCATION a
	model b
	getTextureLocation ()Lnet/minecraft/resources/ResourceLocation; a
	model ()Lnet/minecraft/client/model/EntityModel; b
	xOffset (F)F a
net/minecraft/client/renderer/entity/layers/CrossedArmsItemLayer ehq
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;ILnet/minecraft/world/entity/Entity;FFFFFF)V a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;ILnet/minecraft/world/entity/LivingEntity;FFFFFF)V a
net/minecraft/client/renderer/entity/layers/CustomHeadLayer ehr
	scaleX a
	scaleY b
	scaleZ c
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;ILnet/minecraft/world/entity/Entity;FFFFFF)V a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;ILnet/minecraft/world/entity/LivingEntity;FFFFFF)V a
net/minecraft/client/renderer/entity/layers/Deadmau5EarsLayer ehs
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;ILnet/minecraft/client/player/AbstractClientPlayer;FFFFFF)V a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;ILnet/minecraft/world/entity/Entity;FFFFFF)V a
net/minecraft/client/renderer/entity/layers/DolphinCarryingItemLayer eht
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;ILnet/minecraft/world/entity/Entity;FFFFFF)V a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;ILnet/minecraft/world/entity/animal/Dolphin;FFFFFF)V a
net/minecraft/client/renderer/entity/layers/DrownedOuterLayer ehu
	DROWNED_OUTER_LAYER_LOCATION a
	model b
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;ILnet/minecraft/world/entity/Entity;FFFFFF)V a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;ILnet/minecraft/world/entity/monster/Drowned;FFFFFF)V a
net/minecraft/client/renderer/entity/layers/ElytraLayer ehv
	WINGS_LOCATION a
	elytraModel b
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;ILnet/minecraft/world/entity/Entity;FFFFFF)V a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;ILnet/minecraft/world/entity/LivingEntity;FFFFFF)V a
net/minecraft/client/renderer/entity/layers/EnderEyesLayer ehw
	ENDERMAN_EYES a
	renderType ()Lnet/minecraft/client/renderer/RenderType; a
net/minecraft/client/renderer/entity/layers/EnergySwirlLayer ehx
	getTextureLocation ()Lnet/minecraft/resources/ResourceLocation; a
	model ()Lnet/minecraft/client/model/EntityModel; b
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;ILnet/minecraft/world/entity/Entity;FFFFFF)V a
	xOffset (F)F a
net/minecraft/client/renderer/entity/layers/EyesLayer ehy
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;ILnet/minecraft/world/entity/Entity;FFFFFF)V a
	renderType ()Lnet/minecraft/client/renderer/RenderType; a
net/minecraft/client/renderer/entity/layers/FoxHeldItemLayer ehz
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;ILnet/minecraft/world/entity/Entity;FFFFFF)V a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;ILnet/minecraft/world/entity/animal/Fox;FFFFFF)V a
net/minecraft/client/renderer/entity/layers/HorseArmorLayer eia
	model a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;ILnet/minecraft/world/entity/Entity;FFFFFF)V a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;ILnet/minecraft/world/entity/animal/horse/Horse;FFFFFF)V a
net/minecraft/client/renderer/entity/layers/HorseMarkingLayer eib
	LOCATION_BY_MARKINGS a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;ILnet/minecraft/world/entity/Entity;FFFFFF)V a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;ILnet/minecraft/world/entity/animal/horse/Horse;FFFFFF)V a
net/minecraft/client/renderer/entity/layers/HumanoidArmorLayer eic
	ARMOR_LOCATION_CACHE a
	innerModel b
	outerModel c
	getArmorLocation (Lnet/minecraft/world/item/ArmorItem;ZLjava/lang/String;)Lnet/minecraft/resources/ResourceLocation; a
	getArmorModel (Lnet/minecraft/world/entity/EquipmentSlot;)Lnet/minecraft/client/model/HumanoidModel; a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;ILnet/minecraft/world/entity/Entity;FFFFFF)V a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;ILnet/minecraft/world/entity/LivingEntity;FFFFFF)V a
	renderArmorPiece (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/entity/EquipmentSlot;ILnet/minecraft/client/model/HumanoidModel;)V a
	renderModel (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;ILnet/minecraft/world/item/ArmorItem;ZLnet/minecraft/client/model/HumanoidModel;ZFFFLjava/lang/String;)V a
	setPartVisibility (Lnet/minecraft/client/model/HumanoidModel;Lnet/minecraft/world/entity/EquipmentSlot;)V a
	usesInnerModel (Lnet/minecraft/world/entity/EquipmentSlot;)Z b
net/minecraft/client/renderer/entity/layers/IronGolemCrackinessLayer eid
	resourceLocations a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;ILnet/minecraft/world/entity/Entity;FFFFFF)V a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;ILnet/minecraft/world/entity/animal/IronGolem;FFFFFF)V a
net/minecraft/client/renderer/entity/layers/IronGolemFlowerLayer eie
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;ILnet/minecraft/world/entity/Entity;FFFFFF)V a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;ILnet/minecraft/world/entity/animal/IronGolem;FFFFFF)V a
net/minecraft/client/renderer/entity/layers/ItemInHandLayer eif
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;ILnet/minecraft/world/entity/Entity;FFFFFF)V a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;ILnet/minecraft/world/entity/LivingEntity;FFFFFF)V a
	renderArmWithItem (Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/client/renderer/block/model/ItemTransforms$TransformType;Lnet/minecraft/world/entity/HumanoidArm;Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
net/minecraft/client/renderer/entity/layers/LlamaDecorLayer eig
	TEXTURE_LOCATION a
	TRADER_LLAMA b
	model c
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;ILnet/minecraft/world/entity/Entity;FFFFFF)V a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;ILnet/minecraft/world/entity/animal/horse/Llama;FFFFFF)V a
net/minecraft/client/renderer/entity/layers/MushroomCowMushroomLayer eih
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;ILnet/minecraft/world/entity/Entity;FFFFFF)V a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;ILnet/minecraft/world/entity/animal/MushroomCow;FFFFFF)V a
net/minecraft/client/renderer/entity/layers/PandaHoldsItemLayer eii
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;ILnet/minecraft/world/entity/Entity;FFFFFF)V a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;ILnet/minecraft/world/entity/animal/Panda;FFFFFF)V a
net/minecraft/client/renderer/entity/layers/ParrotOnShoulderLayer eij
	model a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;ILnet/minecraft/world/entity/Entity;FFFFFF)V a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;ILnet/minecraft/world/entity/player/Player;FFFFFF)V a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;ILnet/minecraft/world/entity/player/Player;FFFFZ)V a
net/minecraft/client/renderer/entity/layers/PhantomEyesLayer eik
	PHANTOM_EYES a
	renderType ()Lnet/minecraft/client/renderer/RenderType; a
net/minecraft/client/renderer/entity/layers/RenderLayer eil
	renderer a
	coloredCutoutModelCopyLayerRender (Lnet/minecraft/client/model/EntityModel;Lnet/minecraft/client/model/EntityModel;Lnet/minecraft/resources/ResourceLocation;Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;ILnet/minecraft/world/entity/LivingEntity;FFFFFFFFF)V a
	getParentModel ()Lnet/minecraft/client/model/EntityModel; aC_
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;ILnet/minecraft/world/entity/Entity;FFFFFF)V a
	renderColoredCutoutModel (Lnet/minecraft/client/model/EntityModel;Lnet/minecraft/resources/ResourceLocation;Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;ILnet/minecraft/world/entity/LivingEntity;FFF)V a
net/minecraft/client/renderer/entity/layers/SaddleLayer eim
	model b
	textureLocation a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;ILnet/minecraft/world/entity/Entity;FFFFFF)V a
net/minecraft/client/renderer/entity/layers/SheepFurLayer ein
	SHEEP_FUR_LOCATION a
	model b
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;ILnet/minecraft/world/entity/Entity;FFFFFF)V a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;ILnet/minecraft/world/entity/animal/Sheep;FFFFFF)V a
net/minecraft/client/renderer/entity/layers/ShulkerHeadLayer eio
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;ILnet/minecraft/world/entity/Entity;FFFFFF)V a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;ILnet/minecraft/world/entity/monster/Shulker;FFFFFF)V a
net/minecraft/client/renderer/entity/layers/SlimeOuterLayer eip
	model a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;ILnet/minecraft/world/entity/Entity;FFFFFF)V a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;ILnet/minecraft/world/entity/LivingEntity;FFFFFF)V a
net/minecraft/client/renderer/entity/layers/SnowGolemHeadLayer eiq
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;ILnet/minecraft/world/entity/Entity;FFFFFF)V a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;ILnet/minecraft/world/entity/animal/SnowGolem;FFFFFF)V a
net/minecraft/client/renderer/entity/layers/SpiderEyesLayer eir
	SPIDER_EYES a
	renderType ()Lnet/minecraft/client/renderer/RenderType; a
net/minecraft/client/renderer/entity/layers/SpinAttackEffectLayer eis
	TEXTURE a
	box b
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;ILnet/minecraft/world/entity/Entity;FFFFFF)V a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;ILnet/minecraft/world/entity/LivingEntity;FFFFFF)V a
net/minecraft/client/renderer/entity/layers/StrayClothingLayer eit
	STRAY_CLOTHES_LOCATION a
	layerModel b
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;ILnet/minecraft/world/entity/Entity;FFFFFF)V a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;ILnet/minecraft/world/entity/Mob;FFFFFF)V a
net/minecraft/client/renderer/entity/layers/StuckInBodyLayer eiu
	numStuck (Lnet/minecraft/world/entity/LivingEntity;)I a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;ILnet/minecraft/world/entity/Entity;FFFFFF)V a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;ILnet/minecraft/world/entity/LivingEntity;FFFFFF)V a
	renderStuckItem (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;ILnet/minecraft/world/entity/Entity;FFFF)V a
net/minecraft/client/renderer/entity/layers/TropicalFishPatternLayer eiv
	modelA a
	modelB b
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;ILnet/minecraft/world/entity/Entity;FFFFFF)V a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;ILnet/minecraft/world/entity/animal/TropicalFish;FFFFFF)V a
net/minecraft/client/renderer/entity/layers/VillagerProfessionLayer eiw
	LEVEL_LOCATIONS a
	path e
	professionHatCache c
	resourceManager d
	typeHatCache b
	getHatData (Lit/unimi/dsi/fastutil/objects/Object2ObjectMap;Ljava/lang/String;Lnet/minecraft/core/DefaultedRegistry;Ljava/lang/Object;)Lnet/minecraft/client/resources/metadata/animation/VillagerMetaDataSection$Hat; a
	getResourceLocation (Ljava/lang/String;Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/resources/ResourceLocation; a
	onResourceManagerReload (Lnet/minecraft/server/packs/resources/ResourceManager;)V a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;ILnet/minecraft/world/entity/Entity;FFFFFF)V a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;ILnet/minecraft/world/entity/LivingEntity;FFFFFF)V a
net/minecraft/client/renderer/entity/layers/WitchItemLayer eix
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;ILnet/minecraft/world/entity/Entity;FFFFFF)V a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;ILnet/minecraft/world/entity/LivingEntity;FFFFFF)V a
net/minecraft/client/renderer/entity/layers/WitherArmorLayer eiy
	WITHER_ARMOR_LOCATION a
	model b
	getTextureLocation ()Lnet/minecraft/resources/ResourceLocation; a
	model ()Lnet/minecraft/client/model/EntityModel; b
	xOffset (F)F a
net/minecraft/client/renderer/entity/layers/WolfCollarLayer eiz
	WOLF_COLLAR_LOCATION a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;ILnet/minecraft/world/entity/Entity;FFFFFF)V a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;ILnet/minecraft/world/entity/animal/Wolf;FFFFFF)V a
net/minecraft/client/renderer/entity/player/PlayerRenderer ejc
	getArmPose (Lnet/minecraft/client/player/AbstractClientPlayer;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/client/model/HumanoidModel$ArmPose; a
	getRenderOffset (Lnet/minecraft/client/player/AbstractClientPlayer;F)Lnet/minecraft/world/phys/Vec3; a
	getRenderOffset (Lnet/minecraft/world/entity/Entity;F)Lnet/minecraft/world/phys/Vec3; a
	getTextureLocation (Lnet/minecraft/client/player/AbstractClientPlayer;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	render (Lnet/minecraft/client/player/AbstractClientPlayer;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	render (Lnet/minecraft/world/entity/Entity;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	render (Lnet/minecraft/world/entity/LivingEntity;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	renderHand (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;ILnet/minecraft/client/player/AbstractClientPlayer;Lnet/minecraft/client/model/geom/ModelPart;Lnet/minecraft/client/model/geom/ModelPart;)V a
	renderLeftHand (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;ILnet/minecraft/client/player/AbstractClientPlayer;)V b
	renderNameTag (Lnet/minecraft/client/player/AbstractClientPlayer;Lnet/minecraft/network/chat/Component;Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	renderNameTag (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/network/chat/Component;Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	renderRightHand (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;ILnet/minecraft/client/player/AbstractClientPlayer;)V a
	scale (Lnet/minecraft/client/player/AbstractClientPlayer;Lcom/mojang/blaze3d/vertex/PoseStack;F)V a
	scale (Lnet/minecraft/world/entity/LivingEntity;Lcom/mojang/blaze3d/vertex/PoseStack;F)V a
	setModelProperties (Lnet/minecraft/client/player/AbstractClientPlayer;)V b
	setupRotations (Lnet/minecraft/client/player/AbstractClientPlayer;Lcom/mojang/blaze3d/vertex/PoseStack;FFF)V a
	setupRotations (Lnet/minecraft/world/entity/LivingEntity;Lcom/mojang/blaze3d/vertex/PoseStack;FFF)V a
net/minecraft/client/renderer/item/ItemProperties eje
	DAMAGE c
	DAMAGED b
	GENERIC_PROPERTIES a
	PROPERTIES f
	PROPERTY_DAMAGE e
	PROPERTY_DAMAGED d
	getProperty (Lnet/minecraft/world/item/Item;Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/client/renderer/item/ItemPropertyFunction; a
	register (Lnet/minecraft/world/item/Item;Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/client/renderer/item/ItemPropertyFunction;)V a
	registerGeneric (Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/client/renderer/item/ItemPropertyFunction;)Lnet/minecraft/client/renderer/item/ItemPropertyFunction; a
net/minecraft/client/renderer/item/ItemProperties$CompassWobble eje$a
	deltaRotation b
	lastUpdateTick c
	rotation a
	shouldUpdate (J)Z a
	update (JD)V a
net/minecraft/client/renderer/item/ItemPropertyFunction ejf
net/minecraft/client/renderer/texture/AbstractTexture eji
	blur b
	id a
	mipmap c
	bind ()V d
	getId ()I b
	load (Lnet/minecraft/server/packs/resources/ResourceManager;)V a
	releaseId ()V c
	reset (Lnet/minecraft/client/renderer/texture/TextureManager;Lnet/minecraft/server/packs/resources/ResourceManager;Lnet/minecraft/resources/ResourceLocation;Ljava/util/concurrent/Executor;)V a
	setFilter (ZZ)V a
net/minecraft/client/renderer/texture/AtlasSet ejj
	atlases a
	getAtlas (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/client/renderer/texture/TextureAtlas; a
	getSprite (Lnet/minecraft/client/resources/model/Material;)Lnet/minecraft/client/renderer/texture/TextureAtlasSprite; a
net/minecraft/client/renderer/texture/DynamicTexture ejk
	LOGGER d
	pixels e
	getPixels ()Lcom/mojang/blaze3d/platform/NativeImage; e
	load (Lnet/minecraft/server/packs/resources/ResourceManager;)V a
	setPixels (Lcom/mojang/blaze3d/platform/NativeImage;)V a
	upload ()V a
net/minecraft/client/renderer/texture/HttpTexture ejl
	LOGGER e
	file f
	future j
	onDownloaded i
	processLegacySkin h
	uploaded k
	urlString g
	doNotchTransparencyHack (Lcom/mojang/blaze3d/platform/NativeImage;IIII)V a
	load (Ljava/io/InputStream;)Lcom/mojang/blaze3d/platform/NativeImage; a
	load (Lnet/minecraft/server/packs/resources/ResourceManager;)V a
	loadCallback (Lcom/mojang/blaze3d/platform/NativeImage;)V a
	processLegacySkin (Lcom/mojang/blaze3d/platform/NativeImage;)Lcom/mojang/blaze3d/platform/NativeImage; c
	setNoAlpha (Lcom/mojang/blaze3d/platform/NativeImage;IIII)V b
	upload (Lcom/mojang/blaze3d/platform/NativeImage;)V b
net/minecraft/client/renderer/texture/MipmapGenerator ejm
	POW22 a
	alphaBlend (IIIIZ)I a
	gammaBlend (IIIII)I a
	generateMipLevels (Lcom/mojang/blaze3d/platform/NativeImage;I)[Lcom/mojang/blaze3d/platform/NativeImage; a
	getPow22 (I)F a
net/minecraft/client/renderer/texture/MissingTextureAtlasSprite ejn
	INFO e
	MISSING_IMAGE_DATA d
	MISSING_TEXTURE_LOCATION b
	missingTexture c
	getLocation ()Lnet/minecraft/resources/ResourceLocation; a
	getTexture ()Lnet/minecraft/client/renderer/texture/DynamicTexture; c
	info ()Lnet/minecraft/client/renderer/texture/TextureAtlasSprite$Info; b
	newInstance (Lnet/minecraft/client/renderer/texture/TextureAtlas;IIIII)Lnet/minecraft/client/renderer/texture/MissingTextureAtlasSprite; a
net/minecraft/client/renderer/texture/OverlayTexture ejo
	NO_OVERLAY a
	texture b
	pack (FZ)I a
	pack (II)I a
	setupOverlayColor ()V a
	teardownOverlayColor ()V b
	u (F)I a
	v (Z)I a
net/minecraft/client/renderer/texture/PreloadedTexture ejp
	future e
	executor (Ljava/util/concurrent/Executor;)Ljava/util/concurrent/Executor; a
	getFuture ()Ljava/util/concurrent/CompletableFuture; a
	getTextureImage (Lnet/minecraft/server/packs/resources/ResourceManager;)Lnet/minecraft/client/renderer/texture/SimpleTexture$TextureImage; b
	reset (Lnet/minecraft/client/renderer/texture/TextureManager;Lnet/minecraft/server/packs/resources/ResourceManager;Lnet/minecraft/resources/ResourceLocation;Ljava/util/concurrent/Executor;)V a
net/minecraft/client/renderer/texture/SimpleTexture ejq
	LOGGER e
	location d
	doLoad (Lcom/mojang/blaze3d/platform/NativeImage;ZZ)V a
	getTextureImage (Lnet/minecraft/server/packs/resources/ResourceManager;)Lnet/minecraft/client/renderer/texture/SimpleTexture$TextureImage; b
	load (Lnet/minecraft/server/packs/resources/ResourceManager;)V a
net/minecraft/client/renderer/texture/SimpleTexture$TextureImage ejq$a
	exception c
	image b
	metadata a
	getImage ()Lcom/mojang/blaze3d/platform/NativeImage; b
	getTextureMetadata ()Lnet/minecraft/client/resources/metadata/texture/TextureMetadataSection; a
	load (Lnet/minecraft/server/packs/resources/ResourceManager;Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/client/renderer/texture/SimpleTexture$TextureImage; a
	throwIfError ()V c
net/minecraft/client/renderer/texture/Stitcher ejr
	HOLDER_COMPARATOR a
	maxHeight h
	maxWidth g
	mipLevel b
	storage d
	storageX e
	storageY f
	texturesToBeStitched c
	addToStorage (Lnet/minecraft/client/renderer/texture/Stitcher$Holder;)Z a
	expand (Lnet/minecraft/client/renderer/texture/Stitcher$Holder;)Z b
	gatherSprites (Lnet/minecraft/client/renderer/texture/Stitcher$SpriteLoader;)V a
	getHeight ()I b
	getWidth ()I a
	registerSprite (Lnet/minecraft/client/renderer/texture/TextureAtlasSprite$Info;)V a
	smallestFittingMinTexel (II)I b
	stitch ()V c
net/minecraft/client/renderer/texture/Stitcher$Holder ejr$a
	height c
	spriteInfo a
	width b
net/minecraft/client/renderer/texture/Stitcher$Region ejr$b
	height d
	holder f
	originX a
	originY b
	subSlots e
	width c
	add (Lnet/minecraft/client/renderer/texture/Stitcher$Holder;)Z a
	getHolder ()Lnet/minecraft/client/renderer/texture/Stitcher$Holder; a
	getX ()I b
	getY ()I c
	walk (Ljava/util/function/Consumer;)V a
net/minecraft/client/renderer/texture/Stitcher$SpriteLoader ejr$c
net/minecraft/client/renderer/texture/StitcherException ejs
	allSprites a
	getAllSprites ()Ljava/util/Collection; a
net/minecraft/client/renderer/texture/TextureAtlas ejt
	LOCATION_BLOCKS d
	LOCATION_PARTICLES e
	LOGGER f
	animatedTextures g
	location j
	maxSupportedTextureSize k
	sprites h
	texturesByName i
	clearTextureData ()V f
	cycleAnimationFrames ()V a
	getBasicSpriteInfos (Lnet/minecraft/server/packs/resources/ResourceManager;Ljava/util/Set;)Ljava/util/Collection; a
	getLoadedSprites (Lnet/minecraft/server/packs/resources/ResourceManager;Lnet/minecraft/client/renderer/texture/Stitcher;I)Ljava/util/List; a
	getResourceLocation (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/resources/ResourceLocation; b
	getSprite (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/client/renderer/texture/TextureAtlasSprite; a
	getTexture (Ljava/lang/String;)Lnet/minecraft/client/renderer/texture/TextureAtlasSprite; a
	load (Lnet/minecraft/server/packs/resources/ResourceManager;)V a
	load (Lnet/minecraft/server/packs/resources/ResourceManager;Lnet/minecraft/client/renderer/texture/TextureAtlasSprite$Info;IIIII)Lnet/minecraft/client/renderer/texture/TextureAtlasSprite; a
	location ()Lnet/minecraft/resources/ResourceLocation; g
	prepareToStitch (Lnet/minecraft/server/packs/resources/ResourceManager;Ljava/util/stream/Stream;Lnet/minecraft/util/profiling/ProfilerFiller;I)Lnet/minecraft/client/renderer/texture/TextureAtlas$Preparations; a
	register (Ljava/util/Set;Lnet/minecraft/resources/ResourceLocation;)V a
	reload (Lnet/minecraft/client/renderer/texture/TextureAtlas$Preparations;)V a
	tick ()V e
	updateFilter (Lnet/minecraft/client/renderer/texture/TextureAtlas$Preparations;)V b
net/minecraft/client/renderer/texture/TextureAtlas$Preparations ejt$a
	height c
	mipLevel d
	regions e
	sprites a
	width b
net/minecraft/client/renderer/texture/TextureAtlasSprite eju
	atlas b
	frame n
	framesX e
	framesY f
	info c
	interpolationData g
	mainImage a
	metadata d
	subFrame o
	u0 j
	u1 k
	v0 l
	v1 m
	x h
	y i
	atlas ()Lnet/minecraft/client/renderer/texture/TextureAtlas; m
	atlasSize ()F a
	cycleFrames ()V q
	fixupMipTransparency ([[I)V a
	getFrameCount ()I n
	getHeight ()I g
	getName ()Lnet/minecraft/resources/ResourceLocation; l
	getU (D)F a
	getU0 ()F h
	getU1 ()F i
	getUOffset (F)F a
	getV (D)F b
	getV0 ()F j
	getV1 ()F k
	getVOffset (F)F b
	getWidth ()I f
	getX ()I d
	getY ()I e
	isAnimation ()Z r
	isTransparent (III)Z a
	upload (I)V a
	upload (II[Lcom/mojang/blaze3d/platform/NativeImage;)V a
	uploadFirstFrame ()V o
	uvShrinkRatio ()F p
	wrap (Lcom/mojang/blaze3d/vertex/VertexConsumer;)Lcom/mojang/blaze3d/vertex/VertexConsumer; a
net/minecraft/client/renderer/texture/TextureAtlasSprite$Info eju$a
	height c
	metadata d
	name a
	width b
	height ()I c
	name ()Lnet/minecraft/resources/ResourceLocation; a
	width ()I b
net/minecraft/client/renderer/texture/TextureAtlasSprite$InterpolationData eju$b
	activeFrame b
	getPixel (IIII)I a
	mix (DII)I a
	uploadInterpolatedFrame ()V a
net/minecraft/client/renderer/texture/TextureManager ejv
	INTENTIONAL_MISSING_TEXTURE a
	LOGGER b
	byPath c
	prefixRegister e
	resourceManager f
	tickableTextures d
	_bind (Lnet/minecraft/resources/ResourceLocation;)V d
	bind (Lnet/minecraft/resources/ResourceLocation;)V a
	execute (Ljava/lang/Runnable;)V a
	getTexture (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/client/renderer/texture/AbstractTexture; b
	loadTexture (Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/client/renderer/texture/AbstractTexture;)Lnet/minecraft/client/renderer/texture/AbstractTexture; c
	preload (Lnet/minecraft/resources/ResourceLocation;Ljava/util/concurrent/Executor;)Ljava/util/concurrent/CompletableFuture; a
	register (Ljava/lang/String;Lnet/minecraft/client/renderer/texture/DynamicTexture;)Lnet/minecraft/resources/ResourceLocation; a
	register (Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/client/renderer/texture/AbstractTexture;)V a
	release (Lnet/minecraft/resources/ResourceLocation;)V c
	reload (Lnet/minecraft/server/packs/resources/PreparableReloadListener$PreparationBarrier;Lnet/minecraft/server/packs/resources/ResourceManager;Lnet/minecraft/util/profiling/ProfilerFiller;Lnet/minecraft/util/profiling/ProfilerFiller;Ljava/util/concurrent/Executor;Ljava/util/concurrent/Executor;)Ljava/util/concurrent/CompletableFuture; a
	safeClose (Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/client/renderer/texture/AbstractTexture;)V b
	tick ()V e
net/minecraft/client/renderer/texture/Tickable ejw
	tick ()V e
net/minecraft/client/resources/AssetIndex ejy
	LOGGER a
	namespacedFiles c
	rootFiles b
	getFile (Lnet/minecraft/resources/ResourceLocation;)Ljava/io/File; a
	getFiles (Ljava/lang/String;Ljava/lang/String;ILjava/util/function/Predicate;)Ljava/util/Collection; a
	getRootFile (Ljava/lang/String;)Ljava/io/File; a
net/minecraft/client/resources/ClientPackSource ejz
	LOGGER a
	SHA1 b
	assetIndex f
	currentDownload g
	downloadLock e
	serverPack h
	serverPackDir d
	vanillaPack c
	checkHash (Ljava/lang/String;Ljava/io/File;)Z a
	clearOldDownloads ()V d
	clearServerPack ()V b
	createProgrammerArtDirPack (Ljava/io/File;)Lnet/minecraft/server/packs/FolderPackResources; b
	createProgrammerArtPack (Lnet/minecraft/server/packs/repository/Pack$PackConstructor;)Lnet/minecraft/server/packs/repository/Pack; a
	createProgrammerArtPack (Lnet/minecraft/server/packs/repository/Pack$PackConstructor;Ljava/util/function/Supplier;)Lnet/minecraft/server/packs/repository/Pack; a
	createProgrammerArtZipPack (Ljava/io/File;)Lnet/minecraft/server/packs/PackResources; c
	deleteQuietly (Ljava/io/File;)V a
	downloadAndSelectResourcePack (Ljava/lang/String;Ljava/lang/String;)Ljava/util/concurrent/CompletableFuture; a
	getDownloadHeaders ()Ljava/util/Map; c
	getVanillaPack ()Lnet/minecraft/server/packs/VanillaPackResources; a
	loadPacks (Ljava/util/function/Consumer;Lnet/minecraft/server/packs/repository/Pack$PackConstructor;)V a
	setServerPack (Ljava/io/File;Lnet/minecraft/server/packs/repository/PackSource;)Ljava/util/concurrent/CompletableFuture; a
net/minecraft/client/resources/DefaultClientPackResources eka
	assetIndex d
	getResourceAsStream (Ljava/lang/String;)Ljava/io/InputStream; a
	getResourceAsStream (Lnet/minecraft/server/packs/PackType;Lnet/minecraft/resources/ResourceLocation;)Ljava/io/InputStream; c
	getResources (Lnet/minecraft/server/packs/PackType;Ljava/lang/String;Ljava/lang/String;ILjava/util/function/Predicate;)Ljava/util/Collection; a
	hasResource (Lnet/minecraft/server/packs/PackType;Lnet/minecraft/resources/ResourceLocation;)Z b
net/minecraft/client/resources/DefaultPlayerSkin ekb
	ALEX_SKIN_LOCATION b
	STEVE_SKIN_LOCATION a
	getDefaultSkin ()Lnet/minecraft/resources/ResourceLocation; a
	getDefaultSkin (Ljava/util/UUID;)Lnet/minecraft/resources/ResourceLocation; a
	getSkinModelName (Ljava/util/UUID;)Ljava/lang/String; b
	isAlexDefault (Ljava/util/UUID;)Z c
net/minecraft/client/resources/DirectAssetIndex ekc
	assetsDirectory b
	getFile (Lnet/minecraft/resources/ResourceLocation;)Ljava/io/File; a
	getFiles (Ljava/lang/String;Ljava/lang/String;ILjava/util/function/Predicate;)Ljava/util/Collection; a
	getRootFile (Ljava/lang/String;)Ljava/io/File; a
net/minecraft/client/resources/FoliageColorReloadListener ekd
	LOCATION a
	apply (Ljava/lang/Object;Lnet/minecraft/server/packs/resources/ResourceManager;Lnet/minecraft/util/profiling/ProfilerFiller;)V a
	apply ([ILnet/minecraft/server/packs/resources/ResourceManager;Lnet/minecraft/util/profiling/ProfilerFiller;)V a
	prepare (Lnet/minecraft/server/packs/resources/ResourceManager;Lnet/minecraft/util/profiling/ProfilerFiller;)Ljava/lang/Object; b
	prepare (Lnet/minecraft/server/packs/resources/ResourceManager;Lnet/minecraft/util/profiling/ProfilerFiller;)[I a
net/minecraft/client/resources/GrassColorReloadListener eke
	LOCATION a
	apply (Ljava/lang/Object;Lnet/minecraft/server/packs/resources/ResourceManager;Lnet/minecraft/util/profiling/ProfilerFiller;)V a
	apply ([ILnet/minecraft/server/packs/resources/ResourceManager;Lnet/minecraft/util/profiling/ProfilerFiller;)V a
	prepare (Lnet/minecraft/server/packs/resources/ResourceManager;Lnet/minecraft/util/profiling/ProfilerFiller;)Ljava/lang/Object; b
	prepare (Lnet/minecraft/server/packs/resources/ResourceManager;Lnet/minecraft/util/profiling/ProfilerFiller;)[I a
net/minecraft/client/resources/LegacyPackResourcesAdapter ekf
	V3 a
	patches c
	source b
	getMetadataSection (Lnet/minecraft/server/packs/metadata/MetadataSectionSerializer;)Ljava/lang/Object; a
	getName ()Ljava/lang/String; a
	getNamespaces (Lnet/minecraft/server/packs/PackType;)Ljava/util/Set; a
	getResource (Lnet/minecraft/server/packs/PackType;Lnet/minecraft/resources/ResourceLocation;)Ljava/io/InputStream; a
	getResources (Lnet/minecraft/server/packs/PackType;Ljava/lang/String;Ljava/lang/String;ILjava/util/function/Predicate;)Ljava/util/Collection; a
	getRootResource (Ljava/lang/String;)Ljava/io/InputStream; b
	hasResource (Lnet/minecraft/server/packs/PackType;Lnet/minecraft/resources/ResourceLocation;)Z b
	map (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/resources/ResourceLocation; b
	toMetaLocation (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/resources/ResourceLocation; a
net/minecraft/client/resources/LegacyStuffWrapper ekg
	getPixels (Lnet/minecraft/server/packs/resources/ResourceManager;Lnet/minecraft/resources/ResourceLocation;)[I a
net/minecraft/client/resources/MobEffectTextureManager ekh
	get (Lnet/minecraft/world/effect/MobEffect;)Lnet/minecraft/client/renderer/texture/TextureAtlasSprite; a
	getResourcesToLoad ()Ljava/util/stream/Stream; a
net/minecraft/client/resources/PackResourcesAdapterV4 eki
	BANNERS g
	BANNER_BASE b
	CHESTS d
	OLD_IRON_GOLEM_LOCATION c
	PATTERNS e
	SHIELDS f
	SHIELD_BASE a
	pack h
	copyRect (Lcom/mojang/blaze3d/platform/NativeImage;Lcom/mojang/blaze3d/platform/NativeImage;IIIIIIIZZ)V a
	fixConduitEyeTexture (Ljava/io/InputStream;)Ljava/io/InputStream; a
	fixLeftChest (Ljava/io/InputStream;)Ljava/io/InputStream; b
	fixPattern (Ljava/io/InputStream;Ljava/io/InputStream;IIIII)Ljava/io/InputStream; a
	fixRightChest (Ljava/io/InputStream;)Ljava/io/InputStream; c
	fixSingleChest (Ljava/io/InputStream;)Ljava/io/InputStream; d
	getMetadataSection (Lnet/minecraft/server/packs/metadata/MetadataSectionSerializer;)Ljava/lang/Object; a
	getName ()Ljava/lang/String; a
	getNamespaces (Lnet/minecraft/server/packs/PackType;)Ljava/util/Set; a
	getResource (Lnet/minecraft/server/packs/PackType;Lnet/minecraft/resources/ResourceLocation;)Ljava/io/InputStream; a
	getResources (Lnet/minecraft/server/packs/PackType;Ljava/lang/String;Ljava/lang/String;ILjava/util/function/Predicate;)Ljava/util/Collection; a
	getRootResource (Ljava/lang/String;)Ljava/io/InputStream; b
	hasResource (Lnet/minecraft/server/packs/PackType;Lnet/minecraft/resources/ResourceLocation;)Z b
net/minecraft/client/resources/PaintingTextureManager ekj
	BACK_SPRITE_LOCATION a
	get (Lnet/minecraft/world/entity/decoration/Motive;)Lnet/minecraft/client/renderer/texture/TextureAtlasSprite; a
	getBackSprite ()Lnet/minecraft/client/renderer/texture/TextureAtlasSprite; b
	getResourcesToLoad ()Ljava/util/stream/Stream; a
net/minecraft/client/resources/SkinManager ekk
	insecureSkinCache d
	sessionService c
	skinsDirectory b
	textureManager a
	getInsecureSkinInformation (Lcom/mojang/authlib/GameProfile;)Ljava/util/Map; a
	registerSkins (Lcom/mojang/authlib/GameProfile;Lnet/minecraft/client/resources/SkinManager$SkinTextureCallback;Z)V a
	registerTexture (Lcom/mojang/authlib/minecraft/MinecraftProfileTexture;Lcom/mojang/authlib/minecraft/MinecraftProfileTexture$Type;)Lnet/minecraft/resources/ResourceLocation; a
	registerTexture (Lcom/mojang/authlib/minecraft/MinecraftProfileTexture;Lcom/mojang/authlib/minecraft/MinecraftProfileTexture$Type;Lnet/minecraft/client/resources/SkinManager$SkinTextureCallback;)Lnet/minecraft/resources/ResourceLocation; a
net/minecraft/client/resources/SkinManager$SkinTextureCallback ekk$a
net/minecraft/client/resources/SplashManager ekl
	RANDOM b
	SPLASHES_LOCATION a
	splashes c
	user d
	apply (Ljava/lang/Object;Lnet/minecraft/server/packs/resources/ResourceManager;Lnet/minecraft/util/profiling/ProfilerFiller;)V a
	apply (Ljava/util/List;Lnet/minecraft/server/packs/resources/ResourceManager;Lnet/minecraft/util/profiling/ProfilerFiller;)V a
	getSplash ()Ljava/lang/String; a
	prepare (Lnet/minecraft/server/packs/resources/ResourceManager;Lnet/minecraft/util/profiling/ProfilerFiller;)Ljava/lang/Object; b
	prepare (Lnet/minecraft/server/packs/resources/ResourceManager;Lnet/minecraft/util/profiling/ProfilerFiller;)Ljava/util/List; a
net/minecraft/client/resources/TextureAtlasHolder ekm
	prefix b
	textureAtlas a
	apply (Ljava/lang/Object;Lnet/minecraft/server/packs/resources/ResourceManager;Lnet/minecraft/util/profiling/ProfilerFiller;)V a
	apply (Lnet/minecraft/client/renderer/texture/TextureAtlas$Preparations;Lnet/minecraft/server/packs/resources/ResourceManager;Lnet/minecraft/util/profiling/ProfilerFiller;)V a
	getResourcesToLoad ()Ljava/util/stream/Stream; a
	getSprite (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/client/renderer/texture/TextureAtlasSprite; a
	prepare (Lnet/minecraft/server/packs/resources/ResourceManager;Lnet/minecraft/util/profiling/ProfilerFiller;)Ljava/lang/Object; b
	prepare (Lnet/minecraft/server/packs/resources/ResourceManager;Lnet/minecraft/util/profiling/ProfilerFiller;)Lnet/minecraft/client/renderer/texture/TextureAtlas$Preparations; a
	resolveLocation (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/resources/ResourceLocation; b
net/minecraft/client/resources/language/ClientLanguage ekn
	LOGGER a
	defaultRightToLeft c
	storage b
	appendFrom (Ljava/util/List;Ljava/util/Map;)V a
	getOrDefault (Ljava/lang/String;)Ljava/lang/String; a
	getVisualOrder (Lnet/minecraft/network/chat/FormattedText;)Lnet/minecraft/util/FormattedCharSequence; a
	has (Ljava/lang/String;)Z b
	isDefaultRightToLeft ()Z b
	loadFrom (Lnet/minecraft/server/packs/resources/ResourceManager;Ljava/util/List;)Lnet/minecraft/client/resources/language/ClientLanguage; a
net/minecraft/client/resources/language/FormattedBidiReorder eko
	reorder (Lnet/minecraft/network/chat/FormattedText;Z)Lnet/minecraft/util/FormattedCharSequence; a
	shape (Ljava/lang/String;)Ljava/lang/String; a
net/minecraft/client/resources/language/I18n ekp
	language a
	exists (Ljava/lang/String;)Z a
	get (Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String; a
	setLanguage (Lnet/minecraft/locale/Language;)V a
net/minecraft/client/resources/language/LanguageInfo ekq
	bidirectional d
	code a
	name c
	region b
	compareTo (Lnet/minecraft/client/resources/language/LanguageInfo;)I a
	isBidirectional ()Z a
net/minecraft/client/resources/language/LanguageManager ekr
	DEFAULT_LANGUAGE b
	LOGGER a
	currentCode d
	currentLanguage e
	languages c
	extractLanguages (Ljava/util/stream/Stream;)Ljava/util/Map; a
	getLanguage (Ljava/lang/String;)Lnet/minecraft/client/resources/language/LanguageInfo; a
	getLanguages ()Ljava/util/SortedSet; d
	getSelected ()Lnet/minecraft/client/resources/language/LanguageInfo; b
	isBidirectional ()Z a
	onResourceManagerReload (Lnet/minecraft/server/packs/resources/ResourceManager;)V a
	setSelected (Lnet/minecraft/client/resources/language/LanguageInfo;)V a
net/minecraft/client/resources/metadata/animation/AnimationFrame ekt
	index a
	time b
	getIndex ()I c
	getTime ()I b
	isTimeUnknown ()Z a
net/minecraft/client/resources/metadata/animation/AnimationMetadataSection eku
	EMPTY b
	SERIALIZER a
	defaultFrameTime f
	frameHeight e
	frameWidth d
	frames c
	interpolatedFrames g
	calculateFrameSize (II)Lcom/mojang/datafixers/util/Pair; c
	getDefaultFrameTime ()I b
	getFrame (I)Lnet/minecraft/client/resources/metadata/animation/AnimationFrame; f
	getFrameCount ()I a
	getFrameHeight (I)I a
	getFrameIndex (I)I e
	getFrameSize (II)Lcom/mojang/datafixers/util/Pair; a
	getFrameTime (I)I c
	getFrameWidth (I)I b
	getUniqueFrameIndices ()Ljava/util/Set; d
	hasCustomFrameTime (I)Z d
	isDivisionInteger (II)Z b
	isInterpolatedFrames ()Z c
net/minecraft/client/resources/metadata/animation/AnimationMetadataSectionSerializer ekv
	fromJson (Lcom/google/gson/JsonObject;)Ljava/lang/Object; a
	fromJson (Lcom/google/gson/JsonObject;)Lnet/minecraft/client/resources/metadata/animation/AnimationMetadataSection; b
	getFrame (ILcom/google/gson/JsonElement;)Lnet/minecraft/client/resources/metadata/animation/AnimationFrame; a
	getMetadataSectionName ()Ljava/lang/String; a
net/minecraft/client/resources/metadata/animation/VillagerMetaDataSection ekw
	SERIALIZER a
	hat b
	getHat ()Lnet/minecraft/client/resources/metadata/animation/VillagerMetaDataSection$Hat; a
net/minecraft/client/resources/metadata/animation/VillagerMetaDataSection$Hat ekw$a
	$VALUES f
	BY_NAME d
	FULL c
	NONE a
	PARTIAL b
	name e
	getByName (Ljava/lang/String;)Lnet/minecraft/client/resources/metadata/animation/VillagerMetaDataSection$Hat; a
	getName ()Ljava/lang/String; a
net/minecraft/client/resources/metadata/animation/VillagerMetadataSectionSerializer ekx
	fromJson (Lcom/google/gson/JsonObject;)Ljava/lang/Object; a
	fromJson (Lcom/google/gson/JsonObject;)Lnet/minecraft/client/resources/metadata/animation/VillagerMetaDataSection; b
	getMetadataSectionName ()Ljava/lang/String; a
net/minecraft/client/resources/metadata/language/LanguageMetadataSection ekz
	SERIALIZER a
	languages b
	getLanguages ()Ljava/util/Collection; a
net/minecraft/client/resources/metadata/language/LanguageMetadataSectionSerializer ela
	fromJson (Lcom/google/gson/JsonObject;)Ljava/lang/Object; a
	fromJson (Lcom/google/gson/JsonObject;)Lnet/minecraft/client/resources/metadata/language/LanguageMetadataSection; b
	getMetadataSectionName ()Ljava/lang/String; a
net/minecraft/client/resources/metadata/texture/TextureMetadataSection eld
	SERIALIZER a
	blur b
	clamp c
	isBlur ()Z a
	isClamp ()Z b
net/minecraft/client/resources/metadata/texture/TextureMetadataSectionSerializer ele
	fromJson (Lcom/google/gson/JsonObject;)Ljava/lang/Object; a
	fromJson (Lcom/google/gson/JsonObject;)Lnet/minecraft/client/resources/metadata/texture/TextureMetadataSection; b
	getMetadataSectionName ()Ljava/lang/String; a
net/minecraft/client/resources/model/BakedModel elg
	getOverrides ()Lnet/minecraft/client/renderer/block/model/ItemOverrides; g
	getParticleIcon ()Lnet/minecraft/client/renderer/texture/TextureAtlasSprite; e
	getQuads (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Ljava/util/Random;)Ljava/util/List; a
	getTransforms ()Lnet/minecraft/client/renderer/block/model/ItemTransforms; f
	isCustomRenderer ()Z d
	isGui3d ()Z b
	useAmbientOcclusion ()Z a
	usesBlockLight ()Z c
net/minecraft/client/resources/model/BlockModelRotation elh
	$VALUES u
	BY_INDEX q
	X0_Y0 a
	X0_Y180 c
	X0_Y270 d
	X0_Y90 b
	X180_Y0 i
	X180_Y180 k
	X180_Y270 l
	X180_Y90 j
	X270_Y0 m
	X270_Y180 o
	X270_Y270 p
	X270_Y90 n
	X90_Y0 e
	X90_Y180 g
	X90_Y270 h
	X90_Y90 f
	actualRotation s
	index t
	transformation r
	actualRotation ()Lcom/mojang/math/OctahedralGroup; a
	by (II)Lnet/minecraft/client/resources/model/BlockModelRotation; a
	getIndex (II)I b
	getRotation ()Lcom/mojang/math/Transformation; b
net/minecraft/client/resources/model/BuiltInModel eli
	itemTransforms a
	overrides b
	particleTexture c
	usesBlockLight d
	getOverrides ()Lnet/minecraft/client/renderer/block/model/ItemOverrides; g
	getParticleIcon ()Lnet/minecraft/client/renderer/texture/TextureAtlasSprite; e
	getQuads (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Ljava/util/Random;)Ljava/util/List; a
	getTransforms ()Lnet/minecraft/client/renderer/block/model/ItemTransforms; f
	isCustomRenderer ()Z d
	isGui3d ()Z b
	useAmbientOcclusion ()Z a
	usesBlockLight ()Z c
net/minecraft/client/resources/model/Material elj
	atlasLocation a
	renderType c
	texture b
	atlasLocation ()Lnet/minecraft/resources/ResourceLocation; a
	buffer (Lnet/minecraft/client/renderer/MultiBufferSource;Ljava/util/function/Function;)Lcom/mojang/blaze3d/vertex/VertexConsumer; a
	buffer (Lnet/minecraft/client/renderer/MultiBufferSource;Ljava/util/function/Function;Z)Lcom/mojang/blaze3d/vertex/VertexConsumer; a
	renderType (Ljava/util/function/Function;)Lnet/minecraft/client/renderer/RenderType; a
	sprite ()Lnet/minecraft/client/renderer/texture/TextureAtlasSprite; c
	texture ()Lnet/minecraft/resources/ResourceLocation; b
net/minecraft/client/resources/model/ModelBakery elk
	BANNER_BASE f
	BLOCK_ENTITY_MARKER o
	BREAKING_LOCATIONS j
	BUILTIN_MODELS s
	COMMA_SPLITTER t
	DESTROY_STAGES i
	DESTROY_TYPES k
	EQUAL_SPLITTER u
	FIRE_0 a
	FIRE_1 b
	GENERATION_MARKER n
	ITEM_FRAME_FAKE_DEFINITION v
	ITEM_MODEL_GENERATOR w
	LAVA_FLOW c
	LOGGER q
	MISSING_MODEL_LOCATION l
	MISSING_MODEL_LOCATION_STRING r
	MISSING_MODEL_MESH m
	NO_PATTERN_SHIELD h
	SHIELD_BASE g
	STATIC_DEFINITIONS x
	UNREFERENCED_TEXTURES p
	WATER_FLOW d
	WATER_OVERLAY e
	atlasPreparations H
	atlasSet z
	bakedCache E
	bakedTopLevelModels G
	blockColors A
	context C
	loadingStack B
	modelGroups J
	nextModelGroup I
	resourceManager y
	topLevelModels F
	unbakedCache D
	bake (Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/client/resources/model/ModelState;)Lnet/minecraft/client/resources/model/BakedModel; a
	cacheAndQueueDependencies (Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/client/resources/model/UnbakedModel;)V a
	getBakedTopLevelModels ()Ljava/util/Map; a
	getModel (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/client/resources/model/UnbakedModel; a
	getModelGroups ()Lit/unimi/dsi/fastutil/objects/Object2IntMap; b
	getValueHelper (Lnet/minecraft/world/level/block/state/properties/Property;Ljava/lang/String;)Ljava/lang/Comparable; a
	loadBlockModel (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/client/renderer/block/model/BlockModel; c
	loadModel (Lnet/minecraft/resources/ResourceLocation;)V b
	loadTopLevel (Lnet/minecraft/client/resources/model/ModelResourceLocation;)V a
	predicate (Lnet/minecraft/world/level/block/state/StateDefinition;Ljava/lang/String;)Ljava/util/function/Predicate; a
	registerModelGroup (Ljava/lang/Iterable;)V a
	uploadTextures (Lnet/minecraft/client/renderer/texture/TextureManager;Lnet/minecraft/util/profiling/ProfilerFiller;)Lnet/minecraft/client/renderer/texture/AtlasSet; a
net/minecraft/client/resources/model/ModelBakery$BlockStateDefinitionException elk$a
net/minecraft/client/resources/model/ModelBakery$ModelGroupKey elk$b
	coloringValues b
	models a
	create (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/client/renderer/block/model/multipart/MultiPart;Ljava/util/Collection;)Lnet/minecraft/client/resources/model/ModelBakery$ModelGroupKey; a
	create (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/client/resources/model/UnbakedModel;Ljava/util/Collection;)Lnet/minecraft/client/resources/model/ModelBakery$ModelGroupKey; a
	getColoringValues (Lnet/minecraft/world/level/block/state/BlockState;Ljava/util/Collection;)Ljava/util/List; a
net/minecraft/client/resources/model/ModelManager ell
	atlases b
	bakedRegistry a
	blockColors e
	blockModelShaper c
	maxMipmapLevels f
	missingModel g
	modelGroups h
	textureManager d
	apply (Ljava/lang/Object;Lnet/minecraft/server/packs/resources/ResourceManager;Lnet/minecraft/util/profiling/ProfilerFiller;)V a
	apply (Lnet/minecraft/client/resources/model/ModelBakery;Lnet/minecraft/server/packs/resources/ResourceManager;Lnet/minecraft/util/profiling/ProfilerFiller;)V a
	getAtlas (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/client/renderer/texture/TextureAtlas; a
	getBlockModelShaper ()Lnet/minecraft/client/renderer/block/BlockModelShaper; b
	getMissingModel ()Lnet/minecraft/client/resources/model/BakedModel; a
	getModel (Lnet/minecraft/client/resources/model/ModelResourceLocation;)Lnet/minecraft/client/resources/model/BakedModel; a
	prepare (Lnet/minecraft/server/packs/resources/ResourceManager;Lnet/minecraft/util/profiling/ProfilerFiller;)Ljava/lang/Object; b
	prepare (Lnet/minecraft/server/packs/resources/ResourceManager;Lnet/minecraft/util/profiling/ProfilerFiller;)Lnet/minecraft/client/resources/model/ModelBakery; a
	requiresRender (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/state/BlockState;)Z a
	updateMaxMipLevel (I)V a
net/minecraft/client/resources/model/ModelResourceLocation elm
	variant d
	decompose (Ljava/lang/String;)[Ljava/lang/String; c
	getVariant ()Ljava/lang/String; d
net/minecraft/client/resources/model/ModelState eln
	getRotation ()Lcom/mojang/math/Transformation; b
	isUvLocked ()Z c
net/minecraft/client/resources/model/MultiPartBakedModel elo
	hasAmbientOcclusion a
	isGui3d b
	overrides f
	particleIcon d
	selectorCache h
	selectors g
	transforms e
	usesBlockLight c
	getOverrides ()Lnet/minecraft/client/renderer/block/model/ItemOverrides; g
	getParticleIcon ()Lnet/minecraft/client/renderer/texture/TextureAtlasSprite; e
	getQuads (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Ljava/util/Random;)Ljava/util/List; a
	getTransforms ()Lnet/minecraft/client/renderer/block/model/ItemTransforms; f
	isCustomRenderer ()Z d
	isGui3d ()Z b
	useAmbientOcclusion ()Z a
	usesBlockLight ()Z c
net/minecraft/client/resources/model/MultiPartBakedModel$Builder elo$a
	selectors a
	add (Ljava/util/function/Predicate;Lnet/minecraft/client/resources/model/BakedModel;)V a
	build ()Lnet/minecraft/client/resources/model/BakedModel; a
net/minecraft/client/resources/model/SimpleBakedModel elp
	culledFaces b
	hasAmbientOcclusion c
	isGui3d d
	overrides h
	particleIcon f
	transforms g
	unculledFaces a
	usesBlockLight e
	getOverrides ()Lnet/minecraft/client/renderer/block/model/ItemOverrides; g
	getParticleIcon ()Lnet/minecraft/client/renderer/texture/TextureAtlasSprite; e
	getQuads (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Ljava/util/Random;)Ljava/util/List; a
	getTransforms ()Lnet/minecraft/client/renderer/block/model/ItemTransforms; f
	isCustomRenderer ()Z d
	isGui3d ()Z b
	useAmbientOcclusion ()Z a
	usesBlockLight ()Z c
net/minecraft/client/resources/model/SimpleBakedModel$Builder elp$a
	culledFaces b
	hasAmbientOcclusion d
	isGui3d g
	overrides c
	particleIcon e
	transforms h
	unculledFaces a
	usesBlockLight f
	addCulledFace (Lnet/minecraft/core/Direction;Lnet/minecraft/client/renderer/block/model/BakedQuad;)Lnet/minecraft/client/resources/model/SimpleBakedModel$Builder; a
	addUnculledFace (Lnet/minecraft/client/renderer/block/model/BakedQuad;)Lnet/minecraft/client/resources/model/SimpleBakedModel$Builder; a
	build ()Lnet/minecraft/client/resources/model/BakedModel; b
	item ()Lnet/minecraft/client/resources/model/SimpleBakedModel$Builder; a
	particle (Lnet/minecraft/client/renderer/texture/TextureAtlasSprite;)Lnet/minecraft/client/resources/model/SimpleBakedModel$Builder; a
net/minecraft/client/resources/model/UnbakedModel elq
	bake (Lnet/minecraft/client/resources/model/ModelBakery;Ljava/util/function/Function;Lnet/minecraft/client/resources/model/ModelState;Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/client/resources/model/BakedModel; a
	getDependencies ()Ljava/util/Collection; f
	getMaterials (Ljava/util/function/Function;Ljava/util/Set;)Ljava/util/Collection; a
net/minecraft/client/resources/model/WeightedBakedModel elr
	list b
	totalWeight a
	wrapped c
	getOverrides ()Lnet/minecraft/client/renderer/block/model/ItemOverrides; g
	getParticleIcon ()Lnet/minecraft/client/renderer/texture/TextureAtlasSprite; e
	getQuads (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Ljava/util/Random;)Ljava/util/List; a
	getTransforms ()Lnet/minecraft/client/renderer/block/model/ItemTransforms; f
	isCustomRenderer ()Z d
	isGui3d ()Z b
	useAmbientOcclusion ()Z a
	usesBlockLight ()Z c
net/minecraft/client/resources/model/WeightedBakedModel$Builder elr$a
	list a
	add (Lnet/minecraft/client/resources/model/BakedModel;I)Lnet/minecraft/client/resources/model/WeightedBakedModel$Builder; a
	build ()Lnet/minecraft/client/resources/model/BakedModel; a
net/minecraft/client/resources/model/WeightedBakedModel$WeightedModel elr$b
	model b
net/minecraft/client/resources/sounds/AbstractSoundInstance elu
	attenuation k
	delay j
	location c
	looping i
	pitch e
	priority l
	relative m
	sound a
	source b
	volume d
	x f
	y g
	z h
	getAttenuation ()Lnet/minecraft/client/resources/sounds/SoundInstance$Attenuation; k
	getDelay ()I e
	getLocation ()Lnet/minecraft/resources/ResourceLocation; a
	getPitch ()F g
	getSound ()Lnet/minecraft/client/resources/sounds/Sound; b
	getSource ()Lnet/minecraft/sounds/SoundSource; c
	getVolume ()F f
	getX ()D h
	getY ()D i
	getZ ()D j
	hasPriority ()Z l
	isLooping ()Z d
	isRelative ()Z m
	resolve (Lnet/minecraft/client/sounds/SoundManager;)Lnet/minecraft/client/sounds/WeighedSoundEvents; a
net/minecraft/client/resources/sounds/AbstractTickableSoundInstance elv
	stopped n
	isStopped ()Z n
	stop ()V o
net/minecraft/client/resources/sounds/AmbientSoundHandler elw
	tick ()V a
net/minecraft/client/resources/sounds/BeeAggressiveSoundInstance elx
	getAlternativeSoundInstance ()Lnet/minecraft/client/resources/sounds/AbstractTickableSoundInstance; p
	shouldSwitchSounds ()Z q
net/minecraft/client/resources/sounds/BeeFlyingSoundInstance ely
	getAlternativeSoundInstance ()Lnet/minecraft/client/resources/sounds/AbstractTickableSoundInstance; p
	shouldSwitchSounds ()Z q
net/minecraft/client/resources/sounds/BeeSoundInstance elz
	bee n
	hasSwitched o
	canPlaySound ()Z t
	canStartSilent ()Z s
	getAlternativeSoundInstance ()Lnet/minecraft/client/resources/sounds/AbstractTickableSoundInstance; p
	getMaxPitch ()F v
	getMinPitch ()F u
	shouldSwitchSounds ()Z q
	tick ()V r
net/minecraft/client/resources/sounds/BiomeAmbientSoundsHandler ema
	additionsSettings g
	biomeManager c
	loopSounds e
	moodSettings f
	moodiness h
	player a
	previousBiome i
	random d
	soundManager b
	getMoodiness ()F b
	tick ()V a
net/minecraft/client/resources/sounds/BiomeAmbientSoundsHandler$LoopSoundInstance ema$a
	fade o
	fadeDirection n
	fadeIn ()V q
	fadeOut ()V p
	tick ()V r
net/minecraft/client/resources/sounds/BubbleColumnAmbientSoundHandler emb
	firstTick c
	player a
	wasInBubbleColumn b
	tick ()V a
net/minecraft/client/resources/sounds/ElytraOnPlayerSoundInstance emc
	player n
	time o
	tick ()V r
net/minecraft/client/resources/sounds/EntityBoundSoundInstance emd
	entity n
	canPlaySound ()Z t
	tick ()V r
net/minecraft/client/resources/sounds/GuardianAttackSoundInstance eme
	guardian n
	canPlaySound ()Z t
	tick ()V r
net/minecraft/client/resources/sounds/MinecartSoundInstance emf
	minecart n
	pitch o
	canPlaySound ()Z t
	canStartSilent ()Z s
	tick ()V r
net/minecraft/client/resources/sounds/RidingMinecartSoundInstance emg
	minecart o
	player n
	canPlaySound ()Z t
	canStartSilent ()Z s
	tick ()V r
net/minecraft/client/resources/sounds/SimpleSoundInstance emh
	forAmbientAddition (Lnet/minecraft/sounds/SoundEvent;)Lnet/minecraft/client/resources/sounds/SimpleSoundInstance; b
	forAmbientMood (Lnet/minecraft/sounds/SoundEvent;DDD)Lnet/minecraft/client/resources/sounds/SimpleSoundInstance; b
	forLocalAmbience (Lnet/minecraft/sounds/SoundEvent;FF)Lnet/minecraft/client/resources/sounds/SimpleSoundInstance; b
	forMusic (Lnet/minecraft/sounds/SoundEvent;)Lnet/minecraft/client/resources/sounds/SimpleSoundInstance; a
	forRecord (Lnet/minecraft/sounds/SoundEvent;DDD)Lnet/minecraft/client/resources/sounds/SimpleSoundInstance; a
	forUI (Lnet/minecraft/sounds/SoundEvent;F)Lnet/minecraft/client/resources/sounds/SimpleSoundInstance; a
	forUI (Lnet/minecraft/sounds/SoundEvent;FF)Lnet/minecraft/client/resources/sounds/SimpleSoundInstance; a
net/minecraft/client/resources/sounds/Sound emi
	attenuationDistance h
	location a
	pitch c
	preload g
	stream f
	type e
	volume b
	weight d
	getAttenuationDistance ()I j
	getLocation ()Lnet/minecraft/resources/ResourceLocation; a
	getPath ()Lnet/minecraft/resources/ResourceLocation; b
	getPitch ()F d
	getSound ()Ljava/lang/Object; k
	getSound ()Lnet/minecraft/client/resources/sounds/Sound; f
	getType ()Lnet/minecraft/client/resources/sounds/Sound$Type; g
	getVolume ()F c
	getWeight ()I e
	preloadIfRequired (Lnet/minecraft/client/sounds/SoundEngine;)V a
	shouldPreload ()Z i
	shouldStream ()Z h
net/minecraft/client/resources/sounds/Sound$Type emi$a
	$VALUES d
	FILE a
	SOUND_EVENT b
	name c
	getByName (Ljava/lang/String;)Lnet/minecraft/client/resources/sounds/Sound$Type; a
net/minecraft/client/resources/sounds/SoundEventRegistration emj
	replace b
	sounds a
	subtitle c
	getSounds ()Ljava/util/List; a
	getSubtitle ()Ljava/lang/String; c
	isReplace ()Z b
net/minecraft/client/resources/sounds/SoundEventRegistrationSerializer emk
	deserialize (Lcom/google/gson/JsonElement;Ljava/lang/reflect/Type;Lcom/google/gson/JsonDeserializationContext;)Lnet/minecraft/client/resources/sounds/SoundEventRegistration; a
	getSound (Lcom/google/gson/JsonObject;)Lnet/minecraft/client/resources/sounds/Sound; b
	getSounds (Lcom/google/gson/JsonObject;)Ljava/util/List; a
	getType (Lcom/google/gson/JsonObject;Lnet/minecraft/client/resources/sounds/Sound$Type;)Lnet/minecraft/client/resources/sounds/Sound$Type; a
net/minecraft/client/resources/sounds/SoundInstance eml
	canPlaySound ()Z t
	canStartSilent ()Z s
	getAttenuation ()Lnet/minecraft/client/resources/sounds/SoundInstance$Attenuation; k
	getDelay ()I e
	getLocation ()Lnet/minecraft/resources/ResourceLocation; a
	getPitch ()F g
	getSound ()Lnet/minecraft/client/resources/sounds/Sound; b
	getSource ()Lnet/minecraft/sounds/SoundSource; c
	getVolume ()F f
	getX ()D h
	getY ()D i
	getZ ()D j
	hasPriority ()Z l
	isLooping ()Z d
	isRelative ()Z m
	resolve (Lnet/minecraft/client/sounds/SoundManager;)Lnet/minecraft/client/sounds/WeighedSoundEvents; a
net/minecraft/client/resources/sounds/SoundInstance$Attenuation eml$a
	$VALUES c
	LINEAR b
	NONE a
net/minecraft/client/resources/sounds/TickableSoundInstance emm
	isStopped ()Z n
	tick ()V r
net/minecraft/client/resources/sounds/UnderwaterAmbientSoundHandler emn
	player a
	soundManager b
	tickDelay c
	tick ()V a
net/minecraft/client/resources/sounds/UnderwaterAmbientSoundInstances emo
net/minecraft/client/resources/sounds/UnderwaterAmbientSoundInstances$SubSound emo$a
	player n
	tick ()V r
net/minecraft/client/resources/sounds/UnderwaterAmbientSoundInstances$UnderwaterAmbientSoundInstance emo$b
	fade o
	player n
	tick ()V r
net/minecraft/client/searchtree/MutableSearchTree emq
	add (Ljava/lang/Object;)V a
	clear ()V a
	refresh ()V b
net/minecraft/client/searchtree/ReloadableIdSearchTree emr
	contents d
	idGetter c
	namespaceTree a
	orderT e
	pathTree b
	add (Ljava/lang/Object;)V a
	clear ()V a
	comparePosition (Ljava/lang/Object;Ljava/lang/Object;)I a
	index (Ljava/lang/Object;)V b
	refresh ()V b
	search (Ljava/lang/String;)Ljava/util/List; a
net/minecraft/client/searchtree/ReloadableIdSearchTree$IntersectionIterator emr$a
	firstIterator a
	orderT c
	secondIterator b
net/minecraft/client/searchtree/ReloadableSearchTree ems
	filler d
	tree c
	index (Ljava/lang/Object;)V b
	refresh ()V b
	search (Ljava/lang/String;)Ljava/util/List; a
net/minecraft/client/searchtree/ReloadableSearchTree$MergingUniqueIterator ems$a
	firstIterator a
	orderT c
	secondIterator b
net/minecraft/client/searchtree/SearchRegistry emt
	CREATIVE_NAMES a
	CREATIVE_TAGS b
	RECIPE_COLLECTIONS c
	searchTrees d
	getTree (Lnet/minecraft/client/searchtree/SearchRegistry$Key;)Lnet/minecraft/client/searchtree/MutableSearchTree; a
	onResourceManagerReload (Lnet/minecraft/server/packs/resources/ResourceManager;)V a
	register (Lnet/minecraft/client/searchtree/SearchRegistry$Key;Lnet/minecraft/client/searchtree/MutableSearchTree;)V a
net/minecraft/client/searchtree/SearchRegistry$Key emt$a
net/minecraft/client/searchtree/SearchTree emu
	search (Ljava/lang/String;)Ljava/util/List; a
net/minecraft/client/searchtree/SuffixArray emv
	DEBUG_ARRAY c
	DEBUG_COMPARISONS b
	LOGGER d
	chars e
	list a
	maxStringLength i
	offsets h
	suffixToT g
	wordStarts f
	add (Ljava/lang/Object;Ljava/lang/String;)V a
	compare (Ljava/lang/String;I)I a
	generate ()V a
	getString (I)Ljava/lang/String; a
	print ()V b
	search (Ljava/lang/String;)Ljava/util/List; a
net/minecraft/client/server/IntegratedPlayerList emx
	playerData a
	canPlayerLogin (Ljava/net/SocketAddress;Lcom/mojang/authlib/GameProfile;)Lnet/minecraft/network/chat/Component; a
	getServer ()Lnet/minecraft/client/server/IntegratedServer; b
	getServer ()Lnet/minecraft/server/MinecraftServer; c
	getSingleplayerData ()Lnet/minecraft/nbt/CompoundTag; q
	save (Lnet/minecraft/server/level/ServerPlayer;)V b
net/minecraft/client/server/IntegratedServer emy
	LOGGER a
	lanPinger m
	minecraft j
	paused k
	publishedPort l
	uuid n
	fillReport (Lnet/minecraft/CrashReport;)Lnet/minecraft/CrashReport; b
	forceSynchronousWrites ()Z aU
	getFunctionCompilationLevel ()I h
	getModdedStatus ()Ljava/util/Optional; o
	getOperatorUserPermissionLevel ()I g
	getPort ()I M
	getRateLimitPacketsPerSecond ()I k
	getScaledTrackingDistance (I)I b
	getServerDirectory ()Ljava/io/File; B
	halt (Z)V a
	initServer ()Z d
	isCommandBlockEnabled ()Z m
	isDedicatedServer ()Z j
	isEpollEnabled ()Z l
	isPublished ()Z n
	isSingleplayerOwner (Lcom/mojang/authlib/GameProfile;)Z a
	isSnooperEnabled ()Z T
	onServerCrash (Lnet/minecraft/CrashReport;)V a
	populateSnooper (Lnet/minecraft/world/Snooper;)V a
	publishServer (Lnet/minecraft/world/level/GameType;ZI)Z a
	setDefaultGameType (Lnet/minecraft/world/level/GameType;)V a
	setUUID (Ljava/util/UUID;)V a
	shouldInformAdmins ()Z R_
	shouldRconBroadcast ()Z i
	stopServer ()V t
	tickServer (Ljava/util/function/BooleanSupplier;)V a
net/minecraft/client/server/LanServer emz
	address b
	motd a
	pingTime c
	getAddress ()Ljava/lang/String; b
	getMotd ()Ljava/lang/String; a
	isUpToDate ()Z d
	updatePingTime ()V c
net/minecraft/client/server/LanServerDetection ena
	LOGGER b
	UNIQUE_THREAD_ID a
net/minecraft/client/server/LanServerDetection$LanServerDetector ena$a
	pingGroup b
	serverList a
	socket c
net/minecraft/client/server/LanServerDetection$LanServerList ena$b
	isDirty b
	servers a
	addServer (Ljava/lang/String;Ljava/net/InetAddress;)V a
	getServers ()Ljava/util/List; c
	isDirty ()Z a
	markClean ()V b
net/minecraft/client/server/LanServerPinger enb
	LOGGER b
	UNIQUE_THREAD_ID a
	isRunning e
	motd c
	serverAddress f
	socket d
	createPingString (Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; a
	parseAddress (Ljava/lang/String;)Ljava/lang/String; b
	parseMotd (Ljava/lang/String;)Ljava/lang/String; a
net/minecraft/client/sounds/AudioStream ene
	getFormat ()Ljavax/sound/sampled/AudioFormat; a
	read (I)Ljava/nio/ByteBuffer; a
net/minecraft/client/sounds/ChannelAccess enf
	channels a
	executor c
	library b
	clear ()V b
	createHandle (Lcom/mojang/blaze3d/audio/Library$Pool;)Ljava/util/concurrent/CompletableFuture; a
	executeOnChannels (Ljava/util/function/Consumer;)V a
	scheduleTick ()V a
net/minecraft/client/sounds/ChannelAccess$ChannelHandle enf$a
	channel b
	stopped c
	execute (Ljava/util/function/Consumer;)V a
	isStopped ()Z a
	release ()V b
net/minecraft/client/sounds/LoopingAudioStream eng
	bufferedInputStream c
	provider a
	stream b
	getFormat ()Ljavax/sound/sampled/AudioFormat; a
	read (I)Ljava/nio/ByteBuffer; a
net/minecraft/client/sounds/LoopingAudioStream$AudioStreamProvider eng$a
net/minecraft/client/sounds/LoopingAudioStream$NoCloseBuffer eng$b
net/minecraft/client/sounds/MusicManager enh
	currentMusic c
	minecraft b
	nextSongDelay d
	random a
	isPlayingMusic (Lnet/minecraft/sounds/Music;)Z b
	startPlaying (Lnet/minecraft/sounds/Music;)V a
	stopPlaying ()V b
	tick ()V a
net/minecraft/client/sounds/SoundBufferLibrary eni
	cache b
	resourceManager a
	clear ()V a
	getCompleteBuffer (Lnet/minecraft/resources/ResourceLocation;)Ljava/util/concurrent/CompletableFuture; a
	getStream (Lnet/minecraft/resources/ResourceLocation;Z)Ljava/util/concurrent/CompletableFuture; a
	preload (Ljava/util/Collection;)Ljava/util/concurrent/CompletableFuture; a
net/minecraft/client/sounds/SoundEngine enj
	LOGGER b
	MARKER a
	ONLY_WARN_ONCE c
	channelAccess k
	executor j
	instanceBySource n
	instanceToChannel m
	library g
	listener h
	listeners r
	loaded f
	options e
	preloadQueue t
	queuedSounds p
	queuedTickableSounds s
	soundBuffers i
	soundDeleteTime q
	soundManager d
	tickCount l
	tickingSounds o
	addEventListener (Lnet/minecraft/client/sounds/SoundEventListener;)V a
	calculatePitch (Lnet/minecraft/client/resources/sounds/SoundInstance;)F g
	calculateVolume (Lnet/minecraft/client/resources/sounds/SoundInstance;)F h
	destroy ()V b
	getDebugString ()Ljava/lang/String; f
	getVolume (Lnet/minecraft/sounds/SoundSource;)F a
	isActive (Lnet/minecraft/client/resources/sounds/SoundInstance;)Z b
	loadLibrary ()V g
	pause ()V d
	play (Lnet/minecraft/client/resources/sounds/SoundInstance;)V c
	playDelayed (Lnet/minecraft/client/resources/sounds/SoundInstance;I)V a
	queueTickingSound (Lnet/minecraft/client/resources/sounds/TickableSoundInstance;)V a
	reload ()V a
	removeEventListener (Lnet/minecraft/client/sounds/SoundEventListener;)V b
	requestPreload (Lnet/minecraft/client/resources/sounds/Sound;)V a
	requiresManualLooping (Lnet/minecraft/client/resources/sounds/SoundInstance;)Z d
	resume ()V e
	shouldLoopAutomatically (Lnet/minecraft/client/resources/sounds/SoundInstance;)Z f
	shouldLoopManually (Lnet/minecraft/client/resources/sounds/SoundInstance;)Z e
	stop (Lnet/minecraft/client/resources/sounds/SoundInstance;)V a
	stop (Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/sounds/SoundSource;)V a
	stopAll ()V c
	tick (Z)V a
	tickNonPaused ()V h
	updateCategoryVolume (Lnet/minecraft/sounds/SoundSource;F)V a
	updateSource (Lnet/minecraft/client/Camera;)V a
net/minecraft/client/sounds/SoundEngineExecutor enk
	shutdown b
	thread a
	createThread ()Ljava/lang/Thread; b
	flush ()V a
	getRunningThread ()Ljava/lang/Thread; av
	run ()V c
	shouldRun (Ljava/lang/Runnable;)Z d
	waitForTasks ()V bl
	wrapRunnable (Ljava/lang/Runnable;)Ljava/lang/Runnable; e
net/minecraft/client/sounds/SoundEventListener enl
	onPlaySound (Lnet/minecraft/client/resources/sounds/SoundInstance;Lnet/minecraft/client/sounds/WeighedSoundEvents;)V a
net/minecraft/client/sounds/SoundManager enm
	EMPTY_SOUND a
	GSON c
	LOGGER b
	SOUND_EVENT_REGISTRATION_TYPE d
	registry e
	soundEngine f
	addListener (Lnet/minecraft/client/sounds/SoundEventListener;)V a
	apply (Ljava/lang/Object;Lnet/minecraft/server/packs/resources/ResourceManager;Lnet/minecraft/util/profiling/ProfilerFiller;)V a
	apply (Lnet/minecraft/client/sounds/SoundManager$Preparations;Lnet/minecraft/server/packs/resources/ResourceManager;Lnet/minecraft/util/profiling/ProfilerFiller;)V a
	destroy ()V e
	getAvailableSounds ()Ljava/util/Collection; a
	getDebugString ()Ljava/lang/String; g
	getSoundEvent (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/client/sounds/WeighedSoundEvents; a
	isActive (Lnet/minecraft/client/resources/sounds/SoundInstance;)Z c
	pause ()V b
	play (Lnet/minecraft/client/resources/sounds/SoundInstance;)V a
	playDelayed (Lnet/minecraft/client/resources/sounds/SoundInstance;I)V a
	prepare (Lnet/minecraft/server/packs/resources/ResourceManager;Lnet/minecraft/util/profiling/ProfilerFiller;)Ljava/lang/Object; b
	prepare (Lnet/minecraft/server/packs/resources/ResourceManager;Lnet/minecraft/util/profiling/ProfilerFiller;)Lnet/minecraft/client/sounds/SoundManager$Preparations; a
	queueTickingSound (Lnet/minecraft/client/resources/sounds/TickableSoundInstance;)V a
	removeListener (Lnet/minecraft/client/sounds/SoundEventListener;)V b
	resume ()V f
	stop ()V d
	stop (Lnet/minecraft/client/resources/sounds/SoundInstance;)V b
	stop (Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/sounds/SoundSource;)V a
	tick (Z)V a
	updateSource (Lnet/minecraft/client/Camera;)V a
	updateSourceVolume (Lnet/minecraft/sounds/SoundSource;F)V a
	validateSoundResource (Lnet/minecraft/client/resources/sounds/Sound;Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/server/packs/resources/ResourceManager;)Z b
net/minecraft/client/sounds/SoundManager$Preparations enm$a
	registry a
	apply (Ljava/util/Map;Lnet/minecraft/client/sounds/SoundEngine;)V a
	handleRegistration (Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/client/resources/sounds/SoundEventRegistration;Lnet/minecraft/server/packs/resources/ResourceManager;)V a
net/minecraft/client/sounds/WeighedSoundEvents enn
	list a
	location c
	random b
	subtitle d
	addSound (Lnet/minecraft/client/sounds/Weighted;)V a
	getResourceLocation ()Lnet/minecraft/resources/ResourceLocation; b
	getSound ()Ljava/lang/Object; k
	getSound ()Lnet/minecraft/client/resources/sounds/Sound; a
	getSubtitle ()Lnet/minecraft/network/chat/Component; c
	getWeight ()I e
	preloadIfRequired (Lnet/minecraft/client/sounds/SoundEngine;)V a
net/minecraft/client/sounds/Weighted eno
	getSound ()Ljava/lang/Object; k
	getWeight ()I e
	preloadIfRequired (Lnet/minecraft/client/sounds/SoundEngine;)V a
net/minecraft/client/tutorial/CompletedTutorialStepInstance enq
	tutorial a
net/minecraft/client/tutorial/CraftPlanksTutorialStep enr
	CRAFT_DESCRIPTION b
	CRAFT_TITLE a
	timeWaiting e
	toast d
	tutorial c
	clear ()V b
	hasCraftedPlanksPreviously (Lnet/minecraft/client/player/LocalPlayer;Lnet/minecraft/tags/Tag;)Z a
	onGetItem (Lnet/minecraft/world/item/ItemStack;)V a
	tick ()V a
net/minecraft/client/tutorial/FindTreeTutorialStepInstance ens
	DESCRIPTION c
	TITLE b
	TREE_BLOCKS a
	timeWaiting f
	toast e
	tutorial d
	clear ()V b
	hasPunchedTreesPreviously (Lnet/minecraft/client/player/LocalPlayer;)Z a
	onGetItem (Lnet/minecraft/world/item/ItemStack;)V a
	onLookAt (Lnet/minecraft/client/multiplayer/ClientLevel;Lnet/minecraft/world/phys/HitResult;)V a
	tick ()V a
net/minecraft/client/tutorial/MovementTutorialStepInstance ent
	LOOK_DESCRIPTION d
	LOOK_TITLE c
	MOVE_DESCRIPTION b
	MOVE_TITLE a
	lookCompleted n
	lookToast g
	moveCompleted m
	moveToast f
	moved k
	timeLooked j
	timeMoved i
	timeWaiting h
	turned l
	tutorial e
	clear ()V b
	onInput (Lnet/minecraft/client/player/Input;)V a
	onMouse (DD)V a
	tick ()V a
net/minecraft/client/tutorial/OpenInventoryTutorialStep enu
	DESCRIPTION b
	TITLE a
	timeWaiting e
	toast d
	tutorial c
	clear ()V b
	onOpenInventory ()V c
	tick ()V a
net/minecraft/client/tutorial/PunchTreeTutorialStepInstance env
	DESCRIPTION b
	TITLE a
	resetCount f
	timeWaiting e
	toast d
	tutorial c
	clear ()V b
	onDestroyBlock (Lnet/minecraft/client/multiplayer/ClientLevel;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;F)V a
	onGetItem (Lnet/minecraft/world/item/ItemStack;)V a
	tick ()V a
net/minecraft/client/tutorial/Tutorial enw
	instance b
	minecraft a
	getGameMode ()Lnet/minecraft/world/level/GameType; f
	getMinecraft ()Lnet/minecraft/client/Minecraft; e
	key (Ljava/lang/String;)Lnet/minecraft/network/chat/Component; a
	onDestroyBlock (Lnet/minecraft/client/multiplayer/ClientLevel;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;F)V a
	onGetItem (Lnet/minecraft/world/item/ItemStack;)V a
	onInput (Lnet/minecraft/client/player/Input;)V a
	onLookAt (Lnet/minecraft/client/multiplayer/ClientLevel;Lnet/minecraft/world/phys/HitResult;)V a
	onMouse (DD)V a
	onOpenInventory ()V a
	setStep (Lnet/minecraft/client/tutorial/TutorialSteps;)V a
	start ()V c
	stop ()V b
	tick ()V d
net/minecraft/client/tutorial/TutorialStepInstance enx
	clear ()V b
	onDestroyBlock (Lnet/minecraft/client/multiplayer/ClientLevel;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;F)V a
	onGetItem (Lnet/minecraft/world/item/ItemStack;)V a
	onInput (Lnet/minecraft/client/player/Input;)V a
	onLookAt (Lnet/minecraft/client/multiplayer/ClientLevel;Lnet/minecraft/world/phys/HitResult;)V a
	onMouse (DD)V a
	onOpenInventory ()V c
	tick ()V a
net/minecraft/client/tutorial/TutorialSteps eny
	$VALUES i
	CRAFT_PLANKS e
	FIND_TREE b
	MOVEMENT a
	NONE f
	OPEN_INVENTORY d
	PUNCH_TREE c
	constructor h
	name g
	create (Lnet/minecraft/client/tutorial/Tutorial;)Lnet/minecraft/client/tutorial/TutorialStepInstance; a
	getByName (Ljava/lang/String;)Lnet/minecraft/client/tutorial/TutorialSteps; a
	getName ()Ljava/lang/String; a
net/minecraft/commands/BrigadierExceptions cx
	DISPATCHER_EXPECTED_ARGUMENT_SEPARATOR z
	DISPATCHER_PARSE_EXCEPTION A
	DISPATCHER_UNKNOWN_ARGUMENT y
	DISPATCHER_UNKNOWN_COMMAND x
	DOUBLE_TOO_BIG b
	DOUBLE_TOO_SMALL a
	FLOAT_TOO_BIG d
	FLOAT_TOO_SMALL c
	INTEGER_TOO_BIG f
	INTEGER_TOO_SMALL e
	LITERAL_INCORRECT i
	LONG_TOO_BIG h
	LONG_TOO_SMALL g
	READER_EXPECTED_BOOL v
	READER_EXPECTED_DOUBLE s
	READER_EXPECTED_END_OF_QUOTE k
	READER_EXPECTED_FLOAT u
	READER_EXPECTED_INT o
	READER_EXPECTED_LONG q
	READER_EXPECTED_START_OF_QUOTE j
	READER_EXPECTED_SYMBOL w
	READER_INVALID_BOOL m
	READER_INVALID_DOUBLE r
	READER_INVALID_ESCAPE l
	READER_INVALID_FLOAT t
	READER_INVALID_INT n
	READER_INVALID_LONG p
net/minecraft/commands/CommandFunction cy
	entries a
	id b
	fromLines (Lnet/minecraft/resources/ResourceLocation;Lcom/mojang/brigadier/CommandDispatcher;Lnet/minecraft/commands/CommandSourceStack;Ljava/util/List;)Lnet/minecraft/commands/CommandFunction; a
	getEntries ()[Lnet/minecraft/commands/CommandFunction$Entry; b
	getId ()Lnet/minecraft/resources/ResourceLocation; a
net/minecraft/commands/CommandFunction$CacheableFunction cy$a
	NONE a
	function d
	id b
	resolved c
	get (Lnet/minecraft/server/ServerFunctionManager;)Ljava/util/Optional; a
	getId ()Lnet/minecraft/resources/ResourceLocation; a
net/minecraft/commands/CommandFunction$CommandEntry cy$b
	parse a
	execute (Lnet/minecraft/server/ServerFunctionManager;Lnet/minecraft/commands/CommandSourceStack;Ljava/util/ArrayDeque;I)V a
net/minecraft/commands/CommandFunction$Entry cy$c
	execute (Lnet/minecraft/server/ServerFunctionManager;Lnet/minecraft/commands/CommandSourceStack;Ljava/util/ArrayDeque;I)V a
net/minecraft/commands/CommandFunction$FunctionEntry cy$d
	function a
	execute (Lnet/minecraft/server/ServerFunctionManager;Lnet/minecraft/commands/CommandSourceStack;Ljava/util/ArrayDeque;I)V a
net/minecraft/commands/CommandRuntimeException cz
	message a
	getComponent ()Lnet/minecraft/network/chat/Component; a
net/minecraft/commands/CommandSource da
	NULL a_
	acceptsFailure ()Z b
	acceptsSuccess ()Z a
	sendMessage (Lnet/minecraft/network/chat/Component;Ljava/util/UUID;)V a
	shouldInformAdmins ()Z R_
net/minecraft/commands/CommandSourceStack db
	ERROR_NOT_ENTITY b
	ERROR_NOT_PLAYER a
	anchor m
	consumer l
	displayName h
	entity k
	level e
	permissionLevel f
	rotation n
	server i
	silent j
	source c
	textName g
	worldPosition d
	broadcastToAdmins (Lnet/minecraft/network/chat/Component;)V b
	customSuggestion (Lcom/mojang/brigadier/context/CommandContext;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture; a
	facing (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/commands/arguments/EntityAnchorArgument$Anchor;)Lnet/minecraft/commands/CommandSourceStack; a
	facing (Lnet/minecraft/world/phys/Vec3;)Lnet/minecraft/commands/CommandSourceStack; b
	getAllTeams ()Ljava/util/Collection; m
	getAnchor ()Lnet/minecraft/commands/arguments/EntityAnchorArgument$Anchor; k
	getAvailableSoundEvents ()Ljava/util/Collection; n
	getDisplayName ()Lnet/minecraft/network/chat/Component; b
	getEntity ()Lnet/minecraft/world/entity/Entity; f
	getEntityOrException ()Lnet/minecraft/world/entity/Entity; g
	getLevel ()Lnet/minecraft/server/level/ServerLevel; e
	getOnlinePlayerNames ()Ljava/util/Collection; l
	getPlayerOrException ()Lnet/minecraft/server/level/ServerPlayer; h
	getPosition ()Lnet/minecraft/world/phys/Vec3; d
	getRecipeNames ()Ljava/util/stream/Stream; o
	getRotation ()Lnet/minecraft/world/phys/Vec2; i
	getServer ()Lnet/minecraft/server/MinecraftServer; j
	getTextName ()Ljava/lang/String; c
	hasPermission (I)Z c
	levels ()Ljava/util/Set; p
	onCommandComplete (Lcom/mojang/brigadier/context/CommandContext;ZI)V a
	registryAccess ()Lnet/minecraft/core/RegistryAccess; q
	sendFailure (Lnet/minecraft/network/chat/Component;)V a
	sendSuccess (Lnet/minecraft/network/chat/Component;Z)V a
	withAnchor (Lnet/minecraft/commands/arguments/EntityAnchorArgument$Anchor;)Lnet/minecraft/commands/CommandSourceStack; a
	withCallback (Lcom/mojang/brigadier/ResultConsumer;)Lnet/minecraft/commands/CommandSourceStack; a
	withCallback (Lcom/mojang/brigadier/ResultConsumer;Ljava/util/function/BinaryOperator;)Lnet/minecraft/commands/CommandSourceStack; a
	withEntity (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/commands/CommandSourceStack; a
	withLevel (Lnet/minecraft/server/level/ServerLevel;)Lnet/minecraft/commands/CommandSourceStack; a
	withMaximumPermission (I)Lnet/minecraft/commands/CommandSourceStack; b
	withPermission (I)Lnet/minecraft/commands/CommandSourceStack; a
	withPosition (Lnet/minecraft/world/phys/Vec3;)Lnet/minecraft/commands/CommandSourceStack; a
	withRotation (Lnet/minecraft/world/phys/Vec2;)Lnet/minecraft/commands/CommandSourceStack; a
	withSuppressedOutput ()Lnet/minecraft/commands/CommandSourceStack; a
net/minecraft/commands/Commands dc
	LOGGER a
	dispatcher b
	argument (Ljava/lang/String;Lcom/mojang/brigadier/arguments/ArgumentType;)Lcom/mojang/brigadier/builder/RequiredArgumentBuilder; a
	createValidator (Lnet/minecraft/commands/Commands$ParseFunction;)Ljava/util/function/Predicate; a
	fillUsableCommands (Lcom/mojang/brigadier/tree/CommandNode;Lcom/mojang/brigadier/tree/CommandNode;Lnet/minecraft/commands/CommandSourceStack;Ljava/util/Map;)V a
	getDispatcher ()Lcom/mojang/brigadier/CommandDispatcher; a
	getParseException (Lcom/mojang/brigadier/ParseResults;)Lcom/mojang/brigadier/exceptions/CommandSyntaxException; a
	literal (Ljava/lang/String;)Lcom/mojang/brigadier/builder/LiteralArgumentBuilder; a
	performCommand (Lnet/minecraft/commands/CommandSourceStack;Ljava/lang/String;)I a
	sendCommands (Lnet/minecraft/server/level/ServerPlayer;)V a
	validate ()V b
net/minecraft/commands/Commands$CommandSelection dc$a
	$VALUES f
	ALL a
	DEDICATED b
	INTEGRATED c
	includeDedicated e
	includeIntegrated d
net/minecraft/commands/Commands$ParseFunction dc$b
net/minecraft/commands/SharedSuggestionProvider dd
	customSuggestion (Lcom/mojang/brigadier/context/CommandContext;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture; a
	filterResources (Ljava/lang/Iterable;Ljava/lang/String;Ljava/lang/String;Ljava/util/function/Function;Ljava/util/function/Consumer;)V a
	filterResources (Ljava/lang/Iterable;Ljava/lang/String;Ljava/util/function/Function;Ljava/util/function/Consumer;)V a
	getAbsoluteCoordinates ()Ljava/util/Collection; t
	getAllTeams ()Ljava/util/Collection; m
	getAvailableSoundEvents ()Ljava/util/Collection; n
	getOnlinePlayerNames ()Ljava/util/Collection; l
	getRecipeNames ()Ljava/util/stream/Stream; o
	getRelevantCoordinates ()Ljava/util/Collection; s
	getSelectedEntities ()Ljava/util/Collection; r
	hasPermission (I)Z c
	levels ()Ljava/util/Set; p
	matchesSubStr (Ljava/lang/String;Ljava/lang/String;)Z a
	registryAccess ()Lnet/minecraft/core/RegistryAccess; q
	suggest (Ljava/lang/Iterable;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture; b
	suggest (Ljava/lang/Iterable;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Ljava/util/function/Function;Ljava/util/function/Function;)Ljava/util/concurrent/CompletableFuture; b
	suggest (Ljava/util/stream/Stream;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture; b
	suggest ([Ljava/lang/String;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture; a
	suggest2DCoordinates (Ljava/lang/String;Ljava/util/Collection;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Ljava/util/function/Predicate;)Ljava/util/concurrent/CompletableFuture; b
	suggestCoordinates (Ljava/lang/String;Ljava/util/Collection;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Ljava/util/function/Predicate;)Ljava/util/concurrent/CompletableFuture; a
	suggestResource (Ljava/lang/Iterable;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture; a
	suggestResource (Ljava/lang/Iterable;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Ljava/lang/String;)Ljava/util/concurrent/CompletableFuture; a
	suggestResource (Ljava/lang/Iterable;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Ljava/util/function/Function;Ljava/util/function/Function;)Ljava/util/concurrent/CompletableFuture; a
	suggestResource (Ljava/util/stream/Stream;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture; a
	suggestResource (Ljava/util/stream/Stream;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Ljava/util/function/Function;Ljava/util/function/Function;)Ljava/util/concurrent/CompletableFuture; a
net/minecraft/commands/SharedSuggestionProvider$TextCoordinates dd$a
	DEFAULT_GLOBAL b
	DEFAULT_LOCAL a
	x c
	y d
	z e
net/minecraft/commands/arguments/AngleArgument de
	ERROR_NOT_COMPLETE a
	EXAMPLES b
	angle ()Lnet/minecraft/commands/arguments/AngleArgument; a
	getAngle (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)F a
	parse (Lcom/mojang/brigadier/StringReader;)Lnet/minecraft/commands/arguments/AngleArgument$SingleAngle; a
net/minecraft/commands/arguments/AngleArgument$SingleAngle de$a
	angle a
	isRelative b
	getAngle (Lnet/minecraft/commands/CommandSourceStack;)F a
net/minecraft/commands/arguments/ColorArgument df
	ERROR_INVALID_VALUE a
	EXAMPLES b
	color ()Lnet/minecraft/commands/arguments/ColorArgument; a
	getColor (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lnet/minecraft/ChatFormatting; a
	parse (Lcom/mojang/brigadier/StringReader;)Lnet/minecraft/ChatFormatting; a
net/minecraft/commands/arguments/ComponentArgument dg
	ERROR_INVALID_JSON a
	EXAMPLES b
	getComponent (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lnet/minecraft/network/chat/Component; a
	parse (Lcom/mojang/brigadier/StringReader;)Lnet/minecraft/network/chat/Component; a
	textComponent ()Lnet/minecraft/commands/arguments/ComponentArgument; a
net/minecraft/commands/arguments/CompoundTagArgument dh
	EXAMPLES a
	compoundTag ()Lnet/minecraft/commands/arguments/CompoundTagArgument; a
	getCompoundTag (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lnet/minecraft/nbt/CompoundTag; a
	parse (Lcom/mojang/brigadier/StringReader;)Lnet/minecraft/nbt/CompoundTag; a
net/minecraft/commands/arguments/DimensionArgument di
	ERROR_INVALID_VALUE b
	EXAMPLES a
	dimension ()Lnet/minecraft/commands/arguments/DimensionArgument; a
	getDimension (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lnet/minecraft/server/level/ServerLevel; a
	parse (Lcom/mojang/brigadier/StringReader;)Lnet/minecraft/resources/ResourceLocation; a
net/minecraft/commands/arguments/EntityAnchorArgument dj
	ERROR_INVALID b
	EXAMPLES a
	anchor ()Lnet/minecraft/commands/arguments/EntityAnchorArgument; a
	getAnchor (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lnet/minecraft/commands/arguments/EntityAnchorArgument$Anchor; a
	parse (Lcom/mojang/brigadier/StringReader;)Lnet/minecraft/commands/arguments/EntityAnchorArgument$Anchor; a
net/minecraft/commands/arguments/EntityAnchorArgument$Anchor dj$a
	$VALUES f
	BY_NAME c
	EYES b
	FEET a
	name d
	transform e
	apply (Lnet/minecraft/commands/CommandSourceStack;)Lnet/minecraft/world/phys/Vec3; a
	apply (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/world/phys/Vec3; a
	getByName (Ljava/lang/String;)Lnet/minecraft/commands/arguments/EntityAnchorArgument$Anchor; a
net/minecraft/commands/arguments/EntityArgument dk
	ERROR_NOT_SINGLE_ENTITY a
	ERROR_NOT_SINGLE_PLAYER b
	ERROR_ONLY_PLAYERS_ALLOWED c
	ERROR_SELECTORS_NOT_ALLOWED f
	EXAMPLES g
	NO_ENTITIES_FOUND d
	NO_PLAYERS_FOUND e
	playersOnly i
	single h
	entities ()Lnet/minecraft/commands/arguments/EntityArgument; b
	entity ()Lnet/minecraft/commands/arguments/EntityArgument; a
	getEntities (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Ljava/util/Collection; b
	getEntity (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lnet/minecraft/world/entity/Entity; a
	getOptionalEntities (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Ljava/util/Collection; c
	getOptionalPlayers (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Ljava/util/Collection; d
	getPlayer (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lnet/minecraft/server/level/ServerPlayer; e
	getPlayers (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Ljava/util/Collection; f
	parse (Lcom/mojang/brigadier/StringReader;)Lnet/minecraft/commands/arguments/selector/EntitySelector; a
	player ()Lnet/minecraft/commands/arguments/EntityArgument; c
	players ()Lnet/minecraft/commands/arguments/EntityArgument; d
net/minecraft/commands/arguments/EntityArgument$Serializer dk$a
	deserializeFromNetwork (Lnet/minecraft/network/FriendlyByteBuf;)Lcom/mojang/brigadier/arguments/ArgumentType; b
	deserializeFromNetwork (Lnet/minecraft/network/FriendlyByteBuf;)Lnet/minecraft/commands/arguments/EntityArgument; a
	serializeToJson (Lcom/mojang/brigadier/arguments/ArgumentType;Lcom/google/gson/JsonObject;)V a
	serializeToJson (Lnet/minecraft/commands/arguments/EntityArgument;Lcom/google/gson/JsonObject;)V a
	serializeToNetwork (Lcom/mojang/brigadier/arguments/ArgumentType;Lnet/minecraft/network/FriendlyByteBuf;)V a
	serializeToNetwork (Lnet/minecraft/commands/arguments/EntityArgument;Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/commands/arguments/EntitySummonArgument dl
	ERROR_UNKNOWN_ENTITY a
	EXAMPLES b
	getSummonableEntity (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lnet/minecraft/resources/ResourceLocation; a
	id ()Lnet/minecraft/commands/arguments/EntitySummonArgument; a
	parse (Lcom/mojang/brigadier/StringReader;)Lnet/minecraft/resources/ResourceLocation; a
	verifyCanSummon (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/resources/ResourceLocation; a
net/minecraft/commands/arguments/GameProfileArgument dm
	ERROR_UNKNOWN_PLAYER a
	EXAMPLES b
	gameProfile ()Lnet/minecraft/commands/arguments/GameProfileArgument; a
	getGameProfiles (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Ljava/util/Collection; a
	parse (Lcom/mojang/brigadier/StringReader;)Lnet/minecraft/commands/arguments/GameProfileArgument$Result; a
net/minecraft/commands/arguments/GameProfileArgument$Result dm$a
net/minecraft/commands/arguments/GameProfileArgument$SelectorResult dm$b
	selector a
net/minecraft/commands/arguments/ItemEnchantmentArgument dn
	ERROR_UNKNOWN_ENCHANTMENT a
	EXAMPLES b
	enchantment ()Lnet/minecraft/commands/arguments/ItemEnchantmentArgument; a
	getEnchantment (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lnet/minecraft/world/item/enchantment/Enchantment; a
	parse (Lcom/mojang/brigadier/StringReader;)Lnet/minecraft/world/item/enchantment/Enchantment; a
net/minecraft/commands/arguments/MessageArgument dp
	EXAMPLES a
	getMessage (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lnet/minecraft/network/chat/Component; a
	message ()Lnet/minecraft/commands/arguments/MessageArgument; a
	parse (Lcom/mojang/brigadier/StringReader;)Lnet/minecraft/commands/arguments/MessageArgument$Message; a
net/minecraft/commands/arguments/MessageArgument$Message dp$a
	parts b
	text a
	getParts ()[Lnet/minecraft/commands/arguments/MessageArgument$Part; b
	getText ()Ljava/lang/String; a
	parseText (Lcom/mojang/brigadier/StringReader;Z)Lnet/minecraft/commands/arguments/MessageArgument$Message; a
	toComponent (Lnet/minecraft/commands/CommandSourceStack;Z)Lnet/minecraft/network/chat/Component; a
net/minecraft/commands/arguments/MessageArgument$Part dp$b
	end b
	selector c
	start a
	getEnd ()I b
	getSelector ()Lnet/minecraft/commands/arguments/selector/EntitySelector; c
	getStart ()I a
	toComponent (Lnet/minecraft/commands/CommandSourceStack;)Lnet/minecraft/network/chat/Component; a
net/minecraft/commands/arguments/MobEffectArgument dq
	ERROR_UNKNOWN_EFFECT a
	EXAMPLES b
	effect ()Lnet/minecraft/commands/arguments/MobEffectArgument; a
	getEffect (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lnet/minecraft/world/effect/MobEffect; a
	parse (Lcom/mojang/brigadier/StringReader;)Lnet/minecraft/world/effect/MobEffect; a
net/minecraft/commands/arguments/NbtPathArgument dr
	ERROR_INVALID_NODE a
	ERROR_NOTHING_FOUND b
	EXAMPLES c
	createTagPredicate (Lnet/minecraft/nbt/CompoundTag;)Ljava/util/function/Predicate; b
	getPath (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lnet/minecraft/commands/arguments/NbtPathArgument$NbtPath; a
	isAllowedInUnquotedName (C)Z a
	nbtPath ()Lnet/minecraft/commands/arguments/NbtPathArgument; a
	parse (Lcom/mojang/brigadier/StringReader;)Lnet/minecraft/commands/arguments/NbtPathArgument$NbtPath; a
	parseNode (Lcom/mojang/brigadier/StringReader;Z)Lnet/minecraft/commands/arguments/NbtPathArgument$Node; a
	readObjectNode (Lcom/mojang/brigadier/StringReader;Ljava/lang/String;)Lnet/minecraft/commands/arguments/NbtPathArgument$Node; a
	readUnquotedName (Lcom/mojang/brigadier/StringReader;)Ljava/lang/String; b
net/minecraft/commands/arguments/NbtPathArgument$AllElementsNode dr$a
	INSTANCE a
	createPreferredParentTag ()Lnet/minecraft/nbt/Tag; a
	getOrCreateTag (Lnet/minecraft/nbt/Tag;Ljava/util/function/Supplier;Ljava/util/List;)V a
	getTag (Lnet/minecraft/nbt/Tag;Ljava/util/List;)V a
	removeTag (Lnet/minecraft/nbt/Tag;)I a
	setTag (Lnet/minecraft/nbt/Tag;Ljava/util/function/Supplier;)I a
net/minecraft/commands/arguments/NbtPathArgument$CompoundChildNode dr$b
	name a
	createPreferredParentTag ()Lnet/minecraft/nbt/Tag; a
	getOrCreateTag (Lnet/minecraft/nbt/Tag;Ljava/util/function/Supplier;Ljava/util/List;)V a
	getTag (Lnet/minecraft/nbt/Tag;Ljava/util/List;)V a
	removeTag (Lnet/minecraft/nbt/Tag;)I a
	setTag (Lnet/minecraft/nbt/Tag;Ljava/util/function/Supplier;)I a
net/minecraft/commands/arguments/NbtPathArgument$IndexedElementNode dr$c
	index a
	createPreferredParentTag ()Lnet/minecraft/nbt/Tag; a
	getOrCreateTag (Lnet/minecraft/nbt/Tag;Ljava/util/function/Supplier;Ljava/util/List;)V a
	getTag (Lnet/minecraft/nbt/Tag;Ljava/util/List;)V a
	removeTag (Lnet/minecraft/nbt/Tag;)I a
	setTag (Lnet/minecraft/nbt/Tag;Ljava/util/function/Supplier;)I a
net/minecraft/commands/arguments/NbtPathArgument$ListElementFunction dr$d
	apply (Lnet/minecraft/nbt/ListTag;ILnet/minecraft/nbt/Tag;)Z a
net/minecraft/commands/arguments/NbtPathArgument$MatchElementNode dr$e
	pattern a
	predicate b
	createPreferredParentTag ()Lnet/minecraft/nbt/Tag; a
	getOrCreateTag (Lnet/minecraft/nbt/Tag;Ljava/util/function/Supplier;Ljava/util/List;)V a
	getTag (Lnet/minecraft/nbt/Tag;Ljava/util/List;)V a
	removeTag (Lnet/minecraft/nbt/Tag;)I a
	setTag (Lnet/minecraft/nbt/Tag;Ljava/util/function/Supplier;)I a
net/minecraft/commands/arguments/NbtPathArgument$MatchObjectNode dr$f
	name a
	pattern b
	predicate c
	createPreferredParentTag ()Lnet/minecraft/nbt/Tag; a
	getOrCreateTag (Lnet/minecraft/nbt/Tag;Ljava/util/function/Supplier;Ljava/util/List;)V a
	getTag (Lnet/minecraft/nbt/Tag;Ljava/util/List;)V a
	removeTag (Lnet/minecraft/nbt/Tag;)I a
	setTag (Lnet/minecraft/nbt/Tag;Ljava/util/function/Supplier;)I a
net/minecraft/commands/arguments/NbtPathArgument$MatchRootObjectNode dr$g
	predicate a
	createPreferredParentTag ()Lnet/minecraft/nbt/Tag; a
	getOrCreateTag (Lnet/minecraft/nbt/Tag;Ljava/util/function/Supplier;Ljava/util/List;)V a
	getTag (Lnet/minecraft/nbt/Tag;Ljava/util/List;)V a
	removeTag (Lnet/minecraft/nbt/Tag;)I a
	setTag (Lnet/minecraft/nbt/Tag;Ljava/util/function/Supplier;)I a
net/minecraft/commands/arguments/NbtPathArgument$NbtPath dr$h
	nodeToOriginalPosition b
	nodes c
	original a
	apply (Ljava/util/List;Ljava/util/function/Function;)I a
	countMatching (Lnet/minecraft/nbt/Tag;)I b
	createNotFoundException (Lnet/minecraft/commands/arguments/NbtPathArgument$Node;)Lcom/mojang/brigadier/exceptions/CommandSyntaxException; a
	get (Lnet/minecraft/nbt/Tag;)Ljava/util/List; a
	getOrCreate (Lnet/minecraft/nbt/Tag;Ljava/util/function/Supplier;)Ljava/util/List; a
	getOrCreateParents (Lnet/minecraft/nbt/Tag;)Ljava/util/List; d
	remove (Lnet/minecraft/nbt/Tag;)I c
	set (Lnet/minecraft/nbt/Tag;Ljava/util/function/Supplier;)I b
	set (Lnet/minecraft/nbt/Tag;Lnet/minecraft/nbt/Tag;)I a
net/minecraft/commands/arguments/NbtPathArgument$Node dr$i
	collect (Ljava/util/List;Ljava/util/function/BiConsumer;)Ljava/util/List; a
	createPreferredParentTag ()Lnet/minecraft/nbt/Tag; a
	get (Ljava/util/List;)Ljava/util/List; a
	getOrCreate (Ljava/util/List;Ljava/util/function/Supplier;)Ljava/util/List; a
	getOrCreateTag (Lnet/minecraft/nbt/Tag;Ljava/util/function/Supplier;Ljava/util/List;)V a
	getTag (Lnet/minecraft/nbt/Tag;Ljava/util/List;)V a
	removeTag (Lnet/minecraft/nbt/Tag;)I a
	setTag (Lnet/minecraft/nbt/Tag;Ljava/util/function/Supplier;)I a
net/minecraft/commands/arguments/NbtTagArgument ds
	EXAMPLES a
	getNbtTag (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lnet/minecraft/nbt/Tag; a
	nbtTag ()Lnet/minecraft/commands/arguments/NbtTagArgument; a
	parse (Lcom/mojang/brigadier/StringReader;)Lnet/minecraft/nbt/Tag; a
net/minecraft/commands/arguments/ObjectiveArgument dt
	ERROR_OBJECTIVE_NAME_TOO_LONG a
	ERROR_OBJECTIVE_NOT_FOUND c
	ERROR_OBJECTIVE_READ_ONLY d
	EXAMPLES b
	getObjective (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lnet/minecraft/world/scores/Objective; a
	getWritableObjective (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lnet/minecraft/world/scores/Objective; b
	objective ()Lnet/minecraft/commands/arguments/ObjectiveArgument; a
	parse (Lcom/mojang/brigadier/StringReader;)Ljava/lang/String; a
net/minecraft/commands/arguments/ObjectiveCriteriaArgument du
	ERROR_INVALID_VALUE a
	EXAMPLES b
	criteria ()Lnet/minecraft/commands/arguments/ObjectiveCriteriaArgument; a
	getCriteria (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lnet/minecraft/world/scores/criteria/ObjectiveCriteria; a
	getName (Lnet/minecraft/stats/StatType;Ljava/lang/Object;)Ljava/lang/String; a
	parse (Lcom/mojang/brigadier/StringReader;)Lnet/minecraft/world/scores/criteria/ObjectiveCriteria; a
net/minecraft/commands/arguments/OperationArgument dv
	ERROR_DIVIDE_BY_ZERO c
	ERROR_INVALID_OPERATION b
	EXAMPLES a
	getOperation (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lnet/minecraft/commands/arguments/OperationArgument$Operation; a
	getOperation (Ljava/lang/String;)Lnet/minecraft/commands/arguments/OperationArgument$Operation; a
	getSimpleOperation (Ljava/lang/String;)Lnet/minecraft/commands/arguments/OperationArgument$SimpleOperation; b
	operation ()Lnet/minecraft/commands/arguments/OperationArgument; a
	parse (Lcom/mojang/brigadier/StringReader;)Lnet/minecraft/commands/arguments/OperationArgument$Operation; a
net/minecraft/commands/arguments/OperationArgument$Operation dv$a
net/minecraft/commands/arguments/OperationArgument$SimpleOperation dv$b
net/minecraft/commands/arguments/ParticleArgument dw
	ERROR_UNKNOWN_PARTICLE a
	EXAMPLES b
	getParticle (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lnet/minecraft/core/particles/ParticleOptions; a
	parse (Lcom/mojang/brigadier/StringReader;)Lnet/minecraft/core/particles/ParticleOptions; a
	particle ()Lnet/minecraft/commands/arguments/ParticleArgument; a
	readParticle (Lcom/mojang/brigadier/StringReader;)Lnet/minecraft/core/particles/ParticleOptions; b
	readParticle (Lcom/mojang/brigadier/StringReader;Lnet/minecraft/core/particles/ParticleType;)Lnet/minecraft/core/particles/ParticleOptions; a
net/minecraft/commands/arguments/RangeArgument dx
	floatRange ()Lnet/minecraft/commands/arguments/RangeArgument$Floats; b
	intRange ()Lnet/minecraft/commands/arguments/RangeArgument$Ints; a
net/minecraft/commands/arguments/RangeArgument$Floats dx$a
	EXAMPLES a
	getRange (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lnet/minecraft/advancements/critereon/MinMaxBounds$Floats; a
	parse (Lcom/mojang/brigadier/StringReader;)Lnet/minecraft/advancements/critereon/MinMaxBounds$Floats; a
net/minecraft/commands/arguments/RangeArgument$Ints dx$b
	EXAMPLES a
	getRange (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lnet/minecraft/advancements/critereon/MinMaxBounds$Ints; a
	parse (Lcom/mojang/brigadier/StringReader;)Lnet/minecraft/advancements/critereon/MinMaxBounds$Ints; a
net/minecraft/commands/arguments/ResourceLocationArgument dy
	ERROR_UNKNOWN_ADVANCEMENT b
	ERROR_UNKNOWN_ATTRIBUTE e
	ERROR_UNKNOWN_PREDICATE d
	ERROR_UNKNOWN_RECIPE c
	EXAMPLES a
	getAdvancement (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lnet/minecraft/advancements/Advancement; a
	getAttribute (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lnet/minecraft/world/entity/ai/attributes/Attribute; d
	getId (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lnet/minecraft/resources/ResourceLocation; e
	getPredicate (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition; c
	getRecipe (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lnet/minecraft/world/item/crafting/Recipe; b
	id ()Lnet/minecraft/commands/arguments/ResourceLocationArgument; a
	parse (Lcom/mojang/brigadier/StringReader;)Lnet/minecraft/resources/ResourceLocation; a
net/minecraft/commands/arguments/ScoreHolderArgument dz
	ERROR_NO_RESULTS c
	EXAMPLES b
	SUGGEST_SCORE_HOLDERS a
	multiple d
	getName (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Ljava/lang/String; a
	getNames (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Ljava/util/Collection; b
	getNames (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;Ljava/util/function/Supplier;)Ljava/util/Collection; a
	getNamesWithDefaultWildcard (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Ljava/util/Collection; c
	parse (Lcom/mojang/brigadier/StringReader;)Lnet/minecraft/commands/arguments/ScoreHolderArgument$Result; a
	scoreHolder ()Lnet/minecraft/commands/arguments/ScoreHolderArgument; a
	scoreHolders ()Lnet/minecraft/commands/arguments/ScoreHolderArgument; b
net/minecraft/commands/arguments/ScoreHolderArgument$Result dz$a
net/minecraft/commands/arguments/ScoreHolderArgument$SelectorResult dz$b
	selector a
net/minecraft/commands/arguments/ScoreHolderArgument$Serializer dz$c
	deserializeFromNetwork (Lnet/minecraft/network/FriendlyByteBuf;)Lcom/mojang/brigadier/arguments/ArgumentType; b
	deserializeFromNetwork (Lnet/minecraft/network/FriendlyByteBuf;)Lnet/minecraft/commands/arguments/ScoreHolderArgument; a
	serializeToJson (Lcom/mojang/brigadier/arguments/ArgumentType;Lcom/google/gson/JsonObject;)V a
	serializeToJson (Lnet/minecraft/commands/arguments/ScoreHolderArgument;Lcom/google/gson/JsonObject;)V a
	serializeToNetwork (Lcom/mojang/brigadier/arguments/ArgumentType;Lnet/minecraft/network/FriendlyByteBuf;)V a
	serializeToNetwork (Lnet/minecraft/commands/arguments/ScoreHolderArgument;Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/commands/arguments/ScoreboardSlotArgument ea
	ERROR_INVALID_VALUE a
	EXAMPLES b
	displaySlot ()Lnet/minecraft/commands/arguments/ScoreboardSlotArgument; a
	getDisplaySlot (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)I a
	parse (Lcom/mojang/brigadier/StringReader;)Ljava/lang/Integer; a
net/minecraft/commands/arguments/SlotArgument eb
	ERROR_UNKNOWN_SLOT b
	EXAMPLES a
	SLOTS c
	getSlot (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)I a
	parse (Lcom/mojang/brigadier/StringReader;)Ljava/lang/Integer; a
	slot ()Lnet/minecraft/commands/arguments/SlotArgument; a
net/minecraft/commands/arguments/TeamArgument ec
	ERROR_TEAM_NOT_FOUND b
	EXAMPLES a
	getTeam (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lnet/minecraft/world/scores/PlayerTeam; a
	parse (Lcom/mojang/brigadier/StringReader;)Ljava/lang/String; a
	team ()Lnet/minecraft/commands/arguments/TeamArgument; a
net/minecraft/commands/arguments/TimeArgument ed
	ERROR_INVALID_TICK_COUNT c
	ERROR_INVALID_UNIT b
	EXAMPLES a
	UNITS d
	parse (Lcom/mojang/brigadier/StringReader;)Ljava/lang/Integer; a
	time ()Lnet/minecraft/commands/arguments/TimeArgument; a
net/minecraft/commands/arguments/UuidArgument ee
	ALLOWED_CHARACTERS c
	ERROR_INVALID_UUID a
	EXAMPLES b
	getUuid (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Ljava/util/UUID; a
	parse (Lcom/mojang/brigadier/StringReader;)Ljava/util/UUID; a
	uuid ()Lnet/minecraft/commands/arguments/UuidArgument; a
net/minecraft/commands/arguments/blocks/BlockInput ef
	properties b
	state a
	tag c
	getDefinedProperties ()Ljava/util/Set; c
	getState ()Lnet/minecraft/world/level/block/state/BlockState; a
	getTag ()Lnet/minecraft/nbt/CompoundTag; b
	place (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;I)Z a
	test (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;)Z a
	test (Lnet/minecraft/world/level/block/state/pattern/BlockInWorld;)Z a
net/minecraft/commands/arguments/blocks/BlockPredicateArgument eg
	ERROR_UNKNOWN_TAG b
	EXAMPLES a
	blockPredicate ()Lnet/minecraft/commands/arguments/blocks/BlockPredicateArgument; a
	getBlockPredicate (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Ljava/util/function/Predicate; a
	parse (Lcom/mojang/brigadier/StringReader;)Lnet/minecraft/commands/arguments/blocks/BlockPredicateArgument$Result; a
net/minecraft/commands/arguments/blocks/BlockPredicateArgument$BlockPredicate eg$a
	nbt c
	properties b
	state a
	test (Lnet/minecraft/world/level/block/state/pattern/BlockInWorld;)Z a
net/minecraft/commands/arguments/blocks/BlockPredicateArgument$Result eg$b
net/minecraft/commands/arguments/blocks/BlockPredicateArgument$TagPredicate eg$c
	nbt b
	tag a
	vagueProperties c
	test (Lnet/minecraft/world/level/block/state/pattern/BlockInWorld;)Z a
net/minecraft/commands/arguments/blocks/BlockStateArgument eh
	EXAMPLES a
	block ()Lnet/minecraft/commands/arguments/blocks/BlockStateArgument; a
	getBlock (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lnet/minecraft/commands/arguments/blocks/BlockInput; a
	parse (Lcom/mojang/brigadier/StringReader;)Lnet/minecraft/commands/arguments/blocks/BlockInput; a
net/minecraft/commands/arguments/blocks/BlockStateParser ei
	ERROR_DUPLICATE_PROPERTY d
	ERROR_EXPECTED_END_OF_PROPERTIES g
	ERROR_EXPECTED_VALUE f
	ERROR_INVALID_VALUE e
	ERROR_NO_TAGS_ALLOWED a
	ERROR_UNKNOWN_BLOCK b
	ERROR_UNKNOWN_PROPERTY c
	SUGGEST_NOTHING h
	definition n
	forTesting j
	id m
	nbt p
	properties k
	reader i
	state o
	suggestions s
	tag q
	tagCursor r
	vagueProperties l
	addSuggestions (Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Lnet/minecraft/world/level/block/state/properties/Property;)Lcom/mojang/brigadier/suggestion/SuggestionsBuilder; a
	appendProperty (Ljava/lang/StringBuilder;Lnet/minecraft/world/level/block/state/properties/Property;Ljava/lang/Comparable;)V a
	fillSuggestions (Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Lnet/minecraft/tags/TagCollection;)Ljava/util/concurrent/CompletableFuture; a
	getNbt ()Lnet/minecraft/nbt/CompoundTag; c
	getProperties ()Ljava/util/Map; a
	getState ()Lnet/minecraft/world/level/block/state/BlockState; b
	getTag ()Lnet/minecraft/resources/ResourceLocation; d
	getVagueProperties ()Ljava/util/Map; j
	hasBlockEntity (Lnet/minecraft/tags/TagCollection;)Z a
	parse (Z)Lnet/minecraft/commands/arguments/blocks/BlockStateParser; a
	readBlock ()V e
	readNbt ()V i
	readProperties ()V g
	readTag ()V f
	readVagueProperties ()V h
	serialize (Lnet/minecraft/world/level/block/state/BlockState;)Ljava/lang/String; a
	setValue (Lnet/minecraft/world/level/block/state/properties/Property;Ljava/lang/String;I)V a
	suggestBlockIdOrTag (Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Lnet/minecraft/tags/TagCollection;)Ljava/util/concurrent/CompletableFuture; l
	suggestEquals (Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Lnet/minecraft/tags/TagCollection;)Ljava/util/concurrent/CompletableFuture; g
	suggestNextPropertyOrEnd (Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Lnet/minecraft/tags/TagCollection;)Ljava/util/concurrent/CompletableFuture; h
	suggestOpenNbt (Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Lnet/minecraft/tags/TagCollection;)Ljava/util/concurrent/CompletableFuture; f
	suggestOpenPropertiesOrNbt (Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Lnet/minecraft/tags/TagCollection;)Ljava/util/concurrent/CompletableFuture; j
	suggestOpenVaguePropertiesOrNbt (Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Lnet/minecraft/tags/TagCollection;)Ljava/util/concurrent/CompletableFuture; i
	suggestPropertyName (Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Lnet/minecraft/tags/TagCollection;)Ljava/util/concurrent/CompletableFuture; d
	suggestPropertyNameOrEnd (Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Lnet/minecraft/tags/TagCollection;)Ljava/util/concurrent/CompletableFuture; b
	suggestTag (Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Lnet/minecraft/tags/TagCollection;)Ljava/util/concurrent/CompletableFuture; k
	suggestVaguePropertyName (Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Lnet/minecraft/tags/TagCollection;)Ljava/util/concurrent/CompletableFuture; e
	suggestVaguePropertyNameOrEnd (Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Lnet/minecraft/tags/TagCollection;)Ljava/util/concurrent/CompletableFuture; c
	suggestVaguePropertyValue (Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Lnet/minecraft/tags/TagCollection;Ljava/lang/String;)Ljava/util/concurrent/CompletableFuture; a
net/minecraft/commands/arguments/coordinates/BlockPosArgument ek
	ERROR_NOT_LOADED a
	ERROR_OUT_OF_WORLD b
	EXAMPLES c
	blockPos ()Lnet/minecraft/commands/arguments/coordinates/BlockPosArgument; a
	getLoadedBlockPos (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lnet/minecraft/core/BlockPos; a
	getOrLoadBlockPos (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lnet/minecraft/core/BlockPos; b
	parse (Lcom/mojang/brigadier/StringReader;)Lnet/minecraft/commands/arguments/coordinates/Coordinates; a
net/minecraft/commands/arguments/coordinates/ColumnPosArgument el
	ERROR_NOT_COMPLETE a
	EXAMPLES b
	columnPos ()Lnet/minecraft/commands/arguments/coordinates/ColumnPosArgument; a
	getColumnPos (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lnet/minecraft/server/level/ColumnPos; a
	parse (Lcom/mojang/brigadier/StringReader;)Lnet/minecraft/commands/arguments/coordinates/Coordinates; a
net/minecraft/commands/arguments/coordinates/Coordinates em
	getBlockPos (Lnet/minecraft/commands/CommandSourceStack;)Lnet/minecraft/core/BlockPos; c
	getPosition (Lnet/minecraft/commands/CommandSourceStack;)Lnet/minecraft/world/phys/Vec3; a
	getRotation (Lnet/minecraft/commands/CommandSourceStack;)Lnet/minecraft/world/phys/Vec2; b
	isXRelative ()Z a
	isYRelative ()Z b
	isZRelative ()Z c
net/minecraft/commands/arguments/coordinates/LocalCoordinates en
	forwards c
	left a
	up b
	getPosition (Lnet/minecraft/commands/CommandSourceStack;)Lnet/minecraft/world/phys/Vec3; a
	getRotation (Lnet/minecraft/commands/CommandSourceStack;)Lnet/minecraft/world/phys/Vec2; b
	isXRelative ()Z a
	isYRelative ()Z b
	isZRelative ()Z c
	parse (Lcom/mojang/brigadier/StringReader;)Lnet/minecraft/commands/arguments/coordinates/LocalCoordinates; a
	readDouble (Lcom/mojang/brigadier/StringReader;I)D a
net/minecraft/commands/arguments/coordinates/RotationArgument eo
	ERROR_NOT_COMPLETE a
	EXAMPLES b
	getRotation (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lnet/minecraft/commands/arguments/coordinates/Coordinates; a
	parse (Lcom/mojang/brigadier/StringReader;)Lnet/minecraft/commands/arguments/coordinates/Coordinates; a
	rotation ()Lnet/minecraft/commands/arguments/coordinates/RotationArgument; a
net/minecraft/commands/arguments/coordinates/SwizzleArgument ep
	ERROR_INVALID b
	EXAMPLES a
	getSwizzle (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Ljava/util/EnumSet; a
	parse (Lcom/mojang/brigadier/StringReader;)Ljava/util/EnumSet; a
	swizzle ()Lnet/minecraft/commands/arguments/coordinates/SwizzleArgument; a
net/minecraft/commands/arguments/coordinates/Vec2Argument eq
	ERROR_NOT_COMPLETE a
	EXAMPLES b
	centerCorrect c
	getVec2 (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lnet/minecraft/world/phys/Vec2; a
	parse (Lcom/mojang/brigadier/StringReader;)Lnet/minecraft/commands/arguments/coordinates/Coordinates; a
	vec2 ()Lnet/minecraft/commands/arguments/coordinates/Vec2Argument; a
	vec2 (Z)Lnet/minecraft/commands/arguments/coordinates/Vec2Argument; a
net/minecraft/commands/arguments/coordinates/Vec3Argument er
	ERROR_MIXED_TYPE b
	ERROR_NOT_COMPLETE a
	EXAMPLES c
	centerCorrect d
	getCoordinates (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lnet/minecraft/commands/arguments/coordinates/Coordinates; b
	getVec3 (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lnet/minecraft/world/phys/Vec3; a
	parse (Lcom/mojang/brigadier/StringReader;)Lnet/minecraft/commands/arguments/coordinates/Coordinates; a
	vec3 ()Lnet/minecraft/commands/arguments/coordinates/Vec3Argument; a
	vec3 (Z)Lnet/minecraft/commands/arguments/coordinates/Vec3Argument; a
net/minecraft/commands/arguments/coordinates/WorldCoordinate es
	ERROR_EXPECTED_DOUBLE a
	ERROR_EXPECTED_INT b
	relative c
	value d
	get (D)D a
	isRelative ()Z a
	isRelative (Lcom/mojang/brigadier/StringReader;)Z b
	parseDouble (Lcom/mojang/brigadier/StringReader;Z)Lnet/minecraft/commands/arguments/coordinates/WorldCoordinate; a
	parseInt (Lcom/mojang/brigadier/StringReader;)Lnet/minecraft/commands/arguments/coordinates/WorldCoordinate; a
net/minecraft/commands/arguments/coordinates/WorldCoordinates et
	x a
	y b
	z c
	absolute (DDD)Lnet/minecraft/commands/arguments/coordinates/WorldCoordinates; a
	absolute (Lnet/minecraft/world/phys/Vec2;)Lnet/minecraft/commands/arguments/coordinates/WorldCoordinates; a
	current ()Lnet/minecraft/commands/arguments/coordinates/WorldCoordinates; d
	getPosition (Lnet/minecraft/commands/CommandSourceStack;)Lnet/minecraft/world/phys/Vec3; a
	getRotation (Lnet/minecraft/commands/CommandSourceStack;)Lnet/minecraft/world/phys/Vec2; b
	isXRelative ()Z a
	isYRelative ()Z b
	isZRelative ()Z c
	parseDouble (Lcom/mojang/brigadier/StringReader;Z)Lnet/minecraft/commands/arguments/coordinates/WorldCoordinates; a
	parseInt (Lcom/mojang/brigadier/StringReader;)Lnet/minecraft/commands/arguments/coordinates/WorldCoordinates; a
net/minecraft/commands/arguments/item/FunctionArgument ev
	ERROR_UNKNOWN_FUNCTION c
	ERROR_UNKNOWN_TAG b
	EXAMPLES a
	functions ()Lnet/minecraft/commands/arguments/item/FunctionArgument; a
	getFunction (Lcom/mojang/brigadier/context/CommandContext;Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/commands/CommandFunction; c
	getFunctionOrTag (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lcom/mojang/datafixers/util/Pair; b
	getFunctionTag (Lcom/mojang/brigadier/context/CommandContext;Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/tags/Tag; d
	getFunctions (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Ljava/util/Collection; a
	parse (Lcom/mojang/brigadier/StringReader;)Lnet/minecraft/commands/arguments/item/FunctionArgument$Result; a
net/minecraft/commands/arguments/item/FunctionArgument$Result ev$a
	create (Lcom/mojang/brigadier/context/CommandContext;)Ljava/util/Collection; a
	unwrap (Lcom/mojang/brigadier/context/CommandContext;)Lcom/mojang/datafixers/util/Pair; b
net/minecraft/commands/arguments/item/ItemArgument ew
	EXAMPLES a
	getItem (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lnet/minecraft/commands/arguments/item/ItemInput; a
	item ()Lnet/minecraft/commands/arguments/item/ItemArgument; a
	parse (Lcom/mojang/brigadier/StringReader;)Lnet/minecraft/commands/arguments/item/ItemInput; a
net/minecraft/commands/arguments/item/ItemInput ex
	ERROR_STACK_TOO_BIG a
	item b
	tag c
	createItemStack (IZ)Lnet/minecraft/world/item/ItemStack; a
	getItem ()Lnet/minecraft/world/item/Item; a
	getTag ()Lnet/minecraft/nbt/CompoundTag; b
	serialize ()Ljava/lang/String; c
	test (Lnet/minecraft/world/item/ItemStack;)Z a
net/minecraft/commands/arguments/item/ItemParser ey
	ERROR_NO_TAGS_ALLOWED a
	ERROR_UNKNOWN_ITEM b
	SUGGEST_NOTHING c
	forTesting e
	item g
	nbt h
	properties f
	reader d
	suggestions k
	tag i
	tagCursor j
	fillSuggestions (Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Lnet/minecraft/tags/TagCollection;)Ljava/util/concurrent/CompletableFuture; a
	getItem ()Lnet/minecraft/world/item/Item; b
	getNbt ()Lnet/minecraft/nbt/CompoundTag; c
	getProperties ()Ljava/util/Map; a
	getTag ()Lnet/minecraft/resources/ResourceLocation; d
	parse ()Lnet/minecraft/commands/arguments/item/ItemParser; h
	readItem ()V e
	readNbt ()V g
	readTag ()V f
	suggestItemIdOrTag (Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Lnet/minecraft/tags/TagCollection;)Ljava/util/concurrent/CompletableFuture; d
	suggestOpenNbt (Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Lnet/minecraft/tags/TagCollection;)Ljava/util/concurrent/CompletableFuture; b
	suggestTag (Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Lnet/minecraft/tags/TagCollection;)Ljava/util/concurrent/CompletableFuture; c
net/minecraft/commands/arguments/item/ItemPredicateArgument ez
	ERROR_UNKNOWN_TAG b
	EXAMPLES a
	getItemPredicate (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Ljava/util/function/Predicate; a
	itemPredicate ()Lnet/minecraft/commands/arguments/item/ItemPredicateArgument; a
	parse (Lcom/mojang/brigadier/StringReader;)Lnet/minecraft/commands/arguments/item/ItemPredicateArgument$Result; a
net/minecraft/commands/arguments/item/ItemPredicateArgument$ItemPredicate ez$a
	item a
	nbt b
	test (Lnet/minecraft/world/item/ItemStack;)Z a
net/minecraft/commands/arguments/item/ItemPredicateArgument$Result ez$b
net/minecraft/commands/arguments/item/ItemPredicateArgument$TagPredicate ez$c
	nbt b
	tag a
	test (Lnet/minecraft/world/item/ItemStack;)Z a
net/minecraft/commands/arguments/selector/EntitySelector fc
	aabb g
	currentEntity i
	entityUUID k
	includesEntities b
	maxResults a
	order h
	playerName j
	position f
	predicate d
	range e
	type l
	usesSelector m
	worldLimited c
	addEntities (Ljava/util/List;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/phys/Vec3;Ljava/util/function/Predicate;)V a
	checkPermissions (Lnet/minecraft/commands/CommandSourceStack;)V e
	findEntities (Lnet/minecraft/commands/CommandSourceStack;)Ljava/util/List; b
	findPlayers (Lnet/minecraft/commands/CommandSourceStack;)Ljava/util/List; d
	findSingleEntity (Lnet/minecraft/commands/CommandSourceStack;)Lnet/minecraft/world/entity/Entity; a
	findSinglePlayer (Lnet/minecraft/commands/CommandSourceStack;)Lnet/minecraft/server/level/ServerPlayer; c
	getMaxResults ()I a
	getPredicate (Lnet/minecraft/world/phys/Vec3;)Ljava/util/function/Predicate; a
	includesEntities ()Z b
	isSelfSelector ()Z c
	isWorldLimited ()Z d
	joinNames (Ljava/util/List;)Lnet/minecraft/network/chat/MutableComponent; a
	sortAndLimit (Lnet/minecraft/world/phys/Vec3;Ljava/util/List;)Ljava/util/List; a
	usesSelector ()Z e
net/minecraft/commands/arguments/selector/EntitySelectorParser fd
	ERROR_EXPECTED_END_OF_OPTIONS e
	ERROR_EXPECTED_OPTION_VALUE f
	ERROR_INVALID_NAME_OR_UUID a
	ERROR_MISSING_SELECTOR_TYPE d
	ERROR_SELECTORS_NOT_ALLOWED c
	ERROR_UNKNOWN_SELECTOR_TYPE b
	ORDER_ARBITRARY g
	ORDER_FURTHEST i
	ORDER_NEAREST h
	ORDER_RANDOM j
	SUGGEST_NOTHING k
	allowSelectors m
	currentEntity C
	deltaX v
	deltaY w
	deltaZ x
	distance q
	entityUUID F
	hasAdvancements S
	hasGamemodeEquals L
	hasGamemodeNotEquals M
	hasNameEquals H
	hasNameNotEquals I
	hasScores R
	hasTeamEquals N
	hasTeamNotEquals O
	includesEntities o
	isLimited J
	isSorted K
	level r
	maxResults n
	order B
	playerName D
	predicate A
	reader l
	rotX y
	rotY z
	startPosition E
	suggestions G
	type P
	typeInverse Q
	usesSelectors T
	worldLimited p
	x s
	y t
	z u
	addPredicate (Ljava/util/function/Predicate;)V a
	createAabb (DDD)Lnet/minecraft/world/phys/AABB; a
	createRotationPredicate (Lnet/minecraft/advancements/critereon/WrappedMinMaxBounds;Ljava/util/function/ToDoubleFunction;)Ljava/util/function/Predicate; a
	fillSelectorSuggestions (Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)V a
	fillSuggestions (Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Ljava/util/function/Consumer;)Ljava/util/concurrent/CompletableFuture; a
	finalizePredicates ()V I
	getDeltaX ()Ljava/lang/Double; p
	getDeltaY ()Ljava/lang/Double; q
	getDeltaZ ()Ljava/lang/Double; r
	getDistance ()Lnet/minecraft/advancements/critereon/MinMaxBounds$Floats; i
	getLevel ()Lnet/minecraft/advancements/critereon/MinMaxBounds$Ints; j
	getOrder ()Ljava/util/function/BiConsumer; s
	getReader ()Lcom/mojang/brigadier/StringReader; g
	getRotX ()Lnet/minecraft/advancements/critereon/WrappedMinMaxBounds; k
	getRotY ()Lnet/minecraft/advancements/critereon/WrappedMinMaxBounds; l
	getSelector ()Lnet/minecraft/commands/arguments/selector/EntitySelector; a
	getX ()Ljava/lang/Double; m
	getY ()Ljava/lang/Double; n
	getZ ()Ljava/lang/Double; o
	hasAdvancements ()Z H
	hasGamemodeEquals ()Z z
	hasGamemodeNotEquals ()Z A
	hasNameEquals ()Z v
	hasNameNotEquals ()Z w
	hasScores ()Z G
	hasTeamEquals ()Z B
	hasTeamNotEquals ()Z C
	isCurrentEntity ()Z u
	isLimited ()Z x
	isSorted ()Z y
	isTag ()Z f
	isTypeLimited ()Z E
	isTypeLimitedInversely ()Z F
	limitToType (Lnet/minecraft/world/entity/EntityType;)V a
	parse ()Lnet/minecraft/commands/arguments/selector/EntitySelector; t
	parseNameOrUUID ()V c
	parseOptions ()V d
	parseSelector ()V b
	setDeltaX (D)V d
	setDeltaY (D)V e
	setDeltaZ (D)V f
	setDistance (Lnet/minecraft/advancements/critereon/MinMaxBounds$Floats;)V a
	setHasAdvancements (Z)V k
	setHasGamemodeEquals (Z)V f
	setHasGamemodeNotEquals (Z)V g
	setHasNameEquals (Z)V b
	setHasNameNotEquals (Z)V c
	setHasScores (Z)V j
	setHasTeamEquals (Z)V h
	setHasTeamNotEquals (Z)V i
	setIncludesEntities (Z)V a
	setLevel (Lnet/minecraft/advancements/critereon/MinMaxBounds$Ints;)V a
	setLimited (Z)V d
	setMaxResults (I)V a
	setOrder (Ljava/util/function/BiConsumer;)V a
	setRotX (Lnet/minecraft/advancements/critereon/WrappedMinMaxBounds;)V a
	setRotY (Lnet/minecraft/advancements/critereon/WrappedMinMaxBounds;)V b
	setSorted (Z)V e
	setSuggestions (Ljava/util/function/BiFunction;)V a
	setTypeLimitedInversely ()V D
	setWorldLimited ()V h
	setX (D)V a
	setY (D)V b
	setZ (D)V c
	shouldInvertValue ()Z e
	suggestEquals (Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Ljava/util/function/Consumer;)Ljava/util/concurrent/CompletableFuture; i
	suggestName (Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Ljava/util/function/Consumer;)Ljava/util/concurrent/CompletableFuture; c
	suggestNameOrSelector (Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Ljava/util/function/Consumer;)Ljava/util/concurrent/CompletableFuture; b
	suggestOpenOptions (Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Ljava/util/function/Consumer;)Ljava/util/concurrent/CompletableFuture; e
	suggestOptionsKey (Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Ljava/util/function/Consumer;)Ljava/util/concurrent/CompletableFuture; g
	suggestOptionsKeyOrClose (Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Ljava/util/function/Consumer;)Ljava/util/concurrent/CompletableFuture; f
	suggestOptionsNextOrClose (Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Ljava/util/function/Consumer;)Ljava/util/concurrent/CompletableFuture; h
	suggestSelector (Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Ljava/util/function/Consumer;)Ljava/util/concurrent/CompletableFuture; d
net/minecraft/commands/arguments/selector/options/EntitySelectorOptions fe
	ERROR_ENTITY_TYPE_INVALID h
	ERROR_GAME_MODE_INVALID g
	ERROR_INAPPLICABLE_OPTION b
	ERROR_LEVEL_NEGATIVE d
	ERROR_LIMIT_TOO_SMALL e
	ERROR_RANGE_NEGATIVE c
	ERROR_SORT_UNKNOWN f
	ERROR_UNKNOWN_OPTION a
	OPTIONS i
	bootStrap ()V a
	get (Lnet/minecraft/commands/arguments/selector/EntitySelectorParser;Ljava/lang/String;I)Lnet/minecraft/commands/arguments/selector/options/EntitySelectorOptions$Modifier; a
	register (Ljava/lang/String;Lnet/minecraft/commands/arguments/selector/options/EntitySelectorOptions$Modifier;Ljava/util/function/Predicate;Lnet/minecraft/network/chat/Component;)V a
	suggestNames (Lnet/minecraft/commands/arguments/selector/EntitySelectorParser;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)V a
net/minecraft/commands/arguments/selector/options/EntitySelectorOptions$Modifier fe$a
net/minecraft/commands/arguments/selector/options/EntitySelectorOptions$Option fe$b
	description c
	modifier a
	predicate b
net/minecraft/commands/synchronization/ArgumentSerializer fj
	deserializeFromNetwork (Lnet/minecraft/network/FriendlyByteBuf;)Lcom/mojang/brigadier/arguments/ArgumentType; b
	serializeToJson (Lcom/mojang/brigadier/arguments/ArgumentType;Lcom/google/gson/JsonObject;)V a
	serializeToNetwork (Lcom/mojang/brigadier/arguments/ArgumentType;Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/commands/synchronization/ArgumentTypes fk
	BY_CLASS b
	BY_NAME c
	LOGGER a
	bootStrap ()V a
	deserialize (Lnet/minecraft/network/FriendlyByteBuf;)Lcom/mojang/brigadier/arguments/ArgumentType; a
	findUsedArgumentTypes (Lcom/mojang/brigadier/tree/CommandNode;)Ljava/util/Set; a
	findUsedArgumentTypes (Lcom/mojang/brigadier/tree/CommandNode;Ljava/util/Set;Ljava/util/Set;)V a
	get (Lcom/mojang/brigadier/arguments/ArgumentType;)Lnet/minecraft/commands/synchronization/ArgumentTypes$Entry; b
	get (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/commands/synchronization/ArgumentTypes$Entry; a
	isTypeRegistered (Lcom/mojang/brigadier/arguments/ArgumentType;)Z a
	register (Ljava/lang/String;Ljava/lang/Class;Lnet/minecraft/commands/synchronization/ArgumentSerializer;)V a
	serialize (Lnet/minecraft/network/FriendlyByteBuf;Lcom/mojang/brigadier/arguments/ArgumentType;)V a
	serializeNodeToJson (Lcom/mojang/brigadier/CommandDispatcher;Lcom/mojang/brigadier/tree/CommandNode;)Lcom/google/gson/JsonObject; a
	serializeToJson (Lcom/google/gson/JsonObject;Lcom/mojang/brigadier/arguments/ArgumentType;)V a
net/minecraft/commands/synchronization/ArgumentTypes$Entry fk$a
	clazz a
	name c
	serializer b
net/minecraft/commands/synchronization/EmptyArgumentSerializer fl
	constructor a
	deserializeFromNetwork (Lnet/minecraft/network/FriendlyByteBuf;)Lcom/mojang/brigadier/arguments/ArgumentType; b
	serializeToJson (Lcom/mojang/brigadier/arguments/ArgumentType;Lcom/google/gson/JsonObject;)V a
	serializeToNetwork (Lcom/mojang/brigadier/arguments/ArgumentType;Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/commands/synchronization/SuggestionProviders fm
	ALL_RECIPES b
	ASK_SERVER a
	AVAILABLE_BIOMES d
	AVAILABLE_SOUNDS c
	DEFAULT_NAME g
	PROVIDERS_BY_NAME f
	SUMMONABLE_ENTITIES e
	getName (Lcom/mojang/brigadier/suggestion/SuggestionProvider;)Lnet/minecraft/resources/ResourceLocation; a
	getProvider (Lnet/minecraft/resources/ResourceLocation;)Lcom/mojang/brigadier/suggestion/SuggestionProvider; a
	register (Lnet/minecraft/resources/ResourceLocation;Lcom/mojang/brigadier/suggestion/SuggestionProvider;)Lcom/mojang/brigadier/suggestion/SuggestionProvider; a
	safelySwap (Lcom/mojang/brigadier/suggestion/SuggestionProvider;)Lcom/mojang/brigadier/suggestion/SuggestionProvider; b
net/minecraft/commands/synchronization/SuggestionProviders$Wrapper fm$a
	delegate a
	name b
net/minecraft/commands/synchronization/brigadier/BrigadierArgumentSerializers fn
	bootstrap ()V a
	createNumberFlags (ZZ)B a
	numberHasMax (B)Z b
	numberHasMin (B)Z a
net/minecraft/commands/synchronization/brigadier/DoubleArgumentSerializer fo
	deserializeFromNetwork (Lnet/minecraft/network/FriendlyByteBuf;)Lcom/mojang/brigadier/arguments/ArgumentType; b
	deserializeFromNetwork (Lnet/minecraft/network/FriendlyByteBuf;)Lcom/mojang/brigadier/arguments/DoubleArgumentType; a
	serializeToJson (Lcom/mojang/brigadier/arguments/ArgumentType;Lcom/google/gson/JsonObject;)V a
	serializeToJson (Lcom/mojang/brigadier/arguments/DoubleArgumentType;Lcom/google/gson/JsonObject;)V a
	serializeToNetwork (Lcom/mojang/brigadier/arguments/ArgumentType;Lnet/minecraft/network/FriendlyByteBuf;)V a
	serializeToNetwork (Lcom/mojang/brigadier/arguments/DoubleArgumentType;Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/commands/synchronization/brigadier/FloatArgumentSerializer fp
	deserializeFromNetwork (Lnet/minecraft/network/FriendlyByteBuf;)Lcom/mojang/brigadier/arguments/ArgumentType; b
	deserializeFromNetwork (Lnet/minecraft/network/FriendlyByteBuf;)Lcom/mojang/brigadier/arguments/FloatArgumentType; a
	serializeToJson (Lcom/mojang/brigadier/arguments/ArgumentType;Lcom/google/gson/JsonObject;)V a
	serializeToJson (Lcom/mojang/brigadier/arguments/FloatArgumentType;Lcom/google/gson/JsonObject;)V a
	serializeToNetwork (Lcom/mojang/brigadier/arguments/ArgumentType;Lnet/minecraft/network/FriendlyByteBuf;)V a
	serializeToNetwork (Lcom/mojang/brigadier/arguments/FloatArgumentType;Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/commands/synchronization/brigadier/IntegerArgumentSerializer fq
	deserializeFromNetwork (Lnet/minecraft/network/FriendlyByteBuf;)Lcom/mojang/brigadier/arguments/ArgumentType; b
	deserializeFromNetwork (Lnet/minecraft/network/FriendlyByteBuf;)Lcom/mojang/brigadier/arguments/IntegerArgumentType; a
	serializeToJson (Lcom/mojang/brigadier/arguments/ArgumentType;Lcom/google/gson/JsonObject;)V a
	serializeToJson (Lcom/mojang/brigadier/arguments/IntegerArgumentType;Lcom/google/gson/JsonObject;)V a
	serializeToNetwork (Lcom/mojang/brigadier/arguments/ArgumentType;Lnet/minecraft/network/FriendlyByteBuf;)V a
	serializeToNetwork (Lcom/mojang/brigadier/arguments/IntegerArgumentType;Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/commands/synchronization/brigadier/LongArgumentSerializer fr
	deserializeFromNetwork (Lnet/minecraft/network/FriendlyByteBuf;)Lcom/mojang/brigadier/arguments/ArgumentType; b
	deserializeFromNetwork (Lnet/minecraft/network/FriendlyByteBuf;)Lcom/mojang/brigadier/arguments/LongArgumentType; a
	serializeToJson (Lcom/mojang/brigadier/arguments/ArgumentType;Lcom/google/gson/JsonObject;)V a
	serializeToJson (Lcom/mojang/brigadier/arguments/LongArgumentType;Lcom/google/gson/JsonObject;)V a
	serializeToNetwork (Lcom/mojang/brigadier/arguments/ArgumentType;Lnet/minecraft/network/FriendlyByteBuf;)V a
	serializeToNetwork (Lcom/mojang/brigadier/arguments/LongArgumentType;Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/commands/synchronization/brigadier/StringArgumentSerializer fs
	deserializeFromNetwork (Lnet/minecraft/network/FriendlyByteBuf;)Lcom/mojang/brigadier/arguments/ArgumentType; b
	deserializeFromNetwork (Lnet/minecraft/network/FriendlyByteBuf;)Lcom/mojang/brigadier/arguments/StringArgumentType; a
	serializeToJson (Lcom/mojang/brigadier/arguments/ArgumentType;Lcom/google/gson/JsonObject;)V a
	serializeToJson (Lcom/mojang/brigadier/arguments/StringArgumentType;Lcom/google/gson/JsonObject;)V a
	serializeToNetwork (Lcom/mojang/brigadier/arguments/ArgumentType;Lnet/minecraft/network/FriendlyByteBuf;)V a
	serializeToNetwork (Lcom/mojang/brigadier/arguments/StringArgumentType;Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/core/AxisCycle fv
	$VALUES f
	AXIS_VALUES d
	BACKWARD c
	FORWARD b
	NONE a
	VALUES e
	between (Lnet/minecraft/core/Direction$Axis;Lnet/minecraft/core/Direction$Axis;)Lnet/minecraft/core/AxisCycle; a
	cycle (DDDLnet/minecraft/core/Direction$Axis;)D a
	cycle (IIILnet/minecraft/core/Direction$Axis;)I a
	cycle (Lnet/minecraft/core/Direction$Axis;)Lnet/minecraft/core/Direction$Axis; a
	inverse ()Lnet/minecraft/core/AxisCycle; a
net/minecraft/core/BlockMath fw
	LOGGER c
	vanillaUvTransformGlobalToLocal b
	vanillaUvTransformLocalToGlobal a
	blockCenterToCorner (Lcom/mojang/math/Transformation;)Lcom/mojang/math/Transformation; a
	blockCornerToCenter (Lcom/mojang/math/Transformation;)Lcom/mojang/math/Transformation; b
	getUVLockTransform (Lcom/mojang/math/Transformation;Lnet/minecraft/core/Direction;Ljava/util/function/Supplier;)Lcom/mojang/math/Transformation; a
net/minecraft/core/BlockPos fx
	CODEC a
	LOGGER e
	PACKED_X_LENGTH f
	PACKED_X_MASK i
	PACKED_Y_LENGTH h
	PACKED_Y_MASK j
	PACKED_Z_LENGTH g
	PACKED_Z_MASK k
	X_OFFSET m
	ZERO b
	Z_OFFSET l
	above ()Lnet/minecraft/core/BlockPos; b
	above ()Lnet/minecraft/core/Vec3i; o
	above (I)Lnet/minecraft/core/BlockPos; b
	above (I)Lnet/minecraft/core/Vec3i; m
	asLong ()J a
	asLong (III)J a
	below ()Lnet/minecraft/core/BlockPos; c
	below ()Lnet/minecraft/core/Vec3i; n
	below (I)Lnet/minecraft/core/BlockPos; c
	below (I)Lnet/minecraft/core/Vec3i; l
	betweenClosed (IIIIII)Ljava/lang/Iterable; b
	betweenClosed (Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Ljava/lang/Iterable; a
	betweenClosedStream (IIIIII)Ljava/util/stream/Stream; a
	betweenClosedStream (Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Ljava/util/stream/Stream; b
	betweenClosedStream (Lnet/minecraft/world/level/levelgen/structure/BoundingBox;)Ljava/util/stream/Stream; a
	betweenClosedStream (Lnet/minecraft/world/phys/AABB;)Ljava/util/stream/Stream; a
	cross (Lnet/minecraft/core/Vec3i;)Lnet/minecraft/core/BlockPos; c
	cross (Lnet/minecraft/core/Vec3i;)Lnet/minecraft/core/Vec3i; d
	east ()Lnet/minecraft/core/BlockPos; g
	east ()Lnet/minecraft/core/Vec3i; j
	east (I)Lnet/minecraft/core/BlockPos; g
	east (I)Lnet/minecraft/core/Vec3i; h
	findClosestMatch (Lnet/minecraft/core/BlockPos;IILjava/util/function/Predicate;)Ljava/util/Optional; a
	getFlatIndex (J)J f
	getX (J)I b
	getY (J)I c
	getZ (J)I d
	immutable ()Lnet/minecraft/core/BlockPos; h
	isOutsideBuildHeight (J)Z a
	multiply (I)Lnet/minecraft/core/BlockPos; a
	multiply (I)Lnet/minecraft/core/Vec3i; n
	mutable ()Lnet/minecraft/core/BlockPos$MutableBlockPos; i
	north ()Lnet/minecraft/core/BlockPos; d
	north ()Lnet/minecraft/core/Vec3i; m
	north (I)Lnet/minecraft/core/BlockPos; d
	north (I)Lnet/minecraft/core/Vec3i; k
	of (J)Lnet/minecraft/core/BlockPos; e
	offset (DDD)Lnet/minecraft/core/BlockPos; a
	offset (DDD)Lnet/minecraft/core/Vec3i; b
	offset (III)Lnet/minecraft/core/BlockPos; b
	offset (III)Lnet/minecraft/core/Vec3i; c
	offset (JIII)J a
	offset (JLnet/minecraft/core/Direction;)J a
	offset (Lnet/minecraft/core/Vec3i;)Lnet/minecraft/core/BlockPos; a
	offset (Lnet/minecraft/core/Vec3i;)Lnet/minecraft/core/Vec3i; f
	randomBetweenClosed (Ljava/util/Random;IIIIIII)Ljava/lang/Iterable; a
	relative (Lnet/minecraft/core/Direction$Axis;I)Lnet/minecraft/core/BlockPos; a
	relative (Lnet/minecraft/core/Direction$Axis;I)Lnet/minecraft/core/Vec3i; b
	relative (Lnet/minecraft/core/Direction;)Lnet/minecraft/core/BlockPos; a
	relative (Lnet/minecraft/core/Direction;)Lnet/minecraft/core/Vec3i; b
	relative (Lnet/minecraft/core/Direction;I)Lnet/minecraft/core/BlockPos; a
	relative (Lnet/minecraft/core/Direction;I)Lnet/minecraft/core/Vec3i; b
	rotate (Lnet/minecraft/world/level/block/Rotation;)Lnet/minecraft/core/BlockPos; a
	south ()Lnet/minecraft/core/BlockPos; e
	south ()Lnet/minecraft/core/Vec3i; l
	south (I)Lnet/minecraft/core/BlockPos; e
	south (I)Lnet/minecraft/core/Vec3i; j
	spiralAround (Lnet/minecraft/core/BlockPos;ILnet/minecraft/core/Direction;Lnet/minecraft/core/Direction;)Ljava/lang/Iterable; a
	subtract (Lnet/minecraft/core/Vec3i;)Lnet/minecraft/core/BlockPos; b
	subtract (Lnet/minecraft/core/Vec3i;)Lnet/minecraft/core/Vec3i; e
	west ()Lnet/minecraft/core/BlockPos; f
	west ()Lnet/minecraft/core/Vec3i; k
	west (I)Lnet/minecraft/core/BlockPos; f
	west (I)Lnet/minecraft/core/Vec3i; i
	withinManhattan (Lnet/minecraft/core/BlockPos;III)Ljava/lang/Iterable; a
	withinManhattanStream (Lnet/minecraft/core/BlockPos;III)Ljava/util/stream/Stream; b
net/minecraft/core/BlockPos$MutableBlockPos fx$a
	above ()Lnet/minecraft/core/Vec3i; o
	above (I)Lnet/minecraft/core/Vec3i; m
	below ()Lnet/minecraft/core/Vec3i; n
	below (I)Lnet/minecraft/core/Vec3i; l
	clamp (Lnet/minecraft/core/Direction$Axis;II)Lnet/minecraft/core/BlockPos$MutableBlockPos; a
	cross (Lnet/minecraft/core/Vec3i;)Lnet/minecraft/core/Vec3i; d
	east ()Lnet/minecraft/core/Vec3i; j
	east (I)Lnet/minecraft/core/Vec3i; h
	immutable ()Lnet/minecraft/core/BlockPos; h
	move (III)Lnet/minecraft/core/BlockPos$MutableBlockPos; e
	move (Lnet/minecraft/core/Direction;)Lnet/minecraft/core/BlockPos$MutableBlockPos; c
	move (Lnet/minecraft/core/Direction;I)Lnet/minecraft/core/BlockPos$MutableBlockPos; c
	move (Lnet/minecraft/core/Vec3i;)Lnet/minecraft/core/BlockPos$MutableBlockPos; h
	multiply (I)Lnet/minecraft/core/BlockPos; a
	multiply (I)Lnet/minecraft/core/Vec3i; n
	north ()Lnet/minecraft/core/Vec3i; m
	north (I)Lnet/minecraft/core/Vec3i; k
	offset (DDD)Lnet/minecraft/core/BlockPos; a
	offset (DDD)Lnet/minecraft/core/Vec3i; b
	offset (III)Lnet/minecraft/core/BlockPos; b
	offset (III)Lnet/minecraft/core/Vec3i; c
	offset (Lnet/minecraft/core/Vec3i;)Lnet/minecraft/core/Vec3i; f
	relative (Lnet/minecraft/core/Direction$Axis;I)Lnet/minecraft/core/BlockPos; a
	relative (Lnet/minecraft/core/Direction$Axis;I)Lnet/minecraft/core/Vec3i; b
	relative (Lnet/minecraft/core/Direction;)Lnet/minecraft/core/Vec3i; b
	relative (Lnet/minecraft/core/Direction;I)Lnet/minecraft/core/BlockPos; a
	relative (Lnet/minecraft/core/Direction;I)Lnet/minecraft/core/Vec3i; b
	rotate (Lnet/minecraft/world/level/block/Rotation;)Lnet/minecraft/core/BlockPos; a
	set (DDD)Lnet/minecraft/core/BlockPos$MutableBlockPos; c
	set (III)Lnet/minecraft/core/BlockPos$MutableBlockPos; d
	set (J)Lnet/minecraft/core/BlockPos$MutableBlockPos; g
	set (Lnet/minecraft/core/AxisCycle;III)Lnet/minecraft/core/BlockPos$MutableBlockPos; a
	set (Lnet/minecraft/core/Vec3i;)Lnet/minecraft/core/BlockPos$MutableBlockPos; g
	setWithOffset (Lnet/minecraft/core/Vec3i;III)Lnet/minecraft/core/BlockPos$MutableBlockPos; a
	setWithOffset (Lnet/minecraft/core/Vec3i;Lnet/minecraft/core/Direction;)Lnet/minecraft/core/BlockPos$MutableBlockPos; a
	setWithOffset (Lnet/minecraft/core/Vec3i;Lnet/minecraft/core/Vec3i;)Lnet/minecraft/core/BlockPos$MutableBlockPos; a
	setX (I)V o
	setY (I)V p
	setZ (I)V q
	south ()Lnet/minecraft/core/Vec3i; l
	south (I)Lnet/minecraft/core/Vec3i; j
	subtract (Lnet/minecraft/core/Vec3i;)Lnet/minecraft/core/Vec3i; e
	west ()Lnet/minecraft/core/Vec3i; k
	west (I)Lnet/minecraft/core/Vec3i; i
net/minecraft/core/BlockSource fy
	getBlockState ()Lnet/minecraft/world/level/block/state/BlockState; e
	getEntity ()Lnet/minecraft/world/level/block/entity/BlockEntity; g
	getLevel ()Lnet/minecraft/server/level/ServerLevel; h
	getMaterial ()Lnet/minecraft/world/level/material/Material; f
	getPos ()Lnet/minecraft/core/BlockPos; d
	x ()D a
	y ()D b
	z ()D c
net/minecraft/core/BlockSourceImpl fz
	level a
	pos b
	getBlockState ()Lnet/minecraft/world/level/block/state/BlockState; e
	getEntity ()Lnet/minecraft/world/level/block/entity/BlockEntity; g
	getLevel ()Lnet/minecraft/server/level/ServerLevel; h
	getMaterial ()Lnet/minecraft/world/level/material/Material; f
	getPos ()Lnet/minecraft/core/BlockPos; d
	x ()D a
	y ()D b
	z ()D c
net/minecraft/core/Cursor3D ga
	depth f
	end g
	height e
	index h
	originX a
	originY b
	originZ c
	width d
	x i
	y j
	z k
	advance ()Z a
	getNextType ()I e
	nextX ()I b
	nextY ()I c
	nextZ ()I d
net/minecraft/core/DefaultedRegistry gb
	defaultKey bf
	defaultValue bg
	byId (I)Ljava/lang/Object; a
	get (Lnet/minecraft/resources/ResourceLocation;)Ljava/lang/Object; a
	getDefaultKey ()Lnet/minecraft/resources/ResourceLocation; a
	getId (Ljava/lang/Object;)I a
	getKey (Ljava/lang/Object;)Lnet/minecraft/resources/ResourceLocation; b
	getOptional (Lnet/minecraft/resources/ResourceLocation;)Ljava/util/Optional; b
	getRandom (Ljava/util/Random;)Ljava/lang/Object; a
	registerMapping (ILnet/minecraft/resources/ResourceKey;Ljava/lang/Object;Lcom/mojang/serialization/Lifecycle;)Ljava/lang/Object; a
net/minecraft/core/Direction gc
	$VALUES s
	BY_2D_DATA q
	BY_3D_DATA p
	BY_NAME o
	BY_NORMAL r
	DOWN a
	EAST f
	NORTH c
	SOUTH d
	UP b
	VALUES n
	WEST e
	axis k
	axisDirection l
	data2d i
	data3d g
	name j
	normal m
	oppositeIndex h
	byName (Ljava/lang/String;)Lnet/minecraft/core/Direction; a
	from2DDataValue (I)Lnet/minecraft/core/Direction; b
	from3DDataValue (I)Lnet/minecraft/core/Direction; a
	fromAxisAndDirection (Lnet/minecraft/core/Direction$Axis;Lnet/minecraft/core/Direction$AxisDirection;)Lnet/minecraft/core/Direction; a
	fromNormal (III)Lnet/minecraft/core/Direction; a
	fromNormal (Lnet/minecraft/core/BlockPos;)Lnet/minecraft/core/Direction; a
	fromYRot (D)Lnet/minecraft/core/Direction; a
	get (Lnet/minecraft/core/Direction$AxisDirection;Lnet/minecraft/core/Direction$Axis;)Lnet/minecraft/core/Direction; a
	get2DDataValue ()I d
	get3DDataValue ()I c
	getAxis ()Lnet/minecraft/core/Direction$Axis; n
	getAxisDirection ()Lnet/minecraft/core/Direction$AxisDirection; e
	getClockWise ()Lnet/minecraft/core/Direction; g
	getClockWise (Lnet/minecraft/core/Direction$Axis;)Lnet/minecraft/core/Direction; a
	getClockWiseX ()Lnet/minecraft/core/Direction; q
	getClockWiseZ ()Lnet/minecraft/core/Direction; s
	getCounterClockWise ()Lnet/minecraft/core/Direction; h
	getCounterClockWise (Lnet/minecraft/core/Direction$Axis;)Lnet/minecraft/core/Direction; b
	getCounterClockWiseX ()Lnet/minecraft/core/Direction; r
	getCounterClockWiseZ ()Lnet/minecraft/core/Direction; t
	getName ()Ljava/lang/String; m
	getNearest (DDD)Lnet/minecraft/core/Direction; a
	getNearest (FFF)Lnet/minecraft/core/Direction; a
	getNormal ()Lnet/minecraft/core/Vec3i; p
	getOpposite ()Lnet/minecraft/core/Direction; f
	getRandom (Ljava/util/Random;)Lnet/minecraft/core/Direction; a
	getRotation ()Lcom/mojang/math/Quaternion; b
	getSerializedName ()Ljava/lang/String; a
	getStepX ()I i
	getStepY ()I j
	getStepZ ()I k
	isFacingAngle (F)Z a
	makeDirectionArray (Lnet/minecraft/core/Direction;Lnet/minecraft/core/Direction;Lnet/minecraft/core/Direction;)[Lnet/minecraft/core/Direction; a
	orderedByNearest (Lnet/minecraft/world/entity/Entity;)[Lnet/minecraft/core/Direction; a
	rotate (Lcom/mojang/math/Matrix4f;Lnet/minecraft/core/Direction;)Lnet/minecraft/core/Direction; a
	step ()Lcom/mojang/math/Vector3f; l
	toYRot ()F o
net/minecraft/core/Direction$Axis gc$a
	$VALUES h
	BY_NAME f
	CODEC d
	VALUES e
	X a
	Y b
	Z c
	name g
	byName (Ljava/lang/String;)Lnet/minecraft/core/Direction$Axis; a
	choose (DDD)D a
	choose (III)I a
	getName ()Ljava/lang/String; b
	getPlane ()Lnet/minecraft/core/Direction$Plane; e
	getRandom (Ljava/util/Random;)Lnet/minecraft/core/Direction$Axis; a
	getSerializedName ()Ljava/lang/String; a
	isHorizontal ()Z d
	isVertical ()Z c
	test (Lnet/minecraft/core/Direction;)Z a
net/minecraft/core/Direction$AxisDirection gc$b
	$VALUES e
	NEGATIVE b
	POSITIVE a
	name d
	step c
	getName ()Ljava/lang/String; b
	getStep ()I a
	opposite ()Lnet/minecraft/core/Direction$AxisDirection; c
net/minecraft/core/Direction$Plane gc$c
	$VALUES e
	HORIZONTAL a
	VERTICAL b
	axis d
	faces c
	getRandomAxis (Ljava/util/Random;)Lnet/minecraft/core/Direction$Axis; b
	getRandomDirection (Ljava/util/Random;)Lnet/minecraft/core/Direction; a
	stream ()Ljava/util/stream/Stream; a
	test (Lnet/minecraft/core/Direction;)Z a
net/minecraft/core/Direction8 gd
	$VALUES r
	EAST c
	EAST_MASK n
	NORTH a
	NORTH_EAST b
	NORTH_EAST_MASK o
	NORTH_MASK p
	NORTH_WEST h
	NORTH_WEST_MASK i
	SOUTH e
	SOUTH_EAST d
	SOUTH_EAST_MASK m
	SOUTH_MASK l
	SOUTH_WEST f
	SOUTH_WEST_MASK k
	WEST g
	WEST_MASK j
	directions q
	getDirections ()Ljava/util/Set; a
	getSideMask (ZZZZ)I a
net/minecraft/core/FrontAndTop ge
	$VALUES q
	DOWN_EAST a
	DOWN_NORTH b
	DOWN_SOUTH c
	DOWN_WEST d
	EAST_UP j
	LOOKUP_TOP_FRONT m
	NORTH_UP k
	SOUTH_UP l
	UP_EAST e
	UP_NORTH f
	UP_SOUTH g
	UP_WEST h
	WEST_UP i
	front p
	name n
	top o
	fromFrontAndTop (Lnet/minecraft/core/Direction;Lnet/minecraft/core/Direction;)Lnet/minecraft/core/FrontAndTop; a
	front ()Lnet/minecraft/core/Direction; b
	getSerializedName ()Ljava/lang/String; a
	lookupKey (Lnet/minecraft/core/Direction;Lnet/minecraft/core/Direction;)I b
	top ()Lnet/minecraft/core/Direction; c
net/minecraft/core/GlobalPos gf
	CODEC a
	dimension b
	pos c
	dimension ()Lnet/minecraft/resources/ResourceKey; a
	of (Lnet/minecraft/resources/ResourceKey;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/core/GlobalPos; a
	pos ()Lnet/minecraft/core/BlockPos; b
net/minecraft/core/IdMap gg
	byId (I)Ljava/lang/Object; a
	getId (Ljava/lang/Object;)I a
net/minecraft/core/IdMapper gh
	idToT c
	nextId a
	tToId b
	add (Ljava/lang/Object;)V b
	addMapping (Ljava/lang/Object;I)V a
	byId (I)Ljava/lang/Object; a
	contains (I)Z b
	getId (Ljava/lang/Object;)I a
	size ()I a
net/minecraft/core/MappedRegistry gi
	LOGGER a
	byId bf
	elementsLifecycle bk
	keyStorage bi
	lifecycles bj
	nextId bl
	randomCache b
	storage bh
	toId bg
	byId (I)Ljava/lang/Object; a
	containsKey (Lnet/minecraft/resources/ResourceKey;)Z b
	containsKey (Lnet/minecraft/resources/ResourceLocation;)Z c
	dataPackCodec (Lnet/minecraft/resources/ResourceKey;Lcom/mojang/serialization/Lifecycle;Lcom/mojang/serialization/Codec;)Lcom/mojang/serialization/Codec; b
	directCodec (Lnet/minecraft/resources/ResourceKey;Lcom/mojang/serialization/Lifecycle;Lcom/mojang/serialization/Codec;)Lcom/mojang/serialization/Codec; c
	elementsLifecycle ()Lcom/mojang/serialization/Lifecycle; b
	entrySet ()Ljava/util/Set; d
	get (Lnet/minecraft/resources/ResourceKey;)Ljava/lang/Object; a
	get (Lnet/minecraft/resources/ResourceLocation;)Ljava/lang/Object; a
	getId (Ljava/lang/Object;)I a
	getKey (Ljava/lang/Object;)Lnet/minecraft/resources/ResourceLocation; b
	getRandom (Ljava/util/Random;)Ljava/lang/Object; a
	getResourceKey (Ljava/lang/Object;)Ljava/util/Optional; c
	isEmpty ()Z e
	keySet ()Ljava/util/Set; c
	lifecycle (Ljava/lang/Object;)Lcom/mojang/serialization/Lifecycle; d
	networkCodec (Lnet/minecraft/resources/ResourceKey;Lcom/mojang/serialization/Lifecycle;Lcom/mojang/serialization/Codec;)Lcom/mojang/serialization/Codec; a
	register (Lnet/minecraft/resources/ResourceKey;Ljava/lang/Object;Lcom/mojang/serialization/Lifecycle;)Ljava/lang/Object; a
	registerMapping (ILnet/minecraft/resources/ResourceKey;Ljava/lang/Object;Lcom/mojang/serialization/Lifecycle;)Ljava/lang/Object; a
	registerMapping (ILnet/minecraft/resources/ResourceKey;Ljava/lang/Object;Lcom/mojang/serialization/Lifecycle;Z)Ljava/lang/Object; a
	registerOrOverride (Ljava/util/OptionalInt;Lnet/minecraft/resources/ResourceKey;Ljava/lang/Object;Lcom/mojang/serialization/Lifecycle;)Ljava/lang/Object; a
	withNameAndId (Lnet/minecraft/resources/ResourceKey;Lcom/mojang/serialization/MapCodec;)Lcom/mojang/serialization/MapCodec; a
net/minecraft/core/MappedRegistry$RegistryEntry gi$a
	id b
	key a
	value c
net/minecraft/core/NonNullList gj
	defaultValue b
	list a
	create ()Lnet/minecraft/core/NonNullList; a
	of (Ljava/lang/Object;[Ljava/lang/Object;)Lnet/minecraft/core/NonNullList; a
	withSize (ILjava/lang/Object;)Lnet/minecraft/core/NonNullList; a
net/minecraft/core/Position gk
	x ()D a
	y ()D b
	z ()D c
net/minecraft/core/PositionImpl gl
	x a
	y b
	z c
	x ()D a
	y ()D b
	z ()D c
net/minecraft/core/Registry gm
	ACTIVITY an
	ACTIVITY_REGISTRY G
	ATTRIBUTE af
	ATTRIBUTE_REGISTRY y
	BIOME_REGISTRY ay
	BIOME_SOURCE bb
	BIOME_SOURCE_REGISTRY aR
	BLOCK Q
	BLOCKSTATE_PROVIDER_TYPES aV
	BLOCK_ENTITY_TYPE W
	BLOCK_ENTITY_TYPE_REGISTRY p
	BLOCK_PLACER_TYPES aW
	BLOCK_PLACER_TYPE_REGISTRY aM
	BLOCK_REGISTRY j
	BLOCK_STATE_PROVIDER_TYPE_REGISTRY aL
	CARVER aC
	CARVER_REGISTRY aB
	CHUNK_GENERATOR bc
	CHUNK_GENERATOR_REGISTRY aS
	CHUNK_STATUS Z
	CHUNK_STATUS_REGISTRY s
	CONFIGURED_CARVER_REGISTRY at
	CONFIGURED_FEATURE_REGISTRY au
	CONFIGURED_STRUCTURE_FEATURE_REGISTRY av
	CONFIGURED_SURFACE_BUILDER_REGISTRY as
	CUSTOM_STAT Y
	CUSTOM_STAT_REGISTRY r
	DECORATOR aK
	DECORATOR_REGISTRY aJ
	DIMENSION_REGISTRY L
	DIMENSION_TYPE_REGISTRY K
	ENCHANTMENT R
	ENCHANTMENT_REGISTRY k
	ENTITY_TYPE S
	ENTITY_TYPE_REGISTRY l
	FEATURE aE
	FEATURE_REGISTRY aD
	FEATURE_SIZE_TYPES ba
	FEATURE_SIZE_TYPE_REGISTRY aQ
	FLUID O
	FLUID_REGISTRY h
	FOLIAGE_PLACER_TYPES aX
	FOLIAGE_PLACER_TYPE_REGISTRY aN
	ITEM T
	ITEM_REGISTRY m
	LEVEL_STEM_REGISTRY M
	LOADERS a
	LOGGER c
	LOOT_CONDITION_TYPE aq
	LOOT_ENTRY_REGISTRY H
	LOOT_FUNCTION_REGISTRY I
	LOOT_FUNCTION_TYPE ap
	LOOT_ITEM_REGISTRY J
	LOOT_POOL_ENTRY_TYPE ao
	MEMORY_MODULE_TYPE ak
	MEMORY_MODULE_TYPE_REGISTRY D
	MENU ac
	MENU_REGISTRY v
	MOB_EFFECT P
	MOB_EFFECT_REGISTRY i
	MOTIVE X
	MOTIVE_REGISTRY q
	NOISE_GENERATOR_SETTINGS_REGISTRY ar
	PARTICLE_TYPE V
	PARTICLE_TYPE_REGISTRY o
	POINT_OF_INTEREST_TYPE aj
	POINT_OF_INTEREST_TYPE_REGISTRY C
	POS_RULE_TEST ab
	POS_RULE_TEST_REGISTRY u
	POTION U
	POTION_REGISTRY n
	PROCESSOR_LIST_REGISTRY aw
	RECIPE_SERIALIZER ae
	RECIPE_SERIALIZER_REGISTRY x
	RECIPE_TYPE ad
	RECIPE_TYPE_REGISTRY w
	REGISTRY f
	ROOT_REGISTRY_NAME d
	RULE_TEST aa
	RULE_TEST_REGISTRY t
	SCHEDULE am
	SCHEDULE_REGISTRY F
	SENSOR_TYPE al
	SENSOR_TYPE_REGISTRY E
	SOUND_EVENT N
	SOUND_EVENT_REGISTRY g
	STAT_TYPE ag
	STAT_TYPE_REGISTRY z
	STRUCTURE_FEATURE aG
	STRUCTURE_FEATURE_REGISTRY aF
	STRUCTURE_PIECE aI
	STRUCTURE_PIECE_REGISTRY aH
	STRUCTURE_POOL_ELEMENT be
	STRUCTURE_POOL_ELEMENT_REGISTRY aU
	STRUCTURE_PROCESSOR bd
	STRUCTURE_PROCESSOR_REGISTRY aT
	SURFACE_BUILDER aA
	SURFACE_BUILDER_REGISTRY az
	TEMPLATE_POOL_REGISTRY ax
	TREE_DECORATOR_TYPES aZ
	TREE_DECORATOR_TYPE_REGISTRY aP
	TRUNK_PLACER_TYPES aY
	TRUNK_PLACER_TYPE_REGISTRY aO
	VILLAGER_PROFESSION ai
	VILLAGER_PROFESSION_REGISTRY B
	VILLAGER_TYPE ah
	VILLAGER_TYPE_REGISTRY A
	WRITABLE_REGISTRY e
	key b
	lifecycle bf
	checkRegistry (Lnet/minecraft/core/WritableRegistry;)V a
	containsKey (Lnet/minecraft/resources/ResourceKey;)Z b
	containsKey (Lnet/minecraft/resources/ResourceLocation;)Z c
	createRegistryKey (Ljava/lang/String;)Lnet/minecraft/resources/ResourceKey; a
	elementsLifecycle ()Lcom/mojang/serialization/Lifecycle; b
	entrySet ()Ljava/util/Set; d
	get (Lnet/minecraft/resources/ResourceKey;)Ljava/lang/Object; a
	get (Lnet/minecraft/resources/ResourceLocation;)Ljava/lang/Object; a
	getId (Ljava/lang/Object;)I a
	getKey (Ljava/lang/Object;)Lnet/minecraft/resources/ResourceLocation; b
	getOptional (Lnet/minecraft/resources/ResourceKey;)Ljava/util/Optional; c
	getOptional (Lnet/minecraft/resources/ResourceLocation;)Ljava/util/Optional; b
	getOrThrow (Lnet/minecraft/resources/ResourceKey;)Ljava/lang/Object; d
	getRandom (Ljava/util/Random;)Ljava/lang/Object; a
	getResourceKey (Ljava/lang/Object;)Ljava/util/Optional; c
	internalRegister (Lnet/minecraft/resources/ResourceKey;Lnet/minecraft/core/WritableRegistry;Ljava/util/function/Supplier;Lcom/mojang/serialization/Lifecycle;)Lnet/minecraft/core/WritableRegistry; a
	key ()Lnet/minecraft/resources/ResourceKey; f
	keySet ()Ljava/util/Set; c
	lifecycle (Ljava/lang/Object;)Lcom/mojang/serialization/Lifecycle; d
	register (Lnet/minecraft/core/Registry;Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object; a
	register (Lnet/minecraft/core/Registry;Lnet/minecraft/resources/ResourceLocation;Ljava/lang/Object;)Ljava/lang/Object; a
	registerDefaulted (Lnet/minecraft/resources/ResourceKey;Ljava/lang/String;Lcom/mojang/serialization/Lifecycle;Ljava/util/function/Supplier;)Lnet/minecraft/core/DefaultedRegistry; a
	registerDefaulted (Lnet/minecraft/resources/ResourceKey;Ljava/lang/String;Ljava/util/function/Supplier;)Lnet/minecraft/core/DefaultedRegistry; a
	registerMapping (Lnet/minecraft/core/Registry;ILjava/lang/String;Ljava/lang/Object;)Ljava/lang/Object; a
	registerSimple (Lnet/minecraft/resources/ResourceKey;Lcom/mojang/serialization/Lifecycle;Ljava/util/function/Supplier;)Lnet/minecraft/core/Registry; a
	registerSimple (Lnet/minecraft/resources/ResourceKey;Ljava/util/function/Supplier;)Lnet/minecraft/core/Registry; a
	stream ()Ljava/util/stream/Stream; g
net/minecraft/core/RegistryAccess gn
	BUILTIN c
	LOGGER a
	REGISTRIES b
	addBuiltinElements (Lnet/minecraft/core/RegistryAccess$RegistryHolder;Lnet/minecraft/resources/RegistryReadOps$ResourceAccess$MemoryMap;Lnet/minecraft/core/RegistryAccess$RegistryData;)V a
	builtin ()Lnet/minecraft/core/RegistryAccess$RegistryHolder; b
	copy (Lnet/minecraft/core/RegistryAccess$RegistryHolder;Lnet/minecraft/core/Registry;)V a
	copyBuiltin (Lnet/minecraft/core/RegistryAccess$RegistryHolder;Lnet/minecraft/resources/ResourceKey;)V a
	dimensionTypes ()Lnet/minecraft/core/Registry; a
	load (Lnet/minecraft/core/RegistryAccess$RegistryHolder;Lnet/minecraft/resources/RegistryReadOps;)V a
	put (Lcom/google/common/collect/ImmutableMap$Builder;Lnet/minecraft/resources/ResourceKey;Lcom/mojang/serialization/Codec;)V a
	put (Lcom/google/common/collect/ImmutableMap$Builder;Lnet/minecraft/resources/ResourceKey;Lcom/mojang/serialization/Codec;Lcom/mojang/serialization/Codec;)V a
	readRegistry (Lnet/minecraft/resources/RegistryReadOps;Lnet/minecraft/core/RegistryAccess$RegistryHolder;Lnet/minecraft/core/RegistryAccess$RegistryData;)V a
	registry (Lnet/minecraft/resources/ResourceKey;)Ljava/util/Optional; a
	registryOrThrow (Lnet/minecraft/resources/ResourceKey;)Lnet/minecraft/core/WritableRegistry; b
net/minecraft/core/RegistryAccess$RegistryData gn$a
	codec b
	key a
	networkCodec c
	codec ()Lcom/mojang/serialization/Codec; b
	key ()Lnet/minecraft/resources/ResourceKey; a
	networkCodec ()Lcom/mojang/serialization/Codec; c
	sendToClient ()Z d
net/minecraft/core/RegistryAccess$RegistryHolder gn$b
	NETWORK_CODEC a
	registries b
	captureMap (Lcom/mojang/serialization/codecs/UnboundedMapCodec;)Lcom/mojang/serialization/Codec; a
	createRegistry (Lnet/minecraft/resources/ResourceKey;)Lnet/minecraft/core/MappedRegistry; d
	getNetworkCodec (Lnet/minecraft/resources/ResourceKey;)Lcom/mojang/serialization/DataResult; c
	makeNetworkCodec ()Lcom/mojang/serialization/Codec; d
	registry (Lnet/minecraft/resources/ResourceKey;)Ljava/util/Optional; a
net/minecraft/core/Rotations go
	x a
	y b
	z c
	getWrappedX ()F e
	getWrappedY ()F f
	getWrappedZ ()F g
	getX ()F b
	getY ()F c
	getZ ()F d
	save ()Lnet/minecraft/nbt/ListTag; a
net/minecraft/core/SectionPos gp
	aroundChunk (Lnet/minecraft/world/level/ChunkPos;I)Ljava/util/stream/Stream; b
	asLong ()J s
	asLong (III)J b
	betweenClosedStream (IIIIII)Ljava/util/stream/Stream; a
	blockToSection (J)J e
	blockToSectionCoord (I)I a
	blocksInside ()Ljava/util/stream/Stream; t
	center ()Lnet/minecraft/core/BlockPos; q
	chunk ()Lnet/minecraft/world/level/ChunkPos; r
	cube (Lnet/minecraft/core/SectionPos;I)Ljava/util/stream/Stream; a
	getZeroNode (J)J f
	maxBlockX ()I g
	maxBlockY ()I h
	maxBlockZ ()I i
	minBlockX ()I d
	minBlockY ()I e
	minBlockZ ()I f
	of (III)Lnet/minecraft/core/SectionPos; a
	of (J)Lnet/minecraft/core/SectionPos; a
	of (Lnet/minecraft/core/BlockPos;)Lnet/minecraft/core/SectionPos; a
	of (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/core/SectionPos; a
	of (Lnet/minecraft/world/level/ChunkPos;I)Lnet/minecraft/core/SectionPos; a
	offset (III)Lnet/minecraft/core/SectionPos; d
	offset (III)Lnet/minecraft/core/Vec3i; c
	offset (JIII)J a
	offset (JLnet/minecraft/core/Direction;)J a
	origin ()Lnet/minecraft/core/BlockPos; p
	relativeToBlockPos (S)Lnet/minecraft/core/BlockPos; g
	relativeToBlockX (S)I d
	relativeToBlockY (S)I e
	relativeToBlockZ (S)I f
	sectionRelative (I)I b
	sectionRelativePos (Lnet/minecraft/core/BlockPos;)S b
	sectionRelativeX (S)I a
	sectionRelativeY (S)I b
	sectionRelativeZ (S)I c
	sectionToBlockCoord (I)I c
	x ()I a
	x (J)I b
	y ()I b
	y (J)I c
	z ()I c
	z (J)I d
net/minecraft/core/SerializableUUID gq
	CODEC a
	leastMostToIntArray (JJ)[I a
	readUUID (Lcom/mojang/serialization/Dynamic;)Ljava/util/UUID; a
	uuidFromIntArray ([I)Ljava/util/UUID; a
	uuidToIntArray (Ljava/util/UUID;)[I a
net/minecraft/core/Vec3i gr
	CODEC c
	ZERO d
	x a
	y b
	z e
	above ()Lnet/minecraft/core/Vec3i; o
	above (I)Lnet/minecraft/core/Vec3i; m
	below ()Lnet/minecraft/core/Vec3i; n
	below (I)Lnet/minecraft/core/Vec3i; l
	closerThan (Lnet/minecraft/core/Position;D)Z a
	closerThan (Lnet/minecraft/core/Vec3i;D)Z a
	compareTo (Lnet/minecraft/core/Vec3i;)I i
	cross (Lnet/minecraft/core/Vec3i;)Lnet/minecraft/core/Vec3i; d
	distManhattan (Lnet/minecraft/core/Vec3i;)I k
	distSqr (DDDZ)D a
	distSqr (Lnet/minecraft/core/Position;Z)D a
	distSqr (Lnet/minecraft/core/Vec3i;)D j
	east ()Lnet/minecraft/core/Vec3i; j
	east (I)Lnet/minecraft/core/Vec3i; h
	get (Lnet/minecraft/core/Direction$Axis;)I a
	getX ()I u
	getY ()I v
	getZ ()I w
	multiply (I)Lnet/minecraft/core/Vec3i; n
	north ()Lnet/minecraft/core/Vec3i; m
	north (I)Lnet/minecraft/core/Vec3i; k
	offset (DDD)Lnet/minecraft/core/Vec3i; b
	offset (III)Lnet/minecraft/core/Vec3i; c
	offset (Lnet/minecraft/core/Vec3i;)Lnet/minecraft/core/Vec3i; f
	relative (Lnet/minecraft/core/Direction$Axis;I)Lnet/minecraft/core/Vec3i; b
	relative (Lnet/minecraft/core/Direction;)Lnet/minecraft/core/Vec3i; b
	relative (Lnet/minecraft/core/Direction;I)Lnet/minecraft/core/Vec3i; b
	setX (I)V o
	setY (I)V p
	setZ (I)V q
	south ()Lnet/minecraft/core/Vec3i; l
	south (I)Lnet/minecraft/core/Vec3i; j
	subtract (Lnet/minecraft/core/Vec3i;)Lnet/minecraft/core/Vec3i; e
	toShortString ()Ljava/lang/String; x
	west ()Lnet/minecraft/core/Vec3i; k
	west (I)Lnet/minecraft/core/Vec3i; i
net/minecraft/core/WritableRegistry gs
	isEmpty ()Z e
	register (Lnet/minecraft/resources/ResourceKey;Ljava/lang/Object;Lcom/mojang/serialization/Lifecycle;)Ljava/lang/Object; a
	registerMapping (ILnet/minecraft/resources/ResourceKey;Ljava/lang/Object;Lcom/mojang/serialization/Lifecycle;)Ljava/lang/Object; a
	registerOrOverride (Ljava/util/OptionalInt;Lnet/minecraft/resources/ResourceKey;Ljava/lang/Object;Lcom/mojang/serialization/Lifecycle;)Ljava/lang/Object; a
net/minecraft/core/dispenser/AbstractProjectileDispenseBehavior gt
	execute (Lnet/minecraft/core/BlockSource;Lnet/minecraft/world/item/ItemStack;)Lnet/minecraft/world/item/ItemStack; a
	getPower ()F b
	getProjectile (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/Position;Lnet/minecraft/world/item/ItemStack;)Lnet/minecraft/world/entity/projectile/Projectile; a
	getUncertainty ()F a
	playSound (Lnet/minecraft/core/BlockSource;)V a
net/minecraft/core/dispenser/BoatDispenseItemBehavior gu
	defaultDispenseItemBehavior b
	type c
	execute (Lnet/minecraft/core/BlockSource;Lnet/minecraft/world/item/ItemStack;)Lnet/minecraft/world/item/ItemStack; a
	playSound (Lnet/minecraft/core/BlockSource;)V a
net/minecraft/core/dispenser/DefaultDispenseItemBehavior gv
	execute (Lnet/minecraft/core/BlockSource;Lnet/minecraft/world/item/ItemStack;)Lnet/minecraft/world/item/ItemStack; a
	playAnimation (Lnet/minecraft/core/BlockSource;Lnet/minecraft/core/Direction;)V a
	playSound (Lnet/minecraft/core/BlockSource;)V a
	spawnItem (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/item/ItemStack;ILnet/minecraft/core/Direction;Lnet/minecraft/core/Position;)V a
net/minecraft/core/dispenser/DispenseItemBehavior gw
	NOOP a
	bootStrap ()V c
	setEntityPokingOutOfBlock (Lnet/minecraft/core/BlockSource;Lnet/minecraft/world/entity/Entity;Lnet/minecraft/core/Direction;)V a
net/minecraft/core/dispenser/OptionalDispenseItemBehavior gx
	success b
	isSuccess ()Z a
	playSound (Lnet/minecraft/core/BlockSource;)V a
	setSuccess (Z)V a
net/minecraft/core/dispenser/ShearsDispenseItemBehavior gy
	execute (Lnet/minecraft/core/BlockSource;Lnet/minecraft/world/item/ItemStack;)Lnet/minecraft/world/item/ItemStack; a
	tryShearBeehive (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;)Z a
	tryShearLivingEntity (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;)Z b
net/minecraft/core/dispenser/ShulkerBoxDispenseBehavior gz
	execute (Lnet/minecraft/core/BlockSource;Lnet/minecraft/world/item/ItemStack;)Lnet/minecraft/world/item/ItemStack; a
net/minecraft/core/particles/BlockParticleOption hc
	DESERIALIZER a
	state c
	type b
	codec (Lnet/minecraft/core/particles/ParticleType;)Lcom/mojang/serialization/Codec; a
	getState ()Lnet/minecraft/world/level/block/state/BlockState; c
	getType ()Lnet/minecraft/core/particles/ParticleType; b
	writeToNetwork (Lnet/minecraft/network/FriendlyByteBuf;)V a
	writeToString ()Ljava/lang/String; a
net/minecraft/core/particles/DustParticleOptions hd
	CODEC b
	DESERIALIZER c
	REDSTONE a
	b f
	g e
	r d
	scale g
	getB ()F e
	getG ()F d
	getR ()F c
	getScale ()F f
	getType ()Lnet/minecraft/core/particles/ParticleType; b
	writeToNetwork (Lnet/minecraft/network/FriendlyByteBuf;)V a
	writeToString ()Ljava/lang/String; a
net/minecraft/core/particles/ItemParticleOption he
	DESERIALIZER a
	itemStack c
	type b
	codec (Lnet/minecraft/core/particles/ParticleType;)Lcom/mojang/serialization/Codec; a
	getItem ()Lnet/minecraft/world/item/ItemStack; c
	getType ()Lnet/minecraft/core/particles/ParticleType; b
	writeToNetwork (Lnet/minecraft/network/FriendlyByteBuf;)V a
	writeToString ()Ljava/lang/String; a
net/minecraft/core/particles/ParticleOptions hf
	getType ()Lnet/minecraft/core/particles/ParticleType; b
	writeToNetwork (Lnet/minecraft/network/FriendlyByteBuf;)V a
	writeToString ()Ljava/lang/String; a
net/minecraft/core/particles/ParticleOptions$Deserializer hf$a
	fromCommand (Lnet/minecraft/core/particles/ParticleType;Lcom/mojang/brigadier/StringReader;)Lnet/minecraft/core/particles/ParticleOptions; b
	fromNetwork (Lnet/minecraft/core/particles/ParticleType;Lnet/minecraft/network/FriendlyByteBuf;)Lnet/minecraft/core/particles/ParticleOptions; b
net/minecraft/core/particles/ParticleType hg
	deserializer b
	overrideLimiter a
	codec ()Lcom/mojang/serialization/Codec; e
	getDeserializer ()Lnet/minecraft/core/particles/ParticleOptions$Deserializer; d
	getOverrideLimiter ()Z c
net/minecraft/core/particles/ParticleTypes hh
	AMBIENT_ENTITY_EFFECT a
	ANGRY_VILLAGER b
	ASH am
	BARRIER c
	BLOCK d
	BUBBLE e
	BUBBLE_COLUMN_UP ad
	BUBBLE_POP ab
	CAMPFIRE_COSY_SMOKE ag
	CAMPFIRE_SIGNAL_SMOKE ah
	CLOUD f
	CODEC au
	COMPOSTER F
	CRIMSON_SPORE an
	CRIT g
	CURRENT_DOWN ac
	DAMAGE_INDICATOR h
	DOLPHIN af
	DRAGON_BREATH i
	DRIPPING_HONEY ai
	DRIPPING_LAVA j
	DRIPPING_OBSIDIAN_TEAR ap
	DRIPPING_WATER m
	DUST o
	EFFECT p
	ELDER_GUARDIAN q
	ENCHANT s
	ENCHANTED_HIT r
	END_ROD t
	ENTITY_EFFECT u
	EXPLOSION w
	EXPLOSION_EMITTER v
	FALLING_DUST x
	FALLING_HONEY aj
	FALLING_LAVA k
	FALLING_NECTAR al
	FALLING_OBSIDIAN_TEAR aq
	FALLING_WATER n
	FIREWORK y
	FISHING z
	FLAME A
	FLASH D
	HAPPY_VILLAGER E
	HEART G
	INSTANT_EFFECT H
	ITEM I
	ITEM_SLIME J
	ITEM_SNOWBALL K
	LANDING_HONEY ak
	LANDING_LAVA l
	LANDING_OBSIDIAN_TEAR ar
	LARGE_SMOKE L
	LAVA M
	MYCELIUM N
	NAUTILUS ae
	NOTE O
	POOF P
	PORTAL Q
	RAIN R
	REVERSE_PORTAL as
	SMOKE S
	SNEEZE T
	SOUL C
	SOUL_FIRE_FLAME B
	SPIT U
	SPLASH Z
	SQUID_INK V
	SWEEP_ATTACK W
	TOTEM_OF_UNDYING X
	UNDERWATER Y
	WARPED_SPORE ao
	WHITE_ASH at
	WITCH aa
	register (Ljava/lang/String;Lnet/minecraft/core/particles/ParticleOptions$Deserializer;Ljava/util/function/Function;)Lnet/minecraft/core/particles/ParticleType; a
	register (Ljava/lang/String;Z)Lnet/minecraft/core/particles/SimpleParticleType; a
net/minecraft/core/particles/SimpleParticleType hi
	DESERIALIZER a
	codec b
	codec ()Lcom/mojang/serialization/Codec; e
	getType ()Lnet/minecraft/core/particles/ParticleType; b
	getType ()Lnet/minecraft/core/particles/SimpleParticleType; f
	writeToNetwork (Lnet/minecraft/network/FriendlyByteBuf;)V a
	writeToString ()Ljava/lang/String; a
net/minecraft/data/BuiltinRegistries hk
	BIOME i
	CONFIGURED_CARVER d
	CONFIGURED_FEATURE e
	CONFIGURED_STRUCTURE_FEATURE f
	CONFIGURED_SURFACE_BUILDER c
	LOADERS k
	LOGGER a
	NOISE_GENERATOR_SETTINGS j
	PROCESSOR_LIST g
	REGISTRY b
	TEMPLATE_POOL h
	WRITABLE_REGISTRY l
	bootstrap ()V a
	internalRegister (Lnet/minecraft/resources/ResourceKey;Lnet/minecraft/core/WritableRegistry;Ljava/util/function/Supplier;Lcom/mojang/serialization/Lifecycle;)Lnet/minecraft/core/WritableRegistry; a
	register (Lnet/minecraft/core/Registry;Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object; a
	register (Lnet/minecraft/core/Registry;Lnet/minecraft/resources/ResourceLocation;Ljava/lang/Object;)Ljava/lang/Object; a
	registerMapping (Lnet/minecraft/core/Registry;ILnet/minecraft/resources/ResourceKey;Ljava/lang/Object;)Ljava/lang/Object; a
	registerSimple (Lnet/minecraft/resources/ResourceKey;Lcom/mojang/serialization/Lifecycle;Ljava/util/function/Supplier;)Lnet/minecraft/core/Registry; a
	registerSimple (Lnet/minecraft/resources/ResourceKey;Ljava/util/function/Supplier;)Lnet/minecraft/core/Registry; a
net/minecraft/data/DataGenerator hl
	LOGGER a
	inputFolders b
	outputFolder c
	providers d
	addProvider (Lnet/minecraft/data/DataProvider;)V a
	getInputFolders ()Ljava/util/Collection; a
	getOutputFolder ()Ljava/nio/file/Path; b
	run ()V c
net/minecraft/data/DataProvider hm
	SHA1 a
	getName ()Ljava/lang/String; a
	run (Lnet/minecraft/data/HashCache;)V a
	save (Lcom/google/gson/Gson;Lnet/minecraft/data/HashCache;Lcom/google/gson/JsonElement;Ljava/nio/file/Path;)V a
net/minecraft/data/HashCache hn
	LOGGER a
	cachePath c
	hits d
	keep g
	newCache f
	oldCache e
	path b
	getHash (Ljava/nio/file/Path;)Ljava/lang/String; a
	had (Ljava/nio/file/Path;)Z b
	keep (Ljava/nio/file/Path;)V c
	purgeStaleAndWrite ()V a
	putNew (Ljava/nio/file/Path;Ljava/lang/String;)V a
	removeStale ()V b
	walkOutputFiles ()Ljava/util/stream/Stream; c
net/minecraft/data/advancements/AdvancementProvider ho
	GSON c
	LOGGER b
	generator d
	tabs e
	createPath (Ljava/nio/file/Path;Lnet/minecraft/advancements/Advancement;)Ljava/nio/file/Path; a
	getName ()Ljava/lang/String; a
	run (Lnet/minecraft/data/HashCache;)V a
net/minecraft/data/advancements/AdventureAdvancements hp
	EXPLORABLE_BIOMES a
	MOBS_TO_KILL b
	accept (Ljava/util/function/Consumer;)V a
	addBiomes (Lnet/minecraft/advancements/Advancement$Builder;Ljava/util/List;)Lnet/minecraft/advancements/Advancement$Builder; a
	addMobsToKill (Lnet/minecraft/advancements/Advancement$Builder;)Lnet/minecraft/advancements/Advancement$Builder; a
net/minecraft/data/advancements/HusbandryAdvancements hq
	BREEDABLE_ANIMALS a
	EDIBLE_ITEMS d
	FISH b
	FISH_BUCKETS c
	accept (Ljava/util/function/Consumer;)V a
	addBreedable (Lnet/minecraft/advancements/Advancement$Builder;)Lnet/minecraft/advancements/Advancement$Builder; b
	addCatVariants (Lnet/minecraft/advancements/Advancement$Builder;)Lnet/minecraft/advancements/Advancement$Builder; e
	addFish (Lnet/minecraft/advancements/Advancement$Builder;)Lnet/minecraft/advancements/Advancement$Builder; d
	addFishBuckets (Lnet/minecraft/advancements/Advancement$Builder;)Lnet/minecraft/advancements/Advancement$Builder; c
	addFood (Lnet/minecraft/advancements/Advancement$Builder;)Lnet/minecraft/advancements/Advancement$Builder; a
net/minecraft/data/advancements/NetherAdvancements hr
	DISTRACT_PIGLIN_PLAYER_ARMOR_PREDICATE b
	EXPLORABLE_BIOMES a
	accept (Ljava/util/function/Consumer;)V a
net/minecraft/data/advancements/StoryAdvancements hs
	accept (Ljava/util/function/Consumer;)V a
net/minecraft/data/advancements/TheEndAdvancements ht
	accept (Ljava/util/function/Consumer;)V a
net/minecraft/data/info/BlockListReport hv
	GSON b
	generator c
	getName ()Ljava/lang/String; a
	run (Lnet/minecraft/data/HashCache;)V a
net/minecraft/data/info/CommandsReport hw
	GSON b
	generator c
	getName ()Ljava/lang/String; a
	run (Lnet/minecraft/data/HashCache;)V a
net/minecraft/data/info/RegistryDumpReport hx
	GSON b
	generator c
	dumpRegistry (Lnet/minecraft/core/Registry;)Lcom/google/gson/JsonElement; a
	getName ()Ljava/lang/String; a
	run (Lnet/minecraft/data/HashCache;)V a
net/minecraft/data/loot/BlockLoot hz
	EXPLOSION_RESISTANT f
	HAS_NO_SHEARS_OR_SILK_TOUCH e
	HAS_NO_SILK_TOUCH b
	HAS_SHEARS c
	HAS_SHEARS_OR_SILK_TOUCH d
	HAS_SILK_TOUCH a
	JUNGLE_LEAVES_SAPLING_CHANGES h
	NORMAL_LEAVES_SAPLING_CHANCES g
	map i
	accept (Ljava/util/function/BiConsumer;)V a
	add (Lnet/minecraft/world/level/block/Block;Ljava/util/function/Function;)V a
	add (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/world/level/storage/loot/LootTable$Builder;)V a
	addNetherVinesDropTable (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/world/level/block/Block;)V c
	applyExplosionCondition (Lnet/minecraft/world/level/ItemLike;Lnet/minecraft/world/level/storage/loot/predicates/ConditionUserBuilder;)Ljava/lang/Object; a
	applyExplosionDecay (Lnet/minecraft/world/level/ItemLike;Lnet/minecraft/world/level/storage/loot/functions/FunctionUserBuilder;)Ljava/lang/Object; a
	createAttachedStemDrops (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/world/item/Item;)Lnet/minecraft/world/level/storage/loot/LootTable$Builder; c
	createBannerDrop (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/world/level/storage/loot/LootTable$Builder; h
	createBeeHiveDrop (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/world/level/storage/loot/LootTable$Builder; j
	createBeeNestDrop (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/world/level/storage/loot/LootTable$Builder; i
	createCropDrops (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/world/item/Item;Lnet/minecraft/world/item/Item;Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition$Builder;)Lnet/minecraft/world/level/storage/loot/LootTable$Builder; a
	createDoorTable (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/world/level/storage/loot/LootTable$Builder; a
	createDoublePlantShearsDrop (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/world/level/storage/loot/LootTable$Builder; l
	createDoublePlantWithSeedDrops (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/world/level/storage/loot/LootTable$Builder; b
	createGrassDrops (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/world/level/storage/loot/LootTable$Builder; k
	createLeavesDrops (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/world/level/block/Block;[F)Lnet/minecraft/world/level/storage/loot/LootTable$Builder; a
	createMushroomBlockDrop (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/world/level/ItemLike;)Lnet/minecraft/world/level/storage/loot/LootTable$Builder; c
	createNameableBlockEntityTable (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/world/level/storage/loot/LootTable$Builder; f
	createOakLeavesDrops (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/world/level/block/Block;[F)Lnet/minecraft/world/level/storage/loot/LootTable$Builder; b
	createOreDrop (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/world/item/Item;)Lnet/minecraft/world/level/storage/loot/LootTable$Builder; a
	createPotFlowerItemTable (Lnet/minecraft/world/level/ItemLike;)Lnet/minecraft/world/level/storage/loot/LootTable$Builder; c
	createSelfDropDispatchTable (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition$Builder;Lnet/minecraft/world/level/storage/loot/entries/LootPoolEntryContainer$Builder;)Lnet/minecraft/world/level/storage/loot/LootTable$Builder; a
	createShearsDispatchTable (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/world/level/storage/loot/entries/LootPoolEntryContainer$Builder;)Lnet/minecraft/world/level/storage/loot/LootTable$Builder; b
	createShearsOnlyDrop (Lnet/minecraft/world/level/ItemLike;)Lnet/minecraft/world/level/storage/loot/LootTable$Builder; d
	createShulkerBoxDrop (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/world/level/storage/loot/LootTable$Builder; g
	createSilkTouchDispatchTable (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/world/level/storage/loot/entries/LootPoolEntryContainer$Builder;)Lnet/minecraft/world/level/storage/loot/LootTable$Builder; a
	createSilkTouchOnlyTable (Lnet/minecraft/world/level/ItemLike;)Lnet/minecraft/world/level/storage/loot/LootTable$Builder; b
	createSilkTouchOrShearsDispatchTable (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/world/level/storage/loot/entries/LootPoolEntryContainer$Builder;)Lnet/minecraft/world/level/storage/loot/LootTable$Builder; c
	createSingleItemTable (Lnet/minecraft/world/level/ItemLike;)Lnet/minecraft/world/level/storage/loot/LootTable$Builder; a
	createSingleItemTable (Lnet/minecraft/world/level/ItemLike;Lnet/minecraft/world/level/storage/loot/RandomIntGenerator;)Lnet/minecraft/world/level/storage/loot/LootTable$Builder; a
	createSingleItemTableWithSilkTouch (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/world/level/ItemLike;)Lnet/minecraft/world/level/storage/loot/LootTable$Builder; b
	createSingleItemTableWithSilkTouch (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/world/level/ItemLike;Lnet/minecraft/world/level/storage/loot/RandomIntGenerator;)Lnet/minecraft/world/level/storage/loot/LootTable$Builder; a
	createSinglePropConditionTable (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/world/level/block/state/properties/Property;Ljava/lang/Comparable;)Lnet/minecraft/world/level/storage/loot/LootTable$Builder; a
	createSlabItemTable (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/world/level/storage/loot/LootTable$Builder; e
	createStemDrops (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/world/item/Item;)Lnet/minecraft/world/level/storage/loot/LootTable$Builder; b
	dropOther (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/world/level/ItemLike;)V a
	dropPottedContents (Lnet/minecraft/world/level/block/Block;)V b
	dropSelf (Lnet/minecraft/world/level/block/Block;)V d
	dropWhenSilkTouch (Lnet/minecraft/world/level/block/Block;)V c
	noDrop ()Lnet/minecraft/world/level/storage/loot/LootTable$Builder; a
	otherWhenSilkTouch (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/world/level/block/Block;)V a
net/minecraft/data/loot/ChestLoot ia
	accept (Ljava/util/function/BiConsumer;)V a
net/minecraft/data/loot/EntityLoot ib
	ENTITY_ON_FIRE a
	SPECIAL_LOOT_TABLE_TYPES b
	map c
	accept (Ljava/util/function/BiConsumer;)V a
	add (Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/world/level/storage/loot/LootTable$Builder;)V a
	add (Lnet/minecraft/world/entity/EntityType;Lnet/minecraft/world/level/storage/loot/LootTable$Builder;)V a
	createSheepTable (Lnet/minecraft/world/level/ItemLike;)Lnet/minecraft/world/level/storage/loot/LootTable$Builder; a
net/minecraft/data/loot/FishingLoot ic
	IN_BAMBOO_JUNGLE d
	IN_BAMBOO_JUNGLE_HILLS g
	IN_JUNGLE a
	IN_JUNGLE_EDGE c
	IN_JUNGLE_HILLS b
	IN_MODIFIED_JUNGLE e
	IN_MODIFIED_JUNGLE_EDGE f
	accept (Ljava/util/function/BiConsumer;)V a
net/minecraft/data/loot/GiftLoot id
	accept (Ljava/util/function/BiConsumer;)V a
net/minecraft/data/loot/LootTableProvider ie
	GSON c
	LOGGER b
	generator d
	subProviders e
	createPath (Ljava/nio/file/Path;Lnet/minecraft/resources/ResourceLocation;)Ljava/nio/file/Path; a
	getName ()Ljava/lang/String; a
	run (Lnet/minecraft/data/HashCache;)V a
net/minecraft/data/loot/PiglinBarterLoot ig
	accept (Ljava/util/function/BiConsumer;)V a
net/minecraft/data/models/BlockModelGenerators ii
	blockStateOutput a
	modelOutput b
	skippedAutoModelsOutput c
	applyRotation (Lnet/minecraft/core/FrontAndTop;Lnet/minecraft/data/models/blockstates/Variant;)Lnet/minecraft/data/models/blockstates/Variant; a
	blockEntityModels (Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/data/models/BlockModelGenerators$BlockEntityModelGenerator; a
	blockEntityModels (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/data/models/BlockModelGenerators$BlockEntityModelGenerator; d
	configureDoorHalf (Lnet/minecraft/data/models/blockstates/PropertyDispatch$C4;Lnet/minecraft/world/level/block/state/properties/DoubleBlockHalf;Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/data/models/blockstates/PropertyDispatch$C4; a
	copyModel (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/world/level/block/Block;)V i
	createActiveRail (Lnet/minecraft/world/level/block/Block;)V m
	createAirLikeBlock (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/resources/ResourceLocation;)V h
	createAirLikeBlock (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/world/item/Item;)V a
	createAnvil (Lnet/minecraft/world/level/block/Block;)V o
	createAxisAlignedPillarBlock (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/data/models/model/TexturedModel$Provider;)V a
	createAxisAlignedPillarBlock (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/data/models/blockstates/BlockStateGenerator; f
	createAxisAlignedPillarBlockCustomModel (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/resources/ResourceLocation;)V g
	createBamboo ()V i
	createBambooModels (I)Ljava/util/List; a
	createBarrel ()V k
	createBedItem (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/world/level/block/Block;)V k
	createBeeNest (Lnet/minecraft/world/level/block/Block;Ljava/util/function/Function;)V a
	createBell ()V l
	createBookshelf ()V n
	createBooleanModelDispatch (Lnet/minecraft/world/level/block/state/properties/BooleanProperty;Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/data/models/blockstates/PropertyDispatch; a
	createBrewingStand ()V r
	createButton (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/data/models/blockstates/BlockStateGenerator; f
	createCakeBlock ()V s
	createCampfires ([Lnet/minecraft/world/level/block/Block;)V a
	createCartographyTable ()V t
	createCauldron ()V w
	createChiseledSandsone (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/world/level/block/Block;)V g
	createChorusFlower ()V x
	createChorusPlant ()V z
	createCocoa ()V H
	createColoredBlockWithRandomRotations (Lnet/minecraft/data/models/model/TexturedModel$Provider;[Lnet/minecraft/world/level/block/Block;)V a
	createColoredBlockWithStateRotations (Lnet/minecraft/data/models/model/TexturedModel$Provider;[Lnet/minecraft/world/level/block/Block;)V b
	createColumnWithFacing ()Lnet/minecraft/data/models/blockstates/PropertyDispatch; j
	createCommandBlock (Lnet/minecraft/world/level/block/Block;)V n
	createComparator ()V p
	createComposter ()V A
	createCoral (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/world/level/block/Block;Lnet/minecraft/world/level/block/Block;Lnet/minecraft/world/level/block/Block;Lnet/minecraft/world/level/block/Block;Lnet/minecraft/world/level/block/Block;Lnet/minecraft/world/level/block/Block;Lnet/minecraft/world/level/block/Block;)V a
	createCoralFans (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/world/level/block/Block;)V b
	createCraftingTableLike (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/world/level/block/Block;Ljava/util/function/BiFunction;)V a
	createCropBlock (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/world/level/block/state/properties/Property;[I)V a
	createCrossBlock (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/data/models/BlockModelGenerators$TintState;)V b
	createCrossBlock (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/data/models/BlockModelGenerators$TintState;Lnet/minecraft/data/models/model/TextureMapping;)V b
	createCrossBlockWithDefaultItem (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/data/models/BlockModelGenerators$TintState;)V a
	createCrossBlockWithDefaultItem (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/data/models/BlockModelGenerators$TintState;Lnet/minecraft/data/models/model/TextureMapping;)V a
	createDaylightDetector ()V B
	createDispenserBlock (Lnet/minecraft/world/level/block/Block;)V q
	createDoor (Lnet/minecraft/world/level/block/Block;)V g
	createDoor (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/data/models/blockstates/BlockStateGenerator; b
	createDoubleBlock (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/resources/ResourceLocation;)V j
	createDoublePlant (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/data/models/BlockModelGenerators$TintState;)V c
	createEmptyOrFullDispatch (Lnet/minecraft/world/level/block/state/properties/Property;Ljava/lang/Comparable;Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/data/models/blockstates/PropertyDispatch; a
	createEndPortalFrame ()V y
	createFacingDispatch ()Lnet/minecraft/data/models/blockstates/PropertyDispatch; e
	createFarmland ()V C
	createFence (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/data/models/blockstates/BlockStateGenerator; g
	createFenceGate (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/data/models/blockstates/BlockStateGenerator; c
	createFire ()V D
	createFloorFireModels (Lnet/minecraft/world/level/block/Block;)Ljava/util/List; t
	createFrostedIce ()V F
	createFurnace (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/data/models/model/TexturedModel$Provider;)V e
	createGlassBlocks (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/world/level/block/Block;)V f
	createGrassBlocks ()V G
	createGrassLikeBlock (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/data/models/blockstates/Variant;)V a
	createGrassPath ()V I
	createGrindstone ()V m
	createGrowingPlant (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/world/level/block/Block;Lnet/minecraft/data/models/BlockModelGenerators$TintState;)V b
	createHopper ()V J
	createHorizontalFacingDispatch ()Lnet/minecraft/data/models/blockstates/PropertyDispatch; b
	createHorizontalFacingDispatchAlt ()Lnet/minecraft/data/models/blockstates/PropertyDispatch; c
	createHorizontallyRotatedBlock (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/data/models/model/TexturedModel$Provider;)V b
	createInfestedStone ()V ag
	createIronBars ()V K
	createJigsaw ()V ai
	createLantern (Lnet/minecraft/world/level/block/Block;)V w
	createLever ()V L
	createLilyPad ()V M
	createMagmaBlock ()V af
	createMushroomBlock (Lnet/minecraft/world/level/block/Block;)V p
	createNetherPortalBlock ()V N
	createNetherRoots (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/world/level/block/Block;)V l
	createNetherrack ()V O
	createNonTemplateHorizontalBlock (Lnet/minecraft/world/level/block/Block;)V x
	createNonTemplateModelBlock (Lnet/minecraft/world/level/block/Block;)V k
	createNonTemplateModelBlock (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/world/level/block/Block;)V a
	createNormalTorch (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/world/level/block/Block;)V j
	createNyliumBlock (Lnet/minecraft/world/level/block/Block;)V r
	createObserver ()V P
	createOrientableTrapdoor (Lnet/minecraft/world/level/block/Block;)V h
	createOrientableTrapdoor (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/data/models/blockstates/BlockStateGenerator; f
	createPassiveRail (Lnet/minecraft/world/level/block/Block;)V l
	createPistonHeads ()V R
	createPistonVariant (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/data/models/model/TextureMapping;)V a
	createPistons ()V Q
	createPlant (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/world/level/block/Block;Lnet/minecraft/data/models/BlockModelGenerators$TintState;)V a
	createPressurePlate (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/data/models/blockstates/BlockStateGenerator; i
	createPumpkinVariant (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/data/models/model/TextureMapping;)V a
	createPumpkins ()V v
	createRedstoneLamp ()V T
	createRedstoneTorch ()V U
	createRedstoneWire ()V o
	createRepeater ()V V
	createRespawnAnchor ()V ah
	createRotatableColumn (Lnet/minecraft/world/level/block/Block;)V s
	createRotatedMirroredVariantBlock (Lnet/minecraft/world/level/block/Block;)V c
	createRotatedPillar ()Lnet/minecraft/data/models/blockstates/PropertyDispatch; f
	createRotatedPillarWithHorizontalVariant (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/data/models/model/TexturedModel$Provider;Lnet/minecraft/data/models/model/TexturedModel$Provider;)V a
	createRotatedPillarWithHorizontalVariant (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/data/models/blockstates/BlockStateGenerator; h
	createRotatedVariant (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/data/models/blockstates/MultiVariantGenerator; d
	createRotatedVariant (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/data/models/blockstates/MultiVariantGenerator; e
	createRotatedVariantBlock (Lnet/minecraft/world/level/block/Block;)V d
	createRotatedVariants (Lnet/minecraft/resources/ResourceLocation;)[Lnet/minecraft/data/models/blockstates/Variant; a
	createScaffolding ()V S
	createSeaPickle ()V W
	createShulkerBox (Lnet/minecraft/world/level/block/Block;)V y
	createSideFireModels (Lnet/minecraft/world/level/block/Block;)Ljava/util/List; u
	createSimpleBlock (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/data/models/blockstates/MultiVariantGenerator; e
	createSimpleFlatItemModel (Lnet/minecraft/world/item/Item;)V a
	createSimpleFlatItemModel (Lnet/minecraft/world/level/block/Block;)V b
	createSimpleFlatItemModel (Lnet/minecraft/world/level/block/Block;Ljava/lang/String;)V a
	createSlab (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/data/models/blockstates/BlockStateGenerator; h
	createSmithingTable ()V u
	createSmoothStoneSlab ()V q
	createSnowBlocks ()V X
	createSoulFire ()V E
	createStairs (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/data/models/blockstates/BlockStateGenerator; e
	createStems (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/world/level/block/Block;)V c
	createStonecutter ()V Y
	createStructureBlock ()V Z
	createSuffixedVariant (Lnet/minecraft/world/level/block/Block;Ljava/lang/String;Lnet/minecraft/data/models/model/ModelTemplate;Ljava/util/function/Function;)Lnet/minecraft/resources/ResourceLocation; a
	createSunflower ()V g
	createSweetBerryBush ()V aa
	createTallSeagrass ()V h
	createTopFireModels (Lnet/minecraft/world/level/block/Block;)Ljava/util/List; v
	createTorchHorizontalDispatch ()Lnet/minecraft/data/models/blockstates/PropertyDispatch; d
	createTrapdoor (Lnet/minecraft/world/level/block/Block;)V i
	createTrapdoor (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/data/models/blockstates/BlockStateGenerator; g
	createTripwire ()V ab
	createTripwireHook ()V ac
	createTrivialBlock (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/data/models/model/TextureMapping;Lnet/minecraft/data/models/model/ModelTemplate;)V a
	createTrivialBlock (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/data/models/model/TexturedModel$Provider;)V c
	createTrivialCube (Lnet/minecraft/world/level/block/Block;)V e
	createTurtleEgg ()V ad
	createTurtleEggModel (ILjava/lang/String;Lnet/minecraft/data/models/model/TextureMapping;)Lnet/minecraft/resources/ResourceLocation; a
	createTurtleEggModel (Ljava/lang/Integer;Ljava/lang/Integer;)Lnet/minecraft/resources/ResourceLocation; a
	createVine ()V ae
	createWall (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/data/models/blockstates/BlockStateGenerator; d
	createWeightedPressurePlate (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/world/level/block/Block;)V h
	createWoolBlocks (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/world/level/block/Block;)V e
	delegateItemModel (Lnet/minecraft/world/item/Item;Lnet/minecraft/resources/ResourceLocation;)V a
	delegateItemModel (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/resources/ResourceLocation;)V c
	family (Lnet/minecraft/data/models/model/TextureMapping;)Lnet/minecraft/data/models/BlockModelGenerators$BlockFamilyProvider; a
	family (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/data/models/BlockModelGenerators$BlockFamilyProvider; f
	family (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/data/models/model/TexturedModel$Provider;)Lnet/minecraft/data/models/BlockModelGenerators$BlockFamilyProvider; d
	family (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/data/models/model/TexturedModel;)Lnet/minecraft/data/models/BlockModelGenerators$BlockFamilyProvider; a
	run ()V a
	skipAutoItemBlock (Lnet/minecraft/world/level/block/Block;)V a
	woodProvider (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/data/models/BlockModelGenerators$WoodProvider; j
	wrapModels (Ljava/util/List;Ljava/util/function/UnaryOperator;)Ljava/util/List; a
net/minecraft/data/models/BlockModelGenerators$BlockEntityModelGenerator ii$a
	baseModel b
	create ([Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/data/models/BlockModelGenerators$BlockEntityModelGenerator; a
	createWithCustomBlockItemModel (Lnet/minecraft/data/models/model/ModelTemplate;[Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/data/models/BlockModelGenerators$BlockEntityModelGenerator; a
	createWithoutBlockItem ([Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/data/models/BlockModelGenerators$BlockEntityModelGenerator; b
net/minecraft/data/models/BlockModelGenerators$BlockFamilyProvider ii$b
	fullBlock c
	mapping b
	button (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/data/models/BlockModelGenerators$BlockFamilyProvider; a
	fence (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/data/models/BlockModelGenerators$BlockFamilyProvider; c
	fenceGate (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/data/models/BlockModelGenerators$BlockFamilyProvider; d
	fullBlock (Ljava/util/function/Function;)Lnet/minecraft/data/models/BlockModelGenerators$BlockFamilyProvider; a
	fullBlock (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/data/models/model/ModelTemplate;)Lnet/minecraft/data/models/BlockModelGenerators$BlockFamilyProvider; a
	pressurePlate (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/data/models/BlockModelGenerators$BlockFamilyProvider; e
	sign (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/data/models/BlockModelGenerators$BlockFamilyProvider; a
	slab (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/data/models/BlockModelGenerators$BlockFamilyProvider; f
	stairs (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/data/models/BlockModelGenerators$BlockFamilyProvider; g
	wall (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/data/models/BlockModelGenerators$BlockFamilyProvider; b
net/minecraft/data/models/BlockModelGenerators$TintState ii$c
	$VALUES c
	NOT_TINTED b
	TINTED a
	getCross ()Lnet/minecraft/data/models/model/ModelTemplate; a
	getCrossPot ()Lnet/minecraft/data/models/model/ModelTemplate; b
net/minecraft/data/models/BlockModelGenerators$WoodProvider ii$d
	logMapping b
	log (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/data/models/BlockModelGenerators$WoodProvider; b
	logWithHorizontal (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/data/models/BlockModelGenerators$WoodProvider; c
	wood (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/data/models/BlockModelGenerators$WoodProvider; a
net/minecraft/data/models/ItemModelGenerators ij
	output a
	generateFlatItem (Lnet/minecraft/world/item/Item;Ljava/lang/String;Lnet/minecraft/data/models/model/ModelTemplate;)V a
	generateFlatItem (Lnet/minecraft/world/item/Item;Lnet/minecraft/data/models/model/ModelTemplate;)V a
	generateFlatItem (Lnet/minecraft/world/item/Item;Lnet/minecraft/world/item/Item;Lnet/minecraft/data/models/model/ModelTemplate;)V a
	run ()V a
net/minecraft/data/models/ModelProvider ik
	GSON c
	LOGGER b
	generator d
	createBlockStatePath (Ljava/nio/file/Path;Lnet/minecraft/world/level/block/Block;)Ljava/nio/file/Path; a
	createModelPath (Ljava/nio/file/Path;Lnet/minecraft/resources/ResourceLocation;)Ljava/nio/file/Path; a
	getName ()Ljava/lang/String; a
	run (Lnet/minecraft/data/HashCache;)V a
	saveCollection (Lnet/minecraft/data/HashCache;Ljava/nio/file/Path;Ljava/util/Map;Ljava/util/function/BiFunction;)V a
net/minecraft/data/models/blockstates/BlockStateGenerator il
	getBlock ()Lnet/minecraft/world/level/block/Block; a
net/minecraft/data/models/blockstates/Condition im
	and ([Lnet/minecraft/data/models/blockstates/Condition;)Lnet/minecraft/data/models/blockstates/Condition; a
	condition ()Lnet/minecraft/data/models/blockstates/Condition$TerminalCondition; a
	or ([Lnet/minecraft/data/models/blockstates/Condition;)Lnet/minecraft/data/models/blockstates/Condition; b
	validate (Lnet/minecraft/world/level/block/state/StateDefinition;)V a
net/minecraft/data/models/blockstates/Condition$CompositeCondition im$a
	operation a
	subconditions b
	get ()Lcom/google/gson/JsonElement; b
	validate (Lnet/minecraft/world/level/block/state/StateDefinition;)V a
net/minecraft/data/models/blockstates/Condition$Operation im$b
	$VALUES d
	AND a
	OR b
	id c
net/minecraft/data/models/blockstates/Condition$TerminalCondition im$c
	terms a
	get ()Lcom/google/gson/JsonElement; b
	getTerm (Lnet/minecraft/world/level/block/state/properties/Property;Ljava/lang/Comparable;[Ljava/lang/Comparable;)Ljava/lang/String; c
	joinValues (Lnet/minecraft/world/level/block/state/properties/Property;Ljava/util/stream/Stream;)Ljava/lang/String; a
	negatedTerm (Lnet/minecraft/world/level/block/state/properties/Property;Ljava/lang/Comparable;)Lnet/minecraft/data/models/blockstates/Condition$TerminalCondition; b
	negatedTerm (Lnet/minecraft/world/level/block/state/properties/Property;Ljava/lang/Comparable;[Ljava/lang/Comparable;)Lnet/minecraft/data/models/blockstates/Condition$TerminalCondition; b
	putValue (Lnet/minecraft/world/level/block/state/properties/Property;Ljava/lang/String;)V a
	term (Lnet/minecraft/world/level/block/state/properties/Property;Ljava/lang/Comparable;)Lnet/minecraft/data/models/blockstates/Condition$TerminalCondition; a
	term (Lnet/minecraft/world/level/block/state/properties/Property;Ljava/lang/Comparable;[Ljava/lang/Comparable;)Lnet/minecraft/data/models/blockstates/Condition$TerminalCondition; a
	validate (Lnet/minecraft/world/level/block/state/StateDefinition;)V a
net/minecraft/data/models/blockstates/MultiPartGenerator in
	block a
	parts b
	get ()Lcom/google/gson/JsonElement; b
	getBlock ()Lnet/minecraft/world/level/block/Block; a
	multiPart (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/data/models/blockstates/MultiPartGenerator; a
	with (Ljava/util/List;)Lnet/minecraft/data/models/blockstates/MultiPartGenerator; a
	with (Lnet/minecraft/data/models/blockstates/Condition;Ljava/util/List;)Lnet/minecraft/data/models/blockstates/MultiPartGenerator; a
	with (Lnet/minecraft/data/models/blockstates/Condition;Lnet/minecraft/data/models/blockstates/Variant;)Lnet/minecraft/data/models/blockstates/MultiPartGenerator; a
	with (Lnet/minecraft/data/models/blockstates/Condition;[Lnet/minecraft/data/models/blockstates/Variant;)Lnet/minecraft/data/models/blockstates/MultiPartGenerator; a
	with (Lnet/minecraft/data/models/blockstates/Variant;)Lnet/minecraft/data/models/blockstates/MultiPartGenerator; a
net/minecraft/data/models/blockstates/MultiPartGenerator$ConditionalEntry in$a
	condition a
	decorate (Lcom/google/gson/JsonObject;)V a
	validate (Lnet/minecraft/world/level/block/state/StateDefinition;)V a
net/minecraft/data/models/blockstates/MultiPartGenerator$Entry in$b
	variants a
	decorate (Lcom/google/gson/JsonObject;)V a
	get ()Lcom/google/gson/JsonElement; a
	validate (Lnet/minecraft/world/level/block/state/StateDefinition;)V a
net/minecraft/data/models/blockstates/MultiVariantGenerator io
	baseVariants b
	block a
	declaredPropertySets d
	seenProperties c
	get ()Lcom/google/gson/JsonElement; b
	getBlock ()Lnet/minecraft/world/level/block/Block; a
	mergeVariants (Ljava/util/List;Ljava/util/List;)Ljava/util/List; a
	multiVariant (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/data/models/blockstates/MultiVariantGenerator; a
	multiVariant (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/data/models/blockstates/Variant;)Lnet/minecraft/data/models/blockstates/MultiVariantGenerator; a
	multiVariant (Lnet/minecraft/world/level/block/Block;[Lnet/minecraft/data/models/blockstates/Variant;)Lnet/minecraft/data/models/blockstates/MultiVariantGenerator; a
	with (Lnet/minecraft/data/models/blockstates/PropertyDispatch;)Lnet/minecraft/data/models/blockstates/MultiVariantGenerator; a
net/minecraft/data/models/blockstates/PropertyDispatch ip
	values a
	getDefinedProperties ()Ljava/util/List; b
	getEntries ()Ljava/util/Map; a
	properties (Lnet/minecraft/world/level/block/state/properties/Property;Lnet/minecraft/world/level/block/state/properties/Property;)Lnet/minecraft/data/models/blockstates/PropertyDispatch$C2; a
	properties (Lnet/minecraft/world/level/block/state/properties/Property;Lnet/minecraft/world/level/block/state/properties/Property;Lnet/minecraft/world/level/block/state/properties/Property;)Lnet/minecraft/data/models/blockstates/PropertyDispatch$C3; a
	properties (Lnet/minecraft/world/level/block/state/properties/Property;Lnet/minecraft/world/level/block/state/properties/Property;Lnet/minecraft/world/level/block/state/properties/Property;Lnet/minecraft/world/level/block/state/properties/Property;)Lnet/minecraft/data/models/blockstates/PropertyDispatch$C4; a
	properties (Lnet/minecraft/world/level/block/state/properties/Property;Lnet/minecraft/world/level/block/state/properties/Property;Lnet/minecraft/world/level/block/state/properties/Property;Lnet/minecraft/world/level/block/state/properties/Property;Lnet/minecraft/world/level/block/state/properties/Property;)Lnet/minecraft/data/models/blockstates/PropertyDispatch$C5; a
	property (Lnet/minecraft/world/level/block/state/properties/Property;)Lnet/minecraft/data/models/blockstates/PropertyDispatch$C1; a
	putValue (Lnet/minecraft/data/models/blockstates/Selector;Ljava/util/List;)V a
	verifyComplete ()V c
net/minecraft/data/models/blockstates/PropertyDispatch$C1 ip$a
	property1 a
	generate (Ljava/util/function/Function;)Lnet/minecraft/data/models/blockstates/PropertyDispatch; a
	generateList (Ljava/util/function/Function;)Lnet/minecraft/data/models/blockstates/PropertyDispatch; b
	getDefinedProperties ()Ljava/util/List; b
	select (Ljava/lang/Comparable;Ljava/util/List;)Lnet/minecraft/data/models/blockstates/PropertyDispatch$C1; a
	select (Ljava/lang/Comparable;Lnet/minecraft/data/models/blockstates/Variant;)Lnet/minecraft/data/models/blockstates/PropertyDispatch$C1; a
net/minecraft/data/models/blockstates/PropertyDispatch$C2 ip$b
	property1 a
	property2 b
	generate (Ljava/util/function/BiFunction;)Lnet/minecraft/data/models/blockstates/PropertyDispatch; a
	generateList (Ljava/util/function/BiFunction;)Lnet/minecraft/data/models/blockstates/PropertyDispatch; b
	getDefinedProperties ()Ljava/util/List; b
	select (Ljava/lang/Comparable;Ljava/lang/Comparable;Ljava/util/List;)Lnet/minecraft/data/models/blockstates/PropertyDispatch$C2; a
	select (Ljava/lang/Comparable;Ljava/lang/Comparable;Lnet/minecraft/data/models/blockstates/Variant;)Lnet/minecraft/data/models/blockstates/PropertyDispatch$C2; a
net/minecraft/data/models/blockstates/PropertyDispatch$C3 ip$c
	property1 a
	property2 b
	property3 c
	generate (Lnet/minecraft/data/models/blockstates/PropertyDispatch$TriFunction;)Lnet/minecraft/data/models/blockstates/PropertyDispatch; a
	generateList (Lnet/minecraft/data/models/blockstates/PropertyDispatch$TriFunction;)Lnet/minecraft/data/models/blockstates/PropertyDispatch; b
	getDefinedProperties ()Ljava/util/List; b
	select (Ljava/lang/Comparable;Ljava/lang/Comparable;Ljava/lang/Comparable;Ljava/util/List;)Lnet/minecraft/data/models/blockstates/PropertyDispatch$C3; a
	select (Ljava/lang/Comparable;Ljava/lang/Comparable;Ljava/lang/Comparable;Lnet/minecraft/data/models/blockstates/Variant;)Lnet/minecraft/data/models/blockstates/PropertyDispatch$C3; a
net/minecraft/data/models/blockstates/PropertyDispatch$C4 ip$d
	property1 a
	property2 b
	property3 c
	property4 d
	generate (Lnet/minecraft/data/models/blockstates/PropertyDispatch$QuadFunction;)Lnet/minecraft/data/models/blockstates/PropertyDispatch; a
	generateList (Lnet/minecraft/data/models/blockstates/PropertyDispatch$QuadFunction;)Lnet/minecraft/data/models/blockstates/PropertyDispatch; b
	getDefinedProperties ()Ljava/util/List; b
	select (Ljava/lang/Comparable;Ljava/lang/Comparable;Ljava/lang/Comparable;Ljava/lang/Comparable;Ljava/util/List;)Lnet/minecraft/data/models/blockstates/PropertyDispatch$C4; a
	select (Ljava/lang/Comparable;Ljava/lang/Comparable;Ljava/lang/Comparable;Ljava/lang/Comparable;Lnet/minecraft/data/models/blockstates/Variant;)Lnet/minecraft/data/models/blockstates/PropertyDispatch$C4; a
net/minecraft/data/models/blockstates/PropertyDispatch$C5 ip$e
	property1 a
	property2 b
	property3 c
	property4 d
	property5 e
	generate (Lnet/minecraft/data/models/blockstates/PropertyDispatch$PentaFunction;)Lnet/minecraft/data/models/blockstates/PropertyDispatch; a
	generateList (Lnet/minecraft/data/models/blockstates/PropertyDispatch$PentaFunction;)Lnet/minecraft/data/models/blockstates/PropertyDispatch; b
	getDefinedProperties ()Ljava/util/List; b
	select (Ljava/lang/Comparable;Ljava/lang/Comparable;Ljava/lang/Comparable;Ljava/lang/Comparable;Ljava/lang/Comparable;Ljava/util/List;)Lnet/minecraft/data/models/blockstates/PropertyDispatch$C5; a
	select (Ljava/lang/Comparable;Ljava/lang/Comparable;Ljava/lang/Comparable;Ljava/lang/Comparable;Ljava/lang/Comparable;Lnet/minecraft/data/models/blockstates/Variant;)Lnet/minecraft/data/models/blockstates/PropertyDispatch$C5; a
net/minecraft/data/models/blockstates/PropertyDispatch$PentaFunction ip$f
	apply (Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object; a
net/minecraft/data/models/blockstates/PropertyDispatch$QuadFunction ip$g
	apply (Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object; a
net/minecraft/data/models/blockstates/PropertyDispatch$TriFunction ip$h
net/minecraft/data/models/blockstates/Selector iq
	COMPARE_BY_NAME b
	EMPTY a
	values c
	empty ()Lnet/minecraft/data/models/blockstates/Selector; a
	extend (Lnet/minecraft/data/models/blockstates/Selector;)Lnet/minecraft/data/models/blockstates/Selector; a
	extend (Lnet/minecraft/world/level/block/state/properties/Property$Value;)Lnet/minecraft/data/models/blockstates/Selector; a
	getKey ()Ljava/lang/String; b
	of ([Lnet/minecraft/world/level/block/state/properties/Property$Value;)Lnet/minecraft/data/models/blockstates/Selector; a
net/minecraft/data/models/blockstates/Variant ir
	values a
	convertList (Ljava/util/List;)Lcom/google/gson/JsonElement; a
	get ()Lcom/google/gson/JsonElement; b
	merge (Lnet/minecraft/data/models/blockstates/Variant;Lnet/minecraft/data/models/blockstates/Variant;)Lnet/minecraft/data/models/blockstates/Variant; a
	variant ()Lnet/minecraft/data/models/blockstates/Variant; a
	with (Lnet/minecraft/data/models/blockstates/VariantProperty;Ljava/lang/Object;)Lnet/minecraft/data/models/blockstates/Variant; a
net/minecraft/data/models/blockstates/VariantProperties is
	MODEL c
	UV_LOCK d
	WEIGHT e
	X_ROT a
	Y_ROT b
net/minecraft/data/models/blockstates/VariantProperties$Rotation is$a
	$VALUES f
	R0 a
	R180 c
	R270 d
	R90 b
	value e
net/minecraft/data/models/blockstates/VariantProperty it
	key a
	serializer b
	withValue (Ljava/lang/Object;)Lnet/minecraft/data/models/blockstates/VariantProperty$Value; a
net/minecraft/data/models/blockstates/VariantProperty$Value it$a
	value b
	addToVariant (Lcom/google/gson/JsonObject;)V a
	getKey ()Lnet/minecraft/data/models/blockstates/VariantProperty; a
net/minecraft/data/models/model/DelegatedModel iv
	parent a
	get ()Lcom/google/gson/JsonElement; a
net/minecraft/data/models/model/ModelLocationUtils iw
	decorateBlockModelLocation (Ljava/lang/String;)Lnet/minecraft/resources/ResourceLocation; a
	decorateItemModelLocation (Ljava/lang/String;)Lnet/minecraft/resources/ResourceLocation; b
	getModelLocation (Lnet/minecraft/world/item/Item;)Lnet/minecraft/resources/ResourceLocation; a
	getModelLocation (Lnet/minecraft/world/item/Item;Ljava/lang/String;)Lnet/minecraft/resources/ResourceLocation; a
	getModelLocation (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/resources/ResourceLocation; a
	getModelLocation (Lnet/minecraft/world/level/block/Block;Ljava/lang/String;)Lnet/minecraft/resources/ResourceLocation; a
net/minecraft/data/models/model/ModelTemplate ix
	model a
	requiredSlots b
	suffix c
	create (Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/data/models/model/TextureMapping;Ljava/util/function/BiConsumer;)Lnet/minecraft/resources/ResourceLocation; a
	create (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/data/models/model/TextureMapping;Ljava/util/function/BiConsumer;)Lnet/minecraft/resources/ResourceLocation; a
	createMap (Lnet/minecraft/data/models/model/TextureMapping;)Ljava/util/Map; a
	createWithOverride (Lnet/minecraft/world/level/block/Block;Ljava/lang/String;Lnet/minecraft/data/models/model/TextureMapping;Ljava/util/function/BiConsumer;)Lnet/minecraft/resources/ResourceLocation; b
	createWithSuffix (Lnet/minecraft/world/level/block/Block;Ljava/lang/String;Lnet/minecraft/data/models/model/TextureMapping;Ljava/util/function/BiConsumer;)Lnet/minecraft/resources/ResourceLocation; a
net/minecraft/data/models/model/ModelTemplates iy
	ANVIL am
	ATTACHED_STEM ao
	BANNER_INVENTORY aP
	BED_INVENTORY aO
	BUTTON l
	BUTTON_INVENTORY n
	BUTTON_PRESSED m
	CAMPFIRE aw
	CARPET aa
	CHORUS_FLOWER ae
	COMMAND_BLOCK al
	CORAL_FAN ab
	CORAL_WALL_FAN ac
	CROP ap
	CROSS S
	CUBE a
	CUBE_ALL c
	CUBE_BOTTOM_TOP h
	CUBE_COLUMN e
	CUBE_COLUMN_HORIZONTAL f
	CUBE_DIRECTIONAL b
	CUBE_MIRRORED_ALL d
	CUBE_ORIENTABLE i
	CUBE_ORIENTABLE_TOP_BOTTOM j
	CUBE_ORIENTABLE_VERTICAL k
	CUBE_TOP g
	DAYLIGHT_DETECTOR af
	DOOR_BOTTOM o
	DOOR_BOTTOM_HINGE p
	DOOR_TOP q
	DOOR_TOP_HINGE r
	FARMLAND aq
	FENCE_GATE_CLOSED z
	FENCE_GATE_OPEN A
	FENCE_GATE_WALL_CLOSED B
	FENCE_GATE_WALL_OPEN C
	FENCE_INVENTORY u
	FENCE_POST s
	FENCE_SIDE t
	FIRE_FLOOR ar
	FIRE_SIDE as
	FIRE_SIDE_ALT at
	FIRE_UP au
	FIRE_UP_ALT av
	FLAT_HANDHELD_ITEM aL
	FLAT_HANDHELD_ROD_ITEM aM
	FLAT_ITEM aK
	FLOWER_POT_CROSS U
	FOUR_TURTLE_EGGS aI
	GLAZED_TERRACOTTA ad
	HANGING_LANTERN ay
	LANTERN ax
	LEAVES I
	ORIENTABLE_TRAPDOOR_BOTTOM Q
	ORIENTABLE_TRAPDOOR_OPEN R
	ORIENTABLE_TRAPDOOR_TOP P
	PARTICLE_ONLY F
	PISTON aB
	PISTON_HEAD aC
	PISTON_HEAD_SHORT aD
	PRESSURE_PLATE_DOWN E
	PRESSURE_PLATE_UP D
	RAIL_CURVED X
	RAIL_FLAT W
	RAIL_RAISED_NE Y
	RAIL_RAISED_SW Z
	SEAGRASS aE
	SHULKER_BOX_INVENTORY aN
	SINGLE_FACE aJ
	SKULL_INVENTORY aQ
	SLAB_BOTTOM G
	SLAB_TOP H
	STAINED_GLASS_PANE_NOSIDE ag
	STAINED_GLASS_PANE_NOSIDE_ALT ah
	STAINED_GLASS_PANE_POST ai
	STAINED_GLASS_PANE_SIDE aj
	STAINED_GLASS_PANE_SIDE_ALT ak
	STAIRS_INNER K
	STAIRS_OUTER L
	STAIRS_STRAIGHT J
	STEMS an
	THREE_TURTLE_EGGS aH
	TINTED_CROSS T
	TINTED_FLOWER_POT_CROSS V
	TORCH az
	TRAPDOOR_BOTTOM N
	TRAPDOOR_OPEN O
	TRAPDOOR_TOP M
	TURTLE_EGG aF
	TWO_TURTLE_EGGS aG
	WALL_INVENTORY y
	WALL_LOW_SIDE w
	WALL_POST v
	WALL_TALL_SIDE x
	WALL_TORCH aA
	create (Ljava/lang/String;Ljava/lang/String;[Lnet/minecraft/data/models/model/TextureSlot;)Lnet/minecraft/data/models/model/ModelTemplate; a
	create (Ljava/lang/String;[Lnet/minecraft/data/models/model/TextureSlot;)Lnet/minecraft/data/models/model/ModelTemplate; a
	create ([Lnet/minecraft/data/models/model/TextureSlot;)Lnet/minecraft/data/models/model/ModelTemplate; a
	createItem (Ljava/lang/String;[Lnet/minecraft/data/models/model/TextureSlot;)Lnet/minecraft/data/models/model/ModelTemplate; b
net/minecraft/data/models/model/TextureMapping iz
	forcedSlots b
	slots a
	attachedStem (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/data/models/model/TextureMapping; a
	campfire (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/data/models/model/TextureMapping; A
	column (Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/data/models/model/TextureMapping; a
	column (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/data/models/model/TextureMapping; j
	columnWithWall (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/data/models/model/TextureMapping; o
	commandBlock (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/data/models/model/TextureMapping; v
	copyAndUpdate (Lnet/minecraft/data/models/model/TextureSlot;Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/data/models/model/TextureMapping; c
	copyForced (Lnet/minecraft/data/models/model/TextureSlot;Lnet/minecraft/data/models/model/TextureSlot;)Lnet/minecraft/data/models/model/TextureMapping; b
	copySlot (Lnet/minecraft/data/models/model/TextureSlot;Lnet/minecraft/data/models/model/TextureSlot;)Lnet/minecraft/data/models/model/TextureMapping; a
	craftingTable (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/data/models/model/TextureMapping; c
	crop (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/data/models/model/TextureMapping; g
	cross (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/data/models/model/TextureMapping; c
	cross (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/data/models/model/TextureMapping; c
	cube (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/data/models/model/TextureMapping; b
	cube (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/data/models/model/TextureMapping; a
	cubeBottomTop (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/data/models/model/TextureMapping; m
	cubeBottomTopWithWall (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/data/models/model/TextureMapping; n
	cubeTop (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/data/models/model/TextureMapping; k
	defaultTexture (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/data/models/model/TextureMapping; a
	defaultTexture (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/data/models/model/TextureMapping; b
	door (Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/data/models/model/TextureMapping; b
	door (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/data/models/model/TextureMapping; p
	fan (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/data/models/model/TextureMapping; i
	fire0 (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/data/models/model/TextureMapping; r
	fire1 (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/data/models/model/TextureMapping; s
	fletchingTable (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/data/models/model/TextureMapping; d
	get (Lnet/minecraft/data/models/model/TextureSlot;)Lnet/minecraft/resources/ResourceLocation; a
	getBlockTexture (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/resources/ResourceLocation; C
	getBlockTexture (Lnet/minecraft/world/level/block/Block;Ljava/lang/String;)Lnet/minecraft/resources/ResourceLocation; a
	getForced ()Ljava/util/stream/Stream; a
	getItemTexture (Lnet/minecraft/world/item/Item;)Lnet/minecraft/resources/ResourceLocation; c
	getItemTexture (Lnet/minecraft/world/item/Item;Ljava/lang/String;)Lnet/minecraft/resources/ResourceLocation; a
	lantern (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/data/models/model/TextureMapping; t
	layer0 (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/data/models/model/TextureMapping; j
	layer0 (Lnet/minecraft/world/item/Item;)Lnet/minecraft/data/models/model/TextureMapping; b
	layer0 (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/data/models/model/TextureMapping; B
	logColumn (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/data/models/model/TextureMapping; l
	orientableCube (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/data/models/model/TextureMapping; w
	orientableCubeOnlyTop (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/data/models/model/TextureMapping; x
	orientableCubeSameEnds (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/data/models/model/TextureMapping; y
	pane (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/data/models/model/TextureMapping; b
	particle (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/data/models/model/TextureMapping; h
	particle (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/data/models/model/TextureMapping; q
	particleFromItem (Lnet/minecraft/world/item/Item;)Lnet/minecraft/data/models/model/TextureMapping; a
	pattern (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/data/models/model/TextureMapping; h
	plant (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/data/models/model/TextureMapping; d
	plant (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/data/models/model/TextureMapping; d
	put (Lnet/minecraft/data/models/model/TextureSlot;Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/data/models/model/TextureMapping; a
	putForced (Lnet/minecraft/data/models/model/TextureSlot;Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/data/models/model/TextureMapping; b
	rail (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/data/models/model/TextureMapping; e
	rail (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/data/models/model/TextureMapping; e
	singleSlot (Lnet/minecraft/data/models/model/TextureSlot;Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/data/models/model/TextureMapping; d
	stem (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/data/models/model/TextureMapping; g
	top (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/data/models/model/TextureMapping; z
	torch (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/data/models/model/TextureMapping; i
	torch (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/data/models/model/TextureMapping; u
	wool (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/data/models/model/TextureMapping; f
	wool (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/data/models/model/TextureMapping; f
net/minecraft/data/models/model/TextureSlot ja
	ALL a
	BACK h
	BOTTOM e
	CROP A
	CROSS p
	DIRT B
	DOWN o
	EAST l
	EDGE w
	END d
	FAN x
	FIRE C
	FRONT g
	LANTERN D
	LAYER0 H
	LIT_LOG I
	NORTH j
	PANE v
	PARTICLE c
	PATTERN u
	PLANT q
	PLATFORM E
	RAIL s
	SIDE i
	SOUTH k
	STEM y
	TEXTURE b
	TOP f
	TORCH G
	UNSTICKY F
	UP n
	UPPER_STEM z
	WALL r
	WEST m
	WOOL t
	id J
	parent K
	create (Ljava/lang/String;)Lnet/minecraft/data/models/model/TextureSlot; a
	create (Ljava/lang/String;Lnet/minecraft/data/models/model/TextureSlot;)Lnet/minecraft/data/models/model/TextureSlot; a
	getId ()Ljava/lang/String; a
	getParent ()Lnet/minecraft/data/models/model/TextureSlot; b
net/minecraft/data/models/model/TexturedModel jb
	ANVIL m
	CARPET i
	COLUMN c
	COLUMN_ALT r
	COLUMN_HORIZONTAL d
	COLUMN_HORIZONTAL_ALT s
	COLUMN_WITH_WALL u
	CORAL_FAN k
	CUBE a
	CUBE_MIRRORED b
	CUBE_TOP f
	CUBE_TOP_BOTTOM e
	GLAZED_TERRACOTTA j
	HANGING_LANTERN p
	LANTERN o
	LEAVES n
	ORIENTABLE h
	ORIENTABLE_ONLY_TOP g
	PARTICLE_ONLY l
	SEAGRASS q
	TOP_BOTTOM_WITH_WALL t
	mapping v
	template w
	create (Lnet/minecraft/world/level/block/Block;Ljava/util/function/BiConsumer;)Lnet/minecraft/resources/ResourceLocation; a
	createAllSame (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/data/models/model/TexturedModel; a
	createDefault (Ljava/util/function/Function;Lnet/minecraft/data/models/model/ModelTemplate;)Lnet/minecraft/data/models/model/TexturedModel$Provider; a
	createWithSuffix (Lnet/minecraft/world/level/block/Block;Ljava/lang/String;Ljava/util/function/BiConsumer;)Lnet/minecraft/resources/ResourceLocation; a
	getMapping ()Lnet/minecraft/data/models/model/TextureMapping; b
	getTemplate ()Lnet/minecraft/data/models/model/ModelTemplate; a
	updateTextures (Ljava/util/function/Consumer;)Lnet/minecraft/data/models/model/TexturedModel; a
net/minecraft/data/models/model/TexturedModel$Provider jb$a
	create (Lnet/minecraft/world/level/block/Block;Ljava/util/function/BiConsumer;)Lnet/minecraft/resources/ResourceLocation; a
	createWithSuffix (Lnet/minecraft/world/level/block/Block;Ljava/lang/String;Ljava/util/function/BiConsumer;)Lnet/minecraft/resources/ResourceLocation; a
	updateTexture (Ljava/util/function/Consumer;)Lnet/minecraft/data/models/model/TexturedModel$Provider; a
net/minecraft/data/recipes/FinishedRecipe jf
	getAdvancementId ()Lnet/minecraft/resources/ResourceLocation; e
	getId ()Lnet/minecraft/resources/ResourceLocation; b
	getType ()Lnet/minecraft/world/item/crafting/RecipeSerializer; c
	serializeAdvancement ()Lcom/google/gson/JsonObject; d
	serializeRecipe ()Lcom/google/gson/JsonObject; a
	serializeRecipeData (Lcom/google/gson/JsonObject;)V a
net/minecraft/data/recipes/RecipeProvider jg
	GSON c
	LOGGER b
	generator d
	banner (Ljava/util/function/Consumer;Lnet/minecraft/world/level/ItemLike;Lnet/minecraft/world/level/ItemLike;)V q
	bedFromPlanksAndWool (Ljava/util/function/Consumer;Lnet/minecraft/world/level/ItemLike;Lnet/minecraft/world/level/ItemLike;)V o
	bedFromWhiteBedAndDye (Ljava/util/function/Consumer;Lnet/minecraft/world/level/ItemLike;Lnet/minecraft/world/level/ItemLike;)V p
	buildShapelessRecipes (Ljava/util/function/Consumer;)V a
	carpetFromWool (Ljava/util/function/Consumer;Lnet/minecraft/world/level/ItemLike;Lnet/minecraft/world/level/ItemLike;)V m
	coloredCarpetFromWhiteCarpetAndDye (Ljava/util/function/Consumer;Lnet/minecraft/world/level/ItemLike;Lnet/minecraft/world/level/ItemLike;)V n
	coloredTerracottaFromTerracottaAndDye (Ljava/util/function/Consumer;Lnet/minecraft/world/level/ItemLike;Lnet/minecraft/world/level/ItemLike;)V u
	coloredWoolFromWhiteWoolAndDye (Ljava/util/function/Consumer;Lnet/minecraft/world/level/ItemLike;Lnet/minecraft/world/level/ItemLike;)V l
	concretePowder (Ljava/util/function/Consumer;Lnet/minecraft/world/level/ItemLike;Lnet/minecraft/world/level/ItemLike;)V v
	cookRecipes (Ljava/util/function/Consumer;Ljava/lang/String;Lnet/minecraft/world/item/crafting/SimpleCookingSerializer;I)V a
	getName ()Ljava/lang/String; a
	has (Lnet/minecraft/advancements/critereon/MinMaxBounds$Ints;Lnet/minecraft/world/level/ItemLike;)Lnet/minecraft/advancements/critereon/InventoryChangeTrigger$TriggerInstance; a
	has (Lnet/minecraft/tags/Tag;)Lnet/minecraft/advancements/critereon/InventoryChangeTrigger$TriggerInstance; a
	has (Lnet/minecraft/world/level/ItemLike;)Lnet/minecraft/advancements/critereon/InventoryChangeTrigger$TriggerInstance; a
	insideOf (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/advancements/critereon/EnterBlockTrigger$TriggerInstance; a
	inventoryTrigger ([Lnet/minecraft/advancements/critereon/ItemPredicate;)Lnet/minecraft/advancements/critereon/InventoryChangeTrigger$TriggerInstance; a
	netheriteSmithing (Ljava/util/function/Consumer;Lnet/minecraft/world/item/Item;Lnet/minecraft/world/item/Item;)V a
	planksFromLog (Ljava/util/function/Consumer;Lnet/minecraft/world/level/ItemLike;Lnet/minecraft/tags/Tag;)V a
	planksFromLogs (Ljava/util/function/Consumer;Lnet/minecraft/world/level/ItemLike;Lnet/minecraft/tags/Tag;)V b
	run (Lnet/minecraft/data/HashCache;)V a
	saveAdvancement (Lnet/minecraft/data/HashCache;Lcom/google/gson/JsonObject;Ljava/nio/file/Path;)V b
	saveRecipe (Lnet/minecraft/data/HashCache;Lcom/google/gson/JsonObject;Ljava/nio/file/Path;)V a
	stainedGlassFromGlassAndDye (Ljava/util/function/Consumer;Lnet/minecraft/world/level/ItemLike;Lnet/minecraft/world/level/ItemLike;)V r
	stainedGlassPaneFromGlassPaneAndDye (Ljava/util/function/Consumer;Lnet/minecraft/world/level/ItemLike;Lnet/minecraft/world/level/ItemLike;)V t
	stainedGlassPaneFromStainedGlass (Ljava/util/function/Consumer;Lnet/minecraft/world/level/ItemLike;Lnet/minecraft/world/level/ItemLike;)V s
	woodFromLogs (Ljava/util/function/Consumer;Lnet/minecraft/world/level/ItemLike;Lnet/minecraft/world/level/ItemLike;)V a
	woodenBoat (Ljava/util/function/Consumer;Lnet/minecraft/world/level/ItemLike;Lnet/minecraft/world/level/ItemLike;)V b
	woodenButton (Ljava/util/function/Consumer;Lnet/minecraft/world/level/ItemLike;Lnet/minecraft/world/level/ItemLike;)V c
	woodenDoor (Ljava/util/function/Consumer;Lnet/minecraft/world/level/ItemLike;Lnet/minecraft/world/level/ItemLike;)V d
	woodenFence (Ljava/util/function/Consumer;Lnet/minecraft/world/level/ItemLike;Lnet/minecraft/world/level/ItemLike;)V e
	woodenFenceGate (Ljava/util/function/Consumer;Lnet/minecraft/world/level/ItemLike;Lnet/minecraft/world/level/ItemLike;)V f
	woodenPressurePlate (Ljava/util/function/Consumer;Lnet/minecraft/world/level/ItemLike;Lnet/minecraft/world/level/ItemLike;)V g
	woodenSign (Ljava/util/function/Consumer;Lnet/minecraft/world/level/ItemLike;Lnet/minecraft/world/level/ItemLike;)V k
	woodenSlab (Ljava/util/function/Consumer;Lnet/minecraft/world/level/ItemLike;Lnet/minecraft/world/level/ItemLike;)V h
	woodenStairs (Ljava/util/function/Consumer;Lnet/minecraft/world/level/ItemLike;Lnet/minecraft/world/level/ItemLike;)V i
	woodenTrapdoor (Ljava/util/function/Consumer;Lnet/minecraft/world/level/ItemLike;Lnet/minecraft/world/level/ItemLike;)V j
net/minecraft/data/recipes/ShapedRecipeBuilder jh
	LOGGER a
	advancement f
	count c
	group g
	key e
	result b
	rows d
	define (Ljava/lang/Character;Lnet/minecraft/tags/Tag;)Lnet/minecraft/data/recipes/ShapedRecipeBuilder; a
	define (Ljava/lang/Character;Lnet/minecraft/world/item/crafting/Ingredient;)Lnet/minecraft/data/recipes/ShapedRecipeBuilder; a
	define (Ljava/lang/Character;Lnet/minecraft/world/level/ItemLike;)Lnet/minecraft/data/recipes/ShapedRecipeBuilder; a
	ensureValid (Lnet/minecraft/resources/ResourceLocation;)V a
	group (Ljava/lang/String;)Lnet/minecraft/data/recipes/ShapedRecipeBuilder; b
	pattern (Ljava/lang/String;)Lnet/minecraft/data/recipes/ShapedRecipeBuilder; a
	save (Ljava/util/function/Consumer;)V a
	save (Ljava/util/function/Consumer;Ljava/lang/String;)V a
	save (Ljava/util/function/Consumer;Lnet/minecraft/resources/ResourceLocation;)V a
	shaped (Lnet/minecraft/world/level/ItemLike;)Lnet/minecraft/data/recipes/ShapedRecipeBuilder; a
	shaped (Lnet/minecraft/world/level/ItemLike;I)Lnet/minecraft/data/recipes/ShapedRecipeBuilder; a
	unlockedBy (Ljava/lang/String;Lnet/minecraft/advancements/CriterionTriggerInstance;)Lnet/minecraft/data/recipes/ShapedRecipeBuilder; a
net/minecraft/data/recipes/ShapedRecipeBuilder$Result jh$a
	advancement h
	advancementId i
	count d
	group e
	id b
	key g
	pattern f
	result c
	getAdvancementId ()Lnet/minecraft/resources/ResourceLocation; e
	getId ()Lnet/minecraft/resources/ResourceLocation; b
	getType ()Lnet/minecraft/world/item/crafting/RecipeSerializer; c
	serializeAdvancement ()Lcom/google/gson/JsonObject; d
	serializeRecipeData (Lcom/google/gson/JsonObject;)V a
net/minecraft/data/recipes/ShapelessRecipeBuilder ji
	LOGGER a
	advancement e
	count c
	group f
	ingredients d
	result b
	ensureValid (Lnet/minecraft/resources/ResourceLocation;)V a
	group (Ljava/lang/String;)Lnet/minecraft/data/recipes/ShapelessRecipeBuilder; a
	requires (Lnet/minecraft/tags/Tag;)Lnet/minecraft/data/recipes/ShapelessRecipeBuilder; a
	requires (Lnet/minecraft/world/item/crafting/Ingredient;)Lnet/minecraft/data/recipes/ShapelessRecipeBuilder; a
	requires (Lnet/minecraft/world/item/crafting/Ingredient;I)Lnet/minecraft/data/recipes/ShapelessRecipeBuilder; a
	requires (Lnet/minecraft/world/level/ItemLike;)Lnet/minecraft/data/recipes/ShapelessRecipeBuilder; b
	requires (Lnet/minecraft/world/level/ItemLike;I)Lnet/minecraft/data/recipes/ShapelessRecipeBuilder; b
	save (Ljava/util/function/Consumer;)V a
	save (Ljava/util/function/Consumer;Ljava/lang/String;)V a
	save (Ljava/util/function/Consumer;Lnet/minecraft/resources/ResourceLocation;)V a
	shapeless (Lnet/minecraft/world/level/ItemLike;)Lnet/minecraft/data/recipes/ShapelessRecipeBuilder; a
	shapeless (Lnet/minecraft/world/level/ItemLike;I)Lnet/minecraft/data/recipes/ShapelessRecipeBuilder; a
	unlockedBy (Ljava/lang/String;Lnet/minecraft/advancements/CriterionTriggerInstance;)Lnet/minecraft/data/recipes/ShapelessRecipeBuilder; a
net/minecraft/data/recipes/ShapelessRecipeBuilder$Result ji$a
	advancement f
	advancementId g
	count c
	group d
	id a
	ingredients e
	result b
	getAdvancementId ()Lnet/minecraft/resources/ResourceLocation; e
	getId ()Lnet/minecraft/resources/ResourceLocation; b
	getType ()Lnet/minecraft/world/item/crafting/RecipeSerializer; c
	serializeAdvancement ()Lcom/google/gson/JsonObject; d
	serializeRecipeData (Lcom/google/gson/JsonObject;)V a
net/minecraft/data/recipes/SimpleCookingRecipeBuilder jj
	advancement e
	cookingTime d
	experience c
	group f
	ingredient b
	result a
	serializer g
	blasting (Lnet/minecraft/world/item/crafting/Ingredient;Lnet/minecraft/world/level/ItemLike;FI)Lnet/minecraft/data/recipes/SimpleCookingRecipeBuilder; b
	campfireCooking (Lnet/minecraft/world/item/crafting/Ingredient;Lnet/minecraft/world/level/ItemLike;FI)Lnet/minecraft/data/recipes/SimpleCookingRecipeBuilder; a
	cooking (Lnet/minecraft/world/item/crafting/Ingredient;Lnet/minecraft/world/level/ItemLike;FILnet/minecraft/world/item/crafting/SimpleCookingSerializer;)Lnet/minecraft/data/recipes/SimpleCookingRecipeBuilder; a
	ensureValid (Lnet/minecraft/resources/ResourceLocation;)V a
	group (Ljava/lang/String;)Lnet/minecraft/data/recipes/SimpleCookingRecipeBuilder; a
	save (Ljava/util/function/Consumer;)V a
	save (Ljava/util/function/Consumer;Ljava/lang/String;)V a
	save (Ljava/util/function/Consumer;Lnet/minecraft/resources/ResourceLocation;)V a
	smelting (Lnet/minecraft/world/item/crafting/Ingredient;Lnet/minecraft/world/level/ItemLike;FI)Lnet/minecraft/data/recipes/SimpleCookingRecipeBuilder; c
	smoking (Lnet/minecraft/world/item/crafting/Ingredient;Lnet/minecraft/world/level/ItemLike;FI)Lnet/minecraft/data/recipes/SimpleCookingRecipeBuilder; d
	unlockedBy (Ljava/lang/String;Lnet/minecraft/advancements/CriterionTriggerInstance;)Lnet/minecraft/data/recipes/SimpleCookingRecipeBuilder; a
net/minecraft/data/recipes/SimpleCookingRecipeBuilder$Result jj$a
	advancement g
	advancementId h
	cookingTime f
	experience e
	group b
	id a
	ingredient c
	result d
	serializer i
	getAdvancementId ()Lnet/minecraft/resources/ResourceLocation; e
	getId ()Lnet/minecraft/resources/ResourceLocation; b
	getType ()Lnet/minecraft/world/item/crafting/RecipeSerializer; c
	serializeAdvancement ()Lcom/google/gson/JsonObject; d
	serializeRecipeData (Lcom/google/gson/JsonObject;)V a
net/minecraft/data/recipes/SingleItemRecipeBuilder jk
	advancement d
	count c
	group e
	ingredient b
	result a
	type f
	ensureValid (Lnet/minecraft/resources/ResourceLocation;)V a
	group (Ljava/lang/String;)Lnet/minecraft/data/recipes/SingleItemRecipeBuilder; a
	save (Ljava/util/function/Consumer;Ljava/lang/String;)V a
	save (Ljava/util/function/Consumer;Lnet/minecraft/resources/ResourceLocation;)V a
	stonecutting (Lnet/minecraft/world/item/crafting/Ingredient;Lnet/minecraft/world/level/ItemLike;)Lnet/minecraft/data/recipes/SingleItemRecipeBuilder; a
	stonecutting (Lnet/minecraft/world/item/crafting/Ingredient;Lnet/minecraft/world/level/ItemLike;I)Lnet/minecraft/data/recipes/SingleItemRecipeBuilder; a
	unlocks (Ljava/lang/String;Lnet/minecraft/advancements/CriterionTriggerInstance;)Lnet/minecraft/data/recipes/SingleItemRecipeBuilder; a
net/minecraft/data/recipes/SingleItemRecipeBuilder$Result jk$a
	advancement f
	advancementId g
	count e
	group b
	id a
	ingredient c
	result d
	type h
	getAdvancementId ()Lnet/minecraft/resources/ResourceLocation; e
	getId ()Lnet/minecraft/resources/ResourceLocation; b
	getType ()Lnet/minecraft/world/item/crafting/RecipeSerializer; c
	serializeAdvancement ()Lcom/google/gson/JsonObject; d
	serializeRecipeData (Lcom/google/gson/JsonObject;)V a
net/minecraft/data/recipes/SpecialRecipeBuilder jl
	serializer a
	save (Ljava/util/function/Consumer;Ljava/lang/String;)V a
	special (Lnet/minecraft/world/item/crafting/SimpleRecipeSerializer;)Lnet/minecraft/data/recipes/SpecialRecipeBuilder; a
net/minecraft/data/recipes/UpgradeRecipeBuilder jm
	addition b
	advancement d
	base a
	result c
	type e
	ensureValid (Lnet/minecraft/resources/ResourceLocation;)V a
	save (Ljava/util/function/Consumer;Ljava/lang/String;)V a
	save (Ljava/util/function/Consumer;Lnet/minecraft/resources/ResourceLocation;)V a
	smithing (Lnet/minecraft/world/item/crafting/Ingredient;Lnet/minecraft/world/item/crafting/Ingredient;Lnet/minecraft/world/item/Item;)Lnet/minecraft/data/recipes/UpgradeRecipeBuilder; a
	unlocks (Ljava/lang/String;Lnet/minecraft/advancements/CriterionTriggerInstance;)Lnet/minecraft/data/recipes/UpgradeRecipeBuilder; a
net/minecraft/data/recipes/UpgradeRecipeBuilder$Result jm$a
	addition c
	advancement e
	advancementId f
	base b
	id a
	result d
	type g
	getAdvancementId ()Lnet/minecraft/resources/ResourceLocation; e
	getId ()Lnet/minecraft/resources/ResourceLocation; b
	getType ()Lnet/minecraft/world/item/crafting/RecipeSerializer; c
	serializeAdvancement ()Lcom/google/gson/JsonObject; d
	serializeRecipeData (Lcom/google/gson/JsonObject;)V a
net/minecraft/data/structures/NbtToSnbt jo
	LOGGER b
	generator c
	convertStructure (Ljava/nio/file/Path;Ljava/lang/String;Ljava/nio/file/Path;)Ljava/nio/file/Path; a
	getName ()Ljava/lang/String; a
	getName (Ljava/nio/file/Path;Ljava/nio/file/Path;)Ljava/lang/String; a
	run (Lnet/minecraft/data/HashCache;)V a
net/minecraft/data/structures/SnbtToNbt jp
	LOGGER c
	dumpSnbtTo b
	filters e
	generator d
	addFilter (Lnet/minecraft/data/structures/SnbtToNbt$Filter;)Lnet/minecraft/data/structures/SnbtToNbt; a
	applyFilters (Ljava/lang/String;Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/nbt/CompoundTag; a
	getName ()Ljava/lang/String; a
	getName (Ljava/nio/file/Path;Ljava/nio/file/Path;)Ljava/lang/String; a
	readStructure (Ljava/nio/file/Path;Ljava/lang/String;)Lnet/minecraft/data/structures/SnbtToNbt$TaskResult; a
	run (Lnet/minecraft/data/HashCache;)V a
	storeStructureIfChanged (Lnet/minecraft/data/HashCache;Lnet/minecraft/data/structures/SnbtToNbt$TaskResult;Ljava/nio/file/Path;)V a
net/minecraft/data/structures/SnbtToNbt$Filter jp$a
	apply (Ljava/lang/String;Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/nbt/CompoundTag; a
net/minecraft/data/structures/SnbtToNbt$TaskResult jp$b
	hash d
	name a
	payload b
	snbtPayload c
net/minecraft/data/structures/StructureUpdater jq
	LOGGER a
	apply (Ljava/lang/String;Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/nbt/CompoundTag; a
	patchVersion (Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/nbt/CompoundTag; a
	updateStructure (Ljava/lang/String;Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/nbt/CompoundTag; b
net/minecraft/data/tags/BlockTagsProvider js
	addTags ()V b
	getName ()Ljava/lang/String; a
	getPath (Lnet/minecraft/resources/ResourceLocation;)Ljava/nio/file/Path; a
net/minecraft/data/tags/EntityTypeTagsProvider jt
	addTags ()V b
	getName ()Ljava/lang/String; a
	getPath (Lnet/minecraft/resources/ResourceLocation;)Ljava/nio/file/Path; a
net/minecraft/data/tags/FluidTagsProvider ju
	addTags ()V b
	getName ()Ljava/lang/String; a
	getPath (Lnet/minecraft/resources/ResourceLocation;)Ljava/nio/file/Path; a
net/minecraft/data/tags/ItemTagsProvider jv
	blockTags d
	addTags ()V b
	copy (Lnet/minecraft/tags/Tag$Named;Lnet/minecraft/tags/Tag$Named;)V a
	getName ()Ljava/lang/String; a
	getPath (Lnet/minecraft/resources/ResourceLocation;)Ljava/nio/file/Path; a
net/minecraft/data/tags/TagsProvider jw
	GSON e
	LOGGER d
	builders f
	generator b
	registry c
	addTags ()V b
	getOrCreateRawBuilder (Lnet/minecraft/tags/Tag$Named;)Lnet/minecraft/tags/Tag$Builder; b
	getPath (Lnet/minecraft/resources/ResourceLocation;)Ljava/nio/file/Path; a
	run (Lnet/minecraft/data/HashCache;)V a
	tag (Lnet/minecraft/tags/Tag$Named;)Lnet/minecraft/data/tags/TagsProvider$TagAppender; a
net/minecraft/data/tags/TagsProvider$TagAppender jw$a
	builder a
	registry b
	source c
	add (Ljava/lang/Object;)Lnet/minecraft/data/tags/TagsProvider$TagAppender; a
	add ([Ljava/lang/Object;)Lnet/minecraft/data/tags/TagsProvider$TagAppender; a
	addOptional (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/data/tags/TagsProvider$TagAppender; a
	addOptionalTag (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/data/tags/TagsProvider$TagAppender; b
	addTag (Lnet/minecraft/tags/Tag$Named;)Lnet/minecraft/data/tags/TagsProvider$TagAppender; a
net/minecraft/data/worldgen/BastionBridgePools jy
	bootstrap ()V a
net/minecraft/data/worldgen/BastionHoglinStablePools jz
	bootstrap ()V a
net/minecraft/data/worldgen/BastionHousingUnitsPools ka
	bootstrap ()V a
net/minecraft/data/worldgen/BastionPieces kb
	START a
	bootstrap ()V a
net/minecraft/data/worldgen/BastionSharedPools kc
	bootstrap ()V a
net/minecraft/data/worldgen/BastionTreasureRoomPools kd
	bootstrap ()V a
net/minecraft/data/worldgen/BiomeDefaultFeatures ke
	addAncientDebris (Lnet/minecraft/world/level/biome/BiomeGenerationSettings$Builder;)V ap
	addBadlandExtraVegetation (Lnet/minecraft/world/level/biome/BiomeGenerationSettings$Builder;)V ab
	addBadlandGrass (Lnet/minecraft/world/level/biome/BiomeGenerationSettings$Builder;)V M
	addBadlandsTrees (Lnet/minecraft/world/level/biome/BiomeGenerationSettings$Builder;)V G
	addBambooVegetation (Lnet/minecraft/world/level/biome/BiomeGenerationSettings$Builder;)V u
	addBerryBushes (Lnet/minecraft/world/level/biome/BiomeGenerationSettings$Builder;)V r
	addBirchTrees (Lnet/minecraft/world/level/biome/BiomeGenerationSettings$Builder;)V x
	addBlueIce (Lnet/minecraft/world/level/biome/BiomeGenerationSettings$Builder;)V am
	addColdOceanExtraVegetation (Lnet/minecraft/world/level/biome/BiomeGenerationSettings$Builder;)V ah
	addDefaultCarvers (Lnet/minecraft/world/level/biome/BiomeGenerationSettings$Builder;)V d
	addDefaultExtraVegetation (Lnet/minecraft/world/level/biome/BiomeGenerationSettings$Builder;)V aa
	addDefaultFlowers (Lnet/minecraft/world/level/biome/BiomeGenerationSettings$Builder;)V U
	addDefaultGrass (Lnet/minecraft/world/level/biome/BiomeGenerationSettings$Builder;)V W
	addDefaultLakes (Lnet/minecraft/world/level/biome/BiomeGenerationSettings$Builder;)V f
	addDefaultMonsterRoom (Lnet/minecraft/world/level/biome/BiomeGenerationSettings$Builder;)V h
	addDefaultMushrooms (Lnet/minecraft/world/level/biome/BiomeGenerationSettings$Builder;)V Z
	addDefaultOres (Lnet/minecraft/world/level/biome/BiomeGenerationSettings$Builder;)V j
	addDefaultOverworldLandMesaStructures (Lnet/minecraft/world/level/biome/BiomeGenerationSettings$Builder;)V a
	addDefaultOverworldLandStructures (Lnet/minecraft/world/level/biome/BiomeGenerationSettings$Builder;)V b
	addDefaultOverworldOceanStructures (Lnet/minecraft/world/level/biome/BiomeGenerationSettings$Builder;)V c
	addDefaultSeagrass (Lnet/minecraft/world/level/biome/BiomeGenerationSettings$Builder;)V ai
	addDefaultSoftDisks (Lnet/minecraft/world/level/biome/BiomeGenerationSettings$Builder;)V n
	addDefaultSprings (Lnet/minecraft/world/level/biome/BiomeGenerationSettings$Builder;)V ak
	addDefaultUndergroundVariety (Lnet/minecraft/world/level/biome/BiomeGenerationSettings$Builder;)V i
	addDesertExtraDecoration (Lnet/minecraft/world/level/biome/BiomeGenerationSettings$Builder;)V af
	addDesertExtraVegetation (Lnet/minecraft/world/level/biome/BiomeGenerationSettings$Builder;)V ad
	addDesertLakes (Lnet/minecraft/world/level/biome/BiomeGenerationSettings$Builder;)V g
	addDesertVegetation (Lnet/minecraft/world/level/biome/BiomeGenerationSettings$Builder;)V S
	addExtraEmeralds (Lnet/minecraft/world/level/biome/BiomeGenerationSettings$Builder;)V l
	addExtraGold (Lnet/minecraft/world/level/biome/BiomeGenerationSettings$Builder;)V k
	addFerns (Lnet/minecraft/world/level/biome/BiomeGenerationSettings$Builder;)V q
	addForestFlowers (Lnet/minecraft/world/level/biome/BiomeGenerationSettings$Builder;)V N
	addForestGrass (Lnet/minecraft/world/level/biome/BiomeGenerationSettings$Builder;)V O
	addFossilDecoration (Lnet/minecraft/world/level/biome/BiomeGenerationSettings$Builder;)V ag
	addGiantTaigaVegetation (Lnet/minecraft/world/level/biome/BiomeGenerationSettings$Builder;)V T
	addIcebergs (Lnet/minecraft/world/level/biome/BiomeGenerationSettings$Builder;)V al
	addInfestedStone (Lnet/minecraft/world/level/biome/BiomeGenerationSettings$Builder;)V m
	addJungleEdgeTrees (Lnet/minecraft/world/level/biome/BiomeGenerationSettings$Builder;)V F
	addJungleExtraVegetation (Lnet/minecraft/world/level/biome/BiomeGenerationSettings$Builder;)V ac
	addJungleGrass (Lnet/minecraft/world/level/biome/BiomeGenerationSettings$Builder;)V I
	addJungleTrees (Lnet/minecraft/world/level/biome/BiomeGenerationSettings$Builder;)V E
	addLightBambooVegetation (Lnet/minecraft/world/level/biome/BiomeGenerationSettings$Builder;)V t
	addLukeWarmKelp (Lnet/minecraft/world/level/biome/BiomeGenerationSettings$Builder;)V aj
	addMossyStoneBlock (Lnet/minecraft/world/level/biome/BiomeGenerationSettings$Builder;)V p
	addMountainEdgeTrees (Lnet/minecraft/world/level/biome/BiomeGenerationSettings$Builder;)V D
	addMountainTrees (Lnet/minecraft/world/level/biome/BiomeGenerationSettings$Builder;)V C
	addMushroomFieldVegetation (Lnet/minecraft/world/level/biome/BiomeGenerationSettings$Builder;)V Q
	addNetherDefaultOres (Lnet/minecraft/world/level/biome/BiomeGenerationSettings$Builder;)V ao
	addOceanCarvers (Lnet/minecraft/world/level/biome/BiomeGenerationSettings$Builder;)V e
	addOtherBirchTrees (Lnet/minecraft/world/level/biome/BiomeGenerationSettings$Builder;)V y
	addPlainGrass (Lnet/minecraft/world/level/biome/BiomeGenerationSettings$Builder;)V Y
	addPlainVegetation (Lnet/minecraft/world/level/biome/BiomeGenerationSettings$Builder;)V R
	addSavannaExtraGrass (Lnet/minecraft/world/level/biome/BiomeGenerationSettings$Builder;)V L
	addSavannaGrass (Lnet/minecraft/world/level/biome/BiomeGenerationSettings$Builder;)V J
	addSavannaTrees (Lnet/minecraft/world/level/biome/BiomeGenerationSettings$Builder;)V A
	addShatteredSavannaGrass (Lnet/minecraft/world/level/biome/BiomeGenerationSettings$Builder;)V K
	addShatteredSavannaTrees (Lnet/minecraft/world/level/biome/BiomeGenerationSettings$Builder;)V B
	addSnowyTrees (Lnet/minecraft/world/level/biome/BiomeGenerationSettings$Builder;)V H
	addSparseBerryBushes (Lnet/minecraft/world/level/biome/BiomeGenerationSettings$Builder;)V s
	addSurfaceFreezing (Lnet/minecraft/world/level/biome/BiomeGenerationSettings$Builder;)V an
	addSwampClayDisk (Lnet/minecraft/world/level/biome/BiomeGenerationSettings$Builder;)V o
	addSwampExtraVegetation (Lnet/minecraft/world/level/biome/BiomeGenerationSettings$Builder;)V ae
	addSwampVegetation (Lnet/minecraft/world/level/biome/BiomeGenerationSettings$Builder;)V P
	addTaigaGrass (Lnet/minecraft/world/level/biome/BiomeGenerationSettings$Builder;)V X
	addTaigaTrees (Lnet/minecraft/world/level/biome/BiomeGenerationSettings$Builder;)V v
	addTallBirchTrees (Lnet/minecraft/world/level/biome/BiomeGenerationSettings$Builder;)V z
	addWarmFlowers (Lnet/minecraft/world/level/biome/BiomeGenerationSettings$Builder;)V V
	addWaterTrees (Lnet/minecraft/world/level/biome/BiomeGenerationSettings$Builder;)V w
	ambientSpawns (Lnet/minecraft/world/level/biome/MobSpawnSettings$Builder;)V b
	baseJungleSpawns (Lnet/minecraft/world/level/biome/MobSpawnSettings$Builder;)V h
	commonSpawns (Lnet/minecraft/world/level/biome/MobSpawnSettings$Builder;)V c
	desertSpawns (Lnet/minecraft/world/level/biome/MobSpawnSettings$Builder;)V f
	endSpawns (Lnet/minecraft/world/level/biome/MobSpawnSettings$Builder;)V i
	farmAnimals (Lnet/minecraft/world/level/biome/MobSpawnSettings$Builder;)V a
	monsters (Lnet/minecraft/world/level/biome/MobSpawnSettings$Builder;III)V b
	mooshroomSpawns (Lnet/minecraft/world/level/biome/MobSpawnSettings$Builder;)V g
	oceanSpawns (Lnet/minecraft/world/level/biome/MobSpawnSettings$Builder;III)V a
	plainsSpawns (Lnet/minecraft/world/level/biome/MobSpawnSettings$Builder;)V d
	snowySpawns (Lnet/minecraft/world/level/biome/MobSpawnSettings$Builder;)V e
	warmOceanSpawns (Lnet/minecraft/world/level/biome/MobSpawnSettings$Builder;II)V a
net/minecraft/data/worldgen/Carvers kf
	CANYON b
	CAVE a
	NETHER_CAVE f
	OCEAN_CAVE c
	UNDERWATER_CANYON d
	UNDERWATER_CAVE e
	register (Ljava/lang/String;Lnet/minecraft/world/level/levelgen/carver/ConfiguredWorldCarver;)Lnet/minecraft/world/level/levelgen/carver/ConfiguredWorldCarver; a
net/minecraft/data/worldgen/DesertVillagePools kg
	START a
	bootstrap ()V a
net/minecraft/data/worldgen/Features kh
	ACACIA bK
	BAMBOO M
	BAMBOO_LIGHT L
	BAMBOO_VEGETATION cH
	BASALT_BLOBS j
	BASALT_PILLAR s
	BIRCH bJ
	BIRCH_BEES_0002 bZ
	BIRCH_BEES_002 ca
	BIRCH_BEES_005 cb
	BIRCH_OTHER cB
	BIRCH_TALL cw
	BLACKSTONE_BLOBS k
	BLUE_ICE K
	BONUS_CHEST U
	BROWN_MUSHROOM_GIANT aZ
	BROWN_MUSHROOM_NETHER aT
	BROWN_MUSHROOM_NORMAL aV
	BROWN_MUSHROOM_SWAMP bb
	BROWN_MUSHROOM_TAIGA aX
	CHORUS_PLANT d
	CRIMSON_FOREST_VEGETATION n
	CRIMSON_FUNGI bB
	CRIMSON_FUNGI_PLANTED bC
	DARK_FOREST_VEGETATION_BROWN cp
	DARK_FOREST_VEGETATION_RED cq
	DARK_OAK bI
	DELTA g
	DISK_CLAY Q
	DISK_GRAVEL R
	DISK_SAND S
	END_GATEWAY b
	END_GATEWAY_DELAYED c
	END_ISLAND e
	END_ISLAND_DECORATED f
	END_SPIKE a
	FANCY_OAK bO
	FANCY_OAK_BEES_0002 cc
	FANCY_OAK_BEES_002 cd
	FANCY_OAK_BEES_005 ce
	FLOWER_DEFAULT ci
	FLOWER_FOREST cj
	FLOWER_PLAIN cl
	FLOWER_PLAIN_DECORATED cm
	FLOWER_SWAMP ck
	FLOWER_WARM ch
	FOREST_FLOWER_FEATURES cJ
	FOREST_FLOWER_TREES cs
	FOREST_FLOWER_VEGETATION co
	FOREST_FLOWER_VEGETATION_COMMON cn
	FOREST_ROCK E
	FOSSIL Y
	FREEZE_TOP_LAYER T
	GLOWSTONE m
	GLOWSTONE_EXTRA l
	HUGE_BROWN_MUSHROOM bF
	HUGE_RED_MUSHROOM bG
	ICEBERG_BLUE H
	ICEBERG_PACKED G
	ICE_PATCH D
	ICE_SPIKE C
	JUNGLE_BUSH bV
	JUNGLE_TREE bN
	JUNGLE_TREE_NO_VINE bP
	KELP_COLD I
	KELP_WARM J
	LAKE_LAVA P
	LAKE_WATER O
	LARGE_BASALT_COLUMNS i
	MEGA_JUNGLE_TREE bQ
	MEGA_PINE bS
	MEGA_SPRUCE bR
	MONSTER_ROOM W
	MUSHROOM_FIELD_VEGETATION cI
	NETHER_SPROUTS p
	OAK bH
	OAK_BADLANDS cf
	OAK_BEES_0002 bW
	OAK_BEES_002 bX
	OAK_BEES_005 bY
	ORE_ANDESITE bp
	ORE_BLACKSTONE bk
	ORE_COAL bq
	ORE_DEBRIS_LARGE bz
	ORE_DEBRIS_SMALL bA
	ORE_DIAMOND bv
	ORE_DIORITE bo
	ORE_DIRT bl
	ORE_EMERALD by
	ORE_GOLD bt
	ORE_GOLD_DELTAS bf
	ORE_GOLD_EXTRA bs
	ORE_GOLD_NETHER bh
	ORE_GRANITE bn
	ORE_GRAVEL bm
	ORE_GRAVEL_NETHER bj
	ORE_INFESTED bx
	ORE_IRON br
	ORE_LAPIS bw
	ORE_MAGMA bd
	ORE_QUARTZ_DELTAS bg
	ORE_QUARTZ_NETHER bi
	ORE_REDSTONE bu
	ORE_SOUL_SAND be
	PATCH_BERRY_BUSH at
	PATCH_BERRY_DECORATED aH
	PATCH_BERRY_SPARSE aG
	PATCH_BROWN_MUSHROOM an
	PATCH_CACTUS aM
	PATCH_CACTUS_DECORATED aO
	PATCH_CACTUS_DESERT aN
	PATCH_CRIMSON_ROOTS ap
	PATCH_DEAD_BUSH aD
	PATCH_DEAD_BUSH_2 aC
	PATCH_DEAD_BUSH_BADLANDS aE
	PATCH_FIRE al
	PATCH_GRASS_BADLANDS aw
	PATCH_GRASS_FOREST av
	PATCH_GRASS_JUNGLE aB
	PATCH_GRASS_NORMAL ay
	PATCH_GRASS_PLAIN au
	PATCH_GRASS_SAVANNA ax
	PATCH_GRASS_TAIGA aA
	PATCH_GRASS_TAIGA_2 az
	PATCH_LARGE_FERN aL
	PATCH_MELON aF
	PATCH_PUMPKIN ar
	PATCH_RED_MUSHROOM ao
	PATCH_SOUL_FIRE am
	PATCH_SUGAR_CANE aS
	PATCH_SUGAR_CANE_BADLANDS aR
	PATCH_SUGAR_CANE_DESERT aQ
	PATCH_SUGAR_CANE_SWAMP aP
	PATCH_SUNFLOWER aq
	PATCH_TAIGA_GRASS as
	PATCH_TALL_GRASS aK
	PATCH_TALL_GRASS_2 aJ
	PATCH_WATERLILLY aI
	PILE_HAY ag
	PILE_ICE aj
	PILE_MELON ah
	PILE_PUMPKIN ak
	PILE_SNOW ai
	PINE bM
	PLAIN_VEGETATION cC
	RED_MUSHROOM_GIANT ba
	RED_MUSHROOM_NETHER aU
	RED_MUSHROOM_NORMAL aW
	RED_MUSHROOM_SWAMP bc
	RED_MUSHROOM_TAIGA aY
	SEAGRASS_COLD t
	SEAGRASS_DEEP x
	SEAGRASS_DEEP_COLD u
	SEAGRASS_DEEP_WARM A
	SEAGRASS_NORMAL v
	SEAGRASS_RIVER w
	SEAGRASS_SIMPLE F
	SEAGRASS_SWAMP y
	SEAGRASS_WARM z
	SEA_PICKLE B
	SMALL_BASALT_COLUMNS h
	SPRING_CLOSED ac
	SPRING_CLOSED_DOUBLE ad
	SPRING_DELTA ab
	SPRING_LAVA aa
	SPRING_LAVA_DOUBLE Z
	SPRING_OPEN ae
	SPRING_WATER af
	SPRUCE bL
	SPRUCE_SNOWY cg
	SUPER_BIRCH_BEES_0002 bT
	SWAMP_TREE bU
	TAIGA_VEGETATION ct
	TREES_BIRCH cx
	TREES_GIANT cF
	TREES_GIANT_SPRUCE cE
	TREES_JUNGLE cG
	TREES_JUNGLE_EDGE cD
	TREES_MOUNTAIN cz
	TREES_MOUNTAIN_EDGE cy
	TREES_SAVANNA cv
	TREES_SHATTERED_SAVANNA cu
	TREES_WATER cA
	TWISTING_VINES q
	VINES N
	VOID_START_PLATFORM V
	WARM_OCEAN_VEGETATION cr
	WARPED_FOREST_VEGETATION o
	WARPED_FUNGI bD
	WARPED_FUNGI_PLANTED bE
	WEEPING_VINES r
	WELL X
	register (Ljava/lang/String;Lnet/minecraft/world/level/levelgen/feature/ConfiguredFeature;)Lnet/minecraft/world/level/levelgen/feature/ConfiguredFeature; a
net/minecraft/data/worldgen/Features$Configs kh$a
	CLOSED_NETHER_SPRING_CONFIG j
	CRIMSON_FOREST_CONFIG k
	DEAD_BUSH_CONFIG e
	DEFAULT_FLOWER_CONFIG d
	DEFAULT_GRASS_CONFIG a
	JUNGLE_GRASS_CONFIG c
	LAVA_SPRING_CONFIG i
	NETHER_SPROUTS_CONFIG m
	SUGAR_CANE_CONFIG h
	SWEET_BERRY_BUSH_CONFIG f
	TAIGA_GRASS_CONFIG b
	TALL_GRASS_CONFIG g
	WARPED_FOREST_CONFIG l
net/minecraft/data/worldgen/Features$Decorators kh$b
	ADD_32 k
	BEEHIVE_0002 a
	BEEHIVE_002 b
	BEEHIVE_005 c
	FIRE d
	HEIGHTMAP e
	HEIGHTMAP_DOUBLE h
	HEIGHTMAP_DOUBLE_SQUARE m
	HEIGHTMAP_SQUARE l
	HEIGHTMAP_WORLD_SURFACE g
	RANGE_10_20_ROOFED i
	RANGE_4_8_ROOFED j
	TOP_SOLID_HEIGHTMAP f
	TOP_SOLID_HEIGHTMAP_SQUARE n
net/minecraft/data/worldgen/Features$States kh$c
	ACACIA_LEAVES o
	ACACIA_LOG n
	ANCIENT_DEBRIS aA
	ANDESITE ah
	BASALT aB
	BIRCH_LEAVES q
	BIRCH_LOG p
	BLACKSTONE az
	BLUE_ICE C
	BLUE_ORCHID E
	BROWN_MUSHROOM z
	CACTUS U
	CLAY as
	COAL_ORE ai
	COARSE_DIRT d
	CRIMSON_FUNGUS aC
	CRIMSON_ROOTS P
	DANDELION G
	DARK_OAK_LEAVES s
	DARK_OAK_LOG r
	DEAD_BUSH H
	DIAMOND_ORE am
	DIORITE ag
	DIRT ad
	EMERALD_ORE ap
	FERN b
	FIRE L
	GOLD_ORE ak
	GRANITE af
	GRASS a
	GRASS_BLOCK t
	GRAVEL ae
	HUGE_BROWN_MUSHROOM X
	HUGE_MUSHROOM_STEM Y
	HUGE_RED_MUSHROOM W
	ICE g
	INFESTED_STONE aq
	IRON_ORE aj
	JACK_O_LANTERN S
	JUNGLE_LEAVES k
	JUNGLE_LOG j
	LAPIS_ORE an
	LARGE_FERN u
	LAVA ac
	LAVA_STATE aa
	LILAC w
	LILY_OF_THE_VALLEY D
	LILY_PAD Q
	MAGMA_BLOCK av
	MELON I
	MOSSY_COBBLESTONE at
	MYCELIUM e
	NETHERRACK N
	NETHER_GOLD_ORE ax
	NETHER_QUARTZ_ORE ay
	NETHER_SPROUTS aF
	OAK_LEAVES i
	OAK_LOG h
	PACKED_ICE B
	PEONY y
	PODZOL c
	POPPY F
	PUMPKIN J
	REDSTONE_ORE al
	RED_MUSHROOM A
	ROSE_BUSH x
	SAND ar
	SEAGRASS au
	SNOW R
	SNOW_BLOCK f
	SOUL_FIRE M
	SOUL_SAND aw
	SOUL_SOIL O
	SPRUCE_LEAVES m
	SPRUCE_LOG l
	STONE ao
	SUGAR_CANE V
	SUNFLOWER T
	SWEET_BERRY_BUSH K
	TALL_GRASS v
	WARPED_FUNGUS aD
	WARPED_ROOTS aE
	WATER ab
	WATER_STATE Z
net/minecraft/data/worldgen/PillagerOutpostPools ki
	START a
	bootstrap ()V a
net/minecraft/data/worldgen/PlainVillagePools kj
	START a
	bootstrap ()V a
net/minecraft/data/worldgen/Pools kk
	BUILTIN_EMPTY b
	EMPTY a
	bootstrap ()Lnet/minecraft/world/level/levelgen/feature/structures/StructureTemplatePool; a
	register (Lnet/minecraft/world/level/levelgen/feature/structures/StructureTemplatePool;)Lnet/minecraft/world/level/levelgen/feature/structures/StructureTemplatePool; a
net/minecraft/data/worldgen/ProcessorLists kl
	ADD_GILDED_BLACKSTONE E
	BASTION_GENERIC_DEGRADATION x
	BOTTOM_RAMPART s
	BRIDGE A
	EMPTY a
	ENTRANCE_REPLACEMENT z
	FARM_DESERT q
	FARM_PLAINS m
	FARM_SAVANNA n
	FARM_SNOWY o
	FARM_TAIGA p
	HIGH_RAMPART D
	HIGH_WALL C
	HOUSING u
	MOSSIFY_10_PERCENT g
	MOSSIFY_20_PERCENT h
	MOSSIFY_70_PERCENT i
	OUTPOST_ROT r
	RAMPART_DEGRADATION y
	REMOVE_GILDED_BLACKSTONE F
	ROOF B
	SIDE_WALL_DEGRADATION v
	STABLE_DEGRADATION w
	STREET_PLAINS j
	STREET_SAVANNA k
	STREET_SNOWY_OR_TAIGA l
	TREASURE_ROOMS t
	ZOMBIE_DESERT f
	ZOMBIE_PLAINS b
	ZOMBIE_SAVANNA c
	ZOMBIE_SNOWY d
	ZOMBIE_TAIGA e
	register (Ljava/lang/String;Lcom/google/common/collect/ImmutableList;)Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureProcessorList; a
net/minecraft/data/worldgen/SavannaVillagePools km
	START a
	bootstrap ()V a
net/minecraft/data/worldgen/SnowyVillagePools kn
	START a
	bootstrap ()V a
net/minecraft/data/worldgen/StructureFeatures ko
	BASTION_REMNANT s
	BURIED_TREASURE r
	DESERT_PYRAMID f
	END_CITY q
	IGLOO g
	JUNGLE_TEMPLE e
	MINESHAFT b
	MINESHAFT_MESA c
	NETHER_BRIDGE o
	NETHER_FOSSIL p
	OCEAN_MONUMENT l
	OCEAN_RUIN_COLD m
	OCEAN_RUIN_WARM n
	PILLAGER_OUTPOST a
	RUINED_PORTAL_DESERT z
	RUINED_PORTAL_JUNGLE A
	RUINED_PORTAL_MOUNTAIN C
	RUINED_PORTAL_NETHER E
	RUINED_PORTAL_OCEAN D
	RUINED_PORTAL_STANDARD y
	RUINED_PORTAL_SWAMP B
	SHIPWRECH_BEACHED i
	SHIPWRECK h
	STRONGHOLD k
	SWAMP_HUT j
	VILLAGE_DESERT u
	VILLAGE_PLAINS t
	VILLAGE_SAVANNA v
	VILLAGE_SNOWY w
	VILLAGE_TAIGA x
	WOODLAND_MANSION d
	register (Ljava/lang/String;Lnet/minecraft/world/level/levelgen/feature/ConfiguredStructureFeature;)Lnet/minecraft/world/level/levelgen/feature/ConfiguredStructureFeature; a
net/minecraft/data/worldgen/SurfaceBuilders kp
	BADLANDS a
	BASALT_DELTAS b
	CRIMSON_FOREST c
	DESERT d
	END e
	ERODED_BADLANDS f
	FROZEN_OCEAN g
	FULL_SAND h
	GIANT_TREE_TAIGA i
	GRASS j
	GRAVELLY_MOUNTAIN k
	ICE_SPIKES l
	MOUNTAIN m
	MYCELIUM n
	NETHER o
	NOPE p
	OCEAN_SAND q
	SHATTERED_SAVANNA r
	SOUL_SAND_VALLEY s
	STONE t
	SWAMP u
	WARPED_FOREST v
	WOODED_BADLANDS w
	register (Ljava/lang/String;Lnet/minecraft/world/level/levelgen/surfacebuilders/ConfiguredSurfaceBuilder;)Lnet/minecraft/world/level/levelgen/surfacebuilders/ConfiguredSurfaceBuilder; a
net/minecraft/data/worldgen/TaigaVillagePools kq
	START a
	bootstrap ()V a
net/minecraft/data/worldgen/VillagePools kr
	bootstrap ()V a
net/minecraft/data/worldgen/biome/BiomeReport ks
	GSON c
	LOGGER b
	generator d
	createPath (Ljava/nio/file/Path;Lnet/minecraft/resources/ResourceLocation;)Ljava/nio/file/Path; a
	getName ()Ljava/lang/String; a
	run (Lnet/minecraft/data/HashCache;)V a
net/minecraft/data/worldgen/biome/Biomes kt
	PLAINS a
	THE_VOID b
	TO_NAME c
	byId (I)Lnet/minecraft/resources/ResourceKey; a
	register (ILnet/minecraft/resources/ResourceKey;Lnet/minecraft/world/level/biome/Biome;)Lnet/minecraft/world/level/biome/Biome; a
net/minecraft/data/worldgen/biome/VanillaBiomes ku
	badlandsBiome (FFZ)Lnet/minecraft/world/level/biome/Biome; b
	bambooJungleBiome ()Lnet/minecraft/world/level/biome/Biome; f
	bambooJungleBiome (FFII)Lnet/minecraft/world/level/biome/Biome; a
	bambooJungleHillsBiome ()Lnet/minecraft/world/level/biome/Biome; g
	basaltDeltasBiome ()Lnet/minecraft/world/level/biome/Biome; u
	baseBadlandsBiome (Lnet/minecraft/world/level/levelgen/surfacebuilders/ConfiguredSurfaceBuilder;FFZZ)Lnet/minecraft/world/level/biome/Biome; a
	baseEndBiome (Lnet/minecraft/world/level/biome/BiomeGenerationSettings$Builder;)Lnet/minecraft/world/level/biome/Biome; a
	baseForestBiome (FFZLnet/minecraft/world/level/biome/MobSpawnSettings$Builder;)Lnet/minecraft/world/level/biome/Biome; a
	baseJungleBiome (FFFZZZLnet/minecraft/world/level/biome/MobSpawnSettings$Builder;)Lnet/minecraft/world/level/biome/Biome; a
	baseOceanBiome (Lnet/minecraft/world/level/biome/MobSpawnSettings$Builder;IIZLnet/minecraft/world/level/biome/BiomeGenerationSettings$Builder;)Lnet/minecraft/world/level/biome/Biome; a
	baseOceanGeneration (Lnet/minecraft/world/level/levelgen/surfacebuilders/ConfiguredSurfaceBuilder;ZZZ)Lnet/minecraft/world/level/biome/BiomeGenerationSettings$Builder; a
	baseSavannaBiome (FFFZZLnet/minecraft/world/level/biome/MobSpawnSettings$Builder;)Lnet/minecraft/world/level/biome/Biome; a
	beachBiome (FFFFIZZ)Lnet/minecraft/world/level/biome/Biome; a
	birchForestBiome (FFZ)Lnet/minecraft/world/level/biome/Biome; a
	calculateSkyColor (F)I a
	coldOceanBiome (Z)Lnet/minecraft/world/level/biome/Biome; b
	crimsonForestBiome ()Lnet/minecraft/world/level/biome/Biome; v
	darkForestBiome (FFZ)Lnet/minecraft/world/level/biome/Biome; c
	deepWarmOceanBiome ()Lnet/minecraft/world/level/biome/Biome; p
	defaultSpawns ()Lnet/minecraft/world/level/biome/MobSpawnSettings$Builder; y
	desertBiome (FFZZZ)Lnet/minecraft/world/level/biome/Biome; a
	endBarrensBiome ()Lnet/minecraft/world/level/biome/Biome; h
	endHighlandsBiome ()Lnet/minecraft/world/level/biome/Biome; k
	endMidlandsBiome ()Lnet/minecraft/world/level/biome/Biome; j
	erodedBadlandsBiome ()Lnet/minecraft/world/level/biome/Biome; n
	flowerForestBiome ()Lnet/minecraft/world/level/biome/Biome; q
	forestBiome (FF)Lnet/minecraft/world/level/biome/Biome; c
	frozenOceanBiome (Z)Lnet/minecraft/world/level/biome/Biome; e
	giantTreeTaiga (FFFZ)Lnet/minecraft/world/level/biome/Biome; a
	jungleBiome ()Lnet/minecraft/world/level/biome/Biome; a
	jungleBiome (FFIII)Lnet/minecraft/world/level/biome/Biome; a
	jungleEdgeBiome ()Lnet/minecraft/world/level/biome/Biome; b
	jungleHillsBiome ()Lnet/minecraft/world/level/biome/Biome; e
	lukeWarmOceanBiome (Z)Lnet/minecraft/world/level/biome/Biome; d
	modifiedJungleBiome ()Lnet/minecraft/world/level/biome/Biome; d
	modifiedJungleEdgeBiome ()Lnet/minecraft/world/level/biome/Biome; c
	mountainBiome (FFLnet/minecraft/world/level/levelgen/surfacebuilders/ConfiguredSurfaceBuilder;Z)Lnet/minecraft/world/level/biome/Biome; a
	mushroomFieldsBiome (FF)Lnet/minecraft/world/level/biome/Biome; a
	netherWastesBiome ()Lnet/minecraft/world/level/biome/Biome; s
	oceanBiome (Z)Lnet/minecraft/world/level/biome/Biome; c
	plainsBiome (Z)Lnet/minecraft/world/level/biome/Biome; a
	riverBiome (FFFIZ)Lnet/minecraft/world/level/biome/Biome; a
	savanaPlateauBiome ()Lnet/minecraft/world/level/biome/Biome; m
	savannaBiome (FFFZZ)Lnet/minecraft/world/level/biome/Biome; a
	savannaMobs ()Lnet/minecraft/world/level/biome/MobSpawnSettings$Builder; x
	smallEndIslandsBiome ()Lnet/minecraft/world/level/biome/Biome; l
	soulSandValleyBiome ()Lnet/minecraft/world/level/biome/Biome; t
	swampBiome (FFZ)Lnet/minecraft/world/level/biome/Biome; d
	taigaBiome (FFZZZZ)Lnet/minecraft/world/level/biome/Biome; a
	theEndBiome ()Lnet/minecraft/world/level/biome/Biome; i
	theVoidBiome ()Lnet/minecraft/world/level/biome/Biome; r
	tundraBiome (FFZZ)Lnet/minecraft/world/level/biome/Biome; a
	warmOceanBiome ()Lnet/minecraft/world/level/biome/Biome; o
	warpedForestBiome ()Lnet/minecraft/world/level/biome/Biome; w
	woodedBadlandsPlateauBiome (FF)Lnet/minecraft/world/level/biome/Biome; b
net/minecraft/gametest/framework/BeforeBatch kw
	batch ()Ljava/lang/String; a
net/minecraft/gametest/framework/GameTest kx
	batch ()Ljava/lang/String; b
	required ()Z d
	rotationSteps ()I c
	setupTicks ()J f
	template ()Ljava/lang/String; e
	timeoutTicks ()I a
net/minecraft/gametest/framework/GameTestAssertException ky
net/minecraft/gametest/framework/GameTestAssertPosException kz
	absolutePos a
	relativePos b
	tick c
	getAbsolutePos ()Lnet/minecraft/core/BlockPos; c
	getMessageToShowAtBlock ()Ljava/lang/String; a
	getRelativePos ()Lnet/minecraft/core/BlockPos; b
net/minecraft/gametest/framework/GameTestBatch la
	beforeBatchFunction c
	name a
	testFunctions b
	getName ()Ljava/lang/String; a
	getTestFunctions ()Ljava/util/Collection; b
	runBeforeBatchFunction (Lnet/minecraft/server/level/ServerLevel;)V a
net/minecraft/gametest/framework/GameTestBatchRunner lb
	LOGGER a
	allTestInfos f
	batches h
	currentBatchIndex j
	currentBatchTracker i
	firstTestNorthWestCorner b
	level c
	nextTestNorthWestCorner k
	northWestCorners g
	testTicker d
	testsPerRow e
	createStructuresForBatch (Ljava/util/Collection;)V a
	getTestInfos ()Ljava/util/List; a
	runBatch (I)V a
	start ()V b
	testCompleted (Lnet/minecraft/gametest/framework/GameTestInfo;)V a
net/minecraft/gametest/framework/GameTestEvent lc
	assertion b
	expectedDelay a
	create (JLjava/lang/Runnable;)Lnet/minecraft/gametest/framework/GameTestEvent; a
	create (Ljava/lang/Runnable;)Lnet/minecraft/gametest/framework/GameTestEvent; a
net/minecraft/gametest/framework/GameTestGenerator ld
net/minecraft/gametest/framework/GameTestHelper le
	finalCheckAdded b
	testInfo a
	absolutePos (Lnet/minecraft/core/BlockPos;)Lnet/minecraft/core/BlockPos; e
	absoluteVec (Lnet/minecraft/world/phys/Vec3;)Lnet/minecraft/world/phys/Vec3; a
	assertAtTickTimeContainerContains (JLnet/minecraft/core/BlockPos;Lnet/minecraft/world/item/Item;)V a
	assertAtTickTimeContainerEmpty (JLnet/minecraft/core/BlockPos;)V a
	assertBlock (Lnet/minecraft/core/BlockPos;Ljava/util/function/Predicate;Ljava/lang/String;)V a
	assertBlock (Lnet/minecraft/core/BlockPos;Ljava/util/function/Predicate;Ljava/util/function/Supplier;)V a
	assertBlockNotPresent (Lnet/minecraft/world/level/block/Block;III)V b
	assertBlockNotPresent (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/core/BlockPos;)V b
	assertBlockPresent (Lnet/minecraft/world/level/block/Block;III)V a
	assertBlockPresent (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/core/BlockPos;)V a
	assertBlockProperty (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/properties/Property;Ljava/lang/Comparable;)V a
	assertBlockProperty (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/properties/Property;Ljava/util/function/Predicate;Ljava/lang/String;)V a
	assertBlockState (Lnet/minecraft/core/BlockPos;Ljava/util/function/Predicate;Ljava/util/function/Supplier;)V b
	assertContainerContains (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/item/Item;)V a
	assertContainerEmpty (Lnet/minecraft/core/BlockPos;)V d
	assertEntityData (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/EntityType;Ljava/util/function/Function;Ljava/lang/Object;)V a
	assertEntityNotPresent (Lnet/minecraft/world/entity/EntityType;)V b
	assertEntityNotPresent (Lnet/minecraft/world/entity/EntityType;III)V d
	assertEntityNotPresent (Lnet/minecraft/world/entity/EntityType;Lnet/minecraft/core/BlockPos;)V d
	assertEntityNotTouching (Lnet/minecraft/world/entity/EntityType;DDD)V b
	assertEntityPresent (Lnet/minecraft/world/entity/EntityType;)V a
	assertEntityPresent (Lnet/minecraft/world/entity/EntityType;III)V c
	assertEntityPresent (Lnet/minecraft/world/entity/EntityType;Lnet/minecraft/core/BlockPos;)V c
	assertEntityPresent (Lnet/minecraft/world/entity/EntityType;Lnet/minecraft/core/BlockPos;D)V a
	assertEntityTouching (Lnet/minecraft/world/entity/EntityType;DDD)V a
	assertItemEntityCountIs (Lnet/minecraft/world/item/Item;Lnet/minecraft/core/BlockPos;DI)V a
	assertItemEntityPresent (Lnet/minecraft/world/item/Item;Lnet/minecraft/core/BlockPos;D)V a
	ensureSingleFinalCheck ()V h
	failIf (Ljava/lang/Runnable;)V c
	getBlockType (Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/Block; g
	getBounds ()Lnet/minecraft/world/phys/AABB; i
	getLevel ()Lnet/minecraft/server/level/ServerLevel; a
	getTick ()J f
	killAllEntities ()V b
	makeAboutToDrown (Lnet/minecraft/world/entity/LivingEntity;)Lnet/minecraft/world/entity/LivingEntity; a
	makeMockPlayer ()Lnet/minecraft/world/entity/player/Player; g
	pressButton (III)V a
	pressButton (Lnet/minecraft/core/BlockPos;)V a
	pullLever (III)V b
	pullLever (Lnet/minecraft/core/BlockPos;)V c
	pulseRedstone (Lnet/minecraft/core/BlockPos;J)V a
	relativePos (Lnet/minecraft/core/BlockPos;)Lnet/minecraft/core/BlockPos; f
	runAfterDelay (JLjava/lang/Runnable;)V b
	runAtTickTime (JLjava/lang/Runnable;)V a
	setBlock (IIILnet/minecraft/world/level/block/Block;)V a
	setBlock (IIILnet/minecraft/world/level/block/state/BlockState;)V a
	setBlock (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Block;)V a
	setBlock (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V a
	setDayTime (I)V a
	setNight ()V c
	spawn (Lnet/minecraft/world/entity/EntityType;FFF)Lnet/minecraft/world/entity/Entity; a
	spawn (Lnet/minecraft/world/entity/EntityType;III)Lnet/minecraft/world/entity/Entity; a
	spawn (Lnet/minecraft/world/entity/EntityType;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/entity/Entity; a
	spawn (Lnet/minecraft/world/entity/EntityType;Lnet/minecraft/world/phys/Vec3;)Lnet/minecraft/world/entity/Entity; a
	spawnItem (Lnet/minecraft/world/item/Item;FFF)Lnet/minecraft/world/entity/item/ItemEntity; a
	spawnWithNoFreeWill (Lnet/minecraft/world/entity/EntityType;FFF)Lnet/minecraft/world/entity/Mob; b
	spawnWithNoFreeWill (Lnet/minecraft/world/entity/EntityType;III)Lnet/minecraft/world/entity/Mob; b
	spawnWithNoFreeWill (Lnet/minecraft/world/entity/EntityType;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/entity/Mob; b
	spawnWithNoFreeWill (Lnet/minecraft/world/entity/EntityType;Lnet/minecraft/world/phys/Vec3;)Lnet/minecraft/world/entity/Mob; b
	startSequence ()Lnet/minecraft/gametest/framework/GameTestSequence; e
	succeed ()V d
	succeedIf (Ljava/lang/Runnable;)V a
	succeedOnTickWhen (ILjava/lang/Runnable;)V a
	succeedWhen (Ljava/lang/Runnable;)V b
	succeedWhenBlockPresent (Lnet/minecraft/world/level/block/Block;III)V c
	succeedWhenBlockPresent (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/core/BlockPos;)V c
	succeedWhenEntityData (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/EntityType;Ljava/util/function/Function;Ljava/lang/Object;)V b
	succeedWhenEntityNotPresent (Lnet/minecraft/world/entity/EntityType;III)V f
	succeedWhenEntityNotPresent (Lnet/minecraft/world/entity/EntityType;Lnet/minecraft/core/BlockPos;)V f
	succeedWhenEntityPresent (Lnet/minecraft/world/entity/EntityType;III)V e
	succeedWhenEntityPresent (Lnet/minecraft/world/entity/EntityType;Lnet/minecraft/core/BlockPos;)V e
	useBlock (Lnet/minecraft/core/BlockPos;)V b
	walkTo (Lnet/minecraft/world/entity/Mob;Lnet/minecraft/core/BlockPos;F)Lnet/minecraft/gametest/framework/GameTestSequence; a
net/minecraft/gametest/framework/GameTestInfo lf
	done l
	error n
	level c
	listeners d
	rotation m
	runAtTickTimeMap g
	sequences f
	startTick h
	started j
	structureBlockPos b
	testFunction a
	tickCount i
	timeoutTicks e
	timer k
	addListener (Lnet/minecraft/gametest/framework/GameTestListener;)V a
	createSequence ()Lnet/minecraft/gametest/framework/GameTestSequence; p
	fail (Ljava/lang/Throwable;)V a
	finish ()V x
	getError ()Ljava/lang/Throwable; n
	getLevel ()Lnet/minecraft/server/level/ServerLevel; g
	getRotation ()Lnet/minecraft/world/level/block/Rotation; t
	getRunTime ()J l
	getStructureBlockEntity ()Lnet/minecraft/world/level/block/entity/StructureBlockEntity; w
	getStructureBlockPos ()Lnet/minecraft/core/BlockPos; d
	getStructureBounds ()Lnet/minecraft/world/phys/AABB; f
	getStructureName ()Ljava/lang/String; s
	getStructureSize ()Lnet/minecraft/core/BlockPos; e
	getTestFunction ()Lnet/minecraft/gametest/framework/TestFunction; u
	getTestName ()Ljava/lang/String; c
	getTick ()J o
	hasFailed ()Z i
	hasStarted ()Z j
	hasSucceeded ()Z h
	isDone ()Z k
	isOptional ()Z r
	isRequired ()Z q
	setRunAtTickTime (JLjava/lang/Runnable;)V a
	setStructureBlockPos (Lnet/minecraft/core/BlockPos;)V a
	spawnStructure (Lnet/minecraft/core/BlockPos;I)V a
	startExecution ()V a
	startTest ()V v
	succeed ()V m
	tick ()V b
net/minecraft/gametest/framework/GameTestListener lg
	testFailed (Lnet/minecraft/gametest/framework/GameTestInfo;)V c
	testPassed (Lnet/minecraft/gametest/framework/GameTestInfo;)V b
	testStructureLoaded (Lnet/minecraft/gametest/framework/GameTestInfo;)V a
net/minecraft/gametest/framework/GameTestRegistry lh
	beforeBatchFunctions c
	lastFailedTests d
	testClassNames b
	testFunctions a
	findTestFunction (Ljava/lang/String;)Ljava/util/Optional; d
	forgetFailedTests ()V d
	getAllTestClassNames ()Ljava/util/Collection; b
	getAllTestFunctions ()Ljava/util/Collection; a
	getBeforeBatchFunction (Ljava/lang/String;)Ljava/util/function/Consumer; c
	getLastFailedTests ()Ljava/util/Collection; c
	getTestFunction (Ljava/lang/String;)Lnet/minecraft/gametest/framework/TestFunction; e
	getTestFunctionsForClassName (Ljava/lang/String;)Ljava/util/Collection; a
	isTestClass (Ljava/lang/String;)Z b
	isTestFunctionPartOfClass (Lnet/minecraft/gametest/framework/TestFunction;Ljava/lang/String;)Z a
	register (Ljava/lang/Class;)V a
	register (Ljava/lang/reflect/Method;)V a
	rememberFailedTest (Lnet/minecraft/gametest/framework/TestFunction;)V a
	turnMethodIntoConsumer (Ljava/lang/reflect/Method;)Ljava/util/function/Consumer; d
	turnMethodIntoTestFunction (Ljava/lang/reflect/Method;)Lnet/minecraft/gametest/framework/TestFunction; c
	useTestGeneratorMethod (Ljava/lang/reflect/Method;)Ljava/util/Collection; b
net/minecraft/gametest/framework/GameTestRunner li
	TEST_REPORTER a
	clearAllTests (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Lnet/minecraft/gametest/framework/GameTestTicker;I)V a
	clearMarkers (Lnet/minecraft/server/level/ServerLevel;)V a
	createBook (Ljava/lang/String;ZLjava/lang/String;)Lnet/minecraft/world/item/ItemStack; a
	groupTestsIntoBatches (Ljava/util/Collection;)Ljava/util/Collection; a
	runTest (Lnet/minecraft/gametest/framework/GameTestInfo;Lnet/minecraft/core/BlockPos;Lnet/minecraft/gametest/framework/GameTestTicker;)V a
	runTestBatches (Ljava/util/Collection;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Rotation;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/gametest/framework/GameTestTicker;I)Ljava/util/Collection; a
	runTests (Ljava/util/Collection;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Rotation;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/gametest/framework/GameTestTicker;I)Ljava/util/Collection; b
	say (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/ChatFormatting;Ljava/lang/String;)V a
	showRedBox (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Ljava/lang/String;)V a
	spawnBeacon (Lnet/minecraft/gametest/framework/GameTestInfo;Lnet/minecraft/world/level/block/Block;)V b
	spawnLectern (Lnet/minecraft/gametest/framework/GameTestInfo;Ljava/lang/String;)V b
	visualizeFailedTest (Lnet/minecraft/gametest/framework/GameTestInfo;)V c
	visualizePassedTest (Lnet/minecraft/gametest/framework/GameTestInfo;)V d
net/minecraft/gametest/framework/GameTestSequence lj
	events b
	lastTick c
	parent a
	executeWithoutFail (Ljava/lang/Runnable;)V c
	thenExecute (Ljava/lang/Runnable;)Lnet/minecraft/gametest/framework/GameTestSequence; b
	thenExecuteAfter (ILjava/lang/Runnable;)Lnet/minecraft/gametest/framework/GameTestSequence; a
	thenFail (Ljava/util/function/Supplier;)V a
	thenIdle (I)Lnet/minecraft/gametest/framework/GameTestSequence; a
	thenSucceed ()V a
	thenTrigger ()Lnet/minecraft/gametest/framework/GameTestSequence$Condition; b
	thenWait (JLjava/lang/Runnable;)Lnet/minecraft/gametest/framework/GameTestSequence; a
	thenWait (Ljava/lang/Runnable;)Lnet/minecraft/gametest/framework/GameTestSequence; a
	tick (J)V c
	tickAndContinue (J)V a
	tickAndFailIfNotComplete (J)V b
net/minecraft/gametest/framework/GameTestSequence$Condition lj$a
	triggerTime b
	assertTriggeredThisTick ()V a
	trigger (J)V a
net/minecraft/gametest/framework/GameTestServer lk
	LOGGER j
	TEST_GAME_RULES m
	TEST_SETTINGS n
	spawnPos l
	testBatches k
	testTracker o
	getFunctionCompilationLevel ()I h
	getModdedStatus ()Ljava/util/Optional; o
	getOperatorUserPermissionLevel ()I g
	getRateLimitPacketsPerSecond ()I k
	haveTestsStarted ()Z aZ
	initServer ()Z d
	isCommandBlockEnabled ()Z m
	isDedicatedServer ()Z j
	isEpollEnabled ()Z l
	isHardcore ()Z f
	isPublished ()Z n
	isSingleplayerOwner (Lcom/mojang/authlib/GameProfile;)Z a
	onServerCrash (Lnet/minecraft/CrashReport;)V a
	onServerExit ()V e
	publishServer (Lnet/minecraft/world/level/GameType;ZI)Z a
	shouldInformAdmins ()Z R_
	shouldRconBroadcast ()Z i
	startTests (Lnet/minecraft/server/level/ServerLevel;)V b
	tickServer (Ljava/util/function/BooleanSupplier;)V a
net/minecraft/gametest/framework/GameTestTicker ll
	singleton a
	testInfos b
	add (Lnet/minecraft/gametest/framework/GameTestInfo;)V a
	clear ()V a
	tick ()V b
net/minecraft/gametest/framework/GameTestTimeoutException lm
net/minecraft/gametest/framework/JUnitLikeTestReporter ln
	destination d
	document a
	stopwatch c
	testSuite b
	createTestCase (Lnet/minecraft/gametest/framework/GameTestInfo;Ljava/lang/String;)Lorg/w3c/dom/Element; a
	finish ()V a
	onTestFailed (Lnet/minecraft/gametest/framework/GameTestInfo;)V a
	onTestSuccess (Lnet/minecraft/gametest/framework/GameTestInfo;)V b
	save (Ljava/io/File;)V a
net/minecraft/gametest/framework/LogTestReporter lo
	LOGGER a
	onTestFailed (Lnet/minecraft/gametest/framework/GameTestInfo;)V a
	onTestSuccess (Lnet/minecraft/gametest/framework/GameTestInfo;)V b
net/minecraft/gametest/framework/MultipleTestTracker lp
	listeners b
	tests a
	addFailureListener (Ljava/util/function/Consumer;)V a
	addListener (Lnet/minecraft/gametest/framework/GameTestListener;)V a
	addTestToTrack (Lnet/minecraft/gametest/framework/GameTestInfo;)V a
	getDoneCount ()I c
	getFailedOptional ()Ljava/util/Collection; g
	getFailedOptionalCount ()I b
	getFailedRequired ()Ljava/util/Collection; f
	getFailedRequiredCount ()I a
	getProgressBar ()Ljava/lang/String; j
	getTotalCount ()I h
	hasFailedOptional ()Z e
	hasFailedRequired ()Z d
	isDone ()Z i
net/minecraft/gametest/framework/StructureUtils lq
	testStructuresDir a
	addCommandBlockAndButtonToStartTest (Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Rotation;Lnet/minecraft/server/level/ServerLevel;)V a
	clearBlock (ILnet/minecraft/core/BlockPos;Lnet/minecraft/server/level/ServerLevel;)V a
	clearSpaceForStructure (Lnet/minecraft/world/level/levelgen/structure/BoundingBox;ILnet/minecraft/server/level/ServerLevel;)V a
	createNewEmptyStructureBlock (Ljava/lang/String;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Rotation;Lnet/minecraft/server/level/ServerLevel;)V a
	createStructureBlock (Ljava/lang/String;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Rotation;Lnet/minecraft/server/level/ServerLevel;Z)Lnet/minecraft/world/level/block/entity/StructureBlockEntity; a
	doesStructureContain (Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;Lnet/minecraft/server/level/ServerLevel;)Z a
	findNearestStructureBlock (Lnet/minecraft/core/BlockPos;ILnet/minecraft/server/level/ServerLevel;)Lnet/minecraft/core/BlockPos; b
	findStructureBlockContainingPos (Lnet/minecraft/core/BlockPos;ILnet/minecraft/server/level/ServerLevel;)Ljava/util/Optional; a
	findStructureBlocks (Lnet/minecraft/core/BlockPos;ILnet/minecraft/server/level/ServerLevel;)Ljava/util/Collection; c
	forceLoadChunks (Lnet/minecraft/core/BlockPos;Lnet/minecraft/server/level/ServerLevel;)V a
	getRotationForRotationSteps (I)Lnet/minecraft/world/level/block/Rotation; a
	getRotationStepsForRotation (Lnet/minecraft/world/level/block/Rotation;)I a
	getStructureBoundingBox (Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Rotation;)Lnet/minecraft/world/level/levelgen/structure/BoundingBox; a
	getStructureBoundingBox (Lnet/minecraft/world/level/block/entity/StructureBlockEntity;)Lnet/minecraft/world/level/levelgen/structure/BoundingBox; b
	getStructureBounds (Lnet/minecraft/world/level/block/entity/StructureBlockEntity;)Lnet/minecraft/world/phys/AABB; a
	getStructureTemplate (Ljava/lang/String;Lnet/minecraft/server/level/ServerLevel;)Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplate; a
	spawnStructure (Ljava/lang/String;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Rotation;ILnet/minecraft/server/level/ServerLevel;Z)Lnet/minecraft/world/level/block/entity/StructureBlockEntity; a
	tryLoadStructure (Ljava/nio/file/Path;)Lnet/minecraft/nbt/CompoundTag; a
net/minecraft/gametest/framework/TeamcityTestReporter lr
	ESCAPER b
	LOGGER a
	onTestFailed (Lnet/minecraft/gametest/framework/GameTestInfo;)V a
	onTestSuccess (Lnet/minecraft/gametest/framework/GameTestInfo;)V b
net/minecraft/gametest/framework/TestClassNameArgument ls
	EXAMPLES a
	getTestClassName (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Ljava/lang/String; a
	parse (Lcom/mojang/brigadier/StringReader;)Ljava/lang/String; a
	testClassName ()Lnet/minecraft/gametest/framework/TestClassNameArgument; a
net/minecraft/gametest/framework/TestCommand lt
	clearAllTests (Lnet/minecraft/commands/CommandSourceStack;I)I a
	createNewStructure (Lnet/minecraft/commands/CommandSourceStack;Ljava/lang/String;III)I a
	exportNearestTestStructure (Lnet/minecraft/commands/CommandSourceStack;)I c
	exportTestStructure (Lnet/minecraft/commands/CommandSourceStack;Ljava/lang/String;)I c
	importTestStructure (Lnet/minecraft/commands/CommandSourceStack;Ljava/lang/String;)I d
	register (Lcom/mojang/brigadier/CommandDispatcher;)V a
	runAllNearbyTests (Lnet/minecraft/commands/CommandSourceStack;)I b
	runAllTests (Lnet/minecraft/commands/CommandSourceStack;II)I a
	runAllTestsInClass (Lnet/minecraft/commands/CommandSourceStack;Ljava/lang/String;II)I a
	runLastFailedTests (Lnet/minecraft/commands/CommandSourceStack;ZII)I a
	runNearbyTest (Lnet/minecraft/commands/CommandSourceStack;)I a
	runTest (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/gametest/framework/TestFunction;I)I a
	runTest (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Lnet/minecraft/gametest/framework/MultipleTestTracker;)V a
	runTestPreparation (Lnet/minecraft/gametest/framework/TestFunction;Lnet/minecraft/server/level/ServerLevel;)V a
	runTests (Lnet/minecraft/commands/CommandSourceStack;Ljava/util/Collection;II)V a
	say (Lnet/minecraft/commands/CommandSourceStack;Ljava/lang/String;)V b
	say (Lnet/minecraft/server/level/ServerLevel;Ljava/lang/String;Lnet/minecraft/ChatFormatting;)V a
	showPos (Lnet/minecraft/commands/CommandSourceStack;Ljava/lang/String;)I a
	showTestSummaryIfAllDone (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/gametest/framework/MultipleTestTracker;)V b
net/minecraft/gametest/framework/TestCommand$TestSummaryDisplayer lt$a
	level a
	tracker b
	testFailed (Lnet/minecraft/gametest/framework/GameTestInfo;)V c
	testPassed (Lnet/minecraft/gametest/framework/GameTestInfo;)V b
	testStructureLoaded (Lnet/minecraft/gametest/framework/GameTestInfo;)V a
net/minecraft/gametest/framework/TestFunction lu
	batchName a
	function e
	maxTicks f
	required d
	rotation h
	setupTicks g
	structureName c
	testName b
	getBatchName ()Ljava/lang/String; e
	getMaxTicks ()I c
	getRotation ()Lnet/minecraft/world/level/block/Rotation; g
	getSetupTicks ()J f
	getStructureName ()Ljava/lang/String; b
	getTestName ()Ljava/lang/String; a
	isRequired ()Z d
	run (Lnet/minecraft/gametest/framework/GameTestHelper;)V a
net/minecraft/gametest/framework/TestFunctionArgument lv
	EXAMPLES a
	getTestFunction (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lnet/minecraft/gametest/framework/TestFunction; a
	parse (Lcom/mojang/brigadier/StringReader;)Lnet/minecraft/gametest/framework/TestFunction; a
	testFunctionArgument ()Lnet/minecraft/gametest/framework/TestFunctionArgument; a
net/minecraft/gametest/framework/TestReporter lw
	finish ()V a
	onTestFailed (Lnet/minecraft/gametest/framework/GameTestInfo;)V a
	onTestSuccess (Lnet/minecraft/gametest/framework/GameTestInfo;)V b
net/minecraft/locale/Language ly
	GSON b
	LOGGER a
	UNSUPPORTED_FORMAT_PATTERN c
	instance d
	getInstance ()Lnet/minecraft/locale/Language; a
	getOrDefault (Ljava/lang/String;)Ljava/lang/String; a
	getVisualOrder (Ljava/util/List;)Ljava/util/List; a
	getVisualOrder (Lnet/minecraft/network/chat/FormattedText;)Lnet/minecraft/util/FormattedCharSequence; a
	has (Ljava/lang/String;)Z b
	inject (Lnet/minecraft/locale/Language;)V a
	isDefaultRightToLeft ()Z b
	loadDefault ()Lnet/minecraft/locale/Language; c
	loadFromJson (Ljava/io/InputStream;Ljava/util/function/BiConsumer;)V a
net/minecraft/nbt/ByteArrayTag ma
	TYPE a
	data b
	add (ILnet/minecraft/nbt/ByteTag;)V b
	add (ILnet/minecraft/nbt/Tag;)V c
	addTag (ILnet/minecraft/nbt/Tag;)Z b
	copy ()Lnet/minecraft/nbt/Tag; c
	get (I)Lnet/minecraft/nbt/ByteTag; a
	getAsByteArray ()[B d
	getElementType ()B d_
	getId ()B a
	getPrettyDisplay (Ljava/lang/String;I)Lnet/minecraft/network/chat/Component; a
	getType ()Lnet/minecraft/nbt/TagType; b
	remove (I)Lnet/minecraft/nbt/ByteTag; b
	remove (I)Lnet/minecraft/nbt/Tag; c
	set (ILnet/minecraft/nbt/ByteTag;)Lnet/minecraft/nbt/ByteTag; a
	set (ILnet/minecraft/nbt/Tag;)Lnet/minecraft/nbt/Tag; d
	setTag (ILnet/minecraft/nbt/Tag;)Z a
	toArray (Ljava/util/List;)[B a
	write (Ljava/io/DataOutput;)V a
net/minecraft/nbt/ByteTag mb
	ONE c
	TYPE a
	ZERO b
	data h
	copy ()Lnet/minecraft/nbt/ByteTag; d
	copy ()Lnet/minecraft/nbt/Tag; c
	getAsByte ()B h
	getAsDouble ()D i
	getAsFloat ()F j
	getAsInt ()I f
	getAsLong ()J e
	getAsNumber ()Ljava/lang/Number; k
	getAsShort ()S g
	getId ()B a
	getPrettyDisplay (Ljava/lang/String;I)Lnet/minecraft/network/chat/Component; a
	getType ()Lnet/minecraft/nbt/TagType; b
	valueOf (B)Lnet/minecraft/nbt/ByteTag; a
	valueOf (Z)Lnet/minecraft/nbt/ByteTag; a
	write (Ljava/io/DataOutput;)V a
net/minecraft/nbt/ByteTag$Cache mb$a
	cache a
net/minecraft/nbt/CollectionTag mc
	add (ILnet/minecraft/nbt/Tag;)V c
	addTag (ILnet/minecraft/nbt/Tag;)Z b
	getElementType ()B d_
	remove (I)Lnet/minecraft/nbt/Tag; c
	set (ILnet/minecraft/nbt/Tag;)Lnet/minecraft/nbt/Tag; d
	setTag (ILnet/minecraft/nbt/Tag;)Z a
net/minecraft/nbt/CompoundTag md
	CODEC a
	LOGGER c
	SIMPLE_VALUE h
	TYPE b
	tags i
	contains (Ljava/lang/String;)Z e
	contains (Ljava/lang/String;I)Z c
	copy ()Lnet/minecraft/nbt/CompoundTag; g
	copy ()Lnet/minecraft/nbt/Tag; c
	createReport (Ljava/lang/String;Lnet/minecraft/nbt/TagType;Ljava/lang/ClassCastException;)Lnet/minecraft/CrashReport; a
	entries ()Ljava/util/Map; h
	get (Ljava/lang/String;)Lnet/minecraft/nbt/Tag; c
	getAllKeys ()Ljava/util/Set; d
	getBoolean (Ljava/lang/String;)Z q
	getByte (Ljava/lang/String;)B f
	getByteArray (Ljava/lang/String;)[B m
	getCompound (Ljava/lang/String;)Lnet/minecraft/nbt/CompoundTag; p
	getDouble (Ljava/lang/String;)D k
	getFloat (Ljava/lang/String;)F j
	getId ()B a
	getInt (Ljava/lang/String;)I h
	getIntArray (Ljava/lang/String;)[I n
	getList (Ljava/lang/String;I)Lnet/minecraft/nbt/ListTag; d
	getLong (Ljava/lang/String;)J i
	getLongArray (Ljava/lang/String;)[J o
	getPrettyDisplay (Ljava/lang/String;I)Lnet/minecraft/network/chat/Component; a
	getShort (Ljava/lang/String;)S g
	getString (Ljava/lang/String;)Ljava/lang/String; l
	getTagType (Ljava/lang/String;)B d
	getType ()Lnet/minecraft/nbt/TagType; b
	getUUID (Ljava/lang/String;)Ljava/util/UUID; a
	handleEscape (Ljava/lang/String;)Ljava/lang/String; s
	handleEscapePretty (Ljava/lang/String;)Lnet/minecraft/network/chat/Component; t
	hasUUID (Ljava/lang/String;)Z b
	merge (Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/nbt/CompoundTag; a
	put (Ljava/lang/String;Lnet/minecraft/nbt/Tag;)Lnet/minecraft/nbt/Tag; a
	putBoolean (Ljava/lang/String;Z)V a
	putByte (Ljava/lang/String;B)V a
	putByteArray (Ljava/lang/String;Ljava/util/List;)V a
	putByteArray (Ljava/lang/String;[B)V a
	putDouble (Ljava/lang/String;D)V a
	putFloat (Ljava/lang/String;F)V a
	putInt (Ljava/lang/String;I)V b
	putIntArray (Ljava/lang/String;Ljava/util/List;)V b
	putIntArray (Ljava/lang/String;[I)V a
	putLong (Ljava/lang/String;J)V a
	putLongArray (Ljava/lang/String;Ljava/util/List;)V c
	putLongArray (Ljava/lang/String;[J)V a
	putShort (Ljava/lang/String;S)V a
	putString (Ljava/lang/String;Ljava/lang/String;)V a
	putUUID (Ljava/lang/String;Ljava/util/UUID;)V a
	readNamedTagData (Lnet/minecraft/nbt/TagType;Ljava/lang/String;Ljava/io/DataInput;ILnet/minecraft/nbt/NbtAccounter;)Lnet/minecraft/nbt/Tag; b
	readNamedTagName (Ljava/io/DataInput;Lnet/minecraft/nbt/NbtAccounter;)Ljava/lang/String; d
	readNamedTagType (Ljava/io/DataInput;Lnet/minecraft/nbt/NbtAccounter;)B c
	remove (Ljava/lang/String;)V r
	size ()I e
	stripEmptyChildren ()V e_
	write (Ljava/io/DataOutput;)V a
	writeNamedTag (Ljava/lang/String;Lnet/minecraft/nbt/Tag;Ljava/io/DataOutput;)V a
net/minecraft/nbt/DoubleTag me
	TYPE b
	ZERO a
	data c
	copy ()Lnet/minecraft/nbt/DoubleTag; d
	copy ()Lnet/minecraft/nbt/Tag; c
	getAsByte ()B h
	getAsDouble ()D i
	getAsFloat ()F j
	getAsInt ()I f
	getAsLong ()J e
	getAsNumber ()Ljava/lang/Number; k
	getAsShort ()S g
	getId ()B a
	getPrettyDisplay (Ljava/lang/String;I)Lnet/minecraft/network/chat/Component; a
	getType ()Lnet/minecraft/nbt/TagType; b
	valueOf (D)Lnet/minecraft/nbt/DoubleTag; a
	write (Ljava/io/DataOutput;)V a
net/minecraft/nbt/EndTag mf
	INSTANCE b
	TYPE a
	copy ()Lnet/minecraft/nbt/EndTag; d
	copy ()Lnet/minecraft/nbt/Tag; c
	getId ()B a
	getPrettyDisplay (Ljava/lang/String;I)Lnet/minecraft/network/chat/Component; a
	getType ()Lnet/minecraft/nbt/TagType; b
	write (Ljava/io/DataOutput;)V a
net/minecraft/nbt/FloatTag mg
	TYPE b
	ZERO a
	data c
	copy ()Lnet/minecraft/nbt/FloatTag; d
	copy ()Lnet/minecraft/nbt/Tag; c
	getAsByte ()B h
	getAsDouble ()D i
	getAsFloat ()F j
	getAsInt ()I f
	getAsLong ()J e
	getAsNumber ()Ljava/lang/Number; k
	getAsShort ()S g
	getId ()B a
	getPrettyDisplay (Ljava/lang/String;I)Lnet/minecraft/network/chat/Component; a
	getType ()Lnet/minecraft/nbt/TagType; b
	valueOf (F)Lnet/minecraft/nbt/FloatTag; a
	write (Ljava/io/DataOutput;)V a
net/minecraft/nbt/IntArrayTag mh
	TYPE a
	data b
	add (ILnet/minecraft/nbt/IntTag;)V b
	add (ILnet/minecraft/nbt/Tag;)V c
	addTag (ILnet/minecraft/nbt/Tag;)Z b
	copy ()Lnet/minecraft/nbt/IntArrayTag; d
	copy ()Lnet/minecraft/nbt/Tag; c
	get (I)Lnet/minecraft/nbt/IntTag; a
	getAsIntArray ()[I g
	getElementType ()B d_
	getId ()B a
	getPrettyDisplay (Ljava/lang/String;I)Lnet/minecraft/network/chat/Component; a
	getType ()Lnet/minecraft/nbt/TagType; b
	remove (I)Lnet/minecraft/nbt/IntTag; b
	remove (I)Lnet/minecraft/nbt/Tag; c
	set (ILnet/minecraft/nbt/IntTag;)Lnet/minecraft/nbt/IntTag; a
	set (ILnet/minecraft/nbt/Tag;)Lnet/minecraft/nbt/Tag; d
	setTag (ILnet/minecraft/nbt/Tag;)Z a
	toArray (Ljava/util/List;)[I a
	write (Ljava/io/DataOutput;)V a
net/minecraft/nbt/IntTag mi
	TYPE a
	data b
	copy ()Lnet/minecraft/nbt/IntTag; d
	copy ()Lnet/minecraft/nbt/Tag; c
	getAsByte ()B h
	getAsDouble ()D i
	getAsFloat ()F j
	getAsInt ()I f
	getAsLong ()J e
	getAsNumber ()Ljava/lang/Number; k
	getAsShort ()S g
	getId ()B a
	getPrettyDisplay (Ljava/lang/String;I)Lnet/minecraft/network/chat/Component; a
	getType ()Lnet/minecraft/nbt/TagType; b
	valueOf (I)Lnet/minecraft/nbt/IntTag; a
	write (Ljava/io/DataOutput;)V a
net/minecraft/nbt/IntTag$Cache mi$a
	cache a
net/minecraft/nbt/ListTag mj
	INLINE_ELEMENT_TYPES b
	TYPE a
	list c
	type h
	add (ILnet/minecraft/nbt/Tag;)V c
	addTag (ILnet/minecraft/nbt/Tag;)Z b
	copy ()Lnet/minecraft/nbt/ListTag; d
	copy ()Lnet/minecraft/nbt/Tag; c
	get (I)Lnet/minecraft/nbt/Tag; k
	getCompound (I)Lnet/minecraft/nbt/CompoundTag; a
	getDouble (I)D h
	getElementType ()B d_
	getFloat (I)F i
	getId ()B a
	getInt (I)I e
	getIntArray (I)[I f
	getList (I)Lnet/minecraft/nbt/ListTag; b
	getLongArray (I)[J g
	getPrettyDisplay (Ljava/lang/String;I)Lnet/minecraft/network/chat/Component; a
	getShort (I)S d
	getString (I)Ljava/lang/String; j
	getType ()Lnet/minecraft/nbt/TagType; b
	remove (I)Lnet/minecraft/nbt/Tag; c
	set (ILnet/minecraft/nbt/Tag;)Lnet/minecraft/nbt/Tag; d
	setTag (ILnet/minecraft/nbt/Tag;)Z a
	stripEmptyChildren ()V e_
	updateType (Lnet/minecraft/nbt/Tag;)Z a
	updateTypeAfterRemove ()V g
	write (Ljava/io/DataOutput;)V a
net/minecraft/nbt/LongArrayTag mk
	TYPE a
	data b
	add (ILnet/minecraft/nbt/LongTag;)V b
	add (ILnet/minecraft/nbt/Tag;)V c
	addTag (ILnet/minecraft/nbt/Tag;)Z b
	copy ()Lnet/minecraft/nbt/LongArrayTag; d
	copy ()Lnet/minecraft/nbt/Tag; c
	get (I)Lnet/minecraft/nbt/LongTag; a
	getAsLongArray ()[J g
	getElementType ()B d_
	getId ()B a
	getPrettyDisplay (Ljava/lang/String;I)Lnet/minecraft/network/chat/Component; a
	getType ()Lnet/minecraft/nbt/TagType; b
	remove (I)Lnet/minecraft/nbt/LongTag; b
	remove (I)Lnet/minecraft/nbt/Tag; c
	set (ILnet/minecraft/nbt/LongTag;)Lnet/minecraft/nbt/LongTag; a
	set (ILnet/minecraft/nbt/Tag;)Lnet/minecraft/nbt/Tag; d
	setTag (ILnet/minecraft/nbt/Tag;)Z a
	toArray (Ljava/util/List;)[J a
	write (Ljava/io/DataOutput;)V a
net/minecraft/nbt/LongTag ml
	TYPE a
	data b
	copy ()Lnet/minecraft/nbt/LongTag; d
	copy ()Lnet/minecraft/nbt/Tag; c
	getAsByte ()B h
	getAsDouble ()D i
	getAsFloat ()F j
	getAsInt ()I f
	getAsLong ()J e
	getAsNumber ()Ljava/lang/Number; k
	getAsShort ()S g
	getId ()B a
	getPrettyDisplay (Ljava/lang/String;I)Lnet/minecraft/network/chat/Component; a
	getType ()Lnet/minecraft/nbt/TagType; b
	valueOf (J)Lnet/minecraft/nbt/LongTag; a
	write (Ljava/io/DataOutput;)V a
net/minecraft/nbt/LongTag$Cache ml$a
	cache a
net/minecraft/nbt/NbtAccounter mm
	UNLIMITED a
	quota b
	usage c
	accountBits (J)V a
net/minecraft/nbt/NbtIo mn
	read (Ljava/io/DataInput;)Lnet/minecraft/nbt/CompoundTag; a
	read (Ljava/io/DataInput;Lnet/minecraft/nbt/NbtAccounter;)Lnet/minecraft/nbt/CompoundTag; a
	read (Ljava/io/File;)Lnet/minecraft/nbt/CompoundTag; b
	readCompressed (Ljava/io/File;)Lnet/minecraft/nbt/CompoundTag; a
	readCompressed (Ljava/io/InputStream;)Lnet/minecraft/nbt/CompoundTag; a
	readUnnamedTag (Ljava/io/DataInput;ILnet/minecraft/nbt/NbtAccounter;)Lnet/minecraft/nbt/Tag; a
	write (Lnet/minecraft/nbt/CompoundTag;Ljava/io/DataOutput;)V a
	write (Lnet/minecraft/nbt/CompoundTag;Ljava/io/File;)V b
	writeCompressed (Lnet/minecraft/nbt/CompoundTag;Ljava/io/File;)V a
	writeCompressed (Lnet/minecraft/nbt/CompoundTag;Ljava/io/OutputStream;)V a
	writeUnnamedTag (Lnet/minecraft/nbt/Tag;Ljava/io/DataOutput;)V a
net/minecraft/nbt/NbtOps mo
	INSTANCE a
	convertTo (Lcom/mojang/serialization/DynamicOps;Lnet/minecraft/nbt/Tag;)Ljava/lang/Object; a
	createBoolean (Z)Lnet/minecraft/nbt/Tag; a
	createByte (B)Lnet/minecraft/nbt/Tag; a
	createByteList (Ljava/nio/ByteBuffer;)Lnet/minecraft/nbt/Tag; a
	createDouble (D)Lnet/minecraft/nbt/Tag; a
	createFloat (F)Lnet/minecraft/nbt/Tag; a
	createGenericList (BB)Lnet/minecraft/nbt/CollectionTag; a
	createInt (I)Lnet/minecraft/nbt/Tag; a
	createIntList (Ljava/util/stream/IntStream;)Lnet/minecraft/nbt/Tag; a
	createList (Ljava/util/stream/Stream;)Lnet/minecraft/nbt/Tag; b
	createLong (J)Lnet/minecraft/nbt/Tag; a
	createLongList (Ljava/util/stream/LongStream;)Lnet/minecraft/nbt/Tag; a
	createMap (Ljava/util/stream/Stream;)Lnet/minecraft/nbt/Tag; a
	createNumeric (Ljava/lang/Number;)Lnet/minecraft/nbt/Tag; a
	createShort (S)Lnet/minecraft/nbt/Tag; a
	createString (Ljava/lang/String;)Lnet/minecraft/nbt/Tag; a
	empty ()Lnet/minecraft/nbt/Tag; a
	fillMany (Lnet/minecraft/nbt/CollectionTag;Lnet/minecraft/nbt/Tag;Ljava/util/List;)V a
	fillOne (Lnet/minecraft/nbt/CollectionTag;Lnet/minecraft/nbt/Tag;Lnet/minecraft/nbt/Tag;)V a
	getByteBuffer (Lnet/minecraft/nbt/Tag;)Lcom/mojang/serialization/DataResult; h
	getIntStream (Lnet/minecraft/nbt/Tag;)Lcom/mojang/serialization/DataResult; i
	getList (Lnet/minecraft/nbt/Tag;)Lcom/mojang/serialization/DataResult; g
	getLongStream (Lnet/minecraft/nbt/Tag;)Lcom/mojang/serialization/DataResult; j
	getMap (Lnet/minecraft/nbt/Tag;)Lcom/mojang/serialization/DataResult; e
	getMapEntries (Lnet/minecraft/nbt/Tag;)Lcom/mojang/serialization/DataResult; d
	getMapValues (Lnet/minecraft/nbt/Tag;)Lcom/mojang/serialization/DataResult; c
	getNumberValue (Lnet/minecraft/nbt/Tag;)Lcom/mojang/serialization/DataResult; a
	getStream (Lnet/minecraft/nbt/Tag;)Lcom/mojang/serialization/DataResult; f
	getStringValue (Lnet/minecraft/nbt/Tag;)Lcom/mojang/serialization/DataResult; b
	mergeToList (Lnet/minecraft/nbt/Tag;Ljava/util/List;)Lcom/mojang/serialization/DataResult; a
	mergeToList (Lnet/minecraft/nbt/Tag;Lnet/minecraft/nbt/Tag;)Lcom/mojang/serialization/DataResult; a
	mergeToMap (Lnet/minecraft/nbt/Tag;Lcom/mojang/serialization/MapLike;)Lcom/mojang/serialization/DataResult; a
	mergeToMap (Lnet/minecraft/nbt/Tag;Lnet/minecraft/nbt/Tag;Lnet/minecraft/nbt/Tag;)Lcom/mojang/serialization/DataResult; a
	remove (Lnet/minecraft/nbt/Tag;Ljava/lang/String;)Lnet/minecraft/nbt/Tag; a
	typesMatch (BBB)Z a
net/minecraft/nbt/NbtOps$NbtRecordBuilder mo$a
	append (Ljava/lang/String;Lnet/minecraft/nbt/Tag;Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/nbt/CompoundTag; a
	build (Lnet/minecraft/nbt/CompoundTag;Lnet/minecraft/nbt/Tag;)Lcom/mojang/serialization/DataResult; a
	initBuilder ()Lnet/minecraft/nbt/CompoundTag; a
net/minecraft/nbt/NbtUtils mp
	LOGGER a
	compareNbt (Lnet/minecraft/nbt/Tag;Lnet/minecraft/nbt/Tag;Z)Z a
	createUUID (Ljava/util/UUID;)Lnet/minecraft/nbt/IntArrayTag; a
	getName (Lnet/minecraft/world/level/block/state/properties/Property;Ljava/lang/Comparable;)Ljava/lang/String; a
	indent (ILjava/lang/StringBuilder;)Ljava/lang/StringBuilder; a
	loadUUID (Lnet/minecraft/nbt/Tag;)Ljava/util/UUID; a
	prettyPrint (Ljava/lang/StringBuilder;Lnet/minecraft/nbt/Tag;IZ)Ljava/lang/StringBuilder; a
	prettyPrint (Lnet/minecraft/nbt/Tag;)Ljava/lang/String; b
	prettyPrint (Lnet/minecraft/nbt/Tag;Z)Ljava/lang/String; a
	readBlockPos (Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/core/BlockPos; b
	readBlockState (Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/world/level/block/state/BlockState; c
	readGameProfile (Lnet/minecraft/nbt/CompoundTag;)Lcom/mojang/authlib/GameProfile; a
	setValueHelper (Lnet/minecraft/world/level/block/state/StateHolder;Lnet/minecraft/world/level/block/state/properties/Property;Ljava/lang/String;Lnet/minecraft/nbt/CompoundTag;Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/world/level/block/state/StateHolder; a
	update (Lcom/mojang/datafixers/DataFixer;Lnet/minecraft/util/datafix/DataFixTypes;Lnet/minecraft/nbt/CompoundTag;I)Lnet/minecraft/nbt/CompoundTag; a
	update (Lcom/mojang/datafixers/DataFixer;Lnet/minecraft/util/datafix/DataFixTypes;Lnet/minecraft/nbt/CompoundTag;II)Lnet/minecraft/nbt/CompoundTag; a
	writeBlockPos (Lnet/minecraft/core/BlockPos;)Lnet/minecraft/nbt/CompoundTag; a
	writeBlockState (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/nbt/CompoundTag; a
	writeFluidState (Lnet/minecraft/world/level/material/FluidState;)Lnet/minecraft/nbt/CompoundTag; a
	writeGameProfile (Lnet/minecraft/nbt/CompoundTag;Lcom/mojang/authlib/GameProfile;)Lnet/minecraft/nbt/CompoundTag; a
net/minecraft/nbt/NumericTag mq
	getAsByte ()B h
	getAsDouble ()D i
	getAsFloat ()F j
	getAsInt ()I f
	getAsLong ()J e
	getAsNumber ()Ljava/lang/Number; k
	getAsShort ()S g
net/minecraft/nbt/ShortTag mr
	TYPE a
	data b
	copy ()Lnet/minecraft/nbt/ShortTag; d
	copy ()Lnet/minecraft/nbt/Tag; c
	getAsByte ()B h
	getAsDouble ()D i
	getAsFloat ()F j
	getAsInt ()I f
	getAsLong ()J e
	getAsNumber ()Ljava/lang/Number; k
	getAsShort ()S g
	getId ()B a
	getPrettyDisplay (Ljava/lang/String;I)Lnet/minecraft/network/chat/Component; a
	getType ()Lnet/minecraft/nbt/TagType; b
	valueOf (S)Lnet/minecraft/nbt/ShortTag; a
	write (Ljava/io/DataOutput;)V a
net/minecraft/nbt/ShortTag$Cache mr$a
	cache a
net/minecraft/nbt/StringTag ms
	EMPTY b
	TYPE a
	data c
	copy ()Lnet/minecraft/nbt/StringTag; d
	copy ()Lnet/minecraft/nbt/Tag; c
	getAsString ()Ljava/lang/String; f_
	getId ()B a
	getPrettyDisplay (Ljava/lang/String;I)Lnet/minecraft/network/chat/Component; a
	getType ()Lnet/minecraft/nbt/TagType; b
	quoteAndEscape (Ljava/lang/String;)Ljava/lang/String; b
	valueOf (Ljava/lang/String;)Lnet/minecraft/nbt/StringTag; a
	write (Ljava/io/DataOutput;)V a
net/minecraft/nbt/Tag mt
	SYNTAX_HIGHLIGHTING_KEY d
	SYNTAX_HIGHLIGHTING_NUMBER f
	SYNTAX_HIGHLIGHTING_NUMBER_TYPE g
	SYNTAX_HIGHLIGHTING_STRING e
	copy ()Lnet/minecraft/nbt/Tag; c
	getAsString ()Ljava/lang/String; f_
	getId ()B a
	getPrettyDisplay ()Lnet/minecraft/network/chat/Component; l
	getPrettyDisplay (Ljava/lang/String;I)Lnet/minecraft/network/chat/Component; a
	getType ()Lnet/minecraft/nbt/TagType; b
	stripEmptyChildren ()V e_
	write (Ljava/io/DataOutput;)V a
net/minecraft/nbt/TagParser mu
	BYTE_PATTERN j
	DOUBLE_PATTERN h
	DOUBLE_PATTERN_NOSUFFIX g
	ERROR_EXPECTED_KEY b
	ERROR_EXPECTED_VALUE c
	ERROR_INSERT_MIXED_ARRAY e
	ERROR_INSERT_MIXED_LIST d
	ERROR_INVALID_ARRAY f
	ERROR_TRAILING_DATA a
	FLOAT_PATTERN i
	INT_PATTERN m
	LONG_PATTERN k
	SHORT_PATTERN l
	reader n
	expect (C)V a
	hasElementSeparator ()Z i
	parseTag (Ljava/lang/String;)Lnet/minecraft/nbt/CompoundTag; a
	readArray (Lnet/minecraft/nbt/TagType;Lnet/minecraft/nbt/TagType;)Ljava/util/List; a
	readArrayTag ()Lnet/minecraft/nbt/Tag; h
	readKey ()Ljava/lang/String; b
	readList ()Lnet/minecraft/nbt/Tag; e
	readListTag ()Lnet/minecraft/nbt/Tag; g
	readSingleStruct ()Lnet/minecraft/nbt/CompoundTag; a
	readStruct ()Lnet/minecraft/nbt/CompoundTag; f
	readTypedValue ()Lnet/minecraft/nbt/Tag; c
	readValue ()Lnet/minecraft/nbt/Tag; d
	type (Ljava/lang/String;)Lnet/minecraft/nbt/Tag; b
net/minecraft/nbt/TagType mv
	createInvalid (I)Lnet/minecraft/nbt/TagType; a
	getName ()Ljava/lang/String; a
	getPrettyName ()Ljava/lang/String; b
	isValue ()Z c
	load (Ljava/io/DataInput;ILnet/minecraft/nbt/NbtAccounter;)Lnet/minecraft/nbt/Tag; b
net/minecraft/nbt/TagTypes mw
	TYPES a
	getType (I)Lnet/minecraft/nbt/TagType; a
net/minecraft/network/CipherBase my
	cipher a
	heapIn b
	heapOut c
	bufToByte (Lio/netty/buffer/ByteBuf;)[B a
	decipher (Lio/netty/channel/ChannelHandlerContext;Lio/netty/buffer/ByteBuf;)Lio/netty/buffer/ByteBuf; a
	encipher (Lio/netty/buffer/ByteBuf;Lio/netty/buffer/ByteBuf;)V a
net/minecraft/network/CipherDecoder mz
	cipher a
	decode (Lio/netty/channel/ChannelHandlerContext;Lio/netty/buffer/ByteBuf;Ljava/util/List;)V a
net/minecraft/network/CipherEncoder na
	cipher a
	encode (Lio/netty/channel/ChannelHandlerContext;Lio/netty/buffer/ByteBuf;Lio/netty/buffer/ByteBuf;)V a
net/minecraft/network/CompressionDecoder nb
	inflater a
	threshold b
	getThreshold ()I a
	setThreshold (I)V a
net/minecraft/network/CompressionEncoder nc
	deflater b
	encodeBuf a
	threshold c
	encode (Lio/netty/channel/ChannelHandlerContext;Lio/netty/buffer/ByteBuf;Lio/netty/buffer/ByteBuf;)V a
	getThreshold ()I a
	setThreshold (I)V a
net/minecraft/network/Connection nd
	ATTRIBUTE_PROTOCOL c
	LOCAL_WORKER_GROUP f
	LOGGER g
	NETWORK_EPOLL_WORKER_GROUP e
	NETWORK_WORKER_GROUP d
	PACKET_MARKER b
	ROOT_MARKER a
	address k
	averageReceivedPackets r
	averageSentPackets s
	channel j
	disconnectedReason m
	disconnectionHandled o
	encrypted n
	handlingFault u
	packetListener l
	queue i
	receivedPackets p
	receiving h
	sentPackets q
	tickCount t
	channelRead0 (Lio/netty/channel/ChannelHandlerContext;Lnet/minecraft/network/protocol/Packet;)V a
	connectToLocalServer (Ljava/net/SocketAddress;)Lnet/minecraft/network/Connection; a
	connectToServer (Ljava/net/InetAddress;IZ)Lnet/minecraft/network/Connection; a
	disconnect (Lnet/minecraft/network/chat/Component;)V a
	flushQueue ()V p
	genericsFtw (Lnet/minecraft/network/protocol/Packet;Lnet/minecraft/network/PacketListener;)V a
	getAverageReceivedPackets ()F n
	getAverageSentPackets ()F o
	getDisconnectedReason ()Lnet/minecraft/network/chat/Component; k
	getPacketListener ()Lnet/minecraft/network/PacketListener; j
	getReceiving ()Lnet/minecraft/network/protocol/PacketFlow; e
	getRemoteAddress ()Ljava/net/SocketAddress; c
	getSending ()Lnet/minecraft/network/protocol/PacketFlow; f
	handleDisconnection ()V m
	isConnected ()Z h
	isConnecting ()Z i
	isEncrypted ()Z g
	isMemoryConnection ()Z d
	send (Lnet/minecraft/network/protocol/Packet;)V a
	send (Lnet/minecraft/network/protocol/Packet;Lio/netty/util/concurrent/GenericFutureListener;)V a
	sendPacket (Lnet/minecraft/network/protocol/Packet;Lio/netty/util/concurrent/GenericFutureListener;)V b
	setEncryptionKey (Ljavax/crypto/SecretKey;)V a
	setListener (Lnet/minecraft/network/PacketListener;)V a
	setProtocol (Lnet/minecraft/network/ConnectionProtocol;)V a
	setReadOnly ()V l
	setupCompression (I)V a
	tick ()V a
	tickSecond ()V b
net/minecraft/network/Connection$PacketHolder nd$a
	listener b
	packet a
net/minecraft/network/ConnectionProtocol ne
	$VALUES i
	HANDSHAKING a
	LOGIN d
	LOOKUP e
	PLAY b
	PROTOCOL_BY_PACKET f
	STATUS c
	flows h
	id g
	createPacket (Lnet/minecraft/network/protocol/PacketFlow;I)Lnet/minecraft/network/protocol/Packet; a
	getById (I)Lnet/minecraft/network/ConnectionProtocol; a
	getId ()I a
	getPacketId (Lnet/minecraft/network/protocol/PacketFlow;Lnet/minecraft/network/protocol/Packet;)Ljava/lang/Integer; a
	getProtocolForPacket (Lnet/minecraft/network/protocol/Packet;)Lnet/minecraft/network/ConnectionProtocol; a
	protocol ()Lnet/minecraft/network/ConnectionProtocol$ProtocolBuilder; b
net/minecraft/network/ConnectionProtocol$PacketSet ne$a
	classToId a
	idToConstructor b
	addPacket (Ljava/lang/Class;Ljava/util/function/Supplier;)Lnet/minecraft/network/ConnectionProtocol$PacketSet; a
	createPacket (I)Lnet/minecraft/network/protocol/Packet; a
	getAllPackets ()Ljava/lang/Iterable; a
	getId (Ljava/lang/Class;)Ljava/lang/Integer; a
net/minecraft/network/ConnectionProtocol$ProtocolBuilder ne$b
	flows a
	addFlow (Lnet/minecraft/network/protocol/PacketFlow;Lnet/minecraft/network/ConnectionProtocol$PacketSet;)Lnet/minecraft/network/ConnectionProtocol$ProtocolBuilder; a
net/minecraft/network/FriendlyByteBuf nf
	source a
	accessByteBufWithCorrectSize ()[B d
	getVarIntSize (I)I a
	getVarLongSize (J)I a
	readAnySizeNbt ()Lnet/minecraft/nbt/CompoundTag; m
	readBlockHitResult ()Lnet/minecraft/world/phys/BlockHitResult; r
	readBlockPos ()Lnet/minecraft/core/BlockPos; e
	readByteArray ()[B a
	readByteArray (I)[B b
	readChunkPos ()Lnet/minecraft/world/level/ChunkPos; f
	readComponent ()Lnet/minecraft/network/chat/Component; h
	readDate ()Ljava/util/Date; q
	readEnum (Ljava/lang/Class;)Ljava/lang/Enum; a
	readItem ()Lnet/minecraft/world/item/ItemStack; n
	readLongArray ()[J c
	readLongArray ([J)[J b
	readLongArray ([JI)[J a
	readNbt ()Lnet/minecraft/nbt/CompoundTag; l
	readNbt (Lnet/minecraft/nbt/NbtAccounter;)Lnet/minecraft/nbt/CompoundTag; a
	readResourceLocation ()Lnet/minecraft/resources/ResourceLocation; p
	readSectionPos ()Lnet/minecraft/core/SectionPos; g
	readUUID ()Ljava/util/UUID; k
	readUtf ()Ljava/lang/String; o
	readUtf (I)Ljava/lang/String; e
	readVarInt ()I i
	readVarIntArray ()[I b
	readVarIntArray (I)[I c
	readVarLong ()J j
	readWithCodec (Lcom/mojang/serialization/Codec;)Ljava/lang/Object; a
	writeBlockHitResult (Lnet/minecraft/world/phys/BlockHitResult;)V a
	writeBlockPos (Lnet/minecraft/core/BlockPos;)Lnet/minecraft/network/FriendlyByteBuf; a
	writeByteArray ([B)Lnet/minecraft/network/FriendlyByteBuf; a
	writeChunkPos (Lnet/minecraft/world/level/ChunkPos;)Lnet/minecraft/network/FriendlyByteBuf; a
	writeCollection (Ljava/util/Collection;Ljava/util/function/BiConsumer;)V a
	writeComponent (Lnet/minecraft/network/chat/Component;)Lnet/minecraft/network/FriendlyByteBuf; a
	writeDate (Ljava/util/Date;)Lnet/minecraft/network/FriendlyByteBuf; a
	writeEnum (Ljava/lang/Enum;)Lnet/minecraft/network/FriendlyByteBuf; a
	writeItem (Lnet/minecraft/world/item/ItemStack;)Lnet/minecraft/network/FriendlyByteBuf; a
	writeLongArray ([J)Lnet/minecraft/network/FriendlyByteBuf; a
	writeNbt (Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/network/FriendlyByteBuf; a
	writeResourceLocation (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/network/FriendlyByteBuf; a
	writeSectionPos (Lnet/minecraft/core/SectionPos;)Lnet/minecraft/network/FriendlyByteBuf; a
	writeUUID (Ljava/util/UUID;)Lnet/minecraft/network/FriendlyByteBuf; a
	writeUtf (Ljava/lang/String;)Lnet/minecraft/network/FriendlyByteBuf; a
	writeUtf (Ljava/lang/String;I)Lnet/minecraft/network/FriendlyByteBuf; a
	writeVarInt (I)Lnet/minecraft/network/FriendlyByteBuf; d
	writeVarIntArray ([I)Lnet/minecraft/network/FriendlyByteBuf; a
	writeVarLong (J)Lnet/minecraft/network/FriendlyByteBuf; b
	writeWithCodec (Lcom/mojang/serialization/Codec;Ljava/lang/Object;)V a
net/minecraft/network/PacketDecoder ng
	LOGGER a
	MARKER b
	flow c
net/minecraft/network/PacketEncoder nh
	LOGGER a
	MARKER b
	flow c
	encode (Lio/netty/channel/ChannelHandlerContext;Lnet/minecraft/network/protocol/Packet;Lio/netty/buffer/ByteBuf;)V a
net/minecraft/network/PacketListener ni
	getConnection ()Lnet/minecraft/network/Connection; a
	onDisconnect (Lnet/minecraft/network/chat/Component;)V a
net/minecraft/network/RateKickingConnection nj
	EXCEED_REASON h
	LOGGER g
	rateLimitPacketsPerSecond i
	tickSecond ()V b
net/minecraft/network/SkipPacketException nk
net/minecraft/network/Varint21FrameDecoder nl
net/minecraft/network/Varint21LengthFieldPrepender nm
	encode (Lio/netty/channel/ChannelHandlerContext;Lio/netty/buffer/ByteBuf;Lio/netty/buffer/ByteBuf;)V a
net/minecraft/network/chat/BaseComponent nn
	decomposedWith e
	siblings a
	style f
	visualOrderText d
	append (Lnet/minecraft/network/chat/Component;)Lnet/minecraft/network/chat/MutableComponent; a
	copy ()Lnet/minecraft/network/chat/MutableComponent; e
	getContents ()Ljava/lang/String; a
	getSiblings ()Ljava/util/List; b
	getStyle ()Lnet/minecraft/network/chat/Style; c
	getVisualOrderText ()Lnet/minecraft/util/FormattedCharSequence; f
	plainCopy ()Lnet/minecraft/network/chat/BaseComponent; d
	plainCopy ()Lnet/minecraft/network/chat/MutableComponent; g
	setStyle (Lnet/minecraft/network/chat/Style;)Lnet/minecraft/network/chat/MutableComponent; a
net/minecraft/network/chat/ChatType no
	$VALUES f
	CHAT a
	GAME_INFO c
	SYSTEM b
	index d
	interrupt e
	getForIndex (B)Lnet/minecraft/network/chat/ChatType; a
	getIndex ()B a
	shouldInterrupt ()Z b
net/minecraft/network/chat/ClickEvent np
	action a
	value b
	getAction ()Lnet/minecraft/network/chat/ClickEvent$Action; a
	getValue ()Ljava/lang/String; b
net/minecraft/network/chat/ClickEvent$Action np$a
	$VALUES j
	CHANGE_PAGE e
	COPY_TO_CLIPBOARD f
	LOOKUP g
	OPEN_FILE b
	OPEN_URL a
	RUN_COMMAND c
	SUGGEST_COMMAND d
	allowFromServer h
	name i
	getByName (Ljava/lang/String;)Lnet/minecraft/network/chat/ClickEvent$Action; a
	getName ()Ljava/lang/String; b
	isAllowedFromServer ()Z a
net/minecraft/network/chat/CommonComponents nq
	CONNECT_FAILED i
	GUI_BACK h
	GUI_CANCEL d
	GUI_DONE c
	GUI_NO f
	GUI_PROCEED g
	GUI_YES e
	OPTION_OFF b
	OPTION_ON a
	optionStatus (Lnet/minecraft/network/chat/Component;Z)Lnet/minecraft/network/chat/MutableComponent; a
	optionStatus (Z)Lnet/minecraft/network/chat/Component; a
net/minecraft/network/chat/Component nr
	copy ()Lnet/minecraft/network/chat/MutableComponent; e
	getContents ()Ljava/lang/String; a
	getSiblings ()Ljava/util/List; b
	getString (I)Ljava/lang/String; a
	getStyle ()Lnet/minecraft/network/chat/Style; c
	getVisualOrderText ()Lnet/minecraft/util/FormattedCharSequence; f
	nullToEmpty (Ljava/lang/String;)Lnet/minecraft/network/chat/Component; a
	plainCopy ()Lnet/minecraft/network/chat/MutableComponent; g
	toFlatList (Lnet/minecraft/network/chat/Style;)Ljava/util/List; b
	visit (Lnet/minecraft/network/chat/FormattedText$ContentConsumer;)Ljava/util/Optional; a
	visit (Lnet/minecraft/network/chat/FormattedText$StyledContentConsumer;Lnet/minecraft/network/chat/Style;)Ljava/util/Optional; a
	visitSelf (Lnet/minecraft/network/chat/FormattedText$ContentConsumer;)Ljava/util/Optional; b
	visitSelf (Lnet/minecraft/network/chat/FormattedText$StyledContentConsumer;Lnet/minecraft/network/chat/Style;)Ljava/util/Optional; b
net/minecraft/network/chat/Component$Serializer nr$a
	GSON a
	JSON_READER_LINESTART c
	JSON_READER_POS b
	deserialize (Lcom/google/gson/JsonElement;Ljava/lang/reflect/Type;Lcom/google/gson/JsonDeserializationContext;)Lnet/minecraft/network/chat/MutableComponent; a
	fromJson (Lcom/google/gson/JsonElement;)Lnet/minecraft/network/chat/MutableComponent; a
	fromJson (Lcom/mojang/brigadier/StringReader;)Lnet/minecraft/network/chat/MutableComponent; a
	fromJson (Ljava/lang/String;)Lnet/minecraft/network/chat/MutableComponent; a
	fromJsonLenient (Ljava/lang/String;)Lnet/minecraft/network/chat/MutableComponent; b
	getPos (Lcom/google/gson/stream/JsonReader;)I a
	serialize (Lnet/minecraft/network/chat/Component;Ljava/lang/reflect/Type;Lcom/google/gson/JsonSerializationContext;)Lcom/google/gson/JsonElement; a
	serializeStyle (Lnet/minecraft/network/chat/Style;Lcom/google/gson/JsonObject;Lcom/google/gson/JsonSerializationContext;)V a
	toJson (Lnet/minecraft/network/chat/Component;)Ljava/lang/String; a
	toJsonTree (Lnet/minecraft/network/chat/Component;)Lcom/google/gson/JsonElement; b
net/minecraft/network/chat/ComponentUtils ns
	formatAndSortList (Ljava/util/Collection;Ljava/util/function/Function;)Lnet/minecraft/network/chat/Component; a
	formatList (Ljava/util/Collection;)Lnet/minecraft/network/chat/Component; a
	formatList (Ljava/util/Collection;Ljava/util/function/Function;)Lnet/minecraft/network/chat/MutableComponent; b
	fromMessage (Lcom/mojang/brigadier/Message;)Lnet/minecraft/network/chat/Component; a
	getDisplayName (Lcom/mojang/authlib/GameProfile;)Lnet/minecraft/network/chat/Component; a
	mergeStyles (Lnet/minecraft/network/chat/MutableComponent;Lnet/minecraft/network/chat/Style;)Lnet/minecraft/network/chat/MutableComponent; a
	resolveStyle (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/network/chat/Style;Lnet/minecraft/world/entity/Entity;I)Lnet/minecraft/network/chat/Style; a
	updateForEntity (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/network/chat/Component;Lnet/minecraft/world/entity/Entity;I)Lnet/minecraft/network/chat/MutableComponent; a
	wrapInSquareBrackets (Lnet/minecraft/network/chat/Component;)Lnet/minecraft/network/chat/MutableComponent; a
net/minecraft/network/chat/ContextAwareComponent nt
	resolve (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/world/entity/Entity;I)Lnet/minecraft/network/chat/MutableComponent; a
net/minecraft/network/chat/FormattedText nu
	EMPTY c
	STOP_ITERATION b
	composite (Ljava/util/List;)Lnet/minecraft/network/chat/FormattedText; a
	composite ([Lnet/minecraft/network/chat/FormattedText;)Lnet/minecraft/network/chat/FormattedText; a
	of (Ljava/lang/String;)Lnet/minecraft/network/chat/FormattedText; b
	of (Ljava/lang/String;Lnet/minecraft/network/chat/Style;)Lnet/minecraft/network/chat/FormattedText; a
	visit (Lnet/minecraft/network/chat/FormattedText$ContentConsumer;)Ljava/util/Optional; a
	visit (Lnet/minecraft/network/chat/FormattedText$StyledContentConsumer;Lnet/minecraft/network/chat/Style;)Ljava/util/Optional; a
net/minecraft/network/chat/FormattedText$ContentConsumer nu$a
net/minecraft/network/chat/FormattedText$StyledContentConsumer nu$b
net/minecraft/network/chat/HoverEvent nv
	LOGGER a
	action b
	value c
	deserialize (Lcom/google/gson/JsonObject;)Lnet/minecraft/network/chat/HoverEvent; a
	getAction ()Lnet/minecraft/network/chat/HoverEvent$Action; a
	getValue (Lnet/minecraft/network/chat/HoverEvent$Action;)Ljava/lang/Object; a
	serialize ()Lcom/google/gson/JsonObject; b
net/minecraft/network/chat/HoverEvent$Action nv$a
	LOOKUP d
	SHOW_ENTITY c
	SHOW_ITEM b
	SHOW_TEXT a
	allowFromServer f
	argDeserializer g
	argSerializer h
	legacyArgDeserializer i
	name e
	cast (Ljava/lang/Object;)Ljava/lang/Object; b
	deserialize (Lcom/google/gson/JsonElement;)Lnet/minecraft/network/chat/HoverEvent; a
	deserializeFromLegacy (Lnet/minecraft/network/chat/Component;)Lnet/minecraft/network/chat/HoverEvent; a
	getByName (Ljava/lang/String;)Lnet/minecraft/network/chat/HoverEvent$Action; a
	getName ()Ljava/lang/String; b
	isAllowedFromServer ()Z a
	serializeArg (Ljava/lang/Object;)Lcom/google/gson/JsonElement; a
net/minecraft/network/chat/HoverEvent$EntityTooltipInfo nv$b
	id b
	linesCache d
	name c
	type a
	create (Lcom/google/gson/JsonElement;)Lnet/minecraft/network/chat/HoverEvent$EntityTooltipInfo; a
	create (Lnet/minecraft/network/chat/Component;)Lnet/minecraft/network/chat/HoverEvent$EntityTooltipInfo; a
	getTooltipLines ()Ljava/util/List; b
	serialize ()Lcom/google/gson/JsonElement; a
net/minecraft/network/chat/HoverEvent$ItemStackInfo nv$c
	count b
	item a
	itemStack d
	tag c
	create (Lcom/google/gson/JsonElement;)Lnet/minecraft/network/chat/HoverEvent$ItemStackInfo; b
	create (Lnet/minecraft/network/chat/Component;)Lnet/minecraft/network/chat/HoverEvent$ItemStackInfo; b
	getItemStack ()Lnet/minecraft/world/item/ItemStack; a
	serialize ()Lcom/google/gson/JsonElement; b
net/minecraft/network/chat/KeybindComponent nw
	keyResolver d
	name e
	nameResolver f
	getName ()Ljava/lang/String; i
	getNestedComponent ()Lnet/minecraft/network/chat/Component; j
	plainCopy ()Lnet/minecraft/network/chat/BaseComponent; d
	plainCopy ()Lnet/minecraft/network/chat/KeybindComponent; h
	plainCopy ()Lnet/minecraft/network/chat/MutableComponent; g
	setKeyResolver (Ljava/util/function/Function;)V a
	visitSelf (Lnet/minecraft/network/chat/FormattedText$ContentConsumer;)Ljava/util/Optional; b
	visitSelf (Lnet/minecraft/network/chat/FormattedText$StyledContentConsumer;Lnet/minecraft/network/chat/Style;)Ljava/util/Optional; b
net/minecraft/network/chat/MutableComponent nx
	append (Ljava/lang/String;)Lnet/minecraft/network/chat/MutableComponent; c
	append (Lnet/minecraft/network/chat/Component;)Lnet/minecraft/network/chat/MutableComponent; a
	setStyle (Lnet/minecraft/network/chat/Style;)Lnet/minecraft/network/chat/MutableComponent; a
	withStyle (Ljava/util/function/UnaryOperator;)Lnet/minecraft/network/chat/MutableComponent; a
	withStyle (Lnet/minecraft/ChatFormatting;)Lnet/minecraft/network/chat/MutableComponent; a
	withStyle (Lnet/minecraft/network/chat/Style;)Lnet/minecraft/network/chat/MutableComponent; c
	withStyle ([Lnet/minecraft/ChatFormatting;)Lnet/minecraft/network/chat/MutableComponent; a
net/minecraft/network/chat/NbtComponent ny
	LOGGER g
	compiledNbtPath f
	interpreting d
	nbtPathPattern e
	compileNbtPath (Ljava/lang/String;)Lnet/minecraft/commands/arguments/NbtPathArgument$NbtPath; d
	getData (Lnet/minecraft/commands/CommandSourceStack;)Ljava/util/stream/Stream; a
	getNbtPath ()Ljava/lang/String; h
	isInterpreting ()Z i
	resolve (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/world/entity/Entity;I)Lnet/minecraft/network/chat/MutableComponent; a
net/minecraft/network/chat/NbtComponent$BlockNbtComponent ny$a
	compiledPos h
	posPattern g
	compilePos (Ljava/lang/String;)Lnet/minecraft/commands/arguments/coordinates/Coordinates; d
	getData (Lnet/minecraft/commands/CommandSourceStack;)Ljava/util/stream/Stream; a
	getPos ()Ljava/lang/String; j
	plainCopy ()Lnet/minecraft/network/chat/BaseComponent; d
	plainCopy ()Lnet/minecraft/network/chat/MutableComponent; g
	plainCopy ()Lnet/minecraft/network/chat/NbtComponent$BlockNbtComponent; k
net/minecraft/network/chat/NbtComponent$EntityNbtComponent ny$b
	compiledSelector h
	selectorPattern g
	compileSelector (Ljava/lang/String;)Lnet/minecraft/commands/arguments/selector/EntitySelector; d
	getData (Lnet/minecraft/commands/CommandSourceStack;)Ljava/util/stream/Stream; a
	getSelector ()Ljava/lang/String; j
	plainCopy ()Lnet/minecraft/network/chat/BaseComponent; d
	plainCopy ()Lnet/minecraft/network/chat/MutableComponent; g
	plainCopy ()Lnet/minecraft/network/chat/NbtComponent$EntityNbtComponent; k
net/minecraft/network/chat/NbtComponent$StorageNbtComponent ny$c
	id g
	getData (Lnet/minecraft/commands/CommandSourceStack;)Ljava/util/stream/Stream; a
	getId ()Lnet/minecraft/resources/ResourceLocation; j
	plainCopy ()Lnet/minecraft/network/chat/BaseComponent; d
	plainCopy ()Lnet/minecraft/network/chat/MutableComponent; g
	plainCopy ()Lnet/minecraft/network/chat/NbtComponent$StorageNbtComponent; k
net/minecraft/network/chat/ScoreComponent nz
	name d
	objective f
	selector e
	findTargetName (Lnet/minecraft/commands/CommandSourceStack;)Ljava/lang/String; a
	getName ()Ljava/lang/String; h
	getObjective ()Ljava/lang/String; j
	getScore (Ljava/lang/String;Lnet/minecraft/commands/CommandSourceStack;)Ljava/lang/String; a
	getSelector ()Lnet/minecraft/commands/arguments/selector/EntitySelector; i
	parseSelector (Ljava/lang/String;)Lnet/minecraft/commands/arguments/selector/EntitySelector; d
	plainCopy ()Lnet/minecraft/network/chat/BaseComponent; d
	plainCopy ()Lnet/minecraft/network/chat/MutableComponent; g
	plainCopy ()Lnet/minecraft/network/chat/ScoreComponent; k
	resolve (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/world/entity/Entity;I)Lnet/minecraft/network/chat/MutableComponent; a
net/minecraft/network/chat/SelectorComponent oa
	LOGGER d
	pattern e
	selector f
	getContents ()Ljava/lang/String; a
	getPattern ()Ljava/lang/String; h
	getSelector ()Lnet/minecraft/commands/arguments/selector/EntitySelector; i
	plainCopy ()Lnet/minecraft/network/chat/BaseComponent; d
	plainCopy ()Lnet/minecraft/network/chat/MutableComponent; g
	plainCopy ()Lnet/minecraft/network/chat/SelectorComponent; j
	resolve (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/world/entity/Entity;I)Lnet/minecraft/network/chat/MutableComponent; a
net/minecraft/network/chat/Style ob
	DEFAULT_FONT b
	EMPTY a
	bold d
	clickEvent i
	color c
	font l
	hoverEvent j
	insertion k
	italic e
	obfuscated h
	strikethrough g
	underlined f
	applyFormat (Lnet/minecraft/ChatFormatting;)Lnet/minecraft/network/chat/Style; b
	applyFormats ([Lnet/minecraft/ChatFormatting;)Lnet/minecraft/network/chat/Style; a
	applyLegacyFormat (Lnet/minecraft/ChatFormatting;)Lnet/minecraft/network/chat/Style; c
	applyTo (Lnet/minecraft/network/chat/Style;)Lnet/minecraft/network/chat/Style; a
	getClickEvent ()Lnet/minecraft/network/chat/ClickEvent; h
	getColor ()Lnet/minecraft/network/chat/TextColor; a
	getFont ()Lnet/minecraft/resources/ResourceLocation; k
	getHoverEvent ()Lnet/minecraft/network/chat/HoverEvent; i
	getInsertion ()Ljava/lang/String; j
	isBold ()Z b
	isEmpty ()Z g
	isItalic ()Z c
	isObfuscated ()Z f
	isStrikethrough ()Z d
	isUnderlined ()Z e
	withBold (Ljava/lang/Boolean;)Lnet/minecraft/network/chat/Style; a
	withClickEvent (Lnet/minecraft/network/chat/ClickEvent;)Lnet/minecraft/network/chat/Style; a
	withColor (I)Lnet/minecraft/network/chat/Style; a
	withColor (Lnet/minecraft/ChatFormatting;)Lnet/minecraft/network/chat/Style; a
	withColor (Lnet/minecraft/network/chat/TextColor;)Lnet/minecraft/network/chat/Style; a
	withFont (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/network/chat/Style; a
	withHoverEvent (Lnet/minecraft/network/chat/HoverEvent;)Lnet/minecraft/network/chat/Style; a
	withInsertion (Ljava/lang/String;)Lnet/minecraft/network/chat/Style; a
	withItalic (Ljava/lang/Boolean;)Lnet/minecraft/network/chat/Style; b
	withObfuscated (Ljava/lang/Boolean;)Lnet/minecraft/network/chat/Style; e
	withStrikethrough (Ljava/lang/Boolean;)Lnet/minecraft/network/chat/Style; d
	withUnderlined (Ljava/lang/Boolean;)Lnet/minecraft/network/chat/Style; c
net/minecraft/network/chat/Style$Serializer ob$a
	deserialize (Lcom/google/gson/JsonElement;Ljava/lang/reflect/Type;Lcom/google/gson/JsonDeserializationContext;)Lnet/minecraft/network/chat/Style; a
	getClickEvent (Lcom/google/gson/JsonObject;)Lnet/minecraft/network/chat/ClickEvent; c
	getFont (Lcom/google/gson/JsonObject;)Lnet/minecraft/resources/ResourceLocation; a
	getHoverEvent (Lcom/google/gson/JsonObject;)Lnet/minecraft/network/chat/HoverEvent; b
	getInsertion (Lcom/google/gson/JsonObject;)Ljava/lang/String; d
	getOptionalFlag (Lcom/google/gson/JsonObject;Ljava/lang/String;)Ljava/lang/Boolean; a
	getTextColor (Lcom/google/gson/JsonObject;)Lnet/minecraft/network/chat/TextColor; e
	serialize (Lnet/minecraft/network/chat/Style;Ljava/lang/reflect/Type;Lcom/google/gson/JsonSerializationContext;)Lcom/google/gson/JsonElement; a
net/minecraft/network/chat/SubStringSource oc
	charStyles b
	plainText a
	reverseCharModifier c
	create (Lnet/minecraft/network/chat/FormattedText;)Lnet/minecraft/network/chat/SubStringSource; a
	create (Lnet/minecraft/network/chat/FormattedText;Lit/unimi/dsi/fastutil/ints/Int2IntFunction;Ljava/util/function/UnaryOperator;)Lnet/minecraft/network/chat/SubStringSource; a
	getPlainText ()Ljava/lang/String; a
	substring (IIZ)Ljava/util/List; a
net/minecraft/network/chat/TextColor od
	LEGACY_FORMAT_TO_COLOR a
	NAMED_COLORS b
	name d
	value c
	formatValue ()Ljava/lang/String; c
	fromLegacyFormat (Lnet/minecraft/ChatFormatting;)Lnet/minecraft/network/chat/TextColor; a
	fromRgb (I)Lnet/minecraft/network/chat/TextColor; a
	getValue ()I a
	parseColor (Ljava/lang/String;)Lnet/minecraft/network/chat/TextColor; a
	serialize ()Ljava/lang/String; b
net/minecraft/network/chat/TextComponent oe
	EMPTY d
	text e
	getContents ()Ljava/lang/String; a
	getText ()Ljava/lang/String; h
	plainCopy ()Lnet/minecraft/network/chat/BaseComponent; d
	plainCopy ()Lnet/minecraft/network/chat/MutableComponent; g
	plainCopy ()Lnet/minecraft/network/chat/TextComponent; i
net/minecraft/network/chat/TranslatableComponent of
	FORMAT_PATTERN k
	NO_ARGS d
	TEXT_NULL f
	TEXT_PERCENT e
	args h
	decomposedParts j
	decomposedWith i
	key g
	decompose ()V k
	decomposeTemplate (Ljava/lang/String;)V d
	getArgs ()[Ljava/lang/Object; j
	getArgument (I)Lnet/minecraft/network/chat/FormattedText; b
	getKey ()Ljava/lang/String; i
	plainCopy ()Lnet/minecraft/network/chat/BaseComponent; d
	plainCopy ()Lnet/minecraft/network/chat/MutableComponent; g
	plainCopy ()Lnet/minecraft/network/chat/TranslatableComponent; h
	resolve (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/world/entity/Entity;I)Lnet/minecraft/network/chat/MutableComponent; a
	visitSelf (Lnet/minecraft/network/chat/FormattedText$ContentConsumer;)Ljava/util/Optional; b
	visitSelf (Lnet/minecraft/network/chat/FormattedText$StyledContentConsumer;Lnet/minecraft/network/chat/Style;)Ljava/util/Optional; b
net/minecraft/network/chat/TranslatableFormatException og
net/minecraft/network/protocol/Packet oj
	handle (Lnet/minecraft/network/PacketListener;)V a
	isSkippable ()Z a
	read (Lnet/minecraft/network/FriendlyByteBuf;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V b
net/minecraft/network/protocol/PacketFlow ok
	$VALUES c
	CLIENTBOUND b
	SERVERBOUND a
	getOpposite ()Lnet/minecraft/network/protocol/PacketFlow; a
net/minecraft/network/protocol/PacketUtils ol
	LOGGER a
	ensureRunningOnSameThread (Lnet/minecraft/network/protocol/Packet;Lnet/minecraft/network/PacketListener;Lnet/minecraft/server/level/ServerLevel;)V a
	ensureRunningOnSameThread (Lnet/minecraft/network/protocol/Packet;Lnet/minecraft/network/PacketListener;Lnet/minecraft/util/thread/BlockableEventLoop;)V a
net/minecraft/network/protocol/game/ClientGamePacketListener om
	handleAddEntity (Lnet/minecraft/network/protocol/game/ClientboundAddEntityPacket;)V a
	handleAddExperienceOrb (Lnet/minecraft/network/protocol/game/ClientboundAddExperienceOrbPacket;)V a
	handleAddMob (Lnet/minecraft/network/protocol/game/ClientboundAddMobPacket;)V a
	handleAddObjective (Lnet/minecraft/network/protocol/game/ClientboundSetObjectivePacket;)V a
	handleAddOrRemoveRecipes (Lnet/minecraft/network/protocol/game/ClientboundRecipePacket;)V a
	handleAddPainting (Lnet/minecraft/network/protocol/game/ClientboundAddPaintingPacket;)V a
	handleAddPlayer (Lnet/minecraft/network/protocol/game/ClientboundAddPlayerPacket;)V a
	handleAnimate (Lnet/minecraft/network/protocol/game/ClientboundAnimatePacket;)V a
	handleAwardStats (Lnet/minecraft/network/protocol/game/ClientboundAwardStatsPacket;)V a
	handleBlockBreakAck (Lnet/minecraft/network/protocol/game/ClientboundBlockBreakAckPacket;)V a
	handleBlockDestruction (Lnet/minecraft/network/protocol/game/ClientboundBlockDestructionPacket;)V a
	handleBlockEntityData (Lnet/minecraft/network/protocol/game/ClientboundBlockEntityDataPacket;)V a
	handleBlockEvent (Lnet/minecraft/network/protocol/game/ClientboundBlockEventPacket;)V a
	handleBlockUpdate (Lnet/minecraft/network/protocol/game/ClientboundBlockUpdatePacket;)V a
	handleBossUpdate (Lnet/minecraft/network/protocol/game/ClientboundBossEventPacket;)V a
	handleChangeDifficulty (Lnet/minecraft/network/protocol/game/ClientboundChangeDifficultyPacket;)V a
	handleChat (Lnet/minecraft/network/protocol/game/ClientboundChatPacket;)V a
	handleChunkBlocksUpdate (Lnet/minecraft/network/protocol/game/ClientboundSectionBlocksUpdatePacket;)V a
	handleCommandSuggestions (Lnet/minecraft/network/protocol/game/ClientboundCommandSuggestionsPacket;)V a
	handleCommands (Lnet/minecraft/network/protocol/game/ClientboundCommandsPacket;)V a
	handleContainerAck (Lnet/minecraft/network/protocol/game/ClientboundContainerAckPacket;)V a
	handleContainerClose (Lnet/minecraft/network/protocol/game/ClientboundContainerClosePacket;)V a
	handleContainerContent (Lnet/minecraft/network/protocol/game/ClientboundContainerSetContentPacket;)V a
	handleContainerSetData (Lnet/minecraft/network/protocol/game/ClientboundContainerSetDataPacket;)V a
	handleContainerSetSlot (Lnet/minecraft/network/protocol/game/ClientboundContainerSetSlotPacket;)V a
	handleCustomPayload (Lnet/minecraft/network/protocol/game/ClientboundCustomPayloadPacket;)V a
	handleCustomSoundEvent (Lnet/minecraft/network/protocol/game/ClientboundCustomSoundPacket;)V a
	handleDisconnect (Lnet/minecraft/network/protocol/game/ClientboundDisconnectPacket;)V a
	handleEntityEvent (Lnet/minecraft/network/protocol/game/ClientboundEntityEventPacket;)V a
	handleEntityLinkPacket (Lnet/minecraft/network/protocol/game/ClientboundSetEntityLinkPacket;)V a
	handleExplosion (Lnet/minecraft/network/protocol/game/ClientboundExplodePacket;)V a
	handleForgetLevelChunk (Lnet/minecraft/network/protocol/game/ClientboundForgetLevelChunkPacket;)V a
	handleGameEvent (Lnet/minecraft/network/protocol/game/ClientboundGameEventPacket;)V a
	handleHorseScreenOpen (Lnet/minecraft/network/protocol/game/ClientboundHorseScreenOpenPacket;)V a
	handleItemCooldown (Lnet/minecraft/network/protocol/game/ClientboundCooldownPacket;)V a
	handleKeepAlive (Lnet/minecraft/network/protocol/game/ClientboundKeepAlivePacket;)V a
	handleLevelChunk (Lnet/minecraft/network/protocol/game/ClientboundLevelChunkPacket;)V a
	handleLevelEvent (Lnet/minecraft/network/protocol/game/ClientboundLevelEventPacket;)V a
	handleLightUpdatePacked (Lnet/minecraft/network/protocol/game/ClientboundLightUpdatePacket;)V a
	handleLogin (Lnet/minecraft/network/protocol/game/ClientboundLoginPacket;)V a
	handleLookAt (Lnet/minecraft/network/protocol/game/ClientboundPlayerLookAtPacket;)V a
	handleMapItemData (Lnet/minecraft/network/protocol/game/ClientboundMapItemDataPacket;)V a
	handleMerchantOffers (Lnet/minecraft/network/protocol/game/ClientboundMerchantOffersPacket;)V a
	handleMoveEntity (Lnet/minecraft/network/protocol/game/ClientboundMoveEntityPacket;)V a
	handleMovePlayer (Lnet/minecraft/network/protocol/game/ClientboundPlayerPositionPacket;)V a
	handleMoveVehicle (Lnet/minecraft/network/protocol/game/ClientboundMoveVehiclePacket;)V a
	handleOpenBook (Lnet/minecraft/network/protocol/game/ClientboundOpenBookPacket;)V a
	handleOpenScreen (Lnet/minecraft/network/protocol/game/ClientboundOpenScreenPacket;)V a
	handleOpenSignEditor (Lnet/minecraft/network/protocol/game/ClientboundOpenSignEditorPacket;)V a
	handleParticleEvent (Lnet/minecraft/network/protocol/game/ClientboundLevelParticlesPacket;)V a
	handlePlaceRecipe (Lnet/minecraft/network/protocol/game/ClientboundPlaceGhostRecipePacket;)V a
	handlePlayerAbilities (Lnet/minecraft/network/protocol/game/ClientboundPlayerAbilitiesPacket;)V a
	handlePlayerCombat (Lnet/minecraft/network/protocol/game/ClientboundPlayerCombatPacket;)V a
	handlePlayerInfo (Lnet/minecraft/network/protocol/game/ClientboundPlayerInfoPacket;)V a
	handleRemoveEntity (Lnet/minecraft/network/protocol/game/ClientboundRemoveEntitiesPacket;)V a
	handleRemoveMobEffect (Lnet/minecraft/network/protocol/game/ClientboundRemoveMobEffectPacket;)V a
	handleResourcePack (Lnet/minecraft/network/protocol/game/ClientboundResourcePackPacket;)V a
	handleRespawn (Lnet/minecraft/network/protocol/game/ClientboundRespawnPacket;)V a
	handleRotateMob (Lnet/minecraft/network/protocol/game/ClientboundRotateHeadPacket;)V a
	handleSelectAdvancementsTab (Lnet/minecraft/network/protocol/game/ClientboundSelectAdvancementsTabPacket;)V a
	handleSetBorder (Lnet/minecraft/network/protocol/game/ClientboundSetBorderPacket;)V a
	handleSetCamera (Lnet/minecraft/network/protocol/game/ClientboundSetCameraPacket;)V a
	handleSetCarriedItem (Lnet/minecraft/network/protocol/game/ClientboundSetCarriedItemPacket;)V a
	handleSetChunkCacheCenter (Lnet/minecraft/network/protocol/game/ClientboundSetChunkCacheCenterPacket;)V a
	handleSetChunkCacheRadius (Lnet/minecraft/network/protocol/game/ClientboundSetChunkCacheRadiusPacket;)V a
	handleSetDisplayObjective (Lnet/minecraft/network/protocol/game/ClientboundSetDisplayObjectivePacket;)V a
	handleSetEntityData (Lnet/minecraft/network/protocol/game/ClientboundSetEntityDataPacket;)V a
	handleSetEntityMotion (Lnet/minecraft/network/protocol/game/ClientboundSetEntityMotionPacket;)V a
	handleSetEntityPassengersPacket (Lnet/minecraft/network/protocol/game/ClientboundSetPassengersPacket;)V a
	handleSetEquipment (Lnet/minecraft/network/protocol/game/ClientboundSetEquipmentPacket;)V a
	handleSetExperience (Lnet/minecraft/network/protocol/game/ClientboundSetExperiencePacket;)V a
	handleSetHealth (Lnet/minecraft/network/protocol/game/ClientboundSetHealthPacket;)V a
	handleSetPlayerTeamPacket (Lnet/minecraft/network/protocol/game/ClientboundSetPlayerTeamPacket;)V a
	handleSetScore (Lnet/minecraft/network/protocol/game/ClientboundSetScorePacket;)V a
	handleSetSpawn (Lnet/minecraft/network/protocol/game/ClientboundSetDefaultSpawnPositionPacket;)V a
	handleSetTime (Lnet/minecraft/network/protocol/game/ClientboundSetTimePacket;)V a
	handleSetTitles (Lnet/minecraft/network/protocol/game/ClientboundSetTitlesPacket;)V a
	handleSoundEntityEvent (Lnet/minecraft/network/protocol/game/ClientboundSoundEntityPacket;)V a
	handleSoundEvent (Lnet/minecraft/network/protocol/game/ClientboundSoundPacket;)V a
	handleStopSoundEvent (Lnet/minecraft/network/protocol/game/ClientboundStopSoundPacket;)V a
	handleTabListCustomisation (Lnet/minecraft/network/protocol/game/ClientboundTabListPacket;)V a
	handleTagQueryPacket (Lnet/minecraft/network/protocol/game/ClientboundTagQueryPacket;)V a
	handleTakeItemEntity (Lnet/minecraft/network/protocol/game/ClientboundTakeItemEntityPacket;)V a
	handleTeleportEntity (Lnet/minecraft/network/protocol/game/ClientboundTeleportEntityPacket;)V a
	handleUpdateAdvancementsPacket (Lnet/minecraft/network/protocol/game/ClientboundUpdateAdvancementsPacket;)V a
	handleUpdateAttributes (Lnet/minecraft/network/protocol/game/ClientboundUpdateAttributesPacket;)V a
	handleUpdateMobEffect (Lnet/minecraft/network/protocol/game/ClientboundUpdateMobEffectPacket;)V a
	handleUpdateRecipes (Lnet/minecraft/network/protocol/game/ClientboundUpdateRecipesPacket;)V a
	handleUpdateTags (Lnet/minecraft/network/protocol/game/ClientboundUpdateTagsPacket;)V a
net/minecraft/network/protocol/game/ClientboundAddEntityPacket on
	data l
	id a
	type k
	uuid b
	x c
	xRot i
	xa f
	y d
	yRot j
	ya g
	z e
	za h
	getData ()I m
	getId ()I b
	getType ()Lnet/minecraft/world/entity/EntityType; l
	getUUID ()Ljava/util/UUID; c
	getX ()D d
	getXa ()D g
	getY ()D e
	getYa ()D h
	getZ ()D f
	getZa ()D i
	getxRot ()I j
	getyRot ()I k
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	read (Lnet/minecraft/network/FriendlyByteBuf;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V b
net/minecraft/network/protocol/game/ClientboundAddExperienceOrbPacket oo
	id a
	value e
	x b
	y c
	z d
	getId ()I b
	getValue ()I f
	getX ()D c
	getY ()D d
	getZ ()D e
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	read (Lnet/minecraft/network/FriendlyByteBuf;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V b
net/minecraft/network/protocol/game/ClientboundAddMobPacket op
	id a
	type c
	uuid b
	x d
	xRot k
	xd g
	y e
	yHeadRot l
	yRot j
	yd h
	z f
	zd i
	getId ()I b
	getType ()I d
	getUUID ()Ljava/util/UUID; c
	getX ()D e
	getXd ()I h
	getY ()D f
	getYd ()I i
	getZ ()D g
	getZd ()I j
	getxRot ()B l
	getyHeadRot ()B m
	getyRot ()B k
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	read (Lnet/minecraft/network/FriendlyByteBuf;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V b
net/minecraft/network/protocol/game/ClientboundAddPaintingPacket oq
	direction d
	id a
	motive e
	pos c
	uuid b
	getDirection ()Lnet/minecraft/core/Direction; e
	getId ()I b
	getMotive ()Lnet/minecraft/world/entity/decoration/Motive; f
	getPos ()Lnet/minecraft/core/BlockPos; d
	getUUID ()Ljava/util/UUID; c
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	read (Lnet/minecraft/network/FriendlyByteBuf;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V b
net/minecraft/network/protocol/game/ClientboundAddPlayerPacket or
	entityId a
	playerId b
	x c
	xRot g
	y d
	yRot f
	z e
	getEntityId ()I b
	getPlayerId ()Ljava/util/UUID; c
	getX ()D d
	getY ()D e
	getZ ()D f
	getxRot ()B h
	getyRot ()B g
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	read (Lnet/minecraft/network/FriendlyByteBuf;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V b
net/minecraft/network/protocol/game/ClientboundAnimatePacket os
	action b
	id a
	getAction ()I c
	getId ()I b
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	read (Lnet/minecraft/network/FriendlyByteBuf;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V b
net/minecraft/network/protocol/game/ClientboundAwardStatsPacket ot
	stats a
	getId (Lnet/minecraft/stats/Stat;)I a
	getStats ()Ljava/util/Map; b
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	read (Lnet/minecraft/network/FriendlyByteBuf;)V a
	readStat (Lnet/minecraft/stats/StatType;Lnet/minecraft/network/FriendlyByteBuf;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V b
net/minecraft/network/protocol/game/ClientboundBlockBreakAckPacket ou
	LOGGER b
	action a
	allGood e
	pos c
	state d
	action ()Lnet/minecraft/network/protocol/game/ServerboundPlayerActionPacket$Action; e
	allGood ()Z d
	getPos ()Lnet/minecraft/core/BlockPos; c
	getState ()Lnet/minecraft/world/level/block/state/BlockState; b
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	read (Lnet/minecraft/network/FriendlyByteBuf;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V b
net/minecraft/network/protocol/game/ClientboundBlockDestructionPacket ov
	id a
	pos b
	progress c
	getId ()I b
	getPos ()Lnet/minecraft/core/BlockPos; c
	getProgress ()I d
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	read (Lnet/minecraft/network/FriendlyByteBuf;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V b
net/minecraft/network/protocol/game/ClientboundBlockEntityDataPacket ow
	pos a
	tag c
	type b
	getPos ()Lnet/minecraft/core/BlockPos; b
	getTag ()Lnet/minecraft/nbt/CompoundTag; d
	getType ()I c
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	read (Lnet/minecraft/network/FriendlyByteBuf;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V b
net/minecraft/network/protocol/game/ClientboundBlockEventPacket ox
	b0 b
	b1 c
	block d
	pos a
	getB0 ()I c
	getB1 ()I d
	getBlock ()Lnet/minecraft/world/level/block/Block; e
	getPos ()Lnet/minecraft/core/BlockPos; b
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	read (Lnet/minecraft/network/FriendlyByteBuf;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V b
net/minecraft/network/protocol/game/ClientboundBlockUpdatePacket oy
	blockState b
	pos a
	getBlockState ()Lnet/minecraft/world/level/block/state/BlockState; b
	getPos ()Lnet/minecraft/core/BlockPos; c
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	read (Lnet/minecraft/network/FriendlyByteBuf;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V b
net/minecraft/network/protocol/game/ClientboundBossEventPacket oz
	color e
	createWorldFog i
	darkenScreen g
	id a
	name c
	operation b
	overlay f
	pct d
	playMusic h
	decodeProperties (I)V a
	encodeProperties ()I k
	getColor ()Lnet/minecraft/world/BossEvent$BossBarColor; f
	getId ()Ljava/util/UUID; b
	getName ()Lnet/minecraft/network/chat/Component; d
	getOperation ()Lnet/minecraft/network/protocol/game/ClientboundBossEventPacket$Operation; c
	getOverlay ()Lnet/minecraft/world/BossEvent$BossBarOverlay; g
	getPercent ()F e
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	read (Lnet/minecraft/network/FriendlyByteBuf;)V a
	shouldCreateWorldFog ()Z j
	shouldDarkenScreen ()Z h
	shouldPlayMusic ()Z i
	write (Lnet/minecraft/network/FriendlyByteBuf;)V b
net/minecraft/network/protocol/game/ClientboundBossEventPacket$Operation oz$a
	$VALUES g
	ADD a
	REMOVE b
	UPDATE_NAME d
	UPDATE_PCT c
	UPDATE_PROPERTIES f
	UPDATE_STYLE e
net/minecraft/network/protocol/game/ClientboundChangeDifficultyPacket pa
	difficulty a
	locked b
	getDifficulty ()Lnet/minecraft/world/Difficulty; c
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	isLocked ()Z b
	read (Lnet/minecraft/network/FriendlyByteBuf;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V b
net/minecraft/network/protocol/game/ClientboundChatPacket pb
	message a
	sender c
	type b
	getMessage ()Lnet/minecraft/network/chat/Component; b
	getSender ()Ljava/util/UUID; e
	getType ()Lnet/minecraft/network/chat/ChatType; d
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	isSkippable ()Z a
	isSystem ()Z c
	read (Lnet/minecraft/network/FriendlyByteBuf;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V b
net/minecraft/network/protocol/game/ClientboundCommandSuggestionsPacket pc
	id a
	suggestions b
	getId ()I b
	getSuggestions ()Lcom/mojang/brigadier/suggestion/Suggestions; c
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	read (Lnet/minecraft/network/FriendlyByteBuf;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V b
net/minecraft/network/protocol/game/ClientboundCommandsPacket pd
	root a
	createBuilder (Lnet/minecraft/network/FriendlyByteBuf;B)Lcom/mojang/brigadier/builder/ArgumentBuilder; a
	enumerateNodes (Lcom/mojang/brigadier/tree/RootCommandNode;)Lit/unimi/dsi/fastutil/objects/Object2IntMap; a
	getNodesInIdOrder (Lit/unimi/dsi/fastutil/objects/Object2IntMap;)[Lcom/mojang/brigadier/tree/CommandNode; a
	getRoot ()Lcom/mojang/brigadier/tree/RootCommandNode; b
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	read (Lnet/minecraft/network/FriendlyByteBuf;)V a
	readNode (Lnet/minecraft/network/FriendlyByteBuf;)Lnet/minecraft/network/protocol/game/ClientboundCommandsPacket$Entry; c
	resolveEntries ([Lnet/minecraft/network/protocol/game/ClientboundCommandsPacket$Entry;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V b
	writeNode (Lnet/minecraft/network/FriendlyByteBuf;Lcom/mojang/brigadier/tree/CommandNode;Ljava/util/Map;)V a
net/minecraft/network/protocol/game/ClientboundCommandsPacket$Entry pd$a
	builder a
	children d
	flags b
	node e
	redirect c
	build ([Lnet/minecraft/network/protocol/game/ClientboundCommandsPacket$Entry;)Z a
net/minecraft/network/protocol/game/ClientboundContainerAckPacket pe
	accepted c
	containerId a
	uid b
	getContainerId ()I b
	getUid ()S c
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	isAccepted ()Z d
	read (Lnet/minecraft/network/FriendlyByteBuf;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V b
net/minecraft/network/protocol/game/ClientboundContainerClosePacket pf
	containerId a
	getContainerId ()I b
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	read (Lnet/minecraft/network/FriendlyByteBuf;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V b
net/minecraft/network/protocol/game/ClientboundContainerSetContentPacket pg
	containerId a
	items b
	getContainerId ()I b
	getItems ()Ljava/util/List; c
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	read (Lnet/minecraft/network/FriendlyByteBuf;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V b
net/minecraft/network/protocol/game/ClientboundContainerSetDataPacket ph
	containerId a
	id b
	value c
	getContainerId ()I b
	getId ()I c
	getValue ()I d
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	read (Lnet/minecraft/network/FriendlyByteBuf;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V b
net/minecraft/network/protocol/game/ClientboundContainerSetSlotPacket pi
	containerId a
	itemStack c
	slot b
	getContainerId ()I b
	getItem ()Lnet/minecraft/world/item/ItemStack; d
	getSlot ()I c
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	read (Lnet/minecraft/network/FriendlyByteBuf;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V b
net/minecraft/network/protocol/game/ClientboundCooldownPacket pj
	duration b
	item a
	getDuration ()I c
	getItem ()Lnet/minecraft/world/item/Item; b
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	read (Lnet/minecraft/network/FriendlyByteBuf;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V b
net/minecraft/network/protocol/game/ClientboundCustomPayloadPacket pk
	BRAND a
	DEBUG_BEE m
	DEBUG_BRAIN l
	DEBUG_CAVES_PACKET d
	DEBUG_GAME_TEST_ADD_MARKER o
	DEBUG_GAME_TEST_CLEAR p
	DEBUG_GOAL_SELECTOR k
	DEBUG_HIVE n
	DEBUG_NEIGHBORSUPDATE_PACKET c
	DEBUG_PATHFINDING_PACKET b
	DEBUG_POI_ADDED_PACKET h
	DEBUG_POI_REMOVED_PACKET i
	DEBUG_POI_TICKET_COUNT_PACKET g
	DEBUG_RAIDS q
	DEBUG_STRUCTURES_PACKET e
	DEBUG_VILLAGE_SECTIONS j
	DEBUG_WORLDGENATTEMPT_PACKET f
	data s
	identifier r
	getData ()Lnet/minecraft/network/FriendlyByteBuf; c
	getIdentifier ()Lnet/minecraft/resources/ResourceLocation; b
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	read (Lnet/minecraft/network/FriendlyByteBuf;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V b
net/minecraft/network/protocol/game/ClientboundCustomSoundPacket pl
	name a
	pitch g
	source b
	volume f
	x c
	y d
	z e
	getName ()Lnet/minecraft/resources/ResourceLocation; b
	getPitch ()F h
	getSource ()Lnet/minecraft/sounds/SoundSource; c
	getVolume ()F g
	getX ()D d
	getY ()D e
	getZ ()D f
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	read (Lnet/minecraft/network/FriendlyByteBuf;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V b
net/minecraft/network/protocol/game/ClientboundDisconnectPacket pm
	reason a
	getReason ()Lnet/minecraft/network/chat/Component; b
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	read (Lnet/minecraft/network/FriendlyByteBuf;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V b
net/minecraft/network/protocol/game/ClientboundEntityEventPacket pn
	entityId a
	eventId b
	getEntity (Lnet/minecraft/world/level/Level;)Lnet/minecraft/world/entity/Entity; a
	getEventId ()B b
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	read (Lnet/minecraft/network/FriendlyByteBuf;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V b
net/minecraft/network/protocol/game/ClientboundExplodePacket po
	knockbackX f
	knockbackY g
	knockbackZ h
	power d
	toBlow e
	x a
	y b
	z c
	getKnockbackX ()F b
	getKnockbackY ()F c
	getKnockbackZ ()F d
	getPower ()F h
	getToBlow ()Ljava/util/List; i
	getX ()D e
	getY ()D f
	getZ ()D g
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	read (Lnet/minecraft/network/FriendlyByteBuf;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V b
net/minecraft/network/protocol/game/ClientboundForgetLevelChunkPacket pp
	x a
	z b
	getX ()I b
	getZ ()I c
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	read (Lnet/minecraft/network/FriendlyByteBuf;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V b
net/minecraft/network/protocol/game/ClientboundGameEventPacket pq
	ARROW_HIT_PLAYER g
	CHANGE_GAME_MODE d
	DEMO_EVENT f
	GUARDIAN_ELDER_EFFECT k
	IMMEDIATE_RESPAWN l
	NO_RESPAWN_BLOCK_AVAILABLE a
	PUFFER_FISH_STING j
	RAIN_LEVEL_CHANGE h
	START_RAINING b
	STOP_RAINING c
	THUNDER_LEVEL_CHANGE i
	WIN_GAME e
	event m
	param n
	getEvent ()Lnet/minecraft/network/protocol/game/ClientboundGameEventPacket$Type; b
	getParam ()F c
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	read (Lnet/minecraft/network/FriendlyByteBuf;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V b
net/minecraft/network/protocol/game/ClientboundGameEventPacket$Type pq$a
	TYPES a
	id b
net/minecraft/network/protocol/game/ClientboundHorseScreenOpenPacket pr
	containerId a
	entityId c
	size b
	getContainerId ()I b
	getEntityId ()I d
	getSize ()I c
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	read (Lnet/minecraft/network/FriendlyByteBuf;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V b
net/minecraft/network/protocol/game/ClientboundKeepAlivePacket ps
	id a
	getId ()J b
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	read (Lnet/minecraft/network/FriendlyByteBuf;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V b
net/minecraft/network/protocol/game/ClientboundLevelChunkPacket pt
	availableSections c
	biomes e
	blockEntitiesTags g
	buffer f
	fullChunk h
	heightmaps d
	x a
	z b
	calculateChunkSize (Lnet/minecraft/world/level/chunk/LevelChunk;I)I a
	extractChunkData (Lnet/minecraft/network/FriendlyByteBuf;Lnet/minecraft/world/level/chunk/LevelChunk;I)I a
	getAvailableSections ()I e
	getBiomes ()[I i
	getBlockEntitiesTags ()Ljava/util/List; h
	getHeightmaps ()Lnet/minecraft/nbt/CompoundTag; g
	getReadBuffer ()Lnet/minecraft/network/FriendlyByteBuf; b
	getWriteBuffer ()Lio/netty/buffer/ByteBuf; j
	getX ()I c
	getZ ()I d
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	isFullChunk ()Z f
	read (Lnet/minecraft/network/FriendlyByteBuf;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V b
net/minecraft/network/protocol/game/ClientboundLevelEventPacket pu
	data c
	globalEvent d
	pos b
	type a
	getData ()I d
	getPos ()Lnet/minecraft/core/BlockPos; e
	getType ()I c
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	isGlobalEvent ()Z b
	read (Lnet/minecraft/network/FriendlyByteBuf;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V b
net/minecraft/network/protocol/game/ClientboundLevelParticlesPacket pv
	count h
	maxSpeed g
	overrideLimiter i
	particle j
	x a
	xDist d
	y b
	yDist e
	z c
	zDist f
	getCount ()I j
	getMaxSpeed ()F i
	getParticle ()Lnet/minecraft/core/particles/ParticleOptions; k
	getX ()D c
	getXDist ()F f
	getY ()D d
	getYDist ()F g
	getZ ()D e
	getZDist ()F h
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	isOverrideLimiter ()Z b
	read (Lnet/minecraft/network/FriendlyByteBuf;)V a
	readParticle (Lnet/minecraft/network/FriendlyByteBuf;Lnet/minecraft/core/particles/ParticleType;)Lnet/minecraft/core/particles/ParticleOptions; a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V b
net/minecraft/network/protocol/game/ClientboundLightUpdatePacket pw
	blockUpdates h
	blockYMask d
	emptyBlockYMask f
	emptySkyYMask e
	skyUpdates g
	skyYMask c
	trustEdges i
	x a
	z b
	getBlockUpdates ()Ljava/util/List; i
	getBlockYMask ()I g
	getEmptyBlockYMask ()I h
	getEmptySkyYMask ()I e
	getSkyUpdates ()Ljava/util/List; f
	getSkyYMask ()I d
	getTrustEdges ()Z j
	getX ()I b
	getZ ()I c
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	read (Lnet/minecraft/network/FriendlyByteBuf;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V b
net/minecraft/network/protocol/game/ClientboundLoginPacket px
	chunkRadius k
	dimension i
	dimensionType h
	gameType d
	hardcore c
	isDebug n
	isFlat o
	levels f
	maxPlayers j
	playerId a
	previousGameType e
	reducedDebugInfo l
	registryHolder g
	seed b
	showDeathScreen m
	getChunkRadius ()I l
	getDimension ()Lnet/minecraft/resources/ResourceKey; j
	getDimensionType ()Lnet/minecraft/world/level/dimension/DimensionType; i
	getGameType ()Lnet/minecraft/world/level/GameType; e
	getMaxPlayers ()I k
	getPlayerId ()I b
	getPreviousGameType ()Lnet/minecraft/world/level/GameType; f
	getSeed ()J c
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	isDebug ()Z o
	isFlat ()Z p
	isHardcore ()Z d
	isReducedDebugInfo ()Z m
	levels ()Ljava/util/Set; g
	read (Lnet/minecraft/network/FriendlyByteBuf;)V a
	registryAccess ()Lnet/minecraft/core/RegistryAccess; h
	shouldShowDeathScreen ()Z n
	write (Lnet/minecraft/network/FriendlyByteBuf;)V b
net/minecraft/network/protocol/game/ClientboundMapItemDataPacket py
	decorations e
	height i
	locked d
	mapColors j
	mapId a
	scale b
	startX f
	startY g
	trackingPosition c
	width h
	applyToMap (Lnet/minecraft/world/level/saveddata/maps/MapItemSavedData;)V a
	getMapId ()I b
	getScale ()B c
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	read (Lnet/minecraft/network/FriendlyByteBuf;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V b
net/minecraft/network/protocol/game/ClientboundMerchantOffersPacket pz
	canRestock f
	containerId a
	offers b
	showProgress e
	villagerLevel c
	villagerXp d
	canRestock ()Z g
	getContainerId ()I b
	getOffers ()Lnet/minecraft/world/item/trading/MerchantOffers; c
	getVillagerLevel ()I d
	getVillagerXp ()I e
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	read (Lnet/minecraft/network/FriendlyByteBuf;)V a
	showProgress ()Z f
	write (Lnet/minecraft/network/FriendlyByteBuf;)V b
net/minecraft/network/protocol/game/ClientboundMoveEntityPacket qa
	entityId a
	hasPos i
	hasRot h
	onGround g
	xRot f
	xa b
	yRot e
	ya c
	za d
	entityToPacket (D)J a
	getEntity (Lnet/minecraft/world/level/Level;)Lnet/minecraft/world/entity/Entity; a
	getXa ()S b
	getYa ()S c
	getZa ()S d
	getxRot ()B f
	getyRot ()B e
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	hasPosition ()Z h
	hasRotation ()Z g
	isOnGround ()Z i
	packetToEntity (J)D a
	packetToEntity (JJJ)Lnet/minecraft/world/phys/Vec3; a
	read (Lnet/minecraft/network/FriendlyByteBuf;)V a
	updateEntityPosition (Lnet/minecraft/world/phys/Vec3;)Lnet/minecraft/world/phys/Vec3; a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V b
net/minecraft/network/protocol/game/ClientboundMoveEntityPacket$Pos qa$a
	handle (Lnet/minecraft/network/PacketListener;)V a
	read (Lnet/minecraft/network/FriendlyByteBuf;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V b
net/minecraft/network/protocol/game/ClientboundMoveEntityPacket$PosRot qa$b
	handle (Lnet/minecraft/network/PacketListener;)V a
	read (Lnet/minecraft/network/FriendlyByteBuf;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V b
net/minecraft/network/protocol/game/ClientboundMoveEntityPacket$Rot qa$c
	handle (Lnet/minecraft/network/PacketListener;)V a
	read (Lnet/minecraft/network/FriendlyByteBuf;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V b
net/minecraft/network/protocol/game/ClientboundMoveVehiclePacket qb
	x a
	xRot e
	y b
	yRot d
	z c
	getX ()D b
	getXRot ()F f
	getY ()D c
	getYRot ()F e
	getZ ()D d
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	read (Lnet/minecraft/network/FriendlyByteBuf;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V b
net/minecraft/network/protocol/game/ClientboundOpenBookPacket qc
	hand a
	getHand ()Lnet/minecraft/world/InteractionHand; b
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	read (Lnet/minecraft/network/FriendlyByteBuf;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V b
net/minecraft/network/protocol/game/ClientboundOpenScreenPacket qd
	containerId a
	title c
	type b
	getContainerId ()I b
	getTitle ()Lnet/minecraft/network/chat/Component; d
	getType ()Lnet/minecraft/world/inventory/MenuType; c
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	read (Lnet/minecraft/network/FriendlyByteBuf;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V b
net/minecraft/network/protocol/game/ClientboundOpenSignEditorPacket qe
	pos a
	getPos ()Lnet/minecraft/core/BlockPos; b
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	read (Lnet/minecraft/network/FriendlyByteBuf;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V b
net/minecraft/network/protocol/game/ClientboundPlaceGhostRecipePacket qf
	containerId a
	recipe b
	getContainerId ()I c
	getRecipe ()Lnet/minecraft/resources/ResourceLocation; b
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	read (Lnet/minecraft/network/FriendlyByteBuf;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V b
net/minecraft/network/protocol/game/ClientboundPlayerAbilitiesPacket qg
	canFly c
	flyingSpeed e
	instabuild d
	invulnerable a
	isFlying b
	walkingSpeed f
	canFly ()Z d
	canInstabuild ()Z e
	getFlyingSpeed ()F f
	getWalkingSpeed ()F g
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	isFlying ()Z c
	isInvulnerable ()Z b
	read (Lnet/minecraft/network/FriendlyByteBuf;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V b
net/minecraft/network/protocol/game/ClientboundPlayerCombatPacket qh
	duration d
	event a
	killerId c
	message e
	playerId b
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	isSkippable ()Z a
	read (Lnet/minecraft/network/FriendlyByteBuf;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V b
net/minecraft/network/protocol/game/ClientboundPlayerCombatPacket$Event qh$a
	$VALUES d
	END_COMBAT b
	ENTER_COMBAT a
	ENTITY_DIED c
net/minecraft/network/protocol/game/ClientboundPlayerInfoPacket qi
	action a
	entries b
	getAction ()Lnet/minecraft/network/protocol/game/ClientboundPlayerInfoPacket$Action; c
	getEntries ()Ljava/util/List; b
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	read (Lnet/minecraft/network/FriendlyByteBuf;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V b
net/minecraft/network/protocol/game/ClientboundPlayerInfoPacket$Action qi$a
	$VALUES f
	ADD_PLAYER a
	REMOVE_PLAYER e
	UPDATE_DISPLAY_NAME d
	UPDATE_GAME_MODE b
	UPDATE_LATENCY c
net/minecraft/network/protocol/game/ClientboundPlayerInfoPacket$PlayerUpdate qi$b
	displayName e
	gameMode c
	latency b
	profile d
	getDisplayName ()Lnet/minecraft/network/chat/Component; d
	getGameMode ()Lnet/minecraft/world/level/GameType; c
	getLatency ()I b
	getProfile ()Lcom/mojang/authlib/GameProfile; a
net/minecraft/network/protocol/game/ClientboundPlayerLookAtPacket qj
	atEntity g
	entity d
	fromAnchor e
	toAnchor f
	x a
	y b
	z c
	getFromAnchor ()Lnet/minecraft/commands/arguments/EntityAnchorArgument$Anchor; b
	getPosition (Lnet/minecraft/world/level/Level;)Lnet/minecraft/world/phys/Vec3; a
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	read (Lnet/minecraft/network/FriendlyByteBuf;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V b
net/minecraft/network/protocol/game/ClientboundPlayerPositionPacket qk
	id g
	relativeArguments f
	x a
	xRot e
	y b
	yRot d
	z c
	getId ()I g
	getRelativeArguments ()Ljava/util/Set; h
	getX ()D b
	getXRot ()F f
	getY ()D c
	getYRot ()F e
	getZ ()D d
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	read (Lnet/minecraft/network/FriendlyByteBuf;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V b
net/minecraft/network/protocol/game/ClientboundPlayerPositionPacket$RelativeArgument qk$a
	$VALUES g
	X a
	X_ROT e
	Y b
	Y_ROT d
	Z c
	bit f
	getMask ()I a
	isSet (I)Z b
	pack (Ljava/util/Set;)I a
	unpack (I)Ljava/util/Set; a
net/minecraft/network/protocol/game/ClientboundRecipePacket ql
	bookSettings d
	recipes b
	state a
	toHighlight c
	getBookSettings ()Lnet/minecraft/stats/RecipeBookSettings; d
	getHighlights ()Ljava/util/List; c
	getRecipes ()Ljava/util/List; b
	getState ()Lnet/minecraft/network/protocol/game/ClientboundRecipePacket$State; e
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	read (Lnet/minecraft/network/FriendlyByteBuf;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V b
net/minecraft/network/protocol/game/ClientboundRecipePacket$State ql$a
	$VALUES d
	ADD b
	INIT a
	REMOVE c
net/minecraft/network/protocol/game/ClientboundRemoveEntitiesPacket qm
	entityIds a
	getEntityIds ()[I b
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	read (Lnet/minecraft/network/FriendlyByteBuf;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V b
net/minecraft/network/protocol/game/ClientboundRemoveMobEffectPacket qn
	effect b
	entityId a
	getEffect ()Lnet/minecraft/world/effect/MobEffect; b
	getEntity (Lnet/minecraft/world/level/Level;)Lnet/minecraft/world/entity/Entity; a
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	read (Lnet/minecraft/network/FriendlyByteBuf;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V b
net/minecraft/network/protocol/game/ClientboundResourcePackPacket qo
	hash b
	url a
	getHash ()Ljava/lang/String; c
	getUrl ()Ljava/lang/String; b
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	read (Lnet/minecraft/network/FriendlyByteBuf;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V b
net/minecraft/network/protocol/game/ClientboundRespawnPacket qp
	dimension b
	dimensionType a
	isDebug f
	isFlat g
	keepAllPlayerData h
	playerGameType d
	previousPlayerGameType e
	seed c
	getDimension ()Lnet/minecraft/resources/ResourceKey; c
	getDimensionType ()Lnet/minecraft/world/level/dimension/DimensionType; b
	getPlayerGameType ()Lnet/minecraft/world/level/GameType; e
	getPreviousPlayerGameType ()Lnet/minecraft/world/level/GameType; f
	getSeed ()J d
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	isDebug ()Z g
	isFlat ()Z h
	read (Lnet/minecraft/network/FriendlyByteBuf;)V a
	shouldKeepAllPlayerData ()Z i
	write (Lnet/minecraft/network/FriendlyByteBuf;)V b
net/minecraft/network/protocol/game/ClientboundRotateHeadPacket qq
	entityId a
	yHeadRot b
	getEntity (Lnet/minecraft/world/level/Level;)Lnet/minecraft/world/entity/Entity; a
	getYHeadRot ()B b
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	read (Lnet/minecraft/network/FriendlyByteBuf;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V b
net/minecraft/network/protocol/game/ClientboundSectionBlocksUpdatePacket qr
	positions b
	sectionPos a
	states c
	suppressLightUpdates d
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	initFields (I)V a
	read (Lnet/minecraft/network/FriendlyByteBuf;)V a
	runUpdates (Ljava/util/function/BiConsumer;)V a
	shouldSuppressLightUpdates ()Z b
	write (Lnet/minecraft/network/FriendlyByteBuf;)V b
net/minecraft/network/protocol/game/ClientboundSelectAdvancementsTabPacket qs
	tab a
	getTab ()Lnet/minecraft/resources/ResourceLocation; b
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	read (Lnet/minecraft/network/FriendlyByteBuf;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V b
net/minecraft/network/protocol/game/ClientboundSetBorderPacket qt
	lerpTime g
	newAbsoluteMaxSize b
	newCenterX c
	newCenterZ d
	newSize e
	oldSize f
	type a
	warningBlocks i
	warningTime h
	applyChanges (Lnet/minecraft/world/level/border/WorldBorder;)V a
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	read (Lnet/minecraft/network/FriendlyByteBuf;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V b
net/minecraft/network/protocol/game/ClientboundSetBorderPacket$Type qt$a
	$VALUES g
	INITIALIZE d
	LERP_SIZE b
	SET_CENTER c
	SET_SIZE a
	SET_WARNING_BLOCKS f
	SET_WARNING_TIME e
net/minecraft/network/protocol/game/ClientboundSetCameraPacket qu
	cameraId a
	getEntity (Lnet/minecraft/world/level/Level;)Lnet/minecraft/world/entity/Entity; a
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	read (Lnet/minecraft/network/FriendlyByteBuf;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V b
net/minecraft/network/protocol/game/ClientboundSetCarriedItemPacket qv
	slot a
	getSlot ()I b
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	read (Lnet/minecraft/network/FriendlyByteBuf;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V b
net/minecraft/network/protocol/game/ClientboundSetChunkCacheCenterPacket qw
	x a
	z b
	getX ()I b
	getZ ()I c
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	read (Lnet/minecraft/network/FriendlyByteBuf;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V b
net/minecraft/network/protocol/game/ClientboundSetChunkCacheRadiusPacket qx
	radius a
	getRadius ()I b
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	read (Lnet/minecraft/network/FriendlyByteBuf;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V b
net/minecraft/network/protocol/game/ClientboundSetDefaultSpawnPositionPacket qy
	angle b
	pos a
	getAngle ()F c
	getPos ()Lnet/minecraft/core/BlockPos; b
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	read (Lnet/minecraft/network/FriendlyByteBuf;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V b
net/minecraft/network/protocol/game/ClientboundSetDisplayObjectivePacket qz
	objectiveName b
	slot a
	getObjectiveName ()Ljava/lang/String; c
	getSlot ()I b
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	read (Lnet/minecraft/network/FriendlyByteBuf;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V b
net/minecraft/network/protocol/game/ClientboundSetEntityDataPacket ra
	id a
	packedItems b
	getId ()I c
	getUnpackedData ()Ljava/util/List; b
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	read (Lnet/minecraft/network/FriendlyByteBuf;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V b
net/minecraft/network/protocol/game/ClientboundSetEntityLinkPacket rb
	destId b
	sourceId a
	getDestId ()I c
	getSourceId ()I b
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	read (Lnet/minecraft/network/FriendlyByteBuf;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V b
net/minecraft/network/protocol/game/ClientboundSetEntityMotionPacket rc
	id a
	xa b
	ya c
	za d
	getId ()I b
	getXa ()I c
	getYa ()I d
	getZa ()I e
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	read (Lnet/minecraft/network/FriendlyByteBuf;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V b
net/minecraft/network/protocol/game/ClientboundSetEquipmentPacket rd
	entity a
	slots b
	getEntity ()I b
	getSlots ()Ljava/util/List; c
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	read (Lnet/minecraft/network/FriendlyByteBuf;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V b
net/minecraft/network/protocol/game/ClientboundSetExperiencePacket re
	experienceLevel c
	experienceProgress a
	totalExperience b
	getExperienceLevel ()I d
	getExperienceProgress ()F b
	getTotalExperience ()I c
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	read (Lnet/minecraft/network/FriendlyByteBuf;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V b
net/minecraft/network/protocol/game/ClientboundSetHealthPacket rf
	food b
	health a
	saturation c
	getFood ()I c
	getHealth ()F b
	getSaturation ()F d
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	read (Lnet/minecraft/network/FriendlyByteBuf;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V b
net/minecraft/network/protocol/game/ClientboundSetObjectivePacket rg
	displayName b
	method d
	objectiveName a
	renderType c
	getDisplayName ()Lnet/minecraft/network/chat/Component; c
	getMethod ()I d
	getObjectiveName ()Ljava/lang/String; b
	getRenderType ()Lnet/minecraft/world/scores/criteria/ObjectiveCriteria$RenderType; e
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	read (Lnet/minecraft/network/FriendlyByteBuf;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V b
net/minecraft/network/protocol/game/ClientboundSetPassengersPacket rh
	passengers b
	vehicle a
	getPassengers ()[I b
	getVehicle ()I c
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	read (Lnet/minecraft/network/FriendlyByteBuf;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V b
net/minecraft/network/protocol/game/ClientboundSetPlayerTeamPacket ri
	collisionRule f
	color g
	displayName b
	method i
	name a
	nametagVisibility e
	options j
	playerPrefix c
	playerSuffix d
	players h
	getCollisionRule ()Ljava/lang/String; i
	getColor ()Lnet/minecraft/ChatFormatting; g
	getDisplayName ()Lnet/minecraft/network/chat/Component; c
	getMethod ()I e
	getName ()Ljava/lang/String; b
	getNametagVisibility ()Ljava/lang/String; h
	getOptions ()I f
	getPlayerPrefix ()Lnet/minecraft/network/chat/Component; j
	getPlayerSuffix ()Lnet/minecraft/network/chat/Component; k
	getPlayers ()Ljava/util/Collection; d
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	read (Lnet/minecraft/network/FriendlyByteBuf;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V b
net/minecraft/network/protocol/game/ClientboundSetScorePacket rj
	method d
	objectiveName b
	owner a
	score c
	getMethod ()Lnet/minecraft/server/ServerScoreboard$Method; e
	getObjectiveName ()Ljava/lang/String; c
	getOwner ()Ljava/lang/String; b
	getScore ()I d
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	read (Lnet/minecraft/network/FriendlyByteBuf;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V b
net/minecraft/network/protocol/game/ClientboundSetTimePacket rk
	dayTime b
	gameTime a
	getDayTime ()J c
	getGameTime ()J b
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	read (Lnet/minecraft/network/FriendlyByteBuf;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V b
net/minecraft/network/protocol/game/ClientboundSetTitlesPacket rl
	fadeInTime c
	fadeOutTime e
	stayTime d
	text b
	type a
	getFadeInTime ()I d
	getFadeOutTime ()I f
	getStayTime ()I e
	getText ()Lnet/minecraft/network/chat/Component; c
	getType ()Lnet/minecraft/network/protocol/game/ClientboundSetTitlesPacket$Type; b
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	read (Lnet/minecraft/network/FriendlyByteBuf;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V b
net/minecraft/network/protocol/game/ClientboundSetTitlesPacket$Type rl$a
	$VALUES g
	ACTIONBAR c
	CLEAR e
	RESET f
	SUBTITLE b
	TIMES d
	TITLE a
net/minecraft/network/protocol/game/ClientboundSoundEntityPacket rm
	id c
	pitch e
	sound a
	source b
	volume d
	getId ()I d
	getPitch ()F f
	getSound ()Lnet/minecraft/sounds/SoundEvent; b
	getSource ()Lnet/minecraft/sounds/SoundSource; c
	getVolume ()F e
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	read (Lnet/minecraft/network/FriendlyByteBuf;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V b
net/minecraft/network/protocol/game/ClientboundSoundPacket rn
	pitch g
	sound a
	source b
	volume f
	x c
	y d
	z e
	getPitch ()F h
	getSound ()Lnet/minecraft/sounds/SoundEvent; b
	getSource ()Lnet/minecraft/sounds/SoundSource; c
	getVolume ()F g
	getX ()D d
	getY ()D e
	getZ ()D f
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	read (Lnet/minecraft/network/FriendlyByteBuf;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V b
net/minecraft/network/protocol/game/ClientboundStopSoundPacket ro
	name a
	source b
	getName ()Lnet/minecraft/resources/ResourceLocation; b
	getSource ()Lnet/minecraft/sounds/SoundSource; c
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	read (Lnet/minecraft/network/FriendlyByteBuf;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V b
net/minecraft/network/protocol/game/ClientboundTabListPacket rp
	footer b
	header a
	getFooter ()Lnet/minecraft/network/chat/Component; c
	getHeader ()Lnet/minecraft/network/chat/Component; b
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	read (Lnet/minecraft/network/FriendlyByteBuf;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V b
net/minecraft/network/protocol/game/ClientboundTagQueryPacket rq
	tag b
	transactionId a
	getTag ()Lnet/minecraft/nbt/CompoundTag; c
	getTransactionId ()I b
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	isSkippable ()Z a
	read (Lnet/minecraft/network/FriendlyByteBuf;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V b
net/minecraft/network/protocol/game/ClientboundTakeItemEntityPacket rr
	amount c
	itemId a
	playerId b
	getAmount ()I d
	getItemId ()I b
	getPlayerId ()I c
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	read (Lnet/minecraft/network/FriendlyByteBuf;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V b
net/minecraft/network/protocol/game/ClientboundTeleportEntityPacket rs
	id a
	onGround g
	x b
	xRot f
	y c
	yRot e
	z d
	getId ()I b
	getX ()D c
	getY ()D d
	getZ ()D e
	getxRot ()B g
	getyRot ()B f
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	isOnGround ()Z h
	read (Lnet/minecraft/network/FriendlyByteBuf;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V b
net/minecraft/network/protocol/game/ClientboundUpdateAdvancementsPacket rt
	added b
	progress d
	removed c
	reset a
	getAdded ()Ljava/util/Map; b
	getProgress ()Ljava/util/Map; d
	getRemoved ()Ljava/util/Set; c
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	read (Lnet/minecraft/network/FriendlyByteBuf;)V a
	shouldReset ()Z e
	write (Lnet/minecraft/network/FriendlyByteBuf;)V b
net/minecraft/network/protocol/game/ClientboundUpdateAttributesPacket ru
	attributes b
	entityId a
	getEntityId ()I b
	getValues ()Ljava/util/List; c
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	read (Lnet/minecraft/network/FriendlyByteBuf;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V b
net/minecraft/network/protocol/game/ClientboundUpdateAttributesPacket$AttributeSnapshot ru$a
	attribute b
	base c
	modifiers d
	getAttribute ()Lnet/minecraft/world/entity/ai/attributes/Attribute; a
	getBase ()D b
	getModifiers ()Ljava/util/Collection; c
net/minecraft/network/protocol/game/ClientboundUpdateMobEffectPacket rv
	effectAmplifier c
	effectDurationTicks d
	effectId b
	entityId a
	flags e
	effectShowsIcon ()Z i
	getEffectAmplifier ()B e
	getEffectDurationTicks ()I f
	getEffectId ()B d
	getEntityId ()I c
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	isEffectAmbient ()Z h
	isEffectVisible ()Z g
	isSuperLongDuration ()Z b
	read (Lnet/minecraft/network/FriendlyByteBuf;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V b
net/minecraft/network/protocol/game/ClientboundUpdateRecipesPacket rw
	recipes a
	fromNetwork (Lnet/minecraft/network/FriendlyByteBuf;)Lnet/minecraft/world/item/crafting/Recipe; c
	getRecipes ()Ljava/util/List; b
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	read (Lnet/minecraft/network/FriendlyByteBuf;)V a
	toNetwork (Lnet/minecraft/world/item/crafting/Recipe;Lnet/minecraft/network/FriendlyByteBuf;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V b
net/minecraft/network/protocol/game/ClientboundUpdateTagsPacket rx
	tags a
	getTags ()Lnet/minecraft/tags/TagContainer; b
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	read (Lnet/minecraft/network/FriendlyByteBuf;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V b
net/minecraft/network/protocol/game/DebugEntityNameGenerator ry
	NAMES_FIRST_PART a
	NAMES_SECOND_PART b
	getEntityName (Ljava/util/UUID;)Ljava/lang/String; a
	getEntityName (Lnet/minecraft/world/entity/Entity;)Ljava/lang/String; a
	getRandom (Ljava/util/UUID;)Ljava/util/Random; b
	getRandomString (Ljava/util/Random;[Ljava/lang/String;)Ljava/lang/String; a
net/minecraft/network/protocol/game/DebugPackets rz
	LOGGER a
	getMemoryDescriptions (Lnet/minecraft/world/entity/LivingEntity;J)Ljava/util/List; a
	getShortDescription (Lnet/minecraft/server/level/ServerLevel;Ljava/lang/Object;)Ljava/lang/String; a
	sendBeeInfo (Lnet/minecraft/world/entity/animal/Bee;)V a
	sendEntityBrain (Lnet/minecraft/world/entity/LivingEntity;)V a
	sendGameTestAddMarker (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Ljava/lang/String;II)V a
	sendGameTestClearPacket (Lnet/minecraft/server/level/ServerLevel;)V a
	sendGoalSelector (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/Mob;Lnet/minecraft/world/entity/ai/goal/GoalSelector;)V a
	sendHiveInfo (Lnet/minecraft/world/level/block/entity/BeehiveBlockEntity;)V a
	sendNeighborsUpdatePacket (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)V a
	sendPacketToAllPlayers (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/network/FriendlyByteBuf;Lnet/minecraft/resources/ResourceLocation;)V a
	sendPathFindingPacket (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/Mob;Lnet/minecraft/world/level/pathfinder/Path;F)V a
	sendPoiAddedPacket (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;)V a
	sendPoiPacketsForChunk (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/level/ChunkPos;)V a
	sendPoiRemovedPacket (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;)V b
	sendPoiTicketCountPacket (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;)V c
	sendRaids (Lnet/minecraft/server/level/ServerLevel;Ljava/util/Collection;)V a
	sendStructurePacket (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/levelgen/structure/StructureStart;)V a
	sendVillageSectionsPacket (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;)V d
	writeBrain (Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ServerGamePacketListener sa
	handleAcceptTeleportPacket (Lnet/minecraft/network/protocol/game/ServerboundAcceptTeleportationPacket;)V a
	handleAnimate (Lnet/minecraft/network/protocol/game/ServerboundSwingPacket;)V a
	handleBlockEntityTagQuery (Lnet/minecraft/network/protocol/game/ServerboundBlockEntityTagQuery;)V a
	handleChangeDifficulty (Lnet/minecraft/network/protocol/game/ServerboundChangeDifficultyPacket;)V a
	handleChat (Lnet/minecraft/network/protocol/game/ServerboundChatPacket;)V a
	handleClientCommand (Lnet/minecraft/network/protocol/game/ServerboundClientCommandPacket;)V a
	handleClientInformation (Lnet/minecraft/network/protocol/game/ServerboundClientInformationPacket;)V a
	handleContainerAck (Lnet/minecraft/network/protocol/game/ServerboundContainerAckPacket;)V a
	handleContainerButtonClick (Lnet/minecraft/network/protocol/game/ServerboundContainerButtonClickPacket;)V a
	handleContainerClick (Lnet/minecraft/network/protocol/game/ServerboundContainerClickPacket;)V a
	handleContainerClose (Lnet/minecraft/network/protocol/game/ServerboundContainerClosePacket;)V a
	handleCustomCommandSuggestions (Lnet/minecraft/network/protocol/game/ServerboundCommandSuggestionPacket;)V a
	handleCustomPayload (Lnet/minecraft/network/protocol/game/ServerboundCustomPayloadPacket;)V a
	handleEditBook (Lnet/minecraft/network/protocol/game/ServerboundEditBookPacket;)V a
	handleEntityTagQuery (Lnet/minecraft/network/protocol/game/ServerboundEntityTagQuery;)V a
	handleInteract (Lnet/minecraft/network/protocol/game/ServerboundInteractPacket;)V a
	handleJigsawGenerate (Lnet/minecraft/network/protocol/game/ServerboundJigsawGeneratePacket;)V a
	handleKeepAlive (Lnet/minecraft/network/protocol/game/ServerboundKeepAlivePacket;)V a
	handleLockDifficulty (Lnet/minecraft/network/protocol/game/ServerboundLockDifficultyPacket;)V a
	handleMovePlayer (Lnet/minecraft/network/protocol/game/ServerboundMovePlayerPacket;)V a
	handleMoveVehicle (Lnet/minecraft/network/protocol/game/ServerboundMoveVehiclePacket;)V a
	handlePaddleBoat (Lnet/minecraft/network/protocol/game/ServerboundPaddleBoatPacket;)V a
	handlePickItem (Lnet/minecraft/network/protocol/game/ServerboundPickItemPacket;)V a
	handlePlaceRecipe (Lnet/minecraft/network/protocol/game/ServerboundPlaceRecipePacket;)V a
	handlePlayerAbilities (Lnet/minecraft/network/protocol/game/ServerboundPlayerAbilitiesPacket;)V a
	handlePlayerAction (Lnet/minecraft/network/protocol/game/ServerboundPlayerActionPacket;)V a
	handlePlayerCommand (Lnet/minecraft/network/protocol/game/ServerboundPlayerCommandPacket;)V a
	handlePlayerInput (Lnet/minecraft/network/protocol/game/ServerboundPlayerInputPacket;)V a
	handleRecipeBookChangeSettingsPacket (Lnet/minecraft/network/protocol/game/ServerboundRecipeBookChangeSettingsPacket;)V a
	handleRecipeBookSeenRecipePacket (Lnet/minecraft/network/protocol/game/ServerboundRecipeBookSeenRecipePacket;)V a
	handleRenameItem (Lnet/minecraft/network/protocol/game/ServerboundRenameItemPacket;)V a
	handleResourcePackResponse (Lnet/minecraft/network/protocol/game/ServerboundResourcePackPacket;)V a
	handleSeenAdvancements (Lnet/minecraft/network/protocol/game/ServerboundSeenAdvancementsPacket;)V a
	handleSelectTrade (Lnet/minecraft/network/protocol/game/ServerboundSelectTradePacket;)V a
	handleSetBeaconPacket (Lnet/minecraft/network/protocol/game/ServerboundSetBeaconPacket;)V a
	handleSetCarriedItem (Lnet/minecraft/network/protocol/game/ServerboundSetCarriedItemPacket;)V a
	handleSetCommandBlock (Lnet/minecraft/network/protocol/game/ServerboundSetCommandBlockPacket;)V a
	handleSetCommandMinecart (Lnet/minecraft/network/protocol/game/ServerboundSetCommandMinecartPacket;)V a
	handleSetCreativeModeSlot (Lnet/minecraft/network/protocol/game/ServerboundSetCreativeModeSlotPacket;)V a
	handleSetJigsawBlock (Lnet/minecraft/network/protocol/game/ServerboundSetJigsawBlockPacket;)V a
	handleSetStructureBlock (Lnet/minecraft/network/protocol/game/ServerboundSetStructureBlockPacket;)V a
	handleSignUpdate (Lnet/minecraft/network/protocol/game/ServerboundSignUpdatePacket;)V a
	handleTeleportToEntityPacket (Lnet/minecraft/network/protocol/game/ServerboundTeleportToEntityPacket;)V a
	handleUseItem (Lnet/minecraft/network/protocol/game/ServerboundUseItemPacket;)V a
	handleUseItemOn (Lnet/minecraft/network/protocol/game/ServerboundUseItemOnPacket;)V a
net/minecraft/network/protocol/game/ServerboundAcceptTeleportationPacket sb
	id a
	getId ()I b
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ServerGamePacketListener;)V a
	read (Lnet/minecraft/network/FriendlyByteBuf;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V b
net/minecraft/network/protocol/game/ServerboundBlockEntityTagQuery sc
	pos b
	transactionId a
	getPos ()Lnet/minecraft/core/BlockPos; c
	getTransactionId ()I b
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ServerGamePacketListener;)V a
	read (Lnet/minecraft/network/FriendlyByteBuf;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V b
net/minecraft/network/protocol/game/ServerboundChangeDifficultyPacket sd
	difficulty a
	getDifficulty ()Lnet/minecraft/world/Difficulty; b
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ServerGamePacketListener;)V a
	read (Lnet/minecraft/network/FriendlyByteBuf;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V b
net/minecraft/network/protocol/game/ServerboundChatPacket se
	message a
	getMessage ()Ljava/lang/String; b
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ServerGamePacketListener;)V a
	read (Lnet/minecraft/network/FriendlyByteBuf;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V b
net/minecraft/network/protocol/game/ServerboundClientCommandPacket sf
	action a
	getAction ()Lnet/minecraft/network/protocol/game/ServerboundClientCommandPacket$Action; b
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ServerGamePacketListener;)V a
	read (Lnet/minecraft/network/FriendlyByteBuf;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V b
net/minecraft/network/protocol/game/ServerboundClientCommandPacket$Action sf$a
	$VALUES c
	PERFORM_RESPAWN a
	REQUEST_STATS b
net/minecraft/network/protocol/game/ServerboundClientInformationPacket sg
	chatColors d
	chatVisibility c
	language a
	mainHand f
	modelCustomisation e
	viewDistance b
	getChatColors ()Z e
	getChatVisibility ()Lnet/minecraft/world/entity/player/ChatVisiblity; d
	getLanguage ()Ljava/lang/String; b
	getMainHand ()Lnet/minecraft/world/entity/HumanoidArm; g
	getModelCustomisation ()I f
	getViewDistance ()I c
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ServerGamePacketListener;)V a
	read (Lnet/minecraft/network/FriendlyByteBuf;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V b
net/minecraft/network/protocol/game/ServerboundCommandSuggestionPacket sh
	command b
	id a
	getCommand ()Ljava/lang/String; c
	getId ()I b
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ServerGamePacketListener;)V a
	read (Lnet/minecraft/network/FriendlyByteBuf;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V b
net/minecraft/network/protocol/game/ServerboundContainerAckPacket si
	accepted c
	containerId a
	uid b
	getContainerId ()I b
	getUid ()S c
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ServerGamePacketListener;)V a
	isAccepted ()Z d
	read (Lnet/minecraft/network/FriendlyByteBuf;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V b
net/minecraft/network/protocol/game/ServerboundContainerButtonClickPacket sj
	buttonId b
	containerId a
	getButtonId ()I c
	getContainerId ()I b
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ServerGamePacketListener;)V a
	read (Lnet/minecraft/network/FriendlyByteBuf;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V b
net/minecraft/network/protocol/game/ServerboundContainerClickPacket sk
	buttonNum c
	clickType f
	containerId a
	itemStack e
	slotNum b
	uid d
	getButtonNum ()I d
	getClickType ()Lnet/minecraft/world/inventory/ClickType; g
	getContainerId ()I b
	getItem ()Lnet/minecraft/world/item/ItemStack; f
	getSlotNum ()I c
	getUid ()S e
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ServerGamePacketListener;)V a
	read (Lnet/minecraft/network/FriendlyByteBuf;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V b
net/minecraft/network/protocol/game/ServerboundContainerClosePacket sl
	containerId a
	getContainerId ()I b
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ServerGamePacketListener;)V a
	read (Lnet/minecraft/network/FriendlyByteBuf;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V b
net/minecraft/network/protocol/game/ServerboundCustomPayloadPacket sm
	BRAND a
	data c
	identifier b
	getData ()Lnet/minecraft/network/FriendlyByteBuf; c
	getIdentifier ()Lnet/minecraft/resources/ResourceLocation; b
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ServerGamePacketListener;)V a
	read (Lnet/minecraft/network/FriendlyByteBuf;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V b
net/minecraft/network/protocol/game/ServerboundEditBookPacket sn
	book a
	hand c
	signing b
	getBook ()Lnet/minecraft/world/item/ItemStack; b
	getHand ()Lnet/minecraft/world/InteractionHand; d
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ServerGamePacketListener;)V a
	isSigning ()Z c
	read (Lnet/minecraft/network/FriendlyByteBuf;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V b
net/minecraft/network/protocol/game/ServerboundEntityTagQuery so
	entityId b
	transactionId a
	getEntityId ()I c
	getTransactionId ()I b
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ServerGamePacketListener;)V a
	read (Lnet/minecraft/network/FriendlyByteBuf;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V b
net/minecraft/network/protocol/game/ServerboundInteractPacket sp
	action b
	entityId a
	hand d
	location c
	usingSecondaryAction e
	getAction ()Lnet/minecraft/network/protocol/game/ServerboundInteractPacket$Action; b
	getHand ()Lnet/minecraft/world/InteractionHand; c
	getLocation ()Lnet/minecraft/world/phys/Vec3; d
	getTarget (Lnet/minecraft/world/level/Level;)Lnet/minecraft/world/entity/Entity; a
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ServerGamePacketListener;)V a
	isUsingSecondaryAction ()Z e
	read (Lnet/minecraft/network/FriendlyByteBuf;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V b
net/minecraft/network/protocol/game/ServerboundInteractPacket$Action sp$a
	$VALUES d
	ATTACK b
	INTERACT a
	INTERACT_AT c
net/minecraft/network/protocol/game/ServerboundJigsawGeneratePacket sq
	keepJigsaws c
	levels b
	pos a
	getPos ()Lnet/minecraft/core/BlockPos; b
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ServerGamePacketListener;)V a
	keepJigsaws ()Z d
	levels ()I c
	read (Lnet/minecraft/network/FriendlyByteBuf;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V b
net/minecraft/network/protocol/game/ServerboundKeepAlivePacket sr
	id a
	getId ()J b
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ServerGamePacketListener;)V a
	read (Lnet/minecraft/network/FriendlyByteBuf;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V b
net/minecraft/network/protocol/game/ServerboundLockDifficultyPacket ss
	locked a
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ServerGamePacketListener;)V a
	isLocked ()Z b
	read (Lnet/minecraft/network/FriendlyByteBuf;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V b
net/minecraft/network/protocol/game/ServerboundMovePlayerPacket st
	hasPos g
	hasRot h
	onGround f
	x a
	xRot e
	y b
	yRot d
	z c
	getX (D)D a
	getXRot (F)F b
	getY (D)D b
	getYRot (F)F a
	getZ (D)D c
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ServerGamePacketListener;)V a
	hasPosition ()Z c
	hasRotation ()Z d
	isOnGround ()Z b
	read (Lnet/minecraft/network/FriendlyByteBuf;)V a
	setHasPosition (Z)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V b
net/minecraft/network/protocol/game/ServerboundMovePlayerPacket$Pos st$a
	handle (Lnet/minecraft/network/PacketListener;)V a
	read (Lnet/minecraft/network/FriendlyByteBuf;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V b
net/minecraft/network/protocol/game/ServerboundMovePlayerPacket$PosRot st$b
	handle (Lnet/minecraft/network/PacketListener;)V a
	read (Lnet/minecraft/network/FriendlyByteBuf;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V b
net/minecraft/network/protocol/game/ServerboundMovePlayerPacket$Rot st$c
	handle (Lnet/minecraft/network/PacketListener;)V a
	read (Lnet/minecraft/network/FriendlyByteBuf;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V b
net/minecraft/network/protocol/game/ServerboundMoveVehiclePacket su
	x a
	xRot e
	y b
	yRot d
	z c
	getX ()D b
	getXRot ()F f
	getY ()D c
	getYRot ()F e
	getZ ()D d
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ServerGamePacketListener;)V a
	read (Lnet/minecraft/network/FriendlyByteBuf;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V b
net/minecraft/network/protocol/game/ServerboundPaddleBoatPacket sv
	left a
	right b
	getLeft ()Z b
	getRight ()Z c
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ServerGamePacketListener;)V a
	read (Lnet/minecraft/network/FriendlyByteBuf;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V b
net/minecraft/network/protocol/game/ServerboundPickItemPacket sw
	slot a
	getSlot ()I b
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ServerGamePacketListener;)V a
	read (Lnet/minecraft/network/FriendlyByteBuf;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V b
net/minecraft/network/protocol/game/ServerboundPlaceRecipePacket sx
	containerId a
	recipe b
	shiftDown c
	getContainerId ()I b
	getRecipe ()Lnet/minecraft/resources/ResourceLocation; c
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ServerGamePacketListener;)V a
	isShiftDown ()Z d
	read (Lnet/minecraft/network/FriendlyByteBuf;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V b
net/minecraft/network/protocol/game/ServerboundPlayerAbilitiesPacket sy
	isFlying a
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ServerGamePacketListener;)V a
	isFlying ()Z b
	read (Lnet/minecraft/network/FriendlyByteBuf;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V b
net/minecraft/network/protocol/game/ServerboundPlayerActionPacket sz
	action c
	direction b
	pos a
	getAction ()Lnet/minecraft/network/protocol/game/ServerboundPlayerActionPacket$Action; d
	getDirection ()Lnet/minecraft/core/Direction; c
	getPos ()Lnet/minecraft/core/BlockPos; b
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ServerGamePacketListener;)V a
	read (Lnet/minecraft/network/FriendlyByteBuf;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V b
net/minecraft/network/protocol/game/ServerboundPlayerActionPacket$Action sz$a
	$VALUES h
	ABORT_DESTROY_BLOCK b
	DROP_ALL_ITEMS d
	DROP_ITEM e
	RELEASE_USE_ITEM f
	START_DESTROY_BLOCK a
	STOP_DESTROY_BLOCK c
	SWAP_ITEM_WITH_OFFHAND g
net/minecraft/network/protocol/game/ServerboundPlayerCommandPacket ta
	action b
	data c
	id a
	getAction ()Lnet/minecraft/network/protocol/game/ServerboundPlayerCommandPacket$Action; c
	getData ()I d
	getId ()I b
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ServerGamePacketListener;)V a
	read (Lnet/minecraft/network/FriendlyByteBuf;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V b
net/minecraft/network/protocol/game/ServerboundPlayerCommandPacket$Action ta$a
	$VALUES j
	OPEN_INVENTORY h
	PRESS_SHIFT_KEY a
	RELEASE_SHIFT_KEY b
	START_FALL_FLYING i
	START_RIDING_JUMP f
	START_SPRINTING d
	STOP_RIDING_JUMP g
	STOP_SLEEPING c
	STOP_SPRINTING e
net/minecraft/network/protocol/game/ServerboundPlayerInputPacket tb
	isJumping c
	isShiftKeyDown d
	xxa a
	zza b
	getXxa ()F b
	getZza ()F c
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ServerGamePacketListener;)V a
	isJumping ()Z d
	isShiftKeyDown ()Z e
	read (Lnet/minecraft/network/FriendlyByteBuf;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V b
net/minecraft/network/protocol/game/ServerboundRecipeBookChangeSettingsPacket tc
	bookType a
	isFiltering c
	isOpen b
	getBookType ()Lnet/minecraft/world/inventory/RecipeBookType; b
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ServerGamePacketListener;)V a
	isFiltering ()Z d
	isOpen ()Z c
	read (Lnet/minecraft/network/FriendlyByteBuf;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V b
net/minecraft/network/protocol/game/ServerboundRecipeBookSeenRecipePacket td
	recipe a
	getRecipe ()Lnet/minecraft/resources/ResourceLocation; b
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ServerGamePacketListener;)V a
	read (Lnet/minecraft/network/FriendlyByteBuf;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V b
net/minecraft/network/protocol/game/ServerboundRenameItemPacket te
	name a
	getName ()Ljava/lang/String; b
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ServerGamePacketListener;)V a
	read (Lnet/minecraft/network/FriendlyByteBuf;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V b
net/minecraft/network/protocol/game/ServerboundResourcePackPacket tf
	action a
	getAction ()Lnet/minecraft/network/protocol/game/ServerboundResourcePackPacket$Action; b
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ServerGamePacketListener;)V a
	read (Lnet/minecraft/network/FriendlyByteBuf;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V b
net/minecraft/network/protocol/game/ServerboundResourcePackPacket$Action tf$a
	$VALUES e
	ACCEPTED d
	DECLINED b
	FAILED_DOWNLOAD c
	SUCCESSFULLY_LOADED a
net/minecraft/network/protocol/game/ServerboundSeenAdvancementsPacket tg
	action a
	tab b
	closedScreen ()Lnet/minecraft/network/protocol/game/ServerboundSeenAdvancementsPacket; b
	getAction ()Lnet/minecraft/network/protocol/game/ServerboundSeenAdvancementsPacket$Action; c
	getTab ()Lnet/minecraft/resources/ResourceLocation; d
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ServerGamePacketListener;)V a
	openedTab (Lnet/minecraft/advancements/Advancement;)Lnet/minecraft/network/protocol/game/ServerboundSeenAdvancementsPacket; a
	read (Lnet/minecraft/network/FriendlyByteBuf;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V b
net/minecraft/network/protocol/game/ServerboundSeenAdvancementsPacket$Action tg$a
	$VALUES c
	CLOSED_SCREEN b
	OPENED_TAB a
net/minecraft/network/protocol/game/ServerboundSelectTradePacket th
	item a
	getItem ()I b
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ServerGamePacketListener;)V a
	read (Lnet/minecraft/network/FriendlyByteBuf;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V b
net/minecraft/network/protocol/game/ServerboundSetBeaconPacket ti
	primary a
	secondary b
	getPrimary ()I b
	getSecondary ()I c
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ServerGamePacketListener;)V a
	read (Lnet/minecraft/network/FriendlyByteBuf;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V b
net/minecraft/network/protocol/game/ServerboundSetCarriedItemPacket tj
	slot a
	getSlot ()I b
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ServerGamePacketListener;)V a
	read (Lnet/minecraft/network/FriendlyByteBuf;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V b
net/minecraft/network/protocol/game/ServerboundSetCommandBlockPacket tk
	automatic e
	command b
	conditional d
	mode f
	pos a
	trackOutput c
	getCommand ()Ljava/lang/String; c
	getMode ()Lnet/minecraft/world/level/block/entity/CommandBlockEntity$Mode; g
	getPos ()Lnet/minecraft/core/BlockPos; b
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ServerGamePacketListener;)V a
	isAutomatic ()Z f
	isConditional ()Z e
	isTrackOutput ()Z d
	read (Lnet/minecraft/network/FriendlyByteBuf;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V b
net/minecraft/network/protocol/game/ServerboundSetCommandMinecartPacket tl
	command b
	entity a
	trackOutput c
	getCommand ()Ljava/lang/String; b
	getCommandBlock (Lnet/minecraft/world/level/Level;)Lnet/minecraft/world/level/BaseCommandBlock; a
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ServerGamePacketListener;)V a
	isTrackOutput ()Z c
	read (Lnet/minecraft/network/FriendlyByteBuf;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V b
net/minecraft/network/protocol/game/ServerboundSetCreativeModeSlotPacket tm
	itemStack b
	slotNum a
	getItem ()Lnet/minecraft/world/item/ItemStack; c
	getSlotNum ()I b
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ServerGamePacketListener;)V a
	read (Lnet/minecraft/network/FriendlyByteBuf;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V b
net/minecraft/network/protocol/game/ServerboundSetJigsawBlockPacket tn
	finalState e
	joint f
	name b
	pool d
	pos a
	target c
	getFinalState ()Ljava/lang/String; f
	getJoint ()Lnet/minecraft/world/level/block/entity/JigsawBlockEntity$JointType; g
	getName ()Lnet/minecraft/resources/ResourceLocation; c
	getPool ()Lnet/minecraft/resources/ResourceLocation; e
	getPos ()Lnet/minecraft/core/BlockPos; b
	getTarget ()Lnet/minecraft/resources/ResourceLocation; d
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ServerGamePacketListener;)V a
	read (Lnet/minecraft/network/FriendlyByteBuf;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V b
net/minecraft/network/protocol/game/ServerboundSetStructureBlockPacket to
	data i
	ignoreEntities j
	integrity m
	mirror g
	mode c
	name d
	offset e
	pos a
	rotation h
	seed n
	showAir k
	showBoundingBox l
	size f
	updateType b
	getData ()Ljava/lang/String; j
	getIntegrity ()F n
	getMirror ()Lnet/minecraft/world/level/block/Mirror; h
	getMode ()Lnet/minecraft/world/level/block/state/properties/StructureMode; d
	getName ()Ljava/lang/String; e
	getOffset ()Lnet/minecraft/core/BlockPos; f
	getPos ()Lnet/minecraft/core/BlockPos; b
	getRotation ()Lnet/minecraft/world/level/block/Rotation; i
	getSeed ()J o
	getSize ()Lnet/minecraft/core/BlockPos; g
	getUpdateType ()Lnet/minecraft/world/level/block/entity/StructureBlockEntity$UpdateType; c
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ServerGamePacketListener;)V a
	isIgnoreEntities ()Z k
	isShowAir ()Z l
	isShowBoundingBox ()Z m
	read (Lnet/minecraft/network/FriendlyByteBuf;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V b
net/minecraft/network/protocol/game/ServerboundSignUpdatePacket tp
	lines b
	pos a
	getLines ()[Ljava/lang/String; c
	getPos ()Lnet/minecraft/core/BlockPos; b
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ServerGamePacketListener;)V a
	read (Lnet/minecraft/network/FriendlyByteBuf;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V b
net/minecraft/network/protocol/game/ServerboundSwingPacket tq
	hand a
	getHand ()Lnet/minecraft/world/InteractionHand; b
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ServerGamePacketListener;)V a
	read (Lnet/minecraft/network/FriendlyByteBuf;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V b
net/minecraft/network/protocol/game/ServerboundTeleportToEntityPacket tr
	uuid a
	getEntity (Lnet/minecraft/server/level/ServerLevel;)Lnet/minecraft/world/entity/Entity; a
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ServerGamePacketListener;)V a
	read (Lnet/minecraft/network/FriendlyByteBuf;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V b
net/minecraft/network/protocol/game/ServerboundUseItemOnPacket ts
	blockHit a
	hand b
	getHand ()Lnet/minecraft/world/InteractionHand; b
	getHitResult ()Lnet/minecraft/world/phys/BlockHitResult; c
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ServerGamePacketListener;)V a
	read (Lnet/minecraft/network/FriendlyByteBuf;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V b
net/minecraft/network/protocol/game/ServerboundUseItemPacket tt
	hand a
	getHand ()Lnet/minecraft/world/InteractionHand; b
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ServerGamePacketListener;)V a
	read (Lnet/minecraft/network/FriendlyByteBuf;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V b
net/minecraft/network/protocol/handshake/ClientIntentionPacket tv
	hostName b
	intention d
	port c
	protocolVersion a
	getHostName ()Ljava/lang/String; d
	getIntention ()Lnet/minecraft/network/ConnectionProtocol; b
	getPort ()I e
	getProtocolVersion ()I c
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/handshake/ServerHandshakePacketListener;)V a
	read (Lnet/minecraft/network/FriendlyByteBuf;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V b
net/minecraft/network/protocol/handshake/ServerHandshakePacketListener tw
	handleIntention (Lnet/minecraft/network/protocol/handshake/ClientIntentionPacket;)V a
net/minecraft/network/protocol/login/ClientLoginPacketListener ty
	handleCompression (Lnet/minecraft/network/protocol/login/ClientboundLoginCompressionPacket;)V a
	handleCustomQuery (Lnet/minecraft/network/protocol/login/ClientboundCustomQueryPacket;)V a
	handleDisconnect (Lnet/minecraft/network/protocol/login/ClientboundLoginDisconnectPacket;)V a
	handleGameProfile (Lnet/minecraft/network/protocol/login/ClientboundGameProfilePacket;)V a
	handleHello (Lnet/minecraft/network/protocol/login/ClientboundHelloPacket;)V a
net/minecraft/network/protocol/login/ClientboundCustomQueryPacket tz
	data c
	identifier b
	transactionId a
	getData ()Lnet/minecraft/network/FriendlyByteBuf; d
	getIdentifier ()Lnet/minecraft/resources/ResourceLocation; c
	getTransactionId ()I b
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/login/ClientLoginPacketListener;)V a
	read (Lnet/minecraft/network/FriendlyByteBuf;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V b
net/minecraft/network/protocol/login/ClientboundGameProfilePacket ua
	gameProfile a
	getGameProfile ()Lcom/mojang/authlib/GameProfile; b
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/login/ClientLoginPacketListener;)V a
	read (Lnet/minecraft/network/FriendlyByteBuf;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V b
net/minecraft/network/protocol/login/ClientboundHelloPacket ub
	nonce c
	publicKey b
	serverId a
	getNonce ()[B d
	getPublicKey ()Ljava/security/PublicKey; c
	getServerId ()Ljava/lang/String; b
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/login/ClientLoginPacketListener;)V a
	read (Lnet/minecraft/network/FriendlyByteBuf;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V b
net/minecraft/network/protocol/login/ClientboundLoginCompressionPacket uc
	compressionThreshold a
	getCompressionThreshold ()I b
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/login/ClientLoginPacketListener;)V a
	read (Lnet/minecraft/network/FriendlyByteBuf;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V b
net/minecraft/network/protocol/login/ClientboundLoginDisconnectPacket ud
	reason a
	getReason ()Lnet/minecraft/network/chat/Component; b
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/login/ClientLoginPacketListener;)V a
	read (Lnet/minecraft/network/FriendlyByteBuf;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V b
net/minecraft/network/protocol/login/ServerLoginPacketListener ue
	handleCustomQueryPacket (Lnet/minecraft/network/protocol/login/ServerboundCustomQueryPacket;)V a
	handleHello (Lnet/minecraft/network/protocol/login/ServerboundHelloPacket;)V a
	handleKey (Lnet/minecraft/network/protocol/login/ServerboundKeyPacket;)V a
net/minecraft/network/protocol/login/ServerboundCustomQueryPacket uf
	data b
	transactionId a
	getData ()Lnet/minecraft/network/FriendlyByteBuf; c
	getTransactionId ()I b
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/login/ServerLoginPacketListener;)V a
	read (Lnet/minecraft/network/FriendlyByteBuf;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V b
net/minecraft/network/protocol/login/ServerboundHelloPacket ug
	gameProfile a
	getGameProfile ()Lcom/mojang/authlib/GameProfile; b
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/login/ServerLoginPacketListener;)V a
	read (Lnet/minecraft/network/FriendlyByteBuf;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V b
net/minecraft/network/protocol/login/ServerboundKeyPacket uh
	keybytes a
	nonce b
	getNonce (Ljava/security/PrivateKey;)[B b
	getSecretKey (Ljava/security/PrivateKey;)Ljavax/crypto/SecretKey; a
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/login/ServerLoginPacketListener;)V a
	read (Lnet/minecraft/network/FriendlyByteBuf;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V b
net/minecraft/network/protocol/status/ClientStatusPacketListener uk
	handlePongResponse (Lnet/minecraft/network/protocol/status/ClientboundPongResponsePacket;)V a
	handleStatusResponse (Lnet/minecraft/network/protocol/status/ClientboundStatusResponsePacket;)V a
net/minecraft/network/protocol/status/ClientboundPongResponsePacket ul
	time a
	getTime ()J b
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/status/ClientStatusPacketListener;)V a
	read (Lnet/minecraft/network/FriendlyByteBuf;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V b
net/minecraft/network/protocol/status/ClientboundStatusResponsePacket um
	GSON a
	status b
	getStatus ()Lnet/minecraft/network/protocol/status/ServerStatus; b
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/status/ClientStatusPacketListener;)V a
	read (Lnet/minecraft/network/FriendlyByteBuf;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V b
net/minecraft/network/protocol/status/ServerStatus un
	description a
	favicon d
	players b
	version c
	getDescription ()Lnet/minecraft/network/chat/Component; a
	getFavicon ()Ljava/lang/String; d
	getPlayers ()Lnet/minecraft/network/protocol/status/ServerStatus$Players; b
	getVersion ()Lnet/minecraft/network/protocol/status/ServerStatus$Version; c
	setDescription (Lnet/minecraft/network/chat/Component;)V a
	setFavicon (Ljava/lang/String;)V a
	setPlayers (Lnet/minecraft/network/protocol/status/ServerStatus$Players;)V a
	setVersion (Lnet/minecraft/network/protocol/status/ServerStatus$Version;)V a
net/minecraft/network/protocol/status/ServerStatus$Players un$a
	maxPlayers a
	numPlayers b
	sample c
	getMaxPlayers ()I a
	getNumPlayers ()I b
	getSample ()[Lcom/mojang/authlib/GameProfile; c
	setSample ([Lcom/mojang/authlib/GameProfile;)V a
net/minecraft/network/protocol/status/ServerStatus$Players$Serializer un$a$a
	deserialize (Lcom/google/gson/JsonElement;Ljava/lang/reflect/Type;Lcom/google/gson/JsonDeserializationContext;)Lnet/minecraft/network/protocol/status/ServerStatus$Players; a
	serialize (Lnet/minecraft/network/protocol/status/ServerStatus$Players;Ljava/lang/reflect/Type;Lcom/google/gson/JsonSerializationContext;)Lcom/google/gson/JsonElement; a
net/minecraft/network/protocol/status/ServerStatus$Serializer un$b
	deserialize (Lcom/google/gson/JsonElement;Ljava/lang/reflect/Type;Lcom/google/gson/JsonDeserializationContext;)Lnet/minecraft/network/protocol/status/ServerStatus; a
	serialize (Lnet/minecraft/network/protocol/status/ServerStatus;Ljava/lang/reflect/Type;Lcom/google/gson/JsonSerializationContext;)Lcom/google/gson/JsonElement; a
net/minecraft/network/protocol/status/ServerStatus$Version un$c
	name a
	protocol b
	getName ()Ljava/lang/String; a
	getProtocol ()I b
net/minecraft/network/protocol/status/ServerStatus$Version$Serializer un$c$a
	deserialize (Lcom/google/gson/JsonElement;Ljava/lang/reflect/Type;Lcom/google/gson/JsonDeserializationContext;)Lnet/minecraft/network/protocol/status/ServerStatus$Version; a
	serialize (Lnet/minecraft/network/protocol/status/ServerStatus$Version;Ljava/lang/reflect/Type;Lcom/google/gson/JsonSerializationContext;)Lcom/google/gson/JsonElement; a
net/minecraft/network/protocol/status/ServerStatusPacketListener uo
	handlePingRequest (Lnet/minecraft/network/protocol/status/ServerboundPingRequestPacket;)V a
	handleStatusRequest (Lnet/minecraft/network/protocol/status/ServerboundStatusRequestPacket;)V a
net/minecraft/network/protocol/status/ServerboundPingRequestPacket up
	time a
	getTime ()J b
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/status/ServerStatusPacketListener;)V a
	read (Lnet/minecraft/network/FriendlyByteBuf;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V b
net/minecraft/network/protocol/status/ServerboundStatusRequestPacket uq
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/status/ServerStatusPacketListener;)V a
	read (Lnet/minecraft/network/FriendlyByteBuf;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V b
net/minecraft/network/syncher/EntityDataAccessor us
	id a
	serializer b
	getId ()I a
	getSerializer ()Lnet/minecraft/network/syncher/EntityDataSerializer; b
net/minecraft/network/syncher/EntityDataSerializer ut
	copy (Ljava/lang/Object;)Ljava/lang/Object; a
	createAccessor (I)Lnet/minecraft/network/syncher/EntityDataAccessor; a
	read (Lnet/minecraft/network/FriendlyByteBuf;)Ljava/lang/Object; a
	write (Lnet/minecraft/network/FriendlyByteBuf;Ljava/lang/Object;)V a
net/minecraft/network/syncher/EntityDataSerializers uu
	BLOCK_POS l
	BLOCK_STATE h
	BOOLEAN i
	BYTE a
	COMPONENT e
	COMPOUND_TAG p
	DIRECTION n
	FLOAT c
	INT b
	ITEM_STACK g
	OPTIONAL_BLOCK_POS m
	OPTIONAL_COMPONENT f
	OPTIONAL_UNSIGNED_INT r
	OPTIONAL_UUID o
	PARTICLE j
	POSE s
	ROTATIONS k
	SERIALIZERS t
	STRING d
	VILLAGER_DATA q
	getSerializedId (Lnet/minecraft/network/syncher/EntityDataSerializer;)I b
	getSerializer (I)Lnet/minecraft/network/syncher/EntityDataSerializer; a
	registerSerializer (Lnet/minecraft/network/syncher/EntityDataSerializer;)V a
net/minecraft/network/syncher/SynchedEntityData uv
	ENTITY_ID_POOL b
	LOGGER a
	entity c
	isDirty g
	isEmpty f
	itemsById d
	lock e
	assignValue (Lnet/minecraft/network/syncher/SynchedEntityData$DataItem;Lnet/minecraft/network/syncher/SynchedEntityData$DataItem;)V a
	assignValues (Ljava/util/List;)V a
	clearDirty ()V e
	createDataItem (Lnet/minecraft/network/syncher/EntityDataAccessor;Ljava/lang/Object;)V c
	define (Lnet/minecraft/network/syncher/EntityDataAccessor;Ljava/lang/Object;)V a
	defineId (Ljava/lang/Class;Lnet/minecraft/network/syncher/EntityDataSerializer;)Lnet/minecraft/network/syncher/EntityDataAccessor; a
	genericHelper (Lnet/minecraft/network/FriendlyByteBuf;ILnet/minecraft/network/syncher/EntityDataSerializer;)Lnet/minecraft/network/syncher/SynchedEntityData$DataItem; a
	get (Lnet/minecraft/network/syncher/EntityDataAccessor;)Ljava/lang/Object; a
	getAll ()Ljava/util/List; c
	getItem (Lnet/minecraft/network/syncher/EntityDataAccessor;)Lnet/minecraft/network/syncher/SynchedEntityData$DataItem; b
	isDirty ()Z a
	isEmpty ()Z d
	pack (Ljava/util/List;Lnet/minecraft/network/FriendlyByteBuf;)V a
	packDirty ()Ljava/util/List; b
	set (Lnet/minecraft/network/syncher/EntityDataAccessor;Ljava/lang/Object;)V b
	unpack (Lnet/minecraft/network/FriendlyByteBuf;)Ljava/util/List; a
	writeDataItem (Lnet/minecraft/network/FriendlyByteBuf;Lnet/minecraft/network/syncher/SynchedEntityData$DataItem;)V a
net/minecraft/network/syncher/SynchedEntityData$DataItem uv$a
	accessor a
	dirty c
	value b
	copy ()Lnet/minecraft/network/syncher/SynchedEntityData$DataItem; d
	getAccessor ()Lnet/minecraft/network/syncher/EntityDataAccessor; a
	getValue ()Ljava/lang/Object; b
	isDirty ()Z c
	setDirty (Z)V a
	setValue (Ljava/lang/Object;)V a
net/minecraft/realms/DisconnectedRealmsScreen eoa
	message c
	parent p
	reason b
	textHeight q
	title a
	init ()V b
	onClose ()V au_
	render (Lcom/mojang/blaze3d/vertex/PoseStack;IIF)V a
net/minecraft/realms/NarrationHelper eob
	REPEATED_NARRATOR a
	fixNarrationNewlines (Ljava/lang/String;)Ljava/lang/String; c
	join (Ljava/lang/Iterable;)Ljava/lang/String; b
	now (Ljava/lang/Iterable;)V a
	now (Ljava/lang/String;)V a
	now ([Ljava/lang/String;)V a
	repeatedly (Ljava/lang/String;)V b
net/minecraft/realms/RealmsBridge eoc
	previousScreen a
	getNotificationScreen (Lnet/minecraft/client/gui/screens/Screen;)Lnet/minecraft/realms/RealmsScreen; b
	init ()V b
	switchToRealms (Lnet/minecraft/client/gui/screens/Screen;)V a
net/minecraft/realms/RealmsConnect eod
	LOGGER a
	aborted c
	connection d
	onlineScreen b
	abort ()V a
	connect (Ljava/lang/String;I)V a
	tick ()V b
net/minecraft/realms/RealmsLabel eoe
	color d
	text a
	x b
	y c
	getText ()Ljava/lang/String; a
	render (Lnet/minecraft/client/gui/screens/Screen;Lcom/mojang/blaze3d/vertex/PoseStack;)V a
net/minecraft/realms/RealmsObjectSelectionList eof
	addEntry (Lnet/minecraft/client/gui/components/AbstractSelectionList$Entry;)I b
	addEntry (Lnet/minecraft/client/gui/components/ObjectSelectionList$Entry;)I a
	clear ()V a
	getItemCount ()I l
	getMaxPosition ()I c
	getRowLeft ()I p
	getRowTop (I)I h
	getRowWidth ()I d
	getScrollbarPosition ()I e
	itemClicked (IIDDI)V a
	replaceEntries (Ljava/util/Collection;)V a
	selectItem (I)V a
	setSelectedItem (I)V j
net/minecraft/realms/RealmsScreen eog
	narrateLabels ()V A
	row (I)I j
	tick ()V d
net/minecraft/realms/RealmsServerAddress eoh
	host a
	port b
	getHost ()Ljava/lang/String; a
	getPort ()I b
	parseString (Ljava/lang/String;)Lnet/minecraft/realms/RealmsServerAddress; a
net/minecraft/realms/RepeatedNarrator eoi
	params b
	permitsPerSecond a
	narrate (Ljava/lang/String;)V a
net/minecraft/realms/RepeatedNarrator$Params eoi$a
	narration a
	rateLimiter b
net/minecraft/recipebook/PlaceRecipe uz
	addItemToSlot (Ljava/util/Iterator;IIII)V a
	placeRecipe (IIILnet/minecraft/world/item/crafting/Recipe;Ljava/util/Iterator;I)V a
net/minecraft/recipebook/ServerPlaceRecipe va
	LOGGER a
	inventory c
	menu d
	stackedContents b
	addItemToSlot (Ljava/util/Iterator;IIII)V a
	clearGrid ()V a
	getAmountOfFreeSlotsInInventory ()I c
	getStackSize (ZIZ)I a
	handleRecipeClicked (Lnet/minecraft/world/item/crafting/Recipe;Z)V a
	moveItemToGrid (Lnet/minecraft/world/inventory/Slot;Lnet/minecraft/world/item/ItemStack;)V a
	moveItemToInventory (I)V a
	recipeClicked (Lnet/minecraft/server/level/ServerPlayer;Lnet/minecraft/world/item/crafting/Recipe;Z)V a
	testClearGrid ()Z b
net/minecraft/recipebook/ServerPlaceSmeltingRecipe vb
	recipeMatchesPlaced e
	clearGrid ()V a
	handleRecipeClicked (Lnet/minecraft/world/item/crafting/Recipe;Z)V a
	placeRecipe (ILit/unimi/dsi/fastutil/ints/IntList;)V a
net/minecraft/resources/DelegatingOps vd
	delegate a
net/minecraft/resources/RegistryDataPackCodec ve
	directCodec a
	elementCodec c
	registryKey b
	create (Lnet/minecraft/resources/ResourceKey;Lcom/mojang/serialization/Lifecycle;Lcom/mojang/serialization/Codec;)Lnet/minecraft/resources/RegistryDataPackCodec; a
	encode (Lnet/minecraft/core/MappedRegistry;Lcom/mojang/serialization/DynamicOps;Ljava/lang/Object;)Lcom/mojang/serialization/DataResult; a
net/minecraft/resources/RegistryFileCodec vf
	allowInline c
	elementCodec b
	registryKey a
	create (Lnet/minecraft/resources/ResourceKey;Lcom/mojang/serialization/Codec;)Lnet/minecraft/resources/RegistryFileCodec; a
	create (Lnet/minecraft/resources/ResourceKey;Lcom/mojang/serialization/Codec;Z)Lnet/minecraft/resources/RegistryFileCodec; a
	encode (Ljava/util/function/Supplier;Lcom/mojang/serialization/DynamicOps;Ljava/lang/Object;)Lcom/mojang/serialization/DataResult; a
	homogeneousList (Lnet/minecraft/resources/ResourceKey;Lcom/mojang/serialization/Codec;)Lcom/mojang/serialization/Codec; b
net/minecraft/resources/RegistryLookupCodec vg
	registryKey a
	create (Lnet/minecraft/resources/ResourceKey;)Lnet/minecraft/resources/RegistryLookupCodec; a
	encode (Lnet/minecraft/core/Registry;Lcom/mojang/serialization/DynamicOps;Lcom/mojang/serialization/RecordBuilder;)Lcom/mojang/serialization/RecordBuilder; a
net/minecraft/resources/RegistryReadOps vh
	LOGGER b
	jsonOps f
	readCache e
	registryHolder d
	resources c
	create (Lcom/mojang/serialization/DynamicOps;Lnet/minecraft/resources/RegistryReadOps$ResourceAccess;Lnet/minecraft/core/RegistryAccess$RegistryHolder;)Lnet/minecraft/resources/RegistryReadOps; a
	create (Lcom/mojang/serialization/DynamicOps;Lnet/minecraft/server/packs/resources/ResourceManager;Lnet/minecraft/core/RegistryAccess$RegistryHolder;)Lnet/minecraft/resources/RegistryReadOps; a
	decodeElement (Ljava/lang/Object;Lnet/minecraft/resources/ResourceKey;Lcom/mojang/serialization/Codec;Z)Lcom/mojang/serialization/DataResult; a
	decodeElements (Lnet/minecraft/core/MappedRegistry;Lnet/minecraft/resources/ResourceKey;Lcom/mojang/serialization/Codec;)Lcom/mojang/serialization/DataResult; a
	readAndRegisterElement (Lnet/minecraft/resources/ResourceKey;Lnet/minecraft/core/WritableRegistry;Lcom/mojang/serialization/Codec;Lnet/minecraft/resources/ResourceLocation;)Lcom/mojang/serialization/DataResult; a
	readCache (Lnet/minecraft/resources/ResourceKey;)Lnet/minecraft/resources/RegistryReadOps$ReadCache; b
	registry (Lnet/minecraft/resources/ResourceKey;)Lcom/mojang/serialization/DataResult; a
net/minecraft/resources/RegistryReadOps$ReadCache vh$a
	values a
net/minecraft/resources/RegistryReadOps$ResourceAccess vh$b
	forResourceManager (Lnet/minecraft/server/packs/resources/ResourceManager;)Lnet/minecraft/resources/RegistryReadOps$ResourceAccess; a
	listResources (Lnet/minecraft/resources/ResourceKey;)Ljava/util/Collection; a
	parseElement (Lcom/mojang/serialization/DynamicOps;Lnet/minecraft/resources/ResourceKey;Lnet/minecraft/resources/ResourceKey;Lcom/mojang/serialization/Decoder;)Lcom/mojang/serialization/DataResult; a
net/minecraft/resources/RegistryReadOps$ResourceAccess$MemoryMap vh$b$a
	data a
	ids b
	lifecycles c
	add (Lnet/minecraft/core/RegistryAccess$RegistryHolder;Lnet/minecraft/resources/ResourceKey;Lcom/mojang/serialization/Encoder;ILjava/lang/Object;Lcom/mojang/serialization/Lifecycle;)V a
	listResources (Lnet/minecraft/resources/ResourceKey;)Ljava/util/Collection; a
	parseElement (Lcom/mojang/serialization/DynamicOps;Lnet/minecraft/resources/ResourceKey;Lnet/minecraft/resources/ResourceKey;Lcom/mojang/serialization/Decoder;)Lcom/mojang/serialization/DataResult; a
net/minecraft/resources/RegistryWriteOps vi
	registryHolder b
	create (Lcom/mojang/serialization/DynamicOps;Lnet/minecraft/core/RegistryAccess;)Lnet/minecraft/resources/RegistryWriteOps; a
	encode (Ljava/lang/Object;Ljava/lang/Object;Lnet/minecraft/resources/ResourceKey;Lcom/mojang/serialization/Codec;)Lcom/mojang/serialization/DataResult; a
net/minecraft/resources/ResourceKey vj
	VALUES a
	location c
	registryName b
	create (Lnet/minecraft/resources/ResourceKey;Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/resources/ResourceKey; a
	create (Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/resources/ResourceKey; a
	createRegistryKey (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/resources/ResourceKey; a
	elementKey (Lnet/minecraft/resources/ResourceKey;)Ljava/util/function/Function; b
	isFor (Lnet/minecraft/resources/ResourceKey;)Z a
	location ()Lnet/minecraft/resources/ResourceLocation; a
net/minecraft/resources/ResourceLocation vk
	CODEC a
	ERROR_INVALID d
	namespace b
	path c
	compareTo (Lnet/minecraft/resources/ResourceLocation;)I a
	decompose (Ljava/lang/String;C)[Ljava/lang/String; b
	getNamespace ()Ljava/lang/String; b
	getPath ()Ljava/lang/String; a
	isAllowedInResourceLocation (C)Z a
	isValidNamespace (Ljava/lang/String;)Z e
	isValidPath (Ljava/lang/String;)Z d
	isValidResourceLocation (Ljava/lang/String;)Z b
	of (Ljava/lang/String;C)Lnet/minecraft/resources/ResourceLocation; a
	read (Lcom/mojang/brigadier/StringReader;)Lnet/minecraft/resources/ResourceLocation; a
	read (Ljava/lang/String;)Lcom/mojang/serialization/DataResult; c
	toDebugFileName ()Ljava/lang/String; c
	tryParse (Ljava/lang/String;)Lnet/minecraft/resources/ResourceLocation; a
	validNamespaceChar (C)Z c
	validPathChar (C)Z b
net/minecraft/resources/ResourceLocation$Serializer vk$a
	deserialize (Lcom/google/gson/JsonElement;Ljava/lang/reflect/Type;Lcom/google/gson/JsonDeserializationContext;)Lnet/minecraft/resources/ResourceLocation; a
	serialize (Lnet/minecraft/resources/ResourceLocation;Ljava/lang/reflect/Type;Lcom/google/gson/JsonSerializationContext;)Lcom/google/gson/JsonElement; a
net/minecraft/server/Bootstrap vm
	LOGGER c
	STDOUT a
	isBootstrapped b
	bootStrap ()V a
	checkGameruleTranslations (Ljava/util/Set;)V a
	checkTranslations (Ljava/lang/Iterable;Ljava/util/function/Function;Ljava/util/Set;)V a
	getMissingTranslations ()Ljava/util/Set; b
	realStdoutPrintln (Ljava/lang/String;)V a
	validate ()V c
	wrapStreams ()V d
net/minecraft/server/ChainedJsonException vn
	entries a
	message b
	forException (Ljava/lang/Exception;)Lnet/minecraft/server/ChainedJsonException; a
	prependJsonKey (Ljava/lang/String;)V a
	setFilenameAndFlush (Ljava/lang/String;)V b
net/minecraft/server/ChainedJsonException$Entry vn$a
	filename a
	jsonKeys b
	addJsonKey (Ljava/lang/String;)V a
	getFilename ()Ljava/lang/String; a
	getJsonKeys ()Ljava/lang/String; b
net/minecraft/server/ConsoleInput vo
	msg a
	source b
net/minecraft/server/ConsoleInputSource vp
	info (Ljava/lang/String;)V a
	warn (Ljava/lang/String;)V b
net/minecraft/server/DebugLoggedPrintStream vq
	logLine (Ljava/lang/String;)V a
net/minecraft/server/Eula vr
	LOGGER a
	agreed c
	file b
	hasAgreedToEULA ()Z a
	readFile ()Z b
	saveDefaults ()V c
net/minecraft/server/LoggedPrintStream vs
	LOGGER a
	name b
	logLine (Ljava/lang/String;)V a
net/minecraft/server/PlayerAdvancements vt
	GSON b
	LOGGER a
	TYPE_TOKEN c
	advancements g
	dataFixer d
	file f
	isFirstPacket m
	lastSelectedTab l
	player k
	playerList e
	progressChanged j
	visibilityChanged i
	visible h
	award (Lnet/minecraft/advancements/Advancement;Ljava/lang/String;)Z a
	checkForAutomaticTriggers (Lnet/minecraft/server/ServerAdvancementManager;)V c
	ensureAllVisible ()V c
	ensureVisibility (Lnet/minecraft/advancements/Advancement;)V e
	flushDirty (Lnet/minecraft/server/level/ServerPlayer;)V b
	getOrStartProgress (Lnet/minecraft/advancements/Advancement;)Lnet/minecraft/advancements/AdvancementProgress; b
	hasCompletedChildrenOrSelf (Lnet/minecraft/advancements/Advancement;)Z g
	load (Lnet/minecraft/server/ServerAdvancementManager;)V d
	registerListeners (Lnet/minecraft/advancements/Advancement;)V c
	registerListeners (Lnet/minecraft/server/ServerAdvancementManager;)V b
	reload (Lnet/minecraft/server/ServerAdvancementManager;)V a
	revoke (Lnet/minecraft/advancements/Advancement;Ljava/lang/String;)Z b
	save ()V b
	setPlayer (Lnet/minecraft/server/level/ServerPlayer;)V a
	setSelectedTab (Lnet/minecraft/advancements/Advancement;)V a
	shouldBeVisible (Lnet/minecraft/advancements/Advancement;)Z f
	startProgress (Lnet/minecraft/advancements/Advancement;Lnet/minecraft/advancements/AdvancementProgress;)V a
	stopListening ()V a
	unregisterListeners (Lnet/minecraft/advancements/Advancement;)V d
net/minecraft/server/RunningOnDifferentThreadException vu
	RUNNING_ON_DIFFERENT_THREAD a
net/minecraft/server/ServerAdvancementManager vv
	GSON b
	LOGGER a
	advancements c
	predicateManager d
	apply (Ljava/lang/Object;Lnet/minecraft/server/packs/resources/ResourceManager;Lnet/minecraft/util/profiling/ProfilerFiller;)V a
	apply (Ljava/util/Map;Lnet/minecraft/server/packs/resources/ResourceManager;Lnet/minecraft/util/profiling/ProfilerFiller;)V a
	getAdvancement (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/advancements/Advancement; a
	getAllAdvancements ()Ljava/util/Collection; a
net/minecraft/server/ServerFunctionLibrary vw
	LOGGER a
	PATH_PREFIX_LENGTH b
	PATH_SUFFIX_LENGTH c
	dispatcher h
	functionCompilationLevel g
	functions d
	tags f
	tagsLoader e
	getFunction (Lnet/minecraft/resources/ResourceLocation;)Ljava/util/Optional; a
	getFunctions ()Ljava/util/Map; a
	getTag (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/tags/Tag; b
	getTags ()Lnet/minecraft/tags/TagCollection; b
	readLines (Lnet/minecraft/server/packs/resources/ResourceManager;Lnet/minecraft/resources/ResourceLocation;)Ljava/util/List; a
	reload (Lnet/minecraft/server/packs/resources/PreparableReloadListener$PreparationBarrier;Lnet/minecraft/server/packs/resources/ResourceManager;Lnet/minecraft/util/profiling/ProfilerFiller;Lnet/minecraft/util/profiling/ProfilerFiller;Ljava/util/concurrent/Executor;Ljava/util/concurrent/Executor;)Ljava/util/concurrent/CompletableFuture; a
net/minecraft/server/ServerFunctionManager vx
	LOAD_FUNCTION_TAG b
	TICK_FUNCTION_TAG a
	commandQueue e
	isInFunction d
	library i
	nestedCalls f
	postReload h
	server c
	ticking g
	execute (Lnet/minecraft/commands/CommandFunction;Lnet/minecraft/commands/CommandSourceStack;)I a
	executeTagFunctions (Ljava/util/Collection;Lnet/minecraft/resources/ResourceLocation;)V a
	get (Lnet/minecraft/resources/ResourceLocation;)Ljava/util/Optional; a
	getCommandLimit ()I b
	getDispatcher ()Lcom/mojang/brigadier/CommandDispatcher; c
	getFunctionNames ()Ljava/lang/Iterable; f
	getGameLoopSender ()Lnet/minecraft/commands/CommandSourceStack; e
	getServer ()Lnet/minecraft/server/MinecraftServer; a
	getTag (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/tags/Tag; b
	getTagNames ()Ljava/lang/Iterable; g
	postReload (Lnet/minecraft/server/ServerFunctionLibrary;)V b
	replaceLibrary (Lnet/minecraft/server/ServerFunctionLibrary;)V a
	tick ()V d
net/minecraft/server/ServerFunctionManager$QueuedCommand vx$a
	entry c
	manager a
	sender b
	execute (Ljava/util/ArrayDeque;I)V a
net/minecraft/server/ServerInterface vy
	getLevelIdName ()Ljava/lang/String; k_
	getMaxPlayers ()I J
	getPlayerCount ()I I
	getPlayerNames ()[Ljava/lang/String; K
	getPluginNames ()Ljava/lang/String; j_
	getProperties ()Lnet/minecraft/server/dedicated/DedicatedServerProperties; g_
	getServerIp ()Ljava/lang/String; h_
	getServerName ()Ljava/lang/String; i_
	getServerPort ()I p
	getServerVersion ()Ljava/lang/String; H
	runCommand (Ljava/lang/String;)Ljava/lang/String; a
net/minecraft/server/ServerResources vz
	DATA_RELOAD_INITIAL_TASK a
	advancements h
	commands c
	functionLibrary i
	lootTables g
	predicateManager f
	recipes d
	resources b
	tagManager e
	getAdvancements ()Lnet/minecraft/server/ServerAdvancementManager; g
	getCommands ()Lnet/minecraft/commands/Commands; f
	getFunctionLibrary ()Lnet/minecraft/server/ServerFunctionLibrary; a
	getLootTables ()Lnet/minecraft/world/level/storage/loot/LootTables; c
	getPredicateManager ()Lnet/minecraft/world/level/storage/loot/PredicateManager; b
	getRecipeManager ()Lnet/minecraft/world/item/crafting/RecipeManager; e
	getResourceManager ()Lnet/minecraft/server/packs/resources/ResourceManager; h
	getTags ()Lnet/minecraft/tags/TagContainer; d
	loadResources (Ljava/util/List;Lnet/minecraft/commands/Commands$CommandSelection;ILjava/util/concurrent/Executor;Ljava/util/concurrent/Executor;)Ljava/util/concurrent/CompletableFuture; a
	updateGlobals ()V i
net/minecraft/server/ServerScoreboard wa
	dirtyListeners c
	server a
	trackedObjectives b
	addDirtyListener (Ljava/lang/Runnable;)V a
	addPlayerToTeam (Ljava/lang/String;Lnet/minecraft/world/scores/PlayerTeam;)Z a
	getObjectiveDisplaySlotCount (Lnet/minecraft/world/scores/Objective;)I h
	getServer ()Lnet/minecraft/server/MinecraftServer; a
	getStartTrackingPackets (Lnet/minecraft/world/scores/Objective;)Ljava/util/List; d
	getStopTrackingPackets (Lnet/minecraft/world/scores/Objective;)Ljava/util/List; f
	onObjectiveAdded (Lnet/minecraft/world/scores/Objective;)V a
	onObjectiveChanged (Lnet/minecraft/world/scores/Objective;)V b
	onObjectiveRemoved (Lnet/minecraft/world/scores/Objective;)V c
	onPlayerRemoved (Ljava/lang/String;)V a
	onPlayerScoreRemoved (Ljava/lang/String;Lnet/minecraft/world/scores/Objective;)V a
	onScoreChanged (Lnet/minecraft/world/scores/Score;)V a
	onTeamAdded (Lnet/minecraft/world/scores/PlayerTeam;)V a
	onTeamChanged (Lnet/minecraft/world/scores/PlayerTeam;)V b
	onTeamRemoved (Lnet/minecraft/world/scores/PlayerTeam;)V c
	removePlayerFromTeam (Ljava/lang/String;Lnet/minecraft/world/scores/PlayerTeam;)V b
	setDirty ()V b
	setDisplayObjective (ILnet/minecraft/world/scores/Objective;)V a
	startTrackingObjective (Lnet/minecraft/world/scores/Objective;)V e
	stopTrackingObjective (Lnet/minecraft/world/scores/Objective;)V g
net/minecraft/server/ServerScoreboard$Method wa$a
	$VALUES c
	CHANGE a
	REMOVE b
net/minecraft/server/TickTask wb
	runnable b
	tick a
	getTick ()I a
net/minecraft/server/bossevents/CustomBossEvent wc
	id h
	max k
	players i
	value j
	addOfflinePlayer (Ljava/util/UUID;)V a
	addPlayer (Lnet/minecraft/server/level/ServerPlayer;)V a
	getDisplayName ()Lnet/minecraft/network/chat/Component; e
	getMax ()I d
	getTextId ()Lnet/minecraft/resources/ResourceLocation; a
	getValue ()I c
	load (Lnet/minecraft/nbt/CompoundTag;Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/server/bossevents/CustomBossEvent; a
	onPlayerConnect (Lnet/minecraft/server/level/ServerPlayer;)V c
	onPlayerDisconnect (Lnet/minecraft/server/level/ServerPlayer;)V d
	removeAllPlayers ()V b
	removePlayer (Lnet/minecraft/server/level/ServerPlayer;)V b
	save ()Lnet/minecraft/nbt/CompoundTag; f
	setMax (I)V b
	setPlayers (Ljava/util/Collection;)Z a
	setValue (I)V a
net/minecraft/server/bossevents/CustomBossEvents wd
	events a
	create (Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/network/chat/Component;)Lnet/minecraft/server/bossevents/CustomBossEvent; a
	get (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/server/bossevents/CustomBossEvent; a
	getEvents ()Ljava/util/Collection; b
	getIds ()Ljava/util/Collection; a
	load (Lnet/minecraft/nbt/CompoundTag;)V a
	onPlayerConnect (Lnet/minecraft/server/level/ServerPlayer;)V a
	onPlayerDisconnect (Lnet/minecraft/server/level/ServerPlayer;)V b
	remove (Lnet/minecraft/server/bossevents/CustomBossEvent;)V a
	save ()Lnet/minecraft/nbt/CompoundTag; c
net/minecraft/server/commands/AdvancementCommands wf
	SUGGEST_ADVANCEMENTS a
	addChildren (Lnet/minecraft/advancements/Advancement;Ljava/util/List;)V a
	getAdvancements (Lnet/minecraft/advancements/Advancement;Lnet/minecraft/server/commands/AdvancementCommands$Mode;)Ljava/util/List; a
	perform (Lnet/minecraft/commands/CommandSourceStack;Ljava/util/Collection;Lnet/minecraft/server/commands/AdvancementCommands$Action;Ljava/util/Collection;)I a
	performCriterion (Lnet/minecraft/commands/CommandSourceStack;Ljava/util/Collection;Lnet/minecraft/server/commands/AdvancementCommands$Action;Lnet/minecraft/advancements/Advancement;Ljava/lang/String;)I a
	register (Lcom/mojang/brigadier/CommandDispatcher;)V a
net/minecraft/server/commands/AdvancementCommands$Action wf$a
	$VALUES d
	GRANT a
	REVOKE b
	key c
	getKey ()Ljava/lang/String; a
	perform (Lnet/minecraft/server/level/ServerPlayer;Ljava/lang/Iterable;)I a
	perform (Lnet/minecraft/server/level/ServerPlayer;Lnet/minecraft/advancements/Advancement;)Z a
	performCriterion (Lnet/minecraft/server/level/ServerPlayer;Lnet/minecraft/advancements/Advancement;Ljava/lang/String;)Z a
net/minecraft/server/commands/AdvancementCommands$Mode wf$b
	$VALUES h
	EVERYTHING e
	FROM c
	ONLY a
	THROUGH b
	UNTIL d
	children g
	parents f
net/minecraft/server/commands/AttributeCommand wg
	AVAILABLE_ATTRIBUTES a
	ERROR_MODIFIER_ALREADY_PRESENT e
	ERROR_NOT_LIVING_ENTITY b
	ERROR_NO_SUCH_ATTRIBUTE c
	ERROR_NO_SUCH_MODIFIER d
	addModifier (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/entity/ai/attributes/Attribute;Ljava/util/UUID;Ljava/lang/String;DLnet/minecraft/world/entity/ai/attributes/AttributeModifier$Operation;)I a
	getAttributeBase (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/entity/ai/attributes/Attribute;D)I b
	getAttributeInstance (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/entity/ai/attributes/Attribute;)Lnet/minecraft/world/entity/ai/attributes/AttributeInstance; a
	getAttributeModifier (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/entity/ai/attributes/Attribute;Ljava/util/UUID;D)I a
	getAttributeValue (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/entity/ai/attributes/Attribute;D)I a
	getEntityWithAttribute (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/entity/ai/attributes/Attribute;)Lnet/minecraft/world/entity/LivingEntity; b
	getLivingEntity (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/world/entity/LivingEntity; a
	register (Lcom/mojang/brigadier/CommandDispatcher;)V a
	removeModifier (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/entity/ai/attributes/Attribute;Ljava/util/UUID;)I a
	setAttributeBase (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/entity/ai/attributes/Attribute;D)I c
net/minecraft/server/commands/BanIpCommands wh
	ERROR_ALREADY_BANNED c
	ERROR_INVALID_IP b
	IP_ADDRESS_PATTERN a
	banIp (Lnet/minecraft/commands/CommandSourceStack;Ljava/lang/String;Lnet/minecraft/network/chat/Component;)I b
	banIpOrName (Lnet/minecraft/commands/CommandSourceStack;Ljava/lang/String;Lnet/minecraft/network/chat/Component;)I a
	register (Lcom/mojang/brigadier/CommandDispatcher;)V a
net/minecraft/server/commands/BanListCommands wi
	register (Lcom/mojang/brigadier/CommandDispatcher;)V a
	showList (Lnet/minecraft/commands/CommandSourceStack;Ljava/util/Collection;)I a
net/minecraft/server/commands/BanPlayerCommands wj
	ERROR_ALREADY_BANNED a
	banPlayers (Lnet/minecraft/commands/CommandSourceStack;Ljava/util/Collection;Lnet/minecraft/network/chat/Component;)I a
	register (Lcom/mojang/brigadier/CommandDispatcher;)V a
net/minecraft/server/commands/BossBarCommands wk
	ERROR_ALREADY_EXISTS b
	ERROR_ALREADY_HIDDEN j
	ERROR_ALREADY_VISIBLE k
	ERROR_DOESNT_EXIST c
	ERROR_NO_COLOR_CHANGE f
	ERROR_NO_MAX_CHANGE i
	ERROR_NO_NAME_CHANGE e
	ERROR_NO_PLAYER_CHANGE d
	ERROR_NO_STYLE_CHANGE g
	ERROR_NO_VALUE_CHANGE h
	SUGGEST_BOSS_BAR a
	createBar (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/network/chat/Component;)I a
	getBossBar (Lcom/mojang/brigadier/context/CommandContext;)Lnet/minecraft/server/bossevents/CustomBossEvent; a
	getMax (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/server/bossevents/CustomBossEvent;)I b
	getPlayers (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/server/bossevents/CustomBossEvent;)I d
	getValue (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/server/bossevents/CustomBossEvent;)I a
	getVisible (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/server/bossevents/CustomBossEvent;)I c
	listBars (Lnet/minecraft/commands/CommandSourceStack;)I a
	register (Lcom/mojang/brigadier/CommandDispatcher;)V a
	removeBar (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/server/bossevents/CustomBossEvent;)I e
	setColor (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/server/bossevents/CustomBossEvent;Lnet/minecraft/world/BossEvent$BossBarColor;)I a
	setMax (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/server/bossevents/CustomBossEvent;I)I b
	setName (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/server/bossevents/CustomBossEvent;Lnet/minecraft/network/chat/Component;)I a
	setPlayers (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/server/bossevents/CustomBossEvent;Ljava/util/Collection;)I a
	setStyle (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/server/bossevents/CustomBossEvent;Lnet/minecraft/world/BossEvent$BossBarOverlay;)I a
	setValue (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/server/bossevents/CustomBossEvent;I)I a
	setVisible (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/server/bossevents/CustomBossEvent;Z)I a
net/minecraft/server/commands/ClearInventoryCommands wl
	ERROR_MULTIPLE b
	ERROR_SINGLE a
	clearInventory (Lnet/minecraft/commands/CommandSourceStack;Ljava/util/Collection;Ljava/util/function/Predicate;I)I a
	register (Lcom/mojang/brigadier/CommandDispatcher;)V a
net/minecraft/server/commands/CloneCommands wm
	ERROR_AREA_TOO_LARGE c
	ERROR_FAILED d
	ERROR_OVERLAP b
	FILTER_AIR a
	clone (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;Ljava/util/function/Predicate;Lnet/minecraft/server/commands/CloneCommands$Mode;)I a
	register (Lcom/mojang/brigadier/CommandDispatcher;)V a
net/minecraft/server/commands/CloneCommands$CloneBlockInfo wm$a
	pos a
	state b
	tag c
net/minecraft/server/commands/CloneCommands$Mode wm$b
	$VALUES e
	FORCE a
	MOVE b
	NORMAL c
	canOverlap d
	canOverlap ()Z a
net/minecraft/server/commands/DataPackCommand wn
	ERROR_PACK_ALREADY_DISABLED c
	ERROR_PACK_ALREADY_ENABLED b
	ERROR_UNKNOWN_PACK a
	SELECTED_PACKS d
	UNSELECTED_PACKS e
	disablePack (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/server/packs/repository/Pack;)I a
	enablePack (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/server/packs/repository/Pack;Lnet/minecraft/server/commands/DataPackCommand$Inserter;)I a
	getPack (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;Z)Lnet/minecraft/server/packs/repository/Pack; a
	listAvailablePacks (Lnet/minecraft/commands/CommandSourceStack;)I b
	listEnabledPacks (Lnet/minecraft/commands/CommandSourceStack;)I c
	listPacks (Lnet/minecraft/commands/CommandSourceStack;)I a
	register (Lcom/mojang/brigadier/CommandDispatcher;)V a
net/minecraft/server/commands/DataPackCommand$Inserter wn$a
net/minecraft/server/commands/DeOpCommands wo
	ERROR_NOT_OP a
	deopPlayers (Lnet/minecraft/commands/CommandSourceStack;Ljava/util/Collection;)I a
	register (Lcom/mojang/brigadier/CommandDispatcher;)V a
net/minecraft/server/commands/DebugCommand wp
	ERROR_ALREADY_RUNNING c
	ERROR_NOT_RUNNING b
	LOGGER a
	ZIP_FS_PROVIDER d
	register (Lcom/mojang/brigadier/CommandDispatcher;)V a
	report (Lnet/minecraft/commands/CommandSourceStack;)I c
	start (Lnet/minecraft/commands/CommandSourceStack;)I a
	stop (Lnet/minecraft/commands/CommandSourceStack;)I b
net/minecraft/server/commands/DebugMobSpawningCommand wq
	register (Lcom/mojang/brigadier/CommandDispatcher;)V a
	spawnMobs (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/world/entity/MobCategory;Lnet/minecraft/core/BlockPos;)I a
net/minecraft/server/commands/DebugPathCommand wr
	ERROR_NOT_COMPLETE c
	ERROR_NOT_MOB a
	ERROR_NO_PATH b
	fillBlocks (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/core/BlockPos;)I a
	register (Lcom/mojang/brigadier/CommandDispatcher;)V a
net/minecraft/server/commands/DefaultGameModeCommands ws
	register (Lcom/mojang/brigadier/CommandDispatcher;)V a
	setMode (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/world/level/GameType;)I a
net/minecraft/server/commands/DifficultyCommand wt
	ERROR_ALREADY_DIFFICULT a
	register (Lcom/mojang/brigadier/CommandDispatcher;)V a
	setDifficulty (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/world/Difficulty;)I a
net/minecraft/server/commands/EffectCommands wu
	ERROR_CLEAR_EVERYTHING_FAILED b
	ERROR_CLEAR_SPECIFIC_FAILED c
	ERROR_GIVE_FAILED a
	clearEffect (Lnet/minecraft/commands/CommandSourceStack;Ljava/util/Collection;Lnet/minecraft/world/effect/MobEffect;)I a
	clearEffects (Lnet/minecraft/commands/CommandSourceStack;Ljava/util/Collection;)I a
	giveEffect (Lnet/minecraft/commands/CommandSourceStack;Ljava/util/Collection;Lnet/minecraft/world/effect/MobEffect;Ljava/lang/Integer;IZ)I a
	register (Lcom/mojang/brigadier/CommandDispatcher;)V a
net/minecraft/server/commands/EmoteCommands wv
	register (Lcom/mojang/brigadier/CommandDispatcher;)V a
net/minecraft/server/commands/EnchantCommand ww
	ERROR_INCOMPATIBLE c
	ERROR_LEVEL_TOO_HIGH d
	ERROR_NOTHING_HAPPENED e
	ERROR_NOT_LIVING_ENTITY a
	ERROR_NO_ITEM b
	enchant (Lnet/minecraft/commands/CommandSourceStack;Ljava/util/Collection;Lnet/minecraft/world/item/enchantment/Enchantment;I)I a
	register (Lcom/mojang/brigadier/CommandDispatcher;)V a
net/minecraft/server/commands/ExecuteCommand wx
	CALLBACK_CHAINER d
	ERROR_AREA_TOO_LARGE a
	ERROR_CONDITIONAL_FAILED b
	ERROR_CONDITIONAL_FAILED_COUNT c
	SUGGEST_PREDICATE e
	addConditional (Lcom/mojang/brigadier/tree/CommandNode;Lcom/mojang/brigadier/builder/ArgumentBuilder;ZLnet/minecraft/server/commands/ExecuteCommand$CommandPredicate;)Lcom/mojang/brigadier/builder/ArgumentBuilder; a
	addConditionals (Lcom/mojang/brigadier/tree/CommandNode;Lcom/mojang/brigadier/builder/LiteralArgumentBuilder;Z)Lcom/mojang/brigadier/builder/ArgumentBuilder; a
	addIfBlocksConditional (Lcom/mojang/brigadier/tree/CommandNode;Lcom/mojang/brigadier/builder/ArgumentBuilder;ZZ)Lcom/mojang/brigadier/builder/ArgumentBuilder; a
	checkCustomPredicate (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition;)Z a
	checkIfRegions (Lcom/mojang/brigadier/context/CommandContext;Z)I a
	checkMatchingData (Lnet/minecraft/server/commands/data/DataAccessor;Lnet/minecraft/commands/arguments/NbtPathArgument$NbtPath;)I a
	checkRegions (Lcom/mojang/brigadier/context/CommandContext;Z)Ljava/util/OptionalInt; c
	checkRegions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;Z)Ljava/util/OptionalInt; a
	checkScore (Lcom/mojang/brigadier/context/CommandContext;Ljava/util/function/BiPredicate;)Z a
	checkScore (Lcom/mojang/brigadier/context/CommandContext;Lnet/minecraft/advancements/critereon/MinMaxBounds$Ints;)Z a
	checkUnlessRegions (Lcom/mojang/brigadier/context/CommandContext;Z)I b
	createNumericConditionalHandler (ZLnet/minecraft/server/commands/ExecuteCommand$CommandNumericPredicate;)Lcom/mojang/brigadier/Command; a
	expect (Lcom/mojang/brigadier/context/CommandContext;ZZ)Ljava/util/Collection; a
	register (Lcom/mojang/brigadier/CommandDispatcher;)V a
	storeData (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/server/commands/data/DataAccessor;Lnet/minecraft/commands/arguments/NbtPathArgument$NbtPath;Ljava/util/function/IntFunction;Z)Lnet/minecraft/commands/CommandSourceStack; a
	storeValue (Lnet/minecraft/commands/CommandSourceStack;Ljava/util/Collection;Lnet/minecraft/world/scores/Objective;Z)Lnet/minecraft/commands/CommandSourceStack; a
	storeValue (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/server/bossevents/CustomBossEvent;ZZ)Lnet/minecraft/commands/CommandSourceStack; a
	wrapStores (Lcom/mojang/brigadier/tree/LiteralCommandNode;Lcom/mojang/brigadier/builder/LiteralArgumentBuilder;Z)Lcom/mojang/brigadier/builder/ArgumentBuilder; a
net/minecraft/server/commands/ExecuteCommand$CommandNumericPredicate wx$a
net/minecraft/server/commands/ExecuteCommand$CommandPredicate wx$b
net/minecraft/server/commands/ExperienceCommand wy
	ERROR_SET_POINTS_INVALID a
	addExperience (Lnet/minecraft/commands/CommandSourceStack;Ljava/util/Collection;ILnet/minecraft/server/commands/ExperienceCommand$Type;)I a
	queryExperience (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/server/level/ServerPlayer;Lnet/minecraft/server/commands/ExperienceCommand$Type;)I a
	register (Lcom/mojang/brigadier/CommandDispatcher;)V a
	setExperience (Lnet/minecraft/commands/CommandSourceStack;Ljava/util/Collection;ILnet/minecraft/server/commands/ExperienceCommand$Type;)I b
net/minecraft/server/commands/ExperienceCommand$Type wy$a
	$VALUES g
	LEVELS b
	POINTS a
	add c
	name e
	query f
	set d
net/minecraft/server/commands/FillCommand wz
	ERROR_AREA_TOO_LARGE a
	ERROR_FAILED c
	HOLLOW_CORE b
	fillBlocks (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Lnet/minecraft/commands/arguments/blocks/BlockInput;Lnet/minecraft/server/commands/FillCommand$Mode;Ljava/util/function/Predicate;)I a
	register (Lcom/mojang/brigadier/CommandDispatcher;)V a
net/minecraft/server/commands/FillCommand$Mode wz$a
	$VALUES f
	DESTROY d
	HOLLOW c
	OUTLINE b
	REPLACE a
	filter e
net/minecraft/server/commands/ForceLoadCommand xa
	ERROR_ALL_ADDED c
	ERROR_NONE_REMOVED d
	ERROR_NOT_TICKING b
	ERROR_TOO_MANY_CHUNKS a
	changeForceLoad (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/server/level/ColumnPos;Lnet/minecraft/server/level/ColumnPos;Z)I a
	listForceLoad (Lnet/minecraft/commands/CommandSourceStack;)I a
	queryForceLoad (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/server/level/ColumnPos;)I a
	register (Lcom/mojang/brigadier/CommandDispatcher;)V a
	removeAll (Lnet/minecraft/commands/CommandSourceStack;)I b
net/minecraft/server/commands/FunctionCommand xb
	SUGGEST_FUNCTION a
	register (Lcom/mojang/brigadier/CommandDispatcher;)V a
	runFunction (Lnet/minecraft/commands/CommandSourceStack;Ljava/util/Collection;)I a
net/minecraft/server/commands/GameModeCommand xc
	logGamemodeChange (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/server/level/ServerPlayer;Lnet/minecraft/world/level/GameType;)V a
	register (Lcom/mojang/brigadier/CommandDispatcher;)V a
	setMode (Lcom/mojang/brigadier/context/CommandContext;Ljava/util/Collection;Lnet/minecraft/world/level/GameType;)I a
net/minecraft/server/commands/GameRuleCommand xd
	queryRule (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/world/level/GameRules$Key;)I b
	register (Lcom/mojang/brigadier/CommandDispatcher;)V a
	setRule (Lcom/mojang/brigadier/context/CommandContext;Lnet/minecraft/world/level/GameRules$Key;)I b
net/minecraft/server/commands/GiveCommand xe
	giveItem (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/commands/arguments/item/ItemInput;Ljava/util/Collection;I)I a
	register (Lcom/mojang/brigadier/CommandDispatcher;)V a
net/minecraft/server/commands/HelpCommand xf
	ERROR_FAILED a
	register (Lcom/mojang/brigadier/CommandDispatcher;)V a
net/minecraft/server/commands/KickCommand xg
	kickPlayers (Lnet/minecraft/commands/CommandSourceStack;Ljava/util/Collection;Lnet/minecraft/network/chat/Component;)I a
	register (Lcom/mojang/brigadier/CommandDispatcher;)V a
net/minecraft/server/commands/KillCommand xh
	kill (Lnet/minecraft/commands/CommandSourceStack;Ljava/util/Collection;)I a
	register (Lcom/mojang/brigadier/CommandDispatcher;)V a
net/minecraft/server/commands/ListPlayersCommand xi
	format (Lnet/minecraft/commands/CommandSourceStack;Ljava/util/function/Function;)I a
	listPlayers (Lnet/minecraft/commands/CommandSourceStack;)I a
	listPlayersWithUuids (Lnet/minecraft/commands/CommandSourceStack;)I b
	register (Lcom/mojang/brigadier/CommandDispatcher;)V a
net/minecraft/server/commands/LocateBiomeCommand xj
	ERROR_BIOME_NOT_FOUND b
	ERROR_INVALID_BIOME a
	locateBiome (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/resources/ResourceLocation;)I a
	register (Lcom/mojang/brigadier/CommandDispatcher;)V a
net/minecraft/server/commands/LocateCommand xk
	ERROR_FAILED a
	dist (IIII)F a
	locate (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/world/level/levelgen/feature/StructureFeature;)I a
	register (Lcom/mojang/brigadier/CommandDispatcher;)V a
	showLocateResult (Lnet/minecraft/commands/CommandSourceStack;Ljava/lang/String;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;Ljava/lang/String;)I a
net/minecraft/server/commands/LootCommand xl
	ERROR_NO_HELD_ITEMS b
	ERROR_NO_LOOT_TABLE c
	SUGGEST_LOOT_TABLE a
	addTargets (Lcom/mojang/brigadier/builder/ArgumentBuilder;Lnet/minecraft/server/commands/LootCommand$TailProvider;)Lcom/mojang/brigadier/builder/ArgumentBuilder; a
	blockDistribute (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/core/BlockPos;Ljava/util/List;Lnet/minecraft/server/commands/LootCommand$Callback;)I a
	blockReplace (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/core/BlockPos;IILjava/util/List;Lnet/minecraft/server/commands/LootCommand$Callback;)I a
	callback (Lnet/minecraft/commands/CommandSourceStack;Ljava/util/List;)V a
	callback (Lnet/minecraft/commands/CommandSourceStack;Ljava/util/List;Lnet/minecraft/resources/ResourceLocation;)V a
	canMergeItems (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/item/ItemStack;)Z a
	distributeToContainer (Lnet/minecraft/world/Container;Lnet/minecraft/world/item/ItemStack;)Z a
	drop (Lcom/mojang/brigadier/context/CommandContext;Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/world/level/storage/loot/LootContext;Lnet/minecraft/server/commands/LootCommand$DropConsumer;)I a
	dropBlockLoot (Lcom/mojang/brigadier/context/CommandContext;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/server/commands/LootCommand$DropConsumer;)I a
	dropChestLoot (Lcom/mojang/brigadier/context/CommandContext;Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/server/commands/LootCommand$DropConsumer;)I a
	dropFishingLoot (Lcom/mojang/brigadier/context/CommandContext;Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/server/commands/LootCommand$DropConsumer;)I a
	dropInWorld (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/world/phys/Vec3;Ljava/util/List;Lnet/minecraft/server/commands/LootCommand$Callback;)I a
	dropKillLoot (Lcom/mojang/brigadier/context/CommandContext;Lnet/minecraft/world/entity/Entity;Lnet/minecraft/server/commands/LootCommand$DropConsumer;)I a
	entityReplace (Ljava/util/Collection;IILjava/util/List;Lnet/minecraft/server/commands/LootCommand$Callback;)I a
	getContainer (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/Container; a
	getSourceHandItem (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/world/entity/EquipmentSlot;)Lnet/minecraft/world/item/ItemStack; a
	playerGive (Ljava/util/Collection;Ljava/util/List;Lnet/minecraft/server/commands/LootCommand$Callback;)I a
	register (Lcom/mojang/brigadier/CommandDispatcher;)V a
	setSlots (Lnet/minecraft/world/entity/Entity;Ljava/util/List;IILjava/util/List;)V a
net/minecraft/server/commands/LootCommand$Callback xl$a
net/minecraft/server/commands/LootCommand$DropConsumer xl$b
net/minecraft/server/commands/LootCommand$TailProvider xl$c
net/minecraft/server/commands/MsgCommand xm
	register (Lcom/mojang/brigadier/CommandDispatcher;)V a
	sendMessage (Lnet/minecraft/commands/CommandSourceStack;Ljava/util/Collection;Lnet/minecraft/network/chat/Component;)I a
net/minecraft/server/commands/OpCommand xn
	ERROR_ALREADY_OP a
	opPlayers (Lnet/minecraft/commands/CommandSourceStack;Ljava/util/Collection;)I a
	register (Lcom/mojang/brigadier/CommandDispatcher;)V a
net/minecraft/server/commands/PardonCommand xo
	ERROR_NOT_BANNED a
	pardonPlayers (Lnet/minecraft/commands/CommandSourceStack;Ljava/util/Collection;)I a
	register (Lcom/mojang/brigadier/CommandDispatcher;)V a
net/minecraft/server/commands/PardonIpCommand xp
	ERROR_INVALID a
	ERROR_NOT_BANNED b
	register (Lcom/mojang/brigadier/CommandDispatcher;)V a
	unban (Lnet/minecraft/commands/CommandSourceStack;Ljava/lang/String;)I a
net/minecraft/server/commands/ParticleCommand xq
	ERROR_FAILED a
	register (Lcom/mojang/brigadier/CommandDispatcher;)V a
	sendParticles (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/core/particles/ParticleOptions;Lnet/minecraft/world/phys/Vec3;Lnet/minecraft/world/phys/Vec3;FIZLjava/util/Collection;)I a
net/minecraft/server/commands/PlaySoundCommand xr
	ERROR_TOO_FAR a
	playSound (Lnet/minecraft/commands/CommandSourceStack;Ljava/util/Collection;Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/sounds/SoundSource;Lnet/minecraft/world/phys/Vec3;FFF)I a
	register (Lcom/mojang/brigadier/CommandDispatcher;)V a
	source (Lnet/minecraft/sounds/SoundSource;)Lcom/mojang/brigadier/builder/LiteralArgumentBuilder; a
net/minecraft/server/commands/PublishCommand xs
	ERROR_ALREADY_PUBLISHED b
	ERROR_FAILED a
	publish (Lnet/minecraft/commands/CommandSourceStack;I)I a
	register (Lcom/mojang/brigadier/CommandDispatcher;)V a
net/minecraft/server/commands/RaidCommand xt
	check (Lnet/minecraft/commands/CommandSourceStack;)I d
	getRaid (Lnet/minecraft/server/level/ServerPlayer;)Lnet/minecraft/world/entity/raid/Raid; a
	glow (Lnet/minecraft/commands/CommandSourceStack;)I a
	playSound (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/network/chat/Component;)I a
	register (Lcom/mojang/brigadier/CommandDispatcher;)V a
	setBadOmenLevel (Lnet/minecraft/commands/CommandSourceStack;I)I a
	spawnLeader (Lnet/minecraft/commands/CommandSourceStack;)I b
	start (Lnet/minecraft/commands/CommandSourceStack;I)I b
	stop (Lnet/minecraft/commands/CommandSourceStack;)I c
net/minecraft/server/commands/RecipeCommand xu
	ERROR_GIVE_FAILED a
	ERROR_TAKE_FAILED b
	giveRecipes (Lnet/minecraft/commands/CommandSourceStack;Ljava/util/Collection;Ljava/util/Collection;)I a
	register (Lcom/mojang/brigadier/CommandDispatcher;)V a
	takeRecipes (Lnet/minecraft/commands/CommandSourceStack;Ljava/util/Collection;Ljava/util/Collection;)I b
net/minecraft/server/commands/ReloadCommand xv
	LOGGER a
	discoverNewPacks (Lnet/minecraft/server/packs/repository/PackRepository;Lnet/minecraft/world/level/storage/WorldData;Ljava/util/Collection;)Ljava/util/Collection; a
	register (Lcom/mojang/brigadier/CommandDispatcher;)V a
	reloadPacks (Ljava/util/Collection;Lnet/minecraft/commands/CommandSourceStack;)V a
net/minecraft/server/commands/ReplaceItemCommand xw
	ERROR_ENTITY_SLOT c
	ERROR_INAPPLICABLE_SLOT b
	ERROR_NOT_A_CONTAINER a
	register (Lcom/mojang/brigadier/CommandDispatcher;)V a
	setBlockItem (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/core/BlockPos;ILnet/minecraft/world/item/ItemStack;)I a
	setEntityItem (Lnet/minecraft/commands/CommandSourceStack;Ljava/util/Collection;ILnet/minecraft/world/item/ItemStack;)I a
net/minecraft/server/commands/SaveAllCommand xx
	ERROR_FAILED a
	register (Lcom/mojang/brigadier/CommandDispatcher;)V a
	saveAll (Lnet/minecraft/commands/CommandSourceStack;Z)I a
net/minecraft/server/commands/SaveOffCommand xy
	ERROR_ALREADY_OFF a
	register (Lcom/mojang/brigadier/CommandDispatcher;)V a
net/minecraft/server/commands/SaveOnCommand xz
	ERROR_ALREADY_ON a
	register (Lcom/mojang/brigadier/CommandDispatcher;)V a
net/minecraft/server/commands/SayCommand ya
	register (Lcom/mojang/brigadier/CommandDispatcher;)V a
net/minecraft/server/commands/ScheduleCommand yb
	ERROR_CANT_REMOVE b
	ERROR_SAME_TICK a
	SUGGEST_SCHEDULE c
	register (Lcom/mojang/brigadier/CommandDispatcher;)V a
	remove (Lnet/minecraft/commands/CommandSourceStack;Ljava/lang/String;)I a
	schedule (Lnet/minecraft/commands/CommandSourceStack;Lcom/mojang/datafixers/util/Pair;IZ)I a
net/minecraft/server/commands/ScoreboardCommand yc
	ERROR_DISPLAY_SLOT_ALREADY_EMPTY b
	ERROR_DISPLAY_SLOT_ALREADY_SET c
	ERROR_NOT_TRIGGER e
	ERROR_NO_VALUE f
	ERROR_OBJECTIVE_ALREADY_EXISTS a
	ERROR_TRIGGER_ALREADY_ENABLED d
	addObjective (Lnet/minecraft/commands/CommandSourceStack;Ljava/lang/String;Lnet/minecraft/world/scores/criteria/ObjectiveCriteria;Lnet/minecraft/network/chat/Component;)I a
	addScore (Lnet/minecraft/commands/CommandSourceStack;Ljava/util/Collection;Lnet/minecraft/world/scores/Objective;I)I b
	clearDisplaySlot (Lnet/minecraft/commands/CommandSourceStack;I)I a
	createRenderTypeModify ()Lcom/mojang/brigadier/builder/LiteralArgumentBuilder; a
	enableTrigger (Lnet/minecraft/commands/CommandSourceStack;Ljava/util/Collection;Lnet/minecraft/world/scores/Objective;)I a
	getScore (Lnet/minecraft/commands/CommandSourceStack;Ljava/lang/String;Lnet/minecraft/world/scores/Objective;)I a
	listObjectives (Lnet/minecraft/commands/CommandSourceStack;)I b
	listTrackedPlayerScores (Lnet/minecraft/commands/CommandSourceStack;Ljava/lang/String;)I a
	listTrackedPlayers (Lnet/minecraft/commands/CommandSourceStack;)I a
	performOperation (Lnet/minecraft/commands/CommandSourceStack;Ljava/util/Collection;Lnet/minecraft/world/scores/Objective;Lnet/minecraft/commands/arguments/OperationArgument$Operation;Ljava/util/Collection;Lnet/minecraft/world/scores/Objective;)I a
	register (Lcom/mojang/brigadier/CommandDispatcher;)V a
	removeObjective (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/world/scores/Objective;)I a
	removeScore (Lnet/minecraft/commands/CommandSourceStack;Ljava/util/Collection;Lnet/minecraft/world/scores/Objective;I)I c
	resetScore (Lnet/minecraft/commands/CommandSourceStack;Ljava/util/Collection;Lnet/minecraft/world/scores/Objective;)I b
	resetScores (Lnet/minecraft/commands/CommandSourceStack;Ljava/util/Collection;)I a
	setDisplayName (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/world/scores/Objective;Lnet/minecraft/network/chat/Component;)I a
	setDisplaySlot (Lnet/minecraft/commands/CommandSourceStack;ILnet/minecraft/world/scores/Objective;)I a
	setRenderType (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/world/scores/Objective;Lnet/minecraft/world/scores/criteria/ObjectiveCriteria$RenderType;)I a
	setScore (Lnet/minecraft/commands/CommandSourceStack;Ljava/util/Collection;Lnet/minecraft/world/scores/Objective;I)I a
	suggestTriggers (Lnet/minecraft/commands/CommandSourceStack;Ljava/util/Collection;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture; a
net/minecraft/server/commands/SeedCommand yd
	register (Lcom/mojang/brigadier/CommandDispatcher;Z)V a
net/minecraft/server/commands/SetBlockCommand ye
	ERROR_FAILED a
	register (Lcom/mojang/brigadier/CommandDispatcher;)V a
	setBlock (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/core/BlockPos;Lnet/minecraft/commands/arguments/blocks/BlockInput;Lnet/minecraft/server/commands/SetBlockCommand$Mode;Ljava/util/function/Predicate;)I a
net/minecraft/server/commands/SetBlockCommand$Filter ye$a
net/minecraft/server/commands/SetBlockCommand$Mode ye$b
	$VALUES c
	DESTROY b
	REPLACE a
net/minecraft/server/commands/SetPlayerIdleTimeoutCommand yf
	register (Lcom/mojang/brigadier/CommandDispatcher;)V a
	setIdleTimeout (Lnet/minecraft/commands/CommandSourceStack;I)I a
net/minecraft/server/commands/SetSpawnCommand yg
	register (Lcom/mojang/brigadier/CommandDispatcher;)V a
	setSpawn (Lnet/minecraft/commands/CommandSourceStack;Ljava/util/Collection;Lnet/minecraft/core/BlockPos;F)I a
net/minecraft/server/commands/SetWorldSpawnCommand yh
	register (Lcom/mojang/brigadier/CommandDispatcher;)V a
	setSpawn (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/core/BlockPos;F)I a
net/minecraft/server/commands/SpectateCommand yi
	ERROR_NOT_SPECTATOR b
	ERROR_SELF a
	register (Lcom/mojang/brigadier/CommandDispatcher;)V a
	spectate (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/world/entity/Entity;Lnet/minecraft/server/level/ServerPlayer;)I a
net/minecraft/server/commands/SpreadPlayersCommand yj
	ERROR_FAILED_TO_SPREAD_ENTITIES b
	ERROR_FAILED_TO_SPREAD_TEAMS a
	createInitialPositions (Ljava/util/Random;IDDDD)[Lnet/minecraft/server/commands/SpreadPlayersCommand$Position; a
	getNumberOfTeams (Ljava/util/Collection;)I a
	register (Lcom/mojang/brigadier/CommandDispatcher;)V a
	setPlayerPositions (Ljava/util/Collection;Lnet/minecraft/server/level/ServerLevel;[Lnet/minecraft/server/commands/SpreadPlayersCommand$Position;IZ)D a
	spreadPlayers (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/world/phys/Vec2;FFIZLjava/util/Collection;)I a
	spreadPositions (Lnet/minecraft/world/phys/Vec2;DLnet/minecraft/server/level/ServerLevel;Ljava/util/Random;DDDDI[Lnet/minecraft/server/commands/SpreadPlayersCommand$Position;Z)V a
net/minecraft/server/commands/SpreadPlayersCommand$Position yj$a
	x a
	z b
	clamp (DDDD)Z a
	dist (Lnet/minecraft/server/commands/SpreadPlayersCommand$Position;)D a
	getLength ()F b
	getSpawnY (Lnet/minecraft/world/level/BlockGetter;I)I a
	isSafe (Lnet/minecraft/world/level/BlockGetter;I)Z b
	moveAway (Lnet/minecraft/server/commands/SpreadPlayersCommand$Position;)V b
	normalize ()V a
	randomize (Ljava/util/Random;DDDD)V a
	set (DD)V a
net/minecraft/server/commands/StopCommand yk
	register (Lcom/mojang/brigadier/CommandDispatcher;)V a
net/minecraft/server/commands/StopSoundCommand yl
	register (Lcom/mojang/brigadier/CommandDispatcher;)V a
	stopSound (Lnet/minecraft/commands/CommandSourceStack;Ljava/util/Collection;Lnet/minecraft/sounds/SoundSource;Lnet/minecraft/resources/ResourceLocation;)I a
net/minecraft/server/commands/SummonCommand ym
	ERROR_DUPLICATE_UUID b
	ERROR_FAILED a
	INVALID_POSITION c
	register (Lcom/mojang/brigadier/CommandDispatcher;)V a
	spawnEntity (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/world/phys/Vec3;Lnet/minecraft/nbt/CompoundTag;Z)I a
net/minecraft/server/commands/TagCommand yn
	ERROR_ADD_FAILED a
	ERROR_REMOVE_FAILED b
	addTag (Lnet/minecraft/commands/CommandSourceStack;Ljava/util/Collection;Ljava/lang/String;)I a
	getTags (Ljava/util/Collection;)Ljava/util/Collection; a
	listTags (Lnet/minecraft/commands/CommandSourceStack;Ljava/util/Collection;)I a
	register (Lcom/mojang/brigadier/CommandDispatcher;)V a
	removeTag (Lnet/minecraft/commands/CommandSourceStack;Ljava/util/Collection;Ljava/lang/String;)I b
net/minecraft/server/commands/TeamCommand yo
	ERROR_TEAM_ALREADY_COLOR e
	ERROR_TEAM_ALREADY_EMPTY c
	ERROR_TEAM_ALREADY_EXISTS a
	ERROR_TEAM_ALREADY_FRIENDLYFIRE_DISABLED g
	ERROR_TEAM_ALREADY_FRIENDLYFIRE_ENABLED f
	ERROR_TEAM_ALREADY_FRIENDLYINVISIBLES_DISABLED i
	ERROR_TEAM_ALREADY_FRIENDLYINVISIBLES_ENABLED h
	ERROR_TEAM_ALREADY_NAME d
	ERROR_TEAM_COLLISION_UNCHANGED l
	ERROR_TEAM_DEATH_MESSAGE_VISIBLITY_UNCHANGED k
	ERROR_TEAM_NAMETAG_VISIBLITY_UNCHANGED j
	ERROR_TEAM_NAME_TOO_LONG b
	createTeam (Lnet/minecraft/commands/CommandSourceStack;Ljava/lang/String;)I a
	createTeam (Lnet/minecraft/commands/CommandSourceStack;Ljava/lang/String;Lnet/minecraft/network/chat/Component;)I a
	deleteTeam (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/world/scores/PlayerTeam;)I b
	emptyTeam (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/world/scores/PlayerTeam;)I a
	joinTeam (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/world/scores/PlayerTeam;Ljava/util/Collection;)I a
	leaveTeam (Lnet/minecraft/commands/CommandSourceStack;Ljava/util/Collection;)I a
	listMembers (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/world/scores/PlayerTeam;)I c
	listTeams (Lnet/minecraft/commands/CommandSourceStack;)I a
	register (Lcom/mojang/brigadier/CommandDispatcher;)V a
	setCollision (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/world/scores/PlayerTeam;Lnet/minecraft/world/scores/Team$CollisionRule;)I a
	setColor (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/world/scores/PlayerTeam;Lnet/minecraft/ChatFormatting;)I a
	setDeathMessageVisibility (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/world/scores/PlayerTeam;Lnet/minecraft/world/scores/Team$Visibility;)I b
	setDisplayName (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/world/scores/PlayerTeam;Lnet/minecraft/network/chat/Component;)I a
	setFriendlyFire (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/world/scores/PlayerTeam;Z)I b
	setFriendlySight (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/world/scores/PlayerTeam;Z)I a
	setNametagVisibility (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/world/scores/PlayerTeam;Lnet/minecraft/world/scores/Team$Visibility;)I a
	setPrefix (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/world/scores/PlayerTeam;Lnet/minecraft/network/chat/Component;)I b
	setSuffix (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/world/scores/PlayerTeam;Lnet/minecraft/network/chat/Component;)I c
net/minecraft/server/commands/TeamMsgCommand yp
	ERROR_NOT_ON_TEAM b
	SUGGEST_STYLE a
	register (Lcom/mojang/brigadier/CommandDispatcher;)V a
	sendMessage (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/network/chat/Component;)I a
net/minecraft/server/commands/TeleportCommand yq
	INVALID_POSITION a
	performTeleport (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/world/entity/Entity;Lnet/minecraft/server/level/ServerLevel;DDDLjava/util/Set;FFLnet/minecraft/server/commands/TeleportCommand$LookAt;)V a
	register (Lcom/mojang/brigadier/CommandDispatcher;)V a
	teleportToEntity (Lnet/minecraft/commands/CommandSourceStack;Ljava/util/Collection;Lnet/minecraft/world/entity/Entity;)I a
	teleportToPos (Lnet/minecraft/commands/CommandSourceStack;Ljava/util/Collection;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/commands/arguments/coordinates/Coordinates;Lnet/minecraft/commands/arguments/coordinates/Coordinates;Lnet/minecraft/server/commands/TeleportCommand$LookAt;)I a
net/minecraft/server/commands/TeleportCommand$LookAt yq$a
	anchor c
	entity b
	position a
	perform (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/world/entity/Entity;)V a
net/minecraft/server/commands/TellRawCommand yr
	register (Lcom/mojang/brigadier/CommandDispatcher;)V a
net/minecraft/server/commands/TimeCommand ys
	addTime (Lnet/minecraft/commands/CommandSourceStack;I)I b
	getDayTime (Lnet/minecraft/server/level/ServerLevel;)I a
	queryTime (Lnet/minecraft/commands/CommandSourceStack;I)I c
	register (Lcom/mojang/brigadier/CommandDispatcher;)V a
	setTime (Lnet/minecraft/commands/CommandSourceStack;I)I a
net/minecraft/server/commands/TitleCommand yt
	clearTitle (Lnet/minecraft/commands/CommandSourceStack;Ljava/util/Collection;)I a
	register (Lcom/mojang/brigadier/CommandDispatcher;)V a
	resetTitle (Lnet/minecraft/commands/CommandSourceStack;Ljava/util/Collection;)I b
	setTimes (Lnet/minecraft/commands/CommandSourceStack;Ljava/util/Collection;III)I a
	showTitle (Lnet/minecraft/commands/CommandSourceStack;Ljava/util/Collection;Lnet/minecraft/network/chat/Component;Lnet/minecraft/network/protocol/game/ClientboundSetTitlesPacket$Type;)I a
net/minecraft/server/commands/TriggerCommand yu
	ERROR_INVALID_OBJECTIVE b
	ERROR_NOT_PRIMED a
	addValue (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/world/scores/Score;I)I a
	getScore (Lnet/minecraft/server/level/ServerPlayer;Lnet/minecraft/world/scores/Objective;)Lnet/minecraft/world/scores/Score; a
	register (Lcom/mojang/brigadier/CommandDispatcher;)V a
	setValue (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/world/scores/Score;I)I b
	simpleTrigger (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/world/scores/Score;)I a
	suggestObjectives (Lnet/minecraft/commands/CommandSourceStack;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture; a
net/minecraft/server/commands/WeatherCommand yv
	register (Lcom/mojang/brigadier/CommandDispatcher;)V a
	setClear (Lnet/minecraft/commands/CommandSourceStack;I)I a
	setRain (Lnet/minecraft/commands/CommandSourceStack;I)I b
	setThunder (Lnet/minecraft/commands/CommandSourceStack;I)I c
net/minecraft/server/commands/WhitelistCommand yw
	ERROR_ALREADY_DISABLED b
	ERROR_ALREADY_ENABLED a
	ERROR_ALREADY_WHITELISTED c
	ERROR_NOT_WHITELISTED d
	addPlayers (Lnet/minecraft/commands/CommandSourceStack;Ljava/util/Collection;)I a
	disableWhitelist (Lnet/minecraft/commands/CommandSourceStack;)I c
	enableWhitelist (Lnet/minecraft/commands/CommandSourceStack;)I b
	register (Lcom/mojang/brigadier/CommandDispatcher;)V a
	reload (Lnet/minecraft/commands/CommandSourceStack;)I a
	removePlayers (Lnet/minecraft/commands/CommandSourceStack;Ljava/util/Collection;)I b
	showList (Lnet/minecraft/commands/CommandSourceStack;)I d
net/minecraft/server/commands/WorldBorderCommand yx
	ERROR_SAME_CENTER a
	ERROR_SAME_DAMAGE_AMOUNT h
	ERROR_SAME_DAMAGE_BUFFER g
	ERROR_SAME_SIZE b
	ERROR_SAME_WARNING_DISTANCE f
	ERROR_SAME_WARNING_TIME e
	ERROR_TOO_BIG d
	ERROR_TOO_SMALL c
	getSize (Lnet/minecraft/commands/CommandSourceStack;)I a
	register (Lcom/mojang/brigadier/CommandDispatcher;)V a
	setCenter (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/world/phys/Vec2;)I a
	setDamageAmount (Lnet/minecraft/commands/CommandSourceStack;F)I b
	setDamageBuffer (Lnet/minecraft/commands/CommandSourceStack;F)I a
	setSize (Lnet/minecraft/commands/CommandSourceStack;DJ)I a
	setWarningDistance (Lnet/minecraft/commands/CommandSourceStack;I)I b
	setWarningTime (Lnet/minecraft/commands/CommandSourceStack;I)I a
net/minecraft/server/commands/data/BlockDataAccessor yy
	ERROR_NOT_A_BLOCK_ENTITY b
	PROVIDER a
	entity c
	pos d
	getData ()Lnet/minecraft/nbt/CompoundTag; a
	getModifiedSuccess ()Lnet/minecraft/network/chat/Component; b
	getPrintSuccess (Lnet/minecraft/commands/arguments/NbtPathArgument$NbtPath;DI)Lnet/minecraft/network/chat/Component; a
	getPrintSuccess (Lnet/minecraft/nbt/Tag;)Lnet/minecraft/network/chat/Component; a
	setData (Lnet/minecraft/nbt/CompoundTag;)V a
net/minecraft/server/commands/data/DataAccessor yz
	getData ()Lnet/minecraft/nbt/CompoundTag; a
	getModifiedSuccess ()Lnet/minecraft/network/chat/Component; b
	getPrintSuccess (Lnet/minecraft/commands/arguments/NbtPathArgument$NbtPath;DI)Lnet/minecraft/network/chat/Component; a
	getPrintSuccess (Lnet/minecraft/nbt/Tag;)Lnet/minecraft/network/chat/Component; a
	setData (Lnet/minecraft/nbt/CompoundTag;)V a
net/minecraft/server/commands/data/DataCommands za
	ALL_PROVIDERS a
	ERROR_EXPECTED_LIST h
	ERROR_EXPECTED_OBJECT i
	ERROR_GET_NON_EXISTENT f
	ERROR_GET_NOT_NUMBER e
	ERROR_INVALID_INDEX j
	ERROR_MERGE_UNCHANGED d
	ERROR_MULTIPLE_TAGS g
	SOURCE_PROVIDERS c
	TARGET_PROVIDERS b
	decorateModification (Ljava/util/function/BiConsumer;)Lcom/mojang/brigadier/builder/ArgumentBuilder; a
	getData (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/server/commands/data/DataAccessor;)I a
	getData (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/server/commands/data/DataAccessor;Lnet/minecraft/commands/arguments/NbtPathArgument$NbtPath;)I b
	getNumeric (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/server/commands/data/DataAccessor;Lnet/minecraft/commands/arguments/NbtPathArgument$NbtPath;D)I a
	getSingleTag (Lnet/minecraft/commands/arguments/NbtPathArgument$NbtPath;Lnet/minecraft/server/commands/data/DataAccessor;)Lnet/minecraft/nbt/Tag; a
	insertAtIndex (ILnet/minecraft/nbt/CompoundTag;Lnet/minecraft/commands/arguments/NbtPathArgument$NbtPath;Ljava/util/List;)I a
	manipulateData (Lcom/mojang/brigadier/context/CommandContext;Lnet/minecraft/server/commands/data/DataCommands$DataProvider;Lnet/minecraft/server/commands/data/DataCommands$DataManipulator;Ljava/util/List;)I a
	mergeData (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/server/commands/data/DataAccessor;Lnet/minecraft/nbt/CompoundTag;)I a
	register (Lcom/mojang/brigadier/CommandDispatcher;)V a
	removeData (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/server/commands/data/DataAccessor;Lnet/minecraft/commands/arguments/NbtPathArgument$NbtPath;)I a
net/minecraft/server/commands/data/DataCommands$DataManipulator za$a
net/minecraft/server/commands/data/DataCommands$DataManipulatorDecorator za$b
net/minecraft/server/commands/data/DataCommands$DataProvider za$c
	access (Lcom/mojang/brigadier/context/CommandContext;)Lnet/minecraft/server/commands/data/DataAccessor; a
	wrap (Lcom/mojang/brigadier/builder/ArgumentBuilder;Ljava/util/function/Function;)Lcom/mojang/brigadier/builder/ArgumentBuilder; a
net/minecraft/server/commands/data/EntityDataAccessor zb
	ERROR_NO_PLAYERS b
	PROVIDER a
	entity c
	getData ()Lnet/minecraft/nbt/CompoundTag; a
	getModifiedSuccess ()Lnet/minecraft/network/chat/Component; b
	getPrintSuccess (Lnet/minecraft/commands/arguments/NbtPathArgument$NbtPath;DI)Lnet/minecraft/network/chat/Component; a
	getPrintSuccess (Lnet/minecraft/nbt/Tag;)Lnet/minecraft/network/chat/Component; a
	setData (Lnet/minecraft/nbt/CompoundTag;)V a
net/minecraft/server/commands/data/StorageDataAccessor zc
	PROVIDER a
	SUGGEST_STORAGE b
	id d
	storage c
	getData ()Lnet/minecraft/nbt/CompoundTag; a
	getGlobalTags (Lcom/mojang/brigadier/context/CommandContext;)Lnet/minecraft/world/level/storage/CommandStorage; b
	getModifiedSuccess ()Lnet/minecraft/network/chat/Component; b
	getPrintSuccess (Lnet/minecraft/commands/arguments/NbtPathArgument$NbtPath;DI)Lnet/minecraft/network/chat/Component; a
	getPrintSuccess (Lnet/minecraft/nbt/Tag;)Lnet/minecraft/network/chat/Component; a
	setData (Lnet/minecraft/nbt/CompoundTag;)V a
net/minecraft/server/dedicated/DedicatedPlayerList zf
	LOGGER a
	blackList (Lcom/mojang/authlib/GameProfile;)V c
	canBypassPlayerLimit (Lcom/mojang/authlib/GameProfile;)Z f
	deop (Lcom/mojang/authlib/GameProfile;)V b
	getServer ()Lnet/minecraft/server/MinecraftServer; c
	getServer ()Lnet/minecraft/server/dedicated/DedicatedServer; b
	isWhiteListed (Lcom/mojang/authlib/GameProfile;)Z e
	loadIpBanList ()V x
	loadOps ()V z
	loadUserBanList ()V y
	loadWhiteList ()V B
	op (Lcom/mojang/authlib/GameProfile;)V a
	reloadWhiteList ()V a
	saveIpBanList ()V v
	saveOps ()V A
	saveUserBanList ()V w
	saveWhiteList ()V C
	setUsingWhiteList (Z)V a
	whiteList (Lcom/mojang/authlib/GameProfile;)V d
net/minecraft/server/dedicated/DedicatedServer zg
	LOGGER j
	SHA1 k
	consoleInput l
	gui q
	queryThreadGs4 m
	rconConsoleSource n
	rconThread o
	settings p
	areNpcsEnabled ()Z X
	convertOldUsers ()Z bd
	fillReport (Lnet/minecraft/CrashReport;)Lnet/minecraft/CrashReport; b
	forceDifficulty ()V q
	forceSynchronousWrites ()Z aU
	getAbsoluteMaxWorldSize ()I at
	getCompressionThreshold ()I aw
	getFunctionCompilationLevel ()I h
	getLevelIdName ()Ljava/lang/String; k_
	getMaxTickLength ()J be
	getModdedStatus ()Ljava/util/Optional; o
	getOperatorUserPermissionLevel ()I g
	getPackHash ()Ljava/lang/String; aZ
	getPlayerList ()Lnet/minecraft/server/dedicated/DedicatedPlayerList; bb
	getPlayerList ()Lnet/minecraft/server/players/PlayerList; ad
	getPluginNames ()Ljava/lang/String; j_
	getProperties ()Lnet/minecraft/server/dedicated/DedicatedServerProperties; g_
	getRateLimitPacketsPerSecond ()I k
	getScaledTrackingDistance (I)I b
	getServerIp ()Ljava/lang/String; h_
	getServerName ()Ljava/lang/String; i_
	getServerPort ()I p
	getSpawnProtectionRadius ()I aj
	handleConsoleInput (Ljava/lang/String;Lnet/minecraft/commands/CommandSourceStack;)V a
	handleConsoleInputs ()V ba
	hasGui ()Z ag
	initServer ()Z d
	isCommandBlockEnabled ()Z m
	isDedicatedServer ()Z j
	isEpollEnabled ()Z l
	isHardcore ()Z f
	isNetherEnabled ()Z C
	isPublished ()Z n
	isSingleplayerOwner (Lcom/mojang/authlib/GameProfile;)Z a
	isSnooperEnabled ()Z T
	isSpawningAnimals ()Z W
	isSpawningMonsters ()Z P
	isUnderSpawnProtection (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/player/Player;)Z a
	onServerExit ()V e
	populateSnooper (Lnet/minecraft/world/Snooper;)V a
	publishServer (Lnet/minecraft/world/level/GameType;ZI)Z a
	repliesToStatus ()Z al
	runCommand (Ljava/lang/String;)Ljava/lang/String; a
	setPlayerIdleTimeout (I)V d
	shouldInformAdmins ()Z R_
	shouldRconBroadcast ()Z i
	showGui ()V bc
	stopServer ()V t
	storeUsingWhiteList (Z)V j
	tickChildren (Ljava/util/function/BooleanSupplier;)V b
	waitForRetry ()V bn
net/minecraft/server/dedicated/DedicatedServerProperties zh
	allowFlight g
	allowNether z
	announcePlayerAchievements q
	broadcastConsoleToOps N
	broadcastRconToOps M
	difficulty l
	enableCommandBlock D
	enableJmxMonitoring Q
	enableQuery r
	enableRcon t
	enableStatus R
	enforceWhitelist k
	entityBroadcastRangePercentage S
	forceGameMode j
	functionPermissionLevel G
	gamemode m
	hardcore y
	levelName n
	maxBuildHeight p
	maxPlayers K
	maxTickTime H
	maxWorldSize O
	motd i
	networkCompressionThreshold L
	onlineMode a
	opPermissionLevel F
	playerIdleTimeout T
	preventProxyConnections b
	pvp f
	queryPort s
	rateLimitPacketsPerSecond I
	rconPassword v
	rconPort u
	resourcePack h
	resourcePackHash w
	resourcePackSha1 x
	serverIp c
	serverPort o
	snooperEnabled B
	spawnAnimals d
	spawnMonsters A
	spawnNpcs e
	spawnProtection E
	syncChunkWrites P
	useNativeTransport C
	viewDistance J
	whiteList U
	worldGenSettings V
	fromFile (Lnet/minecraft/core/RegistryAccess;Ljava/nio/file/Path;)Lnet/minecraft/server/dedicated/DedicatedServerProperties; a
	reload (Lnet/minecraft/core/RegistryAccess;Ljava/util/Properties;)Lnet/minecraft/server/dedicated/DedicatedServerProperties; a
	reload (Lnet/minecraft/core/RegistryAccess;Ljava/util/Properties;)Lnet/minecraft/server/dedicated/Settings; b
net/minecraft/server/dedicated/DedicatedServerSettings zi
	properties b
	source a
	forceSave ()V b
	getProperties ()Lnet/minecraft/server/dedicated/DedicatedServerProperties; a
	update (Ljava/util/function/UnaryOperator;)Lnet/minecraft/server/dedicated/DedicatedServerSettings; a
net/minecraft/server/dedicated/ServerWatchdog zj
	LOGGER a
	maxTickTime c
	server b
	exit ()V a
net/minecraft/server/dedicated/Settings zk
	LOGGER a
	properties b
	cloneProperties ()Ljava/util/Properties; a
	dispatchNumberOrString (Ljava/util/function/IntFunction;Ljava/util/function/Function;)Ljava/util/function/Function; a
	get (Ljava/lang/String;I)I a
	get (Ljava/lang/String;J)J a
	get (Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; a
	get (Ljava/lang/String;Ljava/util/function/Function;Ljava/lang/Object;)Ljava/lang/Object; a
	get (Ljava/lang/String;Ljava/util/function/Function;Ljava/util/function/Function;Ljava/lang/Object;)Ljava/lang/Object; a
	get (Ljava/lang/String;Ljava/util/function/Function;Ljava/util/function/UnaryOperator;Ljava/util/function/Function;Ljava/lang/Object;)Ljava/lang/Object; a
	get (Ljava/lang/String;Ljava/util/function/UnaryOperator;I)I a
	get (Ljava/lang/String;Z)Z a
	getLegacy (Ljava/lang/String;Ljava/util/function/Function;)Ljava/lang/Object; a
	getLegacyBoolean (Ljava/lang/String;)Ljava/lang/Boolean; b
	getLegacyString (Ljava/lang/String;)Ljava/lang/String; a
	getMutable (Ljava/lang/String;I)Lnet/minecraft/server/dedicated/Settings$MutableValue; b
	getMutable (Ljava/lang/String;Ljava/util/function/Function;Ljava/lang/Object;)Lnet/minecraft/server/dedicated/Settings$MutableValue; b
	getMutable (Ljava/lang/String;Ljava/util/function/Function;Ljava/util/function/Function;Ljava/lang/Object;)Lnet/minecraft/server/dedicated/Settings$MutableValue; b
	getMutable (Ljava/lang/String;Z)Lnet/minecraft/server/dedicated/Settings$MutableValue; b
	getStringRaw (Ljava/lang/String;)Ljava/lang/String; c
	loadFromFile (Ljava/nio/file/Path;)Ljava/util/Properties; a
	reload (Lnet/minecraft/core/RegistryAccess;Ljava/util/Properties;)Lnet/minecraft/server/dedicated/Settings; b
	store (Ljava/nio/file/Path;)V b
	wrapNumberDeserializer (Ljava/util/function/Function;)Ljava/util/function/Function; a
net/minecraft/server/dedicated/Settings$MutableValue zk$a
	key b
	serializer d
	value c
	update (Lnet/minecraft/core/RegistryAccess;Ljava/lang/Object;)Lnet/minecraft/server/dedicated/Settings; a
net/minecraft/server/gui/MinecraftServerGui zm
	LOGGER b
	MONOSPACED a
	finalizers e
	isClosing f
	logAppenderThread d
	server c
	addFinalizer (Ljava/lang/Runnable;)V a
	buildChatPanel ()Ljavax/swing/JComponent; e
	buildInfoPanel ()Ljavax/swing/JComponent; c
	buildPlayerPanel ()Ljavax/swing/JComponent; d
	close ()V b
	print (Ljavax/swing/JTextArea;Ljavax/swing/JScrollPane;Ljava/lang/String;)V a
	runFinalizers ()V f
	showFrameFor (Lnet/minecraft/server/dedicated/DedicatedServer;)Lnet/minecraft/server/gui/MinecraftServerGui; a
	start ()V a
net/minecraft/server/gui/PlayerListComponent zn
	server a
	tickCount b
	tick ()V a
net/minecraft/server/gui/StatsComponent zo
	DECIMAL_FORMAT a
	msgs d
	server e
	timer f
	values b
	vp c
	close ()V a
	getAverage ([J)D a
	tick ()V b
net/minecraft/server/level/BlockDestructionProgress zq
	id a
	pos b
	progress c
	updatedRenderTick d
	compareTo (Lnet/minecraft/server/level/BlockDestructionProgress;)I a
	getId ()I a
	getPos ()Lnet/minecraft/core/BlockPos; b
	getProgress ()I c
	getUpdatedRenderTick ()I d
	setProgress (I)V a
	updateTick (I)V b
net/minecraft/server/level/ChunkHolder zr
	CHUNK_STATUSES e
	FULL_CHUNK_STATUSES f
	UNLOADED_CHUNK a
	UNLOADED_CHUNK_FUTURE b
	UNLOADED_LEVEL_CHUNK c
	UNLOADED_LEVEL_CHUNK_FUTURE d
	blockChangedLightSectionFilter r
	changedBlocksPerSection q
	chunkToSave k
	entityTickingChunkFuture j
	fullChunkFuture h
	futures g
	hasChangedSections p
	lightEngine t
	oldTicketLevel l
	onLevelChange u
	playerProvider v
	pos o
	queueLevel n
	resendLight x
	skyChangedLightSectionFilter s
	ticketLevel m
	tickingChunkFuture i
	wasAccessibleSinceLastSave w
	blockChanged (Lnet/minecraft/core/BlockPos;)V a
	broadcast (Lnet/minecraft/network/protocol/Packet;Z)V a
	broadcastBlockEntity (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)V a
	broadcastBlockEntityIfNeeded (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V a
	broadcastChanges (Lnet/minecraft/world/level/chunk/LevelChunk;)V a
	getChunkToSave ()Ljava/util/concurrent/CompletableFuture; g
	getEntityTickingChunkFuture ()Ljava/util/concurrent/CompletableFuture; b
	getFullChunkFuture ()Ljava/util/concurrent/CompletableFuture; c
	getFullChunkStatus (I)Lnet/minecraft/server/level/ChunkHolder$FullChunkStatus; c
	getFullStatus ()Lnet/minecraft/server/level/ChunkHolder$FullChunkStatus; h
	getFutureIfPresent (Lnet/minecraft/world/level/chunk/ChunkStatus;)Ljava/util/concurrent/CompletableFuture; b
	getFutureIfPresentUnchecked (Lnet/minecraft/world/level/chunk/ChunkStatus;)Ljava/util/concurrent/CompletableFuture; a
	getLastAvailable ()Lnet/minecraft/world/level/chunk/ChunkAccess; f
	getLastAvailableStatus ()Lnet/minecraft/world/level/chunk/ChunkStatus; e
	getOrScheduleFuture (Lnet/minecraft/world/level/chunk/ChunkStatus;Lnet/minecraft/server/level/ChunkMap;)Ljava/util/concurrent/CompletableFuture; a
	getPos ()Lnet/minecraft/world/level/ChunkPos; i
	getQueueLevel ()I k
	getStatus (I)Lnet/minecraft/world/level/chunk/ChunkStatus; b
	getTicketLevel ()I j
	getTickingChunk ()Lnet/minecraft/world/level/chunk/LevelChunk; d
	getTickingChunkFuture ()Ljava/util/concurrent/CompletableFuture; a
	refreshAccessibility ()V m
	replaceProtoChunk (Lnet/minecraft/world/level/chunk/ImposterProtoChunk;)V a
	sectionLightChanged (Lnet/minecraft/world/level/LightLayer;I)V a
	setQueueLevel (I)V d
	setTicketLevel (I)V a
	updateChunkToSave (Ljava/util/concurrent/CompletableFuture;)V a
	updateFutures (Lnet/minecraft/server/level/ChunkMap;)V a
	wasAccessibleSinceLastSave ()Z l
net/minecraft/server/level/ChunkHolder$ChunkLoadingFailure zr$a
	UNLOADED b
net/minecraft/server/level/ChunkHolder$FullChunkStatus zr$b
	$VALUES e
	BORDER b
	ENTITY_TICKING d
	INACCESSIBLE a
	TICKING c
	isOrAfter (Lnet/minecraft/server/level/ChunkHolder$FullChunkStatus;)Z a
net/minecraft/server/level/ChunkHolder$LevelChangeListener zr$c
	onLevelChange (Lnet/minecraft/world/level/ChunkPos;Ljava/util/function/IntSupplier;ILjava/util/function/IntConsumer;)V a
net/minecraft/server/level/ChunkHolder$PlayerProvider zr$d
	getPlayers (Lnet/minecraft/world/level/ChunkPos;Z)Ljava/util/stream/Stream; a
net/minecraft/server/level/ChunkMap zs
	LOGGER c
	MAX_CHUNK_DISTANCE a
	chunkTypeCache z
	distanceManager t
	entitiesInLevel g
	entityMap y
	generator k
	level h
	lightEngine i
	mainThreadExecutor j
	mainThreadMailbox r
	modified o
	overworldDataStorage l
	pendingUnloads f
	playerMap x
	poiManager m
	progressListener s
	queueSorter p
	storageFolder w
	structureManager v
	tickingGenerated u
	toDrop n
	unloadQueue A
	updatingChunkMap d
	viewDistance B
	visibleChunkMap e
	worldgenMailbox q
	addEntity (Lnet/minecraft/world/entity/Entity;)V a
	broadcast (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/network/protocol/Packet;)V a
	broadcastAndSend (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/network/protocol/Packet;)V b
	checkerboardDistance (Lnet/minecraft/world/level/ChunkPos;II)I a
	checkerboardDistance (Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/server/level/ServerPlayer;Z)I b
	checkerboardDistance (Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/world/entity/Entity;)I b
	dumpChunks (Ljava/io/Writer;)V a
	euclideanDistanceSquared (Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/world/entity/Entity;)D a
	getChunkDebugData (Lnet/minecraft/world/level/ChunkPos;)Ljava/lang/String; a
	getChunkQueueLevel (J)Ljava/util/function/IntSupplier; c
	getChunkRangeFuture (Lnet/minecraft/world/level/ChunkPos;ILjava/util/function/IntFunction;)Ljava/util/concurrent/CompletableFuture; a
	getChunks ()Ljava/lang/Iterable; f
	getDependencyStatus (Lnet/minecraft/world/level/chunk/ChunkStatus;I)Lnet/minecraft/world/level/chunk/ChunkStatus; a
	getDistanceManager ()Lnet/minecraft/server/level/ChunkMap$DistanceManager; e
	getEntityTickingRangeFuture (Lnet/minecraft/world/level/ChunkPos;)Ljava/util/concurrent/CompletableFuture; b
	getLightEngine ()Lnet/minecraft/server/level/ThreadedLevelLightEngine; a
	getPlayers (Lnet/minecraft/world/level/ChunkPos;Z)Ljava/util/stream/Stream; a
	getPoiManager ()Lnet/minecraft/world/entity/ai/village/poi/PoiManager; h
	getTickingGenerated ()I c
	getUpdatingChunkIfPresent (J)Lnet/minecraft/server/level/ChunkHolder; a
	getVisibleChunkIfPresent (J)Lnet/minecraft/server/level/ChunkHolder; b
	isExistingChunkFull (Lnet/minecraft/world/level/ChunkPos;)Z h
	markPosition (Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/world/level/chunk/ChunkStatus$ChunkType;)B a
	markPositionReplaceable (Lnet/minecraft/world/level/ChunkPos;)V g
	move (Lnet/minecraft/server/level/ServerPlayer;)V a
	noPlayersCloseForSpawning (Lnet/minecraft/world/level/ChunkPos;)Z d
	packTicks (Lnet/minecraft/world/level/chunk/LevelChunk;)Ljava/util/concurrent/CompletableFuture; a
	playerLoadedChunk (Lnet/minecraft/server/level/ServerPlayer;[Lnet/minecraft/network/protocol/Packet;Lnet/minecraft/world/level/chunk/LevelChunk;)V a
	postProcess (Lnet/minecraft/server/level/ChunkHolder;)Ljava/util/concurrent/CompletableFuture; a
	printFuture (Ljava/util/concurrent/CompletableFuture;)Ljava/lang/String; a
	processUnloads (Ljava/util/function/BooleanSupplier;)V b
	promoteChunkMap ()Z b
	protoChunkToFullChunk (Lnet/minecraft/server/level/ChunkHolder;)Ljava/util/concurrent/CompletableFuture; c
	readChunk (Lnet/minecraft/world/level/ChunkPos;)Lnet/minecraft/nbt/CompoundTag; i
	releaseLightTicket (Lnet/minecraft/world/level/ChunkPos;)V c
	removeEntity (Lnet/minecraft/world/entity/Entity;)V b
	save (Lnet/minecraft/world/level/chunk/ChunkAccess;)Z a
	saveAllChunks (Z)V a
	schedule (Lnet/minecraft/server/level/ChunkHolder;Lnet/minecraft/world/level/chunk/ChunkStatus;)Ljava/util/concurrent/CompletableFuture; a
	scheduleChunkGeneration (Lnet/minecraft/server/level/ChunkHolder;Lnet/minecraft/world/level/chunk/ChunkStatus;)Ljava/util/concurrent/CompletableFuture; b
	scheduleChunkLoad (Lnet/minecraft/world/level/ChunkPos;)Ljava/util/concurrent/CompletableFuture; f
	scheduleUnload (JLnet/minecraft/server/level/ChunkHolder;)V a
	setViewDistance (I)V a
	size ()I d
	skipPlayer (Lnet/minecraft/server/level/ServerPlayer;)Z b
	tick ()V g
	tick (Ljava/util/function/BooleanSupplier;)V a
	unpackTicks (Lnet/minecraft/server/level/ChunkHolder;)Ljava/util/concurrent/CompletableFuture; b
	updateChunkScheduling (JILnet/minecraft/server/level/ChunkHolder;I)Lnet/minecraft/server/level/ChunkHolder; a
	updateChunkTracking (Lnet/minecraft/server/level/ServerPlayer;Lnet/minecraft/world/level/ChunkPos;[Lnet/minecraft/network/protocol/Packet;ZZ)V a
	updatePlayerPos (Lnet/minecraft/server/level/ServerPlayer;)Lnet/minecraft/core/SectionPos; c
	updatePlayerStatus (Lnet/minecraft/server/level/ServerPlayer;Z)V a
net/minecraft/server/level/ChunkMap$DistanceManager zs$a
	getChunk (J)Lnet/minecraft/server/level/ChunkHolder; b
	isChunkToRemove (J)Z a
	updateChunkScheduling (JILnet/minecraft/server/level/ChunkHolder;I)Lnet/minecraft/server/level/ChunkHolder; a
net/minecraft/server/level/ChunkMap$TrackedEntity zs$b
	entity c
	lastSectionPos e
	range d
	seenBy f
	serverEntity b
	broadcast (Lnet/minecraft/network/protocol/Packet;)V a
	broadcastAndSend (Lnet/minecraft/network/protocol/Packet;)V b
	broadcastRemoved ()V a
	getEffectiveRange ()I b
	removePlayer (Lnet/minecraft/server/level/ServerPlayer;)V a
	scaledRange (I)I a
	updatePlayer (Lnet/minecraft/server/level/ServerPlayer;)V b
	updatePlayers (Ljava/util/List;)V a
net/minecraft/server/level/ChunkTaskPriorityQueue zt
	PRIORITY_LEVEL_COUNT a
	acquired e
	firstQueue c
	maxTasks f
	name d
	taskQueue b
	acquire (J)Ljava/lang/Runnable; a
	getAcquired ()Lit/unimi/dsi/fastutil/longs/LongSet; b
	pop ()Ljava/util/stream/Stream; a
	release (JZ)V a
	resortChunkTasks (ILnet/minecraft/world/level/ChunkPos;I)V a
	submit (Ljava/util/Optional;JI)V a
net/minecraft/server/level/ChunkTaskPriorityQueueSorter zu
	LOGGER a
	mailbox d
	queues b
	sleeping c
	getDebugStatus ()Ljava/lang/String; a
	getProcessor (Lnet/minecraft/util/thread/ProcessorHandle;Z)Lnet/minecraft/util/thread/ProcessorHandle; a
	getQueue (Lnet/minecraft/util/thread/ProcessorHandle;)Lnet/minecraft/server/level/ChunkTaskPriorityQueue; b
	getReleaseProcessor (Lnet/minecraft/util/thread/ProcessorHandle;)Lnet/minecraft/util/thread/ProcessorHandle; a
	message (Ljava/lang/Runnable;JLjava/util/function/IntSupplier;)Lnet/minecraft/server/level/ChunkTaskPriorityQueueSorter$Message; a
	message (Ljava/util/function/Function;JLjava/util/function/IntSupplier;)Lnet/minecraft/server/level/ChunkTaskPriorityQueueSorter$Message; a
	message (Lnet/minecraft/server/level/ChunkHolder;Ljava/lang/Runnable;)Lnet/minecraft/server/level/ChunkTaskPriorityQueueSorter$Message; a
	message (Lnet/minecraft/server/level/ChunkHolder;Ljava/util/function/Function;)Lnet/minecraft/server/level/ChunkTaskPriorityQueueSorter$Message; a
	onLevelChange (Lnet/minecraft/world/level/ChunkPos;Ljava/util/function/IntSupplier;ILjava/util/function/IntConsumer;)V a
	pollTask (Lnet/minecraft/server/level/ChunkTaskPriorityQueue;Lnet/minecraft/util/thread/ProcessorHandle;)V a
	release (Ljava/lang/Runnable;JZ)Lnet/minecraft/server/level/ChunkTaskPriorityQueueSorter$Release; a
	release (Lnet/minecraft/util/thread/ProcessorHandle;JLjava/lang/Runnable;Z)V a
	submit (Lnet/minecraft/util/thread/ProcessorHandle;Ljava/util/function/Function;JLjava/util/function/IntSupplier;Z)V a
net/minecraft/server/level/ChunkTaskPriorityQueueSorter$Message zu$a
	level c
	pos b
	task a
net/minecraft/server/level/ChunkTaskPriorityQueueSorter$Release zu$b
	clearQueue c
	pos b
	task a
net/minecraft/server/level/ChunkTracker zv
	checkNeighborsAfterUpdate (JIZ)V a
	computeLevelFromNeighbor (JJI)I b
	getComputedLevel (JJI)I a
	getLevelFromSource (J)I b
	isSource (J)Z a
	update (JIZ)V b
net/minecraft/server/level/ColumnPos zw
	x a
	z b
	asLong (II)J a
	toChunkPos ()Lnet/minecraft/world/level/ChunkPos; a
	toLong ()J b
net/minecraft/server/level/DemoMode zx
	demoEndedReminder e
	demoHasEnded d
	displayedIntro c
	gameModeTicks f
	handleBlockBreakAction (Lnet/minecraft/core/BlockPos;Lnet/minecraft/network/protocol/game/ServerboundPlayerActionPacket$Action;Lnet/minecraft/core/Direction;I)V a
	outputDemoReminder ()V f
	tick ()V a
	useItem (Lnet/minecraft/server/level/ServerPlayer;Lnet/minecraft/world/level/Level;Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResult; a
	useItemOn (Lnet/minecraft/server/level/ServerPlayer;Lnet/minecraft/world/level/Level;Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/InteractionHand;Lnet/minecraft/world/phys/BlockHitResult;)Lnet/minecraft/world/InteractionResult; a
net/minecraft/server/level/DistanceManager zy
	LOGGER a
	PLAYER_TICKET_LEVEL b
	chunksToUpdateFutures h
	mainThreadExecutor m
	naturalSpawnChunkCounter f
	playerTicketManager g
	playersPerChunk c
	ticketThrottler i
	ticketThrottlerInput j
	ticketThrottlerReleaser k
	ticketTickCounter n
	ticketTracker e
	tickets d
	ticketsToRelease l
	addPlayer (Lnet/minecraft/core/SectionPos;Lnet/minecraft/server/level/ServerPlayer;)V a
	addRegionTicket (Lnet/minecraft/server/level/TicketType;Lnet/minecraft/world/level/ChunkPos;ILjava/lang/Object;)V c
	addTicket (JLnet/minecraft/server/level/Ticket;)V a
	addTicket (Lnet/minecraft/server/level/TicketType;Lnet/minecraft/world/level/ChunkPos;ILjava/lang/Object;)V a
	dumpTickets (Ljava/lang/String;)V a
	getChunk (J)Lnet/minecraft/server/level/ChunkHolder; b
	getDebugStatus ()Ljava/lang/String; c
	getNaturalSpawnChunkCount ()I b
	getTicketDebugString (J)Ljava/lang/String; c
	getTicketLevelAt (Lnet/minecraft/util/SortedArraySet;)I a
	getTickets (J)Lnet/minecraft/util/SortedArraySet; e
	hasPlayersNearby (J)Z d
	isChunkToRemove (J)Z a
	purgeStaleTickets ()V a
	removePlayer (Lnet/minecraft/core/SectionPos;Lnet/minecraft/server/level/ServerPlayer;)V b
	removeRegionTicket (Lnet/minecraft/server/level/TicketType;Lnet/minecraft/world/level/ChunkPos;ILjava/lang/Object;)V d
	removeTicket (JLnet/minecraft/server/level/Ticket;)V b
	removeTicket (Lnet/minecraft/server/level/TicketType;Lnet/minecraft/world/level/ChunkPos;ILjava/lang/Object;)V b
	runAllUpdates (Lnet/minecraft/server/level/ChunkMap;)Z a
	updateChunkForced (Lnet/minecraft/world/level/ChunkPos;Z)V a
	updateChunkScheduling (JILnet/minecraft/server/level/ChunkHolder;I)Lnet/minecraft/server/level/ChunkHolder; a
	updatePlayerTickets (I)V a
net/minecraft/server/level/DistanceManager$ChunkTicketTracker zy$a
	getLevel (J)I c
	getLevelFromSource (J)I b
	runDistanceUpdates (I)I a
	setLevel (JI)V a
net/minecraft/server/level/DistanceManager$FixedPlayerDistanceChunkTracker zy$b
	chunks a
	maxDistance b
	dumpChunks (Ljava/lang/String;)V a
	getLevel (J)I c
	getLevelFromSource (J)I b
	havePlayer (J)Z d
	onLevelChange (JII)V a
	runAllUpdates ()V a
	setLevel (JI)V a
net/minecraft/server/level/DistanceManager$PlayerTicketTracker zy$c
	queueLevels f
	toUpdate g
	viewDistance e
	haveTicketFor (I)Z c
	onLevelChange (JII)V a
	onLevelChange (JIZZ)V a
	runAllUpdates ()V a
	updateViewDistance (I)V a
net/minecraft/server/level/FeatureSimulator zz
	maxPos b
	minPos a
	destroyBlock (Lnet/minecraft/core/BlockPos;ZLnet/minecraft/world/entity/Entity;I)Z a
	getBoundingBox ()Lnet/minecraft/world/level/levelgen/structure/BoundingBox; a
	getHeightmapPos (Lnet/minecraft/world/level/levelgen/Heightmap$Types;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/core/BlockPos; a
	isFluidAtPosition (Lnet/minecraft/core/BlockPos;Ljava/util/function/Predicate;)Z b
	isStateAtPosition (Lnet/minecraft/core/BlockPos;Ljava/util/function/Predicate;)Z a
	removeBlock (Lnet/minecraft/core/BlockPos;Z)Z a
	setBlock (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;II)Z a
net/minecraft/server/level/PlayerMap aaa
	players a
	addPlayer (JLnet/minecraft/server/level/ServerPlayer;Z)V a
	getPlayers (J)Ljava/util/stream/Stream; a
	ignorePlayer (Lnet/minecraft/server/level/ServerPlayer;)V a
	ignored (Lnet/minecraft/server/level/ServerPlayer;)Z d
	ignoredOrUnknown (Lnet/minecraft/server/level/ServerPlayer;)Z c
	removePlayer (JLnet/minecraft/server/level/ServerPlayer;)V a
	unIgnorePlayer (Lnet/minecraft/server/level/ServerPlayer;)V b
	updatePlayer (JJLnet/minecraft/server/level/ServerPlayer;)V a
net/minecraft/server/level/PlayerRespawnLogic aab
	getOverworldRespawnPos (Lnet/minecraft/server/level/ServerLevel;IIZ)Lnet/minecraft/core/BlockPos; a
	getSpawnPosInChunk (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/level/ChunkPos;Z)Lnet/minecraft/core/BlockPos; a
net/minecraft/server/level/SectionTracker aac
	checkNeighborsAfterUpdate (JIZ)V a
	computeLevelFromNeighbor (JJI)I b
	getComputedLevel (JJI)I a
	getLevelFromSource (J)I b
	isSource (J)Z a
	update (JIZ)V b
net/minecraft/server/level/ServerBossEvent aad
	players h
	unmodifiablePlayers i
	visible j
	addPlayer (Lnet/minecraft/server/level/ServerPlayer;)V a
	broadcast (Lnet/minecraft/network/protocol/game/ClientboundBossEventPacket$Operation;)V a
	getPlayers ()Ljava/util/Collection; h
	isVisible ()Z g
	removeAllPlayers ()V b
	removePlayer (Lnet/minecraft/server/level/ServerPlayer;)V b
	setColor (Lnet/minecraft/world/BossEvent$BossBarColor;)V a
	setCreateWorldFog (Z)Lnet/minecraft/world/BossEvent; c
	setDarkenScreen (Z)Lnet/minecraft/world/BossEvent; a
	setName (Lnet/minecraft/network/chat/Component;)V a
	setOverlay (Lnet/minecraft/world/BossEvent$BossBarOverlay;)V a
	setPercent (F)V a
	setPlayBossMusic (Z)Lnet/minecraft/world/BossEvent; b
	setVisible (Z)V d
net/minecraft/server/level/ServerChunkCache aae
	CHUNK_STATUSES b
	chunkMap a
	dataStorage i
	distanceManager c
	generator d
	lastChunk o
	lastChunkPos m
	lastChunkStatus n
	lastInhabitedUpdate j
	lastSpawnState p
	level e
	lightEngine g
	mainThread f
	mainThreadProcessor h
	spawnEnemies k
	spawnFriendlies l
	addEntity (Lnet/minecraft/world/entity/Entity;)V c
	addRegionTicket (Lnet/minecraft/server/level/TicketType;Lnet/minecraft/world/level/ChunkPos;ILjava/lang/Object;)V a
	blockChanged (Lnet/minecraft/core/BlockPos;)V b
	broadcast (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/network/protocol/Packet;)V b
	broadcastAndSend (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/network/protocol/Packet;)V a
	checkChunkFuture (JLjava/util/function/Function;)Z a
	chunkAbsent (Lnet/minecraft/server/level/ChunkHolder;I)Z a
	clearCache ()V n
	gatherStats ()Ljava/lang/String; e
	getChunk (IILnet/minecraft/world/level/chunk/ChunkStatus;Z)Lnet/minecraft/world/level/chunk/ChunkAccess; a
	getChunkDebugData (Lnet/minecraft/world/level/ChunkPos;)Ljava/lang/String; b
	getChunkForLighting (II)Lnet/minecraft/world/level/BlockGetter; c
	getChunkFuture (IILnet/minecraft/world/level/chunk/ChunkStatus;Z)Ljava/util/concurrent/CompletableFuture; b
	getChunkFutureMainThread (IILnet/minecraft/world/level/chunk/ChunkStatus;Z)Ljava/util/concurrent/CompletableFuture; c
	getChunkNow (II)Lnet/minecraft/world/level/chunk/LevelChunk; a
	getDataStorage ()Lnet/minecraft/world/level/storage/DimensionDataStorage; i
	getFullChunk (JLjava/util/function/Consumer;)V a
	getGenerator ()Lnet/minecraft/world/level/chunk/ChunkGenerator; g
	getLastSpawnState ()Lnet/minecraft/world/level/NaturalSpawner$SpawnState; k
	getLevel ()Lnet/minecraft/world/level/BlockGetter; m
	getLevel ()Lnet/minecraft/world/level/Level; c
	getLightEngine ()Lnet/minecraft/server/level/ThreadedLevelLightEngine; a
	getLightEngine ()Lnet/minecraft/world/level/lighting/LevelLightEngine; l
	getLoadedChunksCount ()I h
	getPendingTasksCount ()I f
	getPoiManager ()Lnet/minecraft/world/entity/ai/village/poi/PoiManager; j
	getTickingGenerated ()I b
	getVisibleChunkIfPresent (J)Lnet/minecraft/server/level/ChunkHolder; a
	hasChunk (II)Z b
	isEntityTickingChunk (Lnet/minecraft/world/entity/Entity;)Z a
	isEntityTickingChunk (Lnet/minecraft/world/level/ChunkPos;)Z a
	isTickingChunk (Lnet/minecraft/core/BlockPos;)Z a
	move (Lnet/minecraft/server/level/ServerPlayer;)V a
	onLightUpdate (Lnet/minecraft/world/level/LightLayer;Lnet/minecraft/core/SectionPos;)V a
	pollTask ()Z d
	removeEntity (Lnet/minecraft/world/entity/Entity;)V b
	removeRegionTicket (Lnet/minecraft/server/level/TicketType;Lnet/minecraft/world/level/ChunkPos;ILjava/lang/Object;)V b
	runDistanceManagerUpdates ()Z o
	save (Z)V a
	setSpawnSettings (ZZ)V a
	setViewDistance (I)V a
	storeInCache (JLnet/minecraft/world/level/chunk/ChunkAccess;Lnet/minecraft/world/level/chunk/ChunkStatus;)V a
	tick (Ljava/util/function/BooleanSupplier;)V a
	tickChunks ()V p
	updateChunkForced (Lnet/minecraft/world/level/ChunkPos;Z)V a
net/minecraft/server/level/ServerChunkCache$MainThreadExecutor aae$a
	doRunTask (Ljava/lang/Runnable;)V c
	getRunningThread ()Ljava/lang/Thread; av
	pollTask ()Z y
	scheduleExecutables ()Z au
	shouldRun (Ljava/lang/Runnable;)Z d
	wrapRunnable (Ljava/lang/Runnable;)Ljava/lang/Runnable; e
net/minecraft/server/level/ServerEntity aaf
	LOGGER a
	ap m
	broadcast f
	entity c
	lastPassengers p
	level b
	teleportDelay o
	tickCount n
	trackDelta e
	updateInterval d
	wasOnGround r
	wasRiding q
	xRotp k
	xp g
	yHeadRotp l
	yRotp j
	yp h
	zp i
	addPairing (Lnet/minecraft/server/level/ServerPlayer;)V b
	broadcastAndSend (Lnet/minecraft/network/protocol/Packet;)V a
	removePairing (Lnet/minecraft/server/level/ServerPlayer;)V a
	sendChanges ()V a
	sendDirtyEntityData ()V c
	sendPairingData (Ljava/util/function/Consumer;)V a
	sentPos ()Lnet/minecraft/world/phys/Vec3; b
	updateSentPos ()V d
net/minecraft/server/level/ServerLevel aag
	END_SPAWN_POINT a
	LOGGER x
	allPlayersSleeping F
	blockEvents L
	blockTicks I
	chunkSource C
	customSpawners N
	dragonFight O
	emptyTime G
	entitiesById y
	entitiesByUuid z
	handlingTick M
	liquidTicks J
	navigations K
	noSave c
	players B
	portalForcer H
	raids d
	server D
	serverLevelData E
	structureFeatureManager P
	tickTime Q
	tickingEntities b
	toAddAfterTick A
	add (Lnet/minecraft/world/entity/Entity;)V o
	addDuringCommandTeleport (Lnet/minecraft/server/level/ServerPlayer;)V a
	addDuringPortalTeleport (Lnet/minecraft/server/level/ServerPlayer;)V b
	addEntity (Lnet/minecraft/world/entity/Entity;)Z m
	addFreshEntity (Lnet/minecraft/world/entity/Entity;)Z c
	addFromAnotherDimension (Lnet/minecraft/world/entity/Entity;)V e
	addNewPlayer (Lnet/minecraft/server/level/ServerPlayer;)V c
	addPlayer (Lnet/minecraft/server/level/ServerPlayer;)V f
	addRespawnedPlayer (Lnet/minecraft/server/level/ServerPlayer;)V d
	addWithUUID (Lnet/minecraft/world/entity/Entity;)Z d
	blockEvent (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Block;II)V a
	blockUpdated (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Block;)V a
	broadcastEntityEvent (Lnet/minecraft/world/entity/Entity;B)V a
	clearBlockEvents (Lnet/minecraft/world/level/levelgen/structure/BoundingBox;)V a
	despawn (Lnet/minecraft/world/entity/Entity;)V i
	destroyBlockProgress (ILnet/minecraft/core/BlockPos;I)V a
	doBlockEvent (Lnet/minecraft/world/level/BlockEventData;)Z a
	dragonFight ()Lnet/minecraft/world/level/dimension/end/EndDragonFight; D
	dumpBlockEntities (Ljava/io/Writer;)V a
	dumpEntities (Ljava/io/Writer;Ljava/lang/Iterable;)V a
	explode (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/damagesource/DamageSource;Lnet/minecraft/world/level/ExplosionDamageCalculator;DDDFZLnet/minecraft/world/level/Explosion$BlockInteraction;)Lnet/minecraft/world/level/Explosion; a
	findAddedOrPendingEntity (Ljava/util/UUID;)Lnet/minecraft/world/entity/Entity; c
	findLightingTargetAround (Lnet/minecraft/core/BlockPos;)Lnet/minecraft/core/BlockPos; a
	findNearestBiome (Lnet/minecraft/world/level/biome/Biome;Lnet/minecraft/core/BlockPos;II)Lnet/minecraft/core/BlockPos; a
	findNearestMapFeature (Lnet/minecraft/world/level/levelgen/feature/StructureFeature;Lnet/minecraft/core/BlockPos;IZ)Lnet/minecraft/core/BlockPos; a
	getAllEntities ()Ljava/lang/Iterable; A
	getBlockTicks ()Lnet/minecraft/world/level/ServerTickList; j
	getBlockTicks ()Lnet/minecraft/world/level/TickList; I
	getChunkSource ()Lnet/minecraft/server/level/ServerChunkCache; i
	getChunkSource ()Lnet/minecraft/world/level/chunk/ChunkSource; G
	getDataStorage ()Lnet/minecraft/world/level/storage/DimensionDataStorage; s
	getDragons ()Ljava/util/List; g
	getEntities (Lnet/minecraft/world/entity/EntityType;Ljava/util/function/Predicate;)Ljava/util/List; a
	getEntity (I)Lnet/minecraft/world/entity/Entity; a
	getEntity (Ljava/util/UUID;)Lnet/minecraft/world/entity/Entity; a
	getForcedChunks ()Lit/unimi/dsi/fastutil/longs/LongSet; w
	getFreeMapId ()I t
	getLevel ()Lnet/minecraft/server/level/ServerLevel; E
	getLiquidTicks ()Lnet/minecraft/world/level/ServerTickList; r_
	getLiquidTicks ()Lnet/minecraft/world/level/TickList; H
	getMapData (Ljava/lang/String;)Lnet/minecraft/world/level/saveddata/maps/MapItemSavedData; a
	getPlayers (Ljava/util/function/Predicate;)Ljava/util/List; a
	getPoiManager ()Lnet/minecraft/world/entity/ai/village/poi/PoiManager; y
	getPortalForcer ()Lnet/minecraft/world/level/portal/PortalForcer; m
	getRaidAt (Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/entity/raid/Raid; b_
	getRaids ()Lnet/minecraft/world/entity/raid/Raids; z
	getRandomPlayer ()Lnet/minecraft/server/level/ServerPlayer; q_
	getRecipeManager ()Lnet/minecraft/world/item/crafting/RecipeManager; o
	getScoreboard ()Lnet/minecraft/server/ServerScoreboard; o_
	getScoreboard ()Lnet/minecraft/world/scores/Scoreboard; F
	getSeed ()J C
	getServer ()Lnet/minecraft/server/MinecraftServer; l
	getShade (Lnet/minecraft/core/Direction;Z)F a
	getSharedSpawnAngle ()F v
	getSharedSpawnPos ()Lnet/minecraft/core/BlockPos; u
	getStructureManager ()Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureManager; n
	getTagManager ()Lnet/minecraft/tags/TagContainer; p
	getUncachedNoiseBiome (III)Lnet/minecraft/world/level/biome/Biome; a
	globalLevelEvent (ILnet/minecraft/core/BlockPos;I)V b
	isCloseToVillage (Lnet/minecraft/core/BlockPos;I)Z a
	isFlat ()Z B
	isHandlingTick ()Z m_
	isRaided (Lnet/minecraft/core/BlockPos;)Z c_
	isUUIDUsed (Lnet/minecraft/world/entity/Entity;)Z n
	isVillage (Lnet/minecraft/core/BlockPos;)Z a_
	isVillage (Lnet/minecraft/core/SectionPos;)Z a
	levelEvent (Lnet/minecraft/world/entity/player/Player;ILnet/minecraft/core/BlockPos;I)V a
	loadFromChunk (Lnet/minecraft/world/entity/Entity;)Z f
	makeObsidianPlatform (Lnet/minecraft/server/level/ServerLevel;)V a
	mayInteract (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/core/BlockPos;)Z a
	noSave ()Z q
	onBlockStateChange (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/state/BlockState;)V a
	onEntityRemoved (Lnet/minecraft/world/entity/Entity;)V h
	onReputationEvent (Lnet/minecraft/world/entity/ai/village/ReputationEventType;Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/entity/ReputationEventHandler;)V a
	playSound (Lnet/minecraft/world/entity/player/Player;DDDLnet/minecraft/sounds/SoundEvent;Lnet/minecraft/sounds/SoundSource;FF)V a
	playSound (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/entity/Entity;Lnet/minecraft/sounds/SoundEvent;Lnet/minecraft/sounds/SoundSource;FF)V a
	players ()Ljava/util/List; x
	registryAccess ()Lnet/minecraft/core/RegistryAccess; r
	removeFromChunk (Lnet/minecraft/world/entity/Entity;)V p
	removePlayerImmediately (Lnet/minecraft/server/level/ServerPlayer;)V e
	resetEmptyTime ()V p_
	runBlockEvents ()V aj
	save (Lnet/minecraft/util/ProgressListener;ZZ)V a
	saveDebugReport (Ljava/nio/file/Path;)V a
	saveLevelData ()V ai
	sectionsToVillage (Lnet/minecraft/core/SectionPos;)I b
	sendBlockUpdated (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/state/BlockState;I)V a
	sendParticles (Lnet/minecraft/core/particles/ParticleOptions;DDDIDDDD)I a
	sendParticles (Lnet/minecraft/server/level/ServerPlayer;Lnet/minecraft/core/particles/ParticleOptions;ZDDDIDDDD)Z a
	sendParticles (Lnet/minecraft/server/level/ServerPlayer;ZDDDLnet/minecraft/network/protocol/Packet;)Z a
	setChunkForced (IIZ)Z a
	setDayTime (J)V a
	setDefaultSpawnPos (Lnet/minecraft/core/BlockPos;F)V a
	setMapData (Lnet/minecraft/world/level/saveddata/maps/MapItemSavedData;)V a
	setWeatherParameters (IIZZ)V a
	startsForFeature (Lnet/minecraft/core/SectionPos;Lnet/minecraft/world/level/levelgen/feature/StructureFeature;)Ljava/util/stream/Stream; a
	stopWeather ()V ah
	structureFeatureManager ()Lnet/minecraft/world/level/StructureFeatureManager; a
	tick (Ljava/util/function/BooleanSupplier;)V a
	tickBlock (Lnet/minecraft/world/level/TickNextTickData;)V b
	tickChunk (Lnet/minecraft/world/level/chunk/LevelChunk;I)V a
	tickCustomSpawners (ZZ)V a
	tickLiquid (Lnet/minecraft/world/level/TickNextTickData;)V a
	tickNonPassenger (Lnet/minecraft/world/entity/Entity;)V a
	tickPassenger (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/entity/Entity;)V a
	tickTime ()V b
	tryAddFreshEntityWithPassengers (Lnet/minecraft/world/entity/Entity;)Z g
	unload (Lnet/minecraft/world/level/chunk/LevelChunk;)V a
	updateChunkPos (Lnet/minecraft/world/entity/Entity;)V b
	updateSleepingPlayerList ()V n_
	wakeUpAllPlayers ()V ag
net/minecraft/server/level/ServerPlayer aah
	LOGGER bJ
	advancements bL
	camera cb
	canChatColor bZ
	chatVisibility bY
	connection b
	containerCounter co
	disconnected ch
	enteredNetherPosition ci
	entitiesToRemove bK
	gameMode d
	ignoreSlotUpdateHack e
	isChangingDimension cc
	lastActionTime ca
	lastFoodSaturationZero bV
	lastRecordedAirLevel bP
	lastRecordedArmor bQ
	lastRecordedExperience bS
	lastRecordedFoodLevel bO
	lastRecordedHealthAndAbsorption bN
	lastRecordedLevel bR
	lastSectionPos cj
	lastSentExp bW
	lastSentFood bU
	lastSentHealth bT
	latency f
	levitationStartPos cf
	levitationStartTime cg
	recipeBook ce
	respawnAngle cn
	respawnDimension ck
	respawnForced cm
	respawnPosition cl
	seenCredits cd
	server c
	spawnInvulnerableTime bX
	stats bM
	wonGame g
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	attack (Lnet/minecraft/world/entity/Entity;)V f
	awardKillScore (Lnet/minecraft/world/entity/Entity;ILnet/minecraft/world/damagesource/DamageSource;)V a
	awardRecipes (Ljava/util/Collection;)I a
	awardRecipesByKey ([Lnet/minecraft/resources/ResourceLocation;)V a
	awardStat (Lnet/minecraft/stats/Stat;I)V a
	bedBlocked (Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;)Z b
	bedInRange (Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;)Z a
	broadcast (Lnet/minecraft/world/level/block/entity/BlockEntity;)V a
	broadcastCarriedItem ()V n
	broadcastToPlayer (Lnet/minecraft/server/level/ServerPlayer;)Z a
	canChatInColor ()Z w
	canHarmPlayer (Lnet/minecraft/world/entity/player/Player;)Z a
	cancelRemoveEntity (Lnet/minecraft/world/entity/Entity;)V d
	changeDimension (Lnet/minecraft/server/level/ServerLevel;)Lnet/minecraft/world/entity/Entity; b
	checkFallDamage (DZLnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/BlockPos;)V a
	closeContainer ()V m
	completeUsingItem ()V s
	createEndPlatform (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;)V a
	createItemCooldowns ()Lnet/minecraft/world/item/ItemCooldowns; i
	crit (Lnet/minecraft/world/entity/Entity;)V a
	die (Lnet/minecraft/world/damagesource/DamageSource;)V a
	disconnect ()V p
	displayClientMessage (Lnet/minecraft/network/chat/Component;Z)V a
	doCheckFallDamage (DZ)V a
	doCloseContainer ()V o
	doTick ()V v_
	drop (Lnet/minecraft/world/item/ItemStack;ZZ)Lnet/minecraft/world/entity/item/ItemEntity; a
	findDimensionEntryPoint (Lnet/minecraft/server/level/ServerLevel;)Lnet/minecraft/world/level/portal/PortalInfo; a
	fudgeSpawnLocation (Lnet/minecraft/server/level/ServerLevel;)V c
	getAddEntityPacket ()Lnet/minecraft/network/protocol/Packet; P
	getAdvancements ()Lnet/minecraft/server/PlayerAdvancements; J
	getCamera ()Lnet/minecraft/world/entity/Entity; D
	getChatVisibility ()Lnet/minecraft/world/entity/player/ChatVisiblity; x
	getCoprime (I)I u
	getExitPortal (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Z)Ljava/util/Optional; a
	getIpAddress ()Ljava/lang/String; v
	getLastActionTime ()J F
	getLastSectionPos ()Lnet/minecraft/core/SectionPos; O
	getLevel ()Lnet/minecraft/server/level/ServerLevel; u
	getPermissionLevel ()I y
	getRecipeBook ()Lnet/minecraft/stats/ServerRecipeBook; B
	getRespawnAngle ()F L
	getRespawnDimension ()Lnet/minecraft/resources/ResourceKey; M
	getRespawnPosition ()Lnet/minecraft/core/BlockPos; K
	getStats ()Lnet/minecraft/stats/ServerStatsCounter; A
	getTabListDisplayName ()Lnet/minecraft/network/chat/Component; G
	giveExperienceLevels (I)V c
	giveExperiencePoints (I)V d
	handleTeamKill (Ljava/lang/String;Ljava/lang/String;[Lnet/minecraft/world/scores/criteria/ObjectiveCriteria;)V a
	hasChangedDimension ()V I
	hasDisconnected ()Z q
	hurt (Lnet/minecraft/world/damagesource/DamageSource;F)Z a
	initMenu ()V f
	isChangingDimension ()Z H
	isCreative ()Z b_
	isInvulnerableTo (Lnet/minecraft/world/damagesource/DamageSource;)Z b
	isPvpAllowed ()Z eW
	isReachableBedBlock (Lnet/minecraft/core/BlockPos;)Z g
	isRespawnForced ()Z N
	isSpectator ()Z a_
	lookAt (Lnet/minecraft/commands/arguments/EntityAnchorArgument$Anchor;Lnet/minecraft/world/entity/Entity;Lnet/minecraft/commands/arguments/EntityAnchorArgument$Anchor;)V a
	lookAt (Lnet/minecraft/commands/arguments/EntityAnchorArgument$Anchor;Lnet/minecraft/world/phys/Vec3;)V a
	magicCrit (Lnet/minecraft/world/entity/Entity;)V b
	moveTo (DDD)V b
	nextContainerCounter ()V eX
	onChangedBlock (Lnet/minecraft/core/BlockPos;)V c
	onEffectAdded (Lnet/minecraft/world/effect/MobEffectInstance;)V a
	onEffectRemoved (Lnet/minecraft/world/effect/MobEffectInstance;)V b
	onEffectUpdated (Lnet/minecraft/world/effect/MobEffectInstance;Z)V a
	onEnchantmentPerformed (Lnet/minecraft/world/item/ItemStack;I)V a
	onEnterCombat ()V g
	onInsideBlock (Lnet/minecraft/world/level/block/state/BlockState;)V a
	onLeaveCombat ()V h
	onUpdateAbilities ()V t
	openCommandBlock (Lnet/minecraft/world/level/block/entity/CommandBlockEntity;)V a
	openHorseInventory (Lnet/minecraft/world/entity/animal/horse/AbstractHorse;Lnet/minecraft/world/Container;)V a
	openItemGui (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/InteractionHand;)V a
	openMenu (Lnet/minecraft/world/MenuProvider;)Ljava/util/OptionalInt; a
	openTextEdit (Lnet/minecraft/world/level/block/entity/SignBlockEntity;)V a
	playNotifySound (Lnet/minecraft/sounds/SoundEvent;Lnet/minecraft/sounds/SoundSource;FF)V a
	processPortalCooldown ()V E
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	refreshContainer (Lnet/minecraft/world/inventory/AbstractContainerMenu;)V a
	refreshContainer (Lnet/minecraft/world/inventory/AbstractContainerMenu;Lnet/minecraft/core/NonNullList;)V a
	resetLastActionTime ()V z
	resetRecipes (Ljava/util/Collection;)I b
	resetSentInfo ()V r
	resetStat (Lnet/minecraft/stats/Stat;)V a
	restoreFrom (Lnet/minecraft/server/level/ServerPlayer;Z)V a
	sendMerchantOffers (ILnet/minecraft/world/item/trading/MerchantOffers;IIZZ)V a
	sendMessage (Lnet/minecraft/network/chat/Component;Ljava/util/UUID;)V a
	sendMessage (Lnet/minecraft/network/chat/Component;Lnet/minecraft/network/chat/ChatType;Ljava/util/UUID;)V a
	sendRemoveEntity (Lnet/minecraft/world/entity/Entity;)V c
	sendTexturePack (Ljava/lang/String;Ljava/lang/String;)V a
	setCamera (Lnet/minecraft/world/entity/Entity;)V e
	setContainerData (Lnet/minecraft/world/inventory/AbstractContainerMenu;II)V a
	setExperienceLevels (I)V b
	setExperiencePoints (I)V a
	setGameMode (Lnet/minecraft/world/level/GameType;)V a
	setLastSectionPos (Lnet/minecraft/core/SectionPos;)V a
	setPlayerInput (FFZZ)V a
	setRespawnPosition (Lnet/minecraft/resources/ResourceKey;Lnet/minecraft/core/BlockPos;FZZ)V a
	slotChanged (Lnet/minecraft/world/inventory/AbstractContainerMenu;ILnet/minecraft/world/item/ItemStack;)V a
	startRiding (Lnet/minecraft/world/entity/Entity;Z)Z a
	startSleepInBed (Lnet/minecraft/core/BlockPos;)Lcom/mojang/datafixers/util/Either; a
	startSleeping (Lnet/minecraft/core/BlockPos;)V b
	stopRiding ()V l
	stopSleepInBed (ZZ)V a
	swing (Lnet/minecraft/world/InteractionHand;)V a
	take (Lnet/minecraft/world/entity/Entity;I)V a
	teleportTo (DDD)V a
	teleportTo (Lnet/minecraft/server/level/ServerLevel;DDDFF)V a
	tellNeutralMobsThatIDied ()V eV
	tick ()V j
	trackChunk (Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/network/protocol/Packet;Lnet/minecraft/network/protocol/Packet;)V a
	triggerDimensionChangeTriggers (Lnet/minecraft/server/level/ServerLevel;)V d
	untrackChunk (Lnet/minecraft/world/level/ChunkPos;)V a
	updateInvisibilityStatus ()V C
	updateOptions (Lnet/minecraft/network/protocol/game/ServerboundClientInformationPacket;)V a
	updateScoreForCriteria (Lnet/minecraft/world/scores/criteria/ObjectiveCriteria;I)V a
net/minecraft/server/level/ServerPlayerGameMode aai
	LOGGER c
	delayedDestroyPos k
	delayedTickStart l
	destroyPos h
	destroyProgressStart g
	gameModeForPlayer d
	gameTicks i
	hasDelayedDestroy j
	isDestroyingBlock f
	lastSentState m
	level a
	player b
	previousGameModeForPlayer e
	destroyAndAck (Lnet/minecraft/core/BlockPos;Lnet/minecraft/network/protocol/game/ServerboundPlayerActionPacket$Action;Ljava/lang/String;)V a
	destroyBlock (Lnet/minecraft/core/BlockPos;)Z a
	getGameModeForPlayer ()Lnet/minecraft/world/level/GameType; b
	getPreviousGameModeForPlayer ()Lnet/minecraft/world/level/GameType; c
	handleBlockBreakAction (Lnet/minecraft/core/BlockPos;Lnet/minecraft/network/protocol/game/ServerboundPlayerActionPacket$Action;Lnet/minecraft/core/Direction;I)V a
	incrementDestroyProgress (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/BlockPos;I)F a
	isCreative ()Z e
	isSurvival ()Z d
	setGameModeForPlayer (Lnet/minecraft/world/level/GameType;)V a
	setGameModeForPlayer (Lnet/minecraft/world/level/GameType;Lnet/minecraft/world/level/GameType;)V a
	setLevel (Lnet/minecraft/server/level/ServerLevel;)V a
	tick ()V a
	updateGameMode (Lnet/minecraft/world/level/GameType;)V b
	useItem (Lnet/minecraft/server/level/ServerPlayer;Lnet/minecraft/world/level/Level;Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResult; a
	useItemOn (Lnet/minecraft/server/level/ServerPlayer;Lnet/minecraft/world/level/Level;Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/InteractionHand;Lnet/minecraft/world/phys/BlockHitResult;)Lnet/minecraft/world/InteractionResult; a
net/minecraft/server/level/ThreadedLevelLightEngine aaj
	LOGGER a
	chunkMap d
	lightTasks c
	scheduled g
	sorterMailbox e
	taskMailbox b
	taskPerBatch f
	addTask (IILjava/util/function/IntSupplier;Lnet/minecraft/server/level/ThreadedLevelLightEngine$TaskType;Ljava/lang/Runnable;)V a
	addTask (IILnet/minecraft/server/level/ThreadedLevelLightEngine$TaskType;Ljava/lang/Runnable;)V a
	checkBlock (Lnet/minecraft/core/BlockPos;)V a
	enableLightSources (Lnet/minecraft/world/level/ChunkPos;Z)V a
	lightChunk (Lnet/minecraft/world/level/chunk/ChunkAccess;Z)Ljava/util/concurrent/CompletableFuture; a
	onBlockEmissionIncrease (Lnet/minecraft/core/BlockPos;I)V a
	queueSectionData (Lnet/minecraft/world/level/LightLayer;Lnet/minecraft/core/SectionPos;Lnet/minecraft/world/level/chunk/DataLayer;Z)V a
	retainData (Lnet/minecraft/world/level/ChunkPos;Z)V b
	runUpdate ()V b
	runUpdates (IZZ)I a
	setTaskPerBatch (I)V a
	tryScheduleUpdate ()V z_
	updateChunkStatus (Lnet/minecraft/world/level/ChunkPos;)V a
	updateSectionStatus (Lnet/minecraft/core/SectionPos;Z)V a
net/minecraft/server/level/ThreadedLevelLightEngine$TaskType aaj$a
	$VALUES c
	POST_UPDATE b
	PRE_UPDATE a
net/minecraft/server/level/Ticket aak
	createdTick d
	key c
	ticketLevel b
	type a
	compareTo (Lnet/minecraft/server/level/Ticket;)I a
	getTicketLevel ()I b
	getType ()Lnet/minecraft/server/level/TicketType; a
	setCreatedTick (J)V a
	timedOut (J)Z b
net/minecraft/server/level/TicketType aal
	DRAGON b
	FORCED d
	LIGHT e
	PLAYER c
	PORTAL f
	POST_TELEPORT g
	START a
	UNKNOWN h
	comparator j
	name i
	timeout k
	create (Ljava/lang/String;Ljava/util/Comparator;)Lnet/minecraft/server/level/TicketType; a
	create (Ljava/lang/String;Ljava/util/Comparator;I)Lnet/minecraft/server/level/TicketType; a
	getComparator ()Ljava/util/Comparator; a
	timeout ()J b
net/minecraft/server/level/WorldGenRegion aam
	LOGGER a
	biomeManager m
	blockTicks k
	cache b
	dimensionType j
	firstPos n
	lastPos o
	level f
	levelData h
	liquidTicks l
	random i
	seed g
	size e
	x c
	z d
	addFreshEntity (Lnet/minecraft/world/entity/Entity;)Z c
	addParticle (Lnet/minecraft/core/particles/ParticleOptions;DDDDDD)V a
	destroyBlock (Lnet/minecraft/core/BlockPos;ZLnet/minecraft/world/entity/Entity;I)Z a
	dimensionType ()Lnet/minecraft/world/level/dimension/DimensionType; k
	getBiomeManager ()Lnet/minecraft/world/level/biome/BiomeManager; d
	getBlockEntity (Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/entity/BlockEntity; c
	getBlockState (Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; d_
	getBlockTicks ()Lnet/minecraft/world/level/TickList; I
	getCenterX ()I a
	getCenterZ ()I b
	getChunk (II)Lnet/minecraft/world/level/chunk/ChunkAccess; a
	getChunk (IILnet/minecraft/world/level/chunk/ChunkStatus;Z)Lnet/minecraft/world/level/chunk/ChunkAccess; a
	getChunkSource ()Lnet/minecraft/world/level/chunk/ChunkSource; G
	getCurrentDifficultyAt (Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/DifficultyInstance; d
	getEntities (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/phys/AABB;Ljava/util/function/Predicate;)Ljava/util/List; a
	getEntitiesOfClass (Ljava/lang/Class;Lnet/minecraft/world/phys/AABB;Ljava/util/function/Predicate;)Ljava/util/List; a
	getFluidState (Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/material/FluidState; b
	getHeight (Lnet/minecraft/world/level/levelgen/Heightmap$Types;II)I a
	getLevel ()Lnet/minecraft/server/level/ServerLevel; E
	getLevelData ()Lnet/minecraft/world/level/storage/LevelData; h
	getLightEngine ()Lnet/minecraft/world/level/lighting/LevelLightEngine; e
	getLiquidTicks ()Lnet/minecraft/world/level/TickList; H
	getNearestPlayer (DDDDLjava/util/function/Predicate;)Lnet/minecraft/world/entity/player/Player; a
	getRandom ()Ljava/util/Random; u_
	getSeaLevel ()I t_
	getSeed ()J C
	getServer ()Lnet/minecraft/server/MinecraftServer; l
	getShade (Lnet/minecraft/core/Direction;Z)F a
	getSkyDarken ()I c
	getUncachedNoiseBiome (III)Lnet/minecraft/world/level/biome/Biome; a
	getWorldBorder ()Lnet/minecraft/world/level/border/WorldBorder; f
	hasChunk (II)Z b
	isClientSide ()Z s_
	isFluidAtPosition (Lnet/minecraft/core/BlockPos;Ljava/util/function/Predicate;)Z b
	isStateAtPosition (Lnet/minecraft/core/BlockPos;Ljava/util/function/Predicate;)Z a
	levelEvent (Lnet/minecraft/world/entity/player/Player;ILnet/minecraft/core/BlockPos;I)V a
	markPosForPostprocessing (Lnet/minecraft/core/BlockPos;)V j
	playSound (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/core/BlockPos;Lnet/minecraft/sounds/SoundEvent;Lnet/minecraft/sounds/SoundSource;FF)V a
	players ()Ljava/util/List; x
	registryAccess ()Lnet/minecraft/core/RegistryAccess; r
	removeBlock (Lnet/minecraft/core/BlockPos;Z)Z a
	setBlock (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;II)Z a
	startsForFeature (Lnet/minecraft/core/SectionPos;Lnet/minecraft/world/level/levelgen/feature/StructureFeature;)Ljava/util/stream/Stream; a
net/minecraft/server/level/WorldGenTickList aan
	index a
	hasScheduledTick (Lnet/minecraft/core/BlockPos;Ljava/lang/Object;)Z a
	scheduleTick (Lnet/minecraft/core/BlockPos;Ljava/lang/Object;ILnet/minecraft/world/level/TickPriority;)V a
	size ()I a
	willTickThisTick (Lnet/minecraft/core/BlockPos;Ljava/lang/Object;)Z b
net/minecraft/server/level/progress/ChunkProgressListener aap
	onStatusChange (Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/world/level/chunk/ChunkStatus;)V a
	start ()V a
	stop ()V b
	updateSpawnPos (Lnet/minecraft/world/level/ChunkPos;)V a
net/minecraft/server/level/progress/ChunkProgressListenerFactory aaq
net/minecraft/server/level/progress/LoggerChunkProgressListener aar
	LOGGER a
	count c
	maxCount b
	nextTickTime e
	startTime d
	getProgress ()I c
	onStatusChange (Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/world/level/chunk/ChunkStatus;)V a
	start ()V a
	stop ()V b
	updateSpawnPos (Lnet/minecraft/world/level/ChunkPos;)V a
net/minecraft/server/level/progress/ProcessorChunkProgressListener aas
	delegate a
	mailbox b
	onStatusChange (Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/world/level/chunk/ChunkStatus;)V a
	start ()V a
	stop ()V b
	updateSpawnPos (Lnet/minecraft/world/level/ChunkPos;)V a
net/minecraft/server/level/progress/StoringChunkProgressListener aat
	delegate a
	diameter f
	fullDiameter d
	radius e
	spawnPos c
	started g
	statuses b
	getDiameter ()I d
	getFullDiameter ()I c
	getProgress ()I e
	getStatus (II)Lnet/minecraft/world/level/chunk/ChunkStatus; a
	onStatusChange (Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/world/level/chunk/ChunkStatus;)V a
	start ()V a
	stop ()V b
	updateSpawnPos (Lnet/minecraft/world/level/ChunkPos;)V a
net/minecraft/server/network/LegacyQueryHandler aav
	LOGGER a
	serverConnectionListener b
	createReply (Ljava/lang/String;)Lio/netty/buffer/ByteBuf; a
	sendFlushAndClose (Lio/netty/channel/ChannelHandlerContext;Lio/netty/buffer/ByteBuf;)V a
net/minecraft/server/network/MemoryServerHandshakePacketListenerImpl aaw
	connection b
	server a
	getConnection ()Lnet/minecraft/network/Connection; a
	handleIntention (Lnet/minecraft/network/protocol/handshake/ClientIntentionPacket;)V a
	onDisconnect (Lnet/minecraft/network/chat/Component;)V a
net/minecraft/server/network/ServerConnectionListener aax
	LOGGER d
	SERVER_EPOLL_EVENT_GROUP b
	SERVER_EVENT_GROUP a
	channels f
	connections g
	running c
	server e
	getServer ()Lnet/minecraft/server/MinecraftServer; d
	startMemoryChannel ()Ljava/net/SocketAddress; a
	startTcpServerListener (Ljava/net/InetAddress;I)V a
	stop ()V b
	tick ()V c
net/minecraft/server/network/ServerConnectionListener$LatencySimulator aax$a
	TIMER a
	delay b
	jitter c
	queuedMessages d
	delayDownstream (Lio/netty/channel/ChannelHandlerContext;Ljava/lang/Object;)V a
	onTimeout (Lio/netty/util/Timeout;)V a
net/minecraft/server/network/ServerConnectionListener$LatencySimulator$DelayedMessage aax$a$a
	ctx a
	msg b
net/minecraft/server/network/ServerGamePacketListenerImpl aay
	LOGGER c
	aboveGroundTickCount C
	aboveGroundVehicleTickCount E
	awaitingPositionFromClient y
	awaitingTeleport z
	awaitingTeleportTime A
	chatSpamTickCount i
	clientIsFloating B
	clientVehicleIsFloating D
	connection a
	dropSpamTickCount j
	expectedAcks k
	firstGoodX l
	firstGoodY m
	firstGoodZ n
	keepAliveChallenge h
	keepAlivePending g
	keepAliveTime f
	knownMovePacketCount G
	lastGoodX o
	lastGoodY p
	lastGoodZ q
	lastVehicle r
	player b
	receivedMovePacketCount F
	server d
	tickCount e
	vehicleFirstGoodX s
	vehicleFirstGoodY t
	vehicleFirstGoodZ u
	vehicleLastGoodX v
	vehicleLastGoodY w
	vehicleLastGoodZ x
	containsInvalidValues (Lnet/minecraft/network/protocol/game/ServerboundMovePlayerPacket;)Z b
	containsInvalidValues (Lnet/minecraft/network/protocol/game/ServerboundMoveVehiclePacket;)Z b
	disconnect (Lnet/minecraft/network/chat/Component;)V b
	getConnection ()Lnet/minecraft/network/Connection; a
	handleAcceptTeleportPacket (Lnet/minecraft/network/protocol/game/ServerboundAcceptTeleportationPacket;)V a
	handleAnimate (Lnet/minecraft/network/protocol/game/ServerboundSwingPacket;)V a
	handleBlockEntityTagQuery (Lnet/minecraft/network/protocol/game/ServerboundBlockEntityTagQuery;)V a
	handleChangeDifficulty (Lnet/minecraft/network/protocol/game/ServerboundChangeDifficultyPacket;)V a
	handleChat (Lnet/minecraft/network/protocol/game/ServerboundChatPacket;)V a
	handleClientCommand (Lnet/minecraft/network/protocol/game/ServerboundClientCommandPacket;)V a
	handleClientInformation (Lnet/minecraft/network/protocol/game/ServerboundClientInformationPacket;)V a
	handleCommand (Ljava/lang/String;)V c
	handleContainerAck (Lnet/minecraft/network/protocol/game/ServerboundContainerAckPacket;)V a
	handleContainerButtonClick (Lnet/minecraft/network/protocol/game/ServerboundContainerButtonClickPacket;)V a
	handleContainerClick (Lnet/minecraft/network/protocol/game/ServerboundContainerClickPacket;)V a
	handleContainerClose (Lnet/minecraft/network/protocol/game/ServerboundContainerClosePacket;)V a
	handleCustomCommandSuggestions (Lnet/minecraft/network/protocol/game/ServerboundCommandSuggestionPacket;)V a
	handleCustomPayload (Lnet/minecraft/network/protocol/game/ServerboundCustomPayloadPacket;)V a
	handleEditBook (Lnet/minecraft/network/protocol/game/ServerboundEditBookPacket;)V a
	handleEntityTagQuery (Lnet/minecraft/network/protocol/game/ServerboundEntityTagQuery;)V a
	handleInteract (Lnet/minecraft/network/protocol/game/ServerboundInteractPacket;)V a
	handleJigsawGenerate (Lnet/minecraft/network/protocol/game/ServerboundJigsawGeneratePacket;)V a
	handleKeepAlive (Lnet/minecraft/network/protocol/game/ServerboundKeepAlivePacket;)V a
	handleLockDifficulty (Lnet/minecraft/network/protocol/game/ServerboundLockDifficultyPacket;)V a
	handleMovePlayer (Lnet/minecraft/network/protocol/game/ServerboundMovePlayerPacket;)V a
	handleMoveVehicle (Lnet/minecraft/network/protocol/game/ServerboundMoveVehiclePacket;)V a
	handlePaddleBoat (Lnet/minecraft/network/protocol/game/ServerboundPaddleBoatPacket;)V a
	handlePickItem (Lnet/minecraft/network/protocol/game/ServerboundPickItemPacket;)V a
	handlePlaceRecipe (Lnet/minecraft/network/protocol/game/ServerboundPlaceRecipePacket;)V a
	handlePlayerAbilities (Lnet/minecraft/network/protocol/game/ServerboundPlayerAbilitiesPacket;)V a
	handlePlayerAction (Lnet/minecraft/network/protocol/game/ServerboundPlayerActionPacket;)V a
	handlePlayerCommand (Lnet/minecraft/network/protocol/game/ServerboundPlayerCommandPacket;)V a
	handlePlayerInput (Lnet/minecraft/network/protocol/game/ServerboundPlayerInputPacket;)V a
	handleRecipeBookChangeSettingsPacket (Lnet/minecraft/network/protocol/game/ServerboundRecipeBookChangeSettingsPacket;)V a
	handleRecipeBookSeenRecipePacket (Lnet/minecraft/network/protocol/game/ServerboundRecipeBookSeenRecipePacket;)V a
	handleRenameItem (Lnet/minecraft/network/protocol/game/ServerboundRenameItemPacket;)V a
	handleResourcePackResponse (Lnet/minecraft/network/protocol/game/ServerboundResourcePackPacket;)V a
	handleSeenAdvancements (Lnet/minecraft/network/protocol/game/ServerboundSeenAdvancementsPacket;)V a
	handleSelectTrade (Lnet/minecraft/network/protocol/game/ServerboundSelectTradePacket;)V a
	handleSetBeaconPacket (Lnet/minecraft/network/protocol/game/ServerboundSetBeaconPacket;)V a
	handleSetCarriedItem (Lnet/minecraft/network/protocol/game/ServerboundSetCarriedItemPacket;)V a
	handleSetCommandBlock (Lnet/minecraft/network/protocol/game/ServerboundSetCommandBlockPacket;)V a
	handleSetCommandMinecart (Lnet/minecraft/network/protocol/game/ServerboundSetCommandMinecartPacket;)V a
	handleSetCreativeModeSlot (Lnet/minecraft/network/protocol/game/ServerboundSetCreativeModeSlotPacket;)V a
	handleSetJigsawBlock (Lnet/minecraft/network/protocol/game/ServerboundSetJigsawBlockPacket;)V a
	handleSetStructureBlock (Lnet/minecraft/network/protocol/game/ServerboundSetStructureBlockPacket;)V a
	handleSignUpdate (Lnet/minecraft/network/protocol/game/ServerboundSignUpdatePacket;)V a
	handleTeleportToEntityPacket (Lnet/minecraft/network/protocol/game/ServerboundTeleportToEntityPacket;)V a
	handleUseItem (Lnet/minecraft/network/protocol/game/ServerboundUseItemPacket;)V a
	handleUseItemOn (Lnet/minecraft/network/protocol/game/ServerboundUseItemOnPacket;)V a
	info (Ljava/lang/String;)V a
	isPlayerCollidingWithAnythingNew (Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/world/phys/AABB;)Z a
	isSingleplayerOwner ()Z d
	noBlocksAround (Lnet/minecraft/world/entity/Entity;)Z a
	onDisconnect (Lnet/minecraft/network/chat/Component;)V a
	resetPosition ()V c
	send (Lnet/minecraft/network/protocol/Packet;)V a
	send (Lnet/minecraft/network/protocol/Packet;Lio/netty/util/concurrent/GenericFutureListener;)V a
	teleport (DDDFF)V a
	teleport (DDDFFLjava/util/Set;)V a
	tick ()V b
	warn (Ljava/lang/String;)V b
	wasBlockPlacementAttempt (Lnet/minecraft/server/level/ServerPlayer;Lnet/minecraft/world/item/ItemStack;)Z a
net/minecraft/server/network/ServerHandshakePacketListenerImpl aaz
	IGNORE_STATUS_REASON a
	connection c
	server b
	getConnection ()Lnet/minecraft/network/Connection; a
	handleIntention (Lnet/minecraft/network/protocol/handshake/ClientIntentionPacket;)V a
	onDisconnect (Lnet/minecraft/network/chat/Component;)V a
net/minecraft/server/network/ServerLoginPacketListenerImpl aba
	LOGGER c
	RANDOM d
	UNIQUE_THREAD_ID b
	connection a
	delayedAcceptPlayer l
	gameProfile i
	nonce e
	secretKey k
	server f
	serverId j
	state g
	tick h
	createFakeProfile (Lcom/mojang/authlib/GameProfile;)Lcom/mojang/authlib/GameProfile; a
	disconnect (Lnet/minecraft/network/chat/Component;)V b
	getConnection ()Lnet/minecraft/network/Connection; a
	getUserName ()Ljava/lang/String; d
	handleAcceptedLogin ()V c
	handleCustomQueryPacket (Lnet/minecraft/network/protocol/login/ServerboundCustomQueryPacket;)V a
	handleHello (Lnet/minecraft/network/protocol/login/ServerboundHelloPacket;)V a
	handleKey (Lnet/minecraft/network/protocol/login/ServerboundKeyPacket;)V a
	onDisconnect (Lnet/minecraft/network/chat/Component;)V a
	tick ()V b
net/minecraft/server/network/ServerLoginPacketListenerImpl$State aba$a
	$VALUES h
	ACCEPTED g
	AUTHENTICATING c
	DELAY_ACCEPT f
	HELLO a
	KEY b
	NEGOTIATING d
	READY_TO_ACCEPT e
net/minecraft/server/network/ServerStatusPacketListenerImpl abb
	DISCONNECT_REASON a
	connection c
	hasRequestedStatus d
	server b
	getConnection ()Lnet/minecraft/network/Connection; a
	handlePingRequest (Lnet/minecraft/network/protocol/status/ServerboundPingRequestPacket;)V a
	handleStatusRequest (Lnet/minecraft/network/protocol/status/ServerboundStatusRequestPacket;)V a
	onDisconnect (Lnet/minecraft/network/chat/Component;)V a
net/minecraft/server/packs/AbstractPackResources abe
	LOGGER b
	file a
	getMetadataFromStream (Lnet/minecraft/server/packs/metadata/MetadataSectionSerializer;Ljava/io/InputStream;)Ljava/lang/Object; a
	getMetadataSection (Lnet/minecraft/server/packs/metadata/MetadataSectionSerializer;)Ljava/lang/Object; a
	getName ()Ljava/lang/String; a
	getPathFromLocation (Lnet/minecraft/server/packs/PackType;Lnet/minecraft/resources/ResourceLocation;)Ljava/lang/String; c
	getRelativePath (Ljava/io/File;Ljava/io/File;)Ljava/lang/String; a
	getResource (Ljava/lang/String;)Ljava/io/InputStream; a
	getResource (Lnet/minecraft/server/packs/PackType;Lnet/minecraft/resources/ResourceLocation;)Ljava/io/InputStream; a
	getRootResource (Ljava/lang/String;)Ljava/io/InputStream; b
	hasResource (Ljava/lang/String;)Z c
	hasResource (Lnet/minecraft/server/packs/PackType;Lnet/minecraft/resources/ResourceLocation;)Z b
	logWarning (Ljava/lang/String;)V d
net/minecraft/server/packs/FilePackResources abf
	SPLITTER b
	zipFile c
	getNamespaces (Lnet/minecraft/server/packs/PackType;)Ljava/util/Set; a
	getOrCreateZipFile ()Ljava/util/zip/ZipFile; b
	getResource (Ljava/lang/String;)Ljava/io/InputStream; a
	getResources (Lnet/minecraft/server/packs/PackType;Ljava/lang/String;Ljava/lang/String;ILjava/util/function/Predicate;)Ljava/util/Collection; a
	hasResource (Ljava/lang/String;)Z c
net/minecraft/server/packs/FolderPackResources abg
	BACKSLASH_MATCHER d
	LOGGER b
	ON_WINDOWS c
	getFile (Ljava/lang/String;)Ljava/io/File; e
	getNamespaces (Lnet/minecraft/server/packs/PackType;)Ljava/util/Set; a
	getResource (Ljava/lang/String;)Ljava/io/InputStream; a
	getResources (Lnet/minecraft/server/packs/PackType;Ljava/lang/String;Ljava/lang/String;ILjava/util/function/Predicate;)Ljava/util/Collection; a
	hasResource (Ljava/lang/String;)Z c
	listResources (Ljava/io/File;ILjava/lang/String;Ljava/util/List;Ljava/lang/String;Ljava/util/function/Predicate;)V a
	validatePath (Ljava/io/File;Ljava/lang/String;)Z a
net/minecraft/server/packs/PackResources abh
	getMetadataSection (Lnet/minecraft/server/packs/metadata/MetadataSectionSerializer;)Ljava/lang/Object; a
	getName ()Ljava/lang/String; a
	getNamespaces (Lnet/minecraft/server/packs/PackType;)Ljava/util/Set; a
	getResource (Lnet/minecraft/server/packs/PackType;Lnet/minecraft/resources/ResourceLocation;)Ljava/io/InputStream; a
	getResources (Lnet/minecraft/server/packs/PackType;Ljava/lang/String;Ljava/lang/String;ILjava/util/function/Predicate;)Ljava/util/Collection; a
	getRootResource (Ljava/lang/String;)Ljava/io/InputStream; b
	hasResource (Lnet/minecraft/server/packs/PackType;Lnet/minecraft/resources/ResourceLocation;)Z b
net/minecraft/server/packs/PackType abi
	$VALUES d
	CLIENT_RESOURCES a
	SERVER_DATA b
	directory c
	getDirectory ()Ljava/lang/String; a
net/minecraft/server/packs/ResourcePackFileNotFoundException abj
net/minecraft/server/packs/VanillaPackResources abk
	JAR_FILESYSTEM_BY_TYPE e
	LOGGER d
	clientObject b
	generatedDir a
	namespaces c
	createPath (Lnet/minecraft/server/packs/PackType;Lnet/minecraft/resources/ResourceLocation;)Ljava/lang/String; d
	getMetadataSection (Lnet/minecraft/server/packs/metadata/MetadataSectionSerializer;)Ljava/lang/Object; a
	getName ()Ljava/lang/String; a
	getNamespaces (Lnet/minecraft/server/packs/PackType;)Ljava/util/Set; a
	getResource (Lnet/minecraft/server/packs/PackType;Lnet/minecraft/resources/ResourceLocation;)Ljava/io/InputStream; a
	getResourceAsStream (Ljava/lang/String;)Ljava/io/InputStream; a
	getResourceAsStream (Lnet/minecraft/server/packs/PackType;Lnet/minecraft/resources/ResourceLocation;)Ljava/io/InputStream; c
	getResources (Ljava/util/Collection;ILjava/lang/String;Ljava/nio/file/Path;Ljava/lang/String;Ljava/util/function/Predicate;)V a
	getResources (Lnet/minecraft/server/packs/PackType;Ljava/lang/String;Ljava/lang/String;ILjava/util/function/Predicate;)Ljava/util/Collection; a
	getRootResource (Ljava/lang/String;)Ljava/io/InputStream; b
	hasResource (Lnet/minecraft/server/packs/PackType;Lnet/minecraft/resources/ResourceLocation;)Z b
	isResourceUrlValid (Ljava/lang/String;Ljava/net/URL;)Z a
net/minecraft/server/packs/metadata/MetadataSectionSerializer abl
	fromJson (Lcom/google/gson/JsonObject;)Ljava/lang/Object; a
	getMetadataSectionName ()Ljava/lang/String; a
net/minecraft/server/packs/metadata/pack/PackMetadataSection abm
	SERIALIZER a
	description b
	packFormat c
	getDescription ()Lnet/minecraft/network/chat/Component; a
	getPackFormat ()I b
net/minecraft/server/packs/metadata/pack/PackMetadataSectionSerializer abn
	fromJson (Lcom/google/gson/JsonObject;)Ljava/lang/Object; a
	fromJson (Lcom/google/gson/JsonObject;)Lnet/minecraft/server/packs/metadata/pack/PackMetadataSection; b
	getMetadataSectionName ()Ljava/lang/String; a
net/minecraft/server/packs/repository/FolderRepositorySource abr
	RESOURCEPACK_FILTER a
	folder b
	packSource c
	createSupplier (Ljava/io/File;)Ljava/util/function/Supplier; a
	loadPacks (Ljava/util/function/Consumer;Lnet/minecraft/server/packs/repository/Pack$PackConstructor;)V a
net/minecraft/server/packs/repository/Pack abs
	BROKEN_ASSETS_FALLBACK b
	LOGGER a
	compatibility g
	defaultPosition h
	description f
	fixedPosition j
	id c
	packSource k
	required i
	supplier d
	title e
	create (Ljava/lang/String;ZLjava/util/function/Supplier;Lnet/minecraft/server/packs/repository/Pack$PackConstructor;Lnet/minecraft/server/packs/repository/Pack$Position;Lnet/minecraft/server/packs/repository/PackSource;)Lnet/minecraft/server/packs/repository/Pack; a
	getChatLink (Z)Lnet/minecraft/network/chat/Component; a
	getCompatibility ()Lnet/minecraft/server/packs/repository/PackCompatibility; c
	getDefaultPosition ()Lnet/minecraft/server/packs/repository/Pack$Position; h
	getDescription ()Lnet/minecraft/network/chat/Component; b
	getId ()Ljava/lang/String; e
	getPackSource ()Lnet/minecraft/server/packs/repository/PackSource; i
	getTitle ()Lnet/minecraft/network/chat/Component; a
	isFixedPosition ()Z g
	isRequired ()Z f
	open ()Lnet/minecraft/server/packs/PackResources; d
net/minecraft/server/packs/repository/Pack$PackConstructor abs$a
net/minecraft/server/packs/repository/Pack$Position abs$b
	$VALUES c
	BOTTOM b
	TOP a
	insert (Ljava/util/List;Ljava/lang/Object;Ljava/util/function/Function;Z)I a
	opposite ()Lnet/minecraft/server/packs/repository/Pack$Position; a
net/minecraft/server/packs/repository/PackCompatibility abt
	$VALUES f
	COMPATIBLE c
	TOO_NEW b
	TOO_OLD a
	confirmation e
	description d
	forFormat (I)Lnet/minecraft/server/packs/repository/PackCompatibility; a
	getConfirmation ()Lnet/minecraft/network/chat/Component; c
	getDescription ()Lnet/minecraft/network/chat/Component; b
	isCompatible ()Z a
net/minecraft/server/packs/repository/PackRepository abu
	available b
	constructor d
	selected c
	sources a
	discoverAvailable ()Ljava/util/Map; g
	getAvailableIds ()Ljava/util/Collection; b
	getAvailablePacks ()Ljava/util/Collection; c
	getAvailablePacks (Ljava/util/Collection;)Ljava/util/stream/Stream; c
	getPack (Ljava/lang/String;)Lnet/minecraft/server/packs/repository/Pack; a
	getSelectedIds ()Ljava/util/Collection; d
	getSelectedPacks ()Ljava/util/Collection; e
	isAvailable (Ljava/lang/String;)Z b
	openAllSelected ()Ljava/util/List; f
	rebuildSelected (Ljava/util/Collection;)Ljava/util/List; b
	reload ()V a
	setSelected (Ljava/util/Collection;)V a
net/minecraft/server/packs/repository/PackSource abv
	BUILT_IN b
	DEFAULT a
	SERVER d
	WORLD c
	decorating (Ljava/lang/String;)Lnet/minecraft/server/packs/repository/PackSource; a
	passThrough ()Lnet/minecraft/server/packs/repository/PackSource; a
net/minecraft/server/packs/repository/RepositorySource abw
	loadPacks (Ljava/util/function/Consumer;Lnet/minecraft/server/packs/repository/Pack$PackConstructor;)V a
net/minecraft/server/packs/repository/ServerPacksSource abx
	vanillaPack a
	loadPacks (Ljava/util/function/Consumer;Lnet/minecraft/server/packs/repository/Pack$PackConstructor;)V a
net/minecraft/server/packs/resources/FallbackResourceManager abz
	LOGGER b
	fallbacks a
	namespace d
	type c
	add (Lnet/minecraft/server/packs/PackResources;)V a
	getMetadataLocation (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/resources/ResourceLocation; d
	getNamespaces ()Ljava/util/Set; a
	getResource (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/server/packs/resources/Resource; a
	getResources (Lnet/minecraft/resources/ResourceLocation;)Ljava/util/List; c
	getWrappedResource (Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/server/packs/PackResources;)Ljava/io/InputStream; a
	hasResource (Lnet/minecraft/resources/ResourceLocation;)Z b
	isValidLocation (Lnet/minecraft/resources/ResourceLocation;)Z f
	listPacks ()Ljava/util/stream/Stream; b
	listResources (Ljava/lang/String;Ljava/util/function/Predicate;)Ljava/util/Collection; a
	validateLocation (Lnet/minecraft/resources/ResourceLocation;)V e
net/minecraft/server/packs/resources/FallbackResourceManager$LeakedResourceWarningInputStream abz$a
	closed b
	message a
net/minecraft/server/packs/resources/PreparableReloadListener aca
	getName ()Ljava/lang/String; c
	reload (Lnet/minecraft/server/packs/resources/PreparableReloadListener$PreparationBarrier;Lnet/minecraft/server/packs/resources/ResourceManager;Lnet/minecraft/util/profiling/ProfilerFiller;Lnet/minecraft/util/profiling/ProfilerFiller;Ljava/util/concurrent/Executor;Ljava/util/concurrent/Executor;)Ljava/util/concurrent/CompletableFuture; a
net/minecraft/server/packs/resources/PreparableReloadListener$PreparationBarrier aca$a
	wait (Ljava/lang/Object;)Ljava/util/concurrent/CompletableFuture; a
net/minecraft/server/packs/resources/ProfiledReloadInstance acb
	LOGGER d
	total e
	finish (Ljava/util/List;)V a
net/minecraft/server/packs/resources/ProfiledReloadInstance$State acb$a
	name a
	preparationNanos d
	preparationResult b
	reloadNanos e
	reloadResult c
net/minecraft/server/packs/resources/ReloadInstance acc
	checkExceptions ()V e
	done ()Ljava/util/concurrent/CompletableFuture; a
	getActualProgress ()F b
	isApplying ()Z c
	isDone ()Z d
net/minecraft/server/packs/resources/ReloadableResourceManager acd
	createFullReload (Ljava/util/concurrent/Executor;Ljava/util/concurrent/Executor;Ljava/util/concurrent/CompletableFuture;Ljava/util/List;)Lnet/minecraft/server/packs/resources/ReloadInstance; a
	createQueuedReload (Ljava/util/concurrent/Executor;Ljava/util/concurrent/Executor;Ljava/util/concurrent/CompletableFuture;)Lnet/minecraft/server/packs/resources/ReloadInstance; a
	registerReloadListener (Lnet/minecraft/server/packs/resources/PreparableReloadListener;)V a
	reload (Ljava/util/concurrent/Executor;Ljava/util/concurrent/Executor;Ljava/util/List;Ljava/util/concurrent/CompletableFuture;)Ljava/util/concurrent/CompletableFuture; a
net/minecraft/server/packs/resources/Resource ace
	getInputStream ()Ljava/io/InputStream; b
	getLocation ()Lnet/minecraft/resources/ResourceLocation; a
	getMetadata (Lnet/minecraft/server/packs/metadata/MetadataSectionSerializer;)Ljava/lang/Object; a
	getSourceName ()Ljava/lang/String; d
	hasMetadata ()Z c
net/minecraft/server/packs/resources/ResourceManager acf
	getNamespaces ()Ljava/util/Set; a
	getResource (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/server/packs/resources/Resource; a
	getResources (Lnet/minecraft/resources/ResourceLocation;)Ljava/util/List; c
	hasResource (Lnet/minecraft/resources/ResourceLocation;)Z b
	listPacks ()Ljava/util/stream/Stream; b
	listResources (Ljava/lang/String;Ljava/util/function/Predicate;)Ljava/util/Collection; a
net/minecraft/server/packs/resources/ResourceManager$Empty acf$a
	$VALUES b
	INSTANCE a
	getNamespaces ()Ljava/util/Set; a
	getResource (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/server/packs/resources/Resource; a
	getResources (Lnet/minecraft/resources/ResourceLocation;)Ljava/util/List; c
	hasResource (Lnet/minecraft/resources/ResourceLocation;)Z b
	listPacks ()Ljava/util/stream/Stream; b
	listResources (Ljava/lang/String;Ljava/util/function/Predicate;)Ljava/util/Collection; a
net/minecraft/server/packs/resources/ResourceManagerReloadListener acg
	onResourceManagerReload (Lnet/minecraft/server/packs/resources/ResourceManager;)V a
	reload (Lnet/minecraft/server/packs/resources/PreparableReloadListener$PreparationBarrier;Lnet/minecraft/server/packs/resources/ResourceManager;Lnet/minecraft/util/profiling/ProfilerFiller;Lnet/minecraft/util/profiling/ProfilerFiller;Ljava/util/concurrent/Executor;Ljava/util/concurrent/Executor;)Ljava/util/concurrent/CompletableFuture; a
net/minecraft/server/packs/resources/SimpleJsonResourceReloadListener ach
	LOGGER a
	PATH_SUFFIX_LENGTH b
	directory d
	gson c
	prepare (Lnet/minecraft/server/packs/resources/ResourceManager;Lnet/minecraft/util/profiling/ProfilerFiller;)Ljava/lang/Object; b
	prepare (Lnet/minecraft/server/packs/resources/ResourceManager;Lnet/minecraft/util/profiling/ProfilerFiller;)Ljava/util/Map; a
net/minecraft/server/packs/resources/SimplePreparableReloadListener aci
	apply (Ljava/lang/Object;Lnet/minecraft/server/packs/resources/ResourceManager;Lnet/minecraft/util/profiling/ProfilerFiller;)V a
	prepare (Lnet/minecraft/server/packs/resources/ResourceManager;Lnet/minecraft/util/profiling/ProfilerFiller;)Ljava/lang/Object; b
	reload (Lnet/minecraft/server/packs/resources/PreparableReloadListener$PreparationBarrier;Lnet/minecraft/server/packs/resources/ResourceManager;Lnet/minecraft/util/profiling/ProfilerFiller;Lnet/minecraft/util/profiling/ProfilerFiller;Ljava/util/concurrent/Executor;Ljava/util/concurrent/Executor;)Ljava/util/concurrent/CompletableFuture; a
net/minecraft/server/packs/resources/SimpleReloadInstance acj
	allDone c
	allPreparations b
	doneTaskCounter i
	finishedReloads g
	listenerCount e
	preparingListeners d
	resourceManager a
	startedReloads f
	startedTaskCounter h
	checkExceptions ()V e
	done ()Ljava/util/concurrent/CompletableFuture; a
	getActualProgress ()F b
	isApplying ()Z c
	isDone ()Z d
	of (Lnet/minecraft/server/packs/resources/ResourceManager;Ljava/util/List;Ljava/util/concurrent/Executor;Ljava/util/concurrent/Executor;Ljava/util/concurrent/CompletableFuture;)Lnet/minecraft/server/packs/resources/SimpleReloadInstance; a
net/minecraft/server/packs/resources/SimpleReloadInstance$StateFactory acj$a
net/minecraft/server/packs/resources/SimpleReloadableResourceManager ack
	LOGGER a
	listeners c
	namespacedPacks b
	namespaces e
	packs f
	recentlyRegistered d
	type g
	add (Lnet/minecraft/server/packs/PackResources;)V a
	clear ()V c
	createFullReload (Ljava/util/concurrent/Executor;Ljava/util/concurrent/Executor;Ljava/util/concurrent/CompletableFuture;Ljava/util/List;)Lnet/minecraft/server/packs/resources/ReloadInstance; a
	createQueuedReload (Ljava/util/concurrent/Executor;Ljava/util/concurrent/Executor;Ljava/util/concurrent/CompletableFuture;)Lnet/minecraft/server/packs/resources/ReloadInstance; a
	createReload (Ljava/util/concurrent/Executor;Ljava/util/concurrent/Executor;Ljava/util/List;Ljava/util/concurrent/CompletableFuture;)Lnet/minecraft/server/packs/resources/ReloadInstance; b
	getNamespaces ()Ljava/util/Set; a
	getResource (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/server/packs/resources/Resource; a
	getResources (Lnet/minecraft/resources/ResourceLocation;)Ljava/util/List; c
	hasResource (Lnet/minecraft/resources/ResourceLocation;)Z b
	listPacks ()Ljava/util/stream/Stream; b
	listResources (Ljava/lang/String;Ljava/util/function/Predicate;)Ljava/util/Collection; a
	registerReloadListener (Lnet/minecraft/server/packs/resources/PreparableReloadListener;)V a
net/minecraft/server/packs/resources/SimpleReloadableResourceManager$FailingReloadInstance ack$a
	exception a
	failedFuture b
	checkExceptions ()V e
	done ()Ljava/util/concurrent/CompletableFuture; a
	getActualProgress ()F b
	isApplying ()Z c
	isDone ()Z d
net/minecraft/server/packs/resources/SimpleReloadableResourceManager$ResourcePackLoadingFailure ack$b
	pack a
	getPack ()Lnet/minecraft/server/packs/PackResources; a
net/minecraft/server/packs/resources/SimpleResource acl
	location b
	metadata f
	metadataStream d
	resourceStream c
	sourceName a
	triedMetadata e
	getInputStream ()Ljava/io/InputStream; b
	getLocation ()Lnet/minecraft/resources/ResourceLocation; a
	getMetadata (Lnet/minecraft/server/packs/metadata/MetadataSectionSerializer;)Ljava/lang/Object; a
	getSourceName ()Ljava/lang/String; d
	hasMetadata ()Z c
net/minecraft/server/players/BanListEntry acn
	DATE_FORMAT a
	created b
	expires d
	reason e
	source c
	getCreated ()Ljava/util/Date; a
	getDisplayName ()Lnet/minecraft/network/chat/Component; e
	getExpires ()Ljava/util/Date; c
	getReason ()Ljava/lang/String; d
	getSource ()Ljava/lang/String; b
	hasExpired ()Z f
	serialize (Lcom/google/gson/JsonObject;)V a
net/minecraft/server/players/GameProfileCache aco
	LOGGER a
	file g
	gson f
	operationCount h
	profileRepository e
	profilesByName c
	profilesByUUID d
	usesAuthentication b
	add (Lcom/mojang/authlib/GameProfile;)V a
	createDateFormat ()Ljava/text/DateFormat; e
	get (Ljava/lang/String;)Lcom/mojang/authlib/GameProfile; a
	get (Ljava/util/UUID;)Lcom/mojang/authlib/GameProfile; a
	getNextOperation ()J d
	getTopMRUProfiles (I)Ljava/util/stream/Stream; a
	load ()Ljava/util/List; a
	lookupGameProfile (Lcom/mojang/authlib/GameProfileRepository;Ljava/lang/String;)Lcom/mojang/authlib/GameProfile; a
	readGameProfile (Lcom/google/gson/JsonElement;Ljava/text/DateFormat;)Lnet/minecraft/server/players/GameProfileCache$GameProfileInfo; a
	safeAdd (Lnet/minecraft/server/players/GameProfileCache$GameProfileInfo;)V a
	save ()V b
	setUsesAuthentication (Z)V a
	usesAuthentication ()Z c
	writeGameProfile (Lnet/minecraft/server/players/GameProfileCache$GameProfileInfo;Ljava/text/DateFormat;)Lcom/google/gson/JsonElement; a
net/minecraft/server/players/GameProfileCache$GameProfileInfo aco$a
	expirationDate b
	lastAccess c
	profile a
	getExpirationDate ()Ljava/util/Date; b
	getLastAccess ()J c
	getProfile ()Lcom/mojang/authlib/GameProfile; a
	setLastAccess (J)V a
net/minecraft/server/players/IpBanList acp
	createEntry (Lcom/google/gson/JsonObject;)Lnet/minecraft/server/players/StoredUserEntry; a
	get (Ljava/net/SocketAddress;)Lnet/minecraft/server/players/IpBanListEntry; b
	getIpFromAddress (Ljava/net/SocketAddress;)Ljava/lang/String; c
	isBanned (Ljava/lang/String;)Z a
	isBanned (Ljava/net/SocketAddress;)Z a
net/minecraft/server/players/IpBanListEntry acq
	createIpInfo (Lcom/google/gson/JsonObject;)Ljava/lang/String; b
	getDisplayName ()Lnet/minecraft/network/chat/Component; e
	serialize (Lcom/google/gson/JsonObject;)V a
net/minecraft/server/players/OldUsersConverter acr
	LOGGER e
	OLD_IPBANLIST a
	OLD_OPLIST c
	OLD_USERBANLIST b
	OLD_WHITELIST d
	areOldPlayersConverted (Lnet/minecraft/server/MinecraftServer;)Z f
	areOldUserlistsRemoved ()Z b
	convertIpBanlist (Lnet/minecraft/server/MinecraftServer;)Z b
	convertMobOwnerIfNecessary (Lnet/minecraft/server/MinecraftServer;Ljava/lang/String;)Ljava/util/UUID; a
	convertOpsList (Lnet/minecraft/server/MinecraftServer;)Z c
	convertPlayers (Lnet/minecraft/server/dedicated/DedicatedServer;)Z a
	convertUserBanlist (Lnet/minecraft/server/MinecraftServer;)Z a
	convertWhiteList (Lnet/minecraft/server/MinecraftServer;)Z d
	ensureDirectoryExists (Ljava/io/File;)V b
	getWorldPlayersDirectory (Lnet/minecraft/server/MinecraftServer;)Ljava/io/File; g
	lookupPlayers (Lnet/minecraft/server/MinecraftServer;Ljava/util/Collection;Lcom/mojang/authlib/ProfileLookupCallback;)V a
	parseDate (Ljava/lang/String;Ljava/util/Date;)Ljava/util/Date; b
	readOldListFormat (Ljava/io/File;Ljava/util/Map;)Ljava/util/List; a
	renameOldFile (Ljava/io/File;)V c
	serverReadyAfterUserconversion (Lnet/minecraft/server/MinecraftServer;)Z e
net/minecraft/server/players/OldUsersConverter$ConversionError acr$a
net/minecraft/server/players/PlayerList acs
	BAN_DATE_FORMAT g
	IPBANLIST_FILE c
	LOGGER a
	OPLIST_FILE d
	USERBANLIST_FILE b
	WHITELIST_FILE e
	advancements p
	allowCheatsForAllPlayers v
	bans k
	doWhiteList r
	ipBans l
	maxPlayers f
	ops m
	overrideGameMode u
	playerIo q
	players i
	playersByUUID j
	registryHolder s
	sendAllPlayerInfoIn w
	server h
	stats o
	viewDistance t
	whitelist n
	blackList (Lcom/mojang/authlib/GameProfile;)V c
	broadcast (Lnet/minecraft/world/entity/player/Player;DDDDLnet/minecraft/resources/ResourceKey;Lnet/minecraft/network/protocol/Packet;)V a
	broadcastAll (Lnet/minecraft/network/protocol/Packet;)V a
	broadcastAll (Lnet/minecraft/network/protocol/Packet;Lnet/minecraft/resources/ResourceKey;)V a
	broadcastMessage (Lnet/minecraft/network/chat/Component;Lnet/minecraft/network/chat/ChatType;Ljava/util/UUID;)V a
	broadcastToAllExceptTeam (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/network/chat/Component;)V b
	broadcastToTeam (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/network/chat/Component;)V a
	canBypassPlayerLimit (Lcom/mojang/authlib/GameProfile;)Z f
	canPlayerLogin (Ljava/net/SocketAddress;Lcom/mojang/authlib/GameProfile;)Lnet/minecraft/network/chat/Component; a
	deop (Lcom/mojang/authlib/GameProfile;)V b
	getBans ()Lnet/minecraft/server/players/UserBanList; f
	getIpBans ()Lnet/minecraft/server/players/IpBanList; g
	getMaxPlayers ()I n
	getOpNames ()[Ljava/lang/String; l
	getOps ()Lnet/minecraft/server/players/ServerOpList; k
	getPlayer (Ljava/util/UUID;)Lnet/minecraft/server/level/ServerPlayer; a
	getPlayerAdvancements (Lnet/minecraft/server/level/ServerPlayer;)Lnet/minecraft/server/PlayerAdvancements; f
	getPlayerByName (Ljava/lang/String;)Lnet/minecraft/server/level/ServerPlayer; a
	getPlayerCount ()I m
	getPlayerForLogin (Lcom/mojang/authlib/GameProfile;)Lnet/minecraft/server/level/ServerPlayer; g
	getPlayerNamesArray ()[Ljava/lang/String; e
	getPlayerStats (Lnet/minecraft/world/entity/player/Player;)Lnet/minecraft/stats/ServerStatsCounter; a
	getPlayers ()Ljava/util/List; s
	getPlayersWithAddress (Ljava/lang/String;)Ljava/util/List; b
	getServer ()Lnet/minecraft/server/MinecraftServer; c
	getSingleplayerData ()Lnet/minecraft/nbt/CompoundTag; q
	getViewDistance ()I p
	getWhiteList ()Lnet/minecraft/server/players/UserWhiteList; i
	getWhiteListNames ()[Ljava/lang/String; j
	isAllowCheatsForAllPlayers ()Z u
	isOp (Lcom/mojang/authlib/GameProfile;)Z h
	isUsingWhitelist ()Z o
	isWhiteListed (Lcom/mojang/authlib/GameProfile;)Z e
	load (Lnet/minecraft/server/level/ServerPlayer;)Lnet/minecraft/nbt/CompoundTag; a
	op (Lcom/mojang/authlib/GameProfile;)V a
	placeNewPlayer (Lnet/minecraft/network/Connection;Lnet/minecraft/server/level/ServerPlayer;)V a
	reloadResources ()V t
	reloadWhiteList ()V a
	remove (Lnet/minecraft/server/level/ServerPlayer;)V c
	removeAll ()V r
	respawn (Lnet/minecraft/server/level/ServerPlayer;Z)Lnet/minecraft/server/level/ServerPlayer; a
	save (Lnet/minecraft/server/level/ServerPlayer;)V b
	saveAll ()V h
	sendAllPlayerInfo (Lnet/minecraft/server/level/ServerPlayer;)V e
	sendLevelInfo (Lnet/minecraft/server/level/ServerPlayer;Lnet/minecraft/server/level/ServerLevel;)V a
	sendPlayerPermissionLevel (Lnet/minecraft/server/level/ServerPlayer;)V d
	sendPlayerPermissionLevel (Lnet/minecraft/server/level/ServerPlayer;I)V a
	setAllowCheatsForAllPlayers (Z)V b
	setLevel (Lnet/minecraft/server/level/ServerLevel;)V a
	setOverrideGameMode (Lnet/minecraft/world/level/GameType;)V a
	setUsingWhiteList (Z)V a
	setViewDistance (I)V a
	tick ()V d
	updateEntireScoreboard (Lnet/minecraft/server/ServerScoreboard;Lnet/minecraft/server/level/ServerPlayer;)V a
	updatePlayerGameMode (Lnet/minecraft/server/level/ServerPlayer;Lnet/minecraft/server/level/ServerPlayer;Lnet/minecraft/server/level/ServerLevel;)V a
	whiteList (Lcom/mojang/authlib/GameProfile;)V d
net/minecraft/server/players/ServerOpList act
	canBypassPlayerLimit (Lcom/mojang/authlib/GameProfile;)Z b
	createEntry (Lcom/google/gson/JsonObject;)Lnet/minecraft/server/players/StoredUserEntry; a
	find (Ljava/lang/String;)Lcom/mojang/authlib/GameProfile; a
	getKeyForUser (Lcom/mojang/authlib/GameProfile;)Ljava/lang/String; c
	getKeyForUser (Ljava/lang/Object;)Ljava/lang/String; a
	getOpLevel (Lcom/mojang/authlib/GameProfile;)I a
	getUserList ()[Ljava/lang/String; a
net/minecraft/server/players/ServerOpListEntry acu
	bypassesPlayerLimit b
	level a
	createGameProfile (Lcom/google/gson/JsonObject;)Lcom/mojang/authlib/GameProfile; b
	getBypassesPlayerLimit ()Z b
	getLevel ()I a
	serialize (Lcom/google/gson/JsonObject;)V a
net/minecraft/server/players/StoredUserEntry acv
	user a
	getUser ()Ljava/lang/Object; g
	hasExpired ()Z f
	serialize (Lcom/google/gson/JsonObject;)V a
net/minecraft/server/players/StoredUserList acw
	GSON b
	LOGGER a
	file c
	map d
	add (Lnet/minecraft/server/players/StoredUserEntry;)V a
	contains (Ljava/lang/Object;)Z d
	createEntry (Lcom/google/gson/JsonObject;)Lnet/minecraft/server/players/StoredUserEntry; a
	get (Ljava/lang/Object;)Lnet/minecraft/server/players/StoredUserEntry; b
	getEntries ()Ljava/util/Collection; d
	getFile ()Ljava/io/File; b
	getKeyForUser (Ljava/lang/Object;)Ljava/lang/String; a
	getUserList ()[Ljava/lang/String; a
	isEmpty ()Z c
	load ()V f
	remove (Ljava/lang/Object;)V c
	remove (Lnet/minecraft/server/players/StoredUserEntry;)V b
	removeExpired ()V g
	save ()V e
net/minecraft/server/players/UserBanList acx
	createEntry (Lcom/google/gson/JsonObject;)Lnet/minecraft/server/players/StoredUserEntry; a
	find (Ljava/lang/String;)Lcom/mojang/authlib/GameProfile; a
	getKeyForUser (Lcom/mojang/authlib/GameProfile;)Ljava/lang/String; b
	getKeyForUser (Ljava/lang/Object;)Ljava/lang/String; a
	getUserList ()[Ljava/lang/String; a
	isBanned (Lcom/mojang/authlib/GameProfile;)Z a
net/minecraft/server/players/UserBanListEntry acy
	createGameProfile (Lcom/google/gson/JsonObject;)Lcom/mojang/authlib/GameProfile; b
	getDisplayName ()Lnet/minecraft/network/chat/Component; e
	serialize (Lcom/google/gson/JsonObject;)V a
net/minecraft/server/players/UserWhiteList acz
	createEntry (Lcom/google/gson/JsonObject;)Lnet/minecraft/server/players/StoredUserEntry; a
	find (Ljava/lang/String;)Lcom/mojang/authlib/GameProfile; a
	getKeyForUser (Lcom/mojang/authlib/GameProfile;)Ljava/lang/String; b
	getKeyForUser (Ljava/lang/Object;)Ljava/lang/String; a
	getUserList ()[Ljava/lang/String; a
	isWhiteListed (Lcom/mojang/authlib/GameProfile;)Z a
net/minecraft/server/players/UserWhiteListEntry ada
	createGameProfile (Lcom/google/gson/JsonObject;)Lcom/mojang/authlib/GameProfile; b
	serialize (Lcom/google/gson/JsonObject;)V a
net/minecraft/server/rcon/NetworkDataOutputStream adc
	dataOutputStream b
	outputStream a
	reset ()V b
	toByteArray ()[B a
	write (I)V a
	writeBytes ([B)V a
	writeFloat (F)V a
	writeInt (I)V b
	writeShort (S)V a
	writeString (Ljava/lang/String;)V a
net/minecraft/server/rcon/PktUtils add
	HEX_CHAR a
	intFromByteArray ([BI)I a
	intFromByteArray ([BII)I b
	intFromNetworkByteArray ([BII)I c
	stringFromByteArray ([BII)Ljava/lang/String; a
	toHexString (B)Ljava/lang/String; a
net/minecraft/server/rcon/RconConsoleSource ade
	RCON_COMPONENT b
	buffer c
	server d
	acceptsFailure ()Z b
	acceptsSuccess ()Z a
	createCommandSourceStack ()Lnet/minecraft/commands/CommandSourceStack; f
	getCommandResponse ()Ljava/lang/String; e
	prepareForCommand ()V d
	sendMessage (Lnet/minecraft/network/chat/Component;Ljava/util/UUID;)V a
	shouldInformAdmins ()Z R_
net/minecraft/server/rcon/thread/GenericThread adg
	LOGGER d
	UNIQUE_THREAD_ID e
	name b
	running a
	thread c
	isRunning ()Z c
	start ()Z a
	stop ()V b
net/minecraft/server/rcon/thread/QueryThreadGs4 adh
	LOGGER d
	buffer l
	hostIp m
	lastChallengeCheck e
	lastRulesResponse q
	maxPlayers h
	port f
	rulesResponse p
	serverInterface r
	serverIp n
	serverName i
	serverPort g
	socket k
	validChallenges o
	worldName j
	buildRuleResponse (Ljava/net/DatagramPacket;)[B b
	create (Lnet/minecraft/server/ServerInterface;)Lnet/minecraft/server/rcon/thread/QueryThreadGs4; a
	getIdentBytes (Ljava/net/SocketAddress;)[B a
	initSocket ()Z e
	processPacket (Ljava/net/DatagramPacket;)Z a
	pruneChallenges ()V d
	recoverSocketError (Ljava/lang/Exception;)V a
	sendChallenge (Ljava/net/DatagramPacket;)V d
	sendTo ([BLjava/net/DatagramPacket;)V a
	start ()Z a
	validChallenge (Ljava/net/DatagramPacket;)Ljava/lang/Boolean; c
net/minecraft/server/rcon/thread/QueryThreadGs4$RequestChallenge adh$a
	challenge b
	challengeBytes d
	ident e
	identBytes c
	time a
	before (J)Ljava/lang/Boolean; a
	getChallenge ()I a
	getChallengeBytes ()[B b
	getIdent ()Ljava/lang/String; d
	getIdentBytes ()[B c
net/minecraft/server/rcon/thread/RconClient adi
	LOGGER d
	authed e
	buf g
	client f
	rconPassword h
	serverInterface i
	closeSocket ()V e
	send (IILjava/lang/String;)V a
	sendAuthFailure ()V d
	sendCmdResponse (ILjava/lang/String;)V a
	stop ()V b
net/minecraft/server/rcon/thread/RconThread adj
	LOGGER d
	clients g
	rconPassword f
	serverInterface h
	socket e
	clearClients ()V d
	closeSocket (Ljava/net/ServerSocket;)V a
	create (Lnet/minecraft/server/ServerInterface;)Lnet/minecraft/server/rcon/thread/RconThread; a
	stop ()V b
net/minecraft/sounds/Music adl
	CODEC a
	event b
	maxDelay d
	minDelay c
	replaceCurrentMusic e
	getEvent ()Lnet/minecraft/sounds/SoundEvent; a
	getMaxDelay ()I c
	getMinDelay ()I b
	replaceCurrentMusic ()Z d
net/minecraft/sounds/Musics adm
	CREATIVE b
	CREDITS c
	END e
	END_BOSS d
	GAME g
	MENU a
	UNDER_WATER f
	createGameMusic (Lnet/minecraft/sounds/SoundEvent;)Lnet/minecraft/sounds/Music; a
net/minecraft/sounds/SoundEvent adn
	CODEC a
	location b
	getLocation ()Lnet/minecraft/resources/ResourceLocation; a
net/minecraft/sounds/SoundEvents ado
	AMBIENT_BASALT_DELTAS_ADDITIONS b
	AMBIENT_BASALT_DELTAS_LOOP c
	AMBIENT_BASALT_DELTAS_MOOD d
	AMBIENT_CAVE a
	AMBIENT_CRIMSON_FOREST_ADDITIONS e
	AMBIENT_CRIMSON_FOREST_LOOP f
	AMBIENT_CRIMSON_FOREST_MOOD g
	AMBIENT_NETHER_WASTES_ADDITIONS h
	AMBIENT_NETHER_WASTES_LOOP i
	AMBIENT_NETHER_WASTES_MOOD j
	AMBIENT_SOUL_SAND_VALLEY_ADDITIONS k
	AMBIENT_SOUL_SAND_VALLEY_LOOP l
	AMBIENT_SOUL_SAND_VALLEY_MOOD m
	AMBIENT_UNDERWATER_ENTER q
	AMBIENT_UNDERWATER_EXIT r
	AMBIENT_UNDERWATER_LOOP s
	AMBIENT_UNDERWATER_LOOP_ADDITIONS t
	AMBIENT_UNDERWATER_LOOP_ADDITIONS_RARE u
	AMBIENT_UNDERWATER_LOOP_ADDITIONS_ULTRA_RARE v
	AMBIENT_WARPED_FOREST_ADDITIONS n
	AMBIENT_WARPED_FOREST_LOOP o
	AMBIENT_WARPED_FOREST_MOOD p
	ANCIENT_DEBRIS_BREAK w
	ANCIENT_DEBRIS_FALL A
	ANCIENT_DEBRIS_HIT z
	ANCIENT_DEBRIS_PLACE y
	ANCIENT_DEBRIS_STEP x
	ANVIL_BREAK B
	ANVIL_DESTROY C
	ANVIL_FALL D
	ANVIL_HIT E
	ANVIL_LAND F
	ANVIL_PLACE G
	ANVIL_STEP H
	ANVIL_USE I
	ARMOR_EQUIP_CHAIN J
	ARMOR_EQUIP_DIAMOND K
	ARMOR_EQUIP_ELYTRA L
	ARMOR_EQUIP_GENERIC M
	ARMOR_EQUIP_GOLD N
	ARMOR_EQUIP_IRON O
	ARMOR_EQUIP_LEATHER P
	ARMOR_EQUIP_NETHERITE Q
	ARMOR_EQUIP_TURTLE R
	ARMOR_STAND_BREAK S
	ARMOR_STAND_FALL T
	ARMOR_STAND_HIT U
	ARMOR_STAND_PLACE V
	ARROW_HIT W
	ARROW_HIT_PLAYER X
	ARROW_SHOOT Y
	AXE_STRIP Z
	BAMBOO_BREAK aa
	BAMBOO_FALL ab
	BAMBOO_HIT ac
	BAMBOO_PLACE ad
	BAMBOO_SAPLING_BREAK af
	BAMBOO_SAPLING_HIT ag
	BAMBOO_SAPLING_PLACE ah
	BAMBOO_STEP ae
	BARREL_CLOSE ai
	BARREL_OPEN aj
	BASALT_BREAK ak
	BASALT_FALL ao
	BASALT_HIT an
	BASALT_PLACE am
	BASALT_STEP al
	BAT_AMBIENT ap
	BAT_DEATH aq
	BAT_HURT ar
	BAT_LOOP as
	BAT_TAKEOFF at
	BEACON_ACTIVATE au
	BEACON_AMBIENT av
	BEACON_DEACTIVATE aw
	BEACON_POWER_SELECT ax
	BEEHIVE_DRIP aE
	BEEHIVE_ENTER aF
	BEEHIVE_EXIT aG
	BEEHIVE_SHEAR aH
	BEEHIVE_WORK aI
	BEE_DEATH ay
	BEE_HURT az
	BEE_LOOP aB
	BEE_LOOP_AGGRESSIVE aA
	BEE_POLLINATE aD
	BEE_STING aC
	BELL_BLOCK aJ
	BELL_RESONATE aK
	BLASTFURNACE_FIRE_CRACKLE aZ
	BLAZE_AMBIENT aL
	BLAZE_BURN aM
	BLAZE_DEATH aN
	BLAZE_HURT aO
	BLAZE_SHOOT aP
	BOAT_PADDLE_LAND aQ
	BOAT_PADDLE_WATER aR
	BONE_BLOCK_BREAK aS
	BONE_BLOCK_FALL aT
	BONE_BLOCK_HIT aU
	BONE_BLOCK_PLACE aV
	BONE_BLOCK_STEP aW
	BOOK_PAGE_TURN aX
	BOOK_PUT aY
	BOTTLE_EMPTY ba
	BOTTLE_FILL bb
	BOTTLE_FILL_DRAGONBREATH bc
	BREWING_STAND_BREW bd
	BUBBLE_COLUMN_BUBBLE_POP be
	BUBBLE_COLUMN_UPWARDS_AMBIENT bf
	BUBBLE_COLUMN_UPWARDS_INSIDE bg
	BUBBLE_COLUMN_WHIRLPOOL_AMBIENT bh
	BUBBLE_COLUMN_WHIRLPOOL_INSIDE bi
	BUCKET_EMPTY bj
	BUCKET_EMPTY_FISH bk
	BUCKET_EMPTY_LAVA bl
	BUCKET_FILL bm
	BUCKET_FILL_FISH bn
	BUCKET_FILL_LAVA bo
	CAMPFIRE_CRACKLE bp
	CAT_AMBIENT bq
	CAT_BEG_FOR_FOOD bv
	CAT_DEATH bs
	CAT_EAT bt
	CAT_HISS bu
	CAT_HURT bw
	CAT_PURR bx
	CAT_PURREOW by
	CAT_STRAY_AMBIENT br
	CHAIN_BREAK bz
	CHAIN_FALL bA
	CHAIN_HIT bB
	CHAIN_PLACE bC
	CHAIN_STEP bD
	CHEST_CLOSE bE
	CHEST_LOCKED bF
	CHEST_OPEN bG
	CHICKEN_AMBIENT bH
	CHICKEN_DEATH bI
	CHICKEN_EGG bJ
	CHICKEN_HURT bK
	CHICKEN_STEP bL
	CHORUS_FLOWER_DEATH bM
	CHORUS_FLOWER_GROW bN
	CHORUS_FRUIT_TELEPORT bO
	COD_AMBIENT bP
	COD_DEATH bQ
	COD_FLOP bR
	COD_HURT bS
	COMPARATOR_CLICK bT
	COMPOSTER_EMPTY bU
	COMPOSTER_FILL bV
	COMPOSTER_FILL_SUCCESS bW
	COMPOSTER_READY bX
	CONDUIT_ACTIVATE bY
	CONDUIT_AMBIENT bZ
	CONDUIT_AMBIENT_SHORT ca
	CONDUIT_ATTACK_TARGET cb
	CONDUIT_DEACTIVATE cc
	CORAL_BLOCK_BREAK cd
	CORAL_BLOCK_FALL ce
	CORAL_BLOCK_HIT cf
	CORAL_BLOCK_PLACE cg
	CORAL_BLOCK_STEP ch
	COW_AMBIENT ci
	COW_DEATH cj
	COW_HURT ck
	COW_MILK cl
	COW_STEP cm
	CREEPER_DEATH cn
	CREEPER_HURT co
	CREEPER_PRIMED cp
	CROP_BREAK cq
	CROP_PLANTED cr
	CROSSBOW_HIT cs
	CROSSBOW_LOADING_END ct
	CROSSBOW_LOADING_MIDDLE cu
	CROSSBOW_LOADING_START cv
	CROSSBOW_QUICK_CHARGE_1 cw
	CROSSBOW_QUICK_CHARGE_2 cx
	CROSSBOW_QUICK_CHARGE_3 cy
	CROSSBOW_SHOOT cz
	DISPENSER_DISPENSE cA
	DISPENSER_FAIL cB
	DISPENSER_LAUNCH cC
	DOLPHIN_AMBIENT cD
	DOLPHIN_AMBIENT_WATER cE
	DOLPHIN_ATTACK cF
	DOLPHIN_DEATH cG
	DOLPHIN_EAT cH
	DOLPHIN_HURT cI
	DOLPHIN_JUMP cJ
	DOLPHIN_PLAY cK
	DOLPHIN_SPLASH cL
	DOLPHIN_SWIM cM
	DONKEY_AMBIENT cN
	DONKEY_ANGRY cO
	DONKEY_CHEST cP
	DONKEY_DEATH cQ
	DONKEY_EAT cR
	DONKEY_HURT cS
	DRAGON_FIREBALL_EXPLODE dr
	DROWNED_AMBIENT cT
	DROWNED_AMBIENT_WATER cU
	DROWNED_DEATH cV
	DROWNED_DEATH_WATER cW
	DROWNED_HURT cX
	DROWNED_HURT_WATER cY
	DROWNED_SHOOT cZ
	DROWNED_STEP da
	DROWNED_SWIM db
	EGG_THROW dc
	ELDER_GUARDIAN_AMBIENT dd
	ELDER_GUARDIAN_AMBIENT_LAND de
	ELDER_GUARDIAN_CURSE df
	ELDER_GUARDIAN_DEATH dg
	ELDER_GUARDIAN_DEATH_LAND dh
	ELDER_GUARDIAN_FLOP di
	ELDER_GUARDIAN_HURT dj
	ELDER_GUARDIAN_HURT_LAND dk
	ELYTRA_FLYING dl
	ENCHANTMENT_TABLE_USE dm
	ENDERMAN_AMBIENT dy
	ENDERMAN_DEATH dz
	ENDERMAN_HURT dA
	ENDERMAN_SCREAM dB
	ENDERMAN_STARE dC
	ENDERMAN_TELEPORT dD
	ENDERMITE_AMBIENT dE
	ENDERMITE_DEATH dF
	ENDERMITE_HURT dG
	ENDERMITE_STEP dH
	ENDER_CHEST_CLOSE dn
	ENDER_CHEST_OPEN do
	ENDER_DRAGON_AMBIENT dp
	ENDER_DRAGON_DEATH dq
	ENDER_DRAGON_FLAP ds
	ENDER_DRAGON_GROWL dt
	ENDER_DRAGON_HURT du
	ENDER_DRAGON_SHOOT dv
	ENDER_EYE_DEATH dw
	ENDER_EYE_LAUNCH dx
	ENDER_PEARL_THROW dI
	END_GATEWAY_SPAWN dJ
	END_PORTAL_FRAME_FILL dK
	END_PORTAL_SPAWN dL
	EVOKER_AMBIENT dM
	EVOKER_CAST_SPELL dN
	EVOKER_CELEBRATE dO
	EVOKER_DEATH dP
	EVOKER_FANGS_ATTACK dQ
	EVOKER_HURT dR
	EVOKER_PREPARE_ATTACK dS
	EVOKER_PREPARE_SUMMON dT
	EVOKER_PREPARE_WOLOLO dU
	EXPERIENCE_BOTTLE_THROW dV
	EXPERIENCE_ORB_PICKUP dW
	FENCE_GATE_CLOSE dX
	FENCE_GATE_OPEN dY
	FIRECHARGE_USE dZ
	FIREWORK_ROCKET_BLAST ea
	FIREWORK_ROCKET_BLAST_FAR eb
	FIREWORK_ROCKET_LARGE_BLAST ec
	FIREWORK_ROCKET_LARGE_BLAST_FAR ed
	FIREWORK_ROCKET_LAUNCH ee
	FIREWORK_ROCKET_SHOOT ef
	FIREWORK_ROCKET_TWINKLE eg
	FIREWORK_ROCKET_TWINKLE_FAR eh
	FIRE_AMBIENT ei
	FIRE_EXTINGUISH ej
	FISHING_BOBBER_RETRIEVE el
	FISHING_BOBBER_SPLASH em
	FISHING_BOBBER_THROW en
	FISH_SWIM ek
	FLINTANDSTEEL_USE eo
	FOX_AGGRO ep
	FOX_AMBIENT eq
	FOX_BITE er
	FOX_DEATH es
	FOX_EAT et
	FOX_HURT eu
	FOX_SCREECH ev
	FOX_SLEEP ew
	FOX_SNIFF ex
	FOX_SPIT ey
	FOX_TELEPORT ez
	FUNGUS_BREAK iQ
	FUNGUS_FALL iU
	FUNGUS_HIT iT
	FUNGUS_PLACE iS
	FUNGUS_STEP iR
	FURNACE_FIRE_CRACKLE eF
	GENERIC_BIG_FALL eG
	GENERIC_BURN eH
	GENERIC_DEATH eI
	GENERIC_DRINK eJ
	GENERIC_EAT eK
	GENERIC_EXPLODE eL
	GENERIC_EXTINGUISH_FIRE eM
	GENERIC_HURT eN
	GENERIC_SMALL_FALL eO
	GENERIC_SPLASH eP
	GENERIC_SWIM eQ
	GHAST_AMBIENT eR
	GHAST_DEATH eS
	GHAST_HURT eT
	GHAST_SCREAM eU
	GHAST_SHOOT eV
	GHAST_WARN eW
	GILDED_BLACKSTONE_BREAK eX
	GILDED_BLACKSTONE_FALL eY
	GILDED_BLACKSTONE_HIT eZ
	GILDED_BLACKSTONE_PLACE fa
	GILDED_BLACKSTONE_STEP fb
	GLASS_BREAK fc
	GLASS_FALL fd
	GLASS_HIT fe
	GLASS_PLACE ff
	GLASS_STEP fg
	GRASS_BREAK fh
	GRASS_FALL fi
	GRASS_HIT fj
	GRASS_PLACE fk
	GRASS_STEP fl
	GRAVEL_BREAK fm
	GRAVEL_FALL fn
	GRAVEL_HIT fo
	GRAVEL_PLACE fp
	GRAVEL_STEP fq
	GRINDSTONE_USE fr
	GUARDIAN_AMBIENT fs
	GUARDIAN_AMBIENT_LAND ft
	GUARDIAN_ATTACK fu
	GUARDIAN_DEATH fv
	GUARDIAN_DEATH_LAND fw
	GUARDIAN_FLOP fx
	GUARDIAN_HURT fy
	GUARDIAN_HURT_LAND fz
	HOE_TILL fA
	HOGLIN_AMBIENT fB
	HOGLIN_ANGRY fC
	HOGLIN_ATTACK fD
	HOGLIN_CONVERTED_TO_ZOMBIFIED fE
	HOGLIN_DEATH fF
	HOGLIN_HURT fG
	HOGLIN_RETREAT fH
	HOGLIN_STEP fI
	HONEY_BLOCK_BREAK fJ
	HONEY_BLOCK_FALL fK
	HONEY_BLOCK_HIT fL
	HONEY_BLOCK_PLACE fM
	HONEY_BLOCK_SLIDE fN
	HONEY_BLOCK_STEP fO
	HONEY_DRINK fP
	HORSE_AMBIENT fQ
	HORSE_ANGRY fR
	HORSE_ARMOR fS
	HORSE_BREATHE fT
	HORSE_DEATH fU
	HORSE_EAT fV
	HORSE_GALLOP fW
	HORSE_HURT fX
	HORSE_JUMP fY
	HORSE_LAND fZ
	HORSE_SADDLE ga
	HORSE_STEP gb
	HORSE_STEP_WOOD gc
	HOSTILE_BIG_FALL gd
	HOSTILE_DEATH ge
	HOSTILE_HURT gf
	HOSTILE_SMALL_FALL gg
	HOSTILE_SPLASH gh
	HOSTILE_SWIM gi
	HUSK_AMBIENT gj
	HUSK_CONVERTED_TO_ZOMBIE gk
	HUSK_DEATH gl
	HUSK_HURT gm
	HUSK_STEP gn
	ILLUSIONER_AMBIENT go
	ILLUSIONER_CAST_SPELL gp
	ILLUSIONER_DEATH gq
	ILLUSIONER_HURT gr
	ILLUSIONER_MIRROR_MOVE gs
	ILLUSIONER_PREPARE_BLINDNESS gt
	ILLUSIONER_PREPARE_MIRROR gu
	IRON_DOOR_CLOSE gv
	IRON_DOOR_OPEN gw
	IRON_GOLEM_ATTACK gx
	IRON_GOLEM_DAMAGE gy
	IRON_GOLEM_DEATH gz
	IRON_GOLEM_HURT gA
	IRON_GOLEM_REPAIR gB
	IRON_GOLEM_STEP gC
	IRON_TRAPDOOR_CLOSE gD
	IRON_TRAPDOOR_OPEN gE
	ITEM_BREAK gK
	ITEM_FRAME_ADD_ITEM gF
	ITEM_FRAME_BREAK gG
	ITEM_FRAME_PLACE gH
	ITEM_FRAME_REMOVE_ITEM gI
	ITEM_FRAME_ROTATE_ITEM gJ
	ITEM_PICKUP gL
	LADDER_BREAK gM
	LADDER_FALL gN
	LADDER_HIT gO
	LADDER_PLACE gP
	LADDER_STEP gQ
	LANTERN_BREAK gR
	LANTERN_FALL gS
	LANTERN_HIT gT
	LANTERN_PLACE gU
	LANTERN_STEP gV
	LAVA_AMBIENT gW
	LAVA_EXTINGUISH gX
	LAVA_POP gY
	LEASH_KNOT_BREAK gZ
	LEASH_KNOT_PLACE ha
	LEVER_CLICK hb
	LIGHTNING_BOLT_IMPACT hc
	LIGHTNING_BOLT_THUNDER hd
	LILY_PAD_PLACE qr
	LINGERING_POTION_THROW he
	LLAMA_AMBIENT hf
	LLAMA_ANGRY hg
	LLAMA_CHEST hh
	LLAMA_DEATH hi
	LLAMA_EAT hj
	LLAMA_HURT hk
	LLAMA_SPIT hl
	LLAMA_STEP hm
	LLAMA_SWAG hn
	LODESTONE_BREAK hp
	LODESTONE_COMPASS_LOCK hu
	LODESTONE_FALL ht
	LODESTONE_HIT hs
	LODESTONE_PLACE hr
	LODESTONE_STEP hq
	MAGMA_CUBE_DEATH hv
	MAGMA_CUBE_DEATH_SMALL ho
	MAGMA_CUBE_HURT hw
	MAGMA_CUBE_HURT_SMALL hx
	MAGMA_CUBE_JUMP hy
	MAGMA_CUBE_SQUISH hz
	MAGMA_CUBE_SQUISH_SMALL hA
	METAL_BREAK hB
	METAL_FALL hC
	METAL_HIT hD
	METAL_PLACE hE
	METAL_PRESSURE_PLATE_CLICK_OFF hF
	METAL_PRESSURE_PLATE_CLICK_ON hG
	METAL_STEP hH
	MINECART_INSIDE hI
	MINECART_RIDING hJ
	MOOSHROOM_CONVERT hK
	MOOSHROOM_EAT hL
	MOOSHROOM_MILK hM
	MOOSHROOM_MILK_SUSPICIOUSLY hN
	MOOSHROOM_SHEAR hO
	MULE_AMBIENT hP
	MULE_ANGRY hQ
	MULE_CHEST hR
	MULE_DEATH hS
	MULE_EAT hT
	MULE_HURT hU
	MUSIC_BIOME_BASALT_DELTAS io
	MUSIC_BIOME_CRIMSON_FOREST ir
	MUSIC_BIOME_NETHER_WASTES ip
	MUSIC_BIOME_SOUL_SAND_VALLEY iq
	MUSIC_BIOME_WARPED_FOREST is
	MUSIC_CREATIVE hV
	MUSIC_CREDITS hW
	MUSIC_DISC_11 hX
	MUSIC_DISC_13 hY
	MUSIC_DISC_BLOCKS hZ
	MUSIC_DISC_CAT ia
	MUSIC_DISC_CHIRP ib
	MUSIC_DISC_FAR ic
	MUSIC_DISC_MALL id
	MUSIC_DISC_MELLOHI ie
	MUSIC_DISC_PIGSTEP if
	MUSIC_DISC_STAL ig
	MUSIC_DISC_STRAD ih
	MUSIC_DISC_WAIT ii
	MUSIC_DISC_WARD ij
	MUSIC_DRAGON ik
	MUSIC_END il
	MUSIC_GAME im
	MUSIC_MENU in
	MUSIC_UNDER_WATER it
	NETHERITE_BLOCK_BREAK jf
	NETHERITE_BLOCK_FALL jj
	NETHERITE_BLOCK_HIT ji
	NETHERITE_BLOCK_PLACE jh
	NETHERITE_BLOCK_STEP jg
	NETHERRACK_BREAK jk
	NETHERRACK_FALL jo
	NETHERRACK_HIT jn
	NETHERRACK_PLACE jm
	NETHERRACK_STEP jl
	NETHER_BRICKS_BREAK iu
	NETHER_BRICKS_FALL iy
	NETHER_BRICKS_HIT ix
	NETHER_BRICKS_PLACE iw
	NETHER_BRICKS_STEP iv
	NETHER_GOLD_ORE_BREAK mm
	NETHER_GOLD_ORE_FALL mn
	NETHER_GOLD_ORE_HIT mo
	NETHER_GOLD_ORE_PLACE mp
	NETHER_GOLD_ORE_STEP mq
	NETHER_ORE_BREAK mr
	NETHER_ORE_FALL ms
	NETHER_ORE_HIT mt
	NETHER_ORE_PLACE mu
	NETHER_ORE_STEP mv
	NETHER_SPROUTS_BREAK iL
	NETHER_SPROUTS_FALL iP
	NETHER_SPROUTS_HIT iO
	NETHER_SPROUTS_PLACE iN
	NETHER_SPROUTS_STEP iM
	NETHER_WART_BREAK iz
	NETHER_WART_PLANTED iA
	NOTE_BLOCK_BANJO jE
	NOTE_BLOCK_BASEDRUM jp
	NOTE_BLOCK_BASS jq
	NOTE_BLOCK_BELL jr
	NOTE_BLOCK_BIT jD
	NOTE_BLOCK_CHIME js
	NOTE_BLOCK_COW_BELL jB
	NOTE_BLOCK_DIDGERIDOO jC
	NOTE_BLOCK_FLUTE jt
	NOTE_BLOCK_GUITAR ju
	NOTE_BLOCK_HARP jv
	NOTE_BLOCK_HAT jw
	NOTE_BLOCK_IRON_XYLOPHONE jA
	NOTE_BLOCK_PLING jx
	NOTE_BLOCK_SNARE jy
	NOTE_BLOCK_XYLOPHONE jz
	NYLIUM_BREAK iG
	NYLIUM_FALL iK
	NYLIUM_HIT iJ
	NYLIUM_PLACE iI
	NYLIUM_STEP iH
	OCELOT_AMBIENT jG
	OCELOT_DEATH jH
	OCELOT_HURT jF
	PAINTING_BREAK jI
	PAINTING_PLACE jJ
	PANDA_AGGRESSIVE_AMBIENT jR
	PANDA_AMBIENT jM
	PANDA_BITE jU
	PANDA_CANT_BREED jQ
	PANDA_DEATH jN
	PANDA_EAT jO
	PANDA_HURT jT
	PANDA_PRE_SNEEZE jK
	PANDA_SNEEZE jL
	PANDA_STEP jP
	PANDA_WORRIED_AMBIENT jS
	PARROT_AMBIENT jV
	PARROT_DEATH jW
	PARROT_EAT jX
	PARROT_FLY jY
	PARROT_HURT jZ
	PARROT_IMITATE_BLAZE ka
	PARROT_IMITATE_CREEPER kb
	PARROT_IMITATE_DROWNED kc
	PARROT_IMITATE_ELDER_GUARDIAN kd
	PARROT_IMITATE_ENDERMITE kf
	PARROT_IMITATE_ENDER_DRAGON ke
	PARROT_IMITATE_EVOKER kg
	PARROT_IMITATE_GHAST kh
	PARROT_IMITATE_GUARDIAN ki
	PARROT_IMITATE_HOGLIN kj
	PARROT_IMITATE_HUSK kk
	PARROT_IMITATE_ILLUSIONER kl
	PARROT_IMITATE_MAGMA_CUBE km
	PARROT_IMITATE_PHANTOM kn
	PARROT_IMITATE_PIGLIN ko
	PARROT_IMITATE_PIGLIN_BRUTE kp
	PARROT_IMITATE_PILLAGER kq
	PARROT_IMITATE_RAVAGER kr
	PARROT_IMITATE_SHULKER ks
	PARROT_IMITATE_SILVERFISH kt
	PARROT_IMITATE_SKELETON ku
	PARROT_IMITATE_SLIME kv
	PARROT_IMITATE_SPIDER kw
	PARROT_IMITATE_STRAY kx
	PARROT_IMITATE_VEX ky
	PARROT_IMITATE_VINDICATOR kz
	PARROT_IMITATE_WITCH kA
	PARROT_IMITATE_WITHER kB
	PARROT_IMITATE_WITHER_SKELETON kC
	PARROT_IMITATE_ZOGLIN kD
	PARROT_IMITATE_ZOMBIE kE
	PARROT_IMITATE_ZOMBIE_VILLAGER kF
	PARROT_STEP kG
	PHANTOM_AMBIENT kH
	PHANTOM_BITE kI
	PHANTOM_DEATH kJ
	PHANTOM_FLAP kK
	PHANTOM_HURT kL
	PHANTOM_SWOOP kM
	PIGLIN_ADMIRING_ITEM kS
	PIGLIN_AMBIENT kT
	PIGLIN_ANGRY kU
	PIGLIN_BRUTE_AMBIENT lc
	PIGLIN_BRUTE_ANGRY ld
	PIGLIN_BRUTE_CONVERTED_TO_ZOMBIFIED lh
	PIGLIN_BRUTE_DEATH le
	PIGLIN_BRUTE_HURT lf
	PIGLIN_BRUTE_STEP lg
	PIGLIN_CELEBRATE kV
	PIGLIN_CONVERTED_TO_ZOMBIFIED lb
	PIGLIN_DEATH kW
	PIGLIN_HURT kY
	PIGLIN_JEALOUS kX
	PIGLIN_RETREAT kZ
	PIGLIN_STEP la
	PIG_AMBIENT kN
	PIG_DEATH kO
	PIG_HURT kP
	PIG_SADDLE kQ
	PIG_STEP kR
	PILLAGER_AMBIENT li
	PILLAGER_CELEBRATE lj
	PILLAGER_DEATH lk
	PILLAGER_HURT ll
	PISTON_CONTRACT lm
	PISTON_EXTEND ln
	PLAYER_ATTACK_CRIT lo
	PLAYER_ATTACK_KNOCKBACK lp
	PLAYER_ATTACK_NODAMAGE lq
	PLAYER_ATTACK_STRONG lr
	PLAYER_ATTACK_SWEEP ls
	PLAYER_ATTACK_WEAK lt
	PLAYER_BIG_FALL lu
	PLAYER_BREATH lv
	PLAYER_BURP lw
	PLAYER_DEATH lx
	PLAYER_HURT ly
	PLAYER_HURT_DROWN lz
	PLAYER_HURT_ON_FIRE lA
	PLAYER_HURT_SWEET_BERRY_BUSH lB
	PLAYER_LEVELUP lC
	PLAYER_SMALL_FALL lD
	PLAYER_SPLASH lE
	PLAYER_SPLASH_HIGH_SPEED lF
	PLAYER_SWIM lG
	POLAR_BEAR_AMBIENT lH
	POLAR_BEAR_AMBIENT_BABY lI
	POLAR_BEAR_DEATH lJ
	POLAR_BEAR_HURT lK
	POLAR_BEAR_STEP lL
	POLAR_BEAR_WARNING lM
	PORTAL_AMBIENT lN
	PORTAL_TRAVEL lO
	PORTAL_TRIGGER lP
	PUFFER_FISH_AMBIENT lQ
	PUFFER_FISH_BLOW_OUT lR
	PUFFER_FISH_BLOW_UP lS
	PUFFER_FISH_DEATH lT
	PUFFER_FISH_FLOP lU
	PUFFER_FISH_HURT lV
	PUFFER_FISH_STING lW
	PUMPKIN_CARVE lX
	RABBIT_AMBIENT lY
	RABBIT_ATTACK lZ
	RABBIT_DEATH ma
	RABBIT_HURT mb
	RABBIT_JUMP mc
	RAID_HORN md
	RAVAGER_AMBIENT me
	RAVAGER_ATTACK mf
	RAVAGER_CELEBRATE mg
	RAVAGER_DEATH mh
	RAVAGER_HURT mi
	RAVAGER_ROAR ml
	RAVAGER_STEP mj
	RAVAGER_STUNNED mk
	REDSTONE_TORCH_BURNOUT mw
	RESPAWN_ANCHOR_AMBIENT mx
	RESPAWN_ANCHOR_CHARGE my
	RESPAWN_ANCHOR_DEPLETE mz
	RESPAWN_ANCHOR_SET_SPAWN mA
	ROOTS_BREAK eA
	ROOTS_FALL eE
	ROOTS_HIT eD
	ROOTS_PLACE eC
	ROOTS_STEP eB
	SALMON_AMBIENT mB
	SALMON_DEATH mC
	SALMON_FLOP mD
	SALMON_HURT mE
	SAND_BREAK mF
	SAND_FALL mG
	SAND_HIT mH
	SAND_PLACE mI
	SAND_STEP mJ
	SCAFFOLDING_BREAK mK
	SCAFFOLDING_FALL mL
	SCAFFOLDING_HIT mM
	SCAFFOLDING_PLACE mN
	SCAFFOLDING_STEP mO
	SHEEP_AMBIENT mP
	SHEEP_DEATH mQ
	SHEEP_HURT mR
	SHEEP_SHEAR mS
	SHEEP_STEP mT
	SHIELD_BLOCK mU
	SHIELD_BREAK mV
	SHOVEL_FLATTEN nb
	SHROOMLIGHT_BREAK mW
	SHROOMLIGHT_FALL na
	SHROOMLIGHT_HIT mZ
	SHROOMLIGHT_PLACE mY
	SHROOMLIGHT_STEP mX
	SHULKER_AMBIENT nc
	SHULKER_BOX_CLOSE nd
	SHULKER_BOX_OPEN ne
	SHULKER_BULLET_HIT nf
	SHULKER_BULLET_HURT ng
	SHULKER_CLOSE nh
	SHULKER_DEATH ni
	SHULKER_HURT nj
	SHULKER_HURT_CLOSED nk
	SHULKER_OPEN nl
	SHULKER_SHOOT nm
	SHULKER_TELEPORT nn
	SILVERFISH_AMBIENT no
	SILVERFISH_DEATH np
	SILVERFISH_HURT nq
	SILVERFISH_STEP nr
	SKELETON_AMBIENT ns
	SKELETON_DEATH nt
	SKELETON_HORSE_AMBIENT nu
	SKELETON_HORSE_AMBIENT_WATER ny
	SKELETON_HORSE_DEATH nv
	SKELETON_HORSE_GALLOP_WATER nz
	SKELETON_HORSE_HURT nw
	SKELETON_HORSE_JUMP_WATER nA
	SKELETON_HORSE_STEP_WATER nB
	SKELETON_HORSE_SWIM nx
	SKELETON_HURT nC
	SKELETON_SHOOT nD
	SKELETON_STEP nE
	SLIME_ATTACK nF
	SLIME_BLOCK_BREAK nK
	SLIME_BLOCK_FALL nL
	SLIME_BLOCK_HIT nM
	SLIME_BLOCK_PLACE nN
	SLIME_BLOCK_STEP nO
	SLIME_DEATH nG
	SLIME_DEATH_SMALL oj
	SLIME_HURT nH
	SLIME_HURT_SMALL ok
	SLIME_JUMP nI
	SLIME_JUMP_SMALL ol
	SLIME_SQUISH nJ
	SLIME_SQUISH_SMALL om
	SMITHING_TABLE_USE on
	SMOKER_SMOKE oo
	SNOWBALL_THROW op
	SNOW_BREAK oq
	SNOW_FALL or
	SNOW_GOLEM_AMBIENT os
	SNOW_GOLEM_DEATH ot
	SNOW_GOLEM_HURT ou
	SNOW_GOLEM_SHEAR ow
	SNOW_GOLEM_SHOOT ov
	SNOW_HIT ox
	SNOW_PLACE oy
	SNOW_STEP oz
	SOUL_ESCAPE nZ
	SOUL_SAND_BREAK nP
	SOUL_SAND_FALL nT
	SOUL_SAND_HIT nS
	SOUL_SAND_PLACE nR
	SOUL_SAND_STEP nQ
	SOUL_SOIL_BREAK nU
	SOUL_SOIL_FALL nY
	SOUL_SOIL_HIT nX
	SOUL_SOIL_PLACE nW
	SOUL_SOIL_STEP nV
	SPIDER_AMBIENT oA
	SPIDER_DEATH oB
	SPIDER_HURT oC
	SPIDER_STEP oD
	SPLASH_POTION_BREAK oE
	SPLASH_POTION_THROW oF
	SQUID_AMBIENT oG
	SQUID_DEATH oH
	SQUID_HURT oI
	SQUID_SQUIRT oJ
	STEM_BREAK iB
	STEM_FALL iF
	STEM_HIT iE
	STEM_PLACE iD
	STEM_STEP iC
	STONE_BREAK oK
	STONE_BUTTON_CLICK_OFF oL
	STONE_BUTTON_CLICK_ON oM
	STONE_FALL oN
	STONE_HIT oO
	STONE_PLACE oP
	STONE_PRESSURE_PLATE_CLICK_OFF oQ
	STONE_PRESSURE_PLATE_CLICK_ON oR
	STONE_STEP oS
	STRAY_AMBIENT oT
	STRAY_DEATH oU
	STRAY_HURT oV
	STRAY_STEP oW
	STRIDER_AMBIENT oa
	STRIDER_DEATH od
	STRIDER_EAT oh
	STRIDER_HAPPY ob
	STRIDER_HURT oe
	STRIDER_RETREAT oc
	STRIDER_SADDLE oi
	STRIDER_STEP of
	STRIDER_STEP_LAVA og
	SWEET_BERRY_BUSH_BREAK oX
	SWEET_BERRY_BUSH_PICK_BERRIES oZ
	SWEET_BERRY_BUSH_PLACE oY
	THORNS_HIT pa
	TNT_PRIMED pb
	TOTEM_USE pc
	TRIDENT_HIT pd
	TRIDENT_HIT_GROUND pe
	TRIDENT_RETURN pf
	TRIDENT_RIPTIDE_1 pg
	TRIDENT_RIPTIDE_2 ph
	TRIDENT_RIPTIDE_3 pi
	TRIDENT_THROW pj
	TRIDENT_THUNDER pk
	TRIPWIRE_ATTACH pl
	TRIPWIRE_CLICK_OFF pm
	TRIPWIRE_CLICK_ON pn
	TRIPWIRE_DETACH po
	TROPICAL_FISH_AMBIENT pp
	TROPICAL_FISH_DEATH pq
	TROPICAL_FISH_FLOP pr
	TROPICAL_FISH_HURT ps
	TURTLE_AMBIENT_LAND pt
	TURTLE_DEATH pu
	TURTLE_DEATH_BABY pv
	TURTLE_EGG_BREAK pw
	TURTLE_EGG_CRACK px
	TURTLE_EGG_HATCH py
	TURTLE_HURT pz
	TURTLE_HURT_BABY pA
	TURTLE_LAY_EGG pB
	TURTLE_SHAMBLE pC
	TURTLE_SHAMBLE_BABY pD
	TURTLE_SWIM pE
	UI_BUTTON_CLICK pF
	UI_CARTOGRAPHY_TABLE_TAKE_RESULT pI
	UI_LOOM_SELECT_PATTERN pG
	UI_LOOM_TAKE_RESULT pH
	UI_STONECUTTER_SELECT_RECIPE pK
	UI_STONECUTTER_TAKE_RESULT pJ
	UI_TOAST_CHALLENGE_COMPLETE pL
	UI_TOAST_IN pM
	UI_TOAST_OUT pN
	VEX_AMBIENT pO
	VEX_CHARGE pP
	VEX_DEATH pQ
	VEX_HURT pR
	VILLAGER_AMBIENT pS
	VILLAGER_CELEBRATE pT
	VILLAGER_DEATH pU
	VILLAGER_HURT pV
	VILLAGER_NO pW
	VILLAGER_TRADE pX
	VILLAGER_WORK_ARMORER pZ
	VILLAGER_WORK_BUTCHER qa
	VILLAGER_WORK_CARTOGRAPHER qb
	VILLAGER_WORK_CLERIC qc
	VILLAGER_WORK_FARMER qd
	VILLAGER_WORK_FISHERMAN qe
	VILLAGER_WORK_FLETCHER qf
	VILLAGER_WORK_LEATHERWORKER qg
	VILLAGER_WORK_LIBRARIAN qh
	VILLAGER_WORK_MASON qi
	VILLAGER_WORK_SHEPHERD qj
	VILLAGER_WORK_TOOLSMITH qk
	VILLAGER_WORK_WEAPONSMITH ql
	VILLAGER_YES pY
	VINDICATOR_AMBIENT qm
	VINDICATOR_CELEBRATE qn
	VINDICATOR_DEATH qo
	VINDICATOR_HURT qp
	VINE_STEP qq
	WANDERING_TRADER_AMBIENT qs
	WANDERING_TRADER_DEATH qt
	WANDERING_TRADER_DISAPPEARED qu
	WANDERING_TRADER_DRINK_MILK qv
	WANDERING_TRADER_DRINK_POTION qw
	WANDERING_TRADER_HURT qx
	WANDERING_TRADER_NO qy
	WANDERING_TRADER_REAPPEARED qz
	WANDERING_TRADER_TRADE qA
	WANDERING_TRADER_YES qB
	WART_BLOCK_BREAK ja
	WART_BLOCK_FALL je
	WART_BLOCK_HIT jd
	WART_BLOCK_PLACE jc
	WART_BLOCK_STEP jb
	WATER_AMBIENT qC
	WEATHER_RAIN qD
	WEATHER_RAIN_ABOVE qE
	WEEPING_VINES_BREAK iV
	WEEPING_VINES_FALL iZ
	WEEPING_VINES_HIT iY
	WEEPING_VINES_PLACE iX
	WEEPING_VINES_STEP iW
	WET_GRASS_BREAK qF
	WET_GRASS_FALL qG
	WET_GRASS_HIT qH
	WET_GRASS_PLACE qI
	WET_GRASS_STEP qJ
	WITCH_AMBIENT qK
	WITCH_CELEBRATE qL
	WITCH_DEATH qM
	WITCH_DRINK qN
	WITCH_HURT qO
	WITCH_THROW qP
	WITHER_AMBIENT qQ
	WITHER_BREAK_BLOCK qR
	WITHER_DEATH qS
	WITHER_HURT qT
	WITHER_SHOOT qU
	WITHER_SKELETON_AMBIENT qV
	WITHER_SKELETON_DEATH qW
	WITHER_SKELETON_HURT qX
	WITHER_SKELETON_STEP qY
	WITHER_SPAWN qZ
	WOLF_AMBIENT ra
	WOLF_DEATH rb
	WOLF_GROWL rc
	WOLF_HOWL rd
	WOLF_HURT re
	WOLF_PANT rf
	WOLF_SHAKE rg
	WOLF_STEP rh
	WOLF_WHINE ri
	WOODEN_BUTTON_CLICK_OFF ro
	WOODEN_BUTTON_CLICK_ON rp
	WOODEN_DOOR_CLOSE rj
	WOODEN_DOOR_OPEN rk
	WOODEN_PRESSURE_PLATE_CLICK_OFF rt
	WOODEN_PRESSURE_PLATE_CLICK_ON ru
	WOODEN_TRAPDOOR_CLOSE rl
	WOODEN_TRAPDOOR_OPEN rm
	WOOD_BREAK rn
	WOOD_FALL rq
	WOOD_HIT rr
	WOOD_PLACE rs
	WOOD_STEP rv
	WOOL_BREAK rw
	WOOL_FALL rx
	WOOL_HIT ry
	WOOL_PLACE rz
	WOOL_STEP rA
	ZOGLIN_AMBIENT rB
	ZOGLIN_ANGRY rC
	ZOGLIN_ATTACK rD
	ZOGLIN_DEATH rE
	ZOGLIN_HURT rF
	ZOGLIN_STEP rG
	ZOMBIE_AMBIENT rH
	ZOMBIE_ATTACK_IRON_DOOR rJ
	ZOMBIE_ATTACK_WOODEN_DOOR rI
	ZOMBIE_BREAK_WOODEN_DOOR rK
	ZOMBIE_CONVERTED_TO_DROWNED rL
	ZOMBIE_DEATH rM
	ZOMBIE_DESTROY_EGG rN
	ZOMBIE_HORSE_AMBIENT rO
	ZOMBIE_HORSE_DEATH rP
	ZOMBIE_HORSE_HURT rQ
	ZOMBIE_HURT rR
	ZOMBIE_INFECT rS
	ZOMBIE_STEP rX
	ZOMBIE_VILLAGER_AMBIENT rY
	ZOMBIE_VILLAGER_CONVERTED rZ
	ZOMBIE_VILLAGER_CURE sa
	ZOMBIE_VILLAGER_DEATH sb
	ZOMBIE_VILLAGER_HURT sc
	ZOMBIE_VILLAGER_STEP sd
	ZOMBIFIED_PIGLIN_AMBIENT rT
	ZOMBIFIED_PIGLIN_ANGRY rU
	ZOMBIFIED_PIGLIN_DEATH rV
	ZOMBIFIED_PIGLIN_HURT rW
	register (Ljava/lang/String;)Lnet/minecraft/sounds/SoundEvent; a
net/minecraft/sounds/SoundSource adp
	$VALUES m
	AMBIENT i
	BLOCKS e
	BY_NAME k
	HOSTILE f
	MASTER a
	MUSIC b
	NEUTRAL g
	PLAYERS h
	RECORDS c
	VOICE j
	WEATHER d
	name l
	byName (Ljava/lang/String;)Lnet/minecraft/sounds/SoundSource; a
	getName ()Ljava/lang/String; a
	getNames ()Ljava/util/Set; b
net/minecraft/stats/RecipeBook adr
	bookSettings c
	highlight b
	known a
	add (Lnet/minecraft/resources/ResourceLocation;)V a
	add (Lnet/minecraft/world/item/crafting/Recipe;)V a
	addHighlight (Lnet/minecraft/resources/ResourceLocation;)V d
	addHighlight (Lnet/minecraft/world/item/crafting/Recipe;)V f
	contains (Lnet/minecraft/resources/ResourceLocation;)Z b
	contains (Lnet/minecraft/world/item/crafting/Recipe;)Z b
	copyOverData (Lnet/minecraft/stats/RecipeBook;)V a
	getBookSettings ()Lnet/minecraft/stats/RecipeBookSettings; a
	isFiltering (Lnet/minecraft/world/inventory/RecipeBookMenu;)Z a
	isFiltering (Lnet/minecraft/world/inventory/RecipeBookType;)Z b
	isOpen (Lnet/minecraft/world/inventory/RecipeBookType;)Z a
	remove (Lnet/minecraft/resources/ResourceLocation;)V c
	remove (Lnet/minecraft/world/item/crafting/Recipe;)V c
	removeHighlight (Lnet/minecraft/world/item/crafting/Recipe;)V e
	setBookSetting (Lnet/minecraft/world/inventory/RecipeBookType;ZZ)V a
	setBookSettings (Lnet/minecraft/stats/RecipeBookSettings;)V a
	setFiltering (Lnet/minecraft/world/inventory/RecipeBookType;Z)V b
	setOpen (Lnet/minecraft/world/inventory/RecipeBookType;Z)V a
	willHighlight (Lnet/minecraft/world/item/crafting/Recipe;)Z d
net/minecraft/stats/RecipeBookSettings ads
	TAG_FIELDS a
	states b
	copy ()Lnet/minecraft/stats/RecipeBookSettings; a
	isFiltering (Lnet/minecraft/world/inventory/RecipeBookType;)Z b
	isOpen (Lnet/minecraft/world/inventory/RecipeBookType;)Z a
	read (Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/stats/RecipeBookSettings; a
	read (Lnet/minecraft/network/FriendlyByteBuf;)Lnet/minecraft/stats/RecipeBookSettings; a
	replaceFrom (Lnet/minecraft/stats/RecipeBookSettings;)V a
	setFiltering (Lnet/minecraft/world/inventory/RecipeBookType;Z)V b
	setOpen (Lnet/minecraft/world/inventory/RecipeBookType;Z)V a
	write (Lnet/minecraft/nbt/CompoundTag;)V b
	write (Lnet/minecraft/network/FriendlyByteBuf;)V b
net/minecraft/stats/RecipeBookSettings$TypeSettings ads$a
	filtering b
	open a
	copy ()Lnet/minecraft/stats/RecipeBookSettings$TypeSettings; a
net/minecraft/stats/ServerRecipeBook adt
	LOGGER c
	addRecipes (Ljava/util/Collection;Lnet/minecraft/server/level/ServerPlayer;)I a
	fromNbt (Lnet/minecraft/nbt/CompoundTag;Lnet/minecraft/world/item/crafting/RecipeManager;)V a
	loadRecipes (Lnet/minecraft/nbt/ListTag;Ljava/util/function/Consumer;Lnet/minecraft/world/item/crafting/RecipeManager;)V a
	removeRecipes (Ljava/util/Collection;Lnet/minecraft/server/level/ServerPlayer;)I b
	sendInitialRecipeBook (Lnet/minecraft/server/level/ServerPlayer;)V a
	sendRecipes (Lnet/minecraft/network/protocol/game/ClientboundRecipePacket$State;Lnet/minecraft/server/level/ServerPlayer;Ljava/util/List;)V a
	toNbt ()Lnet/minecraft/nbt/CompoundTag; b
net/minecraft/stats/ServerStatsCounter adu
	LOGGER b
	dirty e
	file d
	lastStatRequest f
	server c
	fromJson (Lcom/google/gson/JsonObject;)Lnet/minecraft/nbt/CompoundTag; a
	getDirty ()Ljava/util/Set; d
	getKey (Lnet/minecraft/stats/Stat;)Lnet/minecraft/resources/ResourceLocation; b
	getStat (Lnet/minecraft/stats/StatType;Ljava/lang/String;)Ljava/util/Optional; a
	markAllDirty ()V c
	parseLocal (Lcom/mojang/datafixers/DataFixer;Ljava/lang/String;)V a
	save ()V a
	sendStats (Lnet/minecraft/server/level/ServerPlayer;)V a
	setValue (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/stats/Stat;I)V a
	toJson ()Ljava/lang/String; b
net/minecraft/stats/Stat adv
	formatter o
	type q
	value p
	buildName (Lnet/minecraft/stats/StatType;Ljava/lang/Object;)Ljava/lang/String; a
	format (I)Ljava/lang/String; a
	getType ()Lnet/minecraft/stats/StatType; a
	getValue ()Ljava/lang/Object; b
	locationToKey (Lnet/minecraft/resources/ResourceLocation;)Ljava/lang/String; a
net/minecraft/stats/StatFormatter adw
	DECIMAL_FORMAT a
	DEFAULT b
	DISTANCE d
	DIVIDE_BY_TEN c
	TIME e
net/minecraft/stats/StatType adx
	displayName c
	map b
	registry a
	contains (Ljava/lang/Object;)Z a
	get (Ljava/lang/Object;)Lnet/minecraft/stats/Stat; b
	get (Ljava/lang/Object;Lnet/minecraft/stats/StatFormatter;)Lnet/minecraft/stats/Stat; a
	getDisplayName ()Lnet/minecraft/network/chat/Component; d
	getRegistry ()Lnet/minecraft/core/Registry; a
	getTranslationKey ()Ljava/lang/String; c
	size ()I b
net/minecraft/stats/Stats ady
	ANIMALS_BRED O
	AVIATE_ONE_CM A
	BELL_RING ay
	BLOCK_MINED a
	BOAT_ONE_CM x
	CLEAN_ARMOR W
	CLEAN_BANNER X
	CLEAN_SHULKER_BOX Y
	CLIMB_ONE_CM t
	CROUCH_ONE_CM p
	CROUCH_TIME n
	CUSTOM i
	DAMAGE_ABSORBED K
	DAMAGE_BLOCKED_BY_SHIELD J
	DAMAGE_DEALT F
	DAMAGE_DEALT_ABSORBED G
	DAMAGE_DEALT_RESISTED H
	DAMAGE_RESISTED L
	DAMAGE_TAKEN I
	DEATHS M
	DROP E
	EAT_CAKE_SLICE T
	ENCHANT_ITEM aj
	ENTITY_KILLED g
	ENTITY_KILLED_BY h
	FALL_ONE_CM s
	FILL_CAULDRON U
	FISH_CAUGHT Q
	FLY_ONE_CM u
	HORSE_ONE_CM z
	INSPECT_DISPENSER ad
	INSPECT_DROPPER ab
	INSPECT_HOPPER ac
	INTERACT_WITH_ANVIL aB
	INTERACT_WITH_BEACON aa
	INTERACT_WITH_BLAST_FURNACE ar
	INTERACT_WITH_BREWINGSTAND Z
	INTERACT_WITH_CAMPFIRE au
	INTERACT_WITH_CARTOGRAPHY_TABLE av
	INTERACT_WITH_CRAFTING_TABLE am
	INTERACT_WITH_FURNACE al
	INTERACT_WITH_GRINDSTONE aC
	INTERACT_WITH_LECTERN at
	INTERACT_WITH_LOOM aw
	INTERACT_WITH_SMITHING_TABLE aE
	INTERACT_WITH_SMOKER as
	INTERACT_WITH_STONECUTTER ax
	ITEM_BROKEN d
	ITEM_CRAFTED b
	ITEM_DROPPED f
	ITEM_PICKED_UP e
	ITEM_USED c
	JUMP D
	LEAVE_GAME j
	MINECART_ONE_CM w
	MOB_KILLS N
	OPEN_BARREL aq
	OPEN_CHEST an
	OPEN_ENDERCHEST ai
	OPEN_SHULKER_BOX ap
	PIG_ONE_CM y
	PLAYER_KILLS P
	PLAY_NOTEBLOCK ae
	PLAY_ONE_MINUTE k
	PLAY_RECORD ak
	POT_FLOWER ag
	RAID_TRIGGER az
	RAID_WIN aA
	SLEEP_IN_BED ao
	SPRINT_ONE_CM q
	STRIDER_ONE_CM C
	SWIM_ONE_CM B
	TALKED_TO_VILLAGER R
	TARGET_HIT aD
	TIME_SINCE_DEATH l
	TIME_SINCE_REST m
	TRADED_WITH_VILLAGER S
	TRIGGER_TRAPPED_CHEST ah
	TUNE_NOTEBLOCK af
	USE_CAULDRON V
	WALK_ONE_CM o
	WALK_ON_WATER_ONE_CM r
	WALK_UNDER_WATER_ONE_CM v
	makeCustomStat (Ljava/lang/String;Lnet/minecraft/stats/StatFormatter;)Lnet/minecraft/resources/ResourceLocation; a
	makeRegistryStatType (Ljava/lang/String;Lnet/minecraft/core/Registry;)Lnet/minecraft/stats/StatType; a
net/minecraft/stats/StatsCounter adz
	stats a
	getValue (Lnet/minecraft/stats/Stat;)I a
	getValue (Lnet/minecraft/stats/StatType;Ljava/lang/Object;)I a
	increment (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/stats/Stat;I)V b
	setValue (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/stats/Stat;I)V a
net/minecraft/tags/BlockTags aeb
	ACACIA_LOGS w
	ANVIL G
	BAMBOO_PLANTABLE_ON ac
	BANNERS B
	BASE_STONE_NETHER aI
	BASE_STONE_OVERWORLD aH
	BEACON_BASE_BLOCKS aq
	BEDS L
	BEEHIVES aj
	BEE_GROWABLES al
	BIRCH_LOGS v
	BUTTONS f
	CAMPFIRES ay
	CARPETS g
	CLIMBABLE at
	CORALS ab
	CORAL_BLOCKS Y
	CORAL_PLANTS aa
	CRIMSON_STEMS z
	CROPS ak
	DARK_OAK_LOGS t
	DOORS p
	DRAGON_IMMUNE ag
	ENDERMAN_HOLDABLE T
	FENCES M
	FENCE_GATES aB
	FIRE an
	FLOWERS O
	FLOWER_POTS S
	GOLD_ORES Q
	GUARDED_BY_PIGLINS az
	HELPER a
	HOGLIN_REPELLENTS av
	ICE U
	IMPERMEABLE W
	INFINIBURN_END aG
	INFINIBURN_NETHER aF
	INFINIBURN_OVERWORLD aE
	JUNGLE_LOGS x
	LEAVES I
	LOGS s
	LOGS_THAT_BURN r
	MUSHROOM_GROW_BLOCK aD
	NON_FLAMMABLE_WOOD R
	NYLIUM ao
	OAK_LOGS u
	PIGLIN_REPELLENTS P
	PLANKS c
	PORTALS am
	PRESSURE_PLATES l
	PREVENT_MOB_SPAWNING_INSIDE aA
	RAILS H
	SAND C
	SAPLINGS q
	SHULKER_BOXES au
	SIGNS af
	SLABS E
	SMALL_FLOWERS K
	SOUL_FIRE_BASE_BLOCKS aw
	SOUL_SPEED_BLOCKS ar
	SPRUCE_LOGS y
	STAIRS D
	STANDING_SIGNS ad
	STONE_BRICKS d
	STONE_PRESSURE_PLATES n
	STRIDER_WARM_BLOCKS ax
	TALL_FLOWERS N
	TRAPDOORS J
	UNDERWATER_BONEMEALS X
	UNSTABLE_BOTTOM_CENTER aC
	VALID_SPAWN V
	WALLS F
	WALL_CORALS Z
	WALL_POST_OVERRIDE as
	WALL_SIGNS ae
	WARPED_STEMS A
	WART_BLOCKS ap
	WITHER_IMMUNE ah
	WITHER_SUMMON_BASE_BLOCKS ai
	WOODEN_BUTTONS e
	WOODEN_DOORS h
	WOODEN_FENCES k
	WOODEN_PRESSURE_PLATES m
	WOODEN_SLABS j
	WOODEN_STAIRS i
	WOODEN_TRAPDOORS o
	WOOL b
	bind (Ljava/lang/String;)Lnet/minecraft/tags/Tag$Named; a
	getAllTags ()Lnet/minecraft/tags/TagCollection; a
	getWrappers ()Ljava/util/List; b
net/minecraft/tags/EntityTypeTags aec
	ARROWS e
	BEEHIVE_INHABITORS d
	HELPER a
	IMPACT_PROJECTILES f
	RAIDERS c
	SKELETONS b
	bind (Ljava/lang/String;)Lnet/minecraft/tags/Tag$Named; a
	getAllTags ()Lnet/minecraft/tags/TagCollection; a
	getWrappers ()Ljava/util/List; b
net/minecraft/tags/FluidTags aed
	HELPER a
	LAVA c
	WATER b
	bind (Ljava/lang/String;)Lnet/minecraft/tags/Tag$Named; a
	getAllTags ()Lnet/minecraft/tags/TagCollection; a
	getWrappers ()Ljava/util/List; b
net/minecraft/tags/ItemTags aee
	ACACIA_LOGS u
	ANVIL E
	ARROWS Y
	BANNERS z
	BEACON_PAYMENT_ITEMS aa
	BEDS J
	BIRCH_LOGS t
	BOATS S
	BUTTONS f
	CARPETS g
	COALS X
	CREEPER_DROP_MUSIC_DISCS W
	CRIMSON_STEMS x
	DARK_OAK_LOGS r
	DOORS n
	FENCES K
	FISHES T
	FLOWERS M
	GOLD_ORES P
	HELPER a
	JUNGLE_LOGS v
	LEAVES G
	LECTERN_BOOKS Z
	LOGS q
	LOGS_THAT_BURN p
	MUSIC_DISCS V
	NON_FLAMMABLE_WOOD Q
	OAK_LOGS s
	PIGLIN_LOVED O
	PIGLIN_REPELLENTS N
	PLANKS c
	RAILS F
	SAND A
	SAPLINGS o
	SIGNS U
	SLABS C
	SMALL_FLOWERS I
	SOUL_FIRE_BASE_BLOCKS R
	SPRUCE_LOGS w
	STAIRS B
	STONE_BRICKS d
	STONE_CRAFTING_MATERIALS ac
	STONE_TOOL_MATERIALS ab
	TALL_FLOWERS L
	TRAPDOORS H
	WALLS D
	WARPED_STEMS y
	WOODEN_BUTTONS e
	WOODEN_DOORS h
	WOODEN_FENCES k
	WOODEN_PRESSURE_PLATES l
	WOODEN_SLABS j
	WOODEN_STAIRS i
	WOODEN_TRAPDOORS m
	WOOL b
	bind (Ljava/lang/String;)Lnet/minecraft/tags/Tag$Named; a
	getAllTags ()Lnet/minecraft/tags/TagCollection; a
	getWrappers ()Ljava/util/List; b
net/minecraft/tags/SerializationTags aef
	instance a
	bind (Lnet/minecraft/tags/TagContainer;)V a
	getInstance ()Lnet/minecraft/tags/TagContainer; a
net/minecraft/tags/SetTag aeg
	closestCommonSuperType a
	values c
	valuesList b
	contains (Ljava/lang/Object;)Z a
	create (Ljava/util/Set;)Lnet/minecraft/tags/SetTag; a
	empty ()Lnet/minecraft/tags/SetTag; a
	findClosestAncestor (Ljava/lang/Class;Ljava/lang/Class;)Ljava/lang/Class; a
	findCommonSuperClass (Ljava/util/Set;)Ljava/lang/Class; c
	getValues ()Ljava/util/List; b
net/minecraft/tags/StaticTagHelper aeh
	collectionGetter c
	source a
	wrappers b
	bind (Ljava/lang/String;)Lnet/minecraft/tags/Tag$Named; a
	getAllTags ()Lnet/minecraft/tags/TagCollection; b
	getMissingTags (Lnet/minecraft/tags/TagContainer;)Ljava/util/Set; b
	getWrappers ()Ljava/util/List; c
	reset (Lnet/minecraft/tags/TagContainer;)V a
	resetToEmpty ()V a
net/minecraft/tags/StaticTagHelper$Wrapper aeh$a
	name a
	tag b
	contains (Ljava/lang/Object;)Z a
	getName ()Lnet/minecraft/resources/ResourceLocation; a
	getValues ()Ljava/util/List; b
	rebind (Ljava/util/function/Function;)V a
	resolve ()Lnet/minecraft/tags/Tag; c
net/minecraft/tags/StaticTags aei
	HELPERS a
	bootStrap ()V b
	create (Lnet/minecraft/resources/ResourceLocation;Ljava/util/function/Function;)Lnet/minecraft/tags/StaticTagHelper; a
	getAllMissingTags (Lnet/minecraft/tags/TagContainer;)Lcom/google/common/collect/Multimap; b
	resetAll (Lnet/minecraft/tags/TagContainer;)V a
	resetAllToEmpty ()V a
net/minecraft/tags/Tag aej
	codec (Ljava/util/function/Supplier;)Lcom/mojang/serialization/Codec; a
	contains (Ljava/lang/Object;)Z a
	fromSet (Ljava/util/Set;)Lnet/minecraft/tags/Tag; b
	getRandomElement (Ljava/util/Random;)Ljava/lang/Object; a
	getValues ()Ljava/util/List; b
net/minecraft/tags/Tag$Builder aej$a
	entries a
	add (Lnet/minecraft/tags/Tag$BuilderEntry;)Lnet/minecraft/tags/Tag$Builder; a
	add (Lnet/minecraft/tags/Tag$Entry;Ljava/lang/String;)Lnet/minecraft/tags/Tag$Builder; a
	addElement (Lnet/minecraft/resources/ResourceLocation;Ljava/lang/String;)Lnet/minecraft/tags/Tag$Builder; a
	addFromJson (Lcom/google/gson/JsonObject;Ljava/lang/String;)Lnet/minecraft/tags/Tag$Builder; a
	addOptionalElement (Lnet/minecraft/resources/ResourceLocation;Ljava/lang/String;)Lnet/minecraft/tags/Tag$Builder; b
	addOptionalTag (Lnet/minecraft/resources/ResourceLocation;Ljava/lang/String;)Lnet/minecraft/tags/Tag$Builder; d
	addTag (Lnet/minecraft/resources/ResourceLocation;Ljava/lang/String;)Lnet/minecraft/tags/Tag$Builder; c
	build (Ljava/util/function/Function;Ljava/util/function/Function;)Ljava/util/Optional; a
	getEntries ()Ljava/util/stream/Stream; b
	getUnresolvedEntries (Ljava/util/function/Function;Ljava/util/function/Function;)Ljava/util/stream/Stream; b
	parseEntry (Lcom/google/gson/JsonElement;)Lnet/minecraft/tags/Tag$Entry; a
	serializeToJson ()Lcom/google/gson/JsonObject; c
	tag ()Lnet/minecraft/tags/Tag$Builder; a
net/minecraft/tags/Tag$BuilderEntry aej$b
	entry a
	source b
	getEntry ()Lnet/minecraft/tags/Tag$Entry; a
	getSource ()Ljava/lang/String; b
net/minecraft/tags/Tag$ElementEntry aej$c
	id a
	build (Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/Consumer;)Z a
	serializeTo (Lcom/google/gson/JsonArray;)V a
net/minecraft/tags/Tag$Entry aej$d
	build (Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/Consumer;)Z a
	serializeTo (Lcom/google/gson/JsonArray;)V a
net/minecraft/tags/Tag$Named aej$e
	getName ()Lnet/minecraft/resources/ResourceLocation; a
net/minecraft/tags/Tag$OptionalElementEntry aej$f
	id a
	build (Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/Consumer;)Z a
	serializeTo (Lcom/google/gson/JsonArray;)V a
net/minecraft/tags/Tag$OptionalTagEntry aej$g
	id a
	build (Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/Consumer;)Z a
	serializeTo (Lcom/google/gson/JsonArray;)V a
net/minecraft/tags/Tag$TagEntry aej$h
	id a
	build (Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/function/Consumer;)Z a
	serializeTo (Lcom/google/gson/JsonArray;)V a
net/minecraft/tags/TagCollection aek
	empty ()Lnet/minecraft/tags/TagCollection; c
	getAllTags ()Ljava/util/Map; a
	getAvailableTags ()Ljava/util/Collection; b
	getId (Lnet/minecraft/tags/Tag$Named;)Lnet/minecraft/resources/ResourceLocation; a
	getId (Lnet/minecraft/tags/Tag;)Lnet/minecraft/resources/ResourceLocation; a
	getIdOrThrow (Lnet/minecraft/tags/Tag;)Lnet/minecraft/resources/ResourceLocation; b
	getMatchingTags (Ljava/lang/Object;)Ljava/util/Collection; a
	getTag (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/tags/Tag; a
	getTagOrEmpty (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/tags/Tag; b
	hasTag (Lnet/minecraft/resources/ResourceLocation;)Z c
	loadFromNetwork (Lnet/minecraft/network/FriendlyByteBuf;Lnet/minecraft/core/Registry;)Lnet/minecraft/tags/TagCollection; a
	of (Ljava/util/Map;)Lnet/minecraft/tags/TagCollection; a
	serializeToNetwork (Lnet/minecraft/network/FriendlyByteBuf;Lnet/minecraft/core/DefaultedRegistry;)V a
net/minecraft/tags/TagContainer ael
	EMPTY a
	bindToGlobal ()V e
	deserializeFromNetwork (Lnet/minecraft/network/FriendlyByteBuf;)Lnet/minecraft/tags/TagContainer; b
	getBlocks ()Lnet/minecraft/tags/TagCollection; a
	getEntityTypes ()Lnet/minecraft/tags/TagCollection; d
	getFluids ()Lnet/minecraft/tags/TagCollection; c
	getItems ()Lnet/minecraft/tags/TagCollection; b
	of (Lnet/minecraft/tags/TagCollection;Lnet/minecraft/tags/TagCollection;Lnet/minecraft/tags/TagCollection;Lnet/minecraft/tags/TagCollection;)Lnet/minecraft/tags/TagContainer; a
	serializeToNetwork (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/tags/TagLoader aem
	GSON b
	LOGGER a
	PATH_SUFFIX_LENGTH c
	directory e
	idToValue d
	name f
	load (Ljava/util/Map;)Lnet/minecraft/tags/TagCollection; a
	prepare (Lnet/minecraft/server/packs/resources/ResourceManager;Ljava/util/concurrent/Executor;)Ljava/util/concurrent/CompletableFuture; a
net/minecraft/tags/TagManager aen
	blocks a
	entityTypes d
	fluids c
	items b
	tags e
	getTags ()Lnet/minecraft/tags/TagContainer; a
	reload (Lnet/minecraft/server/packs/resources/PreparableReloadListener$PreparationBarrier;Lnet/minecraft/server/packs/resources/ResourceManager;Lnet/minecraft/util/profiling/ProfilerFiller;Lnet/minecraft/util/profiling/ProfilerFiller;Ljava/util/concurrent/Executor;Ljava/util/concurrent/Executor;)Ljava/util/concurrent/CompletableFuture; a
net/minecraft/util/BitStorage aep
	MAGIC a
	bits c
	data b
	divideAdd h
	divideMul g
	divideShift i
	mask d
	size e
	valuesPerLong f
	cellIndex (I)I b
	get (I)I a
	getAll (Ljava/util/function/IntConsumer;)V a
	getAndSet (II)I a
	getBits ()I c
	getRaw ()[J a
	getSize ()I b
	set (II)V b
net/minecraft/util/ClassInstanceMultiMap aeq
	allInstances c
	baseClass b
	byClass a
	find (Ljava/lang/Class;)Ljava/util/Collection; a
	getAllInstances ()Ljava/util/List; a
net/minecraft/util/CrudeIncrementalIntIdentityHashBiMap aer
	EMPTY_SLOT a
	byId d
	keys b
	nextId e
	size f
	values c
	add (Ljava/lang/Object;)I c
	addMapping (Ljava/lang/Object;I)V a
	byId (I)Ljava/lang/Object; a
	clear ()V a
	contains (I)Z b
	contains (Ljava/lang/Object;)Z b
	findEmpty (I)I e
	getId (Ljava/lang/Object;)I a
	getValue (I)I c
	grow (I)V d
	hash (Ljava/lang/Object;)I d
	indexOf (Ljava/lang/Object;I)I b
	nextId ()I c
	size ()I b
net/minecraft/util/Crypt aes
	LOGGER a
	byteToPublicKey ([B)Ljava/security/PublicKey; a
	cipherData (ILjava/security/Key;[B)[B a
	decryptByteToSecretKey (Ljava/security/PrivateKey;[B)Ljavax/crypto/SecretKey; a
	decryptUsingKey (Ljava/security/Key;[B)[B b
	digestData (Ljava/lang/String;Ljava/security/PublicKey;Ljavax/crypto/SecretKey;)[B a
	digestData (Ljava/lang/String;[[B)[B a
	encryptUsingKey (Ljava/security/Key;[B)[B a
	generateKeyPair ()Ljava/security/KeyPair; b
	generateSecretKey ()Ljavax/crypto/SecretKey; a
	getCipher (ILjava/security/Key;)Ljavax/crypto/Cipher; a
	setupCipher (ILjava/lang/String;Ljava/security/Key;)Ljavax/crypto/Cipher; a
net/minecraft/util/CsvOutput aet
	columnCount b
	output a
	builder ()Lnet/minecraft/util/CsvOutput$Builder; a
	getStringValue (Ljava/lang/Object;)Ljava/lang/String; a
	writeLine (Ljava/util/stream/Stream;)V a
	writeRow ([Ljava/lang/Object;)V a
net/minecraft/util/CsvOutput$Builder aet$a
	headers a
	addColumn (Ljava/lang/String;)Lnet/minecraft/util/CsvOutput$Builder; a
	build (Ljava/io/Writer;)Lnet/minecraft/util/CsvOutput; a
net/minecraft/util/DirectoryLock aeu
	DUMMY c
	lock b
	lockFile a
	create (Ljava/nio/file/Path;)Lnet/minecraft/util/DirectoryLock; a
	isLocked (Ljava/nio/file/Path;)Z b
	isValid ()Z a
net/minecraft/util/DirectoryLock$LockException aeu$a
	alreadyLocked (Ljava/nio/file/Path;)Lnet/minecraft/util/DirectoryLock$LockException; a
net/minecraft/util/ExceptionCollector aev
	result a
	add (Ljava/lang/Throwable;)V a
	throwIfPresent ()V a
net/minecraft/util/FastColor aew
net/minecraft/util/FastColor$ARGB32 aew$a
	alpha (I)I a
	blue (I)I d
	color (IIII)I a
	green (I)I c
	multiply (II)I a
	red (I)I b
net/minecraft/util/FormattedCharSequence aex
	EMPTY a
	backward (Ljava/lang/String;Lnet/minecraft/network/chat/Style;)Lnet/minecraft/util/FormattedCharSequence; b
	backward (Ljava/lang/String;Lnet/minecraft/network/chat/Style;Lit/unimi/dsi/fastutil/ints/Int2IntFunction;)Lnet/minecraft/util/FormattedCharSequence; b
	codepoint (ILnet/minecraft/network/chat/Style;)Lnet/minecraft/util/FormattedCharSequence; a
	composite ()Lnet/minecraft/util/FormattedCharSequence; a
	composite (Ljava/util/List;)Lnet/minecraft/util/FormattedCharSequence; a
	composite (Lnet/minecraft/util/FormattedCharSequence;)Lnet/minecraft/util/FormattedCharSequence; a
	composite (Lnet/minecraft/util/FormattedCharSequence;Lnet/minecraft/util/FormattedCharSequence;)Lnet/minecraft/util/FormattedCharSequence; a
	composite ([Lnet/minecraft/util/FormattedCharSequence;)Lnet/minecraft/util/FormattedCharSequence; a
	decorateOutput (Lnet/minecraft/util/FormattedCharSink;Lit/unimi/dsi/fastutil/ints/Int2IntFunction;)Lnet/minecraft/util/FormattedCharSink; a
	forward (Ljava/lang/String;Lnet/minecraft/network/chat/Style;)Lnet/minecraft/util/FormattedCharSequence; a
	forward (Ljava/lang/String;Lnet/minecraft/network/chat/Style;Lit/unimi/dsi/fastutil/ints/Int2IntFunction;)Lnet/minecraft/util/FormattedCharSequence; a
	fromList (Ljava/util/List;)Lnet/minecraft/util/FormattedCharSequence; b
	fromPair (Lnet/minecraft/util/FormattedCharSequence;Lnet/minecraft/util/FormattedCharSequence;)Lnet/minecraft/util/FormattedCharSequence; b
net/minecraft/util/FormattedCharSink aey
net/minecraft/util/FrameTimer aez
	logEnd d
	logLength c
	logStart b
	loggedTimes a
	getAverageDuration (I)J a
	getLog ()[J c
	getLogEnd ()I b
	getLogStart ()I a
	logFrameDuration (J)V a
	scaleAverageDurationTo (II)I a
	scaleSampleTo (JII)I a
	wrapIndex (I)I b
net/minecraft/util/GsonHelper afa
	GSON a
	convertToBigDecimal (Lcom/google/gson/JsonElement;Ljava/lang/String;)Ljava/math/BigDecimal; j
	convertToBigInteger (Lcom/google/gson/JsonElement;Ljava/lang/String;)Ljava/math/BigInteger; k
	convertToBoolean (Lcom/google/gson/JsonElement;Ljava/lang/String;)Z c
	convertToByte (Lcom/google/gson/JsonElement;Ljava/lang/String;)B h
	convertToCharacter (Lcom/google/gson/JsonElement;Ljava/lang/String;)C i
	convertToDouble (Lcom/google/gson/JsonElement;Ljava/lang/String;)D d
	convertToFloat (Lcom/google/gson/JsonElement;Ljava/lang/String;)F e
	convertToInt (Lcom/google/gson/JsonElement;Ljava/lang/String;)I g
	convertToItem (Lcom/google/gson/JsonElement;Ljava/lang/String;)Lnet/minecraft/world/item/Item; b
	convertToJsonArray (Lcom/google/gson/JsonElement;Ljava/lang/String;)Lcom/google/gson/JsonArray; n
	convertToJsonObject (Lcom/google/gson/JsonElement;Ljava/lang/String;)Lcom/google/gson/JsonObject; m
	convertToLong (Lcom/google/gson/JsonElement;Ljava/lang/String;)J f
	convertToObject (Lcom/google/gson/JsonElement;Ljava/lang/String;Lcom/google/gson/JsonDeserializationContext;Ljava/lang/Class;)Ljava/lang/Object; a
	convertToShort (Lcom/google/gson/JsonElement;Ljava/lang/String;)S l
	convertToString (Lcom/google/gson/JsonElement;Ljava/lang/String;)Ljava/lang/String; a
	fromJson (Lcom/google/gson/Gson;Ljava/io/Reader;Lcom/google/gson/reflect/TypeToken;)Ljava/lang/Object; a
	fromJson (Lcom/google/gson/Gson;Ljava/io/Reader;Lcom/google/gson/reflect/TypeToken;Z)Ljava/lang/Object; a
	fromJson (Lcom/google/gson/Gson;Ljava/io/Reader;Ljava/lang/Class;)Ljava/lang/Object; a
	fromJson (Lcom/google/gson/Gson;Ljava/io/Reader;Ljava/lang/Class;Z)Ljava/lang/Object; a
	fromJson (Lcom/google/gson/Gson;Ljava/lang/String;Lcom/google/gson/reflect/TypeToken;)Ljava/lang/Object; a
	fromJson (Lcom/google/gson/Gson;Ljava/lang/String;Lcom/google/gson/reflect/TypeToken;Z)Ljava/lang/Object; a
	fromJson (Lcom/google/gson/Gson;Ljava/lang/String;Ljava/lang/Class;)Ljava/lang/Object; a
	fromJson (Lcom/google/gson/Gson;Ljava/lang/String;Ljava/lang/Class;Z)Ljava/lang/Object; a
	getAsBigDecimal (Lcom/google/gson/JsonObject;Ljava/lang/String;)Ljava/math/BigDecimal; q
	getAsBigDecimal (Lcom/google/gson/JsonObject;Ljava/lang/String;Ljava/math/BigDecimal;)Ljava/math/BigDecimal; a
	getAsBigInteger (Lcom/google/gson/JsonObject;Ljava/lang/String;)Ljava/math/BigInteger; r
	getAsBigInteger (Lcom/google/gson/JsonObject;Ljava/lang/String;Ljava/math/BigInteger;)Ljava/math/BigInteger; a
	getAsBoolean (Lcom/google/gson/JsonObject;Ljava/lang/String;)Z j
	getAsBoolean (Lcom/google/gson/JsonObject;Ljava/lang/String;Z)Z a
	getAsByte (Lcom/google/gson/JsonObject;Ljava/lang/String;)B o
	getAsByte (Lcom/google/gson/JsonObject;Ljava/lang/String;B)B a
	getAsCharacter (Lcom/google/gson/JsonObject;Ljava/lang/String;)C p
	getAsCharacter (Lcom/google/gson/JsonObject;Ljava/lang/String;C)C a
	getAsDouble (Lcom/google/gson/JsonObject;Ljava/lang/String;)D k
	getAsDouble (Lcom/google/gson/JsonObject;Ljava/lang/String;D)D a
	getAsFloat (Lcom/google/gson/JsonObject;Ljava/lang/String;)F l
	getAsFloat (Lcom/google/gson/JsonObject;Ljava/lang/String;F)F a
	getAsInt (Lcom/google/gson/JsonObject;Ljava/lang/String;)I n
	getAsInt (Lcom/google/gson/JsonObject;Ljava/lang/String;I)I a
	getAsItem (Lcom/google/gson/JsonObject;Ljava/lang/String;)Lnet/minecraft/world/item/Item; i
	getAsItem (Lcom/google/gson/JsonObject;Ljava/lang/String;Lnet/minecraft/world/item/Item;)Lnet/minecraft/world/item/Item; a
	getAsJsonArray (Lcom/google/gson/JsonObject;Ljava/lang/String;)Lcom/google/gson/JsonArray; u
	getAsJsonArray (Lcom/google/gson/JsonObject;Ljava/lang/String;Lcom/google/gson/JsonArray;)Lcom/google/gson/JsonArray; a
	getAsJsonObject (Lcom/google/gson/JsonObject;Ljava/lang/String;)Lcom/google/gson/JsonObject; t
	getAsJsonObject (Lcom/google/gson/JsonObject;Ljava/lang/String;Lcom/google/gson/JsonObject;)Lcom/google/gson/JsonObject; a
	getAsLong (Lcom/google/gson/JsonObject;Ljava/lang/String;)J m
	getAsLong (Lcom/google/gson/JsonObject;Ljava/lang/String;J)J a
	getAsObject (Lcom/google/gson/JsonObject;Ljava/lang/String;Lcom/google/gson/JsonDeserializationContext;Ljava/lang/Class;)Ljava/lang/Object; a
	getAsObject (Lcom/google/gson/JsonObject;Ljava/lang/String;Ljava/lang/Object;Lcom/google/gson/JsonDeserializationContext;Ljava/lang/Class;)Ljava/lang/Object; a
	getAsShort (Lcom/google/gson/JsonObject;Ljava/lang/String;)S s
	getAsShort (Lcom/google/gson/JsonObject;Ljava/lang/String;S)S a
	getAsString (Lcom/google/gson/JsonObject;Ljava/lang/String;)Ljava/lang/String; h
	getAsString (Lcom/google/gson/JsonObject;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; a
	getType (Lcom/google/gson/JsonElement;)Ljava/lang/String; d
	isArrayNode (Lcom/google/gson/JsonObject;Ljava/lang/String;)Z d
	isBooleanValue (Lcom/google/gson/JsonElement;)Z c
	isBooleanValue (Lcom/google/gson/JsonObject;Ljava/lang/String;)Z c
	isNumberValue (Lcom/google/gson/JsonElement;)Z b
	isNumberValue (Lcom/google/gson/JsonObject;Ljava/lang/String;)Z b
	isObjectNode (Lcom/google/gson/JsonObject;Ljava/lang/String;)Z e
	isStringValue (Lcom/google/gson/JsonElement;)Z a
	isStringValue (Lcom/google/gson/JsonObject;Ljava/lang/String;)Z a
	isValidNode (Lcom/google/gson/JsonObject;Ljava/lang/String;)Z g
	isValidPrimitive (Lcom/google/gson/JsonObject;Ljava/lang/String;)Z f
	parse (Ljava/io/Reader;)Lcom/google/gson/JsonObject; a
	parse (Ljava/io/Reader;Z)Lcom/google/gson/JsonObject; a
	parse (Ljava/lang/String;)Lcom/google/gson/JsonObject; a
	parse (Ljava/lang/String;Z)Lcom/google/gson/JsonObject; a
net/minecraft/util/HeapDumper afb
	hotspotMBean a
	dumpHeap (Ljava/lang/String;Z)V a
	getHotspotMBean ()Lcom/sun/management/HotSpotDiagnosticMXBean; a
net/minecraft/util/HttpUtil afc
	DOWNLOAD_EXECUTOR a
	LOGGER b
	buildQuery (Ljava/util/Map;)Ljava/lang/String; a
	downloadTo (Ljava/io/File;Ljava/lang/String;Ljava/util/Map;ILnet/minecraft/util/ProgressListener;Ljava/net/Proxy;)Ljava/util/concurrent/CompletableFuture; a
	getAvailablePort ()I a
	performPost (Ljava/net/URL;Ljava/lang/String;ZLjava/net/Proxy;)Ljava/lang/String; a
	performPost (Ljava/net/URL;Ljava/util/Map;ZLjava/net/Proxy;)Ljava/lang/String; a
net/minecraft/util/InsensitiveStringMap afd
	map a
	put (Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object; a
net/minecraft/util/IntRange afe
	maxInclusive b
	minInclusive a
	getMaxInclusive ()I b
	getMinInclusive ()I a
	of (II)Lnet/minecraft/util/IntRange; a
	randomValue (Ljava/util/Random;)I a
net/minecraft/util/LazyLoadedValue aff
	factory a
	value b
	get ()Ljava/lang/Object; a
net/minecraft/util/LimitedCapacityList afg
	clazz b
	head e
	items a
	locks c
	size d
	add (Ljava/lang/Object;)Ljava/lang/Object; a
	getItems ()[Ljava/lang/Object; c
	getMaxSize ()I b
	getSize ()I a
net/minecraft/util/LinearCongruentialGenerator afh
	next (JJ)J a
net/minecraft/util/LowerCaseEnumTypeAdapterFactory afi
	toLowercase (Ljava/lang/Object;)Ljava/lang/String; a
net/minecraft/util/Mth afj
	ASIN_TAB f
	COS_TAB g
	FRAC_BIAS e
	MULTIPLY_DE_BRUIJN_BIT_POSITION d
	RANDOM c
	SIN b
	SQRT_OF_TWO a
	abs (F)F e
	abs (I)I a
	absFloor (D)I e
	absMax (DD)D a
	approach (FFF)F c
	approachDegrees (FFF)F d
	atan2 (DD)D d
	average ([J)D a
	binBiModalNormalDistribution (DDDDDDII)[D a
	binLogDistribution (DDII)[D a
	binNormalDistribution (DDDII)[D a
	binarySearch (IILjava/util/function/IntPredicate;)I a
	catmullRomSplinePos (Lnet/minecraft/world/phys/Vec3;Lnet/minecraft/world/phys/Vec3;Lnet/minecraft/world/phys/Vec3;Lnet/minecraft/world/phys/Vec3;D)Lnet/minecraft/world/phys/Vec3; a
	ceil (D)I f
	ceil (F)I f
	ceillog2 (I)I e
	clamp (BBB)B a
	clamp (DDD)D a
	clamp (FFF)F a
	clamp (III)I a
	clamp (JJJ)J a
	clampedLerp (DDD)D b
	color (FFF)I e
	color (III)I b
	colorMultiply (IFFF)I a
	colorMultiply (II)I d
	cos (F)F b
	createInsecureUUID ()Ljava/util/UUID; a
	createInsecureUUID (Ljava/util/Random;)Ljava/util/UUID; a
	cumulativeSum ([D)[D a
	degreesDifference (FF)F c
	degreesDifferenceAbs (FF)F d
	diffuseLight (FFF)F i
	equal (DD)Z b
	equal (FF)Z a
	fastFloor (D)I b
	fastInvCubeRoot (F)F j
	fastInvSqrt (D)D i
	fastInvSqrt (F)F i
	floor (D)I c
	floor (F)I d
	frac (D)D h
	frac (F)F h
	getDouble (Ljava/lang/String;D)D a
	getDouble (Ljava/lang/String;DD)D a
	getInt (Ljava/lang/String;I)I a
	getInt (Ljava/lang/String;II)I a
	getRandomForDistributionIntegral (Ljava/util/Random;[D)I a
	getSeed (III)J c
	getSeed (Lnet/minecraft/core/Vec3i;)J a
	hsvToRgb (FFF)I f
	intFloorDiv (II)I a
	inverseLerp (DDD)D c
	isPowerOfTwo (I)Z d
	lerp (DDD)D d
	lerp (FFF)F g
	lerp2 (DDDDDD)D a
	lerp3 (DDDDDDDDDDD)D a
	lfloor (D)J d
	log2 (I)I f
	murmurHash3Mixer (I)I g
	murmurHash3Mixer (J)J a
	nextDouble (Ljava/util/Random;DD)D a
	nextFloat (Ljava/util/Random;FF)F a
	nextInt (Ljava/util/Random;II)I a
	positiveModulo (DD)D c
	positiveModulo (FF)F b
	positiveModulo (II)I b
	rayIntersectsAABB (Lnet/minecraft/world/phys/Vec3;Lnet/minecraft/world/phys/Vec3;Lnet/minecraft/world/phys/AABB;)Z a
	rotLerp (FFF)F h
	rotWrap (D)F l
	rotateIfNecessary (FFF)F b
	rotlerp (FFF)F j
	roundUp (II)I c
	sign (D)I k
	sin (F)F a
	smallestEncompassingPowerOfTwo (I)I c
	smoothstep (D)D j
	sqrt (D)F a
	sqrt (F)F c
	square (D)D m
	square (F)F k
	triangleWave (FF)F e
	wrapDegrees (D)D g
	wrapDegrees (F)F g
	wrapDegrees (I)I b
net/minecraft/util/ProgressListener afk
	progressStage (Lnet/minecraft/network/chat/Component;)V c
	progressStagePercentage (I)V a
	progressStart (Lnet/minecraft/network/chat/Component;)V b
	progressStartNoAbort (Lnet/minecraft/network/chat/Component;)V a
	stop ()V a
net/minecraft/util/RewindableStream afl
	cache a
	source b
	getStream ()Ljava/util/stream/Stream; a
net/minecraft/util/SmoothDouble afm
	lastAmount c
	remainingValue b
	targetValue a
	getNewDeltaValue (DD)D a
	reset ()V a
net/minecraft/util/SortedArraySet afn
	comparator a
	contents b
	size c
	addInternal (Ljava/lang/Object;I)V a
	addOrGet (Ljava/lang/Object;)Ljava/lang/Object; a
	castRawArray ([Ljava/lang/Object;)[Ljava/lang/Object; a
	create ()Lnet/minecraft/util/SortedArraySet; a
	create (I)Lnet/minecraft/util/SortedArraySet; a
	create (Ljava/util/Comparator;)Lnet/minecraft/util/SortedArraySet; a
	create (Ljava/util/Comparator;I)Lnet/minecraft/util/SortedArraySet; a
	findIndex (Ljava/lang/Object;)I c
	first ()Ljava/lang/Object; b
	get (Ljava/lang/Object;)Ljava/lang/Object; b
	getInsertionPosition (I)I b
	getInternal (I)Ljava/lang/Object; e
	grow (I)V c
	last ()Ljava/lang/Object; c
	removeInternal (I)V d
net/minecraft/util/SortedArraySet$ArrayIterator afn$a
	index b
	last c
net/minecraft/util/StringDecomposer afo
	STOP_ITERATION a
	feedChar (Lnet/minecraft/network/chat/Style;Lnet/minecraft/util/FormattedCharSink;IC)Z a
	filterBrokenSurrogates (Ljava/lang/String;)Ljava/lang/String; a
	iterate (Ljava/lang/String;Lnet/minecraft/network/chat/Style;Lnet/minecraft/util/FormattedCharSink;)Z a
	iterateBackwards (Ljava/lang/String;Lnet/minecraft/network/chat/Style;Lnet/minecraft/util/FormattedCharSink;)Z b
	iterateFormatted (Ljava/lang/String;ILnet/minecraft/network/chat/Style;Lnet/minecraft/network/chat/Style;Lnet/minecraft/util/FormattedCharSink;)Z a
	iterateFormatted (Ljava/lang/String;ILnet/minecraft/network/chat/Style;Lnet/minecraft/util/FormattedCharSink;)Z a
	iterateFormatted (Ljava/lang/String;Lnet/minecraft/network/chat/Style;Lnet/minecraft/util/FormattedCharSink;)Z c
	iterateFormatted (Lnet/minecraft/network/chat/FormattedText;Lnet/minecraft/network/chat/Style;Lnet/minecraft/util/FormattedCharSink;)Z a
net/minecraft/util/StringRepresentable afp
	fromEnum (Ljava/util/function/Supplier;Ljava/util/function/Function;)Lcom/mojang/serialization/Codec; a
	fromStringResolver (Ljava/util/function/ToIntFunction;Ljava/util/function/IntFunction;Ljava/util/function/Function;)Lcom/mojang/serialization/Codec; a
	getSerializedName ()Ljava/lang/String; a
	keys ([Lnet/minecraft/util/StringRepresentable;)Lcom/mojang/serialization/Keyable; a
net/minecraft/util/StringUtil afq
	STRIP_COLOR_PATTERN a
	formatTickDuration (I)Ljava/lang/String; a
	isNullOrEmpty (Ljava/lang/String;)Z b
	stripColor (Ljava/lang/String;)Ljava/lang/String; a
	truncateStringIfNecessary (Ljava/lang/String;IZ)Ljava/lang/String; a
net/minecraft/util/TimeUtil afr
	rangeOfSeconds (II)Lnet/minecraft/util/IntRange; a
net/minecraft/util/Tuple afs
	getA ()Ljava/lang/Object; a
	getB ()Ljava/lang/Object; b
	setA (Ljava/lang/Object;)V a
	setB (Ljava/lang/Object;)V b
net/minecraft/util/UniformInt aft
	CODEC a
	baseValue b
	spread c
	codec (III)Lcom/mojang/serialization/Codec; a
	fixed (I)Lnet/minecraft/util/UniformInt; a
	of (II)Lnet/minecraft/util/UniformInt; a
	sample (Ljava/util/Random;)I a
net/minecraft/util/Unit afu
	$VALUES b
	INSTANCE a
net/minecraft/util/VisibleForDebug afv
net/minecraft/util/WeighedRandom afw
	getRandomItem (Ljava/util/Random;Ljava/util/List;)Lnet/minecraft/util/WeighedRandom$WeighedRandomItem; a
	getRandomItem (Ljava/util/Random;Ljava/util/List;I)Lnet/minecraft/util/WeighedRandom$WeighedRandomItem; a
	getTotalWeight (Ljava/util/List;)I a
	getWeightedItem (Ljava/util/List;I)Lnet/minecraft/util/WeighedRandom$WeighedRandomItem; a
net/minecraft/util/WeighedRandom$WeighedRandomItem afw$a
	weight a
net/minecraft/util/datafix/DataFixTypes afx
	$VALUES m
	ADVANCEMENTS i
	CHUNK c
	HOTBAR d
	LEVEL a
	OPTIONS e
	PLAYER b
	POI_CHUNK j
	SAVED_DATA h
	STATS g
	STRUCTURE f
	WORLD_GEN_SETTINGS k
	type l
	getType ()Lcom/mojang/datafixers/DSL$TypeReference; a
net/minecraft/util/datafix/DataFixers afy
	DATA_FIXER c
	SAME a
	SAME_NAMESPACED b
	addFixers (Lcom/mojang/datafixers/DataFixerBuilder;)V a
	createFixerUpper ()Lcom/mojang/datafixers/DataFixer; b
	createRenamer (Ljava/lang/String;Ljava/lang/String;)Ljava/util/function/UnaryOperator; a
	createRenamer (Ljava/util/Map;)Ljava/util/function/UnaryOperator; a
	getDataFixer ()Lcom/mojang/datafixers/DataFixer; a
net/minecraft/util/datafix/PackedBitStorage afz
	bits b
	data a
	mask c
	size d
	get (I)I a
	getBits ()I b
	getRaw ()[J a
	set (II)V a
net/minecraft/util/datafix/fixes/AbstractUUIDFix aga
	LOGGER a
	typeReference b
	createUUIDFromLongs (Lcom/mojang/serialization/Dynamic;Ljava/lang/String;Ljava/lang/String;)Ljava/util/Optional; d
	createUUIDFromML (Lcom/mojang/serialization/Dynamic;)Ljava/util/Optional; a
	createUUIDFromString (Lcom/mojang/serialization/Dynamic;Ljava/lang/String;)Ljava/util/Optional; a
	createUUIDTag (Lcom/mojang/serialization/Dynamic;JJ)Ljava/util/Optional; a
	replaceUUIDLeastMost (Lcom/mojang/serialization/Dynamic;Ljava/lang/String;Ljava/lang/String;)Ljava/util/Optional; c
	replaceUUIDMLTag (Lcom/mojang/serialization/Dynamic;Ljava/lang/String;Ljava/lang/String;)Ljava/util/Optional; b
	replaceUUIDString (Lcom/mojang/serialization/Dynamic;Ljava/lang/String;Ljava/lang/String;)Ljava/util/Optional; a
	updateNamedChoice (Lcom/mojang/datafixers/Typed;Ljava/lang/String;Ljava/util/function/Function;)Lcom/mojang/datafixers/Typed; a
net/minecraft/util/datafix/fixes/AddNewChoices agb
	name a
	type b
	cap (Ljava/lang/String;Lcom/mojang/datafixers/types/templates/TaggedChoice$TaggedChoiceType;Lcom/mojang/datafixers/types/templates/TaggedChoice$TaggedChoiceType;)Lcom/mojang/datafixers/TypeRewriteRule; a
net/minecraft/util/datafix/fixes/AdvancementsFix agc
	RENAMES a
net/minecraft/util/datafix/fixes/AdvancementsRenameFix agd
	name a
	renamer b
net/minecraft/util/datafix/fixes/AttributesRename age
	RENAMES a
	fixEntity (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; b
	fixItemStackTag (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; a
	fixName (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; a
net/minecraft/util/datafix/fixes/BedBlockEntityInjecter agf
	cap (Lcom/mojang/datafixers/types/Type;Lcom/mojang/datafixers/types/templates/List$ListType;)Lcom/mojang/datafixers/TypeRewriteRule; a
net/minecraft/util/datafix/fixes/BedItemColorFix agg
net/minecraft/util/datafix/fixes/BeehivePoiRenameFix agh
	rename (Ljava/lang/String;)Ljava/lang/String; a
net/minecraft/util/datafix/fixes/BiomeFix agi
	BIOMES a
net/minecraft/util/datafix/fixes/BitStorageAlignFix agj
	addPadding (II[J)[J a
	updateBitStorage (Lcom/mojang/serialization/Dynamic;Lcom/mojang/serialization/Dynamic;II)Lcom/mojang/serialization/Dynamic; a
	updateHeightmaps (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; a
	updateSections (Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; a
net/minecraft/util/datafix/fixes/BlockEntityBannerColorFix agk
	fix (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; a
	fixTag (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; a
net/minecraft/util/datafix/fixes/BlockEntityBlockStateFix agl
	fix (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; a
net/minecraft/util/datafix/fixes/BlockEntityCustomNameToComponentFix agm
net/minecraft/util/datafix/fixes/BlockEntityIdFix agn
	ID_MAP a
net/minecraft/util/datafix/fixes/BlockEntityJukeboxFix ago
	fix (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; a
net/minecraft/util/datafix/fixes/BlockEntityKeepPacked agp
	fix (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; a
	fixTag (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; a
net/minecraft/util/datafix/fixes/BlockEntityShulkerBoxColorFix agq
	fix (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; a
net/minecraft/util/datafix/fixes/BlockEntitySignTextStrictJsonFix agr
	GSON a
	fix (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; a
	updateLine (Lcom/mojang/serialization/Dynamic;Ljava/lang/String;)Lcom/mojang/serialization/Dynamic; a
net/minecraft/util/datafix/fixes/BlockEntityUUIDFix ags
	updateConduit (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; c
	updateSkull (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; b
net/minecraft/util/datafix/fixes/BlockNameFlatteningFix agt
net/minecraft/util/datafix/fixes/BlockRenameFix agu
	name a
	create (Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;Ljava/util/function/Function;)Lcom/mojang/datafixers/DataFix; a
	fixBlock (Ljava/lang/String;)Ljava/lang/String; a
net/minecraft/util/datafix/fixes/BlockRenameFixWithJigsaw agv
	name a
	create (Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;Ljava/util/function/Function;)Lcom/mojang/datafixers/DataFix; b
net/minecraft/util/datafix/fixes/BlockStateData agw
	BLOCK_DEFAULTS c
	ID_BY_OLD d
	ID_BY_OLD_NAME e
	LOGGER a
	MAP b
	finalizeMaps ()V a
	getTag (I)Lcom/mojang/serialization/Dynamic; b
	parse (Ljava/lang/String;)Lcom/mojang/serialization/Dynamic; b
	register (ILjava/lang/String;[Ljava/lang/String;)V a
	upgradeBlock (I)Ljava/lang/String; a
	upgradeBlock (Ljava/lang/String;)Ljava/lang/String; a
	upgradeBlockStateTag (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; a
net/minecraft/util/datafix/fixes/BlockStateStructureTemplateFix agx
net/minecraft/util/datafix/fixes/CatTypeFix agy
	fix (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; a
	fixTag (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; a
net/minecraft/util/datafix/fixes/ChunkBiomeFix agz
net/minecraft/util/datafix/fixes/ChunkLightRemoveFix aha
net/minecraft/util/datafix/fixes/ChunkPalettedStorageFix ahb
	AIR u
	BANNER_BLOCK_MAP t
	BED_BLOCK_MAP s
	DOOR_MAP p
	DYE_COLOR_MAP r
	FIX c
	FLOWER_POT_MAP n
	LOGGER a
	NOTE_BLOCK_MAP q
	PUMPKIN d
	SKULL_MAP o
	SNOWY_GRASS f
	SNOWY_MYCELIUM g
	SNOWY_PODZOL e
	UPPER_LARGE_FERN k
	UPPER_LILAC i
	UPPER_PEONY m
	UPPER_ROSE_BUSH l
	UPPER_SUNFLOWER h
	UPPER_TALL_GRASS j
	VIRTUAL b
	addBanners (Ljava/util/Map;ILjava/lang/String;)V b
	addBeds (Ljava/util/Map;ILjava/lang/String;)V a
	fix (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; b
	getName (Lcom/mojang/serialization/Dynamic;)Ljava/lang/String; a
	getProperty (Lcom/mojang/serialization/Dynamic;Ljava/lang/String;)Ljava/lang/String; a
	getSideMask (ZZZZ)I a
	idFor (Lnet/minecraft/util/CrudeIncrementalIntIdentityHashBiMap;Lcom/mojang/serialization/Dynamic;)I a
	mapDoor (Ljava/util/Map;Ljava/lang/String;I)V a
	mapSkull (Ljava/util/Map;ILjava/lang/String;Ljava/lang/String;)V a
net/minecraft/util/datafix/fixes/ChunkPalettedStorageFix$DataLayer ahb$a
	data a
	get (III)I a
	getPosition (I)I b
	isFirst (I)Z a
net/minecraft/util/datafix/fixes/ChunkPalettedStorageFix$Direction ahb$b
	$VALUES i
	DOWN a
	EAST f
	NORTH c
	SOUTH d
	UP b
	WEST e
	axis g
	axisDirection h
	getAxis ()Lnet/minecraft/util/datafix/fixes/ChunkPalettedStorageFix$Direction$Axis; b
	getAxisDirection ()Lnet/minecraft/util/datafix/fixes/ChunkPalettedStorageFix$Direction$AxisDirection; a
net/minecraft/util/datafix/fixes/ChunkPalettedStorageFix$Direction$Axis ahb$b$a
	$VALUES d
	X a
	Y b
	Z c
net/minecraft/util/datafix/fixes/ChunkPalettedStorageFix$Direction$AxisDirection ahb$b$b
	$VALUES d
	NEGATIVE b
	POSITIVE a
	step c
	getStep ()I a
net/minecraft/util/datafix/fixes/ChunkPalettedStorageFix$Section ahb$c
	buffer i
	hasData e
	listTag c
	palette b
	section d
	seen h
	toFix f
	update g
	y a
	addFix (II)V a
	getBlock (I)Lcom/mojang/serialization/Dynamic; a
	setBlock (ILcom/mojang/serialization/Dynamic;)V a
	upgrade (I)I b
	write ()Lcom/mojang/serialization/Dynamic; a
net/minecraft/util/datafix/fixes/ChunkPalettedStorageFix$UpgradeChunk ahb$d
	blockEntities f
	level c
	sections b
	sides a
	x d
	z e
	getBlock (I)Lcom/mojang/serialization/Dynamic; a
	getBlockEntity (I)Lcom/mojang/serialization/Dynamic; b
	getSection (I)Lnet/minecraft/util/datafix/fixes/ChunkPalettedStorageFix$Section; d
	relative (ILnet/minecraft/util/datafix/fixes/ChunkPalettedStorageFix$Direction;)I a
	removeBlockEntity (I)Lcom/mojang/serialization/Dynamic; c
	setBlock (ILcom/mojang/serialization/Dynamic;)V a
	write ()Lcom/mojang/serialization/Dynamic; a
net/minecraft/util/datafix/fixes/ChunkStatusFix ahc
net/minecraft/util/datafix/fixes/ChunkStatusFix2 ahd
	RENAMES_AND_DOWNGRADES a
net/minecraft/util/datafix/fixes/ChunkStructuresTemplateRenameFix ahe
	RENAMES a
	fixTag (Lcom/mojang/serialization/Dynamic;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; a
net/minecraft/util/datafix/fixes/ChunkToProtochunkFix ahf
	packOffsetCoordinates (III)S a
net/minecraft/util/datafix/fixes/ColorlessShulkerEntityFix ahg
	fix (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; a
net/minecraft/util/datafix/fixes/DyeItemRenameFix ahh
	RENAMED_IDS a
net/minecraft/util/datafix/fixes/EntityArmorStandSilentFix ahi
	fix (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; a
	fixTag (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; a
net/minecraft/util/datafix/fixes/EntityBlockStateFix ahj
	MAP a
	getBlockId (Ljava/lang/String;)I a
	updateBlockToBlockState (Lcom/mojang/datafixers/Typed;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lcom/mojang/datafixers/Typed; a
	updateEntity (Lcom/mojang/datafixers/Typed;Ljava/lang/String;Ljava/util/function/Function;)Lcom/mojang/datafixers/Typed; a
	updateFallingBlock (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; a
net/minecraft/util/datafix/fixes/EntityCatSplitFix ahk
	getNewNameAndTag (Ljava/lang/String;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/datafixers/util/Pair; a
net/minecraft/util/datafix/fixes/EntityCodSalmonFix ahl
	RENAMED_EGG_IDS b
	RENAMED_IDS a
	rename (Ljava/lang/String;)Ljava/lang/String; a
net/minecraft/util/datafix/fixes/EntityCustomNameToComponentFix ahm
	fixTagCustomName (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; a
net/minecraft/util/datafix/fixes/EntityElderGuardianSplitFix ahn
	getNewNameAndTag (Ljava/lang/String;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/datafixers/util/Pair; a
net/minecraft/util/datafix/fixes/EntityEquipmentToArmorAndHandFix aho
	cap (Lcom/mojang/datafixers/types/Type;)Lcom/mojang/datafixers/TypeRewriteRule; a
net/minecraft/util/datafix/fixes/EntityHealthFix ahp
	ENTITIES a
	fixTag (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; a
net/minecraft/util/datafix/fixes/EntityHorseSaddleFix ahq
	fix (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; a
net/minecraft/util/datafix/fixes/EntityHorseSplitFix ahr
	fix (Ljava/lang/String;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/util/Pair; a
net/minecraft/util/datafix/fixes/EntityIdFix ahs
	ID_MAP a
net/minecraft/util/datafix/fixes/EntityItemFrameDirectionFix aht
	direction2dTo3d (B)B a
	fix (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; a
	fixTag (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; a
net/minecraft/util/datafix/fixes/EntityMinecartIdentifiersFix ahu
	MINECART_BY_ID a
net/minecraft/util/datafix/fixes/EntityPaintingItemFrameDirectionFix ahv
	DIRECTIONS a
	doFix (Lcom/mojang/serialization/Dynamic;ZZ)Lcom/mojang/serialization/Dynamic; a
net/minecraft/util/datafix/fixes/EntityPaintingMotiveFix ahw
	MAP a
	fix (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; a
	fixTag (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; a
net/minecraft/util/datafix/fixes/EntityProjectileOwnerFix ahx
	createUUIDArray (JJ)[I a
	setUUID (Lcom/mojang/serialization/Dynamic;JJ)Lcom/mojang/serialization/Dynamic; a
	updateEntity (Lcom/mojang/datafixers/Typed;Ljava/lang/String;Ljava/util/function/Function;)Lcom/mojang/datafixers/Typed; a
	updateItemPotion (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; c
	updateOwnerArrow (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; a
	updateOwnerLlamaSpit (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; b
	updateOwnerThrowable (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; d
	updateProjectiles (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; a
net/minecraft/util/datafix/fixes/EntityPufferfishRenameFix ahy
	RENAMED_IDS a
	rename (Ljava/lang/String;)Ljava/lang/String; a
net/minecraft/util/datafix/fixes/EntityRavagerRenameFix ahz
	RENAMED_IDS a
	rename (Ljava/lang/String;)Ljava/lang/String; a
net/minecraft/util/datafix/fixes/EntityRedundantChanceTagsFix aia
	FLOAT_LIST_CODEC a
	isZeroList (Lcom/mojang/serialization/OptionalDynamic;I)Z a
net/minecraft/util/datafix/fixes/EntityRenameFix aib
	name a
	fix (Ljava/lang/String;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/util/Pair; a
	getEntity (Ljava/lang/Object;Lcom/mojang/serialization/DynamicOps;Lcom/mojang/datafixers/types/Type;)Lcom/mojang/datafixers/Typed; a
net/minecraft/util/datafix/fixes/EntityRidingToPassengersFix aic
	cap (Lcom/mojang/datafixers/schemas/Schema;Lcom/mojang/datafixers/schemas/Schema;Lcom/mojang/datafixers/types/Type;Lcom/mojang/datafixers/types/Type;Lcom/mojang/datafixers/types/Type;)Lcom/mojang/datafixers/TypeRewriteRule; a
net/minecraft/util/datafix/fixes/EntityShulkerColorFix aid
	fix (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; a
	fixTag (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; a
net/minecraft/util/datafix/fixes/EntityShulkerRotationFix aie
	fix (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; a
	fixTag (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; a
net/minecraft/util/datafix/fixes/EntitySkeletonSplitFix aif
	getNewNameAndTag (Ljava/lang/String;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/datafixers/util/Pair; a
net/minecraft/util/datafix/fixes/EntityStringUuidFix aig
net/minecraft/util/datafix/fixes/EntityTheRenameningFix aih
	RENAMED_BLOCKS b
	RENAMED_IDS a
	RENAMED_ITEMS c
	rename (Ljava/lang/String;)Ljava/lang/String; a
net/minecraft/util/datafix/fixes/EntityTippedArrowFix aii
	rename (Ljava/lang/String;)Ljava/lang/String; a
net/minecraft/util/datafix/fixes/EntityUUIDFix aij
	ABSTRACT_HORSES c
	ANIMALS e
	LIVING_ENTITIES g
	MOBS f
	PROJECTILES h
	TAMEABLE_ANIMALS d
	updateAnimal (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; m
	updateAnimalOwner (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; l
	updateAreaEffectCloud (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; g
	updateEntityUUID (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; c
	updateEvokerFangs (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; e
	updateFox (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; j
	updateHurtBy (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; k
	updateItem (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; i
	updateLivingEntity (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; b
	updateMob (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; n
	updatePiglin (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; d
	updateProjectile (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; o
	updateShulkerBullet (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; h
	updateZombieVillager (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; f
net/minecraft/util/datafix/fixes/EntityWolfColorFix aik
	fix (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; a
	fixTag (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; a
net/minecraft/util/datafix/fixes/EntityZombieSplitFix ail
	getNewNameAndTag (Ljava/lang/String;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/datafixers/util/Pair; a
net/minecraft/util/datafix/fixes/EntityZombieVillagerTypeFix aim
	RANDOM a
	fix (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; a
	fixTag (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; a
	getVillagerProfession (I)I a
net/minecraft/util/datafix/fixes/EntityZombifiedPiglinRenameFix ain
	RENAMED_IDS a
	rename (Ljava/lang/String;)Ljava/lang/String; a
net/minecraft/util/datafix/fixes/ForcePoiRebuild aio
	cap (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; a
net/minecraft/util/datafix/fixes/FurnaceRecipeFix aip
	cap (Lcom/mojang/datafixers/types/Type;)Lcom/mojang/datafixers/TypeRewriteRule; a
	updateFurnaceContents (Lcom/mojang/datafixers/types/Type;Lcom/mojang/datafixers/types/Type;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; a
net/minecraft/util/datafix/fixes/GossipUUIDFix aiq
	fix (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; a
net/minecraft/util/datafix/fixes/HeightmapRenamingFix air
	fix (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; a
net/minecraft/util/datafix/fixes/IglooMetadataRemovalFix ais
	fixTag (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; a
	isIglooPiece (Lcom/mojang/serialization/Dynamic;)Z c
	removeIglooPieces (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; b
net/minecraft/util/datafix/fixes/ItemBannerColorFix ait
net/minecraft/util/datafix/fixes/ItemCustomNameToComponentFix aiu
	fixTag (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; a
net/minecraft/util/datafix/fixes/ItemIdFix aiv
	ITEM_NAMES a
	getItem (I)Ljava/lang/String; a
net/minecraft/util/datafix/fixes/ItemLoreFix aiw
	fixLoreEntry (Ljava/lang/String;)Ljava/lang/String; a
	fixLoreList (Ljava/util/stream/Stream;)Ljava/util/stream/Stream; a
net/minecraft/util/datafix/fixes/ItemPotionFix aix
	POTIONS a
net/minecraft/util/datafix/fixes/ItemRenameFix aiy
	name a
	create (Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;Ljava/util/function/Function;)Lcom/mojang/datafixers/DataFix; a
	fixItem (Ljava/lang/String;)Ljava/lang/String; a
net/minecraft/util/datafix/fixes/ItemShulkerBoxColorFix aiz
	NAMES_BY_COLOR a
net/minecraft/util/datafix/fixes/ItemSpawnEggFix aja
	ID_TO_ENTITY a
net/minecraft/util/datafix/fixes/ItemStackEnchantmentNamesFix ajb
	MAP a
	fixTag (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; a
net/minecraft/util/datafix/fixes/ItemStackMapIdFix ajc
net/minecraft/util/datafix/fixes/ItemStackSpawnEggFix ajd
	MAP a
net/minecraft/util/datafix/fixes/ItemStackTheFlatteningFix aje
	DAMAGE_IDS c
	IDS b
	MAP a
	updateItem (Ljava/lang/String;I)Ljava/lang/String; a
net/minecraft/util/datafix/fixes/ItemStackUUIDFix ajf
	updateAttributeModifiers (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; b
	updateSkullOwner (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; c
net/minecraft/util/datafix/fixes/ItemWaterPotionFix ajg
net/minecraft/util/datafix/fixes/ItemWrittenBookPagesStrictJsonFix ajh
	fixTag (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; a
net/minecraft/util/datafix/fixes/JigsawPropertiesFix aji
	fix (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; a
	fixTag (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; a
net/minecraft/util/datafix/fixes/JigsawRotationFix ajj
	renames a
	fix (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; a
net/minecraft/util/datafix/fixes/LeavesFix ajk
	DIRECTIONS a
	LEAVES b
	LOGS c
	getIndex (III)I a
	getSideMask (ZZZZ)I a
	getX (I)I a
	getY (I)I b
	getZ (I)I c
net/minecraft/util/datafix/fixes/LeavesFix$LeavesSection ajk$a
	leaveIds e
	logIds f
	stateToIdMap g
	getDistance (I)I d
	isLeaf (I)Z b
	isLog (I)Z a
	makeLeafTag (Lcom/mojang/serialization/Dynamic;Ljava/lang/String;ZI)Lcom/mojang/serialization/Dynamic; a
	setDistance (III)V a
	skippable ()Z a
net/minecraft/util/datafix/fixes/LeavesFix$Section ajk$b
	blockStateType e
	index c
	palette b
	paletteFinder a
	storage d
	getBlock (I)I c
	getIndex ()I c
	getStateId (Ljava/lang/String;ZI)I a
	isSkippable ()Z b
	readStorage (Lcom/mojang/serialization/Dynamic;)V a
	skippable ()Z a
	write (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; a
net/minecraft/util/datafix/fixes/LevelDataGeneratorOptionsFix ajl
	MAP a
	convert (Ljava/lang/String;Lcom/mojang/serialization/DynamicOps;)Lcom/mojang/serialization/Dynamic; a
	getLayerInfoFromString (Ljava/lang/String;)Lcom/mojang/datafixers/util/Pair; a
	getLayersInfoFromString (Ljava/lang/String;)Ljava/util/List; b
net/minecraft/util/datafix/fixes/LevelFlatGeneratorInfoFix ajm
	AMOUNT_SPLITTER d
	BLOCK_SPLITTER e
	LAYER_SPLITTER b
	OLD_AMOUNT_SPLITTER c
	SPLITTER a
	fix (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; a
	fixString (Ljava/lang/String;)Ljava/lang/String; a
net/minecraft/util/datafix/fixes/LevelUUIDFix ajn
	updateCustomBossEvents (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; d
	updateDragonFight (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; c
	updateWanderingTrader (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; b
net/minecraft/util/datafix/fixes/MapIdFix ajo
net/minecraft/util/datafix/fixes/MemoryExpiryDataFix ajp
	fix (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; a
	fixTag (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; a
	updateBrain (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; b
	updateMemories (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; c
	updateMemoryEntry (Lcom/mojang/datafixers/util/Pair;)Lcom/mojang/datafixers/util/Pair; a
	wrapMemoryValue (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; d
net/minecraft/util/datafix/fixes/MissingDimensionFix ajq
	fields (Ljava/lang/String;Lcom/mojang/datafixers/types/Type;)Lcom/mojang/datafixers/types/Type; a
	optionalFields (Ljava/lang/String;Lcom/mojang/datafixers/types/Type;)Lcom/mojang/datafixers/types/Type; b
	optionalFields (Ljava/lang/String;Lcom/mojang/datafixers/types/Type;Ljava/lang/String;Lcom/mojang/datafixers/types/Type;)Lcom/mojang/datafixers/types/Type; a
	recreateSettings (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; a
net/minecraft/util/datafix/fixes/MobSpawnerEntityIdentifiersFix ajr
	fix (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; a
net/minecraft/util/datafix/fixes/NamedEntityFix ajs
	entityName b
	name a
	type c
	fix (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; a
net/minecraft/util/datafix/fixes/NewVillageFix ajt
	cap (Lcom/mojang/datafixers/types/templates/CompoundList$CompoundListType;)Lcom/mojang/datafixers/TypeRewriteRule; a
net/minecraft/util/datafix/fixes/ObjectiveDisplayNameFix aju
net/minecraft/util/datafix/fixes/ObjectiveRenderTypeFix ajv
	getRenderType (Ljava/lang/String;)Lnet/minecraft/world/scores/criteria/ObjectiveCriteria$RenderType; a
net/minecraft/util/datafix/fixes/OminousBannerBlockEntityRenameFix ajw
	fix (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; a
	fixTag (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; a
net/minecraft/util/datafix/fixes/OminousBannerRenameFix ajx
	fixTag (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; a
net/minecraft/util/datafix/fixes/OptionsAddTextBackgroundFix ajy
	calculateBackground (Ljava/lang/String;)D a
net/minecraft/util/datafix/fixes/OptionsForceVBOFix ajz
net/minecraft/util/datafix/fixes/OptionsKeyLwjgl3Fix aka
	MAP a
net/minecraft/util/datafix/fixes/OptionsKeyTranslationFix akb
net/minecraft/util/datafix/fixes/OptionsLowerCaseLanguageFix akc
net/minecraft/util/datafix/fixes/OptionsRenameFieldFix akd
	fieldFrom b
	fieldTo c
	fixName a
net/minecraft/util/datafix/fixes/PlayerUUIDFix ake
net/minecraft/util/datafix/fixes/PoiTypeRename akf
	cap (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; a
	rename (Ljava/lang/String;)Ljava/lang/String; a
	renameRecords (Lcom/mojang/serialization/Dynamic;)Ljava/util/Optional; b
net/minecraft/util/datafix/fixes/RecipesFix akg
	RECIPES a
net/minecraft/util/datafix/fixes/RecipesRenameFix akh
	name a
	renamer b
net/minecraft/util/datafix/fixes/RecipesRenameningFix aki
	RECIPES a
net/minecraft/util/datafix/fixes/RedstoneWireConnectionsFix akj
	isConnected (Ljava/lang/String;)Z a
	updateRedstoneConnections (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; a
net/minecraft/util/datafix/fixes/References akk
	ADVANCEMENTS i
	BIOME x
	BLOCK_ENTITY k
	BLOCK_NAME q
	BLOCK_STATE m
	CHUNK c
	ENTITY p
	ENTITY_NAME n
	ENTITY_TREE o
	HOTBAR d
	ITEM_NAME r
	ITEM_STACK l
	LEVEL a
	OBJECTIVE u
	OPTIONS e
	PLAYER b
	POI_CHUNK j
	RECIPE w
	SAVED_DATA h
	STATS g
	STRUCTURE f
	STRUCTURE_FEATURE t
	TEAM v
	UNTAGGED_SPAWNER s
	WORLD_GEN_SETTINGS y
net/minecraft/util/datafix/fixes/RemoveGolemGossipFix akl
	fix (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; a
	fixValue (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; a
net/minecraft/util/datafix/fixes/RenameBiomesFix akm
	biomes b
	name a
net/minecraft/util/datafix/fixes/RenamedCoralFansFix akn
	RENAMED_IDS a
net/minecraft/util/datafix/fixes/RenamedCoralFix ako
	RENAMED_IDS a
net/minecraft/util/datafix/fixes/ReorganizePoi akp
	cap (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; a
net/minecraft/util/datafix/fixes/SavedDataUUIDFix akq
net/minecraft/util/datafix/fixes/SavedDataVillageCropFix akr
	fixTag (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; a
	updateChildren (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; b
	updateChildren (Ljava/util/stream/Stream;)Ljava/util/stream/Stream; a
	updateCrop (Lcom/mojang/serialization/Dynamic;Ljava/lang/String;)Lcom/mojang/serialization/Dynamic; a
	updateDoubleField (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; d
	updateSingleField (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; c
net/minecraft/util/datafix/fixes/SimpleEntityRenameFix aks
	fix (Ljava/lang/String;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/util/Pair; a
	getNewNameAndTag (Ljava/lang/String;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/datafixers/util/Pair; a
net/minecraft/util/datafix/fixes/SimplestEntityRenameFix akt
	name a
	rename (Ljava/lang/String;)Ljava/lang/String; a
net/minecraft/util/datafix/fixes/StatsCounterFix aku
	CUSTOM_MAP b
	ENTITIES e
	ENTITY_KEYS d
	ITEM_KEYS c
	SKIP a
	upgradeBlock (Ljava/lang/String;)Ljava/lang/String; b
	upgradeItem (Ljava/lang/String;)Ljava/lang/String; a
net/minecraft/util/datafix/fixes/StriderGravityFix akv
	fix (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; a
	fixTag (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; a
net/minecraft/util/datafix/fixes/StructureReferenceCountFix akw
	setCountToAtLeastOne (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; a
net/minecraft/util/datafix/fixes/SwimStatsRenameFix akx
net/minecraft/util/datafix/fixes/TeamDisplayNameFix aky
net/minecraft/util/datafix/fixes/TrappedChestBlockEntityFix akz
	LOGGER a
net/minecraft/util/datafix/fixes/TrappedChestBlockEntityFix$TrappedChestSection akz$a
	chestIds e
	isTrappedChest (I)Z a
	skippable ()Z a
net/minecraft/util/datafix/fixes/VillagerDataFix ala
	fix (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; a
	upgradeData (II)Ljava/lang/String; a
net/minecraft/util/datafix/fixes/VillagerFollowRangeFix alb
	fix (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; a
	fixValue (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; a
net/minecraft/util/datafix/fixes/VillagerRebuildLevelAndXpFix alc
	LEVEL_XP_THRESHOLDS a
	addLevel (Lcom/mojang/datafixers/Typed;I)Lcom/mojang/datafixers/Typed; a
	addXpFromLevel (Lcom/mojang/datafixers/Typed;I)Lcom/mojang/datafixers/Typed; b
	getMinXpPerLevel (I)I a
net/minecraft/util/datafix/fixes/VillagerTradeFix ald
	fix (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; a
	updateItemStack (Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; a
net/minecraft/util/datafix/fixes/WallPropertyFix ale
	WALL_BLOCKS a
	fixWallProperty (Lcom/mojang/serialization/Dynamic;Ljava/lang/String;)Lcom/mojang/serialization/Dynamic; a
	mapProperty (Ljava/lang/String;)Ljava/lang/String; a
	upgradeBlockStateTag (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; a
net/minecraft/util/datafix/fixes/WorldGenSettingsFix alf
	DEFAULTS a
	defaultOverworld (Lcom/mojang/serialization/Dynamic;J)Lcom/mojang/serialization/Dynamic; a
	fix (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; a
	fixFlatStructures (Lcom/mojang/serialization/DynamicOps;Lcom/mojang/serialization/OptionalDynamic;)Ljava/util/Map; a
	getInt (Ljava/lang/String;I)I a
	getInt (Ljava/lang/String;II)I a
	noise (JLcom/mojang/serialization/DynamicLike;Lcom/mojang/serialization/Dynamic;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; a
	setSpacing (Ljava/util/Map;Ljava/lang/String;Ljava/lang/String;I)V a
	vanillaBiomeSource (Lcom/mojang/serialization/Dynamic;JZZ)Lcom/mojang/serialization/Dynamic; a
	vanillaLevels (Lcom/mojang/serialization/Dynamic;JLcom/mojang/serialization/Dynamic;Z)Ljava/lang/Object; a
net/minecraft/util/datafix/fixes/WorldGenSettingsFix$StructureFeatureConfiguration alf$a
	CODEC a
	salt d
	separation c
	spacing b
	serialize (Lcom/mojang/serialization/DynamicOps;)Lcom/mojang/serialization/Dynamic; a
net/minecraft/util/datafix/fixes/WriteAndReadFix alg
	name a
	type b
net/minecraft/util/datafix/fixes/ZombieVillagerRebuildXpFix alh
	fix (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; a
net/minecraft/util/datafix/schemas/NamespacedSchema alk
	NAMESPACED_STRING b
	NAMESPACED_STRING_CODEC a
	ensureNamespaced (Ljava/lang/String;)Ljava/lang/String; a
	namespacedString ()Lcom/mojang/datafixers/types/Type; a
net/minecraft/util/datafix/schemas/V100 all
	equipment (Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate; a
	registerMob (Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/lang/String;)V a
net/minecraft/util/datafix/schemas/V102 alm
net/minecraft/util/datafix/schemas/V1022 aln
net/minecraft/util/datafix/schemas/V106 alo
net/minecraft/util/datafix/schemas/V107 alp
net/minecraft/util/datafix/schemas/V1125 alq
net/minecraft/util/datafix/schemas/V135 alr
net/minecraft/util/datafix/schemas/V143 als
net/minecraft/util/datafix/schemas/V1451 alt
net/minecraft/util/datafix/schemas/V1451_1 alu
net/minecraft/util/datafix/schemas/V1451_2 alv
net/minecraft/util/datafix/schemas/V1451_3 alw
net/minecraft/util/datafix/schemas/V1451_4 alx
net/minecraft/util/datafix/schemas/V1451_5 aly
net/minecraft/util/datafix/schemas/V1451_6 alz
net/minecraft/util/datafix/schemas/V1451_7 ama
net/minecraft/util/datafix/schemas/V1460 amb
	registerInventory (Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/lang/String;)V b
	registerMob (Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/lang/String;)V a
net/minecraft/util/datafix/schemas/V1466 amc
net/minecraft/util/datafix/schemas/V1470 amd
	registerMob (Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/lang/String;)V a
net/minecraft/util/datafix/schemas/V1481 ame
net/minecraft/util/datafix/schemas/V1483 amf
net/minecraft/util/datafix/schemas/V1486 amg
net/minecraft/util/datafix/schemas/V1510 amh
net/minecraft/util/datafix/schemas/V1800 ami
	registerMob (Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/lang/String;)V a
net/minecraft/util/datafix/schemas/V1801 amj
	registerMob (Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/lang/String;)V a
net/minecraft/util/datafix/schemas/V1904 amk
	registerMob (Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/lang/String;)V a
net/minecraft/util/datafix/schemas/V1906 aml
	registerInventory (Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/lang/String;)V a
net/minecraft/util/datafix/schemas/V1909 amm
net/minecraft/util/datafix/schemas/V1920 amn
	registerInventory (Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/lang/String;)V a
net/minecraft/util/datafix/schemas/V1928 amo
	equipment (Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate; a
	registerMob (Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/lang/String;)V a
net/minecraft/util/datafix/schemas/V1929 amp
net/minecraft/util/datafix/schemas/V1931 amq
	registerMob (Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/lang/String;)V a
net/minecraft/util/datafix/schemas/V2100 amr
	registerMob (Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/lang/String;)V a
net/minecraft/util/datafix/schemas/V2501 ams
	registerFurnace (Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/lang/String;)V a
net/minecraft/util/datafix/schemas/V2502 amt
	registerMob (Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/lang/String;)V a
net/minecraft/util/datafix/schemas/V2505 amu
	registerMob (Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/lang/String;)V a
net/minecraft/util/datafix/schemas/V2509 amv
	registerMob (Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/lang/String;)V a
net/minecraft/util/datafix/schemas/V2519 amw
	registerMob (Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/lang/String;)V a
net/minecraft/util/datafix/schemas/V2522 amx
	registerMob (Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/lang/String;)V a
net/minecraft/util/datafix/schemas/V2551 amy
net/minecraft/util/datafix/schemas/V2568 amz
	registerMob (Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/lang/String;)V a
net/minecraft/util/datafix/schemas/V501 ana
	registerMob (Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/lang/String;)V a
net/minecraft/util/datafix/schemas/V700 anb
	registerMob (Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/lang/String;)V a
net/minecraft/util/datafix/schemas/V701 anc
	registerMob (Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/lang/String;)V a
net/minecraft/util/datafix/schemas/V702 and
	registerMob (Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/lang/String;)V a
net/minecraft/util/datafix/schemas/V703 ane
net/minecraft/util/datafix/schemas/V704 anf
	ADD_NAMES b
	ITEM_TO_BLOCKENTITY a
	registerInventory (Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/lang/String;)V a
net/minecraft/util/datafix/schemas/V705 ang
	ADD_NAMES b
	registerMob (Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/lang/String;)V a
	registerThrowableProjectile (Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/lang/String;)V b
net/minecraft/util/datafix/schemas/V808 anh
	registerInventory (Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/lang/String;)V a
net/minecraft/util/datafix/schemas/V99 ani
	ADD_NAMES a
	ITEM_TO_BLOCKENTITY c
	LOGGER b
	addNames (Lcom/mojang/serialization/Dynamic;Ljava/util/Map;Ljava/lang/String;)Ljava/lang/Object; a
	equipment (Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate; a
	registerInventory (Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/lang/String;)V d
	registerMinecart (Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/lang/String;)V c
	registerMob (Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/lang/String;)V a
	registerThrowableProjectile (Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/lang/String;)V b
net/minecraft/util/monitoring/jmx/MinecraftServerStatistics ank
	LOGGER a
	attributeDescriptionByName d
	mBeanInfo c
	server b
	getAverageTickTime ()F a
	getTickTimes ()[J b
	registerJmxMonitoring (Lnet/minecraft/server/MinecraftServer;)V a
net/minecraft/util/monitoring/jmx/MinecraftServerStatistics$AttributeDescription ank$a
	description c
	getter b
	name a
	type d
	asMBeanAttributeInfo ()Ljavax/management/MBeanAttributeInfo; a
net/minecraft/util/profiling/ActiveProfiler anm
	LOGGER b
	WARNING_TIME_NANOS a
	currentEntry l
	entries e
	getRealTime g
	getTickTime f
	path j
	paths c
	startTimeNano h
	startTimeTicks i
	startTimes d
	started k
	warn m
	endTick ()V b
	getCurrentEntry ()Lnet/minecraft/util/profiling/ActiveProfiler$PathEntry; e
	getResults ()Lnet/minecraft/util/profiling/ProfileResults; d
	incrementCounter (Ljava/lang/String;)V c
	incrementCounter (Ljava/util/function/Supplier;)V c
	pop ()V c
	popPush (Ljava/lang/String;)V b
	popPush (Ljava/util/function/Supplier;)V b
	push (Ljava/lang/String;)V a
	push (Ljava/util/function/Supplier;)V a
	startTick ()V a
net/minecraft/util/profiling/ActiveProfiler$PathEntry anm$a
	count b
	counters c
	duration a
	getCount ()J b
	getCounters ()Lit/unimi/dsi/fastutil/objects/Object2LongMap; c
	getDuration ()J a
net/minecraft/util/profiling/ContinuousProfiler ann
	profiler c
	realTime a
	tickCount b
	disable ()V b
	enable ()V c
	getFiller ()Lnet/minecraft/util/profiling/ProfilerFiller; d
	getResults ()Lnet/minecraft/util/profiling/ProfileResults; e
	isEnabled ()Z a
net/minecraft/util/profiling/EmptyProfileResults ano
	EMPTY a
	getEndTimeNano ()J c
	getEndTimeTicks ()I d
	getProfilerResults ()Ljava/lang/String; e
	getStartTimeNano ()J a
	getStartTimeTicks ()I b
	getTimes (Ljava/lang/String;)Ljava/util/List; a
	saveResults (Ljava/io/File;)Z a
net/minecraft/util/profiling/FilledProfileResults anp
	COUNTER_ENTRY_COMPARATOR d
	EMPTY b
	LOGGER a
	SPLITTER c
	endTimeNano h
	endTimeTicks i
	entries e
	startTimeNano f
	startTimeTicks g
	tickDuration j
	appendCounterResults (ILjava/lang/String;Lnet/minecraft/util/profiling/FilledProfileResults$CounterCollector;ILjava/lang/StringBuilder;)V a
	appendCounters (Ljava/util/Map;Ljava/lang/StringBuilder;I)V a
	appendProfilerResults (ILjava/lang/String;Ljava/lang/StringBuilder;)V a
	getComment ()Ljava/lang/String; i
	getCounterValues ()Ljava/util/Map; h
	getEndTimeNano ()J c
	getEndTimeTicks ()I d
	getEntry (Ljava/lang/String;)Lnet/minecraft/util/profiling/ProfilerPathEntry; c
	getProfilerResults ()Ljava/lang/String; e
	getProfilerResults (JI)Ljava/lang/String; a
	getStartTimeNano ()J a
	getStartTimeTicks ()I b
	getTickDuration ()I f
	getTimes (Ljava/lang/String;)Ljava/util/List; a
	indentLine (Ljava/lang/StringBuilder;I)Ljava/lang/StringBuilder; a
	isDirectChild (Ljava/lang/String;Ljava/lang/String;)Z a
	saveResults (Ljava/io/File;)Z a
net/minecraft/util/profiling/FilledProfileResults$CounterCollector anp$a
	children c
	selfValue a
	totalValue b
	addValue (Ljava/util/Iterator;J)V a
net/minecraft/util/profiling/InactiveProfiler anq
	INSTANCE a
	endTick ()V b
	getResults ()Lnet/minecraft/util/profiling/ProfileResults; d
	incrementCounter (Ljava/lang/String;)V c
	incrementCounter (Ljava/util/function/Supplier;)V c
	pop ()V c
	popPush (Ljava/lang/String;)V b
	popPush (Ljava/util/function/Supplier;)V b
	push (Ljava/lang/String;)V a
	push (Ljava/util/function/Supplier;)V a
	startTick ()V a
net/minecraft/util/profiling/ProfileCollector anr
	getResults ()Lnet/minecraft/util/profiling/ProfileResults; d
net/minecraft/util/profiling/ProfileResults ans
	demanglePath (Ljava/lang/String;)Ljava/lang/String; b
	getEndTimeNano ()J c
	getEndTimeTicks ()I d
	getNanoDuration ()J g
	getProfilerResults ()Ljava/lang/String; e
	getStartTimeNano ()J a
	getStartTimeTicks ()I b
	getTickDuration ()I f
	getTimes (Ljava/lang/String;)Ljava/util/List; a
	saveResults (Ljava/io/File;)Z a
net/minecraft/util/profiling/ProfilerFiller ant
	endTick ()V b
	incrementCounter (Ljava/lang/String;)V c
	incrementCounter (Ljava/util/function/Supplier;)V c
	pop ()V c
	popPush (Ljava/lang/String;)V b
	popPush (Ljava/util/function/Supplier;)V b
	push (Ljava/lang/String;)V a
	push (Ljava/util/function/Supplier;)V a
	startTick ()V a
	tee (Lnet/minecraft/util/profiling/ProfilerFiller;Lnet/minecraft/util/profiling/ProfilerFiller;)Lnet/minecraft/util/profiling/ProfilerFiller; a
net/minecraft/util/profiling/ProfilerPathEntry anu
	getCount ()J b
	getCounters ()Lit/unimi/dsi/fastutil/objects/Object2LongMap; c
	getDuration ()J a
net/minecraft/util/profiling/ResultField anv
	count c
	globalPercentage b
	name d
	percentage a
	compareTo (Lnet/minecraft/util/profiling/ResultField;)I a
	getColor ()I a
net/minecraft/util/profiling/SingleTickProfiler anw
	LOGGER a
	location e
	profiler f
	realTime b
	saveThreshold c
	tick d
	createTickProfiler (Ljava/lang/String;)Lnet/minecraft/util/profiling/SingleTickProfiler; a
	decorateFiller (Lnet/minecraft/util/profiling/ProfilerFiller;Lnet/minecraft/util/profiling/SingleTickProfiler;)Lnet/minecraft/util/profiling/ProfilerFiller; a
	endTick ()V b
	startTick ()Lnet/minecraft/util/profiling/ProfilerFiller; a
net/minecraft/util/thread/BlockableEventLoop any
	LOGGER c
	blockingCount e
	name b
	pendingRunnables d
	doRunTask (Ljava/lang/Runnable;)V c
	dropAllTasks ()V bj
	executeBlocking (Ljava/lang/Runnable;)V g
	getPendingTasksCount ()I bh
	getRunningThread ()Ljava/lang/Thread; av
	isSameThread ()Z bg
	managedBlock (Ljava/util/function/BooleanSupplier;)V c
	name ()Ljava/lang/String; bi
	pollTask ()Z y
	runAllTasks ()V bk
	scheduleExecutables ()Z au
	shouldRun (Ljava/lang/Runnable;)Z d
	submit (Ljava/lang/Runnable;)Ljava/util/concurrent/CompletableFuture; f
	submit (Ljava/util/function/Supplier;)Ljava/util/concurrent/CompletableFuture; a
	submitAsync (Ljava/lang/Runnable;)Ljava/util/concurrent/CompletableFuture; a
	tell (Ljava/lang/Object;)V a
	tell (Ljava/lang/Runnable;)V h
	waitForTasks ()V bl
	wrapRunnable (Ljava/lang/Runnable;)Ljava/lang/Runnable; e
net/minecraft/util/thread/NamedThreadFactory anz
	LOGGER a
	group b
	namePrefix d
	threadNumber c
net/minecraft/util/thread/ProcessorHandle aoa
	ask (Ljava/util/function/Function;)Ljava/util/concurrent/CompletableFuture; b
	askEither (Ljava/util/function/Function;)Ljava/util/concurrent/CompletableFuture; c
	name ()Ljava/lang/String; bi
	of (Ljava/lang/String;Ljava/util/function/Consumer;)Lnet/minecraft/util/thread/ProcessorHandle; a
	tell (Ljava/lang/Object;)V a
net/minecraft/util/thread/ProcessorMailbox aob
	LOGGER b
	dispatcher d
	name e
	queue a
	status c
	canBeScheduled ()Z c
	create (Ljava/util/concurrent/Executor;Ljava/lang/String;)Lnet/minecraft/util/thread/ProcessorMailbox; a
	name ()Ljava/lang/String; bi
	pollTask ()Z e
	pollUntil (Lit/unimi/dsi/fastutil/ints/Int2BooleanFunction;)I a
	registerForExecution ()V f
	setAsIdle ()V b
	setAsScheduled ()Z a
	shouldProcess ()Z d
	tell (Ljava/lang/Object;)V a
net/minecraft/util/thread/ReentrantBlockableEventLoop aoc
	reentrantCount b
	doRunTask (Ljava/lang/Runnable;)V c
	runningTask ()Z bm
	scheduleExecutables ()Z au
net/minecraft/util/thread/StrictQueue aod
	isEmpty ()Z b
	pop ()Ljava/lang/Object; a
	push (Ljava/lang/Object;)Z a
net/minecraft/util/thread/StrictQueue$FixedPriorityQueue aod$a
	queueList a
	isEmpty ()Z b
	pop ()Ljava/lang/Object; a
	pop ()Ljava/lang/Runnable; c
	push (Ljava/lang/Object;)Z a
	push (Lnet/minecraft/util/thread/StrictQueue$IntRunnable;)Z a
net/minecraft/util/thread/StrictQueue$IntRunnable aod$b
	priority a
	task b
	getPriority ()I a
net/minecraft/util/thread/StrictQueue$QueueStrictQueue aod$c
	queue a
	isEmpty ()Z b
	pop ()Ljava/lang/Object; a
	push (Ljava/lang/Object;)Z a
net/minecraft/util/worldupdate/WorldUpgrader aof
	LOGGER a
	REGEX p
	THREAD_FACTORY b
	converted l
	dataFixer g
	eraseCache d
	finished i
	levelStorage e
	levels c
	overworldDataStorage q
	progress j
	progressMap n
	running h
	skipped m
	status o
	thread f
	totalChunks k
	cancel ()V a
	dimensionProgress (Lnet/minecraft/resources/ResourceKey;)F a
	getAllChunkPos (Lnet/minecraft/resources/ResourceKey;)Ljava/util/List; b
	getConverted ()I f
	getProgress ()F d
	getSkipped ()I g
	getStatus ()Lnet/minecraft/network/chat/Component; h
	getTotalChunks ()I e
	isFinished ()Z b
	levels ()Lcom/google/common/collect/ImmutableSet; c
	work ()V i
net/minecraft/world/BossEvent aoh
	color c
	createWorldFog g
	darkenScreen e
	id h
	name a
	overlay d
	percent b
	playBossMusic f
	getColor ()Lnet/minecraft/world/BossEvent$BossBarColor; l
	getId ()Ljava/util/UUID; i
	getName ()Lnet/minecraft/network/chat/Component; j
	getOverlay ()Lnet/minecraft/world/BossEvent$BossBarOverlay; m
	getPercent ()F k
	setColor (Lnet/minecraft/world/BossEvent$BossBarColor;)V a
	setCreateWorldFog (Z)Lnet/minecraft/world/BossEvent; c
	setDarkenScreen (Z)Lnet/minecraft/world/BossEvent; a
	setName (Lnet/minecraft/network/chat/Component;)V a
	setOverlay (Lnet/minecraft/world/BossEvent$BossBarOverlay;)V a
	setPercent (F)V a
	setPlayBossMusic (Z)Lnet/minecraft/world/BossEvent; b
	shouldCreateWorldFog ()Z p
	shouldDarkenScreen ()Z n
	shouldPlayBossMusic ()Z o
net/minecraft/world/BossEvent$BossBarColor aoh$a
	$VALUES j
	BLUE b
	GREEN d
	PINK a
	PURPLE f
	RED c
	WHITE g
	YELLOW e
	formatting i
	name h
	byName (Ljava/lang/String;)Lnet/minecraft/world/BossEvent$BossBarColor; a
	getFormatting ()Lnet/minecraft/ChatFormatting; a
	getName ()Ljava/lang/String; b
net/minecraft/world/BossEvent$BossBarOverlay aoh$b
	$VALUES g
	NOTCHED_10 c
	NOTCHED_12 d
	NOTCHED_20 e
	NOTCHED_6 b
	PROGRESS a
	name f
	byName (Ljava/lang/String;)Lnet/minecraft/world/BossEvent$BossBarOverlay; a
	getName ()Ljava/lang/String; a
net/minecraft/world/Clearable aoi
	clearContent ()V Y_
	tryClear (Ljava/lang/Object;)V a
net/minecraft/world/CompoundContainer aoj
	container1 a
	container2 b
	canPlaceItem (ILnet/minecraft/world/item/ItemStack;)Z b
	clearContent ()V Y_
	contains (Lnet/minecraft/world/Container;)Z a
	getContainerSize ()I Z_
	getItem (I)Lnet/minecraft/world/item/ItemStack; a
	getMaxStackSize ()I V_
	isEmpty ()Z c
	removeItem (II)Lnet/minecraft/world/item/ItemStack; a
	removeItemNoUpdate (I)Lnet/minecraft/world/item/ItemStack; b
	setChanged ()V X_
	setItem (ILnet/minecraft/world/item/ItemStack;)V a
	startOpen (Lnet/minecraft/world/entity/player/Player;)V c_
	stillValid (Lnet/minecraft/world/entity/player/Player;)Z a
	stopOpen (Lnet/minecraft/world/entity/player/Player;)V b_
net/minecraft/world/Container aok
	canPlaceItem (ILnet/minecraft/world/item/ItemStack;)Z b
	countItem (Lnet/minecraft/world/item/Item;)I a
	getContainerSize ()I Z_
	getItem (I)Lnet/minecraft/world/item/ItemStack; a
	getMaxStackSize ()I V_
	hasAnyOf (Ljava/util/Set;)Z a
	isEmpty ()Z c
	removeItem (II)Lnet/minecraft/world/item/ItemStack; a
	removeItemNoUpdate (I)Lnet/minecraft/world/item/ItemStack; b
	setChanged ()V X_
	setItem (ILnet/minecraft/world/item/ItemStack;)V a
	startOpen (Lnet/minecraft/world/entity/player/Player;)V c_
	stillValid (Lnet/minecraft/world/entity/player/Player;)Z a
	stopOpen (Lnet/minecraft/world/entity/player/Player;)V b_
net/minecraft/world/ContainerHelper aol
	clearOrCountMatchingItems (Lnet/minecraft/world/Container;Ljava/util/function/Predicate;IZ)I a
	clearOrCountMatchingItems (Lnet/minecraft/world/item/ItemStack;Ljava/util/function/Predicate;IZ)I a
	loadAllItems (Lnet/minecraft/nbt/CompoundTag;Lnet/minecraft/core/NonNullList;)V b
	removeItem (Ljava/util/List;II)Lnet/minecraft/world/item/ItemStack; a
	saveAllItems (Lnet/minecraft/nbt/CompoundTag;Lnet/minecraft/core/NonNullList;)Lnet/minecraft/nbt/CompoundTag; a
	saveAllItems (Lnet/minecraft/nbt/CompoundTag;Lnet/minecraft/core/NonNullList;Z)Lnet/minecraft/nbt/CompoundTag; a
	takeItem (Ljava/util/List;I)Lnet/minecraft/world/item/ItemStack; a
net/minecraft/world/ContainerListener aom
	containerChanged (Lnet/minecraft/world/Container;)V a
net/minecraft/world/Containers aon
	RANDOM a
	dropContents (Lnet/minecraft/world/level/Level;DDDLnet/minecraft/world/Container;)V a
	dropContents (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/NonNullList;)V a
	dropContents (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/Container;)V a
	dropContents (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/Container;)V a
	dropItemStack (Lnet/minecraft/world/level/Level;DDDLnet/minecraft/world/item/ItemStack;)V a
net/minecraft/world/Difficulty aoo
	$VALUES h
	BY_ID e
	EASY b
	HARD d
	NORMAL c
	PEACEFUL a
	id f
	key g
	byId (I)Lnet/minecraft/world/Difficulty; a
	byName (Ljava/lang/String;)Lnet/minecraft/world/Difficulty; a
	getDisplayName ()Lnet/minecraft/network/chat/Component; b
	getId ()I a
	getKey ()Ljava/lang/String; c
	nextById ()Lnet/minecraft/world/Difficulty; d
net/minecraft/world/DifficultyInstance aop
	base a
	effectiveDifficulty b
	calculateDifficulty (Lnet/minecraft/world/Difficulty;JJF)F a
	getDifficulty ()Lnet/minecraft/world/Difficulty; a
	getEffectiveDifficulty ()F b
	getSpecialMultiplier ()F d
	isHard ()Z c
	isHarderThan (F)Z a
net/minecraft/world/InteractionHand aoq
	$VALUES c
	MAIN_HAND a
	OFF_HAND b
net/minecraft/world/InteractionResult aor
	$VALUES e
	CONSUME b
	FAIL d
	PASS c
	SUCCESS a
	consumesAction ()Z a
	shouldSwing ()Z b
	sidedSuccess (Z)Lnet/minecraft/world/InteractionResult; a
net/minecraft/world/InteractionResultHolder aos
	object b
	result a
	consume (Ljava/lang/Object;)Lnet/minecraft/world/InteractionResultHolder; b
	fail (Ljava/lang/Object;)Lnet/minecraft/world/InteractionResultHolder; d
	getObject ()Ljava/lang/Object; b
	getResult ()Lnet/minecraft/world/InteractionResult; a
	pass (Ljava/lang/Object;)Lnet/minecraft/world/InteractionResultHolder; c
	sidedSuccess (Ljava/lang/Object;Z)Lnet/minecraft/world/InteractionResultHolder; a
	success (Ljava/lang/Object;)Lnet/minecraft/world/InteractionResultHolder; a
net/minecraft/world/LockCode aot
	NO_LOCK a
	key b
	addToTag (Lnet/minecraft/nbt/CompoundTag;)V a
	fromTag (Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/world/LockCode; b
	unlocksWith (Lnet/minecraft/world/item/ItemStack;)Z a
net/minecraft/world/MenuProvider aou
	getDisplayName ()Lnet/minecraft/network/chat/Component; d
net/minecraft/world/Nameable aov
	getCustomName ()Lnet/minecraft/network/chat/Component; S
	getDisplayName ()Lnet/minecraft/network/chat/Component; d
	getName ()Lnet/minecraft/network/chat/Component; Q
	hasCustomName ()Z R
net/minecraft/world/ShulkerSharedHelper aow
	openBoundingBox (Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;)Lnet/minecraft/world/phys/AABB; a
net/minecraft/world/SimpleContainer aox
	items b
	listeners c
	size a
	addItem (Lnet/minecraft/world/item/ItemStack;)Lnet/minecraft/world/item/ItemStack; a
	addListener (Lnet/minecraft/world/ContainerListener;)V a
	canAddItem (Lnet/minecraft/world/item/ItemStack;)Z b
	clearContent ()V Y_
	createTag ()Lnet/minecraft/nbt/ListTag; g
	fillStackedContents (Lnet/minecraft/world/entity/player/StackedContents;)V a
	fromTag (Lnet/minecraft/nbt/ListTag;)V a
	getContainerSize ()I Z_
	getItem (I)Lnet/minecraft/world/item/ItemStack; a
	isEmpty ()Z c
	isSameItem (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/item/ItemStack;)Z a
	moveItemToEmptySlots (Lnet/minecraft/world/item/ItemStack;)V c
	moveItemToOccupiedSlotsWithSameType (Lnet/minecraft/world/item/ItemStack;)V d
	moveItemsBetweenStacks (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/item/ItemStack;)V b
	removeAllItems ()Ljava/util/List; f
	removeItem (II)Lnet/minecraft/world/item/ItemStack; a
	removeItemNoUpdate (I)Lnet/minecraft/world/item/ItemStack; b
	removeItemType (Lnet/minecraft/world/item/Item;I)Lnet/minecraft/world/item/ItemStack; a
	removeListener (Lnet/minecraft/world/ContainerListener;)V b
	setChanged ()V X_
	setItem (ILnet/minecraft/world/item/ItemStack;)V a
	stillValid (Lnet/minecraft/world/entity/player/Player;)Z a
net/minecraft/world/SimpleMenuProvider aoy
	menuConstructor b
	title a
	getDisplayName ()Lnet/minecraft/network/chat/Component; d
net/minecraft/world/Snooper aoz
	count j
	dynamicData b
	fixedData a
	lock g
	populator e
	started i
	startupTime h
	timer f
	token c
	url d
	getStartupTime ()J g
	getToken ()Ljava/lang/String; f
	getValues ()Ljava/util/Map; c
	interrupt ()V e
	isStarted ()Z d
	populateFixedData ()V h
	prepare ()V b
	setDynamicData (Ljava/lang/String;Ljava/lang/Object;)V a
	setFixedData (Ljava/lang/String;Ljava/lang/Object;)V b
	setJvmArgs ()V i
	start ()V a
net/minecraft/world/SnooperPopulator apa
	isSnooperEnabled ()Z T
	populateSnooper (Lnet/minecraft/world/Snooper;)V a
	populateSnooperInitial (Lnet/minecraft/world/Snooper;)V b
net/minecraft/world/WorldlyContainer apb
	canPlaceItemThroughFace (ILnet/minecraft/world/item/ItemStack;Lnet/minecraft/core/Direction;)Z a
	canTakeItemThroughFace (ILnet/minecraft/world/item/ItemStack;Lnet/minecraft/core/Direction;)Z b
	getSlotsForFace (Lnet/minecraft/core/Direction;)[I a
net/minecraft/world/WorldlyContainerHolder apc
	getContainer (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/WorldlyContainer; a
net/minecraft/world/damagesource/BadRespawnPointDamage apd
	getLocalizedDeathMessage (Lnet/minecraft/world/entity/LivingEntity;)Lnet/minecraft/network/chat/Component; a
net/minecraft/world/damagesource/CombatEntry ape
	damage c
	fallDistance f
	health d
	location e
	source a
	time b
	getAttacker ()Lnet/minecraft/world/entity/Entity; i
	getAttackerName ()Lnet/minecraft/network/chat/Component; h
	getDamage ()F c
	getFallDistance ()F j
	getHealthAfterDamage ()F e
	getHealthBeforeDamage ()F d
	getLocation ()Ljava/lang/String; g
	getSource ()Lnet/minecraft/world/damagesource/DamageSource; a
	getTime ()I b
	isCombatRelated ()Z f
net/minecraft/world/damagesource/CombatRules apf
	getDamageAfterAbsorb (FFF)F a
	getDamageAfterMagicAbsorb (FF)F a
net/minecraft/world/damagesource/CombatTracker apg
	combatEndTime e
	combatStartTime d
	entries a
	inCombat f
	lastDamageTime c
	mob b
	nextLocation h
	takingDamage g
	getCombatDuration ()I f
	getDeathMessage ()Lnet/minecraft/network/chat/Component; b
	getFallLocation (Lnet/minecraft/world/damagesource/CombatEntry;)Ljava/lang/String; a
	getKiller ()Lnet/minecraft/world/entity/LivingEntity; c
	getLastEntry ()Lnet/minecraft/world/damagesource/CombatEntry; i
	getMob ()Lnet/minecraft/world/entity/LivingEntity; h
	getMostSignificantFall ()Lnet/minecraft/world/damagesource/CombatEntry; j
	isInCombat ()Z e
	isTakingDamage ()Z d
	prepareForDamage ()V a
	recheckStatus ()V g
	recordDamage (Lnet/minecraft/world/damagesource/DamageSource;FF)V a
	resetPreparedStatus ()V k
net/minecraft/world/damagesource/DamageSource aph
	ANVIL q
	CACTUS j
	CRAMMING g
	DRAGON_BREATH s
	DROWN h
	DRY_OUT t
	FALL k
	FALLING_BLOCK r
	FLY_INTO_WALL l
	GENERIC n
	HOT_FLOOR e
	IN_FIRE a
	IN_WALL f
	LAVA d
	LIGHTNING_BOLT b
	MAGIC o
	ON_FIRE c
	OUT_OF_WORLD m
	STARVE i
	SWEET_BERRY_BUSH u
	WITHER p
	bypassArmor w
	bypassInvul x
	bypassMagic y
	exhaustion z
	isExplosion E
	isFireSource A
	isMagic D
	isProjectile B
	msgId v
	scalesWithDifficulty C
	arrow (Lnet/minecraft/world/entity/projectile/AbstractArrow;Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/world/damagesource/DamageSource; a
	badRespawnPointExplosion ()Lnet/minecraft/world/damagesource/DamageSource; a
	bypassArmor ()Lnet/minecraft/world/damagesource/DamageSource; l
	bypassInvul ()Lnet/minecraft/world/damagesource/DamageSource; m
	bypassMagic ()Lnet/minecraft/world/damagesource/DamageSource; n
	explosion (Lnet/minecraft/world/entity/LivingEntity;)Lnet/minecraft/world/damagesource/DamageSource; d
	explosion (Lnet/minecraft/world/level/Explosion;)Lnet/minecraft/world/damagesource/DamageSource; a
	fireball (Lnet/minecraft/world/entity/projectile/Fireball;Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/world/damagesource/DamageSource; a
	fireworks (Lnet/minecraft/world/entity/projectile/FireworkRocketEntity;Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/world/damagesource/DamageSource; a
	getDirectEntity ()Lnet/minecraft/world/entity/Entity; j
	getEntity ()Lnet/minecraft/world/entity/Entity; k
	getFoodExhaustion ()F g
	getLocalizedDeathMessage (Lnet/minecraft/world/entity/LivingEntity;)Lnet/minecraft/network/chat/Component; a
	getMsgId ()Ljava/lang/String; q
	getSourcePosition ()Lnet/minecraft/world/phys/Vec3; w
	indirectMagic (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/world/damagesource/DamageSource; c
	indirectMobAttack (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/entity/LivingEntity;)Lnet/minecraft/world/damagesource/DamageSource; a
	isBypassArmor ()Z f
	isBypassInvul ()Z h
	isBypassMagic ()Z i
	isCreativePlayer ()Z v
	isExplosion ()Z d
	isFire ()Z p
	isMagic ()Z t
	isProjectile ()Z b
	mobAttack (Lnet/minecraft/world/entity/LivingEntity;)Lnet/minecraft/world/damagesource/DamageSource; c
	playerAttack (Lnet/minecraft/world/entity/player/Player;)Lnet/minecraft/world/damagesource/DamageSource; a
	scalesWithDifficulty ()Z s
	setExplosion ()Lnet/minecraft/world/damagesource/DamageSource; e
	setIsFire ()Lnet/minecraft/world/damagesource/DamageSource; o
	setMagic ()Lnet/minecraft/world/damagesource/DamageSource; u
	setProjectile ()Lnet/minecraft/world/damagesource/DamageSource; c
	setScalesWithDifficulty ()Lnet/minecraft/world/damagesource/DamageSource; r
	sting (Lnet/minecraft/world/entity/LivingEntity;)Lnet/minecraft/world/damagesource/DamageSource; b
	thorns (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/world/damagesource/DamageSource; a
	thrown (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/world/damagesource/DamageSource; b
	trident (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/world/damagesource/DamageSource; a
	witherSkull (Lnet/minecraft/world/entity/projectile/WitherSkull;Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/world/damagesource/DamageSource; a
net/minecraft/world/damagesource/EntityDamageSource api
	entity w
	isThorns x
	getEntity ()Lnet/minecraft/world/entity/Entity; k
	getLocalizedDeathMessage (Lnet/minecraft/world/entity/LivingEntity;)Lnet/minecraft/network/chat/Component; a
	getSourcePosition ()Lnet/minecraft/world/phys/Vec3; w
	isThorns ()Z y
	scalesWithDifficulty ()Z s
	setThorns ()Lnet/minecraft/world/damagesource/EntityDamageSource; x
net/minecraft/world/damagesource/IndirectEntityDamageSource apj
	owner x
	getDirectEntity ()Lnet/minecraft/world/entity/Entity; j
	getEntity ()Lnet/minecraft/world/entity/Entity; k
	getLocalizedDeathMessage (Lnet/minecraft/world/entity/LivingEntity;)Lnet/minecraft/network/chat/Component; a
net/minecraft/world/effect/AbsoptionMobEffect apl
	addAttributeModifiers (Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/entity/ai/attributes/AttributeMap;I)V b
	removeAttributeModifiers (Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/entity/ai/attributes/AttributeMap;I)V a
net/minecraft/world/effect/AttackDamageMobEffect apm
	multiplier a
	getAttributeModifierValue (ILnet/minecraft/world/entity/ai/attributes/AttributeModifier;)D a
net/minecraft/world/effect/HealthBoostMobEffect apn
	removeAttributeModifiers (Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/entity/ai/attributes/AttributeMap;I)V a
net/minecraft/world/effect/InstantenousMobEffect apo
	isDurationEffectTick (II)Z a
	isInstantenous ()Z a
net/minecraft/world/effect/MobEffect app
	attributeModifiers a
	category b
	color c
	descriptionId d
	addAttributeModifier (Lnet/minecraft/world/entity/ai/attributes/Attribute;Ljava/lang/String;DLnet/minecraft/world/entity/ai/attributes/AttributeModifier$Operation;)Lnet/minecraft/world/effect/MobEffect; a
	addAttributeModifiers (Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/entity/ai/attributes/AttributeMap;I)V b
	applyEffectTick (Lnet/minecraft/world/entity/LivingEntity;I)V a
	applyInstantenousEffect (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/entity/LivingEntity;ID)V a
	byId (I)Lnet/minecraft/world/effect/MobEffect; a
	getAttributeModifierValue (ILnet/minecraft/world/entity/ai/attributes/AttributeModifier;)D a
	getAttributeModifiers ()Ljava/util/Map; g
	getCategory ()Lnet/minecraft/world/effect/MobEffectCategory; e
	getColor ()I f
	getDescriptionId ()Ljava/lang/String; c
	getDisplayName ()Lnet/minecraft/network/chat/Component; d
	getId (Lnet/minecraft/world/effect/MobEffect;)I a
	getOrCreateDescriptionId ()Ljava/lang/String; b
	isBeneficial ()Z h
	isDurationEffectTick (II)Z a
	isInstantenous ()Z a
	removeAttributeModifiers (Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/entity/ai/attributes/AttributeMap;I)V a
net/minecraft/world/effect/MobEffectCategory apq
	$VALUES e
	BENEFICIAL a
	HARMFUL b
	NEUTRAL c
	tooltipFormatting d
	getTooltipFormatting ()Lnet/minecraft/ChatFormatting; a
net/minecraft/world/effect/MobEffectInstance apr
	LOGGER a
	ambient f
	amplifier d
	duration c
	effect b
	hiddenEffect j
	noCounter g
	showIcon i
	splash e
	visible h
	applyEffect (Lnet/minecraft/world/entity/LivingEntity;)V a
	compareTo (Lnet/minecraft/world/effect/MobEffectInstance;)I c
	getAmplifier ()I c
	getDescriptionId ()Ljava/lang/String; g
	getDuration ()I b
	getEffect ()Lnet/minecraft/world/effect/MobEffect; a
	isAmbient ()Z d
	isNoCounter ()Z h
	isVisible ()Z e
	load (Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/world/effect/MobEffectInstance; b
	loadSpecifiedEffect (Lnet/minecraft/world/effect/MobEffect;Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/world/effect/MobEffectInstance; a
	save (Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/nbt/CompoundTag; a
	setDetailsFrom (Lnet/minecraft/world/effect/MobEffectInstance;)V a
	setNoCounter (Z)V b
	setSplash (Z)V a
	showIcon ()Z f
	tick (Lnet/minecraft/world/entity/LivingEntity;Ljava/lang/Runnable;)Z a
	tickDownDuration ()I i
	update (Lnet/minecraft/world/effect/MobEffectInstance;)Z b
	writeDetailsTo (Lnet/minecraft/nbt/CompoundTag;)V c
net/minecraft/world/effect/MobEffectUtil aps
	formatDuration (Lnet/minecraft/world/effect/MobEffectInstance;F)Ljava/lang/String; a
	getDigSpeedAmplification (Lnet/minecraft/world/entity/LivingEntity;)I b
	hasDigSpeed (Lnet/minecraft/world/entity/LivingEntity;)Z a
	hasWaterBreathing (Lnet/minecraft/world/entity/LivingEntity;)Z c
net/minecraft/world/effect/MobEffects apt
	ABSORPTION v
	BAD_OMEN E
	BLINDNESS o
	CONDUIT_POWER C
	CONFUSION i
	DAMAGE_BOOST e
	DAMAGE_RESISTANCE k
	DIG_SLOWDOWN d
	DIG_SPEED c
	DOLPHINS_GRACE D
	FIRE_RESISTANCE l
	GLOWING x
	HARM g
	HEAL f
	HEALTH_BOOST u
	HERO_OF_THE_VILLAGE F
	HUNGER q
	INVISIBILITY n
	JUMP h
	LEVITATION y
	LUCK z
	MOVEMENT_SLOWDOWN b
	MOVEMENT_SPEED a
	NIGHT_VISION p
	POISON s
	REGENERATION j
	SATURATION w
	SLOW_FALLING B
	UNLUCK A
	WATER_BREATHING m
	WEAKNESS r
	WITHER t
	register (ILjava/lang/String;Lnet/minecraft/world/effect/MobEffect;)Lnet/minecraft/world/effect/MobEffect; a
net/minecraft/world/entity/AgableMob apv
	DATA_BABY_ID bo
	age b
	forcedAge c
	forcedAgeTimer d
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	ageBoundaryReached ()V m
	ageUp (I)V a
	ageUp (IZ)V a
	aiStep ()V k
	canBreed ()Z f
	defineSynchedData ()V e
	finalizeSpawn (Lnet/minecraft/world/level/ServerLevelAccessor;Lnet/minecraft/world/DifficultyInstance;Lnet/minecraft/world/entity/MobSpawnType;Lnet/minecraft/world/entity/SpawnGroupData;Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/world/entity/SpawnGroupData; a
	getAge ()I i
	getBreedOffspring (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/AgableMob;)Lnet/minecraft/world/entity/AgableMob; a
	isBaby ()Z w_
	onSyncedDataUpdated (Lnet/minecraft/network/syncher/EntityDataAccessor;)V a
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	setAge (I)V c_
	setBaby (Z)V a
net/minecraft/world/entity/AgableMob$AgableMobGroupData apv$a
	babySpawnChance c
	groupSize a
	shouldSpawnBaby b
	getBabySpawnChance ()F d
	getGroupSize ()I a
	increaseGroupSizeByOne ()V b
	isShouldSpawnBaby ()Z c
net/minecraft/world/entity/AreaEffectCloud apw
	DATA_COLOR d
	DATA_PARTICLE f
	DATA_RADIUS c
	DATA_WAITING e
	LOGGER b
	duration ai
	durationOnUse am
	effects ag
	fixedColor al
	owner ap
	ownerUUID aq
	potion g
	radiusOnUse an
	radiusPerTick ao
	reapplicationDelay ak
	victims ah
	waitTime aj
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	addEffect (Lnet/minecraft/world/effect/MobEffectInstance;)V a
	canUse ()Z s
	defineSynchedData ()V e
	getAddEntityPacket ()Lnet/minecraft/network/protocol/Packet; P
	getColor ()I h
	getDimensions (Lnet/minecraft/world/entity/Pose;)Lnet/minecraft/world/entity/EntityDimensions; a
	getDuration ()I m
	getDurationOnUse ()I p
	getEffects ()Ljava/util/List; v
	getOwner ()Lnet/minecraft/world/entity/LivingEntity; t
	getParticle ()Lnet/minecraft/core/particles/ParticleOptions; i
	getPistonPushReaction ()Lnet/minecraft/world/level/material/PushReaction; y_
	getPotion ()Lnet/minecraft/world/item/alchemy/Potion; u
	getRadius ()F g
	getRadiusOnUse ()F n
	getRadiusPerTick ()F o
	getWaitTime ()I q
	isWaiting ()Z k
	onSyncedDataUpdated (Lnet/minecraft/network/syncher/EntityDataAccessor;)V a
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	refreshDimensions ()V x_
	setDuration (I)V b
	setDurationOnUse (I)V c
	setFixedColor (I)V a
	setOwner (Lnet/minecraft/world/entity/LivingEntity;)V a
	setParticle (Lnet/minecraft/core/particles/ParticleOptions;)V a
	setPotion (Lnet/minecraft/world/item/alchemy/Potion;)V a
	setRadius (F)V a
	setRadiusOnUse (F)V b
	setRadiusPerTick (F)V c
	setWaitTime (I)V d
	setWaiting (Z)V a
	tick ()V j
	updateColor ()V x
	use ()V r
net/minecraft/world/entity/Entity apx
	DATA_AIR_SUPPLY_ID ap
	DATA_CUSTOM_NAME aq
	DATA_CUSTOM_NAME_VISIBLE ar
	DATA_NO_GRAVITY at
	DATA_POSE T
	DATA_SHARED_FLAGS_ID S
	DATA_SILENT as
	EMPTY_LIST c
	ENTITY_COUNTER b
	INITIAL_AABB d
	LOGGER h
	bb al
	blockPosition aj
	blocksBuilding i
	boardingCooldown j
	deltaMovement ak
	dimensions aC
	entityData R
	eyeHeight aD
	fallDistance C
	firstTick Q
	fluidHeight M
	fluidOnEyes O
	forceChunkAddition az
	forcedLoading k
	glowing af
	hasImpulse Z
	horizontalCollision u
	hurtMarked w
	id g
	inChunk U
	invulnerable ax
	invulnerableTime P
	isInsidePortal aa
	level l
	maxUpStep G
	moveDist B
	movedSinceLastChunkCheck au
	nextFlap an
	nextStep am
	noCulling Y
	noPhysics H
	onGround t
	packetCoordinates av
	passengers ag
	pistonDeltas aA
	pistonDeltasGameTime aB
	portalCooldown aw
	portalEntrancePos ac
	portalTime ab
	position ai
	pushthrough I
	random J
	remainingFireTicks ao
	removed y
	stringUUID ae
	stuckSpeedMultiplier x
	tags ay
	tickCount K
	type f
	uuid ad
	vehicle ah
	verticalCollision v
	viewScale e
	walkDist A
	walkDistO z
	wasEyeInWater N
	wasTouchingWater L
	xChunk V
	xOld D
	xRot q
	xRotO s
	xo m
	yChunk W
	yOld E
	yRot p
	yRotO r
	yo n
	zChunk X
	zOld F
	zo o
	absMoveTo (DDD)V f
	absMoveTo (DDDFF)V a
	acceptsFailure ()Z b
	acceptsSuccess ()Z a
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	addPassenger (Lnet/minecraft/world/entity/Entity;)V o
	addTag (Ljava/lang/String;)Z a
	animateHurt ()V bl
	applyPistonMovementRestriction (Lnet/minecraft/core/Direction$Axis;D)D a
	awardKillScore (Lnet/minecraft/world/entity/Entity;ILnet/minecraft/world/damagesource/DamageSource;)V a
	baseTick ()V af
	blockPosition ()Lnet/minecraft/core/BlockPos; cA
	broadcastToPlayer (Lnet/minecraft/server/level/ServerPlayer;)Z a
	burn (I)V h
	calculateUpVector (FF)Lnet/minecraft/world/phys/Vec3; d
	calculateViewVector (FF)Lnet/minecraft/world/phys/Vec3; c
	canAddPassenger (Lnet/minecraft/world/entity/Entity;)Z q
	canBeCollidedWith ()Z aY
	canChangeDimensions ()Z bN
	canCollideWith (Lnet/minecraft/world/entity/Entity;)Z j
	canEnterPose (Lnet/minecraft/world/entity/Pose;)Z c
	canRide (Lnet/minecraft/world/entity/Entity;)Z n
	canSpawnSprintParticle ()Z aN
	causeFallDamage (FF)Z b
	changeDimension (Lnet/minecraft/server/level/ServerLevel;)Lnet/minecraft/world/entity/Entity; b
	checkAndResetForcedChunkAdditionFlag ()Z cj
	checkAndResetUpdateChunkPos ()Z ck
	checkDespawn ()V cH
	checkFallDamage (DZLnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/BlockPos;)V a
	checkInsideBlocks ()V ax
	clearFire ()V al
	closerThan (Lnet/minecraft/world/entity/Entity;D)Z a
	collide (Lnet/minecraft/world/phys/Vec3;)Lnet/minecraft/world/phys/Vec3; g
	collideBoundingBox (Lnet/minecraft/world/phys/Vec3;Lnet/minecraft/world/phys/AABB;Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/world/phys/shapes/CollisionContext;Lnet/minecraft/util/RewindableStream;)Lnet/minecraft/world/phys/Vec3; a
	collideBoundingBoxHeuristically (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/phys/Vec3;Lnet/minecraft/world/phys/AABB;Lnet/minecraft/world/level/Level;Lnet/minecraft/world/phys/shapes/CollisionContext;Lnet/minecraft/util/RewindableStream;)Lnet/minecraft/world/phys/Vec3; a
	collideBoundingBoxLegacy (Lnet/minecraft/world/phys/Vec3;Lnet/minecraft/world/phys/AABB;Lnet/minecraft/util/RewindableStream;)Lnet/minecraft/world/phys/Vec3; a
	copyPosition (Lnet/minecraft/world/entity/Entity;)V u
	createCommandSourceStack ()Lnet/minecraft/commands/CommandSourceStack; cv
	createHoverEvent ()Lnet/minecraft/network/chat/HoverEvent; ca
	defineSynchedData ()V e
	displayFireAnimation ()Z bQ
	distanceTo (Lnet/minecraft/world/entity/Entity;)F g
	distanceToSqr (DDD)D h
	distanceToSqr (Lnet/minecraft/world/entity/Entity;)D h
	distanceToSqr (Lnet/minecraft/world/phys/Vec3;)D e
	doEnchantDamageEffects (Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/entity/Entity;)V a
	doWaterSplashEffect ()V aL
	ejectPassengers ()V bd
	fillCrashReportCategory (Lnet/minecraft/CrashReportCategory;)V a
	fillIndirectPassengers (ZLjava/util/Set;)V a
	findDimensionEntryPoint (Lnet/minecraft/server/level/ServerLevel;)Lnet/minecraft/world/level/portal/PortalInfo; a
	fireImmune ()Z aC
	getAddEntityPacket ()Lnet/minecraft/network/protocol/Packet; P
	getAirSupply ()I bH
	getAllSlots ()Ljava/lang/Iterable; bo
	getArmorSlots ()Ljava/lang/Iterable; bn
	getBbHeight ()F cy
	getBbWidth ()F cx
	getBlockExplosionResistance (Lnet/minecraft/world/level/Explosion;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/material/FluidState;F)F a
	getBlockJumpFactor ()F ap
	getBlockPosBelowThatAffectsMyMovement ()Lnet/minecraft/core/BlockPos; ar
	getBlockSpeedFactor ()F aq
	getBlockStateOn ()Lnet/minecraft/world/level/block/state/BlockState; aM
	getBoundingBox ()Lnet/minecraft/world/phys/AABB; cb
	getBoundingBoxForCulling ()Lnet/minecraft/world/phys/AABB; cc
	getBoundingBoxForPose (Lnet/minecraft/world/entity/Pose;)Lnet/minecraft/world/phys/AABB; d
	getBrightness ()F aQ
	getCollisionHorizontalEscapeVector (DDF)Lnet/minecraft/world/phys/Vec3; a
	getCommandSenderWorld ()Lnet/minecraft/world/level/Level; cf
	getControllingPassenger ()Lnet/minecraft/world/entity/Entity; cl
	getCustomName ()Lnet/minecraft/network/chat/Component; S
	getDeltaMovement ()Lnet/minecraft/world/phys/Vec3; cB
	getDimensionChangingDelay ()I bk
	getDimensions (Lnet/minecraft/world/entity/Pose;)Lnet/minecraft/world/entity/EntityDimensions; a
	getDirection ()Lnet/minecraft/core/Direction; bY
	getDismountLocationForPassenger (Lnet/minecraft/world/entity/LivingEntity;)Lnet/minecraft/world/phys/Vec3; b
	getDisplayName ()Lnet/minecraft/network/chat/Component; d
	getEncodeId ()Ljava/lang/String; aV
	getEntityData ()Lnet/minecraft/network/syncher/SynchedEntityData; aa
	getExitPortal (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Z)Ljava/util/Optional; a
	getEyeHeight ()F cd
	getEyeHeight (Lnet/minecraft/world/entity/Pose;)F e
	getEyeHeight (Lnet/minecraft/world/entity/Pose;Lnet/minecraft/world/entity/EntityDimensions;)F a
	getEyePosition (F)Lnet/minecraft/world/phys/Vec3; j
	getEyeY ()D cF
	getFireImmuneTicks ()I cu
	getFluidHeight (Lnet/minecraft/tags/Tag;)D b
	getFluidJumpThreshold ()D cw
	getForward ()Lnet/minecraft/world/phys/Vec3; bi
	getHandSlots ()Ljava/lang/Iterable; bm
	getHorizontalDistanceSqr (Lnet/minecraft/world/phys/Vec3;)D c
	getId ()I X
	getIndirectPassengers ()Ljava/util/Collection; cn
	getInputVector (Lnet/minecraft/world/phys/Vec3;FF)Lnet/minecraft/world/phys/Vec3; a
	getLeashOffset ()Lnet/minecraft/world/phys/Vec3; ce
	getLightProbePosition (F)Lnet/minecraft/world/phys/Vec3; k
	getLookAngle ()Lnet/minecraft/world/phys/Vec3; bg
	getMaxAirSupply ()I bG
	getMaxFallDistance ()I bO
	getMotionDirection ()Lnet/minecraft/core/Direction; bZ
	getMyRidingOffset ()D ba
	getName ()Lnet/minecraft/network/chat/Component; Q
	getOnPos ()Lnet/minecraft/core/BlockPos; ao
	getPacketCoordinates ()Lnet/minecraft/world/phys/Vec3; V
	getPassengers ()Ljava/util/List; cm
	getPassengersRidingOffset ()D bb
	getPermissionLevel ()I y
	getPickRadius ()F bf
	getPistonPushReaction ()Lnet/minecraft/world/level/material/PushReaction; y_
	getPortalWaitTime ()I ai
	getPose ()Lnet/minecraft/world/entity/Pose; ad
	getPosition (F)Lnet/minecraft/world/phys/Vec3; l
	getRandomX (D)D d
	getRandomY ()D cE
	getRandomZ (D)D g
	getRelativePortalPosition (Lnet/minecraft/core/Direction$Axis;Lnet/minecraft/BlockUtil$FoundRectangle;)Lnet/minecraft/world/phys/Vec3; a
	getRemainingFireTicks ()I ak
	getRootVehicle ()Lnet/minecraft/world/entity/Entity; cq
	getRopeHoldPosition (F)Lnet/minecraft/world/phys/Vec3; o
	getRotationVector ()Lnet/minecraft/world/phys/Vec2; bh
	getScoreboardName ()Ljava/lang/String; bT
	getSelfAndPassengers ()Ljava/util/stream/Stream; co
	getServer ()Lnet/minecraft/server/MinecraftServer; cg
	getSharedFlag (I)Z i
	getSoundSource ()Lnet/minecraft/sounds/SoundSource; ct
	getStringUUID ()Ljava/lang/String; bS
	getSwimHighSpeedSplashSound ()Lnet/minecraft/sounds/SoundEvent; aw
	getSwimSound ()Lnet/minecraft/sounds/SoundEvent; au
	getSwimSplashSound ()Lnet/minecraft/sounds/SoundEvent; av
	getTags ()Ljava/util/Set; Y
	getTeam ()Lnet/minecraft/world/scores/Team; bF
	getTeamColor ()I T
	getType ()Lnet/minecraft/world/entity/EntityType; W
	getTypeName ()Lnet/minecraft/network/chat/Component; bI
	getUUID ()Ljava/util/UUID; bR
	getUpVector (F)Lnet/minecraft/world/phys/Vec3; i
	getVehicle ()Lnet/minecraft/world/entity/Entity; cs
	getViewScale ()D bV
	getViewVector (F)Lnet/minecraft/world/phys/Vec3; f
	getViewXRot (F)F g
	getViewYRot (F)F h
	getX ()D cC
	getX (D)D c
	getY ()D cD
	getY (D)D e
	getYHeadRot ()F bJ
	getZ ()D cG
	getZ (D)D f
	handleEntityEvent (B)V a
	handleInsidePortal (Lnet/minecraft/core/BlockPos;)V d
	handleNetherPortal ()V bj
	hasCustomName ()Z R
	hasIndirectPassenger (Lnet/minecraft/world/entity/Entity;)Z y
	hasOnePlayerPassenger ()Z cp
	hasPassenger (Ljava/lang/Class;)Z a
	hasPassenger (Lnet/minecraft/world/entity/Entity;)Z w
	hasPermissions (I)Z k
	hurt (Lnet/minecraft/world/damagesource/DamageSource;F)Z a
	ignoreExplosion ()Z ch
	interact (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResult; a
	interactAt (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/phys/Vec3;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResult; a
	is (Lnet/minecraft/world/entity/Entity;)Z s
	isAlive ()Z aW
	isAlliedTo (Lnet/minecraft/world/entity/Entity;)Z r
	isAlliedTo (Lnet/minecraft/world/scores/Team;)Z a
	isAttackable ()Z bK
	isColliding (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Z a
	isControlledByLocalInstance ()Z cr
	isCrouching ()Z by
	isCustomNameVisible ()Z bW
	isDescending ()Z bx
	isDiscrete ()Z bw
	isEyeInFluid (Lnet/minecraft/tags/Tag;)Z a
	isFree (DDD)Z e
	isFree (Lnet/minecraft/world/phys/AABB;)Z b
	isGlowing ()Z bD
	isIgnoringBlockTriggers ()Z bP
	isInBubbleColumn ()Z k
	isInLava ()Z aP
	isInRain ()Z i
	isInWall ()Z aX
	isInWater ()Z aD
	isInWaterOrBubble ()Z aG
	isInWaterOrRain ()Z aE
	isInWaterRainOrBubble ()Z aF
	isInvisible ()Z bE
	isInvisibleTo (Lnet/minecraft/world/entity/player/Player;)Z c
	isInvulnerable ()Z bL
	isInvulnerableTo (Lnet/minecraft/world/damagesource/DamageSource;)Z b
	isMovementNoisy ()Z aB
	isNoGravity ()Z aA
	isOnFire ()Z bp
	isOnGround ()Z an
	isOnPortalCooldown ()Z ah
	isPassenger ()Z bq
	isPassengerOfSameVehicle (Lnet/minecraft/world/entity/Entity;)Z x
	isPickable ()Z aS
	isPushable ()Z aT
	isPushedByFluid ()Z bU
	isShiftKeyDown ()Z bt
	isSilent ()Z az
	isSpectator ()Z a_
	isSprinting ()Z bz
	isSteppingCarefully ()Z bu
	isSuppressingBounce ()Z bv
	isSwimming ()Z bA
	isUnderWater ()Z aH
	isVehicle ()Z br
	isVisuallyCrawling ()Z bC
	isVisuallySwimming ()Z bB
	kill ()V Z
	killed (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)V a
	lavaHurt ()V aj
	lerpHeadTo (FI)V a
	lerpMotion (DDD)V k
	lerpTo (DDDFFIZ)V a
	limitPistonMovement (Lnet/minecraft/world/phys/Vec3;)Lnet/minecraft/world/phys/Vec3; b
	load (Lnet/minecraft/nbt/CompoundTag;)V f
	lookAt (Lnet/minecraft/commands/arguments/EntityAnchorArgument$Anchor;Lnet/minecraft/world/phys/Vec3;)V a
	makeFlySound ()Z ay
	makeStuckInBlock (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/phys/Vec3;)V a
	markHurt ()V aR
	maybeBackOffFromEdge (Lnet/minecraft/world/phys/Vec3;Lnet/minecraft/world/entity/MoverType;)Lnet/minecraft/world/phys/Vec3; a
	mirror (Lnet/minecraft/world/level/block/Mirror;)F a
	move (Lnet/minecraft/world/entity/MoverType;Lnet/minecraft/world/phys/Vec3;)V a
	moveRelative (FLnet/minecraft/world/phys/Vec3;)V a
	moveTo (DDD)V b
	moveTo (DDDFF)V b
	moveTo (Lnet/minecraft/core/BlockPos;FF)V a
	moveTo (Lnet/minecraft/world/phys/Vec3;)V d
	moveTowardsClosestSpace (DDD)V l
	newDoubleList ([D)Lnet/minecraft/nbt/ListTag; a
	newFloatList ([F)Lnet/minecraft/nbt/ListTag; a
	nextStep ()F as
	onAboveBubbleCol (Z)V k
	onInsideBlock (Lnet/minecraft/world/level/block/state/BlockState;)V a
	onInsideBubbleColumn (Z)V l
	onPassengerTurned (Lnet/minecraft/world/entity/Entity;)V l
	onSyncedDataUpdated (Lnet/minecraft/network/syncher/EntityDataAccessor;)V a
	onlyOpCanSetNbt ()Z ci
	outOfWorld ()V am
	pick (DFZ)Lnet/minecraft/world/phys/HitResult; a
	playFlySound (F)F e
	playSound (Lnet/minecraft/sounds/SoundEvent;FF)V a
	playStepSound (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V b
	playSwimSound (F)V d
	playerTouch (Lnet/minecraft/world/entity/player/Player;)V a_
	position ()Lnet/minecraft/world/phys/Vec3; cz
	positionRider (Lnet/minecraft/world/entity/Entity;)V k
	positionRider (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/entity/Entity$MoveFunction;)V a
	processPortalCooldown ()V E
	push (DDD)V i
	push (Lnet/minecraft/world/entity/Entity;)V i
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	reapplyPosition ()V ae
	refreshDimensions ()V x_
	remove ()V ac
	removeAction (Lnet/minecraft/network/chat/Component;)Lnet/minecraft/network/chat/Component; b
	removeAfterChangingDimensions ()V bM
	removePassenger (Lnet/minecraft/world/entity/Entity;)V p
	removeTag (Ljava/lang/String;)Z b
	removeVehicle ()V be
	repositionEntityAfterLoad ()Z aU
	resetPos ()V ab
	restoreFrom (Lnet/minecraft/world/entity/Entity;)V v
	rideTick ()V aZ
	rideableUnderWater ()Z bs
	rotate (Lnet/minecraft/world/level/block/Rotation;)F a
	save (Lnet/minecraft/nbt/CompoundTag;)Z d
	saveAsPassenger (Lnet/minecraft/nbt/CompoundTag;)Z a_
	saveWithoutId (Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/nbt/CompoundTag; e
	sendMessage (Lnet/minecraft/network/chat/Component;Ljava/util/UUID;)V a
	setAirSupply (I)V j
	setBoundingBox (Lnet/minecraft/world/phys/AABB;)V a
	setCustomName (Lnet/minecraft/network/chat/Component;)V a
	setCustomNameVisible (Z)V n
	setDeltaMovement (DDD)V n
	setDeltaMovement (Lnet/minecraft/world/phys/Vec3;)V f
	setDropContainerContent (Z)V a_
	setGlowing (Z)V i
	setId (I)V e
	setInvisible (Z)V j
	setInvulnerable (Z)V m
	setItemSlot (Lnet/minecraft/world/entity/EquipmentSlot;Lnet/minecraft/world/item/ItemStack;)V a
	setLevel (Lnet/minecraft/world/level/Level;)V a_
	setLocationFromBoundingbox ()V at
	setNoGravity (Z)V e
	setOnGround (Z)V c
	setPacketCoordinates (DDD)V c
	setPacketCoordinates (Lnet/minecraft/world/phys/Vec3;)V a
	setPortalCooldown ()V ag
	setPos (DDD)V d
	setPosAndOldPos (DDD)V g
	setPosRaw (DDD)V o
	setPose (Lnet/minecraft/world/entity/Pose;)V b
	setRemainingFireTicks (I)V g
	setRot (FF)V a
	setSecondsOnFire (I)V f
	setSharedFlag (IZ)V b
	setShiftKeyDown (Z)V f
	setSilent (Z)V d
	setSlot (ILnet/minecraft/world/item/ItemStack;)Z a_
	setSprinting (Z)V g
	setSwimming (Z)V h
	setUUID (Ljava/util/UUID;)V a_
	setViewScale (D)V b
	setYBodyRot (F)V n
	setYHeadRot (F)V m
	shouldBlockExplode (Lnet/minecraft/world/level/Explosion;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;F)Z a
	shouldInformAdmins ()Z R_
	shouldRender (DDD)Z j
	shouldRenderAtSqrDistance (D)Z a
	shouldShowName ()Z bX
	showVehicleHealth ()Z bc
	skipAttackInteraction (Lnet/minecraft/world/entity/Entity;)Z t
	spawnAtLocation (Lnet/minecraft/world/item/ItemStack;)Lnet/minecraft/world/entity/item/ItemEntity; a
	spawnAtLocation (Lnet/minecraft/world/item/ItemStack;F)Lnet/minecraft/world/entity/item/ItemEntity; a
	spawnAtLocation (Lnet/minecraft/world/level/ItemLike;)Lnet/minecraft/world/entity/item/ItemEntity; a
	spawnAtLocation (Lnet/minecraft/world/level/ItemLike;I)Lnet/minecraft/world/entity/item/ItemEntity; a
	spawnSprintParticle ()V aO
	startRiding (Lnet/minecraft/world/entity/Entity;)Z m
	startRiding (Lnet/minecraft/world/entity/Entity;Z)Z a
	startSeenByPlayer (Lnet/minecraft/server/level/ServerPlayer;)V b
	stopRiding ()V l
	stopSeenByPlayer (Lnet/minecraft/server/level/ServerPlayer;)V c
	teleportTo (DDD)V a
	teleportToWithTicket (DDD)V m
	thunderHit (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LightningBolt;)V a
	tick ()V j
	turn (DD)V a
	unRide ()V U
	updateFluidHeightAndDoFluidPushing (Lnet/minecraft/tags/Tag;D)Z a
	updateFluidOnEyes ()V m
	updateInWaterStateAndDoFluidPushing ()Z aJ
	updateInWaterStateAndDoWaterCurrentPushing ()V aK
	updateSwimming ()V aI
net/minecraft/world/entity/Entity$MoveFunction apx$a
net/minecraft/world/entity/EntityDimensions apy
	fixed c
	height b
	width a
	fixed (FF)Lnet/minecraft/world/entity/EntityDimensions; c
	makeBoundingBox (DDD)Lnet/minecraft/world/phys/AABB; a
	makeBoundingBox (Lnet/minecraft/world/phys/Vec3;)Lnet/minecraft/world/phys/AABB; a
	scalable (FF)Lnet/minecraft/world/entity/EntityDimensions; b
	scale (F)Lnet/minecraft/world/entity/EntityDimensions; a
	scale (FF)Lnet/minecraft/world/entity/EntityDimensions; a
net/minecraft/world/entity/EntityEvent apz
net/minecraft/world/entity/EntitySelector aqa
	ATTACK_ALLOWED f
	CONTAINER_ENTITY_SELECTOR d
	ENTITY_NOT_BEING_RIDDEN c
	ENTITY_STILL_ALIVE a
	LIVING_ENTITY_STILL_ALIVE b
	NO_CREATIVE_OR_SPECTATOR e
	NO_SPECTATORS g
	notRiding (Lnet/minecraft/world/entity/Entity;)Ljava/util/function/Predicate; b
	pushableBy (Lnet/minecraft/world/entity/Entity;)Ljava/util/function/Predicate; a
	withinDistance (DDDD)Ljava/util/function/Predicate; a
net/minecraft/world/entity/EntitySelector$MobCanWearArmorEntitySelector aqa$a
	itemStack a
	test (Lnet/minecraft/world/entity/Entity;)Z a
net/minecraft/world/entity/EntityType aqb
	AREA_EFFECT_CLOUD a
	ARMOR_STAND b
	ARROW c
	BAT d
	BEE e
	BLAZE f
	BOAT g
	CAT h
	CAVE_SPIDER i
	CHEST_MINECART U
	CHICKEN j
	COD k
	COMMAND_BLOCK_MINECART V
	COW l
	CREEPER m
	DOLPHIN n
	DONKEY o
	DRAGON_FIREBALL p
	DROWNED q
	EGG aG
	ELDER_GUARDIAN r
	ENDERMAN u
	ENDERMITE v
	ENDER_DRAGON t
	ENDER_PEARL aH
	END_CRYSTAL s
	EVOKER w
	EVOKER_FANGS x
	EXPERIENCE_BOTTLE aI
	EXPERIENCE_ORB y
	EYE_OF_ENDER z
	FALLING_BLOCK A
	FIREBALL N
	FIREWORK_ROCKET B
	FISHING_BOBBER bd
	FOX C
	FURNACE_MINECART W
	GHAST D
	GIANT E
	GUARDIAN F
	HOGLIN G
	HOPPER_MINECART X
	HORSE H
	HUSK I
	ILLUSIONER J
	IRON_GOLEM K
	ITEM L
	ITEM_FRAME M
	LEASH_KNOT O
	LIGHTNING_BOLT P
	LLAMA Q
	LLAMA_SPIT R
	LOGGER be
	MAGMA_CUBE S
	MINECART T
	MOOSHROOM ab
	MULE aa
	OCELOT ac
	PAINTING ad
	PANDA ae
	PARROT af
	PHANTOM ag
	PIG ah
	PIGLIN ai
	PIGLIN_BRUTE aj
	PILLAGER ak
	PLAYER bc
	POLAR_BEAR al
	POTION aJ
	PUFFERFISH an
	RABBIT ao
	RAVAGER ap
	SALMON aq
	SHEEP ar
	SHULKER as
	SHULKER_BULLET at
	SILVERFISH au
	SKELETON av
	SKELETON_HORSE aw
	SLIME ax
	SMALL_FIREBALL ay
	SNOWBALL aA
	SNOW_GOLEM az
	SPAWNER_MINECART Y
	SPECTRAL_ARROW aB
	SPIDER aC
	SQUID aD
	STRAY aE
	STRIDER aF
	TNT am
	TNT_MINECART Z
	TRADER_LLAMA aL
	TRIDENT aK
	TROPICAL_FISH aM
	TURTLE aN
	VEX aO
	VILLAGER aP
	VINDICATOR aQ
	WANDERING_TRADER aR
	WITCH aS
	WITHER aT
	WITHER_SKELETON aU
	WITHER_SKULL aV
	WOLF aW
	ZOGLIN aX
	ZOMBIE aY
	ZOMBIE_HORSE aZ
	ZOMBIE_VILLAGER ba
	ZOMBIFIED_PIGLIN bb
	canSpawnFarFromPlayer bl
	category bg
	clientTrackingRange bm
	description bp
	descriptionId bo
	dimensions br
	factory bf
	fireImmune bk
	immuneTo bh
	lootTable bq
	serialize bi
	summon bj
	updateInterval bn
	by (Lnet/minecraft/nbt/CompoundTag;)Ljava/util/Optional; a
	byString (Ljava/lang/String;)Ljava/util/Optional; a
	canSerialize ()Z a
	canSpawnFarFromPlayer ()Z d
	canSummon ()Z b
	clientTrackingRange ()I m
	create (ILnet/minecraft/world/level/Level;)Lnet/minecraft/world/entity/Entity; a
	create (Lnet/minecraft/nbt/CompoundTag;Lnet/minecraft/world/level/Level;)Ljava/util/Optional; a
	create (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/nbt/CompoundTag;Lnet/minecraft/network/chat/Component;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/MobSpawnType;ZZ)Lnet/minecraft/world/entity/Entity; b
	create (Lnet/minecraft/world/level/Level;)Lnet/minecraft/world/entity/Entity; a
	create (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/EntityType;)Lnet/minecraft/world/entity/Entity; a
	fireImmune ()Z c
	getAABB (DDD)Lnet/minecraft/world/phys/AABB; a
	getCategory ()Lnet/minecraft/world/entity/MobCategory; e
	getDefaultLootTable ()Lnet/minecraft/resources/ResourceLocation; i
	getDescription ()Lnet/minecraft/network/chat/Component; g
	getDescriptionId ()Ljava/lang/String; f
	getDimensions ()Lnet/minecraft/world/entity/EntityDimensions; l
	getHeight ()F k
	getKey (Lnet/minecraft/world/entity/EntityType;)Lnet/minecraft/resources/ResourceLocation; a
	getWidth ()F j
	getYOffset (Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;ZLnet/minecraft/world/phys/AABB;)D a
	is (Lnet/minecraft/tags/Tag;)Z a
	isBlockDangerous (Lnet/minecraft/world/level/block/state/BlockState;)Z a
	loadEntityRecursive (Lnet/minecraft/nbt/CompoundTag;Lnet/minecraft/world/level/Level;Ljava/util/function/Function;)Lnet/minecraft/world/entity/Entity; a
	loadStaticEntity (Lnet/minecraft/nbt/CompoundTag;Lnet/minecraft/world/level/Level;)Ljava/util/Optional; b
	register (Ljava/lang/String;Lnet/minecraft/world/entity/EntityType$Builder;)Lnet/minecraft/world/entity/EntityType; a
	spawn (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/nbt/CompoundTag;Lnet/minecraft/network/chat/Component;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/MobSpawnType;ZZ)Lnet/minecraft/world/entity/Entity; a
	spawn (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/MobSpawnType;ZZ)Lnet/minecraft/world/entity/Entity; a
	toShortString ()Ljava/lang/String; h
	trackDeltas ()Z o
	updateCustomEntityTag (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/entity/Entity;Lnet/minecraft/nbt/CompoundTag;)V a
	updateInterval ()I n
net/minecraft/world/entity/EntityType$Builder aqb$a
	canSpawnFarFromPlayer g
	category b
	clientTrackingRange h
	dimensions j
	factory a
	fireImmune f
	immuneTo c
	serialize d
	summon e
	updateInterval i
	build (Ljava/lang/String;)Lnet/minecraft/world/entity/EntityType; a
	canSpawnFarFromPlayer ()Lnet/minecraft/world/entity/EntityType$Builder; d
	clientTrackingRange (I)Lnet/minecraft/world/entity/EntityType$Builder; a
	createNothing (Lnet/minecraft/world/entity/MobCategory;)Lnet/minecraft/world/entity/EntityType$Builder; a
	fireImmune ()Lnet/minecraft/world/entity/EntityType$Builder; c
	immuneTo ([Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/world/entity/EntityType$Builder; a
	noSave ()Lnet/minecraft/world/entity/EntityType$Builder; b
	noSummon ()Lnet/minecraft/world/entity/EntityType$Builder; a
	of (Lnet/minecraft/world/entity/EntityType$EntityFactory;Lnet/minecraft/world/entity/MobCategory;)Lnet/minecraft/world/entity/EntityType$Builder; a
	sized (FF)Lnet/minecraft/world/entity/EntityType$Builder; a
	updateInterval (I)Lnet/minecraft/world/entity/EntityType$Builder; b
net/minecraft/world/entity/EntityType$EntityFactory aqb$b
net/minecraft/world/entity/EquipmentSlot aqc
	$VALUES k
	CHEST e
	FEET c
	HEAD f
	LEGS d
	MAINHAND a
	OFFHAND b
	filterFlag i
	index h
	name j
	type g
	byName (Ljava/lang/String;)Lnet/minecraft/world/entity/EquipmentSlot; a
	byTypeAndIndex (Lnet/minecraft/world/entity/EquipmentSlot$Type;I)Lnet/minecraft/world/entity/EquipmentSlot; a
	getFilterFlag ()I c
	getIndex ()I b
	getName ()Ljava/lang/String; d
	getType ()Lnet/minecraft/world/entity/EquipmentSlot$Type; a
net/minecraft/world/entity/EquipmentSlot$Type aqc$a
	$VALUES c
	ARMOR b
	HAND a
net/minecraft/world/entity/ExperienceOrb aqd
	age c
	followingPlayer g
	followingTime ag
	health e
	throwTime d
	tickCount b
	value f
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	burn (I)V h
	defineSynchedData ()V e
	doWaterSplashEffect ()V aL
	durabilityToXp (I)I b
	getAddEntityPacket ()Lnet/minecraft/network/protocol/Packet; P
	getExperienceValue (I)I a
	getIcon ()I h
	getValue ()I g
	hurt (Lnet/minecraft/world/damagesource/DamageSource;F)Z a
	isAttackable ()Z bK
	isMovementNoisy ()Z aB
	playerTouch (Lnet/minecraft/world/entity/player/Player;)V a_
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	setUnderwaterMovement ()V i
	tick ()V j
	xpToDurability (I)I c
net/minecraft/world/entity/FlyingMob aqe
	causeFallDamage (FF)Z b
	checkFallDamage (DZLnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/BlockPos;)V a
	onClimbable ()Z c_
	travel (Lnet/minecraft/world/phys/Vec3;)V g
net/minecraft/world/entity/HumanoidArm aqf
	$VALUES d
	LEFT a
	RIGHT b
	name c
	getName ()Lnet/minecraft/network/chat/Component; b
	getOpposite ()Lnet/minecraft/world/entity/HumanoidArm; a
net/minecraft/world/entity/ItemBasedSteering aqg
	boostTime b
	boostTimeAccessor e
	boostTimeTotal c
	boosting a
	entityData d
	hasSaddleAccessor f
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	boost (Ljava/util/Random;)Z a
	hasSaddle ()Z b
	onSynced ()V a
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	setSaddle (Z)V a
net/minecraft/world/entity/ItemSteerable aqh
	boost ()Z O_
	getSteeringSpeed ()F N_
	travel (Lnet/minecraft/world/entity/Mob;Lnet/minecraft/world/entity/ItemBasedSteering;Lnet/minecraft/world/phys/Vec3;)Z a
	travelWithInput (Lnet/minecraft/world/phys/Vec3;)V a_
net/minecraft/world/entity/LightningBolt aqi
	cause f
	flashes d
	life c
	seed b
	visualOnly e
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	defineSynchedData ()V e
	getAddEntityPacket ()Lnet/minecraft/network/protocol/Packet; P
	getCause ()Lnet/minecraft/server/level/ServerPlayer; g
	getSoundSource ()Lnet/minecraft/sounds/SoundSource; ct
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	setCause (Lnet/minecraft/server/level/ServerPlayer;)V d
	setVisualOnly (Z)V a
	shouldRenderAtSqrDistance (D)Z a
	spawnFire (I)V a
	tick ()V j
net/minecraft/world/entity/LivingEntity aqj
	DATA_ARROW_COUNT_ID bh
	DATA_EFFECT_AMBIENCE_ID g
	DATA_EFFECT_COLOR_ID f
	DATA_HEALTH_ID e
	DATA_LIVING_ENTITY_FLAGS ag
	DATA_STINGER_COUNT_ID bi
	SLEEPING_DIMENSIONS ah
	SLEEPING_POS_ID bj
	SPEED_MODIFIER_SOUL_SPEED_UUID c
	SPEED_MODIFIER_SPRINTING d
	SPEED_MODIFIER_SPRINTING_UUID b
	absorptionAmount bw
	activeEffects bm
	animStep aL
	animStepO aM
	animationPosition aw
	animationSpeed av
	animationSpeedOld au
	attackAnim as
	attackStrengthTicker at
	attributes bk
	autoSpinAttackTicks bf
	brain bg
	combatTracker bl
	dead aH
	deathScore aO
	deathTime aq
	effectsDirty bp
	fallFlyTicks be
	flyingSpeed aE
	hurtDir ap
	hurtDuration ao
	hurtTime an
	invulnerableDuration ax
	jumping aQ
	lastArmorItemStacks bo
	lastClimbablePos by
	lastDamageSource bz
	lastDamageStamp bA
	lastHandItemStacks bn
	lastHurt aP
	lastHurtByMob bq
	lastHurtByMobTimestamp br
	lastHurtByPlayer aF
	lastHurtByPlayerTime aG
	lastHurtMob bs
	lastHurtMobTimestamp bt
	lastPos bx
	lerpHeadSteps bb
	lerpSteps aU
	lerpX aV
	lerpXRot aZ
	lerpY aW
	lerpYRot aY
	lerpZ aX
	lyHeadRot ba
	noActionTime aI
	noJumpDelay bv
	oAttackAnim ar
	oRun aJ
	removeArrowTime al
	removeStingerTime am
	rotA az
	rotOffs aN
	run aK
	speed bu
	swimAmount bB
	swimAmountO bC
	swingTime ak
	swinging ai
	swingingArm aj
	timeOffs ay
	useItem bc
	useItemRemaining bd
	xxa aR
	yBodyRot aA
	yBodyRotO aB
	yHeadRot aC
	yHeadRotO aD
	yya aS
	zza aT
	actuallyHurt (Lnet/minecraft/world/damagesource/DamageSource;F)V e
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	addEatEffect (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/LivingEntity;)V a
	addEffect (Lnet/minecraft/world/effect/MobEffectInstance;)Z c
	aiStep ()V k
	animateHurt ()V bl
	areAllEffectsAmbient (Ljava/util/Collection;)Z c
	attackable ()Z eh
	baseTick ()V af
	blockUsingShield (Lnet/minecraft/world/entity/LivingEntity;)V d
	blockedByShield (Lnet/minecraft/world/entity/LivingEntity;)V e
	brainProvider ()Lnet/minecraft/world/entity/ai/Brain$Provider; cJ
	breakItem (Lnet/minecraft/world/item/ItemStack;)V g
	broadcastBreakEvent (Lnet/minecraft/world/InteractionHand;)V d
	broadcastBreakEvent (Lnet/minecraft/world/entity/EquipmentSlot;)V c
	calculateEntityAnimation (Lnet/minecraft/world/entity/LivingEntity;Z)V a
	calculateFallDamage (FF)I e
	canAttack (Lnet/minecraft/world/entity/LivingEntity;)Z c
	canAttack (Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/entity/ai/targeting/TargetingConditions;)Z a
	canAttackType (Lnet/minecraft/world/entity/EntityType;)Z a
	canBeAffected (Lnet/minecraft/world/effect/MobEffectInstance;)Z d
	canBreatheUnderwater ()Z cL
	canSee (Lnet/minecraft/world/entity/Entity;)Z D
	canSpawnSoulSpeedParticle ()Z cM
	canStandOnFluid (Lnet/minecraft/world/level/material/Fluid;)Z a
	canTakeItem (Lnet/minecraft/world/item/ItemStack;)Z e
	causeFallDamage (FF)Z b
	checkAutoSpinAttack (Lnet/minecraft/world/phys/AABB;Lnet/minecraft/world/phys/AABB;)V a
	checkBedExists ()Z x
	checkFallDamage (DZLnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/BlockPos;)V a
	checkTotemDeathProtection (Lnet/minecraft/world/damagesource/DamageSource;)Z f
	clearSleepingPos ()V ek
	collectEquipmentChanges ()Ljava/util/Map; q
	completeUsingItem ()V s
	createLivingAttributes ()Lnet/minecraft/world/entity/ai/attributes/AttributeSupplier$Builder; cK
	createLootContext (ZLnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/world/level/storage/loot/LootContext$Builder; a
	createWitherRose (Lnet/minecraft/world/entity/LivingEntity;)V f
	decreaseAirSupply (I)I l
	defineSynchedData ()V e
	detectEquipmentUpdates ()V p
	die (Lnet/minecraft/world/damagesource/DamageSource;)V a
	dismountVehicle (Lnet/minecraft/world/entity/Entity;)V a
	doAutoAttackOnTouch (Lnet/minecraft/world/entity/LivingEntity;)V g
	doHurtTarget (Lnet/minecraft/world/entity/Entity;)Z B
	doPush (Lnet/minecraft/world/entity/Entity;)V C
	dropAllDeathLoot (Lnet/minecraft/world/damagesource/DamageSource;)V d
	dropCustomDeathLoot (Lnet/minecraft/world/damagesource/DamageSource;IZ)V a
	dropEquipment ()V dm
	dropExperience ()V dn
	dropFromLootTable (Lnet/minecraft/world/damagesource/DamageSource;Z)V a
	eat (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/item/ItemStack;)Lnet/minecraft/world/item/ItemStack; a
	entityEventForEquipmentBreak (Lnet/minecraft/world/entity/EquipmentSlot;)B f
	forceAddEffect (Lnet/minecraft/world/effect/MobEffectInstance;)V e
	getAbsorptionAmount ()F dS
	getActiveEffects ()Ljava/util/Collection; dg
	getActiveEffectsMap ()Ljava/util/Map; dh
	getAddEntityPacket ()Lnet/minecraft/network/protocol/Packet; P
	getArmorCoverPercentage ()F dE
	getArmorSlots ()Ljava/lang/Iterable; bn
	getArmorValue ()I dt
	getArrowCount ()I dx
	getAttackAnim (F)F r
	getAttribute (Lnet/minecraft/world/entity/ai/attributes/Attribute;)Lnet/minecraft/world/entity/ai/attributes/AttributeInstance; a
	getAttributeBaseValue (Lnet/minecraft/world/entity/ai/attributes/Attribute;)D c
	getAttributeValue (Lnet/minecraft/world/entity/ai/attributes/Attribute;)D b
	getAttributes ()Lnet/minecraft/world/entity/ai/attributes/AttributeMap; dA
	getBedOrientation ()Lnet/minecraft/core/Direction; en
	getBlockSpeedFactor ()F aq
	getBoundingBoxForCulling ()Lnet/minecraft/world/phys/AABB; cc
	getBrain ()Lnet/minecraft/world/entity/ai/Brain; cI
	getCombatTracker ()Lnet/minecraft/world/damagesource/CombatTracker; du
	getCurrentSwingDuration ()I m
	getDamageAfterArmorAbsorb (Lnet/minecraft/world/damagesource/DamageSource;F)F c
	getDamageAfterMagicAbsorb (Lnet/minecraft/world/damagesource/DamageSource;F)F d
	getDeathSound ()Lnet/minecraft/sounds/SoundEvent; dp
	getDimensions (Lnet/minecraft/world/entity/Pose;)Lnet/minecraft/world/entity/EntityDimensions; a
	getDismountPoses ()Lcom/google/common/collect/ImmutableList; ei
	getDrinkingSound (Lnet/minecraft/world/item/ItemStack;)Lnet/minecraft/sounds/SoundEvent; c
	getEatingSound (Lnet/minecraft/world/item/ItemStack;)Lnet/minecraft/sounds/SoundEvent; d
	getEffect (Lnet/minecraft/world/effect/MobEffect;)Lnet/minecraft/world/effect/MobEffectInstance; b
	getExperienceReward (Lnet/minecraft/world/entity/player/Player;)I d
	getEyeHeight (Lnet/minecraft/world/entity/Pose;Lnet/minecraft/world/entity/EntityDimensions;)F a
	getFallDamageSound (I)Lnet/minecraft/sounds/SoundEvent; o
	getFallFlyingTicks ()I ef
	getFeetBlockState ()Lnet/minecraft/world/level/block/state/BlockState; dr
	getFluidFallingAdjustedMovement (DZLnet/minecraft/world/phys/Vec3;)Lnet/minecraft/world/phys/Vec3; a
	getFrictionInfluencedSpeed (F)F t
	getHandSlots ()Ljava/lang/Iterable; bm
	getHealth ()F dj
	getHurtSound (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEvent; e
	getItemBySlot (Lnet/minecraft/world/entity/EquipmentSlot;)Lnet/minecraft/world/item/ItemStack; b
	getItemInHand (Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/item/ItemStack; b
	getJumpPower ()F dI
	getKillCredit ()Lnet/minecraft/world/entity/LivingEntity; dv
	getLastArmorItem (Lnet/minecraft/world/entity/EquipmentSlot;)Lnet/minecraft/world/item/ItemStack; d
	getLastClimbablePos ()Ljava/util/Optional; dq
	getLastDamageSource ()Lnet/minecraft/world/damagesource/DamageSource; dl
	getLastHandItem (Lnet/minecraft/world/entity/EquipmentSlot;)Lnet/minecraft/world/item/ItemStack; e
	getLastHurtByMob ()Lnet/minecraft/world/entity/LivingEntity; cY
	getLastHurtByMobTimestamp ()I cZ
	getLastHurtMob ()Lnet/minecraft/world/entity/LivingEntity; da
	getLastHurtMobTimestamp ()I db
	getLocalBoundsForPose (Lnet/minecraft/world/entity/Pose;)Lnet/minecraft/world/phys/AABB; f
	getLootTable ()Lnet/minecraft/resources/ResourceLocation; do
	getMainArm ()Lnet/minecraft/world/entity/HumanoidArm; dU
	getMainHandItem ()Lnet/minecraft/world/item/ItemStack; dC
	getMaxHealth ()F dw
	getMobType ()Lnet/minecraft/world/entity/MobType; dB
	getNoActionTime ()I dc
	getOffhandItem ()Lnet/minecraft/world/item/ItemStack; dD
	getProjectile (Lnet/minecraft/world/item/ItemStack;)Lnet/minecraft/world/item/ItemStack; f
	getRandom ()Ljava/util/Random; cX
	getRelativePortalPosition (Lnet/minecraft/core/Direction$Axis;Lnet/minecraft/BlockUtil$FoundRectangle;)Lnet/minecraft/world/phys/Vec3; a
	getScale ()F cR
	getSleepingPos ()Ljava/util/Optional; ej
	getSoundVolume ()F dF
	getSpeed ()F dM
	getStandingEyeHeight (Lnet/minecraft/world/entity/Pose;Lnet/minecraft/world/entity/EntityDimensions;)F b
	getStingerCount ()I dy
	getSwimAmount (F)F a
	getTicksUsingItem ()I dZ
	getUseItem ()Lnet/minecraft/world/item/ItemStack; dX
	getUseItemRemainingTicks ()I dY
	getUsedItemHand ()Lnet/minecraft/world/InteractionHand; dW
	getViewYRot (F)F h
	getVisibilityPercent (Lnet/minecraft/world/entity/Entity;)D A
	getVoicePitch ()F dG
	getWaterSlowDown ()F dL
	getYHeadRot ()F bJ
	goDownInWater ()V dK
	handleEntityEvent (B)V a
	handleEquipmentChanges (Ljava/util/Map;)V b
	handleHandSwap (Ljava/util/Map;)V a
	handleOnClimbable (Lnet/minecraft/world/phys/Vec3;)Lnet/minecraft/world/phys/Vec3; i
	handleRelativeFrictionAndCalculateMovement (Lnet/minecraft/world/phys/Vec3;F)Lnet/minecraft/world/phys/Vec3; a
	hasEffect (Lnet/minecraft/world/effect/MobEffect;)Z a
	hasItemInSlot (Lnet/minecraft/world/entity/EquipmentSlot;)Z a
	heal (F)V b
	hurt (Lnet/minecraft/world/damagesource/DamageSource;F)Z a
	hurtArmor (Lnet/minecraft/world/damagesource/DamageSource;F)V b
	hurtCurrentlyUsedShield (F)V p
	increaseAirSupply (I)I m
	isAffectedByFluids ()Z cS
	isAffectedByPotions ()Z eg
	isAlive ()Z aW
	isAlwaysExperienceDropper ()Z cW
	isAutoSpinAttack ()Z dQ
	isBaby ()Z w_
	isBlocking ()Z ec
	isDamageSourceBlocked (Lnet/minecraft/world/damagesource/DamageSource;)Z g
	isDeadOrDying ()Z dk
	isEffectiveAi ()Z dR
	isFallFlying ()Z ee
	isHolding (Ljava/util/function/Predicate;)Z a
	isHolding (Lnet/minecraft/world/item/Item;)Z a
	isImmobile ()Z dH
	isInWall ()Z aX
	isInvertedHealAndHarm ()Z di
	isPickable ()Z aS
	isPushable ()Z aT
	isSensitiveToWater ()Z dN
	isSleeping ()Z el
	isSuppressingSlidingDownLadder ()Z ed
	isUsingItem ()Z dV
	isVisuallySwimming ()Z bB
	jumpFromGround ()V dJ
	jumpInLiquid (Lnet/minecraft/tags/Tag;)V c
	kill ()V Z
	knockback (FDD)V a
	lerpHeadTo (FI)V a
	lerpTo (DDDFFIZ)V a
	lookAt (Lnet/minecraft/commands/arguments/EntityAnchorArgument$Anchor;Lnet/minecraft/world/phys/Vec3;)V a
	makeBrain (Lcom/mojang/serialization/Dynamic;)Lnet/minecraft/world/entity/ai/Brain; a
	markHurt ()V aR
	onChangedBlock (Lnet/minecraft/core/BlockPos;)V c
	onClimbable ()Z c_
	onEffectAdded (Lnet/minecraft/world/effect/MobEffectInstance;)V a
	onEffectRemoved (Lnet/minecraft/world/effect/MobEffectInstance;)V b
	onEffectUpdated (Lnet/minecraft/world/effect/MobEffectInstance;Z)V a
	onEnterCombat ()V g
	onItemPickup (Lnet/minecraft/world/entity/item/ItemEntity;)V a
	onLeaveCombat ()V h
	onSoulSpeedBlock ()Z cO
	onSyncedDataUpdated (Lnet/minecraft/network/syncher/EntityDataAccessor;)V a
	outOfWorld ()V am
	playBlockFallSound ()V ds
	playEquipSound (Lnet/minecraft/world/item/ItemStack;)V b
	playHurtSound (Lnet/minecraft/world/damagesource/DamageSource;)V c
	push (Lnet/minecraft/world/entity/Entity;)V i
	pushEntities ()V dP
	randomTeleport (DDDZ)Z a
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	releaseUsingItem ()V ea
	removeAllEffects ()Z df
	removeEffect (Lnet/minecraft/world/effect/MobEffect;)Z d
	removeEffectNoUpdate (Lnet/minecraft/world/effect/MobEffect;)Lnet/minecraft/world/effect/MobEffectInstance; c
	removeEffectParticles ()V de
	removeSoulSpeed ()V cP
	resetForwardDirectionOfRelativePortalPosition (Lnet/minecraft/world/phys/Vec3;)Lnet/minecraft/world/phys/Vec3; h
	rideTick ()V aZ
	rideableUnderWater ()Z bs
	serverAiStep ()V dO
	setAbsorptionAmount (F)V s
	setArrowCount (I)V p
	setHealth (F)V c
	setItemInHand (Lnet/minecraft/world/InteractionHand;Lnet/minecraft/world/item/ItemStack;)V a
	setItemSlot (Lnet/minecraft/world/entity/EquipmentSlot;Lnet/minecraft/world/item/ItemStack;)V a
	setJumping (Z)V o
	setLastArmorItem (Lnet/minecraft/world/entity/EquipmentSlot;Lnet/minecraft/world/item/ItemStack;)V b
	setLastHandItem (Lnet/minecraft/world/entity/EquipmentSlot;Lnet/minecraft/world/item/ItemStack;)V c
	setLastHurtByMob (Lnet/minecraft/world/entity/LivingEntity;)V a
	setLastHurtByPlayer (Lnet/minecraft/world/entity/player/Player;)V e
	setLastHurtMob (Lnet/minecraft/world/entity/Entity;)V z
	setLivingEntityFlag (IZ)V c
	setNoActionTime (I)V n
	setOnGround (Z)V c
	setPosToBed (Lnet/minecraft/core/BlockPos;)V a
	setRecordPlayingNearby (Lnet/minecraft/core/BlockPos;Z)V a
	setSleepingPos (Lnet/minecraft/core/BlockPos;)V e
	setSpeed (F)V q
	setSprinting (Z)V g
	setStingerCount (I)V q
	setYBodyRot (F)V n
	setYHeadRot (F)V m
	shouldDropExperience ()Z cU
	shouldDropLoot ()Z cV
	shouldRemoveSoulSpeed (Lnet/minecraft/world/level/block/state/BlockState;)Z b
	shouldShowName ()Z bX
	shouldTriggerItemUseEffects ()Z u
	spawnItemParticles (Lnet/minecraft/world/item/ItemStack;I)V a
	spawnSoulSpeedParticle ()V cN
	startAutoSpinAttack (I)V r
	startSleeping (Lnet/minecraft/core/BlockPos;)V b
	startUsingItem (Lnet/minecraft/world/InteractionHand;)V c
	stopRiding ()V l
	stopSleeping ()V em
	stopUsingItem ()V eb
	swapHandItems ()V o
	swing (Lnet/minecraft/world/InteractionHand;)V a
	swing (Lnet/minecraft/world/InteractionHand;Z)V a
	take (Lnet/minecraft/world/entity/Entity;I)V a
	tick ()V j
	tickDeath ()V cT
	tickEffects ()V dd
	tickHeadTurn (FF)F f
	trapdoorUsableAsLadder (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Z c
	travel (Lnet/minecraft/world/phys/Vec3;)V g
	triggerItemUseEffects (Lnet/minecraft/world/item/ItemStack;I)V b
	tryAddSoulSpeed ()V cQ
	updateEffectVisibility ()V dT
	updateFallFlying ()V r
	updateInvisibilityStatus ()V C
	updateSwimAmount ()V v
	updateSwingTime ()V dz
	updatingUsingItem ()V t
net/minecraft/world/entity/Mob aqk
	DATA_MOB_FLAGS_ID b
	ambientSoundTime e
	armorDropChances bn
	armorItems bq
	bodyRotationControl c
	canPickUpLoot br
	delayedLeashHolderId bx
	goalSelector bk
	handDropChances bm
	handItems bp
	jumpControl bi
	leashHolder bw
	leashInfoTag by
	lookControl g
	lootTable bu
	lootTableSeed bv
	moveControl bh
	navigation bj
	pathfindingMalus bt
	persistenceRequired bs
	restrictCenter bz
	restrictRadius bA
	sensing bo
	target d
	targetSelector bl
	xpReward f
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	aiStep ()V k
	ate ()V B
	baseTick ()V af
	canAttack (Lnet/minecraft/world/entity/LivingEntity;)Z c
	canAttackType (Lnet/minecraft/world/entity/EntityType;)Z a
	canBeControlledByRider ()Z er
	canBeLeashed (Lnet/minecraft/world/entity/player/Player;)Z a
	canCutCorner (Lnet/minecraft/world/level/pathfinder/BlockPathTypes;)Z b
	canFireProjectileWeapon (Lnet/minecraft/world/item/ProjectileWeaponItem;)Z a
	canHoldItem (Lnet/minecraft/world/item/ItemStack;)Z h
	canPickUpLoot ()Z et
	canReplaceCurrentItem (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/item/ItemStack;)Z a
	canReplaceEqualItem (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/item/ItemStack;)Z b
	canTakeItem (Lnet/minecraft/world/item/ItemStack;)Z e
	checkAndHandleImportantInteractions (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResult; c
	checkDespawn ()V cH
	checkMobSpawnRules (Lnet/minecraft/world/entity/EntityType;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/world/entity/MobSpawnType;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)Z a
	checkSpawnObstruction (Lnet/minecraft/world/level/LevelReader;)Z a
	checkSpawnRules (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/world/entity/MobSpawnType;)Z a
	clearRestriction ()V ey
	convertTo (Lnet/minecraft/world/entity/EntityType;Z)Lnet/minecraft/world/entity/Mob; a
	createBodyControl ()Lnet/minecraft/world/entity/ai/control/BodyRotationControl; r
	createLootContext (ZLnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/world/level/storage/loot/LootContext$Builder; a
	createMobAttributes ()Lnet/minecraft/world/entity/ai/attributes/AttributeSupplier$Builder; p
	createNavigation (Lnet/minecraft/world/level/Level;)Lnet/minecraft/world/entity/ai/navigation/PathNavigation; b
	customServerAiStep ()V N
	defineSynchedData ()V e
	doHurtTarget (Lnet/minecraft/world/entity/Entity;)Z B
	dropCustomDeathLoot (Lnet/minecraft/world/damagesource/DamageSource;IZ)V a
	dropFromLootTable (Lnet/minecraft/world/damagesource/DamageSource;Z)V a
	dropLeash (ZZ)V a
	enchantSpawnedArmor (FLnet/minecraft/world/entity/EquipmentSlot;)V a
	enchantSpawnedWeapon (F)V w
	equipItemIfPossible (Lnet/minecraft/world/item/ItemStack;)Z g
	finalizeSpawn (Lnet/minecraft/world/level/ServerLevelAccessor;Lnet/minecraft/world/DifficultyInstance;Lnet/minecraft/world/entity/MobSpawnType;Lnet/minecraft/world/entity/SpawnGroupData;Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/world/entity/SpawnGroupData; a
	getAmbientSound ()Lnet/minecraft/sounds/SoundEvent; I
	getAmbientSoundInterval ()I D
	getArmorSlots ()Ljava/lang/Iterable; bn
	getDefaultLootTable ()Lnet/minecraft/resources/ResourceLocation; J
	getEquipmentDropChance (Lnet/minecraft/world/entity/EquipmentSlot;)F e
	getEquipmentForSlot (Lnet/minecraft/world/entity/EquipmentSlot;I)Lnet/minecraft/world/item/Item; a
	getEquipmentSlotForItem (Lnet/minecraft/world/item/ItemStack;)Lnet/minecraft/world/entity/EquipmentSlot; j
	getExperienceReward (Lnet/minecraft/world/entity/player/Player;)I d
	getHandSlots ()Ljava/lang/Iterable; bm
	getHeadRotSpeed ()I ep
	getItemBySlot (Lnet/minecraft/world/entity/EquipmentSlot;)Lnet/minecraft/world/item/ItemStack; b
	getJumpControl ()Lnet/minecraft/world/entity/ai/control/JumpControl; v
	getLeashHolder ()Lnet/minecraft/world/entity/Entity; eC
	getLookControl ()Lnet/minecraft/world/entity/ai/control/LookControl; t
	getLootTable ()Lnet/minecraft/resources/ResourceLocation; do
	getMainArm ()Lnet/minecraft/world/entity/HumanoidArm; dU
	getMaxFallDistance ()I bO
	getMaxHeadXRot ()I O
	getMaxHeadYRot ()I eo
	getMaxSpawnClusterSize ()I eq
	getMoveControl ()Lnet/minecraft/world/entity/ai/control/MoveControl; u
	getNavigation ()Lnet/minecraft/world/entity/ai/navigation/PathNavigation; x
	getPathfindingMalus (Lnet/minecraft/world/level/pathfinder/BlockPathTypes;)F a
	getRestrictCenter ()Lnet/minecraft/core/BlockPos; ew
	getRestrictRadius ()F ex
	getSensing ()Lnet/minecraft/world/entity/ai/sensing/Sensing; z
	getTarget ()Lnet/minecraft/world/entity/LivingEntity; A
	handleEntityEvent (B)V a
	hasRestriction ()Z ez
	interact (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResult; a
	isAggressive ()Z eF
	isControlledByLocalInstance ()Z cr
	isEffectiveAi ()Z dR
	isLeashed ()Z eB
	isLeftHanded ()Z eE
	isMaxGroupSizeReached (I)Z c
	isNoAi ()Z eD
	isPersistenceRequired ()Z eu
	isSunBurnTick ()Z eG
	isValidSlotForItem (Lnet/minecraft/world/entity/EquipmentSlot;Lnet/minecraft/world/item/ItemStack;)Z c
	isWithinRestriction ()Z ev
	isWithinRestriction (Lnet/minecraft/core/BlockPos;)Z a
	jumpInLiquid (Lnet/minecraft/tags/Tag;)V c
	lookAt (Lnet/minecraft/world/entity/Entity;FF)V a
	maybeDisableShield (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/item/ItemStack;)V a
	mobInteract (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResult; b
	onOffspringSpawnedFromEgg (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/entity/Mob;)V a
	pickUpItem (Lnet/minecraft/world/entity/item/ItemEntity;)V b
	playAmbientSound ()V F
	playHurtSound (Lnet/minecraft/world/damagesource/DamageSource;)V c
	populateDefaultEquipmentEnchantments (Lnet/minecraft/world/DifficultyInstance;)V b
	populateDefaultEquipmentSlots (Lnet/minecraft/world/DifficultyInstance;)V a
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	registerGoals ()V o
	removeAfterChangingDimensions ()V bM
	removeFreeWill ()V eH
	removeWhenFarAway (D)Z h
	requiresCustomPersistence ()Z K
	resetAmbientSoundTime ()V m
	restoreLeashFromSave ()V eI
	restrictTo (Lnet/minecraft/core/BlockPos;I)V a
	rotlerp (FFF)F a
	sendDebugPackets ()V M
	serverAiStep ()V dO
	setAggressive (Z)V s
	setBaby (Z)V a
	setCanPickUpLoot (Z)V p
	setDelayedLeashHolderId (I)V d
	setDropChance (Lnet/minecraft/world/entity/EquipmentSlot;F)V a
	setGuaranteedDrop (Lnet/minecraft/world/entity/EquipmentSlot;)V d
	setItemSlot (Lnet/minecraft/world/entity/EquipmentSlot;Lnet/minecraft/world/item/ItemStack;)V a
	setItemSlotAndDropWhenKilled (Lnet/minecraft/world/entity/EquipmentSlot;Lnet/minecraft/world/item/ItemStack;)V b
	setLeashedTo (Lnet/minecraft/world/entity/Entity;Z)V b
	setLeftHanded (Z)V r
	setNoAi (Z)V q
	setPathfindingMalus (Lnet/minecraft/world/level/pathfinder/BlockPathTypes;F)V a
	setPersistenceRequired ()V es
	setSlot (ILnet/minecraft/world/item/ItemStack;)Z a_
	setSpeed (F)V q
	setTarget (Lnet/minecraft/world/entity/LivingEntity;)V h
	setXxa (F)V v
	setYya (F)V u
	setZza (F)V t
	shouldDespawnInPeaceful ()Z L
	shouldPassengersInheritMalus ()Z q
	spawnAnim ()V G
	startRiding (Lnet/minecraft/world/entity/Entity;Z)Z a
	tick ()V j
	tickHeadTurn (FF)F f
	tickLeash ()V eA
	updateControlFlags ()V H
	wantsToPickUp (Lnet/minecraft/world/item/ItemStack;)Z i
net/minecraft/world/entity/MobCategory aql
	$VALUES o
	AMBIENT c
	BY_NAME h
	CODEC g
	CREATURE b
	MISC f
	MONSTER a
	WATER_AMBIENT e
	WATER_CREATURE d
	despawnDistance n
	isFriendly j
	isPersistent k
	max i
	name l
	noDespawnDistance m
	byName (Ljava/lang/String;)Lnet/minecraft/world/entity/MobCategory; a
	getDespawnDistance ()I f
	getMaxInstancesPerChunk ()I c
	getName ()Ljava/lang/String; b
	getNoDespawnDistance ()I g
	getSerializedName ()Ljava/lang/String; a
	isFriendly ()Z d
	isPersistent ()Z e
net/minecraft/world/entity/MobSpawnType aqm
	$VALUES q
	BREEDING e
	BUCKET l
	CHUNK_GENERATION b
	COMMAND n
	CONVERSION i
	DISPENSER o
	EVENT h
	JOCKEY g
	MOB_SUMMONED f
	NATURAL a
	PATROL p
	REINFORCEMENT j
	SPAWNER c
	SPAWN_EGG m
	STRUCTURE d
	TRIGGERED k
net/minecraft/world/entity/MobType aqn
	ARTHROPOD c
	ILLAGER d
	UNDEAD b
	UNDEFINED a
	WATER e
net/minecraft/world/entity/MoverType aqo
	$VALUES f
	PISTON c
	PLAYER b
	SELF a
	SHULKER e
	SHULKER_BOX d
net/minecraft/world/entity/NeutralMob aqp
	addPersistentAngerSaveData (Lnet/minecraft/nbt/CompoundTag;)V c
	forgetCurrentTargetAndRefreshUniversalAnger ()V I_
	getLastHurtByMob ()Lnet/minecraft/world/entity/LivingEntity; cY
	getPersistentAngerTarget ()Ljava/util/UUID; F_
	getRemainingPersistentAngerTime ()I E_
	getTarget ()Lnet/minecraft/world/entity/LivingEntity; A
	isAngry ()Z H_
	isAngryAt (Lnet/minecraft/world/entity/LivingEntity;)Z a_
	isAngryAtAllPlayers (Lnet/minecraft/world/level/Level;)Z a
	playerDied (Lnet/minecraft/world/entity/player/Player;)V b
	readPersistentAngerSaveData (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/nbt/CompoundTag;)V a
	setLastHurtByMob (Lnet/minecraft/world/entity/LivingEntity;)V a
	setLastHurtByPlayer (Lnet/minecraft/world/entity/player/Player;)V e
	setPersistentAngerTarget (Ljava/util/UUID;)V a
	setRemainingPersistentAngerTime (I)V a_
	setTarget (Lnet/minecraft/world/entity/LivingEntity;)V h
	startPersistentAngerTimer ()V G_
	stopBeingAngry ()V J_
	updatePersistentAnger (Lnet/minecraft/server/level/ServerLevel;Z)V a
net/minecraft/world/entity/OwnableEntity aqq
	getOwner ()Lnet/minecraft/world/entity/Entity; B_
	getOwnerUUID ()Ljava/util/UUID; A_
net/minecraft/world/entity/PathfinderMob aqr
	checkSpawnRules (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/world/entity/MobSpawnType;)Z a
	followLeashSpeed ()D eJ
	getWalkTargetValue (Lnet/minecraft/core/BlockPos;)F f
	getWalkTargetValue (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/LevelReader;)F a
	isPathFinding ()Z eI
	onLeashDistance (F)V x
	tickLeash ()V eA
net/minecraft/world/entity/PlayerRideable aqs
net/minecraft/world/entity/PlayerRideableJumping aqt
	canJump ()Z P_
	getJumpRidingScale ()F Q_
	handleStartJump (I)V b
	handleStopJump ()V c
	onPlayerJump (I)V b_
	setJumpRidingScale (F)V a_
net/minecraft/world/entity/Pose aqu
	$VALUES h
	CROUCHING f
	DYING g
	FALL_FLYING b
	SLEEPING c
	SPIN_ATTACK e
	STANDING a
	SWIMMING d
net/minecraft/world/entity/PowerableMob aqv
	isPowered ()Z S_
net/minecraft/world/entity/ReputationEventHandler aqw
	onReputationEventFrom (Lnet/minecraft/world/entity/ai/village/ReputationEventType;Lnet/minecraft/world/entity/Entity;)V a
net/minecraft/world/entity/Saddleable aqx
	equipSaddle (Lnet/minecraft/sounds/SoundSource;)V a
	isSaddleable ()Z L_
	isSaddled ()Z M_
net/minecraft/world/entity/Shearable aqy
	readyForShearing ()Z K_
	shear (Lnet/minecraft/sounds/SoundSource;)V a
net/minecraft/world/entity/SpawnGroupData aqz
net/minecraft/world/entity/SpawnPlacements ara
	DATA_BY_TYPE a
	checkSpawnRules (Lnet/minecraft/world/entity/EntityType;Lnet/minecraft/world/level/ServerLevelAccessor;Lnet/minecraft/world/entity/MobSpawnType;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)Z a
	getHeightmapType (Lnet/minecraft/world/entity/EntityType;)Lnet/minecraft/world/level/levelgen/Heightmap$Types; b
	getPlacementType (Lnet/minecraft/world/entity/EntityType;)Lnet/minecraft/world/entity/SpawnPlacements$Type; a
	register (Lnet/minecraft/world/entity/EntityType;Lnet/minecraft/world/entity/SpawnPlacements$Type;Lnet/minecraft/world/level/levelgen/Heightmap$Types;Lnet/minecraft/world/entity/SpawnPlacements$SpawnPredicate;)V a
net/minecraft/world/entity/SpawnPlacements$Data ara$a
	heightMap a
	placement b
	predicate c
net/minecraft/world/entity/SpawnPlacements$SpawnPredicate ara$b
net/minecraft/world/entity/SpawnPlacements$Type ara$c
	$VALUES e
	IN_LAVA d
	IN_WATER b
	NO_RESTRICTIONS c
	ON_GROUND a
net/minecraft/world/entity/TamableAnimal arb
	DATA_FLAGS_ID bo
	DATA_OWNERUUID_ID bp
	orderedToSit bq
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	canAttack (Lnet/minecraft/world/entity/LivingEntity;)Z c
	canBeLeashed (Lnet/minecraft/world/entity/player/Player;)Z a
	defineSynchedData ()V e
	die (Lnet/minecraft/world/damagesource/DamageSource;)V a
	getOwner ()Lnet/minecraft/world/entity/Entity; B_
	getOwner ()Lnet/minecraft/world/entity/LivingEntity; eN
	getOwnerUUID ()Ljava/util/UUID; A_
	getTeam ()Lnet/minecraft/world/scores/Team; bF
	handleEntityEvent (B)V a
	isAlliedTo (Lnet/minecraft/world/entity/Entity;)Z r
	isInSittingPose ()Z eM
	isOrderedToSit ()Z eO
	isOwnedBy (Lnet/minecraft/world/entity/LivingEntity;)Z i
	isTame ()Z eK
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	reassessTameGoals ()V eL
	setInSittingPose (Z)V v
	setOrderedToSit (Z)V w
	setOwnerUUID (Ljava/util/UUID;)V b
	setTame (Z)V u
	spawnTamingParticles (Z)V t
	tame (Lnet/minecraft/world/entity/player/Player;)V f
	wantsToAttack (Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/entity/LivingEntity;)Z a
net/minecraft/world/entity/ai/Brain arc
	LOGGER a
	activeActivities j
	activityMemoriesToEraseWhenStopped h
	activityRequirements g
	availableBehaviorsByPriority e
	codec b
	coreActivities i
	defaultActivity k
	lastScheduleUpdate l
	memories c
	schedule f
	sensors d
	activityRequirementsAreMet (Lnet/minecraft/world/entity/schedule/Activity;)Z f
	addActivity (Lnet/minecraft/world/entity/schedule/Activity;ILcom/google/common/collect/ImmutableList;)V a
	addActivity (Lnet/minecraft/world/entity/schedule/Activity;Lcom/google/common/collect/ImmutableList;)V a
	addActivityAndRemoveMemoriesWhenStopped (Lnet/minecraft/world/entity/schedule/Activity;Lcom/google/common/collect/ImmutableList;Ljava/util/Set;Ljava/util/Set;)V a
	addActivityAndRemoveMemoryWhenStopped (Lnet/minecraft/world/entity/schedule/Activity;ILcom/google/common/collect/ImmutableList;Lnet/minecraft/world/entity/ai/memory/MemoryModuleType;)V a
	addActivityWithConditions (Lnet/minecraft/world/entity/schedule/Activity;Lcom/google/common/collect/ImmutableList;Ljava/util/Set;)V a
	checkMemory (Lnet/minecraft/world/entity/ai/memory/MemoryModuleType;Lnet/minecraft/world/entity/ai/memory/MemoryStatus;)Z a
	codec (Ljava/util/Collection;Ljava/util/Collection;)Lcom/mojang/serialization/Codec; b
	copyWithoutBehaviors ()Lnet/minecraft/world/entity/ai/Brain; h
	createPriorityPairs (ILcom/google/common/collect/ImmutableList;)Lcom/google/common/collect/ImmutableList; a
	eraseMemoriesForOtherActivitesThan (Lnet/minecraft/world/entity/schedule/Activity;)V e
	eraseMemory (Lnet/minecraft/world/entity/ai/memory/MemoryModuleType;)V b
	forgetOutdatedMemories ()V k
	getActiveActivities ()Ljava/util/Set; c
	getActiveNonCoreActivity ()Ljava/util/Optional; f
	getMemories ()Ljava/util/Map; a
	getMemory (Lnet/minecraft/world/entity/ai/memory/MemoryModuleType;)Ljava/util/Optional; c
	getRunningBehaviors ()Ljava/util/List; d
	getSchedule ()Lnet/minecraft/world/entity/schedule/Schedule; b
	hasMemoryValue (Lnet/minecraft/world/entity/ai/memory/MemoryModuleType;)Z a
	isActive (Lnet/minecraft/world/entity/schedule/Activity;)Z c
	isEmptyCollection (Ljava/lang/Object;)Z a
	isMemoryValue (Lnet/minecraft/world/entity/ai/memory/MemoryModuleType;Ljava/lang/Object;)Z b
	memories ()Ljava/util/stream/Stream; j
	provider (Ljava/util/Collection;Ljava/util/Collection;)Lnet/minecraft/world/entity/ai/Brain$Provider; a
	removeAllBehaviors ()V g
	serializeStart (Lcom/mojang/serialization/DynamicOps;)Lcom/mojang/serialization/DataResult; a
	setActiveActivity (Lnet/minecraft/world/entity/schedule/Activity;)V d
	setActiveActivityIfPossible (Lnet/minecraft/world/entity/schedule/Activity;)V a
	setActiveActivityToFirstValid (Ljava/util/List;)V a
	setCoreActivities (Ljava/util/Set;)V a
	setDefaultActivity (Lnet/minecraft/world/entity/schedule/Activity;)V b
	setMemory (Lnet/minecraft/world/entity/ai/memory/MemoryModuleType;Ljava/lang/Object;)V a
	setMemory (Lnet/minecraft/world/entity/ai/memory/MemoryModuleType;Ljava/util/Optional;)V a
	setMemoryInternal (Lnet/minecraft/world/entity/ai/memory/MemoryModuleType;Ljava/util/Optional;)V b
	setMemoryWithExpiry (Lnet/minecraft/world/entity/ai/memory/MemoryModuleType;Ljava/lang/Object;J)V a
	setSchedule (Lnet/minecraft/world/entity/schedule/Schedule;)V a
	startEachNonRunningBehavior (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)V d
	stopAll (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)V b
	tick (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)V a
	tickEachRunningBehavior (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)V e
	tickSensors (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)V c
	updateActivityFromSchedule (JJ)V a
	useDefaultActivity ()V e
net/minecraft/world/entity/ai/Brain$MemoryValue arc$a
	type a
	value b
	createUnchecked (Lnet/minecraft/world/entity/ai/memory/MemoryModuleType;Ljava/util/Optional;)Lnet/minecraft/world/entity/ai/Brain$MemoryValue; b
	serialize (Lcom/mojang/serialization/DynamicOps;Lcom/mojang/serialization/RecordBuilder;)V a
	setMemoryInternal (Lnet/minecraft/world/entity/ai/Brain;)V a
net/minecraft/world/entity/ai/Brain$Provider arc$b
	codec c
	memoryTypes a
	sensorTypes b
	makeBrain (Lcom/mojang/serialization/Dynamic;)Lnet/minecraft/world/entity/ai/Brain; a
net/minecraft/world/entity/ai/attributes/Attribute ard
	defaultValue a
	descriptionId c
	syncable b
	getDefaultValue ()D a
	getDescriptionId ()Ljava/lang/String; c
	isClientSyncable ()Z b
	sanitizeValue (D)D a
	setSyncable (Z)Lnet/minecraft/world/entity/ai/attributes/Attribute; a
net/minecraft/world/entity/ai/attributes/AttributeInstance are
	attribute a
	baseValue e
	cachedValue g
	dirty f
	modifierById c
	modifiersByOperation b
	onDirty h
	permanentModifiers d
	addModifier (Lnet/minecraft/world/entity/ai/attributes/AttributeModifier;)V e
	addPermanentModifier (Lnet/minecraft/world/entity/ai/attributes/AttributeModifier;)V c
	addTransientModifier (Lnet/minecraft/world/entity/ai/attributes/AttributeModifier;)V b
	calculateValue ()D h
	getAttribute ()Lnet/minecraft/world/entity/ai/attributes/Attribute; a
	getBaseValue ()D b
	getModifier (Ljava/util/UUID;)Lnet/minecraft/world/entity/ai/attributes/AttributeModifier; a
	getModifiers ()Ljava/util/Set; c
	getModifiers (Lnet/minecraft/world/entity/ai/attributes/AttributeModifier$Operation;)Ljava/util/Set; a
	getModifiersOrEmpty (Lnet/minecraft/world/entity/ai/attributes/AttributeModifier$Operation;)Ljava/util/Collection; b
	getValue ()D f
	hasModifier (Lnet/minecraft/world/entity/ai/attributes/AttributeModifier;)Z a
	load (Lnet/minecraft/nbt/CompoundTag;)V a
	removeModifier (Ljava/util/UUID;)V b
	removeModifier (Lnet/minecraft/world/entity/ai/attributes/AttributeModifier;)V d
	removeModifiers ()V e
	removePermanentModifier (Ljava/util/UUID;)Z c
	replaceFrom (Lnet/minecraft/world/entity/ai/attributes/AttributeInstance;)V a
	save ()Lnet/minecraft/nbt/CompoundTag; g
	setBaseValue (D)V a
	setDirty ()V d
net/minecraft/world/entity/ai/attributes/AttributeMap arf
	LOGGER a
	attributes b
	dirtyAttributes c
	supplier d
	addTransientAttributeModifiers (Lcom/google/common/collect/Multimap;)V b
	assignValues (Lnet/minecraft/world/entity/ai/attributes/AttributeMap;)V a
	getBaseValue (Lnet/minecraft/world/entity/ai/attributes/Attribute;)D d
	getDirtyAttributes ()Ljava/util/Set; a
	getInstance (Lnet/minecraft/world/entity/ai/attributes/Attribute;)Lnet/minecraft/world/entity/ai/attributes/AttributeInstance; a
	getModifierValue (Lnet/minecraft/world/entity/ai/attributes/Attribute;Ljava/util/UUID;)D b
	getSyncableAttributes ()Ljava/util/Collection; b
	getValue (Lnet/minecraft/world/entity/ai/attributes/Attribute;)D c
	hasAttribute (Lnet/minecraft/world/entity/ai/attributes/Attribute;)Z b
	hasModifier (Lnet/minecraft/world/entity/ai/attributes/Attribute;Ljava/util/UUID;)Z a
	load (Lnet/minecraft/nbt/ListTag;)V a
	onAttributeModified (Lnet/minecraft/world/entity/ai/attributes/AttributeInstance;)V a
	removeAttributeModifiers (Lcom/google/common/collect/Multimap;)V a
	save ()Lnet/minecraft/nbt/ListTag; c
net/minecraft/world/entity/ai/attributes/AttributeModifier arg
	LOGGER a
	amount b
	id e
	nameGetter d
	operation c
	getAmount ()D d
	getId ()Ljava/util/UUID; a
	getName ()Ljava/lang/String; b
	getOperation ()Lnet/minecraft/world/entity/ai/attributes/AttributeModifier$Operation; c
	load (Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/world/entity/ai/attributes/AttributeModifier; a
	save ()Lnet/minecraft/nbt/CompoundTag; e
net/minecraft/world/entity/ai/attributes/AttributeModifier$Operation arg$a
	$VALUES f
	ADDITION a
	MULTIPLY_BASE b
	MULTIPLY_TOTAL c
	OPERATIONS d
	value e
	fromValue (I)Lnet/minecraft/world/entity/ai/attributes/AttributeModifier$Operation; a
	toValue ()I a
net/minecraft/world/entity/ai/attributes/AttributeSupplier arh
	instances a
	builder ()Lnet/minecraft/world/entity/ai/attributes/AttributeSupplier$Builder; a
	createInstance (Ljava/util/function/Consumer;Lnet/minecraft/world/entity/ai/attributes/Attribute;)Lnet/minecraft/world/entity/ai/attributes/AttributeInstance; a
	getAttributeInstance (Lnet/minecraft/world/entity/ai/attributes/Attribute;)Lnet/minecraft/world/entity/ai/attributes/AttributeInstance; d
	getBaseValue (Lnet/minecraft/world/entity/ai/attributes/Attribute;)D b
	getModifierValue (Lnet/minecraft/world/entity/ai/attributes/Attribute;Ljava/util/UUID;)D a
	getValue (Lnet/minecraft/world/entity/ai/attributes/Attribute;)D a
	hasAttribute (Lnet/minecraft/world/entity/ai/attributes/Attribute;)Z c
	hasModifier (Lnet/minecraft/world/entity/ai/attributes/Attribute;Ljava/util/UUID;)Z b
net/minecraft/world/entity/ai/attributes/AttributeSupplier$Builder arh$a
	builder a
	instanceFrozen b
	add (Lnet/minecraft/world/entity/ai/attributes/Attribute;)Lnet/minecraft/world/entity/ai/attributes/AttributeSupplier$Builder; a
	add (Lnet/minecraft/world/entity/ai/attributes/Attribute;D)Lnet/minecraft/world/entity/ai/attributes/AttributeSupplier$Builder; a
	build ()Lnet/minecraft/world/entity/ai/attributes/AttributeSupplier; a
	create (Lnet/minecraft/world/entity/ai/attributes/Attribute;)Lnet/minecraft/world/entity/ai/attributes/AttributeInstance; b
net/minecraft/world/entity/ai/attributes/Attributes ari
	ARMOR i
	ARMOR_TOUGHNESS j
	ATTACK_DAMAGE f
	ATTACK_KNOCKBACK g
	ATTACK_SPEED h
	FLYING_SPEED e
	FOLLOW_RANGE b
	JUMP_STRENGTH m
	KNOCKBACK_RESISTANCE c
	LUCK k
	MAX_HEALTH a
	MOVEMENT_SPEED d
	SPAWN_REINFORCEMENTS_CHANCE l
	register (Ljava/lang/String;Lnet/minecraft/world/entity/ai/attributes/Attribute;)Lnet/minecraft/world/entity/ai/attributes/Attribute; a
net/minecraft/world/entity/ai/attributes/DefaultAttributes arj
	LOGGER a
	SUPPLIERS b
	getSupplier (Lnet/minecraft/world/entity/EntityType;)Lnet/minecraft/world/entity/ai/attributes/AttributeSupplier; a
	hasSupplier (Lnet/minecraft/world/entity/EntityType;)Z b
	validate ()V a
net/minecraft/world/entity/ai/attributes/RangedAttribute ark
	maxValue b
	minValue a
	getMaxValue ()D e
	getMinValue ()D d
	sanitizeValue (D)D a
net/minecraft/world/entity/ai/behavior/AcquirePoi arm
	batchCache g
	memoryToAcquire c
	nextScheduledStart f
	onPoiAcquisitionEvent e
	onlyIfAdult d
	poiType b
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)Z a
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/PathfinderMob;)Z a
	constructEntryConditionMap (Lnet/minecraft/world/entity/ai/memory/MemoryModuleType;Lnet/minecraft/world/entity/ai/memory/MemoryModuleType;)Lcom/google/common/collect/ImmutableMap; a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/PathfinderMob;J)V a
net/minecraft/world/entity/ai/behavior/AcquirePoi$JitteredLinearRetry arm$a
	currentDelay d
	nextScheduledAttemptTimestamp c
	previousAttemptTimestamp b
	random a
	isStillValid (J)Z b
	markAttempt (J)V a
	shouldRetry (J)Z c
net/minecraft/world/entity/ai/behavior/AnimalMakeLove arn
	partnerType b
	spawnChildAtTime d
	speedModifier c
	canStillUse (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)Z b
	canStillUse (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/animal/Animal;J)Z b
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)Z a
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/animal/Animal;)Z a
	findValidBreedPartner (Lnet/minecraft/world/entity/animal/Animal;)Ljava/util/Optional; c
	getBreedTarget (Lnet/minecraft/world/entity/animal/Animal;)Lnet/minecraft/world/entity/animal/Animal; a
	hasBreedTargetOfRightType (Lnet/minecraft/world/entity/animal/Animal;)Z b
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/animal/Animal;J)V a
	stop (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V c
	stop (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/animal/Animal;J)V d
	tick (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V d
	tick (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/animal/Animal;J)V c
net/minecraft/world/entity/ai/behavior/AssignProfessionFromJobSite aro
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)Z a
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/npc/Villager;)Z a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/npc/Villager;J)V a
net/minecraft/world/entity/ai/behavior/BabyFollowAdult arp
	followRange b
	speedModifier c
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/AgableMob;)Z a
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)Z a
	getNearestAdult (Lnet/minecraft/world/entity/AgableMob;)Lnet/minecraft/world/entity/AgableMob; a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/AgableMob;J)V a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V a
net/minecraft/world/entity/ai/behavior/BackUpIfTooClose arq
	strafeSpeed c
	tooCloseDistance b
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)Z a
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/Mob;)Z a
	getTarget (Lnet/minecraft/world/entity/Mob;)Lnet/minecraft/world/entity/LivingEntity; c
	isTargetTooClose (Lnet/minecraft/world/entity/Mob;)Z b
	isTargetVisible (Lnet/minecraft/world/entity/Mob;)Z a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/Mob;J)V a
net/minecraft/world/entity/ai/behavior/BecomePassiveIfMemoryPresent arr
	pacifyDuration b
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V a
net/minecraft/world/entity/ai/behavior/Behavior ars
	endTimestamp c
	entryCondition a
	maxDuration e
	minDuration d
	status b
	canStillUse (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)Z b
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)Z a
	doStop (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V g
	getStatus ()Lnet/minecraft/world/entity/ai/behavior/Behavior$Status; a
	hasRequiredMemories (Lnet/minecraft/world/entity/LivingEntity;)Z a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V a
	stop (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V c
	tick (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V d
	tickOrStop (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V f
	timedOut (J)Z a
	tryStart (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)Z e
net/minecraft/world/entity/ai/behavior/Behavior$Status ars$a
	$VALUES c
	RUNNING b
	STOPPED a
net/minecraft/world/entity/ai/behavior/BehaviorUtils art
	canSee (Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/entity/LivingEntity;)Z c
	entityIsVisible (Lnet/minecraft/world/entity/ai/Brain;Lnet/minecraft/world/entity/LivingEntity;)Z a
	findSectionClosestToVillage (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/SectionPos;I)Lnet/minecraft/core/SectionPos; a
	getLivingEntityFromUUIDMemory (Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/entity/ai/memory/MemoryModuleType;)Ljava/util/Optional; a
	getNearbyVillagersWithCondition (Lnet/minecraft/world/entity/npc/Villager;Ljava/util/function/Predicate;)Ljava/util/stream/Stream; a
	getNearestTarget (Lnet/minecraft/world/entity/LivingEntity;Ljava/util/Optional;Lnet/minecraft/world/entity/LivingEntity;)Lnet/minecraft/world/entity/LivingEntity; a
	getTargetNearestMe (Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/entity/LivingEntity;)Lnet/minecraft/world/entity/LivingEntity; a
	isOtherTargetMuchFurtherAwayThanCurrentAttackTarget (Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/entity/LivingEntity;D)Z a
	isWithinAttackRange (Lnet/minecraft/world/entity/Mob;Lnet/minecraft/world/entity/LivingEntity;I)Z a
	isWithinMeleeAttackRange (Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/entity/LivingEntity;)Z b
	lockGazeAndWalkToEachOther (Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/entity/LivingEntity;F)V a
	lookAtEachOther (Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/entity/LivingEntity;)V d
	lookAtEntity (Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/entity/LivingEntity;)V a
	setWalkAndLookTargetMemories (Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/core/BlockPos;FI)V a
	setWalkAndLookTargetMemories (Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/entity/Entity;FI)V a
	setWalkAndLookTargetMemoriesToEachOther (Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/entity/LivingEntity;F)V b
	targetIsValid (Lnet/minecraft/world/entity/ai/Brain;Lnet/minecraft/world/entity/ai/memory/MemoryModuleType;Ljava/util/function/Predicate;)Z a
	targetIsValid (Lnet/minecraft/world/entity/ai/Brain;Lnet/minecraft/world/entity/ai/memory/MemoryModuleType;Lnet/minecraft/world/entity/EntityType;)Z a
	throwItem (Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/phys/Vec3;)V a
net/minecraft/world/entity/ai/behavior/BlockPosTracker aru
	blockPos a
	centerPosition b
	currentBlockPosition ()Lnet/minecraft/core/BlockPos; b
	currentPosition ()Lnet/minecraft/world/phys/Vec3; a
	isVisibleBy (Lnet/minecraft/world/entity/LivingEntity;)Z a
net/minecraft/world/entity/ai/behavior/CelebrateVillagersSurvivedRaid arv
	currentRaid b
	canStillUse (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)Z b
	canStillUse (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/npc/Villager;J)Z a
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)Z a
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/npc/Villager;)Z a
	getFirework (Lnet/minecraft/world/item/DyeColor;I)Lnet/minecraft/world/item/ItemStack; a
	stop (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V c
	stop (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/npc/Villager;J)V b
	tick (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V d
	tick (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/npc/Villager;J)V c
net/minecraft/world/entity/ai/behavior/CopyMemoryWithExpiry arw
	durationOfCopy e
	predicate b
	sourceMemory c
	targetMemory d
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)Z a
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/Mob;)Z a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/Mob;J)V a
net/minecraft/world/entity/ai/behavior/CrossbowAttack arx
	attackDelay b
	crossbowState c
	canStillUse (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)Z b
	canStillUse (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/Mob;J)Z a
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)Z a
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/Mob;)Z a
	crossbowAttack (Lnet/minecraft/world/entity/Mob;Lnet/minecraft/world/entity/LivingEntity;)V a
	getAttackTarget (Lnet/minecraft/world/entity/LivingEntity;)Lnet/minecraft/world/entity/LivingEntity; a
	lookAtTarget (Lnet/minecraft/world/entity/Mob;Lnet/minecraft/world/entity/LivingEntity;)V b
	stop (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V c
	stop (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/Mob;J)V c
	tick (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V d
	tick (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/Mob;J)V b
net/minecraft/world/entity/ai/behavior/CrossbowAttack$CrossbowState arx$a
	$VALUES e
	CHARGED c
	CHARGING b
	READY_TO_ATTACK d
	UNCHARGED a
net/minecraft/world/entity/ai/behavior/DismountOrSkipMounting ary
	dontRideIf c
	maxWalkDistToRideTarget b
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)Z a
	isVehicleValid (Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/entity/Entity;)Z a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V a
net/minecraft/world/entity/ai/behavior/DoNothing arz
	canStillUse (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)Z b
net/minecraft/world/entity/ai/behavior/EntityTracker asa
	entity a
	trackEyeHeight b
	currentBlockPosition ()Lnet/minecraft/core/BlockPos; b
	currentPosition ()Lnet/minecraft/world/phys/Vec3; a
	getEntity ()Lnet/minecraft/world/entity/Entity; c
	isVisibleBy (Lnet/minecraft/world/entity/LivingEntity;)Z a
net/minecraft/world/entity/ai/behavior/EraseMemoryIf asb
	memoryType c
	predicate b
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)Z a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V a
net/minecraft/world/entity/ai/behavior/GateBehavior asc
	behaviors e
	exitErasedMemories b
	orderPolicy c
	runningPolicy d
	canStillUse (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)Z b
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V a
	stop (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V c
	tick (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V d
	timedOut (J)Z a
net/minecraft/world/entity/ai/behavior/GateBehavior$OrderPolicy asc$a
	$VALUES d
	ORDERED a
	SHUFFLED b
	consumer c
	apply (Lnet/minecraft/world/entity/ai/behavior/WeightedList;)V a
net/minecraft/world/entity/ai/behavior/GateBehavior$RunningPolicy asc$b
	$VALUES c
	RUN_ONE a
	TRY_ALL b
	apply (Lnet/minecraft/world/entity/ai/behavior/WeightedList;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V a
net/minecraft/world/entity/ai/behavior/GiveGiftToHero asd
	giftGivenDuringThisRun d
	gifts b
	timeSinceStart e
	timeUntilNextGift c
	calculateTimeUntilNextGift (Lnet/minecraft/server/level/ServerLevel;)I a
	canStillUse (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)Z b
	canStillUse (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/npc/Villager;J)Z b
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)Z a
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/npc/Villager;)Z a
	getItemToThrow (Lnet/minecraft/world/entity/npc/Villager;)Ljava/util/List; a
	getNearestTargetableHero (Lnet/minecraft/world/entity/npc/Villager;)Ljava/util/Optional; c
	isHero (Lnet/minecraft/world/entity/player/Player;)Z a
	isHeroVisible (Lnet/minecraft/world/entity/npc/Villager;)Z b
	isWithinThrowingDistance (Lnet/minecraft/world/entity/npc/Villager;Lnet/minecraft/world/entity/player/Player;)Z a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/npc/Villager;J)V a
	stop (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V c
	stop (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/npc/Villager;J)V d
	throwGift (Lnet/minecraft/world/entity/npc/Villager;Lnet/minecraft/world/entity/LivingEntity;)V a
	tick (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V d
	tick (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/npc/Villager;J)V c
net/minecraft/world/entity/ai/behavior/GoOutsideToCelebrate ase
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)Z a
net/minecraft/world/entity/ai/behavior/GoToCelebrateLocation asf
	closeEnoughDist b
	speedModifier c
	getCelebrateLocation (Lnet/minecraft/world/entity/Mob;)Lnet/minecraft/core/BlockPos; a
	getNearbyPos (Lnet/minecraft/world/entity/Mob;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/core/BlockPos; a
	getRandomOffset (Ljava/util/Random;)I a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/Mob;J)V a
net/minecraft/world/entity/ai/behavior/GoToClosestVillage asg
	closeEnoughDistance c
	speedModifier b
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)Z a
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/npc/Villager;)Z a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/npc/Villager;J)V a
net/minecraft/world/entity/ai/behavior/GoToPotentialJobSite ash
	speedModifier b
	canStillUse (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)Z b
	canStillUse (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/npc/Villager;J)Z a
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)Z a
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/npc/Villager;)Z a
	stop (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V c
	stop (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/npc/Villager;J)V c
	tick (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V d
	tick (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/npc/Villager;J)V b
net/minecraft/world/entity/ai/behavior/GoToWantedItem asi
	maxDistToWalk c
	predicate b
	speedModifier d
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)Z a
	getClosestLovedItem (Lnet/minecraft/world/entity/LivingEntity;)Lnet/minecraft/world/entity/item/ItemEntity; a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V a
net/minecraft/world/entity/ai/behavior/HarvestFarmland asj
	aboveFarmlandPos b
	nextOkStartTime c
	timeWorkedSoFar d
	validFarmlandAroundVillager e
	canStillUse (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)Z b
	canStillUse (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/npc/Villager;J)Z d
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)Z a
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/npc/Villager;)Z a
	getValidFarmland (Lnet/minecraft/server/level/ServerLevel;)Lnet/minecraft/core/BlockPos; a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/npc/Villager;J)V a
	stop (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V c
	stop (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/npc/Villager;J)V b
	tick (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V d
	tick (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/npc/Villager;J)V c
	validPos (Lnet/minecraft/core/BlockPos;Lnet/minecraft/server/level/ServerLevel;)Z a
net/minecraft/world/entity/ai/behavior/InsideBrownianWalk ask
	speedModifier b
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)Z a
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/PathfinderMob;)Z a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/PathfinderMob;J)V a
net/minecraft/world/entity/ai/behavior/InteractWith asl
	interactionRangeSqr e
	maxDist b
	memory h
	selfFilter g
	speedModifier c
	targetFilter f
	type d
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)Z a
	isTargetValid (Lnet/minecraft/world/entity/LivingEntity;)Z b
	of (Lnet/minecraft/world/entity/EntityType;ILjava/util/function/Predicate;Lnet/minecraft/world/entity/ai/memory/MemoryModuleType;FI)Lnet/minecraft/world/entity/ai/behavior/InteractWith; a
	of (Lnet/minecraft/world/entity/EntityType;ILnet/minecraft/world/entity/ai/memory/MemoryModuleType;FI)Lnet/minecraft/world/entity/ai/behavior/InteractWith; a
	seesAtLeastOneValidTarget (Lnet/minecraft/world/entity/LivingEntity;)Z a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V a
net/minecraft/world/entity/ai/behavior/InteractWithDoor asm
	lastCheckedNode b
	remainingCooldown c
	areOtherMobsComingThroughDoor (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/core/BlockPos;)Z a
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)Z a
	closeDoorsThatIHaveOpenedOrPassedThrough (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/level/pathfinder/Node;Lnet/minecraft/world/level/pathfinder/Node;)V a
	isDoorTooFarAway (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/core/GlobalPos;)Z a
	isMobComingThroughDoor (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/core/BlockPos;)Z b
	rememberDoorToClose (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/core/BlockPos;)V c
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V a
net/minecraft/world/entity/ai/behavior/JumpOnBed asn
	remainingCooldownUntilNextJump f
	remainingJumps e
	remainingTimeToReachBed d
	speedModifier b
	targetBed c
	canStillUse (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)Z b
	canStillUse (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/Mob;J)Z c
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)Z a
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/Mob;)Z a
	getNearestBed (Lnet/minecraft/world/entity/Mob;)Ljava/util/Optional; a
	isBed (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;)Z a
	nearBed (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/Mob;)Z b
	onBedSurface (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/Mob;)Z d
	onOrOverBed (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/Mob;)Z c
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/Mob;J)V a
	startWalkingTowardsBed (Lnet/minecraft/world/entity/Mob;Lnet/minecraft/core/BlockPos;)V a
	stop (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V c
	stop (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/Mob;J)V b
	tick (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V d
	tick (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/Mob;J)V d
	timedOut (J)Z a
	tiredOfJumping (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/Mob;)Z f
	tiredOfWalking (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/Mob;)Z e
net/minecraft/world/entity/ai/behavior/LocateHidingPlace aso
	closeEnoughDist d
	currentPos e
	radius c
	speedModifier b
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)Z a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V a
net/minecraft/world/entity/ai/behavior/LocateHidingPlaceDuringRaid asp
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)Z a
net/minecraft/world/entity/ai/behavior/LookAndFollowTradingPlayerSink asq
	speedModifier b
	canStillUse (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)Z b
	canStillUse (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/npc/Villager;J)Z a
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)Z a
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/npc/Villager;)Z a
	followPlayer (Lnet/minecraft/world/entity/npc/Villager;)V a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/npc/Villager;J)V b
	stop (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V c
	stop (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/npc/Villager;J)V c
	tick (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V d
	tick (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/npc/Villager;J)V d
	timedOut (J)Z a
net/minecraft/world/entity/ai/behavior/LookAtTargetSink asr
	canStillUse (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)Z b
	canStillUse (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/Mob;J)Z a
	stop (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V c
	stop (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/Mob;J)V b
	tick (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V d
	tick (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/Mob;J)V c
net/minecraft/world/entity/ai/behavior/MeleeAttack ass
	cooldownBetweenAttacks b
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)Z a
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/Mob;)Z a
	getAttackTarget (Lnet/minecraft/world/entity/Mob;)Lnet/minecraft/world/entity/LivingEntity; b
	isHoldingUsableProjectileWeapon (Lnet/minecraft/world/entity/Mob;)Z a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/Mob;J)V a
net/minecraft/world/entity/ai/behavior/Mount ast
	speedModifier b
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)Z a
	getRidableEntity (Lnet/minecraft/world/entity/LivingEntity;)Lnet/minecraft/world/entity/Entity; b
	isCloseEnoughToStartRiding (Lnet/minecraft/world/entity/LivingEntity;)Z a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V a
net/minecraft/world/entity/ai/behavior/MoveToSkySeeingSpot asu
	speedModifier b
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)Z a
	getOutdoorPosition (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)Lnet/minecraft/world/phys/Vec3; b
	hasNoBlocksAbove (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/core/BlockPos;)Z a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V a
net/minecraft/world/entity/ai/behavior/MoveToTargetSink asv
	lastTargetPos d
	path c
	remainingCooldown b
	speedModifier e
	canStillUse (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)Z b
	canStillUse (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/Mob;J)Z a
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)Z a
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/Mob;)Z a
	reachedTarget (Lnet/minecraft/world/entity/Mob;Lnet/minecraft/world/entity/ai/memory/WalkTarget;)Z a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/Mob;J)V c
	stop (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V c
	stop (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/Mob;J)V b
	tick (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V d
	tick (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/Mob;J)V d
	tryComputePath (Lnet/minecraft/world/entity/Mob;Lnet/minecraft/world/entity/ai/memory/WalkTarget;J)Z a
net/minecraft/world/entity/ai/behavior/PlayTagWithOtherKids asw
	chaseKid (Lnet/minecraft/world/entity/PathfinderMob;Lnet/minecraft/world/entity/LivingEntity;)V a
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)Z a
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/PathfinderMob;)Z a
	checkHowManyChasersEachFriendHas (Lnet/minecraft/world/entity/PathfinderMob;)Ljava/util/Map; c
	findSomeoneBeingChased (Lnet/minecraft/world/entity/PathfinderMob;)Ljava/util/Optional; b
	findSomeoneToChase (Lnet/minecraft/world/entity/PathfinderMob;)Ljava/util/Optional; a
	fleeFromChaser (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/PathfinderMob;Lnet/minecraft/world/entity/LivingEntity;)V a
	getFriendsNearby (Lnet/minecraft/world/entity/PathfinderMob;)Ljava/util/List; d
	hasFriendsNearby (Lnet/minecraft/world/entity/PathfinderMob;)Z e
	isChasingSomeone (Lnet/minecraft/world/entity/LivingEntity;)Z c
	isFriendChasingMe (Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/entity/LivingEntity;)Z a
	seeIfSomeoneIsChasingMe (Lnet/minecraft/world/entity/LivingEntity;)Lnet/minecraft/world/entity/LivingEntity; b
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/PathfinderMob;J)V a
	whoAreYouChasing (Lnet/minecraft/world/entity/LivingEntity;)Lnet/minecraft/world/entity/LivingEntity; a
net/minecraft/world/entity/ai/behavior/PoiCompetitorScan asx
	profession b
	competesForSameJobsite (Lnet/minecraft/core/GlobalPos;Lnet/minecraft/world/entity/ai/village/poi/PoiType;Lnet/minecraft/world/entity/npc/Villager;)Z a
	hasJobSite (Lnet/minecraft/world/entity/npc/Villager;)Z a
	hasMatchingProfession (Lnet/minecraft/world/entity/ai/village/poi/PoiType;Lnet/minecraft/world/entity/npc/VillagerProfession;)Z a
	selectWinner (Lnet/minecraft/world/entity/npc/Villager;Lnet/minecraft/world/entity/npc/Villager;)Lnet/minecraft/world/entity/npc/Villager; a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/npc/Villager;J)V a
net/minecraft/world/entity/ai/behavior/PositionTracker asy
	currentBlockPosition ()Lnet/minecraft/core/BlockPos; b
	currentPosition ()Lnet/minecraft/world/phys/Vec3; a
	isVisibleBy (Lnet/minecraft/world/entity/LivingEntity;)Z a
net/minecraft/world/entity/ai/behavior/RandomStroll asz
	maxHorizontalDistance c
	maxVerticalDistance d
	speedModifier b
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/PathfinderMob;J)V a
net/minecraft/world/entity/ai/behavior/ReactToBell ata
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V a
net/minecraft/world/entity/ai/behavior/ResetProfession atb
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)Z a
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/npc/Villager;)Z a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/npc/Villager;J)V a
net/minecraft/world/entity/ai/behavior/ResetRaidStatus atc
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)Z a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V a
net/minecraft/world/entity/ai/behavior/RingBell atd
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)Z a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V a
net/minecraft/world/entity/ai/behavior/RunIf ate
	checkWhileRunningAlso d
	predicate b
	wrappedBehavior c
	canStillUse (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)Z b
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)Z a
	mergeMaps (Ljava/util/Map;Ljava/util/Map;)Ljava/util/Map; a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V a
	stop (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V c
	tick (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V d
	timedOut (J)Z a
net/minecraft/world/entity/ai/behavior/RunOne atf
net/minecraft/world/entity/ai/behavior/RunSometimes atg
	interval d
	resetTicks b
	ticksUntilNextStart f
	wasRunning c
	wrappedBehavior e
	canStillUse (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)Z b
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)Z a
	resetTicksUntilNextStart (Lnet/minecraft/server/level/ServerLevel;)V a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V a
	stop (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V c
	tick (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V d
	timedOut (J)Z a
net/minecraft/world/entity/ai/behavior/SetClosestHomeAsWalkTarget ath
	batchCache c
	lastUpdate e
	speedModifier b
	triedCount d
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)Z a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V a
net/minecraft/world/entity/ai/behavior/SetEntityLookTarget ati
	maxDistSqr c
	predicate b
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)Z a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V a
net/minecraft/world/entity/ai/behavior/SetHiddenState atj
	closeEnoughDist b
	stayHiddenTicks c
	ticksHidden d
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V a
net/minecraft/world/entity/ai/behavior/SetLookAndInteract atk
	interactionRangeSqr c
	selfFilter e
	targetFilter d
	type b
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)Z a
	getVisibleEntities (Lnet/minecraft/world/entity/LivingEntity;)Ljava/util/List; b
	isMatchingTarget (Lnet/minecraft/world/entity/LivingEntity;)Z a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V a
net/minecraft/world/entity/ai/behavior/SetRaidStatus atl
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)Z a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V a
net/minecraft/world/entity/ai/behavior/SetWalkTargetAwayFrom atm
	desiredDistance d
	speedModifier c
	toPosition e
	walkAwayFromMemory b
	alreadyWalkingAwayFromPosWithSameSpeed (Lnet/minecraft/world/entity/PathfinderMob;)Z b
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)Z a
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/PathfinderMob;)Z a
	entity (Lnet/minecraft/world/entity/ai/memory/MemoryModuleType;FIZ)Lnet/minecraft/world/entity/ai/behavior/SetWalkTargetAwayFrom; b
	getPosToAvoid (Lnet/minecraft/world/entity/PathfinderMob;)Lnet/minecraft/world/phys/Vec3; a
	moveAwayFrom (Lnet/minecraft/world/entity/PathfinderMob;Lnet/minecraft/world/phys/Vec3;F)V a
	pos (Lnet/minecraft/world/entity/ai/memory/MemoryModuleType;FIZ)Lnet/minecraft/world/entity/ai/behavior/SetWalkTargetAwayFrom; a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/PathfinderMob;J)V a
net/minecraft/world/entity/ai/behavior/SetWalkTargetFromAttackTargetIfTargetOutOfReach atn
	speedModifier b
	clearWalkTarget (Lnet/minecraft/world/entity/LivingEntity;)V a
	setWalkAndLookTarget (Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/entity/LivingEntity;)V a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/Mob;J)V a
net/minecraft/world/entity/ai/behavior/SetWalkTargetFromBlockMemory ato
	closeEnoughDist d
	memoryType b
	speedModifier c
	tooFarDistance e
	tooLongUnreachableDuration f
	closeEnough (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/npc/Villager;Lnet/minecraft/core/GlobalPos;)Z a
	dropPOI (Lnet/minecraft/world/entity/npc/Villager;J)V a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/npc/Villager;J)V a
	tiredOfTryingToFindTarget (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/npc/Villager;)Z a
	tooFar (Lnet/minecraft/world/entity/npc/Villager;Lnet/minecraft/core/GlobalPos;)Z a
	wrongDimension (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/GlobalPos;)Z a
net/minecraft/world/entity/ai/behavior/SetWalkTargetFromLookTarget atp
	closeEnoughDistance c
	speedModifier b
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V a
net/minecraft/world/entity/ai/behavior/ShowTradesToPlayer atq
	cycleCounter d
	displayIndex e
	displayItems c
	lookTime f
	playerItemStack b
	canStillUse (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)Z b
	canStillUse (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/npc/Villager;J)Z a
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)Z a
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/npc/Villager;)Z a
	displayCyclingItems (Lnet/minecraft/world/entity/npc/Villager;)V d
	displayFirstItem (Lnet/minecraft/world/entity/npc/Villager;)V a
	findItemsToDisplay (Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/entity/npc/Villager;)V a
	lookAtTarget (Lnet/minecraft/world/entity/npc/Villager;)Lnet/minecraft/world/entity/LivingEntity; c
	playerItemStackMatchesCostOfOffer (Lnet/minecraft/world/item/trading/MerchantOffer;)Z a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/npc/Villager;J)V b
	stop (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V c
	stop (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/npc/Villager;J)V d
	tick (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V d
	tick (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/npc/Villager;J)V c
	updateDisplayItems (Lnet/minecraft/world/entity/npc/Villager;)V b
net/minecraft/world/entity/ai/behavior/SleepInBed atr
	nextOkStartTime b
	canStillUse (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)Z b
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)Z a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V a
	stop (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V c
	timedOut (J)Z a
net/minecraft/world/entity/ai/behavior/SocializeAtBell ats
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)Z a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V a
net/minecraft/world/entity/ai/behavior/StartAttacking att
	canAttackPredicate b
	targetFinderFunction c
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)Z a
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/Mob;)Z a
	setAttackTarget (Lnet/minecraft/world/entity/Mob;Lnet/minecraft/world/entity/LivingEntity;)V a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/Mob;J)V a
net/minecraft/world/entity/ai/behavior/StartCelebratingIfTargetDead atu
	celebrateDuration b
	dancePredicate c
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)Z a
	getAttackTarget (Lnet/minecraft/world/entity/LivingEntity;)Lnet/minecraft/world/entity/LivingEntity; a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V a
net/minecraft/world/entity/ai/behavior/StopAttackingIfTargetInvalid atv
	stopAttackingWhen b
	clearAttackTarget (Lnet/minecraft/world/entity/Mob;)V d
	getAttackTarget (Lnet/minecraft/world/entity/Mob;)Lnet/minecraft/world/entity/LivingEntity; b
	isCurrentTargetDeadOrRemoved (Lnet/minecraft/world/entity/Mob;)Z c
	isCurrentTargetInDifferentLevel (Lnet/minecraft/world/entity/Mob;)Z a
	isTiredOfTryingToReachTarget (Lnet/minecraft/world/entity/LivingEntity;)Z a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/Mob;J)V a
net/minecraft/world/entity/ai/behavior/StopBeingAngryIfTargetDead atw
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/Mob;J)V a
net/minecraft/world/entity/ai/behavior/StrollAroundPoi atx
	maxDistanceFromPoi d
	memoryType b
	nextOkStartTime c
	speedModifier e
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)Z a
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/PathfinderMob;)Z a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/PathfinderMob;J)V a
net/minecraft/world/entity/ai/behavior/StrollToPoi aty
	closeEnoughDist c
	maxDistanceFromPoi d
	memoryType b
	nextOkStartTime f
	speedModifier e
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)Z a
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/PathfinderMob;)Z a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/PathfinderMob;J)V a
net/minecraft/world/entity/ai/behavior/StrollToPoiList atz
	closeEnoughDist e
	maxDistanceFromPoi f
	mustBeCloseToMemoryType c
	nextOkStartTime g
	speedModifier d
	strollToMemoryType b
	targetPos h
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)Z a
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/npc/Villager;)Z a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/npc/Villager;J)V a
net/minecraft/world/entity/ai/behavior/Swim aua
	chance b
	canStillUse (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)Z b
	canStillUse (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/Mob;J)Z a
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)Z a
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/Mob;)Z a
	tick (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V d
	tick (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/Mob;J)V b
net/minecraft/world/entity/ai/behavior/TradeWithVillager aub
	trades b
	canStillUse (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)Z b
	canStillUse (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/npc/Villager;J)Z a
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)Z a
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/npc/Villager;)Z a
	figureOutWhatIAmWillingToTrade (Lnet/minecraft/world/entity/npc/Villager;Lnet/minecraft/world/entity/npc/Villager;)Ljava/util/Set; a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/npc/Villager;J)V b
	stop (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V c
	stop (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/npc/Villager;J)V d
	throwHalfStack (Lnet/minecraft/world/entity/npc/Villager;Ljava/util/Set;Lnet/minecraft/world/entity/LivingEntity;)V a
	tick (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V d
	tick (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/npc/Villager;J)V c
net/minecraft/world/entity/ai/behavior/UpdateActivityFromSchedule auc
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V a
net/minecraft/world/entity/ai/behavior/UseBonemeal aud
	cropPos e
	lastBonemealingSession c
	nextWorkCycleTime b
	timeWorkedSoFar d
	canStillUse (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)Z b
	canStillUse (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/npc/Villager;J)Z a
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)Z a
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/npc/Villager;)Z a
	pickNextTarget (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/npc/Villager;)Ljava/util/Optional; b
	setCurrentCropAsTarget (Lnet/minecraft/world/entity/npc/Villager;)V a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/npc/Villager;J)V b
	stop (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V c
	stop (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/npc/Villager;J)V c
	tick (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V d
	tick (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/npc/Villager;J)V d
	validPos (Lnet/minecraft/core/BlockPos;Lnet/minecraft/server/level/ServerLevel;)Z a
net/minecraft/world/entity/ai/behavior/ValidateNearbyPoi aue
	memoryType b
	poiPredicate c
	bedIsOccupied (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/LivingEntity;)Z a
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)Z a
	poiDoesntExist (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;)Z a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V a
net/minecraft/world/entity/ai/behavior/VictoryStroll auf
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)Z a
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/PathfinderMob;)Z a
net/minecraft/world/entity/ai/behavior/VillageBoundRandomStroll aug
	maxXyDist c
	maxYDist d
	speedModifier b
	setRandomPos (Lnet/minecraft/world/entity/PathfinderMob;)V a
	setTargetedPos (Lnet/minecraft/world/entity/PathfinderMob;Lnet/minecraft/core/SectionPos;)V a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/PathfinderMob;J)V a
net/minecraft/world/entity/ai/behavior/VillagerCalmDown auh
	isCloseToEntityThatHurtMe (Lnet/minecraft/world/entity/npc/Villager;)Z a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/npc/Villager;J)V a
net/minecraft/world/entity/ai/behavior/VillagerGoalPackages aui
	getCorePackage (Lnet/minecraft/world/entity/npc/VillagerProfession;F)Lcom/google/common/collect/ImmutableList; a
	getFullLookBehavior ()Lcom/mojang/datafixers/util/Pair; a
	getHidePackage (Lnet/minecraft/world/entity/npc/VillagerProfession;F)Lcom/google/common/collect/ImmutableList; i
	getIdlePackage (Lnet/minecraft/world/entity/npc/VillagerProfession;F)Lcom/google/common/collect/ImmutableList; e
	getMeetPackage (Lnet/minecraft/world/entity/npc/VillagerProfession;F)Lcom/google/common/collect/ImmutableList; d
	getMinimalLookBehavior ()Lcom/mojang/datafixers/util/Pair; b
	getPanicPackage (Lnet/minecraft/world/entity/npc/VillagerProfession;F)Lcom/google/common/collect/ImmutableList; f
	getPlayPackage (F)Lcom/google/common/collect/ImmutableList; a
	getPreRaidPackage (Lnet/minecraft/world/entity/npc/VillagerProfession;F)Lcom/google/common/collect/ImmutableList; g
	getRaidPackage (Lnet/minecraft/world/entity/npc/VillagerProfession;F)Lcom/google/common/collect/ImmutableList; h
	getRestPackage (Lnet/minecraft/world/entity/npc/VillagerProfession;F)Lcom/google/common/collect/ImmutableList; c
	getWorkPackage (Lnet/minecraft/world/entity/npc/VillagerProfession;F)Lcom/google/common/collect/ImmutableList; b
net/minecraft/world/entity/ai/behavior/VillagerMakeLove auj
	birthTimestamp b
	breed (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/npc/Villager;Lnet/minecraft/world/entity/npc/Villager;)Ljava/util/Optional; b
	canReach (Lnet/minecraft/world/entity/npc/Villager;Lnet/minecraft/core/BlockPos;)Z a
	canStillUse (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)Z b
	canStillUse (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/npc/Villager;J)Z a
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)Z a
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/npc/Villager;)Z a
	giveBedToChild (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/npc/Villager;Lnet/minecraft/core/BlockPos;)V a
	isBreedingPossible (Lnet/minecraft/world/entity/npc/Villager;)Z a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/npc/Villager;J)V b
	stop (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V c
	stop (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/npc/Villager;J)V d
	takeVacantBed (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/npc/Villager;)Ljava/util/Optional; b
	tick (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V d
	tick (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/npc/Villager;J)V c
	tryToGiveBirth (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/npc/Villager;Lnet/minecraft/world/entity/npc/Villager;)V a
net/minecraft/world/entity/ai/behavior/VillagerPanicTrigger auk
	canStillUse (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)Z b
	canStillUse (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/npc/Villager;J)Z a
	hasHostile (Lnet/minecraft/world/entity/LivingEntity;)Z a
	isHurt (Lnet/minecraft/world/entity/LivingEntity;)Z b
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/npc/Villager;J)V b
	tick (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V d
	tick (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/npc/Villager;J)V c
net/minecraft/world/entity/ai/behavior/WakeUp aul
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)Z a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V a
net/minecraft/world/entity/ai/behavior/WeightedList aum
	entries a
	random b
	add (Ljava/lang/Object;I)Lnet/minecraft/world/entity/ai/behavior/WeightedList; a
	codec (Lcom/mojang/serialization/Codec;)Lcom/mojang/serialization/Codec; a
	getOne ()Ljava/lang/Object; d
	getOne (Ljava/util/Random;)Ljava/lang/Object; b
	isEmpty ()Z b
	shuffle ()Lnet/minecraft/world/entity/ai/behavior/WeightedList; a
	shuffle (Ljava/util/Random;)Lnet/minecraft/world/entity/ai/behavior/WeightedList; a
	stream ()Ljava/util/stream/Stream; c
net/minecraft/world/entity/ai/behavior/WeightedList$WeightedEntry aum$a
	data a
	randWeight c
	weight b
	codec (Lcom/mojang/serialization/Codec;)Lcom/mojang/serialization/Codec; a
	getData ()Ljava/lang/Object; a
	getRandWeight ()D c
	getWeight ()I b
	setRandom (F)V a
net/minecraft/world/entity/ai/behavior/WorkAtComposter aun
	COMPOSTABLE_ITEMS b
	compostItems (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/npc/Villager;Lnet/minecraft/core/GlobalPos;Lnet/minecraft/world/level/block/state/BlockState;)V a
	makeBread (Lnet/minecraft/world/entity/npc/Villager;)V a
	spawnComposterFillEffects (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V a
	useWorkstation (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/npc/Villager;)V a
net/minecraft/world/entity/ai/behavior/WorkAtPoi auo
	lastCheck b
	canStillUse (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)Z b
	canStillUse (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/npc/Villager;J)Z b
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)Z a
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/npc/Villager;)Z b
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/npc/Villager;J)V a
	useWorkstation (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/npc/Villager;)V a
net/minecraft/world/entity/ai/behavior/YieldJobSite aup
	speedModifier b
	canReachPos (Lnet/minecraft/world/entity/npc/Villager;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/ai/village/poi/PoiType;)Z a
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)Z a
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/npc/Villager;)Z a
	eraseMemories (Lnet/minecraft/world/entity/npc/Villager;)V a
	nearbyWantsJobsite (Lnet/minecraft/world/entity/ai/village/poi/PoiType;Lnet/minecraft/world/entity/npc/Villager;Lnet/minecraft/core/BlockPos;)Z a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/npc/Villager;J)V a
	yieldJobSite (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/npc/Villager;Lnet/minecraft/world/entity/npc/Villager;Lnet/minecraft/core/BlockPos;Z)V a
net/minecraft/world/entity/ai/control/BodyRotationControl aur
	headStableTime b
	lastStableYHeadRot c
	mob a
	clientTick ()V a
	isMoving ()Z f
	notCarryingMobPassengers ()Z e
	rotateBodyIfNecessary ()V b
	rotateHeadIfNecessary ()V c
	rotateHeadTowardsFront ()V d
net/minecraft/world/entity/ai/control/Control aus
net/minecraft/world/entity/ai/control/DolphinLookControl aut
	maxYRotFromCenter h
	tick ()V a
net/minecraft/world/entity/ai/control/FlyingMoveControl auu
	hoversInPlace j
	maxTurn i
	tick ()V a
net/minecraft/world/entity/ai/control/JumpControl auv
	jump a
	mob b
	jump ()V a
	tick ()V b
net/minecraft/world/entity/ai/control/LookControl auw
	hasWanted d
	mob a
	wantedX e
	wantedY f
	wantedZ g
	xMaxRotAngle c
	yMaxRotSpeed b
	getWantedX ()D d
	getWantedY ()D e
	getWantedY (Lnet/minecraft/world/entity/Entity;)D b
	getWantedZ ()D f
	getXRotD ()F g
	getYRotD ()F h
	isHasWanted ()Z c
	resetXRotOnTick ()Z b
	rotateTowards (FFF)F a
	setLookAt (DDD)V a
	setLookAt (DDDFF)V a
	setLookAt (Lnet/minecraft/world/entity/Entity;)V a
	setLookAt (Lnet/minecraft/world/entity/Entity;FF)V a
	setLookAt (Lnet/minecraft/world/phys/Vec3;)V a
	tick ()V a
net/minecraft/world/entity/ai/control/MoveControl auy
	mob a
	operation h
	speedModifier e
	strafeForwards f
	strafeRight g
	wantedX b
	wantedY c
	wantedZ d
	copyFrom (Lnet/minecraft/world/entity/ai/control/MoveControl;)V a
	getSpeedModifier ()D c
	getWantedX ()D d
	getWantedY ()D e
	getWantedZ ()D f
	hasWanted ()Z b
	isWalkable (FF)Z b
	rotlerp (FFF)F a
	setWantedPosition (DDDD)V a
	strafe (FF)V a
	tick ()V a
net/minecraft/world/entity/ai/control/MoveControl$Operation auy$a
	$VALUES e
	JUMPING d
	MOVE_TO b
	STRAFE c
	WAIT a
net/minecraft/world/entity/ai/goal/AvoidEntityGoal ava
	avoidClass f
	avoidEntityTargeting k
	avoidPredicate g
	maxDist c
	mob a
	path d
	pathNav e
	predicateOnAvoidEntity h
	sprintSpeedModifier j
	toAvoid b
	walkSpeedModifier i
	canContinueToUse ()Z b
	canUse ()Z a
	start ()V c
	stop ()V d
	tick ()V e
net/minecraft/world/entity/ai/goal/BegGoal avb
	begTargeting f
	level c
	lookDistance d
	lookTime e
	player b
	wolf a
	canContinueToUse ()Z b
	canUse ()Z a
	playerHoldingInteresting (Lnet/minecraft/world/entity/player/Player;)Z a
	start ()V c
	stop ()V d
	tick ()V e
net/minecraft/world/entity/ai/goal/BoatGoals avc
	$VALUES c
	GO_IN_BOAT_DIRECTION b
	GO_TO_BOAT a
net/minecraft/world/entity/ai/goal/BreakDoorGoal avd
	breakTime a
	doorBreakTime c
	lastBreakProgress b
	validDifficulties g
	canContinueToUse ()Z b
	canUse ()Z a
	getDoorBreakTime ()I f
	isValidDifficulty (Lnet/minecraft/world/Difficulty;)Z a
	start ()V c
	stop ()V d
	tick ()V e
net/minecraft/world/entity/ai/goal/BreathAirGoal ave
	mob a
	canContinueToUse ()Z b
	canUse ()Z a
	findAirPosition ()V g
	givesAir (Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;)Z a
	isInterruptable ()Z C_
	start ()V c
	tick ()V e
net/minecraft/world/entity/ai/goal/BreedGoal avf
	PARTNER_TARGETING d
	animal a
	level b
	loveTime f
	partner c
	partnerClass e
	speedModifier g
	breed ()V g
	canContinueToUse ()Z b
	canUse ()Z a
	getFreePartner ()Lnet/minecraft/world/entity/animal/Animal; h
	stop ()V d
	tick ()V e
net/minecraft/world/entity/ai/goal/CatLieOnBedGoal avg
	cat g
	canUse ()Z a
	isValidTarget (Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;)Z a
	nextStartTick (Lnet/minecraft/world/entity/PathfinderMob;)I a
	start ()V c
	stop ()V d
	tick ()V e
net/minecraft/world/entity/ai/goal/CatSitOnBlockGoal avh
	cat g
	canUse ()Z a
	isValidTarget (Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;)Z a
	start ()V c
	stop ()V d
	tick ()V e
net/minecraft/world/entity/ai/goal/DolphinJumpGoal avi
	STEPS_TO_CHECK a
	breached d
	dolphin b
	interval c
	canContinueToUse ()Z b
	canUse ()Z a
	isInterruptable ()Z C_
	start ()V c
	stop ()V d
	surfaceIsClear (Lnet/minecraft/core/BlockPos;III)Z b
	tick ()V e
	waterIsClear (Lnet/minecraft/core/BlockPos;III)Z a
net/minecraft/world/entity/ai/goal/DoorInteractGoal avj
	doorOpenDirX b
	doorOpenDirZ c
	doorPos e
	hasDoor f
	mob d
	passed a
	canContinueToUse ()Z b
	canUse ()Z a
	isOpen ()Z g
	setOpen (Z)V a
	start ()V c
	tick ()V e
net/minecraft/world/entity/ai/goal/EatBlockGoal avk
	IS_TALL_GRASS a
	eatAnimationTick d
	level c
	mob b
	canContinueToUse ()Z b
	canUse ()Z a
	getEatAnimationTick ()I g
	start ()V c
	stop ()V d
	tick ()V e
net/minecraft/world/entity/ai/goal/FleeSunGoal avl
	level f
	mob a
	speedModifier e
	wantedX b
	wantedY c
	wantedZ d
	canContinueToUse ()Z b
	canUse ()Z a
	getHidePos ()Lnet/minecraft/world/phys/Vec3; h
	setWantedPos ()Z g
	start ()V c
net/minecraft/world/entity/ai/goal/FloatGoal avm
	mob a
	canUse ()Z a
	tick ()V e
net/minecraft/world/entity/ai/goal/FollowBoatGoal avn
	currentGoal d
	following c
	mob b
	timeToRecalcPath a
	canContinueToUse ()Z b
	canUse ()Z a
	isInterruptable ()Z C_
	start ()V c
	stop ()V d
	tick ()V e
net/minecraft/world/entity/ai/goal/FollowFlockLeaderGoal avo
	mob a
	nextStartTick c
	timeToRecalcPath b
	canContinueToUse ()Z b
	canUse ()Z a
	nextStartTick (Lnet/minecraft/world/entity/animal/AbstractSchoolingFish;)I a
	start ()V c
	stop ()V d
	tick ()V e
net/minecraft/world/entity/ai/goal/FollowMobGoal avp
	areaSize i
	followPredicate b
	followingMob c
	mob a
	navigation e
	oldWaterCost h
	speedModifier d
	stopDistance g
	timeToRecalcPath f
	canContinueToUse ()Z b
	canUse ()Z a
	start ()V c
	stop ()V d
	tick ()V e
net/minecraft/world/entity/ai/goal/FollowOwnerGoal avq
	canFly j
	level c
	navigation e
	oldWaterCost i
	owner b
	speedModifier d
	startDistance h
	stopDistance g
	tamable a
	timeToRecalcPath f
	canContinueToUse ()Z b
	canTeleportTo (Lnet/minecraft/core/BlockPos;)Z a
	canUse ()Z a
	maybeTeleportTo (III)Z a
	randomIntInclusive (II)I a
	start ()V c
	stop ()V d
	teleportToOwner ()V g
	tick ()V e
net/minecraft/world/entity/ai/goal/FollowParentGoal avr
	animal a
	parent b
	speedModifier c
	timeToRecalcPath d
	canContinueToUse ()Z b
	canUse ()Z a
	start ()V c
	stop ()V d
	tick ()V e
net/minecraft/world/entity/ai/goal/Goal avs
	flags a
	canContinueToUse ()Z b
	canUse ()Z a
	getFlags ()Ljava/util/EnumSet; i
	isInterruptable ()Z C_
	setFlags (Ljava/util/EnumSet;)V a
	start ()V c
	stop ()V d
	tick ()V e
net/minecraft/world/entity/ai/goal/Goal$Flag avs$a
	$VALUES e
	JUMP c
	LOOK b
	MOVE a
	TARGET d
net/minecraft/world/entity/ai/goal/GoalSelector avt
	LOGGER a
	NO_GOAL b
	availableGoals d
	disabledFlags f
	lockedFlags c
	newGoalRate g
	profiler e
	addGoal (ILnet/minecraft/world/entity/ai/goal/Goal;)V a
	disableControlFlag (Lnet/minecraft/world/entity/ai/goal/Goal$Flag;)V a
	enableControlFlag (Lnet/minecraft/world/entity/ai/goal/Goal$Flag;)V b
	getAvailableGoals ()Ljava/util/Set; c
	getRunningGoals ()Ljava/util/stream/Stream; d
	removeAllGoals ()V a
	removeGoal (Lnet/minecraft/world/entity/ai/goal/Goal;)V a
	setControlFlag (Lnet/minecraft/world/entity/ai/goal/Goal$Flag;Z)V a
	setNewGoalRate (I)V a
	tick ()V b
net/minecraft/world/entity/ai/goal/GolemRandomStrollInVillageGoal avu
	doesVillagerWantGolem (Lnet/minecraft/world/entity/npc/Villager;)Z a
	getPosition ()Lnet/minecraft/world/phys/Vec3; g
	getPositionTowardsAnywhere ()Lnet/minecraft/world/phys/Vec3; j
	getPositionTowardsPoi ()Lnet/minecraft/world/phys/Vec3; l
	getPositionTowardsVillagerWhoWantsGolem ()Lnet/minecraft/world/phys/Vec3; k
	getRandomPoiWithinSection (Lnet/minecraft/core/SectionPos;)Lnet/minecraft/core/BlockPos; a
	getRandomVillageSection ()Lnet/minecraft/core/SectionPos; m
net/minecraft/world/entity/ai/goal/InteractGoal avv
net/minecraft/world/entity/ai/goal/JumpGoal avw
net/minecraft/world/entity/ai/goal/LandOnOwnersShoulderGoal avx
	entity a
	isSittingOnShoulder c
	owner b
	canUse ()Z a
	isInterruptable ()Z C_
	start ()V c
	tick ()V e
net/minecraft/world/entity/ai/goal/LeapAtTargetGoal avy
	mob a
	target b
	yd c
	canContinueToUse ()Z b
	canUse ()Z a
	start ()V c
net/minecraft/world/entity/ai/goal/LlamaFollowCaravanGoal avz
	distCheckCounter c
	llama a
	speedModifier b
	canContinueToUse ()Z b
	canUse ()Z a
	firstIsLeashed (Lnet/minecraft/world/entity/animal/horse/Llama;I)Z a
	stop ()V d
	tick ()V e
net/minecraft/world/entity/ai/goal/LookAtPlayerGoal awa
	lookAt b
	lookAtContext f
	lookAtType e
	lookDistance c
	lookTime g
	mob a
	probability d
	canContinueToUse ()Z b
	canUse ()Z a
	start ()V c
	stop ()V d
	tick ()V e
net/minecraft/world/entity/ai/goal/LookAtTradingPlayerGoal awb
	villager g
	canUse ()Z a
net/minecraft/world/entity/ai/goal/MeleeAttackGoal awc
	attackInterval j
	followingTargetEvenIfNotSeen c
	lastCanUseCheck k
	mob a
	path d
	pathedTargetX e
	pathedTargetY f
	pathedTargetZ g
	speedModifier b
	ticksUntilNextAttack i
	ticksUntilNextPathRecalculation h
	canContinueToUse ()Z b
	canUse ()Z a
	checkAndPerformAttack (Lnet/minecraft/world/entity/LivingEntity;D)V a
	getAttackInterval ()I k
	getAttackReachSqr (Lnet/minecraft/world/entity/LivingEntity;)D a
	getTicksUntilNextAttack ()I j
	isTimeToAttack ()Z h
	resetAttackCooldown ()V g
	start ()V c
	stop ()V d
	tick ()V e
net/minecraft/world/entity/ai/goal/MoveBackToVillageGoal awd
	canUse ()Z a
	getPosition ()Lnet/minecraft/world/phys/Vec3; g
net/minecraft/world/entity/ai/goal/MoveIndoorsGoal awe
	insideX b
	insideZ c
	mob a
	canContinueToUse ()Z b
	canUse ()Z a
	isInside ()Z g
	start ()V c
	stop ()V d
net/minecraft/world/entity/ai/goal/MoveThroughVillageGoal awf
	canDealWithDoors h
	distanceToPoi g
	mob a
	onlyAtNight e
	path c
	poiPos d
	speedModifier b
	visited f
	canContinueToUse ()Z b
	canUse ()Z a
	hasNotVisited (Lnet/minecraft/core/BlockPos;)Z a
	start ()V c
	stop ()V d
	updateVisited ()V g
net/minecraft/world/entity/ai/goal/MoveToBlockGoal awg
	blockPos e
	maxStayTicks g
	mob a
	nextStartTick c
	reachedTarget h
	searchRange i
	speedModifier b
	tryTicks d
	verticalSearchRange j
	verticalSearchStart f
	acceptedDistance ()D h
	canContinueToUse ()Z b
	canUse ()Z a
	findNearestBlock ()Z m
	getMoveToTarget ()Lnet/minecraft/core/BlockPos; j
	isReachedTarget ()Z l
	isValidTarget (Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;)Z a
	moveMobToBlock ()V g
	nextStartTick (Lnet/minecraft/world/entity/PathfinderMob;)I a
	shouldRecalculatePath ()Z k
	start ()V c
	tick ()V e
net/minecraft/world/entity/ai/goal/MoveTowardsRestrictionGoal awh
	mob a
	speedModifier e
	wantedX b
	wantedY c
	wantedZ d
	canContinueToUse ()Z b
	canUse ()Z a
	start ()V c
net/minecraft/world/entity/ai/goal/MoveTowardsTargetGoal awi
	mob a
	speedModifier f
	target b
	wantedX c
	wantedY d
	wantedZ e
	within g
	canContinueToUse ()Z b
	canUse ()Z a
	start ()V c
	stop ()V d
net/minecraft/world/entity/ai/goal/OcelotAttackGoal awj
	attackTime d
	level a
	mob b
	target c
	canContinueToUse ()Z b
	canUse ()Z a
	stop ()V d
	tick ()V e
net/minecraft/world/entity/ai/goal/OfferFlowerGoal awk
	OFFER_TARGER_CONTEXT a
	golem b
	tick d
	villager c
	canContinueToUse ()Z b
	canUse ()Z a
	start ()V c
	stop ()V d
	tick ()V e
net/minecraft/world/entity/ai/goal/OpenDoorGoal awl
	closeDoor a
	forgetTime b
	canContinueToUse ()Z b
	start ()V c
	stop ()V d
	tick ()V e
net/minecraft/world/entity/ai/goal/PanicGoal awm
	isRunning f
	mob a
	posX c
	posY d
	posZ e
	speedModifier b
	canContinueToUse ()Z b
	canUse ()Z a
	findRandomPosition ()Z g
	isRunning ()Z h
	lookForWater (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/world/entity/Entity;II)Lnet/minecraft/core/BlockPos; a
	start ()V c
	stop ()V d
net/minecraft/world/entity/ai/goal/PathfindToRaidGoal awn
	mob a
	canContinueToUse ()Z b
	canUse ()Z a
	recruitNearby (Lnet/minecraft/world/entity/raid/Raid;)V a
	tick ()V e
net/minecraft/world/entity/ai/goal/PlayGoal awo
	followFriend b
	mob a
	playTime d
	speedModifier c
	canContinueToUse ()Z b
	canUse ()Z a
	start ()V c
	stop ()V d
	tick ()V e
net/minecraft/world/entity/ai/goal/RandomLookAroundGoal awp
	lookTime d
	mob a
	relX b
	relZ c
	canContinueToUse ()Z b
	canUse ()Z a
	start ()V c
	tick ()V e
net/minecraft/world/entity/ai/goal/RandomStrollGoal awq
	checkNoActionTime h
	forceTrigger g
	interval f
	mob a
	speedModifier e
	wantedX b
	wantedY c
	wantedZ d
	canContinueToUse ()Z b
	canUse ()Z a
	getPosition ()Lnet/minecraft/world/phys/Vec3; g
	setInterval (I)V a
	start ()V c
	stop ()V d
	trigger ()V h
net/minecraft/world/entity/ai/goal/RandomSwimmingGoal awr
	getPosition ()Lnet/minecraft/world/phys/Vec3; g
net/minecraft/world/entity/ai/goal/RangedAttackGoal aws
	attackIntervalMax h
	attackIntervalMin g
	attackRadius i
	attackRadiusSqr j
	attackTime d
	mob a
	rangedAttackMob b
	seeTime f
	speedModifier e
	target c
	canContinueToUse ()Z b
	canUse ()Z a
	stop ()V d
	tick ()V e
net/minecraft/world/entity/ai/goal/RangedBowAttackGoal awt
	attackIntervalMin c
	attackRadiusSqr d
	attackTime e
	mob a
	seeTime f
	speedModifier b
	strafingBackwards h
	strafingClockwise g
	strafingTime i
	canContinueToUse ()Z b
	canUse ()Z a
	isHoldingBow ()Z g
	setMinAttackInterval (I)V a
	start ()V c
	stop ()V d
	tick ()V e
net/minecraft/world/entity/ai/goal/RangedCrossbowAttackGoal awu
	PATHFINDING_DELAY_RANGE a
	attackDelay g
	attackRadiusSqr e
	crossbowState c
	mob b
	seeTime f
	speedModifier d
	updatePathDelay h
	canContinueToUse ()Z b
	canRun ()Z j
	canUse ()Z a
	isHoldingCrossbow ()Z g
	isValidTarget ()Z h
	stop ()V d
	tick ()V e
net/minecraft/world/entity/ai/goal/RangedCrossbowAttackGoal$CrossbowState awu$a
	$VALUES e
	CHARGED c
	CHARGING b
	READY_TO_ATTACK d
	UNCHARGED a
net/minecraft/world/entity/ai/goal/RemoveBlockGoal awv
	blockToRemove g
	removerMob h
	ticksSinceReachedGoal i
	canUse ()Z a
	getPosWithBlock (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/BlockGetter;)Lnet/minecraft/core/BlockPos; a
	isValidTarget (Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;)Z a
	playBreakSound (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)V a
	playDestroyProgressSound (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;)V a
	start ()V c
	stop ()V d
	tick ()V e
	tryFindBlock ()Z n
net/minecraft/world/entity/ai/goal/RestrictSunGoal aww
	mob a
	canUse ()Z a
	start ()V c
	stop ()V d
net/minecraft/world/entity/ai/goal/RunAroundLikeCrazyGoal awx
	horse a
	posX c
	posY d
	posZ e
	speedModifier b
	canContinueToUse ()Z b
	canUse ()Z a
	start ()V c
	tick ()V e
net/minecraft/world/entity/ai/goal/SitWhenOrderedToGoal awy
	mob a
	canContinueToUse ()Z b
	canUse ()Z a
	start ()V c
	stop ()V d
net/minecraft/world/entity/ai/goal/StrollThroughVillageGoal awz
	interval b
	mob a
	wantedPos c
	canContinueToUse ()Z b
	canUse ()Z a
	moveRandomly ()V g
	tick ()V e
net/minecraft/world/entity/ai/goal/SwellGoal axa
	creeper a
	target b
	canUse ()Z a
	start ()V c
	stop ()V d
	tick ()V e
net/minecraft/world/entity/ai/goal/TakeFlowerGoal axb
	golem b
	pickupTick c
	takeFlower d
	villager a
	canContinueToUse ()Z b
	canUse ()Z a
	start ()V c
	stop ()V d
	tick ()V e
net/minecraft/world/entity/ai/goal/TemptGoal axc
	TEMP_TARGETING c
	calmDown j
	canScare m
	isRunning k
	items l
	mob a
	pRotX h
	pRotY i
	player b
	px e
	py f
	pz g
	speedModifier d
	canContinueToUse ()Z b
	canScare ()Z g
	canUse ()Z a
	isRunning ()Z h
	shouldFollowItem (Lnet/minecraft/world/item/ItemStack;)Z a
	start ()V c
	stop ()V d
	tick ()V e
net/minecraft/world/entity/ai/goal/TradeWithPlayerGoal axd
	mob a
	canUse ()Z a
	start ()V c
	stop ()V d
net/minecraft/world/entity/ai/goal/TryFindWaterGoal axe
	mob a
	canUse ()Z a
	start ()V c
net/minecraft/world/entity/ai/goal/UseItemGoal axf
	canUseSelector c
	finishUsingSound d
	item b
	mob a
	canContinueToUse ()Z b
	canUse ()Z a
	start ()V c
	stop ()V d
net/minecraft/world/entity/ai/goal/WaterAvoidingRandomFlyingGoal axg
	getPosition ()Lnet/minecraft/world/phys/Vec3; g
	getTreePos ()Lnet/minecraft/world/phys/Vec3; j
net/minecraft/world/entity/ai/goal/WaterAvoidingRandomStrollGoal axh
	probability h
	getPosition ()Lnet/minecraft/world/phys/Vec3; g
net/minecraft/world/entity/ai/goal/WrappedGoal axi
	goal a
	isRunning c
	priority b
	canBeReplacedBy (Lnet/minecraft/world/entity/ai/goal/WrappedGoal;)Z a
	canContinueToUse ()Z b
	canUse ()Z a
	getFlags ()Ljava/util/EnumSet; i
	getGoal ()Lnet/minecraft/world/entity/ai/goal/Goal; j
	getPriority ()I h
	isInterruptable ()Z C_
	isRunning ()Z g
	setFlags (Ljava/util/EnumSet;)V a
	start ()V c
	stop ()V d
	tick ()V e
net/minecraft/world/entity/ai/goal/ZombieAttackGoal axj
	raiseArmTicks c
	zombie b
	start ()V c
	stop ()V d
	tick ()V e
net/minecraft/world/entity/ai/goal/target/DefendVillageTargetGoal axl
	attackTargeting c
	golem a
	potentialTarget b
	canUse ()Z a
	start ()V c
net/minecraft/world/entity/ai/goal/target/HurtByTargetGoal axm
	HURT_BY_TARGETING a
	alertSameType b
	timestamp c
	toIgnoreAlert i
	toIgnoreDamage d
	alertOther (Lnet/minecraft/world/entity/Mob;Lnet/minecraft/world/entity/LivingEntity;)V a
	alertOthers ()V g
	canUse ()Z a
	setAlertOthers ([Ljava/lang/Class;)Lnet/minecraft/world/entity/ai/goal/target/HurtByTargetGoal; a
	start ()V c
net/minecraft/world/entity/ai/goal/target/NearestAttackableTargetGoal axn
	randomInterval b
	target c
	targetConditions d
	targetType a
	canUse ()Z a
	findTarget ()V g
	getTargetSearchArea (D)Lnet/minecraft/world/phys/AABB; a
	setTarget (Lnet/minecraft/world/entity/LivingEntity;)V a
	start ()V c
net/minecraft/world/entity/ai/goal/target/NearestAttackableWitchTargetGoal axo
	canAttack i
	canUse ()Z a
	setCanAttack (Z)V a
net/minecraft/world/entity/ai/goal/target/NearestHealableRaiderTargetGoal axp
	cooldown i
	canUse ()Z a
	decrementCooldown ()V j
	getCooldown ()I h
	start ()V c
net/minecraft/world/entity/ai/goal/target/NonTameRandomTargetGoal axq
	tamableMob i
	canContinueToUse ()Z b
	canUse ()Z a
net/minecraft/world/entity/ai/goal/target/OwnerHurtByTargetGoal axr
	ownerLastHurtBy b
	tameAnimal a
	timestamp c
	canUse ()Z a
	start ()V c
net/minecraft/world/entity/ai/goal/target/OwnerHurtTargetGoal axs
	ownerLastHurt b
	tameAnimal a
	timestamp c
	canUse ()Z a
	start ()V c
net/minecraft/world/entity/ai/goal/target/ResetUniversalAngerTargetGoal axt
	alertOthersOfSameType b
	lastHurtByPlayerTimestamp c
	mob a
	canUse ()Z a
	getNearbyMobsOfSameType ()Ljava/util/List; h
	start ()V c
	wasHurtByPlayer ()Z g
net/minecraft/world/entity/ai/goal/target/TargetGoal axu
	mob e
	mustReach a
	mustSee f
	reachCache b
	reachCacheTime c
	targetMob g
	unseenMemoryTicks h
	unseenTicks d
	canAttack (Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/entity/ai/targeting/TargetingConditions;)Z a
	canContinueToUse ()Z b
	canReach (Lnet/minecraft/world/entity/LivingEntity;)Z a
	getFollowDistance ()D k
	setUnseenMemoryTicks (I)Lnet/minecraft/world/entity/ai/goal/target/TargetGoal; a
	start ()V c
	stop ()V d
net/minecraft/world/entity/ai/gossip/GossipContainer axw
	gossips a
	add (Ljava/util/UUID;Lnet/minecraft/world/entity/ai/gossip/GossipType;I)V a
	decay ()V b
	getCountForType (Lnet/minecraft/world/entity/ai/gossip/GossipType;Ljava/util/function/DoublePredicate;)J a
	getGossipEntries ()Ljava/util/Map; a
	getOrCreate (Ljava/util/UUID;)Lnet/minecraft/world/entity/ai/gossip/GossipContainer$EntityGossips; a
	getReputation (Ljava/util/UUID;Ljava/util/function/Predicate;)I a
	mergeValuesForAddition (Lnet/minecraft/world/entity/ai/gossip/GossipType;II)I a
	mergeValuesForTransfer (II)I a
	remove (Ljava/util/UUID;Lnet/minecraft/world/entity/ai/gossip/GossipType;)V a
	remove (Ljava/util/UUID;Lnet/minecraft/world/entity/ai/gossip/GossipType;I)V b
	remove (Lnet/minecraft/world/entity/ai/gossip/GossipType;)V a
	selectGossipsForTransfer (Ljava/util/Random;I)Ljava/util/Collection; a
	store (Lcom/mojang/serialization/DynamicOps;)Lcom/mojang/serialization/Dynamic; a
	transferFrom (Lnet/minecraft/world/entity/ai/gossip/GossipContainer;Ljava/util/Random;I)V a
	unpack ()Ljava/util/stream/Stream; c
	update (Lcom/mojang/serialization/Dynamic;)V a
net/minecraft/world/entity/ai/gossip/GossipContainer$EntityGossips axw$a
	entries a
	decay ()V a
	isEmpty ()Z b
	makeSureValueIsntTooLowOrTooHigh (Lnet/minecraft/world/entity/ai/gossip/GossipType;)V a
	remove (Lnet/minecraft/world/entity/ai/gossip/GossipType;)V b
	unpack (Ljava/util/UUID;)Ljava/util/stream/Stream; a
	weightedValue (Ljava/util/function/Predicate;)I a
net/minecraft/world/entity/ai/gossip/GossipContainer$GossipEntry axw$b
	target a
	type b
	value c
	load (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/DataResult; a
	store (Lcom/mojang/serialization/DynamicOps;)Lcom/mojang/serialization/Dynamic; a
	weightedValue ()I a
net/minecraft/world/entity/ai/gossip/GossipType axx
	$VALUES l
	BY_ID k
	MAJOR_NEGATIVE a
	MAJOR_POSITIVE d
	MINOR_NEGATIVE b
	MINOR_POSITIVE c
	TRADING e
	decayPerDay i
	decayPerTransfer j
	id f
	max h
	weight g
	byId (Ljava/lang/String;)Lnet/minecraft/world/entity/ai/gossip/GossipType; a
net/minecraft/world/entity/ai/memory/ExpirableValue axz
	timeToLive b
	value a
	canExpire ()Z e
	codec (Lcom/mojang/serialization/Codec;)Lcom/mojang/serialization/Codec; a
	getTimeToLive ()J b
	getValue ()Ljava/lang/Object; c
	hasExpired ()Z d
	of (Ljava/lang/Object;)Lnet/minecraft/world/entity/ai/memory/ExpirableValue; a
	of (Ljava/lang/Object;J)Lnet/minecraft/world/entity/ai/memory/ExpirableValue; a
	tick ()V a
net/minecraft/world/entity/ai/memory/MemoryModuleType aya
	ADMIRING_DISABLED Q
	ADMIRING_ITEM N
	ANGRY_AT L
	ATE_RECENTLY af
	ATTACK_COOLING_DOWN p
	ATTACK_TARGET o
	AVOID_TARGET z
	BREED_TARGET r
	CANT_REACH_WALK_TARGET_SINCE D
	CELEBRATE_LOCATION S
	DANCING T
	DISABLE_WALK_TO_ADMIRE_ITEM P
	DOORS_TO_CLOSE v
	DUMMY a
	GOLEM_DETECTED_RECENTLY E
	HEARD_BELL_TIME C
	HIDING_PLACE B
	HOME b
	HUNTED_RECENTLY R
	HURT_BY x
	HURT_BY_ENTITY y
	INTERACTABLE_DOORS u
	INTERACTION_TARGET q
	JOB_SITE c
	LAST_SLEPT F
	LAST_WOKEN G
	LAST_WORKED_AT_POI H
	LIVING_ENTITIES g
	LOOK_TARGET n
	MEETING_POINT e
	NEARBY_ADULT_PIGLINS X
	NEAREST_BED w
	NEAREST_HOSTILE A
	NEAREST_PLAYERS j
	NEAREST_PLAYER_HOLDING_WANTED_ITEM ae
	NEAREST_REPELLENT ag
	NEAREST_TARGETABLE_PLAYER_NOT_WEARING_GOLD W
	NEAREST_VISIBLE_ADULT I
	NEAREST_VISIBLE_ADULT_HOGLINS Z
	NEAREST_VISIBLE_ADULT_PIGLIN aa
	NEAREST_VISIBLE_ADULT_PIGLINS Y
	NEAREST_VISIBLE_BABY_HOGLIN V
	NEAREST_VISIBLE_HUNTABLE_HOGLIN U
	NEAREST_VISIBLE_NEMESIS K
	NEAREST_VISIBLE_PLAYER k
	NEAREST_VISIBLE_TARGETABLE_PLAYER l
	NEAREST_VISIBLE_WANTED_ITEM J
	NEAREST_VISIBLE_ZOMBIFIED ab
	PACIFIED ah
	PATH t
	POTENTIAL_JOB_SITE d
	RIDE_TARGET s
	SECONDARY_JOB_SITE f
	TIME_TRYING_TO_REACH_ADMIRE_ITEM O
	UNIVERSAL_ANGER M
	VISIBLE_ADULT_HOGLIN_COUNT ad
	VISIBLE_ADULT_PIGLIN_COUNT ac
	VISIBLE_LIVING_ENTITIES h
	VISIBLE_VILLAGER_BABIES i
	WALK_TARGET m
	codec ai
	getCodec ()Ljava/util/Optional; a
	register (Ljava/lang/String;)Lnet/minecraft/world/entity/ai/memory/MemoryModuleType; a
	register (Ljava/lang/String;Lcom/mojang/serialization/Codec;)Lnet/minecraft/world/entity/ai/memory/MemoryModuleType; a
net/minecraft/world/entity/ai/memory/MemoryStatus ayb
	$VALUES d
	REGISTERED c
	VALUE_ABSENT b
	VALUE_PRESENT a
net/minecraft/world/entity/ai/memory/WalkTarget ayc
	closeEnoughDist c
	speedModifier b
	target a
	getCloseEnoughDist ()I c
	getSpeedModifier ()F b
	getTarget ()Lnet/minecraft/world/entity/ai/behavior/PositionTracker; a
net/minecraft/world/entity/ai/navigation/FlyingPathNavigation aye
	canMoveDirectly (Lnet/minecraft/world/phys/Vec3;Lnet/minecraft/world/phys/Vec3;III)Z a
	canOpenDoors ()Z e
	canPassDoors ()Z d
	canUpdatePath ()Z a
	createPath (Lnet/minecraft/world/entity/Entity;I)Lnet/minecraft/world/level/pathfinder/Path; a
	createPathFinder (I)Lnet/minecraft/world/level/pathfinder/PathFinder; a
	getTempMobPos ()Lnet/minecraft/world/phys/Vec3; b
	isStableDestination (Lnet/minecraft/core/BlockPos;)Z a
	setCanOpenDoors (Z)V a
	setCanPassDoors (Z)V b
	tick ()V c
net/minecraft/world/entity/ai/navigation/GroundPathNavigation ayf
	avoidSun p
	canMoveDirectly (Lnet/minecraft/world/phys/Vec3;Lnet/minecraft/world/phys/Vec3;III)Z a
	canOpenDoors ()Z f
	canPassDoors ()Z e
	canUpdatePath ()Z a
	canWalkAbove (IIIIIILnet/minecraft/world/phys/Vec3;DD)Z b
	canWalkOn (IIIIIILnet/minecraft/world/phys/Vec3;DD)Z a
	createPath (Lnet/minecraft/core/BlockPos;I)Lnet/minecraft/world/level/pathfinder/Path; a
	createPath (Lnet/minecraft/world/entity/Entity;I)Lnet/minecraft/world/level/pathfinder/Path; a
	createPathFinder (I)Lnet/minecraft/world/level/pathfinder/PathFinder; a
	getSurfaceY ()I t
	getTempMobPos ()Lnet/minecraft/world/phys/Vec3; b
	hasValidPathType (Lnet/minecraft/world/level/pathfinder/BlockPathTypes;)Z a
	setAvoidSun (Z)V c
	setCanOpenDoors (Z)V a
	setCanPassDoors (Z)V b
	trimPath ()V D_
net/minecraft/world/entity/ai/navigation/PathNavigation ayg
	hasDelayedRecomputation m
	lastStuckCheck f
	lastStuckCheckPos g
	lastTimeoutCheck j
	level b
	maxDistanceToWaypoint l
	maxVisitedNodesMultiplier r
	mob a
	nodeEvaluator o
	path c
	pathFinder s
	reachRange q
	speedModifier d
	targetPos p
	tick e
	timeLastRecompute n
	timeoutCachedNode h
	timeoutLimit k
	timeoutTimer i
	canFloat ()Z r
	canMoveDirectly (Lnet/minecraft/world/phys/Vec3;Lnet/minecraft/world/phys/Vec3;III)Z a
	canUpdatePath ()Z a
	createPath (DDDI)Lnet/minecraft/world/level/pathfinder/Path; a
	createPath (Ljava/util/Set;I)Lnet/minecraft/world/level/pathfinder/Path; a
	createPath (Ljava/util/Set;IZI)Lnet/minecraft/world/level/pathfinder/Path; a
	createPath (Ljava/util/stream/Stream;I)Lnet/minecraft/world/level/pathfinder/Path; a
	createPath (Lnet/minecraft/core/BlockPos;I)Lnet/minecraft/world/level/pathfinder/Path; a
	createPath (Lnet/minecraft/world/entity/Entity;I)Lnet/minecraft/world/level/pathfinder/Path; a
	createPathFinder (I)Lnet/minecraft/world/level/pathfinder/PathFinder; a
	doStuckDetection (Lnet/minecraft/world/phys/Vec3;)V a
	followThePath ()V l
	getMaxDistanceToWaypoint ()F s
	getNodeEvaluator ()Lnet/minecraft/world/level/pathfinder/NodeEvaluator; q
	getPath ()Lnet/minecraft/world/level/pathfinder/Path; k
	getTargetPos ()Lnet/minecraft/core/BlockPos; h
	getTempMobPos ()Lnet/minecraft/world/phys/Vec3; b
	hasDelayedRecomputation ()Z i
	isDone ()Z m
	isInLiquid ()Z p
	isInProgress ()Z n
	isStableDestination (Lnet/minecraft/core/BlockPos;)Z a
	moveTo (DDDD)Z a
	moveTo (Lnet/minecraft/world/entity/Entity;D)Z a
	moveTo (Lnet/minecraft/world/level/pathfinder/Path;D)Z a
	recomputePath ()V j
	recomputePath (Lnet/minecraft/core/BlockPos;)V b
	resetMaxVisitedNodesMultiplier ()V g
	resetStuckTimeout ()V e
	setCanFloat (Z)V d
	setMaxVisitedNodesMultiplier (F)V a
	setSpeedModifier (D)V a
	shouldTargetNextNodeInDirection (Lnet/minecraft/world/phys/Vec3;)Z b
	stop ()V o
	tick ()V c
	trimPath ()V D_
net/minecraft/world/entity/ai/navigation/WallClimberNavigation ayh
	pathToPosition p
	createPath (Lnet/minecraft/core/BlockPos;I)Lnet/minecraft/world/level/pathfinder/Path; a
	createPath (Lnet/minecraft/world/entity/Entity;I)Lnet/minecraft/world/level/pathfinder/Path; a
	moveTo (Lnet/minecraft/world/entity/Entity;D)Z a
	tick ()V c
net/minecraft/world/entity/ai/navigation/WaterBoundPathNavigation ayi
	allowBreaching p
	canMoveDirectly (Lnet/minecraft/world/phys/Vec3;Lnet/minecraft/world/phys/Vec3;III)Z a
	canUpdatePath ()Z a
	createPathFinder (I)Lnet/minecraft/world/level/pathfinder/PathFinder; a
	doStuckDetection (Lnet/minecraft/world/phys/Vec3;)V a
	followThePath ()V l
	getTempMobPos ()Lnet/minecraft/world/phys/Vec3; b
	isStableDestination (Lnet/minecraft/core/BlockPos;)Z a
	setCanFloat (Z)V d
	tick ()V c
net/minecraft/world/entity/ai/sensing/AdultSensor ayl
	doTick (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/AgableMob;)V a
	doTick (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)V a
	requires ()Ljava/util/Set; a
	setNearestVisibleAdult (Lnet/minecraft/world/entity/AgableMob;Ljava/util/List;)V a
net/minecraft/world/entity/ai/sensing/DummySensor aym
	doTick (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)V a
	requires ()Ljava/util/Set; a
net/minecraft/world/entity/ai/sensing/GolemSensor ayn
	checkForNearbyGolem (Lnet/minecraft/world/entity/LivingEntity;)V a
	doTick (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)V a
	golemDetected (Lnet/minecraft/world/entity/LivingEntity;)V b
	requires ()Ljava/util/Set; a
net/minecraft/world/entity/ai/sensing/HoglinSpecificSensor ayo
	doTick (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)V a
	doTick (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/monster/hoglin/Hoglin;)V a
	findNearestRepellent (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/monster/hoglin/Hoglin;)Ljava/util/Optional; b
	requires ()Ljava/util/Set; a
net/minecraft/world/entity/ai/sensing/HurtBySensor ayp
	doTick (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)V a
	requires ()Ljava/util/Set; a
net/minecraft/world/entity/ai/sensing/NearestBedSensor ayq
	batchCache a
	lastUpdate c
	triedCount b
	doTick (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)V a
	doTick (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/Mob;)V a
	requires ()Ljava/util/Set; a
net/minecraft/world/entity/ai/sensing/NearestItemSensor ayr
	doTick (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)V a
	doTick (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/Mob;)V a
	requires ()Ljava/util/Set; a
net/minecraft/world/entity/ai/sensing/NearestLivingEntitySensor ays
	doTick (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)V a
	requires ()Ljava/util/Set; a
net/minecraft/world/entity/ai/sensing/PiglinBruteSpecificSensor ayt
	doTick (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)V a
	requires ()Ljava/util/Set; a
net/minecraft/world/entity/ai/sensing/PiglinSpecificSensor ayu
	doTick (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)V a
	findNearestRepellent (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)Ljava/util/Optional; c
	isValidRepellent (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;)Z a
	requires ()Ljava/util/Set; a
net/minecraft/world/entity/ai/sensing/PlayerSensor ayv
	doTick (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)V a
	requires ()Ljava/util/Set; a
net/minecraft/world/entity/ai/sensing/SecondaryPoiSensor ayw
	doTick (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)V a
	doTick (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/npc/Villager;)V a
	requires ()Ljava/util/Set; a
net/minecraft/world/entity/ai/sensing/Sensing ayx
	mob a
	seen b
	unseen c
	canSee (Lnet/minecraft/world/entity/Entity;)Z a
	tick ()V a
net/minecraft/world/entity/ai/sensing/Sensor ayy
	RANDOM a
	TARGET_CONDITIONS b
	TARGET_CONDITIONS_IGNORE_INVISIBILITY_TESTING c
	scanRate d
	timeToTick e
	doTick (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)V a
	isEntityTargetable (Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/entity/LivingEntity;)Z a
	requires ()Ljava/util/Set; a
	tick (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)V b
net/minecraft/world/entity/ai/sensing/SensorType ayz
	DUMMY a
	GOLEM_DETECTED j
	HOGLIN_SPECIFIC_SENSOR m
	HURT_BY f
	NEAREST_ADULT n
	NEAREST_BED e
	NEAREST_ITEMS b
	NEAREST_LIVING_ENTITIES c
	NEAREST_PLAYERS d
	PIGLIN_BRUTE_SPECIFIC_SENSOR l
	PIGLIN_SPECIFIC_SENSOR k
	SECONDARY_POIS i
	VILLAGER_BABIES h
	VILLAGER_HOSTILES g
	factory o
	create ()Lnet/minecraft/world/entity/ai/sensing/Sensor; a
	register (Ljava/lang/String;Ljava/util/function/Supplier;)Lnet/minecraft/world/entity/ai/sensing/SensorType; a
net/minecraft/world/entity/ai/sensing/VillagerBabiesSensor aza
	doTick (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)V a
	getNearestVillagerBabies (Lnet/minecraft/world/entity/LivingEntity;)Ljava/util/List; a
	getVisibleEntities (Lnet/minecraft/world/entity/LivingEntity;)Ljava/util/List; c
	isVillagerBaby (Lnet/minecraft/world/entity/LivingEntity;)Z b
	requires ()Ljava/util/Set; a
net/minecraft/world/entity/ai/sensing/VillagerHostilesSensor azb
	ACCEPTABLE_DISTANCE_FROM_HOSTILES a
	compareMobDistance (Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/entity/LivingEntity;)I a
	doTick (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)V a
	getNearestHostile (Lnet/minecraft/world/entity/LivingEntity;)Ljava/util/Optional; a
	getVisibleEntities (Lnet/minecraft/world/entity/LivingEntity;)Ljava/util/Optional; b
	isClose (Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/entity/LivingEntity;)Z b
	isHostile (Lnet/minecraft/world/entity/LivingEntity;)Z c
	requires ()Ljava/util/Set; a
net/minecraft/world/entity/ai/targeting/TargetingConditions azd
	DEFAULT a
	allowInvulnerable c
	allowNonAttackable f
	allowSameTeam d
	allowUnseeable e
	range b
	selector h
	testInvisible g
	allowInvulnerable ()Lnet/minecraft/world/entity/ai/targeting/TargetingConditions; a
	allowNonAttackable ()Lnet/minecraft/world/entity/ai/targeting/TargetingConditions; d
	allowSameTeam ()Lnet/minecraft/world/entity/ai/targeting/TargetingConditions; b
	allowUnseeable ()Lnet/minecraft/world/entity/ai/targeting/TargetingConditions; c
	ignoreInvisibilityTesting ()Lnet/minecraft/world/entity/ai/targeting/TargetingConditions; e
	range (D)Lnet/minecraft/world/entity/ai/targeting/TargetingConditions; a
	selector (Ljava/util/function/Predicate;)Lnet/minecraft/world/entity/ai/targeting/TargetingConditions; a
	test (Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/entity/LivingEntity;)Z a
net/minecraft/world/entity/ai/util/GoalUtils azf
	hasGroundPathNavigation (Lnet/minecraft/world/entity/Mob;)Z a
net/minecraft/world/entity/ai/util/RandomPos azg
	generateRandomPos (Lnet/minecraft/world/entity/PathfinderMob;IIILnet/minecraft/world/phys/Vec3;ZDLjava/util/function/ToDoubleFunction;ZIIZ)Lnet/minecraft/world/phys/Vec3; a
	getAboveLandPos (Lnet/minecraft/world/entity/PathfinderMob;IILnet/minecraft/world/phys/Vec3;FII)Lnet/minecraft/world/phys/Vec3; a
	getAirPos (Lnet/minecraft/world/entity/PathfinderMob;IIILnet/minecraft/world/phys/Vec3;D)Lnet/minecraft/world/phys/Vec3; a
	getAirPosTowards (Lnet/minecraft/world/entity/PathfinderMob;IIILnet/minecraft/world/phys/Vec3;D)Lnet/minecraft/world/phys/Vec3; b
	getLandPos (Lnet/minecraft/world/entity/PathfinderMob;II)Lnet/minecraft/world/phys/Vec3; b
	getLandPos (Lnet/minecraft/world/entity/PathfinderMob;IILjava/util/function/ToDoubleFunction;)Lnet/minecraft/world/phys/Vec3; a
	getLandPosAvoid (Lnet/minecraft/world/entity/PathfinderMob;IILnet/minecraft/world/phys/Vec3;)Lnet/minecraft/world/phys/Vec3; d
	getLandPosTowards (Lnet/minecraft/world/entity/PathfinderMob;IILnet/minecraft/world/phys/Vec3;)Lnet/minecraft/world/phys/Vec3; a
	getPos (Lnet/minecraft/world/entity/PathfinderMob;II)Lnet/minecraft/world/phys/Vec3; a
	getPosAvoid (Lnet/minecraft/world/entity/PathfinderMob;IILnet/minecraft/world/phys/Vec3;)Lnet/minecraft/world/phys/Vec3; c
	getPosTowards (Lnet/minecraft/world/entity/PathfinderMob;IILnet/minecraft/world/phys/Vec3;)Lnet/minecraft/world/phys/Vec3; b
	getPosTowards (Lnet/minecraft/world/entity/PathfinderMob;IILnet/minecraft/world/phys/Vec3;D)Lnet/minecraft/world/phys/Vec3; a
	getRandomDelta (Ljava/util/Random;IIILnet/minecraft/world/phys/Vec3;D)Lnet/minecraft/core/BlockPos; a
	moveUpToAboveSolid (Lnet/minecraft/core/BlockPos;IILjava/util/function/Predicate;)Lnet/minecraft/core/BlockPos; a
net/minecraft/world/entity/ai/village/ReputationEventType azi
	GOLEM_KILLED b
	TRADE e
	VILLAGER_HURT c
	VILLAGER_KILLED d
	ZOMBIE_VILLAGER_CURED a
	register (Ljava/lang/String;)Lnet/minecraft/world/entity/ai/village/ReputationEventType; a
net/minecraft/world/entity/ai/village/VillageSiege azj
	LOGGER a
	hasSetupSiege b
	nextSpawnTime e
	siegeState c
	spawnX f
	spawnY g
	spawnZ h
	zombiesToSpawn d
	findRandomSpawnPos (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/phys/Vec3; a
	tick (Lnet/minecraft/server/level/ServerLevel;ZZ)I a
	trySpawn (Lnet/minecraft/server/level/ServerLevel;)V b
	tryToSetupSiege (Lnet/minecraft/server/level/ServerLevel;)Z a
net/minecraft/world/entity/ai/village/VillageSiege$State azj$a
	$VALUES d
	SIEGE_CAN_ACTIVATE a
	SIEGE_DONE c
	SIEGE_TONIGHT b
net/minecraft/world/entity/ai/village/poi/PoiManager azl
	distanceTracker a
	loadedChunks b
	add (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/ai/village/poi/PoiType;)V a
	checkConsistencyWithBlocks (Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/world/level/chunk/LevelChunkSection;)V a
	ensureLoadedAndValid (Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;I)V a
	exists (Lnet/minecraft/core/BlockPos;Ljava/util/function/Predicate;)Z a
	existsAtPosition (Lnet/minecraft/world/entity/ai/village/poi/PoiType;Lnet/minecraft/core/BlockPos;)Z a
	find (Ljava/util/function/Predicate;Ljava/util/function/Predicate;Lnet/minecraft/core/BlockPos;ILnet/minecraft/world/entity/ai/village/poi/PoiManager$Occupancy;)Ljava/util/Optional; c
	findAll (Ljava/util/function/Predicate;Ljava/util/function/Predicate;Lnet/minecraft/core/BlockPos;ILnet/minecraft/world/entity/ai/village/poi/PoiManager$Occupancy;)Ljava/util/stream/Stream; a
	findAllClosestFirst (Ljava/util/function/Predicate;Ljava/util/function/Predicate;Lnet/minecraft/core/BlockPos;ILnet/minecraft/world/entity/ai/village/poi/PoiManager$Occupancy;)Ljava/util/stream/Stream; b
	findClosest (Ljava/util/function/Predicate;Lnet/minecraft/core/BlockPos;ILnet/minecraft/world/entity/ai/village/poi/PoiManager$Occupancy;)Ljava/util/Optional; d
	getCountInRange (Ljava/util/function/Predicate;Lnet/minecraft/core/BlockPos;ILnet/minecraft/world/entity/ai/village/poi/PoiManager$Occupancy;)J a
	getFreeTickets (Lnet/minecraft/core/BlockPos;)I d
	getInChunk (Ljava/util/function/Predicate;Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/world/entity/ai/village/poi/PoiManager$Occupancy;)Ljava/util/stream/Stream; a
	getInRange (Ljava/util/function/Predicate;Lnet/minecraft/core/BlockPos;ILnet/minecraft/world/entity/ai/village/poi/PoiManager$Occupancy;)Ljava/util/stream/Stream; c
	getInSquare (Ljava/util/function/Predicate;Lnet/minecraft/core/BlockPos;ILnet/minecraft/world/entity/ai/village/poi/PoiManager$Occupancy;)Ljava/util/stream/Stream; b
	getRandom (Ljava/util/function/Predicate;Ljava/util/function/Predicate;Lnet/minecraft/world/entity/ai/village/poi/PoiManager$Occupancy;Lnet/minecraft/core/BlockPos;ILjava/util/Random;)Ljava/util/Optional; a
	getType (Lnet/minecraft/core/BlockPos;)Ljava/util/Optional; c
	isVillageCenter (J)Z f
	mayHavePoi (Lnet/minecraft/world/level/chunk/LevelChunkSection;)Z a
	onSectionLoad (J)V b
	release (Lnet/minecraft/core/BlockPos;)Z b
	remove (Lnet/minecraft/core/BlockPos;)V a
	sectionsToVillage (Lnet/minecraft/core/SectionPos;)I a
	setDirty (J)V a
	take (Ljava/util/function/Predicate;Ljava/util/function/Predicate;Lnet/minecraft/core/BlockPos;I)Ljava/util/Optional; a
	tick (Ljava/util/function/BooleanSupplier;)V a
	updateFromSection (Lnet/minecraft/world/level/chunk/LevelChunkSection;Lnet/minecraft/core/SectionPos;Ljava/util/function/BiConsumer;)V a
net/minecraft/world/entity/ai/village/poi/PoiManager$DistanceTracker azl$a
	levels b
	getLevel (J)I c
	getLevelFromSource (J)I b
	runAllUpdates ()V a
	setLevel (JI)V a
net/minecraft/world/entity/ai/village/poi/PoiManager$Occupancy azl$b
	$VALUES e
	ANY c
	HAS_SPACE a
	IS_OCCUPIED b
	test d
	getTest ()Ljava/util/function/Predicate; a
net/minecraft/world/entity/ai/village/poi/PoiRecord azm
	freeTickets c
	poiType b
	pos a
	setDirty d
	acquireTicket ()Z b
	codec (Ljava/lang/Runnable;)Lcom/mojang/serialization/Codec; a
	getFreeTickets ()I a
	getPoiType ()Lnet/minecraft/world/entity/ai/village/poi/PoiType; g
	getPos ()Lnet/minecraft/core/BlockPos; f
	hasSpace ()Z d
	isOccupied ()Z e
	releaseTicket ()Z c
net/minecraft/world/entity/ai/village/poi/PoiSection azn
	LOGGER a
	byType c
	isValid e
	records b
	setDirty d
	add (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/ai/village/poi/PoiType;)V a
	add (Lnet/minecraft/world/entity/ai/village/poi/PoiRecord;)Z a
	clear ()V b
	codec (Ljava/lang/Runnable;)Lcom/mojang/serialization/Codec; a
	exists (Lnet/minecraft/core/BlockPos;Ljava/util/function/Predicate;)Z a
	getFreeTickets (Lnet/minecraft/core/BlockPos;)I b
	getRecords (Ljava/util/function/Predicate;Lnet/minecraft/world/entity/ai/village/poi/PoiManager$Occupancy;)Ljava/util/stream/Stream; a
	getType (Lnet/minecraft/core/BlockPos;)Ljava/util/Optional; d
	isValid ()Z a
	refresh (Ljava/util/function/Consumer;)V a
	release (Lnet/minecraft/core/BlockPos;)Z c
	remove (Lnet/minecraft/core/BlockPos;)V a
net/minecraft/world/entity/ai/village/poi/PoiType azo
	ALL b
	ALL_JOBS a
	ALL_JOB_POI_TYPES y
	ALL_STATES x
	ARMORER d
	BEDS z
	BEEHIVE t
	BEE_NEST u
	BUTCHER e
	CARTOGRAPHER f
	CLERIC g
	FARMER h
	FISHERMAN i
	FLETCHER j
	HOME r
	LEATHERWORKER k
	LIBRARIAN l
	LODESTONE w
	MASON m
	MEETING s
	NETHER_PORTAL v
	NITWIT n
	SHEPHERD o
	TOOLSMITH p
	TYPE_BY_STATE A
	UNEMPLOYED c
	WEAPONSMITH q
	matchingStates C
	maxTickets D
	name B
	predicate E
	validRange F
	forState (Lnet/minecraft/world/level/block/state/BlockState;)Ljava/util/Optional; b
	getBlockStates (Lnet/minecraft/world/level/block/Block;)Ljava/util/Set; a
	getMaxTickets ()I b
	getName ()Ljava/lang/String; a
	getPredicate ()Ljava/util/function/Predicate; c
	getValidRange ()I d
	is (Lnet/minecraft/world/level/block/state/BlockState;)Z a
	register (Ljava/lang/String;Ljava/util/Set;II)Lnet/minecraft/world/entity/ai/village/poi/PoiType; a
	register (Ljava/lang/String;Ljava/util/Set;ILjava/util/function/Predicate;I)Lnet/minecraft/world/entity/ai/village/poi/PoiType; a
	registerBlockStates (Lnet/minecraft/world/entity/ai/village/poi/PoiType;)Lnet/minecraft/world/entity/ai/village/poi/PoiType; a
net/minecraft/world/entity/ambient/AmbientCreature azq
	canBeLeashed (Lnet/minecraft/world/entity/player/Player;)Z a
net/minecraft/world/entity/ambient/Bat azr
	BAT_RESTING_TARGETING c
	DATA_ID_FLAGS b
	targetPosition d
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	causeFallDamage (FF)Z b
	checkBatSpawnRules (Lnet/minecraft/world/entity/EntityType;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/world/entity/MobSpawnType;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)Z b
	checkFallDamage (DZLnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/BlockPos;)V a
	createAttributes ()Lnet/minecraft/world/entity/ai/attributes/AttributeSupplier$Builder; m
	customServerAiStep ()V N
	defineSynchedData ()V e
	doPush (Lnet/minecraft/world/entity/Entity;)V C
	getAmbientSound ()Lnet/minecraft/sounds/SoundEvent; I
	getDeathSound ()Lnet/minecraft/sounds/SoundEvent; dp
	getHurtSound (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEvent; e
	getSoundVolume ()F dF
	getStandingEyeHeight (Lnet/minecraft/world/entity/Pose;Lnet/minecraft/world/entity/EntityDimensions;)F b
	getVoicePitch ()F dG
	hurt (Lnet/minecraft/world/damagesource/DamageSource;F)Z a
	isHalloween ()Z eJ
	isIgnoringBlockTriggers ()Z bP
	isMovementNoisy ()Z aB
	isPushable ()Z aT
	isResting ()Z eI
	pushEntities ()V dP
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	setResting (Z)V t
	tick ()V j
net/minecraft/world/entity/animal/AbstractFish azt
	FROM_BUCKET b
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	aiStep ()V k
	canRandomSwim ()Z eL
	checkFishSpawnRules (Lnet/minecraft/world/entity/EntityType;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/world/entity/MobSpawnType;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)Z b
	createAttributes ()Lnet/minecraft/world/entity/ai/attributes/AttributeSupplier$Builder; m
	createNavigation (Lnet/minecraft/world/level/Level;)Lnet/minecraft/world/entity/ai/navigation/PathNavigation; b
	defineSynchedData ()V e
	fromBucket ()Z eN
	getBucketItemStack ()Lnet/minecraft/world/item/ItemStack; eK
	getFlopSound ()Lnet/minecraft/sounds/SoundEvent; eM
	getMaxSpawnClusterSize ()I eq
	getStandingEyeHeight (Lnet/minecraft/world/entity/Pose;Lnet/minecraft/world/entity/EntityDimensions;)F b
	getSwimSound ()Lnet/minecraft/sounds/SoundEvent; au
	mobInteract (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResult; b
	playStepSound (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V b
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	registerGoals ()V o
	removeWhenFarAway (D)Z h
	requiresCustomPersistence ()Z K
	saveToBucketTag (Lnet/minecraft/world/item/ItemStack;)V k
	setFromBucket (Z)V t
	travel (Lnet/minecraft/world/phys/Vec3;)V g
net/minecraft/world/entity/animal/AbstractFish$FishMoveControl azt$a
	fish i
	tick ()V a
net/minecraft/world/entity/animal/AbstractFish$FishSwimGoal azt$b
	fish h
	canUse ()Z a
net/minecraft/world/entity/animal/AbstractGolem azu
	causeFallDamage (FF)Z b
	getAmbientSound ()Lnet/minecraft/sounds/SoundEvent; I
	getAmbientSoundInterval ()I D
	getDeathSound ()Lnet/minecraft/sounds/SoundEvent; dp
	getHurtSound (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEvent; e
	removeWhenFarAway (D)Z h
net/minecraft/world/entity/animal/AbstractSchoolingFish azv
	leader b
	schoolSize c
	addFollower ()V eU
	addFollowers (Ljava/util/stream/Stream;)V a
	canBeFollowed ()Z eQ
	canRandomSwim ()Z eL
	finalizeSpawn (Lnet/minecraft/world/level/ServerLevelAccessor;Lnet/minecraft/world/DifficultyInstance;Lnet/minecraft/world/entity/MobSpawnType;Lnet/minecraft/world/entity/SpawnGroupData;Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/world/entity/SpawnGroupData; a
	getMaxSchoolSize ()I eN
	getMaxSpawnClusterSize ()I eq
	hasFollowers ()Z eR
	inRangeOfLeader ()Z eS
	isFollower ()Z eO
	pathToLeader ()V eT
	registerGoals ()V o
	removeFollower ()V eV
	startFollowing (Lnet/minecraft/world/entity/animal/AbstractSchoolingFish;)Lnet/minecraft/world/entity/animal/AbstractSchoolingFish; a
	stopFollowing ()V eP
	tick ()V j
net/minecraft/world/entity/animal/AbstractSchoolingFish$SchoolSpawnGroupData azv$a
	leader a
net/minecraft/world/entity/animal/Animal azw
	inLove bo
	loveCause bp
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	aiStep ()V k
	canFallInLove ()Z eP
	canMate (Lnet/minecraft/world/entity/animal/Animal;)Z a
	checkAnimalSpawnRules (Lnet/minecraft/world/entity/EntityType;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/world/entity/MobSpawnType;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)Z b
	customServerAiStep ()V N
	getAmbientSoundInterval ()I D
	getExperienceReward (Lnet/minecraft/world/entity/player/Player;)I d
	getInLoveTime ()I eQ
	getLoveCause ()Lnet/minecraft/server/level/ServerPlayer; eR
	getMyRidingOffset ()D ba
	getWalkTargetValue (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/LevelReader;)F a
	handleEntityEvent (B)V a
	hurt (Lnet/minecraft/world/damagesource/DamageSource;F)Z a
	isFood (Lnet/minecraft/world/item/ItemStack;)Z k
	isInLove ()Z eS
	mobInteract (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResult; b
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	removeWhenFarAway (D)Z h
	resetLove ()V eT
	setInLove (Lnet/minecraft/world/entity/player/Player;)V g
	setInLoveTime (I)V s
	spawnChildFromBreeding (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/animal/Animal;)V a
	usePlayerItem (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/item/ItemStack;)V a
net/minecraft/world/entity/animal/Bee azx
	DATA_FLAGS_ID bo
	DATA_REMAINING_ANGER_TIME bp
	PERSISTENT_ANGER_TIME bq
	beePollinateGoal bC
	goToHiveGoal bD
	goToKnownFlowerGoal bE
	hivePos bB
	numCropsGrownSincePollination bx
	persistentAngerTarget br
	remainingCooldownBeforeLocatingNewFlower bz
	remainingCooldownBeforeLocatingNewHive by
	rollAmount bs
	rollAmountO bt
	savedFlowerPos bA
	stayOutOfHiveCountdown bw
	ticksWithoutNectarSinceExitingHive bv
	timeSinceSting bu
	underWaterTicks bF
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	aiStep ()V k
	causeFallDamage (FF)Z b
	checkFallDamage (DZLnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/BlockPos;)V a
	closerThan (Lnet/minecraft/core/BlockPos;I)Z b
	createAttributes ()Lnet/minecraft/world/entity/ai/attributes/AttributeSupplier$Builder; eZ
	createNavigation (Lnet/minecraft/world/level/Level;)Lnet/minecraft/world/entity/ai/navigation/PathNavigation; b
	customServerAiStep ()V N
	defineSynchedData ()V e
	doHurtTarget (Lnet/minecraft/world/entity/Entity;)Z B
	doesHiveHaveSpace (Lnet/minecraft/core/BlockPos;)Z i
	dropOffNectar ()V fb
	getAmbientSound ()Lnet/minecraft/sounds/SoundEvent; I
	getBlacklistedHives ()Ljava/util/List; eN
	getBreedOffspring (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/AgableMob;)Lnet/minecraft/world/entity/AgableMob; a
	getBreedOffspring (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/AgableMob;)Lnet/minecraft/world/entity/animal/Bee; b
	getCropsGrownSincePollination ()I fg
	getDeathSound ()Lnet/minecraft/sounds/SoundEvent; dp
	getFlag (I)Z u
	getGoalSelector ()Lnet/minecraft/world/entity/ai/goal/GoalSelector; eW
	getHivePos ()Lnet/minecraft/core/BlockPos; eV
	getHurtSound (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEvent; e
	getLeashOffset ()Lnet/minecraft/world/phys/Vec3; ce
	getMobType ()Lnet/minecraft/world/entity/MobType; dB
	getPersistentAngerTarget ()Ljava/util/UUID; F_
	getRemainingPersistentAngerTime ()I E_
	getRollAmount (F)F y
	getSavedFlowerPos ()Lnet/minecraft/core/BlockPos; eK
	getSoundVolume ()F dF
	getStandingEyeHeight (Lnet/minecraft/world/entity/Pose;Lnet/minecraft/world/entity/EntityDimensions;)F b
	getTravellingTicks ()I eM
	getWalkTargetValue (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/LevelReader;)F a
	hasHive ()Z eU
	hasNectar ()Z eX
	hasSavedFlowerPos ()Z eL
	hasStung ()Z eY
	hurt (Lnet/minecraft/world/damagesource/DamageSource;F)Z a
	incrementNumCropsGrownSincePollination ()V fi
	isFlowerValid (Lnet/minecraft/core/BlockPos;)Z k
	isFlying ()Z fa
	isFood (Lnet/minecraft/world/item/ItemStack;)Z k
	isHiveNearFire ()Z ff
	isHiveValid ()Z fj
	isRolling ()Z fk
	isTiredOfLookingForNectar ()Z fc
	isTooFarAway (Lnet/minecraft/core/BlockPos;)Z j
	jumpInLiquid (Lnet/minecraft/tags/Tag;)V c
	makeFlySound ()Z ay
	pathfindRandomlyTowards (Lnet/minecraft/core/BlockPos;)V h
	playStepSound (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V b
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	registerGoals ()V o
	resetNumCropsGrownSincePollination ()V fh
	resetTicksWithoutNectarSinceExitingHive ()V eO
	sendDebugPackets ()V M
	setFlag (IZ)V d
	setHasNectar (Z)V t
	setHasStung (Z)V u
	setPersistentAngerTarget (Ljava/util/UUID;)V a
	setRemainingPersistentAngerTime (I)V a_
	setRolling (Z)V v
	setSavedFlowerPos (Lnet/minecraft/core/BlockPos;)V g
	setStayOutOfHiveCountdown (I)V t
	spawnFluidParticle (Lnet/minecraft/world/level/Level;DDDDDLnet/minecraft/core/particles/ParticleOptions;)V a
	startPersistentAngerTimer ()V G_
	tick ()V j
	updateRollAmount ()V fe
	wantsToEnterHive ()Z fd
net/minecraft/world/entity/animal/Bee$BaseBeeGoal azx$a
	canBeeContinueToUse ()Z h
	canBeeUse ()Z g
	canContinueToUse ()Z b
	canUse ()Z a
net/minecraft/world/entity/animal/Bee$BeeAttackGoal azx$b
	canContinueToUse ()Z b
	canUse ()Z a
net/minecraft/world/entity/animal/Bee$BeeBecomeAngryTargetGoal azx$c
	beeCanTarget ()Z h
	canContinueToUse ()Z b
	canUse ()Z a
net/minecraft/world/entity/animal/Bee$BeeEnterHiveGoal azx$d
	canBeeContinueToUse ()Z h
	canBeeUse ()Z g
	start ()V c
net/minecraft/world/entity/animal/Bee$BeeGoToHiveGoal azx$e
	blacklistedTargets d
	lastPath e
	ticksStuck f
	travellingTicks c
	blacklistTarget (Lnet/minecraft/core/BlockPos;)V c
	canBeeContinueToUse ()Z h
	canBeeUse ()Z g
	canContinueToUse ()Z b
	canUse ()Z a
	clearBlacklist ()V j
	dropAndBlacklistHive ()V k
	dropHive ()V l
	hasReachedTarget (Lnet/minecraft/core/BlockPos;)Z d
	isTargetBlacklisted (Lnet/minecraft/core/BlockPos;)Z b
	pathfindDirectlyTowards (Lnet/minecraft/core/BlockPos;)Z a
	start ()V c
	stop ()V d
	tick ()V e
net/minecraft/world/entity/animal/Bee$BeeGoToKnownFlowerGoal azx$f
	travellingTicks c
	canBeeContinueToUse ()Z h
	canBeeUse ()Z g
	canContinueToUse ()Z b
	canUse ()Z a
	start ()V c
	stop ()V d
	tick ()V e
	wantsToGoToKnownFlower ()Z j
net/minecraft/world/entity/animal/Bee$BeeGrowCropGoal azx$g
	canBeeContinueToUse ()Z h
	canBeeUse ()Z g
	tick ()V e
net/minecraft/world/entity/animal/Bee$BeeHurtByOtherGoal azx$h
	alertOther (Lnet/minecraft/world/entity/Mob;Lnet/minecraft/world/entity/LivingEntity;)V a
	canContinueToUse ()Z b
net/minecraft/world/entity/animal/Bee$BeeLocateHiveGoal azx$i
	canBeeContinueToUse ()Z h
	canBeeUse ()Z g
	findNearbyHivesWithSpace ()Ljava/util/List; j
	start ()V c
net/minecraft/world/entity/animal/Bee$BeeLookControl azx$j
	resetXRotOnTick ()Z b
	tick ()V a
net/minecraft/world/entity/animal/Bee$BeePollinateGoal azx$k
	VALID_POLLINATION_BLOCKS c
	hoverPos g
	lastSoundPlayedTick e
	pollinating f
	pollinatingTicks h
	successfulPollinatingTicks d
	canBeeContinueToUse ()Z h
	canBeeUse ()Z g
	findNearbyFlower ()Ljava/util/Optional; o
	findNearestBlock (Ljava/util/function/Predicate;D)Ljava/util/Optional; a
	getOffset ()F n
	hasPollinatedLongEnough ()Z j
	isPollinating ()Z k
	setWantedPos ()V m
	start ()V c
	stop ()V d
	stopPollinating ()V l
	tick ()V e
net/minecraft/world/entity/animal/Bee$BeeWanderGoal azx$l
	canContinueToUse ()Z b
	canUse ()Z a
	findPos ()Lnet/minecraft/world/phys/Vec3; g
	start ()V c
net/minecraft/world/entity/animal/Cat azy
	DATA_COLLAR_COLOR bv
	DATA_TYPE_ID bs
	IS_LYING bt
	RELAX_STATE_ONE bu
	TEMPT_INGREDIENT br
	TEXTURE_BY_TYPE bq
	avoidPlayersGoal bw
	lieDownAmount by
	lieDownAmountO bz
	lieDownAmountOTail bB
	lieDownAmountTail bA
	relaxStateOneAmount bC
	relaxStateOneAmountO bD
	temptGoal bx
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	canMate (Lnet/minecraft/world/entity/animal/Animal;)Z a
	causeFallDamage (FF)Z b
	createAttributes ()Lnet/minecraft/world/entity/ai/attributes/AttributeSupplier$Builder; fa
	customServerAiStep ()V N
	defineSynchedData ()V e
	doHurtTarget (Lnet/minecraft/world/entity/Entity;)Z B
	finalizeSpawn (Lnet/minecraft/world/level/ServerLevelAccessor;Lnet/minecraft/world/DifficultyInstance;Lnet/minecraft/world/entity/MobSpawnType;Lnet/minecraft/world/entity/SpawnGroupData;Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/world/entity/SpawnGroupData; a
	getAmbientSound ()Lnet/minecraft/sounds/SoundEvent; I
	getAmbientSoundInterval ()I D
	getAttackDamage ()F fb
	getBreedOffspring (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/AgableMob;)Lnet/minecraft/world/entity/AgableMob; a
	getBreedOffspring (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/AgableMob;)Lnet/minecraft/world/entity/animal/Cat; b
	getCatType ()I eV
	getCollarColor ()Lnet/minecraft/world/item/DyeColor; eY
	getDeathSound ()Lnet/minecraft/sounds/SoundEvent; dp
	getHurtSound (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEvent; e
	getLieDownAmount (F)F y
	getLieDownAmountTail (F)F z
	getRelaxStateOneAmount (F)F A
	getResourceLocation ()Lnet/minecraft/resources/ResourceLocation; eU
	getStandingEyeHeight (Lnet/minecraft/world/entity/Pose;Lnet/minecraft/world/entity/EntityDimensions;)F b
	handleLieDown ()V fc
	hiss ()V eZ
	isFood (Lnet/minecraft/world/item/ItemStack;)Z k
	isLying ()Z eW
	isRelaxStateOne ()Z eX
	mobInteract (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResult; b
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	reassessTameGoals ()V eL
	registerGoals ()V o
	removeWhenFarAway (D)Z h
	setCatType (I)V t
	setCollarColor (Lnet/minecraft/world/item/DyeColor;)V a
	setLying (Z)V x
	setRelaxStateOne (Z)V y
	tick ()V j
	updateLieDownAmount ()V fd
	updateRelaxStateOneAmount ()V fe
	usePlayerItem (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/item/ItemStack;)V a
net/minecraft/world/entity/animal/Cat$CatAvoidEntityGoal azy$a
	cat i
	canContinueToUse ()Z b
	canUse ()Z a
net/minecraft/world/entity/animal/Cat$CatRelaxOnOwnerGoal azy$b
	cat a
	goalPos c
	onBedTicks d
	ownerPlayer b
	canContinueToUse ()Z b
	canUse ()Z a
	giveMorningGift ()V h
	spaceIsOccupied ()Z g
	start ()V c
	stop ()V d
	tick ()V e
net/minecraft/world/entity/animal/Cat$CatTemptGoal azy$c
	cat d
	selectedPlayer c
	canScare ()Z g
	canUse ()Z a
	tick ()V e
net/minecraft/world/entity/animal/Chicken azz
	FOOD_ITEMS bv
	eggTime bt
	flap bo
	flapSpeed bp
	flapping bs
	isChickenJockey bu
	oFlap br
	oFlapSpeed bq
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	aiStep ()V k
	causeFallDamage (FF)Z b
	createAttributes ()Lnet/minecraft/world/entity/ai/attributes/AttributeSupplier$Builder; eK
	getAmbientSound ()Lnet/minecraft/sounds/SoundEvent; I
	getBreedOffspring (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/AgableMob;)Lnet/minecraft/world/entity/AgableMob; a
	getBreedOffspring (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/AgableMob;)Lnet/minecraft/world/entity/animal/Chicken; b
	getDeathSound ()Lnet/minecraft/sounds/SoundEvent; dp
	getExperienceReward (Lnet/minecraft/world/entity/player/Player;)I d
	getHurtSound (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEvent; e
	getStandingEyeHeight (Lnet/minecraft/world/entity/Pose;Lnet/minecraft/world/entity/EntityDimensions;)F b
	isChickenJockey ()Z eL
	isFood (Lnet/minecraft/world/item/ItemStack;)Z k
	playStepSound (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V b
	positionRider (Lnet/minecraft/world/entity/Entity;)V k
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	registerGoals ()V o
	removeWhenFarAway (D)Z h
	setChickenJockey (Z)V t
net/minecraft/world/entity/animal/Cod baa
	getAmbientSound ()Lnet/minecraft/sounds/SoundEvent; I
	getBucketItemStack ()Lnet/minecraft/world/item/ItemStack; eK
	getDeathSound ()Lnet/minecraft/sounds/SoundEvent; dp
	getFlopSound ()Lnet/minecraft/sounds/SoundEvent; eM
	getHurtSound (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEvent; e
net/minecraft/world/entity/animal/Cow bab
	createAttributes ()Lnet/minecraft/world/entity/ai/attributes/AttributeSupplier$Builder; eK
	getAmbientSound ()Lnet/minecraft/sounds/SoundEvent; I
	getBreedOffspring (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/AgableMob;)Lnet/minecraft/world/entity/AgableMob; a
	getBreedOffspring (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/AgableMob;)Lnet/minecraft/world/entity/animal/Cow; b
	getDeathSound ()Lnet/minecraft/sounds/SoundEvent; dp
	getHurtSound (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEvent; e
	getSoundVolume ()F dF
	getStandingEyeHeight (Lnet/minecraft/world/entity/Pose;Lnet/minecraft/world/entity/EntityDimensions;)F b
	mobInteract (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResult; b
	playStepSound (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V b
	registerGoals ()V o
net/minecraft/world/entity/animal/Dolphin bac
	ALLOWED_ITEMS b
	GOT_FISH d
	MOISTNESS_LEVEL bo
	SWIM_WITH_PLAYER_TARGETING bp
	TREASURE_POS c
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	addParticlesAroundSelf (Lnet/minecraft/core/particles/ParticleOptions;)V a
	canBeLeashed (Lnet/minecraft/world/entity/player/Player;)Z a
	canBreatheUnderwater ()Z cL
	canRide (Lnet/minecraft/world/entity/Entity;)Z n
	canTakeItem (Lnet/minecraft/world/item/ItemStack;)Z e
	checkDolphinSpawnRules (Lnet/minecraft/world/entity/EntityType;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/world/entity/MobSpawnType;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)Z b
	closeToNextPos ()Z eN
	createAttributes ()Lnet/minecraft/world/entity/ai/attributes/AttributeSupplier$Builder; eM
	createNavigation (Lnet/minecraft/world/level/Level;)Lnet/minecraft/world/entity/ai/navigation/PathNavigation; b
	defineSynchedData ()V e
	doHurtTarget (Lnet/minecraft/world/entity/Entity;)Z B
	finalizeSpawn (Lnet/minecraft/world/level/ServerLevelAccessor;Lnet/minecraft/world/DifficultyInstance;Lnet/minecraft/world/entity/MobSpawnType;Lnet/minecraft/world/entity/SpawnGroupData;Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/world/entity/SpawnGroupData; a
	getAmbientSound ()Lnet/minecraft/sounds/SoundEvent; I
	getDeathSound ()Lnet/minecraft/sounds/SoundEvent; dp
	getHurtSound (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEvent; e
	getMaxAirSupply ()I bG
	getMaxHeadXRot ()I O
	getMaxHeadYRot ()I eo
	getMoistnessLevel ()I eL
	getStandingEyeHeight (Lnet/minecraft/world/entity/Pose;Lnet/minecraft/world/entity/EntityDimensions;)F b
	getSwimSound ()Lnet/minecraft/sounds/SoundEvent; au
	getSwimSplashSound ()Lnet/minecraft/sounds/SoundEvent; av
	getTreasurePos ()Lnet/minecraft/core/BlockPos; m
	gotFish ()Z eK
	handleAirSupply (I)V a
	handleEntityEvent (B)V a
	increaseAirSupply (I)I m
	mobInteract (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResult; b
	pickUpItem (Lnet/minecraft/world/entity/item/ItemEntity;)V b
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	registerGoals ()V o
	setGotFish (Z)V t
	setMoisntessLevel (I)V b
	setTreasurePos (Lnet/minecraft/core/BlockPos;)V g
	tick ()V j
	travel (Lnet/minecraft/world/phys/Vec3;)V g
net/minecraft/world/entity/animal/Dolphin$DolphinMoveControl bac$a
	dolphin i
	tick ()V a
net/minecraft/world/entity/animal/Dolphin$DolphinSwimToTreasureGoal bac$b
	dolphin a
	stuck b
	canContinueToUse ()Z b
	canUse ()Z a
	isInterruptable ()Z C_
	start ()V c
	stop ()V d
	tick ()V e
net/minecraft/world/entity/animal/Dolphin$DolphinSwimWithPlayerGoal bac$c
	dolphin a
	player c
	speedModifier b
	canContinueToUse ()Z b
	canUse ()Z a
	start ()V c
	stop ()V d
	tick ()V e
net/minecraft/world/entity/animal/Dolphin$PlayWithItemsGoal bac$d
	cooldown b
	canUse ()Z a
	drop (Lnet/minecraft/world/item/ItemStack;)V a
	start ()V c
	stop ()V d
	tick ()V e
net/minecraft/world/entity/animal/FlyingAnimal bad
	isFlying ()Z fa
net/minecraft/world/entity/animal/Fox bae
	ALLOWED_ITEMS bs
	AVOID_PLAYERS bv
	DATA_FLAGS_ID bp
	DATA_TRUSTED_ID_0 bq
	DATA_TRUSTED_ID_1 br
	DATA_TYPE_ID bo
	STALKABLE_PREY bu
	TRUSTED_TARGET_SELECTOR bt
	crouchAmount bB
	crouchAmountO bC
	fishTargetGoal by
	interestedAngle bz
	interestedAngleO bA
	landTargetGoal bw
	ticksSinceEaten bD
	turtleEggTargetGoal bx
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	addTrustedUUID (Ljava/util/UUID;)V b
	aiStep ()V k
	calculateFallDamage (FF)I e
	canEat (Lnet/minecraft/world/item/ItemStack;)Z l
	canHoldItem (Lnet/minecraft/world/item/ItemStack;)Z h
	canMove ()Z fe
	canTakeItem (Lnet/minecraft/world/item/ItemStack;)Z e
	clearStates ()V fd
	createAttributes ()Lnet/minecraft/world/entity/ai/attributes/AttributeSupplier$Builder; eK
	defineSynchedData ()V e
	dropAllDeathLoot (Lnet/minecraft/world/damagesource/DamageSource;)V d
	dropItemStack (Lnet/minecraft/world/item/ItemStack;)V n
	finalizeSpawn (Lnet/minecraft/world/level/ServerLevelAccessor;Lnet/minecraft/world/DifficultyInstance;Lnet/minecraft/world/entity/MobSpawnType;Lnet/minecraft/world/entity/SpawnGroupData;Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/world/entity/SpawnGroupData; a
	getAmbientSound ()Lnet/minecraft/sounds/SoundEvent; I
	getBreedOffspring (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/AgableMob;)Lnet/minecraft/world/entity/AgableMob; a
	getBreedOffspring (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/AgableMob;)Lnet/minecraft/world/entity/animal/Fox; b
	getCrouchAmount (F)F z
	getDeathSound ()Lnet/minecraft/sounds/SoundEvent; dp
	getEatingSound (Lnet/minecraft/world/item/ItemStack;)Lnet/minecraft/sounds/SoundEvent; d
	getFlag (I)Z t
	getFoxType ()Lnet/minecraft/world/entity/animal/Fox$Type; eL
	getHeadRollAngle (F)F y
	getHurtSound (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEvent; e
	getLeashOffset ()Lnet/minecraft/world/phys/Vec3; ce
	getStandingEyeHeight (Lnet/minecraft/world/entity/Pose;Lnet/minecraft/world/entity/EntityDimensions;)F b
	getTrustedUUIDs ()Ljava/util/List; fa
	handleEntityEvent (B)V a
	isCrouching ()Z by
	isDefending ()Z fb
	isFaceplanted ()Z eN
	isFood (Lnet/minecraft/world/item/ItemStack;)Z k
	isFullyCrouched ()Z eV
	isImmobile ()Z dH
	isInterested ()Z eW
	isJumping ()Z eU
	isPathClear (Lnet/minecraft/world/entity/animal/Fox;Lnet/minecraft/world/entity/LivingEntity;)Z a
	isPouncing ()Z eO
	isSitting ()Z eM
	isSleeping ()Z el
	onOffspringSpawnedFromEgg (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/entity/Mob;)V a
	pickUpItem (Lnet/minecraft/world/entity/item/ItemEntity;)V b
	playAmbientSound ()V F
	populateDefaultEquipmentSlots (Lnet/minecraft/world/DifficultyInstance;)V a
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	registerGoals ()V o
	setDefending (Z)V y
	setFaceplanted (Z)V x
	setFlag (IZ)V d
	setFoxType (Lnet/minecraft/world/entity/animal/Fox$Type;)V a
	setIsCrouching (Z)V v
	setIsInterested (Z)V w
	setIsPouncing (Z)V u
	setSitting (Z)V t
	setSleeping (Z)V z
	setTarget (Lnet/minecraft/world/entity/LivingEntity;)V h
	setTargetGoals ()V eZ
	spitOutItem (Lnet/minecraft/world/item/ItemStack;)V m
	tick ()V j
	trusts (Ljava/util/UUID;)Z c
	usePlayerItem (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/item/ItemStack;)V a
	wakeUp ()V fc
net/minecraft/world/entity/animal/Fox$DefendTrustedTargetGoal bae$a
	timestamp l
	trustedLastHurt k
	trustedLastHurtBy j
	canUse ()Z a
	start ()V c
net/minecraft/world/entity/animal/Fox$FaceplantGoal bae$b
	countdown a
	canContinueToUse ()Z b
	canUse ()Z a
	start ()V c
	stop ()V d
	tick ()V e
net/minecraft/world/entity/animal/Fox$FoxAlertableEntitiesSelector bae$c
	test (Lnet/minecraft/world/entity/LivingEntity;)Z a
net/minecraft/world/entity/animal/Fox$FoxBehaviorGoal bae$d
	alertableTargeting b
	alertable ()Z h
	hasShelter ()Z g
net/minecraft/world/entity/animal/Fox$FoxBreedGoal bae$e
	breed ()V g
	start ()V c
net/minecraft/world/entity/animal/Fox$FoxEatBerriesGoal bae$f
	ticksWaited g
	acceptedDistance ()D h
	canUse ()Z a
	isValidTarget (Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;)Z a
	onReachedTarget ()V n
	shouldRecalculatePath ()Z k
	start ()V c
	tick ()V e
net/minecraft/world/entity/animal/Fox$FoxFloatGoal bae$g
	canUse ()Z a
	start ()V c
net/minecraft/world/entity/animal/Fox$FoxFollowParentGoal bae$h
	fox b
	canContinueToUse ()Z b
	canUse ()Z a
	start ()V c
net/minecraft/world/entity/animal/Fox$FoxGroupData bae$i
	type a
net/minecraft/world/entity/animal/Fox$FoxLookAtPlayerGoal bae$j
	canContinueToUse ()Z b
	canUse ()Z a
net/minecraft/world/entity/animal/Fox$FoxLookControl bae$k
	resetXRotOnTick ()Z b
	tick ()V a
net/minecraft/world/entity/animal/Fox$FoxMeleeAttackGoal bae$l
	canUse ()Z a
	checkAndPerformAttack (Lnet/minecraft/world/entity/LivingEntity;D)V a
	start ()V c
net/minecraft/world/entity/animal/Fox$FoxMoveControl bae$m
	tick ()V a
net/minecraft/world/entity/animal/Fox$FoxPanicGoal bae$n
	canUse ()Z a
net/minecraft/world/entity/animal/Fox$FoxPounceGoal bae$o
	canContinueToUse ()Z b
	canUse ()Z a
	isInterruptable ()Z C_
	start ()V c
	stop ()V d
	tick ()V e
net/minecraft/world/entity/animal/Fox$FoxSearchForItemsGoal bae$p
	canUse ()Z a
	start ()V c
	tick ()V e
net/minecraft/world/entity/animal/Fox$FoxStrollThroughVillageGoal bae$q
	canContinueToUse ()Z b
	canFoxMove ()Z g
	canUse ()Z a
	start ()V c
net/minecraft/world/entity/animal/Fox$PerchAndSearchGoal bae$r
	lookTime e
	looksRemaining f
	relX c
	relZ d
	canContinueToUse ()Z b
	canUse ()Z a
	resetLook ()V j
	start ()V c
	stop ()V d
	tick ()V e
net/minecraft/world/entity/animal/Fox$SeekShelterGoal bae$s
	interval c
	canUse ()Z a
	start ()V c
net/minecraft/world/entity/animal/Fox$SleepGoal bae$t
	countdown c
	canContinueToUse ()Z b
	canSleep ()Z j
	canUse ()Z a
	start ()V c
	stop ()V d
net/minecraft/world/entity/animal/Fox$StalkPreyGoal bae$u
	canUse ()Z a
	start ()V c
	stop ()V d
	tick ()V e
net/minecraft/world/entity/animal/Fox$Type bae$v
	$VALUES h
	BY_ID c
	BY_NAME d
	RED a
	SNOW b
	biomes g
	id e
	name f
	byBiome (Ljava/util/Optional;)Lnet/minecraft/world/entity/animal/Fox$Type; a
	byId (I)Lnet/minecraft/world/entity/animal/Fox$Type; a
	byName (Ljava/lang/String;)Lnet/minecraft/world/entity/animal/Fox$Type; a
	getId ()I b
	getName ()Ljava/lang/String; a
net/minecraft/world/entity/animal/IronGolem baf
	DATA_FLAGS_ID b
	PERSISTENT_ANGER_TIME bo
	attackAnimationTick c
	offerFlowerTick d
	persistentAngerTarget bq
	remainingPersistentAngerTime bp
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	aiStep ()V k
	canAttackType (Lnet/minecraft/world/entity/EntityType;)Z a
	checkSpawnObstruction (Lnet/minecraft/world/level/LevelReader;)Z a
	createAttributes ()Lnet/minecraft/world/entity/ai/attributes/AttributeSupplier$Builder; m
	decreaseAirSupply (I)I l
	defineSynchedData ()V e
	die (Lnet/minecraft/world/damagesource/DamageSource;)V a
	doHurtTarget (Lnet/minecraft/world/entity/Entity;)Z B
	doPush (Lnet/minecraft/world/entity/Entity;)V C
	getAttackAnimationTick ()I eL
	getAttackDamage ()F eO
	getCrackiness ()Lnet/minecraft/world/entity/animal/IronGolem$Crackiness; eK
	getDeathSound ()Lnet/minecraft/sounds/SoundEvent; dp
	getHurtSound (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEvent; e
	getLeashOffset ()Lnet/minecraft/world/phys/Vec3; ce
	getOfferFlowerTick ()I eM
	getPersistentAngerTarget ()Ljava/util/UUID; F_
	getRemainingPersistentAngerTime ()I E_
	handleEntityEvent (B)V a
	hurt (Lnet/minecraft/world/damagesource/DamageSource;F)Z a
	isPlayerCreated ()Z eN
	mobInteract (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResult; b
	offerFlower (Z)V t
	playStepSound (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V b
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	registerGoals ()V o
	setPersistentAngerTarget (Ljava/util/UUID;)V a
	setPlayerCreated (Z)V u
	setRemainingPersistentAngerTime (I)V a_
	startPersistentAngerTimer ()V G_
net/minecraft/world/entity/animal/IronGolem$Crackiness baf$a
	$VALUES g
	BY_DAMAGE e
	HIGH d
	LOW b
	MEDIUM c
	NONE a
	fraction f
	byFraction (F)Lnet/minecraft/world/entity/animal/IronGolem$Crackiness; a
net/minecraft/world/entity/animal/MushroomCow bag
	DATA_TYPE bo
	effect bp
	effectDuration bq
	lastLightningBoltUUID br
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	checkMushroomSpawnRules (Lnet/minecraft/world/entity/EntityType;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/world/entity/MobSpawnType;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)Z c
	defineSynchedData ()V e
	getBreedOffspring (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/AgableMob;)Lnet/minecraft/world/entity/AgableMob; a
	getBreedOffspring (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/AgableMob;)Lnet/minecraft/world/entity/animal/Cow; b
	getBreedOffspring (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/AgableMob;)Lnet/minecraft/world/entity/animal/MushroomCow; c
	getEffectFromItemStack (Lnet/minecraft/world/item/ItemStack;)Ljava/util/Optional; l
	getMushroomType ()Lnet/minecraft/world/entity/animal/MushroomCow$MushroomType; eL
	getOffspringType (Lnet/minecraft/world/entity/animal/MushroomCow;)Lnet/minecraft/world/entity/animal/MushroomCow$MushroomType; a
	getWalkTargetValue (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/LevelReader;)F a
	mobInteract (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResult; b
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	readyForShearing ()Z K_
	setMushroomType (Lnet/minecraft/world/entity/animal/MushroomCow$MushroomType;)V a
	shear (Lnet/minecraft/sounds/SoundSource;)V a
	thunderHit (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LightningBolt;)V a
net/minecraft/world/entity/animal/MushroomCow$MushroomType bag$a
	$VALUES e
	BROWN b
	RED a
	blockState d
	type c
	byType (Ljava/lang/String;)Lnet/minecraft/world/entity/animal/MushroomCow$MushroomType; b
	getBlockState ()Lnet/minecraft/world/level/block/state/BlockState; a
net/minecraft/world/entity/animal/Ocelot bah
	DATA_TRUSTING bp
	TEMPT_INGREDIENT bo
	ocelotAvoidPlayersGoal bq
	temptGoal br
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	causeFallDamage (FF)Z b
	checkOcelotSpawnRules (Lnet/minecraft/world/entity/EntityType;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/world/entity/MobSpawnType;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)Z c
	checkSpawnObstruction (Lnet/minecraft/world/level/LevelReader;)Z a
	createAttributes ()Lnet/minecraft/world/entity/ai/attributes/AttributeSupplier$Builder; eK
	customServerAiStep ()V N
	defineSynchedData ()V e
	doHurtTarget (Lnet/minecraft/world/entity/Entity;)Z B
	finalizeSpawn (Lnet/minecraft/world/level/ServerLevelAccessor;Lnet/minecraft/world/DifficultyInstance;Lnet/minecraft/world/entity/MobSpawnType;Lnet/minecraft/world/entity/SpawnGroupData;Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/world/entity/SpawnGroupData; a
	getAmbientSound ()Lnet/minecraft/sounds/SoundEvent; I
	getAmbientSoundInterval ()I D
	getAttackDamage ()F eN
	getBreedOffspring (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/AgableMob;)Lnet/minecraft/world/entity/AgableMob; a
	getBreedOffspring (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/AgableMob;)Lnet/minecraft/world/entity/animal/Ocelot; b
	getDeathSound ()Lnet/minecraft/sounds/SoundEvent; dp
	getHurtSound (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEvent; e
	getLeashOffset ()Lnet/minecraft/world/phys/Vec3; ce
	handleEntityEvent (B)V a
	hurt (Lnet/minecraft/world/damagesource/DamageSource;F)Z a
	isFood (Lnet/minecraft/world/item/ItemStack;)Z k
	isTrusting ()Z eM
	mobInteract (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResult; b
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	reassessTrustingGoals ()V eL
	registerGoals ()V o
	removeWhenFarAway (D)Z h
	setTrusting (Z)V t
	spawnTrustingParticles (Z)V u
net/minecraft/world/entity/animal/Ocelot$OcelotAvoidEntityGoal bah$a
	ocelot i
	canContinueToUse ()Z b
	canUse ()Z a
net/minecraft/world/entity/animal/Ocelot$OcelotTemptGoal bah$b
	ocelot c
	canScare ()Z g
net/minecraft/world/entity/animal/Panda bai
	BREED_TARGETING bv
	DATA_ID_FLAGS bu
	EAT_COUNTER br
	HIDDEN_GENE_ID bt
	MAIN_GENE_ID bs
	PANDA_ITEMS bG
	SNEEZE_COUNTER bq
	UNHAPPY_COUNTER bp
	didBite bx
	gotBamboo bw
	lookAtPlayerGoal bF
	onBackAmount bB
	onBackAmountO bC
	rollAmount bD
	rollAmountO bE
	rollCounter bo
	rollDelta by
	sitAmount bz
	sitAmountO bA
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	addEatingParticles ()V fm
	afterSneeze ()V fr
	canBeLeashed (Lnet/minecraft/world/entity/player/Player;)Z a
	canPerformAction ()Z fh
	canTakeItem (Lnet/minecraft/world/item/ItemStack;)Z e
	createAttributes ()Lnet/minecraft/world/entity/ai/attributes/AttributeSupplier$Builder; eY
	defineSynchedData ()V e
	doHurtTarget (Lnet/minecraft/world/entity/Entity;)Z B
	eat (Z)V v
	finalizeSpawn (Lnet/minecraft/world/level/ServerLevelAccessor;Lnet/minecraft/world/DifficultyInstance;Lnet/minecraft/world/entity/MobSpawnType;Lnet/minecraft/world/entity/SpawnGroupData;Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/world/entity/SpawnGroupData; a
	getAmbientSound ()Lnet/minecraft/sounds/SoundEvent; I
	getBreedOffspring (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/AgableMob;)Lnet/minecraft/world/entity/AgableMob; a
	getDeathSound ()Lnet/minecraft/sounds/SoundEvent; dp
	getEatCounter ()I fk
	getFlag (I)Z w
	getHiddenGene ()Lnet/minecraft/world/entity/animal/Panda$Gene; eW
	getHurtSound (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEvent; e
	getLieOnBackAmount (F)F z
	getMainGene ()Lnet/minecraft/world/entity/animal/Panda$Gene; eV
	getOneOfGenesRandomly ()Lnet/minecraft/world/entity/animal/Panda$Gene; fs
	getRollAmount (F)F A
	getSitAmount (F)F y
	getSneezeCounter ()I eU
	getUnhappyCounter ()I eK
	getVariant ()Lnet/minecraft/world/entity/animal/Panda$Gene; eZ
	handleEating ()V fl
	handleRoll ()V fq
	hurt (Lnet/minecraft/world/damagesource/DamageSource;F)Z a
	isAggressive ()Z eF
	isBrown ()Z fd
	isEating ()Z eO
	isFood (Lnet/minecraft/world/item/ItemStack;)Z k
	isFoodOrCake (Lnet/minecraft/world/item/ItemStack;)Z l
	isLazy ()Z fa
	isOnBack ()Z eN
	isPlayful ()Z fc
	isRolling ()Z eX
	isScared ()Z ff
	isSitting ()Z eM
	isSneezing ()Z eL
	isWeak ()Z fe
	isWorried ()Z fb
	mobInteract (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResult; b
	pickUpItem (Lnet/minecraft/world/entity/item/ItemEntity;)V b
	playStepSound (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V b
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	registerGoals ()V o
	roll (Z)V x
	setAttributes ()V fg
	setEatCounter (I)V v
	setFlag (IZ)V d
	setGeneFromParents (Lnet/minecraft/world/entity/animal/Panda;Lnet/minecraft/world/entity/animal/Panda;)V a
	setHiddenGene (Lnet/minecraft/world/entity/animal/Panda$Gene;)V b
	setMainGene (Lnet/minecraft/world/entity/animal/Panda$Gene;)V a
	setOnBack (Z)V u
	setSneezeCounter (I)V u
	setUnhappyCounter (I)V t
	sit (Z)V t
	sneeze (Z)V w
	tick ()V j
	tryToSit ()V ft
	updateOnBackAnimation ()V fo
	updateRollAmount ()V fp
	updateSitAmount ()V fn
net/minecraft/world/entity/animal/Panda$Gene bai$a
	$VALUES l
	AGGRESSIVE g
	BROWN e
	BY_ID h
	LAZY b
	NORMAL a
	PLAYFUL d
	WEAK f
	WORRIED c
	id i
	isRecessive k
	name j
	byId (I)Lnet/minecraft/world/entity/animal/Panda$Gene; a
	byName (Ljava/lang/String;)Lnet/minecraft/world/entity/animal/Panda$Gene; a
	getId ()I a
	getName ()Ljava/lang/String; b
	getRandom (Ljava/util/Random;)Lnet/minecraft/world/entity/animal/Panda$Gene; a
	getVariantFromGenes (Lnet/minecraft/world/entity/animal/Panda$Gene;Lnet/minecraft/world/entity/animal/Panda$Gene;)Lnet/minecraft/world/entity/animal/Panda$Gene; b
	isRecessive ()Z c
net/minecraft/world/entity/animal/Panda$PandaAttackGoal bai$b
	panda b
	canUse ()Z a
net/minecraft/world/entity/animal/Panda$PandaAvoidGoal bai$c
	panda i
	canUse ()Z a
net/minecraft/world/entity/animal/Panda$PandaBreedGoal bai$d
	panda e
	unhappyCooldown f
	canFindBamboo ()Z h
	canUse ()Z a
net/minecraft/world/entity/animal/Panda$PandaHurtByTargetGoal bai$e
	panda a
	alertOther (Lnet/minecraft/world/entity/Mob;Lnet/minecraft/world/entity/LivingEntity;)V a
	canContinueToUse ()Z b
net/minecraft/world/entity/animal/Panda$PandaLieOnBackGoal bai$f
	cooldown b
	panda a
	canContinueToUse ()Z b
	canUse ()Z a
	start ()V c
	stop ()V d
net/minecraft/world/entity/animal/Panda$PandaLookAtPlayerGoal bai$g
	panda g
	canContinueToUse ()Z b
	canUse ()Z a
	setTarget (Lnet/minecraft/world/entity/LivingEntity;)V a
	tick ()V e
net/minecraft/world/entity/animal/Panda$PandaMoveControl bai$h
	panda i
	tick ()V a
net/minecraft/world/entity/animal/Panda$PandaPanicGoal bai$i
	panda g
	canContinueToUse ()Z b
	canUse ()Z a
net/minecraft/world/entity/animal/Panda$PandaRollGoal bai$j
	panda a
	canContinueToUse ()Z b
	canUse ()Z a
	isInterruptable ()Z C_
	start ()V c
net/minecraft/world/entity/animal/Panda$PandaSitGoal bai$k
	cooldown b
	canContinueToUse ()Z b
	canUse ()Z a
	start ()V c
	stop ()V d
	tick ()V e
net/minecraft/world/entity/animal/Panda$PandaSneezeGoal bai$l
	panda a
	canContinueToUse ()Z b
	canUse ()Z a
	start ()V c
net/minecraft/world/entity/animal/Parrot baj
	DATA_VARIANT_ID bu
	MOB_SOUND_MAP by
	NOT_PARROT_PREDICATE bv
	POISONOUS_FOOD bw
	TAME_FOOD bx
	flap bq
	flapSpeed br
	flapping bz
	jukebox bB
	oFlap bt
	oFlapSpeed bs
	partyParrot bA
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	aiStep ()V k
	calculateFlapping ()V eZ
	canMate (Lnet/minecraft/world/entity/animal/Animal;)Z a
	causeFallDamage (FF)Z b
	checkFallDamage (DZLnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/BlockPos;)V a
	checkParrotSpawnRules (Lnet/minecraft/world/entity/EntityType;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/world/entity/MobSpawnType;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)Z c
	createAttributes ()Lnet/minecraft/world/entity/ai/attributes/AttributeSupplier$Builder; eU
	createNavigation (Lnet/minecraft/world/level/Level;)Lnet/minecraft/world/entity/ai/navigation/PathNavigation; b
	defineSynchedData ()V e
	doHurtTarget (Lnet/minecraft/world/entity/Entity;)Z B
	doPush (Lnet/minecraft/world/entity/Entity;)V C
	finalizeSpawn (Lnet/minecraft/world/level/ServerLevelAccessor;Lnet/minecraft/world/DifficultyInstance;Lnet/minecraft/world/entity/MobSpawnType;Lnet/minecraft/world/entity/SpawnGroupData;Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/world/entity/SpawnGroupData; a
	getAmbient (Lnet/minecraft/world/level/Level;Ljava/util/Random;)Lnet/minecraft/sounds/SoundEvent; a
	getAmbientSound ()Lnet/minecraft/sounds/SoundEvent; I
	getBreedOffspring (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/AgableMob;)Lnet/minecraft/world/entity/AgableMob; a
	getDeathSound ()Lnet/minecraft/sounds/SoundEvent; dp
	getHurtSound (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEvent; e
	getImitatedSound (Lnet/minecraft/world/entity/EntityType;)Lnet/minecraft/sounds/SoundEvent; b
	getLeashOffset ()Lnet/minecraft/world/phys/Vec3; ce
	getPitch (Ljava/util/Random;)F a
	getSoundSource ()Lnet/minecraft/sounds/SoundSource; ct
	getStandingEyeHeight (Lnet/minecraft/world/entity/Pose;Lnet/minecraft/world/entity/EntityDimensions;)F b
	getVariant ()I eW
	getVoicePitch ()F dG
	hurt (Lnet/minecraft/world/damagesource/DamageSource;F)Z a
	imitateNearbyMobs (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/Entity;)Z a
	isBaby ()Z w_
	isFlying ()Z fa
	isFood (Lnet/minecraft/world/item/ItemStack;)Z k
	isPartyParrot ()Z eV
	isPushable ()Z aT
	makeFlySound ()Z ay
	mobInteract (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResult; b
	playFlySound (F)F e
	playStepSound (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V b
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	registerGoals ()V o
	setRecordPlayingNearby (Lnet/minecraft/core/BlockPos;Z)V a
	setVariant (I)V t
net/minecraft/world/entity/animal/Pig bak
	DATA_BOOST_TIME bp
	DATA_SADDLE_ID bo
	FOOD_ITEMS bq
	steering br
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	boost ()Z O_
	canBeControlledByRider ()Z er
	createAttributes ()Lnet/minecraft/world/entity/ai/attributes/AttributeSupplier$Builder; eK
	defineSynchedData ()V e
	dropEquipment ()V dm
	equipSaddle (Lnet/minecraft/sounds/SoundSource;)V a
	getAmbientSound ()Lnet/minecraft/sounds/SoundEvent; I
	getBreedOffspring (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/AgableMob;)Lnet/minecraft/world/entity/AgableMob; a
	getBreedOffspring (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/AgableMob;)Lnet/minecraft/world/entity/animal/Pig; b
	getControllingPassenger ()Lnet/minecraft/world/entity/Entity; cl
	getDeathSound ()Lnet/minecraft/sounds/SoundEvent; dp
	getDismountLocationForPassenger (Lnet/minecraft/world/entity/LivingEntity;)Lnet/minecraft/world/phys/Vec3; b
	getHurtSound (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEvent; e
	getLeashOffset ()Lnet/minecraft/world/phys/Vec3; ce
	getSteeringSpeed ()F N_
	isFood (Lnet/minecraft/world/item/ItemStack;)Z k
	isSaddleable ()Z L_
	isSaddled ()Z M_
	mobInteract (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResult; b
	onSyncedDataUpdated (Lnet/minecraft/network/syncher/EntityDataAccessor;)V a
	playStepSound (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V b
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	registerGoals ()V o
	thunderHit (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LightningBolt;)V a
	travel (Lnet/minecraft/world/phys/Vec3;)V g
	travelWithInput (Lnet/minecraft/world/phys/Vec3;)V a_
net/minecraft/world/entity/animal/PolarBear bal
	DATA_STANDING_ID bo
	PERSISTENT_ANGER_TIME bs
	clientSideStandAnimation bq
	clientSideStandAnimationO bp
	persistentAngerTarget bu
	remainingPersistentAngerTime bt
	warningSoundTicks br
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	checkPolarBearSpawnRules (Lnet/minecraft/world/entity/EntityType;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/world/entity/MobSpawnType;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)Z c
	createAttributes ()Lnet/minecraft/world/entity/ai/attributes/AttributeSupplier$Builder; eK
	defineSynchedData ()V e
	doHurtTarget (Lnet/minecraft/world/entity/Entity;)Z B
	finalizeSpawn (Lnet/minecraft/world/level/ServerLevelAccessor;Lnet/minecraft/world/DifficultyInstance;Lnet/minecraft/world/entity/MobSpawnType;Lnet/minecraft/world/entity/SpawnGroupData;Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/world/entity/SpawnGroupData; a
	getAmbientSound ()Lnet/minecraft/sounds/SoundEvent; I
	getBreedOffspring (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/AgableMob;)Lnet/minecraft/world/entity/AgableMob; a
	getDeathSound ()Lnet/minecraft/sounds/SoundEvent; dp
	getDimensions (Lnet/minecraft/world/entity/Pose;)Lnet/minecraft/world/entity/EntityDimensions; a
	getHurtSound (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEvent; e
	getPersistentAngerTarget ()Ljava/util/UUID; F_
	getRemainingPersistentAngerTime ()I E_
	getStandingAnimationScale (F)F y
	getWaterSlowDown ()F dL
	isFood (Lnet/minecraft/world/item/ItemStack;)Z k
	isStanding ()Z eM
	playStepSound (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V b
	playWarningSound ()V eL
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	registerGoals ()V o
	setPersistentAngerTarget (Ljava/util/UUID;)V a
	setRemainingPersistentAngerTime (I)V a_
	setStanding (Z)V t
	startPersistentAngerTimer ()V G_
	tick ()V j
net/minecraft/world/entity/animal/PolarBear$PolarBearAttackPlayersGoal bal$a
	canUse ()Z a
	getFollowDistance ()D k
net/minecraft/world/entity/animal/PolarBear$PolarBearHurtByTargetGoal bal$b
	alertOther (Lnet/minecraft/world/entity/Mob;Lnet/minecraft/world/entity/LivingEntity;)V a
	start ()V c
net/minecraft/world/entity/animal/PolarBear$PolarBearMeleeAttackGoal bal$c
	checkAndPerformAttack (Lnet/minecraft/world/entity/LivingEntity;D)V a
	getAttackReachSqr (Lnet/minecraft/world/entity/LivingEntity;)D a
	stop ()V d
net/minecraft/world/entity/animal/PolarBear$PolarBearPanicGoal bal$d
	canUse ()Z a
net/minecraft/world/entity/animal/Pufferfish bam
	NO_SPECTATORS_AND_NO_WATER_MOB bo
	PUFF_STATE b
	deflateTimer d
	inflateCounter c
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	aiStep ()V k
	defineSynchedData ()V e
	getAmbientSound ()Lnet/minecraft/sounds/SoundEvent; I
	getBucketItemStack ()Lnet/minecraft/world/item/ItemStack; eK
	getDeathSound ()Lnet/minecraft/sounds/SoundEvent; dp
	getDimensions (Lnet/minecraft/world/entity/Pose;)Lnet/minecraft/world/entity/EntityDimensions; a
	getFlopSound ()Lnet/minecraft/sounds/SoundEvent; eM
	getHurtSound (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEvent; e
	getPuffState ()I eN
	getScale (I)F s
	onSyncedDataUpdated (Lnet/minecraft/network/syncher/EntityDataAccessor;)V a
	playerTouch (Lnet/minecraft/world/entity/player/Player;)V a_
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	registerGoals ()V o
	setPuffState (I)V b
	tick ()V j
	touch (Lnet/minecraft/world/entity/Mob;)V a
net/minecraft/world/entity/animal/Pufferfish$PufferfishPuffGoal bam$a
	fish a
	canContinueToUse ()Z b
	canUse ()Z a
	start ()V c
	stop ()V d
net/minecraft/world/entity/animal/Rabbit ban
	DATA_TYPE_ID bo
	KILLER_BUNNY bp
	jumpDelayTicks bt
	jumpDuration br
	jumpTicks bq
	moreCarrotTicks bu
	wasOnGround bs
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	aiStep ()V k
	canSpawnSprintParticle ()Z aN
	checkLandingDelay ()V eW
	checkRabbitSpawnRules (Lnet/minecraft/world/entity/EntityType;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/world/entity/MobSpawnType;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)Z c
	createAttributes ()Lnet/minecraft/world/entity/ai/attributes/AttributeSupplier$Builder; eL
	customServerAiStep ()V N
	defineSynchedData ()V e
	disableJumpControl ()V eU
	doHurtTarget (Lnet/minecraft/world/entity/Entity;)Z B
	enableJumpControl ()V eO
	facePoint (DD)V b
	finalizeSpawn (Lnet/minecraft/world/level/ServerLevelAccessor;Lnet/minecraft/world/DifficultyInstance;Lnet/minecraft/world/entity/MobSpawnType;Lnet/minecraft/world/entity/SpawnGroupData;Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/world/entity/SpawnGroupData; a
	getAmbientSound ()Lnet/minecraft/sounds/SoundEvent; I
	getBreedOffspring (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/AgableMob;)Lnet/minecraft/world/entity/AgableMob; a
	getBreedOffspring (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/AgableMob;)Lnet/minecraft/world/entity/animal/Rabbit; b
	getDeathSound ()Lnet/minecraft/sounds/SoundEvent; dp
	getHurtSound (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEvent; e
	getJumpCompletion (F)F y
	getJumpPower ()F dI
	getJumpSound ()Lnet/minecraft/sounds/SoundEvent; eM
	getLeashOffset ()Lnet/minecraft/world/phys/Vec3; ce
	getRabbitType ()I eN
	getRandomRabbitType (Lnet/minecraft/world/level/LevelAccessor;)I a
	getSoundSource ()Lnet/minecraft/sounds/SoundSource; ct
	handleEntityEvent (B)V a
	hurt (Lnet/minecraft/world/damagesource/DamageSource;F)Z a
	isFood (Lnet/minecraft/world/item/ItemStack;)Z k
	isTemptingItem (Lnet/minecraft/world/item/Item;)Z b
	jumpFromGround ()V dJ
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	registerGoals ()V o
	setJumping (Z)V o
	setLandingDelay ()V eV
	setRabbitType (I)V t
	setSpeedModifier (D)V i
	startJumping ()V eK
	wantsMoreFood ()Z eX
net/minecraft/world/entity/animal/Rabbit$EvilRabbitAttackGoal ban$a
	getAttackReachSqr (Lnet/minecraft/world/entity/LivingEntity;)D a
net/minecraft/world/entity/animal/Rabbit$RabbitAvoidEntityGoal ban$b
	rabbit i
	canUse ()Z a
net/minecraft/world/entity/animal/Rabbit$RabbitGroupData ban$c
	rabbitType a
net/minecraft/world/entity/animal/Rabbit$RabbitJumpControl ban$d
	canJump d
	rabbit c
	canJump ()Z d
	setCanJump (Z)V a
	tick ()V b
	wantJump ()Z c
net/minecraft/world/entity/animal/Rabbit$RabbitMoveControl ban$e
	nextJumpSpeed j
	rabbit i
	setWantedPosition (DDDD)V a
	tick ()V a
net/minecraft/world/entity/animal/Rabbit$RabbitPanicGoal ban$f
	rabbit g
	tick ()V e
net/minecraft/world/entity/animal/Rabbit$RaidGardenGoal ban$g
	canRaid i
	rabbit g
	wantsToRaid h
	canContinueToUse ()Z b
	canUse ()Z a
	isValidTarget (Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;)Z a
	tick ()V e
net/minecraft/world/entity/animal/Salmon bao
	getAmbientSound ()Lnet/minecraft/sounds/SoundEvent; I
	getBucketItemStack ()Lnet/minecraft/world/item/ItemStack; eK
	getDeathSound ()Lnet/minecraft/sounds/SoundEvent; dp
	getFlopSound ()Lnet/minecraft/sounds/SoundEvent; eM
	getHurtSound (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEvent; e
	getMaxSchoolSize ()I eN
net/minecraft/world/entity/animal/Sheep bap
	COLORARRAY_BY_COLOR bq
	DATA_WOOL_ID bo
	ITEM_BY_DYE bp
	eatAnimationTick br
	eatBlockGoal bs
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	aiStep ()V k
	ate ()V B
	createAttributes ()Lnet/minecraft/world/entity/ai/attributes/AttributeSupplier$Builder; eK
	createSheepColor (Lnet/minecraft/world/item/DyeColor;)[F c
	customServerAiStep ()V N
	defineSynchedData ()V e
	finalizeSpawn (Lnet/minecraft/world/level/ServerLevelAccessor;Lnet/minecraft/world/DifficultyInstance;Lnet/minecraft/world/entity/MobSpawnType;Lnet/minecraft/world/entity/SpawnGroupData;Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/world/entity/SpawnGroupData; a
	getAmbientSound ()Lnet/minecraft/sounds/SoundEvent; I
	getBreedOffspring (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/AgableMob;)Lnet/minecraft/world/entity/AgableMob; a
	getBreedOffspring (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/AgableMob;)Lnet/minecraft/world/entity/animal/Sheep; b
	getColor ()Lnet/minecraft/world/item/DyeColor; eL
	getColorArray (Lnet/minecraft/world/item/DyeColor;)[F a
	getDeathSound ()Lnet/minecraft/sounds/SoundEvent; dp
	getDefaultLootTable ()Lnet/minecraft/resources/ResourceLocation; J
	getHeadEatAngleScale (F)F z
	getHeadEatPositionScale (F)F y
	getHurtSound (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEvent; e
	getOffspringColor (Lnet/minecraft/world/entity/animal/Animal;Lnet/minecraft/world/entity/animal/Animal;)Lnet/minecraft/world/item/DyeColor; a
	getRandomSheepColor (Ljava/util/Random;)Lnet/minecraft/world/item/DyeColor; a
	getStandingEyeHeight (Lnet/minecraft/world/entity/Pose;Lnet/minecraft/world/entity/EntityDimensions;)F b
	handleEntityEvent (B)V a
	isSheared ()Z eM
	makeContainer (Lnet/minecraft/world/item/DyeColor;Lnet/minecraft/world/item/DyeColor;)Lnet/minecraft/world/inventory/CraftingContainer; a
	mobInteract (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResult; b
	playStepSound (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V b
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	readyForShearing ()Z K_
	registerGoals ()V o
	setColor (Lnet/minecraft/world/item/DyeColor;)V b
	setSheared (Z)V t
	shear (Lnet/minecraft/sounds/SoundSource;)V a
net/minecraft/world/entity/animal/ShoulderRidingEntity baq
	rideCooldownCounter bq
	canSitOnShoulder ()Z eY
	setEntityOnShoulder (Lnet/minecraft/server/level/ServerPlayer;)Z d
	tick ()V j
net/minecraft/world/entity/animal/SnowGolem bar
	DATA_PUMPKIN_ID b
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	aiStep ()V k
	createAttributes ()Lnet/minecraft/world/entity/ai/attributes/AttributeSupplier$Builder; m
	defineSynchedData ()V e
	getAmbientSound ()Lnet/minecraft/sounds/SoundEvent; I
	getDeathSound ()Lnet/minecraft/sounds/SoundEvent; dp
	getHurtSound (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEvent; e
	getLeashOffset ()Lnet/minecraft/world/phys/Vec3; ce
	getStandingEyeHeight (Lnet/minecraft/world/entity/Pose;Lnet/minecraft/world/entity/EntityDimensions;)F b
	hasPumpkin ()Z eK
	isSensitiveToWater ()Z dN
	mobInteract (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResult; b
	performRangedAttack (Lnet/minecraft/world/entity/LivingEntity;F)V a
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	readyForShearing ()Z K_
	registerGoals ()V o
	setPumpkin (Z)V t
	shear (Lnet/minecraft/sounds/SoundSource;)V a
net/minecraft/world/entity/animal/Squid bas
	oldTentacleAngle bs
	oldTentacleMovement bq
	rotateSpeed bv
	speed bt
	tentacleAngle br
	tentacleMovement bp
	tentacleSpeed bu
	tx bw
	ty bx
	tz by
	xBodyRot b
	xBodyRotO c
	zBodyRot d
	zBodyRotO bo
	aiStep ()V k
	checkSquidSpawnRules (Lnet/minecraft/world/entity/EntityType;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/world/entity/MobSpawnType;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)Z b
	createAttributes ()Lnet/minecraft/world/entity/ai/attributes/AttributeSupplier$Builder; m
	getAmbientSound ()Lnet/minecraft/sounds/SoundEvent; I
	getDeathSound ()Lnet/minecraft/sounds/SoundEvent; dp
	getHurtSound (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEvent; e
	getSoundVolume ()F dF
	getStandingEyeHeight (Lnet/minecraft/world/entity/Pose;Lnet/minecraft/world/entity/EntityDimensions;)F b
	handleEntityEvent (B)V a
	hasMovementVector ()Z eK
	hurt (Lnet/minecraft/world/damagesource/DamageSource;F)Z a
	isMovementNoisy ()Z aB
	registerGoals ()V o
	rotateVector (Lnet/minecraft/world/phys/Vec3;)Lnet/minecraft/world/phys/Vec3; i
	setMovementVector (FFF)V a
	spawnInk ()V eL
	travel (Lnet/minecraft/world/phys/Vec3;)V g
net/minecraft/world/entity/animal/Squid$SquidFleeGoal bas$a
	fleeTicks b
	canUse ()Z a
	start ()V c
	tick ()V e
net/minecraft/world/entity/animal/Squid$SquidRandomMovementGoal bas$b
	squid b
	canUse ()Z a
	tick ()V e
net/minecraft/world/entity/animal/TropicalFish bat
	BASE_TEXTURE_LOCATIONS d
	COMMON_VARIANTS b
	DATA_ID_TYPE_VARIANT c
	PATTERN_A_TEXTURE_LOCATIONS bo
	PATTERN_B_TEXTURE_LOCATIONS bp
	isSchool bq
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	calculateVariant (Lnet/minecraft/world/entity/animal/TropicalFish$Pattern;Lnet/minecraft/world/item/DyeColor;Lnet/minecraft/world/item/DyeColor;)I a
	defineSynchedData ()V e
	finalizeSpawn (Lnet/minecraft/world/level/ServerLevelAccessor;Lnet/minecraft/world/DifficultyInstance;Lnet/minecraft/world/entity/MobSpawnType;Lnet/minecraft/world/entity/SpawnGroupData;Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/world/entity/SpawnGroupData; a
	getAmbientSound ()Lnet/minecraft/sounds/SoundEvent; I
	getBaseColor ()[F eV
	getBaseColor (I)Lnet/minecraft/world/item/DyeColor; s
	getBaseColorIdx (I)I x
	getBaseTextureLocation ()Lnet/minecraft/resources/ResourceLocation; eZ
	getBaseVariant ()I eX
	getBaseVariant (I)I w
	getBucketItemStack ()Lnet/minecraft/world/item/ItemStack; eK
	getDeathSound ()Lnet/minecraft/sounds/SoundEvent; dp
	getFishTypeName (I)Ljava/lang/String; u
	getFlopSound ()Lnet/minecraft/sounds/SoundEvent; eM
	getHurtSound (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEvent; e
	getPatternColor ()[F eW
	getPatternColor (I)Lnet/minecraft/world/item/DyeColor; t
	getPatternColorIdx (I)I y
	getPatternTextureLocation ()Lnet/minecraft/resources/ResourceLocation; eY
	getPatternVariant (I)I z
	getPredefinedName (I)Ljava/lang/String; b
	getVariant ()I eU
	isMaxGroupSizeReached (I)Z c
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	saveToBucketTag (Lnet/minecraft/world/item/ItemStack;)V k
	setVariant (I)V v
net/minecraft/world/entity/animal/TropicalFish$Pattern bat$a
	$VALUES p
	BETTY k
	BLOCKFISH j
	BRINELY e
	CLAYFISH l
	DASHER d
	FLOPPER g
	GLITTER i
	KOB a
	SNOOPER c
	SPOTTY f
	STRIPEY h
	SUNSTREAK b
	VALUES o
	base m
	index n
	getBase ()I a
	getIndex ()I b
	getName ()Ljava/lang/String; c
	getPatternName (II)Ljava/lang/String; a
net/minecraft/world/entity/animal/TropicalFish$TropicalFishGroupData bat$b
	base b
	baseColor d
	pattern c
	patternColor e
net/minecraft/world/entity/animal/Turtle bau
	BABY_ON_LAND_SELECTOR bo
	GOING_HOME bt
	HAS_EGG bq
	HOME_POS bp
	LAYING_EGG br
	TRAVELLING bu
	TRAVEL_POS bs
	layEggCounter bv
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	ageBoundaryReached ()V m
	aiStep ()V k
	canBeLeashed (Lnet/minecraft/world/entity/player/Player;)Z a
	canBreatheUnderwater ()Z cL
	canFallInLove ()Z eP
	checkTurtleSpawnRules (Lnet/minecraft/world/entity/EntityType;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/world/entity/MobSpawnType;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)Z c
	createAttributes ()Lnet/minecraft/world/entity/ai/attributes/AttributeSupplier$Builder; eM
	createNavigation (Lnet/minecraft/world/level/Level;)Lnet/minecraft/world/entity/ai/navigation/PathNavigation; b
	defineSynchedData ()V e
	finalizeSpawn (Lnet/minecraft/world/level/ServerLevelAccessor;Lnet/minecraft/world/DifficultyInstance;Lnet/minecraft/world/entity/MobSpawnType;Lnet/minecraft/world/entity/SpawnGroupData;Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/world/entity/SpawnGroupData; a
	getAmbientSound ()Lnet/minecraft/sounds/SoundEvent; I
	getAmbientSoundInterval ()I D
	getBreedOffspring (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/AgableMob;)Lnet/minecraft/world/entity/AgableMob; a
	getDeathSound ()Lnet/minecraft/sounds/SoundEvent; dp
	getHomePos ()Lnet/minecraft/core/BlockPos; eN
	getHurtSound (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEvent; e
	getMobType ()Lnet/minecraft/world/entity/MobType; dB
	getScale ()F cR
	getSwimSound ()Lnet/minecraft/sounds/SoundEvent; au
	getTravelPos ()Lnet/minecraft/core/BlockPos; eO
	getWalkTargetValue (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/LevelReader;)F a
	hasEgg ()Z eK
	isFood (Lnet/minecraft/world/item/ItemStack;)Z k
	isGoingHome ()Z eU
	isLayingEgg ()Z eL
	isPushedByFluid ()Z bU
	isTravelling ()Z eV
	nextStep ()F as
	playStepSound (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V b
	playSwimSound (F)V d
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	registerGoals ()V o
	setGoingHome (Z)V v
	setHasEgg (Z)V t
	setHomePos (Lnet/minecraft/core/BlockPos;)V g
	setLayingEgg (Z)V u
	setTravelPos (Lnet/minecraft/core/BlockPos;)V h
	setTravelling (Z)V w
	thunderHit (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LightningBolt;)V a
	travel (Lnet/minecraft/world/phys/Vec3;)V g
net/minecraft/world/entity/animal/Turtle$TurtleBreedGoal bau$a
	turtle d
	breed ()V g
	canUse ()Z a
net/minecraft/world/entity/animal/Turtle$TurtleGoHomeGoal bau$b
	closeToHomeTryTicks d
	speedModifier b
	stuck c
	turtle a
	canContinueToUse ()Z b
	canUse ()Z a
	start ()V c
	stop ()V d
	tick ()V e
net/minecraft/world/entity/animal/Turtle$TurtleGoToWaterGoal bau$c
	turtle g
	canContinueToUse ()Z b
	canUse ()Z a
	isValidTarget (Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;)Z a
	shouldRecalculatePath ()Z k
net/minecraft/world/entity/animal/Turtle$TurtleLayEggGoal bau$d
	turtle g
	canContinueToUse ()Z b
	canUse ()Z a
	isValidTarget (Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;)Z a
	tick ()V e
net/minecraft/world/entity/animal/Turtle$TurtleMoveControl bau$e
	turtle i
	tick ()V a
	updateSpeed ()V g
net/minecraft/world/entity/animal/Turtle$TurtlePanicGoal bau$f
	canUse ()Z a
net/minecraft/world/entity/animal/Turtle$TurtlePathNavigation bau$g
	canUpdatePath ()Z a
	createPathFinder (I)Lnet/minecraft/world/level/pathfinder/PathFinder; a
	isStableDestination (Lnet/minecraft/core/BlockPos;)Z a
net/minecraft/world/entity/animal/Turtle$TurtleRandomStrollGoal bau$h
	turtle h
	canUse ()Z a
net/minecraft/world/entity/animal/Turtle$TurtleTemptGoal bau$i
	TEMPT_TARGETING a
	calmDown e
	items f
	player d
	speedModifier c
	turtle b
	canContinueToUse ()Z b
	canUse ()Z a
	shouldFollowItem (Lnet/minecraft/world/item/ItemStack;)Z a
	stop ()V d
	tick ()V e
net/minecraft/world/entity/animal/Turtle$TurtleTravelGoal bau$j
	speedModifier b
	stuck c
	turtle a
	canContinueToUse ()Z b
	canUse ()Z a
	start ()V c
	stop ()V d
	tick ()V e
net/minecraft/world/entity/animal/WaterAnimal bav
	baseTick ()V af
	canBeLeashed (Lnet/minecraft/world/entity/player/Player;)Z a
	canBreatheUnderwater ()Z cL
	checkSpawnObstruction (Lnet/minecraft/world/level/LevelReader;)Z a
	getAmbientSoundInterval ()I D
	getExperienceReward (Lnet/minecraft/world/entity/player/Player;)I d
	getMobType ()Lnet/minecraft/world/entity/MobType; dB
	handleAirSupply (I)V a
	isPushedByFluid ()Z bU
net/minecraft/world/entity/animal/Wolf baw
	DATA_COLLAR_COLOR bs
	DATA_INTERESTED_ID br
	DATA_REMAINING_ANGER_TIME bt
	PERSISTENT_ANGER_TIME bA
	PREY_SELECTOR bq
	interestedAngle bu
	interestedAngleO bv
	isShaking bx
	isWet bw
	persistentAngerTarget bB
	shakeAnim by
	shakeAnimO bz
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	aiStep ()V k
	canBeLeashed (Lnet/minecraft/world/entity/player/Player;)Z a
	canMate (Lnet/minecraft/world/entity/animal/Animal;)Z a
	cancelShake ()V eZ
	createAttributes ()Lnet/minecraft/world/entity/ai/attributes/AttributeSupplier$Builder; eU
	defineSynchedData ()V e
	die (Lnet/minecraft/world/damagesource/DamageSource;)V a
	doHurtTarget (Lnet/minecraft/world/entity/Entity;)Z B
	getAmbientSound ()Lnet/minecraft/sounds/SoundEvent; I
	getBodyRollAngle (FF)F g
	getBreedOffspring (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/AgableMob;)Lnet/minecraft/world/entity/AgableMob; a
	getBreedOffspring (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/AgableMob;)Lnet/minecraft/world/entity/animal/Wolf; b
	getCollarColor ()Lnet/minecraft/world/item/DyeColor; eX
	getDeathSound ()Lnet/minecraft/sounds/SoundEvent; dp
	getHeadRollAngle (F)F z
	getHurtSound (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEvent; e
	getLeashOffset ()Lnet/minecraft/world/phys/Vec3; ce
	getMaxHeadXRot ()I O
	getMaxSpawnClusterSize ()I eq
	getPersistentAngerTarget ()Ljava/util/UUID; F_
	getRemainingPersistentAngerTime ()I E_
	getSoundVolume ()F dF
	getStandingEyeHeight (Lnet/minecraft/world/entity/Pose;Lnet/minecraft/world/entity/EntityDimensions;)F b
	getTailAngle ()F eW
	getWetShade (F)F y
	handleEntityEvent (B)V a
	hurt (Lnet/minecraft/world/damagesource/DamageSource;F)Z a
	isFood (Lnet/minecraft/world/item/ItemStack;)Z k
	isInterested ()Z eY
	isWet ()Z eV
	mobInteract (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResult; b
	playStepSound (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V b
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	registerGoals ()V o
	setCollarColor (Lnet/minecraft/world/item/DyeColor;)V a
	setIsInterested (Z)V x
	setPersistentAngerTarget (Ljava/util/UUID;)V a
	setRemainingPersistentAngerTime (I)V a_
	setTame (Z)V u
	startPersistentAngerTimer ()V G_
	tick ()V j
	wantsToAttack (Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/entity/LivingEntity;)Z a
net/minecraft/world/entity/animal/Wolf$WolfAvoidEntityGoal baw$a
	wolf j
	avoidLlama (Lnet/minecraft/world/entity/animal/horse/Llama;)Z a
	canUse ()Z a
	start ()V c
	tick ()V e
net/minecraft/world/entity/animal/horse/AbstractChestedHorse bax
	DATA_ID_CHEST bw
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	createBaseChestedHorseAttributes ()Lnet/minecraft/world/entity/ai/attributes/AttributeSupplier$Builder; eL
	defineSynchedData ()V e
	dropEquipment ()V dm
	getInventoryColumns ()I eU
	getInventorySize ()I eN
	getPassengersRidingOffset ()D bb
	hasChest ()Z eM
	mobInteract (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResult; b
	playChestEquipsSound ()V eO
	randomizeAttributes ()V eK
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	setChest (Z)V t
	setSlot (ILnet/minecraft/world/item/ItemStack;)Z a_
net/minecraft/world/entity/animal/horse/AbstractHorse bay
	DATA_ID_FLAGS bz
	DATA_ID_OWNER_UUID bA
	FOOD_ITEMS by
	MOMMY_TARGETING bx
	PARENT_HORSE_SELECTOR bw
	allowStandSliding bE
	canGallop bu
	eatAnim bF
	eatAnimO bG
	eatingCounter bB
	gallopSoundCounter bv
	inventory br
	isJumping bq
	mouthAnim bJ
	mouthAnimO bK
	mouthCounter bC
	playerJumpPendingScale bt
	sprintCounter bp
	standAnim bH
	standAnimO bI
	standCounter bD
	tailCounter bo
	temper bs
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	addBehaviourGoals ()V eV
	aiStep ()V k
	calculateFallDamage (FF)I e
	canBeControlledByRider ()Z er
	canEatGrass ()Z fl
	canJump ()Z P_
	canMate (Lnet/minecraft/world/entity/animal/Animal;)Z a
	canParent ()Z fo
	canWearArmor ()Z fs
	causeFallDamage (FF)Z b
	containerChanged (Lnet/minecraft/world/Container;)V a
	createBaseHorseAttributes ()Lnet/minecraft/world/entity/ai/attributes/AttributeSupplier$Builder; fi
	createInventory ()V fd
	defineSynchedData ()V e
	doPlayerRide (Lnet/minecraft/world/entity/player/Player;)V h
	dropEquipment ()V dm
	eating ()V eL
	equipSaddle (Lnet/minecraft/sounds/SoundSource;)V a
	fedFood (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/item/ItemStack;)Lnet/minecraft/world/InteractionResult; b
	finalizeSpawn (Lnet/minecraft/world/level/ServerLevelAccessor;Lnet/minecraft/world/DifficultyInstance;Lnet/minecraft/world/entity/MobSpawnType;Lnet/minecraft/world/entity/SpawnGroupData;Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/world/entity/SpawnGroupData; a
	followMommy ()V fk
	generateRandomJumpStrength ()D fq
	generateRandomMaxHealth ()F fp
	generateRandomSpeed ()D fr
	getAmbientSound ()Lnet/minecraft/sounds/SoundEvent; I
	getAmbientSoundInterval ()I D
	getAngrySound ()Lnet/minecraft/sounds/SoundEvent; fh
	getBreedOffspring (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/AgableMob;)Lnet/minecraft/world/entity/AgableMob; a
	getControllingPassenger ()Lnet/minecraft/world/entity/Entity; cl
	getCustomJump ()D ff
	getDeathSound ()Lnet/minecraft/sounds/SoundEvent; dp
	getDismountLocationForPassenger (Lnet/minecraft/world/entity/LivingEntity;)Lnet/minecraft/world/phys/Vec3; b
	getDismountLocationInDirection (Lnet/minecraft/world/phys/Vec3;Lnet/minecraft/world/entity/LivingEntity;)Lnet/minecraft/world/phys/Vec3; a
	getEatAnim (F)F y
	getEatingSound ()Lnet/minecraft/sounds/SoundEvent; fg
	getFlag (I)Z t
	getHurtSound (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEvent; e
	getInventorySize ()I eN
	getJumpRidingScale ()F Q_
	getMaxSpawnClusterSize ()I eq
	getMaxTemper ()I fj
	getMouthAnim (F)F A
	getOwnerUUID ()Ljava/util/UUID; eX
	getSoundVolume ()F dF
	getStandAnim (F)F z
	getStandingEyeHeight (Lnet/minecraft/world/entity/Pose;Lnet/minecraft/world/entity/EntityDimensions;)F b
	getTemper ()I fc
	handleEating (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/item/ItemStack;)Z c
	handleEntityEvent (B)V a
	handleStartJump (I)V b
	handleStopJump ()V c
	isArmor (Lnet/minecraft/world/item/ItemStack;)Z l
	isBred ()Z fb
	isEating ()Z eZ
	isFood (Lnet/minecraft/world/item/ItemStack;)Z k
	isImmobile ()Z dH
	isJumping ()Z eY
	isPushable ()Z aT
	isSaddleable ()Z L_
	isSaddled ()Z M_
	isStanding ()Z fa
	isTamed ()Z eW
	isWearingArmor ()Z ft
	makeMad ()V fm
	modifyTemper (I)I v
	moveTail ()V eM
	onClimbable ()Z c_
	onLeashDistance (F)V x
	onPlayerJump (I)V b_
	openInventory (Lnet/minecraft/world/entity/player/Player;)V f
	openMouth ()V eO
	playGallopSound (Lnet/minecraft/world/level/block/SoundType;)V a
	playJumpSound ()V fn
	playStepSound (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V b
	positionRider (Lnet/minecraft/world/entity/Entity;)V k
	randomizeAttributes ()V eK
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	registerGoals ()V o
	setBred (Z)V w
	setEating (Z)V x
	setFlag (IZ)V d
	setIsJumping (Z)V v
	setJumpRidingScale (F)V a_
	setOffspringAttributes (Lnet/minecraft/world/entity/AgableMob;Lnet/minecraft/world/entity/animal/horse/AbstractHorse;)V a
	setOwnerUUID (Ljava/util/UUID;)V b
	setSlot (ILnet/minecraft/world/item/ItemStack;)Z a_
	setStanding (Z)V y
	setTamed (Z)V u
	setTemper (I)V u
	spawnTamingParticles (Z)V z
	stand ()V eU
	tameWithName (Lnet/minecraft/world/entity/player/Player;)Z i
	tick ()V j
	travel (Lnet/minecraft/world/phys/Vec3;)V g
	updateContainerEquipment ()V fe
net/minecraft/world/entity/animal/horse/Donkey baz
	canMate (Lnet/minecraft/world/entity/animal/Animal;)Z a
	getAmbientSound ()Lnet/minecraft/sounds/SoundEvent; I
	getAngrySound ()Lnet/minecraft/sounds/SoundEvent; fh
	getBreedOffspring (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/AgableMob;)Lnet/minecraft/world/entity/AgableMob; a
	getDeathSound ()Lnet/minecraft/sounds/SoundEvent; dp
	getEatingSound ()Lnet/minecraft/sounds/SoundEvent; fg
	getHurtSound (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEvent; e
net/minecraft/world/entity/animal/horse/Horse bba
	ARMOR_MODIFIER_UUID bw
	DATA_ID_TYPE_VARIANT bx
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	canMate (Lnet/minecraft/world/entity/animal/Animal;)Z a
	canWearArmor ()Z fs
	containerChanged (Lnet/minecraft/world/Container;)V a
	defineSynchedData ()V e
	finalizeSpawn (Lnet/minecraft/world/level/ServerLevelAccessor;Lnet/minecraft/world/DifficultyInstance;Lnet/minecraft/world/entity/MobSpawnType;Lnet/minecraft/world/entity/SpawnGroupData;Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/world/entity/SpawnGroupData; a
	getAmbientSound ()Lnet/minecraft/sounds/SoundEvent; I
	getAngrySound ()Lnet/minecraft/sounds/SoundEvent; fh
	getArmor ()Lnet/minecraft/world/item/ItemStack; eL
	getBreedOffspring (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/AgableMob;)Lnet/minecraft/world/entity/AgableMob; a
	getDeathSound ()Lnet/minecraft/sounds/SoundEvent; dp
	getEatingSound ()Lnet/minecraft/sounds/SoundEvent; fg
	getHurtSound (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEvent; e
	getMarkings ()Lnet/minecraft/world/entity/animal/horse/Markings; eO
	getTypeVariant ()I eU
	getVariant ()Lnet/minecraft/world/entity/animal/horse/Variant; eM
	isArmor (Lnet/minecraft/world/item/ItemStack;)Z l
	mobInteract (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResult; b
	playGallopSound (Lnet/minecraft/world/level/block/SoundType;)V a
	randomizeAttributes ()V eK
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	setArmor (Lnet/minecraft/world/item/ItemStack;)V m
	setArmorEquipment (Lnet/minecraft/world/item/ItemStack;)V n
	setTypeVariant (I)V w
	setVariantAndMarkings (Lnet/minecraft/world/entity/animal/horse/Variant;Lnet/minecraft/world/entity/animal/horse/Markings;)V a
	updateContainerEquipment ()V fe
net/minecraft/world/entity/animal/horse/Horse$HorseGroupData bba$a
	variant a
net/minecraft/world/entity/animal/horse/Llama bbb
	DATA_STRENGTH_ID bx
	DATA_SWAG_ID by
	DATA_VARIANT_ID bz
	FOOD_ITEMS bw
	caravanHead bB
	caravanTail bC
	didSpit bA
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	canBeControlledByRider ()Z er
	canEatGrass ()Z fl
	canMate (Lnet/minecraft/world/entity/animal/Animal;)Z a
	canWearArmor ()Z fs
	causeFallDamage (FF)Z b
	containerChanged (Lnet/minecraft/world/Container;)V a
	createAttributes ()Lnet/minecraft/world/entity/ai/attributes/AttributeSupplier$Builder; fw
	defineSynchedData ()V e
	finalizeSpawn (Lnet/minecraft/world/level/ServerLevelAccessor;Lnet/minecraft/world/DifficultyInstance;Lnet/minecraft/world/entity/MobSpawnType;Lnet/minecraft/world/entity/SpawnGroupData;Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/world/entity/SpawnGroupData; a
	followLeashSpeed ()D eJ
	followMommy ()V fk
	getAmbientSound ()Lnet/minecraft/sounds/SoundEvent; I
	getAngrySound ()Lnet/minecraft/sounds/SoundEvent; fh
	getBreedOffspring (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/AgableMob;)Lnet/minecraft/world/entity/AgableMob; a
	getBreedOffspring (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/AgableMob;)Lnet/minecraft/world/entity/animal/horse/Llama; b
	getCaravanHead ()Lnet/minecraft/world/entity/animal/horse/Llama; fD
	getDeathSound ()Lnet/minecraft/sounds/SoundEvent; dp
	getDyeColor (Lnet/minecraft/world/item/ItemStack;)Lnet/minecraft/world/item/DyeColor; m
	getEatingSound ()Lnet/minecraft/sounds/SoundEvent; fg
	getHurtSound (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEvent; e
	getInventoryColumns ()I eU
	getInventorySize ()I eN
	getLeashOffset ()Lnet/minecraft/world/phys/Vec3; ce
	getMaxTemper ()I fj
	getPassengersRidingOffset ()D bb
	getStrength ()I fv
	getSwag ()Lnet/minecraft/world/item/DyeColor; fy
	getVariant ()I fx
	handleEating (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/item/ItemStack;)Z c
	hasCaravanTail ()Z fB
	inCaravan ()Z fC
	isArmor (Lnet/minecraft/world/item/ItemStack;)Z l
	isFood (Lnet/minecraft/world/item/ItemStack;)Z k
	isImmobile ()Z dH
	isSaddleable ()Z L_
	isTraderLlama ()Z fu
	isWearingArmor ()Z ft
	joinCaravan (Lnet/minecraft/world/entity/animal/horse/Llama;)V a
	leaveCaravan ()V fA
	makeBabyLlama ()Lnet/minecraft/world/entity/animal/horse/Llama; fz
	makeMad ()V fm
	performRangedAttack (Lnet/minecraft/world/entity/LivingEntity;F)V a
	playChestEquipsSound ()V eO
	playStepSound (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V b
	positionRider (Lnet/minecraft/world/entity/Entity;)V k
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	registerGoals ()V o
	setDidSpit (Z)V A
	setRandomStrength ()V fE
	setStrength (I)V x
	setSwag (Lnet/minecraft/world/item/DyeColor;)V a
	setVariant (I)V w
	spit (Lnet/minecraft/world/entity/LivingEntity;)V i
	updateContainerEquipment ()V fe
net/minecraft/world/entity/animal/horse/Llama$LlamaAttackWolfGoal bbb$a
	getFollowDistance ()D k
net/minecraft/world/entity/animal/horse/Llama$LlamaGroupData bbb$b
	variant a
net/minecraft/world/entity/animal/horse/Llama$LlamaHurtByTargetGoal bbb$c
	canContinueToUse ()Z b
net/minecraft/world/entity/animal/horse/Markings bbc
	$VALUES h
	BLACK_DOTS e
	BY_ID f
	NONE a
	WHITE b
	WHITE_DOTS d
	WHITE_FIELD c
	id g
	byId (I)Lnet/minecraft/world/entity/animal/horse/Markings; a
	getId ()I a
net/minecraft/world/entity/animal/horse/Mule bbd
	getAmbientSound ()Lnet/minecraft/sounds/SoundEvent; I
	getAngrySound ()Lnet/minecraft/sounds/SoundEvent; fh
	getBreedOffspring (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/AgableMob;)Lnet/minecraft/world/entity/AgableMob; a
	getDeathSound ()Lnet/minecraft/sounds/SoundEvent; dp
	getEatingSound ()Lnet/minecraft/sounds/SoundEvent; fg
	getHurtSound (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEvent; e
	playChestEquipsSound ()V eO
net/minecraft/world/entity/animal/horse/SkeletonHorse bbe
	isTrap bx
	skeletonTrapGoal bw
	trapTime by
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	addBehaviourGoals ()V eV
	aiStep ()V k
	createAttributes ()Lnet/minecraft/world/entity/ai/attributes/AttributeSupplier$Builder; eL
	getAmbientSound ()Lnet/minecraft/sounds/SoundEvent; I
	getBreedOffspring (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/AgableMob;)Lnet/minecraft/world/entity/AgableMob; a
	getDeathSound ()Lnet/minecraft/sounds/SoundEvent; dp
	getHurtSound (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEvent; e
	getMobType ()Lnet/minecraft/world/entity/MobType; dB
	getPassengersRidingOffset ()D bb
	getSwimSound ()Lnet/minecraft/sounds/SoundEvent; au
	getWaterSlowDown ()F dL
	isTrap ()Z eM
	mobInteract (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResult; b
	playJumpSound ()V fn
	playSwimSound (F)V d
	randomizeAttributes ()V eK
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	rideableUnderWater ()Z bs
	setTrap (Z)V t
net/minecraft/world/entity/animal/horse/SkeletonTrapGoal bbf
	horse a
	canUse ()Z a
	createHorse (Lnet/minecraft/world/DifficultyInstance;)Lnet/minecraft/world/entity/animal/horse/AbstractHorse; a
	createSkeleton (Lnet/minecraft/world/DifficultyInstance;Lnet/minecraft/world/entity/animal/horse/AbstractHorse;)Lnet/minecraft/world/entity/monster/Skeleton; a
	disenchant (Lnet/minecraft/world/item/ItemStack;)Lnet/minecraft/world/item/ItemStack; a
	tick ()V e
net/minecraft/world/entity/animal/horse/TraderLlama bbg
	despawnDelay bw
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	aiStep ()V k
	canDespawn ()Z fF
	doPlayerRide (Lnet/minecraft/world/entity/player/Player;)V h
	finalizeSpawn (Lnet/minecraft/world/level/ServerLevelAccessor;Lnet/minecraft/world/DifficultyInstance;Lnet/minecraft/world/entity/MobSpawnType;Lnet/minecraft/world/entity/SpawnGroupData;Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/world/entity/SpawnGroupData; a
	isLeashedToSomethingOtherThanTheWanderingTrader ()Z fH
	isLeashedToWanderingTrader ()Z fG
	isTraderLlama ()Z fu
	makeBabyLlama ()Lnet/minecraft/world/entity/animal/horse/Llama; fz
	maybeDespawn ()V fE
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	registerGoals ()V o
	setDespawnDelay (I)V x
net/minecraft/world/entity/animal/horse/TraderLlama$TraderLlamaDefendWanderingTraderGoal bbg$a
	llama b
	ownerLastHurtBy c
	timestamp d
	canUse ()Z a
	start ()V c
net/minecraft/world/entity/animal/horse/Variant bbh
	$VALUES j
	BLACK e
	BROWN d
	BY_ID h
	CHESTNUT c
	CREAMY b
	DARKBROWN g
	GRAY f
	WHITE a
	id i
	byId (I)Lnet/minecraft/world/entity/animal/horse/Variant; a
	getId ()I a
net/minecraft/world/entity/animal/horse/ZombieHorse bbi
	addBehaviourGoals ()V eV
	createAttributes ()Lnet/minecraft/world/entity/ai/attributes/AttributeSupplier$Builder; eL
	getAmbientSound ()Lnet/minecraft/sounds/SoundEvent; I
	getBreedOffspring (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/AgableMob;)Lnet/minecraft/world/entity/AgableMob; a
	getDeathSound ()Lnet/minecraft/sounds/SoundEvent; dp
	getHurtSound (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEvent; e
	getMobType ()Lnet/minecraft/world/entity/MobType; dB
	mobInteract (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResult; b
	randomizeAttributes ()V eK
net/minecraft/world/entity/boss/BossMob bbl
	getDisplayName ()Lnet/minecraft/network/chat/Component; d
	getHealth ()F dj
	getMaxHealth ()F dw
net/minecraft/world/entity/boss/EnderDragonPart bbm
	name c
	parentMob b
	size d
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	defineSynchedData ()V e
	getAddEntityPacket ()Lnet/minecraft/network/protocol/Packet; P
	getDimensions (Lnet/minecraft/world/entity/Pose;)Lnet/minecraft/world/entity/EntityDimensions; a
	hurt (Lnet/minecraft/world/damagesource/DamageSource;F)Z a
	is (Lnet/minecraft/world/entity/Entity;)Z s
	isPickable ()Z aS
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
net/minecraft/world/entity/boss/enderdragon/EndCrystal bbn
	DATA_BEAM_TARGET c
	DATA_SHOW_BOTTOM d
	time b
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	defineSynchedData ()V e
	getAddEntityPacket ()Lnet/minecraft/network/protocol/Packet; P
	getBeamTarget ()Lnet/minecraft/core/BlockPos; g
	hurt (Lnet/minecraft/world/damagesource/DamageSource;F)Z a
	isMovementNoisy ()Z aB
	isPickable ()Z aS
	kill ()V Z
	onDestroyedBy (Lnet/minecraft/world/damagesource/DamageSource;)V a
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	setBeamTarget (Lnet/minecraft/core/BlockPos;)V a
	setShowBottom (Z)V a
	shouldRenderAtSqrDistance (D)Z a
	showsBottom ()Z h
	tick ()V j
net/minecraft/world/entity/boss/enderdragon/EnderDragon bbo
	CRYSTAL_DESTROY_TARGETING bw
	DATA_PHASE b
	LOGGER bv
	body bz
	dragonDeathTime bs
	dragonFight bF
	flapTime bq
	growlTime bH
	head bo
	inWall br
	nearestCrystal bu
	neck by
	nodeAdjacency bK
	nodes bJ
	oFlapTime bp
	openSet bL
	phaseManager bG
	posPointer d
	positions c
	sittingDamageReceived bI
	subEntities bx
	tail1 bA
	tail2 bB
	tail3 bC
	wing1 bD
	wing2 bE
	yRotA bt
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	addEffect (Lnet/minecraft/world/effect/MobEffectInstance;)Z c
	aiStep ()V k
	canChangeDimensions ()Z bN
	canRide (Lnet/minecraft/world/entity/Entity;)Z n
	checkCrystals ()V eN
	checkDespawn ()V cH
	checkWalls (Lnet/minecraft/world/phys/AABB;)Z b
	createAttributes ()Lnet/minecraft/world/entity/ai/attributes/AttributeSupplier$Builder; m
	defineSynchedData ()V e
	dropExperience (I)V a
	findClosestNode ()I eI
	findClosestNode (DDD)I p
	findPath (IILnet/minecraft/world/level/pathfinder/Node;)Lnet/minecraft/world/level/pathfinder/Path; a
	getAmbientSound ()Lnet/minecraft/sounds/SoundEvent; I
	getDragonFight ()Lnet/minecraft/world/level/dimension/end/EndDragonFight; eL
	getHeadLookVector (F)Lnet/minecraft/world/phys/Vec3; x
	getHeadPartYOffset (I[D[D)F a
	getHeadYOffset ()F eM
	getHurtSound (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEvent; e
	getLatencyPos (IF)[D a
	getPhaseManager ()Lnet/minecraft/world/entity/boss/enderdragon/phases/EnderDragonPhaseManager; eK
	getSoundSource ()Lnet/minecraft/sounds/SoundSource; ct
	getSoundVolume ()F dF
	getSubEntities ()[Lnet/minecraft/world/entity/boss/EnderDragonPart; eJ
	hurt (Ljava/util/List;)V b
	hurt (Lnet/minecraft/world/damagesource/DamageSource;F)Z a
	hurt (Lnet/minecraft/world/entity/boss/EnderDragonPart;Lnet/minecraft/world/damagesource/DamageSource;F)Z a
	isPickable ()Z aS
	kill ()V Z
	knockBack (Ljava/util/List;)V a
	onCrystalDestroyed (Lnet/minecraft/world/entity/boss/enderdragon/EndCrystal;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/damagesource/DamageSource;)V a
	onSyncedDataUpdated (Lnet/minecraft/network/syncher/EntityDataAccessor;)V a
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	reallyHurt (Lnet/minecraft/world/damagesource/DamageSource;F)Z f
	reconstructPath (Lnet/minecraft/world/level/pathfinder/Node;Lnet/minecraft/world/level/pathfinder/Node;)Lnet/minecraft/world/level/pathfinder/Path; a
	rotWrap (D)F i
	tickDeath ()V cT
	tickPart (Lnet/minecraft/world/entity/boss/EnderDragonPart;DDD)V a
net/minecraft/world/entity/boss/enderdragon/phases/AbstractDragonPhaseInstance bbq
	dragon a
	begin ()V d
	doClientTick ()V b
	doServerTick ()V c
	end ()V e
	getFlySpeed ()F f
	getFlyTargetLocation ()Lnet/minecraft/world/phys/Vec3; g
	getTurnSpeed ()F h
	isSitting ()Z a
	onCrystalDestroyed (Lnet/minecraft/world/entity/boss/enderdragon/EndCrystal;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/damagesource/DamageSource;Lnet/minecraft/world/entity/player/Player;)V a
	onHurt (Lnet/minecraft/world/damagesource/DamageSource;F)F a
net/minecraft/world/entity/boss/enderdragon/phases/AbstractDragonSittingPhase bbr
	isSitting ()Z a
	onHurt (Lnet/minecraft/world/damagesource/DamageSource;F)F a
net/minecraft/world/entity/boss/enderdragon/phases/DragonChargePlayerPhase bbs
	LOGGER b
	targetLocation c
	timeSinceCharge d
	begin ()V d
	doServerTick ()V c
	getFlySpeed ()F f
	getFlyTargetLocation ()Lnet/minecraft/world/phys/Vec3; g
	getPhase ()Lnet/minecraft/world/entity/boss/enderdragon/phases/EnderDragonPhase; i
	setTarget (Lnet/minecraft/world/phys/Vec3;)V a
net/minecraft/world/entity/boss/enderdragon/phases/DragonDeathPhase bbt
	targetLocation b
	time c
	begin ()V d
	doClientTick ()V b
	doServerTick ()V c
	getFlySpeed ()F f
	getFlyTargetLocation ()Lnet/minecraft/world/phys/Vec3; g
	getPhase ()Lnet/minecraft/world/entity/boss/enderdragon/phases/EnderDragonPhase; i
net/minecraft/world/entity/boss/enderdragon/phases/DragonHoldingPatternPhase bbu
	NEW_TARGET_TARGETING b
	clockwise e
	currentPath c
	targetLocation d
	begin ()V d
	doServerTick ()V c
	findNewTarget ()V j
	getFlyTargetLocation ()Lnet/minecraft/world/phys/Vec3; g
	getPhase ()Lnet/minecraft/world/entity/boss/enderdragon/phases/EnderDragonPhase; i
	navigateToNextPathNode ()V k
	onCrystalDestroyed (Lnet/minecraft/world/entity/boss/enderdragon/EndCrystal;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/damagesource/DamageSource;Lnet/minecraft/world/entity/player/Player;)V a
	strafePlayer (Lnet/minecraft/world/entity/player/Player;)V a
net/minecraft/world/entity/boss/enderdragon/phases/DragonHoverPhase bbv
	targetLocation b
	begin ()V d
	doServerTick ()V c
	getFlySpeed ()F f
	getFlyTargetLocation ()Lnet/minecraft/world/phys/Vec3; g
	getPhase ()Lnet/minecraft/world/entity/boss/enderdragon/phases/EnderDragonPhase; i
	isSitting ()Z a
net/minecraft/world/entity/boss/enderdragon/phases/DragonLandingApproachPhase bbw
	NEAR_EGG_TARGETING b
	currentPath c
	targetLocation d
	begin ()V d
	doServerTick ()V c
	findNewTarget ()V j
	getFlyTargetLocation ()Lnet/minecraft/world/phys/Vec3; g
	getPhase ()Lnet/minecraft/world/entity/boss/enderdragon/phases/EnderDragonPhase; i
	navigateToNextPathNode ()V k
net/minecraft/world/entity/boss/enderdragon/phases/DragonLandingPhase bbx
	targetLocation b
	begin ()V d
	doClientTick ()V b
	doServerTick ()V c
	getFlySpeed ()F f
	getFlyTargetLocation ()Lnet/minecraft/world/phys/Vec3; g
	getPhase ()Lnet/minecraft/world/entity/boss/enderdragon/phases/EnderDragonPhase; i
	getTurnSpeed ()F h
net/minecraft/world/entity/boss/enderdragon/phases/DragonPhaseInstance bby
	begin ()V d
	doClientTick ()V b
	doServerTick ()V c
	end ()V e
	getFlySpeed ()F f
	getFlyTargetLocation ()Lnet/minecraft/world/phys/Vec3; g
	getPhase ()Lnet/minecraft/world/entity/boss/enderdragon/phases/EnderDragonPhase; i
	getTurnSpeed ()F h
	isSitting ()Z a
	onCrystalDestroyed (Lnet/minecraft/world/entity/boss/enderdragon/EndCrystal;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/damagesource/DamageSource;Lnet/minecraft/world/entity/player/Player;)V a
	onHurt (Lnet/minecraft/world/damagesource/DamageSource;F)F a
net/minecraft/world/entity/boss/enderdragon/phases/DragonSittingAttackingPhase bbz
	attackingTicks b
	begin ()V d
	doClientTick ()V b
	doServerTick ()V c
	getPhase ()Lnet/minecraft/world/entity/boss/enderdragon/phases/EnderDragonPhase; i
net/minecraft/world/entity/boss/enderdragon/phases/DragonSittingFlamingPhase bca
	flame d
	flameCount c
	flameTicks b
	begin ()V d
	doClientTick ()V b
	doServerTick ()V c
	end ()V e
	getPhase ()Lnet/minecraft/world/entity/boss/enderdragon/phases/EnderDragonPhase; i
	resetFlameCount ()V j
net/minecraft/world/entity/boss/enderdragon/phases/DragonSittingScanningPhase bcb
	CHARGE_TARGETING b
	scanTargeting c
	scanningTime d
	begin ()V d
	doServerTick ()V c
	getPhase ()Lnet/minecraft/world/entity/boss/enderdragon/phases/EnderDragonPhase; i
net/minecraft/world/entity/boss/enderdragon/phases/DragonStrafePlayerPhase bcc
	LOGGER b
	attackTarget f
	currentPath d
	fireballCharge c
	holdingPatternClockwise g
	targetLocation e
	begin ()V d
	doServerTick ()V c
	findNewTarget ()V j
	getFlyTargetLocation ()Lnet/minecraft/world/phys/Vec3; g
	getPhase ()Lnet/minecraft/world/entity/boss/enderdragon/phases/EnderDragonPhase; i
	navigateToNextPathNode ()V k
	setTarget (Lnet/minecraft/world/entity/LivingEntity;)V a
net/minecraft/world/entity/boss/enderdragon/phases/DragonTakeoffPhase bcd
	currentPath c
	firstTick b
	targetLocation d
	begin ()V d
	doServerTick ()V c
	findNewTarget ()V j
	getFlyTargetLocation ()Lnet/minecraft/world/phys/Vec3; g
	getPhase ()Lnet/minecraft/world/entity/boss/enderdragon/phases/EnderDragonPhase; i
	navigateToNextPathNode ()V k
net/minecraft/world/entity/boss/enderdragon/phases/EnderDragonPhase bce
	CHARGING_PLAYER i
	DYING j
	HOLDING_PATTERN a
	HOVERING k
	LANDING d
	LANDING_APPROACH c
	SITTING_ATTACKING h
	SITTING_FLAMING f
	SITTING_SCANNING g
	STRAFE_PLAYER b
	TAKEOFF e
	id n
	instanceClass m
	name o
	phases l
	create (Ljava/lang/Class;Ljava/lang/String;)Lnet/minecraft/world/entity/boss/enderdragon/phases/EnderDragonPhase; a
	createInstance (Lnet/minecraft/world/entity/boss/enderdragon/EnderDragon;)Lnet/minecraft/world/entity/boss/enderdragon/phases/DragonPhaseInstance; a
	getById (I)Lnet/minecraft/world/entity/boss/enderdragon/phases/EnderDragonPhase; a
	getConstructor ()Ljava/lang/reflect/Constructor; a
	getCount ()I c
	getId ()I b
net/minecraft/world/entity/boss/enderdragon/phases/EnderDragonPhaseManager bcf
	LOGGER a
	currentPhase d
	dragon b
	phases c
	getCurrentPhase ()Lnet/minecraft/world/entity/boss/enderdragon/phases/DragonPhaseInstance; a
	getPhase (Lnet/minecraft/world/entity/boss/enderdragon/phases/EnderDragonPhase;)Lnet/minecraft/world/entity/boss/enderdragon/phases/DragonPhaseInstance; b
	setPhase (Lnet/minecraft/world/entity/boss/enderdragon/phases/EnderDragonPhase;)V a
net/minecraft/world/entity/boss/wither/WitherBoss bci
	DATA_ID_INV bp
	DATA_TARGETS bo
	DATA_TARGET_A b
	DATA_TARGET_B c
	DATA_TARGET_C d
	LIVING_ENTITY_SELECTOR by
	TARGETING_CONDITIONS bz
	bossEvent bx
	destroyBlocksTick bw
	idleHeadUpdates bv
	nextHeadUpdate bu
	xRotHeads bq
	xRotOHeads bs
	yRotHeads br
	yRotOHeads bt
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	addEffect (Lnet/minecraft/world/effect/MobEffectInstance;)Z c
	aiStep ()V k
	canBeAffected (Lnet/minecraft/world/effect/MobEffectInstance;)Z d
	canChangeDimensions ()Z bN
	canDestroy (Lnet/minecraft/world/level/block/state/BlockState;)Z c
	canRide (Lnet/minecraft/world/entity/Entity;)Z n
	causeFallDamage (FF)Z b
	checkDespawn ()V cH
	createAttributes ()Lnet/minecraft/world/entity/ai/attributes/AttributeSupplier$Builder; eK
	customServerAiStep ()V N
	defineSynchedData ()V e
	dropCustomDeathLoot (Lnet/minecraft/world/damagesource/DamageSource;IZ)V a
	getAlternativeTarget (I)I t
	getAmbientSound ()Lnet/minecraft/sounds/SoundEvent; I
	getDeathSound ()Lnet/minecraft/sounds/SoundEvent; dp
	getHeadX (I)D u
	getHeadXRot (I)F b
	getHeadY (I)D v
	getHeadYRot (I)F a
	getHeadZ (I)D w
	getHurtSound (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEvent; e
	getInvulnerableTicks ()I eL
	getMobType ()Lnet/minecraft/world/entity/MobType; dB
	hurt (Lnet/minecraft/world/damagesource/DamageSource;F)Z a
	isPowered ()Z S_
	makeInvulnerable ()V m
	makeStuckInBlock (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/phys/Vec3;)V a
	performRangedAttack (IDDDZ)V a
	performRangedAttack (ILnet/minecraft/world/entity/LivingEntity;)V a
	performRangedAttack (Lnet/minecraft/world/entity/LivingEntity;F)V a
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	registerGoals ()V o
	rotlerp (FFF)F a
	setAlternativeTarget (II)V a
	setCustomName (Lnet/minecraft/network/chat/Component;)V a
	setInvulnerableTicks (I)V s
	startSeenByPlayer (Lnet/minecraft/server/level/ServerPlayer;)V b
	stopSeenByPlayer (Lnet/minecraft/server/level/ServerPlayer;)V c
net/minecraft/world/entity/boss/wither/WitherBoss$WitherDoNothingGoal bci$a
	canUse ()Z a
net/minecraft/world/entity/decoration/ArmorStand bck
	BABY_DIMENSIONS bq
	DATA_BODY_POSE d
	DATA_CLIENT_FLAGS b
	DATA_HEAD_POSE c
	DATA_LEFT_ARM_POSE e
	DATA_LEFT_LEG_POSE g
	DATA_RIGHT_ARM_POSE f
	DATA_RIGHT_LEG_POSE bh
	DEFAULT_BODY_POSE bk
	DEFAULT_HEAD_POSE bj
	DEFAULT_LEFT_ARM_POSE bl
	DEFAULT_LEFT_LEG_POSE bn
	DEFAULT_RIGHT_ARM_POSE bm
	DEFAULT_RIGHT_LEG_POSE bo
	MARKER_DIMENSIONS bp
	RIDABLE_MINECARTS br
	armorItems bt
	bodyPose bx
	disabledSlots bv
	handItems bs
	headPose bw
	invisible bu
	lastHit bi
	leftArmPose by
	leftLegPose bA
	rightArmPose bz
	rightLegPose bB
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	attackable ()Z eh
	brokenByAnything (Lnet/minecraft/world/damagesource/DamageSource;)V g
	brokenByPlayer (Lnet/minecraft/world/damagesource/DamageSource;)V f
	canTakeItem (Lnet/minecraft/world/item/ItemStack;)Z e
	causeDamage (Lnet/minecraft/world/damagesource/DamageSource;F)V f
	defineSynchedData ()V e
	doPush (Lnet/minecraft/world/entity/Entity;)V C
	getArmorSlots ()Ljava/lang/Iterable; bn
	getBodyPose ()Lnet/minecraft/core/Rotations; t
	getClickedSlot (Lnet/minecraft/world/phys/Vec3;)Lnet/minecraft/world/entity/EquipmentSlot; i
	getDeathSound ()Lnet/minecraft/sounds/SoundEvent; dp
	getDimensions (Lnet/minecraft/world/entity/Pose;)Lnet/minecraft/world/entity/EntityDimensions; a
	getDimensionsMarker (Z)Lnet/minecraft/world/entity/EntityDimensions; s
	getFallDamageSound (I)Lnet/minecraft/sounds/SoundEvent; o
	getHandSlots ()Ljava/lang/Iterable; bm
	getHeadPose ()Lnet/minecraft/core/Rotations; r
	getHurtSound (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEvent; e
	getItemBySlot (Lnet/minecraft/world/entity/EquipmentSlot;)Lnet/minecraft/world/item/ItemStack; b
	getLeftArmPose ()Lnet/minecraft/core/Rotations; u
	getLeftLegPose ()Lnet/minecraft/core/Rotations; x
	getLightProbePosition (F)Lnet/minecraft/world/phys/Vec3; k
	getMainArm ()Lnet/minecraft/world/entity/HumanoidArm; dU
	getMyRidingOffset ()D ba
	getPistonPushReaction ()Lnet/minecraft/world/level/material/PushReaction; y_
	getRightArmPose ()Lnet/minecraft/core/Rotations; v
	getRightLegPose ()Lnet/minecraft/core/Rotations; z
	getStandingEyeHeight (Lnet/minecraft/world/entity/Pose;Lnet/minecraft/world/entity/EntityDimensions;)F b
	handleEntityEvent (B)V a
	hasPhysics ()Z A
	hurt (Lnet/minecraft/world/damagesource/DamageSource;F)Z a
	ignoreExplosion ()Z ch
	interactAt (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/phys/Vec3;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResult; a
	isAffectedByPotions ()Z eg
	isBaby ()Z w_
	isDisabled (Lnet/minecraft/world/entity/EquipmentSlot;)Z d
	isEffectiveAi ()Z dR
	isMarker ()Z q
	isNoBasePlate ()Z p
	isPickable ()Z aS
	isPushable ()Z aT
	isShowArms ()Z o
	isSmall ()Z m
	kill ()V Z
	onSyncedDataUpdated (Lnet/minecraft/network/syncher/EntityDataAccessor;)V a
	playBrokenSound ()V F
	pushEntities ()V dP
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	readPose (Lnet/minecraft/nbt/CompoundTag;)V g
	refreshDimensions ()V x_
	setBit (BIZ)B a
	setBodyPose (Lnet/minecraft/core/Rotations;)V b
	setHeadPose (Lnet/minecraft/core/Rotations;)V a
	setInvisible (Z)V j
	setItemSlot (Lnet/minecraft/world/entity/EquipmentSlot;Lnet/minecraft/world/item/ItemStack;)V a
	setLeftArmPose (Lnet/minecraft/core/Rotations;)V c
	setLeftLegPose (Lnet/minecraft/core/Rotations;)V e
	setMarker (Z)V r
	setNoBasePlate (Z)V q
	setRightArmPose (Lnet/minecraft/core/Rotations;)V d
	setRightLegPose (Lnet/minecraft/core/Rotations;)V f
	setShowArms (Z)V p
	setSlot (ILnet/minecraft/world/item/ItemStack;)Z a_
	setSmall (Z)V a
	setYBodyRot (F)V n
	setYHeadRot (F)V m
	shouldRenderAtSqrDistance (D)Z a
	showBreakingParticles ()V D
	skipAttackInteraction (Lnet/minecraft/world/entity/Entity;)Z t
	swapItem (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/entity/EquipmentSlot;Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/InteractionHand;)Z a
	thunderHit (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LightningBolt;)V a
	tick ()V j
	tickHeadTurn (FF)F f
	travel (Lnet/minecraft/world/phys/Vec3;)V g
	updateInvisibilityStatus ()V C
	writePose ()Lnet/minecraft/nbt/CompoundTag; B
net/minecraft/world/entity/decoration/HangingEntity bcl
	HANGING_ENTITY b
	checkInterval e
	direction d
	pos c
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	defineSynchedData ()V e
	dropItem (Lnet/minecraft/world/entity/Entity;)V a
	getDirection ()Lnet/minecraft/core/Direction; bY
	getHeight ()I k
	getPos ()Lnet/minecraft/core/BlockPos; n
	getWidth ()I i
	hurt (Lnet/minecraft/world/damagesource/DamageSource;F)Z a
	isPickable ()Z aS
	mirror (Lnet/minecraft/world/level/block/Mirror;)F a
	move (Lnet/minecraft/world/entity/MoverType;Lnet/minecraft/world/phys/Vec3;)V a
	offs (I)D a
	playPlacementSound ()V m
	push (DDD)V i
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	recalculateBoundingBox ()V g
	refreshDimensions ()V x_
	repositionEntityAfterLoad ()Z aU
	rotate (Lnet/minecraft/world/level/block/Rotation;)F a
	setDirection (Lnet/minecraft/core/Direction;)V a
	setPos (DDD)V d
	skipAttackInteraction (Lnet/minecraft/world/entity/Entity;)Z t
	spawnAtLocation (Lnet/minecraft/world/item/ItemStack;F)Lnet/minecraft/world/entity/item/ItemEntity; a
	survives ()Z h
	thunderHit (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LightningBolt;)V a
	tick ()V j
net/minecraft/world/entity/decoration/ItemFrame bcm
	DATA_ITEM f
	DATA_ROTATION g
	LOGGER e
	dropChance ag
	fixed ah
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	defineSynchedData ()V e
	dropItem (Lnet/minecraft/world/entity/Entity;)V a
	dropItem (Lnet/minecraft/world/entity/Entity;Z)V b
	getAddEntityPacket ()Lnet/minecraft/network/protocol/Packet; P
	getAnalogOutput ()I q
	getEyeHeight (Lnet/minecraft/world/entity/Pose;Lnet/minecraft/world/entity/EntityDimensions;)F a
	getHeight ()I k
	getItem ()Lnet/minecraft/world/item/ItemStack; o
	getPickRadius ()F bf
	getRotation ()I p
	getWidth ()I i
	hurt (Lnet/minecraft/world/damagesource/DamageSource;F)Z a
	interact (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResult; a
	kill ()V Z
	move (Lnet/minecraft/world/entity/MoverType;Lnet/minecraft/world/phys/Vec3;)V a
	onSyncedDataUpdated (Lnet/minecraft/network/syncher/EntityDataAccessor;)V a
	playPlacementSound ()V m
	push (DDD)V i
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	recalculateBoundingBox ()V g
	removeFramedMap (Lnet/minecraft/world/item/ItemStack;)V c
	setDirection (Lnet/minecraft/core/Direction;)V a
	setItem (Lnet/minecraft/world/item/ItemStack;)V b
	setItem (Lnet/minecraft/world/item/ItemStack;Z)V a
	setRotation (I)V a
	setRotation (IZ)V a
	setSlot (ILnet/minecraft/world/item/ItemStack;)Z a_
	shouldRenderAtSqrDistance (D)Z a
	survives ()Z h
net/minecraft/world/entity/decoration/LeashFenceKnotEntity bcn
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	dropItem (Lnet/minecraft/world/entity/Entity;)V a
	getAddEntityPacket ()Lnet/minecraft/network/protocol/Packet; P
	getEyeHeight (Lnet/minecraft/world/entity/Pose;Lnet/minecraft/world/entity/EntityDimensions;)F a
	getHeight ()I k
	getOrCreateKnot (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/entity/decoration/LeashFenceKnotEntity; a
	getRopeHoldPosition (F)Lnet/minecraft/world/phys/Vec3; o
	getWidth ()I i
	interact (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResult; a
	playPlacementSound ()V m
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	recalculateBoundingBox ()V g
	setDirection (Lnet/minecraft/core/Direction;)V a
	setPos (DDD)V d
	shouldRenderAtSqrDistance (D)Z a
	survives ()Z h
net/minecraft/world/entity/decoration/Motive bco
	ALBAN c
	AZTEC b
	AZTEC2 d
	BOMB e
	BURNING_SKULL x
	BUST p
	COURBET i
	CREEBET l
	DONKEY_KONG z
	FIGHTERS u
	GRAHAM n
	KEBAB a
	MATCH o
	PIGSCENE w
	PLANT f
	POINTER v
	POOL h
	SEA j
	SKELETON y
	SKULL_AND_ROSES s
	STAGE q
	SUNSET k
	VOID r
	WANDERER m
	WASTELAND g
	WITHER t
	height B
	width A
	getHeight ()I b
	getWidth ()I a
	register (Ljava/lang/String;II)Lnet/minecraft/world/entity/decoration/Motive; a
net/minecraft/world/entity/decoration/Painting bcp
	motive e
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	dropItem (Lnet/minecraft/world/entity/Entity;)V a
	getAddEntityPacket ()Lnet/minecraft/network/protocol/Packet; P
	getHeight ()I k
	getWidth ()I i
	lerpTo (DDDFFIZ)V a
	moveTo (DDDFF)V b
	playPlacementSound ()V m
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
net/minecraft/world/entity/item/FallingBlockEntity bcr
	DATA_START_POS e
	blockData d
	blockState f
	cancelDrop g
	dropItem c
	fallDamageAmount ai
	fallDamageMax ah
	hurtEntities ag
	time b
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	causeFallDamage (FF)Z b
	defineSynchedData ()V e
	displayFireAnimation ()Z bQ
	fillCrashReportCategory (Lnet/minecraft/CrashReportCategory;)V a
	getAddEntityPacket ()Lnet/minecraft/network/protocol/Packet; P
	getBlockState ()Lnet/minecraft/world/level/block/state/BlockState; i
	getLevel ()Lnet/minecraft/world/level/Level; h
	getStartPos ()Lnet/minecraft/core/BlockPos; g
	isAttackable ()Z bK
	isMovementNoisy ()Z aB
	isPickable ()Z aS
	onlyOpCanSetNbt ()Z ci
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	setHurtsEntities (Z)V a
	setStartPos (Lnet/minecraft/core/BlockPos;)V a
	tick ()V j
net/minecraft/world/entity/item/ItemEntity bcs
	DATA_ITEM c
	age d
	bobOffs b
	health f
	owner ag
	pickupDelay e
	thrower g
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	areMergable (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/item/ItemStack;)Z a
	burn (I)V h
	changeDimension (Lnet/minecraft/server/level/ServerLevel;)Lnet/minecraft/world/entity/Entity; b
	copy ()Lnet/minecraft/world/entity/item/ItemEntity; t
	defineSynchedData ()V e
	fireImmune ()Z aC
	getAddEntityPacket ()Lnet/minecraft/network/protocol/Packet; P
	getAge ()I k
	getItem ()Lnet/minecraft/world/item/ItemStack; g
	getName ()Lnet/minecraft/network/chat/Component; Q
	getOwner ()Ljava/util/UUID; h
	getSpin (F)F a
	getThrower ()Ljava/util/UUID; i
	hasPickUpDelay ()Z p
	hurt (Lnet/minecraft/world/damagesource/DamageSource;F)Z a
	isAttackable ()Z bK
	isMergable ()Z z
	isMovementNoisy ()Z aB
	makeFakeItem ()V s
	merge (Lnet/minecraft/world/entity/item/ItemEntity;Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/entity/item/ItemEntity;Lnet/minecraft/world/item/ItemStack;)V a
	merge (Lnet/minecraft/world/entity/item/ItemEntity;Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/item/ItemStack;)V a
	merge (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/item/ItemStack;I)Lnet/minecraft/world/item/ItemStack; a
	mergeWithNeighbours ()V x
	onSyncedDataUpdated (Lnet/minecraft/network/syncher/EntityDataAccessor;)V a
	playerTouch (Lnet/minecraft/world/entity/player/Player;)V a_
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	setDefaultPickUpDelay ()V m
	setExtendedLifetime ()V r
	setItem (Lnet/minecraft/world/item/ItemStack;)V b
	setNeverPickUp ()V o
	setNoPickUpDelay ()V n
	setOwner (Ljava/util/UUID;)V b
	setPickUpDelay (I)V a
	setThrower (Ljava/util/UUID;)V c
	setUnderLavaMovement ()V v
	setUnderwaterMovement ()V u
	setUnlimitedLifetime ()V q
	tick ()V j
	tryToMerge (Lnet/minecraft/world/entity/item/ItemEntity;)V a
net/minecraft/world/entity/item/PrimedTnt bct
	DATA_FUSE_ID b
	life d
	owner c
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	defineSynchedData ()V e
	explode ()V k
	getAddEntityPacket ()Lnet/minecraft/network/protocol/Packet; P
	getEyeHeight (Lnet/minecraft/world/entity/Pose;Lnet/minecraft/world/entity/EntityDimensions;)F a
	getFuse ()I h
	getLife ()I i
	getOwner ()Lnet/minecraft/world/entity/LivingEntity; g
	isMovementNoisy ()Z aB
	isPickable ()Z aS
	onSyncedDataUpdated (Lnet/minecraft/network/syncher/EntityDataAccessor;)V a
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	setFuse (I)V a
	tick ()V j
net/minecraft/world/entity/monster/AbstractIllager bcv
	getArmPose ()Lnet/minecraft/world/entity/monster/AbstractIllager$IllagerArmPose; m
	getMobType ()Lnet/minecraft/world/entity/MobType; dB
	registerGoals ()V o
net/minecraft/world/entity/monster/AbstractIllager$IllagerArmPose bcv$a
	$VALUES i
	ATTACKING b
	BOW_AND_ARROW d
	CELEBRATING g
	CROSSBOW_CHARGE f
	CROSSBOW_HOLD e
	CROSSED a
	NEUTRAL h
	SPELLCASTING c
net/minecraft/world/entity/monster/AbstractIllager$RaiderOpenDoorGoal bcv$b
	canUse ()Z a
net/minecraft/world/entity/monster/AbstractSkeleton bcw
	bowGoal b
	meleeGoal c
	aiStep ()V k
	canFireProjectileWeapon (Lnet/minecraft/world/item/ProjectileWeaponItem;)Z a
	createAttributes ()Lnet/minecraft/world/entity/ai/attributes/AttributeSupplier$Builder; m
	finalizeSpawn (Lnet/minecraft/world/level/ServerLevelAccessor;Lnet/minecraft/world/DifficultyInstance;Lnet/minecraft/world/entity/MobSpawnType;Lnet/minecraft/world/entity/SpawnGroupData;Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/world/entity/SpawnGroupData; a
	getArrow (Lnet/minecraft/world/item/ItemStack;F)Lnet/minecraft/world/entity/projectile/AbstractArrow; b
	getMobType ()Lnet/minecraft/world/entity/MobType; dB
	getMyRidingOffset ()D ba
	getStandingEyeHeight (Lnet/minecraft/world/entity/Pose;Lnet/minecraft/world/entity/EntityDimensions;)F b
	getStepSound ()Lnet/minecraft/sounds/SoundEvent; eK
	performRangedAttack (Lnet/minecraft/world/entity/LivingEntity;F)V a
	playStepSound (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V b
	populateDefaultEquipmentSlots (Lnet/minecraft/world/DifficultyInstance;)V a
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	reassessWeaponGoal ()V eL
	registerGoals ()V o
	rideTick ()V aZ
	setItemSlot (Lnet/minecraft/world/entity/EquipmentSlot;Lnet/minecraft/world/item/ItemStack;)V a
net/minecraft/world/entity/monster/Blaze bcx
	DATA_FLAGS_ID d
	allowedHeightOffset b
	nextHeightOffsetChangeTick c
	aiStep ()V k
	causeFallDamage (FF)Z b
	createAttributes ()Lnet/minecraft/world/entity/ai/attributes/AttributeSupplier$Builder; m
	customServerAiStep ()V N
	defineSynchedData ()V e
	getAmbientSound ()Lnet/minecraft/sounds/SoundEvent; I
	getBrightness ()F aQ
	getDeathSound ()Lnet/minecraft/sounds/SoundEvent; dp
	getHurtSound (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEvent; e
	isCharged ()Z eK
	isOnFire ()Z bp
	isSensitiveToWater ()Z dN
	registerGoals ()V o
	setCharged (Z)V t
net/minecraft/world/entity/monster/Blaze$BlazeAttackGoal bcx$a
	attackStep b
	attackTime c
	blaze a
	lastSeen d
	canUse ()Z a
	getFollowDistance ()D g
	start ()V c
	stop ()V d
	tick ()V e
net/minecraft/world/entity/monster/CaveSpider bcy
	createCaveSpider ()Lnet/minecraft/world/entity/ai/attributes/AttributeSupplier$Builder; m
	doHurtTarget (Lnet/minecraft/world/entity/Entity;)Z B
	finalizeSpawn (Lnet/minecraft/world/level/ServerLevelAccessor;Lnet/minecraft/world/DifficultyInstance;Lnet/minecraft/world/entity/MobSpawnType;Lnet/minecraft/world/entity/SpawnGroupData;Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/world/entity/SpawnGroupData; a
	getStandingEyeHeight (Lnet/minecraft/world/entity/Pose;Lnet/minecraft/world/entity/EntityDimensions;)F b
net/minecraft/world/entity/monster/Creeper bcz
	DATA_IS_IGNITED d
	DATA_IS_POWERED c
	DATA_SWELL_DIR b
	droppedSkulls bs
	explosionRadius br
	maxSwell bq
	oldSwell bo
	swell bp
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	canDropMobsSkull ()Z eN
	causeFallDamage (FF)Z b
	createAttributes ()Lnet/minecraft/world/entity/ai/attributes/AttributeSupplier$Builder; m
	defineSynchedData ()V e
	doHurtTarget (Lnet/minecraft/world/entity/Entity;)Z B
	dropCustomDeathLoot (Lnet/minecraft/world/damagesource/DamageSource;IZ)V a
	explodeCreeper ()V eP
	getDeathSound ()Lnet/minecraft/sounds/SoundEvent; dp
	getHurtSound (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEvent; e
	getMaxFallDistance ()I bO
	getSwellDir ()I eK
	getSwelling (F)F y
	ignite ()V eM
	increaseDroppedSkulls ()V eO
	isIgnited ()Z eL
	isPowered ()Z S_
	mobInteract (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResult; b
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	registerGoals ()V o
	setSwellDir (I)V a
	spawnLingeringCloud ()V eS
	thunderHit (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LightningBolt;)V a
	tick ()V j
net/minecraft/world/entity/monster/CrossbowAttackMob bda
	getProjectileShotVector (Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/phys/Vec3;F)Lcom/mojang/math/Vector3f; a
	getTarget ()Lnet/minecraft/world/entity/LivingEntity; A
	onCrossbowAttackPerformed ()V U_
	performCrossbowAttack (Lnet/minecraft/world/entity/LivingEntity;F)V b
	setChargingCrossbow (Z)V b
	shootCrossbowProjectile (Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/entity/projectile/Projectile;FF)V a
	shootCrossbowProjectile (Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/entity/projectile/Projectile;F)V a
net/minecraft/world/entity/monster/Drowned bdb
	groundNavigation c
	searchingForLand d
	waterNavigation b
	addBehaviourGoals ()V m
	canReplaceCurrentItem (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/item/ItemStack;)Z a
	checkDrownedSpawnRules (Lnet/minecraft/world/entity/EntityType;Lnet/minecraft/world/level/ServerLevelAccessor;Lnet/minecraft/world/entity/MobSpawnType;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)Z a
	checkSpawnObstruction (Lnet/minecraft/world/level/LevelReader;)Z a
	closeToNextPos ()Z eO
	convertsInWater ()Z eN
	finalizeSpawn (Lnet/minecraft/world/level/ServerLevelAccessor;Lnet/minecraft/world/DifficultyInstance;Lnet/minecraft/world/entity/MobSpawnType;Lnet/minecraft/world/entity/SpawnGroupData;Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/world/entity/SpawnGroupData; a
	getAmbientSound ()Lnet/minecraft/sounds/SoundEvent; I
	getDeathSound ()Lnet/minecraft/sounds/SoundEvent; dp
	getHurtSound (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEvent; e
	getSkull ()Lnet/minecraft/world/item/ItemStack; eM
	getStepSound ()Lnet/minecraft/sounds/SoundEvent; eL
	getSwimSound ()Lnet/minecraft/sounds/SoundEvent; au
	isDeepEnoughToSpawn (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;)Z a
	isPushedByFluid ()Z bU
	okTarget (Lnet/minecraft/world/entity/LivingEntity;)Z i
	performRangedAttack (Lnet/minecraft/world/entity/LivingEntity;F)V a
	populateDefaultEquipmentSlots (Lnet/minecraft/world/DifficultyInstance;)V a
	setSearchingForLand (Z)V t
	supportsBreakDoorGoal ()Z eK
	travel (Lnet/minecraft/world/phys/Vec3;)V g
	updateSwimming ()V aI
	wantsToSwim ()Z eW
net/minecraft/world/entity/monster/Drowned$DrownedAttackGoal bdb$a
	drowned b
	canContinueToUse ()Z b
	canUse ()Z a
net/minecraft/world/entity/monster/Drowned$DrownedGoToBeachGoal bdb$b
	drowned g
	canContinueToUse ()Z b
	canUse ()Z a
	isValidTarget (Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;)Z a
	start ()V c
	stop ()V d
net/minecraft/world/entity/monster/Drowned$DrownedGoToWaterGoal bdb$c
	level f
	mob a
	speedModifier e
	wantedX b
	wantedY c
	wantedZ d
	canContinueToUse ()Z b
	canUse ()Z a
	getWaterPos ()Lnet/minecraft/world/phys/Vec3; g
	start ()V c
net/minecraft/world/entity/monster/Drowned$DrownedMoveControl bdb$d
	drowned i
	tick ()V a
net/minecraft/world/entity/monster/Drowned$DrownedSwimUpGoal bdb$e
	drowned a
	seaLevel c
	speedModifier b
	stuck d
	canContinueToUse ()Z b
	canUse ()Z a
	start ()V c
	stop ()V d
	tick ()V e
net/minecraft/world/entity/monster/Drowned$DrownedTridentAttackGoal bdb$f
	drowned a
	canUse ()Z a
	start ()V c
	stop ()V d
net/minecraft/world/entity/monster/ElderGuardian bdc
	ELDER_SIZE_SCALE b
	createAttributes ()Lnet/minecraft/world/entity/ai/attributes/AttributeSupplier$Builder; m
	customServerAiStep ()V N
	getAmbientSound ()Lnet/minecraft/sounds/SoundEvent; I
	getAttackDuration ()I eK
	getDeathSound ()Lnet/minecraft/sounds/SoundEvent; dp
	getFlopSound ()Lnet/minecraft/sounds/SoundEvent; eL
	getHurtSound (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEvent; e
net/minecraft/world/entity/monster/EnderMan bdd
	DATA_CARRY_STATE d
	DATA_CREEPY bo
	DATA_STARED_AT bp
	ENDERMITE_SELECTOR bq
	PERSISTENT_ANGER_TIME bt
	SPEED_MODIFIER_ATTACKING c
	SPEED_MODIFIER_ATTACKING_UUID b
	lastStareSound br
	persistentAngerTarget bv
	remainingPersistentAngerTime bu
	targetChangeTime bs
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	aiStep ()V k
	createAttributes ()Lnet/minecraft/world/entity/ai/attributes/AttributeSupplier$Builder; m
	customServerAiStep ()V N
	defineSynchedData ()V e
	dropCustomDeathLoot (Lnet/minecraft/world/damagesource/DamageSource;IZ)V a
	getAmbientSound ()Lnet/minecraft/sounds/SoundEvent; I
	getCarriedBlock ()Lnet/minecraft/world/level/block/state/BlockState; eM
	getDeathSound ()Lnet/minecraft/sounds/SoundEvent; dp
	getHurtSound (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEvent; e
	getPersistentAngerTarget ()Ljava/util/UUID; F_
	getRemainingPersistentAngerTime ()I E_
	getStandingEyeHeight (Lnet/minecraft/world/entity/Pose;Lnet/minecraft/world/entity/EntityDimensions;)F b
	hasBeenStaredAt ()Z eO
	hurt (Lnet/minecraft/world/damagesource/DamageSource;F)Z a
	isCreepy ()Z eN
	isLookingAtMe (Lnet/minecraft/world/entity/player/Player;)Z g
	isSensitiveToWater ()Z dN
	onSyncedDataUpdated (Lnet/minecraft/network/syncher/EntityDataAccessor;)V a
	playStareSound ()V eK
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	registerGoals ()V o
	requiresCustomPersistence ()Z K
	setBeingStaredAt ()V eP
	setCarriedBlock (Lnet/minecraft/world/level/block/state/BlockState;)V c
	setPersistentAngerTarget (Ljava/util/UUID;)V a
	setRemainingPersistentAngerTime (I)V a_
	setTarget (Lnet/minecraft/world/entity/LivingEntity;)V h
	startPersistentAngerTimer ()V G_
	teleport ()Z eL
	teleport (DDD)Z p
	teleportTowards (Lnet/minecraft/world/entity/Entity;)Z a
net/minecraft/world/entity/monster/EnderMan$EndermanFreezeWhenLookedAt bdd$a
	enderman a
	target b
	canUse ()Z a
	start ()V c
	tick ()V e
net/minecraft/world/entity/monster/EnderMan$EndermanLeaveBlockGoal bdd$b
	enderman a
	canPlaceBlock (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/BlockPos;)Z a
	canUse ()Z a
	tick ()V e
net/minecraft/world/entity/monster/EnderMan$EndermanLookForPlayerGoal bdd$c
	aggroTime k
	continueAggroTargetConditions n
	enderman i
	pendingTarget j
	startAggroTargetConditions m
	teleportTime l
	canContinueToUse ()Z b
	canUse ()Z a
	start ()V c
	stop ()V d
	tick ()V e
net/minecraft/world/entity/monster/EnderMan$EndermanTakeBlockGoal bdd$d
	enderman a
	canUse ()Z a
	tick ()V e
net/minecraft/world/entity/monster/Endermite bde
	life b
	playerSpawned c
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	aiStep ()V k
	checkEndermiteSpawnRules (Lnet/minecraft/world/entity/EntityType;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/world/entity/MobSpawnType;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)Z b
	createAttributes ()Lnet/minecraft/world/entity/ai/attributes/AttributeSupplier$Builder; m
	getAmbientSound ()Lnet/minecraft/sounds/SoundEvent; I
	getDeathSound ()Lnet/minecraft/sounds/SoundEvent; dp
	getHurtSound (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEvent; e
	getMobType ()Lnet/minecraft/world/entity/MobType; dB
	getMyRidingOffset ()D ba
	getStandingEyeHeight (Lnet/minecraft/world/entity/Pose;Lnet/minecraft/world/entity/EntityDimensions;)F b
	isMovementNoisy ()Z aB
	isPlayerSpawned ()Z eK
	playStepSound (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V b
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	registerGoals ()V o
	setPlayerSpawned (Z)V t
	setYBodyRot (F)V n
	tick ()V j
net/minecraft/world/entity/monster/Enemy bdf
net/minecraft/world/entity/monster/Evoker bdg
	wololoTarget bo
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	applyRaidBuffs (IZ)V a
	createAttributes ()Lnet/minecraft/world/entity/ai/attributes/AttributeSupplier$Builder; eK
	customServerAiStep ()V N
	defineSynchedData ()V e
	getAmbientSound ()Lnet/minecraft/sounds/SoundEvent; I
	getCastingSoundEvent ()Lnet/minecraft/sounds/SoundEvent; eM
	getCelebrateSound ()Lnet/minecraft/sounds/SoundEvent; eL
	getDeathSound ()Lnet/minecraft/sounds/SoundEvent; dp
	getHurtSound (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEvent; e
	getWololoTarget ()Lnet/minecraft/world/entity/animal/Sheep; fg
	isAlliedTo (Lnet/minecraft/world/entity/Entity;)Z r
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	registerGoals ()V o
	setWololoTarget (Lnet/minecraft/world/entity/animal/Sheep;)V a
net/minecraft/world/entity/monster/Evoker$EvokerAttackSpellGoal bdg$a
	createSpellEntity (DDDDFI)V a
	getCastingInterval ()I h
	getCastingTime ()I g
	getSpell ()Lnet/minecraft/world/entity/monster/SpellcasterIllager$IllagerSpell; l
	getSpellPrepareSound ()Lnet/minecraft/sounds/SoundEvent; k
	performSpellCasting ()V j
net/minecraft/world/entity/monster/Evoker$EvokerCastingSpellGoal bdg$b
	tick ()V e
net/minecraft/world/entity/monster/Evoker$EvokerSummonSpellGoal bdg$c
	vexCountTargeting e
	canUse ()Z a
	getCastingInterval ()I h
	getCastingTime ()I g
	getSpell ()Lnet/minecraft/world/entity/monster/SpellcasterIllager$IllagerSpell; l
	getSpellPrepareSound ()Lnet/minecraft/sounds/SoundEvent; k
	performSpellCasting ()V j
net/minecraft/world/entity/monster/Evoker$EvokerWololoSpellGoal bdg$d
	wololoTargeting e
	canContinueToUse ()Z b
	canUse ()Z a
	getCastWarmupTime ()I m
	getCastingInterval ()I h
	getCastingTime ()I g
	getSpell ()Lnet/minecraft/world/entity/monster/SpellcasterIllager$IllagerSpell; l
	getSpellPrepareSound ()Lnet/minecraft/sounds/SoundEvent; k
	performSpellCasting ()V j
	start ()V c
	stop ()V d
	tick ()V e
net/minecraft/world/entity/monster/Ghast bdh
	DATA_IS_CHARGING b
	explosionPower c
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	checkGhastSpawnRules (Lnet/minecraft/world/entity/EntityType;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/world/entity/MobSpawnType;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)Z b
	createAttributes ()Lnet/minecraft/world/entity/ai/attributes/AttributeSupplier$Builder; eJ
	defineSynchedData ()V e
	getAmbientSound ()Lnet/minecraft/sounds/SoundEvent; I
	getDeathSound ()Lnet/minecraft/sounds/SoundEvent; dp
	getExplosionPower ()I eI
	getHurtSound (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEvent; e
	getMaxSpawnClusterSize ()I eq
	getSoundSource ()Lnet/minecraft/sounds/SoundSource; ct
	getSoundVolume ()F dF
	getStandingEyeHeight (Lnet/minecraft/world/entity/Pose;Lnet/minecraft/world/entity/EntityDimensions;)F b
	hurt (Lnet/minecraft/world/damagesource/DamageSource;F)Z a
	isCharging ()Z m
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	registerGoals ()V o
	setCharging (Z)V t
	shouldDespawnInPeaceful ()Z L
net/minecraft/world/entity/monster/Ghast$GhastLookGoal bdh$a
	ghast a
	canUse ()Z a
	tick ()V e
net/minecraft/world/entity/monster/Ghast$GhastMoveControl bdh$b
	floatDuration j
	ghast i
	canReach (Lnet/minecraft/world/phys/Vec3;I)Z a
	tick ()V a
net/minecraft/world/entity/monster/Ghast$GhastShootFireballGoal bdh$c
	chargeTime a
	ghast b
	canUse ()Z a
	start ()V c
	stop ()V d
	tick ()V e
net/minecraft/world/entity/monster/Ghast$RandomFloatAroundGoal bdh$d
	ghast a
	canContinueToUse ()Z b
	canUse ()Z a
	start ()V c
net/minecraft/world/entity/monster/Giant bdi
	createAttributes ()Lnet/minecraft/world/entity/ai/attributes/AttributeSupplier$Builder; m
	getStandingEyeHeight (Lnet/minecraft/world/entity/Pose;Lnet/minecraft/world/entity/EntityDimensions;)F b
	getWalkTargetValue (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/LevelReader;)F a
net/minecraft/world/entity/monster/Guardian bdj
	DATA_ID_ATTACK_TARGET d
	DATA_ID_MOVING b
	clientSideAttackTime bu
	clientSideCachedAttackTarget bt
	clientSideSpikesAnimation br
	clientSideSpikesAnimationO bs
	clientSideTailAnimation bo
	clientSideTailAnimationO bp
	clientSideTailAnimationSpeed bq
	clientSideTouchedGround bv
	randomStrollGoal c
	aiStep ()V k
	canBreatheUnderwater ()Z cL
	checkGuardianSpawnRules (Lnet/minecraft/world/entity/EntityType;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/world/entity/MobSpawnType;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)Z b
	checkSpawnObstruction (Lnet/minecraft/world/level/LevelReader;)Z a
	createAttributes ()Lnet/minecraft/world/entity/ai/attributes/AttributeSupplier$Builder; eM
	createNavigation (Lnet/minecraft/world/level/Level;)Lnet/minecraft/world/entity/ai/navigation/PathNavigation; b
	defineSynchedData ()V e
	getActiveAttackTarget ()Lnet/minecraft/world/entity/LivingEntity; eP
	getAmbientSound ()Lnet/minecraft/sounds/SoundEvent; I
	getAmbientSoundInterval ()I D
	getAttackAnimationScale (F)F A
	getAttackDuration ()I eK
	getDeathSound ()Lnet/minecraft/sounds/SoundEvent; dp
	getFlopSound ()Lnet/minecraft/sounds/SoundEvent; eL
	getHurtSound (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEvent; e
	getMaxHeadXRot ()I O
	getMobType ()Lnet/minecraft/world/entity/MobType; dB
	getSpikesAnimation (F)F z
	getStandingEyeHeight (Lnet/minecraft/world/entity/Pose;Lnet/minecraft/world/entity/EntityDimensions;)F b
	getTailAnimation (F)F y
	getWalkTargetValue (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/LevelReader;)F a
	hasActiveAttackTarget ()Z eO
	hurt (Lnet/minecraft/world/damagesource/DamageSource;F)Z a
	isMovementNoisy ()Z aB
	isMoving ()Z eN
	onSyncedDataUpdated (Lnet/minecraft/network/syncher/EntityDataAccessor;)V a
	registerGoals ()V o
	setActiveAttackTarget (I)V a
	setMoving (Z)V t
	travel (Lnet/minecraft/world/phys/Vec3;)V g
net/minecraft/world/entity/monster/Guardian$GuardianAttackGoal bdj$a
	attackTime b
	elder c
	guardian a
	canContinueToUse ()Z b
	canUse ()Z a
	start ()V c
	stop ()V d
	tick ()V e
net/minecraft/world/entity/monster/Guardian$GuardianAttackSelector bdj$b
	guardian a
	test (Lnet/minecraft/world/entity/LivingEntity;)Z a
net/minecraft/world/entity/monster/Guardian$GuardianMoveControl bdj$c
	guardian i
	tick ()V a
net/minecraft/world/entity/monster/Husk bdk
	checkHuskSpawnRules (Lnet/minecraft/world/entity/EntityType;Lnet/minecraft/world/level/ServerLevelAccessor;Lnet/minecraft/world/entity/MobSpawnType;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)Z a
	convertsInWater ()Z eN
	doHurtTarget (Lnet/minecraft/world/entity/Entity;)Z B
	doUnderWaterConversion ()V eP
	getAmbientSound ()Lnet/minecraft/sounds/SoundEvent; I
	getDeathSound ()Lnet/minecraft/sounds/SoundEvent; dp
	getHurtSound (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEvent; e
	getSkull ()Lnet/minecraft/world/item/ItemStack; eM
	getStepSound ()Lnet/minecraft/sounds/SoundEvent; eL
	isSunSensitive ()Z T_
net/minecraft/world/entity/monster/Illusioner bdl
	clientSideIllusionOffsets bp
	clientSideIllusionTicks bo
	aiStep ()V k
	applyRaidBuffs (IZ)V a
	createAttributes ()Lnet/minecraft/world/entity/ai/attributes/AttributeSupplier$Builder; eK
	defineSynchedData ()V e
	finalizeSpawn (Lnet/minecraft/world/level/ServerLevelAccessor;Lnet/minecraft/world/DifficultyInstance;Lnet/minecraft/world/entity/MobSpawnType;Lnet/minecraft/world/entity/SpawnGroupData;Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/world/entity/SpawnGroupData; a
	getAmbientSound ()Lnet/minecraft/sounds/SoundEvent; I
	getArmPose ()Lnet/minecraft/world/entity/monster/AbstractIllager$IllagerArmPose; m
	getBoundingBoxForCulling ()Lnet/minecraft/world/phys/AABB; cc
	getCastingSoundEvent ()Lnet/minecraft/sounds/SoundEvent; eM
	getCelebrateSound ()Lnet/minecraft/sounds/SoundEvent; eL
	getDeathSound ()Lnet/minecraft/sounds/SoundEvent; dp
	getHurtSound (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEvent; e
	getIllusionOffsets (F)[Lnet/minecraft/world/phys/Vec3; y
	isAlliedTo (Lnet/minecraft/world/entity/Entity;)Z r
	performRangedAttack (Lnet/minecraft/world/entity/LivingEntity;F)V a
	registerGoals ()V o
net/minecraft/world/entity/monster/Illusioner$IllusionerBlindnessSpellGoal bdl$a
	lastTargetId e
	canUse ()Z a
	getCastingInterval ()I h
	getCastingTime ()I g
	getSpell ()Lnet/minecraft/world/entity/monster/SpellcasterIllager$IllagerSpell; l
	getSpellPrepareSound ()Lnet/minecraft/sounds/SoundEvent; k
	performSpellCasting ()V j
	start ()V c
net/minecraft/world/entity/monster/Illusioner$IllusionerMirrorSpellGoal bdl$b
	canUse ()Z a
	getCastingInterval ()I h
	getCastingTime ()I g
	getSpell ()Lnet/minecraft/world/entity/monster/SpellcasterIllager$IllagerSpell; l
	getSpellPrepareSound ()Lnet/minecraft/sounds/SoundEvent; k
	performSpellCasting ()V j
net/minecraft/world/entity/monster/MagmaCube bdm
	causeFallDamage (FF)Z b
	checkMagmaCubeSpawnRules (Lnet/minecraft/world/entity/EntityType;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/world/entity/MobSpawnType;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)Z b
	checkSpawnObstruction (Lnet/minecraft/world/level/LevelReader;)Z a
	createAttributes ()Lnet/minecraft/world/entity/ai/attributes/AttributeSupplier$Builder; m
	decreaseSquish ()V eK
	getAttackDamage ()F eM
	getBrightness ()F aQ
	getDeathSound ()Lnet/minecraft/sounds/SoundEvent; dp
	getDefaultLootTable ()Lnet/minecraft/resources/ResourceLocation; J
	getHurtSound (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEvent; e
	getJumpDelay ()I eJ
	getJumpSound ()Lnet/minecraft/sounds/SoundEvent; eO
	getParticleType ()Lnet/minecraft/core/particles/ParticleOptions; eI
	getSquishSound ()Lnet/minecraft/sounds/SoundEvent; eN
	isDealsDamage ()Z eL
	isOnFire ()Z bp
	jumpFromGround ()V dJ
	jumpInLiquid (Lnet/minecraft/tags/Tag;)V c
	setSize (IZ)V a
net/minecraft/world/entity/monster/Monster bdn
	aiStep ()V k
	checkAnyLightMonsterSpawnRules (Lnet/minecraft/world/entity/EntityType;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/world/entity/MobSpawnType;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)Z c
	checkMonsterSpawnRules (Lnet/minecraft/world/entity/EntityType;Lnet/minecraft/world/level/ServerLevelAccessor;Lnet/minecraft/world/entity/MobSpawnType;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)Z b
	createMonsterAttributes ()Lnet/minecraft/world/entity/ai/attributes/AttributeSupplier$Builder; eR
	getDeathSound ()Lnet/minecraft/sounds/SoundEvent; dp
	getFallDamageSound (I)Lnet/minecraft/sounds/SoundEvent; o
	getHurtSound (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEvent; e
	getProjectile (Lnet/minecraft/world/item/ItemStack;)Lnet/minecraft/world/item/ItemStack; f
	getSoundSource ()Lnet/minecraft/sounds/SoundSource; ct
	getSwimSound ()Lnet/minecraft/sounds/SoundEvent; au
	getSwimSplashSound ()Lnet/minecraft/sounds/SoundEvent; av
	getWalkTargetValue (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/LevelReader;)F a
	hurt (Lnet/minecraft/world/damagesource/DamageSource;F)Z a
	isDarkEnoughToSpawn (Lnet/minecraft/world/level/ServerLevelAccessor;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)Z a
	isPreventingPlayerRest (Lnet/minecraft/world/entity/player/Player;)Z f
	shouldDespawnInPeaceful ()Z L
	shouldDropExperience ()Z cU
	shouldDropLoot ()Z cV
	updateNoActionTime ()V eQ
net/minecraft/world/entity/monster/PatrollingMonster bdo
	patrolLeader c
	patrolTarget b
	patrolling d
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	canBeLeader ()Z eN
	canJoinPatrol ()Z eT
	checkPatrollingMonsterSpawnRules (Lnet/minecraft/world/entity/EntityType;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/world/entity/MobSpawnType;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)Z b
	finalizeSpawn (Lnet/minecraft/world/level/ServerLevelAccessor;Lnet/minecraft/world/DifficultyInstance;Lnet/minecraft/world/entity/MobSpawnType;Lnet/minecraft/world/entity/SpawnGroupData;Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/world/entity/SpawnGroupData; a
	findPatrolTarget ()V eU
	getMyRidingOffset ()D ba
	getPatrolTarget ()Lnet/minecraft/core/BlockPos; eO
	hasPatrolTarget ()Z eP
	isPatrolLeader ()Z eS
	isPatrolling ()Z eV
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	registerGoals ()V o
	removeWhenFarAway (D)Z h
	setPatrolLeader (Z)V t
	setPatrolTarget (Lnet/minecraft/core/BlockPos;)V g
	setPatrolling (Z)V u
net/minecraft/world/entity/monster/PatrollingMonster$LongDistancePatrolGoal bdo$a
	cooldownUntil d
	leaderSpeedModifier c
	mob a
	speedModifier b
	canUse ()Z a
	findPatrolCompanions ()Ljava/util/List; g
	moveRandomly ()Z h
	start ()V c
	stop ()V d
	tick ()V e
net/minecraft/world/entity/monster/Phantom bdp
	ID_SIZE b
	anchorPoint d
	attackPhase bo
	moveTargetPoint c
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	aiStep ()V k
	canAttackType (Lnet/minecraft/world/entity/EntityType;)Z a
	createBodyControl ()Lnet/minecraft/world/entity/ai/control/BodyRotationControl; r
	customServerAiStep ()V N
	defineSynchedData ()V e
	finalizeSpawn (Lnet/minecraft/world/level/ServerLevelAccessor;Lnet/minecraft/world/DifficultyInstance;Lnet/minecraft/world/entity/MobSpawnType;Lnet/minecraft/world/entity/SpawnGroupData;Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/world/entity/SpawnGroupData; a
	getAmbientSound ()Lnet/minecraft/sounds/SoundEvent; I
	getDeathSound ()Lnet/minecraft/sounds/SoundEvent; dp
	getDimensions (Lnet/minecraft/world/entity/Pose;)Lnet/minecraft/world/entity/EntityDimensions; a
	getHurtSound (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEvent; e
	getMobType ()Lnet/minecraft/world/entity/MobType; dB
	getMovementTarget ()Lnet/minecraft/world/phys/Vec3; eI
	getPhantomSize ()I m
	getSoundSource ()Lnet/minecraft/sounds/SoundSource; ct
	getSoundVolume ()F dF
	getStandingEyeHeight (Lnet/minecraft/world/entity/Pose;Lnet/minecraft/world/entity/EntityDimensions;)F b
	onSyncedDataUpdated (Lnet/minecraft/network/syncher/EntityDataAccessor;)V a
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	registerGoals ()V o
	setPhantomSize (I)V a
	shouldDespawnInPeaceful ()Z L
	shouldRenderAtSqrDistance (D)Z a
	tick ()V j
	updatePhantomSizeInfo ()V eJ
net/minecraft/world/entity/monster/Phantom$AttackPhase bdp$a
	$VALUES c
	CIRCLE a
	SWOOP b
net/minecraft/world/entity/monster/Phantom$PhantomAttackPlayerTargetGoal bdp$b
	attackTargeting b
	nextScanTick c
	canContinueToUse ()Z b
	canUse ()Z a
net/minecraft/world/entity/monster/Phantom$PhantomAttackStrategyGoal bdp$c
	nextSweepTick b
	canUse ()Z a
	setAnchorAboveTarget ()V g
	start ()V c
	stop ()V d
	tick ()V e
net/minecraft/world/entity/monster/Phantom$PhantomBodyRotationControl bdp$d
	clientTick ()V a
net/minecraft/world/entity/monster/Phantom$PhantomCircleAroundAnchorGoal bdp$e
	angle c
	clockwise f
	distance d
	height e
	canUse ()Z a
	selectNext ()V h
	start ()V c
	tick ()V e
net/minecraft/world/entity/monster/Phantom$PhantomLookControl bdp$f
	tick ()V a
net/minecraft/world/entity/monster/Phantom$PhantomMoveControl bdp$g
	speed j
	tick ()V a
net/minecraft/world/entity/monster/Phantom$PhantomMoveTargetGoal bdp$h
	touchingTarget ()Z g
net/minecraft/world/entity/monster/Phantom$PhantomSweepAttackGoal bdp$i
	canContinueToUse ()Z b
	canUse ()Z a
	start ()V c
	stop ()V d
	tick ()V e
net/minecraft/world/entity/monster/Pillager bdq
	IS_CHARGING_CROSSBOW b
	inventory bo
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	applyRaidBuffs (IZ)V a
	canFireProjectileWeapon (Lnet/minecraft/world/item/ProjectileWeaponItem;)Z a
	createAttributes ()Lnet/minecraft/world/entity/ai/attributes/AttributeSupplier$Builder; eK
	defineSynchedData ()V e
	enchantSpawnedWeapon (F)V w
	finalizeSpawn (Lnet/minecraft/world/level/ServerLevelAccessor;Lnet/minecraft/world/DifficultyInstance;Lnet/minecraft/world/entity/MobSpawnType;Lnet/minecraft/world/entity/SpawnGroupData;Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/world/entity/SpawnGroupData; a
	getAmbientSound ()Lnet/minecraft/sounds/SoundEvent; I
	getArmPose ()Lnet/minecraft/world/entity/monster/AbstractIllager$IllagerArmPose; m
	getCelebrateSound ()Lnet/minecraft/sounds/SoundEvent; eL
	getDeathSound ()Lnet/minecraft/sounds/SoundEvent; dp
	getHurtSound (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEvent; e
	getInventory ()Lnet/minecraft/world/SimpleContainer; eW
	getMaxSpawnClusterSize ()I eq
	getWalkTargetValue (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/LevelReader;)F a
	isAlliedTo (Lnet/minecraft/world/entity/Entity;)Z r
	isChargingCrossbow ()Z eM
	onCrossbowAttackPerformed ()V U_
	performRangedAttack (Lnet/minecraft/world/entity/LivingEntity;F)V a
	pickUpItem (Lnet/minecraft/world/entity/item/ItemEntity;)V b
	populateDefaultEquipmentSlots (Lnet/minecraft/world/DifficultyInstance;)V a
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	registerGoals ()V o
	setChargingCrossbow (Z)V b
	setSlot (ILnet/minecraft/world/item/ItemStack;)Z a_
	shootCrossbowProjectile (Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/entity/projectile/Projectile;F)V a
	wantsItem (Lnet/minecraft/world/item/Item;)Z b
net/minecraft/world/entity/monster/RangedAttackMob bdr
	performRangedAttack (Lnet/minecraft/world/entity/LivingEntity;F)V a
net/minecraft/world/entity/monster/Ravager bds
	NO_RAVAGER_AND_ALIVE b
	attackTick bo
	roarTick bq
	stunnedTick bp
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	aiStep ()V k
	applyRaidBuffs (IZ)V a
	blockedByShield (Lnet/minecraft/world/entity/LivingEntity;)V e
	canBeControlledByRider ()Z er
	canBeLeader ()Z eN
	canSee (Lnet/minecraft/world/entity/Entity;)Z D
	checkSpawnObstruction (Lnet/minecraft/world/level/LevelReader;)Z a
	createAttributes ()Lnet/minecraft/world/entity/ai/attributes/AttributeSupplier$Builder; m
	createNavigation (Lnet/minecraft/world/level/Level;)Lnet/minecraft/world/entity/ai/navigation/PathNavigation; b
	doHurtTarget (Lnet/minecraft/world/entity/Entity;)Z B
	getAmbientSound ()Lnet/minecraft/sounds/SoundEvent; I
	getAttackTick ()I eK
	getCelebrateSound ()Lnet/minecraft/sounds/SoundEvent; eL
	getControllingPassenger ()Lnet/minecraft/world/entity/Entity; cl
	getDeathSound ()Lnet/minecraft/sounds/SoundEvent; dp
	getHurtSound (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEvent; e
	getMaxHeadYRot ()I eo
	getPassengersRidingOffset ()D bb
	getRoarTick ()I eW
	getStunnedTick ()I eM
	handleEntityEvent (B)V a
	isImmobile ()Z dH
	playStepSound (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V b
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	registerGoals ()V o
	roar ()V eY
	strongKnockback (Lnet/minecraft/world/entity/Entity;)V a
	stunEffect ()V eX
	updateControlFlags ()V H
net/minecraft/world/entity/monster/Ravager$RavagerMeleeAttackGoal bds$a
	getAttackReachSqr (Lnet/minecraft/world/entity/LivingEntity;)D a
net/minecraft/world/entity/monster/Ravager$RavagerNavigation bds$b
	createPathFinder (I)Lnet/minecraft/world/level/pathfinder/PathFinder; a
net/minecraft/world/entity/monster/Ravager$RavagerNodeEvaluator bds$c
	evaluateBlockPathType (Lnet/minecraft/world/level/BlockGetter;ZZLnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/pathfinder/BlockPathTypes;)Lnet/minecraft/world/level/pathfinder/BlockPathTypes; a
net/minecraft/world/entity/monster/Shulker bdt
	COVERED_ARMOR_MODIFIER bq
	COVERED_ARMOR_MODIFIER_UUID bp
	DATA_ATTACH_FACE_ID b
	DATA_ATTACH_POS_ID c
	DATA_COLOR_ID bo
	DATA_PEEK_ID d
	clientSideTeleportInterpolation bu
	currentPeekAmount bs
	currentPeekAmountO br
	oldAttachPosition bt
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	aiStep ()V k
	canAttachOnBlockFace (Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;)Z a
	canBeCollidedWith ()Z aY
	createAttributes ()Lnet/minecraft/world/entity/ai/attributes/AttributeSupplier$Builder; m
	createBodyControl ()Lnet/minecraft/world/entity/ai/control/BodyRotationControl; r
	defineSynchedData ()V e
	findAttachableFace (Lnet/minecraft/core/BlockPos;)Lnet/minecraft/core/Direction; g
	getAmbientSound ()Lnet/minecraft/sounds/SoundEvent; I
	getAttachFace ()Lnet/minecraft/core/Direction; eL
	getAttachPosition ()Lnet/minecraft/core/BlockPos; eM
	getClientPeekAmount (F)F y
	getClientSideTeleportInterpolation ()I eO
	getColor ()Lnet/minecraft/world/item/DyeColor; eS
	getDeathSound ()Lnet/minecraft/sounds/SoundEvent; dp
	getHurtSound (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEvent; e
	getMaxHeadXRot ()I O
	getMaxHeadYRot ()I eo
	getOldAttachPosition ()Lnet/minecraft/core/BlockPos; eP
	getPickRadius ()F bf
	getRawPeekAmount ()I eN
	getSoundSource ()Lnet/minecraft/sounds/SoundSource; ct
	getStandingEyeHeight (Lnet/minecraft/world/entity/Pose;Lnet/minecraft/world/entity/EntityDimensions;)F b
	hasValidInterpolationPositions ()Z eQ
	hurt (Lnet/minecraft/world/damagesource/DamageSource;F)Z a
	isClosed ()Z eT
	isMovementNoisy ()Z aB
	lerpTo (DDDFFIZ)V a
	move (Lnet/minecraft/world/entity/MoverType;Lnet/minecraft/world/phys/Vec3;)V a
	onSyncedDataUpdated (Lnet/minecraft/network/syncher/EntityDataAccessor;)V a
	playAmbientSound ()V F
	push (Lnet/minecraft/world/entity/Entity;)V i
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	registerGoals ()V o
	setAttachPosition (Lnet/minecraft/core/BlockPos;)V h
	setColor (Lnet/minecraft/world/item/DyeColor;)V a
	setDefaultColor ()V eR
	setPos (DDD)V d
	setRawPeekAmount (I)V a
	teleportSomewhere ()Z eK
	tick ()V j
net/minecraft/world/entity/monster/Shulker$ShulkerAttackGoal bdt$a
	attackTime b
	canUse ()Z a
	start ()V c
	stop ()V d
	tick ()V e
net/minecraft/world/entity/monster/Shulker$ShulkerBodyRotationControl bdt$b
	clientTick ()V a
net/minecraft/world/entity/monster/Shulker$ShulkerDefenseAttackGoal bdt$c
	canUse ()Z a
	getTargetSearchArea (D)Lnet/minecraft/world/phys/AABB; a
net/minecraft/world/entity/monster/Shulker$ShulkerNearestAttackGoal bdt$d
	canUse ()Z a
	getTargetSearchArea (D)Lnet/minecraft/world/phys/AABB; a
net/minecraft/world/entity/monster/Shulker$ShulkerPeekGoal bdt$e
	peekTime b
	canContinueToUse ()Z b
	canUse ()Z a
	start ()V c
	stop ()V d
	tick ()V e
net/minecraft/world/entity/monster/Silverfish bdu
	friendsGoal b
	checkSliverfishSpawnRules (Lnet/minecraft/world/entity/EntityType;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/world/entity/MobSpawnType;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)Z b
	createAttributes ()Lnet/minecraft/world/entity/ai/attributes/AttributeSupplier$Builder; m
	getAmbientSound ()Lnet/minecraft/sounds/SoundEvent; I
	getDeathSound ()Lnet/minecraft/sounds/SoundEvent; dp
	getHurtSound (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEvent; e
	getMobType ()Lnet/minecraft/world/entity/MobType; dB
	getMyRidingOffset ()D ba
	getStandingEyeHeight (Lnet/minecraft/world/entity/Pose;Lnet/minecraft/world/entity/EntityDimensions;)F b
	getWalkTargetValue (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/LevelReader;)F a
	hurt (Lnet/minecraft/world/damagesource/DamageSource;F)Z a
	isMovementNoisy ()Z aB
	playStepSound (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V b
	registerGoals ()V o
	setYBodyRot (F)V n
	tick ()V j
net/minecraft/world/entity/monster/Silverfish$SilverfishMergeWithStoneGoal bdu$a
	doMerge i
	selectedDirection h
	canContinueToUse ()Z b
	canUse ()Z a
	start ()V c
net/minecraft/world/entity/monster/Silverfish$SilverfishWakeUpFriendsGoal bdu$b
	lookForFriends b
	silverfish a
	canUse ()Z a
	notifyHurt ()V g
	tick ()V e
net/minecraft/world/entity/monster/Skeleton bdv
	dropCustomDeathLoot (Lnet/minecraft/world/damagesource/DamageSource;IZ)V a
	getAmbientSound ()Lnet/minecraft/sounds/SoundEvent; I
	getDeathSound ()Lnet/minecraft/sounds/SoundEvent; dp
	getHurtSound (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEvent; e
	getStepSound ()Lnet/minecraft/sounds/SoundEvent; eK
net/minecraft/world/entity/monster/Slime bdw
	ID_SIZE bo
	oSquish d
	squish c
	targetSquish b
	wasOnGround bp
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	checkSlimeSpawnRules (Lnet/minecraft/world/entity/EntityType;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/world/entity/MobSpawnType;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)Z c
	dealDamage (Lnet/minecraft/world/entity/LivingEntity;)V i
	decreaseSquish ()V eK
	defineSynchedData ()V e
	doPlayJumpSound ()Z eR
	finalizeSpawn (Lnet/minecraft/world/level/ServerLevelAccessor;Lnet/minecraft/world/DifficultyInstance;Lnet/minecraft/world/entity/MobSpawnType;Lnet/minecraft/world/entity/SpawnGroupData;Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/world/entity/SpawnGroupData; a
	getAttackDamage ()F eM
	getDeathSound ()Lnet/minecraft/sounds/SoundEvent; dp
	getDefaultLootTable ()Lnet/minecraft/resources/ResourceLocation; J
	getDimensions (Lnet/minecraft/world/entity/Pose;)Lnet/minecraft/world/entity/EntityDimensions; a
	getHurtSound (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEvent; e
	getJumpDelay ()I eJ
	getJumpSound ()Lnet/minecraft/sounds/SoundEvent; eO
	getMaxHeadXRot ()I O
	getParticleType ()Lnet/minecraft/core/particles/ParticleOptions; eI
	getSize ()I eP
	getSoundPitch ()F m
	getSoundVolume ()F dF
	getSquishSound ()Lnet/minecraft/sounds/SoundEvent; eN
	getStandingEyeHeight (Lnet/minecraft/world/entity/Pose;Lnet/minecraft/world/entity/EntityDimensions;)F b
	getType ()Lnet/minecraft/world/entity/EntityType; W
	isDealsDamage ()Z eL
	isTiny ()Z eQ
	jumpFromGround ()V dJ
	onSyncedDataUpdated (Lnet/minecraft/network/syncher/EntityDataAccessor;)V a
	playerTouch (Lnet/minecraft/world/entity/player/Player;)V a_
	push (Lnet/minecraft/world/entity/Entity;)V i
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	refreshDimensions ()V x_
	registerGoals ()V o
	remove ()V ac
	setSize (IZ)V a
	shouldDespawnInPeaceful ()Z L
	tick ()V j
net/minecraft/world/entity/monster/Slime$SlimeAttackGoal bdw$a
	growTiredTimer b
	slime a
	canContinueToUse ()Z b
	canUse ()Z a
	start ()V c
	tick ()V e
net/minecraft/world/entity/monster/Slime$SlimeFloatGoal bdw$b
	slime a
	canUse ()Z a
	tick ()V e
net/minecraft/world/entity/monster/Slime$SlimeKeepOnJumpingGoal bdw$c
	slime a
	canUse ()Z a
	tick ()V e
net/minecraft/world/entity/monster/Slime$SlimeMoveControl bdw$d
	isAggressive l
	jumpDelay j
	slime k
	yRot i
	setDirection (FZ)V a
	setWantedMovement (D)V a
	tick ()V a
net/minecraft/world/entity/monster/Slime$SlimeRandomDirectionGoal bdw$e
	chosenDegrees b
	nextRandomizeTime c
	slime a
	canUse ()Z a
	tick ()V e
net/minecraft/world/entity/monster/SpellcasterIllager bdx
	DATA_SPELL_CASTING_ID bo
	currentSpell bp
	spellCastingTickCount b
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	customServerAiStep ()V N
	defineSynchedData ()V e
	getArmPose ()Lnet/minecraft/world/entity/monster/AbstractIllager$IllagerArmPose; m
	getCastingSoundEvent ()Lnet/minecraft/sounds/SoundEvent; eM
	getCurrentSpell ()Lnet/minecraft/world/entity/monster/SpellcasterIllager$IllagerSpell; eX
	getSpellCastingTime ()I eY
	isCastingSpell ()Z eW
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	setIsCastingSpell (Lnet/minecraft/world/entity/monster/SpellcasterIllager$IllagerSpell;)V a
	tick ()V j
net/minecraft/world/entity/monster/SpellcasterIllager$IllagerSpell bdx$a
	$VALUES i
	BLINDNESS f
	DISAPPEAR e
	FANGS c
	NONE a
	SUMMON_VEX b
	WOLOLO d
	id g
	spellColor h
	byId (I)Lnet/minecraft/world/entity/monster/SpellcasterIllager$IllagerSpell; a
net/minecraft/world/entity/monster/SpellcasterIllager$SpellcasterCastingSpellGoal bdx$b
	canUse ()Z a
	start ()V c
	stop ()V d
	tick ()V e
net/minecraft/world/entity/monster/SpellcasterIllager$SpellcasterUseSpellGoal bdx$c
	attackWarmupDelay b
	nextAttackTickCount c
	canContinueToUse ()Z b
	canUse ()Z a
	getCastWarmupTime ()I m
	getCastingInterval ()I h
	getCastingTime ()I g
	getSpell ()Lnet/minecraft/world/entity/monster/SpellcasterIllager$IllagerSpell; l
	getSpellPrepareSound ()Lnet/minecraft/sounds/SoundEvent; k
	performSpellCasting ()V j
	start ()V c
	tick ()V e
net/minecraft/world/entity/monster/Spider bdy
	DATA_FLAGS_ID b
	canBeAffected (Lnet/minecraft/world/effect/MobEffectInstance;)Z d
	createAttributes ()Lnet/minecraft/world/entity/ai/attributes/AttributeSupplier$Builder; eK
	createNavigation (Lnet/minecraft/world/level/Level;)Lnet/minecraft/world/entity/ai/navigation/PathNavigation; b
	defineSynchedData ()V e
	finalizeSpawn (Lnet/minecraft/world/level/ServerLevelAccessor;Lnet/minecraft/world/DifficultyInstance;Lnet/minecraft/world/entity/MobSpawnType;Lnet/minecraft/world/entity/SpawnGroupData;Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/world/entity/SpawnGroupData; a
	getAmbientSound ()Lnet/minecraft/sounds/SoundEvent; I
	getDeathSound ()Lnet/minecraft/sounds/SoundEvent; dp
	getHurtSound (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEvent; e
	getMobType ()Lnet/minecraft/world/entity/MobType; dB
	getPassengersRidingOffset ()D bb
	getStandingEyeHeight (Lnet/minecraft/world/entity/Pose;Lnet/minecraft/world/entity/EntityDimensions;)F b
	isClimbing ()Z eL
	makeStuckInBlock (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/phys/Vec3;)V a
	onClimbable ()Z c_
	playStepSound (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V b
	registerGoals ()V o
	setClimbing (Z)V t
	tick ()V j
net/minecraft/world/entity/monster/Spider$SpiderAttackGoal bdy$a
	canContinueToUse ()Z b
	canUse ()Z a
	getAttackReachSqr (Lnet/minecraft/world/entity/LivingEntity;)D a
net/minecraft/world/entity/monster/Spider$SpiderEffectsGroupData bdy$b
	effect a
	setRandomEffect (Ljava/util/Random;)V a
net/minecraft/world/entity/monster/Spider$SpiderTargetGoal bdy$c
	canUse ()Z a
net/minecraft/world/entity/monster/Stray bdz
	checkStraySpawnRules (Lnet/minecraft/world/entity/EntityType;Lnet/minecraft/world/level/ServerLevelAccessor;Lnet/minecraft/world/entity/MobSpawnType;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)Z a
	getAmbientSound ()Lnet/minecraft/sounds/SoundEvent; I
	getArrow (Lnet/minecraft/world/item/ItemStack;F)Lnet/minecraft/world/entity/projectile/AbstractArrow; b
	getDeathSound ()Lnet/minecraft/sounds/SoundEvent; dp
	getHurtSound (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEvent; e
	getStepSound ()Lnet/minecraft/sounds/SoundEvent; eK
net/minecraft/world/entity/monster/Strider bea
	DATA_BOOST_TIME bq
	DATA_SADDLE_ID bs
	DATA_SUFFOCATING br
	FOOD_ITEMS bo
	TEMPT_ITEMS bp
	panicGoal bv
	steering bt
	temptGoal bu
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	boost ()Z O_
	canAddPassenger (Lnet/minecraft/world/entity/Entity;)Z q
	canBeControlledByRider ()Z er
	canStandOnFluid (Lnet/minecraft/world/level/material/Fluid;)Z a
	checkFallDamage (DZLnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/BlockPos;)V a
	checkSpawnObstruction (Lnet/minecraft/world/level/LevelReader;)Z a
	checkStriderSpawnRules (Lnet/minecraft/world/entity/EntityType;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/world/entity/MobSpawnType;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)Z c
	createAttributes ()Lnet/minecraft/world/entity/ai/attributes/AttributeSupplier$Builder; eM
	createNavigation (Lnet/minecraft/world/level/Level;)Lnet/minecraft/world/entity/ai/navigation/PathNavigation; b
	defineSynchedData ()V e
	dropEquipment ()V dm
	equipSaddle (Lnet/minecraft/sounds/SoundSource;)V a
	finalizeSpawn (Lnet/minecraft/world/level/ServerLevelAccessor;Lnet/minecraft/world/DifficultyInstance;Lnet/minecraft/world/entity/MobSpawnType;Lnet/minecraft/world/entity/SpawnGroupData;Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/world/entity/SpawnGroupData; a
	floatStrider ()V eU
	getAmbientSound ()Lnet/minecraft/sounds/SoundEvent; I
	getBreedOffspring (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/AgableMob;)Lnet/minecraft/world/entity/AgableMob; a
	getBreedOffspring (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/AgableMob;)Lnet/minecraft/world/entity/monster/Strider; b
	getControllingPassenger ()Lnet/minecraft/world/entity/Entity; cl
	getDeathSound ()Lnet/minecraft/sounds/SoundEvent; dp
	getDismountLocationForPassenger (Lnet/minecraft/world/entity/LivingEntity;)Lnet/minecraft/world/phys/Vec3; b
	getHurtSound (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEvent; e
	getLeashOffset ()Lnet/minecraft/world/phys/Vec3; ce
	getMoveSpeed ()F eL
	getPassengersRidingOffset ()D bb
	getSteeringSpeed ()F N_
	getWalkTargetValue (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/LevelReader;)F a
	isBeingTempted ()Z eO
	isFood (Lnet/minecraft/world/item/ItemStack;)Z k
	isOnFire ()Z bp
	isPanicking ()Z eN
	isSaddleable ()Z L_
	isSaddled ()Z M_
	isSensitiveToWater ()Z dN
	isSuffocating ()Z eK
	mobInteract (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResult; b
	nextStep ()F as
	onSyncedDataUpdated (Lnet/minecraft/network/syncher/EntityDataAccessor;)V a
	playStepSound (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V b
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	registerGoals ()V o
	setSuffocating (Z)V t
	shouldPassengersInheritMalus ()Z q
	spawnJockey (Lnet/minecraft/world/level/ServerLevelAccessor;Lnet/minecraft/world/DifficultyInstance;Lnet/minecraft/world/entity/Mob;Lnet/minecraft/world/entity/SpawnGroupData;)Lnet/minecraft/world/entity/SpawnGroupData; a
	tick ()V j
	travel (Lnet/minecraft/world/phys/Vec3;)V g
	travelWithInput (Lnet/minecraft/world/phys/Vec3;)V a_
net/minecraft/world/entity/monster/Strider$StriderGoToLavaGoal bea$a
	strider g
	canContinueToUse ()Z b
	canUse ()Z a
	getMoveToTarget ()Lnet/minecraft/core/BlockPos; j
	isValidTarget (Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;)Z a
	shouldRecalculatePath ()Z k
net/minecraft/world/entity/monster/Strider$StriderPathNavigation bea$b
	createPathFinder (I)Lnet/minecraft/world/level/pathfinder/PathFinder; a
	hasValidPathType (Lnet/minecraft/world/level/pathfinder/BlockPathTypes;)Z a
	isStableDestination (Lnet/minecraft/core/BlockPos;)Z a
net/minecraft/world/entity/monster/Vex beb
	DATA_FLAGS_ID b
	boundOrigin d
	hasLimitedLife bo
	limitedLifeTicks bp
	owner c
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	createAttributes ()Lnet/minecraft/world/entity/ai/attributes/AttributeSupplier$Builder; m
	defineSynchedData ()V e
	finalizeSpawn (Lnet/minecraft/world/level/ServerLevelAccessor;Lnet/minecraft/world/DifficultyInstance;Lnet/minecraft/world/entity/MobSpawnType;Lnet/minecraft/world/entity/SpawnGroupData;Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/world/entity/SpawnGroupData; a
	getAmbientSound ()Lnet/minecraft/sounds/SoundEvent; I
	getBoundOrigin ()Lnet/minecraft/core/BlockPos; eL
	getBrightness ()F aQ
	getDeathSound ()Lnet/minecraft/sounds/SoundEvent; dp
	getHurtSound (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEvent; e
	getOwner ()Lnet/minecraft/world/entity/Mob; eK
	getVexFlag (I)Z b
	isCharging ()Z eM
	move (Lnet/minecraft/world/entity/MoverType;Lnet/minecraft/world/phys/Vec3;)V a
	populateDefaultEquipmentSlots (Lnet/minecraft/world/DifficultyInstance;)V a
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	registerGoals ()V o
	setBoundOrigin (Lnet/minecraft/core/BlockPos;)V g
	setIsCharging (Z)V t
	setLimitedLife (I)V a
	setOwner (Lnet/minecraft/world/entity/Mob;)V a
	setVexFlag (IZ)V a
	tick ()V j
net/minecraft/world/entity/monster/Vex$VexChargeAttackGoal beb$a
	canContinueToUse ()Z b
	canUse ()Z a
	start ()V c
	stop ()V d
	tick ()V e
net/minecraft/world/entity/monster/Vex$VexCopyOwnerTargetGoal beb$b
	copyOwnerTargeting b
	canUse ()Z a
	start ()V c
net/minecraft/world/entity/monster/Vex$VexMoveControl beb$c
	tick ()V a
net/minecraft/world/entity/monster/Vex$VexRandomMoveGoal beb$d
	canContinueToUse ()Z b
	canUse ()Z a
	tick ()V e
net/minecraft/world/entity/monster/Vindicator bec
	DOOR_BREAKING_PREDICATE b
	isJohnny bo
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	applyRaidBuffs (IZ)V a
	createAttributes ()Lnet/minecraft/world/entity/ai/attributes/AttributeSupplier$Builder; eK
	customServerAiStep ()V N
	finalizeSpawn (Lnet/minecraft/world/level/ServerLevelAccessor;Lnet/minecraft/world/DifficultyInstance;Lnet/minecraft/world/entity/MobSpawnType;Lnet/minecraft/world/entity/SpawnGroupData;Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/world/entity/SpawnGroupData; a
	getAmbientSound ()Lnet/minecraft/sounds/SoundEvent; I
	getArmPose ()Lnet/minecraft/world/entity/monster/AbstractIllager$IllagerArmPose; m
	getCelebrateSound ()Lnet/minecraft/sounds/SoundEvent; eL
	getDeathSound ()Lnet/minecraft/sounds/SoundEvent; dp
	getHurtSound (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEvent; e
	isAlliedTo (Lnet/minecraft/world/entity/Entity;)Z r
	populateDefaultEquipmentSlots (Lnet/minecraft/world/DifficultyInstance;)V a
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	registerGoals ()V o
	setCustomName (Lnet/minecraft/network/chat/Component;)V a
net/minecraft/world/entity/monster/Vindicator$VindicatorBreakDoorGoal bec$a
	canContinueToUse ()Z b
	canUse ()Z a
	start ()V c
net/minecraft/world/entity/monster/Vindicator$VindicatorJohnnyAttackGoal bec$b
	canUse ()Z a
	start ()V c
net/minecraft/world/entity/monster/Vindicator$VindicatorMeleeAttackGoal bec$c
	getAttackReachSqr (Lnet/minecraft/world/entity/LivingEntity;)D a
net/minecraft/world/entity/monster/Witch bed
	DATA_USING_ITEM bp
	SPEED_MODIFIER_DRINKING bo
	SPEED_MODIFIER_DRINKING_UUID b
	attackPlayersGoal bs
	healRaidersGoal br
	usingTime bq
	aiStep ()V k
	applyRaidBuffs (IZ)V a
	canBeLeader ()Z eN
	createAttributes ()Lnet/minecraft/world/entity/ai/attributes/AttributeSupplier$Builder; eK
	defineSynchedData ()V e
	getAmbientSound ()Lnet/minecraft/sounds/SoundEvent; I
	getCelebrateSound ()Lnet/minecraft/sounds/SoundEvent; eL
	getDamageAfterMagicAbsorb (Lnet/minecraft/world/damagesource/DamageSource;F)F d
	getDeathSound ()Lnet/minecraft/sounds/SoundEvent; dp
	getHurtSound (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEvent; e
	getStandingEyeHeight (Lnet/minecraft/world/entity/Pose;Lnet/minecraft/world/entity/EntityDimensions;)F b
	handleEntityEvent (B)V a
	isDrinkingPotion ()Z m
	performRangedAttack (Lnet/minecraft/world/entity/LivingEntity;F)V a
	registerGoals ()V o
	setUsingItem (Z)V v
net/minecraft/world/entity/monster/WitherSkeleton bee
	canBeAffected (Lnet/minecraft/world/effect/MobEffectInstance;)Z d
	doHurtTarget (Lnet/minecraft/world/entity/Entity;)Z B
	dropCustomDeathLoot (Lnet/minecraft/world/damagesource/DamageSource;IZ)V a
	finalizeSpawn (Lnet/minecraft/world/level/ServerLevelAccessor;Lnet/minecraft/world/DifficultyInstance;Lnet/minecraft/world/entity/MobSpawnType;Lnet/minecraft/world/entity/SpawnGroupData;Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/world/entity/SpawnGroupData; a
	getAmbientSound ()Lnet/minecraft/sounds/SoundEvent; I
	getArrow (Lnet/minecraft/world/item/ItemStack;F)Lnet/minecraft/world/entity/projectile/AbstractArrow; b
	getDeathSound ()Lnet/minecraft/sounds/SoundEvent; dp
	getHurtSound (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEvent; e
	getStandingEyeHeight (Lnet/minecraft/world/entity/Pose;Lnet/minecraft/world/entity/EntityDimensions;)F b
	getStepSound ()Lnet/minecraft/sounds/SoundEvent; eK
	populateDefaultEquipmentEnchantments (Lnet/minecraft/world/DifficultyInstance;)V b
	populateDefaultEquipmentSlots (Lnet/minecraft/world/DifficultyInstance;)V a
	registerGoals ()V o
net/minecraft/world/entity/monster/Zoglin bef
	DATA_BABY_ID d
	MEMORY_TYPES c
	SENSOR_TYPES b
	attackAnimationRemainingTicks bo
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	aiStep ()V k
	blockedByShield (Lnet/minecraft/world/entity/LivingEntity;)V e
	brainProvider ()Lnet/minecraft/world/entity/ai/Brain$Provider; cJ
	canBeLeashed (Lnet/minecraft/world/entity/player/Player;)Z a
	createAttributes ()Lnet/minecraft/world/entity/ai/attributes/AttributeSupplier$Builder; m
	customServerAiStep ()V N
	defineSynchedData ()V e
	doHurtTarget (Lnet/minecraft/world/entity/Entity;)Z B
	findNearestValidAttackTarget ()Ljava/util/Optional; eO
	getAmbientSound ()Lnet/minecraft/sounds/SoundEvent; I
	getAttackAnimationRemainingTicks ()I eM
	getBrain ()Lnet/minecraft/world/entity/ai/Brain; cI
	getDeathSound ()Lnet/minecraft/sounds/SoundEvent; dp
	getHurtSound (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEvent; e
	getMobType ()Lnet/minecraft/world/entity/MobType; dB
	getPassengersRidingOffset ()D bb
	handleEntityEvent (B)V a
	hurt (Lnet/minecraft/world/damagesource/DamageSource;F)Z a
	initCoreActivity (Lnet/minecraft/world/entity/ai/Brain;)V a
	initFightActivity (Lnet/minecraft/world/entity/ai/Brain;)V c
	initIdleActivity (Lnet/minecraft/world/entity/ai/Brain;)V b
	isAdult ()Z eK
	isBaby ()Z w_
	isTargetable (Lnet/minecraft/world/entity/LivingEntity;)Z i
	makeBrain (Lcom/mojang/serialization/Dynamic;)Lnet/minecraft/world/entity/ai/Brain; a
	onSyncedDataUpdated (Lnet/minecraft/network/syncher/EntityDataAccessor;)V a
	playAngrySound ()V eN
	playStepSound (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V b
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	sendDebugPackets ()V M
	setAttackTarget (Lnet/minecraft/world/entity/LivingEntity;)V j
	setBaby (Z)V a
	updateActivity ()V eL
net/minecraft/world/entity/monster/Zombie beg
	DATA_BABY_ID d
	DATA_DROWNED_CONVERSION_ID bp
	DATA_SPECIAL_TYPE_ID bo
	DOOR_BREAKING_PREDICATE bq
	SPEED_MODIFIER_BABY c
	SPEED_MODIFIER_BABY_UUID b
	breakDoorGoal br
	canBreakDoors bs
	conversionTime bu
	inWaterTime bt
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	addBehaviourGoals ()V m
	aiStep ()V k
	canBreakDoors ()Z eU
	canHoldItem (Lnet/minecraft/world/item/ItemStack;)Z h
	convertToZombieType (Lnet/minecraft/world/entity/EntityType;)V b
	convertsInWater ()Z eN
	createAttributes ()Lnet/minecraft/world/entity/ai/attributes/AttributeSupplier$Builder; eS
	defineSynchedData ()V e
	doHurtTarget (Lnet/minecraft/world/entity/Entity;)Z B
	doUnderWaterConversion ()V eP
	dropCustomDeathLoot (Lnet/minecraft/world/damagesource/DamageSource;IZ)V a
	finalizeSpawn (Lnet/minecraft/world/level/ServerLevelAccessor;Lnet/minecraft/world/DifficultyInstance;Lnet/minecraft/world/entity/MobSpawnType;Lnet/minecraft/world/entity/SpawnGroupData;Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/world/entity/SpawnGroupData; a
	getAmbientSound ()Lnet/minecraft/sounds/SoundEvent; I
	getDeathSound ()Lnet/minecraft/sounds/SoundEvent; dp
	getExperienceReward (Lnet/minecraft/world/entity/player/Player;)I d
	getHurtSound (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEvent; e
	getMobType ()Lnet/minecraft/world/entity/MobType; dB
	getMyRidingOffset ()D ba
	getSkull ()Lnet/minecraft/world/item/ItemStack; eM
	getSpawnAsBabyOdds (Ljava/util/Random;)Z a
	getStandingEyeHeight (Lnet/minecraft/world/entity/Pose;Lnet/minecraft/world/entity/EntityDimensions;)F b
	getStepSound ()Lnet/minecraft/sounds/SoundEvent; eL
	handleAttributes (F)V y
	hurt (Lnet/minecraft/world/damagesource/DamageSource;F)Z a
	isBaby ()Z w_
	isSunSensitive ()Z T_
	isUnderWaterConverting ()Z eT
	killed (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)V a
	onSyncedDataUpdated (Lnet/minecraft/network/syncher/EntityDataAccessor;)V a
	playStepSound (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V b
	populateDefaultEquipmentSlots (Lnet/minecraft/world/DifficultyInstance;)V a
	randomizeReinforcementsChance ()V eV
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	registerGoals ()V o
	setBaby (Z)V a
	setCanBreakDoors (Z)V u
	startUnderWaterConversion (I)V a
	supportsBreakDoorGoal ()Z eK
	tick ()V j
net/minecraft/world/entity/monster/Zombie$ZombieAttackTurtleEggGoal beg$a
	acceptedDistance ()D h
	playBreakSound (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)V a
	playDestroyProgressSound (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;)V a
net/minecraft/world/entity/monster/Zombie$ZombieGroupData beg$b
	canSpawnJockey b
	isBaby a
net/minecraft/world/entity/monster/ZombieVillager beh
	DATA_CONVERTING_ID b
	DATA_VILLAGER_DATA c
	conversionStarter bo
	gossips bp
	tradeOffers bq
	villagerConversionTime d
	villagerXp br
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	convertsInWater ()Z eN
	defineSynchedData ()V e
	finalizeSpawn (Lnet/minecraft/world/level/ServerLevelAccessor;Lnet/minecraft/world/DifficultyInstance;Lnet/minecraft/world/entity/MobSpawnType;Lnet/minecraft/world/entity/SpawnGroupData;Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/world/entity/SpawnGroupData; a
	finishConversion (Lnet/minecraft/server/level/ServerLevel;)V c
	getAmbientSound ()Lnet/minecraft/sounds/SoundEvent; I
	getConversionProgress ()I eZ
	getDeathSound ()Lnet/minecraft/sounds/SoundEvent; dp
	getHurtSound (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEvent; e
	getSkull ()Lnet/minecraft/world/item/ItemStack; eM
	getStepSound ()Lnet/minecraft/sounds/SoundEvent; eL
	getVillagerData ()Lnet/minecraft/world/entity/npc/VillagerData; eX
	getVillagerXp ()I eY
	getVoicePitch ()F dG
	handleEntityEvent (B)V a
	isConverting ()Z eW
	mobInteract (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResult; b
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	removeWhenFarAway (D)Z h
	setGossips (Lnet/minecraft/nbt/Tag;)V a
	setTradeOffers (Lnet/minecraft/nbt/CompoundTag;)V g
	setVillagerData (Lnet/minecraft/world/entity/npc/VillagerData;)V a
	setVillagerXp (I)V a
	startConverting (Ljava/util/UUID;I)V a
	tick ()V j
net/minecraft/world/entity/monster/ZombifiedPiglin bei
	ALERT_INTERVAL bs
	FIRST_ANGER_SOUND_DELAY d
	PERSISTENT_ANGER_TIME bp
	SPEED_MODIFIER_ATTACKING c
	SPEED_MODIFIER_ATTACKING_UUID b
	persistentAngerTarget br
	playFirstAngerSoundIn bo
	remainingPersistentAngerTime bq
	ticksUntilNextAlert bt
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	addBehaviourGoals ()V m
	alertOthers ()V eZ
	checkSpawnObstruction (Lnet/minecraft/world/level/LevelReader;)Z a
	checkZombifiedPiglinSpawnRules (Lnet/minecraft/world/entity/EntityType;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/world/entity/MobSpawnType;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)Z b
	convertsInWater ()Z eN
	createAttributes ()Lnet/minecraft/world/entity/ai/attributes/AttributeSupplier$Builder; eW
	customServerAiStep ()V N
	getAmbientSound ()Lnet/minecraft/sounds/SoundEvent; I
	getDeathSound ()Lnet/minecraft/sounds/SoundEvent; dp
	getHurtSound (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEvent; e
	getMyRidingOffset ()D ba
	getPersistentAngerTarget ()Ljava/util/UUID; F_
	getRemainingPersistentAngerTime ()I E_
	getSkull ()Lnet/minecraft/world/item/ItemStack; eM
	hurt (Lnet/minecraft/world/damagesource/DamageSource;F)Z a
	isPreventingPlayerRest (Lnet/minecraft/world/entity/player/Player;)Z f
	maybeAlertOthers ()V eY
	maybePlayFirstAngerSound ()V eX
	playAngerSound ()V fa
	populateDefaultEquipmentSlots (Lnet/minecraft/world/DifficultyInstance;)V a
	randomizeReinforcementsChance ()V eV
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	setPersistentAngerTarget (Ljava/util/UUID;)V a
	setRemainingPersistentAngerTime (I)V a_
	setTarget (Lnet/minecraft/world/entity/LivingEntity;)V h
	startPersistentAngerTimer ()V G_
net/minecraft/world/entity/monster/hoglin/Hoglin bej
	DATA_IMMUNE_TO_ZOMBIFICATION bq
	MEMORY_TYPES bp
	SENSOR_TYPES bo
	attackAnimationRemainingTicks br
	cannotBeHunted bt
	timeInOverworld bs
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	ageBoundaryReached ()V m
	aiStep ()V k
	blockedByShield (Lnet/minecraft/world/entity/LivingEntity;)V e
	brainProvider ()Lnet/minecraft/world/entity/ai/Brain$Provider; cJ
	canBeHunted ()Z eO
	canBeLeashed (Lnet/minecraft/world/entity/player/Player;)Z a
	canFallInLove ()Z eP
	checkHoglinSpawnRules (Lnet/minecraft/world/entity/EntityType;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/world/entity/MobSpawnType;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)Z c
	createAttributes ()Lnet/minecraft/world/entity/ai/attributes/AttributeSupplier$Builder; eK
	customServerAiStep ()V N
	defineSynchedData ()V e
	doHurtTarget (Lnet/minecraft/world/entity/Entity;)Z B
	finalizeSpawn (Lnet/minecraft/world/level/ServerLevelAccessor;Lnet/minecraft/world/DifficultyInstance;Lnet/minecraft/world/entity/MobSpawnType;Lnet/minecraft/world/entity/SpawnGroupData;Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/world/entity/SpawnGroupData; a
	finishConversion (Lnet/minecraft/server/level/ServerLevel;)V c
	getAmbientSound ()Lnet/minecraft/sounds/SoundEvent; I
	getAttackAnimationRemainingTicks ()I eM
	getBrain ()Lnet/minecraft/world/entity/ai/Brain; cI
	getBreedOffspring (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/AgableMob;)Lnet/minecraft/world/entity/AgableMob; a
	getDeathSound ()Lnet/minecraft/sounds/SoundEvent; dp
	getExperienceReward (Lnet/minecraft/world/entity/player/Player;)I d
	getHurtSound (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEvent; e
	getMovementSpeed ()F eU
	getPassengersRidingOffset ()D bb
	getSoundSource ()Lnet/minecraft/sounds/SoundSource; ct
	getSwimSound ()Lnet/minecraft/sounds/SoundEvent; au
	getSwimSplashSound ()Lnet/minecraft/sounds/SoundEvent; av
	getWalkTargetValue (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/LevelReader;)F a
	handleEntityEvent (B)V a
	hurt (Lnet/minecraft/world/damagesource/DamageSource;F)Z a
	isAdult ()Z eL
	isConverting ()Z eN
	isFood (Lnet/minecraft/world/item/ItemStack;)Z k
	isImmuneToZombification ()Z eV
	makeBrain (Lcom/mojang/serialization/Dynamic;)Lnet/minecraft/world/entity/ai/Brain; a
	mobInteract (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResult; b
	playSound (Lnet/minecraft/sounds/SoundEvent;)V a
	playStepSound (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V b
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	removeWhenFarAway (D)Z h
	sendDebugPackets ()V M
	setCannotBeHunted (Z)V u
	setImmuneToZombification (Z)V t
	shouldDropExperience ()Z cU
net/minecraft/world/entity/monster/hoglin/HoglinAi bek
	ADULT_FOLLOW_RANGE b
	RETREAT_DURATION a
	broadcastAttackTarget (Lnet/minecraft/world/entity/monster/hoglin/Hoglin;Lnet/minecraft/world/entity/LivingEntity;)V h
	broadcastRetreat (Lnet/minecraft/world/entity/monster/hoglin/Hoglin;Lnet/minecraft/world/entity/LivingEntity;)V c
	createIdleMovementBehaviors ()Lnet/minecraft/world/entity/ai/behavior/RunOne; a
	findNearestValidAttackTarget (Lnet/minecraft/world/entity/monster/hoglin/Hoglin;)Ljava/util/Optional; d
	getSoundForActivity (Lnet/minecraft/world/entity/monster/hoglin/Hoglin;Lnet/minecraft/world/entity/schedule/Activity;)Lnet/minecraft/sounds/SoundEvent; a
	getSoundForCurrentActivity (Lnet/minecraft/world/entity/monster/hoglin/Hoglin;)Ljava/util/Optional; b
	getVisibleAdultHoglins (Lnet/minecraft/world/entity/monster/hoglin/Hoglin;)Ljava/util/List; g
	initCoreActivity (Lnet/minecraft/world/entity/ai/Brain;)V b
	initFightActivity (Lnet/minecraft/world/entity/ai/Brain;)V d
	initIdleActivity (Lnet/minecraft/world/entity/ai/Brain;)V c
	initRetreatActivity (Lnet/minecraft/world/entity/ai/Brain;)V e
	isBreeding (Lnet/minecraft/world/entity/monster/hoglin/Hoglin;)Z i
	isNearRepellent (Lnet/minecraft/world/entity/monster/hoglin/Hoglin;)Z h
	isPacified (Lnet/minecraft/world/entity/monster/hoglin/Hoglin;)Z c
	isPosNearNearestRepellent (Lnet/minecraft/world/entity/monster/hoglin/Hoglin;Lnet/minecraft/core/BlockPos;)Z a
	makeBrain (Lnet/minecraft/world/entity/ai/Brain;)Lnet/minecraft/world/entity/ai/Brain; a
	maybeRetaliate (Lnet/minecraft/world/entity/monster/hoglin/Hoglin;Lnet/minecraft/world/entity/LivingEntity;)V f
	onHitTarget (Lnet/minecraft/world/entity/monster/hoglin/Hoglin;Lnet/minecraft/world/entity/LivingEntity;)V a
	piglinsOutnumberHoglins (Lnet/minecraft/world/entity/monster/hoglin/Hoglin;)Z f
	retreatFromNearestTarget (Lnet/minecraft/world/entity/monster/hoglin/Hoglin;Lnet/minecraft/world/entity/LivingEntity;)V d
	setAttackTarget (Lnet/minecraft/world/entity/monster/hoglin/Hoglin;Lnet/minecraft/world/entity/LivingEntity;)V g
	setAttackTargetIfCloserThanCurrent (Lnet/minecraft/world/entity/monster/hoglin/Hoglin;Lnet/minecraft/world/entity/LivingEntity;)V i
	setAvoidTarget (Lnet/minecraft/world/entity/monster/hoglin/Hoglin;Lnet/minecraft/world/entity/LivingEntity;)V e
	updateActivity (Lnet/minecraft/world/entity/monster/hoglin/Hoglin;)V a
	wantsToStopFleeing (Lnet/minecraft/world/entity/monster/hoglin/Hoglin;)Z e
	wasHurtBy (Lnet/minecraft/world/entity/monster/hoglin/Hoglin;Lnet/minecraft/world/entity/LivingEntity;)V b
net/minecraft/world/entity/monster/hoglin/HoglinBase bel
	getAttackAnimationRemainingTicks ()I eM
	hurtAndThrowTarget (Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/entity/LivingEntity;)Z a
	throwTarget (Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/entity/LivingEntity;)V b
net/minecraft/world/entity/monster/piglin/AbstractPiglin beo
	DATA_IMMUNE_TO_ZOMBIFICATION b
	timeInOverworld c
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	applyOpenDoorsAbility ()V eS
	canHunt ()Z m
	customServerAiStep ()V N
	defineSynchedData ()V e
	finishConversion (Lnet/minecraft/server/level/ServerLevel;)V c
	getArmPose ()Lnet/minecraft/world/entity/monster/piglin/PiglinArmPose; eN
	getMyRidingOffset ()D ba
	getTarget ()Lnet/minecraft/world/entity/LivingEntity; A
	isAdult ()Z eM
	isConverting ()Z eL
	isHoldingMeleeWeapon ()Z eO
	isImmuneToZombification ()Z eK
	playAmbientSound ()V F
	playConvertedSound ()V eP
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	sendDebugPackets ()V M
	setImmuneToZombification (Z)V t
net/minecraft/world/entity/monster/piglin/Piglin bep
	DATA_BABY_ID bp
	DATA_IS_CHARGING_CROSSBOW bq
	DATA_IS_DANCING br
	MEMORY_TYPES bo
	SENSOR_TYPES d
	SPEED_MODIFIER_BABY bt
	SPEED_MODIFIER_BABY_UUID bs
	cannotHunt bv
	inventory bu
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	addToInventory (Lnet/minecraft/world/item/ItemStack;)Lnet/minecraft/world/item/ItemStack; k
	brainProvider ()Lnet/minecraft/world/entity/ai/Brain$Provider; cJ
	canAddToInventory (Lnet/minecraft/world/item/ItemStack;)Z l
	canFireProjectileWeapon (Lnet/minecraft/world/item/ProjectileWeaponItem;)Z a
	canHunt ()Z m
	canReplaceCurrentItem (Lnet/minecraft/world/item/ItemStack;)Z o
	canReplaceCurrentItem (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/item/ItemStack;)Z a
	checkPiglinSpawnRules (Lnet/minecraft/world/entity/EntityType;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/world/entity/MobSpawnType;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)Z b
	createAttributes ()Lnet/minecraft/world/entity/ai/attributes/AttributeSupplier$Builder; eT
	createSpawnWeapon ()Lnet/minecraft/world/item/ItemStack; eV
	customServerAiStep ()V N
	defineSynchedData ()V e
	dropCustomDeathLoot (Lnet/minecraft/world/damagesource/DamageSource;IZ)V a
	finalizeSpawn (Lnet/minecraft/world/level/ServerLevelAccessor;Lnet/minecraft/world/DifficultyInstance;Lnet/minecraft/world/entity/MobSpawnType;Lnet/minecraft/world/entity/SpawnGroupData;Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/world/entity/SpawnGroupData; a
	finishConversion (Lnet/minecraft/server/level/ServerLevel;)V c
	getAmbientSound ()Lnet/minecraft/sounds/SoundEvent; I
	getArmPose ()Lnet/minecraft/world/entity/monster/piglin/PiglinArmPose; eN
	getBrain ()Lnet/minecraft/world/entity/ai/Brain; cI
	getDeathSound ()Lnet/minecraft/sounds/SoundEvent; dp
	getExperienceReward (Lnet/minecraft/world/entity/player/Player;)I d
	getHurtSound (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEvent; e
	getInventory ()Lnet/minecraft/world/Container; eS
	getPassengersRidingOffset ()D bb
	getStandingEyeHeight (Lnet/minecraft/world/entity/Pose;Lnet/minecraft/world/entity/EntityDimensions;)F b
	getTopPassenger (Lnet/minecraft/world/entity/Entity;I)Lnet/minecraft/world/entity/Entity; b
	holdInMainHand (Lnet/minecraft/world/item/ItemStack;)V m
	holdInOffHand (Lnet/minecraft/world/item/ItemStack;)V n
	hurt (Lnet/minecraft/world/damagesource/DamageSource;F)Z a
	isBaby ()Z w_
	isChargingCrossbow ()Z eW
	isDancing ()Z eU
	makeBrain (Lcom/mojang/serialization/Dynamic;)Lnet/minecraft/world/entity/ai/Brain; a
	maybeWearArmor (Lnet/minecraft/world/entity/EquipmentSlot;Lnet/minecraft/world/item/ItemStack;)V d
	mobInteract (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResult; b
	onCrossbowAttackPerformed ()V U_
	onSyncedDataUpdated (Lnet/minecraft/network/syncher/EntityDataAccessor;)V a
	performRangedAttack (Lnet/minecraft/world/entity/LivingEntity;F)V a
	pickUpItem (Lnet/minecraft/world/entity/item/ItemEntity;)V b
	playConvertedSound ()V eP
	playSound (Lnet/minecraft/sounds/SoundEvent;)V a
	playStepSound (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V b
	populateDefaultEquipmentSlots (Lnet/minecraft/world/DifficultyInstance;)V a
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	removeWhenFarAway (D)Z h
	setBaby (Z)V a
	setCannotHunt (Z)V v
	setChargingCrossbow (Z)V b
	setDancing (Z)V u
	shootCrossbowProjectile (Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/entity/projectile/Projectile;F)V a
	shouldDespawnInPeaceful ()Z L
	startRiding (Lnet/minecraft/world/entity/Entity;Z)Z a
	wantsToPickUp (Lnet/minecraft/world/item/ItemStack;)Z i
net/minecraft/world/entity/monster/piglin/PiglinAi beq
	AVOID_ZOMBIFIED_DURATION f
	BABY_AVOID_NEMESIS_DURATION g
	BARTERING_ITEM a
	FOOD_ITEMS h
	RETREAT_DURATION e
	RIDE_DURATION d
	RIDE_START_INTERVAL c
	TIME_BETWEEN_HUNTS b
	admireGoldItem (Lnet/minecraft/world/entity/LivingEntity;)V d
	angerNearbyPiglins (Lnet/minecraft/world/entity/player/Player;Z)V a
	avoidRepellent ()Lnet/minecraft/world/entity/ai/behavior/SetWalkTargetAwayFrom; c
	avoidZombified ()Lnet/minecraft/world/entity/ai/behavior/CopyMemoryWithExpiry; e
	babyAvoidNemesis ()Lnet/minecraft/world/entity/ai/behavior/CopyMemoryWithExpiry; d
	babySometimesRideBabyHoglin ()Lnet/minecraft/world/entity/ai/behavior/RunSometimes; f
	broadcastAngerTarget (Lnet/minecraft/world/entity/monster/piglin/AbstractPiglin;Lnet/minecraft/world/entity/LivingEntity;)V b
	broadcastDontKillAnyMoreHoglinsForAWhile (Lnet/minecraft/world/entity/monster/piglin/Piglin;)V f
	broadcastRetreat (Lnet/minecraft/world/entity/monster/piglin/Piglin;Lnet/minecraft/world/entity/LivingEntity;)V c
	broadcastUniversalAnger (Lnet/minecraft/world/entity/monster/piglin/AbstractPiglin;)V a
	canAdmire (Lnet/minecraft/world/entity/monster/piglin/Piglin;Lnet/minecraft/world/item/ItemStack;)Z b
	cancelAdmiring (Lnet/minecraft/world/entity/monster/piglin/Piglin;)V c
	createIdleLookBehaviors ()Lnet/minecraft/world/entity/ai/behavior/RunOne; a
	createIdleMovementBehaviors ()Lnet/minecraft/world/entity/ai/behavior/RunOne; b
	doesntSeeAnyPlayerHoldingLovedItem (Lnet/minecraft/world/entity/LivingEntity;)Z g
	dontKillAnyMoreHoglinsForAWhile (Lnet/minecraft/world/entity/monster/piglin/AbstractPiglin;)V c
	eat (Lnet/minecraft/world/entity/monster/piglin/Piglin;)V s
	findNearestValidAttackTarget (Lnet/minecraft/world/entity/monster/piglin/Piglin;)Ljava/util/Optional; k
	getAdultPiglins (Lnet/minecraft/world/entity/monster/piglin/AbstractPiglin;)Ljava/util/List; e
	getAngerTarget (Lnet/minecraft/world/entity/monster/piglin/AbstractPiglin;)Ljava/util/Optional; f
	getAvoidTarget (Lnet/minecraft/world/entity/monster/piglin/Piglin;)Ljava/util/Optional; g
	getBarterResponseItems (Lnet/minecraft/world/entity/monster/piglin/Piglin;)Ljava/util/List; i
	getNearestVisibleTargetablePlayer (Lnet/minecraft/world/entity/monster/piglin/AbstractPiglin;)Ljava/util/Optional; b
	getRandomNearbyPos (Lnet/minecraft/world/entity/monster/piglin/Piglin;)Lnet/minecraft/world/phys/Vec3; t
	getSoundForActivity (Lnet/minecraft/world/entity/monster/piglin/Piglin;Lnet/minecraft/world/entity/schedule/Activity;)Lnet/minecraft/sounds/SoundEvent; a
	getSoundForCurrentActivity (Lnet/minecraft/world/entity/monster/piglin/Piglin;)Ljava/util/Optional; d
	getVisibleAdultPiglins (Lnet/minecraft/world/entity/monster/piglin/Piglin;)Ljava/util/List; m
	hasAnyoneNearbyHuntedRecently (Lnet/minecraft/world/entity/monster/piglin/Piglin;)Z e
	hasCrossbow (Lnet/minecraft/world/entity/LivingEntity;)Z c
	hasEatenRecently (Lnet/minecraft/world/entity/monster/piglin/Piglin;)Z u
	hoglinsOutnumberPiglins (Lnet/minecraft/world/entity/monster/piglin/Piglin;)Z q
	holdInOffhand (Lnet/minecraft/world/entity/monster/piglin/Piglin;Lnet/minecraft/world/item/ItemStack;)V c
	initAdmireItemActivity (Lnet/minecraft/world/entity/ai/Brain;)V d
	initCelebrateActivity (Lnet/minecraft/world/entity/ai/Brain;)V c
	initCoreActivity (Lnet/minecraft/world/entity/ai/Brain;)V a
	initFightActivity (Lnet/minecraft/world/entity/monster/piglin/Piglin;Lnet/minecraft/world/entity/ai/Brain;)V b
	initIdleActivity (Lnet/minecraft/world/entity/ai/Brain;)V b
	initMemories (Lnet/minecraft/world/entity/monster/piglin/Piglin;)V a
	initRetreatActivity (Lnet/minecraft/world/entity/ai/Brain;)V e
	initRideHoglinActivity (Lnet/minecraft/world/entity/ai/Brain;)V f
	isAdmiringDisabled (Lnet/minecraft/world/entity/monster/piglin/Piglin;)Z x
	isAdmiringItem (Lnet/minecraft/world/entity/monster/piglin/Piglin;)Z v
	isAttackAllowed (Lnet/minecraft/world/entity/LivingEntity;)Z e
	isBabyRidingBaby (Lnet/minecraft/world/entity/monster/piglin/Piglin;)Z h
	isBarterCurrency (Lnet/minecraft/world/item/Item;)Z b
	isFood (Lnet/minecraft/world/item/Item;)Z c
	isHoldingItemInOffHand (Lnet/minecraft/world/entity/monster/piglin/Piglin;)Z y
	isIdle (Lnet/minecraft/world/entity/monster/piglin/AbstractPiglin;)Z d
	isLovedItem (Lnet/minecraft/world/item/Item;)Z a
	isNearAvoidTarget (Lnet/minecraft/world/entity/monster/piglin/Piglin;)Z l
	isNearRepellent (Lnet/minecraft/world/entity/monster/piglin/Piglin;)Z w
	isNearZombified (Lnet/minecraft/world/entity/monster/piglin/Piglin;)Z j
	isNearestValidAttackTarget (Lnet/minecraft/world/entity/monster/piglin/Piglin;Lnet/minecraft/world/entity/LivingEntity;)Z b
	isNotHoldingLovedItemInOffHand (Lnet/minecraft/world/entity/monster/piglin/Piglin;)Z z
	isPlayerHoldingLovedItem (Lnet/minecraft/world/entity/LivingEntity;)Z b
	isWearingGold (Lnet/minecraft/world/entity/LivingEntity;)Z a
	isZombified (Lnet/minecraft/world/entity/EntityType;)Z a
	makeBrain (Lnet/minecraft/world/entity/monster/piglin/Piglin;Lnet/minecraft/world/entity/ai/Brain;)Lnet/minecraft/world/entity/ai/Brain; a
	maybeRetaliate (Lnet/minecraft/world/entity/monster/piglin/AbstractPiglin;Lnet/minecraft/world/entity/LivingEntity;)V a
	mobInteract (Lnet/minecraft/world/entity/monster/piglin/Piglin;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResult; a
	pickUpItem (Lnet/minecraft/world/entity/monster/piglin/Piglin;Lnet/minecraft/world/entity/item/ItemEntity;)V a
	piglinsEqualOrOutnumberHoglins (Lnet/minecraft/world/entity/monster/piglin/Piglin;)Z p
	putInInventory (Lnet/minecraft/world/entity/monster/piglin/Piglin;Lnet/minecraft/world/item/ItemStack;)V d
	removeOneItemFromItemEntity (Lnet/minecraft/world/entity/item/ItemEntity;)Lnet/minecraft/world/item/ItemStack; a
	retreatFromNearestTarget (Lnet/minecraft/world/entity/monster/piglin/Piglin;Lnet/minecraft/world/entity/LivingEntity;)V d
	seesPlayerHoldingLovedItem (Lnet/minecraft/world/entity/LivingEntity;)Z f
	seesPlayerHoldingWantedItem (Lnet/minecraft/world/entity/monster/piglin/Piglin;)Z r
	setAngerTarget (Lnet/minecraft/world/entity/monster/piglin/AbstractPiglin;Lnet/minecraft/world/entity/LivingEntity;)V c
	setAngerTargetIfCloserThanCurrent (Lnet/minecraft/world/entity/monster/piglin/AbstractPiglin;Lnet/minecraft/world/entity/LivingEntity;)V e
	setAngerTargetToNearestTargetablePlayerIfFound (Lnet/minecraft/world/entity/monster/piglin/AbstractPiglin;Lnet/minecraft/world/entity/LivingEntity;)V d
	setAvoidTargetAndDontHuntForAWhile (Lnet/minecraft/world/entity/monster/piglin/Piglin;Lnet/minecraft/world/entity/LivingEntity;)V e
	stopHoldingOffHandItem (Lnet/minecraft/world/entity/monster/piglin/Piglin;Z)V a
	stopWalking (Lnet/minecraft/world/entity/monster/piglin/Piglin;)V n
	throwItems (Lnet/minecraft/world/entity/monster/piglin/Piglin;Ljava/util/List;)V a
	throwItemsTowardPlayer (Lnet/minecraft/world/entity/monster/piglin/Piglin;Lnet/minecraft/world/entity/player/Player;Ljava/util/List;)V a
	throwItemsTowardPos (Lnet/minecraft/world/entity/monster/piglin/Piglin;Ljava/util/List;Lnet/minecraft/world/phys/Vec3;)V a
	throwItemsTowardRandomPos (Lnet/minecraft/world/entity/monster/piglin/Piglin;Ljava/util/List;)V b
	updateActivity (Lnet/minecraft/world/entity/monster/piglin/Piglin;)V b
	wantsToDance (Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/entity/LivingEntity;)Z a
	wantsToPickup (Lnet/minecraft/world/entity/monster/piglin/Piglin;Lnet/minecraft/world/item/ItemStack;)Z a
	wantsToStopFleeing (Lnet/minecraft/world/entity/monster/piglin/Piglin;)Z o
	wantsToStopRiding (Lnet/minecraft/world/entity/monster/piglin/Piglin;Lnet/minecraft/world/entity/Entity;)Z a
	wasHurtBy (Lnet/minecraft/world/entity/monster/piglin/Piglin;Lnet/minecraft/world/entity/LivingEntity;)V a
	wasHurtRecently (Lnet/minecraft/world/entity/LivingEntity;)Z h
net/minecraft/world/entity/monster/piglin/PiglinArmPose ber
	$VALUES g
	ADMIRING_ITEM d
	ATTACKING_WITH_MELEE_WEAPON a
	CROSSBOW_CHARGE c
	CROSSBOW_HOLD b
	DANCING e
	DEFAULT f
net/minecraft/world/entity/monster/piglin/PiglinBrute bes
	MEMORY_TYPES bo
	SENSOR_TYPES d
	brainProvider ()Lnet/minecraft/world/entity/ai/Brain$Provider; cJ
	canHunt ()Z m
	createAttributes ()Lnet/minecraft/world/entity/ai/attributes/AttributeSupplier$Builder; eS
	customServerAiStep ()V N
	finalizeSpawn (Lnet/minecraft/world/level/ServerLevelAccessor;Lnet/minecraft/world/DifficultyInstance;Lnet/minecraft/world/entity/MobSpawnType;Lnet/minecraft/world/entity/SpawnGroupData;Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/world/entity/SpawnGroupData; a
	getAmbientSound ()Lnet/minecraft/sounds/SoundEvent; I
	getArmPose ()Lnet/minecraft/world/entity/monster/piglin/PiglinArmPose; eN
	getBrain ()Lnet/minecraft/world/entity/ai/Brain; cI
	getDeathSound ()Lnet/minecraft/sounds/SoundEvent; dp
	getHurtSound (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEvent; e
	hurt (Lnet/minecraft/world/damagesource/DamageSource;F)Z a
	makeBrain (Lcom/mojang/serialization/Dynamic;)Lnet/minecraft/world/entity/ai/Brain; a
	playAngrySound ()V eT
	playConvertedSound ()V eP
	playStepSound (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V b
	populateDefaultEquipmentSlots (Lnet/minecraft/world/DifficultyInstance;)V a
	wantsToPickUp (Lnet/minecraft/world/item/ItemStack;)Z i
net/minecraft/world/entity/monster/piglin/PiglinBruteAi bet
	createIdleLookBehaviors ()Lnet/minecraft/world/entity/ai/behavior/RunOne; a
	createIdleMovementBehaviors ()Lnet/minecraft/world/entity/ai/behavior/RunOne; b
	findNearestValidAttackTarget (Lnet/minecraft/world/entity/monster/piglin/AbstractPiglin;)Ljava/util/Optional; a
	getTargetIfWithinRange (Lnet/minecraft/world/entity/monster/piglin/AbstractPiglin;Lnet/minecraft/world/entity/ai/memory/MemoryModuleType;)Ljava/util/Optional; a
	initCoreActivity (Lnet/minecraft/world/entity/monster/piglin/PiglinBrute;Lnet/minecraft/world/entity/ai/Brain;)V b
	initFightActivity (Lnet/minecraft/world/entity/monster/piglin/PiglinBrute;Lnet/minecraft/world/entity/ai/Brain;)V d
	initIdleActivity (Lnet/minecraft/world/entity/monster/piglin/PiglinBrute;Lnet/minecraft/world/entity/ai/Brain;)V c
	initMemories (Lnet/minecraft/world/entity/monster/piglin/PiglinBrute;)V a
	isAttackAllowed (Lnet/minecraft/world/entity/LivingEntity;)Z a
	isNearestValidAttackTarget (Lnet/minecraft/world/entity/monster/piglin/AbstractPiglin;Lnet/minecraft/world/entity/LivingEntity;)Z a
	makeBrain (Lnet/minecraft/world/entity/monster/piglin/PiglinBrute;Lnet/minecraft/world/entity/ai/Brain;)Lnet/minecraft/world/entity/ai/Brain; a
	maybePlayActivitySound (Lnet/minecraft/world/entity/monster/piglin/PiglinBrute;)V c
	playActivitySound (Lnet/minecraft/world/entity/monster/piglin/PiglinBrute;)V d
	setAngerTarget (Lnet/minecraft/world/entity/monster/piglin/PiglinBrute;Lnet/minecraft/world/entity/LivingEntity;)V b
	updateActivity (Lnet/minecraft/world/entity/monster/piglin/PiglinBrute;)V b
	wasHurtBy (Lnet/minecraft/world/entity/monster/piglin/PiglinBrute;Lnet/minecraft/world/entity/LivingEntity;)V a
net/minecraft/world/entity/monster/piglin/RememberIfHoglinWasKilled beu
	isAttackTargetDeadHoglin (Lnet/minecraft/world/entity/monster/piglin/Piglin;)Z a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/monster/piglin/Piglin;J)V a
net/minecraft/world/entity/monster/piglin/StartAdmiringItemIfSeen bev
	admireDuration b
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)Z a
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/monster/piglin/Piglin;)Z a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/monster/piglin/Piglin;J)V a
net/minecraft/world/entity/monster/piglin/StartHuntingHoglin bew
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)Z a
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/monster/piglin/Piglin;)Z a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/monster/piglin/Piglin;J)V a
net/minecraft/world/entity/monster/piglin/StopAdmiringIfItemTooFarAway bex
	maxDistanceToItem b
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)Z a
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/monster/piglin/Piglin;)Z a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/monster/piglin/Piglin;J)V a
net/minecraft/world/entity/monster/piglin/StopAdmiringIfTiredOfTryingToReachItem bey
	disableTime c
	maxTimeToReachItem b
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)Z a
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/monster/piglin/Piglin;)Z a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/monster/piglin/Piglin;J)V a
net/minecraft/world/entity/monster/piglin/StopHoldingItemIfNoLongerAdmiring bez
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)Z a
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/monster/piglin/Piglin;)Z a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/monster/piglin/Piglin;J)V a
net/minecraft/world/entity/npc/AbstractVillager bfb
	DATA_UNHAPPY_COUNTER bp
	inventory br
	offers bo
	tradingPlayer bq
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	addOffersFromItemListings (Lnet/minecraft/world/item/trading/MerchantOffers;[Lnet/minecraft/world/entity/npc/VillagerTrades$ItemListing;I)V a
	addParticlesAroundSelf (Lnet/minecraft/core/particles/ParticleOptions;)V a
	canBeLeashed (Lnet/minecraft/world/entity/player/Player;)Z a
	changeDimension (Lnet/minecraft/server/level/ServerLevel;)Lnet/minecraft/world/entity/Entity; b
	defineSynchedData ()V e
	die (Lnet/minecraft/world/damagesource/DamageSource;)V a
	finalizeSpawn (Lnet/minecraft/world/level/ServerLevelAccessor;Lnet/minecraft/world/DifficultyInstance;Lnet/minecraft/world/entity/MobSpawnType;Lnet/minecraft/world/entity/SpawnGroupData;Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/world/entity/SpawnGroupData; a
	getInventory ()Lnet/minecraft/world/Container; eS
	getInventory ()Lnet/minecraft/world/SimpleContainer; eU
	getLevel ()Lnet/minecraft/world/level/Level; eV
	getNotifyTradeSound ()Lnet/minecraft/sounds/SoundEvent; eQ
	getOffers ()Lnet/minecraft/world/item/trading/MerchantOffers; eO
	getRopeHoldPosition (F)Lnet/minecraft/world/phys/Vec3; o
	getStandingEyeHeight (Lnet/minecraft/world/entity/Pose;Lnet/minecraft/world/entity/EntityDimensions;)F b
	getTradeUpdatedSound (Z)Lnet/minecraft/sounds/SoundEvent; t
	getTradingPlayer ()Lnet/minecraft/world/entity/player/Player; eM
	getUnhappyCounter ()I eK
	getVillagerXp ()I eL
	isTrading ()Z eN
	notifyTrade (Lnet/minecraft/world/item/trading/MerchantOffer;)V a
	notifyTradeUpdated (Lnet/minecraft/world/item/ItemStack;)V k
	overrideOffers (Lnet/minecraft/world/item/trading/MerchantOffers;)V a
	overrideXp (I)V t
	playCelebrateSound ()V eR
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	rewardTradeXp (Lnet/minecraft/world/item/trading/MerchantOffer;)V b
	setSlot (ILnet/minecraft/world/item/ItemStack;)Z a_
	setTradingPlayer (Lnet/minecraft/world/entity/player/Player;)V f
	setUnhappyCounter (I)V s
	showProgressBar ()Z eP
	stopTrading ()V eT
	updateTrades ()V eW
net/minecraft/world/entity/npc/CatSpawner bfc
	nextTick a
	spawnCat (Lnet/minecraft/core/BlockPos;Lnet/minecraft/server/level/ServerLevel;)I a
	spawnInHut (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;)I b
	spawnInVillage (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;)I a
	tick (Lnet/minecraft/server/level/ServerLevel;ZZ)I a
net/minecraft/world/entity/npc/ClientSideMerchant bfd
	container a
	offers c
	source b
	xp d
	getContainer ()Lnet/minecraft/world/Container; a
	getLevel ()Lnet/minecraft/world/level/Level; eV
	getNotifyTradeSound ()Lnet/minecraft/sounds/SoundEvent; eQ
	getOffers ()Lnet/minecraft/world/item/trading/MerchantOffers; eO
	getTradingPlayer ()Lnet/minecraft/world/entity/player/Player; eM
	getVillagerXp ()I eL
	notifyTrade (Lnet/minecraft/world/item/trading/MerchantOffer;)V a
	notifyTradeUpdated (Lnet/minecraft/world/item/ItemStack;)V k
	overrideOffers (Lnet/minecraft/world/item/trading/MerchantOffers;)V a
	overrideXp (I)V t
	setTradingPlayer (Lnet/minecraft/world/entity/player/Player;)V f
	showProgressBar ()Z eP
net/minecraft/world/entity/npc/InventoryCarrier bfe
	getInventory ()Lnet/minecraft/world/Container; eS
net/minecraft/world/entity/npc/Npc bff
net/minecraft/world/entity/npc/Villager bfg
	DATA_VILLAGER_DATA br
	FOOD_POINTS bp
	MEMORY_TYPES bG
	POI_MEMORIES bq
	SENSOR_TYPES bH
	WANTED_ITEMS bs
	assignProfessionWhenSpawned bF
	chasing bw
	foodLevel bx
	gossips by
	increaseProfessionLevelOnUpdate bu
	lastGossipDecayTime bA
	lastGossipTime bz
	lastRestockCheckDayTime bE
	lastRestockGameTime bC
	lastTradedPlayer bv
	numberOfRestocksToday bD
	updateMerchantTimer bt
	villagerXp bB
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	ageBoundaryReached ()V m
	allowedToRestock ()Z fn
	assignProfessionWhenSpawned ()Z eZ
	brainProvider ()Lnet/minecraft/world/entity/ai/Brain$Provider; cJ
	canBreed ()Z f
	canRestock ()Z fa
	catchUpDemand ()V fo
	countFoodPointsInInventory ()I fv
	createAttributes ()Lnet/minecraft/world/entity/ai/attributes/AttributeSupplier$Builder; eY
	customServerAiStep ()V N
	defineSynchedData ()V e
	die (Lnet/minecraft/world/damagesource/DamageSource;)V a
	digestFood (I)V v
	eatAndDigestFood ()V ff
	eatUntilFull ()V fs
	finalizeSpawn (Lnet/minecraft/world/level/ServerLevelAccessor;Lnet/minecraft/world/DifficultyInstance;Lnet/minecraft/world/entity/MobSpawnType;Lnet/minecraft/world/entity/SpawnGroupData;Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/world/entity/SpawnGroupData; a
	findSpawnPositionForGolemInColumn (Lnet/minecraft/core/BlockPos;DD)Lnet/minecraft/core/BlockPos; a
	getAmbientSound ()Lnet/minecraft/sounds/SoundEvent; I
	getBrain ()Lnet/minecraft/world/entity/ai/Brain; cI
	getBreedOffspring (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/AgableMob;)Lnet/minecraft/world/entity/AgableMob; a
	getBreedOffspring (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/AgableMob;)Lnet/minecraft/world/entity/npc/Villager; b
	getDeathSound ()Lnet/minecraft/sounds/SoundEvent; dp
	getGossips ()Lnet/minecraft/world/entity/ai/gossip/GossipContainer; fj
	getHurtSound (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEvent; e
	getPlayerReputation (Lnet/minecraft/world/entity/player/Player;)I g
	getTypeName ()Lnet/minecraft/network/chat/Component; bI
	getVillagerData ()Lnet/minecraft/world/entity/npc/VillagerData; eX
	getVillagerXp ()I eL
	golemSpawnConditionsMet (J)Z b
	gossip (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/npc/Villager;J)V a
	handleEntityEvent (B)V a
	hasExcessFood ()Z fg
	hasFarmSeeds ()Z fi
	hungry ()Z fr
	increaseMerchantCareer ()V fu
	isChasing ()Z fe
	makeBrain (Lcom/mojang/serialization/Dynamic;)Lnet/minecraft/world/entity/ai/Brain; a
	maybeDecayGossip ()V fw
	mobInteract (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResult; b
	needsToRestock ()Z fm
	onReputationEventFrom (Lnet/minecraft/world/entity/ai/village/ReputationEventType;Lnet/minecraft/world/entity/Entity;)V a
	pickUpItem (Lnet/minecraft/world/entity/item/ItemEntity;)V b
	playWorkSound ()V fd
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	refreshBrain (Lnet/minecraft/server/level/ServerLevel;)V c
	registerBrainGoals (Lnet/minecraft/world/entity/ai/Brain;)V a
	releaseAllPois ()V fq
	releasePoi (Lnet/minecraft/world/entity/ai/memory/MemoryModuleType;)V a
	removeWhenFarAway (D)Z h
	resetNumberOfRestocks ()V fx
	resetSpecialPrices ()V fl
	restock ()V fb
	rewardTradeXp (Lnet/minecraft/world/item/trading/MerchantOffer;)V b
	sendDebugPackets ()V M
	setChasing (Z)V u
	setGossips (Lnet/minecraft/nbt/Tag;)V a
	setLastHurtByMob (Lnet/minecraft/world/entity/LivingEntity;)V a
	setOffers (Lnet/minecraft/world/item/trading/MerchantOffers;)V b
	setTradingPlayer (Lnet/minecraft/world/entity/player/Player;)V f
	setUnhappy ()V fk
	setVillagerData (Lnet/minecraft/world/entity/npc/VillagerData;)V a
	setVillagerXp (I)V u
	shouldIncreaseLevel ()Z ft
	shouldRestock ()Z fc
	spawnGolemIfNeeded (Lnet/minecraft/server/level/ServerLevel;JI)V a
	startSleeping (Lnet/minecraft/core/BlockPos;)V b
	startTrading (Lnet/minecraft/world/entity/player/Player;)V h
	stopSleeping ()V em
	stopTrading ()V eT
	tellWitnessesThatIWasMurdered (Lnet/minecraft/world/entity/Entity;)V a
	thunderHit (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LightningBolt;)V a
	tick ()V j
	trySpawnGolem (Lnet/minecraft/server/level/ServerLevel;)Lnet/minecraft/world/entity/animal/IronGolem; d
	updateDemand ()V fp
	updateSpecialPrices (Lnet/minecraft/world/entity/player/Player;)V i
	updateTrades ()V eW
	wantsMoreFood ()Z fh
	wantsToPickUp (Lnet/minecraft/world/item/ItemStack;)Z i
	wantsToSpawnGolem (J)Z a
net/minecraft/world/entity/npc/VillagerData bfh
	CODEC a
	NEXT_LEVEL_XP_THRESHOLDS b
	level e
	profession d
	type c
	canLevelUp (I)Z d
	getLevel ()I c
	getMaxXpPerLevel (I)I c
	getMinXpPerLevel (I)I b
	getProfession ()Lnet/minecraft/world/entity/npc/VillagerProfession; b
	getType ()Lnet/minecraft/world/entity/npc/VillagerType; a
	setLevel (I)Lnet/minecraft/world/entity/npc/VillagerData; a
	setProfession (Lnet/minecraft/world/entity/npc/VillagerProfession;)Lnet/minecraft/world/entity/npc/VillagerData; a
	setType (Lnet/minecraft/world/entity/npc/VillagerType;)Lnet/minecraft/world/entity/npc/VillagerData; a
net/minecraft/world/entity/npc/VillagerDataHolder bfi
	getVillagerData ()Lnet/minecraft/world/entity/npc/VillagerData; eX
	setVillagerData (Lnet/minecraft/world/entity/npc/VillagerData;)V a
net/minecraft/world/entity/npc/VillagerProfession bfj
	ARMORER b
	BUTCHER c
	CARTOGRAPHER d
	CLERIC e
	FARMER f
	FISHERMAN g
	FLETCHER h
	LEATHERWORKER i
	LIBRARIAN j
	MASON k
	NITWIT l
	NONE a
	SHEPHERD m
	TOOLSMITH n
	WEAPONSMITH o
	jobPoiType q
	name p
	requestedItems r
	secondaryPoi s
	workSound t
	getJobPoiType ()Lnet/minecraft/world/entity/ai/village/poi/PoiType; b
	getName ()Ljava/lang/String; a
	getRequestedItems ()Lcom/google/common/collect/ImmutableSet; c
	getSecondaryPoi ()Lcom/google/common/collect/ImmutableSet; d
	getWorkSound ()Lnet/minecraft/sounds/SoundEvent; e
	register (Ljava/lang/String;Lnet/minecraft/world/entity/ai/village/poi/PoiType;Lcom/google/common/collect/ImmutableSet;Lcom/google/common/collect/ImmutableSet;Lnet/minecraft/sounds/SoundEvent;)Lnet/minecraft/world/entity/npc/VillagerProfession; a
	register (Ljava/lang/String;Lnet/minecraft/world/entity/ai/village/poi/PoiType;Lnet/minecraft/sounds/SoundEvent;)Lnet/minecraft/world/entity/npc/VillagerProfession; a
net/minecraft/world/entity/npc/VillagerTrades bfk
	TRADES a
	WANDERING_TRADER_TRADES b
	toIntMap (Lcom/google/common/collect/ImmutableMap;)Lit/unimi/dsi/fastutil/ints/Int2ObjectMap; a
net/minecraft/world/entity/npc/VillagerTrades$DyedArmorForEmeralds bfk$a
	item a
	maxUses c
	value b
	villagerXp d
	getOffer (Lnet/minecraft/world/entity/Entity;Ljava/util/Random;)Lnet/minecraft/world/item/trading/MerchantOffer; a
	getRandomDye (Ljava/util/Random;)Lnet/minecraft/world/item/DyeItem; a
net/minecraft/world/entity/npc/VillagerTrades$EmeraldForItems bfk$b
	cost b
	item a
	maxUses c
	priceMultiplier e
	villagerXp d
	getOffer (Lnet/minecraft/world/entity/Entity;Ljava/util/Random;)Lnet/minecraft/world/item/trading/MerchantOffer; a
net/minecraft/world/entity/npc/VillagerTrades$EmeraldsForVillagerTypeItem bfk$c
	cost b
	maxUses c
	trades a
	villagerXp d
	getOffer (Lnet/minecraft/world/entity/Entity;Ljava/util/Random;)Lnet/minecraft/world/item/trading/MerchantOffer; a
net/minecraft/world/entity/npc/VillagerTrades$EnchantBookForEmeralds bfk$d
	villagerXp a
	getOffer (Lnet/minecraft/world/entity/Entity;Ljava/util/Random;)Lnet/minecraft/world/item/trading/MerchantOffer; a
net/minecraft/world/entity/npc/VillagerTrades$EnchantedItemForEmeralds bfk$e
	baseEmeraldCost b
	itemStack a
	maxUses c
	priceMultiplier e
	villagerXp d
	getOffer (Lnet/minecraft/world/entity/Entity;Ljava/util/Random;)Lnet/minecraft/world/item/trading/MerchantOffer; a
net/minecraft/world/entity/npc/VillagerTrades$ItemListing bfk$f
	getOffer (Lnet/minecraft/world/entity/Entity;Ljava/util/Random;)Lnet/minecraft/world/item/trading/MerchantOffer; a
net/minecraft/world/entity/npc/VillagerTrades$ItemsAndEmeraldsToItems bfk$g
	emeraldCost c
	fromCount b
	fromItem a
	maxUses f
	priceMultiplier h
	toCount e
	toItem d
	villagerXp g
	getOffer (Lnet/minecraft/world/entity/Entity;Ljava/util/Random;)Lnet/minecraft/world/item/trading/MerchantOffer; a
net/minecraft/world/entity/npc/VillagerTrades$ItemsForEmeralds bfk$h
	emeraldCost b
	itemStack a
	maxUses d
	numberOfItems c
	priceMultiplier f
	villagerXp e
	getOffer (Lnet/minecraft/world/entity/Entity;Ljava/util/Random;)Lnet/minecraft/world/item/trading/MerchantOffer; a
net/minecraft/world/entity/npc/VillagerTrades$SuspisciousStewForEmerald bfk$i
	duration b
	effect a
	priceMultiplier d
	xp c
	getOffer (Lnet/minecraft/world/entity/Entity;Ljava/util/Random;)Lnet/minecraft/world/item/trading/MerchantOffer; a
net/minecraft/world/entity/npc/VillagerTrades$TippedArrowForItemsAndEmeralds bfk$j
	emeraldCost c
	fromCount g
	fromItem f
	maxUses d
	priceMultiplier h
	toCount b
	toItem a
	villagerXp e
	getOffer (Lnet/minecraft/world/entity/Entity;Ljava/util/Random;)Lnet/minecraft/world/item/trading/MerchantOffer; a
net/minecraft/world/entity/npc/VillagerTrades$TreasureMapForEmeralds bfk$k
	destination b
	destinationType c
	emeraldCost a
	maxUses d
	villagerXp e
	getOffer (Lnet/minecraft/world/entity/Entity;Ljava/util/Random;)Lnet/minecraft/world/item/trading/MerchantOffer; a
net/minecraft/world/entity/npc/VillagerType bfl
	BY_BIOME i
	DESERT a
	JUNGLE b
	PLAINS c
	SAVANNA d
	SNOW e
	SWAMP f
	TAIGA g
	name h
	byBiome (Ljava/util/Optional;)Lnet/minecraft/world/entity/npc/VillagerType; a
	register (Ljava/lang/String;)Lnet/minecraft/world/entity/npc/VillagerType; a
net/minecraft/world/entity/npc/WanderingTrader bfm
	despawnDelay bq
	wanderTarget bp
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	aiStep ()V k
	getAmbientSound ()Lnet/minecraft/sounds/SoundEvent; I
	getBreedOffspring (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/AgableMob;)Lnet/minecraft/world/entity/AgableMob; a
	getDeathSound ()Lnet/minecraft/sounds/SoundEvent; dp
	getDespawnDelay ()I eX
	getDrinkingSound (Lnet/minecraft/world/item/ItemStack;)Lnet/minecraft/sounds/SoundEvent; c
	getHurtSound (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEvent; e
	getNotifyTradeSound ()Lnet/minecraft/sounds/SoundEvent; eQ
	getTradeUpdatedSound (Z)Lnet/minecraft/sounds/SoundEvent; t
	getWanderTarget ()Lnet/minecraft/core/BlockPos; eZ
	maybeDespawn ()V eY
	mobInteract (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResult; b
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	registerGoals ()V o
	removeWhenFarAway (D)Z h
	rewardTradeXp (Lnet/minecraft/world/item/trading/MerchantOffer;)V b
	setDespawnDelay (I)V u
	setWanderTarget (Lnet/minecraft/core/BlockPos;)V g
	showProgressBar ()Z eP
	updateTrades ()V eW
net/minecraft/world/entity/npc/WanderingTrader$WanderToPositionGoal bfm$a
	speedModifier c
	stopDistance b
	trader a
	canUse ()Z a
	isTooFarAway (Lnet/minecraft/core/BlockPos;D)Z a
	stop ()V d
	tick ()V e
net/minecraft/world/entity/npc/WanderingTraderSpawner bfn
	random a
	serverLevelData b
	spawnChance e
	spawnDelay d
	tickDelay c
	findSpawnPositionNear (Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;I)Lnet/minecraft/core/BlockPos; a
	hasEnoughSpace (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Z a
	spawn (Lnet/minecraft/server/level/ServerLevel;)Z a
	tick (Lnet/minecraft/server/level/ServerLevel;ZZ)I a
	tryToSpawnLlamaFor (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/npc/WanderingTrader;I)V a
net/minecraft/world/entity/player/Abilities bfq
	flying b
	flyingSpeed f
	instabuild d
	invulnerable a
	mayBuild e
	mayfly c
	walkingSpeed g
	addSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	getFlyingSpeed ()F a
	getWalkingSpeed ()F b
	loadSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	setFlyingSpeed (F)V a
	setWalkingSpeed (F)V b
net/minecraft/world/entity/player/ChatVisiblity bfr
	$VALUES g
	BY_ID d
	FULL a
	HIDDEN c
	SYSTEM b
	id e
	key f
	byId (I)Lnet/minecraft/world/entity/player/ChatVisiblity; a
	getId ()I a
	getKey ()Ljava/lang/String; b
net/minecraft/world/entity/player/Inventory bfs
	armor b
	carried g
	compartments f
	items a
	offhand c
	player e
	selected d
	timesChanged h
	add (ILnet/minecraft/world/item/ItemStack;)Z c
	add (Lnet/minecraft/world/item/ItemStack;)Z e
	addResource (ILnet/minecraft/world/item/ItemStack;)I d
	addResource (Lnet/minecraft/world/item/ItemStack;)I i
	clearContent ()V Y_
	clearOrCountMatchingItems (Ljava/util/function/Predicate;ILnet/minecraft/world/Container;)I a
	contains (Lnet/minecraft/tags/Tag;)Z a
	contains (Lnet/minecraft/world/item/ItemStack;)Z h
	dropAll ()V k
	fillStackedContents (Lnet/minecraft/world/entity/player/StackedContents;)V a
	findSlotMatchingItem (Lnet/minecraft/world/item/ItemStack;)I b
	findSlotMatchingUnusedItem (Lnet/minecraft/world/item/ItemStack;)I c
	getArmor (I)Lnet/minecraft/world/item/ItemStack; e
	getCarried ()Lnet/minecraft/world/item/ItemStack; m
	getContainerSize ()I Z_
	getDestroySpeed (Lnet/minecraft/world/level/block/state/BlockState;)F a
	getFreeSlot ()I h
	getItem (I)Lnet/minecraft/world/item/ItemStack; a
	getName ()Lnet/minecraft/network/chat/Component; Q
	getSelected ()Lnet/minecraft/world/item/ItemStack; f
	getSelectionSize ()I g
	getSlotWithRemainingSpace (Lnet/minecraft/world/item/ItemStack;)I d
	getSuitableHotbarSlot ()I i
	getTimesChanged ()I l
	hasRemainingSpaceForItem (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/item/ItemStack;)Z a
	hurtArmor (Lnet/minecraft/world/damagesource/DamageSource;F)V a
	isEmpty ()Z c
	isHotbarSlot (I)Z d
	isSameItem (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/item/ItemStack;)Z b
	load (Lnet/minecraft/nbt/ListTag;)V b
	pickSlot (I)V c
	placeItemBackInInventory (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/item/ItemStack;)V a
	removeItem (II)Lnet/minecraft/world/item/ItemStack; a
	removeItem (Lnet/minecraft/world/item/ItemStack;)V f
	removeItemNoUpdate (I)Lnet/minecraft/world/item/ItemStack; b
	replaceWith (Lnet/minecraft/world/entity/player/Inventory;)V a
	save (Lnet/minecraft/nbt/ListTag;)Lnet/minecraft/nbt/ListTag; a
	setCarried (Lnet/minecraft/world/item/ItemStack;)V g
	setChanged ()V X_
	setItem (ILnet/minecraft/world/item/ItemStack;)V a
	setPickedItem (Lnet/minecraft/world/item/ItemStack;)V a
	stillValid (Lnet/minecraft/world/entity/player/Player;)Z a
	swapPaint (D)V a
	tick ()V j
net/minecraft/world/entity/player/Player bft
	DATA_PLAYER_ABSORPTION_ID c
	DATA_PLAYER_MAIN_HAND bj
	DATA_PLAYER_MODE_CUSTOMISATION bi
	DATA_SCORE_ID d
	DATA_SHOULDER_LEFT bk
	DATA_SHOULDER_RIGHT bl
	POSES b
	STANDING_DIMENSIONS bh
	abilities bC
	bob bt
	containerMenu bp
	cooldowns bM
	defaultFlySpeed bH
	enchantmentSeed bG
	enderChestInventory bn
	experienceLevel bD
	experienceProgress bF
	fishing bI
	foodData bq
	gameProfile bJ
	inventory bm
	inventoryMenu bo
	jumpTriggerTime br
	lastItemInMainHand bL
	lastLevelUpTime g
	oBob bs
	reducedDebugInfo bK
	sleepCounter f
	takeXpDelay bu
	timeEntitySatOnShoulder e
	totalExperience bE
	wasUnderwater bB
	xCloak by
	xCloakO bv
	yCloak bz
	yCloakO bw
	zCloak bA
	zCloakO bx
	actuallyHurt (Lnet/minecraft/world/damagesource/DamageSource;F)V e
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	addItem (Lnet/minecraft/world/item/ItemStack;)Z g
	addParticlesAroundSelf (Lnet/minecraft/core/particles/ParticleOptions;)V a
	aiStep ()V k
	attack (Lnet/minecraft/world/entity/Entity;)V f
	awardRecipes (Ljava/util/Collection;)I a
	awardRecipesByKey ([Lnet/minecraft/resources/ResourceLocation;)V a
	awardStat (Lnet/minecraft/resources/ResourceLocation;)V a
	awardStat (Lnet/minecraft/resources/ResourceLocation;I)V a
	awardStat (Lnet/minecraft/stats/Stat;)V b
	awardStat (Lnet/minecraft/stats/Stat;I)V a
	blockActionRestricted (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/GameType;)Z a
	blockUsingShield (Lnet/minecraft/world/entity/LivingEntity;)V d
	canEat (Z)Z q
	canHarmPlayer (Lnet/minecraft/world/entity/player/Player;)Z a
	canTakeItem (Lnet/minecraft/world/item/ItemStack;)Z e
	canUseGameMasterBlocks ()Z eU
	causeFallDamage (FF)Z b
	causeFoodExhaustion (F)V t
	checkMovementStatistics (DDD)V p
	checkRidingStatistics (DDD)V q
	closeContainer ()V m
	createAttributes ()Lnet/minecraft/world/entity/ai/attributes/AttributeSupplier$Builder; eo
	createItemCooldowns ()Lnet/minecraft/world/item/ItemCooldowns; i
	createPlayerUUID (Lcom/mojang/authlib/GameProfile;)Ljava/util/UUID; a
	createPlayerUUID (Ljava/lang/String;)Ljava/util/UUID; c
	crit (Lnet/minecraft/world/entity/Entity;)V a
	decorateDisplayNameComponent (Lnet/minecraft/network/chat/MutableComponent;)Lnet/minecraft/network/chat/MutableComponent; a
	defineSynchedData ()V e
	destroyVanishingCursedItems ()V ev
	die (Lnet/minecraft/world/damagesource/DamageSource;)V a
	disableShield (Z)V p
	displayClientMessage (Lnet/minecraft/network/chat/Component;Z)V a
	doAutoAttackOnTouch (Lnet/minecraft/world/entity/LivingEntity;)V g
	doWaterSplashEffect ()V aL
	drop (Lnet/minecraft/world/item/ItemStack;Z)Lnet/minecraft/world/entity/item/ItemEntity; a
	drop (Lnet/minecraft/world/item/ItemStack;ZZ)Lnet/minecraft/world/entity/item/ItemEntity; a
	drop (Z)Z a
	dropEquipment ()V dm
	eat (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/item/ItemStack;)Lnet/minecraft/world/item/ItemStack; a
	findRespawnPositionAndUseSpawnBlock (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;FZZ)Ljava/util/Optional; a
	freeAt (Lnet/minecraft/core/BlockPos;)Z f
	getAbsorptionAmount ()F dS
	getArmorSlots ()Ljava/lang/Iterable; bn
	getAttackStrengthScale (F)F u
	getBlockSpeedFactor ()F aq
	getCooldowns ()Lnet/minecraft/world/item/ItemCooldowns; eS
	getCurrentItemAttackStrengthDelay ()F eQ
	getDeathSound ()Lnet/minecraft/sounds/SoundEvent; dp
	getDestroySpeed (Lnet/minecraft/world/level/block/state/BlockState;)F c
	getDimensionChangingDelay ()I bk
	getDimensions (Lnet/minecraft/world/entity/Pose;)Lnet/minecraft/world/entity/EntityDimensions; a
	getDismountPoses ()Lcom/google/common/collect/ImmutableList; ei
	getDisplayName ()Lnet/minecraft/network/chat/Component; d
	getEnchantmentSeed ()I eF
	getEnderChestInventory ()Lnet/minecraft/world/inventory/PlayerEnderChestContainer; eK
	getExperienceReward (Lnet/minecraft/world/entity/player/Player;)I d
	getFallDamageSound (I)Lnet/minecraft/sounds/SoundEvent; o
	getFireImmuneTicks ()I cu
	getFoodData ()Lnet/minecraft/world/food/FoodData; eH
	getGameProfile ()Lcom/mojang/authlib/GameProfile; ez
	getHandSlots ()Ljava/lang/Iterable; bm
	getHurtSound (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEvent; e
	getItemBySlot (Lnet/minecraft/world/entity/EquipmentSlot;)Lnet/minecraft/world/item/ItemStack; b
	getLuck ()F eT
	getMainArm ()Lnet/minecraft/world/entity/HumanoidArm; dU
	getMyRidingOffset ()D ba
	getName ()Lnet/minecraft/network/chat/Component; Q
	getPortalWaitTime ()I ai
	getProjectile (Lnet/minecraft/world/item/ItemStack;)Lnet/minecraft/world/item/ItemStack; f
	getRopeHoldPosition (F)Lnet/minecraft/world/phys/Vec3; o
	getScore ()I eu
	getScoreboard ()Lnet/minecraft/world/scores/Scoreboard; eM
	getScoreboardName ()Ljava/lang/String; bT
	getShoulderEntityLeft ()Lnet/minecraft/nbt/CompoundTag; eO
	getShoulderEntityRight ()Lnet/minecraft/nbt/CompoundTag; eP
	getSleepTimer ()I eB
	getSoundSource ()Lnet/minecraft/sounds/SoundSource; ct
	getSpeed ()F dM
	getStandingEyeHeight (Lnet/minecraft/world/entity/Pose;Lnet/minecraft/world/entity/EntityDimensions;)F b
	getSwimHighSpeedSplashSound ()Lnet/minecraft/sounds/SoundEvent; aw
	getSwimSound ()Lnet/minecraft/sounds/SoundEvent; au
	getSwimSplashSound ()Lnet/minecraft/sounds/SoundEvent; av
	getXpNeededForNextLevel ()I eG
	giveExperienceLevels (I)V c
	giveExperiencePoints (I)V d
	handleEntityEvent (B)V a
	hasCorrectToolForDrops (Lnet/minecraft/world/level/block/state/BlockState;)Z d
	hurt (Lnet/minecraft/world/damagesource/DamageSource;F)Z a
	hurtArmor (Lnet/minecraft/world/damagesource/DamageSource;F)V b
	hurtCurrentlyUsedShield (F)V p
	increaseScore (I)V t
	interactOn (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResult; a
	isAboveGround ()Z q
	isAffectedByFluids ()Z cS
	isAlwaysExperienceDropper ()Z cW
	isCreative ()Z b_
	isHurt ()Z eI
	isImmobile ()Z dH
	isInvulnerableTo (Lnet/minecraft/world/damagesource/DamageSource;)Z b
	isLocalPlayer ()Z ey
	isModelPartShown (Lnet/minecraft/world/entity/player/PlayerModelPart;)Z a
	isMovementNoisy ()Z aB
	isPushedByFluid ()Z bU
	isReducedDebugInfo ()Z eN
	isSecondaryUseActive ()Z ep
	isSleepingLongEnough ()Z eA
	isSpectator ()Z a_
	isStayingOnGroundSurface ()Z er
	isSwimming ()Z bA
	jumpFromGround ()V dJ
	killed (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)V a
	magicCrit (Lnet/minecraft/world/entity/Entity;)V b
	makeStuckInBlock (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/phys/Vec3;)V a
	mayBuild ()Z eJ
	mayUseItemAt (Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;Lnet/minecraft/world/item/ItemStack;)Z a
	maybeBackOffFromEdge (Lnet/minecraft/world/phys/Vec3;Lnet/minecraft/world/entity/MoverType;)Lnet/minecraft/world/phys/Vec3; a
	moveCloak ()V p
	onEnchantmentPerformed (Lnet/minecraft/world/item/ItemStack;I)V a
	onSoulSpeedBlock ()Z cO
	onUpdateAbilities ()V t
	openCommandBlock (Lnet/minecraft/world/level/block/entity/CommandBlockEntity;)V a
	openHorseInventory (Lnet/minecraft/world/entity/animal/horse/AbstractHorse;Lnet/minecraft/world/Container;)V a
	openItemGui (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/InteractionHand;)V a
	openJigsawBlock (Lnet/minecraft/world/level/block/entity/JigsawBlockEntity;)V a
	openMenu (Lnet/minecraft/world/MenuProvider;)Ljava/util/OptionalInt; a
	openMinecartCommandBlock (Lnet/minecraft/world/level/BaseCommandBlock;)V a
	openStructureBlock (Lnet/minecraft/world/level/block/entity/StructureBlockEntity;)V a
	openTextEdit (Lnet/minecraft/world/level/block/entity/SignBlockEntity;)V a
	playNotifySound (Lnet/minecraft/sounds/SoundEvent;Lnet/minecraft/sounds/SoundSource;FF)V a
	playShoulderEntityAmbientSound (Lnet/minecraft/nbt/CompoundTag;)V j
	playSound (Lnet/minecraft/sounds/SoundEvent;FF)V a
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	remove ()V ac
	removeEntitiesOnShoulder ()V eL
	removeVehicle ()V be
	resetAttackStrengthTicker ()V eR
	resetPos ()V ab
	resetRecipes (Ljava/util/Collection;)I b
	resetStat (Lnet/minecraft/stats/Stat;)V a
	respawn ()V ex
	respawnEntityOnShoulder (Lnet/minecraft/nbt/CompoundTag;)V k
	rideTick ()V aZ
	sendMerchantOffers (ILnet/minecraft/world/item/trading/MerchantOffers;IIZZ)V a
	serverAiStep ()V dO
	setAbsorptionAmount (F)V s
	setEntityOnShoulder (Lnet/minecraft/nbt/CompoundTag;)Z g
	setGameMode (Lnet/minecraft/world/level/GameType;)V a
	setItemSlot (Lnet/minecraft/world/entity/EquipmentSlot;Lnet/minecraft/world/item/ItemStack;)V a
	setMainArm (Lnet/minecraft/world/entity/HumanoidArm;)V a
	setReducedDebugInfo (Z)V r
	setRemainingFireTicks (I)V g
	setScore (I)V s
	setShoulderEntityLeft (Lnet/minecraft/nbt/CompoundTag;)V h
	setShoulderEntityRight (Lnet/minecraft/nbt/CompoundTag;)V i
	setSlot (ILnet/minecraft/world/item/ItemStack;)Z a_
	shouldRemoveSoulSpeed (Lnet/minecraft/world/level/block/state/BlockState;)Z b
	shouldShowName ()Z bX
	startFallFlying ()V eD
	startSleepInBed (Lnet/minecraft/core/BlockPos;)Lcom/mojang/datafixers/util/Either; a
	stopFallFlying ()V eE
	stopSleepInBed (ZZ)V a
	stopSleeping ()V em
	sweepAttack ()V ew
	tick ()V j
	touch (Lnet/minecraft/world/entity/Entity;)V c
	travel (Lnet/minecraft/world/phys/Vec3;)V g
	tryToStartFallFlying ()Z eC
	turtleHelmetTick ()V o
	updateIsUnderwater ()Z es
	updatePlayerPose ()V et
	updateSwimming ()V aI
	wantsToStopRiding ()Z eq
net/minecraft/world/entity/player/Player$BedSleepingProblem bft$a
	$VALUES h
	NOT_POSSIBLE_HERE a
	NOT_POSSIBLE_NOW b
	NOT_SAFE f
	OBSTRUCTED d
	OTHER_PROBLEM e
	TOO_FAR_AWAY c
	message g
	getMessage ()Lnet/minecraft/network/chat/Component; a
net/minecraft/world/entity/player/PlayerModelPart bfu
	$VALUES l
	CAPE a
	HAT g
	JACKET b
	LEFT_PANTS_LEG e
	LEFT_SLEEVE c
	RIGHT_PANTS_LEG f
	RIGHT_SLEEVE d
	bit h
	id j
	mask i
	name k
	getBit ()I b
	getId ()Ljava/lang/String; c
	getMask ()I a
	getName ()Lnet/minecraft/network/chat/Component; d
net/minecraft/world/entity/player/StackedContents bfv
	contents a
	accountSimpleStack (Lnet/minecraft/world/item/ItemStack;)V a
	accountStack (Lnet/minecraft/world/item/ItemStack;)V b
	accountStack (Lnet/minecraft/world/item/ItemStack;I)V a
	canCraft (Lnet/minecraft/world/item/crafting/Recipe;Lit/unimi/dsi/fastutil/ints/IntList;)Z a
	canCraft (Lnet/minecraft/world/item/crafting/Recipe;Lit/unimi/dsi/fastutil/ints/IntList;I)Z a
	clear ()V a
	fromStackingIndex (I)Lnet/minecraft/world/item/ItemStack; a
	getBiggestCraftableStack (Lnet/minecraft/world/item/crafting/Recipe;ILit/unimi/dsi/fastutil/ints/IntList;)I a
	getBiggestCraftableStack (Lnet/minecraft/world/item/crafting/Recipe;Lit/unimi/dsi/fastutil/ints/IntList;)I b
	getStackingIndex (Lnet/minecraft/world/item/ItemStack;)I c
	has (I)Z b
	put (II)V b
	take (II)I a
net/minecraft/world/entity/player/StackedContents$RecipePicker bfv$a
	data g
	ingredientCount d
	ingredients c
	itemCount f
	items e
	path h
	recipe b
	dfs (I)Z a
	getIndex (ZII)I d
	getMinIngredientCount ()I b
	getSatisfiedIndex (I)I d
	getUniqueAvailableIngredientItems ()[I a
	getVisitedIndex (ZI)I c
	hasConnection (ZII)Z a
	hasResidual (ZII)Z b
	hasVisited (ZI)Z b
	isSatisfied (I)Z b
	setSatisfied (I)V c
	toggleResidual (ZII)V c
	tryPick (ILit/unimi/dsi/fastutil/ints/IntList;)Z a
	tryPickAll (ILit/unimi/dsi/fastutil/ints/IntList;)I b
	visit (ZI)V a
net/minecraft/world/entity/projectile/AbstractArrow bfx
	ID_FLAGS f
	PIERCE_LEVEL g
	baseDamage ai
	inGround b
	inGroundTime c
	knockback aj
	lastState ag
	life ah
	pickup d
	piercedAndKilledEntities am
	piercingIgnoreEntityIds al
	shakeTime e
	soundEvent ak
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	canHitEntity (Lnet/minecraft/world/entity/Entity;)Z a
	defineSynchedData ()V e
	doPostHurtEffects (Lnet/minecraft/world/entity/LivingEntity;)V a
	findHitEntity (Lnet/minecraft/world/phys/Vec3;Lnet/minecraft/world/phys/Vec3;)Lnet/minecraft/world/phys/EntityHitResult; a
	getAddEntityPacket ()Lnet/minecraft/network/protocol/Packet; P
	getBaseDamage ()D n
	getDefaultHitGroundSoundEvent ()Lnet/minecraft/sounds/SoundEvent; i
	getEyeHeight (Lnet/minecraft/world/entity/Pose;Lnet/minecraft/world/entity/EntityDimensions;)F a
	getHitGroundSoundEvent ()Lnet/minecraft/sounds/SoundEvent; k
	getKnockback ()I o
	getPickupItem ()Lnet/minecraft/world/item/ItemStack; m
	getPierceLevel ()B r
	getWaterInertia ()F s
	isAttackable ()Z bK
	isCritArrow ()Z p
	isInGround ()Z g
	isMovementNoisy ()Z aB
	isNoPhysics ()Z t
	lerpMotion (DDD)V k
	lerpTo (DDDFFIZ)V a
	move (Lnet/minecraft/world/entity/MoverType;Lnet/minecraft/world/phys/Vec3;)V a
	onHitBlock (Lnet/minecraft/world/phys/BlockHitResult;)V a
	onHitEntity (Lnet/minecraft/world/phys/EntityHitResult;)V a
	playerTouch (Lnet/minecraft/world/entity/player/Player;)V a_
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	resetPiercedEntities ()V A
	setBaseDamage (D)V h
	setCritArrow (Z)V a
	setEnchantmentEffectsFromEntity (Lnet/minecraft/world/entity/LivingEntity;F)V a
	setFlag (IZ)V a
	setKnockback (I)V a
	setNoPhysics (Z)V o
	setOwner (Lnet/minecraft/world/entity/Entity;)V b
	setPierceLevel (B)V b
	setShotFromCrossbow (Z)V p
	setSoundEvent (Lnet/minecraft/sounds/SoundEvent;)V a
	shoot (DDDFF)V c
	shotFromCrossbow ()Z q
	shouldFall ()Z u
	shouldRenderAtSqrDistance (D)Z a
	startFalling ()V z
	tick ()V j
	tickDespawn ()V h
net/minecraft/world/entity/projectile/AbstractArrow$Pickup bfx$a
	$VALUES d
	ALLOWED b
	CREATIVE_ONLY c
	DISALLOWED a
	byOrdinal (I)Lnet/minecraft/world/entity/projectile/AbstractArrow$Pickup; a
net/minecraft/world/entity/projectile/AbstractHurtingProjectile bfy
	xPower b
	yPower c
	zPower d
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	canHitEntity (Lnet/minecraft/world/entity/Entity;)Z a
	defineSynchedData ()V e
	getAddEntityPacket ()Lnet/minecraft/network/protocol/Packet; P
	getBrightness ()F aQ
	getInertia ()F i
	getPickRadius ()F bf
	getTrailParticle ()Lnet/minecraft/core/particles/ParticleOptions; h
	hurt (Lnet/minecraft/world/damagesource/DamageSource;F)Z a
	isPickable ()Z aS
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	shouldBurn ()Z W_
	shouldRenderAtSqrDistance (D)Z a
	tick ()V j
net/minecraft/world/entity/projectile/Arrow bfz
	ID_EFFECT_COLOR f
	effects ag
	fixedColor ah
	potion g
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	addEffect (Lnet/minecraft/world/effect/MobEffectInstance;)V a
	defineSynchedData ()V e
	doPostHurtEffects (Lnet/minecraft/world/entity/LivingEntity;)V a
	getColor ()I u
	getCustomColor (Lnet/minecraft/world/item/ItemStack;)I c
	getPickupItem ()Lnet/minecraft/world/item/ItemStack; m
	handleEntityEvent (B)V a
	makeParticle (I)V b
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	setEffectsFromItem (Lnet/minecraft/world/item/ItemStack;)V b
	setFixedColor (I)V c
	tick ()V j
	updateColor ()V z
net/minecraft/world/entity/projectile/DragonFireball bga
	getTrailParticle ()Lnet/minecraft/core/particles/ParticleOptions; h
	hurt (Lnet/minecraft/world/damagesource/DamageSource;F)Z a
	isPickable ()Z aS
	onHit (Lnet/minecraft/world/phys/HitResult;)V a
	shouldBurn ()Z W_
net/minecraft/world/entity/projectile/EvokerFangs bgb
	clientSideAttackStarted e
	lifeTicks d
	owner f
	ownerUUID g
	sentSpikeEvent c
	warmupDelayTicks b
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	dealDamageTo (Lnet/minecraft/world/entity/LivingEntity;)V c
	defineSynchedData ()V e
	getAddEntityPacket ()Lnet/minecraft/network/protocol/Packet; P
	getAnimationProgress (F)F a
	getOwner ()Lnet/minecraft/world/entity/LivingEntity; g
	handleEntityEvent (B)V a
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	setOwner (Lnet/minecraft/world/entity/LivingEntity;)V a
	tick ()V j
net/minecraft/world/entity/projectile/EyeOfEnder bgc
	DATA_ITEM_STACK b
	life f
	surviveAfterDeath g
	tx c
	ty d
	tz e
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	defineSynchedData ()V e
	getAddEntityPacket ()Lnet/minecraft/network/protocol/Packet; P
	getBrightness ()F aQ
	getItem ()Lnet/minecraft/world/item/ItemStack; g
	getItemRaw ()Lnet/minecraft/world/item/ItemStack; h
	isAttackable ()Z bK
	lerpMotion (DDD)V k
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	setItem (Lnet/minecraft/world/item/ItemStack;)V b
	shouldRenderAtSqrDistance (D)Z a
	signalTo (Lnet/minecraft/core/BlockPos;)V a
	tick ()V j
net/minecraft/world/entity/projectile/Fireball bgd
	DATA_ITEM_STACK e
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	defineSynchedData ()V e
	getItem ()Lnet/minecraft/world/item/ItemStack; g
	getItemRaw ()Lnet/minecraft/world/item/ItemStack; k
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	setItem (Lnet/minecraft/world/item/ItemStack;)V b
net/minecraft/world/entity/projectile/FireworkRocketEntity bge
	DATA_ATTACHED_TO_TARGET c
	DATA_ID_FIREWORKS_ITEM b
	DATA_SHOT_AT_ANGLE d
	attachedToEntity g
	life e
	lifetime f
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	dealExplosionDamage ()V m
	defineSynchedData ()V e
	explode ()V i
	getAddEntityPacket ()Lnet/minecraft/network/protocol/Packet; P
	getItem ()Lnet/minecraft/world/item/ItemStack; g
	handleEntityEvent (B)V a
	hasExplosion ()Z k
	isAttachedToEntity ()Z n
	isAttackable ()Z bK
	isShotAtAngle ()Z h
	onHitBlock (Lnet/minecraft/world/phys/BlockHitResult;)V a
	onHitEntity (Lnet/minecraft/world/phys/EntityHitResult;)V a
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	shouldRender (DDD)Z j
	shouldRenderAtSqrDistance (D)Z a
	tick ()V j
net/minecraft/world/entity/projectile/FishingHook bgf
	DATA_BITING f
	DATA_HOOKED_ENTITY e
	biting c
	currentState am
	fishAngle aj
	hookedIn al
	life g
	luck an
	lureSpeed ao
	nibble ag
	openWater ak
	outOfWaterTime d
	syncronizedRandom b
	timeUntilHooked ai
	timeUntilLured ah
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	bringInHookedEntity ()V h
	calculateOpenWater (Lnet/minecraft/core/BlockPos;)Z b
	canChangeDimensions ()Z bN
	canHitEntity (Lnet/minecraft/world/entity/Entity;)Z a
	catchingFish (Lnet/minecraft/core/BlockPos;)V a
	checkCollision ()V m
	defineSynchedData ()V e
	getAddEntityPacket ()Lnet/minecraft/network/protocol/Packet; P
	getHookedIn ()Lnet/minecraft/world/entity/Entity; k
	getOpenWaterTypeForArea (Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/entity/projectile/FishingHook$OpenWaterType; a
	getOpenWaterTypeForBlock (Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/entity/projectile/FishingHook$OpenWaterType; c
	getPlayerOwner ()Lnet/minecraft/world/entity/player/Player; i
	handleEntityEvent (B)V a
	isMovementNoisy ()Z aB
	isOpenWaterFishing ()Z g
	lerpTo (DDDFFIZ)V a
	onHitBlock (Lnet/minecraft/world/phys/BlockHitResult;)V a
	onHitEntity (Lnet/minecraft/world/phys/EntityHitResult;)V a
	onSyncedDataUpdated (Lnet/minecraft/network/syncher/EntityDataAccessor;)V a
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	remove ()V ac
	retrieve (Lnet/minecraft/world/item/ItemStack;)I b
	setHookedEntity ()V n
	shouldRenderAtSqrDistance (D)Z a
	shouldStopFishing (Lnet/minecraft/world/entity/player/Player;)Z a
	tick ()V j
net/minecraft/world/entity/projectile/FishingHook$FishHookState bgf$a
	$VALUES d
	BOBBING c
	FLYING a
	HOOKED_IN_ENTITY b
net/minecraft/world/entity/projectile/FishingHook$OpenWaterType bgf$b
	$VALUES d
	ABOVE_WATER a
	INSIDE_WATER b
	INVALID c
net/minecraft/world/entity/projectile/ItemSupplier bgg
	getItem ()Lnet/minecraft/world/item/ItemStack; g
net/minecraft/world/entity/projectile/LargeFireball bgh
	explosionPower e
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	onHit (Lnet/minecraft/world/phys/HitResult;)V a
	onHitEntity (Lnet/minecraft/world/phys/EntityHitResult;)V a
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
net/minecraft/world/entity/projectile/LlamaSpit bgi
	defineSynchedData ()V e
	getAddEntityPacket ()Lnet/minecraft/network/protocol/Packet; P
	onHitBlock (Lnet/minecraft/world/phys/BlockHitResult;)V a
	onHitEntity (Lnet/minecraft/world/phys/EntityHitResult;)V a
	tick ()V j
net/minecraft/world/entity/projectile/Projectile bgj
	leftOwner d
	ownerNetworkId c
	ownerUUID b
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	canHitEntity (Lnet/minecraft/world/entity/Entity;)Z a
	checkLeftOwner ()Z h
	getOwner ()Lnet/minecraft/world/entity/Entity; v
	lerpMotion (DDD)V k
	lerpRotation (FF)F e
	onHit (Lnet/minecraft/world/phys/HitResult;)V a
	onHitBlock (Lnet/minecraft/world/phys/BlockHitResult;)V a
	onHitEntity (Lnet/minecraft/world/phys/EntityHitResult;)V a
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	setOwner (Lnet/minecraft/world/entity/Entity;)V b
	shoot (DDDFF)V c
	shootFromRotation (Lnet/minecraft/world/entity/Entity;FFFFF)V a
	tick ()V j
	updateRotation ()V x
net/minecraft/world/entity/projectile/ProjectileUtil bgk
	getEntityHitResult (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/phys/Vec3;Lnet/minecraft/world/phys/Vec3;Lnet/minecraft/world/phys/AABB;Ljava/util/function/Predicate;D)Lnet/minecraft/world/phys/EntityHitResult; a
	getEntityHitResult (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/phys/Vec3;Lnet/minecraft/world/phys/Vec3;Lnet/minecraft/world/phys/AABB;Ljava/util/function/Predicate;)Lnet/minecraft/world/phys/EntityHitResult; a
	getHitResult (Lnet/minecraft/world/entity/Entity;Ljava/util/function/Predicate;)Lnet/minecraft/world/phys/HitResult; a
	getMobArrow (Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/item/ItemStack;F)Lnet/minecraft/world/entity/projectile/AbstractArrow; a
	getWeaponHoldingHand (Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/item/Item;)Lnet/minecraft/world/InteractionHand; a
	rotateTowardsMovement (Lnet/minecraft/world/entity/Entity;F)V a
net/minecraft/world/entity/projectile/ShulkerBullet bgl
	currentMoveDirection c
	finalTarget b
	flightSteps d
	targetDeltaX e
	targetDeltaY f
	targetDeltaZ g
	targetId ag
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	canHitEntity (Lnet/minecraft/world/entity/Entity;)Z a
	checkDespawn ()V cH
	defineSynchedData ()V e
	getAddEntityPacket ()Lnet/minecraft/network/protocol/Packet; P
	getBrightness ()F aQ
	getMoveDirection ()Lnet/minecraft/core/Direction; g
	getSoundSource ()Lnet/minecraft/sounds/SoundSource; ct
	hurt (Lnet/minecraft/world/damagesource/DamageSource;F)Z a
	isOnFire ()Z bp
	isPickable ()Z aS
	onHit (Lnet/minecraft/world/phys/HitResult;)V a
	onHitBlock (Lnet/minecraft/world/phys/BlockHitResult;)V a
	onHitEntity (Lnet/minecraft/world/phys/EntityHitResult;)V a
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	selectNextMoveDirection (Lnet/minecraft/core/Direction$Axis;)V a
	setMoveDirection (Lnet/minecraft/core/Direction;)V a
	shouldRenderAtSqrDistance (D)Z a
	tick ()V j
net/minecraft/world/entity/projectile/SmallFireball bgm
	hurt (Lnet/minecraft/world/damagesource/DamageSource;F)Z a
	isPickable ()Z aS
	onHit (Lnet/minecraft/world/phys/HitResult;)V a
	onHitBlock (Lnet/minecraft/world/phys/BlockHitResult;)V a
	onHitEntity (Lnet/minecraft/world/phys/EntityHitResult;)V a
net/minecraft/world/entity/projectile/Snowball bgn
	getDefaultItem ()Lnet/minecraft/world/item/Item; h
	getParticle ()Lnet/minecraft/core/particles/ParticleOptions; m
	handleEntityEvent (B)V a
	onHit (Lnet/minecraft/world/phys/HitResult;)V a
	onHitEntity (Lnet/minecraft/world/phys/EntityHitResult;)V a
net/minecraft/world/entity/projectile/SpectralArrow bgo
	duration f
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	doPostHurtEffects (Lnet/minecraft/world/entity/LivingEntity;)V a
	getPickupItem ()Lnet/minecraft/world/item/ItemStack; m
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	tick ()V j
net/minecraft/world/entity/projectile/ThrowableItemProjectile bgp
	DATA_ITEM_STACK b
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	defineSynchedData ()V e
	getDefaultItem ()Lnet/minecraft/world/item/Item; h
	getItem ()Lnet/minecraft/world/item/ItemStack; g
	getItemRaw ()Lnet/minecraft/world/item/ItemStack; i
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	setItem (Lnet/minecraft/world/item/ItemStack;)V b
net/minecraft/world/entity/projectile/ThrowableProjectile bgq
	getAddEntityPacket ()Lnet/minecraft/network/protocol/Packet; P
	getGravity ()F k
	shouldRenderAtSqrDistance (D)Z a
	tick ()V j
net/minecraft/world/entity/projectile/ThrownEgg bgr
	getDefaultItem ()Lnet/minecraft/world/item/Item; h
	handleEntityEvent (B)V a
	onHit (Lnet/minecraft/world/phys/HitResult;)V a
	onHitEntity (Lnet/minecraft/world/phys/EntityHitResult;)V a
net/minecraft/world/entity/projectile/ThrownEnderpearl bgs
	changeDimension (Lnet/minecraft/server/level/ServerLevel;)Lnet/minecraft/world/entity/Entity; b
	getDefaultItem ()Lnet/minecraft/world/item/Item; h
	onHit (Lnet/minecraft/world/phys/HitResult;)V a
	onHitEntity (Lnet/minecraft/world/phys/EntityHitResult;)V a
	tick ()V j
net/minecraft/world/entity/projectile/ThrownExperienceBottle bgt
	getDefaultItem ()Lnet/minecraft/world/item/Item; h
	getGravity ()F k
	onHit (Lnet/minecraft/world/phys/HitResult;)V a
net/minecraft/world/entity/projectile/ThrownPotion bgu
	WATER_SENSITIVE b
	applySplash (Ljava/util/List;Lnet/minecraft/world/entity/Entity;)V a
	applyWater ()V m
	dowseFire (Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;)V a
	getDefaultItem ()Lnet/minecraft/world/item/Item; h
	getGravity ()F k
	isLingering ()Z n
	makeAreaOfEffectCloud (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/item/alchemy/Potion;)V a
	onHit (Lnet/minecraft/world/phys/HitResult;)V a
	onHitBlock (Lnet/minecraft/world/phys/BlockHitResult;)V a
net/minecraft/world/entity/projectile/ThrownTrident bgv
	ID_FOIL ag
	ID_LOYALTY g
	clientSideReturnTridentTickCount f
	dealtDamage ai
	tridentItem ah
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	defineSynchedData ()V e
	findHitEntity (Lnet/minecraft/world/phys/Vec3;Lnet/minecraft/world/phys/Vec3;)Lnet/minecraft/world/phys/EntityHitResult; a
	getDefaultHitGroundSoundEvent ()Lnet/minecraft/sounds/SoundEvent; i
	getPickupItem ()Lnet/minecraft/world/item/ItemStack; m
	getWaterInertia ()F s
	isAcceptibleReturnOwner ()Z z
	isFoil ()Z u
	onHitEntity (Lnet/minecraft/world/phys/EntityHitResult;)V a
	playerTouch (Lnet/minecraft/world/entity/player/Player;)V a_
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	shouldRender (DDD)Z j
	tick ()V j
	tickDespawn ()V h
net/minecraft/world/entity/projectile/WitherSkull bgw
	DATA_DANGEROUS e
	defineSynchedData ()V e
	getBlockExplosionResistance (Lnet/minecraft/world/level/Explosion;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/material/FluidState;F)F a
	getInertia ()F i
	hurt (Lnet/minecraft/world/damagesource/DamageSource;F)Z a
	isDangerous ()Z k
	isOnFire ()Z bp
	isPickable ()Z aS
	onHit (Lnet/minecraft/world/phys/HitResult;)V a
	onHitEntity (Lnet/minecraft/world/phys/EntityHitResult;)V a
	setDangerous (Z)V a
	shouldBurn ()Z W_
net/minecraft/world/entity/raid/Raid bgy
	DEFEAT c
	RAID_BAR_DEFEAT_COMPONENT e
	RAID_BAR_VICTORY_COMPONENT d
	RAID_NAME_COMPONENT a
	VICTORY b
	active p
	badOmenLevel o
	celebrationTicks x
	center j
	groupRaiderMap g
	groupToLeaderMap f
	groupsSpawned q
	heroesOfTheVillage h
	id m
	level k
	numGroups v
	postRaidTicks s
	raidCooldownTicks t
	raidEvent r
	random u
	started l
	status w
	ticksActive i
	totalHealth n
	waveSpawnPos y
	absorbBadOmen (Lnet/minecraft/world/entity/player/Player;)V a
	addHeroOfTheVillage (Lnet/minecraft/world/entity/Entity;)V a
	addWaveMob (ILnet/minecraft/world/entity/raid/Raider;)Z b
	addWaveMob (ILnet/minecraft/world/entity/raid/Raider;Z)Z a
	findRandomSpawnPos (II)Lnet/minecraft/core/BlockPos; a
	getAllRaiders ()Ljava/util/Set; h
	getBadOmenLevel ()I m
	getCenter ()Lnet/minecraft/core/BlockPos; t
	getDefaultNumSpawns (Lnet/minecraft/world/entity/raid/Raid$RaiderType;IZ)I a
	getEnchantOdds ()F w
	getGroupsSpawned ()I k
	getHealthOfLivingRaiders ()F q
	getId ()I u
	getLeader (I)Lnet/minecraft/world/entity/raid/Raider; b
	getLeaderBannerInstance ()Lnet/minecraft/world/item/ItemStack; s
	getLevel ()Lnet/minecraft/world/level/Level; i
	getMaxBadOmenLevel ()I l
	getNumGroups (Lnet/minecraft/world/Difficulty;)I a
	getPotentialBonusSpawns (Lnet/minecraft/world/entity/raid/Raid$RaiderType;Ljava/util/Random;ILnet/minecraft/world/DifficultyInstance;Z)I a
	getTotalHealth ()F g
	getTotalRaidersAlive ()I r
	getValidSpawnPos (I)Ljava/util/Optional; d
	hasBonusWave ()Z C
	hasFirstWaveSpawned ()Z c
	hasMoreWaves ()Z A
	hasSpawnedBonusWave ()Z D
	isActive ()Z v
	isBetweenWaves ()Z b
	isFinalWave ()Z B
	isLoss ()Z f
	isOver ()Z a
	isStarted ()Z j
	isStopped ()Z d
	isVictory ()Z e
	joinRaid (ILnet/minecraft/world/entity/raid/Raider;Lnet/minecraft/core/BlockPos;Z)V a
	moveRaidCenterToNearbyVillageSection ()V z
	playSound (Lnet/minecraft/core/BlockPos;)V a
	removeFromRaid (Lnet/minecraft/world/entity/raid/Raider;Z)V a
	removeLeader (I)V c
	save (Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/nbt/CompoundTag; a
	setBadOmenLevel (I)V a
	setCenter (Lnet/minecraft/core/BlockPos;)V c
	setDirty ()V H
	setLeader (ILnet/minecraft/world/entity/raid/Raider;)V a
	shouldSpawnBonusGroup ()Z E
	shouldSpawnGroup ()Z G
	spawnGroup (Lnet/minecraft/core/BlockPos;)V b
	stop ()V n
	tick ()V o
	updateBossbar ()V p
	updatePlayers ()V y
	updateRaiders ()V F
	validPlayer ()Ljava/util/function/Predicate; x
net/minecraft/world/entity/raid/Raid$RaidStatus bgy$a
	$VALUES f
	LOSS c
	ONGOING a
	STOPPED d
	VALUES e
	VICTORY b
	getByName (Ljava/lang/String;)Lnet/minecraft/world/entity/raid/Raid$RaidStatus; b
	getName ()Ljava/lang/String; a
net/minecraft/world/entity/raid/Raid$RaiderType bgy$b
	$VALUES i
	EVOKER b
	PILLAGER c
	RAVAGER e
	VALUES f
	VINDICATOR a
	WITCH d
	entityType g
	spawnsPerWaveBeforeBonus h
net/minecraft/world/entity/raid/Raider bgz
	ALLOWED_ITEMS b
	IS_CELEBRATING c
	canJoinRaid bp
	raid d
	ticksOutsideRaid bq
	wave bo
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	aiStep ()V k
	applyRaidBuffs (IZ)V a
	canJoinPatrol ()Z eT
	canJoinRaid ()Z eZ
	defineSynchedData ()V e
	die (Lnet/minecraft/world/damagesource/DamageSource;)V a
	finalizeSpawn (Lnet/minecraft/world/level/ServerLevelAccessor;Lnet/minecraft/world/DifficultyInstance;Lnet/minecraft/world/entity/MobSpawnType;Lnet/minecraft/world/entity/SpawnGroupData;Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/world/entity/SpawnGroupData; a
	getCelebrateSound ()Lnet/minecraft/sounds/SoundEvent; eL
	getCurrentRaid ()Lnet/minecraft/world/entity/raid/Raid; fa
	getTicksOutsideRaid ()I fe
	getWave ()I fc
	hasActiveRaid ()Z fb
	hurt (Lnet/minecraft/world/damagesource/DamageSource;F)Z a
	isCelebrating ()Z fd
	pickUpItem (Lnet/minecraft/world/entity/item/ItemEntity;)V b
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	registerGoals ()V o
	removeWhenFarAway (D)Z h
	requiresCustomPersistence ()Z K
	setCanJoinRaid (Z)V w
	setCelebrating (Z)V x
	setCurrentRaid (Lnet/minecraft/world/entity/raid/Raid;)V a
	setTicksOutsideRaid (I)V b
	setWave (I)V a
	updateNoActionTime ()V eQ
net/minecraft/world/entity/raid/Raider$HoldGroundAttackGoal bgz$a
	hostileRadiusSqr d
	mob c
	shoutTargeting a
	canUse ()Z a
	start ()V c
	stop ()V d
	tick ()V e
net/minecraft/world/entity/raid/Raider$ObtainRaidLeaderBannerGoal bgz$b
	mob b
	canUse ()Z a
	tick ()V e
net/minecraft/world/entity/raid/Raider$RaiderCelebration bgz$c
	mob b
	canUse ()Z a
	start ()V c
	stop ()V d
	tick ()V e
net/minecraft/world/entity/raid/Raider$RaiderMoveThroughVillageGoal bgz$d
	distanceToPoi e
	poiPos c
	raider a
	speedModifier b
	stuck f
	visited d
	canContinueToUse ()Z b
	canUse ()Z a
	hasNotVisited (Lnet/minecraft/core/BlockPos;)Z a
	hasSuitablePoi ()Z h
	isValidRaid ()Z g
	start ()V c
	stop ()V d
	tick ()V e
	updateVisited ()V j
net/minecraft/world/entity/raid/Raids bha
	level b
	nextAvailableID c
	raidMap a
	tick d
	canJoinRaid (Lnet/minecraft/world/entity/raid/Raider;Lnet/minecraft/world/entity/raid/Raid;)Z a
	createOrExtendRaid (Lnet/minecraft/server/level/ServerPlayer;)Lnet/minecraft/world/entity/raid/Raid; a
	get (I)Lnet/minecraft/world/entity/raid/Raid; a
	getFileId (Lnet/minecraft/world/level/dimension/DimensionType;)Ljava/lang/String; a
	getNearbyRaid (Lnet/minecraft/core/BlockPos;I)Lnet/minecraft/world/entity/raid/Raid; a
	getOrCreateRaid (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/entity/raid/Raid; a
	getUniqueId ()I e
	load (Lnet/minecraft/nbt/CompoundTag;)V a
	save (Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/nbt/CompoundTag; b
	tick ()V a
net/minecraft/world/entity/schedule/Activity bhc
	ADMIRE_ITEM m
	AVOID n
	CELEBRATE l
	CORE a
	FIGHT k
	HIDE j
	IDLE b
	MEET f
	PANIC g
	PLAY d
	PRE_RAID i
	RAID h
	REST e
	RIDE o
	WORK c
	hashCode q
	name p
	getName ()Ljava/lang/String; a
	register (Ljava/lang/String;)Lnet/minecraft/world/entity/schedule/Activity; a
net/minecraft/world/entity/schedule/Keyframe bhd
	timeStamp a
	value b
	getTimeStamp ()I a
	getValue ()F b
net/minecraft/world/entity/schedule/Schedule bhe
	EMPTY a
	SIMPLE b
	VILLAGER_BABY c
	VILLAGER_DEFAULT d
	timelines e
	ensureTimelineExistsFor (Lnet/minecraft/world/entity/schedule/Activity;)V a
	getActivityAt (I)Lnet/minecraft/world/entity/schedule/Activity; a
	getAllTimelinesExceptFor (Lnet/minecraft/world/entity/schedule/Activity;)Ljava/util/List; c
	getTimelineFor (Lnet/minecraft/world/entity/schedule/Activity;)Lnet/minecraft/world/entity/schedule/Timeline; b
	register (Ljava/lang/String;)Lnet/minecraft/world/entity/schedule/ScheduleBuilder; a
net/minecraft/world/entity/schedule/ScheduleBuilder bhf
	schedule a
	transitions b
	build ()Lnet/minecraft/world/entity/schedule/Schedule; a
	changeActivityAt (ILnet/minecraft/world/entity/schedule/Activity;)Lnet/minecraft/world/entity/schedule/ScheduleBuilder; a
net/minecraft/world/entity/schedule/ScheduleBuilder$ActivityTransition bhf$a
	activity b
	time a
	getActivity ()Lnet/minecraft/world/entity/schedule/Activity; b
	getTime ()I a
net/minecraft/world/entity/schedule/Timeline bhg
	keyframes a
	previousIndex b
	addKeyframe (IF)Lnet/minecraft/world/entity/schedule/Timeline; a
	addKeyframes (Ljava/util/Collection;)Lnet/minecraft/world/entity/schedule/Timeline; a
	getKeyframes ()Lcom/google/common/collect/ImmutableList; a
	getValueAt (I)F a
	sortAndDeduplicateKeyframes ()V b
net/minecraft/world/entity/vehicle/AbstractMinecart bhi
	DATA_ID_CUSTOM_DISPLAY g
	DATA_ID_DAMAGE d
	DATA_ID_DISPLAY_BLOCK e
	DATA_ID_DISPLAY_OFFSET f
	DATA_ID_HURT b
	DATA_ID_HURTDIR c
	EXITS ai
	POSE_DISMOUNT_HEIGHTS ag
	flipped ah
	lSteps aj
	lx ak
	lxd ap
	lxr ao
	ly al
	lyd aq
	lyr an
	lz am
	lzd ar
	activateMinecart (IIIZ)V a
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	animateHurt ()V bl
	applyNaturalSlowdown ()V i
	canCollideWith (Lnet/minecraft/world/entity/Entity;)Z j
	comeOffTrack ()V h
	createMinecart (Lnet/minecraft/world/level/Level;DDDLnet/minecraft/world/entity/vehicle/AbstractMinecart$Type;)Lnet/minecraft/world/entity/vehicle/AbstractMinecart; a
	defineSynchedData ()V e
	destroy (Lnet/minecraft/world/damagesource/DamageSource;)V a
	exits (Lnet/minecraft/world/level/block/state/properties/RailShape;)Lcom/mojang/datafixers/util/Pair; a
	getAddEntityPacket ()Lnet/minecraft/network/protocol/Packet; P
	getBlockSpeedFactor ()F aq
	getBoundingBoxForCulling ()Lnet/minecraft/world/phys/AABB; cc
	getDamage ()F k
	getDefaultDisplayBlockState ()Lnet/minecraft/world/level/block/state/BlockState; q
	getDefaultDisplayOffset ()I s
	getDismountLocationForPassenger (Lnet/minecraft/world/entity/LivingEntity;)Lnet/minecraft/world/phys/Vec3; b
	getDisplayBlockState ()Lnet/minecraft/world/level/block/state/BlockState; p
	getDisplayOffset ()I r
	getHurtDir ()I n
	getHurtTime ()I m
	getMaxSpeed ()D g
	getMinecartType ()Lnet/minecraft/world/entity/vehicle/AbstractMinecart$Type; o
	getMotionDirection ()Lnet/minecraft/core/Direction; bZ
	getPassengersRidingOffset ()D bb
	getPos (DDD)Lnet/minecraft/world/phys/Vec3; p
	getPosOffs (DDDD)Lnet/minecraft/world/phys/Vec3; a
	getRelativePortalPosition (Lnet/minecraft/core/Direction$Axis;Lnet/minecraft/BlockUtil$FoundRectangle;)Lnet/minecraft/world/phys/Vec3; a
	hasCustomDisplay ()Z t
	hurt (Lnet/minecraft/world/damagesource/DamageSource;F)Z a
	isMovementNoisy ()Z aB
	isPickable ()Z aS
	isPushable ()Z aT
	isRedstoneConductor (Lnet/minecraft/core/BlockPos;)Z a
	lerpMotion (DDD)V k
	lerpTo (DDDFFIZ)V a
	moveAlongTrack (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V c
	push (Lnet/minecraft/world/entity/Entity;)V i
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	setCustomDisplay (Z)V a
	setDamage (F)V a
	setDisplayBlockState (Lnet/minecraft/world/level/block/state/BlockState;)V b
	setDisplayOffset (I)V l
	setHurtDir (I)V d
	setHurtTime (I)V c
	tick ()V j
net/minecraft/world/entity/vehicle/AbstractMinecart$Type bhi$a
	$VALUES h
	CHEST b
	COMMAND_BLOCK g
	FURNACE c
	HOPPER f
	RIDEABLE a
	SPAWNER e
	TNT d
net/minecraft/world/entity/vehicle/AbstractMinecartContainer bhj
	dropEquipment c
	itemStacks b
	lootTable d
	lootTableSeed e
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	applyNaturalSlowdown ()V i
	changeDimension (Lnet/minecraft/server/level/ServerLevel;)Lnet/minecraft/world/entity/Entity; b
	clearContent ()V Y_
	createMenu (ILnet/minecraft/world/entity/player/Inventory;)Lnet/minecraft/world/inventory/AbstractContainerMenu; a
	destroy (Lnet/minecraft/world/damagesource/DamageSource;)V a
	getItem (I)Lnet/minecraft/world/item/ItemStack; a
	interact (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResult; a
	isEmpty ()Z c
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	remove ()V ac
	removeItem (II)Lnet/minecraft/world/item/ItemStack; a
	removeItemNoUpdate (I)Lnet/minecraft/world/item/ItemStack; b
	setChanged ()V X_
	setDropContainerContent (Z)V a_
	setItem (ILnet/minecraft/world/item/ItemStack;)V a
	setLootTable (Lnet/minecraft/resources/ResourceLocation;J)V a
	setSlot (ILnet/minecraft/world/item/ItemStack;)Z a_
	stillValid (Lnet/minecraft/world/entity/player/Player;)Z a
	unpackLootTable (Lnet/minecraft/world/entity/player/Player;)V d
net/minecraft/world/entity/vehicle/Boat bhk
	DATA_ID_BUBBLE_TIME ag
	DATA_ID_DAMAGE d
	DATA_ID_HURT b
	DATA_ID_HURTDIR c
	DATA_ID_PADDLE_LEFT f
	DATA_ID_PADDLE_RIGHT g
	DATA_ID_TYPE e
	bubbleAngle aD
	bubbleAngleO aE
	bubbleColumnDirectionIsDown aB
	bubbleMultiplier aC
	deltaRotation ak
	inputDown au
	inputLeft ar
	inputRight as
	inputUp at
	invFriction ai
	isAboveBubbleColumn aA
	landFriction aw
	lastYd az
	lerpSteps al
	lerpX am
	lerpXRot aq
	lerpY an
	lerpYRot ap
	lerpZ ao
	oldStatus ay
	outOfControlTicks aj
	paddlePositions ah
	status ax
	waterLevel av
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	animateHurt ()V bl
	canAddPassenger (Lnet/minecraft/world/entity/Entity;)Z q
	canBeCollidedWith ()Z aY
	canCollideWith (Lnet/minecraft/world/entity/Entity;)Z j
	canVehicleCollide (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/entity/Entity;)Z a
	checkFallDamage (DZLnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/BlockPos;)V a
	checkInWater ()Z t
	clampRotation (Lnet/minecraft/world/entity/Entity;)V a
	controlBoat ()V x
	defineSynchedData ()V e
	floatBoat ()V v
	getAddEntityPacket ()Lnet/minecraft/network/protocol/Packet; P
	getBoatType ()Lnet/minecraft/world/entity/vehicle/Boat$Type; p
	getBubbleAngle (F)F b
	getBubbleTime ()I z
	getControllingPassenger ()Lnet/minecraft/world/entity/Entity; cl
	getDamage ()F m
	getDismountLocationForPassenger (Lnet/minecraft/world/entity/LivingEntity;)Lnet/minecraft/world/phys/Vec3; b
	getDropItem ()Lnet/minecraft/world/item/Item; g
	getEyeHeight (Lnet/minecraft/world/entity/Pose;Lnet/minecraft/world/entity/EntityDimensions;)F a
	getGroundFriction ()F k
	getHurtDir ()I o
	getHurtTime ()I n
	getMotionDirection ()Lnet/minecraft/core/Direction; bZ
	getPaddleSound ()Lnet/minecraft/sounds/SoundEvent; h
	getPaddleState (I)Z a
	getPassengersRidingOffset ()D bb
	getRelativePortalPosition (Lnet/minecraft/core/Direction$Axis;Lnet/minecraft/BlockUtil$FoundRectangle;)Lnet/minecraft/world/phys/Vec3; a
	getRowingTime (IF)F a
	getStatus ()Lnet/minecraft/world/entity/vehicle/Boat$Status; s
	getWaterLevelAbove ()F i
	hurt (Lnet/minecraft/world/damagesource/DamageSource;F)Z a
	interact (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResult; a
	isMovementNoisy ()Z aB
	isPickable ()Z aS
	isPushable ()Z aT
	isUnderWater ()Z aH
	isUnderwater ()Lnet/minecraft/world/entity/vehicle/Boat$Status; u
	lerpTo (DDDFFIZ)V a
	onAboveBubbleCol (Z)V k
	onPassengerTurned (Lnet/minecraft/world/entity/Entity;)V l
	positionRider (Lnet/minecraft/world/entity/Entity;)V k
	push (Lnet/minecraft/world/entity/Entity;)V i
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	setBubbleTime (I)V d
	setDamage (F)V a
	setHurtDir (I)V c
	setHurtTime (I)V b
	setInput (ZZZZ)V a
	setPaddleState (ZZ)V a
	setType (Lnet/minecraft/world/entity/vehicle/Boat$Type;)V a
	tick ()V j
	tickBubbleColumn ()V q
	tickLerp ()V r
net/minecraft/world/entity/vehicle/Boat$Status bhk$a
	$VALUES f
	IN_AIR e
	IN_WATER a
	ON_LAND d
	UNDER_FLOWING_WATER c
	UNDER_WATER b
net/minecraft/world/entity/vehicle/Boat$Type bhk$b
	$VALUES i
	ACACIA e
	BIRCH c
	DARK_OAK f
	JUNGLE d
	OAK a
	SPRUCE b
	name g
	planks h
	byId (I)Lnet/minecraft/world/entity/vehicle/Boat$Type; a
	byName (Ljava/lang/String;)Lnet/minecraft/world/entity/vehicle/Boat$Type; a
	getName ()Ljava/lang/String; a
	getPlanks ()Lnet/minecraft/world/level/block/Block; b
net/minecraft/world/entity/vehicle/DismountHelper bhl
	canDismountTo (Lnet/minecraft/world/level/CollisionGetter;Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/phys/AABB;)Z a
	findCeilingFrom (Lnet/minecraft/core/BlockPos;ILjava/util/function/Function;)D a
	findDismountLocation (Lnet/minecraft/world/level/CollisionGetter;DDDLnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/entity/Pose;)Lnet/minecraft/world/phys/Vec3; a
	findSafeDismountLocation (Lnet/minecraft/world/entity/EntityType;Lnet/minecraft/world/level/CollisionGetter;Lnet/minecraft/core/BlockPos;Z)Lnet/minecraft/world/phys/Vec3; a
	isBlockFloorValid (D)Z a
	nonClimbableShape (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	offsetsForDirection (Lnet/minecraft/core/Direction;)[[I a
net/minecraft/world/entity/vehicle/Minecart bhm
	activateMinecart (IIIZ)V a
	getMinecartType ()Lnet/minecraft/world/entity/vehicle/AbstractMinecart$Type; o
	interact (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResult; a
net/minecraft/world/entity/vehicle/MinecartChest bhn
	createMenu (ILnet/minecraft/world/entity/player/Inventory;)Lnet/minecraft/world/inventory/AbstractContainerMenu; a
	destroy (Lnet/minecraft/world/damagesource/DamageSource;)V a
	getContainerSize ()I Z_
	getDefaultDisplayBlockState ()Lnet/minecraft/world/level/block/state/BlockState; q
	getDefaultDisplayOffset ()I s
	getMinecartType ()Lnet/minecraft/world/entity/vehicle/AbstractMinecart$Type; o
net/minecraft/world/entity/vehicle/MinecartCommandBlock bho
	DATA_ID_COMMAND_NAME b
	DATA_ID_LAST_OUTPUT c
	commandBlock d
	lastActivated e
	activateMinecart (IIIZ)V a
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	defineSynchedData ()V e
	getCommandBlock ()Lnet/minecraft/world/level/BaseCommandBlock; u
	getDefaultDisplayBlockState ()Lnet/minecraft/world/level/block/state/BlockState; q
	getMinecartType ()Lnet/minecraft/world/entity/vehicle/AbstractMinecart$Type; o
	interact (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResult; a
	onSyncedDataUpdated (Lnet/minecraft/network/syncher/EntityDataAccessor;)V a
	onlyOpCanSetNbt ()Z ci
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
net/minecraft/world/entity/vehicle/MinecartCommandBlock$MinecartCommandBase bho$a
	createCommandSourceStack ()Lnet/minecraft/commands/CommandSourceStack; h
	getLevel ()Lnet/minecraft/server/level/ServerLevel; d
	getMinecart ()Lnet/minecraft/world/entity/vehicle/MinecartCommandBlock; g
	getPosition ()Lnet/minecraft/world/phys/Vec3; f
	onUpdated ()V e
net/minecraft/world/entity/vehicle/MinecartFurnace bhp
	DATA_ID_FUEL d
	INGREDIENT f
	fuel e
	xPush b
	zPush c
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	applyNaturalSlowdown ()V i
	defineSynchedData ()V e
	destroy (Lnet/minecraft/world/damagesource/DamageSource;)V a
	getDefaultDisplayBlockState ()Lnet/minecraft/world/level/block/state/BlockState; q
	getMaxSpeed ()D g
	getMinecartType ()Lnet/minecraft/world/entity/vehicle/AbstractMinecart$Type; o
	hasFuel ()Z u
	interact (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResult; a
	moveAlongTrack (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V c
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	setHasFuel (Z)V o
	tick ()V j
net/minecraft/world/entity/vehicle/MinecartHopper bhq
	cooldownTime e
	enabled d
	lastPosition f
	activateMinecart (IIIZ)V a
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	createMenu (ILnet/minecraft/world/entity/player/Inventory;)Lnet/minecraft/world/inventory/AbstractContainerMenu; a
	destroy (Lnet/minecraft/world/damagesource/DamageSource;)V a
	getContainerSize ()I Z_
	getDefaultDisplayBlockState ()Lnet/minecraft/world/level/block/state/BlockState; q
	getDefaultDisplayOffset ()I s
	getLevel ()Lnet/minecraft/world/level/Level; v
	getLevelX ()D x
	getLevelY ()D z
	getLevelZ ()D A
	getMinecartType ()Lnet/minecraft/world/entity/vehicle/AbstractMinecart$Type; o
	isEnabled ()Z u
	isOnCooldown ()Z C
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	setCooldown (I)V m
	setEnabled (Z)V o
	suckInItems ()Z B
	tick ()V j
net/minecraft/world/entity/vehicle/MinecartSpawner bhr
	spawner b
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	getDefaultDisplayBlockState ()Lnet/minecraft/world/level/block/state/BlockState; q
	getMinecartType ()Lnet/minecraft/world/entity/vehicle/AbstractMinecart$Type; o
	getSpawner ()Lnet/minecraft/world/level/BaseSpawner; u
	handleEntityEvent (B)V a
	onlyOpCanSetNbt ()Z ci
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	tick ()V j
net/minecraft/world/entity/vehicle/MinecartTNT bhs
	fuse b
	activateMinecart (IIIZ)V a
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	causeFallDamage (FF)Z b
	destroy (Lnet/minecraft/world/damagesource/DamageSource;)V a
	explode (D)V h
	getBlockExplosionResistance (Lnet/minecraft/world/level/Explosion;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/material/FluidState;F)F a
	getDefaultDisplayBlockState ()Lnet/minecraft/world/level/block/state/BlockState; q
	getFuse ()I v
	getMinecartType ()Lnet/minecraft/world/entity/vehicle/AbstractMinecart$Type; o
	handleEntityEvent (B)V a
	hurt (Lnet/minecraft/world/damagesource/DamageSource;F)Z a
	isPrimed ()Z x
	primeFuse ()V u
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	shouldBlockExplode (Lnet/minecraft/world/level/Explosion;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;F)Z a
	tick ()V j
net/minecraft/world/food/FoodConstants bhu
net/minecraft/world/food/FoodData bhv
	exhaustionLevel c
	foodLevel a
	lastFoodLevel e
	saturationLevel b
	tickTimer d
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	addExhaustion (F)V a
	eat (IF)V a
	eat (Lnet/minecraft/world/item/Item;Lnet/minecraft/world/item/ItemStack;)V a
	getExhaustionLevel ()F d
	getFoodLevel ()I a
	getLastFoodLevel ()I b
	getSaturationLevel ()F e
	needsFood ()Z c
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	setExhaustion (F)V c
	setFoodLevel (I)V a
	setSaturation (F)V b
	tick (Lnet/minecraft/world/entity/player/Player;)V a
net/minecraft/world/food/FoodProperties bhw
	canAlwaysEat d
	effects f
	fastFood e
	isMeat c
	nutrition a
	saturationModifier b
	canAlwaysEat ()Z d
	getEffects ()Ljava/util/List; f
	getNutrition ()I a
	getSaturationModifier ()F b
	isFastFood ()Z e
	isMeat ()Z c
net/minecraft/world/food/FoodProperties$Builder bhw$a
	canAlwaysEat d
	effects f
	fastFood e
	isMeat c
	nutrition a
	saturationModifier b
	alwaysEat ()Lnet/minecraft/world/food/FoodProperties$Builder; b
	build ()Lnet/minecraft/world/food/FoodProperties; d
	effect (Lnet/minecraft/world/effect/MobEffectInstance;F)Lnet/minecraft/world/food/FoodProperties$Builder; a
	fast ()Lnet/minecraft/world/food/FoodProperties$Builder; c
	meat ()Lnet/minecraft/world/food/FoodProperties$Builder; a
	nutrition (I)Lnet/minecraft/world/food/FoodProperties$Builder; a
	saturationMod (F)Lnet/minecraft/world/food/FoodProperties$Builder; a
net/minecraft/world/food/Foods bhx
	APPLE a
	BAKED_POTATO b
	BEEF c
	BEETROOT d
	BEETROOT_SOUP e
	BREAD f
	CARROT g
	CHICKEN h
	CHORUS_FRUIT i
	COD j
	COOKED_BEEF k
	COOKED_CHICKEN l
	COOKED_COD m
	COOKED_MUTTON n
	COOKED_PORKCHOP o
	COOKED_RABBIT p
	COOKED_SALMON q
	COOKIE r
	DRIED_KELP s
	ENCHANTED_GOLDEN_APPLE t
	GOLDEN_APPLE u
	GOLDEN_CARROT v
	HONEY_BOTTLE w
	MELON_SLICE x
	MUSHROOM_STEW y
	MUTTON z
	POISONOUS_POTATO A
	PORKCHOP B
	POTATO C
	PUFFERFISH D
	PUMPKIN_PIE E
	RABBIT F
	RABBIT_STEW G
	ROTTEN_FLESH H
	SALMON I
	SPIDER_EYE J
	SUSPICIOUS_STEW K
	SWEET_BERRIES L
	TROPICAL_FISH M
	stew (I)Lnet/minecraft/world/food/FoodProperties; a
net/minecraft/world/inventory/AbstractContainerMenu bhz
	changeUid f
	containerId b
	containerListeners j
	dataSlots d
	lastSlots c
	menuType e
	quickcraftSlots i
	quickcraftStatus h
	quickcraftType g
	slots a
	unSynchedPlayers k
	addDataSlot (Lnet/minecraft/world/inventory/DataSlot;)Lnet/minecraft/world/inventory/DataSlot; a
	addDataSlots (Lnet/minecraft/world/inventory/ContainerData;)V a
	addItem (ILnet/minecraft/world/item/ItemStack;)V b
	addSlot (Lnet/minecraft/world/inventory/Slot;)Lnet/minecraft/world/inventory/Slot; a
	addSlotListener (Lnet/minecraft/world/inventory/ContainerListener;)V a
	backup (Lnet/minecraft/world/entity/player/Inventory;)S a
	broadcastChanges ()V c
	canDragTo (Lnet/minecraft/world/inventory/Slot;)Z b
	canItemQuickReplace (Lnet/minecraft/world/inventory/Slot;Lnet/minecraft/world/item/ItemStack;Z)Z a
	canTakeItemForPickAll (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/inventory/Slot;)Z a
	checkContainerDataCount (Lnet/minecraft/world/inventory/ContainerData;I)V a
	checkContainerSize (Lnet/minecraft/world/Container;I)V a
	clearContainer (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/level/Level;Lnet/minecraft/world/Container;)V a
	clickMenuButton (Lnet/minecraft/world/entity/player/Player;I)Z a
	clicked (IILnet/minecraft/world/inventory/ClickType;Lnet/minecraft/world/entity/player/Player;)Lnet/minecraft/world/item/ItemStack; a
	consideredTheSameItem (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/item/ItemStack;)Z a
	doClick (IILnet/minecraft/world/inventory/ClickType;Lnet/minecraft/world/entity/player/Player;)Lnet/minecraft/world/item/ItemStack; b
	getItems ()Lnet/minecraft/core/NonNullList; b
	getQuickCraftSlotCount (Ljava/util/Set;ILnet/minecraft/world/item/ItemStack;I)V a
	getQuickcraftHeader (I)I c
	getQuickcraftMask (II)I b
	getQuickcraftType (I)I b
	getRedstoneSignalFromBlockEntity (Lnet/minecraft/world/level/block/entity/BlockEntity;)I a
	getRedstoneSignalFromContainer (Lnet/minecraft/world/Container;)I b
	getSlot (I)Lnet/minecraft/world/inventory/Slot; a
	getSlotFor (Lnet/minecraft/world/Container;I)Lnet/minecraft/world/inventory/Slot; b
	getType ()Lnet/minecraft/world/inventory/MenuType; a
	isSynched (Lnet/minecraft/world/entity/player/Player;)Z c
	isValidQuickcraftType (ILnet/minecraft/world/entity/player/Player;)Z a
	moveItemStackTo (Lnet/minecraft/world/item/ItemStack;IIZ)Z a
	quickMoveStack (Lnet/minecraft/world/entity/player/Player;I)Lnet/minecraft/world/item/ItemStack; b
	removeSlotListener (Lnet/minecraft/world/inventory/ContainerListener;)V b
	removed (Lnet/minecraft/world/entity/player/Player;)V b
	resetQuickCraft ()V d
	setAll (Ljava/util/List;)V a
	setData (II)V a
	setItem (ILnet/minecraft/world/item/ItemStack;)V a
	setSynched (Lnet/minecraft/world/entity/player/Player;Z)V a
	slotsChanged (Lnet/minecraft/world/Container;)V a
	stillValid (Lnet/minecraft/world/entity/player/Player;)Z a
	stillValid (Lnet/minecraft/world/inventory/ContainerLevelAccess;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/level/block/Block;)Z a
net/minecraft/world/inventory/AbstractFurnaceMenu bia
	container d
	data e
	level c
	recipeBookType g
	recipeType f
	canSmelt (Lnet/minecraft/world/item/ItemStack;)Z a
	clearCraftingContent ()V e
	fillCraftSlotsStackedContents (Lnet/minecraft/world/entity/player/StackedContents;)V a
	getBurnProgress ()I j
	getGridHeight ()I h
	getGridWidth ()I g
	getLitProgress ()I k
	getRecipeBookType ()Lnet/minecraft/world/inventory/RecipeBookType; m
	getResultSlotIndex ()I f
	getSize ()I i
	handlePlacement (ZLnet/minecraft/world/item/crafting/Recipe;Lnet/minecraft/server/level/ServerPlayer;)V a
	isFuel (Lnet/minecraft/world/item/ItemStack;)Z b
	isLit ()Z l
	quickMoveStack (Lnet/minecraft/world/entity/player/Player;I)Lnet/minecraft/world/item/ItemStack; b
	recipeMatches (Lnet/minecraft/world/item/crafting/Recipe;)Z a
	stillValid (Lnet/minecraft/world/entity/player/Player;)Z a
net/minecraft/world/inventory/AnvilMenu bib
	LOGGER g
	cost j
	itemName i
	repairItemCountCost h
	calculateIncreasedRepairCost (I)I d
	createResult ()V e
	getCost ()I f
	isValidBlock (Lnet/minecraft/world/level/block/state/BlockState;)Z a
	mayPickup (Lnet/minecraft/world/entity/player/Player;Z)Z b
	onTake (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/item/ItemStack;)Lnet/minecraft/world/item/ItemStack; a
	setItemName (Ljava/lang/String;)V a
net/minecraft/world/inventory/BeaconMenu bic
	access e
	beacon c
	beaconData f
	paymentSlot d
	getLevels ()I e
	getPrimaryEffect ()Lnet/minecraft/world/effect/MobEffect; f
	getSecondaryEffect ()Lnet/minecraft/world/effect/MobEffect; g
	hasPayment ()Z h
	quickMoveStack (Lnet/minecraft/world/entity/player/Player;I)Lnet/minecraft/world/item/ItemStack; b
	removed (Lnet/minecraft/world/entity/player/Player;)V b
	setData (II)V a
	stillValid (Lnet/minecraft/world/entity/player/Player;)Z a
	updateEffects (II)V c
net/minecraft/world/inventory/BeaconMenu$PaymentSlot bic$a
	getMaxStackSize ()I a
	mayPlace (Lnet/minecraft/world/item/ItemStack;)Z a
net/minecraft/world/inventory/BlastFurnaceMenu bid
net/minecraft/world/inventory/BrewingStandMenu bie
	brewingStand c
	brewingStandData d
	ingredientSlot e
	getBrewingTicks ()I f
	getFuel ()I e
	quickMoveStack (Lnet/minecraft/world/entity/player/Player;I)Lnet/minecraft/world/item/ItemStack; b
	stillValid (Lnet/minecraft/world/entity/player/Player;)Z a
net/minecraft/world/inventory/BrewingStandMenu$FuelSlot bie$a
	getMaxStackSize ()I a
	mayPlace (Lnet/minecraft/world/item/ItemStack;)Z a
	mayPlaceItem (Lnet/minecraft/world/item/ItemStack;)Z a_
net/minecraft/world/inventory/BrewingStandMenu$IngredientsSlot bie$b
	getMaxStackSize ()I a
	mayPlace (Lnet/minecraft/world/item/ItemStack;)Z a
net/minecraft/world/inventory/BrewingStandMenu$PotionSlot bie$c
	getMaxStackSize ()I a
	mayPlace (Lnet/minecraft/world/item/ItemStack;)Z a
	mayPlaceItem (Lnet/minecraft/world/item/ItemStack;)Z b_
	onTake (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/item/ItemStack;)Lnet/minecraft/world/item/ItemStack; a
net/minecraft/world/inventory/CartographyTableMenu bif
	access d
	container c
	lastSoundTime e
	resultContainer f
	canTakeItemForPickAll (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/inventory/Slot;)Z a
	quickMoveStack (Lnet/minecraft/world/entity/player/Player;I)Lnet/minecraft/world/item/ItemStack; b
	removed (Lnet/minecraft/world/entity/player/Player;)V b
	setupResultSlot (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/item/ItemStack;)V a
	slotsChanged (Lnet/minecraft/world/Container;)V a
	stillValid (Lnet/minecraft/world/entity/player/Player;)Z a
net/minecraft/world/inventory/ChestMenu big
	container c
	containerRows d
	fiveRows (ILnet/minecraft/world/entity/player/Inventory;)Lnet/minecraft/world/inventory/ChestMenu; e
	fourRows (ILnet/minecraft/world/entity/player/Inventory;)Lnet/minecraft/world/inventory/ChestMenu; d
	getContainer ()Lnet/minecraft/world/Container; e
	getRowCount ()I f
	oneRow (ILnet/minecraft/world/entity/player/Inventory;)Lnet/minecraft/world/inventory/ChestMenu; a
	quickMoveStack (Lnet/minecraft/world/entity/player/Player;I)Lnet/minecraft/world/item/ItemStack; b
	removed (Lnet/minecraft/world/entity/player/Player;)V b
	sixRows (ILnet/minecraft/world/entity/player/Inventory;)Lnet/minecraft/world/inventory/ChestMenu; f
	sixRows (ILnet/minecraft/world/entity/player/Inventory;Lnet/minecraft/world/Container;)Lnet/minecraft/world/inventory/ChestMenu; b
	stillValid (Lnet/minecraft/world/entity/player/Player;)Z a
	threeRows (ILnet/minecraft/world/entity/player/Inventory;)Lnet/minecraft/world/inventory/ChestMenu; c
	threeRows (ILnet/minecraft/world/entity/player/Inventory;Lnet/minecraft/world/Container;)Lnet/minecraft/world/inventory/ChestMenu; a
	twoRows (ILnet/minecraft/world/entity/player/Inventory;)Lnet/minecraft/world/inventory/ChestMenu; b
net/minecraft/world/inventory/ClickType bih
	$VALUES h
	CLONE d
	PICKUP a
	PICKUP_ALL g
	QUICK_CRAFT f
	QUICK_MOVE b
	SWAP c
	THROW e
net/minecraft/world/inventory/ContainerData bii
	get (I)I a
	getCount ()I a
	set (II)V a
net/minecraft/world/inventory/ContainerLevelAccess bij
	NULL a
	create (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/inventory/ContainerLevelAccess; a
	evaluate (Ljava/util/function/BiFunction;)Ljava/util/Optional; a
	evaluate (Ljava/util/function/BiFunction;Ljava/lang/Object;)Ljava/lang/Object; a
	execute (Ljava/util/function/BiConsumer;)V a
net/minecraft/world/inventory/ContainerListener bik
	refreshContainer (Lnet/minecraft/world/inventory/AbstractContainerMenu;Lnet/minecraft/core/NonNullList;)V a
	setContainerData (Lnet/minecraft/world/inventory/AbstractContainerMenu;II)V a
	slotChanged (Lnet/minecraft/world/inventory/AbstractContainerMenu;ILnet/minecraft/world/item/ItemStack;)V a
net/minecraft/world/inventory/CraftingContainer bil
	height c
	items a
	menu d
	width b
	clearContent ()V Y_
	fillStackedContents (Lnet/minecraft/world/entity/player/StackedContents;)V a
	getContainerSize ()I Z_
	getHeight ()I f
	getItem (I)Lnet/minecraft/world/item/ItemStack; a
	getItem (II)Lnet/minecraft/world/item/ItemStack; b
	getWidth ()I g
	isEmpty ()Z c
	removeItem (II)Lnet/minecraft/world/item/ItemStack; a
	removeItemNoUpdate (I)Lnet/minecraft/world/item/ItemStack; b
	setChanged ()V X_
	setItem (ILnet/minecraft/world/item/ItemStack;)V a
	stillValid (Lnet/minecraft/world/entity/player/Player;)Z a
net/minecraft/world/inventory/CraftingMenu bim
	access e
	craftSlots c
	player f
	resultSlots d
	canTakeItemForPickAll (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/inventory/Slot;)Z a
	clearCraftingContent ()V e
	fillCraftSlotsStackedContents (Lnet/minecraft/world/entity/player/StackedContents;)V a
	getGridHeight ()I h
	getGridWidth ()I g
	getRecipeBookType ()Lnet/minecraft/world/inventory/RecipeBookType; m
	getResultSlotIndex ()I f
	getSize ()I i
	quickMoveStack (Lnet/minecraft/world/entity/player/Player;I)Lnet/minecraft/world/item/ItemStack; b
	recipeMatches (Lnet/minecraft/world/item/crafting/Recipe;)Z a
	removed (Lnet/minecraft/world/entity/player/Player;)V b
	slotChangedCraftingGrid (ILnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/inventory/CraftingContainer;Lnet/minecraft/world/inventory/ResultContainer;)V a
	slotsChanged (Lnet/minecraft/world/Container;)V a
	stillValid (Lnet/minecraft/world/entity/player/Player;)Z a
net/minecraft/world/inventory/DataSlot bin
	prevValue a
	checkAndClearUpdateFlag ()Z c
	forContainer (Lnet/minecraft/world/inventory/ContainerData;I)Lnet/minecraft/world/inventory/DataSlot; a
	get ()I b
	set (I)V a
	shared ([II)Lnet/minecraft/world/inventory/DataSlot; a
	standalone ()Lnet/minecraft/world/inventory/DataSlot; a
net/minecraft/world/inventory/DispenserMenu bio
	dispenser c
	quickMoveStack (Lnet/minecraft/world/entity/player/Player;I)Lnet/minecraft/world/item/ItemStack; b
	removed (Lnet/minecraft/world/entity/player/Player;)V b
	stillValid (Lnet/minecraft/world/entity/player/Player;)Z a
net/minecraft/world/inventory/EnchantmentMenu bip
	access g
	costs c
	enchantClue d
	enchantSlots f
	enchantmentSeed i
	levelClue e
	random h
	clickMenuButton (Lnet/minecraft/world/entity/player/Player;I)Z a
	getEnchantmentList (Lnet/minecraft/world/item/ItemStack;II)Ljava/util/List; a
	getEnchantmentSeed ()I f
	getGoldCount ()I e
	quickMoveStack (Lnet/minecraft/world/entity/player/Player;I)Lnet/minecraft/world/item/ItemStack; b
	removed (Lnet/minecraft/world/entity/player/Player;)V b
	slotsChanged (Lnet/minecraft/world/Container;)V a
	stillValid (Lnet/minecraft/world/entity/player/Player;)Z a
net/minecraft/world/inventory/FurnaceFuelSlot biq
	menu a
	getMaxStackSize (Lnet/minecraft/world/item/ItemStack;)I b
	isBucket (Lnet/minecraft/world/item/ItemStack;)Z c_
	mayPlace (Lnet/minecraft/world/item/ItemStack;)Z a
net/minecraft/world/inventory/FurnaceMenu bir
net/minecraft/world/inventory/FurnaceResultSlot bis
	player a
	removeCount b
	checkTakeAchievements (Lnet/minecraft/world/item/ItemStack;)V c
	mayPlace (Lnet/minecraft/world/item/ItemStack;)Z a
	onQuickCraft (Lnet/minecraft/world/item/ItemStack;I)V a
	onTake (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/item/ItemStack;)Lnet/minecraft/world/item/ItemStack; a
	remove (I)Lnet/minecraft/world/item/ItemStack; a
net/minecraft/world/inventory/GrindstoneMenu bit
	access e
	repairSlots d
	resultSlots c
	createResult ()V e
	mergeEnchants (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/item/ItemStack;)Lnet/minecraft/world/item/ItemStack; b
	quickMoveStack (Lnet/minecraft/world/entity/player/Player;I)Lnet/minecraft/world/item/ItemStack; b
	removeNonCurses (Lnet/minecraft/world/item/ItemStack;II)Lnet/minecraft/world/item/ItemStack; a
	removed (Lnet/minecraft/world/entity/player/Player;)V b
	slotsChanged (Lnet/minecraft/world/Container;)V a
	stillValid (Lnet/minecraft/world/entity/player/Player;)Z a
net/minecraft/world/inventory/HopperMenu biu
	hopper c
	getContainer ()Lnet/minecraft/world/Container; e
	quickMoveStack (Lnet/minecraft/world/entity/player/Player;I)Lnet/minecraft/world/item/ItemStack; b
	removed (Lnet/minecraft/world/entity/player/Player;)V b
	stillValid (Lnet/minecraft/world/entity/player/Player;)Z a
net/minecraft/world/inventory/HorseInventoryMenu biv
	horse d
	horseContainer c
	getContainer ()Lnet/minecraft/world/Container; e
	quickMoveStack (Lnet/minecraft/world/entity/player/Player;I)Lnet/minecraft/world/item/ItemStack; b
	removed (Lnet/minecraft/world/entity/player/Player;)V b
	stillValid (Lnet/minecraft/world/entity/player/Player;)Z a
net/minecraft/world/inventory/InventoryMenu biw
	BLOCK_ATLAS c
	EMPTY_ARMOR_SLOT_BOOTS g
	EMPTY_ARMOR_SLOT_CHESTPLATE e
	EMPTY_ARMOR_SLOT_HELMET d
	EMPTY_ARMOR_SLOT_LEGGINGS f
	EMPTY_ARMOR_SLOT_SHIELD h
	SLOT_IDS k
	TEXTURE_EMPTY_SLOTS j
	active i
	craftSlots l
	owner n
	resultSlots m
	canTakeItemForPickAll (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/inventory/Slot;)Z a
	clearCraftingContent ()V e
	fillCraftSlotsStackedContents (Lnet/minecraft/world/entity/player/StackedContents;)V a
	getCraftSlots ()Lnet/minecraft/world/inventory/CraftingContainer; j
	getGridHeight ()I h
	getGridWidth ()I g
	getRecipeBookType ()Lnet/minecraft/world/inventory/RecipeBookType; m
	getResultSlotIndex ()I f
	getSize ()I i
	quickMoveStack (Lnet/minecraft/world/entity/player/Player;I)Lnet/minecraft/world/item/ItemStack; b
	recipeMatches (Lnet/minecraft/world/item/crafting/Recipe;)Z a
	removed (Lnet/minecraft/world/entity/player/Player;)V b
	slotsChanged (Lnet/minecraft/world/Container;)V a
	stillValid (Lnet/minecraft/world/entity/player/Player;)Z a
net/minecraft/world/inventory/ItemCombinerMenu bix
	access e
	inputSlots d
	player f
	resultSlots c
	createResult ()V e
	isValidBlock (Lnet/minecraft/world/level/block/state/BlockState;)Z a
	mayPickup (Lnet/minecraft/world/entity/player/Player;Z)Z b
	onTake (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/item/ItemStack;)Lnet/minecraft/world/item/ItemStack; a
	quickMoveStack (Lnet/minecraft/world/entity/player/Player;I)Lnet/minecraft/world/item/ItemStack; b
	removed (Lnet/minecraft/world/entity/player/Player;)V b
	shouldQuickMoveToAdditionalSlot (Lnet/minecraft/world/item/ItemStack;)Z a
	slotsChanged (Lnet/minecraft/world/Container;)V a
	stillValid (Lnet/minecraft/world/entity/player/Player;)Z a
net/minecraft/world/inventory/LecternMenu biy
	lectern c
	lecternData d
	clickMenuButton (Lnet/minecraft/world/entity/player/Player;I)Z a
	getBook ()Lnet/minecraft/world/item/ItemStack; e
	getPage ()I f
	setData (II)V a
	stillValid (Lnet/minecraft/world/entity/player/Player;)Z a
net/minecraft/world/inventory/LoomMenu biz
	access c
	bannerSlot f
	dyeSlot g
	inputContainer k
	lastSoundTime j
	outputContainer l
	patternSlot h
	resultSlot i
	selectedBannerPatternIndex d
	slotUpdateListener e
	clickMenuButton (Lnet/minecraft/world/entity/player/Player;I)Z a
	getBannerSlot ()Lnet/minecraft/world/inventory/Slot; f
	getDyeSlot ()Lnet/minecraft/world/inventory/Slot; g
	getPatternSlot ()Lnet/minecraft/world/inventory/Slot; h
	getResultSlot ()Lnet/minecraft/world/inventory/Slot; i
	getSelectedBannerPatternIndex ()I e
	quickMoveStack (Lnet/minecraft/world/entity/player/Player;I)Lnet/minecraft/world/item/ItemStack; b
	registerUpdateListener (Ljava/lang/Runnable;)V a
	removed (Lnet/minecraft/world/entity/player/Player;)V b
	setupResultSlot ()V j
	slotsChanged (Lnet/minecraft/world/Container;)V a
	stillValid (Lnet/minecraft/world/entity/player/Player;)Z a
net/minecraft/world/inventory/MenuConstructor bja
net/minecraft/world/inventory/MenuType bjb
	ANVIL h
	BEACON i
	BLAST_FURNACE j
	BREWING_STAND k
	CARTOGRAPHY_TABLE w
	CRAFTING l
	ENCHANTMENT m
	FURNACE n
	GENERIC_3x3 g
	GENERIC_9x1 a
	GENERIC_9x2 b
	GENERIC_9x3 c
	GENERIC_9x4 d
	GENERIC_9x5 e
	GENERIC_9x6 f
	GRINDSTONE o
	HOPPER p
	LECTERN q
	LOOM r
	MERCHANT s
	SHULKER_BOX t
	SMITHING u
	SMOKER v
	STONECUTTER x
	constructor y
	create (ILnet/minecraft/world/entity/player/Inventory;)Lnet/minecraft/world/inventory/AbstractContainerMenu; a
	register (Ljava/lang/String;Lnet/minecraft/world/inventory/MenuType$MenuSupplier;)Lnet/minecraft/world/inventory/MenuType; a
net/minecraft/world/inventory/MenuType$MenuSupplier bjb$a
net/minecraft/world/inventory/MerchantContainer bjc
	activeOffer c
	futureXp e
	itemStacks b
	merchant a
	selectionHint d
	clearContent ()V Y_
	getActiveOffer ()Lnet/minecraft/world/item/trading/MerchantOffer; g
	getContainerSize ()I Z_
	getFutureXp ()I h
	getItem (I)Lnet/minecraft/world/item/ItemStack; a
	isEmpty ()Z c
	isPaymentSlot (I)Z d
	removeItem (II)Lnet/minecraft/world/item/ItemStack; a
	removeItemNoUpdate (I)Lnet/minecraft/world/item/ItemStack; b
	setChanged ()V X_
	setItem (ILnet/minecraft/world/item/ItemStack;)V a
	setSelectionHint (I)V c
	stillValid (Lnet/minecraft/world/entity/player/Player;)Z a
	updateSellItem ()V f
net/minecraft/world/inventory/MerchantMenu bjd
	canRestock g
	merchantLevel e
	showProgressBar f
	tradeContainer d
	trader c
	canRestock ()Z h
	canTakeItemForPickAll (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/inventory/Slot;)Z a
	getFutureTraderXp ()I f
	getOffers ()Lnet/minecraft/world/item/trading/MerchantOffers; i
	getTraderLevel ()I g
	getTraderXp ()I e
	isSameItem (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/item/ItemStack;)Z b
	moveFromInventoryToPaymentSlot (ILnet/minecraft/world/item/ItemStack;)V c
	playTradeSound ()V k
	quickMoveStack (Lnet/minecraft/world/entity/player/Player;I)Lnet/minecraft/world/item/ItemStack; b
	removed (Lnet/minecraft/world/entity/player/Player;)V b
	setCanRestock (Z)V b
	setMerchantLevel (I)V f
	setOffers (Lnet/minecraft/world/item/trading/MerchantOffers;)V a
	setSelectionHint (I)V d
	setShowProgressBar (Z)V a
	setXp (I)V e
	showProgressBar ()Z j
	slotsChanged (Lnet/minecraft/world/Container;)V a
	stillValid (Lnet/minecraft/world/entity/player/Player;)Z a
	tryMoveItems (I)V g
net/minecraft/world/inventory/MerchantResultSlot bje
	merchant h
	player b
	removeCount g
	slots a
	checkTakeAchievements (Lnet/minecraft/world/item/ItemStack;)V c
	mayPlace (Lnet/minecraft/world/item/ItemStack;)Z a
	onQuickCraft (Lnet/minecraft/world/item/ItemStack;I)V a
	onTake (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/item/ItemStack;)Lnet/minecraft/world/item/ItemStack; a
	remove (I)Lnet/minecraft/world/item/ItemStack; a
net/minecraft/world/inventory/PlayerEnderChestContainer bjf
	activeChest a
	createTag ()Lnet/minecraft/nbt/ListTag; g
	fromTag (Lnet/minecraft/nbt/ListTag;)V a
	setActiveChest (Lnet/minecraft/world/level/block/entity/EnderChestBlockEntity;)V a
	startOpen (Lnet/minecraft/world/entity/player/Player;)V c_
	stillValid (Lnet/minecraft/world/entity/player/Player;)Z a
	stopOpen (Lnet/minecraft/world/entity/player/Player;)V b_
net/minecraft/world/inventory/RecipeBookMenu bjg
	clearCraftingContent ()V e
	fillCraftSlotsStackedContents (Lnet/minecraft/world/entity/player/StackedContents;)V a
	getGridHeight ()I h
	getGridWidth ()I g
	getRecipeBookType ()Lnet/minecraft/world/inventory/RecipeBookType; m
	getResultSlotIndex ()I f
	getSize ()I i
	handlePlacement (ZLnet/minecraft/world/item/crafting/Recipe;Lnet/minecraft/server/level/ServerPlayer;)V a
	recipeMatches (Lnet/minecraft/world/item/crafting/Recipe;)Z a
net/minecraft/world/inventory/RecipeBookType bjh
	$VALUES e
	BLAST_FURNACE c
	CRAFTING a
	FURNACE b
	SMOKER d
net/minecraft/world/inventory/RecipeHolder bji
	awardUsedRecipes (Lnet/minecraft/world/entity/player/Player;)V b
	getRecipeUsed ()Lnet/minecraft/world/item/crafting/Recipe; ak_
	setRecipeUsed (Lnet/minecraft/world/item/crafting/Recipe;)V a
	setRecipeUsed (Lnet/minecraft/world/level/Level;Lnet/minecraft/server/level/ServerPlayer;Lnet/minecraft/world/item/crafting/Recipe;)Z a
net/minecraft/world/inventory/ResultContainer bjj
	itemStacks a
	recipeUsed b
	clearContent ()V Y_
	getContainerSize ()I Z_
	getItem (I)Lnet/minecraft/world/item/ItemStack; a
	getRecipeUsed ()Lnet/minecraft/world/item/crafting/Recipe; ak_
	isEmpty ()Z c
	removeItem (II)Lnet/minecraft/world/item/ItemStack; a
	removeItemNoUpdate (I)Lnet/minecraft/world/item/ItemStack; b
	setChanged ()V X_
	setItem (ILnet/minecraft/world/item/ItemStack;)V a
	setRecipeUsed (Lnet/minecraft/world/item/crafting/Recipe;)V a
	stillValid (Lnet/minecraft/world/entity/player/Player;)Z a
net/minecraft/world/inventory/ResultSlot bjk
	craftSlots a
	player b
	removeCount g
	checkTakeAchievements (Lnet/minecraft/world/item/ItemStack;)V c
	mayPlace (Lnet/minecraft/world/item/ItemStack;)Z a
	onQuickCraft (Lnet/minecraft/world/item/ItemStack;I)V a
	onSwapCraft (I)V b
	onTake (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/item/ItemStack;)Lnet/minecraft/world/item/ItemStack; a
	remove (I)Lnet/minecraft/world/item/ItemStack; a
net/minecraft/world/inventory/ShulkerBoxMenu bjl
	container c
	quickMoveStack (Lnet/minecraft/world/entity/player/Player;I)Lnet/minecraft/world/item/ItemStack; b
	removed (Lnet/minecraft/world/entity/player/Player;)V b
	stillValid (Lnet/minecraft/world/entity/player/Player;)Z a
net/minecraft/world/inventory/ShulkerBoxSlot bjm
	mayPlace (Lnet/minecraft/world/item/ItemStack;)Z a
net/minecraft/world/inventory/SimpleContainerData bjn
	ints a
	get (I)I a
	getCount ()I a
	set (II)V a
net/minecraft/world/inventory/Slot bjo
	container c
	index d
	slot a
	x e
	y f
	checkTakeAchievements (Lnet/minecraft/world/item/ItemStack;)V c
	getItem ()Lnet/minecraft/world/item/ItemStack; e
	getMaxStackSize ()I a
	getMaxStackSize (Lnet/minecraft/world/item/ItemStack;)I b
	getNoItemIcon ()Lcom/mojang/datafixers/util/Pair; c
	hasItem ()Z f
	isActive ()Z b
	isAt (Lnet/minecraft/world/Container;I)Z a
	mayPickup (Lnet/minecraft/world/entity/player/Player;)Z a
	mayPlace (Lnet/minecraft/world/item/ItemStack;)Z a
	onQuickCraft (Lnet/minecraft/world/item/ItemStack;I)V a
	onQuickCraft (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/item/ItemStack;)V a
	onSwapCraft (I)V b
	onTake (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/item/ItemStack;)Lnet/minecraft/world/item/ItemStack; a
	remove (I)Lnet/minecraft/world/item/ItemStack; a
	set (Lnet/minecraft/world/item/ItemStack;)V d
	setChanged ()V d
	swap (Lnet/minecraft/world/inventory/Slot;)V a
net/minecraft/world/inventory/SmithingMenu bjp
	level g
	recipes i
	selectedRecipe h
	canTakeItemForPickAll (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/inventory/Slot;)Z a
	createResult ()V e
	isValidBlock (Lnet/minecraft/world/level/block/state/BlockState;)Z a
	mayPickup (Lnet/minecraft/world/entity/player/Player;Z)Z b
	onTake (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/item/ItemStack;)Lnet/minecraft/world/item/ItemStack; a
	shouldQuickMoveToAdditionalSlot (Lnet/minecraft/world/item/ItemStack;)Z a
	shrinkStackInSlot (I)V d
net/minecraft/world/inventory/SmokerMenu bjq
net/minecraft/world/inventory/StackedContentsCompatible bjr
	fillStackedContents (Lnet/minecraft/world/entity/player/StackedContents;)V a
net/minecraft/world/inventory/StonecutterMenu bjs
	access f
	container e
	input j
	inputSlot c
	lastSoundTime k
	level h
	recipes i
	resultContainer m
	resultSlot d
	selectedRecipeIndex g
	slotUpdateListener l
	canTakeItemForPickAll (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/inventory/Slot;)Z a
	clickMenuButton (Lnet/minecraft/world/entity/player/Player;I)Z a
	getNumRecipes ()I g
	getRecipes ()Ljava/util/List; f
	getSelectedRecipeIndex ()I e
	getType ()Lnet/minecraft/world/inventory/MenuType; a
	hasInputItem ()Z h
	isValidRecipeIndex (I)Z d
	quickMoveStack (Lnet/minecraft/world/entity/player/Player;I)Lnet/minecraft/world/item/ItemStack; b
	registerUpdateListener (Ljava/lang/Runnable;)V a
	removed (Lnet/minecraft/world/entity/player/Player;)V b
	setupRecipeList (Lnet/minecraft/world/Container;Lnet/minecraft/world/item/ItemStack;)V a
	setupResultSlot ()V i
	slotsChanged (Lnet/minecraft/world/Container;)V a
	stillValid (Lnet/minecraft/world/entity/player/Player;)Z a
net/minecraft/world/item/AirItem bju
	block a
	appendHoverText (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/Level;Ljava/util/List;Lnet/minecraft/world/item/TooltipFlag;)V a
	getDescriptionId ()Ljava/lang/String; a
net/minecraft/world/item/ArmorItem bjv
	ARMOR_MODIFIER_UUID_PER_SLOT j
	DISPENSE_ITEM_BEHAVIOR a
	defaultModifiers m
	defense k
	knockbackResistance c
	material d
	slot b
	toughness l
	dispenseArmor (Lnet/minecraft/core/BlockSource;Lnet/minecraft/world/item/ItemStack;)Z a
	getDefaultAttributeModifiers (Lnet/minecraft/world/entity/EquipmentSlot;)Lcom/google/common/collect/Multimap; a
	getDefense ()I e
	getEnchantmentValue ()I c
	getMaterial ()Lnet/minecraft/world/item/ArmorMaterial; ab_
	getSlot ()Lnet/minecraft/world/entity/EquipmentSlot; b
	getToughness ()F f
	isValidRepairItem (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/item/ItemStack;)Z a
	use (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResultHolder; a
net/minecraft/world/item/ArmorMaterial bjw
	getDefenseForSlot (Lnet/minecraft/world/entity/EquipmentSlot;)I b
	getDurabilityForSlot (Lnet/minecraft/world/entity/EquipmentSlot;)I a
	getEnchantmentValue ()I a
	getEquipSound ()Lnet/minecraft/sounds/SoundEvent; b
	getKnockbackResistance ()F f
	getName ()Ljava/lang/String; d
	getRepairIngredient ()Lnet/minecraft/world/item/crafting/Ingredient; c
	getToughness ()F e
net/minecraft/world/item/ArmorMaterials bjx
	$VALUES q
	CHAIN b
	DIAMOND e
	GOLD d
	HEALTH_PER_SLOT h
	IRON c
	LEATHER a
	NETHERITE g
	TURTLE f
	durabilityMultiplier j
	enchantmentValue l
	knockbackResistance o
	name i
	repairIngredient p
	slotProtections k
	sound m
	toughness n
	getDefenseForSlot (Lnet/minecraft/world/entity/EquipmentSlot;)I b
	getDurabilityForSlot (Lnet/minecraft/world/entity/EquipmentSlot;)I a
	getEnchantmentValue ()I a
	getEquipSound ()Lnet/minecraft/sounds/SoundEvent; b
	getKnockbackResistance ()F f
	getName ()Ljava/lang/String; d
	getRepairIngredient ()Lnet/minecraft/world/item/crafting/Ingredient; c
	getToughness ()F e
net/minecraft/world/item/ArmorStandItem bjy
	randomizePose (Lnet/minecraft/world/entity/decoration/ArmorStand;Ljava/util/Random;)V a
	useOn (Lnet/minecraft/world/item/context/UseOnContext;)Lnet/minecraft/world/InteractionResult; a
net/minecraft/world/item/ArrowItem bjz
	createArrow (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/entity/LivingEntity;)Lnet/minecraft/world/entity/projectile/AbstractArrow; a
net/minecraft/world/item/AxeItem bka
	DIGGABLE_MATERIALS c
	OTHER_DIGGABLE_BLOCKS d
	STRIPABLES a
	getDestroySpeed (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/block/state/BlockState;)F a
	useOn (Lnet/minecraft/world/item/context/UseOnContext;)Lnet/minecraft/world/InteractionResult; a
net/minecraft/world/item/BannerItem bkb
	appendHoverText (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/Level;Ljava/util/List;Lnet/minecraft/world/item/TooltipFlag;)V a
	appendHoverTextFromBannerBlockEntityTag (Lnet/minecraft/world/item/ItemStack;Ljava/util/List;)V a
	getColor ()Lnet/minecraft/world/item/DyeColor; b
net/minecraft/world/item/BannerPatternItem bkc
	bannerPattern a
	appendHoverText (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/Level;Ljava/util/List;Lnet/minecraft/world/item/TooltipFlag;)V a
	getBannerPattern ()Lnet/minecraft/world/level/block/entity/BannerPattern; b
	getDisplayName ()Lnet/minecraft/network/chat/MutableComponent; d
net/minecraft/world/item/BedItem bkd
	placeBlock (Lnet/minecraft/world/item/context/BlockPlaceContext;Lnet/minecraft/world/level/block/state/BlockState;)Z a
net/minecraft/world/item/BlockItem bke
	block a
	appendHoverText (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/Level;Ljava/util/List;Lnet/minecraft/world/item/TooltipFlag;)V a
	canPlace (Lnet/minecraft/world/item/context/BlockPlaceContext;Lnet/minecraft/world/level/block/state/BlockState;)Z b
	fillItemCategory (Lnet/minecraft/world/item/CreativeModeTab;Lnet/minecraft/core/NonNullList;)V a
	getBlock ()Lnet/minecraft/world/level/block/Block; e
	getDescriptionId ()Ljava/lang/String; a
	getPlaceSound (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/sounds/SoundEvent; a
	getPlacementState (Lnet/minecraft/world/item/context/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; c
	mustSurvive ()Z d
	place (Lnet/minecraft/world/item/context/BlockPlaceContext;)Lnet/minecraft/world/InteractionResult; a
	placeBlock (Lnet/minecraft/world/item/context/BlockPlaceContext;Lnet/minecraft/world/level/block/state/BlockState;)Z a
	registerBlocks (Ljava/util/Map;Lnet/minecraft/world/item/Item;)V a
	updateBlockStateFromTag (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/Level;Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/state/BlockState; a
	updateCustomBlockEntityTag (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/block/state/BlockState;)Z a
	updateCustomBlockEntityTag (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/item/ItemStack;)Z a
	updatePlacementContext (Lnet/minecraft/world/item/context/BlockPlaceContext;)Lnet/minecraft/world/item/context/BlockPlaceContext; b
	updateState (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/state/properties/Property;Ljava/lang/String;)Lnet/minecraft/world/level/block/state/BlockState; a
	useOn (Lnet/minecraft/world/item/context/UseOnContext;)Lnet/minecraft/world/InteractionResult; a
net/minecraft/world/item/BoatItem bkf
	ENTITY_PREDICATE a
	type b
	use (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResultHolder; a
net/minecraft/world/item/BoneMealItem bkg
	addGrowthParticles (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;I)V a
	growCrop (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)Z a
	growWaterPlant (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;)Z a
	useOn (Lnet/minecraft/world/item/context/UseOnContext;)Lnet/minecraft/world/InteractionResult; a
net/minecraft/world/item/BookItem bkh
	getEnchantmentValue ()I c
	isEnchantable (Lnet/minecraft/world/item/ItemStack;)Z f_
net/minecraft/world/item/BottleItem bki
	turnBottleIntoItem (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/item/ItemStack;)Lnet/minecraft/world/item/ItemStack; a
	use (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResultHolder; a
net/minecraft/world/item/BowItem bkj
	getAllSupportedProjectiles ()Ljava/util/function/Predicate; b
	getDefaultProjectileRange ()I d
	getPowerForTime (I)F a
	getUseAnimation (Lnet/minecraft/world/item/ItemStack;)Lnet/minecraft/world/item/UseAnim; d_
	getUseDuration (Lnet/minecraft/world/item/ItemStack;)I e_
	releaseUsing (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/LivingEntity;I)V a
	use (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResultHolder; a
net/minecraft/world/item/BowlFoodItem bkk
	finishUsingItem (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/LivingEntity;)Lnet/minecraft/world/item/ItemStack; a
net/minecraft/world/item/BucketItem bkl
	content a
	checkExtraContent (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/core/BlockPos;)V a
	emptyBucket (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/BlockHitResult;)Z a
	getEmptySuccessItem (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/entity/player/Player;)Lnet/minecraft/world/item/ItemStack; a
	playEmptySound (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;)V a
	use (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResultHolder; a
net/minecraft/world/item/ChorusFruitItem bkm
	finishUsingItem (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/LivingEntity;)Lnet/minecraft/world/item/ItemStack; a
net/minecraft/world/item/CompassItem bkn
	LOGGER a
	addLodestoneTags (Lnet/minecraft/resources/ResourceKey;Lnet/minecraft/core/BlockPos;Lnet/minecraft/nbt/CompoundTag;)V a
	getDescriptionId (Lnet/minecraft/world/item/ItemStack;)Ljava/lang/String; f
	getLodestoneDimension (Lnet/minecraft/nbt/CompoundTag;)Ljava/util/Optional; a
	inventoryTick (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/Entity;IZ)V a
	isFoil (Lnet/minecraft/world/item/ItemStack;)Z e
	isLodestoneCompass (Lnet/minecraft/world/item/ItemStack;)Z d
	useOn (Lnet/minecraft/world/item/context/UseOnContext;)Lnet/minecraft/world/InteractionResult; a
net/minecraft/world/item/ComplexItem bko
	getUpdatePacket (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/player/Player;)Lnet/minecraft/network/protocol/Packet; a
	isComplex ()Z ac_
net/minecraft/world/item/CreativeModeTab bkp
	TABS a
	TAB_BREWING k
	TAB_BUILDING_BLOCKS b
	TAB_COMBAT j
	TAB_DECORATIONS c
	TAB_FOOD h
	TAB_HOTBAR m
	TAB_INVENTORY n
	TAB_MATERIALS l
	TAB_MISC f
	TAB_REDSTONE d
	TAB_SEARCH g
	TAB_TOOLS i
	TAB_TRANSPORTATION e
	backgroundSuffix s
	canScroll t
	displayName q
	enchantmentCategories v
	iconItemStack w
	id o
	langId p
	recipeFolderName r
	showTitle u
	canScroll ()Z i
	fillItemList (Lnet/minecraft/core/NonNullList;)V a
	getBackgroundSuffix ()Ljava/lang/String; f
	getColumn ()I k
	getDisplayName ()Lnet/minecraft/network/chat/Component; c
	getEnchantmentCategories ()[Lnet/minecraft/world/item/enchantment/EnchantmentCategory; n
	getIconItem ()Lnet/minecraft/world/item/ItemStack; d
	getId ()I a
	getRecipeFolderName ()Ljava/lang/String; b
	hasEnchantmentCategory (Lnet/minecraft/world/item/enchantment/EnchantmentCategory;)Z a
	hideScroll ()Lnet/minecraft/world/item/CreativeModeTab; j
	hideTitle ()Lnet/minecraft/world/item/CreativeModeTab; h
	isAlignedRight ()Z m
	isTopRow ()Z l
	makeIcon ()Lnet/minecraft/world/item/ItemStack; e
	setBackgroundSuffix (Ljava/lang/String;)Lnet/minecraft/world/item/CreativeModeTab; a
	setEnchantmentCategories ([Lnet/minecraft/world/item/enchantment/EnchantmentCategory;)Lnet/minecraft/world/item/CreativeModeTab; a
	setRecipeFolderName (Ljava/lang/String;)Lnet/minecraft/world/item/CreativeModeTab; b
	showTitle ()Z g
net/minecraft/world/item/CrossbowItem bkq
	midLoadSoundPlayed d
	startSoundPlayed c
	addChargedProjectile (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/item/ItemStack;)V b
	appendHoverText (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/Level;Ljava/util/List;Lnet/minecraft/world/item/TooltipFlag;)V a
	clearChargedProjectiles (Lnet/minecraft/world/item/ItemStack;)V l
	containsChargedProjectile (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/item/Item;)Z a
	getAllSupportedProjectiles ()Ljava/util/function/Predicate; b
	getArrow (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/item/ItemStack;)Lnet/minecraft/world/entity/projectile/AbstractArrow; a
	getChargeDuration (Lnet/minecraft/world/item/ItemStack;)I g
	getChargedProjectiles (Lnet/minecraft/world/item/ItemStack;)Ljava/util/List; k
	getDefaultProjectileRange ()I d
	getPowerForTime (ILnet/minecraft/world/item/ItemStack;)F a
	getRandomShotPitch (Z)F a
	getShootingPower (Lnet/minecraft/world/item/ItemStack;)F m
	getShotPitches (Ljava/util/Random;)[F a
	getStartSound (I)Lnet/minecraft/sounds/SoundEvent; a
	getSupportedHeldProjectiles ()Ljava/util/function/Predicate; e
	getUseAnimation (Lnet/minecraft/world/item/ItemStack;)Lnet/minecraft/world/item/UseAnim; d_
	getUseDuration (Lnet/minecraft/world/item/ItemStack;)I e_
	isCharged (Lnet/minecraft/world/item/ItemStack;)Z d
	loadProjectile (Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/item/ItemStack;ZZ)Z a
	onCrossbowShot (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/item/ItemStack;)V a
	onUseTick (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/item/ItemStack;I)V a
	performShooting (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/InteractionHand;Lnet/minecraft/world/item/ItemStack;FF)V a
	releaseUsing (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/LivingEntity;I)V a
	setCharged (Lnet/minecraft/world/item/ItemStack;Z)V a
	shootProjectile (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/InteractionHand;Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/item/ItemStack;FZFFF)V a
	tryLoadProjectiles (Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/item/ItemStack;)Z a
	use (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResultHolder; a
net/minecraft/world/item/DebugStickItem bkr
	canAttackBlock (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/player/Player;)Z a
	cycleState (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/state/properties/Property;Z)Lnet/minecraft/world/level/block/state/BlockState; a
	getNameHelper (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/state/properties/Property;)Ljava/lang/String; a
	getRelative (Ljava/lang/Iterable;Ljava/lang/Object;Z)Ljava/lang/Object; a
	handleInteraction (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;ZLnet/minecraft/world/item/ItemStack;)V a
	isFoil (Lnet/minecraft/world/item/ItemStack;)Z e
	message (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/network/chat/Component;)V a
	useOn (Lnet/minecraft/world/item/context/UseOnContext;)Lnet/minecraft/world/InteractionResult; a
net/minecraft/world/item/DiggerItem bks
	attackDamageBaseline c
	blocks a
	defaultModifiers d
	speed b
	getAttackDamage ()F d
	getDefaultAttributeModifiers (Lnet/minecraft/world/entity/EquipmentSlot;)Lcom/google/common/collect/Multimap; a
	getDestroySpeed (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/block/state/BlockState;)F a
	hurtEnemy (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/entity/LivingEntity;)Z a
	mineBlock (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/Level;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/LivingEntity;)Z a
net/minecraft/world/item/DoubleHighBlockItem bkt
	placeBlock (Lnet/minecraft/world/item/context/BlockPlaceContext;Lnet/minecraft/world/level/block/state/BlockState;)Z a
net/minecraft/world/item/DyeColor bku
	$VALUES A
	BLACK p
	BLUE l
	BROWN m
	BY_FIREWORK_COLOR r
	BY_ID q
	CYAN j
	GRAY h
	GREEN n
	LIGHT_BLUE d
	LIGHT_GRAY i
	LIME f
	MAGENTA c
	ORANGE b
	PINK g
	PURPLE k
	RED o
	WHITE a
	YELLOW e
	color u
	fireworkColor y
	id s
	name t
	textColor z
	textureDiffuseColor v
	textureDiffuseColorBGR w
	textureDiffuseColors x
	byFireworkColor (I)Lnet/minecraft/world/item/DyeColor; b
	byId (I)Lnet/minecraft/world/item/DyeColor; a
	byName (Ljava/lang/String;Lnet/minecraft/world/item/DyeColor;)Lnet/minecraft/world/item/DyeColor; a
	getFireworkColor ()I g
	getId ()I b
	getMaterialColor ()Lnet/minecraft/world/level/material/MaterialColor; f
	getName ()Ljava/lang/String; c
	getSerializedName ()Ljava/lang/String; a
	getTextColor ()I h
	getTextureDiffuseColorBGR ()I d
	getTextureDiffuseColors ()[F e
net/minecraft/world/item/DyeItem bkv
	ITEM_BY_COLOR a
	dyeColor b
	byColor (Lnet/minecraft/world/item/DyeColor;)Lnet/minecraft/world/item/DyeItem; a
	getDyeColor ()Lnet/minecraft/world/item/DyeColor; d
	interactLivingEntity (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResult; a
net/minecraft/world/item/DyeableArmorItem bkw
net/minecraft/world/item/DyeableHorseArmorItem bkx
net/minecraft/world/item/DyeableLeatherItem bky
	clearColor (Lnet/minecraft/world/item/ItemStack;)V c
	dyeArmor (Lnet/minecraft/world/item/ItemStack;Ljava/util/List;)Lnet/minecraft/world/item/ItemStack; a
	getColor (Lnet/minecraft/world/item/ItemStack;)I b
	hasCustomColor (Lnet/minecraft/world/item/ItemStack;)Z a
	setColor (Lnet/minecraft/world/item/ItemStack;I)V a
net/minecraft/world/item/EggItem bkz
	use (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResultHolder; a
net/minecraft/world/item/ElytraItem bla
	isFlyEnabled (Lnet/minecraft/world/item/ItemStack;)Z d
	isValidRepairItem (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/item/ItemStack;)Z a
	use (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResultHolder; a
net/minecraft/world/item/EmptyMapItem blb
	use (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResultHolder; a
net/minecraft/world/item/EnchantedBookItem blc
	addEnchantment (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/item/enchantment/EnchantmentInstance;)V a
	appendHoverText (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/Level;Ljava/util/List;Lnet/minecraft/world/item/TooltipFlag;)V a
	createForEnchantment (Lnet/minecraft/world/item/enchantment/EnchantmentInstance;)Lnet/minecraft/world/item/ItemStack; a
	fillItemCategory (Lnet/minecraft/world/item/CreativeModeTab;Lnet/minecraft/core/NonNullList;)V a
	getEnchantments (Lnet/minecraft/world/item/ItemStack;)Lnet/minecraft/nbt/ListTag; d
	isEnchantable (Lnet/minecraft/world/item/ItemStack;)Z f_
	isFoil (Lnet/minecraft/world/item/ItemStack;)Z e
net/minecraft/world/item/EnchantedGoldenAppleItem bld
	isFoil (Lnet/minecraft/world/item/ItemStack;)Z e
net/minecraft/world/item/EndCrystalItem ble
	isFoil (Lnet/minecraft/world/item/ItemStack;)Z e
	useOn (Lnet/minecraft/world/item/context/UseOnContext;)Lnet/minecraft/world/InteractionResult; a
net/minecraft/world/item/EnderEyeItem blf
	use (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResultHolder; a
	useOn (Lnet/minecraft/world/item/context/UseOnContext;)Lnet/minecraft/world/InteractionResult; a
net/minecraft/world/item/EnderpearlItem blg
	use (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResultHolder; a
net/minecraft/world/item/ExperienceBottleItem blh
	isFoil (Lnet/minecraft/world/item/ItemStack;)Z e
	use (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResultHolder; a
net/minecraft/world/item/FireChargeItem bli
	playSound (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)V a
	useOn (Lnet/minecraft/world/item/context/UseOnContext;)Lnet/minecraft/world/InteractionResult; a
net/minecraft/world/item/FireworkRocketItem blj
	appendHoverText (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/Level;Ljava/util/List;Lnet/minecraft/world/item/TooltipFlag;)V a
	use (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResultHolder; a
	useOn (Lnet/minecraft/world/item/context/UseOnContext;)Lnet/minecraft/world/InteractionResult; a
net/minecraft/world/item/FireworkRocketItem$Shape blj$a
	$VALUES i
	BURST e
	BY_ID f
	CREEPER d
	LARGE_BALL b
	SMALL_BALL a
	STAR c
	id g
	name h
	byId (I)Lnet/minecraft/world/item/FireworkRocketItem$Shape; a
	getId ()I a
	getName ()Ljava/lang/String; b
net/minecraft/world/item/FireworkStarItem blk
	appendColors (Lnet/minecraft/network/chat/MutableComponent;[I)Lnet/minecraft/network/chat/Component; a
	appendHoverText (Lnet/minecraft/nbt/CompoundTag;Ljava/util/List;)V a
	appendHoverText (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/Level;Ljava/util/List;Lnet/minecraft/world/item/TooltipFlag;)V a
	getColorName (I)Lnet/minecraft/network/chat/Component; a
net/minecraft/world/item/FishBucketItem bll
	type a
	appendHoverText (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/Level;Ljava/util/List;Lnet/minecraft/world/item/TooltipFlag;)V a
	checkExtraContent (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/core/BlockPos;)V a
	playEmptySound (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;)V a
	spawn (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/core/BlockPos;)V a
net/minecraft/world/item/FishingRodItem blm
	getEnchantmentValue ()I c
	use (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResultHolder; a
net/minecraft/world/item/FlintAndSteelItem bln
	useOn (Lnet/minecraft/world/item/context/UseOnContext;)Lnet/minecraft/world/InteractionResult; a
net/minecraft/world/item/FoodOnAStickItem blo
	canInteractWith a
	consumeItemDamage b
	use (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResultHolder; a
net/minecraft/world/item/GameMasterBlockItem blp
	getPlacementState (Lnet/minecraft/world/item/context/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; c
net/minecraft/world/item/HangingEntityItem blq
	type a
	mayPlace (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/core/Direction;Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/core/BlockPos;)Z a
	useOn (Lnet/minecraft/world/item/context/UseOnContext;)Lnet/minecraft/world/InteractionResult; a
net/minecraft/world/item/HoeItem blr
	DIGGABLES c
	TILLABLES a
	useOn (Lnet/minecraft/world/item/context/UseOnContext;)Lnet/minecraft/world/InteractionResult; a
net/minecraft/world/item/HoneyBottleItem bls
	finishUsingItem (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/LivingEntity;)Lnet/minecraft/world/item/ItemStack; a
	getDrinkingSound ()Lnet/minecraft/sounds/SoundEvent; ae_
	getEatingSound ()Lnet/minecraft/sounds/SoundEvent; ad_
	getUseAnimation (Lnet/minecraft/world/item/ItemStack;)Lnet/minecraft/world/item/UseAnim; d_
	getUseDuration (Lnet/minecraft/world/item/ItemStack;)I e_
	use (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResultHolder; a
net/minecraft/world/item/HorseArmorItem blt
	protection a
	texture b
	getProtection ()I g
	getTexture ()Lnet/minecraft/resources/ResourceLocation; f
net/minecraft/world/item/Item blu
	BASE_ATTACK_DAMAGE_UUID f
	BASE_ATTACK_SPEED_UUID g
	BY_BLOCK e
	category i
	craftingRemainingItem j
	descriptionId k
	foodProperties l
	isFireResistant d
	maxDamage c
	maxStackSize b
	random h
	rarity a
	allowdedIn (Lnet/minecraft/world/item/CreativeModeTab;)Z a
	appendHoverText (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/Level;Ljava/util/List;Lnet/minecraft/world/item/TooltipFlag;)V a
	asItem ()Lnet/minecraft/world/item/Item; h
	byBlock (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/world/item/Item; a
	byId (I)Lnet/minecraft/world/item/Item; b
	canAttackBlock (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/player/Player;)Z a
	canBeDepleted ()Z k
	canBeHurtBy (Lnet/minecraft/world/damagesource/DamageSource;)Z a
	fillItemCategory (Lnet/minecraft/world/item/CreativeModeTab;Lnet/minecraft/core/NonNullList;)V a
	finishUsingItem (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/LivingEntity;)Lnet/minecraft/world/item/ItemStack; a
	getCraftingRemainingItem ()Lnet/minecraft/world/item/Item; o
	getDefaultAttributeModifiers (Lnet/minecraft/world/entity/EquipmentSlot;)Lcom/google/common/collect/Multimap; a
	getDefaultInstance ()Lnet/minecraft/world/item/ItemStack; r
	getDescription ()Lnet/minecraft/network/chat/Component; l
	getDescriptionId ()Ljava/lang/String; a
	getDescriptionId (Lnet/minecraft/world/item/ItemStack;)Ljava/lang/String; f
	getDestroySpeed (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/block/state/BlockState;)F a
	getDrinkingSound ()Lnet/minecraft/sounds/SoundEvent; ae_
	getEatingSound ()Lnet/minecraft/sounds/SoundEvent; ad_
	getEnchantmentValue ()I c
	getFoodProperties ()Lnet/minecraft/world/food/FoodProperties; t
	getId (Lnet/minecraft/world/item/Item;)I a
	getItemCategory ()Lnet/minecraft/world/item/CreativeModeTab; q
	getMaxDamage ()I j
	getMaxStackSize ()I i
	getName (Lnet/minecraft/world/item/ItemStack;)Lnet/minecraft/network/chat/Component; h
	getOrCreateDescriptionId ()Ljava/lang/String; m
	getPlayerPOVHitResult (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/level/ClipContext$Fluid;)Lnet/minecraft/world/phys/BlockHitResult; a
	getRarity (Lnet/minecraft/world/item/ItemStack;)Lnet/minecraft/world/item/Rarity; i
	getUseAnimation (Lnet/minecraft/world/item/ItemStack;)Lnet/minecraft/world/item/UseAnim; d_
	getUseDuration (Lnet/minecraft/world/item/ItemStack;)I e_
	hasCraftingRemainingItem ()Z p
	hurtEnemy (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/entity/LivingEntity;)Z a
	interactLivingEntity (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResult; a
	inventoryTick (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/Entity;IZ)V a
	is (Lnet/minecraft/tags/Tag;)Z a
	isComplex ()Z ac_
	isCorrectToolForDrops (Lnet/minecraft/world/level/block/state/BlockState;)Z b
	isEdible ()Z s
	isEnchantable (Lnet/minecraft/world/item/ItemStack;)Z f_
	isFireResistant ()Z u
	isFoil (Lnet/minecraft/world/item/ItemStack;)Z e
	isValidRepairItem (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/item/ItemStack;)Z a
	mineBlock (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/Level;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/LivingEntity;)Z a
	onCraftedBy (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/player/Player;)V b
	onUseTick (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/item/ItemStack;I)V a
	releaseUsing (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/LivingEntity;I)V a
	shouldOverrideMultiplayerNbt ()Z n
	use (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResultHolder; a
	useOn (Lnet/minecraft/world/item/context/UseOnContext;)Lnet/minecraft/world/InteractionResult; a
	useOnRelease (Lnet/minecraft/world/item/ItemStack;)Z j
	verifyTagAfterLoad (Lnet/minecraft/nbt/CompoundTag;)Z b
net/minecraft/world/item/Item$Properties blu$a
	category d
	craftingRemainingItem c
	foodProperties f
	isFireResistant g
	maxDamage b
	maxStackSize a
	rarity e
	craftRemainder (Lnet/minecraft/world/item/Item;)Lnet/minecraft/world/item/Item$Properties; a
	defaultDurability (I)Lnet/minecraft/world/item/Item$Properties; b
	durability (I)Lnet/minecraft/world/item/Item$Properties; c
	fireResistant ()Lnet/minecraft/world/item/Item$Properties; a
	food (Lnet/minecraft/world/food/FoodProperties;)Lnet/minecraft/world/item/Item$Properties; a
	rarity (Lnet/minecraft/world/item/Rarity;)Lnet/minecraft/world/item/Item$Properties; a
	stacksTo (I)Lnet/minecraft/world/item/Item$Properties; a
	tab (Lnet/minecraft/world/item/CreativeModeTab;)Lnet/minecraft/world/item/Item$Properties; a
net/minecraft/world/item/ItemCooldowns blv
	cooldowns a
	tickCount b
	addCooldown (Lnet/minecraft/world/item/Item;I)V a
	getCooldownPercent (Lnet/minecraft/world/item/Item;F)F a
	isOnCooldown (Lnet/minecraft/world/item/Item;)Z a
	onCooldownEnded (Lnet/minecraft/world/item/Item;)V c
	onCooldownStarted (Lnet/minecraft/world/item/Item;I)V b
	removeCooldown (Lnet/minecraft/world/item/Item;)V b
	tick ()V a
net/minecraft/world/item/ItemCooldowns$CooldownInstance blv$a
	endTime c
	startTime b
net/minecraft/world/item/ItemFrameItem blw
	mayPlace (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/core/Direction;Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/core/BlockPos;)Z a
net/minecraft/world/item/ItemNameBlockItem blx
	getDescriptionId ()Ljava/lang/String; a
net/minecraft/world/item/ItemStack bly
	ATTRIBUTE_MODIFIER_FORMAT c
	CODEC a
	EMPTY b
	LOGGER d
	LORE_STYLE e
	cachedBreakBlock l
	cachedBreakBlockResult m
	cachedPlaceBlock n
	cachedPlaceBlockResult o
	count f
	emptyCacheFlag j
	entityRepresentation k
	item h
	popTime g
	tag i
	addAttributeModifier (Lnet/minecraft/world/entity/ai/attributes/Attribute;Lnet/minecraft/world/entity/ai/attributes/AttributeModifier;Lnet/minecraft/world/entity/EquipmentSlot;)V a
	addTagElement (Ljava/lang/String;Lnet/minecraft/nbt/Tag;)V a
	appendEnchantmentNames (Ljava/util/List;Lnet/minecraft/nbt/ListTag;)V a
	areSameBlocks (Lnet/minecraft/world/level/block/state/pattern/BlockInWorld;Lnet/minecraft/world/level/block/state/pattern/BlockInWorld;)Z a
	copy ()Lnet/minecraft/world/item/ItemStack; i
	enchant (Lnet/minecraft/world/item/enchantment/Enchantment;I)V a
	expandBlockState (Ljava/lang/String;)Ljava/util/Collection; d
	finishUsingItem (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/LivingEntity;)Lnet/minecraft/world/item/ItemStack; a
	getAttributeModifiers (Lnet/minecraft/world/entity/EquipmentSlot;)Lcom/google/common/collect/Multimap; a
	getBaseRepairCost ()I B
	getCount ()I E
	getDamageValue ()I g
	getDescriptionId ()Ljava/lang/String; j
	getDestroySpeed (Lnet/minecraft/world/level/block/state/BlockState;)F a
	getDisplayName ()Lnet/minecraft/network/chat/Component; C
	getDrinkingSound ()Lnet/minecraft/sounds/SoundEvent; G
	getEatingSound ()Lnet/minecraft/sounds/SoundEvent; H
	getEnchantmentTags ()Lnet/minecraft/nbt/ListTag; q
	getEntityRepresentation ()Lnet/minecraft/world/entity/Entity; A
	getFrame ()Lnet/minecraft/world/entity/decoration/ItemFrame; z
	getHideFlags ()I J
	getHoverName ()Lnet/minecraft/network/chat/Component; r
	getItem ()Lnet/minecraft/world/item/Item; b
	getMaxDamage ()I h
	getMaxStackSize ()I c
	getOrCreateTag ()Lnet/minecraft/nbt/CompoundTag; p
	getOrCreateTagElement (Ljava/lang/String;)Lnet/minecraft/nbt/CompoundTag; a
	getPopTime ()I D
	getRarity ()Lnet/minecraft/world/item/Rarity; v
	getTag ()Lnet/minecraft/nbt/CompoundTag; o
	getTagElement (Ljava/lang/String;)Lnet/minecraft/nbt/CompoundTag; b
	getTooltipLines (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/item/TooltipFlag;)Ljava/util/List; a
	getUseAnimation ()Lnet/minecraft/world/item/UseAnim; l
	getUseDuration ()I k
	grow (I)V f
	hasAdventureModeBreakTagForBlock (Lnet/minecraft/tags/TagContainer;Lnet/minecraft/world/level/block/state/pattern/BlockInWorld;)Z a
	hasAdventureModePlaceTagForBlock (Lnet/minecraft/tags/TagContainer;Lnet/minecraft/world/level/block/state/pattern/BlockInWorld;)Z b
	hasCustomHoverName ()Z t
	hasFoil ()Z u
	hasTag ()Z n
	hideTooltipPart (Lnet/minecraft/world/item/ItemStack$TooltipPart;)V a
	hurt (ILjava/util/Random;Lnet/minecraft/server/level/ServerPlayer;)Z a
	hurtAndBreak (ILnet/minecraft/world/entity/LivingEntity;Ljava/util/function/Consumer;)V a
	hurtEnemy (Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/entity/player/Player;)V a
	interactLivingEntity (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResult; a
	inventoryTick (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/Entity;IZ)V a
	isCorrectToolForDrops (Lnet/minecraft/world/level/block/state/BlockState;)Z b
	isDamageableItem ()Z e
	isDamaged ()Z f
	isEdible ()Z F
	isEmpty ()Z a
	isEnchantable ()Z w
	isEnchanted ()Z x
	isFramed ()Z y
	isSame (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/item/ItemStack;)Z c
	isSameIgnoreDurability (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/item/ItemStack;)Z d
	isStackable ()Z d
	matches (Lnet/minecraft/world/item/ItemStack;)Z c
	matches (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/item/ItemStack;)Z b
	mineBlock (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/player/Player;)V a
	of (Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/world/item/ItemStack; a
	onCraftedBy (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/player/Player;I)V a
	onUseTick (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/LivingEntity;I)V b
	releaseUsing (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/LivingEntity;I)V a
	removeTagKey (Ljava/lang/String;)V c
	resetHoverName ()V s
	sameItem (Lnet/minecraft/world/item/ItemStack;)Z a
	sameItemStackIgnoreDurability (Lnet/minecraft/world/item/ItemStack;)Z b
	save (Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/nbt/CompoundTag; b
	setCount (I)V e
	setDamageValue (I)V b
	setEntityRepresentation (Lnet/minecraft/world/entity/Entity;)V a
	setHoverName (Lnet/minecraft/network/chat/Component;)Lnet/minecraft/world/item/ItemStack; a
	setPopTime (I)V d
	setRepairCost (I)V c
	setTag (Lnet/minecraft/nbt/CompoundTag;)V c
	shouldShowInTooltip (ILnet/minecraft/world/item/ItemStack$TooltipPart;)Z a
	shrink (I)V g
	split (I)Lnet/minecraft/world/item/ItemStack; a
	tagMatches (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/item/ItemStack;)Z a
	updateEmptyCacheFlag ()V I
	use (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResultHolder; a
	useOn (Lnet/minecraft/world/item/context/UseOnContext;)Lnet/minecraft/world/InteractionResult; a
	useOnRelease ()Z m
net/minecraft/world/item/ItemStack$TooltipPart bly$a
	$VALUES i
	ADDITIONAL f
	CAN_DESTROY d
	CAN_PLACE e
	DYE g
	ENCHANTMENTS a
	MODIFIERS b
	UNBREAKABLE c
	mask h
	getMask ()I a
net/minecraft/world/item/ItemUtils blz
	createFilledResult (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/item/ItemStack;)Lnet/minecraft/world/item/ItemStack; a
	createFilledResult (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/item/ItemStack;Z)Lnet/minecraft/world/item/ItemStack; a
	useDrink (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResultHolder; a
net/minecraft/world/item/Items bma
	ACACIA_BOAT qs
	ACACIA_BUTTON eX
	ACACIA_DOOR jQ
	ACACIA_FENCE de
	ACACIA_FENCE_GATE dW
	ACACIA_LEAVES av
	ACACIA_LOG P
	ACACIA_PLANKS t
	ACACIA_PRESSURE_PLATE cN
	ACACIA_SAPLING B
	ACACIA_SIGN lG
	ACACIA_SLAB bM
	ACACIA_STAIRS gf
	ACACIA_TRAPDOOR dw
	ACACIA_WOOD an
	ACTIVATOR_RAIL fr
	AIR a
	ALLIUM bk
	ANCIENT_DEBRIS ry
	ANDESITE g
	ANDESITE_SLAB jG
	ANDESITE_STAIRS jt
	ANDESITE_WALL eK
	ANVIL fc
	APPLE kb
	ARMOR_STAND pC
	ARROW kd
	AZURE_BLUET bl
	BAKED_POTATO pa
	BAMBOO bF
	BARREL ra
	BARRIER fJ
	BASALT dn
	BAT_SPAWN_EGG nF
	BEACON eA
	BEDROCK D
	BEEF nl
	BEEHIVE rs
	BEETROOT qf
	BEETROOT_SEEDS qg
	BEETROOT_SOUP qh
	BEE_NEST rr
	BEE_SPAWN_EGG nG
	BELL rj
	BIRCH_BOAT qq
	BIRCH_BUTTON eV
	BIRCH_DOOR jO
	BIRCH_FENCE dc
	BIRCH_FENCE_GATE dU
	BIRCH_LEAVES at
	BIRCH_LOG N
	BIRCH_PLANKS r
	BIRCH_PRESSURE_PLATE cL
	BIRCH_SAPLING z
	BIRCH_SIGN lE
	BIRCH_SLAB bK
	BIRCH_STAIRS ev
	BIRCH_TRAPDOOR du
	BIRCH_WOOD al
	BLACKSTONE rB
	BLACKSTONE_SLAB rC
	BLACKSTONE_STAIRS rD
	BLACKSTONE_WALL eP
	BLACK_BANNER qb
	BLACK_BED nd
	BLACK_CARPET gb
	BLACK_CONCRETE il
	BLACK_CONCRETE_POWDER iB
	BLACK_DYE mJ
	BLACK_GLAZED_TERRACOTTA hV
	BLACK_SHULKER_BOX hF
	BLACK_STAINED_GLASS gE
	BLACK_STAINED_GLASS_PANE gU
	BLACK_TERRACOTTA fI
	BLACK_WOOL bg
	BLAST_FURNACE rc
	BLAZE_POWDER nz
	BLAZE_ROD nr
	BLAZE_SPAWN_EGG nH
	BLUE_BANNER pX
	BLUE_BED mZ
	BLUE_CARPET fX
	BLUE_CONCRETE ih
	BLUE_CONCRETE_POWDER ix
	BLUE_DYE mF
	BLUE_GLAZED_TERRACOTTA hR
	BLUE_ICE jh
	BLUE_ORCHID bj
	BLUE_SHULKER_BOX hB
	BLUE_STAINED_GLASS gA
	BLUE_STAINED_GLASS_PANE gQ
	BLUE_TERRACOTTA fE
	BLUE_WOOL bc
	BONE mL
	BONE_BLOCK hm
	BONE_MEAL mK
	BOOK mc
	BOOKSHELF cm
	BOW kc
	BOWL kQ
	BRAIN_CORAL iO
	BRAIN_CORAL_BLOCK iJ
	BRAIN_CORAL_FAN iY
	BREAD kX
	BREWING_STAND nB
	BRICK lY
	BRICKS ck
	BRICK_SLAB bW
	BRICK_STAIRS ea
	BRICK_WALL eD
	BROWN_BANNER pY
	BROWN_BED na
	BROWN_CARPET fY
	BROWN_CONCRETE ii
	BROWN_CONCRETE_POWDER iy
	BROWN_DYE mG
	BROWN_GLAZED_TERRACOTTA hS
	BROWN_MUSHROOM bu
	BROWN_MUSHROOM_BLOCK dK
	BROWN_SHULKER_BOX hC
	BROWN_STAINED_GLASS gB
	BROWN_STAINED_GLASS_PANE gR
	BROWN_TERRACOTTA fF
	BROWN_WOOL bd
	BUBBLE_CORAL iP
	BUBBLE_CORAL_BLOCK iK
	BUBBLE_CORAL_FAN iZ
	BUCKET lK
	CACTUS cX
	CAKE mN
	CAMPFIRE rn
	CARROT oY
	CARROT_ON_A_STICK pk
	CARTOGRAPHY_TABLE rd
	CARVED_PUMPKIN dj
	CAT_SPAWN_EGG nI
	CAULDRON nC
	CAVE_SPIDER_SPAWN_EGG nJ
	CHAIN dO
	CHAINMAIL_BOOTS lf
	CHAINMAIL_CHESTPLATE ld
	CHAINMAIL_HELMET lc
	CHAINMAIL_LEGGINGS le
	CHAIN_COMMAND_BLOCK hh
	CHARCOAL kf
	CHEST cy
	CHEST_MINECART me
	CHICKEN nn
	CHICKEN_SPAWN_EGG nK
	CHIPPED_ANVIL fd
	CHISELED_NETHER_BRICKS eg
	CHISELED_POLISHED_BLACKSTONE rI
	CHISELED_QUARTZ_BLOCK fm
	CHISELED_RED_SANDSTONE hd
	CHISELED_SANDSTONE aE
	CHISELED_STONE_BRICKS dJ
	CHORUS_FLOWER cs
	CHORUS_FRUIT qd
	CHORUS_PLANT cr
	CLAY cY
	CLAY_BALL lZ
	CLOCK mj
	COAL ke
	COAL_BLOCK gd
	COAL_ORE J
	COARSE_DIRT k
	COBBLESTONE o
	COBBLESTONE_SLAB bV
	COBBLESTONE_STAIRS cG
	COBBLESTONE_WALL eB
	COBWEB aK
	COCOA_BEANS ms
	COD ml
	COD_BUCKET lW
	COD_SPAWN_EGG nL
	COMMAND_BLOCK ez
	COMMAND_BLOCK_MINECART pJ
	COMPARATOR jV
	COMPASS mh
	COMPOSTER qZ
	CONDUIT ji
	COOKED_BEEF nm
	COOKED_CHICKEN no
	COOKED_COD mp
	COOKED_MUTTON pL
	COOKED_PORKCHOP ly
	COOKED_RABBIT py
	COOKED_SALMON mq
	COOKIE ne
	CORNFLOWER br
	COW_SPAWN_EGG nM
	CRACKED_NETHER_BRICKS ef
	CRACKED_POLISHED_BLACKSTONE_BRICKS rM
	CRACKED_STONE_BRICKS dI
	CRAFTING_TABLE cB
	CREEPER_BANNER_PATTERN qU
	CREEPER_HEAD pi
	CREEPER_SPAWN_EGG nN
	CRIMSON_BUTTON eZ
	CRIMSON_DOOR jS
	CRIMSON_FENCE dg
	CRIMSON_FENCE_GATE dY
	CRIMSON_FUNGUS bw
	CRIMSON_HYPHAE ap
	CRIMSON_NYLIUM m
	CRIMSON_PLANKS v
	CRIMSON_PRESSURE_PLATE cP
	CRIMSON_ROOTS by
	CRIMSON_SIGN lI
	CRIMSON_SLAB bO
	CRIMSON_STAIRS ex
	CRIMSON_STEM R
	CRIMSON_TRAPDOOR dy
	CROSSBOW qQ
	CRYING_OBSIDIAN rA
	CUT_RED_SANDSTONE he
	CUT_RED_SANDSTONE_SLAB cb
	CUT_SANDSTONE aF
	CUT_STANDSTONE_SLAB bT
	CYAN_BANNER pV
	CYAN_BED mX
	CYAN_CARPET fV
	CYAN_CONCRETE if
	CYAN_CONCRETE_POWDER iv
	CYAN_DYE mD
	CYAN_GLAZED_TERRACOTTA hP
	CYAN_SHULKER_BOX hz
	CYAN_STAINED_GLASS gy
	CYAN_STAINED_GLASS_PANE gO
	CYAN_TERRACOTTA fC
	CYAN_WOOL ba
	DAMAGED_ANVIL fe
	DANDELION bh
	DARK_OAK_BOAT qt
	DARK_OAK_BUTTON eY
	DARK_OAK_DOOR jR
	DARK_OAK_FENCE df
	DARK_OAK_FENCE_GATE dX
	DARK_OAK_LEAVES aw
	DARK_OAK_LOG Q
	DARK_OAK_PLANKS u
	DARK_OAK_PRESSURE_PLATE cO
	DARK_OAK_SAPLING C
	DARK_OAK_SIGN lH
	DARK_OAK_SLAB bN
	DARK_OAK_STAIRS gg
	DARK_OAK_TRAPDOOR dx
	DARK_OAK_WOOD ao
	DARK_PRISMARINE gX
	DARK_PRISMARINE_SLAB cf
	DARK_PRISMARINE_STAIRS ha
	DAYLIGHT_DETECTOR fi
	DEAD_BRAIN_CORAL iS
	DEAD_BRAIN_CORAL_BLOCK iE
	DEAD_BRAIN_CORAL_FAN jd
	DEAD_BUBBLE_CORAL iT
	DEAD_BUBBLE_CORAL_BLOCK iF
	DEAD_BUBBLE_CORAL_FAN je
	DEAD_BUSH aN
	DEAD_FIRE_CORAL iU
	DEAD_FIRE_CORAL_BLOCK iG
	DEAD_FIRE_CORAL_FAN jf
	DEAD_HORN_CORAL iV
	DEAD_HORN_CORAL_BLOCK iH
	DEAD_HORN_CORAL_FAN jg
	DEAD_TUBE_CORAL iW
	DEAD_TUBE_CORAL_BLOCK iD
	DEAD_TUBE_CORAL_FAN jc
	DEBUG_STICK qy
	DETECTOR_RAIL aI
	DIAMOND kg
	DIAMOND_AXE kI
	DIAMOND_BLOCK cA
	DIAMOND_BOOTS ln
	DIAMOND_CHESTPLATE ll
	DIAMOND_HELMET lk
	DIAMOND_HOE kJ
	DIAMOND_HORSE_ARMOR pF
	DIAMOND_LEGGINGS lm
	DIAMOND_ORE cz
	DIAMOND_PICKAXE kH
	DIAMOND_SHOVEL kG
	DIAMOND_SWORD kF
	DIORITE e
	DIORITE_SLAB jJ
	DIORITE_STAIRS jw
	DIORITE_WALL eO
	DIRT j
	DISPENSER aC
	DOLPHIN_SPAWN_EGG nO
	DONKEY_SPAWN_EGG nP
	DRAGON_BREATH qi
	DRAGON_EGG en
	DRAGON_HEAD pj
	DRIED_KELP ni
	DRIED_KELP_BLOCK ma
	DROPPER fs
	DROWNED_SPAWN_EGG nQ
	EGG mg
	ELDER_GUARDIAN_SPAWN_EGG nR
	ELYTRA qo
	EMERALD oV
	EMERALD_BLOCK et
	EMERALD_ORE eq
	ENCHANTED_BOOK pq
	ENCHANTED_GOLDEN_APPLE lB
	ENCHANTING_TABLE ej
	ENDERMAN_SPAWN_EGG nS
	ENDERMITE_SPAWN_EGG nT
	ENDER_CHEST er
	ENDER_EYE nD
	ENDER_PEARL nq
	END_CRYSTAL qc
	END_PORTAL_FRAME ek
	END_ROD cq
	END_STONE el
	END_STONE_BRICKS em
	END_STONE_BRICK_SLAB jC
	END_STONE_BRICK_STAIRS jo
	END_STONE_BRICK_WALL eN
	EVOKER_SPAWN_EGG nU
	EXPERIENCE_BOTTLE oR
	FARMLAND cC
	FEATHER kT
	FERMENTED_SPIDER_EYE ny
	FERN aM
	FILLED_MAP nf
	FIREWORK_ROCKET po
	FIREWORK_STAR pp
	FIRE_CHARGE oS
	FIRE_CORAL iQ
	FIRE_CORAL_BLOCK iL
	FIRE_CORAL_FAN ja
	FISHING_ROD mi
	FLETCHING_TABLE re
	FLINT lw
	FLINT_AND_STEEL ka
	FLOWER_BANNER_PATTERN qT
	FLOWER_POT oX
	FOX_SPAWN_EGG nV
	FURNACE cD
	FURNACE_MINECART mf
	GHAST_SPAWN_EGG nW
	GHAST_TEAR ns
	GILDED_BLACKSTONE rE
	GLASS az
	GLASS_BOTTLE nw
	GLASS_PANE dP
	GLISTERING_MELON_SLICE nE
	GLOBE_BANNER_PATTER qX
	GLOWSTONE dq
	GLOWSTONE_DUST mk
	GOLDEN_APPLE lA
	GOLDEN_AXE ky
	GOLDEN_BOOTS lr
	GOLDEN_CARROT pd
	GOLDEN_CHESTPLATE lp
	GOLDEN_HELMET lo
	GOLDEN_HOE kz
	GOLDEN_HORSE_ARMOR pE
	GOLDEN_LEGGINGS lq
	GOLDEN_PICKAXE kx
	GOLDEN_SHOVEL kw
	GOLDEN_SWORD kv
	GOLD_BLOCK bG
	GOLD_INGOT ki
	GOLD_NUGGET nt
	GOLD_ORE H
	GRANITE c
	GRANITE_SLAB jF
	GRANITE_STAIRS js
	GRANITE_WALL eH
	GRASS aL
	GRASS_BLOCK i
	GRASS_PATH gi
	GRAVEL G
	GRAY_BANNER pT
	GRAY_BED mV
	GRAY_CARPET fT
	GRAY_CONCRETE id
	GRAY_CONCRETE_POWDER it
	GRAY_DYE mB
	GRAY_GLAZED_TERRACOTTA hN
	GRAY_SHULKER_BOX hx
	GRAY_STAINED_GLASS gw
	GRAY_STAINED_GLASS_PANE gM
	GRAY_TERRACOTTA fA
	GRAY_WOOL aY
	GREEN_BANNER pZ
	GREEN_BED nb
	GREEN_CARPET fZ
	GREEN_CONCRETE ij
	GREEN_CONCRETE_POWDER iz
	GREEN_DYE mH
	GREEN_GLAZED_TERRACOTTA hT
	GREEN_SHULKER_BOX hD
	GREEN_STAINED_GLASS gC
	GREEN_STAINED_GLASS_PANE gS
	GREEN_TERRACOTTA fG
	GREEN_WOOL be
	GRINDSTONE rf
	GUARDIAN_SPAWN_EGG nX
	GUNPOWDER kU
	HAY_BLOCK fL
	HEART_OF_THE_SEA qP
	HEAVY_WEIGHTED_PRESSURE_PLATE fh
	HOGLIN_SPAWN_EGG nY
	HONEYCOMB rq
	HONEYCOMB_BLOCK rv
	HONEY_BLOCK ru
	HONEY_BOTTLE rt
	HOPPER fl
	HOPPER_MINECART pu
	HORN_CORAL iR
	HORN_CORAL_BLOCK iM
	HORN_CORAL_FAN jb
	HORSE_SPAWN_EGG nZ
	HUSK_SPAWN_EGG oa
	ICE cV
	INFESTED_CHISELED_STONE_BRICKS dF
	INFESTED_COBBLESTONE dB
	INFESTED_CRACKED_STONE_BRICKS dE
	INFESTED_MOSSY_STONE_BRICKS dD
	INFESTED_STONE dA
	INFESTED_STONE_BRICKS dC
	INK_SAC mr
	IRON_AXE kD
	IRON_BARS dN
	IRON_BLOCK bH
	IRON_BOOTS lj
	IRON_CHESTPLATE lh
	IRON_DOOR jL
	IRON_HELMET lg
	IRON_HOE kE
	IRON_HORSE_ARMOR pD
	IRON_INGOT kh
	IRON_LEGGINGS li
	IRON_NUGGET qw
	IRON_ORE I
	IRON_PICKAXE kC
	IRON_SHOVEL kB
	IRON_SWORD kA
	IRON_TRAPDOOR fK
	ITEM_FRAME oW
	JACK_O_LANTERN dr
	JIGSAW jX
	JUKEBOX cZ
	JUNGLE_BOAT qr
	JUNGLE_BUTTON eW
	JUNGLE_DOOR jP
	JUNGLE_FENCE dd
	JUNGLE_FENCE_GATE dV
	JUNGLE_LEAVES au
	JUNGLE_LOG O
	JUNGLE_PLANKS s
	JUNGLE_PRESSURE_PLATE cM
	JUNGLE_SAPLING A
	JUNGLE_SIGN lF
	JUNGLE_SLAB bL
	JUNGLE_STAIRS ew
	JUNGLE_TRAPDOOR dv
	JUNGLE_WOOD am
	KELP bE
	KNOWLEDGE_BOOK qx
	LADDER cE
	LANTERN rk
	LAPIS_BLOCK aB
	LAPIS_LAZULI mt
	LAPIS_ORE aA
	LARGE_FERN go
	LAVA_BUCKET lM
	LEAD pH
	LEATHER lS
	LEATHER_BOOTS lb
	LEATHER_CHESTPLATE kZ
	LEATHER_HELMET kY
	LEATHER_HORSE_ARMOR pG
	LEATHER_LEGGINGS la
	LECTERN rg
	LEVER cH
	LIGHT_BLUE_BANNER pP
	LIGHT_BLUE_BED mR
	LIGHT_BLUE_CARPET fP
	LIGHT_BLUE_CONCRETE hZ
	LIGHT_BLUE_CONCRETE_POWDER ip
	LIGHT_BLUE_DYE mx
	LIGHT_BLUE_GLAZED_TERRACOTTA hJ
	LIGHT_BLUE_SHULKER_BOX ht
	LIGHT_BLUE_STAINED_GLASS gs
	LIGHT_BLUE_STAINED_GLASS_PANE gI
	LIGHT_BLUE_TERRACOTTA fw
	LIGHT_BLUE_WOOL aU
	LIGHT_GRAY_BANNER pU
	LIGHT_GRAY_BED mW
	LIGHT_GRAY_CARPET fU
	LIGHT_GRAY_CONCRETE ie
	LIGHT_GRAY_CONCRETE_POWDER iu
	LIGHT_GRAY_DYE mC
	LIGHT_GRAY_GLAZED_TERRACOTTA hO
	LIGHT_GRAY_SHULKER_BOX hy
	LIGHT_GRAY_STAINED_GLASS gx
	LIGHT_GRAY_STAINED_GLASS_PANE gN
	LIGHT_GRAY_TERRACOTTA fB
	LIGHT_GRAY_WOOL aZ
	LIGHT_WEIGHTED_PRESSURE_PLATE fg
	LILAC gk
	LILY_OF_THE_VALLEY bs
	LILY_PAD ed
	LIME_BANNER pR
	LIME_BED mT
	LIME_CARPET fR
	LIME_CONCRETE ib
	LIME_CONCRETE_POWDER ir
	LIME_DYE mz
	LIME_GLAZED_TERRACOTTA hL
	LIME_SHULKER_BOX hv
	LIME_STAINED_GLASS gu
	LIME_STAINED_GLASS_PANE gK
	LIME_TERRACOTTA fy
	LIME_WOOL aW
	LINGERING_POTION qm
	LLAMA_SPAWN_EGG ob
	LODESTONE rw
	LOOM qS
	MAGENTA_BANNER pO
	MAGENTA_BED mQ
	MAGENTA_CARPET fO
	MAGENTA_CONCRETE hY
	MAGENTA_CONCRETE_POWDER io
	MAGENTA_DYE mw
	MAGENTA_GLAZED_TERRACOTTA hI
	MAGENTA_SHULKER_BOX hs
	MAGENTA_STAINED_GLASS gr
	MAGENTA_STAINED_GLASS_PANE gH
	MAGENTA_TERRACOTTA fv
	MAGENTA_WOOL aT
	MAGMA_BLOCK hi
	MAGMA_CREAM nA
	MAGMA_CUBE_SPAWN_EGG oc
	MAP pc
	MELON dQ
	MELON_SEEDS nk
	MELON_SLICE nh
	MILK_BUCKET lT
	MINECART lN
	MOJANG_BANNER_PATTERN qW
	MOOSHROOM_SPAWN_EGG od
	MOSSY_COBBLESTONE cn
	MOSSY_COBBLESTONE_SLAB jB
	MOSSY_COBBLESTONE_STAIRS jn
	MOSSY_COBBLESTONE_WALL eC
	MOSSY_STONE_BRICKS dH
	MOSSY_STONE_BRICK_SLAB jz
	MOSSY_STONE_BRICK_STAIRS jl
	MOSSY_STONE_BRICK_WALL eG
	MULE_SPAWN_EGG oe
	MUSHROOM_STEM dM
	MUSHROOM_STEW kR
	MUSIC_DISC_11 qJ
	MUSIC_DISC_13 qz
	MUSIC_DISC_BLOCKS qB
	MUSIC_DISC_CAT qA
	MUSIC_DISC_CHIRP qC
	MUSIC_DISC_FAR qD
	MUSIC_DISC_MALL qE
	MUSIC_DISC_MELLOHI qF
	MUSIC_DISC_PIGSTEP qL
	MUSIC_DISC_STAL qG
	MUSIC_DISC_STRAD qH
	MUSIC_DISC_WAIT qK
	MUSIC_DISC_WARD qI
	MUTTON pK
	MYCELIUM ec
	NAME_TAG pI
	NAUTILUS_SHELL qO
	NETHERITE_AXE kN
	NETHERITE_BLOCK rx
	NETHERITE_BOOTS lv
	NETHERITE_CHESTPLATE lt
	NETHERITE_HELMET ls
	NETHERITE_HOE kO
	NETHERITE_INGOT kj
	NETHERITE_LEGGINGS lu
	NETHERITE_PICKAXE kM
	NETHERITE_SCRAP kk
	NETHERITE_SHOVEL kL
	NETHERITE_SWORD kK
	NETHERRACK dk
	NETHER_BRICK pr
	NETHER_BRICKS ee
	NETHER_BRICK_FENCE eh
	NETHER_BRICK_SLAB bY
	NETHER_BRICK_STAIRS ei
	NETHER_BRICK_WALL eJ
	NETHER_GOLD_ORE K
	NETHER_QUARTZ_ORE fk
	NETHER_SPROUTS bA
	NETHER_STAR pm
	NETHER_WART nu
	NETHER_WART_BLOCK hj
	NOTE_BLOCK aG
	OAK_BOAT lR
	OAK_BUTTON eT
	OAK_DOOR jM
	OAK_FENCE da
	OAK_FENCE_GATE dS
	OAK_LEAVES ar
	OAK_LOG L
	OAK_PLANKS p
	OAK_PRESSURE_PLATE cJ
	OAK_SAPLING x
	OAK_SIGN lC
	OAK_SLAB bI
	OAK_STAIRS cx
	OAK_TRAPDOOR ds
	OAK_WOOD aj
	OBSERVER ho
	OBSIDIAN co
	OCELOT_SPAWN_EGG of
	ORANGE_BANNER pN
	ORANGE_BED mP
	ORANGE_CARPET fN
	ORANGE_CONCRETE hX
	ORANGE_CONCRETE_POWDER in
	ORANGE_DYE mv
	ORANGE_GLAZED_TERRACOTTA hH
	ORANGE_SHULKER_BOX hr
	ORANGE_STAINED_GLASS gq
	ORANGE_STAINED_GLASS_PANE gG
	ORANGE_TERRACOTTA fu
	ORANGE_TULIP bn
	ORANGE_WOOL aS
	OXEYE_DAISY bq
	PACKED_ICE ge
	PAINTING lz
	PANDA_SPAWN_EGG og
	PAPER mb
	PARROT_SPAWN_EGG oh
	PEONY gm
	PETRIFIED_OAK_SLAB bU
	PHANTOM_MEMBRANE qN
	PHANTOM_SPAWN_EGG oi
	PIGLIN_BANNER_PATTERN qY
	PIGLIN_BRUTE_SPAWN_EGG ol
	PIGLIN_SPAWN_EGG ok
	PIG_SPAWN_EGG oj
	PILLAGER_SPAWN_EGG om
	PINK_BANNER pS
	PINK_BED mU
	PINK_CARPET fS
	PINK_CONCRETE ic
	PINK_CONCRETE_POWDER is
	PINK_DYE mA
	PINK_GLAZED_TERRACOTTA hM
	PINK_SHULKER_BOX hw
	PINK_STAINED_GLASS gv
	PINK_STAINED_GLASS_PANE gL
	PINK_TERRACOTTA fz
	PINK_TULIP bp
	PINK_WOOL aX
	PISTON aQ
	PLAYER_HEAD pg
	PODZOL l
	POISONOUS_POTATO pb
	POLAR_BEAR_SPAWN_EGG on
	POLISHED_ANDESITE h
	POLISHED_ANDESITE_SLAB jI
	POLISHED_ANDESITE_STAIRS jv
	POLISHED_BASALT do
	POLISHED_BLACKSTONE rF
	POLISHED_BLACKSTONE_BRICKS rJ
	POLISHED_BLACKSTONE_BRICK_SLAB rK
	POLISHED_BLACKSTONE_BRICK_STAIRS rL
	POLISHED_BLACKSTONE_BRICK_WALL eR
	POLISHED_BLACKSTONE_BUTTON fb
	POLISHED_BLACKSTONE_PRESSURE_PLATE cR
	POLISHED_BLACKSTONE_SLAB rG
	POLISHED_BLACKSTONE_STAIRS rH
	POLISHED_BLACKSTONE_WALL eQ
	POLISHED_DIORITE f
	POLISHED_DIORITE_SLAB jA
	POLISHED_DIORITE_STAIRS jm
	POLISHED_GRANITE d
	POLISHED_GRANITE_SLAB jx
	POLISHED_GRANITE_STAIRS jj
	POPPED_CHORUS_FRUIT qe
	POPPY bi
	PORKCHOP lx
	POTATO oZ
	POTION nv
	POWERED_RAIL aH
	PRISMARINE gV
	PRISMARINE_BRICKS gW
	PRISMARINE_BRICK_SLAB ce
	PRISMARINE_BRICK_STAIRS gZ
	PRISMARINE_CRYSTALS pw
	PRISMARINE_SHARD pv
	PRISMARINE_SLAB cd
	PRISMARINE_STAIRS gY
	PRISMARINE_WALL eE
	PUFFERFISH mo
	PUFFERFISH_BUCKET lU
	PUFFERFISH_SPAWN_EGG oo
	PUMPKIN di
	PUMPKIN_PIE pn
	PUMPKIN_SEEDS nj
	PURPLE_BANNER pW
	PURPLE_BED mY
	PURPLE_CARPET fW
	PURPLE_CONCRETE ig
	PURPLE_CONCRETE_POWDER iw
	PURPLE_DYE mE
	PURPLE_GLAZED_TERRACOTTA hQ
	PURPLE_SHULKER_BOX hA
	PURPLE_STAINED_GLASS gz
	PURPLE_STAINED_GLASS_PANE gP
	PURPLE_TERRACOTTA fD
	PURPLE_WOOL bb
	PURPUR_BLOCK ct
	PURPUR_PILLAR cu
	PURPUR_SLAB cc
	PURPUR_STAIRS cv
	QUARTZ ps
	QUARTZ_BLOCK fn
	QUARTZ_BRICKS fo
	QUARTZ_PILLAR fp
	QUARTZ_SLAB bZ
	QUARTZ_STAIRS fq
	RABBIT px
	RABBIT_FOOT pA
	RABBIT_HIDE pB
	RABBIT_SPAWN_EGG op
	RABBIT_STEW pz
	RAIL cF
	RAVAGER_SPAWN_EGG oq
	REDSTONE lP
	REDSTONE_BLOCK fj
	REDSTONE_LAMP eo
	REDSTONE_ORE cS
	REDSTONE_TORCH cT
	RED_BANNER qa
	RED_BED nc
	RED_CARPET ga
	RED_CONCRETE ik
	RED_CONCRETE_POWDER iA
	RED_DYE mI
	RED_GLAZED_TERRACOTTA hU
	RED_MUSHROOM bv
	RED_MUSHROOM_BLOCK dL
	RED_NETHER_BRICKS hl
	RED_NETHER_BRICK_SLAB jH
	RED_NETHER_BRICK_STAIRS ju
	RED_NETHER_BRICK_WALL eL
	RED_SAND F
	RED_SANDSTONE hc
	RED_SANDSTONE_SLAB ca
	RED_SANDSTONE_STAIRS hf
	RED_SANDSTONE_WALL eF
	RED_SHULKER_BOX hE
	RED_STAINED_GLASS gD
	RED_STAINED_GLASS_PANE gT
	RED_TERRACOTTA fH
	RED_TULIP bm
	RED_WOOL bf
	REPEATER jU
	REPEATING_COMMAND_BLOCK hg
	RESPAWN_ANCHOR rN
	ROSE_BUSH gl
	ROTTEN_FLESH np
	SADDLE lO
	SALMON mm
	SALMON_BUCKET lV
	SALMON_SPAWN_EGG or
	SAND E
	SANDSTONE aD
	SANDSTONE_SLAB bS
	SANDSTONE_STAIRS ep
	SANDSTONE_WALL eM
	SCAFFOLDING jK
	SCUTE jZ
	SEAGRASS aO
	SEA_LANTERN hb
	SEA_PICKLE aP
	SHEARS ng
	SHEEP_SPAWN_EGG os
	SHIELD qn
	SHROOMLIGHT rp
	SHULKER_BOX hp
	SHULKER_SHELL qv
	SHULKER_SPAWN_EGG ot
	SILVERFISH_SPAWN_EGG ou
	SKELETON_HORSE_SPAWN_EGG ow
	SKELETON_SKULL pe
	SKELETON_SPAWN_EGG ov
	SKULL_BANNER_PATTERN qV
	SLIME_BALL md
	SLIME_BLOCK gh
	SLIME_SPAWN_EGG ox
	SMITHING_TABLE rh
	SMOKER rb
	SMOOTH_QUARTZ cg
	SMOOTH_QUARTZ_SLAB jE
	SMOOTH_QUARTZ_STAIRS jr
	SMOOTH_RED_SANDSTONE ch
	SMOOTH_RED_SANDSTONE_SLAB jy
	SMOOTH_RED_SANDSTONE_STAIRS jk
	SMOOTH_SANDSTONE ci
	SMOOTH_SANDSTONE_SLAB jD
	SMOOTH_SANDSTONE_STAIRS jq
	SMOOTH_STONE cj
	SMOOTH_STONE_SLAB bR
	SNOW cU
	SNOWBALL lQ
	SNOW_BLOCK cW
	SOUL_CAMPFIRE ro
	SOUL_LANTERN rl
	SOUL_SAND dl
	SOUL_SOIL dm
	SOUL_TORCH dp
	SPAWNER cw
	SPECTRAL_ARROW qk
	SPIDER_EYE nx
	SPIDER_SPAWN_EGG oy
	SPLASH_POTION qj
	SPONGE ax
	SPRUCE_BOAT qp
	SPRUCE_BUTTON eU
	SPRUCE_DOOR jN
	SPRUCE_FENCE db
	SPRUCE_FENCE_GATE dT
	SPRUCE_LEAVES as
	SPRUCE_LOG M
	SPRUCE_PLANKS q
	SPRUCE_PRESSURE_PLATE cK
	SPRUCE_SAPLING y
	SPRUCE_SIGN lD
	SPRUCE_SLAB bJ
	SPRUCE_STAIRS eu
	SPRUCE_TRAPDOOR dt
	SPRUCE_WOOD ak
	SQUID_SPAWN_EGG oz
	STICK kP
	STICKY_PISTON aJ
	STONE b
	STONECUTTER ri
	STONE_AXE kt
	STONE_BRICKS dG
	STONE_BRICK_SLAB bX
	STONE_BRICK_STAIRS eb
	STONE_BRICK_WALL eI
	STONE_BUTTON eS
	STONE_HOE ku
	STONE_PICKAXE ks
	STONE_PRESSURE_PLATE cI
	STONE_SHOVEL kr
	STONE_SLAB bQ
	STONE_STAIRS jp
	STONE_SWORD kq
	STRAY_SPAWN_EGG oA
	STRIDER_SPAWN_EGG oB
	STRING kS
	STRIPPED_ACACIA_LOG X
	STRIPPED_ACACIA_WOOD af
	STRIPPED_BIRCH_LOG V
	STRIPPED_BIRCH_WOOD ad
	STRIPPED_CRIMSON_HYPHAE ah
	STRIPPED_CRIMSON_STEM Z
	STRIPPED_DARK_OAK_LOG Y
	STRIPPED_DARK_OAK_WOOD ag
	STRIPPED_JUNGLE_LOG W
	STRIPPED_JUNGLE_WOOD ae
	STRIPPED_OAK_LOG T
	STRIPPED_OAK_WOOD ab
	STRIPPED_SPRUCE_LOG U
	STRIPPED_SPRUCE_WOOD ac
	STRIPPED_WARPED_HYPHAE ai
	STRIPPED_WARPED_STEM aa
	STRUCTURE_BLOCK jW
	STRUCTURE_VOID hn
	SUGAR mM
	SUGAR_CANE bD
	SUNFLOWER gj
	SUSPICIOUS_STEW qR
	SWEET_BERRIES rm
	TALL_GRASS gn
	TARGET rz
	TERRACOTTA gc
	TIPPED_ARROW ql
	TNT cl
	TNT_MINECART pt
	TORCH cp
	TOTEM_OF_UNDYING qu
	TRADER_LLAMA_SPAWN_EGG oC
	TRAPPED_CHEST ff
	TRIDENT qM
	TRIPWIRE_HOOK es
	TROPICAL_FISH mn
	TROPICAL_FISH_BUCKET lX
	TROPICAL_FISH_SPAWN_EGG oD
	TUBE_CORAL iN
	TUBE_CORAL_BLOCK iI
	TUBE_CORAL_FAN iX
	TURTLE_EGG iC
	TURTLE_HELMET jY
	TURTLE_SPAWN_EGG oE
	TWISTING_VINES bC
	VEX_SPAWN_EGG oF
	VILLAGER_SPAWN_EGG oG
	VINDICATOR_SPAWN_EGG oH
	VINE dR
	WANDERING_TRADER_SPAWN_EGG oI
	WARPED_BUTTON fa
	WARPED_DOOR jT
	WARPED_FENCE dh
	WARPED_FENCE_GATE dZ
	WARPED_FUNGUS bx
	WARPED_FUNGUS_ON_A_STICK pl
	WARPED_HYPHAE aq
	WARPED_NYLIUM n
	WARPED_PLANKS w
	WARPED_PRESSURE_PLATE cQ
	WARPED_ROOTS bz
	WARPED_SIGN lJ
	WARPED_SLAB bP
	WARPED_STAIRS ey
	WARPED_STEM S
	WARPED_TRAPDOOR dz
	WARPED_WART_BLOCK hk
	WATER_BUCKET lL
	WEEPING_VINES bB
	WET_SPONGE ay
	WHEAT kW
	WHEAT_SEEDS kV
	WHITE_BANNER pM
	WHITE_BED mO
	WHITE_CARPET fM
	WHITE_CONCRETE hW
	WHITE_CONCRETE_POWDER im
	WHITE_DYE mu
	WHITE_GLAZED_TERRACOTTA hG
	WHITE_SHULKER_BOX hq
	WHITE_STAINED_GLASS gp
	WHITE_STAINED_GLASS_PANE gF
	WHITE_TERRACOTTA ft
	WHITE_TULIP bo
	WHITE_WOOL aR
	WITCH_SPAWN_EGG oJ
	WITHER_ROSE bt
	WITHER_SKELETON_SKULL pf
	WITHER_SKELETON_SPAWN_EGG oK
	WOLF_SPAWN_EGG oL
	WOODEN_AXE ko
	WOODEN_HOE kp
	WOODEN_PICKAXE kn
	WOODEN_SHOVEL km
	WOODEN_SWORD kl
	WRITABLE_BOOK oT
	WRITTEN_BOOK oU
	YELLOW_BANNER pQ
	YELLOW_BED mS
	YELLOW_CARPET fQ
	YELLOW_CONCRETE ia
	YELLOW_CONCRETE_POWDER iq
	YELLOW_DYE my
	YELLOW_GLAZED_TERRACOTTA hK
	YELLOW_SHULKER_BOX hu
	YELLOW_STAINED_GLASS gt
	YELLOW_STAINED_GLASS_PANE gJ
	YELLOW_TERRACOTTA fx
	YELLOW_WOOL aV
	ZOGLIN_SPAWN_EGG oM
	ZOMBIE_HEAD ph
	ZOMBIE_HORSE_SPAWN_EGG oO
	ZOMBIE_SPAWN_EGG oN
	ZOMBIE_VILLAGER_SPAWN_EGG oP
	ZOMBIFIED_PIGLIN_SPAWN_EGG oQ
	registerBlock (Lnet/minecraft/world/item/BlockItem;)Lnet/minecraft/world/item/Item; a
	registerBlock (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/world/item/Item; a
	registerBlock (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/world/item/CreativeModeTab;)Lnet/minecraft/world/item/Item; a
	registerBlock (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/world/item/Item;)Lnet/minecraft/world/item/Item; a
	registerItem (Ljava/lang/String;Lnet/minecraft/world/item/Item;)Lnet/minecraft/world/item/Item; a
	registerItem (Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/world/item/Item;)Lnet/minecraft/world/item/Item; a
net/minecraft/world/item/KnowledgeBookItem bmb
	LOGGER a
	use (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResultHolder; a
net/minecraft/world/item/LeadItem bmc
	bindPlayerMobs (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/InteractionResult; a
	useOn (Lnet/minecraft/world/item/context/UseOnContext;)Lnet/minecraft/world/InteractionResult; a
net/minecraft/world/item/LingeringPotionItem bmd
	appendHoverText (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/Level;Ljava/util/List;Lnet/minecraft/world/item/TooltipFlag;)V a
	use (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResultHolder; a
net/minecraft/world/item/MapItem bme
	appendHoverText (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/Level;Ljava/util/List;Lnet/minecraft/world/item/TooltipFlag;)V a
	create (Lnet/minecraft/world/level/Level;IIBZZ)Lnet/minecraft/world/item/ItemStack; a
	createAndStoreSavedData (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/Level;IIIZZLnet/minecraft/resources/ResourceKey;)Lnet/minecraft/world/level/saveddata/maps/MapItemSavedData; a
	getColor (Lnet/minecraft/world/item/ItemStack;)I g
	getCorrectStateForFluidBlock (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
	getMapId (Lnet/minecraft/world/item/ItemStack;)I d
	getOrCreateSavedData (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/Level;)Lnet/minecraft/world/level/saveddata/maps/MapItemSavedData; b
	getSavedData (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/Level;)Lnet/minecraft/world/level/saveddata/maps/MapItemSavedData; a
	getUpdatePacket (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/player/Player;)Lnet/minecraft/network/protocol/Packet; a
	inventoryTick (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/Entity;IZ)V a
	isLand ([Lnet/minecraft/world/level/biome/Biome;III)Z a
	lockMap (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/item/ItemStack;)V a
	makeKey (I)Ljava/lang/String; a
	onCraftedBy (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/player/Player;)V b
	renderBiomePreviewMap (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/item/ItemStack;)V a
	scaleMap (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/Level;I)V a
	update (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/level/saveddata/maps/MapItemSavedData;)V a
	useOn (Lnet/minecraft/world/item/context/UseOnContext;)Lnet/minecraft/world/InteractionResult; a
net/minecraft/world/item/MilkBucketItem bmf
	finishUsingItem (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/LivingEntity;)Lnet/minecraft/world/item/ItemStack; a
	getUseAnimation (Lnet/minecraft/world/item/ItemStack;)Lnet/minecraft/world/item/UseAnim; d_
	getUseDuration (Lnet/minecraft/world/item/ItemStack;)I e_
	use (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResultHolder; a
net/minecraft/world/item/MinecartItem bmg
	DISPENSE_ITEM_BEHAVIOR a
	type b
	useOn (Lnet/minecraft/world/item/context/UseOnContext;)Lnet/minecraft/world/InteractionResult; a
net/minecraft/world/item/NameTagItem bmh
	interactLivingEntity (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResult; a
net/minecraft/world/item/PickaxeItem bmi
	DIGGABLES a
	getDestroySpeed (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/block/state/BlockState;)F a
	isCorrectToolForDrops (Lnet/minecraft/world/level/block/state/BlockState;)Z b
net/minecraft/world/item/PlayerHeadItem bmj
	getName (Lnet/minecraft/world/item/ItemStack;)Lnet/minecraft/network/chat/Component; h
	verifyTagAfterLoad (Lnet/minecraft/nbt/CompoundTag;)Z b
net/minecraft/world/item/PotionItem bmk
	appendHoverText (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/Level;Ljava/util/List;Lnet/minecraft/world/item/TooltipFlag;)V a
	fillItemCategory (Lnet/minecraft/world/item/CreativeModeTab;Lnet/minecraft/core/NonNullList;)V a
	finishUsingItem (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/LivingEntity;)Lnet/minecraft/world/item/ItemStack; a
	getDefaultInstance ()Lnet/minecraft/world/item/ItemStack; r
	getDescriptionId (Lnet/minecraft/world/item/ItemStack;)Ljava/lang/String; f
	getUseAnimation (Lnet/minecraft/world/item/ItemStack;)Lnet/minecraft/world/item/UseAnim; d_
	getUseDuration (Lnet/minecraft/world/item/ItemStack;)I e_
	isFoil (Lnet/minecraft/world/item/ItemStack;)Z e
	use (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResultHolder; a
net/minecraft/world/item/ProjectileWeaponItem bml
	ARROW_ONLY a
	ARROW_OR_FIREWORK b
	getAllSupportedProjectiles ()Ljava/util/function/Predicate; b
	getDefaultProjectileRange ()I d
	getEnchantmentValue ()I c
	getHeldProjectile (Lnet/minecraft/world/entity/LivingEntity;Ljava/util/function/Predicate;)Lnet/minecraft/world/item/ItemStack; a
	getSupportedHeldProjectiles ()Ljava/util/function/Predicate; e
net/minecraft/world/item/ProjectileWeaponItem$Type bml$a
	$VALUES c
	BOW a
	CROSSBOW b
net/minecraft/world/item/Rarity bmm
	$VALUES f
	COMMON a
	EPIC d
	RARE c
	UNCOMMON b
	color e
net/minecraft/world/item/RecordItem bmn
	BY_NAME a
	analogOutput b
	sound c
	appendHoverText (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/Level;Ljava/util/List;Lnet/minecraft/world/item/TooltipFlag;)V a
	getAnalogOutput ()I f
	getBySound (Lnet/minecraft/sounds/SoundEvent;)Lnet/minecraft/world/item/RecordItem; a
	getDisplayName ()Lnet/minecraft/network/chat/MutableComponent; g
	getSound ()Lnet/minecraft/sounds/SoundEvent; v
	useOn (Lnet/minecraft/world/item/context/UseOnContext;)Lnet/minecraft/world/InteractionResult; a
net/minecraft/world/item/SaddleItem bmo
	interactLivingEntity (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResult; a
net/minecraft/world/item/ScaffoldingBlockItem bmp
	mustSurvive ()Z d
	updatePlacementContext (Lnet/minecraft/world/item/context/BlockPlaceContext;)Lnet/minecraft/world/item/context/BlockPlaceContext; b
net/minecraft/world/item/ServerItemCooldowns bmq
	player a
	onCooldownEnded (Lnet/minecraft/world/item/Item;)V c
	onCooldownStarted (Lnet/minecraft/world/item/Item;I)V b
net/minecraft/world/item/ShearsItem bmr
	getDestroySpeed (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/block/state/BlockState;)F a
	isCorrectToolForDrops (Lnet/minecraft/world/level/block/state/BlockState;)Z b
	mineBlock (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/Level;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/LivingEntity;)Z a
net/minecraft/world/item/ShieldItem bms
	appendHoverText (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/Level;Ljava/util/List;Lnet/minecraft/world/item/TooltipFlag;)V a
	getColor (Lnet/minecraft/world/item/ItemStack;)Lnet/minecraft/world/item/DyeColor; d
	getDescriptionId (Lnet/minecraft/world/item/ItemStack;)Ljava/lang/String; f
	getUseAnimation (Lnet/minecraft/world/item/ItemStack;)Lnet/minecraft/world/item/UseAnim; d_
	getUseDuration (Lnet/minecraft/world/item/ItemStack;)I e_
	isValidRepairItem (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/item/ItemStack;)Z a
	use (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResultHolder; a
net/minecraft/world/item/ShovelItem bmt
	DIGGABLES c
	FLATTENABLES a
	isCorrectToolForDrops (Lnet/minecraft/world/level/block/state/BlockState;)Z b
	useOn (Lnet/minecraft/world/item/context/UseOnContext;)Lnet/minecraft/world/InteractionResult; a
net/minecraft/world/item/SignItem bmu
	updateCustomBlockEntityTag (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/block/state/BlockState;)Z a
net/minecraft/world/item/SimpleFoiledItem bmv
	isFoil (Lnet/minecraft/world/item/ItemStack;)Z e
net/minecraft/world/item/SnowballItem bmw
	use (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResultHolder; a
net/minecraft/world/item/SpawnEggItem bmx
	BY_ID a
	color1 b
	color2 c
	defaultType d
	byId (Lnet/minecraft/world/entity/EntityType;)Lnet/minecraft/world/item/SpawnEggItem; a
	eggs ()Ljava/lang/Iterable; f
	getColor (I)I a
	getType (Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/world/entity/EntityType; a
	spawnOffspringFromSpawnEgg (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/entity/Mob;Lnet/minecraft/world/entity/EntityType;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/phys/Vec3;Lnet/minecraft/world/item/ItemStack;)Ljava/util/Optional; a
	spawnsEntity (Lnet/minecraft/nbt/CompoundTag;Lnet/minecraft/world/entity/EntityType;)Z a
	use (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResultHolder; a
	useOn (Lnet/minecraft/world/item/context/UseOnContext;)Lnet/minecraft/world/InteractionResult; a
net/minecraft/world/item/SpectralArrowItem bmy
	createArrow (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/entity/LivingEntity;)Lnet/minecraft/world/entity/projectile/AbstractArrow; a
net/minecraft/world/item/SplashPotionItem bmz
	use (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResultHolder; a
net/minecraft/world/item/StandingAndWallBlockItem bna
	wallBlock a
	getPlacementState (Lnet/minecraft/world/item/context/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; c
	registerBlocks (Ljava/util/Map;Lnet/minecraft/world/item/Item;)V a
net/minecraft/world/item/SuspiciousStewItem bnb
	finishUsingItem (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/LivingEntity;)Lnet/minecraft/world/item/ItemStack; a
	saveMobEffect (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/effect/MobEffect;I)V a
net/minecraft/world/item/SwordItem bnc
	attackDamage a
	defaultModifiers b
	canAttackBlock (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/player/Player;)Z a
	getDamage ()F f
	getDefaultAttributeModifiers (Lnet/minecraft/world/entity/EquipmentSlot;)Lcom/google/common/collect/Multimap; a
	getDestroySpeed (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/block/state/BlockState;)F a
	hurtEnemy (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/entity/LivingEntity;)Z a
	isCorrectToolForDrops (Lnet/minecraft/world/level/block/state/BlockState;)Z b
	mineBlock (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/Level;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/LivingEntity;)Z a
net/minecraft/world/item/ThrowablePotionItem bnd
	use (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResultHolder; a
net/minecraft/world/item/Tier bne
	getAttackDamageBonus ()F c
	getEnchantmentValue ()I e
	getLevel ()I d
	getRepairIngredient ()Lnet/minecraft/world/item/crafting/Ingredient; f
	getSpeed ()F b
	getUses ()I a
net/minecraft/world/item/TieredItem bnf
	tier a
	getEnchantmentValue ()I c
	getTier ()Lnet/minecraft/world/item/Tier; g
	isValidRepairItem (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/item/ItemStack;)Z a
net/minecraft/world/item/Tiers bng
	$VALUES m
	DIAMOND d
	GOLD e
	IRON c
	NETHERITE f
	STONE b
	WOOD a
	damage j
	enchantmentValue k
	level g
	repairIngredient l
	speed i
	uses h
	getAttackDamageBonus ()F c
	getEnchantmentValue ()I e
	getLevel ()I d
	getRepairIngredient ()Lnet/minecraft/world/item/crafting/Ingredient; f
	getSpeed ()F b
	getUses ()I a
net/minecraft/world/item/TippedArrowItem bnh
	appendHoverText (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/Level;Ljava/util/List;Lnet/minecraft/world/item/TooltipFlag;)V a
	fillItemCategory (Lnet/minecraft/world/item/CreativeModeTab;Lnet/minecraft/core/NonNullList;)V a
	getDefaultInstance ()Lnet/minecraft/world/item/ItemStack; r
	getDescriptionId (Lnet/minecraft/world/item/ItemStack;)Ljava/lang/String; f
net/minecraft/world/item/TooltipFlag bni
	isAdvanced ()Z a
net/minecraft/world/item/TooltipFlag$Default bni$a
	$VALUES d
	ADVANCED b
	NORMAL a
	advanced c
	isAdvanced ()Z a
net/minecraft/world/item/TridentItem bnj
	defaultModifiers a
	canAttackBlock (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/player/Player;)Z a
	getDefaultAttributeModifiers (Lnet/minecraft/world/entity/EquipmentSlot;)Lcom/google/common/collect/Multimap; a
	getEnchantmentValue ()I c
	getUseAnimation (Lnet/minecraft/world/item/ItemStack;)Lnet/minecraft/world/item/UseAnim; d_
	getUseDuration (Lnet/minecraft/world/item/ItemStack;)I e_
	hurtEnemy (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/entity/LivingEntity;)Z a
	mineBlock (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/Level;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/LivingEntity;)Z a
	releaseUsing (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/LivingEntity;I)V a
	use (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResultHolder; a
net/minecraft/world/item/UseAnim bnk
	$VALUES h
	BLOCK d
	BOW e
	CROSSBOW g
	DRINK c
	EAT b
	NONE a
	SPEAR f
net/minecraft/world/item/Vanishable bnl
net/minecraft/world/item/WaterLilyBlockItem bnm
	use (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResultHolder; a
	useOn (Lnet/minecraft/world/item/context/UseOnContext;)Lnet/minecraft/world/InteractionResult; a
net/minecraft/world/item/Wearable bnn
net/minecraft/world/item/WritableBookItem bno
	makeSureTagIsValid (Lnet/minecraft/nbt/CompoundTag;)Z a
	use (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResultHolder; a
	useOn (Lnet/minecraft/world/item/context/UseOnContext;)Lnet/minecraft/world/InteractionResult; a
net/minecraft/world/item/WrittenBookItem bnp
	appendHoverText (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/Level;Ljava/util/List;Lnet/minecraft/world/item/TooltipFlag;)V a
	getGeneration (Lnet/minecraft/world/item/ItemStack;)I d
	getName (Lnet/minecraft/world/item/ItemStack;)Lnet/minecraft/network/chat/Component; h
	getPageCount (Lnet/minecraft/world/item/ItemStack;)I g
	isFoil (Lnet/minecraft/world/item/ItemStack;)Z e
	makeSureTagIsValid (Lnet/minecraft/nbt/CompoundTag;)Z a
	resolveBookComponents (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/world/entity/player/Player;)Z a
	use (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResultHolder; a
	useOn (Lnet/minecraft/world/item/context/UseOnContext;)Lnet/minecraft/world/InteractionResult; a
net/minecraft/world/item/alchemy/Potion bnq
	effects b
	name a
	byName (Ljava/lang/String;)Lnet/minecraft/world/item/alchemy/Potion; a
	getEffects ()Ljava/util/List; a
	getName (Ljava/lang/String;)Ljava/lang/String; b
	hasInstantEffects ()Z b
net/minecraft/world/item/alchemy/PotionBrewing bnr
	ALLOWED_CONTAINER d
	ALLOWED_CONTAINERS c
	CONTAINER_MIXES b
	POTION_MIXES a
	addContainer (Lnet/minecraft/world/item/Item;)V a
	addContainerRecipe (Lnet/minecraft/world/item/Item;Lnet/minecraft/world/item/Item;Lnet/minecraft/world/item/Item;)V a
	addMix (Lnet/minecraft/world/item/alchemy/Potion;Lnet/minecraft/world/item/Item;Lnet/minecraft/world/item/alchemy/Potion;)V a
	bootStrap ()V a
	hasContainerMix (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/item/ItemStack;)Z b
	hasMix (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/item/ItemStack;)Z a
	hasPotionMix (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/item/ItemStack;)Z c
	isBrewablePotion (Lnet/minecraft/world/item/alchemy/Potion;)Z a
	isContainerIngredient (Lnet/minecraft/world/item/ItemStack;)Z b
	isIngredient (Lnet/minecraft/world/item/ItemStack;)Z a
	isPotionIngredient (Lnet/minecraft/world/item/ItemStack;)Z c
	mix (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/item/ItemStack;)Lnet/minecraft/world/item/ItemStack; d
net/minecraft/world/item/alchemy/PotionBrewing$Mix bnr$a
	from a
	ingredient b
	to c
net/minecraft/world/item/alchemy/PotionUtils bns
	NO_EFFECT a
	addPotionTooltip (Lnet/minecraft/world/item/ItemStack;Ljava/util/List;F)V a
	getAllEffects (Lnet/minecraft/nbt/CompoundTag;)Ljava/util/List; a
	getAllEffects (Lnet/minecraft/world/item/alchemy/Potion;Ljava/util/Collection;)Ljava/util/List; a
	getColor (Ljava/util/Collection;)I a
	getColor (Lnet/minecraft/world/item/ItemStack;)I c
	getColor (Lnet/minecraft/world/item/alchemy/Potion;)I a
	getCustomEffects (Lnet/minecraft/nbt/CompoundTag;)Ljava/util/List; b
	getCustomEffects (Lnet/minecraft/nbt/CompoundTag;Ljava/util/List;)V a
	getCustomEffects (Lnet/minecraft/world/item/ItemStack;)Ljava/util/List; b
	getMobEffects (Lnet/minecraft/world/item/ItemStack;)Ljava/util/List; a
	getPotion (Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/world/item/alchemy/Potion; c
	getPotion (Lnet/minecraft/world/item/ItemStack;)Lnet/minecraft/world/item/alchemy/Potion; d
	setCustomEffects (Lnet/minecraft/world/item/ItemStack;Ljava/util/Collection;)Lnet/minecraft/world/item/ItemStack; a
	setPotion (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/item/alchemy/Potion;)Lnet/minecraft/world/item/ItemStack; a
net/minecraft/world/item/alchemy/Potions bnt
	AWKWARD e
	EMPTY a
	FIRE_RESISTANCE m
	HARMING B
	HEALING z
	INVISIBILITY h
	LEAPING j
	LONG_FIRE_RESISTANCE n
	LONG_INVISIBILITY i
	LONG_LEAPING k
	LONG_NIGHT_VISION g
	LONG_POISON E
	LONG_REGENERATION H
	LONG_SLOWNESS s
	LONG_SLOW_FALLING Q
	LONG_STRENGTH K
	LONG_SWIFTNESS p
	LONG_TURTLE_MASTER v
	LONG_WATER_BREATHING y
	LONG_WEAKNESS N
	LUCK O
	MUNDANE c
	NIGHT_VISION f
	POISON D
	REGENERATION G
	SLOWNESS r
	SLOW_FALLING P
	STRENGTH J
	STRONG_HARMING C
	STRONG_HEALING A
	STRONG_LEAPING l
	STRONG_POISON F
	STRONG_REGENERATION I
	STRONG_SLOWNESS t
	STRONG_STRENGTH L
	STRONG_SWIFTNESS q
	STRONG_TURTLE_MASTER w
	SWIFTNESS o
	THICK d
	TURTLE_MASTER u
	WATER b
	WATER_BREATHING x
	WEAKNESS M
	register (Ljava/lang/String;Lnet/minecraft/world/item/alchemy/Potion;)Lnet/minecraft/world/item/alchemy/Potion; a
net/minecraft/world/item/context/BlockPlaceContext bnv
	relativePos b
	replaceClicked a
	at (Lnet/minecraft/world/item/context/BlockPlaceContext;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;)Lnet/minecraft/world/item/context/BlockPlaceContext; a
	canPlace ()Z b
	getClickedPos ()Lnet/minecraft/core/BlockPos; a
	getNearestLookingDirection ()Lnet/minecraft/core/Direction; d
	getNearestLookingDirections ()[Lnet/minecraft/core/Direction; e
	replacingClickedOnBlock ()Z c
net/minecraft/world/item/context/DirectionalPlaceContext bnw
	direction b
	canPlace ()Z b
	getClickedPos ()Lnet/minecraft/core/BlockPos; a
	getHorizontalDirection ()Lnet/minecraft/core/Direction; f
	getNearestLookingDirection ()Lnet/minecraft/core/Direction; d
	getNearestLookingDirections ()[Lnet/minecraft/core/Direction; e
	getRotation ()F h
	isSecondaryUseActive ()Z g
	replacingClickedOnBlock ()Z c
net/minecraft/world/item/context/UseOnContext bnx
	hand b
	hitResult c
	itemStack e
	level d
	player a
	getClickLocation ()Lnet/minecraft/world/phys/Vec3; k
	getClickedFace ()Lnet/minecraft/core/Direction; j
	getClickedPos ()Lnet/minecraft/core/BlockPos; a
	getHand ()Lnet/minecraft/world/InteractionHand; o
	getHitResult ()Lnet/minecraft/world/phys/BlockHitResult; i
	getHorizontalDirection ()Lnet/minecraft/core/Direction; f
	getItemInHand ()Lnet/minecraft/world/item/ItemStack; m
	getLevel ()Lnet/minecraft/world/level/Level; p
	getPlayer ()Lnet/minecraft/world/entity/player/Player; n
	getRotation ()F h
	isInside ()Z l
	isSecondaryUseActive ()Z g
net/minecraft/world/item/crafting/AbstractCookingRecipe bnz
	cookingTime g
	experience f
	group c
	id b
	ingredient d
	result e
	type a
	assemble (Lnet/minecraft/world/Container;)Lnet/minecraft/world/item/ItemStack; a
	canCraftInDimensions (II)Z a
	getCookingTime ()I e
	getExperience ()F b
	getGroup ()Ljava/lang/String; d
	getId ()Lnet/minecraft/resources/ResourceLocation; f
	getIngredients ()Lnet/minecraft/core/NonNullList; a
	getResultItem ()Lnet/minecraft/world/item/ItemStack; c
	getType ()Lnet/minecraft/world/item/crafting/RecipeType; g
	matches (Lnet/minecraft/world/Container;Lnet/minecraft/world/level/Level;)Z a
net/minecraft/world/item/crafting/ArmorDyeRecipe boa
	assemble (Lnet/minecraft/world/Container;)Lnet/minecraft/world/item/ItemStack; a
	assemble (Lnet/minecraft/world/inventory/CraftingContainer;)Lnet/minecraft/world/item/ItemStack; a
	canCraftInDimensions (II)Z a
	getSerializer ()Lnet/minecraft/world/item/crafting/RecipeSerializer; ag_
	matches (Lnet/minecraft/world/Container;Lnet/minecraft/world/level/Level;)Z a
	matches (Lnet/minecraft/world/inventory/CraftingContainer;Lnet/minecraft/world/level/Level;)Z a
net/minecraft/world/item/crafting/BannerDuplicateRecipe bob
	assemble (Lnet/minecraft/world/Container;)Lnet/minecraft/world/item/ItemStack; a
	assemble (Lnet/minecraft/world/inventory/CraftingContainer;)Lnet/minecraft/world/item/ItemStack; a
	canCraftInDimensions (II)Z a
	getRemainingItems (Lnet/minecraft/world/Container;)Lnet/minecraft/core/NonNullList; b
	getRemainingItems (Lnet/minecraft/world/inventory/CraftingContainer;)Lnet/minecraft/core/NonNullList; b
	getSerializer ()Lnet/minecraft/world/item/crafting/RecipeSerializer; ag_
	matches (Lnet/minecraft/world/Container;Lnet/minecraft/world/level/Level;)Z a
	matches (Lnet/minecraft/world/inventory/CraftingContainer;Lnet/minecraft/world/level/Level;)Z a
net/minecraft/world/item/crafting/BlastingRecipe boc
	getSerializer ()Lnet/minecraft/world/item/crafting/RecipeSerializer; ag_
	getToastSymbol ()Lnet/minecraft/world/item/ItemStack; h
net/minecraft/world/item/crafting/BookCloningRecipe bod
	assemble (Lnet/minecraft/world/Container;)Lnet/minecraft/world/item/ItemStack; a
	assemble (Lnet/minecraft/world/inventory/CraftingContainer;)Lnet/minecraft/world/item/ItemStack; a
	canCraftInDimensions (II)Z a
	getRemainingItems (Lnet/minecraft/world/Container;)Lnet/minecraft/core/NonNullList; b
	getRemainingItems (Lnet/minecraft/world/inventory/CraftingContainer;)Lnet/minecraft/core/NonNullList; b
	getSerializer ()Lnet/minecraft/world/item/crafting/RecipeSerializer; ag_
	matches (Lnet/minecraft/world/Container;Lnet/minecraft/world/level/Level;)Z a
	matches (Lnet/minecraft/world/inventory/CraftingContainer;Lnet/minecraft/world/level/Level;)Z a
net/minecraft/world/item/crafting/CampfireCookingRecipe boe
	getSerializer ()Lnet/minecraft/world/item/crafting/RecipeSerializer; ag_
	getToastSymbol ()Lnet/minecraft/world/item/ItemStack; h
net/minecraft/world/item/crafting/CraftingRecipe bof
	getType ()Lnet/minecraft/world/item/crafting/RecipeType; g
net/minecraft/world/item/crafting/CustomRecipe bog
	id a
	getId ()Lnet/minecraft/resources/ResourceLocation; f
	getResultItem ()Lnet/minecraft/world/item/ItemStack; c
	isSpecial ()Z af_
net/minecraft/world/item/crafting/FireworkRocketRecipe boh
	GUNPOWDER_INGREDIENT b
	PAPER_INGREDIENT a
	STAR_INGREDIENT c
	assemble (Lnet/minecraft/world/Container;)Lnet/minecraft/world/item/ItemStack; a
	assemble (Lnet/minecraft/world/inventory/CraftingContainer;)Lnet/minecraft/world/item/ItemStack; a
	canCraftInDimensions (II)Z a
	getResultItem ()Lnet/minecraft/world/item/ItemStack; c
	getSerializer ()Lnet/minecraft/world/item/crafting/RecipeSerializer; ag_
	matches (Lnet/minecraft/world/Container;Lnet/minecraft/world/level/Level;)Z a
	matches (Lnet/minecraft/world/inventory/CraftingContainer;Lnet/minecraft/world/level/Level;)Z a
net/minecraft/world/item/crafting/FireworkStarFadeRecipe boi
	STAR_INGREDIENT a
	assemble (Lnet/minecraft/world/Container;)Lnet/minecraft/world/item/ItemStack; a
	assemble (Lnet/minecraft/world/inventory/CraftingContainer;)Lnet/minecraft/world/item/ItemStack; a
	canCraftInDimensions (II)Z a
	getSerializer ()Lnet/minecraft/world/item/crafting/RecipeSerializer; ag_
	matches (Lnet/minecraft/world/Container;Lnet/minecraft/world/level/Level;)Z a
	matches (Lnet/minecraft/world/inventory/CraftingContainer;Lnet/minecraft/world/level/Level;)Z a
net/minecraft/world/item/crafting/FireworkStarRecipe boj
	FLICKER_INGREDIENT c
	GUNPOWDER_INGREDIENT e
	SHAPE_BY_ITEM d
	SHAPE_INGREDIENT a
	TRAIL_INGREDIENT b
	assemble (Lnet/minecraft/world/Container;)Lnet/minecraft/world/item/ItemStack; a
	assemble (Lnet/minecraft/world/inventory/CraftingContainer;)Lnet/minecraft/world/item/ItemStack; a
	canCraftInDimensions (II)Z a
	getResultItem ()Lnet/minecraft/world/item/ItemStack; c
	getSerializer ()Lnet/minecraft/world/item/crafting/RecipeSerializer; ag_
	matches (Lnet/minecraft/world/Container;Lnet/minecraft/world/level/Level;)Z a
	matches (Lnet/minecraft/world/inventory/CraftingContainer;Lnet/minecraft/world/level/Level;)Z a
net/minecraft/world/item/crafting/Ingredient bok
	EMPTY a
	itemStacks c
	stackingIds d
	values b
	dissolve ()V f
	fromJson (Lcom/google/gson/JsonElement;)Lnet/minecraft/world/item/crafting/Ingredient; a
	fromNetwork (Lnet/minecraft/network/FriendlyByteBuf;)Lnet/minecraft/world/item/crafting/Ingredient; b
	fromValues (Ljava/util/stream/Stream;)Lnet/minecraft/world/item/crafting/Ingredient; b
	getItems ()[Lnet/minecraft/world/item/ItemStack; a
	getStackingIds ()Lit/unimi/dsi/fastutil/ints/IntList; b
	isEmpty ()Z d
	of ()Lnet/minecraft/world/item/crafting/Ingredient; e
	of (Ljava/util/stream/Stream;)Lnet/minecraft/world/item/crafting/Ingredient; a
	of (Lnet/minecraft/tags/Tag;)Lnet/minecraft/world/item/crafting/Ingredient; a
	of ([Lnet/minecraft/world/item/ItemStack;)Lnet/minecraft/world/item/crafting/Ingredient; a
	of ([Lnet/minecraft/world/level/ItemLike;)Lnet/minecraft/world/item/crafting/Ingredient; a
	test (Lnet/minecraft/world/item/ItemStack;)Z a
	toJson ()Lcom/google/gson/JsonElement; c
	toNetwork (Lnet/minecraft/network/FriendlyByteBuf;)V a
	valueFromJson (Lcom/google/gson/JsonObject;)Lnet/minecraft/world/item/crafting/Ingredient$Value; a
net/minecraft/world/item/crafting/Ingredient$ItemValue bok$a
	item a
	getItems ()Ljava/util/Collection; a
	serialize ()Lcom/google/gson/JsonObject; b
net/minecraft/world/item/crafting/Ingredient$TagValue bok$b
	tag a
	getItems ()Ljava/util/Collection; a
	serialize ()Lcom/google/gson/JsonObject; b
net/minecraft/world/item/crafting/Ingredient$Value bok$c
	getItems ()Ljava/util/Collection; a
	serialize ()Lcom/google/gson/JsonObject; b
net/minecraft/world/item/crafting/MapCloningRecipe bol
	assemble (Lnet/minecraft/world/Container;)Lnet/minecraft/world/item/ItemStack; a
	assemble (Lnet/minecraft/world/inventory/CraftingContainer;)Lnet/minecraft/world/item/ItemStack; a
	canCraftInDimensions (II)Z a
	getSerializer ()Lnet/minecraft/world/item/crafting/RecipeSerializer; ag_
	matches (Lnet/minecraft/world/Container;Lnet/minecraft/world/level/Level;)Z a
	matches (Lnet/minecraft/world/inventory/CraftingContainer;Lnet/minecraft/world/level/Level;)Z a
net/minecraft/world/item/crafting/MapExtendingRecipe bom
	assemble (Lnet/minecraft/world/Container;)Lnet/minecraft/world/item/ItemStack; a
	assemble (Lnet/minecraft/world/inventory/CraftingContainer;)Lnet/minecraft/world/item/ItemStack; a
	getSerializer ()Lnet/minecraft/world/item/crafting/RecipeSerializer; ag_
	isExplorationMap (Lnet/minecraft/world/level/saveddata/maps/MapItemSavedData;)Z a
	isSpecial ()Z af_
	matches (Lnet/minecraft/world/Container;Lnet/minecraft/world/level/Level;)Z a
	matches (Lnet/minecraft/world/inventory/CraftingContainer;Lnet/minecraft/world/level/Level;)Z a
net/minecraft/world/item/crafting/Recipe bon
	assemble (Lnet/minecraft/world/Container;)Lnet/minecraft/world/item/ItemStack; a
	canCraftInDimensions (II)Z a
	getGroup ()Ljava/lang/String; d
	getId ()Lnet/minecraft/resources/ResourceLocation; f
	getIngredients ()Lnet/minecraft/core/NonNullList; a
	getRemainingItems (Lnet/minecraft/world/Container;)Lnet/minecraft/core/NonNullList; b
	getResultItem ()Lnet/minecraft/world/item/ItemStack; c
	getSerializer ()Lnet/minecraft/world/item/crafting/RecipeSerializer; ag_
	getToastSymbol ()Lnet/minecraft/world/item/ItemStack; h
	getType ()Lnet/minecraft/world/item/crafting/RecipeType; g
	isSpecial ()Z af_
	matches (Lnet/minecraft/world/Container;Lnet/minecraft/world/level/Level;)Z a
net/minecraft/world/item/crafting/RecipeManager boo
	GSON a
	LOGGER b
	hasErrors d
	recipes c
	apply (Ljava/lang/Object;Lnet/minecraft/server/packs/resources/ResourceManager;Lnet/minecraft/util/profiling/ProfilerFiller;)V a
	apply (Ljava/util/Map;Lnet/minecraft/server/packs/resources/ResourceManager;Lnet/minecraft/util/profiling/ProfilerFiller;)V a
	byKey (Lnet/minecraft/resources/ResourceLocation;)Ljava/util/Optional; a
	byType (Lnet/minecraft/world/item/crafting/RecipeType;)Ljava/util/Map; b
	fromJson (Lnet/minecraft/resources/ResourceLocation;Lcom/google/gson/JsonObject;)Lnet/minecraft/world/item/crafting/Recipe; a
	getAllRecipesFor (Lnet/minecraft/world/item/crafting/RecipeType;)Ljava/util/List; a
	getRecipeFor (Lnet/minecraft/world/item/crafting/RecipeType;Lnet/minecraft/world/Container;Lnet/minecraft/world/level/Level;)Ljava/util/Optional; a
	getRecipeIds ()Ljava/util/stream/Stream; d
	getRecipes ()Ljava/util/Collection; b
	getRecipesFor (Lnet/minecraft/world/item/crafting/RecipeType;Lnet/minecraft/world/Container;Lnet/minecraft/world/level/Level;)Ljava/util/List; b
	getRemainingItemsFor (Lnet/minecraft/world/item/crafting/RecipeType;Lnet/minecraft/world/Container;Lnet/minecraft/world/level/Level;)Lnet/minecraft/core/NonNullList; c
	hadErrorsLoading ()Z a
	replaceRecipes (Ljava/lang/Iterable;)V a
net/minecraft/world/item/crafting/RecipeSerializer bop
	ARMOR_DYE c
	BANNER_DUPLICATE k
	BLASTING_RECIPE q
	BOOK_CLONING d
	CAMPFIRE_COOKING_RECIPE s
	FIREWORK_ROCKET g
	FIREWORK_STAR h
	FIREWORK_STAR_FADE i
	MAP_CLONING e
	MAP_EXTENDING f
	REPAIR_ITEM o
	SHAPED_RECIPE a
	SHAPELESS_RECIPE b
	SHIELD_DECORATION l
	SHULKER_BOX_COLORING m
	SMELTING_RECIPE p
	SMITHING u
	SMOKING_RECIPE r
	STONECUTTER t
	SUSPICIOUS_STEW n
	TIPPED_ARROW j
	fromJson (Lnet/minecraft/resources/ResourceLocation;Lcom/google/gson/JsonObject;)Lnet/minecraft/world/item/crafting/Recipe; a
	fromNetwork (Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/network/FriendlyByteBuf;)Lnet/minecraft/world/item/crafting/Recipe; a
	register (Ljava/lang/String;Lnet/minecraft/world/item/crafting/RecipeSerializer;)Lnet/minecraft/world/item/crafting/RecipeSerializer; a
	toNetwork (Lnet/minecraft/network/FriendlyByteBuf;Lnet/minecraft/world/item/crafting/Recipe;)V a
net/minecraft/world/item/crafting/RecipeType boq
	BLASTING c
	CAMPFIRE_COOKING e
	CRAFTING a
	SMELTING b
	SMITHING g
	SMOKING d
	STONECUTTING f
	register (Ljava/lang/String;)Lnet/minecraft/world/item/crafting/RecipeType; a
	tryMatch (Lnet/minecraft/world/item/crafting/Recipe;Lnet/minecraft/world/level/Level;Lnet/minecraft/world/Container;)Ljava/util/Optional; a
net/minecraft/world/item/crafting/RepairItemRecipe bor
	assemble (Lnet/minecraft/world/Container;)Lnet/minecraft/world/item/ItemStack; a
	assemble (Lnet/minecraft/world/inventory/CraftingContainer;)Lnet/minecraft/world/item/ItemStack; a
	canCraftInDimensions (II)Z a
	getSerializer ()Lnet/minecraft/world/item/crafting/RecipeSerializer; ag_
	matches (Lnet/minecraft/world/Container;Lnet/minecraft/world/level/Level;)Z a
	matches (Lnet/minecraft/world/inventory/CraftingContainer;Lnet/minecraft/world/level/Level;)Z a
net/minecraft/world/item/crafting/ShapedRecipe bos
	group f
	height b
	id e
	recipeItems c
	result d
	width a
	assemble (Lnet/minecraft/world/Container;)Lnet/minecraft/world/item/ItemStack; a
	assemble (Lnet/minecraft/world/inventory/CraftingContainer;)Lnet/minecraft/world/item/ItemStack; a
	canCraftInDimensions (II)Z a
	dissolvePattern ([Ljava/lang/String;Ljava/util/Map;II)Lnet/minecraft/core/NonNullList; b
	firstNonSpace (Ljava/lang/String;)I a
	getGroup ()Ljava/lang/String; d
	getHeight ()I j
	getId ()Lnet/minecraft/resources/ResourceLocation; f
	getIngredients ()Lnet/minecraft/core/NonNullList; a
	getResultItem ()Lnet/minecraft/world/item/ItemStack; c
	getSerializer ()Lnet/minecraft/world/item/crafting/RecipeSerializer; ag_
	getWidth ()I i
	itemFromJson (Lcom/google/gson/JsonObject;)Lnet/minecraft/world/item/ItemStack; a
	keyFromJson (Lcom/google/gson/JsonObject;)Ljava/util/Map; c
	lastNonSpace (Ljava/lang/String;)I b
	matches (Lnet/minecraft/world/Container;Lnet/minecraft/world/level/Level;)Z a
	matches (Lnet/minecraft/world/inventory/CraftingContainer;IIZ)Z a
	matches (Lnet/minecraft/world/inventory/CraftingContainer;Lnet/minecraft/world/level/Level;)Z a
	patternFromJson (Lcom/google/gson/JsonArray;)[Ljava/lang/String; b
	shrink ([Ljava/lang/String;)[Ljava/lang/String; a
net/minecraft/world/item/crafting/ShapedRecipe$Serializer bos$a
	fromJson (Lnet/minecraft/resources/ResourceLocation;Lcom/google/gson/JsonObject;)Lnet/minecraft/world/item/crafting/Recipe; a
	fromJson (Lnet/minecraft/resources/ResourceLocation;Lcom/google/gson/JsonObject;)Lnet/minecraft/world/item/crafting/ShapedRecipe; b
	fromNetwork (Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/network/FriendlyByteBuf;)Lnet/minecraft/world/item/crafting/Recipe; a
	fromNetwork (Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/network/FriendlyByteBuf;)Lnet/minecraft/world/item/crafting/ShapedRecipe; b
	toNetwork (Lnet/minecraft/network/FriendlyByteBuf;Lnet/minecraft/world/item/crafting/Recipe;)V a
	toNetwork (Lnet/minecraft/network/FriendlyByteBuf;Lnet/minecraft/world/item/crafting/ShapedRecipe;)V a
net/minecraft/world/item/crafting/ShapelessRecipe bot
	group b
	id a
	ingredients d
	result c
	assemble (Lnet/minecraft/world/Container;)Lnet/minecraft/world/item/ItemStack; a
	assemble (Lnet/minecraft/world/inventory/CraftingContainer;)Lnet/minecraft/world/item/ItemStack; a
	canCraftInDimensions (II)Z a
	getGroup ()Ljava/lang/String; d
	getId ()Lnet/minecraft/resources/ResourceLocation; f
	getIngredients ()Lnet/minecraft/core/NonNullList; a
	getResultItem ()Lnet/minecraft/world/item/ItemStack; c
	getSerializer ()Lnet/minecraft/world/item/crafting/RecipeSerializer; ag_
	matches (Lnet/minecraft/world/Container;Lnet/minecraft/world/level/Level;)Z a
	matches (Lnet/minecraft/world/inventory/CraftingContainer;Lnet/minecraft/world/level/Level;)Z a
net/minecraft/world/item/crafting/ShapelessRecipe$Serializer bot$a
	fromJson (Lnet/minecraft/resources/ResourceLocation;Lcom/google/gson/JsonObject;)Lnet/minecraft/world/item/crafting/Recipe; a
	fromJson (Lnet/minecraft/resources/ResourceLocation;Lcom/google/gson/JsonObject;)Lnet/minecraft/world/item/crafting/ShapelessRecipe; b
	fromNetwork (Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/network/FriendlyByteBuf;)Lnet/minecraft/world/item/crafting/Recipe; a
	fromNetwork (Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/network/FriendlyByteBuf;)Lnet/minecraft/world/item/crafting/ShapelessRecipe; b
	itemsFromJson (Lcom/google/gson/JsonArray;)Lnet/minecraft/core/NonNullList; a
	toNetwork (Lnet/minecraft/network/FriendlyByteBuf;Lnet/minecraft/world/item/crafting/Recipe;)V a
	toNetwork (Lnet/minecraft/network/FriendlyByteBuf;Lnet/minecraft/world/item/crafting/ShapelessRecipe;)V a
net/minecraft/world/item/crafting/ShieldDecorationRecipe bou
	assemble (Lnet/minecraft/world/Container;)Lnet/minecraft/world/item/ItemStack; a
	assemble (Lnet/minecraft/world/inventory/CraftingContainer;)Lnet/minecraft/world/item/ItemStack; a
	canCraftInDimensions (II)Z a
	getSerializer ()Lnet/minecraft/world/item/crafting/RecipeSerializer; ag_
	matches (Lnet/minecraft/world/Container;Lnet/minecraft/world/level/Level;)Z a
	matches (Lnet/minecraft/world/inventory/CraftingContainer;Lnet/minecraft/world/level/Level;)Z a
net/minecraft/world/item/crafting/ShulkerBoxColoring bov
	assemble (Lnet/minecraft/world/Container;)Lnet/minecraft/world/item/ItemStack; a
	assemble (Lnet/minecraft/world/inventory/CraftingContainer;)Lnet/minecraft/world/item/ItemStack; a
	canCraftInDimensions (II)Z a
	getSerializer ()Lnet/minecraft/world/item/crafting/RecipeSerializer; ag_
	matches (Lnet/minecraft/world/Container;Lnet/minecraft/world/level/Level;)Z a
	matches (Lnet/minecraft/world/inventory/CraftingContainer;Lnet/minecraft/world/level/Level;)Z a
net/minecraft/world/item/crafting/SimpleCookingSerializer bow
	defaultCookingTime v
	factory w
	fromJson (Lnet/minecraft/resources/ResourceLocation;Lcom/google/gson/JsonObject;)Lnet/minecraft/world/item/crafting/AbstractCookingRecipe; b
	fromJson (Lnet/minecraft/resources/ResourceLocation;Lcom/google/gson/JsonObject;)Lnet/minecraft/world/item/crafting/Recipe; a
	fromNetwork (Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/network/FriendlyByteBuf;)Lnet/minecraft/world/item/crafting/AbstractCookingRecipe; b
	fromNetwork (Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/network/FriendlyByteBuf;)Lnet/minecraft/world/item/crafting/Recipe; a
	toNetwork (Lnet/minecraft/network/FriendlyByteBuf;Lnet/minecraft/world/item/crafting/AbstractCookingRecipe;)V a
	toNetwork (Lnet/minecraft/network/FriendlyByteBuf;Lnet/minecraft/world/item/crafting/Recipe;)V a
net/minecraft/world/item/crafting/SimpleCookingSerializer$CookieBaker bow$a
net/minecraft/world/item/crafting/SimpleRecipeSerializer box
	constructor v
	fromJson (Lnet/minecraft/resources/ResourceLocation;Lcom/google/gson/JsonObject;)Lnet/minecraft/world/item/crafting/Recipe; a
	fromNetwork (Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/network/FriendlyByteBuf;)Lnet/minecraft/world/item/crafting/Recipe; a
	toNetwork (Lnet/minecraft/network/FriendlyByteBuf;Lnet/minecraft/world/item/crafting/Recipe;)V a
net/minecraft/world/item/crafting/SingleItemRecipe boy
	group d
	id c
	ingredient a
	result b
	serializer f
	type e
	assemble (Lnet/minecraft/world/Container;)Lnet/minecraft/world/item/ItemStack; a
	canCraftInDimensions (II)Z a
	getGroup ()Ljava/lang/String; d
	getId ()Lnet/minecraft/resources/ResourceLocation; f
	getIngredients ()Lnet/minecraft/core/NonNullList; a
	getResultItem ()Lnet/minecraft/world/item/ItemStack; c
	getSerializer ()Lnet/minecraft/world/item/crafting/RecipeSerializer; ag_
	getType ()Lnet/minecraft/world/item/crafting/RecipeType; g
net/minecraft/world/item/crafting/SingleItemRecipe$Serializer boy$a
	factory v
	fromJson (Lnet/minecraft/resources/ResourceLocation;Lcom/google/gson/JsonObject;)Lnet/minecraft/world/item/crafting/Recipe; a
	fromJson (Lnet/minecraft/resources/ResourceLocation;Lcom/google/gson/JsonObject;)Lnet/minecraft/world/item/crafting/SingleItemRecipe; b
	fromNetwork (Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/network/FriendlyByteBuf;)Lnet/minecraft/world/item/crafting/Recipe; a
	fromNetwork (Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/network/FriendlyByteBuf;)Lnet/minecraft/world/item/crafting/SingleItemRecipe; b
	toNetwork (Lnet/minecraft/network/FriendlyByteBuf;Lnet/minecraft/world/item/crafting/Recipe;)V a
	toNetwork (Lnet/minecraft/network/FriendlyByteBuf;Lnet/minecraft/world/item/crafting/SingleItemRecipe;)V a
net/minecraft/world/item/crafting/SingleItemRecipe$Serializer$SingleItemMaker boy$a$a
net/minecraft/world/item/crafting/SmeltingRecipe boz
	getSerializer ()Lnet/minecraft/world/item/crafting/RecipeSerializer; ag_
	getToastSymbol ()Lnet/minecraft/world/item/ItemStack; h
net/minecraft/world/item/crafting/SmokingRecipe bpa
	getSerializer ()Lnet/minecraft/world/item/crafting/RecipeSerializer; ag_
	getToastSymbol ()Lnet/minecraft/world/item/ItemStack; h
net/minecraft/world/item/crafting/StonecutterRecipe bpb
	getToastSymbol ()Lnet/minecraft/world/item/ItemStack; h
	matches (Lnet/minecraft/world/Container;Lnet/minecraft/world/level/Level;)Z a
net/minecraft/world/item/crafting/SuspiciousStewRecipe bpc
	assemble (Lnet/minecraft/world/Container;)Lnet/minecraft/world/item/ItemStack; a
	assemble (Lnet/minecraft/world/inventory/CraftingContainer;)Lnet/minecraft/world/item/ItemStack; a
	canCraftInDimensions (II)Z a
	getSerializer ()Lnet/minecraft/world/item/crafting/RecipeSerializer; ag_
	matches (Lnet/minecraft/world/Container;Lnet/minecraft/world/level/Level;)Z a
	matches (Lnet/minecraft/world/inventory/CraftingContainer;Lnet/minecraft/world/level/Level;)Z a
net/minecraft/world/item/crafting/TippedArrowRecipe bpd
	assemble (Lnet/minecraft/world/Container;)Lnet/minecraft/world/item/ItemStack; a
	assemble (Lnet/minecraft/world/inventory/CraftingContainer;)Lnet/minecraft/world/item/ItemStack; a
	canCraftInDimensions (II)Z a
	getSerializer ()Lnet/minecraft/world/item/crafting/RecipeSerializer; ag_
	matches (Lnet/minecraft/world/Container;Lnet/minecraft/world/level/Level;)Z a
	matches (Lnet/minecraft/world/inventory/CraftingContainer;Lnet/minecraft/world/level/Level;)Z a
net/minecraft/world/item/crafting/UpgradeRecipe bpe
	addition b
	base a
	id d
	result c
	assemble (Lnet/minecraft/world/Container;)Lnet/minecraft/world/item/ItemStack; a
	canCraftInDimensions (II)Z a
	getId ()Lnet/minecraft/resources/ResourceLocation; f
	getResultItem ()Lnet/minecraft/world/item/ItemStack; c
	getSerializer ()Lnet/minecraft/world/item/crafting/RecipeSerializer; ag_
	getToastSymbol ()Lnet/minecraft/world/item/ItemStack; h
	getType ()Lnet/minecraft/world/item/crafting/RecipeType; g
	isAdditionIngredient (Lnet/minecraft/world/item/ItemStack;)Z a
	matches (Lnet/minecraft/world/Container;Lnet/minecraft/world/level/Level;)Z a
net/minecraft/world/item/crafting/UpgradeRecipe$Serializer bpe$a
	fromJson (Lnet/minecraft/resources/ResourceLocation;Lcom/google/gson/JsonObject;)Lnet/minecraft/world/item/crafting/Recipe; a
	fromJson (Lnet/minecraft/resources/ResourceLocation;Lcom/google/gson/JsonObject;)Lnet/minecraft/world/item/crafting/UpgradeRecipe; b
	fromNetwork (Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/network/FriendlyByteBuf;)Lnet/minecraft/world/item/crafting/Recipe; a
	fromNetwork (Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/network/FriendlyByteBuf;)Lnet/minecraft/world/item/crafting/UpgradeRecipe; b
	toNetwork (Lnet/minecraft/network/FriendlyByteBuf;Lnet/minecraft/world/item/crafting/Recipe;)V a
	toNetwork (Lnet/minecraft/network/FriendlyByteBuf;Lnet/minecraft/world/item/crafting/UpgradeRecipe;)V a
net/minecraft/world/item/enchantment/ArrowDamageEnchantment bpg
	getMaxCost (I)I b
	getMaxLevel ()I a
	getMinCost (I)I a
net/minecraft/world/item/enchantment/ArrowFireEnchantment bph
	getMaxCost (I)I b
	getMaxLevel ()I a
	getMinCost (I)I a
net/minecraft/world/item/enchantment/ArrowInfiniteEnchantment bpi
	checkCompatibility (Lnet/minecraft/world/item/enchantment/Enchantment;)Z a
	getMaxCost (I)I b
	getMaxLevel ()I a
	getMinCost (I)I a
net/minecraft/world/item/enchantment/ArrowKnockbackEnchantment bpj
	getMaxCost (I)I b
	getMaxLevel ()I a
	getMinCost (I)I a
net/minecraft/world/item/enchantment/ArrowPiercingEnchantment bpk
	checkCompatibility (Lnet/minecraft/world/item/enchantment/Enchantment;)Z a
	getMaxCost (I)I b
	getMaxLevel ()I a
	getMinCost (I)I a
net/minecraft/world/item/enchantment/BindingCurseEnchantment bpl
	getMaxCost (I)I b
	getMaxLevel ()I a
	getMinCost (I)I a
	isCurse ()Z c
	isTreasureOnly ()Z b
net/minecraft/world/item/enchantment/DamageEnchantment bpm
	LEVEL_COST f
	LEVEL_COST_SPAN g
	MIN_COST e
	NAMES d
	type a
	canEnchant (Lnet/minecraft/world/item/ItemStack;)Z a
	checkCompatibility (Lnet/minecraft/world/item/enchantment/Enchantment;)Z a
	doPostAttack (Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/entity/Entity;I)V a
	getDamageBonus (ILnet/minecraft/world/entity/MobType;)F a
	getMaxCost (I)I b
	getMaxLevel ()I a
	getMinCost (I)I a
net/minecraft/world/item/enchantment/DigDurabilityEnchantment bpn
	canEnchant (Lnet/minecraft/world/item/ItemStack;)Z a
	getMaxCost (I)I b
	getMaxLevel ()I a
	getMinCost (I)I a
	shouldIgnoreDurabilityDrop (Lnet/minecraft/world/item/ItemStack;ILjava/util/Random;)Z a
net/minecraft/world/item/enchantment/DiggingEnchantment bpo
	canEnchant (Lnet/minecraft/world/item/ItemStack;)Z a
	getMaxCost (I)I b
	getMaxLevel ()I a
	getMinCost (I)I a
net/minecraft/world/item/enchantment/Enchantment bpp
	category b
	descriptionId c
	rarity d
	slots a
	byId (I)Lnet/minecraft/world/item/enchantment/Enchantment; c
	canEnchant (Lnet/minecraft/world/item/ItemStack;)Z a
	checkCompatibility (Lnet/minecraft/world/item/enchantment/Enchantment;)Z a
	doPostAttack (Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/entity/Entity;I)V a
	doPostHurt (Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/entity/Entity;I)V b
	getDamageBonus (ILnet/minecraft/world/entity/MobType;)F a
	getDamageProtection (ILnet/minecraft/world/damagesource/DamageSource;)I a
	getDescriptionId ()Ljava/lang/String; g
	getFullname (I)Lnet/minecraft/network/chat/Component; d
	getMaxCost (I)I b
	getMaxLevel ()I a
	getMinCost (I)I a
	getMinLevel ()I e
	getOrCreateDescriptionId ()Ljava/lang/String; f
	getRarity ()Lnet/minecraft/world/item/enchantment/Enchantment$Rarity; d
	getSlotItems (Lnet/minecraft/world/entity/LivingEntity;)Ljava/util/Map; a
	isCompatibleWith (Lnet/minecraft/world/item/enchantment/Enchantment;)Z b
	isCurse ()Z c
	isDiscoverable ()Z i
	isTradeable ()Z h
	isTreasureOnly ()Z b
net/minecraft/world/item/enchantment/Enchantment$Rarity bpp$a
	$VALUES f
	COMMON a
	RARE c
	UNCOMMON b
	VERY_RARE d
	weight e
	getWeight ()I a
net/minecraft/world/item/enchantment/EnchantmentCategory bpq
	$VALUES o
	ARMOR a
	ARMOR_CHEST d
	ARMOR_FEET b
	ARMOR_HEAD e
	ARMOR_LEGS c
	BOW k
	BREAKABLE j
	CROSSBOW m
	DIGGER g
	FISHING_ROD h
	TRIDENT i
	VANISHABLE n
	WEAPON f
	WEARABLE l
	canEnchant (Lnet/minecraft/world/item/Item;)Z a
net/minecraft/world/item/enchantment/EnchantmentHelper bpr
	deserializeEnchantments (Lnet/minecraft/nbt/ListTag;)Ljava/util/Map; a
	doPostDamageEffects (Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/entity/Entity;)V b
	doPostHurtEffects (Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/entity/Entity;)V a
	enchantItem (Ljava/util/Random;Lnet/minecraft/world/item/ItemStack;IZ)Lnet/minecraft/world/item/ItemStack; a
	filterCompatibleEnchantments (Ljava/util/List;Lnet/minecraft/world/item/enchantment/EnchantmentInstance;)V a
	getAvailableEnchantmentResults (ILnet/minecraft/world/item/ItemStack;Z)Ljava/util/List; a
	getBlockEfficiency (Lnet/minecraft/world/entity/LivingEntity;)I f
	getDamageBonus (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/entity/MobType;)F a
	getDamageProtection (Ljava/lang/Iterable;Lnet/minecraft/world/damagesource/DamageSource;)I a
	getDepthStrider (Lnet/minecraft/world/entity/LivingEntity;)I e
	getEnchantmentCost (Ljava/util/Random;IILnet/minecraft/world/item/ItemStack;)I a
	getEnchantmentLevel (Lnet/minecraft/world/item/enchantment/Enchantment;Lnet/minecraft/world/entity/LivingEntity;)I a
	getEnchantments (Lnet/minecraft/world/item/ItemStack;)Ljava/util/Map; a
	getFireAspect (Lnet/minecraft/world/entity/LivingEntity;)I c
	getFishingLuckBonus (Lnet/minecraft/world/item/ItemStack;)I b
	getFishingSpeedBonus (Lnet/minecraft/world/item/ItemStack;)I c
	getItemEnchantmentLevel (Lnet/minecraft/world/item/enchantment/Enchantment;Lnet/minecraft/world/item/ItemStack;)I a
	getKnockbackBonus (Lnet/minecraft/world/entity/LivingEntity;)I b
	getLoyalty (Lnet/minecraft/world/item/ItemStack;)I f
	getMobLooting (Lnet/minecraft/world/entity/LivingEntity;)I g
	getRandomItemWith (Lnet/minecraft/world/item/enchantment/Enchantment;Lnet/minecraft/world/entity/LivingEntity;)Ljava/util/Map$Entry; b
	getRandomItemWith (Lnet/minecraft/world/item/enchantment/Enchantment;Lnet/minecraft/world/entity/LivingEntity;Ljava/util/function/Predicate;)Ljava/util/Map$Entry; a
	getRespiration (Lnet/minecraft/world/entity/LivingEntity;)I d
	getRiptide (Lnet/minecraft/world/item/ItemStack;)I g
	getSweepingDamageRatio (Lnet/minecraft/world/entity/LivingEntity;)F a
	hasAquaAffinity (Lnet/minecraft/world/entity/LivingEntity;)Z h
	hasBindingCurse (Lnet/minecraft/world/item/ItemStack;)Z d
	hasChanneling (Lnet/minecraft/world/item/ItemStack;)Z h
	hasFrostWalker (Lnet/minecraft/world/entity/LivingEntity;)Z i
	hasSoulSpeed (Lnet/minecraft/world/entity/LivingEntity;)Z j
	hasVanishingCurse (Lnet/minecraft/world/item/ItemStack;)Z e
	isEnchantmentCompatible (Ljava/util/Collection;Lnet/minecraft/world/item/enchantment/Enchantment;)Z a
	runIterationOnInventory (Lnet/minecraft/world/item/enchantment/EnchantmentHelper$EnchantmentVisitor;Ljava/lang/Iterable;)V a
	runIterationOnItem (Lnet/minecraft/world/item/enchantment/EnchantmentHelper$EnchantmentVisitor;Lnet/minecraft/world/item/ItemStack;)V a
	selectEnchantment (Ljava/util/Random;Lnet/minecraft/world/item/ItemStack;IZ)Ljava/util/List; b
	setEnchantments (Ljava/util/Map;Lnet/minecraft/world/item/ItemStack;)V a
net/minecraft/world/item/enchantment/EnchantmentHelper$EnchantmentVisitor bpr$a
net/minecraft/world/item/enchantment/EnchantmentInstance bps
	enchantment b
	level c
net/minecraft/world/item/enchantment/Enchantments bpt
	ALL_DAMAGE_PROTECTION a
	AQUA_AFFINITY g
	ARMOR_SLOTS M
	BANE_OF_ARTHROPODS o
	BINDING_CURSE k
	BLAST_PROTECTION d
	BLOCK_EFFICIENCY t
	BLOCK_FORTUNE w
	CHANNELING G
	DEPTH_STRIDER i
	FALL_PROTECTION c
	FIRE_ASPECT q
	FIRE_PROTECTION b
	FISHING_LUCK B
	FISHING_SPEED C
	FLAMING_ARROWS z
	FROST_WALKER j
	IMPALING E
	INFINITY_ARROWS A
	KNOCKBACK p
	LOYALTY D
	MENDING K
	MOB_LOOTING r
	MULTISHOT H
	PIERCING J
	POWER_ARROWS x
	PROJECTILE_PROTECTION e
	PUNCH_ARROWS y
	QUICK_CHARGE I
	RESPIRATION f
	RIPTIDE F
	SHARPNESS m
	SILK_TOUCH u
	SMITE n
	SOUL_SPEED l
	SWEEPING_EDGE s
	THORNS h
	UNBREAKING v
	VANISHING_CURSE L
	register (Ljava/lang/String;Lnet/minecraft/world/item/enchantment/Enchantment;)Lnet/minecraft/world/item/enchantment/Enchantment; a
net/minecraft/world/item/enchantment/FireAspectEnchantment bpu
	getMaxCost (I)I b
	getMaxLevel ()I a
	getMinCost (I)I a
net/minecraft/world/item/enchantment/FishingSpeedEnchantment bpv
	getMaxCost (I)I b
	getMaxLevel ()I a
	getMinCost (I)I a
net/minecraft/world/item/enchantment/FrostWalkerEnchantment bpw
	checkCompatibility (Lnet/minecraft/world/item/enchantment/Enchantment;)Z a
	getMaxCost (I)I b
	getMaxLevel ()I a
	getMinCost (I)I a
	isTreasureOnly ()Z b
	onEntityMoved (Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;I)V a
net/minecraft/world/item/enchantment/KnockbackEnchantment bpx
	getMaxCost (I)I b
	getMaxLevel ()I a
	getMinCost (I)I a
net/minecraft/world/item/enchantment/LootBonusEnchantment bpy
	checkCompatibility (Lnet/minecraft/world/item/enchantment/Enchantment;)Z a
	getMaxCost (I)I b
	getMaxLevel ()I a
	getMinCost (I)I a
net/minecraft/world/item/enchantment/MendingEnchantment bpz
	getMaxCost (I)I b
	getMaxLevel ()I a
	getMinCost (I)I a
	isTreasureOnly ()Z b
net/minecraft/world/item/enchantment/MultiShotEnchantment bqa
	checkCompatibility (Lnet/minecraft/world/item/enchantment/Enchantment;)Z a
	getMaxCost (I)I b
	getMaxLevel ()I a
	getMinCost (I)I a
net/minecraft/world/item/enchantment/OxygenEnchantment bqb
	getMaxCost (I)I b
	getMaxLevel ()I a
	getMinCost (I)I a
net/minecraft/world/item/enchantment/ProtectionEnchantment bqc
	type a
	checkCompatibility (Lnet/minecraft/world/item/enchantment/Enchantment;)Z a
	getDamageProtection (ILnet/minecraft/world/damagesource/DamageSource;)I a
	getExplosionKnockbackAfterDampener (Lnet/minecraft/world/entity/LivingEntity;D)D a
	getFireAfterDampener (Lnet/minecraft/world/entity/LivingEntity;I)I a
	getMaxCost (I)I b
	getMaxLevel ()I a
	getMinCost (I)I a
net/minecraft/world/item/enchantment/ProtectionEnchantment$Type bqc$a
	$VALUES i
	ALL a
	EXPLOSION d
	FALL c
	FIRE b
	PROJECTILE e
	levelCost h
	minCost g
	name f
	getLevelCost ()I c
	getMinCost ()I b
	getName ()Ljava/lang/String; a
net/minecraft/world/item/enchantment/QuickChargeEnchantment bqd
	getMaxCost (I)I b
	getMaxLevel ()I a
	getMinCost (I)I a
net/minecraft/world/item/enchantment/SoulSpeedEnchantment bqe
	getMaxCost (I)I b
	getMaxLevel ()I a
	getMinCost (I)I a
	isDiscoverable ()Z i
	isTradeable ()Z h
	isTreasureOnly ()Z b
net/minecraft/world/item/enchantment/SweepingEdgeEnchantment bqf
	getMaxCost (I)I b
	getMaxLevel ()I a
	getMinCost (I)I a
	getSweepingDamageRatio (I)F e
net/minecraft/world/item/enchantment/ThornsEnchantment bqg
	canEnchant (Lnet/minecraft/world/item/ItemStack;)Z a
	doPostHurt (Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/entity/Entity;I)V b
	getDamage (ILjava/util/Random;)I b
	getMaxCost (I)I b
	getMaxLevel ()I a
	getMinCost (I)I a
	shouldHit (ILjava/util/Random;)Z a
net/minecraft/world/item/enchantment/TridentChannelingEnchantment bqh
	checkCompatibility (Lnet/minecraft/world/item/enchantment/Enchantment;)Z a
	getMaxCost (I)I b
	getMaxLevel ()I a
	getMinCost (I)I a
net/minecraft/world/item/enchantment/TridentImpalerEnchantment bqi
	getDamageBonus (ILnet/minecraft/world/entity/MobType;)F a
	getMaxCost (I)I b
	getMaxLevel ()I a
	getMinCost (I)I a
net/minecraft/world/item/enchantment/TridentLoyaltyEnchantment bqj
	checkCompatibility (Lnet/minecraft/world/item/enchantment/Enchantment;)Z a
	getMaxCost (I)I b
	getMaxLevel ()I a
	getMinCost (I)I a
net/minecraft/world/item/enchantment/TridentRiptideEnchantment bqk
	checkCompatibility (Lnet/minecraft/world/item/enchantment/Enchantment;)Z a
	getMaxCost (I)I b
	getMaxLevel ()I a
	getMinCost (I)I a
net/minecraft/world/item/enchantment/UntouchingEnchantment bql
	checkCompatibility (Lnet/minecraft/world/item/enchantment/Enchantment;)Z a
	getMaxCost (I)I b
	getMaxLevel ()I a
	getMinCost (I)I a
net/minecraft/world/item/enchantment/VanishingCurseEnchantment bqm
	getMaxCost (I)I b
	getMaxLevel ()I a
	getMinCost (I)I a
	isCurse ()Z c
	isTreasureOnly ()Z b
net/minecraft/world/item/enchantment/WaterWalkerEnchantment bqn
	checkCompatibility (Lnet/minecraft/world/item/enchantment/Enchantment;)Z a
	getMaxCost (I)I b
	getMaxLevel ()I a
	getMinCost (I)I a
net/minecraft/world/item/enchantment/WaterWorkerEnchantment bqo
	getMaxCost (I)I b
	getMaxLevel ()I a
	getMinCost (I)I a
net/minecraft/world/item/trading/Merchant bqr
	canRestock ()Z fa
	getLevel ()Lnet/minecraft/world/level/Level; eV
	getNotifyTradeSound ()Lnet/minecraft/sounds/SoundEvent; eQ
	getOffers ()Lnet/minecraft/world/item/trading/MerchantOffers; eO
	getTradingPlayer ()Lnet/minecraft/world/entity/player/Player; eM
	getVillagerXp ()I eL
	notifyTrade (Lnet/minecraft/world/item/trading/MerchantOffer;)V a
	notifyTradeUpdated (Lnet/minecraft/world/item/ItemStack;)V k
	openTradingScreen (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/network/chat/Component;I)V a
	overrideOffers (Lnet/minecraft/world/item/trading/MerchantOffers;)V a
	overrideXp (I)V t
	setTradingPlayer (Lnet/minecraft/world/entity/player/Player;)V f
	showProgressBar ()Z eP
net/minecraft/world/item/trading/MerchantOffer bqs
	baseCostA a
	costB b
	demand h
	maxUses e
	priceMultiplier i
	result c
	rewardExp f
	specialPriceDiff g
	uses d
	xp j
	addToSpecialPriceDiff (I)V a
	assemble ()Lnet/minecraft/world/item/ItemStack; f
	createTag ()Lnet/minecraft/nbt/CompoundTag; t
	getBaseCostA ()Lnet/minecraft/world/item/ItemStack; a
	getCostA ()Lnet/minecraft/world/item/ItemStack; b
	getCostB ()Lnet/minecraft/world/item/ItemStack; c
	getDemand ()I k
	getMaxUses ()I i
	getPriceMultiplier ()F n
	getResult ()Lnet/minecraft/world/item/ItemStack; d
	getSpecialPriceDiff ()I m
	getUses ()I g
	getXp ()I o
	increaseUses ()V j
	isOutOfStock ()Z p
	isRequiredItem (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/item/ItemStack;)Z c
	isSame (Lnet/minecraft/world/item/trading/MerchantOffer;)Z a
	needsRestock ()Z r
	resetSpecialPriceDiff ()V l
	resetUses ()V h
	satisfiedBy (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/item/ItemStack;)Z a
	setSpecialPriceDiff (I)V b
	setToOutOfStock ()V q
	shouldRewardExp ()Z s
	take (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/item/ItemStack;)Z b
	updateDemand ()V e
net/minecraft/world/item/trading/MerchantOffers bqt
	createFromStream (Lnet/minecraft/network/FriendlyByteBuf;)Lnet/minecraft/world/item/trading/MerchantOffers; b
	createTag ()Lnet/minecraft/nbt/CompoundTag; a
	getRecipeFor (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/item/ItemStack;I)Lnet/minecraft/world/item/trading/MerchantOffer; a
	writeToStream (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/world/level/BaseCommandBlock bqv
	DEFAULT_NAME c
	TIME_FORMAT b
	command i
	lastExecution d
	lastOutput h
	name j
	successCount f
	trackOutput g
	updateLastExecution e
	acceptsFailure ()Z b
	acceptsSuccess ()Z a
	createCommandSourceStack ()Lnet/minecraft/commands/CommandSourceStack; h
	getCommand ()Ljava/lang/String; k
	getLastOutput ()Lnet/minecraft/network/chat/Component; j
	getLevel ()Lnet/minecraft/server/level/ServerLevel; d
	getName ()Lnet/minecraft/network/chat/Component; l
	getPosition ()Lnet/minecraft/world/phys/Vec3; f
	getSuccessCount ()I i
	isTrackOutput ()Z m
	load (Lnet/minecraft/nbt/CompoundTag;)V b
	onUpdated ()V e
	performCommand (Lnet/minecraft/world/level/Level;)Z a
	save (Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/nbt/CompoundTag; a
	sendMessage (Lnet/minecraft/network/chat/Component;Ljava/util/UUID;)V a
	setCommand (Ljava/lang/String;)V a
	setLastOutput (Lnet/minecraft/network/chat/Component;)V b
	setName (Lnet/minecraft/network/chat/Component;)V a
	setSuccessCount (I)V a
	setTrackOutput (Z)V a
	shouldInformAdmins ()Z R_
	usedBy (Lnet/minecraft/world/entity/player/Player;)Lnet/minecraft/world/InteractionResult; a
net/minecraft/world/level/BaseSpawner bqw
	LOGGER a
	displayEntity j
	maxNearbyEntities k
	maxSpawnDelay h
	minSpawnDelay g
	nextSpawnData d
	oSpin f
	requiredPlayerRange l
	spawnCount i
	spawnDelay b
	spawnPotentials c
	spawnRange m
	spin e
	broadcastEvent (I)V a
	delay ()V i
	getEntityId ()Lnet/minecraft/resources/ResourceLocation; g
	getLevel ()Lnet/minecraft/world/level/Level; a
	getOrCreateDisplayEntity ()Lnet/minecraft/world/entity/Entity; d
	getPos ()Lnet/minecraft/core/BlockPos; b
	getSpin ()D e
	getoSpin ()D f
	isNearPlayer ()Z h
	load (Lnet/minecraft/nbt/CompoundTag;)V a
	onEventTriggered (I)Z b
	save (Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/nbt/CompoundTag; b
	setEntityId (Lnet/minecraft/world/entity/EntityType;)V a
	setNextSpawnData (Lnet/minecraft/world/level/SpawnData;)V a
	tick ()V c
net/minecraft/world/level/BlockAndTintGetter bqx
	canSeeSky (Lnet/minecraft/core/BlockPos;)Z e
	getBlockTint (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/ColorResolver;)I a
	getBrightness (Lnet/minecraft/world/level/LightLayer;Lnet/minecraft/core/BlockPos;)I a
	getLightEngine ()Lnet/minecraft/world/level/lighting/LevelLightEngine; e
	getRawBrightness (Lnet/minecraft/core/BlockPos;I)I b
	getShade (Lnet/minecraft/core/Direction;Z)F a
net/minecraft/world/level/BlockEventData bqy
	block b
	paramA c
	paramB d
	pos a
	getBlock ()Lnet/minecraft/world/level/block/Block; b
	getParamA ()I c
	getParamB ()I d
	getPos ()Lnet/minecraft/core/BlockPos; a
net/minecraft/world/level/BlockGetter bqz
	clip (Lnet/minecraft/world/level/ClipContext;)Lnet/minecraft/world/phys/BlockHitResult; a
	clipWithInteractionOverride (Lnet/minecraft/world/phys/Vec3;Lnet/minecraft/world/phys/Vec3;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/VoxelShape;Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/phys/BlockHitResult; a
	getBlockEntity (Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/entity/BlockEntity; c
	getBlockFloorHeight (Lnet/minecraft/core/BlockPos;)D h
	getBlockFloorHeight (Lnet/minecraft/world/phys/shapes/VoxelShape;Ljava/util/function/Supplier;)D a
	getBlockState (Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; d_
	getBlockStates (Lnet/minecraft/world/phys/AABB;)Ljava/util/stream/Stream; a
	getFluidState (Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/material/FluidState; b
	getLightBlock (Lnet/minecraft/core/BlockPos;)I f
	getLightEmission (Lnet/minecraft/core/BlockPos;)I g
	getMaxBuildHeight ()I K
	getMaxLightLevel ()I J
	traverseBlocks (Lnet/minecraft/world/level/ClipContext;Ljava/util/function/BiFunction;Ljava/util/function/Function;)Ljava/lang/Object; a
net/minecraft/world/level/ChunkPos bra
	INVALID_CHUNK_POS a
	x b
	z c
	asLong (II)J a
	getBlockAt (III)Lnet/minecraft/core/BlockPos; a
	getChessboardDistance (Lnet/minecraft/world/level/ChunkPos;)I a
	getMaxBlockX ()I f
	getMaxBlockZ ()I g
	getMiddleBlockPosition (I)Lnet/minecraft/core/BlockPos; a
	getMiddleBlockX ()I b
	getMiddleBlockZ ()I c
	getMinBlockX ()I d
	getMinBlockZ ()I e
	getRegionLocalX ()I j
	getRegionLocalZ ()I k
	getRegionX ()I h
	getRegionZ ()I i
	getWorldPosition ()Lnet/minecraft/core/BlockPos; l
	getX (J)I a
	getZ (J)I b
	rangeClosed (Lnet/minecraft/world/level/ChunkPos;I)Ljava/util/stream/Stream; a
	rangeClosed (Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/world/level/ChunkPos;)Ljava/util/stream/Stream; a
	toLong ()J a
net/minecraft/world/level/ChunkTickList brb
	ticks a
	toId b
	copyOut (Lnet/minecraft/world/level/TickList;)V a
	create (Lnet/minecraft/nbt/ListTag;Ljava/util/function/Function;Ljava/util/function/Function;)Lnet/minecraft/world/level/ChunkTickList; a
	hasScheduledTick (Lnet/minecraft/core/BlockPos;Ljava/lang/Object;)Z a
	save ()Lnet/minecraft/nbt/ListTag; b
	scheduleTick (Lnet/minecraft/core/BlockPos;Ljava/lang/Object;ILnet/minecraft/world/level/TickPriority;)V a
	size ()I a
	willTickThisTick (Lnet/minecraft/core/BlockPos;Ljava/lang/Object;)Z b
net/minecraft/world/level/ChunkTickList$ScheduledTick brb$a
	delay b
	pos a
	priority c
	type d
net/minecraft/world/level/ClipContext brc
	block c
	collisionContext e
	fluid d
	from a
	to b
	getBlockShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	getFluidShape (Lnet/minecraft/world/level/material/FluidState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	getFrom ()Lnet/minecraft/world/phys/Vec3; b
	getTo ()Lnet/minecraft/world/phys/Vec3; a
net/minecraft/world/level/ClipContext$Block brc$a
	$VALUES e
	COLLIDER a
	OUTLINE b
	VISUAL c
	shapeGetter d
net/minecraft/world/level/ClipContext$Fluid brc$b
	$VALUES e
	ANY c
	NONE a
	SOURCE_ONLY b
	canPick d
	canPick (Lnet/minecraft/world/level/material/FluidState;)Z a
net/minecraft/world/level/ClipContext$ShapeGetter brc$c
net/minecraft/world/level/CollisionGetter brd
	getBlockCollisions (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/phys/AABB;)Ljava/util/stream/Stream; b
	getBlockCollisions (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/phys/AABB;Ljava/util/function/BiPredicate;)Ljava/util/stream/Stream; b
	getChunkForCollisions (II)Lnet/minecraft/world/level/BlockGetter; c
	getCollisions (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/phys/AABB;Ljava/util/function/Predicate;)Ljava/util/stream/Stream; d
	getEntityCollisions (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/phys/AABB;Ljava/util/function/Predicate;)Ljava/util/stream/Stream; c
	getWorldBorder ()Lnet/minecraft/world/level/border/WorldBorder; f
	isUnobstructed (Lnet/minecraft/world/entity/Entity;)Z j
	isUnobstructed (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/phys/shapes/VoxelShape;)Z a
	isUnobstructed (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Z a
	noBlockCollision (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/phys/AABB;Ljava/util/function/BiPredicate;)Z a
	noCollision (Lnet/minecraft/world/entity/Entity;)Z k
	noCollision (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/phys/AABB;)Z a_
	noCollision (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/phys/AABB;Ljava/util/function/Predicate;)Z b
	noCollision (Lnet/minecraft/world/phys/AABB;)Z b
net/minecraft/world/level/CollisionSpliterator bre
	box b
	collisionGetter g
	context c
	cursor d
	entityShape f
	needsBorderCheck h
	pos e
	predicate i
	source a
	collisionCheck (Ljava/util/function/Consumer;)Z a
	getChunk (II)Lnet/minecraft/world/level/BlockGetter; a
	isBoxFullyWithinWorldBorder (Lnet/minecraft/world/level/border/WorldBorder;Lnet/minecraft/world/phys/AABB;)Z a
	isCloseToBorder (Lnet/minecraft/world/phys/shapes/VoxelShape;Lnet/minecraft/world/phys/AABB;)Z a
	isOutsideBorder (Lnet/minecraft/world/phys/shapes/VoxelShape;Lnet/minecraft/world/phys/AABB;)Z b
	worldBorderCheck (Ljava/util/function/Consumer;)Z b
net/minecraft/world/level/CommonLevelAccessor brf
	getBiomeName (Lnet/minecraft/core/BlockPos;)Ljava/util/Optional; i
	getEntityCollisions (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/phys/AABB;Ljava/util/function/Predicate;)Ljava/util/stream/Stream; c
	getHeightmapPos (Lnet/minecraft/world/level/levelgen/Heightmap$Types;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/core/BlockPos; a
	isUnobstructed (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/phys/shapes/VoxelShape;)Z a
	registryAccess ()Lnet/minecraft/core/RegistryAccess; r
net/minecraft/world/level/CustomSpawner brg
	tick (Lnet/minecraft/server/level/ServerLevel;ZZ)I a
net/minecraft/world/level/DataPackConfig brh
	CODEC b
	DEFAULT a
	disabled d
	enabled c
	getDisabled ()Ljava/util/List; b
	getEnabled ()Ljava/util/List; a
net/minecraft/world/level/EmptyBlockGetter bri
	$VALUES b
	INSTANCE a
	getBlockEntity (Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/entity/BlockEntity; c
	getBlockState (Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; d_
	getFluidState (Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/material/FluidState; b
net/minecraft/world/level/EmptyTickList brj
	INSTANCE a
	empty ()Lnet/minecraft/world/level/EmptyTickList; b
	hasScheduledTick (Lnet/minecraft/core/BlockPos;Ljava/lang/Object;)Z a
	scheduleTick (Lnet/minecraft/core/BlockPos;Ljava/lang/Object;I)V a
	scheduleTick (Lnet/minecraft/core/BlockPos;Ljava/lang/Object;ILnet/minecraft/world/level/TickPriority;)V a
	size ()I a
	willTickThisTick (Lnet/minecraft/core/BlockPos;Ljava/lang/Object;)Z b
net/minecraft/world/level/EntityBasedExplosionDamageCalculator brk
	source a
	getBlockExplosionResistance (Lnet/minecraft/world/level/Explosion;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/material/FluidState;)Ljava/util/Optional; a
	shouldBlockExplode (Lnet/minecraft/world/level/Explosion;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;F)Z a
net/minecraft/world/level/EntityGetter brl
	getEntities (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/phys/AABB;)Ljava/util/List; a
	getEntities (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/phys/AABB;Ljava/util/function/Predicate;)Ljava/util/List; a
	getEntitiesOfClass (Ljava/lang/Class;Lnet/minecraft/world/phys/AABB;)Ljava/util/List; a
	getEntitiesOfClass (Ljava/lang/Class;Lnet/minecraft/world/phys/AABB;Ljava/util/function/Predicate;)Ljava/util/List; a
	getEntityCollisions (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/phys/AABB;Ljava/util/function/Predicate;)Ljava/util/stream/Stream; c
	getLoadedEntitiesOfClass (Ljava/lang/Class;Lnet/minecraft/world/phys/AABB;)Ljava/util/List; b
	getLoadedEntitiesOfClass (Ljava/lang/Class;Lnet/minecraft/world/phys/AABB;Ljava/util/function/Predicate;)Ljava/util/List; b
	getNearbyEntities (Ljava/lang/Class;Lnet/minecraft/world/entity/ai/targeting/TargetingConditions;Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/phys/AABB;)Ljava/util/List; a
	getNearbyPlayers (Lnet/minecraft/world/entity/ai/targeting/TargetingConditions;Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/phys/AABB;)Ljava/util/List; a
	getNearestEntity (Ljava/lang/Class;Lnet/minecraft/world/entity/ai/targeting/TargetingConditions;Lnet/minecraft/world/entity/LivingEntity;DDDLnet/minecraft/world/phys/AABB;)Lnet/minecraft/world/entity/LivingEntity; a
	getNearestEntity (Ljava/util/List;Lnet/minecraft/world/entity/ai/targeting/TargetingConditions;Lnet/minecraft/world/entity/LivingEntity;DDD)Lnet/minecraft/world/entity/LivingEntity; a
	getNearestLoadedEntity (Ljava/lang/Class;Lnet/minecraft/world/entity/ai/targeting/TargetingConditions;Lnet/minecraft/world/entity/LivingEntity;DDDLnet/minecraft/world/phys/AABB;)Lnet/minecraft/world/entity/LivingEntity; b
	getNearestPlayer (DDDDLjava/util/function/Predicate;)Lnet/minecraft/world/entity/player/Player; a
	getNearestPlayer (DDDDZ)Lnet/minecraft/world/entity/player/Player; a
	getNearestPlayer (Lnet/minecraft/world/entity/Entity;D)Lnet/minecraft/world/entity/player/Player; a
	getNearestPlayer (Lnet/minecraft/world/entity/ai/targeting/TargetingConditions;DDD)Lnet/minecraft/world/entity/player/Player; a
	getNearestPlayer (Lnet/minecraft/world/entity/ai/targeting/TargetingConditions;Lnet/minecraft/world/entity/LivingEntity;)Lnet/minecraft/world/entity/player/Player; a
	getNearestPlayer (Lnet/minecraft/world/entity/ai/targeting/TargetingConditions;Lnet/minecraft/world/entity/LivingEntity;DDD)Lnet/minecraft/world/entity/player/Player; a
	getPlayerByUUID (Ljava/util/UUID;)Lnet/minecraft/world/entity/player/Player; b
	hasNearbyAlivePlayer (DDDD)Z a
	isUnobstructed (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/phys/shapes/VoxelShape;)Z a
	players ()Ljava/util/List; x
net/minecraft/world/level/Explosion brm
	EXPLOSION_DAMAGE_CALCULATOR a
	blockInteraction c
	damageCalculator l
	damageSource k
	fire b
	hitPlayers n
	level e
	radius j
	random d
	source i
	toBlow m
	x f
	y g
	z h
	addBlockDrops (Lit/unimi/dsi/fastutil/objects/ObjectArrayList;Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/core/BlockPos;)V a
	clearToBlow ()V e
	explode ()V a
	finalizeExplosion (Z)V a
	getDamageSource ()Lnet/minecraft/world/damagesource/DamageSource; b
	getHitPlayers ()Ljava/util/Map; c
	getSeenPercent (Lnet/minecraft/world/phys/Vec3;Lnet/minecraft/world/entity/Entity;)F a
	getSourceMob ()Lnet/minecraft/world/entity/LivingEntity; d
	getToBlow ()Ljava/util/List; f
	makeDamageCalculator (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/world/level/ExplosionDamageCalculator; a
net/minecraft/world/level/Explosion$BlockInteraction brm$a
	$VALUES d
	BREAK b
	DESTROY c
	NONE a
net/minecraft/world/level/ExplosionDamageCalculator brn
	getBlockExplosionResistance (Lnet/minecraft/world/level/Explosion;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/material/FluidState;)Ljava/util/Optional; a
	shouldBlockExplode (Lnet/minecraft/world/level/Explosion;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;F)Z a
net/minecraft/world/level/FoliageColor bro
	pixels a
	get (DD)I a
	getBirchColor ()I b
	getDefaultColor ()I c
	getEvergreenColor ()I a
	init ([I)V a
net/minecraft/world/level/ForcedChunksSavedData brp
	chunks a
	getChunks ()Lit/unimi/dsi/fastutil/longs/LongSet; a
	load (Lnet/minecraft/nbt/CompoundTag;)V a
	save (Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/nbt/CompoundTag; b
net/minecraft/world/level/GameRules brq
	GAME_RULE_TYPES I
	LOGGER H
	RULE_ANNOUNCE_ADVANCEMENTS w
	RULE_COMMANDBLOCKOUTPUT h
	RULE_DAYLIGHT j
	RULE_DISABLE_ELYTRA_MOVEMENT_CHECK r
	RULE_DISABLE_RAIDS x
	RULE_DOBLOCKDROPS f
	RULE_DOENTITYDROPS g
	RULE_DOFIRETICK a
	RULE_DOINSOMNIA y
	RULE_DOMOBLOOT e
	RULE_DOMOBSPAWNING d
	RULE_DO_IMMEDIATE_RESPAWN z
	RULE_DO_PATROL_SPAWNING D
	RULE_DO_TRADER_SPAWNING E
	RULE_DROWNING_DAMAGE A
	RULE_FALL_DAMAGE B
	RULE_FIRE_DAMAGE C
	RULE_FORGIVE_DEAD_PLAYERS F
	RULE_KEEPINVENTORY c
	RULE_LIMITED_CRAFTING u
	RULE_LOGADMINCOMMANDS k
	RULE_MAX_COMMAND_CHAIN_LENGTH v
	RULE_MAX_ENTITY_CRAMMING s
	RULE_MOBGRIEFING b
	RULE_NATURAL_REGENERATION i
	RULE_RANDOMTICKING m
	RULE_REDUCEDDEBUGINFO o
	RULE_SENDCOMMANDFEEDBACK n
	RULE_SHOWDEATHMESSAGES l
	RULE_SPAWN_RADIUS q
	RULE_SPECTATORSGENERATECHUNKS p
	RULE_UNIVERSAL_ANGER G
	RULE_WEATHER_CYCLE t
	rules J
	assignCap (Lnet/minecraft/world/level/GameRules$Key;Lnet/minecraft/world/level/GameRules;Lnet/minecraft/server/MinecraftServer;)V a
	assignFrom (Lnet/minecraft/world/level/GameRules;Lnet/minecraft/server/MinecraftServer;)V a
	callVisitorCap (Lnet/minecraft/world/level/GameRules$GameRuleTypeVisitor;Lnet/minecraft/world/level/GameRules$Key;Lnet/minecraft/world/level/GameRules$Type;)V a
	copy ()Lnet/minecraft/world/level/GameRules; b
	createTag ()Lnet/minecraft/nbt/CompoundTag; a
	getBoolean (Lnet/minecraft/world/level/GameRules$Key;)Z b
	getInt (Lnet/minecraft/world/level/GameRules$Key;)I c
	getRule (Lnet/minecraft/world/level/GameRules$Key;)Lnet/minecraft/world/level/GameRules$Value; a
	loadFromTag (Lcom/mojang/serialization/DynamicLike;)V a
	register (Ljava/lang/String;Lnet/minecraft/world/level/GameRules$Category;Lnet/minecraft/world/level/GameRules$Type;)Lnet/minecraft/world/level/GameRules$Key; a
	visitGameRuleTypes (Lnet/minecraft/world/level/GameRules$GameRuleTypeVisitor;)V a
net/minecraft/world/level/GameRules$BooleanValue brq$a
	value b
	copy ()Lnet/minecraft/world/level/GameRules$BooleanValue; e
	copy ()Lnet/minecraft/world/level/GameRules$Value; f
	create (Z)Lnet/minecraft/world/level/GameRules$Type; b
	create (ZLjava/util/function/BiConsumer;)Lnet/minecraft/world/level/GameRules$Type; b
	deserialize (Ljava/lang/String;)V a
	get ()Z a
	getCommandResult ()I c
	getSelf ()Lnet/minecraft/world/level/GameRules$BooleanValue; d
	getSelf ()Lnet/minecraft/world/level/GameRules$Value; g
	serialize ()Ljava/lang/String; b
	set (ZLnet/minecraft/server/MinecraftServer;)V a
	setFrom (Lnet/minecraft/world/level/GameRules$BooleanValue;Lnet/minecraft/server/MinecraftServer;)V a
	setFrom (Lnet/minecraft/world/level/GameRules$Value;Lnet/minecraft/server/MinecraftServer;)V a
	updateFromArgument (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)V a
net/minecraft/world/level/GameRules$Category brq$b
	$VALUES i
	CHAT f
	DROPS d
	MISC g
	MOBS b
	PLAYER a
	SPAWNING c
	UPDATES e
	descriptionId h
	getDescriptionId ()Ljava/lang/String; a
net/minecraft/world/level/GameRules$GameRuleTypeVisitor brq$c
	visit (Lnet/minecraft/world/level/GameRules$Key;Lnet/minecraft/world/level/GameRules$Type;)V a
	visitBoolean (Lnet/minecraft/world/level/GameRules$Key;Lnet/minecraft/world/level/GameRules$Type;)V b
	visitInteger (Lnet/minecraft/world/level/GameRules$Key;Lnet/minecraft/world/level/GameRules$Type;)V c
net/minecraft/world/level/GameRules$IntegerValue brq$d
	value b
	copy ()Lnet/minecraft/world/level/GameRules$IntegerValue; e
	copy ()Lnet/minecraft/world/level/GameRules$Value; f
	create (I)Lnet/minecraft/world/level/GameRules$Type; b
	create (ILjava/util/function/BiConsumer;)Lnet/minecraft/world/level/GameRules$Type; a
	deserialize (Ljava/lang/String;)V a
	get ()I a
	getCommandResult ()I c
	getSelf ()Lnet/minecraft/world/level/GameRules$IntegerValue; d
	getSelf ()Lnet/minecraft/world/level/GameRules$Value; g
	safeParse (Ljava/lang/String;)I c
	serialize ()Ljava/lang/String; b
	set (ILnet/minecraft/server/MinecraftServer;)V a
	setFrom (Lnet/minecraft/world/level/GameRules$IntegerValue;Lnet/minecraft/server/MinecraftServer;)V a
	setFrom (Lnet/minecraft/world/level/GameRules$Value;Lnet/minecraft/server/MinecraftServer;)V a
	tryDeserialize (Ljava/lang/String;)Z b
	updateFromArgument (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)V a
net/minecraft/world/level/GameRules$Key brq$e
	category b
	id a
	getCategory ()Lnet/minecraft/world/level/GameRules$Category; c
	getDescriptionId ()Ljava/lang/String; b
	getId ()Ljava/lang/String; a
net/minecraft/world/level/GameRules$Type brq$f
	argument a
	callback c
	constructor b
	visitorCaller d
	callVisitor (Lnet/minecraft/world/level/GameRules$GameRuleTypeVisitor;Lnet/minecraft/world/level/GameRules$Key;)V a
	createArgument (Ljava/lang/String;)Lcom/mojang/brigadier/builder/RequiredArgumentBuilder; a
	createRule ()Lnet/minecraft/world/level/GameRules$Value; a
net/minecraft/world/level/GameRules$Value brq$g
	type a
	copy ()Lnet/minecraft/world/level/GameRules$Value; f
	deserialize (Ljava/lang/String;)V a
	getCommandResult ()I c
	getSelf ()Lnet/minecraft/world/level/GameRules$Value; g
	onChanged (Lnet/minecraft/server/MinecraftServer;)V a
	serialize ()Ljava/lang/String; b
	setFrom (Lnet/minecraft/world/level/GameRules$Value;Lnet/minecraft/server/MinecraftServer;)V a
	setFromArgument (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)V b
	updateFromArgument (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)V a
net/minecraft/world/level/GameRules$VisitorCaller brq$h
net/minecraft/world/level/GameType brr
	$VALUES h
	ADVENTURE d
	CREATIVE c
	NOT_SET a
	SPECTATOR e
	SURVIVAL b
	id f
	name g
	byId (I)Lnet/minecraft/world/level/GameType; a
	byId (ILnet/minecraft/world/level/GameType;)Lnet/minecraft/world/level/GameType; a
	byName (Ljava/lang/String;)Lnet/minecraft/world/level/GameType; a
	byName (Ljava/lang/String;Lnet/minecraft/world/level/GameType;)Lnet/minecraft/world/level/GameType; a
	getDisplayName ()Lnet/minecraft/network/chat/Component; c
	getId ()I a
	getName ()Ljava/lang/String; b
	isBlockPlacingRestricted ()Z d
	isCreative ()Z e
	isSurvival ()Z f
	updatePlayerAbilities (Lnet/minecraft/world/entity/player/Abilities;)V a
net/minecraft/world/level/GrassColor brs
	pixels a
	get (DD)I a
	init ([I)V a
net/minecraft/world/level/ItemLike brt
	asItem ()Lnet/minecraft/world/item/Item; h
net/minecraft/world/level/Level bru
	DIRECTIONS a
	END i
	LOGGER e
	NETHER h
	OVERWORLD g
	RESOURCE_KEY_CODEC f
	addend o
	biomeManager A
	blockEntitiesToUnload m
	blockEntityList j
	dimension B
	dimensionType x
	isClientSide v
	isDebug c
	levelData u
	oRainLevel p
	oThunderLevel r
	pendingBlockEntities l
	profiler y
	rainLevel q
	randValue n
	random t
	skyDarken d
	thread b
	thunderLevel s
	tickableBlockEntities k
	updatingBlockEntities w
	worldBorder z
	addAllPendingBlockEntities (Ljava/util/Collection;)V a
	addAlwaysVisibleParticle (Lnet/minecraft/core/particles/ParticleOptions;DDDDDD)V b
	addAlwaysVisibleParticle (Lnet/minecraft/core/particles/ParticleOptions;ZDDDDDD)V b
	addBlockEntity (Lnet/minecraft/world/level/block/entity/BlockEntity;)Z a
	addParticle (Lnet/minecraft/core/particles/ParticleOptions;DDDDDD)V a
	addParticle (Lnet/minecraft/core/particles/ParticleOptions;ZDDDDDD)V a
	blockEntityChanged (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/entity/BlockEntity;)V b
	blockEvent (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Block;II)V a
	broadcastEntityEvent (Lnet/minecraft/world/entity/Entity;B)V a
	createFireworks (DDDDDDLnet/minecraft/nbt/CompoundTag;)V a
	destroyBlock (Lnet/minecraft/core/BlockPos;ZLnet/minecraft/world/entity/Entity;I)Z a
	destroyBlockProgress (ILnet/minecraft/core/BlockPos;I)V a
	dimension ()Lnet/minecraft/resources/ResourceKey; X
	dimensionType ()Lnet/minecraft/world/level/dimension/DimensionType; k
	disconnect ()V R
	explode (Lnet/minecraft/world/entity/Entity;DDDFLnet/minecraft/world/level/Explosion$BlockInteraction;)Lnet/minecraft/world/level/Explosion; a
	explode (Lnet/minecraft/world/entity/Entity;DDDFZLnet/minecraft/world/level/Explosion$BlockInteraction;)Lnet/minecraft/world/level/Explosion; a
	explode (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/damagesource/DamageSource;Lnet/minecraft/world/level/ExplosionDamageCalculator;DDDFZLnet/minecraft/world/level/Explosion$BlockInteraction;)Lnet/minecraft/world/level/Explosion; a
	fillReportDetails (Lnet/minecraft/CrashReport;)Lnet/minecraft/CrashReportCategory; a
	gatherChunkSourceStats ()Ljava/lang/String; O
	getBestNeighborSignal (Lnet/minecraft/core/BlockPos;)I s
	getBiomeManager ()Lnet/minecraft/world/level/biome/BiomeManager; d
	getBlockEntity (Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/entity/BlockEntity; c
	getBlockRandomPos (IIII)Lnet/minecraft/core/BlockPos; a
	getBlockState (Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; d_
	getChunk (II)Lnet/minecraft/world/level/chunk/ChunkAccess; a
	getChunk (II)Lnet/minecraft/world/level/chunk/LevelChunk; d
	getChunk (IILnet/minecraft/world/level/chunk/ChunkStatus;Z)Lnet/minecraft/world/level/chunk/ChunkAccess; a
	getChunkAt (Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/chunk/LevelChunk; n
	getChunkForCollisions (II)Lnet/minecraft/world/level/BlockGetter; c
	getCurrentDifficultyAt (Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/DifficultyInstance; d
	getDayTime ()J T
	getDirectSignalTo (Lnet/minecraft/core/BlockPos;)I q
	getEntities (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/phys/AABB;Ljava/util/function/Predicate;)Ljava/util/List; a
	getEntities (Lnet/minecraft/world/entity/EntityType;Lnet/minecraft/world/phys/AABB;Ljava/util/function/Predicate;)Ljava/util/List; a
	getEntitiesOfClass (Ljava/lang/Class;Lnet/minecraft/world/phys/AABB;Ljava/util/function/Predicate;)Ljava/util/List; a
	getEntity (I)Lnet/minecraft/world/entity/Entity; a
	getFluidState (Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/material/FluidState; b
	getFreeMapId ()I t
	getGameRules ()Lnet/minecraft/world/level/GameRules; U
	getGameTime ()J S
	getHeight (Lnet/minecraft/world/level/levelgen/Heightmap$Types;II)I a
	getLevelData ()Lnet/minecraft/world/level/storage/LevelData; h
	getLightEngine ()Lnet/minecraft/world/level/lighting/LevelLightEngine; e
	getLoadedEntitiesOfClass (Ljava/lang/Class;Lnet/minecraft/world/phys/AABB;Ljava/util/function/Predicate;)Ljava/util/List; b
	getMapData (Ljava/lang/String;)Lnet/minecraft/world/level/saveddata/maps/MapItemSavedData; a
	getPendingBlockEntityAt (Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/entity/BlockEntity; E
	getProfiler ()Lnet/minecraft/util/profiling/ProfilerFiller; Y
	getProfilerSupplier ()Ljava/util/function/Supplier; Z
	getRainLevel (F)F d
	getRandom ()Ljava/util/Random; u_
	getRecipeManager ()Lnet/minecraft/world/item/crafting/RecipeManager; o
	getScoreboard ()Lnet/minecraft/world/scores/Scoreboard; F
	getSeaLevel ()I t_
	getServer ()Lnet/minecraft/server/MinecraftServer; l
	getSignal (Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;)I b
	getSkyDarken ()I c
	getSunAngle (F)F a
	getTagManager ()Lnet/minecraft/tags/TagContainer; p
	getThunderLevel (F)F b
	getTopBlockState (Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; j
	getWorldBorder ()Lnet/minecraft/world/level/border/WorldBorder; f
	globalLevelEvent (ILnet/minecraft/core/BlockPos;I)V b
	guardEntityTick (Ljava/util/function/Consumer;Lnet/minecraft/world/entity/Entity;)V a
	hasNeighborSignal (Lnet/minecraft/core/BlockPos;)Z r
	hasSignal (Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;)Z a
	isClientSide ()Z s_
	isDay ()Z L
	isDebug ()Z aa
	isFluidAtPosition (Lnet/minecraft/core/BlockPos;Ljava/util/function/Predicate;)Z b
	isHumidAt (Lnet/minecraft/core/BlockPos;)Z u
	isInSpawnableBounds (Lnet/minecraft/core/BlockPos;)Z l
	isInWorldBounds (Lnet/minecraft/core/BlockPos;)Z k
	isInWorldBoundsHorizontal (Lnet/minecraft/core/BlockPos;)Z D
	isLoaded (Lnet/minecraft/core/BlockPos;)Z p
	isNight ()Z M
	isOutsideBuildHeight (I)Z b
	isOutsideBuildHeight (Lnet/minecraft/core/BlockPos;)Z m
	isOutsideSpawnableHeight (I)Z d
	isRaining ()Z W
	isRainingAt (Lnet/minecraft/core/BlockPos;)Z t
	isStateAtPosition (Lnet/minecraft/core/BlockPos;Ljava/util/function/Predicate;)Z a
	isThundering ()Z V
	loadedAndEntityCanStandOn (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/Entity;)Z a
	loadedAndEntityCanStandOnFace (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/Entity;Lnet/minecraft/core/Direction;)Z a
	mayInteract (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/core/BlockPos;)Z a
	neighborChanged (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Block;Lnet/minecraft/core/BlockPos;)V a
	noSave ()Z q
	onBlockStateChange (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/state/BlockState;)V a
	playLocalSound (DDDLnet/minecraft/sounds/SoundEvent;Lnet/minecraft/sounds/SoundSource;FFZ)V a
	playSound (Lnet/minecraft/world/entity/player/Player;DDDLnet/minecraft/sounds/SoundEvent;Lnet/minecraft/sounds/SoundSource;FF)V a
	playSound (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/core/BlockPos;Lnet/minecraft/sounds/SoundEvent;Lnet/minecraft/sounds/SoundSource;FF)V a
	playSound (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/entity/Entity;Lnet/minecraft/sounds/SoundEvent;Lnet/minecraft/sounds/SoundSource;FF)V a
	prepareWeather ()V Q
	removeBlock (Lnet/minecraft/core/BlockPos;Z)Z a
	removeBlockEntity (Lnet/minecraft/core/BlockPos;)V o
	sendBlockUpdated (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/state/BlockState;I)V a
	sendPacketToServer (Lnet/minecraft/network/protocol/Packet;)V a
	setBlock (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;I)Z a
	setBlock (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;II)Z a
	setBlockAndUpdate (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Z a
	setBlockEntity (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/entity/BlockEntity;)V a
	setBlocksDirty (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/state/BlockState;)V b
	setMapData (Lnet/minecraft/world/level/saveddata/maps/MapItemSavedData;)V a
	setRainLevel (F)V e
	setSkyFlashTime (I)V c
	setSpawnSettings (ZZ)V b
	setThunderLevel (F)V c
	tickBlockEntities ()V N
	updateNeighborsAt (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Block;)V b
	updateNeighborsAtExceptFromFacing (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Block;Lnet/minecraft/core/Direction;)V a
	updateNeighbourForOutputSignal (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Block;)V c
	updateSkyBrightness ()V P
net/minecraft/world/level/LevelAccessor brv
	addParticle (Lnet/minecraft/core/particles/ParticleOptions;DDDDDD)V a
	blockUpdated (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Block;)V a
	dayTime ()J ab
	getBlockTicks ()Lnet/minecraft/world/level/TickList; I
	getChunkSource ()Lnet/minecraft/world/level/chunk/ChunkSource; G
	getCurrentDifficultyAt (Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/DifficultyInstance; d
	getDifficulty ()Lnet/minecraft/world/Difficulty; ac
	getHeight ()I ad
	getLevelData ()Lnet/minecraft/world/level/storage/LevelData; h
	getLiquidTicks ()Lnet/minecraft/world/level/TickList; H
	getRandom ()Ljava/util/Random; u_
	getServer ()Lnet/minecraft/server/MinecraftServer; l
	hasChunk (II)Z b
	levelEvent (ILnet/minecraft/core/BlockPos;I)V c
	levelEvent (Lnet/minecraft/world/entity/player/Player;ILnet/minecraft/core/BlockPos;I)V a
	playSound (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/core/BlockPos;Lnet/minecraft/sounds/SoundEvent;Lnet/minecraft/sounds/SoundSource;FF)V a
net/minecraft/world/level/LevelReader brw
	canSeeSkyFromBelowWater (Lnet/minecraft/core/BlockPos;)Z x
	containsAnyLiquid (Lnet/minecraft/world/phys/AABB;)Z d
	dimensionType ()Lnet/minecraft/world/level/dimension/DimensionType; k
	getBiome (Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/biome/Biome; v
	getBiomeManager ()Lnet/minecraft/world/level/biome/BiomeManager; d
	getBlockStatesIfLoaded (Lnet/minecraft/world/phys/AABB;)Ljava/util/stream/Stream; c
	getBlockTint (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/ColorResolver;)I a
	getBrightness (Lnet/minecraft/core/BlockPos;)F y
	getChunk (II)Lnet/minecraft/world/level/chunk/ChunkAccess; a
	getChunk (IILnet/minecraft/world/level/chunk/ChunkStatus;)Lnet/minecraft/world/level/chunk/ChunkAccess; a
	getChunk (IILnet/minecraft/world/level/chunk/ChunkStatus;Z)Lnet/minecraft/world/level/chunk/ChunkAccess; a
	getChunk (Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/chunk/ChunkAccess; z
	getChunkForCollisions (II)Lnet/minecraft/world/level/BlockGetter; c
	getDirectSignal (Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;)I c
	getHeight (Lnet/minecraft/world/level/levelgen/Heightmap$Types;II)I a
	getHeightmapPos (Lnet/minecraft/world/level/levelgen/Heightmap$Types;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/core/BlockPos; a
	getMaxLocalRawBrightness (Lnet/minecraft/core/BlockPos;)I B
	getMaxLocalRawBrightness (Lnet/minecraft/core/BlockPos;I)I c
	getNoiseBiome (III)Lnet/minecraft/world/level/biome/Biome; b
	getSeaLevel ()I t_
	getSkyDarken ()I c
	getUncachedNoiseBiome (III)Lnet/minecraft/world/level/biome/Biome; a
	hasChunk (II)Z b
	hasChunkAt (Lnet/minecraft/core/BlockPos;)Z C
	hasChunksAt (IIIIII)Z a
	hasChunksAt (Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Z a
	isClientSide ()Z s_
	isEmptyBlock (Lnet/minecraft/core/BlockPos;)Z w
	isWaterAt (Lnet/minecraft/core/BlockPos;)Z A
net/minecraft/world/level/LevelSettings brx
	allowCommands e
	dataPackConfig g
	difficulty d
	gameRules f
	gameType b
	hardcore c
	levelName a
	allowCommands ()Z e
	copy ()Lnet/minecraft/world/level/LevelSettings; h
	difficulty ()Lnet/minecraft/world/Difficulty; d
	gameRules ()Lnet/minecraft/world/level/GameRules; f
	gameType ()Lnet/minecraft/world/level/GameType; b
	getDataPackConfig ()Lnet/minecraft/world/level/DataPackConfig; g
	hardcore ()Z c
	levelName ()Ljava/lang/String; a
	parse (Lcom/mojang/serialization/Dynamic;Lnet/minecraft/world/level/DataPackConfig;)Lnet/minecraft/world/level/LevelSettings; a
	withDataPackConfig (Lnet/minecraft/world/level/DataPackConfig;)Lnet/minecraft/world/level/LevelSettings; a
	withDifficulty (Lnet/minecraft/world/Difficulty;)Lnet/minecraft/world/level/LevelSettings; a
	withGameType (Lnet/minecraft/world/level/GameType;)Lnet/minecraft/world/level/LevelSettings; a
net/minecraft/world/level/LevelSimulatedRW bry
net/minecraft/world/level/LevelSimulatedReader brz
	getHeightmapPos (Lnet/minecraft/world/level/levelgen/Heightmap$Types;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/core/BlockPos; a
	isFluidAtPosition (Lnet/minecraft/core/BlockPos;Ljava/util/function/Predicate;)Z b
	isStateAtPosition (Lnet/minecraft/core/BlockPos;Ljava/util/function/Predicate;)Z a
net/minecraft/world/level/LevelTimeAccess bsa
	dayTime ()J ab
	getMoonBrightness ()F ae
	getMoonPhase ()I af
	getTimeOfDay (F)F f
net/minecraft/world/level/LevelWriter bsb
	addFreshEntity (Lnet/minecraft/world/entity/Entity;)Z c
	destroyBlock (Lnet/minecraft/core/BlockPos;Z)Z b
	destroyBlock (Lnet/minecraft/core/BlockPos;ZLnet/minecraft/world/entity/Entity;)Z a
	destroyBlock (Lnet/minecraft/core/BlockPos;ZLnet/minecraft/world/entity/Entity;I)Z a
	removeBlock (Lnet/minecraft/core/BlockPos;Z)Z a
	setBlock (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;I)Z a
	setBlock (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;II)Z a
net/minecraft/world/level/LightLayer bsc
	$VALUES d
	BLOCK b
	SKY a
	surrounding c
net/minecraft/world/level/NaturalSpawner bsd
	LOGGER a
	MAGIC_NUMBER b
	SPAWNING_CATEGORIES c
	canSpawnMobAt (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/level/StructureFeatureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/world/entity/MobCategory;Lnet/minecraft/world/level/biome/MobSpawnSettings$SpawnerData;Lnet/minecraft/core/BlockPos;)Z a
	createState (ILjava/lang/Iterable;Lnet/minecraft/world/level/NaturalSpawner$ChunkGetter;)Lnet/minecraft/world/level/NaturalSpawner$SpawnState; a
	getMobForSpawn (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/EntityType;)Lnet/minecraft/world/entity/Mob; a
	getRandomPosWithin (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/level/chunk/LevelChunk;)Lnet/minecraft/core/BlockPos; a
	getRandomSpawnMobAt (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/level/StructureFeatureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/world/entity/MobCategory;Ljava/util/Random;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/biome/MobSpawnSettings$SpawnerData; a
	getRoughBiome (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/chunk/ChunkAccess;)Lnet/minecraft/world/level/biome/Biome; b
	getTopNonCollidingPos (Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/world/entity/EntityType;II)Lnet/minecraft/core/BlockPos; a
	isRightDistanceToPlayerAndSpawnPoint (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/level/chunk/ChunkAccess;Lnet/minecraft/core/BlockPos$MutableBlockPos;D)Z a
	isSpawnPositionOk (Lnet/minecraft/world/entity/SpawnPlacements$Type;Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/EntityType;)Z a
	isValidEmptySpawnBlock (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/material/FluidState;Lnet/minecraft/world/entity/EntityType;)Z a
	isValidPositionForMob (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/Mob;D)Z a
	isValidSpawnPostitionForType (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/MobCategory;Lnet/minecraft/world/level/StructureFeatureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/world/level/biome/MobSpawnSettings$SpawnerData;Lnet/minecraft/core/BlockPos$MutableBlockPos;D)Z a
	mobsAt (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/level/StructureFeatureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/world/entity/MobCategory;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/biome/Biome;)Ljava/util/List; a
	spawnCategoryForChunk (Lnet/minecraft/world/entity/MobCategory;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/level/chunk/LevelChunk;Lnet/minecraft/world/level/NaturalSpawner$SpawnPredicate;Lnet/minecraft/world/level/NaturalSpawner$AfterSpawnCallback;)V a
	spawnCategoryForPosition (Lnet/minecraft/world/entity/MobCategory;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;)V a
	spawnCategoryForPosition (Lnet/minecraft/world/entity/MobCategory;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/level/chunk/ChunkAccess;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/NaturalSpawner$SpawnPredicate;Lnet/minecraft/world/level/NaturalSpawner$AfterSpawnCallback;)V a
	spawnForChunk (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/level/chunk/LevelChunk;Lnet/minecraft/world/level/NaturalSpawner$SpawnState;ZZZ)V a
	spawnMobsForChunkGeneration (Lnet/minecraft/world/level/ServerLevelAccessor;Lnet/minecraft/world/level/biome/Biome;IILjava/util/Random;)V a
net/minecraft/world/level/NaturalSpawner$AfterSpawnCallback bsd$a
net/minecraft/world/level/NaturalSpawner$ChunkGetter bsd$b
net/minecraft/world/level/NaturalSpawner$SpawnPredicate bsd$c
net/minecraft/world/level/NaturalSpawner$SpawnState bsd$d
	lastCharge g
	lastCheckedPos e
	lastCheckedType f
	mobCategoryCounts b
	spawnPotential c
	spawnableChunkCount a
	unmodifiableMobCategoryCounts d
	afterSpawn (Lnet/minecraft/world/entity/Mob;Lnet/minecraft/world/level/chunk/ChunkAccess;)V a
	canSpawn (Lnet/minecraft/world/entity/EntityType;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/chunk/ChunkAccess;)Z a
	canSpawnForCategory (Lnet/minecraft/world/entity/MobCategory;)Z a
	getMobCategoryCounts ()Lit/unimi/dsi/fastutil/objects/Object2IntMap; b
	getSpawnableChunkCount ()I a
net/minecraft/world/level/NoiseColumn bse
	column a
	getBlockEntity (Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/entity/BlockEntity; c
	getBlockState (Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; d_
	getFluidState (Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/material/FluidState; b
net/minecraft/world/level/PathNavigationRegion bsf
	allEmpty d
	centerX a
	centerZ b
	chunks c
	level e
	getBlockEntity (Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/entity/BlockEntity; c
	getBlockState (Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; d_
	getChunk (II)Lnet/minecraft/world/level/chunk/ChunkAccess; a
	getChunk (Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/chunk/ChunkAccess; d
	getChunkForCollisions (II)Lnet/minecraft/world/level/BlockGetter; c
	getCollisions (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/phys/AABB;Ljava/util/function/Predicate;)Ljava/util/stream/Stream; d
	getEntityCollisions (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/phys/AABB;Ljava/util/function/Predicate;)Ljava/util/stream/Stream; c
	getFluidState (Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/material/FluidState; b
	getWorldBorder ()Lnet/minecraft/world/level/border/WorldBorder; f
net/minecraft/world/level/PotentialCalculator bsg
	charges a
	addCharge (Lnet/minecraft/core/BlockPos;D)V a
	getPotentialEnergyChange (Lnet/minecraft/core/BlockPos;D)D b
net/minecraft/world/level/PotentialCalculator$PointCharge bsg$a
	charge b
	pos a
	getPotentialChange (Lnet/minecraft/core/BlockPos;)D a
net/minecraft/world/level/ServerLevelAccessor bsh
	addFreshEntityWithPassengers (Lnet/minecraft/world/entity/Entity;)V l
	getLevel ()Lnet/minecraft/server/level/ServerLevel; E
net/minecraft/world/level/ServerTickList bsi
	alreadyTicked g
	currentlyTicking f
	ignore a
	level e
	tickNextTickList d
	tickNextTickSet c
	ticker h
	toId b
	addTickData (Lnet/minecraft/world/level/TickNextTickData;)V a
	copy (Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Lnet/minecraft/core/BlockPos;)V a
	fetchTicksInArea (Ljava/util/List;Ljava/util/Collection;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Z)Ljava/util/List; a
	fetchTicksInArea (Lnet/minecraft/world/level/levelgen/structure/BoundingBox;ZZ)Ljava/util/List; a
	fetchTicksInChunk (Lnet/minecraft/world/level/ChunkPos;ZZ)Ljava/util/List; a
	hasScheduledTick (Lnet/minecraft/core/BlockPos;Ljava/lang/Object;)Z a
	save (Lnet/minecraft/world/level/ChunkPos;)Lnet/minecraft/nbt/ListTag; a
	saveTickList (Ljava/util/function/Function;Ljava/lang/Iterable;J)Lnet/minecraft/nbt/ListTag; a
	scheduleTick (Lnet/minecraft/core/BlockPos;Ljava/lang/Object;ILnet/minecraft/world/level/TickPriority;)V a
	size ()I a
	tick ()V b
	willTickThisTick (Lnet/minecraft/core/BlockPos;Ljava/lang/Object;)Z b
net/minecraft/world/level/SpawnData bsj
	tag b
	getTag ()Lnet/minecraft/nbt/CompoundTag; b
	save ()Lnet/minecraft/nbt/CompoundTag; a
net/minecraft/world/level/StructureFeatureManager bsk
	level a
	worldGenSettings b
	addReferenceForFeature (Lnet/minecraft/core/SectionPos;Lnet/minecraft/world/level/levelgen/feature/StructureFeature;JLnet/minecraft/world/level/chunk/FeatureAccess;)V a
	forWorldGenRegion (Lnet/minecraft/server/level/WorldGenRegion;)Lnet/minecraft/world/level/StructureFeatureManager; a
	getStartForFeature (Lnet/minecraft/core/SectionPos;Lnet/minecraft/world/level/levelgen/feature/StructureFeature;Lnet/minecraft/world/level/chunk/FeatureAccess;)Lnet/minecraft/world/level/levelgen/structure/StructureStart; a
	getStructureAt (Lnet/minecraft/core/BlockPos;ZLnet/minecraft/world/level/levelgen/feature/StructureFeature;)Lnet/minecraft/world/level/levelgen/structure/StructureStart; a
	setStartForFeature (Lnet/minecraft/core/SectionPos;Lnet/minecraft/world/level/levelgen/feature/StructureFeature;Lnet/minecraft/world/level/levelgen/structure/StructureStart;Lnet/minecraft/world/level/chunk/FeatureAccess;)V a
	shouldGenerateFeatures ()Z a
	startsForFeature (Lnet/minecraft/core/SectionPos;Lnet/minecraft/world/level/levelgen/feature/StructureFeature;)Ljava/util/stream/Stream; a
net/minecraft/world/level/TickList bsl
	hasScheduledTick (Lnet/minecraft/core/BlockPos;Ljava/lang/Object;)Z a
	scheduleTick (Lnet/minecraft/core/BlockPos;Ljava/lang/Object;I)V a
	scheduleTick (Lnet/minecraft/core/BlockPos;Ljava/lang/Object;ILnet/minecraft/world/level/TickPriority;)V a
	size ()I a
	willTickThisTick (Lnet/minecraft/core/BlockPos;Ljava/lang/Object;)Z b
net/minecraft/world/level/TickNextTickData bsm
	c f
	counter d
	pos a
	priority c
	triggerTick b
	type e
	createTimeComparator ()Ljava/util/Comparator; a
	getType ()Ljava/lang/Object; b
net/minecraft/world/level/TickPriority bsn
	$VALUES i
	EXTREMELY_HIGH a
	EXTREMELY_LOW g
	HIGH c
	LOW e
	NORMAL d
	VERY_HIGH b
	VERY_LOW f
	value h
	byValue (I)Lnet/minecraft/world/level/TickPriority; a
	getValue ()I a
net/minecraft/world/level/WorldGenLevel bso
	getSeed ()J C
	startsForFeature (Lnet/minecraft/core/SectionPos;Lnet/minecraft/world/level/levelgen/feature/StructureFeature;)Ljava/util/stream/Stream; a
net/minecraft/world/level/biome/AmbientAdditionsSettings bsp
	CODEC a
	soundEvent b
	tickChance c
	getSoundEvent ()Lnet/minecraft/sounds/SoundEvent; a
	getTickChance ()D b
net/minecraft/world/level/biome/AmbientMoodSettings bsq
	CODEC a
	LEGACY_CAVE_SETTINGS b
	blockSearchExtent e
	soundEvent c
	soundPositionOffset f
	tickDelay d
	getBlockSearchExtent ()I c
	getSoundEvent ()Lnet/minecraft/sounds/SoundEvent; a
	getSoundPositionOffset ()D d
	getTickDelay ()I b
net/minecraft/world/level/biome/AmbientParticleSettings bsr
	CODEC a
	options b
	probability c
	canSpawn (Ljava/util/Random;)Z a
	getOptions ()Lnet/minecraft/core/particles/ParticleOptions; a
net/minecraft/world/level/biome/Biome bss
	BIOME_INFO_NOISE f
	CODEC d
	DIRECT_CODEC b
	FROZEN_TEMPERATURE_NOISE i
	LIST_CODEC e
	LOGGER a
	NETWORK_CODEC c
	TEMPERATURE_NOISE h
	biomeCategory o
	climateSettings j
	depth m
	generationSettings k
	mobSettings l
	scale n
	specialEffects p
	structuresByStep g
	temperatureCache q
	buildSurfaceAt (Ljava/util/Random;Lnet/minecraft/world/level/chunk/ChunkAccess;IIIDLnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/state/BlockState;IJ)V a
	generate (Lnet/minecraft/world/level/StructureFeatureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/server/level/WorldGenRegion;JLnet/minecraft/world/level/levelgen/WorldgenRandom;Lnet/minecraft/core/BlockPos;)V a
	getAmbientAdditions ()Ljava/util/Optional; r
	getAmbientLoop ()Ljava/util/Optional; p
	getAmbientMood ()Ljava/util/Optional; q
	getAmbientParticle ()Ljava/util/Optional; o
	getBackgroundMusic ()Ljava/util/Optional; s
	getBaseTemperature ()F k
	getBiomeCategory ()Lnet/minecraft/world/level/biome/Biome$BiomeCategory; t
	getDepth ()F h
	getDownfall ()F i
	getFogColor ()I f
	getFoliageColor ()I g
	getFoliageColorFromTexture ()I w
	getGenerationSettings ()Lnet/minecraft/world/level/biome/BiomeGenerationSettings; e
	getGrassColor (DD)I a
	getGrassColorFromTexture ()I v
	getHeightAdjustedTemperature (Lnet/minecraft/core/BlockPos;)F b
	getMobSettings ()Lnet/minecraft/world/level/biome/MobSpawnSettings; b
	getPrecipitation ()Lnet/minecraft/world/level/biome/Biome$Precipitation; c
	getScale ()F j
	getSkyColor ()I a
	getSpecialEffects ()Lnet/minecraft/world/level/biome/BiomeSpecialEffects; l
	getTemperature (Lnet/minecraft/core/BlockPos;)F a
	getWaterColor ()I m
	getWaterFogColor ()I n
	isHumid ()Z d
	shouldFreeze (Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;)Z a
	shouldFreeze (Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;Z)Z a
	shouldSnow (Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;)Z b
net/minecraft/world/level/biome/Biome$BiomeBuilder bss$a
	biomeCategory b
	depth c
	downfall g
	generationSettings j
	mobSpawnSettings i
	precipitation a
	scale d
	specialEffects h
	temperature e
	temperatureModifier f
	biomeCategory (Lnet/minecraft/world/level/biome/Biome$BiomeCategory;)Lnet/minecraft/world/level/biome/Biome$BiomeBuilder; a
	build ()Lnet/minecraft/world/level/biome/Biome; a
	depth (F)Lnet/minecraft/world/level/biome/Biome$BiomeBuilder; a
	downfall (F)Lnet/minecraft/world/level/biome/Biome$BiomeBuilder; d
	generationSettings (Lnet/minecraft/world/level/biome/BiomeGenerationSettings;)Lnet/minecraft/world/level/biome/Biome$BiomeBuilder; a
	mobSpawnSettings (Lnet/minecraft/world/level/biome/MobSpawnSettings;)Lnet/minecraft/world/level/biome/Biome$BiomeBuilder; a
	precipitation (Lnet/minecraft/world/level/biome/Biome$Precipitation;)Lnet/minecraft/world/level/biome/Biome$BiomeBuilder; a
	scale (F)Lnet/minecraft/world/level/biome/Biome$BiomeBuilder; b
	specialEffects (Lnet/minecraft/world/level/biome/BiomeSpecialEffects;)Lnet/minecraft/world/level/biome/Biome$BiomeBuilder; a
	temperature (F)Lnet/minecraft/world/level/biome/Biome$BiomeBuilder; c
	temperatureAdjustment (Lnet/minecraft/world/level/biome/Biome$TemperatureModifier;)Lnet/minecraft/world/level/biome/Biome$BiomeBuilder; a
net/minecraft/world/level/biome/Biome$BiomeCategory bss$b
	$VALUES u
	BEACH j
	BY_NAME s
	CODEC r
	DESERT m
	EXTREME_HILLS c
	FOREST k
	ICY h
	JUNGLE d
	MESA e
	MUSHROOM p
	NETHER q
	NONE a
	OCEAN l
	PLAINS f
	RIVER n
	SAVANNA g
	SWAMP o
	TAIGA b
	THEEND i
	name t
	byName (Ljava/lang/String;)Lnet/minecraft/world/level/biome/Biome$BiomeCategory; a
	getName ()Ljava/lang/String; b
	getSerializedName ()Ljava/lang/String; a
net/minecraft/world/level/biome/Biome$ClimateParameters bss$c
	CODEC a
	altitude d
	humidity c
	offset f
	temperature b
	weirdness e
	fitness (Lnet/minecraft/world/level/biome/Biome$ClimateParameters;)F a
net/minecraft/world/level/biome/Biome$ClimateSettings bss$d
	CODEC a
	downfall e
	precipitation b
	temperature c
	temperatureModifier d
net/minecraft/world/level/biome/Biome$Precipitation bss$e
	$VALUES g
	BY_NAME e
	CODEC d
	NONE a
	RAIN b
	SNOW c
	name f
	byName (Ljava/lang/String;)Lnet/minecraft/world/level/biome/Biome$Precipitation; a
	getName ()Ljava/lang/String; b
	getSerializedName ()Ljava/lang/String; a
net/minecraft/world/level/biome/Biome$TemperatureModifier bss$f
	$VALUES f
	BY_NAME e
	CODEC c
	FROZEN b
	NONE a
	name d
	byName (Ljava/lang/String;)Lnet/minecraft/world/level/biome/Biome$TemperatureModifier; a
	getName ()Ljava/lang/String; b
	getSerializedName ()Ljava/lang/String; a
	modifyTemperature (Lnet/minecraft/core/BlockPos;F)F a
net/minecraft/world/level/biome/BiomeGenerationSettings bst
	CODEC c
	EMPTY b
	LOGGER a
	carvers e
	features f
	flowerFeatures h
	structureStarts g
	surfaceBuilder d
	features ()Ljava/util/List; c
	getCarvers (Lnet/minecraft/world/level/levelgen/GenerationStep$Carving;)Ljava/util/List; a
	getFlowerFeatures ()Ljava/util/List; b
	getSurfaceBuilder ()Ljava/util/function/Supplier; d
	getSurfaceBuilderConfig ()Lnet/minecraft/world/level/levelgen/surfacebuilders/SurfaceBuilderConfiguration; e
	isValidStart (Lnet/minecraft/world/level/levelgen/feature/StructureFeature;)Z a
	structures ()Ljava/util/Collection; a
	withBiomeConfig (Lnet/minecraft/world/level/levelgen/feature/ConfiguredStructureFeature;)Lnet/minecraft/world/level/levelgen/feature/ConfiguredStructureFeature; a
net/minecraft/world/level/biome/BiomeGenerationSettings$Builder bst$a
	carvers b
	features c
	structureStarts d
	surfaceBuilder a
	addCarver (Lnet/minecraft/world/level/levelgen/GenerationStep$Carving;Lnet/minecraft/world/level/levelgen/carver/ConfiguredWorldCarver;)Lnet/minecraft/world/level/biome/BiomeGenerationSettings$Builder; a
	addFeature (ILjava/util/function/Supplier;)Lnet/minecraft/world/level/biome/BiomeGenerationSettings$Builder; a
	addFeature (Lnet/minecraft/world/level/levelgen/GenerationStep$Decoration;Lnet/minecraft/world/level/levelgen/feature/ConfiguredFeature;)Lnet/minecraft/world/level/biome/BiomeGenerationSettings$Builder; a
	addFeatureStepsUpTo (I)V a
	addStructureStart (Lnet/minecraft/world/level/levelgen/feature/ConfiguredStructureFeature;)Lnet/minecraft/world/level/biome/BiomeGenerationSettings$Builder; a
	build ()Lnet/minecraft/world/level/biome/BiomeGenerationSettings; a
	surfaceBuilder (Ljava/util/function/Supplier;)Lnet/minecraft/world/level/biome/BiomeGenerationSettings$Builder; a
	surfaceBuilder (Lnet/minecraft/world/level/levelgen/surfacebuilders/ConfiguredSurfaceBuilder;)Lnet/minecraft/world/level/biome/BiomeGenerationSettings$Builder; a
net/minecraft/world/level/biome/BiomeManager bsu
	biomeZoomSeed b
	noiseBiomeSource a
	zoomer c
	getBiome (Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/biome/Biome; a
	getNoiseBiomeAtPosition (DDD)Lnet/minecraft/world/level/biome/Biome; a
	getNoiseBiomeAtPosition (Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/biome/Biome; b
	getNoiseBiomeAtQuart (III)Lnet/minecraft/world/level/biome/Biome; a
	obfuscateSeed (J)J a
	withDifferentSource (Lnet/minecraft/world/level/biome/BiomeSource;)Lnet/minecraft/world/level/biome/BiomeManager; a
net/minecraft/world/level/biome/BiomeManager$NoiseBiomeSource bsu$a
	getNoiseBiome (III)Lnet/minecraft/world/level/biome/Biome; b
net/minecraft/world/level/biome/BiomeSource bsv
	CODEC a
	possibleBiomes d
	supportedStructures b
	surfaceBlocks c
	canGenerateStructure (Lnet/minecraft/world/level/levelgen/feature/StructureFeature;)Z a
	codec ()Lcom/mojang/serialization/Codec; a
	findBiomeHorizontal (IIIIILjava/util/function/Predicate;Ljava/util/Random;Z)Lnet/minecraft/core/BlockPos; a
	findBiomeHorizontal (IIIILjava/util/function/Predicate;Ljava/util/Random;)Lnet/minecraft/core/BlockPos; a
	getBiomesWithin (IIII)Ljava/util/Set; a
	getSurfaceBlocks ()Ljava/util/Set; c
	possibleBiomes ()Ljava/util/List; b
	withSeed (J)Lnet/minecraft/world/level/biome/BiomeSource; a
net/minecraft/world/level/biome/BiomeSpecialEffects bsw
	CODEC a
	ambientAdditionsSettings l
	ambientLoopSoundEvent j
	ambientMoodSettings k
	ambientParticleSettings i
	backgroundMusic m
	fogColor b
	foliageColorOverride f
	grassColorModifier h
	grassColorOverride g
	skyColor e
	waterColor c
	waterFogColor d
	getAmbientAdditionsSettings ()Ljava/util/Optional; k
	getAmbientLoopSoundEvent ()Ljava/util/Optional; i
	getAmbientMoodSettings ()Ljava/util/Optional; j
	getAmbientParticleSettings ()Ljava/util/Optional; h
	getBackgroundMusic ()Ljava/util/Optional; l
	getFogColor ()I a
	getFoliageColorOverride ()Ljava/util/Optional; e
	getGrassColorModifier ()Lnet/minecraft/world/level/biome/BiomeSpecialEffects$GrassColorModifier; g
	getGrassColorOverride ()Ljava/util/Optional; f
	getSkyColor ()I d
	getWaterColor ()I b
	getWaterFogColor ()I c
net/minecraft/world/level/biome/BiomeSpecialEffects$Builder bsw$a
	ambientAdditionsSettings k
	ambientLoopSoundEvent i
	ambientMoodSettings j
	ambientParticle h
	backgroundMusic l
	fogColor a
	foliageColorOverride e
	grassColorModifier g
	grassColorOverride f
	skyColor d
	waterColor b
	waterFogColor c
	ambientAdditionsSound (Lnet/minecraft/world/level/biome/AmbientAdditionsSettings;)Lnet/minecraft/world/level/biome/BiomeSpecialEffects$Builder; a
	ambientLoopSound (Lnet/minecraft/sounds/SoundEvent;)Lnet/minecraft/world/level/biome/BiomeSpecialEffects$Builder; a
	ambientMoodSound (Lnet/minecraft/world/level/biome/AmbientMoodSettings;)Lnet/minecraft/world/level/biome/BiomeSpecialEffects$Builder; a
	ambientParticle (Lnet/minecraft/world/level/biome/AmbientParticleSettings;)Lnet/minecraft/world/level/biome/BiomeSpecialEffects$Builder; a
	backgroundMusic (Lnet/minecraft/sounds/Music;)Lnet/minecraft/world/level/biome/BiomeSpecialEffects$Builder; a
	build ()Lnet/minecraft/world/level/biome/BiomeSpecialEffects; a
	fogColor (I)Lnet/minecraft/world/level/biome/BiomeSpecialEffects$Builder; a
	foliageColorOverride (I)Lnet/minecraft/world/level/biome/BiomeSpecialEffects$Builder; e
	grassColorModifier (Lnet/minecraft/world/level/biome/BiomeSpecialEffects$GrassColorModifier;)Lnet/minecraft/world/level/biome/BiomeSpecialEffects$Builder; a
	grassColorOverride (I)Lnet/minecraft/world/level/biome/BiomeSpecialEffects$Builder; f
	skyColor (I)Lnet/minecraft/world/level/biome/BiomeSpecialEffects$Builder; d
	waterColor (I)Lnet/minecraft/world/level/biome/BiomeSpecialEffects$Builder; b
	waterFogColor (I)Lnet/minecraft/world/level/biome/BiomeSpecialEffects$Builder; c
net/minecraft/world/level/biome/BiomeSpecialEffects$GrassColorModifier bsw$b
	$VALUES g
	BY_NAME f
	CODEC d
	DARK_FOREST b
	NONE a
	SWAMP c
	name e
	byName (Ljava/lang/String;)Lnet/minecraft/world/level/biome/BiomeSpecialEffects$GrassColorModifier; a
	getName ()Ljava/lang/String; b
	getSerializedName ()Ljava/lang/String; a
	modifyColor (DDI)I a
net/minecraft/world/level/biome/BiomeZoomer bsx
	getBiome (JIIILnet/minecraft/world/level/biome/BiomeManager$NoiseBiomeSource;)Lnet/minecraft/world/level/biome/Biome; a
net/minecraft/world/level/biome/Biomes bsy
	BADLANDS L
	BADLANDS_PLATEAU N
	BAMBOO_JUNGLE av
	BAMBOO_JUNGLE_HILLS aw
	BASALT_DELTAS aA
	BEACH q
	BIRCH_FOREST B
	BIRCH_FOREST_HILLS C
	COLD_OCEAN U
	CRIMSON_FOREST ay
	DARK_FOREST D
	DARK_FOREST_HILLS al
	DEEP_COLD_OCEAN X
	DEEP_FROZEN_OCEAN Y
	DEEP_LUKEWARM_OCEAN W
	DEEP_OCEAN y
	DEEP_WARM_OCEAN V
	DESERT c
	DESERT_HILLS r
	DESERT_LAKES ab
	END_BARRENS R
	END_HIGHLANDS Q
	END_MIDLANDS P
	ERODED_BADLANDS as
	FLOWER_FOREST ad
	FOREST e
	FROZEN_OCEAN k
	FROZEN_RIVER l
	GIANT_SPRUCE_TAIGA an
	GIANT_SPRUCE_TAIGA_HILLS ao
	GIANT_TREE_TAIGA G
	GIANT_TREE_TAIGA_HILLS H
	GRAVELLY_MOUNTAINS ac
	ICE_SPIKES ag
	JUNGLE v
	JUNGLE_EDGE x
	JUNGLE_HILLS w
	LUKEWARM_OCEAN T
	MODIFIED_BADLANDS_PLATEAU au
	MODIFIED_GRAVELLY_MOUNTAINS ap
	MODIFIED_JUNGLE ah
	MODIFIED_JUNGLE_EDGE ai
	MODIFIED_WOODED_BADLANDS_PLATEAU at
	MOUNTAINS d
	MOUNTAIN_EDGE u
	MUSHROOM_FIELDS o
	MUSHROOM_FIELD_SHORE p
	NETHER_WASTES i
	OCEAN a
	PLAINS b
	RIVER h
	SAVANNA J
	SAVANNA_PLATEAU K
	SHATTERED_SAVANNA aq
	SHATTERED_SAVANNA_PLATEAU ar
	SMALL_END_ISLANDS O
	SNOWY_BEACH A
	SNOWY_MOUNTAINS n
	SNOWY_TAIGA E
	SNOWY_TAIGA_HILLS F
	SNOWY_TAIGA_MOUNTAINS am
	SNOWY_TUNDRA m
	SOUL_SAND_VALLEY ax
	STONE_SHORE z
	SUNFLOWER_PLAINS aa
	SWAMP g
	SWAMP_HILLS af
	TAIGA f
	TAIGA_HILLS t
	TAIGA_MOUNTAINS ae
	TALL_BIRCH_FOREST aj
	TALL_BIRCH_HILLS ak
	THE_END j
	THE_VOID Z
	WARM_OCEAN S
	WARPED_FOREST az
	WOODED_BADLANDS_PLATEAU M
	WOODED_HILLS s
	WOODED_MOUNTAINS I
	register (Ljava/lang/String;)Lnet/minecraft/resources/ResourceKey; a
net/minecraft/world/level/biome/CheckerboardColumnBiomeSource bsz
	CODEC e
	allowedBiomes f
	bitShift g
	size h
	codec ()Lcom/mojang/serialization/Codec; a
	getNoiseBiome (III)Lnet/minecraft/world/level/biome/Biome; b
	withSeed (J)Lnet/minecraft/world/level/biome/BiomeSource; a
net/minecraft/world/level/biome/FixedBiomeSource bta
	CODEC e
	biome f
	codec ()Lcom/mojang/serialization/Codec; a
	findBiomeHorizontal (IIIIILjava/util/function/Predicate;Ljava/util/Random;Z)Lnet/minecraft/core/BlockPos; a
	getBiomesWithin (IIII)Ljava/util/Set; a
	getNoiseBiome (III)Lnet/minecraft/world/level/biome/Biome; b
	withSeed (J)Lnet/minecraft/world/level/biome/BiomeSource; a
net/minecraft/world/level/biome/FuzzyOffsetBiomeZoomer btb
	$VALUES b
	INSTANCE a
	getBiome (JIIILnet/minecraft/world/level/biome/BiomeManager$NoiseBiomeSource;)Lnet/minecraft/world/level/biome/Biome; a
	getFiddle (J)D a
	getFiddledDistance (JIIIDDD)D a
	sqr (D)D a
net/minecraft/world/level/biome/FuzzyOffsetConstantColumnBiomeZoomer btc
	$VALUES b
	INSTANCE a
	getBiome (JIIILnet/minecraft/world/level/biome/BiomeManager$NoiseBiomeSource;)Lnet/minecraft/world/level/biome/Biome; a
net/minecraft/world/level/biome/MobSpawnSettings btd
	CODEC c
	EMPTY b
	LOGGER a
	creatureGenerationProbability d
	mobSpawnCosts f
	playerSpawnFriendly g
	spawners e
	getCreatureProbability ()F a
	getMobSpawnCost (Lnet/minecraft/world/entity/EntityType;)Lnet/minecraft/world/level/biome/MobSpawnSettings$MobSpawnCost; a
	getMobs (Lnet/minecraft/world/entity/MobCategory;)Ljava/util/List; a
	playerSpawnFriendly ()Z b
net/minecraft/world/level/biome/MobSpawnSettings$Builder btd$a
	creatureGenerationProbability c
	mobSpawnCosts b
	playerCanSpawn d
	spawners a
	addMobCharge (Lnet/minecraft/world/entity/EntityType;DD)Lnet/minecraft/world/level/biome/MobSpawnSettings$Builder; a
	addSpawn (Lnet/minecraft/world/entity/MobCategory;Lnet/minecraft/world/level/biome/MobSpawnSettings$SpawnerData;)Lnet/minecraft/world/level/biome/MobSpawnSettings$Builder; a
	build ()Lnet/minecraft/world/level/biome/MobSpawnSettings; b
	creatureGenerationProbability (F)Lnet/minecraft/world/level/biome/MobSpawnSettings$Builder; a
	setPlayerCanSpawn ()Lnet/minecraft/world/level/biome/MobSpawnSettings$Builder; a
net/minecraft/world/level/biome/MobSpawnSettings$MobSpawnCost btd$b
	CODEC a
	charge c
	energyBudget b
	getCharge ()D b
	getEnergyBudget ()D a
net/minecraft/world/level/biome/MobSpawnSettings$SpawnerData btd$c
	CODEC b
	maxCount e
	minCount d
	type c
net/minecraft/world/level/biome/MultiNoiseBiomeSource bte
	CODEC f
	DEFAULT_NOISE_PARAMETERS g
	DIRECT_CODEC e
	altitudeNoise n
	altitudeParams j
	humidityNoise m
	humidityParams i
	parameters p
	preset s
	seed r
	temperatureNoise l
	temperatureParams h
	useY q
	weirdnessNoise o
	weirdnessParams k
	codec ()Lcom/mojang/serialization/Codec; a
	getNoiseBiome (III)Lnet/minecraft/world/level/biome/Biome; b
	preset ()Ljava/util/Optional; d
	stable (J)Z b
	withSeed (J)Lnet/minecraft/world/level/biome/BiomeSource; a
net/minecraft/world/level/biome/MultiNoiseBiomeSource$NoiseParameters bte$a
	CODEC a
	amplitudes c
	firstOctave b
	amplitudes ()Lit/unimi/dsi/fastutil/doubles/DoubleList; b
	firstOctave ()I a
net/minecraft/world/level/biome/MultiNoiseBiomeSource$Preset bte$b
	BY_NAME b
	NETHER a
	biomeSource d
	name c
	biomeSource (Lnet/minecraft/core/Registry;J)Lnet/minecraft/world/level/biome/MultiNoiseBiomeSource; a
net/minecraft/world/level/biome/MultiNoiseBiomeSource$PresetInstance bte$c
	CODEC a
	biomes c
	preset b
	seed d
	biomeSource ()Lnet/minecraft/world/level/biome/MultiNoiseBiomeSource; d
	biomes ()Lnet/minecraft/core/Registry; b
	preset ()Lnet/minecraft/world/level/biome/MultiNoiseBiomeSource$Preset; a
	seed ()J c
net/minecraft/world/level/biome/NearestNeighborBiomeZoomer btf
	$VALUES b
	INSTANCE a
	getBiome (JIIILnet/minecraft/world/level/biome/BiomeManager$NoiseBiomeSource;)Lnet/minecraft/world/level/biome/Biome; a
net/minecraft/world/level/biome/OverworldBiomeSource btg
	CODEC e
	POSSIBLE_BIOMES g
	biomes k
	largeBiomes j
	legacyBiomeInitLayer i
	noiseBiomeLayer f
	seed h
	codec ()Lcom/mojang/serialization/Codec; a
	getNoiseBiome (III)Lnet/minecraft/world/level/biome/Biome; b
	withSeed (J)Lnet/minecraft/world/level/biome/BiomeSource; a
net/minecraft/world/level/biome/TheEndBiomeSource bth
	CODEC e
	barrens m
	biomes g
	end i
	highlands j
	islandNoise f
	islands l
	midlands k
	seed h
	codec ()Lcom/mojang/serialization/Codec; a
	getHeightValue (Lnet/minecraft/world/level/levelgen/synth/SimplexNoise;II)F a
	getNoiseBiome (III)Lnet/minecraft/world/level/biome/Biome; b
	stable (J)Z b
	withSeed (J)Lnet/minecraft/world/level/biome/BiomeSource; a
net/minecraft/world/level/block/AbstractBannerBlock btj
	color a
	getCloneItemStack (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/item/ItemStack; a
	getColor ()Lnet/minecraft/world/item/DyeColor; b
	isPossibleToRespawnInThis ()Z ai_
	newBlockEntity (Lnet/minecraft/world/level/BlockGetter;)Lnet/minecraft/world/level/block/entity/BlockEntity; a
	setPlacedBy (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/item/ItemStack;)V a
net/minecraft/world/level/block/AbstractChestBlock btk
	blockEntityType a
	combine (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Z)Lnet/minecraft/world/level/block/DoubleBlockCombiner$NeighborCombineResult; a
net/minecraft/world/level/block/AbstractFurnaceBlock btl
	FACING a
	LIT b
	animateTick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)V a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getAnalogOutputSignal (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)I a
	getRenderShape (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/RenderShape; b
	getStateForPlacement (Lnet/minecraft/world/item/context/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	hasAnalogOutputSignal (Lnet/minecraft/world/level/block/state/BlockState;)Z a
	mirror (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Mirror;)Lnet/minecraft/world/level/block/state/BlockState; a
	onRemove (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)V a
	openContainer (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/player/Player;)V a
	rotate (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Rotation;)Lnet/minecraft/world/level/block/state/BlockState; a
	setPlacedBy (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/item/ItemStack;)V a
	use (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;Lnet/minecraft/world/phys/BlockHitResult;)Lnet/minecraft/world/InteractionResult; a
net/minecraft/world/level/block/AbstractGlassBlock btm
	getShadeBrightness (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)F a
	getVisualShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	propagatesSkylightDown (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Z b
net/minecraft/world/level/block/AbstractSkullBlock btn
	type a
	getType ()Lnet/minecraft/world/level/block/SkullBlock$Type; b
	isPathfindable (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/pathfinder/PathComputationType;)Z a
	newBlockEntity (Lnet/minecraft/world/level/BlockGetter;)Lnet/minecraft/world/level/block/entity/BlockEntity; a
net/minecraft/world/level/block/AirBlock bto
	getRenderShape (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/RenderShape; b
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; b
net/minecraft/world/level/block/AnvilBlock btp
	BASE b
	CONTAINER_TITLE k
	FACING a
	X_AXIS_AABB i
	X_LEG1 c
	X_LEG2 d
	X_TOP e
	Z_AXIS_AABB j
	Z_LEG1 f
	Z_LEG2 g
	Z_TOP h
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	damage (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/state/BlockState; c
	falling (Lnet/minecraft/world/entity/item/FallingBlockEntity;)V a
	getDustColor (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)I c
	getMenuProvider (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/MenuProvider; b
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; b
	getStateForPlacement (Lnet/minecraft/world/item/context/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	isPathfindable (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/pathfinder/PathComputationType;)Z a
	onBroken (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/item/FallingBlockEntity;)V a
	onLand (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/entity/item/FallingBlockEntity;)V a
	rotate (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Rotation;)Lnet/minecraft/world/level/block/state/BlockState; a
	use (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;Lnet/minecraft/world/phys/BlockHitResult;)Lnet/minecraft/world/InteractionResult; a
net/minecraft/world/level/block/AttachedStemBlock btq
	AABBS c
	FACING a
	fruit b
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getCloneItemStack (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/item/ItemStack; a
	getSeedItem ()Lnet/minecraft/world/item/Item; b
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; b
	mayPlaceOn (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Z c
	mirror (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Mirror;)Lnet/minecraft/world/level/block/state/BlockState; a
	rotate (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Rotation;)Lnet/minecraft/world/level/block/state/BlockState; a
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
net/minecraft/world/level/block/BambooBlock btr
	AGE d
	COLLISION_SHAPE c
	LARGE_SHAPE b
	LEAVES e
	SMALL_SHAPE a
	STAGE f
	canSurvive (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;)Z a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getCollisionShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; c
	getDestroyProgress (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)F a
	getHeightAboveUpToMax (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)I a
	getHeightBelowUpToMax (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)I b
	getOffsetType ()Lnet/minecraft/world/level/block/state/BlockBehaviour$OffsetType; ah_
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; b
	getStateForPlacement (Lnet/minecraft/world/item/context/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	growBamboo (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Ljava/util/Random;I)V a
	isBonemealSuccess (Lnet/minecraft/world/level/Level;Ljava/util/Random;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Z a
	isPathfindable (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/pathfinder/PathComputationType;)Z a
	isRandomlyTicking (Lnet/minecraft/world/level/block/state/BlockState;)Z a_
	isValidBonemealTarget (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)Z a
	performBonemeal (Lnet/minecraft/server/level/ServerLevel;Ljava/util/Random;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V a
	propagatesSkylightDown (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Z b
	randomTick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)V b
	tick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)V a
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
net/minecraft/world/level/block/BambooSaplingBlock bts
	SAPLING_SHAPE a
	canSurvive (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;)Z a
	getCloneItemStack (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/item/ItemStack; a
	getDestroyProgress (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)F a
	getOffsetType ()Lnet/minecraft/world/level/block/state/BlockBehaviour$OffsetType; ah_
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; b
	growBamboo (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)V a
	isBonemealSuccess (Lnet/minecraft/world/level/Level;Ljava/util/Random;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Z a
	isValidBonemealTarget (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)Z a
	performBonemeal (Lnet/minecraft/server/level/ServerLevel;Ljava/util/Random;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V a
	randomTick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)V b
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
net/minecraft/world/level/block/BannerBlock btt
	BY_COLOR b
	ROTATION a
	SHAPE c
	byColor (Lnet/minecraft/world/item/DyeColor;)Lnet/minecraft/world/level/block/Block; a
	canSurvive (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;)Z a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; b
	getStateForPlacement (Lnet/minecraft/world/item/context/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	mirror (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Mirror;)Lnet/minecraft/world/level/block/state/BlockState; a
	rotate (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Rotation;)Lnet/minecraft/world/level/block/state/BlockState; a
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
net/minecraft/world/level/block/BarrelBlock btu
	FACING a
	OPEN b
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getAnalogOutputSignal (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)I a
	getRenderShape (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/RenderShape; b
	getStateForPlacement (Lnet/minecraft/world/item/context/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	hasAnalogOutputSignal (Lnet/minecraft/world/level/block/state/BlockState;)Z a
	mirror (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Mirror;)Lnet/minecraft/world/level/block/state/BlockState; a
	newBlockEntity (Lnet/minecraft/world/level/BlockGetter;)Lnet/minecraft/world/level/block/entity/BlockEntity; a
	onRemove (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)V a
	rotate (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Rotation;)Lnet/minecraft/world/level/block/state/BlockState; a
	setPlacedBy (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/item/ItemStack;)V a
	tick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)V a
	use (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;Lnet/minecraft/world/phys/BlockHitResult;)Lnet/minecraft/world/InteractionResult; a
net/minecraft/world/level/block/BarrierBlock btv
	getRenderShape (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/RenderShape; b
	getShadeBrightness (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)F a
	propagatesSkylightDown (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Z b
net/minecraft/world/level/block/BaseCoralFanBlock btw
	AABB a
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; b
net/minecraft/world/level/block/BaseCoralPlantBlock btx
	SHAPE a
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; b
net/minecraft/world/level/block/BaseCoralPlantTypeBlock bty
	AABB a
	WATERLOGGED b
	canSurvive (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;)Z a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getFluidState (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/material/FluidState; d
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; b
	getStateForPlacement (Lnet/minecraft/world/item/context/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	scanForWater (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Z c
	tryScheduleDieTick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;)V a
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
net/minecraft/world/level/block/BaseCoralWallFanBlock btz
	FACING a
	SHAPES c
	canSurvive (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;)Z a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; b
	getStateForPlacement (Lnet/minecraft/world/item/context/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	mirror (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Mirror;)Lnet/minecraft/world/level/block/state/BlockState; a
	rotate (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Rotation;)Lnet/minecraft/world/level/block/state/BlockState; a
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
net/minecraft/world/level/block/BaseEntityBlock bua
	getMenuProvider (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/MenuProvider; b
	getRenderShape (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/RenderShape; b
	triggerEvent (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;II)Z a
net/minecraft/world/level/block/BaseFireBlock bub
	DOWN_AABB a
	fireDamage b
	animateTick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)V a
	canBePlacedAt (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;)Z a
	canBurn (Lnet/minecraft/world/level/block/state/BlockState;)Z e
	entityInside (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/Entity;)V a
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; b
	getState (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
	getStateForPlacement (Lnet/minecraft/world/item/context/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	inPortalDimension (Lnet/minecraft/world/level/Level;)Z a
	isPortal (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;)Z b
	onPlace (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)V b
	playerWillDestroy (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/entity/player/Player;)V a
net/minecraft/world/level/block/BasePressurePlateBlock buc
	AABB b
	PRESSED_AABB a
	TOUCH_AABB c
	canSurvive (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;)Z a
	checkPressed (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;I)V a
	entityInside (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/Entity;)V a
	getDirectSignal (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;)I b
	getPistonPushReaction (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/material/PushReaction; f
	getPressedTime ()I c
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; b
	getSignal (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;)I a
	getSignalForState (Lnet/minecraft/world/level/block/state/BlockState;)I g
	getSignalStrength (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)I b
	isPossibleToRespawnInThis ()Z ai_
	isSignalSource (Lnet/minecraft/world/level/block/state/BlockState;)Z b_
	onRemove (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)V a
	playOffSound (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;)V b
	playOnSound (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;)V a
	setSignalForState (Lnet/minecraft/world/level/block/state/BlockState;I)Lnet/minecraft/world/level/block/state/BlockState; a
	tick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)V a
	updateNeighbours (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)V a
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
net/minecraft/world/level/block/BaseRailBlock bud
	FLAT_AABB a
	HALF_BLOCK_AABB b
	isStraight c
	canSurvive (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;)Z a
	getPistonPushReaction (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/material/PushReaction; f
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; b
	getShapeProperty ()Lnet/minecraft/world/level/block/state/properties/Property; d
	getStateForPlacement (Lnet/minecraft/world/item/context/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	isRail (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)Z a
	isRail (Lnet/minecraft/world/level/block/state/BlockState;)Z g
	isStraight ()Z c
	neighborChanged (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Block;Lnet/minecraft/core/BlockPos;Z)V a
	onPlace (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)V b
	onRemove (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)V a
	shouldBeRemoved (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/Level;Lnet/minecraft/world/level/block/state/properties/RailShape;)Z a
	updateDir (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)Lnet/minecraft/world/level/block/state/BlockState; a
	updateState (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Block;)V a
	updateState (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Z)Lnet/minecraft/world/level/block/state/BlockState; a
net/minecraft/world/level/block/BeaconBeamBlock bue
	getColor ()Lnet/minecraft/world/item/DyeColor; a
net/minecraft/world/level/block/BeaconBlock buf
	getColor ()Lnet/minecraft/world/item/DyeColor; a
	getRenderShape (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/RenderShape; b
	newBlockEntity (Lnet/minecraft/world/level/BlockGetter;)Lnet/minecraft/world/level/block/entity/BlockEntity; a
	setPlacedBy (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/item/ItemStack;)V a
	use (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;Lnet/minecraft/world/phys/BlockHitResult;)Lnet/minecraft/world/InteractionResult; a
net/minecraft/world/level/block/BedBlock bug
	BASE c
	EAST_SHAPE k
	LEG_NORTH_EAST f
	LEG_NORTH_WEST d
	LEG_SOUTH_EAST g
	LEG_SOUTH_WEST e
	NORTH_SHAPE h
	OCCUPIED b
	PART a
	SOUTH_SHAPE i
	WEST_SHAPE j
	color o
	bedAboveStandUpOffsets (Lnet/minecraft/core/Direction;)[[I a
	bedStandUpOffsets (Lnet/minecraft/core/Direction;Lnet/minecraft/core/Direction;)[[I a
	bedSurroundStandUpOffsets (Lnet/minecraft/core/Direction;Lnet/minecraft/core/Direction;)[[I b
	bounceUp (Lnet/minecraft/world/entity/Entity;)V a
	canSetSpawn (Lnet/minecraft/world/level/Level;)Z a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	fallOn (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/Entity;F)V a
	findBunkBedStandUpPosition (Lnet/minecraft/world/entity/EntityType;Lnet/minecraft/world/level/CollisionGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;Lnet/minecraft/core/Direction;)Ljava/util/Optional; a
	findStandUpPosition (Lnet/minecraft/world/entity/EntityType;Lnet/minecraft/world/level/CollisionGetter;Lnet/minecraft/core/BlockPos;F)Ljava/util/Optional; a
	findStandUpPositionAtOffset (Lnet/minecraft/world/entity/EntityType;Lnet/minecraft/world/level/CollisionGetter;Lnet/minecraft/core/BlockPos;[[IZ)Ljava/util/Optional; a
	getBedOrientation (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/core/Direction; a
	getBlockType (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/DoubleBlockCombiner$BlockType; h
	getColor ()Lnet/minecraft/world/item/DyeColor; c
	getConnectedDirection (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/core/Direction; g
	getNeighbourDirection (Lnet/minecraft/world/level/block/state/properties/BedPart;Lnet/minecraft/core/Direction;)Lnet/minecraft/core/Direction; a
	getPistonPushReaction (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/material/PushReaction; f
	getRenderShape (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/RenderShape; b
	getSeed (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/BlockPos;)J a
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; b
	getStateForPlacement (Lnet/minecraft/world/item/context/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	isBunkBed (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Z b
	isPathfindable (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/pathfinder/PathComputationType;)Z a
	kickVillagerOutOfBed (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)Z a
	newBlockEntity (Lnet/minecraft/world/level/BlockGetter;)Lnet/minecraft/world/level/block/entity/BlockEntity; a
	playerWillDestroy (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/entity/player/Player;)V a
	setPlacedBy (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/item/ItemStack;)V a
	updateEntityAfterFallOn (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/world/entity/Entity;)V a
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
	use (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;Lnet/minecraft/world/phys/BlockHitResult;)Lnet/minecraft/world/InteractionResult; a
net/minecraft/world/level/block/BeehiveBlock buh
	FACING a
	HONEY_LEVEL b
	SPAWN_DIRECTIONS c
	angerNearbyBees (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)V b
	animateTick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)V a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	dropHoneycomb (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)V a
	getAnalogOutputSignal (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)I a
	getDrops (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/storage/loot/LootContext$Builder;)Ljava/util/List; a
	getRandomOffset (Ljava/util/Random;)Lnet/minecraft/core/Direction; a
	getRenderShape (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/RenderShape; b
	getStateForPlacement (Lnet/minecraft/world/item/context/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	hasAnalogOutputSignal (Lnet/minecraft/world/level/block/state/BlockState;)Z a
	hiveContainsBees (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)Z d
	newBlockEntity (Lnet/minecraft/world/level/BlockGetter;)Lnet/minecraft/world/level/block/entity/BlockEntity; a
	playerDestroy (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/entity/BlockEntity;Lnet/minecraft/world/item/ItemStack;)V a
	playerWillDestroy (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/entity/player/Player;)V a
	releaseBeesAndResetHoneyLevel (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/level/block/entity/BeehiveBlockEntity$BeeReleaseStatus;)V a
	resetHoneyLevel (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/BlockPos;)V a
	spawnFluidParticle (Lnet/minecraft/world/level/Level;DDDDD)V a
	spawnParticle (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/VoxelShape;D)V a
	trySpawnDripParticles (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V a
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
	use (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;Lnet/minecraft/world/phys/BlockHitResult;)Lnet/minecraft/world/InteractionResult; a
net/minecraft/world/level/block/BeetrootBlock bui
	AGE a
	SHAPE_BY_AGE c
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getAgeProperty ()Lnet/minecraft/world/level/block/state/properties/IntegerProperty; c
	getBaseSeedId ()Lnet/minecraft/world/level/ItemLike; e
	getBonemealAgeIncrease (Lnet/minecraft/world/level/Level;)I a
	getMaxAge ()I d
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; b
	randomTick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)V b
net/minecraft/world/level/block/BellBlock buj
	ATTACHMENT b
	BELL_BOTTOM_SHAPE g
	BELL_SHAPE h
	BELL_TOP_SHAPE f
	CEILING_SHAPE r
	EAST_WEST_BETWEEN j
	EAST_WEST_FLOOR_SHAPE e
	FACING a
	NORTH_SOUTH_BETWEEN i
	NORTH_SOUTH_FLOOR_SHAPE d
	POWERED c
	TO_EAST o
	TO_NORTH p
	TO_SOUTH q
	TO_WEST k
	attemptToRing (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;)Z a
	canSurvive (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;)Z a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getCollisionShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; c
	getConnectedDirection (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/core/Direction; l
	getPistonPushReaction (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/material/PushReaction; f
	getRenderShape (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/RenderShape; b
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; b
	getStateForPlacement (Lnet/minecraft/world/item/context/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	getVoxelShape (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/phys/shapes/VoxelShape; h
	isPathfindable (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/pathfinder/PathComputationType;)Z a
	isProperHit (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;D)Z a
	neighborChanged (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Block;Lnet/minecraft/core/BlockPos;Z)V a
	newBlockEntity (Lnet/minecraft/world/level/BlockGetter;)Lnet/minecraft/world/level/block/entity/BlockEntity; a
	onHit (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/phys/BlockHitResult;Lnet/minecraft/world/entity/player/Player;Z)Z a
	onProjectileHit (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/phys/BlockHitResult;Lnet/minecraft/world/entity/projectile/Projectile;)V a
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
	use (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;Lnet/minecraft/world/phys/BlockHitResult;)Lnet/minecraft/world/InteractionResult; a
net/minecraft/world/level/block/BlastFurnaceBlock buk
	animateTick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)V a
	newBlockEntity (Lnet/minecraft/world/level/BlockGetter;)Lnet/minecraft/world/level/block/entity/BlockEntity; a
	openContainer (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/player/Player;)V a
net/minecraft/world/level/block/Block bul
	BLOCK_STATE_REGISTRY m
	LOGGER l
	OCCLUSION_CACHE e
	SHAPE_FULL_BLOCK_CACHE a
	defaultBlockState b
	descriptionId c
	item d
	stateDefinition n
	animateTick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)V a
	appendHoverText (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/BlockGetter;Ljava/util/List;Lnet/minecraft/world/item/TooltipFlag;)V a
	asBlock ()Lnet/minecraft/world/level/block/Block; p
	asItem ()Lnet/minecraft/world/item/Item; h
	box (DDDDDD)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	byItem (Lnet/minecraft/world/item/Item;)Lnet/minecraft/world/level/block/Block; a
	canSupportCenter (Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;)Z a
	canSupportRigidBlock (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Z c
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	defaultBlockState ()Lnet/minecraft/world/level/block/state/BlockState; n
	destroy (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V a
	dropFromExplosion (Lnet/minecraft/world/level/Explosion;)Z a
	dropResources (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)V c
	dropResources (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/entity/BlockEntity;Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/item/ItemStack;)V a
	dropResources (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/entity/BlockEntity;)V a
	dropResources (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/storage/loot/LootContext$Builder;)V b
	fallOn (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/Entity;F)V a
	fillItemCategory (Lnet/minecraft/world/item/CreativeModeTab;Lnet/minecraft/core/NonNullList;)V a
	getCloneItemStack (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/item/ItemStack; a
	getDescriptionId ()Ljava/lang/String; i
	getDrops (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/entity/BlockEntity;)Ljava/util/List; a
	getDrops (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/entity/BlockEntity;Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/item/ItemStack;)Ljava/util/List; a
	getExplosionResistance ()F f
	getFriction ()F j
	getId (Lnet/minecraft/world/level/block/state/BlockState;)I i
	getJumpFactor ()F l
	getName ()Lnet/minecraft/network/chat/MutableComponent; g
	getSoundType (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/SoundType; k
	getSpeedFactor ()F k
	getStateDefinition ()Lnet/minecraft/world/level/block/state/StateDefinition; m
	getStateForPlacement (Lnet/minecraft/world/item/context/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	getTickDelay (Lnet/minecraft/world/level/LevelReader;)I a
	handleRain (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)V c
	hasDynamicShape ()Z o
	is (Lnet/minecraft/tags/Tag;)Z a
	is (Lnet/minecraft/world/level/block/Block;)Z a
	isExceptionForConnection (Lnet/minecraft/world/level/block/Block;)Z b
	isFaceFull (Lnet/minecraft/world/phys/shapes/VoxelShape;Lnet/minecraft/core/Direction;)Z a
	isPossibleToRespawnInThis ()Z ai_
	isRandomlyTicking (Lnet/minecraft/world/level/block/state/BlockState;)Z a_
	isShapeFullBlock (Lnet/minecraft/world/phys/shapes/VoxelShape;)Z a
	playerDestroy (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/entity/BlockEntity;Lnet/minecraft/world/item/ItemStack;)V a
	playerWillDestroy (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/entity/player/Player;)V a
	popExperience (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;I)V a
	popResource (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/item/ItemStack;)V a
	prepareRender (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)V d
	propagatesSkylightDown (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Z b
	pushEntitiesUp (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
	registerDefaultState (Lnet/minecraft/world/level/block/state/BlockState;)V j
	setPlacedBy (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/item/ItemStack;)V a
	shouldRenderFace (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;)Z c
	stateById (I)Lnet/minecraft/world/level/block/state/BlockState; a
	stepOn (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/Entity;)V a
	updateEntityAfterFallOn (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/world/entity/Entity;)V a
	updateFromNeighbourShapes (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; b
	updateOrDestroy (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;I)V a
	updateOrDestroy (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;II)V a
	wasExploded (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/Explosion;)V a
net/minecraft/world/level/block/Block$BlockStatePairKey bul$a
	direction c
	first a
	second b
net/minecraft/world/level/block/Blocks bum
	ACACIA_BUTTON fa
	ACACIA_DOOR iu
	ACACIA_FENCE ip
	ACACIA_FENCE_GATE ik
	ACACIA_LEAVES al
	ACACIA_LOG N
	ACACIA_PLANKS r
	ACACIA_PRESSURE_PLATE cw
	ACACIA_SAPLING x
	ACACIA_SIGN cc
	ACACIA_SLAB hO
	ACACIA_STAIRS gl
	ACACIA_TRAPDOOR ds
	ACACIA_WALL_SIGN cm
	ACACIA_WOOD Z
	ACTIVATOR_RAIL fD
	AIR a
	ALLIUM bs
	ANCIENT_DEBRIS nh
	ANDESITE g
	ANDESITE_SLAB lA
	ANDESITE_STAIRS ln
	ANDESITE_WALL lL
	ANVIL fo
	ATTACHED_MELON_STEM dM
	ATTACHED_PUMPKIN_STEM dL
	AZURE_BLUET bt
	BAMBOO kY
	BAMBOO_SAPLING kX
	BARREL lS
	BARRIER go
	BASALT cO
	BEACON es
	BEDROCK z
	BEEHIVE nd
	BEETROOTS iD
	BEE_NEST nc
	BELL mb
	BIRCH_BUTTON eY
	BIRCH_DOOR is
	BIRCH_FENCE in
	BIRCH_FENCE_GATE ii
	BIRCH_LEAVES aj
	BIRCH_LOG L
	BIRCH_PLANKS p
	BIRCH_PRESSURE_PLATE cu
	BIRCH_SAPLING v
	BIRCH_SIGN cb
	BIRCH_SLAB hM
	BIRCH_STAIRS ep
	BIRCH_TRAPDOOR dq
	BIRCH_WALL_SIGN cl
	BIRCH_WOOD X
	BLACKSTONE np
	BLACKSTONE_SLAB ns
	BLACKSTONE_STAIRS nq
	BLACKSTONE_WALL nr
	BLACK_BANNER hp
	BLACK_BED aM
	BLACK_CARPET gQ
	BLACK_CONCRETE jL
	BLACK_CONCRETE_POWDER kb
	BLACK_GLAZED_TERRACOTTA jv
	BLACK_SHULKER_BOX jf
	BLACK_STAINED_GLASS dn
	BLACK_STAINED_GLASS_PANE gk
	BLACK_TERRACOTTA fU
	BLACK_WALL_BANNER hF
	BLACK_WOOL bn
	BLAST_FURNACE lU
	BLUE_BANNER hl
	BLUE_BED aI
	BLUE_CARPET gM
	BLUE_CONCRETE jH
	BLUE_CONCRETE_POWDER jX
	BLUE_GLAZED_TERRACOTTA jr
	BLUE_ICE kV
	BLUE_ORCHID br
	BLUE_SHULKER_BOX jb
	BLUE_STAINED_GLASS dj
	BLUE_STAINED_GLASS_PANE gg
	BLUE_TERRACOTTA fQ
	BLUE_WALL_BANNER hB
	BLUE_WOOL bj
	BONE_BLOCK iM
	BOOKSHELF bI
	BRAIN_CORAL kw
	BRAIN_CORAL_BLOCK km
	BRAIN_CORAL_FAN kG
	BRAIN_CORAL_WALL_FAN kQ
	BREWING_STAND ea
	BRICKS bG
	BRICK_SLAB hW
	BRICK_STAIRS dR
	BRICK_WALL lE
	BROWN_BANNER hm
	BROWN_BED aJ
	BROWN_CARPET gN
	BROWN_CONCRETE jI
	BROWN_CONCRETE_POWDER jY
	BROWN_GLAZED_TERRACOTTA js
	BROWN_MUSHROOM bC
	BROWN_MUSHROOM_BLOCK dE
	BROWN_SHULKER_BOX jc
	BROWN_STAINED_GLASS dk
	BROWN_STAINED_GLASS_PANE gh
	BROWN_TERRACOTTA fR
	BROWN_WALL_BANNER hC
	BROWN_WOOL bk
	BUBBLE_COLUMN lc
	BUBBLE_CORAL kx
	BUBBLE_CORAL_BLOCK kn
	BUBBLE_CORAL_FAN kH
	BUBBLE_CORAL_WALL_FAN kR
	CACTUS cF
	CAKE cW
	CAMPFIRE me
	CARROTS eU
	CARTOGRAPHY_TABLE lV
	CARVED_PUMPKIN cU
	CAULDRON eb
	CAVE_AIR lb
	CHAIN dI
	CHAIN_COMMAND_BLOCK iH
	CHEST bR
	CHIPPED_ANVIL fp
	CHISELED_NETHER_BRICKS nG
	CHISELED_POLISHED_BLACKSTONE nw
	CHISELED_QUARTZ_BLOCK fA
	CHISELED_RED_SANDSTONE hH
	CHISELED_SANDSTONE au
	CHISELED_STONE_BRICKS dx
	CHORUS_FLOWER iy
	CHORUS_PLANT ix
	CLAY cG
	COAL_BLOCK gS
	COAL_ORE H
	COARSE_DIRT k
	COBBLESTONE m
	COBBLESTONE_SLAB hV
	COBBLESTONE_STAIRS ci
	COBBLESTONE_WALL et
	COBWEB aQ
	COCOA eh
	COMMAND_BLOCK er
	COMPARATOR fu
	COMPOSTER na
	CONDUIT kW
	CORNFLOWER bz
	CRACKED_NETHER_BRICKS nH
	CRACKED_POLISHED_BLACKSTONE_BRICKS nv
	CRACKED_STONE_BRICKS dw
	CRAFTING_TABLE bV
	CREEPER_HEAD fk
	CREEPER_WALL_HEAD fl
	CRIMSON_BUTTON mQ
	CRIMSON_DOOR mS
	CRIMSON_FENCE mI
	CRIMSON_FENCE_GATE mM
	CRIMSON_FUNGUS mv
	CRIMSON_HYPHAE ms
	CRIMSON_NYLIUM mu
	CRIMSON_PLANKS mC
	CRIMSON_PRESSURE_PLATE mG
	CRIMSON_ROOTS mB
	CRIMSON_SIGN mU
	CRIMSON_SLAB mE
	CRIMSON_STAIRS mO
	CRIMSON_STEM mq
	CRIMSON_TRAPDOOR mK
	CRIMSON_WALL_SIGN mW
	CRYING_OBSIDIAN ni
	CUT_RED_SANDSTONE hI
	CUT_RED_SANDSTONE_SLAB ib
	CUT_SANDSTONE av
	CUT_SANDSTONE_SLAB hT
	CYAN_BANNER hj
	CYAN_BED aG
	CYAN_CARPET gK
	CYAN_CONCRETE jF
	CYAN_CONCRETE_POWDER jV
	CYAN_GLAZED_TERRACOTTA jp
	CYAN_SHULKER_BOX iZ
	CYAN_STAINED_GLASS dh
	CYAN_STAINED_GLASS_PANE ge
	CYAN_TERRACOTTA fO
	CYAN_WALL_BANNER hz
	CYAN_WOOL bh
	DAMAGED_ANVIL fq
	DANDELION bp
	DARK_OAK_BUTTON fb
	DARK_OAK_DOOR iv
	DARK_OAK_FENCE iq
	DARK_OAK_FENCE_GATE il
	DARK_OAK_LEAVES am
	DARK_OAK_LOG O
	DARK_OAK_PLANKS s
	DARK_OAK_PRESSURE_PLATE cx
	DARK_OAK_SAPLING y
	DARK_OAK_SIGN ce
	DARK_OAK_SLAB hP
	DARK_OAK_STAIRS gm
	DARK_OAK_TRAPDOOR dt
	DARK_OAK_WALL_SIGN co
	DARK_OAK_WOOD aa
	DARK_PRISMARINE gs
	DARK_PRISMARINE_SLAB gy
	DARK_PRISMARINE_STAIRS gv
	DAYLIGHT_DETECTOR fv
	DEAD_BRAIN_CORAL kr
	DEAD_BRAIN_CORAL_BLOCK kh
	DEAD_BRAIN_CORAL_FAN kB
	DEAD_BRAIN_CORAL_WALL_FAN kL
	DEAD_BUBBLE_CORAL ks
	DEAD_BUBBLE_CORAL_BLOCK ki
	DEAD_BUBBLE_CORAL_FAN kC
	DEAD_BUBBLE_CORAL_WALL_FAN kM
	DEAD_BUSH aT
	DEAD_FIRE_CORAL kt
	DEAD_FIRE_CORAL_BLOCK kj
	DEAD_FIRE_CORAL_FAN kD
	DEAD_FIRE_CORAL_WALL_FAN kN
	DEAD_HORN_CORAL ku
	DEAD_HORN_CORAL_BLOCK kk
	DEAD_HORN_CORAL_FAN kE
	DEAD_HORN_CORAL_WALL_FAN kO
	DEAD_TUBE_CORAL kq
	DEAD_TUBE_CORAL_BLOCK kg
	DEAD_TUBE_CORAL_FAN kA
	DEAD_TUBE_CORAL_WALL_FAN kK
	DETECTOR_RAIL aO
	DIAMOND_BLOCK bU
	DIAMOND_ORE bT
	DIORITE e
	DIORITE_SLAB lD
	DIORITE_STAIRS lq
	DIORITE_WALL lP
	DIRT j
	DISPENSER as
	DRAGON_EGG ef
	DRAGON_HEAD fm
	DRAGON_WALL_HEAD fn
	DRIED_KELP_BLOCK ke
	DROPPER fE
	EMERALD_BLOCK en
	EMERALD_ORE ej
	ENCHANTING_TABLE dZ
	ENDER_CHEST ek
	END_GATEWAY iF
	END_PORTAL ec
	END_PORTAL_FRAME ed
	END_ROD iw
	END_STONE ee
	END_STONE_BRICKS iC
	END_STONE_BRICK_SLAB lw
	END_STONE_BRICK_STAIRS li
	END_STONE_BRICK_WALL lO
	FARMLAND bX
	FERN aS
	FIRE bN
	FIRE_CORAL ky
	FIRE_CORAL_BLOCK ko
	FIRE_CORAL_FAN kI
	FIRE_CORAL_WALL_FAN kS
	FLETCHING_TABLE lW
	FLOWER_POT ev
	FROSTED_ICE iI
	FURNACE bY
	GILDED_BLACKSTONE nA
	GLASS ap
	GLASS_PANE dJ
	GLOWSTONE cS
	GOLD_BLOCK bE
	GOLD_ORE F
	GRANITE c
	GRANITE_SLAB lz
	GRANITE_STAIRS lm
	GRANITE_WALL lI
	GRASS aR
	GRASS_BLOCK i
	GRASS_PATH iE
	GRAVEL E
	GRAY_BANNER hh
	GRAY_BED aE
	GRAY_CARPET gI
	GRAY_CONCRETE jD
	GRAY_CONCRETE_POWDER jT
	GRAY_GLAZED_TERRACOTTA jn
	GRAY_SHULKER_BOX iX
	GRAY_STAINED_GLASS df
	GRAY_STAINED_GLASS_PANE gc
	GRAY_TERRACOTTA fM
	GRAY_WALL_BANNER hx
	GRAY_WOOL bf
	GREEN_BANNER hn
	GREEN_BED aK
	GREEN_CARPET gO
	GREEN_CONCRETE jJ
	GREEN_CONCRETE_POWDER jZ
	GREEN_GLAZED_TERRACOTTA jt
	GREEN_SHULKER_BOX jd
	GREEN_STAINED_GLASS dl
	GREEN_STAINED_GLASS_PANE gi
	GREEN_TERRACOTTA fS
	GREEN_WALL_BANNER hD
	GREEN_WOOL bl
	GRINDSTONE lX
	HAY_BLOCK gA
	HEAVY_WEIGHTED_PRESSURE_PLATE ft
	HONEYCOMB_BLOCK nf
	HONEY_BLOCK ne
	HOPPER fy
	HORN_CORAL kz
	HORN_CORAL_BLOCK kp
	HORN_CORAL_FAN kJ
	HORN_CORAL_WALL_FAN kT
	ICE cD
	INFESTED_CHISELED_STONE_BRICKS dD
	INFESTED_COBBLESTONE dz
	INFESTED_CRACKED_STONE_BRICKS dC
	INFESTED_MOSSY_STONE_BRICKS dB
	INFESTED_STONE dy
	INFESTED_STONE_BRICKS dA
	IRON_BARS dH
	IRON_BLOCK bF
	IRON_DOOR cr
	IRON_ORE G
	IRON_TRAPDOOR gp
	JACK_O_LANTERN cV
	JIGSAW mZ
	JUKEBOX cI
	JUNGLE_BUTTON eZ
	JUNGLE_DOOR it
	JUNGLE_FENCE io
	JUNGLE_FENCE_GATE ij
	JUNGLE_LEAVES ak
	JUNGLE_LOG M
	JUNGLE_PLANKS q
	JUNGLE_PRESSURE_PLATE cv
	JUNGLE_SAPLING w
	JUNGLE_SIGN cd
	JUNGLE_SLAB hN
	JUNGLE_STAIRS eq
	JUNGLE_TRAPDOOR dr
	JUNGLE_WALL_SIGN cn
	JUNGLE_WOOD Y
	KELP kc
	KELP_PLANT kd
	LADDER cg
	LANTERN mc
	LAPIS_BLOCK ar
	LAPIS_ORE aq
	LARGE_FERN gZ
	LAVA B
	LECTERN lY
	LEVER cp
	LIGHT_BLUE_BANNER hd
	LIGHT_BLUE_BED aA
	LIGHT_BLUE_CARPET gE
	LIGHT_BLUE_CONCRETE jz
	LIGHT_BLUE_CONCRETE_POWDER jP
	LIGHT_BLUE_GLAZED_TERRACOTTA jj
	LIGHT_BLUE_SHULKER_BOX iT
	LIGHT_BLUE_STAINED_GLASS db
	LIGHT_BLUE_STAINED_GLASS_PANE fY
	LIGHT_BLUE_TERRACOTTA fI
	LIGHT_BLUE_WALL_BANNER ht
	LIGHT_BLUE_WOOL bb
	LIGHT_GRAY_BANNER hi
	LIGHT_GRAY_BED aF
	LIGHT_GRAY_CARPET gJ
	LIGHT_GRAY_CONCRETE jE
	LIGHT_GRAY_CONCRETE_POWDER jU
	LIGHT_GRAY_GLAZED_TERRACOTTA jo
	LIGHT_GRAY_SHULKER_BOX iY
	LIGHT_GRAY_STAINED_GLASS dg
	LIGHT_GRAY_STAINED_GLASS_PANE gd
	LIGHT_GRAY_TERRACOTTA fN
	LIGHT_GRAY_WALL_BANNER hy
	LIGHT_GRAY_WOOL bg
	LIGHT_WEIGHTED_PRESSURE_PLATE fs
	LILAC gV
	LILY_OF_THE_VALLEY bB
	LILY_PAD dU
	LIME_BANNER hf
	LIME_BED aC
	LIME_CARPET gG
	LIME_CONCRETE jB
	LIME_CONCRETE_POWDER jR
	LIME_GLAZED_TERRACOTTA jl
	LIME_SHULKER_BOX iV
	LIME_STAINED_GLASS dd
	LIME_STAINED_GLASS_PANE ga
	LIME_TERRACOTTA fK
	LIME_WALL_BANNER hv
	LIME_WOOL bd
	LODESTONE no
	LOOM lR
	MAGENTA_BANNER hc
	MAGENTA_BED az
	MAGENTA_CARPET gD
	MAGENTA_CONCRETE jy
	MAGENTA_CONCRETE_POWDER jO
	MAGENTA_GLAZED_TERRACOTTA ji
	MAGENTA_SHULKER_BOX iS
	MAGENTA_STAINED_GLASS da
	MAGENTA_STAINED_GLASS_PANE fX
	MAGENTA_TERRACOTTA fH
	MAGENTA_WALL_BANNER hs
	MAGENTA_WOOL ba
	MAGMA_BLOCK iJ
	MELON dK
	MELON_STEM dO
	MOSSY_COBBLESTONE bJ
	MOSSY_COBBLESTONE_SLAB lv
	MOSSY_COBBLESTONE_STAIRS lh
	MOSSY_COBBLESTONE_WALL eu
	MOSSY_STONE_BRICKS dv
	MOSSY_STONE_BRICK_SLAB lt
	MOSSY_STONE_BRICK_STAIRS lf
	MOSSY_STONE_BRICK_WALL lH
	MOVING_PISTON bo
	MUSHROOM_STEM dG
	MYCELIUM dT
	NETHERITE_BLOCK ng
	NETHERRACK cL
	NETHER_BRICKS dV
	NETHER_BRICK_FENCE dW
	NETHER_BRICK_SLAB hY
	NETHER_BRICK_STAIRS dX
	NETHER_BRICK_WALL lK
	NETHER_GOLD_ORE I
	NETHER_PORTAL cT
	NETHER_QUARTZ_ORE fx
	NETHER_SPROUTS mp
	NETHER_WART dY
	NETHER_WART_BLOCK iK
	NOTE_BLOCK aw
	OAK_BUTTON eW
	OAK_DOOR cf
	OAK_FENCE cJ
	OAK_FENCE_GATE dQ
	OAK_LEAVES ah
	OAK_LOG J
	OAK_PLANKS n
	OAK_PRESSURE_PLATE cs
	OAK_SAPLING t
	OAK_SIGN bZ
	OAK_SLAB hK
	OAK_STAIRS bQ
	OAK_TRAPDOOR do
	OAK_WALL_SIGN cj
	OAK_WOOD V
	OBSERVER iO
	OBSIDIAN bK
	ORANGE_BANNER hb
	ORANGE_BED ay
	ORANGE_CARPET gC
	ORANGE_CONCRETE jx
	ORANGE_CONCRETE_POWDER jN
	ORANGE_GLAZED_TERRACOTTA jh
	ORANGE_SHULKER_BOX iR
	ORANGE_STAINED_GLASS cZ
	ORANGE_STAINED_GLASS_PANE fW
	ORANGE_TERRACOTTA fG
	ORANGE_TULIP bv
	ORANGE_WALL_BANNER hr
	ORANGE_WOOL aZ
	OXEYE_DAISY by
	PACKED_ICE gT
	PEONY gX
	PETRIFIED_OAK_SLAB hU
	PINK_BANNER hg
	PINK_BED aD
	PINK_CARPET gH
	PINK_CONCRETE jC
	PINK_CONCRETE_POWDER jS
	PINK_GLAZED_TERRACOTTA jm
	PINK_SHULKER_BOX iW
	PINK_STAINED_GLASS de
	PINK_STAINED_GLASS_PANE gb
	PINK_TERRACOTTA fL
	PINK_TULIP bx
	PINK_WALL_BANNER hw
	PINK_WOOL be
	PISTON aW
	PISTON_HEAD aX
	PLAYER_HEAD fi
	PLAYER_WALL_HEAD fj
	PODZOL l
	POLISHED_ANDESITE h
	POLISHED_ANDESITE_SLAB lC
	POLISHED_ANDESITE_STAIRS lp
	POLISHED_BASALT cP
	POLISHED_BLACKSTONE nt
	POLISHED_BLACKSTONE_BRICKS nu
	POLISHED_BLACKSTONE_BRICK_SLAB nx
	POLISHED_BLACKSTONE_BRICK_STAIRS ny
	POLISHED_BLACKSTONE_BRICK_WALL nz
	POLISHED_BLACKSTONE_BUTTON nE
	POLISHED_BLACKSTONE_PRESSURE_PLATE nD
	POLISHED_BLACKSTONE_SLAB nC
	POLISHED_BLACKSTONE_STAIRS nB
	POLISHED_BLACKSTONE_WALL nF
	POLISHED_DIORITE f
	POLISHED_DIORITE_SLAB lu
	POLISHED_DIORITE_STAIRS lg
	POLISHED_GRANITE d
	POLISHED_GRANITE_SLAB lr
	POLISHED_GRANITE_STAIRS ld
	POPPY bq
	POTATOES eV
	POTTED_ACACIA_SAPLING eA
	POTTED_ALLIUM eG
	POTTED_AZURE_BLUET eH
	POTTED_BAMBOO kZ
	POTTED_BIRCH_SAPLING ey
	POTTED_BLUE_ORCHID eF
	POTTED_BROWN_MUSHROOM eR
	POTTED_CACTUS eT
	POTTED_CORNFLOWER eN
	POTTED_CRIMSON_FUNGUS nk
	POTTED_CRIMSON_ROOTS nm
	POTTED_DANDELION eD
	POTTED_DARK_OAK_SAPLING eB
	POTTED_DEAD_BUSH eS
	POTTED_FERN eC
	POTTED_JUNGLE_SAPLING ez
	POTTED_LILY_OF_THE_VALLEY eO
	POTTED_OAK_SAPLING ew
	POTTED_ORANGE_TULIP eJ
	POTTED_OXEYE_DAISY eM
	POTTED_PINK_TULIP eL
	POTTED_POPPY eE
	POTTED_RED_MUSHROOM eQ
	POTTED_RED_TULIP eI
	POTTED_SPRUCE_SAPLING ex
	POTTED_WARPED_FUNGUS nl
	POTTED_WARPED_ROOTS nn
	POTTED_WHITE_TULIP eK
	POTTED_WITHER_ROSE eP
	POWERED_RAIL aN
	PRISMARINE gq
	PRISMARINE_BRICKS gr
	PRISMARINE_BRICK_SLAB gx
	PRISMARINE_BRICK_STAIRS gu
	PRISMARINE_SLAB gw
	PRISMARINE_STAIRS gt
	PRISMARINE_WALL lF
	PUMPKIN cK
	PUMPKIN_STEM dN
	PURPLE_BANNER hk
	PURPLE_BED aH
	PURPLE_CARPET gL
	PURPLE_CONCRETE jG
	PURPLE_CONCRETE_POWDER jW
	PURPLE_GLAZED_TERRACOTTA jq
	PURPLE_SHULKER_BOX ja
	PURPLE_STAINED_GLASS di
	PURPLE_STAINED_GLASS_PANE gf
	PURPLE_TERRACOTTA fP
	PURPLE_WALL_BANNER hA
	PURPLE_WOOL bi
	PURPUR_BLOCK iz
	PURPUR_PILLAR iA
	PURPUR_SLAB ic
	PURPUR_STAIRS iB
	QUARTZ_BLOCK fz
	QUARTZ_BRICKS nI
	QUARTZ_PILLAR fB
	QUARTZ_SLAB hZ
	QUARTZ_STAIRS fC
	RAIL ch
	REDSTONE_BLOCK fw
	REDSTONE_LAMP eg
	REDSTONE_ORE cy
	REDSTONE_TORCH cz
	REDSTONE_WALL_TORCH cA
	REDSTONE_WIRE bS
	RED_BANNER ho
	RED_BED aL
	RED_CARPET gP
	RED_CONCRETE jK
	RED_CONCRETE_POWDER ka
	RED_GLAZED_TERRACOTTA ju
	RED_MUSHROOM bD
	RED_MUSHROOM_BLOCK dF
	RED_NETHER_BRICKS iL
	RED_NETHER_BRICK_SLAB lB
	RED_NETHER_BRICK_STAIRS lo
	RED_NETHER_BRICK_WALL lM
	RED_SAND D
	RED_SANDSTONE hG
	RED_SANDSTONE_SLAB ia
	RED_SANDSTONE_STAIRS hJ
	RED_SANDSTONE_WALL lG
	RED_SHULKER_BOX je
	RED_STAINED_GLASS dm
	RED_STAINED_GLASS_PANE gj
	RED_TERRACOTTA fT
	RED_TULIP bu
	RED_WALL_BANNER hE
	RED_WOOL bm
	REPEATER cX
	REPEATING_COMMAND_BLOCK iG
	RESPAWN_ANCHOR nj
	ROSE_BUSH gW
	SAND C
	SANDSTONE at
	SANDSTONE_SLAB hS
	SANDSTONE_STAIRS ei
	SANDSTONE_WALL lN
	SCAFFOLDING lQ
	SEAGRASS aU
	SEA_LANTERN gz
	SEA_PICKLE kU
	SHROOMLIGHT mw
	SHULKER_BOX iP
	SKELETON_SKULL fc
	SKELETON_WALL_SKULL fd
	SLIME_BLOCK gn
	SMITHING_TABLE lZ
	SMOKER lT
	SMOOTH_QUARTZ if
	SMOOTH_QUARTZ_SLAB ly
	SMOOTH_QUARTZ_STAIRS ll
	SMOOTH_RED_SANDSTONE ig
	SMOOTH_RED_SANDSTONE_SLAB ls
	SMOOTH_RED_SANDSTONE_STAIRS le
	SMOOTH_SANDSTONE ie
	SMOOTH_SANDSTONE_SLAB lx
	SMOOTH_SANDSTONE_STAIRS lk
	SMOOTH_STONE id
	SMOOTH_STONE_SLAB hR
	SNOW cC
	SNOW_BLOCK cE
	SOUL_CAMPFIRE mf
	SOUL_FIRE bO
	SOUL_LANTERN md
	SOUL_SAND cM
	SOUL_SOIL cN
	SOUL_TORCH cQ
	SOUL_WALL_TORCH cR
	SPAWNER bP
	SPONGE an
	SPRUCE_BUTTON eX
	SPRUCE_DOOR ir
	SPRUCE_FENCE im
	SPRUCE_FENCE_GATE ih
	SPRUCE_LEAVES ai
	SPRUCE_LOG K
	SPRUCE_PLANKS o
	SPRUCE_PRESSURE_PLATE ct
	SPRUCE_SAPLING u
	SPRUCE_SIGN ca
	SPRUCE_SLAB hL
	SPRUCE_STAIRS eo
	SPRUCE_TRAPDOOR dp
	SPRUCE_WALL_SIGN ck
	SPRUCE_WOOD W
	STICKY_PISTON aP
	STONE b
	STONECUTTER ma
	STONE_BRICKS du
	STONE_BRICK_SLAB hX
	STONE_BRICK_STAIRS dS
	STONE_BRICK_WALL lJ
	STONE_BUTTON cB
	STONE_PRESSURE_PLATE cq
	STONE_SLAB hQ
	STONE_STAIRS lj
	STRIPPED_ACACIA_LOG S
	STRIPPED_ACACIA_WOOD af
	STRIPPED_BIRCH_LOG Q
	STRIPPED_BIRCH_WOOD ad
	STRIPPED_CRIMSON_HYPHAE mt
	STRIPPED_CRIMSON_STEM mr
	STRIPPED_DARK_OAK_LOG T
	STRIPPED_DARK_OAK_WOOD ag
	STRIPPED_JUNGLE_LOG R
	STRIPPED_JUNGLE_WOOD ae
	STRIPPED_OAK_LOG U
	STRIPPED_OAK_WOOD ab
	STRIPPED_SPRUCE_LOG P
	STRIPPED_SPRUCE_WOOD ac
	STRIPPED_WARPED_HYPHAE mk
	STRIPPED_WARPED_STEM mi
	STRUCTURE_BLOCK mY
	STRUCTURE_VOID iN
	SUGAR_CANE cH
	SUNFLOWER gU
	SWEET_BERRY_BUSH mg
	TALL_GRASS gY
	TALL_SEAGRASS aV
	TARGET nb
	TERRACOTTA gR
	TNT bH
	TORCH bL
	TRAPPED_CHEST fr
	TRIPWIRE em
	TRIPWIRE_HOOK el
	TUBE_CORAL kv
	TUBE_CORAL_BLOCK kl
	TUBE_CORAL_FAN kF
	TUBE_CORAL_WALL_FAN kP
	TURTLE_EGG kf
	TWISTING_VINES mz
	TWISTING_VINES_PLANT mA
	VINE dP
	VOID_AIR la
	WALL_TORCH bM
	WARPED_BUTTON mR
	WARPED_DOOR mT
	WARPED_FENCE mJ
	WARPED_FENCE_GATE mN
	WARPED_FUNGUS mm
	WARPED_HYPHAE mj
	WARPED_NYLIUM ml
	WARPED_PLANKS mD
	WARPED_PRESSURE_PLATE mH
	WARPED_ROOTS mo
	WARPED_SIGN mV
	WARPED_SLAB mF
	WARPED_STAIRS mP
	WARPED_STEM mh
	WARPED_TRAPDOOR mL
	WARPED_WALL_SIGN mX
	WARPED_WART_BLOCK mn
	WATER A
	WEEPING_VINES mx
	WEEPING_VINES_PLANT my
	WET_SPONGE ao
	WHEAT bW
	WHITE_BANNER ha
	WHITE_BED ax
	WHITE_CARPET gB
	WHITE_CONCRETE jw
	WHITE_CONCRETE_POWDER jM
	WHITE_GLAZED_TERRACOTTA jg
	WHITE_SHULKER_BOX iQ
	WHITE_STAINED_GLASS cY
	WHITE_STAINED_GLASS_PANE fV
	WHITE_TERRACOTTA fF
	WHITE_TULIP bw
	WHITE_WALL_BANNER hq
	WHITE_WOOL aY
	WITHER_ROSE bA
	WITHER_SKELETON_SKULL fe
	WITHER_SKELETON_WALL_SKULL ff
	YELLOW_BANNER he
	YELLOW_BED aB
	YELLOW_CARPET gF
	YELLOW_CONCRETE jA
	YELLOW_CONCRETE_POWDER jQ
	YELLOW_GLAZED_TERRACOTTA jk
	YELLOW_SHULKER_BOX iU
	YELLOW_STAINED_GLASS dc
	YELLOW_STAINED_GLASS_PANE fZ
	YELLOW_TERRACOTTA fJ
	YELLOW_WALL_BANNER hu
	YELLOW_WOOL bc
	ZOMBIE_HEAD fg
	ZOMBIE_WALL_HEAD fh
	always (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Z a
	always (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/EntityType;)Ljava/lang/Boolean; b
	bed (Lnet/minecraft/world/item/DyeColor;)Lnet/minecraft/world/level/block/BedBlock; a
	leaves ()Lnet/minecraft/world/level/block/LeavesBlock; b
	litBlockEmission (I)Ljava/util/function/ToIntFunction; a
	log (Lnet/minecraft/world/level/material/MaterialColor;Lnet/minecraft/world/level/material/MaterialColor;)Lnet/minecraft/world/level/block/RotatedPillarBlock; a
	netherStem (Lnet/minecraft/world/level/material/MaterialColor;)Lnet/minecraft/world/level/block/Block; a
	never (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Z b
	never (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/EntityType;)Ljava/lang/Boolean; a
	ocelotOrParrot (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/EntityType;)Ljava/lang/Boolean; c
	pistonBase (Z)Lnet/minecraft/world/level/block/piston/PistonBaseBlock; a
	rebuildCache ()V a
	register (Ljava/lang/String;Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/world/level/block/Block; a
	shulkerBox (Lnet/minecraft/world/item/DyeColor;Lnet/minecraft/world/level/block/state/BlockBehaviour$Properties;)Lnet/minecraft/world/level/block/ShulkerBoxBlock; a
	stainedGlass (Lnet/minecraft/world/item/DyeColor;)Lnet/minecraft/world/level/block/StainedGlassBlock; b
net/minecraft/world/level/block/BonemealableBlock bun
	isBonemealSuccess (Lnet/minecraft/world/level/Level;Ljava/util/Random;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Z a
	isValidBonemealTarget (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)Z a
	performBonemeal (Lnet/minecraft/server/level/ServerLevel;Ljava/util/Random;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V a
net/minecraft/world/level/block/BrewingStandBlock buo
	HAS_BOTTLE a
	SHAPE b
	animateTick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)V a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getAnalogOutputSignal (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)I a
	getRenderShape (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/RenderShape; b
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; b
	hasAnalogOutputSignal (Lnet/minecraft/world/level/block/state/BlockState;)Z a
	isPathfindable (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/pathfinder/PathComputationType;)Z a
	newBlockEntity (Lnet/minecraft/world/level/BlockGetter;)Lnet/minecraft/world/level/block/entity/BlockEntity; a
	onRemove (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)V a
	setPlacedBy (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/item/ItemStack;)V a
	use (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;Lnet/minecraft/world/phys/BlockHitResult;)Lnet/minecraft/world/InteractionResult; a
net/minecraft/world/level/block/BubbleColumnBlock bup
	DRAG_DOWN a
	animateTick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)V a
	canExistIn (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;)Z a
	canSurvive (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;)Z a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	entityInside (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/Entity;)V a
	getDrag (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Z a
	getFluidState (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/material/FluidState; d
	getRenderShape (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/RenderShape; b
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; b
	growColumn (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Z)V a
	onPlace (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)V b
	takeLiquid (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/material/Fluid; b
	tick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)V a
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
net/minecraft/world/level/block/BucketPickup buq
	takeLiquid (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/material/Fluid; b
net/minecraft/world/level/block/BushBlock bur
	canSurvive (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;)Z a
	isPathfindable (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/pathfinder/PathComputationType;)Z a
	mayPlaceOn (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Z c
	propagatesSkylightDown (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Z b
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
net/minecraft/world/level/block/ButtonBlock bus
	CEILING_AABB_X b
	CEILING_AABB_Z c
	EAST_AABB i
	FLOOR_AABB_X d
	FLOOR_AABB_Z e
	NORTH_AABB f
	POWERED a
	PRESSED_CEILING_AABB_X j
	PRESSED_CEILING_AABB_Z k
	PRESSED_EAST_AABB t
	PRESSED_FLOOR_AABB_X o
	PRESSED_FLOOR_AABB_Z p
	PRESSED_NORTH_AABB q
	PRESSED_SOUTH_AABB r
	PRESSED_WEST_AABB s
	SOUTH_AABB g
	WEST_AABB h
	sensitive v
	checkPressed (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)V e
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	entityInside (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/Entity;)V a
	getDirectSignal (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;)I b
	getPressDuration ()I c
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; b
	getSignal (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;)I a
	getSound (Z)Lnet/minecraft/sounds/SoundEvent; a
	isSignalSource (Lnet/minecraft/world/level/block/state/BlockState;)Z b_
	onRemove (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)V a
	playSound (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Z)V a
	press (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)V d
	tick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)V a
	updateNeighbours (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)V f
	use (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;Lnet/minecraft/world/phys/BlockHitResult;)Lnet/minecraft/world/InteractionResult; a
net/minecraft/world/level/block/CactusBlock but
	AGE a
	COLLISION_SHAPE b
	OUTLINE_SHAPE c
	canSurvive (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;)Z a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	entityInside (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/Entity;)V a
	getCollisionShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; c
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; b
	isPathfindable (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/pathfinder/PathComputationType;)Z a
	randomTick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)V b
	tick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)V a
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
net/minecraft/world/level/block/CakeBlock buu
	BITES a
	SHAPE_BY_BITE b
	canSurvive (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;)Z a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	eat (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/entity/player/Player;)Lnet/minecraft/world/InteractionResult; a
	getAnalogOutputSignal (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)I a
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; b
	hasAnalogOutputSignal (Lnet/minecraft/world/level/block/state/BlockState;)Z a
	isPathfindable (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/pathfinder/PathComputationType;)Z a
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
	use (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;Lnet/minecraft/world/phys/BlockHitResult;)Lnet/minecraft/world/InteractionResult; a
net/minecraft/world/level/block/CampfireBlock buv
	FACING e
	LIT b
	SHAPE a
	SIGNAL_FIRE c
	VIRTUAL_FENCE_POST f
	WATERLOGGED d
	fireDamage h
	spawnParticles g
	animateTick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)V a
	canLight (Lnet/minecraft/world/level/block/state/BlockState;)Z h
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	dowse (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V c
	entityInside (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/Entity;)V a
	getFluidState (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/material/FluidState; d
	getRenderShape (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/RenderShape; b
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; b
	getStateForPlacement (Lnet/minecraft/world/item/context/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	isLitCampfire (Lnet/minecraft/world/level/block/state/BlockState;)Z g
	isPathfindable (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/pathfinder/PathComputationType;)Z a
	isSmokeSource (Lnet/minecraft/world/level/block/state/BlockState;)Z l
	isSmokeyPos (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)Z a
	makeParticles (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;ZZ)V a
	mirror (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Mirror;)Lnet/minecraft/world/level/block/state/BlockState; a
	newBlockEntity (Lnet/minecraft/world/level/BlockGetter;)Lnet/minecraft/world/level/block/entity/BlockEntity; a
	onProjectileHit (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/phys/BlockHitResult;Lnet/minecraft/world/entity/projectile/Projectile;)V a
	onRemove (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)V a
	placeLiquid (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/material/FluidState;)Z a
	rotate (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Rotation;)Lnet/minecraft/world/level/block/state/BlockState; a
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
	use (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;Lnet/minecraft/world/phys/BlockHitResult;)Lnet/minecraft/world/InteractionResult; a
net/minecraft/world/level/block/CarrotBlock buw
	SHAPE_BY_AGE a
	getBaseSeedId ()Lnet/minecraft/world/level/ItemLike; e
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; b
net/minecraft/world/level/block/CartographyTableBlock bux
	CONTAINER_TITLE a
	getMenuProvider (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/MenuProvider; b
	use (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;Lnet/minecraft/world/phys/BlockHitResult;)Lnet/minecraft/world/InteractionResult; a
net/minecraft/world/level/block/CarvedPumpkinBlock buy
	FACING a
	PUMPKINS_PREDICATE f
	ironGolemBase d
	ironGolemFull e
	snowGolemBase b
	snowGolemFull c
	canSpawnGolem (Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;)Z a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getOrCreateIronGolemBase ()Lnet/minecraft/world/level/block/state/pattern/BlockPattern; e
	getOrCreateIronGolemFull ()Lnet/minecraft/world/level/block/state/pattern/BlockPattern; t
	getOrCreateSnowGolemBase ()Lnet/minecraft/world/level/block/state/pattern/BlockPattern; c
	getOrCreateSnowGolemFull ()Lnet/minecraft/world/level/block/state/pattern/BlockPattern; d
	getStateForPlacement (Lnet/minecraft/world/item/context/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	onPlace (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)V b
	trySpawnGolem (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)V a
net/minecraft/world/level/block/CauldronBlock buz
	INSIDE c
	LEVEL a
	SHAPE b
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	entityInside (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/Entity;)V a
	getAnalogOutputSignal (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)I a
	getInteractionShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/phys/shapes/VoxelShape; a_
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; b
	handleRain (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)V c
	hasAnalogOutputSignal (Lnet/minecraft/world/level/block/state/BlockState;)Z a
	isPathfindable (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/pathfinder/PathComputationType;)Z a
	setWaterLevel (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;I)V a
	use (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;Lnet/minecraft/world/phys/BlockHitResult;)Lnet/minecraft/world/InteractionResult; a
net/minecraft/world/level/block/ChainBlock bva
	WATERLOGGED a
	X_AXIS_AABB d
	Y_AXIS_AABB b
	Z_AXIS_AABB c
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getFluidState (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/material/FluidState; d
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; b
	getStateForPlacement (Lnet/minecraft/world/item/context/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	isPathfindable (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/pathfinder/PathComputationType;)Z a
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
net/minecraft/world/level/block/ChestBlock bvb
	AABB i
	CHEST_COMBINER j
	EAST_AABB h
	FACING b
	MENU_PROVIDER_COMBINER k
	NORTH_AABB e
	SOUTH_AABB f
	TYPE c
	WATERLOGGED d
	WEST_AABB g
	blockEntityType ()Lnet/minecraft/world/level/block/entity/BlockEntityType; d
	candidatePartnerFacing (Lnet/minecraft/world/item/context/BlockPlaceContext;Lnet/minecraft/core/Direction;)Lnet/minecraft/core/Direction; a
	combine (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Z)Lnet/minecraft/world/level/block/DoubleBlockCombiner$NeighborCombineResult; a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getAnalogOutputSignal (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)I a
	getBlockType (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/DoubleBlockCombiner$BlockType; g
	getConnectedDirection (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/core/Direction; h
	getContainer (Lnet/minecraft/world/level/block/ChestBlock;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Z)Lnet/minecraft/world/Container; a
	getFluidState (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/material/FluidState; d
	getMenuProvider (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/MenuProvider; b
	getOpenChestStat ()Lnet/minecraft/stats/Stat; c
	getRenderShape (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/RenderShape; b
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; b
	getStateForPlacement (Lnet/minecraft/world/item/context/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	hasAnalogOutputSignal (Lnet/minecraft/world/level/block/state/BlockState;)Z a
	isBlockedChestByBlock (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Z a
	isCatSittingOnChest (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;)Z b
	isChestBlockedAt (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;)Z a
	isPathfindable (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/pathfinder/PathComputationType;)Z a
	mirror (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Mirror;)Lnet/minecraft/world/level/block/state/BlockState; a
	newBlockEntity (Lnet/minecraft/world/level/BlockGetter;)Lnet/minecraft/world/level/block/entity/BlockEntity; a
	onRemove (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)V a
	opennessCombiner (Lnet/minecraft/world/level/block/entity/LidBlockEntity;)Lnet/minecraft/world/level/block/DoubleBlockCombiner$Combiner; a
	rotate (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Rotation;)Lnet/minecraft/world/level/block/state/BlockState; a
	setPlacedBy (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/item/ItemStack;)V a
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
	use (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;Lnet/minecraft/world/phys/BlockHitResult;)Lnet/minecraft/world/InteractionResult; a
net/minecraft/world/level/block/ChorusFlowerBlock bvc
	AGE a
	plant b
	allNeighborsEmpty (Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;)Z b
	canSurvive (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;)Z a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	generatePlant (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Ljava/util/Random;I)V a
	growTreeRecursive (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Ljava/util/Random;Lnet/minecraft/core/BlockPos;II)V a
	isRandomlyTicking (Lnet/minecraft/world/level/block/state/BlockState;)Z a_
	onProjectileHit (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/phys/BlockHitResult;Lnet/minecraft/world/entity/projectile/Projectile;)V a
	placeDeadFlower (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)V a
	placeGrownFlower (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;I)V a
	randomTick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)V b
	tick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)V a
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
net/minecraft/world/level/block/ChorusPlantBlock bvd
	canSurvive (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;)Z a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getStateForPlacement (Lnet/minecraft/world/item/context/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	getStateForPlacement (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
	isPathfindable (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/pathfinder/PathComputationType;)Z a
	tick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)V a
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
net/minecraft/world/level/block/CocoaBlock bve
	AGE a
	EAST_AABB b
	NORTH_AABB d
	SOUTH_AABB e
	WEST_AABB c
	canSurvive (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;)Z a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; b
	getStateForPlacement (Lnet/minecraft/world/item/context/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	isBonemealSuccess (Lnet/minecraft/world/level/Level;Ljava/util/Random;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Z a
	isPathfindable (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/pathfinder/PathComputationType;)Z a
	isRandomlyTicking (Lnet/minecraft/world/level/block/state/BlockState;)Z a_
	isValidBonemealTarget (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)Z a
	performBonemeal (Lnet/minecraft/server/level/ServerLevel;Ljava/util/Random;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V a
	randomTick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)V b
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
net/minecraft/world/level/block/CommandBlock bvf
	CONDITIONAL b
	FACING a
	LOGGER c
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	execute (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/BaseCommandBlock;Z)V a
	executeChain (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;)V a
	getAnalogOutputSignal (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)I a
	getRenderShape (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/RenderShape; b
	getStateForPlacement (Lnet/minecraft/world/item/context/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	hasAnalogOutputSignal (Lnet/minecraft/world/level/block/state/BlockState;)Z a
	mirror (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Mirror;)Lnet/minecraft/world/level/block/state/BlockState; a
	neighborChanged (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Block;Lnet/minecraft/core/BlockPos;Z)V a
	newBlockEntity (Lnet/minecraft/world/level/BlockGetter;)Lnet/minecraft/world/level/block/entity/BlockEntity; a
	rotate (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Rotation;)Lnet/minecraft/world/level/block/state/BlockState; a
	setPlacedBy (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/item/ItemStack;)V a
	tick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)V a
	use (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;Lnet/minecraft/world/phys/BlockHitResult;)Lnet/minecraft/world/InteractionResult; a
net/minecraft/world/level/block/ComparatorBlock bvg
	MODE a
	calculateOutputSignal (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)I e
	checkTickOnNeighbor (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V c
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getDelay (Lnet/minecraft/world/level/block/state/BlockState;)I g
	getInputSignal (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)I b
	getItemFrame (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/Direction;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/entity/decoration/ItemFrame; a
	getOutputSignal (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)I b
	newBlockEntity (Lnet/minecraft/world/level/BlockGetter;)Lnet/minecraft/world/level/block/entity/BlockEntity; a
	refreshOutputState (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V f
	shouldTurnOn (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Z a
	tick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)V a
	triggerEvent (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;II)Z a
	use (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;Lnet/minecraft/world/phys/BlockHitResult;)Lnet/minecraft/world/InteractionResult; a
net/minecraft/world/level/block/ComposterBlock bvh
	COMPOSTABLES b
	LEVEL a
	OUTER_SHAPE c
	SHAPES d
	add (FLnet/minecraft/world/level/ItemLike;)V a
	addItem (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/item/ItemStack;)Lnet/minecraft/world/level/block/state/BlockState; b
	bootStrap ()V c
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	empty (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; d
	extractProduce (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; d
	getAnalogOutputSignal (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)I a
	getCollisionShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; c
	getContainer (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/WorldlyContainer; a
	getInteractionShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/phys/shapes/VoxelShape; a_
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; b
	handleFill (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Z)V a
	hasAnalogOutputSignal (Lnet/minecraft/world/level/block/state/BlockState;)Z a
	insertItem (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
	isPathfindable (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/pathfinder/PathComputationType;)Z a
	onPlace (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)V b
	tick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)V a
	use (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;Lnet/minecraft/world/phys/BlockHitResult;)Lnet/minecraft/world/InteractionResult; a
net/minecraft/world/level/block/ComposterBlock$EmptyContainer bvh$a
	canPlaceItemThroughFace (ILnet/minecraft/world/item/ItemStack;Lnet/minecraft/core/Direction;)Z a
	canTakeItemThroughFace (ILnet/minecraft/world/item/ItemStack;Lnet/minecraft/core/Direction;)Z b
	getSlotsForFace (Lnet/minecraft/core/Direction;)[I a
net/minecraft/world/level/block/ComposterBlock$InputContainer bvh$b
	changed d
	level b
	pos c
	state a
	canPlaceItemThroughFace (ILnet/minecraft/world/item/ItemStack;Lnet/minecraft/core/Direction;)Z a
	canTakeItemThroughFace (ILnet/minecraft/world/item/ItemStack;Lnet/minecraft/core/Direction;)Z b
	getMaxStackSize ()I V_
	getSlotsForFace (Lnet/minecraft/core/Direction;)[I a
	setChanged ()V X_
net/minecraft/world/level/block/ComposterBlock$OutputContainer bvh$c
	changed d
	level b
	pos c
	state a
	canPlaceItemThroughFace (ILnet/minecraft/world/item/ItemStack;Lnet/minecraft/core/Direction;)Z a
	canTakeItemThroughFace (ILnet/minecraft/world/item/ItemStack;Lnet/minecraft/core/Direction;)Z b
	getMaxStackSize ()I V_
	getSlotsForFace (Lnet/minecraft/core/Direction;)[I a
	setChanged ()V X_
net/minecraft/world/level/block/ConcretePowderBlock bvi
	concrete a
	canSolidify (Lnet/minecraft/world/level/block/state/BlockState;)Z l
	getDustColor (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)I c
	getStateForPlacement (Lnet/minecraft/world/item/context/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	onLand (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/entity/item/FallingBlockEntity;)V a
	shouldSolidify (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Z b
	touchesLiquid (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Z a
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
net/minecraft/world/level/block/ConduitBlock bvj
	SHAPE b
	WATERLOGGED a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getFluidState (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/material/FluidState; d
	getRenderShape (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/RenderShape; b
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; b
	getStateForPlacement (Lnet/minecraft/world/item/context/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	isPathfindable (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/pathfinder/PathComputationType;)Z a
	newBlockEntity (Lnet/minecraft/world/level/BlockGetter;)Lnet/minecraft/world/level/block/entity/BlockEntity; a
	setPlacedBy (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/item/ItemStack;)V a
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
net/minecraft/world/level/block/CoralBlock bvk
	deadBlock a
	getStateForPlacement (Lnet/minecraft/world/item/context/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	scanForWater (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Z a
	tick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)V a
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
net/minecraft/world/level/block/CoralFanBlock bvl
	deadBlock a
	onPlace (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)V b
	tick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)V a
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
net/minecraft/world/level/block/CoralPlantBlock bvm
	SHAPE a
	deadBlock c
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; b
	onPlace (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)V b
	tick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)V a
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
net/minecraft/world/level/block/CoralWallFanBlock bvn
	deadBlock c
	onPlace (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)V b
	tick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)V a
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
net/minecraft/world/level/block/CraftingTableBlock bvo
	CONTAINER_TITLE a
	getMenuProvider (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/MenuProvider; b
	use (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;Lnet/minecraft/world/phys/BlockHitResult;)Lnet/minecraft/world/InteractionResult; a
net/minecraft/world/level/block/CropBlock bvp
	AGE b
	SHAPE_BY_AGE a
	canSurvive (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;)Z a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	entityInside (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/Entity;)V a
	getAge (Lnet/minecraft/world/level/block/state/BlockState;)I g
	getAgeProperty ()Lnet/minecraft/world/level/block/state/properties/IntegerProperty; c
	getBaseSeedId ()Lnet/minecraft/world/level/ItemLike; e
	getBonemealAgeIncrease (Lnet/minecraft/world/level/Level;)I a
	getCloneItemStack (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/item/ItemStack; a
	getGrowthSpeed (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)F a
	getMaxAge ()I d
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; b
	getStateForAge (I)Lnet/minecraft/world/level/block/state/BlockState; b
	growCrops (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V a
	isBonemealSuccess (Lnet/minecraft/world/level/Level;Ljava/util/Random;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Z a
	isMaxAge (Lnet/minecraft/world/level/block/state/BlockState;)Z h
	isRandomlyTicking (Lnet/minecraft/world/level/block/state/BlockState;)Z a_
	isValidBonemealTarget (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)Z a
	mayPlaceOn (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Z c
	performBonemeal (Lnet/minecraft/server/level/ServerLevel;Ljava/util/Random;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V a
	randomTick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)V b
net/minecraft/world/level/block/CrossCollisionBlock bvq
	EAST b
	NORTH a
	PROPERTY_BY_DIRECTION f
	SOUTH c
	WATERLOGGED e
	WEST d
	collisionShapeByIndex g
	shapeByIndex h
	stateToIndex i
	getAABBIndex (Lnet/minecraft/world/level/block/state/BlockState;)I g
	getCollisionShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; c
	getFluidState (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/material/FluidState; d
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; b
	indexFor (Lnet/minecraft/core/Direction;)I a
	isPathfindable (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/pathfinder/PathComputationType;)Z a
	makeShapes (FFFFF)[Lnet/minecraft/world/phys/shapes/VoxelShape; a
	mirror (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Mirror;)Lnet/minecraft/world/level/block/state/BlockState; a
	propagatesSkylightDown (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Z b
	rotate (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Rotation;)Lnet/minecraft/world/level/block/state/BlockState; a
net/minecraft/world/level/block/CryingObsidianBlock bvr
	animateTick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)V a
net/minecraft/world/level/block/DaylightDetectorBlock bvs
	INVERTED b
	POWER a
	SHAPE c
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getRenderShape (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/RenderShape; b
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; b
	getSignal (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;)I a
	isSignalSource (Lnet/minecraft/world/level/block/state/BlockState;)Z b_
	newBlockEntity (Lnet/minecraft/world/level/BlockGetter;)Lnet/minecraft/world/level/block/entity/BlockEntity; a
	updateSignalStrength (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)V d
	use (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;Lnet/minecraft/world/phys/BlockHitResult;)Lnet/minecraft/world/InteractionResult; a
	useShapeForLightOcclusion (Lnet/minecraft/world/level/block/state/BlockState;)Z c_
net/minecraft/world/level/block/DeadBushBlock bvt
	SHAPE a
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; b
	mayPlaceOn (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Z c
net/minecraft/world/level/block/DetectorRailBlock bvu
	POWERED d
	SHAPE c
	checkPressed (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	entityInside (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/Entity;)V a
	getAnalogOutputSignal (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)I a
	getDirectSignal (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;)I b
	getInteractingMinecartOfType (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Ljava/lang/Class;Ljava/util/function/Predicate;)Ljava/util/List; a
	getSearchBB (Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/phys/AABB; a
	getShapeProperty ()Lnet/minecraft/world/level/block/state/properties/Property; d
	getSignal (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;)I a
	hasAnalogOutputSignal (Lnet/minecraft/world/level/block/state/BlockState;)Z a
	isSignalSource (Lnet/minecraft/world/level/block/state/BlockState;)Z b_
	mirror (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Mirror;)Lnet/minecraft/world/level/block/state/BlockState; a
	onPlace (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)V b
	rotate (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Rotation;)Lnet/minecraft/world/level/block/state/BlockState; a
	tick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)V a
	updatePowerToConnected (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)V b
net/minecraft/world/level/block/DiodeBlock bvv
	POWERED c
	SHAPE b
	canSurvive (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;)Z a
	checkTickOnNeighbor (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V c
	getAlternateSignal (Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)I b
	getAlternateSignalAt (Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;)I b
	getDelay (Lnet/minecraft/world/level/block/state/BlockState;)I g
	getDirectSignal (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;)I b
	getInputSignal (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)I b
	getOutputSignal (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)I b
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; b
	getSignal (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;)I a
	getStateForPlacement (Lnet/minecraft/world/item/context/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	isAlternateInput (Lnet/minecraft/world/level/block/state/BlockState;)Z h
	isDiode (Lnet/minecraft/world/level/block/state/BlockState;)Z l
	isLocked (Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Z a
	isSignalSource (Lnet/minecraft/world/level/block/state/BlockState;)Z b_
	neighborChanged (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Block;Lnet/minecraft/core/BlockPos;Z)V a
	onPlace (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)V b
	onRemove (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)V a
	setPlacedBy (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/item/ItemStack;)V a
	shouldPrioritize (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Z c
	shouldTurnOn (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Z a
	tick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)V a
	updateNeighborsInFront (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V d
net/minecraft/world/level/block/DirectionalBlock bvw
	FACING a
net/minecraft/world/level/block/DispenserBlock bvx
	DISPENSER_REGISTRY c
	FACING a
	TRIGGERED b
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	dispenseFrom (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;)V a
	getAnalogOutputSignal (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)I a
	getDispenseMethod (Lnet/minecraft/world/item/ItemStack;)Lnet/minecraft/core/dispenser/DispenseItemBehavior; a
	getDispensePosition (Lnet/minecraft/core/BlockSource;)Lnet/minecraft/core/Position; a
	getRenderShape (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/RenderShape; b
	getStateForPlacement (Lnet/minecraft/world/item/context/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	hasAnalogOutputSignal (Lnet/minecraft/world/level/block/state/BlockState;)Z a
	mirror (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Mirror;)Lnet/minecraft/world/level/block/state/BlockState; a
	neighborChanged (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Block;Lnet/minecraft/core/BlockPos;Z)V a
	newBlockEntity (Lnet/minecraft/world/level/BlockGetter;)Lnet/minecraft/world/level/block/entity/BlockEntity; a
	onRemove (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)V a
	registerBehavior (Lnet/minecraft/world/level/ItemLike;Lnet/minecraft/core/dispenser/DispenseItemBehavior;)V a
	rotate (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Rotation;)Lnet/minecraft/world/level/block/state/BlockState; a
	setPlacedBy (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/item/ItemStack;)V a
	tick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)V a
	use (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;Lnet/minecraft/world/phys/BlockHitResult;)Lnet/minecraft/world/InteractionResult; a
net/minecraft/world/level/block/DoorBlock bvy
	EAST_AABB i
	FACING a
	HALF e
	HINGE c
	NORTH_AABB g
	OPEN b
	POWERED d
	SOUTH_AABB f
	WEST_AABB h
	canSurvive (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;)Z a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getCloseSound ()I c
	getHinge (Lnet/minecraft/world/item/context/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/properties/DoorHingeSide; b
	getOpenSound ()I d
	getPistonPushReaction (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/material/PushReaction; f
	getSeed (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/BlockPos;)J a
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; b
	getStateForPlacement (Lnet/minecraft/world/item/context/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	isOpen (Lnet/minecraft/world/level/block/state/BlockState;)Z h
	isPathfindable (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/pathfinder/PathComputationType;)Z a
	isWoodenDoor (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)Z a
	isWoodenDoor (Lnet/minecraft/world/level/block/state/BlockState;)Z l
	mirror (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Mirror;)Lnet/minecraft/world/level/block/state/BlockState; a
	neighborChanged (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Block;Lnet/minecraft/core/BlockPos;Z)V a
	playSound (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Z)V a
	playerWillDestroy (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/entity/player/Player;)V a
	rotate (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Rotation;)Lnet/minecraft/world/level/block/state/BlockState; a
	setOpen (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/BlockPos;Z)V a
	setPlacedBy (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/item/ItemStack;)V a
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
	use (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;Lnet/minecraft/world/phys/BlockHitResult;)Lnet/minecraft/world/InteractionResult; a
net/minecraft/world/level/block/DoubleBlockCombiner bvz
	combineWithNeigbour (Lnet/minecraft/world/level/block/entity/BlockEntityType;Ljava/util/function/Function;Ljava/util/function/Function;Lnet/minecraft/world/level/block/state/properties/DirectionProperty;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Ljava/util/function/BiPredicate;)Lnet/minecraft/world/level/block/DoubleBlockCombiner$NeighborCombineResult; a
net/minecraft/world/level/block/DoubleBlockCombiner$BlockType bvz$a
	$VALUES d
	FIRST b
	SECOND c
	SINGLE a
net/minecraft/world/level/block/DoubleBlockCombiner$Combiner bvz$b
	acceptDouble (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object; a
	acceptNone ()Ljava/lang/Object; b
	acceptSingle (Ljava/lang/Object;)Ljava/lang/Object; a
net/minecraft/world/level/block/DoubleBlockCombiner$NeighborCombineResult bvz$c
net/minecraft/world/level/block/DoubleBlockCombiner$NeighborCombineResult$Double bvz$c$a
	first a
	second b
net/minecraft/world/level/block/DoubleBlockCombiner$NeighborCombineResult$Single bvz$c$b
	single a
net/minecraft/world/level/block/DoublePlantBlock bwa
	HALF a
	canSurvive (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;)Z a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getOffsetType ()Lnet/minecraft/world/level/block/state/BlockBehaviour$OffsetType; ah_
	getSeed (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/BlockPos;)J a
	getStateForPlacement (Lnet/minecraft/world/item/context/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	placeAt (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;I)V a
	playerDestroy (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/entity/BlockEntity;Lnet/minecraft/world/item/ItemStack;)V a
	playerWillDestroy (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/entity/player/Player;)V a
	preventCreativeDropFromBottomPart (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/entity/player/Player;)V b
	setPlacedBy (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/item/ItemStack;)V a
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
net/minecraft/world/level/block/DragonEggBlock bwb
	SHAPE a
	attack (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/player/Player;)V a
	getDelayAfterPlace ()I c
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; b
	isPathfindable (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/pathfinder/PathComputationType;)Z a
	teleport (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)V d
	use (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;Lnet/minecraft/world/phys/BlockHitResult;)Lnet/minecraft/world/InteractionResult; a
net/minecraft/world/level/block/DropperBlock bwc
	DISPENSE_BEHAVIOUR c
	dispenseFrom (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;)V a
	getDispenseMethod (Lnet/minecraft/world/item/ItemStack;)Lnet/minecraft/core/dispenser/DispenseItemBehavior; a
	newBlockEntity (Lnet/minecraft/world/level/BlockGetter;)Lnet/minecraft/world/level/block/entity/BlockEntity; a
net/minecraft/world/level/block/EnchantmentTableBlock bwd
	SHAPE a
	animateTick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)V a
	getMenuProvider (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/MenuProvider; b
	getRenderShape (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/RenderShape; b
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; b
	isPathfindable (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/pathfinder/PathComputationType;)Z a
	newBlockEntity (Lnet/minecraft/world/level/BlockGetter;)Lnet/minecraft/world/level/block/entity/BlockEntity; a
	setPlacedBy (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/item/ItemStack;)V a
	use (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;Lnet/minecraft/world/phys/BlockHitResult;)Lnet/minecraft/world/InteractionResult; a
	useShapeForLightOcclusion (Lnet/minecraft/world/level/block/state/BlockState;)Z c_
net/minecraft/world/level/block/EndGatewayBlock bwe
	animateTick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)V a
	canBeReplaced (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/material/Fluid;)Z a
	getCloneItemStack (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/item/ItemStack; a
	newBlockEntity (Lnet/minecraft/world/level/BlockGetter;)Lnet/minecraft/world/level/block/entity/BlockEntity; a
net/minecraft/world/level/block/EndPortalBlock bwf
	SHAPE a
	animateTick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)V a
	canBeReplaced (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/material/Fluid;)Z a
	entityInside (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/Entity;)V a
	getCloneItemStack (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/item/ItemStack; a
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; b
	newBlockEntity (Lnet/minecraft/world/level/BlockGetter;)Lnet/minecraft/world/level/block/entity/BlockEntity; a
net/minecraft/world/level/block/EndPortalFrameBlock bwg
	BASE_SHAPE c
	EYE_SHAPE d
	FACING a
	FULL_SHAPE e
	HAS_EYE b
	portalShape f
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getAnalogOutputSignal (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)I a
	getOrCreatePortalShape ()Lnet/minecraft/world/level/block/state/pattern/BlockPattern; c
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; b
	getStateForPlacement (Lnet/minecraft/world/item/context/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	hasAnalogOutputSignal (Lnet/minecraft/world/level/block/state/BlockState;)Z a
	isPathfindable (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/pathfinder/PathComputationType;)Z a
	mirror (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Mirror;)Lnet/minecraft/world/level/block/state/BlockState; a
	rotate (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Rotation;)Lnet/minecraft/world/level/block/state/BlockState; a
	useShapeForLightOcclusion (Lnet/minecraft/world/level/block/state/BlockState;)Z c_
net/minecraft/world/level/block/EndRodBlock bwh
	X_AXIS_AABB d
	Y_AXIS_AABB b
	Z_AXIS_AABB c
	animateTick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)V a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getPistonPushReaction (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/material/PushReaction; f
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; b
	getStateForPlacement (Lnet/minecraft/world/item/context/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	isPathfindable (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/pathfinder/PathComputationType;)Z a
	mirror (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Mirror;)Lnet/minecraft/world/level/block/state/BlockState; a
	rotate (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Rotation;)Lnet/minecraft/world/level/block/state/BlockState; a
net/minecraft/world/level/block/EnderChestBlock bwi
	CONTAINER_TITLE e
	FACING b
	SHAPE d
	WATERLOGGED c
	animateTick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)V a
	combine (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Z)Lnet/minecraft/world/level/block/DoubleBlockCombiner$NeighborCombineResult; a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getFluidState (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/material/FluidState; d
	getRenderShape (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/RenderShape; b
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; b
	getStateForPlacement (Lnet/minecraft/world/item/context/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	isPathfindable (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/pathfinder/PathComputationType;)Z a
	mirror (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Mirror;)Lnet/minecraft/world/level/block/state/BlockState; a
	newBlockEntity (Lnet/minecraft/world/level/BlockGetter;)Lnet/minecraft/world/level/block/entity/BlockEntity; a
	rotate (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Rotation;)Lnet/minecraft/world/level/block/state/BlockState; a
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
	use (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;Lnet/minecraft/world/phys/BlockHitResult;)Lnet/minecraft/world/InteractionResult; a
net/minecraft/world/level/block/EntityBlock bwj
	newBlockEntity (Lnet/minecraft/world/level/BlockGetter;)Lnet/minecraft/world/level/block/entity/BlockEntity; a
net/minecraft/world/level/block/FaceAttachedHorizontalDirectionalBlock bwk
	FACE u
	canAttach (Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;)Z b
	canSurvive (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;)Z a
	getConnectedDirection (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/core/Direction; h
	getStateForPlacement (Lnet/minecraft/world/item/context/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
net/minecraft/world/level/block/FallingBlock bwl
	animateTick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)V a
	falling (Lnet/minecraft/world/entity/item/FallingBlockEntity;)V a
	getDelayAfterPlace ()I c
	getDustColor (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)I c
	isFree (Lnet/minecraft/world/level/block/state/BlockState;)Z h
	onBroken (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/item/FallingBlockEntity;)V a
	onLand (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/entity/item/FallingBlockEntity;)V a
	onPlace (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)V b
	tick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)V a
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
net/minecraft/world/level/block/FarmBlock bwm
	MOISTURE a
	SHAPE b
	canSurvive (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;)Z a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	fallOn (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/Entity;F)V a
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; b
	getStateForPlacement (Lnet/minecraft/world/item/context/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	isNearWater (Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;)Z a
	isPathfindable (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/pathfinder/PathComputationType;)Z a
	isUnderCrops (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Z a
	randomTick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)V b
	tick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)V a
	turnToDirt (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)V d
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
	useShapeForLightOcclusion (Lnet/minecraft/world/level/block/state/BlockState;)Z c_
net/minecraft/world/level/block/FenceBlock bwn
	occlusionByIndex i
	connectsTo (Lnet/minecraft/world/level/block/state/BlockState;ZLnet/minecraft/core/Direction;)Z a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getOcclusionShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/phys/shapes/VoxelShape; d
	getStateForPlacement (Lnet/minecraft/world/item/context/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	getVisualShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	isPathfindable (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/pathfinder/PathComputationType;)Z a
	isSameFence (Lnet/minecraft/world/level/block/Block;)Z c
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
	use (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;Lnet/minecraft/world/phys/BlockHitResult;)Lnet/minecraft/world/InteractionResult; a
net/minecraft/world/level/block/FenceGateBlock bwo
	IN_WALL c
	OPEN a
	POWERED b
	X_COLLISION_SHAPE i
	X_OCCLUSION_SHAPE k
	X_OCCLUSION_SHAPE_LOW p
	X_SHAPE e
	X_SHAPE_LOW g
	Z_COLLISION_SHAPE h
	Z_OCCLUSION_SHAPE j
	Z_OCCLUSION_SHAPE_LOW o
	Z_SHAPE d
	Z_SHAPE_LOW f
	connectsToDirection (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;)Z a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getCollisionShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; c
	getOcclusionShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/phys/shapes/VoxelShape; d
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; b
	getStateForPlacement (Lnet/minecraft/world/item/context/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	isPathfindable (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/pathfinder/PathComputationType;)Z a
	isWall (Lnet/minecraft/world/level/block/state/BlockState;)Z h
	neighborChanged (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Block;Lnet/minecraft/core/BlockPos;Z)V a
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
	use (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;Lnet/minecraft/world/phys/BlockHitResult;)Lnet/minecraft/world/InteractionResult; a
net/minecraft/world/level/block/FireBlock bwp
	AGE b
	EAST d
	EAST_AABB k
	NORTH c
	NORTH_AABB o
	PROPERTY_BY_DIRECTION h
	SOUTH e
	SOUTH_AABB p
	UP g
	UP_AABB i
	WEST f
	WEST_AABB j
	burnOdds s
	flameOdds r
	shapesCache q
	bootStrap ()V c
	calculateShape (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/phys/shapes/VoxelShape; h
	canBurn (Lnet/minecraft/world/level/block/state/BlockState;)Z e
	canSurvive (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;)Z a
	checkBurnOut (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;ILjava/util/Random;I)V a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getBurnOdd (Lnet/minecraft/world/level/block/state/BlockState;)I l
	getFireOdds (Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;)I a
	getFireTickDelay (Ljava/util/Random;)I a
	getFlameOdds (Lnet/minecraft/world/level/block/state/BlockState;)I m
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; b
	getStateForPlacement (Lnet/minecraft/world/item/context/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	getStateForPlacement (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; b
	getStateWithAge (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;I)Lnet/minecraft/world/level/block/state/BlockState; a
	isNearRain (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)Z a
	isValidFireLocation (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Z e
	onPlace (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)V b
	setFlammable (Lnet/minecraft/world/level/block/Block;II)V a
	tick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)V a
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
net/minecraft/world/level/block/FletchingTableBlock bwq
	use (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;Lnet/minecraft/world/phys/BlockHitResult;)Lnet/minecraft/world/InteractionResult; a
net/minecraft/world/level/block/FlowerBlock bwr
	SHAPE a
	effectDuration c
	suspiciousStewEffect b
	getEffectDuration ()I d
	getOffsetType ()Lnet/minecraft/world/level/block/state/BlockBehaviour$OffsetType; ah_
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; b
	getSuspiciousStewEffect ()Lnet/minecraft/world/effect/MobEffect; c
net/minecraft/world/level/block/FlowerPotBlock bws
	POTTED_BY_CONTENT b
	SHAPE a
	content c
	getCloneItemStack (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/item/ItemStack; a
	getContent ()Lnet/minecraft/world/level/block/Block; c
	getRenderShape (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/RenderShape; b
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; b
	isPathfindable (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/pathfinder/PathComputationType;)Z a
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
	use (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;Lnet/minecraft/world/phys/BlockHitResult;)Lnet/minecraft/world/InteractionResult; a
net/minecraft/world/level/block/FrostedIceBlock bwt
	AGE a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	fewerNeigboursThan (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;I)Z a
	getCloneItemStack (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/item/ItemStack; a
	neighborChanged (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Block;Lnet/minecraft/core/BlockPos;Z)V a
	randomTick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)V b
	slightlyMelt (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)Z e
	tick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)V a
net/minecraft/world/level/block/FungusBlock bwu
	SHAPE a
	feature b
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; b
	isBonemealSuccess (Lnet/minecraft/world/level/Level;Ljava/util/Random;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Z a
	isValidBonemealTarget (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)Z a
	mayPlaceOn (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Z c
	performBonemeal (Lnet/minecraft/server/level/ServerLevel;Ljava/util/Random;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V a
net/minecraft/world/level/block/FurnaceBlock bwv
	animateTick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)V a
	newBlockEntity (Lnet/minecraft/world/level/BlockGetter;)Lnet/minecraft/world/level/block/entity/BlockEntity; a
	openContainer (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/player/Player;)V a
net/minecraft/world/level/block/GlassBlock bww
net/minecraft/world/level/block/GlazedTerracottaBlock bwx
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getPistonPushReaction (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/material/PushReaction; f
	getStateForPlacement (Lnet/minecraft/world/item/context/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
net/minecraft/world/level/block/GrassBlock bwy
	isBonemealSuccess (Lnet/minecraft/world/level/Level;Ljava/util/Random;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Z a
	isValidBonemealTarget (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)Z a
	performBonemeal (Lnet/minecraft/server/level/ServerLevel;Ljava/util/Random;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V a
net/minecraft/world/level/block/GrassPathBlock bwz
	SHAPE a
	canSurvive (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;)Z a
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; b
	getStateForPlacement (Lnet/minecraft/world/item/context/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	isPathfindable (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/pathfinder/PathComputationType;)Z a
	tick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)V a
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
	useShapeForLightOcclusion (Lnet/minecraft/world/level/block/state/BlockState;)Z c_
net/minecraft/world/level/block/GravelBlock bxa
	getDustColor (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)I c
net/minecraft/world/level/block/GrindstoneBlock bxb
	CEILING_EAST_WEST_ALL_LEGS ao
	CEILING_EAST_WEST_GRINDSTONE ap
	CEILING_EAST_WEST_LEFT_LEG am
	CEILING_EAST_WEST_LEFT_PIVOT ak
	CEILING_EAST_WEST_LEFT_POST ai
	CEILING_EAST_WEST_RIGHT_LEG an
	CEILING_EAST_WEST_RIGHT_PIVOT al
	CEILING_EAST_WEST_RIGHT_POST aj
	CEILING_NORTH_SOUTH_ALL_LEGS ag
	CEILING_NORTH_SOUTH_GRINDSTONE ah
	CEILING_NORTH_SOUTH_LEFT_LEG ae
	CEILING_NORTH_SOUTH_LEFT_PIVOT ac
	CEILING_NORTH_SOUTH_LEFT_POST aa
	CEILING_NORTH_SOUTH_RIGHT_LEG af
	CEILING_NORTH_SOUTH_RIGHT_PIVOT ad
	CEILING_NORTH_SOUTH_RIGHT_POST ab
	CONTAINER_TITLE aD
	FLOOR_EAST_WEST_ALL_LEGS r
	FLOOR_EAST_WEST_GRINDSTONE s
	FLOOR_EAST_WEST_LEFT_LEG p
	FLOOR_EAST_WEST_LEFT_PIVOT k
	FLOOR_EAST_WEST_LEFT_POST i
	FLOOR_EAST_WEST_RIGHT_LEG q
	FLOOR_EAST_WEST_RIGHT_PIVOT o
	FLOOR_EAST_WEST_RIGHT_POST j
	FLOOR_NORTH_SOUTH_ALL_LEGS g
	FLOOR_NORTH_SOUTH_GRINDSTONE h
	FLOOR_NORTH_SOUTH_LEFT_LEG e
	FLOOR_NORTH_SOUTH_LEFT_PIVOT c
	FLOOR_NORTH_SOUTH_LEFT_POST a
	FLOOR_NORTH_SOUTH_RIGHT_LEG f
	FLOOR_NORTH_SOUTH_RIGHT_PIVOT d
	FLOOR_NORTH_SOUTH_RIGHT_POST b
	WALL_EAST_ALL_LEGS Y
	WALL_EAST_GRINDSTONE Z
	WALL_EAST_LEFT_LEG W
	WALL_EAST_LEFT_PIVOT U
	WALL_EAST_LEFT_POST S
	WALL_EAST_RIGHT_LEG X
	WALL_EAST_RIGHT_PIVOT V
	WALL_EAST_RIGHT_POST T
	WALL_NORTH_ALL_LEGS I
	WALL_NORTH_GRINDSTONE J
	WALL_NORTH_LEFT_LEG G
	WALL_NORTH_LEFT_PIVOT E
	WALL_NORTH_LEFT_POST C
	WALL_NORTH_RIGHT_LEG H
	WALL_NORTH_RIGHT_PIVOT F
	WALL_NORTH_RIGHT_POST D
	WALL_SOUTH_ALL_LEGS A
	WALL_SOUTH_GRINDSTONE B
	WALL_SOUTH_LEFT_LEG y
	WALL_SOUTH_LEFT_PIVOT w
	WALL_SOUTH_LEFT_POST t
	WALL_SOUTH_RIGHT_LEG z
	WALL_SOUTH_RIGHT_PIVOT x
	WALL_SOUTH_RIGHT_POST v
	WALL_WEST_ALL_LEGS Q
	WALL_WEST_GRINDSTONE R
	WALL_WEST_LEFT_LEG O
	WALL_WEST_LEFT_PIVOT M
	WALL_WEST_LEFT_POST K
	WALL_WEST_RIGHT_LEG P
	WALL_WEST_RIGHT_PIVOT N
	WALL_WEST_RIGHT_POST L
	canSurvive (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;)Z a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getCollisionShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; c
	getMenuProvider (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/MenuProvider; b
	getRenderShape (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/RenderShape; b
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; b
	getVoxelShape (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/phys/shapes/VoxelShape; l
	isPathfindable (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/pathfinder/PathComputationType;)Z a
	mirror (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Mirror;)Lnet/minecraft/world/level/block/state/BlockState; a
	rotate (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Rotation;)Lnet/minecraft/world/level/block/state/BlockState; a
	use (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;Lnet/minecraft/world/phys/BlockHitResult;)Lnet/minecraft/world/InteractionResult; a
net/minecraft/world/level/block/GrowingPlantBlock bxc
	growthDirection a
	scheduleFluidTicks b
	shape c
	canAttachToBlock (Lnet/minecraft/world/level/block/Block;)Z c
	canSurvive (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;)Z a
	getBodyBlock ()Lnet/minecraft/world/level/block/Block; d
	getHeadBlock ()Lnet/minecraft/world/level/block/GrowingPlantHeadBlock; c
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; b
	getStateForPlacement (Lnet/minecraft/world/item/context/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	getStateForPlacement (Lnet/minecraft/world/level/LevelAccessor;)Lnet/minecraft/world/level/block/state/BlockState; a
	tick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)V a
net/minecraft/world/level/block/GrowingPlantBodyBlock bxd
	canBeReplaced (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/item/context/BlockPlaceContext;)Z a
	getBodyBlock ()Lnet/minecraft/world/level/block/Block; d
	getCloneItemStack (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/item/ItemStack; a
	getHeadPos (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Ljava/util/Optional; b
	isBonemealSuccess (Lnet/minecraft/world/level/Level;Ljava/util/Random;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Z a
	isValidBonemealTarget (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)Z a
	performBonemeal (Lnet/minecraft/server/level/ServerLevel;Ljava/util/Random;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V a
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
net/minecraft/world/level/block/GrowingPlantHeadBlock bxe
	AGE d
	growPerTickProbability e
	canGrowInto (Lnet/minecraft/world/level/block/state/BlockState;)Z h
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getBlocksToGrowWhenBonemealed (Ljava/util/Random;)I a
	getHeadBlock ()Lnet/minecraft/world/level/block/GrowingPlantHeadBlock; c
	getStateForPlacement (Lnet/minecraft/world/level/LevelAccessor;)Lnet/minecraft/world/level/block/state/BlockState; a
	isBonemealSuccess (Lnet/minecraft/world/level/Level;Ljava/util/Random;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Z a
	isRandomlyTicking (Lnet/minecraft/world/level/block/state/BlockState;)Z a_
	isValidBonemealTarget (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)Z a
	performBonemeal (Lnet/minecraft/server/level/ServerLevel;Ljava/util/Random;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V a
	randomTick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)V b
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
net/minecraft/world/level/block/HalfTransparentBlock bxf
	skipRendering (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;)Z a
net/minecraft/world/level/block/HayBlock bxg
	fallOn (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/Entity;F)V a
net/minecraft/world/level/block/HoneyBlock bxh
	SHAPE a
	doSlideMovement (Lnet/minecraft/world/entity/Entity;)V d
	doesEntityDoHoneyBlockSlideEffects (Lnet/minecraft/world/entity/Entity;)Z c
	entityInside (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/Entity;)V a
	fallOn (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/Entity;F)V a
	getCollisionShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; c
	isSlidingDown (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/Entity;)Z a
	maybeDoSlideAchievement (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/core/BlockPos;)V a
	maybeDoSlideEffects (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/Entity;)V a
	showJumpParticles (Lnet/minecraft/world/entity/Entity;)V b
	showParticles (Lnet/minecraft/world/entity/Entity;I)V a
	showSlideParticles (Lnet/minecraft/world/entity/Entity;)V a
net/minecraft/world/level/block/HopperBlock bxi
	BASE f
	CONVEX_BASE e
	DOWN_INTERACTION_SHAPE o
	DOWN_SHAPE g
	EAST_INTERACTION_SHAPE p
	EAST_SHAPE h
	ENABLED b
	FACING a
	FUNNEL d
	NORTH_INTERACTION_SHAPE q
	NORTH_SHAPE i
	SOUTH_INTERACTION_SHAPE r
	SOUTH_SHAPE j
	TOP c
	WEST_INTERACTION_SHAPE s
	WEST_SHAPE k
	checkPoweredState (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	entityInside (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/Entity;)V a
	getAnalogOutputSignal (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)I a
	getInteractionShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/phys/shapes/VoxelShape; a_
	getRenderShape (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/RenderShape; b
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; b
	getStateForPlacement (Lnet/minecraft/world/item/context/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	hasAnalogOutputSignal (Lnet/minecraft/world/level/block/state/BlockState;)Z a
	isPathfindable (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/pathfinder/PathComputationType;)Z a
	mirror (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Mirror;)Lnet/minecraft/world/level/block/state/BlockState; a
	neighborChanged (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Block;Lnet/minecraft/core/BlockPos;Z)V a
	newBlockEntity (Lnet/minecraft/world/level/BlockGetter;)Lnet/minecraft/world/level/block/entity/BlockEntity; a
	onPlace (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)V b
	onRemove (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)V a
	rotate (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Rotation;)Lnet/minecraft/world/level/block/state/BlockState; a
	setPlacedBy (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/item/ItemStack;)V a
	use (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;Lnet/minecraft/world/phys/BlockHitResult;)Lnet/minecraft/world/InteractionResult; a
net/minecraft/world/level/block/HorizontalDirectionalBlock bxj
	FACING aq
	mirror (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Mirror;)Lnet/minecraft/world/level/block/state/BlockState; a
	rotate (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Rotation;)Lnet/minecraft/world/level/block/state/BlockState; a
net/minecraft/world/level/block/HugeMushroomBlock bxk
	DOWN f
	EAST b
	NORTH a
	PROPERTY_BY_DIRECTION g
	SOUTH c
	UP e
	WEST d
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getStateForPlacement (Lnet/minecraft/world/item/context/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	mirror (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Mirror;)Lnet/minecraft/world/level/block/state/BlockState; a
	rotate (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Rotation;)Lnet/minecraft/world/level/block/state/BlockState; a
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
net/minecraft/world/level/block/IceBlock bxl
	getPistonPushReaction (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/material/PushReaction; f
	melt (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)V d
	playerDestroy (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/entity/BlockEntity;Lnet/minecraft/world/item/ItemStack;)V a
	randomTick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)V b
net/minecraft/world/level/block/InfestedBlock bxm
	BLOCK_BY_HOST_BLOCK b
	hostBlock a
	getHostBlock ()Lnet/minecraft/world/level/block/Block; c
	isCompatibleHostBlock (Lnet/minecraft/world/level/block/state/BlockState;)Z h
	spawnAfterBreak (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/item/ItemStack;)V a
	spawnInfestation (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;)V a
	stateByHostBlock (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/world/level/block/state/BlockState; c
	wasExploded (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/Explosion;)V a
net/minecraft/world/level/block/IronBarsBlock bxn
	attachsTo (Lnet/minecraft/world/level/block/state/BlockState;Z)Z a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getStateForPlacement (Lnet/minecraft/world/item/context/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	getVisualShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	skipRendering (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;)Z a
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
net/minecraft/world/level/block/JigsawBlock bxo
	ORIENTATION a
	canAttach (Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplate$StructureBlockInfo;Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplate$StructureBlockInfo;)Z a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getFrontFacing (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/core/Direction; h
	getStateForPlacement (Lnet/minecraft/world/item/context/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	getTopFacing (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/core/Direction; l
	mirror (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Mirror;)Lnet/minecraft/world/level/block/state/BlockState; a
	newBlockEntity (Lnet/minecraft/world/level/BlockGetter;)Lnet/minecraft/world/level/block/entity/BlockEntity; a
	rotate (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Rotation;)Lnet/minecraft/world/level/block/state/BlockState; a
	use (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;Lnet/minecraft/world/phys/BlockHitResult;)Lnet/minecraft/world/InteractionResult; a
net/minecraft/world/level/block/JukeboxBlock bxp
	HAS_RECORD a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	dropRecording (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)V a
	getAnalogOutputSignal (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)I a
	getRenderShape (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/RenderShape; b
	hasAnalogOutputSignal (Lnet/minecraft/world/level/block/state/BlockState;)Z a
	newBlockEntity (Lnet/minecraft/world/level/BlockGetter;)Lnet/minecraft/world/level/block/entity/BlockEntity; a
	onRemove (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)V a
	setPlacedBy (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/item/ItemStack;)V a
	setRecord (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/item/ItemStack;)V a
	use (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;Lnet/minecraft/world/phys/BlockHitResult;)Lnet/minecraft/world/InteractionResult; a
net/minecraft/world/level/block/KelpBlock bxq
	SHAPE e
	canAttachToBlock (Lnet/minecraft/world/level/block/Block;)Z c
	canGrowInto (Lnet/minecraft/world/level/block/state/BlockState;)Z h
	canPlaceLiquid (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/material/Fluid;)Z a
	getBlocksToGrowWhenBonemealed (Ljava/util/Random;)I a
	getBodyBlock ()Lnet/minecraft/world/level/block/Block; d
	getFluidState (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/material/FluidState; d
	getStateForPlacement (Lnet/minecraft/world/item/context/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	placeLiquid (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/material/FluidState;)Z a
net/minecraft/world/level/block/KelpPlantBlock bxr
	canPlaceLiquid (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/material/Fluid;)Z a
	getFluidState (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/material/FluidState; d
	getHeadBlock ()Lnet/minecraft/world/level/block/GrowingPlantHeadBlock; c
	placeLiquid (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/material/FluidState;)Z a
net/minecraft/world/level/block/LadderBlock bxs
	EAST_AABB c
	FACING a
	NORTH_AABB f
	SOUTH_AABB e
	WATERLOGGED b
	WEST_AABB d
	canAttachTo (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;)Z a
	canSurvive (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;)Z a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getFluidState (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/material/FluidState; d
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; b
	getStateForPlacement (Lnet/minecraft/world/item/context/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	mirror (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Mirror;)Lnet/minecraft/world/level/block/state/BlockState; a
	rotate (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Rotation;)Lnet/minecraft/world/level/block/state/BlockState; a
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
net/minecraft/world/level/block/Lantern bxt
	AABB c
	HANGING a
	HANGING_AABB d
	WATERLOGGED b
	canSurvive (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;)Z a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getConnectedDirection (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/core/Direction; h
	getFluidState (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/material/FluidState; d
	getPistonPushReaction (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/material/PushReaction; f
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; b
	getStateForPlacement (Lnet/minecraft/world/item/context/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	isPathfindable (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/pathfinder/PathComputationType;)Z a
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
net/minecraft/world/level/block/LeavesBlock bxu
	DISTANCE a
	PERSISTENT b
	animateTick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)V a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getBlockSupportShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/phys/shapes/VoxelShape; e
	getDistanceAt (Lnet/minecraft/world/level/block/state/BlockState;)I h
	getLightBlock (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)I f
	getStateForPlacement (Lnet/minecraft/world/item/context/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	isRandomlyTicking (Lnet/minecraft/world/level/block/state/BlockState;)Z a_
	randomTick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)V b
	tick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)V a
	updateDistance (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
net/minecraft/world/level/block/LecternBlock bxv
	FACING a
	HAS_BOOK c
	POWERED b
	SHAPE_BASE d
	SHAPE_COLLISION h
	SHAPE_COMMON f
	SHAPE_EAST k
	SHAPE_NORTH j
	SHAPE_POST e
	SHAPE_SOUTH o
	SHAPE_TOP_PLATE g
	SHAPE_WEST i
	changePowered (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)V b
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getAnalogOutputSignal (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)I a
	getCollisionShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; c
	getDirectSignal (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;)I b
	getMenuProvider (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/MenuProvider; b
	getOcclusionShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/phys/shapes/VoxelShape; d
	getRenderShape (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/RenderShape; b
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; b
	getSignal (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;)I a
	getStateForPlacement (Lnet/minecraft/world/item/context/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	hasAnalogOutputSignal (Lnet/minecraft/world/level/block/state/BlockState;)Z a
	isPathfindable (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/pathfinder/PathComputationType;)Z a
	isSignalSource (Lnet/minecraft/world/level/block/state/BlockState;)Z b_
	mirror (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Mirror;)Lnet/minecraft/world/level/block/state/BlockState; a
	newBlockEntity (Lnet/minecraft/world/level/BlockGetter;)Lnet/minecraft/world/level/block/entity/BlockEntity; a
	onRemove (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)V a
	openScreen (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/player/Player;)V a
	placeBook (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/item/ItemStack;)V b
	popBook (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)V d
	resetBookState (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)V a
	rotate (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Rotation;)Lnet/minecraft/world/level/block/state/BlockState; a
	signalPageChange (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V a
	tick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)V a
	tryPlaceBook (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/item/ItemStack;)Z a
	updateBelow (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V b
	use (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;Lnet/minecraft/world/phys/BlockHitResult;)Lnet/minecraft/world/InteractionResult; a
	useShapeForLightOcclusion (Lnet/minecraft/world/level/block/state/BlockState;)Z c_
net/minecraft/world/level/block/LevelEvent bxw
net/minecraft/world/level/block/LeverBlock bxx
	DOWN_AABB_X i
	DOWN_AABB_Z h
	EAST_AABB e
	NORTH_AABB b
	POWERED a
	SOUTH_AABB c
	UP_AABB_X g
	UP_AABB_Z f
	WEST_AABB d
	animateTick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)V a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getDirectSignal (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;)I b
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; b
	getSignal (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;)I a
	isSignalSource (Lnet/minecraft/world/level/block/state/BlockState;)Z b_
	makeParticle (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;F)V a
	onRemove (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)V a
	pull (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; d
	updateNeighbours (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)V e
	use (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;Lnet/minecraft/world/phys/BlockHitResult;)Lnet/minecraft/world/InteractionResult; a
net/minecraft/world/level/block/LiquidBlock bxy
	LEVEL a
	STABLE_SHAPE c
	fluid b
	stateCache d
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	fizz (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;)V a
	getCollisionShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; c
	getDrops (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/storage/loot/LootContext$Builder;)Ljava/util/List; a
	getFluidState (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/material/FluidState; d
	getRenderShape (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/RenderShape; b
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; b
	isPathfindable (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/pathfinder/PathComputationType;)Z a
	isRandomlyTicking (Lnet/minecraft/world/level/block/state/BlockState;)Z a_
	neighborChanged (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Block;Lnet/minecraft/core/BlockPos;Z)V a
	onPlace (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)V b
	propagatesSkylightDown (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Z b
	randomTick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)V b
	shouldSpreadLiquid (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Z a
	skipRendering (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;)Z a
	takeLiquid (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/material/Fluid; b
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
net/minecraft/world/level/block/LiquidBlockContainer bxz
	canPlaceLiquid (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/material/Fluid;)Z a
	placeLiquid (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/material/FluidState;)Z a
net/minecraft/world/level/block/LoomBlock bya
	CONTAINER_TITLE a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getMenuProvider (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/MenuProvider; b
	getStateForPlacement (Lnet/minecraft/world/item/context/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	use (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;Lnet/minecraft/world/phys/BlockHitResult;)Lnet/minecraft/world/InteractionResult; a
net/minecraft/world/level/block/MagmaBlock byb
	onPlace (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)V b
	randomTick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)V b
	stepOn (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/Entity;)V a
	tick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)V a
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
net/minecraft/world/level/block/MelonBlock byc
	getAttachedStem ()Lnet/minecraft/world/level/block/AttachedStemBlock; d
	getStem ()Lnet/minecraft/world/level/block/StemBlock; c
net/minecraft/world/level/block/Mirror byd
	$VALUES e
	FRONT_BACK c
	LEFT_RIGHT b
	NONE a
	rotation d
	getRotation (Lnet/minecraft/core/Direction;)Lnet/minecraft/world/level/block/Rotation; a
	mirror (II)I a
	mirror (Lnet/minecraft/core/Direction;)Lnet/minecraft/core/Direction; b
	rotation ()Lcom/mojang/math/OctahedralGroup; a
net/minecraft/world/level/block/MushroomBlock bye
	SHAPE a
	canSurvive (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;)Z a
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; b
	growMushroom (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Ljava/util/Random;)Z a
	isBonemealSuccess (Lnet/minecraft/world/level/Level;Ljava/util/Random;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Z a
	isValidBonemealTarget (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)Z a
	mayPlaceOn (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Z c
	performBonemeal (Lnet/minecraft/server/level/ServerLevel;Ljava/util/Random;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V a
	randomTick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)V b
net/minecraft/world/level/block/MyceliumBlock byf
	animateTick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)V a
net/minecraft/world/level/block/NetherPortalBlock byg
	AXIS a
	X_AXIS_AABB b
	Z_AXIS_AABB c
	animateTick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)V a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	entityInside (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/Entity;)V a
	getCloneItemStack (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/item/ItemStack; a
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; b
	randomTick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)V b
	rotate (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Rotation;)Lnet/minecraft/world/level/block/state/BlockState; a
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
net/minecraft/world/level/block/NetherSproutsBlock byh
	SHAPE a
	getOffsetType ()Lnet/minecraft/world/level/block/state/BlockBehaviour$OffsetType; ah_
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; b
	mayPlaceOn (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Z c
net/minecraft/world/level/block/NetherVines byi
	getBlocksToGrowWhenBonemealed (Ljava/util/Random;)I a
	isValidGrowthState (Lnet/minecraft/world/level/block/state/BlockState;)Z a
net/minecraft/world/level/block/NetherWartBlock byj
	AGE a
	SHAPE_BY_AGE b
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getCloneItemStack (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/item/ItemStack; a
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; b
	isRandomlyTicking (Lnet/minecraft/world/level/block/state/BlockState;)Z a_
	mayPlaceOn (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Z c
	randomTick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)V b
net/minecraft/world/level/block/NetherrackBlock byk
	isBonemealSuccess (Lnet/minecraft/world/level/Level;Ljava/util/Random;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Z a
	isValidBonemealTarget (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)Z a
	performBonemeal (Lnet/minecraft/server/level/ServerLevel;Ljava/util/Random;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V a
net/minecraft/world/level/block/NoteBlock byl
	INSTRUMENT a
	NOTE c
	POWERED b
	attack (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/player/Player;)V a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getStateForPlacement (Lnet/minecraft/world/item/context/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	neighborChanged (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Block;Lnet/minecraft/core/BlockPos;Z)V a
	playNote (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)V a
	triggerEvent (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;II)Z a
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
	use (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;Lnet/minecraft/world/phys/BlockHitResult;)Lnet/minecraft/world/InteractionResult; a
net/minecraft/world/level/block/NyliumBlock bym
	canBeNylium (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;)Z b
	isBonemealSuccess (Lnet/minecraft/world/level/Level;Ljava/util/Random;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Z a
	isValidBonemealTarget (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)Z a
	performBonemeal (Lnet/minecraft/server/level/ServerLevel;Ljava/util/Random;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V a
	randomTick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)V b
net/minecraft/world/level/block/ObserverBlock byn
	POWERED b
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getDirectSignal (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;)I b
	getSignal (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;)I a
	getStateForPlacement (Lnet/minecraft/world/item/context/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	isSignalSource (Lnet/minecraft/world/level/block/state/BlockState;)Z b_
	mirror (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Mirror;)Lnet/minecraft/world/level/block/state/BlockState; a
	onPlace (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)V b
	onRemove (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)V a
	rotate (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Rotation;)Lnet/minecraft/world/level/block/state/BlockState; a
	startSignal (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;)V a
	tick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)V a
	updateNeighborsInFront (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V a
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
net/minecraft/world/level/block/OreBlock byo
	spawnAfterBreak (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/item/ItemStack;)V a
	xpOnDrop (Ljava/util/Random;)I a
net/minecraft/world/level/block/PipeBlock byp
	DIRECTIONS i
	DOWN f
	EAST b
	NORTH a
	PROPERTY_BY_DIRECTION g
	SOUTH c
	UP e
	WEST d
	shapeByIndex h
	getAABBIndex (Lnet/minecraft/world/level/block/state/BlockState;)I h
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; b
	makeShapes (F)[Lnet/minecraft/world/phys/shapes/VoxelShape; a
	propagatesSkylightDown (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Z b
net/minecraft/world/level/block/PlayerHeadBlock byq
	setPlacedBy (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/item/ItemStack;)V a
net/minecraft/world/level/block/PlayerWallHeadBlock byr
	getDrops (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/storage/loot/LootContext$Builder;)Ljava/util/List; a
	setPlacedBy (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/item/ItemStack;)V a
net/minecraft/world/level/block/PotatoBlock bys
	SHAPE_BY_AGE a
	getBaseSeedId ()Lnet/minecraft/world/level/ItemLike; e
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; b
net/minecraft/world/level/block/PoweredBlock byt
	getSignal (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;)I a
	isSignalSource (Lnet/minecraft/world/level/block/state/BlockState;)Z b_
net/minecraft/world/level/block/PoweredRailBlock byu
	POWERED d
	SHAPE c
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	findPoweredRailSignal (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;ZI)Z a
	getShapeProperty ()Lnet/minecraft/world/level/block/state/properties/Property; d
	isSameRailWithPower (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;ZILnet/minecraft/world/level/block/state/properties/RailShape;)Z a
	mirror (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Mirror;)Lnet/minecraft/world/level/block/state/BlockState; a
	rotate (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Rotation;)Lnet/minecraft/world/level/block/state/BlockState; a
	updateState (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Block;)V a
net/minecraft/world/level/block/PressurePlateBlock byv
	POWERED d
	sensitivity e
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getSignalForState (Lnet/minecraft/world/level/block/state/BlockState;)I g
	getSignalStrength (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)I b
	playOffSound (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;)V b
	playOnSound (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;)V a
	setSignalForState (Lnet/minecraft/world/level/block/state/BlockState;I)Lnet/minecraft/world/level/block/state/BlockState; a
net/minecraft/world/level/block/PressurePlateBlock$Sensitivity byv$a
	$VALUES c
	EVERYTHING a
	MOBS b
net/minecraft/world/level/block/PumpkinBlock byw
	getAttachedStem ()Lnet/minecraft/world/level/block/AttachedStemBlock; d
	getStem ()Lnet/minecraft/world/level/block/StemBlock; c
	use (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;Lnet/minecraft/world/phys/BlockHitResult;)Lnet/minecraft/world/InteractionResult; a
net/minecraft/world/level/block/RailBlock byx
	SHAPE c
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getShapeProperty ()Lnet/minecraft/world/level/block/state/properties/Property; d
	mirror (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Mirror;)Lnet/minecraft/world/level/block/state/BlockState; a
	rotate (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Rotation;)Lnet/minecraft/world/level/block/state/BlockState; a
	updateState (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Block;)V a
net/minecraft/world/level/block/RailState byy
	block c
	connections f
	isStraight e
	level a
	pos b
	state d
	canConnectTo (Lnet/minecraft/world/level/block/RailState;)Z b
	connectTo (Lnet/minecraft/world/level/block/RailState;)V c
	connectsTo (Lnet/minecraft/world/level/block/RailState;)Z a
	countPotentialConnections ()I b
	getConnections ()Ljava/util/List; a
	getRail (Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/RailState; b
	getState ()Lnet/minecraft/world/level/block/state/BlockState; c
	hasConnection (Lnet/minecraft/core/BlockPos;)Z c
	hasNeighborRail (Lnet/minecraft/core/BlockPos;)Z d
	hasRail (Lnet/minecraft/core/BlockPos;)Z a
	place (ZZLnet/minecraft/world/level/block/state/properties/RailShape;)Lnet/minecraft/world/level/block/RailState; a
	removeSoftConnections ()V d
	updateConnections (Lnet/minecraft/world/level/block/state/properties/RailShape;)V a
net/minecraft/world/level/block/RedStoneOreBlock byz
	LIT a
	animateTick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)V a
	attack (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/player/Player;)V a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	interact (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)V d
	isRandomlyTicking (Lnet/minecraft/world/level/block/state/BlockState;)Z a_
	randomTick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)V b
	spawnAfterBreak (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/item/ItemStack;)V a
	spawnParticles (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)V a
	stepOn (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/Entity;)V a
	use (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;Lnet/minecraft/world/phys/BlockHitResult;)Lnet/minecraft/world/InteractionResult; a
net/minecraft/world/level/block/RedStoneWireBlock bza
	COLORS k
	EAST b
	NORTH a
	POWER e
	PROPERTY_BY_DIRECTION f
	SHAPES_CACHE j
	SHAPES_FLOOR h
	SHAPES_UP i
	SHAPE_DOT g
	SOUTH c
	WEST d
	crossState o
	shouldSignal p
	animateTick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)V a
	calculateShape (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/phys/shapes/VoxelShape; l
	calculateTargetStrength (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)I a
	canSurvive (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;)Z a
	canSurviveOn (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Z b
	checkCornerChangeAt (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)V b
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getColorForPower (I)I b
	getConnectingSide (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;)Lnet/minecraft/world/level/block/state/properties/RedstoneSide; a
	getConnectingSide (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;Z)Lnet/minecraft/world/level/block/state/properties/RedstoneSide; a
	getConnectionState (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
	getDirectSignal (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;)I b
	getMissingConnections (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; b
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; b
	getSignal (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;)I a
	getStateForPlacement (Lnet/minecraft/world/item/context/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	getWireSignal (Lnet/minecraft/world/level/block/state/BlockState;)I o
	isCross (Lnet/minecraft/world/level/block/state/BlockState;)Z m
	isDot (Lnet/minecraft/world/level/block/state/BlockState;)Z n
	isSignalSource (Lnet/minecraft/world/level/block/state/BlockState;)Z b_
	mirror (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Mirror;)Lnet/minecraft/world/level/block/state/BlockState; a
	neighborChanged (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Block;Lnet/minecraft/core/BlockPos;Z)V a
	onPlace (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)V b
	onRemove (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)V a
	rotate (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Rotation;)Lnet/minecraft/world/level/block/state/BlockState; a
	shouldConnectTo (Lnet/minecraft/world/level/block/state/BlockState;)Z h
	shouldConnectTo (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;)Z a
	spawnParticlesAlongLine (Lnet/minecraft/world/level/Level;Ljava/util/Random;Lnet/minecraft/core/BlockPos;Lcom/mojang/math/Vector3f;Lnet/minecraft/core/Direction;Lnet/minecraft/core/Direction;FF)V a
	updateIndirectNeighbourShapes (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;II)V a
	updateNeighborsOfNeighboringWires (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)V d
	updatePowerStrength (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V a
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
	updatesOnShapeChange (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/state/BlockState;)V a
	use (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;Lnet/minecraft/world/phys/BlockHitResult;)Lnet/minecraft/world/InteractionResult; a
net/minecraft/world/level/block/RedstoneLampBlock bzb
	LIT a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getStateForPlacement (Lnet/minecraft/world/item/context/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	neighborChanged (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Block;Lnet/minecraft/core/BlockPos;Z)V a
	tick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)V a
net/minecraft/world/level/block/RedstoneTorchBlock bzc
	LIT a
	RECENT_TOGGLES b
	animateTick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)V a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getDirectSignal (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;)I b
	getSignal (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;)I a
	hasNeighborSignal (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Z a
	isSignalSource (Lnet/minecraft/world/level/block/state/BlockState;)Z b_
	isToggledTooFrequently (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Z)Z a
	neighborChanged (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Block;Lnet/minecraft/core/BlockPos;Z)V a
	onPlace (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)V b
	onRemove (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)V a
	tick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)V a
net/minecraft/world/level/block/RedstoneTorchBlock$Toggle bzc$a
	pos a
	when b
net/minecraft/world/level/block/RedstoneWallTorchBlock bzd
	FACING b
	LIT c
	animateTick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)V a
	canSurvive (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;)Z a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getDescriptionId ()Ljava/lang/String; i
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; b
	getSignal (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;)I a
	getStateForPlacement (Lnet/minecraft/world/item/context/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	hasNeighborSignal (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Z a
	mirror (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Mirror;)Lnet/minecraft/world/level/block/state/BlockState; a
	rotate (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Rotation;)Lnet/minecraft/world/level/block/state/BlockState; a
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
net/minecraft/world/level/block/RenderShape bze
	$VALUES d
	ENTITYBLOCK_ANIMATED b
	INVISIBLE a
	MODEL c
net/minecraft/world/level/block/RepeaterBlock bzf
	DELAY d
	LOCKED a
	animateTick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)V a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getDelay (Lnet/minecraft/world/level/block/state/BlockState;)I g
	getStateForPlacement (Lnet/minecraft/world/item/context/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	isAlternateInput (Lnet/minecraft/world/level/block/state/BlockState;)Z h
	isLocked (Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Z a
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
	use (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;Lnet/minecraft/world/phys/BlockHitResult;)Lnet/minecraft/world/InteractionResult; a
net/minecraft/world/level/block/RespawnAnchorBlock bzg
	CHARGE a
	RESPAWN_HORIZONTAL_OFFSETS b
	RESPAWN_OFFSETS c
	animateTick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)V a
	canBeCharged (Lnet/minecraft/world/level/block/state/BlockState;)Z h
	canSetSpawn (Lnet/minecraft/world/level/Level;)Z a
	charge (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	explode (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)V d
	findStandUpPosition (Lnet/minecraft/world/entity/EntityType;Lnet/minecraft/world/level/CollisionGetter;Lnet/minecraft/core/BlockPos;)Ljava/util/Optional; a
	findStandUpPosition (Lnet/minecraft/world/entity/EntityType;Lnet/minecraft/world/level/CollisionGetter;Lnet/minecraft/core/BlockPos;Z)Ljava/util/Optional; a
	getAnalogOutputSignal (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)I a
	getScaledChargeLevel (Lnet/minecraft/world/level/block/state/BlockState;I)I a
	hasAnalogOutputSignal (Lnet/minecraft/world/level/block/state/BlockState;)Z a
	isPathfindable (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/pathfinder/PathComputationType;)Z a
	isRespawnFuel (Lnet/minecraft/world/item/ItemStack;)Z a
	isWaterThatWouldFlow (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/Level;)Z a
	use (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;Lnet/minecraft/world/phys/BlockHitResult;)Lnet/minecraft/world/InteractionResult; a
net/minecraft/world/level/block/RootsBlock bzh
	SHAPE a
	getOffsetType ()Lnet/minecraft/world/level/block/state/BlockBehaviour$OffsetType; ah_
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; b
	mayPlaceOn (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Z c
net/minecraft/world/level/block/RotatedPillarBlock bzi
	AXIS e
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getStateForPlacement (Lnet/minecraft/world/item/context/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	rotate (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Rotation;)Lnet/minecraft/world/level/block/state/BlockState; a
net/minecraft/world/level/block/Rotation bzj
	$VALUES f
	CLOCKWISE_180 c
	CLOCKWISE_90 b
	COUNTERCLOCKWISE_90 d
	NONE a
	rotation e
	getRandom (Ljava/util/Random;)Lnet/minecraft/world/level/block/Rotation; a
	getRotated (Lnet/minecraft/world/level/block/Rotation;)Lnet/minecraft/world/level/block/Rotation; a
	getShuffled (Ljava/util/Random;)Ljava/util/List; b
	rotate (II)I a
	rotate (Lnet/minecraft/core/Direction;)Lnet/minecraft/core/Direction; a
	rotation ()Lcom/mojang/math/OctahedralGroup; a
net/minecraft/world/level/block/SandBlock bzk
	dustColor a
	getDustColor (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)I c
net/minecraft/world/level/block/SaplingBlock bzl
	SHAPE b
	STAGE a
	treeGrower c
	advanceTree (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Ljava/util/Random;)V a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; b
	isBonemealSuccess (Lnet/minecraft/world/level/Level;Ljava/util/Random;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Z a
	isValidBonemealTarget (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)Z a
	performBonemeal (Lnet/minecraft/server/level/ServerLevel;Ljava/util/Random;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V a
	randomTick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)V b
net/minecraft/world/level/block/ScaffoldingBlock bzm
	BELOW_BLOCK g
	BOTTOM c
	DISTANCE a
	STABLE_SHAPE d
	UNSTABLE_SHAPE e
	UNSTABLE_SHAPE_BOTTOM f
	WATERLOGGED b
	canBeReplaced (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/item/context/BlockPlaceContext;)Z a
	canSurvive (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;)Z a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getCollisionShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; c
	getDistance (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)I a
	getFluidState (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/material/FluidState; d
	getInteractionShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/phys/shapes/VoxelShape; a_
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; b
	getStateForPlacement (Lnet/minecraft/world/item/context/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	isBottom (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;I)Z a
	onPlace (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)V b
	tick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)V a
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
net/minecraft/world/level/block/SeaPickleBlock bzn
	FOUR_AABB f
	ONE_AABB c
	PICKLES a
	THREE_AABB e
	TWO_AABB d
	WATERLOGGED b
	canBeReplaced (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/item/context/BlockPlaceContext;)Z a
	canSurvive (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;)Z a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getFluidState (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/material/FluidState; d
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; b
	getStateForPlacement (Lnet/minecraft/world/item/context/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	isBonemealSuccess (Lnet/minecraft/world/level/Level;Ljava/util/Random;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Z a
	isDead (Lnet/minecraft/world/level/block/state/BlockState;)Z h
	isPathfindable (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/pathfinder/PathComputationType;)Z a
	isValidBonemealTarget (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)Z a
	mayPlaceOn (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Z c
	performBonemeal (Lnet/minecraft/server/level/ServerLevel;Ljava/util/Random;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V a
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
net/minecraft/world/level/block/Seagrass bzo
	SHAPE a
	canPlaceLiquid (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/material/Fluid;)Z a
	getFluidState (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/material/FluidState; d
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; b
	getStateForPlacement (Lnet/minecraft/world/item/context/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	isBonemealSuccess (Lnet/minecraft/world/level/Level;Ljava/util/Random;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Z a
	isValidBonemealTarget (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)Z a
	mayPlaceOn (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Z c
	performBonemeal (Lnet/minecraft/server/level/ServerLevel;Ljava/util/Random;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V a
	placeLiquid (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/material/FluidState;)Z a
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
net/minecraft/world/level/block/ShulkerBoxBlock bzp
	CONTENTS b
	FACING a
	color c
	appendHoverText (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/BlockGetter;Ljava/util/List;Lnet/minecraft/world/item/TooltipFlag;)V a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getAnalogOutputSignal (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)I a
	getBlockByColor (Lnet/minecraft/world/item/DyeColor;)Lnet/minecraft/world/level/block/Block; a
	getCloneItemStack (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/item/ItemStack; a
	getColor ()Lnet/minecraft/world/item/DyeColor; c
	getColorFromBlock (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/world/item/DyeColor; c
	getColorFromItem (Lnet/minecraft/world/item/Item;)Lnet/minecraft/world/item/DyeColor; b
	getColoredItemStack (Lnet/minecraft/world/item/DyeColor;)Lnet/minecraft/world/item/ItemStack; b
	getDrops (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/storage/loot/LootContext$Builder;)Ljava/util/List; a
	getPistonPushReaction (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/material/PushReaction; f
	getRenderShape (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/RenderShape; b
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; b
	getStateForPlacement (Lnet/minecraft/world/item/context/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	hasAnalogOutputSignal (Lnet/minecraft/world/level/block/state/BlockState;)Z a
	mirror (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Mirror;)Lnet/minecraft/world/level/block/state/BlockState; a
	newBlockEntity (Lnet/minecraft/world/level/BlockGetter;)Lnet/minecraft/world/level/block/entity/BlockEntity; a
	onRemove (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)V a
	playerWillDestroy (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/entity/player/Player;)V a
	rotate (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Rotation;)Lnet/minecraft/world/level/block/state/BlockState; a
	setPlacedBy (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/item/ItemStack;)V a
	use (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;Lnet/minecraft/world/phys/BlockHitResult;)Lnet/minecraft/world/InteractionResult; a
net/minecraft/world/level/block/SignBlock bzq
	SHAPE b
	WATERLOGGED a
	type c
	getFluidState (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/material/FluidState; d
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; b
	isPossibleToRespawnInThis ()Z ai_
	newBlockEntity (Lnet/minecraft/world/level/BlockGetter;)Lnet/minecraft/world/level/block/entity/BlockEntity; a
	type ()Lnet/minecraft/world/level/block/state/properties/WoodType; c
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
	use (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;Lnet/minecraft/world/phys/BlockHitResult;)Lnet/minecraft/world/InteractionResult; a
net/minecraft/world/level/block/SimpleWaterloggedBlock bzr
	canPlaceLiquid (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/material/Fluid;)Z a
	placeLiquid (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/material/FluidState;)Z a
	takeLiquid (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/material/Fluid; b
net/minecraft/world/level/block/SkullBlock bzs
	ROTATION a
	SHAPE b
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getOcclusionShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/phys/shapes/VoxelShape; d
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; b
	getStateForPlacement (Lnet/minecraft/world/item/context/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	mirror (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Mirror;)Lnet/minecraft/world/level/block/state/BlockState; a
	rotate (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Rotation;)Lnet/minecraft/world/level/block/state/BlockState; a
net/minecraft/world/level/block/SkullBlock$Type bzs$a
net/minecraft/world/level/block/SkullBlock$Types bzs$b
	$VALUES g
	CREEPER e
	DRAGON f
	PLAYER c
	SKELETON a
	WITHER_SKELETON b
	ZOMBIE d
net/minecraft/world/level/block/SlabBlock bzt
	BOTTOM_AABB c
	TOP_AABB d
	TYPE a
	WATERLOGGED b
	canBeReplaced (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/item/context/BlockPlaceContext;)Z a
	canPlaceLiquid (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/material/Fluid;)Z a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getFluidState (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/material/FluidState; d
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; b
	getStateForPlacement (Lnet/minecraft/world/item/context/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	isPathfindable (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/pathfinder/PathComputationType;)Z a
	placeLiquid (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/material/FluidState;)Z a
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
	useShapeForLightOcclusion (Lnet/minecraft/world/level/block/state/BlockState;)Z c_
net/minecraft/world/level/block/SlimeBlock bzu
	bounceUp (Lnet/minecraft/world/entity/Entity;)V a
	fallOn (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/Entity;F)V a
	stepOn (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/Entity;)V a
	updateEntityAfterFallOn (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/world/entity/Entity;)V a
net/minecraft/world/level/block/SmithingTableBlock bzv
	CONTAINER_TITLE a
	getMenuProvider (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/MenuProvider; b
	use (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;Lnet/minecraft/world/phys/BlockHitResult;)Lnet/minecraft/world/InteractionResult; a
net/minecraft/world/level/block/SmokerBlock bzw
	animateTick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)V a
	newBlockEntity (Lnet/minecraft/world/level/BlockGetter;)Lnet/minecraft/world/level/block/entity/BlockEntity; a
	openContainer (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/player/Player;)V a
net/minecraft/world/level/block/SnowLayerBlock bzx
	LAYERS a
	SHAPE_BY_LAYER b
	canBeReplaced (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/item/context/BlockPlaceContext;)Z a
	canSurvive (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;)Z a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getBlockSupportShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/phys/shapes/VoxelShape; e
	getCollisionShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; c
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; b
	getStateForPlacement (Lnet/minecraft/world/item/context/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	getVisualShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	isPathfindable (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/pathfinder/PathComputationType;)Z a
	randomTick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)V b
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
	useShapeForLightOcclusion (Lnet/minecraft/world/level/block/state/BlockState;)Z c_
net/minecraft/world/level/block/SnowyDirtBlock bzy
	SNOWY a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getStateForPlacement (Lnet/minecraft/world/item/context/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
net/minecraft/world/level/block/SoulFireBlock bzz
	canBurn (Lnet/minecraft/world/level/block/state/BlockState;)Z e
	canSurvive (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;)Z a
	canSurviveOnBlock (Lnet/minecraft/world/level/block/Block;)Z c
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
net/minecraft/world/level/block/SoulSandBlock caa
	SHAPE a
	getBlockSupportShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/phys/shapes/VoxelShape; e
	getCollisionShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; c
	getVisualShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	isPathfindable (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/pathfinder/PathComputationType;)Z a
	onPlace (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)V b
	tick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)V a
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
net/minecraft/world/level/block/SoundType cab
	ANCIENT_DEBRIS Q
	ANVIL l
	BAMBOO q
	BAMBOO_SAPLING r
	BASALT I
	BONE_BLOCK O
	CHAIN S
	CORAL_BLOCK p
	CROP u
	FUNGUS B
	GILDED_BLACKSTONE U
	GLASS g
	GRASS c
	GRAVEL b
	HARD_CROP v
	HONEY_BLOCK n
	LADDER k
	LANTERN y
	LILY_PAD d
	LODESTONE R
	METAL f
	NETHERITE_BLOCK P
	NETHERRACK K
	NETHER_BRICKS L
	NETHER_GOLD_ORE T
	NETHER_ORE N
	NETHER_SPROUTS M
	NETHER_WART x
	NYLIUM A
	ROOTS C
	SAND i
	SCAFFOLDING s
	SHROOMLIGHT D
	SLIME_BLOCK m
	SNOW j
	SOUL_SAND G
	SOUL_SOIL H
	STEM z
	STONE e
	SWEET_BERRY_BUSH t
	TWISTING_VINES F
	VINE w
	WART_BLOCK J
	WEEPING_VINES E
	WET_GRASS o
	WOOD a
	WOOL h
	breakSound X
	fallSound ab
	hitSound aa
	pitch W
	placeSound Z
	stepSound Y
	volume V
	getBreakSound ()Lnet/minecraft/sounds/SoundEvent; c
	getFallSound ()Lnet/minecraft/sounds/SoundEvent; g
	getHitSound ()Lnet/minecraft/sounds/SoundEvent; f
	getPitch ()F b
	getPlaceSound ()Lnet/minecraft/sounds/SoundEvent; e
	getStepSound ()Lnet/minecraft/sounds/SoundEvent; d
	getVolume ()F a
net/minecraft/world/level/block/SpawnerBlock cac
	getCloneItemStack (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/item/ItemStack; a
	getRenderShape (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/RenderShape; b
	newBlockEntity (Lnet/minecraft/world/level/BlockGetter;)Lnet/minecraft/world/level/block/entity/BlockEntity; a
	spawnAfterBreak (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/item/ItemStack;)V a
net/minecraft/world/level/block/SpongeBlock cad
	neighborChanged (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Block;Lnet/minecraft/core/BlockPos;Z)V a
	onPlace (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)V b
	removeWaterBreadthFirstSearch (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)Z b
	tryAbsorbWater (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)V a
net/minecraft/world/level/block/SpreadingSnowyDirtBlock cae
	canBeGrass (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;)Z b
	canPropagate (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;)Z c
	randomTick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)V b
net/minecraft/world/level/block/StainedGlassBlock caf
	color a
	getColor ()Lnet/minecraft/world/item/DyeColor; a
net/minecraft/world/level/block/StainedGlassPaneBlock cag
	color i
	getColor ()Lnet/minecraft/world/item/DyeColor; a
net/minecraft/world/level/block/StairBlock cah
	BOTTOM_AABB f
	BOTTOM_SHAPES s
	FACING a
	HALF b
	OCTET_NNN g
	OCTET_NNP h
	OCTET_NPN i
	OCTET_NPP j
	OCTET_PNN k
	OCTET_PNP o
	OCTET_PPN p
	OCTET_PPP q
	SHAPE c
	SHAPE_BY_STATE t
	TOP_AABB e
	TOP_SHAPES r
	WATERLOGGED d
	base u
	baseState v
	animateTick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)V a
	attack (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/player/Player;)V a
	canTakeShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;)Z d
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	destroy (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V a
	getExplosionResistance ()F f
	getFluidState (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/material/FluidState; d
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; b
	getShapeIndex (Lnet/minecraft/world/level/block/state/BlockState;)I l
	getStairsShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/properties/StairsShape; g
	getStateForPlacement (Lnet/minecraft/world/item/context/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	isPathfindable (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/pathfinder/PathComputationType;)Z a
	isRandomlyTicking (Lnet/minecraft/world/level/block/state/BlockState;)Z a_
	isStairs (Lnet/minecraft/world/level/block/state/BlockState;)Z h
	makeShapes (Lnet/minecraft/world/phys/shapes/VoxelShape;Lnet/minecraft/world/phys/shapes/VoxelShape;Lnet/minecraft/world/phys/shapes/VoxelShape;Lnet/minecraft/world/phys/shapes/VoxelShape;Lnet/minecraft/world/phys/shapes/VoxelShape;)[Lnet/minecraft/world/phys/shapes/VoxelShape; a
	makeStairShape (ILnet/minecraft/world/phys/shapes/VoxelShape;Lnet/minecraft/world/phys/shapes/VoxelShape;Lnet/minecraft/world/phys/shapes/VoxelShape;Lnet/minecraft/world/phys/shapes/VoxelShape;Lnet/minecraft/world/phys/shapes/VoxelShape;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	mirror (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Mirror;)Lnet/minecraft/world/level/block/state/BlockState; a
	onPlace (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)V b
	onRemove (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)V a
	prepareRender (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)V d
	randomTick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)V b
	rotate (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Rotation;)Lnet/minecraft/world/level/block/state/BlockState; a
	stepOn (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/Entity;)V a
	tick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)V a
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
	use (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;Lnet/minecraft/world/phys/BlockHitResult;)Lnet/minecraft/world/InteractionResult; a
	useShapeForLightOcclusion (Lnet/minecraft/world/level/block/state/BlockState;)Z c_
	wasExploded (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/Explosion;)V a
net/minecraft/world/level/block/StandingSignBlock cai
	ROTATION c
	canSurvive (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;)Z a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getStateForPlacement (Lnet/minecraft/world/item/context/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	mirror (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Mirror;)Lnet/minecraft/world/level/block/state/BlockState; a
	rotate (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Rotation;)Lnet/minecraft/world/level/block/state/BlockState; a
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
net/minecraft/world/level/block/StemBlock caj
	AGE a
	SHAPE_BY_AGE b
	fruit c
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getCloneItemStack (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/item/ItemStack; a
	getFruit ()Lnet/minecraft/world/level/block/StemGrownBlock; d
	getSeedItem ()Lnet/minecraft/world/item/Item; c
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; b
	isBonemealSuccess (Lnet/minecraft/world/level/Level;Ljava/util/Random;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Z a
	isValidBonemealTarget (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)Z a
	mayPlaceOn (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Z c
	performBonemeal (Lnet/minecraft/server/level/ServerLevel;Ljava/util/Random;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V a
	randomTick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)V b
net/minecraft/world/level/block/StemGrownBlock cak
	getAttachedStem ()Lnet/minecraft/world/level/block/AttachedStemBlock; d
	getStem ()Lnet/minecraft/world/level/block/StemBlock; c
net/minecraft/world/level/block/StoneButtonBlock cal
	getSound (Z)Lnet/minecraft/sounds/SoundEvent; a
net/minecraft/world/level/block/StonecutterBlock cam
	CONTAINER_TITLE c
	FACING a
	SHAPE b
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getMenuProvider (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/MenuProvider; b
	getRenderShape (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/RenderShape; b
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; b
	getStateForPlacement (Lnet/minecraft/world/item/context/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	isPathfindable (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/pathfinder/PathComputationType;)Z a
	mirror (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Mirror;)Lnet/minecraft/world/level/block/state/BlockState; a
	rotate (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Rotation;)Lnet/minecraft/world/level/block/state/BlockState; a
	use (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;Lnet/minecraft/world/phys/BlockHitResult;)Lnet/minecraft/world/InteractionResult; a
	useShapeForLightOcclusion (Lnet/minecraft/world/level/block/state/BlockState;)Z c_
net/minecraft/world/level/block/StructureBlock can
	MODE a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getRenderShape (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/RenderShape; b
	getStateForPlacement (Lnet/minecraft/world/item/context/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	neighborChanged (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Block;Lnet/minecraft/core/BlockPos;Z)V a
	newBlockEntity (Lnet/minecraft/world/level/BlockGetter;)Lnet/minecraft/world/level/block/entity/BlockEntity; a
	setPlacedBy (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/item/ItemStack;)V a
	trigger (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/level/block/entity/StructureBlockEntity;)V a
	use (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;Lnet/minecraft/world/phys/BlockHitResult;)Lnet/minecraft/world/InteractionResult; a
net/minecraft/world/level/block/StructureVoidBlock cao
	SHAPE a
	getPistonPushReaction (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/material/PushReaction; f
	getRenderShape (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/RenderShape; b
	getShadeBrightness (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)F a
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; b
net/minecraft/world/level/block/SugarCaneBlock cap
	AGE a
	SHAPE b
	canSurvive (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;)Z a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; b
	randomTick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)V b
	tick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)V a
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
net/minecraft/world/level/block/SupportType caq
	$VALUES d
	CENTER b
	FULL a
	RIGID c
	isSupporting (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;)Z a
net/minecraft/world/level/block/SweetBerryBushBlock car
	AGE a
	MID_GROWTH_SHAPE c
	SAPLING_SHAPE b
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	entityInside (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/Entity;)V a
	getCloneItemStack (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/item/ItemStack; a
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; b
	isBonemealSuccess (Lnet/minecraft/world/level/Level;Ljava/util/Random;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Z a
	isRandomlyTicking (Lnet/minecraft/world/level/block/state/BlockState;)Z a_
	isValidBonemealTarget (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)Z a
	performBonemeal (Lnet/minecraft/server/level/ServerLevel;Ljava/util/Random;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V a
	randomTick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)V b
	use (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;Lnet/minecraft/world/phys/BlockHitResult;)Lnet/minecraft/world/InteractionResult; a
net/minecraft/world/level/block/TallFlowerBlock cas
	canBeReplaced (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/item/context/BlockPlaceContext;)Z a
	isBonemealSuccess (Lnet/minecraft/world/level/Level;Ljava/util/Random;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Z a
	isValidBonemealTarget (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)Z a
	performBonemeal (Lnet/minecraft/server/level/ServerLevel;Ljava/util/Random;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V a
net/minecraft/world/level/block/TallGrassBlock cat
	SHAPE a
	getOffsetType ()Lnet/minecraft/world/level/block/state/BlockBehaviour$OffsetType; ah_
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; b
	isBonemealSuccess (Lnet/minecraft/world/level/Level;Ljava/util/Random;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Z a
	isValidBonemealTarget (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)Z a
	performBonemeal (Lnet/minecraft/server/level/ServerLevel;Ljava/util/Random;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V a
net/minecraft/world/level/block/TallSeagrass cau
	HALF b
	SHAPE c
	canPlaceLiquid (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/material/Fluid;)Z a
	canSurvive (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;)Z a
	getCloneItemStack (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/item/ItemStack; a
	getFluidState (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/material/FluidState; d
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; b
	getStateForPlacement (Lnet/minecraft/world/item/context/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	mayPlaceOn (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Z c
	placeLiquid (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/material/FluidState;)Z a
net/minecraft/world/level/block/TargetBlock cav
	OUTPUT_POWER a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getRedstoneStrength (Lnet/minecraft/world/phys/BlockHitResult;Lnet/minecraft/world/phys/Vec3;)I a
	getSignal (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;)I a
	isSignalSource (Lnet/minecraft/world/level/block/state/BlockState;)Z b_
	onPlace (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)V b
	onProjectileHit (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/phys/BlockHitResult;Lnet/minecraft/world/entity/projectile/Projectile;)V a
	setOutputPower (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/world/level/block/state/BlockState;ILnet/minecraft/core/BlockPos;I)V a
	tick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)V a
	updateRedstoneOutput (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/phys/BlockHitResult;Lnet/minecraft/world/entity/Entity;)I a
net/minecraft/world/level/block/TntBlock caw
	UNSTABLE a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	dropFromExplosion (Lnet/minecraft/world/level/Explosion;)Z a
	explode (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)V a
	explode (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/LivingEntity;)V a
	neighborChanged (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Block;Lnet/minecraft/core/BlockPos;Z)V a
	onPlace (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)V b
	onProjectileHit (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/phys/BlockHitResult;Lnet/minecraft/world/entity/projectile/Projectile;)V a
	playerWillDestroy (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/entity/player/Player;)V a
	use (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;Lnet/minecraft/world/phys/BlockHitResult;)Lnet/minecraft/world/InteractionResult; a
	wasExploded (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/Explosion;)V a
net/minecraft/world/level/block/TorchBlock cax
	AABB d
	flameParticle e
	animateTick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)V a
	canSurvive (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;)Z a
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; b
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
net/minecraft/world/level/block/TrapDoorBlock cay
	BOTTOM_AABB i
	EAST_OPEN_AABB e
	HALF b
	NORTH_OPEN_AABB h
	OPEN a
	POWERED c
	SOUTH_OPEN_AABB g
	TOP_AABB j
	WATERLOGGED d
	WEST_OPEN_AABB f
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getFluidState (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/material/FluidState; d
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; b
	getStateForPlacement (Lnet/minecraft/world/item/context/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	isPathfindable (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/pathfinder/PathComputationType;)Z a
	neighborChanged (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Block;Lnet/minecraft/core/BlockPos;Z)V a
	playSound (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Z)V a
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
	use (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;Lnet/minecraft/world/phys/BlockHitResult;)Lnet/minecraft/world/InteractionResult; a
net/minecraft/world/level/block/TrappedChestBlock caz
	getDirectSignal (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;)I b
	getOpenChestStat ()Lnet/minecraft/stats/Stat; c
	getSignal (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;)I a
	isSignalSource (Lnet/minecraft/world/level/block/state/BlockState;)Z b_
	newBlockEntity (Lnet/minecraft/world/level/BlockGetter;)Lnet/minecraft/world/level/block/entity/BlockEntity; a
net/minecraft/world/level/block/TripWireBlock cba
	AABB h
	ATTACHED b
	DISARMED c
	EAST e
	NORTH d
	NOT_ATTACHED_AABB i
	POWERED a
	PROPERTY_BY_DIRECTION j
	SOUTH f
	WEST g
	hook k
	checkPressed (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)V a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	entityInside (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/Entity;)V a
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; b
	getStateForPlacement (Lnet/minecraft/world/item/context/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	mirror (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Mirror;)Lnet/minecraft/world/level/block/state/BlockState; a
	onPlace (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)V b
	onRemove (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)V a
	playerWillDestroy (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/entity/player/Player;)V a
	rotate (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Rotation;)Lnet/minecraft/world/level/block/state/BlockState; a
	shouldConnectTo (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;)Z a
	tick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)V a
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
	updateSource (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V a
net/minecraft/world/level/block/TripWireHookBlock cbb
	ATTACHED c
	EAST_AABB g
	FACING a
	NORTH_AABB d
	POWERED b
	SOUTH_AABB e
	WEST_AABB f
	calculateState (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;ZZILnet/minecraft/world/level/block/state/BlockState;)V a
	canSurvive (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;)Z a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getDirectSignal (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;)I b
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; b
	getSignal (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;)I a
	getStateForPlacement (Lnet/minecraft/world/item/context/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	isSignalSource (Lnet/minecraft/world/level/block/state/BlockState;)Z b_
	mirror (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Mirror;)Lnet/minecraft/world/level/block/state/BlockState; a
	notifyNeighbors (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;)V a
	onRemove (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)V a
	playSound (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;ZZZZ)V a
	rotate (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Rotation;)Lnet/minecraft/world/level/block/state/BlockState; a
	setPlacedBy (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/item/ItemStack;)V a
	tick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)V a
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
net/minecraft/world/level/block/TurtleEggBlock cbc
	EGGS b
	HATCH a
	MULTIPLE_EGGS_AABB d
	ONE_EGG_AABB c
	canBeReplaced (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/item/context/BlockPlaceContext;)Z a
	canDestroyEgg (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/Entity;)Z a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	decreaseEggs (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V a
	destroyEgg (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/Entity;I)V a
	fallOn (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/Entity;F)V a
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; b
	getStateForPlacement (Lnet/minecraft/world/item/context/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	isSand (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Z b
	onPlace (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)V b
	onSand (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Z a
	playerDestroy (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/entity/BlockEntity;Lnet/minecraft/world/item/ItemStack;)V a
	randomTick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)V b
	shouldUpdateHatchLevel (Lnet/minecraft/world/level/Level;)Z a
	stepOn (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/Entity;)V a
net/minecraft/world/level/block/TwistingVines cbd
	SHAPE e
	canGrowInto (Lnet/minecraft/world/level/block/state/BlockState;)Z h
	getBlocksToGrowWhenBonemealed (Ljava/util/Random;)I a
	getBodyBlock ()Lnet/minecraft/world/level/block/Block; d
net/minecraft/world/level/block/TwistingVinesPlant cbe
	SHAPE d
	getHeadBlock ()Lnet/minecraft/world/level/block/GrowingPlantHeadBlock; c
net/minecraft/world/level/block/VineBlock cbf
	EAST c
	EAST_AABB i
	NORTH b
	NORTH_AABB j
	PROPERTY_BY_DIRECTION f
	SOUTH d
	SOUTH_AABB k
	UP a
	UP_AABB g
	WEST e
	WEST_AABB h
	shapesCache o
	calculateShape (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/phys/shapes/VoxelShape; h
	canBeReplaced (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/item/context/BlockPlaceContext;)Z a
	canSpread (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Z a
	canSupportAtFace (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;)Z b
	canSurvive (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;)Z a
	copyRandomFaces (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/state/BlockState;Ljava/util/Random;)Lnet/minecraft/world/level/block/state/BlockState; a
	countFaces (Lnet/minecraft/world/level/block/state/BlockState;)I m
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getPropertyForFace (Lnet/minecraft/core/Direction;)Lnet/minecraft/world/level/block/state/properties/BooleanProperty; a
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; b
	getStateForPlacement (Lnet/minecraft/world/item/context/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	getUpdatedState (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; g
	hasFaces (Lnet/minecraft/world/level/block/state/BlockState;)Z l
	hasHorizontalConnection (Lnet/minecraft/world/level/block/state/BlockState;)Z n
	isAcceptableNeighbour (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;)Z a
	mirror (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Mirror;)Lnet/minecraft/world/level/block/state/BlockState; a
	randomTick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)V b
	rotate (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Rotation;)Lnet/minecraft/world/level/block/state/BlockState; a
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
net/minecraft/world/level/block/WallBannerBlock cbg
	FACING a
	SHAPES b
	canSurvive (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;)Z a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getDescriptionId ()Ljava/lang/String; i
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; b
	getStateForPlacement (Lnet/minecraft/world/item/context/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	mirror (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Mirror;)Lnet/minecraft/world/level/block/state/BlockState; a
	rotate (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Rotation;)Lnet/minecraft/world/level/block/state/BlockState; a
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
net/minecraft/world/level/block/WallBlock cbh
	EAST_TEST p
	EAST_WALL b
	NORTH_TEST j
	NORTH_WALL c
	POST_TEST i
	SOUTH_TEST k
	SOUTH_WALL d
	UP a
	WATERLOGGED f
	WEST_TEST o
	WEST_WALL e
	collisionShapeByIndex h
	shapeByIndex g
	applyWallShape (Lnet/minecraft/world/phys/shapes/VoxelShape;Lnet/minecraft/world/level/block/state/properties/WallSide;Lnet/minecraft/world/phys/shapes/VoxelShape;Lnet/minecraft/world/phys/shapes/VoxelShape;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	connectsTo (Lnet/minecraft/world/level/block/state/BlockState;ZLnet/minecraft/core/Direction;)Z a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getCollisionShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; c
	getFluidState (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/material/FluidState; d
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; b
	getStateForPlacement (Lnet/minecraft/world/item/context/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	isConnected (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/state/properties/Property;)Z a
	isCovered (Lnet/minecraft/world/phys/shapes/VoxelShape;Lnet/minecraft/world/phys/shapes/VoxelShape;)Z a
	isPathfindable (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/pathfinder/PathComputationType;)Z a
	makeShapes (FFFFFF)Ljava/util/Map; a
	makeWallState (ZLnet/minecraft/world/phys/shapes/VoxelShape;Lnet/minecraft/world/phys/shapes/VoxelShape;)Lnet/minecraft/world/level/block/state/properties/WallSide; a
	mirror (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Mirror;)Lnet/minecraft/world/level/block/state/BlockState; a
	propagatesSkylightDown (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Z b
	rotate (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Rotation;)Lnet/minecraft/world/level/block/state/BlockState; a
	shouldRaisePost (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/phys/shapes/VoxelShape;)Z a
	sideUpdate (Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;)Lnet/minecraft/world/level/block/state/BlockState; a
	topUpdate (Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/state/BlockState; a
	updateShape (Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;ZZZZ)Lnet/minecraft/world/level/block/state/BlockState; a
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
	updateSides (Lnet/minecraft/world/level/block/state/BlockState;ZZZZLnet/minecraft/world/phys/shapes/VoxelShape;)Lnet/minecraft/world/level/block/state/BlockState; a
net/minecraft/world/level/block/WallSignBlock cbi
	AABBS d
	FACING c
	canSurvive (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;)Z a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getDescriptionId ()Ljava/lang/String; i
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; b
	getStateForPlacement (Lnet/minecraft/world/item/context/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	mirror (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Mirror;)Lnet/minecraft/world/level/block/state/BlockState; a
	rotate (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Rotation;)Lnet/minecraft/world/level/block/state/BlockState; a
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
net/minecraft/world/level/block/WallSkullBlock cbj
	AABBS b
	FACING a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getDescriptionId ()Ljava/lang/String; i
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; b
	getStateForPlacement (Lnet/minecraft/world/item/context/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	mirror (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Mirror;)Lnet/minecraft/world/level/block/state/BlockState; a
	rotate (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Rotation;)Lnet/minecraft/world/level/block/state/BlockState; a
net/minecraft/world/level/block/WallTorchBlock cbk
	AABBS b
	FACING a
	animateTick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)V a
	canSurvive (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;)Z a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getDescriptionId ()Ljava/lang/String; i
	getShape (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/phys/shapes/VoxelShape; h
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; b
	getStateForPlacement (Lnet/minecraft/world/item/context/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	mirror (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Mirror;)Lnet/minecraft/world/level/block/state/BlockState; a
	rotate (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Rotation;)Lnet/minecraft/world/level/block/state/BlockState; a
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
net/minecraft/world/level/block/WaterlilyBlock cbl
	AABB a
	entityInside (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/Entity;)V a
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; b
	mayPlaceOn (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Z c
net/minecraft/world/level/block/WebBlock cbm
	entityInside (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/Entity;)V a
net/minecraft/world/level/block/WeepingVines cbn
	SHAPE e
	canGrowInto (Lnet/minecraft/world/level/block/state/BlockState;)Z h
	getBlocksToGrowWhenBonemealed (Ljava/util/Random;)I a
	getBodyBlock ()Lnet/minecraft/world/level/block/Block; d
net/minecraft/world/level/block/WeepingVinesPlant cbo
	SHAPE d
	getHeadBlock ()Lnet/minecraft/world/level/block/GrowingPlantHeadBlock; c
net/minecraft/world/level/block/WeightedPressurePlateBlock cbp
	POWER d
	maxWeight e
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getPressedTime ()I c
	getSignalForState (Lnet/minecraft/world/level/block/state/BlockState;)I g
	getSignalStrength (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)I b
	playOffSound (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;)V b
	playOnSound (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;)V a
	setSignalForState (Lnet/minecraft/world/level/block/state/BlockState;I)Lnet/minecraft/world/level/block/state/BlockState; a
net/minecraft/world/level/block/WetSpongeBlock cbq
	animateTick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)V a
	onPlace (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)V b
net/minecraft/world/level/block/WitherRoseBlock cbr
	animateTick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)V a
	entityInside (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/Entity;)V a
	mayPlaceOn (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Z c
net/minecraft/world/level/block/WitherSkullBlock cbs
	witherPatternBase d
	witherPatternFull c
	canSpawnMob (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/item/ItemStack;)Z b
	checkSpawn (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/entity/SkullBlockEntity;)V a
	getOrCreateWitherBase ()Lnet/minecraft/world/level/block/state/pattern/BlockPattern; d
	getOrCreateWitherFull ()Lnet/minecraft/world/level/block/state/pattern/BlockPattern; c
	setPlacedBy (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/item/ItemStack;)V a
net/minecraft/world/level/block/WitherWallSkullBlock cbt
	setPlacedBy (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/item/ItemStack;)V a
net/minecraft/world/level/block/WoodButtonBlock cbu
	getSound (Z)Lnet/minecraft/sounds/SoundEvent; a
net/minecraft/world/level/block/WoolCarpetBlock cbv
	SHAPE a
	color b
	canSurvive (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;)Z a
	getColor ()Lnet/minecraft/world/item/DyeColor; c
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; b
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
net/minecraft/world/level/block/entity/AbstractFurnaceBlockEntity cbw
	SLOTS_FOR_DOWN h
	SLOTS_FOR_SIDES i
	SLOTS_FOR_UP g
	cookingProgress l
	cookingTotalTime m
	dataAccess b
	items a
	litDuration k
	litTime j
	recipeType c
	recipesUsed n
	add (Ljava/util/Map;Lnet/minecraft/tags/Tag;I)V a
	add (Ljava/util/Map;Lnet/minecraft/world/level/ItemLike;I)V a
	awardUsedRecipes (Lnet/minecraft/world/entity/player/Player;)V b
	awardUsedRecipesAndPopExperience (Lnet/minecraft/world/entity/player/Player;)V d
	burn (Lnet/minecraft/world/item/crafting/Recipe;)V c
	canBurn (Lnet/minecraft/world/item/crafting/Recipe;)Z b
	canPlaceItem (ILnet/minecraft/world/item/ItemStack;)Z b
	canPlaceItemThroughFace (ILnet/minecraft/world/item/ItemStack;Lnet/minecraft/core/Direction;)Z a
	canTakeItemThroughFace (ILnet/minecraft/world/item/ItemStack;Lnet/minecraft/core/Direction;)Z b
	clearContent ()V Y_
	createExperience (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/phys/Vec3;IF)V a
	fillStackedContents (Lnet/minecraft/world/entity/player/StackedContents;)V a
	getBurnDuration (Lnet/minecraft/world/item/ItemStack;)I a
	getContainerSize ()I Z_
	getFuel ()Ljava/util/Map; f
	getItem (I)Lnet/minecraft/world/item/ItemStack; a
	getRecipeUsed ()Lnet/minecraft/world/item/crafting/Recipe; ak_
	getRecipesToAwardAndPopExperience (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/phys/Vec3;)Ljava/util/List; a
	getSlotsForFace (Lnet/minecraft/core/Direction;)[I a
	getTotalCookTime ()I h
	isEmpty ()Z c
	isFuel (Lnet/minecraft/world/item/ItemStack;)Z b
	isLit ()Z j
	isNeverAFurnaceFuel (Lnet/minecraft/world/item/Item;)Z b
	load (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/nbt/CompoundTag;)V a
	removeItem (II)Lnet/minecraft/world/item/ItemStack; a
	removeItemNoUpdate (I)Lnet/minecraft/world/item/ItemStack; b
	save (Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/nbt/CompoundTag; a
	setItem (ILnet/minecraft/world/item/ItemStack;)V a
	setRecipeUsed (Lnet/minecraft/world/item/crafting/Recipe;)V a
	stillValid (Lnet/minecraft/world/entity/player/Player;)Z a
	tick ()V aj_
net/minecraft/world/level/block/entity/BannerBlockEntity cbx
	baseColor b
	itemPatterns c
	name a
	patterns h
	receivedData g
	createPatterns (Lnet/minecraft/world/item/DyeColor;Lnet/minecraft/nbt/ListTag;)Ljava/util/List; a
	fromItem (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/item/DyeColor;)V a
	getBaseColor (Ljava/util/function/Supplier;)Lnet/minecraft/world/item/DyeColor; a
	getCustomName ()Lnet/minecraft/network/chat/Component; S
	getItem (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/item/ItemStack; a
	getItemPatterns (Lnet/minecraft/world/item/ItemStack;)Lnet/minecraft/nbt/ListTag; a
	getName ()Lnet/minecraft/network/chat/Component; Q
	getPatternCount (Lnet/minecraft/world/item/ItemStack;)I b
	getPatterns ()Ljava/util/List; c
	getUpdatePacket ()Lnet/minecraft/network/protocol/game/ClientboundBlockEntityDataPacket; a
	getUpdateTag ()Lnet/minecraft/nbt/CompoundTag; b
	load (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/nbt/CompoundTag;)V a
	removeLastPattern (Lnet/minecraft/world/item/ItemStack;)V c
	save (Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/nbt/CompoundTag; a
	setCustomName (Lnet/minecraft/network/chat/Component;)V a
net/minecraft/world/level/block/entity/BannerPattern cby
	$VALUES W
	AVAILABLE_PATTERNS R
	BASE a
	BORDER E
	BRICKS I
	CIRCLE_MIDDLE y
	COUNT P
	CREEPER K
	CROSS o
	CURLY_BORDER F
	DIAGONAL_LEFT u
	DIAGONAL_LEFT_MIRROR w
	DIAGONAL_RIGHT v
	DIAGONAL_RIGHT_MIRROR x
	FLOWER M
	GLOBE J
	GRADIENT G
	GRADIENT_UP H
	HALF_HORIZONTAL B
	HALF_HORIZONTAL_MIRROR D
	HALF_VERTICAL A
	HALF_VERTICAL_MIRROR C
	MOJANG N
	PATTERN_ITEM_COUNT Q
	PIGLIN O
	RHOMBUS_MIDDLE z
	SKULL L
	SQUARE_BOTTOM_LEFT b
	SQUARE_BOTTOM_RIGHT c
	SQUARE_TOP_LEFT d
	SQUARE_TOP_RIGHT e
	STRAIGHT_CROSS p
	STRIPE_BOTTOM f
	STRIPE_CENTER j
	STRIPE_DOWNLEFT m
	STRIPE_DOWNRIGHT l
	STRIPE_LEFT h
	STRIPE_MIDDLE k
	STRIPE_RIGHT i
	STRIPE_SMALL n
	STRIPE_TOP g
	TRIANGLES_BOTTOM s
	TRIANGLES_TOP t
	TRIANGLE_BOTTOM q
	TRIANGLE_TOP r
	VALUES S
	filename U
	hasPatternItem T
	hashname V
	byHash (Ljava/lang/String;)Lnet/minecraft/world/level/block/entity/BannerPattern; a
	getFilename ()Ljava/lang/String; a
	getHashname ()Ljava/lang/String; b
	location (Z)Lnet/minecraft/resources/ResourceLocation; a
net/minecraft/world/level/block/entity/BannerPattern$Builder cby$a
	patterns a
	addPattern (Lnet/minecraft/world/level/block/entity/BannerPattern;Lnet/minecraft/world/item/DyeColor;)Lnet/minecraft/world/level/block/entity/BannerPattern$Builder; a
	toListTag ()Lnet/minecraft/nbt/ListTag; a
net/minecraft/world/level/block/entity/BarrelBlockEntity cbz
	items a
	openCount b
	createMenu (ILnet/minecraft/world/entity/player/Inventory;)Lnet/minecraft/world/inventory/AbstractContainerMenu; a
	getContainerSize ()I Z_
	getDefaultName ()Lnet/minecraft/network/chat/Component; g
	getItems ()Lnet/minecraft/core/NonNullList; f
	load (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/nbt/CompoundTag;)V a
	playSound (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/sounds/SoundEvent;)V a
	recheckOpen ()V h
	save (Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/nbt/CompoundTag; a
	scheduleRecheck ()V j
	setItems (Lnet/minecraft/core/NonNullList;)V a
	startOpen (Lnet/minecraft/world/entity/player/Player;)V c_
	stopOpen (Lnet/minecraft/world/entity/player/Player;)V b_
	updateBlockState (Lnet/minecraft/world/level/block/state/BlockState;Z)V a
net/minecraft/world/level/block/entity/BaseContainerBlockEntity cca
	lockKey a
	name b
	canOpen (Lnet/minecraft/world/entity/player/Player;)Z e
	canUnlock (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/LockCode;Lnet/minecraft/network/chat/Component;)Z a
	createMenu (ILnet/minecraft/world/entity/player/Inventory;)Lnet/minecraft/world/inventory/AbstractContainerMenu; a
	getCustomName ()Lnet/minecraft/network/chat/Component; S
	getDefaultName ()Lnet/minecraft/network/chat/Component; g
	getDisplayName ()Lnet/minecraft/network/chat/Component; d
	getName ()Lnet/minecraft/network/chat/Component; Q
	load (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/nbt/CompoundTag;)V a
	save (Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/nbt/CompoundTag; a
	setCustomName (Lnet/minecraft/network/chat/Component;)V a
net/minecraft/world/level/block/entity/BeaconBlockEntity ccb
	BEACON_EFFECTS a
	VALID_EFFECTS b
	beamSections c
	checkingBeamSections g
	dataAccess n
	lastCheckY i
	levels h
	lockKey m
	name l
	primaryPower j
	secondaryPower k
	applyEffects ()V j
	getBeamSections ()Ljava/util/List; f
	getDisplayName ()Lnet/minecraft/network/chat/Component; d
	getLevels ()I h
	getUpdatePacket ()Lnet/minecraft/network/protocol/game/ClientboundBlockEntityDataPacket; a
	getUpdateTag ()Lnet/minecraft/nbt/CompoundTag; b
	getValidEffectById (I)Lnet/minecraft/world/effect/MobEffect; b
	getViewDistance ()D i
	load (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/nbt/CompoundTag;)V a
	playSound (Lnet/minecraft/sounds/SoundEvent;)V a
	save (Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/nbt/CompoundTag; a
	setCustomName (Lnet/minecraft/network/chat/Component;)V a
	setRemoved ()V al_
	tick ()V aj_
	updateBase (III)V a
net/minecraft/world/level/block/entity/BeaconBlockEntity$BeaconBeamSection ccb$a
	color a
	height b
	getColor ()[F b
	getHeight ()I c
	increaseHeight ()V a
net/minecraft/world/level/block/entity/BedBlockEntity ccc
	color a
	getColor ()Lnet/minecraft/world/item/DyeColor; d
	getUpdatePacket ()Lnet/minecraft/network/protocol/game/ClientboundBlockEntityDataPacket; a
	setColor (Lnet/minecraft/world/item/DyeColor;)V a
net/minecraft/world/level/block/entity/BeehiveBlockEntity ccd
	savedFlowerPos b
	stored a
	addOccupant (Lnet/minecraft/world/entity/Entity;Z)V a
	addOccupantWithPresetTicks (Lnet/minecraft/world/entity/Entity;ZI)V a
	emptyAllLivingFromHive (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/entity/BeehiveBlockEntity$BeeReleaseStatus;)V a
	getHoneyLevel (Lnet/minecraft/world/level/block/state/BlockState;)I a
	getOccupantCount ()I j
	hasSavedFlowerPos ()Z x
	isEmpty ()Z f
	isFireNearby ()Z d
	isFull ()Z h
	isSedated ()Z k
	load (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/nbt/CompoundTag;)V a
	releaseAllOccupants (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/entity/BeehiveBlockEntity$BeeReleaseStatus;)Ljava/util/List; a
	releaseOccupant (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/entity/BeehiveBlockEntity$BeeData;Ljava/util/List;Lnet/minecraft/world/level/block/entity/BeehiveBlockEntity$BeeReleaseStatus;)Z a
	save (Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/nbt/CompoundTag; a
	sendDebugPackets ()V l
	setBeeReleaseData (ILnet/minecraft/world/entity/animal/Bee;)V a
	setChanged ()V X_
	tick ()V aj_
	tickOccupants ()V y
	writeBees ()Lnet/minecraft/nbt/ListTag; m
net/minecraft/world/level/block/entity/BeehiveBlockEntity$BeeData ccd$a
	entityData a
	minOccupationTicks c
	ticksInHive b
net/minecraft/world/level/block/entity/BeehiveBlockEntity$BeeReleaseStatus ccd$b
	$VALUES d
	BEE_RELEASED b
	EMERGENCY c
	HONEY_DELIVERED a
net/minecraft/world/level/block/entity/BellBlockEntity cce
	clickDirection c
	lastRingTimestamp g
	nearbyEntities h
	resonating i
	resonationTicks j
	shaking b
	ticks a
	areRaidersNearby ()Z h
	glow (Lnet/minecraft/world/entity/LivingEntity;)V b
	isRaiderWithinRange (Lnet/minecraft/world/entity/LivingEntity;)Z a
	makeRaidersGlow (Lnet/minecraft/world/level/Level;)V a
	onHit (Lnet/minecraft/core/Direction;)V a
	playResonateSound ()V d
	showBellParticles (Lnet/minecraft/world/level/Level;)V b
	tick ()V aj_
	triggerEvent (II)Z a_
	updateEntities ()V f
net/minecraft/world/level/block/entity/BlastFurnaceBlockEntity ccf
	createMenu (ILnet/minecraft/world/entity/player/Inventory;)Lnet/minecraft/world/inventory/AbstractContainerMenu; a
	getBurnDuration (Lnet/minecraft/world/item/ItemStack;)I a
	getDefaultName ()Lnet/minecraft/network/chat/Component; g
net/minecraft/world/level/block/entity/BlockEntity ccg
	LOGGER a
	blockState c
	hasLoggedInvalidStateBefore g
	level d
	remove f
	type b
	worldPosition e
	clearCache ()V s
	clearRemoved ()V r
	fillCrashReportCategory (Lnet/minecraft/CrashReportCategory;)V a
	getBlockPos ()Lnet/minecraft/core/BlockPos; o
	getBlockState ()Lnet/minecraft/world/level/block/state/BlockState; p
	getLevel ()Lnet/minecraft/world/level/Level; v
	getType ()Lnet/minecraft/world/level/block/entity/BlockEntityType; u
	getUpdatePacket ()Lnet/minecraft/network/protocol/game/ClientboundBlockEntityDataPacket; a
	getUpdateTag ()Lnet/minecraft/nbt/CompoundTag; b
	getViewDistance ()D i
	hasLevel ()Z n
	isRemoved ()Z q
	load (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/nbt/CompoundTag;)V a
	loadStatic (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/world/level/block/entity/BlockEntity; b
	logInvalidState ()V w
	mirror (Lnet/minecraft/world/level/block/Mirror;)V a
	onlyOpCanSetNbt ()Z t
	rotate (Lnet/minecraft/world/level/block/Rotation;)V a
	save (Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/nbt/CompoundTag; a
	saveMetadata (Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/nbt/CompoundTag; b
	setChanged ()V X_
	setLevelAndPosition (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)V a
	setPosition (Lnet/minecraft/core/BlockPos;)V a
	setRemoved ()V al_
	triggerEvent (II)Z a_
net/minecraft/world/level/block/entity/BlockEntityType cch
	BANNER s
	BARREL z
	BEACON n
	BED x
	BEEHIVE G
	BELL D
	BLAST_FURNACE B
	BREWING_STAND k
	CAMPFIRE F
	CHEST b
	COMMAND_BLOCK v
	COMPARATOR r
	CONDUIT y
	DAYLIGHT_DETECTOR p
	DISPENSER f
	DROPPER g
	ENCHANTING_TABLE l
	ENDER_CHEST d
	END_GATEWAY u
	END_PORTAL m
	FURNACE a
	HOPPER q
	JIGSAW E
	JUKEBOX e
	LECTERN C
	LOGGER H
	MOB_SPAWNER i
	PISTON j
	SHULKER_BOX w
	SIGN h
	SKULL o
	SMOKER A
	STRUCTURE_BLOCK t
	TRAPPED_CHEST c
	dataType K
	factory I
	validBlocks J
	create ()Lnet/minecraft/world/level/block/entity/BlockEntity; a
	getBlockEntity (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/entity/BlockEntity; a
	getKey (Lnet/minecraft/world/level/block/entity/BlockEntityType;)Lnet/minecraft/resources/ResourceLocation; a
	isValid (Lnet/minecraft/world/level/block/Block;)Z a
	register (Ljava/lang/String;Lnet/minecraft/world/level/block/entity/BlockEntityType$Builder;)Lnet/minecraft/world/level/block/entity/BlockEntityType; a
net/minecraft/world/level/block/entity/BlockEntityType$Builder cch$a
	factory a
	validBlocks b
	build (Lcom/mojang/datafixers/types/Type;)Lnet/minecraft/world/level/block/entity/BlockEntityType; a
	of (Ljava/util/function/Supplier;[Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/world/level/block/entity/BlockEntityType$Builder; a
net/minecraft/world/level/block/entity/BrewingStandBlockEntity cci
	SLOTS_FOR_DOWN c
	SLOTS_FOR_SIDES g
	SLOTS_FOR_UP b
	brewTime i
	dataAccess a
	fuel l
	ingredient k
	items h
	lastPotionCount j
	canPlaceItem (ILnet/minecraft/world/item/ItemStack;)Z b
	canPlaceItemThroughFace (ILnet/minecraft/world/item/ItemStack;Lnet/minecraft/core/Direction;)Z a
	canTakeItemThroughFace (ILnet/minecraft/world/item/ItemStack;Lnet/minecraft/core/Direction;)Z b
	clearContent ()V Y_
	createMenu (ILnet/minecraft/world/entity/player/Inventory;)Lnet/minecraft/world/inventory/AbstractContainerMenu; a
	doBrew ()V j
	getContainerSize ()I Z_
	getDefaultName ()Lnet/minecraft/network/chat/Component; g
	getItem (I)Lnet/minecraft/world/item/ItemStack; a
	getPotionBits ()[Z f
	getSlotsForFace (Lnet/minecraft/core/Direction;)[I a
	isBrewable ()Z h
	isEmpty ()Z c
	load (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/nbt/CompoundTag;)V a
	removeItem (II)Lnet/minecraft/world/item/ItemStack; a
	removeItemNoUpdate (I)Lnet/minecraft/world/item/ItemStack; b
	save (Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/nbt/CompoundTag; a
	setItem (ILnet/minecraft/world/item/ItemStack;)V a
	stillValid (Lnet/minecraft/world/entity/player/Player;)Z a
	tick ()V aj_
net/minecraft/world/level/block/entity/CampfireBlockEntity ccj
	cookingProgress b
	cookingTime c
	items a
	clearContent ()V Y_
	cook ()V h
	dowse ()V f
	getCookableRecipe (Lnet/minecraft/world/item/ItemStack;)Ljava/util/Optional; a
	getItems ()Lnet/minecraft/core/NonNullList; d
	getUpdatePacket ()Lnet/minecraft/network/protocol/game/ClientboundBlockEntityDataPacket; a
	getUpdateTag ()Lnet/minecraft/nbt/CompoundTag; b
	load (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/nbt/CompoundTag;)V a
	makeParticles ()V j
	markUpdated ()V k
	placeFood (Lnet/minecraft/world/item/ItemStack;I)Z a
	save (Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/nbt/CompoundTag; a
	saveMetadataAndItems (Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/nbt/CompoundTag; b
	tick ()V aj_
net/minecraft/world/level/block/entity/ChestBlockEntity cck
	items i
	oOpenness b
	openCount c
	openness a
	tickInterval j
	createMenu (ILnet/minecraft/world/entity/player/Inventory;)Lnet/minecraft/world/inventory/AbstractContainerMenu; a
	getContainerSize ()I Z_
	getDefaultName ()Lnet/minecraft/network/chat/Component; g
	getItems ()Lnet/minecraft/core/NonNullList; f
	getOpenCount (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)I a
	getOpenCount (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/level/block/entity/BaseContainerBlockEntity;III)I a
	getOpenCount (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/level/block/entity/BaseContainerBlockEntity;IIIII)I a
	getOpenNess (F)F a
	load (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/nbt/CompoundTag;)V a
	playSound (Lnet/minecraft/sounds/SoundEvent;)V a
	save (Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/nbt/CompoundTag; a
	setItems (Lnet/minecraft/core/NonNullList;)V a
	signalOpenCount ()V h
	startOpen (Lnet/minecraft/world/entity/player/Player;)V c_
	stopOpen (Lnet/minecraft/world/entity/player/Player;)V b_
	swapContents (Lnet/minecraft/world/level/block/entity/ChestBlockEntity;Lnet/minecraft/world/level/block/entity/ChestBlockEntity;)V a
	tick ()V aj_
	triggerEvent (II)Z a_
net/minecraft/world/level/block/entity/CommandBlockEntity ccl
	auto b
	commandBlock h
	conditionMet c
	powered a
	sendToClient g
	clearRemoved ()V r
	getCommandBlock ()Lnet/minecraft/world/level/BaseCommandBlock; d
	getMode ()Lnet/minecraft/world/level/block/entity/CommandBlockEntity$Mode; m
	getUpdatePacket ()Lnet/minecraft/network/protocol/game/ClientboundBlockEntityDataPacket; a
	isAutomatic ()Z g
	isConditional ()Z x
	isPowered ()Z f
	isSendToClient ()Z l
	load (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/nbt/CompoundTag;)V a
	markConditionMet ()Z k
	onModeSwitch ()V h
	onlyOpCanSetNbt ()Z t
	save (Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/nbt/CompoundTag; a
	scheduleTick ()V y
	setAutomatic (Z)V b
	setPowered (Z)V a
	setSendToClient (Z)V c
	wasConditionMet ()Z j
net/minecraft/world/level/block/entity/CommandBlockEntity$Mode ccl$a
	$VALUES d
	AUTO b
	REDSTONE c
	SEQUENCE a
net/minecraft/world/level/block/entity/ComparatorBlockEntity ccm
	output a
	getOutputSignal ()I d
	load (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/nbt/CompoundTag;)V a
	save (Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/nbt/CompoundTag; a
	setOutputSignal (I)V a
net/minecraft/world/level/block/entity/ConduitBlockEntity ccn
	VALID_BLOCKS b
	activeRotation c
	destroyTarget j
	destroyTargetUUID k
	effectBlocks i
	isActive g
	isHunting h
	nextAmbientSoundActivation l
	tickCount a
	animationTick ()V y
	applyEffects ()V j
	findDestroyTarget ()Lnet/minecraft/world/entity/LivingEntity; x
	getActiveRotation (F)F a
	getDestroyRangeAABB ()Lnet/minecraft/world/phys/AABB; m
	getUpdatePacket ()Lnet/minecraft/network/protocol/game/ClientboundBlockEntityDataPacket; a
	getUpdateTag ()Lnet/minecraft/nbt/CompoundTag; b
	isActive ()Z d
	isHunting ()Z f
	load (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/nbt/CompoundTag;)V a
	playSound (Lnet/minecraft/sounds/SoundEvent;)V a
	save (Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/nbt/CompoundTag; a
	setActive (Z)V a
	setHunting (Z)V b
	tick ()V aj_
	updateClientTarget ()V l
	updateDestroyTarget ()V k
	updateShape ()Z h
net/minecraft/world/level/block/entity/DaylightDetectorBlockEntity cco
	tick ()V aj_
net/minecraft/world/level/block/entity/DispenserBlockEntity ccp
	RANDOM a
	items b
	addItem (Lnet/minecraft/world/item/ItemStack;)I a
	createMenu (ILnet/minecraft/world/entity/player/Inventory;)Lnet/minecraft/world/inventory/AbstractContainerMenu; a
	getContainerSize ()I Z_
	getDefaultName ()Lnet/minecraft/network/chat/Component; g
	getItems ()Lnet/minecraft/core/NonNullList; f
	getRandomSlot ()I h
	load (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/nbt/CompoundTag;)V a
	save (Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/nbt/CompoundTag; a
	setItems (Lnet/minecraft/core/NonNullList;)V a
net/minecraft/world/level/block/entity/DropperBlockEntity ccq
	getDefaultName ()Lnet/minecraft/network/chat/Component; g
net/minecraft/world/level/block/entity/EnchantmentTableBlockEntity ccr
	RANDOM n
	flip b
	flipA h
	flipT g
	name o
	oFlip c
	oOpen j
	oRot l
	open i
	rot k
	tRot m
	time a
	getCustomName ()Lnet/minecraft/network/chat/Component; S
	getName ()Lnet/minecraft/network/chat/Component; Q
	load (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/nbt/CompoundTag;)V a
	save (Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/nbt/CompoundTag; a
	setCustomName (Lnet/minecraft/network/chat/Component;)V a
	tick ()V aj_
net/minecraft/world/level/block/entity/EnderChestBlockEntity ccs
	oOpenness b
	openCount c
	openness a
	tickInterval g
	getOpenNess (F)F a
	setRemoved ()V al_
	startOpen ()V d
	stillValid (Lnet/minecraft/world/entity/player/Player;)Z a
	stopOpen ()V f
	tick ()V aj_
	triggerEvent (II)Z a_
net/minecraft/world/level/block/entity/FurnaceBlockEntity cct
	createMenu (ILnet/minecraft/world/entity/player/Inventory;)Lnet/minecraft/world/inventory/AbstractContainerMenu; a
	getDefaultName ()Lnet/minecraft/network/chat/Component; g
net/minecraft/world/level/block/entity/Hopper ccu
	ABOVE b
	INSIDE a
	SUCK c
	getLevel ()Lnet/minecraft/world/level/Level; v
	getLevelX ()D x
	getLevelY ()D z
	getLevelZ ()D A
	getSuckShape ()Lnet/minecraft/world/phys/shapes/VoxelShape; aa_
net/minecraft/world/level/block/entity/HopperBlockEntity ccv
	cooldownTime j
	items i
	tickedGameTime k
	addItem (Lnet/minecraft/world/Container;Lnet/minecraft/world/Container;Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/core/Direction;)Lnet/minecraft/world/item/ItemStack; a
	addItem (Lnet/minecraft/world/Container;Lnet/minecraft/world/entity/item/ItemEntity;)Z a
	canMergeItems (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/item/ItemStack;)Z a
	canPlaceItemInContainer (Lnet/minecraft/world/Container;Lnet/minecraft/world/item/ItemStack;ILnet/minecraft/core/Direction;)Z a
	canTakeItemFromContainer (Lnet/minecraft/world/Container;Lnet/minecraft/world/item/ItemStack;ILnet/minecraft/core/Direction;)Z b
	createMenu (ILnet/minecraft/world/entity/player/Inventory;)Lnet/minecraft/world/inventory/AbstractContainerMenu; a
	ejectItems ()Z k
	entityInside (Lnet/minecraft/world/entity/Entity;)V a
	getAttachedContainer ()Lnet/minecraft/world/Container; l
	getContainerAt (Lnet/minecraft/world/level/Level;DDD)Lnet/minecraft/world/Container; a
	getContainerAt (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/Container; b
	getContainerSize ()I Z_
	getDefaultName ()Lnet/minecraft/network/chat/Component; g
	getItems ()Lnet/minecraft/core/NonNullList; f
	getItemsAtAndAbove (Lnet/minecraft/world/level/block/entity/Hopper;)Ljava/util/List; c
	getLevelX ()D x
	getLevelY ()D z
	getLevelZ ()D A
	getSlots (Lnet/minecraft/world/Container;Lnet/minecraft/core/Direction;)Ljava/util/stream/IntStream; a
	getSourceContainer (Lnet/minecraft/world/level/block/entity/Hopper;)Lnet/minecraft/world/Container; b
	inventoryFull ()Z j
	isEmptyContainer (Lnet/minecraft/world/Container;Lnet/minecraft/core/Direction;)Z c
	isFullContainer (Lnet/minecraft/world/Container;Lnet/minecraft/core/Direction;)Z b
	isOnCooldown ()Z m
	isOnCustomCooldown ()Z y
	load (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/nbt/CompoundTag;)V a
	removeItem (II)Lnet/minecraft/world/item/ItemStack; a
	save (Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/nbt/CompoundTag; a
	setCooldown (I)V c
	setItem (ILnet/minecraft/world/item/ItemStack;)V a
	setItems (Lnet/minecraft/core/NonNullList;)V a
	suckInItems (Lnet/minecraft/world/level/block/entity/Hopper;)Z a
	tick ()V aj_
	tryMoveInItem (Lnet/minecraft/world/Container;Lnet/minecraft/world/Container;Lnet/minecraft/world/item/ItemStack;ILnet/minecraft/core/Direction;)Lnet/minecraft/world/item/ItemStack; a
	tryMoveItems (Ljava/util/function/Supplier;)Z a
	tryTakeInItemFromSlot (Lnet/minecraft/world/level/block/entity/Hopper;Lnet/minecraft/world/Container;ILnet/minecraft/core/Direction;)Z a
net/minecraft/world/level/block/entity/JigsawBlockEntity ccw
	finalState h
	joint g
	name a
	pool c
	target b
	generate (Lnet/minecraft/server/level/ServerLevel;IZ)V a
	getFinalState ()Ljava/lang/String; h
	getJoint ()Lnet/minecraft/world/level/block/entity/JigsawBlockEntity$JointType; j
	getName ()Lnet/minecraft/resources/ResourceLocation; d
	getPool ()Lnet/minecraft/resources/ResourceLocation; g
	getTarget ()Lnet/minecraft/resources/ResourceLocation; f
	getUpdatePacket ()Lnet/minecraft/network/protocol/game/ClientboundBlockEntityDataPacket; a
	getUpdateTag ()Lnet/minecraft/nbt/CompoundTag; b
	load (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/nbt/CompoundTag;)V a
	save (Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/nbt/CompoundTag; a
	setFinalState (Ljava/lang/String;)V a
	setJoint (Lnet/minecraft/world/level/block/entity/JigsawBlockEntity$JointType;)V a
	setName (Lnet/minecraft/resources/ResourceLocation;)V a
	setPool (Lnet/minecraft/resources/ResourceLocation;)V c
	setTarget (Lnet/minecraft/resources/ResourceLocation;)V b
net/minecraft/world/level/block/entity/JigsawBlockEntity$JointType ccw$a
	$VALUES d
	ALIGNED b
	ROLLABLE a
	name c
	byName (Ljava/lang/String;)Ljava/util/Optional; a
	getSerializedName ()Ljava/lang/String; a
net/minecraft/world/level/block/entity/JukeboxBlockEntity ccx
	record a
	clearContent ()V Y_
	getRecord ()Lnet/minecraft/world/item/ItemStack; d
	load (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/nbt/CompoundTag;)V a
	save (Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/nbt/CompoundTag; a
	setRecord (Lnet/minecraft/world/item/ItemStack;)V a
net/minecraft/world/level/block/entity/LecternBlockEntity ccy
	book c
	bookAccess a
	dataAccess b
	page g
	pageCount h
	clearContent ()V Y_
	createCommandSourceStack (Lnet/minecraft/world/entity/player/Player;)Lnet/minecraft/commands/CommandSourceStack; a
	getBook ()Lnet/minecraft/world/item/ItemStack; f
	getDisplayName ()Lnet/minecraft/network/chat/Component; d
	getPage ()I h
	getRedstoneSignal ()I j
	hasBook ()Z g
	load (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/nbt/CompoundTag;)V a
	onBookItemRemove ()V k
	onlyOpCanSetNbt ()Z t
	resolveBook (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/entity/player/Player;)Lnet/minecraft/world/item/ItemStack; b
	save (Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/nbt/CompoundTag; a
	setBook (Lnet/minecraft/world/item/ItemStack;)V a
	setBook (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/entity/player/Player;)V a
	setPage (I)V a
net/minecraft/world/level/block/entity/LidBlockEntity ccz
	getOpenNess (F)F a
net/minecraft/world/level/block/entity/RandomizableContainerBlockEntity cda
	lootTable g
	lootTableSeed h
	canOpen (Lnet/minecraft/world/entity/player/Player;)Z e
	clearContent ()V Y_
	getItem (I)Lnet/minecraft/world/item/ItemStack; a
	getItems ()Lnet/minecraft/core/NonNullList; f
	isEmpty ()Z c
	removeItem (II)Lnet/minecraft/world/item/ItemStack; a
	removeItemNoUpdate (I)Lnet/minecraft/world/item/ItemStack; b
	setItem (ILnet/minecraft/world/item/ItemStack;)V a
	setItems (Lnet/minecraft/core/NonNullList;)V a
	setLootTable (Lnet/minecraft/resources/ResourceLocation;J)V a
	setLootTable (Lnet/minecraft/world/level/BlockGetter;Ljava/util/Random;Lnet/minecraft/core/BlockPos;Lnet/minecraft/resources/ResourceLocation;)V a
	stillValid (Lnet/minecraft/world/entity/player/Player;)Z a
	tryLoadLootTable (Lnet/minecraft/nbt/CompoundTag;)Z b
	trySaveLootTable (Lnet/minecraft/nbt/CompoundTag;)Z c
	unpackLootTable (Lnet/minecraft/world/entity/player/Player;)V d
net/minecraft/world/level/block/entity/ShulkerBoxBlockEntity cdb
	SLOTS a
	animationStatus i
	color l
	itemStacks b
	loadColorFromBlock m
	openCount c
	progress j
	progressOld k
	canPlaceItemThroughFace (ILnet/minecraft/world/item/ItemStack;Lnet/minecraft/core/Direction;)Z a
	canTakeItemThroughFace (ILnet/minecraft/world/item/ItemStack;Lnet/minecraft/core/Direction;)Z b
	createMenu (ILnet/minecraft/world/entity/player/Inventory;)Lnet/minecraft/world/inventory/AbstractContainerMenu; a
	doNeighborUpdates ()V x
	getAnimationStatus ()Lnet/minecraft/world/level/block/entity/ShulkerBoxBlockEntity$AnimationStatus; j
	getBoundingBox (Lnet/minecraft/core/Direction;)Lnet/minecraft/world/phys/AABB; b
	getBoundingBox (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/phys/AABB; a
	getColor ()Lnet/minecraft/world/item/DyeColor; k
	getContainerSize ()I Z_
	getDefaultName ()Lnet/minecraft/network/chat/Component; g
	getItems ()Lnet/minecraft/core/NonNullList; f
	getProgress (F)F a
	getSlotsForFace (Lnet/minecraft/core/Direction;)[I a
	getTopBoundingBox (Lnet/minecraft/core/Direction;)Lnet/minecraft/world/phys/AABB; c
	isClosed ()Z l
	load (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/nbt/CompoundTag;)V a
	loadFromTag (Lnet/minecraft/nbt/CompoundTag;)V d
	moveCollidedEntities ()V m
	save (Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/nbt/CompoundTag; a
	saveToTag (Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/nbt/CompoundTag; e
	setItems (Lnet/minecraft/core/NonNullList;)V a
	startOpen (Lnet/minecraft/world/entity/player/Player;)V c_
	stopOpen (Lnet/minecraft/world/entity/player/Player;)V b_
	tick ()V aj_
	triggerEvent (II)Z a_
	updateAnimation ()V h
net/minecraft/world/level/block/entity/ShulkerBoxBlockEntity$AnimationStatus cdb$a
	$VALUES e
	CLOSED a
	CLOSING d
	OPENED c
	OPENING b
net/minecraft/world/level/block/entity/SignBlockEntity cdc
	color h
	isEditable b
	messages a
	playerWhoMayEdit c
	renderMessages g
	createCommandSourceStack (Lnet/minecraft/server/level/ServerPlayer;)Lnet/minecraft/commands/CommandSourceStack; a
	executeClickCommands (Lnet/minecraft/world/entity/player/Player;)Z b
	getColor ()Lnet/minecraft/world/item/DyeColor; g
	getMessage (I)Lnet/minecraft/network/chat/Component; a
	getPlayerWhoMayEdit ()Lnet/minecraft/world/entity/player/Player; f
	getRenderMessage (ILjava/util/function/Function;)Lnet/minecraft/util/FormattedCharSequence; a
	getUpdatePacket ()Lnet/minecraft/network/protocol/game/ClientboundBlockEntityDataPacket; a
	getUpdateTag ()Lnet/minecraft/nbt/CompoundTag; b
	isEditable ()Z d
	load (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/nbt/CompoundTag;)V a
	onlyOpCanSetNbt ()Z t
	save (Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/nbt/CompoundTag; a
	setAllowedPlayerEditor (Lnet/minecraft/world/entity/player/Player;)V a
	setColor (Lnet/minecraft/world/item/DyeColor;)Z a
	setEditable (Z)V a
	setMessage (ILnet/minecraft/network/chat/Component;)V a
net/minecraft/world/level/block/entity/SkullBlockEntity cdd
	isMovingMouth h
	mouthTickCount g
	owner c
	profileCache a
	sessionService b
	getMouthAnimation (F)F a
	getOwnerProfile ()Lcom/mojang/authlib/GameProfile; d
	getUpdatePacket ()Lnet/minecraft/network/protocol/game/ClientboundBlockEntityDataPacket; a
	getUpdateTag ()Lnet/minecraft/nbt/CompoundTag; b
	load (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/nbt/CompoundTag;)V a
	save (Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/nbt/CompoundTag; a
	setOwner (Lcom/mojang/authlib/GameProfile;)V a
	setProfileCache (Lnet/minecraft/server/players/GameProfileCache;)V a
	setSessionService (Lcom/mojang/authlib/minecraft/MinecraftSessionService;)V a
	tick ()V aj_
	updateGameprofile (Lcom/mojang/authlib/GameProfile;)Lcom/mojang/authlib/GameProfile; b
	updateOwnerProfile ()V f
net/minecraft/world/level/block/entity/SmokerBlockEntity cde
	createMenu (ILnet/minecraft/world/entity/player/Inventory;)Lnet/minecraft/world/inventory/AbstractContainerMenu; a
	getBurnDuration (Lnet/minecraft/world/item/ItemStack;)I a
	getDefaultName ()Lnet/minecraft/network/chat/Component; g
net/minecraft/world/level/block/entity/SpawnerBlockEntity cdf
	spawner a
	getSpawner ()Lnet/minecraft/world/level/BaseSpawner; d
	getUpdatePacket ()Lnet/minecraft/network/protocol/game/ClientboundBlockEntityDataPacket; a
	getUpdateTag ()Lnet/minecraft/nbt/CompoundTag; b
	load (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/nbt/CompoundTag;)V a
	onlyOpCanSetNbt ()Z t
	save (Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/nbt/CompoundTag; a
	tick ()V aj_
	triggerEvent (II)Z a_
net/minecraft/world/level/block/entity/StructureBlockEntity cdg
	author b
	ignoreEntities l
	integrity p
	metaData c
	mirror i
	mode k
	powered m
	rotation j
	seed q
	showAir n
	showBoundingBox o
	structureName a
	structurePos g
	structureSize h
	calculateEnclosingBoundingBox (Lnet/minecraft/core/BlockPos;Ljava/util/List;)Lnet/minecraft/world/level/levelgen/structure/BoundingBox; a
	createRandom (J)Ljava/util/Random; b
	createdBy (Lnet/minecraft/world/entity/LivingEntity;)V a
	detectSize ()Z C
	filterRelatedCornerBlocks (Ljava/util/List;)Ljava/util/List; a
	getDisplayName ()Lnet/minecraft/network/chat/Component; J
	getIntegrity ()F A
	getMetaData ()Ljava/lang/String; m
	getMirror ()Lnet/minecraft/world/level/block/Mirror; k
	getMode ()Lnet/minecraft/world/level/block/state/properties/StructureMode; x
	getNearbyCornerBlocks (Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Ljava/util/List; a
	getRotation ()Lnet/minecraft/world/level/block/Rotation; l
	getSeed ()J B
	getShowAir ()Z H
	getShowBoundingBox ()Z I
	getStructureBoundingBox (Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/levelgen/structure/BoundingBox; d
	getStructureName ()Ljava/lang/String; d
	getStructurePath ()Ljava/lang/String; f
	getStructurePos ()Lnet/minecraft/core/BlockPos; h
	getStructureSize ()Lnet/minecraft/core/BlockPos; j
	getUpdatePacket ()Lnet/minecraft/network/protocol/game/ClientboundBlockEntityDataPacket; a
	getUpdateTag ()Lnet/minecraft/nbt/CompoundTag; b
	getViewDistance ()D i
	hasStructureName ()Z g
	isIgnoreEntities ()Z z
	isPowered ()Z G
	isStructureLoadable ()Z F
	load (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/nbt/CompoundTag;)V a
	loadStructure (Lnet/minecraft/server/level/ServerLevel;)Z a
	loadStructure (Lnet/minecraft/server/level/ServerLevel;Z)Z a
	loadStructure (Lnet/minecraft/server/level/ServerLevel;ZLnet/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplate;)Z a
	nextMode ()V y
	save (Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/nbt/CompoundTag; a
	saveStructure ()Z D
	saveStructure (Z)Z b
	setIgnoreEntities (Z)V a
	setIntegrity (F)V a
	setMetaData (Ljava/lang/String;)V b
	setMirror (Lnet/minecraft/world/level/block/Mirror;)V b
	setMode (Lnet/minecraft/world/level/block/state/properties/StructureMode;)V a
	setPowered (Z)V c
	setRotation (Lnet/minecraft/world/level/block/Rotation;)V b
	setSeed (J)V a
	setShowAir (Z)V d
	setShowBoundingBox (Z)V e
	setStructureName (Ljava/lang/String;)V a
	setStructureName (Lnet/minecraft/resources/ResourceLocation;)V a
	setStructurePos (Lnet/minecraft/core/BlockPos;)V b
	setStructureSize (Lnet/minecraft/core/BlockPos;)V c
	unloadStructure ()V E
	updateBlockState ()V K
	usedBy (Lnet/minecraft/world/entity/player/Player;)Z a
net/minecraft/world/level/block/entity/StructureBlockEntity$UpdateType cdg$a
	$VALUES e
	LOAD_AREA c
	SAVE_AREA b
	SCAN_AREA d
	UPDATE_DATA a
net/minecraft/world/level/block/entity/TheEndGatewayBlockEntity cdh
	LOGGER a
	age b
	exactTeleport h
	exitPortal g
	teleportCooldown c
	canEntityTeleport (Lnet/minecraft/world/entity/Entity;)Z a
	createExitPortal (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;)V a
	findExitPortal (Lnet/minecraft/server/level/ServerLevel;)V a
	findExitPosition ()Lnet/minecraft/core/BlockPos; k
	findTallestBlock (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;IZ)Lnet/minecraft/core/BlockPos; a
	findValidSpawnInChunk (Lnet/minecraft/world/level/chunk/LevelChunk;)Lnet/minecraft/core/BlockPos; a
	getChunk (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/phys/Vec3;)Lnet/minecraft/world/level/chunk/LevelChunk; a
	getCooldownPercent (F)F b
	getParticleAmount ()I j
	getSpawnPercent (F)F a
	getUpdatePacket ()Lnet/minecraft/network/protocol/game/ClientboundBlockEntityDataPacket; a
	getUpdateTag ()Lnet/minecraft/nbt/CompoundTag; b
	getViewDistance ()D i
	isCoolingDown ()Z f
	isSpawning ()Z d
	load (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/nbt/CompoundTag;)V a
	save (Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/nbt/CompoundTag; a
	setExitPosition (Lnet/minecraft/core/BlockPos;Z)V a
	shouldRenderFace (Lnet/minecraft/core/Direction;)Z a
	teleportEntity (Lnet/minecraft/world/entity/Entity;)V b
	tick ()V aj_
	triggerCooldown ()V h
	triggerEvent (II)Z a_
net/minecraft/world/level/block/entity/TheEndPortalBlockEntity cdi
	shouldRenderFace (Lnet/minecraft/core/Direction;)Z a
net/minecraft/world/level/block/entity/TickableBlockEntity cdj
	tick ()V aj_
net/minecraft/world/level/block/entity/TrappedChestBlockEntity cdk
	signalOpenCount ()V h
net/minecraft/world/level/block/grower/AbstractMegaTreeGrower cdm
	getConfiguredMegaFeature (Ljava/util/Random;)Lnet/minecraft/world/level/levelgen/feature/ConfiguredFeature; a
	growTree (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Ljava/util/Random;)Z a
	isTwoByTwoSapling (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;II)Z a
	placeMega (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Ljava/util/Random;II)Z a
net/minecraft/world/level/block/grower/AbstractTreeGrower cdn
	getConfiguredFeature (Ljava/util/Random;Z)Lnet/minecraft/world/level/levelgen/feature/ConfiguredFeature; a
	growTree (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Ljava/util/Random;)Z a
	hasFlowers (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;)Z a
net/minecraft/world/level/block/grower/AcaciaTreeGrower cdo
	getConfiguredFeature (Ljava/util/Random;Z)Lnet/minecraft/world/level/levelgen/feature/ConfiguredFeature; a
net/minecraft/world/level/block/grower/BirchTreeGrower cdp
	getConfiguredFeature (Ljava/util/Random;Z)Lnet/minecraft/world/level/levelgen/feature/ConfiguredFeature; a
net/minecraft/world/level/block/grower/DarkOakTreeGrower cdq
	getConfiguredFeature (Ljava/util/Random;Z)Lnet/minecraft/world/level/levelgen/feature/ConfiguredFeature; a
	getConfiguredMegaFeature (Ljava/util/Random;)Lnet/minecraft/world/level/levelgen/feature/ConfiguredFeature; a
net/minecraft/world/level/block/grower/JungleTreeGrower cdr
	getConfiguredFeature (Ljava/util/Random;Z)Lnet/minecraft/world/level/levelgen/feature/ConfiguredFeature; a
	getConfiguredMegaFeature (Ljava/util/Random;)Lnet/minecraft/world/level/levelgen/feature/ConfiguredFeature; a
net/minecraft/world/level/block/grower/OakTreeGrower cds
	getConfiguredFeature (Ljava/util/Random;Z)Lnet/minecraft/world/level/levelgen/feature/ConfiguredFeature; a
net/minecraft/world/level/block/grower/SpruceTreeGrower cdt
	getConfiguredFeature (Ljava/util/Random;Z)Lnet/minecraft/world/level/levelgen/feature/ConfiguredFeature; a
	getConfiguredMegaFeature (Ljava/util/Random;)Lnet/minecraft/world/level/levelgen/feature/ConfiguredFeature; a
net/minecraft/world/level/block/piston/MovingPistonBlock cdw
	FACING a
	TYPE b
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	destroy (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V a
	getBlockEntity (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/piston/PistonMovingBlockEntity; a
	getCloneItemStack (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/item/ItemStack; a
	getCollisionShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; c
	getDrops (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/storage/loot/LootContext$Builder;)Ljava/util/List; a
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; b
	isPathfindable (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/pathfinder/PathComputationType;)Z a
	mirror (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Mirror;)Lnet/minecraft/world/level/block/state/BlockState; a
	newBlockEntity (Lnet/minecraft/world/level/BlockGetter;)Lnet/minecraft/world/level/block/entity/BlockEntity; a
	newMovingBlockEntity (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;ZZ)Lnet/minecraft/world/level/block/entity/BlockEntity; a
	onRemove (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)V a
	rotate (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Rotation;)Lnet/minecraft/world/level/block/state/BlockState; a
	use (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;Lnet/minecraft/world/phys/BlockHitResult;)Lnet/minecraft/world/InteractionResult; a
net/minecraft/world/level/block/piston/PistonBaseBlock cdx
	DOWN_AABB h
	EAST_AABB c
	EXTENDED b
	NORTH_AABB f
	SOUTH_AABB e
	UP_AABB g
	WEST_AABB d
	isSticky i
	checkIfExtend (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getNeighborSignal (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;)Z a
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; b
	getStateForPlacement (Lnet/minecraft/world/item/context/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	isPathfindable (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/pathfinder/PathComputationType;)Z a
	isPushable (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;ZLnet/minecraft/core/Direction;)Z a
	mirror (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Mirror;)Lnet/minecraft/world/level/block/state/BlockState; a
	moveBlocks (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;Z)Z a
	neighborChanged (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Block;Lnet/minecraft/core/BlockPos;Z)V a
	onPlace (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)V b
	rotate (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Rotation;)Lnet/minecraft/world/level/block/state/BlockState; a
	setPlacedBy (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/item/ItemStack;)V a
	triggerEvent (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;II)Z a
	useShapeForLightOcclusion (Lnet/minecraft/world/level/block/state/BlockState;)Z c_
net/minecraft/world/level/block/piston/PistonHeadBlock cdy
	DOWN_AABB i
	DOWN_ARM_AABB k
	EAST_AABB d
	EAST_ARM_AABB q
	NORTH_AABB g
	NORTH_ARM_AABB p
	SHAPES_LONG z
	SHAPES_SHORT y
	SHORT c
	SHORT_DOWN_ARM_AABB t
	SHORT_EAST_ARM_AABB w
	SHORT_NORTH_ARM_AABB v
	SHORT_SOUTH_ARM_AABB u
	SHORT_UP_ARM_AABB s
	SHORT_WEST_ARM_AABB x
	SOUTH_AABB f
	SOUTH_ARM_AABB o
	TYPE b
	UP_AABB h
	UP_ARM_AABB j
	WEST_AABB e
	WEST_ARM_AABB r
	calculateShape (Lnet/minecraft/core/Direction;Z)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	canSurvive (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;)Z a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getCloneItemStack (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/item/ItemStack; a
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; b
	isFittingBase (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/state/BlockState;)Z a
	isPathfindable (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/pathfinder/PathComputationType;)Z a
	makeShapes (Z)[Lnet/minecraft/world/phys/shapes/VoxelShape; a
	mirror (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Mirror;)Lnet/minecraft/world/level/block/state/BlockState; a
	neighborChanged (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Block;Lnet/minecraft/core/BlockPos;Z)V a
	onRemove (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)V a
	playerWillDestroy (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/entity/player/Player;)V a
	rotate (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Rotation;)Lnet/minecraft/world/level/block/state/BlockState; a
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
	useShapeForLightOcclusion (Lnet/minecraft/world/level/block/state/BlockState;)Z c_
net/minecraft/world/level/block/piston/PistonMath cdz
	getMovementArea (Lnet/minecraft/world/phys/AABB;Lnet/minecraft/core/Direction;D)Lnet/minecraft/world/phys/AABB; a
net/minecraft/world/level/block/piston/PistonMovingBlockEntity cea
	NOCLIP h
	deathTicks l
	direction b
	extending c
	isSourcePiston g
	lastTicked k
	movedState a
	progress i
	progressO j
	finalTick ()V l
	fixEntityWithinPistonBase (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/core/Direction;D)V a
	getCollisionRelatedBlockState ()Lnet/minecraft/world/level/block/state/BlockState; x
	getCollisionShape (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	getDirection ()Lnet/minecraft/core/Direction; f
	getExtendedProgress (F)F e
	getLastTicked ()J m
	getMovedState ()Lnet/minecraft/world/level/block/state/BlockState; k
	getMovement (Lnet/minecraft/world/phys/AABB;Lnet/minecraft/core/Direction;Lnet/minecraft/world/phys/AABB;)D a
	getMovementDirection ()Lnet/minecraft/core/Direction; j
	getProgress (F)F a
	getUpdateTag ()Lnet/minecraft/nbt/CompoundTag; b
	getViewDistance ()D i
	getXOff (F)F b
	getYOff (F)F c
	getZOff (F)F d
	isExtending ()Z d
	isSourcePiston ()Z h
	isStickyForEntities ()Z y
	load (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/nbt/CompoundTag;)V a
	matchesStickyCritera (Lnet/minecraft/world/phys/AABB;Lnet/minecraft/world/entity/Entity;)Z a
	moveByPositionAndProgress (Lnet/minecraft/world/phys/AABB;)Lnet/minecraft/world/phys/AABB; a
	moveCollidedEntities (F)V f
	moveEntityByPiston (Lnet/minecraft/core/Direction;Lnet/minecraft/world/entity/Entity;DLnet/minecraft/core/Direction;)V a
	moveStuckEntities (F)V g
	save (Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/nbt/CompoundTag; a
	tick ()V aj_
net/minecraft/world/level/block/piston/PistonStructureResolver ceb
	extending c
	level a
	pistonDirection h
	pistonPos b
	pushDirection e
	startPos d
	toDestroy g
	toPush f
	addBlockLine (Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;)Z a
	addBranchingBlocks (Lnet/minecraft/core/BlockPos;)Z a
	canStickToEachOther (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/world/level/block/Block;)Z a
	getPushDirection ()Lnet/minecraft/core/Direction; b
	getToDestroy ()Ljava/util/List; d
	getToPush ()Ljava/util/List; c
	isSticky (Lnet/minecraft/world/level/block/Block;)Z a
	reorderListAtCollision (II)V a
	resolve ()Z a
net/minecraft/world/level/block/state/BlockBehaviour ced
	UPDATE_SHAPE_ORDER ar
	drops aC
	dynamicShape aA
	explosionResistance au
	friction ax
	hasCollision at
	isRandomlyTicking av
	jumpFactor az
	material as
	properties aB
	soundType aw
	speedFactor ay
	asBlock ()Lnet/minecraft/world/level/block/Block; p
	asItem ()Lnet/minecraft/world/item/Item; h
	attack (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/player/Player;)V a
	canBeReplaced (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/item/context/BlockPlaceContext;)Z a
	canBeReplaced (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/material/Fluid;)Z a
	canSurvive (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;)Z a
	defaultMaterialColor ()Lnet/minecraft/world/level/material/MaterialColor; s
	entityInside (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/Entity;)V a
	getAnalogOutputSignal (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)I a
	getBlockSupportShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/phys/shapes/VoxelShape; e
	getCollisionShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; c
	getDestroyProgress (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)F a
	getDirectSignal (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;)I b
	getDrops (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/storage/loot/LootContext$Builder;)Ljava/util/List; a
	getFluidState (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/material/FluidState; d
	getInteractionShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/phys/shapes/VoxelShape; a_
	getLightBlock (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)I f
	getLootTable ()Lnet/minecraft/resources/ResourceLocation; r
	getMenuProvider (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/MenuProvider; b
	getOcclusionShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/phys/shapes/VoxelShape; d
	getOffsetType ()Lnet/minecraft/world/level/block/state/BlockBehaviour$OffsetType; ah_
	getPistonPushReaction (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/material/PushReaction; f
	getRenderShape (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/RenderShape; b
	getSeed (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/BlockPos;)J a
	getShadeBrightness (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)F a
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; b
	getSignal (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;)I a
	getVisualShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	hasAnalogOutputSignal (Lnet/minecraft/world/level/block/state/BlockState;)Z a
	isEntityBlock ()Z q
	isPathfindable (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/pathfinder/PathComputationType;)Z a
	isSignalSource (Lnet/minecraft/world/level/block/state/BlockState;)Z b_
	mirror (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Mirror;)Lnet/minecraft/world/level/block/state/BlockState; a
	neighborChanged (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Block;Lnet/minecraft/core/BlockPos;Z)V a
	onPlace (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)V b
	onProjectileHit (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/phys/BlockHitResult;Lnet/minecraft/world/entity/projectile/Projectile;)V a
	onRemove (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)V a
	randomTick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)V b
	rotate (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Rotation;)Lnet/minecraft/world/level/block/state/BlockState; a
	skipRendering (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;)Z a
	spawnAfterBreak (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/item/ItemStack;)V a
	tick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)V a
	triggerEvent (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;II)Z a
	updateIndirectNeighbourShapes (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;II)V a
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
	use (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;Lnet/minecraft/world/phys/BlockHitResult;)Lnet/minecraft/world/InteractionResult; a
	useShapeForLightOcclusion (Lnet/minecraft/world/level/block/state/BlockState;)Z c_
net/minecraft/world/level/block/state/BlockBehaviour$BlockStateBase ced$a
	cache a
	canOcclude k
	destroySpeed i
	emissiveRendering p
	hasPostProcess o
	isAir f
	isRedstoneConductor l
	isSuffocating m
	isViewBlocking n
	lightEmission b
	material g
	materialColor h
	requiresCorrectToolForDrops j
	useShapeForLightOcclusion e
	asState ()Lnet/minecraft/world/level/block/state/BlockState; p
	attack (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/player/Player;)V a
	canBeReplaced (Lnet/minecraft/world/item/context/BlockPlaceContext;)Z a
	canBeReplaced (Lnet/minecraft/world/level/material/Fluid;)Z a
	canOcclude ()Z l
	canSurvive (Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;)Z a
	emissiveRendering (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Z e
	entityCanStandOn (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/Entity;)Z a
	entityCanStandOnFace (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/Entity;Lnet/minecraft/core/Direction;)Z a
	entityInside (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/Entity;)V a
	getAnalogOutputSignal (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)I a
	getBlock ()Lnet/minecraft/world/level/block/Block; b
	getBlockSupportShape (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/phys/shapes/VoxelShape; l
	getCollisionShape (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/phys/shapes/VoxelShape; k
	getCollisionShape (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; b
	getDestroyProgress (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)F a
	getDestroySpeed (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)F h
	getDirectSignal (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;)I c
	getDrops (Lnet/minecraft/world/level/storage/loot/LootContext$Builder;)Ljava/util/List; a
	getFaceOcclusionShape (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	getFluidState ()Lnet/minecraft/world/level/material/FluidState; m
	getInteractionShape (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/phys/shapes/VoxelShape; m
	getLightBlock (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)I b
	getLightEmission ()I f
	getMapColor (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/material/MaterialColor; d
	getMaterial ()Lnet/minecraft/world/level/material/Material; c
	getMenuProvider (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/MenuProvider; b
	getOcclusionShape (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/phys/shapes/VoxelShape; c
	getOffset (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/phys/Vec3; n
	getPistonPushReaction ()Lnet/minecraft/world/level/material/PushReaction; k
	getRenderShape ()Lnet/minecraft/world/level/block/RenderShape; h
	getSeed (Lnet/minecraft/core/BlockPos;)J a
	getShadeBrightness (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)F f
	getShape (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/phys/shapes/VoxelShape; j
	getShape (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	getSignal (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;)I b
	getSoundType ()Lnet/minecraft/world/level/block/SoundType; o
	getVisualShape (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; c
	hasAnalogOutputSignal ()Z j
	hasLargeCollisionShape ()Z d
	hasPostProcess (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Z q
	initCache ()V a
	is (Lnet/minecraft/tags/Tag;)Z a
	is (Lnet/minecraft/tags/Tag;Ljava/util/function/Predicate;)Z a
	is (Lnet/minecraft/world/level/block/Block;)Z a
	isAir ()Z g
	isCollisionShapeFullBlock (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Z r
	isFaceSturdy (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;)Z d
	isFaceSturdy (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/SupportType;)Z a
	isPathfindable (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/pathfinder/PathComputationType;)Z a
	isRandomlyTicking ()Z n
	isRedstoneConductor (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Z g
	isSignalSource ()Z i
	isSolidRender (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Z i
	isSuffocating (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Z o
	isValidSpawn (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/EntityType;)Z a
	isViewBlocking (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Z p
	mirror (Lnet/minecraft/world/level/block/Mirror;)Lnet/minecraft/world/level/block/state/BlockState; a
	neighborChanged (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Block;Lnet/minecraft/core/BlockPos;Z)V a
	onPlace (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)V a
	onProjectileHit (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/phys/BlockHitResult;Lnet/minecraft/world/entity/projectile/Projectile;)V a
	onRemove (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)V b
	propagatesSkylightDown (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Z a
	randomTick (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)V b
	requiresCorrectToolForDrops ()Z q
	rotate (Lnet/minecraft/world/level/block/Rotation;)Lnet/minecraft/world/level/block/state/BlockState; a
	skipRendering (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;)Z a
	spawnAfterBreak (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/item/ItemStack;)V a
	tick (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)V a
	triggerEvent (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;II)Z a
	updateIndirectNeighbourShapes (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;I)V b
	updateIndirectNeighbourShapes (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;II)V b
	updateNeighbourShapes (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;I)V a
	updateNeighbourShapes (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;II)V a
	updateShape (Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
	use (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;Lnet/minecraft/world/phys/BlockHitResult;)Lnet/minecraft/world/InteractionResult; a
	useShapeForLightOcclusion ()Z e
net/minecraft/world/level/block/state/BlockBehaviour$BlockStateBase$Cache ced$a$a
	DIRECTIONS e
	SUPPORT_TYPE_COUNT f
	collisionShape b
	faceSturdy j
	isCollisionShapeFullBlock d
	largeCollisionShape c
	lightBlock h
	occlusionShapes i
	propagatesSkylightDown g
	solidRender a
	getFaceSupportIndex (Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/SupportType;)I b
	isFaceSturdy (Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/SupportType;)Z a
net/minecraft/world/level/block/state/BlockBehaviour$OffsetType ced$b
	$VALUES d
	NONE a
	XYZ c
	XZ b
net/minecraft/world/level/block/state/BlockBehaviour$Properties ced$c
	canOcclude n
	destroyTime g
	drops m
	dynamicShape v
	emissiveRendering u
	explosionResistance f
	friction j
	hasCollision c
	hasPostProcess t
	isAir o
	isRandomlyTicking i
	isRedstoneConductor q
	isSuffocating r
	isValidSpawn p
	isViewBlocking s
	jumpFactor l
	lightEmission e
	material a
	materialColor b
	requiresCorrectToolForDrops h
	soundType d
	speedFactor k
	air ()Lnet/minecraft/world/level/block/state/BlockBehaviour$Properties; g
	copy (Lnet/minecraft/world/level/block/state/BlockBehaviour;)Lnet/minecraft/world/level/block/state/BlockBehaviour$Properties; a
	dropsLike (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/world/level/block/state/BlockBehaviour$Properties; a
	dynamicShape ()Lnet/minecraft/world/level/block/state/BlockBehaviour$Properties; e
	emissiveRendering (Lnet/minecraft/world/level/block/state/BlockBehaviour$StatePredicate;)Lnet/minecraft/world/level/block/state/BlockBehaviour$Properties; e
	friction (F)Lnet/minecraft/world/level/block/state/BlockBehaviour$Properties; a
	hasPostProcess (Lnet/minecraft/world/level/block/state/BlockBehaviour$StatePredicate;)Lnet/minecraft/world/level/block/state/BlockBehaviour$Properties; d
	instabreak ()Lnet/minecraft/world/level/block/state/BlockBehaviour$Properties; c
	isRedstoneConductor (Lnet/minecraft/world/level/block/state/BlockBehaviour$StatePredicate;)Lnet/minecraft/world/level/block/state/BlockBehaviour$Properties; a
	isSuffocating (Lnet/minecraft/world/level/block/state/BlockBehaviour$StatePredicate;)Lnet/minecraft/world/level/block/state/BlockBehaviour$Properties; b
	isValidSpawn (Lnet/minecraft/world/level/block/state/BlockBehaviour$StateArgumentPredicate;)Lnet/minecraft/world/level/block/state/BlockBehaviour$Properties; a
	isViewBlocking (Lnet/minecraft/world/level/block/state/BlockBehaviour$StatePredicate;)Lnet/minecraft/world/level/block/state/BlockBehaviour$Properties; c
	jumpFactor (F)Lnet/minecraft/world/level/block/state/BlockBehaviour$Properties; c
	lightLevel (Ljava/util/function/ToIntFunction;)Lnet/minecraft/world/level/block/state/BlockBehaviour$Properties; a
	noCollission ()Lnet/minecraft/world/level/block/state/BlockBehaviour$Properties; a
	noDrops ()Lnet/minecraft/world/level/block/state/BlockBehaviour$Properties; f
	noOcclusion ()Lnet/minecraft/world/level/block/state/BlockBehaviour$Properties; b
	of (Lnet/minecraft/world/level/material/Material;)Lnet/minecraft/world/level/block/state/BlockBehaviour$Properties; a
	of (Lnet/minecraft/world/level/material/Material;Ljava/util/function/Function;)Lnet/minecraft/world/level/block/state/BlockBehaviour$Properties; a
	of (Lnet/minecraft/world/level/material/Material;Lnet/minecraft/world/item/DyeColor;)Lnet/minecraft/world/level/block/state/BlockBehaviour$Properties; a
	of (Lnet/minecraft/world/level/material/Material;Lnet/minecraft/world/level/material/MaterialColor;)Lnet/minecraft/world/level/block/state/BlockBehaviour$Properties; a
	randomTicks ()Lnet/minecraft/world/level/block/state/BlockBehaviour$Properties; d
	requiresCorrectToolForDrops ()Lnet/minecraft/world/level/block/state/BlockBehaviour$Properties; h
	sound (Lnet/minecraft/world/level/block/SoundType;)Lnet/minecraft/world/level/block/state/BlockBehaviour$Properties; a
	speedFactor (F)Lnet/minecraft/world/level/block/state/BlockBehaviour$Properties; b
	strength (F)Lnet/minecraft/world/level/block/state/BlockBehaviour$Properties; d
	strength (FF)Lnet/minecraft/world/level/block/state/BlockBehaviour$Properties; a
net/minecraft/world/level/block/state/BlockBehaviour$StateArgumentPredicate ced$d
net/minecraft/world/level/block/state/BlockBehaviour$StatePredicate ced$e
net/minecraft/world/level/block/state/BlockState cee
	CODEC b
	asState ()Lnet/minecraft/world/level/block/state/BlockState; p
net/minecraft/world/level/block/state/StateDefinition cef
	NAME_PATTERN a
	owner b
	propertiesByName c
	states d
	any ()Lnet/minecraft/world/level/block/state/StateHolder; b
	appendPropertyCodec (Lcom/mojang/serialization/MapCodec;Ljava/util/function/Supplier;Ljava/lang/String;Lnet/minecraft/world/level/block/state/properties/Property;)Lcom/mojang/serialization/MapCodec; a
	getOwner ()Ljava/lang/Object; c
	getPossibleStates ()Lcom/google/common/collect/ImmutableList; a
	getProperties ()Ljava/util/Collection; d
	getProperty (Ljava/lang/String;)Lnet/minecraft/world/level/block/state/properties/Property; a
net/minecraft/world/level/block/state/StateDefinition$Builder cef$a
	owner a
	properties b
	add ([Lnet/minecraft/world/level/block/state/properties/Property;)Lnet/minecraft/world/level/block/state/StateDefinition$Builder; a
	create (Ljava/util/function/Function;Lnet/minecraft/world/level/block/state/StateDefinition$Factory;)Lnet/minecraft/world/level/block/state/StateDefinition; a
	validateProperty (Lnet/minecraft/world/level/block/state/properties/Property;)V a
net/minecraft/world/level/block/state/StateDefinition$Factory cef$b
net/minecraft/world/level/block/state/StateHolder ceg
	PROPERTY_ENTRY_TO_STRING_FUNCTION a
	neighbours e
	owner c
	propertiesCodec d
	values b
	codec (Lcom/mojang/serialization/Codec;Ljava/util/function/Function;)Lcom/mojang/serialization/Codec; a
	cycle (Lnet/minecraft/world/level/block/state/properties/Property;)Ljava/lang/Object; a
	findNextInCollection (Ljava/util/Collection;Ljava/lang/Object;)Ljava/lang/Object; a
	getOptionalValue (Lnet/minecraft/world/level/block/state/properties/Property;)Ljava/util/Optional; d
	getProperties ()Ljava/util/Collection; r
	getValue (Lnet/minecraft/world/level/block/state/properties/Property;)Ljava/lang/Comparable; c
	getValues ()Lcom/google/common/collect/ImmutableMap; s
	hasProperty (Lnet/minecraft/world/level/block/state/properties/Property;)Z b
	makeNeighbourValues (Lnet/minecraft/world/level/block/state/properties/Property;Ljava/lang/Comparable;)Ljava/util/Map; b
	populateNeighbours (Ljava/util/Map;)V a
	setValue (Lnet/minecraft/world/level/block/state/properties/Property;Ljava/lang/Comparable;)Ljava/lang/Object; a
net/minecraft/world/level/block/state/pattern/BlockInWorld cei
	cachedEntity f
	entity e
	level a
	loadChunks c
	pos b
	state d
	getEntity ()Lnet/minecraft/world/level/block/entity/BlockEntity; b
	getLevel ()Lnet/minecraft/world/level/LevelReader; c
	getPos ()Lnet/minecraft/core/BlockPos; d
	getState ()Lnet/minecraft/world/level/block/state/BlockState; a
	hasState (Ljava/util/function/Predicate;)Ljava/util/function/Predicate; a
	hasState (Lnet/minecraft/world/level/block/state/BlockState;)Ljava/util/function/Predicate; a
net/minecraft/world/level/block/state/pattern/BlockPattern cej
	depth b
	height c
	pattern a
	width d
	createLevelCache (Lnet/minecraft/world/level/LevelReader;Z)Lcom/google/common/cache/LoadingCache; a
	find (Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/pattern/BlockPattern$BlockPatternMatch; a
	getDepth ()I a
	getHeight ()I b
	getPattern ()[[[Ljava/util/function/Predicate; d
	getWidth ()I c
	matches (Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;Lnet/minecraft/core/Direction;Lcom/google/common/cache/LoadingCache;)Lnet/minecraft/world/level/block/state/pattern/BlockPattern$BlockPatternMatch; a
	matches (Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;Lnet/minecraft/core/Direction;)Lnet/minecraft/world/level/block/state/pattern/BlockPattern$BlockPatternMatch; a
	translateAndRotate (Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;Lnet/minecraft/core/Direction;III)Lnet/minecraft/core/BlockPos; a
net/minecraft/world/level/block/state/pattern/BlockPattern$BlockCacheLoader cej$a
	level a
	loadChunks b
	load (Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/pattern/BlockInWorld; a
net/minecraft/world/level/block/state/pattern/BlockPattern$BlockPatternMatch cej$b
	cache d
	depth g
	forwards b
	frontTopLeft a
	height f
	up c
	width e
	getBlock (III)Lnet/minecraft/world/level/block/state/pattern/BlockInWorld; a
	getDepth ()I f
	getForwards ()Lnet/minecraft/core/Direction; b
	getFrontTopLeft ()Lnet/minecraft/core/BlockPos; a
	getHeight ()I e
	getUp ()Lnet/minecraft/core/Direction; c
	getWidth ()I d
net/minecraft/world/level/block/state/pattern/BlockPatternBuilder cek
	COMMA_JOINED a
	height d
	lookup c
	pattern b
	width e
	aisle ([Ljava/lang/String;)Lnet/minecraft/world/level/block/state/pattern/BlockPatternBuilder; a
	build ()Lnet/minecraft/world/level/block/state/pattern/BlockPattern; b
	createPattern ()[[[Ljava/util/function/Predicate; c
	ensureAllCharactersMatched ()V d
	start ()Lnet/minecraft/world/level/block/state/pattern/BlockPatternBuilder; a
	where (CLjava/util/function/Predicate;)Lnet/minecraft/world/level/block/state/pattern/BlockPatternBuilder; a
net/minecraft/world/level/block/state/predicate/BlockMaterialPredicate cem
	AIR a
	material b
	forMaterial (Lnet/minecraft/world/level/material/Material;)Lnet/minecraft/world/level/block/state/predicate/BlockMaterialPredicate; a
	test (Lnet/minecraft/world/level/block/state/BlockState;)Z a
net/minecraft/world/level/block/state/predicate/BlockPredicate cen
	block a
	forBlock (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/world/level/block/state/predicate/BlockPredicate; a
	test (Lnet/minecraft/world/level/block/state/BlockState;)Z a
net/minecraft/world/level/block/state/predicate/BlockStatePredicate ceo
	ANY a
	definition b
	properties c
	applies (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/state/properties/Property;Ljava/util/function/Predicate;)Z a
	forBlock (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/world/level/block/state/predicate/BlockStatePredicate; a
	forDefinition (Lnet/minecraft/world/level/block/state/StateDefinition;)Lnet/minecraft/world/level/block/state/predicate/BlockStatePredicate; a
	test (Lnet/minecraft/world/level/block/state/BlockState;)Z a
	where (Lnet/minecraft/world/level/block/state/properties/Property;Ljava/util/function/Predicate;)Lnet/minecraft/world/level/block/state/predicate/BlockStatePredicate; a
net/minecraft/world/level/block/state/properties/AttachFace ceq
	$VALUES e
	CEILING c
	FLOOR a
	WALL b
	name d
	getSerializedName ()Ljava/lang/String; a
net/minecraft/world/level/block/state/properties/BambooLeaves cer
	$VALUES e
	LARGE c
	NONE a
	SMALL b
	name d
	getSerializedName ()Ljava/lang/String; a
net/minecraft/world/level/block/state/properties/BedPart ces
	$VALUES d
	FOOT b
	HEAD a
	name c
	getSerializedName ()Ljava/lang/String; a
net/minecraft/world/level/block/state/properties/BellAttachType cet
	$VALUES f
	CEILING b
	DOUBLE_WALL d
	FLOOR a
	SINGLE_WALL c
	name e
	getSerializedName ()Ljava/lang/String; a
net/minecraft/world/level/block/state/properties/BlockStateProperties ceu
	AGE_1 ae
	AGE_15 aj
	AGE_2 af
	AGE_25 ak
	AGE_3 ag
	AGE_5 ah
	AGE_7 ai
	ATTACHED a
	ATTACH_FACE Q
	AXIS F
	BAMBOO_LEAVES aN
	BED_PART aE
	BELL_ATTACHMENT R
	BITES al
	BOTTOM b
	CHEST_TYPE aF
	CONDITIONAL c
	DELAY am
	DISARMED d
	DISTANCE an
	DOOR_HINGE aH
	DOUBLE_BLOCK_HALF aa
	DOWN H
	DRAG e
	EAST J
	EAST_REDSTONE W
	EAST_WALL S
	EGGS ao
	ENABLED f
	EXTENDED g
	EYE h
	FACING M
	FACING_HOPPER N
	FALLING i
	HALF ab
	HANGING j
	HAS_BOOK o
	HAS_BOTTLE_0 k
	HAS_BOTTLE_1 l
	HAS_BOTTLE_2 m
	HAS_RECORD n
	HATCH ap
	HORIZONTAL_AXIS E
	HORIZONTAL_FACING O
	INVERTED p
	IN_WALL q
	LAYERS aq
	LEVEL av
	LEVEL_CAULDRON ar
	LEVEL_COMPOSTER as
	LEVEL_FLOWING at
	LEVEL_HONEY au
	LIT r
	LOCKED s
	MODE_COMPARATOR aG
	MOISTURE aw
	NORTH I
	NORTH_REDSTONE X
	NORTH_WALL T
	NOTE ax
	NOTEBLOCK_INSTRUMENT aI
	OCCUPIED t
	OPEN u
	ORIENTATION P
	PERSISTENT v
	PICKLES ay
	PISTON_TYPE aJ
	POWER az
	POWERED w
	RAIL_SHAPE ac
	RAIL_SHAPE_STRAIGHT ad
	RESPAWN_ANCHOR_CHARGES aC
	ROTATION_16 aD
	SHORT x
	SIGNAL_FIRE y
	SLAB_TYPE aK
	SNOWY z
	SOUTH K
	SOUTH_REDSTONE Y
	SOUTH_WALL U
	STABILITY_DISTANCE aB
	STAGE aA
	STAIRS_SHAPE aL
	STRUCTUREBLOCK_MODE aM
	TRIGGERED A
	UNSTABLE B
	UP G
	VINE_END D
	WATERLOGGED C
	WEST L
	WEST_REDSTONE Z
	WEST_WALL V
net/minecraft/world/level/block/state/properties/BooleanProperty cev
	values a
	create (Ljava/lang/String;)Lnet/minecraft/world/level/block/state/properties/BooleanProperty; a
	generateHashCode ()I b
	getName (Ljava/lang/Boolean;)Ljava/lang/String; a
	getName (Ljava/lang/Comparable;)Ljava/lang/String; a
	getPossibleValues ()Ljava/util/Collection; a
	getValue (Ljava/lang/String;)Ljava/util/Optional; b
net/minecraft/world/level/block/state/properties/ChestType cew
	$VALUES g
	BY_ID d
	LEFT b
	RIGHT c
	SINGLE a
	name e
	opposite f
	getOpposite ()Lnet/minecraft/world/level/block/state/properties/ChestType; b
	getSerializedName ()Ljava/lang/String; a
net/minecraft/world/level/block/state/properties/ComparatorMode cex
	$VALUES d
	COMPARE a
	SUBTRACT b
	name c
	getSerializedName ()Ljava/lang/String; a
net/minecraft/world/level/block/state/properties/DirectionProperty cey
	create (Ljava/lang/String;)Lnet/minecraft/world/level/block/state/properties/DirectionProperty; a
	create (Ljava/lang/String;Ljava/util/Collection;)Lnet/minecraft/world/level/block/state/properties/DirectionProperty; a
	create (Ljava/lang/String;Ljava/util/function/Predicate;)Lnet/minecraft/world/level/block/state/properties/DirectionProperty; a
	create (Ljava/lang/String;[Lnet/minecraft/core/Direction;)Lnet/minecraft/world/level/block/state/properties/DirectionProperty; a
net/minecraft/world/level/block/state/properties/DoorHingeSide cez
	$VALUES c
	LEFT a
	RIGHT b
	getSerializedName ()Ljava/lang/String; a
net/minecraft/world/level/block/state/properties/DoubleBlockHalf cfa
	$VALUES c
	LOWER b
	UPPER a
	getSerializedName ()Ljava/lang/String; a
net/minecraft/world/level/block/state/properties/EnumProperty cfb
	names b
	values a
	create (Ljava/lang/String;Ljava/lang/Class;)Lnet/minecraft/world/level/block/state/properties/EnumProperty; a
	create (Ljava/lang/String;Ljava/lang/Class;Ljava/util/Collection;)Lnet/minecraft/world/level/block/state/properties/EnumProperty; a
	create (Ljava/lang/String;Ljava/lang/Class;Ljava/util/function/Predicate;)Lnet/minecraft/world/level/block/state/properties/EnumProperty; a
	create (Ljava/lang/String;Ljava/lang/Class;[Ljava/lang/Enum;)Lnet/minecraft/world/level/block/state/properties/EnumProperty; a
	generateHashCode ()I b
	getName (Ljava/lang/Comparable;)Ljava/lang/String; a
	getName (Ljava/lang/Enum;)Ljava/lang/String; a
	getPossibleValues ()Ljava/util/Collection; a
	getValue (Ljava/lang/String;)Ljava/util/Optional; b
net/minecraft/world/level/block/state/properties/Half cfc
	$VALUES d
	BOTTOM b
	TOP a
	name c
	getSerializedName ()Ljava/lang/String; a
net/minecraft/world/level/block/state/properties/IntegerProperty cfd
	values a
	create (Ljava/lang/String;II)Lnet/minecraft/world/level/block/state/properties/IntegerProperty; a
	generateHashCode ()I b
	getName (Ljava/lang/Comparable;)Ljava/lang/String; a
	getName (Ljava/lang/Integer;)Ljava/lang/String; a
	getPossibleValues ()Ljava/util/Collection; a
	getValue (Ljava/lang/String;)Ljava/util/Optional; b
net/minecraft/world/level/block/state/properties/NoteBlockInstrument cfe
	$VALUES s
	BANJO o
	BASEDRUM b
	BASS e
	BELL g
	BIT n
	CHIME i
	COW_BELL l
	DIDGERIDOO m
	FLUTE f
	GUITAR h
	HARP a
	HAT d
	IRON_XYLOPHONE k
	PLING p
	SNARE c
	XYLOPHONE j
	name q
	soundEvent r
	byState (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/state/properties/NoteBlockInstrument; a
	getSerializedName ()Ljava/lang/String; a
	getSoundEvent ()Lnet/minecraft/sounds/SoundEvent; b
net/minecraft/world/level/block/state/properties/PistonType cff
	$VALUES d
	DEFAULT a
	STICKY b
	name c
	getSerializedName ()Ljava/lang/String; a
net/minecraft/world/level/block/state/properties/Property cfg
	clazz a
	codec d
	hashCode c
	name b
	valueCodec e
	codec ()Lcom/mojang/serialization/Codec; d
	generateHashCode ()I b
	getAllValues ()Ljava/util/stream/Stream; c
	getName ()Ljava/lang/String; f
	getName (Ljava/lang/Comparable;)Ljava/lang/String; a
	getPossibleValues ()Ljava/util/Collection; a
	getValue (Ljava/lang/String;)Ljava/util/Optional; b
	getValueClass ()Ljava/lang/Class; g
	parseValue (Lcom/mojang/serialization/DynamicOps;Lnet/minecraft/world/level/block/state/StateHolder;Ljava/lang/Object;)Lcom/mojang/serialization/DataResult; a
	value (Ljava/lang/Comparable;)Lnet/minecraft/world/level/block/state/properties/Property$Value; b
	value (Lnet/minecraft/world/level/block/state/StateHolder;)Lnet/minecraft/world/level/block/state/properties/Property$Value; a
	valueCodec ()Lcom/mojang/serialization/Codec; e
net/minecraft/world/level/block/state/properties/Property$Value cfg$a
	property a
	value b
	getProperty ()Lnet/minecraft/world/level/block/state/properties/Property; a
	value ()Ljava/lang/Comparable; b
net/minecraft/world/level/block/state/properties/RailShape cfh
	$VALUES l
	ASCENDING_EAST c
	ASCENDING_NORTH e
	ASCENDING_SOUTH f
	ASCENDING_WEST d
	EAST_WEST b
	NORTH_EAST j
	NORTH_SOUTH a
	NORTH_WEST i
	SOUTH_EAST g
	SOUTH_WEST h
	name k
	getName ()Ljava/lang/String; b
	getSerializedName ()Ljava/lang/String; a
	isAscending ()Z c
net/minecraft/world/level/block/state/properties/RedstoneSide cfi
	$VALUES e
	NONE c
	SIDE b
	UP a
	name d
	getSerializedName ()Ljava/lang/String; a
	isConnected ()Z b
net/minecraft/world/level/block/state/properties/SlabType cfj
	$VALUES e
	BOTTOM b
	DOUBLE c
	TOP a
	name d
	getSerializedName ()Ljava/lang/String; a
net/minecraft/world/level/block/state/properties/StairsShape cfk
	$VALUES g
	INNER_LEFT b
	INNER_RIGHT c
	OUTER_LEFT d
	OUTER_RIGHT e
	STRAIGHT a
	name f
	getSerializedName ()Ljava/lang/String; a
net/minecraft/world/level/block/state/properties/StructureMode cfl
	$VALUES g
	CORNER c
	DATA d
	LOAD b
	SAVE a
	displayName f
	name e
	getDisplayName ()Lnet/minecraft/network/chat/Component; b
	getSerializedName ()Ljava/lang/String; a
net/minecraft/world/level/block/state/properties/WallSide cfm
	$VALUES e
	LOW b
	NONE a
	TALL c
	name d
	getSerializedName ()Ljava/lang/String; a
net/minecraft/world/level/block/state/properties/WoodType cfn
	ACACIA d
	BIRCH c
	CRIMSON g
	DARK_OAK f
	JUNGLE e
	OAK a
	SPRUCE b
	VALUES i
	WARPED h
	name j
	name ()Ljava/lang/String; b
	register (Lnet/minecraft/world/level/block/state/properties/WoodType;)Lnet/minecraft/world/level/block/state/properties/WoodType; a
	values ()Ljava/util/stream/Stream; a
net/minecraft/world/level/border/BorderChangeListener cfp
	onBorderCenterSet (Lnet/minecraft/world/level/border/WorldBorder;DD)V a
	onBorderSetDamagePerBlock (Lnet/minecraft/world/level/border/WorldBorder;D)V b
	onBorderSetDamageSafeZOne (Lnet/minecraft/world/level/border/WorldBorder;D)V c
	onBorderSetWarningBlocks (Lnet/minecraft/world/level/border/WorldBorder;I)V b
	onBorderSetWarningTime (Lnet/minecraft/world/level/border/WorldBorder;I)V a
	onBorderSizeLerping (Lnet/minecraft/world/level/border/WorldBorder;DDJ)V a
	onBorderSizeSet (Lnet/minecraft/world/level/border/WorldBorder;D)V a
net/minecraft/world/level/border/BorderChangeListener$DelegateBorderChangeListener cfp$a
	worldBorder a
	onBorderCenterSet (Lnet/minecraft/world/level/border/WorldBorder;DD)V a
	onBorderSetDamagePerBlock (Lnet/minecraft/world/level/border/WorldBorder;D)V b
	onBorderSetDamageSafeZOne (Lnet/minecraft/world/level/border/WorldBorder;D)V c
	onBorderSetWarningBlocks (Lnet/minecraft/world/level/border/WorldBorder;I)V b
	onBorderSetWarningTime (Lnet/minecraft/world/level/border/WorldBorder;I)V a
	onBorderSizeLerping (Lnet/minecraft/world/level/border/WorldBorder;DDJ)V a
	onBorderSizeSet (Lnet/minecraft/world/level/border/WorldBorder;D)V a
net/minecraft/world/level/border/BorderStatus cfq
	$VALUES e
	GROWING a
	SHRINKING b
	STATIONARY c
	color d
	getColor ()I a
net/minecraft/world/level/border/WorldBorder cfr
	DEFAULT_SETTINGS c
	absoluteMaxSize i
	centerX g
	centerZ h
	damagePerBlock b
	damageSafeZone d
	extent j
	listeners a
	warningBlocks f
	warningTime e
	addListener (Lnet/minecraft/world/level/border/BorderChangeListener;)V a
	applySettings (Lnet/minecraft/world/level/border/WorldBorder$Settings;)V a
	createSettings ()Lnet/minecraft/world/level/border/WorldBorder$Settings; t
	getAbsoluteMaxSize ()I m
	getCenterX ()D a
	getCenterZ ()D b
	getCollisionShape ()Lnet/minecraft/world/phys/shapes/VoxelShape; c
	getDamagePerBlock ()D o
	getDamageSafeZone ()D n
	getDistanceToBorder (DD)D b
	getDistanceToBorder (Lnet/minecraft/world/entity/Entity;)D a
	getLerpRemainingTime ()J j
	getLerpSpeed ()D p
	getLerpTarget ()D k
	getListeners ()Ljava/util/List; l
	getMaxX ()D g
	getMaxZ ()D h
	getMinX ()D e
	getMinZ ()D f
	getSize ()D i
	getStatus ()Lnet/minecraft/world/level/border/BorderStatus; d
	getWarningBlocks ()I r
	getWarningTime ()I q
	isWithinBounds (DD)Z a
	isWithinBounds (Lnet/minecraft/core/BlockPos;)Z a
	isWithinBounds (Lnet/minecraft/world/level/ChunkPos;)Z a
	isWithinBounds (Lnet/minecraft/world/phys/AABB;)Z a
	lerpSizeBetween (DDJ)V a
	removeListener (Lnet/minecraft/world/level/border/BorderChangeListener;)V b
	setAbsoluteMaxSize (I)V a
	setCenter (DD)V c
	setDamagePerBlock (D)V c
	setDamageSafeZone (D)V b
	setSize (D)V a
	setWarningBlocks (I)V c
	setWarningTime (I)V b
	tick ()V s
net/minecraft/world/level/border/WorldBorder$BorderExtent cfr$a
	getCollisionShape ()Lnet/minecraft/world/phys/shapes/VoxelShape; m
	getLerpRemainingTime ()J g
	getLerpSpeed ()D f
	getLerpTarget ()D h
	getMaxX ()D b
	getMaxZ ()D d
	getMinX ()D a
	getMinZ ()D c
	getSize ()D e
	getStatus ()Lnet/minecraft/world/level/border/BorderStatus; i
	onAbsoluteMaxSizeChange ()V j
	onCenterChange ()V k
	update ()Lnet/minecraft/world/level/border/WorldBorder$BorderExtent; l
net/minecraft/world/level/border/WorldBorder$MovingBorderExtent cfr$b
	from b
	lerpBegin e
	lerpDuration f
	lerpEnd d
	to c
	getCollisionShape ()Lnet/minecraft/world/phys/shapes/VoxelShape; m
	getLerpRemainingTime ()J g
	getLerpSpeed ()D f
	getLerpTarget ()D h
	getMaxX ()D b
	getMaxZ ()D d
	getMinX ()D a
	getMinZ ()D c
	getSize ()D e
	getStatus ()Lnet/minecraft/world/level/border/BorderStatus; i
	onAbsoluteMaxSizeChange ()V j
	onCenterChange ()V k
	update ()Lnet/minecraft/world/level/border/WorldBorder$BorderExtent; l
net/minecraft/world/level/border/WorldBorder$Settings cfr$c
	centerX a
	centerZ b
	damagePerBlock c
	safeZone d
	size g
	sizeLerpTarget i
	sizeLerpTime h
	warningBlocks e
	warningTime f
	getCenterX ()D a
	getCenterZ ()D b
	getDamagePerBlock ()D c
	getSafeZone ()D d
	getSize ()D g
	getSizeLerpTarget ()D i
	getSizeLerpTime ()J h
	getWarningBlocks ()I e
	getWarningTime ()I f
	read (Lcom/mojang/serialization/DynamicLike;Lnet/minecraft/world/level/border/WorldBorder$Settings;)Lnet/minecraft/world/level/border/WorldBorder$Settings; a
	write (Lnet/minecraft/nbt/CompoundTag;)V a
net/minecraft/world/level/border/WorldBorder$StaticBorderExtent cfr$d
	maxX e
	maxZ f
	minX c
	minZ d
	shape g
	size b
	getCollisionShape ()Lnet/minecraft/world/phys/shapes/VoxelShape; m
	getLerpRemainingTime ()J g
	getLerpSpeed ()D f
	getLerpTarget ()D h
	getMaxX ()D b
	getMaxZ ()D d
	getMinX ()D a
	getMinZ ()D c
	getSize ()D e
	getStatus ()Lnet/minecraft/world/level/border/BorderStatus; i
	onAbsoluteMaxSizeChange ()V j
	onCenterChange ()V k
	update ()Lnet/minecraft/world/level/border/WorldBorder$BorderExtent; l
	updateBox ()V n
net/minecraft/world/level/chunk/ChunkAccess cft
	addEntity (Lnet/minecraft/world/entity/Entity;)V a
	addPackedPostProcess (SI)V a
	getAllStarts ()Ljava/util/Map; h
	getBiomes ()Lnet/minecraft/world/level/chunk/ChunkBiomeContainer; i
	getBlockEntitiesPos ()Ljava/util/Set; c
	getBlockEntityNbt (Lnet/minecraft/core/BlockPos;)Lnet/minecraft/nbt/CompoundTag; i
	getBlockEntityNbtForSaving (Lnet/minecraft/core/BlockPos;)Lnet/minecraft/nbt/CompoundTag; j
	getBlockTicks ()Lnet/minecraft/world/level/TickList; n
	getHeighestPosition (Lnet/minecraft/world/level/levelgen/Heightmap$Types;)Lnet/minecraft/core/BlockPos; b
	getHeight (Lnet/minecraft/world/level/levelgen/Heightmap$Types;II)I a
	getHeightmaps ()Ljava/util/Collection; f
	getHighestSection ()Lnet/minecraft/world/level/chunk/LevelChunkSection; a
	getHighestSectionPosition ()I b
	getInhabitedTime ()J q
	getLightEngine ()Lnet/minecraft/world/level/lighting/LevelLightEngine; e
	getLights ()Ljava/util/stream/Stream; m
	getLiquidTicks ()Lnet/minecraft/world/level/TickList; o
	getOrCreateHeightmapUnprimed (Lnet/minecraft/world/level/levelgen/Heightmap$Types;)Lnet/minecraft/world/level/levelgen/Heightmap; a
	getOrCreateOffsetList ([Lit/unimi/dsi/fastutil/shorts/ShortList;I)Lit/unimi/dsi/fastutil/shorts/ShortList; a
	getPos ()Lnet/minecraft/world/level/ChunkPos; g
	getPostProcessing ()[Lit/unimi/dsi/fastutil/shorts/ShortList; l
	getSections ()[Lnet/minecraft/world/level/chunk/LevelChunkSection; d
	getStatus ()Lnet/minecraft/world/level/chunk/ChunkStatus; k
	getUpgradeData ()Lnet/minecraft/world/level/chunk/UpgradeData; p
	isLightCorrect ()Z r
	isUnsaved ()Z j
	isYSpaceEmpty (II)Z a
	markPosForPostprocessing (Lnet/minecraft/core/BlockPos;)V e
	removeBlockEntity (Lnet/minecraft/core/BlockPos;)V d
	setAllStarts (Ljava/util/Map;)V a
	setBlockEntity (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/entity/BlockEntity;)V a
	setBlockEntityNbt (Lnet/minecraft/nbt/CompoundTag;)V a
	setBlockState (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)Lnet/minecraft/world/level/block/state/BlockState; a
	setHeightmap (Lnet/minecraft/world/level/levelgen/Heightmap$Types;[J)V a
	setInhabitedTime (J)V b
	setLastSaveTime (J)V a
	setLightCorrect (Z)V b
	setUnsaved (Z)V a
net/minecraft/world/level/chunk/ChunkBiomeContainer cfu
	BIOMES_SIZE a
	HEIGHT_BITS f
	HORIZONTAL_MASK b
	LOGGER d
	VERTICAL_MASK c
	WIDTH_BITS e
	biomeRegistry g
	biomes h
	getNoiseBiome (III)Lnet/minecraft/world/level/biome/Biome; b
	writeBiomes ()[I a
net/minecraft/world/level/chunk/ChunkGenerator cfv
	CODEC a
	biomeSource b
	runtimeBiomeSource c
	settings d
	strongholdPositions f
	strongholdSeed e
	applyBiomeDecoration (Lnet/minecraft/server/level/WorldGenRegion;Lnet/minecraft/world/level/StructureFeatureManager;)V a
	applyCarvers (JLnet/minecraft/world/level/biome/BiomeManager;Lnet/minecraft/world/level/chunk/ChunkAccess;Lnet/minecraft/world/level/levelgen/GenerationStep$Carving;)V a
	buildSurfaceAndBedrock (Lnet/minecraft/server/level/WorldGenRegion;Lnet/minecraft/world/level/chunk/ChunkAccess;)V a
	codec ()Lcom/mojang/serialization/Codec; a
	createBiomes (Lnet/minecraft/core/Registry;Lnet/minecraft/world/level/chunk/ChunkAccess;)V a
	createReferences (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/StructureFeatureManager;Lnet/minecraft/world/level/chunk/ChunkAccess;)V a
	createStructure (Lnet/minecraft/world/level/levelgen/feature/ConfiguredStructureFeature;Lnet/minecraft/core/RegistryAccess;Lnet/minecraft/world/level/StructureFeatureManager;Lnet/minecraft/world/level/chunk/ChunkAccess;Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureManager;JLnet/minecraft/world/level/ChunkPos;Lnet/minecraft/world/level/biome/Biome;)V a
	createStructures (Lnet/minecraft/core/RegistryAccess;Lnet/minecraft/world/level/StructureFeatureManager;Lnet/minecraft/world/level/chunk/ChunkAccess;Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureManager;J)V a
	fillFromNoise (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/world/level/StructureFeatureManager;Lnet/minecraft/world/level/chunk/ChunkAccess;)V a
	findNearestMapFeature (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/level/levelgen/feature/StructureFeature;Lnet/minecraft/core/BlockPos;IZ)Lnet/minecraft/core/BlockPos; a
	generateStrongholds ()V g
	getBaseColumn (II)Lnet/minecraft/world/level/BlockGetter; a
	getBaseHeight (IILnet/minecraft/world/level/levelgen/Heightmap$Types;)I a
	getBiomeSource ()Lnet/minecraft/world/level/biome/BiomeSource; d
	getFirstFreeHeight (IILnet/minecraft/world/level/levelgen/Heightmap$Types;)I b
	getFirstOccupiedHeight (IILnet/minecraft/world/level/levelgen/Heightmap$Types;)I c
	getGenDepth ()I e
	getMobsAt (Lnet/minecraft/world/level/biome/Biome;Lnet/minecraft/world/level/StructureFeatureManager;Lnet/minecraft/world/entity/MobCategory;Lnet/minecraft/core/BlockPos;)Ljava/util/List; a
	getSeaLevel ()I f
	getSettings ()Lnet/minecraft/world/level/levelgen/StructureSettings; b
	getSpawnHeight ()I c
	hasStronghold (Lnet/minecraft/world/level/ChunkPos;)Z a
	spawnOriginalMobs (Lnet/minecraft/server/level/WorldGenRegion;)V a
	withSeed (J)Lnet/minecraft/world/level/chunk/ChunkGenerator; a
net/minecraft/world/level/chunk/ChunkSource cfw
	gatherStats ()Ljava/lang/String; e
	getChunk (IILnet/minecraft/world/level/chunk/ChunkStatus;Z)Lnet/minecraft/world/level/chunk/ChunkAccess; a
	getChunk (IIZ)Lnet/minecraft/world/level/chunk/LevelChunk; a
	getChunkForLighting (II)Lnet/minecraft/world/level/BlockGetter; c
	getChunkNow (II)Lnet/minecraft/world/level/chunk/LevelChunk; a
	getLightEngine ()Lnet/minecraft/world/level/lighting/LevelLightEngine; l
	getLoadedChunksCount ()I h
	hasChunk (II)Z b
	isEntityTickingChunk (Lnet/minecraft/world/entity/Entity;)Z a
	isEntityTickingChunk (Lnet/minecraft/world/level/ChunkPos;)Z a
	isTickingChunk (Lnet/minecraft/core/BlockPos;)Z a
	setSpawnSettings (ZZ)V a
	tick (Ljava/util/function/BooleanSupplier;)V a
	updateChunkForced (Lnet/minecraft/world/level/ChunkPos;Z)V a
net/minecraft/world/level/chunk/ChunkStatus cfx
	BIOMES d
	CARVERS g
	EMPTY a
	FEATURES i
	FULL m
	HEIGHTMAPS l
	LIGHT j
	LIQUID_CARVERS h
	NOISE e
	PASSTHROUGH_LOAD_TASK p
	POST_FEATURES o
	PRE_FEATURES n
	RANGE_BY_STATUS r
	SPAWN k
	STATUS_BY_RANGE q
	STRUCTURE_REFERENCES c
	STRUCTURE_STARTS b
	SURFACE f
	chunkType y
	generationTask v
	heightmapsAfter z
	index t
	loadingTask w
	name s
	parent u
	range x
	byName (Ljava/lang/String;)Lnet/minecraft/world/level/chunk/ChunkStatus; a
	generate (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureManager;Lnet/minecraft/server/level/ThreadedLevelLightEngine;Ljava/util/function/Function;Ljava/util/List;)Ljava/util/concurrent/CompletableFuture; a
	getChunkType ()Lnet/minecraft/world/level/chunk/ChunkStatus$ChunkType; g
	getDistance (Lnet/minecraft/world/level/chunk/ChunkStatus;)I a
	getIndex ()I c
	getName ()Ljava/lang/String; d
	getParent ()Lnet/minecraft/world/level/chunk/ChunkStatus; e
	getRange ()I f
	getStatus (I)Lnet/minecraft/world/level/chunk/ChunkStatus; a
	getStatusList ()Ljava/util/List; a
	heightmapsAfter ()Ljava/util/EnumSet; h
	isLighted (Lnet/minecraft/world/level/chunk/ChunkStatus;Lnet/minecraft/world/level/chunk/ChunkAccess;)Z a
	isOrAfter (Lnet/minecraft/world/level/chunk/ChunkStatus;)Z b
	lightChunk (Lnet/minecraft/world/level/chunk/ChunkStatus;Lnet/minecraft/server/level/ThreadedLevelLightEngine;Lnet/minecraft/world/level/chunk/ChunkAccess;)Ljava/util/concurrent/CompletableFuture; a
	load (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureManager;Lnet/minecraft/server/level/ThreadedLevelLightEngine;Ljava/util/function/Function;Lnet/minecraft/world/level/chunk/ChunkAccess;)Ljava/util/concurrent/CompletableFuture; a
	maxDistance ()I b
	register (Ljava/lang/String;Lnet/minecraft/world/level/chunk/ChunkStatus;ILjava/util/EnumSet;Lnet/minecraft/world/level/chunk/ChunkStatus$ChunkType;Lnet/minecraft/world/level/chunk/ChunkStatus$GenerationTask;)Lnet/minecraft/world/level/chunk/ChunkStatus; a
	register (Ljava/lang/String;Lnet/minecraft/world/level/chunk/ChunkStatus;ILjava/util/EnumSet;Lnet/minecraft/world/level/chunk/ChunkStatus$ChunkType;Lnet/minecraft/world/level/chunk/ChunkStatus$GenerationTask;Lnet/minecraft/world/level/chunk/ChunkStatus$LoadingTask;)Lnet/minecraft/world/level/chunk/ChunkStatus; a
	registerSimple (Ljava/lang/String;Lnet/minecraft/world/level/chunk/ChunkStatus;ILjava/util/EnumSet;Lnet/minecraft/world/level/chunk/ChunkStatus$ChunkType;Lnet/minecraft/world/level/chunk/ChunkStatus$SimpleGenerationTask;)Lnet/minecraft/world/level/chunk/ChunkStatus; a
net/minecraft/world/level/chunk/ChunkStatus$ChunkType cfx$a
	$VALUES c
	LEVELCHUNK b
	PROTOCHUNK a
net/minecraft/world/level/chunk/ChunkStatus$GenerationTask cfx$b
net/minecraft/world/level/chunk/ChunkStatus$LoadingTask cfx$c
net/minecraft/world/level/chunk/ChunkStatus$SimpleGenerationTask cfx$d
net/minecraft/world/level/chunk/DataLayer cfy
	data a
	copy ()Lnet/minecraft/world/level/chunk/DataLayer; b
	get (I)I b
	get (III)I a
	getData ()[B a
	getIndex (III)I b
	getPosition (I)I d
	isEmpty ()Z c
	isFirst (I)Z c
	layerToString (I)Ljava/lang/String; a
	set (II)V a
	set (IIII)V a
net/minecraft/world/level/chunk/EmptyLevelChunk cfz
	BIOMES b
	addBlockEntity (Lnet/minecraft/world/level/block/entity/BlockEntity;)V a
	addEntity (Lnet/minecraft/world/entity/Entity;)V a
	getBlockEntity (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/chunk/LevelChunk$EntityCreationType;)Lnet/minecraft/world/level/block/entity/BlockEntity; a
	getBlockState (Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; d_
	getEntities (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/phys/AABB;Ljava/util/List;Ljava/util/function/Predicate;)V a
	getEntitiesOfClass (Ljava/lang/Class;Lnet/minecraft/world/phys/AABB;Ljava/util/List;Ljava/util/function/Predicate;)V a
	getFluidState (Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/material/FluidState; b
	getFullStatus ()Lnet/minecraft/server/level/ChunkHolder$FullChunkStatus; u
	getLightBlock (Lnet/minecraft/core/BlockPos;)I f
	getLightEmission (Lnet/minecraft/core/BlockPos;)I g
	getLightEngine ()Lnet/minecraft/world/level/lighting/LevelLightEngine; e
	isEmpty ()Z t
	isYSpaceEmpty (II)Z a
	markUnsaved ()V s
	removeBlockEntity (Lnet/minecraft/core/BlockPos;)V d
	removeEntity (Lnet/minecraft/world/entity/Entity;)V b
	removeEntity (Lnet/minecraft/world/entity/Entity;I)V a
	setBlockEntity (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/entity/BlockEntity;)V a
	setBlockState (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)Lnet/minecraft/world/level/block/state/BlockState; a
net/minecraft/world/level/chunk/FeatureAccess cga
	addReferenceForFeature (Lnet/minecraft/world/level/levelgen/feature/StructureFeature;J)V a
	getAllReferences ()Ljava/util/Map; v
	getReferencesForFeature (Lnet/minecraft/world/level/levelgen/feature/StructureFeature;)Lit/unimi/dsi/fastutil/longs/LongSet; b
	getStartForFeature (Lnet/minecraft/world/level/levelgen/feature/StructureFeature;)Lnet/minecraft/world/level/levelgen/structure/StructureStart; a
	setAllReferences (Ljava/util/Map;)V b
	setStartForFeature (Lnet/minecraft/world/level/levelgen/feature/StructureFeature;Lnet/minecraft/world/level/levelgen/structure/StructureStart;)V a
net/minecraft/world/level/chunk/GlobalPalette cgb
	defaultValue b
	registry a
	getSerializedSize ()I a
	getSize ()I b
	idFor (Ljava/lang/Object;)I a
	maybeHas (Ljava/util/function/Predicate;)Z a
	read (Lnet/minecraft/nbt/ListTag;)V a
	read (Lnet/minecraft/network/FriendlyByteBuf;)V a
	valueFor (I)Ljava/lang/Object; a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V b
net/minecraft/world/level/chunk/HashMapPalette cgc
	bits f
	reader d
	registry a
	resizeHandler c
	values b
	writer e
	getSerializedSize ()I a
	getSize ()I b
	idFor (Ljava/lang/Object;)I a
	maybeHas (Ljava/util/function/Predicate;)Z a
	read (Lnet/minecraft/nbt/ListTag;)V a
	read (Lnet/minecraft/network/FriendlyByteBuf;)V a
	valueFor (I)Ljava/lang/Object; a
	write (Lnet/minecraft/nbt/ListTag;)V b
	write (Lnet/minecraft/network/FriendlyByteBuf;)V b
net/minecraft/world/level/chunk/ImposterProtoChunk cgd
	wrapped a
	addEntity (Lnet/minecraft/world/entity/Entity;)V a
	addReferenceForFeature (Lnet/minecraft/world/level/levelgen/feature/StructureFeature;J)V a
	fixType (Lnet/minecraft/world/level/levelgen/Heightmap$Types;)Lnet/minecraft/world/level/levelgen/Heightmap$Types; c
	getAllReferences ()Ljava/util/Map; v
	getAllStarts ()Ljava/util/Map; h
	getBiomes ()Lnet/minecraft/world/level/chunk/ChunkBiomeContainer; i
	getBlockEntity (Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/entity/BlockEntity; c
	getBlockEntityNbt (Lnet/minecraft/core/BlockPos;)Lnet/minecraft/nbt/CompoundTag; i
	getBlockEntityNbtForSaving (Lnet/minecraft/core/BlockPos;)Lnet/minecraft/nbt/CompoundTag; j
	getBlockState (Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; d_
	getBlockTicks ()Lnet/minecraft/world/level/TickList; n
	getBlockTicks ()Lnet/minecraft/world/level/chunk/ProtoTickList; s
	getCarvingMask (Lnet/minecraft/world/level/levelgen/GenerationStep$Carving;)Ljava/util/BitSet; a
	getFluidState (Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/material/FluidState; b
	getHeighestPosition (Lnet/minecraft/world/level/levelgen/Heightmap$Types;)Lnet/minecraft/core/BlockPos; b
	getHeight (Lnet/minecraft/world/level/levelgen/Heightmap$Types;II)I a
	getLightEngine ()Lnet/minecraft/world/level/lighting/LevelLightEngine; e
	getLights ()Ljava/util/stream/Stream; m
	getLiquidTicks ()Lnet/minecraft/world/level/TickList; o
	getLiquidTicks ()Lnet/minecraft/world/level/chunk/ProtoTickList; t
	getMaxLightLevel ()I J
	getOrCreateCarvingMask (Lnet/minecraft/world/level/levelgen/GenerationStep$Carving;)Ljava/util/BitSet; b
	getPos ()Lnet/minecraft/world/level/ChunkPos; g
	getReferencesForFeature (Lnet/minecraft/world/level/levelgen/feature/StructureFeature;)Lit/unimi/dsi/fastutil/longs/LongSet; b
	getSections ()[Lnet/minecraft/world/level/chunk/LevelChunkSection; d
	getStartForFeature (Lnet/minecraft/world/level/levelgen/feature/StructureFeature;)Lnet/minecraft/world/level/levelgen/structure/StructureStart; a
	getStatus ()Lnet/minecraft/world/level/chunk/ChunkStatus; k
	getWrapped ()Lnet/minecraft/world/level/chunk/LevelChunk; u
	isLightCorrect ()Z r
	isUnsaved ()Z j
	markPosForPostprocessing (Lnet/minecraft/core/BlockPos;)V e
	removeBlockEntity (Lnet/minecraft/core/BlockPos;)V d
	setAllReferences (Ljava/util/Map;)V b
	setAllStarts (Ljava/util/Map;)V a
	setBiomes (Lnet/minecraft/world/level/chunk/ChunkBiomeContainer;)V a
	setBlockEntity (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/entity/BlockEntity;)V a
	setBlockEntityNbt (Lnet/minecraft/nbt/CompoundTag;)V a
	setBlockState (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)Lnet/minecraft/world/level/block/state/BlockState; a
	setHeightmap (Lnet/minecraft/world/level/levelgen/Heightmap$Types;[J)V a
	setLastSaveTime (J)V a
	setLightCorrect (Z)V b
	setStartForFeature (Lnet/minecraft/world/level/levelgen/feature/StructureFeature;Lnet/minecraft/world/level/levelgen/structure/StructureStart;)V a
	setStatus (Lnet/minecraft/world/level/chunk/ChunkStatus;)V a
	setUnsaved (Z)V a
net/minecraft/world/level/chunk/LevelChunk cge
	EMPTY_SECTION a
	LOGGER b
	biomes d
	blockEntities j
	blockTicks o
	chunkPos w
	entitySections k
	fullStatus u
	heightmaps h
	inhabitedTime t
	isLightCorrect x
	lastSaveHadEntities q
	lastSaveTime r
	level g
	liquidTicks p
	loaded f
	pendingBlockEntities e
	postLoad v
	postProcessing n
	sections c
	structureStarts l
	structuresRefences m
	unsaved s
	upgradeData i
	addBlockEntity (Lnet/minecraft/world/level/block/entity/BlockEntity;)V a
	addEntity (Lnet/minecraft/world/entity/Entity;)V a
	addReferenceForFeature (Lnet/minecraft/world/level/levelgen/feature/StructureFeature;J)V a
	createBlockEntity (Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/entity/BlockEntity; k
	getAllReferences ()Ljava/util/Map; v
	getAllStarts ()Ljava/util/Map; h
	getBiomes ()Lnet/minecraft/world/level/chunk/ChunkBiomeContainer; i
	getBlockEntities ()Ljava/util/Map; y
	getBlockEntitiesPos ()Ljava/util/Set; c
	getBlockEntity (Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/entity/BlockEntity; c
	getBlockEntity (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/chunk/LevelChunk$EntityCreationType;)Lnet/minecraft/world/level/block/entity/BlockEntity; a
	getBlockEntityNbt (Lnet/minecraft/core/BlockPos;)Lnet/minecraft/nbt/CompoundTag; i
	getBlockEntityNbtForSaving (Lnet/minecraft/core/BlockPos;)Lnet/minecraft/nbt/CompoundTag; j
	getBlockState (Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; d_
	getBlockTicks ()Lnet/minecraft/world/level/TickList; n
	getEntities (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/phys/AABB;Ljava/util/List;Ljava/util/function/Predicate;)V a
	getEntities (Lnet/minecraft/world/entity/EntityType;Lnet/minecraft/world/phys/AABB;Ljava/util/List;Ljava/util/function/Predicate;)V a
	getEntitiesOfClass (Ljava/lang/Class;Lnet/minecraft/world/phys/AABB;Ljava/util/List;Ljava/util/function/Predicate;)V a
	getEntitySections ()[Lnet/minecraft/util/ClassInstanceMultiMap; z
	getFluidState (III)Lnet/minecraft/world/level/material/FluidState; a
	getFluidState (Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/material/FluidState; b
	getFullStatus ()Lnet/minecraft/server/level/ChunkHolder$FullChunkStatus; u
	getHeighestPosition (Lnet/minecraft/world/level/levelgen/Heightmap$Types;)Lnet/minecraft/core/BlockPos; b
	getHeight (Lnet/minecraft/world/level/levelgen/Heightmap$Types;II)I a
	getHeightmaps ()Ljava/util/Collection; f
	getInhabitedTime ()J q
	getLevel ()Lnet/minecraft/world/level/Level; x
	getLightEngine ()Lnet/minecraft/world/level/lighting/LevelLightEngine; e
	getLights ()Ljava/util/stream/Stream; m
	getLiquidTicks ()Lnet/minecraft/world/level/TickList; o
	getOrCreateHeightmapUnprimed (Lnet/minecraft/world/level/levelgen/Heightmap$Types;)Lnet/minecraft/world/level/levelgen/Heightmap; a
	getPos ()Lnet/minecraft/world/level/ChunkPos; g
	getPostProcessing ()[Lit/unimi/dsi/fastutil/shorts/ShortList; l
	getReferencesForFeature (Lnet/minecraft/world/level/levelgen/feature/StructureFeature;)Lit/unimi/dsi/fastutil/longs/LongSet; b
	getSections ()[Lnet/minecraft/world/level/chunk/LevelChunkSection; d
	getStartForFeature (Lnet/minecraft/world/level/levelgen/feature/StructureFeature;)Lnet/minecraft/world/level/levelgen/structure/StructureStart; a
	getStatus ()Lnet/minecraft/world/level/chunk/ChunkStatus; k
	getUpgradeData ()Lnet/minecraft/world/level/chunk/UpgradeData; p
	isEmpty ()Z t
	isLightCorrect ()Z r
	isUnsaved ()Z j
	markUnsaved ()V s
	packTicks (Lnet/minecraft/server/level/ServerLevel;)V a
	postProcessGeneration ()V A
	promotePendingBlockEntity (Lnet/minecraft/core/BlockPos;Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/world/level/block/entity/BlockEntity; a
	removeBlockEntity (Lnet/minecraft/core/BlockPos;)V d
	removeEntity (Lnet/minecraft/world/entity/Entity;)V b
	removeEntity (Lnet/minecraft/world/entity/Entity;I)V a
	replaceWithPacketData (Lnet/minecraft/world/level/chunk/ChunkBiomeContainer;Lnet/minecraft/network/FriendlyByteBuf;Lnet/minecraft/nbt/CompoundTag;I)V a
	runPostLoad ()V w
	setAllReferences (Ljava/util/Map;)V b
	setAllStarts (Ljava/util/Map;)V a
	setBlockEntity (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/entity/BlockEntity;)V a
	setBlockEntityNbt (Lnet/minecraft/nbt/CompoundTag;)V a
	setBlockState (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)Lnet/minecraft/world/level/block/state/BlockState; a
	setFullStatus (Ljava/util/function/Supplier;)V a
	setHeightmap (Lnet/minecraft/world/level/levelgen/Heightmap$Types;[J)V a
	setInhabitedTime (J)V b
	setLastSaveHadEntities (Z)V d
	setLastSaveTime (J)V a
	setLightCorrect (Z)V b
	setLoaded (Z)V c
	setStartForFeature (Lnet/minecraft/world/level/levelgen/feature/StructureFeature;Lnet/minecraft/world/level/levelgen/structure/StructureStart;)V a
	setUnsaved (Z)V a
	unpackTicks ()V B
net/minecraft/world/level/chunk/LevelChunk$EntityCreationType cge$a
	$VALUES d
	CHECK c
	IMMEDIATE a
	QUEUED b
net/minecraft/world/level/chunk/LevelChunkSection cgf
	GLOBAL_BLOCKSTATE_PALETTE a
	bottomBlockY b
	nonEmptyBlockCount c
	states f
	tickingBlockCount d
	tickingFluidCount e
	acquire ()V a
	bottomBlockY ()I g
	getBlockState (III)Lnet/minecraft/world/level/block/state/BlockState; a
	getFluidState (III)Lnet/minecraft/world/level/material/FluidState; b
	getSerializedSize ()I j
	getStates ()Lnet/minecraft/world/level/chunk/PalettedContainer; i
	isEmpty ()Z c
	isEmpty (Lnet/minecraft/world/level/chunk/LevelChunkSection;)Z a
	isRandomlyTicking ()Z d
	isRandomlyTickingBlocks ()Z e
	isRandomlyTickingFluids ()Z f
	maybeHas (Ljava/util/function/Predicate;)Z a
	read (Lnet/minecraft/network/FriendlyByteBuf;)V a
	recalcBlockCounts ()V h
	release ()V b
	setBlockState (IIILnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/state/BlockState; a
	setBlockState (IIILnet/minecraft/world/level/block/state/BlockState;Z)Lnet/minecraft/world/level/block/state/BlockState; a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V b
net/minecraft/world/level/chunk/LightChunkGetter cgg
	getChunkForLighting (II)Lnet/minecraft/world/level/BlockGetter; c
	getLevel ()Lnet/minecraft/world/level/BlockGetter; m
	onLightUpdate (Lnet/minecraft/world/level/LightLayer;Lnet/minecraft/core/SectionPos;)V a
net/minecraft/world/level/chunk/LinearPalette cgh
	bits e
	reader d
	registry a
	resizeHandler c
	size f
	values b
	getSerializedSize ()I a
	getSize ()I b
	idFor (Ljava/lang/Object;)I a
	maybeHas (Ljava/util/function/Predicate;)Z a
	read (Lnet/minecraft/nbt/ListTag;)V a
	read (Lnet/minecraft/network/FriendlyByteBuf;)V a
	valueFor (I)Ljava/lang/Object; a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V b
net/minecraft/world/level/chunk/OldDataLayer cgi
	data a
	depthBits b
	depthBitsPlusFour c
	get (III)I a
	isValid ()Z a
	set (IIII)V a
	setAll (I)V a
net/minecraft/world/level/chunk/Palette cgj
	getSerializedSize ()I a
	getSize ()I b
	idFor (Ljava/lang/Object;)I a
	maybeHas (Ljava/util/function/Predicate;)Z a
	read (Lnet/minecraft/nbt/ListTag;)V a
	read (Lnet/minecraft/network/FriendlyByteBuf;)V a
	valueFor (I)Ljava/lang/Object; a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V b
net/minecraft/world/level/chunk/PaletteResize cgk
net/minecraft/world/level/chunk/PalettedContainer cgl
	bits i
	defaultValue g
	dummyPaletteResize c
	globalPalette b
	lock j
	palette h
	reader e
	registry d
	storage a
	writer f
	acquire ()V a
	count (Lnet/minecraft/world/level/chunk/PalettedContainer$CountConsumer;)V a
	get (I)Ljava/lang/Object; a
	get (III)Ljava/lang/Object; a
	getAndSet (IIILjava/lang/Object;)Ljava/lang/Object; a
	getAndSet (ILjava/lang/Object;)Ljava/lang/Object; a
	getAndSetUnchecked (IIILjava/lang/Object;)Ljava/lang/Object; b
	getIndex (III)I b
	getSerializedSize ()I c
	maybeHas (Ljava/util/function/Predicate;)Z a
	read (Lnet/minecraft/nbt/ListTag;[J)V a
	read (Lnet/minecraft/network/FriendlyByteBuf;)V a
	release ()V b
	set (IIILjava/lang/Object;)V c
	set (ILjava/lang/Object;)V b
	setBits (I)V b
	write (Lnet/minecraft/nbt/CompoundTag;Ljava/lang/String;Ljava/lang/String;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V b
net/minecraft/world/level/chunk/PalettedContainer$CountConsumer cgl$a
net/minecraft/world/level/chunk/ProtoChunk cgm
	LOGGER a
	biomes d
	blockEntities h
	blockEntityNbts i
	blockTicks q
	carvingMasks t
	chunkPos b
	entities k
	heightmaps f
	inhabitedTime s
	isDirty c
	isLightCorrect u
	lightEngine e
	lights l
	liquidTicks r
	postProcessing m
	sections j
	status g
	structureStarts n
	structuresRefences o
	upgradeData p
	addEntity (Lnet/minecraft/nbt/CompoundTag;)V b
	addEntity (Lnet/minecraft/world/entity/Entity;)V a
	addLight (Lnet/minecraft/core/BlockPos;)V k
	addLight (SI)V b
	addPackedPostProcess (SI)V a
	addReferenceForFeature (Lnet/minecraft/world/level/levelgen/feature/StructureFeature;J)V a
	getAllReferences ()Ljava/util/Map; v
	getAllStarts ()Ljava/util/Map; h
	getBiomes ()Lnet/minecraft/world/level/chunk/ChunkBiomeContainer; i
	getBlockEntities ()Ljava/util/Map; x
	getBlockEntitiesPos ()Ljava/util/Set; c
	getBlockEntity (Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/entity/BlockEntity; c
	getBlockEntityNbt (Lnet/minecraft/core/BlockPos;)Lnet/minecraft/nbt/CompoundTag; i
	getBlockEntityNbtForSaving (Lnet/minecraft/core/BlockPos;)Lnet/minecraft/nbt/CompoundTag; j
	getBlockEntityNbts ()Ljava/util/Map; z
	getBlockState (Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; d_
	getBlockTicks ()Lnet/minecraft/world/level/TickList; n
	getBlockTicks ()Lnet/minecraft/world/level/chunk/ProtoTickList; s
	getCarvingMask (Lnet/minecraft/world/level/levelgen/GenerationStep$Carving;)Ljava/util/BitSet; a
	getEntities ()Ljava/util/List; y
	getFluidState (Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/material/FluidState; b
	getHeighestPosition (Lnet/minecraft/world/level/levelgen/Heightmap$Types;)Lnet/minecraft/core/BlockPos; b
	getHeight (Lnet/minecraft/world/level/levelgen/Heightmap$Types;II)I a
	getHeightmaps ()Ljava/util/Collection; f
	getInhabitedTime ()J q
	getLightEngine ()Lnet/minecraft/world/level/lighting/LevelLightEngine; e
	getLights ()Ljava/util/stream/Stream; m
	getLiquidTicks ()Lnet/minecraft/world/level/TickList; o
	getLiquidTicks ()Lnet/minecraft/world/level/chunk/ProtoTickList; t
	getOrCreateCarvingMask (Lnet/minecraft/world/level/levelgen/GenerationStep$Carving;)Ljava/util/BitSet; b
	getOrCreateHeightmapUnprimed (Lnet/minecraft/world/level/levelgen/Heightmap$Types;)Lnet/minecraft/world/level/levelgen/Heightmap; a
	getOrCreateSection (I)Lnet/minecraft/world/level/chunk/LevelChunkSection; a
	getPackedLights ()[Lit/unimi/dsi/fastutil/shorts/ShortList; w
	getPos ()Lnet/minecraft/world/level/ChunkPos; g
	getPostProcessing ()[Lit/unimi/dsi/fastutil/shorts/ShortList; l
	getReferencesForFeature (Lnet/minecraft/world/level/levelgen/feature/StructureFeature;)Lit/unimi/dsi/fastutil/longs/LongSet; b
	getSections ()[Lnet/minecraft/world/level/chunk/LevelChunkSection; d
	getStartForFeature (Lnet/minecraft/world/level/levelgen/feature/StructureFeature;)Lnet/minecraft/world/level/levelgen/structure/StructureStart; a
	getStatus ()Lnet/minecraft/world/level/chunk/ChunkStatus; k
	getUpgradeData ()Lnet/minecraft/world/level/chunk/UpgradeData; p
	isLightCorrect ()Z r
	isUnsaved ()Z j
	markPosForPostprocessing (Lnet/minecraft/core/BlockPos;)V e
	packOffsetCoordinates (Lnet/minecraft/core/BlockPos;)S l
	removeBlockEntity (Lnet/minecraft/core/BlockPos;)V d
	setAllReferences (Ljava/util/Map;)V b
	setAllStarts (Ljava/util/Map;)V a
	setBiomes (Lnet/minecraft/world/level/chunk/ChunkBiomeContainer;)V a
	setBlockEntity (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/entity/BlockEntity;)V a
	setBlockEntityNbt (Lnet/minecraft/nbt/CompoundTag;)V a
	setBlockState (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)Lnet/minecraft/world/level/block/state/BlockState; a
	setCarvingMask (Lnet/minecraft/world/level/levelgen/GenerationStep$Carving;Ljava/util/BitSet;)V a
	setHeightmap (Lnet/minecraft/world/level/levelgen/Heightmap$Types;[J)V a
	setInhabitedTime (J)V b
	setLastSaveTime (J)V a
	setLightCorrect (Z)V b
	setLightEngine (Lnet/minecraft/world/level/lighting/LevelLightEngine;)V a
	setStartForFeature (Lnet/minecraft/world/level/levelgen/feature/StructureFeature;Lnet/minecraft/world/level/levelgen/structure/StructureStart;)V a
	setStatus (Lnet/minecraft/world/level/chunk/ChunkStatus;)V a
	setUnsaved (Z)V a
	unpackOffsetCoordinates (SILnet/minecraft/world/level/ChunkPos;)Lnet/minecraft/core/BlockPos; a
net/minecraft/world/level/chunk/ProtoTickList cgn
	chunkPos b
	ignore a
	toBeTicked c
	copyOut (Lnet/minecraft/world/level/TickList;Ljava/util/function/Function;)V a
	hasScheduledTick (Lnet/minecraft/core/BlockPos;Ljava/lang/Object;)Z a
	save ()Lnet/minecraft/nbt/ListTag; b
	scheduleTick (Lnet/minecraft/core/BlockPos;Ljava/lang/Object;ILnet/minecraft/world/level/TickPriority;)V a
	size ()I a
	willTickThisTick (Lnet/minecraft/core/BlockPos;Ljava/lang/Object;)Z b
net/minecraft/world/level/chunk/UpgradeData cgo
	CHUNKY_FIXERS g
	DIRECTIONS c
	EMPTY a
	LOGGER b
	MAP f
	index e
	sides d
	isEmpty ()Z a
	updateState (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
	upgrade (Lnet/minecraft/world/level/chunk/LevelChunk;)V a
	upgradeInside (Lnet/minecraft/world/level/chunk/LevelChunk;)V b
	upgradeSides (Lnet/minecraft/world/level/chunk/LevelChunk;Lnet/minecraft/core/Direction8;)V a
	write ()Lnet/minecraft/nbt/CompoundTag; b
net/minecraft/world/level/chunk/UpgradeData$BlockFixer cgo$a
	processChunk (Lnet/minecraft/world/level/LevelAccessor;)V a
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
net/minecraft/world/level/chunk/UpgradeData$BlockFixers cgo$b
	$VALUES g
	BLACKLIST a
	CHEST c
	DEFAULT b
	DIRECTIONS f
	LEAVES d
	STEM_BLOCK e
net/minecraft/world/level/chunk/storage/ChunkSerializer cgq
	LOGGER a
	getChunkTypeFromTag (Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/world/level/chunk/ChunkStatus$ChunkType; a
	packOffsets ([Lit/unimi/dsi/fastutil/shorts/ShortList;)Lnet/minecraft/nbt/ListTag; a
	packStructureData (Lnet/minecraft/world/level/ChunkPos;Ljava/util/Map;Ljava/util/Map;)Lnet/minecraft/nbt/CompoundTag; a
	postLoadChunk (Lnet/minecraft/nbt/CompoundTag;Lnet/minecraft/world/level/chunk/LevelChunk;)V a
	read (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureManager;Lnet/minecraft/world/entity/ai/village/poi/PoiManager;Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/world/level/chunk/ProtoChunk; a
	unpackStructureReferences (Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/nbt/CompoundTag;)Ljava/util/Map; a
	unpackStructureStart (Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureManager;Lnet/minecraft/nbt/CompoundTag;J)Ljava/util/Map; a
	write (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/level/chunk/ChunkAccess;)Lnet/minecraft/nbt/CompoundTag; a
net/minecraft/world/level/chunk/storage/ChunkStorage cgr
	fixerUpper b
	legacyStructureHandler c
	worker a
	flushWorker ()V i
	getVersion (Lnet/minecraft/nbt/CompoundTag;)I a
	read (Lnet/minecraft/world/level/ChunkPos;)Lnet/minecraft/nbt/CompoundTag; e
	upgradeChunkTag (Lnet/minecraft/resources/ResourceKey;Ljava/util/function/Supplier;Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/nbt/CompoundTag; a
	write (Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/nbt/CompoundTag;)V a
net/minecraft/world/level/chunk/storage/IOWorker cgs
	LOGGER a
	mailbox c
	pendingWrites e
	shutdownRequested b
	storage d
	load (Lnet/minecraft/world/level/ChunkPos;)Lnet/minecraft/nbt/CompoundTag; a
	runStore (Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/world/level/chunk/storage/IOWorker$PendingStore;)V a
	store (Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/nbt/CompoundTag;)Ljava/util/concurrent/CompletableFuture; a
	storePendingChunk ()V b
	submitTask (Ljava/util/function/Supplier;)Ljava/util/concurrent/CompletableFuture; a
	synchronize ()Ljava/util/concurrent/CompletableFuture; a
	tellStorePending ()V c
net/minecraft/world/level/chunk/storage/IOWorker$PendingStore cgs$a
	data a
	result b
net/minecraft/world/level/chunk/storage/IOWorker$Priority cgs$b
	$VALUES c
	HIGH a
	LOW b
net/minecraft/world/level/chunk/storage/OldChunkStorage cgt
	convertToAnvilFormat (Lnet/minecraft/core/RegistryAccess$RegistryHolder;Lnet/minecraft/world/level/chunk/storage/OldChunkStorage$OldLevelChunk;Lnet/minecraft/nbt/CompoundTag;Lnet/minecraft/world/level/biome/BiomeSource;)V a
	load (Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/world/level/chunk/storage/OldChunkStorage$OldLevelChunk; a
net/minecraft/world/level/chunk/storage/OldChunkStorage$OldLevelChunk cgt$a
	blockEntities i
	blockLight d
	blockTicks j
	blocks g
	data f
	entities h
	heightmap c
	lastUpdated a
	skyLight e
	terrainPopulated b
	x k
	z l
net/minecraft/world/level/chunk/storage/RegionBitmap cgu
	used a
	allocate (I)I a
	force (II)V a
	free (II)V b
	getUsed ()Lit/unimi/dsi/fastutil/ints/IntSet; a
net/minecraft/world/level/chunk/storage/RegionFile cgv
	LOGGER b
	PADDING_BUFFER c
	externalFileDir e
	file d
	header g
	offsets h
	timestamps i
	usedSectors a
	version f
	createChunkInputStream (Lnet/minecraft/world/level/ChunkPos;BLjava/io/InputStream;)Ljava/io/DataInputStream; a
	createExternalChunkInputStream (Lnet/minecraft/world/level/ChunkPos;B)Ljava/io/DataInputStream; a
	createExternalStub ()Ljava/nio/ByteBuffer; b
	createStream (Ljava/nio/ByteBuffer;I)Ljava/io/ByteArrayInputStream; a
	doesChunkExist (Lnet/minecraft/world/level/ChunkPos;)Z b
	flush ()V a
	getChunkDataInputStream (Lnet/minecraft/world/level/ChunkPos;)Ljava/io/DataInputStream; a
	getChunkDataOutputStream (Lnet/minecraft/world/level/ChunkPos;)Ljava/io/DataOutputStream; c
	getExternalChunkPath (Lnet/minecraft/world/level/ChunkPos;)Ljava/nio/file/Path; e
	getExternalChunkVersion (B)B b
	getNumSectors (I)I a
	getOffset (Lnet/minecraft/world/level/ChunkPos;)I f
	getOffsetIndex (Lnet/minecraft/world/level/ChunkPos;)I g
	getSectorNumber (I)I b
	hasChunk (Lnet/minecraft/world/level/ChunkPos;)Z d
	isExternalStreamChunk (B)Z a
	packSectorOffset (II)I a
	padToFullSector ()V d
	sizeToSectors (I)I c
	write (Lnet/minecraft/world/level/ChunkPos;Ljava/nio/ByteBuffer;)V a
	writeHeader ()V c
	writeToExternalFile (Ljava/nio/file/Path;Ljava/nio/ByteBuffer;)Lnet/minecraft/world/level/chunk/storage/RegionFile$CommitOp; a
net/minecraft/world/level/chunk/storage/RegionFile$ChunkBuffer cgv$a
	pos b
net/minecraft/world/level/chunk/storage/RegionFile$CommitOp cgv$b
net/minecraft/world/level/chunk/storage/RegionFileStorage cgw
	folder b
	regionCache a
	sync c
	flush ()V a
	getRegionFile (Lnet/minecraft/world/level/ChunkPos;)Lnet/minecraft/world/level/chunk/storage/RegionFile; b
	read (Lnet/minecraft/world/level/ChunkPos;)Lnet/minecraft/nbt/CompoundTag; a
	write (Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/nbt/CompoundTag;)V a
net/minecraft/world/level/chunk/storage/RegionFileVersion cgx
	VERSIONS d
	VERSION_DEFLATE b
	VERSION_GZIP a
	VERSION_NONE c
	id e
	inputWrapper f
	outputWrapper g
	fromId (I)Lnet/minecraft/world/level/chunk/storage/RegionFileVersion; a
	getId ()I a
	isValidVersion (I)Z b
	register (Lnet/minecraft/world/level/chunk/storage/RegionFileVersion;)Lnet/minecraft/world/level/chunk/storage/RegionFileVersion; a
	wrap (Ljava/io/InputStream;)Ljava/io/InputStream; a
	wrap (Ljava/io/OutputStream;)Ljava/io/OutputStream; a
net/minecraft/world/level/chunk/storage/RegionFileVersion$StreamWrapper cgx$a
net/minecraft/world/level/chunk/storage/SectionStorage cgy
	LOGGER a
	codec e
	dirty d
	factory f
	fixerUpper g
	storage c
	type h
	worker b
	flush (Lnet/minecraft/world/level/ChunkPos;)V a
	get (J)Ljava/util/Optional; c
	getOrCreate (J)Ljava/lang/Object; e
	getOrLoad (J)Ljava/util/Optional; d
	getVersion (Lcom/mojang/serialization/Dynamic;)I a
	onSectionLoad (J)V b
	outsideStoredRange (Lnet/minecraft/core/SectionPos;)Z b
	readColumn (Lnet/minecraft/world/level/ChunkPos;)V b
	readColumn (Lnet/minecraft/world/level/ChunkPos;Lcom/mojang/serialization/DynamicOps;Ljava/lang/Object;)V a
	setDirty (J)V a
	tick (Ljava/util/function/BooleanSupplier;)V a
	tryRead (Lnet/minecraft/world/level/ChunkPos;)Lnet/minecraft/nbt/CompoundTag; c
	writeColumn (Lnet/minecraft/world/level/ChunkPos;)V d
	writeColumn (Lnet/minecraft/world/level/ChunkPos;Lcom/mojang/serialization/DynamicOps;)Lcom/mojang/serialization/Dynamic; a
net/minecraft/world/level/dimension/DimensionType cha
	CODEC n
	DEFAULT_END k
	DEFAULT_NETHER j
	DEFAULT_OVERWORLD i
	DEFAULT_OVERWORLD_CAVES m
	DIRECT_CODEC d
	END_EFFECTS c
	END_LOCATION h
	MOON_BRIGHTNESS_PER_PHASE e
	NETHER_EFFECTS b
	NETHER_LOCATION g
	OVERWORLD_CAVES_LOCATION l
	OVERWORLD_EFFECTS a
	OVERWORLD_LOCATION f
	ambientLight D
	bedWorks w
	biomeZoomer A
	brightnessRamp E
	coordinateScale t
	createDragonFight u
	effectsLocation C
	fixedTime o
	hasCeiling q
	hasRaids y
	hasSkylight p
	infiniburn B
	logicalHeight z
	natural s
	piglinSafe v
	respawnAnchorWorks x
	ultraWarm r
	bedWorks ()Z h
	brightness (I)F a
	coordinateScale ()D f
	createDragonFight ()Z l
	defaultDimensions (Lnet/minecraft/core/Registry;Lnet/minecraft/core/Registry;Lnet/minecraft/core/Registry;J)Lnet/minecraft/core/MappedRegistry; a
	defaultEndGenerator (Lnet/minecraft/core/Registry;Lnet/minecraft/core/Registry;J)Lnet/minecraft/world/level/chunk/ChunkGenerator; a
	defaultNetherGenerator (Lnet/minecraft/core/Registry;Lnet/minecraft/core/Registry;J)Lnet/minecraft/world/level/chunk/ChunkGenerator; b
	effectsLocation ()Lnet/minecraft/resources/ResourceLocation; p
	equalTo (Lnet/minecraft/world/level/dimension/DimensionType;)Z a
	fillBrightnessRamp (F)[F a
	getBiomeZoomer ()Lnet/minecraft/world/level/biome/BiomeZoomer; m
	getFileSuffix ()Ljava/lang/String; a
	getStorageFolder (Lnet/minecraft/resources/ResourceKey;Ljava/io/File;)Ljava/io/File; a
	getTeleportationScale (Lnet/minecraft/world/level/dimension/DimensionType;Lnet/minecraft/world/level/dimension/DimensionType;)D a
	hasCeiling ()Z c
	hasFixedTime ()Z n
	hasRaids ()Z j
	hasSkyLight ()Z b
	infiniburn ()Lnet/minecraft/tags/Tag; o
	logicalHeight ()I k
	moonPhase (J)I b
	natural ()Z e
	parseLegacy (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/DataResult; a
	piglinSafe ()Z g
	registerBuiltin (Lnet/minecraft/core/RegistryAccess$RegistryHolder;)Lnet/minecraft/core/RegistryAccess$RegistryHolder; a
	respawnAnchorWorks ()Z i
	timeOfDay (J)F a
	ultraWarm ()Z d
net/minecraft/world/level/dimension/LevelStem chb
	BUILTIN_ORDER e
	CODEC a
	END d
	NETHER c
	OVERWORLD b
	generator g
	type f
	generator ()Lnet/minecraft/world/level/chunk/ChunkGenerator; c
	sortMap (Lnet/minecraft/core/MappedRegistry;)Lnet/minecraft/core/MappedRegistry; a
	stable (JLnet/minecraft/core/MappedRegistry;)Z a
	type ()Lnet/minecraft/world/level/dimension/DimensionType; b
	typeSupplier ()Ljava/util/function/Supplier; a
net/minecraft/world/level/dimension/end/DragonRespawnAnimation chc
	$VALUES f
	END e
	PREPARING_TO_SUMMON_PILLARS b
	START a
	SUMMONING_DRAGON d
	SUMMONING_PILLARS c
	tick (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/level/dimension/end/EndDragonFight;Ljava/util/List;ILnet/minecraft/core/BlockPos;)V a
net/minecraft/world/level/dimension/end/EndDragonFight chd
	LOGGER a
	VALID_PLAYER b
	crystalsAlive h
	dragonEvent c
	dragonKilled k
	dragonUUID m
	exitPortalPattern f
	gateways e
	level d
	needsStateScanning n
	portalLocation o
	previouslyKilled l
	respawnCrystals r
	respawnStage p
	respawnTime q
	ticksSinceCrystalsScanned i
	ticksSinceDragonSeen g
	ticksSinceLastPlayerScan j
	createNewDragon ()Lnet/minecraft/world/entity/boss/enderdragon/EnderDragon; o
	findExitPortal ()Lnet/minecraft/world/level/block/state/pattern/BlockPattern$BlockPatternMatch; j
	findOrCreateDragon ()V h
	getCrystalsAlive ()I c
	hasActiveExitPortal ()Z i
	hasPreviouslyKilledDragon ()Z d
	isArenaLoaded ()Z k
	onCrystalDestroyed (Lnet/minecraft/world/entity/boss/enderdragon/EndCrystal;Lnet/minecraft/world/damagesource/DamageSource;)V a
	resetSpikeCrystals ()V f
	respawnDragon (Ljava/util/List;)V a
	saveData ()Lnet/minecraft/nbt/CompoundTag; a
	scanState ()V g
	setDragonKilled (Lnet/minecraft/world/entity/boss/enderdragon/EnderDragon;)V a
	setRespawnStage (Lnet/minecraft/world/level/dimension/end/DragonRespawnAnimation;)V a
	spawnExitPortal (Z)V a
	spawnNewGateway ()V n
	spawnNewGateway (Lnet/minecraft/core/BlockPos;)V a
	tick ()V b
	tryRespawn ()V e
	updateCrystalCount ()V m
	updateDragon (Lnet/minecraft/world/entity/boss/enderdragon/EnderDragon;)V b
	updatePlayers ()V l
net/minecraft/world/level/levelgen/DebugLevelSource chg
	AIR e
	ALL_BLOCKS g
	BARRIER f
	CODEC d
	GRID_HEIGHT i
	GRID_WIDTH h
	biomes j
	applyBiomeDecoration (Lnet/minecraft/server/level/WorldGenRegion;Lnet/minecraft/world/level/StructureFeatureManager;)V a
	applyCarvers (JLnet/minecraft/world/level/biome/BiomeManager;Lnet/minecraft/world/level/chunk/ChunkAccess;Lnet/minecraft/world/level/levelgen/GenerationStep$Carving;)V a
	biomes ()Lnet/minecraft/core/Registry; g
	buildSurfaceAndBedrock (Lnet/minecraft/server/level/WorldGenRegion;Lnet/minecraft/world/level/chunk/ChunkAccess;)V a
	codec ()Lcom/mojang/serialization/Codec; a
	fillFromNoise (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/world/level/StructureFeatureManager;Lnet/minecraft/world/level/chunk/ChunkAccess;)V a
	getBaseColumn (II)Lnet/minecraft/world/level/BlockGetter; a
	getBaseHeight (IILnet/minecraft/world/level/levelgen/Heightmap$Types;)I a
	getBlockStateFor (II)Lnet/minecraft/world/level/block/state/BlockState; b
	withSeed (J)Lnet/minecraft/world/level/chunk/ChunkGenerator; a
net/minecraft/world/level/levelgen/Decoratable chh
	chance (I)Ljava/lang/Object; a
	count (I)Ljava/lang/Object; b
	count (Lnet/minecraft/util/UniformInt;)Ljava/lang/Object; a
	countRandom (I)Ljava/lang/Object; c
	decorated (Lnet/minecraft/world/level/levelgen/placement/ConfiguredDecorator;)Ljava/lang/Object; a
	range (I)Ljava/lang/Object; d
	squared ()Ljava/lang/Object; a
net/minecraft/world/level/levelgen/FlatLevelSource chi
	CODEC d
	settings e
	buildSurfaceAndBedrock (Lnet/minecraft/server/level/WorldGenRegion;Lnet/minecraft/world/level/chunk/ChunkAccess;)V a
	codec ()Lcom/mojang/serialization/Codec; a
	fillFromNoise (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/world/level/StructureFeatureManager;Lnet/minecraft/world/level/chunk/ChunkAccess;)V a
	getBaseColumn (II)Lnet/minecraft/world/level/BlockGetter; a
	getBaseHeight (IILnet/minecraft/world/level/levelgen/Heightmap$Types;)I a
	getSpawnHeight ()I c
	settings ()Lnet/minecraft/world/level/levelgen/flat/FlatLevelGeneratorSettings; g
	withSeed (J)Lnet/minecraft/world/level/chunk/ChunkGenerator; a
net/minecraft/world/level/levelgen/GenerationStep chj
net/minecraft/world/level/levelgen/GenerationStep$Carving chj$a
	$VALUES f
	AIR a
	BY_NAME d
	CODEC c
	LIQUID b
	name e
	byName (Ljava/lang/String;)Lnet/minecraft/world/level/levelgen/GenerationStep$Carving; a
	getName ()Ljava/lang/String; b
	getSerializedName ()Ljava/lang/String; a
net/minecraft/world/level/levelgen/GenerationStep$Decoration chj$b
	$VALUES k
	LAKES b
	LOCAL_MODIFICATIONS c
	RAW_GENERATION a
	STRONGHOLDS f
	SURFACE_STRUCTURES e
	TOP_LAYER_MODIFICATION j
	UNDERGROUND_DECORATION h
	UNDERGROUND_ORES g
	UNDERGROUND_STRUCTURES d
	VEGETAL_DECORATION i
net/minecraft/world/level/levelgen/Heightmap chk
	MATERIAL_MOTION_BLOCKING b
	NOT_AIR a
	chunk e
	data c
	isOpaque d
	getFirstAvailable (I)I a
	getFirstAvailable (II)I a
	getHighestTaken (II)I b
	getIndex (II)I c
	getRawData ()[J a
	primeHeightmaps (Lnet/minecraft/world/level/chunk/ChunkAccess;Ljava/util/Set;)V a
	setHeight (III)V a
	setRawData ([J)V a
	update (IIILnet/minecraft/world/level/block/state/BlockState;)Z a
net/minecraft/world/level/levelgen/Heightmap$Types chk$a
	$VALUES l
	CODEC g
	MOTION_BLOCKING e
	MOTION_BLOCKING_NO_LEAVES f
	OCEAN_FLOOR d
	OCEAN_FLOOR_WG c
	REVERSE_LOOKUP k
	WORLD_SURFACE b
	WORLD_SURFACE_WG a
	isOpaque j
	serializationKey h
	usage i
	getFromKey (Ljava/lang/String;)Lnet/minecraft/world/level/levelgen/Heightmap$Types; a
	getSerializationKey ()Ljava/lang/String; b
	getSerializedName ()Ljava/lang/String; a
	isOpaque ()Ljava/util/function/Predicate; e
	keepAfterWorldgen ()Z d
	sendToClient ()Z c
net/minecraft/world/level/levelgen/Heightmap$Usage chk$b
	$VALUES d
	CLIENT c
	LIVE_WORLD b
	WORLDGEN a
net/minecraft/world/level/levelgen/NoiseBasedChunkGenerator chl
	AIR k
	BEARD_KERNEL i
	BIOME_WEIGHTS j
	CODEC d
	chunkCountX n
	chunkCountY o
	chunkCountZ p
	chunkHeight l
	chunkWidth m
	defaultBlock f
	defaultFluid g
	depthNoise u
	height x
	islandNoise v
	mainPerlinNoise s
	maxLimitPerlinNoise r
	minLimitPerlinNoise q
	random e
	seed w
	settings h
	surfaceNoise t
	buildSurfaceAndBedrock (Lnet/minecraft/server/level/WorldGenRegion;Lnet/minecraft/world/level/chunk/ChunkAccess;)V a
	codec ()Lcom/mojang/serialization/Codec; a
	computeContribution (III)D b
	fillFromNoise (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/world/level/StructureFeatureManager;Lnet/minecraft/world/level/chunk/ChunkAccess;)V a
	fillNoiseColumn ([DII)V a
	generateBaseState (DI)Lnet/minecraft/world/level/block/state/BlockState; a
	getBaseColumn (II)Lnet/minecraft/world/level/BlockGetter; a
	getBaseHeight (IILnet/minecraft/world/level/levelgen/Heightmap$Types;)I a
	getContribution (III)D a
	getGenDepth ()I e
	getMobsAt (Lnet/minecraft/world/level/biome/Biome;Lnet/minecraft/world/level/StructureFeatureManager;Lnet/minecraft/world/entity/MobCategory;Lnet/minecraft/core/BlockPos;)Ljava/util/List; a
	getRandomDensity (II)D c
	getSeaLevel ()I f
	iterateNoiseColumn (II[Lnet/minecraft/world/level/block/state/BlockState;Ljava/util/function/Predicate;)I a
	makeAndFillNoiseColumn (II)[D b
	sampleAndClampNoise (IIIDDDD)D a
	setBedrock (Lnet/minecraft/world/level/chunk/ChunkAccess;Ljava/util/Random;)V a
	spawnOriginalMobs (Lnet/minecraft/server/level/WorldGenRegion;)V a
	stable (JLnet/minecraft/resources/ResourceKey;)Z a
	withSeed (J)Lnet/minecraft/world/level/chunk/ChunkGenerator; a
net/minecraft/world/level/levelgen/NoiseGeneratorSettings chm
	AMPLIFIED d
	BUILTIN_OVERWORLD q
	CAVES g
	CODEC b
	DIRECT_CODEC a
	END f
	FLOATING_ISLANDS h
	NETHER e
	OVERWORLD c
	bedrockFloorPosition n
	bedrockRoofPosition m
	defaultBlock k
	defaultFluid l
	disableMobGeneration p
	noiseSettings j
	seaLevel o
	structureSettings i
	bootstrap ()Lnet/minecraft/world/level/levelgen/NoiseGeneratorSettings; i
	disableMobGeneration ()Z h
	end (Lnet/minecraft/world/level/levelgen/StructureSettings;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/resources/ResourceLocation;ZZ)Lnet/minecraft/world/level/levelgen/NoiseGeneratorSettings; a
	getBedrockFloorPosition ()I f
	getBedrockRoofPosition ()I e
	getDefaultBlock ()Lnet/minecraft/world/level/block/state/BlockState; c
	getDefaultFluid ()Lnet/minecraft/world/level/block/state/BlockState; d
	nether (Lnet/minecraft/world/level/levelgen/StructureSettings;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/world/level/levelgen/NoiseGeneratorSettings; a
	noiseSettings ()Lnet/minecraft/world/level/levelgen/NoiseSettings; b
	overworld (Lnet/minecraft/world/level/levelgen/StructureSettings;ZLnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/world/level/levelgen/NoiseGeneratorSettings; a
	register (Lnet/minecraft/resources/ResourceKey;Lnet/minecraft/world/level/levelgen/NoiseGeneratorSettings;)Lnet/minecraft/world/level/levelgen/NoiseGeneratorSettings; a
	seaLevel ()I g
	stable (Lnet/minecraft/resources/ResourceKey;)Z a
	structureSettings ()Lnet/minecraft/world/level/levelgen/StructureSettings; a
net/minecraft/world/level/levelgen/NoiseSamplingSettings chn
	CODEC a
	SCALE_RANGE b
	xzFactor e
	xzScale c
	yFactor f
	yScale d
	xzFactor ()D c
	xzScale ()D a
	yFactor ()D d
	yScale ()D b
net/minecraft/world/level/levelgen/NoiseSettings cho
	CODEC a
	bottomSlideSettings e
	densityFactor h
	densityOffset i
	height b
	isAmplified m
	islandNoiseOverride l
	noiseSamplingSettings c
	noiseSizeHorizontal f
	noiseSizeVertical g
	randomDensityOffset k
	topSlideSettings d
	useSimplexSurfaceNoise j
	bottomSlideSettings ()Lnet/minecraft/world/level/levelgen/NoiseSlideSettings; d
	densityFactor ()D g
	densityOffset ()D h
	height ()I a
	isAmplified ()Z l
	islandNoiseOverride ()Z k
	noiseSamplingSettings ()Lnet/minecraft/world/level/levelgen/NoiseSamplingSettings; b
	noiseSizeHorizontal ()I e
	noiseSizeVertical ()I f
	randomDensityOffset ()Z j
	topSlideSettings ()Lnet/minecraft/world/level/levelgen/NoiseSlideSettings; c
	useSimplexSurfaceNoise ()Z i
net/minecraft/world/level/levelgen/NoiseSlideSettings chp
	CODEC a
	offset d
	size c
	target b
	offset ()I c
	size ()I b
	target ()I a
net/minecraft/world/level/levelgen/PatrolSpawner chq
	nextTick a
	spawnPatrolMember (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Ljava/util/Random;Z)Z a
	tick (Lnet/minecraft/server/level/ServerLevel;ZZ)I a
net/minecraft/world/level/levelgen/PhantomSpawner chr
	nextTick a
	tick (Lnet/minecraft/server/level/ServerLevel;ZZ)I a
net/minecraft/world/level/levelgen/StructureSettings chs
	CODEC a
	DEFAULTS b
	DEFAULT_STRONGHOLD c
	stronghold e
	structureConfig d
	getConfig (Lnet/minecraft/world/level/levelgen/feature/StructureFeature;)Lnet/minecraft/world/level/levelgen/feature/configurations/StructureFeatureConfiguration; a
	stronghold ()Lnet/minecraft/world/level/levelgen/feature/configurations/StrongholdConfiguration; b
	structureConfig ()Ljava/util/Map; a
net/minecraft/world/level/levelgen/WorldGenSettings cht
	CODEC a
	LOGGER b
	dimensions f
	generateBonusChest e
	generateFeatures d
	legacyCustomOptions g
	seed c
	create (Lnet/minecraft/core/RegistryAccess;Ljava/util/Properties;)Lnet/minecraft/world/level/levelgen/WorldGenSettings; a
	demoSettings (Lnet/minecraft/core/RegistryAccess;)Lnet/minecraft/world/level/levelgen/WorldGenSettings; a
	dimensions ()Lnet/minecraft/core/MappedRegistry; d
	generateBonusChest ()Z c
	generateFeatures ()Z b
	guardExperimental ()Lcom/mojang/serialization/DataResult; m
	isDebug ()Z g
	isFlatWorld ()Z h
	isOldCustomizedWorld ()Z i
	levels ()Lcom/google/common/collect/ImmutableSet; f
	makeDefault (Lnet/minecraft/core/Registry;Lnet/minecraft/core/Registry;Lnet/minecraft/core/Registry;)Lnet/minecraft/world/level/levelgen/WorldGenSettings; a
	makeDefaultOverworld (Lnet/minecraft/core/Registry;Lnet/minecraft/core/Registry;J)Lnet/minecraft/world/level/levelgen/NoiseBasedChunkGenerator; a
	overworld ()Lnet/minecraft/world/level/chunk/ChunkGenerator; e
	seed ()J a
	stable ()Z n
	withBonusChest ()Lnet/minecraft/world/level/levelgen/WorldGenSettings; j
	withBonusChestToggled ()Lnet/minecraft/world/level/levelgen/WorldGenSettings; l
	withFeaturesToggled ()Lnet/minecraft/world/level/levelgen/WorldGenSettings; k
	withOverworld (Lnet/minecraft/core/MappedRegistry;Ljava/util/function/Supplier;Lnet/minecraft/world/level/chunk/ChunkGenerator;)Lnet/minecraft/core/MappedRegistry; a
	withOverworld (Lnet/minecraft/core/Registry;Lnet/minecraft/core/MappedRegistry;Lnet/minecraft/world/level/chunk/ChunkGenerator;)Lnet/minecraft/core/MappedRegistry; a
	withSeed (ZLjava/util/OptionalLong;)Lnet/minecraft/world/level/levelgen/WorldGenSettings; a
net/minecraft/world/level/levelgen/WorldgenRandom chu
	count a
	consumeCount (I)V a
	getCount ()I a
	seedSlimeChunk (IIJJ)Ljava/util/Random; a
	setBaseChunkSeed (II)J a
	setDecorationSeed (JII)J a
	setFeatureSeed (JII)J b
	setLargeFeatureSeed (JII)J c
	setLargeFeatureWithSalt (JIII)J a
net/minecraft/world/level/levelgen/carver/CanyonWorldCarver chv
	rs m
	carve (Lnet/minecraft/world/level/chunk/ChunkAccess;Ljava/util/function/Function;Ljava/util/Random;IIIIILjava/util/BitSet;Lnet/minecraft/world/level/levelgen/carver/CarverConfiguration;)Z a
	carve (Lnet/minecraft/world/level/chunk/ChunkAccess;Ljava/util/function/Function;Ljava/util/Random;IIIIILjava/util/BitSet;Lnet/minecraft/world/level/levelgen/feature/configurations/ProbabilityFeatureConfiguration;)Z a
	genCanyon (Lnet/minecraft/world/level/chunk/ChunkAccess;Ljava/util/function/Function;JIIIDDDFFFIIDLjava/util/BitSet;)V a
	isStartChunk (Ljava/util/Random;IILnet/minecraft/world/level/levelgen/carver/CarverConfiguration;)Z a
	isStartChunk (Ljava/util/Random;IILnet/minecraft/world/level/levelgen/feature/configurations/ProbabilityFeatureConfiguration;)Z a
	skip (DDDI)Z a
net/minecraft/world/level/levelgen/carver/CarverConfiguration chw
	NONE a
net/minecraft/world/level/levelgen/carver/CaveWorldCarver chx
	carve (Lnet/minecraft/world/level/chunk/ChunkAccess;Ljava/util/function/Function;Ljava/util/Random;IIIIILjava/util/BitSet;Lnet/minecraft/world/level/levelgen/carver/CarverConfiguration;)Z a
	carve (Lnet/minecraft/world/level/chunk/ChunkAccess;Ljava/util/function/Function;Ljava/util/Random;IIIIILjava/util/BitSet;Lnet/minecraft/world/level/levelgen/feature/configurations/ProbabilityFeatureConfiguration;)Z a
	genRoom (Lnet/minecraft/world/level/chunk/ChunkAccess;Ljava/util/function/Function;JIIIDDDFDLjava/util/BitSet;)V a
	genTunnel (Lnet/minecraft/world/level/chunk/ChunkAccess;Ljava/util/function/Function;JIIIDDDFFFIIDLjava/util/BitSet;)V a
	getCaveBound ()I a
	getCaveY (Ljava/util/Random;)I b
	getThickness (Ljava/util/Random;)F a
	getYScale ()D b
	isStartChunk (Ljava/util/Random;IILnet/minecraft/world/level/levelgen/carver/CarverConfiguration;)Z a
	isStartChunk (Ljava/util/Random;IILnet/minecraft/world/level/levelgen/feature/configurations/ProbabilityFeatureConfiguration;)Z a
	skip (DDDI)Z a
net/minecraft/world/level/levelgen/carver/ConfiguredWorldCarver chy
	CODEC b
	DIRECT_CODEC a
	LIST_CODEC c
	config e
	worldCarver d
	carve (Lnet/minecraft/world/level/chunk/ChunkAccess;Ljava/util/function/Function;Ljava/util/Random;IIIIILjava/util/BitSet;)Z a
	config ()Lnet/minecraft/world/level/levelgen/carver/CarverConfiguration; a
	isStartChunk (Ljava/util/Random;II)Z a
net/minecraft/world/level/levelgen/carver/NetherWorldCarver chz
	carveBlock (Lnet/minecraft/world/level/chunk/ChunkAccess;Ljava/util/function/Function;Ljava/util/BitSet;Ljava/util/Random;Lnet/minecraft/core/BlockPos$MutableBlockPos;Lnet/minecraft/core/BlockPos$MutableBlockPos;Lnet/minecraft/core/BlockPos$MutableBlockPos;IIIIIIIILorg/apache/commons/lang3/mutable/MutableBoolean;)Z a
	getCaveBound ()I a
	getCaveY (Ljava/util/Random;)I b
	getThickness (Ljava/util/Random;)F a
	getYScale ()D b
net/minecraft/world/level/levelgen/carver/NoneCarverConfiguration cia
	CODEC b
	INSTANCE c
net/minecraft/world/level/levelgen/carver/UnderwaterCanyonWorldCarver cib
	carveBlock (Lnet/minecraft/world/level/chunk/ChunkAccess;Ljava/util/function/Function;Ljava/util/BitSet;Ljava/util/Random;Lnet/minecraft/core/BlockPos$MutableBlockPos;Lnet/minecraft/core/BlockPos$MutableBlockPos;Lnet/minecraft/core/BlockPos$MutableBlockPos;IIIIIIIILorg/apache/commons/lang3/mutable/MutableBoolean;)Z a
	hasWater (Lnet/minecraft/world/level/chunk/ChunkAccess;IIIIIIII)Z a
net/minecraft/world/level/levelgen/carver/UnderwaterCaveWorldCarver cic
	carveBlock (Lnet/minecraft/world/level/chunk/ChunkAccess;Ljava/util/function/Function;Ljava/util/BitSet;Ljava/util/Random;Lnet/minecraft/core/BlockPos$MutableBlockPos;Lnet/minecraft/core/BlockPos$MutableBlockPos;Lnet/minecraft/core/BlockPos$MutableBlockPos;IIIIIIIILorg/apache/commons/lang3/mutable/MutableBoolean;)Z a
	carveBlock (Lnet/minecraft/world/level/levelgen/carver/WorldCarver;Lnet/minecraft/world/level/chunk/ChunkAccess;Ljava/util/BitSet;Ljava/util/Random;Lnet/minecraft/core/BlockPos$MutableBlockPos;IIIIIIII)Z a
	hasWater (Lnet/minecraft/world/level/chunk/ChunkAccess;IIIIIIII)Z a
net/minecraft/world/level/levelgen/carver/WorldCarver cid
	AIR f
	CANYON c
	CAVE a
	CAVE_AIR g
	LAVA i
	NETHER_CAVE b
	UNDERWATER_CANYON d
	UNDERWATER_CAVE e
	WATER h
	configuredCodec m
	genHeight l
	liquids k
	replaceableBlocks j
	canReach (IIDDIIF)Z a
	canReplaceBlock (Lnet/minecraft/world/level/block/state/BlockState;)Z a
	canReplaceBlock (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/state/BlockState;)Z a
	carve (Lnet/minecraft/world/level/chunk/ChunkAccess;Ljava/util/function/Function;Ljava/util/Random;IIIIILjava/util/BitSet;Lnet/minecraft/world/level/levelgen/carver/CarverConfiguration;)Z a
	carveBlock (Lnet/minecraft/world/level/chunk/ChunkAccess;Ljava/util/function/Function;Ljava/util/BitSet;Ljava/util/Random;Lnet/minecraft/core/BlockPos$MutableBlockPos;Lnet/minecraft/core/BlockPos$MutableBlockPos;Lnet/minecraft/core/BlockPos$MutableBlockPos;IIIIIIIILorg/apache/commons/lang3/mutable/MutableBoolean;)Z a
	carveSphere (Lnet/minecraft/world/level/chunk/ChunkAccess;Ljava/util/function/Function;JIIIDDDDDLjava/util/BitSet;)Z a
	configured (Lnet/minecraft/world/level/levelgen/carver/CarverConfiguration;)Lnet/minecraft/world/level/levelgen/carver/ConfiguredWorldCarver; a
	configuredCodec ()Lcom/mojang/serialization/Codec; c
	getRange ()I d
	hasWater (Lnet/minecraft/world/level/chunk/ChunkAccess;IIIIIIII)Z a
	isEdge (IIIIII)Z a
	isStartChunk (Ljava/util/Random;IILnet/minecraft/world/level/levelgen/carver/CarverConfiguration;)Z a
	register (Ljava/lang/String;Lnet/minecraft/world/level/levelgen/carver/WorldCarver;)Lnet/minecraft/world/level/levelgen/carver/WorldCarver; a
	skip (DDDI)Z a
net/minecraft/world/level/levelgen/feature/AbstractFlowerFeature cif
	getCount (Lnet/minecraft/world/level/levelgen/feature/configurations/FeatureConfiguration;)I a
	getPos (Ljava/util/Random;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/levelgen/feature/configurations/FeatureConfiguration;)Lnet/minecraft/core/BlockPos; a
	getRandomFlower (Ljava/util/Random;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/levelgen/feature/configurations/FeatureConfiguration;)Lnet/minecraft/world/level/block/state/BlockState; b
	isValid (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/levelgen/feature/configurations/FeatureConfiguration;)Z a
	place (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/chunk/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/levelgen/feature/configurations/FeatureConfiguration;)Z a
net/minecraft/world/level/levelgen/feature/AbstractHugeMushroomFeature cig
	getTreeHeight (Ljava/util/Random;)I a
	getTreeRadiusForHeight (IIII)I a
	isValidPosition (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;ILnet/minecraft/core/BlockPos$MutableBlockPos;Lnet/minecraft/world/level/levelgen/feature/configurations/HugeMushroomFeatureConfiguration;)Z a
	makeCap (Lnet/minecraft/world/level/LevelAccessor;Ljava/util/Random;Lnet/minecraft/core/BlockPos;ILnet/minecraft/core/BlockPos$MutableBlockPos;Lnet/minecraft/world/level/levelgen/feature/configurations/HugeMushroomFeatureConfiguration;)V a
	place (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/chunk/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/levelgen/feature/configurations/FeatureConfiguration;)Z a
	place (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/chunk/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/levelgen/feature/configurations/HugeMushroomFeatureConfiguration;)Z a
	placeTrunk (Lnet/minecraft/world/level/LevelAccessor;Ljava/util/Random;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/levelgen/feature/configurations/HugeMushroomFeatureConfiguration;ILnet/minecraft/core/BlockPos$MutableBlockPos;)V a
net/minecraft/world/level/levelgen/feature/BambooFeature cih
	BAMBOO_FINAL_LARGE ab
	BAMBOO_TOP_LARGE ac
	BAMBOO_TOP_SMALL ad
	BAMBOO_TRUNK a
	place (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/chunk/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/levelgen/feature/configurations/FeatureConfiguration;)Z a
	place (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/chunk/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/levelgen/feature/configurations/ProbabilityFeatureConfiguration;)Z a
net/minecraft/world/level/levelgen/feature/BasaltColumnsFeature cii
	CANNOT_PLACE_ON a
	canPlaceAt (Lnet/minecraft/world/level/LevelAccessor;ILnet/minecraft/core/BlockPos$MutableBlockPos;)Z a
	findAir (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos$MutableBlockPos;I)Lnet/minecraft/core/BlockPos; a
	findSurface (Lnet/minecraft/world/level/LevelAccessor;ILnet/minecraft/core/BlockPos$MutableBlockPos;I)Lnet/minecraft/core/BlockPos; a
	isAirOrLavaOcean (Lnet/minecraft/world/level/LevelAccessor;ILnet/minecraft/core/BlockPos;)Z a
	place (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/chunk/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/levelgen/feature/configurations/ColumnFeatureConfiguration;)Z a
	place (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/chunk/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/levelgen/feature/configurations/FeatureConfiguration;)Z a
	placeColumn (Lnet/minecraft/world/level/LevelAccessor;ILnet/minecraft/core/BlockPos;II)Z a
net/minecraft/world/level/levelgen/feature/BasaltPillarFeature cij
	place (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/chunk/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/levelgen/feature/configurations/FeatureConfiguration;)Z a
	place (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/chunk/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/levelgen/feature/configurations/NoneFeatureConfiguration;)Z a
	placeBaseHangOff (Lnet/minecraft/world/level/LevelAccessor;Ljava/util/Random;Lnet/minecraft/core/BlockPos;)V a
	placeHangOff (Lnet/minecraft/world/level/LevelAccessor;Ljava/util/Random;Lnet/minecraft/core/BlockPos;)Z b
net/minecraft/world/level/levelgen/feature/BaseDiskFeature cik
	place (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/chunk/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/levelgen/feature/configurations/DiskConfiguration;)Z a
	place (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/chunk/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/levelgen/feature/configurations/FeatureConfiguration;)Z a
net/minecraft/world/level/levelgen/feature/BastionFeature cil
	isFeatureChunk (Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/world/level/biome/BiomeSource;JLnet/minecraft/world/level/levelgen/WorldgenRandom;IILnet/minecraft/world/level/biome/Biome;Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/world/level/levelgen/feature/configurations/FeatureConfiguration;)Z a
	isFeatureChunk (Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/world/level/biome/BiomeSource;JLnet/minecraft/world/level/levelgen/WorldgenRandom;IILnet/minecraft/world/level/biome/Biome;Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/world/level/levelgen/feature/configurations/JigsawConfiguration;)Z a
net/minecraft/world/level/levelgen/feature/BlockBlobFeature cim
	place (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/chunk/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/levelgen/feature/configurations/BlockStateConfiguration;)Z a
	place (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/chunk/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/levelgen/feature/configurations/FeatureConfiguration;)Z a
net/minecraft/world/level/levelgen/feature/BlockPileFeature cin
	mayPlaceOn (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)Z a
	place (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/chunk/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/levelgen/feature/configurations/BlockPileConfiguration;)Z a
	place (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/chunk/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/levelgen/feature/configurations/FeatureConfiguration;)Z a
	tryPlaceBlock (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Ljava/util/Random;Lnet/minecraft/world/level/levelgen/feature/configurations/BlockPileConfiguration;)V a
net/minecraft/world/level/levelgen/feature/BlueIceFeature cio
	place (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/chunk/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/levelgen/feature/configurations/FeatureConfiguration;)Z a
	place (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/chunk/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/levelgen/feature/configurations/NoneFeatureConfiguration;)Z a
net/minecraft/world/level/levelgen/feature/BonusChestFeature cip
	place (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/chunk/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/levelgen/feature/configurations/FeatureConfiguration;)Z a
	place (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/chunk/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/levelgen/feature/configurations/NoneFeatureConfiguration;)Z a
net/minecraft/world/level/levelgen/feature/BuriedTreasureFeature ciq
	getStartFactory ()Lnet/minecraft/world/level/levelgen/feature/StructureFeature$StructureStartFactory; a
	isFeatureChunk (Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/world/level/biome/BiomeSource;JLnet/minecraft/world/level/levelgen/WorldgenRandom;IILnet/minecraft/world/level/biome/Biome;Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/world/level/levelgen/feature/configurations/FeatureConfiguration;)Z a
	isFeatureChunk (Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/world/level/biome/BiomeSource;JLnet/minecraft/world/level/levelgen/WorldgenRandom;IILnet/minecraft/world/level/biome/Biome;Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/world/level/levelgen/feature/configurations/ProbabilityFeatureConfiguration;)Z a
net/minecraft/world/level/levelgen/feature/BuriedTreasureFeature$BuriedTreasureStart ciq$a
	generatePieces (Lnet/minecraft/core/RegistryAccess;Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureManager;IILnet/minecraft/world/level/biome/Biome;Lnet/minecraft/world/level/levelgen/feature/configurations/FeatureConfiguration;)V a
	generatePieces (Lnet/minecraft/core/RegistryAccess;Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureManager;IILnet/minecraft/world/level/biome/Biome;Lnet/minecraft/world/level/levelgen/feature/configurations/ProbabilityFeatureConfiguration;)V a
	getLocatePos ()Lnet/minecraft/core/BlockPos; a
net/minecraft/world/level/levelgen/feature/ChorusPlantFeature cir
	place (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/chunk/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/levelgen/feature/configurations/FeatureConfiguration;)Z a
	place (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/chunk/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/levelgen/feature/configurations/NoneFeatureConfiguration;)Z a
net/minecraft/world/level/levelgen/feature/ConfiguredFeature cis
	CODEC b
	DIRECT_CODEC a
	LIST_CODEC c
	LOGGER d
	config f
	feature e
	config ()Lnet/minecraft/world/level/levelgen/feature/configurations/FeatureConfiguration; c
	decorated (Lnet/minecraft/world/level/levelgen/placement/ConfiguredDecorator;)Ljava/lang/Object; a
	decorated (Lnet/minecraft/world/level/levelgen/placement/ConfiguredDecorator;)Lnet/minecraft/world/level/levelgen/feature/ConfiguredFeature; b
	feature ()Lnet/minecraft/world/level/levelgen/feature/Feature; b
	getFeatures ()Ljava/util/stream/Stream; d
	place (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/chunk/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/core/BlockPos;)Z a
	weighted (F)Lnet/minecraft/world/level/levelgen/feature/WeightedConfiguredFeature; a
net/minecraft/world/level/levelgen/feature/ConfiguredStructureFeature cit
	CODEC b
	DIRECT_CODEC a
	LIST_CODEC c
	config e
	feature d
	generate (Lnet/minecraft/core/RegistryAccess;Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/world/level/biome/BiomeSource;Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureManager;JLnet/minecraft/world/level/ChunkPos;Lnet/minecraft/world/level/biome/Biome;ILnet/minecraft/world/level/levelgen/feature/configurations/StructureFeatureConfiguration;)Lnet/minecraft/world/level/levelgen/structure/StructureStart; a
net/minecraft/world/level/levelgen/feature/CoralClawFeature ciu
	placeFeature (Lnet/minecraft/world/level/LevelAccessor;Ljava/util/Random;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Z a
net/minecraft/world/level/levelgen/feature/CoralFeature civ
	place (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/chunk/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/levelgen/feature/configurations/FeatureConfiguration;)Z a
	place (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/chunk/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/levelgen/feature/configurations/NoneFeatureConfiguration;)Z a
	placeCoralBlock (Lnet/minecraft/world/level/LevelAccessor;Ljava/util/Random;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Z b
	placeFeature (Lnet/minecraft/world/level/LevelAccessor;Ljava/util/Random;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Z a
net/minecraft/world/level/levelgen/feature/CoralMushroomFeature ciw
	placeFeature (Lnet/minecraft/world/level/LevelAccessor;Ljava/util/Random;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Z a
net/minecraft/world/level/levelgen/feature/CoralTreeFeature cix
	placeFeature (Lnet/minecraft/world/level/LevelAccessor;Ljava/util/Random;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Z a
net/minecraft/world/level/levelgen/feature/DecoratedFeature ciy
	place (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/chunk/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/levelgen/feature/configurations/DecoratedFeatureConfiguration;)Z a
	place (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/chunk/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/levelgen/feature/configurations/FeatureConfiguration;)Z a
net/minecraft/world/level/levelgen/feature/DefaultFlowerFeature ciz
	getCount (Lnet/minecraft/world/level/levelgen/feature/configurations/FeatureConfiguration;)I a
	getCount (Lnet/minecraft/world/level/levelgen/feature/configurations/RandomPatchConfiguration;)I a
	getPos (Ljava/util/Random;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/levelgen/feature/configurations/FeatureConfiguration;)Lnet/minecraft/core/BlockPos; a
	getPos (Ljava/util/Random;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/levelgen/feature/configurations/RandomPatchConfiguration;)Lnet/minecraft/core/BlockPos; a
	getRandomFlower (Ljava/util/Random;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/levelgen/feature/configurations/FeatureConfiguration;)Lnet/minecraft/world/level/block/state/BlockState; b
	getRandomFlower (Ljava/util/Random;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/levelgen/feature/configurations/RandomPatchConfiguration;)Lnet/minecraft/world/level/block/state/BlockState; b
	isValid (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/levelgen/feature/configurations/FeatureConfiguration;)Z a
	isValid (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/levelgen/feature/configurations/RandomPatchConfiguration;)Z a
net/minecraft/world/level/levelgen/feature/DeltaFeature cja
	CANNOT_REPLACE a
	DIRECTIONS ab
	isClear (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/levelgen/feature/configurations/DeltaFeatureConfiguration;)Z a
	place (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/chunk/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/levelgen/feature/configurations/DeltaFeatureConfiguration;)Z a
	place (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/chunk/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/levelgen/feature/configurations/FeatureConfiguration;)Z a
net/minecraft/world/level/levelgen/feature/DesertPyramidFeature cjb
	getStartFactory ()Lnet/minecraft/world/level/levelgen/feature/StructureFeature$StructureStartFactory; a
net/minecraft/world/level/levelgen/feature/DesertPyramidFeature$FeatureStart cjb$a
	generatePieces (Lnet/minecraft/core/RegistryAccess;Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureManager;IILnet/minecraft/world/level/biome/Biome;Lnet/minecraft/world/level/levelgen/feature/configurations/FeatureConfiguration;)V a
	generatePieces (Lnet/minecraft/core/RegistryAccess;Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureManager;IILnet/minecraft/world/level/biome/Biome;Lnet/minecraft/world/level/levelgen/feature/configurations/NoneFeatureConfiguration;)V a
net/minecraft/world/level/levelgen/feature/DesertWellFeature cjc
	IS_SAND a
	sandSlab ab
	sandstone ac
	water ad
	place (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/chunk/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/levelgen/feature/configurations/FeatureConfiguration;)Z a
	place (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/chunk/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/levelgen/feature/configurations/NoneFeatureConfiguration;)Z a
net/minecraft/world/level/levelgen/feature/DiskReplaceFeature cjd
	place (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/chunk/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/levelgen/feature/configurations/DiskConfiguration;)Z a
	place (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/chunk/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/levelgen/feature/configurations/FeatureConfiguration;)Z a
net/minecraft/world/level/levelgen/feature/EndCityFeature cje
	getStartFactory ()Lnet/minecraft/world/level/levelgen/feature/StructureFeature$StructureStartFactory; a
	getYPositionForFeature (IILnet/minecraft/world/level/chunk/ChunkGenerator;)I b
	isFeatureChunk (Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/world/level/biome/BiomeSource;JLnet/minecraft/world/level/levelgen/WorldgenRandom;IILnet/minecraft/world/level/biome/Biome;Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/world/level/levelgen/feature/configurations/FeatureConfiguration;)Z a
	isFeatureChunk (Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/world/level/biome/BiomeSource;JLnet/minecraft/world/level/levelgen/WorldgenRandom;IILnet/minecraft/world/level/biome/Biome;Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/world/level/levelgen/feature/configurations/NoneFeatureConfiguration;)Z a
	linearSeparation ()Z b
net/minecraft/world/level/levelgen/feature/EndCityFeature$EndCityStart cje$a
	generatePieces (Lnet/minecraft/core/RegistryAccess;Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureManager;IILnet/minecraft/world/level/biome/Biome;Lnet/minecraft/world/level/levelgen/feature/configurations/FeatureConfiguration;)V a
	generatePieces (Lnet/minecraft/core/RegistryAccess;Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureManager;IILnet/minecraft/world/level/biome/Biome;Lnet/minecraft/world/level/levelgen/feature/configurations/NoneFeatureConfiguration;)V a
net/minecraft/world/level/levelgen/feature/EndGatewayFeature cjf
	place (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/chunk/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/levelgen/feature/configurations/EndGatewayConfiguration;)Z a
	place (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/chunk/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/levelgen/feature/configurations/FeatureConfiguration;)Z a
net/minecraft/world/level/levelgen/feature/EndIslandFeature cjg
	place (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/chunk/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/levelgen/feature/configurations/FeatureConfiguration;)Z a
	place (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/chunk/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/levelgen/feature/configurations/NoneFeatureConfiguration;)Z a
net/minecraft/world/level/levelgen/feature/EndPodiumFeature cjh
	END_PODIUM_LOCATION a
	active ab
	place (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/chunk/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/levelgen/feature/configurations/FeatureConfiguration;)Z a
	place (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/chunk/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/levelgen/feature/configurations/NoneFeatureConfiguration;)Z a
net/minecraft/world/level/levelgen/feature/Feature cji
	BAMBOO L
	BASALT_COLUMNS Q
	BASALT_PILLAR V
	BLOCK_PILE g
	BLUE_ICE u
	BONUS_CHEST U
	CHORUS_PLANT i
	CORAL_CLAW I
	CORAL_MUSHROOM H
	CORAL_TREE G
	DECORATED aa
	DELTA_FEATURE R
	DESERT_WELL l
	DISK x
	EMERALD_ORE j
	END_GATEWAY D
	END_ISLAND C
	END_SPIKE B
	FILL_LAYER T
	FLOWER d
	FOREST_ROCK w
	FOSSIL m
	FREEZE_TOP_LAYER r
	GLOWSTONE_BLOB q
	HUGE_BROWN_MUSHROOM o
	HUGE_FUNGUS M
	HUGE_RED_MUSHROOM n
	ICEBERG v
	ICE_PATCH y
	ICE_SPIKE p
	KELP F
	LAKE z
	MONSTER_ROOM t
	NETHER_FOREST_VEGETATION N
	NO_BONEMEAL_FLOWER e
	NO_OP b
	NO_SURFACE_ORE W
	ORE A
	RANDOM_BOOLEAN_SELECTOR Z
	RANDOM_PATCH f
	RANDOM_SELECTOR X
	REPLACE_BLOBS S
	SEAGRASS E
	SEA_PICKLE J
	SIMPLE_BLOCK K
	SIMPLE_RANDOM_SELECTOR Y
	SPRING h
	TREE c
	TWISTING_VINES P
	VINES s
	VOID_START_PLATFORM k
	WEEPING_VINES O
	configuredCodec a
	configured (Lnet/minecraft/world/level/levelgen/feature/configurations/FeatureConfiguration;)Lnet/minecraft/world/level/levelgen/feature/ConfiguredFeature; b
	configuredCodec ()Lcom/mojang/serialization/Codec; a
	isAir (Lnet/minecraft/world/level/LevelSimulatedReader;Lnet/minecraft/core/BlockPos;)Z b
	isDirt (Lnet/minecraft/world/level/block/Block;)Z b
	isGrassOrDirt (Lnet/minecraft/world/level/LevelSimulatedReader;Lnet/minecraft/core/BlockPos;)Z a
	isStone (Lnet/minecraft/world/level/block/Block;)Z a
	place (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/chunk/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/levelgen/feature/configurations/FeatureConfiguration;)Z a
	register (Ljava/lang/String;Lnet/minecraft/world/level/levelgen/feature/Feature;)Lnet/minecraft/world/level/levelgen/feature/Feature; a
	setBlock (Lnet/minecraft/world/level/LevelWriter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V a
net/minecraft/world/level/levelgen/feature/FillLayerFeature cjj
	place (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/chunk/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/levelgen/feature/configurations/FeatureConfiguration;)Z a
	place (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/chunk/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/levelgen/feature/configurations/LayerConfiguration;)Z a
net/minecraft/world/level/levelgen/feature/FossilFeature cjk
	SKULL_1 ai
	SKULL_1_COAL am
	SKULL_2 aj
	SKULL_2_COAL an
	SKULL_3 ak
	SKULL_3_COAL ao
	SKULL_4 al
	SKULL_4_COAL ap
	SPINE_1 a
	SPINE_1_COAL ae
	SPINE_2 ab
	SPINE_2_COAL af
	SPINE_3 ac
	SPINE_3_COAL ag
	SPINE_4 ad
	SPINE_4_COAL ah
	fossils aq
	fossilsCoal ar
	place (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/chunk/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/levelgen/feature/configurations/FeatureConfiguration;)Z a
	place (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/chunk/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/levelgen/feature/configurations/NoneFeatureConfiguration;)Z a
net/minecraft/world/level/levelgen/feature/GlowstoneFeature cjl
	place (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/chunk/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/levelgen/feature/configurations/FeatureConfiguration;)Z a
	place (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/chunk/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/levelgen/feature/configurations/NoneFeatureConfiguration;)Z a
net/minecraft/world/level/levelgen/feature/HugeBrownMushroomFeature cjm
	getTreeRadiusForHeight (IIII)I a
	makeCap (Lnet/minecraft/world/level/LevelAccessor;Ljava/util/Random;Lnet/minecraft/core/BlockPos;ILnet/minecraft/core/BlockPos$MutableBlockPos;Lnet/minecraft/world/level/levelgen/feature/configurations/HugeMushroomFeatureConfiguration;)V a
net/minecraft/world/level/levelgen/feature/HugeFungusConfiguration cjn
	CODEC a
	HUGE_CRIMSON_FUNGI_NOT_PLANTED_CONFIG c
	HUGE_CRIMSON_FUNGI_PLANTED_CONFIG b
	HUGE_WARPED_FUNGI_NOT_PLANTED_CONFIG e
	HUGE_WARPED_FUNGI_PLANTED_CONFIG d
	decorState i
	hatState h
	planted j
	stemState g
	validBaseState f
net/minecraft/world/level/levelgen/feature/HugeFungusFeature cjo
	isReplaceable (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Z)Z a
	place (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/chunk/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/levelgen/feature/HugeFungusConfiguration;)Z a
	place (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/chunk/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/levelgen/feature/configurations/FeatureConfiguration;)Z a
	placeHat (Lnet/minecraft/world/level/LevelAccessor;Ljava/util/Random;Lnet/minecraft/world/level/levelgen/feature/HugeFungusConfiguration;Lnet/minecraft/core/BlockPos;IZ)V b
	placeHatBlock (Lnet/minecraft/world/level/LevelAccessor;Ljava/util/Random;Lnet/minecraft/world/level/levelgen/feature/HugeFungusConfiguration;Lnet/minecraft/core/BlockPos$MutableBlockPos;FFF)V a
	placeHatDropBlock (Lnet/minecraft/world/level/LevelAccessor;Ljava/util/Random;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)V a
	placeStem (Lnet/minecraft/world/level/LevelAccessor;Ljava/util/Random;Lnet/minecraft/world/level/levelgen/feature/HugeFungusConfiguration;Lnet/minecraft/core/BlockPos;IZ)V a
	tryPlaceWeepingVines (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/LevelAccessor;Ljava/util/Random;)V a
net/minecraft/world/level/levelgen/feature/HugeRedMushroomFeature cjp
	getTreeRadiusForHeight (IIII)I a
	makeCap (Lnet/minecraft/world/level/LevelAccessor;Ljava/util/Random;Lnet/minecraft/core/BlockPos;ILnet/minecraft/core/BlockPos$MutableBlockPos;Lnet/minecraft/world/level/levelgen/feature/configurations/HugeMushroomFeatureConfiguration;)V a
net/minecraft/world/level/levelgen/feature/IcePatchFeature cjq
	place (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/chunk/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/levelgen/feature/configurations/DiskConfiguration;)Z a
	place (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/chunk/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/levelgen/feature/configurations/FeatureConfiguration;)Z a
net/minecraft/world/level/levelgen/feature/IceSpikeFeature cjr
	place (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/chunk/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/levelgen/feature/configurations/FeatureConfiguration;)Z a
	place (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/chunk/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/levelgen/feature/configurations/NoneFeatureConfiguration;)Z a
net/minecraft/world/level/levelgen/feature/IcebergFeature cjs
	belowIsAir (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Z a
	carve (IILnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/LevelAccessor;ZDLnet/minecraft/core/BlockPos;II)V a
	generateCutOut (Ljava/util/Random;Lnet/minecraft/world/level/LevelAccessor;IILnet/minecraft/core/BlockPos;ZIDI)V a
	generateIcebergBlock (Lnet/minecraft/world/level/LevelAccessor;Ljava/util/Random;Lnet/minecraft/core/BlockPos;IIIIIIZIDZLnet/minecraft/world/level/block/state/BlockState;)V a
	getEllipseC (III)I a
	heightDependentRadiusEllipse (III)I b
	heightDependentRadiusRound (Ljava/util/Random;III)I a
	heightDependentRadiusSteep (Ljava/util/Random;III)I b
	isIcebergBlock (Lnet/minecraft/world/level/block/Block;)Z c
	place (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/chunk/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/levelgen/feature/configurations/BlockStateConfiguration;)Z a
	place (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/chunk/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/levelgen/feature/configurations/FeatureConfiguration;)Z a
	removeFloatingSnowLayer (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;)V a
	setIcebergBlock (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/LevelAccessor;Ljava/util/Random;IIZZLnet/minecraft/world/level/block/state/BlockState;)V a
	signedDistanceCircle (IILnet/minecraft/core/BlockPos;ILjava/util/Random;)D a
	signedDistanceEllipse (IILnet/minecraft/core/BlockPos;IID)D a
	smooth (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;IIZI)V a
net/minecraft/world/level/levelgen/feature/IglooFeature cjt
	getStartFactory ()Lnet/minecraft/world/level/levelgen/feature/StructureFeature$StructureStartFactory; a
net/minecraft/world/level/levelgen/feature/IglooFeature$FeatureStart cjt$a
	generatePieces (Lnet/minecraft/core/RegistryAccess;Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureManager;IILnet/minecraft/world/level/biome/Biome;Lnet/minecraft/world/level/levelgen/feature/configurations/FeatureConfiguration;)V a
	generatePieces (Lnet/minecraft/core/RegistryAccess;Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureManager;IILnet/minecraft/world/level/biome/Biome;Lnet/minecraft/world/level/levelgen/feature/configurations/NoneFeatureConfiguration;)V a
net/minecraft/world/level/levelgen/feature/JigsawFeature cju
	doExpansionHack v
	projectStartToHeightmap w
	startY u
	getStartFactory ()Lnet/minecraft/world/level/levelgen/feature/StructureFeature$StructureStartFactory; a
net/minecraft/world/level/levelgen/feature/JigsawFeature$FeatureStart cju$a
	feature e
	generatePieces (Lnet/minecraft/core/RegistryAccess;Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureManager;IILnet/minecraft/world/level/biome/Biome;Lnet/minecraft/world/level/levelgen/feature/configurations/FeatureConfiguration;)V a
	generatePieces (Lnet/minecraft/core/RegistryAccess;Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureManager;IILnet/minecraft/world/level/biome/Biome;Lnet/minecraft/world/level/levelgen/feature/configurations/JigsawConfiguration;)V a
net/minecraft/world/level/levelgen/feature/JunglePyramidFeature cjv
	getStartFactory ()Lnet/minecraft/world/level/levelgen/feature/StructureFeature$StructureStartFactory; a
net/minecraft/world/level/levelgen/feature/JunglePyramidFeature$FeatureStart cjv$a
	generatePieces (Lnet/minecraft/core/RegistryAccess;Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureManager;IILnet/minecraft/world/level/biome/Biome;Lnet/minecraft/world/level/levelgen/feature/configurations/FeatureConfiguration;)V a
	generatePieces (Lnet/minecraft/core/RegistryAccess;Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureManager;IILnet/minecraft/world/level/biome/Biome;Lnet/minecraft/world/level/levelgen/feature/configurations/NoneFeatureConfiguration;)V a
net/minecraft/world/level/levelgen/feature/KelpFeature cjw
	place (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/chunk/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/levelgen/feature/configurations/FeatureConfiguration;)Z a
	place (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/chunk/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/levelgen/feature/configurations/NoneFeatureConfiguration;)Z a
net/minecraft/world/level/levelgen/feature/LakeFeature cjx
	AIR a
	place (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/chunk/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/levelgen/feature/configurations/BlockStateConfiguration;)Z a
	place (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/chunk/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/levelgen/feature/configurations/FeatureConfiguration;)Z a
net/minecraft/world/level/levelgen/feature/MineshaftFeature cjy
	getStartFactory ()Lnet/minecraft/world/level/levelgen/feature/StructureFeature$StructureStartFactory; a
	isFeatureChunk (Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/world/level/biome/BiomeSource;JLnet/minecraft/world/level/levelgen/WorldgenRandom;IILnet/minecraft/world/level/biome/Biome;Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/world/level/levelgen/feature/configurations/FeatureConfiguration;)Z a
	isFeatureChunk (Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/world/level/biome/BiomeSource;JLnet/minecraft/world/level/levelgen/WorldgenRandom;IILnet/minecraft/world/level/biome/Biome;Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/world/level/levelgen/feature/configurations/MineshaftConfiguration;)Z a
net/minecraft/world/level/levelgen/feature/MineshaftFeature$MineShaftStart cjy$a
	generatePieces (Lnet/minecraft/core/RegistryAccess;Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureManager;IILnet/minecraft/world/level/biome/Biome;Lnet/minecraft/world/level/levelgen/feature/configurations/FeatureConfiguration;)V a
	generatePieces (Lnet/minecraft/core/RegistryAccess;Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureManager;IILnet/minecraft/world/level/biome/Biome;Lnet/minecraft/world/level/levelgen/feature/configurations/MineshaftConfiguration;)V a
net/minecraft/world/level/levelgen/feature/MineshaftFeature$Type cjy$b
	$VALUES f
	BY_NAME d
	CODEC c
	MESA b
	NORMAL a
	name e
	byId (I)Lnet/minecraft/world/level/levelgen/feature/MineshaftFeature$Type; a
	byName (Ljava/lang/String;)Lnet/minecraft/world/level/levelgen/feature/MineshaftFeature$Type; a
	getName ()Ljava/lang/String; b
	getSerializedName ()Ljava/lang/String; a
net/minecraft/world/level/levelgen/feature/MonsterRoomFeature cjz
	AIR ac
	LOGGER a
	MOBS ab
	place (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/chunk/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/levelgen/feature/configurations/FeatureConfiguration;)Z a
	place (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/chunk/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/levelgen/feature/configurations/NoneFeatureConfiguration;)Z a
	randomEntityId (Ljava/util/Random;)Lnet/minecraft/world/entity/EntityType; a
net/minecraft/world/level/levelgen/feature/NetherForestVegetationFeature cka
	place (Lnet/minecraft/world/level/LevelAccessor;Ljava/util/Random;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/levelgen/feature/configurations/BlockPileConfiguration;II)Z a
	place (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/chunk/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/levelgen/feature/configurations/BlockPileConfiguration;)Z a
	place (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/chunk/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/levelgen/feature/configurations/FeatureConfiguration;)Z a
net/minecraft/world/level/levelgen/feature/NetherFortressFeature ckb
	FORTRESS_ENEMIES u
	getSpecialEnemies ()Ljava/util/List; c
	getStartFactory ()Lnet/minecraft/world/level/levelgen/feature/StructureFeature$StructureStartFactory; a
	isFeatureChunk (Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/world/level/biome/BiomeSource;JLnet/minecraft/world/level/levelgen/WorldgenRandom;IILnet/minecraft/world/level/biome/Biome;Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/world/level/levelgen/feature/configurations/FeatureConfiguration;)Z a
	isFeatureChunk (Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/world/level/biome/BiomeSource;JLnet/minecraft/world/level/levelgen/WorldgenRandom;IILnet/minecraft/world/level/biome/Biome;Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/world/level/levelgen/feature/configurations/NoneFeatureConfiguration;)Z a
net/minecraft/world/level/levelgen/feature/NetherFortressFeature$NetherBridgeStart ckb$a
	generatePieces (Lnet/minecraft/core/RegistryAccess;Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureManager;IILnet/minecraft/world/level/biome/Biome;Lnet/minecraft/world/level/levelgen/feature/configurations/FeatureConfiguration;)V a
	generatePieces (Lnet/minecraft/core/RegistryAccess;Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureManager;IILnet/minecraft/world/level/biome/Biome;Lnet/minecraft/world/level/levelgen/feature/configurations/NoneFeatureConfiguration;)V a
net/minecraft/world/level/levelgen/feature/NoOpFeature ckc
	place (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/chunk/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/levelgen/feature/configurations/FeatureConfiguration;)Z a
	place (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/chunk/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/levelgen/feature/configurations/NoneFeatureConfiguration;)Z a
net/minecraft/world/level/levelgen/feature/NoSurfaceOreFeature ckd
	getRandomPlacementInOneAxisRelativeToOrigin (Ljava/util/Random;I)I a
	isFacingAir (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;)Z a
	offsetTargetPos (Lnet/minecraft/core/BlockPos$MutableBlockPos;Ljava/util/Random;Lnet/minecraft/core/BlockPos;I)V a
	place (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/chunk/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/levelgen/feature/configurations/FeatureConfiguration;)Z a
	place (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/chunk/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/levelgen/feature/configurations/OreConfiguration;)Z a
net/minecraft/world/level/levelgen/feature/OceanMonumentFeature cke
	MONUMENT_ENEMIES u
	getSpecialEnemies ()Ljava/util/List; c
	getStartFactory ()Lnet/minecraft/world/level/levelgen/feature/StructureFeature$StructureStartFactory; a
	isFeatureChunk (Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/world/level/biome/BiomeSource;JLnet/minecraft/world/level/levelgen/WorldgenRandom;IILnet/minecraft/world/level/biome/Biome;Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/world/level/levelgen/feature/configurations/FeatureConfiguration;)Z a
	isFeatureChunk (Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/world/level/biome/BiomeSource;JLnet/minecraft/world/level/levelgen/WorldgenRandom;IILnet/minecraft/world/level/biome/Biome;Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/world/level/levelgen/feature/configurations/NoneFeatureConfiguration;)Z a
	linearSeparation ()Z b
net/minecraft/world/level/levelgen/feature/OceanMonumentFeature$OceanMonumentStart cke$a
	isCreated e
	generatePieces (II)V b
	generatePieces (Lnet/minecraft/core/RegistryAccess;Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureManager;IILnet/minecraft/world/level/biome/Biome;Lnet/minecraft/world/level/levelgen/feature/configurations/FeatureConfiguration;)V a
	generatePieces (Lnet/minecraft/core/RegistryAccess;Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureManager;IILnet/minecraft/world/level/biome/Biome;Lnet/minecraft/world/level/levelgen/feature/configurations/NoneFeatureConfiguration;)V a
	placeInChunk (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/StructureFeatureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Lnet/minecraft/world/level/ChunkPos;)V a
net/minecraft/world/level/levelgen/feature/OreFeature ckf
	doPlace (Lnet/minecraft/world/level/LevelAccessor;Ljava/util/Random;Lnet/minecraft/world/level/levelgen/feature/configurations/OreConfiguration;DDDDDDIIIII)Z a
	place (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/chunk/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/levelgen/feature/configurations/FeatureConfiguration;)Z a
	place (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/chunk/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/levelgen/feature/configurations/OreConfiguration;)Z a
net/minecraft/world/level/levelgen/feature/PillagerOutpostFeature ckg
	OUTPOST_ENEMIES u
	getSpecialEnemies ()Ljava/util/List; c
	isFeatureChunk (Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/world/level/biome/BiomeSource;JLnet/minecraft/world/level/levelgen/WorldgenRandom;IILnet/minecraft/world/level/biome/Biome;Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/world/level/levelgen/feature/configurations/FeatureConfiguration;)Z a
	isFeatureChunk (Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/world/level/biome/BiomeSource;JLnet/minecraft/world/level/levelgen/WorldgenRandom;IILnet/minecraft/world/level/biome/Biome;Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/world/level/levelgen/feature/configurations/JigsawConfiguration;)Z a
	isNearVillage (Lnet/minecraft/world/level/chunk/ChunkGenerator;JLnet/minecraft/world/level/levelgen/WorldgenRandom;II)Z a
net/minecraft/world/level/levelgen/feature/RandomBooleanSelectorFeature ckh
	place (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/chunk/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/levelgen/feature/configurations/FeatureConfiguration;)Z a
	place (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/chunk/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/levelgen/feature/configurations/RandomBooleanFeatureConfiguration;)Z a
net/minecraft/world/level/levelgen/feature/RandomPatchFeature cki
	place (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/chunk/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/levelgen/feature/configurations/FeatureConfiguration;)Z a
	place (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/chunk/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/levelgen/feature/configurations/RandomPatchConfiguration;)Z a
net/minecraft/world/level/levelgen/feature/RandomSelectorFeature ckj
	place (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/chunk/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/levelgen/feature/configurations/FeatureConfiguration;)Z a
	place (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/chunk/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/levelgen/feature/configurations/RandomFeatureConfiguration;)Z a
net/minecraft/world/level/levelgen/feature/ReplaceBlobsFeature ckk
	findTarget (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos$MutableBlockPos;Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/core/BlockPos; a
	place (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/chunk/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/levelgen/feature/configurations/FeatureConfiguration;)Z a
	place (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/chunk/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/levelgen/feature/configurations/ReplaceSphereConfiguration;)Z a
net/minecraft/world/level/levelgen/feature/ReplaceBlockFeature ckl
	place (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/chunk/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/levelgen/feature/configurations/FeatureConfiguration;)Z a
	place (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/chunk/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/levelgen/feature/configurations/ReplaceBlockConfiguration;)Z a
net/minecraft/world/level/levelgen/feature/RuinedPortalFeature ckm
	STRUCTURE_LOCATION_GIANT_PORTALS v
	STRUCTURE_LOCATION_PORTALS u
	findSuitableY (Ljava/util/Random;Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/world/level/levelgen/structure/RuinedPortalPiece$VerticalPlacement;ZIILnet/minecraft/world/level/levelgen/structure/BoundingBox;)I b
	getRandomWithinInterval (Ljava/util/Random;II)I b
	getStartFactory ()Lnet/minecraft/world/level/levelgen/feature/StructureFeature$StructureStartFactory; a
	isCold (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/biome/Biome;)Z b
	randomIntInclusive (Ljava/util/Random;II)I a
net/minecraft/world/level/levelgen/feature/RuinedPortalFeature$FeatureStart ckm$a
	generatePieces (Lnet/minecraft/core/RegistryAccess;Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureManager;IILnet/minecraft/world/level/biome/Biome;Lnet/minecraft/world/level/levelgen/feature/configurations/FeatureConfiguration;)V a
	generatePieces (Lnet/minecraft/core/RegistryAccess;Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureManager;IILnet/minecraft/world/level/biome/Biome;Lnet/minecraft/world/level/levelgen/feature/configurations/RuinedPortalConfiguration;)V a
net/minecraft/world/level/levelgen/feature/RuinedPortalFeature$Type ckm$b
	$VALUES k
	BY_NAME i
	CODEC h
	DESERT b
	JUNGLE c
	MOUNTAIN e
	NETHER g
	OCEAN f
	STANDARD a
	SWAMP d
	name j
	byName (Ljava/lang/String;)Lnet/minecraft/world/level/levelgen/feature/RuinedPortalFeature$Type; a
	getName ()Ljava/lang/String; b
	getSerializedName ()Ljava/lang/String; a
net/minecraft/world/level/levelgen/feature/SeaPickleFeature ckn
	place (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/chunk/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/levelgen/feature/configurations/CountConfiguration;)Z a
	place (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/chunk/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/levelgen/feature/configurations/FeatureConfiguration;)Z a
net/minecraft/world/level/levelgen/feature/SeagrassFeature cko
	place (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/chunk/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/levelgen/feature/configurations/FeatureConfiguration;)Z a
	place (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/chunk/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/levelgen/feature/configurations/ProbabilityFeatureConfiguration;)Z a
net/minecraft/world/level/levelgen/feature/ShipwreckFeature ckp
	getStartFactory ()Lnet/minecraft/world/level/levelgen/feature/StructureFeature$StructureStartFactory; a
net/minecraft/world/level/levelgen/feature/ShipwreckFeature$FeatureStart ckp$a
	generatePieces (Lnet/minecraft/core/RegistryAccess;Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureManager;IILnet/minecraft/world/level/biome/Biome;Lnet/minecraft/world/level/levelgen/feature/configurations/FeatureConfiguration;)V a
	generatePieces (Lnet/minecraft/core/RegistryAccess;Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureManager;IILnet/minecraft/world/level/biome/Biome;Lnet/minecraft/world/level/levelgen/feature/configurations/ShipwreckConfiguration;)V a
net/minecraft/world/level/levelgen/feature/SimpleBlockFeature ckq
	place (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/chunk/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/levelgen/feature/configurations/FeatureConfiguration;)Z a
	place (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/chunk/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/levelgen/feature/configurations/SimpleBlockConfiguration;)Z a
net/minecraft/world/level/levelgen/feature/SimpleRandomSelectorFeature ckr
	place (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/chunk/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/levelgen/feature/configurations/FeatureConfiguration;)Z a
	place (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/chunk/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/levelgen/feature/configurations/SimpleRandomFeatureConfiguration;)Z a
net/minecraft/world/level/levelgen/feature/SimulatedFeature cks
	simulate (Lnet/minecraft/server/level/FeatureSimulator;Ljava/util/Random;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/levelgen/feature/configurations/FeatureConfiguration;)V a
net/minecraft/world/level/levelgen/feature/SnowAndFreezeFeature ckt
	place (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/chunk/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/levelgen/feature/configurations/FeatureConfiguration;)Z a
	place (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/chunk/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/levelgen/feature/configurations/NoneFeatureConfiguration;)Z a
net/minecraft/world/level/levelgen/feature/SpikeFeature cku
	SPIKE_CACHE a
	getSpikesForLevel (Lnet/minecraft/world/level/WorldGenLevel;)Ljava/util/List; a
	place (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/chunk/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/levelgen/feature/configurations/FeatureConfiguration;)Z a
	place (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/chunk/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/levelgen/feature/configurations/SpikeConfiguration;)Z a
	placeSpike (Lnet/minecraft/world/level/ServerLevelAccessor;Ljava/util/Random;Lnet/minecraft/world/level/levelgen/feature/configurations/SpikeConfiguration;Lnet/minecraft/world/level/levelgen/feature/SpikeFeature$EndSpike;)V a
net/minecraft/world/level/levelgen/feature/SpikeFeature$EndSpike cku$a
	CODEC a
	centerX b
	centerZ c
	guarded f
	height e
	radius d
	topBoundingBox g
	getCenterX ()I a
	getCenterZ ()I b
	getHeight ()I d
	getRadius ()I c
	getTopBoundingBox ()Lnet/minecraft/world/phys/AABB; f
	isCenterWithinChunk (Lnet/minecraft/core/BlockPos;)Z a
	isGuarded ()Z e
net/minecraft/world/level/levelgen/feature/SpikeFeature$SpikeCacheLoader cku$b
	load (Ljava/lang/Long;)Ljava/util/List; a
net/minecraft/world/level/levelgen/feature/SpringFeature ckv
	place (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/chunk/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/levelgen/feature/configurations/FeatureConfiguration;)Z a
	place (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/chunk/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/levelgen/feature/configurations/SpringConfiguration;)Z a
net/minecraft/world/level/levelgen/feature/StrongholdFeature ckw
	getStartFactory ()Lnet/minecraft/world/level/levelgen/feature/StructureFeature$StructureStartFactory; a
	isFeatureChunk (Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/world/level/biome/BiomeSource;JLnet/minecraft/world/level/levelgen/WorldgenRandom;IILnet/minecraft/world/level/biome/Biome;Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/world/level/levelgen/feature/configurations/FeatureConfiguration;)Z a
	isFeatureChunk (Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/world/level/biome/BiomeSource;JLnet/minecraft/world/level/levelgen/WorldgenRandom;IILnet/minecraft/world/level/biome/Biome;Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/world/level/levelgen/feature/configurations/NoneFeatureConfiguration;)Z a
net/minecraft/world/level/levelgen/feature/StrongholdFeature$StrongholdStart ckw$a
	seed e
	generatePieces (Lnet/minecraft/core/RegistryAccess;Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureManager;IILnet/minecraft/world/level/biome/Biome;Lnet/minecraft/world/level/levelgen/feature/configurations/FeatureConfiguration;)V a
	generatePieces (Lnet/minecraft/core/RegistryAccess;Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureManager;IILnet/minecraft/world/level/biome/Biome;Lnet/minecraft/world/level/levelgen/feature/configurations/NoneFeatureConfiguration;)V a
net/minecraft/world/level/levelgen/feature/StructureFeature ckx
	BASTION_REMNANT s
	BURIED_TREASURE p
	DESERT_PYRAMID f
	END_CITY o
	IGLOO g
	JIGSAW_RENAME w
	JUNGLE_TEMPLE e
	LOGGER v
	MINESHAFT c
	NETHER_BRIDGE n
	NETHER_FOSSIL r
	NOISE_AFFECTING_FEATURES t
	OCEAN_MONUMENT l
	OCEAN_RUIN m
	PILLAGER_OUTPOST b
	RENAMES x
	RUINED_PORTAL h
	SHIPWRECK i
	STEP u
	STRONGHOLD k
	STRUCTURES_REGISTRY a
	SWAMP_HUT j
	VILLAGE q
	WOODLAND_MANSION d
	configuredStructureCodec y
	bootstrap ()V g
	configured (Lnet/minecraft/world/level/levelgen/feature/configurations/FeatureConfiguration;)Lnet/minecraft/world/level/levelgen/feature/ConfiguredStructureFeature; a
	configuredStructureCodec ()Lcom/mojang/serialization/Codec; h
	createStart (IILnet/minecraft/world/level/levelgen/structure/BoundingBox;IJ)Lnet/minecraft/world/level/levelgen/structure/StructureStart; a
	generate (Lnet/minecraft/core/RegistryAccess;Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/world/level/biome/BiomeSource;Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureManager;JLnet/minecraft/world/level/ChunkPos;Lnet/minecraft/world/level/biome/Biome;ILnet/minecraft/world/level/levelgen/WorldgenRandom;Lnet/minecraft/world/level/levelgen/feature/configurations/StructureFeatureConfiguration;Lnet/minecraft/world/level/levelgen/feature/configurations/FeatureConfiguration;)Lnet/minecraft/world/level/levelgen/structure/StructureStart; a
	getFeatureName ()Ljava/lang/String; i
	getNearestGeneratedFeature (Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/world/level/StructureFeatureManager;Lnet/minecraft/core/BlockPos;IZJLnet/minecraft/world/level/levelgen/feature/configurations/StructureFeatureConfiguration;)Lnet/minecraft/core/BlockPos; a
	getPotentialFeatureChunk (Lnet/minecraft/world/level/levelgen/feature/configurations/StructureFeatureConfiguration;JLnet/minecraft/world/level/levelgen/WorldgenRandom;II)Lnet/minecraft/world/level/ChunkPos; a
	getSpecialAnimals ()Ljava/util/List; j
	getSpecialEnemies ()Ljava/util/List; c
	getStartFactory ()Lnet/minecraft/world/level/levelgen/feature/StructureFeature$StructureStartFactory; a
	isFeatureChunk (Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/world/level/biome/BiomeSource;JLnet/minecraft/world/level/levelgen/WorldgenRandom;IILnet/minecraft/world/level/biome/Biome;Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/world/level/levelgen/feature/configurations/FeatureConfiguration;)Z a
	linearSeparation ()Z b
	loadStaticStart (Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureManager;Lnet/minecraft/nbt/CompoundTag;J)Lnet/minecraft/world/level/levelgen/structure/StructureStart; a
	register (Ljava/lang/String;Lnet/minecraft/world/level/levelgen/feature/StructureFeature;Lnet/minecraft/world/level/levelgen/GenerationStep$Decoration;)Lnet/minecraft/world/level/levelgen/feature/StructureFeature; a
	step ()Lnet/minecraft/world/level/levelgen/GenerationStep$Decoration; f
net/minecraft/world/level/levelgen/feature/StructureFeature$StructureStartFactory ckx$a
net/minecraft/world/level/levelgen/feature/StructurePieceType cky
	BURIED_TREASURE_PIECE aa
	DESERT_PYRAMID_PIECE L
	END_CITY_PIECE Y
	IGLOO I
	JIGSAW ad
	JUNGLE_PYRAMID_PIECE G
	MINE_SHAFT_CORRIDOR a
	MINE_SHAFT_CROSSING b
	MINE_SHAFT_ROOM c
	MINE_SHAFT_STAIRS d
	NETHER_FORTRESS_BRIDGE_CROSSING e
	NETHER_FORTRESS_BRIDGE_END_FILLER f
	NETHER_FORTRESS_BRIDGE_STRAIGHT g
	NETHER_FORTRESS_CASTLE_CORRIDOR_STAIRS h
	NETHER_FORTRESS_CASTLE_CORRIDOR_T_BALCONY i
	NETHER_FORTRESS_CASTLE_ENTRANCE j
	NETHER_FORTRESS_CASTLE_SMALL_CORRIDOR m
	NETHER_FORTRESS_CASTLE_SMALL_CORRIDOR_CROSSING k
	NETHER_FORTRESS_CASTLE_SMALL_CORRIDOR_LEFT_TURN l
	NETHER_FORTRESS_CASTLE_SMALL_CORRIDOR_RIGHT_TURN n
	NETHER_FORTRESS_CASTLE_STALK_ROOM o
	NETHER_FORTRESS_MONSTER_THRONE p
	NETHER_FORTRESS_ROOM_CROSSING q
	NETHER_FORTRESS_STAIRS_ROOM r
	NETHER_FORTRESS_START s
	NETHER_FOSSIL ac
	OCEAN_MONUMENT_BUILDING M
	OCEAN_MONUMENT_CORE_ROOM N
	OCEAN_MONUMENT_DOUBLE_XY_ROOM P
	OCEAN_MONUMENT_DOUBLE_X_ROOM O
	OCEAN_MONUMENT_DOUBLE_YZ_ROOM R
	OCEAN_MONUMENT_DOUBLE_Y_ROOM Q
	OCEAN_MONUMENT_DOUBLE_Z_ROOM S
	OCEAN_MONUMENT_ENTRY_ROOM T
	OCEAN_MONUMENT_PENTHOUSE U
	OCEAN_MONUMENT_SIMPLE_ROOM V
	OCEAN_MONUMENT_SIMPLE_TOP_ROOM W
	OCEAN_MONUMENT_WING_ROOM X
	OCEAN_RUIN H
	RUINED_PORTAL J
	SHIPWRECK_PIECE ab
	STRONGHOLD_CHEST_CORRIDOR t
	STRONGHOLD_FILLER_CORRIDOR u
	STRONGHOLD_FIVE_CROSSING v
	STRONGHOLD_LEFT_TURN w
	STRONGHOLD_LIBRARY x
	STRONGHOLD_PORTAL_ROOM y
	STRONGHOLD_PRISON_HALL z
	STRONGHOLD_RIGHT_TURN A
	STRONGHOLD_ROOM_CROSSING B
	STRONGHOLD_STAIRS_DOWN C
	STRONGHOLD_START D
	STRONGHOLD_STRAIGHT E
	STRONGHOLD_STRAIGHT_STAIRS_DOWN F
	SWAMPLAND_HUT K
	WOODLAND_MANSION_PIECE Z
	setPieceId (Lnet/minecraft/world/level/levelgen/feature/StructurePieceType;Ljava/lang/String;)Lnet/minecraft/world/level/levelgen/feature/StructurePieceType; a
net/minecraft/world/level/levelgen/feature/SwamplandHutFeature ckz
	SWAMPHUT_ANIMALS v
	SWAMPHUT_ENEMIES u
	getSpecialAnimals ()Ljava/util/List; j
	getSpecialEnemies ()Ljava/util/List; c
	getStartFactory ()Lnet/minecraft/world/level/levelgen/feature/StructureFeature$StructureStartFactory; a
net/minecraft/world/level/levelgen/feature/SwamplandHutFeature$FeatureStart ckz$a
	generatePieces (Lnet/minecraft/core/RegistryAccess;Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureManager;IILnet/minecraft/world/level/biome/Biome;Lnet/minecraft/world/level/levelgen/feature/configurations/FeatureConfiguration;)V a
	generatePieces (Lnet/minecraft/core/RegistryAccess;Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureManager;IILnet/minecraft/world/level/biome/Biome;Lnet/minecraft/world/level/levelgen/feature/configurations/NoneFeatureConfiguration;)V a
net/minecraft/world/level/levelgen/feature/TreeFeature cla
	doPlace (Lnet/minecraft/world/level/LevelSimulatedRW;Ljava/util/Random;Lnet/minecraft/core/BlockPos;Ljava/util/Set;Ljava/util/Set;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Lnet/minecraft/world/level/levelgen/feature/configurations/TreeConfiguration;)Z a
	getMaxFreeTreeHeight (Lnet/minecraft/world/level/LevelSimulatedReader;ILnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/levelgen/feature/configurations/TreeConfiguration;)I a
	isAirOrLeaves (Lnet/minecraft/world/level/LevelSimulatedReader;Lnet/minecraft/core/BlockPos;)Z d
	isBlockWater (Lnet/minecraft/world/level/LevelSimulatedReader;Lnet/minecraft/core/BlockPos;)Z g
	isFree (Lnet/minecraft/world/level/LevelSimulatedReader;Lnet/minecraft/core/BlockPos;)Z c
	isGrassOrDirtOrFarmland (Lnet/minecraft/world/level/LevelSimulatedReader;Lnet/minecraft/core/BlockPos;)Z h
	isReplaceablePlant (Lnet/minecraft/world/level/LevelSimulatedReader;Lnet/minecraft/core/BlockPos;)Z i
	isVine (Lnet/minecraft/world/level/LevelSimulatedReader;Lnet/minecraft/core/BlockPos;)Z f
	place (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/chunk/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/levelgen/feature/configurations/FeatureConfiguration;)Z a
	place (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/chunk/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/levelgen/feature/configurations/TreeConfiguration;)Z a
	setBlock (Lnet/minecraft/world/level/LevelWriter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V a
	setBlockKnownShape (Lnet/minecraft/world/level/LevelWriter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V b
	simulate (Lnet/minecraft/server/level/FeatureSimulator;Ljava/util/Random;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/levelgen/feature/configurations/FeatureConfiguration;)V a
	simulate (Lnet/minecraft/server/level/FeatureSimulator;Ljava/util/Random;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/levelgen/feature/configurations/TreeConfiguration;)V a
	updateLeaves (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Ljava/util/Set;Ljava/util/Set;)Lnet/minecraft/world/phys/shapes/DiscreteVoxelShape; a
	validTreePos (Lnet/minecraft/world/level/LevelSimulatedReader;Lnet/minecraft/core/BlockPos;)Z e
net/minecraft/world/level/levelgen/feature/TwistingVinesFeature clb
	findFirstAirBlockAboveGround (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos$MutableBlockPos;)Z a
	isInvalidPlacementLocation (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;)Z a
	place (Lnet/minecraft/world/level/LevelAccessor;Ljava/util/Random;Lnet/minecraft/core/BlockPos;III)Z a
	place (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/chunk/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/levelgen/feature/configurations/FeatureConfiguration;)Z a
	place (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/chunk/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/levelgen/feature/configurations/NoneFeatureConfiguration;)Z a
	placeTwistingVines (Lnet/minecraft/world/level/LevelAccessor;Ljava/util/Random;Lnet/minecraft/core/BlockPos;III)V b
	placeWeepingVinesColumn (Lnet/minecraft/world/level/LevelAccessor;Ljava/util/Random;Lnet/minecraft/core/BlockPos$MutableBlockPos;III)V a
net/minecraft/world/level/levelgen/feature/VillageFeature clc
net/minecraft/world/level/levelgen/feature/VinesFeature cld
	DIRECTIONS a
	place (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/chunk/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/levelgen/feature/configurations/FeatureConfiguration;)Z a
	place (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/chunk/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/levelgen/feature/configurations/NoneFeatureConfiguration;)Z a
net/minecraft/world/level/levelgen/feature/VoidStartPlatformFeature cle
	PLATFORM_ORIGIN a
	PLATFORM_ORIGIN_CHUNK ab
	checkerboardDistance (IIII)I a
	place (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/chunk/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/levelgen/feature/configurations/FeatureConfiguration;)Z a
	place (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/chunk/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/levelgen/feature/configurations/NoneFeatureConfiguration;)Z a
net/minecraft/world/level/levelgen/feature/WeepingVinesFeature clf
	DIRECTIONS a
	place (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/chunk/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/levelgen/feature/configurations/FeatureConfiguration;)Z a
	place (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/chunk/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/levelgen/feature/configurations/NoneFeatureConfiguration;)Z a
	placeRoofNetherWart (Lnet/minecraft/world/level/LevelAccessor;Ljava/util/Random;Lnet/minecraft/core/BlockPos;)V a
	placeRoofWeepingVines (Lnet/minecraft/world/level/LevelAccessor;Ljava/util/Random;Lnet/minecraft/core/BlockPos;)V b
	placeWeepingVinesColumn (Lnet/minecraft/world/level/LevelAccessor;Ljava/util/Random;Lnet/minecraft/core/BlockPos$MutableBlockPos;III)V a
net/minecraft/world/level/levelgen/feature/WeightedConfiguredFeature clg
	CODEC a
	chance c
	feature b
	place (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/chunk/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/core/BlockPos;)Z a
net/minecraft/world/level/levelgen/feature/WoodlandMansionFeature clh
	getStartFactory ()Lnet/minecraft/world/level/levelgen/feature/StructureFeature$StructureStartFactory; a
	isFeatureChunk (Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/world/level/biome/BiomeSource;JLnet/minecraft/world/level/levelgen/WorldgenRandom;IILnet/minecraft/world/level/biome/Biome;Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/world/level/levelgen/feature/configurations/FeatureConfiguration;)Z a
	isFeatureChunk (Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/world/level/biome/BiomeSource;JLnet/minecraft/world/level/levelgen/WorldgenRandom;IILnet/minecraft/world/level/biome/Biome;Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/world/level/levelgen/feature/configurations/NoneFeatureConfiguration;)Z a
	linearSeparation ()Z b
net/minecraft/world/level/levelgen/feature/WoodlandMansionFeature$WoodlandMansionStart clh$a
	generatePieces (Lnet/minecraft/core/RegistryAccess;Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureManager;IILnet/minecraft/world/level/biome/Biome;Lnet/minecraft/world/level/levelgen/feature/configurations/FeatureConfiguration;)V a
	generatePieces (Lnet/minecraft/core/RegistryAccess;Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureManager;IILnet/minecraft/world/level/biome/Biome;Lnet/minecraft/world/level/levelgen/feature/configurations/NoneFeatureConfiguration;)V a
	placeInChunk (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/StructureFeatureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Lnet/minecraft/world/level/ChunkPos;)V a
net/minecraft/world/level/levelgen/feature/blockplacers/BlockPlacer cli
	CODEC a
	place (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Ljava/util/Random;)V a
	type ()Lnet/minecraft/world/level/levelgen/feature/blockplacers/BlockPlacerType; a
net/minecraft/world/level/levelgen/feature/blockplacers/BlockPlacerType clj
	COLUMN_PLACER c
	DOUBLE_PLANT_PLACER b
	SIMPLE_BLOCK_PLACER a
	codec d
	codec ()Lcom/mojang/serialization/Codec; a
	register (Ljava/lang/String;Lcom/mojang/serialization/Codec;)Lnet/minecraft/world/level/levelgen/feature/blockplacers/BlockPlacerType; a
net/minecraft/world/level/levelgen/feature/blockplacers/ColumnPlacer clk
	CODEC b
	extraSize d
	minSize c
	place (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Ljava/util/Random;)V a
	type ()Lnet/minecraft/world/level/levelgen/feature/blockplacers/BlockPlacerType; a
net/minecraft/world/level/levelgen/feature/blockplacers/DoublePlantPlacer cll
	CODEC b
	INSTANCE c
	place (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Ljava/util/Random;)V a
	type ()Lnet/minecraft/world/level/levelgen/feature/blockplacers/BlockPlacerType; a
net/minecraft/world/level/levelgen/feature/blockplacers/SimpleBlockPlacer clm
	CODEC b
	INSTANCE c
	place (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Ljava/util/Random;)V a
	type ()Lnet/minecraft/world/level/levelgen/feature/blockplacers/BlockPlacerType; a
net/minecraft/world/level/levelgen/feature/configurations/BlockPileConfiguration clo
	CODEC a
	stateProvider b
net/minecraft/world/level/levelgen/feature/configurations/BlockStateConfiguration clp
	CODEC a
	state b
net/minecraft/world/level/levelgen/feature/configurations/ColumnFeatureConfiguration clq
	CODEC a
	height c
	reach b
	height ()Lnet/minecraft/util/UniformInt; b
	reach ()Lnet/minecraft/util/UniformInt; am_
net/minecraft/world/level/levelgen/feature/configurations/CountConfiguration clr
	CODEC a
	count c
	count ()Lnet/minecraft/util/UniformInt; a
net/minecraft/world/level/levelgen/feature/configurations/DecoratedFeatureConfiguration cls
	CODEC a
	decorator c
	feature b
	getFeatures ()Ljava/util/stream/Stream; an_
net/minecraft/world/level/levelgen/feature/configurations/DecoratorConfiguration clt
	NONE b
net/minecraft/world/level/levelgen/feature/configurations/DeltaFeatureConfiguration clu
	CODEC a
	contents b
	rim c
	rimSize e
	size d
	contents ()Lnet/minecraft/world/level/block/state/BlockState; b
	rim ()Lnet/minecraft/world/level/block/state/BlockState; c
	rimSize ()Lnet/minecraft/util/UniformInt; e
	size ()Lnet/minecraft/util/UniformInt; d
net/minecraft/world/level/levelgen/feature/configurations/DiskConfiguration clv
	CODEC a
	halfHeight d
	radius c
	state b
	targets e
net/minecraft/world/level/levelgen/feature/configurations/EndGatewayConfiguration clw
	CODEC a
	exact c
	exit b
	delayedExitSearch ()Lnet/minecraft/world/level/levelgen/feature/configurations/EndGatewayConfiguration; b
	getExit ()Ljava/util/Optional; c
	isExitExact ()Z d
	knownExit (Lnet/minecraft/core/BlockPos;Z)Lnet/minecraft/world/level/levelgen/feature/configurations/EndGatewayConfiguration; a
net/minecraft/world/level/levelgen/feature/configurations/FeatureConfiguration clx
	NONE k
	getFeatures ()Ljava/util/stream/Stream; an_
net/minecraft/world/level/levelgen/feature/configurations/HugeMushroomFeatureConfiguration cly
	CODEC a
	capProvider b
	foliageRadius d
	stemProvider c
net/minecraft/world/level/levelgen/feature/configurations/JigsawConfiguration clz
	CODEC a
	maxDepth c
	startPool b
	maxDepth ()I b
	startPool ()Ljava/util/function/Supplier; c
net/minecraft/world/level/levelgen/feature/configurations/LayerConfiguration cma
	CODEC a
	height b
	state c
net/minecraft/world/level/levelgen/feature/configurations/MineshaftConfiguration cmb
	CODEC a
	probability b
	type c
net/minecraft/world/level/levelgen/feature/configurations/NoiseDependantDecoratorConfiguration cmc
	CODEC a
	aboveNoise e
	belowNoise d
	noiseLevel c
net/minecraft/world/level/levelgen/feature/configurations/NoneDecoratorConfiguration cmd
	CODEC a
	INSTANCE c
net/minecraft/world/level/levelgen/feature/configurations/NoneFeatureConfiguration cme
	CODEC a
	INSTANCE b
net/minecraft/world/level/levelgen/feature/configurations/OceanRuinConfiguration cmf
	CODEC a
	biomeTemp b
	clusterProbability d
	largeProbability c
net/minecraft/world/level/levelgen/feature/configurations/OreConfiguration cmg
	CODEC a
	size c
	state d
	target b
net/minecraft/world/level/levelgen/feature/configurations/OreConfiguration$Predicates cmg$a
	NATURAL_STONE a
	NETHERRACK b
	NETHER_ORE_REPLACEABLES c
net/minecraft/world/level/levelgen/feature/configurations/ProbabilityFeatureConfiguration cmh
	CODEC b
	probability c
net/minecraft/world/level/levelgen/feature/configurations/RandomBooleanFeatureConfiguration cmi
	CODEC a
	featureFalse c
	featureTrue b
	getFeatures ()Ljava/util/stream/Stream; an_
net/minecraft/world/level/levelgen/feature/configurations/RandomFeatureConfiguration cmj
	CODEC a
	defaultFeature c
	features b
	getFeatures ()Ljava/util/stream/Stream; an_
net/minecraft/world/level/levelgen/feature/configurations/RandomPatchConfiguration cmk
	CODEC a
	blacklist e
	blockPlacer c
	canReplace j
	needWater m
	project l
	stateProvider b
	tries f
	whitelist d
	xspread g
	yspread h
	zspread i
net/minecraft/world/level/levelgen/feature/configurations/RandomPatchConfiguration$GrassConfigurationBuilder cmk$a
	blacklist d
	blockPlacer b
	canReplace i
	needWater k
	project j
	stateProvider a
	tries e
	whitelist c
	xspread f
	yspread g
	zspread h
	blacklist (Ljava/util/Set;)Lnet/minecraft/world/level/levelgen/feature/configurations/RandomPatchConfiguration$GrassConfigurationBuilder; b
	build ()Lnet/minecraft/world/level/levelgen/feature/configurations/RandomPatchConfiguration; d
	canReplace ()Lnet/minecraft/world/level/levelgen/feature/configurations/RandomPatchConfiguration$GrassConfigurationBuilder; a
	needWater ()Lnet/minecraft/world/level/levelgen/feature/configurations/RandomPatchConfiguration$GrassConfigurationBuilder; c
	noProjection ()Lnet/minecraft/world/level/levelgen/feature/configurations/RandomPatchConfiguration$GrassConfigurationBuilder; b
	tries (I)Lnet/minecraft/world/level/levelgen/feature/configurations/RandomPatchConfiguration$GrassConfigurationBuilder; a
	whitelist (Ljava/util/Set;)Lnet/minecraft/world/level/levelgen/feature/configurations/RandomPatchConfiguration$GrassConfigurationBuilder; a
	xspread (I)Lnet/minecraft/world/level/levelgen/feature/configurations/RandomPatchConfiguration$GrassConfigurationBuilder; b
	yspread (I)Lnet/minecraft/world/level/levelgen/feature/configurations/RandomPatchConfiguration$GrassConfigurationBuilder; c
	zspread (I)Lnet/minecraft/world/level/levelgen/feature/configurations/RandomPatchConfiguration$GrassConfigurationBuilder; d
net/minecraft/world/level/levelgen/feature/configurations/RangeDecoratorConfiguration cml
	CODEC a
	bottomOffset c
	maximum e
	topOffset d
net/minecraft/world/level/levelgen/feature/configurations/ReplaceBlockConfiguration cmm
	CODEC a
	state c
	target b
net/minecraft/world/level/levelgen/feature/configurations/ReplaceSphereConfiguration cmn
	CODEC a
	radius d
	replaceState c
	targetState b
	radius ()Lnet/minecraft/util/UniformInt; b
net/minecraft/world/level/levelgen/feature/configurations/RuinedPortalConfiguration cmo
	CODEC a
	portalType b
net/minecraft/world/level/levelgen/feature/configurations/ShipwreckConfiguration cmp
	CODEC a
	isBeached b
net/minecraft/world/level/levelgen/feature/configurations/SimpleBlockConfiguration cmq
	CODEC a
	placeIn d
	placeOn c
	placeUnder e
	toPlace b
net/minecraft/world/level/levelgen/feature/configurations/SimpleRandomFeatureConfiguration cmr
	CODEC a
	features b
	getFeatures ()Ljava/util/stream/Stream; an_
net/minecraft/world/level/levelgen/feature/configurations/SpikeConfiguration cms
	CODEC a
	crystalBeamTarget d
	crystalInvulnerable b
	spikes c
	getCrystalBeamTarget ()Lnet/minecraft/core/BlockPos; d
	getSpikes ()Ljava/util/List; c
	isCrystalInvulnerable ()Z b
net/minecraft/world/level/levelgen/feature/configurations/SpringConfiguration cmt
	CODEC a
	holeCount e
	requiresBlockBelow c
	rockCount d
	state b
	validBlocks f
net/minecraft/world/level/levelgen/feature/configurations/StrongholdConfiguration cmu
	CODEC a
	count d
	distance b
	spread c
	count ()I c
	distance ()I a
	spread ()I b
net/minecraft/world/level/levelgen/feature/configurations/StructureFeatureConfiguration cmv
	CODEC a
	salt d
	separation c
	spacing b
	salt ()I c
	separation ()I b
	spacing ()I a
net/minecraft/world/level/levelgen/feature/configurations/TreeConfiguration cmw
	CODEC a
	decorators d
	foliagePlacer f
	fromSapling e
	heightmap l
	ignoreVines j
	leavesProvider c
	maxWaterDepth i
	minimumSize h
	trunkPlacer g
	trunkProvider b
	setFromSapling ()V b
	withDecorators (Ljava/util/List;)Lnet/minecraft/world/level/levelgen/feature/configurations/TreeConfiguration; a
net/minecraft/world/level/levelgen/feature/configurations/TreeConfiguration$TreeConfigurationBuilder cmw$a
	decorators f
	foliagePlacer c
	heightmap i
	ignoreVines h
	leavesProvider b
	maxWaterDepth g
	minimumSize e
	trunkPlacer d
	trunkProvider a
	build ()Lnet/minecraft/world/level/levelgen/feature/configurations/TreeConfiguration; b
	decorators (Ljava/util/List;)Lnet/minecraft/world/level/levelgen/feature/configurations/TreeConfiguration$TreeConfigurationBuilder; a
	heightmap (Lnet/minecraft/world/level/levelgen/Heightmap$Types;)Lnet/minecraft/world/level/levelgen/feature/configurations/TreeConfiguration$TreeConfigurationBuilder; a
	ignoreVines ()Lnet/minecraft/world/level/levelgen/feature/configurations/TreeConfiguration$TreeConfigurationBuilder; a
	maxWaterDepth (I)Lnet/minecraft/world/level/levelgen/feature/configurations/TreeConfiguration$TreeConfigurationBuilder; a
net/minecraft/world/level/levelgen/feature/featuresize/FeatureSize cmy
	CODEC a
	minClippedHeight b
	getSizeAtHeight (II)I a
	minClippedHeight ()Ljava/util/OptionalInt; c
	minClippedHeightCodec ()Lcom/mojang/serialization/codecs/RecordCodecBuilder; a
	type ()Lnet/minecraft/world/level/levelgen/feature/featuresize/FeatureSizeType; b
net/minecraft/world/level/levelgen/feature/featuresize/FeatureSizeType cmz
	THREE_LAYERS_FEATURE_SIZE b
	TWO_LAYERS_FEATURE_SIZE a
	codec c
	codec ()Lcom/mojang/serialization/Codec; a
	register (Ljava/lang/String;Lcom/mojang/serialization/Codec;)Lnet/minecraft/world/level/levelgen/feature/featuresize/FeatureSizeType; a
net/minecraft/world/level/levelgen/feature/featuresize/ThreeLayersFeatureSize cna
	CODEC c
	limit d
	lowerSize f
	middleSize g
	upperLimit e
	upperSize h
	getSizeAtHeight (II)I a
	type ()Lnet/minecraft/world/level/levelgen/feature/featuresize/FeatureSizeType; b
net/minecraft/world/level/levelgen/feature/featuresize/TwoLayersFeatureSize cnb
	CODEC c
	limit d
	lowerSize e
	upperSize f
	getSizeAtHeight (II)I a
	type ()Lnet/minecraft/world/level/levelgen/feature/featuresize/FeatureSizeType; b
net/minecraft/world/level/levelgen/feature/foliageplacers/AcaciaFoliagePlacer cnd
	CODEC a
	createFoliage (Lnet/minecraft/world/level/LevelSimulatedRW;Ljava/util/Random;Lnet/minecraft/world/level/levelgen/feature/configurations/TreeConfiguration;ILnet/minecraft/world/level/levelgen/feature/foliageplacers/FoliagePlacer$FoliageAttachment;IILjava/util/Set;ILnet/minecraft/world/level/levelgen/structure/BoundingBox;)V a
	foliageHeight (Ljava/util/Random;ILnet/minecraft/world/level/levelgen/feature/configurations/TreeConfiguration;)I a
	shouldSkipLocation (Ljava/util/Random;IIIIZ)Z a
	type ()Lnet/minecraft/world/level/levelgen/feature/foliageplacers/FoliagePlacerType; a
net/minecraft/world/level/levelgen/feature/foliageplacers/BlobFoliagePlacer cne
	CODEC a
	height b
	blobParts (Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/Products$P3; a
	createFoliage (Lnet/minecraft/world/level/LevelSimulatedRW;Ljava/util/Random;Lnet/minecraft/world/level/levelgen/feature/configurations/TreeConfiguration;ILnet/minecraft/world/level/levelgen/feature/foliageplacers/FoliagePlacer$FoliageAttachment;IILjava/util/Set;ILnet/minecraft/world/level/levelgen/structure/BoundingBox;)V a
	foliageHeight (Ljava/util/Random;ILnet/minecraft/world/level/levelgen/feature/configurations/TreeConfiguration;)I a
	shouldSkipLocation (Ljava/util/Random;IIIIZ)Z a
	type ()Lnet/minecraft/world/level/levelgen/feature/foliageplacers/FoliagePlacerType; a
net/minecraft/world/level/levelgen/feature/foliageplacers/BushFoliagePlacer cnf
	CODEC c
	createFoliage (Lnet/minecraft/world/level/LevelSimulatedRW;Ljava/util/Random;Lnet/minecraft/world/level/levelgen/feature/configurations/TreeConfiguration;ILnet/minecraft/world/level/levelgen/feature/foliageplacers/FoliagePlacer$FoliageAttachment;IILjava/util/Set;ILnet/minecraft/world/level/levelgen/structure/BoundingBox;)V a
	shouldSkipLocation (Ljava/util/Random;IIIIZ)Z a
	type ()Lnet/minecraft/world/level/levelgen/feature/foliageplacers/FoliagePlacerType; a
net/minecraft/world/level/levelgen/feature/foliageplacers/DarkOakFoliagePlacer cng
	CODEC a
	createFoliage (Lnet/minecraft/world/level/LevelSimulatedRW;Ljava/util/Random;Lnet/minecraft/world/level/levelgen/feature/configurations/TreeConfiguration;ILnet/minecraft/world/level/levelgen/feature/foliageplacers/FoliagePlacer$FoliageAttachment;IILjava/util/Set;ILnet/minecraft/world/level/levelgen/structure/BoundingBox;)V a
	foliageHeight (Ljava/util/Random;ILnet/minecraft/world/level/levelgen/feature/configurations/TreeConfiguration;)I a
	shouldSkipLocation (Ljava/util/Random;IIIIZ)Z a
	shouldSkipLocationSigned (Ljava/util/Random;IIIIZ)Z b
	type ()Lnet/minecraft/world/level/levelgen/feature/foliageplacers/FoliagePlacerType; a
net/minecraft/world/level/levelgen/feature/foliageplacers/FancyFoliagePlacer cnh
	CODEC c
	createFoliage (Lnet/minecraft/world/level/LevelSimulatedRW;Ljava/util/Random;Lnet/minecraft/world/level/levelgen/feature/configurations/TreeConfiguration;ILnet/minecraft/world/level/levelgen/feature/foliageplacers/FoliagePlacer$FoliageAttachment;IILjava/util/Set;ILnet/minecraft/world/level/levelgen/structure/BoundingBox;)V a
	shouldSkipLocation (Ljava/util/Random;IIIIZ)Z a
	type ()Lnet/minecraft/world/level/levelgen/feature/foliageplacers/FoliagePlacerType; a
net/minecraft/world/level/levelgen/feature/foliageplacers/FoliagePlacer cni
	CODEC d
	offset f
	radius e
	createFoliage (Lnet/minecraft/world/level/LevelSimulatedRW;Ljava/util/Random;Lnet/minecraft/world/level/levelgen/feature/configurations/TreeConfiguration;ILnet/minecraft/world/level/levelgen/feature/foliageplacers/FoliagePlacer$FoliageAttachment;IILjava/util/Set;ILnet/minecraft/world/level/levelgen/structure/BoundingBox;)V a
	createFoliage (Lnet/minecraft/world/level/LevelSimulatedRW;Ljava/util/Random;Lnet/minecraft/world/level/levelgen/feature/configurations/TreeConfiguration;ILnet/minecraft/world/level/levelgen/feature/foliageplacers/FoliagePlacer$FoliageAttachment;IILjava/util/Set;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;)V a
	foliageHeight (Ljava/util/Random;ILnet/minecraft/world/level/levelgen/feature/configurations/TreeConfiguration;)I a
	foliagePlacerParts (Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/Products$P2; b
	foliageRadius (Ljava/util/Random;I)I a
	offset (Ljava/util/Random;)I a
	placeLeavesRow (Lnet/minecraft/world/level/LevelSimulatedRW;Ljava/util/Random;Lnet/minecraft/world/level/levelgen/feature/configurations/TreeConfiguration;Lnet/minecraft/core/BlockPos;ILjava/util/Set;IZLnet/minecraft/world/level/levelgen/structure/BoundingBox;)V a
	shouldSkipLocation (Ljava/util/Random;IIIIZ)Z a
	shouldSkipLocationSigned (Ljava/util/Random;IIIIZ)Z b
	type ()Lnet/minecraft/world/level/levelgen/feature/foliageplacers/FoliagePlacerType; a
net/minecraft/world/level/levelgen/feature/foliageplacers/FoliagePlacer$Factory cni$a
	create (IIII)Lnet/minecraft/world/level/levelgen/feature/foliageplacers/FoliagePlacer; a
net/minecraft/world/level/levelgen/feature/foliageplacers/FoliagePlacer$FoliageAttachment cni$b
	doubleTrunk c
	foliagePos a
	radiusOffset b
	doubleTrunk ()Z c
	foliagePos ()Lnet/minecraft/core/BlockPos; a
	radiusOffset ()I b
net/minecraft/world/level/levelgen/feature/foliageplacers/FoliagePlacerType cnj
	ACACIA_FOLIAGE_PLACER d
	BLOB_FOLIAGE_PLACER a
	BUSH_FOLIAGE_PLACER e
	DARK_OAK_FOLIAGE_PLACER i
	FANCY_FOLIAGE_PLACER f
	MEGA_JUNGLE_FOLIAGE_PLACER g
	MEGA_PINE_FOLIAGE_PLACER h
	PINE_FOLIAGE_PLACER c
	SPRUCE_FOLIAGE_PLACER b
	codec j
	codec ()Lcom/mojang/serialization/Codec; a
	register (Ljava/lang/String;Lcom/mojang/serialization/Codec;)Lnet/minecraft/world/level/levelgen/feature/foliageplacers/FoliagePlacerType; a
net/minecraft/world/level/levelgen/feature/foliageplacers/MegaJungleFoliagePlacer cnk
	CODEC a
	height b
	createFoliage (Lnet/minecraft/world/level/LevelSimulatedRW;Ljava/util/Random;Lnet/minecraft/world/level/levelgen/feature/configurations/TreeConfiguration;ILnet/minecraft/world/level/levelgen/feature/foliageplacers/FoliagePlacer$FoliageAttachment;IILjava/util/Set;ILnet/minecraft/world/level/levelgen/structure/BoundingBox;)V a
	foliageHeight (Ljava/util/Random;ILnet/minecraft/world/level/levelgen/feature/configurations/TreeConfiguration;)I a
	shouldSkipLocation (Ljava/util/Random;IIIIZ)Z a
	type ()Lnet/minecraft/world/level/levelgen/feature/foliageplacers/FoliagePlacerType; a
net/minecraft/world/level/levelgen/feature/foliageplacers/MegaPineFoliagePlacer cnl
	CODEC a
	crownHeight b
	createFoliage (Lnet/minecraft/world/level/LevelSimulatedRW;Ljava/util/Random;Lnet/minecraft/world/level/levelgen/feature/configurations/TreeConfiguration;ILnet/minecraft/world/level/levelgen/feature/foliageplacers/FoliagePlacer$FoliageAttachment;IILjava/util/Set;ILnet/minecraft/world/level/levelgen/structure/BoundingBox;)V a
	foliageHeight (Ljava/util/Random;ILnet/minecraft/world/level/levelgen/feature/configurations/TreeConfiguration;)I a
	shouldSkipLocation (Ljava/util/Random;IIIIZ)Z a
	type ()Lnet/minecraft/world/level/levelgen/feature/foliageplacers/FoliagePlacerType; a
net/minecraft/world/level/levelgen/feature/foliageplacers/PineFoliagePlacer cnm
	CODEC a
	height b
	createFoliage (Lnet/minecraft/world/level/LevelSimulatedRW;Ljava/util/Random;Lnet/minecraft/world/level/levelgen/feature/configurations/TreeConfiguration;ILnet/minecraft/world/level/levelgen/feature/foliageplacers/FoliagePlacer$FoliageAttachment;IILjava/util/Set;ILnet/minecraft/world/level/levelgen/structure/BoundingBox;)V a
	foliageHeight (Ljava/util/Random;ILnet/minecraft/world/level/levelgen/feature/configurations/TreeConfiguration;)I a
	foliageRadius (Ljava/util/Random;I)I a
	shouldSkipLocation (Ljava/util/Random;IIIIZ)Z a
	type ()Lnet/minecraft/world/level/levelgen/feature/foliageplacers/FoliagePlacerType; a
net/minecraft/world/level/levelgen/feature/foliageplacers/SpruceFoliagePlacer cnn
	CODEC a
	trunkHeight b
	createFoliage (Lnet/minecraft/world/level/LevelSimulatedRW;Ljava/util/Random;Lnet/minecraft/world/level/levelgen/feature/configurations/TreeConfiguration;ILnet/minecraft/world/level/levelgen/feature/foliageplacers/FoliagePlacer$FoliageAttachment;IILjava/util/Set;ILnet/minecraft/world/level/levelgen/structure/BoundingBox;)V a
	foliageHeight (Ljava/util/Random;ILnet/minecraft/world/level/levelgen/feature/configurations/TreeConfiguration;)I a
	shouldSkipLocation (Ljava/util/Random;IIIIZ)Z a
	type ()Lnet/minecraft/world/level/levelgen/feature/foliageplacers/FoliagePlacerType; a
net/minecraft/world/level/levelgen/feature/stateproviders/BlockStateProvider cnq
	CODEC a
	getState (Ljava/util/Random;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
	type ()Lnet/minecraft/world/level/levelgen/feature/stateproviders/BlockStateProviderType; a
net/minecraft/world/level/levelgen/feature/stateproviders/BlockStateProviderType cnr
	FOREST_FLOWER_PROVIDER d
	PLAIN_FLOWER_PROVIDER c
	ROTATED_BLOCK_PROVIDER e
	SIMPLE_STATE_PROVIDER a
	WEIGHTED_STATE_PROVIDER b
	codec f
	codec ()Lcom/mojang/serialization/Codec; a
	register (Ljava/lang/String;Lcom/mojang/serialization/Codec;)Lnet/minecraft/world/level/levelgen/feature/stateproviders/BlockStateProviderType; a
net/minecraft/world/level/levelgen/feature/stateproviders/ForestFlowerProvider cns
	CODEC b
	FLOWERS d
	INSTANCE c
	getState (Ljava/util/Random;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
	type ()Lnet/minecraft/world/level/levelgen/feature/stateproviders/BlockStateProviderType; a
net/minecraft/world/level/levelgen/feature/stateproviders/PlainFlowerProvider cnt
	CODEC b
	HIGH_NOISE_FLOWERS e
	INSTANCE c
	LOW_NOISE_FLOWERS d
	getState (Ljava/util/Random;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
	type ()Lnet/minecraft/world/level/levelgen/feature/stateproviders/BlockStateProviderType; a
net/minecraft/world/level/levelgen/feature/stateproviders/RotatedBlockProvider cnu
	CODEC b
	block c
	getState (Ljava/util/Random;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
	type ()Lnet/minecraft/world/level/levelgen/feature/stateproviders/BlockStateProviderType; a
net/minecraft/world/level/levelgen/feature/stateproviders/SimpleStateProvider cnv
	CODEC b
	state c
	getState (Ljava/util/Random;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
	type ()Lnet/minecraft/world/level/levelgen/feature/stateproviders/BlockStateProviderType; a
net/minecraft/world/level/levelgen/feature/stateproviders/WeightedStateProvider cnw
	CODEC b
	weightedList c
	add (Lnet/minecraft/world/level/block/state/BlockState;I)Lnet/minecraft/world/level/levelgen/feature/stateproviders/WeightedStateProvider; a
	create (Lnet/minecraft/world/entity/ai/behavior/WeightedList;)Lcom/mojang/serialization/DataResult; a
	getState (Ljava/util/Random;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
	type ()Lnet/minecraft/world/level/levelgen/feature/stateproviders/BlockStateProviderType; a
net/minecraft/world/level/levelgen/feature/structures/EmptyPoolElement cny
	CODEC a
	INSTANCE b
	getBoundingBox (Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureManager;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Rotation;)Lnet/minecraft/world/level/levelgen/structure/BoundingBox; a
	getShuffledJigsawBlocks (Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureManager;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Rotation;Ljava/util/Random;)Ljava/util/List; a
	getSize (Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureManager;Lnet/minecraft/world/level/block/Rotation;)Lnet/minecraft/core/BlockPos; a
	getType ()Lnet/minecraft/world/level/levelgen/feature/structures/StructurePoolElementType; a
	place (Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureManager;Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/StructureFeatureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Rotation;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Ljava/util/Random;Z)Z a
net/minecraft/world/level/levelgen/feature/structures/FeaturePoolElement cnz
	CODEC a
	defaultJigsawNBT c
	feature b
	fillDefaultJigsawNBT ()Lnet/minecraft/nbt/CompoundTag; b
	getBoundingBox (Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureManager;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Rotation;)Lnet/minecraft/world/level/levelgen/structure/BoundingBox; a
	getShuffledJigsawBlocks (Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureManager;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Rotation;Ljava/util/Random;)Ljava/util/List; a
	getSize (Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureManager;Lnet/minecraft/world/level/block/Rotation;)Lnet/minecraft/core/BlockPos; a
	getType ()Lnet/minecraft/world/level/levelgen/feature/structures/StructurePoolElementType; a
	place (Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureManager;Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/StructureFeatureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Rotation;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Ljava/util/Random;Z)Z a
net/minecraft/world/level/levelgen/feature/structures/JigsawJunction coa
	deltaY d
	destProjection e
	sourceGroundY b
	sourceX a
	sourceZ c
	deserialize (Lcom/mojang/serialization/Dynamic;)Lnet/minecraft/world/level/levelgen/feature/structures/JigsawJunction; a
	getDeltaY ()I d
	getDestProjection ()Lnet/minecraft/world/level/levelgen/feature/structures/StructureTemplatePool$Projection; e
	getSourceGroundY ()I b
	getSourceX ()I a
	getSourceZ ()I c
	serialize (Lcom/mojang/serialization/DynamicOps;)Lcom/mojang/serialization/Dynamic; a
net/minecraft/world/level/levelgen/feature/structures/JigsawPlacement cob
	LOGGER a
	addPieces (Lnet/minecraft/core/RegistryAccess;Lnet/minecraft/world/level/levelgen/feature/configurations/JigsawConfiguration;Lnet/minecraft/world/level/levelgen/feature/structures/JigsawPlacement$PieceFactory;Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureManager;Lnet/minecraft/core/BlockPos;Ljava/util/List;Ljava/util/Random;ZZ)V a
	addPieces (Lnet/minecraft/core/RegistryAccess;Lnet/minecraft/world/level/levelgen/structure/PoolElementStructurePiece;ILnet/minecraft/world/level/levelgen/feature/structures/JigsawPlacement$PieceFactory;Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureManager;Ljava/util/List;Ljava/util/Random;)V a
net/minecraft/world/level/levelgen/feature/structures/JigsawPlacement$PieceFactory cob$a
net/minecraft/world/level/levelgen/feature/structures/JigsawPlacement$PieceState cob$b
	boundsTop c
	depth d
	free b
	piece a
net/minecraft/world/level/levelgen/feature/structures/JigsawPlacement$Placer cob$c
	chunkGenerator d
	factory c
	maxDepth b
	pieces f
	placing h
	pools a
	random g
	structureManager e
	tryPlacingChildren (Lnet/minecraft/world/level/levelgen/structure/PoolElementStructurePiece;Lorg/apache/commons/lang3/mutable/MutableObject;IIZ)V a
net/minecraft/world/level/levelgen/feature/structures/LegacySinglePoolElement coc
	CODEC a
	getSettings (Lnet/minecraft/world/level/block/Rotation;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Z)Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructurePlaceSettings; a
	getType ()Lnet/minecraft/world/level/levelgen/feature/structures/StructurePoolElementType; a
net/minecraft/world/level/levelgen/feature/structures/ListPoolElement cod
	CODEC a
	elements b
	getBoundingBox (Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureManager;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Rotation;)Lnet/minecraft/world/level/levelgen/structure/BoundingBox; a
	getShuffledJigsawBlocks (Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureManager;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Rotation;Ljava/util/Random;)Ljava/util/List; a
	getSize (Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureManager;Lnet/minecraft/world/level/block/Rotation;)Lnet/minecraft/core/BlockPos; a
	getType ()Lnet/minecraft/world/level/levelgen/feature/structures/StructurePoolElementType; a
	place (Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureManager;Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/StructureFeatureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Rotation;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Ljava/util/Random;Z)Z a
	setProjection (Lnet/minecraft/world/level/levelgen/feature/structures/StructureTemplatePool$Projection;)Lnet/minecraft/world/level/levelgen/feature/structures/StructurePoolElement; a
	setProjectionOnEachElement (Lnet/minecraft/world/level/levelgen/feature/structures/StructureTemplatePool$Projection;)V b
net/minecraft/world/level/levelgen/feature/structures/SinglePoolElement coe
	CODEC b
	TEMPLATE_CODEC a
	processors d
	template c
	encodeTemplate (Lcom/mojang/datafixers/util/Either;Lcom/mojang/serialization/DynamicOps;Ljava/lang/Object;)Lcom/mojang/serialization/DataResult; a
	getBoundingBox (Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureManager;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Rotation;)Lnet/minecraft/world/level/levelgen/structure/BoundingBox; a
	getDataMarkers (Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureManager;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Rotation;Z)Ljava/util/List; a
	getSettings (Lnet/minecraft/world/level/block/Rotation;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Z)Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructurePlaceSettings; a
	getShuffledJigsawBlocks (Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureManager;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Rotation;Ljava/util/Random;)Ljava/util/List; a
	getSize (Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureManager;Lnet/minecraft/world/level/block/Rotation;)Lnet/minecraft/core/BlockPos; a
	getTemplate (Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureManager;)Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplate; a
	getType ()Lnet/minecraft/world/level/levelgen/feature/structures/StructurePoolElementType; a
	place (Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureManager;Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/StructureFeatureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Rotation;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Ljava/util/Random;Z)Z a
	processorsCodec ()Lcom/mojang/serialization/codecs/RecordCodecBuilder; b
	templateCodec ()Lcom/mojang/serialization/codecs/RecordCodecBuilder; c
net/minecraft/world/level/levelgen/feature/structures/StructurePoolElement cof
	CODEC e
	projection a
	empty ()Ljava/util/function/Function; g
	feature (Lnet/minecraft/world/level/levelgen/feature/ConfiguredFeature;)Ljava/util/function/Function; a
	getBoundingBox (Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureManager;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Rotation;)Lnet/minecraft/world/level/levelgen/structure/BoundingBox; a
	getGroundLevelDelta ()I f
	getProjection ()Lnet/minecraft/world/level/levelgen/feature/structures/StructureTemplatePool$Projection; e
	getShuffledJigsawBlocks (Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureManager;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Rotation;Ljava/util/Random;)Ljava/util/List; a
	getSize (Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureManager;Lnet/minecraft/world/level/block/Rotation;)Lnet/minecraft/core/BlockPos; a
	getType ()Lnet/minecraft/world/level/levelgen/feature/structures/StructurePoolElementType; a
	handleDataMarker (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplate$StructureBlockInfo;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Rotation;Ljava/util/Random;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;)V a
	legacy (Ljava/lang/String;)Ljava/util/function/Function; a
	legacy (Ljava/lang/String;Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureProcessorList;)Ljava/util/function/Function; a
	list (Ljava/util/List;)Ljava/util/function/Function; a
	place (Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureManager;Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/StructureFeatureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Rotation;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Ljava/util/Random;Z)Z a
	projectionCodec ()Lcom/mojang/serialization/codecs/RecordCodecBuilder; d
	setProjection (Lnet/minecraft/world/level/levelgen/feature/structures/StructureTemplatePool$Projection;)Lnet/minecraft/world/level/levelgen/feature/structures/StructurePoolElement; a
	single (Ljava/lang/String;)Ljava/util/function/Function; b
	single (Ljava/lang/String;Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureProcessorList;)Ljava/util/function/Function; b
net/minecraft/world/level/levelgen/feature/structures/StructurePoolElementType cog
	EMPTY d
	FEATURE c
	LEGACY e
	LIST b
	SINGLE a
	register (Ljava/lang/String;Lcom/mojang/serialization/Codec;)Lnet/minecraft/world/level/levelgen/feature/structures/StructurePoolElementType; a
net/minecraft/world/level/levelgen/feature/structures/StructureTemplatePool coh
	CODEC b
	DIRECT_CODEC a
	LOGGER c
	fallback g
	maxSize h
	name d
	rawTemplates e
	templates f
	getFallback ()Lnet/minecraft/resources/ResourceLocation; a
	getMaxSize (Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureManager;)I a
	getName ()Lnet/minecraft/resources/ResourceLocation; b
	getRandomTemplate (Ljava/util/Random;)Lnet/minecraft/world/level/levelgen/feature/structures/StructurePoolElement; a
	getShuffledTemplates (Ljava/util/Random;)Ljava/util/List; b
	size ()I c
net/minecraft/world/level/levelgen/feature/structures/StructureTemplatePool$Projection coh$a
	$VALUES g
	BY_NAME d
	CODEC c
	RIGID b
	TERRAIN_MATCHING a
	name e
	processors f
	byName (Ljava/lang/String;)Lnet/minecraft/world/level/levelgen/feature/structures/StructureTemplatePool$Projection; a
	getName ()Ljava/lang/String; b
	getProcessors ()Lcom/google/common/collect/ImmutableList; c
	getSerializedName ()Ljava/lang/String; a
net/minecraft/world/level/levelgen/feature/treedecorators/AlterGroundDecorator coj
	CODEC a
	provider b
	place (Lnet/minecraft/world/level/WorldGenLevel;Ljava/util/Random;Ljava/util/List;Ljava/util/List;Ljava/util/Set;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;)V a
	placeBlockAt (Lnet/minecraft/world/level/LevelSimulatedRW;Ljava/util/Random;Lnet/minecraft/core/BlockPos;)V b
	placeCircle (Lnet/minecraft/world/level/LevelSimulatedRW;Ljava/util/Random;Lnet/minecraft/core/BlockPos;)V a
	type ()Lnet/minecraft/world/level/levelgen/feature/treedecorators/TreeDecoratorType; a
net/minecraft/world/level/levelgen/feature/treedecorators/BeehiveDecorator cok
	CODEC a
	probability b
	place (Lnet/minecraft/world/level/WorldGenLevel;Ljava/util/Random;Ljava/util/List;Ljava/util/List;Ljava/util/Set;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;)V a
	type ()Lnet/minecraft/world/level/levelgen/feature/treedecorators/TreeDecoratorType; a
net/minecraft/world/level/levelgen/feature/treedecorators/CocoaDecorator col
	CODEC a
	probability b
	place (Lnet/minecraft/world/level/WorldGenLevel;Ljava/util/Random;Ljava/util/List;Ljava/util/List;Ljava/util/Set;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;)V a
	type ()Lnet/minecraft/world/level/levelgen/feature/treedecorators/TreeDecoratorType; a
net/minecraft/world/level/levelgen/feature/treedecorators/LeaveVineDecorator com
	CODEC a
	INSTANCE b
	addHangingVine (Lnet/minecraft/world/level/LevelSimulatedRW;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/properties/BooleanProperty;Ljava/util/Set;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;)V a
	place (Lnet/minecraft/world/level/WorldGenLevel;Ljava/util/Random;Ljava/util/List;Ljava/util/List;Ljava/util/Set;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;)V a
	type ()Lnet/minecraft/world/level/levelgen/feature/treedecorators/TreeDecoratorType; a
net/minecraft/world/level/levelgen/feature/treedecorators/TreeDecorator coo
	CODEC c
	place (Lnet/minecraft/world/level/WorldGenLevel;Ljava/util/Random;Ljava/util/List;Ljava/util/List;Ljava/util/Set;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;)V a
	placeVine (Lnet/minecraft/world/level/LevelWriter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/properties/BooleanProperty;Ljava/util/Set;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;)V a
	setBlock (Lnet/minecraft/world/level/LevelWriter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Ljava/util/Set;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;)V a
	type ()Lnet/minecraft/world/level/levelgen/feature/treedecorators/TreeDecoratorType; a
net/minecraft/world/level/levelgen/feature/treedecorators/TreeDecoratorType cop
	ALTER_GROUND e
	BEEHIVE d
	COCOA c
	LEAVE_VINE b
	TRUNK_VINE a
	codec f
	codec ()Lcom/mojang/serialization/Codec; a
	register (Ljava/lang/String;Lcom/mojang/serialization/Codec;)Lnet/minecraft/world/level/levelgen/feature/treedecorators/TreeDecoratorType; a
net/minecraft/world/level/levelgen/feature/treedecorators/TrunkVineDecorator coq
	CODEC a
	INSTANCE b
	place (Lnet/minecraft/world/level/WorldGenLevel;Ljava/util/Random;Ljava/util/List;Ljava/util/List;Ljava/util/Set;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;)V a
	type ()Lnet/minecraft/world/level/levelgen/feature/treedecorators/TreeDecoratorType; a
net/minecraft/world/level/levelgen/feature/trunkplacers/DarkOakTrunkPlacer cos
	CODEC a
	placeTrunk (Lnet/minecraft/world/level/LevelSimulatedRW;Ljava/util/Random;ILnet/minecraft/core/BlockPos;Ljava/util/Set;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Lnet/minecraft/world/level/levelgen/feature/configurations/TreeConfiguration;)Ljava/util/List; a
	type ()Lnet/minecraft/world/level/levelgen/feature/trunkplacers/TrunkPlacerType; a
net/minecraft/world/level/levelgen/feature/trunkplacers/FancyTrunkPlacer cot
	CODEC a
	getLogAxis (Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/core/Direction$Axis; a
	getSteps (Lnet/minecraft/core/BlockPos;)I a
	makeBranches (Lnet/minecraft/world/level/LevelSimulatedRW;Ljava/util/Random;ILnet/minecraft/core/BlockPos;Ljava/util/List;Ljava/util/Set;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Lnet/minecraft/world/level/levelgen/feature/configurations/TreeConfiguration;)V a
	makeLimb (Lnet/minecraft/world/level/LevelSimulatedRW;Ljava/util/Random;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;ZLjava/util/Set;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Lnet/minecraft/world/level/levelgen/feature/configurations/TreeConfiguration;)Z a
	placeTrunk (Lnet/minecraft/world/level/LevelSimulatedRW;Ljava/util/Random;ILnet/minecraft/core/BlockPos;Ljava/util/Set;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Lnet/minecraft/world/level/levelgen/feature/configurations/TreeConfiguration;)Ljava/util/List; a
	treeShape (II)F b
	trimBranches (II)Z a
	type ()Lnet/minecraft/world/level/levelgen/feature/trunkplacers/TrunkPlacerType; a
net/minecraft/world/level/levelgen/feature/trunkplacers/FancyTrunkPlacer$FoliageCoords cot$a
	attachment a
	branchBase b
	getBranchBase ()I a
net/minecraft/world/level/levelgen/feature/trunkplacers/ForkingTrunkPlacer cou
	CODEC a
	placeTrunk (Lnet/minecraft/world/level/LevelSimulatedRW;Ljava/util/Random;ILnet/minecraft/core/BlockPos;Ljava/util/Set;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Lnet/minecraft/world/level/levelgen/feature/configurations/TreeConfiguration;)Ljava/util/List; a
	type ()Lnet/minecraft/world/level/levelgen/feature/trunkplacers/TrunkPlacerType; a
net/minecraft/world/level/levelgen/feature/trunkplacers/GiantTrunkPlacer cov
	CODEC a
	placeLogIfFreeWithOffset (Lnet/minecraft/world/level/LevelSimulatedRW;Ljava/util/Random;Lnet/minecraft/core/BlockPos$MutableBlockPos;Ljava/util/Set;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Lnet/minecraft/world/level/levelgen/feature/configurations/TreeConfiguration;Lnet/minecraft/core/BlockPos;III)V a
	placeTrunk (Lnet/minecraft/world/level/LevelSimulatedRW;Ljava/util/Random;ILnet/minecraft/core/BlockPos;Ljava/util/Set;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Lnet/minecraft/world/level/levelgen/feature/configurations/TreeConfiguration;)Ljava/util/List; a
	type ()Lnet/minecraft/world/level/levelgen/feature/trunkplacers/TrunkPlacerType; a
net/minecraft/world/level/levelgen/feature/trunkplacers/MegaJungleTrunkPlacer cow
	CODEC b
	placeTrunk (Lnet/minecraft/world/level/LevelSimulatedRW;Ljava/util/Random;ILnet/minecraft/core/BlockPos;Ljava/util/Set;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Lnet/minecraft/world/level/levelgen/feature/configurations/TreeConfiguration;)Ljava/util/List; a
	type ()Lnet/minecraft/world/level/levelgen/feature/trunkplacers/TrunkPlacerType; a
net/minecraft/world/level/levelgen/feature/trunkplacers/StraightTrunkPlacer cox
	CODEC a
	placeTrunk (Lnet/minecraft/world/level/LevelSimulatedRW;Ljava/util/Random;ILnet/minecraft/core/BlockPos;Ljava/util/Set;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Lnet/minecraft/world/level/levelgen/feature/configurations/TreeConfiguration;)Ljava/util/List; a
	type ()Lnet/minecraft/world/level/levelgen/feature/trunkplacers/TrunkPlacerType; a
net/minecraft/world/level/levelgen/feature/trunkplacers/TrunkPlacer coy
	CODEC c
	baseHeight d
	heightRandA e
	heightRandB f
	getTreeHeight (Ljava/util/Random;)I a
	isDirt (Lnet/minecraft/world/level/LevelSimulatedReader;Lnet/minecraft/core/BlockPos;)Z a
	placeLog (Lnet/minecraft/world/level/LevelSimulatedRW;Ljava/util/Random;Lnet/minecraft/core/BlockPos;Ljava/util/Set;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Lnet/minecraft/world/level/levelgen/feature/configurations/TreeConfiguration;)Z a
	placeLogIfFree (Lnet/minecraft/world/level/LevelSimulatedRW;Ljava/util/Random;Lnet/minecraft/core/BlockPos$MutableBlockPos;Ljava/util/Set;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Lnet/minecraft/world/level/levelgen/feature/configurations/TreeConfiguration;)V a
	placeTrunk (Lnet/minecraft/world/level/LevelSimulatedRW;Ljava/util/Random;ILnet/minecraft/core/BlockPos;Ljava/util/Set;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Lnet/minecraft/world/level/levelgen/feature/configurations/TreeConfiguration;)Ljava/util/List; a
	setBlock (Lnet/minecraft/world/level/LevelWriter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;)V a
	setDirtAt (Lnet/minecraft/world/level/LevelSimulatedRW;Lnet/minecraft/core/BlockPos;)V a
	trunkPlacerParts (Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/Products$P3; a
	type ()Lnet/minecraft/world/level/levelgen/feature/trunkplacers/TrunkPlacerType; a
net/minecraft/world/level/levelgen/feature/trunkplacers/TrunkPlacerType coz
	DARK_OAK_TRUNK_PLACER e
	FANCY_TRUNK_PLACER f
	FORKING_TRUNK_PLACER b
	GIANT_TRUNK_PLACER c
	MEGA_JUNGLE_TRUNK_PLACER d
	STRAIGHT_TRUNK_PLACER a
	codec g
	codec ()Lcom/mojang/serialization/Codec; a
	register (Ljava/lang/String;Lcom/mojang/serialization/Codec;)Lnet/minecraft/world/level/levelgen/feature/trunkplacers/TrunkPlacerType; a
net/minecraft/world/level/levelgen/flat/FlatLayerInfo cpb
	CODEC a
	blockState b
	height c
	start d
	getBlockState ()Lnet/minecraft/world/level/block/state/BlockState; b
	getHeight ()I a
	getStart ()I c
	setStart (I)V a
net/minecraft/world/level/levelgen/flat/FlatLevelGeneratorSettings cpc
	CODEC a
	LOGGER b
	STRUCTURE_FEATURES c
	addLakes k
	biome g
	biomes d
	decoration j
	layers h
	layersInfo f
	structureSettings e
	voidGen i
	getBiome ()Lnet/minecraft/world/level/biome/Biome; e
	getBiomeFromSettings ()Lnet/minecraft/world/level/biome/Biome; c
	getDefault (Lnet/minecraft/core/Registry;)Lnet/minecraft/world/level/levelgen/flat/FlatLevelGeneratorSettings; a
	getLayers ()[Lnet/minecraft/world/level/block/state/BlockState; g
	getLayersInfo ()Ljava/util/List; f
	setAddLakes ()V b
	setBiome (Ljava/util/function/Supplier;)V a
	setDecoration ()V a
	structureSettings ()Lnet/minecraft/world/level/levelgen/StructureSettings; d
	updateLayers ()V h
	withLayers (Ljava/util/List;Lnet/minecraft/world/level/levelgen/StructureSettings;)Lnet/minecraft/world/level/levelgen/flat/FlatLevelGeneratorSettings; a
	withStructureSettings (Lnet/minecraft/world/level/levelgen/StructureSettings;)Lnet/minecraft/world/level/levelgen/flat/FlatLevelGeneratorSettings; a
net/minecraft/world/level/levelgen/placement/BaseHeightmapDecorator cpf
	getPositions (Lnet/minecraft/world/level/levelgen/placement/DecorationContext;Ljava/util/Random;Lnet/minecraft/world/level/levelgen/feature/configurations/DecoratorConfiguration;Lnet/minecraft/core/BlockPos;)Ljava/util/stream/Stream; a
net/minecraft/world/level/levelgen/placement/BiasedRangeDecorator cpg
	place (Ljava/util/Random;Lnet/minecraft/world/level/levelgen/feature/configurations/DecoratorConfiguration;Lnet/minecraft/core/BlockPos;)Ljava/util/stream/Stream; a
	place (Ljava/util/Random;Lnet/minecraft/world/level/levelgen/feature/configurations/RangeDecoratorConfiguration;Lnet/minecraft/core/BlockPos;)Ljava/util/stream/Stream; a
net/minecraft/world/level/levelgen/placement/CarvingMaskDecorator cph
	getPositions (Lnet/minecraft/world/level/levelgen/placement/DecorationContext;Ljava/util/Random;Lnet/minecraft/world/level/levelgen/feature/configurations/DecoratorConfiguration;Lnet/minecraft/core/BlockPos;)Ljava/util/stream/Stream; a
	getPositions (Lnet/minecraft/world/level/levelgen/placement/DecorationContext;Ljava/util/Random;Lnet/minecraft/world/level/levelgen/placement/CarvingMaskDecoratorConfiguration;Lnet/minecraft/core/BlockPos;)Ljava/util/stream/Stream; a
net/minecraft/world/level/levelgen/placement/CarvingMaskDecoratorConfiguration cpi
	CODEC a
	probability d
	step c
net/minecraft/world/level/levelgen/placement/ChanceDecorator cpj
	place (Ljava/util/Random;Lnet/minecraft/world/level/levelgen/feature/configurations/DecoratorConfiguration;Lnet/minecraft/core/BlockPos;)Ljava/util/stream/Stream; a
	place (Ljava/util/Random;Lnet/minecraft/world/level/levelgen/placement/ChanceDecoratorConfiguration;Lnet/minecraft/core/BlockPos;)Ljava/util/stream/Stream; a
net/minecraft/world/level/levelgen/placement/ChanceDecoratorConfiguration cpk
	CODEC a
	chance c
net/minecraft/world/level/levelgen/placement/ConfiguredDecorator cpl
	CODEC a
	config c
	decorator b
	config ()Lnet/minecraft/world/level/levelgen/feature/configurations/DecoratorConfiguration; b
	decorated (Lnet/minecraft/world/level/levelgen/placement/ConfiguredDecorator;)Ljava/lang/Object; a
	decorated (Lnet/minecraft/world/level/levelgen/placement/ConfiguredDecorator;)Lnet/minecraft/world/level/levelgen/placement/ConfiguredDecorator; b
	getPositions (Lnet/minecraft/world/level/levelgen/placement/DecorationContext;Ljava/util/Random;Lnet/minecraft/core/BlockPos;)Ljava/util/stream/Stream; a
net/minecraft/world/level/levelgen/placement/CountDecorator cpm
	place (Ljava/util/Random;Lnet/minecraft/world/level/levelgen/feature/configurations/CountConfiguration;Lnet/minecraft/core/BlockPos;)Ljava/util/stream/Stream; a
	place (Ljava/util/Random;Lnet/minecraft/world/level/levelgen/feature/configurations/DecoratorConfiguration;Lnet/minecraft/core/BlockPos;)Ljava/util/stream/Stream; a
net/minecraft/world/level/levelgen/placement/CountNoiseDecorator cpn
	getPositions (Lnet/minecraft/world/level/levelgen/placement/DecorationContext;Ljava/util/Random;Lnet/minecraft/world/level/levelgen/feature/configurations/DecoratorConfiguration;Lnet/minecraft/core/BlockPos;)Ljava/util/stream/Stream; a
	getPositions (Lnet/minecraft/world/level/levelgen/placement/DecorationContext;Ljava/util/Random;Lnet/minecraft/world/level/levelgen/feature/configurations/NoiseDependantDecoratorConfiguration;Lnet/minecraft/core/BlockPos;)Ljava/util/stream/Stream; a
net/minecraft/world/level/levelgen/placement/CountWithExtraChanceDecorator cpo
	place (Ljava/util/Random;Lnet/minecraft/world/level/levelgen/feature/configurations/DecoratorConfiguration;Lnet/minecraft/core/BlockPos;)Ljava/util/stream/Stream; a
	place (Ljava/util/Random;Lnet/minecraft/world/level/levelgen/placement/FrequencyWithExtraChanceDecoratorConfiguration;Lnet/minecraft/core/BlockPos;)Ljava/util/stream/Stream; a
net/minecraft/world/level/levelgen/placement/DarkOakTreePlacementDecorator cpp
	getPositions (Lnet/minecraft/world/level/levelgen/placement/DecorationContext;Ljava/util/Random;Lnet/minecraft/world/level/levelgen/feature/configurations/DecoratorConfiguration;Lnet/minecraft/core/BlockPos;)Ljava/util/stream/Stream; a
	getPositions (Lnet/minecraft/world/level/levelgen/placement/DecorationContext;Ljava/util/Random;Lnet/minecraft/world/level/levelgen/feature/configurations/NoneDecoratorConfiguration;Lnet/minecraft/core/BlockPos;)Ljava/util/stream/Stream; a
	type (Lnet/minecraft/world/level/levelgen/feature/configurations/DecoratorConfiguration;)Lnet/minecraft/world/level/levelgen/Heightmap$Types; a
	type (Lnet/minecraft/world/level/levelgen/feature/configurations/NoneDecoratorConfiguration;)Lnet/minecraft/world/level/levelgen/Heightmap$Types; a
net/minecraft/world/level/levelgen/placement/DecoratedDecorator cpq
	getPositions (Lnet/minecraft/world/level/levelgen/placement/DecorationContext;Ljava/util/Random;Lnet/minecraft/world/level/levelgen/feature/configurations/DecoratorConfiguration;Lnet/minecraft/core/BlockPos;)Ljava/util/stream/Stream; a
	getPositions (Lnet/minecraft/world/level/levelgen/placement/DecorationContext;Ljava/util/Random;Lnet/minecraft/world/level/levelgen/placement/DecoratedDecoratorConfiguration;Lnet/minecraft/core/BlockPos;)Ljava/util/stream/Stream; a
net/minecraft/world/level/levelgen/placement/DecoratedDecoratorConfiguration cpr
	CODEC a
	inner d
	outer c
	inner ()Lnet/minecraft/world/level/levelgen/placement/ConfiguredDecorator; b
	outer ()Lnet/minecraft/world/level/levelgen/placement/ConfiguredDecorator; a
net/minecraft/world/level/levelgen/placement/DecorationContext cps
	generator b
	level a
	getBlockState (Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
	getCarvingMask (Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/world/level/levelgen/GenerationStep$Carving;)Ljava/util/BitSet; a
	getGenDepth ()I a
	getHeight (Lnet/minecraft/world/level/levelgen/Heightmap$Types;II)I a
	getSeaLevel ()I b
net/minecraft/world/level/levelgen/placement/DepthAverageConfigation cpt
	CODEC a
	baseline c
	spread d
net/minecraft/world/level/levelgen/placement/DepthAverageDecorator cpu
	place (Ljava/util/Random;Lnet/minecraft/world/level/levelgen/feature/configurations/DecoratorConfiguration;Lnet/minecraft/core/BlockPos;)Ljava/util/stream/Stream; a
	place (Ljava/util/Random;Lnet/minecraft/world/level/levelgen/placement/DepthAverageConfigation;Lnet/minecraft/core/BlockPos;)Ljava/util/stream/Stream; a
net/minecraft/world/level/levelgen/placement/EdgeDecorator cpv
	type (Lnet/minecraft/world/level/levelgen/feature/configurations/DecoratorConfiguration;)Lnet/minecraft/world/level/levelgen/Heightmap$Types; a
net/minecraft/world/level/levelgen/placement/EmeraldPlacementDecorator cpw
	place (Ljava/util/Random;Lnet/minecraft/world/level/levelgen/feature/configurations/DecoratorConfiguration;Lnet/minecraft/core/BlockPos;)Ljava/util/stream/Stream; a
	place (Ljava/util/Random;Lnet/minecraft/world/level/levelgen/feature/configurations/NoneDecoratorConfiguration;Lnet/minecraft/core/BlockPos;)Ljava/util/stream/Stream; a
net/minecraft/world/level/levelgen/placement/EndGatewayPlacementDecorator cpx
	getPositions (Lnet/minecraft/world/level/levelgen/placement/DecorationContext;Ljava/util/Random;Lnet/minecraft/world/level/levelgen/feature/configurations/DecoratorConfiguration;Lnet/minecraft/core/BlockPos;)Ljava/util/stream/Stream; a
	getPositions (Lnet/minecraft/world/level/levelgen/placement/DecorationContext;Ljava/util/Random;Lnet/minecraft/world/level/levelgen/feature/configurations/NoneDecoratorConfiguration;Lnet/minecraft/core/BlockPos;)Ljava/util/stream/Stream; a
net/minecraft/world/level/levelgen/placement/EndIslandPlacementDecorator cpy
	place (Ljava/util/Random;Lnet/minecraft/world/level/levelgen/feature/configurations/DecoratorConfiguration;Lnet/minecraft/core/BlockPos;)Ljava/util/stream/Stream; a
	place (Ljava/util/Random;Lnet/minecraft/world/level/levelgen/feature/configurations/NoneDecoratorConfiguration;Lnet/minecraft/core/BlockPos;)Ljava/util/stream/Stream; a
net/minecraft/world/level/levelgen/placement/FeatureDecorator cpz
	CARVING_MASK q
	CHANCE b
	COUNT c
	COUNT_EXTRA f
	COUNT_MULTILAYER C
	COUNT_NOISE d
	COUNT_NOISE_BIASED e
	DARK_OAK_TREE y
	DECORATED B
	DEPTH_AVERAGE o
	EMERALD_ORE t
	END_GATEWAY x
	END_ISLAND A
	FIRE r
	GLOWSTONE w
	HEIGHTMAP h
	HEIGHTMAP_SPREAD_DOUBLE i
	HEIGHTMAP_WORLD_SURFACE k
	ICEBERG z
	LAVA_LAKE u
	MAGMA s
	NOPE a
	RANGE l
	RANGE_BIASED m
	RANGE_VERY_BIASED n
	SPREAD_32_ABOVE p
	SQUARE g
	TOP_SOLID_HEIGHTMAP j
	WATER_LAKE v
	configuredCodec D
	configured (Lnet/minecraft/world/level/levelgen/feature/configurations/DecoratorConfiguration;)Lnet/minecraft/world/level/levelgen/placement/ConfiguredDecorator; b
	configuredCodec ()Lcom/mojang/serialization/Codec; a
	getPositions (Lnet/minecraft/world/level/levelgen/placement/DecorationContext;Ljava/util/Random;Lnet/minecraft/world/level/levelgen/feature/configurations/DecoratorConfiguration;Lnet/minecraft/core/BlockPos;)Ljava/util/stream/Stream; a
	register (Ljava/lang/String;Lnet/minecraft/world/level/levelgen/placement/FeatureDecorator;)Lnet/minecraft/world/level/levelgen/placement/FeatureDecorator; a
net/minecraft/world/level/levelgen/placement/FrequencyWithExtraChanceDecoratorConfiguration cqa
	CODEC a
	count c
	extraChance d
	extraCount e
net/minecraft/world/level/levelgen/placement/HeightMapWorldSurfaceDecorator cqb
	type (Lnet/minecraft/world/level/levelgen/feature/configurations/DecoratorConfiguration;)Lnet/minecraft/world/level/levelgen/Heightmap$Types; a
	type (Lnet/minecraft/world/level/levelgen/feature/configurations/NoneDecoratorConfiguration;)Lnet/minecraft/world/level/levelgen/Heightmap$Types; a
net/minecraft/world/level/levelgen/placement/HeightmapDecorator cqc
	type (Lnet/minecraft/world/level/levelgen/feature/configurations/DecoratorConfiguration;)Lnet/minecraft/world/level/levelgen/Heightmap$Types; a
net/minecraft/world/level/levelgen/placement/HeightmapDoubleDecorator cqd
	getPositions (Lnet/minecraft/world/level/levelgen/placement/DecorationContext;Ljava/util/Random;Lnet/minecraft/world/level/levelgen/feature/configurations/DecoratorConfiguration;Lnet/minecraft/core/BlockPos;)Ljava/util/stream/Stream; a
	type (Lnet/minecraft/world/level/levelgen/feature/configurations/DecoratorConfiguration;)Lnet/minecraft/world/level/levelgen/Heightmap$Types; a
net/minecraft/world/level/levelgen/placement/IcebergPlacementDecorator cqe
	place (Ljava/util/Random;Lnet/minecraft/world/level/levelgen/feature/configurations/DecoratorConfiguration;Lnet/minecraft/core/BlockPos;)Ljava/util/stream/Stream; a
	place (Ljava/util/Random;Lnet/minecraft/world/level/levelgen/feature/configurations/NoneDecoratorConfiguration;Lnet/minecraft/core/BlockPos;)Ljava/util/stream/Stream; a
net/minecraft/world/level/levelgen/placement/LakeLavaPlacementDecorator cqf
	getPositions (Lnet/minecraft/world/level/levelgen/placement/DecorationContext;Ljava/util/Random;Lnet/minecraft/world/level/levelgen/feature/configurations/DecoratorConfiguration;Lnet/minecraft/core/BlockPos;)Ljava/util/stream/Stream; a
	getPositions (Lnet/minecraft/world/level/levelgen/placement/DecorationContext;Ljava/util/Random;Lnet/minecraft/world/level/levelgen/placement/ChanceDecoratorConfiguration;Lnet/minecraft/core/BlockPos;)Ljava/util/stream/Stream; a
net/minecraft/world/level/levelgen/placement/LakeWaterPlacementDecorator cqg
	getPositions (Lnet/minecraft/world/level/levelgen/placement/DecorationContext;Ljava/util/Random;Lnet/minecraft/world/level/levelgen/feature/configurations/DecoratorConfiguration;Lnet/minecraft/core/BlockPos;)Ljava/util/stream/Stream; a
	getPositions (Lnet/minecraft/world/level/levelgen/placement/DecorationContext;Ljava/util/Random;Lnet/minecraft/world/level/levelgen/placement/ChanceDecoratorConfiguration;Lnet/minecraft/core/BlockPos;)Ljava/util/stream/Stream; a
net/minecraft/world/level/levelgen/placement/NoiseBasedDecorator cqh
	place (Ljava/util/Random;Lnet/minecraft/world/level/levelgen/feature/configurations/DecoratorConfiguration;Lnet/minecraft/core/BlockPos;)Ljava/util/stream/Stream; a
	place (Ljava/util/Random;Lnet/minecraft/world/level/levelgen/placement/NoiseCountFactorDecoratorConfiguration;Lnet/minecraft/core/BlockPos;)Ljava/util/stream/Stream; a
net/minecraft/world/level/levelgen/placement/NoiseCountFactorDecoratorConfiguration cqi
	CODEC a
	noiseFactor d
	noiseOffset e
	noiseToCountRatio c
net/minecraft/world/level/levelgen/placement/NopePlacementDecorator cqj
	place (Ljava/util/Random;Lnet/minecraft/world/level/levelgen/feature/configurations/DecoratorConfiguration;Lnet/minecraft/core/BlockPos;)Ljava/util/stream/Stream; a
	place (Ljava/util/Random;Lnet/minecraft/world/level/levelgen/feature/configurations/NoneDecoratorConfiguration;Lnet/minecraft/core/BlockPos;)Ljava/util/stream/Stream; a
net/minecraft/world/level/levelgen/placement/RangeDecorator cqk
	place (Ljava/util/Random;Lnet/minecraft/world/level/levelgen/feature/configurations/DecoratorConfiguration;Lnet/minecraft/core/BlockPos;)Ljava/util/stream/Stream; a
	place (Ljava/util/Random;Lnet/minecraft/world/level/levelgen/feature/configurations/RangeDecoratorConfiguration;Lnet/minecraft/core/BlockPos;)Ljava/util/stream/Stream; a
net/minecraft/world/level/levelgen/placement/SimpleFeatureDecorator cql
	getPositions (Lnet/minecraft/world/level/levelgen/placement/DecorationContext;Ljava/util/Random;Lnet/minecraft/world/level/levelgen/feature/configurations/DecoratorConfiguration;Lnet/minecraft/core/BlockPos;)Ljava/util/stream/Stream; a
	place (Ljava/util/Random;Lnet/minecraft/world/level/levelgen/feature/configurations/DecoratorConfiguration;Lnet/minecraft/core/BlockPos;)Ljava/util/stream/Stream; a
net/minecraft/world/level/levelgen/placement/Spread32Decorator cqm
	getPositions (Lnet/minecraft/world/level/levelgen/placement/DecorationContext;Ljava/util/Random;Lnet/minecraft/world/level/levelgen/feature/configurations/DecoratorConfiguration;Lnet/minecraft/core/BlockPos;)Ljava/util/stream/Stream; a
	getPositions (Lnet/minecraft/world/level/levelgen/placement/DecorationContext;Ljava/util/Random;Lnet/minecraft/world/level/levelgen/feature/configurations/NoneDecoratorConfiguration;Lnet/minecraft/core/BlockPos;)Ljava/util/stream/Stream; a
net/minecraft/world/level/levelgen/placement/SquareDecorator cqn
	place (Ljava/util/Random;Lnet/minecraft/world/level/levelgen/feature/configurations/DecoratorConfiguration;Lnet/minecraft/core/BlockPos;)Ljava/util/stream/Stream; a
	place (Ljava/util/Random;Lnet/minecraft/world/level/levelgen/feature/configurations/NoneDecoratorConfiguration;Lnet/minecraft/core/BlockPos;)Ljava/util/stream/Stream; a
net/minecraft/world/level/levelgen/placement/TopSolidHeightMapDecorator cqo
	type (Lnet/minecraft/world/level/levelgen/feature/configurations/DecoratorConfiguration;)Lnet/minecraft/world/level/levelgen/Heightmap$Types; a
	type (Lnet/minecraft/world/level/levelgen/feature/configurations/NoneDecoratorConfiguration;)Lnet/minecraft/world/level/levelgen/Heightmap$Types; a
net/minecraft/world/level/levelgen/placement/VeryBiasedRangeDecorator cqp
	place (Ljava/util/Random;Lnet/minecraft/world/level/levelgen/feature/configurations/DecoratorConfiguration;Lnet/minecraft/core/BlockPos;)Ljava/util/stream/Stream; a
	place (Ljava/util/Random;Lnet/minecraft/world/level/levelgen/feature/configurations/RangeDecoratorConfiguration;Lnet/minecraft/core/BlockPos;)Ljava/util/stream/Stream; a
net/minecraft/world/level/levelgen/placement/nether/CountMultiLayerDecorator cqq
	findOnGroundYPosition (Lnet/minecraft/world/level/levelgen/placement/DecorationContext;IIII)I a
	getPositions (Lnet/minecraft/world/level/levelgen/placement/DecorationContext;Ljava/util/Random;Lnet/minecraft/world/level/levelgen/feature/configurations/CountConfiguration;Lnet/minecraft/core/BlockPos;)Ljava/util/stream/Stream; a
	getPositions (Lnet/minecraft/world/level/levelgen/placement/DecorationContext;Ljava/util/Random;Lnet/minecraft/world/level/levelgen/feature/configurations/DecoratorConfiguration;Lnet/minecraft/core/BlockPos;)Ljava/util/stream/Stream; a
	isEmpty (Lnet/minecraft/world/level/block/state/BlockState;)Z a
net/minecraft/world/level/levelgen/placement/nether/FireDecorator cqr
	place (Ljava/util/Random;Lnet/minecraft/world/level/levelgen/feature/configurations/CountConfiguration;Lnet/minecraft/core/BlockPos;)Ljava/util/stream/Stream; a
	place (Ljava/util/Random;Lnet/minecraft/world/level/levelgen/feature/configurations/DecoratorConfiguration;Lnet/minecraft/core/BlockPos;)Ljava/util/stream/Stream; a
net/minecraft/world/level/levelgen/placement/nether/GlowstoneDecorator cqs
	place (Ljava/util/Random;Lnet/minecraft/world/level/levelgen/feature/configurations/CountConfiguration;Lnet/minecraft/core/BlockPos;)Ljava/util/stream/Stream; a
	place (Ljava/util/Random;Lnet/minecraft/world/level/levelgen/feature/configurations/DecoratorConfiguration;Lnet/minecraft/core/BlockPos;)Ljava/util/stream/Stream; a
net/minecraft/world/level/levelgen/placement/nether/MagmaDecorator cqt
	getPositions (Lnet/minecraft/world/level/levelgen/placement/DecorationContext;Ljava/util/Random;Lnet/minecraft/world/level/levelgen/feature/configurations/DecoratorConfiguration;Lnet/minecraft/core/BlockPos;)Ljava/util/stream/Stream; a
	getPositions (Lnet/minecraft/world/level/levelgen/placement/DecorationContext;Ljava/util/Random;Lnet/minecraft/world/level/levelgen/feature/configurations/NoneDecoratorConfiguration;Lnet/minecraft/core/BlockPos;)Ljava/util/stream/Stream; a
net/minecraft/world/level/levelgen/structure/BeardedStructureStart cqw
	calculateBoundingBox ()V b
net/minecraft/world/level/levelgen/structure/BoundingBox cqx
	x0 a
	x1 d
	y0 b
	y1 e
	z0 c
	z1 f
	createProper (IIIIII)Lnet/minecraft/world/level/levelgen/structure/BoundingBox; a
	createTag ()Lnet/minecraft/nbt/IntArrayTag; h
	expand (Lnet/minecraft/world/level/levelgen/structure/BoundingBox;)V c
	getCenter ()Lnet/minecraft/core/Vec3i; g
	getIntersection (Lnet/minecraft/world/level/levelgen/structure/BoundingBox;)Lnet/minecraft/world/level/levelgen/structure/BoundingBox; d
	getLength ()Lnet/minecraft/core/Vec3i; c
	getUnknownBox ()Lnet/minecraft/world/level/levelgen/structure/BoundingBox; a
	getXSpan ()I d
	getYSpan ()I e
	getZSpan ()I f
	infinite ()Lnet/minecraft/world/level/levelgen/structure/BoundingBox; b
	inflate (D)V a
	inflate (DDD)V a
	intersects (IIII)Z a
	intersects (IIIIII)Z b
	intersects (Lnet/minecraft/core/Vec3i;Lnet/minecraft/core/Vec3i;)Z a
	intersects (Lnet/minecraft/world/level/levelgen/structure/BoundingBox;)Z b
	isInside (Lnet/minecraft/core/Vec3i;)Z b
	isInsideOf (Lnet/minecraft/world/level/levelgen/structure/BoundingBox;)Z a
	move (III)V a
	move (Lnet/minecraft/core/Vec3i;)V a
	moved (III)Lnet/minecraft/world/level/levelgen/structure/BoundingBox; b
	orientBox (IIIIIIIIILnet/minecraft/core/Direction;)Lnet/minecraft/world/level/levelgen/structure/BoundingBox; a
net/minecraft/world/level/levelgen/structure/BuriedTreasurePieces cqy
net/minecraft/world/level/levelgen/structure/BuriedTreasurePieces$BuriedTreasurePiece cqy$a
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	isLiquid (Lnet/minecraft/world/level/block/state/BlockState;)Z a
	postProcess (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/StructureFeatureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/core/BlockPos;)Z a
net/minecraft/world/level/levelgen/structure/DesertPyramidPiece cqz
	hasPlacedChest e
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	postProcess (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/StructureFeatureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/core/BlockPos;)Z a
net/minecraft/world/level/levelgen/structure/EndCityPieces cra
	FAT_TOWER_BRIDGES g
	FAT_TOWER_GENERATOR h
	HOUSE_TOWER_GENERATOR c
	INSERT b
	OVERWRITE a
	TOWER_BRIDGES d
	TOWER_BRIDGE_GENERATOR f
	TOWER_GENERATOR e
	addHelper (Ljava/util/List;Lnet/minecraft/world/level/levelgen/structure/EndCityPieces$EndCityPiece;)Lnet/minecraft/world/level/levelgen/structure/EndCityPieces$EndCityPiece; b
	addPiece (Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureManager;Lnet/minecraft/world/level/levelgen/structure/EndCityPieces$EndCityPiece;Lnet/minecraft/core/BlockPos;Ljava/lang/String;Lnet/minecraft/world/level/block/Rotation;Z)Lnet/minecraft/world/level/levelgen/structure/EndCityPieces$EndCityPiece; b
	recursiveChildren (Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureManager;Lnet/minecraft/world/level/levelgen/structure/EndCityPieces$SectionGenerator;ILnet/minecraft/world/level/levelgen/structure/EndCityPieces$EndCityPiece;Lnet/minecraft/core/BlockPos;Ljava/util/List;Ljava/util/Random;)Z b
	startHouseTower (Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureManager;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Rotation;Ljava/util/List;Ljava/util/Random;)V a
net/minecraft/world/level/levelgen/structure/EndCityPieces$EndCityPiece cra$a
	overwrite f
	rotation e
	templateName d
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	handleDataMarker (Ljava/lang/String;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/ServerLevelAccessor;Ljava/util/Random;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;)V a
	loadTemplate (Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureManager;)V a
net/minecraft/world/level/levelgen/structure/EndCityPieces$SectionGenerator cra$b
	generate (Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureManager;ILnet/minecraft/world/level/levelgen/structure/EndCityPieces$EndCityPiece;Lnet/minecraft/core/BlockPos;Ljava/util/List;Ljava/util/Random;)Z a
	init ()V a
net/minecraft/world/level/levelgen/structure/IglooPieces crb
	OFFSETS e
	PIVOTS d
	STRUCTURE_LOCATION_IGLOO a
	STRUCTURE_LOCATION_LABORATORY c
	STRUCTURE_LOCATION_LADDER b
	addPieces (Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureManager;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Rotation;Ljava/util/List;Ljava/util/Random;)V a
net/minecraft/world/level/levelgen/structure/IglooPieces$IglooPiece crb$a
	rotation e
	templateLocation d
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	handleDataMarker (Ljava/lang/String;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/ServerLevelAccessor;Ljava/util/Random;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;)V a
	loadTemplate (Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureManager;)V a
	postProcess (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/StructureFeatureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/core/BlockPos;)Z a
net/minecraft/world/level/levelgen/structure/JunglePyramidPiece crc
	STONE_SELECTOR i
	placedHiddenChest f
	placedMainChest e
	placedTrap1 g
	placedTrap2 h
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	postProcess (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/StructureFeatureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/core/BlockPos;)Z a
net/minecraft/world/level/levelgen/structure/JunglePyramidPiece$MossStoneSelector crc$a
	next (Ljava/util/Random;IIIZ)V a
net/minecraft/world/level/levelgen/structure/LegacyStructureDataHandler crd
	CURRENT_TO_LEGACY_MAP a
	LEGACY_TO_CURRENT_MAP b
	currentKeys g
	dataMap d
	hasLegacyData c
	indexMap e
	legacyKeys f
	getLegacyStructureHandler (Lnet/minecraft/resources/ResourceKey;Lnet/minecraft/world/level/storage/DimensionDataStorage;)Lnet/minecraft/world/level/levelgen/structure/LegacyStructureDataHandler; a
	hasLegacyStart (IILjava/lang/String;)Z a
	isUnhandledStructureStart (II)Z a
	populateCaches (Lnet/minecraft/world/level/storage/DimensionDataStorage;)V a
	removeIndex (J)V a
	updateFromLegacy (Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/nbt/CompoundTag; a
	updateStructureStart (Lnet/minecraft/nbt/CompoundTag;Lnet/minecraft/world/level/ChunkPos;)Lnet/minecraft/nbt/CompoundTag; a
net/minecraft/world/level/levelgen/structure/MineShaftPieces cre
	createRandomShaftPiece (Ljava/util/List;Ljava/util/Random;IIILnet/minecraft/core/Direction;ILnet/minecraft/world/level/levelgen/feature/MineshaftFeature$Type;)Lnet/minecraft/world/level/levelgen/structure/MineShaftPieces$MineShaftPiece; a
	generateAndAddPiece (Lnet/minecraft/world/level/levelgen/structure/StructurePiece;Ljava/util/List;Ljava/util/Random;IIILnet/minecraft/core/Direction;I)Lnet/minecraft/world/level/levelgen/structure/MineShaftPieces$MineShaftPiece; b
net/minecraft/world/level/levelgen/structure/MineShaftPieces$MineShaftCorridor cre$a
	hasPlacedSpider d
	hasRails b
	numSections e
	spiderCorridor c
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	addChildren (Lnet/minecraft/world/level/levelgen/structure/StructurePiece;Ljava/util/List;Ljava/util/Random;)V a
	createChest (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Ljava/util/Random;IIILnet/minecraft/resources/ResourceLocation;)Z a
	findCorridorSize (Ljava/util/List;Ljava/util/Random;IIILnet/minecraft/core/Direction;)Lnet/minecraft/world/level/levelgen/structure/BoundingBox; a
	placeCobWeb (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Ljava/util/Random;FIII)V a
	placeSupport (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;IIIIILjava/util/Random;)V a
	postProcess (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/StructureFeatureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/core/BlockPos;)Z a
net/minecraft/world/level/levelgen/structure/MineShaftPieces$MineShaftCrossing cre$b
	direction b
	isTwoFloored c
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	addChildren (Lnet/minecraft/world/level/levelgen/structure/StructurePiece;Ljava/util/List;Ljava/util/Random;)V a
	findCrossing (Ljava/util/List;Ljava/util/Random;IIILnet/minecraft/core/Direction;)Lnet/minecraft/world/level/levelgen/structure/BoundingBox; a
	placeSupportPillar (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;IIII)V a
	postProcess (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/StructureFeatureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/core/BlockPos;)Z a
net/minecraft/world/level/levelgen/structure/MineShaftPieces$MineShaftPiece cre$c
	type a
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	getFenceBlock ()Lnet/minecraft/world/level/block/state/BlockState; b
	getPlanksBlock ()Lnet/minecraft/world/level/block/state/BlockState; a
	isSupportingBox (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;IIII)Z a
net/minecraft/world/level/levelgen/structure/MineShaftPieces$MineShaftRoom cre$d
	childEntranceBoxes b
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	addChildren (Lnet/minecraft/world/level/levelgen/structure/StructurePiece;Ljava/util/List;Ljava/util/Random;)V a
	move (III)V a
	postProcess (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/StructureFeatureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/core/BlockPos;)Z a
net/minecraft/world/level/levelgen/structure/MineShaftPieces$MineShaftStairs cre$e
	addChildren (Lnet/minecraft/world/level/levelgen/structure/StructurePiece;Ljava/util/List;Ljava/util/Random;)V a
	findStairs (Ljava/util/List;Ljava/util/Random;IIILnet/minecraft/core/Direction;)Lnet/minecraft/world/level/levelgen/structure/BoundingBox; a
	postProcess (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/StructureFeatureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/core/BlockPos;)Z a
net/minecraft/world/level/levelgen/structure/NetherBridgePieces crf
	BRIDGE_PIECE_WEIGHTS a
	CASTLE_PIECE_WEIGHTS b
	findAndCreateBridgePieceFactory (Lnet/minecraft/world/level/levelgen/structure/NetherBridgePieces$PieceWeight;Ljava/util/List;Ljava/util/Random;IIILnet/minecraft/core/Direction;I)Lnet/minecraft/world/level/levelgen/structure/NetherBridgePieces$NetherBridgePiece; b
net/minecraft/world/level/levelgen/structure/NetherBridgePieces$BridgeCrossing crf$a
	addChildren (Lnet/minecraft/world/level/levelgen/structure/StructurePiece;Ljava/util/List;Ljava/util/Random;)V a
	createPiece (Ljava/util/List;IIILnet/minecraft/core/Direction;I)Lnet/minecraft/world/level/levelgen/structure/NetherBridgePieces$BridgeCrossing; a
	postProcess (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/StructureFeatureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/core/BlockPos;)Z a
net/minecraft/world/level/levelgen/structure/NetherBridgePieces$BridgeEndFiller crf$b
	selfSeed a
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	createPiece (Ljava/util/List;Ljava/util/Random;IIILnet/minecraft/core/Direction;I)Lnet/minecraft/world/level/levelgen/structure/NetherBridgePieces$BridgeEndFiller; a
	postProcess (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/StructureFeatureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/core/BlockPos;)Z a
net/minecraft/world/level/levelgen/structure/NetherBridgePieces$BridgeStraight crf$c
	addChildren (Lnet/minecraft/world/level/levelgen/structure/StructurePiece;Ljava/util/List;Ljava/util/Random;)V a
	createPiece (Ljava/util/List;Ljava/util/Random;IIILnet/minecraft/core/Direction;I)Lnet/minecraft/world/level/levelgen/structure/NetherBridgePieces$BridgeStraight; a
	postProcess (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/StructureFeatureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/core/BlockPos;)Z a
net/minecraft/world/level/levelgen/structure/NetherBridgePieces$CastleCorridorStairsPiece crf$d
	addChildren (Lnet/minecraft/world/level/levelgen/structure/StructurePiece;Ljava/util/List;Ljava/util/Random;)V a
	createPiece (Ljava/util/List;IIILnet/minecraft/core/Direction;I)Lnet/minecraft/world/level/levelgen/structure/NetherBridgePieces$CastleCorridorStairsPiece; a
	postProcess (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/StructureFeatureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/core/BlockPos;)Z a
net/minecraft/world/level/levelgen/structure/NetherBridgePieces$CastleCorridorTBalconyPiece crf$e
	addChildren (Lnet/minecraft/world/level/levelgen/structure/StructurePiece;Ljava/util/List;Ljava/util/Random;)V a
	createPiece (Ljava/util/List;IIILnet/minecraft/core/Direction;I)Lnet/minecraft/world/level/levelgen/structure/NetherBridgePieces$CastleCorridorTBalconyPiece; a
	postProcess (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/StructureFeatureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/core/BlockPos;)Z a
net/minecraft/world/level/levelgen/structure/NetherBridgePieces$CastleEntrance crf$f
	addChildren (Lnet/minecraft/world/level/levelgen/structure/StructurePiece;Ljava/util/List;Ljava/util/Random;)V a
	createPiece (Ljava/util/List;Ljava/util/Random;IIILnet/minecraft/core/Direction;I)Lnet/minecraft/world/level/levelgen/structure/NetherBridgePieces$CastleEntrance; a
	postProcess (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/StructureFeatureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/core/BlockPos;)Z a
net/minecraft/world/level/levelgen/structure/NetherBridgePieces$CastleSmallCorridorCrossingPiece crf$g
	addChildren (Lnet/minecraft/world/level/levelgen/structure/StructurePiece;Ljava/util/List;Ljava/util/Random;)V a
	createPiece (Ljava/util/List;IIILnet/minecraft/core/Direction;I)Lnet/minecraft/world/level/levelgen/structure/NetherBridgePieces$CastleSmallCorridorCrossingPiece; a
	postProcess (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/StructureFeatureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/core/BlockPos;)Z a
net/minecraft/world/level/levelgen/structure/NetherBridgePieces$CastleSmallCorridorLeftTurnPiece crf$h
	isNeedingChest a
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	addChildren (Lnet/minecraft/world/level/levelgen/structure/StructurePiece;Ljava/util/List;Ljava/util/Random;)V a
	createPiece (Ljava/util/List;Ljava/util/Random;IIILnet/minecraft/core/Direction;I)Lnet/minecraft/world/level/levelgen/structure/NetherBridgePieces$CastleSmallCorridorLeftTurnPiece; a
	postProcess (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/StructureFeatureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/core/BlockPos;)Z a
net/minecraft/world/level/levelgen/structure/NetherBridgePieces$CastleSmallCorridorPiece crf$i
	addChildren (Lnet/minecraft/world/level/levelgen/structure/StructurePiece;Ljava/util/List;Ljava/util/Random;)V a
	createPiece (Ljava/util/List;IIILnet/minecraft/core/Direction;I)Lnet/minecraft/world/level/levelgen/structure/NetherBridgePieces$CastleSmallCorridorPiece; a
	postProcess (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/StructureFeatureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/core/BlockPos;)Z a
net/minecraft/world/level/levelgen/structure/NetherBridgePieces$CastleSmallCorridorRightTurnPiece crf$j
	isNeedingChest a
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	addChildren (Lnet/minecraft/world/level/levelgen/structure/StructurePiece;Ljava/util/List;Ljava/util/Random;)V a
	createPiece (Ljava/util/List;Ljava/util/Random;IIILnet/minecraft/core/Direction;I)Lnet/minecraft/world/level/levelgen/structure/NetherBridgePieces$CastleSmallCorridorRightTurnPiece; a
	postProcess (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/StructureFeatureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/core/BlockPos;)Z a
net/minecraft/world/level/levelgen/structure/NetherBridgePieces$CastleStalkRoom crf$k
	addChildren (Lnet/minecraft/world/level/levelgen/structure/StructurePiece;Ljava/util/List;Ljava/util/Random;)V a
	createPiece (Ljava/util/List;IIILnet/minecraft/core/Direction;I)Lnet/minecraft/world/level/levelgen/structure/NetherBridgePieces$CastleStalkRoom; a
	postProcess (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/StructureFeatureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/core/BlockPos;)Z a
net/minecraft/world/level/levelgen/structure/NetherBridgePieces$MonsterThrone crf$l
	hasPlacedSpawner a
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	createPiece (Ljava/util/List;IIIILnet/minecraft/core/Direction;)Lnet/minecraft/world/level/levelgen/structure/NetherBridgePieces$MonsterThrone; a
	postProcess (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/StructureFeatureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/core/BlockPos;)Z a
net/minecraft/world/level/levelgen/structure/NetherBridgePieces$NetherBridgePiece crf$m
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	generateAndAddPiece (Lnet/minecraft/world/level/levelgen/structure/NetherBridgePieces$StartPiece;Ljava/util/List;Ljava/util/Random;IIILnet/minecraft/core/Direction;IZ)Lnet/minecraft/world/level/levelgen/structure/StructurePiece; a
	generateChildForward (Lnet/minecraft/world/level/levelgen/structure/NetherBridgePieces$StartPiece;Ljava/util/List;Ljava/util/Random;IIZ)Lnet/minecraft/world/level/levelgen/structure/StructurePiece; a
	generateChildLeft (Lnet/minecraft/world/level/levelgen/structure/NetherBridgePieces$StartPiece;Ljava/util/List;Ljava/util/Random;IIZ)Lnet/minecraft/world/level/levelgen/structure/StructurePiece; b
	generateChildRight (Lnet/minecraft/world/level/levelgen/structure/NetherBridgePieces$StartPiece;Ljava/util/List;Ljava/util/Random;IIZ)Lnet/minecraft/world/level/levelgen/structure/StructurePiece; c
	generateLightPost (Lnet/minecraft/world/level/WorldGenLevel;Ljava/util/Random;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;IIIII)V a
	generatePiece (Lnet/minecraft/world/level/levelgen/structure/NetherBridgePieces$StartPiece;Ljava/util/List;Ljava/util/List;Ljava/util/Random;IIILnet/minecraft/core/Direction;I)Lnet/minecraft/world/level/levelgen/structure/NetherBridgePieces$NetherBridgePiece; a
	isOkBox (Lnet/minecraft/world/level/levelgen/structure/BoundingBox;)Z a
	updatePieceWeight (Ljava/util/List;)I a
net/minecraft/world/level/levelgen/structure/NetherBridgePieces$PieceWeight crf$n
	allowInRow e
	maxPlaceCount d
	pieceClass a
	placeCount c
	weight b
	doPlace (I)Z a
	isValid ()Z a
net/minecraft/world/level/levelgen/structure/NetherBridgePieces$RoomCrossing crf$o
	addChildren (Lnet/minecraft/world/level/levelgen/structure/StructurePiece;Ljava/util/List;Ljava/util/Random;)V a
	createPiece (Ljava/util/List;IIILnet/minecraft/core/Direction;I)Lnet/minecraft/world/level/levelgen/structure/NetherBridgePieces$RoomCrossing; a
	postProcess (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/StructureFeatureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/core/BlockPos;)Z a
net/minecraft/world/level/levelgen/structure/NetherBridgePieces$StairsRoom crf$p
	addChildren (Lnet/minecraft/world/level/levelgen/structure/StructurePiece;Ljava/util/List;Ljava/util/Random;)V a
	createPiece (Ljava/util/List;IIIILnet/minecraft/core/Direction;)Lnet/minecraft/world/level/levelgen/structure/NetherBridgePieces$StairsRoom; a
	postProcess (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/StructureFeatureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/core/BlockPos;)Z a
net/minecraft/world/level/levelgen/structure/NetherBridgePieces$StartPiece crf$q
	availableBridgePieces b
	availableCastlePieces c
	pendingChildren d
	previousPiece a
net/minecraft/world/level/levelgen/structure/NetherFossilFeature crg
	getStartFactory ()Lnet/minecraft/world/level/levelgen/feature/StructureFeature$StructureStartFactory; a
net/minecraft/world/level/levelgen/structure/NetherFossilFeature$FeatureStart crg$a
	generatePieces (Lnet/minecraft/core/RegistryAccess;Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureManager;IILnet/minecraft/world/level/biome/Biome;Lnet/minecraft/world/level/levelgen/feature/configurations/FeatureConfiguration;)V a
	generatePieces (Lnet/minecraft/core/RegistryAccess;Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureManager;IILnet/minecraft/world/level/biome/Biome;Lnet/minecraft/world/level/levelgen/feature/configurations/NoneFeatureConfiguration;)V a
net/minecraft/world/level/levelgen/structure/NetherFossilPieces crh
	FOSSILS a
	addPieces (Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureManager;Ljava/util/List;Ljava/util/Random;Lnet/minecraft/core/BlockPos;)V a
net/minecraft/world/level/levelgen/structure/NetherFossilPieces$NetherFossilPiece crh$a
	rotation e
	templateLocation d
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	handleDataMarker (Ljava/lang/String;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/ServerLevelAccessor;Ljava/util/Random;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;)V a
	loadTemplate (Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureManager;)V a
	postProcess (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/StructureFeatureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/core/BlockPos;)Z a
net/minecraft/world/level/levelgen/structure/OceanMonumentPieces cri
net/minecraft/world/level/levelgen/structure/OceanMonumentPieces$FitDoubleXRoom cri$a
	create (Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/levelgen/structure/OceanMonumentPieces$RoomDefinition;Ljava/util/Random;)Lnet/minecraft/world/level/levelgen/structure/OceanMonumentPieces$OceanMonumentPiece; a
	fits (Lnet/minecraft/world/level/levelgen/structure/OceanMonumentPieces$RoomDefinition;)Z a
net/minecraft/world/level/levelgen/structure/OceanMonumentPieces$FitDoubleXYRoom cri$b
	create (Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/levelgen/structure/OceanMonumentPieces$RoomDefinition;Ljava/util/Random;)Lnet/minecraft/world/level/levelgen/structure/OceanMonumentPieces$OceanMonumentPiece; a
	fits (Lnet/minecraft/world/level/levelgen/structure/OceanMonumentPieces$RoomDefinition;)Z a
net/minecraft/world/level/levelgen/structure/OceanMonumentPieces$FitDoubleYRoom cri$c
	create (Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/levelgen/structure/OceanMonumentPieces$RoomDefinition;Ljava/util/Random;)Lnet/minecraft/world/level/levelgen/structure/OceanMonumentPieces$OceanMonumentPiece; a
	fits (Lnet/minecraft/world/level/levelgen/structure/OceanMonumentPieces$RoomDefinition;)Z a
net/minecraft/world/level/levelgen/structure/OceanMonumentPieces$FitDoubleYZRoom cri$d
	create (Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/levelgen/structure/OceanMonumentPieces$RoomDefinition;Ljava/util/Random;)Lnet/minecraft/world/level/levelgen/structure/OceanMonumentPieces$OceanMonumentPiece; a
	fits (Lnet/minecraft/world/level/levelgen/structure/OceanMonumentPieces$RoomDefinition;)Z a
net/minecraft/world/level/levelgen/structure/OceanMonumentPieces$FitDoubleZRoom cri$e
	create (Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/levelgen/structure/OceanMonumentPieces$RoomDefinition;Ljava/util/Random;)Lnet/minecraft/world/level/levelgen/structure/OceanMonumentPieces$OceanMonumentPiece; a
	fits (Lnet/minecraft/world/level/levelgen/structure/OceanMonumentPieces$RoomDefinition;)Z a
net/minecraft/world/level/levelgen/structure/OceanMonumentPieces$FitSimpleRoom cri$f
	create (Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/levelgen/structure/OceanMonumentPieces$RoomDefinition;Ljava/util/Random;)Lnet/minecraft/world/level/levelgen/structure/OceanMonumentPieces$OceanMonumentPiece; a
	fits (Lnet/minecraft/world/level/levelgen/structure/OceanMonumentPieces$RoomDefinition;)Z a
net/minecraft/world/level/levelgen/structure/OceanMonumentPieces$FitSimpleTopRoom cri$g
	create (Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/levelgen/structure/OceanMonumentPieces$RoomDefinition;Ljava/util/Random;)Lnet/minecraft/world/level/levelgen/structure/OceanMonumentPieces$OceanMonumentPiece; a
	fits (Lnet/minecraft/world/level/levelgen/structure/OceanMonumentPieces$RoomDefinition;)Z a
net/minecraft/world/level/levelgen/structure/OceanMonumentPieces$MonumentBuilding cri$h
	childPieces r
	coreRoom q
	sourceRoom p
	generateEntranceArchs (Lnet/minecraft/world/level/WorldGenLevel;Ljava/util/Random;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;)V a
	generateEntranceWall (Lnet/minecraft/world/level/WorldGenLevel;Ljava/util/Random;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;)V b
	generateLowerWall (Lnet/minecraft/world/level/WorldGenLevel;Ljava/util/Random;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;)V d
	generateMiddleWall (Lnet/minecraft/world/level/WorldGenLevel;Ljava/util/Random;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;)V e
	generateRoofPiece (Lnet/minecraft/world/level/WorldGenLevel;Ljava/util/Random;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;)V c
	generateRoomGraph (Ljava/util/Random;)Ljava/util/List; a
	generateUpperWall (Lnet/minecraft/world/level/WorldGenLevel;Ljava/util/Random;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;)V f
	generateWing (ZILnet/minecraft/world/level/WorldGenLevel;Ljava/util/Random;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;)V a
	postProcess (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/StructureFeatureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/core/BlockPos;)Z a
net/minecraft/world/level/levelgen/structure/OceanMonumentPieces$MonumentRoomFitter cri$i
	create (Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/levelgen/structure/OceanMonumentPieces$RoomDefinition;Ljava/util/Random;)Lnet/minecraft/world/level/levelgen/structure/OceanMonumentPieces$OceanMonumentPiece; a
	fits (Lnet/minecraft/world/level/levelgen/structure/OceanMonumentPieces$RoomDefinition;)Z a
net/minecraft/world/level/levelgen/structure/OceanMonumentPieces$OceanMonumentCoreRoom cri$j
	postProcess (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/StructureFeatureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/core/BlockPos;)Z a
net/minecraft/world/level/levelgen/structure/OceanMonumentPieces$OceanMonumentDoubleXRoom cri$k
	postProcess (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/StructureFeatureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/core/BlockPos;)Z a
net/minecraft/world/level/levelgen/structure/OceanMonumentPieces$OceanMonumentDoubleXYRoom cri$l
	postProcess (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/StructureFeatureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/core/BlockPos;)Z a
net/minecraft/world/level/levelgen/structure/OceanMonumentPieces$OceanMonumentDoubleYRoom cri$m
	postProcess (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/StructureFeatureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/core/BlockPos;)Z a
net/minecraft/world/level/levelgen/structure/OceanMonumentPieces$OceanMonumentDoubleYZRoom cri$n
	postProcess (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/StructureFeatureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/core/BlockPos;)Z a
net/minecraft/world/level/levelgen/structure/OceanMonumentPieces$OceanMonumentDoubleZRoom cri$o
	postProcess (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/StructureFeatureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/core/BlockPos;)Z a
net/minecraft/world/level/levelgen/structure/OceanMonumentPieces$OceanMonumentEntryRoom cri$p
	postProcess (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/StructureFeatureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/core/BlockPos;)Z a
net/minecraft/world/level/levelgen/structure/OceanMonumentPieces$OceanMonumentPenthouse cri$q
	postProcess (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/StructureFeatureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/core/BlockPos;)Z a
net/minecraft/world/level/levelgen/structure/OceanMonumentPieces$OceanMonumentPiece cri$r
	BASE_BLACK c
	BASE_GRAY a
	BASE_LIGHT b
	DOT_DECO_DATA d
	FILL_BLOCK f
	FILL_KEEP g
	GRIDROOM_LEFTWING_CONNECT_INDEX j
	GRIDROOM_RIGHTWING_CONNECT_INDEX k
	GRIDROOM_SOURCE_INDEX h
	GRIDROOM_TOP_CONNECT_INDEX i
	LAMP_BLOCK e
	roomDefinition l
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	chunkIntersects (Lnet/minecraft/world/level/levelgen/structure/BoundingBox;IIII)Z a
	generateBoxOnFillOnly (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;IIIIIILnet/minecraft/world/level/block/state/BlockState;)V a
	generateDefaultFloor (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;IIZ)V a
	generateWaterBox (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;IIIIII)V a
	getRoomIndex (III)I b
	getRoomX (I)I a
	getRoomY (I)I b
	getRoomZ (I)I c
	spawnElder (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;III)Z a
net/minecraft/world/level/levelgen/structure/OceanMonumentPieces$OceanMonumentSimpleRoom cri$s
	mainDesign p
	postProcess (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/StructureFeatureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/core/BlockPos;)Z a
net/minecraft/world/level/levelgen/structure/OceanMonumentPieces$OceanMonumentSimpleTopRoom cri$t
	postProcess (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/StructureFeatureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/core/BlockPos;)Z a
net/minecraft/world/level/levelgen/structure/OceanMonumentPieces$OceanMonumentWingRoom cri$u
	mainDesign p
	postProcess (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/StructureFeatureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/core/BlockPos;)Z a
net/minecraft/world/level/levelgen/structure/OceanMonumentPieces$RoomDefinition cri$v
	claimed d
	connections b
	hasOpening c
	index a
	isSource e
	scanIndex f
	countOpenings ()I c
	findSource (I)Z a
	isSpecial ()Z b
	setConnection (Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/levelgen/structure/OceanMonumentPieces$RoomDefinition;)V a
	updateOpenings ()V a
net/minecraft/world/level/levelgen/structure/OceanRuinFeature crj
	getStartFactory ()Lnet/minecraft/world/level/levelgen/feature/StructureFeature$StructureStartFactory; a
net/minecraft/world/level/levelgen/structure/OceanRuinFeature$OceanRuinStart crj$a
	generatePieces (Lnet/minecraft/core/RegistryAccess;Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureManager;IILnet/minecraft/world/level/biome/Biome;Lnet/minecraft/world/level/levelgen/feature/configurations/FeatureConfiguration;)V a
	generatePieces (Lnet/minecraft/core/RegistryAccess;Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureManager;IILnet/minecraft/world/level/biome/Biome;Lnet/minecraft/world/level/levelgen/feature/configurations/OceanRuinConfiguration;)V a
net/minecraft/world/level/levelgen/structure/OceanRuinFeature$Type crj$b
	$VALUES f
	BY_NAME d
	CODEC c
	COLD b
	WARM a
	name e
	byName (Ljava/lang/String;)Lnet/minecraft/world/level/levelgen/structure/OceanRuinFeature$Type; a
	getName ()Ljava/lang/String; b
	getSerializedName ()Ljava/lang/String; a
net/minecraft/world/level/levelgen/structure/OceanRuinPieces crk
	BIG_RUINS_BRICK e
	BIG_RUINS_CRACKED g
	BIG_RUINS_MOSSY f
	BIG_WARM_RUINS h
	RUINS_BRICK b
	RUINS_CRACKED c
	RUINS_MOSSY d
	WARM_RUINS a
	addClusterRuins (Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureManager;Ljava/util/Random;Lnet/minecraft/world/level/block/Rotation;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/levelgen/feature/configurations/OceanRuinConfiguration;Ljava/util/List;)V a
	addPiece (Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureManager;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Rotation;Ljava/util/List;Ljava/util/Random;Lnet/minecraft/world/level/levelgen/feature/configurations/OceanRuinConfiguration;ZF)V a
	addPieces (Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureManager;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Rotation;Ljava/util/List;Ljava/util/Random;Lnet/minecraft/world/level/levelgen/feature/configurations/OceanRuinConfiguration;)V a
	allPositions (Ljava/util/Random;II)Ljava/util/List; a
	getBigWarmRuin (Ljava/util/Random;)Lnet/minecraft/resources/ResourceLocation; b
	getSmallWarmRuin (Ljava/util/Random;)Lnet/minecraft/resources/ResourceLocation; a
net/minecraft/world/level/levelgen/structure/OceanRuinPieces$OceanRuinPiece crk$a
	biomeType d
	integrity e
	isLarge h
	rotation g
	templateLocation f
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	getHeight (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)I a
	handleDataMarker (Ljava/lang/String;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/ServerLevelAccessor;Ljava/util/Random;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;)V a
	loadTemplate (Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureManager;)V a
	postProcess (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/StructureFeatureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/core/BlockPos;)Z a
net/minecraft/world/level/levelgen/structure/PoolElementStructurePiece crl
	LOGGER d
	element a
	groundLevelDelta e
	junctions f
	position b
	rotation c
	structureManager g
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	addJunction (Lnet/minecraft/world/level/levelgen/feature/structures/JigsawJunction;)V a
	getElement ()Lnet/minecraft/world/level/levelgen/feature/structures/StructurePoolElement; b
	getGroundLevelDelta ()I d
	getJunctions ()Ljava/util/List; e
	getPosition ()Lnet/minecraft/core/BlockPos; c
	getRotation ()Lnet/minecraft/world/level/block/Rotation; ap_
	move (III)V a
	place (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/StructureFeatureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Lnet/minecraft/core/BlockPos;Z)Z a
	postProcess (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/StructureFeatureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/core/BlockPos;)Z a
net/minecraft/world/level/levelgen/structure/RuinedPortalPiece crm
	LOGGER d
	mirror g
	properties i
	rotation f
	templateLocation e
	verticalPlacement h
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	addNetherrackDripColumn (Ljava/util/Random;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;)V c
	addNetherrackDripColumnsBelowPortal (Ljava/util/Random;Lnet/minecraft/world/level/LevelAccessor;)V a
	canBlockBeReplacedByNetherrackOrMagma (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;)Z a
	getBlockReplaceRule (Lnet/minecraft/world/level/block/Block;FLnet/minecraft/world/level/block/Block;)Lnet/minecraft/world/level/levelgen/structure/templatesystem/ProcessorRule; a
	getBlockReplaceRule (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/world/level/levelgen/structure/templatesystem/ProcessorRule; a
	getHeightMapType (Lnet/minecraft/world/level/levelgen/structure/RuinedPortalPiece$VerticalPlacement;)Lnet/minecraft/world/level/levelgen/Heightmap$Types; a
	getLavaProcessorRule ()Lnet/minecraft/world/level/levelgen/structure/templatesystem/ProcessorRule; c
	getSurfaceY (Lnet/minecraft/world/level/LevelAccessor;IILnet/minecraft/world/level/levelgen/structure/RuinedPortalPiece$VerticalPlacement;)I a
	handleDataMarker (Ljava/lang/String;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/ServerLevelAccessor;Ljava/util/Random;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;)V a
	loadTemplate (Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplate;Lnet/minecraft/core/BlockPos;)V a
	maybeAddLeavesAbove (Ljava/util/Random;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;)V b
	maybeAddVines (Ljava/util/Random;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;)V a
	placeNetherrackOrMagma (Ljava/util/Random;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;)V d
	postProcess (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/StructureFeatureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/core/BlockPos;)Z a
	spreadNetherrack (Ljava/util/Random;Lnet/minecraft/world/level/LevelAccessor;)V b
net/minecraft/world/level/levelgen/structure/RuinedPortalPiece$Properties crm$a
	CODEC a
	airPocket d
	cold b
	mossiness c
	overgrown e
	replaceWithBlackstone g
	vines f
net/minecraft/world/level/levelgen/structure/RuinedPortalPiece$VerticalPlacement crm$b
	$VALUES i
	BY_NAME g
	IN_MOUNTAIN d
	IN_NETHER f
	ON_LAND_SURFACE a
	ON_OCEAN_FLOOR c
	PARTLY_BURIED b
	UNDERGROUND e
	name h
	byName (Ljava/lang/String;)Lnet/minecraft/world/level/levelgen/structure/RuinedPortalPiece$VerticalPlacement; a
	getName ()Ljava/lang/String; a
net/minecraft/world/level/levelgen/structure/ScatteredFeaturePiece crn
	depth c
	height b
	heightPosition d
	width a
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	updateAverageGroundHeight (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;I)Z a
net/minecraft/world/level/levelgen/structure/ShipwreckPieces cro
	PIVOT a
	STRUCTURE_LOCATION_BEACHED b
	STRUCTURE_LOCATION_OCEAN c
	addPieces (Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureManager;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Rotation;Ljava/util/List;Ljava/util/Random;Lnet/minecraft/world/level/levelgen/feature/configurations/ShipwreckConfiguration;)V a
net/minecraft/world/level/levelgen/structure/ShipwreckPieces$ShipwreckPiece cro$a
	isBeached f
	rotation d
	templateLocation e
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	handleDataMarker (Ljava/lang/String;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/ServerLevelAccessor;Ljava/util/Random;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;)V a
	loadTemplate (Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureManager;)V a
	postProcess (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/StructureFeatureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/core/BlockPos;)Z a
net/minecraft/world/level/levelgen/structure/StrongholdPieces crp
	SMOOTH_STONE_SELECTOR e
	STRONGHOLD_PIECE_WEIGHTS a
	currentPieces b
	imposedPiece c
	totalWeight d
	findAndCreatePieceFactory (Ljava/lang/Class;Ljava/util/List;Ljava/util/Random;IIILnet/minecraft/core/Direction;I)Lnet/minecraft/world/level/levelgen/structure/StrongholdPieces$StrongholdPiece; a
	generateAndAddPiece (Lnet/minecraft/world/level/levelgen/structure/StrongholdPieces$StartPiece;Ljava/util/List;Ljava/util/Random;IIILnet/minecraft/core/Direction;I)Lnet/minecraft/world/level/levelgen/structure/StructurePiece; c
	generatePieceFromSmallDoor (Lnet/minecraft/world/level/levelgen/structure/StrongholdPieces$StartPiece;Ljava/util/List;Ljava/util/Random;IIILnet/minecraft/core/Direction;I)Lnet/minecraft/world/level/levelgen/structure/StrongholdPieces$StrongholdPiece; b
	resetPieces ()V a
	updatePieceWeight ()Z c
net/minecraft/world/level/levelgen/structure/StrongholdPieces$ChestCorridor crp$a
	hasPlacedChest a
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	addChildren (Lnet/minecraft/world/level/levelgen/structure/StructurePiece;Ljava/util/List;Ljava/util/Random;)V a
	createPiece (Ljava/util/List;Ljava/util/Random;IIILnet/minecraft/core/Direction;I)Lnet/minecraft/world/level/levelgen/structure/StrongholdPieces$ChestCorridor; a
	postProcess (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/StructureFeatureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/core/BlockPos;)Z a
net/minecraft/world/level/levelgen/structure/StrongholdPieces$FillerCorridor crp$b
	steps a
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	findPieceBox (Ljava/util/List;Ljava/util/Random;IIILnet/minecraft/core/Direction;)Lnet/minecraft/world/level/levelgen/structure/BoundingBox; a
	postProcess (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/StructureFeatureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/core/BlockPos;)Z a
net/minecraft/world/level/levelgen/structure/StrongholdPieces$FiveCrossing crp$c
	leftHigh b
	leftLow a
	rightHigh e
	rightLow c
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	addChildren (Lnet/minecraft/world/level/levelgen/structure/StructurePiece;Ljava/util/List;Ljava/util/Random;)V a
	createPiece (Ljava/util/List;Ljava/util/Random;IIILnet/minecraft/core/Direction;I)Lnet/minecraft/world/level/levelgen/structure/StrongholdPieces$FiveCrossing; a
	postProcess (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/StructureFeatureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/core/BlockPos;)Z a
net/minecraft/world/level/levelgen/structure/StrongholdPieces$LeftTurn crp$d
	addChildren (Lnet/minecraft/world/level/levelgen/structure/StructurePiece;Ljava/util/List;Ljava/util/Random;)V a
	createPiece (Ljava/util/List;Ljava/util/Random;IIILnet/minecraft/core/Direction;I)Lnet/minecraft/world/level/levelgen/structure/StrongholdPieces$LeftTurn; a
	postProcess (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/StructureFeatureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/core/BlockPos;)Z a
net/minecraft/world/level/levelgen/structure/StrongholdPieces$Library crp$e
	isTall a
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	createPiece (Ljava/util/List;Ljava/util/Random;IIILnet/minecraft/core/Direction;I)Lnet/minecraft/world/level/levelgen/structure/StrongholdPieces$Library; a
	postProcess (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/StructureFeatureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/core/BlockPos;)Z a
net/minecraft/world/level/levelgen/structure/StrongholdPieces$PieceWeight crp$f
	maxPlaceCount d
	pieceClass a
	placeCount c
	weight b
	doPlace (I)Z a
	isValid ()Z a
net/minecraft/world/level/levelgen/structure/StrongholdPieces$PortalRoom crp$g
	hasPlacedSpawner a
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	addChildren (Lnet/minecraft/world/level/levelgen/structure/StructurePiece;Ljava/util/List;Ljava/util/Random;)V a
	createPiece (Ljava/util/List;IIILnet/minecraft/core/Direction;I)Lnet/minecraft/world/level/levelgen/structure/StrongholdPieces$PortalRoom; a
	postProcess (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/StructureFeatureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/core/BlockPos;)Z a
net/minecraft/world/level/levelgen/structure/StrongholdPieces$PrisonHall crp$h
	addChildren (Lnet/minecraft/world/level/levelgen/structure/StructurePiece;Ljava/util/List;Ljava/util/Random;)V a
	createPiece (Ljava/util/List;Ljava/util/Random;IIILnet/minecraft/core/Direction;I)Lnet/minecraft/world/level/levelgen/structure/StrongholdPieces$PrisonHall; a
	postProcess (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/StructureFeatureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/core/BlockPos;)Z a
net/minecraft/world/level/levelgen/structure/StrongholdPieces$RightTurn crp$i
	addChildren (Lnet/minecraft/world/level/levelgen/structure/StructurePiece;Ljava/util/List;Ljava/util/Random;)V a
	createPiece (Ljava/util/List;Ljava/util/Random;IIILnet/minecraft/core/Direction;I)Lnet/minecraft/world/level/levelgen/structure/StrongholdPieces$RightTurn; a
	postProcess (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/StructureFeatureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/core/BlockPos;)Z a
net/minecraft/world/level/levelgen/structure/StrongholdPieces$RoomCrossing crp$j
	type a
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	addChildren (Lnet/minecraft/world/level/levelgen/structure/StructurePiece;Ljava/util/List;Ljava/util/Random;)V a
	createPiece (Ljava/util/List;Ljava/util/Random;IIILnet/minecraft/core/Direction;I)Lnet/minecraft/world/level/levelgen/structure/StrongholdPieces$RoomCrossing; a
	postProcess (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/StructureFeatureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/core/BlockPos;)Z a
net/minecraft/world/level/levelgen/structure/StrongholdPieces$SmoothStoneSelector crp$k
	next (Ljava/util/Random;IIIZ)V a
net/minecraft/world/level/levelgen/structure/StrongholdPieces$StairsDown crp$l
	isSource a
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	addChildren (Lnet/minecraft/world/level/levelgen/structure/StructurePiece;Ljava/util/List;Ljava/util/Random;)V a
	createPiece (Ljava/util/List;Ljava/util/Random;IIILnet/minecraft/core/Direction;I)Lnet/minecraft/world/level/levelgen/structure/StrongholdPieces$StairsDown; a
	postProcess (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/StructureFeatureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/core/BlockPos;)Z a
net/minecraft/world/level/levelgen/structure/StrongholdPieces$StartPiece crp$m
	pendingChildren c
	portalRoomPiece b
	previousPiece a
	getLocatorPosition ()Lnet/minecraft/core/BlockPos; ao_
net/minecraft/world/level/levelgen/structure/StrongholdPieces$Straight crp$n
	leftChild a
	rightChild b
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	addChildren (Lnet/minecraft/world/level/levelgen/structure/StructurePiece;Ljava/util/List;Ljava/util/Random;)V a
	createPiece (Ljava/util/List;Ljava/util/Random;IIILnet/minecraft/core/Direction;I)Lnet/minecraft/world/level/levelgen/structure/StrongholdPieces$Straight; a
	postProcess (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/StructureFeatureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/core/BlockPos;)Z a
net/minecraft/world/level/levelgen/structure/StrongholdPieces$StraightStairsDown crp$o
	addChildren (Lnet/minecraft/world/level/levelgen/structure/StructurePiece;Ljava/util/List;Ljava/util/Random;)V a
	createPiece (Ljava/util/List;Ljava/util/Random;IIILnet/minecraft/core/Direction;I)Lnet/minecraft/world/level/levelgen/structure/StrongholdPieces$StraightStairsDown; a
	postProcess (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/StructureFeatureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/core/BlockPos;)Z a
net/minecraft/world/level/levelgen/structure/StrongholdPieces$StrongholdPiece crp$p
	entryDoor d
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	generateSmallDoor (Lnet/minecraft/world/level/WorldGenLevel;Ljava/util/Random;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Lnet/minecraft/world/level/levelgen/structure/StrongholdPieces$StrongholdPiece$SmallDoorType;III)V a
	generateSmallDoorChildForward (Lnet/minecraft/world/level/levelgen/structure/StrongholdPieces$StartPiece;Ljava/util/List;Ljava/util/Random;II)Lnet/minecraft/world/level/levelgen/structure/StructurePiece; a
	generateSmallDoorChildLeft (Lnet/minecraft/world/level/levelgen/structure/StrongholdPieces$StartPiece;Ljava/util/List;Ljava/util/Random;II)Lnet/minecraft/world/level/levelgen/structure/StructurePiece; b
	generateSmallDoorChildRight (Lnet/minecraft/world/level/levelgen/structure/StrongholdPieces$StartPiece;Ljava/util/List;Ljava/util/Random;II)Lnet/minecraft/world/level/levelgen/structure/StructurePiece; c
	isOkBox (Lnet/minecraft/world/level/levelgen/structure/BoundingBox;)Z a
	randomSmallDoor (Ljava/util/Random;)Lnet/minecraft/world/level/levelgen/structure/StrongholdPieces$StrongholdPiece$SmallDoorType; a
net/minecraft/world/level/levelgen/structure/StrongholdPieces$StrongholdPiece$SmallDoorType crp$p$a
	$VALUES e
	GRATES c
	IRON_DOOR d
	OPENING a
	WOOD_DOOR b
net/minecraft/world/level/levelgen/structure/StrongholdPieces$Turn crp$q
net/minecraft/world/level/levelgen/structure/StructureFeatureIndexSavedData crq
	all a
	remaining b
	addIndex (J)V a
	getAll ()Lit/unimi/dsi/fastutil/longs/LongSet; a
	hasStartIndex (J)Z b
	hasUnhandledIndex (J)Z c
	load (Lnet/minecraft/nbt/CompoundTag;)V a
	removeIndex (J)V d
	save (Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/nbt/CompoundTag; b
net/minecraft/world/level/levelgen/structure/StructurePiece crr
	CAVE_AIR m
	SHAPE_CHECK_BLOCKS e
	boundingBox n
	genDepth o
	mirror b
	orientation a
	rotation c
	type d
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	addChildren (Lnet/minecraft/world/level/levelgen/structure/StructurePiece;Ljava/util/List;Ljava/util/Random;)V a
	createChest (Lnet/minecraft/world/level/ServerLevelAccessor;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Ljava/util/Random;Lnet/minecraft/core/BlockPos;Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/world/level/block/state/BlockState;)Z a
	createChest (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Ljava/util/Random;IIILnet/minecraft/resources/ResourceLocation;)Z a
	createDispenser (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Ljava/util/Random;IIILnet/minecraft/core/Direction;Lnet/minecraft/resources/ResourceLocation;)Z a
	createDoor (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Ljava/util/Random;IIILnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/DoorBlock;)V a
	createTag ()Lnet/minecraft/nbt/CompoundTag; f
	edgesLiquid (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;)Z a
	fillColumnDown (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/block/state/BlockState;IIILnet/minecraft/world/level/levelgen/structure/BoundingBox;)V b
	findCollisionPiece (Ljava/util/List;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;)Lnet/minecraft/world/level/levelgen/structure/StructurePiece; a
	generateAirBox (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;IIIIII)V b
	generateAirColumnUp (Lnet/minecraft/world/level/WorldGenLevel;IIILnet/minecraft/world/level/levelgen/structure/BoundingBox;)V a
	generateBox (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;IIIIIILnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/state/BlockState;Z)V a
	generateBox (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;IIIIIIZLjava/util/Random;Lnet/minecraft/world/level/levelgen/structure/StructurePiece$BlockSelector;)V a
	generateBox (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/state/BlockState;Z)V a
	generateBox (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;ZLjava/util/Random;Lnet/minecraft/world/level/levelgen/structure/StructurePiece$BlockSelector;)V a
	generateMaybeBox (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Ljava/util/Random;FIIIIIILnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/state/BlockState;ZZ)V a
	generateUpperHalfSphere (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;IIIIIILnet/minecraft/world/level/block/state/BlockState;Z)V a
	getBlock (Lnet/minecraft/world/level/BlockGetter;IIILnet/minecraft/world/level/levelgen/structure/BoundingBox;)Lnet/minecraft/world/level/block/state/BlockState; a
	getBoundingBox ()Lnet/minecraft/world/level/levelgen/structure/BoundingBox; g
	getGenDepth ()I h
	getLocatorPosition ()Lnet/minecraft/core/BlockPos; ao_
	getMirror ()Lnet/minecraft/world/level/block/Mirror; j
	getOrientation ()Lnet/minecraft/core/Direction; i
	getRotation ()Lnet/minecraft/world/level/block/Rotation; ap_
	getType ()Lnet/minecraft/world/level/levelgen/feature/StructurePieceType; k
	getWorldPos (III)Lnet/minecraft/core/BlockPos; c
	getWorldX (II)I a
	getWorldY (I)I d
	getWorldZ (II)I b
	isCloseToChunk (Lnet/minecraft/world/level/ChunkPos;I)Z a
	isInterior (Lnet/minecraft/world/level/LevelReader;IIILnet/minecraft/world/level/levelgen/structure/BoundingBox;)Z a
	maybeGenerateBlock (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Ljava/util/Random;FIIILnet/minecraft/world/level/block/state/BlockState;)V a
	move (III)V a
	placeBlock (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/block/state/BlockState;IIILnet/minecraft/world/level/levelgen/structure/BoundingBox;)V a
	postProcess (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/StructureFeatureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/core/BlockPos;)Z a
	reorient (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/state/BlockState; a
	setOrientation (Lnet/minecraft/core/Direction;)V a
net/minecraft/world/level/levelgen/structure/StructurePiece$BlockSelector crr$a
	next a
	getNext ()Lnet/minecraft/world/level/block/state/BlockState; a
	next (Ljava/util/Random;IIIZ)V a
net/minecraft/world/level/levelgen/structure/StructureStart crs
	INVALID_START a
	boundingBox c
	chunkX f
	chunkZ g
	feature e
	pieces b
	random d
	references h
	addReference ()V i
	calculateBoundingBox ()V b
	canBeReferenced ()Z h
	createTag (II)Lnet/minecraft/nbt/CompoundTag; a
	generatePieces (Lnet/minecraft/core/RegistryAccess;Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureManager;IILnet/minecraft/world/level/biome/Biome;Lnet/minecraft/world/level/levelgen/feature/configurations/FeatureConfiguration;)V a
	getBoundingBox ()Lnet/minecraft/world/level/levelgen/structure/BoundingBox; c
	getChunkX ()I f
	getChunkZ ()I g
	getFeature ()Lnet/minecraft/world/level/levelgen/feature/StructureFeature; l
	getLocatePos ()Lnet/minecraft/core/BlockPos; a
	getMaxReferences ()I k
	getPieces ()Ljava/util/List; d
	getReferences ()I j
	isValid ()Z e
	moveBelowSeaLevel (ILjava/util/Random;I)V a
	moveInsideHeights (Ljava/util/Random;II)V a
	placeInChunk (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/StructureFeatureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Lnet/minecraft/world/level/ChunkPos;)V a
net/minecraft/world/level/levelgen/structure/SwamplandHutPiece crt
	spawnedCat f
	spawnedWitch e
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	postProcess (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/StructureFeatureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/core/BlockPos;)Z a
	spawnCat (Lnet/minecraft/world/level/ServerLevelAccessor;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;)V a
net/minecraft/world/level/levelgen/structure/TemplateStructurePiece cru
	LOGGER d
	placeSettings b
	template a
	templatePosition c
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	getRotation ()Lnet/minecraft/world/level/block/Rotation; ap_
	handleDataMarker (Ljava/lang/String;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/ServerLevelAccessor;Ljava/util/Random;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;)V a
	move (III)V a
	postProcess (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/StructureFeatureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Ljava/util/Random;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/core/BlockPos;)Z a
	setup (Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplate;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructurePlaceSettings;)V a
net/minecraft/world/level/levelgen/structure/WoodlandMansionPieces crv
	generateMansion (Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureManager;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Rotation;Ljava/util/List;Ljava/util/Random;)V a
	main ([Ljava/lang/String;)V a
net/minecraft/world/level/levelgen/structure/WoodlandMansionPieces$FirstFloorRoomCollection crv$a
	get1x1 (Ljava/util/Random;)Ljava/lang/String; a
	get1x1Secret (Ljava/util/Random;)Ljava/lang/String; b
	get1x2FrontEntrance (Ljava/util/Random;Z)Ljava/lang/String; b
	get1x2Secret (Ljava/util/Random;)Ljava/lang/String; c
	get1x2SideEntrance (Ljava/util/Random;Z)Ljava/lang/String; a
	get2x2 (Ljava/util/Random;)Ljava/lang/String; d
	get2x2Secret (Ljava/util/Random;)Ljava/lang/String; e
net/minecraft/world/level/levelgen/structure/WoodlandMansionPieces$FloorRoomCollection crv$b
	get1x1 (Ljava/util/Random;)Ljava/lang/String; a
	get1x1Secret (Ljava/util/Random;)Ljava/lang/String; b
	get1x2FrontEntrance (Ljava/util/Random;Z)Ljava/lang/String; b
	get1x2Secret (Ljava/util/Random;)Ljava/lang/String; c
	get1x2SideEntrance (Ljava/util/Random;Z)Ljava/lang/String; a
	get2x2 (Ljava/util/Random;)Ljava/lang/String; d
	get2x2Secret (Ljava/util/Random;)Ljava/lang/String; e
net/minecraft/world/level/levelgen/structure/WoodlandMansionPieces$MansionGrid crv$c
	baseGrid b
	entranceX e
	entranceY f
	floorRooms d
	random a
	thirdFloorGrid c
	cleanEdges (Lnet/minecraft/world/level/levelgen/structure/WoodlandMansionPieces$SimpleGrid;)Z a
	get1x2RoomDirection (Lnet/minecraft/world/level/levelgen/structure/WoodlandMansionPieces$SimpleGrid;IIII)Lnet/minecraft/core/Direction; b
	identifyRooms (Lnet/minecraft/world/level/levelgen/structure/WoodlandMansionPieces$SimpleGrid;Lnet/minecraft/world/level/levelgen/structure/WoodlandMansionPieces$SimpleGrid;)V a
	isHouse (Lnet/minecraft/world/level/levelgen/structure/WoodlandMansionPieces$SimpleGrid;II)Z a
	isRoomId (Lnet/minecraft/world/level/levelgen/structure/WoodlandMansionPieces$SimpleGrid;IIII)Z a
	print ()V a
	recursiveCorridor (Lnet/minecraft/world/level/levelgen/structure/WoodlandMansionPieces$SimpleGrid;IILnet/minecraft/core/Direction;I)V a
	setupThirdFloor ()V b
net/minecraft/world/level/levelgen/structure/WoodlandMansionPieces$MansionPiecePlacer crv$d
	random b
	startX c
	startY d
	structureManager a
	addRoom1x1 (Ljava/util/List;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Rotation;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/levelgen/structure/WoodlandMansionPieces$FloorRoomCollection;)V a
	addRoom1x2 (Ljava/util/List;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Rotation;Lnet/minecraft/core/Direction;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/levelgen/structure/WoodlandMansionPieces$FloorRoomCollection;Z)V a
	addRoom2x2 (Ljava/util/List;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Rotation;Lnet/minecraft/core/Direction;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/levelgen/structure/WoodlandMansionPieces$FloorRoomCollection;)V a
	addRoom2x2Secret (Ljava/util/List;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Rotation;Lnet/minecraft/world/level/levelgen/structure/WoodlandMansionPieces$FloorRoomCollection;)V a
	createMansion (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Rotation;Ljava/util/List;Lnet/minecraft/world/level/levelgen/structure/WoodlandMansionPieces$MansionGrid;)V a
	createRoof (Ljava/util/List;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Rotation;Lnet/minecraft/world/level/levelgen/structure/WoodlandMansionPieces$SimpleGrid;Lnet/minecraft/world/level/levelgen/structure/WoodlandMansionPieces$SimpleGrid;)V a
	entrance (Ljava/util/List;Lnet/minecraft/world/level/levelgen/structure/WoodlandMansionPieces$PlacementData;)V a
	traverseInnerTurn (Ljava/util/List;Lnet/minecraft/world/level/levelgen/structure/WoodlandMansionPieces$PlacementData;)V d
	traverseOuterWalls (Ljava/util/List;Lnet/minecraft/world/level/levelgen/structure/WoodlandMansionPieces$PlacementData;Lnet/minecraft/world/level/levelgen/structure/WoodlandMansionPieces$SimpleGrid;Lnet/minecraft/core/Direction;IIII)V a
	traverseTurn (Ljava/util/List;Lnet/minecraft/world/level/levelgen/structure/WoodlandMansionPieces$PlacementData;)V c
	traverseWallPiece (Ljava/util/List;Lnet/minecraft/world/level/levelgen/structure/WoodlandMansionPieces$PlacementData;)V b
net/minecraft/world/level/levelgen/structure/WoodlandMansionPieces$PlacementData crv$e
	position b
	rotation a
	wallType c
net/minecraft/world/level/levelgen/structure/WoodlandMansionPieces$SecondFloorRoomCollection crv$f
	get1x1 (Ljava/util/Random;)Ljava/lang/String; a
	get1x1Secret (Ljava/util/Random;)Ljava/lang/String; b
	get1x2FrontEntrance (Ljava/util/Random;Z)Ljava/lang/String; b
	get1x2Secret (Ljava/util/Random;)Ljava/lang/String; c
	get1x2SideEntrance (Ljava/util/Random;Z)Ljava/lang/String; a
	get2x2 (Ljava/util/Random;)Ljava/lang/String; d
	get2x2Secret (Ljava/util/Random;)Ljava/lang/String; e
net/minecraft/world/level/levelgen/structure/WoodlandMansionPieces$SimpleGrid crv$g
	grid a
	height c
	valueIfOutside d
	width b
	edgesTo (III)Z b
	get (II)I a
	set (III)V a
	set (IIIII)V a
	setif (IIII)V a
net/minecraft/world/level/levelgen/structure/WoodlandMansionPieces$ThirdFloorRoomCollection crv$h
net/minecraft/world/level/levelgen/structure/WoodlandMansionPieces$WoodlandMansionPiece crv$i
	mirror f
	rotation e
	templateName d
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	handleDataMarker (Ljava/lang/String;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/ServerLevelAccessor;Ljava/util/Random;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;)V a
	loadTemplate (Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureManager;)V a
net/minecraft/world/level/levelgen/structure/templatesystem/AlwaysTrueTest crx
	CODEC a
	INSTANCE b
	getType ()Lnet/minecraft/world/level/levelgen/structure/templatesystem/RuleTestType; a
	test (Lnet/minecraft/world/level/block/state/BlockState;Ljava/util/Random;)Z a
net/minecraft/world/level/levelgen/structure/templatesystem/AxisAlignedLinearPosTest cry
	CODEC a
	axis g
	maxChance d
	maxDist f
	minChance b
	minDist e
	getType ()Lnet/minecraft/world/level/levelgen/structure/templatesystem/PosRuleTestType; a
	test (Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)Z a
net/minecraft/world/level/levelgen/structure/templatesystem/BlackstoneReplaceProcessor crz
	CODEC a
	INSTANCE b
	replacements c
	getType ()Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureProcessorType; a
	processBlock (Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplate$StructureBlockInfo;Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplate$StructureBlockInfo;Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructurePlaceSettings;)Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplate$StructureBlockInfo; a
net/minecraft/world/level/levelgen/structure/templatesystem/BlockAgeProcessor csa
	CODEC a
	mossiness b
	getRandomBlock (Ljava/util/Random;[Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/state/BlockState; a
	getRandomBlock (Ljava/util/Random;[Lnet/minecraft/world/level/block/state/BlockState;[Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/state/BlockState; a
	getRandomFacingStairs (Ljava/util/Random;Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/world/level/block/state/BlockState; a
	getType ()Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureProcessorType; a
	maybeReplaceFullStoneBlock (Ljava/util/Random;)Lnet/minecraft/world/level/block/state/BlockState; a
	maybeReplaceObsidian (Ljava/util/Random;)Lnet/minecraft/world/level/block/state/BlockState; d
	maybeReplaceSlab (Ljava/util/Random;)Lnet/minecraft/world/level/block/state/BlockState; b
	maybeReplaceStairs (Ljava/util/Random;Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/state/BlockState; a
	maybeReplaceWall (Ljava/util/Random;)Lnet/minecraft/world/level/block/state/BlockState; c
	processBlock (Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplate$StructureBlockInfo;Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplate$StructureBlockInfo;Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructurePlaceSettings;)Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplate$StructureBlockInfo; a
net/minecraft/world/level/levelgen/structure/templatesystem/BlockIgnoreProcessor csb
	AIR c
	CODEC a
	STRUCTURE_AND_AIR d
	STRUCTURE_BLOCK b
	toIgnore e
	getType ()Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureProcessorType; a
	processBlock (Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplate$StructureBlockInfo;Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplate$StructureBlockInfo;Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructurePlaceSettings;)Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplate$StructureBlockInfo; a
net/minecraft/world/level/levelgen/structure/templatesystem/BlockMatchTest csc
	CODEC a
	block b
	getType ()Lnet/minecraft/world/level/levelgen/structure/templatesystem/RuleTestType; a
	test (Lnet/minecraft/world/level/block/state/BlockState;Ljava/util/Random;)Z a
net/minecraft/world/level/levelgen/structure/templatesystem/BlockRotProcessor csd
	CODEC a
	integrity b
	getType ()Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureProcessorType; a
	processBlock (Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplate$StructureBlockInfo;Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplate$StructureBlockInfo;Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructurePlaceSettings;)Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplate$StructureBlockInfo; a
net/minecraft/world/level/levelgen/structure/templatesystem/BlockStateMatchTest cse
	CODEC a
	blockState b
	getType ()Lnet/minecraft/world/level/levelgen/structure/templatesystem/RuleTestType; a
	test (Lnet/minecraft/world/level/block/state/BlockState;Ljava/util/Random;)Z a
net/minecraft/world/level/levelgen/structure/templatesystem/GravityProcessor csf
	CODEC a
	heightmap b
	offset c
	getType ()Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureProcessorType; a
	processBlock (Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplate$StructureBlockInfo;Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplate$StructureBlockInfo;Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructurePlaceSettings;)Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplate$StructureBlockInfo; a
net/minecraft/world/level/levelgen/structure/templatesystem/JigsawReplacementProcessor csg
	CODEC a
	INSTANCE b
	getType ()Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureProcessorType; a
	processBlock (Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplate$StructureBlockInfo;Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplate$StructureBlockInfo;Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructurePlaceSettings;)Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplate$StructureBlockInfo; a
net/minecraft/world/level/levelgen/structure/templatesystem/LavaSubmergedBlockProcessor csh
	CODEC a
	INSTANCE b
	getType ()Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureProcessorType; a
	processBlock (Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplate$StructureBlockInfo;Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplate$StructureBlockInfo;Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructurePlaceSettings;)Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplate$StructureBlockInfo; a
net/minecraft/world/level/levelgen/structure/templatesystem/LinearPosTest csi
	CODEC a
	maxChance d
	maxDist f
	minChance b
	minDist e
	getType ()Lnet/minecraft/world/level/levelgen/structure/templatesystem/PosRuleTestType; a
	test (Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)Z a
net/minecraft/world/level/levelgen/structure/templatesystem/NopProcessor csj
	CODEC a
	INSTANCE b
	getType ()Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureProcessorType; a
	processBlock (Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplate$StructureBlockInfo;Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplate$StructureBlockInfo;Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructurePlaceSettings;)Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplate$StructureBlockInfo; a
net/minecraft/world/level/levelgen/structure/templatesystem/PosAlwaysTrueTest csk
	CODEC a
	INSTANCE b
	getType ()Lnet/minecraft/world/level/levelgen/structure/templatesystem/PosRuleTestType; a
	test (Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)Z a
net/minecraft/world/level/levelgen/structure/templatesystem/PosRuleTest csl
	CODEC c
	getType ()Lnet/minecraft/world/level/levelgen/structure/templatesystem/PosRuleTestType; a
	test (Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)Z a
net/minecraft/world/level/levelgen/structure/templatesystem/PosRuleTestType csm
	ALWAYS_TRUE_TEST a
	AXIS_ALIGNED_LINEAR_POS_TEST c
	LINEAR_POS_TEST b
	register (Ljava/lang/String;Lcom/mojang/serialization/Codec;)Lnet/minecraft/world/level/levelgen/structure/templatesystem/PosRuleTestType; a
net/minecraft/world/level/levelgen/structure/templatesystem/ProcessorRule csn
	CODEC a
	inputPredicate b
	locPredicate c
	outputState e
	outputTag f
	posPredicate d
	getOutputState ()Lnet/minecraft/world/level/block/state/BlockState; a
	getOutputTag ()Lnet/minecraft/nbt/CompoundTag; b
	test (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)Z a
net/minecraft/world/level/levelgen/structure/templatesystem/RandomBlockMatchTest cso
	CODEC a
	block b
	probability d
	getType ()Lnet/minecraft/world/level/levelgen/structure/templatesystem/RuleTestType; a
	test (Lnet/minecraft/world/level/block/state/BlockState;Ljava/util/Random;)Z a
net/minecraft/world/level/levelgen/structure/templatesystem/RandomBlockStateMatchTest csp
	CODEC a
	blockState b
	probability d
	getType ()Lnet/minecraft/world/level/levelgen/structure/templatesystem/RuleTestType; a
	test (Lnet/minecraft/world/level/block/state/BlockState;Ljava/util/Random;)Z a
net/minecraft/world/level/levelgen/structure/templatesystem/RuleProcessor csq
	CODEC a
	rules b
	getType ()Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureProcessorType; a
	processBlock (Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplate$StructureBlockInfo;Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplate$StructureBlockInfo;Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructurePlaceSettings;)Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplate$StructureBlockInfo; a
net/minecraft/world/level/levelgen/structure/templatesystem/RuleTest csr
	CODEC c
	getType ()Lnet/minecraft/world/level/levelgen/structure/templatesystem/RuleTestType; a
	test (Lnet/minecraft/world/level/block/state/BlockState;Ljava/util/Random;)Z a
net/minecraft/world/level/levelgen/structure/templatesystem/RuleTestType css
	ALWAYS_TRUE_TEST a
	BLOCKSTATE_TEST c
	BLOCK_TEST b
	RANDOM_BLOCKSTATE_TEST f
	RANDOM_BLOCK_TEST e
	TAG_TEST d
	register (Ljava/lang/String;Lcom/mojang/serialization/Codec;)Lnet/minecraft/world/level/levelgen/structure/templatesystem/RuleTestType; a
net/minecraft/world/level/levelgen/structure/templatesystem/StructureManager cst
	LOGGER a
	fixerUpper c
	generatedDir e
	resourceManager d
	structureRepository b
	createAndValidatePathToStructure (Lnet/minecraft/resources/ResourceLocation;Ljava/lang/String;)Ljava/nio/file/Path; b
	createPathToStructure (Lnet/minecraft/resources/ResourceLocation;Ljava/lang/String;)Ljava/nio/file/Path; a
	get (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplate; b
	getOrCreate (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplate; a
	loadFromGenerated (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplate; f
	loadFromResource (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplate; e
	onResourceManagerReload (Lnet/minecraft/server/packs/resources/ResourceManager;)V a
	readStructure (Ljava/io/InputStream;)Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplate; a
	readStructure (Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplate; a
	remove (Lnet/minecraft/resources/ResourceLocation;)V d
	save (Lnet/minecraft/resources/ResourceLocation;)Z c
net/minecraft/world/level/levelgen/structure/templatesystem/StructurePlaceSettings csu
	boundingBox f
	chunkPos e
	finalizeEntities l
	ignoreEntities d
	keepLiquids g
	knownShape k
	mirror a
	palette i
	processors j
	random h
	rotation b
	rotationPivot c
	addProcessor (Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureProcessor;)Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructurePlaceSettings; a
	calculateBoundingBox (Lnet/minecraft/world/level/ChunkPos;)Lnet/minecraft/world/level/levelgen/structure/BoundingBox; b
	clearProcessors ()Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructurePlaceSettings; b
	copy ()Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructurePlaceSettings; a
	getBoundingBox ()Lnet/minecraft/world/level/levelgen/structure/BoundingBox; h
	getChunkPos ()Lnet/minecraft/world/level/ChunkPos; f
	getKnownShape ()Z i
	getMirror ()Lnet/minecraft/world/level/block/Mirror; c
	getProcessors ()Ljava/util/List; j
	getRandom (Lnet/minecraft/core/BlockPos;)Ljava/util/Random; b
	getRandomPalette (Ljava/util/List;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplate$Palette; a
	getRotation ()Lnet/minecraft/world/level/block/Rotation; d
	getRotationPivot ()Lnet/minecraft/core/BlockPos; e
	isIgnoreEntities ()Z g
	popProcessor (Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureProcessor;)Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructurePlaceSettings; b
	setBoundingBox (Lnet/minecraft/world/level/levelgen/structure/BoundingBox;)Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructurePlaceSettings; a
	setChunkPos (Lnet/minecraft/world/level/ChunkPos;)Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructurePlaceSettings; a
	setFinalizeEntities (Z)Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructurePlaceSettings; d
	setIgnoreEntities (Z)Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructurePlaceSettings; a
	setKeepLiquids (Z)Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructurePlaceSettings; b
	setKnownShape (Z)Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructurePlaceSettings; c
	setMirror (Lnet/minecraft/world/level/block/Mirror;)Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructurePlaceSettings; a
	setRandom (Ljava/util/Random;)Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructurePlaceSettings; a
	setRotation (Lnet/minecraft/world/level/block/Rotation;)Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructurePlaceSettings; a
	setRotationPivot (Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructurePlaceSettings; a
	shouldFinalizeEntities ()Z m
	shouldKeepLiquids ()Z l
	updateBoundingBoxFromChunkPos ()V k
net/minecraft/world/level/levelgen/structure/templatesystem/StructureProcessor csv
	getType ()Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureProcessorType; a
	processBlock (Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplate$StructureBlockInfo;Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplate$StructureBlockInfo;Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructurePlaceSettings;)Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplate$StructureBlockInfo; a
net/minecraft/world/level/levelgen/structure/templatesystem/StructureProcessorList csw
	list a
	list ()Ljava/util/List; a
net/minecraft/world/level/levelgen/structure/templatesystem/StructureProcessorType csx
	BLACKSTONE_REPLACE h
	BLOCK_AGE g
	BLOCK_IGNORE a
	BLOCK_ROT b
	DIRECT_CODEC l
	GRAVITY c
	JIGSAW_REPLACEMENT d
	LAVA_SUBMERGED_BLOCK i
	LIST_CODEC m
	LIST_OBJECT_CODEC k
	NOP f
	RULE e
	SINGLE_CODEC j
	register (Ljava/lang/String;Lcom/mojang/serialization/Codec;)Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureProcessorType; a
net/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplate csy
	author d
	entityInfoList b
	palettes a
	size c
	addToLists (Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplate$StructureBlockInfo;Ljava/util/List;Ljava/util/List;Ljava/util/List;)V a
	buildInfoList (Ljava/util/List;Ljava/util/List;Ljava/util/List;)Ljava/util/List; a
	calculateConnectedPosition (Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructurePlaceSettings;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructurePlaceSettings;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/core/BlockPos; a
	calculateRelativePosition (Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructurePlaceSettings;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/core/BlockPos; a
	createEntityIgnoreException (Lnet/minecraft/world/level/ServerLevelAccessor;Lnet/minecraft/nbt/CompoundTag;)Ljava/util/Optional; a
	fillEntityList (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)V a
	fillFromWorld (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;ZLnet/minecraft/world/level/block/Block;)V a
	filterBlocks (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructurePlaceSettings;Lnet/minecraft/world/level/block/Block;)Ljava/util/List; a
	filterBlocks (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructurePlaceSettings;Lnet/minecraft/world/level/block/Block;Z)Ljava/util/List; a
	getAuthor ()Ljava/lang/String; b
	getBoundingBox (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Rotation;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Mirror;)Lnet/minecraft/world/level/levelgen/structure/BoundingBox; a
	getBoundingBox (Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructurePlaceSettings;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/levelgen/structure/BoundingBox; b
	getSize ()Lnet/minecraft/core/BlockPos; a
	getSize (Lnet/minecraft/world/level/block/Rotation;)Lnet/minecraft/core/BlockPos; a
	getZeroPositionWithTransform (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Mirror;Lnet/minecraft/world/level/block/Rotation;)Lnet/minecraft/core/BlockPos; a
	getZeroPositionWithTransform (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Mirror;Lnet/minecraft/world/level/block/Rotation;II)Lnet/minecraft/core/BlockPos; a
	load (Lnet/minecraft/nbt/CompoundTag;)V b
	loadPalette (Lnet/minecraft/nbt/ListTag;Lnet/minecraft/nbt/ListTag;)V a
	mirrorAABB (Lnet/minecraft/world/level/block/Rotation;IILnet/minecraft/world/level/levelgen/structure/BoundingBox;Lnet/minecraft/core/Direction;Lnet/minecraft/core/Direction;)V a
	newDoubleList ([D)Lnet/minecraft/nbt/ListTag; a
	newIntegerList ([I)Lnet/minecraft/nbt/ListTag; a
	placeEntities (Lnet/minecraft/world/level/ServerLevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Mirror;Lnet/minecraft/world/level/block/Rotation;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Z)V a
	placeInWorld (Lnet/minecraft/world/level/ServerLevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructurePlaceSettings;Ljava/util/Random;I)Z a
	placeInWorld (Lnet/minecraft/world/level/ServerLevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructurePlaceSettings;Ljava/util/Random;)V b
	placeInWorldChunk (Lnet/minecraft/world/level/ServerLevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructurePlaceSettings;Ljava/util/Random;)V a
	processBlockInfos (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructurePlaceSettings;Ljava/util/List;)Ljava/util/List; a
	save (Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/nbt/CompoundTag; a
	setAuthor (Ljava/lang/String;)V a
	transform (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Mirror;Lnet/minecraft/world/level/block/Rotation;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/core/BlockPos; a
	transform (Lnet/minecraft/world/phys/Vec3;Lnet/minecraft/world/level/block/Mirror;Lnet/minecraft/world/level/block/Rotation;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/phys/Vec3; a
	updateShapeAtEdge (Lnet/minecraft/world/level/LevelAccessor;ILnet/minecraft/world/phys/shapes/DiscreteVoxelShape;III)V a
net/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplate$Palette csy$a
	blocks a
	cache b
	blocks ()Ljava/util/List; a
	blocks (Lnet/minecraft/world/level/block/Block;)Ljava/util/List; a
net/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplate$SimplePalette csy$b
	DEFAULT_BLOCK_STATE a
	ids b
	lastId c
	addMapping (Lnet/minecraft/world/level/block/state/BlockState;I)V a
	idFor (Lnet/minecraft/world/level/block/state/BlockState;)I a
	stateFor (I)Lnet/minecraft/world/level/block/state/BlockState; a
net/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplate$StructureBlockInfo csy$c
	nbt c
	pos a
	state b
net/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplate$StructureEntityInfo csy$d
	blockPos b
	nbt c
	pos a
net/minecraft/world/level/levelgen/structure/templatesystem/TagMatchTest csz
	CODEC a
	tag b
	getType ()Lnet/minecraft/world/level/levelgen/structure/templatesystem/RuleTestType; a
	test (Lnet/minecraft/world/level/block/state/BlockState;Ljava/util/Random;)Z a
net/minecraft/world/level/levelgen/surfacebuilders/BadlandsSurfaceBuilder ctb
	BROWN_TERRACOTTA O
	LIGHT_GRAY_TERRACOTTA Q
	ORANGE_TERRACOTTA L
	RED_TERRACOTTA P
	TERRACOTTA M
	WHITE_TERRACOTTA K
	YELLOW_TERRACOTTA N
	clayBands a
	clayBandsOffsetNoise e
	pillarNoise c
	pillarRoofNoise d
	seed b
	apply (Ljava/util/Random;Lnet/minecraft/world/level/chunk/ChunkAccess;Lnet/minecraft/world/level/biome/Biome;IIIDLnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/state/BlockState;IJLnet/minecraft/world/level/levelgen/surfacebuilders/SurfaceBuilderBaseConfiguration;)V a
	apply (Ljava/util/Random;Lnet/minecraft/world/level/chunk/ChunkAccess;Lnet/minecraft/world/level/biome/Biome;IIIDLnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/state/BlockState;IJLnet/minecraft/world/level/levelgen/surfacebuilders/SurfaceBuilderConfiguration;)V a
	generateBands (J)V b
	getBand (III)Lnet/minecraft/world/level/block/state/BlockState; a
	initNoise (J)V a
net/minecraft/world/level/levelgen/surfacebuilders/BasaltDeltasSurfaceBuilder ctc
	BASALT a
	BLACKSTONE b
	CEILING_BLOCK_STATES e
	FLOOR_BLOCK_STATES d
	GRAVEL c
	getCeilingBlockStates ()Lcom/google/common/collect/ImmutableList; b
	getFloorBlockStates ()Lcom/google/common/collect/ImmutableList; a
	getPatchBlockState ()Lnet/minecraft/world/level/block/state/BlockState; c
net/minecraft/world/level/levelgen/surfacebuilders/ConfiguredSurfaceBuilder ctd
	CODEC b
	DIRECT_CODEC a
	config d
	surfaceBuilder c
	apply (Ljava/util/Random;Lnet/minecraft/world/level/chunk/ChunkAccess;Lnet/minecraft/world/level/biome/Biome;IIIDLnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/state/BlockState;IJ)V a
	config ()Lnet/minecraft/world/level/levelgen/surfacebuilders/SurfaceBuilderConfiguration; a
	initNoise (J)V a
net/minecraft/world/level/levelgen/surfacebuilders/DefaultSurfaceBuilder cte
	apply (Ljava/util/Random;Lnet/minecraft/world/level/chunk/ChunkAccess;Lnet/minecraft/world/level/biome/Biome;IIIDLnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/state/BlockState;IJLnet/minecraft/world/level/levelgen/surfacebuilders/SurfaceBuilderBaseConfiguration;)V a
	apply (Ljava/util/Random;Lnet/minecraft/world/level/chunk/ChunkAccess;Lnet/minecraft/world/level/biome/Biome;IIIDLnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/state/BlockState;IJLnet/minecraft/world/level/levelgen/surfacebuilders/SurfaceBuilderConfiguration;)V a
	apply (Ljava/util/Random;Lnet/minecraft/world/level/chunk/ChunkAccess;Lnet/minecraft/world/level/biome/Biome;IIIDLnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/state/BlockState;I)V a
net/minecraft/world/level/levelgen/surfacebuilders/ErodedBadlandsSurfaceBuilder ctf
	ORANGE_TERRACOTTA L
	TERRACOTTA M
	WHITE_TERRACOTTA K
	apply (Ljava/util/Random;Lnet/minecraft/world/level/chunk/ChunkAccess;Lnet/minecraft/world/level/biome/Biome;IIIDLnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/state/BlockState;IJLnet/minecraft/world/level/levelgen/surfacebuilders/SurfaceBuilderBaseConfiguration;)V a
	apply (Ljava/util/Random;Lnet/minecraft/world/level/chunk/ChunkAccess;Lnet/minecraft/world/level/biome/Biome;IIIDLnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/state/BlockState;IJLnet/minecraft/world/level/levelgen/surfacebuilders/SurfaceBuilderConfiguration;)V a
net/minecraft/world/level/levelgen/surfacebuilders/FrozenOceanSurfaceBuilder ctg
	AIR c
	GRAVEL d
	ICE e
	PACKED_ICE a
	SNOW_BLOCK b
	icebergNoise K
	icebergRoofNoise L
	seed M
	apply (Ljava/util/Random;Lnet/minecraft/world/level/chunk/ChunkAccess;Lnet/minecraft/world/level/biome/Biome;IIIDLnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/state/BlockState;IJLnet/minecraft/world/level/levelgen/surfacebuilders/SurfaceBuilderBaseConfiguration;)V a
	apply (Ljava/util/Random;Lnet/minecraft/world/level/chunk/ChunkAccess;Lnet/minecraft/world/level/biome/Biome;IIIDLnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/state/BlockState;IJLnet/minecraft/world/level/levelgen/surfacebuilders/SurfaceBuilderConfiguration;)V a
	initNoise (J)V a
net/minecraft/world/level/levelgen/surfacebuilders/GiantTreeTaigaSurfaceBuilder cth
	apply (Ljava/util/Random;Lnet/minecraft/world/level/chunk/ChunkAccess;Lnet/minecraft/world/level/biome/Biome;IIIDLnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/state/BlockState;IJLnet/minecraft/world/level/levelgen/surfacebuilders/SurfaceBuilderBaseConfiguration;)V a
	apply (Ljava/util/Random;Lnet/minecraft/world/level/chunk/ChunkAccess;Lnet/minecraft/world/level/biome/Biome;IIIDLnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/state/BlockState;IJLnet/minecraft/world/level/levelgen/surfacebuilders/SurfaceBuilderConfiguration;)V a
net/minecraft/world/level/levelgen/surfacebuilders/GravellyMountainSurfaceBuilder cti
	apply (Ljava/util/Random;Lnet/minecraft/world/level/chunk/ChunkAccess;Lnet/minecraft/world/level/biome/Biome;IIIDLnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/state/BlockState;IJLnet/minecraft/world/level/levelgen/surfacebuilders/SurfaceBuilderBaseConfiguration;)V a
	apply (Ljava/util/Random;Lnet/minecraft/world/level/chunk/ChunkAccess;Lnet/minecraft/world/level/biome/Biome;IIIDLnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/state/BlockState;IJLnet/minecraft/world/level/levelgen/surfacebuilders/SurfaceBuilderConfiguration;)V a
net/minecraft/world/level/levelgen/surfacebuilders/MountainSurfaceBuilder ctj
	apply (Ljava/util/Random;Lnet/minecraft/world/level/chunk/ChunkAccess;Lnet/minecraft/world/level/biome/Biome;IIIDLnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/state/BlockState;IJLnet/minecraft/world/level/levelgen/surfacebuilders/SurfaceBuilderBaseConfiguration;)V a
	apply (Ljava/util/Random;Lnet/minecraft/world/level/chunk/ChunkAccess;Lnet/minecraft/world/level/biome/Biome;IIIDLnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/state/BlockState;IJLnet/minecraft/world/level/levelgen/surfacebuilders/SurfaceBuilderConfiguration;)V a
net/minecraft/world/level/levelgen/surfacebuilders/NetherCappedSurfaceBuilder ctk
	ceilingNoises c
	floorNoises b
	patchNoise d
	seed a
	apply (Ljava/util/Random;Lnet/minecraft/world/level/chunk/ChunkAccess;Lnet/minecraft/world/level/biome/Biome;IIIDLnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/state/BlockState;IJLnet/minecraft/world/level/levelgen/surfacebuilders/SurfaceBuilderBaseConfiguration;)V a
	apply (Ljava/util/Random;Lnet/minecraft/world/level/chunk/ChunkAccess;Lnet/minecraft/world/level/biome/Biome;IIIDLnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/state/BlockState;IJLnet/minecraft/world/level/levelgen/surfacebuilders/SurfaceBuilderConfiguration;)V a
	getCeilingBlockStates ()Lcom/google/common/collect/ImmutableList; b
	getFloorBlockStates ()Lcom/google/common/collect/ImmutableList; a
	getPatchBlockState ()Lnet/minecraft/world/level/block/state/BlockState; c
	initNoise (J)V a
	initPerlinNoises (Lcom/google/common/collect/ImmutableList;J)Lcom/google/common/collect/ImmutableMap; a
net/minecraft/world/level/levelgen/surfacebuilders/NetherForestSurfaceBuilder ctl
	AIR b
	decorationNoise c
	seed a
	apply (Ljava/util/Random;Lnet/minecraft/world/level/chunk/ChunkAccess;Lnet/minecraft/world/level/biome/Biome;IIIDLnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/state/BlockState;IJLnet/minecraft/world/level/levelgen/surfacebuilders/SurfaceBuilderBaseConfiguration;)V a
	apply (Ljava/util/Random;Lnet/minecraft/world/level/chunk/ChunkAccess;Lnet/minecraft/world/level/biome/Biome;IIIDLnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/state/BlockState;IJLnet/minecraft/world/level/levelgen/surfacebuilders/SurfaceBuilderConfiguration;)V a
	initNoise (J)V a
net/minecraft/world/level/levelgen/surfacebuilders/NetherSurfaceBuilder ctm
	AIR c
	GRAVEL d
	SOUL_SAND e
	decorationNoise b
	seed a
	apply (Ljava/util/Random;Lnet/minecraft/world/level/chunk/ChunkAccess;Lnet/minecraft/world/level/biome/Biome;IIIDLnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/state/BlockState;IJLnet/minecraft/world/level/levelgen/surfacebuilders/SurfaceBuilderBaseConfiguration;)V a
	apply (Ljava/util/Random;Lnet/minecraft/world/level/chunk/ChunkAccess;Lnet/minecraft/world/level/biome/Biome;IIIDLnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/state/BlockState;IJLnet/minecraft/world/level/levelgen/surfacebuilders/SurfaceBuilderConfiguration;)V a
	initNoise (J)V a
net/minecraft/world/level/levelgen/surfacebuilders/NopeSurfaceBuilder ctn
	apply (Ljava/util/Random;Lnet/minecraft/world/level/chunk/ChunkAccess;Lnet/minecraft/world/level/biome/Biome;IIIDLnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/state/BlockState;IJLnet/minecraft/world/level/levelgen/surfacebuilders/SurfaceBuilderBaseConfiguration;)V a
	apply (Ljava/util/Random;Lnet/minecraft/world/level/chunk/ChunkAccess;Lnet/minecraft/world/level/biome/Biome;IIIDLnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/state/BlockState;IJLnet/minecraft/world/level/levelgen/surfacebuilders/SurfaceBuilderConfiguration;)V a
net/minecraft/world/level/levelgen/surfacebuilders/ShatteredSavanaSurfaceBuilder cto
	apply (Ljava/util/Random;Lnet/minecraft/world/level/chunk/ChunkAccess;Lnet/minecraft/world/level/biome/Biome;IIIDLnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/state/BlockState;IJLnet/minecraft/world/level/levelgen/surfacebuilders/SurfaceBuilderBaseConfiguration;)V a
	apply (Ljava/util/Random;Lnet/minecraft/world/level/chunk/ChunkAccess;Lnet/minecraft/world/level/biome/Biome;IIIDLnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/state/BlockState;IJLnet/minecraft/world/level/levelgen/surfacebuilders/SurfaceBuilderConfiguration;)V a
net/minecraft/world/level/levelgen/surfacebuilders/SoulSandValleySurfaceBuilder ctp
	BLOCK_STATES d
	GRAVEL c
	SOUL_SAND a
	SOUL_SOIL b
	getCeilingBlockStates ()Lcom/google/common/collect/ImmutableList; b
	getFloorBlockStates ()Lcom/google/common/collect/ImmutableList; a
	getPatchBlockState ()Lnet/minecraft/world/level/block/state/BlockState; c
net/minecraft/world/level/levelgen/surfacebuilders/SurfaceBuilder ctq
	BADLANDS B
	BASALT X
	BASALT_DELTAS I
	BLACKSTONE W
	COARSE_DIRT K
	CONFIG_BADLANDS n
	CONFIG_BASALT_DELTAS u
	CONFIG_COARSE_DIRT j
	CONFIG_CRIMSON_FOREST s
	CONFIG_DESERT k
	CONFIG_FULL_SAND m
	CONFIG_GRASS h
	CONFIG_GRAVEL g
	CONFIG_HELL p
	CONFIG_MYCELIUM o
	CONFIG_OCEAN_SAND l
	CONFIG_PODZOL f
	CONFIG_SOUL_SAND_VALLEY q
	CONFIG_STONE i
	CONFIG_THEEND r
	CONFIG_WARPED_FOREST t
	CRIMSON_NYLIUM S
	DEFAULT v
	DIRT a
	ENDSTONE R
	ERODED_BADLANDS D
	FROZEN_OCEAN E
	GIANT_TREE_TAIGA z
	GRASS_BLOCK b
	GRAVEL d
	GRAVELLY_MOUNTAIN y
	MAGMA Y
	MOUNTAIN w
	MYCELIUM O
	NETHER F
	NETHERRACK Q
	NETHER_FOREST G
	NETHER_WART_BLOCK U
	NOPE J
	PODZOL c
	RED_SAND M
	SAND L
	SHATTERED_SAVANNA x
	SOUL_SAND P
	SOUL_SAND_VALLEY H
	STONE e
	SWAMP A
	WARPED_NYLIUM T
	WARPED_WART_BLOCK V
	WHITE_TERRACOTTA N
	WOODED_BADLANDS C
	configuredCodec Z
	apply (Ljava/util/Random;Lnet/minecraft/world/level/chunk/ChunkAccess;Lnet/minecraft/world/level/biome/Biome;IIIDLnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/state/BlockState;IJLnet/minecraft/world/level/levelgen/surfacebuilders/SurfaceBuilderConfiguration;)V a
	configured (Lnet/minecraft/world/level/levelgen/surfacebuilders/SurfaceBuilderConfiguration;)Lnet/minecraft/world/level/levelgen/surfacebuilders/ConfiguredSurfaceBuilder; a
	configuredCodec ()Lcom/mojang/serialization/Codec; d
	initNoise (J)V a
	register (Ljava/lang/String;Lnet/minecraft/world/level/levelgen/surfacebuilders/SurfaceBuilder;)Lnet/minecraft/world/level/levelgen/surfacebuilders/SurfaceBuilder; a
net/minecraft/world/level/levelgen/surfacebuilders/SurfaceBuilderBaseConfiguration ctr
	CODEC a
	topMaterial b
	underMaterial c
	underwaterMaterial d
	getTopMaterial ()Lnet/minecraft/world/level/block/state/BlockState; a
	getUnderMaterial ()Lnet/minecraft/world/level/block/state/BlockState; b
	getUnderwaterMaterial ()Lnet/minecraft/world/level/block/state/BlockState; c
net/minecraft/world/level/levelgen/surfacebuilders/SurfaceBuilderConfiguration cts
	getTopMaterial ()Lnet/minecraft/world/level/block/state/BlockState; a
	getUnderMaterial ()Lnet/minecraft/world/level/block/state/BlockState; b
	getUnderwaterMaterial ()Lnet/minecraft/world/level/block/state/BlockState; c
net/minecraft/world/level/levelgen/surfacebuilders/SwampSurfaceBuilder ctt
	apply (Ljava/util/Random;Lnet/minecraft/world/level/chunk/ChunkAccess;Lnet/minecraft/world/level/biome/Biome;IIIDLnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/state/BlockState;IJLnet/minecraft/world/level/levelgen/surfacebuilders/SurfaceBuilderBaseConfiguration;)V a
	apply (Ljava/util/Random;Lnet/minecraft/world/level/chunk/ChunkAccess;Lnet/minecraft/world/level/biome/Biome;IIIDLnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/state/BlockState;IJLnet/minecraft/world/level/levelgen/surfacebuilders/SurfaceBuilderConfiguration;)V a
net/minecraft/world/level/levelgen/surfacebuilders/WoodedBadlandsSurfaceBuilder ctu
	ORANGE_TERRACOTTA L
	TERRACOTTA M
	WHITE_TERRACOTTA K
	apply (Ljava/util/Random;Lnet/minecraft/world/level/chunk/ChunkAccess;Lnet/minecraft/world/level/biome/Biome;IIIDLnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/state/BlockState;IJLnet/minecraft/world/level/levelgen/surfacebuilders/SurfaceBuilderBaseConfiguration;)V a
	apply (Ljava/util/Random;Lnet/minecraft/world/level/chunk/ChunkAccess;Lnet/minecraft/world/level/biome/Biome;IIIDLnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/state/BlockState;IJLnet/minecraft/world/level/levelgen/surfacebuilders/SurfaceBuilderConfiguration;)V a
net/minecraft/world/level/levelgen/synth/ImprovedNoise ctw
	p d
	xo a
	yo b
	zo c
	gradDot (IDDD)D a
	noise (DDDDD)D a
	p (I)I a
	sampleAndLerp (IIIDDDDDD)D a
net/minecraft/world/level/levelgen/synth/NormalNoise ctx
	first b
	second c
	valueFactor a
	create (Lnet/minecraft/world/level/levelgen/WorldgenRandom;ILit/unimi/dsi/fastutil/doubles/DoubleList;)Lnet/minecraft/world/level/levelgen/synth/NormalNoise; a
	create (Lnet/minecraft/world/level/levelgen/WorldgenRandom;I[D)Lnet/minecraft/world/level/levelgen/synth/NormalNoise; a
	expectedDeviation (I)D a
	getValue (DDD)D a
net/minecraft/world/level/levelgen/synth/PerlinNoise cty
	amplitudes b
	lowestFreqInputFactor d
	lowestFreqValueFactor c
	noiseLevels a
	create (Lnet/minecraft/world/level/levelgen/WorldgenRandom;ILit/unimi/dsi/fastutil/doubles/DoubleList;)Lnet/minecraft/world/level/levelgen/synth/PerlinNoise; a
	create (Lnet/minecraft/world/level/levelgen/WorldgenRandom;I[D)Lnet/minecraft/world/level/levelgen/synth/PerlinNoise; a
	getOctaveNoise (I)Lnet/minecraft/world/level/levelgen/synth/ImprovedNoise; a
	getSurfaceNoiseValue (DDDD)D a
	getValue (DDD)D a
	getValue (DDDDDZ)D a
	makeAmplitudes (Lit/unimi/dsi/fastutil/ints/IntSortedSet;)Lcom/mojang/datafixers/util/Pair; a
	wrap (D)D a
net/minecraft/world/level/levelgen/synth/PerlinSimplexNoise ctz
	highestFreqInputFactor c
	highestFreqValueFactor b
	noiseLevels a
	getSurfaceNoiseValue (DDDD)D a
	getValue (DDZ)D a
net/minecraft/world/level/levelgen/synth/SimplexNoise cua
	F2 f
	G2 g
	GRADIENT a
	SQRT_3 e
	p h
	xo b
	yo c
	zo d
	dot ([IDDD)D a
	getCornerNoise3D (IDDDD)D a
	getValue (DD)D a
	getValue (DDD)D a
	p (I)I a
net/minecraft/world/level/levelgen/synth/SurfaceNoise cub
	getSurfaceNoiseValue (DDDD)D a
net/minecraft/world/level/lighting/BlockLightEngine cud
	DIRECTIONS e
	pos f
	checkNeighborsAfterUpdate (JIZ)V a
	computeLevelFromNeighbor (JJI)I b
	getComputedLevel (JJI)I a
	getLightEmission (J)I d
	onBlockEmissionIncrease (Lnet/minecraft/core/BlockPos;I)V a
net/minecraft/world/level/lighting/BlockLightSectionStorage cue
	getLightValue (J)I d
net/minecraft/world/level/lighting/BlockLightSectionStorage$BlockDataLayerStorageMap cue$a
	copy ()Lnet/minecraft/world/level/lighting/BlockLightSectionStorage$BlockDataLayerStorageMap; a
	copy ()Lnet/minecraft/world/level/lighting/DataLayerStorageMap; b
net/minecraft/world/level/lighting/DataLayerStorageMap cuf
	cacheEnabled d
	lastSectionKeys b
	lastSections c
	map a
	clearCache ()V c
	copy ()Lnet/minecraft/world/level/lighting/DataLayerStorageMap; b
	copyDataLayer (J)V a
	disableCache ()V d
	getLayer (J)Lnet/minecraft/world/level/chunk/DataLayer; c
	hasLayer (J)Z b
	removeLayer (J)Lnet/minecraft/world/level/chunk/DataLayer; d
	setLayer (JLnet/minecraft/world/level/chunk/DataLayer;)V a
net/minecraft/world/level/lighting/DynamicGraphMinFixedPoint cug
	computedLevels c
	firstQueuedLevel d
	hasWork e
	levelCount a
	queues b
	checkEdge (JJIIIZ)V a
	checkEdge (JJIZ)V a
	checkFirstQueuedLevel (I)V a
	checkNeighbor (JJIZ)V b
	checkNeighborsAfterUpdate (JIZ)V a
	checkNode (J)V f
	computeLevelFromNeighbor (JJI)I b
	dequeue (JIIZ)V a
	enqueue (JII)V a
	getComputedLevel (JJI)I a
	getKey (II)I a
	getLevel (J)I c
	getQueueSize ()I c
	hasWork ()Z b
	isSource (J)Z a
	removeFromQueue (J)V e
	removeIf (Ljava/util/function/LongPredicate;)V a
	runUpdates (I)I b
	setLevel (JI)V a
net/minecraft/world/level/lighting/FlatDataLayer cuh
	getData ()[B a
	getIndex (III)I b
net/minecraft/world/level/lighting/LayerLightEngine cui
	DIRECTIONS e
	chunkSource a
	lastChunk h
	lastChunkPos g
	layer b
	pos d
	runningLightUpdates f
	storage c
	checkBlock (Lnet/minecraft/core/BlockPos;)V a
	checkNode (J)V f
	clearCache ()V d
	computeLevelFromNeighbor (JJI)I b
	enableLightSources (Lnet/minecraft/world/level/ChunkPos;Z)V a
	getChunk (II)Lnet/minecraft/world/level/BlockGetter; a
	getComputedLevel (JJI)I a
	getDataLayerData (Lnet/minecraft/core/SectionPos;)Lnet/minecraft/world/level/chunk/DataLayer; a
	getDebugData (J)Ljava/lang/String; b
	getLevel (J)I c
	getLevel (Lnet/minecraft/world/level/chunk/DataLayer;J)I a
	getLightBlockInto (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;I)I a
	getLightValue (Lnet/minecraft/core/BlockPos;)I b
	getShape (Lnet/minecraft/world/level/block/state/BlockState;JLnet/minecraft/core/Direction;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	getStateAndOpacity (JLorg/apache/commons/lang3/mutable/MutableInt;)Lnet/minecraft/world/level/block/state/BlockState; a
	hasLightWork ()Z a
	isSource (J)Z a
	onBlockEmissionIncrease (Lnet/minecraft/core/BlockPos;I)V a
	queueSectionData (JLnet/minecraft/world/level/chunk/DataLayer;Z)V a
	retainData (Lnet/minecraft/world/level/ChunkPos;Z)V b
	runUpdates (IZZ)I a
	setLevel (JI)V a
	updateSectionStatus (Lnet/minecraft/core/SectionPos;Z)V a
net/minecraft/world/level/lighting/LayerLightEventListener cuj
	getDataLayerData (Lnet/minecraft/core/SectionPos;)Lnet/minecraft/world/level/chunk/DataLayer; a
	getLightValue (Lnet/minecraft/core/BlockPos;)I b
net/minecraft/world/level/lighting/LayerLightEventListener$DummyLightLayerEventListener cuj$a
	$VALUES b
	INSTANCE a
	checkBlock (Lnet/minecraft/core/BlockPos;)V a
	enableLightSources (Lnet/minecraft/world/level/ChunkPos;Z)V a
	getDataLayerData (Lnet/minecraft/core/SectionPos;)Lnet/minecraft/world/level/chunk/DataLayer; a
	getLightValue (Lnet/minecraft/core/BlockPos;)I b
	hasLightWork ()Z a
	onBlockEmissionIncrease (Lnet/minecraft/core/BlockPos;I)V a
	runUpdates (IZZ)I a
	updateSectionStatus (Lnet/minecraft/core/SectionPos;Z)V a
net/minecraft/world/level/lighting/LayerLightSectionStorage cuk
	DIRECTIONS k
	EMPTY_DATA a
	changedSections g
	chunkSource m
	columnsToRetainQueuedDataFor o
	dataSectionSet b
	hasToRemove j
	layer l
	queuedSections i
	sectionsAffectedByLightUpdates h
	toMarkData d
	toMarkNoData c
	toRemove p
	untrustedSections n
	updatingSectionData f
	visibleSectionData e
	checkEdgesForSection (Lnet/minecraft/world/level/lighting/LayerLightEngine;J)V b
	clearQueuedSectionBlocks (Lnet/minecraft/world/level/lighting/LayerLightEngine;J)V a
	createDataLayer (J)Lnet/minecraft/world/level/chunk/DataLayer; j
	enableLightSources (JZ)V b
	getDataLayer (JZ)Lnet/minecraft/world/level/chunk/DataLayer; a
	getDataLayer (Lnet/minecraft/world/level/lighting/DataLayerStorageMap;J)Lnet/minecraft/world/level/chunk/DataLayer; a
	getDataLayerData (J)Lnet/minecraft/world/level/chunk/DataLayer; h
	getLevel (J)I c
	getLevelFromSource (J)I b
	getLightValue (J)I d
	getStoredLevel (J)I i
	hasInconsistencies ()Z a
	markNewInconsistencies (Lnet/minecraft/world/level/lighting/LayerLightEngine;ZZ)V a
	onNodeAdded (J)V k
	onNodeRemoved (J)V l
	queueSectionData (JLnet/minecraft/world/level/chunk/DataLayer;Z)V a
	retainData (JZ)V c
	runAllUpdates ()V d
	setLevel (JI)V a
	setStoredLevel (JI)V b
	storingLightForSection (J)Z g
	swapSectionMap ()V e
	updateSectionStatus (JZ)V d
net/minecraft/world/level/lighting/LevelLightEngine cul
	blockEngine a
	skyEngine b
	checkBlock (Lnet/minecraft/core/BlockPos;)V a
	enableLightSources (Lnet/minecraft/world/level/ChunkPos;Z)V a
	getDebugData (Lnet/minecraft/world/level/LightLayer;Lnet/minecraft/core/SectionPos;)Ljava/lang/String; a
	getLayerListener (Lnet/minecraft/world/level/LightLayer;)Lnet/minecraft/world/level/lighting/LayerLightEventListener; a
	getRawBrightness (Lnet/minecraft/core/BlockPos;I)I b
	hasLightWork ()Z a
	onBlockEmissionIncrease (Lnet/minecraft/core/BlockPos;I)V a
	queueSectionData (Lnet/minecraft/world/level/LightLayer;Lnet/minecraft/core/SectionPos;Lnet/minecraft/world/level/chunk/DataLayer;Z)V a
	retainData (Lnet/minecraft/world/level/ChunkPos;Z)V b
	runUpdates (IZZ)I a
	updateSectionStatus (Lnet/minecraft/core/SectionPos;Z)V a
net/minecraft/world/level/lighting/LightEventListener cum
	checkBlock (Lnet/minecraft/core/BlockPos;)V a
	enableLightSources (Lnet/minecraft/world/level/ChunkPos;Z)V a
	hasLightWork ()Z a
	onBlockEmissionIncrease (Lnet/minecraft/core/BlockPos;I)V a
	runUpdates (IZZ)I a
	updateSectionStatus (Lnet/minecraft/core/BlockPos;Z)V a
	updateSectionStatus (Lnet/minecraft/core/SectionPos;Z)V a
net/minecraft/world/level/lighting/SkyLightEngine cun
	DIRECTIONS e
	HORIZONTALS f
	checkNeighborsAfterUpdate (JIZ)V a
	checkNode (J)V f
	computeLevelFromNeighbor (JJI)I b
	getComputedLevel (JJI)I a
	getDebugData (J)Ljava/lang/String; b
net/minecraft/world/level/lighting/SkyLightSectionStorage cuo
	HORIZONTALS k
	columnsWithSkySources o
	hasSourceInconsistencies p
	sectionsToAddSourcesTo m
	sectionsToRemoveSourcesFrom n
	sectionsWithSources l
	createDataLayer (J)Lnet/minecraft/world/level/chunk/DataLayer; j
	enableLightSources (JZ)V b
	getLightValue (J)I d
	hasInconsistencies ()Z a
	hasLightSource (J)Z m
	hasSectionsBelow (I)Z a
	isAboveData (J)Z n
	lightOnInSection (J)Z o
	markNewInconsistencies (Lnet/minecraft/world/level/lighting/LayerLightEngine;ZZ)V a
	onNodeAdded (J)V k
	onNodeRemoved (J)V l
	queueAddSource (J)V q
	queueRemoveSource (J)V p
	recheckInconsistencyFlag ()V f
net/minecraft/world/level/lighting/SkyLightSectionStorage$SkyDataLayerStorageMap cuo$a
	currentLowestY b
	topSections c
	copy ()Lnet/minecraft/world/level/lighting/DataLayerStorageMap; b
	copy ()Lnet/minecraft/world/level/lighting/SkyLightSectionStorage$SkyDataLayerStorageMap; a
net/minecraft/world/level/lighting/SpatialLongSet cup
	map a
net/minecraft/world/level/lighting/SpatialLongSet$InternalMap cup$a
	OUTER_MASK g
	X_BITS a
	X_OFFSET e
	Y_BITS c
	Z_BITS b
	Z_OFFSET d
	lastOuterKey i
	lastPos h
	minSize j
	addBit (J)Z c
	getFullKey (JI)J a
	getInnerKey (J)I b
	getOuterKey (J)J a
	removeBit (J)Z d
	removeFirstBit ()J a
	removeFromEntry (IJ)Z b
	removeFromNullEntry (J)Z e
	replaceBit (IJ)Z a
net/minecraft/world/level/material/EmptyFluid cur
	canBeReplacedWith (Lnet/minecraft/world/level/material/FluidState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/material/Fluid;Lnet/minecraft/core/Direction;)Z a
	createLegacyBlock (Lnet/minecraft/world/level/material/FluidState;)Lnet/minecraft/world/level/block/state/BlockState; b
	getAmount (Lnet/minecraft/world/level/material/FluidState;)I d
	getBucket ()Lnet/minecraft/world/item/Item; a
	getExplosionResistance ()F c
	getFlow (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/material/FluidState;)Lnet/minecraft/world/phys/Vec3; a
	getHeight (Lnet/minecraft/world/level/material/FluidState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)F a
	getOwnHeight (Lnet/minecraft/world/level/material/FluidState;)F a
	getShape (Lnet/minecraft/world/level/material/FluidState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/phys/shapes/VoxelShape; b
	getTickDelay (Lnet/minecraft/world/level/LevelReader;)I a
	isEmpty ()Z b
	isSource (Lnet/minecraft/world/level/material/FluidState;)Z c
net/minecraft/world/level/material/FlowingFluid cus
	FALLING a
	LEVEL b
	OCCLUSION_CACHE e
	shapes f
	affectsFlow (Lnet/minecraft/world/level/material/FluidState;)Z g
	beforeDestroyingBlock (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V a
	canConvertToSource ()Z f
	canHoldFluid (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/material/Fluid;)Z a
	canPassThrough (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/world/level/material/Fluid;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/material/FluidState;)Z a
	canPassThroughWall (Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Z a
	canSpreadTo (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/material/FluidState;Lnet/minecraft/world/level/material/Fluid;)Z a
	createFluidStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getAmount (Lnet/minecraft/world/level/material/FluidState;)I d
	getCacheKey (Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)S a
	getDropOff (Lnet/minecraft/world/level/LevelReader;)I c
	getFlow (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/material/FluidState;)Lnet/minecraft/world/phys/Vec3; a
	getFlowing ()Lnet/minecraft/world/level/material/Fluid; d
	getFlowing (IZ)Lnet/minecraft/world/level/material/FluidState; a
	getHeight (Lnet/minecraft/world/level/material/FluidState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)F a
	getLegacyLevel (Lnet/minecraft/world/level/material/FluidState;)I e
	getNewLiquid (Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/material/FluidState; a
	getOwnHeight (Lnet/minecraft/world/level/material/FluidState;)F a
	getShape (Lnet/minecraft/world/level/material/FluidState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/phys/shapes/VoxelShape; b
	getSlopeDistance (Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;ILnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/BlockPos;Lit/unimi/dsi/fastutil/shorts/Short2ObjectMap;Lit/unimi/dsi/fastutil/shorts/Short2BooleanMap;)I a
	getSlopeFindDistance (Lnet/minecraft/world/level/LevelReader;)I b
	getSource ()Lnet/minecraft/world/level/material/Fluid; e
	getSource (Z)Lnet/minecraft/world/level/material/FluidState; a
	getSpread (Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Ljava/util/Map; b
	getSpreadDelay (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/material/FluidState;Lnet/minecraft/world/level/material/FluidState;)I a
	hasSameAbove (Lnet/minecraft/world/level/material/FluidState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Z c
	isSolidFace (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;)Z a
	isSourceBlockOfThisType (Lnet/minecraft/world/level/material/FluidState;)Z h
	isWaterHole (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/world/level/material/Fluid;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Z a
	sourceNeighborCount (Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;)I a
	spread (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/material/FluidState;)V a
	spreadTo (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/material/FluidState;)V a
	spreadToSides (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/material/FluidState;Lnet/minecraft/world/level/block/state/BlockState;)V a
	tick (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/material/FluidState;)V a
net/minecraft/world/level/material/Fluid cut
	FLUID_STATE_REGISTRY c
	defaultFluidState a
	stateDefinition d
	animateTick (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/material/FluidState;Ljava/util/Random;)V a
	canBeReplacedWith (Lnet/minecraft/world/level/material/FluidState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/material/Fluid;Lnet/minecraft/core/Direction;)Z a
	createFluidStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	createLegacyBlock (Lnet/minecraft/world/level/material/FluidState;)Lnet/minecraft/world/level/block/state/BlockState; b
	defaultFluidState ()Lnet/minecraft/world/level/material/FluidState; h
	getAmount (Lnet/minecraft/world/level/material/FluidState;)I d
	getBucket ()Lnet/minecraft/world/item/Item; a
	getDripParticle ()Lnet/minecraft/core/particles/ParticleOptions; i
	getExplosionResistance ()F c
	getFlow (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/material/FluidState;)Lnet/minecraft/world/phys/Vec3; a
	getHeight (Lnet/minecraft/world/level/material/FluidState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)F a
	getOwnHeight (Lnet/minecraft/world/level/material/FluidState;)F a
	getShape (Lnet/minecraft/world/level/material/FluidState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/phys/shapes/VoxelShape; b
	getStateDefinition ()Lnet/minecraft/world/level/block/state/StateDefinition; g
	getTickDelay (Lnet/minecraft/world/level/LevelReader;)I a
	is (Lnet/minecraft/tags/Tag;)Z a
	isEmpty ()Z b
	isRandomlyTicking ()Z j
	isSame (Lnet/minecraft/world/level/material/Fluid;)Z a
	isSource (Lnet/minecraft/world/level/material/FluidState;)Z c
	randomTick (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/material/FluidState;Ljava/util/Random;)V b
	registerDefaultState (Lnet/minecraft/world/level/material/FluidState;)V f
	tick (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/material/FluidState;)V a
net/minecraft/world/level/material/FluidState cuu
	CODEC a
	animateTick (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)V a
	canBeReplacedWith (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/material/Fluid;Lnet/minecraft/core/Direction;)Z a
	createLegacyBlock ()Lnet/minecraft/world/level/block/state/BlockState; g
	getAmount ()I e
	getDripParticle ()Lnet/minecraft/core/particles/ParticleOptions; h
	getExplosionResistance ()F i
	getFlow (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/phys/Vec3; c
	getHeight (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)F a
	getOwnHeight ()F d
	getShape (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/phys/shapes/VoxelShape; d
	getType ()Lnet/minecraft/world/level/material/Fluid; a
	is (Lnet/minecraft/tags/Tag;)Z a
	isEmpty ()Z c
	isRandomlyTicking ()Z f
	isSource ()Z b
	randomTick (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Ljava/util/Random;)V b
	shouldRenderBackwardUpFace (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Z b
	tick (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)V a
net/minecraft/world/level/material/Fluids cuv
	EMPTY a
	FLOWING_LAVA d
	FLOWING_WATER b
	LAVA e
	WATER c
	register (Ljava/lang/String;Lnet/minecraft/world/level/material/Fluid;)Lnet/minecraft/world/level/material/Fluid; a
net/minecraft/world/level/material/LavaFluid cuw
	animateTick (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/material/FluidState;Ljava/util/Random;)V a
	beforeDestroyingBlock (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V a
	canBeReplacedWith (Lnet/minecraft/world/level/material/FluidState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/material/Fluid;Lnet/minecraft/core/Direction;)Z a
	canConvertToSource ()Z f
	createLegacyBlock (Lnet/minecraft/world/level/material/FluidState;)Lnet/minecraft/world/level/block/state/BlockState; b
	fizz (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;)V a
	getBucket ()Lnet/minecraft/world/item/Item; a
	getDripParticle ()Lnet/minecraft/core/particles/ParticleOptions; i
	getDropOff (Lnet/minecraft/world/level/LevelReader;)I c
	getExplosionResistance ()F c
	getFlowing ()Lnet/minecraft/world/level/material/Fluid; d
	getSlopeFindDistance (Lnet/minecraft/world/level/LevelReader;)I b
	getSource ()Lnet/minecraft/world/level/material/Fluid; e
	getSpreadDelay (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/material/FluidState;Lnet/minecraft/world/level/material/FluidState;)I a
	getTickDelay (Lnet/minecraft/world/level/LevelReader;)I a
	hasFlammableNeighbours (Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;)Z a
	isFlammable (Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;)Z b
	isRandomlyTicking ()Z j
	isSame (Lnet/minecraft/world/level/material/Fluid;)Z a
	randomTick (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/material/FluidState;Ljava/util/Random;)V b
	spreadTo (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/material/FluidState;)V a
net/minecraft/world/level/material/LavaFluid$Flowing cuw$a
	createFluidStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getAmount (Lnet/minecraft/world/level/material/FluidState;)I d
	isSource (Lnet/minecraft/world/level/material/FluidState;)Z c
net/minecraft/world/level/material/LavaFluid$Source cuw$b
	getAmount (Lnet/minecraft/world/level/material/FluidState;)I d
	isSource (Lnet/minecraft/world/level/material/FluidState;)Z c
net/minecraft/world/level/material/Material cux
	AIR a
	BAMBOO B
	BAMBOO_SAPLING A
	BARRIER M
	BUBBLE_COLUMN k
	BUILDABLE_GLASS q
	CACTUS H
	CAKE R
	CLAY r
	CLOTH_DECORATION d
	CORAL O
	DECORATION o
	DIRT s
	EGG Q
	EXPLOSIVE D
	FIRE n
	GLASS F
	GRASS t
	HEAVY_METAL L
	ICE G
	ICE_SOLID u
	LAVA l
	LEAVES E
	METAL J
	NETHER_WOOD z
	PISTON N
	PLANT e
	PORTAL c
	REPLACEABLE_FIREPROOF_PLANT h
	REPLACEABLE_PLANT g
	REPLACEABLE_WATER_PLANT i
	SAND v
	SHULKER_SHELL x
	SNOW K
	SPONGE w
	STONE I
	STRUCTURAL_AIR b
	TOP_SNOW m
	VEGETABLE P
	WATER j
	WATER_PLANT f
	WEB p
	WOOD y
	WOOL C
	blocksMotion U
	color S
	flammable V
	liquid W
	pushReaction T
	replaceable Y
	solid Z
	solidBlocking X
	blocksMotion ()Z c
	getColor ()Lnet/minecraft/world/level/material/MaterialColor; h
	getPushReaction ()Lnet/minecraft/world/level/material/PushReaction; g
	isFlammable ()Z d
	isLiquid ()Z a
	isReplaceable ()Z e
	isSolid ()Z b
	isSolidBlocking ()Z f
net/minecraft/world/level/material/Material$Builder cux$a
	blocksMotion b
	color g
	flammable c
	liquid d
	pushReaction a
	replaceable e
	solid f
	solidBlocking h
	build ()Lnet/minecraft/world/level/material/Material; h
	destroyOnPush ()Lnet/minecraft/world/level/material/Material$Builder; f
	flammable ()Lnet/minecraft/world/level/material/Material$Builder; d
	liquid ()Lnet/minecraft/world/level/material/Material$Builder; a
	noCollider ()Lnet/minecraft/world/level/material/Material$Builder; c
	nonSolid ()Lnet/minecraft/world/level/material/Material$Builder; b
	notPushable ()Lnet/minecraft/world/level/material/Material$Builder; g
	notSolidBlocking ()Lnet/minecraft/world/level/material/Material$Builder; i
	replaceable ()Lnet/minecraft/world/level/material/Material$Builder; e
net/minecraft/world/level/material/MaterialColor cuy
	CLAY k
	COLOR_BLACK E
	COLOR_BLUE A
	COLOR_BROWN B
	COLOR_CYAN y
	COLOR_GRAY w
	COLOR_GREEN C
	COLOR_LIGHT_BLUE s
	COLOR_LIGHT_GRAY x
	COLOR_LIGHT_GREEN u
	COLOR_MAGENTA r
	COLOR_ORANGE q
	COLOR_PINK v
	COLOR_PURPLE z
	COLOR_RED D
	COLOR_YELLOW t
	CRIMSON_HYPHAE ad
	CRIMSON_NYLIUM ab
	CRIMSON_STEM ac
	DIAMOND G
	DIRT l
	EMERALD I
	FIRE f
	GOLD F
	GRASS c
	ICE g
	LAPIS H
	MATERIAL_COLORS a
	METAL h
	NETHER K
	NONE b
	PLANT i
	PODZOL J
	QUARTZ p
	SAND d
	SNOW j
	STONE m
	TERRACOTTA_BLACK aa
	TERRACOTTA_BLUE W
	TERRACOTTA_BROWN X
	TERRACOTTA_CYAN U
	TERRACOTTA_GRAY S
	TERRACOTTA_GREEN Y
	TERRACOTTA_LIGHT_BLUE O
	TERRACOTTA_LIGHT_GRAY T
	TERRACOTTA_LIGHT_GREEN Q
	TERRACOTTA_MAGENTA N
	TERRACOTTA_ORANGE M
	TERRACOTTA_PINK R
	TERRACOTTA_PURPLE V
	TERRACOTTA_RED Z
	TERRACOTTA_WHITE L
	TERRACOTTA_YELLOW P
	WARPED_HYPHAE ag
	WARPED_NYLIUM ae
	WARPED_STEM af
	WARPED_WART_BLOCK ah
	WATER n
	WOOD o
	WOOL e
	col ai
	id aj
	calculateRGBColor (I)I a
net/minecraft/world/level/material/PushReaction cuz
	$VALUES f
	BLOCK c
	DESTROY b
	IGNORE d
	NORMAL a
	PUSH_ONLY e
net/minecraft/world/level/material/WaterFluid cva
	animateTick (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/material/FluidState;Ljava/util/Random;)V a
	beforeDestroyingBlock (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V a
	canBeReplacedWith (Lnet/minecraft/world/level/material/FluidState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/material/Fluid;Lnet/minecraft/core/Direction;)Z a
	canConvertToSource ()Z f
	createLegacyBlock (Lnet/minecraft/world/level/material/FluidState;)Lnet/minecraft/world/level/block/state/BlockState; b
	getBucket ()Lnet/minecraft/world/item/Item; a
	getDripParticle ()Lnet/minecraft/core/particles/ParticleOptions; i
	getDropOff (Lnet/minecraft/world/level/LevelReader;)I c
	getExplosionResistance ()F c
	getFlowing ()Lnet/minecraft/world/level/material/Fluid; d
	getSlopeFindDistance (Lnet/minecraft/world/level/LevelReader;)I b
	getSource ()Lnet/minecraft/world/level/material/Fluid; e
	getTickDelay (Lnet/minecraft/world/level/LevelReader;)I a
	isSame (Lnet/minecraft/world/level/material/Fluid;)Z a
net/minecraft/world/level/material/WaterFluid$Flowing cva$a
	createFluidStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getAmount (Lnet/minecraft/world/level/material/FluidState;)I d
	isSource (Lnet/minecraft/world/level/material/FluidState;)Z c
net/minecraft/world/level/material/WaterFluid$Source cva$b
	getAmount (Lnet/minecraft/world/level/material/FluidState;)I d
	isSource (Lnet/minecraft/world/level/material/FluidState;)Z c
net/minecraft/world/level/newbiome/area/Area cvc
	get (II)I a
net/minecraft/world/level/newbiome/area/AreaFactory cvd
net/minecraft/world/level/newbiome/area/LazyArea cve
	cache b
	maxCache c
	transformer a
	get (II)I a
	getMaxCache ()I a
net/minecraft/world/level/newbiome/context/BigContext cvg
	createResult (Lnet/minecraft/world/level/newbiome/layer/traits/PixelTransformer;)Lnet/minecraft/world/level/newbiome/area/Area; a
	createResult (Lnet/minecraft/world/level/newbiome/layer/traits/PixelTransformer;Lnet/minecraft/world/level/newbiome/area/Area;)Lnet/minecraft/world/level/newbiome/area/Area; a
	createResult (Lnet/minecraft/world/level/newbiome/layer/traits/PixelTransformer;Lnet/minecraft/world/level/newbiome/area/Area;Lnet/minecraft/world/level/newbiome/area/Area;)Lnet/minecraft/world/level/newbiome/area/Area; a
	getMixedSeed ()J a
	initRandom (JJ)V a
	random (II)I a
	random (IIII)I a
net/minecraft/world/level/newbiome/context/Context cvh
	getBiomeNoise ()Lnet/minecraft/world/level/levelgen/synth/ImprovedNoise; b
	nextRandom (I)I a
net/minecraft/world/level/newbiome/context/LazyAreaContext cvi
	biomeNoise c
	cache a
	maxCache b
	rval e
	seed d
	createResult (Lnet/minecraft/world/level/newbiome/layer/traits/PixelTransformer;)Lnet/minecraft/world/level/newbiome/area/Area; a
	createResult (Lnet/minecraft/world/level/newbiome/layer/traits/PixelTransformer;)Lnet/minecraft/world/level/newbiome/area/LazyArea; b
	createResult (Lnet/minecraft/world/level/newbiome/layer/traits/PixelTransformer;Lnet/minecraft/world/level/newbiome/area/Area;)Lnet/minecraft/world/level/newbiome/area/Area; a
	createResult (Lnet/minecraft/world/level/newbiome/layer/traits/PixelTransformer;Lnet/minecraft/world/level/newbiome/area/Area;Lnet/minecraft/world/level/newbiome/area/Area;)Lnet/minecraft/world/level/newbiome/area/Area; a
	createResult (Lnet/minecraft/world/level/newbiome/layer/traits/PixelTransformer;Lnet/minecraft/world/level/newbiome/area/LazyArea;)Lnet/minecraft/world/level/newbiome/area/LazyArea; a
	createResult (Lnet/minecraft/world/level/newbiome/layer/traits/PixelTransformer;Lnet/minecraft/world/level/newbiome/area/LazyArea;Lnet/minecraft/world/level/newbiome/area/LazyArea;)Lnet/minecraft/world/level/newbiome/area/LazyArea; a
	getBiomeNoise ()Lnet/minecraft/world/level/levelgen/synth/ImprovedNoise; b
	getMixedSeed ()J a
	initRandom (JJ)V a
	mixSeed (JJ)J b
	nextRandom (I)I a
net/minecraft/world/level/newbiome/layer/AddDeepOceanLayer cvk
	$VALUES b
	INSTANCE a
	apply (Lnet/minecraft/world/level/newbiome/context/Context;IIIII)I a
net/minecraft/world/level/newbiome/layer/AddEdgeLayer cvl
net/minecraft/world/level/newbiome/layer/AddEdgeLayer$CoolWarm cvl$a
	$VALUES b
	INSTANCE a
	apply (Lnet/minecraft/world/level/newbiome/context/Context;IIIII)I a
net/minecraft/world/level/newbiome/layer/AddEdgeLayer$HeatIce cvl$b
	$VALUES b
	INSTANCE a
	apply (Lnet/minecraft/world/level/newbiome/context/Context;IIIII)I a
net/minecraft/world/level/newbiome/layer/AddEdgeLayer$IntroduceSpecial cvl$c
	$VALUES b
	INSTANCE a
	apply (Lnet/minecraft/world/level/newbiome/context/Context;I)I a
net/minecraft/world/level/newbiome/layer/AddIslandLayer cvm
	$VALUES b
	INSTANCE a
	apply (Lnet/minecraft/world/level/newbiome/context/Context;IIIII)I a
net/minecraft/world/level/newbiome/layer/AddMushroomIslandLayer cvn
	$VALUES b
	INSTANCE a
	apply (Lnet/minecraft/world/level/newbiome/context/Context;IIIII)I a
net/minecraft/world/level/newbiome/layer/AddSnowLayer cvo
	$VALUES b
	INSTANCE a
	apply (Lnet/minecraft/world/level/newbiome/context/Context;I)I a
net/minecraft/world/level/newbiome/layer/BiomeEdgeLayer cvp
	$VALUES b
	INSTANCE a
	apply (Lnet/minecraft/world/level/newbiome/context/Context;IIIII)I a
	checkEdge ([II)Z a
	checkEdgeStrict ([IIIIIIII)Z a
net/minecraft/world/level/newbiome/layer/BiomeInitLayer cvq
	COLD_BIOMES d
	ICE_BIOMES e
	LEGACY_WARM_BIOMES a
	MEDIUM_BIOMES c
	WARM_BIOMES b
	warmBiomes f
	apply (Lnet/minecraft/world/level/newbiome/context/Context;I)I a
net/minecraft/world/level/newbiome/layer/IslandLayer cvr
	$VALUES b
	INSTANCE a
	applyPixel (Lnet/minecraft/world/level/newbiome/context/Context;II)I a
net/minecraft/world/level/newbiome/layer/Layer cvs
	LOGGER a
	area b
	get (Lnet/minecraft/core/Registry;II)Lnet/minecraft/world/level/biome/Biome; a
net/minecraft/world/level/newbiome/layer/LayerBiomes cvt
net/minecraft/world/level/newbiome/layer/Layers cvu
	CATEGORIES a
	getDefaultLayer (JZII)Lnet/minecraft/world/level/newbiome/layer/Layer; a
	getDefaultLayer (ZIILjava/util/function/LongFunction;)Lnet/minecraft/world/level/newbiome/area/AreaFactory; a
	isOcean (I)Z a
	isSame (II)Z a
	isShallowOcean (I)Z b
	register (Lit/unimi/dsi/fastutil/ints/Int2IntOpenHashMap;Lnet/minecraft/world/level/newbiome/layer/Layers$Category;I)V a
	zoom (JLnet/minecraft/world/level/newbiome/layer/traits/AreaTransformer1;Lnet/minecraft/world/level/newbiome/area/AreaFactory;ILjava/util/function/LongFunction;)Lnet/minecraft/world/level/newbiome/area/AreaFactory; a
net/minecraft/world/level/newbiome/layer/Layers$Category cvu$a
	$VALUES q
	BADLANDS_PLATEAU f
	BEACH j
	DESERT m
	EXTREME_HILLS c
	FOREST k
	ICY i
	JUNGLE d
	MESA e
	MUSHROOM p
	NONE a
	OCEAN l
	PLAINS g
	RIVER n
	SAVANNA h
	SWAMP o
	TAIGA b
net/minecraft/world/level/newbiome/layer/OceanLayer cvv
	$VALUES b
	INSTANCE a
	applyPixel (Lnet/minecraft/world/level/newbiome/context/Context;II)I a
net/minecraft/world/level/newbiome/layer/OceanMixerLayer cvw
	$VALUES b
	INSTANCE a
	applyPixel (Lnet/minecraft/world/level/newbiome/context/Context;Lnet/minecraft/world/level/newbiome/area/Area;Lnet/minecraft/world/level/newbiome/area/Area;II)I a
net/minecraft/world/level/newbiome/layer/RareBiomeLargeLayer cvx
	$VALUES b
	INSTANCE a
	apply (Lnet/minecraft/world/level/newbiome/context/Context;I)I a
net/minecraft/world/level/newbiome/layer/RareBiomeSpotLayer cvy
	$VALUES b
	INSTANCE a
	apply (Lnet/minecraft/world/level/newbiome/context/Context;I)I a
net/minecraft/world/level/newbiome/layer/RegionHillsLayer cvz
	$VALUES d
	INSTANCE a
	LOGGER b
	MUTATIONS c
	applyPixel (Lnet/minecraft/world/level/newbiome/context/Context;Lnet/minecraft/world/level/newbiome/area/Area;Lnet/minecraft/world/level/newbiome/area/Area;II)I a
net/minecraft/world/level/newbiome/layer/RemoveTooMuchOceanLayer cwa
	$VALUES b
	INSTANCE a
	apply (Lnet/minecraft/world/level/newbiome/context/Context;IIIII)I a
net/minecraft/world/level/newbiome/layer/RiverInitLayer cwb
	$VALUES b
	INSTANCE a
	apply (Lnet/minecraft/world/level/newbiome/context/Context;I)I a
net/minecraft/world/level/newbiome/layer/RiverLayer cwc
	$VALUES b
	INSTANCE a
	apply (Lnet/minecraft/world/level/newbiome/context/Context;IIIII)I a
	riverFilter (I)I c
net/minecraft/world/level/newbiome/layer/RiverMixerLayer cwd
	$VALUES b
	INSTANCE a
	applyPixel (Lnet/minecraft/world/level/newbiome/context/Context;Lnet/minecraft/world/level/newbiome/area/Area;Lnet/minecraft/world/level/newbiome/area/Area;II)I a
net/minecraft/world/level/newbiome/layer/ShoreLayer cwe
	$VALUES d
	INSTANCE a
	JUNGLES c
	SNOWY b
	apply (Lnet/minecraft/world/level/newbiome/context/Context;IIIII)I a
	isJungleCompatible (I)Z c
	isMesa (I)Z d
net/minecraft/world/level/newbiome/layer/SmoothLayer cwf
	$VALUES b
	INSTANCE a
	apply (Lnet/minecraft/world/level/newbiome/context/Context;IIIII)I a
net/minecraft/world/level/newbiome/layer/ZoomLayer cwg
	$VALUES c
	FUZZY b
	NORMAL a
	applyPixel (Lnet/minecraft/world/level/newbiome/context/BigContext;Lnet/minecraft/world/level/newbiome/area/Area;II)I a
	getParentX (I)I a
	getParentY (I)I b
	modeOrRandom (Lnet/minecraft/world/level/newbiome/context/BigContext;IIII)I a
net/minecraft/world/level/newbiome/layer/traits/AreaTransformer0 cwi
	applyPixel (Lnet/minecraft/world/level/newbiome/context/Context;II)I a
	run (Lnet/minecraft/world/level/newbiome/context/BigContext;)Lnet/minecraft/world/level/newbiome/area/AreaFactory; a
net/minecraft/world/level/newbiome/layer/traits/AreaTransformer1 cwj
	applyPixel (Lnet/minecraft/world/level/newbiome/context/BigContext;Lnet/minecraft/world/level/newbiome/area/Area;II)I a
	run (Lnet/minecraft/world/level/newbiome/context/BigContext;Lnet/minecraft/world/level/newbiome/area/AreaFactory;)Lnet/minecraft/world/level/newbiome/area/AreaFactory; a
net/minecraft/world/level/newbiome/layer/traits/AreaTransformer2 cwk
	applyPixel (Lnet/minecraft/world/level/newbiome/context/Context;Lnet/minecraft/world/level/newbiome/area/Area;Lnet/minecraft/world/level/newbiome/area/Area;II)I a
	run (Lnet/minecraft/world/level/newbiome/context/BigContext;Lnet/minecraft/world/level/newbiome/area/AreaFactory;Lnet/minecraft/world/level/newbiome/area/AreaFactory;)Lnet/minecraft/world/level/newbiome/area/AreaFactory; a
net/minecraft/world/level/newbiome/layer/traits/BishopTransformer cwl
	apply (Lnet/minecraft/world/level/newbiome/context/Context;IIIII)I a
	applyPixel (Lnet/minecraft/world/level/newbiome/context/BigContext;Lnet/minecraft/world/level/newbiome/area/Area;II)I a
net/minecraft/world/level/newbiome/layer/traits/C0Transformer cwm
	apply (Lnet/minecraft/world/level/newbiome/context/Context;I)I a
	applyPixel (Lnet/minecraft/world/level/newbiome/context/BigContext;Lnet/minecraft/world/level/newbiome/area/Area;II)I a
net/minecraft/world/level/newbiome/layer/traits/C1Transformer cwn
	apply (Lnet/minecraft/world/level/newbiome/context/Context;I)I a
	applyPixel (Lnet/minecraft/world/level/newbiome/context/BigContext;Lnet/minecraft/world/level/newbiome/area/Area;II)I a
net/minecraft/world/level/newbiome/layer/traits/CastleTransformer cwo
	apply (Lnet/minecraft/world/level/newbiome/context/Context;IIIII)I a
	applyPixel (Lnet/minecraft/world/level/newbiome/context/BigContext;Lnet/minecraft/world/level/newbiome/area/Area;II)I a
net/minecraft/world/level/newbiome/layer/traits/DimensionOffset0Transformer cwp
	getParentX (I)I a
	getParentY (I)I b
net/minecraft/world/level/newbiome/layer/traits/DimensionOffset1Transformer cwq
	getParentX (I)I a
	getParentY (I)I b
net/minecraft/world/level/newbiome/layer/traits/DimensionTransformer cwr
	getParentX (I)I a
	getParentY (I)I b
net/minecraft/world/level/newbiome/layer/traits/PixelTransformer cws
net/minecraft/world/level/pathfinder/BinaryHeap cwv
	heap a
	size b
	changeCost (Lnet/minecraft/world/level/pathfinder/Node;F)V a
	clear ()V a
	downHeap (I)V b
	getHeap ()[Lnet/minecraft/world/level/pathfinder/Node; f
	insert (Lnet/minecraft/world/level/pathfinder/Node;)Lnet/minecraft/world/level/pathfinder/Node; a
	isEmpty ()Z e
	peek ()Lnet/minecraft/world/level/pathfinder/Node; b
	pop ()Lnet/minecraft/world/level/pathfinder/Node; c
	remove (Lnet/minecraft/world/level/pathfinder/Node;)V b
	size ()I d
	upHeap (I)V a
net/minecraft/world/level/pathfinder/BlockPathTypes cww
	$VALUES z
	BLOCKED a
	BREACH u
	COCOA x
	DAMAGE_CACTUS o
	DAMAGE_FIRE m
	DAMAGE_OTHER q
	DANGER_CACTUS n
	DANGER_FIRE l
	DANGER_OTHER p
	DOOR_IRON_CLOSED t
	DOOR_OPEN r
	DOOR_WOOD_CLOSED s
	FENCE f
	LAVA g
	LEAVES v
	OPEN b
	RAIL j
	STICKY_HONEY w
	TRAPDOOR e
	UNPASSABLE_RAIL k
	WALKABLE c
	WALKABLE_DOOR d
	WATER h
	WATER_BORDER i
	malus y
	getMalus ()F a
net/minecraft/world/level/pathfinder/FlyNodeEvaluator cwx
	done ()V a
	getBlockPathType (Lnet/minecraft/world/entity/Mob;III)Lnet/minecraft/world/level/pathfinder/BlockPathTypes; a
	getBlockPathType (Lnet/minecraft/world/entity/Mob;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/pathfinder/BlockPathTypes; a
	getBlockPathType (Lnet/minecraft/world/level/BlockGetter;III)Lnet/minecraft/world/level/pathfinder/BlockPathTypes; a
	getBlockPathType (Lnet/minecraft/world/level/BlockGetter;IIILnet/minecraft/world/entity/Mob;IIIZZ)Lnet/minecraft/world/level/pathfinder/BlockPathTypes; a
	getGoal (DDD)Lnet/minecraft/world/level/pathfinder/Target; a
	getNeighbors ([Lnet/minecraft/world/level/pathfinder/Node;Lnet/minecraft/world/level/pathfinder/Node;)I a
	getNode (III)Lnet/minecraft/world/level/pathfinder/Node; a
	getStart ()Lnet/minecraft/world/level/pathfinder/Node; b
	hasMalus (Lnet/minecraft/world/level/pathfinder/Node;)Z a
	isOpen (Lnet/minecraft/world/level/pathfinder/Node;)Z b
	prepare (Lnet/minecraft/world/level/PathNavigationRegion;Lnet/minecraft/world/entity/Mob;)V a
net/minecraft/world/level/pathfinder/Node cwy
	cameFrom h
	closed i
	costMalus k
	f g
	g e
	h f
	hash m
	heapIdx d
	type l
	walkedDistance j
	x a
	y b
	z c
	asBlockPos ()Lnet/minecraft/core/BlockPos; a
	asVec3 ()Lnet/minecraft/world/phys/Vec3; b
	cloneAndMove (III)Lnet/minecraft/world/level/pathfinder/Node; a
	createFromStream (Lnet/minecraft/network/FriendlyByteBuf;)Lnet/minecraft/world/level/pathfinder/Node; b
	createHash (III)I b
	distanceManhattan (Lnet/minecraft/core/BlockPos;)F c
	distanceManhattan (Lnet/minecraft/world/level/pathfinder/Node;)F c
	distanceTo (Lnet/minecraft/core/BlockPos;)F a
	distanceTo (Lnet/minecraft/world/level/pathfinder/Node;)F a
	distanceToSqr (Lnet/minecraft/core/BlockPos;)F b
	distanceToSqr (Lnet/minecraft/world/level/pathfinder/Node;)F b
	inOpenSet ()Z c
	writeToStream (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/world/level/pathfinder/NodeEvaluator cwz
	canFloat i
	canOpenDoors h
	canPassDoors g
	entityDepth f
	entityHeight e
	entityWidth d
	level a
	mob b
	nodes c
	canFloat ()Z e
	canOpenDoors ()Z d
	canPassDoors ()Z c
	done ()V a
	getBlockPathType (Lnet/minecraft/world/level/BlockGetter;III)Lnet/minecraft/world/level/pathfinder/BlockPathTypes; a
	getBlockPathType (Lnet/minecraft/world/level/BlockGetter;IIILnet/minecraft/world/entity/Mob;IIIZZ)Lnet/minecraft/world/level/pathfinder/BlockPathTypes; a
	getGoal (DDD)Lnet/minecraft/world/level/pathfinder/Target; a
	getNeighbors ([Lnet/minecraft/world/level/pathfinder/Node;Lnet/minecraft/world/level/pathfinder/Node;)I a
	getNode (III)Lnet/minecraft/world/level/pathfinder/Node; a
	getNode (Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/pathfinder/Node; a
	getStart ()Lnet/minecraft/world/level/pathfinder/Node; b
	prepare (Lnet/minecraft/world/level/PathNavigationRegion;Lnet/minecraft/world/entity/Mob;)V a
	setCanFloat (Z)V c
	setCanOpenDoors (Z)V b
	setCanPassDoors (Z)V a
net/minecraft/world/level/pathfinder/Path cxa
	closedSet c
	distToTarget g
	nextNodeIndex e
	nodes a
	openSet b
	reached h
	target f
	targetNodes d
	advance ()V a
	canReach ()Z j
	createFromStream (Lnet/minecraft/network/FriendlyByteBuf;)Lnet/minecraft/world/level/pathfinder/Path; b
	getClosedSet ()[Lnet/minecraft/world/level/pathfinder/Node; l
	getDistToTarget ()F n
	getEndNode ()Lnet/minecraft/world/level/pathfinder/Node; d
	getEntityPosAtNode (Lnet/minecraft/world/entity/Entity;I)Lnet/minecraft/world/phys/Vec3; a
	getNextEntityPos (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/world/phys/Vec3; a
	getNextNode ()Lnet/minecraft/world/level/pathfinder/Node; h
	getNextNodeIndex ()I f
	getNextNodePos ()Lnet/minecraft/core/BlockPos; g
	getNode (I)Lnet/minecraft/world/level/pathfinder/Node; a
	getNodeCount ()I e
	getNodePos (I)Lnet/minecraft/core/BlockPos; d
	getOpenSet ()[Lnet/minecraft/world/level/pathfinder/Node; k
	getPreviousNode ()Lnet/minecraft/world/level/pathfinder/Node; i
	getTarget ()Lnet/minecraft/core/BlockPos; m
	isDone ()Z c
	notStarted ()Z b
	replaceNode (ILnet/minecraft/world/level/pathfinder/Node;)V a
	sameAs (Lnet/minecraft/world/level/pathfinder/Path;)Z a
	setDebug ([Lnet/minecraft/world/level/pathfinder/Node;[Lnet/minecraft/world/level/pathfinder/Node;Ljava/util/Set;)V a
	setNextNodeIndex (I)V c
	truncateNodes (I)V b
	writeToStream (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/world/level/pathfinder/PathComputationType cxb
	$VALUES d
	AIR c
	LAND a
	WATER b
net/minecraft/world/level/pathfinder/PathFinder cxc
	maxVisitedNodes b
	neighbors a
	nodeEvaluator c
	openSet d
	findPath (Lnet/minecraft/world/level/PathNavigationRegion;Lnet/minecraft/world/entity/Mob;Ljava/util/Set;FIF)Lnet/minecraft/world/level/pathfinder/Path; a
	findPath (Lnet/minecraft/world/level/pathfinder/Node;Ljava/util/Map;FIF)Lnet/minecraft/world/level/pathfinder/Path; a
	getBestH (Lnet/minecraft/world/level/pathfinder/Node;Ljava/util/Set;)F a
	reconstructPath (Lnet/minecraft/world/level/pathfinder/Node;Lnet/minecraft/core/BlockPos;Z)Lnet/minecraft/world/level/pathfinder/Path; a
net/minecraft/world/level/pathfinder/SwimNodeEvaluator cxd
	allowBreaching j
	getBlockPathType (Lnet/minecraft/world/level/BlockGetter;III)Lnet/minecraft/world/level/pathfinder/BlockPathTypes; a
	getBlockPathType (Lnet/minecraft/world/level/BlockGetter;IIILnet/minecraft/world/entity/Mob;IIIZZ)Lnet/minecraft/world/level/pathfinder/BlockPathTypes; a
	getGoal (DDD)Lnet/minecraft/world/level/pathfinder/Target; a
	getNeighbors ([Lnet/minecraft/world/level/pathfinder/Node;Lnet/minecraft/world/level/pathfinder/Node;)I a
	getNode (III)Lnet/minecraft/world/level/pathfinder/Node; a
	getStart ()Lnet/minecraft/world/level/pathfinder/Node; b
	getWaterNode (III)Lnet/minecraft/world/level/pathfinder/Node; b
	isFree (III)Lnet/minecraft/world/level/pathfinder/BlockPathTypes; c
net/minecraft/world/level/pathfinder/Target cxe
	bestHeuristic m
	bestNode n
	reached o
	createFromStream (Lnet/minecraft/network/FriendlyByteBuf;)Lnet/minecraft/world/level/pathfinder/Target; c
	getBestNode ()Lnet/minecraft/world/level/pathfinder/Node; d
	isReached ()Z f
	setReached ()V e
	updateBest (FLnet/minecraft/world/level/pathfinder/Node;)V a
net/minecraft/world/level/pathfinder/TurtleNodeEvaluator cxf
	oldWalkableCost k
	oldWaterBorderCost l
	done ()V a
	evaluateBlockPathType (Lnet/minecraft/world/level/BlockGetter;ZZLnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/pathfinder/BlockPathTypes;)Lnet/minecraft/world/level/pathfinder/BlockPathTypes; a
	getAcceptedNode (IIIID)Lnet/minecraft/world/level/pathfinder/Node; a
	getBlockPathType (Lnet/minecraft/world/level/BlockGetter;III)Lnet/minecraft/world/level/pathfinder/BlockPathTypes; a
	getGoal (DDD)Lnet/minecraft/world/level/pathfinder/Target; a
	getNeighbors ([Lnet/minecraft/world/level/pathfinder/Node;Lnet/minecraft/world/level/pathfinder/Node;)I a
	getStart ()Lnet/minecraft/world/level/pathfinder/Node; b
	inWaterDependentPosHeight (Lnet/minecraft/core/BlockPos;)D b
	prepare (Lnet/minecraft/world/level/PathNavigationRegion;Lnet/minecraft/world/entity/Mob;)V a
net/minecraft/world/level/pathfinder/WalkNodeEvaluator cxg
	collisionCache l
	oldWaterCost j
	pathTypesByPosCache k
	canReachWithoutCollision (Lnet/minecraft/world/level/pathfinder/Node;)Z a
	checkNeighbourBlocks (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos$MutableBlockPos;Lnet/minecraft/world/level/pathfinder/BlockPathTypes;)Lnet/minecraft/world/level/pathfinder/BlockPathTypes; a
	done ()V a
	evaluateBlockPathType (Lnet/minecraft/world/level/BlockGetter;ZZLnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/pathfinder/BlockPathTypes;)Lnet/minecraft/world/level/pathfinder/BlockPathTypes; a
	getBlockPathType (Lnet/minecraft/world/entity/Mob;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/pathfinder/BlockPathTypes; a
	getBlockPathType (Lnet/minecraft/world/level/BlockGetter;III)Lnet/minecraft/world/level/pathfinder/BlockPathTypes; a
	getBlockPathType (Lnet/minecraft/world/level/BlockGetter;IIILnet/minecraft/world/entity/Mob;IIIZZ)Lnet/minecraft/world/level/pathfinder/BlockPathTypes; a
	getBlockPathTypeRaw (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/pathfinder/BlockPathTypes; b
	getBlockPathTypeStatic (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos$MutableBlockPos;)Lnet/minecraft/world/level/pathfinder/BlockPathTypes; a
	getBlockPathTypes (Lnet/minecraft/world/level/BlockGetter;IIIIIIZZLjava/util/EnumSet;Lnet/minecraft/world/level/pathfinder/BlockPathTypes;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/pathfinder/BlockPathTypes; a
	getCachedBlockType (Lnet/minecraft/world/entity/Mob;III)Lnet/minecraft/world/level/pathfinder/BlockPathTypes; a
	getFloorLevel (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)D a
	getGoal (DDD)Lnet/minecraft/world/level/pathfinder/Target; a
	getLandNode (IIIIDLnet/minecraft/core/Direction;Lnet/minecraft/world/level/pathfinder/BlockPathTypes;)Lnet/minecraft/world/level/pathfinder/Node; a
	getNeighbors ([Lnet/minecraft/world/level/pathfinder/Node;Lnet/minecraft/world/level/pathfinder/Node;)I a
	getStart ()Lnet/minecraft/world/level/pathfinder/Node; b
	hasCollisions (Lnet/minecraft/world/phys/AABB;)Z a
	hasPositiveMalus (Lnet/minecraft/core/BlockPos;)Z b
	isBurningBlock (Lnet/minecraft/world/level/block/state/BlockState;)Z a
	isDiagonalValid (Lnet/minecraft/world/level/pathfinder/Node;Lnet/minecraft/world/level/pathfinder/Node;Lnet/minecraft/world/level/pathfinder/Node;Lnet/minecraft/world/level/pathfinder/Node;)Z a
	isNeighborValid (Lnet/minecraft/world/level/pathfinder/Node;Lnet/minecraft/world/level/pathfinder/Node;)Z a
	prepare (Lnet/minecraft/world/level/PathNavigationRegion;Lnet/minecraft/world/entity/Mob;)V a
net/minecraft/world/level/portal/PortalForcer cxi
	level a
	canHostFrame (Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos$MutableBlockPos;Lnet/minecraft/core/Direction;I)Z a
	createPortal (Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction$Axis;)Ljava/util/Optional; a
	findPortalAround (Lnet/minecraft/core/BlockPos;Z)Ljava/util/Optional; a
net/minecraft/world/level/portal/PortalInfo cxj
	pos a
	speed b
	xRot d
	yRot c
net/minecraft/world/level/portal/PortalShape cxk
	FRAME a
	axis c
	bottomLeft f
	height g
	level b
	numPortalBlocks e
	rightDir d
	width h
	calculateBottomLeft (Lnet/minecraft/core/BlockPos;)Lnet/minecraft/core/BlockPos; a
	calculateHeight ()I e
	calculateWidth ()I d
	createPortalBlocks ()V b
	createPortalInfo (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/BlockUtil$FoundRectangle;Lnet/minecraft/core/Direction$Axis;Lnet/minecraft/world/phys/Vec3;Lnet/minecraft/world/entity/EntityDimensions;Lnet/minecraft/world/phys/Vec3;FF)Lnet/minecraft/world/level/portal/PortalInfo; a
	findEmptyPortalShape (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction$Axis;)Ljava/util/Optional; a
	findPortalShape (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Ljava/util/function/Predicate;Lnet/minecraft/core/Direction$Axis;)Ljava/util/Optional; a
	getDistanceUntilEdgeAboveFrame (Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;)I a
	getDistanceUntilTop (Lnet/minecraft/core/BlockPos$MutableBlockPos;)I a
	getRelativePosition (Lnet/minecraft/BlockUtil$FoundRectangle;Lnet/minecraft/core/Direction$Axis;Lnet/minecraft/world/phys/Vec3;Lnet/minecraft/world/entity/EntityDimensions;)Lnet/minecraft/world/phys/Vec3; a
	hasTopFrame (Lnet/minecraft/core/BlockPos$MutableBlockPos;I)Z a
	isComplete ()Z c
	isEmpty (Lnet/minecraft/world/level/block/state/BlockState;)Z a
	isValid ()Z a
net/minecraft/world/level/redstone/Redstone cxm
net/minecraft/world/level/saveddata/SaveDataDirtyRunnable cxo
	savedData a
net/minecraft/world/level/saveddata/SavedData cxp
	LOGGER a
	dirty c
	id b
	getId ()Ljava/lang/String; d
	isDirty ()Z c
	load (Lnet/minecraft/nbt/CompoundTag;)V a
	save (Ljava/io/File;)V a
	save (Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/nbt/CompoundTag; b
	setDirty ()V b
	setDirty (Z)V a
net/minecraft/world/level/saveddata/maps/MapBanner cxq
	color b
	name c
	pos a
	fromWorld (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/saveddata/maps/MapBanner; a
	getColor ()Lnet/minecraft/world/item/DyeColor; b
	getDecoration ()Lnet/minecraft/world/level/saveddata/maps/MapDecoration$Type; c
	getId ()Ljava/lang/String; f
	getName ()Lnet/minecraft/network/chat/Component; d
	getPos ()Lnet/minecraft/core/BlockPos; a
	load (Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/world/level/saveddata/maps/MapBanner; a
	save ()Lnet/minecraft/nbt/CompoundTag; e
net/minecraft/world/level/saveddata/maps/MapDecoration cxr
	name e
	rot d
	type a
	x b
	y c
	getImage ()B a
	getName ()Lnet/minecraft/network/chat/Component; g
	getRot ()B e
	getType ()Lnet/minecraft/world/level/saveddata/maps/MapDecoration$Type; b
	getX ()B c
	getY ()B d
	renderOnFrame ()Z f
	setRot (B)V c
	setX (B)V a
	setY (B)V b
net/minecraft/world/level/saveddata/maps/MapDecoration$Type cxr$a
	$VALUES E
	BANNER_BLACK z
	BANNER_BLUE v
	BANNER_BROWN w
	BANNER_CYAN t
	BANNER_GRAY r
	BANNER_GREEN x
	BANNER_LIGHT_BLUE n
	BANNER_LIGHT_GRAY s
	BANNER_LIME p
	BANNER_MAGENTA m
	BANNER_ORANGE l
	BANNER_PINK q
	BANNER_PURPLE u
	BANNER_RED y
	BANNER_WHITE k
	BANNER_YELLOW o
	BLUE_MARKER d
	FRAME b
	MANSION i
	MONUMENT j
	PLAYER a
	PLAYER_OFF_LIMITS h
	PLAYER_OFF_MAP g
	RED_MARKER c
	RED_X A
	TARGET_POINT f
	TARGET_X e
	icon B
	mapColor D
	renderedOnFrame C
	byIcon (B)Lnet/minecraft/world/level/saveddata/maps/MapDecoration$Type; a
	getIcon ()B a
	getMapColor ()I d
	hasMapColor ()Z c
	isRenderedOnFrame ()Z b
net/minecraft/world/level/saveddata/maps/MapFrame cxs
	entityId c
	pos a
	rotation b
	frameId (Lnet/minecraft/core/BlockPos;)Ljava/lang/String; a
	getEntityId ()I d
	getId ()Ljava/lang/String; e
	getPos ()Lnet/minecraft/core/BlockPos; b
	getRotation ()I c
	load (Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/world/level/saveddata/maps/MapFrame; a
	save ()Lnet/minecraft/nbt/CompoundTag; a
net/minecraft/world/level/saveddata/maps/MapIndex cxt
	usedAuxIds a
	getFreeAuxValueForMap ()I a
	load (Lnet/minecraft/nbt/CompoundTag;)V a
	save (Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/nbt/CompoundTag; b
net/minecraft/world/level/saveddata/maps/MapItemSavedData cxu
	LOGGER k
	bannerMarkers m
	carriedBy i
	carriedByPlayers l
	colors g
	decorations j
	dimension c
	frameMarkers n
	locked h
	scale f
	trackingPosition d
	unlimitedTracking e
	x a
	z b
	addDecoration (Lnet/minecraft/world/level/saveddata/maps/MapDecoration$Type;Lnet/minecraft/world/level/LevelAccessor;Ljava/lang/String;DDDLnet/minecraft/network/chat/Component;)V a
	addTargetDecoration (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/core/BlockPos;Ljava/lang/String;Lnet/minecraft/world/level/saveddata/maps/MapDecoration$Type;)V a
	checkBanners (Lnet/minecraft/world/level/BlockGetter;II)V a
	getBanners ()Ljava/util/Collection; a
	getHoldingPlayer (Lnet/minecraft/world/entity/player/Player;)Lnet/minecraft/world/level/saveddata/maps/MapItemSavedData$HoldingPlayer; a
	getUpdatePacket (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/world/entity/player/Player;)Lnet/minecraft/network/protocol/Packet; a
	load (Lnet/minecraft/nbt/CompoundTag;)V a
	lockData (Lnet/minecraft/world/level/saveddata/maps/MapItemSavedData;)V a
	removedFromFrame (Lnet/minecraft/core/BlockPos;I)V a
	save (Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/nbt/CompoundTag; b
	setDirty (II)V a
	setOrigin (DDI)V a
	setProperties (IIIZZLnet/minecraft/resources/ResourceKey;)V a
	tickCarriedBy (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/item/ItemStack;)V a
	toggleBanner (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;)V a
net/minecraft/world/level/saveddata/maps/MapItemSavedData$HoldingPlayer cxu$a
	dirtyData d
	maxDirtyX g
	maxDirtyY h
	minDirtyX e
	minDirtyY f
	player a
	step b
	tick i
	markDirty (II)V a
	nextUpdatePacket (Lnet/minecraft/world/item/ItemStack;)Lnet/minecraft/network/protocol/Packet; a
net/minecraft/world/level/storage/CommandStorage cxx
	namespaces a
	storage b
	createId (Ljava/lang/String;)Ljava/lang/String; a
	get (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/nbt/CompoundTag; a
	keys ()Ljava/util/stream/Stream; a
	newStorage (Ljava/lang/String;Ljava/lang/String;)Lnet/minecraft/world/level/storage/CommandStorage$Container; a
	set (Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/nbt/CompoundTag;)V a
net/minecraft/world/level/storage/CommandStorage$Container cxx$a
	storage a
	get (Ljava/lang/String;)Lnet/minecraft/nbt/CompoundTag; a
	getKeys (Ljava/lang/String;)Ljava/util/stream/Stream; b
	load (Lnet/minecraft/nbt/CompoundTag;)V a
	put (Ljava/lang/String;Lnet/minecraft/nbt/CompoundTag;)V a
	save (Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/nbt/CompoundTag; b
net/minecraft/world/level/storage/DerivedLevelData cxy
	worldData a
	wrapped b
	fillCrashReportCategory (Lnet/minecraft/CrashReportCategory;)V a
	getAllowCommands ()Z o
	getClearWeatherTime ()I h
	getDayTime ()J f
	getDifficulty ()Lnet/minecraft/world/Difficulty; s
	getGameRules ()Lnet/minecraft/world/level/GameRules; q
	getGameTime ()J e
	getGameType ()Lnet/minecraft/world/level/GameType; m
	getLevelName ()Ljava/lang/String; g
	getRainTime ()I l
	getScheduledEvents ()Lnet/minecraft/world/level/timers/TimerQueue; u
	getSpawnAngle ()F d
	getThunderTime ()I j
	getWanderingTraderId ()Ljava/util/UUID; x
	getWanderingTraderSpawnChance ()I w
	getWanderingTraderSpawnDelay ()I v
	getWorldBorder ()Lnet/minecraft/world/level/border/WorldBorder$Settings; r
	getXSpawn ()I a
	getYSpawn ()I b
	getZSpawn ()I c
	isDifficultyLocked ()Z t
	isHardcore ()Z n
	isInitialized ()Z p
	isRaining ()Z k
	isThundering ()Z i
	setClearWeatherTime (I)V a
	setDayTime (J)V b
	setGameTime (J)V a
	setGameType (Lnet/minecraft/world/level/GameType;)V a
	setInitialized (Z)V c
	setRainTime (I)V f
	setRaining (Z)V b
	setSpawn (Lnet/minecraft/core/BlockPos;F)V a
	setSpawnAngle (F)V a
	setThunderTime (I)V e
	setThundering (Z)V a
	setWanderingTraderId (Ljava/util/UUID;)V a
	setWanderingTraderSpawnChance (I)V h
	setWanderingTraderSpawnDelay (I)V g
	setWorldBorder (Lnet/minecraft/world/level/border/WorldBorder$Settings;)V a
	setXSpawn (I)V b
	setYSpawn (I)V c
	setZSpawn (I)V d
net/minecraft/world/level/storage/DimensionDataStorage cxz
	LOGGER a
	cache b
	dataFolder d
	fixerUpper c
	computeIfAbsent (Ljava/util/function/Supplier;Ljava/lang/String;)Lnet/minecraft/world/level/saveddata/SavedData; a
	get (Ljava/util/function/Supplier;Ljava/lang/String;)Lnet/minecraft/world/level/saveddata/SavedData; b
	getDataFile (Ljava/lang/String;)Ljava/io/File; a
	isGzip (Ljava/io/PushbackInputStream;)Z a
	readSavedData (Ljava/util/function/Supplier;Ljava/lang/String;)Lnet/minecraft/world/level/saveddata/SavedData; c
	readTagFromDisk (Ljava/lang/String;I)Lnet/minecraft/nbt/CompoundTag; a
	save ()V a
	set (Lnet/minecraft/world/level/saveddata/SavedData;)V a
net/minecraft/world/level/storage/LevelData cya
	fillCrashReportCategory (Lnet/minecraft/CrashReportCategory;)V a
	getDayTime ()J f
	getDifficulty ()Lnet/minecraft/world/Difficulty; s
	getGameRules ()Lnet/minecraft/world/level/GameRules; q
	getGameTime ()J e
	getSpawnAngle ()F d
	getXSpawn ()I a
	getYSpawn ()I b
	getZSpawn ()I c
	isDifficultyLocked ()Z t
	isHardcore ()Z n
	isRaining ()Z k
	isThundering ()Z i
	setRaining (Z)V b
net/minecraft/world/level/storage/LevelResource cyb
	DATAPACK_DIR g
	GENERATED_DIR f
	LEVEL_DATA_FILE e
	MAP_RESOURCE_FILE h
	PLAYER_ADVANCEMENTS_DIR a
	PLAYER_DATA_DIR c
	PLAYER_OLD_DATA_DIR d
	PLAYER_STATS_DIR b
	ROOT i
	id j
	getId ()Ljava/lang/String; a
net/minecraft/world/level/storage/LevelStorageException cyc
net/minecraft/world/level/storage/LevelStorageSource cyd
	FORMATTER b
	LOGGER a
	OLD_SETTINGS_KEYS c
	backupDir e
	baseDir d
	fixerUpper f
	createAccess (Ljava/lang/String;)Lnet/minecraft/world/level/storage/LevelStorageSource$LevelStorageAccess; c
	createDefault (Ljava/nio/file/Path;)Lnet/minecraft/world/level/storage/LevelStorageSource; a
	getBackupPath ()Ljava/nio/file/Path; d
	getBaseDir ()Ljava/nio/file/Path; c
	getDataPacks (Ljava/io/File;Lcom/mojang/datafixers/DataFixer;)Lnet/minecraft/world/level/DataPackConfig; b
	getLevelData (Lcom/mojang/serialization/DynamicOps;Lnet/minecraft/world/level/DataPackConfig;)Ljava/util/function/BiFunction; b
	getLevelList ()Ljava/util/List; b
	getName ()Ljava/lang/String; a
	getStorageVersion ()I g
	isNewLevelIdAcceptable (Ljava/lang/String;)Z a
	levelExists (Ljava/lang/String;)Z b
	levelSummaryReader (Ljava/io/File;Z)Ljava/util/function/BiFunction; a
	readDataPackConfig (Lcom/mojang/serialization/Dynamic;)Lnet/minecraft/world/level/DataPackConfig; a
	readLevelData (Ljava/io/File;Ljava/util/function/BiFunction;)Ljava/lang/Object; a
	readWorldGenSettings (Lcom/mojang/serialization/Dynamic;Lcom/mojang/datafixers/DataFixer;I)Lcom/mojang/datafixers/util/Pair; a
net/minecraft/world/level/storage/LevelStorageSource$LevelStorageAccess cyd$a
	levelId d
	levelPath c
	lock b
	resources e
	checkLock ()V i
	convertLevel (Lnet/minecraft/util/ProgressListener;)Z a
	createPlayerStorage ()Lnet/minecraft/world/level/storage/PlayerDataStorage; b
	deleteLevel ()V g
	getDataPacks ()Lnet/minecraft/world/level/DataPackConfig; e
	getDataTag (Lcom/mojang/serialization/DynamicOps;Lnet/minecraft/world/level/DataPackConfig;)Lnet/minecraft/world/level/storage/WorldData; a
	getDimensionPath (Lnet/minecraft/resources/ResourceKey;)Ljava/io/File; a
	getIconFile ()Ljava/io/File; f
	getLevelId ()Ljava/lang/String; a
	getLevelPath (Lnet/minecraft/world/level/storage/LevelResource;)Ljava/nio/file/Path; a
	getSummary ()Lnet/minecraft/world/level/storage/LevelSummary; d
	makeWorldBackup ()J h
	renameLevel (Ljava/lang/String;)V a
	requiresConversion ()Z c
	saveDataTag (Lnet/minecraft/core/RegistryAccess;Lnet/minecraft/world/level/storage/WorldData;)V a
	saveDataTag (Lnet/minecraft/core/RegistryAccess;Lnet/minecraft/world/level/storage/WorldData;Lnet/minecraft/nbt/CompoundTag;)V a
net/minecraft/world/level/storage/LevelSummary cye
	icon f
	info g
	levelId c
	levelVersion b
	locked e
	requiresConversion d
	settings a
	askToOpenWorld ()Z m
	compareTo (Lnet/minecraft/world/level/storage/LevelSummary;)I a
	createInfo ()Lnet/minecraft/network/chat/Component; q
	getGameMode ()Lnet/minecraft/world/level/GameType; g
	getIcon ()Ljava/io/File; c
	getInfo ()Lnet/minecraft/network/chat/Component; p
	getLastPlayed ()J e
	getLevelId ()Ljava/lang/String; a
	getLevelName ()Ljava/lang/String; b
	getSettings ()Lnet/minecraft/world/level/LevelSettings; f
	getWorldVersionName ()Lnet/minecraft/network/chat/MutableComponent; j
	hasCheats ()Z i
	isHardcore ()Z h
	isLocked ()Z o
	isRequiresConversion ()Z d
	levelVersion ()Lnet/minecraft/world/level/storage/LevelVersion; k
	markVersionInList ()Z l
	shouldBackup ()Z n
net/minecraft/world/level/storage/LevelVersion cyf
	lastPlayed b
	levelDataVersion a
	minecraftVersion d
	minecraftVersionName c
	snapshot e
	lastPlayed ()J b
	levelDataVersion ()I a
	minecraftVersion ()I d
	minecraftVersionName ()Ljava/lang/String; c
	parse (Lcom/mojang/serialization/Dynamic;)Lnet/minecraft/world/level/storage/LevelVersion; a
	snapshot ()Z e
net/minecraft/world/level/storage/McRegionUpgrader cyg
	LOGGER a
	addRegionFiles (Ljava/io/File;Ljava/util/Collection;)V a
	convertLevel (Lnet/minecraft/world/level/storage/LevelStorageSource$LevelStorageAccess;Lnet/minecraft/util/ProgressListener;)Z a
	convertRegion (Lnet/minecraft/core/RegistryAccess$RegistryHolder;Ljava/io/File;Ljava/io/File;Lnet/minecraft/world/level/biome/BiomeSource;IILnet/minecraft/util/ProgressListener;)V a
	convertRegions (Lnet/minecraft/core/RegistryAccess$RegistryHolder;Ljava/io/File;Ljava/lang/Iterable;Lnet/minecraft/world/level/biome/BiomeSource;IILnet/minecraft/util/ProgressListener;)V a
	makeMcrLevelDatBackup (Lnet/minecraft/world/level/storage/LevelStorageSource$LevelStorageAccess;)V a
net/minecraft/world/level/storage/PlayerDataStorage cyh
	LOGGER b
	fixerUpper a
	playerDir c
	getSeenPlayers ()[Ljava/lang/String; a
	load (Lnet/minecraft/world/entity/player/Player;)Lnet/minecraft/nbt/CompoundTag; b
	save (Lnet/minecraft/world/entity/player/Player;)V a
net/minecraft/world/level/storage/PrimaryLevelData cyi
	LOGGER a
	clearWeatherTime p
	customBossEvents y
	dayTime j
	difficultyLocked v
	endDragonFightData x
	fixerUpper k
	gameTime i
	initialized u
	knownServerBrands C
	loadedPlayerTag n
	playerDataVersion l
	rainTime r
	raining q
	scheduledEvents E
	settings b
	spawnAngle h
	thunderTime t
	thundering s
	upgradedPlayerTag m
	version o
	wanderingTraderId B
	wanderingTraderSpawnChance A
	wanderingTraderSpawnDelay z
	wasModded D
	worldBorder w
	worldGenSettings c
	worldGenSettingsLifecycle d
	xSpawn e
	ySpawn f
	zSpawn g
	createTag (Lnet/minecraft/core/RegistryAccess;Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/nbt/CompoundTag; a
	endDragonFightData ()Lnet/minecraft/nbt/CompoundTag; C
	fillCrashReportCategory (Lnet/minecraft/CrashReportCategory;)V a
	getAllowCommands ()Z o
	getClearWeatherTime ()I h
	getCustomBossEvents ()Lnet/minecraft/nbt/CompoundTag; E
	getDataPackConfig ()Lnet/minecraft/world/level/DataPackConfig; D
	getDayTime ()J f
	getDifficulty ()Lnet/minecraft/world/Difficulty; s
	getGameRules ()Lnet/minecraft/world/level/GameRules; q
	getGameTime ()J e
	getGameType ()Lnet/minecraft/world/level/GameType; m
	getKnownServerBrands ()Ljava/util/Set; G
	getLevelName ()Ljava/lang/String; g
	getLevelSettings ()Lnet/minecraft/world/level/LevelSettings; I
	getLoadedPlayerTag ()Lnet/minecraft/nbt/CompoundTag; y
	getRainTime ()I l
	getScheduledEvents ()Lnet/minecraft/world/level/timers/TimerQueue; u
	getSpawnAngle ()F d
	getThunderTime ()I j
	getVersion ()I z
	getWanderingTraderId ()Ljava/util/UUID; x
	getWanderingTraderSpawnChance ()I w
	getWanderingTraderSpawnDelay ()I v
	getWorldBorder ()Lnet/minecraft/world/level/border/WorldBorder$Settings; r
	getXSpawn ()I a
	getYSpawn ()I b
	getZSpawn ()I c
	isDifficultyLocked ()Z t
	isHardcore ()Z n
	isInitialized ()Z p
	isRaining ()Z k
	isThundering ()Z i
	overworldData ()Lnet/minecraft/world/level/storage/ServerLevelData; H
	parse (Lcom/mojang/serialization/Dynamic;Lcom/mojang/datafixers/DataFixer;ILnet/minecraft/nbt/CompoundTag;Lnet/minecraft/world/level/LevelSettings;Lnet/minecraft/world/level/storage/LevelVersion;Lnet/minecraft/world/level/levelgen/WorldGenSettings;Lcom/mojang/serialization/Lifecycle;)Lnet/minecraft/world/level/storage/PrimaryLevelData; a
	setClearWeatherTime (I)V a
	setCustomBossEvents (Lnet/minecraft/nbt/CompoundTag;)V b
	setDataPackConfig (Lnet/minecraft/world/level/DataPackConfig;)V a
	setDayTime (J)V b
	setDifficulty (Lnet/minecraft/world/Difficulty;)V a
	setDifficultyLocked (Z)V d
	setEndDragonFightData (Lnet/minecraft/nbt/CompoundTag;)V a
	setGameTime (J)V a
	setGameType (Lnet/minecraft/world/level/GameType;)V a
	setInitialized (Z)V c
	setModdedInfo (Ljava/lang/String;Z)V a
	setRainTime (I)V f
	setRaining (Z)V b
	setSpawn (Lnet/minecraft/core/BlockPos;F)V a
	setSpawnAngle (F)V a
	setTagData (Lnet/minecraft/core/RegistryAccess;Lnet/minecraft/nbt/CompoundTag;Lnet/minecraft/nbt/CompoundTag;)V a
	setThunderTime (I)V e
	setThundering (Z)V a
	setWanderingTraderId (Ljava/util/UUID;)V a
	setWanderingTraderSpawnChance (I)V h
	setWanderingTraderSpawnDelay (I)V g
	setWorldBorder (Lnet/minecraft/world/level/border/WorldBorder$Settings;)V a
	setXSpawn (I)V b
	setYSpawn (I)V c
	setZSpawn (I)V d
	updatePlayerTag ()V J
	wasModded ()Z F
	worldGenSettings ()Lnet/minecraft/world/level/levelgen/WorldGenSettings; A
	worldGenSettingsLifecycle ()Lcom/mojang/serialization/Lifecycle; B
net/minecraft/world/level/storage/ServerLevelData cyj
	fillCrashReportCategory (Lnet/minecraft/CrashReportCategory;)V a
	getAllowCommands ()Z o
	getClearWeatherTime ()I h
	getGameType ()Lnet/minecraft/world/level/GameType; m
	getLevelName ()Ljava/lang/String; g
	getRainTime ()I l
	getScheduledEvents ()Lnet/minecraft/world/level/timers/TimerQueue; u
	getThunderTime ()I j
	getWanderingTraderId ()Ljava/util/UUID; x
	getWanderingTraderSpawnChance ()I w
	getWanderingTraderSpawnDelay ()I v
	getWorldBorder ()Lnet/minecraft/world/level/border/WorldBorder$Settings; r
	isInitialized ()Z p
	setClearWeatherTime (I)V a
	setDayTime (J)V b
	setGameTime (J)V a
	setGameType (Lnet/minecraft/world/level/GameType;)V a
	setInitialized (Z)V c
	setRainTime (I)V f
	setThunderTime (I)V e
	setThundering (Z)V a
	setWanderingTraderId (Ljava/util/UUID;)V a
	setWanderingTraderSpawnChance (I)V h
	setWanderingTraderSpawnDelay (I)V g
	setWorldBorder (Lnet/minecraft/world/level/border/WorldBorder$Settings;)V a
net/minecraft/world/level/storage/WorldData cyk
	createTag (Lnet/minecraft/core/RegistryAccess;Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/nbt/CompoundTag; a
	endDragonFightData ()Lnet/minecraft/nbt/CompoundTag; C
	fillCrashReportCategory (Lnet/minecraft/CrashReportCategory;)V a
	getAllowCommands ()Z o
	getCustomBossEvents ()Lnet/minecraft/nbt/CompoundTag; E
	getDataPackConfig ()Lnet/minecraft/world/level/DataPackConfig; D
	getDifficulty ()Lnet/minecraft/world/Difficulty; s
	getGameRules ()Lnet/minecraft/world/level/GameRules; q
	getGameType ()Lnet/minecraft/world/level/GameType; m
	getKnownServerBrands ()Ljava/util/Set; G
	getLevelName ()Ljava/lang/String; g
	getLevelSettings ()Lnet/minecraft/world/level/LevelSettings; I
	getLoadedPlayerTag ()Lnet/minecraft/nbt/CompoundTag; y
	getStorageVersionName (I)Ljava/lang/String; i
	getVersion ()I z
	isDifficultyLocked ()Z t
	isHardcore ()Z n
	overworldData ()Lnet/minecraft/world/level/storage/ServerLevelData; H
	setCustomBossEvents (Lnet/minecraft/nbt/CompoundTag;)V b
	setDataPackConfig (Lnet/minecraft/world/level/DataPackConfig;)V a
	setDifficulty (Lnet/minecraft/world/Difficulty;)V a
	setDifficultyLocked (Z)V d
	setEndDragonFightData (Lnet/minecraft/nbt/CompoundTag;)V a
	setGameType (Lnet/minecraft/world/level/GameType;)V a
	setModdedInfo (Ljava/lang/String;Z)V a
	wasModded ()Z F
	worldGenSettings ()Lnet/minecraft/world/level/levelgen/WorldGenSettings; A
	worldGenSettingsLifecycle ()Lcom/mojang/serialization/Lifecycle; B
net/minecraft/world/level/storage/WritableLevelData cyl
	setSpawn (Lnet/minecraft/core/BlockPos;F)V a
	setSpawnAngle (F)V a
	setXSpawn (I)V b
	setYSpawn (I)V c
	setZSpawn (I)V d
net/minecraft/world/level/storage/loot/BinomialDistributionGenerator cym
	n d
	p e
	binomial (IF)Lnet/minecraft/world/level/storage/loot/BinomialDistributionGenerator; a
	getInt (Ljava/util/Random;)I a
	getType ()Lnet/minecraft/resources/ResourceLocation; a
net/minecraft/world/level/storage/loot/BinomialDistributionGenerator$Serializer cym$a
	deserialize (Lcom/google/gson/JsonElement;Ljava/lang/reflect/Type;Lcom/google/gson/JsonDeserializationContext;)Lnet/minecraft/world/level/storage/loot/BinomialDistributionGenerator; a
	serialize (Lnet/minecraft/world/level/storage/loot/BinomialDistributionGenerator;Ljava/lang/reflect/Type;Lcom/google/gson/JsonSerializationContext;)Lcom/google/gson/JsonElement; a
net/minecraft/world/level/storage/loot/BuiltInLootTables cyn
	ABANDONED_MINESHAFT u
	ARMORER_GIFT al
	BASTION_BRIDGE N
	BASTION_HOGLIN_STABLE O
	BASTION_OTHER M
	BASTION_TREASURE L
	BURIED_TREASURE G
	BUTCHER_GIFT am
	CARTOGRAPHER_GIFT an
	CAT_MORNING_GIFT ak
	CLERIC_GIFT ao
	DESERT_PYRAMID z
	EMPTY a
	END_CITY_TREASURE c
	FARMER_GIFT ap
	FISHERMAN_GIFT aq
	FISHING ag
	FISHING_FISH aj
	FISHING_JUNK ah
	FISHING_TREASURE ai
	FLETCHER_GIFT ar
	IGLOO_CHEST C
	IMMUTABLE_LOCATIONS aA
	JUNGLE_TEMPLE A
	JUNGLE_TEMPLE_DISPENSER B
	LEATHERWORKER_GIFT as
	LIBRARIAN_GIFT at
	LOCATIONS az
	MASON_GIFT au
	NETHER_BRIDGE v
	PIGLIN_BARTERING ay
	PILLAGER_OUTPOST K
	RUINED_PORTAL P
	SHEEP_BLACK af
	SHEEP_BLUE ab
	SHEEP_BROWN ac
	SHEEP_CYAN Z
	SHEEP_GRAY X
	SHEEP_GREEN ad
	SHEEP_LIGHT_BLUE T
	SHEEP_LIGHT_GRAY Y
	SHEEP_LIME V
	SHEEP_MAGENTA S
	SHEEP_ORANGE R
	SHEEP_PINK W
	SHEEP_PURPLE aa
	SHEEP_RED ae
	SHEEP_WHITE Q
	SHEEP_YELLOW U
	SHEPHERD_GIFT av
	SHIPWRECK_MAP H
	SHIPWRECK_SUPPLY I
	SHIPWRECK_TREASURE J
	SIMPLE_DUNGEON d
	SPAWN_BONUS_CHEST b
	STRONGHOLD_CORRIDOR y
	STRONGHOLD_CROSSING x
	STRONGHOLD_LIBRARY w
	TOOLSMITH_GIFT aw
	UNDERWATER_RUIN_BIG F
	UNDERWATER_RUIN_SMALL E
	VILLAGE_ARMORER g
	VILLAGE_BUTCHER k
	VILLAGE_CARTOGRAPHER h
	VILLAGE_DESERT_HOUSE p
	VILLAGE_FISHER m
	VILLAGE_FLETCHER l
	VILLAGE_MASON i
	VILLAGE_PLAINS_HOUSE q
	VILLAGE_SAVANNA_HOUSE t
	VILLAGE_SHEPHERD j
	VILLAGE_SNOWY_HOUSE s
	VILLAGE_TAIGA_HOUSE r
	VILLAGE_TANNERY n
	VILLAGE_TEMPLE o
	VILLAGE_TOOLSMITH f
	VILLAGE_WEAPONSMITH e
	WEAPONSMITH_GIFT ax
	WOODLAND_MANSION D
	all ()Ljava/util/Set; a
	register (Ljava/lang/String;)Lnet/minecraft/resources/ResourceLocation; a
	register (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/resources/ResourceLocation; a
net/minecraft/world/level/storage/loot/ConstantIntValue cyo
	value d
	exactly (I)Lnet/minecraft/world/level/storage/loot/ConstantIntValue; a
	getInt (Ljava/util/Random;)I a
	getType ()Lnet/minecraft/resources/ResourceLocation; a
net/minecraft/world/level/storage/loot/ConstantIntValue$Serializer cyo$a
	deserialize (Lcom/google/gson/JsonElement;Ljava/lang/reflect/Type;Lcom/google/gson/JsonDeserializationContext;)Lnet/minecraft/world/level/storage/loot/ConstantIntValue; a
	serialize (Lnet/minecraft/world/level/storage/loot/ConstantIntValue;Ljava/lang/reflect/Type;Lcom/google/gson/JsonSerializationContext;)Lcom/google/gson/JsonElement; a
net/minecraft/world/level/storage/loot/Deserializers cyp
	createConditionSerializer ()Lcom/google/gson/GsonBuilder; a
	createFunctionSerializer ()Lcom/google/gson/GsonBuilder; b
	createLootTableSerializer ()Lcom/google/gson/GsonBuilder; c
net/minecraft/world/level/storage/loot/GsonAdapterFactory cyq
	builder (Lnet/minecraft/core/Registry;Ljava/lang/String;Ljava/lang/String;Ljava/util/function/Function;)Lnet/minecraft/world/level/storage/loot/GsonAdapterFactory$Builder; a
net/minecraft/world/level/storage/loot/GsonAdapterFactory$Builder cyq$a
	defaultType e
	elementName b
	registry a
	typeGetter d
	typeKey c
	build ()Ljava/lang/Object; a
	withDefaultSerializer (Lnet/minecraft/world/level/storage/loot/SerializerType;Lnet/minecraft/world/level/storage/loot/GsonAdapterFactory$DefaultSerializer;)Lnet/minecraft/world/level/storage/loot/GsonAdapterFactory$Builder; a
net/minecraft/world/level/storage/loot/GsonAdapterFactory$DefaultSerializer cyq$b
	deserialize (Lcom/google/gson/JsonElement;Lcom/google/gson/JsonDeserializationContext;)Ljava/lang/Object; a
	serialize (Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)Lcom/google/gson/JsonElement; a
net/minecraft/world/level/storage/loot/GsonAdapterFactory$JsonAdapter cyq$c
	defaultType e
	elementName b
	registry a
	typeGetter d
	typeKey c
net/minecraft/world/level/storage/loot/IntLimiter cyr
	max b
	min a
	op c
	clamp (II)Lnet/minecraft/world/level/storage/loot/IntLimiter; a
	lowerBound (I)Lnet/minecraft/world/level/storage/loot/IntLimiter; a
	upperBound (I)Lnet/minecraft/world/level/storage/loot/IntLimiter; b
net/minecraft/world/level/storage/loot/IntLimiter$Serializer cyr$a
	deserialize (Lcom/google/gson/JsonElement;Ljava/lang/reflect/Type;Lcom/google/gson/JsonDeserializationContext;)Lnet/minecraft/world/level/storage/loot/IntLimiter; a
	serialize (Lnet/minecraft/world/level/storage/loot/IntLimiter;Ljava/lang/reflect/Type;Lcom/google/gson/JsonSerializationContext;)Lcom/google/gson/JsonElement; a
net/minecraft/world/level/storage/loot/LootContext cys
	conditions f
	dynamicDrops i
	level c
	lootTables d
	luck b
	params h
	random a
	visitedConditions g
	visitedTables e
	addDynamicDrops (Lnet/minecraft/resources/ResourceLocation;Ljava/util/function/Consumer;)V a
	addVisitedCondition (Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition;)Z a
	addVisitedTable (Lnet/minecraft/world/level/storage/loot/LootTable;)Z a
	getCondition (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition; b
	getLevel ()Lnet/minecraft/server/level/ServerLevel; c
	getLootTable (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/world/level/storage/loot/LootTable; a
	getLuck ()F b
	getParam (Lnet/minecraft/world/level/storage/loot/parameters/LootContextParam;)Ljava/lang/Object; b
	getParamOrNull (Lnet/minecraft/world/level/storage/loot/parameters/LootContextParam;)Ljava/lang/Object; c
	getRandom ()Ljava/util/Random; a
	hasParam (Lnet/minecraft/world/level/storage/loot/parameters/LootContextParam;)Z a
	removeVisitedCondition (Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition;)V b
	removeVisitedTable (Lnet/minecraft/world/level/storage/loot/LootTable;)V b
net/minecraft/world/level/storage/loot/LootContext$Builder cys$a
	dynamicDrops c
	level a
	luck e
	params b
	random d
	create (Lnet/minecraft/world/level/storage/loot/parameters/LootContextParamSet;)Lnet/minecraft/world/level/storage/loot/LootContext; a
	getLevel ()Lnet/minecraft/server/level/ServerLevel; a
	getOptionalParameter (Lnet/minecraft/world/level/storage/loot/parameters/LootContextParam;)Ljava/lang/Object; b
	getParameter (Lnet/minecraft/world/level/storage/loot/parameters/LootContextParam;)Ljava/lang/Object; a
	withDynamicDrop (Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/world/level/storage/loot/LootContext$DynamicDrop;)Lnet/minecraft/world/level/storage/loot/LootContext$Builder; a
	withLuck (F)Lnet/minecraft/world/level/storage/loot/LootContext$Builder; a
	withOptionalParameter (Lnet/minecraft/world/level/storage/loot/parameters/LootContextParam;Ljava/lang/Object;)Lnet/minecraft/world/level/storage/loot/LootContext$Builder; b
	withOptionalRandomSeed (J)Lnet/minecraft/world/level/storage/loot/LootContext$Builder; a
	withOptionalRandomSeed (JLjava/util/Random;)Lnet/minecraft/world/level/storage/loot/LootContext$Builder; a
	withParameter (Lnet/minecraft/world/level/storage/loot/parameters/LootContextParam;Ljava/lang/Object;)Lnet/minecraft/world/level/storage/loot/LootContext$Builder; a
	withRandom (Ljava/util/Random;)Lnet/minecraft/world/level/storage/loot/LootContext$Builder; a
net/minecraft/world/level/storage/loot/LootContext$DynamicDrop cys$b
net/minecraft/world/level/storage/loot/LootContext$EntityTarget cys$c
	$VALUES g
	DIRECT_KILLER c
	KILLER b
	KILLER_PLAYER d
	THIS a
	name e
	param f
	getByName (Ljava/lang/String;)Lnet/minecraft/world/level/storage/loot/LootContext$EntityTarget; a
	getParam ()Lnet/minecraft/world/level/storage/loot/parameters/LootContextParam; a
net/minecraft/world/level/storage/loot/LootContext$EntityTarget$Serializer cys$c$a
	read (Lcom/google/gson/stream/JsonReader;)Lnet/minecraft/world/level/storage/loot/LootContext$EntityTarget; a
	write (Lcom/google/gson/stream/JsonWriter;Lnet/minecraft/world/level/storage/loot/LootContext$EntityTarget;)V a
net/minecraft/world/level/storage/loot/LootContextUser cyt
	getReferencedContextParams ()Ljava/util/Set; a
	validate (Lnet/minecraft/world/level/storage/loot/ValidationContext;)V a
net/minecraft/world/level/storage/loot/LootPool cyu
	bonusRolls g
	compositeCondition c
	compositeFunction e
	conditions b
	entries a
	functions d
	rolls f
	addRandomItem (Ljava/util/function/Consumer;Lnet/minecraft/world/level/storage/loot/LootContext;)V b
	addRandomItems (Ljava/util/function/Consumer;Lnet/minecraft/world/level/storage/loot/LootContext;)V a
	lootPool ()Lnet/minecraft/world/level/storage/loot/LootPool$Builder; a
	validate (Lnet/minecraft/world/level/storage/loot/ValidationContext;)V a
net/minecraft/world/level/storage/loot/LootPool$Builder cyu$a
	bonusRolls e
	conditions b
	entries a
	functions c
	rolls d
	add (Lnet/minecraft/world/level/storage/loot/entries/LootPoolEntryContainer$Builder;)Lnet/minecraft/world/level/storage/loot/LootPool$Builder; a
	apply (Lnet/minecraft/world/level/storage/loot/functions/LootItemFunction$Builder;)Ljava/lang/Object; b
	apply (Lnet/minecraft/world/level/storage/loot/functions/LootItemFunction$Builder;)Lnet/minecraft/world/level/storage/loot/LootPool$Builder; a
	build ()Lnet/minecraft/world/level/storage/loot/LootPool; b
	setBonusRolls (Lnet/minecraft/world/level/storage/loot/RandomValueBounds;)Lnet/minecraft/world/level/storage/loot/LootPool$Builder; a
	setRolls (Lnet/minecraft/world/level/storage/loot/RandomIntGenerator;)Lnet/minecraft/world/level/storage/loot/LootPool$Builder; a
	unwrap ()Ljava/lang/Object; c
	unwrap ()Lnet/minecraft/world/level/storage/loot/LootPool$Builder; a
	when (Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition$Builder;)Ljava/lang/Object; b
	when (Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition$Builder;)Lnet/minecraft/world/level/storage/loot/LootPool$Builder; a
net/minecraft/world/level/storage/loot/LootPool$Serializer cyu$b
	deserialize (Lcom/google/gson/JsonElement;Ljava/lang/reflect/Type;Lcom/google/gson/JsonDeserializationContext;)Lnet/minecraft/world/level/storage/loot/LootPool; a
	serialize (Lnet/minecraft/world/level/storage/loot/LootPool;Ljava/lang/reflect/Type;Lcom/google/gson/JsonSerializationContext;)Lcom/google/gson/JsonElement; a
net/minecraft/world/level/storage/loot/LootTable cyv
	DEFAULT_PARAM_SET b
	EMPTY a
	LOGGER c
	compositeFunction g
	functions f
	paramSet d
	pools e
	createStackSplitter (Ljava/util/function/Consumer;)Ljava/util/function/Consumer; a
	fill (Lnet/minecraft/world/Container;Lnet/minecraft/world/level/storage/loot/LootContext;)V a
	getAvailableSlots (Lnet/minecraft/world/Container;Ljava/util/Random;)Ljava/util/List; a
	getParamSet ()Lnet/minecraft/world/level/storage/loot/parameters/LootContextParamSet; a
	getRandomItems (Lnet/minecraft/world/level/storage/loot/LootContext;)Ljava/util/List; a
	getRandomItems (Lnet/minecraft/world/level/storage/loot/LootContext;Ljava/util/function/Consumer;)V b
	getRandomItemsRaw (Lnet/minecraft/world/level/storage/loot/LootContext;Ljava/util/function/Consumer;)V a
	lootTable ()Lnet/minecraft/world/level/storage/loot/LootTable$Builder; b
	shuffleAndSplitItems (Ljava/util/List;ILjava/util/Random;)V a
	validate (Lnet/minecraft/world/level/storage/loot/ValidationContext;)V a
net/minecraft/world/level/storage/loot/LootTable$Builder cyv$a
	functions b
	paramSet c
	pools a
	apply (Lnet/minecraft/world/level/storage/loot/functions/LootItemFunction$Builder;)Ljava/lang/Object; b
	apply (Lnet/minecraft/world/level/storage/loot/functions/LootItemFunction$Builder;)Lnet/minecraft/world/level/storage/loot/LootTable$Builder; a
	build ()Lnet/minecraft/world/level/storage/loot/LootTable; b
	setParamSet (Lnet/minecraft/world/level/storage/loot/parameters/LootContextParamSet;)Lnet/minecraft/world/level/storage/loot/LootTable$Builder; a
	unwrap ()Ljava/lang/Object; c
	unwrap ()Lnet/minecraft/world/level/storage/loot/LootTable$Builder; a
	withPool (Lnet/minecraft/world/level/storage/loot/LootPool$Builder;)Lnet/minecraft/world/level/storage/loot/LootTable$Builder; a
net/minecraft/world/level/storage/loot/LootTable$Serializer cyv$b
	deserialize (Lcom/google/gson/JsonElement;Ljava/lang/reflect/Type;Lcom/google/gson/JsonDeserializationContext;)Lnet/minecraft/world/level/storage/loot/LootTable; a
	serialize (Lnet/minecraft/world/level/storage/loot/LootTable;Ljava/lang/reflect/Type;Lcom/google/gson/JsonSerializationContext;)Lcom/google/gson/JsonElement; a
net/minecraft/world/level/storage/loot/LootTables cyw
	GSON b
	LOGGER a
	predicateManager d
	tables c
	apply (Ljava/lang/Object;Lnet/minecraft/server/packs/resources/ResourceManager;Lnet/minecraft/util/profiling/ProfilerFiller;)V a
	apply (Ljava/util/Map;Lnet/minecraft/server/packs/resources/ResourceManager;Lnet/minecraft/util/profiling/ProfilerFiller;)V a
	get (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/world/level/storage/loot/LootTable; a
	getIds ()Ljava/util/Set; a
	serialize (Lnet/minecraft/world/level/storage/loot/LootTable;)Lcom/google/gson/JsonElement; a
	validate (Lnet/minecraft/world/level/storage/loot/ValidationContext;Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/world/level/storage/loot/LootTable;)V a
net/minecraft/world/level/storage/loot/PredicateManager cyx
	GSON b
	LOGGER a
	conditions c
	apply (Ljava/lang/Object;Lnet/minecraft/server/packs/resources/ResourceManager;Lnet/minecraft/util/profiling/ProfilerFiller;)V a
	apply (Ljava/util/Map;Lnet/minecraft/server/packs/resources/ResourceManager;Lnet/minecraft/util/profiling/ProfilerFiller;)V a
	get (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition; a
	getKeys ()Ljava/util/Set; a
net/minecraft/world/level/storage/loot/PredicateManager$CompositePredicate cyx$a
	composedPredicate b
	terms a
	getType ()Lnet/minecraft/world/level/storage/loot/predicates/LootItemConditionType; b
	test (Lnet/minecraft/world/level/storage/loot/LootContext;)Z a
	validate (Lnet/minecraft/world/level/storage/loot/ValidationContext;)V a
net/minecraft/world/level/storage/loot/RandomIntGenerator cyy
	BINOMIAL c
	CONSTANT a
	UNIFORM b
	getInt (Ljava/util/Random;)I a
	getType ()Lnet/minecraft/resources/ResourceLocation; a
net/minecraft/world/level/storage/loot/RandomIntGenerators cyz
	GENERATORS a
	deserialize (Lcom/google/gson/JsonElement;Lcom/google/gson/JsonDeserializationContext;)Lnet/minecraft/world/level/storage/loot/RandomIntGenerator; a
	serialize (Lnet/minecraft/world/level/storage/loot/RandomIntGenerator;Lcom/google/gson/JsonSerializationContext;)Lcom/google/gson/JsonElement; a
net/minecraft/world/level/storage/loot/RandomValueBounds cza
	max e
	min d
	between (FF)Lnet/minecraft/world/level/storage/loot/RandomValueBounds; a
	exactly (F)Lnet/minecraft/world/level/storage/loot/RandomValueBounds; a
	getFloat (Ljava/util/Random;)F b
	getInt (Ljava/util/Random;)I a
	getMax ()F c
	getMin ()F b
	getType ()Lnet/minecraft/resources/ResourceLocation; a
	matchesValue (I)Z a
net/minecraft/world/level/storage/loot/RandomValueBounds$Serializer cza$a
	deserialize (Lcom/google/gson/JsonElement;Ljava/lang/reflect/Type;Lcom/google/gson/JsonDeserializationContext;)Lnet/minecraft/world/level/storage/loot/RandomValueBounds; a
	serialize (Lnet/minecraft/world/level/storage/loot/RandomValueBounds;Ljava/lang/reflect/Type;Lcom/google/gson/JsonSerializationContext;)Lcom/google/gson/JsonElement; a
net/minecraft/world/level/storage/loot/Serializer czb
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Ljava/lang/Object; a
	serialize (Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V a
net/minecraft/world/level/storage/loot/SerializerType czc
	serializer a
	getSerializer ()Lnet/minecraft/world/level/storage/loot/Serializer; a
net/minecraft/world/level/storage/loot/ValidationContext czd
	conditionResolver d
	context b
	contextCache h
	params c
	problems a
	tableResolver f
	visitedConditions e
	visitedTables g
	enterCondition (Ljava/lang/String;Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/world/level/storage/loot/ValidationContext; b
	enterTable (Ljava/lang/String;Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/world/level/storage/loot/ValidationContext; a
	forChild (Ljava/lang/String;)Lnet/minecraft/world/level/storage/loot/ValidationContext; b
	getContext ()Ljava/lang/String; b
	getProblems ()Lcom/google/common/collect/Multimap; a
	hasVisitedCondition (Lnet/minecraft/resources/ResourceLocation;)Z b
	hasVisitedTable (Lnet/minecraft/resources/ResourceLocation;)Z a
	reportProblem (Ljava/lang/String;)V a
	resolveCondition (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition; d
	resolveLootTable (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/world/level/storage/loot/LootTable; c
	setParams (Lnet/minecraft/world/level/storage/loot/parameters/LootContextParamSet;)Lnet/minecraft/world/level/storage/loot/ValidationContext; a
	validateUser (Lnet/minecraft/world/level/storage/loot/LootContextUser;)V a
net/minecraft/world/level/storage/loot/entries/AlternativesEntry cze
	alternatives ([Lnet/minecraft/world/level/storage/loot/entries/LootPoolEntryContainer$Builder;)Lnet/minecraft/world/level/storage/loot/entries/AlternativesEntry$Builder; a
	compose ([Lnet/minecraft/world/level/storage/loot/entries/ComposableEntryContainer;)Lnet/minecraft/world/level/storage/loot/entries/ComposableEntryContainer; a
	getType ()Lnet/minecraft/world/level/storage/loot/entries/LootPoolEntryType; a
	validate (Lnet/minecraft/world/level/storage/loot/ValidationContext;)V a
net/minecraft/world/level/storage/loot/entries/AlternativesEntry$Builder cze$a
	entries a
	build ()Lnet/minecraft/world/level/storage/loot/entries/LootPoolEntryContainer; b
	getThis ()Lnet/minecraft/world/level/storage/loot/entries/AlternativesEntry$Builder; a
	getThis ()Lnet/minecraft/world/level/storage/loot/entries/LootPoolEntryContainer$Builder; d
	otherwise (Lnet/minecraft/world/level/storage/loot/entries/LootPoolEntryContainer$Builder;)Lnet/minecraft/world/level/storage/loot/entries/AlternativesEntry$Builder; a
net/minecraft/world/level/storage/loot/entries/ComposableEntryContainer czf
	ALWAYS_FALSE a
	ALWAYS_TRUE b
	and (Lnet/minecraft/world/level/storage/loot/entries/ComposableEntryContainer;)Lnet/minecraft/world/level/storage/loot/entries/ComposableEntryContainer; a
	or (Lnet/minecraft/world/level/storage/loot/entries/ComposableEntryContainer;)Lnet/minecraft/world/level/storage/loot/entries/ComposableEntryContainer; b
net/minecraft/world/level/storage/loot/entries/CompositeEntryBase czg
	children c
	composedChildren e
	compose ([Lnet/minecraft/world/level/storage/loot/entries/ComposableEntryContainer;)Lnet/minecraft/world/level/storage/loot/entries/ComposableEntryContainer; a
	createSerializer (Lnet/minecraft/world/level/storage/loot/entries/CompositeEntryBase$CompositeEntryConstructor;)Lnet/minecraft/world/level/storage/loot/entries/LootPoolEntryContainer$Serializer; a
	validate (Lnet/minecraft/world/level/storage/loot/ValidationContext;)V a
net/minecraft/world/level/storage/loot/entries/CompositeEntryBase$CompositeEntryConstructor czg$a
net/minecraft/world/level/storage/loot/entries/DynamicLoot czh
	name g
	createItemStack (Ljava/util/function/Consumer;Lnet/minecraft/world/level/storage/loot/LootContext;)V a
	dynamicEntry (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/world/level/storage/loot/entries/LootPoolSingletonContainer$Builder; a
	getType ()Lnet/minecraft/world/level/storage/loot/entries/LootPoolEntryType; a
net/minecraft/world/level/storage/loot/entries/DynamicLoot$Serializer czh$a
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;II[Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition;[Lnet/minecraft/world/level/storage/loot/functions/LootItemFunction;)Lnet/minecraft/world/level/storage/loot/entries/DynamicLoot; a
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;II[Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition;[Lnet/minecraft/world/level/storage/loot/functions/LootItemFunction;)Lnet/minecraft/world/level/storage/loot/entries/LootPoolSingletonContainer; b
	serializeCustom (Lcom/google/gson/JsonObject;Lnet/minecraft/world/level/storage/loot/entries/DynamicLoot;Lcom/google/gson/JsonSerializationContext;)V a
	serializeCustom (Lcom/google/gson/JsonObject;Lnet/minecraft/world/level/storage/loot/entries/LootPoolEntryContainer;Lcom/google/gson/JsonSerializationContext;)V a
	serializeCustom (Lcom/google/gson/JsonObject;Lnet/minecraft/world/level/storage/loot/entries/LootPoolSingletonContainer;Lcom/google/gson/JsonSerializationContext;)V a
net/minecraft/world/level/storage/loot/entries/EmptyLootItem czi
	createItemStack (Ljava/util/function/Consumer;Lnet/minecraft/world/level/storage/loot/LootContext;)V a
	emptyItem ()Lnet/minecraft/world/level/storage/loot/entries/LootPoolSingletonContainer$Builder; b
	getType ()Lnet/minecraft/world/level/storage/loot/entries/LootPoolEntryType; a
net/minecraft/world/level/storage/loot/entries/EmptyLootItem$Serializer czi$a
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;II[Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition;[Lnet/minecraft/world/level/storage/loot/functions/LootItemFunction;)Lnet/minecraft/world/level/storage/loot/entries/EmptyLootItem; a
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;II[Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition;[Lnet/minecraft/world/level/storage/loot/functions/LootItemFunction;)Lnet/minecraft/world/level/storage/loot/entries/LootPoolSingletonContainer; b
net/minecraft/world/level/storage/loot/entries/EntryGroup czj
	compose ([Lnet/minecraft/world/level/storage/loot/entries/ComposableEntryContainer;)Lnet/minecraft/world/level/storage/loot/entries/ComposableEntryContainer; a
	getType ()Lnet/minecraft/world/level/storage/loot/entries/LootPoolEntryType; a
	list ([Lnet/minecraft/world/level/storage/loot/entries/LootPoolEntryContainer$Builder;)Lnet/minecraft/world/level/storage/loot/entries/EntryGroup$Builder; a
net/minecraft/world/level/storage/loot/entries/EntryGroup$Builder czj$a
	entries a
	append (Lnet/minecraft/world/level/storage/loot/entries/LootPoolEntryContainer$Builder;)Lnet/minecraft/world/level/storage/loot/entries/EntryGroup$Builder; b
	build ()Lnet/minecraft/world/level/storage/loot/entries/LootPoolEntryContainer; b
	getThis ()Lnet/minecraft/world/level/storage/loot/entries/EntryGroup$Builder; a
	getThis ()Lnet/minecraft/world/level/storage/loot/entries/LootPoolEntryContainer$Builder; d
net/minecraft/world/level/storage/loot/entries/LootItem czk
	item g
	createItemStack (Ljava/util/function/Consumer;Lnet/minecraft/world/level/storage/loot/LootContext;)V a
	getType ()Lnet/minecraft/world/level/storage/loot/entries/LootPoolEntryType; a
	lootTableItem (Lnet/minecraft/world/level/ItemLike;)Lnet/minecraft/world/level/storage/loot/entries/LootPoolSingletonContainer$Builder; a
net/minecraft/world/level/storage/loot/entries/LootItem$Serializer czk$a
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;II[Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition;[Lnet/minecraft/world/level/storage/loot/functions/LootItemFunction;)Lnet/minecraft/world/level/storage/loot/entries/LootItem; a
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;II[Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition;[Lnet/minecraft/world/level/storage/loot/functions/LootItemFunction;)Lnet/minecraft/world/level/storage/loot/entries/LootPoolSingletonContainer; b
	serializeCustom (Lcom/google/gson/JsonObject;Lnet/minecraft/world/level/storage/loot/entries/LootItem;Lcom/google/gson/JsonSerializationContext;)V a
	serializeCustom (Lcom/google/gson/JsonObject;Lnet/minecraft/world/level/storage/loot/entries/LootPoolEntryContainer;Lcom/google/gson/JsonSerializationContext;)V a
	serializeCustom (Lcom/google/gson/JsonObject;Lnet/minecraft/world/level/storage/loot/entries/LootPoolSingletonContainer;Lcom/google/gson/JsonSerializationContext;)V a
net/minecraft/world/level/storage/loot/entries/LootPoolEntries czl
	ALTERNATIVES f
	DYNAMIC d
	EMPTY a
	GROUP h
	ITEM b
	REFERENCE c
	SEQUENCE g
	TAG e
	createGsonAdapter ()Ljava/lang/Object; a
	register (Ljava/lang/String;Lnet/minecraft/world/level/storage/loot/Serializer;)Lnet/minecraft/world/level/storage/loot/entries/LootPoolEntryType; a
net/minecraft/world/level/storage/loot/entries/LootPoolEntry czm
	createItemStack (Ljava/util/function/Consumer;Lnet/minecraft/world/level/storage/loot/LootContext;)V a
	getWeight (F)I a
net/minecraft/world/level/storage/loot/entries/LootPoolEntryContainer czn
	compositeCondition c
	conditions d
	canRun (Lnet/minecraft/world/level/storage/loot/LootContext;)Z a
	getType ()Lnet/minecraft/world/level/storage/loot/entries/LootPoolEntryType; a
	validate (Lnet/minecraft/world/level/storage/loot/ValidationContext;)V a
net/minecraft/world/level/storage/loot/entries/LootPoolEntryContainer$Builder czn$a
	conditions a
	append (Lnet/minecraft/world/level/storage/loot/entries/LootPoolEntryContainer$Builder;)Lnet/minecraft/world/level/storage/loot/entries/EntryGroup$Builder; b
	build ()Lnet/minecraft/world/level/storage/loot/entries/LootPoolEntryContainer; b
	getConditions ()[Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition; f
	getThis ()Lnet/minecraft/world/level/storage/loot/entries/LootPoolEntryContainer$Builder; d
	otherwise (Lnet/minecraft/world/level/storage/loot/entries/LootPoolEntryContainer$Builder;)Lnet/minecraft/world/level/storage/loot/entries/AlternativesEntry$Builder; a
	then (Lnet/minecraft/world/level/storage/loot/entries/LootPoolEntryContainer$Builder;)Lnet/minecraft/world/level/storage/loot/entries/SequentialEntry$Builder; c
	unwrap ()Ljava/lang/Object; c
	unwrap ()Lnet/minecraft/world/level/storage/loot/entries/LootPoolEntryContainer$Builder; e
	when (Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition$Builder;)Ljava/lang/Object; b
	when (Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition$Builder;)Lnet/minecraft/world/level/storage/loot/entries/LootPoolEntryContainer$Builder; a
net/minecraft/world/level/storage/loot/entries/LootPoolEntryContainer$Serializer czn$b
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Ljava/lang/Object; a
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Lnet/minecraft/world/level/storage/loot/entries/LootPoolEntryContainer; b
	deserializeCustom (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition;)Lnet/minecraft/world/level/storage/loot/entries/LootPoolEntryContainer; b
	serialize (Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V a
	serialize (Lcom/google/gson/JsonObject;Lnet/minecraft/world/level/storage/loot/entries/LootPoolEntryContainer;Lcom/google/gson/JsonSerializationContext;)V b
	serializeCustom (Lcom/google/gson/JsonObject;Lnet/minecraft/world/level/storage/loot/entries/LootPoolEntryContainer;Lcom/google/gson/JsonSerializationContext;)V a
net/minecraft/world/level/storage/loot/entries/LootPoolEntryType czo
net/minecraft/world/level/storage/loot/entries/LootPoolSingletonContainer czp
	compositeFunction g
	entry h
	functions f
	quality e
	weight c
	createItemStack (Ljava/util/function/Consumer;Lnet/minecraft/world/level/storage/loot/LootContext;)V a
	simpleBuilder (Lnet/minecraft/world/level/storage/loot/entries/LootPoolSingletonContainer$EntryConstructor;)Lnet/minecraft/world/level/storage/loot/entries/LootPoolSingletonContainer$Builder; a
	validate (Lnet/minecraft/world/level/storage/loot/ValidationContext;)V a
net/minecraft/world/level/storage/loot/entries/LootPoolSingletonContainer$Builder czp$a
	functions c
	quality b
	weight a
	apply (Lnet/minecraft/world/level/storage/loot/functions/LootItemFunction$Builder;)Ljava/lang/Object; b
	apply (Lnet/minecraft/world/level/storage/loot/functions/LootItemFunction$Builder;)Lnet/minecraft/world/level/storage/loot/entries/LootPoolSingletonContainer$Builder; a
	getFunctions ()[Lnet/minecraft/world/level/storage/loot/functions/LootItemFunction; a
	setQuality (I)Lnet/minecraft/world/level/storage/loot/entries/LootPoolSingletonContainer$Builder; b
	setWeight (I)Lnet/minecraft/world/level/storage/loot/entries/LootPoolSingletonContainer$Builder; a
net/minecraft/world/level/storage/loot/entries/LootPoolSingletonContainer$DummyBuilder czp$b
	constructor c
	build ()Lnet/minecraft/world/level/storage/loot/entries/LootPoolEntryContainer; b
	getThis ()Lnet/minecraft/world/level/storage/loot/entries/LootPoolEntryContainer$Builder; d
	getThis ()Lnet/minecraft/world/level/storage/loot/entries/LootPoolSingletonContainer$DummyBuilder; g
net/minecraft/world/level/storage/loot/entries/LootPoolSingletonContainer$EntryBase czp$c
	getWeight (F)I a
net/minecraft/world/level/storage/loot/entries/LootPoolSingletonContainer$EntryConstructor czp$d
net/minecraft/world/level/storage/loot/entries/LootPoolSingletonContainer$Serializer czp$e
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;II[Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition;[Lnet/minecraft/world/level/storage/loot/functions/LootItemFunction;)Lnet/minecraft/world/level/storage/loot/entries/LootPoolSingletonContainer; b
	deserializeCustom (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition;)Lnet/minecraft/world/level/storage/loot/entries/LootPoolEntryContainer; b
	deserializeCustom (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition;)Lnet/minecraft/world/level/storage/loot/entries/LootPoolSingletonContainer; a
	serializeCustom (Lcom/google/gson/JsonObject;Lnet/minecraft/world/level/storage/loot/entries/LootPoolEntryContainer;Lcom/google/gson/JsonSerializationContext;)V a
	serializeCustom (Lcom/google/gson/JsonObject;Lnet/minecraft/world/level/storage/loot/entries/LootPoolSingletonContainer;Lcom/google/gson/JsonSerializationContext;)V a
net/minecraft/world/level/storage/loot/entries/LootTableReference czq
	name g
	createItemStack (Ljava/util/function/Consumer;Lnet/minecraft/world/level/storage/loot/LootContext;)V a
	getType ()Lnet/minecraft/world/level/storage/loot/entries/LootPoolEntryType; a
	lootTableReference (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/world/level/storage/loot/entries/LootPoolSingletonContainer$Builder; a
	validate (Lnet/minecraft/world/level/storage/loot/ValidationContext;)V a
net/minecraft/world/level/storage/loot/entries/LootTableReference$Serializer czq$a
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;II[Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition;[Lnet/minecraft/world/level/storage/loot/functions/LootItemFunction;)Lnet/minecraft/world/level/storage/loot/entries/LootPoolSingletonContainer; b
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;II[Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition;[Lnet/minecraft/world/level/storage/loot/functions/LootItemFunction;)Lnet/minecraft/world/level/storage/loot/entries/LootTableReference; a
	serializeCustom (Lcom/google/gson/JsonObject;Lnet/minecraft/world/level/storage/loot/entries/LootPoolEntryContainer;Lcom/google/gson/JsonSerializationContext;)V a
	serializeCustom (Lcom/google/gson/JsonObject;Lnet/minecraft/world/level/storage/loot/entries/LootPoolSingletonContainer;Lcom/google/gson/JsonSerializationContext;)V a
	serializeCustom (Lcom/google/gson/JsonObject;Lnet/minecraft/world/level/storage/loot/entries/LootTableReference;Lcom/google/gson/JsonSerializationContext;)V a
net/minecraft/world/level/storage/loot/entries/SequentialEntry czr
	compose ([Lnet/minecraft/world/level/storage/loot/entries/ComposableEntryContainer;)Lnet/minecraft/world/level/storage/loot/entries/ComposableEntryContainer; a
	getType ()Lnet/minecraft/world/level/storage/loot/entries/LootPoolEntryType; a
	sequential ([Lnet/minecraft/world/level/storage/loot/entries/LootPoolEntryContainer$Builder;)Lnet/minecraft/world/level/storage/loot/entries/SequentialEntry$Builder; a
net/minecraft/world/level/storage/loot/entries/SequentialEntry$Builder czr$a
	entries a
	build ()Lnet/minecraft/world/level/storage/loot/entries/LootPoolEntryContainer; b
	getThis ()Lnet/minecraft/world/level/storage/loot/entries/LootPoolEntryContainer$Builder; d
	getThis ()Lnet/minecraft/world/level/storage/loot/entries/SequentialEntry$Builder; a
	then (Lnet/minecraft/world/level/storage/loot/entries/LootPoolEntryContainer$Builder;)Lnet/minecraft/world/level/storage/loot/entries/SequentialEntry$Builder; c
net/minecraft/world/level/storage/loot/entries/TagEntry czs
	expand h
	tag g
	createItemStack (Ljava/util/function/Consumer;Lnet/minecraft/world/level/storage/loot/LootContext;)V a
	expandTag (Lnet/minecraft/tags/Tag;)Lnet/minecraft/world/level/storage/loot/entries/LootPoolSingletonContainer$Builder; b
	expandTag (Lnet/minecraft/world/level/storage/loot/LootContext;Ljava/util/function/Consumer;)Z a
	getType ()Lnet/minecraft/world/level/storage/loot/entries/LootPoolEntryType; a
	tagContents (Lnet/minecraft/tags/Tag;)Lnet/minecraft/world/level/storage/loot/entries/LootPoolSingletonContainer$Builder; a
net/minecraft/world/level/storage/loot/entries/TagEntry$Serializer czs$a
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;II[Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition;[Lnet/minecraft/world/level/storage/loot/functions/LootItemFunction;)Lnet/minecraft/world/level/storage/loot/entries/LootPoolSingletonContainer; b
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;II[Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition;[Lnet/minecraft/world/level/storage/loot/functions/LootItemFunction;)Lnet/minecraft/world/level/storage/loot/entries/TagEntry; a
	serializeCustom (Lcom/google/gson/JsonObject;Lnet/minecraft/world/level/storage/loot/entries/LootPoolEntryContainer;Lcom/google/gson/JsonSerializationContext;)V a
	serializeCustom (Lcom/google/gson/JsonObject;Lnet/minecraft/world/level/storage/loot/entries/LootPoolSingletonContainer;Lcom/google/gson/JsonSerializationContext;)V a
	serializeCustom (Lcom/google/gson/JsonObject;Lnet/minecraft/world/level/storage/loot/entries/TagEntry;Lcom/google/gson/JsonSerializationContext;)V a
net/minecraft/world/level/storage/loot/functions/ApplyBonusCount czu
	FORMULAS a
	enchantment b
	formula d
	addBonusBinomialDistributionCount (Lnet/minecraft/world/item/enchantment/Enchantment;FI)Lnet/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction$Builder; a
	addOreBonusCount (Lnet/minecraft/world/item/enchantment/Enchantment;)Lnet/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction$Builder; a
	addUniformBonusCount (Lnet/minecraft/world/item/enchantment/Enchantment;)Lnet/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction$Builder; b
	addUniformBonusCount (Lnet/minecraft/world/item/enchantment/Enchantment;I)Lnet/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction$Builder; a
	getReferencedContextParams ()Ljava/util/Set; a
	getType ()Lnet/minecraft/world/level/storage/loot/functions/LootItemFunctionType; b
	run (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/storage/loot/LootContext;)Lnet/minecraft/world/item/ItemStack; a
net/minecraft/world/level/storage/loot/functions/ApplyBonusCount$BinomialWithBonusCount czu$a
	TYPE a
	extraRounds b
	probability c
	calculateNewCount (Ljava/util/Random;II)I a
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Lnet/minecraft/world/level/storage/loot/functions/ApplyBonusCount$Formula; a
	getType ()Lnet/minecraft/resources/ResourceLocation; a
	serializeParams (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonSerializationContext;)V a
net/minecraft/world/level/storage/loot/functions/ApplyBonusCount$Formula czu$b
	calculateNewCount (Ljava/util/Random;II)I a
	getType ()Lnet/minecraft/resources/ResourceLocation; a
	serializeParams (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonSerializationContext;)V a
net/minecraft/world/level/storage/loot/functions/ApplyBonusCount$FormulaDeserializer czu$c
net/minecraft/world/level/storage/loot/functions/ApplyBonusCount$OreDrops czu$d
	TYPE a
	calculateNewCount (Ljava/util/Random;II)I a
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Lnet/minecraft/world/level/storage/loot/functions/ApplyBonusCount$Formula; a
	getType ()Lnet/minecraft/resources/ResourceLocation; a
	serializeParams (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonSerializationContext;)V a
net/minecraft/world/level/storage/loot/functions/ApplyBonusCount$Serializer czu$e
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition;)Lnet/minecraft/world/level/storage/loot/functions/ApplyBonusCount; a
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition;)Lnet/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction; b
	serialize (Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V a
	serialize (Lcom/google/gson/JsonObject;Lnet/minecraft/world/level/storage/loot/functions/ApplyBonusCount;Lcom/google/gson/JsonSerializationContext;)V a
	serialize (Lcom/google/gson/JsonObject;Lnet/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction;Lcom/google/gson/JsonSerializationContext;)V a
net/minecraft/world/level/storage/loot/functions/ApplyBonusCount$UniformBonusCount czu$f
	TYPE a
	bonusMultiplier b
	calculateNewCount (Ljava/util/Random;II)I a
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Lnet/minecraft/world/level/storage/loot/functions/ApplyBonusCount$Formula; a
	getType ()Lnet/minecraft/resources/ResourceLocation; a
	serializeParams (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonSerializationContext;)V a
net/minecraft/world/level/storage/loot/functions/ApplyExplosionDecay czv
	explosionDecay ()Lnet/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction$Builder; c
	getType ()Lnet/minecraft/world/level/storage/loot/functions/LootItemFunctionType; b
	run (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/storage/loot/LootContext;)Lnet/minecraft/world/item/ItemStack; a
net/minecraft/world/level/storage/loot/functions/ApplyExplosionDecay$Serializer czv$a
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition;)Lnet/minecraft/world/level/storage/loot/functions/ApplyExplosionDecay; a
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition;)Lnet/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction; b
net/minecraft/world/level/storage/loot/functions/CopyBlockState czw
	block a
	properties b
	copyState (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/world/level/storage/loot/functions/CopyBlockState$Builder; a
	getReferencedContextParams ()Ljava/util/Set; a
	getType ()Lnet/minecraft/world/level/storage/loot/functions/LootItemFunctionType; b
	run (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/storage/loot/LootContext;)Lnet/minecraft/world/item/ItemStack; a
	serialize (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/state/properties/Property;)Ljava/lang/String; a
net/minecraft/world/level/storage/loot/functions/CopyBlockState$Builder czw$a
	block a
	properties b
	build ()Lnet/minecraft/world/level/storage/loot/functions/LootItemFunction; b
	copy (Lnet/minecraft/world/level/block/state/properties/Property;)Lnet/minecraft/world/level/storage/loot/functions/CopyBlockState$Builder; a
	getThis ()Lnet/minecraft/world/level/storage/loot/functions/CopyBlockState$Builder; a
	getThis ()Lnet/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction$Builder; d
net/minecraft/world/level/storage/loot/functions/CopyBlockState$Serializer czw$b
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition;)Lnet/minecraft/world/level/storage/loot/functions/CopyBlockState; a
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition;)Lnet/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction; b
	serialize (Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V a
	serialize (Lcom/google/gson/JsonObject;Lnet/minecraft/world/level/storage/loot/functions/CopyBlockState;Lcom/google/gson/JsonSerializationContext;)V a
	serialize (Lcom/google/gson/JsonObject;Lnet/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction;Lcom/google/gson/JsonSerializationContext;)V a
net/minecraft/world/level/storage/loot/functions/CopyNameFunction czx
	source a
	copyName (Lnet/minecraft/world/level/storage/loot/functions/CopyNameFunction$NameSource;)Lnet/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction$Builder; a
	getReferencedContextParams ()Ljava/util/Set; a
	getType ()Lnet/minecraft/world/level/storage/loot/functions/LootItemFunctionType; b
	run (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/storage/loot/LootContext;)Lnet/minecraft/world/item/ItemStack; a
net/minecraft/world/level/storage/loot/functions/CopyNameFunction$NameSource czx$a
	$VALUES g
	BLOCK_ENTITY d
	KILLER b
	KILLER_PLAYER c
	THIS a
	name e
	param f
	getByName (Ljava/lang/String;)Lnet/minecraft/world/level/storage/loot/functions/CopyNameFunction$NameSource; a
net/minecraft/world/level/storage/loot/functions/CopyNameFunction$Serializer czx$b
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition;)Lnet/minecraft/world/level/storage/loot/functions/CopyNameFunction; a
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition;)Lnet/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction; b
	serialize (Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V a
	serialize (Lcom/google/gson/JsonObject;Lnet/minecraft/world/level/storage/loot/functions/CopyNameFunction;Lcom/google/gson/JsonSerializationContext;)V a
	serialize (Lcom/google/gson/JsonObject;Lnet/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction;Lcom/google/gson/JsonSerializationContext;)V a
net/minecraft/world/level/storage/loot/functions/CopyNbtFunction czy
	BLOCK_ENTITY_GETTER e
	ENTITY_GETTER d
	operations b
	source a
	compileNbtPath (Ljava/lang/String;)Lnet/minecraft/commands/arguments/NbtPathArgument$NbtPath; b
	copyData (Lnet/minecraft/world/level/storage/loot/functions/CopyNbtFunction$DataSource;)Lnet/minecraft/world/level/storage/loot/functions/CopyNbtFunction$Builder; a
	getReferencedContextParams ()Ljava/util/Set; a
	getType ()Lnet/minecraft/world/level/storage/loot/functions/LootItemFunctionType; b
	run (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/storage/loot/LootContext;)Lnet/minecraft/world/item/ItemStack; a
net/minecraft/world/level/storage/loot/functions/CopyNbtFunction$Builder czy$a
	ops b
	source a
	build ()Lnet/minecraft/world/level/storage/loot/functions/LootItemFunction; b
	copy (Ljava/lang/String;Ljava/lang/String;)Lnet/minecraft/world/level/storage/loot/functions/CopyNbtFunction$Builder; a
	copy (Ljava/lang/String;Ljava/lang/String;Lnet/minecraft/world/level/storage/loot/functions/CopyNbtFunction$MergeStrategy;)Lnet/minecraft/world/level/storage/loot/functions/CopyNbtFunction$Builder; a
	getThis ()Lnet/minecraft/world/level/storage/loot/functions/CopyNbtFunction$Builder; a
	getThis ()Lnet/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction$Builder; d
net/minecraft/world/level/storage/loot/functions/CopyNbtFunction$CopyOperation czy$b
	op e
	sourcePath b
	sourcePathText a
	targetPath d
	targetPathText c
	apply (Ljava/util/function/Supplier;Lnet/minecraft/nbt/Tag;)V a
	fromJson (Lcom/google/gson/JsonObject;)Lnet/minecraft/world/level/storage/loot/functions/CopyNbtFunction$CopyOperation; a
	toJson ()Lcom/google/gson/JsonObject; a
net/minecraft/world/level/storage/loot/functions/CopyNbtFunction$DataSource czy$c
	$VALUES h
	BLOCK_ENTITY d
	KILLER b
	KILLER_PLAYER c
	THIS a
	getter g
	name e
	param f
	getByName (Ljava/lang/String;)Lnet/minecraft/world/level/storage/loot/functions/CopyNbtFunction$DataSource; a
net/minecraft/world/level/storage/loot/functions/CopyNbtFunction$MergeStrategy czy$d
	$VALUES e
	APPEND b
	MERGE c
	REPLACE a
	name d
	getByName (Ljava/lang/String;)Lnet/minecraft/world/level/storage/loot/functions/CopyNbtFunction$MergeStrategy; a
	merge (Lnet/minecraft/nbt/Tag;Lnet/minecraft/commands/arguments/NbtPathArgument$NbtPath;Ljava/util/List;)V a
net/minecraft/world/level/storage/loot/functions/CopyNbtFunction$Serializer czy$e
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition;)Lnet/minecraft/world/level/storage/loot/functions/CopyNbtFunction; a
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition;)Lnet/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction; b
	serialize (Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V a
	serialize (Lcom/google/gson/JsonObject;Lnet/minecraft/world/level/storage/loot/functions/CopyNbtFunction;Lcom/google/gson/JsonSerializationContext;)V a
	serialize (Lcom/google/gson/JsonObject;Lnet/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction;Lcom/google/gson/JsonSerializationContext;)V a
net/minecraft/world/level/storage/loot/functions/EnchantRandomlyFunction czz
	LOGGER a
	enchantments b
	enchantItem (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/item/enchantment/Enchantment;Ljava/util/Random;)Lnet/minecraft/world/item/ItemStack; a
	getType ()Lnet/minecraft/world/level/storage/loot/functions/LootItemFunctionType; b
	randomApplicableEnchantment ()Lnet/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction$Builder; d
	randomEnchantment ()Lnet/minecraft/world/level/storage/loot/functions/EnchantRandomlyFunction$Builder; c
	run (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/storage/loot/LootContext;)Lnet/minecraft/world/item/ItemStack; a
net/minecraft/world/level/storage/loot/functions/EnchantRandomlyFunction$Builder czz$a
	enchantments a
	build ()Lnet/minecraft/world/level/storage/loot/functions/LootItemFunction; b
	getThis ()Lnet/minecraft/world/level/storage/loot/functions/EnchantRandomlyFunction$Builder; a
	getThis ()Lnet/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction$Builder; d
	withEnchantment (Lnet/minecraft/world/item/enchantment/Enchantment;)Lnet/minecraft/world/level/storage/loot/functions/EnchantRandomlyFunction$Builder; a
net/minecraft/world/level/storage/loot/functions/EnchantRandomlyFunction$Serializer czz$b
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition;)Lnet/minecraft/world/level/storage/loot/functions/EnchantRandomlyFunction; a
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition;)Lnet/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction; b
	serialize (Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V a
	serialize (Lcom/google/gson/JsonObject;Lnet/minecraft/world/level/storage/loot/functions/EnchantRandomlyFunction;Lcom/google/gson/JsonSerializationContext;)V a
	serialize (Lcom/google/gson/JsonObject;Lnet/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction;Lcom/google/gson/JsonSerializationContext;)V a
net/minecraft/world/level/storage/loot/functions/EnchantWithLevelsFunction daa
	levels a
	treasure b
	enchantWithLevels (Lnet/minecraft/world/level/storage/loot/RandomIntGenerator;)Lnet/minecraft/world/level/storage/loot/functions/EnchantWithLevelsFunction$Builder; a
	getType ()Lnet/minecraft/world/level/storage/loot/functions/LootItemFunctionType; b
	run (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/storage/loot/LootContext;)Lnet/minecraft/world/item/ItemStack; a
net/minecraft/world/level/storage/loot/functions/EnchantWithLevelsFunction$Builder daa$a
	levels a
	treasure b
	allowTreasure ()Lnet/minecraft/world/level/storage/loot/functions/EnchantWithLevelsFunction$Builder; e
	build ()Lnet/minecraft/world/level/storage/loot/functions/LootItemFunction; b
	getThis ()Lnet/minecraft/world/level/storage/loot/functions/EnchantWithLevelsFunction$Builder; a
	getThis ()Lnet/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction$Builder; d
net/minecraft/world/level/storage/loot/functions/EnchantWithLevelsFunction$Serializer daa$b
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition;)Lnet/minecraft/world/level/storage/loot/functions/EnchantWithLevelsFunction; a
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition;)Lnet/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction; b
	serialize (Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V a
	serialize (Lcom/google/gson/JsonObject;Lnet/minecraft/world/level/storage/loot/functions/EnchantWithLevelsFunction;Lcom/google/gson/JsonSerializationContext;)V a
	serialize (Lcom/google/gson/JsonObject;Lnet/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction;Lcom/google/gson/JsonSerializationContext;)V a
net/minecraft/world/level/storage/loot/functions/ExplorationMapFunction dab
	DEFAULT_DECORATION b
	DEFAULT_FEATURE a
	LOGGER d
	destination e
	mapDecoration f
	searchRadius h
	skipKnownStructures i
	zoom g
	getReferencedContextParams ()Ljava/util/Set; a
	getType ()Lnet/minecraft/world/level/storage/loot/functions/LootItemFunctionType; b
	makeExplorationMap ()Lnet/minecraft/world/level/storage/loot/functions/ExplorationMapFunction$Builder; c
	run (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/storage/loot/LootContext;)Lnet/minecraft/world/item/ItemStack; a
net/minecraft/world/level/storage/loot/functions/ExplorationMapFunction$Builder dab$a
	destination a
	mapDecoration b
	searchRadius d
	skipKnownStructures e
	zoom c
	build ()Lnet/minecraft/world/level/storage/loot/functions/LootItemFunction; b
	getThis ()Lnet/minecraft/world/level/storage/loot/functions/ExplorationMapFunction$Builder; a
	getThis ()Lnet/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction$Builder; d
	setDestination (Lnet/minecraft/world/level/levelgen/feature/StructureFeature;)Lnet/minecraft/world/level/storage/loot/functions/ExplorationMapFunction$Builder; a
	setMapDecoration (Lnet/minecraft/world/level/saveddata/maps/MapDecoration$Type;)Lnet/minecraft/world/level/storage/loot/functions/ExplorationMapFunction$Builder; a
	setSearchRadius (I)Lnet/minecraft/world/level/storage/loot/functions/ExplorationMapFunction$Builder; a
	setSkipKnownStructures (Z)Lnet/minecraft/world/level/storage/loot/functions/ExplorationMapFunction$Builder; a
	setZoom (B)Lnet/minecraft/world/level/storage/loot/functions/ExplorationMapFunction$Builder; a
net/minecraft/world/level/storage/loot/functions/ExplorationMapFunction$Serializer dab$b
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition;)Lnet/minecraft/world/level/storage/loot/functions/ExplorationMapFunction; a
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition;)Lnet/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction; b
	readStructure (Lcom/google/gson/JsonObject;)Lnet/minecraft/world/level/levelgen/feature/StructureFeature; a
	serialize (Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V a
	serialize (Lcom/google/gson/JsonObject;Lnet/minecraft/world/level/storage/loot/functions/ExplorationMapFunction;Lcom/google/gson/JsonSerializationContext;)V a
	serialize (Lcom/google/gson/JsonObject;Lnet/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction;Lcom/google/gson/JsonSerializationContext;)V a
net/minecraft/world/level/storage/loot/functions/FillPlayerHead dac
	entityTarget a
	fillPlayerHead (Lnet/minecraft/world/level/storage/loot/LootContext$EntityTarget;)Lnet/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction$Builder; a
	getReferencedContextParams ()Ljava/util/Set; a
	getType ()Lnet/minecraft/world/level/storage/loot/functions/LootItemFunctionType; b
	run (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/storage/loot/LootContext;)Lnet/minecraft/world/item/ItemStack; a
net/minecraft/world/level/storage/loot/functions/FillPlayerHead$Serializer dac$a
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition;)Lnet/minecraft/world/level/storage/loot/functions/FillPlayerHead; a
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition;)Lnet/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction; b
	serialize (Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V a
	serialize (Lcom/google/gson/JsonObject;Lnet/minecraft/world/level/storage/loot/functions/FillPlayerHead;Lcom/google/gson/JsonSerializationContext;)V a
	serialize (Lcom/google/gson/JsonObject;Lnet/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction;Lcom/google/gson/JsonSerializationContext;)V a
net/minecraft/world/level/storage/loot/functions/FunctionUserBuilder dad
	apply (Lnet/minecraft/world/level/storage/loot/functions/LootItemFunction$Builder;)Ljava/lang/Object; b
	unwrap ()Ljava/lang/Object; c
net/minecraft/world/level/storage/loot/functions/LimitCount dae
	limiter a
	getType ()Lnet/minecraft/world/level/storage/loot/functions/LootItemFunctionType; b
	limitCount (Lnet/minecraft/world/level/storage/loot/IntLimiter;)Lnet/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction$Builder; a
	run (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/storage/loot/LootContext;)Lnet/minecraft/world/item/ItemStack; a
net/minecraft/world/level/storage/loot/functions/LimitCount$Serializer dae$a
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition;)Lnet/minecraft/world/level/storage/loot/functions/LimitCount; a
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition;)Lnet/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction; b
	serialize (Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V a
	serialize (Lcom/google/gson/JsonObject;Lnet/minecraft/world/level/storage/loot/functions/LimitCount;Lcom/google/gson/JsonSerializationContext;)V a
	serialize (Lcom/google/gson/JsonObject;Lnet/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction;Lcom/google/gson/JsonSerializationContext;)V a
net/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction daf
	compositePredicates a
	predicates c
	apply (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/storage/loot/LootContext;)Lnet/minecraft/world/item/ItemStack; b
	run (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/storage/loot/LootContext;)Lnet/minecraft/world/item/ItemStack; a
	simpleBuilder (Ljava/util/function/Function;)Lnet/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction$Builder; a
	validate (Lnet/minecraft/world/level/storage/loot/ValidationContext;)V a
net/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction$Builder daf$a
	conditions a
	getConditions ()[Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition; g
	getThis ()Lnet/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction$Builder; d
	unwrap ()Ljava/lang/Object; c
	unwrap ()Lnet/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction$Builder; f
	when (Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition$Builder;)Ljava/lang/Object; b
	when (Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition$Builder;)Lnet/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction$Builder; a
net/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction$DummyBuilder daf$b
	constructor a
	build ()Lnet/minecraft/world/level/storage/loot/functions/LootItemFunction; b
	getThis ()Lnet/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction$Builder; d
	getThis ()Lnet/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction$DummyBuilder; a
net/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction$Serializer daf$c
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Ljava/lang/Object; a
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Lnet/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction; b
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition;)Lnet/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction; b
	serialize (Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V a
	serialize (Lcom/google/gson/JsonObject;Lnet/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction;Lcom/google/gson/JsonSerializationContext;)V a
net/minecraft/world/level/storage/loot/functions/LootItemFunction dag
	decorate (Ljava/util/function/BiFunction;Ljava/util/function/Consumer;Lnet/minecraft/world/level/storage/loot/LootContext;)Ljava/util/function/Consumer; a
	getType ()Lnet/minecraft/world/level/storage/loot/functions/LootItemFunctionType; b
net/minecraft/world/level/storage/loot/functions/LootItemFunction$Builder dag$a
	build ()Lnet/minecraft/world/level/storage/loot/functions/LootItemFunction; b
net/minecraft/world/level/storage/loot/functions/LootItemFunctionType dah
net/minecraft/world/level/storage/loot/functions/LootItemFunctions dai
	APPLY_BONUS p
	COPY_NAME m
	COPY_NBT u
	COPY_STATE v
	ENCHANT_RANDOMLY d
	ENCHANT_WITH_LEVELS c
	EXPLORATION_MAP k
	EXPLOSION_DECAY r
	FILL_PLAYER_HEAD t
	FURNACE_SMELT f
	IDENTITY a
	LIMIT_COUNT o
	LOOTING_ENCHANT g
	SET_ATTRIBUTES i
	SET_CONTENTS n
	SET_COUNT b
	SET_DAMAGE h
	SET_LOOT_TABLE q
	SET_LORE s
	SET_NAME j
	SET_NBT e
	SET_STEW_EFFECT l
	compose ([Ljava/util/function/BiFunction;)Ljava/util/function/BiFunction; a
	createGsonAdapter ()Ljava/lang/Object; a
	register (Ljava/lang/String;Lnet/minecraft/world/level/storage/loot/Serializer;)Lnet/minecraft/world/level/storage/loot/functions/LootItemFunctionType; a
net/minecraft/world/level/storage/loot/functions/LootingEnchantFunction daj
	limit b
	value a
	getReferencedContextParams ()Ljava/util/Set; a
	getType ()Lnet/minecraft/world/level/storage/loot/functions/LootItemFunctionType; b
	hasLimit ()Z c
	lootingMultiplier (Lnet/minecraft/world/level/storage/loot/RandomValueBounds;)Lnet/minecraft/world/level/storage/loot/functions/LootingEnchantFunction$Builder; a
	run (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/storage/loot/LootContext;)Lnet/minecraft/world/item/ItemStack; a
net/minecraft/world/level/storage/loot/functions/LootingEnchantFunction$Builder daj$a
	count a
	limit b
	build ()Lnet/minecraft/world/level/storage/loot/functions/LootItemFunction; b
	getThis ()Lnet/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction$Builder; d
	getThis ()Lnet/minecraft/world/level/storage/loot/functions/LootingEnchantFunction$Builder; a
	setLimit (I)Lnet/minecraft/world/level/storage/loot/functions/LootingEnchantFunction$Builder; a
net/minecraft/world/level/storage/loot/functions/LootingEnchantFunction$Serializer daj$b
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition;)Lnet/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction; b
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition;)Lnet/minecraft/world/level/storage/loot/functions/LootingEnchantFunction; a
	serialize (Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V a
	serialize (Lcom/google/gson/JsonObject;Lnet/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction;Lcom/google/gson/JsonSerializationContext;)V a
	serialize (Lcom/google/gson/JsonObject;Lnet/minecraft/world/level/storage/loot/functions/LootingEnchantFunction;Lcom/google/gson/JsonSerializationContext;)V a
net/minecraft/world/level/storage/loot/functions/SetAttributesFunction dak
	modifiers a
	getType ()Lnet/minecraft/world/level/storage/loot/functions/LootItemFunctionType; b
	modifier (Ljava/lang/String;Lnet/minecraft/world/entity/ai/attributes/Attribute;Lnet/minecraft/world/entity/ai/attributes/AttributeModifier$Operation;Lnet/minecraft/world/level/storage/loot/RandomValueBounds;)Lnet/minecraft/world/level/storage/loot/functions/SetAttributesFunction$ModifierBuilder; a
	run (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/storage/loot/LootContext;)Lnet/minecraft/world/item/ItemStack; a
	setAttributes ()Lnet/minecraft/world/level/storage/loot/functions/SetAttributesFunction$Builder; c
net/minecraft/world/level/storage/loot/functions/SetAttributesFunction$Builder dak$a
	modifiers a
	build ()Lnet/minecraft/world/level/storage/loot/functions/LootItemFunction; b
	getThis ()Lnet/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction$Builder; d
	getThis ()Lnet/minecraft/world/level/storage/loot/functions/SetAttributesFunction$Builder; a
	withModifier (Lnet/minecraft/world/level/storage/loot/functions/SetAttributesFunction$ModifierBuilder;)Lnet/minecraft/world/level/storage/loot/functions/SetAttributesFunction$Builder; a
net/minecraft/world/level/storage/loot/functions/SetAttributesFunction$Modifier dak$b
	amount d
	attribute b
	id e
	name a
	operation c
	slots f
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Lnet/minecraft/world/level/storage/loot/functions/SetAttributesFunction$Modifier; a
	operationFromString (Ljava/lang/String;)Lnet/minecraft/world/entity/ai/attributes/AttributeModifier$Operation; a
	operationToString (Lnet/minecraft/world/entity/ai/attributes/AttributeModifier$Operation;)Ljava/lang/String; a
	serialize (Lcom/google/gson/JsonSerializationContext;)Lcom/google/gson/JsonObject; a
net/minecraft/world/level/storage/loot/functions/SetAttributesFunction$ModifierBuilder dak$c
	amount d
	attribute b
	id e
	name a
	operation c
	slots f
	build ()Lnet/minecraft/world/level/storage/loot/functions/SetAttributesFunction$Modifier; a
	forSlot (Lnet/minecraft/world/entity/EquipmentSlot;)Lnet/minecraft/world/level/storage/loot/functions/SetAttributesFunction$ModifierBuilder; a
	withUuid (Ljava/util/UUID;)Lnet/minecraft/world/level/storage/loot/functions/SetAttributesFunction$ModifierBuilder; a
net/minecraft/world/level/storage/loot/functions/SetAttributesFunction$Serializer dak$d
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition;)Lnet/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction; b
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition;)Lnet/minecraft/world/level/storage/loot/functions/SetAttributesFunction; a
	serialize (Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V a
	serialize (Lcom/google/gson/JsonObject;Lnet/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction;Lcom/google/gson/JsonSerializationContext;)V a
	serialize (Lcom/google/gson/JsonObject;Lnet/minecraft/world/level/storage/loot/functions/SetAttributesFunction;Lcom/google/gson/JsonSerializationContext;)V a
net/minecraft/world/level/storage/loot/functions/SetContainerContents dal
	entries a
	getType ()Lnet/minecraft/world/level/storage/loot/functions/LootItemFunctionType; b
	run (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/storage/loot/LootContext;)Lnet/minecraft/world/item/ItemStack; a
	setContents ()Lnet/minecraft/world/level/storage/loot/functions/SetContainerContents$Builder; c
	validate (Lnet/minecraft/world/level/storage/loot/ValidationContext;)V a
net/minecraft/world/level/storage/loot/functions/SetContainerContents$Builder dal$a
	entries a
	build ()Lnet/minecraft/world/level/storage/loot/functions/LootItemFunction; b
	getThis ()Lnet/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction$Builder; d
	getThis ()Lnet/minecraft/world/level/storage/loot/functions/SetContainerContents$Builder; a
	withEntry (Lnet/minecraft/world/level/storage/loot/entries/LootPoolEntryContainer$Builder;)Lnet/minecraft/world/level/storage/loot/functions/SetContainerContents$Builder; a
net/minecraft/world/level/storage/loot/functions/SetContainerContents$Serializer dal$b
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition;)Lnet/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction; b
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition;)Lnet/minecraft/world/level/storage/loot/functions/SetContainerContents; a
	serialize (Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V a
	serialize (Lcom/google/gson/JsonObject;Lnet/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction;Lcom/google/gson/JsonSerializationContext;)V a
	serialize (Lcom/google/gson/JsonObject;Lnet/minecraft/world/level/storage/loot/functions/SetContainerContents;Lcom/google/gson/JsonSerializationContext;)V a
net/minecraft/world/level/storage/loot/functions/SetContainerLootTable dam
	name a
	seed b
	getType ()Lnet/minecraft/world/level/storage/loot/functions/LootItemFunctionType; b
	run (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/storage/loot/LootContext;)Lnet/minecraft/world/item/ItemStack; a
	validate (Lnet/minecraft/world/level/storage/loot/ValidationContext;)V a
	withLootTable (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction$Builder; a
	withLootTable (Lnet/minecraft/resources/ResourceLocation;J)Lnet/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction$Builder; a
net/minecraft/world/level/storage/loot/functions/SetContainerLootTable$Serializer dam$a
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition;)Lnet/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction; b
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition;)Lnet/minecraft/world/level/storage/loot/functions/SetContainerLootTable; a
	serialize (Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V a
	serialize (Lcom/google/gson/JsonObject;Lnet/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction;Lcom/google/gson/JsonSerializationContext;)V a
	serialize (Lcom/google/gson/JsonObject;Lnet/minecraft/world/level/storage/loot/functions/SetContainerLootTable;Lcom/google/gson/JsonSerializationContext;)V a
net/minecraft/world/level/storage/loot/functions/SetItemCountFunction dan
	value a
	getType ()Lnet/minecraft/world/level/storage/loot/functions/LootItemFunctionType; b
	run (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/storage/loot/LootContext;)Lnet/minecraft/world/item/ItemStack; a
	setCount (Lnet/minecraft/world/level/storage/loot/RandomIntGenerator;)Lnet/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction$Builder; a
net/minecraft/world/level/storage/loot/functions/SetItemCountFunction$Serializer dan$a
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition;)Lnet/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction; b
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition;)Lnet/minecraft/world/level/storage/loot/functions/SetItemCountFunction; a
	serialize (Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V a
	serialize (Lcom/google/gson/JsonObject;Lnet/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction;Lcom/google/gson/JsonSerializationContext;)V a
	serialize (Lcom/google/gson/JsonObject;Lnet/minecraft/world/level/storage/loot/functions/SetItemCountFunction;Lcom/google/gson/JsonSerializationContext;)V a
net/minecraft/world/level/storage/loot/functions/SetItemDamageFunction dao
	LOGGER a
	damage b
	getType ()Lnet/minecraft/world/level/storage/loot/functions/LootItemFunctionType; b
	run (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/storage/loot/LootContext;)Lnet/minecraft/world/item/ItemStack; a
	setDamage (Lnet/minecraft/world/level/storage/loot/RandomValueBounds;)Lnet/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction$Builder; a
net/minecraft/world/level/storage/loot/functions/SetItemDamageFunction$Serializer dao$a
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition;)Lnet/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction; b
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition;)Lnet/minecraft/world/level/storage/loot/functions/SetItemDamageFunction; a
	serialize (Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V a
	serialize (Lcom/google/gson/JsonObject;Lnet/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction;Lcom/google/gson/JsonSerializationContext;)V a
	serialize (Lcom/google/gson/JsonObject;Lnet/minecraft/world/level/storage/loot/functions/SetItemDamageFunction;Lcom/google/gson/JsonSerializationContext;)V a
net/minecraft/world/level/storage/loot/functions/SetLoreFunction dap
	lore b
	replace a
	resolutionContext d
	getLoreTag (Lnet/minecraft/world/item/ItemStack;Z)Lnet/minecraft/nbt/ListTag; a
	getReferencedContextParams ()Ljava/util/Set; a
	getType ()Lnet/minecraft/world/level/storage/loot/functions/LootItemFunctionType; b
	run (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/storage/loot/LootContext;)Lnet/minecraft/world/item/ItemStack; a
	setLore ()Lnet/minecraft/world/level/storage/loot/functions/SetLoreFunction$Builder; c
net/minecraft/world/level/storage/loot/functions/SetLoreFunction$Builder dap$a
	lore c
	replace a
	resolutionContext b
	addLine (Lnet/minecraft/network/chat/Component;)Lnet/minecraft/world/level/storage/loot/functions/SetLoreFunction$Builder; a
	build ()Lnet/minecraft/world/level/storage/loot/functions/LootItemFunction; b
	getThis ()Lnet/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction$Builder; d
	getThis ()Lnet/minecraft/world/level/storage/loot/functions/SetLoreFunction$Builder; a
	setReplace (Z)Lnet/minecraft/world/level/storage/loot/functions/SetLoreFunction$Builder; a
	setResolutionContext (Lnet/minecraft/world/level/storage/loot/LootContext$EntityTarget;)Lnet/minecraft/world/level/storage/loot/functions/SetLoreFunction$Builder; a
net/minecraft/world/level/storage/loot/functions/SetLoreFunction$Serializer dap$b
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition;)Lnet/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction; b
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition;)Lnet/minecraft/world/level/storage/loot/functions/SetLoreFunction; a
	serialize (Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V a
	serialize (Lcom/google/gson/JsonObject;Lnet/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction;Lcom/google/gson/JsonSerializationContext;)V a
	serialize (Lcom/google/gson/JsonObject;Lnet/minecraft/world/level/storage/loot/functions/SetLoreFunction;Lcom/google/gson/JsonSerializationContext;)V a
net/minecraft/world/level/storage/loot/functions/SetNameFunction daq
	LOGGER a
	name b
	resolutionContext d
	createResolver (Lnet/minecraft/world/level/storage/loot/LootContext;Lnet/minecraft/world/level/storage/loot/LootContext$EntityTarget;)Ljava/util/function/UnaryOperator; a
	getReferencedContextParams ()Ljava/util/Set; a
	getType ()Lnet/minecraft/world/level/storage/loot/functions/LootItemFunctionType; b
	run (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/storage/loot/LootContext;)Lnet/minecraft/world/item/ItemStack; a
	setName (Lnet/minecraft/network/chat/Component;)Lnet/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction$Builder; a
	setName (Lnet/minecraft/network/chat/Component;Lnet/minecraft/world/level/storage/loot/LootContext$EntityTarget;)Lnet/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction$Builder; a
net/minecraft/world/level/storage/loot/functions/SetNameFunction$Serializer daq$a
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition;)Lnet/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction; b
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition;)Lnet/minecraft/world/level/storage/loot/functions/SetNameFunction; a
	serialize (Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V a
	serialize (Lcom/google/gson/JsonObject;Lnet/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction;Lcom/google/gson/JsonSerializationContext;)V a
	serialize (Lcom/google/gson/JsonObject;Lnet/minecraft/world/level/storage/loot/functions/SetNameFunction;Lcom/google/gson/JsonSerializationContext;)V a
net/minecraft/world/level/storage/loot/functions/SetNbtFunction dar
	tag a
	getType ()Lnet/minecraft/world/level/storage/loot/functions/LootItemFunctionType; b
	run (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/storage/loot/LootContext;)Lnet/minecraft/world/item/ItemStack; a
	setTag (Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction$Builder; a
net/minecraft/world/level/storage/loot/functions/SetNbtFunction$Serializer dar$a
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition;)Lnet/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction; b
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition;)Lnet/minecraft/world/level/storage/loot/functions/SetNbtFunction; a
	serialize (Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V a
	serialize (Lcom/google/gson/JsonObject;Lnet/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction;Lcom/google/gson/JsonSerializationContext;)V a
	serialize (Lcom/google/gson/JsonObject;Lnet/minecraft/world/level/storage/loot/functions/SetNbtFunction;Lcom/google/gson/JsonSerializationContext;)V a
net/minecraft/world/level/storage/loot/functions/SetStewEffectFunction das
	effectDurationMap a
	getType ()Lnet/minecraft/world/level/storage/loot/functions/LootItemFunctionType; b
	run (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/storage/loot/LootContext;)Lnet/minecraft/world/item/ItemStack; a
	stewEffect ()Lnet/minecraft/world/level/storage/loot/functions/SetStewEffectFunction$Builder; c
net/minecraft/world/level/storage/loot/functions/SetStewEffectFunction$Builder das$a
	effectDurationMap a
	build ()Lnet/minecraft/world/level/storage/loot/functions/LootItemFunction; b
	getThis ()Lnet/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction$Builder; d
	getThis ()Lnet/minecraft/world/level/storage/loot/functions/SetStewEffectFunction$Builder; a
	withEffect (Lnet/minecraft/world/effect/MobEffect;Lnet/minecraft/world/level/storage/loot/RandomValueBounds;)Lnet/minecraft/world/level/storage/loot/functions/SetStewEffectFunction$Builder; a
net/minecraft/world/level/storage/loot/functions/SetStewEffectFunction$Serializer das$b
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition;)Lnet/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction; b
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition;)Lnet/minecraft/world/level/storage/loot/functions/SetStewEffectFunction; a
	serialize (Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V a
	serialize (Lcom/google/gson/JsonObject;Lnet/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction;Lcom/google/gson/JsonSerializationContext;)V a
	serialize (Lcom/google/gson/JsonObject;Lnet/minecraft/world/level/storage/loot/functions/SetStewEffectFunction;Lcom/google/gson/JsonSerializationContext;)V a
net/minecraft/world/level/storage/loot/functions/SmeltItemFunction dat
	LOGGER a
	getType ()Lnet/minecraft/world/level/storage/loot/functions/LootItemFunctionType; b
	run (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/storage/loot/LootContext;)Lnet/minecraft/world/item/ItemStack; a
	smelted ()Lnet/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction$Builder; c
net/minecraft/world/level/storage/loot/functions/SmeltItemFunction$Serializer dat$a
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition;)Lnet/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction; b
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition;)Lnet/minecraft/world/level/storage/loot/functions/SmeltItemFunction; a
net/minecraft/world/level/storage/loot/parameters/LootContextParam daw
	name a
	getName ()Lnet/minecraft/resources/ResourceLocation; a
net/minecraft/world/level/storage/loot/parameters/LootContextParamSet dax
	all b
	required a
	builder ()Lnet/minecraft/world/level/storage/loot/parameters/LootContextParamSet$Builder; c
	getAllowed ()Ljava/util/Set; b
	getRequired ()Ljava/util/Set; a
	isAllowed (Lnet/minecraft/world/level/storage/loot/parameters/LootContextParam;)Z a
	validateUser (Lnet/minecraft/world/level/storage/loot/ValidationContext;Lnet/minecraft/world/level/storage/loot/LootContextUser;)V a
net/minecraft/world/level/storage/loot/parameters/LootContextParamSet$Builder dax$a
	optional b
	required a
	build ()Lnet/minecraft/world/level/storage/loot/parameters/LootContextParamSet; a
	optional (Lnet/minecraft/world/level/storage/loot/parameters/LootContextParam;)Lnet/minecraft/world/level/storage/loot/parameters/LootContextParamSet$Builder; b
	required (Lnet/minecraft/world/level/storage/loot/parameters/LootContextParam;)Lnet/minecraft/world/level/storage/loot/parameters/LootContextParamSet$Builder; a
net/minecraft/world/level/storage/loot/parameters/LootContextParamSets day
	ADVANCEMENT_ENTITY j
	ADVANCEMENT_REWARD i
	ALL_PARAMS k
	BLOCK l
	CHEST b
	COMMAND c
	EMPTY a
	ENTITY f
	FISHING e
	GIFT g
	PIGLIN_BARTER h
	REGISTRY m
	SELECTOR d
	get (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/world/level/storage/loot/parameters/LootContextParamSet; a
	getKey (Lnet/minecraft/world/level/storage/loot/parameters/LootContextParamSet;)Lnet/minecraft/resources/ResourceLocation; a
	register (Ljava/lang/String;Ljava/util/function/Consumer;)Lnet/minecraft/world/level/storage/loot/parameters/LootContextParamSet; a
net/minecraft/world/level/storage/loot/parameters/LootContextParams daz
	BLOCK_ENTITY h
	BLOCK_STATE g
	DAMAGE_SOURCE c
	DIRECT_KILLER_ENTITY e
	EXPLOSION_RADIUS j
	KILLER_ENTITY d
	LAST_DAMAGE_PLAYER b
	ORIGIN f
	THIS_ENTITY a
	TOOL i
	create (Ljava/lang/String;)Lnet/minecraft/world/level/storage/loot/parameters/LootContextParam; a
net/minecraft/world/level/storage/loot/predicates/AlternativeLootItemCondition dbb
	composedPredicate b
	terms a
	alternative ([Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition$Builder;)Lnet/minecraft/world/level/storage/loot/predicates/AlternativeLootItemCondition$Builder; a
	getType ()Lnet/minecraft/world/level/storage/loot/predicates/LootItemConditionType; b
	test (Lnet/minecraft/world/level/storage/loot/LootContext;)Z a
	validate (Lnet/minecraft/world/level/storage/loot/ValidationContext;)V a
net/minecraft/world/level/storage/loot/predicates/AlternativeLootItemCondition$Builder dbb$a
	terms a
	or (Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition$Builder;)Lnet/minecraft/world/level/storage/loot/predicates/AlternativeLootItemCondition$Builder; a
net/minecraft/world/level/storage/loot/predicates/AlternativeLootItemCondition$Serializer dbb$b
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Ljava/lang/Object; a
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Lnet/minecraft/world/level/storage/loot/predicates/AlternativeLootItemCondition; b
	serialize (Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V a
	serialize (Lcom/google/gson/JsonObject;Lnet/minecraft/world/level/storage/loot/predicates/AlternativeLootItemCondition;Lcom/google/gson/JsonSerializationContext;)V a
net/minecraft/world/level/storage/loot/predicates/BonusLevelTableCondition dbc
	enchantment a
	values b
	bonusLevelFlatChance (Lnet/minecraft/world/item/enchantment/Enchantment;[F)Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition$Builder; a
	getReferencedContextParams ()Ljava/util/Set; a
	getType ()Lnet/minecraft/world/level/storage/loot/predicates/LootItemConditionType; b
	test (Lnet/minecraft/world/level/storage/loot/LootContext;)Z a
net/minecraft/world/level/storage/loot/predicates/BonusLevelTableCondition$Serializer dbc$a
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Ljava/lang/Object; a
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Lnet/minecraft/world/level/storage/loot/predicates/BonusLevelTableCondition; b
	serialize (Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V a
	serialize (Lcom/google/gson/JsonObject;Lnet/minecraft/world/level/storage/loot/predicates/BonusLevelTableCondition;Lcom/google/gson/JsonSerializationContext;)V a
net/minecraft/world/level/storage/loot/predicates/ConditionReference dbd
	LOGGER a
	name b
	conditionReference (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition$Builder; a
	getType ()Lnet/minecraft/world/level/storage/loot/predicates/LootItemConditionType; b
	test (Lnet/minecraft/world/level/storage/loot/LootContext;)Z a
	validate (Lnet/minecraft/world/level/storage/loot/ValidationContext;)V a
net/minecraft/world/level/storage/loot/predicates/ConditionReference$Serializer dbd$a
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Ljava/lang/Object; a
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Lnet/minecraft/world/level/storage/loot/predicates/ConditionReference; b
	serialize (Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V a
	serialize (Lcom/google/gson/JsonObject;Lnet/minecraft/world/level/storage/loot/predicates/ConditionReference;Lcom/google/gson/JsonSerializationContext;)V a
net/minecraft/world/level/storage/loot/predicates/ConditionUserBuilder dbe
	unwrap ()Ljava/lang/Object; c
	when (Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition$Builder;)Ljava/lang/Object; b
net/minecraft/world/level/storage/loot/predicates/DamageSourceCondition dbf
	predicate a
	getReferencedContextParams ()Ljava/util/Set; a
	getType ()Lnet/minecraft/world/level/storage/loot/predicates/LootItemConditionType; b
	hasDamageSource (Lnet/minecraft/advancements/critereon/DamageSourcePredicate$Builder;)Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition$Builder; a
	test (Lnet/minecraft/world/level/storage/loot/LootContext;)Z a
net/minecraft/world/level/storage/loot/predicates/DamageSourceCondition$Serializer dbf$a
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Ljava/lang/Object; a
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Lnet/minecraft/world/level/storage/loot/predicates/DamageSourceCondition; b
	serialize (Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V a
	serialize (Lcom/google/gson/JsonObject;Lnet/minecraft/world/level/storage/loot/predicates/DamageSourceCondition;Lcom/google/gson/JsonSerializationContext;)V a
net/minecraft/world/level/storage/loot/predicates/EntityHasScoreCondition dbg
	entityTarget b
	scores a
	getReferencedContextParams ()Ljava/util/Set; a
	getType ()Lnet/minecraft/world/level/storage/loot/predicates/LootItemConditionType; b
	hasScore (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/scores/Scoreboard;Ljava/lang/String;Lnet/minecraft/world/level/storage/loot/RandomValueBounds;)Z a
	hasScores (Lnet/minecraft/world/level/storage/loot/LootContext$EntityTarget;)Lnet/minecraft/world/level/storage/loot/predicates/EntityHasScoreCondition$Builder; a
	test (Lnet/minecraft/world/level/storage/loot/LootContext;)Z a
net/minecraft/world/level/storage/loot/predicates/EntityHasScoreCondition$Builder dbg$a
	entityTarget b
	scores a
	withScore (Ljava/lang/String;Lnet/minecraft/world/level/storage/loot/RandomValueBounds;)Lnet/minecraft/world/level/storage/loot/predicates/EntityHasScoreCondition$Builder; a
net/minecraft/world/level/storage/loot/predicates/EntityHasScoreCondition$Serializer dbg$b
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Ljava/lang/Object; a
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Lnet/minecraft/world/level/storage/loot/predicates/EntityHasScoreCondition; b
	serialize (Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V a
	serialize (Lcom/google/gson/JsonObject;Lnet/minecraft/world/level/storage/loot/predicates/EntityHasScoreCondition;Lcom/google/gson/JsonSerializationContext;)V a
net/minecraft/world/level/storage/loot/predicates/ExplosionCondition dbh
	INSTANCE a
	getReferencedContextParams ()Ljava/util/Set; a
	getType ()Lnet/minecraft/world/level/storage/loot/predicates/LootItemConditionType; b
	survivesExplosion ()Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition$Builder; c
	test (Lnet/minecraft/world/level/storage/loot/LootContext;)Z a
net/minecraft/world/level/storage/loot/predicates/ExplosionCondition$Serializer dbh$a
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Ljava/lang/Object; a
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Lnet/minecraft/world/level/storage/loot/predicates/ExplosionCondition; b
	serialize (Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V a
	serialize (Lcom/google/gson/JsonObject;Lnet/minecraft/world/level/storage/loot/predicates/ExplosionCondition;Lcom/google/gson/JsonSerializationContext;)V a
net/minecraft/world/level/storage/loot/predicates/InvertedLootItemCondition dbi
	term a
	getReferencedContextParams ()Ljava/util/Set; a
	getType ()Lnet/minecraft/world/level/storage/loot/predicates/LootItemConditionType; b
	invert (Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition$Builder;)Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition$Builder; a
	test (Lnet/minecraft/world/level/storage/loot/LootContext;)Z a
	validate (Lnet/minecraft/world/level/storage/loot/ValidationContext;)V a
net/minecraft/world/level/storage/loot/predicates/InvertedLootItemCondition$Serializer dbi$a
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Ljava/lang/Object; a
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Lnet/minecraft/world/level/storage/loot/predicates/InvertedLootItemCondition; b
	serialize (Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V a
	serialize (Lcom/google/gson/JsonObject;Lnet/minecraft/world/level/storage/loot/predicates/InvertedLootItemCondition;Lcom/google/gson/JsonSerializationContext;)V a
net/minecraft/world/level/storage/loot/predicates/LocationCheck dbj
	offset b
	predicate a
	checkLocation (Lnet/minecraft/advancements/critereon/LocationPredicate$Builder;)Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition$Builder; a
	checkLocation (Lnet/minecraft/advancements/critereon/LocationPredicate$Builder;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition$Builder; a
	getType ()Lnet/minecraft/world/level/storage/loot/predicates/LootItemConditionType; b
	test (Lnet/minecraft/world/level/storage/loot/LootContext;)Z a
net/minecraft/world/level/storage/loot/predicates/LocationCheck$Serializer dbj$a
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Ljava/lang/Object; a
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Lnet/minecraft/world/level/storage/loot/predicates/LocationCheck; b
	serialize (Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V a
	serialize (Lcom/google/gson/JsonObject;Lnet/minecraft/world/level/storage/loot/predicates/LocationCheck;Lcom/google/gson/JsonSerializationContext;)V a
net/minecraft/world/level/storage/loot/predicates/LootItemBlockStatePropertyCondition dbk
	block a
	properties b
	getReferencedContextParams ()Ljava/util/Set; a
	getType ()Lnet/minecraft/world/level/storage/loot/predicates/LootItemConditionType; b
	hasBlockStateProperties (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/world/level/storage/loot/predicates/LootItemBlockStatePropertyCondition$Builder; a
	test (Lnet/minecraft/world/level/storage/loot/LootContext;)Z a
net/minecraft/world/level/storage/loot/predicates/LootItemBlockStatePropertyCondition$Builder dbk$a
	block a
	properties b
	setProperties (Lnet/minecraft/advancements/critereon/StatePropertiesPredicate$Builder;)Lnet/minecraft/world/level/storage/loot/predicates/LootItemBlockStatePropertyCondition$Builder; a
net/minecraft/world/level/storage/loot/predicates/LootItemBlockStatePropertyCondition$Serializer dbk$b
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Ljava/lang/Object; a
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Lnet/minecraft/world/level/storage/loot/predicates/LootItemBlockStatePropertyCondition; b
	serialize (Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V a
	serialize (Lcom/google/gson/JsonObject;Lnet/minecraft/world/level/storage/loot/predicates/LootItemBlockStatePropertyCondition;Lcom/google/gson/JsonSerializationContext;)V a
net/minecraft/world/level/storage/loot/predicates/LootItemCondition dbl
	getType ()Lnet/minecraft/world/level/storage/loot/predicates/LootItemConditionType; b
net/minecraft/world/level/storage/loot/predicates/LootItemCondition$Builder dbl$a
	invert ()Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition$Builder; a
	or (Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition$Builder;)Lnet/minecraft/world/level/storage/loot/predicates/AlternativeLootItemCondition$Builder; a
net/minecraft/world/level/storage/loot/predicates/LootItemConditionType dbm
net/minecraft/world/level/storage/loot/predicates/LootItemConditions dbn
	ALTERNATIVE b
	BLOCK_STATE_PROPERTY h
	DAMAGE_SOURCE_PROPERTIES l
	ENTITY_PROPERTIES e
	ENTITY_SCORES g
	INVERTED a
	KILLED_BY_PLAYER f
	LOCATION_CHECK m
	MATCH_TOOL i
	RANDOM_CHANCE c
	RANDOM_CHANCE_WITH_LOOTING d
	REFERENCE o
	SURVIVES_EXPLOSION k
	TABLE_BONUS j
	TIME_CHECK p
	WEATHER_CHECK n
	andConditions ([Ljava/util/function/Predicate;)Ljava/util/function/Predicate; a
	createGsonAdapter ()Ljava/lang/Object; a
	orConditions ([Ljava/util/function/Predicate;)Ljava/util/function/Predicate; b
	register (Ljava/lang/String;Lnet/minecraft/world/level/storage/loot/Serializer;)Lnet/minecraft/world/level/storage/loot/predicates/LootItemConditionType; a
net/minecraft/world/level/storage/loot/predicates/LootItemEntityPropertyCondition dbo
	entityTarget b
	predicate a
	entityPresent (Lnet/minecraft/world/level/storage/loot/LootContext$EntityTarget;)Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition$Builder; a
	getReferencedContextParams ()Ljava/util/Set; a
	getType ()Lnet/minecraft/world/level/storage/loot/predicates/LootItemConditionType; b
	hasProperties (Lnet/minecraft/world/level/storage/loot/LootContext$EntityTarget;Lnet/minecraft/advancements/critereon/EntityPredicate$Builder;)Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition$Builder; a
	hasProperties (Lnet/minecraft/world/level/storage/loot/LootContext$EntityTarget;Lnet/minecraft/advancements/critereon/EntityPredicate;)Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition$Builder; a
	test (Lnet/minecraft/world/level/storage/loot/LootContext;)Z a
net/minecraft/world/level/storage/loot/predicates/LootItemEntityPropertyCondition$Serializer dbo$a
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Ljava/lang/Object; a
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Lnet/minecraft/world/level/storage/loot/predicates/LootItemEntityPropertyCondition; b
	serialize (Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V a
	serialize (Lcom/google/gson/JsonObject;Lnet/minecraft/world/level/storage/loot/predicates/LootItemEntityPropertyCondition;Lcom/google/gson/JsonSerializationContext;)V a
net/minecraft/world/level/storage/loot/predicates/LootItemKilledByPlayerCondition dbp
	INSTANCE a
	getReferencedContextParams ()Ljava/util/Set; a
	getType ()Lnet/minecraft/world/level/storage/loot/predicates/LootItemConditionType; b
	killedByPlayer ()Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition$Builder; c
	test (Lnet/minecraft/world/level/storage/loot/LootContext;)Z a
net/minecraft/world/level/storage/loot/predicates/LootItemKilledByPlayerCondition$Serializer dbp$a
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Ljava/lang/Object; a
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Lnet/minecraft/world/level/storage/loot/predicates/LootItemKilledByPlayerCondition; b
	serialize (Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V a
	serialize (Lcom/google/gson/JsonObject;Lnet/minecraft/world/level/storage/loot/predicates/LootItemKilledByPlayerCondition;Lcom/google/gson/JsonSerializationContext;)V a
net/minecraft/world/level/storage/loot/predicates/LootItemRandomChanceCondition dbq
	probability a
	getType ()Lnet/minecraft/world/level/storage/loot/predicates/LootItemConditionType; b
	randomChance (F)Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition$Builder; a
	test (Lnet/minecraft/world/level/storage/loot/LootContext;)Z a
net/minecraft/world/level/storage/loot/predicates/LootItemRandomChanceCondition$Serializer dbq$a
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Ljava/lang/Object; a
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Lnet/minecraft/world/level/storage/loot/predicates/LootItemRandomChanceCondition; b
	serialize (Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V a
	serialize (Lcom/google/gson/JsonObject;Lnet/minecraft/world/level/storage/loot/predicates/LootItemRandomChanceCondition;Lcom/google/gson/JsonSerializationContext;)V a
net/minecraft/world/level/storage/loot/predicates/LootItemRandomChanceWithLootingCondition dbr
	lootingMultiplier b
	percent a
	getReferencedContextParams ()Ljava/util/Set; a
	getType ()Lnet/minecraft/world/level/storage/loot/predicates/LootItemConditionType; b
	randomChanceAndLootingBoost (FF)Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition$Builder; a
	test (Lnet/minecraft/world/level/storage/loot/LootContext;)Z a
net/minecraft/world/level/storage/loot/predicates/LootItemRandomChanceWithLootingCondition$Serializer dbr$a
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Ljava/lang/Object; a
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Lnet/minecraft/world/level/storage/loot/predicates/LootItemRandomChanceWithLootingCondition; b
	serialize (Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V a
	serialize (Lcom/google/gson/JsonObject;Lnet/minecraft/world/level/storage/loot/predicates/LootItemRandomChanceWithLootingCondition;Lcom/google/gson/JsonSerializationContext;)V a
net/minecraft/world/level/storage/loot/predicates/MatchTool dbs
	predicate a
	getReferencedContextParams ()Ljava/util/Set; a
	getType ()Lnet/minecraft/world/level/storage/loot/predicates/LootItemConditionType; b
	test (Lnet/minecraft/world/level/storage/loot/LootContext;)Z a
	toolMatches (Lnet/minecraft/advancements/critereon/ItemPredicate$Builder;)Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition$Builder; a
net/minecraft/world/level/storage/loot/predicates/MatchTool$Serializer dbs$a
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Ljava/lang/Object; a
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Lnet/minecraft/world/level/storage/loot/predicates/MatchTool; b
	serialize (Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V a
	serialize (Lcom/google/gson/JsonObject;Lnet/minecraft/world/level/storage/loot/predicates/MatchTool;Lcom/google/gson/JsonSerializationContext;)V a
net/minecraft/world/level/storage/loot/predicates/TimeCheck dbt
	period a
	value b
	getType ()Lnet/minecraft/world/level/storage/loot/predicates/LootItemConditionType; b
	test (Lnet/minecraft/world/level/storage/loot/LootContext;)Z a
	time (Lnet/minecraft/world/level/storage/loot/RandomValueBounds;)Lnet/minecraft/world/level/storage/loot/predicates/TimeCheck$Builder; a
net/minecraft/world/level/storage/loot/predicates/TimeCheck$Builder dbt$a
	period a
	value b
	build ()Lnet/minecraft/world/level/storage/loot/predicates/TimeCheck; b
	setPeriod (J)Lnet/minecraft/world/level/storage/loot/predicates/TimeCheck$Builder; a
net/minecraft/world/level/storage/loot/predicates/TimeCheck$Serializer dbt$b
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Ljava/lang/Object; a
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Lnet/minecraft/world/level/storage/loot/predicates/TimeCheck; b
	serialize (Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V a
	serialize (Lcom/google/gson/JsonObject;Lnet/minecraft/world/level/storage/loot/predicates/TimeCheck;Lcom/google/gson/JsonSerializationContext;)V a
net/minecraft/world/level/storage/loot/predicates/WeatherCheck dbu
	isRaining a
	isThundering b
	getType ()Lnet/minecraft/world/level/storage/loot/predicates/LootItemConditionType; b
	test (Lnet/minecraft/world/level/storage/loot/LootContext;)Z a
	weather ()Lnet/minecraft/world/level/storage/loot/predicates/WeatherCheck$Builder; c
net/minecraft/world/level/storage/loot/predicates/WeatherCheck$Builder dbu$a
	isRaining a
	isThundering b
	build ()Lnet/minecraft/world/level/storage/loot/predicates/WeatherCheck; b
	setRaining (Ljava/lang/Boolean;)Lnet/minecraft/world/level/storage/loot/predicates/WeatherCheck$Builder; a
	setThundering (Ljava/lang/Boolean;)Lnet/minecraft/world/level/storage/loot/predicates/WeatherCheck$Builder; b
net/minecraft/world/level/storage/loot/predicates/WeatherCheck$Serializer dbu$b
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Ljava/lang/Object; a
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Lnet/minecraft/world/level/storage/loot/predicates/WeatherCheck; b
	serialize (Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V a
	serialize (Lcom/google/gson/JsonObject;Lnet/minecraft/world/level/storage/loot/predicates/WeatherCheck;Lcom/google/gson/JsonSerializationContext;)V a
net/minecraft/world/level/timers/FunctionCallback dby
	functionId a
	handle (Ljava/lang/Object;Lnet/minecraft/world/level/timers/TimerQueue;J)V a
	handle (Lnet/minecraft/server/MinecraftServer;Lnet/minecraft/world/level/timers/TimerQueue;J)V a
net/minecraft/world/level/timers/FunctionCallback$Serializer dby$a
	deserialize (Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/world/level/timers/FunctionCallback; a
	deserialize (Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/world/level/timers/TimerCallback; b
	serialize (Lnet/minecraft/nbt/CompoundTag;Lnet/minecraft/world/level/timers/FunctionCallback;)V a
	serialize (Lnet/minecraft/nbt/CompoundTag;Lnet/minecraft/world/level/timers/TimerCallback;)V a
net/minecraft/world/level/timers/FunctionTagCallback dbz
	tagId a
	handle (Ljava/lang/Object;Lnet/minecraft/world/level/timers/TimerQueue;J)V a
	handle (Lnet/minecraft/server/MinecraftServer;Lnet/minecraft/world/level/timers/TimerQueue;J)V a
net/minecraft/world/level/timers/FunctionTagCallback$Serializer dbz$a
	deserialize (Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/world/level/timers/FunctionTagCallback; a
	deserialize (Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/world/level/timers/TimerCallback; b
	serialize (Lnet/minecraft/nbt/CompoundTag;Lnet/minecraft/world/level/timers/FunctionTagCallback;)V a
	serialize (Lnet/minecraft/nbt/CompoundTag;Lnet/minecraft/world/level/timers/TimerCallback;)V a
net/minecraft/world/level/timers/TimerCallback dca
	handle (Ljava/lang/Object;Lnet/minecraft/world/level/timers/TimerQueue;J)V a
net/minecraft/world/level/timers/TimerCallback$Serializer dca$a
	cls b
	id a
	deserialize (Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/world/level/timers/TimerCallback; b
	getCls ()Ljava/lang/Class; b
	getId ()Lnet/minecraft/resources/ResourceLocation; a
	serialize (Lnet/minecraft/nbt/CompoundTag;Lnet/minecraft/world/level/timers/TimerCallback;)V a
net/minecraft/world/level/timers/TimerCallbacks dcb
	LOGGER b
	SERVER_CALLBACKS a
	classToSerializer d
	idToSerializer c
	deserialize (Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/world/level/timers/TimerCallback; a
	getSerializer (Ljava/lang/Class;)Lnet/minecraft/world/level/timers/TimerCallback$Serializer; a
	register (Lnet/minecraft/world/level/timers/TimerCallback$Serializer;)Lnet/minecraft/world/level/timers/TimerCallbacks; a
	serialize (Lnet/minecraft/world/level/timers/TimerCallback;)Lnet/minecraft/nbt/CompoundTag; a
net/minecraft/world/level/timers/TimerQueue dcc
	LOGGER a
	callbacksRegistry b
	events e
	queue c
	sequentialId d
	createComparator ()Ljava/util/Comparator; c
	getEventsIds ()Ljava/util/Set; a
	loadEvent (Lnet/minecraft/nbt/CompoundTag;)V a
	remove (Ljava/lang/String;)I a
	schedule (Ljava/lang/String;JLnet/minecraft/world/level/timers/TimerCallback;)V a
	store ()Lnet/minecraft/nbt/ListTag; b
	storeEvent (Lnet/minecraft/world/level/timers/TimerQueue$Event;)Lnet/minecraft/nbt/CompoundTag; a
	tick (Ljava/lang/Object;J)V a
net/minecraft/world/level/timers/TimerQueue$Event dcc$a
	callback d
	id c
	sequentialId b
	triggerTime a
net/minecraft/world/phys/AABB dcf
	maxX d
	maxY e
	maxZ f
	minX a
	minY b
	minZ c
	clip (Ljava/lang/Iterable;Lnet/minecraft/world/phys/Vec3;Lnet/minecraft/world/phys/Vec3;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/phys/BlockHitResult; a
	clip (Lnet/minecraft/world/phys/Vec3;Lnet/minecraft/world/phys/Vec3;)Ljava/util/Optional; b
	clipPoint ([DLnet/minecraft/core/Direction;DDDDDDDDLnet/minecraft/core/Direction;DDD)Lnet/minecraft/core/Direction; a
	clipXCollide (Lnet/minecraft/world/phys/AABB;D)D a
	clipYCollide (Lnet/minecraft/world/phys/AABB;D)D b
	clipZCollide (Lnet/minecraft/world/phys/AABB;D)D c
	contains (DDD)Z e
	contains (Lnet/minecraft/world/phys/Vec3;)Z d
	contract (DDD)Lnet/minecraft/world/phys/AABB; a
	deflate (D)Lnet/minecraft/world/phys/AABB; h
	deflate (DDD)Lnet/minecraft/world/phys/AABB; f
	expandTowards (DDD)Lnet/minecraft/world/phys/AABB; b
	expandTowards (Lnet/minecraft/world/phys/Vec3;)Lnet/minecraft/world/phys/AABB; b
	getCenter ()Lnet/minecraft/world/phys/Vec3; f
	getDirection (Lnet/minecraft/world/phys/AABB;Lnet/minecraft/world/phys/Vec3;[DLnet/minecraft/core/Direction;DDD)Lnet/minecraft/core/Direction; a
	getSize ()D a
	getXsize ()D b
	getYsize ()D c
	getZsize ()D d
	hasNaN ()Z e
	inflate (D)Lnet/minecraft/world/phys/AABB; g
	inflate (DDD)Lnet/minecraft/world/phys/AABB; c
	intersect (Lnet/minecraft/world/phys/AABB;)Lnet/minecraft/world/phys/AABB; a
	intersects (DDDDDD)Z a
	intersects (Lnet/minecraft/world/phys/AABB;)Z c
	intersects (Lnet/minecraft/world/phys/Vec3;Lnet/minecraft/world/phys/Vec3;)Z a
	max (Lnet/minecraft/core/Direction$Axis;)D b
	min (Lnet/minecraft/core/Direction$Axis;)D a
	minmax (Ljava/lang/Iterable;)Lnet/minecraft/world/phys/AABB; a
	minmax (Lnet/minecraft/world/phys/AABB;)Lnet/minecraft/world/phys/AABB; b
	move (DDD)Lnet/minecraft/world/phys/AABB; d
	move (Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/phys/AABB; a
	move (Lnet/minecraft/world/phys/Vec3;)Lnet/minecraft/world/phys/AABB; c
	of (Lnet/minecraft/world/level/levelgen/structure/BoundingBox;)Lnet/minecraft/world/phys/AABB; a
	ofSize (DDD)Lnet/minecraft/world/phys/AABB; g
	setMaxX (D)Lnet/minecraft/world/phys/AABB; d
	setMaxY (D)Lnet/minecraft/world/phys/AABB; e
	setMaxZ (D)Lnet/minecraft/world/phys/AABB; f
	setMinX (D)Lnet/minecraft/world/phys/AABB; a
	setMinY (D)Lnet/minecraft/world/phys/AABB; b
	setMinZ (D)Lnet/minecraft/world/phys/AABB; c
	unitCubeFromLowerCorner (Lnet/minecraft/world/phys/Vec3;)Lnet/minecraft/world/phys/AABB; a
net/minecraft/world/phys/BlockHitResult dcg
	blockPos c
	direction b
	inside e
	miss d
	getBlockPos ()Lnet/minecraft/core/BlockPos; a
	getDirection ()Lnet/minecraft/core/Direction; b
	getType ()Lnet/minecraft/world/phys/HitResult$Type; c
	isInside ()Z d
	miss (Lnet/minecraft/world/phys/Vec3;Lnet/minecraft/core/Direction;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/phys/BlockHitResult; a
	withDirection (Lnet/minecraft/core/Direction;)Lnet/minecraft/world/phys/BlockHitResult; a
	withPosition (Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/phys/BlockHitResult; a
net/minecraft/world/phys/EntityHitResult dch
	entity b
	getEntity ()Lnet/minecraft/world/entity/Entity; a
	getType ()Lnet/minecraft/world/phys/HitResult$Type; c
net/minecraft/world/phys/HitResult dci
	location a
	distanceTo (Lnet/minecraft/world/entity/Entity;)D a
	getLocation ()Lnet/minecraft/world/phys/Vec3; e
	getType ()Lnet/minecraft/world/phys/HitResult$Type; c
net/minecraft/world/phys/HitResult$Type dci$a
	$VALUES d
	BLOCK b
	ENTITY c
	MISS a
net/minecraft/world/phys/Vec2 dcj
	MAX g
	MIN h
	NEG_UNIT_X d
	NEG_UNIT_Y f
	ONE b
	UNIT_X c
	UNIT_Y e
	ZERO a
	x i
	y j
	add (F)Lnet/minecraft/world/phys/Vec2; b
	add (Lnet/minecraft/world/phys/Vec2;)Lnet/minecraft/world/phys/Vec2; b
	distanceToSqr (Lnet/minecraft/world/phys/Vec2;)F d
	dot (Lnet/minecraft/world/phys/Vec2;)F a
	equals (Lnet/minecraft/world/phys/Vec2;)Z c
	length ()F b
	lengthSquared ()F c
	negated ()Lnet/minecraft/world/phys/Vec2; d
	normalized ()Lnet/minecraft/world/phys/Vec2; a
	scale (F)Lnet/minecraft/world/phys/Vec2; a
net/minecraft/world/phys/Vec3 dck
	ZERO a
	x b
	y c
	z d
	add (DDD)Lnet/minecraft/world/phys/Vec3; b
	add (Lnet/minecraft/world/phys/Vec3;)Lnet/minecraft/world/phys/Vec3; e
	align (Ljava/util/EnumSet;)Lnet/minecraft/world/phys/Vec3; a
	atBottomCenterOf (Lnet/minecraft/core/Vec3i;)Lnet/minecraft/world/phys/Vec3; c
	atCenterOf (Lnet/minecraft/core/Vec3i;)Lnet/minecraft/world/phys/Vec3; a
	atLowerCornerOf (Lnet/minecraft/core/Vec3i;)Lnet/minecraft/world/phys/Vec3; b
	closerThan (Lnet/minecraft/core/Position;D)Z a
	cross (Lnet/minecraft/world/phys/Vec3;)Lnet/minecraft/world/phys/Vec3; c
	directionFromRotation (FF)Lnet/minecraft/world/phys/Vec3; a
	directionFromRotation (Lnet/minecraft/world/phys/Vec2;)Lnet/minecraft/world/phys/Vec3; a
	distanceTo (Lnet/minecraft/world/phys/Vec3;)D f
	distanceToSqr (DDD)D c
	distanceToSqr (Lnet/minecraft/world/phys/Vec3;)D g
	dot (Lnet/minecraft/world/phys/Vec3;)D b
	fromRGB24 (I)Lnet/minecraft/world/phys/Vec3; a
	get (Lnet/minecraft/core/Direction$Axis;)D a
	length ()D f
	lengthSqr ()D g
	lerp (Lnet/minecraft/world/phys/Vec3;D)Lnet/minecraft/world/phys/Vec3; a
	multiply (DDD)Lnet/minecraft/world/phys/Vec3; d
	multiply (Lnet/minecraft/world/phys/Vec3;)Lnet/minecraft/world/phys/Vec3; h
	normalize ()Lnet/minecraft/world/phys/Vec3; d
	reverse ()Lnet/minecraft/world/phys/Vec3; e
	scale (D)Lnet/minecraft/world/phys/Vec3; a
	subtract (DDD)Lnet/minecraft/world/phys/Vec3; a
	subtract (Lnet/minecraft/world/phys/Vec3;)Lnet/minecraft/world/phys/Vec3; d
	upFromBottomCenterOf (Lnet/minecraft/core/Vec3i;D)Lnet/minecraft/world/phys/Vec3; a
	vectorTo (Lnet/minecraft/world/phys/Vec3;)Lnet/minecraft/world/phys/Vec3; a
	x ()D a
	xRot (F)Lnet/minecraft/world/phys/Vec3; a
	y ()D b
	yRot (F)Lnet/minecraft/world/phys/Vec3; b
	z ()D c
	zRot (F)Lnet/minecraft/world/phys/Vec3; c
net/minecraft/world/phys/shapes/ArrayVoxelShape dcm
	xs b
	ys c
	zs d
	getCoords (Lnet/minecraft/core/Direction$Axis;)Lit/unimi/dsi/fastutil/doubles/DoubleList; a
net/minecraft/world/phys/shapes/BitSetDiscreteVoxelShape dcn
	storage d
	xMax h
	xMin e
	yMax i
	yMin f
	zMax j
	zMin g
	firstFull (Lnet/minecraft/core/Direction$Axis;)I a
	getIndex (III)I a
	isEmpty ()Z a
	isFull (III)Z b
	isZStripFull (IIII)Z a
	join (Lnet/minecraft/world/phys/shapes/DiscreteVoxelShape;Lnet/minecraft/world/phys/shapes/DiscreteVoxelShape;Lnet/minecraft/world/phys/shapes/IndexMerger;Lnet/minecraft/world/phys/shapes/IndexMerger;Lnet/minecraft/world/phys/shapes/IndexMerger;Lnet/minecraft/world/phys/shapes/BooleanOp;)Lnet/minecraft/world/phys/shapes/BitSetDiscreteVoxelShape; a
	lastFull (Lnet/minecraft/core/Direction$Axis;)I b
	setFull (IIIZZ)V a
	setZStrip (IIIIZ)V a
net/minecraft/world/phys/shapes/BooleanOp dco
	AND i
	CAUSED_BY n
	CAUSES l
	FALSE a
	FIRST m
	NOT_AND h
	NOT_FIRST d
	NOT_OR b
	NOT_SAME g
	NOT_SECOND f
	ONLY_FIRST e
	ONLY_SECOND c
	OR o
	SAME j
	SECOND k
	TRUE p
net/minecraft/world/phys/shapes/CollisionContext dcp
	canStandOnFluid (Lnet/minecraft/world/level/material/FluidState;Lnet/minecraft/world/level/material/FlowingFluid;)Z a
	empty ()Lnet/minecraft/world/phys/shapes/CollisionContext; a
	isAbove (Lnet/minecraft/world/phys/shapes/VoxelShape;Lnet/minecraft/core/BlockPos;Z)Z a
	isDescending ()Z b
	isHoldingItem (Lnet/minecraft/world/item/Item;)Z a
	of (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/world/phys/shapes/CollisionContext; a
net/minecraft/world/phys/shapes/CubePointRange dcq
	parts a
net/minecraft/world/phys/shapes/CubeVoxelShape dcr
	findIndex (Lnet/minecraft/core/Direction$Axis;D)I a
	getCoords (Lnet/minecraft/core/Direction$Axis;)Lit/unimi/dsi/fastutil/doubles/DoubleList; a
net/minecraft/world/phys/shapes/DiscreteCubeMerger dcs
	firstSize b
	gcd d
	result a
	secondSize c
	forMergedIndexes (Lnet/minecraft/world/phys/shapes/IndexMerger$IndexConsumer;)Z a
	getList ()Lit/unimi/dsi/fastutil/doubles/DoubleList; a
net/minecraft/world/phys/shapes/DiscreteVoxelShape dct
	AXIS_VALUES d
	xSize a
	ySize b
	zSize c
	firstFull (Lnet/minecraft/core/Direction$Axis;)I a
	firstFull (Lnet/minecraft/core/Direction$Axis;II)I a
	forAllAxisEdges (Lnet/minecraft/world/phys/shapes/DiscreteVoxelShape$IntLineConsumer;Lnet/minecraft/core/AxisCycle;Z)V a
	forAllAxisFaces (Lnet/minecraft/world/phys/shapes/DiscreteVoxelShape$IntFaceConsumer;Lnet/minecraft/core/AxisCycle;)V a
	forAllBoxes (Lnet/minecraft/world/phys/shapes/DiscreteVoxelShape$IntLineConsumer;Z)V b
	forAllEdges (Lnet/minecraft/world/phys/shapes/DiscreteVoxelShape$IntLineConsumer;Z)V a
	forAllFaces (Lnet/minecraft/world/phys/shapes/DiscreteVoxelShape$IntFaceConsumer;)V a
	getSize (Lnet/minecraft/core/Direction$Axis;)I c
	getXSize ()I b
	getYSize ()I c
	getZSize ()I d
	isEmpty ()Z a
	isFull (III)Z b
	isFull (Lnet/minecraft/core/AxisCycle;III)Z b
	isFullWide (III)Z c
	isFullWide (Lnet/minecraft/core/AxisCycle;III)Z a
	isXZRectangleFull (IIIII)Z a
	isZStripFull (IIII)Z a
	lastFull (Lnet/minecraft/core/Direction$Axis;)I b
	lastFull (Lnet/minecraft/core/Direction$Axis;II)I b
	setFull (IIIZZ)V a
	setZStrip (IIIIZ)V a
net/minecraft/world/phys/shapes/DiscreteVoxelShape$IntFaceConsumer dct$a
net/minecraft/world/phys/shapes/DiscreteVoxelShape$IntLineConsumer dct$b
net/minecraft/world/phys/shapes/EntityCollisionContext dcu
	EMPTY a
	canStandOnFluid e
	descending b
	entityBottom c
	heldItem d
	canStandOnFluid (Lnet/minecraft/world/level/material/FluidState;Lnet/minecraft/world/level/material/FlowingFluid;)Z a
	isAbove (Lnet/minecraft/world/phys/shapes/VoxelShape;Lnet/minecraft/core/BlockPos;Z)Z a
	isDescending ()Z b
	isHoldingItem (Lnet/minecraft/world/item/Item;)Z a
net/minecraft/world/phys/shapes/IdenticalMerger dcv
	coords a
	forMergedIndexes (Lnet/minecraft/world/phys/shapes/IndexMerger$IndexConsumer;)Z a
	getList ()Lit/unimi/dsi/fastutil/doubles/DoubleList; a
net/minecraft/world/phys/shapes/IndexMerger dcw
	forMergedIndexes (Lnet/minecraft/world/phys/shapes/IndexMerger$IndexConsumer;)Z a
	getList ()Lit/unimi/dsi/fastutil/doubles/DoubleList; a
net/minecraft/world/phys/shapes/IndexMerger$IndexConsumer dcw$a
net/minecraft/world/phys/shapes/IndirectMerger dcx
	firstIndices b
	result a
	secondIndices c
	forMergedIndexes (Lnet/minecraft/world/phys/shapes/IndexMerger$IndexConsumer;)Z a
	getList ()Lit/unimi/dsi/fastutil/doubles/DoubleList; a
net/minecraft/world/phys/shapes/IntPointRange dcy
	origin b
	parts a
net/minecraft/world/phys/shapes/NonOverlappingMerger dcz
	lower a
	swap c
	upper b
	forMergedIndexes (Lnet/minecraft/world/phys/shapes/IndexMerger$IndexConsumer;)Z a
	forNonSwappedIndexes (Lnet/minecraft/world/phys/shapes/IndexMerger$IndexConsumer;)Z b
	getList ()Lit/unimi/dsi/fastutil/doubles/DoubleList; a
net/minecraft/world/phys/shapes/OffsetDoubleList dda
	delegate a
	offset b
net/minecraft/world/phys/shapes/Shapes ddb
	BLOCK b
	EMPTY c
	INFINITY a
	block ()Lnet/minecraft/world/phys/shapes/VoxelShape; b
	blockOccudes (Lnet/minecraft/world/phys/shapes/VoxelShape;Lnet/minecraft/world/phys/shapes/VoxelShape;Lnet/minecraft/core/Direction;)Z a
	box (DDDDDD)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	collide (Lnet/minecraft/core/Direction$Axis;Lnet/minecraft/world/phys/AABB;Ljava/util/stream/Stream;D)D a
	collide (Lnet/minecraft/core/Direction$Axis;Lnet/minecraft/world/phys/AABB;Lnet/minecraft/world/level/LevelReader;DLnet/minecraft/world/phys/shapes/CollisionContext;Ljava/util/stream/Stream;)D a
	collide (Lnet/minecraft/world/phys/AABB;Lnet/minecraft/world/level/LevelReader;DLnet/minecraft/world/phys/shapes/CollisionContext;Lnet/minecraft/core/AxisCycle;Ljava/util/stream/Stream;)D a
	create (Lnet/minecraft/world/phys/AABB;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	createIndexMerger (ILit/unimi/dsi/fastutil/doubles/DoubleList;Lit/unimi/dsi/fastutil/doubles/DoubleList;ZZ)Lnet/minecraft/world/phys/shapes/IndexMerger; a
	empty ()Lnet/minecraft/world/phys/shapes/VoxelShape; a
	faceShapeOccludes (Lnet/minecraft/world/phys/shapes/VoxelShape;Lnet/minecraft/world/phys/shapes/VoxelShape;)Z b
	findBits (DD)I a
	getFaceShape (Lnet/minecraft/world/phys/shapes/VoxelShape;Lnet/minecraft/core/Direction;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	join (Lnet/minecraft/world/phys/shapes/VoxelShape;Lnet/minecraft/world/phys/shapes/VoxelShape;Lnet/minecraft/world/phys/shapes/BooleanOp;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	joinIsNotEmpty (Lnet/minecraft/world/phys/shapes/IndexMerger;Lnet/minecraft/world/phys/shapes/IndexMerger;Lnet/minecraft/world/phys/shapes/IndexMerger;Lnet/minecraft/world/phys/shapes/DiscreteVoxelShape;Lnet/minecraft/world/phys/shapes/DiscreteVoxelShape;Lnet/minecraft/world/phys/shapes/BooleanOp;)Z a
	joinIsNotEmpty (Lnet/minecraft/world/phys/shapes/VoxelShape;Lnet/minecraft/world/phys/shapes/VoxelShape;Lnet/minecraft/world/phys/shapes/BooleanOp;)Z c
	joinUnoptimized (Lnet/minecraft/world/phys/shapes/VoxelShape;Lnet/minecraft/world/phys/shapes/VoxelShape;Lnet/minecraft/world/phys/shapes/BooleanOp;)Lnet/minecraft/world/phys/shapes/VoxelShape; b
	lastC (DDD)I a
	lcm (II)J a
	mergedFaceOccludes (Lnet/minecraft/world/phys/shapes/VoxelShape;Lnet/minecraft/world/phys/shapes/VoxelShape;Lnet/minecraft/core/Direction;)Z b
	or (Lnet/minecraft/world/phys/shapes/VoxelShape;Lnet/minecraft/world/phys/shapes/VoxelShape;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	or (Lnet/minecraft/world/phys/shapes/VoxelShape;[Lnet/minecraft/world/phys/shapes/VoxelShape;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
net/minecraft/world/phys/shapes/Shapes$DoubleLineConsumer ddb$a
net/minecraft/world/phys/shapes/SliceShape ddc
	SLICE_COORDS d
	axis c
	delegate b
	getCoords (Lnet/minecraft/core/Direction$Axis;)Lit/unimi/dsi/fastutil/doubles/DoubleList; a
	makeSlice (Lnet/minecraft/world/phys/shapes/DiscreteVoxelShape;Lnet/minecraft/core/Direction$Axis;I)Lnet/minecraft/world/phys/shapes/DiscreteVoxelShape; a
net/minecraft/world/phys/shapes/SubShape ddd
	endX h
	endY i
	endZ j
	parent d
	startX e
	startY f
	startZ g
	firstFull (Lnet/minecraft/core/Direction$Axis;)I a
	isFull (III)Z b
	lastFull (Lnet/minecraft/core/Direction$Axis;)I b
	setFull (IIIZZ)V a
net/minecraft/world/phys/shapes/VoxelShape dde
	faces b
	shape a
	bounds ()Lnet/minecraft/world/phys/AABB; a
	calculateFace (Lnet/minecraft/core/Direction;)Lnet/minecraft/world/phys/shapes/VoxelShape; b
	clip (Lnet/minecraft/world/phys/Vec3;Lnet/minecraft/world/phys/Vec3;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/phys/BlockHitResult; a
	collide (Lnet/minecraft/core/Direction$Axis;Lnet/minecraft/world/phys/AABB;D)D a
	collideX (Lnet/minecraft/core/AxisCycle;Lnet/minecraft/world/phys/AABB;D)D a
	findIndex (Lnet/minecraft/core/Direction$Axis;D)I a
	forAllBoxes (Lnet/minecraft/world/phys/shapes/Shapes$DoubleLineConsumer;)V b
	forAllEdges (Lnet/minecraft/world/phys/shapes/Shapes$DoubleLineConsumer;)V a
	get (Lnet/minecraft/core/Direction$Axis;I)D a
	getCoords (Lnet/minecraft/core/Direction$Axis;)Lit/unimi/dsi/fastutil/doubles/DoubleList; a
	getFaceShape (Lnet/minecraft/core/Direction;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	isEmpty ()Z b
	isFullWide (DDD)Z b
	max (Lnet/minecraft/core/Direction$Axis;)D c
	max (Lnet/minecraft/core/Direction$Axis;DD)D b
	min (Lnet/minecraft/core/Direction$Axis;)D b
	min (Lnet/minecraft/core/Direction$Axis;DD)D a
	move (DDD)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	optimize ()Lnet/minecraft/world/phys/shapes/VoxelShape; c
	toAabbs ()Ljava/util/List; d
net/minecraft/world/phys/shapes/WorldRegionIndirectVoxelShape ddf
	x b
	y c
	z d
	getCoords (Lnet/minecraft/core/Direction$Axis;)Lit/unimi/dsi/fastutil/doubles/DoubleList; a
net/minecraft/world/scores/Objective ddh
	criteria c
	displayName d
	formattedDisplayName e
	name b
	renderType f
	scoreboard a
	createFormattedDisplayName ()Lnet/minecraft/network/chat/Component; g
	getCriteria ()Lnet/minecraft/world/scores/criteria/ObjectiveCriteria; c
	getDisplayName ()Lnet/minecraft/network/chat/Component; d
	getFormattedDisplayName ()Lnet/minecraft/network/chat/Component; e
	getName ()Ljava/lang/String; b
	getRenderType ()Lnet/minecraft/world/scores/criteria/ObjectiveCriteria$RenderType; f
	getScoreboard ()Lnet/minecraft/world/scores/Scoreboard; a
	setDisplayName (Lnet/minecraft/network/chat/Component;)V a
	setRenderType (Lnet/minecraft/world/scores/criteria/ObjectiveCriteria$RenderType;)V a
net/minecraft/world/scores/PlayerTeam ddi
	allowFriendlyFire g
	collisionRule l
	color k
	deathMessageVisibility j
	displayName d
	displayNameStyle m
	name b
	nameTagVisibility i
	playerPrefix e
	playerSuffix f
	players c
	scoreboard a
	seeFriendlyInvisibles h
	canSeeFriendlyInvisibles ()Z i
	formatNameForTeam (Lnet/minecraft/world/scores/Team;Lnet/minecraft/network/chat/Component;)Lnet/minecraft/network/chat/MutableComponent; a
	getCollisionRule ()Lnet/minecraft/world/scores/Team$CollisionRule; l
	getColor ()Lnet/minecraft/ChatFormatting; n
	getDeathMessageVisibility ()Lnet/minecraft/world/scores/Team$Visibility; k
	getDisplayName ()Lnet/minecraft/network/chat/Component; c
	getFormattedDisplayName ()Lnet/minecraft/network/chat/MutableComponent; d
	getFormattedName (Lnet/minecraft/network/chat/Component;)Lnet/minecraft/network/chat/MutableComponent; d
	getName ()Ljava/lang/String; b
	getNameTagVisibility ()Lnet/minecraft/world/scores/Team$Visibility; j
	getPlayerPrefix ()Lnet/minecraft/network/chat/Component; e
	getPlayerSuffix ()Lnet/minecraft/network/chat/Component; f
	getPlayers ()Ljava/util/Collection; g
	getScoreboard ()Lnet/minecraft/world/scores/Scoreboard; a
	isAllowFriendlyFire ()Z h
	packOptions ()I m
	setAllowFriendlyFire (Z)V a
	setCollisionRule (Lnet/minecraft/world/scores/Team$CollisionRule;)V a
	setColor (Lnet/minecraft/ChatFormatting;)V a
	setDeathMessageVisibility (Lnet/minecraft/world/scores/Team$Visibility;)V b
	setDisplayName (Lnet/minecraft/network/chat/Component;)V a
	setNameTagVisibility (Lnet/minecraft/world/scores/Team$Visibility;)V a
	setPlayerPrefix (Lnet/minecraft/network/chat/Component;)V b
	setPlayerSuffix (Lnet/minecraft/network/chat/Component;)V c
	setSeeFriendlyInvisibles (Z)V b
	unpackOptions (I)V a
net/minecraft/world/scores/Score ddj
	SCORE_COMPARATOR a
	count e
	forceUpdate g
	locked f
	objective c
	owner d
	scoreboard b
	add (I)V a
	getObjective ()Lnet/minecraft/world/scores/Objective; d
	getOwner ()Ljava/lang/String; e
	getScore ()I b
	getScoreboard ()Lnet/minecraft/world/scores/Scoreboard; f
	increment ()V a
	isLocked ()Z g
	remove (I)V b
	reset ()V c
	setLocked (Z)V a
	setScore (I)V c
net/minecraft/world/scores/Scoreboard ddk
	displayObjectives d
	displaySlotNames g
	objectivesByCriteria b
	objectivesByName a
	playerScores c
	teamsByName e
	teamsByPlayer f
	addObjective (Ljava/lang/String;Lnet/minecraft/world/scores/criteria/ObjectiveCriteria;Lnet/minecraft/network/chat/Component;Lnet/minecraft/world/scores/criteria/ObjectiveCriteria$RenderType;)Lnet/minecraft/world/scores/Objective; a
	addPlayerTeam (Ljava/lang/String;)Lnet/minecraft/world/scores/PlayerTeam; g
	addPlayerToTeam (Ljava/lang/String;Lnet/minecraft/world/scores/PlayerTeam;)Z a
	entityRemoved (Lnet/minecraft/world/entity/Entity;)V a
	forAllObjectives (Lnet/minecraft/world/scores/criteria/ObjectiveCriteria;Ljava/lang/String;Ljava/util/function/Consumer;)V a
	getDisplayObjective (I)Lnet/minecraft/world/scores/Objective; a
	getDisplaySlotByName (Ljava/lang/String;)I j
	getDisplaySlotName (I)Ljava/lang/String; b
	getDisplaySlotNames ()[Ljava/lang/String; h
	getObjective (Ljava/lang/String;)Lnet/minecraft/world/scores/Objective; d
	getObjectiveNames ()Ljava/util/Collection; d
	getObjectives ()Ljava/util/Collection; c
	getOrCreateObjective (Ljava/lang/String;)Lnet/minecraft/world/scores/Objective; c
	getOrCreatePlayerScore (Ljava/lang/String;Lnet/minecraft/world/scores/Objective;)Lnet/minecraft/world/scores/Score; c
	getPlayerScores (Ljava/lang/String;)Ljava/util/Map; e
	getPlayerScores (Lnet/minecraft/world/scores/Objective;)Ljava/util/Collection; i
	getPlayerTeam (Ljava/lang/String;)Lnet/minecraft/world/scores/PlayerTeam; f
	getPlayerTeams ()Ljava/util/Collection; g
	getPlayersTeam (Ljava/lang/String;)Lnet/minecraft/world/scores/PlayerTeam; i
	getTeamNames ()Ljava/util/Collection; f
	getTrackedPlayers ()Ljava/util/Collection; e
	hasObjective (Ljava/lang/String;)Z b
	hasPlayerScore (Ljava/lang/String;Lnet/minecraft/world/scores/Objective;)Z b
	loadPlayerScores (Lnet/minecraft/nbt/ListTag;)V a
	onObjectiveAdded (Lnet/minecraft/world/scores/Objective;)V a
	onObjectiveChanged (Lnet/minecraft/world/scores/Objective;)V b
	onObjectiveRemoved (Lnet/minecraft/world/scores/Objective;)V c
	onPlayerRemoved (Ljava/lang/String;)V a
	onPlayerScoreRemoved (Ljava/lang/String;Lnet/minecraft/world/scores/Objective;)V a
	onScoreChanged (Lnet/minecraft/world/scores/Score;)V a
	onTeamAdded (Lnet/minecraft/world/scores/PlayerTeam;)V a
	onTeamChanged (Lnet/minecraft/world/scores/PlayerTeam;)V b
	onTeamRemoved (Lnet/minecraft/world/scores/PlayerTeam;)V c
	removeObjective (Lnet/minecraft/world/scores/Objective;)V j
	removePlayerFromTeam (Ljava/lang/String;)Z h
	removePlayerFromTeam (Ljava/lang/String;Lnet/minecraft/world/scores/PlayerTeam;)V b
	removePlayerTeam (Lnet/minecraft/world/scores/PlayerTeam;)V d
	resetPlayerScore (Ljava/lang/String;Lnet/minecraft/world/scores/Objective;)V d
	savePlayerScores ()Lnet/minecraft/nbt/ListTag; i
	setDisplayObjective (ILnet/minecraft/world/scores/Objective;)V a
net/minecraft/world/scores/ScoreboardSaveData ddl
	LOGGER a
	delayLoad c
	scoreboard b
	load (Lnet/minecraft/nbt/CompoundTag;)V a
	loadDisplaySlots (Lnet/minecraft/nbt/CompoundTag;)V c
	loadObjectives (Lnet/minecraft/nbt/ListTag;)V b
	loadTeamPlayers (Lnet/minecraft/world/scores/PlayerTeam;Lnet/minecraft/nbt/ListTag;)V a
	loadTeams (Lnet/minecraft/nbt/ListTag;)V a
	save (Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/nbt/CompoundTag; b
	saveDisplaySlots (Lnet/minecraft/nbt/CompoundTag;)V d
	saveObjectives ()Lnet/minecraft/nbt/ListTag; e
	saveTeams ()Lnet/minecraft/nbt/ListTag; a
	setScoreboard (Lnet/minecraft/world/scores/Scoreboard;)V a
net/minecraft/world/scores/Team ddm
	canSeeFriendlyInvisibles ()Z i
	getCollisionRule ()Lnet/minecraft/world/scores/Team$CollisionRule; l
	getColor ()Lnet/minecraft/ChatFormatting; n
	getDeathMessageVisibility ()Lnet/minecraft/world/scores/Team$Visibility; k
	getFormattedName (Lnet/minecraft/network/chat/Component;)Lnet/minecraft/network/chat/MutableComponent; d
	getName ()Ljava/lang/String; b
	getNameTagVisibility ()Lnet/minecraft/world/scores/Team$Visibility; j
	getPlayers ()Ljava/util/Collection; g
	isAlliedTo (Lnet/minecraft/world/scores/Team;)Z a
	isAllowFriendlyFire ()Z h
net/minecraft/world/scores/Team$CollisionRule ddm$a
	$VALUES h
	ALWAYS a
	BY_NAME g
	NEVER b
	PUSH_OTHER_TEAMS c
	PUSH_OWN_TEAM d
	id f
	name e
	byName (Ljava/lang/String;)Lnet/minecraft/world/scores/Team$CollisionRule; a
	getAllNames ()[Ljava/lang/String; a
	getDisplayName ()Lnet/minecraft/network/chat/Component; b
net/minecraft/world/scores/Team$Visibility ddm$b
	$VALUES h
	ALWAYS a
	BY_NAME g
	HIDE_FOR_OTHER_TEAMS c
	HIDE_FOR_OWN_TEAM d
	NEVER b
	id f
	name e
	byName (Ljava/lang/String;)Lnet/minecraft/world/scores/Team$Visibility; a
	getAllNames ()[Ljava/lang/String; a
	getDisplayName ()Lnet/minecraft/network/chat/Component; b
net/minecraft/world/scores/criteria/ObjectiveCriteria ddn
	AIR i
	ARMOR j
	CRITERIA_BY_NAME a
	DEATH_COUNT d
	DUMMY b
	EXPERIENCE k
	FOOD h
	HEALTH g
	KILLED_BY_TEAM n
	KILL_COUNT_ALL f
	KILL_COUNT_PLAYERS e
	LEVEL l
	TEAM_KILL m
	TRIGGER c
	name o
	readOnly p
	renderType q
	byName (Ljava/lang/String;)Ljava/util/Optional; a
	getDefaultRenderType ()Lnet/minecraft/world/scores/criteria/ObjectiveCriteria$RenderType; e
	getName ()Ljava/lang/String; c
	getStat (Lnet/minecraft/stats/StatType;Lnet/minecraft/resources/ResourceLocation;)Ljava/util/Optional; a
	isReadOnly ()Z d
net/minecraft/world/scores/criteria/ObjectiveCriteria$RenderType ddn$a
	$VALUES e
	BY_ID d
	HEARTS b
	INTEGER a
	id c
	byId (Ljava/lang/String;)Lnet/minecraft/world/scores/criteria/ObjectiveCriteria$RenderType; a
	getId ()Ljava/lang/String; a
net/minecraft/client/main/Main net/minecraft/client/main/Main
	LOGGER a
	ofNullable (Ljava/lang/Integer;)Ljava/util/OptionalInt; a
	parseArgument (Ljoptsimple/OptionSet;Ljoptsimple/OptionSpec;)Ljava/lang/Object; a
	stringHasValue (Ljava/lang/String;)Z a
net/minecraft/server/Main net/minecraft/server/Main
	LOGGER a
	forceUpgrade (Lnet/minecraft/world/level/storage/LevelStorageSource$LevelStorageAccess;Lcom/mojang/datafixers/DataFixer;ZLjava/util/function/BooleanSupplier;Lcom/google/common/collect/ImmutableSet;)V a
net/minecraft/server/MinecraftServer net/minecraft/server/MinecraftServer
	DEMO_SETTINGS c
	LOGGER j
	USERID_CACHE_FILE b
	allowFlight D
	averageTickTime ag
	commandStorage ab
	connection o
	continousProfiler m
	customBossEvents ac
	delayProfilerStart O
	delayedTasksMaxNextTickTime W
	enforceWhitelist af
	executor ah
	fixerUpper s
	forceGameType P
	frameTimer ae
	functionManager ad
	hasWorldScreenshot Y
	isDemo J
	isReady M
	keyPair H
	lastOverloadWarning N
	lastServerStatus T
	levels v
	localIp t
	maxBuildHeight F
	mayHaveDelayedTasks X
	motd E
	nextTickTime V
	onlineMode A
	packRepository Z
	playerDataStorage e
	playerIdleTimeout G
	playerList w
	port u
	preventProxyConnections B
	profileCache S
	profileRepository R
	profiler n
	progressListenerFactory p
	proxy g
	pvp C
	random r
	registryHolder f
	resourcePack K
	resourcePackHash L
	resources aj
	running x
	scoreboard aa
	serverId ai
	serverThread U
	sessionService Q
	singleplayerName I
	snooper k
	status q
	stopped y
	storageSource d
	structureManager ak
	tickCount z
	tickTimes h
	tickables l
	worldData i
	acceptsFailure ()Z b
	acceptsSuccess ()Z a
	addTickable (Ljava/lang/Runnable;)V b
	areNpcsEnabled ()Z X
	configurePackRepository (Lnet/minecraft/server/packs/repository/PackRepository;Lnet/minecraft/world/level/DataPackConfig;Z)Lnet/minecraft/world/level/DataPackConfig; a
	convertFromRegionFormatIfNeeded (Lnet/minecraft/world/level/storage/LevelStorageSource$LevelStorageAccess;)V a
	createCommandSourceStack ()Lnet/minecraft/commands/CommandSourceStack; aD
	createLevels (Lnet/minecraft/server/level/progress/ChunkProgressListener;)V a
	detectBundledResources ()V r
	doRunTask (Ljava/lang/Runnable;)V c
	doRunTask (Lnet/minecraft/server/TickTask;)V b
	dumpClasspath (Ljava/nio/file/Path;)V e
	dumpCrashCategory (Ljava/nio/file/Path;)V c
	dumpGameRules (Ljava/nio/file/Path;)V d
	dumpMiscStats (Ljava/nio/file/Path;)V b
	dumpThreads (Ljava/nio/file/Path;)V f
	endProfilerTick (Lnet/minecraft/util/profiling/SingleTickProfiler;)V b
	fillReport (Lnet/minecraft/CrashReport;)Lnet/minecraft/CrashReport; b
	finishProfiling ()Lnet/minecraft/util/profiling/ProfileResults; aT
	forceDifficulty ()V q
	forceSynchronousWrites ()Z aU
	getAbsoluteMaxWorldSize ()I at
	getAdvancements ()Lnet/minecraft/server/ServerAdvancementManager; az
	getAllLevels ()Ljava/lang/Iterable; G
	getAverageTickTime ()F aN
	getBackgroundTaskExecutor ()Ljava/util/concurrent/Executor; aQ
	getCommandStorage ()Lnet/minecraft/world/level/storage/CommandStorage; aH
	getCommands ()Lnet/minecraft/commands/Commands; aC
	getCompressionThreshold ()I aw
	getConnection ()Lnet/minecraft/server/network/ServerConnectionListener; ae
	getCustomBossEvents ()Lnet/minecraft/server/bossevents/CustomBossEvents; aL
	getDefaultGameType ()Lnet/minecraft/world/level/GameType; s
	getFile (Ljava/lang/String;)Ljava/io/File; c
	getFixerUpper ()Lcom/mojang/datafixers/DataFixer; ay
	getForceGameType ()Z ak
	getFrameTimer ()Lnet/minecraft/util/FrameTimer; aO
	getFunctionCompilationLevel ()I h
	getFunctions ()Lnet/minecraft/server/ServerFunctionManager; aA
	getGameRules ()Lnet/minecraft/world/level/GameRules; aK
	getKeyPair ()Ljava/security/KeyPair; L
	getLevel (Lnet/minecraft/resources/ResourceKey;)Lnet/minecraft/server/level/ServerLevel; a
	getLocalIp ()Ljava/lang/String; u
	getLootTables ()Lnet/minecraft/world/level/storage/loot/LootTables; aI
	getMaxBuildHeight ()I ab
	getMaxPlayers ()I J
	getModdedStatus ()Ljava/util/Optional; o
	getMotd ()Ljava/lang/String; aa
	getNextTickTime ()J ax
	getOperatorUserPermissionLevel ()I g
	getPackRepository ()Lnet/minecraft/server/packs/repository/PackRepository; aB
	getPlayerCount ()I I
	getPlayerIdleTimeout ()I an
	getPlayerList ()Lnet/minecraft/server/players/PlayerList; ad
	getPlayerNames ()[Ljava/lang/String; K
	getPort ()I M
	getPredicateManager ()Lnet/minecraft/world/level/storage/loot/PredicateManager; aJ
	getPreventProxyConnections ()Z V
	getProfileCache ()Lnet/minecraft/server/players/GameProfileCache; aq
	getProfilePermissions (Lcom/mojang/authlib/GameProfile;)I b
	getProfileRepository ()Lcom/mojang/authlib/GameProfileRepository; ap
	getProfiler ()Lnet/minecraft/util/profiling/ProfilerFiller; aP
	getProxy ()Ljava/net/Proxy; am
	getRateLimitPacketsPerSecond ()I k
	getRecipeManager ()Lnet/minecraft/world/item/crafting/RecipeManager; aE
	getResourcePack ()Ljava/lang/String; R
	getResourcePackHash ()Ljava/lang/String; S
	getRunningThread ()Ljava/lang/Thread; av
	getScaledTrackingDistance (I)I b
	getScoreboard ()Lnet/minecraft/server/ServerScoreboard; aG
	getSelectedPacks (Lnet/minecraft/server/packs/repository/PackRepository;)Lnet/minecraft/world/level/DataPackConfig; a
	getServerDirectory ()Ljava/io/File; B
	getServerVersion ()Ljava/lang/String; H
	getSessionService ()Lcom/mojang/authlib/minecraft/MinecraftSessionService; ao
	getSingleplayerName ()Ljava/lang/String; N
	getSnooper ()Lnet/minecraft/world/Snooper; ai
	getSpawnProtectionRadius ()I aj
	getSpawnRadius (Lnet/minecraft/server/level/ServerLevel;)I a
	getStatus ()Lnet/minecraft/network/protocol/status/ServerStatus; ar
	getStructureManager ()Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureManager; aV
	getTags ()Lnet/minecraft/tags/TagContainer; aF
	getTickCount ()I ah
	getWorldData ()Lnet/minecraft/world/level/storage/WorldData; aW
	getWorldPath (Lnet/minecraft/world/level/storage/LevelResource;)Ljava/nio/file/Path; a
	getWorldScreenshotFile ()Ljava/io/File; A
	halt (Z)V a
	hasGui ()Z ag
	hasWorldScreenshot ()Z z
	haveTime ()Z aZ
	initServer ()Z d
	invalidateStatus ()V as
	isCommandBlockEnabled ()Z m
	isDedicatedServer ()Z j
	isDemo ()Z Q
	isEnforceWhitelist ()Z aM
	isEpollEnabled ()Z l
	isFlightAllowed ()Z Z
	isHardcore ()Z f
	isNetherEnabled ()Z C
	isProfiling ()Z aR
	isPublished ()Z n
	isPvpAllowed ()Z Y
	isReady ()Z af
	isRunning ()Z v
	isShutdown ()Z D
	isSingleplayer ()Z O
	isSingleplayerOwner (Lcom/mojang/authlib/GameProfile;)Z a
	isSnooperEnabled ()Z T
	isSpawningAnimals ()Z W
	isSpawningMonsters ()Z P
	isStopped ()Z ac
	isUnderSpawnProtection (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/player/Player;)Z a
	kickUnlistedPlayers (Lnet/minecraft/commands/CommandSourceStack;)V a
	levelKeys ()Ljava/util/Set; F
	loadLevel ()V l_
	onServerCrash (Lnet/minecraft/CrashReport;)V a
	onServerExit ()V e
	overworld ()Lnet/minecraft/server/level/ServerLevel; E
	pollTask ()Z y
	pollTaskInternal ()Z ba
	populateSnooper (Lnet/minecraft/world/Snooper;)V a
	populateSnooperInitial (Lnet/minecraft/world/Snooper;)V b
	prepareLevels (Lnet/minecraft/server/level/progress/ChunkProgressListener;)V b
	publishServer (Lnet/minecraft/world/level/GameType;ZI)Z a
	readScoreboard (Lnet/minecraft/world/level/storage/DimensionDataStorage;)V a
	registryAccess ()Lnet/minecraft/core/RegistryAccess; aX
	reloadResources (Ljava/util/Collection;)Ljava/util/concurrent/CompletableFuture; a
	repliesToStatus ()Z al
	runServer ()V w
	saveAllChunks (ZZZ)Z a
	saveDebugReport (Ljava/nio/file/Path;)V a
	scheduleExecutables ()Z au
	sendDifficultyUpdate (Lnet/minecraft/server/level/ServerPlayer;)V a
	sendMessage (Lnet/minecraft/network/chat/Component;Ljava/util/UUID;)V a
	setDefaultGameType (Lnet/minecraft/world/level/GameType;)V a
	setDemo (Z)V c
	setDifficulty (Lnet/minecraft/world/Difficulty;Z)V a
	setDifficultyLocked (Z)V b
	setEnforceWhitelist (Z)V i
	setFlightAllowed (Z)V g
	setForceGameType (Z)V h
	setId (Ljava/lang/String;)V b
	setInitialSpawn (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/level/storage/ServerLevelData;ZZZ)V a
	setKeyPair (Ljava/security/KeyPair;)V a
	setLocalIp (Ljava/lang/String;)V a_
	setMaxBuildHeight (I)V c
	setMotd (Ljava/lang/String;)V e
	setPlayerIdleTimeout (I)V d
	setPlayerList (Lnet/minecraft/server/players/PlayerList;)V a
	setPort (I)V a
	setPreventProxyConnections (Z)V e
	setPvpAllowed (Z)V f
	setResourcePack (Ljava/lang/String;Ljava/lang/String;)V a
	setSingleplayerName (Ljava/lang/String;)V d
	setUsesAuthentication (Z)V d
	setupDebugLevel (Lnet/minecraft/world/level/storage/WorldData;)V a
	shouldInformAdmins ()Z R_
	shouldRconBroadcast ()Z i
	shouldRun (Ljava/lang/Runnable;)Z d
	shouldRun (Lnet/minecraft/server/TickTask;)Z a
	spin (Ljava/util/function/Function;)Lnet/minecraft/server/MinecraftServer; a
	startProfilerTick (Lnet/minecraft/util/profiling/SingleTickProfiler;)V a
	startProfiling ()V aS
	stopServer ()V t
	tickChildren (Ljava/util/function/BooleanSupplier;)V b
	tickServer (Ljava/util/function/BooleanSupplier;)V a
	updateMobSpawningFlags ()V bb
	updateStatusIcon (Lnet/minecraft/network/protocol/status/ServerStatus;)V a
	usesAuthentication ()Z U
	waitUntilNextTick ()V x
	wrapRunnable (Ljava/lang/Runnable;)Ljava/lang/Runnable; e
	wrapRunnable (Ljava/lang/Runnable;)Lnet/minecraft/server/TickTask; a
net/minecraft/util/CubicSampler net/minecraft/util/CubicSampler
	GAUSSIAN_SAMPLE_KERNEL a
	gaussianSampleVec3 (Lnet/minecraft/world/phys/Vec3;Lnet/minecraft/util/CubicSampler$Vec3Fetcher;)Lnet/minecraft/world/phys/Vec3; a
net/minecraft/data/Main net/minecraft/data/Main
	createStandardGenerator (Ljava/nio/file/Path;Ljava/util/Collection;ZZZZZ)Lnet/minecraft/data/DataGenerator; a

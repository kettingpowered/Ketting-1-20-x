com/mojang/blaze3d/Blaze3D ega
	getTime ()D b
	process (Lcom/mojang/blaze3d/pipeline/RenderPipeline;F)V a
	render (Lcom/mojang/blaze3d/pipeline/RenderPipeline;F)V b
	youJustLostTheGame ()V a
com/mojang/blaze3d/DontObfuscate egb
com/mojang/blaze3d/FieldsAreNonnullByDefault egc
com/mojang/blaze3d/MethodsReturnNonnullByDefault egd
com/mojang/blaze3d/audio/Channel ege
	BUFFER_DURATION_SECONDS a
	LOGGER b
	QUEUED_BUFFER_COUNT c
	initialized e
	source d
	stream g
	streamingBufferSize f
	attachBufferStream (Lnet/minecraft/client/sounds/AudioStream;)V a
	attachStaticBuffer (Lcom/mojang/blaze3d/audio/SoundBuffer;)V a
	calculateBufferSize (Ljavax/sound/sampled/AudioFormat;I)I a
	create ()Lcom/mojang/blaze3d/audio/Channel; a
	destroy ()V b
	disableAttenuation ()V i
	getState ()I k
	linearAttenuation (F)V c
	pause ()V d
	play ()V c
	playing ()Z g
	pumpBuffers (I)V a
	removeProcessedBuffers ()I l
	setLooping (Z)V a
	setPitch (F)V a
	setRelative (Z)V b
	setSelfPosition (Lnet/minecraft/world/phys/Vec3;)V a
	setVolume (F)V b
	stop ()V f
	stopped ()Z h
	unpause ()V e
	updateStream ()V j
com/mojang/blaze3d/audio/Library egf
	DEFAULT_CHANNEL_COUNT c
	EMPTY h
	LOGGER a
	NO_DEVICE b
	context e
	currentDevice d
	defaultDeviceName g
	listener k
	staticChannels i
	streamingChannels j
	supportsDisconnections f
	acquireChannel (Lcom/mojang/blaze3d/audio/Library$Pool;)Lcom/mojang/blaze3d/audio/Channel; a
	cleanup ()V d
	getAvailableSoundDevices ()Ljava/util/List; g
	getChannelCount ()I i
	getCurrentDeviceName ()Ljava/lang/String; b
	getDebugString ()Ljava/lang/String; f
	getDefaultDeviceName ()Ljava/lang/String; a
	getListener ()Lcom/mojang/blaze3d/audio/Listener; e
	hasDefaultDeviceChanged ()Z c
	init (Ljava/lang/String;Z)V a
	isCurrentDeviceDisconnected ()Z h
	openDeviceOrFallback (Ljava/lang/String;)J a
	releaseChannel (Lcom/mojang/blaze3d/audio/Channel;)V a
	setHrtf (Z)V a
	tryOpenDevice (Ljava/lang/String;)Ljava/util/OptionalLong; b
com/mojang/blaze3d/audio/Library$ChannelPool egf$a
	acquire ()Lcom/mojang/blaze3d/audio/Channel; a
	cleanup ()V b
	getMaxCount ()I c
	getUsedCount ()I d
	release (Lcom/mojang/blaze3d/audio/Channel;)Z a
com/mojang/blaze3d/audio/Library$CountingChannelPool egf$b
	activeChannels b
	limit a
	acquire ()Lcom/mojang/blaze3d/audio/Channel; a
	cleanup ()V b
	getMaxCount ()I c
	getUsedCount ()I d
	release (Lcom/mojang/blaze3d/audio/Channel;)Z a
com/mojang/blaze3d/audio/Library$Pool egf$c
	$VALUES c
	STATIC a
	STREAMING b
	$values ()[Lcom/mojang/blaze3d/audio/Library$Pool; a
com/mojang/blaze3d/audio/Listener egg
	gain a
	position b
	getGain ()F b
	getListenerPosition ()Lnet/minecraft/world/phys/Vec3; a
	reset ()V c
	setGain (F)V a
	setListenerOrientation (Lorg/joml/Vector3f;Lorg/joml/Vector3f;)V a
	setListenerPosition (Lnet/minecraft/world/phys/Vec3;)V a
com/mojang/blaze3d/audio/OggAudioStream egh
	EXPECTED_MAX_FRAME_SIZE a
	audioFormat c
	buffer e
	handle b
	input d
	convertMono (Ljava/nio/FloatBuffer;Lcom/mojang/blaze3d/audio/OggAudioStream$OutputConcat;)V a
	convertStereo (Ljava/nio/FloatBuffer;Ljava/nio/FloatBuffer;Lcom/mojang/blaze3d/audio/OggAudioStream$OutputConcat;)V a
	forwardBuffer ()V d
	getFormat ()Ljavax/sound/sampled/AudioFormat; a
	read (I)Ljava/nio/ByteBuffer; a
	readAll ()Ljava/nio/ByteBuffer; b
	readFrame (Lcom/mojang/blaze3d/audio/OggAudioStream$OutputConcat;)Z a
	refillFromStream ()Z c
com/mojang/blaze3d/audio/OggAudioStream$OutputConcat egh$a
	bufferSize b
	buffers a
	byteCount c
	currentBuffer d
	createNewBuffer ()V b
	get ()Ljava/nio/ByteBuffer; a
	put (F)V a
com/mojang/blaze3d/audio/OpenAlUtil egi
	LOGGER a
	alErrorToString (I)Ljava/lang/String; a
	alcErrorToString (I)Ljava/lang/String; b
	audioFormatToOpenAl (Ljavax/sound/sampled/AudioFormat;)I a
	checkALCError (JLjava/lang/String;)Z a
	checkALError (Ljava/lang/String;)Z a
com/mojang/blaze3d/audio/SoundBuffer egj
	alBuffer d
	data a
	format b
	hasAlBuffer c
	discardAlBuffer ()V b
	getAlBuffer ()Ljava/util/OptionalInt; a
	releaseAlBuffer ()Ljava/util/OptionalInt; c
com/mojang/blaze3d/font/GlyphInfo egl
	getAdvance (Z)F a
	getBoldOffset ()F a
	getShadowOffset ()F b
com/mojang/blaze3d/font/GlyphInfo$SpaceGlyphInfo egl$a
com/mojang/blaze3d/font/GlyphProvider egm
	getGlyph (I)Lcom/mojang/blaze3d/font/GlyphInfo; a
	getSupportedGlyphs ()Lit/unimi/dsi/fastutil/ints/IntSet; a
com/mojang/blaze3d/font/SheetGlyphInfo egn
	getBearingX ()F i
	getBearingY ()F j
	getDown ()F h
	getLeft ()F e
	getOversample ()F d
	getPixelHeight ()I b
	getPixelWidth ()I a
	getRight ()F f
	getUp ()F g
	isColored ()Z c
	upload (II)V a
com/mojang/blaze3d/font/SpaceProvider ego
	glyphs a
	getGlyph (I)Lcom/mojang/blaze3d/font/GlyphInfo; a
	getSupportedGlyphs ()Lit/unimi/dsi/fastutil/ints/IntSet; a
com/mojang/blaze3d/font/SpaceProvider$Definition ego$a
	CODEC a
	advances c
	advances ()Ljava/util/Map; c
	type ()Lnet/minecraft/client/gui/font/providers/GlyphProviderType; a
	unpack ()Lcom/mojang/datafixers/util/Either; b
com/mojang/blaze3d/font/TrueTypeGlyphProvider egp
	ascent h
	font b
	fontMemory a
	oversample c
	pointScale g
	shiftX e
	shiftY f
	skip d
	getGlyph (I)Lcom/mojang/blaze3d/font/GlyphInfo; a
	getSupportedGlyphs ()Lit/unimi/dsi/fastutil/ints/IntSet; a
	validateFontOpen ()Lorg/lwjgl/stb/STBTTFontinfo; b
com/mojang/blaze3d/font/TrueTypeGlyphProvider$Glyph egp$a
	advance f
	bearingX d
	bearingY e
	height c
	index g
	width b
com/mojang/blaze3d/pipeline/MainTarget egs
	DEFAULT_DIMENSIONS l
	DEFAULT_HEIGHT b
	DEFAULT_WIDTH a
	allocateAttachments (II)Lcom/mojang/blaze3d/pipeline/MainTarget$Dimension; c
	allocateColorAttachment (Lcom/mojang/blaze3d/pipeline/MainTarget$Dimension;)Z a
	allocateDepthAttachment (Lcom/mojang/blaze3d/pipeline/MainTarget$Dimension;)Z b
	createFrameBuffer (II)V b
com/mojang/blaze3d/pipeline/MainTarget$AttachmentState egs$a
	$VALUES f
	COLOR b
	COLOR_DEPTH d
	DEPTH c
	NONE a
	VALUES e
	$values ()[Lcom/mojang/blaze3d/pipeline/MainTarget$AttachmentState; a
	with (Lcom/mojang/blaze3d/pipeline/MainTarget$AttachmentState;)Lcom/mojang/blaze3d/pipeline/MainTarget$AttachmentState; a
com/mojang/blaze3d/pipeline/MainTarget$Dimension egs$b
	height b
	width a
	listWithFallback (II)Ljava/util/List; a
com/mojang/blaze3d/pipeline/RenderCall egt
com/mojang/blaze3d/pipeline/RenderPipeline egu
	isProcessing d
	isRecording b
	processedBuffer e
	recordingBuffer c
	renderCalls a
	renderingBuffer f
	beginProcessing ()Z e
	beginRecording ()Z b
	canBeginProcessing ()Z d
	canBeginRecording ()Z a
	endProcessing ()V g
	endRecording ()V c
	getProcessedQueue ()Ljava/util/concurrent/ConcurrentLinkedQueue; j
	getRecordingQueue ()Ljava/util/concurrent/ConcurrentLinkedQueue; i
	processRecordedQueue ()V f
	recordRenderCall (Lcom/mojang/blaze3d/pipeline/RenderCall;)V a
	startRendering ()Ljava/util/concurrent/ConcurrentLinkedQueue; h
com/mojang/blaze3d/pipeline/RenderTarget egv
	ALPHA_CHANNEL m
	BLUE_CHANNEL l
	GREEN_CHANNEL b
	RED_CHANNEL a
	clearChannels n
	colorTextureId i
	depthBufferId j
	filterMode k
	frameBufferId h
	height d
	useDepth g
	viewHeight f
	viewWidth e
	width c
	_bindWrite (Z)V c
	_blitToScreen (IIZ)V e
	_resize (IIZ)V d
	bindRead ()V c
	bindWrite (Z)V a
	blitToScreen (II)V a
	blitToScreen (IIZ)V c
	checkStatus ()V b
	clear (Z)V b
	copyDepthFrom (Lcom/mojang/blaze3d/pipeline/RenderTarget;)V a
	createBuffers (IIZ)V b
	destroyBuffers ()V a
	getColorTextureId ()I f
	getDepthTextureId ()I g
	resize (IIZ)V a
	setClearColor (FFFF)V a
	setFilterMode (I)V a
	unbindRead ()V d
	unbindWrite ()V e
com/mojang/blaze3d/pipeline/TextureTarget egw
com/mojang/blaze3d/platform/ClipboardManager egy
	FORMAT_UNAVAILABLE a
	clipboardScratchBuffer b
	getClipboard (JLorg/lwjgl/glfw/GLFWErrorCallbackI;)Ljava/lang/String; a
	pushClipboard (JLjava/nio/ByteBuffer;[B)V a
	setClipboard (JLjava/lang/String;)V a
com/mojang/blaze3d/platform/DebugMemoryUntracker egz
	UNTRACK a
	untrack (J)V a
	untrack (Lorg/lwjgl/system/Pointer;)V a
com/mojang/blaze3d/platform/DisplayData eha
	fullscreenHeight d
	fullscreenWidth c
	height b
	isFullscreen e
	width a
com/mojang/blaze3d/platform/GlDebug ehb
	CIRCULAR_LOG_SIZE b
	DEBUG_LEVELS e
	DEBUG_LEVELS_ARB f
	LOGGER a
	MESSAGE_BUFFER c
	debugEnabled g
	lastEntry d
	enableDebugCallback (IZ)V a
	getLastOpenGlDebugMessages ()Ljava/util/List; a
	isDebugEnabled ()Z b
	printDebugLog (IIIIIJJ)V a
	printUnknownToken (I)Ljava/lang/String; d
	severityToString (I)Ljava/lang/String; c
	sourceToString (I)Ljava/lang/String; a
	typeToString (I)Ljava/lang/String; b
com/mojang/blaze3d/platform/GlDebug$LogEntry ehb$a
	count f
	id a
	message e
	severity d
	source b
	type c
	isSame (IIIILjava/lang/String;)Z a
com/mojang/blaze3d/platform/GlStateManager$BlendState com/mojang/blaze3d/platform/GlStateManager$a
	dstAlpha e
	dstRgb c
	mode a
	srcAlpha d
	srcRgb b
com/mojang/blaze3d/platform/GlStateManager$BooleanState com/mojang/blaze3d/platform/GlStateManager$b
	enabled b
	state a
	disable ()V a
	enable ()V b
	setEnabled (Z)V a
com/mojang/blaze3d/platform/GlStateManager$ColorLogicState com/mojang/blaze3d/platform/GlStateManager$c
	enable a
	op b
com/mojang/blaze3d/platform/GlStateManager$ColorMask com/mojang/blaze3d/platform/GlStateManager$d
	alpha d
	blue c
	green b
	red a
com/mojang/blaze3d/platform/GlStateManager$CullState com/mojang/blaze3d/platform/GlStateManager$e
	enable a
	mode b
com/mojang/blaze3d/platform/GlStateManager$DepthState com/mojang/blaze3d/platform/GlStateManager$f
	func c
	mask b
	mode a
com/mojang/blaze3d/platform/GlStateManager$LogicOp com/mojang/blaze3d/platform/GlStateManager$g
	$VALUES r
	AND a
	AND_INVERTED b
	AND_REVERSE c
	CLEAR d
	COPY e
	COPY_INVERTED f
	EQUIV g
	INVERT h
	NAND i
	NOOP j
	NOR k
	OR l
	OR_INVERTED m
	OR_REVERSE n
	SET o
	XOR p
	value q
	$values ()[Lcom/mojang/blaze3d/platform/GlStateManager$LogicOp; a
com/mojang/blaze3d/platform/GlStateManager$PolygonOffsetState com/mojang/blaze3d/platform/GlStateManager$h
	factor c
	fill a
	line b
	units d
com/mojang/blaze3d/platform/GlStateManager$ScissorState com/mojang/blaze3d/platform/GlStateManager$i
	mode a
com/mojang/blaze3d/platform/GlStateManager$StencilFunc com/mojang/blaze3d/platform/GlStateManager$j
	func a
	mask c
	ref b
com/mojang/blaze3d/platform/GlStateManager$StencilState com/mojang/blaze3d/platform/GlStateManager$k
	fail c
	func a
	mask b
	zfail d
	zpass e
com/mojang/blaze3d/platform/GlStateManager$TextureState com/mojang/blaze3d/platform/GlStateManager$l
	binding a
com/mojang/blaze3d/platform/GlStateManager$Viewport com/mojang/blaze3d/platform/GlStateManager$m
	$VALUES f
	INSTANCE a
	height e
	width d
	x b
	y c
	$values ()[Lcom/mojang/blaze3d/platform/GlStateManager$Viewport; e
	height ()I d
	width ()I c
	x ()I a
	y ()I b
com/mojang/blaze3d/platform/GlUtil ehc
	allocateMemory (I)Ljava/nio/ByteBuffer; a
	freeMemory (Ljava/nio/Buffer;)V a
	getCpuInfo ()Ljava/lang/String; b
	getOpenGLVersion ()Ljava/lang/String; d
	getRenderer ()Ljava/lang/String; c
	getVendor ()Ljava/lang/String; a
com/mojang/blaze3d/platform/IconSet ehd
	$VALUES d
	RELEASE a
	SNAPSHOT b
	path c
	$values ()[Lcom/mojang/blaze3d/platform/IconSet; a
	getFile (Lnet/minecraft/server/packs/PackResources;Ljava/lang/String;)Lnet/minecraft/server/packs/resources/IoSupplier; a
	getMacIcon (Lnet/minecraft/server/packs/PackResources;)Lnet/minecraft/server/packs/resources/IoSupplier; b
	getStandardIcons (Lnet/minecraft/server/packs/PackResources;)Ljava/util/List; a
com/mojang/blaze3d/platform/InputConstants ehe
	CURSOR bs
	CURSOR_DISABLED bt
	CURSOR_NORMAL bu
	GLFW_RAW_MOUSE_MOTION bx
	GLFW_RAW_MOUSE_MOTION_SUPPORTED bw
	KEY_0 a
	KEY_1 b
	KEY_2 c
	KEY_3 d
	KEY_4 e
	KEY_5 f
	KEY_6 g
	KEY_7 h
	KEY_8 i
	KEY_9 j
	KEY_A k
	KEY_ADD aB
	KEY_APOSTROPHE aC
	KEY_B l
	KEY_BACKSLASH aD
	KEY_BACKSPACE ba
	KEY_C m
	KEY_CAPSLOCK bh
	KEY_COMMA aE
	KEY_D n
	KEY_DELETE bb
	KEY_DOWN ax
	KEY_E o
	KEY_END bc
	KEY_EQUALS aF
	KEY_ESCAPE aZ
	KEY_F p
	KEY_F1 K
	KEY_F10 T
	KEY_F11 U
	KEY_F12 V
	KEY_F13 W
	KEY_F14 X
	KEY_F15 Y
	KEY_F16 Z
	KEY_F17 aa
	KEY_F18 ab
	KEY_F19 ac
	KEY_F2 L
	KEY_F20 ad
	KEY_F21 ae
	KEY_F22 af
	KEY_F23 ag
	KEY_F24 ah
	KEY_F25 ai
	KEY_F3 M
	KEY_F4 N
	KEY_F5 O
	KEY_F6 P
	KEY_F7 Q
	KEY_F8 R
	KEY_F9 S
	KEY_G q
	KEY_GRAVE aG
	KEY_H r
	KEY_HOME bd
	KEY_I s
	KEY_INSERT be
	KEY_J t
	KEY_K u
	KEY_L v
	KEY_LALT aQ
	KEY_LBRACKET aH
	KEY_LCONTROL aR
	KEY_LEFT ay
	KEY_LSHIFT aS
	KEY_LWIN aT
	KEY_M w
	KEY_MINUS aI
	KEY_MULTIPLY aJ
	KEY_N x
	KEY_NUMLOCK aj
	KEY_NUMPAD0 ak
	KEY_NUMPAD1 al
	KEY_NUMPAD2 am
	KEY_NUMPAD3 an
	KEY_NUMPAD4 ao
	KEY_NUMPAD5 ap
	KEY_NUMPAD6 aq
	KEY_NUMPAD7 ar
	KEY_NUMPAD8 as
	KEY_NUMPAD9 at
	KEY_NUMPADCOMMA au
	KEY_NUMPADENTER av
	KEY_NUMPADEQUALS aw
	KEY_O y
	KEY_P z
	KEY_PAGEDOWN bf
	KEY_PAGEUP bg
	KEY_PAUSE bi
	KEY_PERIOD aK
	KEY_PRINTSCREEN bk
	KEY_Q A
	KEY_R B
	KEY_RALT aU
	KEY_RBRACKET aL
	KEY_RCONTROL aV
	KEY_RETURN aY
	KEY_RIGHT az
	KEY_RSHIFT aW
	KEY_RWIN aX
	KEY_S C
	KEY_SCROLLLOCK bj
	KEY_SEMICOLON aM
	KEY_SLASH aN
	KEY_SPACE aO
	KEY_T D
	KEY_TAB aP
	KEY_U E
	KEY_UP aA
	KEY_V F
	KEY_W G
	KEY_X H
	KEY_Y I
	KEY_Z J
	MOD_CONTROL br
	MOUSE_BUTTON_LEFT bo
	MOUSE_BUTTON_MIDDLE bp
	MOUSE_BUTTON_RIGHT bq
	PRESS bl
	RELEASE bm
	REPEAT bn
	UNKNOWN bv
	getKey (II)Lcom/mojang/blaze3d/platform/InputConstants$Key; a
	getKey (Ljava/lang/String;)Lcom/mojang/blaze3d/platform/InputConstants$Key; a
	grabOrReleaseMouse (JIDD)V a
	isKeyDown (JI)Z a
	isRawMouseInputSupported ()Z a
	setupKeyboardCallbacks (JLorg/lwjgl/glfw/GLFWKeyCallbackI;Lorg/lwjgl/glfw/GLFWCharModsCallbackI;)V a
	setupMouseCallbacks (JLorg/lwjgl/glfw/GLFWCursorPosCallbackI;Lorg/lwjgl/glfw/GLFWMouseButtonCallbackI;Lorg/lwjgl/glfw/GLFWScrollCallbackI;Lorg/lwjgl/glfw/GLFWDropCallbackI;)V a
	updateRawMouseInput (JZ)V a
com/mojang/blaze3d/platform/InputConstants$Key ehe$a
	NAME_MAP e
	displayName d
	name a
	type b
	value c
	getDisplayName ()Lnet/minecraft/network/chat/Component; d
	getName ()Ljava/lang/String; c
	getNumericKeyValue ()Ljava/util/OptionalInt; e
	getType ()Lcom/mojang/blaze3d/platform/InputConstants$Type; a
	getValue ()I b
com/mojang/blaze3d/platform/InputConstants$Type ehe$b
	$VALUES h
	KEYSYM a
	KEY_KEYBOARD_UNKNOWN d
	MOUSE c
	SCANCODE b
	defaultPrefix f
	displayTextSupplier g
	map e
	$values ()[Lcom/mojang/blaze3d/platform/InputConstants$Type; a
	addKey (Lcom/mojang/blaze3d/platform/InputConstants$Type;Ljava/lang/String;I)V a
	getOrCreate (I)Lcom/mojang/blaze3d/platform/InputConstants$Key; a
com/mojang/blaze3d/platform/Lighting ehf
	DIFFUSE_LIGHT_0 a
	DIFFUSE_LIGHT_1 b
	INVENTORY_DIFFUSE_LIGHT_0 e
	INVENTORY_DIFFUSE_LIGHT_1 f
	NETHER_DIFFUSE_LIGHT_0 c
	NETHER_DIFFUSE_LIGHT_1 d
	setupFor3DItems ()V b
	setupForEntityInInventory ()V c
	setupForFlatItems ()V a
	setupLevel (Lorg/joml/Matrix4f;)V b
	setupNetherLevel (Lorg/joml/Matrix4f;)V a
com/mojang/blaze3d/platform/MacosUtil ehg
	NS_FULL_SCREEN_WINDOW_MASK a
	getNsWindow (J)Ljava/util/Optional; b
	isInKioskMode (Lca/weblite/objc/NSObject;)Z a
	loadIcon (Lnet/minecraft/server/packs/resources/IoSupplier;)V a
	toggleFullscreen (J)V a
	toggleFullscreen (Lca/weblite/objc/NSObject;)V b
com/mojang/blaze3d/platform/MemoryTracker ehh
	ALLOCATOR a
	create (I)Ljava/nio/ByteBuffer; a
	resize (Ljava/nio/ByteBuffer;I)Ljava/nio/ByteBuffer; a
com/mojang/blaze3d/platform/Monitor ehi
	currentMode c
	monitor a
	videoModes b
	x d
	y e
	getCurrentMode ()Lcom/mojang/blaze3d/platform/VideoMode; b
	getMode (I)Lcom/mojang/blaze3d/platform/VideoMode; a
	getModeCount ()I e
	getMonitor ()J f
	getPreferredVidMode (Ljava/util/Optional;)Lcom/mojang/blaze3d/platform/VideoMode; a
	getVideoModeIndex (Lcom/mojang/blaze3d/platform/VideoMode;)I a
	getX ()I c
	getY ()I d
	refreshVideoModes ()V a
com/mojang/blaze3d/platform/MonitorCreator ehj
com/mojang/blaze3d/platform/NativeImage ehk
	LOGGER a
	OPEN_OPTIONS b
	format c
	height e
	pixels g
	size h
	useStbFree f
	width d
	_upload (IIIIIIIZZZZ)V b
	applyToAllPixels (Ljava/util/function/IntUnaryOperator;)V b
	asByteArray ()[B g
	blendPixel (III)V b
	checkAllocated ()V j
	copyFrom (Lcom/mojang/blaze3d/platform/NativeImage;)V a
	copyFromFont (Lorg/lwjgl/stb/STBTTFontinfo;IIIFFFFII)V a
	copyRect (IIIIIIZZ)V a
	copyRect (Lcom/mojang/blaze3d/platform/NativeImage;IIIIIIZZ)V a
	downloadDepthBuffer (F)V a
	downloadTexture (IZ)V a
	drawPixels ()V f
	fillRect (IIIII)V a
	flipY ()V h
	format ()Lcom/mojang/blaze3d/platform/NativeImage$Format; c
	getBlueOrLuminance (II)B d
	getGreenOrLuminance (II)B c
	getHeight ()I b
	getLuminanceOrAlpha (II)B e
	getPixelRGBA (II)I a
	getPixelsRGBA ()[I d
	getRedOrLuminance (II)B b
	getWidth ()I a
	isOutsideBounds (II)Z f
	makePixelArray ()[I e
	mappedCopy (Ljava/util/function/IntUnaryOperator;)Lcom/mojang/blaze3d/platform/NativeImage; a
	read (Lcom/mojang/blaze3d/platform/NativeImage$Format;Ljava/io/InputStream;)Lcom/mojang/blaze3d/platform/NativeImage; a
	read (Lcom/mojang/blaze3d/platform/NativeImage$Format;Ljava/nio/ByteBuffer;)Lcom/mojang/blaze3d/platform/NativeImage; a
	read (Ljava/io/InputStream;)Lcom/mojang/blaze3d/platform/NativeImage; a
	read (Ljava/nio/ByteBuffer;)Lcom/mojang/blaze3d/platform/NativeImage; a
	read ([B)Lcom/mojang/blaze3d/platform/NativeImage; a
	resizeSubRectTo (IIIILcom/mojang/blaze3d/platform/NativeImage;)V a
	setFilter (ZZ)V a
	setPixelLuminance (IIB)V a
	setPixelRGBA (III)V a
	untrack ()V i
	upload (IIIIIIIZZ)V a
	upload (IIIIIIIZZZZ)V a
	upload (IIIZ)V a
	writeToChannel (Ljava/nio/channels/WritableByteChannel;)Z a
	writeToFile (Ljava/io/File;)V a
	writeToFile (Ljava/nio/file/Path;)V a
com/mojang/blaze3d/platform/NativeImage$Format ehk$a
	$VALUES r
	LUMINANCE d
	LUMINANCE_ALPHA c
	RGB b
	RGBA a
	alphaOffset p
	blueOffset n
	components e
	glFormat f
	greenOffset m
	hasAlpha k
	hasBlue i
	hasGreen h
	hasLuminance j
	hasRed g
	luminanceOffset o
	redOffset l
	supportedByStb q
	$values ()[Lcom/mojang/blaze3d/platform/NativeImage$Format; x
	alphaOffset ()I n
	blueOffset ()I l
	components ()I a
	getStbFormat (I)Lcom/mojang/blaze3d/platform/NativeImage$Format; a
	glFormat ()I d
	greenOffset ()I k
	hasAlpha ()Z i
	hasBlue ()Z g
	hasGreen ()Z f
	hasLuminance ()Z h
	hasLuminanceOrAlpha ()Z r
	hasLuminanceOrBlue ()Z q
	hasLuminanceOrGreen ()Z p
	hasLuminanceOrRed ()Z o
	hasRed ()Z e
	luminanceOffset ()I m
	luminanceOrAlphaOffset ()I v
	luminanceOrBlueOffset ()I u
	luminanceOrGreenOffset ()I t
	luminanceOrRedOffset ()I s
	redOffset ()I j
	setPackPixelStoreState ()V b
	setUnpackPixelStoreState ()V c
	supportedByStb ()Z w
com/mojang/blaze3d/platform/NativeImage$InternalGlFormat ehk$b
	$VALUES f
	RED d
	RG c
	RGB b
	RGBA a
	glFormat e
	$values ()[Lcom/mojang/blaze3d/platform/NativeImage$InternalGlFormat; b
	glFormat ()I a
com/mojang/blaze3d/platform/NativeImage$WriteCallback ehk$c
	exception b
	output a
	throwIfException ()V a
com/mojang/blaze3d/platform/ScreenManager ehl
	LOGGER a
	monitorCreator c
	monitors b
	clamp (III)I a
	findBestMonitor (Lcom/mojang/blaze3d/platform/Window;)Lcom/mojang/blaze3d/platform/Monitor; a
	getMonitor (J)Lcom/mojang/blaze3d/platform/Monitor; a
	onMonitorChange (JI)V a
	shutdown ()V a
com/mojang/blaze3d/platform/VideoMode ehm
	PATTERN g
	blueBits e
	greenBits d
	height b
	redBits c
	refreshRate f
	width a
	getBlueBits ()I e
	getGreenBits ()I d
	getHeight ()I b
	getRedBits ()I c
	getRefreshRate ()I f
	getWidth ()I a
	read (Ljava/lang/String;)Ljava/util/Optional; a
	write ()Ljava/lang/String; g
com/mojang/blaze3d/platform/Window ehn
	LOGGER a
	actuallyFullscreen l
	defaultErrorCallback b
	dirty w
	errorSection v
	eventHandler c
	framebufferHeight r
	framebufferWidth q
	framerateLimit x
	fullscreen k
	guiScale u
	guiScaledHeight t
	guiScaledWidth s
	height p
	preferredFullscreenVideoMode j
	screenManager d
	vsync y
	width o
	window e
	windowedHeight i
	windowedWidth h
	windowedX f
	windowedY g
	x m
	y n
	bootCrash (IJ)V b
	calculateScale (IZ)I a
	changeFullscreenVideoMode ()V g
	checkGlfwError (Ljava/util/function/BiConsumer;)V a
	defaultErrorCallback (IJ)V a
	findBestMonitor ()Lcom/mojang/blaze3d/platform/Monitor; t
	getFramerateLimit ()I d
	getGuiScale ()D s
	getGuiScaledHeight ()I p
	getGuiScaledWidth ()I o
	getHeight ()I l
	getPreferredFullscreenVideoMode ()Ljava/util/Optional; f
	getRefreshRate ()I a
	getScreenHeight ()I n
	getScreenWidth ()I m
	getWidth ()I k
	getWindow ()J i
	getX ()I q
	getY ()I r
	isFullscreen ()Z j
	onEnter (JZ)V b
	onFocus (JZ)V a
	onFramebufferResize (JII)V b
	onMove (JII)V a
	onResize (JII)V c
	refreshFramebufferSize ()V v
	setBootErrorCallback ()V u
	setDefaultErrorCallback ()V c
	setErrorSection (Ljava/lang/String;)V a
	setFramerateLimit (I)V a
	setGuiScale (D)V a
	setHeight (I)V c
	setIcon (Lnet/minecraft/server/packs/PackResources;Lcom/mojang/blaze3d/platform/IconSet;)V a
	setMode ()V w
	setPreferredFullscreenVideoMode (Ljava/util/Optional;)V a
	setTitle (Ljava/lang/String;)V b
	setWidth (I)V b
	setWindowed (II)V a
	shouldClose ()Z b
	toggleFullScreen ()V h
	updateDisplay ()V e
	updateFullscreen (Z)V c
	updateRawMouseInput (Z)V b
	updateVsync (Z)V a
com/mojang/blaze3d/platform/Window$WindowInitFailed ehn$a
com/mojang/blaze3d/platform/WindowEventHandler eho
	cursorEntered ()V b
	resizeDisplay ()V a
	setWindowActive (Z)V a
com/mojang/blaze3d/preprocessor/GlslPreprocessor ehq
	C_COMMENT a
	LINE_COMMENT b
	REGEX_ENDS_WITH_WHITESPACE e
	REGEX_MOJ_IMPORT c
	REGEX_VERSION d
	applyImport (ZLjava/lang/String;)Ljava/lang/String; a
	isDirectiveDisabled (Ljava/lang/String;Ljava/util/regex/Matcher;I)Z a
	isDirectiveEnabled (Ljava/lang/String;Ljava/util/regex/Matcher;)Z a
	process (Ljava/lang/String;)Ljava/util/List; a
	processImports (Ljava/lang/String;Lcom/mojang/blaze3d/preprocessor/GlslPreprocessor$Context;Ljava/lang/String;)Ljava/util/List; a
	processVersions (Ljava/lang/String;Lcom/mojang/blaze3d/preprocessor/GlslPreprocessor$Context;)Ljava/lang/String; a
	setVersion (Ljava/lang/String;I)Ljava/lang/String; a
com/mojang/blaze3d/preprocessor/GlslPreprocessor$Context ehq$a
	glslVersion a
	sourceId b
com/mojang/blaze3d/shaders/AbstractUniform ehs
	set (F)V a
	set (FF)V a
	set (FFF)V a
	set (FFFF)V a
	set (I)V a
	set (II)V a
	set (III)V a
	set (IIII)V b
	set (Lorg/joml/Matrix3f;)V a
	set (Lorg/joml/Matrix4f;)V a
	set (Lorg/joml/Vector3f;)V a
	set (Lorg/joml/Vector4f;)V a
	set ([F)V a
	setMat2x2 (FFFF)V c
	setMat2x3 (FFFFFF)V a
	setMat2x4 (FFFFFFFF)V a
	setMat3x2 (FFFFFF)V b
	setMat3x3 (FFFFFFFFF)V a
	setMat3x4 (FFFFFFFFFFFF)V a
	setMat4x2 (FFFFFFFF)V b
	setMat4x3 (FFFFFFFFFFFF)V b
	setMat4x4 (FFFFFFFFFFFFFFFF)V a
	setSafe (FFFF)V b
	setSafe (IIII)V a
com/mojang/blaze3d/shaders/BlendMode eht
	blendFunc f
	dstAlphaFactor e
	dstColorFactor d
	lastApplied a
	opaque h
	separateBlend g
	srcAlphaFactor c
	srcColorFactor b
	apply ()V a
	isOpaque ()Z b
	stringToBlendFactor (Ljava/lang/String;)I b
	stringToBlendFunc (Ljava/lang/String;)I a
com/mojang/blaze3d/shaders/Effect ehu
com/mojang/blaze3d/shaders/EffectProgram ehv
	PREPROCESSOR a
	references b
	attachToEffect (Lcom/mojang/blaze3d/shaders/Effect;)V a
	close ()V a
	compileShader (Lcom/mojang/blaze3d/shaders/Program$Type;Ljava/lang/String;Ljava/io/InputStream;Ljava/lang/String;)Lcom/mojang/blaze3d/shaders/EffectProgram; a
com/mojang/blaze3d/shaders/FogShape ehw
	$VALUES d
	CYLINDER b
	SPHERE a
	index c
	$values ()[Lcom/mojang/blaze3d/shaders/FogShape; b
	getIndex ()I a
com/mojang/blaze3d/shaders/Program ehx
	MAX_LOG_LENGTH a
	id d
	name c
	type b
	attachToShader (Lcom/mojang/blaze3d/shaders/Shader;)V a
	close ()V a
	compileShader (Lcom/mojang/blaze3d/shaders/Program$Type;Ljava/lang/String;Ljava/io/InputStream;Ljava/lang/String;Lcom/mojang/blaze3d/preprocessor/GlslPreprocessor;)Lcom/mojang/blaze3d/shaders/Program; a
	compileShaderInternal (Lcom/mojang/blaze3d/shaders/Program$Type;Ljava/lang/String;Ljava/io/InputStream;Ljava/lang/String;Lcom/mojang/blaze3d/preprocessor/GlslPreprocessor;)I b
	getId ()I c
	getName ()Ljava/lang/String; b
com/mojang/blaze3d/shaders/Program$Type ehx$a
	$VALUES g
	FRAGMENT b
	VERTEX a
	extension d
	glType e
	name c
	programs f
	$values ()[Lcom/mojang/blaze3d/shaders/Program$Type; e
	getExtension ()Ljava/lang/String; b
	getGlType ()I d
	getName ()Ljava/lang/String; a
	getPrograms ()Ljava/util/Map; c
com/mojang/blaze3d/shaders/ProgramManager ehy
	LOGGER a
	createProgram ()I a
	glUseProgram (I)V a
	linkShader (Lcom/mojang/blaze3d/shaders/Shader;)V b
	releaseProgram (Lcom/mojang/blaze3d/shaders/Shader;)V a
com/mojang/blaze3d/shaders/Shader ehz
	attachToProgram ()V e
	getFragmentProgram ()Lcom/mojang/blaze3d/shaders/Program; d
	getId ()I a
	getVertexProgram ()Lcom/mojang/blaze3d/shaders/Program; c
	markDirty ()V b
com/mojang/blaze3d/shaders/Uniform eia
	LOGGER l
	TRANSPOSE_MATRICIES m
	UT_FLOAT1 e
	UT_FLOAT2 f
	UT_FLOAT3 g
	UT_FLOAT4 h
	UT_INT1 a
	UT_INT2 b
	UT_INT3 c
	UT_INT4 d
	UT_MAT2 i
	UT_MAT3 j
	UT_MAT4 k
	count o
	dirty t
	floatValues r
	intValues q
	location n
	name s
	parent u
	type p
	getCount ()I d
	getFloatBuffer ()Ljava/nio/FloatBuffer; g
	getIntBuffer ()Ljava/nio/IntBuffer; f
	getLocation ()I c
	getName ()Ljava/lang/String; a
	getType ()I e
	getTypeFromString (Ljava/lang/String;)I a
	glBindAttribLocation (IILjava/lang/CharSequence;)V a
	glGetAttribLocation (ILjava/lang/CharSequence;)I b
	glGetUniformLocation (ILjava/lang/CharSequence;)I a
	markDirty ()V h
	set (F)V a
	set (FF)V a
	set (FFF)V a
	set (FFFF)V a
	set (I)V a
	set (IF)V a
	set (II)V a
	set (III)V a
	set (IIII)V b
	set (Lorg/joml/Matrix3f;)V a
	set (Lorg/joml/Matrix4f;)V a
	set (Lorg/joml/Vector3f;)V a
	set (Lorg/joml/Vector4f;)V a
	set ([F)V a
	setLocation (I)V b
	setMat2x2 (FFFF)V c
	setMat2x3 (FFFFFF)V a
	setMat2x4 (FFFFFFFF)V a
	setMat3x2 (FFFFFF)V b
	setMat3x3 (FFFFFFFFF)V a
	setMat3x4 (FFFFFFFFFFFF)V a
	setMat4x2 (FFFFFFFF)V b
	setMat4x3 (FFFFFFFFFFFF)V b
	setMat4x4 (FFFFFFFFFFFFFFFF)V a
	setSafe (FFFF)V b
	setSafe (IIII)V a
	upload ()V b
	uploadAsFloat ()V j
	uploadAsInteger ()V i
	uploadAsMatrix ()V k
	uploadInteger (II)V b
com/mojang/blaze3d/systems/RenderSystem$AutoStorageIndexBuffer com/mojang/blaze3d/systems/RenderSystem$a
	generator c
	indexCount f
	indexStride b
	name d
	type e
	vertexStride a
	bind (I)V b
	ensureStorage (I)V c
	hasStorage (I)Z a
	intConsumer (Ljava/nio/ByteBuffer;)Lit/unimi/dsi/fastutil/ints/IntConsumer; a
	type ()Lcom/mojang/blaze3d/vertex/VertexFormat$IndexType; a
com/mojang/blaze3d/systems/RenderSystem$AutoStorageIndexBuffer$IndexGenerator com/mojang/blaze3d/systems/RenderSystem$a$a
com/mojang/blaze3d/systems/TimerQuery eic
	nextQueryName a
	beginProfile ()V b
	endProfile ()Lcom/mojang/blaze3d/systems/TimerQuery$FrameProfile; c
	getInstance ()Ljava/util/Optional; a
com/mojang/blaze3d/systems/TimerQuery$FrameProfile eic$a
	CANCELLED_RESULT b
	NO_RESULT a
	queryName c
	result d
	cancel ()V a
	get ()J c
	isDone ()Z b
com/mojang/blaze3d/systems/TimerQuery$TimerQueryLazyLoader eic$b
	INSTANCE a
	instantiate ()Lcom/mojang/blaze3d/systems/TimerQuery; a
com/mojang/blaze3d/vertex/BufferBuilder eie
	GROWTH_SIZE f
	LOGGER g
	buffer h
	building s
	currentElement m
	elementIndex n
	fastFormat q
	format o
	fullFormat r
	indexOnly v
	mode p
	nextElementByte k
	renderedBufferCount i
	renderedBufferPointer j
	sorting u
	sortingPoints t
	vertices l
	begin (Lcom/mojang/blaze3d/vertex/VertexFormat$Mode;Lcom/mojang/blaze3d/vertex/VertexFormat;)V a
	bufferSlice (II)Ljava/nio/ByteBuffer; c
	building ()Z j
	clear ()V g
	color (IIII)Lcom/mojang/blaze3d/vertex/VertexConsumer; a
	currentElement ()Lcom/mojang/blaze3d/vertex/VertexFormatElement; i
	discard ()V h
	end ()Lcom/mojang/blaze3d/vertex/BufferBuilder$RenderedBuffer; d
	endOrDiscardIfEmpty ()Lcom/mojang/blaze3d/vertex/BufferBuilder$RenderedBuffer; c
	endVertex ()V e
	ensureCapacity (I)V d
	ensureDrawing ()V n
	ensureVertexCapacity ()V l
	getSortState ()Lcom/mojang/blaze3d/vertex/BufferBuilder$SortState; a
	intConsumer (ILcom/mojang/blaze3d/vertex/VertexFormat$IndexType;)Lit/unimi/dsi/fastutil/ints/IntConsumer; a
	isCurrentBatchEmpty ()Z b
	makeQuadSortingPoints ()[Lorg/joml/Vector3f; m
	nextElement ()V f
	putByte (IB)V a
	putFloat (IF)V a
	putShort (IS)V a
	putSortedQuadIndices (Lcom/mojang/blaze3d/vertex/VertexFormat$IndexType;)V a
	releaseRenderedBuffer ()V q
	reset ()V p
	restoreSortState (Lcom/mojang/blaze3d/vertex/BufferBuilder$SortState;)V a
	roundUp (I)I e
	setQuadSorting (Lcom/mojang/blaze3d/vertex/VertexSorting;)V a
	storeRenderedBuffer ()Lcom/mojang/blaze3d/vertex/BufferBuilder$RenderedBuffer; o
	switchFormat (Lcom/mojang/blaze3d/vertex/VertexFormat;)V a
	vertex (FFFFFFFFFIIFFF)V a
com/mojang/blaze3d/vertex/BufferBuilder$DrawState eie$a
	format a
	indexCount c
	indexOnly f
	indexType e
	mode d
	sequentialIndex g
	vertexCount b
	bufferSize ()I f
	format ()Lcom/mojang/blaze3d/vertex/VertexFormat; g
	indexBufferEnd ()I e
	indexBufferSize ()I n
	indexBufferStart ()I d
	indexCount ()I i
	indexOnly ()Z l
	indexType ()Lcom/mojang/blaze3d/vertex/VertexFormat$IndexType; k
	mode ()Lcom/mojang/blaze3d/vertex/VertexFormat$Mode; j
	sequentialIndex ()Z m
	vertexBufferEnd ()I c
	vertexBufferSize ()I a
	vertexBufferStart ()I b
	vertexCount ()I h
com/mojang/blaze3d/vertex/BufferBuilder$RenderedBuffer eie$b
	drawState c
	pointer b
	released d
	drawState ()Lcom/mojang/blaze3d/vertex/BufferBuilder$DrawState; c
	indexBuffer ()Ljava/nio/ByteBuffer; b
	isEmpty ()Z d
	release ()V e
	vertexBuffer ()Ljava/nio/ByteBuffer; a
com/mojang/blaze3d/vertex/BufferBuilder$SortState eie$c
	mode a
	sorting d
	sortingPoints c
	vertices b
com/mojang/blaze3d/vertex/BufferUploader eif
	lastImmediateBuffer a
	_drawWithShader (Lcom/mojang/blaze3d/vertex/BufferBuilder$RenderedBuffer;)V c
	bindImmediateBuffer (Lcom/mojang/blaze3d/vertex/VertexBuffer;)V a
	bindImmediateBuffer (Lcom/mojang/blaze3d/vertex/VertexFormat;)Lcom/mojang/blaze3d/vertex/VertexBuffer; a
	draw (Lcom/mojang/blaze3d/vertex/BufferBuilder$RenderedBuffer;)V b
	drawWithShader (Lcom/mojang/blaze3d/vertex/BufferBuilder$RenderedBuffer;)V a
	invalidate ()V b
	reset ()V a
	upload (Lcom/mojang/blaze3d/vertex/BufferBuilder$RenderedBuffer;)Lcom/mojang/blaze3d/vertex/VertexBuffer; d
com/mojang/blaze3d/vertex/BufferVertexConsumer eig
	color (IIII)Lcom/mojang/blaze3d/vertex/VertexConsumer; a
	currentElement ()Lcom/mojang/blaze3d/vertex/VertexFormatElement; i
	nextElement ()V f
	normal (FFF)Lcom/mojang/blaze3d/vertex/VertexConsumer; a
	normalIntValue (F)B a
	overlayCoords (II)Lcom/mojang/blaze3d/vertex/VertexConsumer; a
	putByte (IB)V a
	putFloat (IF)V a
	putShort (IS)V a
	uv (FF)Lcom/mojang/blaze3d/vertex/VertexConsumer; a
	uv2 (II)Lcom/mojang/blaze3d/vertex/VertexConsumer; b
	uvShort (SSI)Lcom/mojang/blaze3d/vertex/VertexConsumer; a
	vertex (DDD)Lcom/mojang/blaze3d/vertex/VertexConsumer; a
com/mojang/blaze3d/vertex/DefaultVertexFormat eih
	BLIT_SCREEN i
	BLOCK j
	ELEMENT_COLOR b
	ELEMENT_NORMAL f
	ELEMENT_PADDING g
	ELEMENT_POSITION a
	ELEMENT_UV h
	ELEMENT_UV0 c
	ELEMENT_UV1 d
	ELEMENT_UV2 e
	NEW_ENTITY k
	PARTICLE l
	POSITION m
	POSITION_COLOR n
	POSITION_COLOR_LIGHTMAP p
	POSITION_COLOR_NORMAL o
	POSITION_COLOR_TEX r
	POSITION_COLOR_TEX_LIGHTMAP t
	POSITION_TEX q
	POSITION_TEX_COLOR s
	POSITION_TEX_COLOR_NORMAL v
	POSITION_TEX_LIGHTMAP_COLOR u
com/mojang/blaze3d/vertex/DefaultedVertexConsumer eii
	defaultA e
	defaultB d
	defaultColorSet a
	defaultG c
	defaultR b
	defaultColor (IIII)V b
	unsetDefaultColor ()V k
com/mojang/blaze3d/vertex/PoseStack eij
	poseStack a
	clear ()Z d
	last ()Lcom/mojang/blaze3d/vertex/PoseStack$Pose; c
	mulPose (Lorg/joml/Quaternionf;)V a
	mulPoseMatrix (Lorg/joml/Matrix4f;)V a
	popPose ()V b
	pushPose ()V a
	rotateAround (Lorg/joml/Quaternionf;FFF)V a
	scale (FFF)V b
	setIdentity ()V e
	translate (DDD)V a
	translate (FFF)V a
com/mojang/blaze3d/vertex/PoseStack$Pose eij$a
	normal b
	pose a
	normal ()Lorg/joml/Matrix3f; b
	pose ()Lorg/joml/Matrix4f; a
com/mojang/blaze3d/vertex/SheetedDecalTextureGenerator eik
	cameraInversePose g
	delegate f
	lightCoords o
	normalInversePose h
	nx p
	ny q
	nz r
	overlayU m
	overlayV n
	textureScale i
	x j
	y k
	z l
	color (IIII)Lcom/mojang/blaze3d/vertex/VertexConsumer; a
	endVertex ()V e
	normal (FFF)Lcom/mojang/blaze3d/vertex/VertexConsumer; a
	overlayCoords (II)Lcom/mojang/blaze3d/vertex/VertexConsumer; a
	resetState ()V a
	uv (FF)Lcom/mojang/blaze3d/vertex/VertexConsumer; a
	uv2 (II)Lcom/mojang/blaze3d/vertex/VertexConsumer; b
	vertex (DDD)Lcom/mojang/blaze3d/vertex/VertexConsumer; a
com/mojang/blaze3d/vertex/Tesselator eil
	INSTANCE d
	MAX_FLOATS b
	MAX_MEMORY_USE a
	builder c
	end ()V b
	getBuilder ()Lcom/mojang/blaze3d/vertex/BufferBuilder; c
	getInstance ()Lcom/mojang/blaze3d/vertex/Tesselator; a
com/mojang/blaze3d/vertex/VertexBuffer eim
	arrayObjectId d
	format e
	indexBufferId c
	indexCount h
	indexType g
	mode i
	sequentialIndices f
	usage a
	vertexBufferId b
	_drawWithShader (Lorg/joml/Matrix4f;Lorg/joml/Matrix4f;Lnet/minecraft/client/renderer/ShaderInstance;)V b
	bind ()V a
	draw ()V c
	drawWithShader (Lorg/joml/Matrix4f;Lorg/joml/Matrix4f;Lnet/minecraft/client/renderer/ShaderInstance;)V a
	getFormat ()Lcom/mojang/blaze3d/vertex/VertexFormat; d
	getIndexType ()Lcom/mojang/blaze3d/vertex/VertexFormat$IndexType; f
	isInvalid ()Z e
	unbind ()V b
	upload (Lcom/mojang/blaze3d/vertex/BufferBuilder$RenderedBuffer;)V a
	uploadIndexBuffer (Lcom/mojang/blaze3d/vertex/BufferBuilder$DrawState;Ljava/nio/ByteBuffer;)Lcom/mojang/blaze3d/systems/RenderSystem$AutoStorageIndexBuffer; b
	uploadVertexBuffer (Lcom/mojang/blaze3d/vertex/BufferBuilder$DrawState;Ljava/nio/ByteBuffer;)Lcom/mojang/blaze3d/vertex/VertexFormat; a
com/mojang/blaze3d/vertex/VertexBuffer$Usage eim$a
	$VALUES d
	DYNAMIC b
	STATIC a
	id c
	$values ()[Lcom/mojang/blaze3d/vertex/VertexBuffer$Usage; a
com/mojang/blaze3d/vertex/VertexConsumer ein
	color (FFFF)Lcom/mojang/blaze3d/vertex/VertexConsumer; a
	color (I)Lcom/mojang/blaze3d/vertex/VertexConsumer; a
	color (IIII)Lcom/mojang/blaze3d/vertex/VertexConsumer; a
	defaultColor (IIII)V b
	endVertex ()V e
	normal (FFF)Lcom/mojang/blaze3d/vertex/VertexConsumer; a
	normal (Lorg/joml/Matrix3f;FFF)Lcom/mojang/blaze3d/vertex/VertexConsumer; a
	overlayCoords (I)Lcom/mojang/blaze3d/vertex/VertexConsumer; c
	overlayCoords (II)Lcom/mojang/blaze3d/vertex/VertexConsumer; a
	putBulkData (Lcom/mojang/blaze3d/vertex/PoseStack$Pose;Lnet/minecraft/client/renderer/block/model/BakedQuad;FFFII)V a
	putBulkData (Lcom/mojang/blaze3d/vertex/PoseStack$Pose;Lnet/minecraft/client/renderer/block/model/BakedQuad;[FFFF[IIZ)V a
	unsetDefaultColor ()V k
	uv (FF)Lcom/mojang/blaze3d/vertex/VertexConsumer; a
	uv2 (I)Lcom/mojang/blaze3d/vertex/VertexConsumer; b
	uv2 (II)Lcom/mojang/blaze3d/vertex/VertexConsumer; b
	vertex (DDD)Lcom/mojang/blaze3d/vertex/VertexConsumer; a
	vertex (FFFFFFFFFIIFFF)V a
	vertex (Lorg/joml/Matrix4f;FFF)Lcom/mojang/blaze3d/vertex/VertexConsumer; a
com/mojang/blaze3d/vertex/VertexFormat eio
	elementMapping b
	elements a
	immediateDrawVertexBuffer e
	offsets c
	vertexSize d
	_clearBufferState ()V i
	_setupBufferState ()V h
	clearBufferState ()V f
	getElementAttributeNames ()Lcom/google/common/collect/ImmutableList; d
	getElements ()Lcom/google/common/collect/ImmutableList; c
	getImmediateDrawVertexBuffer ()Lcom/mojang/blaze3d/vertex/VertexBuffer; g
	getIntegerSize ()I a
	getVertexSize ()I b
	setupBufferState ()V e
com/mojang/blaze3d/vertex/VertexFormat$IndexType eio$a
	$VALUES e
	INT b
	SHORT a
	asGLType c
	bytes d
	$values ()[Lcom/mojang/blaze3d/vertex/VertexFormat$IndexType; a
	least (I)Lcom/mojang/blaze3d/vertex/VertexFormat$IndexType; a
com/mojang/blaze3d/vertex/VertexFormat$Mode eio$b
	$VALUES m
	DEBUG_LINES c
	DEBUG_LINE_STRIP d
	LINES a
	LINE_STRIP b
	QUADS h
	TRIANGLES e
	TRIANGLE_FAN g
	TRIANGLE_STRIP f
	asGLMode i
	connectedPrimitives l
	primitiveLength j
	primitiveStride k
	$values ()[Lcom/mojang/blaze3d/vertex/VertexFormat$Mode; a
	indexCount (I)I a
com/mojang/blaze3d/vertex/VertexFormatElement eip
	byteSize e
	count d
	index c
	type a
	usage b
	clearBufferState (I)V a
	getByteSize ()I e
	getCount ()I c
	getIndex ()I d
	getType ()Lcom/mojang/blaze3d/vertex/VertexFormatElement$Type; a
	getUsage ()Lcom/mojang/blaze3d/vertex/VertexFormatElement$Usage; b
	isPosition ()Z f
	setupBufferState (IJI)V a
	supportsUsage (ILcom/mojang/blaze3d/vertex/VertexFormatElement$Usage;)Z a
com/mojang/blaze3d/vertex/VertexFormatElement$Type eip$a
	$VALUES k
	BYTE c
	FLOAT a
	INT g
	SHORT e
	UBYTE b
	UINT f
	USHORT d
	glType j
	name i
	size h
	$values ()[Lcom/mojang/blaze3d/vertex/VertexFormatElement$Type; d
	getGlType ()I c
	getName ()Ljava/lang/String; b
	getSize ()I a
com/mojang/blaze3d/vertex/VertexFormatElement$Usage eip$b
	$VALUES j
	COLOR c
	GENERIC f
	NORMAL b
	PADDING e
	POSITION a
	UV d
	clearState i
	name g
	setupState h
	$values ()[Lcom/mojang/blaze3d/vertex/VertexFormatElement$Usage; b
	clearBufferState (II)V a
	getName ()Ljava/lang/String; a
	setupBufferState (IIIJII)V a
com/mojang/blaze3d/vertex/VertexFormatElement$Usage$ClearState eip$b$a
com/mojang/blaze3d/vertex/VertexFormatElement$Usage$SetupState eip$b$b
com/mojang/blaze3d/vertex/VertexMultiConsumer eiq
	create ()Lcom/mojang/blaze3d/vertex/VertexConsumer; a
	create (Lcom/mojang/blaze3d/vertex/VertexConsumer;)Lcom/mojang/blaze3d/vertex/VertexConsumer; a
	create (Lcom/mojang/blaze3d/vertex/VertexConsumer;Lcom/mojang/blaze3d/vertex/VertexConsumer;)Lcom/mojang/blaze3d/vertex/VertexConsumer; a
	create ([Lcom/mojang/blaze3d/vertex/VertexConsumer;)Lcom/mojang/blaze3d/vertex/VertexConsumer; a
com/mojang/blaze3d/vertex/VertexMultiConsumer$Double eiq$a
	first a
	second b
	color (IIII)Lcom/mojang/blaze3d/vertex/VertexConsumer; a
	defaultColor (IIII)V b
	endVertex ()V e
	normal (FFF)Lcom/mojang/blaze3d/vertex/VertexConsumer; a
	overlayCoords (II)Lcom/mojang/blaze3d/vertex/VertexConsumer; a
	unsetDefaultColor ()V k
	uv (FF)Lcom/mojang/blaze3d/vertex/VertexConsumer; a
	uv2 (II)Lcom/mojang/blaze3d/vertex/VertexConsumer; b
	vertex (DDD)Lcom/mojang/blaze3d/vertex/VertexConsumer; a
	vertex (FFFFFFFFFIIFFF)V a
com/mojang/blaze3d/vertex/VertexMultiConsumer$Multiple eiq$b
	delegates a
	color (IIII)Lcom/mojang/blaze3d/vertex/VertexConsumer; a
	defaultColor (IIII)V b
	endVertex ()V e
	forEach (Ljava/util/function/Consumer;)V a
	normal (FFF)Lcom/mojang/blaze3d/vertex/VertexConsumer; a
	overlayCoords (II)Lcom/mojang/blaze3d/vertex/VertexConsumer; a
	unsetDefaultColor ()V k
	uv (FF)Lcom/mojang/blaze3d/vertex/VertexConsumer; a
	uv2 (II)Lcom/mojang/blaze3d/vertex/VertexConsumer; b
	vertex (DDD)Lcom/mojang/blaze3d/vertex/VertexConsumer; a
	vertex (FFFFFFFFFIIFFF)V a
com/mojang/blaze3d/vertex/VertexSorting eir
	DISTANCE_TO_ORIGIN a
	ORTHOGRAPHIC_Z b
	byDistance (FFF)Lcom/mojang/blaze3d/vertex/VertexSorting; a
	byDistance (Lcom/mojang/blaze3d/vertex/VertexSorting$DistanceFunction;)Lcom/mojang/blaze3d/vertex/VertexSorting; a
	byDistance (Lorg/joml/Vector3f;)Lcom/mojang/blaze3d/vertex/VertexSorting; a
com/mojang/blaze3d/vertex/VertexSorting$DistanceFunction eir$a
com/mojang/math/Axis a
	XN a
	XP b
	YN c
	YP d
	ZN e
	ZP f
com/mojang/math/Constants b
	DEG_TO_RAD c
	EPSILON d
	PI a
	RAD_TO_DEG b
com/mojang/math/Divisor c
	denominator a
	mod c
	quotient b
	remainder e
	returnedParts d
	asIterable (II)Ljava/lang/Iterable; a
com/mojang/math/FieldsAreNonnullByDefault d
com/mojang/math/GivensParameters e
	cosHalf b
	sinHalf a
	aroundX (Lorg/joml/Matrix3f;)Lorg/joml/Matrix3f; a
	aroundX (Lorg/joml/Quaternionf;)Lorg/joml/Quaternionf; a
	aroundY (Lorg/joml/Matrix3f;)Lorg/joml/Matrix3f; b
	aroundY (Lorg/joml/Quaternionf;)Lorg/joml/Quaternionf; b
	aroundZ (Lorg/joml/Matrix3f;)Lorg/joml/Matrix3f; c
	aroundZ (Lorg/joml/Quaternionf;)Lorg/joml/Quaternionf; c
	cos ()F b
	cosHalf ()F e
	fromPositiveAngle (F)Lcom/mojang/math/GivensParameters; a
	fromUnnormalized (FF)Lcom/mojang/math/GivensParameters; a
	inverse ()Lcom/mojang/math/GivensParameters; a
	sin ()F c
	sinHalf ()F d
com/mojang/math/MatrixUtil f
	G a
	PI_4 b
	approxGivensQuat (FFF)Lcom/mojang/math/GivensParameters; a
	eigenvalueJacobi (Lorg/joml/Matrix3f;I)Lorg/joml/Quaternionf; a
	mulComponentWise (Lorg/joml/Matrix4f;F)Lorg/joml/Matrix4f; a
	qrGivensQuat (FF)Lcom/mojang/math/GivensParameters; a
	similarityTransform (Lorg/joml/Matrix3f;Lorg/joml/Matrix3f;)V a
	stepJacobi (Lorg/joml/Matrix3f;Lorg/joml/Matrix3f;Lorg/joml/Quaternionf;Lorg/joml/Quaternionf;)V a
	svdDecompose (Lorg/joml/Matrix3f;)Lorg/apache/commons/lang3/tuple/Triple; a
com/mojang/math/MethodsReturnNonnullByDefault g
com/mojang/math/OctahedralGroup h
	$VALUES ag
	IDENTITY a
	INVERSION y
	INVERT_X z
	INVERT_Y A
	INVERT_Z B
	ROT_120_NNN e
	ROT_120_NNP f
	ROT_120_NPN g
	ROT_120_NPP h
	ROT_120_PNN i
	ROT_120_PNP j
	ROT_120_PPN k
	ROT_120_PPP l
	ROT_180_EDGE_XY_NEG m
	ROT_180_EDGE_XY_POS n
	ROT_180_EDGE_XZ_NEG o
	ROT_180_EDGE_XZ_POS p
	ROT_180_EDGE_YZ_NEG q
	ROT_180_EDGE_YZ_POS r
	ROT_180_FACE_XY b
	ROT_180_FACE_XZ c
	ROT_180_FACE_YZ d
	ROT_60_REF_NNN C
	ROT_60_REF_NNP D
	ROT_60_REF_NPN E
	ROT_60_REF_NPP F
	ROT_60_REF_PNN G
	ROT_60_REF_PNP H
	ROT_60_REF_PPN I
	ROT_60_REF_PPP J
	ROT_90_REF_X_NEG Q
	ROT_90_REF_X_POS R
	ROT_90_REF_Y_NEG S
	ROT_90_REF_Y_POS T
	ROT_90_REF_Z_NEG U
	ROT_90_REF_Z_POS V
	ROT_90_X_NEG s
	ROT_90_X_POS t
	ROT_90_Y_NEG u
	ROT_90_Y_POS v
	ROT_90_Z_NEG w
	ROT_90_Z_POS x
	SWAP_NEG_XY N
	SWAP_NEG_XZ P
	SWAP_NEG_YZ O
	SWAP_XY K
	SWAP_XZ M
	SWAP_YZ L
	cayleyTable ae
	inverseTable af
	invertX aa
	invertY ab
	invertZ ac
	name Y
	permutation ad
	rotatedDirections Z
	transformation X
	$values ()[Lcom/mojang/math/OctahedralGroup; e
	compose (Lcom/mojang/math/OctahedralGroup;)Lcom/mojang/math/OctahedralGroup; a
	getSerializedName ()Ljava/lang/String; c
	inverse ()Lcom/mojang/math/OctahedralGroup; a
	inverts (Lnet/minecraft/core/Direction$Axis;)Z a
	packInversions ()Lit/unimi/dsi/fastutil/booleans/BooleanList; d
	rotate (Lnet/minecraft/core/Direction;)Lnet/minecraft/core/Direction; a
	rotate (Lnet/minecraft/core/FrontAndTop;)Lnet/minecraft/core/FrontAndTop; a
	transformation ()Lorg/joml/Matrix3f; b
com/mojang/math/SymmetricGroup3 i
	$VALUES k
	ORDER i
	P123 a
	P132 c
	P213 b
	P231 d
	P312 e
	P321 f
	cayleyTable j
	permutation g
	transformation h
	$values ()[Lcom/mojang/math/SymmetricGroup3; b
	compose (Lcom/mojang/math/SymmetricGroup3;)Lcom/mojang/math/SymmetricGroup3; a
	permutation (I)I a
	transformation ()Lorg/joml/Matrix3f; a
com/mojang/math/Transformation j
	CODEC a
	EXTENDED_CODEC b
	IDENTITY i
	decomposed d
	leftRotation f
	matrix c
	rightRotation h
	scale g
	translation e
	compose (Lcom/mojang/math/Transformation;)Lcom/mojang/math/Transformation; a
	compose (Lorg/joml/Vector3f;Lorg/joml/Quaternionf;Lorg/joml/Vector3f;Lorg/joml/Quaternionf;)Lorg/joml/Matrix4f; a
	ensureDecomposed ()V h
	getLeftRotation ()Lorg/joml/Quaternionf; e
	getMatrix ()Lorg/joml/Matrix4f; c
	getRightRotation ()Lorg/joml/Quaternionf; g
	getScale ()Lorg/joml/Vector3f; f
	getTranslation ()Lorg/joml/Vector3f; d
	identity ()Lcom/mojang/math/Transformation; a
	inverse ()Lcom/mojang/math/Transformation; b
	slerp (Lcom/mojang/math/Transformation;F)Lcom/mojang/math/Transformation; a
com/mojang/realmsclient/KeyCombo eit
	chars a
	matchIndex b
	onCompletion c
	keyPressed (C)Z a
	reset ()V a
com/mojang/realmsclient/RealmsMainScreen eiu
	BUTTON_BOTTOM_ROW_WIDTH am
	BUTTON_TOP_ROW_WIDTH al
	BUTTON_WIDTH ak
	CONFIGURE_SERVER_TEXT ab
	CROSS_ICON_LOCATION P
	DARKEN_LOCATION O
	EXPIRED_ICON_LOCATION G
	EXPIRES_SOON_ICON_LOCATION H
	FOOTER_HEIGHT an
	HEADER_HEIGHT at
	INFO_ICON_LOCATION R
	INVITATION_ICONS_LOCATION I
	INVITE_ICON_LOCATION J
	LEAVE_SERVER_TEXT aa
	LOGGER a
	LOGO_HEIGHT ap
	LOGO_LOCATION L
	LOGO_PADDING as
	LOGO_TEXTURE_HEIGHT ar
	LOGO_TEXTURE_WIDTH aq
	LOGO_WIDTH ao
	NEWS_LOCATION M
	NEWS_TOOLTIP ah
	OFF_ICON_LOCATION c
	ON_ICON_LOCATION b
	PLAY_TEXT Z
	POPUP_LOCATION N
	POPUP_TEXT Y
	SELECT_MINIGAME_PREFIX X
	SERVER_CLOSED_TOOLTIP ag
	SERVER_EXPIRED_TOOLTIP ac
	SERVER_EXPIRES_IN_DAY_TOOLTIP ae
	SERVER_EXPIRES_SOON_TOOLTIP ad
	SERVER_OPEN_TOOLTIP af
	SERVER_UNITIALIZED_TEXT T
	SUBSCRIPTION_EXPIRED_TEXT U
	SUBSCRIPTION_RENEW_TEXT V
	TRIAL_EXPIRED_TEXT W
	TRIAL_ICON_LOCATION Q
	TRIAL_MESSAGE_LINES S
	TRIAL_TEXT aj
	UNITIALIZED_WORLD_NARRATION ai
	WORLDICON_LOCATION K
	animTick aR
	backButton aL
	buyARealmButton bm
	carouselIndex ba
	carouselTick bb
	checkedClientCompatability aC
	checkedParentalConsent aB
	closeButton bn
	configureButton aN
	connectLock bf
	createTrialButton bl
	createdTrial aW
	dataSubscription av
	dontSetConnectedToRealms aG
	formattedPopup bg
	handledSeenNotifications ax
	hasFetchedServers aS
	hasParentalConsent aA
	hasSwitchedCarouselImage bc
	hasUnreadNews aY
	inviteNarrationLimiter aF
	justClosedPopup aU
	keyCombos bd
	lastClickTime be
	lastScreen aH
	lastScrollYPosition az
	leaveButton aO
	newsButton bk
	newsLink aZ
	notifications bh
	numberOfPendingInvites aQ
	overrideConfigure ay
	pendingInvitesButton bj
	playButton aK
	popupOpenedByUser aT
	realmSelectionList aI
	realmsGenericErrorScreen aD
	realmsSelectionListAdded aJ
	realmsServers aP
	regionsPinged aE
	renewButton aM
	serverList aw
	showPopupButton bi
	showingPopup aX
	teaserImages au
	trialsAvailable aV
	addEntriesForNotification (Lcom/mojang/realmsclient/RealmsMainScreen$RealmSelectionList;Lcom/mojang/realmsclient/dto/RealmsNotification;)V a
	addFooterButtons ()V e
	addMiddleButtons ()V d
	addTopButtons ()V c
	callRealmsClient (Lcom/mojang/realmsclient/RealmsMainScreen$RealmsCall;Ljava/util/function/Consumer;)V a
	charTyped (CI)Z a
	checkClientCompatability ()V I
	checkParentalConsent ()V J
	configureClicked (Lcom/mojang/realmsclient/dto/RealmsServer;)V g
	dismissNotification (Ljava/util/UUID;)V a
	drawClose (Lnet/minecraft/client/gui/GuiGraphics;IIII)V c
	drawExpired (Lnet/minecraft/client/gui/GuiGraphics;IIII)V a
	drawExpiring (Lnet/minecraft/client/gui/GuiGraphics;IIIII)V a
	drawOpen (Lnet/minecraft/client/gui/GuiGraphics;IIII)V b
	drawPopup (Lnet/minecraft/client/gui/GuiGraphics;IIF)V c
	getOwnedNonExpiredWorldIds ()Ljava/util/List; H
	getSelectedServer ()Lcom/mojang/realmsclient/dto/RealmsServer; O
	hasParentalConsent ()Z C
	init ()V b
	initDataFetcher (Lcom/mojang/realmsclient/gui/RealmsDataFetcher;)Lcom/mojang/realmsclient/gui/task/DataFetcher$Subscription; a
	isOutsidePopup (DD)Z a
	isSelfOwnedNonExpiredServer (Lcom/mojang/realmsclient/dto/RealmsServer;)Z k
	isSelfOwnedServer (Lcom/mojang/realmsclient/dto/RealmsServer;)Z j
	keyPressed (III)Z a
	leaveClicked (Lcom/mojang/realmsclient/dto/RealmsServer;)V h
	leaveServer (ZLcom/mojang/realmsclient/dto/RealmsServer;)V a
	mouseClicked (DDI)Z a
	newScreen ()Lcom/mojang/realmsclient/RealmsMainScreen; h
	onClosePopup ()V P
	onRenew (Lcom/mojang/realmsclient/dto/RealmsServer;)V f
	pingRegions ()V G
	play (Lcom/mojang/realmsclient/dto/RealmsServer;Lnet/minecraft/client/gui/screens/Screen;)V a
	popupX0 ()I Q
	popupY0 ()I R
	refreshFetcher ()V F
	refreshRealmsSelectionList ()V E
	removeServer (Lcom/mojang/realmsclient/dto/RealmsServer;)V i
	render (Lnet/minecraft/client/gui/GuiGraphics;IIF)V a
	renderLocal (Lnet/minecraft/client/gui/GuiGraphics;)V c
	renderNews (Lnet/minecraft/client/gui/GuiGraphics;IIZIIZZ)V a
	renderStage (Lnet/minecraft/client/gui/GuiGraphics;)V d
	resetScreen ()V g
	saveListScrollPosition ()V N
	setCreatedTrial (Z)V a
	shouldConfigureButtonBeActive (Lcom/mojang/realmsclient/dto/RealmsServer;)Z d
	shouldLeaveButtonBeActive (Lcom/mojang/realmsclient/dto/RealmsServer;)Z e
	shouldPlayButtonBeActive (Lcom/mojang/realmsclient/dto/RealmsServer;)Z b
	shouldRenewButtonBeActive (Lcom/mojang/realmsclient/dto/RealmsServer;)Z c
	shouldShowMessageInList ()Z B
	shouldShowPopup ()Z a
	shouldShowPopupButton ()Z D
	switchToLocal ()V L
	switchToProd ()V M
	switchToStage ()V K
	tick ()V f
	updateButtonStates (Lcom/mojang/realmsclient/dto/RealmsServer;)V a
	updateTeaserImages (Lnet/minecraft/server/packs/resources/ResourceManager;)V a
com/mojang/realmsclient/RealmsMainScreen$ButtonEntry eiu$a
	button c
	xPos d
	getNarration ()Lnet/minecraft/network/chat/Component; a
	keyPressed (III)Z a
	mouseClicked (DDI)Z a
	render (Lnet/minecraft/client/gui/GuiGraphics;IIIIIIIZF)V a
com/mojang/realmsclient/RealmsMainScreen$CloseButton eiu$b
com/mojang/realmsclient/RealmsMainScreen$CrossButton eiu$c
	renderWidget (Lnet/minecraft/client/gui/GuiGraphics;IIF)V b
com/mojang/realmsclient/RealmsMainScreen$Entry eiu$d
	getServer ()Lcom/mojang/realmsclient/dto/RealmsServer; b
com/mojang/realmsclient/RealmsMainScreen$NewsButton eiu$e
	SIDE b
	renderWidget (Lnet/minecraft/client/gui/GuiGraphics;IIF)V b
com/mojang/realmsclient/RealmsMainScreen$NotificationMessageEntry eiu$f
	ITEM_HEIGHT d
	OUTLINE_COLOR e
	SIDE_MARGINS c
	children g
	dismissButton h
	gridLayout j
	lastEntryWidth l
	text f
	textFrame k
	textWidget i
	getNarration ()Lnet/minecraft/network/chat/Component; a
	keyPressed (III)Z a
	mouseClicked (DDI)Z a
	refreshLayout (I)V b
	render (Lnet/minecraft/client/gui/GuiGraphics;IIIIIIIZF)V a
	renderBack (Lnet/minecraft/client/gui/GuiGraphics;IIIIIIIZF)V b
	updateEntryWidth (I)V a
com/mojang/realmsclient/RealmsMainScreen$PendingInvitesButton eiu$g
	HEIGHT G
	INVITES_HEIGHT J
	INVITES_OFFSET K
	INVITES_WIDTH I
	NO_PENDING_INVITES D
	PENDING_INVITES E
	TITLE C
	WIDTH F
	X_OFFSET H
	drawInvitations (Lnet/minecraft/client/gui/GuiGraphics;)V a
	renderWidget (Lnet/minecraft/client/gui/GuiGraphics;IIF)V b
	tick ()V a
com/mojang/realmsclient/RealmsMainScreen$RealmSelectionList eiu$h
	getMaxPosition ()I a
	getRowWidth ()I b
	setSelected (Lcom/mojang/realmsclient/RealmsMainScreen$Entry;)V a
	setSelected (Lnet/minecraft/client/gui/components/AbstractSelectionList$Entry;)V a
com/mojang/realmsclient/RealmsMainScreen$RealmsCall eiu$i
com/mojang/realmsclient/RealmsMainScreen$ServerEntry eiu$j
	SKIN_HEAD_LARGE_WIDTH c
	serverData d
	getNarration ()Lnet/minecraft/network/chat/Component; a
	getServer ()Lcom/mojang/realmsclient/dto/RealmsServer; b
	keyPressed (III)Z a
	mouseClicked (DDI)Z a
	render (Lnet/minecraft/client/gui/GuiGraphics;IIIIIIIZF)V a
	renderLegacy (Lcom/mojang/realmsclient/dto/RealmsServer;Lnet/minecraft/client/gui/GuiGraphics;IIII)V b
	renderMcoServerItem (Lcom/mojang/realmsclient/dto/RealmsServer;Lnet/minecraft/client/gui/GuiGraphics;IIII)V a
	renderStatusLights (Lcom/mojang/realmsclient/dto/RealmsServer;Lnet/minecraft/client/gui/GuiGraphics;IIIIII)V a
com/mojang/realmsclient/RealmsMainScreen$TrialEntry eiu$k
	getNarration ()Lnet/minecraft/network/chat/Component; a
	mouseClicked (DDI)Z a
	render (Lnet/minecraft/client/gui/GuiGraphics;IIIIIIIZF)V a
	renderTrialItem (Lnet/minecraft/client/gui/GuiGraphics;IIIII)V a
com/mojang/realmsclient/Unit eiv
	$VALUES f
	B a
	BASE_UNIT e
	GB d
	KB b
	MB c
	$values ()[Lcom/mojang/realmsclient/Unit; a
	convertTo (JLcom/mojang/realmsclient/Unit;)D a
	getLargest (J)Lcom/mojang/realmsclient/Unit; a
	humanReadable (J)Ljava/lang/String; b
	humanReadable (JLcom/mojang/realmsclient/Unit;)Ljava/lang/String; b
com/mojang/realmsclient/client/FileDownload eiw
	INVALID_FILE_NAMES k
	LOGGER a
	cancelled b
	currentThread i
	error d
	extracting e
	finished c
	request h
	requestConfig j
	resourcePackPath g
	tempFile f
	cancel ()V a
	contentLength (Ljava/lang/String;)J a
	deletePlayerTag (Ljava/io/File;)V a
	download (Lcom/mojang/realmsclient/dto/WorldDownload;Ljava/lang/String;Lcom/mojang/realmsclient/gui/screens/RealmsDownloadLatestWorldScreen$DownloadStatus;Lnet/minecraft/world/level/storage/LevelStorageSource;)V a
	findAvailableFolderName (Ljava/lang/String;)Ljava/lang/String; b
	isError ()Z c
	isExtracting ()Z d
	isFinished ()Z b
	untarGzipArchive (Ljava/lang/String;Ljava/io/File;Lnet/minecraft/world/level/storage/LevelStorageSource;)V a
com/mojang/realmsclient/client/FileDownload$DownloadCountingOutputStream eiw$a
	listener a
	setListener (Ljava/awt/event/ActionListener;)V a
com/mojang/realmsclient/client/FileDownload$ProgressListener eiw$b
	downloadStatus e
	levelStorageSource d
	tempFile c
	worldName b
com/mojang/realmsclient/client/FileDownload$ResourcePackProgressListener eiw$c
	downloadStatus c
	tempFile b
	worldDownload d
com/mojang/realmsclient/client/FileUpload eix
	LOGGER a
	MAX_RETRIES b
	UPLOAD_PATH c
	cancelled l
	clientVersion j
	file d
	requestConfig n
	sessionId h
	slotId f
	uploadInfo g
	uploadStatus k
	uploadTask m
	username i
	worldId e
	cancel ()V a
	cleanup (Lorg/apache/http/client/methods/HttpPost;Lorg/apache/http/impl/client/CloseableHttpClient;)V a
	getRetryDelaySeconds (Lorg/apache/http/HttpResponse;)J a
	handleResponse (Lorg/apache/http/HttpResponse;Lcom/mojang/realmsclient/gui/screens/UploadResult$Builder;)V a
	isFinished ()Z b
	requestUpload (I)Lcom/mojang/realmsclient/gui/screens/UploadResult; a
	retryUploadAfter (JI)Lcom/mojang/realmsclient/gui/screens/UploadResult; b
	setupRequest (Lorg/apache/http/client/methods/HttpPost;)V a
	shouldRetry (JI)Z a
	upload (Ljava/util/function/Consumer;)V a
com/mojang/realmsclient/client/FileUpload$CustomInputStreamEntity eix$a
	content b
	length a
	uploadStatus c
com/mojang/realmsclient/client/Ping eiy
	now ()J b
	ping (Ljava/lang/String;)I a
	ping ([Lcom/mojang/realmsclient/client/Ping$Region;)Ljava/util/List; a
	pingAllRegions ()Ljava/util/List; a
com/mojang/realmsclient/client/Ping$Region eiy$a
	$VALUES k
	AP_NORTHEAST_1 g
	AP_SOUTHEAST_1 e
	AP_SOUTHEAST_2 f
	EU_WEST_1 d
	SA_EAST_1 h
	US_EAST_1 a
	US_WEST_1 c
	US_WEST_2 b
	endpoint j
	name i
	$values ()[Lcom/mojang/realmsclient/client/Ping$Region; a
com/mojang/realmsclient/client/RealmsClient eiz
	ACTIVITIES_RESOURCE k
	GSON V
	INVITES_RESOURCE_PATH h
	LOGGER c
	MCO_RESOURCE_PATH i
	NOTIFICATIONS_RESOURCE o
	OPS_RESOURCE l
	PATH_ACCEPT_INVITE D
	PATH_AVAILABLE v
	PATH_CLIENT_COMPATIBLE P
	PATH_DELETE_WORLD L
	PATH_DISMISS_NOTIFICATIONS T
	PATH_GET_ACTIVTIES q
	PATH_GET_LIVESTATS r
	PATH_GET_SUBSCRIPTION s
	PATH_INITIALIZE p
	PATH_MARK_NOTIFICATIONS_SEEN S
	PATH_NEWS R
	PATH_OP t
	PATH_PENDING_INVITES C
	PATH_PENDING_INVITES_COUNT B
	PATH_PUT_INTO_MINIGAMES_MODE u
	PATH_REJECT_INVITE E
	PATH_SLOT H
	PATH_STAGE_AVAILABLE U
	PATH_TEMPLATES w
	PATH_TOS_AGREED Q
	PATH_UNINVITE_MYSELF F
	PATH_WORLD_BACKUPS M
	PATH_WORLD_CLOSE J
	PATH_WORLD_DOWNLOAD N
	PATH_WORLD_GET y
	PATH_WORLD_INVITES z
	PATH_WORLD_JOIN x
	PATH_WORLD_OPEN I
	PATH_WORLD_RESET K
	PATH_WORLD_UNINVITE A
	PATH_WORLD_UPDATE G
	PATH_WORLD_UPLOAD O
	REGIONS_RESOURCE m
	SUBSCRIPTION_RESOURCE j
	TRIALS_RESOURCE n
	WORLDS_RESOURCE_PATH g
	currentEnvironment a
	initialized b
	minecraft f
	sessionId d
	username e
	acceptInvitation (Ljava/lang/String;)V a
	agreeToTos ()V m
	backupsFor (J)Lcom/mojang/realmsclient/dto/BackupList; e
	clientCompatible ()Lcom/mojang/realmsclient/client/RealmsClient$CompatibleVersionResponse; j
	close (J)Ljava/lang/Boolean; g
	create ()Lcom/mojang/realmsclient/client/RealmsClient; a
	create (Lnet/minecraft/client/Minecraft;)Lcom/mojang/realmsclient/client/RealmsClient; a
	deleteWorld (J)V i
	deop (JLjava/lang/String;)Lcom/mojang/realmsclient/dto/Ops; f
	execute (Lcom/mojang/realmsclient/client/Request;)Ljava/lang/String; a
	fetchWorldTemplates (IILcom/mojang/realmsclient/dto/RealmsServer$WorldType;)Lcom/mojang/realmsclient/dto/WorldTemplatePaginatedList; a
	getActivity (J)Lcom/mojang/realmsclient/dto/ServerActivityList; b
	getHttpCodeDescription (I)Ljava/lang/String; a
	getLiveStats ()Lcom/mojang/realmsclient/dto/RealmsServerPlayerLists; g
	getNews ()Lcom/mojang/realmsclient/dto/RealmsNews; n
	getNotifications ()Ljava/util/List; f
	getOwnWorld (J)Lcom/mojang/realmsclient/dto/RealmsServer; a
	initializeWorld (JLjava/lang/String;Ljava/lang/String;)V a
	invite (JLjava/lang/String;)Lcom/mojang/realmsclient/dto/RealmsServer; b
	isBlocked (Lcom/mojang/realmsclient/dto/PendingInvite;)Z a
	join (J)Lcom/mojang/realmsclient/dto/RealmsServerAddress; c
	listWorlds ()Lcom/mojang/realmsclient/dto/RealmsServerList; e
	mcoEnabled ()Ljava/lang/Boolean; h
	notificationsDismiss (Ljava/util/List;)V b
	notificationsSeen (Ljava/util/List;)V a
	op (JLjava/lang/String;)Lcom/mojang/realmsclient/dto/Ops; e
	open (J)Ljava/lang/Boolean; f
	pendingInvites ()Lcom/mojang/realmsclient/dto/PendingInvitesList; l
	pendingInvitesCount ()I k
	putIntoMinigameMode (JLjava/lang/String;)Ljava/lang/Boolean; d
	rejectInvitation (Ljava/lang/String;)V b
	requestDownloadInfo (JI)Lcom/mojang/realmsclient/dto/WorldDownload; b
	requestUploadInfo (JLjava/lang/String;)Lcom/mojang/realmsclient/dto/UploadInfo; h
	resetWorldWithSeed (JLcom/mojang/realmsclient/util/WorldGenerationInfo;)Ljava/lang/Boolean; a
	resetWorldWithTemplate (JLjava/lang/String;)Ljava/lang/Boolean; g
	restoreWorld (JLjava/lang/String;)V c
	sendPingResults (Lcom/mojang/realmsclient/dto/PingResult;)V a
	stageAvailable ()Ljava/lang/Boolean; i
	subscriptionFor (J)Lcom/mojang/realmsclient/dto/Subscription; h
	switchSlot (JI)Z a
	switchToLocal ()V d
	switchToProd ()V c
	switchToStage ()V b
	trialAvailable ()Ljava/lang/Boolean; o
	uninvite (JLjava/lang/String;)V a
	uninviteMyselfFrom (J)V d
	update (JLjava/lang/String;Ljava/lang/String;)V b
	updateSlot (JILcom/mojang/realmsclient/dto/RealmsWorldOptions;)V a
	url (Ljava/lang/String;)Ljava/lang/String; c
	url (Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; a
	uuidListToJsonArray (Ljava/util/List;)Lcom/google/gson/JsonArray; c
com/mojang/realmsclient/client/RealmsClient$CompatibleVersionResponse eiz$a
	$VALUES d
	COMPATIBLE a
	OTHER c
	OUTDATED b
	$values ()[Lcom/mojang/realmsclient/client/RealmsClient$CompatibleVersionResponse; a
com/mojang/realmsclient/client/RealmsClient$Environment eiz$b
	$VALUES f
	LOCAL c
	PRODUCTION a
	STAGE b
	baseUrl d
	protocol e
	$values ()[Lcom/mojang/realmsclient/client/RealmsClient$Environment; a
	byName (Ljava/lang/String;)Ljava/util/Optional; a
com/mojang/realmsclient/client/RealmsClientConfig eja
	proxy a
	getProxy ()Ljava/net/Proxy; a
	setProxy (Ljava/net/Proxy;)V a
com/mojang/realmsclient/client/RealmsError ejb
	LOGGER a
	errorCode c
	errorMessage b
	getErrorCode ()I b
	getErrorMessage ()Ljava/lang/String; a
	parse (Ljava/lang/String;)Lcom/mojang/realmsclient/client/RealmsError; a
com/mojang/realmsclient/client/Request ejc
	DEFAULT_CONNECT_TIMEOUT e
	DEFAULT_READ_TIMEOUT d
	connected c
	connection a
	url b
	connect ()Lcom/mojang/realmsclient/client/Request; d
	cookie (Ljava/lang/String;Ljava/lang/String;)V a
	cookie (Ljava/net/HttpURLConnection;Ljava/lang/String;Ljava/lang/String;)V a
	delete (Ljava/lang/String;)Lcom/mojang/realmsclient/client/Request; b
	dispose ()V f
	doConnect ()Lcom/mojang/realmsclient/client/Request; e
	get (Ljava/lang/String;)Lcom/mojang/realmsclient/client/Request; a
	get (Ljava/lang/String;II)Lcom/mojang/realmsclient/client/Request; a
	getHeader (Ljava/lang/String;)Ljava/lang/String; c
	getHeader (Ljava/net/HttpURLConnection;Ljava/lang/String;)Ljava/lang/String; a
	getRetryAfterHeader ()I a
	getRetryAfterHeader (Ljava/net/HttpURLConnection;)I a
	header (Ljava/lang/String;Ljava/lang/String;)Lcom/mojang/realmsclient/client/Request; b
	post (Ljava/lang/String;Ljava/lang/String;)Lcom/mojang/realmsclient/client/Request; c
	post (Ljava/lang/String;Ljava/lang/String;II)Lcom/mojang/realmsclient/client/Request; a
	put (Ljava/lang/String;Ljava/lang/String;)Lcom/mojang/realmsclient/client/Request; d
	put (Ljava/lang/String;Ljava/lang/String;II)Lcom/mojang/realmsclient/client/Request; b
	read (Ljava/io/InputStream;)Ljava/lang/String; a
	responseCode ()I b
	text ()Ljava/lang/String; c
com/mojang/realmsclient/client/Request$Delete ejc$a
	doConnect ()Lcom/mojang/realmsclient/client/Request$Delete; f
	doConnect ()Lcom/mojang/realmsclient/client/Request; e
com/mojang/realmsclient/client/Request$Get ejc$b
	doConnect ()Lcom/mojang/realmsclient/client/Request$Get; f
	doConnect ()Lcom/mojang/realmsclient/client/Request; e
com/mojang/realmsclient/client/Request$Post ejc$c
	content c
	doConnect ()Lcom/mojang/realmsclient/client/Request$Post; f
	doConnect ()Lcom/mojang/realmsclient/client/Request; e
com/mojang/realmsclient/client/Request$Put ejc$d
	content c
	doConnect ()Lcom/mojang/realmsclient/client/Request$Put; f
	doConnect ()Lcom/mojang/realmsclient/client/Request; e
com/mojang/realmsclient/client/UploadStatus ejd
	bytesWritten a
	totalBytes b
com/mojang/realmsclient/dto/Backup ejf
	LOGGER f
	backupId a
	changeList e
	lastModifiedDate b
	metadata d
	size c
	uploadedVersion g
	isUploadedVersion ()Z a
	parse (Lcom/google/gson/JsonElement;)Lcom/mojang/realmsclient/dto/Backup; a
	setUploadedVersion (Z)V a
com/mojang/realmsclient/dto/BackupList ejg
	LOGGER b
	backups a
	parse (Ljava/lang/String;)Lcom/mojang/realmsclient/dto/BackupList; a
com/mojang/realmsclient/dto/GuardedSerializer ejh
	gson a
	fromJson (Ljava/lang/String;Ljava/lang/Class;)Lcom/mojang/realmsclient/dto/ReflectionBasedSerialization; a
	toJson (Lcom/google/gson/JsonElement;)Ljava/lang/String; a
	toJson (Lcom/mojang/realmsclient/dto/ReflectionBasedSerialization;)Ljava/lang/String; a
com/mojang/realmsclient/dto/Ops eji
	ops a
	parse (Ljava/lang/String;)Lcom/mojang/realmsclient/dto/Ops; a
com/mojang/realmsclient/dto/PendingInvite ejj
	LOGGER f
	date e
	invitationId a
	worldName b
	worldOwnerName c
	worldOwnerUuid d
	parse (Lcom/google/gson/JsonObject;)Lcom/mojang/realmsclient/dto/PendingInvite; a
com/mojang/realmsclient/dto/PendingInvitesList ejk
	LOGGER b
	pendingInvites a
	parse (Ljava/lang/String;)Lcom/mojang/realmsclient/dto/PendingInvitesList; a
com/mojang/realmsclient/dto/PingResult ejl
	pingResults a
	worldIds b
com/mojang/realmsclient/dto/PlayerInfo ejm
	accepted d
	name a
	online e
	operator c
	uuid b
	getAccepted ()Z d
	getName ()Ljava/lang/String; a
	getOnline ()Z e
	getUuid ()Ljava/lang/String; b
	isOperator ()Z c
	setAccepted (Z)V b
	setName (Ljava/lang/String;)V a
	setOnline (Z)V c
	setOperator (Z)V a
	setUuid (Ljava/lang/String;)V b
com/mojang/realmsclient/dto/RealmsDescriptionDto ejn
	description b
	name a
com/mojang/realmsclient/dto/RealmsNews ejo
	LOGGER b
	newsLink a
	parse (Ljava/lang/String;)Lcom/mojang/realmsclient/dto/RealmsNews; a
com/mojang/realmsclient/dto/RealmsNotification ejp
	DISMISSABLE c
	LOGGER a
	NOTIFICATION_UUID b
	SEEN d
	TYPE e
	VISIT_URL f
	dismissable h
	seen i
	type j
	uuid g
	dismissable ()Z b
	parse (Lcom/google/gson/JsonObject;)Lcom/mojang/realmsclient/dto/RealmsNotification; a
	parseList (Ljava/lang/String;)Ljava/util/List; a
	seen ()Z a
	uuid ()Ljava/util/UUID; c
com/mojang/realmsclient/dto/RealmsNotification$VisitUrl ejp$a
	BUTTON_TEXT b
	MESSAGE c
	URL a
	buttonText e
	message f
	url d
	buildOpenLinkButton (Lnet/minecraft/client/gui/screens/Screen;)Lnet/minecraft/client/gui/components/Button; a
	getMessage ()Lnet/minecraft/network/chat/Component; d
	parse (Lcom/mojang/realmsclient/dto/RealmsNotification;Lcom/google/gson/JsonObject;)Lcom/mojang/realmsclient/dto/RealmsNotification$VisitUrl; a
com/mojang/realmsclient/dto/RealmsServer ejq
	LOGGER s
	activeSlot n
	daysLeft l
	expired j
	expiredTrial k
	id a
	minigameId p
	minigameImage q
	minigameName o
	motd d
	name c
	owner f
	ownerUUID g
	players h
	remoteSubscriptionId b
	serverPing r
	slots i
	state e
	worldType m
	clone ()Lcom/mojang/realmsclient/dto/RealmsServer; d
	cloneSlots (Ljava/util/Map;)Ljava/util/Map; a
	createEmptySlots ()Ljava/util/Map; e
	getDescription ()Ljava/lang/String; a
	getMinigameName ()Ljava/lang/String; c
	getName ()Ljava/lang/String; b
	getState (Ljava/lang/String;)Lcom/mojang/realmsclient/dto/RealmsServer$State; e
	getWorldName (I)Ljava/lang/String; a
	getWorldType (Ljava/lang/String;)Lcom/mojang/realmsclient/dto/RealmsServer$WorldType; f
	parse (Lcom/google/gson/JsonObject;)Lcom/mojang/realmsclient/dto/RealmsServer; a
	parse (Ljava/lang/String;)Lcom/mojang/realmsclient/dto/RealmsServer; c
	parseInvited (Lcom/google/gson/JsonArray;)Ljava/util/List; a
	parseSlots (Lcom/google/gson/JsonArray;)Ljava/util/Map; b
	setDescription (Ljava/lang/String;)V b
	setName (Ljava/lang/String;)V a
	sortInvited (Lcom/mojang/realmsclient/dto/RealmsServer;)V a
	toServerData (Ljava/lang/String;)Lnet/minecraft/client/multiplayer/ServerData; d
	updateServerPing (Lcom/mojang/realmsclient/dto/RealmsServerPlayerList;)V a
com/mojang/realmsclient/dto/RealmsServer$McoServerComparator ejq$a
	refOwner a
	compare (Lcom/mojang/realmsclient/dto/RealmsServer;Lcom/mojang/realmsclient/dto/RealmsServer;)I a
com/mojang/realmsclient/dto/RealmsServer$State ejq$b
	$VALUES d
	CLOSED a
	OPEN b
	UNINITIALIZED c
	$values ()[Lcom/mojang/realmsclient/dto/RealmsServer$State; a
com/mojang/realmsclient/dto/RealmsServer$WorldType ejq$c
	$VALUES f
	ADVENTUREMAP c
	EXPERIENCE d
	INSPIRATION e
	MINIGAME b
	NORMAL a
	$values ()[Lcom/mojang/realmsclient/dto/RealmsServer$WorldType; a
com/mojang/realmsclient/dto/RealmsServerAddress ejr
	LOGGER d
	address a
	resourcePackHash c
	resourcePackUrl b
	parse (Ljava/lang/String;)Lcom/mojang/realmsclient/dto/RealmsServerAddress; a
com/mojang/realmsclient/dto/RealmsServerList ejs
	LOGGER b
	servers a
	parse (Ljava/lang/String;)Lcom/mojang/realmsclient/dto/RealmsServerList; a
com/mojang/realmsclient/dto/RealmsServerPing ejt
	nrOfPlayers a
	playerList b
com/mojang/realmsclient/dto/RealmsServerPlayerList eju
	JSON_PARSER d
	LOGGER c
	players b
	serverId a
	parse (Lcom/google/gson/JsonObject;)Lcom/mojang/realmsclient/dto/RealmsServerPlayerList; a
	parsePlayers (Lcom/google/gson/JsonArray;)Ljava/util/List; a
com/mojang/realmsclient/dto/RealmsServerPlayerLists ejv
	LOGGER b
	servers a
	parse (Ljava/lang/String;)Lcom/mojang/realmsclient/dto/RealmsServerPlayerLists; a
com/mojang/realmsclient/dto/RealmsText ejw
	ARGS b
	TRANSLATION_KEY a
	args d
	translationKey c
	createComponent (Lnet/minecraft/network/chat/Component;)Lnet/minecraft/network/chat/Component; a
	parse (Lcom/google/gson/JsonObject;)Lcom/mojang/realmsclient/dto/RealmsText; a
com/mojang/realmsclient/dto/RealmsWorldOptions ejx
	DEFAULT_COMMAND_BLOCKS t
	DEFAULT_DIFFICULTY u
	DEFAULT_FORCE_GAME_MODE n
	DEFAULT_GAME_MODE v
	DEFAULT_PVP o
	DEFAULT_SLOT_NAME w
	DEFAULT_SPAWN_ANIMALS p
	DEFAULT_SPAWN_MONSTERS q
	DEFAULT_SPAWN_NPCS r
	DEFAULT_SPAWN_PROTECTION s
	DEFAULT_TEMPLATE_ID x
	DEFAULT_TEMPLATE_IMAGE y
	commandBlocks f
	difficulty h
	empty l
	forceGameMode g
	gameMode i
	pvp a
	slotName m
	spawnAnimals b
	spawnMonsters c
	spawnNPCs d
	spawnProtection e
	templateId j
	templateImage k
	clone ()Lcom/mojang/realmsclient/dto/RealmsWorldOptions; d
	createDefaults ()Lcom/mojang/realmsclient/dto/RealmsWorldOptions; a
	createEmptyDefaults ()Lcom/mojang/realmsclient/dto/RealmsWorldOptions; b
	getDefaultSlotName (I)Ljava/lang/String; b
	getSlotName (I)Ljava/lang/String; a
	parse (Lcom/google/gson/JsonObject;)Lcom/mojang/realmsclient/dto/RealmsWorldOptions; a
	setEmpty (Z)V a
	toJson ()Ljava/lang/String; c
com/mojang/realmsclient/dto/RealmsWorldResetDto ejy
	generateStructures d
	levelType c
	seed a
	worldTemplateId b
com/mojang/realmsclient/dto/ReflectionBasedSerialization ejz
com/mojang/realmsclient/dto/RegionPingResult eka
	ping b
	regionName a
	ping ()I a
com/mojang/realmsclient/dto/ServerActivity ekb
	joinTime b
	leaveTime c
	profileUuid a
	parse (Lcom/google/gson/JsonObject;)Lcom/mojang/realmsclient/dto/ServerActivity; a
com/mojang/realmsclient/dto/ServerActivityList ekc
	periodInMillis a
	serverActivities b
	parse (Ljava/lang/String;)Lcom/mojang/realmsclient/dto/ServerActivityList; a
com/mojang/realmsclient/dto/Subscription ekd
	LOGGER d
	daysLeft b
	startDate a
	type c
	parse (Ljava/lang/String;)Lcom/mojang/realmsclient/dto/Subscription; a
	typeFrom (Ljava/lang/String;)Lcom/mojang/realmsclient/dto/Subscription$SubscriptionType; b
com/mojang/realmsclient/dto/Subscription$SubscriptionType ekd$a
	$VALUES c
	NORMAL a
	RECURRING b
	$values ()[Lcom/mojang/realmsclient/dto/Subscription$SubscriptionType; a
com/mojang/realmsclient/dto/UploadInfo eke
	DEFAULT_PORT c
	DEFAULT_SCHEMA b
	LOGGER a
	URI_SCHEMA_PATTERN d
	token f
	uploadEndpoint g
	worldClosed e
	assembleUri (Ljava/lang/String;I)Ljava/net/URI; a
	createRequest (Ljava/lang/String;)Ljava/lang/String; b
	ensureEndpointSchema (Ljava/lang/String;Ljava/util/regex/Matcher;)Ljava/lang/String; a
	getToken ()Ljava/lang/String; a
	getUploadEndpoint ()Ljava/net/URI; b
	isWorldClosed ()Z c
	parse (Ljava/lang/String;)Lcom/mojang/realmsclient/dto/UploadInfo; a
	selectPortOrDefault (II)I a
com/mojang/realmsclient/dto/ValueObject ekf
	getName (Ljava/lang/reflect/Field;)Ljava/lang/String; a
	isStatic (Ljava/lang/reflect/Field;)Z b
com/mojang/realmsclient/dto/WorldDownload ekg
	LOGGER d
	downloadLink a
	resourcePackHash c
	resourcePackUrl b
	parse (Ljava/lang/String;)Lcom/mojang/realmsclient/dto/WorldDownload; a
com/mojang/realmsclient/dto/WorldTemplate ekh
	LOGGER j
	author d
	id a
	image f
	link e
	name b
	recommendedPlayers h
	trailer g
	type i
	version c
	parse (Lcom/google/gson/JsonObject;)Lcom/mojang/realmsclient/dto/WorldTemplate; a
com/mojang/realmsclient/dto/WorldTemplate$WorldTemplateType ekh$a
	$VALUES f
	ADVENTUREMAP c
	EXPERIENCE d
	INSPIRATION e
	MINIGAME b
	WORLD_TEMPLATE a
	$values ()[Lcom/mojang/realmsclient/dto/WorldTemplate$WorldTemplateType; a
com/mojang/realmsclient/dto/WorldTemplatePaginatedList eki
	LOGGER e
	page b
	size c
	templates a
	total d
	isLastPage ()Z a
	parse (Ljava/lang/String;)Lcom/mojang/realmsclient/dto/WorldTemplatePaginatedList; a
com/mojang/realmsclient/exception/RealmsDefaultUncaughtExceptionHandler ekk
	logger a
com/mojang/realmsclient/exception/RealmsHttpException ekl
com/mojang/realmsclient/exception/RealmsServiceException ekm
	httpResultCode a
	rawResponse b
	realmsError c
	realmsErrorCodeOrDefault (I)I a
com/mojang/realmsclient/exception/RetryCallException ekn
	DEFAULT_DELAY d
	delaySeconds e
com/mojang/realmsclient/gui/ErrorCallback ekp
	error (Ljava/lang/String;)V a
	error (Lnet/minecraft/network/chat/Component;)V a
com/mojang/realmsclient/gui/RealmsDataFetcher ekq
	dataFetcher a
	liveStatsTask d
	newsManager h
	newsTask g
	notificationsTask b
	pendingInvitesTask e
	serverListUpdateTask c
	trialAvailabilityTask f
com/mojang/realmsclient/gui/RealmsNewsManager ekr
	hasUnreadNews b
	newsLink c
	newsLocalStorage a
	hasUnreadNews ()Z a
	newsLink ()Ljava/lang/String; b
	updateNewsStorage (Lcom/mojang/realmsclient/dto/RealmsNews;)Lcom/mojang/realmsclient/util/RealmsPersistence$RealmsPersistenceData; b
	updateUnreadNews (Lcom/mojang/realmsclient/dto/RealmsNews;)V a
com/mojang/realmsclient/gui/RealmsServerList eks
	minecraft a
	removedServers b
	servers c
	removeItem (Lcom/mojang/realmsclient/dto/RealmsServer;)Ljava/util/List; a
	updateServersList (Ljava/util/List;)Ljava/util/List; a
com/mojang/realmsclient/gui/RealmsWorldSlotButton ekt
	CHECK_MARK_LOCATION c
	DEFAULT_WORLD_SLOT_1 d
	DEFAULT_WORLD_SLOT_2 e
	DEFAULT_WORLD_SLOT_3 f
	EMPTY_SLOT_LOCATION b
	MINIGAME E
	SLOT_ACTIVE_TOOLTIP A
	SLOT_FRAME_LOCATION a
	SWITCH_TO_MINIGAME_SLOT_TOOLTIP C
	SWITCH_TO_WORLD_SLOT_TOOLTIP D
	serverDataProvider F
	slotIndex H
	state I
	toolTipSetter G
	drawSlotFrame (Lnet/minecraft/client/gui/GuiGraphics;IIIIZLjava/lang/String;IJLjava/lang/String;ZZLcom/mojang/realmsclient/gui/RealmsWorldSlotButton$Action;Lnet/minecraft/network/chat/Component;)V a
	getAction (Lcom/mojang/realmsclient/dto/RealmsServer;ZZ)Lcom/mojang/realmsclient/gui/RealmsWorldSlotButton$Action; a
	getState ()Lcom/mojang/realmsclient/gui/RealmsWorldSlotButton$State; a
	getTooltipAndNarration (Lcom/mojang/realmsclient/dto/RealmsServer;Ljava/lang/String;ZZLcom/mojang/realmsclient/gui/RealmsWorldSlotButton$Action;)Lcom/mojang/datafixers/util/Pair; a
	renderCheckMark (Lnet/minecraft/client/gui/GuiGraphics;II)V a
	renderWidget (Lnet/minecraft/client/gui/GuiGraphics;IIF)V b
	tick ()V b
com/mojang/realmsclient/gui/RealmsWorldSlotButton$Action ekt$a
	$VALUES d
	JOIN c
	NOTHING a
	SWITCH_SLOT b
	$values ()[Lcom/mojang/realmsclient/gui/RealmsWorldSlotButton$Action; a
com/mojang/realmsclient/gui/RealmsWorldSlotButton$State ekt$b
	action c
	actionPrompt h
	empty a
	image g
	imageId f
	isCurrentlyActiveSlot d
	minigame b
	slotName e
com/mojang/realmsclient/gui/RowButton eku
	height b
	width a
	xOffset c
	yOffset d
	draw (Lnet/minecraft/client/gui/GuiGraphics;IIZ)V a
	drawButtonsInRow (Lnet/minecraft/client/gui/GuiGraphics;Ljava/util/List;Lnet/minecraft/realms/RealmsObjectSelectionList;IIII)V a
	drawForRowAt (Lnet/minecraft/client/gui/GuiGraphics;IIII)V a
	getBottom ()I b
	getRight ()I a
	onClick (I)V a
	rowButtonMouseClicked (Lnet/minecraft/realms/RealmsObjectSelectionList;Lnet/minecraft/client/gui/components/ObjectSelectionList$Entry;Ljava/util/List;IDD)V a
com/mojang/realmsclient/gui/screens/RealmsBackupInfoScreen ekw
	UNKNOWN a
	backup c
	backupInfoList G
	lastScreen b
	checkForSpecificMetadata (Ljava/lang/String;Ljava/lang/String;)Lnet/minecraft/network/chat/Component; a
	gameDifficultyMetadata (Ljava/lang/String;)Lnet/minecraft/network/chat/Component; a
	gameModeMetadata (Ljava/lang/String;)Lnet/minecraft/network/chat/Component; b
	init ()V b
	keyPressed (III)Z a
	render (Lnet/minecraft/client/gui/GuiGraphics;IIF)V a
	tick ()V f
com/mojang/realmsclient/gui/screens/RealmsBackupInfoScreen$BackupInfoList ekw$a
com/mojang/realmsclient/gui/screens/RealmsBackupInfoScreen$BackupInfoListEntry ekw$b
	DESCRIPTION h
	ENABLED_PACK g
	GAME_DIFFICULTY c
	GAME_MODE i
	GAME_SERVER_VERSION e
	NAME d
	SEED j
	TEMPLATE_NAME b
	UNDEFINED l
	UPLOADED f
	WORLD_TYPE k
	key m
	value n
	getNarration ()Lnet/minecraft/network/chat/Component; a
	render (Lnet/minecraft/client/gui/GuiGraphics;IIIIIIIZF)V a
	translateKey (Ljava/lang/String;)Lnet/minecraft/network/chat/Component; a
com/mojang/realmsclient/gui/screens/RealmsBackupScreen ekx
	HAS_CHANGES_TOOLTIP H
	LOGGER a
	NO_BACKUPS_LABEL J
	PLUS_ICON_LOCATION b
	RESTORE_ICON_LOCATION c
	RESTORE_TOOLTIP G
	TITLE I
	UPLOADED_KEY U
	backupObjectSelectionList M
	backups L
	changesButton R
	downloadButton P
	lastScreen K
	noBackups S
	restoreButton Q
	selectedBackup N
	serverData T
	slotId O
	downloadClicked ()V E
	downloadWorldData ()V F
	init ()V b
	keyPressed (III)Z a
	render (Lnet/minecraft/client/gui/GuiGraphics;IIF)V a
	restore ()V G
	restoreClicked (I)V a
	shouldChangesButtonBeVisible ()Z C
	shouldRestoreButtonBeVisible ()Z D
	updateButtonStates ()V B
com/mojang/realmsclient/gui/screens/RealmsBackupScreen$BackupObjectSelectionList ekx$a
	addEntry (Lcom/mojang/realmsclient/dto/Backup;)V a
	getMaxPosition ()I a
	getRowWidth ()I b
	getScrollbarPosition ()I c
	renderBackground (Lnet/minecraft/client/gui/GuiGraphics;)V a
	selectInviteListItem (I)V b
	selectItem (I)V a
	setSelected (Lcom/mojang/realmsclient/gui/screens/RealmsBackupScreen$Entry;)V a
	setSelected (Lnet/minecraft/client/gui/components/AbstractSelectionList$Entry;)V a
com/mojang/realmsclient/gui/screens/RealmsBackupScreen$Entry ekx$b
	X_PADDING c
	Y_PADDING b
	backup d
	changesButton g
	children e
	restoreButton f
	addChangesButton ()V b
	addRestoreButton ()V d
	addToChangeList (Ljava/lang/String;)V a
	getMediumDatePresentation (Ljava/util/Date;)Ljava/lang/String; a
	getNarration ()Lnet/minecraft/network/chat/Component; a
	mouseClicked (DDI)Z a
	populateChangeList (Lcom/mojang/realmsclient/dto/Backup;)V a
	render (Lnet/minecraft/client/gui/GuiGraphics;IIIIIIIZF)V a
com/mojang/realmsclient/gui/screens/RealmsBrokenWorldScreen eky
	DEFAULT_BUTTON_WIDTH b
	LOGGER a
	animTick N
	lastScreen c
	leftX K
	mainScreen G
	message J
	rightX L
	serverData H
	serverId I
	slotsThatHasBeenDownloaded M
	addButtons ()V B
	backButtonClicked ()V C
	doSwitchOrReset ()V c
	downloadWorld (I)V b
	drawSlotFrame (Lnet/minecraft/client/gui/GuiGraphics;IIIIZLjava/lang/String;IJLjava/lang/String;Z)V a
	fetchServerData (J)V a
	getFramePositionX (I)I a
	getNarrationMessage ()Lnet/minecraft/network/chat/Component; au_
	init ()V b
	isMinigame ()Z D
	keyPressed (III)Z a
	render (Lnet/minecraft/client/gui/GuiGraphics;IIF)V a
	tick ()V f
com/mojang/realmsclient/gui/screens/RealmsClientOutdatedScreen ekz
	INCOMPATIBLE_MESSAGES c
	INCOMPATIBLE_MESSAGES_SNAPSHOT b
	INCOMPATIBLE_TITLE a
	lastScreen G
	getMessages ()[Lnet/minecraft/network/chat/Component; B
	init ()V b
	keyPressed (III)Z a
	render (Lnet/minecraft/client/gui/GuiGraphics;IIF)V a
com/mojang/realmsclient/gui/screens/RealmsConfigureWorldScreen ela
	DEFAULT_BUTTON_OFFSET Q
	DEFAULT_BUTTON_WIDTH P
	EXPIRED_ICON_LOCATION G
	EXPIRES_SOON_ICON_LOCATION H
	LOGGER a
	OFF_ICON_LOCATION c
	ON_ICON_LOCATION b
	SERVER_CLOSED_TOOLTIP O
	SERVER_EXPIRED_TOOLTIP K
	SERVER_EXPIRING_IN_DAY_TOOLTIP M
	SERVER_EXPIRING_SOON_TOOLTIP L
	SERVER_OPEN_TOOLTIP N
	TITLE J
	WORLD_LIST_TITLE I
	animTick af
	backupButton ab
	clicks ag
	lastScreen S
	leftX V
	optionsButton aa
	playersButton X
	resetWorldButton ac
	rightX W
	serverData T
	serverId U
	settingsButton Y
	slotButtonList ah
	stateChanged ae
	subscriptionButton Z
	switchMinigameButton ad
	toolTip R
	addSlotButton (I)Lcom/mojang/realmsclient/gui/RealmsWorldSlotButton; a
	backButtonClicked ()V B
	centerButton (II)I a
	closeTheWorld (Lnet/minecraft/client/gui/screens/Screen;)V a
	disableButtons ()V C
	drawClose (Lnet/minecraft/client/gui/GuiGraphics;IIII)V d
	drawExpired (Lnet/minecraft/client/gui/GuiGraphics;IIII)V b
	drawExpiring (Lnet/minecraft/client/gui/GuiGraphics;IIIII)V a
	drawOpen (Lnet/minecraft/client/gui/GuiGraphics;IIII)V c
	drawServerStatus (Lnet/minecraft/client/gui/GuiGraphics;IIII)V a
	fetchServerData (J)V a
	frame (I)I c
	getNewScreen ()Lcom/mojang/realmsclient/gui/screens/RealmsConfigureWorldScreen; d
	hide (Lnet/minecraft/client/gui/components/Button;)V a
	hideMinigameButtons ()V G
	hideRegularButtons ()V F
	init ()V b
	isMinigame ()Z E
	joinRealm (Lcom/mojang/realmsclient/dto/RealmsServer;)V a
	keyPressed (III)Z a
	leftButton (I)I b
	openTheWorld (ZLnet/minecraft/client/gui/screens/Screen;)V a
	render (Lnet/minecraft/client/gui/GuiGraphics;IIF)V a
	renderMousehoverTooltip (Lnet/minecraft/client/gui/GuiGraphics;Lnet/minecraft/network/chat/Component;II)V a
	saveSettings (Ljava/lang/String;Ljava/lang/String;)V a
	saveSlotSettings (Lcom/mojang/realmsclient/dto/RealmsWorldOptions;)V a
	show (Lnet/minecraft/client/gui/components/Button;)V b
	stateChanged ()V c
	switchToEmptySlot (ILcom/mojang/realmsclient/dto/RealmsServer;)V b
	switchToFullSlot (ILcom/mojang/realmsclient/dto/RealmsServer;)V a
	switchToMinigame ()V D
	templateSelectionCallback (Lcom/mojang/realmsclient/dto/WorldTemplate;)V a
	tick ()V f
com/mojang/realmsclient/gui/screens/RealmsConfirmScreen elb
	callback a
	title1 b
	title2 c
	init ()V b
	render (Lnet/minecraft/client/gui/GuiGraphics;IIF)V a
com/mojang/realmsclient/gui/screens/RealmsCreateRealmScreen elc
	DESCRIPTION_LABEL b
	NAME_LABEL a
	createButton J
	descriptionBox I
	lastScreen G
	nameBox H
	server c
	charTyped (CI)Z a
	createWorld ()V B
	init ()V b
	keyPressed (III)Z a
	render (Lnet/minecraft/client/gui/GuiGraphics;IIF)V a
	tick ()V f
	valid ()Z C
com/mojang/realmsclient/gui/screens/RealmsDownloadLatestWorldScreen eld
	BAR_BORDER I
	BAR_BOTTOM H
	BAR_TOP G
	BAR_WIDTH c
	DOTS ab
	DOWNLOAD_LOCK b
	LOGGER a
	animTick aa
	bytesPersSecond Z
	callback ae
	cancelButton N
	cancelled T
	checked ad
	dotIndex ac
	downloadStatus P
	downloadTitle L
	errorMessage Q
	extracting W
	finished V
	lastScreen J
	narrationRateLimiter M
	previousTimeSnapshot Y
	previousWrittenBytes X
	progress S
	showDots U
	status R
	worldDownload K
	worldName O
	backButtonClicked ()V D
	checkDownloadSize ()V B
	createProgressNarrationMessage ()Lnet/minecraft/network/chat/Component; C
	downloadCancelled ()V F
	downloadSave ()V E
	drawDots (Lnet/minecraft/client/gui/GuiGraphics;)V c
	drawDownloadSpeed (Lnet/minecraft/client/gui/GuiGraphics;)V e
	drawDownloadSpeed0 (Lnet/minecraft/client/gui/GuiGraphics;J)V a
	drawProgressBar (Lnet/minecraft/client/gui/GuiGraphics;)V d
	getContentLength (Ljava/lang/String;)J a
	init ()V b
	keyPressed (III)Z a
	render (Lnet/minecraft/client/gui/GuiGraphics;IIF)V a
	tick ()V f
com/mojang/realmsclient/gui/screens/RealmsDownloadLatestWorldScreen$DownloadStatus eld$a
	bytesWritten a
	totalBytes b
com/mojang/realmsclient/gui/screens/RealmsGenericErrorScreen ele
	line2Split c
	lines b
	nextScreen a
	errorMessage (Lcom/mojang/realmsclient/exception/RealmsServiceException;)Lcom/mojang/realmsclient/gui/screens/RealmsGenericErrorScreen$ErrorMessage; a
	errorMessage (Lnet/minecraft/network/chat/Component;)Lcom/mojang/realmsclient/gui/screens/RealmsGenericErrorScreen$ErrorMessage; a
	errorMessage (Lnet/minecraft/network/chat/Component;Lnet/minecraft/network/chat/Component;)Lcom/mojang/realmsclient/gui/screens/RealmsGenericErrorScreen$ErrorMessage; a
	getNarrationMessage ()Lnet/minecraft/network/chat/Component; au_
	init ()V b
	render (Lnet/minecraft/client/gui/GuiGraphics;IIF)V a
com/mojang/realmsclient/gui/screens/RealmsGenericErrorScreen$ErrorMessage ele$a
	detail b
	title a
	detail ()Lnet/minecraft/network/chat/Component; b
	title ()Lnet/minecraft/network/chat/Component; a
com/mojang/realmsclient/gui/screens/RealmsInviteScreen elf
	INVITING_PLAYER_TEXT c
	LOGGER a
	NAME_LABEL b
	NO_SUCH_PLAYER_ERROR_TEXT G
	configureScreen K
	inviteButton I
	lastScreen L
	message M
	profileName H
	serverData J
	init ()V b
	keyPressed (III)Z a
	onInvite ()V B
	render (Lnet/minecraft/client/gui/GuiGraphics;IIF)V a
	showMessage (Lnet/minecraft/network/chat/Component;)V a
	tick ()V f
com/mojang/realmsclient/gui/screens/RealmsLongConfirmationScreen elg
	INFO c
	WARNING b
	callback a
	line2 H
	line3 I
	type G
	yesNoQuestion J
	getNarrationMessage ()Lnet/minecraft/network/chat/Component; au_
	init ()V b
	keyPressed (III)Z a
	render (Lnet/minecraft/client/gui/GuiGraphics;IIF)V a
com/mojang/realmsclient/gui/screens/RealmsLongConfirmationScreen$Type elg$a
	$VALUES e
	INFO b
	WARNING a
	colorCode c
	text d
	$values ()[Lcom/mojang/realmsclient/gui/screens/RealmsLongConfirmationScreen$Type; a
com/mojang/realmsclient/gui/screens/RealmsLongRunningMcoTaskScreen elh
	LOGGER c
	REPEATED_NARRATOR b
	SYMBOLS a
	aborted J
	animTicks K
	buttonLength M
	cancelOrBackButton N
	errorMessage I
	lastScreen G
	task L
	title H
	aborted ()Z c
	cancelOrBackButtonClicked ()V B
	error (Lnet/minecraft/network/chat/Component;)V a
	init ()V b
	keyPressed (III)Z a
	render (Lnet/minecraft/client/gui/GuiGraphics;IIF)V a
	setTitle (Lnet/minecraft/network/chat/Component;)V b
	tick ()V f
com/mojang/realmsclient/gui/screens/RealmsNotificationsScreen eli
	INVITE_ICON_LOCATION a
	NEWS_ICON_LOCATION c
	TRIAL_ICON_LOCATION b
	UNSEEN_NOTIFICATION_ICON_LOCATION G
	checkedMcoAvailability K
	currentConfiguration I
	hasUnreadNews N
	hasUnseenNotifications O
	numberOfPendingInvites J
	onlyNotifications Q
	realmsDataSubscription H
	showAll P
	trialAvailable L
	validClient M
	addNewsAndInvitesSubscriptions (Lcom/mojang/realmsclient/gui/RealmsDataFetcher;Lcom/mojang/realmsclient/gui/task/DataFetcher$Subscription;)V a
	addNotificationsSubscriptions (Lcom/mojang/realmsclient/gui/RealmsDataFetcher;Lcom/mojang/realmsclient/gui/task/DataFetcher$Subscription;)V b
	added ()V ay_
	checkIfMcoEnabled ()V E
	drawIcons (Lnet/minecraft/client/gui/GuiGraphics;)V c
	getConfiguration ()Lcom/mojang/realmsclient/gui/screens/RealmsNotificationsScreen$DataFetcherConfiguration; B
	getRealmsNotificationsEnabled ()Z C
	inTitleScreen ()Z D
	init ()V b
	render (Lnet/minecraft/client/gui/GuiGraphics;IIF)V a
	tick ()V f
com/mojang/realmsclient/gui/screens/RealmsNotificationsScreen$DataFetcherConfiguration eli$a
	initDataFetcher (Lcom/mojang/realmsclient/gui/RealmsDataFetcher;)Lcom/mojang/realmsclient/gui/task/DataFetcher$Subscription; a
	showOldNotifications ()Z a
com/mojang/realmsclient/gui/screens/RealmsParentalConsentScreen elj
	MESSAGE a
	messageLines c
	nextScreen b
	getNarrationMessage ()Lnet/minecraft/network/chat/Component; au_
	init ()V b
	render (Lnet/minecraft/client/gui/GuiGraphics;IIF)V a
com/mojang/realmsclient/gui/screens/RealmsPendingInvitesScreen elk
	ACCEPT_ICON_LOCATION b
	ACCEPT_INVITE_TOOLTIP H
	LOGGER a
	NO_PENDING_INVITES_TEXT G
	REJECT_ICON_LOCATION c
	REJECT_INVITE_TOOLTIP I
	acceptButton O
	lastScreen J
	loaded L
	pendingInvitationSelectionList M
	rejectButton P
	selectedInvite N
	toolTip K
	accept (I)V c
	init ()V b
	keyPressed (III)Z a
	reject (I)V b
	render (Lnet/minecraft/client/gui/GuiGraphics;IIF)V a
	renderMousehoverTooltip (Lnet/minecraft/client/gui/GuiGraphics;Lnet/minecraft/network/chat/Component;II)V a
	shouldAcceptAndRejectButtonBeVisible (I)Z i
	updateButtonStates ()V B
	updateList (I)V a
com/mojang/realmsclient/gui/screens/RealmsPendingInvitesScreen$Entry elk$a
	TEXT_LEFT b
	pendingInvite c
	rowButtons d
	getNarration ()Lnet/minecraft/network/chat/Component; a
	mouseClicked (DDI)Z a
	render (Lnet/minecraft/client/gui/GuiGraphics;IIIIIIIZF)V a
	renderPendingInvitationItem (Lnet/minecraft/client/gui/GuiGraphics;Lcom/mojang/realmsclient/dto/PendingInvite;IIII)V a
com/mojang/realmsclient/gui/screens/RealmsPendingInvitesScreen$Entry$AcceptRowButton elk$a$a
	draw (Lnet/minecraft/client/gui/GuiGraphics;IIZ)V a
	onClick (I)V a
com/mojang/realmsclient/gui/screens/RealmsPendingInvitesScreen$Entry$RejectRowButton elk$a$b
	draw (Lnet/minecraft/client/gui/GuiGraphics;IIZ)V a
	onClick (I)V a
com/mojang/realmsclient/gui/screens/RealmsPendingInvitesScreen$PendingInvitationSelectionList elk$b
	getMaxPosition ()I a
	getRowWidth ()I b
	removeAtIndex (I)V b
	renderBackground (Lnet/minecraft/client/gui/GuiGraphics;)V a
	selectInviteListItem (I)V c
	selectItem (I)V a
	setSelected (Lcom/mojang/realmsclient/gui/screens/RealmsPendingInvitesScreen$Entry;)V a
	setSelected (Lnet/minecraft/client/gui/components/AbstractSelectionList$Entry;)V a
com/mojang/realmsclient/gui/screens/RealmsPlayerScreen ell
	CROSS_ICON_LOCATION G
	LOGGER a
	NORMAL_USER_TOOLTIP J
	NO_ENTRY_SELECTED M
	OPTIONS_BACKGROUND H
	OP_ICON_LOCATION b
	OP_TOOLTIP K
	QUESTION_TITLE I
	REMOVE_ENTRY_TOOLTIP L
	USER_ICON_LOCATION c
	column1X Q
	columnWidth R
	invitedObjectSelectionList P
	lastScreen N
	opdeopButton T
	playerIndex U
	removeButton S
	serverData O
	stateChanged V
	backButtonClicked ()V C
	deop (I)V k
	init ()V b
	keyPressed (III)Z a
	op (I)V j
	render (Lnet/minecraft/client/gui/GuiGraphics;IIF)V a
	shouldRemoveAndOpdeopButtonBeVisible (I)Z i
	uninvite (I)V l
	updateButtonStates ()V B
	updateOps (Lcom/mojang/realmsclient/dto/Ops;)V a
com/mojang/realmsclient/gui/screens/RealmsPlayerScreen$Entry ell$a
	BUTTON_HEIGHT e
	BUTTON_WIDTH d
	X_OFFSET b
	Y_PADDING c
	children g
	makeOpButton i
	playerInfo f
	removeButton h
	removeOpButton j
	getNarration ()Lnet/minecraft/network/chat/Component; a
	mouseClicked (DDI)Z a
	render (Lnet/minecraft/client/gui/GuiGraphics;IIIIIIIZF)V a
	updateButtons ()V b
com/mojang/realmsclient/gui/screens/RealmsPlayerScreen$InvitedObjectSelectionList ell$b
	addEntry (Lcom/mojang/realmsclient/dto/PlayerInfo;)V a
	getMaxPosition ()I a
	getRowWidth ()I b
	getScrollbarPosition ()I c
	renderBackground (Lnet/minecraft/client/gui/GuiGraphics;)V a
	selectInviteListItem (I)V b
	selectItem (I)V a
	setSelected (Lcom/mojang/realmsclient/gui/screens/RealmsPlayerScreen$Entry;)V a
	setSelected (Lnet/minecraft/client/gui/components/AbstractSelectionList$Entry;)V a
	updateButtons ()V d
com/mojang/realmsclient/gui/screens/RealmsResetNormalWorldScreen elm
	SEED_LABEL a
	buttonTitle I
	callback b
	generateStructures H
	levelType G
	seedEdit c
	init ()V b
	onClose ()V aw_
	render (Lnet/minecraft/client/gui/GuiGraphics;IIF)V a
	tick ()V f
com/mojang/realmsclient/gui/screens/RealmsResetWorldScreen eln
	ADVENTURE_MAP_LOCATION M
	EXPERIENCE_LOCATION P
	INSPIRATION_LOCATION Q
	LOGGER b
	NEW_WORLD_LOCATION O
	SLOT_FRAME_LOCATION K
	SURVIVAL_SPAWN_LOCATION N
	UPLOAD_LOCATION L
	adventuremaps S
	buttonTitle I
	callback X
	experiences T
	inspirations U
	lastScreen c
	resetTitle V
	resetWorldRunnable W
	serverData G
	slot a
	subtitle H
	subtitleColor J
	templates R
	drawFrame (Lnet/minecraft/client/gui/GuiGraphics;IILnet/minecraft/network/chat/Component;Lnet/minecraft/resources/ResourceLocation;ZZ)V a
	frame (I)I b
	generationSelectionCallback (Lcom/mojang/realmsclient/util/WorldGenerationInfo;)V a
	getNarrationMessage ()Lnet/minecraft/network/chat/Component; au_
	init ()V b
	keyPressed (III)Z a
	render (Lnet/minecraft/client/gui/GuiGraphics;IIF)V a
	resetWorld (Ljava/lang/Runnable;)V b
	setResetTitle (Lnet/minecraft/network/chat/Component;)V a
	setSlot (I)V a
	startTask (Lcom/mojang/realmsclient/util/task/LongRunningTask;)V a
	switchSlot (Ljava/lang/Runnable;)V a
	templateSelectionCallback (Lcom/mojang/realmsclient/dto/WorldTemplate;)V a
com/mojang/realmsclient/gui/screens/RealmsResetWorldScreen$FrameButton eln$a
	image b
	renderWidget (Lnet/minecraft/client/gui/GuiGraphics;IIF)V b
com/mojang/realmsclient/gui/screens/RealmsSelectFileToUploadScreen elo
	CHEATS_TEXT H
	DATE_FORMAT I
	HARDCORE_TEXT G
	LOGGER a
	UNABLE_TO_LOAD_WORLD b
	WORLD_TEXT c
	callback Q
	lastScreen J
	levelList N
	selectedWorld O
	slotId L
	uploadButton M
	worldId K
	worldSelectionList P
	formatLastPlayed (Lnet/minecraft/world/level/storage/LevelSummary;)Ljava/lang/String; b
	gameModeName (Lnet/minecraft/world/level/storage/LevelSummary;)Lnet/minecraft/network/chat/Component; a
	getNarrationMessage ()Lnet/minecraft/network/chat/Component; au_
	init ()V b
	keyPressed (III)Z a
	loadLevelList ()V B
	render (Lnet/minecraft/client/gui/GuiGraphics;IIF)V a
	upload ()V C
com/mojang/realmsclient/gui/screens/RealmsSelectFileToUploadScreen$Entry elo$a
	id d
	info e
	levelSummary b
	name c
	getNarration ()Lnet/minecraft/network/chat/Component; a
	mouseClicked (DDI)Z a
	render (Lnet/minecraft/client/gui/GuiGraphics;IIIIIIIZF)V a
	renderItem (Lnet/minecraft/client/gui/GuiGraphics;III)V a
com/mojang/realmsclient/gui/screens/RealmsSelectFileToUploadScreen$WorldSelectionList elo$b
	addEntry (Lnet/minecraft/world/level/storage/LevelSummary;)V a
	getMaxPosition ()I a
	renderBackground (Lnet/minecraft/client/gui/GuiGraphics;)V a
	setSelected (Lcom/mojang/realmsclient/gui/screens/RealmsSelectFileToUploadScreen$Entry;)V a
	setSelected (Lnet/minecraft/client/gui/components/AbstractSelectionList$Entry;)V a
com/mojang/realmsclient/gui/screens/RealmsSelectWorldTemplateScreen elp
	LINK_ICON b
	LOGGER a
	PUBLISHER_LINK_TOOLTIP H
	SLOT_FRAME_LOCATION G
	TRAILER_ICON c
	TRAILER_LINK_TOOLTIP I
	callback J
	clicks S
	currentLink Q
	displayWarning V
	hoverWarning W
	noTemplatesMessage X
	publisherButton O
	selectButton M
	selectedTemplate L
	toolTip P
	trailerButton N
	warning T
	warningURL U
	worldTemplateObjectSelectionList K
	worldType R
	fetchTemplates (Lcom/mojang/realmsclient/dto/WorldTemplatePaginatedList;Lcom/mojang/realmsclient/client/RealmsClient;)Lcom/mojang/datafixers/util/Either; a
	fetchTemplatesAsync (Lcom/mojang/realmsclient/dto/WorldTemplatePaginatedList;)V a
	getNarrationMessage ()Lnet/minecraft/network/chat/Component; au_
	getSelectedTemplate ()Lcom/mojang/realmsclient/dto/WorldTemplate; E
	hasValidTemplate ()Z H
	init ()V b
	mouseClicked (DDI)Z a
	onClose ()V aw_
	onPublish ()V J
	onTrailer ()V I
	render (Lnet/minecraft/client/gui/GuiGraphics;IIF)V a
	renderMousehoverTooltip (Lnet/minecraft/client/gui/GuiGraphics;Lnet/minecraft/network/chat/Component;II)V a
	renderMultilineMessage (Lnet/minecraft/client/gui/GuiGraphics;IILjava/util/List;)V a
	selectTemplate ()V G
	setWarning ([Lnet/minecraft/network/chat/Component;)V a
	shouldPublisherBeVisible ()Z D
	shouldSelectButtonBeActive ()Z C
	shouldTrailerBeVisible ()Z F
	tick ()V f
	updateButtonStates ()V B
com/mojang/realmsclient/gui/screens/RealmsSelectWorldTemplateScreen$Entry elp$a
	template b
	drawIcons (Lnet/minecraft/client/gui/GuiGraphics;IIIILjava/lang/String;Ljava/lang/String;Ljava/lang/String;)V a
	drawImage (Lnet/minecraft/client/gui/GuiGraphics;IIIILcom/mojang/realmsclient/dto/WorldTemplate;)V a
	getNarration ()Lnet/minecraft/network/chat/Component; a
	render (Lnet/minecraft/client/gui/GuiGraphics;IIIIIIIZF)V a
	renderWorldTemplateItem (Lnet/minecraft/client/gui/GuiGraphics;Lcom/mojang/realmsclient/dto/WorldTemplate;IIII)V a
com/mojang/realmsclient/gui/screens/RealmsSelectWorldTemplateScreen$WorldTemplateObjectSelectionList elp$b
	addEntry (Lcom/mojang/realmsclient/dto/WorldTemplate;)V a
	get (I)Lcom/mojang/realmsclient/dto/WorldTemplate; b
	getMaxPosition ()I a
	getRowWidth ()I b
	getTemplates ()Ljava/util/List; e
	isEmpty ()Z d
	mouseClicked (DDI)Z a
	renderBackground (Lnet/minecraft/client/gui/GuiGraphics;)V a
	setSelected (Lcom/mojang/realmsclient/gui/screens/RealmsSelectWorldTemplateScreen$Entry;)V a
	setSelected (Lnet/minecraft/client/gui/components/AbstractSelectionList$Entry;)V a
com/mojang/realmsclient/gui/screens/RealmsSettingsScreen elq
	COMPONENT_WIDTH a
	DESCRIPTION_LABEL c
	NAME_LABEL b
	configureWorldScreen G
	descEdit J
	doneButton I
	nameEdit K
	serverData H
	init ()V b
	keyPressed (III)Z a
	render (Lnet/minecraft/client/gui/GuiGraphics;IIF)V a
	save ()V e
	tick ()V f
com/mojang/realmsclient/gui/screens/RealmsSlotOptionsScreen elr
	DEFAULT_DIFFICULTY G
	DEFAULT_GAME_MODE H
	DIFFICULTIES a
	GAME_MODES b
	NAME_LABEL I
	SPAWN_PROTECTION_TEXT J
	SPAWN_WARNING_TITLE K
	column1X M
	columnWidth N
	commandBlocks Z
	defaultSlotName S
	difficulty Q
	forceGameMode aa
	gameMode R
	nameEdit L
	options O
	parent c
	pvp U
	spawnAnimals W
	spawnMonsters X
	spawnNPCs V
	spawnProtection Y
	spawnProtectionButton ab
	worldName T
	worldType P
	confirmDangerousOption (Lnet/minecraft/network/chat/Component;Ljava/util/function/Consumer;)Lnet/minecraft/client/gui/components/CycleButton$OnValueChange; a
	findByIndex (Ljava/util/List;II)Ljava/lang/Object; a
	findIndex (Ljava/util/List;Ljava/lang/Object;I)I a
	getNarrationMessage ()Lnet/minecraft/network/chat/Component; au_
	init ()V b
	keyPressed (III)Z a
	render (Lnet/minecraft/client/gui/GuiGraphics;IIF)V a
	saveSettings ()V B
	setWorldName (Ljava/lang/String;)V a
	tick ()V f
com/mojang/realmsclient/gui/screens/RealmsSlotOptionsScreen$SettingsSlider elr$a
	maxValue i
	minValue h
	applyValue ()V a
	onClick (DD)V a
	onRelease (DD)V b
	updateMessage ()V b
com/mojang/realmsclient/gui/screens/RealmsSubscriptionInfoScreen els
	DAYS_LEFT_LABEL H
	LOGGER a
	RECURRING_INFO L
	SUBSCRIPTION_EXPIRED_TEXT I
	SUBSCRIPTION_LESS_THAN_A_DAY_TEXT J
	SUBSCRIPTION_START_LABEL c
	SUBSCRIPTION_TITLE b
	TIME_LEFT_LABEL G
	UNKNOWN K
	daysLeft P
	lastScreen M
	mainScreen O
	serverData N
	startDate Q
	type R
	daysLeftPresentation (I)Lnet/minecraft/network/chat/Component; a
	deleteRealm (Z)V c
	getNarrationMessage ()Lnet/minecraft/network/chat/Component; au_
	getSubscription (J)V a
	init ()V b
	keyPressed (III)Z a
	localPresentation (J)Lnet/minecraft/network/chat/Component; b
	render (Lnet/minecraft/client/gui/GuiGraphics;IIF)V a
com/mojang/realmsclient/gui/screens/RealmsTermsScreen elt
	LOGGER a
	TERMS_LINK_TEXT G
	TERMS_STATIC_TEXT c
	TITLE b
	lastScreen H
	mainScreen I
	onLink K
	realmsServer J
	agreedToTos ()V B
	getNarrationMessage ()Lnet/minecraft/network/chat/Component; au_
	init ()V b
	keyPressed (III)Z a
	mouseClicked (DDI)Z a
	render (Lnet/minecraft/client/gui/GuiGraphics;IIF)V a
com/mojang/realmsclient/gui/screens/RealmsUploadScreen elu
	BAR_BORDER I
	BAR_BOTTOM H
	BAR_TOP G
	BAR_WIDTH c
	DOTS J
	LOGGER a
	UPLOAD_LOCK b
	VERIFYING_TEXT K
	backButton Y
	bytesPersSecond ad
	callback ae
	cancelButton Z
	cancelled U
	errorMessage R
	lastScreen L
	narrationRateLimiter Q
	previousTimeSnapshot ac
	previousWrittenBytes ab
	progress T
	selectedLevel M
	showDots W
	slotId O
	status S
	tickCount aa
	uploadFinished V
	uploadStarted X
	uploadStatus P
	worldId N
	addFileToTarGz (Lorg/apache/commons/compress/archivers/tar/TarArchiveOutputStream;Ljava/lang/String;Ljava/lang/String;Z)V a
	createProgressNarrationMessage ()Lnet/minecraft/network/chat/Component; D
	drawDots (Lnet/minecraft/client/gui/GuiGraphics;)V c
	drawProgressBar (Lnet/minecraft/client/gui/GuiGraphics;)V d
	drawUploadSpeed (Lnet/minecraft/client/gui/GuiGraphics;)V e
	drawUploadSpeed0 (Lnet/minecraft/client/gui/GuiGraphics;J)V a
	init ()V b
	keyPressed (III)Z a
	onBack ()V B
	onCancel ()V C
	render (Lnet/minecraft/client/gui/GuiGraphics;IIF)V a
	setErrorMessage ([Lnet/minecraft/network/chat/Component;)V a
	tarGzipArchive (Ljava/io/File;)Ljava/io/File; b
	tick ()V f
	upload ()V E
	uploadCancelled ()V F
	verify (Ljava/io/File;)Z a
com/mojang/realmsclient/gui/screens/UploadResult elv
	errorMessage b
	statusCode a
com/mojang/realmsclient/gui/screens/UploadResult$Builder elv$a
	errorMessage b
	statusCode a
	build ()Lcom/mojang/realmsclient/gui/screens/UploadResult; a
	withErrorMessage (Ljava/lang/String;)Lcom/mojang/realmsclient/gui/screens/UploadResult$Builder; a
	withStatusCode (I)Lcom/mojang/realmsclient/gui/screens/UploadResult$Builder; a
com/mojang/realmsclient/gui/task/DataFetcher elx
	LOGGER a
	executor b
	resolution c
	timeSource d
	createSubscription ()Lcom/mojang/realmsclient/gui/task/DataFetcher$Subscription; a
	createTask (Ljava/lang/String;Ljava/util/concurrent/Callable;Ljava/time/Duration;Lcom/mojang/realmsclient/gui/task/RepeatedDelayStrategy;)Lcom/mojang/realmsclient/gui/task/DataFetcher$Task; a
com/mojang/realmsclient/gui/task/DataFetcher$ComputationResult elx$a
	time b
	value a
	time ()J b
	value ()Lcom/mojang/datafixers/util/Either; a
com/mojang/realmsclient/gui/task/DataFetcher$SubscribedTask elx$b
	lastCheckTime d
	output c
	task b
	reset ()V c
	runCallback ()V b
	runCallbackIfNeeded ()V a
	update (J)V a
com/mojang/realmsclient/gui/task/DataFetcher$Subscription elx$c
	subscriptions b
	forceUpdate ()V a
	reset ()V c
	subscribe (Lcom/mojang/realmsclient/gui/task/DataFetcher$Task;Ljava/util/function/Consumer;)V a
	tick ()V b
com/mojang/realmsclient/gui/task/DataFetcher$SuccessfulComputationResult elx$d
	time b
	value a
	time ()J b
	value ()Ljava/lang/Object; a
com/mojang/realmsclient/gui/task/DataFetcher$Task elx$e
	id b
	lastResult g
	nextUpdate h
	pendingTask f
	period d
	repeatStrategy e
	updater c
	reset ()V a
	updateIfNeeded (J)V a
com/mojang/realmsclient/gui/task/RepeatedDelayStrategy ely
	CONSTANT a
	delayCyclesAfterFailure ()J b
	delayCyclesAfterSuccess ()J a
	exponentialBackoff (I)Lcom/mojang/realmsclient/gui/task/RepeatedDelayStrategy; a
com/mojang/realmsclient/util/JsonUtils emb
	getBooleanOr (Ljava/lang/String;Lcom/google/gson/JsonObject;Z)Z a
	getDateOr (Ljava/lang/String;Lcom/google/gson/JsonObject;)Ljava/util/Date; b
	getIntOr (Ljava/lang/String;Lcom/google/gson/JsonObject;I)I a
	getLongOr (Ljava/lang/String;Lcom/google/gson/JsonObject;J)J a
	getRequired (Ljava/lang/String;Lcom/google/gson/JsonObject;Ljava/util/function/Function;)Ljava/lang/Object; a
	getRequiredString (Ljava/lang/String;Lcom/google/gson/JsonObject;)Ljava/lang/String; a
	getStringOr (Ljava/lang/String;Lcom/google/gson/JsonObject;Ljava/lang/String;)Ljava/lang/String; a
	getUuidOr (Ljava/lang/String;Lcom/google/gson/JsonObject;Ljava/util/UUID;)Ljava/util/UUID; a
com/mojang/realmsclient/util/LevelType emc
	$VALUES g
	AMPLIFIED d
	DEFAULT a
	FLAT b
	LARGE_BIOMES c
	index e
	name f
	$values ()[Lcom/mojang/realmsclient/util/LevelType; c
	getDtoIndex ()I b
	getName ()Lnet/minecraft/network/chat/Component; a
com/mojang/realmsclient/util/RealmsPersistence emd
	FILE_NAME a
	GSON b
	LOGGER c
	getPathToData ()Ljava/nio/file/Path; c
	read ()Lcom/mojang/realmsclient/util/RealmsPersistence$RealmsPersistenceData; a
	readFile ()Lcom/mojang/realmsclient/util/RealmsPersistence$RealmsPersistenceData; b
	save (Lcom/mojang/realmsclient/util/RealmsPersistence$RealmsPersistenceData;)V a
	writeFile (Lcom/mojang/realmsclient/util/RealmsPersistence$RealmsPersistenceData;)V b
com/mojang/realmsclient/util/RealmsPersistence$RealmsPersistenceData emd$a
	hasUnreadNews b
	newsLink a
com/mojang/realmsclient/util/RealmsTextureManager eme
	LOGGER b
	TEMPLATE_ICON_LOCATION c
	TEXTURES a
	getTexture (Ljava/lang/String;Ljava/lang/String;)Lnet/minecraft/resources/ResourceLocation; b
	loadImage (Ljava/lang/String;)Lcom/mojang/blaze3d/platform/NativeImage; a
	worldTemplate (Ljava/lang/String;Ljava/lang/String;)Lnet/minecraft/resources/ResourceLocation; a
com/mojang/realmsclient/util/RealmsTextureManager$RealmsTexture eme$a
	image a
	textureId b
	image ()Ljava/lang/String; a
	textureId ()Lnet/minecraft/resources/ResourceLocation; b
com/mojang/realmsclient/util/RealmsUtil emf
	DAYS f
	GAME_PROFILE_CACHE c
	HOURS e
	MINUTES d
	RIGHT_NOW b
	SESSION_SERVICE a
	convertToAgePresentation (J)Lnet/minecraft/network/chat/Component; a
	convertToAgePresentationFromInstant (Ljava/util/Date;)Lnet/minecraft/network/chat/Component; a
	getGameProfile (Ljava/lang/String;)Lcom/mojang/authlib/GameProfile; b
	renderPlayerFace (Lnet/minecraft/client/gui/GuiGraphics;IIILjava/lang/String;)V a
	uuidToName (Ljava/lang/String;)Ljava/lang/String; a
com/mojang/realmsclient/util/TextRenderingUtils emg
	decompose (Ljava/lang/String;Ljava/util/List;)Ljava/util/List; a
	decompose (Ljava/lang/String;[Lcom/mojang/realmsclient/util/TextRenderingUtils$LineSegment;)Ljava/util/List; a
	insertLinks (Ljava/util/List;Ljava/util/List;)Ljava/util/List; a
	lineBreak (Ljava/lang/String;)Ljava/util/List; a
	split (Ljava/lang/String;Ljava/lang/String;)Ljava/util/List; a
com/mojang/realmsclient/util/TextRenderingUtils$Line emg$a
	segments a
com/mojang/realmsclient/util/TextRenderingUtils$LineSegment emg$b
	fullText a
	linkTitle b
	linkUrl c
	getLinkUrl ()Ljava/lang/String; c
	isLink ()Z b
	link (Ljava/lang/String;Ljava/lang/String;)Lcom/mojang/realmsclient/util/TextRenderingUtils$LineSegment; a
	renderedText ()Ljava/lang/String; a
	text (Ljava/lang/String;)Lcom/mojang/realmsclient/util/TextRenderingUtils$LineSegment; a
com/mojang/realmsclient/util/UploadTokenCache emh
	TOKEN_CACHE a
	get (J)Ljava/lang/String; a
	invalidate (J)V b
	put (JLjava/lang/String;)V a
com/mojang/realmsclient/util/WorldGenerationInfo emi
	generateStructures c
	levelType b
	seed a
	getLevelType ()Lcom/mojang/realmsclient/util/LevelType; b
	getSeed ()Ljava/lang/String; a
	shouldGenerateStructures ()Z c
com/mojang/realmsclient/util/task/CloseServerTask emk
	LOGGER c
	configureScreen e
	serverData d
com/mojang/realmsclient/util/task/ConnectTask eml
	address e
	realmsConnect c
	server d
	abortTask ()V a
	tick ()V b
com/mojang/realmsclient/util/task/DownloadTask emm
	LOGGER c
	downloadName g
	lastScreen f
	slot e
	worldId d
com/mojang/realmsclient/util/task/GetServerDetailsTask emn
	LOGGER c
	connectLock g
	lastScreen e
	mainScreen f
	server d
	connectScreen (Lcom/mojang/realmsclient/dto/RealmsServerAddress;)Lcom/mojang/realmsclient/gui/screens/RealmsLongRunningMcoTaskScreen; a
	fetchServerAddress ()Lcom/mojang/realmsclient/dto/RealmsServerAddress; e
	resourcePackDownloadConfirmationScreen (Lcom/mojang/realmsclient/dto/RealmsServerAddress;Ljava/util/function/Function;)Lcom/mojang/realmsclient/gui/screens/RealmsLongConfirmationScreen; a
	scheduleResourcePackDownload (Lcom/mojang/realmsclient/dto/RealmsServerAddress;)Ljava/util/concurrent/CompletableFuture; b
com/mojang/realmsclient/util/task/LongRunningTask emo
	LOGGER c
	NUMBER_OF_RETRIES a
	longRunningMcoTaskScreen b
	abortTask ()V a
	aborted ()Z c
	error (Lnet/minecraft/network/chat/Component;)V a
	init ()V d
	pause (J)V a
	setScreen (Lcom/mojang/realmsclient/gui/screens/RealmsLongRunningMcoTaskScreen;)V a
	setScreen (Lnet/minecraft/client/gui/screens/Screen;)V a
	setTitle (Lnet/minecraft/network/chat/Component;)V b
	tick ()V b
com/mojang/realmsclient/util/task/OpenServerTask emp
	LOGGER c
	join f
	mainScreen g
	minecraft h
	returnScreen e
	serverData d
com/mojang/realmsclient/util/task/ResettingGeneratedWorldTask emq
	generationInfo c
	sendResetRequest (Lcom/mojang/realmsclient/client/RealmsClient;J)V a
com/mojang/realmsclient/util/task/ResettingTemplateWorldTask emr
	template c
	sendResetRequest (Lcom/mojang/realmsclient/client/RealmsClient;J)V a
com/mojang/realmsclient/util/task/ResettingWorldTask ems
	LOGGER c
	callback f
	serverId d
	title e
	sendResetRequest (Lcom/mojang/realmsclient/client/RealmsClient;J)V a
com/mojang/realmsclient/util/task/RestoreTask emt
	LOGGER c
	backup d
	lastScreen f
	worldId e
com/mojang/realmsclient/util/task/SwitchMinigameTask emu
	LOGGER c
	lastScreen f
	worldId d
	worldTemplate e
com/mojang/realmsclient/util/task/SwitchSlotTask emv
	LOGGER c
	callback f
	slot e
	worldId d
com/mojang/realmsclient/util/task/WorldCreationTask emw
	LOGGER c
	lastScreen g
	motd e
	name d
	worldId f
net/minecraft/BlockUtil l
	getLargestRectangleAround (Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction$Axis;ILnet/minecraft/core/Direction$Axis;ILjava/util/function/Predicate;)Lnet/minecraft/BlockUtil$FoundRectangle; a
	getLimit (Ljava/util/function/Predicate;Lnet/minecraft/core/BlockPos$MutableBlockPos;Lnet/minecraft/core/Direction;I)I a
	getMaxRectangleLocation ([I)Lcom/mojang/datafixers/util/Pair; a
	getTopConnectedBlock (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Block;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/Block;)Ljava/util/Optional; a
net/minecraft/BlockUtil$FoundRectangle l$a
	axis1Size b
	axis2Size c
	minCorner a
net/minecraft/BlockUtil$IntBounds l$b
	max b
	min a
net/minecraft/CharPredicate m
net/minecraft/ChatFormatting n
	$VALUES G
	AQUA l
	BLACK a
	BLUE j
	BOLD r
	CODEC w
	DARK_AQUA d
	DARK_BLUE b
	DARK_GRAY i
	DARK_GREEN c
	DARK_PURPLE f
	DARK_RED e
	FORMATTING_BY_NAME y
	GOLD g
	GRAY h
	GREEN k
	ITALIC u
	LIGHT_PURPLE n
	OBFUSCATED q
	PREFIX_CODE x
	RED m
	RESET v
	STRIKETHROUGH s
	STRIP_FORMATTING_PATTERN z
	UNDERLINE t
	WHITE p
	YELLOW o
	code B
	color F
	id E
	isFormat C
	name A
	toString D
	$values ()[Lnet/minecraft/ChatFormatting; h
	cleanName (Ljava/lang/String;)Ljava/lang/String; c
	getByCode (C)Lnet/minecraft/ChatFormatting; a
	getById (I)Lnet/minecraft/ChatFormatting; a
	getByName (Ljava/lang/String;)Lnet/minecraft/ChatFormatting; b
	getChar ()C a
	getColor ()Ljava/lang/Integer; f
	getId ()I b
	getName ()Ljava/lang/String; g
	getNames (ZZ)Ljava/util/Collection; a
	getSerializedName ()Ljava/lang/String; c
	isColor ()Z e
	isFormat ()Z d
	stripFormatting (Ljava/lang/String;)Ljava/lang/String; a
net/minecraft/CrashReport o
	DATE_TIME_FORMATTER b
	LOGGER a
	details e
	exception d
	saveFile f
	systemReport i
	title c
	trackingStackTrace g
	uncategorizedStackTrace h
	addCategory (Ljava/lang/String;)Lnet/minecraft/CrashReportCategory; a
	addCategory (Ljava/lang/String;I)Lnet/minecraft/CrashReportCategory; a
	forThrowable (Ljava/lang/Throwable;Ljava/lang/String;)Lnet/minecraft/CrashReport; a
	getDetails ()Ljava/lang/String; c
	getDetails (Ljava/lang/StringBuilder;)V a
	getErrorComment ()Ljava/lang/String; i
	getException ()Ljava/lang/Throwable; b
	getExceptionMessage ()Ljava/lang/String; d
	getFriendlyReport ()Ljava/lang/String; e
	getSaveFile ()Ljava/io/File; f
	getSystemReport ()Lnet/minecraft/SystemReport; g
	getTitle ()Ljava/lang/String; a
	preload ()V h
	saveToFile (Ljava/io/File;)Z a
net/minecraft/CrashReportCategory p
	entries b
	stackTrace c
	title a
	fillInStackTrace (I)I a
	formatLocation (Lnet/minecraft/world/level/LevelHeightAccessor;DDD)Ljava/lang/String; a
	formatLocation (Lnet/minecraft/world/level/LevelHeightAccessor;III)Ljava/lang/String; a
	formatLocation (Lnet/minecraft/world/level/LevelHeightAccessor;Lnet/minecraft/core/BlockPos;)Ljava/lang/String; a
	getDetails (Ljava/lang/StringBuilder;)V a
	getStacktrace ()[Ljava/lang/StackTraceElement; a
	populateBlockDetails (Lnet/minecraft/CrashReportCategory;Lnet/minecraft/world/level/LevelHeightAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V a
	setDetail (Ljava/lang/String;Ljava/lang/Object;)Lnet/minecraft/CrashReportCategory; a
	setDetail (Ljava/lang/String;Lnet/minecraft/CrashReportDetail;)Lnet/minecraft/CrashReportCategory; a
	setDetailError (Ljava/lang/String;Ljava/lang/Throwable;)V a
	trimStacktrace (I)V b
	validateStackTrace (Ljava/lang/StackTraceElement;Ljava/lang/StackTraceElement;)Z a
net/minecraft/CrashReportCategory$Entry p$a
	key a
	value b
	getKey ()Ljava/lang/String; a
	getValue ()Ljava/lang/String; b
net/minecraft/CrashReportDetail q
net/minecraft/DefaultUncaughtExceptionHandler r
	logger a
net/minecraft/DefaultUncaughtExceptionHandlerWithName s
	logger a
net/minecraft/DetectedVersion t
	BUILT_IN a
	LOGGER b
	buildTime j
	dataPackVersion i
	id c
	name d
	protocolVersion g
	resourcePackVersion h
	stable e
	worldVersion f
	getBuildTime ()Ljava/util/Date; f
	getDataVersion ()Lnet/minecraft/world/level/storage/DataVersion; d
	getId ()Ljava/lang/String; b
	getName ()Ljava/lang/String; c
	getPackVersion (Lnet/minecraft/server/packs/PackType;)I a
	getProtocolVersion ()I e
	isStable ()Z g
	tryDetectVersion ()Lnet/minecraft/WorldVersion; a
net/minecraft/FieldsAreNonnullByDefault u
net/minecraft/FileUtil v
	COPY_COUNTER_PATTERN a
	MAX_FILE_NAME b
	RESERVED_WINDOWS_FILENAMES c
	STRICT_PATH_SEGMENT_CHECK d
	createDirectoriesSafe (Ljava/nio/file/Path;)V c
	createPathToResource (Ljava/nio/file/Path;Ljava/lang/String;Ljava/lang/String;)Ljava/nio/file/Path; b
	decomposePath (Ljava/lang/String;)Lcom/mojang/serialization/DataResult; c
	findAvailableName (Ljava/nio/file/Path;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; a
	getFullResourcePath (Ljava/lang/String;)Ljava/lang/String; a
	isPathNormalized (Ljava/nio/file/Path;)Z a
	isPathPortable (Ljava/nio/file/Path;)Z b
	isValidStrictPathSegment (Ljava/lang/String;)Z d
	normalizeResourcePath (Ljava/lang/String;)Ljava/lang/String; b
	resolvePath (Ljava/nio/file/Path;Ljava/util/List;)Ljava/nio/file/Path; a
	validatePath ([Ljava/lang/String;)V a
net/minecraft/MethodsReturnNonnullByDefault w
net/minecraft/Optionull x
	first (Ljava/util/Collection;)Ljava/lang/Object; a
	firstOrDefault (Ljava/util/Collection;Ljava/lang/Object;)Ljava/lang/Object; a
	firstOrElse (Ljava/util/Collection;Ljava/util/function/Supplier;)Ljava/lang/Object; a
	isNullOrEmpty ([B)Z a
	isNullOrEmpty ([C)Z a
	isNullOrEmpty ([D)Z a
	isNullOrEmpty ([F)Z a
	isNullOrEmpty ([I)Z a
	isNullOrEmpty ([J)Z a
	isNullOrEmpty ([Ljava/lang/Object;)Z a
	isNullOrEmpty ([S)Z a
	isNullOrEmpty ([Z)Z a
	map (Ljava/lang/Object;Ljava/util/function/Function;)Ljava/lang/Object; a
	mapOrDefault (Ljava/lang/Object;Ljava/util/function/Function;Ljava/lang/Object;)Ljava/lang/Object; a
	mapOrElse (Ljava/lang/Object;Ljava/util/function/Function;Ljava/util/function/Supplier;)Ljava/lang/Object; a
net/minecraft/ReportedException y
	report a
	getReport ()Lnet/minecraft/CrashReport; a
net/minecraft/ResourceLocationException z
net/minecraft/SharedConstants aa
	AVERAGE_GAME_TICKS_PER_RANDOM_TICK_PER_BLOCK bd
	AVERAGE_RANDOM_TICKS_PER_BLOCK_PER_GAME_DAY bf
	AVERAGE_RANDOM_TICKS_PER_BLOCK_PER_MINUTE be
	CHECK_DATA_FIXER_SCHEMA aR
	COMMAND_STACK_TRACES aH
	CURRENT_VERSION bi
	DATA_FIX_TYPES_TO_OPTIMIZE aT
	DATA_PACK_FORMAT j
	DATA_VERSION_TAG m
	DEBUG_ALLOW_LOW_SIM_DISTANCE t
	DEBUG_AQUIFERS an
	DEBUG_BEES V
	DEBUG_BLOCK_BREAK X
	DEBUG_BRAIN U
	DEBUG_BYPASS_REALMS_VERSION_CHECK ah
	DEBUG_CARVERS ae
	DEBUG_CHUNKS J
	DEBUG_COLLISION A
	DEBUG_DISABLE_AQUIFERS at
	DEBUG_DISABLE_BELOW_ZERO_RETROGENERATION aA
	DEBUG_DISABLE_BLENDING az
	DEBUG_DISABLE_CARVERS av
	DEBUG_DISABLE_FEATURES ax
	DEBUG_DISABLE_FLUID_GENERATION as
	DEBUG_DISABLE_LIQUID_SPREADING am
	DEBUG_DISABLE_ORE_VEINS ay
	DEBUG_DISABLE_STRUCTURES aw
	DEBUG_DISABLE_SURFACE au
	DEBUG_DONT_SAVE_WORLD ab
	DEBUG_DONT_SEND_TELEMETRY_TO_BACKEND aO
	DEBUG_DUMP_INTERPOLATED_TEXTURE_FRAMES M
	DEBUG_DUMP_TEXTURE_ATLAS L
	DEBUG_FEATURE_COUNT aL
	DEBUG_FORCE_TELEMETRY aN
	DEBUG_GAME_EVENT_LISTENERS K
	DEBUG_GOAL_SELECTOR S
	DEBUG_HEIGHTMAP z
	DEBUG_HOTKEYS u
	DEBUG_IGNORE_LOCAL_MOB_CAP ak
	DEBUG_JFR_PROFILING_ENABLE_LEVEL_LOADING ao
	DEBUG_KEEP_JIGSAW_BLOCKS_DURING_STRUCTURE_GEN aa
	DEBUG_LARGE_DRIPSTONE ac
	DEBUG_LIGHT F
	DEBUG_MONITOR_TICK_TIMES Z
	DEBUG_NAMED_RUNNABLES R
	DEBUG_NEIGHBORSUPDATE D
	DEBUG_ONLY_GENERATE_HALF_THE_WORLD ar
	DEBUG_OPEN_INCOMPATIBLE_WORLDS s
	DEBUG_ORE_VEINS af
	DEBUG_PACKET_SERIALIZATION ad
	DEBUG_PATHFINDING x
	DEBUG_RAIDS W
	DEBUG_RENDER w
	DEBUG_RESOURCE_GENERATION_OVERRIDE aM
	DEBUG_RESOURCE_LOAD_TIMES Y
	DEBUG_SAVE_STRUCTURES_AS_SNBT O
	DEBUG_SCULK_CATALYST ag
	DEBUG_SHAPES C
	DEBUG_SHOW_SERVER_DEBUG_VALUES aJ
	DEBUG_SKY_LIGHT_SECTIONS G
	DEBUG_SMALL_SPAWN al
	DEBUG_SOCIAL_INTERACTIONS ai
	DEBUG_SOLID_FACE I
	DEBUG_STORE_CHUNK_STACKTRACES aK
	DEBUG_STRUCTURES E
	DEBUG_STRUCTURE_EDIT_MODE N
	DEBUG_SUBTITLES aD
	DEBUG_SUPPORT_BLOCKS B
	DEBUG_SYNCHRONOUS_GL_LOGS P
	DEBUG_UI_NARRATION v
	DEBUG_VALIDATE_RESOURCE_PATH_CASE aj
	DEBUG_VERBOSE_SERVER_EVENTS Q
	DEBUG_VILLAGE_SECTIONS T
	DEBUG_WATER y
	DEBUG_WORLDGENATTEMPT H
	DEBUG_WORLD_RECREATE aI
	DEFAULT_MINECRAFT_PORT aB
	FAKE_MS_JITTER aF
	FAKE_MS_LATENCY aE
	FIX_SAND_DUPE q
	FIX_TNT_DUPE p
	ILLEGAL_FILE_CHARACTERS aZ
	INGAME_DEBUG_OUTPUT aC
	IS_RUNNING_IN_IDE aS
	LANGUAGE_FORMAT k
	MAXIMUM_TICK_TIME_NANOS aP
	MAX_CHAINED_NEIGHBOR_UPDATES aX
	MAX_CHAT_LENGTH aV
	MAX_COMMAND_LENGTH aW
	MAX_RENDER_DISTANCE aY
	MULTITHREADED_RENDERING o
	NETTY_LEAK_DETECTION aG
	RELEASE_NETWORK_PROTOCOL_VERSION e
	REPORT_FORMAT_VERSION l
	RESOURCE_PACK_FORMAT i
	SERIES c
	SNAPSHOT a
	SNAPSHOT_NETWORK_PROTOCOL_VERSION f
	SNAPSHOT_PROTOCOL_BIT bh
	SNBT_NAG_VERSION g
	THROW_ON_TASK_FAILURE h
	TICKS_PER_GAME_DAY bc
	TICKS_PER_MINUTE bb
	TICKS_PER_SECOND ba
	USE_DEBUG_FEATURES r
	USE_NEW_RENDERSYSTEM n
	USE_WORKFLOWS_HOOKS aQ
	VERSION_STRING d
	WORLD_ICON_SIZE bg
	WORLD_RESOLUTION aU
	WORLD_VERSION b
	debugGenerateSquareTerrainWithoutNoise ap
	debugGenerateStripedTerrainWithoutNoise aq
	debugVoidTerrain (Lnet/minecraft/world/level/ChunkPos;)Z a
	enableDataFixerOptimizations ()V d
	filterText (Ljava/lang/String;)Ljava/lang/String; a
	filterText (Ljava/lang/String;Z)Ljava/lang/String; a
	getCurrentVersion ()Lnet/minecraft/WorldVersion; b
	getProtocolVersion ()I c
	isAllowedChatCharacter (C)Z a
	setVersion (Lnet/minecraft/WorldVersion;)V a
	tryDetectVersion ()V a
net/minecraft/SystemReport ab
	BYTES_PER_MEBIBYTE a
	JAVA_VERSION e
	JAVA_VM_VERSION f
	LOGGER c
	ONE_GIGA b
	OPERATING_SYSTEM d
	entries g
	appendToCrashReportString (Ljava/lang/StringBuilder;)V a
	ignoreErrors (Ljava/lang/String;Ljava/lang/Runnable;)V a
	putGraphics (Ljava/util/List;)V b
	putHardware (Loshi/SystemInfo;)V a
	putMemory (Loshi/hardware/GlobalMemory;)V a
	putPhysicalMemory (Ljava/util/List;)V a
	putProcessor (Loshi/hardware/CentralProcessor;)V a
	putVirtualMemory (Loshi/hardware/VirtualMemory;)V a
	setDetail (Ljava/lang/String;Ljava/lang/String;)V a
	setDetail (Ljava/lang/String;Ljava/util/function/Supplier;)V a
	toLineSeparatedString ()Ljava/lang/String; a
net/minecraft/Util ac
	BACKGROUND_EXECUTOR i
	DEFAULT_MAX_THREADS f
	FILENAME_DATE_TIME_FORMATTER k
	IO_POOL j
	LOGGER e
	MAX_THREADS_SYSTEM_PROPERTY g
	NIL_UUID c
	TICKER b
	WORKER_COUNT h
	ZIP_FILE_SYSTEM_PROVIDER d
	thePauser l
	timeSource a
	backgroundExecutor ()Ljava/util/concurrent/ExecutorService; f
	blockUntilDone (Ljava/util/function/Function;)Ljava/util/concurrent/CompletableFuture; c
	blockUntilDone (Ljava/util/function/Function;Ljava/util/function/Predicate;)Ljava/lang/Object; a
	copyBetweenDirs (Ljava/nio/file/Path;Ljava/nio/file/Path;Ljava/nio/file/Path;)V b
	createDeleter (Ljava/nio/file/Path;)Ljava/util/function/BooleanSupplier; a
	createFileCreatedCheck (Ljava/nio/file/Path;)Ljava/util/function/BooleanSupplier; c
	createFileDeletedCheck (Ljava/nio/file/Path;)Ljava/util/function/BooleanSupplier; b
	createIndexLookup (Ljava/util/List;)Ljava/util/function/ToIntFunction; e
	createIndexLookup (Ljava/util/List;Ljava/util/function/IntFunction;)Ljava/util/function/ToIntFunction; a
	createRenamer (Ljava/nio/file/Path;Ljava/nio/file/Path;)Ljava/util/function/BooleanSupplier; a
	describeError (Ljava/lang/Throwable;)Ljava/lang/String; c
	doFetchChoiceType (Lcom/mojang/datafixers/DSL$TypeReference;Ljava/lang/String;)Lcom/mojang/datafixers/types/Type; b
	doPause (Ljava/lang/String;)V d
	executeInSequence ([Ljava/util/function/BooleanSupplier;)Z a
	fallibleSequence (Ljava/util/List;Ljava/util/function/Consumer;)Ljava/util/concurrent/CompletableFuture; a
	fetchChoiceType (Lcom/mojang/datafixers/DSL$TypeReference;Ljava/lang/String;)Lcom/mojang/datafixers/types/Type; a
	findNextInIterable (Ljava/lang/Iterable;Ljava/lang/Object;)Ljava/lang/Object; a
	findPreviousInIterable (Ljava/lang/Iterable;Ljava/lang/Object;)Ljava/lang/Object; b
	fixedSize (Ljava/util/List;I)Lcom/mojang/serialization/DataResult; a
	fixedSize (Ljava/util/stream/IntStream;I)Lcom/mojang/serialization/DataResult; a
	fixedSize (Ljava/util/stream/LongStream;I)Lcom/mojang/serialization/DataResult; a
	getEpochMillis ()J d
	getFilenameFormattedDateTime ()Ljava/lang/String; e
	getMaxThreads ()I m
	getMillis ()J b
	getNanos ()J c
	getOrThrow (Lcom/mojang/serialization/DataResult;Ljava/util/function/Function;)Ljava/lang/Object; a
	getPlatform ()Lnet/minecraft/Util$OS; i
	getPropertyName (Lnet/minecraft/world/level/block/state/properties/Property;Ljava/lang/Object;)Ljava/lang/String; a
	getRandom (Ljava/util/List;Lnet/minecraft/util/RandomSource;)Ljava/lang/Object; a
	getRandom ([ILnet/minecraft/util/RandomSource;)I a
	getRandom ([Ljava/lang/Object;Lnet/minecraft/util/RandomSource;)Ljava/lang/Object; a
	getRandomSafe (Ljava/util/List;Lnet/minecraft/util/RandomSource;)Ljava/util/Optional; b
	getVmArguments ()Ljava/util/stream/Stream; j
	identityStrategy ()Lit/unimi/dsi/fastutil/Hash$Strategy; k
	ifElse (Ljava/util/Optional;Ljava/util/function/Consumer;Ljava/lang/Runnable;)Ljava/util/Optional; a
	ioPool ()Ljava/util/concurrent/ExecutorService; g
	isBlank (Ljava/lang/String;)Z b
	isWhitespace (I)Z a
	lastOf (Ljava/util/List;)Ljava/lang/Object; a
	logAndPauseIfInIde (Ljava/lang/String;)V a
	logAndPauseIfInIde (Ljava/lang/String;Ljava/lang/Throwable;)V a
	make (Ljava/lang/Object;Ljava/util/function/Consumer;)Ljava/lang/Object; a
	make (Ljava/util/function/Supplier;)Ljava/lang/Object; a
	makeDescriptionId (Ljava/lang/String;Lnet/minecraft/resources/ResourceLocation;)Ljava/lang/String; a
	makeExecutor (Ljava/lang/String;)Ljava/util/concurrent/ExecutorService; c
	makeIoExecutor ()Ljava/util/concurrent/ExecutorService; n
	memoize (Ljava/util/function/BiFunction;)Ljava/util/function/BiFunction; a
	memoize (Ljava/util/function/Function;)Ljava/util/function/Function; b
	name (Ljava/lang/Runnable;Ljava/util/function/Supplier;)Ljava/lang/Runnable; a
	name (Ljava/util/function/Supplier;Ljava/util/function/Supplier;)Ljava/util/function/Supplier; a
	offsetByCodepoints (Ljava/lang/String;II)I a
	onThreadException (Ljava/lang/Thread;Ljava/lang/Throwable;)V a
	pauseInIde (Ljava/lang/Throwable;)Ljava/lang/Throwable; b
	prefix (Ljava/lang/String;Ljava/util/function/Consumer;)Ljava/util/function/Consumer; a
	runWithRetries (ILjava/lang/String;[Ljava/util/function/BooleanSupplier;)Z a
	safeReplaceFile (Ljava/io/File;Ljava/io/File;Ljava/io/File;)V a
	safeReplaceFile (Ljava/nio/file/Path;Ljava/nio/file/Path;Ljava/nio/file/Path;)V a
	safeReplaceOrMoveFile (Ljava/io/File;Ljava/io/File;Ljava/io/File;Z)V a
	safeReplaceOrMoveFile (Ljava/nio/file/Path;Ljava/nio/file/Path;Ljava/nio/file/Path;Z)V a
	sanitizeName (Ljava/lang/String;Lnet/minecraft/CharPredicate;)Ljava/lang/String; a
	sequence (Ljava/util/List;)Ljava/util/concurrent/CompletableFuture; b
	sequenceFailFast (Ljava/util/List;)Ljava/util/concurrent/CompletableFuture; c
	sequenceFailFastAndCancel (Ljava/util/List;)Ljava/util/concurrent/CompletableFuture; d
	setPause (Ljava/util/function/Consumer;)V a
	shuffle (Lit/unimi/dsi/fastutil/objects/ObjectArrayList;Lnet/minecraft/util/RandomSource;)V b
	shuffledCopy (Lit/unimi/dsi/fastutil/objects/ObjectArrayList;Lnet/minecraft/util/RandomSource;)Ljava/util/List; a
	shuffledCopy ([Ljava/lang/Object;Lnet/minecraft/util/RandomSource;)Ljava/util/List; b
	shutdownExecutor (Ljava/util/concurrent/ExecutorService;)V a
	shutdownExecutors ()V h
	singleKeyCache (Ljava/util/function/Function;)Lnet/minecraft/util/SingleKeyCache; a
	startTimerHackThread ()V l
	throwAsRuntime (Ljava/lang/Throwable;)V a
	toMap ()Ljava/util/stream/Collector; a
	toShuffledList (Ljava/util/stream/IntStream;Lnet/minecraft/util/RandomSource;)Lit/unimi/dsi/fastutil/ints/IntArrayList; a
	toShuffledList (Ljava/util/stream/Stream;Lnet/minecraft/util/RandomSource;)Ljava/util/List; a
	wrapThreadWithTaskName (Ljava/lang/String;Ljava/lang/Runnable;)Ljava/lang/Runnable; a
	wrapThreadWithTaskName (Ljava/lang/String;Ljava/util/function/Supplier;)Ljava/util/function/Supplier; a
net/minecraft/Util$IdentityStrategy ac$a
	$VALUES b
	INSTANCE a
	$values ()[Lnet/minecraft/Util$IdentityStrategy; a
net/minecraft/Util$OS ac$b
	$VALUES g
	LINUX a
	OSX d
	SOLARIS b
	UNKNOWN e
	WINDOWS c
	telemetryName f
	$values ()[Lnet/minecraft/Util$OS; b
	getOpenUrlArguments (Ljava/net/URL;)[Ljava/lang/String; b
	openFile (Ljava/io/File;)V a
	openUri (Ljava/lang/String;)V a
	openUri (Ljava/net/URI;)V a
	openUrl (Ljava/net/URL;)V a
	telemetryName ()Ljava/lang/String; a
net/minecraft/WorldVersion ad
	getBuildTime ()Ljava/util/Date; f
	getDataVersion ()Lnet/minecraft/world/level/storage/DataVersion; d
	getId ()Ljava/lang/String; b
	getName ()Ljava/lang/String; c
	getPackVersion (Lnet/minecraft/server/packs/PackType;)I a
	getProtocolVersion ()I e
	isStable ()Z g
net/minecraft/advancements/Advancement ae
	chatComponent h
	children g
	criteria e
	display b
	id d
	parent a
	requirements f
	rewards c
	sendsTelemetryEvent i
	addChild (Lnet/minecraft/advancements/Advancement;)V b
	deconstruct ()Lnet/minecraft/advancements/Advancement$Builder; a
	getChatComponent ()Lnet/minecraft/network/chat/Component; l
	getChildren ()Ljava/lang/Iterable; g
	getCriteria ()Ljava/util/Map; h
	getDisplay ()Lnet/minecraft/advancements/DisplayInfo; d
	getId ()Lnet/minecraft/resources/ResourceLocation; j
	getMaxCriteraRequired ()I i
	getParent ()Lnet/minecraft/advancements/Advancement; b
	getRequirements ()[[Ljava/lang/String; k
	getRewards ()Lnet/minecraft/advancements/AdvancementRewards; f
	getRoot ()Lnet/minecraft/advancements/Advancement; c
	getRoot (Lnet/minecraft/advancements/Advancement;)Lnet/minecraft/advancements/Advancement; a
	sendsTelemetryEvent ()Z e
net/minecraft/advancements/Advancement$Builder ae$a
	criteria e
	display c
	parent b
	parentId a
	requirements f
	requirementsStrategy g
	rewards d
	sendsTelemetryEvent h
	addCriterion (Ljava/lang/String;Lnet/minecraft/advancements/Criterion;)Lnet/minecraft/advancements/Advancement$Builder; a
	addCriterion (Ljava/lang/String;Lnet/minecraft/advancements/CriterionTriggerInstance;)Lnet/minecraft/advancements/Advancement$Builder; a
	advancement ()Lnet/minecraft/advancements/Advancement$Builder; a
	build (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/advancements/Advancement; b
	canBuild (Ljava/util/function/Function;)Z a
	display (Lnet/minecraft/advancements/DisplayInfo;)Lnet/minecraft/advancements/Advancement$Builder; a
	display (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/network/chat/Component;Lnet/minecraft/network/chat/Component;Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/advancements/FrameType;ZZZ)Lnet/minecraft/advancements/Advancement$Builder; a
	display (Lnet/minecraft/world/level/ItemLike;Lnet/minecraft/network/chat/Component;Lnet/minecraft/network/chat/Component;Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/advancements/FrameType;ZZZ)Lnet/minecraft/advancements/Advancement$Builder; a
	fromJson (Lcom/google/gson/JsonObject;Lnet/minecraft/advancements/critereon/DeserializationContext;)Lnet/minecraft/advancements/Advancement$Builder; a
	fromNetwork (Lnet/minecraft/network/FriendlyByteBuf;)Lnet/minecraft/advancements/Advancement$Builder; b
	getCriteria ()Ljava/util/Map; d
	parent (Lnet/minecraft/advancements/Advancement;)Lnet/minecraft/advancements/Advancement$Builder; a
	parent (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/advancements/Advancement$Builder; a
	recipeAdvancement ()Lnet/minecraft/advancements/Advancement$Builder; b
	requirements (Lnet/minecraft/advancements/RequirementsStrategy;)Lnet/minecraft/advancements/Advancement$Builder; a
	requirements ([[Ljava/lang/String;)Lnet/minecraft/advancements/Advancement$Builder; a
	rewards (Lnet/minecraft/advancements/AdvancementRewards$Builder;)Lnet/minecraft/advancements/Advancement$Builder; a
	rewards (Lnet/minecraft/advancements/AdvancementRewards;)Lnet/minecraft/advancements/Advancement$Builder; a
	save (Ljava/util/function/Consumer;Ljava/lang/String;)Lnet/minecraft/advancements/Advancement; a
	serializeToJson ()Lcom/google/gson/JsonObject; c
	serializeToNetwork (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/advancements/AdvancementList af
	LOGGER a
	advancements b
	listener e
	roots c
	tasks d
	add (Ljava/util/Map;)V a
	clear ()V a
	get (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/advancements/Advancement; a
	getAllAdvancements ()Ljava/util/Collection; c
	getRoots ()Ljava/lang/Iterable; b
	remove (Ljava/util/Set;)V a
	remove (Lnet/minecraft/advancements/Advancement;)V a
	setListener (Lnet/minecraft/advancements/AdvancementList$Listener;)V a
net/minecraft/advancements/AdvancementList$Listener af$a
	onAddAdvancementRoot (Lnet/minecraft/advancements/Advancement;)V a
	onAddAdvancementTask (Lnet/minecraft/advancements/Advancement;)V c
	onAdvancementsCleared ()V a
	onRemoveAdvancementRoot (Lnet/minecraft/advancements/Advancement;)V b
	onRemoveAdvancementTask (Lnet/minecraft/advancements/Advancement;)V d
net/minecraft/advancements/AdvancementProgress ag
	criteria a
	requirements b
	compareTo (Lnet/minecraft/advancements/AdvancementProgress;)I a
	countCompletedRequirements ()I h
	fromNetwork (Lnet/minecraft/network/FriendlyByteBuf;)Lnet/minecraft/advancements/AdvancementProgress; b
	getCompletedCriteria ()Ljava/lang/Iterable; f
	getCriterion (Ljava/lang/String;)Lnet/minecraft/advancements/CriterionProgress; c
	getFirstProgressDate ()Ljava/util/Date; g
	getPercent ()F c
	getProgressText ()Ljava/lang/String; d
	getRemainingCriteria ()Ljava/lang/Iterable; e
	grantProgress (Ljava/lang/String;)Z a
	hasProgress ()Z b
	isDone ()Z a
	revokeProgress (Ljava/lang/String;)Z b
	serializeToNetwork (Lnet/minecraft/network/FriendlyByteBuf;)V a
	update (Ljava/util/Map;[[Ljava/lang/String;)V a
net/minecraft/advancements/AdvancementProgress$Serializer ag$a
	deserialize (Lcom/google/gson/JsonElement;Ljava/lang/reflect/Type;Lcom/google/gson/JsonDeserializationContext;)Lnet/minecraft/advancements/AdvancementProgress; a
	serialize (Lnet/minecraft/advancements/AdvancementProgress;Ljava/lang/reflect/Type;Lcom/google/gson/JsonSerializationContext;)Lcom/google/gson/JsonElement; a
net/minecraft/advancements/AdvancementRewards ah
	EMPTY a
	experience b
	function e
	loot c
	recipes d
	deserialize (Lcom/google/gson/JsonObject;)Lnet/minecraft/advancements/AdvancementRewards; a
	getRecipes ()[Lnet/minecraft/resources/ResourceLocation; a
	grant (Lnet/minecraft/server/level/ServerPlayer;)V a
	serializeToJson ()Lcom/google/gson/JsonElement; b
net/minecraft/advancements/AdvancementRewards$Builder ah$a
	experience a
	function d
	loot b
	recipes c
	addExperience (I)Lnet/minecraft/advancements/AdvancementRewards$Builder; b
	addLootTable (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/advancements/AdvancementRewards$Builder; b
	addRecipe (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/advancements/AdvancementRewards$Builder; d
	build ()Lnet/minecraft/advancements/AdvancementRewards; a
	experience (I)Lnet/minecraft/advancements/AdvancementRewards$Builder; a
	function (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/advancements/AdvancementRewards$Builder; e
	loot (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/advancements/AdvancementRewards$Builder; a
	recipe (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/advancements/AdvancementRewards$Builder; c
	runs (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/advancements/AdvancementRewards$Builder; f
net/minecraft/advancements/CriteriaTriggers ai
	ALLAY_DROP_ITEM_ON_BLOCK X
	AVOID_VIBRATION Y
	BAD_OMEN I
	BEE_NEST_DESTROYED K
	BRED_ANIMALS o
	BREWED_POTION k
	CHANGED_DIMENSION v
	CHANNELED_LIGHTNING E
	CONSTRUCT_BEACON l
	CONSUME_ITEM z
	CRITERIA aa
	CURED_ZOMBIE_VILLAGER r
	EFFECTS_CHANGED A
	ENCHANTED_ITEM i
	ENTER_BLOCK d
	ENTITY_HURT_PLAYER h
	ENTITY_KILLED_PLAYER c
	FALL_FROM_HEIGHT U
	FILLED_BUCKET j
	FISHING_ROD_HOOKED D
	GENERATE_LOOT N
	HONEY_BLOCK_SLIDE J
	IMPOSSIBLE a
	INVENTORY_CHANGED e
	ITEM_DURABILITY_CHANGED t
	ITEM_USED_ON_BLOCK M
	KILLED_BY_CROSSBOW G
	KILL_MOB_NEAR_SCULK_CATALYST W
	LEVITATION u
	LIGHTNING_STRIKE S
	LOCATION p
	NETHER_TRAVEL C
	PLACED_BLOCK y
	PLAYER_HURT_ENTITY g
	PLAYER_INTERACTED_WITH_ENTITY Q
	PLAYER_KILLED_ENTITY b
	RAID_WIN H
	RECIPE_CRAFTED Z
	RECIPE_UNLOCKED f
	RIDE_ENTITY_IN_LAVA_TRIGGER V
	SHOT_CROSSBOW F
	SLEPT_IN_BED q
	START_RIDING_TRIGGER R
	SUMMONED_ENTITY n
	TAME_ANIMAL x
	TARGET_BLOCK_HIT L
	THROWN_ITEM_PICKED_UP_BY_ENTITY O
	THROWN_ITEM_PICKED_UP_BY_PLAYER P
	TICK w
	TRADE s
	USED_ENDER_EYE m
	USED_TOTEM B
	USING_ITEM T
	all ()Ljava/lang/Iterable; a
	getCriterion (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/advancements/CriterionTrigger; a
	register (Lnet/minecraft/advancements/CriterionTrigger;)Lnet/minecraft/advancements/CriterionTrigger; a
net/minecraft/advancements/Criterion aj
	trigger a
	criteriaFromJson (Lcom/google/gson/JsonObject;Lnet/minecraft/advancements/critereon/DeserializationContext;)Ljava/util/Map; b
	criteriaFromNetwork (Lnet/minecraft/network/FriendlyByteBuf;)Ljava/util/Map; c
	criterionFromJson (Lcom/google/gson/JsonObject;Lnet/minecraft/advancements/critereon/DeserializationContext;)Lnet/minecraft/advancements/Criterion; a
	criterionFromNetwork (Lnet/minecraft/network/FriendlyByteBuf;)Lnet/minecraft/advancements/Criterion; b
	getTrigger ()Lnet/minecraft/advancements/CriterionTriggerInstance; a
	serializeToJson ()Lcom/google/gson/JsonElement; b
	serializeToNetwork (Ljava/util/Map;Lnet/minecraft/network/FriendlyByteBuf;)V a
	serializeToNetwork (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/advancements/CriterionProgress ak
	DATE_FORMAT a
	obtained b
	fromJson (Ljava/lang/String;)Lnet/minecraft/advancements/CriterionProgress; a
	fromNetwork (Lnet/minecraft/network/FriendlyByteBuf;)Lnet/minecraft/advancements/CriterionProgress; b
	getObtained ()Ljava/util/Date; d
	grant ()V b
	isDone ()Z a
	revoke ()V c
	serializeToJson ()Lcom/google/gson/JsonElement; e
	serializeToNetwork (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/advancements/CriterionTrigger al
	addPlayerListener (Lnet/minecraft/server/PlayerAdvancements;Lnet/minecraft/advancements/CriterionTrigger$Listener;)V a
	createInstance (Lcom/google/gson/JsonObject;Lnet/minecraft/advancements/critereon/DeserializationContext;)Lnet/minecraft/advancements/CriterionTriggerInstance; a
	getId ()Lnet/minecraft/resources/ResourceLocation; a
	removePlayerListener (Lnet/minecraft/server/PlayerAdvancements;Lnet/minecraft/advancements/CriterionTrigger$Listener;)V b
	removePlayerListeners (Lnet/minecraft/server/PlayerAdvancements;)V a
net/minecraft/advancements/CriterionTrigger$Listener al$a
	advancement b
	criterion c
	trigger a
	getTriggerInstance ()Lnet/minecraft/advancements/CriterionTriggerInstance; a
	run (Lnet/minecraft/server/PlayerAdvancements;)V a
net/minecraft/advancements/CriterionTriggerInstance am
	getCriterion ()Lnet/minecraft/resources/ResourceLocation; a
	serializeToJson (Lnet/minecraft/advancements/critereon/SerializationContext;)Lcom/google/gson/JsonObject; a
net/minecraft/advancements/DisplayInfo an
	announceChat g
	background d
	description b
	frame e
	hidden h
	icon c
	showToast f
	title a
	x i
	y j
	fromJson (Lcom/google/gson/JsonObject;)Lnet/minecraft/advancements/DisplayInfo; a
	fromNetwork (Lnet/minecraft/network/FriendlyByteBuf;)Lnet/minecraft/advancements/DisplayInfo; b
	getBackground ()Lnet/minecraft/resources/ResourceLocation; d
	getDescription ()Lnet/minecraft/network/chat/Component; b
	getFrame ()Lnet/minecraft/advancements/FrameType; e
	getIcon ()Lnet/minecraft/world/item/ItemStack; c
	getIcon (Lcom/google/gson/JsonObject;)Lnet/minecraft/world/item/ItemStack; b
	getTitle ()Lnet/minecraft/network/chat/Component; a
	getX ()F f
	getY ()F g
	isHidden ()Z j
	serializeIcon ()Lcom/google/gson/JsonObject; l
	serializeToJson ()Lcom/google/gson/JsonElement; k
	serializeToNetwork (Lnet/minecraft/network/FriendlyByteBuf;)V a
	setLocation (FF)V a
	shouldAnnounceChat ()Z i
	shouldShowToast ()Z h
net/minecraft/advancements/FrameType ao
	$VALUES h
	CHALLENGE b
	GOAL c
	TASK a
	chatColor f
	displayName g
	name d
	texture e
	$values ()[Lnet/minecraft/advancements/FrameType; e
	byName (Ljava/lang/String;)Lnet/minecraft/advancements/FrameType; a
	getChatColor ()Lnet/minecraft/ChatFormatting; c
	getDisplayName ()Lnet/minecraft/network/chat/Component; d
	getName ()Ljava/lang/String; a
	getTexture ()I b
net/minecraft/advancements/RequirementsStrategy ap
	AND a
	OR b
net/minecraft/advancements/TreeNodePosition aq
	advancement a
	ancestor f
	change k
	childIndex d
	children e
	mod j
	parent b
	previousSibling c
	shift l
	thread g
	x h
	y i
	addChild (Lnet/minecraft/advancements/Advancement;Lnet/minecraft/advancements/TreeNodePosition;)Lnet/minecraft/advancements/TreeNodePosition; a
	apportion (Lnet/minecraft/advancements/TreeNodePosition;)Lnet/minecraft/advancements/TreeNodePosition; a
	executeShifts ()V b
	finalizePosition ()V e
	firstWalk ()V a
	getAncestor (Lnet/minecraft/advancements/TreeNodePosition;Lnet/minecraft/advancements/TreeNodePosition;)Lnet/minecraft/advancements/TreeNodePosition; a
	moveSubtree (Lnet/minecraft/advancements/TreeNodePosition;F)V a
	nextOrThread ()Lnet/minecraft/advancements/TreeNodePosition; d
	previousOrThread ()Lnet/minecraft/advancements/TreeNodePosition; c
	run (Lnet/minecraft/advancements/Advancement;)V a
	secondWalk (FIF)F a
	thirdWalk (F)V a
net/minecraft/advancements/critereon/AbstractCriterionTriggerInstance ar
	criterion a
	player b
	getCriterion ()Lnet/minecraft/resources/ResourceLocation; a
	getPlayerPredicate ()Lnet/minecraft/advancements/critereon/ContextAwarePredicate; b
	serializeToJson (Lnet/minecraft/advancements/critereon/SerializationContext;)Lcom/google/gson/JsonObject; a
net/minecraft/advancements/critereon/BeeNestDestroyedTrigger as
	ID a
	createInstance (Lcom/google/gson/JsonObject;Lnet/minecraft/advancements/critereon/ContextAwarePredicate;Lnet/minecraft/advancements/critereon/DeserializationContext;)Lnet/minecraft/advancements/critereon/AbstractCriterionTriggerInstance; b
	createInstance (Lcom/google/gson/JsonObject;Lnet/minecraft/advancements/critereon/ContextAwarePredicate;Lnet/minecraft/advancements/critereon/DeserializationContext;)Lnet/minecraft/advancements/critereon/BeeNestDestroyedTrigger$TriggerInstance; a
	deserializeBlock (Lcom/google/gson/JsonObject;)Lnet/minecraft/world/level/block/Block; a
	getId ()Lnet/minecraft/resources/ResourceLocation; a
	trigger (Lnet/minecraft/server/level/ServerPlayer;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/item/ItemStack;I)V a
net/minecraft/advancements/critereon/BeeNestDestroyedTrigger$TriggerInstance as$a
	block a
	item b
	numBees c
	destroyedBeeNest (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/advancements/critereon/ItemPredicate$Builder;Lnet/minecraft/advancements/critereon/MinMaxBounds$Ints;)Lnet/minecraft/advancements/critereon/BeeNestDestroyedTrigger$TriggerInstance; a
	matches (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/item/ItemStack;I)Z a
	serializeToJson (Lnet/minecraft/advancements/critereon/SerializationContext;)Lcom/google/gson/JsonObject; a
net/minecraft/advancements/critereon/BlockPredicate at
	ANY a
	blocks c
	nbt e
	properties d
	tag b
	fromJson (Lcom/google/gson/JsonElement;)Lnet/minecraft/advancements/critereon/BlockPredicate; a
	matches (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;)Z a
	serializeToJson ()Lcom/google/gson/JsonElement; a
net/minecraft/advancements/critereon/BlockPredicate$Builder at$a
	blocks a
	nbt d
	properties c
	tag b
	block ()Lnet/minecraft/advancements/critereon/BlockPredicate$Builder; a
	build ()Lnet/minecraft/advancements/critereon/BlockPredicate; b
	hasNbt (Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/advancements/critereon/BlockPredicate$Builder; a
	of (Ljava/lang/Iterable;)Lnet/minecraft/advancements/critereon/BlockPredicate$Builder; a
	of (Lnet/minecraft/tags/TagKey;)Lnet/minecraft/advancements/critereon/BlockPredicate$Builder; a
	of ([Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/advancements/critereon/BlockPredicate$Builder; a
	setProperties (Lnet/minecraft/advancements/critereon/StatePropertiesPredicate;)Lnet/minecraft/advancements/critereon/BlockPredicate$Builder; a
net/minecraft/advancements/critereon/BredAnimalsTrigger au
	ID a
	createInstance (Lcom/google/gson/JsonObject;Lnet/minecraft/advancements/critereon/ContextAwarePredicate;Lnet/minecraft/advancements/critereon/DeserializationContext;)Lnet/minecraft/advancements/critereon/AbstractCriterionTriggerInstance; b
	createInstance (Lcom/google/gson/JsonObject;Lnet/minecraft/advancements/critereon/ContextAwarePredicate;Lnet/minecraft/advancements/critereon/DeserializationContext;)Lnet/minecraft/advancements/critereon/BredAnimalsTrigger$TriggerInstance; a
	getId ()Lnet/minecraft/resources/ResourceLocation; a
	trigger (Lnet/minecraft/server/level/ServerPlayer;Lnet/minecraft/world/entity/animal/Animal;Lnet/minecraft/world/entity/animal/Animal;Lnet/minecraft/world/entity/AgeableMob;)V a
net/minecraft/advancements/critereon/BredAnimalsTrigger$TriggerInstance au$a
	child c
	parent a
	partner b
	bredAnimals ()Lnet/minecraft/advancements/critereon/BredAnimalsTrigger$TriggerInstance; c
	bredAnimals (Lnet/minecraft/advancements/critereon/EntityPredicate$Builder;)Lnet/minecraft/advancements/critereon/BredAnimalsTrigger$TriggerInstance; a
	bredAnimals (Lnet/minecraft/advancements/critereon/EntityPredicate;Lnet/minecraft/advancements/critereon/EntityPredicate;Lnet/minecraft/advancements/critereon/EntityPredicate;)Lnet/minecraft/advancements/critereon/BredAnimalsTrigger$TriggerInstance; a
	matches (Lnet/minecraft/world/level/storage/loot/LootContext;Lnet/minecraft/world/level/storage/loot/LootContext;Lnet/minecraft/world/level/storage/loot/LootContext;)Z a
	serializeToJson (Lnet/minecraft/advancements/critereon/SerializationContext;)Lcom/google/gson/JsonObject; a
net/minecraft/advancements/critereon/BrewedPotionTrigger av
	ID a
	createInstance (Lcom/google/gson/JsonObject;Lnet/minecraft/advancements/critereon/ContextAwarePredicate;Lnet/minecraft/advancements/critereon/DeserializationContext;)Lnet/minecraft/advancements/critereon/AbstractCriterionTriggerInstance; b
	createInstance (Lcom/google/gson/JsonObject;Lnet/minecraft/advancements/critereon/ContextAwarePredicate;Lnet/minecraft/advancements/critereon/DeserializationContext;)Lnet/minecraft/advancements/critereon/BrewedPotionTrigger$TriggerInstance; a
	getId ()Lnet/minecraft/resources/ResourceLocation; a
	trigger (Lnet/minecraft/server/level/ServerPlayer;Lnet/minecraft/world/item/alchemy/Potion;)V a
net/minecraft/advancements/critereon/BrewedPotionTrigger$TriggerInstance av$a
	potion a
	brewedPotion ()Lnet/minecraft/advancements/critereon/BrewedPotionTrigger$TriggerInstance; c
	matches (Lnet/minecraft/world/item/alchemy/Potion;)Z a
	serializeToJson (Lnet/minecraft/advancements/critereon/SerializationContext;)Lcom/google/gson/JsonObject; a
net/minecraft/advancements/critereon/ChangeDimensionTrigger aw
	ID a
	createInstance (Lcom/google/gson/JsonObject;Lnet/minecraft/advancements/critereon/ContextAwarePredicate;Lnet/minecraft/advancements/critereon/DeserializationContext;)Lnet/minecraft/advancements/critereon/AbstractCriterionTriggerInstance; b
	createInstance (Lcom/google/gson/JsonObject;Lnet/minecraft/advancements/critereon/ContextAwarePredicate;Lnet/minecraft/advancements/critereon/DeserializationContext;)Lnet/minecraft/advancements/critereon/ChangeDimensionTrigger$TriggerInstance; a
	getId ()Lnet/minecraft/resources/ResourceLocation; a
	trigger (Lnet/minecraft/server/level/ServerPlayer;Lnet/minecraft/resources/ResourceKey;Lnet/minecraft/resources/ResourceKey;)V a
net/minecraft/advancements/critereon/ChangeDimensionTrigger$TriggerInstance aw$a
	from a
	to b
	changedDimension ()Lnet/minecraft/advancements/critereon/ChangeDimensionTrigger$TriggerInstance; c
	changedDimension (Lnet/minecraft/resources/ResourceKey;Lnet/minecraft/resources/ResourceKey;)Lnet/minecraft/advancements/critereon/ChangeDimensionTrigger$TriggerInstance; a
	changedDimensionFrom (Lnet/minecraft/resources/ResourceKey;)Lnet/minecraft/advancements/critereon/ChangeDimensionTrigger$TriggerInstance; b
	changedDimensionTo (Lnet/minecraft/resources/ResourceKey;)Lnet/minecraft/advancements/critereon/ChangeDimensionTrigger$TriggerInstance; a
	matches (Lnet/minecraft/resources/ResourceKey;Lnet/minecraft/resources/ResourceKey;)Z b
	serializeToJson (Lnet/minecraft/advancements/critereon/SerializationContext;)Lcom/google/gson/JsonObject; a
net/minecraft/advancements/critereon/ChanneledLightningTrigger ax
	ID a
	createInstance (Lcom/google/gson/JsonObject;Lnet/minecraft/advancements/critereon/ContextAwarePredicate;Lnet/minecraft/advancements/critereon/DeserializationContext;)Lnet/minecraft/advancements/critereon/AbstractCriterionTriggerInstance; b
	createInstance (Lcom/google/gson/JsonObject;Lnet/minecraft/advancements/critereon/ContextAwarePredicate;Lnet/minecraft/advancements/critereon/DeserializationContext;)Lnet/minecraft/advancements/critereon/ChanneledLightningTrigger$TriggerInstance; a
	getId ()Lnet/minecraft/resources/ResourceLocation; a
	trigger (Lnet/minecraft/server/level/ServerPlayer;Ljava/util/Collection;)V a
net/minecraft/advancements/critereon/ChanneledLightningTrigger$TriggerInstance ax$a
	victims a
	channeledLightning ([Lnet/minecraft/advancements/critereon/EntityPredicate;)Lnet/minecraft/advancements/critereon/ChanneledLightningTrigger$TriggerInstance; a
	matches (Ljava/util/Collection;)Z a
	serializeToJson (Lnet/minecraft/advancements/critereon/SerializationContext;)Lcom/google/gson/JsonObject; a
net/minecraft/advancements/critereon/ConstructBeaconTrigger ay
	ID a
	createInstance (Lcom/google/gson/JsonObject;Lnet/minecraft/advancements/critereon/ContextAwarePredicate;Lnet/minecraft/advancements/critereon/DeserializationContext;)Lnet/minecraft/advancements/critereon/AbstractCriterionTriggerInstance; b
	createInstance (Lcom/google/gson/JsonObject;Lnet/minecraft/advancements/critereon/ContextAwarePredicate;Lnet/minecraft/advancements/critereon/DeserializationContext;)Lnet/minecraft/advancements/critereon/ConstructBeaconTrigger$TriggerInstance; a
	getId ()Lnet/minecraft/resources/ResourceLocation; a
	trigger (Lnet/minecraft/server/level/ServerPlayer;I)V a
net/minecraft/advancements/critereon/ConstructBeaconTrigger$TriggerInstance ay$a
	level a
	constructedBeacon ()Lnet/minecraft/advancements/critereon/ConstructBeaconTrigger$TriggerInstance; c
	constructedBeacon (Lnet/minecraft/advancements/critereon/MinMaxBounds$Ints;)Lnet/minecraft/advancements/critereon/ConstructBeaconTrigger$TriggerInstance; a
	matches (I)Z a
	serializeToJson (Lnet/minecraft/advancements/critereon/SerializationContext;)Lcom/google/gson/JsonObject; a
net/minecraft/advancements/critereon/ConsumeItemTrigger az
	ID a
	createInstance (Lcom/google/gson/JsonObject;Lnet/minecraft/advancements/critereon/ContextAwarePredicate;Lnet/minecraft/advancements/critereon/DeserializationContext;)Lnet/minecraft/advancements/critereon/AbstractCriterionTriggerInstance; b
	createInstance (Lcom/google/gson/JsonObject;Lnet/minecraft/advancements/critereon/ContextAwarePredicate;Lnet/minecraft/advancements/critereon/DeserializationContext;)Lnet/minecraft/advancements/critereon/ConsumeItemTrigger$TriggerInstance; a
	getId ()Lnet/minecraft/resources/ResourceLocation; a
	trigger (Lnet/minecraft/server/level/ServerPlayer;Lnet/minecraft/world/item/ItemStack;)V a
net/minecraft/advancements/critereon/ConsumeItemTrigger$TriggerInstance az$a
	item a
	matches (Lnet/minecraft/world/item/ItemStack;)Z a
	serializeToJson (Lnet/minecraft/advancements/critereon/SerializationContext;)Lcom/google/gson/JsonObject; a
	usedItem ()Lnet/minecraft/advancements/critereon/ConsumeItemTrigger$TriggerInstance; c
	usedItem (Lnet/minecraft/advancements/critereon/ItemPredicate;)Lnet/minecraft/advancements/critereon/ConsumeItemTrigger$TriggerInstance; a
	usedItem (Lnet/minecraft/world/level/ItemLike;)Lnet/minecraft/advancements/critereon/ConsumeItemTrigger$TriggerInstance; a
net/minecraft/advancements/critereon/ContextAwarePredicate ba
	ANY a
	compositePredicates c
	conditions b
	create ([Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition;)Lnet/minecraft/advancements/critereon/ContextAwarePredicate; a
	fromElement (Ljava/lang/String;Lnet/minecraft/advancements/critereon/DeserializationContext;Lcom/google/gson/JsonElement;Lnet/minecraft/world/level/storage/loot/parameters/LootContextParamSet;)Lnet/minecraft/advancements/critereon/ContextAwarePredicate; a
	matches (Lnet/minecraft/world/level/storage/loot/LootContext;)Z a
	toJson (Lnet/minecraft/advancements/critereon/SerializationContext;)Lcom/google/gson/JsonElement; a
	toJson ([Lnet/minecraft/advancements/critereon/ContextAwarePredicate;Lnet/minecraft/advancements/critereon/SerializationContext;)Lcom/google/gson/JsonElement; a
net/minecraft/advancements/critereon/CuredZombieVillagerTrigger bb
	ID a
	createInstance (Lcom/google/gson/JsonObject;Lnet/minecraft/advancements/critereon/ContextAwarePredicate;Lnet/minecraft/advancements/critereon/DeserializationContext;)Lnet/minecraft/advancements/critereon/AbstractCriterionTriggerInstance; b
	createInstance (Lcom/google/gson/JsonObject;Lnet/minecraft/advancements/critereon/ContextAwarePredicate;Lnet/minecraft/advancements/critereon/DeserializationContext;)Lnet/minecraft/advancements/critereon/CuredZombieVillagerTrigger$TriggerInstance; a
	getId ()Lnet/minecraft/resources/ResourceLocation; a
	trigger (Lnet/minecraft/server/level/ServerPlayer;Lnet/minecraft/world/entity/monster/Zombie;Lnet/minecraft/world/entity/npc/Villager;)V a
net/minecraft/advancements/critereon/CuredZombieVillagerTrigger$TriggerInstance bb$a
	villager b
	zombie a
	curedZombieVillager ()Lnet/minecraft/advancements/critereon/CuredZombieVillagerTrigger$TriggerInstance; c
	matches (Lnet/minecraft/world/level/storage/loot/LootContext;Lnet/minecraft/world/level/storage/loot/LootContext;)Z a
	serializeToJson (Lnet/minecraft/advancements/critereon/SerializationContext;)Lcom/google/gson/JsonObject; a
net/minecraft/advancements/critereon/DamagePredicate bc
	ANY a
	blocked e
	dealtDamage b
	sourceEntity d
	takenDamage c
	type f
	fromJson (Lcom/google/gson/JsonElement;)Lnet/minecraft/advancements/critereon/DamagePredicate; a
	matches (Lnet/minecraft/server/level/ServerPlayer;Lnet/minecraft/world/damagesource/DamageSource;FFZ)Z a
	serializeToJson ()Lcom/google/gson/JsonElement; a
net/minecraft/advancements/critereon/DamagePredicate$Builder bc$a
	blocked d
	dealtDamage a
	sourceEntity c
	takenDamage b
	type e
	blocked (Ljava/lang/Boolean;)Lnet/minecraft/advancements/critereon/DamagePredicate$Builder; a
	build ()Lnet/minecraft/advancements/critereon/DamagePredicate; b
	damageInstance ()Lnet/minecraft/advancements/critereon/DamagePredicate$Builder; a
	dealtDamage (Lnet/minecraft/advancements/critereon/MinMaxBounds$Doubles;)Lnet/minecraft/advancements/critereon/DamagePredicate$Builder; a
	sourceEntity (Lnet/minecraft/advancements/critereon/EntityPredicate;)Lnet/minecraft/advancements/critereon/DamagePredicate$Builder; a
	takenDamage (Lnet/minecraft/advancements/critereon/MinMaxBounds$Doubles;)Lnet/minecraft/advancements/critereon/DamagePredicate$Builder; b
	type (Lnet/minecraft/advancements/critereon/DamageSourcePredicate$Builder;)Lnet/minecraft/advancements/critereon/DamagePredicate$Builder; a
	type (Lnet/minecraft/advancements/critereon/DamageSourcePredicate;)Lnet/minecraft/advancements/critereon/DamagePredicate$Builder; a
net/minecraft/advancements/critereon/DamageSourcePredicate bd
	ANY a
	directEntity c
	sourceEntity d
	tags b
	fromJson (Lcom/google/gson/JsonElement;)Lnet/minecraft/advancements/critereon/DamageSourcePredicate; a
	matches (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/phys/Vec3;Lnet/minecraft/world/damagesource/DamageSource;)Z a
	matches (Lnet/minecraft/server/level/ServerPlayer;Lnet/minecraft/world/damagesource/DamageSource;)Z a
	serializeToJson ()Lcom/google/gson/JsonElement; a
net/minecraft/advancements/critereon/DamageSourcePredicate$Builder bd$a
	directEntity b
	sourceEntity c
	tags a
	build ()Lnet/minecraft/advancements/critereon/DamageSourcePredicate; b
	damageType ()Lnet/minecraft/advancements/critereon/DamageSourcePredicate$Builder; a
	direct (Lnet/minecraft/advancements/critereon/EntityPredicate$Builder;)Lnet/minecraft/advancements/critereon/DamageSourcePredicate$Builder; a
	direct (Lnet/minecraft/advancements/critereon/EntityPredicate;)Lnet/minecraft/advancements/critereon/DamageSourcePredicate$Builder; a
	source (Lnet/minecraft/advancements/critereon/EntityPredicate$Builder;)Lnet/minecraft/advancements/critereon/DamageSourcePredicate$Builder; b
	source (Lnet/minecraft/advancements/critereon/EntityPredicate;)Lnet/minecraft/advancements/critereon/DamageSourcePredicate$Builder; b
	tag (Lnet/minecraft/advancements/critereon/TagPredicate;)Lnet/minecraft/advancements/critereon/DamageSourcePredicate$Builder; a
net/minecraft/advancements/critereon/DeserializationContext be
	LOGGER a
	id b
	lootData c
	predicateGson d
	deserializeConditions (Lcom/google/gson/JsonArray;Ljava/lang/String;Lnet/minecraft/world/level/storage/loot/parameters/LootContextParamSet;)[Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition; a
	getAdvancementId ()Lnet/minecraft/resources/ResourceLocation; a
net/minecraft/advancements/critereon/DistancePredicate bf
	ANY a
	absolute f
	horizontal e
	x b
	y c
	z d
	absolute (Lnet/minecraft/advancements/critereon/MinMaxBounds$Doubles;)Lnet/minecraft/advancements/critereon/DistancePredicate; c
	fromJson (Lcom/google/gson/JsonElement;)Lnet/minecraft/advancements/critereon/DistancePredicate; a
	horizontal (Lnet/minecraft/advancements/critereon/MinMaxBounds$Doubles;)Lnet/minecraft/advancements/critereon/DistancePredicate; a
	matches (DDDDDD)Z a
	serializeToJson ()Lcom/google/gson/JsonElement; a
	vertical (Lnet/minecraft/advancements/critereon/MinMaxBounds$Doubles;)Lnet/minecraft/advancements/critereon/DistancePredicate; b
net/minecraft/advancements/critereon/DistanceTrigger bg
	id a
	createInstance (Lcom/google/gson/JsonObject;Lnet/minecraft/advancements/critereon/ContextAwarePredicate;Lnet/minecraft/advancements/critereon/DeserializationContext;)Lnet/minecraft/advancements/critereon/AbstractCriterionTriggerInstance; b
	createInstance (Lcom/google/gson/JsonObject;Lnet/minecraft/advancements/critereon/ContextAwarePredicate;Lnet/minecraft/advancements/critereon/DeserializationContext;)Lnet/minecraft/advancements/critereon/DistanceTrigger$TriggerInstance; a
	getId ()Lnet/minecraft/resources/ResourceLocation; a
	trigger (Lnet/minecraft/server/level/ServerPlayer;Lnet/minecraft/world/phys/Vec3;)V a
net/minecraft/advancements/critereon/DistanceTrigger$TriggerInstance bg$a
	distance b
	startPosition a
	fallFromHeight (Lnet/minecraft/advancements/critereon/EntityPredicate$Builder;Lnet/minecraft/advancements/critereon/DistancePredicate;Lnet/minecraft/advancements/critereon/LocationPredicate;)Lnet/minecraft/advancements/critereon/DistanceTrigger$TriggerInstance; a
	matches (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/phys/Vec3;Lnet/minecraft/world/phys/Vec3;)Z a
	rideEntityInLava (Lnet/minecraft/advancements/critereon/EntityPredicate$Builder;Lnet/minecraft/advancements/critereon/DistancePredicate;)Lnet/minecraft/advancements/critereon/DistanceTrigger$TriggerInstance; a
	serializeToJson (Lnet/minecraft/advancements/critereon/SerializationContext;)Lcom/google/gson/JsonObject; a
	travelledThroughNether (Lnet/minecraft/advancements/critereon/DistancePredicate;)Lnet/minecraft/advancements/critereon/DistanceTrigger$TriggerInstance; a
net/minecraft/advancements/critereon/EffectsChangedTrigger bh
	ID a
	createInstance (Lcom/google/gson/JsonObject;Lnet/minecraft/advancements/critereon/ContextAwarePredicate;Lnet/minecraft/advancements/critereon/DeserializationContext;)Lnet/minecraft/advancements/critereon/AbstractCriterionTriggerInstance; b
	createInstance (Lcom/google/gson/JsonObject;Lnet/minecraft/advancements/critereon/ContextAwarePredicate;Lnet/minecraft/advancements/critereon/DeserializationContext;)Lnet/minecraft/advancements/critereon/EffectsChangedTrigger$TriggerInstance; a
	getId ()Lnet/minecraft/resources/ResourceLocation; a
	trigger (Lnet/minecraft/server/level/ServerPlayer;Lnet/minecraft/world/entity/Entity;)V a
net/minecraft/advancements/critereon/EffectsChangedTrigger$TriggerInstance bh$a
	effects a
	source b
	gotEffectsFrom (Lnet/minecraft/advancements/critereon/EntityPredicate;)Lnet/minecraft/advancements/critereon/EffectsChangedTrigger$TriggerInstance; a
	hasEffects (Lnet/minecraft/advancements/critereon/MobEffectsPredicate;)Lnet/minecraft/advancements/critereon/EffectsChangedTrigger$TriggerInstance; a
	matches (Lnet/minecraft/server/level/ServerPlayer;Lnet/minecraft/world/level/storage/loot/LootContext;)Z a
	serializeToJson (Lnet/minecraft/advancements/critereon/SerializationContext;)Lcom/google/gson/JsonObject; a
net/minecraft/advancements/critereon/EnchantedItemTrigger bi
	ID a
	createInstance (Lcom/google/gson/JsonObject;Lnet/minecraft/advancements/critereon/ContextAwarePredicate;Lnet/minecraft/advancements/critereon/DeserializationContext;)Lnet/minecraft/advancements/critereon/AbstractCriterionTriggerInstance; b
	createInstance (Lcom/google/gson/JsonObject;Lnet/minecraft/advancements/critereon/ContextAwarePredicate;Lnet/minecraft/advancements/critereon/DeserializationContext;)Lnet/minecraft/advancements/critereon/EnchantedItemTrigger$TriggerInstance; a
	getId ()Lnet/minecraft/resources/ResourceLocation; a
	trigger (Lnet/minecraft/server/level/ServerPlayer;Lnet/minecraft/world/item/ItemStack;I)V a
net/minecraft/advancements/critereon/EnchantedItemTrigger$TriggerInstance bi$a
	item a
	levels b
	enchantedItem ()Lnet/minecraft/advancements/critereon/EnchantedItemTrigger$TriggerInstance; c
	matches (Lnet/minecraft/world/item/ItemStack;I)Z a
	serializeToJson (Lnet/minecraft/advancements/critereon/SerializationContext;)Lcom/google/gson/JsonObject; a
net/minecraft/advancements/critereon/EnchantmentPredicate bj
	ANY a
	NONE b
	enchantment c
	level d
	containedIn (Ljava/util/Map;)Z a
	fromJson (Lcom/google/gson/JsonElement;)Lnet/minecraft/advancements/critereon/EnchantmentPredicate; a
	fromJsonArray (Lcom/google/gson/JsonElement;)[Lnet/minecraft/advancements/critereon/EnchantmentPredicate; b
	serializeToJson ()Lcom/google/gson/JsonElement; a
net/minecraft/advancements/critereon/EnterBlockTrigger bk
	ID a
	createInstance (Lcom/google/gson/JsonObject;Lnet/minecraft/advancements/critereon/ContextAwarePredicate;Lnet/minecraft/advancements/critereon/DeserializationContext;)Lnet/minecraft/advancements/critereon/AbstractCriterionTriggerInstance; b
	createInstance (Lcom/google/gson/JsonObject;Lnet/minecraft/advancements/critereon/ContextAwarePredicate;Lnet/minecraft/advancements/critereon/DeserializationContext;)Lnet/minecraft/advancements/critereon/EnterBlockTrigger$TriggerInstance; a
	deserializeBlock (Lcom/google/gson/JsonObject;)Lnet/minecraft/world/level/block/Block; a
	getId ()Lnet/minecraft/resources/ResourceLocation; a
	trigger (Lnet/minecraft/server/level/ServerPlayer;Lnet/minecraft/world/level/block/state/BlockState;)V a
net/minecraft/advancements/critereon/EnterBlockTrigger$TriggerInstance bk$a
	block a
	state b
	entersBlock (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/advancements/critereon/EnterBlockTrigger$TriggerInstance; a
	matches (Lnet/minecraft/world/level/block/state/BlockState;)Z a
	serializeToJson (Lnet/minecraft/advancements/critereon/SerializationContext;)Lcom/google/gson/JsonObject; a
net/minecraft/advancements/critereon/EntityEquipmentPredicate bl
	ANY a
	CAPTAIN b
	chest d
	feet f
	head c
	legs e
	mainhand g
	offhand h
	fromJson (Lcom/google/gson/JsonElement;)Lnet/minecraft/advancements/critereon/EntityEquipmentPredicate; a
	matches (Lnet/minecraft/world/entity/Entity;)Z a
	serializeToJson ()Lcom/google/gson/JsonElement; a
net/minecraft/advancements/critereon/EntityEquipmentPredicate$Builder bl$a
	chest b
	feet d
	head a
	legs c
	mainhand e
	offhand f
	build ()Lnet/minecraft/advancements/critereon/EntityEquipmentPredicate; b
	chest (Lnet/minecraft/advancements/critereon/ItemPredicate;)Lnet/minecraft/advancements/critereon/EntityEquipmentPredicate$Builder; b
	equipment ()Lnet/minecraft/advancements/critereon/EntityEquipmentPredicate$Builder; a
	feet (Lnet/minecraft/advancements/critereon/ItemPredicate;)Lnet/minecraft/advancements/critereon/EntityEquipmentPredicate$Builder; d
	head (Lnet/minecraft/advancements/critereon/ItemPredicate;)Lnet/minecraft/advancements/critereon/EntityEquipmentPredicate$Builder; a
	legs (Lnet/minecraft/advancements/critereon/ItemPredicate;)Lnet/minecraft/advancements/critereon/EntityEquipmentPredicate$Builder; c
	mainhand (Lnet/minecraft/advancements/critereon/ItemPredicate;)Lnet/minecraft/advancements/critereon/EntityEquipmentPredicate$Builder; e
	offhand (Lnet/minecraft/advancements/critereon/ItemPredicate;)Lnet/minecraft/advancements/critereon/EntityEquipmentPredicate$Builder; f
net/minecraft/advancements/critereon/EntityFlagsPredicate bm
	ANY a
	isBaby f
	isCrouching c
	isOnFire b
	isSprinting d
	isSwimming e
	addOptionalBoolean (Lcom/google/gson/JsonObject;Ljava/lang/String;Ljava/lang/Boolean;)V a
	fromJson (Lcom/google/gson/JsonElement;)Lnet/minecraft/advancements/critereon/EntityFlagsPredicate; a
	getOptionalBoolean (Lcom/google/gson/JsonObject;Ljava/lang/String;)Ljava/lang/Boolean; a
	matches (Lnet/minecraft/world/entity/Entity;)Z a
	serializeToJson ()Lcom/google/gson/JsonElement; a
net/minecraft/advancements/critereon/EntityFlagsPredicate$Builder bm$a
	isBaby e
	isCrouching b
	isOnFire a
	isSprinting c
	isSwimming d
	build ()Lnet/minecraft/advancements/critereon/EntityFlagsPredicate; b
	flags ()Lnet/minecraft/advancements/critereon/EntityFlagsPredicate$Builder; a
	setCrouching (Ljava/lang/Boolean;)Lnet/minecraft/advancements/critereon/EntityFlagsPredicate$Builder; b
	setIsBaby (Ljava/lang/Boolean;)Lnet/minecraft/advancements/critereon/EntityFlagsPredicate$Builder; e
	setOnFire (Ljava/lang/Boolean;)Lnet/minecraft/advancements/critereon/EntityFlagsPredicate$Builder; a
	setSprinting (Ljava/lang/Boolean;)Lnet/minecraft/advancements/critereon/EntityFlagsPredicate$Builder; c
	setSwimming (Ljava/lang/Boolean;)Lnet/minecraft/advancements/critereon/EntityFlagsPredicate$Builder; d
net/minecraft/advancements/critereon/EntityHurtPlayerTrigger bn
	ID a
	createInstance (Lcom/google/gson/JsonObject;Lnet/minecraft/advancements/critereon/ContextAwarePredicate;Lnet/minecraft/advancements/critereon/DeserializationContext;)Lnet/minecraft/advancements/critereon/AbstractCriterionTriggerInstance; b
	createInstance (Lcom/google/gson/JsonObject;Lnet/minecraft/advancements/critereon/ContextAwarePredicate;Lnet/minecraft/advancements/critereon/DeserializationContext;)Lnet/minecraft/advancements/critereon/EntityHurtPlayerTrigger$TriggerInstance; a
	getId ()Lnet/minecraft/resources/ResourceLocation; a
	trigger (Lnet/minecraft/server/level/ServerPlayer;Lnet/minecraft/world/damagesource/DamageSource;FFZ)V a
net/minecraft/advancements/critereon/EntityHurtPlayerTrigger$TriggerInstance bn$a
	damage a
	entityHurtPlayer ()Lnet/minecraft/advancements/critereon/EntityHurtPlayerTrigger$TriggerInstance; c
	entityHurtPlayer (Lnet/minecraft/advancements/critereon/DamagePredicate$Builder;)Lnet/minecraft/advancements/critereon/EntityHurtPlayerTrigger$TriggerInstance; a
	entityHurtPlayer (Lnet/minecraft/advancements/critereon/DamagePredicate;)Lnet/minecraft/advancements/critereon/EntityHurtPlayerTrigger$TriggerInstance; a
	matches (Lnet/minecraft/server/level/ServerPlayer;Lnet/minecraft/world/damagesource/DamageSource;FFZ)Z a
	serializeToJson (Lnet/minecraft/advancements/critereon/SerializationContext;)Lcom/google/gson/JsonObject; a
net/minecraft/advancements/critereon/EntityPredicate bo
	ANY a
	distanceToPlayer c
	effects f
	entityType b
	equipment i
	flags h
	location d
	nbt g
	passenger l
	steppingOnLocation e
	subPredicate j
	targetedEntity m
	team n
	vehicle k
	createContext (Lnet/minecraft/server/level/ServerPlayer;Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/world/level/storage/loot/LootContext; b
	fromElement (Ljava/lang/String;Lnet/minecraft/advancements/critereon/DeserializationContext;Lcom/google/gson/JsonElement;)Lnet/minecraft/advancements/critereon/ContextAwarePredicate; a
	fromJson (Lcom/google/gson/JsonElement;)Lnet/minecraft/advancements/critereon/EntityPredicate; a
	fromJson (Lcom/google/gson/JsonObject;Ljava/lang/String;Lnet/minecraft/advancements/critereon/DeserializationContext;)Lnet/minecraft/advancements/critereon/ContextAwarePredicate; a
	fromJsonArray (Lcom/google/gson/JsonObject;Ljava/lang/String;Lnet/minecraft/advancements/critereon/DeserializationContext;)[Lnet/minecraft/advancements/critereon/ContextAwarePredicate; b
	matches (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/phys/Vec3;Lnet/minecraft/world/entity/Entity;)Z a
	matches (Lnet/minecraft/server/level/ServerPlayer;Lnet/minecraft/world/entity/Entity;)Z a
	serializeToJson ()Lcom/google/gson/JsonElement; a
	wrap (Lnet/minecraft/advancements/critereon/EntityPredicate;)Lnet/minecraft/advancements/critereon/ContextAwarePredicate; a
net/minecraft/advancements/critereon/EntityPredicate$Builder bo$a
	distanceToPlayer b
	effects e
	entityType a
	equipment h
	flags g
	location c
	nbt f
	passenger k
	steppingOnLocation d
	subPredicate i
	targetedEntity l
	team m
	vehicle j
	build ()Lnet/minecraft/advancements/critereon/EntityPredicate; b
	distance (Lnet/minecraft/advancements/critereon/DistancePredicate;)Lnet/minecraft/advancements/critereon/EntityPredicate$Builder; a
	effects (Lnet/minecraft/advancements/critereon/MobEffectsPredicate;)Lnet/minecraft/advancements/critereon/EntityPredicate$Builder; a
	entity ()Lnet/minecraft/advancements/critereon/EntityPredicate$Builder; a
	entityType (Lnet/minecraft/advancements/critereon/EntityTypePredicate;)Lnet/minecraft/advancements/critereon/EntityPredicate$Builder; a
	equipment (Lnet/minecraft/advancements/critereon/EntityEquipmentPredicate;)Lnet/minecraft/advancements/critereon/EntityPredicate$Builder; a
	flags (Lnet/minecraft/advancements/critereon/EntityFlagsPredicate;)Lnet/minecraft/advancements/critereon/EntityPredicate$Builder; a
	located (Lnet/minecraft/advancements/critereon/LocationPredicate;)Lnet/minecraft/advancements/critereon/EntityPredicate$Builder; a
	nbt (Lnet/minecraft/advancements/critereon/NbtPredicate;)Lnet/minecraft/advancements/critereon/EntityPredicate$Builder; a
	of (Lnet/minecraft/tags/TagKey;)Lnet/minecraft/advancements/critereon/EntityPredicate$Builder; a
	of (Lnet/minecraft/world/entity/EntityType;)Lnet/minecraft/advancements/critereon/EntityPredicate$Builder; a
	passenger (Lnet/minecraft/advancements/critereon/EntityPredicate;)Lnet/minecraft/advancements/critereon/EntityPredicate$Builder; b
	steppingOn (Lnet/minecraft/advancements/critereon/LocationPredicate;)Lnet/minecraft/advancements/critereon/EntityPredicate$Builder; b
	subPredicate (Lnet/minecraft/advancements/critereon/EntitySubPredicate;)Lnet/minecraft/advancements/critereon/EntityPredicate$Builder; a
	targetedEntity (Lnet/minecraft/advancements/critereon/EntityPredicate;)Lnet/minecraft/advancements/critereon/EntityPredicate$Builder; c
	team (Ljava/lang/String;)Lnet/minecraft/advancements/critereon/EntityPredicate$Builder; a
	vehicle (Lnet/minecraft/advancements/critereon/EntityPredicate;)Lnet/minecraft/advancements/critereon/EntityPredicate$Builder; a
net/minecraft/advancements/critereon/EntitySubPredicate bp
	ANY a
	fromJson (Lcom/google/gson/JsonElement;)Lnet/minecraft/advancements/critereon/EntitySubPredicate; a
	matches (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/phys/Vec3;)Z a
	serialize ()Lcom/google/gson/JsonElement; b
	serializeCustomData ()Lcom/google/gson/JsonObject; a
	type ()Lnet/minecraft/advancements/critereon/EntitySubPredicate$Type; c
	variant (Lnet/minecraft/world/entity/animal/CatVariant;)Lnet/minecraft/advancements/critereon/EntitySubPredicate; a
	variant (Lnet/minecraft/world/entity/animal/FrogVariant;)Lnet/minecraft/advancements/critereon/EntitySubPredicate; a
net/minecraft/advancements/critereon/EntitySubPredicate$Type bp$a
net/minecraft/advancements/critereon/EntitySubPredicate$Types bp$b
	ANY a
	AXOLOTL h
	BOAT i
	CAT f
	FISHING_HOOK c
	FOX j
	FROG g
	HORSE n
	LIGHTNING b
	LLAMA o
	MOOSHROOM k
	PAINTING l
	PARROT q
	PLAYER d
	RABBIT m
	SLIME e
	TROPICAL_FISH r
	TYPES s
	VILLAGER p
net/minecraft/advancements/critereon/EntityTypePredicate bq
	ANY a
	COMMA_JOINER b
	fromJson (Lcom/google/gson/JsonElement;)Lnet/minecraft/advancements/critereon/EntityTypePredicate; a
	matches (Lnet/minecraft/world/entity/EntityType;)Z a
	of (Lnet/minecraft/tags/TagKey;)Lnet/minecraft/advancements/critereon/EntityTypePredicate; a
	of (Lnet/minecraft/world/entity/EntityType;)Lnet/minecraft/advancements/critereon/EntityTypePredicate; b
	serializeToJson ()Lcom/google/gson/JsonElement; a
net/minecraft/advancements/critereon/EntityTypePredicate$TagPredicate bq$a
	tag b
	matches (Lnet/minecraft/world/entity/EntityType;)Z a
	serializeToJson ()Lcom/google/gson/JsonElement; a
net/minecraft/advancements/critereon/EntityTypePredicate$TypePredicate bq$b
	type b
	matches (Lnet/minecraft/world/entity/EntityType;)Z a
	serializeToJson ()Lcom/google/gson/JsonElement; a
net/minecraft/advancements/critereon/EntityVariantPredicate br
	VARIANT_KEY a
	getter c
	type d
	variantCodec b
	create (Lcom/mojang/serialization/Codec;Ljava/util/function/Function;)Lnet/minecraft/advancements/critereon/EntityVariantPredicate; a
	create (Lnet/minecraft/core/Registry;Ljava/util/function/Function;)Lnet/minecraft/advancements/critereon/EntityVariantPredicate; a
	createPredicate (Ljava/lang/Object;)Lnet/minecraft/advancements/critereon/EntitySubPredicate; a
	type ()Lnet/minecraft/advancements/critereon/EntitySubPredicate$Type; a
net/minecraft/advancements/critereon/FilledBucketTrigger bs
	ID a
	createInstance (Lcom/google/gson/JsonObject;Lnet/minecraft/advancements/critereon/ContextAwarePredicate;Lnet/minecraft/advancements/critereon/DeserializationContext;)Lnet/minecraft/advancements/critereon/AbstractCriterionTriggerInstance; b
	createInstance (Lcom/google/gson/JsonObject;Lnet/minecraft/advancements/critereon/ContextAwarePredicate;Lnet/minecraft/advancements/critereon/DeserializationContext;)Lnet/minecraft/advancements/critereon/FilledBucketTrigger$TriggerInstance; a
	getId ()Lnet/minecraft/resources/ResourceLocation; a
	trigger (Lnet/minecraft/server/level/ServerPlayer;Lnet/minecraft/world/item/ItemStack;)V a
net/minecraft/advancements/critereon/FilledBucketTrigger$TriggerInstance bs$a
	item a
	filledBucket (Lnet/minecraft/advancements/critereon/ItemPredicate;)Lnet/minecraft/advancements/critereon/FilledBucketTrigger$TriggerInstance; a
	matches (Lnet/minecraft/world/item/ItemStack;)Z a
	serializeToJson (Lnet/minecraft/advancements/critereon/SerializationContext;)Lcom/google/gson/JsonObject; a
net/minecraft/advancements/critereon/FishingHookPredicate bt
	ANY b
	IN_OPEN_WATER_KEY c
	inOpenWater d
	fromJson (Lcom/google/gson/JsonObject;)Lnet/minecraft/advancements/critereon/FishingHookPredicate; a
	inOpenWater (Z)Lnet/minecraft/advancements/critereon/FishingHookPredicate; a
	matches (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/phys/Vec3;)Z a
	serializeCustomData ()Lcom/google/gson/JsonObject; a
	type ()Lnet/minecraft/advancements/critereon/EntitySubPredicate$Type; c
net/minecraft/advancements/critereon/FishingRodHookedTrigger bu
	ID a
	createInstance (Lcom/google/gson/JsonObject;Lnet/minecraft/advancements/critereon/ContextAwarePredicate;Lnet/minecraft/advancements/critereon/DeserializationContext;)Lnet/minecraft/advancements/critereon/AbstractCriterionTriggerInstance; b
	createInstance (Lcom/google/gson/JsonObject;Lnet/minecraft/advancements/critereon/ContextAwarePredicate;Lnet/minecraft/advancements/critereon/DeserializationContext;)Lnet/minecraft/advancements/critereon/FishingRodHookedTrigger$TriggerInstance; a
	getId ()Lnet/minecraft/resources/ResourceLocation; a
	trigger (Lnet/minecraft/server/level/ServerPlayer;Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/entity/projectile/FishingHook;Ljava/util/Collection;)V a
net/minecraft/advancements/critereon/FishingRodHookedTrigger$TriggerInstance bu$a
	entity b
	item c
	rod a
	fishedItem (Lnet/minecraft/advancements/critereon/ItemPredicate;Lnet/minecraft/advancements/critereon/EntityPredicate;Lnet/minecraft/advancements/critereon/ItemPredicate;)Lnet/minecraft/advancements/critereon/FishingRodHookedTrigger$TriggerInstance; a
	matches (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/storage/loot/LootContext;Ljava/util/Collection;)Z a
	serializeToJson (Lnet/minecraft/advancements/critereon/SerializationContext;)Lcom/google/gson/JsonObject; a
net/minecraft/advancements/critereon/FluidPredicate bv
	ANY a
	fluid c
	properties d
	tag b
	fromJson (Lcom/google/gson/JsonElement;)Lnet/minecraft/advancements/critereon/FluidPredicate; a
	matches (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;)Z a
	serializeToJson ()Lcom/google/gson/JsonElement; a
net/minecraft/advancements/critereon/FluidPredicate$Builder bv$a
	fluid a
	fluids b
	properties c
	build ()Lnet/minecraft/advancements/critereon/FluidPredicate; b
	fluid ()Lnet/minecraft/advancements/critereon/FluidPredicate$Builder; a
	of (Lnet/minecraft/tags/TagKey;)Lnet/minecraft/advancements/critereon/FluidPredicate$Builder; a
	of (Lnet/minecraft/world/level/material/Fluid;)Lnet/minecraft/advancements/critereon/FluidPredicate$Builder; a
	setProperties (Lnet/minecraft/advancements/critereon/StatePropertiesPredicate;)Lnet/minecraft/advancements/critereon/FluidPredicate$Builder; a
net/minecraft/advancements/critereon/ImpossibleTrigger bw
	ID a
	addPlayerListener (Lnet/minecraft/server/PlayerAdvancements;Lnet/minecraft/advancements/CriterionTrigger$Listener;)V a
	createInstance (Lcom/google/gson/JsonObject;Lnet/minecraft/advancements/critereon/DeserializationContext;)Lnet/minecraft/advancements/CriterionTriggerInstance; a
	createInstance (Lcom/google/gson/JsonObject;Lnet/minecraft/advancements/critereon/DeserializationContext;)Lnet/minecraft/advancements/critereon/ImpossibleTrigger$TriggerInstance; b
	getId ()Lnet/minecraft/resources/ResourceLocation; a
	removePlayerListener (Lnet/minecraft/server/PlayerAdvancements;Lnet/minecraft/advancements/CriterionTrigger$Listener;)V b
	removePlayerListeners (Lnet/minecraft/server/PlayerAdvancements;)V a
net/minecraft/advancements/critereon/ImpossibleTrigger$TriggerInstance bw$a
	getCriterion ()Lnet/minecraft/resources/ResourceLocation; a
	serializeToJson (Lnet/minecraft/advancements/critereon/SerializationContext;)Lcom/google/gson/JsonObject; a
net/minecraft/advancements/critereon/InventoryChangeTrigger bx
	ID a
	createInstance (Lcom/google/gson/JsonObject;Lnet/minecraft/advancements/critereon/ContextAwarePredicate;Lnet/minecraft/advancements/critereon/DeserializationContext;)Lnet/minecraft/advancements/critereon/AbstractCriterionTriggerInstance; b
	createInstance (Lcom/google/gson/JsonObject;Lnet/minecraft/advancements/critereon/ContextAwarePredicate;Lnet/minecraft/advancements/critereon/DeserializationContext;)Lnet/minecraft/advancements/critereon/InventoryChangeTrigger$TriggerInstance; a
	getId ()Lnet/minecraft/resources/ResourceLocation; a
	trigger (Lnet/minecraft/server/level/ServerPlayer;Lnet/minecraft/world/entity/player/Inventory;Lnet/minecraft/world/item/ItemStack;)V a
	trigger (Lnet/minecraft/server/level/ServerPlayer;Lnet/minecraft/world/entity/player/Inventory;Lnet/minecraft/world/item/ItemStack;III)V a
net/minecraft/advancements/critereon/InventoryChangeTrigger$TriggerInstance bx$a
	predicates d
	slotsEmpty c
	slotsFull b
	slotsOccupied a
	hasItems ([Lnet/minecraft/advancements/critereon/ItemPredicate;)Lnet/minecraft/advancements/critereon/InventoryChangeTrigger$TriggerInstance; a
	hasItems ([Lnet/minecraft/world/level/ItemLike;)Lnet/minecraft/advancements/critereon/InventoryChangeTrigger$TriggerInstance; a
	matches (Lnet/minecraft/world/entity/player/Inventory;Lnet/minecraft/world/item/ItemStack;III)Z a
	serializeToJson (Lnet/minecraft/advancements/critereon/SerializationContext;)Lcom/google/gson/JsonObject; a
net/minecraft/advancements/critereon/ItemDurabilityTrigger by
	ID a
	createInstance (Lcom/google/gson/JsonObject;Lnet/minecraft/advancements/critereon/ContextAwarePredicate;Lnet/minecraft/advancements/critereon/DeserializationContext;)Lnet/minecraft/advancements/critereon/AbstractCriterionTriggerInstance; b
	createInstance (Lcom/google/gson/JsonObject;Lnet/minecraft/advancements/critereon/ContextAwarePredicate;Lnet/minecraft/advancements/critereon/DeserializationContext;)Lnet/minecraft/advancements/critereon/ItemDurabilityTrigger$TriggerInstance; a
	getId ()Lnet/minecraft/resources/ResourceLocation; a
	trigger (Lnet/minecraft/server/level/ServerPlayer;Lnet/minecraft/world/item/ItemStack;I)V a
net/minecraft/advancements/critereon/ItemDurabilityTrigger$TriggerInstance by$a
	delta c
	durability b
	item a
	changedDurability (Lnet/minecraft/advancements/critereon/ContextAwarePredicate;Lnet/minecraft/advancements/critereon/ItemPredicate;Lnet/minecraft/advancements/critereon/MinMaxBounds$Ints;)Lnet/minecraft/advancements/critereon/ItemDurabilityTrigger$TriggerInstance; a
	changedDurability (Lnet/minecraft/advancements/critereon/ItemPredicate;Lnet/minecraft/advancements/critereon/MinMaxBounds$Ints;)Lnet/minecraft/advancements/critereon/ItemDurabilityTrigger$TriggerInstance; a
	matches (Lnet/minecraft/world/item/ItemStack;I)Z a
	serializeToJson (Lnet/minecraft/advancements/critereon/SerializationContext;)Lcom/google/gson/JsonObject; a
net/minecraft/advancements/critereon/ItemPredicate bz
	ANY a
	count d
	durability e
	enchantments f
	items c
	nbt i
	potion h
	storedEnchantments g
	tag b
	fromJson (Lcom/google/gson/JsonElement;)Lnet/minecraft/advancements/critereon/ItemPredicate; a
	fromJsonArray (Lcom/google/gson/JsonElement;)[Lnet/minecraft/advancements/critereon/ItemPredicate; b
	matches (Lnet/minecraft/world/item/ItemStack;)Z a
	serializeToJson ()Lcom/google/gson/JsonElement; a
net/minecraft/advancements/critereon/ItemPredicate$Builder bz$a
	count e
	durability f
	enchantments a
	items c
	nbt h
	potion g
	storedEnchantments b
	tag d
	build ()Lnet/minecraft/advancements/critereon/ItemPredicate; b
	hasDurability (Lnet/minecraft/advancements/critereon/MinMaxBounds$Ints;)Lnet/minecraft/advancements/critereon/ItemPredicate$Builder; b
	hasEnchantment (Lnet/minecraft/advancements/critereon/EnchantmentPredicate;)Lnet/minecraft/advancements/critereon/ItemPredicate$Builder; a
	hasNbt (Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/advancements/critereon/ItemPredicate$Builder; a
	hasStoredEnchantment (Lnet/minecraft/advancements/critereon/EnchantmentPredicate;)Lnet/minecraft/advancements/critereon/ItemPredicate$Builder; b
	isPotion (Lnet/minecraft/world/item/alchemy/Potion;)Lnet/minecraft/advancements/critereon/ItemPredicate$Builder; a
	item ()Lnet/minecraft/advancements/critereon/ItemPredicate$Builder; a
	of (Lnet/minecraft/tags/TagKey;)Lnet/minecraft/advancements/critereon/ItemPredicate$Builder; a
	of ([Lnet/minecraft/world/level/ItemLike;)Lnet/minecraft/advancements/critereon/ItemPredicate$Builder; a
	withCount (Lnet/minecraft/advancements/critereon/MinMaxBounds$Ints;)Lnet/minecraft/advancements/critereon/ItemPredicate$Builder; a
net/minecraft/advancements/critereon/ItemUsedOnLocationTrigger ca
	id a
	createInstance (Lcom/google/gson/JsonObject;Lnet/minecraft/advancements/critereon/ContextAwarePredicate;Lnet/minecraft/advancements/critereon/DeserializationContext;)Lnet/minecraft/advancements/critereon/AbstractCriterionTriggerInstance; b
	createInstance (Lcom/google/gson/JsonObject;Lnet/minecraft/advancements/critereon/ContextAwarePredicate;Lnet/minecraft/advancements/critereon/DeserializationContext;)Lnet/minecraft/advancements/critereon/ItemUsedOnLocationTrigger$TriggerInstance; a
	getId ()Lnet/minecraft/resources/ResourceLocation; a
	trigger (Lnet/minecraft/server/level/ServerPlayer;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/item/ItemStack;)V a
net/minecraft/advancements/critereon/ItemUsedOnLocationTrigger$TriggerInstance ca$a
	location a
	allayDropItemOnBlock (Lnet/minecraft/advancements/critereon/LocationPredicate$Builder;Lnet/minecraft/advancements/critereon/ItemPredicate$Builder;)Lnet/minecraft/advancements/critereon/ItemUsedOnLocationTrigger$TriggerInstance; b
	itemUsedOnBlock (Lnet/minecraft/advancements/critereon/LocationPredicate$Builder;Lnet/minecraft/advancements/critereon/ItemPredicate$Builder;)Lnet/minecraft/advancements/critereon/ItemUsedOnLocationTrigger$TriggerInstance; a
	itemUsedOnLocation (Lnet/minecraft/advancements/critereon/LocationPredicate$Builder;Lnet/minecraft/advancements/critereon/ItemPredicate$Builder;Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/advancements/critereon/ItemUsedOnLocationTrigger$TriggerInstance; a
	matches (Lnet/minecraft/world/level/storage/loot/LootContext;)Z a
	placedBlock (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/advancements/critereon/ItemUsedOnLocationTrigger$TriggerInstance; a
	placedBlock ([Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition$Builder;)Lnet/minecraft/advancements/critereon/ItemUsedOnLocationTrigger$TriggerInstance; a
	serializeToJson (Lnet/minecraft/advancements/critereon/SerializationContext;)Lcom/google/gson/JsonObject; a
net/minecraft/advancements/critereon/KilledByCrossbowTrigger cb
	ID a
	createInstance (Lcom/google/gson/JsonObject;Lnet/minecraft/advancements/critereon/ContextAwarePredicate;Lnet/minecraft/advancements/critereon/DeserializationContext;)Lnet/minecraft/advancements/critereon/AbstractCriterionTriggerInstance; b
	createInstance (Lcom/google/gson/JsonObject;Lnet/minecraft/advancements/critereon/ContextAwarePredicate;Lnet/minecraft/advancements/critereon/DeserializationContext;)Lnet/minecraft/advancements/critereon/KilledByCrossbowTrigger$TriggerInstance; a
	getId ()Lnet/minecraft/resources/ResourceLocation; a
	trigger (Lnet/minecraft/server/level/ServerPlayer;Ljava/util/Collection;)V a
net/minecraft/advancements/critereon/KilledByCrossbowTrigger$TriggerInstance cb$a
	uniqueEntityTypes b
	victims a
	crossbowKilled (Lnet/minecraft/advancements/critereon/MinMaxBounds$Ints;)Lnet/minecraft/advancements/critereon/KilledByCrossbowTrigger$TriggerInstance; a
	crossbowKilled ([Lnet/minecraft/advancements/critereon/EntityPredicate$Builder;)Lnet/minecraft/advancements/critereon/KilledByCrossbowTrigger$TriggerInstance; a
	matches (Ljava/util/Collection;I)Z a
	serializeToJson (Lnet/minecraft/advancements/critereon/SerializationContext;)Lcom/google/gson/JsonObject; a
net/minecraft/advancements/critereon/KilledTrigger cc
	id a
	createInstance (Lcom/google/gson/JsonObject;Lnet/minecraft/advancements/critereon/ContextAwarePredicate;Lnet/minecraft/advancements/critereon/DeserializationContext;)Lnet/minecraft/advancements/critereon/AbstractCriterionTriggerInstance; b
	createInstance (Lcom/google/gson/JsonObject;Lnet/minecraft/advancements/critereon/ContextAwarePredicate;Lnet/minecraft/advancements/critereon/DeserializationContext;)Lnet/minecraft/advancements/critereon/KilledTrigger$TriggerInstance; a
	getId ()Lnet/minecraft/resources/ResourceLocation; a
	trigger (Lnet/minecraft/server/level/ServerPlayer;Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/damagesource/DamageSource;)V a
net/minecraft/advancements/critereon/KilledTrigger$TriggerInstance cc$a
	entityPredicate a
	killingBlow b
	entityKilledPlayer ()Lnet/minecraft/advancements/critereon/KilledTrigger$TriggerInstance; e
	entityKilledPlayer (Lnet/minecraft/advancements/critereon/EntityPredicate$Builder;)Lnet/minecraft/advancements/critereon/KilledTrigger$TriggerInstance; b
	entityKilledPlayer (Lnet/minecraft/advancements/critereon/EntityPredicate$Builder;Lnet/minecraft/advancements/critereon/DamageSourcePredicate$Builder;)Lnet/minecraft/advancements/critereon/KilledTrigger$TriggerInstance; b
	entityKilledPlayer (Lnet/minecraft/advancements/critereon/EntityPredicate$Builder;Lnet/minecraft/advancements/critereon/DamageSourcePredicate;)Lnet/minecraft/advancements/critereon/KilledTrigger$TriggerInstance; b
	entityKilledPlayer (Lnet/minecraft/advancements/critereon/EntityPredicate;)Lnet/minecraft/advancements/critereon/KilledTrigger$TriggerInstance; b
	entityKilledPlayer (Lnet/minecraft/advancements/critereon/EntityPredicate;Lnet/minecraft/advancements/critereon/DamageSourcePredicate$Builder;)Lnet/minecraft/advancements/critereon/KilledTrigger$TriggerInstance; b
	entityKilledPlayer (Lnet/minecraft/advancements/critereon/EntityPredicate;Lnet/minecraft/advancements/critereon/DamageSourcePredicate;)Lnet/minecraft/advancements/critereon/KilledTrigger$TriggerInstance; b
	matches (Lnet/minecraft/server/level/ServerPlayer;Lnet/minecraft/world/level/storage/loot/LootContext;Lnet/minecraft/world/damagesource/DamageSource;)Z a
	playerKilledEntity ()Lnet/minecraft/advancements/critereon/KilledTrigger$TriggerInstance; c
	playerKilledEntity (Lnet/minecraft/advancements/critereon/EntityPredicate$Builder;)Lnet/minecraft/advancements/critereon/KilledTrigger$TriggerInstance; a
	playerKilledEntity (Lnet/minecraft/advancements/critereon/EntityPredicate$Builder;Lnet/minecraft/advancements/critereon/DamageSourcePredicate$Builder;)Lnet/minecraft/advancements/critereon/KilledTrigger$TriggerInstance; a
	playerKilledEntity (Lnet/minecraft/advancements/critereon/EntityPredicate$Builder;Lnet/minecraft/advancements/critereon/DamageSourcePredicate;)Lnet/minecraft/advancements/critereon/KilledTrigger$TriggerInstance; a
	playerKilledEntity (Lnet/minecraft/advancements/critereon/EntityPredicate;)Lnet/minecraft/advancements/critereon/KilledTrigger$TriggerInstance; a
	playerKilledEntity (Lnet/minecraft/advancements/critereon/EntityPredicate;Lnet/minecraft/advancements/critereon/DamageSourcePredicate$Builder;)Lnet/minecraft/advancements/critereon/KilledTrigger$TriggerInstance; a
	playerKilledEntity (Lnet/minecraft/advancements/critereon/EntityPredicate;Lnet/minecraft/advancements/critereon/DamageSourcePredicate;)Lnet/minecraft/advancements/critereon/KilledTrigger$TriggerInstance; a
	playerKilledEntityNearSculkCatalyst ()Lnet/minecraft/advancements/critereon/KilledTrigger$TriggerInstance; d
	serializeToJson (Lnet/minecraft/advancements/critereon/SerializationContext;)Lcom/google/gson/JsonObject; a
net/minecraft/advancements/critereon/LevitationTrigger cd
	ID a
	createInstance (Lcom/google/gson/JsonObject;Lnet/minecraft/advancements/critereon/ContextAwarePredicate;Lnet/minecraft/advancements/critereon/DeserializationContext;)Lnet/minecraft/advancements/critereon/AbstractCriterionTriggerInstance; b
	createInstance (Lcom/google/gson/JsonObject;Lnet/minecraft/advancements/critereon/ContextAwarePredicate;Lnet/minecraft/advancements/critereon/DeserializationContext;)Lnet/minecraft/advancements/critereon/LevitationTrigger$TriggerInstance; a
	getId ()Lnet/minecraft/resources/ResourceLocation; a
	trigger (Lnet/minecraft/server/level/ServerPlayer;Lnet/minecraft/world/phys/Vec3;I)V a
net/minecraft/advancements/critereon/LevitationTrigger$TriggerInstance cd$a
	distance a
	duration b
	levitated (Lnet/minecraft/advancements/critereon/DistancePredicate;)Lnet/minecraft/advancements/critereon/LevitationTrigger$TriggerInstance; a
	matches (Lnet/minecraft/server/level/ServerPlayer;Lnet/minecraft/world/phys/Vec3;I)Z a
	serializeToJson (Lnet/minecraft/advancements/critereon/SerializationContext;)Lcom/google/gson/JsonObject; a
net/minecraft/advancements/critereon/LightPredicate ce
	ANY a
	composite b
	fromJson (Lcom/google/gson/JsonElement;)Lnet/minecraft/advancements/critereon/LightPredicate; a
	matches (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;)Z a
	serializeToJson ()Lcom/google/gson/JsonElement; a
net/minecraft/advancements/critereon/LightPredicate$Builder ce$a
	composite a
	build ()Lnet/minecraft/advancements/critereon/LightPredicate; b
	light ()Lnet/minecraft/advancements/critereon/LightPredicate$Builder; a
	setComposite (Lnet/minecraft/advancements/critereon/MinMaxBounds$Ints;)Lnet/minecraft/advancements/critereon/LightPredicate$Builder; a
net/minecraft/advancements/critereon/LighthingBoltPredicate cf
	BLOCKS_SET_ON_FIRE_KEY b
	ENTITY_STRUCK_KEY c
	blocksSetOnFire d
	entityStruck e
	blockSetOnFire (Lnet/minecraft/advancements/critereon/MinMaxBounds$Ints;)Lnet/minecraft/advancements/critereon/LighthingBoltPredicate; a
	fromJson (Lcom/google/gson/JsonObject;)Lnet/minecraft/advancements/critereon/LighthingBoltPredicate; a
	matches (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/phys/Vec3;)Z a
	serializeCustomData ()Lcom/google/gson/JsonObject; a
	type ()Lnet/minecraft/advancements/critereon/EntitySubPredicate$Type; c
net/minecraft/advancements/critereon/LightningStrikeTrigger cg
	ID a
	createInstance (Lcom/google/gson/JsonObject;Lnet/minecraft/advancements/critereon/ContextAwarePredicate;Lnet/minecraft/advancements/critereon/DeserializationContext;)Lnet/minecraft/advancements/critereon/AbstractCriterionTriggerInstance; b
	createInstance (Lcom/google/gson/JsonObject;Lnet/minecraft/advancements/critereon/ContextAwarePredicate;Lnet/minecraft/advancements/critereon/DeserializationContext;)Lnet/minecraft/advancements/critereon/LightningStrikeTrigger$TriggerInstance; a
	getId ()Lnet/minecraft/resources/ResourceLocation; a
	trigger (Lnet/minecraft/server/level/ServerPlayer;Lnet/minecraft/world/entity/LightningBolt;Ljava/util/List;)V a
net/minecraft/advancements/critereon/LightningStrikeTrigger$TriggerInstance cg$a
	bystander b
	lightning a
	lighthingStrike (Lnet/minecraft/advancements/critereon/EntityPredicate;Lnet/minecraft/advancements/critereon/EntityPredicate;)Lnet/minecraft/advancements/critereon/LightningStrikeTrigger$TriggerInstance; a
	matches (Lnet/minecraft/world/level/storage/loot/LootContext;Ljava/util/List;)Z a
	serializeToJson (Lnet/minecraft/advancements/critereon/SerializationContext;)Lcom/google/gson/JsonObject; a
net/minecraft/advancements/critereon/LocationPredicate ch
	ANY a
	LOGGER b
	biome f
	block k
	dimension h
	fluid l
	light j
	smokey i
	structure g
	x c
	y d
	z e
	atYLocation (Lnet/minecraft/advancements/critereon/MinMaxBounds$Doubles;)Lnet/minecraft/advancements/critereon/LocationPredicate; a
	fromJson (Lcom/google/gson/JsonElement;)Lnet/minecraft/advancements/critereon/LocationPredicate; a
	inBiome (Lnet/minecraft/resources/ResourceKey;)Lnet/minecraft/advancements/critereon/LocationPredicate; a
	inDimension (Lnet/minecraft/resources/ResourceKey;)Lnet/minecraft/advancements/critereon/LocationPredicate; b
	inStructure (Lnet/minecraft/resources/ResourceKey;)Lnet/minecraft/advancements/critereon/LocationPredicate; c
	matches (Lnet/minecraft/server/level/ServerLevel;DDD)Z a
	serializeToJson ()Lcom/google/gson/JsonElement; a
net/minecraft/advancements/critereon/LocationPredicate$Builder ch$a
	biome d
	block i
	dimension f
	fluid j
	light h
	smokey g
	structure e
	x a
	y b
	z c
	build ()Lnet/minecraft/advancements/critereon/LocationPredicate; b
	location ()Lnet/minecraft/advancements/critereon/LocationPredicate$Builder; a
	setBiome (Lnet/minecraft/resources/ResourceKey;)Lnet/minecraft/advancements/critereon/LocationPredicate$Builder; a
	setBlock (Lnet/minecraft/advancements/critereon/BlockPredicate;)Lnet/minecraft/advancements/critereon/LocationPredicate$Builder; a
	setDimension (Lnet/minecraft/resources/ResourceKey;)Lnet/minecraft/advancements/critereon/LocationPredicate$Builder; c
	setFluid (Lnet/minecraft/advancements/critereon/FluidPredicate;)Lnet/minecraft/advancements/critereon/LocationPredicate$Builder; a
	setLight (Lnet/minecraft/advancements/critereon/LightPredicate;)Lnet/minecraft/advancements/critereon/LocationPredicate$Builder; a
	setSmokey (Ljava/lang/Boolean;)Lnet/minecraft/advancements/critereon/LocationPredicate$Builder; a
	setStructure (Lnet/minecraft/resources/ResourceKey;)Lnet/minecraft/advancements/critereon/LocationPredicate$Builder; b
	setX (Lnet/minecraft/advancements/critereon/MinMaxBounds$Doubles;)Lnet/minecraft/advancements/critereon/LocationPredicate$Builder; a
	setY (Lnet/minecraft/advancements/critereon/MinMaxBounds$Doubles;)Lnet/minecraft/advancements/critereon/LocationPredicate$Builder; b
	setZ (Lnet/minecraft/advancements/critereon/MinMaxBounds$Doubles;)Lnet/minecraft/advancements/critereon/LocationPredicate$Builder; c
net/minecraft/advancements/critereon/LootTableTrigger ci
	ID a
	createInstance (Lcom/google/gson/JsonObject;Lnet/minecraft/advancements/critereon/ContextAwarePredicate;Lnet/minecraft/advancements/critereon/DeserializationContext;)Lnet/minecraft/advancements/critereon/AbstractCriterionTriggerInstance; b
	createInstance (Lcom/google/gson/JsonObject;Lnet/minecraft/advancements/critereon/ContextAwarePredicate;Lnet/minecraft/advancements/critereon/DeserializationContext;)Lnet/minecraft/advancements/critereon/LootTableTrigger$TriggerInstance; a
	getId ()Lnet/minecraft/resources/ResourceLocation; a
	trigger (Lnet/minecraft/server/level/ServerPlayer;Lnet/minecraft/resources/ResourceLocation;)V a
net/minecraft/advancements/critereon/LootTableTrigger$TriggerInstance ci$a
	lootTable a
	lootTableUsed (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/advancements/critereon/LootTableTrigger$TriggerInstance; a
	matches (Lnet/minecraft/resources/ResourceLocation;)Z b
	serializeToJson (Lnet/minecraft/advancements/critereon/SerializationContext;)Lcom/google/gson/JsonObject; a
net/minecraft/advancements/critereon/MinMaxBounds cj
	ERROR_EMPTY a
	ERROR_SWAPPED b
	max d
	min c
	fromJson (Lcom/google/gson/JsonElement;Lnet/minecraft/advancements/critereon/MinMaxBounds;Ljava/util/function/BiFunction;Lnet/minecraft/advancements/critereon/MinMaxBounds$BoundsFactory;)Lnet/minecraft/advancements/critereon/MinMaxBounds; a
	fromReader (Lcom/mojang/brigadier/StringReader;Lnet/minecraft/advancements/critereon/MinMaxBounds$BoundsFromReaderFactory;Ljava/util/function/Function;Ljava/util/function/Supplier;Ljava/util/function/Function;)Lnet/minecraft/advancements/critereon/MinMaxBounds; a
	getMax ()Ljava/lang/Number; b
	getMin ()Ljava/lang/Number; a
	isAllowedInputChat (Lcom/mojang/brigadier/StringReader;)Z a
	isAny ()Z c
	optionallyFormat (Ljava/lang/Object;Ljava/util/function/Function;)Ljava/lang/Object; a
	readNumber (Lcom/mojang/brigadier/StringReader;Ljava/util/function/Function;Ljava/util/function/Supplier;)Ljava/lang/Number; a
	serializeToJson ()Lcom/google/gson/JsonElement; d
net/minecraft/advancements/critereon/MinMaxBounds$BoundsFactory cj$a
net/minecraft/advancements/critereon/MinMaxBounds$BoundsFromReaderFactory cj$b
net/minecraft/advancements/critereon/MinMaxBounds$Doubles cj$c
	ANY e
	maxSq g
	minSq f
	atLeast (D)Lnet/minecraft/advancements/critereon/MinMaxBounds$Doubles; b
	atMost (D)Lnet/minecraft/advancements/critereon/MinMaxBounds$Doubles; c
	between (DD)Lnet/minecraft/advancements/critereon/MinMaxBounds$Doubles; a
	create (Lcom/mojang/brigadier/StringReader;Ljava/lang/Double;Ljava/lang/Double;)Lnet/minecraft/advancements/critereon/MinMaxBounds$Doubles; a
	exactly (D)Lnet/minecraft/advancements/critereon/MinMaxBounds$Doubles; a
	fromJson (Lcom/google/gson/JsonElement;)Lnet/minecraft/advancements/critereon/MinMaxBounds$Doubles; a
	fromReader (Lcom/mojang/brigadier/StringReader;)Lnet/minecraft/advancements/critereon/MinMaxBounds$Doubles; a
	fromReader (Lcom/mojang/brigadier/StringReader;Ljava/util/function/Function;)Lnet/minecraft/advancements/critereon/MinMaxBounds$Doubles; a
	matches (D)Z d
	matchesSqr (D)Z e
	squareOpt (Ljava/lang/Double;)Ljava/lang/Double; a
net/minecraft/advancements/critereon/MinMaxBounds$Ints cj$d
	ANY e
	maxSq g
	minSq f
	atLeast (I)Lnet/minecraft/advancements/critereon/MinMaxBounds$Ints; b
	atMost (I)Lnet/minecraft/advancements/critereon/MinMaxBounds$Ints; c
	between (II)Lnet/minecraft/advancements/critereon/MinMaxBounds$Ints; a
	create (Lcom/mojang/brigadier/StringReader;Ljava/lang/Integer;Ljava/lang/Integer;)Lnet/minecraft/advancements/critereon/MinMaxBounds$Ints; a
	exactly (I)Lnet/minecraft/advancements/critereon/MinMaxBounds$Ints; a
	fromJson (Lcom/google/gson/JsonElement;)Lnet/minecraft/advancements/critereon/MinMaxBounds$Ints; a
	fromReader (Lcom/mojang/brigadier/StringReader;)Lnet/minecraft/advancements/critereon/MinMaxBounds$Ints; a
	fromReader (Lcom/mojang/brigadier/StringReader;Ljava/util/function/Function;)Lnet/minecraft/advancements/critereon/MinMaxBounds$Ints; a
	matches (I)Z d
	matchesSqr (J)Z a
	squareOpt (Ljava/lang/Integer;)Ljava/lang/Long; a
net/minecraft/advancements/critereon/MobEffectsPredicate ck
	ANY a
	effects b
	and (Lnet/minecraft/world/effect/MobEffect;)Lnet/minecraft/advancements/critereon/MobEffectsPredicate; a
	and (Lnet/minecraft/world/effect/MobEffect;Lnet/minecraft/advancements/critereon/MobEffectsPredicate$MobEffectInstancePredicate;)Lnet/minecraft/advancements/critereon/MobEffectsPredicate; a
	effects ()Lnet/minecraft/advancements/critereon/MobEffectsPredicate; a
	fromJson (Lcom/google/gson/JsonElement;)Lnet/minecraft/advancements/critereon/MobEffectsPredicate; a
	matches (Ljava/util/Map;)Z a
	matches (Lnet/minecraft/world/entity/Entity;)Z a
	matches (Lnet/minecraft/world/entity/LivingEntity;)Z a
	serializeToJson ()Lcom/google/gson/JsonElement; b
net/minecraft/advancements/critereon/MobEffectsPredicate$MobEffectInstancePredicate ck$a
	ambient c
	amplifier a
	duration b
	visible d
	fromJson (Lcom/google/gson/JsonObject;)Lnet/minecraft/advancements/critereon/MobEffectsPredicate$MobEffectInstancePredicate; a
	matches (Lnet/minecraft/world/effect/MobEffectInstance;)Z a
	serializeToJson ()Lcom/google/gson/JsonElement; a
net/minecraft/advancements/critereon/NbtPredicate cl
	ANY a
	tag b
	fromJson (Lcom/google/gson/JsonElement;)Lnet/minecraft/advancements/critereon/NbtPredicate; a
	getEntityTagToCompare (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/nbt/CompoundTag; b
	matches (Lnet/minecraft/nbt/Tag;)Z a
	matches (Lnet/minecraft/world/entity/Entity;)Z a
	matches (Lnet/minecraft/world/item/ItemStack;)Z a
	serializeToJson ()Lcom/google/gson/JsonElement; a
net/minecraft/advancements/critereon/PickedUpItemTrigger cm
	id a
	createInstance (Lcom/google/gson/JsonObject;Lnet/minecraft/advancements/critereon/ContextAwarePredicate;Lnet/minecraft/advancements/critereon/DeserializationContext;)Lnet/minecraft/advancements/critereon/AbstractCriterionTriggerInstance; b
	createInstance (Lcom/google/gson/JsonObject;Lnet/minecraft/advancements/critereon/ContextAwarePredicate;Lnet/minecraft/advancements/critereon/DeserializationContext;)Lnet/minecraft/advancements/critereon/PickedUpItemTrigger$TriggerInstance; a
	getId ()Lnet/minecraft/resources/ResourceLocation; a
	trigger (Lnet/minecraft/server/level/ServerPlayer;Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/entity/Entity;)V a
net/minecraft/advancements/critereon/PickedUpItemTrigger$TriggerInstance cm$a
	entity b
	item a
	matches (Lnet/minecraft/server/level/ServerPlayer;Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/storage/loot/LootContext;)Z a
	serializeToJson (Lnet/minecraft/advancements/critereon/SerializationContext;)Lcom/google/gson/JsonObject; a
	thrownItemPickedUpByEntity (Lnet/minecraft/advancements/critereon/ContextAwarePredicate;Lnet/minecraft/advancements/critereon/ItemPredicate;Lnet/minecraft/advancements/critereon/ContextAwarePredicate;)Lnet/minecraft/advancements/critereon/PickedUpItemTrigger$TriggerInstance; a
	thrownItemPickedUpByPlayer (Lnet/minecraft/advancements/critereon/ContextAwarePredicate;Lnet/minecraft/advancements/critereon/ItemPredicate;Lnet/minecraft/advancements/critereon/ContextAwarePredicate;)Lnet/minecraft/advancements/critereon/PickedUpItemTrigger$TriggerInstance; b
net/minecraft/advancements/critereon/PlayerHurtEntityTrigger cn
	ID a
	createInstance (Lcom/google/gson/JsonObject;Lnet/minecraft/advancements/critereon/ContextAwarePredicate;Lnet/minecraft/advancements/critereon/DeserializationContext;)Lnet/minecraft/advancements/critereon/AbstractCriterionTriggerInstance; b
	createInstance (Lcom/google/gson/JsonObject;Lnet/minecraft/advancements/critereon/ContextAwarePredicate;Lnet/minecraft/advancements/critereon/DeserializationContext;)Lnet/minecraft/advancements/critereon/PlayerHurtEntityTrigger$TriggerInstance; a
	getId ()Lnet/minecraft/resources/ResourceLocation; a
	trigger (Lnet/minecraft/server/level/ServerPlayer;Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/damagesource/DamageSource;FFZ)V a
net/minecraft/advancements/critereon/PlayerHurtEntityTrigger$TriggerInstance cn$a
	damage a
	entity b
	matches (Lnet/minecraft/server/level/ServerPlayer;Lnet/minecraft/world/level/storage/loot/LootContext;Lnet/minecraft/world/damagesource/DamageSource;FFZ)Z a
	playerHurtEntity ()Lnet/minecraft/advancements/critereon/PlayerHurtEntityTrigger$TriggerInstance; c
	playerHurtEntity (Lnet/minecraft/advancements/critereon/DamagePredicate$Builder;)Lnet/minecraft/advancements/critereon/PlayerHurtEntityTrigger$TriggerInstance; a
	playerHurtEntity (Lnet/minecraft/advancements/critereon/DamagePredicate$Builder;Lnet/minecraft/advancements/critereon/EntityPredicate;)Lnet/minecraft/advancements/critereon/PlayerHurtEntityTrigger$TriggerInstance; a
	playerHurtEntity (Lnet/minecraft/advancements/critereon/DamagePredicate;)Lnet/minecraft/advancements/critereon/PlayerHurtEntityTrigger$TriggerInstance; a
	playerHurtEntity (Lnet/minecraft/advancements/critereon/DamagePredicate;Lnet/minecraft/advancements/critereon/EntityPredicate;)Lnet/minecraft/advancements/critereon/PlayerHurtEntityTrigger$TriggerInstance; a
	playerHurtEntity (Lnet/minecraft/advancements/critereon/EntityPredicate;)Lnet/minecraft/advancements/critereon/PlayerHurtEntityTrigger$TriggerInstance; a
	serializeToJson (Lnet/minecraft/advancements/critereon/SerializationContext;)Lcom/google/gson/JsonObject; a
net/minecraft/advancements/critereon/PlayerInteractTrigger co
	ID a
	createInstance (Lcom/google/gson/JsonObject;Lnet/minecraft/advancements/critereon/ContextAwarePredicate;Lnet/minecraft/advancements/critereon/DeserializationContext;)Lnet/minecraft/advancements/critereon/AbstractCriterionTriggerInstance; b
	createInstance (Lcom/google/gson/JsonObject;Lnet/minecraft/advancements/critereon/ContextAwarePredicate;Lnet/minecraft/advancements/critereon/DeserializationContext;)Lnet/minecraft/advancements/critereon/PlayerInteractTrigger$TriggerInstance; a
	getId ()Lnet/minecraft/resources/ResourceLocation; a
	trigger (Lnet/minecraft/server/level/ServerPlayer;Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/entity/Entity;)V a
net/minecraft/advancements/critereon/PlayerInteractTrigger$TriggerInstance co$a
	entity b
	item a
	itemUsedOnEntity (Lnet/minecraft/advancements/critereon/ContextAwarePredicate;Lnet/minecraft/advancements/critereon/ItemPredicate$Builder;Lnet/minecraft/advancements/critereon/ContextAwarePredicate;)Lnet/minecraft/advancements/critereon/PlayerInteractTrigger$TriggerInstance; a
	itemUsedOnEntity (Lnet/minecraft/advancements/critereon/ItemPredicate$Builder;Lnet/minecraft/advancements/critereon/ContextAwarePredicate;)Lnet/minecraft/advancements/critereon/PlayerInteractTrigger$TriggerInstance; a
	matches (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/storage/loot/LootContext;)Z a
	serializeToJson (Lnet/minecraft/advancements/critereon/SerializationContext;)Lcom/google/gson/JsonObject; a
net/minecraft/advancements/critereon/PlayerPredicate cp
	LOOKING_AT_RANGE b
	advancements g
	gameType d
	level c
	lookingAt h
	recipes f
	stats e
	advancementPredicateFromJson (Lcom/google/gson/JsonElement;)Lnet/minecraft/advancements/critereon/PlayerPredicate$AdvancementPredicate; b
	fromJson (Lcom/google/gson/JsonObject;)Lnet/minecraft/advancements/critereon/PlayerPredicate; a
	getStat (Lnet/minecraft/stats/StatType;Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/stats/Stat; a
	getStatValueId (Lnet/minecraft/stats/Stat;)Lnet/minecraft/resources/ResourceLocation; a
	matches (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/phys/Vec3;)Z a
	serializeCustomData ()Lcom/google/gson/JsonObject; a
	type ()Lnet/minecraft/advancements/critereon/EntitySubPredicate$Type; c
net/minecraft/advancements/critereon/PlayerPredicate$AdvancementCriterionsPredicate cp$a
	criterions a
	test (Lnet/minecraft/advancements/AdvancementProgress;)Z a
	toJson ()Lcom/google/gson/JsonElement; a
net/minecraft/advancements/critereon/PlayerPredicate$AdvancementDonePredicate cp$b
	state a
	test (Lnet/minecraft/advancements/AdvancementProgress;)Z a
	toJson ()Lcom/google/gson/JsonElement; a
net/minecraft/advancements/critereon/PlayerPredicate$AdvancementPredicate cp$c
	toJson ()Lcom/google/gson/JsonElement; a
net/minecraft/advancements/critereon/PlayerPredicate$Builder cp$d
	advancements e
	gameType b
	level a
	lookingAt f
	recipes d
	stats c
	addRecipe (Lnet/minecraft/resources/ResourceLocation;Z)Lnet/minecraft/advancements/critereon/PlayerPredicate$Builder; a
	addStat (Lnet/minecraft/stats/Stat;Lnet/minecraft/advancements/critereon/MinMaxBounds$Ints;)Lnet/minecraft/advancements/critereon/PlayerPredicate$Builder; a
	build ()Lnet/minecraft/advancements/critereon/PlayerPredicate; b
	checkAdvancementCriterions (Lnet/minecraft/resources/ResourceLocation;Ljava/util/Map;)Lnet/minecraft/advancements/critereon/PlayerPredicate$Builder; a
	checkAdvancementDone (Lnet/minecraft/resources/ResourceLocation;Z)Lnet/minecraft/advancements/critereon/PlayerPredicate$Builder; b
	player ()Lnet/minecraft/advancements/critereon/PlayerPredicate$Builder; a
	setGameType (Lnet/minecraft/world/level/GameType;)Lnet/minecraft/advancements/critereon/PlayerPredicate$Builder; a
	setLevel (Lnet/minecraft/advancements/critereon/MinMaxBounds$Ints;)Lnet/minecraft/advancements/critereon/PlayerPredicate$Builder; a
	setLookingAt (Lnet/minecraft/advancements/critereon/EntityPredicate;)Lnet/minecraft/advancements/critereon/PlayerPredicate$Builder; a
net/minecraft/advancements/critereon/PlayerTrigger cq
	id a
	createInstance (Lcom/google/gson/JsonObject;Lnet/minecraft/advancements/critereon/ContextAwarePredicate;Lnet/minecraft/advancements/critereon/DeserializationContext;)Lnet/minecraft/advancements/critereon/AbstractCriterionTriggerInstance; b
	createInstance (Lcom/google/gson/JsonObject;Lnet/minecraft/advancements/critereon/ContextAwarePredicate;Lnet/minecraft/advancements/critereon/DeserializationContext;)Lnet/minecraft/advancements/critereon/PlayerTrigger$TriggerInstance; a
	getId ()Lnet/minecraft/resources/ResourceLocation; a
	trigger (Lnet/minecraft/server/level/ServerPlayer;)V a
net/minecraft/advancements/critereon/PlayerTrigger$TriggerInstance cq$a
	avoidVibration ()Lnet/minecraft/advancements/critereon/PlayerTrigger$TriggerInstance; e
	located (Lnet/minecraft/advancements/critereon/EntityPredicate;)Lnet/minecraft/advancements/critereon/PlayerTrigger$TriggerInstance; a
	located (Lnet/minecraft/advancements/critereon/LocationPredicate;)Lnet/minecraft/advancements/critereon/PlayerTrigger$TriggerInstance; a
	raidWon ()Lnet/minecraft/advancements/critereon/PlayerTrigger$TriggerInstance; d
	sleptInBed ()Lnet/minecraft/advancements/critereon/PlayerTrigger$TriggerInstance; c
	tick ()Lnet/minecraft/advancements/critereon/PlayerTrigger$TriggerInstance; f
	walkOnBlockWithEquipment (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/world/item/Item;)Lnet/minecraft/advancements/critereon/PlayerTrigger$TriggerInstance; a
net/minecraft/advancements/critereon/RecipeCraftedTrigger cr
	ID a
	createInstance (Lcom/google/gson/JsonObject;Lnet/minecraft/advancements/critereon/ContextAwarePredicate;Lnet/minecraft/advancements/critereon/DeserializationContext;)Lnet/minecraft/advancements/critereon/AbstractCriterionTriggerInstance; b
	createInstance (Lcom/google/gson/JsonObject;Lnet/minecraft/advancements/critereon/ContextAwarePredicate;Lnet/minecraft/advancements/critereon/DeserializationContext;)Lnet/minecraft/advancements/critereon/RecipeCraftedTrigger$TriggerInstance; a
	getId ()Lnet/minecraft/resources/ResourceLocation; a
	trigger (Lnet/minecraft/server/level/ServerPlayer;Lnet/minecraft/resources/ResourceLocation;Ljava/util/List;)V a
net/minecraft/advancements/critereon/RecipeCraftedTrigger$TriggerInstance cr$a
	predicates b
	recipeId a
	craftedItem (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/advancements/critereon/RecipeCraftedTrigger$TriggerInstance; a
	craftedItem (Lnet/minecraft/resources/ResourceLocation;Ljava/util/List;)Lnet/minecraft/advancements/critereon/RecipeCraftedTrigger$TriggerInstance; a
	matches (Lnet/minecraft/resources/ResourceLocation;Ljava/util/List;)Z b
	serializeToJson (Lnet/minecraft/advancements/critereon/SerializationContext;)Lcom/google/gson/JsonObject; a
net/minecraft/advancements/critereon/RecipeUnlockedTrigger cs
	ID a
	createInstance (Lcom/google/gson/JsonObject;Lnet/minecraft/advancements/critereon/ContextAwarePredicate;Lnet/minecraft/advancements/critereon/DeserializationContext;)Lnet/minecraft/advancements/critereon/AbstractCriterionTriggerInstance; b
	createInstance (Lcom/google/gson/JsonObject;Lnet/minecraft/advancements/critereon/ContextAwarePredicate;Lnet/minecraft/advancements/critereon/DeserializationContext;)Lnet/minecraft/advancements/critereon/RecipeUnlockedTrigger$TriggerInstance; a
	getId ()Lnet/minecraft/resources/ResourceLocation; a
	trigger (Lnet/minecraft/server/level/ServerPlayer;Lnet/minecraft/world/item/crafting/Recipe;)V a
	unlocked (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/advancements/critereon/RecipeUnlockedTrigger$TriggerInstance; a
net/minecraft/advancements/critereon/RecipeUnlockedTrigger$TriggerInstance cs$a
	recipe a
	matches (Lnet/minecraft/world/item/crafting/Recipe;)Z a
	serializeToJson (Lnet/minecraft/advancements/critereon/SerializationContext;)Lcom/google/gson/JsonObject; a
net/minecraft/advancements/critereon/SerializationContext ct
	INSTANCE a
	predicateGson b
	serializeConditions ([Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition;)Lcom/google/gson/JsonElement; a
net/minecraft/advancements/critereon/ShotCrossbowTrigger cu
	ID a
	createInstance (Lcom/google/gson/JsonObject;Lnet/minecraft/advancements/critereon/ContextAwarePredicate;Lnet/minecraft/advancements/critereon/DeserializationContext;)Lnet/minecraft/advancements/critereon/AbstractCriterionTriggerInstance; b
	createInstance (Lcom/google/gson/JsonObject;Lnet/minecraft/advancements/critereon/ContextAwarePredicate;Lnet/minecraft/advancements/critereon/DeserializationContext;)Lnet/minecraft/advancements/critereon/ShotCrossbowTrigger$TriggerInstance; a
	getId ()Lnet/minecraft/resources/ResourceLocation; a
	trigger (Lnet/minecraft/server/level/ServerPlayer;Lnet/minecraft/world/item/ItemStack;)V a
net/minecraft/advancements/critereon/ShotCrossbowTrigger$TriggerInstance cu$a
	item a
	matches (Lnet/minecraft/world/item/ItemStack;)Z a
	serializeToJson (Lnet/minecraft/advancements/critereon/SerializationContext;)Lcom/google/gson/JsonObject; a
	shotCrossbow (Lnet/minecraft/advancements/critereon/ItemPredicate;)Lnet/minecraft/advancements/critereon/ShotCrossbowTrigger$TriggerInstance; a
	shotCrossbow (Lnet/minecraft/world/level/ItemLike;)Lnet/minecraft/advancements/critereon/ShotCrossbowTrigger$TriggerInstance; a
net/minecraft/advancements/critereon/SimpleCriterionTrigger cv
	players a
	addPlayerListener (Lnet/minecraft/server/PlayerAdvancements;Lnet/minecraft/advancements/CriterionTrigger$Listener;)V a
	createInstance (Lcom/google/gson/JsonObject;Lnet/minecraft/advancements/critereon/ContextAwarePredicate;Lnet/minecraft/advancements/critereon/DeserializationContext;)Lnet/minecraft/advancements/critereon/AbstractCriterionTriggerInstance; b
	createInstance (Lcom/google/gson/JsonObject;Lnet/minecraft/advancements/critereon/DeserializationContext;)Lnet/minecraft/advancements/CriterionTriggerInstance; a
	createInstance (Lcom/google/gson/JsonObject;Lnet/minecraft/advancements/critereon/DeserializationContext;)Lnet/minecraft/advancements/critereon/AbstractCriterionTriggerInstance; b
	removePlayerListener (Lnet/minecraft/server/PlayerAdvancements;Lnet/minecraft/advancements/CriterionTrigger$Listener;)V b
	removePlayerListeners (Lnet/minecraft/server/PlayerAdvancements;)V a
	trigger (Lnet/minecraft/server/level/ServerPlayer;Ljava/util/function/Predicate;)V a
net/minecraft/advancements/critereon/SlideDownBlockTrigger cw
	ID a
	createInstance (Lcom/google/gson/JsonObject;Lnet/minecraft/advancements/critereon/ContextAwarePredicate;Lnet/minecraft/advancements/critereon/DeserializationContext;)Lnet/minecraft/advancements/critereon/AbstractCriterionTriggerInstance; b
	createInstance (Lcom/google/gson/JsonObject;Lnet/minecraft/advancements/critereon/ContextAwarePredicate;Lnet/minecraft/advancements/critereon/DeserializationContext;)Lnet/minecraft/advancements/critereon/SlideDownBlockTrigger$TriggerInstance; a
	deserializeBlock (Lcom/google/gson/JsonObject;)Lnet/minecraft/world/level/block/Block; a
	getId ()Lnet/minecraft/resources/ResourceLocation; a
	trigger (Lnet/minecraft/server/level/ServerPlayer;Lnet/minecraft/world/level/block/state/BlockState;)V a
net/minecraft/advancements/critereon/SlideDownBlockTrigger$TriggerInstance cw$a
	block a
	state b
	matches (Lnet/minecraft/world/level/block/state/BlockState;)Z a
	serializeToJson (Lnet/minecraft/advancements/critereon/SerializationContext;)Lcom/google/gson/JsonObject; a
	slidesDownBlock (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/advancements/critereon/SlideDownBlockTrigger$TriggerInstance; a
net/minecraft/advancements/critereon/SlimePredicate cx
	size b
	fromJson (Lcom/google/gson/JsonObject;)Lnet/minecraft/advancements/critereon/SlimePredicate; a
	matches (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/phys/Vec3;)Z a
	serializeCustomData ()Lcom/google/gson/JsonObject; a
	sized (Lnet/minecraft/advancements/critereon/MinMaxBounds$Ints;)Lnet/minecraft/advancements/critereon/SlimePredicate; a
	type ()Lnet/minecraft/advancements/critereon/EntitySubPredicate$Type; c
net/minecraft/advancements/critereon/StartRidingTrigger cy
	ID a
	createInstance (Lcom/google/gson/JsonObject;Lnet/minecraft/advancements/critereon/ContextAwarePredicate;Lnet/minecraft/advancements/critereon/DeserializationContext;)Lnet/minecraft/advancements/critereon/AbstractCriterionTriggerInstance; b
	createInstance (Lcom/google/gson/JsonObject;Lnet/minecraft/advancements/critereon/ContextAwarePredicate;Lnet/minecraft/advancements/critereon/DeserializationContext;)Lnet/minecraft/advancements/critereon/StartRidingTrigger$TriggerInstance; a
	getId ()Lnet/minecraft/resources/ResourceLocation; a
	trigger (Lnet/minecraft/server/level/ServerPlayer;)V a
net/minecraft/advancements/critereon/StartRidingTrigger$TriggerInstance cy$a
	playerStartsRiding (Lnet/minecraft/advancements/critereon/EntityPredicate$Builder;)Lnet/minecraft/advancements/critereon/StartRidingTrigger$TriggerInstance; a
net/minecraft/advancements/critereon/StatePropertiesPredicate cz
	ANY a
	properties b
	checkState (Lnet/minecraft/world/level/block/state/StateDefinition;Ljava/util/function/Consumer;)V a
	fromJson (Lcom/google/gson/JsonElement;)Lnet/minecraft/advancements/critereon/StatePropertiesPredicate; a
	fromJson (Ljava/lang/String;Lcom/google/gson/JsonElement;)Lnet/minecraft/advancements/critereon/StatePropertiesPredicate$PropertyMatcher; a
	getStringOrNull (Lcom/google/gson/JsonElement;)Ljava/lang/String; b
	matches (Lnet/minecraft/world/level/block/state/BlockState;)Z a
	matches (Lnet/minecraft/world/level/block/state/StateDefinition;Lnet/minecraft/world/level/block/state/StateHolder;)Z a
	matches (Lnet/minecraft/world/level/material/FluidState;)Z a
	serializeToJson ()Lcom/google/gson/JsonElement; a
net/minecraft/advancements/critereon/StatePropertiesPredicate$Builder cz$a
	matchers a
	build ()Lnet/minecraft/advancements/critereon/StatePropertiesPredicate; b
	hasProperty (Lnet/minecraft/world/level/block/state/properties/Property;I)Lnet/minecraft/advancements/critereon/StatePropertiesPredicate$Builder; a
	hasProperty (Lnet/minecraft/world/level/block/state/properties/Property;Ljava/lang/Comparable;)Lnet/minecraft/advancements/critereon/StatePropertiesPredicate$Builder; a
	hasProperty (Lnet/minecraft/world/level/block/state/properties/Property;Ljava/lang/String;)Lnet/minecraft/advancements/critereon/StatePropertiesPredicate$Builder; a
	hasProperty (Lnet/minecraft/world/level/block/state/properties/Property;Z)Lnet/minecraft/advancements/critereon/StatePropertiesPredicate$Builder; a
	properties ()Lnet/minecraft/advancements/critereon/StatePropertiesPredicate$Builder; a
net/minecraft/advancements/critereon/StatePropertiesPredicate$ExactPropertyMatcher cz$b
	value a
	match (Lnet/minecraft/world/level/block/state/StateHolder;Lnet/minecraft/world/level/block/state/properties/Property;)Z a
	toJson ()Lcom/google/gson/JsonElement; a
net/minecraft/advancements/critereon/StatePropertiesPredicate$PropertyMatcher cz$c
	name a
	checkState (Lnet/minecraft/world/level/block/state/StateDefinition;Ljava/util/function/Consumer;)V a
	getName ()Ljava/lang/String; b
	match (Lnet/minecraft/world/level/block/state/StateDefinition;Lnet/minecraft/world/level/block/state/StateHolder;)Z a
	match (Lnet/minecraft/world/level/block/state/StateHolder;Lnet/minecraft/world/level/block/state/properties/Property;)Z a
	toJson ()Lcom/google/gson/JsonElement; a
net/minecraft/advancements/critereon/StatePropertiesPredicate$RangedPropertyMatcher cz$d
	maxValue b
	minValue a
	match (Lnet/minecraft/world/level/block/state/StateHolder;Lnet/minecraft/world/level/block/state/properties/Property;)Z a
	toJson ()Lcom/google/gson/JsonElement; a
net/minecraft/advancements/critereon/SummonedEntityTrigger da
	ID a
	createInstance (Lcom/google/gson/JsonObject;Lnet/minecraft/advancements/critereon/ContextAwarePredicate;Lnet/minecraft/advancements/critereon/DeserializationContext;)Lnet/minecraft/advancements/critereon/AbstractCriterionTriggerInstance; b
	createInstance (Lcom/google/gson/JsonObject;Lnet/minecraft/advancements/critereon/ContextAwarePredicate;Lnet/minecraft/advancements/critereon/DeserializationContext;)Lnet/minecraft/advancements/critereon/SummonedEntityTrigger$TriggerInstance; a
	getId ()Lnet/minecraft/resources/ResourceLocation; a
	trigger (Lnet/minecraft/server/level/ServerPlayer;Lnet/minecraft/world/entity/Entity;)V a
net/minecraft/advancements/critereon/SummonedEntityTrigger$TriggerInstance da$a
	entity a
	matches (Lnet/minecraft/world/level/storage/loot/LootContext;)Z a
	serializeToJson (Lnet/minecraft/advancements/critereon/SerializationContext;)Lcom/google/gson/JsonObject; a
	summonedEntity (Lnet/minecraft/advancements/critereon/EntityPredicate$Builder;)Lnet/minecraft/advancements/critereon/SummonedEntityTrigger$TriggerInstance; a
net/minecraft/advancements/critereon/TagPredicate db
	expected b
	tag a
	fromJson (Lcom/google/gson/JsonElement;Lnet/minecraft/resources/ResourceKey;)Lnet/minecraft/advancements/critereon/TagPredicate; a
	is (Lnet/minecraft/tags/TagKey;)Lnet/minecraft/advancements/critereon/TagPredicate; a
	isNot (Lnet/minecraft/tags/TagKey;)Lnet/minecraft/advancements/critereon/TagPredicate; b
	matches (Lnet/minecraft/core/Holder;)Z a
	serializeToJson ()Lcom/google/gson/JsonElement; a
net/minecraft/advancements/critereon/TameAnimalTrigger dc
	ID a
	createInstance (Lcom/google/gson/JsonObject;Lnet/minecraft/advancements/critereon/ContextAwarePredicate;Lnet/minecraft/advancements/critereon/DeserializationContext;)Lnet/minecraft/advancements/critereon/AbstractCriterionTriggerInstance; b
	createInstance (Lcom/google/gson/JsonObject;Lnet/minecraft/advancements/critereon/ContextAwarePredicate;Lnet/minecraft/advancements/critereon/DeserializationContext;)Lnet/minecraft/advancements/critereon/TameAnimalTrigger$TriggerInstance; a
	getId ()Lnet/minecraft/resources/ResourceLocation; a
	trigger (Lnet/minecraft/server/level/ServerPlayer;Lnet/minecraft/world/entity/animal/Animal;)V a
net/minecraft/advancements/critereon/TameAnimalTrigger$TriggerInstance dc$a
	entity a
	matches (Lnet/minecraft/world/level/storage/loot/LootContext;)Z a
	serializeToJson (Lnet/minecraft/advancements/critereon/SerializationContext;)Lcom/google/gson/JsonObject; a
	tamedAnimal ()Lnet/minecraft/advancements/critereon/TameAnimalTrigger$TriggerInstance; c
	tamedAnimal (Lnet/minecraft/advancements/critereon/EntityPredicate;)Lnet/minecraft/advancements/critereon/TameAnimalTrigger$TriggerInstance; a
net/minecraft/advancements/critereon/TargetBlockTrigger dd
	ID a
	createInstance (Lcom/google/gson/JsonObject;Lnet/minecraft/advancements/critereon/ContextAwarePredicate;Lnet/minecraft/advancements/critereon/DeserializationContext;)Lnet/minecraft/advancements/critereon/AbstractCriterionTriggerInstance; b
	createInstance (Lcom/google/gson/JsonObject;Lnet/minecraft/advancements/critereon/ContextAwarePredicate;Lnet/minecraft/advancements/critereon/DeserializationContext;)Lnet/minecraft/advancements/critereon/TargetBlockTrigger$TriggerInstance; a
	getId ()Lnet/minecraft/resources/ResourceLocation; a
	trigger (Lnet/minecraft/server/level/ServerPlayer;Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/phys/Vec3;I)V a
net/minecraft/advancements/critereon/TargetBlockTrigger$TriggerInstance dd$a
	projectile b
	signalStrength a
	matches (Lnet/minecraft/world/level/storage/loot/LootContext;Lnet/minecraft/world/phys/Vec3;I)Z a
	serializeToJson (Lnet/minecraft/advancements/critereon/SerializationContext;)Lcom/google/gson/JsonObject; a
	targetHit (Lnet/minecraft/advancements/critereon/MinMaxBounds$Ints;Lnet/minecraft/advancements/critereon/ContextAwarePredicate;)Lnet/minecraft/advancements/critereon/TargetBlockTrigger$TriggerInstance; a
net/minecraft/advancements/critereon/TradeTrigger de
	ID a
	createInstance (Lcom/google/gson/JsonObject;Lnet/minecraft/advancements/critereon/ContextAwarePredicate;Lnet/minecraft/advancements/critereon/DeserializationContext;)Lnet/minecraft/advancements/critereon/AbstractCriterionTriggerInstance; b
	createInstance (Lcom/google/gson/JsonObject;Lnet/minecraft/advancements/critereon/ContextAwarePredicate;Lnet/minecraft/advancements/critereon/DeserializationContext;)Lnet/minecraft/advancements/critereon/TradeTrigger$TriggerInstance; a
	getId ()Lnet/minecraft/resources/ResourceLocation; a
	trigger (Lnet/minecraft/server/level/ServerPlayer;Lnet/minecraft/world/entity/npc/AbstractVillager;Lnet/minecraft/world/item/ItemStack;)V a
net/minecraft/advancements/critereon/TradeTrigger$TriggerInstance de$a
	item b
	villager a
	matches (Lnet/minecraft/world/level/storage/loot/LootContext;Lnet/minecraft/world/item/ItemStack;)Z a
	serializeToJson (Lnet/minecraft/advancements/critereon/SerializationContext;)Lcom/google/gson/JsonObject; a
	tradedWithVillager ()Lnet/minecraft/advancements/critereon/TradeTrigger$TriggerInstance; c
	tradedWithVillager (Lnet/minecraft/advancements/critereon/EntityPredicate$Builder;)Lnet/minecraft/advancements/critereon/TradeTrigger$TriggerInstance; a
net/minecraft/advancements/critereon/UsedEnderEyeTrigger df
	ID a
	createInstance (Lcom/google/gson/JsonObject;Lnet/minecraft/advancements/critereon/ContextAwarePredicate;Lnet/minecraft/advancements/critereon/DeserializationContext;)Lnet/minecraft/advancements/critereon/AbstractCriterionTriggerInstance; b
	createInstance (Lcom/google/gson/JsonObject;Lnet/minecraft/advancements/critereon/ContextAwarePredicate;Lnet/minecraft/advancements/critereon/DeserializationContext;)Lnet/minecraft/advancements/critereon/UsedEnderEyeTrigger$TriggerInstance; a
	getId ()Lnet/minecraft/resources/ResourceLocation; a
	trigger (Lnet/minecraft/server/level/ServerPlayer;Lnet/minecraft/core/BlockPos;)V a
net/minecraft/advancements/critereon/UsedEnderEyeTrigger$TriggerInstance df$a
	level a
	matches (D)Z a
net/minecraft/advancements/critereon/UsedTotemTrigger dg
	ID a
	createInstance (Lcom/google/gson/JsonObject;Lnet/minecraft/advancements/critereon/ContextAwarePredicate;Lnet/minecraft/advancements/critereon/DeserializationContext;)Lnet/minecraft/advancements/critereon/AbstractCriterionTriggerInstance; b
	createInstance (Lcom/google/gson/JsonObject;Lnet/minecraft/advancements/critereon/ContextAwarePredicate;Lnet/minecraft/advancements/critereon/DeserializationContext;)Lnet/minecraft/advancements/critereon/UsedTotemTrigger$TriggerInstance; a
	getId ()Lnet/minecraft/resources/ResourceLocation; a
	trigger (Lnet/minecraft/server/level/ServerPlayer;Lnet/minecraft/world/item/ItemStack;)V a
net/minecraft/advancements/critereon/UsedTotemTrigger$TriggerInstance dg$a
	item a
	matches (Lnet/minecraft/world/item/ItemStack;)Z a
	serializeToJson (Lnet/minecraft/advancements/critereon/SerializationContext;)Lcom/google/gson/JsonObject; a
	usedTotem (Lnet/minecraft/advancements/critereon/ItemPredicate;)Lnet/minecraft/advancements/critereon/UsedTotemTrigger$TriggerInstance; a
	usedTotem (Lnet/minecraft/world/level/ItemLike;)Lnet/minecraft/advancements/critereon/UsedTotemTrigger$TriggerInstance; a
net/minecraft/advancements/critereon/UsingItemTrigger dh
	ID a
	createInstance (Lcom/google/gson/JsonObject;Lnet/minecraft/advancements/critereon/ContextAwarePredicate;Lnet/minecraft/advancements/critereon/DeserializationContext;)Lnet/minecraft/advancements/critereon/AbstractCriterionTriggerInstance; b
	createInstance (Lcom/google/gson/JsonObject;Lnet/minecraft/advancements/critereon/ContextAwarePredicate;Lnet/minecraft/advancements/critereon/DeserializationContext;)Lnet/minecraft/advancements/critereon/UsingItemTrigger$TriggerInstance; a
	getId ()Lnet/minecraft/resources/ResourceLocation; a
	trigger (Lnet/minecraft/server/level/ServerPlayer;Lnet/minecraft/world/item/ItemStack;)V a
net/minecraft/advancements/critereon/UsingItemTrigger$TriggerInstance dh$a
	item a
	lookingAt (Lnet/minecraft/advancements/critereon/EntityPredicate$Builder;Lnet/minecraft/advancements/critereon/ItemPredicate$Builder;)Lnet/minecraft/advancements/critereon/UsingItemTrigger$TriggerInstance; a
	matches (Lnet/minecraft/world/item/ItemStack;)Z a
	serializeToJson (Lnet/minecraft/advancements/critereon/SerializationContext;)Lcom/google/gson/JsonObject; a
net/minecraft/advancements/critereon/WrappedMinMaxBounds di
	ANY a
	ERROR_INTS_ONLY b
	max d
	min c
	atLeast (F)Lnet/minecraft/advancements/critereon/WrappedMinMaxBounds; b
	atMost (F)Lnet/minecraft/advancements/critereon/WrappedMinMaxBounds; c
	between (FF)Lnet/minecraft/advancements/critereon/WrappedMinMaxBounds; a
	exactly (F)Lnet/minecraft/advancements/critereon/WrappedMinMaxBounds; a
	fromJson (Lcom/google/gson/JsonElement;)Lnet/minecraft/advancements/critereon/WrappedMinMaxBounds; a
	fromReader (Lcom/mojang/brigadier/StringReader;Z)Lnet/minecraft/advancements/critereon/WrappedMinMaxBounds; a
	fromReader (Lcom/mojang/brigadier/StringReader;ZLjava/util/function/Function;)Lnet/minecraft/advancements/critereon/WrappedMinMaxBounds; a
	getMax ()Ljava/lang/Float; b
	getMin ()Ljava/lang/Float; a
	isAllowedNumber (Lcom/mojang/brigadier/StringReader;Z)Z c
	matches (F)Z d
	matchesSqr (D)Z a
	optionallyFormat (Ljava/lang/Float;Ljava/util/function/Function;)Ljava/lang/Float; a
	readNumber (Lcom/mojang/brigadier/StringReader;Z)Ljava/lang/Float; b
	serializeToJson ()Lcom/google/gson/JsonElement; c
net/minecraft/client/AttackIndicatorStatus emy
	$VALUES g
	BY_ID d
	CROSSHAIR b
	HOTBAR c
	OFF a
	id e
	key f
	$values ()[Lnet/minecraft/client/AttackIndicatorStatus; d
	byId (I)Lnet/minecraft/client/AttackIndicatorStatus; a
	getId ()I a
	getKey ()Ljava/lang/String; b
net/minecraft/client/Camera emz
	FOG_DISTANCE_SCALE a
	blockPosition f
	detached m
	entity d
	eyeHeight n
	eyeHeightOld o
	forwards g
	initialized b
	left i
	level c
	position e
	rotation l
	up h
	xRot j
	yRot k
	getBlockPosition ()Lnet/minecraft/core/BlockPos; c
	getEntity ()Lnet/minecraft/world/entity/Entity; g
	getFluidInCamera ()Lnet/minecraft/world/level/material/FogType; k
	getLeftVector ()Lorg/joml/Vector3f; n
	getLookVector ()Lorg/joml/Vector3f; l
	getMaxZoom (D)D a
	getNearPlane ()Lnet/minecraft/client/Camera$NearPlane; j
	getPosition ()Lnet/minecraft/world/phys/Vec3; b
	getUpVector ()Lorg/joml/Vector3f; m
	getXRot ()F d
	getYRot ()F e
	isDetached ()Z i
	isInitialized ()Z h
	move (DDD)V a
	reset ()V o
	rotation ()Lorg/joml/Quaternionf; f
	setPosition (DDD)V b
	setPosition (Lnet/minecraft/world/phys/Vec3;)V a
	setRotation (FF)V a
	setup (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/world/entity/Entity;ZZF)V a
	tick ()V a
net/minecraft/client/Camera$NearPlane emz$a
	forward a
	left b
	up c
	getBottomLeft ()Lnet/minecraft/world/phys/Vec3; c
	getBottomRight ()Lnet/minecraft/world/phys/Vec3; d
	getPointOnPlane (FF)Lnet/minecraft/world/phys/Vec3; a
	getTopLeft ()Lnet/minecraft/world/phys/Vec3; a
	getTopRight ()Lnet/minecraft/world/phys/Vec3; b
net/minecraft/client/CameraType ena
	$VALUES g
	FIRST_PERSON a
	THIRD_PERSON_BACK b
	THIRD_PERSON_FRONT c
	VALUES d
	firstPerson e
	mirrored f
	$values ()[Lnet/minecraft/client/CameraType; d
	cycle ()Lnet/minecraft/client/CameraType; c
	isFirstPerson ()Z a
	isMirrored ()Z b
net/minecraft/client/ClientRecipeBook enb
	LOGGER c
	allCollections e
	collectionsByTab d
	categorizeAndGroupRecipes (Ljava/lang/Iterable;)Ljava/util/Map; a
	getCategory (Lnet/minecraft/world/item/crafting/Recipe;)Lnet/minecraft/client/RecipeBookCategories; g
	getCollection (Lnet/minecraft/client/RecipeBookCategories;)Ljava/util/List; a
	getCollections ()Ljava/util/List; b
	setupCollections (Ljava/lang/Iterable;Lnet/minecraft/core/RegistryAccess;)V a
net/minecraft/client/CloudStatus enc
	$VALUES f
	FANCY c
	FAST b
	OFF a
	id d
	key e
	$values ()[Lnet/minecraft/client/CloudStatus; d
	getId ()I a
	getKey ()Ljava/lang/String; b
net/minecraft/client/ComponentCollector end
	parts a
	append (Lnet/minecraft/network/chat/FormattedText;)V a
	getResult ()Lnet/minecraft/network/chat/FormattedText; a
	getResultOrEmpty ()Lnet/minecraft/network/chat/FormattedText; b
	reset ()V c
net/minecraft/client/DebugQueryHandler ene
	callback c
	connection a
	transactionId b
	handleResponse (ILnet/minecraft/nbt/CompoundTag;)Z a
	queryBlockEntityTag (Lnet/minecraft/core/BlockPos;Ljava/util/function/Consumer;)V a
	queryEntityTag (ILjava/util/function/Consumer;)V a
	startTransaction (Ljava/util/function/Consumer;)I a
net/minecraft/client/GameNarrator enf
	LOGGER b
	NO_TITLE a
	minecraft c
	narrator d
	checkStatus (Z)V a
	clear ()V b
	destroy ()V c
	getStatus ()Lnet/minecraft/client/NarratorStatus; d
	isActive ()Z a
	logNarratedMessage (Ljava/lang/String;)V b
	say (Lnet/minecraft/network/chat/Component;)V b
	sayChat (Lnet/minecraft/network/chat/Component;)V a
	sayNow (Ljava/lang/String;)V a
	sayNow (Lnet/minecraft/network/chat/Component;)V c
	updateNarratorStatus (Lnet/minecraft/client/NarratorStatus;)V a
net/minecraft/client/GameNarrator$NarratorInitException enf$a
net/minecraft/client/GraphicsStatus eng
	$VALUES g
	BY_ID d
	FABULOUS c
	FANCY b
	FAST a
	id e
	key f
	$values ()[Lnet/minecraft/client/GraphicsStatus; d
	byId (I)Lnet/minecraft/client/GraphicsStatus; a
	getId ()I a
	getKey ()Ljava/lang/String; b
net/minecraft/client/GuiMessage enh
	addedTime a
	content b
	signature c
	tag d
	addedTime ()I a
	content ()Lnet/minecraft/network/chat/Component; b
	signature ()Lnet/minecraft/network/chat/MessageSignature; c
	tag ()Lnet/minecraft/client/GuiMessageTag; d
net/minecraft/client/GuiMessage$Line enh$a
	addedTime a
	content b
	endOfEntry d
	tag c
	addedTime ()I a
	content ()Lnet/minecraft/util/FormattedCharSequence; b
	endOfEntry ()Z d
	tag ()Lnet/minecraft/client/GuiMessageTag; c
net/minecraft/client/GuiMessageTag eni
	CHAT_MODIFIED_INDICATOR_COLOR j
	CHAT_MODIFIED_TEXT h
	CHAT_NOT_SECURE m
	CHAT_NOT_SECURE_INDICATOR_COLOR i
	CHAT_NOT_SECURE_TEXT g
	SYSTEM k
	SYSTEM_SINGLE_PLAYER l
	SYSTEM_TEXT e
	SYSTEM_TEXT_SINGLE_PLAYER f
	TEXTURE_LOCATION n
	icon b
	indicatorColor a
	logTag d
	text c
	chatModified (Ljava/lang/String;)Lnet/minecraft/client/GuiMessageTag; a
	chatNotSecure ()Lnet/minecraft/client/GuiMessageTag; c
	icon ()Lnet/minecraft/client/GuiMessageTag$Icon; e
	indicatorColor ()I d
	logTag ()Ljava/lang/String; g
	system ()Lnet/minecraft/client/GuiMessageTag; a
	systemSinglePlayer ()Lnet/minecraft/client/GuiMessageTag; b
	text ()Lnet/minecraft/network/chat/Component; f
net/minecraft/client/GuiMessageTag$Icon eni$a
	$VALUES f
	CHAT_MODIFIED a
	height e
	u b
	v c
	width d
	$values ()[Lnet/minecraft/client/GuiMessageTag$Icon; a
	draw (Lnet/minecraft/client/gui/GuiGraphics;II)V a
net/minecraft/client/HotbarManager enj
	LOGGER b
	NUM_HOTBAR_GROUPS a
	fixerUpper d
	hotbars e
	loaded f
	optionsFile c
	get (I)Lnet/minecraft/client/player/inventory/Hotbar; a
	load ()V b
	save ()V a
net/minecraft/client/InputType enk
	$VALUES e
	KEYBOARD_ARROW c
	KEYBOARD_TAB d
	MOUSE b
	NONE a
	$values ()[Lnet/minecraft/client/InputType; c
	isKeyboard ()Z b
	isMouse ()Z a
net/minecraft/client/KeyMapping enl
	ALL h
	CATEGORIES j
	CATEGORY_CREATIVE g
	CATEGORY_GAMEPLAY d
	CATEGORY_INTERFACE f
	CATEGORY_INVENTORY e
	CATEGORY_MISC b
	CATEGORY_MOVEMENT a
	CATEGORY_MULTIPLAYER c
	CATEGORY_SORT_ORDER k
	MAP i
	category n
	clickCount q
	defaultKey m
	isDown p
	key o
	name l
	click (Lcom/mojang/blaze3d/platform/InputConstants$Key;)V a
	compareTo (Lnet/minecraft/client/KeyMapping;)I a
	consumeClick ()Z g
	createNameSupplier (Ljava/lang/String;)Ljava/util/function/Supplier; a
	getCategory ()Ljava/lang/String; f
	getDefaultKey ()Lcom/mojang/blaze3d/platform/InputConstants$Key; i
	getName ()Ljava/lang/String; h
	getTranslatedKeyMessage ()Lnet/minecraft/network/chat/Component; k
	isDefault ()Z l
	isDown ()Z e
	isUnbound ()Z j
	matches (II)Z a
	matchesMouse (I)Z a
	release ()V n
	releaseAll ()V b
	resetMapping ()V d
	resetToggleKeys ()V c
	same (Lnet/minecraft/client/KeyMapping;)Z b
	saveString ()Ljava/lang/String; m
	set (Lcom/mojang/blaze3d/platform/InputConstants$Key;Z)V a
	setAll ()V a
	setDown (Z)V a
	setKey (Lcom/mojang/blaze3d/platform/InputConstants$Key;)V b
net/minecraft/client/KeyboardHandler enm
	DEBUG_CRASH_TIME a
	clipboardManager c
	debugCrashKeyReportedCount f
	debugCrashKeyReportedTime e
	debugCrashKeyTime d
	handledDebugKey g
	minecraft b
	charTyped (JII)V a
	copyCreateBlockCommand (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/BlockPos;Lnet/minecraft/nbt/CompoundTag;)V a
	copyCreateEntityCommand (Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/world/phys/Vec3;Lnet/minecraft/nbt/CompoundTag;)V a
	copyRecreateCommand (ZZ)V a
	debugComponent (Lnet/minecraft/ChatFormatting;Lnet/minecraft/network/chat/Component;)V a
	debugFeedback (Ljava/lang/String;[Ljava/lang/Object;)V c
	debugFeedbackComponent (Lnet/minecraft/network/chat/Component;)V a
	debugFeedbackTranslated (Ljava/lang/String;[Ljava/lang/Object;)V a
	debugWarningTranslated (Ljava/lang/String;[Ljava/lang/Object;)V b
	getClipboard ()Ljava/lang/String; a
	handleChunkDebugKeys (I)Z a
	handleDebugKeys (I)Z b
	keyPress (JIIII)V a
	setClipboard (Ljava/lang/String;)V a
	setup (J)V a
	tick ()V b
net/minecraft/client/Minecraft enn
	ALT_FONT d
	DEFAULT_FONT b
	LOGGER G
	MAX_TICKS_PER_UPDATE H
	ON_OSX a
	REGIONAL_COMPLIANCIES I
	RESOURCE_RELOAD_INITIAL_TASK J
	SOCIAL_INTERACTIONS_NOT_AVAILABLE K
	UNIFORM_FONT c
	UPDATE_DRIVERS_ADVICE e
	allowsChat ah
	allowsMultiplayer ag
	authenticationService aw
	blockColors an
	blockEntityRenderDispatcher aI
	blockRenderer aB
	cameraEntity u
	chatListener bs
	chunkPath C
	chunkVisibility D
	connectedToRealms aX
	crosshairPickEntity v
	currentFrameProfile bp
	debugPath bu
	debugRenderer k
	delayedCrash ba
	demo af
	downloadedPackSource ak
	entityModels aH
	entityRenderDispatcher T
	fixerUpper O
	font h
	fontFilterFishy i
	fontManager as
	fps bb
	fpsPieProfiler bj
	fpsPieRenderTicks bi
	fpsPieResults bk
	fpsString A
	frameTimeNs bc
	frameTimer q
	frames aV
	gameDirectory p
	gameMode r
	gameRenderer j
	gameThread aY
	gpuUtilization bo
	gpuWarnlistManager au
	gui l
	hitResult w
	hotbarManager Y
	instance F
	is64bit ae
	isLocalServer aP
	itemColors ao
	itemRenderer U
	keyboardHandler o
	languageManager am
	lastInputType Z
	lastNanoTime aT
	lastTime aU
	launchedVersion aa
	level s
	levelRenderer f
	levelSource ad
	mainRenderTarget ap
	metricsRecorder bl
	minecraftSessionService ax
	missTime x
	mobEffectTextures aD
	modelManager aA
	mouseHandler n
	musicManager ar
	narrator br
	noRender y
	options m
	overlay aW
	paintingTextures aC
	particleEngine g
	pause aR
	pausePartialTick aS
	pendingConnection aO
	pendingReload bf
	player t
	playerSocialManager aG
	profileKeyPairManager aK
	profileProperties M
	profiler bh
	progressListener X
	progressTasks be
	proxy ac
	quickPlayLog aM
	realms32BitWarningStatus bq
	realmsDataFetcher aL
	regionalCompliancies av
	reloadStateTracker bm
	renderBuffers S
	reportingContext bt
	resourceManager ai
	resourcePackDirectory L
	resourcePackRepository al
	rightClickDelay aQ
	running aZ
	savedCpuDuration bn
	screen z
	searchRegistry V
	singleplayerServer aN
	skinManager az
	smartCull E
	socialInteractionsToast bg
	soundManager aq
	splashManager at
	telemetryManager aJ
	textureManager N
	timer R
	toast aE
	tutorial aF
	user W
	userApiService ay
	vanillaPackResources aj
	versionType ab
	virtualScreen P
	window Q
	windowActive bd
	wireframe B
	abortResourcePackRecovery ()V bb
	addCustomNbtData (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/block/entity/BlockEntity;)V a
	addResourcePackLoadFailToast (Lnet/minecraft/network/chat/Component;)V a
	allowsMultiplayer ()Z C
	allowsRealms ()Z D
	allowsTelemetry ()Z B
	archiveProfilingReport (Lnet/minecraft/SystemReport;Ljava/util/List;)Ljava/nio/file/Path; a
	checkIs64Bit ()Z bd
	checkModStatus ()Lnet/minecraft/util/ModCheck; d
	clearLevel ()V y
	clearLevel (Lnet/minecraft/client/gui/screens/Screen;)V b
	clearResourcePacksOnError (Ljava/lang/Throwable;Lnet/minecraft/network/chat/Component;)V a
	constructProfiler (ZLnet/minecraft/util/profiling/SingleTickProfiler;)Lnet/minecraft/util/profiling/ProfilerFiller; a
	continueAttack (Z)V g
	countryEqualsISO3 (Ljava/lang/Object;)Z b
	crash (Lnet/minecraft/CrashReport;)V c
	createSearchTrees ()V bc
	createTitle ()Ljava/lang/String; ba
	createUserApiService (Lcom/mojang/authlib/yggdrasil/YggdrasilAuthenticationService;Lnet/minecraft/client/main/GameConfig;)Lcom/mojang/authlib/minecraft/UserApiService; a
	createWorldOpenFlows ()Lnet/minecraft/client/gui/screens/worldselection/WorldOpenFlows; w
	cursorEntered ()V b
	debugClientMetricsCancel ()V bi
	debugClientMetricsStart (Ljava/util/function/Consumer;)Z a
	debugClientMetricsStop ()V bh
	debugFpsMeterKeyPress (I)V a
	delayCrash (Lnet/minecraft/CrashReport;)V a
	delayCrashRaw (Lnet/minecraft/CrashReport;)V b
	delayTextureReload ()Ljava/util/concurrent/CompletableFuture; O
	destroy ()V l
	doWorldLoad (Ljava/lang/String;Lnet/minecraft/world/level/storage/LevelStorageSource$LevelStorageAccess;Lnet/minecraft/server/packs/repository/PackRepository;Lnet/minecraft/server/WorldStem;Z)V a
	emergencySave ()V o
	extraTelemetryAvailable ()Z A
	fillReport (Lnet/minecraft/CrashReport;)Lnet/minecraft/CrashReport; d
	fillReport (Lnet/minecraft/client/Minecraft;Lnet/minecraft/client/resources/language/LanguageManager;Ljava/lang/String;Lnet/minecraft/client/Options;Lnet/minecraft/CrashReport;)V a
	fillSystemReport (Lnet/minecraft/SystemReport;Lnet/minecraft/client/Minecraft;Lnet/minecraft/client/resources/language/LanguageManager;Ljava/lang/String;Lnet/minecraft/client/Options;)Lnet/minecraft/SystemReport; a
	finishProfilers (ZLnet/minecraft/util/profiling/SingleTickProfiler;)V b
	forceSetScreen (Lnet/minecraft/client/gui/screens/Screen;)V c
	getBlockColors ()Lnet/minecraft/client/color/block/BlockColors; ax
	getBlockEntityRenderDispatcher ()Lnet/minecraft/client/renderer/blockentity/BlockEntityRenderDispatcher; ao
	getBlockRenderer ()Lnet/minecraft/client/renderer/block/BlockRenderDispatcher; am
	getCameraEntity ()Lnet/minecraft/world/entity/Entity; al
	getChatListener ()Lnet/minecraft/client/multiplayer/chat/ChatListener; aV
	getChatStatus ()Lnet/minecraft/client/Minecraft$ChatStatus; G
	getConnection ()Lnet/minecraft/client/multiplayer/ClientPacketListener; I
	getCurrentServer ()Lnet/minecraft/client/multiplayer/ServerData; P
	getDeltaFrameTime ()F aw
	getDownloadedPackSource ()Lnet/minecraft/client/resources/DownloadedPackSource; ab
	getEntityModels ()Lnet/minecraft/client/model/geom/EntityModelSet; aO
	getEntityRenderDispatcher ()Lnet/minecraft/client/renderer/entity/EntityRenderDispatcher; an
	getFixerUpper ()Lcom/mojang/datafixers/DataFixer; as
	getFps ()I m
	getFrameTime ()F av
	getFrameTimeNs ()J n
	getFrameTimer ()Lnet/minecraft/util/FrameTimer; aq
	getFramerateLimit ()I bg
	getGpuUtilization ()D u
	getGpuWarnlistManager ()Lnet/minecraft/client/renderer/GpuWarnlistManager; ag
	getHotbarManager ()Lnet/minecraft/client/HotbarManager; aC
	getInstance ()Lnet/minecraft/client/Minecraft; N
	getItemRenderer ()Lnet/minecraft/client/renderer/entity/ItemRenderer; ap
	getLanguageManager ()Lnet/minecraft/client/resources/language/LanguageManager; ad
	getLastInputType ()Lnet/minecraft/client/InputType; aT
	getLaunchedVersion ()Ljava/lang/String; g
	getLevelSource ()Lnet/minecraft/world/level/storage/LevelStorageSource; k
	getMainRenderTarget ()Lcom/mojang/blaze3d/pipeline/RenderTarget; f
	getMinecraftSessionService ()Lcom/mojang/authlib/minecraft/MinecraftSessionService; aj
	getMobEffectTextures ()Lnet/minecraft/client/resources/MobEffectTextureManager; aF
	getModelManager ()Lnet/minecraft/client/resources/model/ModelManager; aD
	getMusicManager ()Lnet/minecraft/client/sounds/MusicManager; r
	getNarrator ()Lnet/minecraft/client/GameNarrator; aU
	getOverlay ()Lnet/minecraft/client/gui/screens/Overlay; aJ
	getPaintingTextures ()Lnet/minecraft/client/resources/PaintingTextureManager; aE
	getPlayerSocialManager ()Lnet/minecraft/client/gui/screens/social/PlayerSocialManager; aK
	getProfileKeyPairManager ()Lnet/minecraft/client/multiplayer/ProfileKeyPairManager; v
	getProfileKeySignatureValidator ()Lnet/minecraft/util/SignatureValidator; aS
	getProfileProperties ()Lcom/mojang/authlib/properties/PropertyMap; V
	getProfiler ()Lnet/minecraft/util/profiling/ProfilerFiller; aG
	getProgressListener ()Lnet/minecraft/server/level/progress/StoringChunkProgressListener; aH
	getProxy ()Ljava/net/Proxy; W
	getRealms32BitWarningStatus ()Lnet/minecraft/client/Realms32BitWarningStatus; aR
	getReportingContext ()Lnet/minecraft/client/multiplayer/chat/report/ReportingContext; aW
	getResourceManager ()Lnet/minecraft/server/packs/resources/ResourceManager; Y
	getResourcePackDirectory ()Ljava/nio/file/Path; ac
	getResourcePackRepository ()Lnet/minecraft/server/packs/repository/PackRepository; Z
	getRunningThread ()Ljava/lang/Thread; au
	getSearchTree (Lnet/minecraft/client/searchtree/SearchRegistry$Key;)Lnet/minecraft/client/searchtree/SearchTree; a
	getSingleplayerServer ()Lnet/minecraft/client/server/IntegratedServer; S
	getSituationalMusic ()Lnet/minecraft/sounds/Music; ai
	getSkinManager ()Lnet/minecraft/client/resources/SkinManager; ak
	getSoundManager ()Lnet/minecraft/client/sounds/SoundManager; ah
	getSplashManager ()Lnet/minecraft/client/resources/SplashManager; aI
	getTelemetryManager ()Lnet/minecraft/client/telemetry/ClientTelemetryManager; t
	getTextureAtlas (Lnet/minecraft/resources/ResourceLocation;)Ljava/util/function/Function; a
	getTextureManager ()Lnet/minecraft/client/renderer/texture/TextureManager; X
	getToasts ()Lnet/minecraft/client/gui/components/toasts/ToastComponent; az
	getTutorial ()Lnet/minecraft/client/tutorial/Tutorial; aA
	getUser ()Lnet/minecraft/client/User; U
	getVanillaPackResources ()Lnet/minecraft/server/packs/VanillaPackResources; aa
	getVersionType ()Ljava/lang/String; h
	getWindow ()Lcom/mojang/blaze3d/platform/Window; aM
	grabHugeScreenshot (Ljava/io/File;IIII)Lnet/minecraft/network/chat/Component; a
	grabPanoramixScreenshot (Ljava/io/File;II)Lnet/minecraft/network/chat/Component; a
	handleKeybinds ()V bu
	hasSingleplayerServer ()Z R
	is64Bit ()Z ae
	isBlocked (Ljava/util/UUID;)Z a
	isConnectedToRealms ()Z ar
	isDemo ()Z H
	isEnforceUnicode ()Z i
	isLocalServer ()Z Q
	isMultiplayerServer ()Z bt
	isPaused ()Z af
	isRunning ()Z q
	isSingleplayer ()Z T
	isTextFilteringEnabled ()Z aP
	isWindowActive ()Z aB
	multiplayerBan ()Lcom/mojang/authlib/minecraft/BanDetails; F
	onFullscreenError (IJ)V a
	onGameLoadFinished ()V aZ
	openChatScreen (Ljava/lang/String;)V a
	pauseGame (Z)V c
	pickBlock ()V bv
	populateSearchTree (Lnet/minecraft/client/searchtree/SearchRegistry$Key;Ljava/util/List;)V a
	prepareForMultiplayer ()V aQ
	quickPlayLog ()Lnet/minecraft/client/quickplay/QuickPlayLog; aY
	realmsDataFetcher ()Lcom/mojang/realmsclient/gui/RealmsDataFetcher; aX
	reloadResourcePacks ()Ljava/util/concurrent/CompletableFuture; j
	reloadResourcePacks (Z)Ljava/util/concurrent/CompletableFuture; e
	renderBuffers ()Lnet/minecraft/client/renderer/RenderBuffers; aN
	renderFpsMeter (Lnet/minecraft/client/gui/GuiGraphics;Lnet/minecraft/util/profiling/ProfileResults;)V a
	renderNames ()Z J
	renderOnThread ()Z aL
	resizeDisplay ()V a
	rollbackResourcePacks (Ljava/lang/Throwable;)V a
	run ()V e
	runTick (Z)V f
	selectMainFont (Z)V b
	selfTest ()V be
	setCameraEntity (Lnet/minecraft/world/entity/Entity;)V a
	setConnectedToRealms (Z)V d
	setInitialScreen (Lcom/mojang/realmsclient/client/RealmsClient;Lnet/minecraft/server/packs/resources/ReloadInstance;Lnet/minecraft/client/main/GameConfig$QuickPlayData;)V a
	setLastInputType (Lnet/minecraft/client/InputType;)V a
	setLevel (Lnet/minecraft/client/multiplayer/ClientLevel;)V a
	setOverlay (Lnet/minecraft/client/gui/screens/Overlay;)V a
	setScreen (Lnet/minecraft/client/gui/screens/Screen;)V a
	setWindowActive (Z)V a
	shouldEntityAppearGlowing (Lnet/minecraft/world/entity/Entity;)Z b
	shouldRenderFpsPie ()Z bf
	shouldRun (Ljava/lang/Runnable;)Z e
	shouldShowBanNotice ()Z E
	showOnlyReducedInfo ()Z ay
	startAttack ()Z bj
	startUseItem ()V bs
	stop ()V p
	telemetryOptInExtra ()Z z
	tick ()V s
	updateLevelInEngines (Lnet/minecraft/client/multiplayer/ClientLevel;)V b
	updateMaxMipLevel (I)V b
	updateReportEnvironment (Lnet/minecraft/client/multiplayer/chat/report/ReportEnvironment;)V a
	updateScreenAndTick (Lnet/minecraft/client/gui/screens/Screen;)V d
	updateTitle ()V c
	useAmbientOcclusion ()Z M
	useFancyGraphics ()Z K
	useShaderTransparency ()Z L
	wrapRunnable (Ljava/lang/Runnable;)Ljava/lang/Runnable; f
net/minecraft/client/Minecraft$ChatStatus enn$a
	$VALUES g
	DISABLED_BY_LAUNCHER c
	DISABLED_BY_OPTIONS b
	DISABLED_BY_PROFILE d
	ENABLED a
	INFO_DISABLED_BY_PROFILE e
	message f
	$values ()[Lnet/minecraft/client/Minecraft$ChatStatus; b
	getMessage ()Lnet/minecraft/network/chat/Component; a
	isChatAllowed (Z)Z a
net/minecraft/client/MouseHandler eno
	accumulatedDX n
	accumulatedDY o
	accumulatedScroll p
	activeButton h
	clickDepth j
	fakeRightMouse g
	ignoreFirstMove i
	isLeftPressed b
	isMiddlePressed c
	isRightPressed d
	lastMouseEventTime q
	minecraft a
	mouseGrabbed r
	mousePressedTime k
	smoothTurnX l
	smoothTurnY m
	xpos e
	ypos f
	cursorEntered ()V k
	grabMouse ()V i
	isLeftPressed ()Z b
	isMiddlePressed ()Z c
	isMouseGrabbed ()Z h
	isRightPressed ()Z d
	onDrop (JLjava/util/List;)V a
	onMove (JDD)V b
	onPress (JIII)V a
	onScroll (JDD)V a
	releaseMouse ()V j
	setIgnoreFirstMove ()V g
	setup (J)V a
	turnPlayer ()V a
	xpos ()D e
	ypos ()D f
net/minecraft/client/NarratorStatus enp
	$VALUES h
	ALL b
	BY_ID e
	CHAT c
	OFF a
	SYSTEM d
	id f
	name g
	$values ()[Lnet/minecraft/client/NarratorStatus; e
	byId (I)Lnet/minecraft/client/NarratorStatus; a
	getId ()I a
	getName ()Lnet/minecraft/network/chat/Component; b
	shouldNarrateChat ()Z c
	shouldNarrateSystem ()Z d
net/minecraft/client/OptionInstance enq
	BOOLEAN_TO_STRING b
	BOOLEAN_VALUES a
	LOGGER c
	caption j
	codec g
	initialValue h
	onValueUpdate i
	toString e
	tooltip d
	value k
	values f
	cachedConstantTooltip (Lnet/minecraft/network/chat/Component;)Lnet/minecraft/client/OptionInstance$TooltipSupplier; a
	codec ()Lcom/mojang/serialization/Codec; d
	createBoolean (Ljava/lang/String;Lnet/minecraft/client/OptionInstance$TooltipSupplier;Lnet/minecraft/client/OptionInstance$CaptionBasedToString;ZLjava/util/function/Consumer;)Lnet/minecraft/client/OptionInstance; a
	createBoolean (Ljava/lang/String;Lnet/minecraft/client/OptionInstance$TooltipSupplier;Z)Lnet/minecraft/client/OptionInstance; a
	createBoolean (Ljava/lang/String;Lnet/minecraft/client/OptionInstance$TooltipSupplier;ZLjava/util/function/Consumer;)Lnet/minecraft/client/OptionInstance; a
	createBoolean (Ljava/lang/String;Z)Lnet/minecraft/client/OptionInstance; a
	createBoolean (Ljava/lang/String;ZLjava/util/function/Consumer;)Lnet/minecraft/client/OptionInstance; a
	createButton (Lnet/minecraft/client/Options;III)Lnet/minecraft/client/gui/components/AbstractWidget; a
	createButton (Lnet/minecraft/client/Options;IIILjava/util/function/Consumer;)Lnet/minecraft/client/gui/components/AbstractWidget; a
	forOptionEnum ()Lnet/minecraft/client/OptionInstance$CaptionBasedToString; b
	get ()Ljava/lang/Object; c
	noTooltip ()Lnet/minecraft/client/OptionInstance$TooltipSupplier; a
	set (Ljava/lang/Object;)V a
	values ()Lnet/minecraft/client/OptionInstance$ValueSet; e
net/minecraft/client/OptionInstance$AltEnum enq$a
	altCondition c
	altValues b
	codec e
	valueSetter d
	values a
	altCondition ()Ljava/util/function/BooleanSupplier; d
	altValues ()Ljava/util/List; c
	codec ()Lcom/mojang/serialization/Codec; f
	validateValue (Ljava/lang/Object;)Ljava/util/Optional; a
	valueListSupplier ()Lnet/minecraft/client/gui/components/CycleButton$ValueListSupplier; a
	valueSetter ()Lnet/minecraft/client/OptionInstance$CycleableValueSet$ValueSetter; e
	values ()Ljava/util/List; b
net/minecraft/client/OptionInstance$CaptionBasedToString enq$b
net/minecraft/client/OptionInstance$ClampingLazyMaxIntRange enq$c
	encodableMaxInclusive c
	maxSupplier b
	minInclusive a
	codec ()Lcom/mojang/serialization/Codec; f
	createCycleButton ()Z c
	encodableMaxInclusive ()I h
	maxInclusive ()I b
	maxSupplier ()Ljava/util/function/IntSupplier; g
	minInclusive ()I d
	validateValue (Ljava/lang/Integer;)Ljava/util/Optional; a
	validateValue (Ljava/lang/Object;)Ljava/util/Optional; a
	valueListSupplier ()Lnet/minecraft/client/gui/components/CycleButton$ValueListSupplier; a
net/minecraft/client/OptionInstance$CycleableValueSet enq$d
	createButton (Lnet/minecraft/client/OptionInstance$TooltipSupplier;Lnet/minecraft/client/Options;IIILjava/util/function/Consumer;)Ljava/util/function/Function; a
	valueListSupplier ()Lnet/minecraft/client/gui/components/CycleButton$ValueListSupplier; a
	valueSetter ()Lnet/minecraft/client/OptionInstance$CycleableValueSet$ValueSetter; e
net/minecraft/client/OptionInstance$CycleableValueSet$ValueSetter enq$d$a
net/minecraft/client/OptionInstance$Enum enq$e
	codec b
	values a
	codec ()Lcom/mojang/serialization/Codec; f
	validateValue (Ljava/lang/Object;)Ljava/util/Optional; a
	valueListSupplier ()Lnet/minecraft/client/gui/components/CycleButton$ValueListSupplier; a
	values ()Ljava/util/List; b
net/minecraft/client/OptionInstance$IntRange enq$f
	maxInclusive b
	minInclusive a
	codec ()Lcom/mojang/serialization/Codec; f
	maxInclusive ()I b
	minInclusive ()I d
	validateValue (Ljava/lang/Integer;)Ljava/util/Optional; a
	validateValue (Ljava/lang/Object;)Ljava/util/Optional; a
net/minecraft/client/OptionInstance$IntRangeBase enq$g
	fromSliderValue (D)Ljava/lang/Integer; a
	fromSliderValue (D)Ljava/lang/Object; b
	maxInclusive ()I b
	minInclusive ()I d
	toSliderValue (Ljava/lang/Integer;)D b
	toSliderValue (Ljava/lang/Object;)D b
	xmap (Ljava/util/function/IntFunction;Ljava/util/function/ToIntFunction;)Lnet/minecraft/client/OptionInstance$SliderableValueSet; a
net/minecraft/client/OptionInstance$LazyEnum enq$h
	codec c
	validateValue b
	values a
	codec ()Lcom/mojang/serialization/Codec; f
	validateValue ()Ljava/util/function/Function; c
	validateValue (Ljava/lang/Object;)Ljava/util/Optional; a
	valueListSupplier ()Lnet/minecraft/client/gui/components/CycleButton$ValueListSupplier; a
	values ()Ljava/util/function/Supplier; b
net/minecraft/client/OptionInstance$OptionInstanceSliderButton enq$i
	instance h
	onValueChanged k
	tooltipSupplier j
	values i
	applyValue ()V a
	updateMessage ()V b
net/minecraft/client/OptionInstance$SliderableOrCyclableValueSet enq$j
	createButton (Lnet/minecraft/client/OptionInstance$TooltipSupplier;Lnet/minecraft/client/Options;IIILjava/util/function/Consumer;)Ljava/util/function/Function; a
	createCycleButton ()Z c
net/minecraft/client/OptionInstance$SliderableValueSet enq$k
	createButton (Lnet/minecraft/client/OptionInstance$TooltipSupplier;Lnet/minecraft/client/Options;IIILjava/util/function/Consumer;)Ljava/util/function/Function; a
	fromSliderValue (D)Ljava/lang/Object; b
	toSliderValue (Ljava/lang/Object;)D b
net/minecraft/client/OptionInstance$TooltipSupplier enq$l
net/minecraft/client/OptionInstance$UnitDouble enq$m
	$VALUES b
	INSTANCE a
	$values ()[Lnet/minecraft/client/OptionInstance$UnitDouble; a
	codec ()Lcom/mojang/serialization/Codec; f
	fromSliderValue (D)Ljava/lang/Double; a
	fromSliderValue (D)Ljava/lang/Object; b
	toSliderValue (Ljava/lang/Double;)D b
	toSliderValue (Ljava/lang/Object;)D b
	validateValue (Ljava/lang/Double;)Ljava/util/Optional; a
	validateValue (Ljava/lang/Object;)Ljava/util/Optional; a
	xmap (Ljava/util/function/DoubleFunction;Ljava/util/function/ToDoubleFunction;)Lnet/minecraft/client/OptionInstance$SliderableValueSet; a
net/minecraft/client/OptionInstance$ValueSet enq$n
	codec ()Lcom/mojang/serialization/Codec; f
	createButton (Lnet/minecraft/client/OptionInstance$TooltipSupplier;Lnet/minecraft/client/Options;IIILjava/util/function/Consumer;)Ljava/util/function/Function; a
	validateValue (Ljava/lang/Object;)Ljava/util/Optional; a
net/minecraft/client/Options enr
	ACCESSIBILITY_TOOLTIP_CONTRAST_MODE aN
	ACCESSIBILITY_TOOLTIP_DAMAGE_TILT_STRENGTH bZ
	ACCESSIBILITY_TOOLTIP_DARKNESS_EFFECT bT
	ACCESSIBILITY_TOOLTIP_DARK_MOJANG_BACKGROUND ao
	ACCESSIBILITY_TOOLTIP_FOV_EFFECT bR
	ACCESSIBILITY_TOOLTIP_GLINT_SPEED bV
	ACCESSIBILITY_TOOLTIP_GLINT_STRENGTH bX
	ACCESSIBILITY_TOOLTIP_HIDE_LIGHTNING_FLASHES aq
	ACCESSIBILITY_TOOLTIP_NOTIFICATION_DISPLAY_TIME aW
	ACCESSIBILITY_TOOLTIP_SCREEN_EFFECT bP
	ALLOW_SERVER_LISTING_TOOLTIP bp
	AUTO_GUI_SCALE af
	CHAT_TOOLTIP_HIDE_MATCHED_NAMES bF
	CHAT_TOOLTIP_ONLY_SHOW_SECURE bI
	DEFAULT_SOUND_DEVICE g
	DEFAULT_VOLUME an
	DIRECTIONAL_AUDIO_TOOLTIP_OFF bv
	DIRECTIONAL_AUDIO_TOOLTIP_ON bu
	GRAPHICS_TOOLTIP_FABULOUS aA
	GRAPHICS_TOOLTIP_FANCY aB
	GRAPHICS_TOOLTIP_FAST az
	GSON ak
	LOGGER aj
	MAX_GUI_SCALE_INCLUSIVE cc
	MOVEMENT_HOLD bC
	MOVEMENT_TOGGLE bB
	OPTION_SPLITTER am
	PRIORITIZE_CHUNK_TOOLTIP_NEARBY aG
	PRIORITIZE_CHUNK_TOOLTIP_NONE aE
	PRIORITIZE_CHUNK_TOOLTIP_PLAYER_AFFECTED aF
	RENDER_DISTANCE_EXTREME f
	RENDER_DISTANCE_FAR d
	RENDER_DISTANCE_NORMAL c
	RENDER_DISTANCE_REALLY_FAR e
	RENDER_DISTANCE_SHORT b
	RENDER_DISTANCE_TINY a
	RESOURCE_PACK_TYPE al
	TELEMETRY_TOOLTIP bN
	UNLIMITED_FRAMERATE_CUTOFF h
	advancedItemTooltips m
	allowServerListing bq
	ambientOcclusion aD
	attackIndicator aZ
	autoJump bd
	autoSuggestions bf
	backgroundForChatOnly bx
	biomeBlendRadius ba
	bobView bA
	cameraType bL
	chatColors bg
	chatDelay aV
	chatHeightFocused aU
	chatHeightUnfocused aT
	chatLineSpacing aK
	chatLinks bh
	chatLinksPrompt bi
	chatOpacity aJ
	chatScale aR
	chatVisibility aI
	chatWidth aS
	cloudStatus ay
	damageTiltStrength ca
	darkMojangStudiosBackground ap
	darknessEffectScale bU
	directionalAudio bw
	discreteMouseScroll bn
	enableVsync bj
	entityDistanceScaling aw
	entityShadows bk
	forceUnicodeFont bl
	fov bM
	fovEffectScale bS
	framerateLimit ax
	fullscreen bz
	fullscreenVideoModeString k
	gamma cb
	glDebugVerbosity u
	glintSpeed bW
	glintStrength bY
	graphicsMode aC
	guiScale cd
	hideBundleTutorial t
	hideGui Z
	hideLightningFlash ar
	hideMatchedNames bG
	hideServerAddress l
	highContrast aO
	incompatibleResourcePacks j
	invertYMouse bm
	joinedFirstServer s
	keyAdvancements T
	keyAttack I
	keyChat K
	keyCommand M
	keyDown z
	keyDrop G
	keyFullscreen R
	keyHotbarSlots U
	keyInventory E
	keyJump B
	keyLeft y
	keyLoadHotbarActivator W
	keyMappings X
	keyPickItem J
	keyPlayerList L
	keyRight A
	keySaveHotbarActivator V
	keyScreenshot O
	keyShift C
	keySmoothCamera Q
	keySocialInteractions N
	keySpectatorOutlines S
	keySprint D
	keySwapOffhand F
	keyTogglePerspective P
	keyUp x
	keyUse H
	languageCode ag
	lastMpIp ad
	mainHand aQ
	minecraft Y
	mipmapLevels aY
	modelParts aP
	mouseWheelSensitivity bb
	narrator cf
	notificationDisplayTime aX
	onboardAccessibility ah
	onlyShowSecureChat bJ
	operatorItemsTab be
	optionsFile bK
	overrideHeight p
	overrideWidth o
	panoramaSpeed aM
	particles ce
	pauseOnLostFocus n
	prioritizeChunkUpdates aH
	rawMouseInput bc
	realmsNotifications bo
	reducedDebugInfo br
	renderDebug aa
	renderDebugCharts ab
	renderDistance at
	renderFpsChart ac
	resourcePacks i
	screenEffectScale bQ
	sensitivity as
	serverRenderDistance av
	showAutosaveIndicator bH
	showSubtitles bt
	simulationDistance au
	skipMultiplayerWarning v
	skipRealms32bitWarning w
	smoothCamera ae
	soundDevice cg
	soundSourceVolumes bs
	syncWrites ai
	telemetryOptInExtra bO
	textBackgroundOpacity aL
	toggleCrouch bD
	toggleSprint bE
	touchscreen by
	tutorialStep r
	useNativeTransport q
	allowServerListing ()Lnet/minecraft/client/OptionInstance; P
	ambientOcclusion ()Lnet/minecraft/client/OptionInstance; j
	attackIndicator ()Lnet/minecraft/client/OptionInstance; z
	autoJump ()Lnet/minecraft/client/OptionInstance; D
	autoSuggestions ()Lnet/minecraft/client/OptionInstance; F
	backgroundForChatOnly ()Lnet/minecraft/client/OptionInstance; T
	biomeBlendRadius ()Lnet/minecraft/client/OptionInstance; A
	bobView ()Lnet/minecraft/client/OptionInstance; W
	broadcastOptions ()V ar
	chatColors ()Lnet/minecraft/client/OptionInstance; G
	chatDelay ()Lnet/minecraft/client/OptionInstance; w
	chatHeightFocused ()Lnet/minecraft/client/OptionInstance; v
	chatHeightUnfocused ()Lnet/minecraft/client/OptionInstance; u
	chatLineSpacing ()Lnet/minecraft/client/OptionInstance; n
	chatLinks ()Lnet/minecraft/client/OptionInstance; H
	chatLinksPrompt ()Lnet/minecraft/client/OptionInstance; I
	chatOpacity ()Lnet/minecraft/client/OptionInstance; m
	chatScale ()Lnet/minecraft/client/OptionInstance; s
	chatVisibility ()Lnet/minecraft/client/OptionInstance; l
	chatWidth ()Lnet/minecraft/client/OptionInstance; t
	cloudStatus ()Lnet/minecraft/client/OptionInstance; h
	createSoundSliderOptionInstance (Ljava/lang/String;Lnet/minecraft/sounds/SoundSource;)Lnet/minecraft/client/OptionInstance; a
	damageTiltStrength ()Lnet/minecraft/client/OptionInstance; aj
	darkMojangStudiosBackground ()Lnet/minecraft/client/OptionInstance; a
	darknessEffectScale ()Lnet/minecraft/client/OptionInstance; ag
	dataFix (Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/nbt/CompoundTag; a
	directionalAudio ()Lnet/minecraft/client/OptionInstance; S
	discreteMouseScroll ()Lnet/minecraft/client/OptionInstance; N
	dumpOptionsForReport ()Ljava/lang/String; aw
	enableVsync ()Lnet/minecraft/client/OptionInstance; J
	entityDistanceScaling ()Lnet/minecraft/client/OptionInstance; f
	entityShadows ()Lnet/minecraft/client/OptionInstance; K
	forceUnicodeFont ()Lnet/minecraft/client/OptionInstance; L
	fov ()Lnet/minecraft/client/OptionInstance; ac
	fovEffectScale ()Lnet/minecraft/client/OptionInstance; af
	framerateLimit ()Lnet/minecraft/client/OptionInstance; g
	fullscreen ()Lnet/minecraft/client/OptionInstance; V
	gamma ()Lnet/minecraft/client/OptionInstance; ak
	genericValueLabel (Lnet/minecraft/network/chat/Component;I)Lnet/minecraft/network/chat/Component; a
	genericValueLabel (Lnet/minecraft/network/chat/Component;Lnet/minecraft/network/chat/Component;)Lnet/minecraft/network/chat/Component; a
	getBackgroundColor (F)I b
	getBackgroundColor (I)I a
	getBackgroundOpacity (F)F a
	getCameraType ()Lnet/minecraft/client/CameraType; au
	getCloudsType ()Lnet/minecraft/client/CloudStatus; as
	getEffectiveRenderDistance ()I ax
	getFile ()Ljava/io/File; av
	getSoundSourceOptionInstance (Lnet/minecraft/sounds/SoundSource;)Lnet/minecraft/client/OptionInstance; b
	getSoundSourceVolume (Lnet/minecraft/sounds/SoundSource;)F a
	glintSpeed ()Lnet/minecraft/client/OptionInstance; ah
	glintStrength ()Lnet/minecraft/client/OptionInstance; ai
	graphicsMode ()Lnet/minecraft/client/OptionInstance; i
	guiScale ()Lnet/minecraft/client/OptionInstance; al
	hideLightningFlash ()Lnet/minecraft/client/OptionInstance; b
	hideMatchedNames ()Lnet/minecraft/client/OptionInstance; Z
	highContrast ()Lnet/minecraft/client/OptionInstance; q
	invertYMouse ()Lnet/minecraft/client/OptionInstance; M
	isFalse (Ljava/lang/String;)Z b
	isModelPartEnabled (Lnet/minecraft/world/entity/player/PlayerModelPart;)Z a
	isTrue (Ljava/lang/String;)Z a
	load ()V ap
	loadSelectedResourcePacks (Lnet/minecraft/server/packs/repository/PackRepository;)V b
	logMouse (I)D c
	mainHand ()Lnet/minecraft/client/OptionInstance; r
	mipmapLevels ()Lnet/minecraft/client/OptionInstance; y
	mouseWheelSensitivity ()Lnet/minecraft/client/OptionInstance; B
	narrator ()Lnet/minecraft/client/OptionInstance; an
	notificationDisplayTime ()Lnet/minecraft/client/OptionInstance; x
	onlyShowSecureChat ()Lnet/minecraft/client/OptionInstance; ab
	operatorItemsTab ()Lnet/minecraft/client/OptionInstance; E
	panoramaSpeed ()Lnet/minecraft/client/OptionInstance; p
	particles ()Lnet/minecraft/client/OptionInstance; am
	percentValueLabel (Lnet/minecraft/network/chat/Component;D)Lnet/minecraft/network/chat/Component; a
	pixelValueLabel (Lnet/minecraft/network/chat/Component;I)Lnet/minecraft/network/chat/Component; b
	prioritizeChunkUpdates ()Lnet/minecraft/client/OptionInstance; k
	processOptions (Lnet/minecraft/client/Options$FieldAccess;)V a
	rawMouseInput ()Lnet/minecraft/client/OptionInstance; C
	readPackList (Ljava/lang/String;)Ljava/util/List; c
	realmsNotifications ()Lnet/minecraft/client/OptionInstance; O
	reducedDebugInfo ()Lnet/minecraft/client/OptionInstance; Q
	renderDistance ()Lnet/minecraft/client/OptionInstance; d
	save ()V aq
	screenEffectScale ()Lnet/minecraft/client/OptionInstance; ae
	sensitivity ()Lnet/minecraft/client/OptionInstance; c
	setCameraType (Lnet/minecraft/client/CameraType;)V a
	setKey (Lnet/minecraft/client/KeyMapping;Lcom/mojang/blaze3d/platform/InputConstants$Key;)V a
	setModelPart (Lnet/minecraft/world/entity/player/PlayerModelPart;Z)V b
	setServerRenderDistance (I)V b
	showAutosaveIndicator ()Lnet/minecraft/client/OptionInstance; aa
	showSubtitles ()Lnet/minecraft/client/OptionInstance; R
	simulationDistance ()Lnet/minecraft/client/OptionInstance; e
	soundDevice ()Lnet/minecraft/client/OptionInstance; ao
	telemetryOptInExtra ()Lnet/minecraft/client/OptionInstance; ad
	textBackgroundOpacity ()Lnet/minecraft/client/OptionInstance; o
	toggleCrouch ()Lnet/minecraft/client/OptionInstance; X
	toggleModelPart (Lnet/minecraft/world/entity/player/PlayerModelPart;Z)V a
	toggleSprint ()Lnet/minecraft/client/OptionInstance; Y
	touchscreen ()Lnet/minecraft/client/OptionInstance; U
	unlogMouse (D)I a
	updateResourcePacks (Lnet/minecraft/server/packs/repository/PackRepository;)V a
	useNativeTransport ()Z at
net/minecraft/client/Options$FieldAccess enr$a
	process (Ljava/lang/String;F)F a
	process (Ljava/lang/String;I)I a
	process (Ljava/lang/String;Ljava/lang/Object;Ljava/util/function/Function;Ljava/util/function/Function;)Ljava/lang/Object; a
	process (Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; a
	process (Ljava/lang/String;Lnet/minecraft/client/OptionInstance;)V a
	process (Ljava/lang/String;Z)Z a
net/minecraft/client/ParticleStatus ens
	$VALUES g
	ALL a
	BY_ID d
	DECREASED b
	MINIMAL c
	id e
	key f
	$values ()[Lnet/minecraft/client/ParticleStatus; d
	byId (I)Lnet/minecraft/client/ParticleStatus; a
	getId ()I a
	getKey ()Ljava/lang/String; b
net/minecraft/client/PeriodicNotificationManager ent
	CODEC a
	LOGGER b
	notificationTask f
	notifications c
	selector d
	timer e
	apply (Ljava/lang/Object;Lnet/minecraft/server/packs/resources/ResourceManager;Lnet/minecraft/util/profiling/ProfilerFiller;)V a
	apply (Ljava/util/Map;Lnet/minecraft/server/packs/resources/ResourceManager;Lnet/minecraft/util/profiling/ProfilerFiller;)V a
	calculateInitialDelay (Ljava/util/List;)J a
	calculateOptimalPeriod (Ljava/util/List;J)J a
	prepare (Lnet/minecraft/server/packs/resources/ResourceManager;Lnet/minecraft/util/profiling/ProfilerFiller;)Ljava/lang/Object; b
	prepare (Lnet/minecraft/server/packs/resources/ResourceManager;Lnet/minecraft/util/profiling/ProfilerFiller;)Ljava/util/Map; a
	stopTimer ()V a
net/minecraft/client/PeriodicNotificationManager$Notification ent$a
	delay a
	message d
	period b
	title c
	delay ()J a
	message ()Ljava/lang/String; d
	period ()J b
	title ()Ljava/lang/String; c
net/minecraft/client/PeriodicNotificationManager$NotificationTask ent$b
	elapsed d
	minecraft a
	notifications b
	period c
	reset (Ljava/util/List;J)Lnet/minecraft/client/PeriodicNotificationManager$NotificationTask; a
net/minecraft/client/PrioritizeChunkUpdates enu
	$VALUES g
	BY_ID d
	NEARBY c
	NONE a
	PLAYER_AFFECTED b
	id e
	key f
	$values ()[Lnet/minecraft/client/PrioritizeChunkUpdates; d
	byId (I)Lnet/minecraft/client/PrioritizeChunkUpdates; a
	getId ()I a
	getKey ()Ljava/lang/String; b
net/minecraft/client/Realms32BitWarningStatus env
	LOGGER a
	minecraft b
	subscriptionCheck c
	warningScreenShown d
	checkForRealmsSubscription ()Ljava/lang/Boolean; a
	hasRealmsSubscription ()Z b
	showRealms32BitWarningIfNeeded (Lnet/minecraft/client/gui/screens/Screen;)V a
net/minecraft/client/RecipeBookCategories enw
	$VALUES y
	AGGREGATE_CATEGORIES w
	BLAST_FURNACE_BLOCKS k
	BLAST_FURNACE_CATEGORIES t
	BLAST_FURNACE_MISC l
	BLAST_FURNACE_SEARCH j
	CAMPFIRE q
	CRAFTING_BUILDING_BLOCKS b
	CRAFTING_CATEGORIES v
	CRAFTING_EQUIPMENT d
	CRAFTING_MISC e
	CRAFTING_REDSTONE c
	CRAFTING_SEARCH a
	FURNACE_BLOCKS h
	FURNACE_CATEGORIES u
	FURNACE_FOOD g
	FURNACE_MISC i
	FURNACE_SEARCH f
	SMITHING p
	SMOKER_CATEGORIES s
	SMOKER_FOOD n
	SMOKER_SEARCH m
	STONECUTTER o
	UNKNOWN r
	itemIcons x
	$values ()[Lnet/minecraft/client/RecipeBookCategories; b
	getCategories (Lnet/minecraft/world/inventory/RecipeBookType;)Ljava/util/List; a
	getIconItems ()Ljava/util/List; a
net/minecraft/client/ResourceLoadStateTracker enx
	LOGGER a
	reloadCount c
	reloadState b
	fillCrashReport (Lnet/minecraft/CrashReport;)V a
	finishReload ()V a
	startRecovery (Ljava/lang/Throwable;)V a
	startReload (Lnet/minecraft/client/ResourceLoadStateTracker$ReloadReason;Ljava/util/List;)V a
net/minecraft/client/ResourceLoadStateTracker$RecoveryInfo enx$a
	error a
	fillCrashInfo (Lnet/minecraft/CrashReportCategory;)V a
net/minecraft/client/ResourceLoadStateTracker$ReloadReason enx$b
	$VALUES e
	INITIAL a
	MANUAL b
	UNKNOWN c
	name d
	$values ()[Lnet/minecraft/client/ResourceLoadStateTracker$ReloadReason; a
net/minecraft/client/ResourceLoadStateTracker$ReloadState enx$c
	finished d
	packs b
	recoveryReloadInfo c
	reloadReason a
	fillCrashInfo (Lnet/minecraft/CrashReportCategory;)V a
net/minecraft/client/Screenshot eny
	LOGGER b
	SCREENSHOT_DIR a
	bytes e
	file h
	height g
	outputStream d
	rowHeight c
	width f
	_grab (Ljava/io/File;Ljava/lang/String;Lcom/mojang/blaze3d/pipeline/RenderTarget;Ljava/util/function/Consumer;)V b
	addRegion (Ljava/nio/ByteBuffer;IIII)V a
	close ()Ljava/io/File; b
	getFile (Ljava/io/File;)Ljava/io/File; a
	grab (Ljava/io/File;Lcom/mojang/blaze3d/pipeline/RenderTarget;Ljava/util/function/Consumer;)V a
	grab (Ljava/io/File;Ljava/lang/String;Lcom/mojang/blaze3d/pipeline/RenderTarget;Ljava/util/function/Consumer;)V a
	saveRow ()V a
	takeScreenshot (Lcom/mojang/blaze3d/pipeline/RenderTarget;)Lcom/mojang/blaze3d/platform/NativeImage; a
net/minecraft/client/StringSplitter enz
	widthProvider a
	componentStyleAtWidth (Lnet/minecraft/network/chat/FormattedText;I)Lnet/minecraft/network/chat/Style; a
	componentStyleAtWidth (Lnet/minecraft/util/FormattedCharSequence;I)Lnet/minecraft/network/chat/Style; a
	findLineBreak (Ljava/lang/String;ILnet/minecraft/network/chat/Style;)I f
	formattedHeadByWidth (Ljava/lang/String;ILnet/minecraft/network/chat/Style;)Ljava/lang/String; e
	formattedIndexByWidth (Ljava/lang/String;ILnet/minecraft/network/chat/Style;)I d
	getWordPosition (Ljava/lang/String;IIZ)I a
	headByWidth (Lnet/minecraft/network/chat/FormattedText;ILnet/minecraft/network/chat/Style;)Lnet/minecraft/network/chat/FormattedText; a
	plainHeadByWidth (Ljava/lang/String;ILnet/minecraft/network/chat/Style;)Ljava/lang/String; b
	plainIndexAtWidth (Ljava/lang/String;ILnet/minecraft/network/chat/Style;)I a
	plainTailByWidth (Ljava/lang/String;ILnet/minecraft/network/chat/Style;)Ljava/lang/String; c
	splitLines (Ljava/lang/String;ILnet/minecraft/network/chat/Style;)Ljava/util/List; g
	splitLines (Ljava/lang/String;ILnet/minecraft/network/chat/Style;ZLnet/minecraft/client/StringSplitter$LinePosConsumer;)V a
	splitLines (Lnet/minecraft/network/chat/FormattedText;ILnet/minecraft/network/chat/Style;)Ljava/util/List; b
	splitLines (Lnet/minecraft/network/chat/FormattedText;ILnet/minecraft/network/chat/Style;Ljava/util/function/BiConsumer;)V a
	splitLines (Lnet/minecraft/network/chat/FormattedText;ILnet/minecraft/network/chat/Style;Lnet/minecraft/network/chat/FormattedText;)Ljava/util/List; a
	stringWidth (Ljava/lang/String;)F a
	stringWidth (Lnet/minecraft/network/chat/FormattedText;)F a
	stringWidth (Lnet/minecraft/util/FormattedCharSequence;)F a
net/minecraft/client/StringSplitter$FlatComponents enz$a
	flatParts b
	parts a
	charAt (I)C a
	getRemainder ()Lnet/minecraft/network/chat/FormattedText; a
	splitAt (IILnet/minecraft/network/chat/Style;)Lnet/minecraft/network/chat/FormattedText; a
net/minecraft/client/StringSplitter$LineBreakFinder enz$b
	hadNonZeroWidthChar e
	lastSpace g
	lastSpaceStyle h
	lineBreak c
	lineBreakStyle d
	maxWidth b
	nextChar i
	offset j
	width f
	addToOffset (I)V a
	finishIteration (ILnet/minecraft/network/chat/Style;)Z a
	getSplitPosition ()I a
	getSplitStyle ()Lnet/minecraft/network/chat/Style; b
	lineBreakFound ()Z c
net/minecraft/client/StringSplitter$LineComponent enz$c
	contents c
	style d
	visit (Lnet/minecraft/network/chat/FormattedText$ContentConsumer;)Ljava/util/Optional; a
	visit (Lnet/minecraft/network/chat/FormattedText$StyledContentConsumer;Lnet/minecraft/network/chat/Style;)Ljava/util/Optional; a
net/minecraft/client/StringSplitter$LinePosConsumer enz$d
net/minecraft/client/StringSplitter$WidthLimitedCharSink enz$e
	maxWidth b
	position c
	getPosition ()I a
	resetPosition ()V b
net/minecraft/client/StringSplitter$WidthProvider enz$f
net/minecraft/client/Timer eoa
	lastMs c
	msPerTick d
	partialTick a
	tickDelta b
	advanceTime (J)I a
net/minecraft/client/ToggleKeyMapping eob
	needsToggle h
	reset ()V n
	setDown (Z)V a
net/minecraft/client/User eoc
	accessToken c
	clientId e
	name a
	type f
	uuid b
	xuid d
	getAccessToken ()Ljava/lang/String; d
	getClientId ()Ljava/util/Optional; e
	getGameProfile ()Lcom/mojang/authlib/GameProfile; h
	getName ()Ljava/lang/String; c
	getProfileId ()Ljava/util/UUID; g
	getSessionId ()Ljava/lang/String; a
	getType ()Lnet/minecraft/client/User$Type; i
	getUuid ()Ljava/lang/String; b
	getXuid ()Ljava/util/Optional; f
net/minecraft/client/User$Type eoc$a
	$VALUES f
	BY_NAME d
	LEGACY a
	MOJANG b
	MSA c
	name e
	$values ()[Lnet/minecraft/client/User$Type; b
	byName (Ljava/lang/String;)Lnet/minecraft/client/User$Type; a
	getName ()Ljava/lang/String; a
net/minecraft/client/animation/AnimationChannel eod
	keyframes b
	target a
	keyframes ()[Lnet/minecraft/client/animation/Keyframe; b
	target ()Lnet/minecraft/client/animation/AnimationChannel$Target; a
net/minecraft/client/animation/AnimationChannel$Interpolation eod$a
net/minecraft/client/animation/AnimationChannel$Interpolations eod$b
	CATMULLROM b
	LINEAR a
net/minecraft/client/animation/AnimationChannel$Target eod$c
net/minecraft/client/animation/AnimationChannel$Targets eod$d
	POSITION a
	ROTATION b
	SCALE c
net/minecraft/client/animation/AnimationDefinition eoe
	boneAnimations c
	lengthInSeconds a
	looping b
	boneAnimations ()Ljava/util/Map; c
	lengthInSeconds ()F a
	looping ()Z b
net/minecraft/client/animation/AnimationDefinition$Builder eoe$a
	animationByBone b
	length a
	looping c
	addAnimation (Ljava/lang/String;Lnet/minecraft/client/animation/AnimationChannel;)Lnet/minecraft/client/animation/AnimationDefinition$Builder; a
	build ()Lnet/minecraft/client/animation/AnimationDefinition; b
	looping ()Lnet/minecraft/client/animation/AnimationDefinition$Builder; a
	withLength (F)Lnet/minecraft/client/animation/AnimationDefinition$Builder; a
net/minecraft/client/animation/Keyframe eof
	interpolation c
	target b
	timestamp a
	interpolation ()Lnet/minecraft/client/animation/AnimationChannel$Interpolation; c
	target ()Lorg/joml/Vector3f; b
	timestamp ()F a
net/minecraft/client/animation/KeyframeAnimations eog
	animate (Lnet/minecraft/client/model/HierarchicalModel;Lnet/minecraft/client/animation/AnimationDefinition;JFLorg/joml/Vector3f;)V a
	degreeVec (FFF)Lorg/joml/Vector3f; b
	getElapsedSeconds (Lnet/minecraft/client/animation/AnimationDefinition;J)F a
	posVec (FFF)Lorg/joml/Vector3f; a
	scaleVec (DDD)Lorg/joml/Vector3f; a
net/minecraft/client/animation/definitions/CamelAnimation eoh
	CAMEL_DASH e
	CAMEL_IDLE f
	CAMEL_SIT b
	CAMEL_SIT_POSE c
	CAMEL_STANDUP d
	CAMEL_WALK a
net/minecraft/client/animation/definitions/FrogAnimation eoi
	FROG_CROAK a
	FROG_IDLE_WATER f
	FROG_JUMP c
	FROG_SWIM e
	FROG_TONGUE d
	FROG_WALK b
net/minecraft/client/animation/definitions/SnifferAnimation eoj
	BABY_TRANSFORM a
	SNIFFER_BABY_FALL h
	SNIFFER_DIG f
	SNIFFER_HAPPY i
	SNIFFER_LONGSNIFF c
	SNIFFER_SNIFFSNIFF b
	SNIFFER_SNIFF_SEARCH e
	SNIFFER_STAND_UP g
	SNIFFER_WALK d
net/minecraft/client/animation/definitions/WardenAnimation eok
	WARDEN_ATTACK e
	WARDEN_DIG b
	WARDEN_EMERGE a
	WARDEN_ROAR c
	WARDEN_SNIFF d
	WARDEN_SONIC_BOOM f
net/minecraft/client/color/block/BlockColor eon
net/minecraft/client/color/block/BlockColors eoo
	DEFAULT a
	blockColors b
	coloringStates c
	addColoringState (Lnet/minecraft/world/level/block/state/properties/Property;[Lnet/minecraft/world/level/block/Block;)V a
	addColoringStates (Ljava/util/Set;[Lnet/minecraft/world/level/block/Block;)V a
	createDefault ()Lnet/minecraft/client/color/block/BlockColors; a
	getColor (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockAndTintGetter;Lnet/minecraft/core/BlockPos;I)I a
	getColor (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)I a
	getColoringProperties (Lnet/minecraft/world/level/block/Block;)Ljava/util/Set; a
	register (Lnet/minecraft/client/color/block/BlockColor;[Lnet/minecraft/world/level/block/Block;)V a
net/minecraft/client/color/block/BlockTintCache eop
	MAX_CACHE_ENTRIES a
	cache c
	latestChunkOnThread b
	lock d
	source e
	findOrCreateChunkCache (II)Lnet/minecraft/client/color/block/BlockTintCache$CacheData; b
	getColor (Lnet/minecraft/core/BlockPos;)I a
	invalidateAll ()V a
	invalidateForChunk (II)V a
net/minecraft/client/color/block/BlockTintCache$CacheData eop$a
	BLOCKS_PER_LAYER c
	cache a
	invalidated d
	lock b
	allocateLayer ()[I c
	getLayer (I)[I a
	invalidate ()V b
	isInvalidated ()Z a
net/minecraft/client/color/block/BlockTintCache$LatestCacheInfo eop$b
	cache c
	x a
	z b
net/minecraft/client/color/item/ItemColor eor
net/minecraft/client/color/item/ItemColors eos
	DEFAULT a
	itemColors b
	createDefault (Lnet/minecraft/client/color/block/BlockColors;)Lnet/minecraft/client/color/item/ItemColors; a
	getColor (Lnet/minecraft/world/item/ItemStack;I)I a
	register (Lnet/minecraft/client/color/item/ItemColor;[Lnet/minecraft/world/level/ItemLike;)V a
net/minecraft/client/gui/ComponentPath eou
	applyFocus (Z)V a
	component ()Lnet/minecraft/client/gui/components/events/GuiEventListener; a
	leaf (Lnet/minecraft/client/gui/components/events/GuiEventListener;)Lnet/minecraft/client/gui/ComponentPath; a
	path (Lnet/minecraft/client/gui/components/events/ContainerEventHandler;Lnet/minecraft/client/gui/ComponentPath;)Lnet/minecraft/client/gui/ComponentPath; a
	path (Lnet/minecraft/client/gui/components/events/GuiEventListener;[Lnet/minecraft/client/gui/components/events/ContainerEventHandler;)Lnet/minecraft/client/gui/ComponentPath; a
net/minecraft/client/gui/ComponentPath$Leaf eou$a
	component a
	applyFocus (Z)V a
	component ()Lnet/minecraft/client/gui/components/events/GuiEventListener; a
net/minecraft/client/gui/ComponentPath$Path eou$b
	childPath b
	component a
	applyFocus (Z)V a
	childPath ()Lnet/minecraft/client/gui/ComponentPath; c
	component ()Lnet/minecraft/client/gui/components/events/ContainerEventHandler; b
	component ()Lnet/minecraft/client/gui/components/events/GuiEventListener; a
net/minecraft/client/gui/Font eov
	ALPHA_CUTOFF a
	EFFECT_DEPTH d
	SHADOW_OFFSET e
	filterFishyGlyphs g
	fonts f
	lineHeight b
	random c
	splitter h
	adjustColor (I)I a
	bidirectionalShaping (Ljava/lang/String;)Ljava/lang/String; a
	drawInBatch (Ljava/lang/String;FFIZLorg/joml/Matrix4f;Lnet/minecraft/client/renderer/MultiBufferSource;Lnet/minecraft/client/gui/Font$DisplayMode;II)I a
	drawInBatch (Ljava/lang/String;FFIZLorg/joml/Matrix4f;Lnet/minecraft/client/renderer/MultiBufferSource;Lnet/minecraft/client/gui/Font$DisplayMode;IIZ)I a
	drawInBatch (Lnet/minecraft/network/chat/Component;FFIZLorg/joml/Matrix4f;Lnet/minecraft/client/renderer/MultiBufferSource;Lnet/minecraft/client/gui/Font$DisplayMode;II)I a
	drawInBatch (Lnet/minecraft/util/FormattedCharSequence;FFIZLorg/joml/Matrix4f;Lnet/minecraft/client/renderer/MultiBufferSource;Lnet/minecraft/client/gui/Font$DisplayMode;II)I a
	drawInBatch8xOutline (Lnet/minecraft/util/FormattedCharSequence;FFIILorg/joml/Matrix4f;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	drawInternal (Ljava/lang/String;FFIZLorg/joml/Matrix4f;Lnet/minecraft/client/renderer/MultiBufferSource;Lnet/minecraft/client/gui/Font$DisplayMode;IIZ)I b
	drawInternal (Lnet/minecraft/util/FormattedCharSequence;FFIZLorg/joml/Matrix4f;Lnet/minecraft/client/renderer/MultiBufferSource;Lnet/minecraft/client/gui/Font$DisplayMode;II)I b
	getFontSet (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/client/gui/font/FontSet; a
	getSplitter ()Lnet/minecraft/client/StringSplitter; b
	isBidirectional ()Z a
	plainSubstrByWidth (Ljava/lang/String;I)Ljava/lang/String; a
	plainSubstrByWidth (Ljava/lang/String;IZ)Ljava/lang/String; a
	renderChar (Lnet/minecraft/client/gui/font/glyphs/BakedGlyph;ZZFFFLorg/joml/Matrix4f;Lcom/mojang/blaze3d/vertex/VertexConsumer;FFFFI)V a
	renderText (Ljava/lang/String;FFIZLorg/joml/Matrix4f;Lnet/minecraft/client/renderer/MultiBufferSource;Lnet/minecraft/client/gui/Font$DisplayMode;II)F b
	renderText (Lnet/minecraft/util/FormattedCharSequence;FFIZLorg/joml/Matrix4f;Lnet/minecraft/client/renderer/MultiBufferSource;Lnet/minecraft/client/gui/Font$DisplayMode;II)F c
	split (Lnet/minecraft/network/chat/FormattedText;I)Ljava/util/List; c
	substrByWidth (Lnet/minecraft/network/chat/FormattedText;I)Lnet/minecraft/network/chat/FormattedText; a
	width (Ljava/lang/String;)I b
	width (Lnet/minecraft/network/chat/FormattedText;)I a
	width (Lnet/minecraft/util/FormattedCharSequence;)I a
	wordWrapHeight (Ljava/lang/String;I)I b
	wordWrapHeight (Lnet/minecraft/network/chat/FormattedText;I)I b
net/minecraft/client/gui/Font$DisplayMode eov$a
	$VALUES d
	NORMAL a
	POLYGON_OFFSET c
	SEE_THROUGH b
	$values ()[Lnet/minecraft/client/gui/Font$DisplayMode; a
net/minecraft/client/gui/Font$StringRenderOutput eov$b
	a h
	b g
	bufferSource a
	dimFactor d
	dropShadow c
	effects n
	g f
	mode j
	packedLightCoords k
	pose i
	r e
	x l
	y m
	addEffect (Lnet/minecraft/client/gui/font/glyphs/BakedGlyph$Effect;)V a
	finish (IF)F a
net/minecraft/client/gui/Gui eow
	AUTOSAVE_FADE_SPEED_FACTOR r
	COLOR_WHITE j
	DEMO_EXPIRED_TEXT h
	GUI_ICONS_LOCATION g
	HEART_SEPARATION q
	HEART_SIZE p
	LINE_HEIGHT m
	MIN_CROSSHAIR_ATTACK_SPEED k
	NUM_HEARTS_PER_ROW l
	PORTAL_OVERLAY_ALPHA_MIN o
	POWDER_SNOW_OUTLINE_LOCATION f
	PUMPKIN_BLUR_LOCATION d
	SAVING_TEXT i
	SPACER n
	SPYGLASS_SCOPE_LOCATION e
	VIGNETTE_LOCATION b
	WIDGETS_LOCATION c
	animateOverlayMessageColor z
	autosaveIndicatorValue U
	bossOverlay H
	chat v
	chatDisabledByPlayerShown A
	debugScreen D
	displayHealth P
	healthBlinkTime R
	itemRenderer u
	lastAutosaveIndicatorValue V
	lastHealth O
	lastHealthTime Q
	lastToolHighlight C
	minecraft t
	overlayMessageString x
	overlayMessageTime y
	random s
	scopeScale W
	screenHeight T
	screenWidth S
	spectatorGui F
	subtitle K
	subtitleOverlay E
	tabList G
	tickCount w
	title J
	titleFadeInTime L
	titleFadeOutTime N
	titleStayTime M
	titleTime I
	toolHighlightTimer B
	vignetteBrightness a
	canRenderCrosshairForSpectator (Lnet/minecraft/world/phys/HitResult;)Z a
	clear ()V c
	clearCache ()V k
	displayScoreboardSidebar (Lnet/minecraft/client/gui/GuiGraphics;Lnet/minecraft/world/scores/Objective;)V a
	drawBackdrop (Lnet/minecraft/client/gui/GuiGraphics;Lnet/minecraft/client/gui/Font;III)V a
	getBossOverlay ()Lnet/minecraft/client/gui/components/BossHealthOverlay; j
	getCameraPlayer ()Lnet/minecraft/world/entity/player/Player; l
	getChat ()Lnet/minecraft/client/gui/components/ChatComponent; d
	getFont ()Lnet/minecraft/client/gui/Font; f
	getGuiTicks ()I e
	getPlayerVehicleWithHealth ()Lnet/minecraft/world/entity/LivingEntity; m
	getSpectatorGui ()Lnet/minecraft/client/gui/components/spectator/SpectatorGui; g
	getTabList ()Lnet/minecraft/client/gui/components/PlayerTabOverlay; h
	getVehicleMaxHearts (Lnet/minecraft/world/entity/LivingEntity;)I a
	getVisibleVehicleHeartRows (I)I a
	isShowingChatDisabledByPlayer ()Z b
	onDisconnected ()V i
	render (Lnet/minecraft/client/gui/GuiGraphics;F)V a
	renderCrosshair (Lnet/minecraft/client/gui/GuiGraphics;)V d
	renderDemoOverlay (Lnet/minecraft/client/gui/GuiGraphics;)V c
	renderEffects (Lnet/minecraft/client/gui/GuiGraphics;)V a
	renderExperienceBar (Lnet/minecraft/client/gui/GuiGraphics;I)V a
	renderHeart (Lnet/minecraft/client/gui/GuiGraphics;Lnet/minecraft/client/gui/Gui$HeartType;IIIZZ)V a
	renderHearts (Lnet/minecraft/client/gui/GuiGraphics;Lnet/minecraft/world/entity/player/Player;IIIIFIIIZ)V a
	renderHotbar (FLnet/minecraft/client/gui/GuiGraphics;)V a
	renderJumpMeter (Lnet/minecraft/world/entity/PlayerRideableJumping;Lnet/minecraft/client/gui/GuiGraphics;I)V a
	renderPlayerHealth (Lnet/minecraft/client/gui/GuiGraphics;)V e
	renderPortalOverlay (Lnet/minecraft/client/gui/GuiGraphics;F)V c
	renderSavingIndicator (Lnet/minecraft/client/gui/GuiGraphics;)V g
	renderSelectedItemName (Lnet/minecraft/client/gui/GuiGraphics;)V b
	renderSlot (Lnet/minecraft/client/gui/GuiGraphics;IIFLnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/item/ItemStack;I)V a
	renderSpyglassOverlay (Lnet/minecraft/client/gui/GuiGraphics;F)V b
	renderTextureOverlay (Lnet/minecraft/client/gui/GuiGraphics;Lnet/minecraft/resources/ResourceLocation;F)V a
	renderVehicleHealth (Lnet/minecraft/client/gui/GuiGraphics;)V f
	renderVignette (Lnet/minecraft/client/gui/GuiGraphics;Lnet/minecraft/world/entity/Entity;)V a
	resetTitleTimes ()V a
	setChatDisabledByPlayerShown (Z)V b
	setNowPlaying (Lnet/minecraft/network/chat/Component;)V a
	setOverlayMessage (Lnet/minecraft/network/chat/Component;Z)V a
	setSubtitle (Lnet/minecraft/network/chat/Component;)V b
	setTimes (III)V a
	setTitle (Lnet/minecraft/network/chat/Component;)V c
	tick ()V n
	tick (Z)V a
	tickAutosaveIndicator ()V o
	updateVignetteBrightness (Lnet/minecraft/world/entity/Entity;)V a
net/minecraft/client/gui/Gui$HeartType eow$a
	$VALUES i
	ABSORBING e
	CONTAINER a
	FROZEN f
	NORMAL b
	POISIONED c
	WITHERED d
	canBlink h
	index g
	$values ()[Lnet/minecraft/client/gui/Gui$HeartType; a
	forPlayer (Lnet/minecraft/world/entity/player/Player;)Lnet/minecraft/client/gui/Gui$HeartType; a
	getX (ZZ)I a
net/minecraft/client/gui/GuiGraphics eox
	EXTRA_SPACE_AFTER_FIRST_TOOLTIP_LINE c
	MAX_GUI_Z a
	MIN_GUI_Z b
	bufferSource f
	managed h
	minecraft d
	pose e
	scissorStack g
	applyScissor (Lnet/minecraft/client/gui/navigation/ScreenRectangle;)V a
	blit (IIIIILnet/minecraft/client/renderer/texture/TextureAtlasSprite;)V a
	blit (IIIIILnet/minecraft/client/renderer/texture/TextureAtlasSprite;FFFF)V a
	blit (Lnet/minecraft/resources/ResourceLocation;IIFFIIII)V a
	blit (Lnet/minecraft/resources/ResourceLocation;IIIFFIIII)V a
	blit (Lnet/minecraft/resources/ResourceLocation;IIIIFFIIII)V a
	blit (Lnet/minecraft/resources/ResourceLocation;IIIIII)V a
	blit (Lnet/minecraft/resources/ResourceLocation;IIIIIIIFFII)V a
	blitNineSliced (Lnet/minecraft/resources/ResourceLocation;IIIIIIIII)V a
	blitNineSliced (Lnet/minecraft/resources/ResourceLocation;IIIIIIIIII)V a
	blitNineSliced (Lnet/minecraft/resources/ResourceLocation;IIIIIIIIIIII)V a
	blitRepeating (Lnet/minecraft/resources/ResourceLocation;IIIIIIII)V a
	bufferSource ()Lnet/minecraft/client/renderer/MultiBufferSource$BufferSource; d
	disableScissor ()V f
	drawCenteredString (Lnet/minecraft/client/gui/Font;Ljava/lang/String;III)V a
	drawCenteredString (Lnet/minecraft/client/gui/Font;Lnet/minecraft/network/chat/Component;III)V a
	drawCenteredString (Lnet/minecraft/client/gui/Font;Lnet/minecraft/util/FormattedCharSequence;III)V a
	drawManaged (Ljava/lang/Runnable;)V a
	drawString (Lnet/minecraft/client/gui/Font;Ljava/lang/String;III)I b
	drawString (Lnet/minecraft/client/gui/Font;Ljava/lang/String;IIIZ)I a
	drawString (Lnet/minecraft/client/gui/Font;Lnet/minecraft/network/chat/Component;III)I b
	drawString (Lnet/minecraft/client/gui/Font;Lnet/minecraft/network/chat/Component;IIIZ)I a
	drawString (Lnet/minecraft/client/gui/Font;Lnet/minecraft/util/FormattedCharSequence;III)I b
	drawString (Lnet/minecraft/client/gui/Font;Lnet/minecraft/util/FormattedCharSequence;IIIZ)I a
	drawWordWrap (Lnet/minecraft/client/gui/Font;Lnet/minecraft/network/chat/FormattedText;IIII)V a
	enableScissor (IIII)V c
	fill (IIIII)V a
	fill (IIIIII)V a
	fill (Lnet/minecraft/client/renderer/RenderType;IIIII)V a
	fill (Lnet/minecraft/client/renderer/RenderType;IIIIII)V a
	fillGradient (IIIIII)V b
	fillGradient (IIIIIII)V a
	fillGradient (Lcom/mojang/blaze3d/vertex/VertexConsumer;IIIIIII)V a
	fillGradient (Lnet/minecraft/client/renderer/RenderType;IIIIIII)V a
	flush ()V e
	flushIfManaged ()V h
	flushIfUnmanaged ()V g
	guiHeight ()I b
	guiWidth ()I a
	hLine (IIII)V a
	hLine (Lnet/minecraft/client/renderer/RenderType;IIII)V a
	innerBlit (Lnet/minecraft/resources/ResourceLocation;IIIIIFFFF)V a
	innerBlit (Lnet/minecraft/resources/ResourceLocation;IIIIIFFFFFFFF)V a
	pose ()Lcom/mojang/blaze3d/vertex/PoseStack; c
	renderComponentHoverEffect (Lnet/minecraft/client/gui/Font;Lnet/minecraft/network/chat/Style;II)V a
	renderComponentTooltip (Lnet/minecraft/client/gui/Font;Ljava/util/List;II)V a
	renderFakeItem (Lnet/minecraft/world/item/ItemStack;II)V b
	renderItem (Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/item/ItemStack;III)V a
	renderItem (Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/level/Level;Lnet/minecraft/world/item/ItemStack;III)V a
	renderItem (Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/level/Level;Lnet/minecraft/world/item/ItemStack;IIII)V a
	renderItem (Lnet/minecraft/world/item/ItemStack;II)V a
	renderItem (Lnet/minecraft/world/item/ItemStack;III)V a
	renderItem (Lnet/minecraft/world/item/ItemStack;IIII)V a
	renderItemDecorations (Lnet/minecraft/client/gui/Font;Lnet/minecraft/world/item/ItemStack;II)V a
	renderItemDecorations (Lnet/minecraft/client/gui/Font;Lnet/minecraft/world/item/ItemStack;IILjava/lang/String;)V a
	renderOutline (IIIII)V b
	renderTooltip (Lnet/minecraft/client/gui/Font;Ljava/util/List;II)V b
	renderTooltip (Lnet/minecraft/client/gui/Font;Ljava/util/List;Ljava/util/Optional;II)V a
	renderTooltip (Lnet/minecraft/client/gui/Font;Ljava/util/List;Lnet/minecraft/client/gui/screens/inventory/tooltip/ClientTooltipPositioner;II)V a
	renderTooltip (Lnet/minecraft/client/gui/Font;Lnet/minecraft/network/chat/Component;II)V a
	renderTooltip (Lnet/minecraft/client/gui/Font;Lnet/minecraft/world/item/ItemStack;II)V b
	renderTooltipInternal (Lnet/minecraft/client/gui/Font;Ljava/util/List;IILnet/minecraft/client/gui/screens/inventory/tooltip/ClientTooltipPositioner;)V a
	setColor (FFFF)V a
	slices (II)Lit/unimi/dsi/fastutil/ints/IntIterator; a
	vLine (IIII)V b
	vLine (Lnet/minecraft/client/renderer/RenderType;IIII)V b
net/minecraft/client/gui/GuiGraphics$ScissorStack eox$a
	stack a
	pop ()Lnet/minecraft/client/gui/navigation/ScreenRectangle; a
	push (Lnet/minecraft/client/gui/navigation/ScreenRectangle;)Lnet/minecraft/client/gui/navigation/ScreenRectangle; a
net/minecraft/client/gui/MapRenderer eoy
	HEIGHT d
	MAP_ICONS b
	MAP_ICONS_LOCATION a
	WIDTH c
	maps f
	textureManager e
	getOrCreateMapInstance (ILnet/minecraft/world/level/saveddata/maps/MapItemSavedData;)Lnet/minecraft/client/gui/MapRenderer$MapInstance; b
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;ILnet/minecraft/world/level/saveddata/maps/MapItemSavedData;ZI)V a
	resetData ()V a
	update (ILnet/minecraft/world/level/saveddata/maps/MapItemSavedData;)V a
net/minecraft/client/gui/MapRenderer$MapInstance eoy$a
	data b
	renderType d
	requiresUpload e
	texture c
	draw (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;ZI)V a
	forceUpload ()V a
	replaceMapData (Lnet/minecraft/world/level/saveddata/maps/MapItemSavedData;)V a
	updateTexture ()V b
net/minecraft/client/gui/components/AbstractButton eoz
	TEXTURE_BORDER_X j
	TEXTURE_BORDER_Y k
	TEXTURE_HEIGHT i
	TEXTURE_WIDTH h
	TEXTURE_Y_OFFSET g
	TEXT_MARGIN l
	getTextureY ()I a
	keyPressed (III)Z a
	onClick (DD)V a
	onPress ()V c
	renderString (Lnet/minecraft/client/gui/GuiGraphics;Lnet/minecraft/client/gui/Font;I)V a
	renderWidget (Lnet/minecraft/client/gui/GuiGraphics;IIF)V b
net/minecraft/client/gui/components/AbstractOptionSliderButton epa
	options a
net/minecraft/client/gui/components/AbstractScrollWidget epb
	BACKGROUND_COLOR c
	BORDER_COLOR b
	BORDER_COLOR_FOCUSED a
	INNER_PADDING d
	scrollAmount e
	scrolling f
	getContentHeight ()I w
	getInnerHeight ()I f
	getMaxScrollAmount ()I d
	getScrollBarHeight ()I v
	innerPadding ()I a
	keyPressed (III)Z a
	mouseClicked (DDI)Z a
	mouseDragged (DDIDD)Z a
	mouseReleased (DDI)Z b
	mouseScrolled (DDD)Z a
	renderBackground (Lnet/minecraft/client/gui/GuiGraphics;)V b
	renderBorder (Lnet/minecraft/client/gui/GuiGraphics;IIII)V a
	renderContents (Lnet/minecraft/client/gui/GuiGraphics;IIF)V c
	renderDecorations (Lnet/minecraft/client/gui/GuiGraphics;)V a
	renderScrollBar (Lnet/minecraft/client/gui/GuiGraphics;)V c
	renderWidget (Lnet/minecraft/client/gui/GuiGraphics;IIF)V b
	scrollAmount ()D c
	scrollRate ()D g
	scrollbarVisible ()Z e
	setScrollAmount (D)V a
	totalInnerPadding ()I b
	withinContentAreaPoint (DD)Z c
	withinContentAreaTopBottom (II)Z a
net/minecraft/client/gui/components/AbstractSelectionList epc
	centerListVertically j
	children a
	headerHeight k
	height e
	hovered s
	itemHeight c
	minecraft b
	renderBackground q
	renderHeader n
	renderSelection m
	renderTopAndBottom r
	scrollAmount l
	scrolling o
	selected p
	width d
	x0 i
	x1 h
	y0 f
	y1 g
	addEntry (Lnet/minecraft/client/gui/components/AbstractSelectionList$Entry;)I b
	addEntryToTop (Lnet/minecraft/client/gui/components/AbstractSelectionList$Entry;)V c
	bindEntryToSelf (Lnet/minecraft/client/gui/components/AbstractSelectionList$Entry;)V h
	centerScrollOn (Lnet/minecraft/client/gui/components/AbstractSelectionList$Entry;)V e
	children ()Ljava/util/List; i
	clearEntries ()V j
	clickedHeader (II)V a
	enableScissor (Lnet/minecraft/client/gui/GuiGraphics;)V b
	ensureVisible (Lnet/minecraft/client/gui/components/AbstractSelectionList$Entry;)V f
	getEntry (I)Lnet/minecraft/client/gui/components/AbstractSelectionList$Entry; d
	getEntryAtPosition (DD)Lnet/minecraft/client/gui/components/AbstractSelectionList$Entry; a
	getFirstElement ()Lnet/minecraft/client/gui/components/AbstractSelectionList$Entry; g
	getFocused ()Lnet/minecraft/client/gui/components/AbstractSelectionList$Entry; h
	getFocused ()Lnet/minecraft/client/gui/components/events/GuiEventListener; t
	getHovered ()Lnet/minecraft/client/gui/components/AbstractSelectionList$Entry; r
	getItemCount ()I k
	getMaxPosition ()I a
	getMaxScroll ()I m
	getRectangle ()Lnet/minecraft/client/gui/navigation/ScreenRectangle; s
	getRowBottom (I)I h
	getRowLeft ()I o
	getRowRight ()I p
	getRowTop (I)I g
	getRowWidth ()I b
	getScrollAmount ()D l
	getScrollBottom ()I n
	getScrollbarPosition ()I c
	getSelected ()Lnet/minecraft/client/gui/components/AbstractSelectionList$Entry; f
	isMouseOver (DD)Z a_
	isSelectedItem (I)Z e
	mouseClicked (DDI)Z a
	mouseDragged (DDIDD)Z a
	mouseReleased (DDI)Z b
	mouseScrolled (DDD)Z a
	narrateListElementPosition (Lnet/minecraft/client/gui/narration/NarrationElementOutput;Lnet/minecraft/client/gui/components/AbstractSelectionList$Entry;)V a
	narrationPriority ()Lnet/minecraft/client/gui/narration/NarratableEntry$NarrationPriority; q
	nextEntry (Lnet/minecraft/client/gui/navigation/ScreenDirection;)Lnet/minecraft/client/gui/components/AbstractSelectionList$Entry; a
	nextEntry (Lnet/minecraft/client/gui/navigation/ScreenDirection;Ljava/util/function/Predicate;)Lnet/minecraft/client/gui/components/AbstractSelectionList$Entry; a
	nextEntry (Lnet/minecraft/client/gui/navigation/ScreenDirection;Ljava/util/function/Predicate;Lnet/minecraft/client/gui/components/AbstractSelectionList$Entry;)Lnet/minecraft/client/gui/components/AbstractSelectionList$Entry; a
	remove (I)Lnet/minecraft/client/gui/components/AbstractSelectionList$Entry; i
	removeEntry (Lnet/minecraft/client/gui/components/AbstractSelectionList$Entry;)Z g
	removeEntryFromTop (Lnet/minecraft/client/gui/components/AbstractSelectionList$Entry;)Z d
	render (Lnet/minecraft/client/gui/GuiGraphics;IIF)V a
	renderBackground (Lnet/minecraft/client/gui/GuiGraphics;)V a
	renderDecorations (Lnet/minecraft/client/gui/GuiGraphics;II)V b
	renderHeader (Lnet/minecraft/client/gui/GuiGraphics;II)V a
	renderItem (Lnet/minecraft/client/gui/GuiGraphics;IIFIIIII)V a
	renderList (Lnet/minecraft/client/gui/GuiGraphics;IIF)V b
	renderSelection (Lnet/minecraft/client/gui/GuiGraphics;IIIII)V a
	replaceEntries (Ljava/util/Collection;)V a
	scroll (I)V a
	setFocused (Lnet/minecraft/client/gui/components/events/GuiEventListener;)V a
	setLeftPos (I)V f
	setRenderBackground (Z)V b
	setRenderHeader (ZI)V a
	setRenderSelection (Z)V a
	setRenderTopAndBottom (Z)V c
	setScrollAmount (D)V a
	setSelected (Lnet/minecraft/client/gui/components/AbstractSelectionList$Entry;)V a
	updateScrollingState (DDI)V c
	updateSize (IIII)V a
net/minecraft/client/gui/components/AbstractSelectionList$Entry epc$a
	list a
	isFocused ()Z aB_
	isMouseOver (DD)Z a_
	render (Lnet/minecraft/client/gui/GuiGraphics;IIIIIIIZF)V a
	renderBack (Lnet/minecraft/client/gui/GuiGraphics;IIIIIIIZF)V b
	setFocused (Z)V b_
net/minecraft/client/gui/components/AbstractSelectionList$TrackedList epc$b
	delegate b
	add (ILnet/minecraft/client/gui/components/AbstractSelectionList$Entry;)V b
	get (I)Lnet/minecraft/client/gui/components/AbstractSelectionList$Entry; a
	remove (I)Lnet/minecraft/client/gui/components/AbstractSelectionList$Entry; b
	set (ILnet/minecraft/client/gui/components/AbstractSelectionList$Entry;)Lnet/minecraft/client/gui/components/AbstractSelectionList$Entry; a
net/minecraft/client/gui/components/AbstractSliderButton epd
	BACKGROUND k
	BACKGROUND_FOCUSED l
	HANDLE u
	HANDLE_FOCUSED v
	HANDLE_HALF_WIDTH i
	HANDLE_WIDTH j
	HEIGHT h
	SLIDER_LOCATION a
	TEXTURE_BORDER_X d
	TEXTURE_BORDER_Y e
	TEXTURE_HEIGHT c
	TEXTURE_WIDTH b
	TEXT_MARGIN f
	canChangeValue w
	value g
	applyValue ()V a
	createNarrationMessage ()Lnet/minecraft/network/chat/MutableComponent; aE_
	getHandleTextureY ()I f
	getTextureY ()I e
	keyPressed (III)Z a
	onClick (DD)V a
	onDrag (DDDD)V a
	onRelease (DD)V b
	playDownSound (Lnet/minecraft/client/sounds/SoundManager;)V a
	renderWidget (Lnet/minecraft/client/gui/GuiGraphics;IIF)V b
	setFocused (Z)V b_
	setValue (D)V b
	setValueFromMouse (D)V a
	updateMessage ()V b
	updateWidgetNarration (Lnet/minecraft/client/gui/narration/NarrationElementOutput;)V a
net/minecraft/client/gui/components/AbstractStringWidget epe
	color b
	font a
	getColor ()I b
	getFont ()Lnet/minecraft/client/gui/Font; a
	setColor (I)Lnet/minecraft/client/gui/components/AbstractStringWidget; a
	updateWidgetNarration (Lnet/minecraft/client/gui/narration/NarrationElementOutput;)V a
net/minecraft/client/gui/components/AbstractWidget epf
	ACCESSIBILITY_TEXTURE n
	MIN_SCROLL_PERIOD b
	PERIOD_PER_SCROLLED_PIXEL a
	WIDGETS_LOCATION m
	active r
	alpha t
	focused g
	height p
	hoverOrFocusedStartTime j
	isHovered q
	message e
	tabOrderGroup f
	tooltip h
	tooltipMsDelay i
	visible s
	wasHoveredOrFocused k
	width o
	x c
	y d
	clicked (DD)Z d
	createNarrationMessage ()Lnet/minecraft/network/chat/MutableComponent; aE_
	createTooltipPositioner ()Lnet/minecraft/client/gui/screens/inventory/tooltip/ClientTooltipPositioner; i
	defaultButtonNarrationText (Lnet/minecraft/client/gui/narration/NarrationElementOutput;)V c
	getHeight ()I h
	getMessage ()Lnet/minecraft/network/chat/Component; l
	getRectangle ()Lnet/minecraft/client/gui/navigation/ScreenRectangle; s
	getTabOrderGroup ()I aC_
	getTooltip ()Lnet/minecraft/client/gui/components/Tooltip; j
	getWidth ()I k
	getX ()I p
	getY ()I r
	isActive ()Z aD_
	isFocused ()Z aB_
	isHovered ()Z m
	isHoveredOrFocused ()Z n
	isMouseOver (DD)Z a_
	isValidClickButton (I)Z c
	mouseClicked (DDI)Z a
	mouseDragged (DDIDD)Z a
	mouseReleased (DDI)Z b
	narrationPriority ()Lnet/minecraft/client/gui/narration/NarratableEntry$NarrationPriority; q
	nextFocusPath (Lnet/minecraft/client/gui/navigation/FocusNavigationEvent;)Lnet/minecraft/client/gui/ComponentPath; a
	onClick (DD)V a
	onDrag (DDDD)V a
	onRelease (DD)V b
	playDownSound (Lnet/minecraft/client/sounds/SoundManager;)V a
	render (Lnet/minecraft/client/gui/GuiGraphics;IIF)V a
	renderScrollingString (Lnet/minecraft/client/gui/GuiGraphics;Lnet/minecraft/client/gui/Font;II)V a
	renderScrollingString (Lnet/minecraft/client/gui/GuiGraphics;Lnet/minecraft/client/gui/Font;Lnet/minecraft/network/chat/Component;IIIII)V a
	renderTexture (Lnet/minecraft/client/gui/GuiGraphics;Lnet/minecraft/resources/ResourceLocation;IIIIIIIII)V a
	renderWidget (Lnet/minecraft/client/gui/GuiGraphics;IIF)V b
	setAlpha (F)V a
	setFocused (Z)V b_
	setMessage (Lnet/minecraft/network/chat/Component;)V b
	setTabOrderGroup (I)V g
	setTooltip (Lnet/minecraft/client/gui/components/Tooltip;)V a
	setTooltipDelay (I)V b
	setWidth (I)V d
	setX (I)V e
	setY (I)V f
	updateNarration (Lnet/minecraft/client/gui/narration/NarrationElementOutput;)V b
	updateTooltip ()V a
	updateWidgetNarration (Lnet/minecraft/client/gui/narration/NarrationElementOutput;)V a
	visitWidgets (Ljava/util/function/Consumer;)V a
	wrapDefaultNarrationMessage (Lnet/minecraft/network/chat/Component;)Lnet/minecraft/network/chat/MutableComponent; a
net/minecraft/client/gui/components/AccessibilityOnboardingTextWidget epg
	BACKGROUND_COLOR c
	BORDER e
	BORDER_COLOR b
	BORDER_COLOR_FOCUSED a
	PADDING d
	playDownSound (Lnet/minecraft/client/sounds/SoundManager;)V a
	renderWidget (Lnet/minecraft/client/gui/GuiGraphics;IIF)V b
	updateWidgetNarration (Lnet/minecraft/client/gui/narration/NarrationElementOutput;)V a
net/minecraft/client/gui/components/BossHealthOverlay eph
	BAR_HEIGHT c
	BAR_WIDTH b
	GUI_BARS_LOCATION a
	OVERLAY_OFFSET d
	events f
	minecraft e
	drawBar (Lnet/minecraft/client/gui/GuiGraphics;IILnet/minecraft/world/BossEvent;)V a
	drawBar (Lnet/minecraft/client/gui/GuiGraphics;IILnet/minecraft/world/BossEvent;II)V a
	render (Lnet/minecraft/client/gui/GuiGraphics;)V a
	reset ()V a
	shouldCreateWorldFog ()Z d
	shouldDarkenScreen ()Z c
	shouldPlayMusic ()Z b
	update (Lnet/minecraft/network/protocol/game/ClientboundBossEventPacket;)V a
net/minecraft/client/gui/components/Button epi
	DEFAULT_HEIGHT w
	DEFAULT_NARRATION x
	DEFAULT_WIDTH v
	SMALL_WIDTH u
	createNarration z
	onPress y
	builder (Lnet/minecraft/network/chat/Component;Lnet/minecraft/client/gui/components/Button$OnPress;)Lnet/minecraft/client/gui/components/Button$Builder; a
	createNarrationMessage ()Lnet/minecraft/network/chat/MutableComponent; aE_
	onPress ()V c
	updateWidgetNarration (Lnet/minecraft/client/gui/narration/NarrationElementOutput;)V a
net/minecraft/client/gui/components/Button$Builder epi$a
	createNarration h
	height g
	message a
	onPress b
	tooltip c
	width f
	x d
	y e
	bounds (IIII)Lnet/minecraft/client/gui/components/Button$Builder; a
	build ()Lnet/minecraft/client/gui/components/Button; a
	createNarration (Lnet/minecraft/client/gui/components/Button$CreateNarration;)Lnet/minecraft/client/gui/components/Button$Builder; a
	pos (II)Lnet/minecraft/client/gui/components/Button$Builder; a
	size (II)Lnet/minecraft/client/gui/components/Button$Builder; b
	tooltip (Lnet/minecraft/client/gui/components/Tooltip;)Lnet/minecraft/client/gui/components/Button$Builder; a
	width (I)Lnet/minecraft/client/gui/components/Button$Builder; a
net/minecraft/client/gui/components/Button$CreateNarration epi$b
net/minecraft/client/gui/components/Button$OnPress epi$c
net/minecraft/client/gui/components/ChatComponent epj
	BOTTOM_MARGIN f
	DELETED_CHAT_MESSAGE h
	LOGGER a
	MAX_CHAT_HISTORY b
	MESSAGE_INDENT d
	MESSAGE_NOT_FOUND c
	MESSAGE_TAG_MARGIN_LEFT e
	TIME_BEFORE_MESSAGE_DELETION g
	allMessages k
	chatScrollbarPos m
	messageDeletionQueue o
	minecraft i
	newMessageSinceScroll n
	recentChat j
	trimmedMessages l
	addMessage (Lnet/minecraft/network/chat/Component;)V a
	addMessage (Lnet/minecraft/network/chat/Component;Lnet/minecraft/network/chat/MessageSignature;ILnet/minecraft/client/GuiMessageTag;Z)V a
	addMessage (Lnet/minecraft/network/chat/Component;Lnet/minecraft/network/chat/MessageSignature;Lnet/minecraft/client/GuiMessageTag;)V a
	addRecentChat (Ljava/lang/String;)V a
	clearMessages (Z)V a
	createDeletedMarker (Lnet/minecraft/client/GuiMessage;)Lnet/minecraft/client/GuiMessage; a
	defaultUnfocusedPct ()D h
	deleteMessage (Lnet/minecraft/network/chat/MessageSignature;)V a
	deleteMessageOrDelay (Lnet/minecraft/network/chat/MessageSignature;)Lnet/minecraft/client/gui/components/ChatComponent$DelayedMessageDeletion; b
	drawTagIcon (Lnet/minecraft/client/gui/GuiGraphics;IILnet/minecraft/client/GuiMessageTag$Icon;)V a
	getClickedComponentStyleAt (DD)Lnet/minecraft/network/chat/Style; b
	getHeight ()I f
	getHeight (D)I b
	getLineHeight ()I n
	getLinesPerPage ()I i
	getMessageEndIndexAt (DD)I d
	getMessageLineIndexAt (DD)I e
	getMessageTagAt (DD)Lnet/minecraft/client/GuiMessageTag; c
	getRecentChat ()Ljava/util/List; c
	getScale ()D g
	getTagIconLeft (Lnet/minecraft/client/GuiMessage$Line;)I a
	getTimeFactor (I)D b
	getWidth ()I e
	getWidth (D)I a
	handleChatQueueClicked (DD)Z a
	hasSelectedMessageTag (DLnet/minecraft/client/GuiMessage$Line;Lnet/minecraft/client/GuiMessageTag;)Z a
	isChatFocused ()Z m
	isChatHidden ()Z j
	logChatMessage (Lnet/minecraft/network/chat/Component;Lnet/minecraft/client/GuiMessageTag;)V a
	processMessageDeletionQueue ()V k
	refreshTrimmedMessage ()V l
	render (Lnet/minecraft/client/gui/GuiGraphics;III)V a
	rescaleChat ()V b
	resetChatScroll ()V d
	screenToChatX (D)D c
	screenToChatY (D)D d
	scrollChat (I)V a
	tick ()V a
net/minecraft/client/gui/components/ChatComponent$DelayedMessageDeletion epj$a
	deletableAfter b
	signature a
	deletableAfter ()I b
	signature ()Lnet/minecraft/network/chat/MessageSignature; a
net/minecraft/client/gui/components/Checkbox epk
	TEXTURE a
	TEXT_COLOR b
	selected c
	showLabel d
	onPress ()V c
	renderWidget (Lnet/minecraft/client/gui/GuiGraphics;IIF)V b
	selected ()Z a
	updateWidgetNarration (Lnet/minecraft/client/gui/narration/NarrationElementOutput;)V a
net/minecraft/client/gui/components/CommandSuggestions epl
	ARGUMENT_STYLES d
	LITERAL_STYLE c
	UNPARSED_STYLE b
	WHITESPACE_PATTERN a
	allowSuggestions u
	anchorToBottom m
	commandUsage o
	commandUsagePosition p
	commandUsageWidth q
	commandsOnly i
	currentParse r
	fillColor n
	font h
	input g
	keepSuggestions v
	lineStartOffset k
	minecraft e
	onlyShowIfCursorPastError j
	pendingSuggestions s
	screen f
	suggestionLineLimit l
	suggestions t
	calculateSuggestionSuffix (Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; a
	fillNodeUsage (Lnet/minecraft/ChatFormatting;)Z a
	formatChat (Ljava/lang/String;I)Lnet/minecraft/util/FormattedCharSequence; a
	formatText (Lcom/mojang/brigadier/ParseResults;Ljava/lang/String;I)Lnet/minecraft/util/FormattedCharSequence; a
	getExceptionMessage (Lcom/mojang/brigadier/exceptions/CommandSyntaxException;)Lnet/minecraft/util/FormattedCharSequence; a
	getLastWordIndex (Ljava/lang/String;)I a
	getNarrationMessage ()Lnet/minecraft/network/chat/Component; c
	hide ()V a
	keyPressed (III)Z a
	mouseClicked (DDI)Z a
	mouseScrolled (D)Z a
	render (Lnet/minecraft/client/gui/GuiGraphics;II)V a
	renderSuggestions (Lnet/minecraft/client/gui/GuiGraphics;II)Z b
	renderUsage (Lnet/minecraft/client/gui/GuiGraphics;)V a
	setAllowSuggestions (Z)V a
	showSuggestions (Z)V b
	sortSuggestions (Lcom/mojang/brigadier/suggestion/Suggestions;)Ljava/util/List; a
	updateCommandInfo ()V b
	updateUsageInfo ()V d
net/minecraft/client/gui/components/CommandSuggestions$SuggestionsList epl$a
	current f
	lastMouse g
	lastNarratedEntry i
	offset e
	originalContents c
	rect b
	suggestionList d
	tabCycles h
	cycle (I)V a
	getNarrationMessage ()Lnet/minecraft/network/chat/Component; b
	keyPressed (III)Z b
	mouseClicked (III)Z a
	mouseScrolled (D)Z a
	render (Lnet/minecraft/client/gui/GuiGraphics;II)V a
	select (I)V b
	useSuggestion ()V a
net/minecraft/client/gui/components/CommonButtons epm
	accessibilityTextAndImage (Lnet/minecraft/client/gui/components/Button$OnPress;)Lnet/minecraft/client/gui/components/TextAndImageButton; b
	languageTextAndImage (Lnet/minecraft/client/gui/components/Button$OnPress;)Lnet/minecraft/client/gui/components/TextAndImageButton; a
net/minecraft/client/gui/components/ComponentRenderUtils epn
	INDENT a
	stripColor (Ljava/lang/String;)Ljava/lang/String; a
	wrapComponents (Lnet/minecraft/network/chat/FormattedText;ILnet/minecraft/client/gui/Font;)Ljava/util/List; a
net/minecraft/client/gui/components/ContainerObjectSelectionList epo
	isSelectedItem (I)Z e
	narrationPriority ()Lnet/minecraft/client/gui/narration/NarratableEntry$NarrationPriority; q
	nextFocusPath (Lnet/minecraft/client/gui/navigation/FocusNavigationEvent;)Lnet/minecraft/client/gui/ComponentPath; a
	setFocused (Lnet/minecraft/client/gui/components/events/GuiEventListener;)V a
	updateNarration (Lnet/minecraft/client/gui/narration/NarrationElementOutput;)V b
net/minecraft/client/gui/components/ContainerObjectSelectionList$Entry epo$a
	dragging c
	focused a
	lastNarratable b
	focusPathAtIndex (Lnet/minecraft/client/gui/navigation/FocusNavigationEvent;I)Lnet/minecraft/client/gui/ComponentPath; a
	getFocused ()Lnet/minecraft/client/gui/components/events/GuiEventListener; t
	isDragging ()Z aA_
	isFocused ()Z aB_
	isMouseOver (DD)Z a_
	mouseClicked (DDI)Z a
	narratables ()Ljava/util/List; b
	nextFocusPath (Lnet/minecraft/client/gui/navigation/FocusNavigationEvent;)Lnet/minecraft/client/gui/ComponentPath; a
	renderBack (Lnet/minecraft/client/gui/GuiGraphics;IIIIIIIZF)V b
	setDragging (Z)V c_
	setFocused (Lnet/minecraft/client/gui/components/events/GuiEventListener;)V a
	setFocused (Z)V b_
	updateNarration (Lnet/minecraft/client/gui/narration/NarrationElementOutput;)V a
net/minecraft/client/gui/components/CycleButton epp
	BOOLEAN_OPTIONS b
	DEFAULT_ALT_LIST_SELECTOR a
	displayOnlyValue x
	index d
	name c
	narrationProvider v
	onValueChange w
	tooltipSupplier y
	value e
	valueStringifier u
	values f
	booleanBuilder (Lnet/minecraft/network/chat/Component;Lnet/minecraft/network/chat/Component;)Lnet/minecraft/client/gui/components/CycleButton$Builder; a
	builder (Ljava/util/function/Function;)Lnet/minecraft/client/gui/components/CycleButton$Builder; a
	createDefaultNarrationMessage ()Lnet/minecraft/network/chat/MutableComponent; b
	createFullName (Ljava/lang/Object;)Lnet/minecraft/network/chat/MutableComponent; d
	createLabelForValue (Ljava/lang/Object;)Lnet/minecraft/network/chat/Component; c
	createNarrationMessage ()Lnet/minecraft/network/chat/MutableComponent; aE_
	cycleValue (I)V a
	getCycledValue (I)Ljava/lang/Object; h
	getValue ()Ljava/lang/Object; a
	mouseScrolled (DDD)Z a
	onOffBuilder ()Lnet/minecraft/client/gui/components/CycleButton$Builder; e
	onOffBuilder (Z)Lnet/minecraft/client/gui/components/CycleButton$Builder; b
	onPress ()V c
	setValue (Ljava/lang/Object;)V a
	updateTooltip ()V f
	updateValue (Ljava/lang/Object;)V b
	updateWidgetNarration (Lnet/minecraft/client/gui/narration/NarrationElementOutput;)V a
net/minecraft/client/gui/components/CycleButton$Builder epp$a
	displayOnlyValue g
	initialIndex a
	initialValue b
	narrationProvider e
	tooltipSupplier d
	valueStringifier c
	values f
	create (IIIILnet/minecraft/network/chat/Component;)Lnet/minecraft/client/gui/components/CycleButton; a
	create (IIIILnet/minecraft/network/chat/Component;Lnet/minecraft/client/gui/components/CycleButton$OnValueChange;)Lnet/minecraft/client/gui/components/CycleButton; a
	displayOnlyValue ()Lnet/minecraft/client/gui/components/CycleButton$Builder; a
	withCustomNarration (Ljava/util/function/Function;)Lnet/minecraft/client/gui/components/CycleButton$Builder; a
	withInitialValue (Ljava/lang/Object;)Lnet/minecraft/client/gui/components/CycleButton$Builder; a
	withTooltip (Lnet/minecraft/client/OptionInstance$TooltipSupplier;)Lnet/minecraft/client/gui/components/CycleButton$Builder; a
	withValues (Ljava/util/Collection;)Lnet/minecraft/client/gui/components/CycleButton$Builder; a
	withValues (Ljava/util/List;Ljava/util/List;)Lnet/minecraft/client/gui/components/CycleButton$Builder; a
	withValues (Ljava/util/function/BooleanSupplier;Ljava/util/List;Ljava/util/List;)Lnet/minecraft/client/gui/components/CycleButton$Builder; a
	withValues (Lnet/minecraft/client/gui/components/CycleButton$ValueListSupplier;)Lnet/minecraft/client/gui/components/CycleButton$Builder; a
	withValues ([Ljava/lang/Object;)Lnet/minecraft/client/gui/components/CycleButton$Builder; a
net/minecraft/client/gui/components/CycleButton$OnValueChange epp$b
net/minecraft/client/gui/components/CycleButton$ValueListSupplier epp$c
	create (Ljava/util/Collection;)Lnet/minecraft/client/gui/components/CycleButton$ValueListSupplier; a
	create (Ljava/util/function/BooleanSupplier;Ljava/util/List;Ljava/util/List;)Lnet/minecraft/client/gui/components/CycleButton$ValueListSupplier; a
	getDefaultList ()Ljava/util/List; b
	getSelectedList ()Ljava/util/List; a
net/minecraft/client/gui/components/DebugScreenOverlay epq
	COLOR_GREY a
	GREEN p
	HEIGHTMAP_NAMES e
	MARGIN_LEFT c
	MARGIN_RIGHT b
	MARGIN_TOP d
	RED n
	YELLOW o
	allocationRateCalculator g
	block i
	clientChunk l
	font h
	lastPos k
	liquid j
	minecraft f
	serverChunk m
	bytesToMegabytes (J)J a
	clearChunkCache ()V a
	colorLerp (IIF)I a
	drawChart (Lnet/minecraft/client/gui/GuiGraphics;Lnet/minecraft/util/FrameTimer;IIZ)V a
	drawGameInformation (Lnet/minecraft/client/gui/GuiGraphics;)V b
	drawSystemInformation (Lnet/minecraft/client/gui/GuiGraphics;)V c
	getClientChunk ()Lnet/minecraft/world/level/chunk/LevelChunk; h
	getGameInformation ()Ljava/util/List; b
	getLevel ()Lnet/minecraft/world/level/Level; f
	getPropertyValueString (Ljava/util/Map$Entry;)Ljava/lang/String; a
	getSampleColor (IIII)I a
	getServerChunk ()Lnet/minecraft/world/level/chunk/LevelChunk; g
	getServerChunkStats ()Ljava/lang/String; e
	getServerLevel ()Lnet/minecraft/server/level/ServerLevel; d
	getSystemInformation ()Ljava/util/List; c
	printBiome (Lnet/minecraft/core/Holder;)Ljava/lang/String; a
	render (Lnet/minecraft/client/gui/GuiGraphics;)V a
	renderLines (Lnet/minecraft/client/gui/GuiGraphics;Ljava/util/List;Z)V a
net/minecraft/client/gui/components/DebugScreenOverlay$AllocationRateCalculator epq$a
	GC_MBEANS b
	UPDATE_INTERVAL_MS a
	lastGcCounts e
	lastHeapUsage d
	lastRate f
	lastTime c
	bytesAllocatedPerSecond (J)J a
	gcCounts ()J a
net/minecraft/client/gui/components/EditBox epr
	BACKGROUND_COLOR i
	BACKWARDS a
	BORDER_COLOR h
	BORDER_COLOR_FOCUSED g
	CURSOR_APPEND_CHARACTER f
	CURSOR_INSERT_COLOR e
	CURSOR_INSERT_WIDTH d
	DEFAULT_TEXT_COLOR c
	FORWARDS b
	bordered v
	canLoseFocus w
	cursorPos A
	displayPos z
	filter H
	font j
	formatter I
	frame u
	highlightPos C
	hint J
	isEditable x
	maxLength l
	responder G
	shiftPressed y
	suggestion F
	textColor D
	textColorUneditable E
	value k
	canConsumeInput ()Z u
	charTyped (CI)Z a
	createNarrationMessage ()Lnet/minecraft/network/chat/MutableComponent; aE_
	deleteChars (I)V h
	deleteText (I)V r
	deleteWords (I)V a
	getCursorPos (I)I s
	getCursorPosition ()I v
	getHighlighted ()Ljava/lang/String; e
	getInnerWidth ()I w
	getMaxLength ()I y
	getScreenX (I)I q
	getValue ()Ljava/lang/String; b
	getWordPosition (I)I i
	getWordPosition (II)I a
	getWordPosition (IIZ)I a
	insertText (Ljava/lang/String;)V b
	isBordered ()Z z
	isEditable ()Z A
	isMouseOver (DD)Z a_
	isVisible ()Z x
	keyPressed (III)Z a
	moveCursor (I)V j
	moveCursorTo (I)V k
	moveCursorToEnd ()V g
	moveCursorToStart ()V f
	nextFocusPath (Lnet/minecraft/client/gui/navigation/FocusNavigationEvent;)Lnet/minecraft/client/gui/ComponentPath; a
	onClick (DD)V a
	onValueChange (Ljava/lang/String;)V d
	playDownSound (Lnet/minecraft/client/sounds/SoundManager;)V a
	renderHighlight (Lnet/minecraft/client/gui/GuiGraphics;IIII)V a
	renderWidget (Lnet/minecraft/client/gui/GuiGraphics;IIF)V b
	setBordered (Z)V b
	setCanLoseFocus (Z)V d
	setCursorPosition (I)V l
	setEditable (Z)V c
	setFilter (Ljava/util/function/Predicate;)V a
	setFocused (Z)V b_
	setFormatter (Ljava/util/function/BiFunction;)V a
	setHighlightPos (I)V p
	setHint (Lnet/minecraft/network/chat/Component;)V c
	setMaxLength (I)V m
	setResponder (Ljava/util/function/Consumer;)V b
	setSuggestion (Ljava/lang/String;)V c
	setTextColor (I)V n
	setTextColorUneditable (I)V o
	setValue (Ljava/lang/String;)V a
	setVisible (Z)V e
	tick ()V a
	updateWidgetNarration (Lnet/minecraft/client/gui/narration/NarrationElementOutput;)V a
net/minecraft/client/gui/components/FittingMultiLineTextWidget eps
	font a
	multilineWidget b
	getInnerHeight ()I f
	renderBackground (Lnet/minecraft/client/gui/GuiGraphics;)V b
	renderContents (Lnet/minecraft/client/gui/GuiGraphics;IIF)V c
	renderWidget (Lnet/minecraft/client/gui/GuiGraphics;IIF)V b
	scrollRate ()D g
	setColor (I)Lnet/minecraft/client/gui/components/FittingMultiLineTextWidget; a
	setWidth (I)V d
	updateWidgetNarration (Lnet/minecraft/client/gui/narration/NarrationElementOutput;)V a
net/minecraft/client/gui/components/ImageButton ept
	resourceLocation b
	textureHeight A
	textureWidth f
	xTexStart c
	yDiffTex e
	yTexStart d
	renderWidget (Lnet/minecraft/client/gui/GuiGraphics;IIF)V b
net/minecraft/client/gui/components/ImageWidget epu
	imageLocation a
	renderWidget (Lnet/minecraft/client/gui/GuiGraphics;IIF)V b
	updateWidgetNarration (Lnet/minecraft/client/gui/narration/NarrationElementOutput;)V a
net/minecraft/client/gui/components/LerpingBossEvent epv
	LERP_MILLISECONDS j
	setTime i
	targetPercent h
	getProgress ()F k
	setProgress (F)V a
net/minecraft/client/gui/components/LockIconButton epw
	locked a
	createNarrationMessage ()Lnet/minecraft/network/chat/MutableComponent; aE_
	isLocked ()Z a
	renderWidget (Lnet/minecraft/client/gui/GuiGraphics;IIF)V b
	setLocked (Z)V b
net/minecraft/client/gui/components/LockIconButton$Icon epw$a
	$VALUES i
	LOCKED a
	LOCKED_DISABLED c
	LOCKED_HOVER b
	UNLOCKED d
	UNLOCKED_DISABLED f
	UNLOCKED_HOVER e
	x g
	y h
	$values ()[Lnet/minecraft/client/gui/components/LockIconButton$Icon; c
	getX ()I a
	getY ()I b
net/minecraft/client/gui/components/LogoRenderer epx
	DEFAULT_HEIGHT_OFFSET f
	EASTER_EGG_LOGO b
	EDITION_HEIGHT j
	EDITION_LOGO_OVERLAP m
	EDITION_TEXTURE_HEIGHT l
	EDITION_TEXTURE_WIDTH k
	EDITION_WIDTH i
	LOGO_HEIGHT e
	LOGO_TEXTURE_HEIGHT h
	LOGO_TEXTURE_WIDTH g
	LOGO_WIDTH d
	MINECRAFT_EDITION c
	MINECRAFT_LOGO a
	keepLogoThroughFade o
	showEasterEgg n
	renderLogo (Lnet/minecraft/client/gui/GuiGraphics;IF)V a
	renderLogo (Lnet/minecraft/client/gui/GuiGraphics;IFI)V a
net/minecraft/client/gui/components/MultiLineEditBox epy
	CURSOR_APPEND_CHARACTER c
	CURSOR_INSERT_COLOR b
	CURSOR_INSERT_WIDTH a
	PLACEHOLDER_TEXT_COLOR e
	TEXT_COLOR d
	font f
	frame i
	placeholder g
	textField h
	charTyped (CI)Z a
	getDisplayableLineCount ()D x
	getInnerHeight ()I f
	getValue ()Ljava/lang/String; u
	keyPressed (III)Z a
	mouseClicked (DDI)Z a
	mouseDragged (DDIDD)Z a
	renderContents (Lnet/minecraft/client/gui/GuiGraphics;IIF)V c
	renderDecorations (Lnet/minecraft/client/gui/GuiGraphics;)V a
	renderHighlight (Lnet/minecraft/client/gui/GuiGraphics;IIII)V b
	scrollRate ()D g
	scrollToCursor ()V w
	scrollbarVisible ()Z e
	seekCursorScreen (DD)V f
	setCharacterLimit (I)V a
	setValue (Ljava/lang/String;)V a
	setValueListener (Ljava/util/function/Consumer;)V b
	tick ()V v
	updateWidgetNarration (Lnet/minecraft/client/gui/narration/NarrationElementOutput;)V a
net/minecraft/client/gui/components/MultiLineLabel epz
	EMPTY a
	create (Lnet/minecraft/client/gui/Font;Ljava/util/List;)Lnet/minecraft/client/gui/components/MultiLineLabel; a
	create (Lnet/minecraft/client/gui/Font;Lnet/minecraft/network/chat/FormattedText;I)Lnet/minecraft/client/gui/components/MultiLineLabel; a
	create (Lnet/minecraft/client/gui/Font;Lnet/minecraft/network/chat/FormattedText;II)Lnet/minecraft/client/gui/components/MultiLineLabel; a
	create (Lnet/minecraft/client/gui/Font;[Lnet/minecraft/network/chat/Component;)Lnet/minecraft/client/gui/components/MultiLineLabel; a
	createFixed (Lnet/minecraft/client/gui/Font;Ljava/util/List;)Lnet/minecraft/client/gui/components/MultiLineLabel; b
	getLineCount ()I a
	getWidth ()I b
	renderBackgroundCentered (Lnet/minecraft/client/gui/GuiGraphics;IIIII)V a
	renderCentered (Lnet/minecraft/client/gui/GuiGraphics;II)I a
	renderCentered (Lnet/minecraft/client/gui/GuiGraphics;IIII)I a
	renderLeftAligned (Lnet/minecraft/client/gui/GuiGraphics;IIII)I b
	renderLeftAlignedNoShadow (Lnet/minecraft/client/gui/GuiGraphics;IIII)I c
net/minecraft/client/gui/components/MultiLineLabel$TextWithWidth epz$a
	text a
	width b
net/minecraft/client/gui/components/MultiLineTextWidget eqa
	cache c
	centered d
	maxRows b
	maxWidth a
	getFreshCacheKey ()Lnet/minecraft/client/gui/components/MultiLineTextWidget$CacheKey; e
	getHeight ()I h
	getWidth ()I k
	renderWidget (Lnet/minecraft/client/gui/GuiGraphics;IIF)V b
	setCentered (Z)Lnet/minecraft/client/gui/components/MultiLineTextWidget; b
	setColor (I)Lnet/minecraft/client/gui/components/AbstractStringWidget; a
	setColor (I)Lnet/minecraft/client/gui/components/MultiLineTextWidget; h
	setMaxRows (I)Lnet/minecraft/client/gui/components/MultiLineTextWidget; j
	setMaxWidth (I)Lnet/minecraft/client/gui/components/MultiLineTextWidget; i
net/minecraft/client/gui/components/MultiLineTextWidget$CacheKey eqa$a
	maxRows c
	maxWidth b
	message a
	maxRows ()Ljava/util/OptionalInt; c
	maxWidth ()I b
	message ()Lnet/minecraft/network/chat/Component; a
net/minecraft/client/gui/components/MultilineTextField eqb
	LINE_SEEK_PIXEL_BIAS b
	NO_CHARACTER_LIMIT a
	characterLimit i
	cursor f
	cursorListener l
	displayLines d
	font c
	selectCursor g
	selecting h
	value e
	valueListener k
	width j
	characterLimit ()I a
	cursor ()I d
	deleteText (I)V b
	getCursorLineView ()Lnet/minecraft/client/gui/components/MultilineTextField$StringView; m
	getCursorLineView (I)Lnet/minecraft/client/gui/components/MultilineTextField$StringView; f
	getLineAtCursor ()I g
	getLineCount ()I f
	getLineView (I)Lnet/minecraft/client/gui/components/MultilineTextField$StringView; c
	getNextWord ()Lnet/minecraft/client/gui/components/MultilineTextField$StringView; l
	getPreviousWord ()Lnet/minecraft/client/gui/components/MultilineTextField$StringView; k
	getSelected ()Lnet/minecraft/client/gui/components/MultilineTextField$StringView; e
	getSelectedText ()Ljava/lang/String; j
	getWordEndPosition (I)I g
	hasCharacterLimit ()Z b
	hasSelection ()Z i
	insertText (Ljava/lang/String;)V b
	iterateLines ()Ljava/lang/Iterable; h
	keyPressed (I)Z e
	onValueChange ()V n
	reflowDisplayLines ()V o
	seekCursor (Lnet/minecraft/client/gui/components/Whence;I)V a
	seekCursorLine (I)V d
	seekCursorToPoint (DD)V a
	setCharacterLimit (I)V a
	setCursorListener (Ljava/lang/Runnable;)V a
	setSelecting (Z)V a
	setValue (Ljava/lang/String;)V a
	setValueListener (Ljava/util/function/Consumer;)V a
	truncateFullText (Ljava/lang/String;)Ljava/lang/String; c
	truncateInsertionText (Ljava/lang/String;)Ljava/lang/String; d
	value ()Ljava/lang/String; c
net/minecraft/client/gui/components/MultilineTextField$StringView eqb$a
	EMPTY c
	beginIndex a
	endIndex b
	beginIndex ()I a
	endIndex ()I b
net/minecraft/client/gui/components/ObjectSelectionList eqc
	USAGE_NARRATION a
	nextFocusPath (Lnet/minecraft/client/gui/navigation/FocusNavigationEvent;)Lnet/minecraft/client/gui/ComponentPath; a
	updateNarration (Lnet/minecraft/client/gui/narration/NarrationElementOutput;)V b
net/minecraft/client/gui/components/ObjectSelectionList$Entry eqc$a
	getNarration ()Lnet/minecraft/network/chat/Component; a
	isFocused ()Z aB_
	isMouseOver (DD)Z a_
	renderBack (Lnet/minecraft/client/gui/GuiGraphics;IIIIIIIZF)V b
	setFocused (Z)V b_
	updateNarration (Lnet/minecraft/client/gui/narration/NarrationElementOutput;)V b
net/minecraft/client/gui/components/OptionsList eqd
	addBig (Lnet/minecraft/client/OptionInstance;)I a
	addSmall (Lnet/minecraft/client/OptionInstance;Lnet/minecraft/client/OptionInstance;)V a
	addSmall ([Lnet/minecraft/client/OptionInstance;)V a
	findOption (Lnet/minecraft/client/OptionInstance;)Lnet/minecraft/client/gui/components/AbstractWidget; b
	getMouseOver (DD)Ljava/util/Optional; c
	getRowWidth ()I b
	getScrollbarPosition ()I c
net/minecraft/client/gui/components/OptionsList$Entry eqd$a
	children b
	options a
	big (Lnet/minecraft/client/Options;ILnet/minecraft/client/OptionInstance;)Lnet/minecraft/client/gui/components/OptionsList$Entry; a
	children ()Ljava/util/List; i
	narratables ()Ljava/util/List; b
	render (Lnet/minecraft/client/gui/GuiGraphics;IIIIIIIZF)V a
	small (Lnet/minecraft/client/Options;ILnet/minecraft/client/OptionInstance;Lnet/minecraft/client/OptionInstance;)Lnet/minecraft/client/gui/components/OptionsList$Entry; a
net/minecraft/client/gui/components/PlainTextButton eqe
	font a
	message b
	underlinedMessage c
	renderWidget (Lnet/minecraft/client/gui/GuiGraphics;IIF)V b
net/minecraft/client/gui/components/PlayerFaceRenderer eqf
	SKIN_HAT_HEIGHT h
	SKIN_HAT_U e
	SKIN_HAT_V f
	SKIN_HAT_WIDTH g
	SKIN_HEAD_HEIGHT d
	SKIN_HEAD_U a
	SKIN_HEAD_V b
	SKIN_HEAD_WIDTH c
	SKIN_TEX_HEIGHT j
	SKIN_TEX_WIDTH i
	draw (Lnet/minecraft/client/gui/GuiGraphics;Lnet/minecraft/resources/ResourceLocation;III)V a
	draw (Lnet/minecraft/client/gui/GuiGraphics;Lnet/minecraft/resources/ResourceLocation;IIIZZ)V a
	drawHat (Lnet/minecraft/client/gui/GuiGraphics;Lnet/minecraft/resources/ResourceLocation;IIIZ)V a
net/minecraft/client/gui/components/PlayerTabOverlay eqg
	GUI_ICONS_LOCATION k
	HEART_EMPTY_CONTAINER b
	HEART_EMPTY_CONTAINER_BLINKING c
	HEART_FULL d
	HEART_GHOST_FULL h
	HEART_GHOST_HALF_FULL i
	HEART_GOLDEN_FULL f
	HEART_GOLDEN_HALF_FULL g
	HEART_HALF_FULL e
	MAX_ROWS_PER_COL a
	PLAYER_COMPARATOR j
	footer n
	gui m
	header o
	healthStates q
	minecraft l
	visible p
	decorateName (Lnet/minecraft/client/multiplayer/PlayerInfo;Lnet/minecraft/network/chat/MutableComponent;)Lnet/minecraft/network/chat/Component; a
	getNameForDisplay (Lnet/minecraft/client/multiplayer/PlayerInfo;)Lnet/minecraft/network/chat/Component; a
	getPlayerInfos ()Ljava/util/List; b
	render (Lnet/minecraft/client/gui/GuiGraphics;ILnet/minecraft/world/scores/Scoreboard;Lnet/minecraft/world/scores/Objective;)V a
	renderPingIcon (Lnet/minecraft/client/gui/GuiGraphics;IIILnet/minecraft/client/multiplayer/PlayerInfo;)V a
	renderTablistHearts (IIILjava/util/UUID;Lnet/minecraft/client/gui/GuiGraphics;I)V a
	renderTablistScore (Lnet/minecraft/world/scores/Objective;ILjava/lang/String;IILjava/util/UUID;Lnet/minecraft/client/gui/GuiGraphics;)V a
	reset ()V a
	setFooter (Lnet/minecraft/network/chat/Component;)V a
	setHeader (Lnet/minecraft/network/chat/Component;)V b
	setVisible (Z)V a
net/minecraft/client/gui/components/PlayerTabOverlay$HealthState eqg$a
	DECREASE_BLINK_DURATION b
	DISPLAY_UPDATE_DELAY a
	INCREASE_BLINK_DURATION c
	blinkUntilTick g
	displayedValue e
	lastUpdateTick f
	lastValue d
	displayedValue ()I a
	isBlinking (J)Z a
	update (IJ)V a
net/minecraft/client/gui/components/Renderable eqh
	render (Lnet/minecraft/client/gui/GuiGraphics;IIF)V a
net/minecraft/client/gui/components/SplashRenderer eqi
	CHRISTMAS a
	HALLOWEEN c
	HEIGH_OFFSET e
	NEW_YEAR b
	WIDTH_OFFSET d
	splash f
	render (Lnet/minecraft/client/gui/GuiGraphics;ILnet/minecraft/client/gui/Font;I)V a
net/minecraft/client/gui/components/StateSwitchingButton eqj
	isStateTriggered b
	resourceLocation a
	xDiffTex e
	xTexStart c
	yDiffTex f
	yTexStart d
	initTextureValues (IIIILnet/minecraft/resources/ResourceLocation;)V a
	isStateTriggered ()Z a
	renderWidget (Lnet/minecraft/client/gui/GuiGraphics;IIF)V b
	setStateTriggered (Z)V b
	updateWidgetNarration (Lnet/minecraft/client/gui/narration/NarrationElementOutput;)V a
net/minecraft/client/gui/components/StringWidget eqk
	alignX a
	alignCenter ()Lnet/minecraft/client/gui/components/StringWidget; f
	alignLeft ()Lnet/minecraft/client/gui/components/StringWidget; e
	alignRight ()Lnet/minecraft/client/gui/components/StringWidget; g
	horizontalAlignment (F)Lnet/minecraft/client/gui/components/StringWidget; b
	renderWidget (Lnet/minecraft/client/gui/GuiGraphics;IIF)V b
	setColor (I)Lnet/minecraft/client/gui/components/AbstractStringWidget; a
	setColor (I)Lnet/minecraft/client/gui/components/StringWidget; h
net/minecraft/client/gui/components/SubtitleOverlay eql
	DISPLAY_TIME a
	isListening d
	minecraft b
	subtitles c
	onPlaySound (Lnet/minecraft/client/resources/sounds/SoundInstance;Lnet/minecraft/client/sounds/WeighedSoundEvents;)V a
	render (Lnet/minecraft/client/gui/GuiGraphics;)V a
net/minecraft/client/gui/components/SubtitleOverlay$Subtitle eql$a
	location c
	text a
	time b
	getLocation ()Lnet/minecraft/world/phys/Vec3; c
	getText ()Lnet/minecraft/network/chat/Component; a
	getTime ()J b
	refresh (Lnet/minecraft/world/phys/Vec3;)V a
net/minecraft/client/gui/components/TabButton eqm
	SELECTED_OFFSET f
	TEXTURE_BORDER d
	TEXTURE_BORDER_BOTTOM e
	TEXTURE_HEIGHT c
	TEXTURE_LOCATION a
	TEXTURE_WIDTH b
	TEXT_MARGIN g
	UNDERLINE_HEIGHT h
	UNDERLINE_MARGIN_BOTTOM j
	UNDERLINE_MARGIN_X i
	tab l
	tabManager k
	getTextureY ()I a
	isSelected ()Z e
	playDownSound (Lnet/minecraft/client/sounds/SoundManager;)V a
	renderFocusUnderline (Lnet/minecraft/client/gui/GuiGraphics;Lnet/minecraft/client/gui/Font;I)V b
	renderString (Lnet/minecraft/client/gui/GuiGraphics;Lnet/minecraft/client/gui/Font;I)V a
	renderWidget (Lnet/minecraft/client/gui/GuiGraphics;IIF)V b
	tab ()Lnet/minecraft/client/gui/components/tabs/Tab; b
	updateWidgetNarration (Lnet/minecraft/client/gui/narration/NarrationElementOutput;)V a
net/minecraft/client/gui/components/TabOrderedElement eqn
	getTabOrderGroup ()I aC_
net/minecraft/client/gui/components/TextAndImageButton eqo
	resourceLocation a
	textureHeight f
	textureWidth e
	usedTextureHeight E
	usedTextureWidth D
	xOffset A
	xTexStart b
	yDiffTex d
	yOffset C
	yTexStart c
	builder (Lnet/minecraft/network/chat/Component;Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/client/gui/components/Button$OnPress;)Lnet/minecraft/client/gui/components/TextAndImageButton$Builder; a
	getXOffset ()I a
	getYOffset ()I b
	renderString (Lnet/minecraft/client/gui/GuiGraphics;Lnet/minecraft/client/gui/Font;I)V a
	renderWidget (Lnet/minecraft/client/gui/GuiGraphics;IIF)V b
net/minecraft/client/gui/components/TextAndImageButton$Builder eqo$a
	message a
	onPress c
	resourceLocation b
	textureHeight j
	textureWidth i
	usedTextureHeight h
	usedTextureWidth g
	xOffset k
	xTexStart d
	yDiffTex f
	yOffset l
	yTexStart e
	build ()Lnet/minecraft/client/gui/components/TextAndImageButton; a
	offset (II)Lnet/minecraft/client/gui/components/TextAndImageButton$Builder; b
	texStart (II)Lnet/minecraft/client/gui/components/TextAndImageButton$Builder; a
	textureSize (II)Lnet/minecraft/client/gui/components/TextAndImageButton$Builder; d
	usedTextureSize (II)Lnet/minecraft/client/gui/components/TextAndImageButton$Builder; c
	yDiffTex (I)Lnet/minecraft/client/gui/components/TextAndImageButton$Builder; a
net/minecraft/client/gui/components/Tooltip eqp
	MAX_WIDTH a
	cachedTooltip c
	message b
	narration d
	create (Lnet/minecraft/network/chat/Component;)Lnet/minecraft/client/gui/components/Tooltip; a
	create (Lnet/minecraft/network/chat/Component;Lnet/minecraft/network/chat/Component;)Lnet/minecraft/client/gui/components/Tooltip; a
	splitTooltip (Lnet/minecraft/client/Minecraft;Lnet/minecraft/network/chat/Component;)Ljava/util/List; a
	toCharSequence (Lnet/minecraft/client/Minecraft;)Ljava/util/List; a
	updateNarration (Lnet/minecraft/client/gui/narration/NarrationElementOutput;)V b
net/minecraft/client/gui/components/Whence eqq
	$VALUES d
	ABSOLUTE a
	END c
	RELATIVE b
	$values ()[Lnet/minecraft/client/gui/components/Whence; a
net/minecraft/client/gui/components/events/AbstractContainerEventHandler eqr
	focused a
	isDragging b
	getFocused ()Lnet/minecraft/client/gui/components/events/GuiEventListener; t
	isDragging ()Z aA_
	setDragging (Z)V c_
	setFocused (Lnet/minecraft/client/gui/components/events/GuiEventListener;)V a
net/minecraft/client/gui/components/events/ContainerEventHandler eqs
	charTyped (CI)Z a
	children ()Ljava/util/List; i
	getChildAt (DD)Ljava/util/Optional; d
	getCurrentFocusPath ()Lnet/minecraft/client/gui/ComponentPath; aF_
	getFocused ()Lnet/minecraft/client/gui/components/events/GuiEventListener; t
	handleArrowNavigation (Lnet/minecraft/client/gui/navigation/FocusNavigationEvent$ArrowNavigation;)Lnet/minecraft/client/gui/ComponentPath; a
	handleTabNavigation (Lnet/minecraft/client/gui/navigation/FocusNavigationEvent$TabNavigation;)Lnet/minecraft/client/gui/ComponentPath; a
	isDragging ()Z aA_
	isFocused ()Z aB_
	keyPressed (III)Z a
	keyReleased (III)Z b
	magicalSpecialHackyFocus (Lnet/minecraft/client/gui/components/events/GuiEventListener;)V b
	mouseClicked (DDI)Z a
	mouseDragged (DDIDD)Z a
	mouseReleased (DDI)Z b
	mouseScrolled (DDD)Z a
	nextFocusPath (Lnet/minecraft/client/gui/navigation/FocusNavigationEvent;)Lnet/minecraft/client/gui/ComponentPath; a
	nextFocusPathInDirection (Lnet/minecraft/client/gui/navigation/ScreenRectangle;Lnet/minecraft/client/gui/navigation/ScreenDirection;Lnet/minecraft/client/gui/components/events/GuiEventListener;Lnet/minecraft/client/gui/navigation/FocusNavigationEvent;)Lnet/minecraft/client/gui/ComponentPath; a
	nextFocusPathVaguelyInDirection (Lnet/minecraft/client/gui/navigation/ScreenRectangle;Lnet/minecraft/client/gui/navigation/ScreenDirection;Lnet/minecraft/client/gui/components/events/GuiEventListener;Lnet/minecraft/client/gui/navigation/FocusNavigationEvent;)Lnet/minecraft/client/gui/ComponentPath; b
	setDragging (Z)V c_
	setFocused (Lnet/minecraft/client/gui/components/events/GuiEventListener;)V a
	setFocused (Z)V b_
net/minecraft/client/gui/components/events/GuiEventListener eqt
	DOUBLE_CLICK_THRESHOLD_MS B
	charTyped (CI)Z a
	getCurrentFocusPath ()Lnet/minecraft/client/gui/ComponentPath; aF_
	getRectangle ()Lnet/minecraft/client/gui/navigation/ScreenRectangle; s
	isFocused ()Z aB_
	isMouseOver (DD)Z a_
	keyPressed (III)Z a
	keyReleased (III)Z b
	mouseClicked (DDI)Z a
	mouseDragged (DDIDD)Z a
	mouseMoved (DD)V e
	mouseReleased (DDI)Z b
	mouseScrolled (DDD)Z a
	nextFocusPath (Lnet/minecraft/client/gui/navigation/FocusNavigationEvent;)Lnet/minecraft/client/gui/ComponentPath; a
	setFocused (Z)V b_
net/minecraft/client/gui/components/spectator/SpectatorGui eqw
	FADE_OUT_DELAY c
	FADE_OUT_TIME d
	SPECTATOR_LOCATION a
	WIDGETS_LOCATION b
	lastSelectionTime f
	menu g
	minecraft e
	getHotbarAlpha ()F c
	isMenuActive ()Z a
	onHotbarSelected (I)V a
	onMouseMiddleClick ()V b
	onMouseScrolled (I)V b
	onSpectatorMenuClosed (Lnet/minecraft/client/gui/spectator/SpectatorMenu;)V a
	renderHotbar (Lnet/minecraft/client/gui/GuiGraphics;)V a
	renderPage (Lnet/minecraft/client/gui/GuiGraphics;FIILnet/minecraft/client/gui/spectator/categories/SpectatorPage;)V a
	renderSlot (Lnet/minecraft/client/gui/GuiGraphics;IIFFLnet/minecraft/client/gui/spectator/SpectatorMenuItem;)V a
	renderTooltip (Lnet/minecraft/client/gui/GuiGraphics;)V b
net/minecraft/client/gui/components/tabs/GridLayoutTab eqy
	layout a
	title b
	doLayout (Lnet/minecraft/client/gui/navigation/ScreenRectangle;)V a
	getTabTitle ()Lnet/minecraft/network/chat/Component; a
	visitChildren (Ljava/util/function/Consumer;)V a
net/minecraft/client/gui/components/tabs/Tab eqz
	doLayout (Lnet/minecraft/client/gui/navigation/ScreenRectangle;)V a
	getTabTitle ()Lnet/minecraft/network/chat/Component; a
	tick ()V b
	visitChildren (Ljava/util/function/Consumer;)V a
net/minecraft/client/gui/components/tabs/TabManager era
	addWidget a
	currentTab c
	removeWidget b
	tabArea d
	getCurrentTab ()Lnet/minecraft/client/gui/components/tabs/Tab; a
	setCurrentTab (Lnet/minecraft/client/gui/components/tabs/Tab;Z)V a
	setTabArea (Lnet/minecraft/client/gui/navigation/ScreenRectangle;)V a
	tickCurrent ()V b
net/minecraft/client/gui/components/tabs/TabNavigationBar erb
	HEIGHT c
	MARGIN d
	MAX_WIDTH b
	NO_TAB a
	USAGE_NARRATION e
	layout f
	tabButtons j
	tabManager h
	tabs i
	width g
	arrangeElements ()V b
	builder (Lnet/minecraft/client/gui/components/tabs/TabManager;I)Lnet/minecraft/client/gui/components/tabs/TabNavigationBar$Builder; a
	children ()Ljava/util/List; i
	currentTabButton ()Lnet/minecraft/client/gui/components/TabButton; e
	currentTabIndex ()I d
	getNextTabIndex (I)I c
	getRectangle ()Lnet/minecraft/client/gui/navigation/ScreenRectangle; s
	keyPressed (I)Z b
	narrateListElementPosition (Lnet/minecraft/client/gui/narration/NarrationElementOutput;Lnet/minecraft/client/gui/components/TabButton;)V a
	narrationPriority ()Lnet/minecraft/client/gui/narration/NarratableEntry$NarrationPriority; q
	nextFocusPath (Lnet/minecraft/client/gui/navigation/FocusNavigationEvent;)Lnet/minecraft/client/gui/ComponentPath; a
	render (Lnet/minecraft/client/gui/GuiGraphics;IIF)V a
	selectTab (IZ)V a
	setFocused (Lnet/minecraft/client/gui/components/events/GuiEventListener;)V a
	setFocused (Z)V b_
	setWidth (I)V a
	updateNarration (Lnet/minecraft/client/gui/narration/NarrationElementOutput;)V b
net/minecraft/client/gui/components/tabs/TabNavigationBar$Builder erb$a
	tabManager b
	tabs c
	width a
	addTabs ([Lnet/minecraft/client/gui/components/tabs/Tab;)Lnet/minecraft/client/gui/components/tabs/TabNavigationBar$Builder; a
	build ()Lnet/minecraft/client/gui/components/tabs/TabNavigationBar; a
net/minecraft/client/gui/components/toasts/AdvancementToast erd
	DISPLAY_TIME a
	advancement e
	playedSound f
	render (Lnet/minecraft/client/gui/GuiGraphics;Lnet/minecraft/client/gui/components/toasts/ToastComponent;J)Lnet/minecraft/client/gui/components/toasts/Toast$Visibility; a
net/minecraft/client/gui/components/toasts/RecipeToast ere
	DESCRIPTION_TEXT f
	DISPLAY_TIME a
	TITLE_TEXT e
	changed i
	lastChanged h
	recipes g
	addItem (Lnet/minecraft/world/item/crafting/Recipe;)V a
	addOrUpdate (Lnet/minecraft/client/gui/components/toasts/ToastComponent;Lnet/minecraft/world/item/crafting/Recipe;)V a
	render (Lnet/minecraft/client/gui/GuiGraphics;Lnet/minecraft/client/gui/components/toasts/ToastComponent;J)Lnet/minecraft/client/gui/components/toasts/Toast$Visibility; a
net/minecraft/client/gui/components/toasts/SystemToast erf
	LINE_SPACING e
	MARGIN f
	MAX_LINE_SIZE a
	changed k
	id g
	lastChanged j
	messageLines i
	title h
	width l
	add (Lnet/minecraft/client/gui/components/toasts/ToastComponent;Lnet/minecraft/client/gui/components/toasts/SystemToast$SystemToastIds;Lnet/minecraft/network/chat/Component;Lnet/minecraft/network/chat/Component;)V a
	addOrUpdate (Lnet/minecraft/client/gui/components/toasts/ToastComponent;Lnet/minecraft/client/gui/components/toasts/SystemToast$SystemToastIds;Lnet/minecraft/network/chat/Component;Lnet/minecraft/network/chat/Component;)V b
	getToken ()Ljava/lang/Object; d
	getToken ()Lnet/minecraft/client/gui/components/toasts/SystemToast$SystemToastIds; c
	height ()I b
	multiline (Lnet/minecraft/client/Minecraft;Lnet/minecraft/client/gui/components/toasts/SystemToast$SystemToastIds;Lnet/minecraft/network/chat/Component;Lnet/minecraft/network/chat/Component;)Lnet/minecraft/client/gui/components/toasts/SystemToast; a
	nullToEmpty (Lnet/minecraft/network/chat/Component;)Lcom/google/common/collect/ImmutableList; a
	onPackCopyFailure (Lnet/minecraft/client/Minecraft;Ljava/lang/String;)V c
	onWorldAccessFailure (Lnet/minecraft/client/Minecraft;Ljava/lang/String;)V a
	onWorldDeleteFailure (Lnet/minecraft/client/Minecraft;Ljava/lang/String;)V b
	render (Lnet/minecraft/client/gui/GuiGraphics;Lnet/minecraft/client/gui/components/toasts/ToastComponent;J)Lnet/minecraft/client/gui/components/toasts/Toast$Visibility; a
	renderBackgroundRow (Lnet/minecraft/client/gui/GuiGraphics;Lnet/minecraft/client/gui/components/toasts/ToastComponent;IIII)V a
	reset (Lnet/minecraft/network/chat/Component;Lnet/minecraft/network/chat/Component;)V a
	width ()I a
net/minecraft/client/gui/components/toasts/SystemToast$SystemToastIds erf$a
	$VALUES j
	NARRATOR_TOGGLE b
	PACK_COPY_FAILURE f
	PACK_LOAD_FAILURE d
	PERIODIC_NOTIFICATION g
	TUTORIAL_HINT a
	UNSECURE_SERVER_WARNING h
	WORLD_ACCESS_FAILURE e
	WORLD_BACKUP c
	displayTime i
	$values ()[Lnet/minecraft/client/gui/components/toasts/SystemToast$SystemToastIds; a
net/minecraft/client/gui/components/toasts/Toast erg
	NO_TOKEN c
	SLOT_HEIGHT d
	TEXTURE b
	getToken ()Ljava/lang/Object; d
	height ()I b
	render (Lnet/minecraft/client/gui/GuiGraphics;Lnet/minecraft/client/gui/components/toasts/ToastComponent;J)Lnet/minecraft/client/gui/components/toasts/Toast$Visibility; a
	slotCount ()I e
	width ()I a
net/minecraft/client/gui/components/toasts/Toast$Visibility erg$a
	$VALUES d
	HIDE b
	SHOW a
	soundEvent c
	$values ()[Lnet/minecraft/client/gui/components/toasts/Toast$Visibility; a
	playSound (Lnet/minecraft/client/sounds/SoundManager;)V a
net/minecraft/client/gui/components/toasts/ToastComponent erh
	NO_SPACE b
	SLOT_COUNT a
	minecraft c
	occupiedSlots e
	queued f
	visible d
	addToast (Lnet/minecraft/client/gui/components/toasts/Toast;)V a
	clear ()V a
	findFreeIndex (I)I a
	freeSlots ()I d
	getMinecraft ()Lnet/minecraft/client/Minecraft; b
	getNotificationDisplayTimeMultiplier ()D c
	getToast (Ljava/lang/Class;Ljava/lang/Object;)Lnet/minecraft/client/gui/components/toasts/Toast; a
	render (Lnet/minecraft/client/gui/GuiGraphics;)V a
net/minecraft/client/gui/components/toasts/ToastComponent$ToastInstance erh$a
	ANIMATION_TIME b
	animationTime f
	index d
	slotCount e
	toast c
	visibility h
	visibleTime g
	getToast ()Lnet/minecraft/client/gui/components/toasts/Toast; a
	getVisibility (J)F a
	render (ILnet/minecraft/client/gui/GuiGraphics;)Z a
net/minecraft/client/gui/components/toasts/TutorialToast eri
	PROGRESS_BAR_HEIGHT e
	PROGRESS_BAR_WIDTH a
	PROGRESS_BAR_X f
	PROGRESS_BAR_Y g
	icon h
	lastProgress m
	lastProgressTime l
	message j
	progress n
	progressable o
	title i
	visibility k
	hide ()V c
	render (Lnet/minecraft/client/gui/GuiGraphics;Lnet/minecraft/client/gui/components/toasts/ToastComponent;J)Lnet/minecraft/client/gui/components/toasts/Toast$Visibility; a
	updateProgress (F)V a
net/minecraft/client/gui/components/toasts/TutorialToast$Icons eri$a
	$VALUES j
	MOUSE b
	MOVEMENT_KEYS a
	RECIPE_BOOK d
	RIGHT_CLICK g
	SOCIAL_INTERACTIONS f
	TREE c
	WOODEN_PLANKS e
	x h
	y i
	$values ()[Lnet/minecraft/client/gui/components/toasts/TutorialToast$Icons; a
	render (Lnet/minecraft/client/gui/GuiGraphics;II)V a
net/minecraft/client/gui/font/AllMissingGlyphProvider erk
	getGlyph (I)Lcom/mojang/blaze3d/font/GlyphInfo; a
	getSupportedGlyphs ()Lit/unimi/dsi/fastutil/ints/IntSet; a
net/minecraft/client/gui/font/CodepointMap erl
	BLOCK_BITS a
	BLOCK_COUNT e
	BLOCK_SIZE b
	IN_BLOCK_MASK c
	MAX_BLOCK d
	blockConstructor h
	blockMap g
	empty f
	clear ()V a
	computeIfAbsent (ILjava/util/function/IntFunction;)Ljava/lang/Object; a
	forEach (Lnet/minecraft/client/gui/font/CodepointMap$Output;)V a
	get (I)Ljava/lang/Object; a
	keySet ()Lit/unimi/dsi/fastutil/ints/IntSet; b
	put (ILjava/lang/Object;)Ljava/lang/Object; a
	remove (I)Ljava/lang/Object; b
net/minecraft/client/gui/font/CodepointMap$Output erl$a
net/minecraft/client/gui/font/FontManager erm
	FONTS_PATH c
	FONT_DEFINITIONS d
	GSON e
	LOGGER b
	MISSING_FONT a
	fontSets h
	missingFontSet f
	providersToClose g
	renames j
	textureManager i
	apply (Lnet/minecraft/client/gui/font/FontManager$Preparation;Lnet/minecraft/util/profiling/ProfilerFiller;)V a
	createFont ()Lnet/minecraft/client/gui/Font; a
	createFontFilterFishy ()Lnet/minecraft/client/gui/Font; b
	finalizeProviderLoading (Ljava/util/List;Lcom/mojang/blaze3d/font/GlyphProvider;)V a
	getActualId (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/resources/ResourceLocation; a
	loadResourceStack (Ljava/util/List;Lnet/minecraft/resources/ResourceLocation;)Ljava/util/List; a
	prepare (Lnet/minecraft/server/packs/resources/ResourceManager;Ljava/util/concurrent/Executor;)Ljava/util/concurrent/CompletableFuture; a
	reload (Lnet/minecraft/server/packs/resources/PreparableReloadListener$PreparationBarrier;Lnet/minecraft/server/packs/resources/ResourceManager;Lnet/minecraft/util/profiling/ProfilerFiller;Lnet/minecraft/util/profiling/ProfilerFiller;Ljava/util/concurrent/Executor;Ljava/util/concurrent/Executor;)Ljava/util/concurrent/CompletableFuture; a
	resolveProviders (Ljava/util/List;)Ljava/util/Map; a
	safeLoad (Lnet/minecraft/client/gui/font/FontManager$BuilderId;Lnet/minecraft/client/gui/font/providers/GlyphProviderDefinition$Loader;Lnet/minecraft/server/packs/resources/ResourceManager;Ljava/util/concurrent/Executor;)Ljava/util/concurrent/CompletableFuture; a
	setRenames (Ljava/util/Map;)V a
net/minecraft/client/gui/font/FontManager$BuilderId erm$a
	fontId a
	index c
	pack b
	fontId ()Lnet/minecraft/resources/ResourceLocation; a
	index ()I c
	pack ()Ljava/lang/String; b
net/minecraft/client/gui/font/FontManager$BuilderResult erm$b
	id a
	result b
	id ()Lnet/minecraft/client/gui/font/FontManager$BuilderId; a
	resolve (Ljava/util/function/Function;)Ljava/util/Optional; a
	result ()Lcom/mojang/datafixers/util/Either; b
net/minecraft/client/gui/font/FontManager$FontDefinitionFile erm$c
	CODEC a
	providers b
	providers ()Ljava/util/List; a
net/minecraft/client/gui/font/FontManager$Preparation erm$d
	allProviders b
	providers a
	allProviders ()Ljava/util/List; b
	providers ()Ljava/util/Map; a
net/minecraft/client/gui/font/FontManager$UnresolvedBuilderBundle erm$e
	builders b
	dependencies c
	fontId a
	add (Lnet/minecraft/client/gui/font/FontManager$BuilderId;Ljava/util/concurrent/CompletableFuture;)V a
	add (Lnet/minecraft/client/gui/font/FontManager$BuilderId;Lnet/minecraft/client/gui/font/providers/GlyphProviderDefinition$Reference;)V a
	builders ()Ljava/util/List; b
	dependencies ()Ljava/util/Set; c
	fontId ()Lnet/minecraft/resources/ResourceLocation; a
	listBuilders ()Ljava/util/stream/Stream; d
	resolve (Ljava/util/function/Function;)Ljava/util/Optional; a
	visitOptionalDependencies (Ljava/util/function/Consumer;)V b
	visitRequiredDependencies (Ljava/util/function/Consumer;)V a
net/minecraft/client/gui/font/FontSet ern
	LARGE_FORWARD_ADVANCE b
	RANDOM a
	glyphInfos i
	glyphs h
	glyphsByWidth j
	missingGlyph e
	name d
	providers g
	textureManager c
	textures k
	whiteGlyph f
	closeProviders ()V b
	closeTextures ()V c
	computeBakedGlyph (I)Lnet/minecraft/client/gui/font/glyphs/BakedGlyph; c
	computeGlyphInfo (I)Lnet/minecraft/client/gui/font/FontSet$GlyphInfoFilter; b
	getGlyph (I)Lnet/minecraft/client/gui/font/glyphs/BakedGlyph; a
	getGlyphInfo (IZ)Lcom/mojang/blaze3d/font/GlyphInfo; a
	getRandomGlyph (Lcom/mojang/blaze3d/font/GlyphInfo;)Lnet/minecraft/client/gui/font/glyphs/BakedGlyph; a
	hasFishyAdvance (Lcom/mojang/blaze3d/font/GlyphInfo;)Z b
	reload (Ljava/util/List;)V a
	stitch (Lcom/mojang/blaze3d/font/SheetGlyphInfo;)Lnet/minecraft/client/gui/font/glyphs/BakedGlyph; a
	whiteGlyph ()Lnet/minecraft/client/gui/font/glyphs/BakedGlyph; a
net/minecraft/client/gui/font/FontSet$GlyphInfoFilter ern$a
	MISSING c
	glyphInfo a
	glyphInfoNotFishy b
	glyphInfo ()Lcom/mojang/blaze3d/font/GlyphInfo; a
	glyphInfoNotFishy ()Lcom/mojang/blaze3d/font/GlyphInfo; b
	select (Z)Lcom/mojang/blaze3d/font/GlyphInfo; a
net/minecraft/client/gui/font/FontTexture ero
	SIZE e
	colored g
	renderTypes f
	root h
	add (Lcom/mojang/blaze3d/font/SheetGlyphInfo;)Lnet/minecraft/client/gui/font/glyphs/BakedGlyph; a
	dumpContents (Lnet/minecraft/resources/ResourceLocation;Ljava/nio/file/Path;)V a
	load (Lnet/minecraft/server/packs/resources/ResourceManager;)V a
net/minecraft/client/gui/font/FontTexture$Node ero$a
	height d
	left e
	occupied g
	right f
	width c
	x a
	y b
	insert (Lcom/mojang/blaze3d/font/SheetGlyphInfo;)Lnet/minecraft/client/gui/font/FontTexture$Node; a
net/minecraft/client/gui/font/GlyphRenderTypes erp
	normal a
	polygonOffset c
	seeThrough b
	createForColorTexture (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/client/gui/font/GlyphRenderTypes; b
	createForIntensityTexture (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/client/gui/font/GlyphRenderTypes; a
	normal ()Lnet/minecraft/client/renderer/RenderType; a
	polygonOffset ()Lnet/minecraft/client/renderer/RenderType; c
	seeThrough ()Lnet/minecraft/client/renderer/RenderType; b
	select (Lnet/minecraft/client/gui/Font$DisplayMode;)Lnet/minecraft/client/renderer/RenderType; a
net/minecraft/client/gui/font/TextFieldHelper erq
	cursorPos f
	getClipboardFn c
	getMessageFn a
	selectionPos g
	setClipboardFn d
	setMessageFn b
	stringValidator e
	charTyped (C)Z a
	clampToMsgLength (I)I h
	copy ()V c
	createClipboardGetter (Lnet/minecraft/client/Minecraft;)Ljava/util/function/Supplier; a
	createClipboardSetter (Lnet/minecraft/client/Minecraft;)Ljava/util/function/Consumer; c
	cut ()V a
	deleteSelection (Ljava/lang/String;)Ljava/lang/String; c
	getClipboardContents (Lnet/minecraft/client/Minecraft;)Ljava/lang/String; b
	getCursorPos ()I g
	getSelected (Ljava/lang/String;)Ljava/lang/String; b
	getSelectionPos ()I h
	insertText (Ljava/lang/String;)V a
	insertText (Ljava/lang/String;Ljava/lang/String;)V a
	isSelecting ()Z i
	keyPressed (I)Z a
	moveBy (IZLnet/minecraft/client/gui/font/TextFieldHelper$CursorStep;)V a
	moveByChars (I)V b
	moveByChars (IZ)V a
	moveByWords (I)V c
	moveByWords (IZ)V b
	paste ()V b
	removeCharsFromCursor (I)V e
	removeFromCursor (ILnet/minecraft/client/gui/font/TextFieldHelper$CursorStep;)V a
	removeWordsFromCursor (I)V d
	resetSelectionIfNeeded (Z)V c
	selectAll ()V d
	setClipboardContents (Lnet/minecraft/client/Minecraft;Ljava/lang/String;)V a
	setCursorPos (I)V f
	setCursorPos (IZ)V c
	setCursorToEnd ()V f
	setCursorToEnd (Z)V b
	setCursorToStart ()V e
	setCursorToStart (Z)V a
	setSelectionPos (I)V g
	setSelectionRange (II)V a
net/minecraft/client/gui/font/TextFieldHelper$CursorStep erq$a
	$VALUES c
	CHARACTER a
	WORD b
	$values ()[Lnet/minecraft/client/gui/font/TextFieldHelper$CursorStep; a
net/minecraft/client/gui/font/glyphs/BakedGlyph err
	down i
	left f
	renderTypes a
	right g
	u0 b
	u1 c
	up h
	v0 d
	v1 e
	render (ZFFLorg/joml/Matrix4f;Lcom/mojang/blaze3d/vertex/VertexConsumer;FFFFI)V a
	renderEffect (Lnet/minecraft/client/gui/font/glyphs/BakedGlyph$Effect;Lorg/joml/Matrix4f;Lcom/mojang/blaze3d/vertex/VertexConsumer;I)V a
	renderType (Lnet/minecraft/client/gui/Font$DisplayMode;)Lnet/minecraft/client/renderer/RenderType; a
net/minecraft/client/gui/font/glyphs/BakedGlyph$Effect err$a
	a i
	b h
	depth e
	r f
	x0 a
	x1 c
	y0 b
	y1 d
net/minecraft/client/gui/font/glyphs/EmptyGlyph ers
	INSTANCE a
	render (ZFFLorg/joml/Matrix4f;Lcom/mojang/blaze3d/vertex/VertexConsumer;FFFFI)V a
net/minecraft/client/gui/font/glyphs/SpecialGlyphs ert
	$VALUES d
	MISSING b
	WHITE a
	image c
	$values ()[Lnet/minecraft/client/gui/font/glyphs/SpecialGlyphs; e
	generate (IILnet/minecraft/client/gui/font/glyphs/SpecialGlyphs$PixelProvider;)Lcom/mojang/blaze3d/platform/NativeImage; a
net/minecraft/client/gui/font/glyphs/SpecialGlyphs$PixelProvider ert$a
net/minecraft/client/gui/font/providers/BitmapProvider erw
	LOGGER a
	glyphs c
	image b
	getGlyph (I)Lcom/mojang/blaze3d/font/GlyphInfo; a
	getSupportedGlyphs ()Lit/unimi/dsi/fastutil/ints/IntSet; a
net/minecraft/client/gui/font/providers/BitmapProvider$Definition erw$a
	CODEC a
	CODEPOINT_GRID_CODEC g
	ascent e
	codepointGrid f
	file c
	height d
	ascent ()I e
	codepointGrid ()[[I f
	file ()Lnet/minecraft/resources/ResourceLocation; c
	getActualGlyphWidth (Lcom/mojang/blaze3d/platform/NativeImage;IIII)I a
	height ()I d
	load (Lnet/minecraft/server/packs/resources/ResourceManager;)Lcom/mojang/blaze3d/font/GlyphProvider; a
	type ()Lnet/minecraft/client/gui/font/providers/GlyphProviderType; a
	unpack ()Lcom/mojang/datafixers/util/Either; b
	validate (Lnet/minecraft/client/gui/font/providers/BitmapProvider$Definition;)Lcom/mojang/serialization/DataResult; a
	validateDimensions ([[I)Lcom/mojang/serialization/DataResult; a
net/minecraft/client/gui/font/providers/BitmapProvider$Glyph erw$b
	advance g
	ascent h
	height f
	image b
	offsetX c
	offsetY d
	scale a
	width e
	advance ()I i
	ascent ()I j
	height ()I h
	image ()Lcom/mojang/blaze3d/platform/NativeImage; d
	offsetX ()I e
	offsetY ()I f
	scale ()F c
	width ()I g
net/minecraft/client/gui/font/providers/GlyphProviderDefinition erx
	CODEC b
	type ()Lnet/minecraft/client/gui/font/providers/GlyphProviderType; a
	unpack ()Lcom/mojang/datafixers/util/Either; b
net/minecraft/client/gui/font/providers/GlyphProviderDefinition$Loader erx$a
net/minecraft/client/gui/font/providers/GlyphProviderDefinition$Reference erx$b
	id a
	id ()Lnet/minecraft/resources/ResourceLocation; a
net/minecraft/client/gui/font/providers/GlyphProviderType ery
	$VALUES i
	BITMAP a
	CODEC f
	REFERENCE e
	SPACE c
	TTF b
	UNIHEX d
	codec h
	name g
	$values ()[Lnet/minecraft/client/gui/font/providers/GlyphProviderType; b
	getSerializedName ()Ljava/lang/String; c
	mapCodec ()Lcom/mojang/serialization/MapCodec; a
net/minecraft/client/gui/font/providers/ProviderReferenceDefinition erz
	CODEC a
	id c
	id ()Lnet/minecraft/resources/ResourceLocation; c
	type ()Lnet/minecraft/client/gui/font/providers/GlyphProviderType; a
	unpack ()Lcom/mojang/datafixers/util/Either; b
net/minecraft/client/gui/font/providers/TrueTypeGlyphProviderDefinition esa
	CODEC a
	SKIP_LIST_CODEC h
	location c
	oversample e
	shift f
	size d
	skip g
	load (Lnet/minecraft/server/packs/resources/ResourceManager;)Lcom/mojang/blaze3d/font/GlyphProvider; a
	location ()Lnet/minecraft/resources/ResourceLocation; c
	oversample ()F e
	shift ()Lnet/minecraft/client/gui/font/providers/TrueTypeGlyphProviderDefinition$Shift; f
	size ()F d
	skip ()Ljava/lang/String; g
	type ()Lnet/minecraft/client/gui/font/providers/GlyphProviderType; a
	unpack ()Lcom/mojang/datafixers/util/Either; b
net/minecraft/client/gui/font/providers/TrueTypeGlyphProviderDefinition$Shift esa$a
	CODEC b
	NONE a
	x c
	y d
	x ()F a
	y ()F b
net/minecraft/client/gui/font/providers/UnihexProvider esb
	DIGITS_FOR_WIDTH_16 e
	DIGITS_FOR_WIDTH_24 f
	DIGITS_FOR_WIDTH_32 g
	DIGITS_FOR_WIDTH_8 d
	DIGITS_PER_BYTE c
	GLYPH_HEIGHT b
	LOGGER a
	glyphs h
	copyUntil (Ljava/io/InputStream;Lit/unimi/dsi/fastutil/bytes/ByteList;I)Z a
	decodeHex (IB)I a
	decodeHex (ILit/unimi/dsi/fastutil/bytes/ByteList;I)I a
	getGlyph (I)Lcom/mojang/blaze3d/font/GlyphInfo; a
	getSupportedGlyphs ()Lit/unimi/dsi/fastutil/ints/IntSet; a
	readFromStream (Ljava/io/InputStream;Lnet/minecraft/client/gui/font/providers/UnihexProvider$ReaderOutput;)V a
	unpackBitsToBytes (Ljava/nio/IntBuffer;III)V a
	unpackBitsToBytes (Ljava/nio/IntBuffer;Lnet/minecraft/client/gui/font/providers/UnihexProvider$LineData;II)V a
net/minecraft/client/gui/font/providers/UnihexProvider$ByteContents esb$a
	contents a
	bitWidth ()I a
	contents ()[B b
	line (I)I a
	read (ILit/unimi/dsi/fastutil/bytes/ByteList;)Lnet/minecraft/client/gui/font/providers/UnihexProvider$LineData; a
net/minecraft/client/gui/font/providers/UnihexProvider$Definition esb$b
	CODEC a
	hexFile c
	sizeOverrides d
	load (Lnet/minecraft/server/packs/resources/ResourceManager;)Lcom/mojang/blaze3d/font/GlyphProvider; a
	loadData (Ljava/io/InputStream;)Lnet/minecraft/client/gui/font/providers/UnihexProvider; a
	type ()Lnet/minecraft/client/gui/font/providers/GlyphProviderType; a
	unpack ()Lcom/mojang/datafixers/util/Either; b
net/minecraft/client/gui/font/providers/UnihexProvider$Dimensions esb$c
	CODEC b
	MAP_CODEC a
	left c
	right d
	left ()I b
	left (I)I a
	pack ()I a
	pack (II)I a
	right ()I c
	right (I)I b
net/minecraft/client/gui/font/providers/UnihexProvider$Glyph esb$d
	contents a
	left b
	right c
	contents ()Lnet/minecraft/client/gui/font/providers/UnihexProvider$LineData; d
	getBoldOffset ()F a
	getShadowOffset ()F b
	left ()I e
	right ()I f
	width ()I c
net/minecraft/client/gui/font/providers/UnihexProvider$IntContents esb$e
	SIZE_24 c
	bitWidth b
	contents a
	bitWidth ()I a
	contents ()[I b
	line (I)I a
	read24 (ILit/unimi/dsi/fastutil/bytes/ByteList;)Lnet/minecraft/client/gui/font/providers/UnihexProvider$LineData; b
	read32 (ILit/unimi/dsi/fastutil/bytes/ByteList;)Lnet/minecraft/client/gui/font/providers/UnihexProvider$LineData; a
net/minecraft/client/gui/font/providers/UnihexProvider$LineData esb$f
	bitWidth ()I a
	calculateWidth ()I d
	line (I)I a
	mask ()I c
net/minecraft/client/gui/font/providers/UnihexProvider$OverrideRange esb$g
	CODEC a
	RAW_CODEC e
	dimensions d
	from b
	to c
	dimensions ()Lnet/minecraft/client/gui/font/providers/UnihexProvider$Dimensions; c
	from ()I a
	to ()I b
net/minecraft/client/gui/font/providers/UnihexProvider$ReaderOutput esb$h
net/minecraft/client/gui/font/providers/UnihexProvider$ShortContents esb$i
	contents a
	bitWidth ()I a
	contents ()[S b
	line (I)I a
	read (ILit/unimi/dsi/fastutil/bytes/ByteList;)Lnet/minecraft/client/gui/font/providers/UnihexProvider$LineData; a
net/minecraft/client/gui/layouts/AbstractLayout esd
	height b
	width a
	x c
	y d
	getHeight ()I h
	getWidth ()I k
	getX ()I p
	getY ()I r
	setX (I)V e
	setY (I)V f
net/minecraft/client/gui/layouts/AbstractLayout$AbstractChildWrapper esd$a
	child a
	layoutSettings b
	getHeight ()I a
	getWidth ()I b
	setX (II)V a
	setY (II)V b
net/minecraft/client/gui/layouts/FrameLayout ese
	children c
	defaultChildLayoutSettings f
	minHeight e
	minWidth d
	addChild (Lnet/minecraft/client/gui/layouts/LayoutElement;)Lnet/minecraft/client/gui/layouts/LayoutElement; a
	addChild (Lnet/minecraft/client/gui/layouts/LayoutElement;Lnet/minecraft/client/gui/layouts/LayoutSettings;)Lnet/minecraft/client/gui/layouts/LayoutElement; a
	alignInDimension (IIILjava/util/function/Consumer;F)V a
	alignInRectangle (Lnet/minecraft/client/gui/layouts/LayoutElement;IIIIFF)V a
	alignInRectangle (Lnet/minecraft/client/gui/layouts/LayoutElement;Lnet/minecraft/client/gui/navigation/ScreenRectangle;FF)V a
	arrangeElements ()V c
	centerInRectangle (Lnet/minecraft/client/gui/layouts/LayoutElement;IIII)V a
	centerInRectangle (Lnet/minecraft/client/gui/layouts/LayoutElement;Lnet/minecraft/client/gui/navigation/ScreenRectangle;)V a
	defaultChildLayoutSetting ()Lnet/minecraft/client/gui/layouts/LayoutSettings; b
	newChildLayoutSettings ()Lnet/minecraft/client/gui/layouts/LayoutSettings; a
	setMinDimensions (II)Lnet/minecraft/client/gui/layouts/FrameLayout; a
	setMinHeight (I)Lnet/minecraft/client/gui/layouts/FrameLayout; a
	setMinWidth (I)Lnet/minecraft/client/gui/layouts/FrameLayout; b
	visitChildren (Ljava/util/function/Consumer;)V b
net/minecraft/client/gui/layouts/FrameLayout$ChildContainer ese$a
net/minecraft/client/gui/layouts/GridLayout esf
	cellInhabitants d
	children c
	columnSpacing g
	defaultCellSettings e
	rowSpacing f
	addChild (Lnet/minecraft/client/gui/layouts/LayoutElement;II)Lnet/minecraft/client/gui/layouts/LayoutElement; a
	addChild (Lnet/minecraft/client/gui/layouts/LayoutElement;IIII)Lnet/minecraft/client/gui/layouts/LayoutElement; a
	addChild (Lnet/minecraft/client/gui/layouts/LayoutElement;IIIILnet/minecraft/client/gui/layouts/LayoutSettings;)Lnet/minecraft/client/gui/layouts/LayoutElement; a
	addChild (Lnet/minecraft/client/gui/layouts/LayoutElement;IILnet/minecraft/client/gui/layouts/LayoutSettings;)Lnet/minecraft/client/gui/layouts/LayoutElement; a
	arrangeElements ()V c
	columnSpacing (I)Lnet/minecraft/client/gui/layouts/GridLayout; a
	createRowHelper (I)Lnet/minecraft/client/gui/layouts/GridLayout$RowHelper; d
	defaultCellSetting ()Lnet/minecraft/client/gui/layouts/LayoutSettings; b
	newCellSettings ()Lnet/minecraft/client/gui/layouts/LayoutSettings; a
	rowSpacing (I)Lnet/minecraft/client/gui/layouts/GridLayout; b
	spacing (I)Lnet/minecraft/client/gui/layouts/GridLayout; c
	visitChildren (Ljava/util/function/Consumer;)V b
net/minecraft/client/gui/layouts/GridLayout$CellInhabitant esf$a
	column d
	occupiedColumns f
	occupiedRows e
	row c
	getLastOccupiedColumn ()I d
	getLastOccupiedRow ()I c
net/minecraft/client/gui/layouts/GridLayout$RowHelper esf$b
	columns b
	index c
	addChild (Lnet/minecraft/client/gui/layouts/LayoutElement;)Lnet/minecraft/client/gui/layouts/LayoutElement; a
	addChild (Lnet/minecraft/client/gui/layouts/LayoutElement;I)Lnet/minecraft/client/gui/layouts/LayoutElement; a
	addChild (Lnet/minecraft/client/gui/layouts/LayoutElement;ILnet/minecraft/client/gui/layouts/LayoutSettings;)Lnet/minecraft/client/gui/layouts/LayoutElement; a
	addChild (Lnet/minecraft/client/gui/layouts/LayoutElement;Lnet/minecraft/client/gui/layouts/LayoutSettings;)Lnet/minecraft/client/gui/layouts/LayoutElement; a
	defaultCellSetting ()Lnet/minecraft/client/gui/layouts/LayoutSettings; c
	getGrid ()Lnet/minecraft/client/gui/layouts/GridLayout; a
	newCellSettings ()Lnet/minecraft/client/gui/layouts/LayoutSettings; b
net/minecraft/client/gui/layouts/HeaderAndFooterLayout esg
	DEFAULT_CONTENT_MARGIN_TOP b
	DEFAULT_HEADER_AND_FOOTER_HEIGHT a
	contentsFrame e
	footerFrame d
	footerHeight h
	headerFrame c
	headerHeight g
	screen f
	addToContents (Lnet/minecraft/client/gui/layouts/LayoutElement;)Lnet/minecraft/client/gui/layouts/LayoutElement; c
	addToContents (Lnet/minecraft/client/gui/layouts/LayoutElement;Lnet/minecraft/client/gui/layouts/LayoutSettings;)Lnet/minecraft/client/gui/layouts/LayoutElement; c
	addToFooter (Lnet/minecraft/client/gui/layouts/LayoutElement;)Lnet/minecraft/client/gui/layouts/LayoutElement; b
	addToFooter (Lnet/minecraft/client/gui/layouts/LayoutElement;Lnet/minecraft/client/gui/layouts/LayoutSettings;)Lnet/minecraft/client/gui/layouts/LayoutElement; b
	addToHeader (Lnet/minecraft/client/gui/layouts/LayoutElement;)Lnet/minecraft/client/gui/layouts/LayoutElement; a
	addToHeader (Lnet/minecraft/client/gui/layouts/LayoutElement;Lnet/minecraft/client/gui/layouts/LayoutSettings;)Lnet/minecraft/client/gui/layouts/LayoutElement; a
	arrangeElements ()V c
	getFooterHeight ()I a
	getHeaderHeight ()I b
	getHeight ()I h
	getWidth ()I k
	getX ()I p
	getY ()I r
	newContentLayoutSettings ()Lnet/minecraft/client/gui/layouts/LayoutSettings; e
	newFooterLayoutSettings ()Lnet/minecraft/client/gui/layouts/LayoutSettings; f
	newHeaderLayoutSettings ()Lnet/minecraft/client/gui/layouts/LayoutSettings; d
	setFooterHeight (I)V a
	setHeaderHeight (I)V b
	setX (I)V e
	setY (I)V f
	visitChildren (Ljava/util/function/Consumer;)V b
net/minecraft/client/gui/layouts/Layout esh
	arrangeElements ()V c
	visitChildren (Ljava/util/function/Consumer;)V b
	visitWidgets (Ljava/util/function/Consumer;)V a
net/minecraft/client/gui/layouts/LayoutElement esi
	getHeight ()I h
	getRectangle ()Lnet/minecraft/client/gui/navigation/ScreenRectangle; s
	getWidth ()I k
	getX ()I p
	getY ()I r
	setPosition (II)V b
	setX (I)V e
	setY (I)V f
	visitWidgets (Ljava/util/function/Consumer;)V a
net/minecraft/client/gui/layouts/LayoutSettings esj
	align (FF)Lnet/minecraft/client/gui/layouts/LayoutSettings; a
	alignHorizontally (F)Lnet/minecraft/client/gui/layouts/LayoutSettings; a
	alignHorizontallyCenter ()Lnet/minecraft/client/gui/layouts/LayoutSettings; b
	alignHorizontallyLeft ()Lnet/minecraft/client/gui/layouts/LayoutSettings; a
	alignHorizontallyRight ()Lnet/minecraft/client/gui/layouts/LayoutSettings; c
	alignVertically (F)Lnet/minecraft/client/gui/layouts/LayoutSettings; b
	alignVerticallyBottom ()Lnet/minecraft/client/gui/layouts/LayoutSettings; f
	alignVerticallyMiddle ()Lnet/minecraft/client/gui/layouts/LayoutSettings; e
	alignVerticallyTop ()Lnet/minecraft/client/gui/layouts/LayoutSettings; d
	copy ()Lnet/minecraft/client/gui/layouts/LayoutSettings; g
	defaults ()Lnet/minecraft/client/gui/layouts/LayoutSettings; i
	getExposed ()Lnet/minecraft/client/gui/layouts/LayoutSettings$LayoutSettingsImpl; h
	padding (I)Lnet/minecraft/client/gui/layouts/LayoutSettings; a
	padding (II)Lnet/minecraft/client/gui/layouts/LayoutSettings; a
	padding (IIII)Lnet/minecraft/client/gui/layouts/LayoutSettings; a
	paddingBottom (I)Lnet/minecraft/client/gui/layouts/LayoutSettings; e
	paddingHorizontal (I)Lnet/minecraft/client/gui/layouts/LayoutSettings; f
	paddingLeft (I)Lnet/minecraft/client/gui/layouts/LayoutSettings; b
	paddingRight (I)Lnet/minecraft/client/gui/layouts/LayoutSettings; d
	paddingTop (I)Lnet/minecraft/client/gui/layouts/LayoutSettings; c
	paddingVertical (I)Lnet/minecraft/client/gui/layouts/LayoutSettings; g
net/minecraft/client/gui/layouts/LayoutSettings$LayoutSettingsImpl esj$a
	paddingBottom d
	paddingLeft a
	paddingRight c
	paddingTop b
	xAlignment e
	yAlignment f
	align (FF)Lnet/minecraft/client/gui/layouts/LayoutSettings$LayoutSettingsImpl; b
	align (FF)Lnet/minecraft/client/gui/layouts/LayoutSettings; a
	alignHorizontally (F)Lnet/minecraft/client/gui/layouts/LayoutSettings$LayoutSettingsImpl; c
	alignHorizontally (F)Lnet/minecraft/client/gui/layouts/LayoutSettings; a
	alignVertically (F)Lnet/minecraft/client/gui/layouts/LayoutSettings$LayoutSettingsImpl; d
	alignVertically (F)Lnet/minecraft/client/gui/layouts/LayoutSettings; b
	copy ()Lnet/minecraft/client/gui/layouts/LayoutSettings$LayoutSettingsImpl; j
	copy ()Lnet/minecraft/client/gui/layouts/LayoutSettings; g
	getExposed ()Lnet/minecraft/client/gui/layouts/LayoutSettings$LayoutSettingsImpl; h
	padding (I)Lnet/minecraft/client/gui/layouts/LayoutSettings$LayoutSettingsImpl; h
	padding (I)Lnet/minecraft/client/gui/layouts/LayoutSettings; a
	padding (II)Lnet/minecraft/client/gui/layouts/LayoutSettings$LayoutSettingsImpl; b
	padding (II)Lnet/minecraft/client/gui/layouts/LayoutSettings; a
	padding (IIII)Lnet/minecraft/client/gui/layouts/LayoutSettings$LayoutSettingsImpl; b
	padding (IIII)Lnet/minecraft/client/gui/layouts/LayoutSettings; a
	paddingBottom (I)Lnet/minecraft/client/gui/layouts/LayoutSettings$LayoutSettingsImpl; l
	paddingBottom (I)Lnet/minecraft/client/gui/layouts/LayoutSettings; e
	paddingHorizontal (I)Lnet/minecraft/client/gui/layouts/LayoutSettings$LayoutSettingsImpl; m
	paddingHorizontal (I)Lnet/minecraft/client/gui/layouts/LayoutSettings; f
	paddingLeft (I)Lnet/minecraft/client/gui/layouts/LayoutSettings$LayoutSettingsImpl; i
	paddingLeft (I)Lnet/minecraft/client/gui/layouts/LayoutSettings; b
	paddingRight (I)Lnet/minecraft/client/gui/layouts/LayoutSettings$LayoutSettingsImpl; k
	paddingRight (I)Lnet/minecraft/client/gui/layouts/LayoutSettings; d
	paddingTop (I)Lnet/minecraft/client/gui/layouts/LayoutSettings$LayoutSettingsImpl; j
	paddingTop (I)Lnet/minecraft/client/gui/layouts/LayoutSettings; c
	paddingVertical (I)Lnet/minecraft/client/gui/layouts/LayoutSettings$LayoutSettingsImpl; n
	paddingVertical (I)Lnet/minecraft/client/gui/layouts/LayoutSettings; g
net/minecraft/client/gui/layouts/LinearLayout esk
	children d
	defaultChildLayoutSettings e
	orientation c
	addChild (Lnet/minecraft/client/gui/layouts/LayoutElement;)Lnet/minecraft/client/gui/layouts/LayoutElement; a
	addChild (Lnet/minecraft/client/gui/layouts/LayoutElement;Lnet/minecraft/client/gui/layouts/LayoutSettings;)Lnet/minecraft/client/gui/layouts/LayoutElement; a
	arrangeElements ()V c
	defaultChildLayoutSetting ()Lnet/minecraft/client/gui/layouts/LayoutSettings; b
	newChildLayoutSettings ()Lnet/minecraft/client/gui/layouts/LayoutSettings; a
	visitChildren (Ljava/util/function/Consumer;)V b
net/minecraft/client/gui/layouts/LinearLayout$ChildContainer esk$a
net/minecraft/client/gui/layouts/LinearLayout$Orientation esk$b
	$VALUES c
	HORIZONTAL a
	VERTICAL b
	$values ()[Lnet/minecraft/client/gui/layouts/LinearLayout$Orientation; a
	getPrimaryLength (Lnet/minecraft/client/gui/layouts/LayoutElement;)I a
	getPrimaryLength (Lnet/minecraft/client/gui/layouts/LinearLayout$ChildContainer;)I a
	getPrimaryPosition (Lnet/minecraft/client/gui/layouts/LayoutElement;)I c
	getSecondaryLength (Lnet/minecraft/client/gui/layouts/LayoutElement;)I b
	getSecondaryLength (Lnet/minecraft/client/gui/layouts/LinearLayout$ChildContainer;)I b
	getSecondaryPosition (Lnet/minecraft/client/gui/layouts/LayoutElement;)I d
	setPrimaryPosition (Lnet/minecraft/client/gui/layouts/LinearLayout$ChildContainer;I)V a
	setSecondaryPosition (Lnet/minecraft/client/gui/layouts/LinearLayout$ChildContainer;II)V a
net/minecraft/client/gui/layouts/SpacerElement esl
	height d
	width c
	x a
	y b
	getHeight ()I h
	getWidth ()I k
	getX ()I p
	getY ()I r
	height (I)Lnet/minecraft/client/gui/layouts/SpacerElement; b
	setX (I)V e
	setY (I)V f
	visitWidgets (Ljava/util/function/Consumer;)V a
	width (I)Lnet/minecraft/client/gui/layouts/SpacerElement; a
net/minecraft/client/gui/narration/NarratableEntry esn
	isActive ()Z aD_
	narrationPriority ()Lnet/minecraft/client/gui/narration/NarratableEntry$NarrationPriority; q
net/minecraft/client/gui/narration/NarratableEntry$NarrationPriority esn$a
	$VALUES d
	FOCUSED c
	HOVERED b
	NONE a
	$values ()[Lnet/minecraft/client/gui/narration/NarratableEntry$NarrationPriority; b
	isTerminal ()Z a
net/minecraft/client/gui/narration/NarratedElementType eso
	$VALUES e
	HINT c
	POSITION b
	TITLE a
	USAGE d
	$values ()[Lnet/minecraft/client/gui/narration/NarratedElementType; a
net/minecraft/client/gui/narration/NarrationElementOutput esp
	add (Lnet/minecraft/client/gui/narration/NarratedElementType;Ljava/lang/String;)V a
	add (Lnet/minecraft/client/gui/narration/NarratedElementType;Lnet/minecraft/client/gui/narration/NarrationThunk;)V a
	add (Lnet/minecraft/client/gui/narration/NarratedElementType;Lnet/minecraft/network/chat/Component;)V a
	add (Lnet/minecraft/client/gui/narration/NarratedElementType;[Lnet/minecraft/network/chat/Component;)V a
	nest ()Lnet/minecraft/client/gui/narration/NarrationElementOutput; a
net/minecraft/client/gui/narration/NarrationSupplier esq
	updateNarration (Lnet/minecraft/client/gui/narration/NarrationElementOutput;)V b
net/minecraft/client/gui/narration/NarrationThunk esr
	EMPTY a
	contents b
	converter c
	from (Ljava/lang/String;)Lnet/minecraft/client/gui/narration/NarrationThunk; a
	from (Ljava/util/List;)Lnet/minecraft/client/gui/narration/NarrationThunk; a
	from (Lnet/minecraft/network/chat/Component;)Lnet/minecraft/client/gui/narration/NarrationThunk; a
	getText (Ljava/util/function/Consumer;)V a
net/minecraft/client/gui/narration/ScreenNarrationCollector ess
	entries b
	generation a
	collectNarrationText (Z)Ljava/lang/String; a
	update (Ljava/util/function/Consumer;)V a
net/minecraft/client/gui/narration/ScreenNarrationCollector$EntryKey ess$a
	depth b
	type a
net/minecraft/client/gui/narration/ScreenNarrationCollector$NarrationEntry ess$b
	alreadyNarrated c
	contents a
	generation b
	update (ILnet/minecraft/client/gui/narration/NarrationThunk;)Lnet/minecraft/client/gui/narration/ScreenNarrationCollector$NarrationEntry; a
net/minecraft/client/gui/narration/ScreenNarrationCollector$Output ess$c
	depth b
	add (Lnet/minecraft/client/gui/narration/NarratedElementType;Lnet/minecraft/client/gui/narration/NarrationThunk;)V a
	nest ()Lnet/minecraft/client/gui/narration/NarrationElementOutput; a
net/minecraft/client/gui/navigation/CommonInputs esu
	selected (I)Z a
net/minecraft/client/gui/navigation/FocusNavigationEvent esv
	getVerticalDirectionForInitialFocus ()Lnet/minecraft/client/gui/navigation/ScreenDirection; a
net/minecraft/client/gui/navigation/FocusNavigationEvent$ArrowNavigation esv$a
	direction a
	direction ()Lnet/minecraft/client/gui/navigation/ScreenDirection; b
	getVerticalDirectionForInitialFocus ()Lnet/minecraft/client/gui/navigation/ScreenDirection; a
net/minecraft/client/gui/navigation/FocusNavigationEvent$InitialFocus esv$b
	getVerticalDirectionForInitialFocus ()Lnet/minecraft/client/gui/navigation/ScreenDirection; a
net/minecraft/client/gui/navigation/FocusNavigationEvent$TabNavigation esv$c
	forward a
	forward ()Z b
	getVerticalDirectionForInitialFocus ()Lnet/minecraft/client/gui/navigation/ScreenDirection; a
net/minecraft/client/gui/navigation/ScreenAxis esw
	$VALUES c
	HORIZONTAL a
	VERTICAL b
	$values ()[Lnet/minecraft/client/gui/navigation/ScreenAxis; d
	getDirection (Z)Lnet/minecraft/client/gui/navigation/ScreenDirection; a
	getNegative ()Lnet/minecraft/client/gui/navigation/ScreenDirection; c
	getPositive ()Lnet/minecraft/client/gui/navigation/ScreenDirection; b
	orthogonal ()Lnet/minecraft/client/gui/navigation/ScreenAxis; a
net/minecraft/client/gui/navigation/ScreenDirection esx
	$VALUES f
	DOWN b
	LEFT c
	RIGHT d
	UP a
	coordinateValueComparator e
	$values ()[Lnet/minecraft/client/gui/navigation/ScreenDirection; e
	coordinateValueComparator ()Lit/unimi/dsi/fastutil/ints/IntComparator; d
	getAxis ()Lnet/minecraft/client/gui/navigation/ScreenAxis; a
	getOpposite ()Lnet/minecraft/client/gui/navigation/ScreenDirection; b
	isAfter (II)Z a
	isBefore (II)Z b
	isPositive ()Z c
net/minecraft/client/gui/navigation/ScreenPosition esy
	x a
	y b
	getCoordinate (Lnet/minecraft/client/gui/navigation/ScreenAxis;)I a
	of (Lnet/minecraft/client/gui/navigation/ScreenAxis;II)Lnet/minecraft/client/gui/navigation/ScreenPosition; a
	step (Lnet/minecraft/client/gui/navigation/ScreenDirection;)Lnet/minecraft/client/gui/navigation/ScreenPosition; a
	x ()I a
	y ()I b
net/minecraft/client/gui/navigation/ScreenRectangle esz
	EMPTY d
	height c
	position a
	width b
	bottom ()I c
	empty ()Lnet/minecraft/client/gui/navigation/ScreenRectangle; a
	getBorder (Lnet/minecraft/client/gui/navigation/ScreenDirection;)Lnet/minecraft/client/gui/navigation/ScreenRectangle; c
	getBoundInDirection (Lnet/minecraft/client/gui/navigation/ScreenDirection;)I b
	getCenterInAxis (Lnet/minecraft/client/gui/navigation/ScreenAxis;)I b
	getLength (Lnet/minecraft/client/gui/navigation/ScreenAxis;)I a
	height ()I h
	intersection (Lnet/minecraft/client/gui/navigation/ScreenRectangle;)Lnet/minecraft/client/gui/navigation/ScreenRectangle; b
	left ()I d
	of (Lnet/minecraft/client/gui/navigation/ScreenAxis;IIII)Lnet/minecraft/client/gui/navigation/ScreenRectangle; a
	overlaps (Lnet/minecraft/client/gui/navigation/ScreenRectangle;)Z a
	overlapsInAxis (Lnet/minecraft/client/gui/navigation/ScreenRectangle;Lnet/minecraft/client/gui/navigation/ScreenAxis;)Z a
	position ()Lnet/minecraft/client/gui/navigation/ScreenPosition; f
	right ()I e
	step (Lnet/minecraft/client/gui/navigation/ScreenDirection;)Lnet/minecraft/client/gui/navigation/ScreenRectangle; a
	top ()I b
	width ()I g
net/minecraft/client/gui/screens/AccessibilityOnboardingScreen etc
	ONBOARDING_NARRATOR_MESSAGE a
	PADDING b
	TITLE_PADDING c
	hasNarrated o
	logoRenderer l
	narratorAvailable n
	options m
	panorama k
	textWidget q
	timer p
	closeAndSetScreen (Lnet/minecraft/client/gui/screens/Screen;)V a
	handleInitialNarrationDelay ()V B
	init ()V b
	initTitleYPos ()I l
	onClose ()V aw_
	render (Lnet/minecraft/client/gui/GuiGraphics;IIF)V a
net/minecraft/client/gui/screens/AccessibilityOptionsScreen etd
	createFooter ()V e
	init ()V b
	options (Lnet/minecraft/client/Options;)[Lnet/minecraft/client/OptionInstance; a
net/minecraft/client/gui/screens/AlertScreen ete
	LABEL_Y a
	callback k
	message c
	messageText b
	okButton l
	shouldCloseOnEsc m
	getNarrationMessage ()Lnet/minecraft/network/chat/Component; au_
	init ()V b
	render (Lnet/minecraft/client/gui/GuiGraphics;IIF)V a
	shouldCloseOnEsc ()Z av_
net/minecraft/client/gui/screens/BackupConfirmScreen etf
	description k
	eraseCache n
	id b
	lastScreen c
	listener a
	message m
	promptForCacheErase l
	init ()V b
	keyPressed (III)Z a
	render (Lnet/minecraft/client/gui/GuiGraphics;IIF)V a
	shouldCloseOnEsc ()Z av_
net/minecraft/client/gui/screens/BackupConfirmScreen$Listener etf$a
net/minecraft/client/gui/screens/BanNoticeScreen etg
	PERMANENT_BAN_TITLE b
	TEMPORARY_BAN_TITLE a
	create (Lit/unimi/dsi/fastutil/booleans/BooleanConsumer;Lcom/mojang/authlib/minecraft/BanDetails;)Lnet/minecraft/client/gui/screens/ConfirmLinkScreen; a
	getBanDurationText (Lcom/mojang/authlib/minecraft/BanDetails;)Lnet/minecraft/network/chat/Component; e
	getBanReasonText (Lcom/mojang/authlib/minecraft/BanDetails;)Lnet/minecraft/network/chat/Component; c
	getBanStatusText (Lcom/mojang/authlib/minecraft/BanDetails;)Lnet/minecraft/network/chat/Component; d
	getBannedScreenText (Lcom/mojang/authlib/minecraft/BanDetails;)Lnet/minecraft/network/chat/Component; b
	getBannedTitle (Lcom/mojang/authlib/minecraft/BanDetails;)Lnet/minecraft/network/chat/Component; a
	isTemporaryBan (Lcom/mojang/authlib/minecraft/BanDetails;)Z f
net/minecraft/client/gui/screens/ChatOptionsScreen eth
net/minecraft/client/gui/screens/ChatScreen eti
	MOUSE_SCROLL_SPEED a
	TOOLTIP_MAX_WIDTH k
	USAGE_TEXT c
	commandSuggestions o
	historyBuffer l
	historyPos m
	initial n
	input b
	getComponentStyleAt (DD)Lnet/minecraft/network/chat/Style; a
	handleChatInput (Ljava/lang/String;Z)Z b
	init ()V b
	insertText (Ljava/lang/String;Z)V a
	isPauseScreen ()Z az_
	keyPressed (III)Z a
	mouseClicked (DDI)Z a
	mouseScrolled (DDD)Z a
	moveInHistory (I)V a
	normalizeChatMessage (Ljava/lang/String;)Ljava/lang/String; a
	onEdited (Ljava/lang/String;)V b
	removed ()V ax_
	render (Lnet/minecraft/client/gui/GuiGraphics;IIF)V a
	resize (Lnet/minecraft/client/Minecraft;II)V a
	setChatLine (Ljava/lang/String;)V c
	tick ()V f
	updateNarrationState (Lnet/minecraft/client/gui/narration/NarrationElementOutput;)V a
net/minecraft/client/gui/screens/ConfirmLinkScreen etj
	COPY_BUTTON_TEXT k
	WARNING_TEXT l
	showWarning n
	url m
	addButtons (I)V a
	confirmLink (Ljava/lang/String;Lnet/minecraft/client/gui/screens/Screen;Z)Lnet/minecraft/client/gui/components/Button$OnPress; b
	confirmLinkNow (Ljava/lang/String;Lnet/minecraft/client/gui/screens/Screen;Z)V a
	confirmMessage (Z)Lnet/minecraft/network/chat/MutableComponent; c
	confirmMessage (ZLjava/lang/String;)Lnet/minecraft/network/chat/MutableComponent; a
	copyToClipboard ()V j
	render (Lnet/minecraft/client/gui/GuiGraphics;IIF)V a
net/minecraft/client/gui/screens/ConfirmScreen etk
	MARGIN k
	callback c
	delayTicker n
	exitButtons o
	message l
	multilineMessage m
	noButton b
	yesButton a
	addButtons (I)V a
	addExitButton (Lnet/minecraft/client/gui/components/Button;)V a
	getNarrationMessage ()Lnet/minecraft/network/chat/Component; au_
	init ()V b
	keyPressed (III)Z a
	messageHeight ()I C
	messageTop ()I B
	render (Lnet/minecraft/client/gui/GuiGraphics;IIF)V a
	setDelay (I)V b
	shouldCloseOnEsc ()Z av_
	tick ()V f
	titleTop ()I l
net/minecraft/client/gui/screens/ConnectScreen etl
	ABORT_CONNECTION l
	LOGGER c
	NARRATION_DELAY_MS k
	UNIQUE_THREAD_ID b
	UNKNOWN_HOST_MESSAGE a
	aborted o
	channelFuture n
	connectFailedTitle s
	connection m
	lastNarration r
	parent p
	status q
	connect (Lnet/minecraft/client/Minecraft;Lnet/minecraft/client/multiplayer/resolver/ServerAddress;Lnet/minecraft/client/multiplayer/ServerData;)V a
	init ()V b
	render (Lnet/minecraft/client/gui/GuiGraphics;IIF)V a
	shouldCloseOnEsc ()Z av_
	startConnecting (Lnet/minecraft/client/gui/screens/Screen;Lnet/minecraft/client/Minecraft;Lnet/minecraft/client/multiplayer/resolver/ServerAddress;Lnet/minecraft/client/multiplayer/ServerData;Z)V a
	tick ()V f
	updateStatus (Lnet/minecraft/network/chat/Component;)V a
net/minecraft/client/gui/screens/CreateBuffetWorldScreen etm
	BIOME_SELECT_INFO a
	applySettings c
	biome m
	biomes k
	doneButton n
	list l
	parent b
	init ()V b
	onClose ()V aw_
	render (Lnet/minecraft/client/gui/GuiGraphics;IIF)V a
	updateButtonValidity ()V l
net/minecraft/client/gui/screens/CreateBuffetWorldScreen$BiomeList etm$a
	setSelected (Lnet/minecraft/client/gui/components/AbstractSelectionList$Entry;)V a
	setSelected (Lnet/minecraft/client/gui/screens/CreateBuffetWorldScreen$BiomeList$Entry;)V a
net/minecraft/client/gui/screens/CreateBuffetWorldScreen$BiomeList$Entry etm$a$a
	biome b
	name c
	getNarration ()Lnet/minecraft/network/chat/Component; a
	mouseClicked (DDI)Z a
	render (Lnet/minecraft/client/gui/GuiGraphics;IIIIIIIZF)V a
net/minecraft/client/gui/screens/CreateFlatWorldScreen etn
	SLOT_BG_SIZE c
	SLOT_BG_X l
	SLOT_BG_Y m
	SLOT_FG_X n
	SLOT_FG_Y o
	SLOT_STAT_HEIGHT k
	SLOT_TEX_SIZE b
	applySettings p
	columnHeight s
	columnType r
	deleteLayerButton u
	generator q
	list t
	parent a
	hasValidSelection ()Z B
	init ()V b
	onClose ()V aw_
	render (Lnet/minecraft/client/gui/GuiGraphics;IIF)V a
	setConfig (Lnet/minecraft/world/level/levelgen/flat/FlatLevelGeneratorSettings;)V a
	settings ()Lnet/minecraft/world/level/levelgen/flat/FlatLevelGeneratorSettings; j
	updateButtonValidity ()V l
net/minecraft/client/gui/screens/CreateFlatWorldScreen$DetailsList etn$a
	STATS_ICON_LOCATION l
	getScrollbarPosition ()I c
	resetRows ()V d
	setSelected (Lnet/minecraft/client/gui/components/AbstractSelectionList$Entry;)V a
	setSelected (Lnet/minecraft/client/gui/screens/CreateFlatWorldScreen$DetailsList$Entry;)V a
net/minecraft/client/gui/screens/CreateFlatWorldScreen$DetailsList$Entry etn$a$a
	blitSlot (Lnet/minecraft/client/gui/GuiGraphics;IILnet/minecraft/world/item/ItemStack;)V a
	blitSlotBg (Lnet/minecraft/client/gui/GuiGraphics;II)V a
	getDisplayItem (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/item/ItemStack; a
	getNarration ()Lnet/minecraft/network/chat/Component; a
	mouseClicked (DDI)Z a
	render (Lnet/minecraft/client/gui/GuiGraphics;IIIIIIIZF)V a
net/minecraft/client/gui/screens/CreditsAndAttributionScreen eto
	ATTRIBUTION_BUTTON l
	BUTTON_SPACING a
	BUTTON_WIDTH b
	CREDITS_BUTTON k
	LICENSES_BUTTON m
	TITLE c
	lastScreen n
	layout o
	init ()V b
	onClose ()V aw_
	openCreditsScreen ()V l
	render (Lnet/minecraft/client/gui/GuiGraphics;IIF)V a
	repositionElements ()V aG_
net/minecraft/client/gui/screens/DatapackLoadFailureScreen etp
	callback b
	message a
	init ()V b
	render (Lnet/minecraft/client/gui/GuiGraphics;IIF)V a
	shouldCloseOnEsc ()Z av_
net/minecraft/client/gui/screens/DeathScreen etq
	causeOfDeath b
	deathScore k
	delayTicker a
	exitButtons l
	exitToTitleButton m
	hardcore c
	exitToTitleScreen ()V B
	getClickedComponentStyleAt (I)Lnet/minecraft/network/chat/Style; a
	handleExitToTitleScreen ()V l
	init ()V b
	isPauseScreen ()Z az_
	mouseClicked (DDI)Z a
	render (Lnet/minecraft/client/gui/GuiGraphics;IIF)V a
	setButtonsActive (Z)V c
	shouldCloseOnEsc ()Z av_
	tick ()V f
net/minecraft/client/gui/screens/DeathScreen$TitleConfirmScreen etq$a
net/minecraft/client/gui/screens/DemoIntroScreen etr
	DEMO_BACKGROUND_LOCATION a
	durationMessage c
	movementMessage b
	init ()V b
	render (Lnet/minecraft/client/gui/GuiGraphics;IIF)V a
	renderBackground (Lnet/minecraft/client/gui/GuiGraphics;)V a
net/minecraft/client/gui/screens/DirectJoinServerScreen ets
	ENTER_IP_LABEL a
	callback l
	ipEdit k
	lastScreen m
	selectButton b
	serverData c
	init ()V b
	keyPressed (III)Z a
	onClose ()V aw_
	onSelect ()V l
	removed ()V ax_
	render (Lnet/minecraft/client/gui/GuiGraphics;IIF)V a
	resize (Lnet/minecraft/client/Minecraft;II)V a
	tick ()V f
	updateSelectButtonStatus ()V B
net/minecraft/client/gui/screens/DisconnectedScreen ett
	TO_SERVER_LIST a
	TO_TITLE b
	buttonText l
	layout m
	parent c
	reason k
	getNarrationMessage ()Lnet/minecraft/network/chat/Component; au_
	init ()V b
	render (Lnet/minecraft/client/gui/GuiGraphics;IIF)V a
	repositionElements ()V aG_
	shouldCloseOnEsc ()Z av_
net/minecraft/client/gui/screens/EditServerScreen etu
	IP_LABEL b
	NAME_LABEL a
	addButton c
	callback k
	ipEdit m
	lastScreen o
	nameEdit n
	serverData l
	init ()V b
	onAdd ()V l
	onClose ()V aw_
	render (Lnet/minecraft/client/gui/GuiGraphics;IIF)V a
	resize (Lnet/minecraft/client/Minecraft;II)V a
	tick ()V f
	updateAddButtonStatus ()V B
net/minecraft/client/gui/screens/ErrorScreen etv
	message a
	init ()V b
	render (Lnet/minecraft/client/gui/GuiGraphics;IIF)V a
	shouldCloseOnEsc ()Z av_
net/minecraft/client/gui/screens/FaviconTexture etw
	HEIGHT c
	MISSING_LOCATION a
	WIDTH b
	closed g
	texture f
	textureLocation e
	textureManager d
	checkOpen ()V c
	clear ()V a
	forServer (Lnet/minecraft/client/renderer/texture/TextureManager;Ljava/lang/String;)Lnet/minecraft/client/gui/screens/FaviconTexture; b
	forWorld (Lnet/minecraft/client/renderer/texture/TextureManager;Ljava/lang/String;)Lnet/minecraft/client/gui/screens/FaviconTexture; a
	textureLocation ()Lnet/minecraft/resources/ResourceLocation; b
	upload (Lcom/mojang/blaze3d/platform/NativeImage;)V a
net/minecraft/client/gui/screens/GenericDirtMessageScreen etx
	render (Lnet/minecraft/client/gui/GuiGraphics;IIF)V a
	shouldCloseOnEsc ()Z av_
net/minecraft/client/gui/screens/GenericWaitingScreen ety
	MESSAGE_MAX_WIDTH c
	MESSAGE_Y b
	TITLE_Y a
	button o
	buttonCallback m
	buttonLabel l
	disableButtonTicks p
	message n
	messageText k
	createCompleted (Lnet/minecraft/network/chat/Component;Lnet/minecraft/network/chat/Component;Lnet/minecraft/network/chat/Component;Ljava/lang/Runnable;)Lnet/minecraft/client/gui/screens/GenericWaitingScreen; a
	createWaiting (Lnet/minecraft/network/chat/Component;Lnet/minecraft/network/chat/Component;Ljava/lang/Runnable;)Lnet/minecraft/client/gui/screens/GenericWaitingScreen; a
	getNarrationMessage ()Lnet/minecraft/network/chat/Component; au_
	init ()V b
	onClose ()V aw_
	render (Lnet/minecraft/client/gui/GuiGraphics;IIF)V a
	shouldCloseOnEsc ()Z av_
	tick ()V f
net/minecraft/client/gui/screens/InBedChatScreen etz
	leaveBedButton c
	charTyped (CI)Z a
	init ()V b
	keyPressed (III)Z a
	onClose ()V aw_
	onPlayerWokeUp ()V k
	render (Lnet/minecraft/client/gui/GuiGraphics;IIF)V a
	sendWakeUp ()V l
net/minecraft/client/gui/screens/LanguageSelectScreen eua
	WARNING_LABEL c
	languageManager l
	packSelectionList k
	init ()V b
	keyPressed (III)Z a
	onDone ()V l
	render (Lnet/minecraft/client/gui/GuiGraphics;IIF)V a
net/minecraft/client/gui/screens/LanguageSelectScreen$LanguageSelectionList eua$a
	getRowWidth ()I b
	getScrollbarPosition ()I c
	renderBackground (Lnet/minecraft/client/gui/GuiGraphics;)V a
net/minecraft/client/gui/screens/LanguageSelectScreen$LanguageSelectionList$Entry eua$a$a
	code b
	language c
	lastClickTime d
	getNarration ()Lnet/minecraft/network/chat/Component; a
	mouseClicked (DDI)Z a
	render (Lnet/minecraft/client/gui/GuiGraphics;IIIIIIIZF)V a
	select ()V b
net/minecraft/client/gui/screens/LevelLoadingScreen eub
	COLORS l
	NARRATION_DELAY_MS a
	done k
	lastNarration c
	progressListener b
	getFormattedProgress ()Ljava/lang/String; l
	removed ()V ax_
	render (Lnet/minecraft/client/gui/GuiGraphics;IIF)V a
	renderChunks (Lnet/minecraft/client/gui/GuiGraphics;Lnet/minecraft/server/level/progress/StoringChunkProgressListener;IIII)V a
	shouldCloseOnEsc ()Z av_
	shouldNarrateNavigation ()Z aH_
	updateNarratedWidget (Lnet/minecraft/client/gui/narration/NarrationElementOutput;)V b
net/minecraft/client/gui/screens/LoadingDotsText euc
	FRAMES a
	INTERVAL_MS b
	get (J)Ljava/lang/String; a
net/minecraft/client/gui/screens/LoadingOverlay eud
	BRAND_BACKGROUND f
	FADE_IN_TIME b
	FADE_OUT_TIME a
	LOGO_BACKGROUND_COLOR d
	LOGO_BACKGROUND_COLOR_DARK e
	LOGO_HALF j
	LOGO_OVERLAP k
	LOGO_QUARTER i
	LOGO_QUARTER_FLOAT h
	LOGO_SCALE g
	MOJANG_STUDIOS_LOGO_LOCATION c
	SMOOTHING l
	currentProgress q
	fadeIn p
	fadeInStart s
	fadeOutStart r
	minecraft m
	onFinish o
	reload n
	drawProgressBar (Lnet/minecraft/client/gui/GuiGraphics;IIIIF)V a
	isPauseScreen ()Z a
	registerTextures (Lnet/minecraft/client/Minecraft;)V a
	render (Lnet/minecraft/client/gui/GuiGraphics;IIF)V a
	replaceAlpha (II)I a
net/minecraft/client/gui/screens/LoadingOverlay$LogoTexture eud$a
	getTextureImage (Lnet/minecraft/server/packs/resources/ResourceManager;)Lnet/minecraft/client/renderer/texture/SimpleTexture$TextureImage; b
net/minecraft/client/gui/screens/MenuScreens eue
	LOGGER a
	SCREENS b
	create (Lnet/minecraft/world/inventory/MenuType;Lnet/minecraft/client/Minecraft;ILnet/minecraft/network/chat/Component;)V a
	getConstructor (Lnet/minecraft/world/inventory/MenuType;)Lnet/minecraft/client/gui/screens/MenuScreens$ScreenConstructor; a
	register (Lnet/minecraft/world/inventory/MenuType;Lnet/minecraft/client/gui/screens/MenuScreens$ScreenConstructor;)V a
	selfTest ()Z a
net/minecraft/client/gui/screens/MenuScreens$ScreenConstructor eue$a
	fromPacket (Lnet/minecraft/network/chat/Component;Lnet/minecraft/world/inventory/MenuType;Lnet/minecraft/client/Minecraft;I)V a
net/minecraft/client/gui/screens/MouseSettingsScreen euf
	list c
	init ()V b
	options (Lnet/minecraft/client/Options;)[Lnet/minecraft/client/OptionInstance; a
	render (Lnet/minecraft/client/gui/GuiGraphics;IIF)V a
net/minecraft/client/gui/screens/OnlineOptionsScreen eug
	difficultyDisplay l
	createOnlineOptionsScreen (Lnet/minecraft/client/Minecraft;Lnet/minecraft/client/gui/screens/Screen;Lnet/minecraft/client/Options;)Lnet/minecraft/client/gui/screens/OnlineOptionsScreen; a
	init ()V b
net/minecraft/client/gui/screens/OptionsScreen euh
	ACCESSIBILITY o
	CHAT m
	COLUMNS r
	CONTROLS k
	CREDITS_AND_ATTRIBUTION q
	LANGUAGE l
	RESOURCEPACK n
	SKIN_CUSTOMIZATION a
	SOUNDS b
	TELEMETRY p
	VIDEO c
	difficultyButton u
	lastScreen s
	lockButton v
	options t
	applyPacks (Lnet/minecraft/server/packs/repository/PackRepository;)V a
	createDifficultyButton (IILjava/lang/String;Lnet/minecraft/client/Minecraft;)Lnet/minecraft/client/gui/components/CycleButton; a
	createOnlineButton ()Lnet/minecraft/client/gui/layouts/LayoutElement; l
	init ()V b
	lockCallback (Z)V c
	openScreenButton (Lnet/minecraft/network/chat/Component;Ljava/util/function/Supplier;)Lnet/minecraft/client/gui/components/Button; a
	removed ()V ax_
	render (Lnet/minecraft/client/gui/GuiGraphics;IIF)V a
net/minecraft/client/gui/screens/OptionsSubScreen eui
	lastScreen a
	options b
	basicListRender (Lnet/minecraft/client/gui/GuiGraphics;Lnet/minecraft/client/gui/components/OptionsList;IIF)V a
	onClose ()V aw_
	removed ()V ax_
net/minecraft/client/gui/screens/OutOfMemoryScreen euj
	message a
	init ()V b
	render (Lnet/minecraft/client/gui/GuiGraphics;IIF)V a
	shouldCloseOnEsc ()Z av_
net/minecraft/client/gui/screens/Overlay euk
	isPauseScreen ()Z a
net/minecraft/client/gui/screens/PauseScreen eul
	ADVANCEMENTS n
	BUTTON_PADDING c
	BUTTON_WIDTH_FULL k
	BUTTON_WIDTH_HALF l
	COLUMNS a
	DISCONNECT v
	GAME x
	MENU_PADDING_TOP b
	OPTIONS r
	PAUSED y
	PLAYER_REPORTING t
	REPORT_BUGS q
	RETURN_TO_GAME m
	RETURN_TO_MENU u
	SAVING_LEVEL w
	SEND_FEEDBACK p
	SHARE_TO_LAN s
	STATS o
	disconnectButton A
	showPauseMenu z
	createPauseMenu ()V l
	init ()V b
	onDisconnect ()V B
	openLinkButton (Lnet/minecraft/network/chat/Component;Ljava/lang/String;)Lnet/minecraft/client/gui/components/Button; a
	openScreenButton (Lnet/minecraft/network/chat/Component;Ljava/util/function/Supplier;)Lnet/minecraft/client/gui/components/Button; a
	render (Lnet/minecraft/client/gui/GuiGraphics;IIF)V a
	tick ()V f
net/minecraft/client/gui/screens/PopupScreen eum
	BUTTON_HEIGHT c
	BUTTON_MARGIN b
	BUTTON_PADDING a
	buttonOptions m
	buttonWidth p
	contentTop o
	message l
	messageLines n
	narrationMessage k
	getNarrationMessage ()Lnet/minecraft/network/chat/Component; au_
	init ()V b
	render (Lnet/minecraft/client/gui/GuiGraphics;IIF)V a
	shouldCloseOnEsc ()Z av_
net/minecraft/client/gui/screens/PopupScreen$ButtonOption eum$a
	message a
	onPress b
net/minecraft/client/gui/screens/PresetFlatWorldScreen eun
	DEFAULT_BIOME q
	LOGGER b
	SLOT_BG_SIZE k
	SLOT_BG_X m
	SLOT_BG_Y n
	SLOT_FG_X o
	SLOT_FG_Y p
	SLOT_STAT_HEIGHT l
	SLOT_TEX_SIZE c
	UNKNOWN_PRESET a
	export w
	list u
	listText t
	parent r
	selectButton v
	settings x
	shareText s
	fromString (Lnet/minecraft/core/HolderGetter;Lnet/minecraft/core/HolderGetter;Lnet/minecraft/core/HolderGetter;Lnet/minecraft/core/HolderGetter;Ljava/lang/String;Lnet/minecraft/world/level/levelgen/flat/FlatLevelGeneratorSettings;)Lnet/minecraft/world/level/levelgen/flat/FlatLevelGeneratorSettings; a
	getLayerInfoFromString (Lnet/minecraft/core/HolderGetter;Ljava/lang/String;I)Lnet/minecraft/world/level/levelgen/flat/FlatLayerInfo; a
	getLayersInfoFromString (Lnet/minecraft/core/HolderGetter;Ljava/lang/String;)Ljava/util/List; a
	init ()V b
	mouseScrolled (DDD)Z a
	onClose ()V aw_
	render (Lnet/minecraft/client/gui/GuiGraphics;IIF)V a
	resize (Lnet/minecraft/client/Minecraft;II)V a
	save (Lnet/minecraft/world/level/levelgen/flat/FlatLevelGeneratorSettings;)Ljava/lang/String; a
	tick ()V f
	updateButtonValidity (Z)V c
net/minecraft/client/gui/screens/PresetFlatWorldScreen$PresetsList eun$a
	keyPressed (III)Z a
	setSelected (Lnet/minecraft/client/gui/components/AbstractSelectionList$Entry;)V a
	setSelected (Lnet/minecraft/client/gui/screens/PresetFlatWorldScreen$PresetsList$Entry;)V a
net/minecraft/client/gui/screens/PresetFlatWorldScreen$PresetsList$Entry eun$a$a
	STATS_ICON_LOCATION b
	name d
	preset c
	blitSlot (Lnet/minecraft/client/gui/GuiGraphics;IILnet/minecraft/world/item/Item;)V a
	blitSlotBg (Lnet/minecraft/client/gui/GuiGraphics;II)V a
	getNarration ()Lnet/minecraft/network/chat/Component; a
	mouseClicked (DDI)Z a
	render (Lnet/minecraft/client/gui/GuiGraphics;IIIIIIIZF)V a
	select ()V b
net/minecraft/client/gui/screens/ProgressScreen euo
	clearScreenAfterStop l
	header a
	progress c
	stage b
	stop k
	progressStage (Lnet/minecraft/network/chat/Component;)V c
	progressStagePercentage (I)V a
	progressStart (Lnet/minecraft/network/chat/Component;)V b
	progressStartNoAbort (Lnet/minecraft/network/chat/Component;)V a
	render (Lnet/minecraft/client/gui/GuiGraphics;IIF)V a
	shouldCloseOnEsc ()Z av_
	shouldNarrateNavigation ()Z aH_
	stop ()V a
net/minecraft/client/gui/screens/ReceivingLevelScreen eup
	CHUNK_LOADING_START_WAIT_LIMIT_MS b
	DOWNLOADING_TERRAIN_TEXT a
	createdAt l
	loadingPacketsReceived c
	oneTickSkipped k
	isPauseScreen ()Z az_
	loadingPacketsReceived ()V l
	onClose ()V aw_
	render (Lnet/minecraft/client/gui/GuiGraphics;IIF)V a
	shouldCloseOnEsc ()Z av_
	shouldNarrateNavigation ()Z aH_
	tick ()V f
net/minecraft/client/gui/screens/Screen euq
	ALLOWED_PROTOCOLS b
	BACKGROUND_LOCATION d
	LOGGER a
	NARRATE_DELAY_KEYBOARD_ACTION t
	NARRATE_DELAY_MOUSE_ACTION s
	NARRATE_DELAY_MOUSE_MOVE r
	NARRATE_DELAY_NARRATOR_ENABLED q
	NARRATE_SUPPRESS_AFTER_INIT_TIME p
	USAGE_NARRATION c
	children k
	clickedLink o
	deferredTooltipRendering y
	font i
	height h
	initialized m
	lastNarratable x
	minecraft f
	narratables l
	narrationState u
	narrationSuppressTime v
	nextNarrationTime w
	renderables n
	screenExecutor j
	title e
	width g
	addRenderableOnly (Lnet/minecraft/client/gui/components/Renderable;)Lnet/minecraft/client/gui/components/Renderable; a
	addRenderableWidget (Lnet/minecraft/client/gui/components/events/GuiEventListener;)Lnet/minecraft/client/gui/components/events/GuiEventListener; d
	addWidget (Lnet/minecraft/client/gui/components/events/GuiEventListener;)Lnet/minecraft/client/gui/components/events/GuiEventListener; e
	added ()V ay_
	afterKeyboardAction ()V x
	afterMouseAction ()V w
	afterMouseMove ()V v
	changeFocus (Lnet/minecraft/client/gui/ComponentPath;)V a
	children ()Ljava/util/List; i
	clearFocus ()V B
	clearWidgets ()V n
	confirmLink (Z)V c
	createArrowEvent (Lnet/minecraft/client/gui/navigation/ScreenDirection;)Lnet/minecraft/client/gui/navigation/FocusNavigationEvent$ArrowNavigation; a
	createTabEvent ()Lnet/minecraft/client/gui/navigation/FocusNavigationEvent$TabNavigation; l
	findNarratableWidget (Ljava/util/List;Lnet/minecraft/client/gui/narration/NarratableEntry;)Lnet/minecraft/client/gui/screens/Screen$NarratableSearchResult; a
	getBackgroundMusic ()Lnet/minecraft/sounds/Music; A
	getNarrationMessage ()Lnet/minecraft/network/chat/Component; au_
	getRectangle ()Lnet/minecraft/client/gui/navigation/ScreenRectangle; s
	getTitle ()Lnet/minecraft/network/chat/Component; m
	getTooltipFromItem (Lnet/minecraft/client/Minecraft;Lnet/minecraft/world/item/ItemStack;)Ljava/util/List; a
	handleComponentClicked (Lnet/minecraft/network/chat/Style;)Z a
	handleDelayedNarration ()V y
	hasAltDown ()Z r
	hasControlDown ()Z p
	hasShiftDown ()Z q
	hideWidgets ([Lnet/minecraft/client/gui/components/AbstractWidget;)V a
	init ()V b
	init (Lnet/minecraft/client/Minecraft;II)V b
	insertText (Ljava/lang/String;Z)V a
	isCopy (I)Z f
	isCut (I)Z d
	isMouseOver (DD)Z a_
	isPaste (I)Z e
	isPauseScreen ()Z az_
	isSelectAll (I)Z g
	isValidCharacterForName (Ljava/lang/String;CI)Z a
	keyPressed (III)Z a
	narrationEnabled ()V z
	onClose ()V aw_
	onFilesDrop (Ljava/util/List;)V a
	openLink (Ljava/net/URI;)V a
	rebuildWidgets ()V o
	removeWidget (Lnet/minecraft/client/gui/components/events/GuiEventListener;)V f
	removed ()V ax_
	render (Lnet/minecraft/client/gui/GuiGraphics;IIF)V a
	renderBackground (Lnet/minecraft/client/gui/GuiGraphics;)V a
	renderDirtBackground (Lnet/minecraft/client/gui/GuiGraphics;)V b
	renderWithTooltip (Lnet/minecraft/client/gui/GuiGraphics;IIF)V b
	repositionElements ()V aG_
	resize (Lnet/minecraft/client/Minecraft;II)V a
	runNarration (Z)V e
	scheduleNarration (JZ)V a
	setInitialFocus (Lnet/minecraft/client/gui/components/events/GuiEventListener;)V c
	setTooltipForNextRenderPass (Ljava/util/List;)V b
	setTooltipForNextRenderPass (Ljava/util/List;Lnet/minecraft/client/gui/screens/inventory/tooltip/ClientTooltipPositioner;Z)V a
	setTooltipForNextRenderPass (Lnet/minecraft/client/gui/components/Tooltip;Lnet/minecraft/client/gui/screens/inventory/tooltip/ClientTooltipPositioner;Z)V a
	setTooltipForNextRenderPass (Lnet/minecraft/network/chat/Component;)V d
	shouldCloseOnEsc ()Z av_
	shouldNarrateNavigation ()Z aH_
	shouldRunNarration ()Z F
	suppressNarration (J)V a
	tick ()V f
	triggerImmediateNarration (Z)V d
	updateNarratedWidget (Lnet/minecraft/client/gui/narration/NarrationElementOutput;)V b
	updateNarrationState (Lnet/minecraft/client/gui/narration/NarrationElementOutput;)V a
	wrapScreenError (Ljava/lang/Runnable;Ljava/lang/String;Ljava/lang/String;)V a
net/minecraft/client/gui/screens/Screen$DeferredTooltipRendering euq$a
	positioner b
	tooltip a
	positioner ()Lnet/minecraft/client/gui/screens/inventory/tooltip/ClientTooltipPositioner; b
	tooltip ()Ljava/util/List; a
net/minecraft/client/gui/screens/Screen$NarratableSearchResult euq$b
	entry a
	index b
	priority c
net/minecraft/client/gui/screens/ShareToLanScreen eur
	ALLOW_COMMANDS_LABEL c
	GAME_MODE_LABEL k
	INFO_TEXT l
	INVALID_PORT o
	INVALID_PORT_COLOR p
	PORT_HIGHER_BOUND b
	PORT_INFO_TEXT m
	PORT_LOWER_BOUND a
	PORT_UNAVAILABLE n
	commands s
	gameMode r
	lastScreen q
	port t
	portEdit u
	init ()V b
	render (Lnet/minecraft/client/gui/GuiGraphics;IIF)V a
	tick ()V f
	tryParsePort (Ljava/lang/String;)Lnet/minecraft/network/chat/Component; a
net/minecraft/client/gui/screens/SimpleOptionsSubScreen eus
	list k
	narratorButton l
	smallOptions c
	createFooter ()V e
	init ()V b
	render (Lnet/minecraft/client/gui/GuiGraphics;IIF)V a
	updateNarratorButton ()V l
net/minecraft/client/gui/screens/SkinCustomizationScreen eut
	init ()V b
	render (Lnet/minecraft/client/gui/GuiGraphics;IIF)V a
net/minecraft/client/gui/screens/SoundOptionsScreen euu
	list c
	buttonOptions (Lnet/minecraft/client/Options;)[Lnet/minecraft/client/OptionInstance; a
	getAllSoundOptionsExceptMaster ()[Lnet/minecraft/client/OptionInstance; l
	init ()V b
	render (Lnet/minecraft/client/gui/GuiGraphics;IIF)V a
net/minecraft/client/gui/screens/SymlinkWarningScreen euv
	MESSAGE_TEXT b
	TITLE a
	callbackScreen c
	layout k
	getNarrationMessage ()Lnet/minecraft/network/chat/Component; au_
	init ()V b
	onClose ()V aw_
	render (Lnet/minecraft/client/gui/GuiGraphics;IIF)V a
	repositionElements ()V aG_
net/minecraft/client/gui/screens/TitleScreen euw
	COPYRIGHT_TEXT a
	CUBE_MAP b
	DEMO_LEVEL_ID k
	LOGGER c
	PANORAMA_OVERLAY l
	fadeInStart r
	fading q
	logoRenderer t
	panorama p
	realmsNotificationsScreen o
	resetDemoButton n
	splash m
	warningLabel s
	added ()V ay_
	checkDemoWorldPresence ()Z C
	confirmDemo (Z)V c
	createDemoMenuOptions (II)V b
	createNormalMenuOptions (II)V a
	getMultiplayerDisabledReason ()Lnet/minecraft/network/chat/Component; B
	init ()V b
	isPauseScreen ()Z az_
	mouseClicked (DDI)Z a
	preloadResources (Lnet/minecraft/client/renderer/texture/TextureManager;Ljava/util/concurrent/Executor;)Ljava/util/concurrent/CompletableFuture; a
	realmsButtonClicked ()V D
	realmsNotificationsEnabled ()Z l
	removed ()V ax_
	render (Lnet/minecraft/client/gui/GuiGraphics;IIF)V a
	shouldCloseOnEsc ()Z av_
	tick ()V f
net/minecraft/client/gui/screens/TitleScreen$WarningLabel euw$a
	font a
	label b
	x c
	y d
	font ()Lnet/minecraft/client/gui/Font; a
	label ()Lnet/minecraft/client/gui/components/MultiLineLabel; b
	render (Lnet/minecraft/client/gui/GuiGraphics;I)V a
	x ()I c
	y ()I d
net/minecraft/client/gui/screens/VideoSettingsScreen eux
	BUTTON_ACCEPT m
	BUTTON_CANCEL n
	FABULOUS c
	WARNING_MESSAGE k
	WARNING_TITLE l
	gpuWarnlistManager p
	list o
	oldMipmaps q
	init ()V b
	mouseClicked (DDI)Z a
	mouseScrolled (DDD)Z a
	options (Lnet/minecraft/client/Options;)[Lnet/minecraft/client/OptionInstance; a
	removed ()V ax_
	render (Lnet/minecraft/client/gui/GuiGraphics;IIF)V a
net/minecraft/client/gui/screens/WinScreen euy
	LOGGER a
	NAME_PREFIX k
	OBFUSCATE_TOKEN l
	SECTION_HEADING c
	SPEEDUP_FACTOR m
	SPEEDUP_FACTOR_FAST n
	VIGNETTE_LOCATION b
	centeredLines s
	direction y
	lines r
	logoRenderer z
	onFinished p
	poem o
	scroll q
	scrollSpeed w
	speedupActive u
	speedupModifiers v
	totalScrollLength t
	unmodifiedScrollSpeed x
	addCreditsFile (Ljava/io/Reader;)V b
	addCreditsLine (Lnet/minecraft/network/chat/Component;Z)V a
	addEmptyLine ()V C
	addPoemFile (Ljava/io/Reader;)V a
	addPoemLines (Ljava/lang/String;)V a
	calculateScrollSpeed ()F l
	getBackgroundMusic ()Lnet/minecraft/sounds/Music; A
	init ()V b
	keyPressed (III)Z a
	keyReleased (III)Z b
	onClose ()V aw_
	removed ()V ax_
	render (Lnet/minecraft/client/gui/GuiGraphics;IIF)V a
	renderBg (Lnet/minecraft/client/gui/GuiGraphics;)V c
	respawn ()V B
	tick ()V f
	wrapCreditsIO (Ljava/lang/String;Lnet/minecraft/client/gui/screens/WinScreen$CreditsReader;)V a
net/minecraft/client/gui/screens/WinScreen$CreditsReader euy$a
net/minecraft/client/gui/screens/achievement/StatsScreen euz
	PENDING_TEXT c
	SLOT_BG_SIZE s
	SLOT_BG_X u
	SLOT_BG_Y v
	SLOT_FG_X w
	SLOT_FG_Y x
	SLOT_LEFT_INSERT y
	SLOT_STAT_HEIGHT t
	SLOT_TEXT_OFFSET z
	SLOT_TEX_SIZE r
	SORT_DOWN C
	SORT_NONE A
	SORT_UP D
	STATS_ICON_LOCATION k
	activeList p
	isLoading q
	itemStatsList m
	lastScreen a
	mobsStatsList n
	stats o
	statsList l
	blitSlot (Lnet/minecraft/client/gui/GuiGraphics;IILnet/minecraft/world/item/Item;)V a
	blitSlotIcon (Lnet/minecraft/client/gui/GuiGraphics;IIII)V a
	getActiveList ()Lnet/minecraft/client/gui/components/ObjectSelectionList; D
	getColumnX (I)I a
	getTranslationKey (Lnet/minecraft/stats/Stat;)Ljava/lang/String; a
	init ()V b
	initButtons ()V B
	initLists ()V l
	isPauseScreen ()Z az_
	onStatsUpdated ()V C
	render (Lnet/minecraft/client/gui/GuiGraphics;IIF)V a
	setActiveList (Lnet/minecraft/client/gui/components/ObjectSelectionList;)V a
net/minecraft/client/gui/screens/achievement/StatsScreen$GeneralStatisticsList euz$a
	renderBackground (Lnet/minecraft/client/gui/GuiGraphics;)V a
net/minecraft/client/gui/screens/achievement/StatsScreen$GeneralStatisticsList$Entry euz$a$a
	stat b
	statDisplay c
	getNarration ()Lnet/minecraft/network/chat/Component; a
	getValueText ()Ljava/lang/String; b
	render (Lnet/minecraft/client/gui/GuiGraphics;IIIIIIIZF)V a
net/minecraft/client/gui/screens/achievement/StatsScreen$ItemStatisticsList euz$b
	blockColumns a
	headerPressed m
	iconOffsets r
	itemColumns l
	itemStatSorter n
	sortColumn o
	sortOrder p
	clickedHeader (II)V a
	getColumn (I)Lnet/minecraft/stats/StatType; a
	getColumnIndex (Lnet/minecraft/stats/StatType;)I b
	getRowWidth ()I b
	getScrollbarPosition ()I c
	getString (Lnet/minecraft/world/item/Item;)Lnet/minecraft/network/chat/Component; a
	renderBackground (Lnet/minecraft/client/gui/GuiGraphics;)V a
	renderDecorations (Lnet/minecraft/client/gui/GuiGraphics;II)V b
	renderHeader (Lnet/minecraft/client/gui/GuiGraphics;II)V a
	renderMousehoverTooltip (Lnet/minecraft/client/gui/GuiGraphics;Lnet/minecraft/network/chat/Component;II)V a
	sortByColumn (Lnet/minecraft/stats/StatType;)V a
net/minecraft/client/gui/screens/achievement/StatsScreen$ItemStatisticsList$ItemRow euz$b$a
	item b
	getItem ()Lnet/minecraft/world/item/Item; b
	getNarration ()Lnet/minecraft/network/chat/Component; a
	render (Lnet/minecraft/client/gui/GuiGraphics;IIIIIIIZF)V a
	renderStat (Lnet/minecraft/client/gui/GuiGraphics;Lnet/minecraft/stats/Stat;IIZ)V a
net/minecraft/client/gui/screens/achievement/StatsScreen$ItemStatisticsList$ItemRowComparator euz$b$b
	compare (Lnet/minecraft/client/gui/screens/achievement/StatsScreen$ItemStatisticsList$ItemRow;Lnet/minecraft/client/gui/screens/achievement/StatsScreen$ItemStatisticsList$ItemRow;)I a
net/minecraft/client/gui/screens/achievement/StatsScreen$MobsStatisticsList euz$c
	renderBackground (Lnet/minecraft/client/gui/GuiGraphics;)V a
net/minecraft/client/gui/screens/achievement/StatsScreen$MobsStatisticsList$MobRow euz$c$a
	hasKills d
	killedBy e
	kills c
	mobName b
	wasKilledBy f
	getNarration ()Lnet/minecraft/network/chat/Component; a
	render (Lnet/minecraft/client/gui/GuiGraphics;IIIIIIIZF)V a
net/minecraft/client/gui/screens/achievement/StatsUpdateListener eva
	LOADING_SYMBOLS b
	onStatsUpdated ()V C
net/minecraft/client/gui/screens/advancements/AdvancementTab evc
	advancement e
	centered r
	display f
	fade q
	icon g
	index d
	maxX o
	maxY p
	minX m
	minY n
	minecraft a
	root i
	screen b
	scrollX k
	scrollY l
	title h
	type c
	widgets j
	addAdvancement (Lnet/minecraft/advancements/Advancement;)V a
	addWidget (Lnet/minecraft/client/gui/screens/advancements/AdvancementWidget;Lnet/minecraft/advancements/Advancement;)V a
	create (Lnet/minecraft/client/Minecraft;Lnet/minecraft/client/gui/screens/advancements/AdvancementsScreen;ILnet/minecraft/advancements/Advancement;)Lnet/minecraft/client/gui/screens/advancements/AdvancementTab; a
	drawContents (Lnet/minecraft/client/gui/GuiGraphics;II)V b
	drawIcon (Lnet/minecraft/client/gui/GuiGraphics;II)V a
	drawTab (Lnet/minecraft/client/gui/GuiGraphics;IIZ)V a
	drawTooltips (Lnet/minecraft/client/gui/GuiGraphics;IIII)V a
	getAdvancement ()Lnet/minecraft/advancements/Advancement; c
	getDisplay ()Lnet/minecraft/advancements/DisplayInfo; e
	getIndex ()I b
	getScreen ()Lnet/minecraft/client/gui/screens/advancements/AdvancementsScreen; f
	getTitle ()Lnet/minecraft/network/chat/Component; d
	getType ()Lnet/minecraft/client/gui/screens/advancements/AdvancementTabType; a
	getWidget (Lnet/minecraft/advancements/Advancement;)Lnet/minecraft/client/gui/screens/advancements/AdvancementWidget; b
	isMouseOver (IIDD)Z a
	scroll (DD)V a
net/minecraft/client/gui/screens/advancements/AdvancementTabType evd
	$VALUES j
	ABOVE a
	BELOW b
	LEFT c
	RIGHT d
	height h
	max i
	textureX e
	textureY f
	width g
	$values ()[Lnet/minecraft/client/gui/screens/advancements/AdvancementTabType; b
	draw (Lnet/minecraft/client/gui/GuiGraphics;IIZI)V a
	drawIcon (Lnet/minecraft/client/gui/GuiGraphics;IIILnet/minecraft/world/item/ItemStack;)V a
	getMax ()I a
	getX (I)I a
	getY (I)I b
	isMouseOver (IIIDD)Z a
net/minecraft/client/gui/screens/advancements/AdvancementWidget eve
	BOX_WIDTH d
	BOX_X c
	FRAME_WIDTH e
	HEIGHT b
	ICON_WIDTH h
	ICON_X f
	ICON_Y g
	TEST_SPLIT_OFFSETS n
	TITLE_MAX_WIDTH m
	TITLE_PADDING_LEFT i
	TITLE_PADDING_RIGHT j
	TITLE_X k
	TITLE_Y l
	WIDGETS_LOCATION a
	advancement p
	children w
	description t
	display q
	minecraft u
	parent v
	progress x
	tab o
	title r
	width s
	x y
	y z
	addChild (Lnet/minecraft/client/gui/screens/advancements/AdvancementWidget;)V a
	attachToParent ()V b
	draw (Lnet/minecraft/client/gui/GuiGraphics;II)V a
	drawConnectivity (Lnet/minecraft/client/gui/GuiGraphics;IIZ)V a
	drawHover (Lnet/minecraft/client/gui/GuiGraphics;IIFII)V a
	findOptimalLines (Lnet/minecraft/network/chat/Component;I)Ljava/util/List; a
	getFirstVisibleParent (Lnet/minecraft/advancements/Advancement;)Lnet/minecraft/client/gui/screens/advancements/AdvancementWidget; a
	getMaxWidth (Lnet/minecraft/client/StringSplitter;Ljava/util/List;)F a
	getWidth ()I a
	getX ()I d
	getY ()I c
	isMouseOver (IIII)Z a
	setProgress (Lnet/minecraft/advancements/AdvancementProgress;)V a
net/minecraft/client/gui/screens/advancements/AdvancementWidgetType evf
	$VALUES d
	OBTAINED a
	UNOBTAINED b
	y c
	$values ()[Lnet/minecraft/client/gui/screens/advancements/AdvancementWidgetType; b
	getIndex ()I a
net/minecraft/client/gui/screens/advancements/AdvancementsScreen evg
	BACKGROUND_TILE_COUNT_X o
	BACKGROUND_TILE_COUNT_Y p
	BACKGROUND_TILE_HEIGHT n
	BACKGROUND_TILE_WIDTH m
	NO_ADVANCEMENTS_LABEL w
	TABS_LOCATION a
	TITLE x
	VERY_SAD_LABEL v
	WINDOW_HEIGHT c
	WINDOW_INSIDE_HEIGHT l
	WINDOW_INSIDE_WIDTH k
	WINDOW_INSIDE_X r
	WINDOW_INSIDE_Y s
	WINDOW_LOCATION q
	WINDOW_TITLE_X t
	WINDOW_TITLE_Y u
	WINDOW_WIDTH b
	advancements y
	isScrolling C
	selectedTab A
	tabs z
	getAdvancementWidget (Lnet/minecraft/advancements/Advancement;)Lnet/minecraft/client/gui/screens/advancements/AdvancementWidget; f
	getTab (Lnet/minecraft/advancements/Advancement;)Lnet/minecraft/client/gui/screens/advancements/AdvancementTab; g
	init ()V b
	keyPressed (III)Z a
	mouseClicked (DDI)Z a
	mouseDragged (DDIDD)Z a
	onAddAdvancementRoot (Lnet/minecraft/advancements/Advancement;)V a
	onAddAdvancementTask (Lnet/minecraft/advancements/Advancement;)V c
	onAdvancementsCleared ()V a
	onRemoveAdvancementRoot (Lnet/minecraft/advancements/Advancement;)V b
	onRemoveAdvancementTask (Lnet/minecraft/advancements/Advancement;)V d
	onSelectedTabChanged (Lnet/minecraft/advancements/Advancement;)V e
	onUpdateAdvancementProgress (Lnet/minecraft/advancements/Advancement;Lnet/minecraft/advancements/AdvancementProgress;)V a
	removed ()V ax_
	render (Lnet/minecraft/client/gui/GuiGraphics;IIF)V a
	renderInside (Lnet/minecraft/client/gui/GuiGraphics;IIII)V a
	renderTooltips (Lnet/minecraft/client/gui/GuiGraphics;IIII)V b
	renderWindow (Lnet/minecraft/client/gui/GuiGraphics;II)V a
net/minecraft/client/gui/screens/controls/ControlsScreen evi
	ROW_SPACING c
	init ()V b
	render (Lnet/minecraft/client/gui/GuiGraphics;IIF)V a
net/minecraft/client/gui/screens/controls/KeyBindsList evj
	keyBindsScreen a
	maxNameWidth l
	getRowWidth ()I b
	getScrollbarPosition ()I c
	refreshEntries ()V e
	resetMappingAndUpdateButtons ()V d
net/minecraft/client/gui/screens/controls/KeyBindsList$CategoryEntry evj$a
	name b
	width c
	children ()Ljava/util/List; i
	narratables ()Ljava/util/List; b
	nextFocusPath (Lnet/minecraft/client/gui/navigation/FocusNavigationEvent;)Lnet/minecraft/client/gui/ComponentPath; a
	refreshEntry ()V d
	render (Lnet/minecraft/client/gui/GuiGraphics;IIIIIIIZF)V a
net/minecraft/client/gui/screens/controls/KeyBindsList$Entry evj$b
	refreshEntry ()V d
net/minecraft/client/gui/screens/controls/KeyBindsList$KeyEntry evj$c
	changeButton d
	hasCollision f
	key b
	name c
	resetButton e
	children ()Ljava/util/List; i
	narratables ()Ljava/util/List; b
	refreshEntry ()V d
	render (Lnet/minecraft/client/gui/GuiGraphics;IIIIIIIZF)V a
net/minecraft/client/gui/screens/controls/KeyBindsScreen evk
	keyBindsList l
	lastKeySelection k
	resetButton m
	selectedKey c
	init ()V b
	keyPressed (III)Z a
	mouseClicked (DDI)Z a
	render (Lnet/minecraft/client/gui/GuiGraphics;IIF)V a
net/minecraft/client/gui/screens/debug/GameModeSwitcherScreen evm
	ALL_SLOTS_WIDTH o
	GAMEMODE_SWITCHER_LOCATION a
	HELP_TIPS_OFFSET_Y n
	SELECT_KEY p
	SLOT_AREA k
	SLOT_AREA_PADDED m
	SLOT_PADDING l
	SPRITE_SHEET_HEIGHT c
	SPRITE_SHEET_WIDTH b
	currentlyHovered r
	firstMouseX s
	firstMouseY t
	previousHovered q
	setFirstMousePos u
	slots v
	checkToClose ()Z C
	getDefaultSelected ()Lnet/minecraft/world/level/GameType; l
	init ()V b
	isPauseScreen ()Z az_
	keyPressed (III)Z a
	render (Lnet/minecraft/client/gui/GuiGraphics;IIF)V a
	switchToHoveredGameMode ()V B
	switchToHoveredGameMode (Lnet/minecraft/client/Minecraft;Lnet/minecraft/client/gui/screens/debug/GameModeSwitcherScreen$GameModeIcon;)V a
net/minecraft/client/gui/screens/debug/GameModeSwitcherScreen$GameModeIcon evm$a
	$VALUES k
	ADVENTURE c
	CREATIVE a
	ICON_AREA j
	ICON_TOP_LEFT f
	SPECTATOR d
	SURVIVAL b
	VALUES e
	command h
	name g
	renderStack i
	$values ()[Lnet/minecraft/client/gui/screens/debug/GameModeSwitcherScreen$GameModeIcon; d
	drawIcon (Lnet/minecraft/client/gui/GuiGraphics;II)V a
	getCommand ()Ljava/lang/String; b
	getFromGameType (Lnet/minecraft/world/level/GameType;)Lnet/minecraft/client/gui/screens/debug/GameModeSwitcherScreen$GameModeIcon; a
	getName ()Lnet/minecraft/network/chat/Component; a
	getNext ()Lnet/minecraft/client/gui/screens/debug/GameModeSwitcherScreen$GameModeIcon; c
net/minecraft/client/gui/screens/debug/GameModeSwitcherScreen$GameModeSlot evm$b
	icon b
	isSelected c
	drawSelection (Lnet/minecraft/client/gui/GuiGraphics;)V b
	drawSlot (Lnet/minecraft/client/gui/GuiGraphics;)V a
	isHoveredOrFocused ()Z n
	renderWidget (Lnet/minecraft/client/gui/GuiGraphics;IIF)V b
	setSelected (Z)V b
	updateWidgetNarration (Lnet/minecraft/client/gui/narration/NarrationElementOutput;)V a
net/minecraft/client/gui/screens/inventory/AbstractCommandBlockEditScreen evo
	COMMAND_LABEL n
	PREVIOUS_OUTPUT_LABEL o
	SET_COMMAND_LABEL m
	cancelButton k
	commandEdit a
	commandSuggestions p
	doneButton c
	outputButton l
	previousEdit b
	getCommandBlock ()Lnet/minecraft/world/level/BaseCommandBlock; l
	getPreviousY ()I B
	init ()V b
	keyPressed (III)Z a
	mouseClicked (DDI)Z a
	mouseScrolled (DDD)Z a
	onDone ()V C
	onEdited (Ljava/lang/String;)V a
	populateAndSendPacket (Lnet/minecraft/world/level/BaseCommandBlock;)V a
	render (Lnet/minecraft/client/gui/GuiGraphics;IIF)V a
	resize (Lnet/minecraft/client/Minecraft;II)V a
	tick ()V f
	updatePreviousOutput (Z)V c
net/minecraft/client/gui/screens/inventory/AbstractContainerScreen evp
	HOVER_ITEM_BLIT_OFFSET y
	INVENTORY_LOCATION a
	QUICKDROP_DELAY x
	SLOT_ITEM_BLIT_OFFSET b
	SNAPBACK_SPEED w
	clickedSlot z
	doubleclick R
	draggingItem F
	hoveredSlot r
	imageHeight k
	imageWidth c
	inventoryLabelX n
	inventoryLabelY o
	isQuickCrafting v
	isSplittingStack E
	lastClickButton Q
	lastClickSlot D
	lastClickTime P
	lastQuickMoved S
	leftPos s
	menu p
	playerInventoryTitle q
	quickCraftSlots u
	quickCraftingButton M
	quickCraftingRemainder O
	quickCraftingType L
	quickdropSlot C
	quickdropTime K
	skipNextRelease N
	snapbackEnd A
	snapbackItem J
	snapbackStartX G
	snapbackStartY H
	snapbackTime I
	titleLabelX l
	titleLabelY m
	topPos t
	checkHotbarKeyPressed (II)Z a
	checkHotbarMouseClicked (I)V a
	clearDraggingState ()V l
	containerTick ()V B
	findSlot (DD)Lnet/minecraft/world/inventory/Slot; a
	getMenu ()Lnet/minecraft/world/inventory/AbstractContainerMenu; C
	getTooltipFromContainerItem (Lnet/minecraft/world/item/ItemStack;)Ljava/util/List; a
	hasClickedOutside (DDIII)Z a
	init ()V b
	isHovering (IIIIDD)Z a
	isHovering (Lnet/minecraft/world/inventory/Slot;DD)Z a
	isPauseScreen ()Z az_
	keyPressed (III)Z a
	mouseClicked (DDI)Z a
	mouseDragged (DDIDD)Z a
	mouseReleased (DDI)Z b
	onClose ()V aw_
	recalculateQuickCraftRemaining ()V F
	removed ()V ax_
	render (Lnet/minecraft/client/gui/GuiGraphics;IIF)V a
	renderBg (Lnet/minecraft/client/gui/GuiGraphics;FII)V a
	renderFloatingItem (Lnet/minecraft/client/gui/GuiGraphics;Lnet/minecraft/world/item/ItemStack;IILjava/lang/String;)V a
	renderLabels (Lnet/minecraft/client/gui/GuiGraphics;II)V b
	renderSlot (Lnet/minecraft/client/gui/GuiGraphics;Lnet/minecraft/world/inventory/Slot;)V a
	renderSlotHighlight (Lnet/minecraft/client/gui/GuiGraphics;III)V a
	renderTooltip (Lnet/minecraft/client/gui/GuiGraphics;II)V a
	slotClicked (Lnet/minecraft/world/inventory/Slot;IILnet/minecraft/world/inventory/ClickType;)V a
	tick ()V f
net/minecraft/client/gui/screens/inventory/AbstractFurnaceScreen evq
	RECIPE_BUTTON_LOCATION x
	recipeBookComponent w
	texture z
	widthTooNarrow y
	charTyped (CI)Z a
	containerTick ()V B
	getRecipeBookComponent ()Lnet/minecraft/client/gui/screens/recipebook/RecipeBookComponent; E
	hasClickedOutside (DDIII)Z a
	init ()V b
	keyPressed (III)Z a
	mouseClicked (DDI)Z a
	recipesUpdated ()V D
	render (Lnet/minecraft/client/gui/GuiGraphics;IIF)V a
	renderBg (Lnet/minecraft/client/gui/GuiGraphics;FII)V a
	slotClicked (Lnet/minecraft/world/inventory/Slot;IILnet/minecraft/world/inventory/ClickType;)V a
net/minecraft/client/gui/screens/inventory/AbstractSignEditScreen evr
	frame m
	isFrontText l
	line n
	messages k
	sign b
	signField o
	text c
	woodType a
	charTyped (CI)Z a
	getSignTextScale ()Lorg/joml/Vector3f; l
	init ()V b
	isPauseScreen ()Z az_
	isValid ()Z B
	keyPressed (III)Z a
	offsetSign (Lnet/minecraft/client/gui/GuiGraphics;Lnet/minecraft/world/level/block/state/BlockState;)V b
	onClose ()V aw_
	onDone ()V C
	removed ()V ax_
	render (Lnet/minecraft/client/gui/GuiGraphics;IIF)V a
	renderSign (Lnet/minecraft/client/gui/GuiGraphics;)V c
	renderSignBackground (Lnet/minecraft/client/gui/GuiGraphics;Lnet/minecraft/world/level/block/state/BlockState;)V a
	renderSignText (Lnet/minecraft/client/gui/GuiGraphics;)V d
	setMessage (Ljava/lang/String;)V a
	tick ()V f
net/minecraft/client/gui/screens/inventory/AnvilScreen evs
	ANVIL_LOCATION w
	TOO_EXPENSIVE_TEXT x
	name y
	player z
	containerTick ()V B
	keyPressed (III)Z a
	onNameChanged (Ljava/lang/String;)V a
	renderBg (Lnet/minecraft/client/gui/GuiGraphics;FII)V a
	renderErrorIcon (Lnet/minecraft/client/gui/GuiGraphics;II)V c
	renderFg (Lnet/minecraft/client/gui/GuiGraphics;IIF)V c
	renderLabels (Lnet/minecraft/client/gui/GuiGraphics;II)V b
	resize (Lnet/minecraft/client/Minecraft;II)V a
	slotChanged (Lnet/minecraft/world/inventory/AbstractContainerMenu;ILnet/minecraft/world/item/ItemStack;)V a
	subInit ()V D
net/minecraft/client/gui/screens/inventory/BeaconScreen evt
	BEACON_LOCATION w
	PRIMARY_EFFECT_LABEL x
	SECONDARY_EFFECT_LABEL y
	beaconButtons z
	primary A
	secondary C
	addBeaconButton (Lnet/minecraft/client/gui/components/AbstractWidget;)V a
	containerTick ()V B
	init ()V b
	render (Lnet/minecraft/client/gui/GuiGraphics;IIF)V a
	renderBg (Lnet/minecraft/client/gui/GuiGraphics;FII)V a
	renderLabels (Lnet/minecraft/client/gui/GuiGraphics;II)V b
	updateButtons ()V D
net/minecraft/client/gui/screens/inventory/BeaconScreen$BeaconButton evt$a
	updateStatus (I)V a
net/minecraft/client/gui/screens/inventory/BeaconScreen$BeaconCancelButton evt$b
	onPress ()V c
	updateStatus (I)V a
net/minecraft/client/gui/screens/inventory/BeaconScreen$BeaconConfirmButton evt$c
	onPress ()V c
	updateStatus (I)V a
net/minecraft/client/gui/screens/inventory/BeaconScreen$BeaconPowerButton evt$d
	effect d
	isPrimary c
	sprite e
	tier a
	createEffectDescription (Lnet/minecraft/world/effect/MobEffect;)Lnet/minecraft/network/chat/MutableComponent; b
	createNarrationMessage ()Lnet/minecraft/network/chat/MutableComponent; aE_
	onPress ()V c
	renderIcon (Lnet/minecraft/client/gui/GuiGraphics;)V a
	setEffect (Lnet/minecraft/world/effect/MobEffect;)V a
	updateStatus (I)V a
net/minecraft/client/gui/screens/inventory/BeaconScreen$BeaconScreenButton evt$e
	selected a
	isSelected ()Z a
	renderIcon (Lnet/minecraft/client/gui/GuiGraphics;)V a
	renderWidget (Lnet/minecraft/client/gui/GuiGraphics;IIF)V b
	setSelected (Z)V b
	updateWidgetNarration (Lnet/minecraft/client/gui/narration/NarrationElementOutput;)V a
net/minecraft/client/gui/screens/inventory/BeaconScreen$BeaconSpriteScreenButton evt$f
	iconX a
	iconY b
	renderIcon (Lnet/minecraft/client/gui/GuiGraphics;)V a
net/minecraft/client/gui/screens/inventory/BeaconScreen$BeaconUpgradePowerButton evt$g
	createEffectDescription (Lnet/minecraft/world/effect/MobEffect;)Lnet/minecraft/network/chat/MutableComponent; b
	updateStatus (I)V a
net/minecraft/client/gui/screens/inventory/BlastFurnaceScreen evu
	TEXTURE x
net/minecraft/client/gui/screens/inventory/BookEditScreen evv
	BLACK_CURSOR n
	EDIT_TITLE_LABEL l
	FINALIZE_WARNING_LABEL m
	GRAY_CURSOR o
	IMAGE_HEIGHT k
	IMAGE_WIDTH c
	TEXT_HEIGHT b
	TEXT_WIDTH a
	backButton D
	book q
	cancelButton H
	currentPage u
	displayCache J
	doneButton E
	finalizeButton G
	forwardButton C
	frameTick t
	hand I
	isModified r
	isSigning s
	lastClickTime z
	lastIndex A
	owner p
	ownerText L
	pageEdit x
	pageMsg K
	pages v
	signButton F
	title w
	titleEdit y
	appendPageToBook ()V G
	bookKeyPressed (III)Z c
	changeLine (I)V a
	charTyped (CI)Z a
	clearDisplayCache ()V N
	clearDisplayCacheAfterPageChange ()V O
	convertLocalToScreen (Lnet/minecraft/client/gui/screens/inventory/BookEditScreen$Pos2i;)Lnet/minecraft/client/gui/screens/inventory/BookEditScreen$Pos2i; b
	convertScreenToLocal (Lnet/minecraft/client/gui/screens/inventory/BookEditScreen$Pos2i;)Lnet/minecraft/client/gui/screens/inventory/BookEditScreen$Pos2i; a
	createPartialLineSelection (Ljava/lang/String;Lnet/minecraft/client/StringSplitter;IIII)Lnet/minecraft/client/renderer/Rect2i; a
	createSelection (Lnet/minecraft/client/gui/screens/inventory/BookEditScreen$Pos2i;Lnet/minecraft/client/gui/screens/inventory/BookEditScreen$Pos2i;)Lnet/minecraft/client/renderer/Rect2i; a
	eraseEmptyTrailingPages ()V F
	findLineFromPos ([II)I a
	getClipboard ()Ljava/lang/String; l
	getCurrentPageText ()Ljava/lang/String; L
	getDisplayCache ()Lnet/minecraft/client/gui/screens/inventory/BookEditScreen$DisplayCache; M
	getNumPages ()I B
	init ()V b
	keyDown ()V I
	keyEnd ()V K
	keyHome ()V J
	keyPressed (III)Z a
	keyUp ()V H
	mouseClicked (DDI)Z a
	mouseDragged (DDIDD)Z a
	pageBack ()V C
	pageForward ()V D
	rebuildDisplayCache ()Lnet/minecraft/client/gui/screens/inventory/BookEditScreen$DisplayCache; P
	render (Lnet/minecraft/client/gui/GuiGraphics;IIF)V a
	renderCursor (Lnet/minecraft/client/gui/GuiGraphics;Lnet/minecraft/client/gui/screens/inventory/BookEditScreen$Pos2i;Z)V a
	renderHighlight (Lnet/minecraft/client/gui/GuiGraphics;[Lnet/minecraft/client/renderer/Rect2i;)V a
	saveChanges (Z)V c
	selectWord (I)V b
	setClipboard (Ljava/lang/String;)V a
	setCurrentPageText (Ljava/lang/String;)V b
	tick ()V f
	titleKeyPressed (III)Z d
	updateButtonVisibility ()V E
	updateLocalCopy (Z)V e
net/minecraft/client/gui/screens/inventory/BookEditScreen$DisplayCache evv$a
	EMPTY a
	cursor c
	cursorAtEnd d
	fullText b
	lineStarts e
	lines f
	selection g
	changeLine (II)I a
	findLineEnd (I)I b
	findLineStart (I)I a
	getIndexAtPosition (Lnet/minecraft/client/gui/Font;Lnet/minecraft/client/gui/screens/inventory/BookEditScreen$Pos2i;)I a
net/minecraft/client/gui/screens/inventory/BookEditScreen$LineInfo evv$b
	asComponent c
	contents b
	style a
	x d
	y e
net/minecraft/client/gui/screens/inventory/BookEditScreen$Pos2i evv$c
	x a
	y b
net/minecraft/client/gui/screens/inventory/BookViewScreen evw
	BOOK_LOCATION l
	EMPTY_ACCESS k
	IMAGE_HEIGHT p
	IMAGE_WIDTH o
	PAGE_INDICATOR_TEXT_Y_OFFSET a
	PAGE_TEXT_X_OFFSET b
	PAGE_TEXT_Y_OFFSET c
	TEXT_HEIGHT n
	TEXT_WIDTH m
	backButton w
	bookAccess q
	cachedPage t
	cachedPageComponents s
	currentPage r
	forwardButton v
	pageMsg u
	playTurnSound x
	closeScreen ()V F
	createMenuControls ()V l
	createPageControlButtons ()V B
	forcePage (I)Z b
	getClickedComponentStyleAt (DD)Lnet/minecraft/network/chat/Style; a
	getNumPages ()I C
	handleComponentClicked (Lnet/minecraft/network/chat/Style;)Z a
	init ()V b
	keyPressed (III)Z a
	loadPages (Lnet/minecraft/nbt/CompoundTag;)Ljava/util/List; a
	loadPages (Lnet/minecraft/nbt/CompoundTag;Ljava/util/function/Consumer;)V a
	mouseClicked (DDI)Z a
	pageBack ()V D
	pageForward ()V E
	render (Lnet/minecraft/client/gui/GuiGraphics;IIF)V a
	setBookAccess (Lnet/minecraft/client/gui/screens/inventory/BookViewScreen$BookAccess;)V a
	setPage (I)Z a
	updateButtonVisibility ()V G
net/minecraft/client/gui/screens/inventory/BookViewScreen$BookAccess evw$a
	fromItem (Lnet/minecraft/world/item/ItemStack;)Lnet/minecraft/client/gui/screens/inventory/BookViewScreen$BookAccess; a
	getPage (I)Lnet/minecraft/network/chat/FormattedText; b
	getPageCount ()I a
	getPageRaw (I)Lnet/minecraft/network/chat/FormattedText; a
net/minecraft/client/gui/screens/inventory/BookViewScreen$WritableBookAccess evw$b
	pages a
	getPageCount ()I a
	getPageRaw (I)Lnet/minecraft/network/chat/FormattedText; a
	readPages (Lnet/minecraft/world/item/ItemStack;)Ljava/util/List; b
net/minecraft/client/gui/screens/inventory/BookViewScreen$WrittenBookAccess evw$c
	pages a
	getPageCount ()I a
	getPageRaw (I)Lnet/minecraft/network/chat/FormattedText; a
	readPages (Lnet/minecraft/world/item/ItemStack;)Ljava/util/List; b
net/minecraft/client/gui/screens/inventory/BrewingStandScreen evx
	BREWING_STAND_LOCATION w
	BUBBLELENGTHS x
	init ()V b
	render (Lnet/minecraft/client/gui/GuiGraphics;IIF)V a
	renderBg (Lnet/minecraft/client/gui/GuiGraphics;FII)V a
net/minecraft/client/gui/screens/inventory/CartographyTableScreen evy
	BG_LOCATION w
	render (Lnet/minecraft/client/gui/GuiGraphics;IIF)V a
	renderBg (Lnet/minecraft/client/gui/GuiGraphics;FII)V a
	renderMap (Lnet/minecraft/client/gui/GuiGraphics;Ljava/lang/Integer;Lnet/minecraft/world/level/saveddata/maps/MapItemSavedData;IIF)V a
	renderResultingMap (Lnet/minecraft/client/gui/GuiGraphics;Ljava/lang/Integer;Lnet/minecraft/world/level/saveddata/maps/MapItemSavedData;ZZZZ)V a
net/minecraft/client/gui/screens/inventory/CommandBlockEditScreen evz
	autoCommandBlock m
	autoexec s
	autoexecButton p
	conditional r
	conditionalButton o
	mode q
	modeButton n
	enableControls (Z)V e
	getCommandBlock ()Lnet/minecraft/world/level/BaseCommandBlock; l
	getPreviousY ()I B
	init ()V b
	populateAndSendPacket (Lnet/minecraft/world/level/BaseCommandBlock;)V a
	resize (Lnet/minecraft/client/Minecraft;II)V a
	updateGui ()V D
net/minecraft/client/gui/screens/inventory/ContainerScreen ewa
	CONTAINER_BACKGROUND w
	containerRows x
	render (Lnet/minecraft/client/gui/GuiGraphics;IIF)V a
	renderBg (Lnet/minecraft/client/gui/GuiGraphics;FII)V a
net/minecraft/client/gui/screens/inventory/CraftingScreen ewb
	CRAFTING_TABLE_LOCATION w
	RECIPE_BUTTON_LOCATION x
	recipeBookComponent y
	widthTooNarrow z
	containerTick ()V B
	getRecipeBookComponent ()Lnet/minecraft/client/gui/screens/recipebook/RecipeBookComponent; E
	hasClickedOutside (DDIII)Z a
	init ()V b
	isHovering (IIIIDD)Z a
	mouseClicked (DDI)Z a
	recipesUpdated ()V D
	render (Lnet/minecraft/client/gui/GuiGraphics;IIF)V a
	renderBg (Lnet/minecraft/client/gui/GuiGraphics;FII)V a
	slotClicked (Lnet/minecraft/world/inventory/Slot;IILnet/minecraft/world/inventory/ClickType;)V a
net/minecraft/client/gui/screens/inventory/CreativeInventoryListener ewc
	minecraft a
	dataChanged (Lnet/minecraft/world/inventory/AbstractContainerMenu;II)V a
	slotChanged (Lnet/minecraft/world/inventory/AbstractContainerMenu;ILnet/minecraft/world/item/ItemStack;)V a
net/minecraft/client/gui/screens/inventory/CreativeModeInventoryScreen ewd
	CONTAINER G
	CREATIVE_TABS_LOCATION w
	CUSTOM_SLOT_LOCK y
	GUI_CREATIVE_TAB_PREFIX x
	NUM_COLS A
	NUM_ROWS z
	SCROLLER_HEIGHT F
	SCROLLER_WIDTH E
	TAB_HEIGHT D
	TAB_WIDTH C
	TEXT_COLOR I
	TRASH_SLOT_TOOLTIP H
	destroyItemSlot O
	displayOperatorCreativeTab T
	hasClickedOutside R
	ignoreTextInput Q
	listener P
	originalSlots N
	scrollOffs K
	scrolling L
	searchBox M
	selectedTab J
	visibleTags S
	canScroll ()Z G
	charTyped (CI)Z a
	checkTabClicked (Lnet/minecraft/world/item/CreativeModeTab;DD)Z a
	checkTabHovering (Lnet/minecraft/client/gui/GuiGraphics;Lnet/minecraft/world/item/CreativeModeTab;II)Z a
	containerTick ()V B
	getTabX (Lnet/minecraft/world/item/CreativeModeTab;)I b
	getTabY (Lnet/minecraft/world/item/CreativeModeTab;)I c
	getTooltipFromContainerItem (Lnet/minecraft/world/item/ItemStack;)Ljava/util/List; a
	handleHotbarLoadOrSave (Lnet/minecraft/client/Minecraft;IZZ)V a
	hasClickedOutside (DDIII)Z a
	hasPermissions (Lnet/minecraft/world/entity/player/Player;)Z a
	init ()V b
	insideScrollbar (DD)Z a
	isCreativeSlot (Lnet/minecraft/world/inventory/Slot;)Z a
	isInventoryOpen ()Z D
	keyPressed (III)Z a
	keyReleased (III)Z b
	mouseClicked (DDI)Z a
	mouseDragged (DDIDD)Z a
	mouseReleased (DDI)Z b
	mouseScrolled (DDD)Z a
	refreshCurrentTabContents (Ljava/util/Collection;)V a
	refreshSearchResults ()V E
	removed ()V ax_
	render (Lnet/minecraft/client/gui/GuiGraphics;IIF)V a
	renderBg (Lnet/minecraft/client/gui/GuiGraphics;FII)V a
	renderLabels (Lnet/minecraft/client/gui/GuiGraphics;II)V b
	renderTabButton (Lnet/minecraft/client/gui/GuiGraphics;Lnet/minecraft/world/item/CreativeModeTab;)V a
	resize (Lnet/minecraft/client/Minecraft;II)V a
	selectTab (Lnet/minecraft/world/item/CreativeModeTab;)V a
	slotClicked (Lnet/minecraft/world/inventory/Slot;IILnet/minecraft/world/inventory/ClickType;)V a
	tryRefreshInvalidatedTabs (Lnet/minecraft/world/flag/FeatureFlagSet;ZLnet/minecraft/core/HolderLookup$Provider;)V a
	updateVisibleTags (Ljava/lang/String;)V a
net/minecraft/client/gui/screens/inventory/CreativeModeInventoryScreen$CustomCreativeSlot ewd$a
	mayPickup (Lnet/minecraft/world/entity/player/Player;)Z a
net/minecraft/client/gui/screens/inventory/CreativeModeInventoryScreen$ItemPickerMenu ewd$b
	inventoryMenu l
	items k
	calculateRowCount ()I l
	canDragTo (Lnet/minecraft/world/inventory/Slot;)Z b
	canScroll ()Z m
	canTakeItemForPickAll (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/inventory/Slot;)Z a
	getCarried ()Lnet/minecraft/world/item/ItemStack; g
	getRowIndexForScroll (F)I a
	getScrollForRowIndex (I)F e
	quickMoveStack (Lnet/minecraft/world/entity/player/Player;I)Lnet/minecraft/world/item/ItemStack; a
	scrollTo (F)V b
	setCarried (Lnet/minecraft/world/item/ItemStack;)V b
	stillValid (Lnet/minecraft/world/entity/player/Player;)Z a
	subtractInputFromScroll (FD)F a
net/minecraft/client/gui/screens/inventory/CreativeModeInventoryScreen$SlotWrapper ewd$c
	target a
	getItem ()Lnet/minecraft/world/item/ItemStack; e
	getMaxStackSize ()I a
	getMaxStackSize (Lnet/minecraft/world/item/ItemStack;)I a_
	getNoItemIcon ()Lcom/mojang/datafixers/util/Pair; c
	hasItem ()Z f
	isActive ()Z b
	mayPickup (Lnet/minecraft/world/entity/player/Player;)Z a
	mayPlace (Lnet/minecraft/world/item/ItemStack;)Z a
	onTake (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/item/ItemStack;)V a
	remove (I)Lnet/minecraft/world/item/ItemStack; a
	set (Lnet/minecraft/world/item/ItemStack;)V e
	setByPlayer (Lnet/minecraft/world/item/ItemStack;)V d
	setChanged ()V d
net/minecraft/client/gui/screens/inventory/CyclingSlotBackground ewe
	ICON_CHANGE_TICK_RATE a
	ICON_SIZE b
	ICON_TRANSITION_TICK_DURATION c
	iconIndex g
	icons e
	slotIndex d
	tick f
	getIconTransitionTransparency (F)F a
	render (Lnet/minecraft/world/inventory/AbstractContainerMenu;Lnet/minecraft/client/gui/GuiGraphics;FII)V a
	renderIcon (Lnet/minecraft/world/inventory/Slot;Lnet/minecraft/resources/ResourceLocation;FLnet/minecraft/client/gui/GuiGraphics;II)V a
	tick (Ljava/util/List;)V a
net/minecraft/client/gui/screens/inventory/DispenserScreen ewf
	CONTAINER_LOCATION w
	init ()V b
	render (Lnet/minecraft/client/gui/GuiGraphics;IIF)V a
	renderBg (Lnet/minecraft/client/gui/GuiGraphics;FII)V a
net/minecraft/client/gui/screens/inventory/EffectRenderingInventoryScreen ewg
	canSeeEffects ()Z F
	getEffectName (Lnet/minecraft/world/effect/MobEffectInstance;)Lnet/minecraft/network/chat/Component; a
	render (Lnet/minecraft/client/gui/GuiGraphics;IIF)V a
	renderBackgrounds (Lnet/minecraft/client/gui/GuiGraphics;IILjava/lang/Iterable;Z)V a
	renderEffects (Lnet/minecraft/client/gui/GuiGraphics;II)V c
	renderIcons (Lnet/minecraft/client/gui/GuiGraphics;IILjava/lang/Iterable;Z)V b
	renderLabels (Lnet/minecraft/client/gui/GuiGraphics;IILjava/lang/Iterable;)V a
net/minecraft/client/gui/screens/inventory/EnchantmentNames ewh
	ALT_FONT a
	INSTANCE c
	ROOT_STYLE b
	random d
	words e
	getInstance ()Lnet/minecraft/client/gui/screens/inventory/EnchantmentNames; a
	getRandomName (Lnet/minecraft/client/gui/Font;I)Lnet/minecraft/network/chat/FormattedText; a
	initSeed (J)V a
net/minecraft/client/gui/screens/inventory/EnchantmentScreen ewi
	ENCHANTING_BOOK_LOCATION F
	ENCHANTING_TABLE_LOCATION E
	bookModel H
	flip x
	flipA A
	flipT z
	last I
	oFlip y
	oOpen D
	open C
	random G
	time w
	containerTick ()V B
	init ()V b
	mouseClicked (DDI)Z a
	render (Lnet/minecraft/client/gui/GuiGraphics;IIF)V a
	renderBg (Lnet/minecraft/client/gui/GuiGraphics;FII)V a
	renderBook (Lnet/minecraft/client/gui/GuiGraphics;IIF)V c
	tickBook ()V D
net/minecraft/client/gui/screens/inventory/FurnaceScreen ewj
	TEXTURE x
net/minecraft/client/gui/screens/inventory/GrindstoneScreen ewk
	GRINDSTONE_LOCATION w
	render (Lnet/minecraft/client/gui/GuiGraphics;IIF)V a
	renderBg (Lnet/minecraft/client/gui/GuiGraphics;FII)V a
net/minecraft/client/gui/screens/inventory/HangingSignEditScreen ewl
	MAGIC_BACKGROUND_SCALE b
	TEXTURE_HEIGHT l
	TEXTURE_WIDTH k
	TEXT_SCALE c
	texture m
	getSignTextScale ()Lorg/joml/Vector3f; l
	offsetSign (Lnet/minecraft/client/gui/GuiGraphics;Lnet/minecraft/world/level/block/state/BlockState;)V b
	renderSignBackground (Lnet/minecraft/client/gui/GuiGraphics;Lnet/minecraft/world/level/block/state/BlockState;)V a
net/minecraft/client/gui/screens/inventory/HopperScreen ewm
	HOPPER_LOCATION w
	render (Lnet/minecraft/client/gui/GuiGraphics;IIF)V a
	renderBg (Lnet/minecraft/client/gui/GuiGraphics;FII)V a
net/minecraft/client/gui/screens/inventory/HorseInventoryScreen ewn
	HORSE_INVENTORY_LOCATION w
	horse x
	xMouse y
	yMouse z
	render (Lnet/minecraft/client/gui/GuiGraphics;IIF)V a
	renderBg (Lnet/minecraft/client/gui/GuiGraphics;FII)V a
net/minecraft/client/gui/screens/inventory/InventoryScreen ewo
	RECIPE_BUTTON_LOCATION w
	buttonClicked C
	recipeBookComponent z
	widthTooNarrow A
	xMouse x
	yMouse y
	containerTick ()V B
	getRecipeBookComponent ()Lnet/minecraft/client/gui/screens/recipebook/RecipeBookComponent; E
	hasClickedOutside (DDIII)Z a
	init ()V b
	isHovering (IIIIDD)Z a
	mouseClicked (DDI)Z a
	mouseReleased (DDI)Z b
	recipesUpdated ()V D
	render (Lnet/minecraft/client/gui/GuiGraphics;IIF)V a
	renderBg (Lnet/minecraft/client/gui/GuiGraphics;FII)V a
	renderEntityInInventory (Lnet/minecraft/client/gui/GuiGraphics;IIILorg/joml/Quaternionf;Lorg/joml/Quaternionf;Lnet/minecraft/world/entity/LivingEntity;)V a
	renderEntityInInventoryFollowsMouse (Lnet/minecraft/client/gui/GuiGraphics;IIIFFLnet/minecraft/world/entity/LivingEntity;)V a
	renderLabels (Lnet/minecraft/client/gui/GuiGraphics;II)V b
	slotClicked (Lnet/minecraft/world/inventory/Slot;IILnet/minecraft/world/inventory/ClickType;)V a
net/minecraft/client/gui/screens/inventory/ItemCombinerScreen ewp
	menuResource w
	dataChanged (Lnet/minecraft/world/inventory/AbstractContainerMenu;II)V a
	init ()V b
	removed ()V ax_
	render (Lnet/minecraft/client/gui/GuiGraphics;IIF)V a
	renderBg (Lnet/minecraft/client/gui/GuiGraphics;FII)V a
	renderErrorIcon (Lnet/minecraft/client/gui/GuiGraphics;II)V c
	renderFg (Lnet/minecraft/client/gui/GuiGraphics;IIF)V c
	slotChanged (Lnet/minecraft/world/inventory/AbstractContainerMenu;ILnet/minecraft/world/item/ItemStack;)V a
	subInit ()V D
net/minecraft/client/gui/screens/inventory/JigsawBlockEditScreen ewq
	FINAL_STATE_LABEL m
	JOINT_LABEL b
	MAX_LEVELS a
	NAME_LABEL k
	POOL_LABEL c
	TARGET_LABEL l
	doneButton v
	finalStateEdit r
	generateButton w
	jigsawEntity n
	joint x
	jointButton u
	keepJigsaws t
	levels s
	nameEdit o
	poolEdit q
	targetEdit p
	init ()V b
	keyPressed (III)Z a
	onCancel ()V B
	onClose ()V aw_
	onDone ()V l
	render (Lnet/minecraft/client/gui/GuiGraphics;IIF)V a
	resize (Lnet/minecraft/client/Minecraft;II)V a
	sendGenerate ()V D
	sendToServer ()V C
	tick ()V f
	updateValidity ()V E
net/minecraft/client/gui/screens/inventory/LecternScreen ewr
	listener r
	menu q
	bookChanged ()V H
	closeScreen ()V F
	createMenuControls ()V l
	forcePage (I)Z b
	getMenu ()Lnet/minecraft/world/inventory/AbstractContainerMenu; C
	getMenu ()Lnet/minecraft/world/inventory/LecternMenu; G
	init ()V b
	isPauseScreen ()Z az_
	onClose ()V aw_
	pageBack ()V D
	pageChanged ()V I
	pageForward ()V E
	removed ()V ax_
	sendButtonClick (I)V c
net/minecraft/client/gui/screens/inventory/LoomScreen ews
	BG_LOCATION w
	PATTERNS_X E
	PATTERNS_Y F
	PATTERN_COLUMNS x
	PATTERN_IMAGE_SIZE C
	PATTERN_ROWS y
	SCROLLER_FULL_HEIGHT D
	SCROLLER_HEIGHT A
	SCROLLER_WIDTH z
	bannerStack I
	displayPatterns L
	dyeStack J
	flag G
	hasMaxPatterns M
	patternStack K
	resultBannerPatterns H
	scrollOffs N
	scrolling O
	startRow P
	containerChanged ()V E
	hasClickedOutside (DDIII)Z a
	init ()V b
	mouseClicked (DDI)Z a
	mouseDragged (DDIDD)Z a
	mouseScrolled (DDD)Z a
	render (Lnet/minecraft/client/gui/GuiGraphics;IIF)V a
	renderBg (Lnet/minecraft/client/gui/GuiGraphics;FII)V a
	renderPattern (Lnet/minecraft/client/gui/GuiGraphics;Lnet/minecraft/core/Holder;II)V a
	totalRowCount ()I D
net/minecraft/client/gui/screens/inventory/MenuAccess ewt
	getMenu ()Lnet/minecraft/world/inventory/AbstractContainerMenu; C
net/minecraft/client/gui/screens/inventory/MerchantScreen ewu
	BUY_ITEM_X F
	DEPRECATED_TOOLTIP S
	LABEL_Y G
	LEVEL_SEPARATOR R
	MERCHANT_MENU_PART_X z
	NUMBER_OF_OFFER_BUTTONS H
	PROGRESS_BAR_X A
	PROGRESS_BAR_Y C
	SCROLLER_HEIGHT L
	SCROLLER_WIDTH M
	SCROLL_BAR_HEIGHT N
	SCROLL_BAR_START_X P
	SCROLL_BAR_TOP_POS_Y O
	SELL_ITEM_1_X D
	SELL_ITEM_2_X E
	TEXTURE_HEIGHT y
	TEXTURE_WIDTH x
	TRADES_LABEL Q
	TRADE_BUTTON_HEIGHT J
	TRADE_BUTTON_WIDTH K
	TRADE_BUTTON_X I
	VILLAGER_LOCATION w
	isDragging W
	scrollOff V
	shopItem T
	tradeOfferButtons U
	canScroll (I)Z a
	init ()V b
	mouseClicked (DDI)Z a
	mouseDragged (DDIDD)Z a
	mouseScrolled (DDD)Z a
	postButtonClick ()V D
	render (Lnet/minecraft/client/gui/GuiGraphics;IIF)V a
	renderAndDecorateCostA (Lnet/minecraft/client/gui/GuiGraphics;Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/item/ItemStack;II)V a
	renderBg (Lnet/minecraft/client/gui/GuiGraphics;FII)V a
	renderButtonArrows (Lnet/minecraft/client/gui/GuiGraphics;Lnet/minecraft/world/item/trading/MerchantOffer;II)V a
	renderLabels (Lnet/minecraft/client/gui/GuiGraphics;II)V b
	renderProgressBar (Lnet/minecraft/client/gui/GuiGraphics;IILnet/minecraft/world/item/trading/MerchantOffer;)V a
	renderScroller (Lnet/minecraft/client/gui/GuiGraphics;IILnet/minecraft/world/item/trading/MerchantOffers;)V a
net/minecraft/client/gui/screens/inventory/MerchantScreen$TradeOfferButton ewu$a
	index a
	getIndex ()I a
	renderToolTip (Lnet/minecraft/client/gui/GuiGraphics;II)V a
net/minecraft/client/gui/screens/inventory/MinecartCommandBlockEditScreen ewv
	commandBlock m
	getCommandBlock ()Lnet/minecraft/world/level/BaseCommandBlock; l
	getPreviousY ()I B
	init ()V b
	populateAndSendPacket (Lnet/minecraft/world/level/BaseCommandBlock;)V a
net/minecraft/client/gui/screens/inventory/PageButton eww
	isForward a
	playTurnSound b
	playDownSound (Lnet/minecraft/client/sounds/SoundManager;)V a
	renderWidget (Lnet/minecraft/client/gui/GuiGraphics;IIF)V b
net/minecraft/client/gui/screens/inventory/ShulkerBoxScreen ewx
	CONTAINER_TEXTURE w
	render (Lnet/minecraft/client/gui/GuiGraphics;IIF)V a
	renderBg (Lnet/minecraft/client/gui/GuiGraphics;FII)V a
net/minecraft/client/gui/screens/inventory/SignEditScreen ewy
	MAGIC_SCALE_NUMBER b
	MAGIC_TEXT_SCALE c
	TEXT_SCALE k
	signModel l
	getSignTextScale ()Lorg/joml/Vector3f; l
	init ()V b
	offsetSign (Lnet/minecraft/client/gui/GuiGraphics;Lnet/minecraft/world/level/block/state/BlockState;)V b
	renderSignBackground (Lnet/minecraft/client/gui/GuiGraphics;Lnet/minecraft/world/level/block/state/BlockState;)V a
net/minecraft/client/gui/screens/inventory/SmithingScreen ewz
	ARMOR_STAND_ANGLE y
	ARMOR_STAND_OFFSET_X C
	ARMOR_STAND_OFFSET_Y A
	ARMOR_STAND_SCALE z
	ARMOR_STAND_X_ROT x
	ARMOR_STAND_Y_ROT w
	EMPTY_SLOT_SMITHING_TEMPLATES I
	EMPTY_SLOT_SMITHING_TEMPLATE_ARMOR_TRIM E
	EMPTY_SLOT_SMITHING_TEMPLATE_NETHERITE_UPGRADE F
	ERROR_ICON_HEIGHT M
	ERROR_ICON_WIDTH L
	ERROR_ICON_X N
	ERROR_ICON_Y O
	ERROR_TOOLTIP H
	MISSING_TEMPLATE_TOOLTIP G
	SMITHING_LOCATION D
	TITLE_LABEL_X J
	TITLE_LABEL_Y K
	TOOLTIP_WIDTH P
	additionalIcon S
	armorStandPreview T
	baseIcon R
	templateIcon Q
	containerTick ()V B
	getTemplateItem ()Ljava/util/Optional; E
	hasRecipeError ()Z F
	render (Lnet/minecraft/client/gui/GuiGraphics;IIF)V a
	renderBg (Lnet/minecraft/client/gui/GuiGraphics;FII)V a
	renderErrorIcon (Lnet/minecraft/client/gui/GuiGraphics;II)V c
	renderOnboardingTooltips (Lnet/minecraft/client/gui/GuiGraphics;II)V d
	slotChanged (Lnet/minecraft/world/inventory/AbstractContainerMenu;ILnet/minecraft/world/item/ItemStack;)V a
	subInit ()V D
	updateArmorStandPreview (Lnet/minecraft/world/item/ItemStack;)V b
net/minecraft/client/gui/screens/inventory/SmokerScreen exa
	TEXTURE x
net/minecraft/client/gui/screens/inventory/StonecutterScreen exb
	BG_LOCATION w
	RECIPES_COLUMNS z
	RECIPES_IMAGE_SIZE_HEIGHT D
	RECIPES_IMAGE_SIZE_WIDTH C
	RECIPES_ROWS A
	RECIPES_X F
	RECIPES_Y G
	SCROLLER_FULL_HEIGHT E
	SCROLLER_HEIGHT y
	SCROLLER_WIDTH x
	displayRecipes K
	scrollOffs H
	scrolling I
	startIndex J
	containerChanged ()V F
	getOffscreenRows ()I D
	isScrollBarActive ()Z E
	mouseClicked (DDI)Z a
	mouseDragged (DDIDD)Z a
	mouseScrolled (DDD)Z a
	render (Lnet/minecraft/client/gui/GuiGraphics;IIF)V a
	renderBg (Lnet/minecraft/client/gui/GuiGraphics;FII)V a
	renderButtons (Lnet/minecraft/client/gui/GuiGraphics;IIIII)V a
	renderRecipes (Lnet/minecraft/client/gui/GuiGraphics;III)V b
	renderTooltip (Lnet/minecraft/client/gui/GuiGraphics;II)V a
net/minecraft/client/gui/screens/inventory/StructureBlockEditScreen exc
	ALL_MODES q
	CUSTOM_DATA_LABEL l
	DEFAULT_MODES r
	DETECT_SIZE_LABEL n
	INCLUDE_ENTITIES_LABEL m
	INTEGRITY_LABEL k
	NAME_LABEL a
	POSITION_LABEL b
	SHOW_AIR_LABEL o
	SHOW_BOUNDING_BOX_LABEL p
	SIZE_LABEL c
	dataEdit J
	decimalFormat V
	detectButton Q
	includeEntitiesButton R
	initialEntityIgnoring w
	initialMirror t
	initialMode v
	initialRotation u
	initialShowAir x
	initialShowBoundingBox y
	integrityEdit H
	loadButton L
	mirrorButton S
	nameEdit z
	posXEdit A
	posYEdit C
	posZEdit D
	rot0Button M
	rot180Button O
	rot270Button P
	rot90Button N
	saveButton K
	seedEdit I
	sizeXEdit E
	sizeYEdit F
	sizeZEdit G
	structure s
	toggleAirButton T
	toggleBoundingBox U
	init ()V b
	isPauseScreen ()Z az_
	keyPressed (III)Z a
	onCancel ()V B
	onClose ()V aw_
	onDone ()V l
	parseCoordinate (Ljava/lang/String;)I c
	parseIntegrity (Ljava/lang/String;)F b
	parseSeed (Ljava/lang/String;)J a
	render (Lnet/minecraft/client/gui/GuiGraphics;IIF)V a
	resize (Lnet/minecraft/client/Minecraft;II)V a
	sendToServer (Lnet/minecraft/world/level/block/entity/StructureBlockEntity$UpdateType;)Z a
	tick ()V f
	updateDirectionButtons ()V C
	updateMode (Lnet/minecraft/world/level/block/state/properties/StructureMode;)V a
net/minecraft/client/gui/screens/inventory/tooltip/BelowOrAboveWidgetTooltipPositioner exe
	widget a
	positionTooltip (IIIIII)Lorg/joml/Vector2ic; a
net/minecraft/client/gui/screens/inventory/tooltip/ClientBundleTooltip exf
	BORDER_WIDTH c
	MARGIN_Y b
	SLOT_SIZE_X e
	SLOT_SIZE_Y f
	TEXTURE_LOCATION a
	TEX_SIZE d
	items g
	weight h
	blit (Lnet/minecraft/client/gui/GuiGraphics;IILnet/minecraft/client/gui/screens/inventory/tooltip/ClientBundleTooltip$Texture;)V a
	drawBorder (IIIILnet/minecraft/client/gui/GuiGraphics;)V a
	getHeight ()I a
	getWidth (Lnet/minecraft/client/gui/Font;)I a
	gridSizeX ()I b
	gridSizeY ()I c
	renderImage (Lnet/minecraft/client/gui/Font;IILnet/minecraft/client/gui/GuiGraphics;)V a
	renderSlot (IIIZLnet/minecraft/client/gui/GuiGraphics;Lnet/minecraft/client/gui/Font;)V a
net/minecraft/client/gui/screens/inventory/tooltip/ClientBundleTooltip$Texture exf$a
	$VALUES l
	BLOCKED_SLOT b
	BORDER_CORNER_BOTTOM g
	BORDER_CORNER_TOP f
	BORDER_HORIZONTAL_BOTTOM e
	BORDER_HORIZONTAL_TOP d
	BORDER_VERTICAL c
	SLOT a
	h k
	w j
	x h
	y i
	$values ()[Lnet/minecraft/client/gui/screens/inventory/tooltip/ClientBundleTooltip$Texture; a
net/minecraft/client/gui/screens/inventory/tooltip/ClientTextTooltip exg
	text a
	getHeight ()I a
	getWidth (Lnet/minecraft/client/gui/Font;)I a
	renderText (Lnet/minecraft/client/gui/Font;IILorg/joml/Matrix4f;Lnet/minecraft/client/renderer/MultiBufferSource$BufferSource;)V a
net/minecraft/client/gui/screens/inventory/tooltip/ClientTooltipComponent exh
	create (Lnet/minecraft/util/FormattedCharSequence;)Lnet/minecraft/client/gui/screens/inventory/tooltip/ClientTooltipComponent; a
	create (Lnet/minecraft/world/inventory/tooltip/TooltipComponent;)Lnet/minecraft/client/gui/screens/inventory/tooltip/ClientTooltipComponent; a
	getHeight ()I a
	getWidth (Lnet/minecraft/client/gui/Font;)I a
	renderImage (Lnet/minecraft/client/gui/Font;IILnet/minecraft/client/gui/GuiGraphics;)V a
	renderText (Lnet/minecraft/client/gui/Font;IILorg/joml/Matrix4f;Lnet/minecraft/client/renderer/MultiBufferSource$BufferSource;)V a
net/minecraft/client/gui/screens/inventory/tooltip/ClientTooltipPositioner exi
	positionTooltip (IIIIII)Lorg/joml/Vector2ic; a
net/minecraft/client/gui/screens/inventory/tooltip/DefaultTooltipPositioner exj
	INSTANCE a
	positionTooltip (IIIIII)Lorg/joml/Vector2ic; a
	positionTooltip (IILorg/joml/Vector2i;II)V a
net/minecraft/client/gui/screens/inventory/tooltip/MenuTooltipPositioner exk
	MARGIN c
	MAX_DISTANCE_TO_WIDGET b
	MAX_OVERLAP_WITH_WIDGET a
	MOUSE_OFFSET_X d
	widget e
	getOffset (III)I a
	positionTooltip (IIIIII)Lorg/joml/Vector2ic; a
net/minecraft/client/gui/screens/inventory/tooltip/TooltipRenderUtil exl
	BACKGROUND_COLOR g
	BORDER_COLOR_BOTTOM i
	BORDER_COLOR_TOP h
	MOUSE_OFFSET a
	PADDING f
	PADDING_BOTTOM e
	PADDING_LEFT b
	PADDING_RIGHT c
	PADDING_TOP d
	renderFrameGradient (Lnet/minecraft/client/gui/GuiGraphics;IIIIIII)V a
	renderHorizontalLine (Lnet/minecraft/client/gui/GuiGraphics;IIIII)V c
	renderRectangle (Lnet/minecraft/client/gui/GuiGraphics;IIIIII)V b
	renderTooltipBackground (Lnet/minecraft/client/gui/GuiGraphics;IIIII)V a
	renderVerticalLine (Lnet/minecraft/client/gui/GuiGraphics;IIIII)V b
	renderVerticalLineGradient (Lnet/minecraft/client/gui/GuiGraphics;IIIIII)V a
net/minecraft/client/gui/screens/multiplayer/JoinMultiplayerScreen exn
	BUTTON_ROW_WIDTH a
	FOOTER_HEIGHT k
	LOGGER m
	LOWER_ROW_BUTTON_WIDTH c
	TOP_ROW_BUTTON_WIDTH b
	deleteButton s
	editButton q
	editingServer u
	initedOnce x
	lanServerDetector w
	lanServerList v
	lastScreen o
	pinger n
	selectButton r
	serverSelectionList l
	servers p
	toolTip t
	addServerCallback (Z)V f
	deleteCallback (Z)V c
	directJoinCallback (Z)V g
	editServerCallback (Z)V e
	getPinger ()Lnet/minecraft/client/multiplayer/ServerStatusPinger; C
	getServers ()Lnet/minecraft/client/multiplayer/ServerList; D
	init ()V b
	join (Lnet/minecraft/client/multiplayer/ServerData;)V a
	joinSelectedServer ()V l
	keyPressed (III)Z a
	onSelectedChange ()V B
	refreshServerList ()V E
	removed ()V ax_
	render (Lnet/minecraft/client/gui/GuiGraphics;IIF)V a
	setSelected (Lnet/minecraft/client/gui/screens/multiplayer/ServerSelectionList$Entry;)V a
	setToolTip (Ljava/util/List;)V c
	tick ()V f
net/minecraft/client/gui/screens/multiplayer/Realms32bitWarningScreen exo
	CHECK k
	CONTENT c
	NARRATION l
	TITLE b
	previous m
	initButtons (I)V a
net/minecraft/client/gui/screens/multiplayer/SafetyScreen exp
	CHECK k
	CONTENT c
	NARRATION l
	TITLE b
	previous m
	initButtons (I)V a
net/minecraft/client/gui/screens/multiplayer/ServerSelectionList exq
	CANT_CONNECT_TEXT r
	CANT_RESOLVE_TEXT q
	GUI_ICONS_LOCATION o
	ICON_MISSING m
	ICON_OVERLAY_LOCATION n
	INCOMPATIBLE_STATUS s
	LOGGER a
	NO_CONNECTION_STATUS t
	ONLINE_STATUS v
	PINGING_STATUS u
	SCANNING_LABEL p
	THREAD_POOL l
	lanHeader y
	networkServers z
	onlineServers x
	screen w
	getRowWidth ()I b
	getScrollbarPosition ()I c
	keyPressed (III)Z a
	refreshEntries ()V e
	removed ()V d
	setSelected (Lnet/minecraft/client/gui/components/AbstractSelectionList$Entry;)V a
	setSelected (Lnet/minecraft/client/gui/screens/multiplayer/ServerSelectionList$Entry;)V a
	updateNetworkServers (Ljava/util/List;)V a
	updateOnlineServers (Lnet/minecraft/client/multiplayer/ServerList;)V a
net/minecraft/client/gui/screens/multiplayer/ServerSelectionList$Entry exq$a
net/minecraft/client/gui/screens/multiplayer/ServerSelectionList$LANHeader exq$b
	minecraft a
	getNarration ()Lnet/minecraft/network/chat/Component; a
	render (Lnet/minecraft/client/gui/GuiGraphics;IIIIIIIZF)V a
net/minecraft/client/gui/screens/multiplayer/ServerSelectionList$NetworkServerEntry exq$c
	HIDDEN_ADDRESS_TEXT e
	ICON_WIDTH c
	LAN_SERVER_HEADER d
	lastClickTime g
	minecraft a
	screen f
	serverData b
	getNarration ()Lnet/minecraft/network/chat/Component; a
	getServerData ()Lnet/minecraft/client/server/LanServer; b
	getServerNarration ()Lnet/minecraft/network/chat/Component; d
	mouseClicked (DDI)Z a
	render (Lnet/minecraft/client/gui/GuiGraphics;IIIIIIIZF)V a
net/minecraft/client/gui/screens/multiplayer/ServerSelectionList$OnlineServerEntry exq$d
	ICON_HEIGHT c
	ICON_OVERLAY_X_MOVE_DOWN f
	ICON_OVERLAY_X_MOVE_LEFT e
	ICON_OVERLAY_X_MOVE_RIGHT d
	ICON_OVERLAY_X_MOVE_UP g
	ICON_OVERLAY_Y_SELECTED i
	ICON_OVERLAY_Y_UNSELECTED h
	ICON_WIDTH b
	icon m
	lastClickTime o
	lastIconBytes n
	minecraft k
	screen j
	serverData l
	canJoin ()Z g
	drawIcon (Lnet/minecraft/client/gui/GuiGraphics;IILnet/minecraft/resources/ResourceLocation;)V a
	getNarration ()Lnet/minecraft/network/chat/Component; a
	getServerData ()Lnet/minecraft/client/multiplayer/ServerData; d
	isCompatible ()Z f
	keyPressed (III)Z a
	mouseClicked (DDI)Z a
	pingCompleted ()Z e
	render (Lnet/minecraft/client/gui/GuiGraphics;IIIIIIIZF)V a
	swap (II)V a
	updateServerList ()V b
	uploadServerIcon ([B)Z a
net/minecraft/client/gui/screens/multiplayer/WarningScreen exr
	check c
	content b
	message l
	narration k
	stopShowing a
	getLineHeight ()I l
	getNarrationMessage ()Lnet/minecraft/network/chat/Component; au_
	init ()V b
	initButtons (I)V a
	render (Lnet/minecraft/client/gui/GuiGraphics;IIF)V a
	renderTitle (Lnet/minecraft/client/gui/GuiGraphics;)V c
net/minecraft/client/gui/screens/packs/PackSelectionModel exu
	iconGetter d
	onListChanged e
	output f
	repository a
	selected b
	unselected c
	commit ()V c
	findNewPacks ()V d
	getSelected ()Ljava/util/stream/Stream; b
	getUnselected ()Ljava/util/stream/Stream; a
	updateRepoSelectedList ()V e
net/minecraft/client/gui/screens/packs/PackSelectionModel$Entry exu$a
	canMoveDown ()Z r
	canMoveUp ()Z q
	canSelect ()Z o
	canUnselect ()Z p
	getCompatibility ()Lnet/minecraft/server/packs/repository/PackCompatibility; b
	getDescription ()Lnet/minecraft/network/chat/Component; e
	getExtendedDescription ()Lnet/minecraft/network/chat/Component; g
	getIconTexture ()Lnet/minecraft/resources/ResourceLocation; a
	getId ()Ljava/lang/String; c
	getPackSource ()Lnet/minecraft/server/packs/repository/PackSource; f
	getTitle ()Lnet/minecraft/network/chat/Component; d
	isFixedPosition ()Z h
	isRequired ()Z i
	isSelected ()Z n
	moveDown ()V m
	moveUp ()V l
	select ()V j
	unselect ()V k
net/minecraft/client/gui/screens/packs/PackSelectionModel$EntryBase exu$b
	pack b
	canMoveDown ()Z r
	canMoveUp ()Z q
	getCompatibility ()Lnet/minecraft/server/packs/repository/PackCompatibility; b
	getDescription ()Lnet/minecraft/network/chat/Component; e
	getIconTexture ()Lnet/minecraft/resources/ResourceLocation; a
	getId ()Ljava/lang/String; c
	getOtherList ()Ljava/util/List; t
	getPackSource ()Lnet/minecraft/server/packs/repository/PackSource; f
	getSelfList ()Ljava/util/List; s
	getTitle ()Lnet/minecraft/network/chat/Component; d
	isFixedPosition ()Z h
	isRequired ()Z i
	move (I)V a
	moveDown ()V m
	moveUp ()V l
	toggleSelection ()V u
	updateHighContrastOptionInstance ()V v
net/minecraft/client/gui/screens/packs/PackSelectionModel$SelectedPackEntry exu$c
	getOtherList ()Ljava/util/List; t
	getSelfList ()Ljava/util/List; s
	isSelected ()Z n
	select ()V j
	unselect ()V k
net/minecraft/client/gui/screens/packs/PackSelectionModel$UnselectedPackEntry exu$d
	getOtherList ()Ljava/util/List; t
	getSelfList ()Ljava/util/List; s
	isSelected ()Z n
	select ()V j
	unselect ()V k
net/minecraft/client/gui/screens/packs/PackSelectionScreen exv
	DEFAULT_ICON m
	DIRECTORY_BUTTON_TOOLTIP k
	DRAG_AND_DROP c
	LIST_WIDTH b
	LOGGER a
	RELOAD_COOLDOWN l
	availablePackList q
	doneButton t
	model n
	packDir s
	packIcons u
	selectedPackList r
	ticksToReload p
	watcher o
	clearSelected ()V l
	closeWatcher ()V B
	copyPacks (Lnet/minecraft/client/Minecraft;Ljava/util/List;Ljava/nio/file/Path;)V a
	getPackIcon (Lnet/minecraft/server/packs/repository/Pack;)Lnet/minecraft/resources/ResourceLocation; a
	init ()V b
	loadPackIcon (Lnet/minecraft/client/renderer/texture/TextureManager;Lnet/minecraft/server/packs/repository/Pack;)Lnet/minecraft/resources/ResourceLocation; a
	onClose ()V aw_
	onFilesDrop (Ljava/util/List;)V a
	populateLists ()V C
	reload ()V D
	render (Lnet/minecraft/client/gui/GuiGraphics;IIF)V a
	tick ()V f
	updateFocus (Lnet/minecraft/client/gui/screens/packs/TransferableSelectionList;)V a
	updateList (Lnet/minecraft/client/gui/screens/packs/TransferableSelectionList;Ljava/util/stream/Stream;)V a
net/minecraft/client/gui/screens/packs/PackSelectionScreen$Watcher exv$a
	packPath b
	watcher a
	create (Ljava/nio/file/Path;)Lnet/minecraft/client/gui/screens/packs/PackSelectionScreen$Watcher; a
	pollForChanges ()Z a
	watchDir (Ljava/nio/file/Path;)V b
net/minecraft/client/gui/screens/packs/TransferableSelectionList exw
	ICON_OVERLAY_LOCATION a
	INCOMPATIBLE_CONFIRM_TITLE m
	INCOMPATIBLE_TITLE l
	screen o
	title n
	getRowWidth ()I b
	getScrollbarPosition ()I c
	keyPressed (III)Z a
	renderHeader (Lnet/minecraft/client/gui/GuiGraphics;II)V a
net/minecraft/client/gui/screens/packs/TransferableSelectionList$PackEntry exw$a
	ICON_OVERLAY_X_MOVE_DOWN d
	ICON_OVERLAY_X_MOVE_LEFT c
	ICON_OVERLAY_X_MOVE_RIGHT b
	ICON_OVERLAY_X_MOVE_UP e
	ICON_OVERLAY_Y_SELECTED g
	ICON_OVERLAY_Y_UNSELECTED f
	MAX_DESCRIPTION_WIDTH_PIXELS h
	MAX_NAME_WIDTH_PIXELS i
	TOO_LONG_NAME_SUFFIX j
	descriptionDisplayCache n
	incompatibleDescriptionDisplayCache p
	incompatibleNameDisplayCache o
	minecraft a
	nameDisplayCache m
	pack l
	parent k
	cacheDescription (Lnet/minecraft/client/Minecraft;Lnet/minecraft/network/chat/Component;)Lnet/minecraft/client/gui/components/MultiLineLabel; b
	cacheName (Lnet/minecraft/client/Minecraft;Lnet/minecraft/network/chat/Component;)Lnet/minecraft/util/FormattedCharSequence; a
	getNarration ()Lnet/minecraft/network/chat/Component; a
	getPackId ()Ljava/lang/String; b
	handlePackSelection ()Z h
	keyboardMoveDown ()V g
	keyboardMoveUp ()V f
	keyboardSelection ()V d
	mouseClicked (DDI)Z a
	render (Lnet/minecraft/client/gui/GuiGraphics;IIIIIIIZF)V a
	showHoverOverlay ()Z e
net/minecraft/client/gui/screens/recipebook/AbstractFurnaceRecipeBookComponent exy
	fuels h
	getFuelItems ()Ljava/util/Set; b
	initFilterButtonTextures ()V a
	setupGhostRecipe (Lnet/minecraft/world/item/crafting/Recipe;Ljava/util/List;)V a
	slotClicked (Lnet/minecraft/world/inventory/Slot;)V a
net/minecraft/client/gui/screens/recipebook/BlastingRecipeBookComponent exz
	FILTER_NAME h
	getFuelItems ()Ljava/util/Set; b
	getRecipeFilterName ()Lnet/minecraft/network/chat/Component; d
net/minecraft/client/gui/screens/recipebook/GhostRecipe eya
	ingredients b
	recipe a
	time c
	addIngredient (Lnet/minecraft/world/item/crafting/Ingredient;II)V a
	clear ()V a
	get (I)Lnet/minecraft/client/gui/screens/recipebook/GhostRecipe$GhostIngredient; a
	getRecipe ()Lnet/minecraft/world/item/crafting/Recipe; c
	render (Lnet/minecraft/client/gui/GuiGraphics;Lnet/minecraft/client/Minecraft;IIZF)V a
	setRecipe (Lnet/minecraft/world/item/crafting/Recipe;)V a
	size ()I b
net/minecraft/client/gui/screens/recipebook/GhostRecipe$GhostIngredient eya$a
	ingredient b
	x c
	y d
	getItem ()Lnet/minecraft/world/item/ItemStack; c
	getX ()I a
	getY ()I b
net/minecraft/client/gui/screens/recipebook/OverlayRecipeComponent eyb
	BUTTON_SIZE a
	ITEM_RENDER_SCALE e
	MAX_ROW c
	MAX_ROW_LARGE d
	RECIPE_BOOK_LOCATION b
	collection k
	isFurnaceMenu n
	isVisible g
	lastRecipeClicked l
	minecraft j
	recipeButtons f
	time m
	x h
	y i
	getLastRecipeClicked ()Lnet/minecraft/world/item/crafting/Recipe; b
	getRecipeCollection ()Lnet/minecraft/client/gui/screens/recipebook/RecipeCollection; a
	init (Lnet/minecraft/client/Minecraft;Lnet/minecraft/client/gui/screens/recipebook/RecipeCollection;IIIIF)V a
	isFocused ()Z aB_
	isMouseOver (DD)Z a_
	isVisible ()Z d
	mouseClicked (DDI)Z a
	render (Lnet/minecraft/client/gui/GuiGraphics;IIF)V a
	setFocused (Z)V b_
	setVisible (Z)V b
net/minecraft/client/gui/screens/recipebook/OverlayRecipeComponent$OverlayRecipeButton eyb$a
	ingredientPos a
	isCraftable d
	recipe c
	addItemToSlot (Ljava/util/Iterator;IIII)V a
	calculateIngredientsPositions (Lnet/minecraft/world/item/crafting/Recipe;)V a
	renderWidget (Lnet/minecraft/client/gui/GuiGraphics;IIF)V b
	updateWidgetNarration (Lnet/minecraft/client/gui/narration/NarrationElementOutput;)V a
net/minecraft/client/gui/screens/recipebook/OverlayRecipeComponent$OverlayRecipeButton$Pos eyb$a$a
	ingredients a
	x b
	y c
net/minecraft/client/gui/screens/recipebook/OverlayRecipeComponent$OverlaySmeltingRecipeButton eyb$b
	calculateIngredientsPositions (Lnet/minecraft/world/item/crafting/Recipe;)V a
net/minecraft/client/gui/screens/recipebook/RecipeBookComponent eyc
	ALL_RECIPES_TOOLTIP k
	IMAGE_HEIGHT c
	IMAGE_WIDTH b
	OFFSET_X_POSITION i
	ONLY_CRAFTABLES_TOOLTIP j
	RECIPE_BOOK_LOCATION a
	SEARCH_HINT h
	book s
	filterButton e
	ghostRecipe d
	height n
	ignoreTextInput w
	lastSearch r
	menu f
	minecraft g
	recipeBookPage t
	searchBox q
	selectedTab p
	stackedContents u
	tabButtons o
	timesInventoryChanged v
	visible x
	width m
	widthTooNarrow y
	xOffset l
	addItemToSlot (Ljava/util/Iterator;IIII)V a
	charTyped (CI)Z a
	checkSearchStringUpdate ()V p
	getRecipeFilterName ()Lnet/minecraft/network/chat/Component; d
	hasClickedOutside (DDIIIII)Z a
	init (IILnet/minecraft/client/Minecraft;ZLnet/minecraft/world/inventory/RecipeBookMenu;)V a
	initFilterButtonTextures ()V a
	initVisuals ()V e
	isFocused ()Z aB_
	isMouseOver (DD)Z a_
	isOffsetNextToMainGUI ()Z r
	isVisible ()Z g
	isVisibleAccordingToBookData ()Z k
	keyPressed (III)Z a
	keyReleased (III)Z b
	mouseClicked (DDI)Z a
	narrationPriority ()Lnet/minecraft/client/gui/narration/NarratableEntry$NarrationPriority; q
	pirateSpeechForThePeople (Ljava/lang/String;)V a
	recipesShown (Ljava/util/List;)V a
	recipesUpdated ()V i
	render (Lnet/minecraft/client/gui/GuiGraphics;IIF)V a
	renderGhostRecipe (Lnet/minecraft/client/gui/GuiGraphics;IIZF)V a
	renderGhostRecipeTooltip (Lnet/minecraft/client/gui/GuiGraphics;IIII)V b
	renderTooltip (Lnet/minecraft/client/gui/GuiGraphics;IIII)V a
	sendUpdateSettings ()V j
	setFocused (Z)V b_
	setVisible (Z)V b
	setupGhostRecipe (Lnet/minecraft/world/item/crafting/Recipe;Ljava/util/List;)V a
	slotClicked (Lnet/minecraft/world/inventory/Slot;)V a
	tick ()V h
	toggleFiltering ()Z n
	toggleVisibility ()V f
	updateCollections (Z)V c
	updateFilterButtonTooltip ()V b
	updateNarration (Lnet/minecraft/client/gui/narration/NarrationElementOutput;)V b
	updateScreenPosition (II)I a
	updateStackedContents ()V m
	updateTabs ()V l
net/minecraft/client/gui/screens/recipebook/RecipeBookPage eyd
	ITEMS_PER_PAGE a
	backButton i
	buttons b
	currentPage k
	forwardButton h
	hoveredButton c
	lastClickedRecipe m
	lastClickedRecipeCollection n
	minecraft e
	overlay d
	recipeBook l
	recipeCollections g
	showListeners f
	totalPages j
	addListener (Lnet/minecraft/client/gui/screens/recipebook/RecipeBookComponent;)V a
	getLastClickedRecipe ()Lnet/minecraft/world/item/crafting/Recipe; a
	getLastClickedRecipeCollection ()Lnet/minecraft/client/gui/screens/recipebook/RecipeCollection; b
	getMinecraft ()Lnet/minecraft/client/Minecraft; d
	getRecipeBook ()Lnet/minecraft/stats/RecipeBook; e
	init (Lnet/minecraft/client/Minecraft;II)V a
	listButtons (Ljava/util/function/Consumer;)V a
	mouseClicked (DDIIIII)Z a
	recipesShown (Ljava/util/List;)V a
	render (Lnet/minecraft/client/gui/GuiGraphics;IIIIF)V a
	renderTooltip (Lnet/minecraft/client/gui/GuiGraphics;II)V a
	setInvisible ()V c
	updateArrowButtons ()V g
	updateButtonsForPage ()V f
	updateCollections (Ljava/util/List;Z)V a
net/minecraft/client/gui/screens/recipebook/RecipeBookTabButton eye
	ANIMATION_TIME h
	animationTime i
	category g
	getCategory ()Lnet/minecraft/client/RecipeBookCategories; b
	renderIcon (Lnet/minecraft/client/gui/GuiGraphics;Lnet/minecraft/client/renderer/entity/ItemRenderer;)V a
	renderWidget (Lnet/minecraft/client/gui/GuiGraphics;IIF)V b
	startAnimation (Lnet/minecraft/client/Minecraft;)V a
	updateVisibility (Lnet/minecraft/client/ClientRecipeBook;)Z a
net/minecraft/client/gui/screens/recipebook/RecipeButton eyf
	ANIMATION_TIME c
	BACKGROUND_SIZE d
	MORE_RECIPES_TOOLTIP e
	RECIPE_BOOK_LOCATION b
	TICKS_TO_SWAP a
	animationTime j
	book g
	collection h
	currentIndex k
	menu f
	time i
	getCollection ()Lnet/minecraft/client/gui/screens/recipebook/RecipeCollection; a
	getOrderedRecipes ()Ljava/util/List; g
	getRecipe ()Lnet/minecraft/world/item/crafting/Recipe; e
	getTooltipText ()Ljava/util/List; f
	getWidth ()I k
	init (Lnet/minecraft/client/gui/screens/recipebook/RecipeCollection;Lnet/minecraft/client/gui/screens/recipebook/RecipeBookPage;)V a
	isOnlyOption ()Z b
	isValidClickButton (I)Z c
	renderWidget (Lnet/minecraft/client/gui/GuiGraphics;IIF)V b
	updateWidgetNarration (Lnet/minecraft/client/gui/narration/NarrationElementOutput;)V a
net/minecraft/client/gui/screens/recipebook/RecipeCollection eyg
	craftable d
	fitsDimensions e
	known f
	recipes b
	registryAccess a
	singleResultItem c
	allRecipesHaveSameResult (Lnet/minecraft/core/RegistryAccess;Ljava/util/List;)Z a
	canCraft (Lnet/minecraft/world/entity/player/StackedContents;IILnet/minecraft/stats/RecipeBook;)V a
	getDisplayRecipes (Z)Ljava/util/List; b
	getRecipes ()Ljava/util/List; e
	getRecipes (Z)Ljava/util/List; a
	hasCraftable ()Z c
	hasFitting ()Z d
	hasKnownRecipes ()Z b
	hasSingleResultItem ()Z f
	isCraftable (Lnet/minecraft/world/item/crafting/Recipe;)Z a
	registryAccess ()Lnet/minecraft/core/RegistryAccess; a
	updateKnownRecipes (Lnet/minecraft/stats/RecipeBook;)V a
net/minecraft/client/gui/screens/recipebook/RecipeShownListener eyh
	recipesShown (Ljava/util/List;)V a
net/minecraft/client/gui/screens/recipebook/RecipeUpdateListener eyi
	getRecipeBookComponent ()Lnet/minecraft/client/gui/screens/recipebook/RecipeBookComponent; E
	recipesUpdated ()V D
net/minecraft/client/gui/screens/recipebook/SmeltingRecipeBookComponent eyj
	FILTER_NAME h
	getFuelItems ()Ljava/util/Set; b
	getRecipeFilterName ()Lnet/minecraft/network/chat/Component; d
net/minecraft/client/gui/screens/recipebook/SmokingRecipeBookComponent eyk
	FILTER_NAME h
	getFuelItems ()Ljava/util/Set; b
	getRecipeFilterName ()Lnet/minecraft/network/chat/Component; d
net/minecraft/client/gui/screens/reporting/ChatReportScreen eym
	BUTTON_HEIGHT b
	BUTTON_MARGIN c
	BUTTON_MARGIN_HALF k
	BUTTON_WIDTH a
	DESCRIBE_PLACEHOLDER r
	LABEL_HEIGHT l
	LOGGER y
	MORE_COMMENTS_LABEL q
	OBSERVED_WHAT_LABEL o
	REPORT_ERROR_TITLE w
	REPORT_SENDING_TITLE u
	REPORT_SEND_GENERIC_ERROR x
	REPORT_SENT_MESSAGE s
	REPORT_SENT_TITLE v
	SCREEN_HEIGHT n
	SCREEN_WIDTH m
	SELECT_CHAT_MESSAGE t
	SELECT_REASON p
	cannotBuildReason G
	commentBox D
	lastScreen z
	reasonDescriptionLabel C
	reportBuilder F
	reportingContext A
	sendButton E
	clearDraft ()V E
	commentBoxBottom ()I M
	commentBoxTop ()I L
	completeButtonTop ()I N
	contentBottom ()I I
	contentLeft ()I F
	contentRight ()I G
	contentTop ()I H
	displayReportSendError (Lnet/minecraft/network/chat/Component;)V a
	init ()V b
	mouseReleased (DDI)Z b
	onClose ()V aw_
	onReportChanged ()V l
	onReportSendError (Ljava/lang/Throwable;)V a
	onReportSendSuccess ()V C
	removed ()V ax_
	render (Lnet/minecraft/client/gui/GuiGraphics;IIF)V a
	saveDraft ()V D
	selectChatTop ()I J
	selectInfoTop ()I K
	sendReport ()V B
	tick ()V f
net/minecraft/client/gui/screens/reporting/ChatReportScreen$DiscardReportWarningScreen eym$a
	DISCARD n
	DRAFT m
	MESSAGE k
	RETURN l
	TITLE c
	initButtons (I)V a
	onClose ()V aw_
	renderTitle (Lnet/minecraft/client/gui/GuiGraphics;)V c
	shouldCloseOnEsc ()Z av_
net/minecraft/client/gui/screens/reporting/ChatSelectionLogFiller eyn
	canReport c
	contextBuilder b
	eventId e
	lastMessage g
	log a
	missedCount f
	previousLink d
	acceptMessage (Lnet/minecraft/client/gui/screens/reporting/ChatSelectionLogFiller$Output;Lnet/minecraft/client/multiplayer/chat/LoggedChatMessage$Player;)Z a
	fillNextPage (ILnet/minecraft/client/gui/screens/reporting/ChatSelectionLogFiller$Output;)V a
net/minecraft/client/gui/screens/reporting/ChatSelectionLogFiller$Output eyn$a
	acceptDivider (Lnet/minecraft/network/chat/Component;)V a
	acceptMessage (ILnet/minecraft/client/multiplayer/chat/LoggedChatMessage$Player;)V a
net/minecraft/client/gui/screens/reporting/ChatSelectionScreen eyo
	CONTEXT_INFO b
	TITLE a
	chatLogFiller q
	chatSelectionList n
	confirmSelectedButton l
	contextInfoLabel m
	lastScreen c
	onSelected p
	report o
	reportingContext k
	canReport (Lnet/minecraft/client/multiplayer/chat/LoggedChatMessage;)Z a
	extendLog ()V l
	getNarrationMessage ()Lnet/minecraft/network/chat/Component; au_
	init ()V b
	onClose ()V aw_
	onReachedScrollTop ()V B
	render (Lnet/minecraft/client/gui/GuiGraphics;IIF)V a
	updateConfirmSelectedButton ()V C
net/minecraft/client/gui/screens/reporting/ChatSelectionScreen$ChatSelectionList eyo$a
	previousHeading l
	acceptDivider (Lnet/minecraft/network/chat/Component;)V a
	acceptMessage (ILnet/minecraft/client/multiplayer/chat/LoggedChatMessage$Player;)V a
	getFooterTop ()I e
	getMaxVisibleEntries ()I d
	getRowWidth ()I b
	getScrollbarPosition ()I c
	keyPressed (III)Z a
	nextEntry (Lnet/minecraft/client/gui/navigation/ScreenDirection;)Lnet/minecraft/client/gui/components/AbstractSelectionList$Entry; a
	nextEntry (Lnet/minecraft/client/gui/navigation/ScreenDirection;)Lnet/minecraft/client/gui/screens/reporting/ChatSelectionScreen$ChatSelectionList$Entry; b
	renderItem (Lnet/minecraft/client/gui/GuiGraphics;IIFIIIII)V a
	setScrollAmount (D)V a
	setSelected (Lnet/minecraft/client/gui/components/AbstractSelectionList$Entry;)V a
	setSelected (Lnet/minecraft/client/gui/screens/reporting/ChatSelectionScreen$ChatSelectionList$Entry;)V a
	shouldHighlightEntry (Lnet/minecraft/client/gui/screens/reporting/ChatSelectionScreen$ChatSelectionList$Entry;)Z b
	updateHeading (Lnet/minecraft/client/multiplayer/chat/LoggedChatMessage$Player;Z)V a
net/minecraft/client/gui/screens/reporting/ChatSelectionScreen$ChatSelectionList$DividerEntry eyo$a$a
	COLOR c
	text d
	getNarration ()Lnet/minecraft/network/chat/Component; a
	render (Lnet/minecraft/client/gui/GuiGraphics;IIIIIIIZF)V a
net/minecraft/client/gui/screens/reporting/ChatSelectionScreen$ChatSelectionList$Entry eyo$a$b
	canReport ()Z e
	canSelect ()Z d
	getNarration ()Lnet/minecraft/network/chat/Component; a
	isSelected ()Z b
net/minecraft/client/gui/screens/reporting/ChatSelectionScreen$ChatSelectionList$Heading eyo$a$c
	entry b
	sender a
	canCombine (Lnet/minecraft/client/gui/screens/reporting/ChatSelectionScreen$ChatSelectionList$Heading;)Z a
	entry ()Lnet/minecraft/client/gui/screens/reporting/ChatSelectionScreen$ChatSelectionList$Entry; b
	sender ()Ljava/util/UUID; a
net/minecraft/client/gui/screens/reporting/ChatSelectionScreen$ChatSelectionList$MessageEntry eyo$a$d
	CHECKMARK_HEIGHT e
	CHECKMARK_TEXTURE c
	CHECKMARK_WIDTH d
	INDENT_AMOUNT f
	TAG_MARGIN_LEFT g
	canReport n
	chatId h
	hoverText k
	narration j
	playerMessage o
	tagHoverText m
	tagIcon l
	text i
	canReport ()Z e
	canSelect ()Z d
	getMaximumTextWidth ()I f
	getNarration ()Lnet/minecraft/network/chat/Component; a
	getTextIndent ()I g
	isSelected ()Z b
	keyPressed (III)Z a
	mouseClicked (DDI)Z a
	render (Lnet/minecraft/client/gui/GuiGraphics;IIIIIIIZF)V a
	renderSelectedCheckmark (Lnet/minecraft/client/gui/GuiGraphics;III)V a
	renderTag (Lnet/minecraft/client/gui/GuiGraphics;IIIII)V a
	toggleReport ()Z h
net/minecraft/client/gui/screens/reporting/ChatSelectionScreen$ChatSelectionList$MessageHeadingEntry eyo$a$e
	FACE_SIZE c
	canReport f
	heading d
	skin e
	render (Lnet/minecraft/client/gui/GuiGraphics;IIIIIIIZF)V a
net/minecraft/client/gui/screens/reporting/ChatSelectionScreen$ChatSelectionList$PaddingEntry eyo$a$f
	render (Lnet/minecraft/client/gui/GuiGraphics;IIIIIIIZF)V a
net/minecraft/client/gui/screens/reporting/ReportReasonSelectionScreen eyp
	BUTTON_HEIGHT m
	BUTTON_WIDTH l
	CONTENT_WIDTH n
	FOOTER_HEIGHT k
	PADDING o
	READ_INFO_LABEL c
	REASON_DESCRIPTION b
	REASON_TITLE a
	currentlySelectedReason r
	lastScreen p
	onSelectedReason s
	reasonSelectionList q
	buttonTop ()I l
	contentLeft ()I B
	contentRight ()I C
	descriptionBottom ()I E
	descriptionTop ()I D
	init ()V b
	onClose ()V aw_
	render (Lnet/minecraft/client/gui/GuiGraphics;IIF)V a
net/minecraft/client/gui/screens/reporting/ReportReasonSelectionScreen$ReasonSelectionList eyp$a
	findEntry (Lnet/minecraft/client/multiplayer/chat/report/ReportReason;)Lnet/minecraft/client/gui/screens/reporting/ReportReasonSelectionScreen$ReasonSelectionList$Entry; a
	getRowWidth ()I b
	getScrollbarPosition ()I c
	setSelected (Lnet/minecraft/client/gui/components/AbstractSelectionList$Entry;)V a
	setSelected (Lnet/minecraft/client/gui/screens/reporting/ReportReasonSelectionScreen$ReasonSelectionList$Entry;)V a
net/minecraft/client/gui/screens/reporting/ReportReasonSelectionScreen$ReasonSelectionList$Entry eyp$a$a
	reason b
	getNarration ()Lnet/minecraft/network/chat/Component; a
	getReason ()Lnet/minecraft/client/multiplayer/chat/report/ReportReason; b
	mouseClicked (DDI)Z a
	render (Lnet/minecraft/client/gui/GuiGraphics;IIIIIIIZF)V a
net/minecraft/client/gui/screens/social/PlayerEntry eyr
	BG_FILL b
	BG_FILL_REMOVED c
	BLOCKED w
	BLOCKED_OFFLINE z
	CHAT_TOGGLE_ICON_SIZE I
	CHAT_TOGGLE_ICON_X J
	CHAT_TOGGLE_ICON_Y K
	HIDDEN v
	HIDDEN_OFFLINE y
	HIDE_TEXT_TOOLTIP D
	NOT_REPORTABLE_TOOLTIP C
	OFFLINE x
	PADDING H
	PLAYERNAME_COLOR d
	PLAYER_STATUS_COLOR e
	REPORT_BUTTON_LOCATION f
	REPORT_DISABLED_TOOLTIP A
	REPORT_PLAYER_TOOLTIP F
	SHOW_TEXT_TOOLTIP E
	SKIN_SHADE a
	SKIN_SIZE G
	TOOLTIP_DELAY g
	children i
	hasDraftReport q
	hasRecentMessages n
	hideButton r
	id j
	isRemoved m
	minecraft h
	playerName k
	playerReportable p
	reportButton t
	reportingEnabled o
	showButton s
	skinGetter l
	tooltipHoverTime u
	children ()Ljava/util/List; i
	createReportButtonTooltip ()Lnet/minecraft/client/gui/components/Tooltip; h
	getEntryNarationMessage (Lnet/minecraft/network/chat/MutableComponent;)Lnet/minecraft/network/chat/MutableComponent; a
	getPlayerId ()Ljava/util/UUID; e
	getPlayerName ()Ljava/lang/String; d
	getStatusComponent ()Lnet/minecraft/network/chat/Component; j
	hasRecentMessages ()Z g
	isRemoved ()Z f
	narratables ()Ljava/util/List; b
	onHiddenOrShown (ZLnet/minecraft/network/chat/Component;)V a
	render (Lnet/minecraft/client/gui/GuiGraphics;IIIIIIIZF)V a
	setHasRecentMessages (Z)V d
	setRemoved (Z)V c
	updateHideAndShowButton (Z)V e
net/minecraft/client/gui/screens/social/PlayerSocialManager eys
	discoveredNamesToUUID d
	hiddenPlayers b
	minecraft a
	onlineMode e
	pendingBlockListRefresh f
	service c
	addPlayer (Lnet/minecraft/client/multiplayer/PlayerInfo;)V a
	getDiscoveredUUID (Ljava/lang/String;)Ljava/util/UUID; a
	getHiddenPlayers ()Ljava/util/Set; c
	hidePlayer (Ljava/util/UUID;)V a
	isBlocked (Ljava/util/UUID;)Z e
	isHidden (Ljava/util/UUID;)Z d
	removePlayer (Ljava/util/UUID;)V f
	shouldHideMessageFrom (Ljava/util/UUID;)Z c
	showPlayer (Ljava/util/UUID;)V b
	startOnlineMode ()V a
	stopOnlineMode ()V b
net/minecraft/client/gui/screens/social/SocialInteractionsPlayerList eyt
	filter m
	players l
	socialInteractionsScreen a
	addOnlinePlayers (Ljava/util/Collection;Ljava/util/Map;)V a
	addPlayer (Lnet/minecraft/client/multiplayer/PlayerInfo;Lnet/minecraft/client/gui/screens/social/SocialInteractionsScreen$Page;)V a
	collectProfilesFromChatLog (Lnet/minecraft/client/multiplayer/chat/ChatLog;)Ljava/util/Collection; a
	enableScissor (Lnet/minecraft/client/gui/GuiGraphics;)V b
	isEmpty ()Z d
	removePlayer (Ljava/util/UUID;)V a
	setFilter (Ljava/lang/String;)V a
	sortPlayerEntries ()V e
	updateFilteredPlayers ()V v
	updateFiltersAndScroll (Ljava/util/Collection;D)V a
	updatePlayerList (Ljava/util/Collection;DZ)V a
	updatePlayersFromChatLog (Ljava/util/Map;Z)V a
net/minecraft/client/gui/screens/social/SocialInteractionsScreen eyu
	BG_BORDER_SIZE v
	BG_WIDTH w
	BLOCKING_HINT u
	BUTTON_HEIGHT A
	EMPTY_BLOCKED t
	EMPTY_HIDDEN s
	EMPTY_SEARCH r
	IMAGE_WIDTH z
	ITEM_HEIGHT C
	LIST_START c
	MARGIN_Y y
	SEARCH_HEIGHT x
	SEARCH_HINT q
	SEARCH_START b
	SOCIAL_INTERACTIONS_LOCATION a
	TAB_ALL k
	TAB_ALL_SELECTED n
	TAB_BLOCKED m
	TAB_BLOCKED_SELECTED p
	TAB_HIDDEN l
	TAB_HIDDEN_SELECTED o
	allButton H
	blockedButton J
	blockingHintButton K
	hiddenButton I
	initialized N
	lastSearch F
	page G
	playerCount M
	searchBox E
	serverLabel L
	socialInteractionsPlayerList D
	checkSearchStringUpdate (Ljava/lang/String;)V a
	getNarrationMessage ()Lnet/minecraft/network/chat/Component; au_
	init ()V b
	isPauseScreen ()Z az_
	keyPressed (III)Z a
	listEnd ()I B
	marginX ()I C
	onAddPlayer (Lnet/minecraft/client/multiplayer/PlayerInfo;)V a
	onRemovePlayer (Ljava/util/UUID;)V a
	render (Lnet/minecraft/client/gui/GuiGraphics;IIF)V a
	renderBackground (Lnet/minecraft/client/gui/GuiGraphics;)V a
	showPage (Lnet/minecraft/client/gui/screens/social/SocialInteractionsScreen$Page;)V a
	tick ()V f
	updateServerLabel (Lnet/minecraft/client/Minecraft;)V a
	windowHeight ()I l
net/minecraft/client/gui/screens/social/SocialInteractionsScreen$Page eyu$a
	$VALUES d
	ALL a
	BLOCKED c
	HIDDEN b
	$values ()[Lnet/minecraft/client/gui/screens/social/SocialInteractionsScreen$Page; a
net/minecraft/client/gui/screens/telemetry/TelemetryEventWidget eyw
	HEADER_HORIZONTAL_PADDING a
	PROPERTY_TITLE d
	TELEMETRY_OPTIONAL_TRANSLATION_KEY c
	TELEMETRY_REQUIRED_TRANSLATION_KEY b
	content f
	font e
	onScrolledListener g
	addEventType (Lnet/minecraft/client/gui/screens/telemetry/TelemetryEventWidget$ContentBuilder;Lnet/minecraft/client/telemetry/TelemetryEventType;)V a
	addEventTypeProperties (Lnet/minecraft/client/telemetry/TelemetryEventType;Lnet/minecraft/client/gui/screens/telemetry/TelemetryEventWidget$ContentBuilder;)V a
	buildContent (Z)Lnet/minecraft/client/gui/screens/telemetry/TelemetryEventWidget$Content; c
	containerWidth ()I v
	getInnerHeight ()I f
	onOptInChanged (Z)V b
	renderContents (Lnet/minecraft/client/gui/GuiGraphics;IIF)V c
	scrollRate ()D g
	setOnScrolledListener (Ljava/util/function/DoubleConsumer;)V a
	setScrollAmount (D)V a
	updateWidgetNarration (Lnet/minecraft/client/gui/narration/NarrationElementOutput;)V a
net/minecraft/client/gui/screens/telemetry/TelemetryEventWidget$Content eyw$a
	container a
	narration b
	container ()Lnet/minecraft/client/gui/layouts/GridLayout; a
	narration ()Lnet/minecraft/network/chat/Component; b
net/minecraft/client/gui/screens/telemetry/TelemetryEventWidget$ContentBuilder eyw$b
	alignHeader d
	grid b
	helper c
	narration e
	width a
	addHeader (Lnet/minecraft/client/gui/Font;Lnet/minecraft/network/chat/Component;)V b
	addLine (Lnet/minecraft/client/gui/Font;Lnet/minecraft/network/chat/Component;)V a
	addLine (Lnet/minecraft/client/gui/Font;Lnet/minecraft/network/chat/Component;I)V a
	addSpacer (I)V a
	build ()Lnet/minecraft/client/gui/screens/telemetry/TelemetryEventWidget$Content; a
net/minecraft/client/gui/screens/telemetry/TelemetryInfoScreen eyx
	BUTTON_GIVE_FEEDBACK k
	BUTTON_SHOW_DATA l
	DESCRIPTION c
	PADDING a
	TITLE b
	lastScreen m
	options n
	savedScroll p
	telemetryEventWidget o
	createTelemetryButton ()Lnet/minecraft/client/gui/components/AbstractWidget; l
	getNarrationMessage ()Lnet/minecraft/network/chat/Component; au_
	init ()V b
	onClose ()V aw_
	openDataFolder (Lnet/minecraft/client/gui/components/Button;)V c
	openFeedbackLink (Lnet/minecraft/client/gui/components/Button;)V b
	openLastScreen (Lnet/minecraft/client/gui/components/Button;)V a
	render (Lnet/minecraft/client/gui/GuiGraphics;IIF)V a
	twoButtonContainer (Lnet/minecraft/client/gui/components/AbstractWidget;Lnet/minecraft/client/gui/components/AbstractWidget;)Lnet/minecraft/client/gui/layouts/GridLayout; a
net/minecraft/client/gui/screens/worldselection/ConfirmExperimentalFeaturesScreen eyz
	COLUMN_SPACING k
	DETAILS_BUTTON c
	DETAILS_BUTTON_WIDTH l
	MESSAGE b
	TITLE a
	callback m
	enabledPacks n
	layout o
	getNarrationMessage ()Lnet/minecraft/network/chat/Component; au_
	init ()V b
	onClose ()V aw_
	render (Lnet/minecraft/client/gui/GuiGraphics;IIF)V a
	repositionElements ()V aG_
net/minecraft/client/gui/screens/worldselection/ConfirmExperimentalFeaturesScreen$DetailsScreen eyz$a
	packList b
	init ()V b
	onClose ()V aw_
	render (Lnet/minecraft/client/gui/GuiGraphics;IIF)V a
net/minecraft/client/gui/screens/worldselection/ConfirmExperimentalFeaturesScreen$DetailsScreen$PackList eyz$a$a
	getRowWidth ()I b
net/minecraft/client/gui/screens/worldselection/ConfirmExperimentalFeaturesScreen$DetailsScreen$PackListEntry eyz$a$b
	message c
	packId b
	splitMessage d
	getNarration ()Lnet/minecraft/network/chat/Component; a
	render (Lnet/minecraft/client/gui/GuiGraphics;IIIIIIIZF)V a
net/minecraft/client/gui/screens/worldselection/CreateWorldScreen eza
	ALLOW_CHEATS_INFO t
	EXPERIMENTS_LABEL s
	FOOTER_HEIGHT m
	FOOTER_SEPERATOR b
	GAME_MODEL_LABEL q
	GROUP_BOTTOM k
	HEADER_SEPERATOR a
	HORIZONTAL_BUTTON_SPACING v
	LIGHT_DIRT_BACKGROUND c
	LOGGER o
	NAME_LABEL r
	PREPARING_WORLD_DATA u
	TAB_COLUMN_WIDTH l
	TEMP_WORLD_PREFIX p
	TEXT_INDENT n
	VERTICAL_BUTTON_SPACING w
	bottomButtons E
	lastScreen A
	recreated z
	tabManager y
	tabNavigationBar F
	tempDataPackDir C
	tempDataPackRepository D
	uiState x
	addRenderableWidget (Lnet/minecraft/client/gui/components/events/GuiEventListener;)Lnet/minecraft/client/gui/components/events/GuiEventListener; d
	addWidget (Lnet/minecraft/client/gui/components/events/GuiEventListener;)Lnet/minecraft/client/gui/components/events/GuiEventListener; e
	applyNewPackConfig (Lnet/minecraft/server/packs/repository/PackRepository;Lnet/minecraft/world/level/WorldDataConfiguration;Ljava/util/function/Consumer;)V a
	copyBetweenDirs (Ljava/nio/file/Path;Ljava/nio/file/Path;Ljava/nio/file/Path;)V a
	createDefaultLoadConfig (Lnet/minecraft/server/packs/repository/PackRepository;Lnet/minecraft/world/level/WorldDataConfiguration;)Lnet/minecraft/server/WorldLoader$InitConfig; a
	createFromExisting (Lnet/minecraft/client/Minecraft;Lnet/minecraft/client/gui/screens/Screen;Lnet/minecraft/world/level/LevelSettings;Lnet/minecraft/client/gui/screens/worldselection/WorldCreationContext;Ljava/nio/file/Path;)Lnet/minecraft/client/gui/screens/worldselection/CreateWorldScreen; a
	createLevelSettings (Z)Lnet/minecraft/world/level/LevelSettings; c
	createNewWorld (Lnet/minecraft/world/level/storage/PrimaryLevelData$SpecialWorldProperty;Lnet/minecraft/core/LayeredRegistryAccess;Lcom/mojang/serialization/Lifecycle;)V a
	createNewWorldDirectory ()Ljava/util/Optional; F
	createTempDataPackDirFromExistingWorld (Ljava/nio/file/Path;Lnet/minecraft/client/Minecraft;)Ljava/nio/file/Path; a
	getDataPackSelectionSettings (Lnet/minecraft/world/level/WorldDataConfiguration;)Lcom/mojang/datafixers/util/Pair; c
	getTempDataPackDir ()Ljava/nio/file/Path; D
	getUiState ()Lnet/minecraft/client/gui/screens/worldselection/WorldCreationUiState; l
	init ()V b
	keyPressed (III)Z a
	onClose ()V aw_
	onCreate ()V C
	openDataPackSelectionScreen (Lnet/minecraft/world/level/WorldDataConfiguration;)V b
	openExperimentsScreen (Lnet/minecraft/world/level/WorldDataConfiguration;)V a
	openFresh (Lnet/minecraft/client/Minecraft;Lnet/minecraft/client/gui/screens/Screen;)V a
	popScreen ()V B
	queueLoadScreen (Lnet/minecraft/client/Minecraft;Lnet/minecraft/network/chat/Component;)V a
	removeTempDataPackDir ()V E
	render (Lnet/minecraft/client/gui/GuiGraphics;IIF)V a
	renderDirtBackground (Lnet/minecraft/client/gui/GuiGraphics;)V b
	repositionElements ()V aG_
	tick ()V f
	tryApplyNewDataPacks (Lnet/minecraft/server/packs/repository/PackRepository;ZLjava/util/function/Consumer;)V a
net/minecraft/client/gui/screens/worldselection/CreateWorldScreen$DataPackReloadCookie eza$a
	dataConfiguration b
	worldGenSettings a
	dataConfiguration ()Lnet/minecraft/world/level/WorldDataConfiguration; b
	worldGenSettings ()Lnet/minecraft/world/level/levelgen/WorldGenSettings; a
net/minecraft/client/gui/screens/worldselection/CreateWorldScreen$GameTab eza$b
	ALLOW_CHEATS d
	TITLE c
	nameEdit e
	tick ()V b
net/minecraft/client/gui/screens/worldselection/CreateWorldScreen$MoreTab eza$c
	DATA_PACKS_LABEL e
	GAME_RULES_LABEL d
	TITLE c
	openGameRulesScreen ()V c
net/minecraft/client/gui/screens/worldselection/CreateWorldScreen$WorldTab eza$d
	AMPLIFIED_HELP_TEXT d
	BONUS_CHEST g
	GENERATE_STRUCTURES e
	GENERATE_STRUCTURES_INFO f
	SEED_EMPTY_HINT i
	SEED_LABEL h
	TITLE c
	WORLD_TAB_WIDTH j
	customizeTypeButton l
	seedEdit k
	createTypeButtonNarration (Lnet/minecraft/client/gui/components/CycleButton;)Lnet/minecraft/network/chat/MutableComponent; a
	createWorldTypeValueSupplier ()Lnet/minecraft/client/gui/components/CycleButton$ValueListSupplier; d
	openPresetEditor ()V c
	tick ()V b
net/minecraft/client/gui/screens/worldselection/EditGameRulesScreen ezb
	doneButton k
	exitCallback a
	gameRules m
	invalidEntries c
	rules b
	tooltip l
	clearInvalid (Lnet/minecraft/client/gui/screens/worldselection/EditGameRulesScreen$RuleEntry;)V b
	init ()V b
	markInvalid (Lnet/minecraft/client/gui/screens/worldselection/EditGameRulesScreen$RuleEntry;)V a
	onClose ()V aw_
	render (Lnet/minecraft/client/gui/GuiGraphics;IIF)V a
	updateDoneButton ()V l
net/minecraft/client/gui/screens/worldselection/EditGameRulesScreen$BooleanRuleEntry ezb$a
	checkbox d
	render (Lnet/minecraft/client/gui/GuiGraphics;IIIIIIIZF)V a
net/minecraft/client/gui/screens/worldselection/EditGameRulesScreen$CategoryRuleEntry ezb$b
	label b
	children ()Ljava/util/List; i
	narratables ()Ljava/util/List; b
	render (Lnet/minecraft/client/gui/GuiGraphics;IIIIIIIZF)V a
net/minecraft/client/gui/screens/worldselection/EditGameRulesScreen$EntryFactory ezb$c
net/minecraft/client/gui/screens/worldselection/EditGameRulesScreen$GameRuleEntry ezb$d
	children b
	label a
	children ()Ljava/util/List; i
	narratables ()Ljava/util/List; b
	renderLabel (Lnet/minecraft/client/gui/GuiGraphics;II)V a
net/minecraft/client/gui/screens/worldselection/EditGameRulesScreen$IntegerRuleEntry ezb$e
	input d
	render (Lnet/minecraft/client/gui/GuiGraphics;IIIIIIIZF)V a
net/minecraft/client/gui/screens/worldselection/EditGameRulesScreen$RuleEntry ezb$f
	tooltip a
net/minecraft/client/gui/screens/worldselection/EditGameRulesScreen$RuleList ezb$g
	render (Lnet/minecraft/client/gui/GuiGraphics;IIF)V a
net/minecraft/client/gui/screens/worldselection/EditWorldScreen ezc
	LOGGER a
	NAME_LABEL b
	callback k
	levelAccess m
	nameEdit l
	renameButton c
	init ()V b
	makeBackupAndShowToast (Lnet/minecraft/world/level/storage/LevelStorageSource$LevelStorageAccess;)Z a
	makeBackupAndShowToast (Lnet/minecraft/world/level/storage/LevelStorageSource;Ljava/lang/String;)V a
	onClose ()V aw_
	onRename ()V l
	render (Lnet/minecraft/client/gui/GuiGraphics;IIF)V a
	resize (Lnet/minecraft/client/Minecraft;II)V a
	tick ()V f
net/minecraft/client/gui/screens/worldselection/ExperimentsScreen ezd
	MAIN_CONTENT_WIDTH a
	layout b
	output l
	packRepository k
	packs m
	parent c
	getHumanReadableTitle (Lnet/minecraft/server/packs/repository/Pack;)Lnet/minecraft/network/chat/Component; a
	init ()V b
	onClose ()V aw_
	onDone ()V l
	render (Lnet/minecraft/client/gui/GuiGraphics;IIF)V a
	repositionElements ()V aG_
net/minecraft/client/gui/screens/worldselection/OptimizeWorldScreen eze
	DIMENSION_COLORS b
	LOGGER a
	callback c
	upgrader k
	create (Lnet/minecraft/client/Minecraft;Lit/unimi/dsi/fastutil/booleans/BooleanConsumer;Lcom/mojang/datafixers/DataFixer;Lnet/minecraft/world/level/storage/LevelStorageSource$LevelStorageAccess;Z)Lnet/minecraft/client/gui/screens/worldselection/OptimizeWorldScreen; a
	init ()V b
	onClose ()V aw_
	removed ()V ax_
	render (Lnet/minecraft/client/gui/GuiGraphics;IIF)V a
	tick ()V f
net/minecraft/client/gui/screens/worldselection/PresetEditor ezf
	EDITORS a
	fixedBiomeConfigurator (Lnet/minecraft/core/Holder;)Lnet/minecraft/client/gui/screens/worldselection/WorldCreationContext$DimensionsUpdater; a
	flatWorldConfigurator (Lnet/minecraft/world/level/levelgen/flat/FlatLevelGeneratorSettings;)Lnet/minecraft/client/gui/screens/worldselection/WorldCreationContext$DimensionsUpdater; a
net/minecraft/client/gui/screens/worldselection/SelectWorldScreen ezg
	LOGGER k
	TEST_OPTIONS a
	copyButton o
	deleteButton l
	lastScreen b
	list p
	renameButton n
	searchBox c
	selectButton m
	charTyped (CI)Z a
	init ()V b
	keyPressed (III)Z a
	onClose ()V aw_
	removed ()V ax_
	render (Lnet/minecraft/client/gui/GuiGraphics;IIF)V a
	tick ()V f
	updateButtonStatus (ZZ)V a
net/minecraft/client/gui/screens/worldselection/SwitchGrid ezh
	DEFAULT_SWITCH_BUTTON_WIDTH a
	switches b
	builder (I)Lnet/minecraft/client/gui/screens/worldselection/SwitchGrid$Builder; a
	refreshStates ()V a
net/minecraft/client/gui/screens/worldselection/SwitchGrid$Builder ezh$a
	infoUnderneath f
	paddingLeft c
	rowCount e
	rowSpacing d
	switchBuilders b
	width a
	addSwitch (Lnet/minecraft/network/chat/Component;Ljava/util/function/BooleanSupplier;Ljava/util/function/Consumer;)Lnet/minecraft/client/gui/screens/worldselection/SwitchGrid$SwitchBuilder; a
	build (Ljava/util/function/Consumer;)Lnet/minecraft/client/gui/screens/worldselection/SwitchGrid; a
	increaseRow ()V a
	withInfoUnderneath (IZ)Lnet/minecraft/client/gui/screens/worldselection/SwitchGrid$Builder; a
	withPaddingLeft (I)Lnet/minecraft/client/gui/screens/worldselection/SwitchGrid$Builder; a
	withRowSpacing (I)Lnet/minecraft/client/gui/screens/worldselection/SwitchGrid$Builder; b
net/minecraft/client/gui/screens/worldselection/SwitchGrid$InfoUnderneathSettings ezh$b
	alwaysMaxHeight b
	maxInfoRows a
	alwaysMaxHeight ()Z b
	maxInfoRows ()I a
net/minecraft/client/gui/screens/worldselection/SwitchGrid$LabeledSwitch ezh$c
	button a
	isActiveCondition c
	stateSupplier b
	button ()Lnet/minecraft/client/gui/components/CycleButton; b
	isActiveCondition ()Ljava/util/function/BooleanSupplier; d
	refreshState ()V a
	stateSupplier ()Ljava/util/function/BooleanSupplier; c
net/minecraft/client/gui/screens/worldselection/SwitchGrid$SwitchBuilder ezh$d
	buttonWidth f
	info d
	isActiveCondition e
	label a
	onClicked c
	stateSupplier b
	build (Lnet/minecraft/client/gui/screens/worldselection/SwitchGrid$Builder;Lnet/minecraft/client/gui/layouts/GridLayout;I)Lnet/minecraft/client/gui/screens/worldselection/SwitchGrid$LabeledSwitch; a
	withInfo (Lnet/minecraft/network/chat/Component;)Lnet/minecraft/client/gui/screens/worldselection/SwitchGrid$SwitchBuilder; a
	withIsActiveCondition (Ljava/util/function/BooleanSupplier;)Lnet/minecraft/client/gui/screens/worldselection/SwitchGrid$SwitchBuilder; a
net/minecraft/client/gui/screens/worldselection/WorldCreationContext ezi
	dataConfiguration f
	dataPackResources e
	datapackDimensions b
	options a
	selectedDimensions c
	worldgenRegistries d
	dataConfiguration ()Lnet/minecraft/world/level/WorldDataConfiguration; g
	dataPackResources ()Lnet/minecraft/server/ReloadableServerResources; f
	datapackDimensions ()Lnet/minecraft/core/Registry; c
	options ()Lnet/minecraft/world/level/levelgen/WorldOptions; b
	selectedDimensions ()Lnet/minecraft/world/level/levelgen/WorldDimensions; d
	withDimensions (Lnet/minecraft/client/gui/screens/worldselection/WorldCreationContext$DimensionsUpdater;)Lnet/minecraft/client/gui/screens/worldselection/WorldCreationContext; a
	withOptions (Lnet/minecraft/client/gui/screens/worldselection/WorldCreationContext$OptionsModifier;)Lnet/minecraft/client/gui/screens/worldselection/WorldCreationContext; a
	withSettings (Lnet/minecraft/world/level/levelgen/WorldOptions;Lnet/minecraft/world/level/levelgen/WorldDimensions;)Lnet/minecraft/client/gui/screens/worldselection/WorldCreationContext; a
	worldgenLoadContext ()Lnet/minecraft/core/RegistryAccess$Frozen; a
	worldgenRegistries ()Lnet/minecraft/core/LayeredRegistryAccess; e
net/minecraft/client/gui/screens/worldselection/WorldCreationContext$DimensionsUpdater ezi$a
net/minecraft/client/gui/screens/worldselection/WorldCreationContext$OptionsModifier ezi$b
net/minecraft/client/gui/screens/worldselection/WorldCreationUiState ezj
	DEFAULT_WORLD_NAME a
	allowCheats f
	altPresetList o
	bonusChest i
	difficulty e
	gameMode d
	gameRules p
	generateStructures h
	listeners b
	name c
	normalPresetList n
	savesFolder j
	seed g
	settings l
	targetFolder k
	worldType m
	addListener (Ljava/util/function/Consumer;)V a
	findPreset (Lnet/minecraft/client/gui/screens/worldselection/WorldCreationContext;Ljava/util/Optional;)Ljava/util/Optional; a
	findResultFolder (Ljava/lang/String;)Ljava/lang/String; c
	getAltPresetList ()Ljava/util/List; p
	getDifficulty ()Lnet/minecraft/world/Difficulty; e
	getGameMode ()Lnet/minecraft/client/gui/screens/worldselection/WorldCreationUiState$SelectedGameMode; d
	getGameRules ()Lnet/minecraft/world/level/GameRules; q
	getName ()Ljava/lang/String; b
	getNonEmptyList (Lnet/minecraft/core/Registry;Lnet/minecraft/tags/TagKey;)Ljava/util/Optional; a
	getNormalPresetList ()Ljava/util/List; o
	getPresetEditor ()Lnet/minecraft/client/gui/screens/worldselection/PresetEditor; n
	getSeed ()Ljava/lang/String; h
	getSettings ()Lnet/minecraft/client/gui/screens/worldselection/WorldCreationContext; k
	getTargetFolder ()Ljava/lang/String; c
	getWorldType ()Lnet/minecraft/client/gui/screens/worldselection/WorldCreationUiState$WorldTypeEntry; m
	isAllowCheats ()Z g
	isBonusChest ()Z j
	isDebug ()Z l
	isGenerateStructures ()Z i
	isHardcore ()Z f
	onChanged ()V a
	setAllowCheats (Z)V a
	setBonusChest (Z)V c
	setDifficulty (Lnet/minecraft/world/Difficulty;)V a
	setGameMode (Lnet/minecraft/client/gui/screens/worldselection/WorldCreationUiState$SelectedGameMode;)V a
	setGameRules (Lnet/minecraft/world/level/GameRules;)V a
	setGenerateStructures (Z)V b
	setName (Ljava/lang/String;)V a
	setSeed (Ljava/lang/String;)V b
	setSettings (Lnet/minecraft/client/gui/screens/worldselection/WorldCreationContext;)V a
	setWorldType (Lnet/minecraft/client/gui/screens/worldselection/WorldCreationUiState$WorldTypeEntry;)V a
	tryUpdateDataConfiguration (Lnet/minecraft/world/level/WorldDataConfiguration;)Z a
	updateDimensions (Lnet/minecraft/client/gui/screens/worldselection/WorldCreationContext$DimensionsUpdater;)V a
	updatePresetLists ()V r
net/minecraft/client/gui/screens/worldselection/WorldCreationUiState$SelectedGameMode ezj$a
	$VALUES h
	CREATIVE c
	DEBUG d
	HARDCORE b
	SURVIVAL a
	displayName f
	gameType e
	info g
	$values ()[Lnet/minecraft/client/gui/screens/worldselection/WorldCreationUiState$SelectedGameMode; b
	getInfo ()Lnet/minecraft/network/chat/Component; a
net/minecraft/client/gui/screens/worldselection/WorldCreationUiState$WorldTypeEntry ezj$b
	CUSTOM_WORLD_DESCRIPTION b
	preset a
	describePreset ()Lnet/minecraft/network/chat/Component; a
	isAmplified ()Z b
	preset ()Lnet/minecraft/core/Holder; c
net/minecraft/client/gui/screens/worldselection/WorldOpenFlows ezk
	LOGGER a
	levelSource c
	minecraft b
	askForBackup (Lnet/minecraft/client/gui/screens/Screen;Ljava/lang/String;ZLjava/lang/Runnable;)V a
	confirmWorldCreation (Lnet/minecraft/client/Minecraft;Lnet/minecraft/client/gui/screens/worldselection/CreateWorldScreen;Lcom/mojang/serialization/Lifecycle;Ljava/lang/Runnable;Z)V a
	createFreshLevel (Ljava/lang/String;Lnet/minecraft/world/level/LevelSettings;Lnet/minecraft/world/level/levelgen/WorldOptions;Ljava/util/function/Function;)V a
	createLevelFromExistingSettings (Lnet/minecraft/world/level/storage/LevelStorageSource$LevelStorageAccess;Lnet/minecraft/server/ReloadableServerResources;Lnet/minecraft/core/LayeredRegistryAccess;Lnet/minecraft/world/level/storage/WorldData;)V a
	createWorldAccess (Ljava/lang/String;)Lnet/minecraft/world/level/storage/LevelStorageSource$LevelStorageAccess; a
	doLoadLevel (Lnet/minecraft/client/gui/screens/Screen;Ljava/lang/String;ZZ)V a
	getPackConfigFromLevelData (Lnet/minecraft/world/level/storage/LevelStorageSource$LevelStorageAccess;ZLnet/minecraft/server/packs/repository/PackRepository;)Lnet/minecraft/server/WorldLoader$PackConfig; b
	loadLevel (Lnet/minecraft/client/gui/screens/Screen;Ljava/lang/String;)V a
	loadWorldDataBlocking (Lnet/minecraft/server/WorldLoader$PackConfig;Lnet/minecraft/server/WorldLoader$WorldDataSupplier;Lnet/minecraft/server/WorldLoader$ResultFactory;)Ljava/lang/Object; a
	loadWorldStem (Lnet/minecraft/world/level/storage/LevelStorageSource$LevelStorageAccess;Z)Lnet/minecraft/server/WorldStem; a
	loadWorldStem (Lnet/minecraft/world/level/storage/LevelStorageSource$LevelStorageAccess;ZLnet/minecraft/server/packs/repository/PackRepository;)Lnet/minecraft/server/WorldStem; a
	promptBundledPackLoadFailure ()Ljava/util/concurrent/CompletableFuture; a
	recreateWorldData (Lnet/minecraft/world/level/storage/LevelStorageSource$LevelStorageAccess;)Lcom/mojang/datafixers/util/Pair; a
	safeCloseAccess (Lnet/minecraft/world/level/storage/LevelStorageSource$LevelStorageAccess;Ljava/lang/String;)V a
net/minecraft/client/gui/screens/worldselection/WorldSelectionList ezl
	DATE_FORMAT l
	FROM_NEWER_TOOLTIP_1 o
	FROM_NEWER_TOOLTIP_2 p
	ICON_MISSING m
	ICON_OVERLAY_LOCATION n
	LOGGER a
	SNAPSHOT_TOOLTIP_1 q
	SNAPSHOT_TOOLTIP_2 r
	WORLD_LOCKED_TOOLTIP s
	WORLD_REQUIRES_CONVERSION t
	currentlyDisplayedLevels w
	filter x
	loadingHeader y
	pendingLevels v
	screen u
	clearEntries ()V j
	fillLevels (Ljava/lang/String;Ljava/util/List;)V a
	fillLoadingLevels ()V y
	filterAccepts (Ljava/lang/String;Lnet/minecraft/world/level/storage/LevelSummary;)Z a
	getRowWidth ()I b
	getScreen ()Lnet/minecraft/client/gui/screens/worldselection/SelectWorldScreen; e
	getScrollbarPosition ()I c
	getSelectedOpt ()Ljava/util/Optional; d
	handleLevelLoadFailure (Lnet/minecraft/network/chat/Component;)V a
	handleNewLevels (Ljava/util/List;)V a
	keyPressed (III)Z a
	loadLevels ()Ljava/util/concurrent/CompletableFuture; x
	notifyListUpdated ()V z
	pollLevelsIgnoreErrors ()Ljava/util/List; v
	reloadWorldList ()V w
	render (Lnet/minecraft/client/gui/GuiGraphics;IIF)V a
	setSelected (Lnet/minecraft/client/gui/components/AbstractSelectionList$Entry;)V a
	setSelected (Lnet/minecraft/client/gui/screens/worldselection/WorldSelectionList$Entry;)V a
	updateFilter (Ljava/lang/String;)V a
	updateNarration (Lnet/minecraft/client/gui/narration/NarrationElementOutput;)V b
net/minecraft/client/gui/screens/worldselection/WorldSelectionList$Entry ezl$a
	isSelectable ()Z b
net/minecraft/client/gui/screens/worldselection/WorldSelectionList$LoadingHeader ezl$b
	LOADING_LABEL a
	minecraft b
	getNarration ()Lnet/minecraft/network/chat/Component; a
	isSelectable ()Z b
	render (Lnet/minecraft/client/gui/GuiGraphics;IIIIIIIZF)V a
net/minecraft/client/gui/screens/worldselection/WorldSelectionList$WorldListEntry ezl$c
	ICON_HEIGHT c
	ICON_OVERLAY_X_ERROR g
	ICON_OVERLAY_X_JOIN d
	ICON_OVERLAY_X_JOIN_WITH_NOTIFY e
	ICON_OVERLAY_X_WARNING f
	ICON_OVERLAY_Y_SELECTED i
	ICON_OVERLAY_Y_UNSELECTED h
	ICON_WIDTH b
	icon m
	iconFile n
	lastClickTime o
	minecraft j
	screen k
	summary l
	deleteWorld ()V e
	doDeleteWorld ()V f
	editWorld ()V g
	getLevelName ()Ljava/lang/String; i
	getNarration ()Lnet/minecraft/network/chat/Component; a
	isSelectable ()Z b
	joinWorld ()V d
	loadIcon ()V m
	loadWorld ()V k
	mouseClicked (DDI)Z a
	queueLoadScreen ()V l
	recreateWorld ()V h
	render (Lnet/minecraft/client/gui/GuiGraphics;IIIIIIIZF)V a
	validateIconFile ()V j
net/minecraft/client/gui/spectator/PlayerMenuItem ezn
	location b
	name c
	profile a
	getName ()Lnet/minecraft/network/chat/Component; aI_
	isEnabled ()Z aJ_
	renderIcon (Lnet/minecraft/client/gui/GuiGraphics;FI)V a
	selectItem (Lnet/minecraft/client/gui/spectator/SpectatorMenu;)V a
net/minecraft/client/gui/spectator/RootSpectatorMenuCategory ezo
	PROMPT_TEXT a
	items b
	getItems ()Ljava/util/List; a
	getPrompt ()Lnet/minecraft/network/chat/Component; b
net/minecraft/client/gui/spectator/SpectatorMenu ezp
	CLOSE_ITEM b
	CLOSE_MENU_TEXT g
	EMPTY_SLOT a
	MAX_PER_PAGE f
	NEXT_PAGE_TEXT i
	PREVIOUS_PAGE_TEXT h
	SCROLL_LEFT c
	SCROLL_RIGHT_DISABLED e
	SCROLL_RIGHT_ENABLED d
	category k
	listener j
	page m
	selectedSlot l
	exit ()V d
	getCurrentPage ()Lnet/minecraft/client/gui/spectator/categories/SpectatorPage; f
	getItem (I)Lnet/minecraft/client/gui/spectator/SpectatorMenuItem; a
	getItems ()Ljava/util/List; a
	getSelectedCategory ()Lnet/minecraft/client/gui/spectator/SpectatorMenuCategory; c
	getSelectedItem ()Lnet/minecraft/client/gui/spectator/SpectatorMenuItem; b
	getSelectedSlot ()I e
	selectCategory (Lnet/minecraft/client/gui/spectator/SpectatorMenuCategory;)V a
	selectSlot (I)V b
net/minecraft/client/gui/spectator/SpectatorMenu$CloseSpectatorItem ezp$a
	getName ()Lnet/minecraft/network/chat/Component; aI_
	isEnabled ()Z aJ_
	renderIcon (Lnet/minecraft/client/gui/GuiGraphics;FI)V a
	selectItem (Lnet/minecraft/client/gui/spectator/SpectatorMenu;)V a
net/minecraft/client/gui/spectator/SpectatorMenu$ScrollMenuItem ezp$b
	direction a
	enabled b
	getName ()Lnet/minecraft/network/chat/Component; aI_
	isEnabled ()Z aJ_
	renderIcon (Lnet/minecraft/client/gui/GuiGraphics;FI)V a
	selectItem (Lnet/minecraft/client/gui/spectator/SpectatorMenu;)V a
net/minecraft/client/gui/spectator/SpectatorMenuCategory ezq
	getItems ()Ljava/util/List; a
	getPrompt ()Lnet/minecraft/network/chat/Component; b
net/minecraft/client/gui/spectator/SpectatorMenuItem ezr
	getName ()Lnet/minecraft/network/chat/Component; aI_
	isEnabled ()Z aJ_
	renderIcon (Lnet/minecraft/client/gui/GuiGraphics;FI)V a
	selectItem (Lnet/minecraft/client/gui/spectator/SpectatorMenu;)V a
net/minecraft/client/gui/spectator/SpectatorMenuListener ezs
	onSpectatorMenuClosed (Lnet/minecraft/client/gui/spectator/SpectatorMenu;)V a
net/minecraft/client/gui/spectator/categories/SpectatorPage ezt
	NO_SELECTION a
	items b
	selection c
	getItem (I)Lnet/minecraft/client/gui/spectator/SpectatorMenuItem; a
	getSelectedSlot ()I a
net/minecraft/client/gui/spectator/categories/TeleportToPlayerMenuCategory ezu
	PROFILE_ORDER a
	TELEPORT_PROMPT c
	TELEPORT_TEXT b
	items d
	getItems ()Ljava/util/List; a
	getName ()Lnet/minecraft/network/chat/Component; aI_
	getPrompt ()Lnet/minecraft/network/chat/Component; b
	isEnabled ()Z aJ_
	renderIcon (Lnet/minecraft/client/gui/GuiGraphics;FI)V a
	selectItem (Lnet/minecraft/client/gui/spectator/SpectatorMenu;)V a
net/minecraft/client/gui/spectator/categories/TeleportToTeamMenuCategory ezv
	TELEPORT_PROMPT b
	TELEPORT_TEXT a
	items c
	createTeamEntries (Lnet/minecraft/client/Minecraft;Lnet/minecraft/world/scores/Scoreboard;)Ljava/util/List; a
	getItems ()Ljava/util/List; a
	getName ()Lnet/minecraft/network/chat/Component; aI_
	getPrompt ()Lnet/minecraft/network/chat/Component; b
	isEnabled ()Z aJ_
	renderIcon (Lnet/minecraft/client/gui/GuiGraphics;FI)V a
	selectItem (Lnet/minecraft/client/gui/spectator/SpectatorMenu;)V a
net/minecraft/client/gui/spectator/categories/TeleportToTeamMenuCategory$TeamSelectionItem ezv$a
	iconSkin b
	players c
	team a
	create (Lnet/minecraft/client/Minecraft;Lnet/minecraft/world/scores/PlayerTeam;)Ljava/util/Optional; a
	getName ()Lnet/minecraft/network/chat/Component; aI_
	isEnabled ()Z aJ_
	renderIcon (Lnet/minecraft/client/gui/GuiGraphics;FI)V a
	selectItem (Lnet/minecraft/client/gui/spectator/SpectatorMenu;)V a
net/minecraft/client/main/GameConfig ezy
	display b
	game d
	location c
	quickPlay e
	user a
net/minecraft/client/main/GameConfig$FolderData ezy$a
	assetDirectory c
	assetIndex d
	gameDirectory a
	resourcePackDirectory b
	getExternalAssetSource ()Ljava/nio/file/Path; a
net/minecraft/client/main/GameConfig$GameData ezy$b
	demo a
	disableChat e
	disableMultiplayer d
	launchVersion b
	versionType c
net/minecraft/client/main/GameConfig$QuickPlayData ezy$c
	multiplayer c
	path a
	realms d
	singleplayer b
	isEnabled ()Z a
	multiplayer ()Ljava/lang/String; d
	path ()Ljava/lang/String; b
	realms ()Ljava/lang/String; e
	singleplayer ()Ljava/lang/String; c
net/minecraft/client/main/GameConfig$UserData ezy$d
	profileProperties c
	proxy d
	user a
	userProperties b
net/minecraft/client/main/SilentInitException ezz
net/minecraft/client/model/AbstractZombieModel fab
	isAggressive (Lnet/minecraft/world/entity/monster/Monster;)Z a
	setupAnim (Lnet/minecraft/world/entity/Entity;FFFFF)V a
	setupAnim (Lnet/minecraft/world/entity/LivingEntity;FFFFF)V a
	setupAnim (Lnet/minecraft/world/entity/monster/Monster;FFFFF)V a
net/minecraft/client/model/AgeableHierarchicalModel fac
	bodyYOffset b
	youngScaleFactor a
	renderToBuffer (Lcom/mojang/blaze3d/vertex/PoseStack;Lcom/mojang/blaze3d/vertex/VertexConsumer;IIFFFF)V a
net/minecraft/client/model/AgeableListModel fad
	babyBodyScale h
	babyHeadScale g
	babyYHeadOffset b
	babyZHeadOffset f
	bodyYOffset i
	scaleHead a
	bodyParts ()Ljava/lang/Iterable; b
	headParts ()Ljava/lang/Iterable; a
	renderToBuffer (Lcom/mojang/blaze3d/vertex/PoseStack;Lcom/mojang/blaze3d/vertex/VertexConsumer;IIFFFF)V a
net/minecraft/client/model/AllayModel fae
	FLYING_ANIMATION_X_ROT k
	MAX_HAND_HOLDING_ITEM_X_ROT_RAD l
	MIN_HAND_HOLDING_ITEM_X_ROT_RAD m
	body f
	head b
	left_arm h
	left_wing j
	right_arm g
	right_wing i
	root a
	createBodyLayer ()Lnet/minecraft/client/model/geom/builders/LayerDefinition; b
	root ()Lnet/minecraft/client/model/geom/ModelPart; a
	setupAnim (Lnet/minecraft/world/entity/Entity;FFFFF)V a
	setupAnim (Lnet/minecraft/world/entity/animal/allay/Allay;FFFFF)V a
	translateToHand (Lnet/minecraft/world/entity/HumanoidArm;Lcom/mojang/blaze3d/vertex/PoseStack;)V a
net/minecraft/client/model/AnimationUtils faf
	animateCrossbowCharge (Lnet/minecraft/client/model/geom/ModelPart;Lnet/minecraft/client/model/geom/ModelPart;Lnet/minecraft/world/entity/LivingEntity;Z)V a
	animateCrossbowHold (Lnet/minecraft/client/model/geom/ModelPart;Lnet/minecraft/client/model/geom/ModelPart;Lnet/minecraft/client/model/geom/ModelPart;Z)V a
	animateZombieArms (Lnet/minecraft/client/model/geom/ModelPart;Lnet/minecraft/client/model/geom/ModelPart;ZFF)V a
	bobArms (Lnet/minecraft/client/model/geom/ModelPart;Lnet/minecraft/client/model/geom/ModelPart;F)V a
	bobModelPart (Lnet/minecraft/client/model/geom/ModelPart;FF)V a
	swingWeaponDown (Lnet/minecraft/client/model/geom/ModelPart;Lnet/minecraft/client/model/geom/ModelPart;Lnet/minecraft/world/entity/Mob;FF)V a
net/minecraft/client/model/ArmedModel fag
	translateToHand (Lnet/minecraft/world/entity/HumanoidArm;Lcom/mojang/blaze3d/vertex/PoseStack;)V a
net/minecraft/client/model/ArmorStandArmorModel fah
	createBodyLayer (Lnet/minecraft/client/model/geom/builders/CubeDeformation;)Lnet/minecraft/client/model/geom/builders/LayerDefinition; a
	setupAnim (Lnet/minecraft/world/entity/Entity;FFFFF)V a
	setupAnim (Lnet/minecraft/world/entity/LivingEntity;FFFFF)V a
	setupAnim (Lnet/minecraft/world/entity/decoration/ArmorStand;FFFFF)V a
net/minecraft/client/model/ArmorStandModel fai
	BASE_PLATE x
	LEFT_BODY_STICK b
	RIGHT_BODY_STICK a
	SHOULDER_STICK w
	basePlate B
	leftBodyStick z
	rightBodyStick y
	shoulderStick A
	bodyParts ()Ljava/lang/Iterable; b
	createBodyLayer ()Lnet/minecraft/client/model/geom/builders/LayerDefinition; c
	prepareMobModel (Lnet/minecraft/world/entity/Entity;FFF)V a
	prepareMobModel (Lnet/minecraft/world/entity/LivingEntity;FFF)V a
	prepareMobModel (Lnet/minecraft/world/entity/decoration/ArmorStand;FFF)V a
	setupAnim (Lnet/minecraft/world/entity/Entity;FFFFF)V a
	setupAnim (Lnet/minecraft/world/entity/LivingEntity;FFFFF)V a
	setupAnim (Lnet/minecraft/world/entity/decoration/ArmorStand;FFFFF)V a
	translateToHand (Lnet/minecraft/world/entity/HumanoidArm;Lcom/mojang/blaze3d/vertex/PoseStack;)V a
net/minecraft/client/model/AxolotlModel faj
	SWIMMING_LEG_XROT a
	body j
	head k
	leftFrontLeg h
	leftGills m
	leftHindLeg f
	rightFrontLeg i
	rightGills n
	rightHindLeg g
	tail b
	topGills l
	applyMirrorLegRotations ()V d
	bodyParts ()Ljava/lang/Iterable; b
	createBodyLayer ()Lnet/minecraft/client/model/geom/builders/LayerDefinition; c
	getRotationVector (Lnet/minecraft/client/model/geom/ModelPart;)Lorg/joml/Vector3f; a
	headParts ()Ljava/lang/Iterable; a
	lerpPart (Lnet/minecraft/client/model/geom/ModelPart;FFF)V a
	lerpTo (FF)F a
	lerpTo (FFF)F a
	saveAnimationValues (Lnet/minecraft/world/entity/animal/axolotl/Axolotl;)V a
	setRotationFromVector (Lnet/minecraft/client/model/geom/ModelPart;Lorg/joml/Vector3f;)V a
	setupAnim (Lnet/minecraft/world/entity/Entity;FFFFF)V a
	setupAnim (Lnet/minecraft/world/entity/animal/axolotl/Axolotl;FFFFF)V a
	setupGroundCrawlingAnimation (FF)V c
	setupInitialAnimationValues (Lnet/minecraft/world/entity/animal/axolotl/Axolotl;FF)V a
	setupLayStillOnGroundAnimation (FF)V b
	setupPlayDeadAnimation (F)V b
	setupSwimmingAnimation (FF)V d
	setupWaterHoveringAnimation (F)V a
net/minecraft/client/model/BatModel fak
	body f
	head b
	leftWing h
	leftWingTip j
	rightWing g
	rightWingTip i
	root a
	createBodyLayer ()Lnet/minecraft/client/model/geom/builders/LayerDefinition; b
	root ()Lnet/minecraft/client/model/geom/ModelPart; a
	setupAnim (Lnet/minecraft/world/entity/Entity;FFFFF)V a
	setupAnim (Lnet/minecraft/world/entity/ambient/Bat;FFFFF)V a
net/minecraft/client/model/BeeModel fal
	BACK_LEGS k
	BEE_Y_BASE a
	BONE b
	FRONT_LEGS i
	LEFT_ANTENNA g
	MIDDLE_LEGS j
	RIGHT_ANTENNA h
	STINGER f
	backLeg q
	bone l
	frontLeg o
	leftAntenna s
	leftWing n
	midLeg p
	rightAntenna t
	rightWing m
	rollAmount u
	stinger r
	bodyParts ()Ljava/lang/Iterable; b
	createBodyLayer ()Lnet/minecraft/client/model/geom/builders/LayerDefinition; c
	headParts ()Ljava/lang/Iterable; a
	prepareMobModel (Lnet/minecraft/world/entity/Entity;FFF)V a
	prepareMobModel (Lnet/minecraft/world/entity/animal/Bee;FFF)V a
	setupAnim (Lnet/minecraft/world/entity/Entity;FFFFF)V a
	setupAnim (Lnet/minecraft/world/entity/animal/Bee;FFFFF)V a
net/minecraft/client/model/BlazeModel fam
	head f
	root a
	upperBodyParts b
	createBodyLayer ()Lnet/minecraft/client/model/geom/builders/LayerDefinition; b
	getPartName (I)Ljava/lang/String; a
	root ()Lnet/minecraft/client/model/geom/ModelPart; a
	setupAnim (Lnet/minecraft/world/entity/Entity;FFFFF)V a
net/minecraft/client/model/BoatModel fan
	BACK h
	BOTTOM g
	FRONT i
	LEFT k
	LEFT_PADDLE a
	RIGHT j
	RIGHT_PADDLE b
	WATER_PATCH f
	leftPaddle l
	parts o
	rightPaddle m
	waterPatch n
	animatePaddle (Lnet/minecraft/world/entity/vehicle/Boat;ILnet/minecraft/client/model/geom/ModelPart;F)V a
	createBodyModel ()Lnet/minecraft/client/model/geom/builders/LayerDefinition; a
	createChildren (Lnet/minecraft/client/model/geom/builders/PartDefinition;)V a
	createPartsBuilder (Lnet/minecraft/client/model/geom/ModelPart;)Lcom/google/common/collect/ImmutableList$Builder; a
	parts ()Lcom/google/common/collect/ImmutableList; b
	parts ()Ljava/lang/Iterable; d
	setupAnim (Lnet/minecraft/world/entity/Entity;FFFFF)V a
	setupAnim (Lnet/minecraft/world/entity/vehicle/Boat;FFFFF)V a
	waterPatch ()Lnet/minecraft/client/model/geom/ModelPart; c
net/minecraft/client/model/BookModel fao
	FLIP_PAGE_1 c
	FLIP_PAGE_2 d
	LEFT_PAGES a
	RIGHT_PAGES b
	flipPage1 j
	flipPage2 k
	leftLid f
	leftPages h
	rightLid g
	rightPages i
	root e
	createBodyLayer ()Lnet/minecraft/client/model/geom/builders/LayerDefinition; a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lcom/mojang/blaze3d/vertex/VertexConsumer;IIFFFF)V b
	renderToBuffer (Lcom/mojang/blaze3d/vertex/PoseStack;Lcom/mojang/blaze3d/vertex/VertexConsumer;IIFFFF)V a
	setupAnim (FFFF)V a
net/minecraft/client/model/CamelModel fap
	BABY_SCALE f
	BABY_Y_OFFSET g
	BRIDLE i
	MAX_WALK_ANIMATION_SPEED a
	REINS j
	SADDLE h
	WALK_ANIMATION_SCALE_FACTOR b
	head l
	ridingParts n
	root k
	saddleParts m
	applyHeadRotation (Lnet/minecraft/world/entity/animal/camel/Camel;FFF)V a
	createBodyLayer ()Lnet/minecraft/client/model/geom/builders/LayerDefinition; b
	renderToBuffer (Lcom/mojang/blaze3d/vertex/PoseStack;Lcom/mojang/blaze3d/vertex/VertexConsumer;IIFFFF)V a
	root ()Lnet/minecraft/client/model/geom/ModelPart; a
	setupAnim (Lnet/minecraft/world/entity/Entity;FFFFF)V a
	setupAnim (Lnet/minecraft/world/entity/animal/camel/Camel;FFFFF)V a
	toggleInvisibleParts (Lnet/minecraft/world/entity/animal/camel/Camel;)V a
net/minecraft/client/model/CatModel faq
	lieDownAmount q
	lieDownAmountTail r
	relaxStateOneAmount s
	prepareMobModel (Lnet/minecraft/world/entity/Entity;FFF)V a
	prepareMobModel (Lnet/minecraft/world/entity/animal/Cat;FFF)V a
	setupAnim (Lnet/minecraft/world/entity/Entity;FFFFF)V a
	setupAnim (Lnet/minecraft/world/entity/animal/Cat;FFFFF)V a
net/minecraft/client/model/ChestBoatModel far
	CHEST_BOTTOM a
	CHEST_LID b
	CHEST_LOCK f
	createBodyModel ()Lnet/minecraft/client/model/geom/builders/LayerDefinition; e
	createPartsBuilder (Lnet/minecraft/client/model/geom/ModelPart;)Lcom/google/common/collect/ImmutableList$Builder; a
net/minecraft/client/model/ChestRaftModel fas
	CHEST_BOTTOM a
	CHEST_LID b
	CHEST_LOCK f
	createBodyModel ()Lnet/minecraft/client/model/geom/builders/LayerDefinition; a
	createPartsBuilder (Lnet/minecraft/client/model/geom/ModelPart;)Lcom/google/common/collect/ImmutableList$Builder; a
net/minecraft/client/model/ChestedHorseModel fat
	leftChest g
	rightChest h
	createBodyLayer ()Lnet/minecraft/client/model/geom/builders/LayerDefinition; c
	setupAnim (Lnet/minecraft/world/entity/Entity;FFFFF)V a
	setupAnim (Lnet/minecraft/world/entity/animal/horse/AbstractChestedHorse;FFFFF)V a
	setupAnim (Lnet/minecraft/world/entity/animal/horse/AbstractHorse;FFFFF)V a
net/minecraft/client/model/ChickenModel fau
	RED_THING a
	beak k
	body f
	head b
	leftLeg h
	leftWing j
	redThing l
	rightLeg g
	rightWing i
	bodyParts ()Ljava/lang/Iterable; b
	createBodyLayer ()Lnet/minecraft/client/model/geom/builders/LayerDefinition; c
	headParts ()Ljava/lang/Iterable; a
	setupAnim (Lnet/minecraft/world/entity/Entity;FFFFF)V a
net/minecraft/client/model/CodModel fav
	root a
	tailFin b
	createBodyLayer ()Lnet/minecraft/client/model/geom/builders/LayerDefinition; b
	root ()Lnet/minecraft/client/model/geom/ModelPart; a
	setupAnim (Lnet/minecraft/world/entity/Entity;FFFFF)V a
net/minecraft/client/model/ColorableAgeableListModel faw
	b f
	g b
	r a
	renderToBuffer (Lcom/mojang/blaze3d/vertex/PoseStack;Lcom/mojang/blaze3d/vertex/VertexConsumer;IIFFFF)V a
	setColor (FFF)V a
net/minecraft/client/model/ColorableHierarchicalModel fax
	b f
	g b
	r a
	renderToBuffer (Lcom/mojang/blaze3d/vertex/PoseStack;Lcom/mojang/blaze3d/vertex/VertexConsumer;IIFFFF)V a
	setColor (FFF)V a
net/minecraft/client/model/CowModel fay
	createBodyLayer ()Lnet/minecraft/client/model/geom/builders/LayerDefinition; c
	getHead ()Lnet/minecraft/client/model/geom/ModelPart; d
net/minecraft/client/model/CreeperModel faz
	Y_OFFSET j
	head b
	leftFrontLeg i
	leftHindLeg g
	rightFrontLeg h
	rightHindLeg f
	root a
	createBodyLayer (Lnet/minecraft/client/model/geom/builders/CubeDeformation;)Lnet/minecraft/client/model/geom/builders/LayerDefinition; a
	root ()Lnet/minecraft/client/model/geom/ModelPart; a
	setupAnim (Lnet/minecraft/world/entity/Entity;FFFFF)V a
net/minecraft/client/model/DolphinModel fba
	body b
	root a
	tail f
	tailFin g
	createBodyLayer ()Lnet/minecraft/client/model/geom/builders/LayerDefinition; b
	root ()Lnet/minecraft/client/model/geom/ModelPart; a
	setupAnim (Lnet/minecraft/world/entity/Entity;FFFFF)V a
net/minecraft/client/model/DrownedModel fbb
	createBodyLayer (Lnet/minecraft/client/model/geom/builders/CubeDeformation;)Lnet/minecraft/client/model/geom/builders/LayerDefinition; a
	prepareMobModel (Lnet/minecraft/world/entity/Entity;FFF)V a
	prepareMobModel (Lnet/minecraft/world/entity/LivingEntity;FFF)V a
	prepareMobModel (Lnet/minecraft/world/entity/monster/Zombie;FFF)V a
	setupAnim (Lnet/minecraft/world/entity/Entity;FFFFF)V a
	setupAnim (Lnet/minecraft/world/entity/LivingEntity;FFFFF)V a
	setupAnim (Lnet/minecraft/world/entity/monster/Monster;FFFFF)V a
	setupAnim (Lnet/minecraft/world/entity/monster/Zombie;FFFFF)V a
net/minecraft/client/model/ElytraModel fbc
	leftWing b
	rightWing a
	bodyParts ()Ljava/lang/Iterable; b
	createLayer ()Lnet/minecraft/client/model/geom/builders/LayerDefinition; c
	headParts ()Ljava/lang/Iterable; a
	setupAnim (Lnet/minecraft/world/entity/Entity;FFFFF)V a
	setupAnim (Lnet/minecraft/world/entity/LivingEntity;FFFFF)V a
net/minecraft/client/model/EndermanModel fbd
	carrying a
	creepy b
	createBodyLayer ()Lnet/minecraft/client/model/geom/builders/LayerDefinition; c
	setupAnim (Lnet/minecraft/world/entity/Entity;FFFFF)V a
	setupAnim (Lnet/minecraft/world/entity/LivingEntity;FFFFF)V a
net/minecraft/client/model/EndermiteModel fbe
	BODY_COUNT a
	BODY_SIZES b
	BODY_TEXS f
	bodyParts h
	root g
	createBodyLayer ()Lnet/minecraft/client/model/geom/builders/LayerDefinition; b
	createSegmentName (I)Ljava/lang/String; a
	root ()Lnet/minecraft/client/model/geom/ModelPart; a
	setupAnim (Lnet/minecraft/world/entity/Entity;FFFFF)V a
net/minecraft/client/model/EntityModel fbf
	attackTime c
	riding d
	young e
	copyPropertiesTo (Lnet/minecraft/client/model/EntityModel;)V a
	prepareMobModel (Lnet/minecraft/world/entity/Entity;FFF)V a
	setupAnim (Lnet/minecraft/world/entity/Entity;FFFFF)V a
net/minecraft/client/model/EvokerFangsModel fbg
	BASE a
	LOWER_JAW f
	UPPER_JAW b
	base h
	lowerJaw j
	root g
	upperJaw i
	createBodyLayer ()Lnet/minecraft/client/model/geom/builders/LayerDefinition; b
	root ()Lnet/minecraft/client/model/geom/ModelPart; a
	setupAnim (Lnet/minecraft/world/entity/Entity;FFFFF)V a
net/minecraft/client/model/FoxModel fbh
	HEAD_HEIGHT l
	LEG_POS m
	LEG_SIZE k
	body b
	head a
	leftFrontLeg i
	leftHindLeg g
	legMotionPos n
	rightFrontLeg h
	rightHindLeg f
	tail j
	bodyParts ()Ljava/lang/Iterable; b
	createBodyLayer ()Lnet/minecraft/client/model/geom/builders/LayerDefinition; c
	headParts ()Ljava/lang/Iterable; a
	prepareMobModel (Lnet/minecraft/world/entity/Entity;FFF)V a
	prepareMobModel (Lnet/minecraft/world/entity/animal/Fox;FFF)V a
	setupAnim (Lnet/minecraft/world/entity/Entity;FFFFF)V a
	setupAnim (Lnet/minecraft/world/entity/animal/Fox;FFFFF)V a
net/minecraft/client/model/FrogModel fbi
	MAX_SWIM_ANIMATION_SPEED b
	MAX_WALK_ANIMATION_SPEED a
	WALK_ANIMATION_SCALE_FACTOR f
	body h
	croakingBody p
	eyes j
	head i
	leftArm l
	leftLeg n
	rightArm m
	rightLeg o
	root g
	tongue k
	createBodyLayer ()Lnet/minecraft/client/model/geom/builders/LayerDefinition; b
	root ()Lnet/minecraft/client/model/geom/ModelPart; a
	setupAnim (Lnet/minecraft/world/entity/Entity;FFFFF)V a
	setupAnim (Lnet/minecraft/world/entity/animal/frog/Frog;FFFFF)V a
net/minecraft/client/model/GhastModel fbj
	root a
	tentacles b
	createBodyLayer ()Lnet/minecraft/client/model/geom/builders/LayerDefinition; b
	createTentacleName (I)Ljava/lang/String; a
	root ()Lnet/minecraft/client/model/geom/ModelPart; a
	setupAnim (Lnet/minecraft/world/entity/Entity;FFFFF)V a
net/minecraft/client/model/GiantZombieModel fbk
	isAggressive (Lnet/minecraft/world/entity/monster/Giant;)Z a
	isAggressive (Lnet/minecraft/world/entity/monster/Monster;)Z a
net/minecraft/client/model/GoatModel fbl
	createBodyLayer ()Lnet/minecraft/client/model/geom/builders/LayerDefinition; c
	setupAnim (Lnet/minecraft/world/entity/Entity;FFFFF)V a
	setupAnim (Lnet/minecraft/world/entity/animal/goat/Goat;FFFFF)V a
net/minecraft/client/model/GuardianModel fbm
	EYE j
	SPIKE_X g
	SPIKE_X_ROT a
	SPIKE_Y h
	SPIKE_Y_ROT b
	SPIKE_Z i
	SPIKE_Z_ROT f
	TAIL_0 k
	TAIL_1 l
	TAIL_2 m
	eye p
	head o
	root n
	spikeParts q
	tailParts r
	createBodyLayer ()Lnet/minecraft/client/model/geom/builders/LayerDefinition; b
	createSpikeName (I)Ljava/lang/String; a
	getSpikeOffset (IFF)F a
	getSpikeX (IFF)F b
	getSpikeY (IFF)F c
	getSpikeZ (IFF)F d
	root ()Lnet/minecraft/client/model/geom/ModelPart; a
	setupAnim (Lnet/minecraft/world/entity/Entity;FFFFF)V a
	setupAnim (Lnet/minecraft/world/entity/monster/Guardian;FFFFF)V a
	setupSpikes (FF)V a
net/minecraft/client/model/HeadedModel fbn
	getHead ()Lnet/minecraft/client/model/geom/ModelPart; d
net/minecraft/client/model/HierarchicalModel fbo
	ANIMATION_VECTOR_CACHE a
	animate (Lnet/minecraft/world/entity/AnimationState;Lnet/minecraft/client/animation/AnimationDefinition;F)V a
	animate (Lnet/minecraft/world/entity/AnimationState;Lnet/minecraft/client/animation/AnimationDefinition;FF)V a
	animateWalk (Lnet/minecraft/client/animation/AnimationDefinition;FFFF)V a
	applyStatic (Lnet/minecraft/client/animation/AnimationDefinition;)V a
	getAnyDescendantWithName (Ljava/lang/String;)Ljava/util/Optional; a
	renderToBuffer (Lcom/mojang/blaze3d/vertex/PoseStack;Lcom/mojang/blaze3d/vertex/VertexConsumer;IIFFFF)V a
	root ()Lnet/minecraft/client/model/geom/ModelPart; a
net/minecraft/client/model/HoglinModel fbp
	ATTACK_HEAD_X_ROT_END b
	DEFAULT_HEAD_X_ROT a
	body i
	head f
	leftEar h
	leftFrontLeg k
	leftHindLeg m
	mane n
	rightEar g
	rightFrontLeg j
	rightHindLeg l
	bodyParts ()Ljava/lang/Iterable; b
	createBodyLayer ()Lnet/minecraft/client/model/geom/builders/LayerDefinition; c
	headParts ()Ljava/lang/Iterable; a
	setupAnim (Lnet/minecraft/world/entity/Entity;FFFFF)V a
	setupAnim (Lnet/minecraft/world/entity/Mob;FFFFF)V a
net/minecraft/client/model/HorseModel fbq
	DEG_125 g
	DEG_15 k
	DEG_30 j
	DEG_45 i
	DEG_60 h
	HEAD_PARTS a
	HEAD_SADDLE u
	LEFT_FRONT_BABY_LEG n
	LEFT_HIND_BABY_LEG l
	LEFT_SADDLE_LINE r
	LEFT_SADDLE_MOUTH q
	MOUTH_SADDLE_WRAP w
	RIGHT_FRONT_BABY_LEG o
	RIGHT_HIND_BABY_LEG m
	RIGHT_SADDLE_LINE t
	RIGHT_SADDLE_MOUTH s
	SADDLE p
	body b
	headParts f
	leftFrontBabyLeg E
	leftFrontLeg A
	leftHindBabyLeg C
	leftHindLeg y
	ridingParts H
	rightFrontBabyLeg D
	rightFrontLeg z
	rightHindBabyLeg B
	rightHindLeg x
	saddleParts G
	tail F
	bodyParts ()Ljava/lang/Iterable; b
	createBodyMesh (Lnet/minecraft/client/model/geom/builders/CubeDeformation;)Lnet/minecraft/client/model/geom/builders/MeshDefinition; a
	headParts ()Ljava/lang/Iterable; a
	prepareMobModel (Lnet/minecraft/world/entity/Entity;FFF)V a
	prepareMobModel (Lnet/minecraft/world/entity/animal/horse/AbstractHorse;FFF)V a
	setupAnim (Lnet/minecraft/world/entity/Entity;FFFFF)V a
	setupAnim (Lnet/minecraft/world/entity/animal/horse/AbstractHorse;FFFFF)V a
net/minecraft/client/model/HumanoidArmorModel fbr
	createBodyLayer (Lnet/minecraft/client/model/geom/builders/CubeDeformation;)Lnet/minecraft/client/model/geom/builders/MeshDefinition; a
net/minecraft/client/model/HumanoidModel fbs
	DUCK_WALK_ROTATION a
	HAT_OVERLAY_SCALE g
	LEGGINGS_OVERLAY_SCALE h
	OVERLAY_SCALE f
	SPYGLASS_ARM_CROUCH_ROT_X x
	SPYGLASS_ARM_ROT_X w
	SPYGLASS_ARM_ROT_Y b
	TOOT_HORN_XROT_BASE i
	TOOT_HORN_YROT_BASE j
	body m
	crouching t
	hat l
	head k
	leftArm o
	leftArmPose r
	leftLeg q
	rightArm n
	rightArmPose s
	rightLeg p
	swimAmount u
	bodyParts ()Ljava/lang/Iterable; b
	copyPropertiesTo (Lnet/minecraft/client/model/HumanoidModel;)V a
	createMesh (Lnet/minecraft/client/model/geom/builders/CubeDeformation;F)Lnet/minecraft/client/model/geom/builders/MeshDefinition; a
	getArm (Lnet/minecraft/world/entity/HumanoidArm;)Lnet/minecraft/client/model/geom/ModelPart; a
	getAttackArm (Lnet/minecraft/world/entity/LivingEntity;)Lnet/minecraft/world/entity/HumanoidArm; c
	getHead ()Lnet/minecraft/client/model/geom/ModelPart; d
	headParts ()Ljava/lang/Iterable; a
	poseLeftArm (Lnet/minecraft/world/entity/LivingEntity;)V b
	poseRightArm (Lnet/minecraft/world/entity/LivingEntity;)V a
	prepareMobModel (Lnet/minecraft/world/entity/Entity;FFF)V a
	prepareMobModel (Lnet/minecraft/world/entity/LivingEntity;FFF)V a
	quadraticArmUpdate (F)F a
	rotlerpRad (FFF)F a
	setAllVisible (Z)V d_
	setupAnim (Lnet/minecraft/world/entity/Entity;FFFFF)V a
	setupAnim (Lnet/minecraft/world/entity/LivingEntity;FFFFF)V a
	setupAttackAnimation (Lnet/minecraft/world/entity/LivingEntity;F)V a
	translateToHand (Lnet/minecraft/world/entity/HumanoidArm;Lcom/mojang/blaze3d/vertex/PoseStack;)V a
net/minecraft/client/model/HumanoidModel$ArmPose fbs$a
	$VALUES l
	BLOCK c
	BOW_AND_ARROW d
	BRUSH j
	CROSSBOW_CHARGE f
	CROSSBOW_HOLD g
	EMPTY a
	ITEM b
	SPYGLASS h
	THROW_SPEAR e
	TOOT_HORN i
	twoHanded k
	$values ()[Lnet/minecraft/client/model/HumanoidModel$ArmPose; b
	isTwoHanded ()Z a
net/minecraft/client/model/IllagerModel fbt
	arms g
	hat f
	head b
	leftArm k
	leftLeg h
	rightArm j
	rightLeg i
	root a
	createBodyLayer ()Lnet/minecraft/client/model/geom/builders/LayerDefinition; b
	getArm (Lnet/minecraft/world/entity/HumanoidArm;)Lnet/minecraft/client/model/geom/ModelPart; a
	getHat ()Lnet/minecraft/client/model/geom/ModelPart; c
	getHead ()Lnet/minecraft/client/model/geom/ModelPart; d
	root ()Lnet/minecraft/client/model/geom/ModelPart; a
	setupAnim (Lnet/minecraft/world/entity/Entity;FFFFF)V a
	setupAnim (Lnet/minecraft/world/entity/monster/AbstractIllager;FFFFF)V a
	translateToHand (Lnet/minecraft/world/entity/HumanoidArm;Lcom/mojang/blaze3d/vertex/PoseStack;)V a
net/minecraft/client/model/IronGolemModel fbu
	head b
	leftArm g
	leftLeg i
	rightArm f
	rightLeg h
	root a
	createBodyLayer ()Lnet/minecraft/client/model/geom/builders/LayerDefinition; b
	getFlowerHoldingArm ()Lnet/minecraft/client/model/geom/ModelPart; c
	prepareMobModel (Lnet/minecraft/world/entity/Entity;FFF)V a
	prepareMobModel (Lnet/minecraft/world/entity/animal/IronGolem;FFF)V a
	root ()Lnet/minecraft/client/model/geom/ModelPart; a
	setupAnim (Lnet/minecraft/world/entity/Entity;FFFFF)V a
	setupAnim (Lnet/minecraft/world/entity/animal/IronGolem;FFFFF)V a
net/minecraft/client/model/LavaSlimeModel fbv
	SEGMENT_COUNT a
	bodyCubes f
	root b
	createBodyLayer ()Lnet/minecraft/client/model/geom/builders/LayerDefinition; b
	getSegmentName (I)Ljava/lang/String; a
	prepareMobModel (Lnet/minecraft/world/entity/Entity;FFF)V a
	prepareMobModel (Lnet/minecraft/world/entity/monster/Slime;FFF)V a
	root ()Lnet/minecraft/client/model/geom/ModelPart; a
	setupAnim (Lnet/minecraft/world/entity/Entity;FFFFF)V a
	setupAnim (Lnet/minecraft/world/entity/monster/Slime;FFFFF)V a
net/minecraft/client/model/LeashKnotModel fbw
	KNOT a
	knot f
	root b
	createBodyLayer ()Lnet/minecraft/client/model/geom/builders/LayerDefinition; b
	root ()Lnet/minecraft/client/model/geom/ModelPart; a
	setupAnim (Lnet/minecraft/world/entity/Entity;FFFFF)V a
net/minecraft/client/model/ListModel fbx
	parts ()Ljava/lang/Iterable; d
	renderToBuffer (Lcom/mojang/blaze3d/vertex/PoseStack;Lcom/mojang/blaze3d/vertex/VertexConsumer;IIFFFF)V a
net/minecraft/client/model/LlamaModel fby
	body b
	head a
	leftChest k
	leftFrontLeg i
	leftHindLeg g
	rightChest j
	rightFrontLeg h
	rightHindLeg f
	createBodyLayer (Lnet/minecraft/client/model/geom/builders/CubeDeformation;)Lnet/minecraft/client/model/geom/builders/LayerDefinition; a
	renderToBuffer (Lcom/mojang/blaze3d/vertex/PoseStack;Lcom/mojang/blaze3d/vertex/VertexConsumer;IIFFFF)V a
	setupAnim (Lnet/minecraft/world/entity/Entity;FFFFF)V a
	setupAnim (Lnet/minecraft/world/entity/animal/horse/AbstractChestedHorse;FFFFF)V a
net/minecraft/client/model/LlamaSpitModel fbz
	MAIN a
	root b
	createBodyLayer ()Lnet/minecraft/client/model/geom/builders/LayerDefinition; b
	root ()Lnet/minecraft/client/model/geom/ModelPart; a
	setupAnim (Lnet/minecraft/world/entity/Entity;FFFFF)V a
net/minecraft/client/model/MinecartModel fca
	root a
	createBodyLayer ()Lnet/minecraft/client/model/geom/builders/LayerDefinition; b
	root ()Lnet/minecraft/client/model/geom/ModelPart; a
	setupAnim (Lnet/minecraft/world/entity/Entity;FFFFF)V a
net/minecraft/client/model/Model fcb
	renderType v
	renderToBuffer (Lcom/mojang/blaze3d/vertex/PoseStack;Lcom/mojang/blaze3d/vertex/VertexConsumer;IIFFFF)V a
	renderType (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/client/renderer/RenderType; a
net/minecraft/client/model/ModelUtils fcc
	rotlerpRad (FFF)F a
net/minecraft/client/model/OcelotModel fcd
	BACK_LEG_Y b
	BACK_LEG_Z f
	BODY_WALK_Y z
	BODY_WALK_Z A
	CROUCH_STATE q
	FRONT_LEG_Y g
	FRONT_LEG_Z F
	HEAD_WALK_Y x
	HEAD_WALK_Z y
	SITTING_STATE a
	SPRINT_STATE s
	TAIL_1 G
	TAIL_1_WALK_Y B
	TAIL_1_WALK_Z C
	TAIL_2 H
	TAIL_2_WALK_Y D
	TAIL_2_WALK_Z E
	WALK_STATE r
	XO t
	YO u
	ZO w
	body o
	head n
	leftFrontLeg j
	leftHindLeg h
	rightFrontLeg k
	rightHindLeg i
	state p
	tail1 l
	tail2 m
	bodyParts ()Ljava/lang/Iterable; b
	createBodyMesh (Lnet/minecraft/client/model/geom/builders/CubeDeformation;)Lnet/minecraft/client/model/geom/builders/MeshDefinition; a
	headParts ()Ljava/lang/Iterable; a
	prepareMobModel (Lnet/minecraft/world/entity/Entity;FFF)V a
	setupAnim (Lnet/minecraft/world/entity/Entity;FFFFF)V a
net/minecraft/client/model/PandaModel fce
	lieOnBackAmount k
	rollAmount l
	sitAmount j
	createBodyLayer ()Lnet/minecraft/client/model/geom/builders/LayerDefinition; c
	prepareMobModel (Lnet/minecraft/world/entity/Entity;FFF)V a
	prepareMobModel (Lnet/minecraft/world/entity/animal/Panda;FFF)V a
	setupAnim (Lnet/minecraft/world/entity/Entity;FFFFF)V a
	setupAnim (Lnet/minecraft/world/entity/animal/Panda;FFFFF)V a
net/minecraft/client/model/ParrotModel fcf
	FEATHER a
	body f
	feather k
	head j
	leftLeg l
	leftWing h
	rightLeg m
	rightWing i
	root b
	tail g
	createBodyLayer ()Lnet/minecraft/client/model/geom/builders/LayerDefinition; b
	getState (Lnet/minecraft/world/entity/animal/Parrot;)Lnet/minecraft/client/model/ParrotModel$State; a
	prepare (Lnet/minecraft/client/model/ParrotModel$State;)V a
	prepareMobModel (Lnet/minecraft/world/entity/Entity;FFF)V a
	prepareMobModel (Lnet/minecraft/world/entity/animal/Parrot;FFF)V a
	renderOnShoulder (Lcom/mojang/blaze3d/vertex/PoseStack;Lcom/mojang/blaze3d/vertex/VertexConsumer;IIFFFFI)V a
	root ()Lnet/minecraft/client/model/geom/ModelPart; a
	setupAnim (Lnet/minecraft/client/model/ParrotModel$State;IFFFFF)V a
	setupAnim (Lnet/minecraft/world/entity/Entity;FFFFF)V a
	setupAnim (Lnet/minecraft/world/entity/animal/Parrot;FFFFF)V a
net/minecraft/client/model/ParrotModel$State fcf$a
	$VALUES f
	FLYING a
	ON_SHOULDER e
	PARTY d
	SITTING c
	STANDING b
	$values ()[Lnet/minecraft/client/model/ParrotModel$State; a
net/minecraft/client/model/PhantomModel fcg
	TAIL_BASE a
	TAIL_TIP b
	leftWingBase g
	leftWingTip h
	rightWingBase i
	rightWingTip j
	root f
	tailBase k
	tailTip l
	createBodyLayer ()Lnet/minecraft/client/model/geom/builders/LayerDefinition; b
	root ()Lnet/minecraft/client/model/geom/ModelPart; a
	setupAnim (Lnet/minecraft/world/entity/Entity;FFFFF)V a
	setupAnim (Lnet/minecraft/world/entity/monster/Phantom;FFFFF)V a
net/minecraft/client/model/PigModel fch
	createBodyLayer (Lnet/minecraft/client/model/geom/builders/CubeDeformation;)Lnet/minecraft/client/model/geom/builders/LayerDefinition; a
net/minecraft/client/model/PiglinHeadModel fci
	head a
	leftEar b
	rightEar c
	createHeadModel ()Lnet/minecraft/client/model/geom/builders/MeshDefinition; a
	renderToBuffer (Lcom/mojang/blaze3d/vertex/PoseStack;Lcom/mojang/blaze3d/vertex/VertexConsumer;IIFFFF)V a
	setupAnim (FFF)V a
net/minecraft/client/model/PiglinModel fcj
	bodyDefault B
	headDefault C
	leftArmDefault D
	leftEar A
	rightArmDefault E
	rightEar a
	addHead (Lnet/minecraft/client/model/geom/builders/CubeDeformation;Lnet/minecraft/client/model/geom/builders/MeshDefinition;)V a
	createMesh (Lnet/minecraft/client/model/geom/builders/CubeDeformation;)Lnet/minecraft/client/model/geom/builders/MeshDefinition; a
	holdWeaponHigh (Lnet/minecraft/world/entity/Mob;)V a
	setupAnim (Lnet/minecraft/world/entity/Entity;FFFFF)V a
	setupAnim (Lnet/minecraft/world/entity/LivingEntity;FFFFF)V a
	setupAnim (Lnet/minecraft/world/entity/Mob;FFFFF)V a
	setupAttackAnimation (Lnet/minecraft/world/entity/LivingEntity;F)V a
	setupAttackAnimation (Lnet/minecraft/world/entity/Mob;F)V a
net/minecraft/client/model/PlayerModel fck
	CLOAK A
	EAR a
	LEFT_PANTS D
	LEFT_SLEEVE B
	RIGHT_PANTS E
	RIGHT_SLEEVE C
	cloak G
	ear H
	jacket z
	leftPants x
	leftSleeve b
	parts F
	rightPants y
	rightSleeve w
	slim I
	bodyParts ()Ljava/lang/Iterable; b
	createMesh (Lnet/minecraft/client/model/geom/builders/CubeDeformation;Z)Lnet/minecraft/client/model/geom/builders/MeshDefinition; a
	getRandomModelPart (Lnet/minecraft/util/RandomSource;)Lnet/minecraft/client/model/geom/ModelPart; a
	renderCloak (Lcom/mojang/blaze3d/vertex/PoseStack;Lcom/mojang/blaze3d/vertex/VertexConsumer;II)V b
	renderEars (Lcom/mojang/blaze3d/vertex/PoseStack;Lcom/mojang/blaze3d/vertex/VertexConsumer;II)V a
	setAllVisible (Z)V d_
	setupAnim (Lnet/minecraft/world/entity/Entity;FFFFF)V a
	setupAnim (Lnet/minecraft/world/entity/LivingEntity;FFFFF)V a
	translateToHand (Lnet/minecraft/world/entity/HumanoidArm;Lcom/mojang/blaze3d/vertex/PoseStack;)V a
net/minecraft/client/model/PolarBearModel fcl
	createBodyLayer ()Lnet/minecraft/client/model/geom/builders/LayerDefinition; c
	setupAnim (Lnet/minecraft/world/entity/Entity;FFFFF)V a
	setupAnim (Lnet/minecraft/world/entity/animal/PolarBear;FFFFF)V a
net/minecraft/client/model/PufferfishBigModel fcm
	leftBlueFin b
	rightBlueFin f
	root a
	createBodyLayer ()Lnet/minecraft/client/model/geom/builders/LayerDefinition; b
	root ()Lnet/minecraft/client/model/geom/ModelPart; a
	setupAnim (Lnet/minecraft/world/entity/Entity;FFFFF)V a
net/minecraft/client/model/PufferfishMidModel fcn
	leftBlueFin b
	rightBlueFin f
	root a
	createBodyLayer ()Lnet/minecraft/client/model/geom/builders/LayerDefinition; b
	root ()Lnet/minecraft/client/model/geom/ModelPart; a
	setupAnim (Lnet/minecraft/world/entity/Entity;FFFFF)V a
net/minecraft/client/model/PufferfishSmallModel fco
	leftFin b
	rightFin f
	root a
	createBodyLayer ()Lnet/minecraft/client/model/geom/builders/LayerDefinition; b
	root ()Lnet/minecraft/client/model/geom/ModelPart; a
	setupAnim (Lnet/minecraft/world/entity/Entity;FFFFF)V a
net/minecraft/client/model/QuadrupedModel fcp
	body b
	head a
	leftFrontLeg i
	leftHindLeg g
	rightFrontLeg h
	rightHindLeg f
	bodyParts ()Ljava/lang/Iterable; b
	createBodyMesh (ILnet/minecraft/client/model/geom/builders/CubeDeformation;)Lnet/minecraft/client/model/geom/builders/MeshDefinition; a
	headParts ()Ljava/lang/Iterable; a
	setupAnim (Lnet/minecraft/world/entity/Entity;FFFFF)V a
net/minecraft/client/model/RabbitModel fcq
	FRONT_JUMP_ANGLE b
	LEFT_HAUNCH f
	NEW_SCALE u
	REAR_JUMP_ANGLE a
	RIGHT_HAUNCH g
	body l
	head o
	jumpRotation t
	leftEar q
	leftFrontLeg m
	leftHaunch j
	leftRearFoot h
	nose s
	rightEar p
	rightFrontLeg n
	rightHaunch k
	rightRearFoot i
	tail r
	createBodyLayer ()Lnet/minecraft/client/model/geom/builders/LayerDefinition; a
	prepareMobModel (Lnet/minecraft/world/entity/Entity;FFF)V a
	prepareMobModel (Lnet/minecraft/world/entity/animal/Rabbit;FFF)V a
	renderToBuffer (Lcom/mojang/blaze3d/vertex/PoseStack;Lcom/mojang/blaze3d/vertex/VertexConsumer;IIFFFF)V a
	setupAnim (Lnet/minecraft/world/entity/Entity;FFFFF)V a
	setupAnim (Lnet/minecraft/world/entity/animal/Rabbit;FFFFF)V a
net/minecraft/client/model/RaftModel fcr
	BOTTOM f
	LEFT_PADDLE a
	RIGHT_PADDLE b
	leftPaddle g
	parts i
	rightPaddle h
	animatePaddle (Lnet/minecraft/world/entity/vehicle/Boat;ILnet/minecraft/client/model/geom/ModelPart;F)V a
	createBodyModel ()Lnet/minecraft/client/model/geom/builders/LayerDefinition; b
	createChildren (Lnet/minecraft/client/model/geom/builders/PartDefinition;)V a
	createPartsBuilder (Lnet/minecraft/client/model/geom/ModelPart;)Lcom/google/common/collect/ImmutableList$Builder; a
	parts ()Lcom/google/common/collect/ImmutableList; c
	parts ()Ljava/lang/Iterable; d
	setupAnim (Lnet/minecraft/world/entity/Entity;FFFFF)V a
	setupAnim (Lnet/minecraft/world/entity/vehicle/Boat;FFFFF)V a
net/minecraft/client/model/RavagerModel fcs
	head b
	leftFrontLeg j
	leftHindLeg h
	mouth f
	neck k
	rightFrontLeg i
	rightHindLeg g
	root a
	createBodyLayer ()Lnet/minecraft/client/model/geom/builders/LayerDefinition; b
	prepareMobModel (Lnet/minecraft/world/entity/Entity;FFF)V a
	prepareMobModel (Lnet/minecraft/world/entity/monster/Ravager;FFF)V a
	root ()Lnet/minecraft/client/model/geom/ModelPart; a
	setupAnim (Lnet/minecraft/world/entity/Entity;FFFFF)V a
	setupAnim (Lnet/minecraft/world/entity/monster/Ravager;FFFFF)V a
net/minecraft/client/model/SalmonModel fct
	BODY_BACK b
	BODY_FRONT a
	bodyBack g
	root f
	createBodyLayer ()Lnet/minecraft/client/model/geom/builders/LayerDefinition; b
	root ()Lnet/minecraft/client/model/geom/ModelPart; a
	setupAnim (Lnet/minecraft/world/entity/Entity;FFFFF)V a
net/minecraft/client/model/SheepFurModel fcu
	headXRot j
	createFurLayer ()Lnet/minecraft/client/model/geom/builders/LayerDefinition; c
	prepareMobModel (Lnet/minecraft/world/entity/Entity;FFF)V a
	prepareMobModel (Lnet/minecraft/world/entity/animal/Sheep;FFF)V a
	setupAnim (Lnet/minecraft/world/entity/Entity;FFFFF)V a
	setupAnim (Lnet/minecraft/world/entity/animal/Sheep;FFFFF)V a
net/minecraft/client/model/SheepModel fcv
	headXRot j
	createBodyLayer ()Lnet/minecraft/client/model/geom/builders/LayerDefinition; c
	prepareMobModel (Lnet/minecraft/world/entity/Entity;FFF)V a
	prepareMobModel (Lnet/minecraft/world/entity/animal/Sheep;FFF)V a
	setupAnim (Lnet/minecraft/world/entity/Entity;FFFFF)V a
	setupAnim (Lnet/minecraft/world/entity/animal/Sheep;FFFFF)V a
net/minecraft/client/model/ShieldModel fcw
	HANDLE b
	PLATE a
	SHIELD_HEIGHT d
	SHIELD_WIDTH c
	handle g
	plate f
	root e
	createLayer ()Lnet/minecraft/client/model/geom/builders/LayerDefinition; a
	handle ()Lnet/minecraft/client/model/geom/ModelPart; c
	plate ()Lnet/minecraft/client/model/geom/ModelPart; b
	renderToBuffer (Lcom/mojang/blaze3d/vertex/PoseStack;Lcom/mojang/blaze3d/vertex/VertexConsumer;IIFFFF)V a
net/minecraft/client/model/ShulkerBulletModel fcx
	MAIN a
	main f
	root b
	createBodyLayer ()Lnet/minecraft/client/model/geom/builders/LayerDefinition; b
	root ()Lnet/minecraft/client/model/geom/ModelPart; a
	setupAnim (Lnet/minecraft/world/entity/Entity;FFFFF)V a
net/minecraft/client/model/ShulkerModel fcy
	BASE b
	LID a
	base f
	head h
	lid g
	createBodyLayer ()Lnet/minecraft/client/model/geom/builders/LayerDefinition; a
	getHead ()Lnet/minecraft/client/model/geom/ModelPart; c
	getLid ()Lnet/minecraft/client/model/geom/ModelPart; b
	parts ()Ljava/lang/Iterable; d
	setupAnim (Lnet/minecraft/world/entity/Entity;FFFFF)V a
	setupAnim (Lnet/minecraft/world/entity/monster/Shulker;FFFFF)V a
net/minecraft/client/model/SilverfishModel fcz
	BODY_COUNT a
	BODY_SIZES h
	BODY_TEXS i
	bodyLayers g
	bodyParts f
	root b
	createBodyLayer ()Lnet/minecraft/client/model/geom/builders/LayerDefinition; b
	getLayerName (I)Ljava/lang/String; a
	getSegmentName (I)Ljava/lang/String; b
	root ()Lnet/minecraft/client/model/geom/ModelPart; a
	setupAnim (Lnet/minecraft/world/entity/Entity;FFFFF)V a
net/minecraft/client/model/SkeletonModel fda
	createBodyLayer ()Lnet/minecraft/client/model/geom/builders/LayerDefinition; c
	prepareMobModel (Lnet/minecraft/world/entity/Entity;FFF)V a
	prepareMobModel (Lnet/minecraft/world/entity/LivingEntity;FFF)V a
	prepareMobModel (Lnet/minecraft/world/entity/Mob;FFF)V a
	setupAnim (Lnet/minecraft/world/entity/Entity;FFFFF)V a
	setupAnim (Lnet/minecraft/world/entity/LivingEntity;FFFFF)V a
	setupAnim (Lnet/minecraft/world/entity/Mob;FFFFF)V a
	translateToHand (Lnet/minecraft/world/entity/HumanoidArm;Lcom/mojang/blaze3d/vertex/PoseStack;)V a
net/minecraft/client/model/SkullModel fdb
	head a
	root b
	createHeadModel ()Lnet/minecraft/client/model/geom/builders/MeshDefinition; a
	createHumanoidHeadLayer ()Lnet/minecraft/client/model/geom/builders/LayerDefinition; b
	createMobHeadLayer ()Lnet/minecraft/client/model/geom/builders/LayerDefinition; c
	renderToBuffer (Lcom/mojang/blaze3d/vertex/PoseStack;Lcom/mojang/blaze3d/vertex/VertexConsumer;IIFFFF)V a
	setupAnim (FFF)V a
net/minecraft/client/model/SkullModelBase fdc
	setupAnim (FFF)V a
net/minecraft/client/model/SlimeModel fdd
	root a
	createInnerBodyLayer ()Lnet/minecraft/client/model/geom/builders/LayerDefinition; c
	createOuterBodyLayer ()Lnet/minecraft/client/model/geom/builders/LayerDefinition; b
	root ()Lnet/minecraft/client/model/geom/ModelPart; a
	setupAnim (Lnet/minecraft/world/entity/Entity;FFFFF)V a
net/minecraft/client/model/SnifferModel fde
	WALK_ANIMATION_SCALE_FACTOR b
	WALK_ANIMATION_SPEED_MAX a
	head g
	root f
	createBodyLayer ()Lnet/minecraft/client/model/geom/builders/LayerDefinition; b
	root ()Lnet/minecraft/client/model/geom/ModelPart; a
	setupAnim (Lnet/minecraft/world/entity/Entity;FFFFF)V a
	setupAnim (Lnet/minecraft/world/entity/animal/sniffer/Sniffer;FFFFF)V a
net/minecraft/client/model/SnowGolemModel fdf
	UPPER_BODY a
	head g
	leftArm h
	rightArm i
	root b
	upperBody f
	createBodyLayer ()Lnet/minecraft/client/model/geom/builders/LayerDefinition; b
	getHead ()Lnet/minecraft/client/model/geom/ModelPart; c
	root ()Lnet/minecraft/client/model/geom/ModelPart; a
	setupAnim (Lnet/minecraft/world/entity/Entity;FFFFF)V a
net/minecraft/client/model/SpiderModel fdg
	BODY_0 a
	BODY_1 b
	LEFT_MIDDLE_FRONT_LEG g
	LEFT_MIDDLE_HIND_LEG i
	RIGHT_MIDDLE_FRONT_LEG f
	RIGHT_MIDDLE_HIND_LEG h
	head k
	leftFrontLeg s
	leftHindLeg m
	leftMiddleFrontLeg q
	leftMiddleHindLeg o
	rightFrontLeg r
	rightHindLeg l
	rightMiddleFrontLeg p
	rightMiddleHindLeg n
	root j
	createSpiderBodyLayer ()Lnet/minecraft/client/model/geom/builders/LayerDefinition; b
	root ()Lnet/minecraft/client/model/geom/ModelPart; a
	setupAnim (Lnet/minecraft/world/entity/Entity;FFFFF)V a
net/minecraft/client/model/SquidModel fdh
	root b
	tentacles a
	createBodyLayer ()Lnet/minecraft/client/model/geom/builders/LayerDefinition; b
	createTentacleName (I)Ljava/lang/String; a
	root ()Lnet/minecraft/client/model/geom/ModelPart; a
	setupAnim (Lnet/minecraft/world/entity/Entity;FFFFF)V a
net/minecraft/client/model/StriderModel fdi
	LEFT_BOTTOM_BRISTLE i
	LEFT_MIDDLE_BRISTLE h
	LEFT_TOP_BRISTLE g
	RIGHT_BOTTOM_BRISTLE a
	RIGHT_MIDDLE_BRISTLE b
	RIGHT_TOP_BRISTLE f
	body m
	leftBottomBristle s
	leftLeg l
	leftMiddleBristle r
	leftTopBristle q
	rightBottomBristle n
	rightLeg k
	rightMiddleBristle o
	rightTopBristle p
	root j
	createBodyLayer ()Lnet/minecraft/client/model/geom/builders/LayerDefinition; b
	root ()Lnet/minecraft/client/model/geom/ModelPart; a
	setupAnim (Lnet/minecraft/world/entity/Entity;FFFFF)V a
	setupAnim (Lnet/minecraft/world/entity/monster/Strider;FFFFF)V a
net/minecraft/client/model/TadpoleModel fdj
	root a
	tail b
	bodyParts ()Ljava/lang/Iterable; b
	createBodyLayer ()Lnet/minecraft/client/model/geom/builders/LayerDefinition; c
	headParts ()Ljava/lang/Iterable; a
	setupAnim (Lnet/minecraft/world/entity/Entity;FFFFF)V a
	setupAnim (Lnet/minecraft/world/entity/animal/frog/Tadpole;FFFFF)V a
net/minecraft/client/model/TridentModel fdk
	TEXTURE a
	root b
	createLayer ()Lnet/minecraft/client/model/geom/builders/LayerDefinition; a
	renderToBuffer (Lcom/mojang/blaze3d/vertex/PoseStack;Lcom/mojang/blaze3d/vertex/VertexConsumer;IIFFFF)V a
net/minecraft/client/model/TropicalFishModelA fdl
	root a
	tail b
	createBodyLayer (Lnet/minecraft/client/model/geom/builders/CubeDeformation;)Lnet/minecraft/client/model/geom/builders/LayerDefinition; a
	root ()Lnet/minecraft/client/model/geom/ModelPart; a
	setupAnim (Lnet/minecraft/world/entity/Entity;FFFFF)V a
net/minecraft/client/model/TropicalFishModelB fdm
	root a
	tail b
	createBodyLayer (Lnet/minecraft/client/model/geom/builders/CubeDeformation;)Lnet/minecraft/client/model/geom/builders/LayerDefinition; a
	root ()Lnet/minecraft/client/model/geom/ModelPart; a
	setupAnim (Lnet/minecraft/world/entity/Entity;FFFFF)V a
net/minecraft/client/model/TurtleModel fdn
	EGG_BELLY j
	eggBelly k
	bodyParts ()Ljava/lang/Iterable; b
	createBodyLayer ()Lnet/minecraft/client/model/geom/builders/LayerDefinition; c
	renderToBuffer (Lcom/mojang/blaze3d/vertex/PoseStack;Lcom/mojang/blaze3d/vertex/VertexConsumer;IIFFFF)V a
	setupAnim (Lnet/minecraft/world/entity/Entity;FFFFF)V a
	setupAnim (Lnet/minecraft/world/entity/animal/Turtle;FFFFF)V a
net/minecraft/client/model/VexModel fdo
	body b
	head j
	leftArm g
	leftWing i
	rightArm f
	rightWing h
	root a
	createBodyLayer ()Lnet/minecraft/client/model/geom/builders/LayerDefinition; b
	offsetStackPosition (Lcom/mojang/blaze3d/vertex/PoseStack;Z)V a
	root ()Lnet/minecraft/client/model/geom/ModelPart; a
	setArmsCharging (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/item/ItemStack;F)V a
	setupAnim (Lnet/minecraft/world/entity/Entity;FFFFF)V a
	setupAnim (Lnet/minecraft/world/entity/monster/Vex;FFFFF)V a
	translateToHand (Lnet/minecraft/world/entity/HumanoidArm;Lcom/mojang/blaze3d/vertex/PoseStack;)V a
net/minecraft/client/model/VillagerHeadModel fdp
	hatVisible (Z)V a
net/minecraft/client/model/VillagerModel fdq
	hat g
	hatRim h
	head f
	leftLeg j
	nose a
	rightLeg i
	root b
	createBodyModel ()Lnet/minecraft/client/model/geom/builders/MeshDefinition; b
	getHead ()Lnet/minecraft/client/model/geom/ModelPart; d
	hatVisible (Z)V a
	root ()Lnet/minecraft/client/model/geom/ModelPart; a
	setupAnim (Lnet/minecraft/world/entity/Entity;FFFFF)V a
net/minecraft/client/model/WardenModel fdr
	DEFAULT_ARM_X_Y o
	DEFAULT_ARM_Z p
	bioluminescentLayerModelParts t
	body b
	bone a
	head f
	heartLayerModelParts s
	leftArm j
	leftLeg i
	leftRibcage k
	leftTendril h
	pulsatingSpotsLayerModelParts u
	rightArm l
	rightLeg m
	rightRibcage n
	rightTendril g
	root q
	tendrilsLayerModelParts r
	animateHeadLookTarget (FF)V a
	animateIdlePose (F)V a
	animateTendrils (Lnet/minecraft/world/entity/monster/warden/Warden;FF)V a
	animateWalk (FF)V b
	createBodyLayer ()Lnet/minecraft/client/model/geom/builders/LayerDefinition; b
	getBioluminescentLayerModelParts ()Ljava/util/List; e
	getHeartLayerModelParts ()Ljava/util/List; d
	getPulsatingSpotsLayerModelParts ()Ljava/util/List; f
	getTendrilsLayerModelParts ()Ljava/util/List; c
	resetArmPoses ()V g
	root ()Lnet/minecraft/client/model/geom/ModelPart; a
	setupAnim (Lnet/minecraft/world/entity/Entity;FFFFF)V a
	setupAnim (Lnet/minecraft/world/entity/monster/warden/Warden;FFFFF)V a
net/minecraft/client/model/WaterPatchModel fds
	waterPatch ()Lnet/minecraft/client/model/geom/ModelPart; c
net/minecraft/client/model/WitchModel fdt
	holdingItem b
	createBodyLayer ()Lnet/minecraft/client/model/geom/builders/LayerDefinition; c
	getNose ()Lnet/minecraft/client/model/geom/ModelPart; e
	setHoldingItem (Z)V b
	setupAnim (Lnet/minecraft/world/entity/Entity;FFFFF)V a
net/minecraft/client/model/WitherBossModel fdu
	CENTER_HEAD b
	LEFT_HEAD g
	RIBCAGE a
	RIBCAGE_X_ROT_OFFSET h
	RIGHT_HEAD f
	TAIL_X_ROT_OFFSET i
	centerHead k
	leftHead m
	ribcage n
	rightHead l
	root j
	tail o
	createBodyLayer (Lnet/minecraft/client/model/geom/builders/CubeDeformation;)Lnet/minecraft/client/model/geom/builders/LayerDefinition; a
	prepareMobModel (Lnet/minecraft/world/entity/Entity;FFF)V a
	prepareMobModel (Lnet/minecraft/world/entity/boss/wither/WitherBoss;FFF)V a
	root ()Lnet/minecraft/client/model/geom/ModelPart; a
	setupAnim (Lnet/minecraft/world/entity/Entity;FFFFF)V a
	setupAnim (Lnet/minecraft/world/entity/boss/wither/WitherBoss;FFFFF)V a
	setupHeadRotation (Lnet/minecraft/world/entity/boss/wither/WitherBoss;Lnet/minecraft/client/model/geom/ModelPart;I)V a
net/minecraft/client/model/WolfModel fdv
	LEG_SIZE q
	REAL_HEAD a
	REAL_TAIL f
	UPPER_BODY b
	body i
	head g
	leftFrontLeg m
	leftHindLeg k
	realHead h
	realTail o
	rightFrontLeg l
	rightHindLeg j
	tail n
	upperBody p
	bodyParts ()Ljava/lang/Iterable; b
	createBodyLayer ()Lnet/minecraft/client/model/geom/builders/LayerDefinition; c
	headParts ()Ljava/lang/Iterable; a
	prepareMobModel (Lnet/minecraft/world/entity/Entity;FFF)V a
	prepareMobModel (Lnet/minecraft/world/entity/animal/Wolf;FFF)V a
	setupAnim (Lnet/minecraft/world/entity/Entity;FFFFF)V a
	setupAnim (Lnet/minecraft/world/entity/animal/Wolf;FFFFF)V a
net/minecraft/client/model/ZombieModel fdw
	isAggressive (Lnet/minecraft/world/entity/monster/Monster;)Z a
	isAggressive (Lnet/minecraft/world/entity/monster/Zombie;)Z a
net/minecraft/client/model/ZombieVillagerModel fdx
	hatRim a
	createArmorLayer (Lnet/minecraft/client/model/geom/builders/CubeDeformation;)Lnet/minecraft/client/model/geom/builders/LayerDefinition; a
	createBodyLayer ()Lnet/minecraft/client/model/geom/builders/LayerDefinition; c
	hatVisible (Z)V a
	setupAnim (Lnet/minecraft/world/entity/Entity;FFFFF)V a
	setupAnim (Lnet/minecraft/world/entity/LivingEntity;FFFFF)V a
	setupAnim (Lnet/minecraft/world/entity/monster/Zombie;FFFFF)V a
net/minecraft/client/model/dragon/DragonHeadModel fdy
	head a
	jaw b
	createHeadLayer ()Lnet/minecraft/client/model/geom/builders/LayerDefinition; a
	renderToBuffer (Lcom/mojang/blaze3d/vertex/PoseStack;Lcom/mojang/blaze3d/vertex/VertexConsumer;IIFFFF)V a
	setupAnim (FFF)V a
net/minecraft/client/model/geom/EntityModelSet fea
	roots a
	bakeLayer (Lnet/minecraft/client/model/geom/ModelLayerLocation;)Lnet/minecraft/client/model/geom/ModelPart; a
	onResourceManagerReload (Lnet/minecraft/server/packs/resources/ResourceManager;)V a
net/minecraft/client/model/geom/LayerDefinitions feb
	FISH_PATTERN_DEFORMATION a
	INNER_ARMOR_DEFORMATION c
	OUTER_ARMOR_DEFORMATION b
	createRoots ()Ljava/util/Map; a
net/minecraft/client/model/geom/ModelLayerLocation fec
	layer b
	model a
	getLayer ()Ljava/lang/String; b
	getModel ()Lnet/minecraft/resources/ResourceLocation; a
net/minecraft/client/model/geom/ModelLayers fed
	ALLAY a
	ALL_MODELS cj
	ARMOR_STAND b
	ARMOR_STAND_INNER_ARMOR c
	ARMOR_STAND_OUTER_ARMOR d
	AXOLOTL e
	BANNER f
	BAT g
	BED_FOOT h
	BED_HEAD i
	BEE j
	BELL k
	BLAZE l
	BOOK m
	CAMEL p
	CAT n
	CAT_COLLAR o
	CAVE_SPIDER q
	CHEST r
	CHEST_MINECART s
	CHICKEN t
	COD u
	COMMAND_BLOCK_MINECART v
	CONDUIT_CAGE w
	CONDUIT_EYE x
	CONDUIT_SHELL y
	CONDUIT_WIND z
	COW A
	CREEPER B
	CREEPER_ARMOR C
	CREEPER_HEAD D
	DECORATED_POT_BASE E
	DECORATED_POT_SIDES F
	DEFAULT_LAYER ci
	DOLPHIN G
	DONKEY H
	DOUBLE_CHEST_LEFT I
	DOUBLE_CHEST_RIGHT J
	DRAGON_SKULL K
	DROWNED L
	DROWNED_INNER_ARMOR M
	DROWNED_OUTER_ARMOR N
	DROWNED_OUTER_LAYER O
	ELDER_GUARDIAN P
	ELYTRA Q
	ENDERMAN R
	ENDERMITE S
	ENDER_DRAGON T
	END_CRYSTAL U
	EVOKER V
	EVOKER_FANGS W
	FOX X
	FROG Y
	FURNACE_MINECART Z
	GHAST aa
	GIANT ab
	GIANT_INNER_ARMOR ac
	GIANT_OUTER_ARMOR ad
	GLOW_SQUID ae
	GOAT af
	GUARDIAN ag
	HOGLIN ah
	HOPPER_MINECART ai
	HORSE aj
	HORSE_ARMOR ak
	HUSK al
	HUSK_INNER_ARMOR am
	HUSK_OUTER_ARMOR an
	ILLUSIONER ao
	IRON_GOLEM ap
	LEASH_KNOT aq
	LLAMA ar
	LLAMA_DECOR as
	LLAMA_SPIT at
	MAGMA_CUBE au
	MINECART av
	MOOSHROOM aw
	MULE ax
	OCELOT ay
	PANDA az
	PARROT aA
	PHANTOM aB
	PIG aC
	PIGLIN aD
	PIGLIN_BRUTE aE
	PIGLIN_BRUTE_INNER_ARMOR aF
	PIGLIN_BRUTE_OUTER_ARMOR aG
	PIGLIN_HEAD aH
	PIGLIN_INNER_ARMOR aI
	PIGLIN_OUTER_ARMOR aJ
	PIG_SADDLE aK
	PILLAGER aL
	PLAYER aM
	PLAYER_HEAD aN
	PLAYER_INNER_ARMOR aO
	PLAYER_OUTER_ARMOR aP
	PLAYER_SLIM aQ
	PLAYER_SLIM_INNER_ARMOR aR
	PLAYER_SLIM_OUTER_ARMOR aS
	PLAYER_SPIN_ATTACK aT
	POLAR_BEAR aU
	PUFFERFISH_BIG aV
	PUFFERFISH_MEDIUM aW
	PUFFERFISH_SMALL aX
	RABBIT aY
	RAVAGER aZ
	SALMON ba
	SHEEP bb
	SHEEP_FUR bc
	SHIELD bd
	SHULKER be
	SHULKER_BULLET bf
	SILVERFISH bg
	SKELETON bh
	SKELETON_HORSE bi
	SKELETON_INNER_ARMOR bj
	SKELETON_OUTER_ARMOR bk
	SKELETON_SKULL bl
	SLIME bm
	SLIME_OUTER bn
	SNIFFER bo
	SNOW_GOLEM bp
	SPAWNER_MINECART bq
	SPIDER br
	SQUID bs
	STRAY bt
	STRAY_INNER_ARMOR bu
	STRAY_OUTER_ARMOR bv
	STRAY_OUTER_LAYER bw
	STRIDER bx
	STRIDER_SADDLE by
	TADPOLE bz
	TNT_MINECART bA
	TRADER_LLAMA bB
	TRIDENT bC
	TROPICAL_FISH_LARGE bD
	TROPICAL_FISH_LARGE_PATTERN bE
	TROPICAL_FISH_SMALL bF
	TROPICAL_FISH_SMALL_PATTERN bG
	TURTLE bH
	VEX bI
	VILLAGER bJ
	VINDICATOR bK
	WANDERING_TRADER bM
	WARDEN bL
	WITCH bN
	WITHER bO
	WITHER_ARMOR bP
	WITHER_SKELETON bQ
	WITHER_SKELETON_INNER_ARMOR bR
	WITHER_SKELETON_OUTER_ARMOR bS
	WITHER_SKELETON_SKULL bT
	WITHER_SKULL bU
	WOLF bV
	ZOGLIN bW
	ZOMBIE bX
	ZOMBIE_HEAD bY
	ZOMBIE_HORSE bZ
	ZOMBIE_INNER_ARMOR ca
	ZOMBIE_OUTER_ARMOR cb
	ZOMBIE_VILLAGER cc
	ZOMBIE_VILLAGER_INNER_ARMOR cd
	ZOMBIE_VILLAGER_OUTER_ARMOR ce
	ZOMBIFIED_PIGLIN cf
	ZOMBIFIED_PIGLIN_INNER_ARMOR cg
	ZOMBIFIED_PIGLIN_OUTER_ARMOR ch
	createBoatModelName (Lnet/minecraft/world/entity/vehicle/Boat$Type;)Lnet/minecraft/client/model/geom/ModelLayerLocation; c
	createChestBoatModelName (Lnet/minecraft/world/entity/vehicle/Boat$Type;)Lnet/minecraft/client/model/geom/ModelLayerLocation; d
	createChestRaftModelName (Lnet/minecraft/world/entity/vehicle/Boat$Type;)Lnet/minecraft/client/model/geom/ModelLayerLocation; b
	createHangingSignModelName (Lnet/minecraft/world/level/block/state/properties/WoodType;)Lnet/minecraft/client/model/geom/ModelLayerLocation; b
	createLocation (Ljava/lang/String;Ljava/lang/String;)Lnet/minecraft/client/model/geom/ModelLayerLocation; b
	createRaftModelName (Lnet/minecraft/world/entity/vehicle/Boat$Type;)Lnet/minecraft/client/model/geom/ModelLayerLocation; a
	createSignModelName (Lnet/minecraft/world/level/block/state/properties/WoodType;)Lnet/minecraft/client/model/geom/ModelLayerLocation; a
	getKnownLocations ()Ljava/util/stream/Stream; a
	register (Ljava/lang/String;)Lnet/minecraft/client/model/geom/ModelLayerLocation; a
	register (Ljava/lang/String;Ljava/lang/String;)Lnet/minecraft/client/model/geom/ModelLayerLocation; a
	registerInnerArmor (Ljava/lang/String;)Lnet/minecraft/client/model/geom/ModelLayerLocation; b
	registerOuterArmor (Ljava/lang/String;)Lnet/minecraft/client/model/geom/ModelLayerLocation; c
net/minecraft/client/model/geom/ModelPart fee
	DEFAULT_SCALE a
	children n
	cubes m
	initialPose o
	skipDraw l
	visible k
	x b
	xRot e
	xScale h
	y c
	yRot f
	yScale i
	z d
	zRot g
	zScale j
	compile (Lcom/mojang/blaze3d/vertex/PoseStack$Pose;Lcom/mojang/blaze3d/vertex/VertexConsumer;IIFFFF)V a
	copyFrom (Lnet/minecraft/client/model/geom/ModelPart;)V a
	getAllParts ()Ljava/util/stream/Stream; e
	getChild (Ljava/lang/String;)Lnet/minecraft/client/model/geom/ModelPart; b
	getInitialPose ()Lnet/minecraft/client/model/geom/PartPose; b
	getRandomCube (Lnet/minecraft/util/RandomSource;)Lnet/minecraft/client/model/geom/ModelPart$Cube; a
	hasChild (Ljava/lang/String;)Z a
	isEmpty ()Z d
	loadPose (Lnet/minecraft/client/model/geom/PartPose;)V b
	offsetPos (Lorg/joml/Vector3f;)V a
	offsetRotation (Lorg/joml/Vector3f;)V b
	offsetScale (Lorg/joml/Vector3f;)V c
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lcom/mojang/blaze3d/vertex/VertexConsumer;II)V a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lcom/mojang/blaze3d/vertex/VertexConsumer;IIFFFF)V a
	resetPose ()V c
	setInitialPose (Lnet/minecraft/client/model/geom/PartPose;)V a
	setPos (FFF)V a
	setRotation (FFF)V b
	storePose ()Lnet/minecraft/client/model/geom/PartPose; a
	translateAndRotate (Lcom/mojang/blaze3d/vertex/PoseStack;)V a
	visit (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/model/geom/ModelPart$Visitor;)V a
	visit (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/model/geom/ModelPart$Visitor;Ljava/lang/String;)V a
net/minecraft/client/model/geom/ModelPart$Cube fee$a
	maxX d
	maxY e
	maxZ f
	minX a
	minY b
	minZ c
	polygons g
	compile (Lcom/mojang/blaze3d/vertex/PoseStack$Pose;Lcom/mojang/blaze3d/vertex/VertexConsumer;IIFFFF)V a
net/minecraft/client/model/geom/ModelPart$Polygon fee$b
	normal b
	vertices a
net/minecraft/client/model/geom/ModelPart$Vertex fee$c
	pos a
	u b
	v c
	remap (FF)Lnet/minecraft/client/model/geom/ModelPart$Vertex; a
net/minecraft/client/model/geom/ModelPart$Visitor fee$d
net/minecraft/client/model/geom/PartNames fef
	ARMS R
	BACK_FIN V
	BEAK U
	BODY ab
	BONE au
	BOTTOM_FIN d
	CROAKING_BODY ai
	CUBE T
	EYES ap
	HAT aa
	HAT_RIM ac
	HEAD Z
	JACKET ad
	JAW P
	LEFT_ARM h
	LEFT_BLUE_FIN f
	LEFT_CHEST J
	LEFT_EAR p
	LEFT_EYE N
	LEFT_FIN a
	LEFT_FOOT an
	LEFT_FRONT_FOOT B
	LEFT_FRONT_LEG x
	LEFT_FRONT_LEG_TIP F
	LEFT_GILLS af
	LEFT_HAND al
	LEFT_HIND_FOOT z
	LEFT_HIND_LEG t
	LEFT_HIND_LEG_TIP D
	LEFT_HORN L
	LEFT_LEG r
	LEFT_LID H
	LEFT_MID_LEG v
	LEFT_RIBCAGE at
	LEFT_TENDRIL ar
	LEFT_WING j
	LEFT_WING_BASE l
	LEFT_WING_TIP n
	MANE W
	MOUTH Y
	NECK X
	NOSE Q
	RIGHT_ARM i
	RIGHT_BLUE_FIN g
	RIGHT_CHEST K
	RIGHT_EAR q
	RIGHT_EYE O
	RIGHT_FIN b
	RIGHT_FOOT ao
	RIGHT_FRONT_FOOT C
	RIGHT_FRONT_LEG y
	RIGHT_FRONT_LEG_TIP G
	RIGHT_GILLS ag
	RIGHT_HAND am
	RIGHT_HIND_FOOT A
	RIGHT_HIND_LEG u
	RIGHT_HIND_LEG_TIP E
	RIGHT_HORN M
	RIGHT_LEG s
	RIGHT_LID I
	RIGHT_MID_LEG w
	RIGHT_RIBCAGE as
	RIGHT_TENDRIL aq
	RIGHT_WING k
	RIGHT_WING_BASE m
	RIGHT_WING_TIP o
	ROOT ah
	TAIL S
	TAIL_FIN e
	TONGUE aj
	TONGUE_R1 ak
	TOP_FIN c
	TOP_GILLS ae
net/minecraft/client/model/geom/PartPose feg
	ZERO a
	x b
	xRot e
	y c
	yRot f
	z d
	zRot g
	offset (FFF)Lnet/minecraft/client/model/geom/PartPose; a
	offsetAndRotation (FFFFFF)Lnet/minecraft/client/model/geom/PartPose; a
	rotation (FFF)Lnet/minecraft/client/model/geom/PartPose; b
net/minecraft/client/model/geom/builders/CubeDefinition feh
	comment a
	dimensions c
	grow d
	mirror e
	origin b
	texCoord f
	texScale g
	visibleFaces h
	bake (II)Lnet/minecraft/client/model/geom/ModelPart$Cube; a
net/minecraft/client/model/geom/builders/CubeDeformation fei
	NONE a
	growX b
	growY c
	growZ d
	extend (F)Lnet/minecraft/client/model/geom/builders/CubeDeformation; a
	extend (FFF)Lnet/minecraft/client/model/geom/builders/CubeDeformation; a
net/minecraft/client/model/geom/builders/CubeListBuilder fej
	ALL_VISIBLE a
	cubes b
	mirror e
	xTexOffs c
	yTexOffs d
	addBox (FFFFFF)Lnet/minecraft/client/model/geom/builders/CubeListBuilder; a
	addBox (FFFFFFLjava/util/Set;)Lnet/minecraft/client/model/geom/builders/CubeListBuilder; a
	addBox (FFFFFFLnet/minecraft/client/model/geom/builders/CubeDeformation;)Lnet/minecraft/client/model/geom/builders/CubeListBuilder; a
	addBox (FFFFFFLnet/minecraft/client/model/geom/builders/CubeDeformation;FF)Lnet/minecraft/client/model/geom/builders/CubeListBuilder; a
	addBox (FFFFFFZ)Lnet/minecraft/client/model/geom/builders/CubeListBuilder; a
	addBox (Ljava/lang/String;FFFFFF)Lnet/minecraft/client/model/geom/builders/CubeListBuilder; a
	addBox (Ljava/lang/String;FFFFFFLnet/minecraft/client/model/geom/builders/CubeDeformation;)Lnet/minecraft/client/model/geom/builders/CubeListBuilder; a
	addBox (Ljava/lang/String;FFFIIIII)Lnet/minecraft/client/model/geom/builders/CubeListBuilder; a
	addBox (Ljava/lang/String;FFFIIILnet/minecraft/client/model/geom/builders/CubeDeformation;II)Lnet/minecraft/client/model/geom/builders/CubeListBuilder; a
	create ()Lnet/minecraft/client/model/geom/builders/CubeListBuilder; c
	getCubes ()Ljava/util/List; b
	mirror ()Lnet/minecraft/client/model/geom/builders/CubeListBuilder; a
	mirror (Z)Lnet/minecraft/client/model/geom/builders/CubeListBuilder; a
	texOffs (II)Lnet/minecraft/client/model/geom/builders/CubeListBuilder; a
net/minecraft/client/model/geom/builders/LayerDefinition fek
	material b
	mesh a
	bakeRoot ()Lnet/minecraft/client/model/geom/ModelPart; a
	create (Lnet/minecraft/client/model/geom/builders/MeshDefinition;II)Lnet/minecraft/client/model/geom/builders/LayerDefinition; a
net/minecraft/client/model/geom/builders/MaterialDefinition fel
	xTexSize a
	yTexSize b
net/minecraft/client/model/geom/builders/MeshDefinition fem
	root a
	getRoot ()Lnet/minecraft/client/model/geom/builders/PartDefinition; a
net/minecraft/client/model/geom/builders/PartDefinition fen
	children c
	cubes a
	partPose b
	addOrReplaceChild (Ljava/lang/String;Lnet/minecraft/client/model/geom/builders/CubeListBuilder;Lnet/minecraft/client/model/geom/PartPose;)Lnet/minecraft/client/model/geom/builders/PartDefinition; a
	bake (II)Lnet/minecraft/client/model/geom/ModelPart; a
	getChild (Ljava/lang/String;)Lnet/minecraft/client/model/geom/builders/PartDefinition; a
net/minecraft/client/model/geom/builders/UVPair feo
	u a
	v b
	u ()F a
	v ()F b
net/minecraft/client/multiplayer/AccountProfileKeyPairManager fes
	LOGGER b
	MINIMUM_PROFILE_KEY_REFRESH_INTERVAL c
	PROFILE_KEY_PAIR_DIR d
	keyPair g
	nextProfileKeyRefreshTime h
	profileKeyPairPath f
	userApiService e
	fetchProfileKeyPair (Lcom/mojang/authlib/minecraft/UserApiService;)Lnet/minecraft/world/entity/player/ProfileKeyPair; a
	parsePublicKey (Lcom/mojang/authlib/yggdrasil/response/KeyPairResponse;)Lnet/minecraft/world/entity/player/ProfilePublicKey$Data; a
	prepareKeyPair ()Ljava/util/concurrent/CompletableFuture; a
	readOrFetchProfileKeyPair (Ljava/util/Optional;)Ljava/util/concurrent/CompletableFuture; a
	readProfileKeyPair ()Ljava/util/Optional; c
	shouldRefreshKeyPair ()Z b
	writeProfileKeyPair (Lnet/minecraft/world/entity/player/ProfileKeyPair;)V a
net/minecraft/client/multiplayer/ClientAdvancements fet
	LOGGER a
	advancements d
	listener f
	minecraft b
	progress e
	selectedTab g
	telemetryManager c
	getAdvancements ()Lnet/minecraft/advancements/AdvancementList; a
	setListener (Lnet/minecraft/client/multiplayer/ClientAdvancements$Listener;)V a
	setSelectedTab (Lnet/minecraft/advancements/Advancement;Z)V a
	update (Lnet/minecraft/network/protocol/game/ClientboundUpdateAdvancementsPacket;)V a
net/minecraft/client/multiplayer/ClientAdvancements$Listener fet$a
	onSelectedTabChanged (Lnet/minecraft/advancements/Advancement;)V e
	onUpdateAdvancementProgress (Lnet/minecraft/advancements/Advancement;Lnet/minecraft/advancements/AdvancementProgress;)V a
net/minecraft/client/multiplayer/ClientChunkCache feu
	LOGGER a
	emptyChunk b
	level e
	lightEngine c
	storage d
	calculateStorageRange (I)I b
	drop (II)V d
	gatherStats ()Ljava/lang/String; e
	getChunk (IILnet/minecraft/world/level/chunk/ChunkStatus;Z)Lnet/minecraft/world/level/chunk/ChunkAccess; a
	getChunk (IILnet/minecraft/world/level/chunk/ChunkStatus;Z)Lnet/minecraft/world/level/chunk/LevelChunk; b
	getLevel ()Lnet/minecraft/world/level/BlockGetter; q
	getLightEngine ()Lnet/minecraft/world/level/lighting/LevelLightEngine; p
	getLoadedChunksCount ()I j
	isValidChunk (Lnet/minecraft/world/level/chunk/LevelChunk;II)Z a
	onLightUpdate (Lnet/minecraft/world/level/LightLayer;Lnet/minecraft/core/SectionPos;)V a
	replaceBiomes (IILnet/minecraft/network/FriendlyByteBuf;)V a
	replaceWithPacketData (IILnet/minecraft/network/FriendlyByteBuf;Lnet/minecraft/nbt/CompoundTag;Ljava/util/function/Consumer;)Lnet/minecraft/world/level/chunk/LevelChunk; a
	tick (Ljava/util/function/BooleanSupplier;Z)V a
	updateViewCenter (II)V e
	updateViewRadius (I)V a
net/minecraft/client/multiplayer/ClientChunkCache$Storage feu$a
	chunkCount g
	chunkRadius c
	chunks b
	viewCenterX e
	viewCenterZ f
	viewRange d
	dumpChunks (Ljava/lang/String;)V a
	getChunk (I)Lnet/minecraft/world/level/chunk/LevelChunk; a
	getIndex (II)I a
	inRange (II)Z b
	replace (ILnet/minecraft/world/level/chunk/LevelChunk;)V a
	replace (ILnet/minecraft/world/level/chunk/LevelChunk;Lnet/minecraft/world/level/chunk/LevelChunk;)Lnet/minecraft/world/level/chunk/LevelChunk; a
net/minecraft/client/multiplayer/ClientHandshakePacketListenerImpl fev
	LOGGER a
	connection f
	localGameProfile g
	minecraft b
	minigameName j
	newWorld h
	parent d
	serverData c
	updateStatus e
	worldLoadDuration i
	authenticateServer (Ljava/lang/String;)Lnet/minecraft/network/chat/Component; b
	getMinecraftSessionService ()Lcom/mojang/authlib/minecraft/MinecraftSessionService; c
	handleCompression (Lnet/minecraft/network/protocol/login/ClientboundLoginCompressionPacket;)V a
	handleCustomQuery (Lnet/minecraft/network/protocol/login/ClientboundCustomQueryPacket;)V a
	handleDisconnect (Lnet/minecraft/network/protocol/login/ClientboundLoginDisconnectPacket;)V a
	handleGameProfile (Lnet/minecraft/network/protocol/login/ClientboundGameProfilePacket;)V a
	handleHello (Lnet/minecraft/network/protocol/login/ClientboundHelloPacket;)V a
	isAcceptingMessages ()Z a
	onDisconnect (Lnet/minecraft/network/chat/Component;)V a
	setMinigameName (Ljava/lang/String;)V a
net/minecraft/client/multiplayer/ClientLevel few
	CLOUD_COLOR L
	FLUID_PARTICLE_SPAWN_OFFSET b
	LIGHT_UPDATE_QUEUE_SIZE_THRESHOLD d
	LOGGER a
	MARKER_PARTICLE_ITEMS S
	NORMAL_LIGHT_UPDATES_PER_FRAME c
	blockStatePredictionHandler R
	chunkSource O
	clientLevelData F
	connection D
	effects G
	entityStorage f
	levelRenderer E
	lightUpdateQueue P
	mapData K
	minecraft H
	players I
	scoreboard J
	serverSimulationDistance Q
	skyFlashTime M
	tickingEntities e
	tintCaches N
	addAlwaysVisibleParticle (Lnet/minecraft/core/particles/ParticleOptions;DDDDDD)V b
	addAlwaysVisibleParticle (Lnet/minecraft/core/particles/ParticleOptions;ZDDDDDD)V b
	addDestroyBlockEffect (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V a
	addEntity (ILnet/minecraft/world/entity/Entity;)V b
	addMapData (Ljava/util/Map;)V a
	addParticle (Lnet/minecraft/core/particles/ParticleOptions;DDDDDD)V a
	addParticle (Lnet/minecraft/core/particles/ParticleOptions;ZDDDDDD)V a
	addPlayer (ILnet/minecraft/client/player/AbstractClientPlayer;)V a
	animateTick (III)V b
	calculateBlockTint (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/ColorResolver;)I b
	clearTintCaches ()V g
	createFireworks (DDDDDDLnet/minecraft/nbt/CompoundTag;)V a
	destroyBlockProgress (ILnet/minecraft/core/BlockPos;I)V a
	disconnect ()V U
	doAnimateTick (IIIILnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/block/Block;Lnet/minecraft/core/BlockPos$MutableBlockPos;)V a
	effects ()Lnet/minecraft/client/renderer/DimensionSpecialEffects; d
	enabledFeatures ()Lnet/minecraft/world/flag/FeatureFlagSet; G
	entitiesForRendering ()Ljava/lang/Iterable; e
	fillReportDetails (Lnet/minecraft/CrashReport;)Lnet/minecraft/CrashReportCategory; a
	gameEvent (Lnet/minecraft/world/level/gameevent/GameEvent;Lnet/minecraft/world/phys/Vec3;Lnet/minecraft/world/level/gameevent/GameEvent$Context;)V a
	gatherChunkSourceStats ()Ljava/lang/String; F
	getAllMapData ()Ljava/util/Map; l
	getBlockStatePredictionHandler ()Lnet/minecraft/client/multiplayer/prediction/BlockStatePredictionHandler; a
	getBlockTicks ()Lnet/minecraft/world/ticks/LevelTickAccess; L
	getBlockTint (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/ColorResolver;)I a
	getChunkSource ()Lnet/minecraft/client/multiplayer/ClientChunkCache; i
	getChunkSource ()Lnet/minecraft/world/level/chunk/ChunkSource; J
	getCloudColor (F)Lnet/minecraft/world/phys/Vec3; h
	getEntities ()Lnet/minecraft/world/level/entity/LevelEntityGetter; E
	getEntity (I)Lnet/minecraft/world/entity/Entity; a
	getEntityCount ()I h
	getFluidTicks ()Lnet/minecraft/world/ticks/LevelTickAccess; K
	getFreeMapId ()I t
	getLevelData ()Lnet/minecraft/client/multiplayer/ClientLevel$ClientLevelData; k
	getLevelData ()Lnet/minecraft/world/level/storage/LevelData; u_
	getMapData (Ljava/lang/String;)Lnet/minecraft/world/level/saveddata/maps/MapItemSavedData; a
	getMarkerParticleTarget ()Lnet/minecraft/world/level/block/Block; p
	getRecipeManager ()Lnet/minecraft/world/item/crafting/RecipeManager; q
	getScoreboard ()Lnet/minecraft/world/scores/Scoreboard; I
	getServerSimulationDistance ()I m
	getShade (Lnet/minecraft/core/Direction;Z)F a
	getSkyColor (Lnet/minecraft/world/phys/Vec3;F)Lnet/minecraft/world/phys/Vec3; a
	getSkyDarken (F)F g
	getSkyFlashTime ()I j
	getStarBrightness (F)F i
	getUncachedNoiseBiome (III)Lnet/minecraft/core/Holder; a
	globalLevelEvent (ILnet/minecraft/core/BlockPos;I)V b
	handleBlockChangedAck (I)V b
	hasChunk (II)Z b
	isLightUpdateQueueEmpty ()Z c
	levelEvent (Lnet/minecraft/world/entity/player/Player;ILnet/minecraft/core/BlockPos;I)V a
	onChunkLoaded (Lnet/minecraft/world/level/ChunkPos;)V a
	overrideMapData (Ljava/lang/String;Lnet/minecraft/world/level/saveddata/maps/MapItemSavedData;)V b
	playLocalSound (DDDLnet/minecraft/sounds/SoundEvent;Lnet/minecraft/sounds/SoundSource;FFZ)V a
	playSeededSound (Lnet/minecraft/world/entity/player/Player;DDDLnet/minecraft/core/Holder;Lnet/minecraft/sounds/SoundSource;FFJ)V a
	playSeededSound (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/entity/Entity;Lnet/minecraft/core/Holder;Lnet/minecraft/sounds/SoundSource;FFJ)V a
	playSound (DDDLnet/minecraft/sounds/SoundEvent;Lnet/minecraft/sounds/SoundSource;FFZJ)V a
	players ()Ljava/util/List; v
	pollLightUpdates ()V b
	putNonPlayerEntity (ILnet/minecraft/world/entity/Entity;)V a
	queueLightUpdate (Ljava/lang/Runnable;)V a
	removeEntity (ILnet/minecraft/world/entity/Entity$RemovalReason;)V a
	sendBlockUpdated (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/state/BlockState;I)V a
	sendPacketToServer (Lnet/minecraft/network/protocol/Packet;)V a
	setBlock (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;II)Z a
	setBlocksDirty (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/state/BlockState;)V b
	setDayTime (J)V c
	setDefaultSpawnPos (Lnet/minecraft/core/BlockPos;F)V a
	setGameTime (J)V b
	setMapData (Ljava/lang/String;Lnet/minecraft/world/level/saveddata/maps/MapItemSavedData;)V a
	setScoreboard (Lnet/minecraft/world/scores/Scoreboard;)V a
	setSectionDirtyWithNeighbors (III)V c
	setServerSimulationDistance (I)V h
	setServerVerifiedBlockState (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;I)V b
	setSkyFlashTime (I)V c
	shouldTickDeath (Lnet/minecraft/world/entity/Entity;)Z h
	spawnFluidParticle (DDDDDLnet/minecraft/core/particles/ParticleOptions;)V a
	spawnParticle (Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/particles/ParticleOptions;Lnet/minecraft/world/phys/shapes/VoxelShape;D)V a
	syncBlockState (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/phys/Vec3;)V a
	tick (Ljava/util/function/BooleanSupplier;)V a
	tickEntities ()V f
	tickNonPassenger (Lnet/minecraft/world/entity/Entity;)V a
	tickPassenger (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/entity/Entity;)V a
	tickTime ()V o
	trySpawnDripParticles (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/particles/ParticleOptions;Z)V a
	unload (Lnet/minecraft/world/level/chunk/LevelChunk;)V a
net/minecraft/client/multiplayer/ClientLevel$ClientLevelData few$a
	dayTime i
	difficulty k
	difficultyLocked l
	gameRules b
	gameTime h
	hardcore a
	isFlat c
	raining j
	spawnAngle g
	xSpawn d
	ySpawn e
	zSpawn f
	fillCrashReportCategory (Lnet/minecraft/CrashReportCategory;Lnet/minecraft/world/level/LevelHeightAccessor;)V a
	getClearColorScale ()F g
	getDayTime ()J f
	getDifficulty ()Lnet/minecraft/world/Difficulty; s
	getGameRules ()Lnet/minecraft/world/level/GameRules; q
	getGameTime ()J e
	getHorizonHeight (Lnet/minecraft/world/level/LevelHeightAccessor;)D a
	getSpawnAngle ()F d
	getXSpawn ()I a
	getYSpawn ()I b
	getZSpawn ()I c
	isDifficultyLocked ()Z t
	isHardcore ()Z n
	isRaining ()Z k
	isThundering ()Z i
	setDayTime (J)V b
	setDifficulty (Lnet/minecraft/world/Difficulty;)V a
	setDifficultyLocked (Z)V a
	setGameTime (J)V a
	setRaining (Z)V b
	setSpawn (Lnet/minecraft/core/BlockPos;F)V a
	setSpawnAngle (F)V a
	setXSpawn (I)V b
	setYSpawn (I)V c
	setZSpawn (I)V d
net/minecraft/client/multiplayer/ClientLevel$EntityCallbacks few$b
	onCreated (Ljava/lang/Object;)V g
	onCreated (Lnet/minecraft/world/entity/Entity;)V a
	onDestroyed (Ljava/lang/Object;)V f
	onDestroyed (Lnet/minecraft/world/entity/Entity;)V b
	onSectionChange (Ljava/lang/Object;)V a
	onSectionChange (Lnet/minecraft/world/entity/Entity;)V g
	onTickingEnd (Ljava/lang/Object;)V d
	onTickingEnd (Lnet/minecraft/world/entity/Entity;)V d
	onTickingStart (Ljava/lang/Object;)V e
	onTickingStart (Lnet/minecraft/world/entity/Entity;)V c
	onTrackingEnd (Ljava/lang/Object;)V b
	onTrackingEnd (Lnet/minecraft/world/entity/Entity;)V f
	onTrackingStart (Ljava/lang/Object;)V c
	onTrackingStart (Lnet/minecraft/world/entity/Entity;)V e
net/minecraft/client/multiplayer/ClientPacketListener fex
	CHAT_VALIDATION_FAILED_ERROR f
	GENERIC_DISCONNECT_MESSAGE b
	INVALID_PACKET e
	LOGGER a
	PENDING_OFFSET_THRESHOLD g
	UNSECURE_SERVER_TOAST_TITLE c
	UNSERURE_SERVER_TOAST d
	advancements r
	callbackScreen l
	chatSession E
	commands x
	connection h
	debugQueryHandler t
	deferredPackets i
	enabledFeatures C
	id z
	lastSeenMessages G
	level n
	levelData o
	levels A
	listedPlayers q
	localGameProfile k
	messageSignatureCache H
	minecraft m
	playerInfoMap p
	random w
	recipeManager y
	registryAccess B
	serverChunkRadius u
	serverData j
	serverSimulationDistance v
	signedMessageEncoder F
	suggestionsProvider s
	telemetryManager D
	applyLightData (IILnet/minecraft/network/protocol/game/ClientboundLightUpdatePacketData;)V a
	applyPlayerInfoUpdate (Lnet/minecraft/network/protocol/game/ClientboundPlayerInfoUpdatePacket$Action;Lnet/minecraft/network/protocol/game/ClientboundPlayerInfoUpdatePacket$Entry;Lnet/minecraft/client/multiplayer/PlayerInfo;)V a
	close ()V e
	downloadCallback (Ljava/util/concurrent/CompletableFuture;)V a
	enableChunkLight (Lnet/minecraft/world/level/chunk/LevelChunk;II)V a
	enabledFeatures ()Lnet/minecraft/world/flag/FeatureFlagSet; t
	enforcesSecureChat ()Z u
	findTotem (Lnet/minecraft/world/entity/player/Player;)Lnet/minecraft/world/item/ItemStack; a
	getAdvancements ()Lnet/minecraft/client/multiplayer/ClientAdvancements; l
	getCommands ()Lcom/mojang/brigadier/CommandDispatcher; m
	getConnection ()Lnet/minecraft/network/Connection; g
	getDebugQueryHandler ()Lnet/minecraft/client/DebugQueryHandler; o
	getId ()Ljava/util/UUID; p
	getLevel ()Lnet/minecraft/client/multiplayer/ClientLevel; n
	getListedOnlinePlayers ()Ljava/util/Collection; h
	getLocalGameProfile ()Lcom/mojang/authlib/GameProfile; k
	getOnlinePlayerIds ()Ljava/util/Collection; j
	getOnlinePlayers ()Ljava/util/Collection; i
	getPlayerInfo (Ljava/lang/String;)Lnet/minecraft/client/multiplayer/PlayerInfo; a
	getPlayerInfo (Ljava/util/UUID;)Lnet/minecraft/client/multiplayer/PlayerInfo; a
	getRecipeManager ()Lnet/minecraft/world/item/crafting/RecipeManager; f
	getServerData ()Lnet/minecraft/client/multiplayer/ServerData; s
	getSuggestionsProvider ()Lnet/minecraft/client/multiplayer/ClientSuggestionProvider; d
	handleAddEntity (Lnet/minecraft/network/protocol/game/ClientboundAddEntityPacket;)V a
	handleAddExperienceOrb (Lnet/minecraft/network/protocol/game/ClientboundAddExperienceOrbPacket;)V a
	handleAddObjective (Lnet/minecraft/network/protocol/game/ClientboundSetObjectivePacket;)V a
	handleAddOrRemoveRecipes (Lnet/minecraft/network/protocol/game/ClientboundRecipePacket;)V a
	handleAddPlayer (Lnet/minecraft/network/protocol/game/ClientboundAddPlayerPacket;)V a
	handleAnimate (Lnet/minecraft/network/protocol/game/ClientboundAnimatePacket;)V a
	handleAwardStats (Lnet/minecraft/network/protocol/game/ClientboundAwardStatsPacket;)V a
	handleBlockChangedAck (Lnet/minecraft/network/protocol/game/ClientboundBlockChangedAckPacket;)V a
	handleBlockDestruction (Lnet/minecraft/network/protocol/game/ClientboundBlockDestructionPacket;)V a
	handleBlockEntityData (Lnet/minecraft/network/protocol/game/ClientboundBlockEntityDataPacket;)V a
	handleBlockEvent (Lnet/minecraft/network/protocol/game/ClientboundBlockEventPacket;)V a
	handleBlockUpdate (Lnet/minecraft/network/protocol/game/ClientboundBlockUpdatePacket;)V a
	handleBossUpdate (Lnet/minecraft/network/protocol/game/ClientboundBossEventPacket;)V a
	handleBundlePacket (Lnet/minecraft/network/protocol/game/ClientboundBundlePacket;)V a
	handleChangeDifficulty (Lnet/minecraft/network/protocol/game/ClientboundChangeDifficultyPacket;)V a
	handleChunkBlocksUpdate (Lnet/minecraft/network/protocol/game/ClientboundSectionBlocksUpdatePacket;)V a
	handleChunksBiomes (Lnet/minecraft/network/protocol/game/ClientboundChunksBiomesPacket;)V a
	handleCommandSuggestions (Lnet/minecraft/network/protocol/game/ClientboundCommandSuggestionsPacket;)V a
	handleCommands (Lnet/minecraft/network/protocol/game/ClientboundCommandsPacket;)V a
	handleContainerClose (Lnet/minecraft/network/protocol/game/ClientboundContainerClosePacket;)V a
	handleContainerContent (Lnet/minecraft/network/protocol/game/ClientboundContainerSetContentPacket;)V a
	handleContainerSetData (Lnet/minecraft/network/protocol/game/ClientboundContainerSetDataPacket;)V a
	handleContainerSetSlot (Lnet/minecraft/network/protocol/game/ClientboundContainerSetSlotPacket;)V a
	handleCustomChatCompletions (Lnet/minecraft/network/protocol/game/ClientboundCustomChatCompletionsPacket;)V a
	handleCustomPayload (Lnet/minecraft/network/protocol/game/ClientboundCustomPayloadPacket;)V a
	handleDamageEvent (Lnet/minecraft/network/protocol/game/ClientboundDamageEventPacket;)V a
	handleDeleteChat (Lnet/minecraft/network/protocol/game/ClientboundDeleteChatPacket;)V a
	handleDisconnect (Lnet/minecraft/network/protocol/game/ClientboundDisconnectPacket;)V a
	handleDisguisedChat (Lnet/minecraft/network/protocol/game/ClientboundDisguisedChatPacket;)V a
	handleEnabledFeatures (Lnet/minecraft/network/protocol/game/ClientboundUpdateEnabledFeaturesPacket;)V a
	handleEntityEvent (Lnet/minecraft/network/protocol/game/ClientboundEntityEventPacket;)V a
	handleEntityLinkPacket (Lnet/minecraft/network/protocol/game/ClientboundSetEntityLinkPacket;)V a
	handleExplosion (Lnet/minecraft/network/protocol/game/ClientboundExplodePacket;)V a
	handleForgetLevelChunk (Lnet/minecraft/network/protocol/game/ClientboundForgetLevelChunkPacket;)V a
	handleGameEvent (Lnet/minecraft/network/protocol/game/ClientboundGameEventPacket;)V a
	handleHorseScreenOpen (Lnet/minecraft/network/protocol/game/ClientboundHorseScreenOpenPacket;)V a
	handleHurtAnimation (Lnet/minecraft/network/protocol/game/ClientboundHurtAnimationPacket;)V a
	handleInitializeBorder (Lnet/minecraft/network/protocol/game/ClientboundInitializeBorderPacket;)V a
	handleItemCooldown (Lnet/minecraft/network/protocol/game/ClientboundCooldownPacket;)V a
	handleKeepAlive (Lnet/minecraft/network/protocol/game/ClientboundKeepAlivePacket;)V a
	handleLevelChunkWithLight (Lnet/minecraft/network/protocol/game/ClientboundLevelChunkWithLightPacket;)V a
	handleLevelEvent (Lnet/minecraft/network/protocol/game/ClientboundLevelEventPacket;)V a
	handleLightUpdatePacket (Lnet/minecraft/network/protocol/game/ClientboundLightUpdatePacket;)V a
	handleLogin (Lnet/minecraft/network/protocol/game/ClientboundLoginPacket;)V a
	handleLookAt (Lnet/minecraft/network/protocol/game/ClientboundPlayerLookAtPacket;)V a
	handleMapItemData (Lnet/minecraft/network/protocol/game/ClientboundMapItemDataPacket;)V a
	handleMerchantOffers (Lnet/minecraft/network/protocol/game/ClientboundMerchantOffersPacket;)V a
	handleMoveEntity (Lnet/minecraft/network/protocol/game/ClientboundMoveEntityPacket;)V a
	handleMovePlayer (Lnet/minecraft/network/protocol/game/ClientboundPlayerPositionPacket;)V a
	handleMoveVehicle (Lnet/minecraft/network/protocol/game/ClientboundMoveVehiclePacket;)V a
	handleOpenBook (Lnet/minecraft/network/protocol/game/ClientboundOpenBookPacket;)V a
	handleOpenScreen (Lnet/minecraft/network/protocol/game/ClientboundOpenScreenPacket;)V a
	handleOpenSignEditor (Lnet/minecraft/network/protocol/game/ClientboundOpenSignEditorPacket;)V a
	handleParticleEvent (Lnet/minecraft/network/protocol/game/ClientboundLevelParticlesPacket;)V a
	handlePing (Lnet/minecraft/network/protocol/game/ClientboundPingPacket;)V a
	handlePlaceRecipe (Lnet/minecraft/network/protocol/game/ClientboundPlaceGhostRecipePacket;)V a
	handlePlayerAbilities (Lnet/minecraft/network/protocol/game/ClientboundPlayerAbilitiesPacket;)V a
	handlePlayerChat (Lnet/minecraft/network/protocol/game/ClientboundPlayerChatPacket;)V a
	handlePlayerCombatEnd (Lnet/minecraft/network/protocol/game/ClientboundPlayerCombatEndPacket;)V a
	handlePlayerCombatEnter (Lnet/minecraft/network/protocol/game/ClientboundPlayerCombatEnterPacket;)V a
	handlePlayerCombatKill (Lnet/minecraft/network/protocol/game/ClientboundPlayerCombatKillPacket;)V a
	handlePlayerInfoRemove (Lnet/minecraft/network/protocol/game/ClientboundPlayerInfoRemovePacket;)V a
	handlePlayerInfoUpdate (Lnet/minecraft/network/protocol/game/ClientboundPlayerInfoUpdatePacket;)V a
	handleRemoveEntities (Lnet/minecraft/network/protocol/game/ClientboundRemoveEntitiesPacket;)V a
	handleRemoveMobEffect (Lnet/minecraft/network/protocol/game/ClientboundRemoveMobEffectPacket;)V a
	handleResourcePack (Lnet/minecraft/network/protocol/game/ClientboundResourcePackPacket;)V a
	handleRespawn (Lnet/minecraft/network/protocol/game/ClientboundRespawnPacket;)V a
	handleRotateMob (Lnet/minecraft/network/protocol/game/ClientboundRotateHeadPacket;)V a
	handleSelectAdvancementsTab (Lnet/minecraft/network/protocol/game/ClientboundSelectAdvancementsTabPacket;)V a
	handleServerData (Lnet/minecraft/network/protocol/game/ClientboundServerDataPacket;)V a
	handleSetBorderCenter (Lnet/minecraft/network/protocol/game/ClientboundSetBorderCenterPacket;)V a
	handleSetBorderLerpSize (Lnet/minecraft/network/protocol/game/ClientboundSetBorderLerpSizePacket;)V a
	handleSetBorderSize (Lnet/minecraft/network/protocol/game/ClientboundSetBorderSizePacket;)V a
	handleSetBorderWarningDelay (Lnet/minecraft/network/protocol/game/ClientboundSetBorderWarningDelayPacket;)V a
	handleSetBorderWarningDistance (Lnet/minecraft/network/protocol/game/ClientboundSetBorderWarningDistancePacket;)V a
	handleSetCamera (Lnet/minecraft/network/protocol/game/ClientboundSetCameraPacket;)V a
	handleSetCarriedItem (Lnet/minecraft/network/protocol/game/ClientboundSetCarriedItemPacket;)V a
	handleSetChunkCacheCenter (Lnet/minecraft/network/protocol/game/ClientboundSetChunkCacheCenterPacket;)V a
	handleSetChunkCacheRadius (Lnet/minecraft/network/protocol/game/ClientboundSetChunkCacheRadiusPacket;)V a
	handleSetDisplayObjective (Lnet/minecraft/network/protocol/game/ClientboundSetDisplayObjectivePacket;)V a
	handleSetEntityData (Lnet/minecraft/network/protocol/game/ClientboundSetEntityDataPacket;)V a
	handleSetEntityMotion (Lnet/minecraft/network/protocol/game/ClientboundSetEntityMotionPacket;)V a
	handleSetEntityPassengersPacket (Lnet/minecraft/network/protocol/game/ClientboundSetPassengersPacket;)V a
	handleSetEquipment (Lnet/minecraft/network/protocol/game/ClientboundSetEquipmentPacket;)V a
	handleSetExperience (Lnet/minecraft/network/protocol/game/ClientboundSetExperiencePacket;)V a
	handleSetHealth (Lnet/minecraft/network/protocol/game/ClientboundSetHealthPacket;)V a
	handleSetPlayerTeamPacket (Lnet/minecraft/network/protocol/game/ClientboundSetPlayerTeamPacket;)V a
	handleSetScore (Lnet/minecraft/network/protocol/game/ClientboundSetScorePacket;)V a
	handleSetSimulationDistance (Lnet/minecraft/network/protocol/game/ClientboundSetSimulationDistancePacket;)V a
	handleSetSpawn (Lnet/minecraft/network/protocol/game/ClientboundSetDefaultSpawnPositionPacket;)V a
	handleSetTime (Lnet/minecraft/network/protocol/game/ClientboundSetTimePacket;)V a
	handleSoundEntityEvent (Lnet/minecraft/network/protocol/game/ClientboundSoundEntityPacket;)V a
	handleSoundEvent (Lnet/minecraft/network/protocol/game/ClientboundSoundPacket;)V a
	handleStopSoundEvent (Lnet/minecraft/network/protocol/game/ClientboundStopSoundPacket;)V a
	handleSystemChat (Lnet/minecraft/network/protocol/game/ClientboundSystemChatPacket;)V a
	handleTabListCustomisation (Lnet/minecraft/network/protocol/game/ClientboundTabListPacket;)V a
	handleTagQueryPacket (Lnet/minecraft/network/protocol/game/ClientboundTagQueryPacket;)V a
	handleTakeItemEntity (Lnet/minecraft/network/protocol/game/ClientboundTakeItemEntityPacket;)V a
	handleTeleportEntity (Lnet/minecraft/network/protocol/game/ClientboundTeleportEntityPacket;)V a
	handleTitlesClear (Lnet/minecraft/network/protocol/game/ClientboundClearTitlesPacket;)V a
	handleUpdateAdvancementsPacket (Lnet/minecraft/network/protocol/game/ClientboundUpdateAdvancementsPacket;)V a
	handleUpdateAttributes (Lnet/minecraft/network/protocol/game/ClientboundUpdateAttributesPacket;)V a
	handleUpdateMobEffect (Lnet/minecraft/network/protocol/game/ClientboundUpdateMobEffectPacket;)V a
	handleUpdateRecipes (Lnet/minecraft/network/protocol/game/ClientboundUpdateRecipesPacket;)V a
	handleUpdateTags (Lnet/minecraft/network/protocol/game/ClientboundUpdateTagsPacket;)V a
	initializeChatSession (Lnet/minecraft/network/protocol/game/ClientboundPlayerInfoUpdatePacket$Entry;Lnet/minecraft/client/multiplayer/PlayerInfo;)V a
	isAcceptingMessages ()Z a
	isFeatureEnabled (Lnet/minecraft/world/flag/FeatureFlagSet;)Z a
	levels ()Ljava/util/Set; q
	markMessageAsProcessed (Lnet/minecraft/network/chat/PlayerChatMessage;Z)V a
	onDisconnect (Lnet/minecraft/network/chat/Component;)V a
	parseCommand (Ljava/lang/String;)Lcom/mojang/brigadier/ParseResults; f
	parseResourcePackUrl (Ljava/lang/String;)Ljava/net/URL; e
	postAddEntitySoundInstance (Lnet/minecraft/world/entity/Entity;)V a
	preparePackPrompt (Lnet/minecraft/network/chat/Component;Lnet/minecraft/network/chat/Component;)Lnet/minecraft/network/chat/Component; a
	queueLightRemoval (Lnet/minecraft/network/protocol/game/ClientboundForgetLevelChunkPacket;)V b
	readSectionList (IILnet/minecraft/world/level/lighting/LevelLightEngine;Lnet/minecraft/world/level/LightLayer;Ljava/util/BitSet;Ljava/util/BitSet;Ljava/util/Iterator;)V a
	registryAccess ()Lnet/minecraft/core/RegistryAccess; r
	send (Lnet/minecraft/network/protocol/Packet;)V a
	send (Lnet/minecraft/network/protocol/game/ServerboundResourcePackPacket$Action;)V a
	sendChat (Ljava/lang/String;)V b
	sendChatAcknowledgement ()V w
	sendCommand (Ljava/lang/String;)V c
	sendDeferredPackets ()V v
	sendUnsignedCommand (Ljava/lang/String;)Z d
	sendWhen (Lnet/minecraft/network/protocol/Packet;Ljava/util/function/BooleanSupplier;Ljava/time/Duration;)V a
	setActionBarText (Lnet/minecraft/network/protocol/game/ClientboundSetActionBarTextPacket;)V a
	setKeyPair (Lnet/minecraft/world/entity/player/ProfileKeyPair;)V a
	setSubtitleText (Lnet/minecraft/network/protocol/game/ClientboundSetSubtitleTextPacket;)V a
	setTitleText (Lnet/minecraft/network/protocol/game/ClientboundSetTitleTextPacket;)V a
	setTitlesAnimation (Lnet/minecraft/network/protocol/game/ClientboundSetTitlesAnimationPacket;)V a
	tick ()V c
	updateLevelChunk (IILnet/minecraft/network/protocol/game/ClientboundLevelChunkPacketData;)V a
	updateTagsForRegistry (Lnet/minecraft/resources/ResourceKey;Lnet/minecraft/tags/TagNetworkSerialization$NetworkPayload;)V a
net/minecraft/client/multiplayer/ClientPacketListener$DeferredPacket fex$a
	expirationTime c
	packet a
	sendCondition b
	expirationTime ()J c
	packet ()Lnet/minecraft/network/protocol/Packet; a
	sendCondition ()Ljava/util/function/BooleanSupplier; b
net/minecraft/client/multiplayer/ClientRegistryLayer fey
	$VALUES e
	REMOTE b
	STATIC a
	STATIC_ACCESS d
	VALUES c
	$values ()[Lnet/minecraft/client/multiplayer/ClientRegistryLayer; b
	createRegistryAccess ()Lnet/minecraft/core/LayeredRegistryAccess; a
net/minecraft/client/multiplayer/ClientSuggestionProvider fez
	connection a
	customCompletionSuggestions e
	minecraft b
	pendingSuggestionsFuture d
	pendingSuggestionsId c
	completeCustomSuggestions (ILcom/mojang/brigadier/suggestion/Suggestions;)V a
	customSuggestion (Lcom/mojang/brigadier/context/CommandContext;)Ljava/util/concurrent/CompletableFuture; a
	enabledFeatures ()Lnet/minecraft/world/flag/FeatureFlagSet; w
	getAbsoluteCoordinates ()Ljava/util/Collection; A
	getAllTeams ()Ljava/util/Collection; r
	getAvailableSounds ()Ljava/util/stream/Stream; s
	getCustomTabSugggestions ()Ljava/util/Collection; x
	getOnlinePlayerNames ()Ljava/util/Collection; q
	getRecipeNames ()Ljava/util/stream/Stream; t
	getRelevantCoordinates ()Ljava/util/Collection; z
	getSelectedEntities ()Ljava/util/Collection; y
	hasPermission (I)Z c
	levels ()Ljava/util/Set; u
	modifyCustomCompletions (Lnet/minecraft/network/protocol/game/ClientboundCustomChatCompletionsPacket$Action;Ljava/util/List;)V a
	prettyPrint (D)Ljava/lang/String; a
	prettyPrint (I)Ljava/lang/String; a
	registryAccess ()Lnet/minecraft/core/RegistryAccess; v
	suggestRegistryElements (Lnet/minecraft/resources/ResourceKey;Lnet/minecraft/commands/SharedSuggestionProvider$ElementSuggestionType;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Lcom/mojang/brigadier/context/CommandContext;)Ljava/util/concurrent/CompletableFuture; a
net/minecraft/client/multiplayer/MultiPlayerGameMode ffa
	LOGGER a
	carriedIndex l
	connection c
	destroyBlockPos d
	destroyDelay h
	destroyProgress f
	destroyTicks g
	destroyingItem e
	isDestroying i
	localPlayerMode j
	minecraft b
	previousLocalPlayerMode k
	adjustPlayer (Lnet/minecraft/world/entity/player/Player;)V a
	attack (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/entity/Entity;)V a
	canHurtPlayer ()Z a
	continueDestroyBlock (Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;)Z b
	createPlayer (Lnet/minecraft/client/multiplayer/ClientLevel;Lnet/minecraft/stats/StatsCounter;Lnet/minecraft/client/ClientRecipeBook;)Lnet/minecraft/client/player/LocalPlayer; a
	createPlayer (Lnet/minecraft/client/multiplayer/ClientLevel;Lnet/minecraft/stats/StatsCounter;Lnet/minecraft/client/ClientRecipeBook;ZZ)Lnet/minecraft/client/player/LocalPlayer; a
	destroyBlock (Lnet/minecraft/core/BlockPos;)Z a
	ensureHasSentCarriedItem ()V o
	getDestroyStage ()I n
	getPickRange ()F c
	getPlayerMode ()Lnet/minecraft/world/level/GameType; l
	getPreviousPlayerMode ()Lnet/minecraft/world/level/GameType; k
	handleCreativeModeItemAdd (Lnet/minecraft/world/item/ItemStack;I)V a
	handleCreativeModeItemDrop (Lnet/minecraft/world/item/ItemStack;)V a
	handleInventoryButtonClick (II)V a
	handleInventoryMouseClick (IIILnet/minecraft/world/inventory/ClickType;Lnet/minecraft/world/entity/player/Player;)V a
	handlePickItem (I)V a
	handlePlaceRecipe (ILnet/minecraft/world/item/crafting/Recipe;Z)V a
	hasExperience ()Z e
	hasFarPickRange ()Z h
	hasInfiniteItems ()Z g
	hasMissTime ()Z f
	interact (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResult; a
	interactAt (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/phys/EntityHitResult;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResult; a
	isAlwaysFlying ()Z j
	isDestroying ()Z m
	isServerControlledInventory ()Z i
	performUseItemOn (Lnet/minecraft/client/player/LocalPlayer;Lnet/minecraft/world/InteractionHand;Lnet/minecraft/world/phys/BlockHitResult;)Lnet/minecraft/world/InteractionResult; b
	releaseUsingItem (Lnet/minecraft/world/entity/player/Player;)V b
	sameDestroyTarget (Lnet/minecraft/core/BlockPos;)Z b
	setLocalMode (Lnet/minecraft/world/level/GameType;)V a
	setLocalMode (Lnet/minecraft/world/level/GameType;Lnet/minecraft/world/level/GameType;)V a
	startDestroyBlock (Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;)Z a
	startPrediction (Lnet/minecraft/client/multiplayer/ClientLevel;Lnet/minecraft/client/multiplayer/prediction/PredictiveAction;)V a
	stopDestroyBlock ()V b
	tick ()V d
	useItem (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResult; a
	useItemOn (Lnet/minecraft/client/player/LocalPlayer;Lnet/minecraft/world/InteractionHand;Lnet/minecraft/world/phys/BlockHitResult;)Lnet/minecraft/world/InteractionResult; a
net/minecraft/client/multiplayer/PlayerInfo ffb
	chatSession h
	gameMode c
	latency d
	messageValidator i
	pendingTextures e
	profile a
	skinModel f
	tabListDisplayName g
	textureLocations b
	clearChatSession (Z)V a
	fallbackMessageValidator (Z)Lnet/minecraft/network/chat/SignedMessageValidator; b
	getCapeLocation ()Lnet/minecraft/resources/ResourceLocation; k
	getChatSession ()Lnet/minecraft/network/chat/RemoteChatSession; b
	getElytraLocation ()Lnet/minecraft/resources/ResourceLocation; l
	getGameMode ()Lnet/minecraft/world/level/GameType; e
	getLatency ()I f
	getMessageValidator ()Lnet/minecraft/network/chat/SignedMessageValidator; c
	getModelName ()Ljava/lang/String; i
	getProfile ()Lcom/mojang/authlib/GameProfile; a
	getSkinLocation ()Lnet/minecraft/resources/ResourceLocation; j
	getTabListDisplayName ()Lnet/minecraft/network/chat/Component; o
	getTeam ()Lnet/minecraft/world/scores/PlayerTeam; m
	hasVerifiableChat ()Z d
	isCapeLoaded ()Z g
	isSkinLoaded ()Z h
	registerTextures ()V n
	setChatSession (Lnet/minecraft/network/chat/RemoteChatSession;)V a
	setGameMode (Lnet/minecraft/world/level/GameType;)V a
	setLatency (I)V a
	setTabListDisplayName (Lnet/minecraft/network/chat/Component;)V a
net/minecraft/client/multiplayer/ProfileKeyPairManager ffc
	EMPTY_KEY_MANAGER a
	create (Lcom/mojang/authlib/minecraft/UserApiService;Lnet/minecraft/client/User;Ljava/nio/file/Path;)Lnet/minecraft/client/multiplayer/ProfileKeyPairManager; a
	prepareKeyPair ()Ljava/util/concurrent/CompletableFuture; a
	shouldRefreshKeyPair ()Z b
net/minecraft/client/multiplayer/ServerData ffd
	LOGGER k
	enforcesSecureChat o
	iconBytes m
	ip b
	lan n
	motd d
	name a
	packStatus l
	ping f
	pinged i
	playerList j
	players e
	protocol g
	status c
	version h
	copyFrom (Lnet/minecraft/client/multiplayer/ServerData;)V b
	copyNameIconFrom (Lnet/minecraft/client/multiplayer/ServerData;)V a
	enforcesSecureChat ()Z e
	getIconBytes ()[B c
	getResourcePackStatus ()Lnet/minecraft/client/multiplayer/ServerData$ServerPackStatus; b
	isLan ()Z d
	read (Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/client/multiplayer/ServerData; a
	setEnforcesSecureChat (Z)V a
	setIconBytes ([B)V a
	setResourcePackStatus (Lnet/minecraft/client/multiplayer/ServerData$ServerPackStatus;)V a
	write ()Lnet/minecraft/nbt/CompoundTag; a
net/minecraft/client/multiplayer/ServerData$ServerPackStatus ffd$a
	$VALUES e
	DISABLED b
	ENABLED a
	PROMPT c
	name d
	$values ()[Lnet/minecraft/client/multiplayer/ServerData$ServerPackStatus; b
	getName ()Lnet/minecraft/network/chat/Component; a
net/minecraft/client/multiplayer/ServerList ffe
	IO_MAILBOX b
	LOGGER a
	MAX_HIDDEN_SERVERS c
	hiddenServerList f
	minecraft d
	serverList e
	add (Lnet/minecraft/client/multiplayer/ServerData;Z)V a
	get (I)Lnet/minecraft/client/multiplayer/ServerData; a
	get (Ljava/lang/String;)Lnet/minecraft/client/multiplayer/ServerData; a
	load ()V a
	remove (Lnet/minecraft/client/multiplayer/ServerData;)V a
	replace (ILnet/minecraft/client/multiplayer/ServerData;)V a
	save ()V b
	saveSingleServer (Lnet/minecraft/client/multiplayer/ServerData;)V b
	set (Lnet/minecraft/client/multiplayer/ServerData;Ljava/util/List;)Z a
	size ()I c
	swap (II)V a
	unhide (Ljava/lang/String;)Lnet/minecraft/client/multiplayer/ServerData; b
net/minecraft/client/multiplayer/ServerStatusPinger fff
	CANT_CONNECT_MESSAGE c
	LOGGER b
	SPLITTER a
	connections d
	formatPlayerCount (II)Lnet/minecraft/network/chat/Component; a
	onPingFailed (Lnet/minecraft/network/chat/Component;Lnet/minecraft/client/multiplayer/ServerData;)V a
	pingLegacyServer (Ljava/net/InetSocketAddress;Lnet/minecraft/client/multiplayer/ServerData;)V a
	pingServer (Lnet/minecraft/client/multiplayer/ServerData;Ljava/lang/Runnable;)V a
	removeAll ()V b
	tick ()V a
net/minecraft/client/multiplayer/chat/ChatListener ffg
	delayedMessageQueue b
	messageDelay c
	minecraft a
	previousMessageTime d
	acceptNextDelayedMessage ()V b
	clearQueue ()V d
	evaluateTrustLevel (Lnet/minecraft/network/chat/PlayerChatMessage;Lnet/minecraft/network/chat/Component;Ljava/time/Instant;)Lnet/minecraft/client/multiplayer/chat/ChatTrustLevel; a
	guessChatUUID (Lnet/minecraft/network/chat/Component;)Ljava/util/UUID; a
	handleDisguisedChatMessage (Lnet/minecraft/network/chat/Component;Lnet/minecraft/network/chat/ChatType$Bound;)V a
	handleMessage (Lnet/minecraft/network/chat/MessageSignature;Ljava/util/function/BooleanSupplier;)V a
	handlePlayerChatMessage (Lnet/minecraft/network/chat/PlayerChatMessage;Lcom/mojang/authlib/GameProfile;Lnet/minecraft/network/chat/ChatType$Bound;)V a
	handleSystemMessage (Lnet/minecraft/network/chat/Component;Z)V a
	isSenderLocalPlayer (Ljava/util/UUID;)Z a
	logPlayerMessage (Lnet/minecraft/network/chat/PlayerChatMessage;Lnet/minecraft/network/chat/ChatType$Bound;Lcom/mojang/authlib/GameProfile;Lnet/minecraft/client/multiplayer/chat/ChatTrustLevel;)V a
	logSystemMessage (Lnet/minecraft/network/chat/Component;Ljava/time/Instant;)V a
	narrateChatMessage (Lnet/minecraft/network/chat/ChatType$Bound;Lnet/minecraft/network/chat/Component;)V a
	queueSize ()J c
	removeFromDelayedMessageQueue (Lnet/minecraft/network/chat/MessageSignature;)Z a
	setMessageDelay (D)V a
	showMessageToPlayer (Lnet/minecraft/network/chat/ChatType$Bound;Lnet/minecraft/network/chat/PlayerChatMessage;Lnet/minecraft/network/chat/Component;Lcom/mojang/authlib/GameProfile;ZLjava/time/Instant;)Z a
	tick ()V a
	willDelayMessages ()Z e
net/minecraft/client/multiplayer/chat/ChatListener$Message ffg$a
	handler b
	signature a
	accept ()Z a
	handler ()Ljava/util/function/BooleanSupplier; c
	signature ()Lnet/minecraft/network/chat/MessageSignature; b
net/minecraft/client/multiplayer/chat/ChatLog ffh
	buffer a
	nextId b
	codec (I)Lcom/mojang/serialization/Codec; a
	end ()I b
	index (I)I c
	loggedChatEvents ()Ljava/util/List; c
	lookup (I)Lnet/minecraft/client/multiplayer/chat/LoggedChatEvent; b
	push (Lnet/minecraft/client/multiplayer/chat/LoggedChatEvent;)V a
	size ()I d
	start ()I a
net/minecraft/client/multiplayer/chat/ChatTrustLevel ffi
	$VALUES f
	CODEC d
	MODIFIED b
	NOT_SECURE c
	SECURE a
	serializedName e
	$values ()[Lnet/minecraft/client/multiplayer/chat/ChatTrustLevel; b
	containsModifiedStyle (Lnet/minecraft/network/chat/Component;)Z a
	createTag (Lnet/minecraft/network/chat/PlayerChatMessage;)Lnet/minecraft/client/GuiMessageTag; a
	evaluate (Lnet/minecraft/network/chat/PlayerChatMessage;Lnet/minecraft/network/chat/Component;Ljava/time/Instant;)Lnet/minecraft/client/multiplayer/chat/ChatTrustLevel; a
	getSerializedName ()Ljava/lang/String; c
	isModified (Lnet/minecraft/network/chat/PlayerChatMessage;Lnet/minecraft/network/chat/Component;)Z a
	isModifiedStyle (Lnet/minecraft/network/chat/Style;)Z a
	isNotSecure ()Z a
net/minecraft/client/multiplayer/chat/LoggedChatEvent ffj
	CODEC a
	type ()Lnet/minecraft/client/multiplayer/chat/LoggedChatEvent$Type; a
net/minecraft/client/multiplayer/chat/LoggedChatEvent$Type ffj$a
	$VALUES e
	PLAYER a
	SYSTEM b
	codec d
	serializedName c
	$values ()[Lnet/minecraft/client/multiplayer/chat/LoggedChatEvent$Type; e
	codec ()Lcom/mojang/serialization/Codec; a
	getSerializedName ()Ljava/lang/String; c
net/minecraft/client/multiplayer/chat/LoggedChatMessage ffk
	canReport (Ljava/util/UUID;)Z a
	player (Lcom/mojang/authlib/GameProfile;Lnet/minecraft/network/chat/PlayerChatMessage;Lnet/minecraft/client/multiplayer/chat/ChatTrustLevel;)Lnet/minecraft/client/multiplayer/chat/LoggedChatMessage$Player; a
	system (Lnet/minecraft/network/chat/Component;Ljava/time/Instant;)Lnet/minecraft/client/multiplayer/chat/LoggedChatMessage$System; a
	toContentComponent ()Lnet/minecraft/network/chat/Component; b
	toNarrationComponent ()Lnet/minecraft/network/chat/Component; c
net/minecraft/client/multiplayer/chat/LoggedChatMessage$Player ffk$a
	CODEC b
	TIME_FORMATTER f
	message d
	profile c
	trustLevel e
	canReport (Ljava/util/UUID;)Z a
	getTimeComponent ()Lnet/minecraft/network/chat/Component; i
	message ()Lnet/minecraft/network/chat/PlayerChatMessage; g
	profile ()Lcom/mojang/authlib/GameProfile; f
	profileId ()Ljava/util/UUID; e
	toContentComponent ()Lnet/minecraft/network/chat/Component; b
	toHeadingComponent ()Lnet/minecraft/network/chat/Component; d
	toNarrationComponent ()Lnet/minecraft/network/chat/Component; c
	trustLevel ()Lnet/minecraft/client/multiplayer/chat/ChatTrustLevel; h
	type ()Lnet/minecraft/client/multiplayer/chat/LoggedChatEvent$Type; a
net/minecraft/client/multiplayer/chat/LoggedChatMessage$System ffk$b
	CODEC b
	message c
	timeStamp d
	canReport (Ljava/util/UUID;)Z a
	message ()Lnet/minecraft/network/chat/Component; d
	timeStamp ()Ljava/time/Instant; e
	toContentComponent ()Lnet/minecraft/network/chat/Component; b
	type ()Lnet/minecraft/client/multiplayer/chat/LoggedChatEvent$Type; a
net/minecraft/client/multiplayer/chat/report/AbuseReportSender ffm
	create (Lnet/minecraft/client/multiplayer/chat/report/ReportEnvironment;Lcom/mojang/authlib/minecraft/UserApiService;)Lnet/minecraft/client/multiplayer/chat/report/AbuseReportSender; a
	isEnabled ()Z a
	reportLimits ()Lcom/mojang/authlib/minecraft/report/AbuseReportLimits; b
	send (Ljava/util/UUID;Lcom/mojang/authlib/minecraft/report/AbuseReport;)Ljava/util/concurrent/CompletableFuture; a
net/minecraft/client/multiplayer/chat/report/AbuseReportSender$SendException ffm$a
net/minecraft/client/multiplayer/chat/report/AbuseReportSender$Services ffm$b
	HTTP_ERROR_TEXT d
	JSON_ERROR_TEXT e
	SERVICE_UNAVAILABLE_TEXT c
	environment a
	userApiService b
	environment ()Lnet/minecraft/client/multiplayer/chat/report/ReportEnvironment; c
	getErrorDescription (Lcom/mojang/authlib/exceptions/MinecraftClientException;)Lnet/minecraft/network/chat/Component; a
	getHttpErrorDescription (Lcom/mojang/authlib/exceptions/MinecraftClientHttpException;)Lnet/minecraft/network/chat/Component; a
	isEnabled ()Z a
	reportLimits ()Lcom/mojang/authlib/minecraft/report/AbuseReportLimits; b
	send (Ljava/util/UUID;Lcom/mojang/authlib/minecraft/report/AbuseReport;)Ljava/util/concurrent/CompletableFuture; a
	userApiService ()Lcom/mojang/authlib/minecraft/UserApiService; d
net/minecraft/client/multiplayer/chat/report/BanReason ffn
	$VALUES o
	DEFAMATION_IMPERSONATION_FALSE_INFORMATION f
	DRUGS g
	EXTREME_VIOLENCE_OR_GORE l
	FALSE_REPORTING b
	FRAUD h
	GENERIC_VIOLATION a
	HARASSMENT_OR_BULLYING e
	HATE_SPEECH c
	HATE_TERRORISM_NOTORIOUS_FIGURE d
	IMMINENT_HARM_TO_PERSON_OR_PROPERTY m
	NUDITY_OR_PORNOGRAPHY j
	SEXUALLY_INAPPROPRIATE k
	SPAM_OR_ADVERTISING i
	title n
	$values ()[Lnet/minecraft/client/multiplayer/chat/report/BanReason; b
	byId (I)Lnet/minecraft/client/multiplayer/chat/report/BanReason; a
	title ()Lnet/minecraft/network/chat/Component; a
net/minecraft/client/multiplayer/chat/report/ChatReportBuilder ffo
	limits b
	report a
	build (Lnet/minecraft/client/multiplayer/chat/report/ReportingContext;)Lcom/mojang/datafixers/util/Either; a
	buildEvidence (Lnet/minecraft/client/multiplayer/chat/ChatLog;)Lcom/mojang/authlib/minecraft/report/ReportEvidence; a
	buildReportedChatMessage (Lnet/minecraft/client/multiplayer/chat/LoggedChatMessage$Player;Z)Lcom/mojang/authlib/minecraft/report/ReportChatMessage; a
	checkBuildable ()Lnet/minecraft/client/multiplayer/chat/report/ChatReportBuilder$CannotBuildReason; g
	comments ()Ljava/lang/String; d
	copy ()Lnet/minecraft/client/multiplayer/chat/report/ChatReportBuilder; h
	hasContent ()Z f
	isReported (I)Z b
	reason ()Lnet/minecraft/client/multiplayer/chat/report/ReportReason; e
	report ()Lnet/minecraft/client/multiplayer/chat/report/ChatReportBuilder$ChatReport; a
	reportedMessages ()Lit/unimi/dsi/fastutil/ints/IntSet; c
	reportedProfileId ()Ljava/util/UUID; b
	setComments (Ljava/lang/String;)V a
	setReason (Lnet/minecraft/client/multiplayer/chat/report/ReportReason;)V a
	toggleReported (I)V a
net/minecraft/client/multiplayer/chat/report/ChatReportBuilder$CannotBuildReason ffo$a
	COMMENTS_TOO_LONG d
	NO_REASON a
	NO_REPORTED_MESSAGES b
	TOO_MANY_MESSAGES c
	message e
	message ()Lnet/minecraft/network/chat/Component; a
net/minecraft/client/multiplayer/chat/report/ChatReportBuilder$ChatReport ffo$b
	comments f
	createdAt c
	reason g
	reportId b
	reportedMessages e
	reportedProfileId d
	copy ()Lnet/minecraft/client/multiplayer/chat/report/ChatReportBuilder$ChatReport; a
	isReportedPlayer (Ljava/util/UUID;)Z a
	toggleReported (ILcom/mojang/authlib/minecraft/report/AbuseReportLimits;)V a
net/minecraft/client/multiplayer/chat/report/ChatReportBuilder$Result ffo$c
	id a
	report b
	id ()Ljava/util/UUID; a
	report ()Lcom/mojang/authlib/minecraft/report/AbuseReport; b
net/minecraft/client/multiplayer/chat/report/ChatReportContextBuilder ffp
	activeCollectors b
	leadingCount a
	acceptContext (Lnet/minecraft/network/chat/PlayerChatMessage;)Z b
	collectAllContext (Lnet/minecraft/client/multiplayer/chat/ChatLog;Lit/unimi/dsi/fastutil/ints/IntCollection;Lnet/minecraft/client/multiplayer/chat/report/ChatReportContextBuilder$Handler;)V a
	isActive ()Z a
	trackContext (Lnet/minecraft/network/chat/PlayerChatMessage;)V a
net/minecraft/client/multiplayer/chat/report/ChatReportContextBuilder$Collector ffp$a
	collectingChain d
	count e
	lastChainMessage c
	lastSeenSignatures b
	accept (Lnet/minecraft/network/chat/PlayerChatMessage;)Z a
	isComplete ()Z a
net/minecraft/client/multiplayer/chat/report/ChatReportContextBuilder$Handler ffp$b
net/minecraft/client/multiplayer/chat/report/ReportEnvironment ffq
	clientVersion a
	server b
	clientInfo ()Lcom/mojang/authlib/yggdrasil/request/AbuseReportRequest$ClientInfo; b
	clientVersion ()Ljava/lang/String; e
	create (Lnet/minecraft/client/multiplayer/chat/report/ReportEnvironment$Server;)Lnet/minecraft/client/multiplayer/chat/report/ReportEnvironment; a
	getClientVersion ()Ljava/lang/String; g
	local ()Lnet/minecraft/client/multiplayer/chat/report/ReportEnvironment; a
	realm (Lcom/mojang/realmsclient/dto/RealmsServer;)Lnet/minecraft/client/multiplayer/chat/report/ReportEnvironment; a
	realmInfo ()Lcom/mojang/authlib/yggdrasil/request/AbuseReportRequest$RealmInfo; d
	server ()Lnet/minecraft/client/multiplayer/chat/report/ReportEnvironment$Server; f
	thirdParty (Ljava/lang/String;)Lnet/minecraft/client/multiplayer/chat/report/ReportEnvironment; a
	thirdPartyServerInfo ()Lcom/mojang/authlib/yggdrasil/request/AbuseReportRequest$ThirdPartyServerInfo; c
net/minecraft/client/multiplayer/chat/report/ReportEnvironment$Server ffq$a
net/minecraft/client/multiplayer/chat/report/ReportEnvironment$Server$Realm ffq$a$a
	realmId a
	slotId b
	realmId ()J a
	slotId ()I b
net/minecraft/client/multiplayer/chat/report/ReportEnvironment$Server$ThirdParty ffq$a$b
	ip a
	ip ()Ljava/lang/String; a
net/minecraft/client/multiplayer/chat/report/ReportReason ffr
	$VALUES m
	ALCOHOL_TOBACCO_DRUGS i
	CHILD_SEXUAL_EXPLOITATION_OR_ABUSE c
	DEFAMATION_IMPERSONATION_FALSE_INFORMATION g
	HARASSMENT_OR_BULLYING f
	HATE_SPEECH a
	IMMINENT_HARM d
	NON_CONSENSUAL_INTIMATE_IMAGERY e
	SELF_HARM_OR_SUICIDE h
	TERRORISM_OR_VIOLENT_EXTREMISM b
	backendName j
	description l
	title k
	$values ()[Lnet/minecraft/client/multiplayer/chat/report/ReportReason; d
	backendName ()Ljava/lang/String; a
	description ()Lnet/minecraft/network/chat/Component; c
	title ()Lnet/minecraft/network/chat/Component; b
net/minecraft/client/multiplayer/chat/report/ReportingContext ffs
	LOG_CAPACITY a
	chatLog d
	chatReportDraft e
	environment c
	sender b
	chatLog ()Lnet/minecraft/client/multiplayer/chat/ChatLog; b
	create (Lnet/minecraft/client/multiplayer/chat/report/ReportEnvironment;Lcom/mojang/authlib/minecraft/UserApiService;)Lnet/minecraft/client/multiplayer/chat/report/ReportingContext; a
	draftReportHandled (Lnet/minecraft/client/Minecraft;Lnet/minecraft/client/gui/screens/Screen;Ljava/lang/Runnable;Z)V a
	hasDraftReport ()Z c
	hasDraftReportFor (Ljava/util/UUID;)Z a
	matches (Lnet/minecraft/client/multiplayer/chat/report/ReportEnvironment;)Z a
	sender ()Lnet/minecraft/client/multiplayer/chat/report/AbuseReportSender; a
	setChatReportDraft (Lnet/minecraft/client/multiplayer/chat/report/ChatReportBuilder$ChatReport;)V a
net/minecraft/client/multiplayer/prediction/BlockStatePredictionHandler ffv
	currentSequenceNr b
	isPredicting c
	serverVerifiedStates a
	currentSequence ()I b
	endPredictionsUpTo (ILnet/minecraft/client/multiplayer/ClientLevel;)V a
	isPredicting ()Z c
	retainKnownServerState (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/client/player/LocalPlayer;)V a
	startPredicting ()Lnet/minecraft/client/multiplayer/prediction/BlockStatePredictionHandler; a
	updateKnownServerState (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Z a
net/minecraft/client/multiplayer/prediction/BlockStatePredictionHandler$ServerVerifiedState ffv$a
	blockState c
	playerPos a
	sequence b
	setBlockState (Lnet/minecraft/world/level/block/state/BlockState;)V a
	setSequence (I)Lnet/minecraft/client/multiplayer/prediction/BlockStatePredictionHandler$ServerVerifiedState; a
net/minecraft/client/multiplayer/prediction/PredictiveAction ffw
net/minecraft/client/multiplayer/resolver/AddressCheck ffy
	createFromService ()Lnet/minecraft/client/multiplayer/resolver/AddressCheck; a
	isAllowed (Lnet/minecraft/client/multiplayer/resolver/ResolvedServerAddress;)Z a
	isAllowed (Lnet/minecraft/client/multiplayer/resolver/ServerAddress;)Z a
net/minecraft/client/multiplayer/resolver/ResolvedServerAddress ffz
	asInetSocketAddress ()Ljava/net/InetSocketAddress; d
	from (Ljava/net/InetSocketAddress;)Lnet/minecraft/client/multiplayer/resolver/ResolvedServerAddress; a
	getHostIp ()Ljava/lang/String; b
	getHostName ()Ljava/lang/String; a
	getPort ()I c
net/minecraft/client/multiplayer/resolver/ServerAddress fga
	INVALID c
	LOGGER a
	hostAndPort b
	getHost ()Ljava/lang/String; a
	getPort ()I b
	isValidAddress (Ljava/lang/String;)Z b
	parsePort (Ljava/lang/String;)I c
	parseString (Ljava/lang/String;)Lnet/minecraft/client/multiplayer/resolver/ServerAddress; a
net/minecraft/client/multiplayer/resolver/ServerAddressResolver fgb
	LOGGER a
	SYSTEM b
net/minecraft/client/multiplayer/resolver/ServerNameResolver fgc
	DEFAULT a
	addressCheck d
	redirectHandler c
	resolver b
	resolveAddress (Lnet/minecraft/client/multiplayer/resolver/ServerAddress;)Ljava/util/Optional; a
net/minecraft/client/multiplayer/resolver/ServerRedirectHandler fgd
	EMPTY b
	LOGGER a
net/minecraft/client/particle/AshParticle fgg
net/minecraft/client/particle/AshParticle$Provider fgg$a
	sprites a
	createParticle (Lnet/minecraft/core/particles/SimpleParticleType;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
net/minecraft/client/particle/AttackSweepParticle fgh
	sprites a
	getLightColor (F)I a
	getRenderType ()Lnet/minecraft/client/particle/ParticleRenderType; b
	tick ()V a
net/minecraft/client/particle/AttackSweepParticle$Provider fgh$a
	sprites a
	createParticle (Lnet/minecraft/core/particles/SimpleParticleType;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
net/minecraft/client/particle/BaseAshSmokeParticle fgi
	sprites a
	getQuadSize (F)F b
	getRenderType ()Lnet/minecraft/client/particle/ParticleRenderType; b
	tick ()V a
net/minecraft/client/particle/BlockMarker fgj
	getQuadSize (F)F b
	getRenderType ()Lnet/minecraft/client/particle/ParticleRenderType; b
net/minecraft/client/particle/BlockMarker$Provider fgj$a
	createParticle (Lnet/minecraft/core/particles/BlockParticleOption;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
net/minecraft/client/particle/BreakingItemParticle fgk
	uo a
	vo b
	getRenderType ()Lnet/minecraft/client/particle/ParticleRenderType; b
	getU0 ()F c
	getU1 ()F d
	getV0 ()F e
	getV1 ()F f
net/minecraft/client/particle/BreakingItemParticle$Provider fgk$a
	createParticle (Lnet/minecraft/core/particles/ItemParticleOption;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
net/minecraft/client/particle/BreakingItemParticle$SlimeProvider fgk$b
	createParticle (Lnet/minecraft/core/particles/SimpleParticleType;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
net/minecraft/client/particle/BreakingItemParticle$SnowballProvider fgk$c
	createParticle (Lnet/minecraft/core/particles/SimpleParticleType;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
net/minecraft/client/particle/BubbleColumnUpParticle fgl
	getRenderType ()Lnet/minecraft/client/particle/ParticleRenderType; b
	tick ()V a
net/minecraft/client/particle/BubbleColumnUpParticle$Provider fgl$a
	sprite a
	createParticle (Lnet/minecraft/core/particles/SimpleParticleType;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
net/minecraft/client/particle/BubbleParticle fgm
	getRenderType ()Lnet/minecraft/client/particle/ParticleRenderType; b
	tick ()V a
net/minecraft/client/particle/BubbleParticle$Provider fgm$a
	sprite a
	createParticle (Lnet/minecraft/core/particles/SimpleParticleType;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
net/minecraft/client/particle/BubblePopParticle fgn
	sprites a
	getRenderType ()Lnet/minecraft/client/particle/ParticleRenderType; b
	tick ()V a
net/minecraft/client/particle/BubblePopParticle$Provider fgn$a
	sprites a
	createParticle (Lnet/minecraft/core/particles/SimpleParticleType;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
net/minecraft/client/particle/CampfireSmokeParticle fgo
	getRenderType ()Lnet/minecraft/client/particle/ParticleRenderType; b
	tick ()V a
net/minecraft/client/particle/CampfireSmokeParticle$CosyProvider fgo$a
	sprites a
	createParticle (Lnet/minecraft/core/particles/SimpleParticleType;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
net/minecraft/client/particle/CampfireSmokeParticle$SignalProvider fgo$b
	sprites a
	createParticle (Lnet/minecraft/core/particles/SimpleParticleType;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
net/minecraft/client/particle/CherryParticle fgp
	ACCELERATION_SCALE a
	CURVE_ENDPOINT_TIME F
	FALL_ACC G
	INITIAL_LIFETIME b
	WIND_BIG H
	particleRandom J
	rotSpeed I
	spinAcceleration K
	getRenderType ()Lnet/minecraft/client/particle/ParticleRenderType; b
	tick ()V a
net/minecraft/client/particle/CritParticle fgq
	getQuadSize (F)F b
	getRenderType ()Lnet/minecraft/client/particle/ParticleRenderType; b
	tick ()V a
net/minecraft/client/particle/CritParticle$DamageIndicatorProvider fgq$a
	sprite a
	createParticle (Lnet/minecraft/core/particles/SimpleParticleType;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
net/minecraft/client/particle/CritParticle$MagicProvider fgq$b
	sprite a
	createParticle (Lnet/minecraft/core/particles/SimpleParticleType;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
net/minecraft/client/particle/CritParticle$Provider fgq$c
	sprite a
	createParticle (Lnet/minecraft/core/particles/SimpleParticleType;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
net/minecraft/client/particle/DragonBreathParticle fgr
	COLOR_MAX b
	COLOR_MAX_BLUE K
	COLOR_MAX_GREEN J
	COLOR_MAX_RED I
	COLOR_MIN a
	COLOR_MIN_BLUE H
	COLOR_MIN_GREEN G
	COLOR_MIN_RED F
	hasHitGround L
	sprites M
	getQuadSize (F)F b
	getRenderType ()Lnet/minecraft/client/particle/ParticleRenderType; b
	tick ()V a
net/minecraft/client/particle/DragonBreathParticle$Provider fgr$a
	sprites a
	createParticle (Lnet/minecraft/core/particles/SimpleParticleType;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
net/minecraft/client/particle/DripParticle fgs
	isGlowing a
	type b
	createDripstoneLavaFallParticle (Lnet/minecraft/core/particles/SimpleParticleType;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/TextureSheetParticle; l
	createDripstoneLavaHangParticle (Lnet/minecraft/core/particles/SimpleParticleType;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/TextureSheetParticle; k
	createDripstoneWaterFallParticle (Lnet/minecraft/core/particles/SimpleParticleType;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/TextureSheetParticle; j
	createDripstoneWaterHangParticle (Lnet/minecraft/core/particles/SimpleParticleType;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/TextureSheetParticle; i
	createHoneyFallParticle (Lnet/minecraft/core/particles/SimpleParticleType;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/TextureSheetParticle; g
	createHoneyHangParticle (Lnet/minecraft/core/particles/SimpleParticleType;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/TextureSheetParticle; f
	createHoneyLandParticle (Lnet/minecraft/core/particles/SimpleParticleType;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/TextureSheetParticle; h
	createLavaFallParticle (Lnet/minecraft/core/particles/SimpleParticleType;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/TextureSheetParticle; d
	createLavaHangParticle (Lnet/minecraft/core/particles/SimpleParticleType;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/TextureSheetParticle; c
	createLavaLandParticle (Lnet/minecraft/core/particles/SimpleParticleType;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/TextureSheetParticle; e
	createNectarFallParticle (Lnet/minecraft/core/particles/SimpleParticleType;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/TextureSheetParticle; m
	createObsidianTearFallParticle (Lnet/minecraft/core/particles/SimpleParticleType;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/TextureSheetParticle; p
	createObsidianTearHangParticle (Lnet/minecraft/core/particles/SimpleParticleType;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/TextureSheetParticle; o
	createObsidianTearLandParticle (Lnet/minecraft/core/particles/SimpleParticleType;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/TextureSheetParticle; q
	createSporeBlossomFallParticle (Lnet/minecraft/core/particles/SimpleParticleType;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/TextureSheetParticle; n
	createWaterFallParticle (Lnet/minecraft/core/particles/SimpleParticleType;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/TextureSheetParticle; b
	createWaterHangParticle (Lnet/minecraft/core/particles/SimpleParticleType;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/TextureSheetParticle; a
	getLightColor (F)I a
	getRenderType ()Lnet/minecraft/client/particle/ParticleRenderType; b
	getType ()Lnet/minecraft/world/level/material/Fluid; g
	postMoveUpdate ()V i
	preMoveUpdate ()V h
	tick ()V a
net/minecraft/client/particle/DripParticle$CoolingDripHangParticle fgs$a
	preMoveUpdate ()V h
net/minecraft/client/particle/DripParticle$DripHangParticle fgs$b
	fallingParticle b
	postMoveUpdate ()V i
	preMoveUpdate ()V h
net/minecraft/client/particle/DripParticle$DripLandParticle fgs$c
net/minecraft/client/particle/DripParticle$DripstoneFallAndLandParticle fgs$d
	postMoveUpdate ()V i
net/minecraft/client/particle/DripParticle$FallAndLandParticle fgs$e
	landParticle b
	postMoveUpdate ()V i
net/minecraft/client/particle/DripParticle$FallingParticle fgs$f
	postMoveUpdate ()V i
net/minecraft/client/particle/DripParticle$HoneyFallAndLandParticle fgs$g
	postMoveUpdate ()V i
net/minecraft/client/particle/DustColorTransitionParticle fgt
	fromColor a
	toColor b
	lerpColors (F)V f
	randomizeColor (Lorg/joml/Vector3f;F)Lorg/joml/Vector3f; a
	render (Lcom/mojang/blaze3d/vertex/VertexConsumer;Lnet/minecraft/client/Camera;F)V a
net/minecraft/client/particle/DustColorTransitionParticle$Provider fgt$a
	sprites a
	createParticle (Lnet/minecraft/core/particles/DustColorTransitionOptions;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
net/minecraft/client/particle/DustParticle fgu
net/minecraft/client/particle/DustParticle$Provider fgu$a
	sprites a
	createParticle (Lnet/minecraft/core/particles/DustParticleOptions;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
net/minecraft/client/particle/DustParticleBase fgv
	sprites a
	getQuadSize (F)F b
	getRenderType ()Lnet/minecraft/client/particle/ParticleRenderType; b
	randomizeColor (FF)F a
	tick ()V a
net/minecraft/client/particle/EnchantmentTableParticle fgw
	xStart a
	yStart b
	zStart F
	getLightColor (F)I a
	getRenderType ()Lnet/minecraft/client/particle/ParticleRenderType; b
	move (DDD)V a
	tick ()V a
net/minecraft/client/particle/EnchantmentTableParticle$NautilusProvider fgw$a
	sprite a
	createParticle (Lnet/minecraft/core/particles/SimpleParticleType;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
net/minecraft/client/particle/EnchantmentTableParticle$Provider fgw$b
	sprite a
	createParticle (Lnet/minecraft/core/particles/SimpleParticleType;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
net/minecraft/client/particle/EndRodParticle fgx
	move (DDD)V a
net/minecraft/client/particle/EndRodParticle$Provider fgx$a
	sprites a
	createParticle (Lnet/minecraft/core/particles/SimpleParticleType;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
net/minecraft/client/particle/ExplodeParticle fgy
	sprites a
	getRenderType ()Lnet/minecraft/client/particle/ParticleRenderType; b
	tick ()V a
net/minecraft/client/particle/ExplodeParticle$Provider fgy$a
	sprites a
	createParticle (Lnet/minecraft/core/particles/SimpleParticleType;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
net/minecraft/client/particle/FallingDustParticle fgz
	rotSpeed a
	sprites b
	getQuadSize (F)F b
	getRenderType ()Lnet/minecraft/client/particle/ParticleRenderType; b
	tick ()V a
net/minecraft/client/particle/FallingDustParticle$Provider fgz$a
	sprite a
	createParticle (Lnet/minecraft/core/particles/BlockParticleOption;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
net/minecraft/client/particle/FireworkParticles fha
net/minecraft/client/particle/FireworkParticles$FlashProvider fha$a
	sprite a
	createParticle (Lnet/minecraft/core/particles/SimpleParticleType;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
net/minecraft/client/particle/FireworkParticles$OverlayParticle fha$b
	getQuadSize (F)F b
	getRenderType ()Lnet/minecraft/client/particle/ParticleRenderType; b
	render (Lcom/mojang/blaze3d/vertex/VertexConsumer;Lnet/minecraft/client/Camera;F)V a
net/minecraft/client/particle/FireworkParticles$SparkParticle fha$c
	engine G
	fadeB J
	fadeG I
	fadeR H
	flicker F
	hasFade K
	trail b
	render (Lcom/mojang/blaze3d/vertex/VertexConsumer;Lnet/minecraft/client/Camera;F)V a
	setFlicker (Z)V b
	setTrail (Z)V a
	tick ()V a
net/minecraft/client/particle/FireworkParticles$SparkProvider fha$d
	sprites a
	createParticle (Lnet/minecraft/core/particles/SimpleParticleType;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
net/minecraft/client/particle/FireworkParticles$Starter fha$e
	engine b
	explosions D
	life a
	twinkleDelay E
	createParticle (DDDDDD[I[IZZ)V a
	createParticleBall (DI[I[IZZ)V a
	createParticleBurst ([I[IZZ)V a
	createParticleShape (D[[D[I[IZZZ)V a
	isFarAwayFromCamera ()Z c
	tick ()V a
net/minecraft/client/particle/FlameParticle fhb
	getLightColor (F)I a
	getQuadSize (F)F b
	getRenderType ()Lnet/minecraft/client/particle/ParticleRenderType; b
	move (DDD)V a
net/minecraft/client/particle/FlameParticle$Provider fhb$a
	sprite a
	createParticle (Lnet/minecraft/core/particles/SimpleParticleType;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
net/minecraft/client/particle/FlameParticle$SmallFlameProvider fhb$b
	sprite a
	createParticle (Lnet/minecraft/core/particles/SimpleParticleType;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
net/minecraft/client/particle/GlowParticle fhc
	RANDOM a
	sprites b
	getLightColor (F)I a
	getRenderType ()Lnet/minecraft/client/particle/ParticleRenderType; b
	tick ()V a
net/minecraft/client/particle/GlowParticle$ElectricSparkProvider fhc$a
	SPEED_FACTOR a
	sprite b
	createParticle (Lnet/minecraft/core/particles/SimpleParticleType;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
net/minecraft/client/particle/GlowParticle$GlowSquidProvider fhc$b
	sprite a
	createParticle (Lnet/minecraft/core/particles/SimpleParticleType;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
net/minecraft/client/particle/GlowParticle$ScrapeProvider fhc$c
	SPEED_FACTOR a
	sprite b
	createParticle (Lnet/minecraft/core/particles/SimpleParticleType;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
net/minecraft/client/particle/GlowParticle$WaxOffProvider fhc$d
	SPEED_FACTOR a
	sprite b
	createParticle (Lnet/minecraft/core/particles/SimpleParticleType;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
net/minecraft/client/particle/GlowParticle$WaxOnProvider fhc$e
	SPEED_FACTOR a
	sprite b
	createParticle (Lnet/minecraft/core/particles/SimpleParticleType;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
net/minecraft/client/particle/HeartParticle fhd
	getQuadSize (F)F b
	getRenderType ()Lnet/minecraft/client/particle/ParticleRenderType; b
net/minecraft/client/particle/HeartParticle$AngryVillagerProvider fhd$a
	sprite a
	createParticle (Lnet/minecraft/core/particles/SimpleParticleType;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
net/minecraft/client/particle/HeartParticle$Provider fhd$b
	sprite a
	createParticle (Lnet/minecraft/core/particles/SimpleParticleType;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
net/minecraft/client/particle/HugeExplosionParticle fhe
	sprites a
	getLightColor (F)I a
	getRenderType ()Lnet/minecraft/client/particle/ParticleRenderType; b
	tick ()V a
net/minecraft/client/particle/HugeExplosionParticle$Provider fhe$a
	sprites a
	createParticle (Lnet/minecraft/core/particles/SimpleParticleType;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
net/minecraft/client/particle/HugeExplosionSeedParticle fhf
	life a
	lifeTime b
	tick ()V a
net/minecraft/client/particle/HugeExplosionSeedParticle$Provider fhf$a
	createParticle (Lnet/minecraft/core/particles/SimpleParticleType;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
net/minecraft/client/particle/ItemPickupParticle fhg
	LIFE_TIME a
	entityRenderDispatcher G
	itemEntity D
	life F
	renderBuffers b
	target E
	getRenderType ()Lnet/minecraft/client/particle/ParticleRenderType; b
	getSafeCopy (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/world/entity/Entity; a
	render (Lcom/mojang/blaze3d/vertex/VertexConsumer;Lnet/minecraft/client/Camera;F)V a
	tick ()V a
net/minecraft/client/particle/LargeSmokeParticle fhh
net/minecraft/client/particle/LargeSmokeParticle$Provider fhh$a
	sprites a
	createParticle (Lnet/minecraft/core/particles/SimpleParticleType;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
net/minecraft/client/particle/LavaParticle fhi
	getLightColor (F)I a
	getQuadSize (F)F b
	getRenderType ()Lnet/minecraft/client/particle/ParticleRenderType; b
	tick ()V a
net/minecraft/client/particle/LavaParticle$Provider fhi$a
	sprite a
	createParticle (Lnet/minecraft/core/particles/SimpleParticleType;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
net/minecraft/client/particle/MobAppearanceParticle fhj
	model a
	renderType b
	getRenderType ()Lnet/minecraft/client/particle/ParticleRenderType; b
	render (Lcom/mojang/blaze3d/vertex/VertexConsumer;Lnet/minecraft/client/Camera;F)V a
net/minecraft/client/particle/MobAppearanceParticle$Provider fhj$a
	createParticle (Lnet/minecraft/core/particles/SimpleParticleType;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
net/minecraft/client/particle/NoRenderParticle fhk
	getRenderType ()Lnet/minecraft/client/particle/ParticleRenderType; b
	render (Lcom/mojang/blaze3d/vertex/VertexConsumer;Lnet/minecraft/client/Camera;F)V a
net/minecraft/client/particle/NoteParticle fhl
	getQuadSize (F)F b
	getRenderType ()Lnet/minecraft/client/particle/ParticleRenderType; b
net/minecraft/client/particle/NoteParticle$Provider fhl$a
	sprite a
	createParticle (Lnet/minecraft/core/particles/SimpleParticleType;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
net/minecraft/client/particle/Particle fhm
	INITIAL_AABB a
	MAXIMUM_COLLISION_VELOCITY_SQUARED b
	age s
	alpha y
	bCol x
	bb D
	bbHeight q
	bbWidth p
	friction B
	gCol w
	gravity u
	hasPhysics n
	level c
	lifetime t
	oRoll A
	onGround m
	rCol v
	random r
	removed o
	roll z
	speedUpWhenYMotionIsBlocked C
	stoppedByCollision E
	x g
	xd j
	xo d
	y h
	yd k
	yo e
	z i
	zd l
	zo f
	getBoundingBox ()Lnet/minecraft/world/phys/AABB; n
	getLifetime ()I j
	getLightColor (F)I a
	getParticleGroup ()Ljava/util/Optional; o
	getRenderType ()Lnet/minecraft/client/particle/ParticleRenderType; b
	isAlive ()Z m
	move (DDD)V a
	remove ()V k
	render (Lcom/mojang/blaze3d/vertex/VertexConsumer;Lnet/minecraft/client/Camera;F)V a
	scale (F)Lnet/minecraft/client/particle/Particle; d
	setAlpha (F)V e
	setBoundingBox (Lnet/minecraft/world/phys/AABB;)V a
	setColor (FFF)V a
	setLifetime (I)V a
	setLocationFromBoundingbox ()V l
	setParticleSpeed (DDD)V b
	setPos (DDD)V c
	setPower (F)Lnet/minecraft/client/particle/Particle; c
	setSize (FF)V b
	tick ()V a
net/minecraft/client/particle/ParticleDescription fhn
	textures a
	fromJson (Lcom/google/gson/JsonObject;)Lnet/minecraft/client/particle/ParticleDescription; a
	getTextures ()Ljava/util/List; a
net/minecraft/client/particle/ParticleEngine fho
	LOGGER b
	MAX_PARTICLES_PER_LAYER e
	PARTICLES_ATLAS_INFO d
	PARTICLE_LISTER c
	RENDER_ORDER f
	level a
	particles g
	particlesToAdd l
	providers k
	random j
	spriteSets m
	textureAtlas n
	textureManager i
	trackedParticleCounts o
	trackingEmitters h
	add (Lnet/minecraft/client/particle/Particle;)V a
	clearParticles ()V f
	close ()V a
	countParticles ()Ljava/lang/String; d
	crack (Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;)V a
	createParticle (Lnet/minecraft/core/particles/ParticleOptions;DDDDDD)Lnet/minecraft/client/particle/Particle; a
	createTrackingEmitter (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/core/particles/ParticleOptions;)V a
	createTrackingEmitter (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/core/particles/ParticleOptions;I)V a
	destroy (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V a
	hasSpaceInParticleLimit (Lnet/minecraft/core/particles/ParticleGroup;)Z a
	loadParticleDescription (Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/server/packs/resources/Resource;)Ljava/util/Optional; a
	makeParticle (Lnet/minecraft/core/particles/ParticleOptions;DDDDDD)Lnet/minecraft/client/particle/Particle; b
	register (Lnet/minecraft/core/particles/ParticleType;Lnet/minecraft/client/particle/ParticleEngine$SpriteParticleRegistration;)V a
	register (Lnet/minecraft/core/particles/ParticleType;Lnet/minecraft/client/particle/ParticleProvider$Sprite;)V a
	register (Lnet/minecraft/core/particles/ParticleType;Lnet/minecraft/client/particle/ParticleProvider;)V a
	registerProviders ()V e
	reload (Lnet/minecraft/server/packs/resources/PreparableReloadListener$PreparationBarrier;Lnet/minecraft/server/packs/resources/ResourceManager;Lnet/minecraft/util/profiling/ProfilerFiller;Lnet/minecraft/util/profiling/ProfilerFiller;Ljava/util/concurrent/Executor;Ljava/util/concurrent/Executor;)Ljava/util/concurrent/CompletableFuture; a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource$BufferSource;Lnet/minecraft/client/renderer/LightTexture;Lnet/minecraft/client/Camera;F)V a
	setLevel (Lnet/minecraft/client/multiplayer/ClientLevel;)V a
	tick ()V b
	tickParticle (Lnet/minecraft/client/particle/Particle;)V b
	tickParticleList (Ljava/util/Collection;)V a
	updateCount (Lnet/minecraft/core/particles/ParticleGroup;I)V a
net/minecraft/client/particle/ParticleEngine$MutableSpriteSet fho$b
	sprites a
	get (II)Lnet/minecraft/client/renderer/texture/TextureAtlasSprite; a
	get (Lnet/minecraft/util/RandomSource;)Lnet/minecraft/client/renderer/texture/TextureAtlasSprite; a
	rebind (Ljava/util/List;)V a
net/minecraft/client/particle/ParticleEngine$SpriteParticleRegistration fho$c
net/minecraft/client/particle/ParticleProvider fhp
net/minecraft/client/particle/ParticleProvider$Sprite fhp$a
net/minecraft/client/particle/ParticleRenderType fhq
	CUSTOM e
	NO_RENDER f
	PARTICLE_SHEET_LIT d
	PARTICLE_SHEET_OPAQUE b
	PARTICLE_SHEET_TRANSLUCENT c
	TERRAIN_SHEET a
	begin (Lcom/mojang/blaze3d/vertex/BufferBuilder;Lnet/minecraft/client/renderer/texture/TextureManager;)V a
	end (Lcom/mojang/blaze3d/vertex/Tesselator;)V a
net/minecraft/client/particle/PlayerCloudParticle fhr
	sprites a
	getQuadSize (F)F b
	getRenderType ()Lnet/minecraft/client/particle/ParticleRenderType; b
	tick ()V a
net/minecraft/client/particle/PlayerCloudParticle$Provider fhr$a
	sprites a
	createParticle (Lnet/minecraft/core/particles/SimpleParticleType;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
net/minecraft/client/particle/PlayerCloudParticle$SneezeProvider fhr$b
	sprites a
	createParticle (Lnet/minecraft/core/particles/SimpleParticleType;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
net/minecraft/client/particle/PortalParticle fhs
	xStart a
	yStart b
	zStart F
	getLightColor (F)I a
	getQuadSize (F)F b
	getRenderType ()Lnet/minecraft/client/particle/ParticleRenderType; b
	move (DDD)V a
	tick ()V a
net/minecraft/client/particle/PortalParticle$Provider fhs$a
	sprite a
	createParticle (Lnet/minecraft/core/particles/SimpleParticleType;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
net/minecraft/client/particle/ReversePortalParticle fht
	getQuadSize (F)F b
	tick ()V a
net/minecraft/client/particle/ReversePortalParticle$ReversePortalProvider fht$a
	sprite a
	createParticle (Lnet/minecraft/core/particles/SimpleParticleType;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
net/minecraft/client/particle/RisingParticle fhu
net/minecraft/client/particle/SculkChargeParticle fhv
	sprites a
	getLightColor (F)I a
	getRenderType ()Lnet/minecraft/client/particle/ParticleRenderType; b
	tick ()V a
net/minecraft/client/particle/SculkChargeParticle$Provider fhv$a
	sprite a
	createParticle (Lnet/minecraft/core/particles/SculkChargeParticleOptions;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
	sprite ()Lnet/minecraft/client/particle/SpriteSet; a
net/minecraft/client/particle/SculkChargePopParticle fhw
	sprites a
	getLightColor (F)I a
	getRenderType ()Lnet/minecraft/client/particle/ParticleRenderType; b
	tick ()V a
net/minecraft/client/particle/SculkChargePopParticle$Provider fhw$a
	sprite a
	createParticle (Lnet/minecraft/core/particles/SimpleParticleType;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
	sprite ()Lnet/minecraft/client/particle/SpriteSet; a
net/minecraft/client/particle/ShriekParticle fhx
	MAGICAL_X_ROT F
	ROTATION_VECTOR a
	TRANSFORM_VECTOR b
	delay G
	getLightColor (F)I a
	getQuadSize (F)F b
	getRenderType ()Lnet/minecraft/client/particle/ParticleRenderType; b
	makeCornerVertex (Lcom/mojang/blaze3d/vertex/VertexConsumer;Lorg/joml/Vector3f;FFI)V a
	render (Lcom/mojang/blaze3d/vertex/VertexConsumer;Lnet/minecraft/client/Camera;F)V a
	renderRotatedParticle (Lcom/mojang/blaze3d/vertex/VertexConsumer;Lnet/minecraft/client/Camera;FLjava/util/function/Consumer;)V a
	tick ()V a
net/minecraft/client/particle/ShriekParticle$Provider fhx$a
	sprite a
	createParticle (Lnet/minecraft/core/particles/ShriekParticleOption;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
net/minecraft/client/particle/SimpleAnimatedParticle fhy
	fadeB G
	fadeG F
	fadeR b
	hasFade H
	sprites a
	getLightColor (F)I a
	getRenderType ()Lnet/minecraft/client/particle/ParticleRenderType; b
	setColor (I)V b
	setFadeColor (I)V c
	tick ()V a
net/minecraft/client/particle/SingleQuadParticle fhz
	quadSize D
	getQuadSize (F)F b
	getU0 ()F c
	getU1 ()F d
	getV0 ()F e
	getV1 ()F f
	render (Lcom/mojang/blaze3d/vertex/VertexConsumer;Lnet/minecraft/client/Camera;F)V a
	scale (F)Lnet/minecraft/client/particle/Particle; d
net/minecraft/client/particle/SmokeParticle fia
net/minecraft/client/particle/SmokeParticle$Provider fia$a
	sprites a
	createParticle (Lnet/minecraft/core/particles/SimpleParticleType;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
net/minecraft/client/particle/SnowflakeParticle fib
	sprites a
	getRenderType ()Lnet/minecraft/client/particle/ParticleRenderType; b
	tick ()V a
net/minecraft/client/particle/SnowflakeParticle$Provider fib$a
	sprites a
	createParticle (Lnet/minecraft/core/particles/SimpleParticleType;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
net/minecraft/client/particle/SonicBoomParticle fic
net/minecraft/client/particle/SonicBoomParticle$Provider fic$a
	sprites a
	createParticle (Lnet/minecraft/core/particles/SimpleParticleType;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
net/minecraft/client/particle/SoulParticle fid
	isGlowing a
	sprites b
	getLightColor (F)I a
	getRenderType ()Lnet/minecraft/client/particle/ParticleRenderType; b
	tick ()V a
net/minecraft/client/particle/SoulParticle$EmissiveProvider fid$a
	sprite a
	createParticle (Lnet/minecraft/core/particles/SimpleParticleType;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
net/minecraft/client/particle/SoulParticle$Provider fid$b
	sprite a
	createParticle (Lnet/minecraft/core/particles/SimpleParticleType;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
net/minecraft/client/particle/SpellParticle fie
	RANDOM a
	sprites b
	getRenderType ()Lnet/minecraft/client/particle/ParticleRenderType; b
	isCloseToScopingPlayer ()Z g
	tick ()V a
net/minecraft/client/particle/SpellParticle$AmbientMobProvider fie$a
	sprite a
	createParticle (Lnet/minecraft/core/particles/SimpleParticleType;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
net/minecraft/client/particle/SpellParticle$InstantProvider fie$b
	sprite a
	createParticle (Lnet/minecraft/core/particles/SimpleParticleType;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
net/minecraft/client/particle/SpellParticle$MobProvider fie$c
	sprite a
	createParticle (Lnet/minecraft/core/particles/SimpleParticleType;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
net/minecraft/client/particle/SpellParticle$Provider fie$d
	sprite a
	createParticle (Lnet/minecraft/core/particles/SimpleParticleType;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
net/minecraft/client/particle/SpellParticle$WitchProvider fie$e
	sprite a
	createParticle (Lnet/minecraft/core/particles/SimpleParticleType;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
net/minecraft/client/particle/SpitParticle fif
net/minecraft/client/particle/SpitParticle$Provider fif$a
	sprites a
	createParticle (Lnet/minecraft/core/particles/SimpleParticleType;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
net/minecraft/client/particle/SplashParticle fig
net/minecraft/client/particle/SplashParticle$Provider fig$a
	sprite a
	createParticle (Lnet/minecraft/core/particles/SimpleParticleType;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
net/minecraft/client/particle/SpriteSet fih
	get (II)Lnet/minecraft/client/renderer/texture/TextureAtlasSprite; a
	get (Lnet/minecraft/util/RandomSource;)Lnet/minecraft/client/renderer/texture/TextureAtlasSprite; a
net/minecraft/client/particle/SquidInkParticle fii
	tick ()V a
net/minecraft/client/particle/SquidInkParticle$GlowInkProvider fii$a
	sprites a
	createParticle (Lnet/minecraft/core/particles/SimpleParticleType;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
net/minecraft/client/particle/SquidInkParticle$Provider fii$b
	sprites a
	createParticle (Lnet/minecraft/core/particles/SimpleParticleType;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
net/minecraft/client/particle/SuspendedParticle fij
	getRenderType ()Lnet/minecraft/client/particle/ParticleRenderType; b
net/minecraft/client/particle/SuspendedParticle$CrimsonSporeProvider fij$a
	sprite a
	createParticle (Lnet/minecraft/core/particles/SimpleParticleType;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
net/minecraft/client/particle/SuspendedParticle$SporeBlossomAirProvider fij$b
	sprite a
	createParticle (Lnet/minecraft/core/particles/SimpleParticleType;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
net/minecraft/client/particle/SuspendedParticle$UnderwaterProvider fij$c
	sprite a
	createParticle (Lnet/minecraft/core/particles/SimpleParticleType;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
net/minecraft/client/particle/SuspendedParticle$WarpedSporeProvider fij$d
	sprite a
	createParticle (Lnet/minecraft/core/particles/SimpleParticleType;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
net/minecraft/client/particle/SuspendedTownParticle fik
	getRenderType ()Lnet/minecraft/client/particle/ParticleRenderType; b
	move (DDD)V a
	tick ()V a
net/minecraft/client/particle/SuspendedTownParticle$ComposterFillProvider fik$a
	sprite a
	createParticle (Lnet/minecraft/core/particles/SimpleParticleType;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
net/minecraft/client/particle/SuspendedTownParticle$DolphinSpeedProvider fik$b
	sprite a
	createParticle (Lnet/minecraft/core/particles/SimpleParticleType;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
net/minecraft/client/particle/SuspendedTownParticle$EggCrackProvider fik$c
	sprite a
	createParticle (Lnet/minecraft/core/particles/SimpleParticleType;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
net/minecraft/client/particle/SuspendedTownParticle$HappyVillagerProvider fik$d
	sprite a
	createParticle (Lnet/minecraft/core/particles/SimpleParticleType;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
net/minecraft/client/particle/SuspendedTownParticle$Provider fik$e
	sprite a
	createParticle (Lnet/minecraft/core/particles/SimpleParticleType;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
net/minecraft/client/particle/TerrainParticle fil
	pos a
	uo b
	vo F
	getLightColor (F)I a
	getRenderType ()Lnet/minecraft/client/particle/ParticleRenderType; b
	getU0 ()F c
	getU1 ()F d
	getV0 ()F e
	getV1 ()F f
net/minecraft/client/particle/TerrainParticle$Provider fil$a
	createParticle (Lnet/minecraft/core/particles/BlockParticleOption;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
net/minecraft/client/particle/TextureSheetParticle fim
	sprite E
	getU0 ()F c
	getU1 ()F d
	getV0 ()F e
	getV1 ()F f
	pickSprite (Lnet/minecraft/client/particle/SpriteSet;)V a
	setSprite (Lnet/minecraft/client/renderer/texture/TextureAtlasSprite;)V a
	setSpriteFromAge (Lnet/minecraft/client/particle/SpriteSet;)V b
net/minecraft/client/particle/TotemParticle fin
net/minecraft/client/particle/TotemParticle$Provider fin$a
	sprites a
	createParticle (Lnet/minecraft/core/particles/SimpleParticleType;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
net/minecraft/client/particle/TrackingEmitter fio
	entity a
	life b
	lifeTime D
	particleType E
	tick ()V a
net/minecraft/client/particle/VibrationSignalParticle fip
	pitch G
	pitchO H
	rot b
	rotO F
	target a
	getLightColor (F)I a
	getRenderType ()Lnet/minecraft/client/particle/ParticleRenderType; b
	render (Lcom/mojang/blaze3d/vertex/VertexConsumer;Lnet/minecraft/client/Camera;F)V a
	renderSignal (Lcom/mojang/blaze3d/vertex/VertexConsumer;Lnet/minecraft/client/Camera;FLjava/util/function/Consumer;)V a
	tick ()V a
net/minecraft/client/particle/VibrationSignalParticle$Provider fip$a
	sprite a
	createParticle (Lnet/minecraft/core/particles/VibrationParticleOption;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
net/minecraft/client/particle/WakeParticle fiq
	sprites a
	getRenderType ()Lnet/minecraft/client/particle/ParticleRenderType; b
	tick ()V a
net/minecraft/client/particle/WakeParticle$Provider fiq$a
	sprites a
	createParticle (Lnet/minecraft/core/particles/SimpleParticleType;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
net/minecraft/client/particle/WaterCurrentDownParticle fir
	angle a
	getRenderType ()Lnet/minecraft/client/particle/ParticleRenderType; b
	tick ()V a
net/minecraft/client/particle/WaterCurrentDownParticle$Provider fir$a
	sprite a
	createParticle (Lnet/minecraft/core/particles/SimpleParticleType;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
net/minecraft/client/particle/WaterDropParticle fis
	getRenderType ()Lnet/minecraft/client/particle/ParticleRenderType; b
	tick ()V a
net/minecraft/client/particle/WaterDropParticle$Provider fis$a
	sprite a
	createParticle (Lnet/minecraft/core/particles/SimpleParticleType;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
net/minecraft/client/particle/WhiteAshParticle fit
	COLOR_RGB24 a
net/minecraft/client/particle/WhiteAshParticle$Provider fit$a
	sprites a
	createParticle (Lnet/minecraft/core/particles/SimpleParticleType;Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)Lnet/minecraft/client/particle/Particle; a
net/minecraft/client/player/AbstractClientPlayer fiv
	SKIN_URL_TEMPLATE g
	clientLevel f
	deltaMovementOnPreviousTick b
	elytraRotX c
	elytraRotY d
	elytraRotZ e
	playerInfo cl
	getCloakTextureLocation ()Lnet/minecraft/resources/ResourceLocation; e
	getDeltaMovementLerped (F)Lnet/minecraft/world/phys/Vec3; b
	getElytraTextureLocation ()Lnet/minecraft/resources/ResourceLocation; i
	getFieldOfViewModifier ()F m
	getModelName ()Ljava/lang/String; j
	getPlayerInfo ()Lnet/minecraft/client/multiplayer/PlayerInfo; b
	getSkinLocation (Ljava/lang/String;)Lnet/minecraft/resources/ResourceLocation; c
	getSkinTextureLocation ()Lnet/minecraft/resources/ResourceLocation; d
	isCapeLoaded ()Z a
	isCreative ()Z f
	isElytraLoaded ()Z h
	isSkinLoaded ()Z c
	isSpectator ()Z G_
	registerSkinTexture (Lnet/minecraft/resources/ResourceLocation;Ljava/lang/String;)V a
	tick ()V l
net/minecraft/client/player/Input fiw
	down d
	forwardImpulse b
	jumping g
	left e
	leftImpulse a
	right f
	shiftKeyDown h
	up c
	getMoveVector ()Lnet/minecraft/world/phys/Vec2; a
	hasForwardImpulse ()Z b
	tick (ZF)V a
net/minecraft/client/player/KeyboardInput fix
	options i
	calculateImpulse (ZZ)F a
	tick (ZF)V a
net/minecraft/client/player/LocalPlayer fiy
	DEFAULT_SNEAKING_MOVEMENT_FACTOR cB
	LOGGER g
	MINOR_COLLISION_ANGLE_THRESHOLD_RADIAN cA
	POSITION_REMINDER_INTERVAL cv
	SUFFOCATING_COLLISION_CHECK_SCALE cz
	WATER_VISION_MAX_TIME cw
	WATER_VISION_QUICK_PERCENT cy
	WATER_VISION_QUICK_TIME cx
	ambientSoundHandlers cE
	autoJumpEnabled cX
	autoJumpTime cY
	connection cl
	crouching cM
	flashOnSetHealth cQ
	handsBusy cW
	input cm
	jumpRidingScale cT
	jumpRidingTicks cS
	lastOnGround cL
	minecraft cn
	oSpinningEffectIntensity cu
	permissionLevel cF
	positionReminder cP
	recipeBook cD
	serverBrand cR
	showDeathScreen db
	spinningEffectIntensity ct
	sprintTriggerTime co
	startedUsingItem cU
	stats cC
	usingItemHand cV
	wasFallFlying cZ
	wasShiftKeyDown cN
	wasSprinting cO
	waterVisionTime da
	xBob cq
	xBobO cs
	xLast cG
	xRotLast cK
	yBob cp
	yBobO cr
	yLast1 cH
	yRotLast cJ
	zLast cI
	actuallyHurt (Lnet/minecraft/world/damagesource/DamageSource;F)V f
	aiStep ()V b_
	canAutoJump ()Z N
	canSpawnSoulSpeedParticle ()Z dO
	canSpawnSprintParticle ()Z bg
	canStartSprinting ()Z P
	clientSideCloseContainer ()V p
	closeContainer ()V q
	crit (Lnet/minecraft/world/entity/Entity;)V a
	displayClientMessage (Lnet/minecraft/network/chat/Component;Z)V a
	drop (Z)Z a
	getCurrentMood ()F o
	getJumpRidingScale ()F A
	getPermissionLevel ()I B
	getRecipeBook ()Lnet/minecraft/client/ClientRecipeBook; x
	getRopeHoldPosition (F)Lnet/minecraft/world/phys/Vec3; q
	getServerBrand ()Ljava/lang/String; u
	getStats ()Lnet/minecraft/stats/StatsCounter; v
	getUsedItemHand ()Lnet/minecraft/world/InteractionHand; fj
	getViewXRot (F)F g
	getViewYRot (F)F h
	getVisualRotationYInDegrees ()F dz
	getWaterVision ()F J
	handleEntityEvent (B)V b
	handleNetherPortalClient ()V M
	hasEnoughFoodToStartSprinting ()Z R
	hasEnoughImpulseToStartSprinting ()Z Q
	heal (F)V s
	hurt (Lnet/minecraft/world/damagesource/DamageSource;F)Z a
	hurtTo (F)V c
	isAutoJumpEnabled ()Z I
	isControlledCamera ()Z D
	isCrouching ()Z bU
	isEffectiveAi ()Z cV
	isHandsBusy ()Z G
	isHorizontalCollisionMinor (Lnet/minecraft/world/phys/Vec3;)Z b
	isLocalPlayer ()Z g
	isMoving ()Z O
	isMovingSlowly ()Z C
	isShiftKeyDown ()Z bP
	isSuppressingSlidingDownLadder ()Z fq
	isTextFilteringEnabled ()Z U
	isUnderWater ()Z aZ
	isUsingItem ()Z fi
	jumpableVehicle ()Lnet/minecraft/world/entity/PlayerRideableJumping; z
	magicCrit (Lnet/minecraft/world/entity/Entity;)V b
	move (Lnet/minecraft/world/entity/MoverType;Lnet/minecraft/world/phys/Vec3;)V a
	moveTowardsClosestSpace (DD)V c
	onGameModeChanged (Lnet/minecraft/world/level/GameType;)V a
	onSyncedDataUpdated (Lnet/minecraft/network/syncher/EntityDataAccessor;)V a
	onUpdateAbilities ()V w
	openCommandBlock (Lnet/minecraft/world/level/block/entity/CommandBlockEntity;)V a
	openItemGui (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/InteractionHand;)V a
	openJigsawBlock (Lnet/minecraft/world/level/block/entity/JigsawBlockEntity;)V a
	openMinecartCommandBlock (Lnet/minecraft/world/level/BaseCommandBlock;)V a
	openStructureBlock (Lnet/minecraft/world/level/block/entity/StructureBlockEntity;)V a
	openTextEdit (Lnet/minecraft/world/level/block/entity/SignBlockEntity;Z)V a
	playNotifySound (Lnet/minecraft/sounds/SoundEvent;Lnet/minecraft/sounds/SoundSource;FF)V a
	playSound (Lnet/minecraft/sounds/SoundEvent;FF)V a
	removeEffectNoUpdate (Lnet/minecraft/world/effect/MobEffect;)Lnet/minecraft/world/effect/MobEffectInstance; c
	removeRecipeHighlight (Lnet/minecraft/world/item/crafting/Recipe;)V a
	removeVehicle ()V bA
	resetPos ()V E
	respawn ()V fL
	rideTick ()V bv
	sendIsSprintingIfNeeded ()V L
	sendOpenInventory ()V t
	sendPosition ()V K
	sendRidingJump ()V s
	sendSystemMessage (Lnet/minecraft/network/chat/Component;)V a
	serverAiStep ()V fc
	setExperienceValues (FII)V a
	setPermissionLevel (I)V a
	setServerBrand (Ljava/lang/String;)V d
	setShowDeathScreen (Z)V b
	shouldShowDeathScreen ()Z y
	startRiding (Lnet/minecraft/world/entity/Entity;Z)Z a
	startUsingItem (Lnet/minecraft/world/InteractionHand;)V c
	stopUsingItem ()V fo
	suffocatesAt (Lnet/minecraft/core/BlockPos;)Z i
	swing (Lnet/minecraft/world/InteractionHand;)V a
	tick ()V l
	tickDeath ()V dX
	updateAutoJump (FF)V f
	updateIsUnderwater ()Z fG
	updateTutorialInventoryAction (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/inventory/ClickAction;)V a
	vehicleCanSprint (Lnet/minecraft/world/entity/Entity;)Z c
net/minecraft/client/player/RemotePlayer fiz
	lerpDeltaMovement g
	lerpDeltaMovementSteps cl
	aiStep ()V b_
	hurt (Lnet/minecraft/world/damagesource/DamageSource;F)Z a
	lerpMotion (DDD)V l
	sendSystemMessage (Lnet/minecraft/network/chat/Component;)V a
	shouldRenderAtSqrDistance (D)Z a
	tick ()V l
	updatePlayerPose ()V fH
net/minecraft/client/player/inventory/Hotbar fja
	items a
	createTag ()Lnet/minecraft/nbt/ListTag; a
	fromTag (Lnet/minecraft/nbt/ListTag;)V a
net/minecraft/client/profiling/ClientMetricsSamplersProvider fjd
	levelRenderer a
	samplerFactory c
	samplers b
	registerStaticSamplers ()V a
	samplers (Ljava/util/function/Supplier;)Ljava/util/Set; a
net/minecraft/client/quickplay/QuickPlay fjf
	ERROR_TITLE a
	INVALID_IDENTIFIER b
	REALM_CONNECT c
	REALM_PERMISSION d
	TO_REALMS_LIST g
	TO_TITLE e
	TO_WORLD_LIST f
	connect (Lnet/minecraft/client/Minecraft;Lnet/minecraft/client/main/GameConfig$QuickPlayData;Lnet/minecraft/server/packs/resources/ReloadInstance;Lcom/mojang/realmsclient/client/RealmsClient;)V a
	joinMultiplayerWorld (Lnet/minecraft/client/Minecraft;Ljava/lang/String;)V b
	joinRealmsWorld (Lnet/minecraft/client/Minecraft;Lcom/mojang/realmsclient/client/RealmsClient;Ljava/lang/String;)V a
	joinSingleplayerWorld (Lnet/minecraft/client/Minecraft;Ljava/lang/String;)V a
net/minecraft/client/quickplay/QuickPlayLog fjg
	GSON c
	INACTIVE a
	LOGGER b
	path d
	worldData e
	log (Lnet/minecraft/client/Minecraft;)V a
	of (Ljava/lang/String;)Lnet/minecraft/client/quickplay/QuickPlayLog; a
	setWorldData (Lnet/minecraft/client/quickplay/QuickPlayLog$Type;Ljava/lang/String;Ljava/lang/String;)V a
net/minecraft/client/quickplay/QuickPlayLog$QuickPlayEntry fjg$a
	CODEC a
	gamemode d
	lastPlayedTime c
	quickPlayWorld b
	gamemode ()Lnet/minecraft/world/level/GameType; c
	lastPlayedTime ()Ljava/time/Instant; b
	quickPlayWorld ()Lnet/minecraft/client/quickplay/QuickPlayLog$QuickPlayWorld; a
net/minecraft/client/quickplay/QuickPlayLog$QuickPlayWorld fjg$b
	MAP_CODEC a
	id c
	name d
	type b
	id ()Ljava/lang/String; b
	name ()Ljava/lang/String; c
	type ()Lnet/minecraft/client/quickplay/QuickPlayLog$Type; a
net/minecraft/client/quickplay/QuickPlayLog$Type fjg$c
	$VALUES f
	CODEC d
	MULTIPLAYER b
	REALMS c
	SINGLEPLAYER a
	name e
	$values ()[Lnet/minecraft/client/quickplay/QuickPlayLog$Type; a
	getSerializedName ()Ljava/lang/String; c
net/minecraft/client/renderer/BiomeColors fji
	FOLIAGE_COLOR_RESOLVER b
	GRASS_COLOR_RESOLVER a
	WATER_COLOR_RESOLVER c
	getAverageColor (Lnet/minecraft/world/level/BlockAndTintGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/ColorResolver;)I a
	getAverageFoliageColor (Lnet/minecraft/world/level/BlockAndTintGetter;Lnet/minecraft/core/BlockPos;)I b
	getAverageGrassColor (Lnet/minecraft/world/level/BlockAndTintGetter;Lnet/minecraft/core/BlockPos;)I a
	getAverageWaterColor (Lnet/minecraft/world/level/BlockAndTintGetter;Lnet/minecraft/core/BlockPos;)I c
net/minecraft/client/renderer/BlockEntityWithoutLevelRenderer fjj
	DEFAULT_SHULKER_BOX b
	SHULKER_BOXES a
	banner f
	bed g
	blockEntityRenderDispatcher m
	chest c
	conduit h
	decoratedPot i
	enderChest e
	entityModelSet n
	shieldModel j
	skullModels l
	trappedChest d
	tridentModel k
	onResourceManagerReload (Lnet/minecraft/server/packs/resources/ResourceManager;)V a
	renderByItem (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/item/ItemDisplayContext;Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;II)V a
net/minecraft/client/renderer/ChunkBufferBuilderPack fjk
	builders a
	builder (Lnet/minecraft/client/renderer/RenderType;)Lcom/mojang/blaze3d/vertex/BufferBuilder; a
	clearAll ()V a
	discardAll ()V b
net/minecraft/client/renderer/CubeMap fjl
	SIDES a
	images b
	preload (Lnet/minecraft/client/renderer/texture/TextureManager;Ljava/util/concurrent/Executor;)Ljava/util/concurrent/CompletableFuture; a
	render (Lnet/minecraft/client/Minecraft;FFF)V a
net/minecraft/client/renderer/DimensionSpecialEffects fjm
	EFFECTS a
	cloudLevel c
	constantAmbientLight g
	forceBrightLightmap f
	hasGround d
	skyType e
	sunriseCol b
	constantAmbientLight ()Z e
	forType (Lnet/minecraft/world/level/dimension/DimensionType;)Lnet/minecraft/client/renderer/DimensionSpecialEffects; a
	forceBrightLightmap ()Z d
	getBrightnessDependentFogColor (Lnet/minecraft/world/phys/Vec3;F)Lnet/minecraft/world/phys/Vec3; a
	getCloudHeight ()F a
	getSunriseColor (FF)[F a
	hasGround ()Z b
	isFoggyAt (II)Z a
	skyType ()Lnet/minecraft/client/renderer/DimensionSpecialEffects$SkyType; c
net/minecraft/client/renderer/DimensionSpecialEffects$EndEffects fjm$a
	getBrightnessDependentFogColor (Lnet/minecraft/world/phys/Vec3;F)Lnet/minecraft/world/phys/Vec3; a
	getSunriseColor (FF)[F a
	isFoggyAt (II)Z a
net/minecraft/client/renderer/DimensionSpecialEffects$NetherEffects fjm$b
	getBrightnessDependentFogColor (Lnet/minecraft/world/phys/Vec3;F)Lnet/minecraft/world/phys/Vec3; a
	isFoggyAt (II)Z a
net/minecraft/client/renderer/DimensionSpecialEffects$OverworldEffects fjm$c
	CLOUD_LEVEL a
	getBrightnessDependentFogColor (Lnet/minecraft/world/phys/Vec3;F)Lnet/minecraft/world/phys/Vec3; a
	isFoggyAt (II)Z a
net/minecraft/client/renderer/DimensionSpecialEffects$SkyType fjm$d
	$VALUES d
	END c
	NONE a
	NORMAL b
	$values ()[Lnet/minecraft/client/renderer/DimensionSpecialEffects$SkyType; a
net/minecraft/client/renderer/EffectInstance fjn
	ALWAYS_REAPPLY d
	DUMMY_UNIFORM c
	EFFECT_SHADER_PATH a
	LOGGER b
	attributeNames r
	attributes q
	blend p
	dirty o
	fragmentProgram t
	lastAppliedEffect e
	lastProgramId f
	name n
	programId m
	samplerLocations i
	samplerMap g
	samplerNames h
	uniformLocations k
	uniformMap l
	uniforms j
	vertexProgram s
	apply ()V g
	attachToProgram ()V e
	clear ()V f
	getFragmentProgram ()Lcom/mojang/blaze3d/shaders/Program; d
	getId ()I a
	getName ()Ljava/lang/String; h
	getOrCreate (Lnet/minecraft/server/packs/resources/ResourceManager;Lcom/mojang/blaze3d/shaders/Program$Type;Ljava/lang/String;)Lcom/mojang/blaze3d/shaders/EffectProgram; a
	getUniform (Ljava/lang/String;)Lcom/mojang/blaze3d/shaders/Uniform; a
	getVertexProgram ()Lcom/mojang/blaze3d/shaders/Program; c
	markDirty ()V b
	parseBlendNode (Lcom/google/gson/JsonObject;)Lcom/mojang/blaze3d/shaders/BlendMode; a
	parseSamplerNode (Lcom/google/gson/JsonElement;)V a
	parseUniformNode (Lcom/google/gson/JsonElement;)V b
	safeGetUniform (Ljava/lang/String;)Lcom/mojang/blaze3d/shaders/AbstractUniform; b
	setSampler (Ljava/lang/String;Ljava/util/function/IntSupplier;)V a
	updateLocations ()V i
net/minecraft/client/renderer/FaceInfo fjo
	$VALUES i
	BY_FACING g
	DOWN a
	EAST f
	NORTH c
	SOUTH d
	UP b
	WEST e
	infos h
	$values ()[Lnet/minecraft/client/renderer/FaceInfo; a
	fromFacing (Lnet/minecraft/core/Direction;)Lnet/minecraft/client/renderer/FaceInfo; a
	getVertexInfo (I)Lnet/minecraft/client/renderer/FaceInfo$VertexInfo; a
net/minecraft/client/renderer/FaceInfo$Constants fjo$a
	MAX_X c
	MAX_Y b
	MAX_Z a
	MIN_X f
	MIN_Y e
	MIN_Z d
net/minecraft/client/renderer/FaceInfo$VertexInfo fjo$b
	xFace a
	yFace b
	zFace c
net/minecraft/client/renderer/FogRenderer fjp
	BIOME_FOG_TRANSITION_TIME a
	MOB_EFFECT_FOG c
	WATER_FOG_DISTANCE b
	biomeChangedTime i
	fogBlue f
	fogGreen e
	fogRed d
	previousBiomeFog h
	targetBiomeFog g
	getPriorityFogFunction (Lnet/minecraft/world/entity/Entity;F)Lnet/minecraft/client/renderer/FogRenderer$MobEffectFogFunction; a
	levelFogColor ()V b
	setupColor (Lnet/minecraft/client/Camera;FLnet/minecraft/client/multiplayer/ClientLevel;IF)V a
	setupFog (Lnet/minecraft/client/Camera;Lnet/minecraft/client/renderer/FogRenderer$FogMode;FZF)V a
	setupNoFog ()V a
net/minecraft/client/renderer/FogRenderer$BlindnessFogFunction fjp$a
	getMobEffect ()Lnet/minecraft/world/effect/MobEffect; a
	setupFog (Lnet/minecraft/client/renderer/FogRenderer$FogData;Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/effect/MobEffectInstance;FF)V a
net/minecraft/client/renderer/FogRenderer$DarknessFogFunction fjp$b
	getMobEffect ()Lnet/minecraft/world/effect/MobEffect; a
	getModifiedVoidDarkness (Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/effect/MobEffectInstance;FF)F a
	setupFog (Lnet/minecraft/client/renderer/FogRenderer$FogData;Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/effect/MobEffectInstance;FF)V a
net/minecraft/client/renderer/FogRenderer$FogData fjp$c
	end c
	mode a
	shape d
	start b
net/minecraft/client/renderer/FogRenderer$FogMode fjp$d
	$VALUES c
	FOG_SKY a
	FOG_TERRAIN b
	$values ()[Lnet/minecraft/client/renderer/FogRenderer$FogMode; a
net/minecraft/client/renderer/FogRenderer$MobEffectFogFunction fjp$e
	getMobEffect ()Lnet/minecraft/world/effect/MobEffect; a
	getModifiedVoidDarkness (Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/effect/MobEffectInstance;FF)F a
	isEnabled (Lnet/minecraft/world/entity/LivingEntity;F)Z a
	setupFog (Lnet/minecraft/client/renderer/FogRenderer$FogData;Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/effect/MobEffectInstance;FF)V a
net/minecraft/client/renderer/GameRenderer fjq
	DEPTH_BUFFER_DEBUG h
	EFFECTS K
	EFFECT_NONE d
	GUI_Z_NEAR i
	ITEM_ACTIVATION_ANIMATION_LENGTH c
	LOGGER g
	NAUSEA_LOCATION f
	PROJECTION_Z_NEAR a
	blitShader e
	darkenWorldAmount s
	darkenWorldAmountO t
	effectActive M
	effectIndex L
	fov q
	hasWorldScreenshot x
	itemActivationItem F
	itemActivationOffX H
	itemActivationOffY I
	itemActivationTicks G
	itemInHandRenderer b
	lastActiveTime y
	lastScreenshotAttempt w
	lightTexture z
	mainCamera N
	mapRenderer n
	minecraft j
	oldFov r
	overlayTexture A
	panoramicMode B
	particleShader U
	positionColorLightmapShader V
	positionColorShader Q
	positionColorTexLightmapShader W
	positionColorTexShader R
	positionShader P
	positionTexColorNormalShader X
	positionTexColorShader T
	positionTexLightmapColorShader Y
	positionTexShader S
	postEffect J
	random l
	renderBlockOutline v
	renderBuffers o
	renderDistance m
	renderHand u
	rendertypeArmorCutoutNoCullShader af
	rendertypeArmorEntityGlintShader aA
	rendertypeArmorGlintShader az
	rendertypeBeaconBeamShader ap
	rendertypeCrumblingShader aR
	rendertypeCutoutMippedShader aa
	rendertypeCutoutShader ab
	rendertypeEndGatewayShader aP
	rendertypeEndPortalShader aO
	rendertypeEnergySwirlShader av
	rendertypeEntityAlphaShader at
	rendertypeEntityCutoutNoCullShader ai
	rendertypeEntityCutoutNoCullZOffsetShader aj
	rendertypeEntityCutoutShader ah
	rendertypeEntityDecalShader aq
	rendertypeEntityGlintDirectShader aF
	rendertypeEntityGlintShader aE
	rendertypeEntityNoOutlineShader ar
	rendertypeEntityShadowShader as
	rendertypeEntitySmoothCutoutShader ao
	rendertypeEntitySolidShader ag
	rendertypeEntityTranslucentCullShader al
	rendertypeEntityTranslucentEmissiveShader an
	rendertypeEntityTranslucentShader am
	rendertypeEyesShader au
	rendertypeGlintDirectShader aD
	rendertypeGlintShader aC
	rendertypeGlintTranslucentShader aB
	rendertypeGuiGhostRecipeOverlayShader aV
	rendertypeGuiOverlayShader aT
	rendertypeGuiShader aS
	rendertypeGuiTextHighlightShader aU
	rendertypeItemEntityTranslucentCullShader ak
	rendertypeLeashShader aw
	rendertypeLightningShader aM
	rendertypeLinesShader aQ
	rendertypeOutlineShader ay
	rendertypeSolidShader Z
	rendertypeTextBackgroundSeeThroughShader aK
	rendertypeTextBackgroundShader aH
	rendertypeTextIntensitySeeThroughShader aL
	rendertypeTextIntensityShader aI
	rendertypeTextSeeThroughShader aJ
	rendertypeTextShader aG
	rendertypeTranslucentMovingBlockShader ad
	rendertypeTranslucentNoCrumblingShader ae
	rendertypeTranslucentShader ac
	rendertypeTripwireShader aN
	rendertypeWaterMaskShader ax
	resourceManager k
	shaders O
	tick p
	zoom C
	zoomX D
	zoomY E
	bobHurt (Lcom/mojang/blaze3d/vertex/PoseStack;F)V a
	bobView (Lcom/mojang/blaze3d/vertex/PoseStack;F)V b
	checkEntityPostEffect (Lnet/minecraft/world/entity/Entity;)V a
	createReloadListener ()Lnet/minecraft/server/packs/resources/PreparableReloadListener; e
	currentEffect ()Lnet/minecraft/client/renderer/PostChain; g
	cycleEffect ()V d
	displayItemActivation (Lnet/minecraft/world/item/ItemStack;)V a
	getDarkenWorldAmount (F)F b
	getDepthFar ()F h
	getFov (Lnet/minecraft/client/Camera;FZ)D a
	getMainCamera ()Lnet/minecraft/client/Camera; m
	getMapRenderer ()Lnet/minecraft/client/gui/MapRenderer; j
	getMinecraft ()Lnet/minecraft/client/Minecraft; k
	getNightVisionScale (Lnet/minecraft/world/entity/LivingEntity;F)F a
	getParticleShader ()Lnet/minecraft/client/renderer/ShaderInstance; u
	getPositionColorLightmapShader ()Lnet/minecraft/client/renderer/ShaderInstance; v
	getPositionColorShader ()Lnet/minecraft/client/renderer/ShaderInstance; q
	getPositionColorTexLightmapShader ()Lnet/minecraft/client/renderer/ShaderInstance; w
	getPositionColorTexShader ()Lnet/minecraft/client/renderer/ShaderInstance; r
	getPositionShader ()Lnet/minecraft/client/renderer/ShaderInstance; p
	getPositionTexColorNormalShader ()Lnet/minecraft/client/renderer/ShaderInstance; x
	getPositionTexColorShader ()Lnet/minecraft/client/renderer/ShaderInstance; t
	getPositionTexLightmapColorShader ()Lnet/minecraft/client/renderer/ShaderInstance; y
	getPositionTexShader ()Lnet/minecraft/client/renderer/ShaderInstance; s
	getProjectionMatrix (D)Lorg/joml/Matrix4f; a
	getRenderDistance ()F l
	getRendertypeArmorCutoutNoCullShader ()Lnet/minecraft/client/renderer/ShaderInstance; F
	getRendertypeArmorEntityGlintShader ()Lnet/minecraft/client/renderer/ShaderInstance; aa
	getRendertypeArmorGlintShader ()Lnet/minecraft/client/renderer/ShaderInstance; Z
	getRendertypeBeaconBeamShader ()Lnet/minecraft/client/renderer/ShaderInstance; P
	getRendertypeCrumblingShader ()Lnet/minecraft/client/renderer/ShaderInstance; ar
	getRendertypeCutoutMippedShader ()Lnet/minecraft/client/renderer/ShaderInstance; A
	getRendertypeCutoutShader ()Lnet/minecraft/client/renderer/ShaderInstance; B
	getRendertypeEndGatewayShader ()Lnet/minecraft/client/renderer/ShaderInstance; ap
	getRendertypeEndPortalShader ()Lnet/minecraft/client/renderer/ShaderInstance; ao
	getRendertypeEnergySwirlShader ()Lnet/minecraft/client/renderer/ShaderInstance; V
	getRendertypeEntityAlphaShader ()Lnet/minecraft/client/renderer/ShaderInstance; T
	getRendertypeEntityCutoutNoCullShader ()Lnet/minecraft/client/renderer/ShaderInstance; I
	getRendertypeEntityCutoutNoCullZOffsetShader ()Lnet/minecraft/client/renderer/ShaderInstance; J
	getRendertypeEntityCutoutShader ()Lnet/minecraft/client/renderer/ShaderInstance; H
	getRendertypeEntityDecalShader ()Lnet/minecraft/client/renderer/ShaderInstance; Q
	getRendertypeEntityGlintDirectShader ()Lnet/minecraft/client/renderer/ShaderInstance; af
	getRendertypeEntityGlintShader ()Lnet/minecraft/client/renderer/ShaderInstance; ae
	getRendertypeEntityNoOutlineShader ()Lnet/minecraft/client/renderer/ShaderInstance; R
	getRendertypeEntityShadowShader ()Lnet/minecraft/client/renderer/ShaderInstance; S
	getRendertypeEntitySmoothCutoutShader ()Lnet/minecraft/client/renderer/ShaderInstance; O
	getRendertypeEntitySolidShader ()Lnet/minecraft/client/renderer/ShaderInstance; G
	getRendertypeEntityTranslucentCullShader ()Lnet/minecraft/client/renderer/ShaderInstance; L
	getRendertypeEntityTranslucentEmissiveShader ()Lnet/minecraft/client/renderer/ShaderInstance; N
	getRendertypeEntityTranslucentShader ()Lnet/minecraft/client/renderer/ShaderInstance; M
	getRendertypeEyesShader ()Lnet/minecraft/client/renderer/ShaderInstance; U
	getRendertypeGlintDirectShader ()Lnet/minecraft/client/renderer/ShaderInstance; ad
	getRendertypeGlintShader ()Lnet/minecraft/client/renderer/ShaderInstance; ac
	getRendertypeGlintTranslucentShader ()Lnet/minecraft/client/renderer/ShaderInstance; ab
	getRendertypeGuiGhostRecipeOverlayShader ()Lnet/minecraft/client/renderer/ShaderInstance; av
	getRendertypeGuiOverlayShader ()Lnet/minecraft/client/renderer/ShaderInstance; at
	getRendertypeGuiShader ()Lnet/minecraft/client/renderer/ShaderInstance; as
	getRendertypeGuiTextHighlightShader ()Lnet/minecraft/client/renderer/ShaderInstance; au
	getRendertypeItemEntityTranslucentCullShader ()Lnet/minecraft/client/renderer/ShaderInstance; K
	getRendertypeLeashShader ()Lnet/minecraft/client/renderer/ShaderInstance; W
	getRendertypeLightningShader ()Lnet/minecraft/client/renderer/ShaderInstance; am
	getRendertypeLinesShader ()Lnet/minecraft/client/renderer/ShaderInstance; aq
	getRendertypeOutlineShader ()Lnet/minecraft/client/renderer/ShaderInstance; Y
	getRendertypeSolidShader ()Lnet/minecraft/client/renderer/ShaderInstance; z
	getRendertypeTextBackgroundSeeThroughShader ()Lnet/minecraft/client/renderer/ShaderInstance; ak
	getRendertypeTextBackgroundShader ()Lnet/minecraft/client/renderer/ShaderInstance; ah
	getRendertypeTextIntensitySeeThroughShader ()Lnet/minecraft/client/renderer/ShaderInstance; al
	getRendertypeTextIntensityShader ()Lnet/minecraft/client/renderer/ShaderInstance; ai
	getRendertypeTextSeeThroughShader ()Lnet/minecraft/client/renderer/ShaderInstance; aj
	getRendertypeTextShader ()Lnet/minecraft/client/renderer/ShaderInstance; ag
	getRendertypeTranslucentMovingBlockShader ()Lnet/minecraft/client/renderer/ShaderInstance; D
	getRendertypeTranslucentNoCrumblingShader ()Lnet/minecraft/client/renderer/ShaderInstance; E
	getRendertypeTranslucentShader ()Lnet/minecraft/client/renderer/ShaderInstance; C
	getRendertypeTripwireShader ()Lnet/minecraft/client/renderer/ShaderInstance; an
	getRendertypeWaterMaskShader ()Lnet/minecraft/client/renderer/ShaderInstance; X
	getShader (Ljava/lang/String;)Lnet/minecraft/client/renderer/ShaderInstance; a
	isPanoramicMode ()Z a
	lightTexture ()Lnet/minecraft/client/renderer/LightTexture; n
	loadEffect (Lnet/minecraft/resources/ResourceLocation;)V a
	overlayTexture ()Lnet/minecraft/client/renderer/texture/OverlayTexture; o
	pick (F)V a
	preloadShader (Lnet/minecraft/server/packs/resources/ResourceProvider;Ljava/lang/String;Lcom/mojang/blaze3d/vertex/VertexFormat;)Lnet/minecraft/client/renderer/ShaderInstance; a
	preloadUiShader (Lnet/minecraft/server/packs/resources/ResourceProvider;)V a
	reloadShaders (Lnet/minecraft/server/packs/resources/ResourceProvider;)V b
	render (FJZ)V a
	renderConfusionOverlay (Lnet/minecraft/client/gui/GuiGraphics;F)V a
	renderItemActivationAnimation (IIF)V a
	renderItemInHand (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/Camera;F)V a
	renderLevel (FJLcom/mojang/blaze3d/vertex/PoseStack;)V a
	renderZoomed (FFF)V a
	resetData ()V i
	resetProjectionMatrix (Lorg/joml/Matrix4f;)V a
	resize (II)V a
	setPanoramicMode (Z)V c
	setRenderBlockOutline (Z)V b
	setRenderHand (Z)V a
	shouldRenderBlockOutline ()Z az
	shutdownEffect ()V b
	shutdownShaders ()V aw
	takeAutoScreenshot (Ljava/nio/file/Path;)V a
	tick ()V f
	tickFov ()V ax
	togglePostEffect ()V c
	tryTakeScreenshotIfNeeded ()V ay
net/minecraft/client/renderer/GameRenderer$ResourceCache fjq$a
	cache b
	original a
	cache ()Ljava/util/Map; b
	original ()Lnet/minecraft/server/packs/resources/ResourceProvider; a
net/minecraft/client/renderer/GpuWarnlistManager fjr
	GPU_WARNLIST_LOCATION b
	LOGGER a
	showWarning d
	skipFabulous f
	warningDismissed e
	warnings c
	apply (Ljava/lang/Object;Lnet/minecraft/server/packs/resources/ResourceManager;Lnet/minecraft/util/profiling/ProfilerFiller;)V a
	apply (Lnet/minecraft/client/renderer/GpuWarnlistManager$Preparations;Lnet/minecraft/server/packs/resources/ResourceManager;Lnet/minecraft/util/profiling/ProfilerFiller;)V a
	compilePatterns (Lcom/google/gson/JsonArray;Ljava/util/List;)V a
	dismissWarning ()V e
	dismissWarningAndSkipFabulous ()V f
	getAllWarnings ()Ljava/lang/String; m
	getRendererWarnings ()Ljava/lang/String; j
	getVendorWarnings ()Ljava/lang/String; l
	getVersionWarnings ()Ljava/lang/String; k
	hasWarnings ()Z a
	isShowingWarning ()Z g
	isSkippingFabulous ()Z h
	parseJson (Lnet/minecraft/server/packs/resources/ResourceManager;Lnet/minecraft/util/profiling/ProfilerFiller;)Lcom/google/gson/JsonObject; c
	prepare (Lnet/minecraft/server/packs/resources/ResourceManager;Lnet/minecraft/util/profiling/ProfilerFiller;)Ljava/lang/Object; b
	prepare (Lnet/minecraft/server/packs/resources/ResourceManager;Lnet/minecraft/util/profiling/ProfilerFiller;)Lnet/minecraft/client/renderer/GpuWarnlistManager$Preparations; a
	resetWarnings ()V i
	showWarning ()V d
	willShowWarning ()Z b
net/minecraft/client/renderer/GpuWarnlistManager$Preparations fjr$a
	rendererPatterns a
	vendorPatterns c
	versionPatterns b
	apply ()Lcom/google/common/collect/ImmutableMap; a
	matchAny (Ljava/util/List;Ljava/lang/String;)Ljava/lang/String; a
net/minecraft/client/renderer/ItemBlockRenderTypes fjs
	TYPE_BY_BLOCK a
	TYPE_BY_FLUID b
	renderCutout c
	getChunkRenderType (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/client/renderer/RenderType; a
	getMovingBlockRenderType (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/client/renderer/RenderType; b
	getRenderLayer (Lnet/minecraft/world/level/material/FluidState;)Lnet/minecraft/client/renderer/RenderType; a
	getRenderType (Lnet/minecraft/world/item/ItemStack;Z)Lnet/minecraft/client/renderer/RenderType; a
	getRenderType (Lnet/minecraft/world/level/block/state/BlockState;Z)Lnet/minecraft/client/renderer/RenderType; a
	setFancy (Z)V a
net/minecraft/client/renderer/ItemInHandRenderer fjt
	ARM_HEIGHT_SCALE B
	ARM_POSTROTATION_X_OFFSET K
	ARM_POS_SCALE C
	ARM_POS_X D
	ARM_POS_Y E
	ARM_POS_Z F
	ARM_PREROTATION_X_OFFSET H
	ARM_PREROTATION_Y_OFFSET I
	ARM_PREROTATION_Z_OFFSET J
	ARM_PRESWING_ROT_Y G
	ARM_ROT_X L
	ARM_ROT_Y M
	ARM_ROT_Z N
	ARM_SWING_X_POS_SCALE w
	ARM_SWING_Y_POS_SCALE x
	ARM_SWING_Y_ROT_AMOUNT z
	ARM_SWING_Z_POS_SCALE y
	ARM_SWING_Z_ROT_AMOUNT A
	BOW_CHARGE_SHAKE_X_SCALE ap
	BOW_CHARGE_SHAKE_Y_SCALE aq
	BOW_CHARGE_SHAKE_Z_SCALE ar
	BOW_CHARGE_X_POS_SCALE am
	BOW_CHARGE_Y_POS_SCALE an
	BOW_CHARGE_Z_POS_SCALE ao
	BOW_CHARGE_Z_SCALE as
	BOW_MIN_SHAKE_CHARGE at
	EAT_EXTRA_JIGGLE_CUTOFF u
	EAT_EXTRA_JIGGLE_SCALE v
	EAT_JIGGLE_EXPONENT t
	EAT_JIGGLE_X_POS_SCALE q
	EAT_JIGGLE_X_ROT_AMOUNT n
	EAT_JIGGLE_Y_POS_SCALE r
	EAT_JIGGLE_Y_ROT_AMOUNT o
	EAT_JIGGLE_Z_POS_SCALE s
	EAT_JIGGLE_Z_ROT_AMOUNT p
	ITEM_HEIGHT_SCALE f
	ITEM_POS_X g
	ITEM_POS_Y h
	ITEM_POS_Z i
	ITEM_PRESWING_ROT_Y j
	ITEM_SWING_X_POS_SCALE c
	ITEM_SWING_X_ROT_AMOUNT k
	ITEM_SWING_Y_POS_SCALE d
	ITEM_SWING_Y_ROT_AMOUNT l
	ITEM_SWING_Z_POS_SCALE e
	ITEM_SWING_Z_ROT_AMOUNT m
	MAPHAND_X_ROT_AMOUNT X
	MAPHAND_Y_ROT_AMOUNT Y
	MAPHAND_Z_ROT_AMOUNT Z
	MAP_BACKGROUND a
	MAP_BACKGROUND_CHECKERBOARD b
	MAP_BORDER aj
	MAP_FINAL_SCALE ai
	MAP_GLOBAL_X_POS af
	MAP_GLOBAL_Y_POS ag
	MAP_GLOBAL_Z_POS ah
	MAP_HANDS_HEIGHT_SCALE T
	MAP_HANDS_POS_X Q
	MAP_HANDS_POS_Y R
	MAP_HANDS_POS_Z S
	MAP_HANDS_TILT_SCALE U
	MAP_HANDS_Z_ROT_AMOUNT W
	MAP_HAND_X_POS aa
	MAP_HAND_Y_POS ab
	MAP_HAND_Z_POS ac
	MAP_HEIGHT ak
	MAP_PLAYER_PITCH_SCALE V
	MAP_PRE_ROT_SCALE ae
	MAP_SWING_X_POS_SCALE O
	MAP_SWING_X_ROT_AMOUNT ad
	MAP_SWING_Z_POS_SCALE P
	MAP_WIDTH al
	entityRenderDispatcher aB
	itemRenderer aC
	mainHandHeight ax
	mainHandItem av
	minecraft au
	oMainHandHeight ay
	oOffHandHeight aA
	offHandHeight az
	offHandItem aw
	applyBrushTransform (Lcom/mojang/blaze3d/vertex/PoseStack;FLnet/minecraft/world/entity/HumanoidArm;Lnet/minecraft/world/item/ItemStack;F)V a
	applyEatTransform (Lcom/mojang/blaze3d/vertex/PoseStack;FLnet/minecraft/world/entity/HumanoidArm;Lnet/minecraft/world/item/ItemStack;)V a
	applyItemArmAttackTransform (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/world/entity/HumanoidArm;F)V a
	applyItemArmTransform (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/world/entity/HumanoidArm;F)V b
	calculateMapTilt (F)F a
	evaluateWhichHandsToRender (Lnet/minecraft/client/player/LocalPlayer;)Lnet/minecraft/client/renderer/ItemInHandRenderer$HandRenderSelection; a
	isChargedCrossbow (Lnet/minecraft/world/item/ItemStack;)Z a
	itemUsed (Lnet/minecraft/world/InteractionHand;)V a
	renderArmWithItem (Lnet/minecraft/client/player/AbstractClientPlayer;FFLnet/minecraft/world/InteractionHand;FLnet/minecraft/world/item/ItemStack;FLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	renderHandsWithItems (FLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource$BufferSource;Lnet/minecraft/client/player/LocalPlayer;I)V a
	renderItem (Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/item/ItemDisplayContext;ZLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	renderMap (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;ILnet/minecraft/world/item/ItemStack;)V a
	renderMapHand (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;ILnet/minecraft/world/entity/HumanoidArm;)V a
	renderOneHandedMap (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;IFLnet/minecraft/world/entity/HumanoidArm;FLnet/minecraft/world/item/ItemStack;)V a
	renderPlayerArm (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;IFFLnet/minecraft/world/entity/HumanoidArm;)V a
	renderTwoHandedMap (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;IFFF)V a
	selectionUsingItemWhileHoldingBowLike (Lnet/minecraft/client/player/LocalPlayer;)Lnet/minecraft/client/renderer/ItemInHandRenderer$HandRenderSelection; b
	tick ()V a
net/minecraft/client/renderer/ItemInHandRenderer$HandRenderSelection fjt$a
	$VALUES f
	RENDER_BOTH_HANDS a
	RENDER_MAIN_HAND_ONLY b
	RENDER_OFF_HAND_ONLY c
	renderMainHand d
	renderOffHand e
	$values ()[Lnet/minecraft/client/renderer/ItemInHandRenderer$HandRenderSelection; a
	onlyForHand (Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/client/renderer/ItemInHandRenderer$HandRenderSelection; a
net/minecraft/client/renderer/ItemModelShaper fju
	modelManager c
	shapes a
	shapesCache b
	getIndex (Lnet/minecraft/world/item/Item;)I b
	getItemModel (Lnet/minecraft/world/item/Item;)Lnet/minecraft/client/resources/model/BakedModel; a
	getItemModel (Lnet/minecraft/world/item/ItemStack;)Lnet/minecraft/client/resources/model/BakedModel; a
	getModelManager ()Lnet/minecraft/client/resources/model/ModelManager; a
	rebuildCache ()V b
	register (Lnet/minecraft/world/item/Item;Lnet/minecraft/client/resources/model/ModelResourceLocation;)V a
net/minecraft/client/renderer/LevelRenderer fjv
	CEILED_SECTION_DIAGONAL g
	CHUNK_SIZE a
	CLOUDS_LOCATION o
	DIRECTIONS b
	END_SKY_LOCATION p
	FORCEFIELD_LOCATION q
	HALF_A_SECOND_IN_MILLIS l
	HALF_CHUNK_SIZE d
	LOGGER c
	MINIMUM_ADVANCED_CULLING_DISTANCE f
	MIN_FOG_DISTANCE h
	MOON_LOCATION m
	RAIN_DIAMETER j
	RAIN_LOCATION r
	RAIN_RADIUS i
	SKY_DISC_RADIUS e
	SNOW_LOCATION s
	SUN_LOCATION n
	TRANSPARENT_SORT_COUNT k
	blockEntityRenderDispatcher v
	captureFrustum ar
	capturedFrustum as
	chunkRenderDispatcher am
	cloudBuffer I
	cloudsTarget U
	culledEntities ap
	cullingFrustum aq
	darkBuffer G
	destroyingBlocks L
	destructionProgress M
	entityEffect P
	entityRenderDispatcher u
	entityTarget O
	frameTimes J
	frustumPoints at
	frustumPos au
	generateClouds H
	globalBlockEntities B
	itemEntityTarget R
	lastCameraChunkX Z
	lastCameraChunkY aa
	lastCameraChunkZ ab
	lastCameraX W
	lastCameraY X
	lastCameraZ Y
	lastFullRenderChunkUpdate C
	lastViewDistance an
	level x
	minecraft t
	needsFrustumUpdate aA
	needsFullRenderChunkUpdate ay
	nextFullUpdateMillis az
	particlesTarget S
	playingRecords N
	prevCamRotX af
	prevCamRotY ag
	prevCamX ac
	prevCamY ad
	prevCamZ ae
	prevCloudColor ak
	prevCloudX ah
	prevCloudY ai
	prevCloudZ aj
	prevCloudsType al
	rainSizeX aC
	rainSizeZ aD
	rainSoundTime aB
	recentlyCompiledChunks y
	renderBuffers w
	renderChunkStorage z
	renderChunksInFrustum A
	renderedEntities ao
	skyBuffer F
	starBuffer E
	ticks K
	translucentTarget Q
	transparencyChain V
	viewArea D
	weatherTarget T
	xTransparentOld av
	yTransparentOld aw
	zTransparentOld ax
	addChainedFilledBoxVertices (Lcom/mojang/blaze3d/vertex/PoseStack;Lcom/mojang/blaze3d/vertex/VertexConsumer;DDDDDDFFFF)V b
	addChainedFilledBoxVertices (Lcom/mojang/blaze3d/vertex/PoseStack;Lcom/mojang/blaze3d/vertex/VertexConsumer;FFFFFFFFFF)V a
	addFrustumQuad (Lcom/mojang/blaze3d/vertex/VertexConsumer;Lorg/joml/Matrix4f;IIIIIII)V a
	addFrustumVertex (Lcom/mojang/blaze3d/vertex/VertexConsumer;Lorg/joml/Matrix4f;I)V a
	addParticle (Lnet/minecraft/core/particles/ParticleOptions;DDDDDD)V a
	addParticle (Lnet/minecraft/core/particles/ParticleOptions;ZDDDDDD)V a
	addParticle (Lnet/minecraft/core/particles/ParticleOptions;ZZDDDDDD)V a
	addParticleInternal (Lnet/minecraft/core/particles/ParticleOptions;ZDDDDDD)Lnet/minecraft/client/particle/Particle; b
	addParticleInternal (Lnet/minecraft/core/particles/ParticleOptions;ZZDDDDDD)Lnet/minecraft/client/particle/Particle; b
	addRecentlyCompiledChunk (Lnet/minecraft/client/renderer/chunk/ChunkRenderDispatcher$RenderChunk;)V a
	allChanged ()V f
	applyFrustum (Lnet/minecraft/client/renderer/culling/Frustum;)V a
	blockChanged (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/state/BlockState;I)V a
	buildClouds (Lcom/mojang/blaze3d/vertex/BufferBuilder;DDDLnet/minecraft/world/phys/Vec3;)Lcom/mojang/blaze3d/vertex/BufferBuilder$RenderedBuffer; a
	buildSkyDisc (Lcom/mojang/blaze3d/vertex/BufferBuilder;F)Lcom/mojang/blaze3d/vertex/BufferBuilder$RenderedBuffer; a
	calculateParticleLevel (Z)Lnet/minecraft/client/ParticleStatus; a
	captureFrustum ()V m
	captureFrustum (Lorg/joml/Matrix4f;Lorg/joml/Matrix4f;DDDLnet/minecraft/client/renderer/culling/Frustum;)V a
	checkPoseStack (Lcom/mojang/blaze3d/vertex/PoseStack;)V a
	clear ()V p
	closeToBorder (Lnet/minecraft/core/BlockPos;Lnet/minecraft/client/renderer/chunk/ChunkRenderDispatcher$RenderChunk;)Z a
	compileChunks (Lnet/minecraft/client/Camera;)V c
	countRenderedChunks ()I k
	createDarkSky ()V A
	createLightSky ()V B
	createStars ()V C
	deinitTransparency ()V z
	destroyBlockProgress (ILnet/minecraft/core/BlockPos;I)V c
	doEntityOutline ()V b
	doesMobEffectBlockSky (Lnet/minecraft/client/Camera;)Z b
	drawStars (Lcom/mojang/blaze3d/vertex/BufferBuilder;)Lcom/mojang/blaze3d/vertex/BufferBuilder$RenderedBuffer; a
	entityTarget ()Lcom/mojang/blaze3d/pipeline/RenderTarget; s
	getChunkRenderDispatcher ()Lnet/minecraft/client/renderer/chunk/ChunkRenderDispatcher; h
	getChunkStatistics ()Ljava/lang/String; g
	getCloudsTarget ()Lcom/mojang/blaze3d/pipeline/RenderTarget; x
	getEntityStatistics ()Ljava/lang/String; l
	getItemEntityTarget ()Lcom/mojang/blaze3d/pipeline/RenderTarget; u
	getLastViewDistance ()D j
	getLightColor (Lnet/minecraft/world/level/BlockAndTintGetter;Lnet/minecraft/core/BlockPos;)I a
	getLightColor (Lnet/minecraft/world/level/BlockAndTintGetter;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/BlockPos;)I a
	getParticlesTarget ()Lcom/mojang/blaze3d/pipeline/RenderTarget; v
	getRelativeFrom (Lnet/minecraft/core/BlockPos;Lnet/minecraft/client/renderer/chunk/ChunkRenderDispatcher$RenderChunk;Lnet/minecraft/core/Direction;)Lnet/minecraft/client/renderer/chunk/ChunkRenderDispatcher$RenderChunk; a
	getTotalChunks ()D i
	getTranslucentTarget ()Lcom/mojang/blaze3d/pipeline/RenderTarget; t
	getWeatherTarget ()Lcom/mojang/blaze3d/pipeline/RenderTarget; w
	globalLevelEvent (ILnet/minecraft/core/BlockPos;I)V a
	graphicsChanged ()V e
	hasRenderedAllChunks ()Z q
	initOutline ()V a
	initTransparency ()V y
	initializeQueueForFullUpdate (Lnet/minecraft/client/Camera;Ljava/util/Queue;)V a
	isChunkCompiled (Lnet/minecraft/core/BlockPos;)Z a
	killFrustum ()V n
	levelEvent (ILnet/minecraft/core/BlockPos;I)V b
	mixColor (F)Lnet/minecraft/world/phys/Vec3; a
	needsUpdate ()V r
	notifyNearbyEntities (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Z)V a
	onResourceManagerReload (Lnet/minecraft/server/packs/resources/ResourceManager;)V a
	playStreamingMusic (Lnet/minecraft/sounds/SoundEvent;Lnet/minecraft/core/BlockPos;)V a
	prepareCullFrustum (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/world/phys/Vec3;Lorg/joml/Matrix4f;)V a
	removeProgress (Lnet/minecraft/server/level/BlockDestructionProgress;)V a
	renderChunkLayer (Lnet/minecraft/client/renderer/RenderType;Lcom/mojang/blaze3d/vertex/PoseStack;DDDLorg/joml/Matrix4f;)V a
	renderClouds (Lcom/mojang/blaze3d/vertex/PoseStack;Lorg/joml/Matrix4f;FDDD)V a
	renderDebug (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;Lnet/minecraft/client/Camera;)V a
	renderEndSky (Lcom/mojang/blaze3d/vertex/PoseStack;)V b
	renderEntity (Lnet/minecraft/world/entity/Entity;DDDFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;)V a
	renderHitOutline (Lcom/mojang/blaze3d/vertex/PoseStack;Lcom/mojang/blaze3d/vertex/VertexConsumer;Lnet/minecraft/world/entity/Entity;DDDLnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V a
	renderLevel (Lcom/mojang/blaze3d/vertex/PoseStack;FJZLnet/minecraft/client/Camera;Lnet/minecraft/client/renderer/GameRenderer;Lnet/minecraft/client/renderer/LightTexture;Lorg/joml/Matrix4f;)V a
	renderLineBox (Lcom/mojang/blaze3d/vertex/PoseStack;Lcom/mojang/blaze3d/vertex/VertexConsumer;DDDDDDFFFF)V a
	renderLineBox (Lcom/mojang/blaze3d/vertex/PoseStack;Lcom/mojang/blaze3d/vertex/VertexConsumer;DDDDDDFFFFFFF)V a
	renderLineBox (Lcom/mojang/blaze3d/vertex/PoseStack;Lcom/mojang/blaze3d/vertex/VertexConsumer;Lnet/minecraft/world/phys/AABB;FFFF)V a
	renderLineBox (Lcom/mojang/blaze3d/vertex/VertexConsumer;DDDDDDFFFF)V a
	renderShape (Lcom/mojang/blaze3d/vertex/PoseStack;Lcom/mojang/blaze3d/vertex/VertexConsumer;Lnet/minecraft/world/phys/shapes/VoxelShape;DDDFFFF)V a
	renderSky (Lcom/mojang/blaze3d/vertex/PoseStack;Lorg/joml/Matrix4f;FLnet/minecraft/client/Camera;ZLjava/lang/Runnable;)V a
	renderSnowAndRain (Lnet/minecraft/client/renderer/LightTexture;FDDD)V a
	renderVoxelShape (Lcom/mojang/blaze3d/vertex/PoseStack;Lcom/mojang/blaze3d/vertex/VertexConsumer;Lnet/minecraft/world/phys/shapes/VoxelShape;DDDFFFFZ)V a
	renderWorldBorder (Lnet/minecraft/client/Camera;)V d
	resize (II)V a
	setBlockDirty (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/state/BlockState;)V a
	setBlockDirty (Lnet/minecraft/core/BlockPos;Z)V a
	setBlocksDirty (IIIIII)V a
	setLevel (Lnet/minecraft/client/multiplayer/ClientLevel;)V a
	setSectionDirty (III)V b
	setSectionDirty (IIIZ)V a
	setSectionDirtyWithNeighbors (III)V a
	setupRender (Lnet/minecraft/client/Camera;Lnet/minecraft/client/renderer/culling/Frustum;ZZ)V a
	shiftHue (FFFF)Lnet/minecraft/world/phys/Vec3; a
	shouldShowEntityOutlines ()Z d
	tick ()V o
	tickRain (Lnet/minecraft/client/Camera;)V a
	updateGlobalBlockEntities (Ljava/util/Collection;Ljava/util/Collection;)V a
	updateRenderChunks (Ljava/util/LinkedHashSet;Lnet/minecraft/client/renderer/LevelRenderer$RenderInfoMap;Lnet/minecraft/world/phys/Vec3;Ljava/util/Queue;Z)V a
net/minecraft/client/renderer/LevelRenderer$RenderChunkInfo fjv$a
	chunk a
	directions c
	sourceDirections b
	step d
	addSourceDirection (Lnet/minecraft/core/Direction;)V b
	hasDirection (Lnet/minecraft/core/Direction;)Z a
	hasSourceDirection (I)Z a
	hasSourceDirections ()Z a
	isAxisAlignedWith (III)Z a
	setDirections (BLnet/minecraft/core/Direction;)V a
net/minecraft/client/renderer/LevelRenderer$RenderChunkStorage fjv$b
	renderChunks b
	renderInfoMap a
net/minecraft/client/renderer/LevelRenderer$RenderInfoMap fjv$c
	infos a
	get (Lnet/minecraft/client/renderer/chunk/ChunkRenderDispatcher$RenderChunk;)Lnet/minecraft/client/renderer/LevelRenderer$RenderChunkInfo; a
	put (Lnet/minecraft/client/renderer/chunk/ChunkRenderDispatcher$RenderChunk;Lnet/minecraft/client/renderer/LevelRenderer$RenderChunkInfo;)V a
net/minecraft/client/renderer/LevelRenderer$TransparencyShaderException fjv$d
net/minecraft/client/renderer/LightTexture fjw
	FULL_BLOCK c
	FULL_BRIGHT a
	FULL_SKY b
	blockLightRedFlicker h
	lightPixels e
	lightTexture d
	lightTextureLocation f
	minecraft j
	renderer i
	updateLightTexture g
	block (I)I a
	calculateDarknessScale (Lnet/minecraft/world/entity/LivingEntity;FF)F a
	clampColor (Lorg/joml/Vector3f;)V a
	getBrightness (Lnet/minecraft/world/level/dimension/DimensionType;I)F a
	getDarknessGamma (F)F b
	notGamma (F)F c
	pack (II)I a
	sky (I)I b
	tick ()V a
	turnOffLightLayer ()V b
	turnOnLightLayer ()V c
	updateLightTexture (F)V a
net/minecraft/client/renderer/MultiBufferSource fjx
	immediate (Lcom/mojang/blaze3d/vertex/BufferBuilder;)Lnet/minecraft/client/renderer/MultiBufferSource$BufferSource; a
	immediateWithBuffers (Ljava/util/Map;Lcom/mojang/blaze3d/vertex/BufferBuilder;)Lnet/minecraft/client/renderer/MultiBufferSource$BufferSource; a
net/minecraft/client/renderer/MultiBufferSource$BufferSource fjx$a
	builder a
	fixedBuffers b
	lastState c
	startedBuffers d
	endBatch ()V b
	endBatch (Lnet/minecraft/client/renderer/RenderType;)V a
	endLastBatch ()V a
	getBuilderRaw (Lnet/minecraft/client/renderer/RenderType;)Lcom/mojang/blaze3d/vertex/BufferBuilder; b
net/minecraft/client/renderer/OutlineBufferSource fjy
	bufferSource a
	outlineBufferSource b
	teamA f
	teamB e
	teamG d
	teamR c
	endOutlineBatch ()V a
	setColor (IIII)V a
net/minecraft/client/renderer/OutlineBufferSource$EntityOutlineGenerator fjy$a
	delegate f
	u j
	v k
	x g
	y h
	z i
	color (IIII)Lcom/mojang/blaze3d/vertex/VertexConsumer; a
	defaultColor (IIII)V b
	endVertex ()V e
	normal (FFF)Lcom/mojang/blaze3d/vertex/VertexConsumer; a
	overlayCoords (II)Lcom/mojang/blaze3d/vertex/VertexConsumer; a
	unsetDefaultColor ()V k
	uv (FF)Lcom/mojang/blaze3d/vertex/VertexConsumer; a
	uv2 (II)Lcom/mojang/blaze3d/vertex/VertexConsumer; b
	vertex (DDD)Lcom/mojang/blaze3d/vertex/VertexConsumer; a
	vertex (FFFFFFFFFIIFFF)V a
net/minecraft/client/renderer/PanoramaRenderer fjz
	bob d
	cubeMap b
	minecraft a
	spin c
	render (FF)V a
	wrap (FF)F b
net/minecraft/client/renderer/PostChain fka
	MAIN_RENDER_TARGET a
	customRenderTargets f
	fullSizedTargets g
	lastStamp l
	name d
	passes e
	resourceManager c
	screenHeight j
	screenTarget b
	screenWidth i
	shaderOrthoMatrix h
	time k
	addPass (Ljava/lang/String;Lcom/mojang/blaze3d/pipeline/RenderTarget;Lcom/mojang/blaze3d/pipeline/RenderTarget;)Lnet/minecraft/client/renderer/PostPass; a
	addTempTarget (Ljava/lang/String;II)V a
	getName ()Ljava/lang/String; a
	getRenderTarget (Ljava/lang/String;)Lcom/mojang/blaze3d/pipeline/RenderTarget; b
	getTempTarget (Ljava/lang/String;)Lcom/mojang/blaze3d/pipeline/RenderTarget; a
	load (Lnet/minecraft/client/renderer/texture/TextureManager;Lnet/minecraft/resources/ResourceLocation;)V a
	parsePassNode (Lnet/minecraft/client/renderer/texture/TextureManager;Lcom/google/gson/JsonElement;)V a
	parseTargetNode (Lcom/google/gson/JsonElement;)V a
	parseUniformNode (Lcom/google/gson/JsonElement;)V b
	process (F)V a
	resize (II)V a
	updateOrthoMatrix ()V b
net/minecraft/client/renderer/PostPass fkb
	auxAssets d
	auxHeights g
	auxNames e
	auxWidths f
	effect c
	inTarget a
	outTarget b
	shaderOrthoMatrix h
	addAuxAsset (Ljava/lang/String;Ljava/util/function/IntSupplier;II)V a
	getEffect ()Lnet/minecraft/client/renderer/EffectInstance; b
	getName ()Ljava/lang/String; a
	process (F)V a
	setOrthoMatrix (Lorg/joml/Matrix4f;)V a
net/minecraft/client/renderer/Rect2i fkc
	height d
	width c
	xPos a
	yPos b
	contains (II)Z b
	getHeight ()I d
	getWidth ()I c
	getX ()I a
	getY ()I b
	intersect (Lnet/minecraft/client/renderer/Rect2i;)Lnet/minecraft/client/renderer/Rect2i; a
	setHeight (I)V d
	setPosition (II)V a
	setWidth (I)V c
	setX (I)V a
	setY (I)V b
net/minecraft/client/renderer/RenderBuffers fkd
	bufferSource c
	crumblingBufferSource d
	fixedBufferPack a
	fixedBuffers b
	outlineBufferSource e
	bufferSource ()Lnet/minecraft/client/renderer/MultiBufferSource$BufferSource; b
	crumblingBufferSource ()Lnet/minecraft/client/renderer/MultiBufferSource$BufferSource; c
	fixedBufferPack ()Lnet/minecraft/client/renderer/ChunkBufferBuilderPack; a
	outlineBufferSource ()Lnet/minecraft/client/renderer/OutlineBufferSource; d
	put (Lit/unimi/dsi/fastutil/objects/Object2ObjectLinkedOpenHashMap;Lnet/minecraft/client/renderer/RenderType;)V a
net/minecraft/client/renderer/RenderStateShard fke
	ADDITIVE_TRANSPARENCY d
	BLOCK_SHEET an
	BLOCK_SHEET_MIPPED am
	CLOUDS_TARGET aN
	COLOR_DEPTH_WRITE aC
	COLOR_WRITE aD
	CRUMBLING_TRANSPARENCY g
	CULL aw
	DEFAULT_LINE aP
	DEFAULT_TEXTURING ap
	DEPTH_WRITE aE
	ENTITY_GLINT_TEXTURING ar
	EQUAL_DEPTH_TEST az
	GLINT_TEXTURING aq
	GLINT_TRANSPARENCY f
	GREATER_DEPTH_TEST aB
	ITEM_ENTITY_TARGET aO
	LEQUAL_DEPTH_TEST aA
	LIGHTMAP as
	LIGHTNING_TRANSPARENCY e
	MAIN_TARGET aI
	MAX_ENCHANTMENT_GLINT_SPEED_MILLIS a
	NO_COLOR_LOGIC aQ
	NO_CULL ax
	NO_DEPTH_TEST ay
	NO_LAYERING aF
	NO_LIGHTMAP at
	NO_OVERLAY av
	NO_SHADER i
	NO_TEXTURE ao
	NO_TRANSPARENCY c
	OR_REVERSE_COLOR_LOGIC aR
	OUTLINE_TARGET aJ
	OVERLAY au
	PARTICLES_TARGET aL
	POLYGON_OFFSET_LAYERING aG
	POSITION_COLOR_LIGHTMAP_SHADER j
	POSITION_COLOR_SHADER o
	POSITION_COLOR_TEX_LIGHTMAP_SHADER n
	POSITION_COLOR_TEX_SHADER l
	POSITION_SHADER k
	POSITION_TEX_SHADER m
	RENDERTYPE_ARMOR_CUTOUT_NO_CULL_SHADER v
	RENDERTYPE_ARMOR_ENTITY_GLINT_SHADER Q
	RENDERTYPE_ARMOR_GLINT_SHADER P
	RENDERTYPE_BEACON_BEAM_SHADER F
	RENDERTYPE_CRUMBLING_SHADER W
	RENDERTYPE_CUTOUT_MIPPED_SHADER q
	RENDERTYPE_CUTOUT_SHADER r
	RENDERTYPE_END_GATEWAY_SHADER ag
	RENDERTYPE_END_PORTAL_SHADER af
	RENDERTYPE_ENERGY_SWIRL_SHADER L
	RENDERTYPE_ENTITY_ALPHA_SHADER J
	RENDERTYPE_ENTITY_CUTOUT_NO_CULL_SHADER y
	RENDERTYPE_ENTITY_CUTOUT_NO_CULL_Z_OFFSET_SHADER z
	RENDERTYPE_ENTITY_CUTOUT_SHADER x
	RENDERTYPE_ENTITY_DECAL_SHADER G
	RENDERTYPE_ENTITY_GLINT_DIRECT_SHADER V
	RENDERTYPE_ENTITY_GLINT_SHADER U
	RENDERTYPE_ENTITY_NO_OUTLINE_SHADER H
	RENDERTYPE_ENTITY_SHADOW_SHADER I
	RENDERTYPE_ENTITY_SMOOTH_CUTOUT_SHADER E
	RENDERTYPE_ENTITY_SOLID_SHADER w
	RENDERTYPE_ENTITY_TRANSLUCENT_CULL_SHADER B
	RENDERTYPE_ENTITY_TRANSLUCENT_EMISSIVE_SHADER D
	RENDERTYPE_ENTITY_TRANSLUCENT_SHADER C
	RENDERTYPE_EYES_SHADER K
	RENDERTYPE_GLINT_DIRECT_SHADER T
	RENDERTYPE_GLINT_SHADER S
	RENDERTYPE_GLINT_TRANSLUCENT_SHADER R
	RENDERTYPE_GUI_GHOST_RECIPE_OVERLAY_SHADER al
	RENDERTYPE_GUI_OVERLAY_SHADER aj
	RENDERTYPE_GUI_SHADER ai
	RENDERTYPE_GUI_TEXT_HIGHLIGHT_SHADER ak
	RENDERTYPE_ITEM_ENTITY_TRANSLUCENT_CULL_SHADER A
	RENDERTYPE_LEASH_SHADER M
	RENDERTYPE_LIGHTNING_SHADER ad
	RENDERTYPE_LINES_SHADER ah
	RENDERTYPE_OUTLINE_SHADER O
	RENDERTYPE_SOLID_SHADER p
	RENDERTYPE_TEXT_BACKGROUND_SEE_THROUGH_SHADER ab
	RENDERTYPE_TEXT_BACKGROUND_SHADER Y
	RENDERTYPE_TEXT_INTENSITY_SEE_THROUGH_SHADER ac
	RENDERTYPE_TEXT_INTENSITY_SHADER Z
	RENDERTYPE_TEXT_SEE_THROUGH_SHADER aa
	RENDERTYPE_TEXT_SHADER X
	RENDERTYPE_TRANSLUCENT_MOVING_BLOCK_SHADER t
	RENDERTYPE_TRANSLUCENT_NO_CRUMBLING_SHADER u
	RENDERTYPE_TRANSLUCENT_SHADER s
	RENDERTYPE_TRIPWIRE_SHADER ae
	RENDERTYPE_WATER_MASK_SHADER N
	TRANSLUCENT_TARGET aK
	TRANSLUCENT_TRANSPARENCY h
	VIEW_OFFSET_Z_LAYERING aH
	VIEW_SCALE_Z_EPSILON aS
	WEATHER_TARGET aM
	clearState aU
	name b
	setupState aT
	clearRenderState ()V b
	setupGlintTexturing (F)V a
	setupRenderState ()V a
net/minecraft/client/renderer/RenderStateShard$BooleanStateShard fke$a
	enabled aS
net/minecraft/client/renderer/RenderStateShard$ColorLogicStateShard fke$b
net/minecraft/client/renderer/RenderStateShard$CullStateShard fke$c
net/minecraft/client/renderer/RenderStateShard$DepthTestStateShard fke$d
	functionName aS
net/minecraft/client/renderer/RenderStateShard$EmptyTextureStateShard fke$e
	cutoutTexture ()Ljava/util/Optional; c
net/minecraft/client/renderer/RenderStateShard$LayeringStateShard fke$f
net/minecraft/client/renderer/RenderStateShard$LightmapStateShard fke$g
net/minecraft/client/renderer/RenderStateShard$LineStateShard fke$h
	width aS
net/minecraft/client/renderer/RenderStateShard$MultiTextureStateShard fke$i
	cutoutTexture aS
	builder ()Lnet/minecraft/client/renderer/RenderStateShard$MultiTextureStateShard$Builder; d
	cutoutTexture ()Ljava/util/Optional; c
net/minecraft/client/renderer/RenderStateShard$MultiTextureStateShard$Builder fke$i$a
	builder a
	add (Lnet/minecraft/resources/ResourceLocation;ZZ)Lnet/minecraft/client/renderer/RenderStateShard$MultiTextureStateShard$Builder; a
	build ()Lnet/minecraft/client/renderer/RenderStateShard$MultiTextureStateShard; a
net/minecraft/client/renderer/RenderStateShard$OffsetTexturingStateShard fke$j
net/minecraft/client/renderer/RenderStateShard$OutputStateShard fke$k
net/minecraft/client/renderer/RenderStateShard$OverlayStateShard fke$l
net/minecraft/client/renderer/RenderStateShard$ShaderStateShard fke$m
	shader aS
net/minecraft/client/renderer/RenderStateShard$TextureStateShard fke$n
	blur aT
	mipmap aU
	texture aS
	cutoutTexture ()Ljava/util/Optional; c
net/minecraft/client/renderer/RenderStateShard$TexturingStateShard fke$o
net/minecraft/client/renderer/RenderStateShard$TransparencyStateShard fke$p
net/minecraft/client/renderer/RenderStateShard$WriteMaskStateShard fke$q
	writeColor aS
	writeDepth aT
net/minecraft/client/renderer/RenderType fkf
	ARMOR_CUTOUT_NO_CULL bg
	ARMOR_ENTITY_GLINT bz
	ARMOR_GLINT by
	BEACON_BEAM bq
	BIG_BUFFER_SIZE aS
	BYTES_IN_INT aY
	CHUNK_BUFFER_LAYERS ca
	CRUMBLING bF
	CUTOUT bc
	CUTOUT_MIPPED bb
	DEBUG_FILLED_BOX bT
	DEBUG_LINE_STRIP bS
	DEBUG_QUADS bU
	DEBUG_SECTION_QUADS bV
	DRAGON_EXPLOSION_ALPHA bu
	END_GATEWAY bR
	END_PORTAL bQ
	ENTITY_CUTOUT bi
	ENTITY_CUTOUT_NO_CULL bj
	ENTITY_CUTOUT_NO_CULL_Z_OFFSET bk
	ENTITY_DECAL br
	ENTITY_GLINT bD
	ENTITY_GLINT_DIRECT bE
	ENTITY_NO_OUTLINE bs
	ENTITY_SHADOW bt
	ENTITY_SMOOTH_CUTOUT bp
	ENTITY_SOLID bh
	ENTITY_TRANSLUCENT bn
	ENTITY_TRANSLUCENT_CULL bm
	ENTITY_TRANSLUCENT_EMISSIVE bo
	EYES bv
	GLINT bB
	GLINT_DIRECT bC
	GLINT_TRANSLUCENT bA
	GUI bW
	GUI_GHOST_RECIPE_OVERLAY bZ
	GUI_OVERLAY bX
	GUI_TEXT_HIGHLIGHT bY
	ITEM_ENTITY_TRANSLUCENT_CULL bl
	LEASH bw
	LIGHTNING bO
	LINES aW
	LINE_STRIP aX
	MEDIUM_BUFFER_SIZE aT
	MEGABYTE aZ
	SMALL_BUFFER_SIZE aU
	SOLID ba
	TEXT bG
	TEXT_BACKGROUND bH
	TEXT_BACKGROUND_SEE_THROUGH bM
	TEXT_INTENSITY bI
	TEXT_INTENSITY_POLYGON_OFFSET bK
	TEXT_INTENSITY_SEE_THROUGH bN
	TEXT_POLYGON_OFFSET bJ
	TEXT_SEE_THROUGH bL
	TRANSIENT_BUFFER_SIZE aV
	TRANSLUCENT bd
	TRANSLUCENT_MOVING_BLOCK be
	TRANSLUCENT_NO_CRUMBLING bf
	TRIPWIRE bP
	WATER_MASK bx
	affectsCrumbling ce
	asOptional cg
	bufferSize cd
	format cb
	mode cc
	sortOnUpload cf
	affectsCrumbling ()Z M
	armorCutoutNoCull (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/client/renderer/RenderType; a
	armorEntityGlint ()Lnet/minecraft/client/renderer/RenderType; l
	armorGlint ()Lnet/minecraft/client/renderer/RenderType; k
	asOptional ()Ljava/util/Optional; O
	beaconBeam (Lnet/minecraft/resources/ResourceLocation;Z)Lnet/minecraft/client/renderer/RenderType; e
	bufferSize ()I H
	canConsolidateConsecutiveGeometry ()Z N
	chunkBufferLayers ()Ljava/util/List; G
	create (Ljava/lang/String;Lcom/mojang/blaze3d/vertex/VertexFormat;Lcom/mojang/blaze3d/vertex/VertexFormat$Mode;ILnet/minecraft/client/renderer/RenderType$CompositeState;)Lnet/minecraft/client/renderer/RenderType$CompositeRenderType; a
	create (Ljava/lang/String;Lcom/mojang/blaze3d/vertex/VertexFormat;Lcom/mojang/blaze3d/vertex/VertexFormat$Mode;IZZLnet/minecraft/client/renderer/RenderType$CompositeState;)Lnet/minecraft/client/renderer/RenderType$CompositeRenderType; a
	crumbling (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/client/renderer/RenderType; q
	cutout ()Lnet/minecraft/client/renderer/RenderType; e
	cutoutMipped ()Lnet/minecraft/client/renderer/RenderType; d
	debugFilledBox ()Lnet/minecraft/client/renderer/RenderType; z
	debugLineStrip (D)Lnet/minecraft/client/renderer/RenderType; a
	debugQuads ()Lnet/minecraft/client/renderer/RenderType; A
	debugSectionQuads ()Lnet/minecraft/client/renderer/RenderType; B
	dragonExplosionAlpha (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/client/renderer/RenderType; n
	end (Lcom/mojang/blaze3d/vertex/BufferBuilder;Lcom/mojang/blaze3d/vertex/VertexSorting;)V a
	endGateway ()Lnet/minecraft/client/renderer/RenderType; w
	endPortal ()Lnet/minecraft/client/renderer/RenderType; v
	energySwirl (Lnet/minecraft/resources/ResourceLocation;FF)Lnet/minecraft/client/renderer/RenderType; a
	entityCutout (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/client/renderer/RenderType; c
	entityCutoutNoCull (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/client/renderer/RenderType; d
	entityCutoutNoCull (Lnet/minecraft/resources/ResourceLocation;Z)Lnet/minecraft/client/renderer/RenderType; a
	entityCutoutNoCullZOffset (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/client/renderer/RenderType; e
	entityCutoutNoCullZOffset (Lnet/minecraft/resources/ResourceLocation;Z)Lnet/minecraft/client/renderer/RenderType; b
	entityDecal (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/client/renderer/RenderType; k
	entityGlint ()Lnet/minecraft/client/renderer/RenderType; p
	entityGlintDirect ()Lnet/minecraft/client/renderer/RenderType; q
	entityNoOutline (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/client/renderer/RenderType; l
	entityShadow (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/client/renderer/RenderType; m
	entitySmoothCutout (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/client/renderer/RenderType; j
	entitySolid (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/client/renderer/RenderType; b
	entityTranslucent (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/client/renderer/RenderType; h
	entityTranslucent (Lnet/minecraft/resources/ResourceLocation;Z)Lnet/minecraft/client/renderer/RenderType; c
	entityTranslucentCull (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/client/renderer/RenderType; g
	entityTranslucentEmissive (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/client/renderer/RenderType; i
	entityTranslucentEmissive (Lnet/minecraft/resources/ResourceLocation;Z)Lnet/minecraft/client/renderer/RenderType; d
	eyes (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/client/renderer/RenderType; o
	format ()Lcom/mojang/blaze3d/vertex/VertexFormat; I
	glint ()Lnet/minecraft/client/renderer/RenderType; n
	glintDirect ()Lnet/minecraft/client/renderer/RenderType; o
	glintTranslucent ()Lnet/minecraft/client/renderer/RenderType; m
	gui ()Lnet/minecraft/client/renderer/RenderType; C
	guiGhostRecipeOverlay ()Lnet/minecraft/client/renderer/RenderType; F
	guiOverlay ()Lnet/minecraft/client/renderer/RenderType; D
	guiTextHighlight ()Lnet/minecraft/client/renderer/RenderType; E
	isOutline ()Z L
	itemEntityTranslucentCull (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/client/renderer/RenderType; f
	leash ()Lnet/minecraft/client/renderer/RenderType; i
	lightning ()Lnet/minecraft/client/renderer/RenderType; t
	lineStrip ()Lnet/minecraft/client/renderer/RenderType; y
	lines ()Lnet/minecraft/client/renderer/RenderType; x
	mode ()Lcom/mojang/blaze3d/vertex/VertexFormat$Mode; J
	outline ()Ljava/util/Optional; K
	outline (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/client/renderer/RenderType; p
	solid ()Lnet/minecraft/client/renderer/RenderType; c
	text (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/client/renderer/RenderType; r
	textBackground ()Lnet/minecraft/client/renderer/RenderType; r
	textBackgroundSeeThrough ()Lnet/minecraft/client/renderer/RenderType; s
	textIntensity (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/client/renderer/RenderType; s
	textIntensityPolygonOffset (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/client/renderer/RenderType; u
	textIntensitySeeThrough (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/client/renderer/RenderType; w
	textPolygonOffset (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/client/renderer/RenderType; t
	textSeeThrough (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/client/renderer/RenderType; v
	translucent ()Lnet/minecraft/client/renderer/RenderType; f
	translucentMovingBlock ()Lnet/minecraft/client/renderer/RenderType; g
	translucentMovingBlockState ()Lnet/minecraft/client/renderer/RenderType$CompositeState; P
	translucentNoCrumbling ()Lnet/minecraft/client/renderer/RenderType; h
	translucentState (Lnet/minecraft/client/renderer/RenderStateShard$ShaderStateShard;)Lnet/minecraft/client/renderer/RenderType$CompositeState; a
	tripwire ()Lnet/minecraft/client/renderer/RenderType; u
	tripwireState ()Lnet/minecraft/client/renderer/RenderType$CompositeState; Q
	waterMask ()Lnet/minecraft/client/renderer/RenderType; j
net/minecraft/client/renderer/RenderType$CompositeRenderType fkf$a
	OUTLINE aY
	isOutline bb
	outline ba
	state aZ
	isOutline ()Z L
	outline ()Ljava/util/Optional; K
	state ()Lnet/minecraft/client/renderer/RenderType$CompositeState; P
net/minecraft/client/renderer/RenderType$CompositeState fkf$b
	colorLogicState m
	cullState e
	depthTestState d
	layeringState h
	lightmapState f
	lineState l
	outlineProperty n
	outputState i
	overlayState g
	shaderState b
	states o
	textureState a
	texturingState j
	transparencyState c
	writeMaskState k
	builder ()Lnet/minecraft/client/renderer/RenderType$CompositeState$CompositeStateBuilder; a
net/minecraft/client/renderer/RenderType$CompositeState$CompositeStateBuilder fkf$b$a
	colorLogicState m
	cullState e
	depthTestState d
	layeringState h
	lightmapState f
	lineState l
	outputState i
	overlayState g
	shaderState b
	textureState a
	texturingState j
	transparencyState c
	writeMaskState k
	createCompositeState (Lnet/minecraft/client/renderer/RenderType$OutlineProperty;)Lnet/minecraft/client/renderer/RenderType$CompositeState; a
	createCompositeState (Z)Lnet/minecraft/client/renderer/RenderType$CompositeState; a
	setColorLogicState (Lnet/minecraft/client/renderer/RenderStateShard$ColorLogicStateShard;)Lnet/minecraft/client/renderer/RenderType$CompositeState$CompositeStateBuilder; a
	setCullState (Lnet/minecraft/client/renderer/RenderStateShard$CullStateShard;)Lnet/minecraft/client/renderer/RenderType$CompositeState$CompositeStateBuilder; a
	setDepthTestState (Lnet/minecraft/client/renderer/RenderStateShard$DepthTestStateShard;)Lnet/minecraft/client/renderer/RenderType$CompositeState$CompositeStateBuilder; a
	setLayeringState (Lnet/minecraft/client/renderer/RenderStateShard$LayeringStateShard;)Lnet/minecraft/client/renderer/RenderType$CompositeState$CompositeStateBuilder; a
	setLightmapState (Lnet/minecraft/client/renderer/RenderStateShard$LightmapStateShard;)Lnet/minecraft/client/renderer/RenderType$CompositeState$CompositeStateBuilder; a
	setLineState (Lnet/minecraft/client/renderer/RenderStateShard$LineStateShard;)Lnet/minecraft/client/renderer/RenderType$CompositeState$CompositeStateBuilder; a
	setOutputState (Lnet/minecraft/client/renderer/RenderStateShard$OutputStateShard;)Lnet/minecraft/client/renderer/RenderType$CompositeState$CompositeStateBuilder; a
	setOverlayState (Lnet/minecraft/client/renderer/RenderStateShard$OverlayStateShard;)Lnet/minecraft/client/renderer/RenderType$CompositeState$CompositeStateBuilder; a
	setShaderState (Lnet/minecraft/client/renderer/RenderStateShard$ShaderStateShard;)Lnet/minecraft/client/renderer/RenderType$CompositeState$CompositeStateBuilder; a
	setTextureState (Lnet/minecraft/client/renderer/RenderStateShard$EmptyTextureStateShard;)Lnet/minecraft/client/renderer/RenderType$CompositeState$CompositeStateBuilder; a
	setTexturingState (Lnet/minecraft/client/renderer/RenderStateShard$TexturingStateShard;)Lnet/minecraft/client/renderer/RenderType$CompositeState$CompositeStateBuilder; a
	setTransparencyState (Lnet/minecraft/client/renderer/RenderStateShard$TransparencyStateShard;)Lnet/minecraft/client/renderer/RenderType$CompositeState$CompositeStateBuilder; a
	setWriteMaskState (Lnet/minecraft/client/renderer/RenderStateShard$WriteMaskStateShard;)Lnet/minecraft/client/renderer/RenderType$CompositeState$CompositeStateBuilder; a
net/minecraft/client/renderer/RenderType$OutlineProperty fkf$c
	$VALUES e
	AFFECTS_OUTLINE c
	IS_OUTLINE b
	NONE a
	name d
	$values ()[Lnet/minecraft/client/renderer/RenderType$OutlineProperty; a
net/minecraft/client/renderer/RunningTrimmedMean fkg
	count b
	cursor c
	values a
	registerValueAndGetMean (J)J a
net/minecraft/client/renderer/ScreenEffectRenderer fkh
	UNDERWATER_LOCATION a
	getViewBlockingState (Lnet/minecraft/world/entity/player/Player;)Lnet/minecraft/world/level/block/state/BlockState; a
	renderFire (Lnet/minecraft/client/Minecraft;Lcom/mojang/blaze3d/vertex/PoseStack;)V c
	renderScreenEffect (Lnet/minecraft/client/Minecraft;Lcom/mojang/blaze3d/vertex/PoseStack;)V a
	renderTex (Lnet/minecraft/client/renderer/texture/TextureAtlasSprite;Lcom/mojang/blaze3d/vertex/PoseStack;)V a
	renderWater (Lnet/minecraft/client/Minecraft;Lcom/mojang/blaze3d/vertex/PoseStack;)V b
net/minecraft/client/renderer/ShaderInstance fki
	ALWAYS_REAPPLY v
	CHUNK_OFFSET q
	COLOR_MODULATOR g
	DUMMY_UNIFORM u
	FOG_COLOR m
	FOG_END l
	FOG_SHAPE n
	FOG_START k
	GAME_TIME p
	GLINT_ALPHA j
	INVERSE_VIEW_ROTATION_MATRIX d
	LIGHT0_DIRECTION h
	LIGHT1_DIRECTION i
	LINE_WIDTH o
	LOGGER t
	MODEL_VIEW_MATRIX b
	PROJECTION_MATRIX c
	SCREEN_SIZE f
	SHADER_CORE_PATH r
	SHADER_INCLUDE_PATH s
	SHADER_PATH a
	TEXTURE_MATRIX e
	attributeNames J
	attributes I
	blend H
	dirty G
	fragmentProgram L
	lastAppliedShader w
	lastProgramId x
	name F
	programId E
	samplerLocations A
	samplerMap y
	samplerNames z
	uniformLocations C
	uniformMap D
	uniforms B
	vertexFormat M
	vertexProgram K
	apply ()V g
	attachToProgram ()V e
	clear ()V f
	getFragmentProgram ()Lcom/mojang/blaze3d/shaders/Program; d
	getId ()I a
	getName ()Ljava/lang/String; i
	getOrCreate (Lnet/minecraft/server/packs/resources/ResourceProvider;Lcom/mojang/blaze3d/shaders/Program$Type;Ljava/lang/String;)Lcom/mojang/blaze3d/shaders/Program; a
	getUniform (Ljava/lang/String;)Lcom/mojang/blaze3d/shaders/Uniform; a
	getVertexFormat ()Lcom/mojang/blaze3d/vertex/VertexFormat; h
	getVertexProgram ()Lcom/mojang/blaze3d/shaders/Program; c
	markDirty ()V b
	parseBlendNode (Lcom/google/gson/JsonObject;)Lcom/mojang/blaze3d/shaders/BlendMode; a
	parseSamplerNode (Lcom/google/gson/JsonElement;)V a
	parseUniformNode (Lcom/google/gson/JsonElement;)V b
	safeGetUniform (Ljava/lang/String;)Lcom/mojang/blaze3d/shaders/AbstractUniform; b
	setSampler (Ljava/lang/String;Ljava/lang/Object;)V a
	updateLocations ()V j
net/minecraft/client/renderer/Sheets fkj
	ARMOR_TRIMS_SHEET g
	ARMOR_TRIMS_SHEET_TYPE G
	BANNER_MATERIALS m
	BANNER_SHEET c
	BANNER_SHEET_TYPE C
	BED_SHEET b
	BED_SHEET_TYPE B
	BED_TEXTURES p
	CHEST_LOCATION w
	CHEST_LOCATION_LEFT x
	CHEST_LOCATION_RIGHT y
	CHEST_SHEET f
	CHEST_SHEET_TYPE F
	CHEST_TRAP_LOCATION q
	CHEST_TRAP_LOCATION_LEFT r
	CHEST_TRAP_LOCATION_RIGHT s
	CHEST_XMAS_LOCATION t
	CHEST_XMAS_LOCATION_LEFT u
	CHEST_XMAS_LOCATION_RIGHT v
	CUTOUT_BLOCK_SHEET I
	DECORATED_POT_MATERIALS o
	DECORATED_POT_SHEET h
	DEFAULT_SHULKER_TEXTURE_LOCATION i
	ENDER_CHEST_LOCATION z
	HANGING_SIGN_MATERIALS l
	SHIELD_MATERIALS n
	SHIELD_SHEET d
	SHIELD_SHEET_TYPE D
	SHULKER_BOX_SHEET_TYPE A
	SHULKER_SHEET a
	SHULKER_TEXTURE_LOCATION j
	SIGN_MATERIALS k
	SIGN_SHEET e
	SIGN_SHEET_TYPE E
	SOLID_BLOCK_SHEET H
	TRANSLUCENT_CULL_BLOCK_SHEET K
	TRANSLUCENT_ITEM_CULL_BLOCK_SHEET J
	armorTrimsSheet ()Lnet/minecraft/client/renderer/RenderType; h
	bannerSheet ()Lnet/minecraft/client/renderer/RenderType; a
	bedSheet ()Lnet/minecraft/client/renderer/RenderType; c
	chestMaterial (Ljava/lang/String;)Lnet/minecraft/client/resources/model/Material; a
	chestSheet ()Lnet/minecraft/client/renderer/RenderType; g
	chooseMaterial (Lnet/minecraft/world/level/block/entity/BlockEntity;Lnet/minecraft/world/level/block/state/properties/ChestType;Z)Lnet/minecraft/client/resources/model/Material; a
	chooseMaterial (Lnet/minecraft/world/level/block/state/properties/ChestType;Lnet/minecraft/client/resources/model/Material;Lnet/minecraft/client/resources/model/Material;Lnet/minecraft/client/resources/model/Material;)Lnet/minecraft/client/resources/model/Material; a
	createBannerMaterial (Lnet/minecraft/resources/ResourceKey;)Lnet/minecraft/client/resources/model/Material; d
	createDecoratedPotMaterial (Lnet/minecraft/resources/ResourceKey;)Lnet/minecraft/client/resources/model/Material; f
	createHangingSignMaterial (Lnet/minecraft/world/level/block/state/properties/WoodType;)Lnet/minecraft/client/resources/model/Material; d
	createShieldMaterial (Lnet/minecraft/resources/ResourceKey;)Lnet/minecraft/client/resources/model/Material; e
	createSignMaterial (Lnet/minecraft/world/level/block/state/properties/WoodType;)Lnet/minecraft/client/resources/model/Material; c
	cutoutBlockSheet ()Lnet/minecraft/client/renderer/RenderType; j
	getAllMaterials (Ljava/util/function/Consumer;)V a
	getBannerMaterial (Lnet/minecraft/resources/ResourceKey;)Lnet/minecraft/client/resources/model/Material; a
	getDecoratedPotMaterial (Lnet/minecraft/resources/ResourceKey;)Lnet/minecraft/client/resources/model/Material; c
	getHangingSignMaterial (Lnet/minecraft/world/level/block/state/properties/WoodType;)Lnet/minecraft/client/resources/model/Material; b
	getShieldMaterial (Lnet/minecraft/resources/ResourceKey;)Lnet/minecraft/client/resources/model/Material; b
	getSignMaterial (Lnet/minecraft/world/level/block/state/properties/WoodType;)Lnet/minecraft/client/resources/model/Material; a
	hangingSignSheet ()Lnet/minecraft/client/renderer/RenderType; f
	shieldSheet ()Lnet/minecraft/client/renderer/RenderType; b
	shulkerBoxSheet ()Lnet/minecraft/client/renderer/RenderType; d
	signSheet ()Lnet/minecraft/client/renderer/RenderType; e
	solidBlockSheet ()Lnet/minecraft/client/renderer/RenderType; i
	translucentCullBlockSheet ()Lnet/minecraft/client/renderer/RenderType; l
	translucentItemSheet ()Lnet/minecraft/client/renderer/RenderType; k
net/minecraft/client/renderer/SpriteCoordinateExpander fkk
	delegate a
	sprite b
	color (IIII)Lcom/mojang/blaze3d/vertex/VertexConsumer; a
	defaultColor (IIII)V b
	endVertex ()V e
	normal (FFF)Lcom/mojang/blaze3d/vertex/VertexConsumer; a
	overlayCoords (II)Lcom/mojang/blaze3d/vertex/VertexConsumer; a
	unsetDefaultColor ()V k
	uv (FF)Lcom/mojang/blaze3d/vertex/VertexConsumer; a
	uv2 (II)Lcom/mojang/blaze3d/vertex/VertexConsumer; b
	vertex (DDD)Lcom/mojang/blaze3d/vertex/VertexConsumer; a
	vertex (FFFFFFFFFIIFFF)V a
net/minecraft/client/renderer/ViewArea fkl
	chunkGridSizeX d
	chunkGridSizeY c
	chunkGridSizeZ e
	chunks f
	level b
	levelRenderer a
	createChunks (Lnet/minecraft/client/renderer/chunk/ChunkRenderDispatcher;)V a
	getChunkIndex (III)I a
	getRenderChunkAt (Lnet/minecraft/core/BlockPos;)Lnet/minecraft/client/renderer/chunk/ChunkRenderDispatcher$RenderChunk; a
	releaseAllBuffers ()V a
	repositionCamera (DD)V a
	setDirty (IIIZ)V a
	setViewDistance (I)V a
net/minecraft/client/renderer/VirtualScreen fkm
	minecraft a
	screenManager b
	newWindow (Lcom/mojang/blaze3d/platform/DisplayData;Ljava/lang/String;Ljava/lang/String;)Lcom/mojang/blaze3d/platform/Window; a
net/minecraft/client/renderer/block/BlockModelShaper fkn
	modelByStateCache a
	modelManager b
	getBlockModel (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/client/resources/model/BakedModel; b
	getModelManager ()Lnet/minecraft/client/resources/model/ModelManager; a
	getParticleIcon (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/client/renderer/texture/TextureAtlasSprite; a
	getValue (Lnet/minecraft/world/level/block/state/properties/Property;Ljava/lang/Comparable;)Ljava/lang/String; a
	replaceCache (Ljava/util/Map;)V a
	statePropertiesToString (Ljava/util/Map;)Ljava/lang/String; b
	stateToModelLocation (Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/client/resources/model/ModelResourceLocation; a
	stateToModelLocation (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/client/resources/model/ModelResourceLocation; c
net/minecraft/client/renderer/block/BlockRenderDispatcher fko
	blockColors f
	blockEntityRenderer c
	blockModelShaper a
	liquidBlockRenderer d
	modelRenderer b
	random e
	getBlockModel (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/client/resources/model/BakedModel; a
	getBlockModelShaper ()Lnet/minecraft/client/renderer/block/BlockModelShaper; a
	getModelRenderer ()Lnet/minecraft/client/renderer/block/ModelBlockRenderer; b
	onResourceManagerReload (Lnet/minecraft/server/packs/resources/ResourceManager;)V a
	renderBatched (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/BlockAndTintGetter;Lcom/mojang/blaze3d/vertex/PoseStack;Lcom/mojang/blaze3d/vertex/VertexConsumer;ZLnet/minecraft/util/RandomSource;)V a
	renderBreakingTexture (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/BlockAndTintGetter;Lcom/mojang/blaze3d/vertex/PoseStack;Lcom/mojang/blaze3d/vertex/VertexConsumer;)V a
	renderLiquid (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/BlockAndTintGetter;Lcom/mojang/blaze3d/vertex/VertexConsumer;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/material/FluidState;)V a
	renderSingleBlock (Lnet/minecraft/world/level/block/state/BlockState;Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;II)V a
net/minecraft/client/renderer/block/LiquidBlockRenderer fkp
	MAX_FLUID_HEIGHT a
	lavaIcons b
	waterIcons c
	waterOverlay d
	addWeightedHeight ([FF)V a
	calculateAverageHeight (Lnet/minecraft/world/level/BlockAndTintGetter;Lnet/minecraft/world/level/material/Fluid;FFFLnet/minecraft/core/BlockPos;)F a
	getHeight (Lnet/minecraft/world/level/BlockAndTintGetter;Lnet/minecraft/world/level/material/Fluid;Lnet/minecraft/core/BlockPos;)F a
	getHeight (Lnet/minecraft/world/level/BlockAndTintGetter;Lnet/minecraft/world/level/material/Fluid;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/material/FluidState;)F a
	getLightColor (Lnet/minecraft/world/level/BlockAndTintGetter;Lnet/minecraft/core/BlockPos;)I a
	isFaceOccludedByNeighbor (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;FLnet/minecraft/world/level/block/state/BlockState;)Z a
	isFaceOccludedBySelf (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;)Z a
	isFaceOccludedByState (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/Direction;FLnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Z a
	isNeighborSameFluid (Lnet/minecraft/world/level/material/FluidState;Lnet/minecraft/world/level/material/FluidState;)Z a
	setupSprites ()V a
	shouldRenderFace (Lnet/minecraft/world/level/BlockAndTintGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/material/FluidState;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/material/FluidState;)Z a
	tesselate (Lnet/minecraft/world/level/BlockAndTintGetter;Lnet/minecraft/core/BlockPos;Lcom/mojang/blaze3d/vertex/VertexConsumer;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/material/FluidState;)V a
	vertex (Lcom/mojang/blaze3d/vertex/VertexConsumer;DDDFFFFFI)V a
net/minecraft/client/renderer/block/ModelBlockRenderer fkq
	CACHE f
	CACHE_SIZE e
	DIRECTIONS c
	FACE_CUBIC a
	FACE_PARTIAL b
	blockColors d
	calculateShape (Lnet/minecraft/world/level/BlockAndTintGetter;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/BlockPos;[ILnet/minecraft/core/Direction;[FLjava/util/BitSet;)V a
	clearCache ()V b
	enableCaching ()V a
	putQuadData (Lnet/minecraft/world/level/BlockAndTintGetter;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/BlockPos;Lcom/mojang/blaze3d/vertex/VertexConsumer;Lcom/mojang/blaze3d/vertex/PoseStack$Pose;Lnet/minecraft/client/renderer/block/model/BakedQuad;FFFFIIIII)V a
	renderModel (Lcom/mojang/blaze3d/vertex/PoseStack$Pose;Lcom/mojang/blaze3d/vertex/VertexConsumer;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/client/resources/model/BakedModel;FFFII)V a
	renderModelFaceAO (Lnet/minecraft/world/level/BlockAndTintGetter;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/BlockPos;Lcom/mojang/blaze3d/vertex/PoseStack;Lcom/mojang/blaze3d/vertex/VertexConsumer;Ljava/util/List;[FLjava/util/BitSet;Lnet/minecraft/client/renderer/block/ModelBlockRenderer$AmbientOcclusionFace;I)V a
	renderModelFaceFlat (Lnet/minecraft/world/level/BlockAndTintGetter;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/BlockPos;IIZLcom/mojang/blaze3d/vertex/PoseStack;Lcom/mojang/blaze3d/vertex/VertexConsumer;Ljava/util/List;Ljava/util/BitSet;)V a
	renderQuadList (Lcom/mojang/blaze3d/vertex/PoseStack$Pose;Lcom/mojang/blaze3d/vertex/VertexConsumer;FFFLjava/util/List;II)V a
	tesselateBlock (Lnet/minecraft/world/level/BlockAndTintGetter;Lnet/minecraft/client/resources/model/BakedModel;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/BlockPos;Lcom/mojang/blaze3d/vertex/PoseStack;Lcom/mojang/blaze3d/vertex/VertexConsumer;ZLnet/minecraft/util/RandomSource;JI)V a
	tesselateWithAO (Lnet/minecraft/world/level/BlockAndTintGetter;Lnet/minecraft/client/resources/model/BakedModel;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/BlockPos;Lcom/mojang/blaze3d/vertex/PoseStack;Lcom/mojang/blaze3d/vertex/VertexConsumer;ZLnet/minecraft/util/RandomSource;JI)V b
	tesselateWithoutAO (Lnet/minecraft/world/level/BlockAndTintGetter;Lnet/minecraft/client/resources/model/BakedModel;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/BlockPos;Lcom/mojang/blaze3d/vertex/PoseStack;Lcom/mojang/blaze3d/vertex/VertexConsumer;ZLnet/minecraft/util/RandomSource;JI)V c
net/minecraft/client/renderer/block/ModelBlockRenderer$AdjacencyInfo fkq$a
	$VALUES n
	BY_FACING m
	DOWN a
	EAST f
	NORTH c
	SOUTH d
	UP b
	WEST e
	corners g
	doNonCubicWeight h
	vert0Weights i
	vert1Weights j
	vert2Weights k
	vert3Weights l
	$values ()[Lnet/minecraft/client/renderer/block/ModelBlockRenderer$AdjacencyInfo; a
	fromFacing (Lnet/minecraft/core/Direction;)Lnet/minecraft/client/renderer/block/ModelBlockRenderer$AdjacencyInfo; a
net/minecraft/client/renderer/block/ModelBlockRenderer$AmbientOcclusionFace fkq$b
	brightness a
	lightmap b
	blend (IIII)I a
	blend (IIIIFFFF)I a
	calculate (Lnet/minecraft/world/level/BlockAndTintGetter;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;[FLjava/util/BitSet;Z)V a
net/minecraft/client/renderer/block/ModelBlockRenderer$AmbientVertexRemap fkq$c
	$VALUES l
	BY_FACING k
	DOWN a
	EAST f
	NORTH c
	SOUTH d
	UP b
	WEST e
	vert0 g
	vert1 h
	vert2 i
	vert3 j
	$values ()[Lnet/minecraft/client/renderer/block/ModelBlockRenderer$AmbientVertexRemap; a
	fromFacing (Lnet/minecraft/core/Direction;)Lnet/minecraft/client/renderer/block/ModelBlockRenderer$AmbientVertexRemap; a
net/minecraft/client/renderer/block/ModelBlockRenderer$Cache fkq$d
	brightnessCache c
	colorCache b
	enabled a
	disable ()V b
	enable ()V a
	getLightColor (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockAndTintGetter;Lnet/minecraft/core/BlockPos;)I a
	getShadeBrightness (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockAndTintGetter;Lnet/minecraft/core/BlockPos;)F b
net/minecraft/client/renderer/block/ModelBlockRenderer$SizeInfo fkq$e
	$VALUES n
	DOWN a
	EAST f
	FLIP_DOWN g
	FLIP_EAST l
	FLIP_NORTH i
	FLIP_SOUTH j
	FLIP_UP h
	FLIP_WEST k
	NORTH c
	SOUTH d
	UP b
	WEST e
	shape m
	$values ()[Lnet/minecraft/client/renderer/block/ModelBlockRenderer$SizeInfo; a
net/minecraft/client/renderer/block/model/BakedQuad fkr
	direction c
	shade e
	sprite d
	tintIndex b
	vertices a
	getDirection ()Lnet/minecraft/core/Direction; e
	getSprite ()Lnet/minecraft/client/renderer/texture/TextureAtlasSprite; a
	getTintIndex ()I d
	getVertices ()[I b
	isShade ()Z f
	isTinted ()Z c
net/minecraft/client/renderer/block/model/BlockElement fks
	DEFAULT_RESCALE f
	MAX_EXTENT h
	MIN_EXTENT g
	faces c
	from a
	rotation d
	shade e
	to b
	fillUvs ()V a
	uvsByFace (Lnet/minecraft/core/Direction;)[F a
net/minecraft/client/renderer/block/model/BlockElement$Deserializer fks$a
	DEFAULT_SHADE a
	deserialize (Lcom/google/gson/JsonElement;Ljava/lang/reflect/Type;Lcom/google/gson/JsonDeserializationContext;)Lnet/minecraft/client/renderer/block/model/BlockElement; a
	filterNullFromFaces (Lcom/google/gson/JsonDeserializationContext;Lcom/google/gson/JsonObject;)Ljava/util/Map; b
	getAngle (Lcom/google/gson/JsonObject;)F b
	getAxis (Lcom/google/gson/JsonObject;)Lnet/minecraft/core/Direction$Axis; c
	getFaces (Lcom/google/gson/JsonDeserializationContext;Lcom/google/gson/JsonObject;)Ljava/util/Map; a
	getFacing (Ljava/lang/String;)Lnet/minecraft/core/Direction; a
	getFrom (Lcom/google/gson/JsonObject;)Lorg/joml/Vector3f; e
	getRotation (Lcom/google/gson/JsonObject;)Lnet/minecraft/client/renderer/block/model/BlockElementRotation; a
	getTo (Lcom/google/gson/JsonObject;)Lorg/joml/Vector3f; d
	getVector3f (Lcom/google/gson/JsonObject;Ljava/lang/String;)Lorg/joml/Vector3f; a
net/minecraft/client/renderer/block/model/BlockElementFace fkt
	NO_TINT a
	cullForDirection b
	texture d
	tintIndex c
	uv e
net/minecraft/client/renderer/block/model/BlockElementFace$Deserializer fkt$a
	DEFAULT_TINT_INDEX a
	deserialize (Lcom/google/gson/JsonElement;Ljava/lang/reflect/Type;Lcom/google/gson/JsonDeserializationContext;)Lnet/minecraft/client/renderer/block/model/BlockElementFace; a
	getCullFacing (Lcom/google/gson/JsonObject;)Lnet/minecraft/core/Direction; c
	getTexture (Lcom/google/gson/JsonObject;)Ljava/lang/String; b
	getTintIndex (Lcom/google/gson/JsonObject;)I a
net/minecraft/client/renderer/block/model/BlockElementRotation fku
	angle c
	axis b
	origin a
	rescale d
	angle ()F c
	axis ()Lnet/minecraft/core/Direction$Axis; b
	origin ()Lorg/joml/Vector3f; a
	rescale ()Z d
net/minecraft/client/renderer/block/model/BlockFaceUV fkv
	rotation b
	uvs a
	getReverseIndex (I)I c
	getShiftedIndex (I)I d
	getU (I)F a
	getV (I)F b
	setMissingUv ([F)V a
net/minecraft/client/renderer/block/model/BlockFaceUV$Deserializer fkv$a
	DEFAULT_ROTATION a
	deserialize (Lcom/google/gson/JsonElement;Ljava/lang/reflect/Type;Lcom/google/gson/JsonDeserializationContext;)Lnet/minecraft/client/renderer/block/model/BlockFaceUV; a
	getRotation (Lcom/google/gson/JsonObject;)I a
	getUVs (Lcom/google/gson/JsonObject;)[F b
net/minecraft/client/renderer/block/model/BlockModel fkw
	DEFAULT_AMBIENT_OCCLUSION j
	FACE_BAKERY h
	GSON a
	LOGGER g
	PARTICLE_TEXTURE_REFERENCE b
	REFERENCE_CHAR i
	elements k
	guiLight l
	hasAmbientOcclusion m
	name c
	overrides o
	parent e
	parentLocation f
	textureMap d
	transforms n
	bake (Lnet/minecraft/client/resources/model/ModelBaker;Ljava/util/function/Function;Lnet/minecraft/client/resources/model/ModelState;Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/client/resources/model/BakedModel; a
	bake (Lnet/minecraft/client/resources/model/ModelBaker;Lnet/minecraft/client/renderer/block/model/BlockModel;Ljava/util/function/Function;Lnet/minecraft/client/resources/model/ModelState;Lnet/minecraft/resources/ResourceLocation;Z)Lnet/minecraft/client/resources/model/BakedModel; a
	bakeFace (Lnet/minecraft/client/renderer/block/model/BlockElement;Lnet/minecraft/client/renderer/block/model/BlockElementFace;Lnet/minecraft/client/renderer/texture/TextureAtlasSprite;Lnet/minecraft/core/Direction;Lnet/minecraft/client/resources/model/ModelState;Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/client/renderer/block/model/BakedQuad; a
	findTextureEntry (Ljava/lang/String;)Lcom/mojang/datafixers/util/Either; d
	fromStream (Ljava/io/Reader;)Lnet/minecraft/client/renderer/block/model/BlockModel; a
	fromString (Ljava/lang/String;)Lnet/minecraft/client/renderer/block/model/BlockModel; a
	getDependencies ()Ljava/util/Collection; f
	getElements ()Ljava/util/List; a
	getGuiLight ()Lnet/minecraft/client/renderer/block/model/BlockModel$GuiLight; c
	getItemOverrides (Lnet/minecraft/client/resources/model/ModelBaker;Lnet/minecraft/client/renderer/block/model/BlockModel;)Lnet/minecraft/client/renderer/block/model/ItemOverrides; a
	getMaterial (Ljava/lang/String;)Lnet/minecraft/client/resources/model/Material; c
	getOverrides ()Ljava/util/List; e
	getRootModel ()Lnet/minecraft/client/renderer/block/model/BlockModel; g
	getTransform (Lnet/minecraft/world/item/ItemDisplayContext;)Lnet/minecraft/client/renderer/block/model/ItemTransform; a
	getTransforms ()Lnet/minecraft/client/renderer/block/model/ItemTransforms; h
	hasAmbientOcclusion ()Z b
	hasTexture (Ljava/lang/String;)Z b
	isResolved ()Z d
	isTextureReference (Ljava/lang/String;)Z e
	resolveParents (Ljava/util/function/Function;)V a
net/minecraft/client/renderer/block/model/BlockModel$Deserializer fkw$a
	deserialize (Lcom/google/gson/JsonElement;Ljava/lang/reflect/Type;Lcom/google/gson/JsonDeserializationContext;)Lnet/minecraft/client/renderer/block/model/BlockModel; a
	getAmbientOcclusion (Lcom/google/gson/JsonObject;)Ljava/lang/Boolean; a
	getElements (Lcom/google/gson/JsonDeserializationContext;Lcom/google/gson/JsonObject;)Ljava/util/List; b
	getOverrides (Lcom/google/gson/JsonDeserializationContext;Lcom/google/gson/JsonObject;)Ljava/util/List; a
	getParentName (Lcom/google/gson/JsonObject;)Ljava/lang/String; c
	getTextureMap (Lcom/google/gson/JsonObject;)Ljava/util/Map; b
	parseTextureLocationOrReference (Lnet/minecraft/resources/ResourceLocation;Ljava/lang/String;)Lcom/mojang/datafixers/util/Either; a
net/minecraft/client/renderer/block/model/BlockModel$GuiLight fkw$b
	$VALUES d
	FRONT a
	SIDE b
	name c
	$values ()[Lnet/minecraft/client/renderer/block/model/BlockModel$GuiLight; b
	getByName (Ljava/lang/String;)Lnet/minecraft/client/renderer/block/model/BlockModel$GuiLight; a
	lightLikeBlock ()Z a
net/minecraft/client/renderer/block/model/BlockModel$LoopException fkw$c
net/minecraft/client/renderer/block/model/BlockModelDefinition fkx
	multiPart b
	variants a
	fromJsonElement (Lnet/minecraft/client/renderer/block/model/BlockModelDefinition$Context;Lcom/google/gson/JsonElement;)Lnet/minecraft/client/renderer/block/model/BlockModelDefinition; a
	fromStream (Lnet/minecraft/client/renderer/block/model/BlockModelDefinition$Context;Ljava/io/Reader;)Lnet/minecraft/client/renderer/block/model/BlockModelDefinition; a
	getMultiPart ()Lnet/minecraft/client/renderer/block/model/multipart/MultiPart; d
	getMultiVariants ()Ljava/util/Set; b
	getVariant (Ljava/lang/String;)Lnet/minecraft/client/renderer/block/model/MultiVariant; b
	getVariants ()Ljava/util/Map; a
	hasVariant (Ljava/lang/String;)Z a
	isMultiPart ()Z c
net/minecraft/client/renderer/block/model/BlockModelDefinition$Context fkx$a
	definition b
	gson a
	getDefinition ()Lnet/minecraft/world/level/block/state/StateDefinition; a
	setDefinition (Lnet/minecraft/world/level/block/state/StateDefinition;)V a
net/minecraft/client/renderer/block/model/BlockModelDefinition$Deserializer fkx$b
	deserialize (Lcom/google/gson/JsonElement;Ljava/lang/reflect/Type;Lcom/google/gson/JsonDeserializationContext;)Lnet/minecraft/client/renderer/block/model/BlockModelDefinition; a
	getMultiPart (Lcom/google/gson/JsonDeserializationContext;Lcom/google/gson/JsonObject;)Lnet/minecraft/client/renderer/block/model/multipart/MultiPart; b
	getVariants (Lcom/google/gson/JsonDeserializationContext;Lcom/google/gson/JsonObject;)Ljava/util/Map; a
net/minecraft/client/renderer/block/model/BlockModelDefinition$MissingVariantException fkx$c
net/minecraft/client/renderer/block/model/FaceBakery fky
	COLOR_INDEX f
	RESCALE_22_5 d
	RESCALE_45 e
	UV_INDEX c
	VERTEX_COUNT b
	VERTEX_INT_SIZE a
	applyElementRotation (Lorg/joml/Vector3f;Lnet/minecraft/client/renderer/block/model/BlockElementRotation;)V a
	applyModelRotation (Lorg/joml/Vector3f;Lcom/mojang/math/Transformation;)V a
	bakeQuad (Lorg/joml/Vector3f;Lorg/joml/Vector3f;Lnet/minecraft/client/renderer/block/model/BlockElementFace;Lnet/minecraft/client/renderer/texture/TextureAtlasSprite;Lnet/minecraft/core/Direction;Lnet/minecraft/client/resources/model/ModelState;Lnet/minecraft/client/renderer/block/model/BlockElementRotation;ZLnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/client/renderer/block/model/BakedQuad; a
	bakeVertex ([IILnet/minecraft/core/Direction;Lnet/minecraft/client/renderer/block/model/BlockFaceUV;[FLnet/minecraft/client/renderer/texture/TextureAtlasSprite;Lcom/mojang/math/Transformation;Lnet/minecraft/client/renderer/block/model/BlockElementRotation;Z)V a
	calculateFacing ([I)Lnet/minecraft/core/Direction; a
	fillVertex ([IILorg/joml/Vector3f;Lnet/minecraft/client/renderer/texture/TextureAtlasSprite;Lnet/minecraft/client/renderer/block/model/BlockFaceUV;)V a
	makeVertices (Lnet/minecraft/client/renderer/block/model/BlockFaceUV;Lnet/minecraft/client/renderer/texture/TextureAtlasSprite;Lnet/minecraft/core/Direction;[FLcom/mojang/math/Transformation;Lnet/minecraft/client/renderer/block/model/BlockElementRotation;Z)[I a
	recalculateWinding ([ILnet/minecraft/core/Direction;)V a
	recomputeUVs (Lnet/minecraft/client/renderer/block/model/BlockFaceUV;Lnet/minecraft/core/Direction;Lcom/mojang/math/Transformation;Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/client/renderer/block/model/BlockFaceUV; a
	rotateVertexBy (Lorg/joml/Vector3f;Lorg/joml/Vector3f;Lorg/joml/Matrix4f;Lorg/joml/Vector3f;)V a
	setupShape (Lorg/joml/Vector3f;Lorg/joml/Vector3f;)[F a
net/minecraft/client/renderer/block/model/ItemModelGenerator fkz
	LAYERS a
	MAX_Z c
	MIN_Z b
	checkTransition (Lnet/minecraft/client/renderer/block/model/ItemModelGenerator$SpanFacing;Ljava/util/List;Lnet/minecraft/client/renderer/texture/SpriteContents;IIIIIZ)V a
	createOrExpandSpan (Ljava/util/List;Lnet/minecraft/client/renderer/block/model/ItemModelGenerator$SpanFacing;II)V a
	createSideElements (Lnet/minecraft/client/renderer/texture/SpriteContents;Ljava/lang/String;I)Ljava/util/List; a
	generateBlockModel (Ljava/util/function/Function;Lnet/minecraft/client/renderer/block/model/BlockModel;)Lnet/minecraft/client/renderer/block/model/BlockModel; a
	getSpans (Lnet/minecraft/client/renderer/texture/SpriteContents;)Ljava/util/List; a
	isTransparent (Lnet/minecraft/client/renderer/texture/SpriteContents;IIIII)Z a
	processFrames (ILjava/lang/String;Lnet/minecraft/client/renderer/texture/SpriteContents;)Ljava/util/List; a
net/minecraft/client/renderer/block/model/ItemModelGenerator$Span fkz$a
	anchor d
	facing a
	max c
	min b
	expand (I)V a
	getAnchor ()I d
	getFacing ()Lnet/minecraft/client/renderer/block/model/ItemModelGenerator$SpanFacing; a
	getMax ()I c
	getMin ()I b
net/minecraft/client/renderer/block/model/ItemModelGenerator$SpanFacing fkz$b
	$VALUES h
	DOWN b
	LEFT c
	RIGHT d
	UP a
	direction e
	xOffset f
	yOffset g
	$values ()[Lnet/minecraft/client/renderer/block/model/ItemModelGenerator$SpanFacing; e
	getDirection ()Lnet/minecraft/core/Direction; a
	getXOffset ()I b
	getYOffset ()I c
	isHorizontal ()Z d
net/minecraft/client/renderer/block/model/ItemOverride fla
	model a
	predicates b
	getModel ()Lnet/minecraft/resources/ResourceLocation; a
	getPredicates ()Ljava/util/stream/Stream; b
net/minecraft/client/renderer/block/model/ItemOverride$Deserializer fla$a
	deserialize (Lcom/google/gson/JsonElement;Ljava/lang/reflect/Type;Lcom/google/gson/JsonDeserializationContext;)Lnet/minecraft/client/renderer/block/model/ItemOverride; a
	getPredicates (Lcom/google/gson/JsonObject;)Ljava/util/List; a
net/minecraft/client/renderer/block/model/ItemOverride$Predicate fla$b
	property a
	value b
	getProperty ()Lnet/minecraft/resources/ResourceLocation; a
	getValue ()F b
net/minecraft/client/renderer/block/model/ItemOverrides flb
	EMPTY a
	NO_OVERRIDE b
	overrides c
	properties d
	bakeModel (Lnet/minecraft/client/resources/model/ModelBaker;Lnet/minecraft/client/renderer/block/model/BlockModel;Lnet/minecraft/client/renderer/block/model/ItemOverride;)Lnet/minecraft/client/resources/model/BakedModel; a
	resolve (Lnet/minecraft/client/resources/model/BakedModel;Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/client/multiplayer/ClientLevel;Lnet/minecraft/world/entity/LivingEntity;I)Lnet/minecraft/client/resources/model/BakedModel; a
net/minecraft/client/renderer/block/model/ItemOverrides$BakedOverride flb$a
	matchers a
	model b
	test ([F)Z a
net/minecraft/client/renderer/block/model/ItemOverrides$PropertyMatcher flb$b
	index a
	value b
net/minecraft/client/renderer/block/model/ItemTransform flc
	NO_TRANSFORM a
	rotation b
	scale d
	translation c
	apply (ZLcom/mojang/blaze3d/vertex/PoseStack;)V a
net/minecraft/client/renderer/block/model/ItemTransform$Deserializer flc$a
	DEFAULT_ROTATION c
	DEFAULT_SCALE e
	DEFAULT_TRANSLATION d
	MAX_SCALE b
	MAX_TRANSLATION a
	deserialize (Lcom/google/gson/JsonElement;Ljava/lang/reflect/Type;Lcom/google/gson/JsonDeserializationContext;)Lnet/minecraft/client/renderer/block/model/ItemTransform; a
	getVector3f (Lcom/google/gson/JsonObject;Ljava/lang/String;Lorg/joml/Vector3f;)Lorg/joml/Vector3f; a
net/minecraft/client/renderer/block/model/ItemTransforms fld
	NO_TRANSFORMS a
	firstPersonLeftHand d
	firstPersonRightHand e
	fixed i
	ground h
	gui g
	head f
	thirdPersonLeftHand b
	thirdPersonRightHand c
	getTransform (Lnet/minecraft/world/item/ItemDisplayContext;)Lnet/minecraft/client/renderer/block/model/ItemTransform; a
	hasTransform (Lnet/minecraft/world/item/ItemDisplayContext;)Z b
net/minecraft/client/renderer/block/model/ItemTransforms$Deserializer fld$a
	deserialize (Lcom/google/gson/JsonElement;Ljava/lang/reflect/Type;Lcom/google/gson/JsonDeserializationContext;)Lnet/minecraft/client/renderer/block/model/ItemTransforms; a
	getTransform (Lcom/google/gson/JsonDeserializationContext;Lcom/google/gson/JsonObject;Lnet/minecraft/world/item/ItemDisplayContext;)Lnet/minecraft/client/renderer/block/model/ItemTransform; a
net/minecraft/client/renderer/block/model/MultiVariant fle
	variants a
	bake (Lnet/minecraft/client/resources/model/ModelBaker;Ljava/util/function/Function;Lnet/minecraft/client/resources/model/ModelState;Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/client/resources/model/BakedModel; a
	getDependencies ()Ljava/util/Collection; f
	getVariants ()Ljava/util/List; a
	resolveParents (Ljava/util/function/Function;)V a
net/minecraft/client/renderer/block/model/MultiVariant$Deserializer fle$a
	deserialize (Lcom/google/gson/JsonElement;Ljava/lang/reflect/Type;Lcom/google/gson/JsonDeserializationContext;)Lnet/minecraft/client/renderer/block/model/MultiVariant; a
net/minecraft/client/renderer/block/model/Variant flf
	modelLocation a
	rotation b
	uvLock c
	weight d
	getModelLocation ()Lnet/minecraft/resources/ResourceLocation; a
	getRotation ()Lcom/mojang/math/Transformation; b
	getWeight ()I d
	isUvLocked ()Z c
net/minecraft/client/renderer/block/model/Variant$Deserializer flf$a
	DEFAULT_UVLOCK a
	DEFAULT_WEIGHT b
	DEFAULT_X_ROTATION c
	DEFAULT_Y_ROTATION d
	deserialize (Lcom/google/gson/JsonElement;Ljava/lang/reflect/Type;Lcom/google/gson/JsonDeserializationContext;)Lnet/minecraft/client/renderer/block/model/Variant; a
	getBlockRotation (Lcom/google/gson/JsonObject;)Lnet/minecraft/client/resources/model/BlockModelRotation; a
	getModel (Lcom/google/gson/JsonObject;)Lnet/minecraft/resources/ResourceLocation; b
	getUvLock (Lcom/google/gson/JsonObject;)Z d
	getWeight (Lcom/google/gson/JsonObject;)I c
net/minecraft/client/renderer/block/model/multipart/AndCondition flg
	TOKEN a
	conditions d
net/minecraft/client/renderer/block/model/multipart/Condition flh
	FALSE c
	TRUE b
net/minecraft/client/renderer/block/model/multipart/KeyValueCondition fli
	PIPE_SPLITTER a
	key d
	value e
	getBlockStatePredicate (Lnet/minecraft/world/level/block/state/StateDefinition;Lnet/minecraft/world/level/block/state/properties/Property;Ljava/lang/String;)Ljava/util/function/Predicate; a
net/minecraft/client/renderer/block/model/multipart/MultiPart flj
	definition a
	selectors b
	bake (Lnet/minecraft/client/resources/model/ModelBaker;Ljava/util/function/Function;Lnet/minecraft/client/resources/model/ModelState;Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/client/resources/model/BakedModel; a
	getDependencies ()Ljava/util/Collection; f
	getMultiVariants ()Ljava/util/Set; b
	getSelectors ()Ljava/util/List; a
	resolveParents (Ljava/util/function/Function;)V a
net/minecraft/client/renderer/block/model/multipart/MultiPart$Deserializer flj$a
	context a
	deserialize (Lcom/google/gson/JsonElement;Ljava/lang/reflect/Type;Lcom/google/gson/JsonDeserializationContext;)Lnet/minecraft/client/renderer/block/model/multipart/MultiPart; a
	getSelectors (Lcom/google/gson/JsonDeserializationContext;Lcom/google/gson/JsonArray;)Ljava/util/List; a
net/minecraft/client/renderer/block/model/multipart/OrCondition flk
	TOKEN a
	conditions d
net/minecraft/client/renderer/block/model/multipart/Selector fll
	condition a
	variant b
	getPredicate (Lnet/minecraft/world/level/block/state/StateDefinition;)Ljava/util/function/Predicate; a
	getVariant ()Lnet/minecraft/client/renderer/block/model/MultiVariant; a
net/minecraft/client/renderer/block/model/multipart/Selector$Deserializer fll$a
	deserialize (Lcom/google/gson/JsonElement;Ljava/lang/reflect/Type;Lcom/google/gson/JsonDeserializationContext;)Lnet/minecraft/client/renderer/block/model/multipart/Selector; a
	getCondition (Lcom/google/gson/JsonObject;)Lnet/minecraft/client/renderer/block/model/multipart/Condition; a
	getKeyValueCondition (Ljava/util/Map$Entry;)Lnet/minecraft/client/renderer/block/model/multipart/Condition; a
	getSelector (Lcom/google/gson/JsonObject;)Lnet/minecraft/client/renderer/block/model/multipart/Condition; b
net/minecraft/client/renderer/blockentity/BannerRenderer flp
	BANNER_HEIGHT c
	BANNER_WIDTH b
	BAR f
	FLAG a
	MAX_PATTERNS d
	POLE e
	bar i
	flag g
	pole h
	createBodyLayer ()Lnet/minecraft/client/model/geom/builders/LayerDefinition; a
	render (Lnet/minecraft/world/level/block/entity/BannerBlockEntity;FLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;II)V a
	render (Lnet/minecraft/world/level/block/entity/BlockEntity;FLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;II)V a
	renderPatterns (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;IILnet/minecraft/client/model/geom/ModelPart;Lnet/minecraft/client/resources/model/Material;ZLjava/util/List;)V a
	renderPatterns (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;IILnet/minecraft/client/model/geom/ModelPart;Lnet/minecraft/client/resources/model/Material;ZLjava/util/List;Z)V a
net/minecraft/client/renderer/blockentity/BeaconRenderer flq
	BEAM_LOCATION a
	MAX_RENDER_Y b
	addVertex (Lorg/joml/Matrix4f;Lorg/joml/Matrix3f;Lcom/mojang/blaze3d/vertex/VertexConsumer;FFFFIFFFF)V a
	getViewDistance ()I aK_
	render (Lnet/minecraft/world/level/block/entity/BeaconBlockEntity;FLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;II)V a
	render (Lnet/minecraft/world/level/block/entity/BlockEntity;FLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;II)V a
	renderBeaconBeam (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;FJII[F)V a
	renderBeaconBeam (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;Lnet/minecraft/resources/ResourceLocation;FFJII[FFF)V a
	renderPart (Lcom/mojang/blaze3d/vertex/PoseStack;Lcom/mojang/blaze3d/vertex/VertexConsumer;FFFFIIFFFFFFFFFFFF)V a
	renderQuad (Lorg/joml/Matrix4f;Lorg/joml/Matrix3f;Lcom/mojang/blaze3d/vertex/VertexConsumer;FFFFIIFFFFFFFF)V a
	shouldRender (Lnet/minecraft/world/level/block/entity/BeaconBlockEntity;Lnet/minecraft/world/phys/Vec3;)Z a
	shouldRender (Lnet/minecraft/world/level/block/entity/BlockEntity;Lnet/minecraft/world/phys/Vec3;)Z a
	shouldRenderOffScreen (Lnet/minecraft/world/level/block/entity/BeaconBlockEntity;)Z a
	shouldRenderOffScreen (Lnet/minecraft/world/level/block/entity/BlockEntity;)Z a
net/minecraft/client/renderer/blockentity/BedRenderer flr
	footRoot b
	headRoot a
	createFootLayer ()Lnet/minecraft/client/model/geom/builders/LayerDefinition; c
	createHeadLayer ()Lnet/minecraft/client/model/geom/builders/LayerDefinition; b
	render (Lnet/minecraft/world/level/block/entity/BedBlockEntity;FLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;II)V a
	render (Lnet/minecraft/world/level/block/entity/BlockEntity;FLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;II)V a
	renderPiece (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;Lnet/minecraft/client/model/geom/ModelPart;Lnet/minecraft/core/Direction;Lnet/minecraft/client/resources/model/Material;IIZ)V a
net/minecraft/client/renderer/blockentity/BellRenderer fls
	BELL_BODY b
	BELL_RESOURCE_LOCATION a
	bellBody c
	createBodyLayer ()Lnet/minecraft/client/model/geom/builders/LayerDefinition; b
	render (Lnet/minecraft/world/level/block/entity/BellBlockEntity;FLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;II)V a
	render (Lnet/minecraft/world/level/block/entity/BlockEntity;FLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;II)V a
net/minecraft/client/renderer/blockentity/BlockEntityRenderDispatcher flt
	blockRenderDispatcher g
	camera b
	cameraHitResult c
	entityModelSet f
	entityRenderer i
	font e
	itemRenderer h
	level a
	renderers d
	getRenderer (Lnet/minecraft/world/level/block/entity/BlockEntity;)Lnet/minecraft/client/renderer/blockentity/BlockEntityRenderer; a
	onResourceManagerReload (Lnet/minecraft/server/packs/resources/ResourceManager;)V a
	prepare (Lnet/minecraft/world/level/Level;Lnet/minecraft/client/Camera;Lnet/minecraft/world/phys/HitResult;)V a
	render (Lnet/minecraft/world/level/block/entity/BlockEntity;FLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;)V a
	renderItem (Lnet/minecraft/world/level/block/entity/BlockEntity;Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;II)Z a
	setLevel (Lnet/minecraft/world/level/Level;)V a
	setupAndRender (Lnet/minecraft/client/renderer/blockentity/BlockEntityRenderer;Lnet/minecraft/world/level/block/entity/BlockEntity;FLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;)V a
	tryRender (Lnet/minecraft/world/level/block/entity/BlockEntity;Ljava/lang/Runnable;)V a
net/minecraft/client/renderer/blockentity/BlockEntityRenderer flu
	getViewDistance ()I aK_
	render (Lnet/minecraft/world/level/block/entity/BlockEntity;FLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;II)V a
	shouldRender (Lnet/minecraft/world/level/block/entity/BlockEntity;Lnet/minecraft/world/phys/Vec3;)Z a
	shouldRenderOffScreen (Lnet/minecraft/world/level/block/entity/BlockEntity;)Z a
net/minecraft/client/renderer/blockentity/BlockEntityRendererProvider flv
net/minecraft/client/renderer/blockentity/BlockEntityRendererProvider$Context flv$a
	blockEntityRenderDispatcher a
	blockRenderDispatcher b
	entityRenderer d
	font f
	itemRenderer c
	modelSet e
	bakeLayer (Lnet/minecraft/client/model/geom/ModelLayerLocation;)Lnet/minecraft/client/model/geom/ModelPart; a
	getBlockEntityRenderDispatcher ()Lnet/minecraft/client/renderer/blockentity/BlockEntityRenderDispatcher; a
	getBlockRenderDispatcher ()Lnet/minecraft/client/renderer/block/BlockRenderDispatcher; b
	getEntityRenderer ()Lnet/minecraft/client/renderer/entity/EntityRenderDispatcher; c
	getFont ()Lnet/minecraft/client/gui/Font; f
	getItemRenderer ()Lnet/minecraft/client/renderer/entity/ItemRenderer; d
	getModelSet ()Lnet/minecraft/client/model/geom/EntityModelSet; e
net/minecraft/client/renderer/blockentity/BlockEntityRenderers flw
	PROVIDERS a
	createEntityRenderers (Lnet/minecraft/client/renderer/blockentity/BlockEntityRendererProvider$Context;)Ljava/util/Map; a
	register (Lnet/minecraft/world/level/block/entity/BlockEntityType;Lnet/minecraft/client/renderer/blockentity/BlockEntityRendererProvider;)V a
net/minecraft/client/renderer/blockentity/BrightnessCombiner flx
	acceptDouble (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object; a
	acceptDouble (Lnet/minecraft/world/level/block/entity/BlockEntity;Lnet/minecraft/world/level/block/entity/BlockEntity;)Lit/unimi/dsi/fastutil/ints/Int2IntFunction; a
	acceptNone ()Lit/unimi/dsi/fastutil/ints/Int2IntFunction; a
	acceptNone ()Ljava/lang/Object; b
	acceptSingle (Ljava/lang/Object;)Ljava/lang/Object; a
	acceptSingle (Lnet/minecraft/world/level/block/entity/BlockEntity;)Lit/unimi/dsi/fastutil/ints/Int2IntFunction; a
net/minecraft/client/renderer/blockentity/BrushableBlockRenderer fly
	itemRenderer a
	render (Lnet/minecraft/world/level/block/entity/BlockEntity;FLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;II)V a
	render (Lnet/minecraft/world/level/block/entity/BrushableBlockEntity;FLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;II)V a
	translations (Lnet/minecraft/core/Direction;I)[F a
net/minecraft/client/renderer/blockentity/CampfireRenderer flz
	SIZE a
	itemRenderer b
	render (Lnet/minecraft/world/level/block/entity/BlockEntity;FLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;II)V a
	render (Lnet/minecraft/world/level/block/entity/CampfireBlockEntity;FLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;II)V a
net/minecraft/client/renderer/blockentity/ChestRenderer fma
	BOTTOM a
	LID b
	LOCK c
	bottom e
	doubleLeftBottom h
	doubleLeftLid g
	doubleLeftLock i
	doubleRightBottom k
	doubleRightLid j
	doubleRightLock l
	lid d
	lock f
	xmasTextures m
	createDoubleBodyLeftLayer ()Lnet/minecraft/client/model/geom/builders/LayerDefinition; d
	createDoubleBodyRightLayer ()Lnet/minecraft/client/model/geom/builders/LayerDefinition; c
	createSingleBodyLayer ()Lnet/minecraft/client/model/geom/builders/LayerDefinition; b
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lcom/mojang/blaze3d/vertex/VertexConsumer;Lnet/minecraft/client/model/geom/ModelPart;Lnet/minecraft/client/model/geom/ModelPart;Lnet/minecraft/client/model/geom/ModelPart;FII)V a
	render (Lnet/minecraft/world/level/block/entity/BlockEntity;FLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;II)V a
net/minecraft/client/renderer/blockentity/ConduitRenderer fmb
	ACTIVE_SHELL_TEXTURE b
	CLOSED_EYE_TEXTURE f
	OPEN_EYE_TEXTURE e
	SHELL_TEXTURE a
	VERTICAL_WIND_TEXTURE d
	WIND_TEXTURE c
	cage j
	eye g
	renderer k
	shell i
	wind h
	createCageLayer ()Lnet/minecraft/client/model/geom/builders/LayerDefinition; e
	createEyeLayer ()Lnet/minecraft/client/model/geom/builders/LayerDefinition; b
	createShellLayer ()Lnet/minecraft/client/model/geom/builders/LayerDefinition; d
	createWindLayer ()Lnet/minecraft/client/model/geom/builders/LayerDefinition; c
	render (Lnet/minecraft/world/level/block/entity/BlockEntity;FLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;II)V a
	render (Lnet/minecraft/world/level/block/entity/ConduitBlockEntity;FLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;II)V a
net/minecraft/client/renderer/blockentity/DecoratedPotRenderer fmc
	BACK c
	BOTTOM g
	FRONT b
	LEFT d
	NECK a
	RIGHT e
	TOP f
	backSide j
	baseMaterial o
	bottom n
	frontSide i
	leftSide k
	neck h
	rightSide l
	top m
	createBaseLayer ()Lnet/minecraft/client/model/geom/builders/LayerDefinition; b
	createSidesLayer ()Lnet/minecraft/client/model/geom/builders/LayerDefinition; c
	getMaterial (Lnet/minecraft/world/item/Item;)Lnet/minecraft/client/resources/model/Material; a
	render (Lnet/minecraft/world/level/block/entity/BlockEntity;FLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;II)V a
	render (Lnet/minecraft/world/level/block/entity/DecoratedPotBlockEntity;FLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;II)V a
	renderSide (Lnet/minecraft/client/model/geom/ModelPart;Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;IILnet/minecraft/client/resources/model/Material;)V a
net/minecraft/client/renderer/blockentity/EnchantTableRenderer fmd
	BOOK_LOCATION a
	bookModel b
	render (Lnet/minecraft/world/level/block/entity/BlockEntity;FLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;II)V a
	render (Lnet/minecraft/world/level/block/entity/EnchantmentTableBlockEntity;FLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;II)V a
net/minecraft/client/renderer/blockentity/HangingSignRenderer fme
	BOARD h
	CHAIN_L_1 d
	CHAIN_L_2 e
	CHAIN_R_1 f
	CHAIN_R_2 g
	MODEL_RENDER_SCALE i
	NORMAL_CHAINS c
	PLANK a
	TEXT_OFFSET k
	TEXT_RENDER_SCALE j
	V_CHAINS b
	hangingSignModels l
	createHangingSignLayer ()Lnet/minecraft/client/model/geom/builders/LayerDefinition; e
	getSignMaterial (Lnet/minecraft/world/level/block/state/properties/WoodType;)Lnet/minecraft/client/resources/model/Material; a
	getSignModelRenderScale ()F b
	getSignTextRenderScale ()F c
	getTextOffset ()Lnet/minecraft/world/phys/Vec3; d
	render (Lnet/minecraft/world/level/block/entity/BlockEntity;FLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;II)V a
	render (Lnet/minecraft/world/level/block/entity/SignBlockEntity;FLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;II)V a
	renderSignModel (Lcom/mojang/blaze3d/vertex/PoseStack;IILnet/minecraft/client/model/Model;Lcom/mojang/blaze3d/vertex/VertexConsumer;)V a
	translateSign (Lcom/mojang/blaze3d/vertex/PoseStack;FLnet/minecraft/world/level/block/state/BlockState;)V a
net/minecraft/client/renderer/blockentity/HangingSignRenderer$HangingSignModel fme$a
	normalChains d
	plank b
	root a
	vChains c
	evaluateVisibleParts (Lnet/minecraft/world/level/block/state/BlockState;)V a
	renderToBuffer (Lcom/mojang/blaze3d/vertex/PoseStack;Lcom/mojang/blaze3d/vertex/VertexConsumer;IIFFFF)V a
net/minecraft/client/renderer/blockentity/LecternRenderer fmf
	bookModel a
	render (Lnet/minecraft/world/level/block/entity/BlockEntity;FLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;II)V a
	render (Lnet/minecraft/world/level/block/entity/LecternBlockEntity;FLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;II)V a
net/minecraft/client/renderer/blockentity/PistonHeadRenderer fmg
	blockRenderer a
	getViewDistance ()I aK_
	render (Lnet/minecraft/world/level/block/entity/BlockEntity;FLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;II)V a
	render (Lnet/minecraft/world/level/block/piston/PistonMovingBlockEntity;FLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;II)V a
	renderBlock (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;Lnet/minecraft/world/level/Level;ZI)V a
net/minecraft/client/renderer/blockentity/ShulkerBoxRenderer fmh
	model a
	render (Lnet/minecraft/world/level/block/entity/BlockEntity;FLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;II)V a
	render (Lnet/minecraft/world/level/block/entity/ShulkerBoxBlockEntity;FLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;II)V a
net/minecraft/client/renderer/blockentity/SignRenderer fmi
	BLACK_TEXT_OUTLINE_COLOR b
	OUTLINE_RENDER_DISTANCE c
	RENDER_SCALE d
	STICK a
	TEXT_OFFSET e
	font g
	signModels f
	createSignLayer ()Lnet/minecraft/client/model/geom/builders/LayerDefinition; f
	createSignModel (Lnet/minecraft/client/model/geom/EntityModelSet;Lnet/minecraft/world/level/block/state/properties/WoodType;)Lnet/minecraft/client/renderer/blockentity/SignRenderer$SignModel; a
	getDarkColor (Lnet/minecraft/world/level/block/entity/SignText;)I a
	getSignMaterial (Lnet/minecraft/world/level/block/state/properties/WoodType;)Lnet/minecraft/client/resources/model/Material; a
	getSignModelRenderScale ()F b
	getSignTextRenderScale ()F c
	getTextOffset ()Lnet/minecraft/world/phys/Vec3; d
	isOutlineVisible (Lnet/minecraft/core/BlockPos;I)Z a
	render (Lnet/minecraft/world/level/block/entity/BlockEntity;FLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;II)V a
	render (Lnet/minecraft/world/level/block/entity/SignBlockEntity;FLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;II)V a
	renderSign (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;IILnet/minecraft/world/level/block/state/properties/WoodType;Lnet/minecraft/client/model/Model;)V a
	renderSignModel (Lcom/mojang/blaze3d/vertex/PoseStack;IILnet/minecraft/client/model/Model;Lcom/mojang/blaze3d/vertex/VertexConsumer;)V a
	renderSignText (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/entity/SignText;Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;IIIZ)V a
	renderSignWithText (Lnet/minecraft/world/level/block/entity/SignBlockEntity;Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;IILnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/SignBlock;Lnet/minecraft/world/level/block/state/properties/WoodType;Lnet/minecraft/client/model/Model;)V a
	translateSign (Lcom/mojang/blaze3d/vertex/PoseStack;FLnet/minecraft/world/level/block/state/BlockState;)V a
	translateSignText (Lcom/mojang/blaze3d/vertex/PoseStack;ZLnet/minecraft/world/phys/Vec3;)V a
net/minecraft/client/renderer/blockentity/SignRenderer$SignModel fmi$a
	root a
	stick b
	renderToBuffer (Lcom/mojang/blaze3d/vertex/PoseStack;Lcom/mojang/blaze3d/vertex/VertexConsumer;IIFFFF)V a
net/minecraft/client/renderer/blockentity/SkullBlockRenderer fmj
	SKIN_BY_TYPE b
	modelByType a
	createSkullRenderers (Lnet/minecraft/client/model/geom/EntityModelSet;)Ljava/util/Map; a
	getRenderType (Lnet/minecraft/world/level/block/SkullBlock$Type;Lcom/mojang/authlib/GameProfile;)Lnet/minecraft/client/renderer/RenderType; a
	render (Lnet/minecraft/world/level/block/entity/BlockEntity;FLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;II)V a
	render (Lnet/minecraft/world/level/block/entity/SkullBlockEntity;FLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;II)V a
	renderSkull (Lnet/minecraft/core/Direction;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;ILnet/minecraft/client/model/SkullModelBase;Lnet/minecraft/client/renderer/RenderType;)V a
net/minecraft/client/renderer/blockentity/SpawnerRenderer fmk
	entityRenderer a
	render (Lnet/minecraft/world/level/block/entity/BlockEntity;FLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;II)V a
	render (Lnet/minecraft/world/level/block/entity/SpawnerBlockEntity;FLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;II)V a
net/minecraft/client/renderer/blockentity/StructureBlockRenderer fml
	getViewDistance ()I aK_
	render (Lnet/minecraft/world/level/block/entity/BlockEntity;FLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;II)V a
	render (Lnet/minecraft/world/level/block/entity/StructureBlockEntity;FLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;II)V a
	renderInvisibleBlocks (Lnet/minecraft/world/level/block/entity/StructureBlockEntity;Lcom/mojang/blaze3d/vertex/VertexConsumer;Lnet/minecraft/core/BlockPos;Lcom/mojang/blaze3d/vertex/PoseStack;)V a
	shouldRenderOffScreen (Lnet/minecraft/world/level/block/entity/BlockEntity;)Z a
	shouldRenderOffScreen (Lnet/minecraft/world/level/block/entity/StructureBlockEntity;)Z a
net/minecraft/client/renderer/blockentity/TheEndGatewayRenderer fmm
	BEAM_LOCATION c
	getOffsetDown ()F c
	getOffsetUp ()F b
	getViewDistance ()I aK_
	render (Lnet/minecraft/world/level/block/entity/BlockEntity;FLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;II)V a
	render (Lnet/minecraft/world/level/block/entity/TheEndGatewayBlockEntity;FLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;II)V a
	render (Lnet/minecraft/world/level/block/entity/TheEndPortalBlockEntity;FLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;II)V a
	renderType ()Lnet/minecraft/client/renderer/RenderType; d
net/minecraft/client/renderer/blockentity/TheEndPortalRenderer fmn
	END_PORTAL_LOCATION b
	END_SKY_LOCATION a
	getOffsetDown ()F c
	getOffsetUp ()F b
	render (Lnet/minecraft/world/level/block/entity/BlockEntity;FLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;II)V a
	render (Lnet/minecraft/world/level/block/entity/TheEndPortalBlockEntity;FLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;II)V a
	renderCube (Lnet/minecraft/world/level/block/entity/TheEndPortalBlockEntity;Lorg/joml/Matrix4f;Lcom/mojang/blaze3d/vertex/VertexConsumer;)V a
	renderFace (Lnet/minecraft/world/level/block/entity/TheEndPortalBlockEntity;Lorg/joml/Matrix4f;Lcom/mojang/blaze3d/vertex/VertexConsumer;FFFFFFFFLnet/minecraft/core/Direction;)V a
	renderType ()Lnet/minecraft/client/renderer/RenderType; d
net/minecraft/client/renderer/chunk/ChunkRenderDispatcher fmp
	LOGGER a
	MAX_HIGH_PRIORITY_QUOTA d
	MAX_WORKERS_32_BIT b
	VERTEX_FORMAT c
	camera q
	executor n
	fixedBuffers l
	freeBufferCount k
	freeBuffers h
	highPriorityQuota g
	level o
	mailbox m
	renderer p
	toBatchCount j
	toBatchHighPriority e
	toBatchLowPriority f
	toUpload i
	blockUntilClear ()V g
	clearBatchQueue ()V l
	dispose ()V i
	getCameraPosition ()Lnet/minecraft/world/phys/Vec3; e
	getFreeBufferCount ()I d
	getStats ()Ljava/lang/String; a
	getToBatchCount ()I b
	getToUpload ()I c
	isQueueEmpty ()Z h
	pollTask ()Lnet/minecraft/client/renderer/chunk/ChunkRenderDispatcher$RenderChunk$ChunkCompileTask; k
	rebuildChunkSync (Lnet/minecraft/client/renderer/chunk/ChunkRenderDispatcher$RenderChunk;Lnet/minecraft/client/renderer/chunk/RenderRegionCache;)V a
	runTask ()V j
	schedule (Lnet/minecraft/client/renderer/chunk/ChunkRenderDispatcher$RenderChunk$ChunkCompileTask;)V a
	setCamera (Lnet/minecraft/world/phys/Vec3;)V a
	setLevel (Lnet/minecraft/client/multiplayer/ClientLevel;)V a
	uploadAllPendingUploads ()V f
	uploadChunkLayer (Lcom/mojang/blaze3d/vertex/BufferBuilder$RenderedBuffer;Lcom/mojang/blaze3d/vertex/VertexBuffer;)Ljava/util/concurrent/CompletableFuture; a
net/minecraft/client/renderer/chunk/ChunkRenderDispatcher$ChunkTaskResult fmp$a
	$VALUES c
	CANCELLED b
	SUCCESSFUL a
	$values ()[Lnet/minecraft/client/renderer/chunk/ChunkRenderDispatcher$ChunkTaskResult; a
net/minecraft/client/renderer/chunk/ChunkRenderDispatcher$CompiledChunk fmp$b
	UNCOMPILED a
	hasBlocks b
	renderableBlockEntities c
	transparencyState e
	visibilitySet d
	facesCanSeeEachother (Lnet/minecraft/core/Direction;Lnet/minecraft/core/Direction;)Z a
	getRenderableBlockEntities ()Ljava/util/List; b
	hasNoRenderableLayers ()Z a
	isEmpty (Lnet/minecraft/client/renderer/RenderType;)Z a
net/minecraft/client/renderer/chunk/ChunkRenderDispatcher$RenderChunk fmp$c
	SIZE a
	bb j
	buffers i
	compiled c
	dirty k
	globalBlockEntities h
	index b
	initialCompilationCancelCount e
	lastRebuildTask f
	lastResortTransparencyTask g
	origin l
	playerChanged n
	relativeOrigins m
	beginLayer (Lcom/mojang/blaze3d/vertex/BufferBuilder;)V a
	cancelTasks ()Z j
	compileSync (Lnet/minecraft/client/renderer/chunk/RenderRegionCache;)V b
	createCompileTask (Lnet/minecraft/client/renderer/chunk/RenderRegionCache;)Lnet/minecraft/client/renderer/chunk/ChunkRenderDispatcher$RenderChunk$ChunkCompileTask; a
	doesChunkExistAt (Lnet/minecraft/core/BlockPos;)Z a
	getBoundingBox ()Lnet/minecraft/world/phys/AABB; b
	getBuffer (Lnet/minecraft/client/renderer/RenderType;)Lcom/mojang/blaze3d/vertex/VertexBuffer; a
	getCompiledChunk ()Lnet/minecraft/client/renderer/chunk/ChunkRenderDispatcher$CompiledChunk; d
	getDistToPlayerSqr ()D c
	getOrigin ()Lnet/minecraft/core/BlockPos; f
	getRelativeOrigin (Lnet/minecraft/core/Direction;)Lnet/minecraft/core/BlockPos; a
	hasAllNeighbors ()Z a
	isDirty ()Z h
	isDirtyFromPlayer ()Z i
	rebuildChunkAsync (Lnet/minecraft/client/renderer/chunk/ChunkRenderDispatcher;Lnet/minecraft/client/renderer/chunk/RenderRegionCache;)V a
	releaseBuffers ()V e
	reset ()V k
	resortTransparency (Lnet/minecraft/client/renderer/RenderType;Lnet/minecraft/client/renderer/chunk/ChunkRenderDispatcher;)Z a
	setDirty (Z)V a
	setNotDirty ()V g
	setOrigin (III)V a
	updateGlobalBlockEntities (Ljava/util/Collection;)V a
net/minecraft/client/renderer/chunk/ChunkRenderDispatcher$RenderChunk$ChunkCompileTask fmp$c$a
	distAtCreation a
	isCancelled b
	isHighPriority c
	cancel ()V a
	compareTo (Lnet/minecraft/client/renderer/chunk/ChunkRenderDispatcher$RenderChunk$ChunkCompileTask;)I a
	doTask (Lnet/minecraft/client/renderer/ChunkBufferBuilderPack;)Ljava/util/concurrent/CompletableFuture; a
	name ()Ljava/lang/String; b
net/minecraft/client/renderer/chunk/ChunkRenderDispatcher$RenderChunk$RebuildTask fmp$c$b
	region e
	cancel ()V a
	compile (FFFLnet/minecraft/client/renderer/ChunkBufferBuilderPack;)Lnet/minecraft/client/renderer/chunk/ChunkRenderDispatcher$RenderChunk$RebuildTask$CompileResults; a
	doTask (Lnet/minecraft/client/renderer/ChunkBufferBuilderPack;)Ljava/util/concurrent/CompletableFuture; a
	handleBlockEntity (Lnet/minecraft/client/renderer/chunk/ChunkRenderDispatcher$RenderChunk$RebuildTask$CompileResults;Lnet/minecraft/world/level/block/entity/BlockEntity;)V a
	name ()Ljava/lang/String; b
net/minecraft/client/renderer/chunk/ChunkRenderDispatcher$RenderChunk$RebuildTask$CompileResults fmp$c$b$a
	blockEntities b
	globalBlockEntities a
	renderedLayers c
	transparencyState e
	visibilitySet d
net/minecraft/client/renderer/chunk/ChunkRenderDispatcher$RenderChunk$ResortTransparencyTask fmp$c$c
	compiledChunk f
	cancel ()V a
	doTask (Lnet/minecraft/client/renderer/ChunkBufferBuilderPack;)Ljava/util/concurrent/CompletableFuture; a
	name ()Ljava/lang/String; b
net/minecraft/client/renderer/chunk/RenderChunk fmq
	blockEntities a
	debug c
	sections b
	wrapped d
	getBlockEntity (Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/entity/BlockEntity; a
	getBlockState (Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; b
net/minecraft/client/renderer/chunk/RenderChunkRegion fmr
	centerX c
	centerZ d
	chunks a
	level b
	getBlockEntity (Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/entity/BlockEntity; c_
	getBlockState (Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a_
	getBlockTint (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/ColorResolver;)I a
	getFluidState (Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/material/FluidState; b_
	getHeight ()I D_
	getLightEngine ()Lnet/minecraft/world/level/lighting/LevelLightEngine; s_
	getMinBuildHeight ()I C_
	getShade (Lnet/minecraft/core/Direction;Z)F a
net/minecraft/client/renderer/chunk/RenderRegionCache fms
	chunkInfoCache a
	createRegion (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;I)Lnet/minecraft/client/renderer/chunk/RenderChunkRegion; a
	isAllEmpty (Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;II[[Lnet/minecraft/client/renderer/chunk/RenderRegionCache$ChunkInfo;)Z a
net/minecraft/client/renderer/chunk/RenderRegionCache$ChunkInfo fms$a
	chunk a
	renderChunk b
	chunk ()Lnet/minecraft/world/level/chunk/LevelChunk; a
	renderChunk ()Lnet/minecraft/client/renderer/chunk/RenderChunk; b
net/minecraft/client/renderer/chunk/VisGraph fmt
	DIRECTIONS l
	DX h
	DY j
	DZ i
	INDEX_OF_EDGES n
	INVALID_INDEX k
	LEN b
	MASK c
	SIZE d
	SIZE_IN_BITS a
	X_SHIFT e
	Y_SHIFT g
	Z_SHIFT f
	bitSet m
	empty o
	addEdges (ILjava/util/Set;)V a
	floodFill (I)Ljava/util/Set; a
	getIndex (III)I a
	getIndex (Lnet/minecraft/core/BlockPos;)I b
	getNeighborIndexAtFace (ILnet/minecraft/core/Direction;)I a
	resolve ()Lnet/minecraft/client/renderer/chunk/VisibilitySet; a
	setOpaque (Lnet/minecraft/core/BlockPos;)V a
net/minecraft/client/renderer/chunk/VisibilitySet fmu
	FACINGS a
	data b
	add (Ljava/util/Set;)V a
	set (Lnet/minecraft/core/Direction;Lnet/minecraft/core/Direction;Z)V a
	setAll (Z)V a
	visibilityBetween (Lnet/minecraft/core/Direction;Lnet/minecraft/core/Direction;)Z a
net/minecraft/client/renderer/culling/Frustum fmw
	OFFSET_STEP a
	camX e
	camY f
	camZ g
	intersection b
	matrix c
	viewVector d
	calculateFrustum (Lorg/joml/Matrix4f;Lorg/joml/Matrix4f;)V a
	cubeInFrustum (DDDDDD)Z a
	isVisible (Lnet/minecraft/world/phys/AABB;)Z a
	offsetToFullyIncludeCameraCube (I)Lnet/minecraft/client/renderer/culling/Frustum; a
	prepare (DDD)V a
net/minecraft/client/renderer/debug/BeeDebugRenderer fmy
	GRAY x
	GREEN w
	HIVE_TIMEOUT r
	MAX_RENDER_DIST_FOR_BEE_OVERLAY p
	MAX_RENDER_DIST_FOR_HIVE_OVERLAY o
	MAX_TARGETING_DIST q
	ORANGE v
	PINK y
	RED z
	SHOW_BLACKLISTS n
	SHOW_FLOWER_POS_FOR_ALL_BEES d
	SHOW_FLOWER_POS_FOR_SELECTED_BEE j
	SHOW_GOAL_FOR_ALL_BEES a
	SHOW_GOAL_FOR_SELECTED_BEE g
	SHOW_HIVE_FOR_ALL_BEES c
	SHOW_HIVE_FOR_SELECTED_BEE i
	SHOW_HIVE_MEMBERS m
	SHOW_NAME_FOR_ALL_BEES b
	SHOW_NAME_FOR_SELECTED_BEE h
	SHOW_PATH_FOR_ALL_BEES f
	SHOW_PATH_FOR_SELECTED_BEE l
	SHOW_TRAVEL_TICKS_FOR_ALL_BEES e
	SHOW_TRAVEL_TICKS_FOR_SELECTED_BEE k
	TEXT_SCALE s
	WHITE t
	YELLOW u
	beeInfosPerEntity C
	hives B
	lastLookedAtUuid D
	minecraft A
	addOrUpdateBeeInfo (Lnet/minecraft/client/renderer/debug/BeeDebugRenderer$BeeInfo;)V a
	addOrUpdateHiveInfo (Lnet/minecraft/client/renderer/debug/BeeDebugRenderer$HiveInfo;)V a
	clear ()V a
	clearRemovedBees ()V b
	clearRemovedHives ()V c
	createHiveBlacklistMap ()Ljava/util/Map; d
	doRender (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;)V a
	getBeeUuidsAsString (Ljava/util/Collection;)Ljava/lang/String; a
	getCamera ()Lnet/minecraft/client/Camera; e
	getGhostHives ()Ljava/util/Map; f
	getHiveMemberNames (Lnet/minecraft/client/renderer/debug/BeeDebugRenderer$HiveInfo;)Ljava/util/Set; b
	getHiveMembers (Lnet/minecraft/core/BlockPos;)Ljava/util/Collection; a
	getPosDescription (Lnet/minecraft/client/renderer/debug/BeeDebugRenderer$BeeInfo;Lnet/minecraft/core/BlockPos;)Ljava/lang/String; a
	highlightHive (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;Lnet/minecraft/core/BlockPos;)V a
	isBeeSelected (Lnet/minecraft/client/renderer/debug/BeeDebugRenderer$BeeInfo;)Z b
	isPlayerCloseEnoughToMob (Lnet/minecraft/client/renderer/debug/BeeDebugRenderer$BeeInfo;)Z c
	removeBeeInfo (I)V a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;DDD)V a
	renderBeeInfo (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;Lnet/minecraft/client/renderer/debug/BeeDebugRenderer$BeeInfo;)V b
	renderFlowerInfos (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;)V b
	renderGhostHive (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;Lnet/minecraft/core/BlockPos;Ljava/util/List;)V a
	renderHiveInfo (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;Lnet/minecraft/client/renderer/debug/BeeDebugRenderer$HiveInfo;Ljava/util/Collection;)V a
	renderPath (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;Lnet/minecraft/client/renderer/debug/BeeDebugRenderer$BeeInfo;)V a
	renderTextOverHive (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;Ljava/lang/String;Lnet/minecraft/client/renderer/debug/BeeDebugRenderer$HiveInfo;II)V a
	renderTextOverMob (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;Lnet/minecraft/core/Position;ILjava/lang/String;IF)V a
	renderTextOverPos (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;Ljava/lang/String;Lnet/minecraft/core/BlockPos;II)V a
	updateLastLookedAtUuid ()V g
net/minecraft/client/renderer/debug/BeeDebugRenderer$BeeInfo fmy$a
	blacklistedHives i
	flowerPos f
	goals h
	hivePos e
	id b
	path d
	pos c
	travelTicks g
	uuid a
	getName ()Ljava/lang/String; b
	getUuid ()Ljava/util/UUID; a
	hasFlower ()Z c
	hasHive (Lnet/minecraft/core/BlockPos;)Z a
net/minecraft/client/renderer/debug/BeeDebugRenderer$HiveInfo fmy$b
	hiveType b
	honeyLevel d
	lastSeen f
	occupantCount c
	pos a
	sedated e
net/minecraft/client/renderer/debug/BrainDebugRenderer fmz
	CYAN D
	GRAY F
	GREEN E
	LOGGER a
	MAX_RENDER_DIST_FOR_BRAIN_INFO x
	MAX_RENDER_DIST_FOR_POI_INFO y
	MAX_TARGETING_DIST z
	ORANGE I
	PINK G
	RED H
	SHOW_ACTIVITIES_FOR_ALL e
	SHOW_ACTIVITIES_FOR_SELECTED o
	SHOW_ANGER_LEVEL_FOR_ALL k
	SHOW_ANGER_LEVEL_FOR_SELECTED v
	SHOW_BEHAVIORS_FOR_ALL d
	SHOW_BEHAVIORS_FOR_SELECTED n
	SHOW_GOSSIPS_FOR_ALL g
	SHOW_GOSSIPS_FOR_SELECTED r
	SHOW_HEALTH_FOR_ALL i
	SHOW_HEALTH_FOR_SELECTED t
	SHOW_INVENTORY_FOR_ALL f
	SHOW_INVENTORY_FOR_SELECTED q
	SHOW_MEMORIES_FOR_SELECTED p
	SHOW_NAME_FOR_ALL b
	SHOW_NAME_FOR_SELECTED l
	SHOW_PATH_FOR_ALL h
	SHOW_PATH_FOR_SELECTED s
	SHOW_POI_INFO w
	SHOW_PROFESSION_FOR_ALL c
	SHOW_PROFESSION_FOR_SELECTED m
	SHOW_WANTS_GOLEM_FOR_ALL j
	SHOW_WANTS_GOLEM_FOR_SELECTED u
	TEXT_SCALE A
	WHITE B
	YELLOW C
	brainDumpsPerEntity L
	lastLookedAtUuid M
	minecraft J
	pois K
	addOrUpdateBrainDump (Lnet/minecraft/client/renderer/debug/BrainDebugRenderer$BrainDump;)V a
	addPoi (Lnet/minecraft/client/renderer/debug/BrainDebugRenderer$PoiInfo;)V a
	clear ()V a
	clearRemovedEntities ()V b
	doRender (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;DDD)V b
	getGhostPois ()Ljava/util/Map; c
	getPotentialTicketHolderNames (Lnet/minecraft/client/renderer/debug/BrainDebugRenderer$PoiInfo;)Ljava/util/Set; c
	getPotentialTicketHolders (Lnet/minecraft/core/BlockPos;)Ljava/util/Collection; c
	getTicketHolderNames (Lnet/minecraft/client/renderer/debug/BrainDebugRenderer$PoiInfo;)Ljava/util/Set; b
	getTicketHolders (Lnet/minecraft/core/BlockPos;)Ljava/util/Collection; b
	highlightPoi (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;Lnet/minecraft/core/BlockPos;)V a
	isMobSelected (Lnet/minecraft/client/renderer/debug/BrainDebugRenderer$BrainDump;)Z b
	isPlayerCloseEnoughToMob (Lnet/minecraft/client/renderer/debug/BrainDebugRenderer$BrainDump;)Z c
	removeBrainDump (I)V a
	removePoi (Lnet/minecraft/core/BlockPos;)V a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;DDD)V a
	renderBrainInfo (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;Lnet/minecraft/client/renderer/debug/BrainDebugRenderer$BrainDump;DDD)V b
	renderGhostPoi (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;Lnet/minecraft/core/BlockPos;Ljava/util/List;)V a
	renderPath (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;Lnet/minecraft/client/renderer/debug/BrainDebugRenderer$BrainDump;DDD)V a
	renderPoiInfo (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;Lnet/minecraft/client/renderer/debug/BrainDebugRenderer$PoiInfo;)V a
	renderTextOverMob (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;Lnet/minecraft/core/Position;ILjava/lang/String;IF)V a
	renderTextOverPoi (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;Ljava/lang/String;Lnet/minecraft/client/renderer/debug/BrainDebugRenderer$PoiInfo;II)V a
	renderTextOverPos (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;Ljava/lang/String;Lnet/minecraft/core/BlockPos;II)V a
	setFreeTicketCount (Lnet/minecraft/core/BlockPos;I)V a
	updateLastLookedAtUuid ()V d
net/minecraft/client/renderer/debug/BrainDebugRenderer$BrainDump fmz$a
	activities m
	angerLevel l
	behaviors n
	gossips p
	health f
	id b
	inventory i
	maxHealth g
	memories o
	name c
	path j
	pois q
	pos h
	potentialPois r
	profession d
	uuid a
	wantsGolem k
	xp e
	getUuid ()Ljava/util/UUID; a
	hasPoi (Lnet/minecraft/core/BlockPos;)Z a
	hasPotentialPoi (Lnet/minecraft/core/BlockPos;)Z b
net/minecraft/client/renderer/debug/BrainDebugRenderer$PoiInfo fmz$b
	freeTicketCount c
	pos a
	type b
net/minecraft/client/renderer/debug/ChunkBorderRenderer fna
	CELL_BORDER b
	YELLOW c
	minecraft a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;DDD)V a
net/minecraft/client/renderer/debug/ChunkDebugRenderer fnb
	data d
	lastUpdateTime b
	minecraft a
	radius c
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;DDD)V a
net/minecraft/client/renderer/debug/ChunkDebugRenderer$ChunkData fnb$a
	clientData b
	serverData c
net/minecraft/client/renderer/debug/CollisionBoxRenderer fnc
	lastUpdateTime b
	minecraft a
	shapes c
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;DDD)V a
net/minecraft/client/renderer/debug/DebugRenderer fnd
	beeDebugRenderer o
	brainDebugRenderer m
	chunkBorderRenderer c
	chunkRenderer l
	collisionBoxRenderer e
	gameEventListenerRenderer s
	gameTestDebugRenderer r
	goalSelectorRenderer q
	heightMapRenderer d
	lightDebugRenderer i
	neighborsUpdateRenderer g
	pathfindingRenderer a
	raidDebugRenderer p
	renderChunkborder u
	skyLightSectionDebugRenderer t
	solidFaceRenderer k
	structureRenderer h
	supportBlockRenderer f
	villageSectionsDebugRenderer n
	waterDebugRenderer b
	worldGenAttemptRenderer j
	clear ()V a
	getTargetedEntity (Lnet/minecraft/world/entity/Entity;I)Ljava/util/Optional; a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource$BufferSource;DDD)V a
	renderFilledBox (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;DDDDDDFFFF)V a
	renderFilledBox (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;Lnet/minecraft/core/BlockPos;FFFFF)V a
	renderFilledBox (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;FFFF)V a
	renderFilledBox (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;Lnet/minecraft/world/phys/AABB;FFFF)V a
	renderFloatingText (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;Ljava/lang/String;DDDI)V a
	renderFloatingText (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;Ljava/lang/String;DDDIF)V a
	renderFloatingText (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;Ljava/lang/String;DDDIFZFZ)V a
	renderFloatingText (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;Ljava/lang/String;IIII)V a
	switchRenderChunkborder ()Z b
net/minecraft/client/renderer/debug/DebugRenderer$SimpleDebugRenderer fnd$a
	clear ()V a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;DDD)V a
net/minecraft/client/renderer/debug/GameEventListenerRenderer fne
	BOX_HEIGHT c
	LISTENER_RENDER_DIST b
	minecraft a
	trackedGameEvents d
	trackedListeners e
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;DDD)V a
	renderFilledBox (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;Lnet/minecraft/world/phys/AABB;FFFF)V a
	trackGameEvent (Lnet/minecraft/world/level/gameevent/GameEvent;Lnet/minecraft/world/phys/Vec3;)V a
	trackListener (Lnet/minecraft/world/level/gameevent/PositionSource;I)V a
net/minecraft/client/renderer/debug/GameEventListenerRenderer$TrackedGameEvent fne$a
	gameEvent b
	position c
	timeStamp a
	gameEvent ()Lnet/minecraft/world/level/gameevent/GameEvent; c
	isExpired ()Z a
	position ()Lnet/minecraft/world/phys/Vec3; d
	timeStamp ()J b
net/minecraft/client/renderer/debug/GameEventListenerRenderer$TrackedListener fne$b
	listenerRange b
	listenerSource a
	getListenerRadius ()I b
	getListenerSource ()Lnet/minecraft/world/level/gameevent/PositionSource; a
	getPosition (Lnet/minecraft/world/level/Level;)Ljava/util/Optional; a
	handleGameEvent (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/level/gameevent/GameEvent;Lnet/minecraft/world/level/gameevent/GameEvent$Context;Lnet/minecraft/world/phys/Vec3;)Z a
	isExpired (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/phys/Vec3;)Z a
net/minecraft/client/renderer/debug/GameTestDebugRenderer fnf
	PADDING a
	markers b
	addMarker (Lnet/minecraft/core/BlockPos;ILjava/lang/String;I)V a
	clear ()V a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;DDD)V a
	renderMarker (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;Lnet/minecraft/core/BlockPos;Lnet/minecraft/client/renderer/debug/GameTestDebugRenderer$Marker;)V a
net/minecraft/client/renderer/debug/GameTestDebugRenderer$Marker fnf$a
	color a
	removeAtTime c
	text b
	getA ()F d
	getB ()F c
	getG ()F b
	getR ()F a
net/minecraft/client/renderer/debug/GoalSelectorDebugRenderer fng
	MAX_RENDER_DIST a
	goalSelectors c
	minecraft b
	addGoalSelector (ILjava/util/List;)V a
	clear ()V a
	removeGoalSelector (I)V a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;DDD)V a
net/minecraft/client/renderer/debug/GoalSelectorDebugRenderer$DebugGoal fng$a
	isRunning d
	name c
	pos a
	priority b
net/minecraft/client/renderer/debug/HeightMapRenderer fnh
	BOX_HEIGHT c
	CHUNK_DIST b
	minecraft a
	getColor (Lnet/minecraft/world/level/levelgen/Heightmap$Types;)Lorg/joml/Vector3f; a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;DDD)V a
net/minecraft/client/renderer/debug/LightDebugRenderer fni
	MAX_RENDER_DIST b
	minecraft a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;DDD)V a
net/minecraft/client/renderer/debug/LightSectionDebugRenderer fnj
	LIGHT_AND_BLOCKS_COLOR c
	LIGHT_ONLY_COLOR d
	RADIUS b
	REFRESH_INTERVAL a
	data h
	lastUpdateTime g
	lightLayer f
	minecraft e
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;DDD)V a
	renderEdge (Lcom/mojang/blaze3d/vertex/PoseStack;Lcom/mojang/blaze3d/vertex/VertexConsumer;DDDIIIIIILorg/joml/Vector4f;)V a
	renderEdges (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/world/phys/shapes/DiscreteVoxelShape;Lnet/minecraft/core/SectionPos;Lnet/minecraft/client/renderer/MultiBufferSource;DDDLorg/joml/Vector4f;)V a
	renderFace (Lcom/mojang/blaze3d/vertex/PoseStack;Lcom/mojang/blaze3d/vertex/VertexConsumer;Lnet/minecraft/core/Direction;DDDIIILorg/joml/Vector4f;)V a
	renderFaces (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/world/phys/shapes/DiscreteVoxelShape;Lnet/minecraft/core/SectionPos;Lcom/mojang/blaze3d/vertex/VertexConsumer;DDDLorg/joml/Vector4f;)V a
net/minecraft/client/renderer/debug/LightSectionDebugRenderer$SectionData fnj$a
	lightAndBlocksShape a
	lightShape b
	minPos c
net/minecraft/client/renderer/debug/NeighborsUpdateRenderer fnk
	lastUpdate b
	minecraft a
	addUpdate (JLnet/minecraft/core/BlockPos;)V a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;DDD)V a
net/minecraft/client/renderer/debug/PathfindingRenderer fnl
	MAX_RENDER_DIST e
	SHOW_GROUND_LABELS j
	SHOW_OPEN_CLOSED f
	SHOW_OPEN_CLOSED_COST_MALUS g
	SHOW_OPEN_CLOSED_NODE_TYPE_WITH_BOX i
	SHOW_OPEN_CLOSED_NODE_TYPE_WITH_TEXT h
	TEXT_SCALE k
	TIMEOUT d
	creationMap c
	pathMap a
	pathMaxDist b
	addPath (ILnet/minecraft/world/level/pathfinder/Path;F)V a
	distanceToCamera (Lnet/minecraft/core/BlockPos;DDD)F a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;DDD)V a
	renderPath (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;Lnet/minecraft/world/level/pathfinder/Path;FZZDDD)V a
	renderPathLine (Lcom/mojang/blaze3d/vertex/PoseStack;Lcom/mojang/blaze3d/vertex/VertexConsumer;Lnet/minecraft/world/level/pathfinder/Path;DDD)V a
net/minecraft/client/renderer/debug/RaidDebugRenderer fnm
	MAX_RENDER_DIST a
	TEXT_SCALE b
	minecraft c
	raidCenters d
	getCamera ()Lnet/minecraft/client/Camera; b
	highlightRaidCenter (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;Lnet/minecraft/core/BlockPos;)V a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;DDD)V a
	renderTextOverBlock (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;Ljava/lang/String;Lnet/minecraft/core/BlockPos;I)V a
	setRaidCenters (Ljava/util/Collection;)V a
net/minecraft/client/renderer/debug/SolidFaceRenderer fnn
	minecraft a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;DDD)V a
net/minecraft/client/renderer/debug/StructureRenderer fno
	MAX_RENDER_DIST e
	minecraft a
	postMainBoxes b
	postPiecesBoxes c
	startPiecesMap d
	addBoundingBox (Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Ljava/util/List;Ljava/util/List;Lnet/minecraft/world/level/dimension/DimensionType;)V a
	clear ()V a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;DDD)V a
net/minecraft/client/renderer/debug/SupportBlockRenderer fnp
	lastUpdateTime b
	minecraft a
	surroundEntities c
	drawHighlights (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;DDDLnet/minecraft/world/entity/Entity;Ljava/util/function/DoubleSupplier;FFF)V a
	getBias (Lnet/minecraft/world/entity/Entity;)D a
	highlightPosition (Lnet/minecraft/core/BlockPos;Lcom/mojang/blaze3d/vertex/PoseStack;DDDLnet/minecraft/client/renderer/MultiBufferSource;DFFF)V a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;DDD)V a
net/minecraft/client/renderer/debug/VillageSectionsDebugRenderer fnq
	MAX_RENDER_DIST_FOR_VILLAGE_SECTIONS a
	villageSections b
	clear ()V a
	highlightVillageSection (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;Lnet/minecraft/core/SectionPos;)V a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;DDD)V a
	setNotVillageSection (Lnet/minecraft/core/SectionPos;)V b
	setVillageSection (Lnet/minecraft/core/SectionPos;)V a
net/minecraft/client/renderer/debug/WaterDebugRenderer fnr
	minecraft a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;DDD)V a
net/minecraft/client/renderer/debug/WorldGenAttemptRenderer fns
	alphas c
	blues f
	greens e
	reds d
	scales b
	toRender a
	addPos (Lnet/minecraft/core/BlockPos;FFFFF)V a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;DDD)V a
net/minecraft/client/renderer/entity/AbstractHorseRenderer fnu
	scale a
	scale (Lnet/minecraft/world/entity/LivingEntity;Lcom/mojang/blaze3d/vertex/PoseStack;F)V a
	scale (Lnet/minecraft/world/entity/animal/horse/AbstractHorse;Lcom/mojang/blaze3d/vertex/PoseStack;F)V a
net/minecraft/client/renderer/entity/AbstractZombieRenderer fnv
	ZOMBIE_LOCATION a
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/monster/Zombie;)Lnet/minecraft/resources/ResourceLocation; a
	isShaking (Lnet/minecraft/world/entity/LivingEntity;)Z a
	isShaking (Lnet/minecraft/world/entity/monster/Zombie;)Z b
net/minecraft/client/renderer/entity/AllayRenderer fnw
	ALLAY_TEXTURE a
	getBlockLightLevel (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/core/BlockPos;)I a
	getBlockLightLevel (Lnet/minecraft/world/entity/animal/allay/Allay;Lnet/minecraft/core/BlockPos;)I a
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/animal/allay/Allay;)Lnet/minecraft/resources/ResourceLocation; a
net/minecraft/client/renderer/entity/ArmorStandRenderer fnx
	DEFAULT_SKIN_LOCATION a
	getRenderType (Lnet/minecraft/world/entity/LivingEntity;ZZZ)Lnet/minecraft/client/renderer/RenderType; a
	getRenderType (Lnet/minecraft/world/entity/decoration/ArmorStand;ZZZ)Lnet/minecraft/client/renderer/RenderType; a
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/decoration/ArmorStand;)Lnet/minecraft/resources/ResourceLocation; a
	setupRotations (Lnet/minecraft/world/entity/LivingEntity;Lcom/mojang/blaze3d/vertex/PoseStack;FFF)V a
	setupRotations (Lnet/minecraft/world/entity/decoration/ArmorStand;Lcom/mojang/blaze3d/vertex/PoseStack;FFF)V a
	shouldShowName (Lnet/minecraft/world/entity/Entity;)Z b
	shouldShowName (Lnet/minecraft/world/entity/LivingEntity;)Z b
	shouldShowName (Lnet/minecraft/world/entity/decoration/ArmorStand;)Z b
net/minecraft/client/renderer/entity/ArrowRenderer fny
	render (Lnet/minecraft/world/entity/Entity;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	render (Lnet/minecraft/world/entity/projectile/AbstractArrow;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	vertex (Lorg/joml/Matrix4f;Lorg/joml/Matrix3f;Lcom/mojang/blaze3d/vertex/VertexConsumer;IIIFFIIII)V a
net/minecraft/client/renderer/entity/AxolotlRenderer fnz
	TEXTURE_BY_TYPE a
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/animal/axolotl/Axolotl;)Lnet/minecraft/resources/ResourceLocation; a
net/minecraft/client/renderer/entity/BatRenderer foa
	BAT_LOCATION a
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/ambient/Bat;)Lnet/minecraft/resources/ResourceLocation; a
	scale (Lnet/minecraft/world/entity/LivingEntity;Lcom/mojang/blaze3d/vertex/PoseStack;F)V a
	scale (Lnet/minecraft/world/entity/ambient/Bat;Lcom/mojang/blaze3d/vertex/PoseStack;F)V a
	setupRotations (Lnet/minecraft/world/entity/LivingEntity;Lcom/mojang/blaze3d/vertex/PoseStack;FFF)V a
	setupRotations (Lnet/minecraft/world/entity/ambient/Bat;Lcom/mojang/blaze3d/vertex/PoseStack;FFF)V a
net/minecraft/client/renderer/entity/BeeRenderer fob
	ANGRY_BEE_TEXTURE a
	ANGRY_NECTAR_BEE_TEXTURE i
	BEE_TEXTURE j
	NECTAR_BEE_TEXTURE k
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/animal/Bee;)Lnet/minecraft/resources/ResourceLocation; a
net/minecraft/client/renderer/entity/BlazeRenderer foc
	BLAZE_LOCATION a
	getBlockLightLevel (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/core/BlockPos;)I a
	getBlockLightLevel (Lnet/minecraft/world/entity/monster/Blaze;Lnet/minecraft/core/BlockPos;)I a
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/monster/Blaze;)Lnet/minecraft/resources/ResourceLocation; a
net/minecraft/client/renderer/entity/BoatRenderer fod
	boatResources a
	createBoatModel (Lnet/minecraft/client/renderer/entity/EntityRendererProvider$Context;Lnet/minecraft/world/entity/vehicle/Boat$Type;Z)Lnet/minecraft/client/model/ListModel; a
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/vehicle/Boat$Type;Z)Ljava/lang/String; a
	getTextureLocation (Lnet/minecraft/world/entity/vehicle/Boat;)Lnet/minecraft/resources/ResourceLocation; a
	render (Lnet/minecraft/world/entity/Entity;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	render (Lnet/minecraft/world/entity/vehicle/Boat;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
net/minecraft/client/renderer/entity/CamelRenderer foe
	CAMEL_LOCATION a
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/animal/camel/Camel;)Lnet/minecraft/resources/ResourceLocation; a
net/minecraft/client/renderer/entity/CatRenderer fof
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/animal/Cat;)Lnet/minecraft/resources/ResourceLocation; a
	scale (Lnet/minecraft/world/entity/LivingEntity;Lcom/mojang/blaze3d/vertex/PoseStack;F)V a
	scale (Lnet/minecraft/world/entity/animal/Cat;Lcom/mojang/blaze3d/vertex/PoseStack;F)V a
	setupRotations (Lnet/minecraft/world/entity/LivingEntity;Lcom/mojang/blaze3d/vertex/PoseStack;FFF)V a
	setupRotations (Lnet/minecraft/world/entity/animal/Cat;Lcom/mojang/blaze3d/vertex/PoseStack;FFF)V a
net/minecraft/client/renderer/entity/CaveSpiderRenderer fog
	CAVE_SPIDER_LOCATION a
	SCALE i
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/monster/CaveSpider;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/monster/Spider;)Lnet/minecraft/resources/ResourceLocation; a
	scale (Lnet/minecraft/world/entity/LivingEntity;Lcom/mojang/blaze3d/vertex/PoseStack;F)V a
	scale (Lnet/minecraft/world/entity/monster/CaveSpider;Lcom/mojang/blaze3d/vertex/PoseStack;F)V a
net/minecraft/client/renderer/entity/ChestedHorseRenderer foh
	MAP a
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/animal/horse/AbstractChestedHorse;)Lnet/minecraft/resources/ResourceLocation; a
net/minecraft/client/renderer/entity/ChickenRenderer foi
	CHICKEN_LOCATION a
	getBob (Lnet/minecraft/world/entity/LivingEntity;F)F a
	getBob (Lnet/minecraft/world/entity/animal/Chicken;F)F a
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/animal/Chicken;)Lnet/minecraft/resources/ResourceLocation; a
net/minecraft/client/renderer/entity/CodRenderer foj
	COD_LOCATION a
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/animal/Cod;)Lnet/minecraft/resources/ResourceLocation; a
	setupRotations (Lnet/minecraft/world/entity/LivingEntity;Lcom/mojang/blaze3d/vertex/PoseStack;FFF)V a
	setupRotations (Lnet/minecraft/world/entity/animal/Cod;Lcom/mojang/blaze3d/vertex/PoseStack;FFF)V a
net/minecraft/client/renderer/entity/CowRenderer fok
	COW_LOCATION a
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/animal/Cow;)Lnet/minecraft/resources/ResourceLocation; a
net/minecraft/client/renderer/entity/CreeperRenderer fol
	CREEPER_LOCATION a
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/monster/Creeper;)Lnet/minecraft/resources/ResourceLocation; a
	getWhiteOverlayProgress (Lnet/minecraft/world/entity/LivingEntity;F)F b
	getWhiteOverlayProgress (Lnet/minecraft/world/entity/monster/Creeper;F)F a
	scale (Lnet/minecraft/world/entity/LivingEntity;Lcom/mojang/blaze3d/vertex/PoseStack;F)V a
	scale (Lnet/minecraft/world/entity/monster/Creeper;Lcom/mojang/blaze3d/vertex/PoseStack;F)V a
net/minecraft/client/renderer/entity/DisplayRenderer fom
	entityRenderDispatcher a
	calculateOrientation (Lnet/minecraft/world/entity/Display$RenderState;Lnet/minecraft/world/entity/Display;)Lorg/joml/Quaternionf; a
	getSubState (Lnet/minecraft/world/entity/Display;)Ljava/lang/Object; b
	getTextureLocation (Lnet/minecraft/world/entity/Display;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	render (Lnet/minecraft/world/entity/Display;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	render (Lnet/minecraft/world/entity/Entity;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	renderInner (Lnet/minecraft/world/entity/Display;Ljava/lang/Object;Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;IF)V a
net/minecraft/client/renderer/entity/DisplayRenderer$BlockDisplayRenderer fom$a
	blockRenderer a
	getSubState (Lnet/minecraft/world/entity/Display$BlockDisplay;)Lnet/minecraft/world/entity/Display$BlockDisplay$BlockRenderState; a
	getSubState (Lnet/minecraft/world/entity/Display;)Ljava/lang/Object; b
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	render (Lnet/minecraft/world/entity/Entity;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	renderInner (Lnet/minecraft/world/entity/Display$BlockDisplay;Lnet/minecraft/world/entity/Display$BlockDisplay$BlockRenderState;Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;IF)V a
	renderInner (Lnet/minecraft/world/entity/Display;Ljava/lang/Object;Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;IF)V a
net/minecraft/client/renderer/entity/DisplayRenderer$ItemDisplayRenderer fom$b
	itemRenderer a
	getSubState (Lnet/minecraft/world/entity/Display$ItemDisplay;)Lnet/minecraft/world/entity/Display$ItemDisplay$ItemRenderState; a
	getSubState (Lnet/minecraft/world/entity/Display;)Ljava/lang/Object; b
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	render (Lnet/minecraft/world/entity/Entity;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	renderInner (Lnet/minecraft/world/entity/Display$ItemDisplay;Lnet/minecraft/world/entity/Display$ItemDisplay$ItemRenderState;Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;IF)V a
	renderInner (Lnet/minecraft/world/entity/Display;Ljava/lang/Object;Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;IF)V a
net/minecraft/client/renderer/entity/DisplayRenderer$TextDisplayRenderer fom$c
	font a
	getSubState (Lnet/minecraft/world/entity/Display$TextDisplay;)Lnet/minecraft/world/entity/Display$TextDisplay$TextRenderState; a
	getSubState (Lnet/minecraft/world/entity/Display;)Ljava/lang/Object; b
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	render (Lnet/minecraft/world/entity/Entity;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	renderInner (Lnet/minecraft/world/entity/Display$TextDisplay;Lnet/minecraft/world/entity/Display$TextDisplay$TextRenderState;Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;IF)V a
	renderInner (Lnet/minecraft/world/entity/Display;Ljava/lang/Object;Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;IF)V a
	splitLines (Lnet/minecraft/network/chat/Component;I)Lnet/minecraft/world/entity/Display$TextDisplay$CachedInfo; a
net/minecraft/client/renderer/entity/DolphinRenderer fon
	DOLPHIN_LOCATION a
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/animal/Dolphin;)Lnet/minecraft/resources/ResourceLocation; a
net/minecraft/client/renderer/entity/DragonFireballRenderer foo
	RENDER_TYPE f
	TEXTURE_LOCATION a
	getBlockLightLevel (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/core/BlockPos;)I a
	getBlockLightLevel (Lnet/minecraft/world/entity/projectile/DragonFireball;Lnet/minecraft/core/BlockPos;)I a
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/projectile/DragonFireball;)Lnet/minecraft/resources/ResourceLocation; a
	render (Lnet/minecraft/world/entity/Entity;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	render (Lnet/minecraft/world/entity/projectile/DragonFireball;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	vertex (Lcom/mojang/blaze3d/vertex/VertexConsumer;Lorg/joml/Matrix4f;Lorg/joml/Matrix3f;IFIII)V a
net/minecraft/client/renderer/entity/DrownedRenderer fop
	DROWNED_LOCATION a
	getTextureLocation (Lnet/minecraft/world/entity/monster/Zombie;)Lnet/minecraft/resources/ResourceLocation; a
	setupRotations (Lnet/minecraft/world/entity/LivingEntity;Lcom/mojang/blaze3d/vertex/PoseStack;FFF)V a
	setupRotations (Lnet/minecraft/world/entity/monster/Drowned;Lcom/mojang/blaze3d/vertex/PoseStack;FFF)V a
net/minecraft/client/renderer/entity/ElderGuardianRenderer foq
	GUARDIAN_ELDER_LOCATION a
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/monster/Guardian;)Lnet/minecraft/resources/ResourceLocation; a
	scale (Lnet/minecraft/world/entity/LivingEntity;Lcom/mojang/blaze3d/vertex/PoseStack;F)V a
	scale (Lnet/minecraft/world/entity/monster/Guardian;Lcom/mojang/blaze3d/vertex/PoseStack;F)V a
net/minecraft/client/renderer/entity/EndCrystalRenderer fos
	BASE i
	END_CRYSTAL_LOCATION a
	GLASS h
	RENDER_TYPE f
	SIN_45 g
	base l
	cube j
	glass k
	createBodyLayer ()Lnet/minecraft/client/model/geom/builders/LayerDefinition; a
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/boss/enderdragon/EndCrystal;)Lnet/minecraft/resources/ResourceLocation; a
	getY (Lnet/minecraft/world/entity/boss/enderdragon/EndCrystal;F)F a
	render (Lnet/minecraft/world/entity/Entity;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	render (Lnet/minecraft/world/entity/boss/enderdragon/EndCrystal;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	shouldRender (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/client/renderer/culling/Frustum;DDD)Z a
	shouldRender (Lnet/minecraft/world/entity/boss/enderdragon/EndCrystal;Lnet/minecraft/client/renderer/culling/Frustum;DDD)Z a
net/minecraft/client/renderer/entity/EnderDragonRenderer fot
	BEAM l
	CRYSTAL_BEAM_LOCATION a
	DECAL j
	DRAGON_EXPLODING_LOCATION f
	DRAGON_EYES_LOCATION h
	DRAGON_LOCATION g
	EYES k
	HALF_SQRT_3 m
	RENDER_TYPE i
	model n
	createBodyLayer ()Lnet/minecraft/client/model/geom/builders/LayerDefinition; a
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/boss/enderdragon/EnderDragon;)Lnet/minecraft/resources/ResourceLocation; a
	render (Lnet/minecraft/world/entity/Entity;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	render (Lnet/minecraft/world/entity/boss/enderdragon/EnderDragon;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	renderCrystalBeams (FFFFILcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	vertex01 (Lcom/mojang/blaze3d/vertex/VertexConsumer;Lorg/joml/Matrix4f;I)V a
	vertex2 (Lcom/mojang/blaze3d/vertex/VertexConsumer;Lorg/joml/Matrix4f;FF)V a
	vertex3 (Lcom/mojang/blaze3d/vertex/VertexConsumer;Lorg/joml/Matrix4f;FF)V b
	vertex4 (Lcom/mojang/blaze3d/vertex/VertexConsumer;Lorg/joml/Matrix4f;FF)V c
net/minecraft/client/renderer/entity/EnderDragonRenderer$DragonModel fot$a
	a z
	body g
	entity y
	head a
	jaw f
	leftFrontFoot l
	leftFrontLeg j
	leftFrontLegTip k
	leftRearFoot o
	leftRearLeg m
	leftRearLegTip n
	leftWing h
	leftWingTip i
	neck b
	rightFrontFoot t
	rightFrontLeg r
	rightFrontLegTip s
	rightRearFoot x
	rightRearLeg u
	rightRearLegTip w
	rightWing p
	rightWingTip q
	prepareMobModel (Lnet/minecraft/world/entity/Entity;FFF)V a
	prepareMobModel (Lnet/minecraft/world/entity/boss/enderdragon/EnderDragon;FFF)V a
	renderSide (Lcom/mojang/blaze3d/vertex/PoseStack;Lcom/mojang/blaze3d/vertex/VertexConsumer;IIFLnet/minecraft/client/model/geom/ModelPart;Lnet/minecraft/client/model/geom/ModelPart;Lnet/minecraft/client/model/geom/ModelPart;Lnet/minecraft/client/model/geom/ModelPart;Lnet/minecraft/client/model/geom/ModelPart;Lnet/minecraft/client/model/geom/ModelPart;Lnet/minecraft/client/model/geom/ModelPart;F)V a
	renderToBuffer (Lcom/mojang/blaze3d/vertex/PoseStack;Lcom/mojang/blaze3d/vertex/VertexConsumer;IIFFFF)V a
	setupAnim (Lnet/minecraft/world/entity/Entity;FFFFF)V a
	setupAnim (Lnet/minecraft/world/entity/boss/enderdragon/EnderDragon;FFFFF)V a
net/minecraft/client/renderer/entity/EndermanRenderer fou
	ENDERMAN_LOCATION a
	random i
	getRenderOffset (Lnet/minecraft/world/entity/Entity;F)Lnet/minecraft/world/phys/Vec3; a
	getRenderOffset (Lnet/minecraft/world/entity/monster/EnderMan;F)Lnet/minecraft/world/phys/Vec3; a
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/monster/EnderMan;)Lnet/minecraft/resources/ResourceLocation; a
	render (Lnet/minecraft/world/entity/Entity;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	render (Lnet/minecraft/world/entity/LivingEntity;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	render (Lnet/minecraft/world/entity/Mob;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	render (Lnet/minecraft/world/entity/monster/EnderMan;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
net/minecraft/client/renderer/entity/EndermiteRenderer fov
	ENDERMITE_LOCATION a
	getFlipDegrees (Lnet/minecraft/world/entity/LivingEntity;)F c
	getFlipDegrees (Lnet/minecraft/world/entity/monster/Endermite;)F a
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/monster/Endermite;)Lnet/minecraft/resources/ResourceLocation; b
net/minecraft/client/renderer/entity/EntityRenderDispatcher fow
	MAX_SHADOW_RADIUS f
	SHADOW_POWER_FALLOFF_Y g
	SHADOW_RENDER_TYPE e
	blockRenderDispatcher m
	camera b
	cameraOrientation k
	crosshairPickEntity c
	entityModels p
	font o
	itemInHandRenderer n
	itemRenderer l
	level j
	options d
	playerRenderers i
	renderHitBoxes r
	renderers h
	shouldRenderShadow q
	textureManager a
	cameraOrientation ()Lorg/joml/Quaternionf; b
	distanceToSqr (DDD)D a
	distanceToSqr (Lnet/minecraft/world/entity/Entity;)D b
	fireVertex (Lcom/mojang/blaze3d/vertex/PoseStack$Pose;Lcom/mojang/blaze3d/vertex/VertexConsumer;FFFFF)V a
	getItemInHandRenderer ()Lnet/minecraft/client/renderer/ItemInHandRenderer; d
	getPackedLightCoords (Lnet/minecraft/world/entity/Entity;F)I a
	getRenderer (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/client/renderer/entity/EntityRenderer; a
	onResourceManagerReload (Lnet/minecraft/server/packs/resources/ResourceManager;)V a
	overrideCameraOrientation (Lorg/joml/Quaternionf;)V a
	prepare (Lnet/minecraft/world/level/Level;Lnet/minecraft/client/Camera;Lnet/minecraft/world/entity/Entity;)V a
	render (Lnet/minecraft/world/entity/Entity;DDDFFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	renderBlockShadow (Lcom/mojang/blaze3d/vertex/PoseStack$Pose;Lcom/mojang/blaze3d/vertex/VertexConsumer;Lnet/minecraft/world/level/chunk/ChunkAccess;Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;DDDFF)V a
	renderFlame (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;Lnet/minecraft/world/entity/Entity;)V a
	renderHitbox (Lcom/mojang/blaze3d/vertex/PoseStack;Lcom/mojang/blaze3d/vertex/VertexConsumer;Lnet/minecraft/world/entity/Entity;F)V a
	renderShadow (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;Lnet/minecraft/world/entity/Entity;FFLnet/minecraft/world/level/LevelReader;F)V a
	setLevel (Lnet/minecraft/world/level/Level;)V a
	setRenderHitBoxes (Z)V b
	setRenderShadow (Z)V a
	shadowVertex (Lcom/mojang/blaze3d/vertex/PoseStack$Pose;Lcom/mojang/blaze3d/vertex/VertexConsumer;FFFFFF)V a
	shouldRender (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/client/renderer/culling/Frustum;DDD)Z a
	shouldRenderHitBoxes ()Z a
net/minecraft/client/renderer/entity/EntityRenderer fox
	NAMETAG_SCALE b
	entityRenderDispatcher c
	font a
	shadowRadius d
	shadowStrength e
	getBlockLightLevel (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/core/BlockPos;)I a
	getFont ()Lnet/minecraft/client/gui/Font; b
	getPackedLightCoords (Lnet/minecraft/world/entity/Entity;F)I b
	getRenderOffset (Lnet/minecraft/world/entity/Entity;F)Lnet/minecraft/world/phys/Vec3; a
	getSkyLightLevel (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/core/BlockPos;)I b
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	render (Lnet/minecraft/world/entity/Entity;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	renderNameTag (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/network/chat/Component;Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	shouldRender (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/client/renderer/culling/Frustum;DDD)Z a
	shouldShowName (Lnet/minecraft/world/entity/Entity;)Z b
net/minecraft/client/renderer/entity/EntityRendererProvider foy
net/minecraft/client/renderer/entity/EntityRendererProvider$Context foy$a
	blockRenderDispatcher c
	entityRenderDispatcher a
	font g
	itemInHandRenderer d
	itemRenderer b
	modelSet f
	resourceManager e
	bakeLayer (Lnet/minecraft/client/model/geom/ModelLayerLocation;)Lnet/minecraft/client/model/geom/ModelPart; a
	getBlockRenderDispatcher ()Lnet/minecraft/client/renderer/block/BlockRenderDispatcher; c
	getEntityRenderDispatcher ()Lnet/minecraft/client/renderer/entity/EntityRenderDispatcher; a
	getFont ()Lnet/minecraft/client/gui/Font; h
	getItemInHandRenderer ()Lnet/minecraft/client/renderer/ItemInHandRenderer; d
	getItemRenderer ()Lnet/minecraft/client/renderer/entity/ItemRenderer; b
	getModelManager ()Lnet/minecraft/client/resources/model/ModelManager; g
	getModelSet ()Lnet/minecraft/client/model/geom/EntityModelSet; f
	getResourceManager ()Lnet/minecraft/server/packs/resources/ResourceManager; e
net/minecraft/client/renderer/entity/EntityRenderers foz
	DEFAULT_PLAYER_MODEL a
	LOGGER b
	PLAYER_PROVIDERS d
	PROVIDERS c
	createEntityRenderers (Lnet/minecraft/client/renderer/entity/EntityRendererProvider$Context;)Ljava/util/Map; a
	createPlayerRenderers (Lnet/minecraft/client/renderer/entity/EntityRendererProvider$Context;)Ljava/util/Map; b
	register (Lnet/minecraft/world/entity/EntityType;Lnet/minecraft/client/renderer/entity/EntityRendererProvider;)V a
	validateRegistrations ()Z a
net/minecraft/client/renderer/entity/EvokerFangsRenderer fpa
	TEXTURE_LOCATION a
	model f
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/projectile/EvokerFangs;)Lnet/minecraft/resources/ResourceLocation; a
	render (Lnet/minecraft/world/entity/Entity;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	render (Lnet/minecraft/world/entity/projectile/EvokerFangs;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
net/minecraft/client/renderer/entity/EvokerRenderer fpb
	EVOKER_ILLAGER a
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/monster/SpellcasterIllager;)Lnet/minecraft/resources/ResourceLocation; a
net/minecraft/client/renderer/entity/ExperienceOrbRenderer fpc
	EXPERIENCE_ORB_LOCATION a
	RENDER_TYPE f
	getBlockLightLevel (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/core/BlockPos;)I a
	getBlockLightLevel (Lnet/minecraft/world/entity/ExperienceOrb;Lnet/minecraft/core/BlockPos;)I a
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/ExperienceOrb;)Lnet/minecraft/resources/ResourceLocation; a
	render (Lnet/minecraft/world/entity/Entity;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	render (Lnet/minecraft/world/entity/ExperienceOrb;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	vertex (Lcom/mojang/blaze3d/vertex/VertexConsumer;Lorg/joml/Matrix4f;Lorg/joml/Matrix3f;FFIIIFFI)V a
net/minecraft/client/renderer/entity/FallingBlockRenderer fpd
	dispatcher a
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/item/FallingBlockEntity;)Lnet/minecraft/resources/ResourceLocation; a
	render (Lnet/minecraft/world/entity/Entity;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	render (Lnet/minecraft/world/entity/item/FallingBlockEntity;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
net/minecraft/client/renderer/entity/FireworkEntityRenderer fpe
	itemRenderer a
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/projectile/FireworkRocketEntity;)Lnet/minecraft/resources/ResourceLocation; a
	render (Lnet/minecraft/world/entity/Entity;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	render (Lnet/minecraft/world/entity/projectile/FireworkRocketEntity;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
net/minecraft/client/renderer/entity/FishingHookRenderer fpf
	RENDER_TYPE f
	TEXTURE_LOCATION a
	VIEW_BOBBING_SCALE g
	fraction (II)F a
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/projectile/FishingHook;)Lnet/minecraft/resources/ResourceLocation; a
	render (Lnet/minecraft/world/entity/Entity;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	render (Lnet/minecraft/world/entity/projectile/FishingHook;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	stringVertex (FFFLcom/mojang/blaze3d/vertex/VertexConsumer;Lcom/mojang/blaze3d/vertex/PoseStack$Pose;FF)V a
	vertex (Lcom/mojang/blaze3d/vertex/VertexConsumer;Lorg/joml/Matrix4f;Lorg/joml/Matrix3f;IFIII)V a
net/minecraft/client/renderer/entity/FoxRenderer fpg
	RED_FOX_SLEEP_TEXTURE i
	RED_FOX_TEXTURE a
	SNOW_FOX_SLEEP_TEXTURE k
	SNOW_FOX_TEXTURE j
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/animal/Fox;)Lnet/minecraft/resources/ResourceLocation; a
	setupRotations (Lnet/minecraft/world/entity/LivingEntity;Lcom/mojang/blaze3d/vertex/PoseStack;FFF)V a
	setupRotations (Lnet/minecraft/world/entity/animal/Fox;Lcom/mojang/blaze3d/vertex/PoseStack;FFF)V a
net/minecraft/client/renderer/entity/FrogRenderer fph
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/animal/frog/Frog;)Lnet/minecraft/resources/ResourceLocation; a
net/minecraft/client/renderer/entity/GhastRenderer fpi
	GHAST_LOCATION a
	GHAST_SHOOTING_LOCATION i
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/monster/Ghast;)Lnet/minecraft/resources/ResourceLocation; a
	scale (Lnet/minecraft/world/entity/LivingEntity;Lcom/mojang/blaze3d/vertex/PoseStack;F)V a
	scale (Lnet/minecraft/world/entity/monster/Ghast;Lcom/mojang/blaze3d/vertex/PoseStack;F)V a
net/minecraft/client/renderer/entity/GiantMobRenderer fpj
	ZOMBIE_LOCATION a
	scale i
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/monster/Giant;)Lnet/minecraft/resources/ResourceLocation; a
	scale (Lnet/minecraft/world/entity/LivingEntity;Lcom/mojang/blaze3d/vertex/PoseStack;F)V a
	scale (Lnet/minecraft/world/entity/monster/Giant;Lcom/mojang/blaze3d/vertex/PoseStack;F)V a
net/minecraft/client/renderer/entity/GlowSquidRenderer fpk
	GLOW_SQUID_LOCATION a
	getBlockLightLevel (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/core/BlockPos;)I a
	getBlockLightLevel (Lnet/minecraft/world/entity/GlowSquid;Lnet/minecraft/core/BlockPos;)I a
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/GlowSquid;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/animal/Squid;)Lnet/minecraft/resources/ResourceLocation; a
net/minecraft/client/renderer/entity/GoatRenderer fpl
	GOAT_LOCATION a
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/animal/goat/Goat;)Lnet/minecraft/resources/ResourceLocation; a
net/minecraft/client/renderer/entity/GuardianRenderer fpm
	BEAM_RENDER_TYPE j
	GUARDIAN_BEAM_LOCATION i
	GUARDIAN_LOCATION a
	getPosition (Lnet/minecraft/world/entity/LivingEntity;DF)Lnet/minecraft/world/phys/Vec3; a
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/monster/Guardian;)Lnet/minecraft/resources/ResourceLocation; a
	render (Lnet/minecraft/world/entity/Entity;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	render (Lnet/minecraft/world/entity/LivingEntity;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	render (Lnet/minecraft/world/entity/Mob;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	render (Lnet/minecraft/world/entity/monster/Guardian;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	shouldRender (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/client/renderer/culling/Frustum;DDD)Z a
	shouldRender (Lnet/minecraft/world/entity/Mob;Lnet/minecraft/client/renderer/culling/Frustum;DDD)Z a
	shouldRender (Lnet/minecraft/world/entity/monster/Guardian;Lnet/minecraft/client/renderer/culling/Frustum;DDD)Z a
	vertex (Lcom/mojang/blaze3d/vertex/VertexConsumer;Lorg/joml/Matrix4f;Lorg/joml/Matrix3f;FFFIIIFF)V a
net/minecraft/client/renderer/entity/HoglinRenderer fpn
	HOGLIN_LOCATION a
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/monster/hoglin/Hoglin;)Lnet/minecraft/resources/ResourceLocation; a
	isShaking (Lnet/minecraft/world/entity/LivingEntity;)Z a
	isShaking (Lnet/minecraft/world/entity/monster/hoglin/Hoglin;)Z b
net/minecraft/client/renderer/entity/HorseRenderer fpo
	LOCATION_BY_VARIANT a
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/animal/horse/Horse;)Lnet/minecraft/resources/ResourceLocation; a
net/minecraft/client/renderer/entity/HumanoidMobRenderer fpp
net/minecraft/client/renderer/entity/HuskRenderer fpq
	HUSK_LOCATION a
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/monster/Zombie;)Lnet/minecraft/resources/ResourceLocation; a
	scale (Lnet/minecraft/world/entity/LivingEntity;Lcom/mojang/blaze3d/vertex/PoseStack;F)V a
	scale (Lnet/minecraft/world/entity/monster/Zombie;Lcom/mojang/blaze3d/vertex/PoseStack;F)V a
net/minecraft/client/renderer/entity/IllagerRenderer fpr
	scale (Lnet/minecraft/world/entity/LivingEntity;Lcom/mojang/blaze3d/vertex/PoseStack;F)V a
	scale (Lnet/minecraft/world/entity/monster/AbstractIllager;Lcom/mojang/blaze3d/vertex/PoseStack;F)V a
net/minecraft/client/renderer/entity/IllusionerRenderer fps
	ILLUSIONER a
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/monster/Illusioner;)Lnet/minecraft/resources/ResourceLocation; a
	isBodyVisible (Lnet/minecraft/world/entity/LivingEntity;)Z d
	isBodyVisible (Lnet/minecraft/world/entity/monster/Illusioner;)Z b
	render (Lnet/minecraft/world/entity/Entity;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	render (Lnet/minecraft/world/entity/LivingEntity;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	render (Lnet/minecraft/world/entity/Mob;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	render (Lnet/minecraft/world/entity/monster/Illusioner;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
net/minecraft/client/renderer/entity/IronGolemRenderer fpt
	GOLEM_LOCATION a
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/animal/IronGolem;)Lnet/minecraft/resources/ResourceLocation; a
	setupRotations (Lnet/minecraft/world/entity/LivingEntity;Lcom/mojang/blaze3d/vertex/PoseStack;FFF)V a
	setupRotations (Lnet/minecraft/world/entity/animal/IronGolem;Lcom/mojang/blaze3d/vertex/PoseStack;FFF)V a
net/minecraft/client/renderer/entity/ItemEntityRenderer fpu
	FLAT_ITEM_BUNDLE_OFFSET_X j
	FLAT_ITEM_BUNDLE_OFFSET_Y k
	FLAT_ITEM_BUNDLE_OFFSET_Z l
	ITEM_BUNDLE_OFFSET_SCALE a
	ITEM_COUNT_FOR_2_BUNDLE i
	ITEM_COUNT_FOR_3_BUNDLE h
	ITEM_COUNT_FOR_4_BUNDLE g
	ITEM_COUNT_FOR_5_BUNDLE f
	itemRenderer m
	random n
	getRenderAmount (Lnet/minecraft/world/item/ItemStack;)I a
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/item/ItemEntity;)Lnet/minecraft/resources/ResourceLocation; a
	render (Lnet/minecraft/world/entity/Entity;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	render (Lnet/minecraft/world/entity/item/ItemEntity;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
net/minecraft/client/renderer/entity/ItemFrameRenderer fpv
	BRIGHT_MAP_LIGHT_ADJUSTMENT f
	FRAME_LOCATION g
	GLOW_FRAME_BRIGHTNESS a
	GLOW_FRAME_LOCATION i
	GLOW_MAP_FRAME_LOCATION j
	MAP_FRAME_LOCATION h
	blockRenderer l
	itemRenderer k
	getBlockLightLevel (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/core/BlockPos;)I a
	getBlockLightLevel (Lnet/minecraft/world/entity/decoration/ItemFrame;Lnet/minecraft/core/BlockPos;)I a
	getFrameModelResourceLoc (Lnet/minecraft/world/entity/decoration/ItemFrame;Lnet/minecraft/world/item/ItemStack;)Lnet/minecraft/client/resources/model/ModelResourceLocation; a
	getLightVal (Lnet/minecraft/world/entity/decoration/ItemFrame;II)I a
	getRenderOffset (Lnet/minecraft/world/entity/Entity;F)Lnet/minecraft/world/phys/Vec3; a
	getRenderOffset (Lnet/minecraft/world/entity/decoration/ItemFrame;F)Lnet/minecraft/world/phys/Vec3; a
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/decoration/ItemFrame;)Lnet/minecraft/resources/ResourceLocation; a
	render (Lnet/minecraft/world/entity/Entity;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	render (Lnet/minecraft/world/entity/decoration/ItemFrame;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	renderNameTag (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/network/chat/Component;Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	renderNameTag (Lnet/minecraft/world/entity/decoration/ItemFrame;Lnet/minecraft/network/chat/Component;Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	shouldShowName (Lnet/minecraft/world/entity/Entity;)Z b
	shouldShowName (Lnet/minecraft/world/entity/decoration/ItemFrame;)Z b
net/minecraft/client/renderer/entity/ItemRenderer fpw
	COMPASS_FOIL_FIRST_PERSON_SCALE g
	COMPASS_FOIL_TEXTURE_SCALE h
	COMPASS_FOIL_UI_SCALE f
	ENCHANTED_GLINT_ENTITY a
	ENCHANTED_GLINT_ITEM b
	GUI_SLOT_CENTER_X c
	GUI_SLOT_CENTER_Y d
	IGNORED k
	ITEM_COUNT_BLIT_OFFSET e
	SPYGLASS_IN_HAND_MODEL j
	SPYGLASS_MODEL m
	TRIDENT_IN_HAND_MODEL i
	TRIDENT_MODEL l
	blockEntityRenderer r
	itemColors q
	itemModelShaper o
	minecraft n
	textureManager p
	getArmorFoilBuffer (Lnet/minecraft/client/renderer/MultiBufferSource;Lnet/minecraft/client/renderer/RenderType;ZZ)Lcom/mojang/blaze3d/vertex/VertexConsumer; a
	getCompassFoilBuffer (Lnet/minecraft/client/renderer/MultiBufferSource;Lnet/minecraft/client/renderer/RenderType;Lcom/mojang/blaze3d/vertex/PoseStack$Pose;)Lcom/mojang/blaze3d/vertex/VertexConsumer; a
	getCompassFoilBufferDirect (Lnet/minecraft/client/renderer/MultiBufferSource;Lnet/minecraft/client/renderer/RenderType;Lcom/mojang/blaze3d/vertex/PoseStack$Pose;)Lcom/mojang/blaze3d/vertex/VertexConsumer; b
	getFoilBuffer (Lnet/minecraft/client/renderer/MultiBufferSource;Lnet/minecraft/client/renderer/RenderType;ZZ)Lcom/mojang/blaze3d/vertex/VertexConsumer; b
	getFoilBufferDirect (Lnet/minecraft/client/renderer/MultiBufferSource;Lnet/minecraft/client/renderer/RenderType;ZZ)Lcom/mojang/blaze3d/vertex/VertexConsumer; c
	getItemModelShaper ()Lnet/minecraft/client/renderer/ItemModelShaper; a
	getModel (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/LivingEntity;I)Lnet/minecraft/client/resources/model/BakedModel; a
	hasAnimatedTexture (Lnet/minecraft/world/item/ItemStack;)Z a
	onResourceManagerReload (Lnet/minecraft/server/packs/resources/ResourceManager;)V a
	render (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/item/ItemDisplayContext;ZLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;IILnet/minecraft/client/resources/model/BakedModel;)V a
	renderModelLists (Lnet/minecraft/client/resources/model/BakedModel;Lnet/minecraft/world/item/ItemStack;IILcom/mojang/blaze3d/vertex/PoseStack;Lcom/mojang/blaze3d/vertex/VertexConsumer;)V a
	renderQuadList (Lcom/mojang/blaze3d/vertex/PoseStack;Lcom/mojang/blaze3d/vertex/VertexConsumer;Ljava/util/List;Lnet/minecraft/world/item/ItemStack;II)V a
	renderStatic (Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/item/ItemDisplayContext;ZLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;Lnet/minecraft/world/level/Level;III)V a
	renderStatic (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/item/ItemDisplayContext;IILcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;Lnet/minecraft/world/level/Level;I)V a
net/minecraft/client/renderer/entity/LeashKnotRenderer fpx
	KNOT_LOCATION a
	model f
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/decoration/LeashFenceKnotEntity;)Lnet/minecraft/resources/ResourceLocation; a
	render (Lnet/minecraft/world/entity/Entity;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	render (Lnet/minecraft/world/entity/decoration/LeashFenceKnotEntity;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
net/minecraft/client/renderer/entity/LightningBoltRenderer fpy
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/LightningBolt;)Lnet/minecraft/resources/ResourceLocation; a
	quad (Lorg/joml/Matrix4f;Lcom/mojang/blaze3d/vertex/VertexConsumer;FFIFFFFFFFZZZZ)V a
	render (Lnet/minecraft/world/entity/Entity;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	render (Lnet/minecraft/world/entity/LightningBolt;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
net/minecraft/client/renderer/entity/LivingEntityRenderer fpz
	EYE_BED_OFFSET h
	LOGGER a
	layers g
	model f
	addLayer (Lnet/minecraft/client/renderer/entity/layers/RenderLayer;)Z a
	getAttackAnim (Lnet/minecraft/world/entity/LivingEntity;F)F d
	getBob (Lnet/minecraft/world/entity/LivingEntity;F)F a
	getFlipDegrees (Lnet/minecraft/world/entity/LivingEntity;)F c
	getModel ()Lnet/minecraft/client/model/EntityModel; a
	getOverlayCoords (Lnet/minecraft/world/entity/LivingEntity;F)I c
	getRenderType (Lnet/minecraft/world/entity/LivingEntity;ZZZ)Lnet/minecraft/client/renderer/RenderType; a
	getWhiteOverlayProgress (Lnet/minecraft/world/entity/LivingEntity;F)F b
	isBodyVisible (Lnet/minecraft/world/entity/LivingEntity;)Z d
	isEntityUpsideDown (Lnet/minecraft/world/entity/LivingEntity;)Z e
	isShaking (Lnet/minecraft/world/entity/LivingEntity;)Z a
	render (Lnet/minecraft/world/entity/Entity;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	render (Lnet/minecraft/world/entity/LivingEntity;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	scale (Lnet/minecraft/world/entity/LivingEntity;Lcom/mojang/blaze3d/vertex/PoseStack;F)V a
	setupRotations (Lnet/minecraft/world/entity/LivingEntity;Lcom/mojang/blaze3d/vertex/PoseStack;FFF)V a
	shouldShowName (Lnet/minecraft/world/entity/Entity;)Z b
	shouldShowName (Lnet/minecraft/world/entity/LivingEntity;)Z b
	sleepDirectionToRotation (Lnet/minecraft/core/Direction;)F a
net/minecraft/client/renderer/entity/LlamaRenderer fqa
	BROWN j
	CREAMY a
	GRAY k
	WHITE i
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/animal/horse/Llama;)Lnet/minecraft/resources/ResourceLocation; a
net/minecraft/client/renderer/entity/LlamaSpitRenderer fqb
	LLAMA_SPIT_LOCATION a
	model f
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/projectile/LlamaSpit;)Lnet/minecraft/resources/ResourceLocation; a
	render (Lnet/minecraft/world/entity/Entity;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	render (Lnet/minecraft/world/entity/projectile/LlamaSpit;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
net/minecraft/client/renderer/entity/MagmaCubeRenderer fqc
	MAGMACUBE_LOCATION a
	getBlockLightLevel (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/core/BlockPos;)I a
	getBlockLightLevel (Lnet/minecraft/world/entity/monster/MagmaCube;Lnet/minecraft/core/BlockPos;)I a
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/monster/MagmaCube;)Lnet/minecraft/resources/ResourceLocation; a
	render (Lnet/minecraft/world/entity/Entity;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	render (Lnet/minecraft/world/entity/LivingEntity;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	render (Lnet/minecraft/world/entity/Mob;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	render (Lnet/minecraft/world/entity/monster/MagmaCube;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	scale (Lnet/minecraft/world/entity/LivingEntity;Lcom/mojang/blaze3d/vertex/PoseStack;F)V a
	scale (Lnet/minecraft/world/entity/monster/MagmaCube;Lcom/mojang/blaze3d/vertex/PoseStack;F)V a
net/minecraft/client/renderer/entity/MinecartRenderer fqd
	MINECART_LOCATION f
	blockRenderer g
	model a
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/vehicle/AbstractMinecart;)Lnet/minecraft/resources/ResourceLocation; a
	render (Lnet/minecraft/world/entity/Entity;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	render (Lnet/minecraft/world/entity/vehicle/AbstractMinecart;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	renderMinecartContents (Lnet/minecraft/world/entity/vehicle/AbstractMinecart;FLnet/minecraft/world/level/block/state/BlockState;Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
net/minecraft/client/renderer/entity/MobRenderer fqe
	LEASH_RENDER_STEPS h
	addVertexPair (Lcom/mojang/blaze3d/vertex/VertexConsumer;Lorg/joml/Matrix4f;FFFIIIIFFFFIZ)V a
	render (Lnet/minecraft/world/entity/Entity;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	render (Lnet/minecraft/world/entity/LivingEntity;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	render (Lnet/minecraft/world/entity/Mob;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	renderLeash (Lnet/minecraft/world/entity/Mob;FLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;Lnet/minecraft/world/entity/Entity;)V a
	shouldRender (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/client/renderer/culling/Frustum;DDD)Z a
	shouldRender (Lnet/minecraft/world/entity/Mob;Lnet/minecraft/client/renderer/culling/Frustum;DDD)Z a
	shouldShowName (Lnet/minecraft/world/entity/Entity;)Z b
	shouldShowName (Lnet/minecraft/world/entity/LivingEntity;)Z b
	shouldShowName (Lnet/minecraft/world/entity/Mob;)Z a
net/minecraft/client/renderer/entity/MushroomCowRenderer fqf
	TEXTURES a
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/animal/MushroomCow;)Lnet/minecraft/resources/ResourceLocation; a
net/minecraft/client/renderer/entity/NoopRenderer fqg
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
net/minecraft/client/renderer/entity/OcelotRenderer fqh
	CAT_OCELOT_LOCATION a
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/animal/Ocelot;)Lnet/minecraft/resources/ResourceLocation; a
net/minecraft/client/renderer/entity/PaintingRenderer fqi
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/decoration/Painting;)Lnet/minecraft/resources/ResourceLocation; a
	render (Lnet/minecraft/world/entity/Entity;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	render (Lnet/minecraft/world/entity/decoration/Painting;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	renderPainting (Lcom/mojang/blaze3d/vertex/PoseStack;Lcom/mojang/blaze3d/vertex/VertexConsumer;Lnet/minecraft/world/entity/decoration/Painting;IILnet/minecraft/client/renderer/texture/TextureAtlasSprite;Lnet/minecraft/client/renderer/texture/TextureAtlasSprite;)V a
	vertex (Lorg/joml/Matrix4f;Lorg/joml/Matrix3f;Lcom/mojang/blaze3d/vertex/VertexConsumer;FFFFFIIII)V a
net/minecraft/client/renderer/entity/PandaRenderer fqj
	TEXTURES a
	getAngle (FFIFF)F a
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/animal/Panda;)Lnet/minecraft/resources/ResourceLocation; a
	setupRotations (Lnet/minecraft/world/entity/LivingEntity;Lcom/mojang/blaze3d/vertex/PoseStack;FFF)V a
	setupRotations (Lnet/minecraft/world/entity/animal/Panda;Lcom/mojang/blaze3d/vertex/PoseStack;FFF)V a
net/minecraft/client/renderer/entity/ParrotRenderer fqk
	BLUE i
	GREEN j
	GREY l
	RED_BLUE a
	YELLOW_BLUE k
	getBob (Lnet/minecraft/world/entity/LivingEntity;F)F a
	getBob (Lnet/minecraft/world/entity/animal/Parrot;F)F a
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/animal/Parrot;)Lnet/minecraft/resources/ResourceLocation; a
	getVariantTexture (Lnet/minecraft/world/entity/animal/Parrot$Variant;)Lnet/minecraft/resources/ResourceLocation; a
net/minecraft/client/renderer/entity/PhantomRenderer fql
	PHANTOM_LOCATION a
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/monster/Phantom;)Lnet/minecraft/resources/ResourceLocation; a
	scale (Lnet/minecraft/world/entity/LivingEntity;Lcom/mojang/blaze3d/vertex/PoseStack;F)V a
	scale (Lnet/minecraft/world/entity/monster/Phantom;Lcom/mojang/blaze3d/vertex/PoseStack;F)V a
	setupRotations (Lnet/minecraft/world/entity/LivingEntity;Lcom/mojang/blaze3d/vertex/PoseStack;FFF)V a
	setupRotations (Lnet/minecraft/world/entity/monster/Phantom;Lcom/mojang/blaze3d/vertex/PoseStack;FFF)V a
net/minecraft/client/renderer/entity/PigRenderer fqm
	PIG_LOCATION a
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/animal/Pig;)Lnet/minecraft/resources/ResourceLocation; a
net/minecraft/client/renderer/entity/PiglinRenderer fqn
	PIGLIN_CUSTOM_HEAD_SCALE i
	TEXTURES a
	createModel (Lnet/minecraft/client/model/geom/EntityModelSet;Lnet/minecraft/client/model/geom/ModelLayerLocation;Z)Lnet/minecraft/client/model/PiglinModel; a
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/Mob;)Lnet/minecraft/resources/ResourceLocation; b
	isShaking (Lnet/minecraft/world/entity/LivingEntity;)Z a
	isShaking (Lnet/minecraft/world/entity/Mob;)Z c
net/minecraft/client/renderer/entity/PillagerRenderer fqo
	PILLAGER a
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/monster/Pillager;)Lnet/minecraft/resources/ResourceLocation; a
net/minecraft/client/renderer/entity/PolarBearRenderer fqp
	BEAR_LOCATION a
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/animal/PolarBear;)Lnet/minecraft/resources/ResourceLocation; a
	scale (Lnet/minecraft/world/entity/LivingEntity;Lcom/mojang/blaze3d/vertex/PoseStack;F)V a
	scale (Lnet/minecraft/world/entity/animal/PolarBear;Lcom/mojang/blaze3d/vertex/PoseStack;F)V a
net/minecraft/client/renderer/entity/PufferfishRenderer fqq
	PUFFER_LOCATION a
	big l
	mid k
	puffStateO i
	small j
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/animal/Pufferfish;)Lnet/minecraft/resources/ResourceLocation; a
	render (Lnet/minecraft/world/entity/Entity;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	render (Lnet/minecraft/world/entity/LivingEntity;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	render (Lnet/minecraft/world/entity/Mob;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	render (Lnet/minecraft/world/entity/animal/Pufferfish;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	setupRotations (Lnet/minecraft/world/entity/LivingEntity;Lcom/mojang/blaze3d/vertex/PoseStack;FFF)V a
	setupRotations (Lnet/minecraft/world/entity/animal/Pufferfish;Lcom/mojang/blaze3d/vertex/PoseStack;FFF)V a
net/minecraft/client/renderer/entity/RabbitRenderer fqr
	RABBIT_BLACK_LOCATION j
	RABBIT_BROWN_LOCATION a
	RABBIT_EVIL_LOCATION o
	RABBIT_GOLD_LOCATION k
	RABBIT_SALT_LOCATION l
	RABBIT_TOAST_LOCATION n
	RABBIT_WHITE_LOCATION i
	RABBIT_WHITE_SPLOTCHED_LOCATION m
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/animal/Rabbit;)Lnet/minecraft/resources/ResourceLocation; a
net/minecraft/client/renderer/entity/RavagerRenderer fqs
	TEXTURE_LOCATION a
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/monster/Ravager;)Lnet/minecraft/resources/ResourceLocation; a
net/minecraft/client/renderer/entity/RenderLayerParent fqt
	getModel ()Lnet/minecraft/client/model/EntityModel; a
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
net/minecraft/client/renderer/entity/SalmonRenderer fqu
	SALMON_LOCATION a
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/animal/Salmon;)Lnet/minecraft/resources/ResourceLocation; a
	setupRotations (Lnet/minecraft/world/entity/LivingEntity;Lcom/mojang/blaze3d/vertex/PoseStack;FFF)V a
	setupRotations (Lnet/minecraft/world/entity/animal/Salmon;Lcom/mojang/blaze3d/vertex/PoseStack;FFF)V a
net/minecraft/client/renderer/entity/SheepRenderer fqv
	SHEEP_LOCATION a
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/animal/Sheep;)Lnet/minecraft/resources/ResourceLocation; a
net/minecraft/client/renderer/entity/ShulkerBulletRenderer fqw
	RENDER_TYPE f
	TEXTURE_LOCATION a
	model g
	getBlockLightLevel (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/core/BlockPos;)I a
	getBlockLightLevel (Lnet/minecraft/world/entity/projectile/ShulkerBullet;Lnet/minecraft/core/BlockPos;)I a
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/projectile/ShulkerBullet;)Lnet/minecraft/resources/ResourceLocation; a
	render (Lnet/minecraft/world/entity/Entity;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	render (Lnet/minecraft/world/entity/projectile/ShulkerBullet;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
net/minecraft/client/renderer/entity/ShulkerRenderer fqx
	DEFAULT_TEXTURE_LOCATION a
	TEXTURE_LOCATION i
	getRenderOffset (Lnet/minecraft/world/entity/Entity;F)Lnet/minecraft/world/phys/Vec3; a
	getRenderOffset (Lnet/minecraft/world/entity/monster/Shulker;F)Lnet/minecraft/world/phys/Vec3; a
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/monster/Shulker;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/item/DyeColor;)Lnet/minecraft/resources/ResourceLocation; a
	setupRotations (Lnet/minecraft/world/entity/LivingEntity;Lcom/mojang/blaze3d/vertex/PoseStack;FFF)V a
	setupRotations (Lnet/minecraft/world/entity/monster/Shulker;Lcom/mojang/blaze3d/vertex/PoseStack;FFF)V a
	shouldRender (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/client/renderer/culling/Frustum;DDD)Z a
	shouldRender (Lnet/minecraft/world/entity/Mob;Lnet/minecraft/client/renderer/culling/Frustum;DDD)Z a
	shouldRender (Lnet/minecraft/world/entity/monster/Shulker;Lnet/minecraft/client/renderer/culling/Frustum;DDD)Z a
net/minecraft/client/renderer/entity/SilverfishRenderer fqy
	SILVERFISH_LOCATION a
	getFlipDegrees (Lnet/minecraft/world/entity/LivingEntity;)F c
	getFlipDegrees (Lnet/minecraft/world/entity/monster/Silverfish;)F a
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/monster/Silverfish;)Lnet/minecraft/resources/ResourceLocation; b
net/minecraft/client/renderer/entity/SkeletonRenderer fqz
	SKELETON_LOCATION a
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/monster/AbstractSkeleton;)Lnet/minecraft/resources/ResourceLocation; a
	isShaking (Lnet/minecraft/world/entity/LivingEntity;)Z a
	isShaking (Lnet/minecraft/world/entity/monster/AbstractSkeleton;)Z b
net/minecraft/client/renderer/entity/SlimeRenderer fra
	SLIME_LOCATION a
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/monster/Slime;)Lnet/minecraft/resources/ResourceLocation; a
	render (Lnet/minecraft/world/entity/Entity;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	render (Lnet/minecraft/world/entity/LivingEntity;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	render (Lnet/minecraft/world/entity/Mob;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	render (Lnet/minecraft/world/entity/monster/Slime;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	scale (Lnet/minecraft/world/entity/LivingEntity;Lcom/mojang/blaze3d/vertex/PoseStack;F)V a
	scale (Lnet/minecraft/world/entity/monster/Slime;Lcom/mojang/blaze3d/vertex/PoseStack;F)V a
net/minecraft/client/renderer/entity/SnifferRenderer frb
	SNIFFER_LOCATION a
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/animal/sniffer/Sniffer;)Lnet/minecraft/resources/ResourceLocation; a
net/minecraft/client/renderer/entity/SnowGolemRenderer frc
	SNOW_GOLEM_LOCATION a
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/animal/SnowGolem;)Lnet/minecraft/resources/ResourceLocation; a
net/minecraft/client/renderer/entity/SpectralArrowRenderer frd
	SPECTRAL_ARROW_LOCATION a
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/projectile/SpectralArrow;)Lnet/minecraft/resources/ResourceLocation; a
net/minecraft/client/renderer/entity/SpiderRenderer fre
	SPIDER_LOCATION a
	getFlipDegrees (Lnet/minecraft/world/entity/LivingEntity;)F c
	getFlipDegrees (Lnet/minecraft/world/entity/monster/Spider;)F b
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/monster/Spider;)Lnet/minecraft/resources/ResourceLocation; a
net/minecraft/client/renderer/entity/SquidRenderer frf
	SQUID_LOCATION a
	getBob (Lnet/minecraft/world/entity/LivingEntity;F)F a
	getBob (Lnet/minecraft/world/entity/animal/Squid;F)F a
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/animal/Squid;)Lnet/minecraft/resources/ResourceLocation; a
	setupRotations (Lnet/minecraft/world/entity/LivingEntity;Lcom/mojang/blaze3d/vertex/PoseStack;FFF)V a
	setupRotations (Lnet/minecraft/world/entity/animal/Squid;Lcom/mojang/blaze3d/vertex/PoseStack;FFF)V a
net/minecraft/client/renderer/entity/StrayRenderer frg
	STRAY_SKELETON_LOCATION a
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/monster/AbstractSkeleton;)Lnet/minecraft/resources/ResourceLocation; a
net/minecraft/client/renderer/entity/StriderRenderer frh
	COLD_LOCATION i
	STRIDER_LOCATION a
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/monster/Strider;)Lnet/minecraft/resources/ResourceLocation; a
	isShaking (Lnet/minecraft/world/entity/LivingEntity;)Z a
	isShaking (Lnet/minecraft/world/entity/monster/Strider;)Z b
	scale (Lnet/minecraft/world/entity/LivingEntity;Lcom/mojang/blaze3d/vertex/PoseStack;F)V a
	scale (Lnet/minecraft/world/entity/monster/Strider;Lcom/mojang/blaze3d/vertex/PoseStack;F)V a
net/minecraft/client/renderer/entity/TadpoleRenderer fri
	TADPOLE_TEXTURE a
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/animal/frog/Tadpole;)Lnet/minecraft/resources/ResourceLocation; a
net/minecraft/client/renderer/entity/ThrownItemRenderer frj
	MIN_CAMERA_DISTANCE_SQUARED a
	fullBright h
	itemRenderer f
	scale g
	getBlockLightLevel (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/core/BlockPos;)I a
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	render (Lnet/minecraft/world/entity/Entity;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
net/minecraft/client/renderer/entity/ThrownTridentRenderer frk
	TRIDENT_LOCATION a
	model f
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/projectile/ThrownTrident;)Lnet/minecraft/resources/ResourceLocation; a
	render (Lnet/minecraft/world/entity/Entity;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	render (Lnet/minecraft/world/entity/projectile/ThrownTrident;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
net/minecraft/client/renderer/entity/TippableArrowRenderer frl
	NORMAL_ARROW_LOCATION a
	TIPPED_ARROW_LOCATION f
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/projectile/Arrow;)Lnet/minecraft/resources/ResourceLocation; a
net/minecraft/client/renderer/entity/TntMinecartRenderer frm
	blockRenderer f
	renderMinecartContents (Lnet/minecraft/world/entity/vehicle/AbstractMinecart;FLnet/minecraft/world/level/block/state/BlockState;Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	renderMinecartContents (Lnet/minecraft/world/entity/vehicle/MinecartTNT;FLnet/minecraft/world/level/block/state/BlockState;Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	renderWhiteSolidBlock (Lnet/minecraft/client/renderer/block/BlockRenderDispatcher;Lnet/minecraft/world/level/block/state/BlockState;Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;IZ)V a
net/minecraft/client/renderer/entity/TntRenderer frn
	blockRenderer a
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/item/PrimedTnt;)Lnet/minecraft/resources/ResourceLocation; a
	render (Lnet/minecraft/world/entity/Entity;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	render (Lnet/minecraft/world/entity/item/PrimedTnt;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
net/minecraft/client/renderer/entity/TropicalFishRenderer fro
	MODEL_A_TEXTURE j
	MODEL_B_TEXTURE k
	modelA a
	modelB i
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/animal/TropicalFish;)Lnet/minecraft/resources/ResourceLocation; a
	render (Lnet/minecraft/world/entity/Entity;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	render (Lnet/minecraft/world/entity/LivingEntity;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	render (Lnet/minecraft/world/entity/Mob;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	render (Lnet/minecraft/world/entity/animal/TropicalFish;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	setupRotations (Lnet/minecraft/world/entity/LivingEntity;Lcom/mojang/blaze3d/vertex/PoseStack;FFF)V a
	setupRotations (Lnet/minecraft/world/entity/animal/TropicalFish;Lcom/mojang/blaze3d/vertex/PoseStack;FFF)V a
net/minecraft/client/renderer/entity/TurtleRenderer frp
	TURTLE_LOCATION a
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/animal/Turtle;)Lnet/minecraft/resources/ResourceLocation; a
	render (Lnet/minecraft/world/entity/Entity;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	render (Lnet/minecraft/world/entity/LivingEntity;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	render (Lnet/minecraft/world/entity/Mob;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	render (Lnet/minecraft/world/entity/animal/Turtle;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
net/minecraft/client/renderer/entity/UndeadHorseRenderer frq
	MAP a
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/animal/horse/AbstractHorse;)Lnet/minecraft/resources/ResourceLocation; a
net/minecraft/client/renderer/entity/VexRenderer frr
	VEX_CHARGING_LOCATION i
	VEX_LOCATION a
	getBlockLightLevel (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/core/BlockPos;)I a
	getBlockLightLevel (Lnet/minecraft/world/entity/monster/Vex;Lnet/minecraft/core/BlockPos;)I a
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/monster/Vex;)Lnet/minecraft/resources/ResourceLocation; a
net/minecraft/client/renderer/entity/VillagerRenderer frs
	VILLAGER_BASE_SKIN a
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/npc/Villager;)Lnet/minecraft/resources/ResourceLocation; a
	scale (Lnet/minecraft/world/entity/LivingEntity;Lcom/mojang/blaze3d/vertex/PoseStack;F)V a
	scale (Lnet/minecraft/world/entity/npc/Villager;Lcom/mojang/blaze3d/vertex/PoseStack;F)V a
net/minecraft/client/renderer/entity/VindicatorRenderer frt
	VINDICATOR a
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/monster/Vindicator;)Lnet/minecraft/resources/ResourceLocation; a
net/minecraft/client/renderer/entity/WanderingTraderRenderer fru
	VILLAGER_BASE_SKIN a
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/npc/WanderingTrader;)Lnet/minecraft/resources/ResourceLocation; a
	scale (Lnet/minecraft/world/entity/LivingEntity;Lcom/mojang/blaze3d/vertex/PoseStack;F)V a
	scale (Lnet/minecraft/world/entity/npc/WanderingTrader;Lcom/mojang/blaze3d/vertex/PoseStack;F)V a
net/minecraft/client/renderer/entity/WardenRenderer frv
	BIOLUMINESCENT_LAYER_TEXTURE i
	HEART_TEXTURE j
	PULSATING_SPOTS_TEXTURE_1 k
	PULSATING_SPOTS_TEXTURE_2 l
	TEXTURE a
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/monster/warden/Warden;)Lnet/minecraft/resources/ResourceLocation; a
net/minecraft/client/renderer/entity/WitchRenderer frw
	WITCH_LOCATION a
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/monster/Witch;)Lnet/minecraft/resources/ResourceLocation; a
	render (Lnet/minecraft/world/entity/Entity;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	render (Lnet/minecraft/world/entity/LivingEntity;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	render (Lnet/minecraft/world/entity/Mob;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	render (Lnet/minecraft/world/entity/monster/Witch;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	scale (Lnet/minecraft/world/entity/LivingEntity;Lcom/mojang/blaze3d/vertex/PoseStack;F)V a
	scale (Lnet/minecraft/world/entity/monster/Witch;Lcom/mojang/blaze3d/vertex/PoseStack;F)V a
net/minecraft/client/renderer/entity/WitherBossRenderer frx
	WITHER_INVULNERABLE_LOCATION a
	WITHER_LOCATION i
	getBlockLightLevel (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/core/BlockPos;)I a
	getBlockLightLevel (Lnet/minecraft/world/entity/boss/wither/WitherBoss;Lnet/minecraft/core/BlockPos;)I a
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/boss/wither/WitherBoss;)Lnet/minecraft/resources/ResourceLocation; a
	scale (Lnet/minecraft/world/entity/LivingEntity;Lcom/mojang/blaze3d/vertex/PoseStack;F)V a
	scale (Lnet/minecraft/world/entity/boss/wither/WitherBoss;Lcom/mojang/blaze3d/vertex/PoseStack;F)V a
net/minecraft/client/renderer/entity/WitherSkeletonRenderer fry
	WITHER_SKELETON_LOCATION a
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/monster/AbstractSkeleton;)Lnet/minecraft/resources/ResourceLocation; a
	scale (Lnet/minecraft/world/entity/LivingEntity;Lcom/mojang/blaze3d/vertex/PoseStack;F)V a
	scale (Lnet/minecraft/world/entity/monster/AbstractSkeleton;Lcom/mojang/blaze3d/vertex/PoseStack;F)V a
net/minecraft/client/renderer/entity/WitherSkullRenderer frz
	WITHER_INVULNERABLE_LOCATION a
	WITHER_LOCATION f
	model g
	createSkullLayer ()Lnet/minecraft/client/model/geom/builders/LayerDefinition; a
	getBlockLightLevel (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/core/BlockPos;)I a
	getBlockLightLevel (Lnet/minecraft/world/entity/projectile/WitherSkull;Lnet/minecraft/core/BlockPos;)I a
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/projectile/WitherSkull;)Lnet/minecraft/resources/ResourceLocation; a
	render (Lnet/minecraft/world/entity/Entity;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	render (Lnet/minecraft/world/entity/projectile/WitherSkull;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
net/minecraft/client/renderer/entity/WolfRenderer fsa
	WOLF_ANGRY_LOCATION j
	WOLF_LOCATION a
	WOLF_TAME_LOCATION i
	getBob (Lnet/minecraft/world/entity/LivingEntity;F)F a
	getBob (Lnet/minecraft/world/entity/animal/Wolf;F)F a
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/animal/Wolf;)Lnet/minecraft/resources/ResourceLocation; a
	render (Lnet/minecraft/world/entity/Entity;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	render (Lnet/minecraft/world/entity/LivingEntity;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	render (Lnet/minecraft/world/entity/Mob;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	render (Lnet/minecraft/world/entity/animal/Wolf;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
net/minecraft/client/renderer/entity/ZoglinRenderer fsb
	ZOGLIN_LOCATION a
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/monster/Zoglin;)Lnet/minecraft/resources/ResourceLocation; a
net/minecraft/client/renderer/entity/ZombieRenderer fsc
net/minecraft/client/renderer/entity/ZombieVillagerRenderer fsd
	ZOMBIE_VILLAGER_LOCATION a
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/monster/ZombieVillager;)Lnet/minecraft/resources/ResourceLocation; a
	isShaking (Lnet/minecraft/world/entity/LivingEntity;)Z a
	isShaking (Lnet/minecraft/world/entity/monster/ZombieVillager;)Z b
net/minecraft/client/renderer/entity/layers/ArrowLayer fse
	dispatcher a
	numStuck (Lnet/minecraft/world/entity/LivingEntity;)I a
	renderStuckItem (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;ILnet/minecraft/world/entity/Entity;FFFF)V a
net/minecraft/client/renderer/entity/layers/BeeStingerLayer fsf
	BEE_STINGER_LOCATION a
	numStuck (Lnet/minecraft/world/entity/LivingEntity;)I a
	renderStuckItem (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;ILnet/minecraft/world/entity/Entity;FFFF)V a
	vertex (Lcom/mojang/blaze3d/vertex/VertexConsumer;Lorg/joml/Matrix4f;Lorg/joml/Matrix3f;FIFFI)V a
net/minecraft/client/renderer/entity/layers/CapeLayer fsg
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;ILnet/minecraft/client/player/AbstractClientPlayer;FFFFFF)V a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;ILnet/minecraft/world/entity/Entity;FFFFFF)V a
net/minecraft/client/renderer/entity/layers/CarriedBlockLayer fsh
	blockRenderer a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;ILnet/minecraft/world/entity/Entity;FFFFFF)V a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;ILnet/minecraft/world/entity/monster/EnderMan;FFFFFF)V a
net/minecraft/client/renderer/entity/layers/CatCollarLayer fsi
	CAT_COLLAR_LOCATION a
	catModel b
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;ILnet/minecraft/world/entity/Entity;FFFFFF)V a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;ILnet/minecraft/world/entity/animal/Cat;FFFFFF)V a
net/minecraft/client/renderer/entity/layers/CreeperPowerLayer fsj
	POWER_LOCATION a
	model b
	getTextureLocation ()Lnet/minecraft/resources/ResourceLocation; a
	model ()Lnet/minecraft/client/model/EntityModel; b
	xOffset (F)F a
net/minecraft/client/renderer/entity/layers/CrossedArmsItemLayer fsk
	itemInHandRenderer a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;ILnet/minecraft/world/entity/Entity;FFFFFF)V a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;ILnet/minecraft/world/entity/LivingEntity;FFFFFF)V a
net/minecraft/client/renderer/entity/layers/CustomHeadLayer fsl
	itemInHandRenderer e
	scaleX a
	scaleY b
	scaleZ c
	skullModels d
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;ILnet/minecraft/world/entity/Entity;FFFFFF)V a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;ILnet/minecraft/world/entity/LivingEntity;FFFFFF)V a
	translateToHead (Lcom/mojang/blaze3d/vertex/PoseStack;Z)V a
net/minecraft/client/renderer/entity/layers/Deadmau5EarsLayer fsm
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;ILnet/minecraft/client/player/AbstractClientPlayer;FFFFFF)V a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;ILnet/minecraft/world/entity/Entity;FFFFFF)V a
net/minecraft/client/renderer/entity/layers/DolphinCarryingItemLayer fsn
	itemInHandRenderer a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;ILnet/minecraft/world/entity/Entity;FFFFFF)V a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;ILnet/minecraft/world/entity/animal/Dolphin;FFFFFF)V a
net/minecraft/client/renderer/entity/layers/DrownedOuterLayer fso
	DROWNED_OUTER_LAYER_LOCATION a
	model b
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;ILnet/minecraft/world/entity/Entity;FFFFFF)V a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;ILnet/minecraft/world/entity/monster/Drowned;FFFFFF)V a
net/minecraft/client/renderer/entity/layers/ElytraLayer fsp
	WINGS_LOCATION a
	elytraModel b
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;ILnet/minecraft/world/entity/Entity;FFFFFF)V a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;ILnet/minecraft/world/entity/LivingEntity;FFFFFF)V a
net/minecraft/client/renderer/entity/layers/EnderEyesLayer fsq
	ENDERMAN_EYES a
	renderType ()Lnet/minecraft/client/renderer/RenderType; a
net/minecraft/client/renderer/entity/layers/EnergySwirlLayer fsr
	getTextureLocation ()Lnet/minecraft/resources/ResourceLocation; a
	model ()Lnet/minecraft/client/model/EntityModel; b
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;ILnet/minecraft/world/entity/Entity;FFFFFF)V a
	xOffset (F)F a
net/minecraft/client/renderer/entity/layers/EyesLayer fss
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;ILnet/minecraft/world/entity/Entity;FFFFFF)V a
	renderType ()Lnet/minecraft/client/renderer/RenderType; a
net/minecraft/client/renderer/entity/layers/FoxHeldItemLayer fst
	itemInHandRenderer a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;ILnet/minecraft/world/entity/Entity;FFFFFF)V a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;ILnet/minecraft/world/entity/animal/Fox;FFFFFF)V a
net/minecraft/client/renderer/entity/layers/HorseArmorLayer fsu
	model a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;ILnet/minecraft/world/entity/Entity;FFFFFF)V a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;ILnet/minecraft/world/entity/animal/horse/Horse;FFFFFF)V a
net/minecraft/client/renderer/entity/layers/HorseMarkingLayer fsv
	LOCATION_BY_MARKINGS a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;ILnet/minecraft/world/entity/Entity;FFFFFF)V a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;ILnet/minecraft/world/entity/animal/horse/Horse;FFFFFF)V a
net/minecraft/client/renderer/entity/layers/HumanoidArmorLayer fsw
	ARMOR_LOCATION_CACHE a
	armorTrimAtlas d
	innerModel b
	outerModel c
	getArmorLocation (Lnet/minecraft/world/item/ArmorItem;ZLjava/lang/String;)Lnet/minecraft/resources/ResourceLocation; a
	getArmorModel (Lnet/minecraft/world/entity/EquipmentSlot;)Lnet/minecraft/client/model/HumanoidModel; a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;ILnet/minecraft/world/entity/Entity;FFFFFF)V a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;ILnet/minecraft/world/entity/LivingEntity;FFFFFF)V a
	renderArmorPiece (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/entity/EquipmentSlot;ILnet/minecraft/client/model/HumanoidModel;)V a
	renderGlint (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;ILnet/minecraft/client/model/HumanoidModel;)V a
	renderModel (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;ILnet/minecraft/world/item/ArmorItem;Lnet/minecraft/client/model/HumanoidModel;ZFFFLjava/lang/String;)V a
	renderTrim (Lnet/minecraft/world/item/ArmorMaterial;Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;ILnet/minecraft/world/item/armortrim/ArmorTrim;Lnet/minecraft/client/model/HumanoidModel;Z)V a
	setPartVisibility (Lnet/minecraft/client/model/HumanoidModel;Lnet/minecraft/world/entity/EquipmentSlot;)V a
	usesInnerModel (Lnet/minecraft/world/entity/EquipmentSlot;)Z b
net/minecraft/client/renderer/entity/layers/IronGolemCrackinessLayer fsx
	resourceLocations a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;ILnet/minecraft/world/entity/Entity;FFFFFF)V a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;ILnet/minecraft/world/entity/animal/IronGolem;FFFFFF)V a
net/minecraft/client/renderer/entity/layers/IronGolemFlowerLayer fsy
	blockRenderer a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;ILnet/minecraft/world/entity/Entity;FFFFFF)V a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;ILnet/minecraft/world/entity/animal/IronGolem;FFFFFF)V a
net/minecraft/client/renderer/entity/layers/ItemInHandLayer fsz
	itemInHandRenderer a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;ILnet/minecraft/world/entity/Entity;FFFFFF)V a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;ILnet/minecraft/world/entity/LivingEntity;FFFFFF)V a
	renderArmWithItem (Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/item/ItemDisplayContext;Lnet/minecraft/world/entity/HumanoidArm;Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
net/minecraft/client/renderer/entity/layers/LlamaDecorLayer fta
	TEXTURE_LOCATION a
	TRADER_LLAMA b
	model c
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;ILnet/minecraft/world/entity/Entity;FFFFFF)V a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;ILnet/minecraft/world/entity/animal/horse/Llama;FFFFFF)V a
net/minecraft/client/renderer/entity/layers/MushroomCowMushroomLayer ftb
	blockRenderer a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;ILnet/minecraft/world/entity/Entity;FFFFFF)V a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;ILnet/minecraft/world/entity/animal/MushroomCow;FFFFFF)V a
	renderMushroomBlock (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;IZLnet/minecraft/world/level/block/state/BlockState;ILnet/minecraft/client/resources/model/BakedModel;)V a
net/minecraft/client/renderer/entity/layers/PandaHoldsItemLayer ftc
	itemInHandRenderer a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;ILnet/minecraft/world/entity/Entity;FFFFFF)V a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;ILnet/minecraft/world/entity/animal/Panda;FFFFFF)V a
net/minecraft/client/renderer/entity/layers/ParrotOnShoulderLayer ftd
	model a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;ILnet/minecraft/world/entity/Entity;FFFFFF)V a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;ILnet/minecraft/world/entity/player/Player;FFFFFF)V a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;ILnet/minecraft/world/entity/player/Player;FFFFZ)V a
net/minecraft/client/renderer/entity/layers/PhantomEyesLayer fte
	PHANTOM_EYES a
	renderType ()Lnet/minecraft/client/renderer/RenderType; a
net/minecraft/client/renderer/entity/layers/PlayerItemInHandLayer ftf
	X_ROT_MAX c
	X_ROT_MIN b
	itemInHandRenderer a
	renderArmWithItem (Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/item/ItemDisplayContext;Lnet/minecraft/world/entity/HumanoidArm;Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	renderArmWithSpyglass (Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/entity/HumanoidArm;Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
net/minecraft/client/renderer/entity/layers/RenderLayer ftg
	renderer a
	coloredCutoutModelCopyLayerRender (Lnet/minecraft/client/model/EntityModel;Lnet/minecraft/client/model/EntityModel;Lnet/minecraft/resources/ResourceLocation;Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;ILnet/minecraft/world/entity/LivingEntity;FFFFFFFFF)V a
	getParentModel ()Lnet/minecraft/client/model/EntityModel; c
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;ILnet/minecraft/world/entity/Entity;FFFFFF)V a
	renderColoredCutoutModel (Lnet/minecraft/client/model/EntityModel;Lnet/minecraft/resources/ResourceLocation;Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;ILnet/minecraft/world/entity/LivingEntity;FFF)V a
net/minecraft/client/renderer/entity/layers/SaddleLayer fth
	model b
	textureLocation a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;ILnet/minecraft/world/entity/Entity;FFFFFF)V a
net/minecraft/client/renderer/entity/layers/SheepFurLayer fti
	SHEEP_FUR_LOCATION a
	model b
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;ILnet/minecraft/world/entity/Entity;FFFFFF)V a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;ILnet/minecraft/world/entity/animal/Sheep;FFFFFF)V a
net/minecraft/client/renderer/entity/layers/ShulkerHeadLayer ftj
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;ILnet/minecraft/world/entity/Entity;FFFFFF)V a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;ILnet/minecraft/world/entity/monster/Shulker;FFFFFF)V a
net/minecraft/client/renderer/entity/layers/SlimeOuterLayer ftk
	model a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;ILnet/minecraft/world/entity/Entity;FFFFFF)V a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;ILnet/minecraft/world/entity/LivingEntity;FFFFFF)V a
net/minecraft/client/renderer/entity/layers/SnowGolemHeadLayer ftl
	blockRenderer a
	itemRenderer b
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;ILnet/minecraft/world/entity/Entity;FFFFFF)V a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;ILnet/minecraft/world/entity/animal/SnowGolem;FFFFFF)V a
net/minecraft/client/renderer/entity/layers/SpiderEyesLayer ftm
	SPIDER_EYES a
	renderType ()Lnet/minecraft/client/renderer/RenderType; a
net/minecraft/client/renderer/entity/layers/SpinAttackEffectLayer ftn
	BOX b
	TEXTURE a
	box c
	createLayer ()Lnet/minecraft/client/model/geom/builders/LayerDefinition; a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;ILnet/minecraft/world/entity/Entity;FFFFFF)V a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;ILnet/minecraft/world/entity/LivingEntity;FFFFFF)V a
net/minecraft/client/renderer/entity/layers/StrayClothingLayer fto
	STRAY_CLOTHES_LOCATION a
	layerModel b
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;ILnet/minecraft/world/entity/Entity;FFFFFF)V a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;ILnet/minecraft/world/entity/Mob;FFFFFF)V a
net/minecraft/client/renderer/entity/layers/StuckInBodyLayer ftp
	numStuck (Lnet/minecraft/world/entity/LivingEntity;)I a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;ILnet/minecraft/world/entity/Entity;FFFFFF)V a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;ILnet/minecraft/world/entity/LivingEntity;FFFFFF)V a
	renderStuckItem (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;ILnet/minecraft/world/entity/Entity;FFFF)V a
net/minecraft/client/renderer/entity/layers/TropicalFishPatternLayer ftq
	BETTY_TEXTURE k
	BLOCKFISH_TEXTURE j
	BRINELY_TEXTURE e
	CLAYFISH_TEXTURE l
	DASHER_TEXTURE d
	FLOPPER_TEXTURE g
	GLITTER_TEXTURE i
	KOB_TEXTURE a
	SNOOPER_TEXTURE c
	SPOTTY_TEXTURE f
	STRIPEY_TEXTURE h
	SUNSTREAK_TEXTURE b
	modelA m
	modelB n
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;ILnet/minecraft/world/entity/Entity;FFFFFF)V a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;ILnet/minecraft/world/entity/animal/TropicalFish;FFFFFF)V a
net/minecraft/client/renderer/entity/layers/VillagerProfessionLayer ftr
	LEVEL_LOCATIONS a
	path e
	professionHatCache c
	resourceManager d
	typeHatCache b
	getHatData (Lit/unimi/dsi/fastutil/objects/Object2ObjectMap;Ljava/lang/String;Lnet/minecraft/core/DefaultedRegistry;Ljava/lang/Object;)Lnet/minecraft/client/resources/metadata/animation/VillagerMetaDataSection$Hat; a
	getResourceLocation (Ljava/lang/String;Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/resources/ResourceLocation; a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;ILnet/minecraft/world/entity/Entity;FFFFFF)V a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;ILnet/minecraft/world/entity/LivingEntity;FFFFFF)V a
net/minecraft/client/renderer/entity/layers/WardenEmissiveLayer fts
	alphaFunction b
	drawSelector c
	texture a
	onlyDrawSelectedParts ()V a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;ILnet/minecraft/world/entity/Entity;FFFFFF)V a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;ILnet/minecraft/world/entity/monster/warden/Warden;FFFFFF)V a
	resetDrawForAllParts ()V b
net/minecraft/client/renderer/entity/layers/WardenEmissiveLayer$AlphaFunction fts$a
net/minecraft/client/renderer/entity/layers/WardenEmissiveLayer$DrawSelector fts$b
net/minecraft/client/renderer/entity/layers/WitchItemLayer ftt
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;ILnet/minecraft/world/entity/Entity;FFFFFF)V a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;ILnet/minecraft/world/entity/LivingEntity;FFFFFF)V a
net/minecraft/client/renderer/entity/layers/WitherArmorLayer ftu
	WITHER_ARMOR_LOCATION a
	model b
	getTextureLocation ()Lnet/minecraft/resources/ResourceLocation; a
	model ()Lnet/minecraft/client/model/EntityModel; b
	xOffset (F)F a
net/minecraft/client/renderer/entity/layers/WolfCollarLayer ftv
	WOLF_COLLAR_LOCATION a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;ILnet/minecraft/world/entity/Entity;FFFFFF)V a
	render (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;ILnet/minecraft/world/entity/animal/Wolf;FFFFFF)V a
net/minecraft/client/renderer/entity/player/PlayerRenderer fty
	getArmPose (Lnet/minecraft/client/player/AbstractClientPlayer;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/client/model/HumanoidModel$ArmPose; a
	getRenderOffset (Lnet/minecraft/client/player/AbstractClientPlayer;F)Lnet/minecraft/world/phys/Vec3; a
	getRenderOffset (Lnet/minecraft/world/entity/Entity;F)Lnet/minecraft/world/phys/Vec3; a
	getTextureLocation (Lnet/minecraft/client/player/AbstractClientPlayer;)Lnet/minecraft/resources/ResourceLocation; a
	getTextureLocation (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/resources/ResourceLocation; a
	render (Lnet/minecraft/client/player/AbstractClientPlayer;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	render (Lnet/minecraft/world/entity/Entity;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	render (Lnet/minecraft/world/entity/LivingEntity;FFLcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	renderHand (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;ILnet/minecraft/client/player/AbstractClientPlayer;Lnet/minecraft/client/model/geom/ModelPart;Lnet/minecraft/client/model/geom/ModelPart;)V a
	renderLeftHand (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;ILnet/minecraft/client/player/AbstractClientPlayer;)V b
	renderNameTag (Lnet/minecraft/client/player/AbstractClientPlayer;Lnet/minecraft/network/chat/Component;Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	renderNameTag (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/network/chat/Component;Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;I)V a
	renderRightHand (Lcom/mojang/blaze3d/vertex/PoseStack;Lnet/minecraft/client/renderer/MultiBufferSource;ILnet/minecraft/client/player/AbstractClientPlayer;)V a
	scale (Lnet/minecraft/client/player/AbstractClientPlayer;Lcom/mojang/blaze3d/vertex/PoseStack;F)V a
	scale (Lnet/minecraft/world/entity/LivingEntity;Lcom/mojang/blaze3d/vertex/PoseStack;F)V a
	setModelProperties (Lnet/minecraft/client/player/AbstractClientPlayer;)V b
	setupRotations (Lnet/minecraft/client/player/AbstractClientPlayer;Lcom/mojang/blaze3d/vertex/PoseStack;FFF)V a
	setupRotations (Lnet/minecraft/world/entity/LivingEntity;Lcom/mojang/blaze3d/vertex/PoseStack;FFF)V a
net/minecraft/client/renderer/item/ClampedItemPropertyFunction fua
net/minecraft/client/renderer/item/CompassItemPropertyFunction fub
	DEFAULT_ROTATION a
	compassTarget b
	wobble c
	wobbleRandom d
	getAngleFromEntityToPos (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/core/BlockPos;)D a
	getCompassRotation (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/client/multiplayer/ClientLevel;ILnet/minecraft/world/entity/Entity;)F a
	getRandomlySpinningRotation (IJ)F a
	getRotationTowardsCompassTarget (Lnet/minecraft/world/entity/Entity;JLnet/minecraft/core/BlockPos;)F a
	getWrappedVisualRotationY (Lnet/minecraft/world/entity/Entity;)D a
	hash (I)I a
	isValidCompassTargetPos (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/core/GlobalPos;)Z a
	tryFetchLevelIfMissing (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/client/multiplayer/ClientLevel;)Lnet/minecraft/client/multiplayer/ClientLevel; a
net/minecraft/client/renderer/item/CompassItemPropertyFunction$CompassTarget fub$a
net/minecraft/client/renderer/item/CompassItemPropertyFunction$CompassWobble fub$b
	deltaRotation b
	lastUpdateTick c
	rotation a
	shouldUpdate (J)Z a
	update (JD)V a
net/minecraft/client/renderer/item/ItemProperties fuc
	DAMAGE d
	DAMAGED c
	GENERIC_PROPERTIES a
	PROPERTIES g
	PROPERTY_DAMAGE f
	PROPERTY_DAMAGED e
	TAG_CUSTOM_MODEL_DATA b
	getProperty (Lnet/minecraft/world/item/Item;Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/client/renderer/item/ItemPropertyFunction; a
	register (Lnet/minecraft/world/item/Item;Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/client/renderer/item/ClampedItemPropertyFunction;)V a
	registerCustomModelData (Lnet/minecraft/client/renderer/item/ItemPropertyFunction;)V a
	registerGeneric (Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/client/renderer/item/ClampedItemPropertyFunction;)Lnet/minecraft/client/renderer/item/ClampedItemPropertyFunction; a
net/minecraft/client/renderer/item/ItemPropertyFunction fud
net/minecraft/client/renderer/texture/AbstractTexture fug
	NOT_ASSIGNED a
	blur c
	id b
	mipmap d
	bind ()V c
	getId ()I a
	load (Lnet/minecraft/server/packs/resources/ResourceManager;)V a
	releaseId ()V b
	reset (Lnet/minecraft/client/renderer/texture/TextureManager;Lnet/minecraft/server/packs/resources/ResourceManager;Lnet/minecraft/resources/ResourceLocation;Ljava/util/concurrent/Executor;)V a
	setFilter (ZZ)V a
net/minecraft/client/renderer/texture/Dumpable fuh
	dumpContents (Lnet/minecraft/resources/ResourceLocation;Ljava/nio/file/Path;)V a
net/minecraft/client/renderer/texture/DynamicTexture fui
	LOGGER e
	pixels f
	dumpContents (Lnet/minecraft/resources/ResourceLocation;Ljava/nio/file/Path;)V a
	getPixels ()Lcom/mojang/blaze3d/platform/NativeImage; e
	load (Lnet/minecraft/server/packs/resources/ResourceManager;)V a
	setPixels (Lcom/mojang/blaze3d/platform/NativeImage;)V a
	upload ()V d
net/minecraft/client/renderer/texture/HttpTexture fuj
	LEGACY_SKIN_HEIGHT i
	LOGGER f
	SKIN_HEIGHT h
	SKIN_WIDTH g
	file j
	future n
	onDownloaded m
	processLegacySkin l
	uploaded o
	urlString k
	doNotchTransparencyHack (Lcom/mojang/blaze3d/platform/NativeImage;IIII)V a
	load (Ljava/io/InputStream;)Lcom/mojang/blaze3d/platform/NativeImage; a
	load (Lnet/minecraft/server/packs/resources/ResourceManager;)V a
	loadCallback (Lcom/mojang/blaze3d/platform/NativeImage;)V a
	processLegacySkin (Lcom/mojang/blaze3d/platform/NativeImage;)Lcom/mojang/blaze3d/platform/NativeImage; c
	setNoAlpha (Lcom/mojang/blaze3d/platform/NativeImage;IIII)V b
	upload (Lcom/mojang/blaze3d/platform/NativeImage;)V b
net/minecraft/client/renderer/texture/MipmapGenerator fuk
	ALPHA_CUTOUT_CUTOFF a
	POW22 b
	alphaBlend (IIIIZ)I a
	gammaBlend (IIIII)I a
	generateMipLevels ([Lcom/mojang/blaze3d/platform/NativeImage;I)[Lcom/mojang/blaze3d/platform/NativeImage; a
	getPow22 (I)F a
	hasTransparentPixel (Lcom/mojang/blaze3d/platform/NativeImage;)Z a
net/minecraft/client/renderer/texture/MissingTextureAtlasSprite ful
	EMPTY_ANIMATION_META e
	MISSING_IMAGE_HEIGHT b
	MISSING_IMAGE_WIDTH a
	MISSING_TEXTURE_LOCATION d
	MISSING_TEXTURE_NAME c
	missingTexture f
	create ()Lnet/minecraft/client/renderer/texture/SpriteContents; a
	generateMissingImage (II)Lcom/mojang/blaze3d/platform/NativeImage; a
	getLocation ()Lnet/minecraft/resources/ResourceLocation; b
	getTexture ()Lnet/minecraft/client/renderer/texture/DynamicTexture; c
net/minecraft/client/renderer/texture/OverlayTexture fum
	NO_OVERLAY d
	NO_WHITE_U a
	RED_OVERLAY_V b
	SIZE e
	WHITE_OVERLAY_V c
	texture f
	pack (FZ)I a
	pack (II)I a
	setupOverlayColor ()V a
	teardownOverlayColor ()V b
	u (F)I a
	v (Z)I a
net/minecraft/client/renderer/texture/PreloadedTexture fun
	future f
	executor (Ljava/util/concurrent/Executor;)Ljava/util/concurrent/Executor; a
	getFuture ()Ljava/util/concurrent/CompletableFuture; d
	getTextureImage (Lnet/minecraft/server/packs/resources/ResourceManager;)Lnet/minecraft/client/renderer/texture/SimpleTexture$TextureImage; b
	reset (Lnet/minecraft/client/renderer/texture/TextureManager;Lnet/minecraft/server/packs/resources/ResourceManager;Lnet/minecraft/resources/ResourceLocation;Ljava/util/concurrent/Executor;)V a
net/minecraft/client/renderer/texture/SimpleTexture fuo
	LOGGER f
	location e
	doLoad (Lcom/mojang/blaze3d/platform/NativeImage;ZZ)V a
	getTextureImage (Lnet/minecraft/server/packs/resources/ResourceManager;)Lnet/minecraft/client/renderer/texture/SimpleTexture$TextureImage; b
	load (Lnet/minecraft/server/packs/resources/ResourceManager;)V a
net/minecraft/client/renderer/texture/SimpleTexture$TextureImage fuo$a
	exception c
	image b
	metadata a
	getImage ()Lcom/mojang/blaze3d/platform/NativeImage; b
	getTextureMetadata ()Lnet/minecraft/client/resources/metadata/texture/TextureMetadataSection; a
	load (Lnet/minecraft/server/packs/resources/ResourceManager;Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/client/renderer/texture/SimpleTexture$TextureImage; a
	throwIfError ()V c
net/minecraft/client/renderer/texture/SpriteContents fup
	LOGGER a
	animatedTexture g
	byMipLevel f
	height d
	name b
	originalImage e
	width c
	createAnimatedTexture (Lnet/minecraft/client/resources/metadata/animation/FrameSize;IILnet/minecraft/client/resources/metadata/animation/AnimationMetadataSection;)Lnet/minecraft/client/renderer/texture/SpriteContents$AnimatedTexture; a
	createTicker ()Lnet/minecraft/client/renderer/texture/SpriteTicker; e
	getFrameCount ()I f
	getUniqueFrames ()Ljava/util/stream/IntStream; d
	height ()I b
	increaseMipLevel (I)V a
	isTransparent (III)Z a
	name ()Lnet/minecraft/resources/ResourceLocation; c
	upload (IIII[Lcom/mojang/blaze3d/platform/NativeImage;)V a
	uploadFirstFrame (II)V a
	width ()I a
net/minecraft/client/renderer/texture/SpriteContents$AnimatedTexture fup$a
	frameRowSize c
	frames b
	interpolateFrames d
	createTicker ()Lnet/minecraft/client/renderer/texture/SpriteTicker; a
	getFrameX (I)I a
	getFrameY (I)I b
	getUniqueFrames ()Ljava/util/stream/IntStream; b
	uploadFirstFrame (II)V a
	uploadFrame (III)V a
net/minecraft/client/renderer/texture/SpriteContents$FrameInfo fup$b
	index a
	time b
net/minecraft/client/renderer/texture/SpriteContents$InterpolationData fup$c
	activeFrame b
	getPixel (Lnet/minecraft/client/renderer/texture/SpriteContents$AnimatedTexture;IIII)I a
	mix (DII)I a
	uploadInterpolatedFrame (IILnet/minecraft/client/renderer/texture/SpriteContents$Ticker;)V a
net/minecraft/client/renderer/texture/SpriteContents$Ticker fup$d
	animationInfo d
	frame b
	interpolationData e
	subFrame c
	tickAndUpload (II)V a
net/minecraft/client/renderer/texture/SpriteLoader fuq
	LOGGER a
	location b
	maxSupportedTextureSize c
	minHeight e
	minWidth d
	create (Lnet/minecraft/client/renderer/texture/TextureAtlas;)Lnet/minecraft/client/renderer/texture/SpriteLoader; a
	getStitchedSprites (Lnet/minecraft/client/renderer/texture/Stitcher;II)Ljava/util/Map; a
	loadAndStitch (Lnet/minecraft/server/packs/resources/ResourceManager;Lnet/minecraft/resources/ResourceLocation;ILjava/util/concurrent/Executor;)Ljava/util/concurrent/CompletableFuture; a
	loadSprite (Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/server/packs/resources/Resource;)Lnet/minecraft/client/renderer/texture/SpriteContents; a
	runSpriteSuppliers (Ljava/util/List;Ljava/util/concurrent/Executor;)Ljava/util/concurrent/CompletableFuture; a
	stitch (Ljava/util/List;ILjava/util/concurrent/Executor;)Lnet/minecraft/client/renderer/texture/SpriteLoader$Preparations; a
net/minecraft/client/renderer/texture/SpriteLoader$Preparations fuq$a
	height b
	mipLevel c
	missing d
	readyForUpload f
	regions e
	width a
	height ()I c
	mipLevel ()I d
	missing ()Lnet/minecraft/client/renderer/texture/TextureAtlasSprite; e
	readyForUpload ()Ljava/util/concurrent/CompletableFuture; g
	regions ()Ljava/util/Map; f
	waitForUpload ()Ljava/util/concurrent/CompletableFuture; a
	width ()I b
net/minecraft/client/renderer/texture/SpriteTicker fur
	tickAndUpload (II)V a
net/minecraft/client/renderer/texture/Stitcher fus
	HOLDER_COMPARATOR a
	maxHeight h
	maxWidth g
	mipLevel b
	storage d
	storageX e
	storageY f
	texturesToBeStitched c
	addToStorage (Lnet/minecraft/client/renderer/texture/Stitcher$Holder;)Z a
	expand (Lnet/minecraft/client/renderer/texture/Stitcher$Holder;)Z b
	gatherSprites (Lnet/minecraft/client/renderer/texture/Stitcher$SpriteLoader;)V a
	getHeight ()I b
	getWidth ()I a
	registerSprite (Lnet/minecraft/client/renderer/texture/Stitcher$Entry;)V a
	smallestFittingMinTexel (II)I a
	stitch ()V c
net/minecraft/client/renderer/texture/Stitcher$Entry fus$a
	height ()I b
	name ()Lnet/minecraft/resources/ResourceLocation; c
	width ()I a
net/minecraft/client/renderer/texture/Stitcher$Holder fus$b
	entry a
	height c
	width b
	entry ()Lnet/minecraft/client/renderer/texture/Stitcher$Entry; a
	height ()I c
	width ()I b
net/minecraft/client/renderer/texture/Stitcher$Region fus$c
	height d
	holder f
	originX a
	originY b
	subSlots e
	width c
	add (Lnet/minecraft/client/renderer/texture/Stitcher$Holder;)Z a
	getX ()I a
	getY ()I b
	walk (Lnet/minecraft/client/renderer/texture/Stitcher$SpriteLoader;)V a
net/minecraft/client/renderer/texture/Stitcher$SpriteLoader fus$d
net/minecraft/client/renderer/texture/StitcherException fut
	allSprites a
	getAllSprites ()Ljava/util/Collection; a
net/minecraft/client/renderer/texture/TextureAtlas fuu
	LOCATION_BLOCKS e
	LOCATION_PARTICLES f
	LOGGER g
	animatedTextures i
	height n
	location k
	maxSupportedTextureSize l
	mipLevel o
	sprites h
	texturesByName j
	width m
	clearTextureData ()V f
	cycleAnimationFrames ()V d
	dumpContents (Lnet/minecraft/resources/ResourceLocation;Ljava/nio/file/Path;)V a
	dumpSpriteNames (Ljava/nio/file/Path;Ljava/lang/String;Ljava/util/Map;)V a
	getHeight ()I j
	getSprite (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/client/renderer/texture/TextureAtlasSprite; a
	getWidth ()I i
	load (Lnet/minecraft/server/packs/resources/ResourceManager;)V a
	location ()Lnet/minecraft/resources/ResourceLocation; g
	maxSupportedTextureSize ()I h
	tick ()V e
	updateFilter (Lnet/minecraft/client/renderer/texture/SpriteLoader$Preparations;)V b
	upload (Lnet/minecraft/client/renderer/texture/SpriteLoader$Preparations;)V a
net/minecraft/client/renderer/texture/TextureAtlasSprite fuv
	atlasLocation a
	contents b
	u0 e
	u1 f
	v0 g
	v1 h
	x c
	y d
	atlasLocation ()Lnet/minecraft/resources/ResourceLocation; i
	atlasSize ()F l
	contents ()Lnet/minecraft/client/renderer/texture/SpriteContents; e
	createTicker ()Lnet/minecraft/client/renderer/texture/TextureAtlasSprite$Ticker; f
	getU (D)F a
	getU0 ()F c
	getU1 ()F d
	getUOffset (F)F a
	getV (D)F b
	getV0 ()F g
	getV1 ()F h
	getVOffset (F)F b
	getX ()I a
	getY ()I b
	uploadFirstFrame ()V j
	uvShrinkRatio ()F k
	wrap (Lcom/mojang/blaze3d/vertex/VertexConsumer;)Lcom/mojang/blaze3d/vertex/VertexConsumer; a
net/minecraft/client/renderer/texture/TextureAtlasSprite$Ticker fuv$a
	tickAndUpload ()V a
net/minecraft/client/renderer/texture/TextureManager fuw
	INTENTIONAL_MISSING_TEXTURE a
	LOGGER b
	byPath c
	prefixRegister e
	resourceManager f
	tickableTextures d
	_bind (Lnet/minecraft/resources/ResourceLocation;)V d
	_dumpAllSheets (Ljava/nio/file/Path;)V b
	bindForSetup (Lnet/minecraft/resources/ResourceLocation;)V a
	dumpAllSheets (Ljava/nio/file/Path;)V a
	execute (Ljava/lang/Runnable;)V a
	getTexture (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/client/renderer/texture/AbstractTexture; b
	getTexture (Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/client/renderer/texture/AbstractTexture;)Lnet/minecraft/client/renderer/texture/AbstractTexture; b
	loadTexture (Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/client/renderer/texture/AbstractTexture;)Lnet/minecraft/client/renderer/texture/AbstractTexture; d
	preload (Lnet/minecraft/resources/ResourceLocation;Ljava/util/concurrent/Executor;)Ljava/util/concurrent/CompletableFuture; a
	register (Ljava/lang/String;Lnet/minecraft/client/renderer/texture/DynamicTexture;)Lnet/minecraft/resources/ResourceLocation; a
	register (Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/client/renderer/texture/AbstractTexture;)V a
	release (Lnet/minecraft/resources/ResourceLocation;)V c
	reload (Lnet/minecraft/server/packs/resources/PreparableReloadListener$PreparationBarrier;Lnet/minecraft/server/packs/resources/ResourceManager;Lnet/minecraft/util/profiling/ProfilerFiller;Lnet/minecraft/util/profiling/ProfilerFiller;Ljava/util/concurrent/Executor;Ljava/util/concurrent/Executor;)Ljava/util/concurrent/CompletableFuture; a
	safeClose (Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/client/renderer/texture/AbstractTexture;)V c
	tick ()V e
net/minecraft/client/renderer/texture/Tickable fux
	tick ()V e
net/minecraft/client/renderer/texture/atlas/SpriteResourceLoader fuy
	ATLAS_INFO_CONVERTER b
	LOGGER a
	sources c
	list (Lnet/minecraft/server/packs/resources/ResourceManager;)Ljava/util/List; a
	load (Lnet/minecraft/server/packs/resources/ResourceManager;Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/client/renderer/texture/atlas/SpriteResourceLoader; a
net/minecraft/client/renderer/texture/atlas/SpriteSource fuz
	TEXTURE_ID_CONVERTER a
	run (Lnet/minecraft/server/packs/resources/ResourceManager;Lnet/minecraft/client/renderer/texture/atlas/SpriteSource$Output;)V a
	type ()Lnet/minecraft/client/renderer/texture/atlas/SpriteSourceType; a
net/minecraft/client/renderer/texture/atlas/SpriteSource$Output fuz$a
	add (Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/client/renderer/texture/atlas/SpriteSource$SpriteSupplier;)V a
	add (Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/server/packs/resources/Resource;)V a
	removeAll (Ljava/util/function/Predicate;)V a
net/minecraft/client/renderer/texture/atlas/SpriteSource$SpriteSupplier fuz$b
	discard ()V a
net/minecraft/client/renderer/texture/atlas/SpriteSourceType fva
	codec a
	codec ()Lcom/mojang/serialization/Codec; a
net/minecraft/client/renderer/texture/atlas/SpriteSources fvb
	CODEC g
	DIRECTORY b
	FILE_CODEC h
	FILTER c
	PALETTED_PERMUTATIONS e
	SINGLE_FILE a
	TYPES i
	TYPE_CODEC f
	UNSTITCHER d
	register (Ljava/lang/String;Lcom/mojang/serialization/Codec;)Lnet/minecraft/client/renderer/texture/atlas/SpriteSourceType; a
net/minecraft/client/renderer/texture/atlas/sources/DirectoryLister fvd
	CODEC b
	idPrefix d
	sourcePath c
	run (Lnet/minecraft/server/packs/resources/ResourceManager;Lnet/minecraft/client/renderer/texture/atlas/SpriteSource$Output;)V a
	type ()Lnet/minecraft/client/renderer/texture/atlas/SpriteSourceType; a
net/minecraft/client/renderer/texture/atlas/sources/LazyLoadedImage fve
	id a
	image c
	referenceCount d
	resource b
	get ()Lcom/mojang/blaze3d/platform/NativeImage; a
	release ()V b
net/minecraft/client/renderer/texture/atlas/sources/PalettedPermutations fvf
	CODEC b
	LOGGER c
	paletteKey f
	permutations e
	textures d
	createPaletteMapping ([I[I)Ljava/util/function/IntUnaryOperator; a
	loadPaletteEntryFromImage (Lnet/minecraft/server/packs/resources/ResourceManager;Lnet/minecraft/resources/ResourceLocation;)[I a
	run (Lnet/minecraft/server/packs/resources/ResourceManager;Lnet/minecraft/client/renderer/texture/atlas/SpriteSource$Output;)V a
	type ()Lnet/minecraft/client/renderer/texture/atlas/SpriteSourceType; a
net/minecraft/client/renderer/texture/atlas/sources/PalettedPermutations$PalettedSpriteSupplier fvf$a
	baseImage a
	palette b
	permutationLocation c
	baseImage ()Lnet/minecraft/client/renderer/texture/atlas/sources/LazyLoadedImage; c
	discard ()V a
	get ()Lnet/minecraft/client/renderer/texture/SpriteContents; b
	palette ()Ljava/util/function/Supplier; d
	permutationLocation ()Lnet/minecraft/resources/ResourceLocation; e
net/minecraft/client/renderer/texture/atlas/sources/SingleFile fvg
	CODEC b
	LOGGER c
	resourceId d
	spriteId e
	run (Lnet/minecraft/server/packs/resources/ResourceManager;Lnet/minecraft/client/renderer/texture/atlas/SpriteSource$Output;)V a
	type ()Lnet/minecraft/client/renderer/texture/atlas/SpriteSourceType; a
net/minecraft/client/renderer/texture/atlas/sources/SourceFilter fvh
	CODEC b
	filter c
	run (Lnet/minecraft/server/packs/resources/ResourceManager;Lnet/minecraft/client/renderer/texture/atlas/SpriteSource$Output;)V a
	type ()Lnet/minecraft/client/renderer/texture/atlas/SpriteSourceType; a
net/minecraft/client/renderer/texture/atlas/sources/Unstitcher fvi
	CODEC b
	LOGGER c
	regions e
	resource d
	xDivisor f
	yDivisor g
	run (Lnet/minecraft/server/packs/resources/ResourceManager;Lnet/minecraft/client/renderer/texture/atlas/SpriteSource$Output;)V a
	type ()Lnet/minecraft/client/renderer/texture/atlas/SpriteSourceType; a
net/minecraft/client/renderer/texture/atlas/sources/Unstitcher$Region fvi$a
	CODEC a
	height f
	sprite b
	width e
	x c
	y d
	height ()D e
	sprite ()Lnet/minecraft/resources/ResourceLocation; a
	width ()D d
	x ()D b
	y ()D c
net/minecraft/client/renderer/texture/atlas/sources/Unstitcher$RegionInstance fvi$b
	image a
	region b
	xDivisor c
	yDivisor d
	discard ()V a
	get ()Lnet/minecraft/client/renderer/texture/SpriteContents; b
net/minecraft/client/resources/ClientPackSource fvl
	BUILT_IN_METADATA d
	HIGH_CONTRAST_PACK b
	PACKS_DIR g
	SPECIAL_PACK_NAMES f
	VANILLA_NAME e
	VERSION_METADATA_SECTION c
	externalAssetDir h
	createBuiltinPack (Ljava/lang/String;Lnet/minecraft/server/packs/repository/Pack$ResourcesSupplier;Lnet/minecraft/network/chat/Component;)Lnet/minecraft/server/packs/repository/Pack; a
	createVanillaPack (Lnet/minecraft/server/packs/PackResources;)Lnet/minecraft/server/packs/repository/Pack; a
	createVanillaPackSource (Ljava/nio/file/Path;)Lnet/minecraft/server/packs/VanillaPackResources; b
	findExplodedAssetPacks (Ljava/nio/file/Path;)Ljava/nio/file/Path; a
	getPackTitle (Ljava/lang/String;)Lnet/minecraft/network/chat/Component; a
	populatePackList (Ljava/util/function/BiConsumer;)V a
net/minecraft/client/resources/DefaultPlayerSkin fvm
	DEFAULT_SKINS a
	getDefaultSkin ()Lnet/minecraft/resources/ResourceLocation; a
	getDefaultSkin (Ljava/util/UUID;)Lnet/minecraft/resources/ResourceLocation; a
	getSkinModelName (Ljava/util/UUID;)Ljava/lang/String; b
	getSkinType (Ljava/util/UUID;)Lnet/minecraft/client/resources/DefaultPlayerSkin$SkinType; c
net/minecraft/client/resources/DefaultPlayerSkin$ModelType fvm$a
	$VALUES d
	SLIM a
	WIDE b
	id c
	$values ()[Lnet/minecraft/client/resources/DefaultPlayerSkin$ModelType; a
net/minecraft/client/resources/DefaultPlayerSkin$SkinType fvm$b
	model b
	texture a
	model ()Lnet/minecraft/client/resources/DefaultPlayerSkin$ModelType; b
	texture ()Lnet/minecraft/resources/ResourceLocation; a
net/minecraft/client/resources/DownloadedPackSource fvn
	APPLYING_PACK_TEXT g
	LOGGER a
	MAX_KEPT_PACKS d
	MAX_PACK_SIZE_BYTES c
	SERVER_ID e
	SERVER_NAME f
	SHA1 b
	currentDownload j
	downloadLock i
	serverPack k
	serverPackDir h
	checkHash (Ljava/lang/String;Ljava/io/File;)Z a
	clearOldDownloads ()V c
	clearServerPack ()Ljava/util/concurrent/CompletableFuture; a
	deleteQuietly (Ljava/io/File;)V a
	downloadAndSelectResourcePack (Ljava/net/URL;Ljava/lang/String;Z)Ljava/util/concurrent/CompletableFuture; a
	getDownloadHeaders ()Ljava/util/Map; b
	loadBundledResourcePack (Lnet/minecraft/world/level/storage/LevelStorageSource$LevelStorageAccess;)Ljava/util/concurrent/CompletableFuture; a
	loadPacks (Ljava/util/function/Consumer;)V a
	setServerPack (Ljava/io/File;Lnet/minecraft/server/packs/repository/PackSource;)Ljava/util/concurrent/CompletableFuture; a
net/minecraft/client/resources/FoliageColorReloadListener fvo
	LOCATION a
	apply (Ljava/lang/Object;Lnet/minecraft/server/packs/resources/ResourceManager;Lnet/minecraft/util/profiling/ProfilerFiller;)V a
	apply ([ILnet/minecraft/server/packs/resources/ResourceManager;Lnet/minecraft/util/profiling/ProfilerFiller;)V a
	prepare (Lnet/minecraft/server/packs/resources/ResourceManager;Lnet/minecraft/util/profiling/ProfilerFiller;)Ljava/lang/Object; b
	prepare (Lnet/minecraft/server/packs/resources/ResourceManager;Lnet/minecraft/util/profiling/ProfilerFiller;)[I a
net/minecraft/client/resources/GrassColorReloadListener fvp
	LOCATION a
	apply (Ljava/lang/Object;Lnet/minecraft/server/packs/resources/ResourceManager;Lnet/minecraft/util/profiling/ProfilerFiller;)V a
	apply ([ILnet/minecraft/server/packs/resources/ResourceManager;Lnet/minecraft/util/profiling/ProfilerFiller;)V a
	prepare (Lnet/minecraft/server/packs/resources/ResourceManager;Lnet/minecraft/util/profiling/ProfilerFiller;)Ljava/lang/Object; b
	prepare (Lnet/minecraft/server/packs/resources/ResourceManager;Lnet/minecraft/util/profiling/ProfilerFiller;)[I a
net/minecraft/client/resources/IndexedAssetSource fvq
	LOGGER b
	PATH_SPLITTER a
	createIndexFs (Ljava/nio/file/Path;Ljava/lang/String;)Ljava/nio/file/Path; a
net/minecraft/client/resources/LegacyStuffWrapper fvr
	getPixels (Lnet/minecraft/server/packs/resources/ResourceManager;Lnet/minecraft/resources/ResourceLocation;)[I a
net/minecraft/client/resources/MobEffectTextureManager fvs
	get (Lnet/minecraft/world/effect/MobEffect;)Lnet/minecraft/client/renderer/texture/TextureAtlasSprite; a
net/minecraft/client/resources/PaintingTextureManager fvt
	BACK_SPRITE_LOCATION a
	get (Lnet/minecraft/world/entity/decoration/PaintingVariant;)Lnet/minecraft/client/renderer/texture/TextureAtlasSprite; a
	getBackSprite ()Lnet/minecraft/client/renderer/texture/TextureAtlasSprite; a
net/minecraft/client/resources/SkinManager fvu
	PROPERTY_TEXTURES a
	insecureSkinCache e
	sessionService d
	skinsDirectory c
	textureManager b
	getInsecureSkinInformation (Lcom/mojang/authlib/GameProfile;)Ljava/util/Map; a
	getInsecureSkinLocation (Lcom/mojang/authlib/GameProfile;)Lnet/minecraft/resources/ResourceLocation; b
	getTextureLocation (Lcom/mojang/authlib/minecraft/MinecraftProfileTexture$Type;Ljava/lang/String;)Lnet/minecraft/resources/ResourceLocation; a
	registerSkins (Lcom/mojang/authlib/GameProfile;Lnet/minecraft/client/resources/SkinManager$SkinTextureCallback;Z)V a
	registerTexture (Lcom/mojang/authlib/minecraft/MinecraftProfileTexture;Lcom/mojang/authlib/minecraft/MinecraftProfileTexture$Type;)Lnet/minecraft/resources/ResourceLocation; a
	registerTexture (Lcom/mojang/authlib/minecraft/MinecraftProfileTexture;Lcom/mojang/authlib/minecraft/MinecraftProfileTexture$Type;Lnet/minecraft/client/resources/SkinManager$SkinTextureCallback;)Lnet/minecraft/resources/ResourceLocation; a
net/minecraft/client/resources/SkinManager$SkinTextureCallback fvu$a
net/minecraft/client/resources/SplashManager fvv
	RANDOM b
	SPLASHES_LOCATION a
	splashes c
	user d
	apply (Ljava/lang/Object;Lnet/minecraft/server/packs/resources/ResourceManager;Lnet/minecraft/util/profiling/ProfilerFiller;)V a
	apply (Ljava/util/List;Lnet/minecraft/server/packs/resources/ResourceManager;Lnet/minecraft/util/profiling/ProfilerFiller;)V a
	getSplash ()Lnet/minecraft/client/gui/components/SplashRenderer; a
	prepare (Lnet/minecraft/server/packs/resources/ResourceManager;Lnet/minecraft/util/profiling/ProfilerFiller;)Ljava/lang/Object; b
	prepare (Lnet/minecraft/server/packs/resources/ResourceManager;Lnet/minecraft/util/profiling/ProfilerFiller;)Ljava/util/List; a
net/minecraft/client/resources/TextureAtlasHolder fvw
	atlasInfoLocation b
	textureAtlas a
	apply (Lnet/minecraft/client/renderer/texture/SpriteLoader$Preparations;Lnet/minecraft/util/profiling/ProfilerFiller;)V a
	getSprite (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/client/renderer/texture/TextureAtlasSprite; a
	reload (Lnet/minecraft/server/packs/resources/PreparableReloadListener$PreparationBarrier;Lnet/minecraft/server/packs/resources/ResourceManager;Lnet/minecraft/util/profiling/ProfilerFiller;Lnet/minecraft/util/profiling/ProfilerFiller;Ljava/util/concurrent/Executor;Ljava/util/concurrent/Executor;)Ljava/util/concurrent/CompletableFuture; a
net/minecraft/client/resources/language/ClientLanguage fvx
	LOGGER b
	defaultRightToLeft d
	storage c
	appendFrom (Ljava/lang/String;Ljava/util/List;Ljava/util/Map;)V a
	getOrDefault (Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; a
	getVisualOrder (Lnet/minecraft/network/chat/FormattedText;)Lnet/minecraft/util/FormattedCharSequence; a
	has (Ljava/lang/String;)Z b
	isDefaultRightToLeft ()Z b
	loadFrom (Lnet/minecraft/server/packs/resources/ResourceManager;Ljava/util/List;Z)Lnet/minecraft/client/resources/language/ClientLanguage; a
net/minecraft/client/resources/language/FormattedBidiReorder fvy
	reorder (Lnet/minecraft/network/chat/FormattedText;Z)Lnet/minecraft/util/FormattedCharSequence; a
	shape (Ljava/lang/String;)Ljava/lang/String; a
net/minecraft/client/resources/language/I18n fvz
	language a
	exists (Ljava/lang/String;)Z a
	get (Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String; a
	setLanguage (Lnet/minecraft/locale/Language;)V a
net/minecraft/client/resources/language/LanguageInfo fwa
	CODEC a
	bidirectional d
	name c
	region b
	bidirectional ()Z d
	name ()Ljava/lang/String; c
	region ()Ljava/lang/String; b
	toComponent ()Lnet/minecraft/network/chat/Component; a
net/minecraft/client/resources/language/LanguageManager fwb
	DEFAULT_LANGUAGE c
	DEFAULT_LANGUAGE_CODE a
	LOGGER b
	currentCode e
	languages d
	extractLanguages (Ljava/util/stream/Stream;)Ljava/util/Map; a
	getLanguage (Ljava/lang/String;)Lnet/minecraft/client/resources/language/LanguageInfo; b
	getLanguages ()Ljava/util/SortedMap; b
	getSelected ()Ljava/lang/String; a
	onResourceManagerReload (Lnet/minecraft/server/packs/resources/ResourceManager;)V a
	setSelected (Ljava/lang/String;)V a
net/minecraft/client/resources/metadata/animation/AnimationFrame fwd
	UNKNOWN_FRAME_TIME a
	index b
	time c
	getIndex ()I a
	getTime (I)I a
net/minecraft/client/resources/metadata/animation/AnimationMetadataSection fwe
	DEFAULT_FRAME_TIME c
	EMPTY e
	SECTION_NAME b
	SERIALIZER a
	UNKNOWN_SIZE d
	defaultFrameTime i
	frameHeight h
	frameWidth g
	frames f
	interpolatedFrames j
	calculateFrameSize (II)Lnet/minecraft/client/resources/metadata/animation/FrameSize; a
	forEachFrame (Lnet/minecraft/client/resources/metadata/animation/AnimationMetadataSection$FrameOutput;)V a
	getDefaultFrameTime ()I a
	isInterpolatedFrames ()Z b
net/minecraft/client/resources/metadata/animation/AnimationMetadataSection$FrameOutput fwe$a
net/minecraft/client/resources/metadata/animation/AnimationMetadataSectionSerializer fwf
	fromJson (Lcom/google/gson/JsonObject;)Ljava/lang/Object; a
	fromJson (Lcom/google/gson/JsonObject;)Lnet/minecraft/client/resources/metadata/animation/AnimationMetadataSection; b
	getFrame (ILcom/google/gson/JsonElement;)Lnet/minecraft/client/resources/metadata/animation/AnimationFrame; a
	getMetadataSectionName ()Ljava/lang/String; a
net/minecraft/client/resources/metadata/animation/FrameSize fwg
	height b
	width a
	height ()I b
	width ()I a
net/minecraft/client/resources/metadata/animation/VillagerMetaDataSection fwh
	SECTION_NAME b
	SERIALIZER a
	hat c
	getHat ()Lnet/minecraft/client/resources/metadata/animation/VillagerMetaDataSection$Hat; a
net/minecraft/client/resources/metadata/animation/VillagerMetaDataSection$Hat fwh$a
	$VALUES f
	BY_NAME d
	FULL c
	NONE a
	PARTIAL b
	name e
	$values ()[Lnet/minecraft/client/resources/metadata/animation/VillagerMetaDataSection$Hat; b
	getByName (Ljava/lang/String;)Lnet/minecraft/client/resources/metadata/animation/VillagerMetaDataSection$Hat; a
	getName ()Ljava/lang/String; a
net/minecraft/client/resources/metadata/animation/VillagerMetadataSectionSerializer fwi
	fromJson (Lcom/google/gson/JsonObject;)Ljava/lang/Object; a
	fromJson (Lcom/google/gson/JsonObject;)Lnet/minecraft/client/resources/metadata/animation/VillagerMetaDataSection; b
	getMetadataSectionName ()Ljava/lang/String; a
net/minecraft/client/resources/metadata/language/LanguageMetadataSection fwk
	CODEC b
	LANGUAGE_CODE_CODEC a
	TYPE c
	languages d
	languages ()Ljava/util/Map; a
net/minecraft/client/resources/metadata/texture/TextureMetadataSection fwn
	DEFAULT_BLUR b
	DEFAULT_CLAMP c
	SERIALIZER a
	blur d
	clamp e
	isBlur ()Z a
	isClamp ()Z b
net/minecraft/client/resources/metadata/texture/TextureMetadataSectionSerializer fwo
	fromJson (Lcom/google/gson/JsonObject;)Ljava/lang/Object; a
	fromJson (Lcom/google/gson/JsonObject;)Lnet/minecraft/client/resources/metadata/texture/TextureMetadataSection; b
	getMetadataSectionName ()Ljava/lang/String; a
net/minecraft/client/resources/model/AtlasSet fwq
	atlases a
	getAtlas (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/client/renderer/texture/TextureAtlas; a
	scheduleLoad (Lnet/minecraft/server/packs/resources/ResourceManager;ILjava/util/concurrent/Executor;)Ljava/util/Map; a
net/minecraft/client/resources/model/AtlasSet$AtlasEntry fwq$a
	atlas a
	atlasInfoLocation b
	atlas ()Lnet/minecraft/client/renderer/texture/TextureAtlas; a
	atlasInfoLocation ()Lnet/minecraft/resources/ResourceLocation; b
net/minecraft/client/resources/model/AtlasSet$StitchResult fwq$b
	atlas a
	preparations b
	getSprite (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/client/renderer/texture/TextureAtlasSprite; a
	missing ()Lnet/minecraft/client/renderer/texture/TextureAtlasSprite; a
	readyForUpload ()Ljava/util/concurrent/CompletableFuture; b
	upload ()V c
net/minecraft/client/resources/model/BakedModel fwr
	getOverrides ()Lnet/minecraft/client/renderer/block/model/ItemOverrides; g
	getParticleIcon ()Lnet/minecraft/client/renderer/texture/TextureAtlasSprite; e
	getQuads (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/util/RandomSource;)Ljava/util/List; a
	getTransforms ()Lnet/minecraft/client/renderer/block/model/ItemTransforms; f
	isCustomRenderer ()Z d
	isGui3d ()Z b
	useAmbientOcclusion ()Z a
	usesBlockLight ()Z c
net/minecraft/client/resources/model/BlockModelRotation fws
	$VALUES v
	BY_INDEX r
	DEGREES q
	X0_Y0 a
	X0_Y180 c
	X0_Y270 d
	X0_Y90 b
	X180_Y0 i
	X180_Y180 k
	X180_Y270 l
	X180_Y90 j
	X270_Y0 m
	X270_Y180 o
	X270_Y270 p
	X270_Y90 n
	X90_Y0 e
	X90_Y180 g
	X90_Y270 h
	X90_Y90 f
	actualRotation t
	index u
	transformation s
	$values ()[Lnet/minecraft/client/resources/model/BlockModelRotation; d
	actualRotation ()Lcom/mojang/math/OctahedralGroup; a
	by (II)Lnet/minecraft/client/resources/model/BlockModelRotation; a
	getIndex (II)I b
	getRotation ()Lcom/mojang/math/Transformation; b
net/minecraft/client/resources/model/BuiltInModel fwt
	itemTransforms a
	overrides b
	particleTexture c
	usesBlockLight d
	getOverrides ()Lnet/minecraft/client/renderer/block/model/ItemOverrides; g
	getParticleIcon ()Lnet/minecraft/client/renderer/texture/TextureAtlasSprite; e
	getQuads (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/util/RandomSource;)Ljava/util/List; a
	getTransforms ()Lnet/minecraft/client/renderer/block/model/ItemTransforms; f
	isCustomRenderer ()Z d
	isGui3d ()Z b
	useAmbientOcclusion ()Z a
	usesBlockLight ()Z c
net/minecraft/client/resources/model/Material fwu
	COMPARATOR a
	atlasLocation b
	renderType d
	texture c
	atlasLocation ()Lnet/minecraft/resources/ResourceLocation; a
	buffer (Lnet/minecraft/client/renderer/MultiBufferSource;Ljava/util/function/Function;)Lcom/mojang/blaze3d/vertex/VertexConsumer; a
	buffer (Lnet/minecraft/client/renderer/MultiBufferSource;Ljava/util/function/Function;Z)Lcom/mojang/blaze3d/vertex/VertexConsumer; a
	renderType (Ljava/util/function/Function;)Lnet/minecraft/client/renderer/RenderType; a
	sprite ()Lnet/minecraft/client/renderer/texture/TextureAtlasSprite; c
	texture ()Lnet/minecraft/resources/ResourceLocation; b
net/minecraft/client/resources/model/ModelBaker fwv
	bake (Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/client/resources/model/ModelState;)Lnet/minecraft/client/resources/model/BakedModel; a
	getModel (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/client/resources/model/UnbakedModel; a
net/minecraft/client/resources/model/ModelBakery fww
	BANNER_BASE f
	BLOCKSTATE_LISTER o
	BLOCK_ENTITY_MARKER s
	BREAKING_LOCATIONS k
	BUILTIN_BLOCK_ENTITY x
	BUILTIN_MODELS z
	BUILTIN_SLASH v
	BUILTIN_SLASH_GENERATED w
	COMMA_SPLITTER A
	DESTROY_STAGES j
	DESTROY_STAGE_COUNT i
	DESTROY_TYPES l
	EQUAL_SPLITTER B
	FIRE_0 a
	FIRE_1 b
	GENERATION_MARKER r
	INVISIBLE_MODEL_GROUP t
	ITEM_FRAME_FAKE_DEFINITION C
	ITEM_MODEL_GENERATOR D
	LAVA_FLOW c
	LOGGER u
	MISSING_MODEL_LOCATION n
	MISSING_MODEL_MESH q
	MISSING_MODEL_NAME y
	MODEL_LISTER p
	NO_PATTERN_SHIELD h
	SHIELD_BASE g
	SINGLETON_MODEL_GROUP m
	STATIC_DEFINITIONS E
	WATER_FLOW d
	WATER_OVERLAY e
	bakedCache L
	bakedTopLevelModels N
	blockColors F
	blockStateResources H
	context J
	loadingStack I
	modelGroups P
	modelResources G
	nextModelGroup O
	topLevelModels M
	unbakedCache K
	bakeModels (Ljava/util/function/BiFunction;)V a
	cacheAndQueueDependencies (Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/client/resources/model/UnbakedModel;)V a
	getBakedTopLevelModels ()Ljava/util/Map; a
	getModel (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/client/resources/model/UnbakedModel; a
	getModelGroups ()Lit/unimi/dsi/fastutil/objects/Object2IntMap; b
	getValueHelper (Lnet/minecraft/world/level/block/state/properties/Property;Ljava/lang/String;)Ljava/lang/Comparable; a
	loadBlockModel (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/client/renderer/block/model/BlockModel; c
	loadModel (Lnet/minecraft/resources/ResourceLocation;)V b
	loadTopLevel (Lnet/minecraft/client/resources/model/ModelResourceLocation;)V a
	predicate (Lnet/minecraft/world/level/block/state/StateDefinition;Ljava/lang/String;)Ljava/util/function/Predicate; a
	registerModelGroup (Ljava/lang/Iterable;)V a
net/minecraft/client/resources/model/ModelBakery$BakedCacheKey fww$a
	id a
	isUvLocked c
	transformation b
	id ()Lnet/minecraft/resources/ResourceLocation; a
	isUvLocked ()Z c
	transformation ()Lcom/mojang/math/Transformation; b
net/minecraft/client/resources/model/ModelBakery$BlockStateDefinitionException fww$b
net/minecraft/client/resources/model/ModelBakery$LoadedJson fww$c
	data b
	source a
	data ()Lcom/google/gson/JsonElement; b
	source ()Ljava/lang/String; a
net/minecraft/client/resources/model/ModelBakery$ModelBakerImpl fww$d
	modelTextureGetter b
	bake (Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/client/resources/model/ModelState;)Lnet/minecraft/client/resources/model/BakedModel; a
	getModel (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/client/resources/model/UnbakedModel; a
net/minecraft/client/resources/model/ModelBakery$ModelGroupKey fww$e
	coloringValues b
	models a
	create (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/client/renderer/block/model/multipart/MultiPart;Ljava/util/Collection;)Lnet/minecraft/client/resources/model/ModelBakery$ModelGroupKey; a
	create (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/client/resources/model/UnbakedModel;Ljava/util/Collection;)Lnet/minecraft/client/resources/model/ModelBakery$ModelGroupKey; a
	getColoringValues (Lnet/minecraft/world/level/block/state/BlockState;Ljava/util/Collection;)Ljava/util/List; a
net/minecraft/client/resources/model/ModelManager fwx
	LOGGER a
	VANILLA_ATLASES b
	atlases d
	bakedRegistry c
	blockColors f
	blockModelShaper e
	maxMipmapLevels g
	missingModel h
	modelGroups i
	apply (Lnet/minecraft/client/resources/model/ModelManager$ReloadState;Lnet/minecraft/util/profiling/ProfilerFiller;)V a
	getAtlas (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/client/renderer/texture/TextureAtlas; a
	getBlockModelShaper ()Lnet/minecraft/client/renderer/block/BlockModelShaper; b
	getMissingModel ()Lnet/minecraft/client/resources/model/BakedModel; a
	getModel (Lnet/minecraft/client/resources/model/ModelResourceLocation;)Lnet/minecraft/client/resources/model/BakedModel; a
	loadBlockModels (Lnet/minecraft/server/packs/resources/ResourceManager;Ljava/util/concurrent/Executor;)Ljava/util/concurrent/CompletableFuture; a
	loadBlockStates (Lnet/minecraft/server/packs/resources/ResourceManager;Ljava/util/concurrent/Executor;)Ljava/util/concurrent/CompletableFuture; b
	loadModels (Lnet/minecraft/util/profiling/ProfilerFiller;Ljava/util/Map;Lnet/minecraft/client/resources/model/ModelBakery;)Lnet/minecraft/client/resources/model/ModelManager$ReloadState; a
	reload (Lnet/minecraft/server/packs/resources/PreparableReloadListener$PreparationBarrier;Lnet/minecraft/server/packs/resources/ResourceManager;Lnet/minecraft/util/profiling/ProfilerFiller;Lnet/minecraft/util/profiling/ProfilerFiller;Ljava/util/concurrent/Executor;Ljava/util/concurrent/Executor;)Ljava/util/concurrent/CompletableFuture; a
	requiresRender (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/state/BlockState;)Z a
	updateMaxMipLevel (I)V a
net/minecraft/client/resources/model/ModelManager$ReloadState fwx$a
	atlasPreparations d
	missingModel b
	modelBakery a
	modelCache c
	readyForUpload e
	atlasPreparations ()Ljava/util/Map; d
	missingModel ()Lnet/minecraft/client/resources/model/BakedModel; b
	modelBakery ()Lnet/minecraft/client/resources/model/ModelBakery; a
	modelCache ()Ljava/util/Map; c
	readyForUpload ()Ljava/util/concurrent/CompletableFuture; e
net/minecraft/client/resources/model/ModelResourceLocation fwy
	VARIANT_SEPARATOR e
	variant f
	getVariant ()Ljava/lang/String; f
	lowercaseVariant (Ljava/lang/String;)Ljava/lang/String; h
	vanilla (Ljava/lang/String;Ljava/lang/String;)Lnet/minecraft/client/resources/model/ModelResourceLocation; c
net/minecraft/client/resources/model/ModelState fwz
	getRotation ()Lcom/mojang/math/Transformation; b
	isUvLocked ()Z c
net/minecraft/client/resources/model/MultiPartBakedModel fxa
	hasAmbientOcclusion a
	isGui3d b
	overrides f
	particleIcon d
	selectorCache h
	selectors g
	transforms e
	usesBlockLight c
	getOverrides ()Lnet/minecraft/client/renderer/block/model/ItemOverrides; g
	getParticleIcon ()Lnet/minecraft/client/renderer/texture/TextureAtlasSprite; e
	getQuads (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/util/RandomSource;)Ljava/util/List; a
	getTransforms ()Lnet/minecraft/client/renderer/block/model/ItemTransforms; f
	isCustomRenderer ()Z d
	isGui3d ()Z b
	useAmbientOcclusion ()Z a
	usesBlockLight ()Z c
net/minecraft/client/resources/model/MultiPartBakedModel$Builder fxa$a
	selectors a
	add (Ljava/util/function/Predicate;Lnet/minecraft/client/resources/model/BakedModel;)V a
	build ()Lnet/minecraft/client/resources/model/BakedModel; a
net/minecraft/client/resources/model/SimpleBakedModel fxb
	culledFaces b
	hasAmbientOcclusion c
	isGui3d d
	overrides h
	particleIcon f
	transforms g
	unculledFaces a
	usesBlockLight e
	getOverrides ()Lnet/minecraft/client/renderer/block/model/ItemOverrides; g
	getParticleIcon ()Lnet/minecraft/client/renderer/texture/TextureAtlasSprite; e
	getQuads (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/util/RandomSource;)Ljava/util/List; a
	getTransforms ()Lnet/minecraft/client/renderer/block/model/ItemTransforms; f
	isCustomRenderer ()Z d
	isGui3d ()Z b
	useAmbientOcclusion ()Z a
	usesBlockLight ()Z c
net/minecraft/client/resources/model/SimpleBakedModel$Builder fxb$a
	culledFaces b
	hasAmbientOcclusion d
	isGui3d g
	overrides c
	particleIcon e
	transforms h
	unculledFaces a
	usesBlockLight f
	addCulledFace (Lnet/minecraft/core/Direction;Lnet/minecraft/client/renderer/block/model/BakedQuad;)Lnet/minecraft/client/resources/model/SimpleBakedModel$Builder; a
	addUnculledFace (Lnet/minecraft/client/renderer/block/model/BakedQuad;)Lnet/minecraft/client/resources/model/SimpleBakedModel$Builder; a
	build ()Lnet/minecraft/client/resources/model/BakedModel; b
	item ()Lnet/minecraft/client/resources/model/SimpleBakedModel$Builder; a
	particle (Lnet/minecraft/client/renderer/texture/TextureAtlasSprite;)Lnet/minecraft/client/resources/model/SimpleBakedModel$Builder; a
net/minecraft/client/resources/model/UnbakedModel fxc
	bake (Lnet/minecraft/client/resources/model/ModelBaker;Ljava/util/function/Function;Lnet/minecraft/client/resources/model/ModelState;Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/client/resources/model/BakedModel; a
	getDependencies ()Ljava/util/Collection; f
	resolveParents (Ljava/util/function/Function;)V a
net/minecraft/client/resources/model/WeightedBakedModel fxd
	list b
	totalWeight a
	wrapped c
	getOverrides ()Lnet/minecraft/client/renderer/block/model/ItemOverrides; g
	getParticleIcon ()Lnet/minecraft/client/renderer/texture/TextureAtlasSprite; e
	getQuads (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/util/RandomSource;)Ljava/util/List; a
	getTransforms ()Lnet/minecraft/client/renderer/block/model/ItemTransforms; f
	isCustomRenderer ()Z d
	isGui3d ()Z b
	useAmbientOcclusion ()Z a
	usesBlockLight ()Z c
net/minecraft/client/resources/model/WeightedBakedModel$Builder fxd$a
	list a
	add (Lnet/minecraft/client/resources/model/BakedModel;I)Lnet/minecraft/client/resources/model/WeightedBakedModel$Builder; a
	build ()Lnet/minecraft/client/resources/model/BakedModel; a
net/minecraft/client/resources/sounds/AbstractSoundInstance fxg
	attenuation k
	delay j
	location c
	looping i
	pitch e
	random m
	relative l
	sound a
	source b
	volume d
	x f
	y g
	z h
	getAttenuation ()Lnet/minecraft/client/resources/sounds/SoundInstance$Attenuation; k
	getDelay ()I e
	getLocation ()Lnet/minecraft/resources/ResourceLocation; a
	getPitch ()F g
	getSound ()Lnet/minecraft/client/resources/sounds/Sound; b
	getSource ()Lnet/minecraft/sounds/SoundSource; c
	getVolume ()F f
	getX ()D h
	getY ()D i
	getZ ()D j
	isLooping ()Z d
	isRelative ()Z l
	resolve (Lnet/minecraft/client/sounds/SoundManager;)Lnet/minecraft/client/sounds/WeighedSoundEvents; a
net/minecraft/client/resources/sounds/AbstractTickableSoundInstance fxh
	stopped n
	isStopped ()Z m
	stop ()V n
net/minecraft/client/resources/sounds/AmbientSoundHandler fxi
	tick ()V a
net/minecraft/client/resources/sounds/BeeAggressiveSoundInstance fxj
	getAlternativeSoundInstance ()Lnet/minecraft/client/resources/sounds/AbstractTickableSoundInstance; o
	shouldSwitchSounds ()Z p
net/minecraft/client/resources/sounds/BeeFlyingSoundInstance fxk
	getAlternativeSoundInstance ()Lnet/minecraft/client/resources/sounds/AbstractTickableSoundInstance; o
	shouldSwitchSounds ()Z p
net/minecraft/client/resources/sounds/BeeSoundInstance fxl
	PITCH_MIN q
	VOLUME_MAX p
	VOLUME_MIN o
	bee n
	hasSwitched r
	canPlaySound ()Z s
	canStartSilent ()Z r
	getAlternativeSoundInstance ()Lnet/minecraft/client/resources/sounds/AbstractTickableSoundInstance; o
	getMaxPitch ()F v
	getMinPitch ()F u
	shouldSwitchSounds ()Z p
	tick ()V q
net/minecraft/client/resources/sounds/BiomeAmbientSoundsHandler fxm
	LOOP_SOUND_CROSS_FADE_TIME a
	SKY_MOOD_RECOVERY_RATE b
	additionsSettings i
	biomeManager e
	loopSounds g
	moodSettings h
	moodiness j
	player c
	previousBiome k
	random f
	soundManager d
	getMoodiness ()F b
	tick ()V a
net/minecraft/client/resources/sounds/BiomeAmbientSoundsHandler$LoopSoundInstance fxm$a
	fade o
	fadeDirection n
	fadeIn ()V p
	fadeOut ()V o
	tick ()V q
net/minecraft/client/resources/sounds/BubbleColumnAmbientSoundHandler fxn
	firstTick c
	player a
	wasInBubbleColumn b
	tick ()V a
net/minecraft/client/resources/sounds/ElytraOnPlayerSoundInstance fxo
	DELAY n
	player o
	time p
	tick ()V q
net/minecraft/client/resources/sounds/EntityBoundSoundInstance fxp
	entity n
	canPlaySound ()Z s
	tick ()V q
net/minecraft/client/resources/sounds/GuardianAttackSoundInstance fxq
	PITCH_MIN p
	PITCH_SCALE q
	VOLUME_MIN n
	VOLUME_SCALE o
	guardian r
	canPlaySound ()Z s
	tick ()V q
net/minecraft/client/resources/sounds/MinecartSoundInstance fxr
	PITCH_DELTA r
	PITCH_MAX q
	PITCH_MIN p
	VOLUME_MAX o
	VOLUME_MIN n
	minecart s
	pitch t
	canPlaySound ()Z s
	canStartSilent ()Z r
	tick ()V q
net/minecraft/client/resources/sounds/RidingMinecartSoundInstance fxs
	VOLUME_MAX o
	VOLUME_MIN n
	minecart q
	player p
	underwaterSound r
	canPlaySound ()Z s
	canStartSilent ()Z r
	tick ()V q
net/minecraft/client/resources/sounds/SimpleSoundInstance fxt
	forAmbientAddition (Lnet/minecraft/sounds/SoundEvent;)Lnet/minecraft/client/resources/sounds/SimpleSoundInstance; b
	forAmbientMood (Lnet/minecraft/sounds/SoundEvent;Lnet/minecraft/util/RandomSource;DDD)Lnet/minecraft/client/resources/sounds/SimpleSoundInstance; a
	forLocalAmbience (Lnet/minecraft/sounds/SoundEvent;FF)Lnet/minecraft/client/resources/sounds/SimpleSoundInstance; b
	forMusic (Lnet/minecraft/sounds/SoundEvent;)Lnet/minecraft/client/resources/sounds/SimpleSoundInstance; a
	forRecord (Lnet/minecraft/sounds/SoundEvent;Lnet/minecraft/world/phys/Vec3;)Lnet/minecraft/client/resources/sounds/SimpleSoundInstance; a
	forUI (Lnet/minecraft/core/Holder;F)Lnet/minecraft/client/resources/sounds/SimpleSoundInstance; a
	forUI (Lnet/minecraft/sounds/SoundEvent;F)Lnet/minecraft/client/resources/sounds/SimpleSoundInstance; a
	forUI (Lnet/minecraft/sounds/SoundEvent;FF)Lnet/minecraft/client/resources/sounds/SimpleSoundInstance; a
net/minecraft/client/resources/sounds/SnifferSoundInstance fxu
	PITCH o
	VOLUME n
	sniffer p
	canPlaySound ()Z s
	tick ()V q
net/minecraft/client/resources/sounds/Sound fxv
	SOUND_LISTER a
	attenuationDistance i
	location b
	pitch d
	preload h
	stream g
	type f
	volume c
	weight e
	getAttenuationDistance ()I i
	getLocation ()Lnet/minecraft/resources/ResourceLocation; a
	getPath ()Lnet/minecraft/resources/ResourceLocation; b
	getPitch ()Lnet/minecraft/util/valueproviders/SampledFloat; d
	getSound (Lnet/minecraft/util/RandomSource;)Ljava/lang/Object; b
	getSound (Lnet/minecraft/util/RandomSource;)Lnet/minecraft/client/resources/sounds/Sound; a
	getType ()Lnet/minecraft/client/resources/sounds/Sound$Type; f
	getVolume ()Lnet/minecraft/util/valueproviders/SampledFloat; c
	getWeight ()I e
	preloadIfRequired (Lnet/minecraft/client/sounds/SoundEngine;)V a
	shouldPreload ()Z h
	shouldStream ()Z g
net/minecraft/client/resources/sounds/Sound$Type fxv$a
	$VALUES d
	FILE a
	SOUND_EVENT b
	name c
	$values ()[Lnet/minecraft/client/resources/sounds/Sound$Type; a
	getByName (Ljava/lang/String;)Lnet/minecraft/client/resources/sounds/Sound$Type; a
net/minecraft/client/resources/sounds/SoundEventRegistration fxw
	replace b
	sounds a
	subtitle c
	getSounds ()Ljava/util/List; a
	getSubtitle ()Ljava/lang/String; c
	isReplace ()Z b
net/minecraft/client/resources/sounds/SoundEventRegistrationSerializer fxx
	DEFAULT_FLOAT a
	deserialize (Lcom/google/gson/JsonElement;Ljava/lang/reflect/Type;Lcom/google/gson/JsonDeserializationContext;)Lnet/minecraft/client/resources/sounds/SoundEventRegistration; a
	getSound (Lcom/google/gson/JsonObject;)Lnet/minecraft/client/resources/sounds/Sound; b
	getSounds (Lcom/google/gson/JsonObject;)Ljava/util/List; a
	getType (Lcom/google/gson/JsonObject;Lnet/minecraft/client/resources/sounds/Sound$Type;)Lnet/minecraft/client/resources/sounds/Sound$Type; a
net/minecraft/client/resources/sounds/SoundInstance fxy
	canPlaySound ()Z s
	canStartSilent ()Z r
	createUnseededRandom ()Lnet/minecraft/util/RandomSource; t
	getAttenuation ()Lnet/minecraft/client/resources/sounds/SoundInstance$Attenuation; k
	getDelay ()I e
	getLocation ()Lnet/minecraft/resources/ResourceLocation; a
	getPitch ()F g
	getSound ()Lnet/minecraft/client/resources/sounds/Sound; b
	getSource ()Lnet/minecraft/sounds/SoundSource; c
	getVolume ()F f
	getX ()D h
	getY ()D i
	getZ ()D j
	isLooping ()Z d
	isRelative ()Z l
	resolve (Lnet/minecraft/client/sounds/SoundManager;)Lnet/minecraft/client/sounds/WeighedSoundEvents; a
net/minecraft/client/resources/sounds/SoundInstance$Attenuation fxy$a
	$VALUES c
	LINEAR b
	NONE a
	$values ()[Lnet/minecraft/client/resources/sounds/SoundInstance$Attenuation; a
net/minecraft/client/resources/sounds/TickableSoundInstance fxz
	isStopped ()Z m
	tick ()V q
net/minecraft/client/resources/sounds/UnderwaterAmbientSoundHandler fya
	CHANCE_PER_TICK a
	MINIMUM_TICK_DELAY d
	RARE_CHANCE_PER_TICK b
	ULTRA_RARE_CHANCE_PER_TICK c
	player e
	soundManager f
	tickDelay g
	tick ()V a
net/minecraft/client/resources/sounds/UnderwaterAmbientSoundInstances fyb
net/minecraft/client/resources/sounds/UnderwaterAmbientSoundInstances$SubSound fyb$a
	player n
	tick ()V q
net/minecraft/client/resources/sounds/UnderwaterAmbientSoundInstances$UnderwaterAmbientSoundInstance fyb$b
	FADE_DURATION n
	fade p
	player o
	tick ()V q
net/minecraft/client/searchtree/FullTextSearchTree fyd
	contents c
	filler d
	plainTextSearchTree e
	refresh ()V a
	searchPlainText (Ljava/lang/String;)Ljava/util/List; a
	searchResourceLocation (Ljava/lang/String;Ljava/lang/String;)Ljava/util/List; a
net/minecraft/client/searchtree/IdSearchTree fye
	additionOrder a
	resourceLocationSearchTree b
	searchPlainText (Ljava/lang/String;)Ljava/util/List; a
	searchResourceLocation (Ljava/lang/String;Ljava/lang/String;)Ljava/util/List; a
net/minecraft/client/searchtree/IntersectionIterator fyf
	comparator c
	firstIterator a
	secondIterator b
net/minecraft/client/searchtree/MergingUniqueIterator fyg
	comparator c
	firstIterator a
	secondIterator b
net/minecraft/client/searchtree/PlainTextSearchTree fyh
	create (Ljava/util/List;Ljava/util/function/Function;)Lnet/minecraft/client/searchtree/PlainTextSearchTree; a
	empty ()Lnet/minecraft/client/searchtree/PlainTextSearchTree; a
net/minecraft/client/searchtree/RefreshableSearchTree fyi
	empty ()Lnet/minecraft/client/searchtree/RefreshableSearchTree; b
	refresh ()V a
net/minecraft/client/searchtree/ResourceLocationSearchTree fyj
	create (Ljava/util/List;Ljava/util/function/Function;)Lnet/minecraft/client/searchtree/ResourceLocationSearchTree; a
	empty ()Lnet/minecraft/client/searchtree/ResourceLocationSearchTree; a
	searchNamespace (Ljava/lang/String;)Ljava/util/List; a
	searchPath (Ljava/lang/String;)Ljava/util/List; b
net/minecraft/client/searchtree/SearchRegistry fyk
	CREATIVE_NAMES a
	CREATIVE_TAGS b
	RECIPE_COLLECTIONS c
	searchTrees d
	getSupplier (Lnet/minecraft/client/searchtree/SearchRegistry$Key;)Lnet/minecraft/client/searchtree/SearchRegistry$TreeEntry; b
	getTree (Lnet/minecraft/client/searchtree/SearchRegistry$Key;)Lnet/minecraft/client/searchtree/SearchTree; a
	onResourceManagerReload (Lnet/minecraft/server/packs/resources/ResourceManager;)V a
	populate (Lnet/minecraft/client/searchtree/SearchRegistry$Key;Ljava/util/List;)V a
	register (Lnet/minecraft/client/searchtree/SearchRegistry$Key;Lnet/minecraft/client/searchtree/SearchRegistry$TreeBuilderSupplier;)V a
net/minecraft/client/searchtree/SearchRegistry$Key fyk$a
net/minecraft/client/searchtree/SearchRegistry$TreeBuilderSupplier fyk$b
net/minecraft/client/searchtree/SearchRegistry$TreeEntry fyk$c
	factory a
	tree b
	populate (Ljava/util/List;)V a
	refresh ()V a
net/minecraft/client/searchtree/SearchTree fyl
net/minecraft/client/searchtree/SuffixArray fym
	DEBUG_ARRAY c
	DEBUG_COMPARISONS b
	END_OF_DATA f
	END_OF_TEXT_MARKER e
	LOGGER d
	chars g
	list a
	maxStringLength k
	offsets j
	suffixToT i
	wordStarts h
	add (Ljava/lang/Object;Ljava/lang/String;)V a
	compare (Ljava/lang/String;I)I a
	generate ()V a
	getString (I)Ljava/lang/String; a
	print ()V b
	search (Ljava/lang/String;)Ljava/util/List; a
net/minecraft/client/server/IntegratedPlayerList fyo
	playerData a
	canPlayerLogin (Ljava/net/SocketAddress;Lcom/mojang/authlib/GameProfile;)Lnet/minecraft/network/chat/Component; a
	getServer ()Lnet/minecraft/client/server/IntegratedServer; b
	getServer ()Lnet/minecraft/server/MinecraftServer; c
	getSingleplayerData ()Lnet/minecraft/nbt/CompoundTag; r
	save (Lnet/minecraft/server/level/ServerPlayer;)V b
net/minecraft/client/server/IntegratedServer fyp
	LOGGER n
	MIN_SIM_DISTANCE o
	lanPinger t
	minecraft p
	paused q
	previousSimulationDistance v
	publishedGameType s
	publishedPort r
	uuid u
	fillServerSystemReport (Lnet/minecraft/SystemReport;)Lnet/minecraft/SystemReport; a
	forceSynchronousWrites ()Z aS
	getForcedGameType ()Lnet/minecraft/world/level/GameType; aX
	getFunctionCompilationLevel ()I j
	getModdedStatus ()Lnet/minecraft/util/ModCheck; K
	getOperatorUserPermissionLevel ()I i
	getPort ()I M
	getRateLimitPacketsPerSecond ()I m
	getScaledTrackingDistance (I)I b
	getServerDirectory ()Ljava/io/File; z
	halt (Z)V a
	initServer ()Z e
	isCommandBlockEnabled ()Z o
	isDedicatedServer ()Z l
	isEpollEnabled ()Z n
	isPublished ()Z p
	isSingleplayerOwner (Lcom/mojang/authlib/GameProfile;)Z a
	onServerCrash (Lnet/minecraft/CrashReport;)V a
	publishServer (Lnet/minecraft/world/level/GameType;ZI)Z a
	setDefaultGameType (Lnet/minecraft/world/level/GameType;)V a
	setUUID (Ljava/util/UUID;)V a
	shouldInformAdmins ()Z N_
	shouldRconBroadcast ()Z k
	stopServer ()V t
	tickPaused ()V a
	tickServer (Ljava/util/function/BooleanSupplier;)V a
net/minecraft/client/server/LanServer fyq
	address b
	motd a
	pingTime c
	getAddress ()Ljava/lang/String; b
	getMotd ()Ljava/lang/String; a
	updatePingTime ()V c
net/minecraft/client/server/LanServerDetection fyr
	LOGGER b
	UNIQUE_THREAD_ID a
net/minecraft/client/server/LanServerDetection$LanServerDetector fyr$a
	pingGroup b
	serverList a
	socket c
net/minecraft/client/server/LanServerDetection$LanServerList fyr$b
	isDirty b
	servers a
	addServer (Ljava/lang/String;Ljava/net/InetAddress;)V a
	takeDirtyServers ()Ljava/util/List; a
net/minecraft/client/server/LanServerPinger fys
	LOGGER d
	MULTICAST_GROUP a
	PING_INTERVAL e
	PING_PORT b
	UNIQUE_THREAD_ID c
	isRunning h
	motd f
	serverAddress i
	socket g
	createPingString (Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; a
	parseAddress (Ljava/lang/String;)Ljava/lang/String; b
	parseMotd (Ljava/lang/String;)Ljava/lang/String; a
net/minecraft/client/sounds/AudioStream fyu
	getFormat ()Ljavax/sound/sampled/AudioFormat; a
	read (I)Ljava/nio/ByteBuffer; a
net/minecraft/client/sounds/ChannelAccess fyv
	channels a
	executor c
	library b
	clear ()V b
	createHandle (Lcom/mojang/blaze3d/audio/Library$Pool;)Ljava/util/concurrent/CompletableFuture; a
	executeOnChannels (Ljava/util/function/Consumer;)V a
	scheduleTick ()V a
net/minecraft/client/sounds/ChannelAccess$ChannelHandle fyv$a
	channel b
	stopped c
	execute (Ljava/util/function/Consumer;)V a
	isStopped ()Z a
	release ()V b
net/minecraft/client/sounds/LoopingAudioStream fyw
	bufferedInputStream c
	provider a
	stream b
	getFormat ()Ljavax/sound/sampled/AudioFormat; a
	read (I)Ljava/nio/ByteBuffer; a
net/minecraft/client/sounds/LoopingAudioStream$AudioStreamProvider fyw$a
net/minecraft/client/sounds/LoopingAudioStream$NoCloseBuffer fyw$b
net/minecraft/client/sounds/MusicManager fyx
	STARTING_DELAY a
	currentMusic d
	minecraft c
	nextSongDelay e
	random b
	isPlayingMusic (Lnet/minecraft/sounds/Music;)Z c
	startPlaying (Lnet/minecraft/sounds/Music;)V a
	stopPlaying ()V b
	stopPlaying (Lnet/minecraft/sounds/Music;)V b
	tick ()V a
net/minecraft/client/sounds/SoundBufferLibrary fyy
	cache b
	resourceManager a
	clear ()V a
	getCompleteBuffer (Lnet/minecraft/resources/ResourceLocation;)Ljava/util/concurrent/CompletableFuture; a
	getStream (Lnet/minecraft/resources/ResourceLocation;Z)Ljava/util/concurrent/CompletableFuture; a
	preload (Ljava/util/Collection;)Ljava/util/concurrent/CompletableFuture; a
net/minecraft/client/sounds/SoundEngine fyz
	DEFAULT_DEVICE_CHECK_INTERVAL_MS l
	LOGGER e
	MARKER d
	MIN_SOURCE_LIFETIME j
	MISSING_SOUND a
	ONLY_WARN_ONCE k
	OPEN_AL_SOFT_PREFIX b
	OPEN_AL_SOFT_PREFIX_LENGTH c
	PITCH_MAX g
	PITCH_MIN f
	VOLUME_MAX i
	VOLUME_MIN h
	channelAccess t
	devicePoolState w
	executor s
	instanceBySource y
	instanceToChannel x
	lastDeviceCheckTime v
	library p
	listener q
	listeners C
	loaded o
	options n
	preloadQueue E
	queuedSounds A
	queuedTickableSounds D
	soundBuffers r
	soundDeleteTime B
	soundManager m
	tickCount u
	tickingSounds z
	addEventListener (Lnet/minecraft/client/sounds/SoundEventListener;)V a
	calculatePitch (Lnet/minecraft/client/resources/sounds/SoundInstance;)F g
	calculateVolume (FLnet/minecraft/sounds/SoundSource;)F a
	calculateVolume (Lnet/minecraft/client/resources/sounds/SoundInstance;)F h
	destroy ()V b
	getAvailableSoundDevices ()Ljava/util/List; g
	getDebugString ()Ljava/lang/String; f
	getVolume (Lnet/minecraft/sounds/SoundSource;)F a
	isActive (Lnet/minecraft/client/resources/sounds/SoundInstance;)Z b
	loadLibrary ()V h
	pause ()V d
	play (Lnet/minecraft/client/resources/sounds/SoundInstance;)V c
	playDelayed (Lnet/minecraft/client/resources/sounds/SoundInstance;I)V a
	queueTickingSound (Lnet/minecraft/client/resources/sounds/TickableSoundInstance;)V a
	reload ()V a
	removeEventListener (Lnet/minecraft/client/sounds/SoundEventListener;)V b
	requestPreload (Lnet/minecraft/client/resources/sounds/Sound;)V a
	requiresManualLooping (Lnet/minecraft/client/resources/sounds/SoundInstance;)Z d
	resume ()V e
	shouldChangeDevice ()Z i
	shouldLoopAutomatically (Lnet/minecraft/client/resources/sounds/SoundInstance;)Z f
	shouldLoopManually (Lnet/minecraft/client/resources/sounds/SoundInstance;)Z e
	stop (Lnet/minecraft/client/resources/sounds/SoundInstance;)V a
	stop (Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/sounds/SoundSource;)V a
	stopAll ()V c
	tick (Z)V a
	tickNonPaused ()V j
	updateCategoryVolume (Lnet/minecraft/sounds/SoundSource;F)V a
	updateSource (Lnet/minecraft/client/Camera;)V a
net/minecraft/client/sounds/SoundEngine$DeviceCheckState fyz$a
	$VALUES d
	CHANGE_DETECTED b
	NO_CHANGE c
	ONGOING a
	$values ()[Lnet/minecraft/client/sounds/SoundEngine$DeviceCheckState; a
net/minecraft/client/sounds/SoundEngineExecutor fza
	shutdown b
	thread a
	createThread ()Ljava/lang/Thread; b
	flush ()V a
	getRunningThread ()Ljava/lang/Thread; au
	run ()V c
	shouldRun (Ljava/lang/Runnable;)Z e
	waitForTasks ()V bq
	wrapRunnable (Ljava/lang/Runnable;)Ljava/lang/Runnable; f
net/minecraft/client/sounds/SoundEventListener fzb
	onPlaySound (Lnet/minecraft/client/resources/sounds/SoundInstance;Lnet/minecraft/client/sounds/WeighedSoundEvents;)V a
net/minecraft/client/sounds/SoundManager fzc
	EMPTY_SOUND a
	GSON g
	INTENTIONALLY_EMPTY_SOUND d
	INTENTIONALLY_EMPTY_SOUND_EVENT c
	INTENTIONALLY_EMPTY_SOUND_LOCATION b
	LOGGER e
	SOUNDS_PATH f
	SOUND_EVENT_REGISTRATION_TYPE h
	registry i
	soundCache k
	soundEngine j
	addListener (Lnet/minecraft/client/sounds/SoundEventListener;)V a
	apply (Ljava/lang/Object;Lnet/minecraft/server/packs/resources/ResourceManager;Lnet/minecraft/util/profiling/ProfilerFiller;)V a
	apply (Lnet/minecraft/client/sounds/SoundManager$Preparations;Lnet/minecraft/server/packs/resources/ResourceManager;Lnet/minecraft/util/profiling/ProfilerFiller;)V a
	destroy ()V f
	getAvailableSoundDevices ()Ljava/util/List; a
	getAvailableSounds ()Ljava/util/Collection; b
	getDebugString ()Ljava/lang/String; h
	getSoundEvent (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/client/sounds/WeighedSoundEvents; a
	isActive (Lnet/minecraft/client/resources/sounds/SoundInstance;)Z c
	pause ()V d
	play (Lnet/minecraft/client/resources/sounds/SoundInstance;)V a
	playDelayed (Lnet/minecraft/client/resources/sounds/SoundInstance;I)V a
	prepare (Lnet/minecraft/server/packs/resources/ResourceManager;Lnet/minecraft/util/profiling/ProfilerFiller;)Ljava/lang/Object; b
	prepare (Lnet/minecraft/server/packs/resources/ResourceManager;Lnet/minecraft/util/profiling/ProfilerFiller;)Lnet/minecraft/client/sounds/SoundManager$Preparations; a
	queueTickingSound (Lnet/minecraft/client/resources/sounds/TickableSoundInstance;)V a
	reload ()V i
	removeListener (Lnet/minecraft/client/sounds/SoundEventListener;)V b
	resume ()V g
	stop ()V e
	stop (Lnet/minecraft/client/resources/sounds/SoundInstance;)V b
	stop (Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/sounds/SoundSource;)V a
	tick (Z)V a
	updateSource (Lnet/minecraft/client/Camera;)V a
	updateSourceVolume (Lnet/minecraft/sounds/SoundSource;F)V a
	validateSoundResource (Lnet/minecraft/client/resources/sounds/Sound;Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/server/packs/resources/ResourceProvider;)Z a
net/minecraft/client/sounds/SoundManager$Preparations fzc$a
	registry a
	soundCache b
	apply (Ljava/util/Map;Ljava/util/Map;Lnet/minecraft/client/sounds/SoundEngine;)V a
	handleRegistration (Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/client/resources/sounds/SoundEventRegistration;)V a
	listResources (Lnet/minecraft/server/packs/resources/ResourceManager;)V a
net/minecraft/client/sounds/WeighedSoundEvents fzd
	list a
	subtitle b
	addSound (Lnet/minecraft/client/sounds/Weighted;)V a
	getSound (Lnet/minecraft/util/RandomSource;)Ljava/lang/Object; b
	getSound (Lnet/minecraft/util/RandomSource;)Lnet/minecraft/client/resources/sounds/Sound; a
	getSubtitle ()Lnet/minecraft/network/chat/Component; a
	getWeight ()I e
	preloadIfRequired (Lnet/minecraft/client/sounds/SoundEngine;)V a
net/minecraft/client/sounds/Weighted fze
	getSound (Lnet/minecraft/util/RandomSource;)Ljava/lang/Object; b
	getWeight ()I e
	preloadIfRequired (Lnet/minecraft/client/sounds/SoundEngine;)V a
net/minecraft/client/telemetry/ClientTelemetryManager fzg
	EXECUTOR b
	THREAD_COUNT a
	deviceSessionProperties d
	logDirectory e
	logManager f
	outsideSessionSender g
	userApiService c
	createEventSender ()Lnet/minecraft/client/telemetry/TelemetryEventSender; c
	createWorldSessionManager (ZLjava/time/Duration;Ljava/lang/String;)Lnet/minecraft/client/telemetry/WorldSessionTelemetryManager; a
	getLogDirectory ()Ljava/nio/file/Path; b
	getOutsideSessionSender ()Lnet/minecraft/client/telemetry/TelemetryEventSender; a
net/minecraft/client/telemetry/TelemetryEventInstance fzh
	CODEC a
	properties c
	type b
	export (Lcom/mojang/authlib/minecraft/TelemetrySession;)Lcom/mojang/authlib/minecraft/TelemetryEvent; a
	properties ()Lnet/minecraft/client/telemetry/TelemetryPropertyMap; b
	type ()Lnet/minecraft/client/telemetry/TelemetryEventType; a
net/minecraft/client/telemetry/TelemetryEventLog fzi
	LOGGER a
	log b
	mailbox c
	logger ()Lnet/minecraft/client/telemetry/TelemetryEventLogger; a
net/minecraft/client/telemetry/TelemetryEventLogger fzj
net/minecraft/client/telemetry/TelemetryEventSender fzk
	DISABLED a
net/minecraft/client/telemetry/TelemetryEventType fzl
	ADVANCEMENT_MADE f
	CODEC a
	GAME_LOAD_TIMES g
	GLOBAL_PROPERTIES i
	PERFORMANCE_METRICS c
	REGISTRY h
	WORLD_LOADED b
	WORLD_LOAD_TIMES d
	WORLD_SESSION_PROPERTIES j
	WORLD_UNLOADED e
	codec o
	exportKey l
	id k
	isOptIn n
	properties m
	builder (Ljava/lang/String;Ljava/lang/String;)Lnet/minecraft/client/telemetry/TelemetryEventType$Builder; a
	codec ()Lcom/mojang/serialization/Codec; c
	contains (Lnet/minecraft/client/telemetry/TelemetryProperty;)Z a
	description ()Lnet/minecraft/network/chat/MutableComponent; f
	export (Lcom/mojang/authlib/minecraft/TelemetrySession;Lnet/minecraft/client/telemetry/TelemetryPropertyMap;)Lcom/mojang/authlib/minecraft/TelemetryEvent; a
	id ()Ljava/lang/String; a
	isOptIn ()Z d
	makeTranslation (Ljava/lang/String;)Lnet/minecraft/network/chat/MutableComponent; a
	properties ()Ljava/util/List; b
	title ()Lnet/minecraft/network/chat/MutableComponent; e
	values ()Ljava/util/List; g
net/minecraft/client/telemetry/TelemetryEventType$Builder fzl$a
	exportKey b
	id a
	isOptIn d
	properties c
	define (Lnet/minecraft/client/telemetry/TelemetryProperty;)Lnet/minecraft/client/telemetry/TelemetryEventType$Builder; a
	defineAll (Ljava/util/List;)Lnet/minecraft/client/telemetry/TelemetryEventType$Builder; a
	optIn ()Lnet/minecraft/client/telemetry/TelemetryEventType$Builder; a
	register ()Lnet/minecraft/client/telemetry/TelemetryEventType; b
net/minecraft/client/telemetry/TelemetryLogManager fzm
	EXPIRY_DAYS c
	LOGGER a
	RAW_EXTENSION b
	directory d
	sessionLog e
	open (Ljava/nio/file/Path;)Ljava/util/concurrent/CompletableFuture; a
	openLogger ()Ljava/util/concurrent/CompletableFuture; a
net/minecraft/client/telemetry/TelemetryProperty fzn
	ADVANCEMENT_GAME_TIME E
	ADVANCEMENT_ID D
	CLIENT_ID b
	CLIENT_MODDED g
	DEDICATED_MEMORY_KB w
	EVENT_TIMESTAMP_UTC m
	FRAME_RATE_SAMPLES r
	GAME_MODE n
	GAME_VERSION d
	LAUNCHER_NAME h
	LOAD_TIME_BOOTSTRAP_MS B
	LOAD_TIME_LOADING_OVERLAY_MS C
	LOAD_TIME_PRE_WINDOW_MS A
	LOAD_TIME_TOTAL_TIME_MS z
	MINECRAFT_SESSION_ID c
	NEW_WORLD y
	NUMBER_OF_SAMPLES u
	OPERATING_SYSTEM e
	OPT_IN l
	PLATFORM f
	REALMS_MAP_CONTENT o
	RENDER_DISTANCE v
	RENDER_TIME_SAMPLES s
	SECONDS_SINCE_LOAD p
	SERVER_MODDED j
	SERVER_TYPE k
	TICKS_SINCE_LOAD q
	TIMESTAMP_FORMATTER J
	USED_MEMORY_SAMPLES t
	USER_ID a
	WORLD_LOAD_TIME_MS x
	WORLD_SESSION_ID i
	codec H
	exportKey G
	exporter I
	id F
	bool (Ljava/lang/String;Ljava/lang/String;)Lnet/minecraft/client/telemetry/TelemetryProperty; a
	codec ()Lcom/mojang/serialization/Codec; d
	create (Ljava/lang/String;Ljava/lang/String;Lcom/mojang/serialization/Codec;Lnet/minecraft/client/telemetry/TelemetryProperty$Exporter;)Lnet/minecraft/client/telemetry/TelemetryProperty; a
	export (Lnet/minecraft/client/telemetry/TelemetryPropertyMap;Lcom/mojang/authlib/minecraft/TelemetryPropertyContainer;)V a
	exportKey ()Ljava/lang/String; c
	exporter ()Lnet/minecraft/client/telemetry/TelemetryProperty$Exporter; e
	gameLoadMeasurement (Ljava/lang/String;Ljava/lang/String;)Lnet/minecraft/client/telemetry/TelemetryProperty; f
	id ()Ljava/lang/String; b
	integer (Ljava/lang/String;Ljava/lang/String;)Lnet/minecraft/client/telemetry/TelemetryProperty; c
	longSamples (Ljava/lang/String;Ljava/lang/String;)Lnet/minecraft/client/telemetry/TelemetryProperty; g
	makeLong (Ljava/lang/String;Ljava/lang/String;)Lnet/minecraft/client/telemetry/TelemetryProperty; d
	string (Ljava/lang/String;Ljava/lang/String;)Lnet/minecraft/client/telemetry/TelemetryProperty; b
	title ()Lnet/minecraft/network/chat/MutableComponent; a
	uuid (Ljava/lang/String;Ljava/lang/String;)Lnet/minecraft/client/telemetry/TelemetryProperty; e
net/minecraft/client/telemetry/TelemetryProperty$Exporter fzn$a
net/minecraft/client/telemetry/TelemetryProperty$GameMode fzn$b
	$VALUES i
	ADVENTURE c
	CODEC f
	CREATIVE b
	HARDCORE e
	SPECTATOR d
	SURVIVAL a
	id h
	key g
	$values ()[Lnet/minecraft/client/telemetry/TelemetryProperty$GameMode; b
	getSerializedName ()Ljava/lang/String; c
	id ()I a
net/minecraft/client/telemetry/TelemetryProperty$ServerType fzn$c
	$VALUES f
	CODEC d
	LOCAL b
	OTHER c
	REALM a
	key e
	$values ()[Lnet/minecraft/client/telemetry/TelemetryProperty$ServerType; a
	getSerializedName ()Ljava/lang/String; c
net/minecraft/client/telemetry/TelemetryPropertyMap fzo
	entries a
	builder ()Lnet/minecraft/client/telemetry/TelemetryPropertyMap$Builder; a
	createCodec (Ljava/util/List;)Lcom/mojang/serialization/Codec; a
	get (Lnet/minecraft/client/telemetry/TelemetryProperty;)Ljava/lang/Object; a
	propertySet ()Ljava/util/Set; b
net/minecraft/client/telemetry/TelemetryPropertyMap$Builder fzo$a
	entries a
	build ()Lnet/minecraft/client/telemetry/TelemetryPropertyMap; a
	put (Lnet/minecraft/client/telemetry/TelemetryProperty;Ljava/lang/Object;)Lnet/minecraft/client/telemetry/TelemetryPropertyMap$Builder; a
	putAll (Lnet/minecraft/client/telemetry/TelemetryPropertyMap;)Lnet/minecraft/client/telemetry/TelemetryPropertyMap$Builder; a
	putIfNotNull (Lnet/minecraft/client/telemetry/TelemetryProperty;Ljava/lang/Object;)Lnet/minecraft/client/telemetry/TelemetryPropertyMap$Builder; b
net/minecraft/client/telemetry/WorldSessionTelemetryManager fzp
	eventSender b
	performanceMetricsEvent e
	worldLoadEvent c
	worldLoadTimesEvent f
	worldSessionId a
	worldUnloadEvent d
	onAdvancementDone (Lnet/minecraft/world/level/Level;Lnet/minecraft/advancements/Advancement;)V a
	onDisconnect ()V c
	onPlayerInfoReceived (Lnet/minecraft/world/level/GameType;Z)V a
	onServerBrandReceived (Ljava/lang/String;)V a
	setTime (J)V a
	tick ()V a
	worldSessionStart ()V b
net/minecraft/client/telemetry/events/AggregatedTelemetryEvent fzq
	SAMPLES_PER_EVENT b
	SAMPLE_INTERVAL_MS a
	lastSampleTime e
	sampleCount c
	ticking d
	getSampleCount ()I e
	sendEvent (Lnet/minecraft/client/telemetry/TelemetryEventSender;)V b
	shouldSentEvent ()Z c
	shouldTakeSample ()Z b
	start ()V a
	stop ()V d
	takeSample ()V f
	tick (Lnet/minecraft/client/telemetry/TelemetryEventSender;)V a
net/minecraft/client/telemetry/events/GameLoadTimesEvent fzr
	INSTANCE a
	LOGGER b
	bootstrapTime e
	measurements d
	timeSource c
	beginStep (Lnet/minecraft/client/telemetry/TelemetryProperty;)V a
	beginStep (Lnet/minecraft/client/telemetry/TelemetryProperty;Lcom/google/common/base/Stopwatch;)V a
	beginStep (Lnet/minecraft/client/telemetry/TelemetryProperty;Ljava/util/function/Function;)V a
	endStep (Lnet/minecraft/client/telemetry/TelemetryProperty;)V b
	send (Lnet/minecraft/client/telemetry/TelemetryEventSender;)V a
	setBootstrapTime (J)V a
net/minecraft/client/telemetry/events/GameLoadTimesEvent$Measurement fzr$a
	CODEC a
	millis b
	millis ()I a
net/minecraft/client/telemetry/events/PerformanceMetricsEvent fzs
	DEDICATED_MEMORY_KB a
	fpsSamples b
	frameTimeSamples c
	usedMemorySamples d
	resetValues ()V g
	sendEvent (Lnet/minecraft/client/telemetry/TelemetryEventSender;)V b
	takeSample ()V f
	takeUsedMemorySample ()V h
	tick (Lnet/minecraft/client/telemetry/TelemetryEventSender;)V a
	toKilobytes (J)J a
net/minecraft/client/telemetry/events/WorldLoadEvent fzt
	eventSent a
	gameMode b
	minigameName d
	serverBrand c
	addProperties (Lnet/minecraft/client/telemetry/TelemetryPropertyMap$Builder;)V a
	getServerType ()Lnet/minecraft/client/telemetry/TelemetryProperty$ServerType; a
	send (Lnet/minecraft/client/telemetry/TelemetryEventSender;)Z a
	setGameMode (Lnet/minecraft/world/level/GameType;Z)V a
	setServerBrand (Ljava/lang/String;)V a
net/minecraft/client/telemetry/events/WorldLoadTimesEvent fzu
	newWorld a
	worldLoadDuration b
	send (Lnet/minecraft/client/telemetry/TelemetryEventSender;)V a
net/minecraft/client/telemetry/events/WorldUnloadEvent fzv
	NOT_TRACKING_TIME a
	lastGameTime d
	totalTicks c
	worldLoadedTime b
	getTimeInSecondsSinceLoad (Ljava/time/Instant;)I a
	onPlayerInfoReceived ()V a
	send (Lnet/minecraft/client/telemetry/TelemetryEventSender;)V a
	setTime (J)V a
net/minecraft/client/tutorial/BundleTutorial fzy
	options b
	toast c
	tutorial a
	clearToast ()V b
	onInventoryAction (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/inventory/ClickAction;)V a
	showToast ()V a
net/minecraft/client/tutorial/CompletedTutorialStepInstance fzz
net/minecraft/client/tutorial/CraftPlanksTutorialStep gaa
	CRAFT_DESCRIPTION c
	CRAFT_TITLE b
	HINT_DELAY a
	timeWaiting f
	toast e
	tutorial d
	clear ()V b
	hasCraftedPlanksPreviously (Lnet/minecraft/client/player/LocalPlayer;Lnet/minecraft/tags/TagKey;)Z a
	onGetItem (Lnet/minecraft/world/item/ItemStack;)V a
	tick ()V a
net/minecraft/client/tutorial/FindTreeTutorialStepInstance gab
	DESCRIPTION c
	HINT_DELAY a
	TITLE b
	timeWaiting f
	toast e
	tutorial d
	clear ()V b
	hasCollectedTreeItems (Lnet/minecraft/client/player/LocalPlayer;)Z b
	hasPunchedTreesPreviously (Lnet/minecraft/client/player/LocalPlayer;)Z a
	onGetItem (Lnet/minecraft/world/item/ItemStack;)V a
	onLookAt (Lnet/minecraft/client/multiplayer/ClientLevel;Lnet/minecraft/world/phys/HitResult;)V a
	tick ()V a
net/minecraft/client/tutorial/MovementTutorialStepInstance gac
	INCOMPLETE e
	LOOK_DESCRIPTION i
	LOOK_HINT_DELAY d
	LOOK_TITLE h
	MINIMUM_TIME_LOOKED b
	MINIMUM_TIME_MOVED a
	MOVE_DESCRIPTION g
	MOVE_HINT_DELAY c
	MOVE_TITLE f
	lookCompleted s
	lookToast l
	moveCompleted r
	moveToast k
	moved p
	timeLooked o
	timeMoved n
	timeWaiting m
	turned q
	tutorial j
	clear ()V b
	onInput (Lnet/minecraft/client/player/Input;)V a
	onMouse (DD)V a
	tick ()V a
net/minecraft/client/tutorial/OpenInventoryTutorialStep gad
	DESCRIPTION c
	HINT_DELAY a
	TITLE b
	timeWaiting f
	toast e
	tutorial d
	clear ()V b
	onOpenInventory ()V c
	tick ()V a
net/minecraft/client/tutorial/PunchTreeTutorialStepInstance gae
	DESCRIPTION c
	HINT_DELAY a
	TITLE b
	resetCount g
	timeWaiting f
	toast e
	tutorial d
	clear ()V b
	onDestroyBlock (Lnet/minecraft/client/multiplayer/ClientLevel;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;F)V a
	onGetItem (Lnet/minecraft/world/item/ItemStack;)V a
	tick ()V a
net/minecraft/client/tutorial/Tutorial gaf
	bundleTutorial d
	instance b
	minecraft a
	timedToasts c
	addTimedToast (Lnet/minecraft/client/gui/components/toasts/TutorialToast;I)V a
	getMinecraft ()Lnet/minecraft/client/Minecraft; e
	isSurvival ()Z f
	key (Ljava/lang/String;)Lnet/minecraft/network/chat/Component; a
	onDestroyBlock (Lnet/minecraft/client/multiplayer/ClientLevel;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;F)V a
	onGetItem (Lnet/minecraft/world/item/ItemStack;)V a
	onInput (Lnet/minecraft/client/player/Input;)V a
	onInventoryAction (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/inventory/ClickAction;)V a
	onLookAt (Lnet/minecraft/client/multiplayer/ClientLevel;Lnet/minecraft/world/phys/HitResult;)V a
	onMouse (DD)V a
	onOpenInventory ()V a
	removeTimedToast (Lnet/minecraft/client/gui/components/toasts/TutorialToast;)V a
	setStep (Lnet/minecraft/client/tutorial/TutorialSteps;)V a
	start ()V c
	stop ()V b
	tick ()V d
net/minecraft/client/tutorial/Tutorial$TimedToast gaf$a
	durationTicks b
	progress c
	toast a
	updateProgress ()Z a
net/minecraft/client/tutorial/TutorialStepInstance gag
	clear ()V b
	onDestroyBlock (Lnet/minecraft/client/multiplayer/ClientLevel;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;F)V a
	onGetItem (Lnet/minecraft/world/item/ItemStack;)V a
	onInput (Lnet/minecraft/client/player/Input;)V a
	onLookAt (Lnet/minecraft/client/multiplayer/ClientLevel;Lnet/minecraft/world/phys/HitResult;)V a
	onMouse (DD)V a
	onOpenInventory ()V c
	tick ()V a
net/minecraft/client/tutorial/TutorialSteps gah
	$VALUES i
	CRAFT_PLANKS e
	FIND_TREE b
	MOVEMENT a
	NONE f
	OPEN_INVENTORY d
	PUNCH_TREE c
	constructor h
	name g
	$values ()[Lnet/minecraft/client/tutorial/TutorialSteps; b
	create (Lnet/minecraft/client/tutorial/Tutorial;)Lnet/minecraft/client/tutorial/TutorialStepInstance; a
	getByName (Ljava/lang/String;)Lnet/minecraft/client/tutorial/TutorialSteps; a
	getName ()Ljava/lang/String; a
net/minecraft/commands/BrigadierExceptions dl
	DISPATCHER_EXPECTED_ARGUMENT_SEPARATOR z
	DISPATCHER_PARSE_EXCEPTION A
	DISPATCHER_UNKNOWN_ARGUMENT y
	DISPATCHER_UNKNOWN_COMMAND x
	DOUBLE_TOO_BIG b
	DOUBLE_TOO_SMALL a
	FLOAT_TOO_BIG d
	FLOAT_TOO_SMALL c
	INTEGER_TOO_BIG f
	INTEGER_TOO_SMALL e
	LITERAL_INCORRECT i
	LONG_TOO_BIG h
	LONG_TOO_SMALL g
	READER_EXPECTED_BOOL v
	READER_EXPECTED_DOUBLE s
	READER_EXPECTED_END_OF_QUOTE k
	READER_EXPECTED_FLOAT u
	READER_EXPECTED_INT o
	READER_EXPECTED_LONG q
	READER_EXPECTED_START_OF_QUOTE j
	READER_EXPECTED_SYMBOL w
	READER_INVALID_BOOL m
	READER_INVALID_DOUBLE r
	READER_INVALID_ESCAPE l
	READER_INVALID_FLOAT t
	READER_INVALID_INT n
	READER_INVALID_LONG p
net/minecraft/commands/CommandBuildContext dm
	configurable (Lnet/minecraft/core/RegistryAccess;Lnet/minecraft/world/flag/FeatureFlagSet;)Lnet/minecraft/commands/CommandBuildContext$Configurable; a
	holderLookup (Lnet/minecraft/resources/ResourceKey;)Lnet/minecraft/core/HolderLookup; a
	simple (Lnet/minecraft/core/HolderLookup$Provider;Lnet/minecraft/world/flag/FeatureFlagSet;)Lnet/minecraft/commands/CommandBuildContext; a
net/minecraft/commands/CommandBuildContext$Configurable dm$a
	missingTagAccessPolicy (Lnet/minecraft/commands/CommandBuildContext$MissingTagAccessPolicy;)V a
net/minecraft/commands/CommandBuildContext$MissingTagAccessPolicy dm$b
	$VALUES c
	CREATE_NEW a
	FAIL b
	$values ()[Lnet/minecraft/commands/CommandBuildContext$MissingTagAccessPolicy; a
net/minecraft/commands/CommandFunction dn
	entries a
	id b
	fromLines (Lnet/minecraft/resources/ResourceLocation;Lcom/mojang/brigadier/CommandDispatcher;Lnet/minecraft/commands/CommandSourceStack;Ljava/util/List;)Lnet/minecraft/commands/CommandFunction; a
	getEntries ()[Lnet/minecraft/commands/CommandFunction$Entry; b
	getId ()Lnet/minecraft/resources/ResourceLocation; a
net/minecraft/commands/CommandFunction$CacheableFunction dn$a
	NONE a
	function d
	id b
	resolved c
	get (Lnet/minecraft/server/ServerFunctionManager;)Ljava/util/Optional; a
	getId ()Lnet/minecraft/resources/ResourceLocation; a
net/minecraft/commands/CommandFunction$CommandEntry dn$b
	parse a
	execute (Lnet/minecraft/server/ServerFunctionManager;Lnet/minecraft/commands/CommandSourceStack;)I a
net/minecraft/commands/CommandFunction$Entry dn$c
net/minecraft/commands/CommandFunction$FunctionEntry dn$d
	function a
net/minecraft/commands/CommandRuntimeException dp
	message a
	getComponent ()Lnet/minecraft/network/chat/Component; a
net/minecraft/commands/CommandSigningContext dq
	ANONYMOUS a
	getArgument (Ljava/lang/String;)Lnet/minecraft/network/chat/PlayerChatMessage; a
net/minecraft/commands/CommandSigningContext$SignedArguments dq$a
	arguments b
	arguments ()Ljava/util/Map; a
	getArgument (Ljava/lang/String;)Lnet/minecraft/network/chat/PlayerChatMessage; a
net/minecraft/commands/CommandSource dr
	NULL a
	acceptsFailure ()Z q_
	acceptsSuccess ()Z e_
	alwaysAccepts ()Z f_
	sendSystemMessage (Lnet/minecraft/network/chat/Component;)V a
	shouldInformAdmins ()Z N_
net/minecraft/commands/CommandSourceStack ds
	ERROR_NOT_ENTITY b
	ERROR_NOT_PLAYER a
	anchor m
	chatMessageChainer p
	consumer l
	displayName h
	entity k
	level e
	permissionLevel f
	returnValueConsumer q
	rotation n
	server i
	signingContext o
	silent j
	source c
	textName g
	worldPosition d
	broadcastToAdmins (Lnet/minecraft/network/chat/Component;)V c
	customSuggestion (Lcom/mojang/brigadier/context/CommandContext;)Ljava/util/concurrent/CompletableFuture; a
	enabledFeatures ()Lnet/minecraft/world/flag/FeatureFlagSet; w
	facing (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/commands/arguments/EntityAnchorArgument$Anchor;)Lnet/minecraft/commands/CommandSourceStack; a
	facing (Lnet/minecraft/world/phys/Vec3;)Lnet/minecraft/commands/CommandSourceStack; b
	getAllTeams ()Ljava/util/Collection; r
	getAnchor ()Lnet/minecraft/commands/arguments/EntityAnchorArgument$Anchor; m
	getAvailableSounds ()Ljava/util/stream/Stream; s
	getChatMessageChainer ()Lnet/minecraft/util/TaskChainer; o
	getDisplayName ()Lnet/minecraft/network/chat/Component; b
	getEntity ()Lnet/minecraft/world/entity/Entity; f
	getEntityOrException ()Lnet/minecraft/world/entity/Entity; g
	getLevel ()Lnet/minecraft/server/level/ServerLevel; e
	getOnlinePlayerNames ()Ljava/util/Collection; q
	getPlayer ()Lnet/minecraft/server/level/ServerPlayer; i
	getPlayerOrException ()Lnet/minecraft/server/level/ServerPlayer; h
	getPosition ()Lnet/minecraft/world/phys/Vec3; d
	getRecipeNames ()Ljava/util/stream/Stream; t
	getReturnValueConsumer ()Ljava/util/function/IntConsumer; p
	getRotation ()Lnet/minecraft/world/phys/Vec2; k
	getServer ()Lnet/minecraft/server/MinecraftServer; l
	getSigningContext ()Lnet/minecraft/commands/CommandSigningContext; n
	getTextName ()Ljava/lang/String; c
	hasPermission (I)Z c
	isPlayer ()Z j
	levels ()Ljava/util/Set; u
	onCommandComplete (Lcom/mojang/brigadier/context/CommandContext;ZI)V a
	registryAccess ()Lnet/minecraft/core/RegistryAccess; v
	sendChatMessage (Lnet/minecraft/network/chat/OutgoingChatMessage;ZLnet/minecraft/network/chat/ChatType$Bound;)V a
	sendFailure (Lnet/minecraft/network/chat/Component;)V b
	sendSuccess (Ljava/util/function/Supplier;Z)V a
	sendSystemMessage (Lnet/minecraft/network/chat/Component;)V a
	shouldFilterMessageTo (Lnet/minecraft/server/level/ServerPlayer;)Z a
	suggestRegistryElements (Lnet/minecraft/resources/ResourceKey;Lnet/minecraft/commands/SharedSuggestionProvider$ElementSuggestionType;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Lcom/mojang/brigadier/context/CommandContext;)Ljava/util/concurrent/CompletableFuture; a
	withAnchor (Lnet/minecraft/commands/arguments/EntityAnchorArgument$Anchor;)Lnet/minecraft/commands/CommandSourceStack; a
	withCallback (Lcom/mojang/brigadier/ResultConsumer;)Lnet/minecraft/commands/CommandSourceStack; a
	withCallback (Lcom/mojang/brigadier/ResultConsumer;Ljava/util/function/BinaryOperator;)Lnet/minecraft/commands/CommandSourceStack; a
	withChatMessageChainer (Lnet/minecraft/util/TaskChainer;)Lnet/minecraft/commands/CommandSourceStack; a
	withEntity (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/commands/CommandSourceStack; a
	withLevel (Lnet/minecraft/server/level/ServerLevel;)Lnet/minecraft/commands/CommandSourceStack; a
	withMaximumPermission (I)Lnet/minecraft/commands/CommandSourceStack; b
	withPermission (I)Lnet/minecraft/commands/CommandSourceStack; a
	withPosition (Lnet/minecraft/world/phys/Vec3;)Lnet/minecraft/commands/CommandSourceStack; a
	withReturnValueConsumer (Ljava/util/function/IntConsumer;)Lnet/minecraft/commands/CommandSourceStack; a
	withRotation (Lnet/minecraft/world/phys/Vec2;)Lnet/minecraft/commands/CommandSourceStack; a
	withSigningContext (Lnet/minecraft/commands/CommandSigningContext;)Lnet/minecraft/commands/CommandSourceStack; a
	withSource (Lnet/minecraft/commands/CommandSource;)Lnet/minecraft/commands/CommandSourceStack; a
	withSuppressedOutput ()Lnet/minecraft/commands/CommandSourceStack; a
net/minecraft/commands/Commands dt
	LEVEL_ADMINS d
	LEVEL_ALL a
	LEVEL_GAMEMASTERS c
	LEVEL_MODERATORS b
	LEVEL_OWNERS e
	LOGGER f
	dispatcher g
	argument (Ljava/lang/String;Lcom/mojang/brigadier/arguments/ArgumentType;)Lcom/mojang/brigadier/builder/RequiredArgumentBuilder; a
	createValidationContext (Lnet/minecraft/core/HolderLookup$Provider;)Lnet/minecraft/commands/CommandBuildContext; a
	createValidator (Lnet/minecraft/commands/Commands$ParseFunction;)Ljava/util/function/Predicate; a
	fillUsableCommands (Lcom/mojang/brigadier/tree/CommandNode;Lcom/mojang/brigadier/tree/CommandNode;Lnet/minecraft/commands/CommandSourceStack;Ljava/util/Map;)V a
	getDispatcher ()Lcom/mojang/brigadier/CommandDispatcher; a
	getParseException (Lcom/mojang/brigadier/ParseResults;)Lcom/mojang/brigadier/exceptions/CommandSyntaxException; a
	literal (Ljava/lang/String;)Lcom/mojang/brigadier/builder/LiteralArgumentBuilder; a
	mapSource (Lcom/mojang/brigadier/ParseResults;Ljava/util/function/UnaryOperator;)Lcom/mojang/brigadier/ParseResults; a
	performCommand (Lcom/mojang/brigadier/ParseResults;Ljava/lang/String;)I a
	performPrefixedCommand (Lnet/minecraft/commands/CommandSourceStack;Ljava/lang/String;)I a
	sendCommands (Lnet/minecraft/server/level/ServerPlayer;)V a
	validate ()V b
net/minecraft/commands/Commands$CommandSelection dt$a
	$VALUES f
	ALL a
	DEDICATED b
	INTEGRATED c
	includeDedicated e
	includeIntegrated d
	$values ()[Lnet/minecraft/commands/Commands$CommandSelection; a
net/minecraft/commands/Commands$ParseFunction dt$b
net/minecraft/commands/SharedSuggestionProvider du
	customSuggestion (Lcom/mojang/brigadier/context/CommandContext;)Ljava/util/concurrent/CompletableFuture; a
	enabledFeatures ()Lnet/minecraft/world/flag/FeatureFlagSet; w
	filterResources (Ljava/lang/Iterable;Ljava/lang/String;Ljava/lang/String;Ljava/util/function/Function;Ljava/util/function/Consumer;)V a
	filterResources (Ljava/lang/Iterable;Ljava/lang/String;Ljava/util/function/Function;Ljava/util/function/Consumer;)V a
	getAbsoluteCoordinates ()Ljava/util/Collection; A
	getAllTeams ()Ljava/util/Collection; r
	getAvailableSounds ()Ljava/util/stream/Stream; s
	getCustomTabSugggestions ()Ljava/util/Collection; x
	getOnlinePlayerNames ()Ljava/util/Collection; q
	getRecipeNames ()Ljava/util/stream/Stream; t
	getRelevantCoordinates ()Ljava/util/Collection; z
	getSelectedEntities ()Ljava/util/Collection; y
	hasPermission (I)Z c
	levels ()Ljava/util/Set; u
	matchesSubStr (Ljava/lang/String;Ljava/lang/String;)Z a
	registryAccess ()Lnet/minecraft/core/RegistryAccess; v
	suggest (Ljava/lang/Iterable;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture; b
	suggest (Ljava/lang/Iterable;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Ljava/util/function/Function;Ljava/util/function/Function;)Ljava/util/concurrent/CompletableFuture; b
	suggest (Ljava/util/stream/Stream;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture; b
	suggest ([Ljava/lang/String;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture; a
	suggest2DCoordinates (Ljava/lang/String;Ljava/util/Collection;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Ljava/util/function/Predicate;)Ljava/util/concurrent/CompletableFuture; b
	suggestCoordinates (Ljava/lang/String;Ljava/util/Collection;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Ljava/util/function/Predicate;)Ljava/util/concurrent/CompletableFuture; a
	suggestRegistryElements (Lnet/minecraft/core/Registry;Lnet/minecraft/commands/SharedSuggestionProvider$ElementSuggestionType;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)V a
	suggestRegistryElements (Lnet/minecraft/resources/ResourceKey;Lnet/minecraft/commands/SharedSuggestionProvider$ElementSuggestionType;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Lcom/mojang/brigadier/context/CommandContext;)Ljava/util/concurrent/CompletableFuture; a
	suggestResource (Ljava/lang/Iterable;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture; a
	suggestResource (Ljava/lang/Iterable;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Ljava/lang/String;)Ljava/util/concurrent/CompletableFuture; a
	suggestResource (Ljava/lang/Iterable;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Ljava/util/function/Function;Ljava/util/function/Function;)Ljava/util/concurrent/CompletableFuture; a
	suggestResource (Ljava/util/stream/Stream;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture; a
	suggestResource (Ljava/util/stream/Stream;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Ljava/lang/String;)Ljava/util/concurrent/CompletableFuture; a
	suggestResource (Ljava/util/stream/Stream;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Ljava/util/function/Function;Ljava/util/function/Function;)Ljava/util/concurrent/CompletableFuture; a
net/minecraft/commands/SharedSuggestionProvider$ElementSuggestionType du$a
	$VALUES d
	ALL c
	ELEMENTS b
	TAGS a
	$values ()[Lnet/minecraft/commands/SharedSuggestionProvider$ElementSuggestionType; c
	shouldSuggestElements ()Z b
	shouldSuggestTags ()Z a
net/minecraft/commands/SharedSuggestionProvider$TextCoordinates du$b
	DEFAULT_GLOBAL b
	DEFAULT_LOCAL a
	x c
	y d
	z e
net/minecraft/commands/arguments/AngleArgument dv
	ERROR_INVALID_ANGLE b
	ERROR_NOT_COMPLETE a
	EXAMPLES c
	angle ()Lnet/minecraft/commands/arguments/AngleArgument; a
	getAngle (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)F a
	parse (Lcom/mojang/brigadier/StringReader;)Lnet/minecraft/commands/arguments/AngleArgument$SingleAngle; a
net/minecraft/commands/arguments/AngleArgument$SingleAngle dv$a
	angle a
	isRelative b
	getAngle (Lnet/minecraft/commands/CommandSourceStack;)F a
net/minecraft/commands/arguments/ArgumentSignatures dw
	EMPTY a
	MAX_ARGUMENT_COUNT c
	MAX_ARGUMENT_NAME_LENGTH d
	entries b
	entries ()Ljava/util/List; a
	get (Ljava/lang/String;)Lnet/minecraft/network/chat/MessageSignature; a
	signCommand (Lnet/minecraft/network/chat/SignableCommand;Lnet/minecraft/commands/arguments/ArgumentSignatures$Signer;)Lnet/minecraft/commands/arguments/ArgumentSignatures; a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/commands/arguments/ArgumentSignatures$Entry dw$a
	name a
	signature b
	name ()Ljava/lang/String; a
	signature ()Lnet/minecraft/network/chat/MessageSignature; b
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/commands/arguments/ArgumentSignatures$Signer dw$b
net/minecraft/commands/arguments/ColorArgument dx
	ERROR_INVALID_VALUE a
	EXAMPLES b
	color ()Lnet/minecraft/commands/arguments/ColorArgument; a
	getColor (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lnet/minecraft/ChatFormatting; a
	parse (Lcom/mojang/brigadier/StringReader;)Lnet/minecraft/ChatFormatting; a
net/minecraft/commands/arguments/ComponentArgument dy
	ERROR_INVALID_JSON a
	EXAMPLES b
	getComponent (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lnet/minecraft/network/chat/Component; a
	parse (Lcom/mojang/brigadier/StringReader;)Lnet/minecraft/network/chat/Component; a
	textComponent ()Lnet/minecraft/commands/arguments/ComponentArgument; a
net/minecraft/commands/arguments/CompoundTagArgument dz
	EXAMPLES a
	compoundTag ()Lnet/minecraft/commands/arguments/CompoundTagArgument; a
	getCompoundTag (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lnet/minecraft/nbt/CompoundTag; a
	parse (Lcom/mojang/brigadier/StringReader;)Lnet/minecraft/nbt/CompoundTag; a
net/minecraft/commands/arguments/DimensionArgument ea
	ERROR_INVALID_VALUE b
	EXAMPLES a
	dimension ()Lnet/minecraft/commands/arguments/DimensionArgument; a
	getDimension (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lnet/minecraft/server/level/ServerLevel; a
	parse (Lcom/mojang/brigadier/StringReader;)Lnet/minecraft/resources/ResourceLocation; a
net/minecraft/commands/arguments/EntityAnchorArgument eb
	ERROR_INVALID b
	EXAMPLES a
	anchor ()Lnet/minecraft/commands/arguments/EntityAnchorArgument; a
	getAnchor (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lnet/minecraft/commands/arguments/EntityAnchorArgument$Anchor; a
	parse (Lcom/mojang/brigadier/StringReader;)Lnet/minecraft/commands/arguments/EntityAnchorArgument$Anchor; a
net/minecraft/commands/arguments/EntityAnchorArgument$Anchor eb$a
	$VALUES f
	BY_NAME c
	EYES b
	FEET a
	name d
	transform e
	$values ()[Lnet/minecraft/commands/arguments/EntityAnchorArgument$Anchor; a
	apply (Lnet/minecraft/commands/CommandSourceStack;)Lnet/minecraft/world/phys/Vec3; a
	apply (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/world/phys/Vec3; a
	getByName (Ljava/lang/String;)Lnet/minecraft/commands/arguments/EntityAnchorArgument$Anchor; a
net/minecraft/commands/arguments/EntityArgument ec
	ERROR_NOT_SINGLE_ENTITY a
	ERROR_NOT_SINGLE_PLAYER b
	ERROR_ONLY_PLAYERS_ALLOWED c
	ERROR_SELECTORS_NOT_ALLOWED f
	EXAMPLES g
	NO_ENTITIES_FOUND d
	NO_PLAYERS_FOUND e
	playersOnly i
	single h
	entities ()Lnet/minecraft/commands/arguments/EntityArgument; b
	entity ()Lnet/minecraft/commands/arguments/EntityArgument; a
	getEntities (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Ljava/util/Collection; b
	getEntity (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lnet/minecraft/world/entity/Entity; a
	getOptionalEntities (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Ljava/util/Collection; c
	getOptionalPlayers (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Ljava/util/Collection; d
	getPlayer (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lnet/minecraft/server/level/ServerPlayer; e
	getPlayers (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Ljava/util/Collection; f
	parse (Lcom/mojang/brigadier/StringReader;)Lnet/minecraft/commands/arguments/selector/EntitySelector; a
	player ()Lnet/minecraft/commands/arguments/EntityArgument; c
	players ()Lnet/minecraft/commands/arguments/EntityArgument; d
net/minecraft/commands/arguments/EntityArgument$Info ec$a
	FLAG_PLAYERS_ONLY b
	FLAG_SINGLE a
	deserializeFromNetwork (Lnet/minecraft/network/FriendlyByteBuf;)Lnet/minecraft/commands/arguments/EntityArgument$Info$Template; a
	deserializeFromNetwork (Lnet/minecraft/network/FriendlyByteBuf;)Lnet/minecraft/commands/synchronization/ArgumentTypeInfo$Template; b
	serializeToJson (Lnet/minecraft/commands/arguments/EntityArgument$Info$Template;Lcom/google/gson/JsonObject;)V a
	serializeToJson (Lnet/minecraft/commands/synchronization/ArgumentTypeInfo$Template;Lcom/google/gson/JsonObject;)V a
	serializeToNetwork (Lnet/minecraft/commands/arguments/EntityArgument$Info$Template;Lnet/minecraft/network/FriendlyByteBuf;)V a
	serializeToNetwork (Lnet/minecraft/commands/synchronization/ArgumentTypeInfo$Template;Lnet/minecraft/network/FriendlyByteBuf;)V a
	unpack (Lcom/mojang/brigadier/arguments/ArgumentType;)Lnet/minecraft/commands/synchronization/ArgumentTypeInfo$Template; a
	unpack (Lnet/minecraft/commands/arguments/EntityArgument;)Lnet/minecraft/commands/arguments/EntityArgument$Info$Template; a
net/minecraft/commands/arguments/EntityArgument$Info$Template ec$a$a
	playersOnly c
	single b
	instantiate (Lnet/minecraft/commands/CommandBuildContext;)Lcom/mojang/brigadier/arguments/ArgumentType; b
	instantiate (Lnet/minecraft/commands/CommandBuildContext;)Lnet/minecraft/commands/arguments/EntityArgument; a
	type ()Lnet/minecraft/commands/synchronization/ArgumentTypeInfo; a
net/minecraft/commands/arguments/GameModeArgument ed
	ERROR_INVALID c
	EXAMPLES a
	VALUES b
	gameMode ()Lnet/minecraft/commands/arguments/GameModeArgument; a
	getGameMode (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lnet/minecraft/world/level/GameType; a
	parse (Lcom/mojang/brigadier/StringReader;)Lnet/minecraft/world/level/GameType; a
net/minecraft/commands/arguments/GameProfileArgument ee
	ERROR_UNKNOWN_PLAYER a
	EXAMPLES b
	gameProfile ()Lnet/minecraft/commands/arguments/GameProfileArgument; a
	getGameProfiles (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Ljava/util/Collection; a
	parse (Lcom/mojang/brigadier/StringReader;)Lnet/minecraft/commands/arguments/GameProfileArgument$Result; a
net/minecraft/commands/arguments/GameProfileArgument$Result ee$a
net/minecraft/commands/arguments/GameProfileArgument$SelectorResult ee$b
	selector a
net/minecraft/commands/arguments/HeightmapTypeArgument ef
	LOWER_CASE_CODEC a
	convertId (Ljava/lang/String;)Ljava/lang/String; a
	getHeightmap (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lnet/minecraft/world/level/levelgen/Heightmap$Types; a
	heightmap ()Lnet/minecraft/commands/arguments/HeightmapTypeArgument; a
	keptTypes ()[Lnet/minecraft/world/level/levelgen/Heightmap$Types; b
net/minecraft/commands/arguments/MessageArgument eg
	EXAMPLES a
	filterPlainText (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/network/chat/PlayerChatMessage;)Ljava/util/concurrent/CompletableFuture; a
	getMessage (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lnet/minecraft/network/chat/Component; a
	message ()Lnet/minecraft/commands/arguments/MessageArgument; a
	parse (Lcom/mojang/brigadier/StringReader;)Lnet/minecraft/commands/arguments/MessageArgument$Message; a
	resolveChatMessage (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;Ljava/util/function/Consumer;)V a
	resolveDisguisedMessage (Ljava/util/function/Consumer;Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/network/chat/PlayerChatMessage;)V b
	resolveSignedMessage (Ljava/util/function/Consumer;Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/network/chat/PlayerChatMessage;)V a
net/minecraft/commands/arguments/MessageArgument$Message eg$a
	parts b
	text a
	getParts ()[Lnet/minecraft/commands/arguments/MessageArgument$Part; b
	getText ()Ljava/lang/String; a
	parseText (Lcom/mojang/brigadier/StringReader;Z)Lnet/minecraft/commands/arguments/MessageArgument$Message; a
	resolveComponent (Lnet/minecraft/commands/CommandSourceStack;)Lnet/minecraft/network/chat/Component; a
	toComponent (Lnet/minecraft/commands/CommandSourceStack;Z)Lnet/minecraft/network/chat/Component; a
net/minecraft/commands/arguments/MessageArgument$Part eg$b
	end b
	selector c
	start a
	getEnd ()I b
	getSelector ()Lnet/minecraft/commands/arguments/selector/EntitySelector; c
	getStart ()I a
	toComponent (Lnet/minecraft/commands/CommandSourceStack;)Lnet/minecraft/network/chat/Component; a
net/minecraft/commands/arguments/NbtPathArgument eh
	ERROR_DATA_TOO_DEEP b
	ERROR_EXPECTED_LIST e
	ERROR_INVALID_INDEX f
	ERROR_INVALID_NODE a
	ERROR_NOTHING_FOUND c
	EXAMPLES d
	INDEX_MATCH_END h
	INDEX_MATCH_START g
	KEY_MATCH_END j
	KEY_MATCH_START i
	QUOTED_KEY_START k
	SINGLE_QUOTED_KEY_START l
	createTagPredicate (Lnet/minecraft/nbt/CompoundTag;)Ljava/util/function/Predicate; a
	getPath (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lnet/minecraft/commands/arguments/NbtPathArgument$NbtPath; a
	isAllowedInUnquotedName (C)Z a
	nbtPath ()Lnet/minecraft/commands/arguments/NbtPathArgument; a
	parse (Lcom/mojang/brigadier/StringReader;)Lnet/minecraft/commands/arguments/NbtPathArgument$NbtPath; a
	parseNode (Lcom/mojang/brigadier/StringReader;Z)Lnet/minecraft/commands/arguments/NbtPathArgument$Node; a
	readObjectNode (Lcom/mojang/brigadier/StringReader;Ljava/lang/String;)Lnet/minecraft/commands/arguments/NbtPathArgument$Node; a
	readUnquotedName (Lcom/mojang/brigadier/StringReader;)Ljava/lang/String; b
net/minecraft/commands/arguments/NbtPathArgument$AllElementsNode eh$a
	INSTANCE a
	createPreferredParentTag ()Lnet/minecraft/nbt/Tag; a
	getOrCreateTag (Lnet/minecraft/nbt/Tag;Ljava/util/function/Supplier;Ljava/util/List;)V a
	getTag (Lnet/minecraft/nbt/Tag;Ljava/util/List;)V a
	removeTag (Lnet/minecraft/nbt/Tag;)I a
	setTag (Lnet/minecraft/nbt/Tag;Ljava/util/function/Supplier;)I a
net/minecraft/commands/arguments/NbtPathArgument$CompoundChildNode eh$b
	name a
	createPreferredParentTag ()Lnet/minecraft/nbt/Tag; a
	getOrCreateTag (Lnet/minecraft/nbt/Tag;Ljava/util/function/Supplier;Ljava/util/List;)V a
	getTag (Lnet/minecraft/nbt/Tag;Ljava/util/List;)V a
	removeTag (Lnet/minecraft/nbt/Tag;)I a
	setTag (Lnet/minecraft/nbt/Tag;Ljava/util/function/Supplier;)I a
net/minecraft/commands/arguments/NbtPathArgument$IndexedElementNode eh$c
	index a
	createPreferredParentTag ()Lnet/minecraft/nbt/Tag; a
	getOrCreateTag (Lnet/minecraft/nbt/Tag;Ljava/util/function/Supplier;Ljava/util/List;)V a
	getTag (Lnet/minecraft/nbt/Tag;Ljava/util/List;)V a
	removeTag (Lnet/minecraft/nbt/Tag;)I a
	setTag (Lnet/minecraft/nbt/Tag;Ljava/util/function/Supplier;)I a
net/minecraft/commands/arguments/NbtPathArgument$MatchElementNode eh$d
	pattern a
	predicate b
	createPreferredParentTag ()Lnet/minecraft/nbt/Tag; a
	getOrCreateTag (Lnet/minecraft/nbt/Tag;Ljava/util/function/Supplier;Ljava/util/List;)V a
	getTag (Lnet/minecraft/nbt/Tag;Ljava/util/List;)V a
	removeTag (Lnet/minecraft/nbt/Tag;)I a
	setTag (Lnet/minecraft/nbt/Tag;Ljava/util/function/Supplier;)I a
net/minecraft/commands/arguments/NbtPathArgument$MatchObjectNode eh$e
	name a
	pattern b
	predicate c
	createPreferredParentTag ()Lnet/minecraft/nbt/Tag; a
	getOrCreateTag (Lnet/minecraft/nbt/Tag;Ljava/util/function/Supplier;Ljava/util/List;)V a
	getTag (Lnet/minecraft/nbt/Tag;Ljava/util/List;)V a
	removeTag (Lnet/minecraft/nbt/Tag;)I a
	setTag (Lnet/minecraft/nbt/Tag;Ljava/util/function/Supplier;)I a
net/minecraft/commands/arguments/NbtPathArgument$MatchRootObjectNode eh$f
	predicate a
	createPreferredParentTag ()Lnet/minecraft/nbt/Tag; a
	getOrCreateTag (Lnet/minecraft/nbt/Tag;Ljava/util/function/Supplier;Ljava/util/List;)V a
	getTag (Lnet/minecraft/nbt/Tag;Ljava/util/List;)V a
	removeTag (Lnet/minecraft/nbt/Tag;)I a
	setTag (Lnet/minecraft/nbt/Tag;Ljava/util/function/Supplier;)I a
net/minecraft/commands/arguments/NbtPathArgument$NbtPath eh$g
	nodeToOriginalPosition b
	nodes c
	original a
	apply (Ljava/util/List;Ljava/util/function/Function;)I a
	countMatching (Lnet/minecraft/nbt/Tag;)I b
	createNotFoundException (Lnet/minecraft/commands/arguments/NbtPathArgument$Node;)Lcom/mojang/brigadier/exceptions/CommandSyntaxException; a
	estimatePathDepth ()I a
	get (Lnet/minecraft/nbt/Tag;)Ljava/util/List; a
	getOrCreate (Lnet/minecraft/nbt/Tag;Ljava/util/function/Supplier;)Ljava/util/List; a
	getOrCreateParents (Lnet/minecraft/nbt/Tag;)Ljava/util/List; d
	insert (ILnet/minecraft/nbt/CompoundTag;Ljava/util/List;)I a
	isTooDeep (Lnet/minecraft/nbt/Tag;I)Z a
	remove (Lnet/minecraft/nbt/Tag;)I c
	set (Lnet/minecraft/nbt/Tag;Lnet/minecraft/nbt/Tag;)I a
net/minecraft/commands/arguments/NbtPathArgument$Node eh$h
	collect (Ljava/util/List;Ljava/util/function/BiConsumer;)Ljava/util/List; a
	createPreferredParentTag ()Lnet/minecraft/nbt/Tag; a
	get (Ljava/util/List;)Ljava/util/List; a
	getOrCreate (Ljava/util/List;Ljava/util/function/Supplier;)Ljava/util/List; a
	getOrCreateTag (Lnet/minecraft/nbt/Tag;Ljava/util/function/Supplier;Ljava/util/List;)V a
	getTag (Lnet/minecraft/nbt/Tag;Ljava/util/List;)V a
	removeTag (Lnet/minecraft/nbt/Tag;)I a
	setTag (Lnet/minecraft/nbt/Tag;Ljava/util/function/Supplier;)I a
net/minecraft/commands/arguments/NbtTagArgument ei
	EXAMPLES a
	getNbtTag (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lnet/minecraft/nbt/Tag; a
	nbtTag ()Lnet/minecraft/commands/arguments/NbtTagArgument; a
	parse (Lcom/mojang/brigadier/StringReader;)Lnet/minecraft/nbt/Tag; a
net/minecraft/commands/arguments/ObjectiveArgument ej
	ERROR_OBJECTIVE_NOT_FOUND b
	ERROR_OBJECTIVE_READ_ONLY c
	EXAMPLES a
	getObjective (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lnet/minecraft/world/scores/Objective; a
	getWritableObjective (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lnet/minecraft/world/scores/Objective; b
	objective ()Lnet/minecraft/commands/arguments/ObjectiveArgument; a
	parse (Lcom/mojang/brigadier/StringReader;)Ljava/lang/String; a
net/minecraft/commands/arguments/ObjectiveCriteriaArgument ek
	ERROR_INVALID_VALUE a
	EXAMPLES b
	criteria ()Lnet/minecraft/commands/arguments/ObjectiveCriteriaArgument; a
	getCriteria (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lnet/minecraft/world/scores/criteria/ObjectiveCriteria; a
	getName (Lnet/minecraft/stats/StatType;Ljava/lang/Object;)Ljava/lang/String; a
	parse (Lcom/mojang/brigadier/StringReader;)Lnet/minecraft/world/scores/criteria/ObjectiveCriteria; a
net/minecraft/commands/arguments/OperationArgument el
	ERROR_DIVIDE_BY_ZERO c
	ERROR_INVALID_OPERATION b
	EXAMPLES a
	getOperation (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lnet/minecraft/commands/arguments/OperationArgument$Operation; a
	getOperation (Ljava/lang/String;)Lnet/minecraft/commands/arguments/OperationArgument$Operation; a
	getSimpleOperation (Ljava/lang/String;)Lnet/minecraft/commands/arguments/OperationArgument$SimpleOperation; b
	operation ()Lnet/minecraft/commands/arguments/OperationArgument; a
	parse (Lcom/mojang/brigadier/StringReader;)Lnet/minecraft/commands/arguments/OperationArgument$Operation; a
net/minecraft/commands/arguments/OperationArgument$Operation el$a
net/minecraft/commands/arguments/OperationArgument$SimpleOperation el$b
net/minecraft/commands/arguments/ParticleArgument em
	ERROR_UNKNOWN_PARTICLE a
	EXAMPLES b
	particles c
	getParticle (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lnet/minecraft/core/particles/ParticleOptions; a
	parse (Lcom/mojang/brigadier/StringReader;)Lnet/minecraft/core/particles/ParticleOptions; a
	particle (Lnet/minecraft/commands/CommandBuildContext;)Lnet/minecraft/commands/arguments/ParticleArgument; a
	readParticle (Lcom/mojang/brigadier/StringReader;Lnet/minecraft/core/HolderLookup;)Lnet/minecraft/core/particles/ParticleOptions; a
	readParticle (Lcom/mojang/brigadier/StringReader;Lnet/minecraft/core/particles/ParticleType;)Lnet/minecraft/core/particles/ParticleOptions; a
	readParticleType (Lcom/mojang/brigadier/StringReader;Lnet/minecraft/core/HolderLookup;)Lnet/minecraft/core/particles/ParticleType; b
net/minecraft/commands/arguments/RangeArgument en
	floatRange ()Lnet/minecraft/commands/arguments/RangeArgument$Floats; b
	intRange ()Lnet/minecraft/commands/arguments/RangeArgument$Ints; a
net/minecraft/commands/arguments/RangeArgument$Floats en$a
	EXAMPLES a
	getRange (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lnet/minecraft/advancements/critereon/MinMaxBounds$Doubles; a
	parse (Lcom/mojang/brigadier/StringReader;)Lnet/minecraft/advancements/critereon/MinMaxBounds$Doubles; a
net/minecraft/commands/arguments/RangeArgument$Ints en$b
	EXAMPLES a
	getRange (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lnet/minecraft/advancements/critereon/MinMaxBounds$Ints; a
	parse (Lcom/mojang/brigadier/StringReader;)Lnet/minecraft/advancements/critereon/MinMaxBounds$Ints; a
net/minecraft/commands/arguments/ResourceArgument eo
	ERROR_INVALID_RESOURCE_TYPE b
	ERROR_NOT_SUMMONABLE_ENTITY d
	ERROR_UNKNOWN_RESOURCE a
	EXAMPLES c
	registryKey e
	registryLookup f
	getAttribute (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lnet/minecraft/core/Holder$Reference; a
	getConfiguredFeature (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lnet/minecraft/core/Holder$Reference; b
	getEnchantment (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lnet/minecraft/core/Holder$Reference; g
	getEntityType (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lnet/minecraft/core/Holder$Reference; d
	getMobEffect (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lnet/minecraft/core/Holder$Reference; f
	getResource (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;Lnet/minecraft/resources/ResourceKey;)Lnet/minecraft/core/Holder$Reference; a
	getStructure (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lnet/minecraft/core/Holder$Reference; c
	getSummonableEntityType (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lnet/minecraft/core/Holder$Reference; e
	parse (Lcom/mojang/brigadier/StringReader;)Lnet/minecraft/core/Holder$Reference; a
	resource (Lnet/minecraft/commands/CommandBuildContext;Lnet/minecraft/resources/ResourceKey;)Lnet/minecraft/commands/arguments/ResourceArgument; a
net/minecraft/commands/arguments/ResourceArgument$Info eo$a
	deserializeFromNetwork (Lnet/minecraft/network/FriendlyByteBuf;)Lnet/minecraft/commands/arguments/ResourceArgument$Info$Template; a
	deserializeFromNetwork (Lnet/minecraft/network/FriendlyByteBuf;)Lnet/minecraft/commands/synchronization/ArgumentTypeInfo$Template; b
	serializeToJson (Lnet/minecraft/commands/arguments/ResourceArgument$Info$Template;Lcom/google/gson/JsonObject;)V a
	serializeToJson (Lnet/minecraft/commands/synchronization/ArgumentTypeInfo$Template;Lcom/google/gson/JsonObject;)V a
	serializeToNetwork (Lnet/minecraft/commands/arguments/ResourceArgument$Info$Template;Lnet/minecraft/network/FriendlyByteBuf;)V a
	serializeToNetwork (Lnet/minecraft/commands/synchronization/ArgumentTypeInfo$Template;Lnet/minecraft/network/FriendlyByteBuf;)V a
	unpack (Lcom/mojang/brigadier/arguments/ArgumentType;)Lnet/minecraft/commands/synchronization/ArgumentTypeInfo$Template; a
	unpack (Lnet/minecraft/commands/arguments/ResourceArgument;)Lnet/minecraft/commands/arguments/ResourceArgument$Info$Template; a
net/minecraft/commands/arguments/ResourceArgument$Info$Template eo$a$a
	registryKey b
	instantiate (Lnet/minecraft/commands/CommandBuildContext;)Lcom/mojang/brigadier/arguments/ArgumentType; b
	instantiate (Lnet/minecraft/commands/CommandBuildContext;)Lnet/minecraft/commands/arguments/ResourceArgument; a
	type ()Lnet/minecraft/commands/synchronization/ArgumentTypeInfo; a
net/minecraft/commands/arguments/ResourceKeyArgument ep
	ERROR_INVALID_FEATURE b
	ERROR_INVALID_STRUCTURE c
	ERROR_INVALID_TEMPLATE_POOL d
	EXAMPLES a
	registryKey e
	getConfiguredFeature (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lnet/minecraft/core/Holder$Reference; a
	getRegistry (Lcom/mojang/brigadier/context/CommandContext;Lnet/minecraft/resources/ResourceKey;)Lnet/minecraft/core/Registry; a
	getRegistryKey (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;Lnet/minecraft/resources/ResourceKey;Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;)Lnet/minecraft/resources/ResourceKey; a
	getStructure (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lnet/minecraft/core/Holder$Reference; b
	getStructureTemplatePool (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lnet/minecraft/core/Holder$Reference; c
	key (Lnet/minecraft/resources/ResourceKey;)Lnet/minecraft/commands/arguments/ResourceKeyArgument; a
	parse (Lcom/mojang/brigadier/StringReader;)Lnet/minecraft/resources/ResourceKey; a
	resolveKey (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;Lnet/minecraft/resources/ResourceKey;Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;)Lnet/minecraft/core/Holder$Reference; b
net/minecraft/commands/arguments/ResourceKeyArgument$Info ep$a
	deserializeFromNetwork (Lnet/minecraft/network/FriendlyByteBuf;)Lnet/minecraft/commands/arguments/ResourceKeyArgument$Info$Template; a
	deserializeFromNetwork (Lnet/minecraft/network/FriendlyByteBuf;)Lnet/minecraft/commands/synchronization/ArgumentTypeInfo$Template; b
	serializeToJson (Lnet/minecraft/commands/arguments/ResourceKeyArgument$Info$Template;Lcom/google/gson/JsonObject;)V a
	serializeToJson (Lnet/minecraft/commands/synchronization/ArgumentTypeInfo$Template;Lcom/google/gson/JsonObject;)V a
	serializeToNetwork (Lnet/minecraft/commands/arguments/ResourceKeyArgument$Info$Template;Lnet/minecraft/network/FriendlyByteBuf;)V a
	serializeToNetwork (Lnet/minecraft/commands/synchronization/ArgumentTypeInfo$Template;Lnet/minecraft/network/FriendlyByteBuf;)V a
	unpack (Lcom/mojang/brigadier/arguments/ArgumentType;)Lnet/minecraft/commands/synchronization/ArgumentTypeInfo$Template; a
	unpack (Lnet/minecraft/commands/arguments/ResourceKeyArgument;)Lnet/minecraft/commands/arguments/ResourceKeyArgument$Info$Template; a
net/minecraft/commands/arguments/ResourceKeyArgument$Info$Template ep$a$a
	registryKey b
	instantiate (Lnet/minecraft/commands/CommandBuildContext;)Lcom/mojang/brigadier/arguments/ArgumentType; b
	instantiate (Lnet/minecraft/commands/CommandBuildContext;)Lnet/minecraft/commands/arguments/ResourceKeyArgument; a
	type ()Lnet/minecraft/commands/synchronization/ArgumentTypeInfo; a
net/minecraft/commands/arguments/ResourceLocationArgument eq
	ERROR_UNKNOWN_ADVANCEMENT b
	ERROR_UNKNOWN_ITEM_MODIFIER e
	ERROR_UNKNOWN_PREDICATE d
	ERROR_UNKNOWN_RECIPE c
	EXAMPLES a
	getAdvancement (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lnet/minecraft/advancements/Advancement; a
	getId (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lnet/minecraft/resources/ResourceLocation; e
	getItemModifier (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lnet/minecraft/world/level/storage/loot/functions/LootItemFunction; d
	getPredicate (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition; c
	getRecipe (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lnet/minecraft/world/item/crafting/Recipe; b
	id ()Lnet/minecraft/commands/arguments/ResourceLocationArgument; a
	parse (Lcom/mojang/brigadier/StringReader;)Lnet/minecraft/resources/ResourceLocation; a
net/minecraft/commands/arguments/ResourceOrTagArgument er
	ERROR_INVALID_TAG_TYPE c
	ERROR_UNKNOWN_TAG b
	EXAMPLES a
	registryKey e
	registryLookup d
	getResourceOrTag (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;Lnet/minecraft/resources/ResourceKey;)Lnet/minecraft/commands/arguments/ResourceOrTagArgument$Result; a
	parse (Lcom/mojang/brigadier/StringReader;)Lnet/minecraft/commands/arguments/ResourceOrTagArgument$Result; a
	resourceOrTag (Lnet/minecraft/commands/CommandBuildContext;Lnet/minecraft/resources/ResourceKey;)Lnet/minecraft/commands/arguments/ResourceOrTagArgument; a
net/minecraft/commands/arguments/ResourceOrTagArgument$Info er$a
	deserializeFromNetwork (Lnet/minecraft/network/FriendlyByteBuf;)Lnet/minecraft/commands/arguments/ResourceOrTagArgument$Info$Template; a
	deserializeFromNetwork (Lnet/minecraft/network/FriendlyByteBuf;)Lnet/minecraft/commands/synchronization/ArgumentTypeInfo$Template; b
	serializeToJson (Lnet/minecraft/commands/arguments/ResourceOrTagArgument$Info$Template;Lcom/google/gson/JsonObject;)V a
	serializeToJson (Lnet/minecraft/commands/synchronization/ArgumentTypeInfo$Template;Lcom/google/gson/JsonObject;)V a
	serializeToNetwork (Lnet/minecraft/commands/arguments/ResourceOrTagArgument$Info$Template;Lnet/minecraft/network/FriendlyByteBuf;)V a
	serializeToNetwork (Lnet/minecraft/commands/synchronization/ArgumentTypeInfo$Template;Lnet/minecraft/network/FriendlyByteBuf;)V a
	unpack (Lcom/mojang/brigadier/arguments/ArgumentType;)Lnet/minecraft/commands/synchronization/ArgumentTypeInfo$Template; a
	unpack (Lnet/minecraft/commands/arguments/ResourceOrTagArgument;)Lnet/minecraft/commands/arguments/ResourceOrTagArgument$Info$Template; a
net/minecraft/commands/arguments/ResourceOrTagArgument$Info$Template er$a$a
	registryKey b
	instantiate (Lnet/minecraft/commands/CommandBuildContext;)Lcom/mojang/brigadier/arguments/ArgumentType; b
	instantiate (Lnet/minecraft/commands/CommandBuildContext;)Lnet/minecraft/commands/arguments/ResourceOrTagArgument; a
	type ()Lnet/minecraft/commands/synchronization/ArgumentTypeInfo; a
net/minecraft/commands/arguments/ResourceOrTagArgument$ResourceResult er$b
	value a
	asPrintable ()Ljava/lang/String; b
	cast (Lnet/minecraft/resources/ResourceKey;)Ljava/util/Optional; a
	test (Lnet/minecraft/core/Holder;)Z a
	unwrap ()Lcom/mojang/datafixers/util/Either; a
	value ()Lnet/minecraft/core/Holder$Reference; c
net/minecraft/commands/arguments/ResourceOrTagArgument$Result er$c
	asPrintable ()Ljava/lang/String; b
	cast (Lnet/minecraft/resources/ResourceKey;)Ljava/util/Optional; a
	unwrap ()Lcom/mojang/datafixers/util/Either; a
net/minecraft/commands/arguments/ResourceOrTagArgument$TagResult er$d
	tag a
	asPrintable ()Ljava/lang/String; b
	cast (Lnet/minecraft/resources/ResourceKey;)Ljava/util/Optional; a
	tag ()Lnet/minecraft/core/HolderSet$Named; c
	test (Lnet/minecraft/core/Holder;)Z a
	unwrap ()Lcom/mojang/datafixers/util/Either; a
net/minecraft/commands/arguments/ResourceOrTagKeyArgument es
	EXAMPLES a
	registryKey b
	getResourceOrTagKey (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;Lnet/minecraft/resources/ResourceKey;Lcom/mojang/brigadier/exceptions/DynamicCommandExceptionType;)Lnet/minecraft/commands/arguments/ResourceOrTagKeyArgument$Result; a
	parse (Lcom/mojang/brigadier/StringReader;)Lnet/minecraft/commands/arguments/ResourceOrTagKeyArgument$Result; a
	resourceOrTagKey (Lnet/minecraft/resources/ResourceKey;)Lnet/minecraft/commands/arguments/ResourceOrTagKeyArgument; a
net/minecraft/commands/arguments/ResourceOrTagKeyArgument$Info es$a
	deserializeFromNetwork (Lnet/minecraft/network/FriendlyByteBuf;)Lnet/minecraft/commands/arguments/ResourceOrTagKeyArgument$Info$Template; a
	deserializeFromNetwork (Lnet/minecraft/network/FriendlyByteBuf;)Lnet/minecraft/commands/synchronization/ArgumentTypeInfo$Template; b
	serializeToJson (Lnet/minecraft/commands/arguments/ResourceOrTagKeyArgument$Info$Template;Lcom/google/gson/JsonObject;)V a
	serializeToJson (Lnet/minecraft/commands/synchronization/ArgumentTypeInfo$Template;Lcom/google/gson/JsonObject;)V a
	serializeToNetwork (Lnet/minecraft/commands/arguments/ResourceOrTagKeyArgument$Info$Template;Lnet/minecraft/network/FriendlyByteBuf;)V a
	serializeToNetwork (Lnet/minecraft/commands/synchronization/ArgumentTypeInfo$Template;Lnet/minecraft/network/FriendlyByteBuf;)V a
	unpack (Lcom/mojang/brigadier/arguments/ArgumentType;)Lnet/minecraft/commands/synchronization/ArgumentTypeInfo$Template; a
	unpack (Lnet/minecraft/commands/arguments/ResourceOrTagKeyArgument;)Lnet/minecraft/commands/arguments/ResourceOrTagKeyArgument$Info$Template; a
net/minecraft/commands/arguments/ResourceOrTagKeyArgument$Info$Template es$a$a
	registryKey b
	instantiate (Lnet/minecraft/commands/CommandBuildContext;)Lcom/mojang/brigadier/arguments/ArgumentType; b
	instantiate (Lnet/minecraft/commands/CommandBuildContext;)Lnet/minecraft/commands/arguments/ResourceOrTagKeyArgument; a
	type ()Lnet/minecraft/commands/synchronization/ArgumentTypeInfo; a
net/minecraft/commands/arguments/ResourceOrTagKeyArgument$ResourceResult es$b
	key a
	asPrintable ()Ljava/lang/String; b
	cast (Lnet/minecraft/resources/ResourceKey;)Ljava/util/Optional; a
	key ()Lnet/minecraft/resources/ResourceKey; c
	test (Lnet/minecraft/core/Holder;)Z a
	unwrap ()Lcom/mojang/datafixers/util/Either; a
net/minecraft/commands/arguments/ResourceOrTagKeyArgument$Result es$c
	asPrintable ()Ljava/lang/String; b
	cast (Lnet/minecraft/resources/ResourceKey;)Ljava/util/Optional; a
	unwrap ()Lcom/mojang/datafixers/util/Either; a
net/minecraft/commands/arguments/ResourceOrTagKeyArgument$TagResult es$d
	key a
	asPrintable ()Ljava/lang/String; b
	cast (Lnet/minecraft/resources/ResourceKey;)Ljava/util/Optional; a
	key ()Lnet/minecraft/tags/TagKey; c
	test (Lnet/minecraft/core/Holder;)Z a
	unwrap ()Lcom/mojang/datafixers/util/Either; a
net/minecraft/commands/arguments/ScoreHolderArgument et
	ERROR_NO_RESULTS c
	EXAMPLES b
	SUGGEST_SCORE_HOLDERS a
	multiple d
	getName (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Ljava/lang/String; a
	getNames (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Ljava/util/Collection; b
	getNames (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;Ljava/util/function/Supplier;)Ljava/util/Collection; a
	getNamesWithDefaultWildcard (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Ljava/util/Collection; c
	parse (Lcom/mojang/brigadier/StringReader;)Lnet/minecraft/commands/arguments/ScoreHolderArgument$Result; a
	scoreHolder ()Lnet/minecraft/commands/arguments/ScoreHolderArgument; a
	scoreHolders ()Lnet/minecraft/commands/arguments/ScoreHolderArgument; b
net/minecraft/commands/arguments/ScoreHolderArgument$Info et$a
	FLAG_MULTIPLE a
	deserializeFromNetwork (Lnet/minecraft/network/FriendlyByteBuf;)Lnet/minecraft/commands/arguments/ScoreHolderArgument$Info$Template; a
	deserializeFromNetwork (Lnet/minecraft/network/FriendlyByteBuf;)Lnet/minecraft/commands/synchronization/ArgumentTypeInfo$Template; b
	serializeToJson (Lnet/minecraft/commands/arguments/ScoreHolderArgument$Info$Template;Lcom/google/gson/JsonObject;)V a
	serializeToJson (Lnet/minecraft/commands/synchronization/ArgumentTypeInfo$Template;Lcom/google/gson/JsonObject;)V a
	serializeToNetwork (Lnet/minecraft/commands/arguments/ScoreHolderArgument$Info$Template;Lnet/minecraft/network/FriendlyByteBuf;)V a
	serializeToNetwork (Lnet/minecraft/commands/synchronization/ArgumentTypeInfo$Template;Lnet/minecraft/network/FriendlyByteBuf;)V a
	unpack (Lcom/mojang/brigadier/arguments/ArgumentType;)Lnet/minecraft/commands/synchronization/ArgumentTypeInfo$Template; a
	unpack (Lnet/minecraft/commands/arguments/ScoreHolderArgument;)Lnet/minecraft/commands/arguments/ScoreHolderArgument$Info$Template; a
net/minecraft/commands/arguments/ScoreHolderArgument$Info$Template et$a$a
	multiple b
	instantiate (Lnet/minecraft/commands/CommandBuildContext;)Lcom/mojang/brigadier/arguments/ArgumentType; b
	instantiate (Lnet/minecraft/commands/CommandBuildContext;)Lnet/minecraft/commands/arguments/ScoreHolderArgument; a
	type ()Lnet/minecraft/commands/synchronization/ArgumentTypeInfo; a
net/minecraft/commands/arguments/ScoreHolderArgument$Result et$b
net/minecraft/commands/arguments/ScoreHolderArgument$SelectorResult et$c
	selector a
net/minecraft/commands/arguments/ScoreboardSlotArgument eu
	ERROR_INVALID_VALUE a
	EXAMPLES b
	displaySlot ()Lnet/minecraft/commands/arguments/ScoreboardSlotArgument; a
	getDisplaySlot (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)I a
	parse (Lcom/mojang/brigadier/StringReader;)Ljava/lang/Integer; a
net/minecraft/commands/arguments/SignedArgument ev
net/minecraft/commands/arguments/SlotArgument ew
	ERROR_UNKNOWN_SLOT b
	EXAMPLES a
	SLOTS c
	getSlot (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)I a
	parse (Lcom/mojang/brigadier/StringReader;)Ljava/lang/Integer; a
	slot ()Lnet/minecraft/commands/arguments/SlotArgument; a
net/minecraft/commands/arguments/StringRepresentableArgument ex
	ERROR_INVALID_VALUE a
	codec b
	values c
	convertId (Ljava/lang/String;)Ljava/lang/String; a
	parse (Lcom/mojang/brigadier/StringReader;)Ljava/lang/Enum; a
net/minecraft/commands/arguments/TeamArgument ey
	ERROR_TEAM_NOT_FOUND b
	EXAMPLES a
	getTeam (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lnet/minecraft/world/scores/PlayerTeam; a
	parse (Lcom/mojang/brigadier/StringReader;)Ljava/lang/String; a
	team ()Lnet/minecraft/commands/arguments/TeamArgument; a
net/minecraft/commands/arguments/TemplateMirrorArgument ez
	getMirror (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lnet/minecraft/world/level/block/Mirror; a
	templateMirror ()Lnet/minecraft/commands/arguments/StringRepresentableArgument; a
net/minecraft/commands/arguments/TemplateRotationArgument fa
	getRotation (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lnet/minecraft/world/level/block/Rotation; a
	templateRotation ()Lnet/minecraft/commands/arguments/TemplateRotationArgument; a
net/minecraft/commands/arguments/TimeArgument fb
	ERROR_INVALID_UNIT b
	ERROR_TICK_COUNT_TOO_LOW c
	EXAMPLES a
	UNITS d
	minimum e
	parse (Lcom/mojang/brigadier/StringReader;)Ljava/lang/Integer; a
	time ()Lnet/minecraft/commands/arguments/TimeArgument; a
	time (I)Lnet/minecraft/commands/arguments/TimeArgument; a
net/minecraft/commands/arguments/TimeArgument$Info fb$a
	deserializeFromNetwork (Lnet/minecraft/network/FriendlyByteBuf;)Lnet/minecraft/commands/arguments/TimeArgument$Info$Template; a
	deserializeFromNetwork (Lnet/minecraft/network/FriendlyByteBuf;)Lnet/minecraft/commands/synchronization/ArgumentTypeInfo$Template; b
	serializeToJson (Lnet/minecraft/commands/arguments/TimeArgument$Info$Template;Lcom/google/gson/JsonObject;)V a
	serializeToJson (Lnet/minecraft/commands/synchronization/ArgumentTypeInfo$Template;Lcom/google/gson/JsonObject;)V a
	serializeToNetwork (Lnet/minecraft/commands/arguments/TimeArgument$Info$Template;Lnet/minecraft/network/FriendlyByteBuf;)V a
	serializeToNetwork (Lnet/minecraft/commands/synchronization/ArgumentTypeInfo$Template;Lnet/minecraft/network/FriendlyByteBuf;)V a
	unpack (Lcom/mojang/brigadier/arguments/ArgumentType;)Lnet/minecraft/commands/synchronization/ArgumentTypeInfo$Template; a
	unpack (Lnet/minecraft/commands/arguments/TimeArgument;)Lnet/minecraft/commands/arguments/TimeArgument$Info$Template; a
net/minecraft/commands/arguments/TimeArgument$Info$Template fb$a$a
	min b
	instantiate (Lnet/minecraft/commands/CommandBuildContext;)Lcom/mojang/brigadier/arguments/ArgumentType; b
	instantiate (Lnet/minecraft/commands/CommandBuildContext;)Lnet/minecraft/commands/arguments/TimeArgument; a
	type ()Lnet/minecraft/commands/synchronization/ArgumentTypeInfo; a
net/minecraft/commands/arguments/UuidArgument fc
	ALLOWED_CHARACTERS c
	ERROR_INVALID_UUID a
	EXAMPLES b
	getUuid (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Ljava/util/UUID; a
	parse (Lcom/mojang/brigadier/StringReader;)Ljava/util/UUID; a
	uuid ()Lnet/minecraft/commands/arguments/UuidArgument; a
net/minecraft/commands/arguments/blocks/BlockInput fd
	properties b
	state a
	tag c
	getDefinedProperties ()Ljava/util/Set; b
	getState ()Lnet/minecraft/world/level/block/state/BlockState; a
	place (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;I)Z a
	test (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;)Z a
	test (Lnet/minecraft/world/level/block/state/pattern/BlockInWorld;)Z a
net/minecraft/commands/arguments/blocks/BlockPredicateArgument fe
	EXAMPLES a
	blocks b
	blockPredicate (Lnet/minecraft/commands/CommandBuildContext;)Lnet/minecraft/commands/arguments/blocks/BlockPredicateArgument; a
	getBlockPredicate (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Ljava/util/function/Predicate; a
	parse (Lcom/mojang/brigadier/StringReader;)Lnet/minecraft/commands/arguments/blocks/BlockPredicateArgument$Result; a
	parse (Lnet/minecraft/core/HolderLookup;Lcom/mojang/brigadier/StringReader;)Lnet/minecraft/commands/arguments/blocks/BlockPredicateArgument$Result; a
net/minecraft/commands/arguments/blocks/BlockPredicateArgument$BlockPredicate fe$a
	nbt c
	properties b
	state a
	requiresNbt ()Z a
	test (Lnet/minecraft/world/level/block/state/pattern/BlockInWorld;)Z a
net/minecraft/commands/arguments/blocks/BlockPredicateArgument$Result fe$b
	requiresNbt ()Z a
net/minecraft/commands/arguments/blocks/BlockPredicateArgument$TagPredicate fe$c
	nbt b
	tag a
	vagueProperties c
	requiresNbt ()Z a
	test (Lnet/minecraft/world/level/block/state/pattern/BlockInWorld;)Z a
net/minecraft/commands/arguments/blocks/BlockStateArgument ff
	EXAMPLES a
	blocks b
	block (Lnet/minecraft/commands/CommandBuildContext;)Lnet/minecraft/commands/arguments/blocks/BlockStateArgument; a
	getBlock (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lnet/minecraft/commands/arguments/blocks/BlockInput; a
	parse (Lcom/mojang/brigadier/StringReader;)Lnet/minecraft/commands/arguments/blocks/BlockInput; a
net/minecraft/commands/arguments/blocks/BlockStateParser fg
	ERROR_DUPLICATE_PROPERTY d
	ERROR_EXPECTED_END_OF_PROPERTIES g
	ERROR_EXPECTED_VALUE f
	ERROR_INVALID_VALUE e
	ERROR_NO_TAGS_ALLOWED a
	ERROR_UNKNOWN_BLOCK b
	ERROR_UNKNOWN_PROPERTY c
	ERROR_UNKNOWN_TAG h
	SUGGEST_NOTHING o
	SYNTAX_END_PROPERTIES k
	SYNTAX_EQUALS l
	SYNTAX_PROPERTY_SEPARATOR m
	SYNTAX_START_NBT j
	SYNTAX_START_PROPERTIES i
	SYNTAX_TAG n
	allowNbt s
	blocks p
	definition w
	forTesting r
	id v
	nbt y
	properties t
	reader q
	state x
	suggestions A
	tag z
	vagueProperties u
	addSuggestions (Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Lnet/minecraft/world/level/block/state/properties/Property;)Lcom/mojang/brigadier/suggestion/SuggestionsBuilder; a
	appendProperty (Ljava/lang/StringBuilder;Lnet/minecraft/world/level/block/state/properties/Property;Ljava/lang/Comparable;)V a
	fillSuggestions (Lnet/minecraft/core/HolderLookup;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;ZZ)Ljava/util/concurrent/CompletableFuture; a
	hasBlockEntity ()Z b
	parse ()V a
	parseForBlock (Lnet/minecraft/core/HolderLookup;Lcom/mojang/brigadier/StringReader;Z)Lnet/minecraft/commands/arguments/blocks/BlockStateParser$BlockResult; a
	parseForBlock (Lnet/minecraft/core/HolderLookup;Ljava/lang/String;Z)Lnet/minecraft/commands/arguments/blocks/BlockStateParser$BlockResult; a
	parseForTesting (Lnet/minecraft/core/HolderLookup;Lcom/mojang/brigadier/StringReader;Z)Lcom/mojang/datafixers/util/Either; b
	parseForTesting (Lnet/minecraft/core/HolderLookup;Ljava/lang/String;Z)Lcom/mojang/datafixers/util/Either; b
	readBlock ()V c
	readNbt ()V g
	readProperties ()V e
	readTag ()V d
	readVagueProperties ()V f
	serialize (Lnet/minecraft/world/level/block/state/BlockState;)Ljava/lang/String; a
	setValue (Lnet/minecraft/world/level/block/state/properties/Property;Ljava/lang/String;I)V a
	suggestBlockIdOrTag (Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture; l
	suggestEquals (Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture; f
	suggestItem (Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture; k
	suggestNextPropertyOrEnd (Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture; g
	suggestOpenNbt (Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture; e
	suggestOpenPropertiesOrNbt (Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture; i
	suggestOpenVaguePropertiesOrNbt (Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture; h
	suggestPropertyName (Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture; c
	suggestPropertyNameOrEnd (Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture; a
	suggestTag (Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture; j
	suggestVaguePropertyName (Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture; d
	suggestVaguePropertyNameOrEnd (Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture; b
	suggestVaguePropertyValue (Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Ljava/lang/String;)Ljava/util/concurrent/CompletableFuture; a
net/minecraft/commands/arguments/blocks/BlockStateParser$BlockResult fg$a
	blockState a
	nbt c
	properties b
	blockState ()Lnet/minecraft/world/level/block/state/BlockState; a
	nbt ()Lnet/minecraft/nbt/CompoundTag; c
	properties ()Ljava/util/Map; b
net/minecraft/commands/arguments/blocks/BlockStateParser$TagResult fg$b
	nbt c
	tag a
	vagueProperties b
	nbt ()Lnet/minecraft/nbt/CompoundTag; c
	tag ()Lnet/minecraft/core/HolderSet; a
	vagueProperties ()Ljava/util/Map; b
net/minecraft/commands/arguments/coordinates/BlockPosArgument fi
	ERROR_NOT_LOADED a
	ERROR_OUT_OF_BOUNDS c
	ERROR_OUT_OF_WORLD b
	EXAMPLES d
	blockPos ()Lnet/minecraft/commands/arguments/coordinates/BlockPosArgument; a
	getBlockPos (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lnet/minecraft/core/BlockPos; b
	getLoadedBlockPos (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lnet/minecraft/core/BlockPos; a
	getLoadedBlockPos (Lcom/mojang/brigadier/context/CommandContext;Lnet/minecraft/server/level/ServerLevel;Ljava/lang/String;)Lnet/minecraft/core/BlockPos; a
	getSpawnablePos (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lnet/minecraft/core/BlockPos; c
	parse (Lcom/mojang/brigadier/StringReader;)Lnet/minecraft/commands/arguments/coordinates/Coordinates; a
net/minecraft/commands/arguments/coordinates/ColumnPosArgument fj
	ERROR_NOT_COMPLETE a
	EXAMPLES b
	columnPos ()Lnet/minecraft/commands/arguments/coordinates/ColumnPosArgument; a
	getColumnPos (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lnet/minecraft/server/level/ColumnPos; a
	parse (Lcom/mojang/brigadier/StringReader;)Lnet/minecraft/commands/arguments/coordinates/Coordinates; a
net/minecraft/commands/arguments/coordinates/Coordinates fk
	getBlockPos (Lnet/minecraft/commands/CommandSourceStack;)Lnet/minecraft/core/BlockPos; c
	getPosition (Lnet/minecraft/commands/CommandSourceStack;)Lnet/minecraft/world/phys/Vec3; a
	getRotation (Lnet/minecraft/commands/CommandSourceStack;)Lnet/minecraft/world/phys/Vec2; b
	isXRelative ()Z a
	isYRelative ()Z b
	isZRelative ()Z c
net/minecraft/commands/arguments/coordinates/LocalCoordinates fl
	PREFIX_LOCAL_COORDINATE a
	forwards d
	left b
	up c
	getPosition (Lnet/minecraft/commands/CommandSourceStack;)Lnet/minecraft/world/phys/Vec3; a
	getRotation (Lnet/minecraft/commands/CommandSourceStack;)Lnet/minecraft/world/phys/Vec2; b
	isXRelative ()Z a
	isYRelative ()Z b
	isZRelative ()Z c
	parse (Lcom/mojang/brigadier/StringReader;)Lnet/minecraft/commands/arguments/coordinates/LocalCoordinates; a
	readDouble (Lcom/mojang/brigadier/StringReader;I)D a
net/minecraft/commands/arguments/coordinates/RotationArgument fm
	ERROR_NOT_COMPLETE a
	EXAMPLES b
	getRotation (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lnet/minecraft/commands/arguments/coordinates/Coordinates; a
	parse (Lcom/mojang/brigadier/StringReader;)Lnet/minecraft/commands/arguments/coordinates/Coordinates; a
	rotation ()Lnet/minecraft/commands/arguments/coordinates/RotationArgument; a
net/minecraft/commands/arguments/coordinates/SwizzleArgument fn
	ERROR_INVALID b
	EXAMPLES a
	getSwizzle (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Ljava/util/EnumSet; a
	parse (Lcom/mojang/brigadier/StringReader;)Ljava/util/EnumSet; a
	swizzle ()Lnet/minecraft/commands/arguments/coordinates/SwizzleArgument; a
net/minecraft/commands/arguments/coordinates/Vec2Argument fo
	ERROR_NOT_COMPLETE a
	EXAMPLES b
	centerCorrect c
	getVec2 (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lnet/minecraft/world/phys/Vec2; a
	parse (Lcom/mojang/brigadier/StringReader;)Lnet/minecraft/commands/arguments/coordinates/Coordinates; a
	vec2 ()Lnet/minecraft/commands/arguments/coordinates/Vec2Argument; a
	vec2 (Z)Lnet/minecraft/commands/arguments/coordinates/Vec2Argument; a
net/minecraft/commands/arguments/coordinates/Vec3Argument fp
	ERROR_MIXED_TYPE b
	ERROR_NOT_COMPLETE a
	EXAMPLES c
	centerCorrect d
	getCoordinates (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lnet/minecraft/commands/arguments/coordinates/Coordinates; b
	getVec3 (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lnet/minecraft/world/phys/Vec3; a
	parse (Lcom/mojang/brigadier/StringReader;)Lnet/minecraft/commands/arguments/coordinates/Coordinates; a
	vec3 ()Lnet/minecraft/commands/arguments/coordinates/Vec3Argument; a
	vec3 (Z)Lnet/minecraft/commands/arguments/coordinates/Vec3Argument; a
net/minecraft/commands/arguments/coordinates/WorldCoordinate fq
	ERROR_EXPECTED_DOUBLE a
	ERROR_EXPECTED_INT b
	PREFIX_RELATIVE c
	relative d
	value e
	get (D)D a
	isRelative ()Z a
	isRelative (Lcom/mojang/brigadier/StringReader;)Z b
	parseDouble (Lcom/mojang/brigadier/StringReader;Z)Lnet/minecraft/commands/arguments/coordinates/WorldCoordinate; a
	parseInt (Lcom/mojang/brigadier/StringReader;)Lnet/minecraft/commands/arguments/coordinates/WorldCoordinate; a
net/minecraft/commands/arguments/coordinates/WorldCoordinates fr
	x a
	y b
	z c
	absolute (DDD)Lnet/minecraft/commands/arguments/coordinates/WorldCoordinates; a
	absolute (Lnet/minecraft/world/phys/Vec2;)Lnet/minecraft/commands/arguments/coordinates/WorldCoordinates; a
	current ()Lnet/minecraft/commands/arguments/coordinates/WorldCoordinates; d
	getPosition (Lnet/minecraft/commands/CommandSourceStack;)Lnet/minecraft/world/phys/Vec3; a
	getRotation (Lnet/minecraft/commands/CommandSourceStack;)Lnet/minecraft/world/phys/Vec2; b
	isXRelative ()Z a
	isYRelative ()Z b
	isZRelative ()Z c
	parseDouble (Lcom/mojang/brigadier/StringReader;Z)Lnet/minecraft/commands/arguments/coordinates/WorldCoordinates; a
	parseInt (Lcom/mojang/brigadier/StringReader;)Lnet/minecraft/commands/arguments/coordinates/WorldCoordinates; a
net/minecraft/commands/arguments/item/FunctionArgument ft
	ERROR_UNKNOWN_FUNCTION c
	ERROR_UNKNOWN_TAG b
	EXAMPLES a
	functions ()Lnet/minecraft/commands/arguments/item/FunctionArgument; a
	getFunction (Lcom/mojang/brigadier/context/CommandContext;Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/commands/CommandFunction; a
	getFunctionOrTag (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lcom/mojang/datafixers/util/Pair; b
	getFunctionTag (Lcom/mojang/brigadier/context/CommandContext;Lnet/minecraft/resources/ResourceLocation;)Ljava/util/Collection; b
	getFunctions (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Ljava/util/Collection; a
	parse (Lcom/mojang/brigadier/StringReader;)Lnet/minecraft/commands/arguments/item/FunctionArgument$Result; a
net/minecraft/commands/arguments/item/FunctionArgument$Result ft$a
	create (Lcom/mojang/brigadier/context/CommandContext;)Ljava/util/Collection; a
	unwrap (Lcom/mojang/brigadier/context/CommandContext;)Lcom/mojang/datafixers/util/Pair; b
net/minecraft/commands/arguments/item/ItemArgument fu
	EXAMPLES a
	items b
	getItem (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lnet/minecraft/commands/arguments/item/ItemInput; a
	item (Lnet/minecraft/commands/CommandBuildContext;)Lnet/minecraft/commands/arguments/item/ItemArgument; a
	parse (Lcom/mojang/brigadier/StringReader;)Lnet/minecraft/commands/arguments/item/ItemInput; a
net/minecraft/commands/arguments/item/ItemInput fv
	ERROR_STACK_TOO_BIG a
	item b
	tag c
	createItemStack (IZ)Lnet/minecraft/world/item/ItemStack; a
	getItem ()Lnet/minecraft/world/item/Item; a
	getItemName ()Ljava/lang/String; c
	serialize ()Ljava/lang/String; b
	test (Lnet/minecraft/world/item/ItemStack;)Z a
net/minecraft/commands/arguments/item/ItemParser fw
	ERROR_NO_TAGS_ALLOWED a
	ERROR_UNKNOWN_ITEM b
	ERROR_UNKNOWN_TAG c
	SUGGEST_NOTHING f
	SYNTAX_START_NBT d
	SYNTAX_TAG e
	allowTags i
	items g
	nbt k
	reader h
	result j
	suggestions l
	fillSuggestions (Lnet/minecraft/core/HolderLookup;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Z)Ljava/util/concurrent/CompletableFuture; a
	parse ()V d
	parseForItem (Lnet/minecraft/core/HolderLookup;Lcom/mojang/brigadier/StringReader;)Lnet/minecraft/commands/arguments/item/ItemParser$ItemResult; a
	parseForTesting (Lnet/minecraft/core/HolderLookup;Lcom/mojang/brigadier/StringReader;)Lcom/mojang/datafixers/util/Either; b
	readItem ()V a
	readNbt ()V c
	readTag ()V b
	suggestItem (Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture; c
	suggestItemIdOrTag (Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture; d
	suggestOpenNbt (Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture; a
	suggestTag (Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture; b
net/minecraft/commands/arguments/item/ItemParser$ItemResult fw$a
	item a
	nbt b
	item ()Lnet/minecraft/core/Holder; a
	nbt ()Lnet/minecraft/nbt/CompoundTag; b
net/minecraft/commands/arguments/item/ItemParser$TagResult fw$b
	nbt b
	tag a
	nbt ()Lnet/minecraft/nbt/CompoundTag; b
	tag ()Lnet/minecraft/core/HolderSet; a
net/minecraft/commands/arguments/item/ItemPredicateArgument fx
	EXAMPLES a
	items b
	createResult (Ljava/util/function/Predicate;Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/commands/arguments/item/ItemPredicateArgument$Result; a
	getItemPredicate (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Ljava/util/function/Predicate; a
	itemPredicate (Lnet/minecraft/commands/CommandBuildContext;)Lnet/minecraft/commands/arguments/item/ItemPredicateArgument; a
	parse (Lcom/mojang/brigadier/StringReader;)Lnet/minecraft/commands/arguments/item/ItemPredicateArgument$Result; a
net/minecraft/commands/arguments/item/ItemPredicateArgument$Result fx$a
net/minecraft/commands/arguments/selector/EntitySelector ga
	ANY_TYPE c
	INFINITE a
	ORDER_ARBITRARY b
	aabb j
	currentEntity l
	entityUUID n
	includesEntities e
	maxResults d
	order k
	playerName m
	position i
	predicate g
	range h
	type o
	usesSelector p
	worldLimited f
	addEntities (Ljava/util/List;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/phys/Vec3;Ljava/util/function/Predicate;)V a
	checkPermissions (Lnet/minecraft/commands/CommandSourceStack;)V e
	findEntities (Lnet/minecraft/commands/CommandSourceStack;)Ljava/util/List; b
	findEntitiesRaw (Lnet/minecraft/commands/CommandSourceStack;)Ljava/util/List; f
	findPlayers (Lnet/minecraft/commands/CommandSourceStack;)Ljava/util/List; d
	findSingleEntity (Lnet/minecraft/commands/CommandSourceStack;)Lnet/minecraft/world/entity/Entity; a
	findSinglePlayer (Lnet/minecraft/commands/CommandSourceStack;)Lnet/minecraft/server/level/ServerPlayer; c
	getMaxResults ()I a
	getPredicate (Lnet/minecraft/world/phys/Vec3;)Ljava/util/function/Predicate; a
	getResultLimit ()I f
	includesEntities ()Z b
	isSelfSelector ()Z c
	isWorldLimited ()Z d
	joinNames (Ljava/util/List;)Lnet/minecraft/network/chat/Component; a
	sortAndLimit (Lnet/minecraft/world/phys/Vec3;Ljava/util/List;)Ljava/util/List; a
	usesSelector ()Z e
net/minecraft/commands/arguments/selector/EntitySelectorParser gb
	ERROR_EXPECTED_END_OF_OPTIONS i
	ERROR_EXPECTED_OPTION_VALUE j
	ERROR_INVALID_NAME_OR_UUID e
	ERROR_MISSING_SELECTOR_TYPE h
	ERROR_SELECTORS_NOT_ALLOWED g
	ERROR_UNKNOWN_SELECTOR_TYPE f
	ORDER_FURTHEST l
	ORDER_NEAREST k
	ORDER_RANDOM m
	SELECTOR_ALL_ENTITIES v
	SELECTOR_ALL_PLAYERS s
	SELECTOR_CURRENT_ENTITY u
	SELECTOR_NEAREST_PLAYER r
	SELECTOR_RANDOM_PLAYERS t
	SUGGEST_NOTHING n
	SYNTAX_NOT c
	SYNTAX_OPTIONS_END p
	SYNTAX_OPTIONS_KEY_VALUE_SEPARATOR b
	SYNTAX_OPTIONS_SEPARATOR q
	SYNTAX_OPTIONS_START o
	SYNTAX_SELECTOR_START a
	SYNTAX_TAG d
	allowSelectors x
	currentEntity N
	deltaX G
	deltaY H
	deltaZ I
	distance B
	entityUUID Q
	hasAdvancements ad
	hasGamemodeEquals W
	hasGamemodeNotEquals X
	hasNameEquals S
	hasNameNotEquals T
	hasScores ac
	hasTeamEquals Y
	hasTeamNotEquals Z
	includesEntities z
	isLimited U
	isSorted V
	level C
	maxResults y
	order M
	playerName O
	predicate L
	reader w
	rotX J
	rotY K
	startPosition P
	suggestions R
	type aa
	typeInverse ab
	usesSelectors ae
	worldLimited A
	x D
	y E
	z F
	addPredicate (Ljava/util/function/Predicate;)V a
	createAabb (DDD)Lnet/minecraft/world/phys/AABB; a
	createRotationPredicate (Lnet/minecraft/advancements/critereon/WrappedMinMaxBounds;Ljava/util/function/ToDoubleFunction;)Ljava/util/function/Predicate; a
	fillSelectorSuggestions (Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)V a
	fillSuggestions (Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Ljava/util/function/Consumer;)Ljava/util/concurrent/CompletableFuture; a
	finalizePredicates ()V I
	getDeltaX ()Ljava/lang/Double; p
	getDeltaY ()Ljava/lang/Double; q
	getDeltaZ ()Ljava/lang/Double; r
	getDistance ()Lnet/minecraft/advancements/critereon/MinMaxBounds$Doubles; i
	getLevel ()Lnet/minecraft/advancements/critereon/MinMaxBounds$Ints; j
	getOrder ()Ljava/util/function/BiConsumer; s
	getReader ()Lcom/mojang/brigadier/StringReader; g
	getRotX ()Lnet/minecraft/advancements/critereon/WrappedMinMaxBounds; k
	getRotY ()Lnet/minecraft/advancements/critereon/WrappedMinMaxBounds; l
	getSelector ()Lnet/minecraft/commands/arguments/selector/EntitySelector; a
	getX ()Ljava/lang/Double; m
	getY ()Ljava/lang/Double; n
	getZ ()Ljava/lang/Double; o
	hasAdvancements ()Z H
	hasGamemodeEquals ()Z z
	hasGamemodeNotEquals ()Z A
	hasNameEquals ()Z v
	hasNameNotEquals ()Z w
	hasScores ()Z G
	hasTeamEquals ()Z B
	hasTeamNotEquals ()Z C
	isCurrentEntity ()Z u
	isLimited ()Z x
	isSorted ()Z y
	isTag ()Z f
	isTypeLimited ()Z E
	isTypeLimitedInversely ()Z F
	limitToType (Lnet/minecraft/world/entity/EntityType;)V a
	parse ()Lnet/minecraft/commands/arguments/selector/EntitySelector; t
	parseNameOrUUID ()V c
	parseOptions ()V d
	parseSelector ()V b
	setDeltaX (D)V d
	setDeltaY (D)V e
	setDeltaZ (D)V f
	setDistance (Lnet/minecraft/advancements/critereon/MinMaxBounds$Doubles;)V a
	setHasAdvancements (Z)V k
	setHasGamemodeEquals (Z)V f
	setHasGamemodeNotEquals (Z)V g
	setHasNameEquals (Z)V b
	setHasNameNotEquals (Z)V c
	setHasScores (Z)V j
	setHasTeamEquals (Z)V h
	setHasTeamNotEquals (Z)V i
	setIncludesEntities (Z)V a
	setLevel (Lnet/minecraft/advancements/critereon/MinMaxBounds$Ints;)V a
	setLimited (Z)V d
	setMaxResults (I)V a
	setOrder (Ljava/util/function/BiConsumer;)V a
	setRotX (Lnet/minecraft/advancements/critereon/WrappedMinMaxBounds;)V a
	setRotY (Lnet/minecraft/advancements/critereon/WrappedMinMaxBounds;)V b
	setSorted (Z)V e
	setSuggestions (Ljava/util/function/BiFunction;)V a
	setTypeLimitedInversely ()V D
	setWorldLimited ()V h
	setX (D)V a
	setY (D)V b
	setZ (D)V c
	shouldInvertValue ()Z e
	suggestEquals (Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Ljava/util/function/Consumer;)Ljava/util/concurrent/CompletableFuture; i
	suggestName (Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Ljava/util/function/Consumer;)Ljava/util/concurrent/CompletableFuture; c
	suggestNameOrSelector (Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Ljava/util/function/Consumer;)Ljava/util/concurrent/CompletableFuture; b
	suggestOpenOptions (Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Ljava/util/function/Consumer;)Ljava/util/concurrent/CompletableFuture; e
	suggestOptionsKey (Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Ljava/util/function/Consumer;)Ljava/util/concurrent/CompletableFuture; g
	suggestOptionsKeyOrClose (Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Ljava/util/function/Consumer;)Ljava/util/concurrent/CompletableFuture; f
	suggestOptionsNextOrClose (Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Ljava/util/function/Consumer;)Ljava/util/concurrent/CompletableFuture; h
	suggestSelector (Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;Ljava/util/function/Consumer;)Ljava/util/concurrent/CompletableFuture; d
net/minecraft/commands/arguments/selector/options/EntitySelectorOptions gc
	ERROR_ENTITY_TYPE_INVALID h
	ERROR_GAME_MODE_INVALID g
	ERROR_INAPPLICABLE_OPTION b
	ERROR_LEVEL_NEGATIVE d
	ERROR_LIMIT_TOO_SMALL e
	ERROR_RANGE_NEGATIVE c
	ERROR_SORT_UNKNOWN f
	ERROR_UNKNOWN_OPTION a
	OPTIONS i
	bootStrap ()V a
	get (Lnet/minecraft/commands/arguments/selector/EntitySelectorParser;Ljava/lang/String;I)Lnet/minecraft/commands/arguments/selector/options/EntitySelectorOptions$Modifier; a
	register (Ljava/lang/String;Lnet/minecraft/commands/arguments/selector/options/EntitySelectorOptions$Modifier;Ljava/util/function/Predicate;Lnet/minecraft/network/chat/Component;)V a
	suggestNames (Lnet/minecraft/commands/arguments/selector/EntitySelectorParser;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)V a
net/minecraft/commands/arguments/selector/options/EntitySelectorOptions$Modifier gc$a
net/minecraft/commands/arguments/selector/options/EntitySelectorOptions$Option gc$b
	canUse b
	description c
	modifier a
	canUse ()Ljava/util/function/Predicate; b
	description ()Lnet/minecraft/network/chat/Component; c
	modifier ()Lnet/minecraft/commands/arguments/selector/options/EntitySelectorOptions$Modifier; a
net/minecraft/commands/synchronization/ArgumentTypeInfo gg
	deserializeFromNetwork (Lnet/minecraft/network/FriendlyByteBuf;)Lnet/minecraft/commands/synchronization/ArgumentTypeInfo$Template; b
	serializeToJson (Lnet/minecraft/commands/synchronization/ArgumentTypeInfo$Template;Lcom/google/gson/JsonObject;)V a
	serializeToNetwork (Lnet/minecraft/commands/synchronization/ArgumentTypeInfo$Template;Lnet/minecraft/network/FriendlyByteBuf;)V a
	unpack (Lcom/mojang/brigadier/arguments/ArgumentType;)Lnet/minecraft/commands/synchronization/ArgumentTypeInfo$Template; a
net/minecraft/commands/synchronization/ArgumentTypeInfo$Template gg$a
	instantiate (Lnet/minecraft/commands/CommandBuildContext;)Lcom/mojang/brigadier/arguments/ArgumentType; b
	type ()Lnet/minecraft/commands/synchronization/ArgumentTypeInfo; a
net/minecraft/commands/synchronization/ArgumentTypeInfos gh
	BY_CLASS a
	bootstrap (Lnet/minecraft/core/Registry;)Lnet/minecraft/commands/synchronization/ArgumentTypeInfo; a
	byClass (Lcom/mojang/brigadier/arguments/ArgumentType;)Lnet/minecraft/commands/synchronization/ArgumentTypeInfo; a
	fixClassType (Ljava/lang/Class;)Ljava/lang/Class; b
	isClassRecognized (Ljava/lang/Class;)Z a
	register (Lnet/minecraft/core/Registry;Ljava/lang/String;Ljava/lang/Class;Lnet/minecraft/commands/synchronization/ArgumentTypeInfo;)Lnet/minecraft/commands/synchronization/ArgumentTypeInfo; a
	unpack (Lcom/mojang/brigadier/arguments/ArgumentType;)Lnet/minecraft/commands/synchronization/ArgumentTypeInfo$Template; b
net/minecraft/commands/synchronization/ArgumentUtils gi
	LOGGER a
	NUMBER_FLAG_MAX c
	NUMBER_FLAG_MIN b
	createNumberFlags (ZZ)I a
	findUsedArgumentTypes (Lcom/mojang/brigadier/tree/CommandNode;)Ljava/util/Set; a
	findUsedArgumentTypes (Lcom/mojang/brigadier/tree/CommandNode;Ljava/util/Set;Ljava/util/Set;)V a
	numberHasMax (B)Z b
	numberHasMin (B)Z a
	serializeArgumentToJson (Lcom/google/gson/JsonObject;Lcom/mojang/brigadier/arguments/ArgumentType;)V a
	serializeCap (Lcom/google/gson/JsonObject;Lnet/minecraft/commands/synchronization/ArgumentTypeInfo$Template;)V a
	serializeCap (Lcom/google/gson/JsonObject;Lnet/minecraft/commands/synchronization/ArgumentTypeInfo;Lnet/minecraft/commands/synchronization/ArgumentTypeInfo$Template;)V a
	serializeNodeToJson (Lcom/mojang/brigadier/CommandDispatcher;Lcom/mojang/brigadier/tree/CommandNode;)Lcom/google/gson/JsonObject; a
net/minecraft/commands/synchronization/SingletonArgumentInfo gj
	template a
	contextAware (Ljava/util/function/Function;)Lnet/minecraft/commands/synchronization/SingletonArgumentInfo; a
	contextFree (Ljava/util/function/Supplier;)Lnet/minecraft/commands/synchronization/SingletonArgumentInfo; a
	deserializeFromNetwork (Lnet/minecraft/network/FriendlyByteBuf;)Lnet/minecraft/commands/synchronization/ArgumentTypeInfo$Template; b
	deserializeFromNetwork (Lnet/minecraft/network/FriendlyByteBuf;)Lnet/minecraft/commands/synchronization/SingletonArgumentInfo$Template; a
	serializeToJson (Lnet/minecraft/commands/synchronization/ArgumentTypeInfo$Template;Lcom/google/gson/JsonObject;)V a
	serializeToJson (Lnet/minecraft/commands/synchronization/SingletonArgumentInfo$Template;Lcom/google/gson/JsonObject;)V a
	serializeToNetwork (Lnet/minecraft/commands/synchronization/ArgumentTypeInfo$Template;Lnet/minecraft/network/FriendlyByteBuf;)V a
	serializeToNetwork (Lnet/minecraft/commands/synchronization/SingletonArgumentInfo$Template;Lnet/minecraft/network/FriendlyByteBuf;)V a
	unpack (Lcom/mojang/brigadier/arguments/ArgumentType;)Lnet/minecraft/commands/synchronization/ArgumentTypeInfo$Template; a
	unpack (Lcom/mojang/brigadier/arguments/ArgumentType;)Lnet/minecraft/commands/synchronization/SingletonArgumentInfo$Template; b
net/minecraft/commands/synchronization/SingletonArgumentInfo$Template gj$a
	constructor b
	instantiate (Lnet/minecraft/commands/CommandBuildContext;)Lcom/mojang/brigadier/arguments/ArgumentType; b
	type ()Lnet/minecraft/commands/synchronization/ArgumentTypeInfo; a
net/minecraft/commands/synchronization/SuggestionProviders gk
	ALL_RECIPES b
	ASK_SERVER a
	AVAILABLE_SOUNDS c
	DEFAULT_NAME f
	PROVIDERS_BY_NAME e
	SUMMONABLE_ENTITIES d
	getName (Lcom/mojang/brigadier/suggestion/SuggestionProvider;)Lnet/minecraft/resources/ResourceLocation; a
	getProvider (Lnet/minecraft/resources/ResourceLocation;)Lcom/mojang/brigadier/suggestion/SuggestionProvider; a
	register (Lnet/minecraft/resources/ResourceLocation;Lcom/mojang/brigadier/suggestion/SuggestionProvider;)Lcom/mojang/brigadier/suggestion/SuggestionProvider; a
	safelySwap (Lcom/mojang/brigadier/suggestion/SuggestionProvider;)Lcom/mojang/brigadier/suggestion/SuggestionProvider; b
net/minecraft/commands/synchronization/SuggestionProviders$Wrapper gk$a
	delegate a
	name b
net/minecraft/commands/synchronization/brigadier/DoubleArgumentInfo gl
	deserializeFromNetwork (Lnet/minecraft/network/FriendlyByteBuf;)Lnet/minecraft/commands/synchronization/ArgumentTypeInfo$Template; b
	deserializeFromNetwork (Lnet/minecraft/network/FriendlyByteBuf;)Lnet/minecraft/commands/synchronization/brigadier/DoubleArgumentInfo$Template; a
	serializeToJson (Lnet/minecraft/commands/synchronization/ArgumentTypeInfo$Template;Lcom/google/gson/JsonObject;)V a
	serializeToJson (Lnet/minecraft/commands/synchronization/brigadier/DoubleArgumentInfo$Template;Lcom/google/gson/JsonObject;)V a
	serializeToNetwork (Lnet/minecraft/commands/synchronization/ArgumentTypeInfo$Template;Lnet/minecraft/network/FriendlyByteBuf;)V a
	serializeToNetwork (Lnet/minecraft/commands/synchronization/brigadier/DoubleArgumentInfo$Template;Lnet/minecraft/network/FriendlyByteBuf;)V a
	unpack (Lcom/mojang/brigadier/arguments/ArgumentType;)Lnet/minecraft/commands/synchronization/ArgumentTypeInfo$Template; a
	unpack (Lcom/mojang/brigadier/arguments/DoubleArgumentType;)Lnet/minecraft/commands/synchronization/brigadier/DoubleArgumentInfo$Template; a
net/minecraft/commands/synchronization/brigadier/DoubleArgumentInfo$Template gl$a
	max c
	min b
	instantiate (Lnet/minecraft/commands/CommandBuildContext;)Lcom/mojang/brigadier/arguments/ArgumentType; b
	instantiate (Lnet/minecraft/commands/CommandBuildContext;)Lcom/mojang/brigadier/arguments/DoubleArgumentType; a
	type ()Lnet/minecraft/commands/synchronization/ArgumentTypeInfo; a
net/minecraft/commands/synchronization/brigadier/FloatArgumentInfo gm
	deserializeFromNetwork (Lnet/minecraft/network/FriendlyByteBuf;)Lnet/minecraft/commands/synchronization/ArgumentTypeInfo$Template; b
	deserializeFromNetwork (Lnet/minecraft/network/FriendlyByteBuf;)Lnet/minecraft/commands/synchronization/brigadier/FloatArgumentInfo$Template; a
	serializeToJson (Lnet/minecraft/commands/synchronization/ArgumentTypeInfo$Template;Lcom/google/gson/JsonObject;)V a
	serializeToJson (Lnet/minecraft/commands/synchronization/brigadier/FloatArgumentInfo$Template;Lcom/google/gson/JsonObject;)V a
	serializeToNetwork (Lnet/minecraft/commands/synchronization/ArgumentTypeInfo$Template;Lnet/minecraft/network/FriendlyByteBuf;)V a
	serializeToNetwork (Lnet/minecraft/commands/synchronization/brigadier/FloatArgumentInfo$Template;Lnet/minecraft/network/FriendlyByteBuf;)V a
	unpack (Lcom/mojang/brigadier/arguments/ArgumentType;)Lnet/minecraft/commands/synchronization/ArgumentTypeInfo$Template; a
	unpack (Lcom/mojang/brigadier/arguments/FloatArgumentType;)Lnet/minecraft/commands/synchronization/brigadier/FloatArgumentInfo$Template; a
net/minecraft/commands/synchronization/brigadier/FloatArgumentInfo$Template gm$a
	max c
	min b
	instantiate (Lnet/minecraft/commands/CommandBuildContext;)Lcom/mojang/brigadier/arguments/ArgumentType; b
	instantiate (Lnet/minecraft/commands/CommandBuildContext;)Lcom/mojang/brigadier/arguments/FloatArgumentType; a
	type ()Lnet/minecraft/commands/synchronization/ArgumentTypeInfo; a
net/minecraft/commands/synchronization/brigadier/IntegerArgumentInfo gn
	deserializeFromNetwork (Lnet/minecraft/network/FriendlyByteBuf;)Lnet/minecraft/commands/synchronization/ArgumentTypeInfo$Template; b
	deserializeFromNetwork (Lnet/minecraft/network/FriendlyByteBuf;)Lnet/minecraft/commands/synchronization/brigadier/IntegerArgumentInfo$Template; a
	serializeToJson (Lnet/minecraft/commands/synchronization/ArgumentTypeInfo$Template;Lcom/google/gson/JsonObject;)V a
	serializeToJson (Lnet/minecraft/commands/synchronization/brigadier/IntegerArgumentInfo$Template;Lcom/google/gson/JsonObject;)V a
	serializeToNetwork (Lnet/minecraft/commands/synchronization/ArgumentTypeInfo$Template;Lnet/minecraft/network/FriendlyByteBuf;)V a
	serializeToNetwork (Lnet/minecraft/commands/synchronization/brigadier/IntegerArgumentInfo$Template;Lnet/minecraft/network/FriendlyByteBuf;)V a
	unpack (Lcom/mojang/brigadier/arguments/ArgumentType;)Lnet/minecraft/commands/synchronization/ArgumentTypeInfo$Template; a
	unpack (Lcom/mojang/brigadier/arguments/IntegerArgumentType;)Lnet/minecraft/commands/synchronization/brigadier/IntegerArgumentInfo$Template; a
net/minecraft/commands/synchronization/brigadier/IntegerArgumentInfo$Template gn$a
	max c
	min b
	instantiate (Lnet/minecraft/commands/CommandBuildContext;)Lcom/mojang/brigadier/arguments/ArgumentType; b
	instantiate (Lnet/minecraft/commands/CommandBuildContext;)Lcom/mojang/brigadier/arguments/IntegerArgumentType; a
	type ()Lnet/minecraft/commands/synchronization/ArgumentTypeInfo; a
net/minecraft/commands/synchronization/brigadier/LongArgumentInfo go
	deserializeFromNetwork (Lnet/minecraft/network/FriendlyByteBuf;)Lnet/minecraft/commands/synchronization/ArgumentTypeInfo$Template; b
	deserializeFromNetwork (Lnet/minecraft/network/FriendlyByteBuf;)Lnet/minecraft/commands/synchronization/brigadier/LongArgumentInfo$Template; a
	serializeToJson (Lnet/minecraft/commands/synchronization/ArgumentTypeInfo$Template;Lcom/google/gson/JsonObject;)V a
	serializeToJson (Lnet/minecraft/commands/synchronization/brigadier/LongArgumentInfo$Template;Lcom/google/gson/JsonObject;)V a
	serializeToNetwork (Lnet/minecraft/commands/synchronization/ArgumentTypeInfo$Template;Lnet/minecraft/network/FriendlyByteBuf;)V a
	serializeToNetwork (Lnet/minecraft/commands/synchronization/brigadier/LongArgumentInfo$Template;Lnet/minecraft/network/FriendlyByteBuf;)V a
	unpack (Lcom/mojang/brigadier/arguments/ArgumentType;)Lnet/minecraft/commands/synchronization/ArgumentTypeInfo$Template; a
	unpack (Lcom/mojang/brigadier/arguments/LongArgumentType;)Lnet/minecraft/commands/synchronization/brigadier/LongArgumentInfo$Template; a
net/minecraft/commands/synchronization/brigadier/LongArgumentInfo$Template go$a
	max c
	min b
	instantiate (Lnet/minecraft/commands/CommandBuildContext;)Lcom/mojang/brigadier/arguments/ArgumentType; b
	instantiate (Lnet/minecraft/commands/CommandBuildContext;)Lcom/mojang/brigadier/arguments/LongArgumentType; a
	type ()Lnet/minecraft/commands/synchronization/ArgumentTypeInfo; a
net/minecraft/commands/synchronization/brigadier/StringArgumentSerializer gp
	deserializeFromNetwork (Lnet/minecraft/network/FriendlyByteBuf;)Lnet/minecraft/commands/synchronization/ArgumentTypeInfo$Template; b
	deserializeFromNetwork (Lnet/minecraft/network/FriendlyByteBuf;)Lnet/minecraft/commands/synchronization/brigadier/StringArgumentSerializer$Template; a
	serializeToJson (Lnet/minecraft/commands/synchronization/ArgumentTypeInfo$Template;Lcom/google/gson/JsonObject;)V a
	serializeToJson (Lnet/minecraft/commands/synchronization/brigadier/StringArgumentSerializer$Template;Lcom/google/gson/JsonObject;)V a
	serializeToNetwork (Lnet/minecraft/commands/synchronization/ArgumentTypeInfo$Template;Lnet/minecraft/network/FriendlyByteBuf;)V a
	serializeToNetwork (Lnet/minecraft/commands/synchronization/brigadier/StringArgumentSerializer$Template;Lnet/minecraft/network/FriendlyByteBuf;)V a
	unpack (Lcom/mojang/brigadier/arguments/ArgumentType;)Lnet/minecraft/commands/synchronization/ArgumentTypeInfo$Template; a
	unpack (Lcom/mojang/brigadier/arguments/StringArgumentType;)Lnet/minecraft/commands/synchronization/brigadier/StringArgumentSerializer$Template; a
net/minecraft/commands/synchronization/brigadier/StringArgumentSerializer$Template gp$a
	type b
	instantiate (Lnet/minecraft/commands/CommandBuildContext;)Lcom/mojang/brigadier/arguments/ArgumentType; b
	instantiate (Lnet/minecraft/commands/CommandBuildContext;)Lcom/mojang/brigadier/arguments/StringArgumentType; a
	type ()Lnet/minecraft/commands/synchronization/ArgumentTypeInfo; a
net/minecraft/core/AxisCycle gs
	$VALUES f
	AXIS_VALUES d
	BACKWARD c
	FORWARD b
	NONE a
	VALUES e
	$values ()[Lnet/minecraft/core/AxisCycle; b
	between (Lnet/minecraft/core/Direction$Axis;Lnet/minecraft/core/Direction$Axis;)Lnet/minecraft/core/AxisCycle; a
	cycle (DDDLnet/minecraft/core/Direction$Axis;)D a
	cycle (IIILnet/minecraft/core/Direction$Axis;)I a
	cycle (Lnet/minecraft/core/Direction$Axis;)Lnet/minecraft/core/Direction$Axis; a
	inverse ()Lnet/minecraft/core/AxisCycle; a
net/minecraft/core/BlockMath gt
	LOGGER c
	VANILLA_UV_TRANSFORM_GLOBAL_TO_LOCAL b
	VANILLA_UV_TRANSFORM_LOCAL_TO_GLOBAL a
	blockCenterToCorner (Lcom/mojang/math/Transformation;)Lcom/mojang/math/Transformation; a
	blockCornerToCenter (Lcom/mojang/math/Transformation;)Lcom/mojang/math/Transformation; b
	getUVLockTransform (Lcom/mojang/math/Transformation;Lnet/minecraft/core/Direction;Ljava/util/function/Supplier;)Lcom/mojang/math/Transformation; a
net/minecraft/core/BlockPos gu
	CODEC a
	LOGGER d
	PACKED_X_LENGTH e
	PACKED_X_MASK i
	PACKED_Y_LENGTH c
	PACKED_Y_MASK j
	PACKED_Z_LENGTH h
	PACKED_Z_MASK k
	X_OFFSET n
	Y_OFFSET l
	ZERO b
	Z_OFFSET m
	above ()Lnet/minecraft/core/BlockPos; c
	above ()Lnet/minecraft/core/Vec3i; p
	above (I)Lnet/minecraft/core/BlockPos; b
	above (I)Lnet/minecraft/core/Vec3i; n
	asLong ()J a
	asLong (III)J a
	atY (I)Lnet/minecraft/core/BlockPos; h
	below ()Lnet/minecraft/core/BlockPos; d
	below ()Lnet/minecraft/core/Vec3i; o
	below (I)Lnet/minecraft/core/BlockPos; c
	below (I)Lnet/minecraft/core/Vec3i; m
	betweenClosed (IIIIII)Ljava/lang/Iterable; b
	betweenClosed (Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Ljava/lang/Iterable; a
	betweenClosedStream (IIIIII)Ljava/util/stream/Stream; a
	betweenClosedStream (Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Ljava/util/stream/Stream; b
	betweenClosedStream (Lnet/minecraft/world/level/levelgen/structure/BoundingBox;)Ljava/util/stream/Stream; a
	betweenClosedStream (Lnet/minecraft/world/phys/AABB;)Ljava/util/stream/Stream; a
	breadthFirstTraversal (Lnet/minecraft/core/BlockPos;IILjava/util/function/BiConsumer;Ljava/util/function/Predicate;)I a
	containing (DDD)Lnet/minecraft/core/BlockPos; a
	containing (Lnet/minecraft/core/Position;)Lnet/minecraft/core/BlockPos; a
	cross (Lnet/minecraft/core/Vec3i;)Lnet/minecraft/core/BlockPos; c
	cross (Lnet/minecraft/core/Vec3i;)Lnet/minecraft/core/Vec3i; d
	east ()Lnet/minecraft/core/BlockPos; h
	east ()Lnet/minecraft/core/Vec3i; k
	east (I)Lnet/minecraft/core/BlockPos; g
	east (I)Lnet/minecraft/core/Vec3i; i
	findClosestMatch (Lnet/minecraft/core/BlockPos;IILjava/util/function/Predicate;)Ljava/util/Optional; a
	getCenter ()Lnet/minecraft/world/phys/Vec3; b
	getFlatIndex (J)J e
	getX (J)I a
	getY (J)I b
	getZ (J)I c
	immutable ()Lnet/minecraft/core/BlockPos; i
	multiply (I)Lnet/minecraft/core/BlockPos; a
	multiply (I)Lnet/minecraft/core/Vec3i; o
	mutable ()Lnet/minecraft/core/BlockPos$MutableBlockPos; j
	north ()Lnet/minecraft/core/BlockPos; e
	north ()Lnet/minecraft/core/Vec3i; n
	north (I)Lnet/minecraft/core/BlockPos; d
	north (I)Lnet/minecraft/core/Vec3i; l
	of (J)Lnet/minecraft/core/BlockPos; d
	offset (III)Lnet/minecraft/core/BlockPos; b
	offset (III)Lnet/minecraft/core/Vec3i; c
	offset (JIII)J a
	offset (JLnet/minecraft/core/Direction;)J a
	offset (Lnet/minecraft/core/Vec3i;)Lnet/minecraft/core/BlockPos; a
	offset (Lnet/minecraft/core/Vec3i;)Lnet/minecraft/core/Vec3i; f
	randomBetweenClosed (Lnet/minecraft/util/RandomSource;IIIIIII)Ljava/lang/Iterable; a
	randomInCube (Lnet/minecraft/util/RandomSource;ILnet/minecraft/core/BlockPos;I)Ljava/lang/Iterable; a
	relative (Lnet/minecraft/core/Direction$Axis;I)Lnet/minecraft/core/BlockPos; a
	relative (Lnet/minecraft/core/Direction$Axis;I)Lnet/minecraft/core/Vec3i; b
	relative (Lnet/minecraft/core/Direction;)Lnet/minecraft/core/BlockPos; a
	relative (Lnet/minecraft/core/Direction;)Lnet/minecraft/core/Vec3i; b
	relative (Lnet/minecraft/core/Direction;I)Lnet/minecraft/core/BlockPos; a
	relative (Lnet/minecraft/core/Direction;I)Lnet/minecraft/core/Vec3i; b
	rotate (Lnet/minecraft/world/level/block/Rotation;)Lnet/minecraft/core/BlockPos; a
	south ()Lnet/minecraft/core/BlockPos; f
	south ()Lnet/minecraft/core/Vec3i; m
	south (I)Lnet/minecraft/core/BlockPos; e
	south (I)Lnet/minecraft/core/Vec3i; k
	spiralAround (Lnet/minecraft/core/BlockPos;ILnet/minecraft/core/Direction;Lnet/minecraft/core/Direction;)Ljava/lang/Iterable; a
	squareOutSouthEast (Lnet/minecraft/core/BlockPos;)Ljava/util/stream/Stream; a
	subtract (Lnet/minecraft/core/Vec3i;)Lnet/minecraft/core/BlockPos; b
	subtract (Lnet/minecraft/core/Vec3i;)Lnet/minecraft/core/Vec3i; e
	west ()Lnet/minecraft/core/BlockPos; g
	west ()Lnet/minecraft/core/Vec3i; l
	west (I)Lnet/minecraft/core/BlockPos; f
	west (I)Lnet/minecraft/core/Vec3i; j
	withinManhattan (Lnet/minecraft/core/BlockPos;III)Ljava/lang/Iterable; a
	withinManhattanStream (Lnet/minecraft/core/BlockPos;III)Ljava/util/stream/Stream; b
net/minecraft/core/BlockPos$MutableBlockPos gu$a
	above ()Lnet/minecraft/core/Vec3i; p
	above (I)Lnet/minecraft/core/Vec3i; n
	below ()Lnet/minecraft/core/Vec3i; o
	below (I)Lnet/minecraft/core/Vec3i; m
	clamp (Lnet/minecraft/core/Direction$Axis;II)Lnet/minecraft/core/BlockPos$MutableBlockPos; a
	cross (Lnet/minecraft/core/Vec3i;)Lnet/minecraft/core/Vec3i; d
	east ()Lnet/minecraft/core/Vec3i; k
	east (I)Lnet/minecraft/core/Vec3i; i
	immutable ()Lnet/minecraft/core/BlockPos; i
	move (III)Lnet/minecraft/core/BlockPos$MutableBlockPos; e
	move (Lnet/minecraft/core/Direction;)Lnet/minecraft/core/BlockPos$MutableBlockPos; c
	move (Lnet/minecraft/core/Direction;I)Lnet/minecraft/core/BlockPos$MutableBlockPos; c
	move (Lnet/minecraft/core/Vec3i;)Lnet/minecraft/core/BlockPos$MutableBlockPos; h
	multiply (I)Lnet/minecraft/core/BlockPos; a
	multiply (I)Lnet/minecraft/core/Vec3i; o
	north ()Lnet/minecraft/core/Vec3i; n
	north (I)Lnet/minecraft/core/Vec3i; l
	offset (III)Lnet/minecraft/core/BlockPos; b
	offset (III)Lnet/minecraft/core/Vec3i; c
	offset (Lnet/minecraft/core/Vec3i;)Lnet/minecraft/core/Vec3i; f
	relative (Lnet/minecraft/core/Direction$Axis;I)Lnet/minecraft/core/BlockPos; a
	relative (Lnet/minecraft/core/Direction$Axis;I)Lnet/minecraft/core/Vec3i; b
	relative (Lnet/minecraft/core/Direction;)Lnet/minecraft/core/Vec3i; b
	relative (Lnet/minecraft/core/Direction;I)Lnet/minecraft/core/BlockPos; a
	relative (Lnet/minecraft/core/Direction;I)Lnet/minecraft/core/Vec3i; b
	rotate (Lnet/minecraft/world/level/block/Rotation;)Lnet/minecraft/core/BlockPos; a
	set (DDD)Lnet/minecraft/core/BlockPos$MutableBlockPos; b
	set (III)Lnet/minecraft/core/BlockPos$MutableBlockPos; d
	set (J)Lnet/minecraft/core/BlockPos$MutableBlockPos; f
	set (Lnet/minecraft/core/AxisCycle;III)Lnet/minecraft/core/BlockPos$MutableBlockPos; a
	set (Lnet/minecraft/core/Vec3i;)Lnet/minecraft/core/BlockPos$MutableBlockPos; g
	setWithOffset (Lnet/minecraft/core/Vec3i;III)Lnet/minecraft/core/BlockPos$MutableBlockPos; a
	setWithOffset (Lnet/minecraft/core/Vec3i;Lnet/minecraft/core/Direction;)Lnet/minecraft/core/BlockPos$MutableBlockPos; a
	setWithOffset (Lnet/minecraft/core/Vec3i;Lnet/minecraft/core/Vec3i;)Lnet/minecraft/core/BlockPos$MutableBlockPos; a
	setX (I)Lnet/minecraft/core/BlockPos$MutableBlockPos; p
	setX (I)Lnet/minecraft/core/Vec3i; u
	setY (I)Lnet/minecraft/core/BlockPos$MutableBlockPos; q
	setY (I)Lnet/minecraft/core/Vec3i; t
	setZ (I)Lnet/minecraft/core/BlockPos$MutableBlockPos; r
	setZ (I)Lnet/minecraft/core/Vec3i; s
	south ()Lnet/minecraft/core/Vec3i; m
	south (I)Lnet/minecraft/core/Vec3i; k
	subtract (Lnet/minecraft/core/Vec3i;)Lnet/minecraft/core/Vec3i; e
	west ()Lnet/minecraft/core/Vec3i; l
	west (I)Lnet/minecraft/core/Vec3i; j
net/minecraft/core/BlockSource gv
	getBlockState ()Lnet/minecraft/world/level/block/state/BlockState; e
	getEntity ()Lnet/minecraft/world/level/block/entity/BlockEntity; f
	getLevel ()Lnet/minecraft/server/level/ServerLevel; g
	getPos ()Lnet/minecraft/core/BlockPos; d
	x ()D a
	y ()D b
	z ()D c
net/minecraft/core/BlockSourceImpl gw
	level a
	pos b
	getBlockState ()Lnet/minecraft/world/level/block/state/BlockState; e
	getEntity ()Lnet/minecraft/world/level/block/entity/BlockEntity; f
	getLevel ()Lnet/minecraft/server/level/ServerLevel; g
	getPos ()Lnet/minecraft/core/BlockPos; d
	x ()D a
	y ()D b
	z ()D c
net/minecraft/core/Cursor3D gx
	TYPE_CORNER d
	TYPE_EDGE c
	TYPE_FACE b
	TYPE_INSIDE a
	depth j
	end k
	height i
	index l
	originX e
	originY f
	originZ g
	width h
	x m
	y n
	z o
	advance ()Z a
	getNextType ()I e
	nextX ()I b
	nextY ()I c
	nextZ ()I d
net/minecraft/core/DefaultedMappedRegistry gy
	defaultKey b
	defaultValue c
	byId (I)Ljava/lang/Object; a
	get (Lnet/minecraft/resources/ResourceLocation;)Ljava/lang/Object; a
	getDefaultKey ()Lnet/minecraft/resources/ResourceLocation; a
	getId (Ljava/lang/Object;)I a
	getKey (Ljava/lang/Object;)Lnet/minecraft/resources/ResourceLocation; b
	getOptional (Lnet/minecraft/resources/ResourceLocation;)Ljava/util/Optional; b
	getRandom (Lnet/minecraft/util/RandomSource;)Ljava/util/Optional; a
	registerMapping (ILnet/minecraft/resources/ResourceKey;Ljava/lang/Object;Lcom/mojang/serialization/Lifecycle;)Lnet/minecraft/core/Holder$Reference; a
	registerMapping (ILnet/minecraft/resources/ResourceKey;Ljava/lang/Object;Lcom/mojang/serialization/Lifecycle;)Lnet/minecraft/core/Holder; b
net/minecraft/core/DefaultedRegistry gz
	byId (I)Ljava/lang/Object; a
	get (Lnet/minecraft/resources/ResourceLocation;)Ljava/lang/Object; a
	getDefaultKey ()Lnet/minecraft/resources/ResourceLocation; a
	getKey (Ljava/lang/Object;)Lnet/minecraft/resources/ResourceLocation; b
net/minecraft/core/Direction ha
	$VALUES s
	BY_2D_DATA r
	BY_3D_DATA q
	CODEC g
	DOWN a
	EAST f
	NORTH c
	SOUTH d
	UP b
	VALUES p
	VERTICAL_CODEC h
	WEST e
	axis m
	axisDirection n
	data2d k
	data3d i
	name l
	normal o
	oppositeIndex j
	$values ()[Lnet/minecraft/core/Direction; w
	allShuffled (Lnet/minecraft/util/RandomSource;)Ljava/util/Collection; a
	byName (Ljava/lang/String;)Lnet/minecraft/core/Direction; a
	from2DDataValue (I)Lnet/minecraft/core/Direction; b
	from3DDataValue (I)Lnet/minecraft/core/Direction; a
	fromAxisAndDirection (Lnet/minecraft/core/Direction$Axis;Lnet/minecraft/core/Direction$AxisDirection;)Lnet/minecraft/core/Direction; a
	fromDelta (III)Lnet/minecraft/core/Direction; a
	fromYRot (D)Lnet/minecraft/core/Direction; a
	get (Lnet/minecraft/core/Direction$AxisDirection;Lnet/minecraft/core/Direction$Axis;)Lnet/minecraft/core/Direction; a
	get2DDataValue ()I e
	get3DDataValue ()I d
	getAxis ()Lnet/minecraft/core/Direction$Axis; o
	getAxisDirection ()Lnet/minecraft/core/Direction$AxisDirection; f
	getClockWise ()Lnet/minecraft/core/Direction; h
	getClockWise (Lnet/minecraft/core/Direction$Axis;)Lnet/minecraft/core/Direction; a
	getClockWiseX ()Lnet/minecraft/core/Direction; r
	getClockWiseZ ()Lnet/minecraft/core/Direction; t
	getCounterClockWise ()Lnet/minecraft/core/Direction; i
	getCounterClockWise (Lnet/minecraft/core/Direction$Axis;)Lnet/minecraft/core/Direction; b
	getCounterClockWiseX ()Lnet/minecraft/core/Direction; s
	getCounterClockWiseZ ()Lnet/minecraft/core/Direction; u
	getFacingAxis (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/core/Direction$Axis;)Lnet/minecraft/core/Direction; a
	getName ()Ljava/lang/String; n
	getNearest (DDD)Lnet/minecraft/core/Direction; a
	getNearest (FFF)Lnet/minecraft/core/Direction; a
	getNormal ()Lnet/minecraft/core/Vec3i; q
	getOpposite ()Lnet/minecraft/core/Direction; g
	getRandom (Lnet/minecraft/util/RandomSource;)Lnet/minecraft/core/Direction; b
	getRotation ()Lorg/joml/Quaternionf; b
	getSerializedName ()Ljava/lang/String; c
	getStepX ()I j
	getStepY ()I k
	getStepZ ()I l
	isFacingAngle (F)Z a
	makeDirectionArray (Lnet/minecraft/core/Direction;Lnet/minecraft/core/Direction;Lnet/minecraft/core/Direction;)[Lnet/minecraft/core/Direction; a
	orderedByNearest (Lnet/minecraft/world/entity/Entity;)[Lnet/minecraft/core/Direction; a
	rotate (Lorg/joml/Matrix4f;Lnet/minecraft/core/Direction;)Lnet/minecraft/core/Direction; a
	step ()Lorg/joml/Vector3f; m
	stream ()Ljava/util/stream/Stream; a
	toYRot ()F p
	verifyVertical (Lnet/minecraft/core/Direction;)Lcom/mojang/serialization/DataResult; a
net/minecraft/core/Direction$Axis ha$a
	$VALUES g
	CODEC e
	VALUES d
	X a
	Y b
	Z c
	name f
	$values ()[Lnet/minecraft/core/Direction$Axis; f
	byName (Ljava/lang/String;)Lnet/minecraft/core/Direction$Axis; a
	choose (DDD)D a
	choose (III)I a
	getName ()Ljava/lang/String; a
	getPlane ()Lnet/minecraft/core/Direction$Plane; e
	getRandom (Lnet/minecraft/util/RandomSource;)Lnet/minecraft/core/Direction$Axis; a
	getSerializedName ()Ljava/lang/String; c
	isHorizontal ()Z d
	isVertical ()Z b
	test (Lnet/minecraft/core/Direction;)Z a
net/minecraft/core/Direction$AxisDirection ha$b
	$VALUES e
	NEGATIVE b
	POSITIVE a
	name d
	step c
	$values ()[Lnet/minecraft/core/Direction$AxisDirection; d
	getName ()Ljava/lang/String; b
	getStep ()I a
	opposite ()Lnet/minecraft/core/Direction$AxisDirection; c
net/minecraft/core/Direction$Plane ha$c
	$VALUES e
	HORIZONTAL a
	VERTICAL b
	axis d
	faces c
	$values ()[Lnet/minecraft/core/Direction$Plane; b
	getRandomAxis (Lnet/minecraft/util/RandomSource;)Lnet/minecraft/core/Direction$Axis; b
	getRandomDirection (Lnet/minecraft/util/RandomSource;)Lnet/minecraft/core/Direction; a
	shuffledCopy (Lnet/minecraft/util/RandomSource;)Ljava/util/List; c
	stream ()Ljava/util/stream/Stream; a
	test (Lnet/minecraft/core/Direction;)Z a
net/minecraft/core/Direction8 hb
	$VALUES k
	EAST c
	NORTH a
	NORTH_EAST b
	NORTH_WEST h
	SOUTH e
	SOUTH_EAST d
	SOUTH_WEST f
	WEST g
	directions i
	step j
	$values ()[Lnet/minecraft/core/Direction8; d
	getDirections ()Ljava/util/Set; a
	getStepX ()I b
	getStepZ ()I c
net/minecraft/core/FrontAndTop hc
	$VALUES q
	DOWN_EAST a
	DOWN_NORTH b
	DOWN_SOUTH c
	DOWN_WEST d
	EAST_UP j
	LOOKUP_TOP_FRONT m
	NORTH_UP k
	SOUTH_UP l
	UP_EAST e
	UP_NORTH f
	UP_SOUTH g
	UP_WEST h
	WEST_UP i
	front p
	name n
	top o
	$values ()[Lnet/minecraft/core/FrontAndTop; d
	fromFrontAndTop (Lnet/minecraft/core/Direction;Lnet/minecraft/core/Direction;)Lnet/minecraft/core/FrontAndTop; a
	front ()Lnet/minecraft/core/Direction; a
	getSerializedName ()Ljava/lang/String; c
	lookupKey (Lnet/minecraft/core/Direction;Lnet/minecraft/core/Direction;)I b
	top ()Lnet/minecraft/core/Direction; b
net/minecraft/core/GlobalPos hd
	CODEC a
	dimension b
	pos c
	dimension ()Lnet/minecraft/resources/ResourceKey; a
	of (Lnet/minecraft/resources/ResourceKey;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/core/GlobalPos; a
	pos ()Lnet/minecraft/core/BlockPos; b
net/minecraft/core/Holder he
	canSerializeIn (Lnet/minecraft/core/HolderOwner;)Z a
	direct (Ljava/lang/Object;)Lnet/minecraft/core/Holder; a
	is (Ljava/util/function/Predicate;)Z a
	is (Lnet/minecraft/resources/ResourceKey;)Z a
	is (Lnet/minecraft/resources/ResourceLocation;)Z a
	is (Lnet/minecraft/tags/TagKey;)Z a
	isBound ()Z b
	kind ()Lnet/minecraft/core/Holder$Kind; f
	tags ()Ljava/util/stream/Stream; c
	unwrap ()Lcom/mojang/datafixers/util/Either; d
	unwrapKey ()Ljava/util/Optional; e
	value ()Ljava/lang/Object; a
net/minecraft/core/Holder$Direct he$a
	value a
	canSerializeIn (Lnet/minecraft/core/HolderOwner;)Z a
	is (Ljava/util/function/Predicate;)Z a
	is (Lnet/minecraft/resources/ResourceKey;)Z a
	is (Lnet/minecraft/resources/ResourceLocation;)Z a
	is (Lnet/minecraft/tags/TagKey;)Z a
	isBound ()Z b
	kind ()Lnet/minecraft/core/Holder$Kind; f
	tags ()Ljava/util/stream/Stream; c
	unwrap ()Lcom/mojang/datafixers/util/Either; d
	unwrapKey ()Ljava/util/Optional; e
	value ()Ljava/lang/Object; a
net/minecraft/core/Holder$Kind he$b
	$VALUES c
	DIRECT b
	REFERENCE a
	$values ()[Lnet/minecraft/core/Holder$Kind; a
net/minecraft/core/Holder$Reference he$c
	key d
	owner a
	tags b
	type c
	value e
	bindKey (Lnet/minecraft/resources/ResourceKey;)V b
	bindTags (Ljava/util/Collection;)V a
	bindValue (Ljava/lang/Object;)V b
	canSerializeIn (Lnet/minecraft/core/HolderOwner;)Z a
	createIntrusive (Lnet/minecraft/core/HolderOwner;Ljava/lang/Object;)Lnet/minecraft/core/Holder$Reference; a
	createStandAlone (Lnet/minecraft/core/HolderOwner;Lnet/minecraft/resources/ResourceKey;)Lnet/minecraft/core/Holder$Reference; a
	is (Ljava/util/function/Predicate;)Z a
	is (Lnet/minecraft/resources/ResourceKey;)Z a
	is (Lnet/minecraft/resources/ResourceLocation;)Z a
	is (Lnet/minecraft/tags/TagKey;)Z a
	isBound ()Z b
	key ()Lnet/minecraft/resources/ResourceKey; g
	kind ()Lnet/minecraft/core/Holder$Kind; f
	tags ()Ljava/util/stream/Stream; c
	unwrap ()Lcom/mojang/datafixers/util/Either; d
	unwrapKey ()Ljava/util/Optional; e
	value ()Ljava/lang/Object; a
net/minecraft/core/Holder$Reference$Type he$c$a
	$VALUES c
	INTRUSIVE b
	STAND_ALONE a
	$values ()[Lnet/minecraft/core/Holder$Reference$Type; a
net/minecraft/core/HolderGetter hf
	get (Lnet/minecraft/resources/ResourceKey;)Ljava/util/Optional; a
	get (Lnet/minecraft/tags/TagKey;)Ljava/util/Optional; a
	getOrThrow (Lnet/minecraft/resources/ResourceKey;)Lnet/minecraft/core/Holder$Reference; b
	getOrThrow (Lnet/minecraft/tags/TagKey;)Lnet/minecraft/core/HolderSet$Named; b
net/minecraft/core/HolderGetter$Provider hf$a
	lookup (Lnet/minecraft/resources/ResourceKey;)Ljava/util/Optional; a
	lookupOrThrow (Lnet/minecraft/resources/ResourceKey;)Lnet/minecraft/core/HolderGetter; b
net/minecraft/core/HolderLookup hg
	filterElements (Ljava/util/function/Predicate;)Lnet/minecraft/core/HolderLookup; a
	listElementIds ()Ljava/util/stream/Stream; c
	listElements ()Ljava/util/stream/Stream; b
	listTagIds ()Ljava/util/stream/Stream; e
	listTags ()Ljava/util/stream/Stream; d
net/minecraft/core/HolderLookup$Delegate hg$a
	parent c
	get (Lnet/minecraft/resources/ResourceKey;)Ljava/util/Optional; a
	get (Lnet/minecraft/tags/TagKey;)Ljava/util/Optional; a
	listElements ()Ljava/util/stream/Stream; b
	listTags ()Ljava/util/stream/Stream; d
net/minecraft/core/HolderLookup$Provider hg$b
	asGetterLookup ()Lnet/minecraft/core/HolderGetter$Provider; a
	create (Ljava/util/stream/Stream;)Lnet/minecraft/core/HolderLookup$Provider; a
	lookup (Lnet/minecraft/resources/ResourceKey;)Ljava/util/Optional; a
	lookupOrThrow (Lnet/minecraft/resources/ResourceKey;)Lnet/minecraft/core/HolderLookup$RegistryLookup; b
net/minecraft/core/HolderLookup$RegistryLookup hg$c
	filterFeatures (Lnet/minecraft/world/flag/FeatureFlagSet;)Lnet/minecraft/core/HolderLookup; a
	key ()Lnet/minecraft/resources/ResourceKey; f
	registryLifecycle ()Lcom/mojang/serialization/Lifecycle; g
net/minecraft/core/HolderLookup$RegistryLookup$Delegate hg$c$a
	get (Lnet/minecraft/resources/ResourceKey;)Ljava/util/Optional; a
	get (Lnet/minecraft/tags/TagKey;)Ljava/util/Optional; a
	key ()Lnet/minecraft/resources/ResourceKey; f
	listElements ()Ljava/util/stream/Stream; b
	listTags ()Ljava/util/stream/Stream; d
	parent ()Lnet/minecraft/core/HolderLookup$RegistryLookup; a
	registryLifecycle ()Lcom/mojang/serialization/Lifecycle; g
net/minecraft/core/HolderOwner hh
	canSerializeIn (Lnet/minecraft/core/HolderOwner;)Z a
net/minecraft/core/HolderSet hi
	canSerializeIn (Lnet/minecraft/core/HolderOwner;)Z a
	contains (Lnet/minecraft/core/Holder;)Z a
	direct (Ljava/util/List;)Lnet/minecraft/core/HolderSet$Direct; a
	direct (Ljava/util/function/Function;Ljava/util/List;)Lnet/minecraft/core/HolderSet$Direct; a
	direct (Ljava/util/function/Function;[Ljava/lang/Object;)Lnet/minecraft/core/HolderSet$Direct; a
	direct ([Lnet/minecraft/core/Holder;)Lnet/minecraft/core/HolderSet$Direct; a
	emptyNamed (Lnet/minecraft/core/HolderOwner;Lnet/minecraft/tags/TagKey;)Lnet/minecraft/core/HolderSet$Named; a
	get (I)Lnet/minecraft/core/Holder; a
	getRandomElement (Lnet/minecraft/util/RandomSource;)Ljava/util/Optional; a
	size ()I b
	stream ()Ljava/util/stream/Stream; a
	unwrap ()Lcom/mojang/datafixers/util/Either; c
	unwrapKey ()Ljava/util/Optional; d
net/minecraft/core/HolderSet$Direct hi$a
	contents a
	contentsSet b
	contains (Lnet/minecraft/core/Holder;)Z a
	contents ()Ljava/util/List; e
	unwrap ()Lcom/mojang/datafixers/util/Either; c
	unwrapKey ()Ljava/util/Optional; d
net/minecraft/core/HolderSet$ListBacked hi$b
	canSerializeIn (Lnet/minecraft/core/HolderOwner;)Z a
	contents ()Ljava/util/List; e
	get (I)Lnet/minecraft/core/Holder; a
	getRandomElement (Lnet/minecraft/util/RandomSource;)Ljava/util/Optional; a
	size ()I b
	stream ()Ljava/util/stream/Stream; a
net/minecraft/core/HolderSet$Named hi$c
	contents c
	key b
	owner a
	bind (Ljava/util/List;)V b
	canSerializeIn (Lnet/minecraft/core/HolderOwner;)Z a
	contains (Lnet/minecraft/core/Holder;)Z a
	contents ()Ljava/util/List; e
	key ()Lnet/minecraft/tags/TagKey; f
	unwrap ()Lcom/mojang/datafixers/util/Either; c
	unwrapKey ()Ljava/util/Optional; d
net/minecraft/core/IdMap hj
	DEFAULT a
	byId (I)Ljava/lang/Object; a
	byIdOrThrow (I)Ljava/lang/Object; b
	getId (Ljava/lang/Object;)I a
	size ()I b
net/minecraft/core/IdMapper hk
	idToT d
	nextId b
	tToId c
	add (Ljava/lang/Object;)V b
	addMapping (Ljava/lang/Object;I)V a
	byId (I)Ljava/lang/Object; a
	contains (I)Z c
	getId (Ljava/lang/Object;)I a
	size ()I b
net/minecraft/core/LayeredRegistryAccess hl
	composite c
	keys a
	values b
	collectRegistries (Ljava/util/stream/Stream;)Ljava/util/Map; a
	compositeAccess ()Lnet/minecraft/core/RegistryAccess$Frozen; a
	getAccessForLoading (Ljava/lang/Object;)Lnet/minecraft/core/RegistryAccess$Frozen; b
	getAccessFrom (Ljava/lang/Object;)Lnet/minecraft/core/RegistryAccess$Frozen; c
	getCompositeAccessForLayers (II)Lnet/minecraft/core/RegistryAccess$Frozen; a
	getLayer (Ljava/lang/Object;)Lnet/minecraft/core/RegistryAccess$Frozen; a
	getLayerIndexOrThrow (Ljava/lang/Object;)I d
	replaceFrom (Ljava/lang/Object;Ljava/util/List;)Lnet/minecraft/core/LayeredRegistryAccess; a
	replaceFrom (Ljava/lang/Object;[Lnet/minecraft/core/RegistryAccess$Frozen;)Lnet/minecraft/core/LayeredRegistryAccess; a
net/minecraft/core/MappedRegistry hm
	LOGGER b
	byId d
	byKey g
	byLocation f
	byValue h
	frozen l
	holdersInOrder n
	key c
	lifecycles i
	lookup p
	nextId o
	registryLifecycle j
	tags k
	toId e
	unregisteredIntrusiveHolders m
	asLookup ()Lnet/minecraft/core/HolderLookup$RegistryLookup; p
	bindTags (Ljava/util/Map;)V a
	byId (I)Ljava/lang/Object; a
	containsKey (Lnet/minecraft/resources/ResourceKey;)Z c
	containsKey (Lnet/minecraft/resources/ResourceLocation;)Z c
	createIntrusiveHolder (Ljava/lang/Object;)Lnet/minecraft/core/Holder$Reference; f
	createRegistrationLookup ()Lnet/minecraft/core/HolderGetter; n
	createTag (Lnet/minecraft/tags/TagKey;)Lnet/minecraft/core/HolderSet$Named; d
	entrySet ()Ljava/util/Set; g
	freeze ()Lnet/minecraft/core/Registry; l
	get (Lnet/minecraft/resources/ResourceKey;)Ljava/lang/Object; a
	get (Lnet/minecraft/resources/ResourceLocation;)Ljava/lang/Object; a
	getHolder (I)Ljava/util/Optional; c
	getHolder (Lnet/minecraft/resources/ResourceKey;)Ljava/util/Optional; b
	getId (Ljava/lang/Object;)I a
	getKey (Ljava/lang/Object;)Lnet/minecraft/resources/ResourceLocation; b
	getOrCreateHolderOrThrow (Lnet/minecraft/resources/ResourceKey;)Lnet/minecraft/core/Holder$Reference; h
	getOrCreateTag (Lnet/minecraft/tags/TagKey;)Lnet/minecraft/core/HolderSet$Named; a
	getRandom (Lnet/minecraft/util/RandomSource;)Ljava/util/Optional; a
	getResourceKey (Ljava/lang/Object;)Ljava/util/Optional; c
	getTag (Lnet/minecraft/tags/TagKey;)Ljava/util/Optional; b
	getTagNames ()Ljava/util/stream/Stream; j
	getTags ()Ljava/util/stream/Stream; i
	getValueFromNullable (Lnet/minecraft/core/Holder$Reference;)Ljava/lang/Object; a
	holderOwner ()Lnet/minecraft/core/HolderOwner; o
	holders ()Ljava/util/stream/Stream; h
	holdersInOrder ()Ljava/util/List; a
	isEmpty ()Z k
	key ()Lnet/minecraft/resources/ResourceKey; c
	keySet ()Ljava/util/Set; e
	lifecycle (Ljava/lang/Object;)Lcom/mojang/serialization/Lifecycle; e
	register (Lnet/minecraft/resources/ResourceKey;Ljava/lang/Object;Lcom/mojang/serialization/Lifecycle;)Lnet/minecraft/core/Holder$Reference; a
	registerMapping (ILnet/minecraft/resources/ResourceKey;Ljava/lang/Object;Lcom/mojang/serialization/Lifecycle;)Lnet/minecraft/core/Holder$Reference; a
	registerMapping (ILnet/minecraft/resources/ResourceKey;Ljava/lang/Object;Lcom/mojang/serialization/Lifecycle;)Lnet/minecraft/core/Holder; b
	registryKeySet ()Ljava/util/Set; f
	registryLifecycle ()Lcom/mojang/serialization/Lifecycle; d
	resetTags ()V m
	size ()I b
	validateWrite ()V v
	validateWrite (Lnet/minecraft/resources/ResourceKey;)V g
	wrapAsHolder (Ljava/lang/Object;)Lnet/minecraft/core/Holder; d
net/minecraft/core/NonNullList hn
	defaultValue b
	list a
	create ()Lnet/minecraft/core/NonNullList; a
	createWithCapacity (I)Lnet/minecraft/core/NonNullList; a
	of (Ljava/lang/Object;[Ljava/lang/Object;)Lnet/minecraft/core/NonNullList; a
	withSize (ILjava/lang/Object;)Lnet/minecraft/core/NonNullList; a
net/minecraft/core/Position ho
	x ()D a
	y ()D b
	z ()D c
net/minecraft/core/PositionImpl hp
	x a
	y b
	z c
	x ()D a
	y ()D b
	z ()D c
net/minecraft/core/QuartPos hq
	BITS a
	MASK c
	SECTION_TO_QUARTS_BITS d
	SIZE b
	fromBlock (I)I a
	fromSection (I)I d
	quartLocal (I)I b
	toBlock (I)I c
	toSection (I)I e
net/minecraft/core/Registry hr
	asHolderIdMap ()Lnet/minecraft/core/IdMap; t
	asLookup ()Lnet/minecraft/core/HolderLookup$RegistryLookup; p
	asTagAddingLookup ()Lnet/minecraft/core/HolderLookup$RegistryLookup; u
	bindTags (Ljava/util/Map;)V a
	byNameCodec ()Lcom/mojang/serialization/Codec; q
	containsKey (Lnet/minecraft/resources/ResourceKey;)Z c
	containsKey (Lnet/minecraft/resources/ResourceLocation;)Z c
	createIntrusiveHolder (Ljava/lang/Object;)Lnet/minecraft/core/Holder$Reference; f
	entrySet ()Ljava/util/Set; g
	freeze ()Lnet/minecraft/core/Registry; l
	get (Lnet/minecraft/resources/ResourceKey;)Ljava/lang/Object; a
	get (Lnet/minecraft/resources/ResourceLocation;)Ljava/lang/Object; a
	getHolder (I)Ljava/util/Optional; c
	getHolder (Lnet/minecraft/resources/ResourceKey;)Ljava/util/Optional; b
	getHolderOrThrow (Lnet/minecraft/resources/ResourceKey;)Lnet/minecraft/core/Holder$Reference; f
	getId (Ljava/lang/Object;)I a
	getKey (Ljava/lang/Object;)Lnet/minecraft/resources/ResourceLocation; b
	getOptional (Lnet/minecraft/resources/ResourceKey;)Ljava/util/Optional; d
	getOptional (Lnet/minecraft/resources/ResourceLocation;)Ljava/util/Optional; b
	getOrCreateTag (Lnet/minecraft/tags/TagKey;)Lnet/minecraft/core/HolderSet$Named; a
	getOrThrow (Lnet/minecraft/resources/ResourceKey;)Ljava/lang/Object; e
	getRandom (Lnet/minecraft/util/RandomSource;)Ljava/util/Optional; a
	getResourceKey (Ljava/lang/Object;)Ljava/util/Optional; c
	getTag (Lnet/minecraft/tags/TagKey;)Ljava/util/Optional; b
	getTagNames ()Ljava/util/stream/Stream; j
	getTagOrEmpty (Lnet/minecraft/tags/TagKey;)Ljava/lang/Iterable; c
	getTags ()Ljava/util/stream/Stream; i
	holderByNameCodec ()Lcom/mojang/serialization/Codec; r
	holderOwner ()Lnet/minecraft/core/HolderOwner; o
	holders ()Ljava/util/stream/Stream; h
	key ()Lnet/minecraft/resources/ResourceKey; c
	keySet ()Ljava/util/Set; e
	lifecycle (Ljava/lang/Object;)Lcom/mojang/serialization/Lifecycle; e
	register (Lnet/minecraft/core/Registry;Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object; a
	register (Lnet/minecraft/core/Registry;Lnet/minecraft/resources/ResourceKey;Ljava/lang/Object;)Ljava/lang/Object; a
	register (Lnet/minecraft/core/Registry;Lnet/minecraft/resources/ResourceLocation;Ljava/lang/Object;)Ljava/lang/Object; a
	registerForHolder (Lnet/minecraft/core/Registry;Lnet/minecraft/resources/ResourceKey;Ljava/lang/Object;)Lnet/minecraft/core/Holder$Reference; b
	registerForHolder (Lnet/minecraft/core/Registry;Lnet/minecraft/resources/ResourceLocation;Ljava/lang/Object;)Lnet/minecraft/core/Holder$Reference; b
	registerMapping (Lnet/minecraft/core/Registry;ILjava/lang/String;Ljava/lang/Object;)Ljava/lang/Object; a
	registryKeySet ()Ljava/util/Set; f
	registryLifecycle ()Lcom/mojang/serialization/Lifecycle; d
	resetTags ()V m
	stream ()Ljava/util/stream/Stream; s
	wrapAsHolder (Ljava/lang/Object;)Lnet/minecraft/core/Holder; d
net/minecraft/core/RegistryAccess hs
	EMPTY b
	LOGGER a
	allRegistriesLifecycle ()Lcom/mojang/serialization/Lifecycle; d
	freeze ()Lnet/minecraft/core/RegistryAccess$Frozen; c
	fromRegistryOfRegistries (Lnet/minecraft/core/Registry;)Lnet/minecraft/core/RegistryAccess$Frozen; a
	lookup (Lnet/minecraft/resources/ResourceKey;)Ljava/util/Optional; a
	registries ()Ljava/util/stream/Stream; b
	registry (Lnet/minecraft/resources/ResourceKey;)Ljava/util/Optional; c
	registryOrThrow (Lnet/minecraft/resources/ResourceKey;)Lnet/minecraft/core/Registry; d
net/minecraft/core/RegistryAccess$Frozen hs$b
net/minecraft/core/RegistryAccess$ImmutableRegistryAccess hs$c
	registries c
	registries ()Ljava/util/stream/Stream; b
	registry (Lnet/minecraft/resources/ResourceKey;)Ljava/util/Optional; c
net/minecraft/core/RegistryAccess$RegistryEntry hs$d
	key a
	value b
	freeze ()Lnet/minecraft/core/RegistryAccess$RegistryEntry; c
	fromMapEntry (Ljava/util/Map$Entry;)Lnet/minecraft/core/RegistryAccess$RegistryEntry; a
	fromUntyped (Lnet/minecraft/resources/ResourceKey;Lnet/minecraft/core/Registry;)Lnet/minecraft/core/RegistryAccess$RegistryEntry; a
	key ()Lnet/minecraft/resources/ResourceKey; a
	value ()Lnet/minecraft/core/Registry; b
net/minecraft/core/RegistryCodecs ht
	fullCodec (Lnet/minecraft/resources/ResourceKey;Lcom/mojang/serialization/Lifecycle;Lcom/mojang/serialization/Codec;)Lcom/mojang/serialization/Codec; b
	homogeneousList (Lnet/minecraft/resources/ResourceKey;)Lcom/mojang/serialization/Codec; a
	homogeneousList (Lnet/minecraft/resources/ResourceKey;Lcom/mojang/serialization/Codec;)Lcom/mojang/serialization/Codec; a
	homogeneousList (Lnet/minecraft/resources/ResourceKey;Lcom/mojang/serialization/Codec;Z)Lcom/mojang/serialization/Codec; a
	homogeneousList (Lnet/minecraft/resources/ResourceKey;Z)Lcom/mojang/serialization/Codec; a
	networkCodec (Lnet/minecraft/resources/ResourceKey;Lcom/mojang/serialization/Lifecycle;Lcom/mojang/serialization/Codec;)Lcom/mojang/serialization/Codec; a
	withNameAndId (Lnet/minecraft/resources/ResourceKey;Lcom/mojang/serialization/MapCodec;)Lcom/mojang/serialization/MapCodec; a
net/minecraft/core/RegistryCodecs$RegistryEntry ht$a
	id b
	key a
	value c
	id ()I b
	key ()Lnet/minecraft/resources/ResourceKey; a
	value ()Ljava/lang/Object; c
net/minecraft/core/RegistrySetBuilder hu
	entries a
	add (Lnet/minecraft/resources/ResourceKey;Lcom/mojang/serialization/Lifecycle;Lnet/minecraft/core/RegistrySetBuilder$RegistryBootstrap;)Lnet/minecraft/core/RegistrySetBuilder; a
	add (Lnet/minecraft/resources/ResourceKey;Lnet/minecraft/core/RegistrySetBuilder$RegistryBootstrap;)Lnet/minecraft/core/RegistrySetBuilder; a
	build (Lnet/minecraft/core/RegistryAccess;)Lnet/minecraft/core/HolderLookup$Provider; a
	buildPatch (Lnet/minecraft/core/RegistryAccess;Lnet/minecraft/core/HolderLookup$Provider;)Lnet/minecraft/core/HolderLookup$Provider; a
	createState (Lnet/minecraft/core/RegistryAccess;)Lnet/minecraft/core/RegistrySetBuilder$BuildState; b
	wrapContextLookup (Lnet/minecraft/core/HolderLookup$RegistryLookup;)Lnet/minecraft/core/HolderGetter; a
net/minecraft/core/RegistrySetBuilder$BuildState hu$a
	errors e
	lookup b
	owner a
	registeredValues d
	registries c
	addOwner (Lnet/minecraft/core/HolderOwner;)V a
	bootstapContext ()Lnet/minecraft/data/worldgen/BootstapContext; a
	collectReferencedRegistries ()Ljava/util/stream/Stream; d
	create (Lnet/minecraft/core/RegistryAccess;Ljava/util/stream/Stream;)Lnet/minecraft/core/RegistrySetBuilder$BuildState; a
	errors ()Ljava/util/List; i
	fillMissingHolders (Lnet/minecraft/core/HolderLookup$Provider;)V a
	lookup ()Lnet/minecraft/core/RegistrySetBuilder$UniversalLookup; f
	owner ()Lnet/minecraft/core/RegistrySetBuilder$CompositeOwner; e
	registeredValues ()Ljava/util/Map; h
	registries ()Ljava/util/Map; g
	reportRemainingUnreferencedValues ()V b
	throwOnError ()V c
net/minecraft/core/RegistrySetBuilder$CompositeOwner hu$b
	owners a
	add (Lnet/minecraft/core/HolderOwner;)V b
	canSerializeIn (Lnet/minecraft/core/HolderOwner;)Z a
net/minecraft/core/RegistrySetBuilder$EmptyTagLookup hu$c
	owner b
	get (Lnet/minecraft/tags/TagKey;)Ljava/util/Optional; a
net/minecraft/core/RegistrySetBuilder$RegisteredValue hu$d
	lifecycle b
	value a
	lifecycle ()Lcom/mojang/serialization/Lifecycle; b
	value ()Ljava/lang/Object; a
net/minecraft/core/RegistrySetBuilder$RegistryBootstrap hu$e
net/minecraft/core/RegistrySetBuilder$RegistryContents hu$f
	key a
	lifecycle b
	values c
	buildAsLookup ()Lnet/minecraft/core/HolderLookup$RegistryLookup; a
	key ()Lnet/minecraft/resources/ResourceKey; b
	lifecycle ()Lcom/mojang/serialization/Lifecycle; c
	values ()Ljava/util/Map; d
net/minecraft/core/RegistrySetBuilder$RegistryStub hu$g
	bootstrap c
	key a
	lifecycle b
	apply (Lnet/minecraft/core/RegistrySetBuilder$BuildState;)V b
	bootstrap ()Lnet/minecraft/core/RegistrySetBuilder$RegistryBootstrap; c
	collectChanges (Lnet/minecraft/core/RegistrySetBuilder$BuildState;)Lnet/minecraft/core/RegistrySetBuilder$RegistryContents; a
	key ()Lnet/minecraft/resources/ResourceKey; a
	lifecycle ()Lcom/mojang/serialization/Lifecycle; b
net/minecraft/core/RegistrySetBuilder$UniversalLookup hu$h
	holders a
	get (Lnet/minecraft/resources/ResourceKey;)Ljava/util/Optional; a
	getOrCreate (Lnet/minecraft/resources/ResourceKey;)Lnet/minecraft/core/Holder$Reference; c
net/minecraft/core/RegistrySetBuilder$ValueAndHolder hu$i
	holder b
	value a
	holder ()Ljava/util/Optional; b
	value ()Lnet/minecraft/core/RegistrySetBuilder$RegisteredValue; a
net/minecraft/core/RegistrySynchronization hv
	NETWORKABLE_REGISTRIES b
	NETWORK_CODEC a
	captureMap (Lcom/mojang/serialization/codecs/UnboundedMapCodec;)Lcom/mojang/serialization/Codec; a
	getNetworkCodec (Lnet/minecraft/resources/ResourceKey;)Lcom/mojang/serialization/DataResult; a
	makeNetworkCodec ()Lcom/mojang/serialization/Codec; a
	networkSafeRegistries (Lnet/minecraft/core/LayeredRegistryAccess;)Ljava/util/stream/Stream; b
	networkedRegistries (Lnet/minecraft/core/LayeredRegistryAccess;)Ljava/util/stream/Stream; a
	ownedNetworkableRegistries (Lnet/minecraft/core/RegistryAccess;)Ljava/util/stream/Stream; a
	put (Lcom/google/common/collect/ImmutableMap$Builder;Lnet/minecraft/resources/ResourceKey;Lcom/mojang/serialization/Codec;)V a
net/minecraft/core/RegistrySynchronization$NetworkedRegistryData hv$a
	key a
	networkCodec b
	key ()Lnet/minecraft/resources/ResourceKey; a
	networkCodec ()Lcom/mojang/serialization/Codec; b
net/minecraft/core/Rotations hw
	x a
	y b
	z c
	getWrappedX ()F e
	getWrappedY ()F f
	getWrappedZ ()F g
	getX ()F b
	getY ()F c
	getZ ()F d
	save ()Lnet/minecraft/nbt/ListTag; a
net/minecraft/core/SectionPos hx
	PACKED_X_LENGTH h
	PACKED_X_MASK k
	PACKED_Y_LENGTH i
	PACKED_Y_MASK l
	PACKED_Z_LENGTH j
	PACKED_Z_MASK m
	RELATIVE_X_SHIFT q
	RELATIVE_Y_SHIFT r
	RELATIVE_Z_SHIFT s
	SECTION_BITS a
	SECTION_HALF_SIZE d
	SECTION_MASK c
	SECTION_MAX_INDEX e
	SECTION_SIZE b
	X_OFFSET p
	Y_OFFSET n
	Z_OFFSET o
	aroundAndAtBlockPos (IIILit/unimi/dsi/fastutil/longs/LongConsumer;)V a
	aroundAndAtBlockPos (JLit/unimi/dsi/fastutil/longs/LongConsumer;)V a
	aroundAndAtBlockPos (Lnet/minecraft/core/BlockPos;Lit/unimi/dsi/fastutil/longs/LongConsumer;)V a
	aroundChunk (Lnet/minecraft/world/level/ChunkPos;III)Ljava/util/stream/Stream; a
	asLong ()J s
	asLong (III)J b
	asLong (Lnet/minecraft/core/BlockPos;)J c
	betweenClosedStream (IIIIII)Ljava/util/stream/Stream; a
	blockToSection (J)J e
	blockToSectionCoord (D)I b
	blockToSectionCoord (I)I a
	blocksInside ()Ljava/util/stream/Stream; t
	bottomOf (Lnet/minecraft/world/level/chunk/ChunkAccess;)Lnet/minecraft/core/SectionPos; a
	center ()Lnet/minecraft/core/BlockPos; q
	chunk ()Lnet/minecraft/world/level/ChunkPos; r
	cube (Lnet/minecraft/core/SectionPos;I)Ljava/util/stream/Stream; a
	getZeroNode (II)J b
	getZeroNode (J)J f
	maxBlockX ()I g
	maxBlockY ()I h
	maxBlockZ ()I i
	minBlockX ()I d
	minBlockY ()I e
	minBlockZ ()I f
	of (III)Lnet/minecraft/core/SectionPos; a
	of (J)Lnet/minecraft/core/SectionPos; a
	of (Lnet/minecraft/core/BlockPos;)Lnet/minecraft/core/SectionPos; a
	of (Lnet/minecraft/core/Position;)Lnet/minecraft/core/SectionPos; a
	of (Lnet/minecraft/world/level/ChunkPos;I)Lnet/minecraft/core/SectionPos; a
	of (Lnet/minecraft/world/level/entity/EntityAccess;)Lnet/minecraft/core/SectionPos; a
	offset (III)Lnet/minecraft/core/SectionPos; d
	offset (III)Lnet/minecraft/core/Vec3i; c
	offset (JIII)J a
	offset (JLnet/minecraft/core/Direction;)J a
	origin ()Lnet/minecraft/core/BlockPos; j
	posToSectionCoord (D)I a
	relativeToBlockPos (S)Lnet/minecraft/core/BlockPos; g
	relativeToBlockX (S)I d
	relativeToBlockY (S)I e
	relativeToBlockZ (S)I f
	sectionRelative (I)I b
	sectionRelativePos (Lnet/minecraft/core/BlockPos;)S b
	sectionRelativeX (S)I a
	sectionRelativeY (S)I b
	sectionRelativeZ (S)I c
	sectionToBlockCoord (I)I c
	sectionToBlockCoord (II)I a
	x ()I a
	x (J)I b
	y ()I b
	y (J)I c
	z ()I c
	z (J)I d
net/minecraft/core/UUIDUtil hy
	AUTHLIB_CODEC c
	CODEC a
	STRING_CODEC b
	UUID_BYTES d
	UUID_PREFIX_OFFLINE_PLAYER e
	createOfflinePlayerUUID (Ljava/lang/String;)Ljava/util/UUID; a
	getOrCreatePlayerUUID (Lcom/mojang/authlib/GameProfile;)Ljava/util/UUID; a
	leastMostToIntArray (JJ)[I a
	readUUID (Lcom/mojang/serialization/Dynamic;)Ljava/util/UUID; a
	uuidFromIntArray ([I)Ljava/util/UUID; a
	uuidToByteArray (Ljava/util/UUID;)[B b
	uuidToIntArray (Ljava/util/UUID;)[I a
net/minecraft/core/Vec3i hz
	CODEC f
	ZERO g
	x a
	y b
	z c
	above ()Lnet/minecraft/core/Vec3i; p
	above (I)Lnet/minecraft/core/Vec3i; n
	below ()Lnet/minecraft/core/Vec3i; o
	below (I)Lnet/minecraft/core/Vec3i; m
	closerThan (Lnet/minecraft/core/Vec3i;D)Z a
	closerToCenterThan (Lnet/minecraft/core/Position;D)Z a
	compareTo (Lnet/minecraft/core/Vec3i;)I i
	cross (Lnet/minecraft/core/Vec3i;)Lnet/minecraft/core/Vec3i; d
	distManhattan (Lnet/minecraft/core/Vec3i;)I k
	distSqr (Lnet/minecraft/core/Vec3i;)D j
	distToCenterSqr (DDD)D c
	distToCenterSqr (Lnet/minecraft/core/Position;)D b
	distToLowCornerSqr (DDD)D d
	east ()Lnet/minecraft/core/Vec3i; k
	east (I)Lnet/minecraft/core/Vec3i; i
	get (Lnet/minecraft/core/Direction$Axis;)I a
	getX ()I u
	getY ()I v
	getZ ()I w
	multiply (I)Lnet/minecraft/core/Vec3i; o
	north ()Lnet/minecraft/core/Vec3i; n
	north (I)Lnet/minecraft/core/Vec3i; l
	offset (III)Lnet/minecraft/core/Vec3i; c
	offset (Lnet/minecraft/core/Vec3i;)Lnet/minecraft/core/Vec3i; f
	offsetCodec (I)Lcom/mojang/serialization/Codec; v
	relative (Lnet/minecraft/core/Direction$Axis;I)Lnet/minecraft/core/Vec3i; b
	relative (Lnet/minecraft/core/Direction;)Lnet/minecraft/core/Vec3i; b
	relative (Lnet/minecraft/core/Direction;I)Lnet/minecraft/core/Vec3i; b
	setX (I)Lnet/minecraft/core/Vec3i; u
	setY (I)Lnet/minecraft/core/Vec3i; t
	setZ (I)Lnet/minecraft/core/Vec3i; s
	south ()Lnet/minecraft/core/Vec3i; m
	south (I)Lnet/minecraft/core/Vec3i; k
	subtract (Lnet/minecraft/core/Vec3i;)Lnet/minecraft/core/Vec3i; e
	toShortString ()Ljava/lang/String; x
	west ()Lnet/minecraft/core/Vec3i; l
	west (I)Lnet/minecraft/core/Vec3i; j
net/minecraft/core/WritableRegistry ia
	createRegistrationLookup ()Lnet/minecraft/core/HolderGetter; n
	isEmpty ()Z k
	register (Lnet/minecraft/resources/ResourceKey;Ljava/lang/Object;Lcom/mojang/serialization/Lifecycle;)Lnet/minecraft/core/Holder$Reference; a
	registerMapping (ILnet/minecraft/resources/ResourceKey;Ljava/lang/Object;Lcom/mojang/serialization/Lifecycle;)Lnet/minecraft/core/Holder; b
net/minecraft/core/cauldron/CauldronInteraction ib
	BANNER i
	DYED_ITEM j
	EMPTY a
	FILL_LAVA f
	FILL_POWDER_SNOW g
	FILL_WATER e
	LAVA c
	POWDER_SNOW d
	SHULKER_BOX h
	WATER b
	addDefaultInteractions (Ljava/util/Map;)V a
	bootStrap ()V b
	emptyBucket (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/sounds/SoundEvent;)Lnet/minecraft/world/InteractionResult; a
	fillBucket (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/item/ItemStack;Ljava/util/function/Predicate;Lnet/minecraft/sounds/SoundEvent;)Lnet/minecraft/world/InteractionResult; a
	newInteractionMap ()Lit/unimi/dsi/fastutil/objects/Object2ObjectOpenHashMap; a
net/minecraft/core/dispenser/AbstractProjectileDispenseBehavior id
	execute (Lnet/minecraft/core/BlockSource;Lnet/minecraft/world/item/ItemStack;)Lnet/minecraft/world/item/ItemStack; a
	getPower ()F b
	getProjectile (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/Position;Lnet/minecraft/world/item/ItemStack;)Lnet/minecraft/world/entity/projectile/Projectile; a
	getUncertainty ()F a
	playSound (Lnet/minecraft/core/BlockSource;)V a
net/minecraft/core/dispenser/BoatDispenseItemBehavior ie
	defaultDispenseItemBehavior c
	isChestBoat e
	type d
	execute (Lnet/minecraft/core/BlockSource;Lnet/minecraft/world/item/ItemStack;)Lnet/minecraft/world/item/ItemStack; a
	playSound (Lnet/minecraft/core/BlockSource;)V a
net/minecraft/core/dispenser/DefaultDispenseItemBehavior ig
	execute (Lnet/minecraft/core/BlockSource;Lnet/minecraft/world/item/ItemStack;)Lnet/minecraft/world/item/ItemStack; a
	playAnimation (Lnet/minecraft/core/BlockSource;Lnet/minecraft/core/Direction;)V a
	playSound (Lnet/minecraft/core/BlockSource;)V a
	spawnItem (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/item/ItemStack;ILnet/minecraft/core/Direction;Lnet/minecraft/core/Position;)V a
net/minecraft/core/dispenser/DispenseItemBehavior ih
	LOGGER a
	NOOP b
	bootStrap ()V c
	setEntityPokingOutOfBlock (Lnet/minecraft/core/BlockSource;Lnet/minecraft/world/entity/Entity;Lnet/minecraft/core/Direction;)V a
net/minecraft/core/dispenser/OptionalDispenseItemBehavior ii
	success c
	isSuccess ()Z a
	playSound (Lnet/minecraft/core/BlockSource;)V a
	setSuccess (Z)V a
net/minecraft/core/dispenser/ShearsDispenseItemBehavior ij
	execute (Lnet/minecraft/core/BlockSource;Lnet/minecraft/world/item/ItemStack;)Lnet/minecraft/world/item/ItemStack; a
	tryShearBeehive (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;)Z a
	tryShearLivingEntity (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;)Z b
net/minecraft/core/dispenser/ShulkerBoxDispenseBehavior ik
	LOGGER c
	execute (Lnet/minecraft/core/BlockSource;Lnet/minecraft/world/item/ItemStack;)Lnet/minecraft/world/item/ItemStack; a
net/minecraft/core/particles/BlockParticleOption in
	DESERIALIZER a
	state c
	type b
	codec (Lnet/minecraft/core/particles/ParticleType;)Lcom/mojang/serialization/Codec; a
	getState ()Lnet/minecraft/world/level/block/state/BlockState; c
	getType ()Lnet/minecraft/core/particles/ParticleType; b
	writeToNetwork (Lnet/minecraft/network/FriendlyByteBuf;)V a
	writeToString ()Ljava/lang/String; a
net/minecraft/core/particles/DustColorTransitionOptions io
	CODEC c
	DESERIALIZER d
	SCULK_PARTICLE_COLOR a
	SCULK_TO_REDSTONE b
	toColor i
	getFromColor ()Lorg/joml/Vector3f; c
	getToColor ()Lorg/joml/Vector3f; d
	getType ()Lnet/minecraft/core/particles/ParticleType; b
	writeToNetwork (Lnet/minecraft/network/FriendlyByteBuf;)V a
	writeToString ()Ljava/lang/String; a
net/minecraft/core/particles/DustParticleOptions ip
	CODEC c
	DESERIALIZER d
	REDSTONE b
	REDSTONE_PARTICLE_COLOR a
	getType ()Lnet/minecraft/core/particles/ParticleType; b
net/minecraft/core/particles/DustParticleOptionsBase iq
	MAX_SCALE f
	MIN_SCALE e
	color g
	scale h
	getColor ()Lorg/joml/Vector3f; e
	getScale ()F f
	readVector3f (Lcom/mojang/brigadier/StringReader;)Lorg/joml/Vector3f; a
	readVector3f (Lnet/minecraft/network/FriendlyByteBuf;)Lorg/joml/Vector3f; b
	writeToNetwork (Lnet/minecraft/network/FriendlyByteBuf;)V a
	writeToString ()Ljava/lang/String; a
net/minecraft/core/particles/ItemParticleOption ir
	DESERIALIZER a
	itemStack c
	type b
	codec (Lnet/minecraft/core/particles/ParticleType;)Lcom/mojang/serialization/Codec; a
	getItem ()Lnet/minecraft/world/item/ItemStack; c
	getType ()Lnet/minecraft/core/particles/ParticleType; b
	writeToNetwork (Lnet/minecraft/network/FriendlyByteBuf;)V a
	writeToString ()Ljava/lang/String; a
net/minecraft/core/particles/ParticleGroup is
	SPORE_BLOSSOM a
	limit b
	getLimit ()I a
net/minecraft/core/particles/ParticleOptions it
	getType ()Lnet/minecraft/core/particles/ParticleType; b
	writeToNetwork (Lnet/minecraft/network/FriendlyByteBuf;)V a
	writeToString ()Ljava/lang/String; a
net/minecraft/core/particles/ParticleOptions$Deserializer it$a
	fromCommand (Lnet/minecraft/core/particles/ParticleType;Lcom/mojang/brigadier/StringReader;)Lnet/minecraft/core/particles/ParticleOptions; b
	fromNetwork (Lnet/minecraft/core/particles/ParticleType;Lnet/minecraft/network/FriendlyByteBuf;)Lnet/minecraft/core/particles/ParticleOptions; b
net/minecraft/core/particles/ParticleType iu
	deserializer b
	overrideLimiter a
	codec ()Lcom/mojang/serialization/Codec; e
	getDeserializer ()Lnet/minecraft/core/particles/ParticleOptions$Deserializer; d
	getOverrideLimiter ()Z c
net/minecraft/core/particles/ParticleTypes iv
	AMBIENT_ENTITY_EFFECT a
	ANGRY_VILLAGER b
	ASH au
	BLOCK c
	BLOCK_MARKER d
	BUBBLE e
	BUBBLE_COLUMN_UP ak
	BUBBLE_POP ai
	CAMPFIRE_COSY_SMOKE an
	CAMPFIRE_SIGNAL_SMOKE ao
	CHERRY_LEAVES D
	CLOUD f
	CODEC aR
	COMPOSTER L
	CRIMSON_SPORE av
	CRIT g
	CURRENT_DOWN aj
	DAMAGE_INDICATOR h
	DOLPHIN am
	DRAGON_BREATH i
	DRIPPING_DRIPSTONE_LAVA aF
	DRIPPING_DRIPSTONE_WATER aH
	DRIPPING_HONEY ap
	DRIPPING_LAVA j
	DRIPPING_OBSIDIAN_TEAR ay
	DRIPPING_WATER m
	DUST o
	DUST_COLOR_TRANSITION p
	EFFECT q
	EGG_CRACK aQ
	ELDER_GUARDIAN r
	ELECTRIC_SPARK aN
	ENCHANT t
	ENCHANTED_HIT s
	END_ROD u
	ENTITY_EFFECT v
	EXPLOSION x
	EXPLOSION_EMITTER w
	FALLING_DRIPSTONE_LAVA aG
	FALLING_DRIPSTONE_WATER aI
	FALLING_DUST z
	FALLING_HONEY aq
	FALLING_LAVA k
	FALLING_NECTAR as
	FALLING_OBSIDIAN_TEAR az
	FALLING_SPORE_BLOSSOM at
	FALLING_WATER n
	FIREWORK A
	FISHING B
	FLAME C
	FLASH J
	GLOW aK
	GLOW_SQUID_INK aJ
	HAPPY_VILLAGER K
	HEART M
	INSTANT_EFFECT N
	ITEM O
	ITEM_SLIME Q
	ITEM_SNOWBALL R
	LANDING_HONEY ar
	LANDING_LAVA l
	LANDING_OBSIDIAN_TEAR aA
	LARGE_SMOKE S
	LAVA T
	MYCELIUM U
	NAUTILUS al
	NOTE V
	POOF W
	PORTAL X
	RAIN Y
	REVERSE_PORTAL aB
	SCRAPE aO
	SCULK_CHARGE F
	SCULK_CHARGE_POP G
	SCULK_SOUL E
	SHRIEK aP
	SMALL_FLAME aD
	SMOKE Z
	SNEEZE aa
	SNOWFLAKE aE
	SONIC_BOOM y
	SOUL I
	SOUL_FIRE_FLAME H
	SPIT ab
	SPLASH ag
	SPORE_BLOSSOM_AIR ax
	SQUID_INK ac
	SWEEP_ATTACK ad
	TOTEM_OF_UNDYING ae
	UNDERWATER af
	VIBRATION P
	WARPED_SPORE aw
	WAX_OFF aM
	WAX_ON aL
	WHITE_ASH aC
	WITCH ah
	register (Ljava/lang/String;Z)Lnet/minecraft/core/particles/SimpleParticleType; a
	register (Ljava/lang/String;ZLnet/minecraft/core/particles/ParticleOptions$Deserializer;Ljava/util/function/Function;)Lnet/minecraft/core/particles/ParticleType; a
net/minecraft/core/particles/SculkChargeParticleOptions iw
	CODEC a
	DESERIALIZER b
	roll c
	getType ()Lnet/minecraft/core/particles/ParticleType; b
	roll ()F c
	writeToNetwork (Lnet/minecraft/network/FriendlyByteBuf;)V a
	writeToString ()Ljava/lang/String; a
net/minecraft/core/particles/ShriekParticleOption ix
	CODEC a
	DESERIALIZER b
	delay c
	getDelay ()I c
	getType ()Lnet/minecraft/core/particles/ParticleType; b
	writeToNetwork (Lnet/minecraft/network/FriendlyByteBuf;)V a
	writeToString ()Ljava/lang/String; a
net/minecraft/core/particles/SimpleParticleType iy
	DESERIALIZER a
	codec b
	codec ()Lcom/mojang/serialization/Codec; e
	getType ()Lnet/minecraft/core/particles/ParticleType; b
	getType ()Lnet/minecraft/core/particles/SimpleParticleType; f
	writeToNetwork (Lnet/minecraft/network/FriendlyByteBuf;)V a
	writeToString ()Ljava/lang/String; a
net/minecraft/core/particles/VibrationParticleOption iz
	CODEC a
	DESERIALIZER b
	arrivalInTicks d
	destination c
	getArrivalInTicks ()I d
	getDestination ()Lnet/minecraft/world/level/gameevent/PositionSource; c
	getType ()Lnet/minecraft/core/particles/ParticleType; b
	writeToNetwork (Lnet/minecraft/network/FriendlyByteBuf;)V a
	writeToString ()Ljava/lang/String; a
net/minecraft/core/registries/BuiltInRegistries jb
	ACTIVITY F
	ATTRIBUTE v
	BANNER_PATTERN al
	BIOME_SOURCE ac
	BLOCK f
	BLOCKSTATE_PROVIDER_TYPE W
	BLOCK_ENTITY_TYPE l
	BLOCK_PREDICATE_TYPE P
	CARVER Q
	CAT_VARIANT aj
	CHUNK_GENERATOR ad
	CHUNK_STATUS o
	COMMAND_ARGUMENT_TYPE x
	CREATIVE_MODE_TAB ao
	CUSTOM_STAT n
	DECORATED_POT_PATTERNS an
	DENSITY_FUNCTION_TYPE ag
	ENCHANTMENT g
	ENTITY_TYPE h
	FEATURE R
	FEATURE_SIZE_TYPE ab
	FLOAT_PROVIDER_TYPE M
	FLUID d
	FOLIAGE_PLACER_TYPE X
	FROG_VARIANT ak
	GAME_EVENT b
	HEIGHT_PROVIDER_TYPE O
	INSTRUMENT am
	INT_PROVIDER_TYPE N
	ITEM i
	LOADERS ar
	LOGGER aq
	LOOT_CONDITION_TYPE I
	LOOT_FUNCTION_TYPE H
	LOOT_NBT_PROVIDER_TYPE K
	LOOT_NUMBER_PROVIDER_TYPE J
	LOOT_POOL_ENTRY_TYPE G
	LOOT_SCORE_PROVIDER_TYPE L
	MATERIAL_CONDITION ae
	MATERIAL_RULE af
	MEMORY_MODULE_TYPE C
	MENU s
	MOB_EFFECT e
	PAINTING_VARIANT m
	PARTICLE_TYPE k
	PLACEMENT_MODIFIER_TYPE V
	POINT_OF_INTEREST_TYPE B
	POSITION_SOURCE_TYPE w
	POS_RULE_TEST r
	POTION j
	RECIPE_SERIALIZER u
	RECIPE_TYPE t
	REGISTRY ap
	ROOT_PLACER_TYPE Z
	ROOT_REGISTRY_NAME a
	RULE_BLOCK_ENTITY_MODIFIER q
	RULE_TEST p
	SCHEDULE E
	SENSOR_TYPE D
	SOUND_EVENT c
	STAT_TYPE y
	STRUCTURE_PIECE T
	STRUCTURE_PLACEMENT S
	STRUCTURE_POOL_ELEMENT ai
	STRUCTURE_PROCESSOR ah
	STRUCTURE_TYPE U
	TREE_DECORATOR_TYPE aa
	TRUNK_PLACER_TYPE Y
	VILLAGER_PROFESSION A
	VILLAGER_TYPE z
	WRITABLE_REGISTRY as
	bootStrap ()V a
	createContents ()V b
	freeze ()V c
	internalRegister (Lnet/minecraft/resources/ResourceKey;Lnet/minecraft/core/WritableRegistry;Lnet/minecraft/core/registries/BuiltInRegistries$RegistryBootstrap;Lcom/mojang/serialization/Lifecycle;)Lnet/minecraft/core/WritableRegistry; a
	registerDefaulted (Lnet/minecraft/resources/ResourceKey;Ljava/lang/String;Lcom/mojang/serialization/Lifecycle;Lnet/minecraft/core/registries/BuiltInRegistries$RegistryBootstrap;)Lnet/minecraft/core/DefaultedRegistry; a
	registerDefaulted (Lnet/minecraft/resources/ResourceKey;Ljava/lang/String;Lnet/minecraft/core/registries/BuiltInRegistries$RegistryBootstrap;)Lnet/minecraft/core/DefaultedRegistry; a
	registerDefaultedWithIntrusiveHolders (Lnet/minecraft/resources/ResourceKey;Ljava/lang/String;Lcom/mojang/serialization/Lifecycle;Lnet/minecraft/core/registries/BuiltInRegistries$RegistryBootstrap;)Lnet/minecraft/core/DefaultedRegistry; b
	registerDefaultedWithIntrusiveHolders (Lnet/minecraft/resources/ResourceKey;Ljava/lang/String;Lnet/minecraft/core/registries/BuiltInRegistries$RegistryBootstrap;)Lnet/minecraft/core/DefaultedRegistry; b
	registerSimple (Lnet/minecraft/resources/ResourceKey;Lcom/mojang/serialization/Lifecycle;Lnet/minecraft/core/registries/BuiltInRegistries$RegistryBootstrap;)Lnet/minecraft/core/Registry; a
	registerSimple (Lnet/minecraft/resources/ResourceKey;Lnet/minecraft/core/registries/BuiltInRegistries$RegistryBootstrap;)Lnet/minecraft/core/Registry; a
	validate (Lnet/minecraft/core/Registry;)V a
net/minecraft/core/registries/BuiltInRegistries$RegistryBootstrap jb$a
net/minecraft/core/registries/Registries jc
	ACTIVITY a
	ATTRIBUTE b
	BANNER_PATTERN c
	BIOME ap
	BIOME_SOURCE d
	BLOCK e
	BLOCK_ENTITY_TYPE f
	BLOCK_PREDICATE_TYPE g
	BLOCK_STATE_PROVIDER_TYPE h
	CARVER i
	CAT_VARIANT j
	CHAT_TYPE aq
	CHUNK_GENERATOR k
	CHUNK_STATUS l
	COMMAND_ARGUMENT_TYPE m
	CONFIGURED_CARVER ar
	CONFIGURED_FEATURE as
	CREATIVE_MODE_TAB n
	CUSTOM_STAT o
	DAMAGE_TYPE p
	DECORATED_POT_PATTERNS ao
	DENSITY_FUNCTION at
	DENSITY_FUNCTION_TYPE q
	DIMENSION aH
	DIMENSION_TYPE au
	ENCHANTMENT r
	ENTITY_TYPE s
	FEATURE t
	FEATURE_SIZE_TYPE u
	FLAT_LEVEL_GENERATOR_PRESET av
	FLOAT_PROVIDER_TYPE v
	FLUID w
	FOLIAGE_PLACER_TYPE x
	FROG_VARIANT y
	GAME_EVENT z
	HEIGHT_PROVIDER_TYPE A
	INSTRUMENT B
	INT_PROVIDER_TYPE C
	ITEM D
	LEVEL_STEM aI
	LOOT_CONDITION_TYPE E
	LOOT_FUNCTION_TYPE F
	LOOT_NBT_PROVIDER_TYPE G
	LOOT_NUMBER_PROVIDER_TYPE H
	LOOT_POOL_ENTRY_TYPE I
	LOOT_SCORE_PROVIDER_TYPE J
	MATERIAL_CONDITION K
	MATERIAL_RULE L
	MEMORY_MODULE_TYPE M
	MENU N
	MOB_EFFECT O
	MULTI_NOISE_BIOME_SOURCE_PARAMETER_LIST aG
	NOISE ax
	NOISE_SETTINGS aw
	PAINTING_VARIANT P
	PARTICLE_TYPE Q
	PLACED_FEATURE ay
	PLACEMENT_MODIFIER_TYPE R
	POINT_OF_INTEREST_TYPE S
	POSITION_SOURCE_TYPE T
	POS_RULE_TEST U
	POTION V
	PROCESSOR_LIST aA
	RECIPE_SERIALIZER W
	RECIPE_TYPE X
	ROOT_PLACER_TYPE Y
	RULE_BLOCK_ENTITY_MODIFIER aa
	RULE_TEST Z
	SCHEDULE ab
	SENSOR_TYPE ac
	SOUND_EVENT ad
	STAT_TYPE ae
	STRUCTURE az
	STRUCTURE_PIECE af
	STRUCTURE_PLACEMENT ag
	STRUCTURE_POOL_ELEMENT ah
	STRUCTURE_PROCESSOR ai
	STRUCTURE_SET aB
	STRUCTURE_TYPE aj
	TEMPLATE_POOL aC
	TREE_DECORATOR_TYPE ak
	TRIM_MATERIAL aD
	TRIM_PATTERN aE
	TRUNK_PLACER_TYPE al
	VILLAGER_PROFESSION am
	VILLAGER_TYPE an
	WORLD_PRESET aF
	createRegistryKey (Ljava/lang/String;)Lnet/minecraft/resources/ResourceKey; a
	levelStemToLevel (Lnet/minecraft/resources/ResourceKey;)Lnet/minecraft/resources/ResourceKey; a
	levelToLevelStem (Lnet/minecraft/resources/ResourceKey;)Lnet/minecraft/resources/ResourceKey; b
net/minecraft/data/BlockFamilies je
	ACACIA_PLANKS a
	ANDESITE n
	BAMBOO_MOSAIC l
	BAMBOO_PLANKS k
	BIRCH_PLANKS c
	BLACKSTONE p
	BRICKS s
	CHERRY_PLANKS b
	COBBLED_DEEPSLATE ai
	COBBLESTONE L
	COPPER_BLOCK v
	CRIMSON_PLANKS d
	CUT_COPPER w
	CUT_RED_SANDSTONE ad
	CUT_SANDSTONE aa
	DARK_OAK_PLANKS g
	DARK_PRISMARINE W
	DEEPSLATE ah
	DEEPSLATE_BRICKS ak
	DEEPSLATE_TILES al
	DIORITE N
	END_STONE_BRICKS t
	EXPOSED_COPPER z
	EXPOSED_CUT_COPPER A
	GRANITE P
	JUNGLE_PLANKS e
	MANGROVE_PLANKS j
	MAP am
	MOSSY_COBBLESTONE M
	MOSSY_STONE_BRICKS u
	MUD_BRICKS m
	NETHER_BRICKS R
	OAK_PLANKS f
	OXIDIZED_COPPER H
	OXIDIZED_CUT_COPPER I
	POLISHED_ANDESITE o
	POLISHED_BLACKSTONE q
	POLISHED_BLACKSTONE_BRICKS r
	POLISHED_DEEPSLATE aj
	POLISHED_DIORITE O
	POLISHED_GRANITE Q
	PRISMARINE T
	PRISMARINE_BRICKS V
	PURPUR U
	QUARTZ X
	RECIPE_GROUP_PREFIX_WOODEN an
	RECIPE_UNLOCKED_BY_HAS_PLANKS ao
	RED_NETHER_BRICKS S
	RED_SANDSTONE ac
	SANDSTONE Z
	SMOOTH_QUARTZ Y
	SMOOTH_RED_SANDSTONE ae
	SMOOTH_SANDSTONE ab
	SPRUCE_PLANKS h
	STONE af
	STONE_BRICK ag
	WARPED_PLANKS i
	WAXED_COPPER_BLOCK x
	WAXED_CUT_COPPER y
	WAXED_EXPOSED_COPPER B
	WAXED_EXPOSED_CUT_COPPER C
	WAXED_OXIDIZED_COPPER J
	WAXED_OXIDIZED_CUT_COPPER K
	WAXED_WEATHERED_COPPER F
	WAXED_WEATHERED_CUT_COPPER G
	WEATHERED_COPPER D
	WEATHERED_CUT_COPPER E
	familyBuilder (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/data/BlockFamily$Builder; a
	getAllFamilies ()Ljava/util/stream/Stream; a
net/minecraft/data/BlockFamily jf
	baseBlock a
	generateModel d
	generateRecipe e
	recipeGroupPrefix f
	recipeUnlockedBy g
	requiredFeatures c
	variants b
	get (Lnet/minecraft/data/BlockFamily$Variant;)Lnet/minecraft/world/level/block/Block; a
	getBaseBlock ()Lnet/minecraft/world/level/block/Block; a
	getRecipeGroupPrefix ()Ljava/util/Optional; d
	getRecipeUnlockedBy ()Ljava/util/Optional; e
	getVariants ()Ljava/util/Map; b
	shouldGenerateModel ()Z c
	shouldGenerateRecipe (Lnet/minecraft/world/flag/FeatureFlagSet;)Z a
net/minecraft/data/BlockFamily$Builder jf$a
	family a
	button (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/data/BlockFamily$Builder; a
	chiseled (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/data/BlockFamily$Builder; b
	cracked (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/data/BlockFamily$Builder; d
	customFence (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/data/BlockFamily$Builder; g
	customFenceGate (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/data/BlockFamily$Builder; i
	cut (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/data/BlockFamily$Builder; e
	dontGenerateModel ()Lnet/minecraft/data/BlockFamily$Builder; b
	dontGenerateRecipe ()Lnet/minecraft/data/BlockFamily$Builder; c
	door (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/data/BlockFamily$Builder; f
	featureLockedBehind ([Lnet/minecraft/world/flag/FeatureFlag;)Lnet/minecraft/data/BlockFamily$Builder; a
	fence (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/data/BlockFamily$Builder; h
	fenceGate (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/data/BlockFamily$Builder; j
	getFamily ()Lnet/minecraft/data/BlockFamily; a
	mosaic (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/data/BlockFamily$Builder; c
	polished (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/data/BlockFamily$Builder; n
	pressurePlate (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/data/BlockFamily$Builder; m
	recipeGroupPrefix (Ljava/lang/String;)Lnet/minecraft/data/BlockFamily$Builder; a
	recipeUnlockedBy (Ljava/lang/String;)Lnet/minecraft/data/BlockFamily$Builder; b
	sign (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/data/BlockFamily$Builder; a
	slab (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/data/BlockFamily$Builder; k
	stairs (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/data/BlockFamily$Builder; l
	trapdoor (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/data/BlockFamily$Builder; o
	wall (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/data/BlockFamily$Builder; p
net/minecraft/data/BlockFamily$Variant jf$b
	$VALUES t
	BUTTON a
	CHISELED b
	CRACKED c
	CUSTOM_FENCE f
	CUSTOM_FENCE_GATE h
	CUT d
	DOOR e
	FENCE g
	FENCE_GATE i
	MOSAIC j
	POLISHED o
	PRESSURE_PLATE n
	SIGN k
	SLAB l
	STAIRS m
	TRAPDOOR p
	WALL q
	WALL_SIGN r
	name s
	$values ()[Lnet/minecraft/data/BlockFamily$Variant; b
	getName ()Ljava/lang/String; a
net/minecraft/data/CachedOutput jg
	NO_CACHE a
net/minecraft/data/DataGenerator jh
	LOGGER a
	allProviderIds d
	alwaysGenerate g
	providersToRun e
	rootOutputFolder b
	vanillaPackOutput c
	version f
	getBuiltinDatapack (ZLjava/lang/String;)Lnet/minecraft/data/DataGenerator$PackGenerator; a
	getVanillaPack (Z)Lnet/minecraft/data/DataGenerator$PackGenerator; a
	run ()V a
net/minecraft/data/DataGenerator$PackGenerator jh$a
	output d
	providerPrefix c
	toRun b
	addProvider (Lnet/minecraft/data/DataProvider$Factory;)Lnet/minecraft/data/DataProvider; a
net/minecraft/data/DataProvider ji
	FIXED_ORDER_FIELDS a
	KEY_COMPARATOR b
	LOGGER c
	getName ()Ljava/lang/String; a
	run (Lnet/minecraft/data/CachedOutput;)Ljava/util/concurrent/CompletableFuture; a
	saveStable (Lnet/minecraft/data/CachedOutput;Lcom/google/gson/JsonElement;Ljava/nio/file/Path;)Ljava/util/concurrent/CompletableFuture; a
net/minecraft/data/DataProvider$Factory ji$a
net/minecraft/data/HashCache jj
	HEADER_MARKER b
	LOGGER a
	cacheDir d
	cachePaths h
	caches f
	cachesToWrite g
	initialCount i
	rootDir c
	versionId e
	writes j
	applyUpdate (Lnet/minecraft/data/HashCache$UpdateResult;)V a
	generateUpdate (Ljava/lang/String;Lnet/minecraft/data/HashCache$UpdateFunction;)Ljava/util/concurrent/CompletableFuture; a
	getProviderCachePath (Ljava/lang/String;)Ljava/nio/file/Path; b
	purgeStaleAndWrite ()V a
	readCache (Ljava/nio/file/Path;Ljava/nio/file/Path;)Lnet/minecraft/data/HashCache$ProviderCache; a
	shouldRunInThisVersion (Ljava/lang/String;)Z a
net/minecraft/data/HashCache$CacheUpdater jj$a
	closed g
	newCache e
	oldCache d
	provider c
	writes f
	close ()Lnet/minecraft/data/HashCache$UpdateResult; a
	shouldWrite (Ljava/nio/file/Path;Lcom/google/common/hash/HashCode;)Z a
net/minecraft/data/HashCache$ProviderCache jj$b
	data b
	version a
	count ()I a
	data ()Lcom/google/common/collect/ImmutableMap; c
	get (Ljava/nio/file/Path;)Lcom/google/common/hash/HashCode; a
	load (Ljava/nio/file/Path;Ljava/nio/file/Path;)Lnet/minecraft/data/HashCache$ProviderCache; a
	save (Ljava/nio/file/Path;Ljava/nio/file/Path;Ljava/lang/String;)V a
	version ()Ljava/lang/String; b
net/minecraft/data/HashCache$ProviderCacheBuilder jj$c
	data b
	version a
	build ()Lnet/minecraft/data/HashCache$ProviderCache; a
	data ()Ljava/util/concurrent/ConcurrentMap; c
	put (Ljava/nio/file/Path;Lcom/google/common/hash/HashCode;)V a
	version ()Ljava/lang/String; b
net/minecraft/data/HashCache$UpdateFunction jj$d
net/minecraft/data/HashCache$UpdateResult jj$e
	cache b
	providerId a
	writes c
	cache ()Lnet/minecraft/data/HashCache$ProviderCache; b
	providerId ()Ljava/lang/String; a
	writes ()I c
net/minecraft/data/PackOutput jk
	outputFolder a
	createPathProvider (Lnet/minecraft/data/PackOutput$Target;Ljava/lang/String;)Lnet/minecraft/data/PackOutput$PathProvider; a
	getOutputFolder ()Ljava/nio/file/Path; a
	getOutputFolder (Lnet/minecraft/data/PackOutput$Target;)Ljava/nio/file/Path; a
net/minecraft/data/PackOutput$PathProvider jk$a
	kind b
	root a
	file (Lnet/minecraft/resources/ResourceLocation;Ljava/lang/String;)Ljava/nio/file/Path; a
	json (Lnet/minecraft/resources/ResourceLocation;)Ljava/nio/file/Path; a
net/minecraft/data/PackOutput$Target jk$b
	$VALUES e
	DATA_PACK a
	REPORTS c
	RESOURCE_PACK b
	directory d
	$values ()[Lnet/minecraft/data/PackOutput$Target; a
net/minecraft/data/advancements/AdvancementProvider jl
	pathProvider d
	registries f
	subProviders e
	getName ()Ljava/lang/String; a
	run (Lnet/minecraft/data/CachedOutput;)Ljava/util/concurrent/CompletableFuture; a
net/minecraft/data/advancements/AdvancementSubProvider jm
	createPlaceholder (Ljava/lang/String;)Lnet/minecraft/advancements/Advancement; a
	generate (Lnet/minecraft/core/HolderLookup$Provider;Ljava/util/function/Consumer;)V a
net/minecraft/data/advancements/packs/VanillaAdvancementProvider jo
	create (Lnet/minecraft/data/PackOutput;Ljava/util/concurrent/CompletableFuture;)Lnet/minecraft/data/advancements/AdvancementProvider; a
net/minecraft/data/advancements/packs/VanillaAdventureAdvancements jp
	BEDROCK_THICKNESS d
	DISTANCE_FROM_BOTTOM_TO_TOP a
	MOBS_TO_KILL e
	Y_COORDINATE_AT_BOTTOM c
	Y_COORDINATE_AT_TOP b
	addBiomes (Lnet/minecraft/advancements/Advancement$Builder;Ljava/util/List;)Lnet/minecraft/advancements/Advancement$Builder; a
	addMobsToKill (Lnet/minecraft/advancements/Advancement$Builder;)Lnet/minecraft/advancements/Advancement$Builder; d
	craftingANewLook (Lnet/minecraft/advancements/Advancement$Builder;)Lnet/minecraft/advancements/Advancement$Builder; b
	createAdventuringTime (Ljava/util/function/Consumer;Lnet/minecraft/advancements/Advancement;Lnet/minecraft/world/level/biome/MultiNoiseBiomeSourceParameterList$Preset;)V a
	fireCountAndBystander (Lnet/minecraft/advancements/critereon/MinMaxBounds$Ints;Lnet/minecraft/advancements/critereon/EntityPredicate;)Lnet/minecraft/advancements/critereon/LightningStrikeTrigger$TriggerInstance; a
	generate (Lnet/minecraft/core/HolderLookup$Provider;Ljava/util/function/Consumer;)V a
	lookAtThroughItem (Lnet/minecraft/world/entity/EntityType;Lnet/minecraft/world/item/Item;)Lnet/minecraft/advancements/critereon/UsingItemTrigger$TriggerInstance; a
	placedBlockReadByComparator (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/advancements/CriterionTriggerInstance; a
	placedComparatorReadingBlock (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/advancements/CriterionTriggerInstance; b
	respectingTheRemnantsCriterions (Lnet/minecraft/advancements/Advancement$Builder;)Lnet/minecraft/advancements/Advancement$Builder; c
	smithingWithStyle (Lnet/minecraft/advancements/Advancement$Builder;)Lnet/minecraft/advancements/Advancement$Builder; a
net/minecraft/data/advancements/packs/VanillaHusbandryAdvancements jq
	BREEDABLE_ANIMALS a
	EDIBLE_ITEMS e
	FISH c
	FISH_BUCKETS d
	INDIRECTLY_BREEDABLE_ANIMALS b
	WAX_SCRAPING_TOOLS f
	addBreedable (Lnet/minecraft/advancements/Advancement$Builder;Ljava/util/stream/Stream;Ljava/util/stream/Stream;)Lnet/minecraft/advancements/Advancement$Builder; a
	addCatVariants (Lnet/minecraft/advancements/Advancement$Builder;)Lnet/minecraft/advancements/Advancement$Builder; e
	addFish (Lnet/minecraft/advancements/Advancement$Builder;)Lnet/minecraft/advancements/Advancement$Builder; d
	addFishBuckets (Lnet/minecraft/advancements/Advancement$Builder;)Lnet/minecraft/advancements/Advancement$Builder; c
	addFood (Lnet/minecraft/advancements/Advancement$Builder;)Lnet/minecraft/advancements/Advancement$Builder; b
	addLeashedFrogVariants (Lnet/minecraft/advancements/Advancement$Builder;)Lnet/minecraft/advancements/Advancement$Builder; a
	createBreedAllAnimalsAdvancement (Lnet/minecraft/advancements/Advancement;Ljava/util/function/Consumer;Ljava/util/stream/Stream;Ljava/util/stream/Stream;)Lnet/minecraft/advancements/Advancement; a
	generate (Lnet/minecraft/core/HolderLookup$Provider;Ljava/util/function/Consumer;)V a
net/minecraft/data/advancements/packs/VanillaNetherAdvancements jr
	DISTRACT_PIGLIN_PLAYER_ARMOR_PREDICATE a
	generate (Lnet/minecraft/core/HolderLookup$Provider;Ljava/util/function/Consumer;)V a
net/minecraft/data/advancements/packs/VanillaStoryAdvancements js
	generate (Lnet/minecraft/core/HolderLookup$Provider;Ljava/util/function/Consumer;)V a
net/minecraft/data/advancements/packs/VanillaTheEndAdvancements jt
	generate (Lnet/minecraft/core/HolderLookup$Provider;Ljava/util/function/Consumer;)V a
net/minecraft/data/info/BiomeParametersDumpReport jv
	CODEC h
	ENTRY_CODEC g
	LOGGER d
	registries f
	topPath e
	createPath (Lnet/minecraft/resources/ResourceLocation;)Ljava/nio/file/Path; a
	dumpValue (Ljava/nio/file/Path;Lnet/minecraft/data/CachedOutput;Lcom/mojang/serialization/DynamicOps;Lcom/mojang/serialization/Encoder;Ljava/lang/Object;)Ljava/util/concurrent/CompletableFuture; a
	getName ()Ljava/lang/String; a
	run (Lnet/minecraft/data/CachedOutput;)Ljava/util/concurrent/CompletableFuture; a
net/minecraft/data/info/BlockListReport jw
	output d
	getName ()Ljava/lang/String; a
	run (Lnet/minecraft/data/CachedOutput;)Ljava/util/concurrent/CompletableFuture; a
net/minecraft/data/info/CommandsReport jx
	output d
	registries e
	getName ()Ljava/lang/String; a
	run (Lnet/minecraft/data/CachedOutput;)Ljava/util/concurrent/CompletableFuture; a
net/minecraft/data/info/RegistryDumpReport jy
	output d
	dumpRegistry (Lnet/minecraft/core/Registry;)Lcom/google/gson/JsonElement; a
	getName ()Ljava/lang/String; a
	run (Lnet/minecraft/data/CachedOutput;)Ljava/util/concurrent/CompletableFuture; a
net/minecraft/data/loot/BlockLootSubProvider ka
	HAS_NO_SHEARS_OR_SILK_TOUCH i
	HAS_NO_SILK_TOUCH b
	HAS_SHEARS c
	HAS_SHEARS_OR_SILK_TOUCH h
	HAS_SILK_TOUCH a
	NORMAL_LEAVES_SAPLING_CHANCES g
	NORMAL_LEAVES_STICK_CHANCES j
	enabledFeatures e
	explosionResistant d
	map f
	add (Lnet/minecraft/world/level/block/Block;Ljava/util/function/Function;)V a
	add (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/world/level/storage/loot/LootTable$Builder;)V a
	addNetherVinesDropTable (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/world/level/block/Block;)V b
	applyExplosionCondition (Lnet/minecraft/world/level/ItemLike;Lnet/minecraft/world/level/storage/loot/predicates/ConditionUserBuilder;)Lnet/minecraft/world/level/storage/loot/predicates/ConditionUserBuilder; a
	applyExplosionDecay (Lnet/minecraft/world/level/ItemLike;Lnet/minecraft/world/level/storage/loot/functions/FunctionUserBuilder;)Lnet/minecraft/world/level/storage/loot/functions/FunctionUserBuilder; a
	createAttachedStemDrops (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/world/item/Item;)Lnet/minecraft/world/level/storage/loot/LootTable$Builder; c
	createBannerDrop (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/world/level/storage/loot/LootTable$Builder; g
	createBeeHiveDrop (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/world/level/storage/loot/LootTable$Builder; i
	createBeeNestDrop (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/world/level/storage/loot/LootTable$Builder; h
	createCandleCakeDrops (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/world/level/storage/loot/LootTable$Builder; p
	createCandleDrops (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/world/level/storage/loot/LootTable$Builder; n
	createCaveVinesDrop (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/world/level/storage/loot/LootTable$Builder; j
	createCopperOreDrops (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/world/level/storage/loot/LootTable$Builder; d
	createCropDrops (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/world/item/Item;Lnet/minecraft/world/item/Item;Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition$Builder;)Lnet/minecraft/world/level/storage/loot/LootTable$Builder; a
	createDoorTable (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/world/level/storage/loot/LootTable$Builder; q
	createDoublePlantShearsDrop (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/world/level/storage/loot/LootTable$Builder; m
	createDoublePlantWithSeedDrops (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/world/level/storage/loot/LootTable$Builder; a
	createGrassDrops (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/world/level/storage/loot/LootTable$Builder; k
	createLapisOreDrops (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/world/level/storage/loot/LootTable$Builder; e
	createLeavesDrops (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/world/level/block/Block;[F)Lnet/minecraft/world/level/storage/loot/LootTable$Builder; a
	createMangroveLeavesDrops (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/world/level/storage/loot/LootTable$Builder; l
	createMultifaceBlockDrops (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition$Builder;)Lnet/minecraft/world/level/storage/loot/LootTable$Builder; a
	createMushroomBlockDrop (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/world/level/ItemLike;)Lnet/minecraft/world/level/storage/loot/LootTable$Builder; b
	createNameableBlockEntityTable (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/world/level/storage/loot/LootTable$Builder; b
	createOakLeavesDrops (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/world/level/block/Block;[F)Lnet/minecraft/world/level/storage/loot/LootTable$Builder; b
	createOreDrop (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/world/item/Item;)Lnet/minecraft/world/level/storage/loot/LootTable$Builder; a
	createPetalsDrops (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/world/level/storage/loot/LootTable$Builder; o
	createPotFlowerItemTable (Lnet/minecraft/world/level/ItemLike;)Lnet/minecraft/world/level/storage/loot/LootTable$Builder; d
	createRedstoneOreDrops (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/world/level/storage/loot/LootTable$Builder; f
	createSelfDropDispatchTable (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition$Builder;Lnet/minecraft/world/level/storage/loot/entries/LootPoolEntryContainer$Builder;)Lnet/minecraft/world/level/storage/loot/LootTable$Builder; a
	createShearsDispatchTable (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/world/level/storage/loot/entries/LootPoolEntryContainer$Builder;)Lnet/minecraft/world/level/storage/loot/LootTable$Builder; b
	createShearsOnlyDrop (Lnet/minecraft/world/level/ItemLike;)Lnet/minecraft/world/level/storage/loot/LootTable$Builder; b
	createShulkerBoxDrop (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/world/level/storage/loot/LootTable$Builder; c
	createSilkTouchDispatchTable (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/world/level/storage/loot/entries/LootPoolEntryContainer$Builder;)Lnet/minecraft/world/level/storage/loot/LootTable$Builder; a
	createSilkTouchOnlyTable (Lnet/minecraft/world/level/ItemLike;)Lnet/minecraft/world/level/storage/loot/LootTable$Builder; c
	createSilkTouchOrShearsDispatchTable (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/world/level/storage/loot/entries/LootPoolEntryContainer$Builder;)Lnet/minecraft/world/level/storage/loot/LootTable$Builder; c
	createSingleItemTable (Lnet/minecraft/world/level/ItemLike;)Lnet/minecraft/world/level/storage/loot/LootTable$Builder; a
	createSingleItemTable (Lnet/minecraft/world/level/ItemLike;Lnet/minecraft/world/level/storage/loot/providers/number/NumberProvider;)Lnet/minecraft/world/level/storage/loot/LootTable$Builder; a
	createSingleItemTableWithSilkTouch (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/world/level/ItemLike;)Lnet/minecraft/world/level/storage/loot/LootTable$Builder; a
	createSingleItemTableWithSilkTouch (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/world/level/ItemLike;Lnet/minecraft/world/level/storage/loot/providers/number/NumberProvider;)Lnet/minecraft/world/level/storage/loot/LootTable$Builder; a
	createSinglePropConditionTable (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/world/level/block/state/properties/Property;Ljava/lang/Comparable;)Lnet/minecraft/world/level/storage/loot/LootTable$Builder; a
	createSlabItemTable (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/world/level/storage/loot/LootTable$Builder; a
	createStemDrops (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/world/item/Item;)Lnet/minecraft/world/level/storage/loot/LootTable$Builder; b
	dropOther (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/world/level/ItemLike;)V c
	dropPottedContents (Lnet/minecraft/world/level/block/Block;)V r
	dropSelf (Lnet/minecraft/world/level/block/Block;)V t
	dropWhenSilkTouch (Lnet/minecraft/world/level/block/Block;)V s
	generate ()V b
	noDrop ()Lnet/minecraft/world/level/storage/loot/LootTable$Builder; a
	otherWhenSilkTouch (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/world/level/block/Block;)V c
net/minecraft/data/loot/EntityLootSubProvider kb
	ENTITY_ON_FIRE a
	SPECIAL_LOOT_TABLE_TYPES b
	allowed c
	map e
	required d
	add (Lnet/minecraft/world/entity/EntityType;Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/world/level/storage/loot/LootTable$Builder;)V a
	add (Lnet/minecraft/world/entity/EntityType;Lnet/minecraft/world/level/storage/loot/LootTable$Builder;)V a
	canHaveLootTable (Lnet/minecraft/world/entity/EntityType;)Z a
	createSheepTable (Lnet/minecraft/world/level/ItemLike;)Lnet/minecraft/world/level/storage/loot/LootTable$Builder; a
	generate ()V a
	killedByFrog ()Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition$Builder; b
	killedByFrogVariant (Lnet/minecraft/world/entity/animal/FrogVariant;)Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition$Builder; a
net/minecraft/data/loot/LootTableProvider kc
	LOGGER d
	pathProvider e
	requiredTables f
	subProviders g
	getName ()Ljava/lang/String; a
	run (Lnet/minecraft/data/CachedOutput;)Ljava/util/concurrent/CompletableFuture; a
net/minecraft/data/loot/LootTableProvider$SubProviderEntry kc$a
	paramSet b
	provider a
	paramSet ()Lnet/minecraft/world/level/storage/loot/parameters/LootContextParamSet; b
	provider ()Ljava/util/function/Supplier; a
net/minecraft/data/loot/LootTableSubProvider kd
net/minecraft/data/loot/packs/VanillaArchaeologyLoot kf
net/minecraft/data/loot/packs/VanillaBlockLoot kg
	EXPLOSION_RESISTANT i
	JUNGLE_LEAVES_SAPLING_CHANGES h
	createDecoratedPotTable (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/world/level/storage/loot/LootTable$Builder; u
	createPitcherCropLoot ()Lnet/minecraft/world/level/storage/loot/LootTable$Builder; c
	generate ()V b
net/minecraft/data/loot/packs/VanillaChestLoot kh
	ancientCityLootTable ()Lnet/minecraft/world/level/storage/loot/LootTable$Builder; l
	bastionBridgeLootTable ()Lnet/minecraft/world/level/storage/loot/LootTable$Builder; d
	bastionHoglinStableLootTable ()Lnet/minecraft/world/level/storage/loot/LootTable$Builder; c
	bastionOtherLootTable ()Lnet/minecraft/world/level/storage/loot/LootTable$Builder; h
	bastionTreasureLootTable ()Lnet/minecraft/world/level/storage/loot/LootTable$Builder; g
	desertPyramidLootTable ()Lnet/minecraft/world/level/storage/loot/LootTable$Builder; p
	endCityTreasureLootTable ()Lnet/minecraft/world/level/storage/loot/LootTable$Builder; e
	jungleTempleLootTable ()Lnet/minecraft/world/level/storage/loot/LootTable$Builder; m
	netherBridgeLootTable ()Lnet/minecraft/world/level/storage/loot/LootTable$Builder; f
	pillagerOutpostLootTable ()Lnet/minecraft/world/level/storage/loot/LootTable$Builder; o
	shipwreckMapLootTable ()Lnet/minecraft/world/level/storage/loot/LootTable$Builder; b
	shipwreckSupplyLootTable ()Lnet/minecraft/world/level/storage/loot/LootTable$Builder; a
	shipwreckTreasureLootTable ()Lnet/minecraft/world/level/storage/loot/LootTable$Builder; n
	strongholdCorridorLootTable ()Lnet/minecraft/world/level/storage/loot/LootTable$Builder; k
	strongholdLibraryLootTable ()Lnet/minecraft/world/level/storage/loot/LootTable$Builder; j
	woodlandMansionLootTable ()Lnet/minecraft/world/level/storage/loot/LootTable$Builder; i
net/minecraft/data/loot/packs/VanillaEntityLoot ki
	elderGuardianLootTable ()Lnet/minecraft/world/level/storage/loot/LootTable$Builder; c
	generate ()V a
net/minecraft/data/loot/packs/VanillaFishingLoot kj
	IN_BAMBOO_JUNGLE c
	IN_JUNGLE a
	IN_SPARSE_JUNGLE b
	fishingFishLootTable ()Lnet/minecraft/world/level/storage/loot/LootTable$Builder; a
net/minecraft/data/loot/packs/VanillaGiftLoot kk
net/minecraft/data/loot/packs/VanillaLootTableProvider kl
	create (Lnet/minecraft/data/PackOutput;)Lnet/minecraft/data/loot/LootTableProvider; a
net/minecraft/data/loot/packs/VanillaPiglinBarterLoot km
net/minecraft/data/metadata/PackMetadataGenerator ko
	elements e
	output d
	add (Lnet/minecraft/server/packs/metadata/MetadataSectionType;Ljava/lang/Object;)Lnet/minecraft/data/metadata/PackMetadataGenerator; a
	forFeaturePack (Lnet/minecraft/data/PackOutput;Lnet/minecraft/network/chat/Component;)Lnet/minecraft/data/metadata/PackMetadataGenerator; a
	forFeaturePack (Lnet/minecraft/data/PackOutput;Lnet/minecraft/network/chat/Component;Lnet/minecraft/world/flag/FeatureFlagSet;)Lnet/minecraft/data/metadata/PackMetadataGenerator; a
	getName ()Ljava/lang/String; a
	run (Lnet/minecraft/data/CachedOutput;)Ljava/util/concurrent/CompletableFuture; a
net/minecraft/data/models/BlockModelGenerators kq
	CHISELED_BOOKSHELF_SLOT_MODEL_CACHE i
	MULTIFACE_GENERATOR a
	SHAPE_CONSUMERS h
	blockStateOutput b
	fullBlockModelCustomGenerators f
	modelOutput c
	nonOrientableTrapdoor e
	skippedAutoModelsOutput d
	texturedModels g
	addBookSlotModel (Lnet/minecraft/data/models/blockstates/MultiPartGenerator;Lnet/minecraft/data/models/blockstates/Condition$TerminalCondition;Lnet/minecraft/data/models/blockstates/VariantProperties$Rotation;Lnet/minecraft/world/level/block/state/properties/BooleanProperty;Lnet/minecraft/data/models/model/ModelTemplate;Z)V a
	addSlotStateAndRotationVariants (Lnet/minecraft/data/models/blockstates/MultiPartGenerator;Lnet/minecraft/data/models/blockstates/Condition$TerminalCondition;Lnet/minecraft/data/models/blockstates/VariantProperties$Rotation;)V a
	applyRotation (Lnet/minecraft/core/FrontAndTop;Lnet/minecraft/data/models/blockstates/Variant;)Lnet/minecraft/data/models/blockstates/Variant; a
	blockEntityModels (Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/data/models/BlockModelGenerators$BlockEntityModelGenerator; a
	blockEntityModels (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/data/models/BlockModelGenerators$BlockEntityModelGenerator; d
	configureDoorHalf (Lnet/minecraft/data/models/blockstates/PropertyDispatch$C4;Lnet/minecraft/world/level/block/state/properties/DoubleBlockHalf;Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/data/models/blockstates/PropertyDispatch$C4; a
	copyModel (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/world/level/block/Block;)V h
	createActiveRail (Lnet/minecraft/world/level/block/Block;)V o
	createAirLikeBlock (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/resources/ResourceLocation;)V f
	createAirLikeBlock (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/world/item/Item;)V a
	createAmethystCluster (Lnet/minecraft/world/level/block/Block;)V w
	createAmethystClusters ()V F
	createAnvil (Lnet/minecraft/world/level/block/Block;)V r
	createAxisAlignedPillarBlock (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/data/models/model/TexturedModel$Provider;)V a
	createAxisAlignedPillarBlock (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/data/models/blockstates/BlockStateGenerator; d
	createAxisAlignedPillarBlockCustomModel (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/resources/ResourceLocation;)V e
	createAzalea (Lnet/minecraft/world/level/block/Block;)V s
	createBamboo ()V m
	createBambooModels (I)Ljava/util/List; a
	createBarrel ()V o
	createBedItem (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/world/level/block/Block;)V j
	createBeeNest (Lnet/minecraft/world/level/block/Block;Ljava/util/function/Function;)V a
	createBell ()V p
	createBigDripLeafBlock ()V g
	createBookshelf ()V r
	createBooleanModelDispatch (Lnet/minecraft/world/level/block/state/properties/BooleanProperty;Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/data/models/blockstates/PropertyDispatch; a
	createBrewingStand ()V v
	createBrushableBlock (Lnet/minecraft/world/level/block/Block;)V g
	createButton (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/data/models/blockstates/BlockStateGenerator; b
	createCakeBlock ()V w
	createCalibratedSculkSensor ()V ad
	createCampfires ([Lnet/minecraft/world/level/block/Block;)V a
	createCandleAndCandleCake (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/world/level/block/Block;)V l
	createCartographyTable ()V x
	createCauldrons ()V A
	createCaveVines ()V ag
	createChiseledBookshelf ()V au
	createChorusFlower ()V B
	createChorusPlant ()V D
	createCocoa ()V Q
	createColoredBlockWithRandomRotations (Lnet/minecraft/data/models/model/TexturedModel$Provider;[Lnet/minecraft/world/level/block/Block;)V a
	createColoredBlockWithStateRotations (Lnet/minecraft/data/models/model/TexturedModel$Provider;[Lnet/minecraft/world/level/block/Block;)V b
	createColumnWithFacing ()Lnet/minecraft/data/models/blockstates/PropertyDispatch; n
	createCommandBlock (Lnet/minecraft/world/level/block/Block;)V q
	createComparator ()V t
	createComposter ()V E
	createCoral (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/world/level/block/Block;Lnet/minecraft/world/level/block/Block;Lnet/minecraft/world/level/block/Block;Lnet/minecraft/world/level/block/Block;Lnet/minecraft/world/level/block/Block;Lnet/minecraft/world/level/block/Block;Lnet/minecraft/world/level/block/Block;)V a
	createCoralFans (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/world/level/block/Block;)V b
	createCraftingTableLike (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/world/level/block/Block;Ljava/util/function/BiFunction;)V a
	createCropBlock (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/world/level/block/state/properties/Property;[I)V a
	createCrossBlock (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/data/models/BlockModelGenerators$TintState;)V b
	createCrossBlock (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/data/models/BlockModelGenerators$TintState;Lnet/minecraft/data/models/model/TextureMapping;)V b
	createCrossBlock (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/data/models/BlockModelGenerators$TintState;Lnet/minecraft/world/level/block/state/properties/Property;[I)V a
	createCrossBlockWithDefaultItem (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/data/models/BlockModelGenerators$TintState;)V a
	createCrossBlockWithDefaultItem (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/data/models/BlockModelGenerators$TintState;Lnet/minecraft/data/models/model/TextureMapping;)V a
	createCustomFence (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/data/models/blockstates/BlockStateGenerator; a
	createDaylightDetector ()V H
	createDirtPath ()V R
	createDispenserBlock (Lnet/minecraft/world/level/block/Block;)V v
	createDoor (Lnet/minecraft/world/level/block/Block;)V i
	createDoor (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/data/models/blockstates/BlockStateGenerator; a
	createDoubleBlock (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/resources/ResourceLocation;)V f
	createDoublePlant (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/data/models/BlockModelGenerators$TintState;)V c
	createEmptyOrFullDispatch (Lnet/minecraft/world/level/block/state/properties/Property;Ljava/lang/Comparable;Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/data/models/blockstates/PropertyDispatch; a
	createEndPortalFrame ()V C
	createFacingDispatch ()Lnet/minecraft/data/models/blockstates/PropertyDispatch; e
	createFarmland ()V J
	createFence (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/data/models/blockstates/BlockStateGenerator; c
	createFenceGate (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/resources/ResourceLocation;Z)Lnet/minecraft/data/models/blockstates/BlockStateGenerator; a
	createFire ()V K
	createFloorFireModels (Lnet/minecraft/world/level/block/Block;)Ljava/util/List; z
	createFlowerBed (Lnet/minecraft/world/level/block/Block;)V p
	createFrogspawnBlock ()V W
	createFrostedIce ()V O
	createFullAndCarpetBlocks (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/world/level/block/Block;)V e
	createFurnace (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/data/models/model/TexturedModel$Provider;)V d
	createGenericCube (Lnet/minecraft/world/level/block/Block;)V b
	createGlassBlocks (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/world/level/block/Block;)V f
	createGrassBlocks ()V P
	createGrassLikeBlock (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/data/models/blockstates/Variant;)V a
	createGrindstone ()V q
	createGrowingPlant (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/world/level/block/Block;Lnet/minecraft/data/models/BlockModelGenerators$TintState;)V b
	createHangingSign (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/world/level/block/Block;Lnet/minecraft/world/level/block/Block;)V a
	createHopper ()V S
	createHorizontalFacingDispatch ()Lnet/minecraft/data/models/blockstates/PropertyDispatch; b
	createHorizontalFacingDispatchAlt ()Lnet/minecraft/data/models/blockstates/PropertyDispatch; c
	createHorizontallyRotatedBlock (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/data/models/model/TexturedModel$Provider;)V c
	createInfestedDeepslate ()V ax
	createInfestedStone ()V aw
	createIronBars ()V T
	createJigsaw ()V az
	createLantern (Lnet/minecraft/world/level/block/Block;)V C
	createLever ()V U
	createLightBlock ()V aB
	createLightningRod ()V I
	createLilyPad ()V V
	createMagmaBlock ()V av
	createMangrovePropagule ()V N
	createMirroredColumnGenerator (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/data/models/model/TextureMapping;Ljava/util/function/BiConsumer;)Lnet/minecraft/data/models/blockstates/BlockStateGenerator; c
	createMirroredCubeGenerator (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/data/models/model/TextureMapping;Ljava/util/function/BiConsumer;)Lnet/minecraft/data/models/blockstates/BlockStateGenerator; a
	createMuddyMangroveRoots ()V M
	createMultiface (Lnet/minecraft/world/level/block/Block;)V E
	createMushroomBlock (Lnet/minecraft/world/level/block/Block;)V u
	createNetherPortalBlock ()V X
	createNetherRoots (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/world/level/block/Block;)V k
	createNetherrack ()V Y
	createNonTemplateHorizontalBlock (Lnet/minecraft/world/level/block/Block;)V D
	createNonTemplateModelBlock (Lnet/minecraft/world/level/block/Block;)V m
	createNonTemplateModelBlock (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/world/level/block/Block;)V a
	createNormalTorch (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/world/level/block/Block;)V i
	createNorthWestMirroredCubeGenerator (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/data/models/model/TextureMapping;Ljava/util/function/BiConsumer;)Lnet/minecraft/data/models/blockstates/BlockStateGenerator; b
	createNyliumBlock (Lnet/minecraft/world/level/block/Block;)V x
	createObserver ()V Z
	createOrientableTrapdoor (Lnet/minecraft/world/level/block/Block;)V j
	createOrientableTrapdoor (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/data/models/blockstates/BlockStateGenerator; c
	createPassiveRail (Lnet/minecraft/world/level/block/Block;)V n
	createPetrifiedOakSlab ()V aA
	createPillarBlockUVLocked (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/data/models/model/TextureMapping;Ljava/util/function/BiConsumer;)Lnet/minecraft/data/models/blockstates/BlockStateGenerator; a
	createPistonHeads ()V ab
	createPistonVariant (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/data/models/model/TextureMapping;)V a
	createPistons ()V aa
	createPitcherCrop ()V i
	createPitcherPlant ()V h
	createPlant (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/world/level/block/Block;Lnet/minecraft/data/models/BlockModelGenerators$TintState;)V a
	createPointedDripstone ()V G
	createPointedDripstoneVariant (Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/properties/DripstoneThickness;)Lnet/minecraft/data/models/blockstates/Variant; a
	createPottedAzalea (Lnet/minecraft/world/level/block/Block;)V t
	createPressurePlate (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/data/models/blockstates/BlockStateGenerator; e
	createPumpkinVariant (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/data/models/model/TextureMapping;)V a
	createPumpkins ()V z
	createRedstoneLamp ()V ah
	createRedstoneTorch ()V ai
	createRedstoneWire ()V s
	createRepeater ()V aj
	createRespawnAnchor ()V ay
	createRotatableColumn (Lnet/minecraft/world/level/block/Block;)V y
	createRotatedMirroredVariantBlock (Lnet/minecraft/world/level/block/Block;)V e
	createRotatedPillar ()Lnet/minecraft/data/models/blockstates/PropertyDispatch; f
	createRotatedPillarWithHorizontalVariant (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/data/models/model/TexturedModel$Provider;Lnet/minecraft/data/models/model/TexturedModel$Provider;)V a
	createRotatedPillarWithHorizontalVariant (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/data/models/blockstates/BlockStateGenerator; d
	createRotatedVariant (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/data/models/blockstates/MultiVariantGenerator; b
	createRotatedVariant (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/data/models/blockstates/MultiVariantGenerator; a
	createRotatedVariantBlock (Lnet/minecraft/world/level/block/Block;)V f
	createRotatedVariants (Lnet/minecraft/resources/ResourceLocation;)[Lnet/minecraft/data/models/blockstates/Variant; a
	createScaffolding ()V af
	createSculkCatalyst ()V at
	createSculkSensor ()V ac
	createSculkShrieker ()V ae
	createSeaPickle ()V ak
	createShulkerBox (Lnet/minecraft/world/level/block/Block;)V F
	createSideFireModels (Lnet/minecraft/world/level/block/Block;)Ljava/util/List; A
	createSimpleBlock (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/data/models/blockstates/MultiVariantGenerator; c
	createSimpleFlatItemModel (Lnet/minecraft/world/item/Item;)V a
	createSimpleFlatItemModel (Lnet/minecraft/world/level/block/Block;)V d
	createSimpleFlatItemModel (Lnet/minecraft/world/level/block/Block;Ljava/lang/String;)V a
	createSlab (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/data/models/blockstates/BlockStateGenerator; e
	createSmallDripleaf ()V l
	createSmithingTable ()V y
	createSmoothStoneSlab ()V u
	createSnifferEgg ()V as
	createSnowBlocks ()V al
	createSoulFire ()V L
	createStairs (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/data/models/blockstates/BlockStateGenerator; b
	createStems (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/world/level/block/Block;)V c
	createStonecutter ()V am
	createStructureBlock ()V an
	createSuffixedVariant (Lnet/minecraft/world/level/block/Block;Ljava/lang/String;Lnet/minecraft/data/models/model/ModelTemplate;Ljava/util/function/Function;)Lnet/minecraft/resources/ResourceLocation; a
	createSunflower ()V j
	createSweetBerryBush ()V ao
	createTallSeagrass ()V k
	createTopFireModels (Lnet/minecraft/world/level/block/Block;)Ljava/util/List; B
	createTorchHorizontalDispatch ()Lnet/minecraft/data/models/blockstates/PropertyDispatch; d
	createTrapdoor (Lnet/minecraft/world/level/block/Block;)V k
	createTrapdoor (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/data/models/blockstates/BlockStateGenerator; d
	createTripwire ()V ap
	createTripwireHook ()V aq
	createTrivialBlock (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/data/models/model/TextureMapping;Lnet/minecraft/data/models/model/ModelTemplate;)V a
	createTrivialBlock (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/data/models/model/TexturedModel$Provider;)V b
	createTrivialCube (Lnet/minecraft/world/level/block/Block;)V a
	createTurtleEgg ()V ar
	createTurtleEggModel (ILjava/lang/String;Lnet/minecraft/data/models/model/TextureMapping;)Lnet/minecraft/resources/ResourceLocation; a
	createTurtleEggModel (Ljava/lang/Integer;Ljava/lang/Integer;)Lnet/minecraft/resources/ResourceLocation; a
	createWall (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/data/models/blockstates/BlockStateGenerator; a
	createWeightedPressurePlate (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/world/level/block/Block;)V g
	delegateItemModel (Lnet/minecraft/world/item/Item;Lnet/minecraft/resources/ResourceLocation;)V a
	delegateItemModel (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/resources/ResourceLocation;)V a
	family (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/data/models/BlockModelGenerators$BlockFamilyProvider; h
	run ()V a
	skipAutoItemBlock (Lnet/minecraft/world/level/block/Block;)V c
	woodProvider (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/data/models/BlockModelGenerators$WoodProvider; l
	wrapModels (Ljava/util/List;Ljava/util/function/UnaryOperator;)Ljava/util/List; a
net/minecraft/data/models/BlockModelGenerators$BlockEntityModelGenerator kq$a
	baseModel b
	create ([Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/data/models/BlockModelGenerators$BlockEntityModelGenerator; a
	createWithCustomBlockItemModel (Lnet/minecraft/data/models/model/ModelTemplate;[Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/data/models/BlockModelGenerators$BlockEntityModelGenerator; a
	createWithoutBlockItem ([Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/data/models/BlockModelGenerators$BlockEntityModelGenerator; b
net/minecraft/data/models/BlockModelGenerators$BlockFamilyProvider kq$b
	family d
	fullBlock e
	mapping b
	models c
	button (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/data/models/BlockModelGenerators$BlockFamilyProvider; a
	customFence (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/data/models/BlockModelGenerators$BlockFamilyProvider; c
	customFenceGate (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/data/models/BlockModelGenerators$BlockFamilyProvider; e
	door (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/data/models/BlockModelGenerators$BlockFamilyProvider; l
	fence (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/data/models/BlockModelGenerators$BlockFamilyProvider; d
	fenceGate (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/data/models/BlockModelGenerators$BlockFamilyProvider; f
	fullBlock (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/data/models/model/ModelTemplate;)Lnet/minecraft/data/models/BlockModelGenerators$BlockFamilyProvider; a
	fullBlockCopies ([Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/data/models/BlockModelGenerators$BlockFamilyProvider; a
	fullBlockVariant (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/data/models/BlockModelGenerators$BlockFamilyProvider; k
	generateFor (Lnet/minecraft/data/BlockFamily;)Lnet/minecraft/data/models/BlockModelGenerators$BlockFamilyProvider; a
	getOrCreateModel (Lnet/minecraft/data/models/model/ModelTemplate;Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/resources/ResourceLocation; a
	pressurePlate (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/data/models/BlockModelGenerators$BlockFamilyProvider; g
	sign (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/data/models/BlockModelGenerators$BlockFamilyProvider; h
	slab (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/data/models/BlockModelGenerators$BlockFamilyProvider; i
	stairs (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/data/models/BlockModelGenerators$BlockFamilyProvider; j
	trapdoor (Lnet/minecraft/world/level/block/Block;)V m
	wall (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/data/models/BlockModelGenerators$BlockFamilyProvider; b
net/minecraft/data/models/BlockModelGenerators$BlockStateGeneratorSupplier kq$c
net/minecraft/data/models/BlockModelGenerators$BookSlotModelCacheKey kq$d
	modelSuffix b
	template a
	modelSuffix ()Ljava/lang/String; b
	template ()Lnet/minecraft/data/models/model/ModelTemplate; a
net/minecraft/data/models/BlockModelGenerators$TintState kq$e
	$VALUES c
	NOT_TINTED b
	TINTED a
	$values ()[Lnet/minecraft/data/models/BlockModelGenerators$TintState; c
	getCross ()Lnet/minecraft/data/models/model/ModelTemplate; a
	getCrossPot ()Lnet/minecraft/data/models/model/ModelTemplate; b
net/minecraft/data/models/BlockModelGenerators$WoodProvider kq$f
	logMapping b
	log (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/data/models/BlockModelGenerators$WoodProvider; b
	logUVLocked (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/data/models/BlockModelGenerators$WoodProvider; d
	logWithHorizontal (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/data/models/BlockModelGenerators$WoodProvider; c
	wood (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/data/models/BlockModelGenerators$WoodProvider; a
net/minecraft/data/models/ItemModelGenerators kr
	GENERATED_TRIM_MODELS b
	TRIM_TYPE_PREDICATE_ID a
	output c
	generateArmorTrims (Lnet/minecraft/world/item/ArmorItem;)V a
	generateBaseArmorTrimTemplate (Lnet/minecraft/resources/ResourceLocation;Ljava/util/Map;Lnet/minecraft/world/item/ArmorMaterial;)Lcom/google/gson/JsonObject; a
	generateClockItem (Lnet/minecraft/world/item/Item;)V b
	generateCompassItem (Lnet/minecraft/world/item/Item;)V a
	generateFlatItem (Lnet/minecraft/world/item/Item;Ljava/lang/String;Lnet/minecraft/data/models/model/ModelTemplate;)V a
	generateFlatItem (Lnet/minecraft/world/item/Item;Lnet/minecraft/data/models/model/ModelTemplate;)V a
	generateFlatItem (Lnet/minecraft/world/item/Item;Lnet/minecraft/world/item/Item;Lnet/minecraft/data/models/model/ModelTemplate;)V a
	generateLayeredItem (Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/resources/ResourceLocation;)V a
	generateLayeredItem (Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/resources/ResourceLocation;)V a
	getItemModelForTrimMaterial (Lnet/minecraft/resources/ResourceLocation;Ljava/lang/String;)Lnet/minecraft/resources/ResourceLocation; a
	run ()V a
net/minecraft/data/models/ItemModelGenerators$TrimModelData kr$a
	itemModelIndex b
	name a
	overrideArmorMaterials c
	itemModelIndex ()F b
	name ()Ljava/lang/String; a
	name (Lnet/minecraft/world/item/ArmorMaterial;)Ljava/lang/String; a
	overrideArmorMaterials ()Ljava/util/Map; c
net/minecraft/data/models/ModelProvider ks
	blockStatePathProvider d
	modelPathProvider e
	getName ()Ljava/lang/String; a
	run (Lnet/minecraft/data/CachedOutput;)Ljava/util/concurrent/CompletableFuture; a
	saveCollection (Lnet/minecraft/data/CachedOutput;Ljava/util/Map;Ljava/util/function/Function;)Ljava/util/concurrent/CompletableFuture; a
net/minecraft/data/models/blockstates/BlockStateGenerator kt
	getBlock ()Lnet/minecraft/world/level/block/Block; a
net/minecraft/data/models/blockstates/Condition ku
	and ([Lnet/minecraft/data/models/blockstates/Condition;)Lnet/minecraft/data/models/blockstates/Condition; a
	condition ()Lnet/minecraft/data/models/blockstates/Condition$TerminalCondition; a
	or ([Lnet/minecraft/data/models/blockstates/Condition;)Lnet/minecraft/data/models/blockstates/Condition; b
	validate (Lnet/minecraft/world/level/block/state/StateDefinition;)V a
net/minecraft/data/models/blockstates/Condition$CompositeCondition ku$a
	operation a
	subconditions b
	get ()Lcom/google/gson/JsonElement; b
	validate (Lnet/minecraft/world/level/block/state/StateDefinition;)V a
net/minecraft/data/models/blockstates/Condition$Operation ku$b
	$VALUES d
	AND a
	OR b
	id c
	$values ()[Lnet/minecraft/data/models/blockstates/Condition$Operation; a
net/minecraft/data/models/blockstates/Condition$TerminalCondition ku$c
	terms a
	get ()Lcom/google/gson/JsonElement; b
	getTerm (Lnet/minecraft/world/level/block/state/properties/Property;Ljava/lang/Comparable;[Ljava/lang/Comparable;)Ljava/lang/String; c
	joinValues (Lnet/minecraft/world/level/block/state/properties/Property;Ljava/util/stream/Stream;)Ljava/lang/String; a
	negatedTerm (Lnet/minecraft/world/level/block/state/properties/Property;Ljava/lang/Comparable;)Lnet/minecraft/data/models/blockstates/Condition$TerminalCondition; b
	negatedTerm (Lnet/minecraft/world/level/block/state/properties/Property;Ljava/lang/Comparable;[Ljava/lang/Comparable;)Lnet/minecraft/data/models/blockstates/Condition$TerminalCondition; b
	putValue (Lnet/minecraft/world/level/block/state/properties/Property;Ljava/lang/String;)V a
	term (Lnet/minecraft/world/level/block/state/properties/Property;Ljava/lang/Comparable;)Lnet/minecraft/data/models/blockstates/Condition$TerminalCondition; a
	term (Lnet/minecraft/world/level/block/state/properties/Property;Ljava/lang/Comparable;[Ljava/lang/Comparable;)Lnet/minecraft/data/models/blockstates/Condition$TerminalCondition; a
	validate (Lnet/minecraft/world/level/block/state/StateDefinition;)V a
net/minecraft/data/models/blockstates/MultiPartGenerator kv
	block a
	parts b
	get ()Lcom/google/gson/JsonElement; b
	getBlock ()Lnet/minecraft/world/level/block/Block; a
	multiPart (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/data/models/blockstates/MultiPartGenerator; a
	with (Ljava/util/List;)Lnet/minecraft/data/models/blockstates/MultiPartGenerator; a
	with (Lnet/minecraft/data/models/blockstates/Condition;Ljava/util/List;)Lnet/minecraft/data/models/blockstates/MultiPartGenerator; a
	with (Lnet/minecraft/data/models/blockstates/Condition;Lnet/minecraft/data/models/blockstates/Variant;)Lnet/minecraft/data/models/blockstates/MultiPartGenerator; a
	with (Lnet/minecraft/data/models/blockstates/Condition;[Lnet/minecraft/data/models/blockstates/Variant;)Lnet/minecraft/data/models/blockstates/MultiPartGenerator; a
	with (Lnet/minecraft/data/models/blockstates/Variant;)Lnet/minecraft/data/models/blockstates/MultiPartGenerator; a
net/minecraft/data/models/blockstates/MultiPartGenerator$ConditionalEntry kv$a
	condition a
	decorate (Lcom/google/gson/JsonObject;)V a
	validate (Lnet/minecraft/world/level/block/state/StateDefinition;)V a
net/minecraft/data/models/blockstates/MultiPartGenerator$Entry kv$b
	variants a
	decorate (Lcom/google/gson/JsonObject;)V a
	get ()Lcom/google/gson/JsonElement; a
	validate (Lnet/minecraft/world/level/block/state/StateDefinition;)V a
net/minecraft/data/models/blockstates/MultiVariantGenerator kw
	baseVariants b
	block a
	declaredPropertySets d
	seenProperties c
	get ()Lcom/google/gson/JsonElement; b
	getBlock ()Lnet/minecraft/world/level/block/Block; a
	mergeVariants (Ljava/util/List;Ljava/util/List;)Ljava/util/List; a
	multiVariant (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/data/models/blockstates/MultiVariantGenerator; a
	multiVariant (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/data/models/blockstates/Variant;)Lnet/minecraft/data/models/blockstates/MultiVariantGenerator; a
	multiVariant (Lnet/minecraft/world/level/block/Block;[Lnet/minecraft/data/models/blockstates/Variant;)Lnet/minecraft/data/models/blockstates/MultiVariantGenerator; a
	with (Lnet/minecraft/data/models/blockstates/PropertyDispatch;)Lnet/minecraft/data/models/blockstates/MultiVariantGenerator; a
net/minecraft/data/models/blockstates/PropertyDispatch kx
	values a
	getDefinedProperties ()Ljava/util/List; b
	getEntries ()Ljava/util/Map; a
	properties (Lnet/minecraft/world/level/block/state/properties/Property;Lnet/minecraft/world/level/block/state/properties/Property;)Lnet/minecraft/data/models/blockstates/PropertyDispatch$C2; a
	properties (Lnet/minecraft/world/level/block/state/properties/Property;Lnet/minecraft/world/level/block/state/properties/Property;Lnet/minecraft/world/level/block/state/properties/Property;)Lnet/minecraft/data/models/blockstates/PropertyDispatch$C3; a
	properties (Lnet/minecraft/world/level/block/state/properties/Property;Lnet/minecraft/world/level/block/state/properties/Property;Lnet/minecraft/world/level/block/state/properties/Property;Lnet/minecraft/world/level/block/state/properties/Property;)Lnet/minecraft/data/models/blockstates/PropertyDispatch$C4; a
	properties (Lnet/minecraft/world/level/block/state/properties/Property;Lnet/minecraft/world/level/block/state/properties/Property;Lnet/minecraft/world/level/block/state/properties/Property;Lnet/minecraft/world/level/block/state/properties/Property;Lnet/minecraft/world/level/block/state/properties/Property;)Lnet/minecraft/data/models/blockstates/PropertyDispatch$C5; a
	property (Lnet/minecraft/world/level/block/state/properties/Property;)Lnet/minecraft/data/models/blockstates/PropertyDispatch$C1; a
	putValue (Lnet/minecraft/data/models/blockstates/Selector;Ljava/util/List;)V a
	verifyComplete ()V c
net/minecraft/data/models/blockstates/PropertyDispatch$C1 kx$a
	property1 a
	generate (Ljava/util/function/Function;)Lnet/minecraft/data/models/blockstates/PropertyDispatch; a
	generateList (Ljava/util/function/Function;)Lnet/minecraft/data/models/blockstates/PropertyDispatch; b
	getDefinedProperties ()Ljava/util/List; b
	select (Ljava/lang/Comparable;Ljava/util/List;)Lnet/minecraft/data/models/blockstates/PropertyDispatch$C1; a
	select (Ljava/lang/Comparable;Lnet/minecraft/data/models/blockstates/Variant;)Lnet/minecraft/data/models/blockstates/PropertyDispatch$C1; a
net/minecraft/data/models/blockstates/PropertyDispatch$C2 kx$b
	property1 a
	property2 b
	generate (Ljava/util/function/BiFunction;)Lnet/minecraft/data/models/blockstates/PropertyDispatch; a
	generateList (Ljava/util/function/BiFunction;)Lnet/minecraft/data/models/blockstates/PropertyDispatch; b
	getDefinedProperties ()Ljava/util/List; b
	select (Ljava/lang/Comparable;Ljava/lang/Comparable;Ljava/util/List;)Lnet/minecraft/data/models/blockstates/PropertyDispatch$C2; a
	select (Ljava/lang/Comparable;Ljava/lang/Comparable;Lnet/minecraft/data/models/blockstates/Variant;)Lnet/minecraft/data/models/blockstates/PropertyDispatch$C2; a
net/minecraft/data/models/blockstates/PropertyDispatch$C3 kx$c
	property1 a
	property2 b
	property3 c
	generate (Lnet/minecraft/data/models/blockstates/PropertyDispatch$TriFunction;)Lnet/minecraft/data/models/blockstates/PropertyDispatch; a
	generateList (Lnet/minecraft/data/models/blockstates/PropertyDispatch$TriFunction;)Lnet/minecraft/data/models/blockstates/PropertyDispatch; b
	getDefinedProperties ()Ljava/util/List; b
	select (Ljava/lang/Comparable;Ljava/lang/Comparable;Ljava/lang/Comparable;Ljava/util/List;)Lnet/minecraft/data/models/blockstates/PropertyDispatch$C3; a
	select (Ljava/lang/Comparable;Ljava/lang/Comparable;Ljava/lang/Comparable;Lnet/minecraft/data/models/blockstates/Variant;)Lnet/minecraft/data/models/blockstates/PropertyDispatch$C3; a
net/minecraft/data/models/blockstates/PropertyDispatch$C4 kx$d
	property1 a
	property2 b
	property3 c
	property4 d
	generate (Lnet/minecraft/data/models/blockstates/PropertyDispatch$QuadFunction;)Lnet/minecraft/data/models/blockstates/PropertyDispatch; a
	generateList (Lnet/minecraft/data/models/blockstates/PropertyDispatch$QuadFunction;)Lnet/minecraft/data/models/blockstates/PropertyDispatch; b
	getDefinedProperties ()Ljava/util/List; b
	select (Ljava/lang/Comparable;Ljava/lang/Comparable;Ljava/lang/Comparable;Ljava/lang/Comparable;Ljava/util/List;)Lnet/minecraft/data/models/blockstates/PropertyDispatch$C4; a
	select (Ljava/lang/Comparable;Ljava/lang/Comparable;Ljava/lang/Comparable;Ljava/lang/Comparable;Lnet/minecraft/data/models/blockstates/Variant;)Lnet/minecraft/data/models/blockstates/PropertyDispatch$C4; a
net/minecraft/data/models/blockstates/PropertyDispatch$C5 kx$e
	property1 a
	property2 b
	property3 c
	property4 d
	property5 e
	generate (Lnet/minecraft/data/models/blockstates/PropertyDispatch$PentaFunction;)Lnet/minecraft/data/models/blockstates/PropertyDispatch; a
	generateList (Lnet/minecraft/data/models/blockstates/PropertyDispatch$PentaFunction;)Lnet/minecraft/data/models/blockstates/PropertyDispatch; b
	getDefinedProperties ()Ljava/util/List; b
	select (Ljava/lang/Comparable;Ljava/lang/Comparable;Ljava/lang/Comparable;Ljava/lang/Comparable;Ljava/lang/Comparable;Ljava/util/List;)Lnet/minecraft/data/models/blockstates/PropertyDispatch$C5; a
	select (Ljava/lang/Comparable;Ljava/lang/Comparable;Ljava/lang/Comparable;Ljava/lang/Comparable;Ljava/lang/Comparable;Lnet/minecraft/data/models/blockstates/Variant;)Lnet/minecraft/data/models/blockstates/PropertyDispatch$C5; a
net/minecraft/data/models/blockstates/PropertyDispatch$PentaFunction kx$f
net/minecraft/data/models/blockstates/PropertyDispatch$QuadFunction kx$g
net/minecraft/data/models/blockstates/PropertyDispatch$TriFunction kx$h
net/minecraft/data/models/blockstates/Selector ky
	COMPARE_BY_NAME b
	EMPTY a
	values c
	empty ()Lnet/minecraft/data/models/blockstates/Selector; a
	extend (Lnet/minecraft/data/models/blockstates/Selector;)Lnet/minecraft/data/models/blockstates/Selector; a
	extend (Lnet/minecraft/world/level/block/state/properties/Property$Value;)Lnet/minecraft/data/models/blockstates/Selector; a
	getKey ()Ljava/lang/String; b
	of ([Lnet/minecraft/world/level/block/state/properties/Property$Value;)Lnet/minecraft/data/models/blockstates/Selector; a
net/minecraft/data/models/blockstates/Variant kz
	values a
	convertList (Ljava/util/List;)Lcom/google/gson/JsonElement; a
	get ()Lcom/google/gson/JsonElement; b
	merge (Lnet/minecraft/data/models/blockstates/Variant;Lnet/minecraft/data/models/blockstates/Variant;)Lnet/minecraft/data/models/blockstates/Variant; a
	variant ()Lnet/minecraft/data/models/blockstates/Variant; a
	with (Lnet/minecraft/data/models/blockstates/VariantProperty;Ljava/lang/Object;)Lnet/minecraft/data/models/blockstates/Variant; a
net/minecraft/data/models/blockstates/VariantProperties la
	MODEL c
	UV_LOCK d
	WEIGHT e
	X_ROT a
	Y_ROT b
net/minecraft/data/models/blockstates/VariantProperties$Rotation la$a
	$VALUES f
	R0 a
	R180 c
	R270 d
	R90 b
	value e
	$values ()[Lnet/minecraft/data/models/blockstates/VariantProperties$Rotation; a
net/minecraft/data/models/blockstates/VariantProperty lb
	key a
	serializer b
	withValue (Ljava/lang/Object;)Lnet/minecraft/data/models/blockstates/VariantProperty$Value; a
net/minecraft/data/models/blockstates/VariantProperty$Value lb$a
	value b
	addToVariant (Lcom/google/gson/JsonObject;)V a
	getKey ()Lnet/minecraft/data/models/blockstates/VariantProperty; a
net/minecraft/data/models/model/DelegatedModel ld
	parent a
	get ()Lcom/google/gson/JsonElement; a
net/minecraft/data/models/model/ModelLocationUtils le
	decorateBlockModelLocation (Ljava/lang/String;)Lnet/minecraft/resources/ResourceLocation; a
	decorateItemModelLocation (Ljava/lang/String;)Lnet/minecraft/resources/ResourceLocation; b
	getModelLocation (Lnet/minecraft/world/item/Item;)Lnet/minecraft/resources/ResourceLocation; a
	getModelLocation (Lnet/minecraft/world/item/Item;Ljava/lang/String;)Lnet/minecraft/resources/ResourceLocation; a
	getModelLocation (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/resources/ResourceLocation; a
	getModelLocation (Lnet/minecraft/world/level/block/Block;Ljava/lang/String;)Lnet/minecraft/resources/ResourceLocation; a
net/minecraft/data/models/model/ModelTemplate lf
	model a
	requiredSlots b
	suffix c
	create (Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/data/models/model/TextureMapping;Ljava/util/function/BiConsumer;)Lnet/minecraft/resources/ResourceLocation; a
	create (Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/data/models/model/TextureMapping;Ljava/util/function/BiConsumer;Lnet/minecraft/data/models/model/ModelTemplate$JsonFactory;)Lnet/minecraft/resources/ResourceLocation; a
	create (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/data/models/model/TextureMapping;Ljava/util/function/BiConsumer;)Lnet/minecraft/resources/ResourceLocation; a
	createBaseTemplate (Lnet/minecraft/resources/ResourceLocation;Ljava/util/Map;)Lcom/google/gson/JsonObject; a
	createMap (Lnet/minecraft/data/models/model/TextureMapping;)Ljava/util/Map; a
	createWithOverride (Lnet/minecraft/world/level/block/Block;Ljava/lang/String;Lnet/minecraft/data/models/model/TextureMapping;Ljava/util/function/BiConsumer;)Lnet/minecraft/resources/ResourceLocation; b
	createWithSuffix (Lnet/minecraft/world/level/block/Block;Ljava/lang/String;Lnet/minecraft/data/models/model/TextureMapping;Ljava/util/function/BiConsumer;)Lnet/minecraft/resources/ResourceLocation; a
net/minecraft/data/models/model/ModelTemplate$JsonFactory lf$a
net/minecraft/data/models/model/ModelTemplates lg
	ANVIL aQ
	ATTACHED_STEM aS
	AZALEA br
	BANNER_INVENTORY bD
	BED_INVENTORY bC
	BUTTON q
	BUTTON_INVENTORY s
	BUTTON_PRESSED r
	CAMPFIRE ba
	CANDLE bF
	CANDLE_CAKE bJ
	CARPET au
	CAULDRON_FULL bq
	CAULDRON_LEVEL1 bo
	CAULDRON_LEVEL2 bp
	CHISELED_BOOKSHELF_SLOT_BOTTOM_LEFT aN
	CHISELED_BOOKSHELF_SLOT_BOTTOM_MID aO
	CHISELED_BOOKSHELF_SLOT_BOTTOM_RIGHT aP
	CHISELED_BOOKSHELF_SLOT_TOP_LEFT aK
	CHISELED_BOOKSHELF_SLOT_TOP_MID aL
	CHISELED_BOOKSHELF_SLOT_TOP_RIGHT aM
	CHORUS_FLOWER aC
	COMMAND_BLOCK aJ
	CORAL_FAN az
	CORAL_WALL_FAN aA
	CROP aT
	CROSS am
	CUBE a
	CUBE_ALL c
	CUBE_BOTTOM_TOP m
	CUBE_COLUMN i
	CUBE_COLUMN_HORIZONTAL j
	CUBE_COLUMN_MIRRORED k
	CUBE_COLUMN_UV_LOCKED_X f
	CUBE_COLUMN_UV_LOCKED_Y g
	CUBE_COLUMN_UV_LOCKED_Z h
	CUBE_DIRECTIONAL b
	CUBE_MIRRORED_ALL d
	CUBE_NORTH_WEST_MIRRORED_ALL e
	CUBE_ORIENTABLE n
	CUBE_ORIENTABLE_TOP_BOTTOM o
	CUBE_ORIENTABLE_VERTICAL p
	CUBE_TOP l
	CUSTOM_FENCE_GATE_CLOSED O
	CUSTOM_FENCE_GATE_OPEN P
	CUSTOM_FENCE_GATE_WALL_CLOSED Q
	CUSTOM_FENCE_GATE_WALL_OPEN R
	CUSTOM_FENCE_INVENTORY G
	CUSTOM_FENCE_POST B
	CUSTOM_FENCE_SIDE_EAST D
	CUSTOM_FENCE_SIDE_NORTH C
	CUSTOM_FENCE_SIDE_SOUTH E
	CUSTOM_FENCE_SIDE_WEST F
	DAYLIGHT_DETECTOR aD
	DOOR_BOTTOM_LEFT t
	DOOR_BOTTOM_LEFT_OPEN u
	DOOR_BOTTOM_RIGHT v
	DOOR_BOTTOM_RIGHT_OPEN w
	DOOR_TOP_LEFT x
	DOOR_TOP_LEFT_OPEN y
	DOOR_TOP_RIGHT z
	DOOR_TOP_RIGHT_OPEN A
	FARMLAND aU
	FENCE_GATE_CLOSED S
	FENCE_GATE_OPEN T
	FENCE_GATE_WALL_CLOSED U
	FENCE_GATE_WALL_OPEN V
	FENCE_INVENTORY J
	FENCE_POST H
	FENCE_SIDE I
	FIRE_FLOOR aV
	FIRE_SIDE aW
	FIRE_SIDE_ALT aX
	FIRE_UP aY
	FIRE_UP_ALT aZ
	FLAT_HANDHELD_ITEM bx
	FLAT_HANDHELD_ROD_ITEM by
	FLAT_ITEM bv
	FLOWERBED_1 av
	FLOWERBED_2 aw
	FLOWERBED_3 ax
	FLOWERBED_4 ay
	FLOWER_POT_CROSS ao
	FOUR_CANDLES bI
	FOUR_TURTLE_EGGS bm
	GLAZED_TERRACOTTA aB
	HANGING_LANTERN bc
	LANTERN bb
	LEAVES ab
	MUSIC_DISC bw
	ORIENTABLE_TRAPDOOR_BOTTOM aj
	ORIENTABLE_TRAPDOOR_OPEN ak
	ORIENTABLE_TRAPDOOR_TOP ai
	PARTICLE_ONLY Y
	PISTON bf
	PISTON_HEAD bg
	PISTON_HEAD_SHORT bh
	POINTED_DRIPSTONE al
	POTTED_AZALEA bs
	POTTED_FLOWERING_AZALEA bt
	PRESSURE_PLATE_DOWN X
	PRESSURE_PLATE_UP W
	RAIL_CURVED ar
	RAIL_FLAT aq
	RAIL_RAISED_NE as
	RAIL_RAISED_SW at
	SCULK_SHRIEKER bK
	SEAGRASS bi
	SHULKER_BOX_INVENTORY bB
	SINGLE_FACE bn
	SKULL_INVENTORY bE
	SLAB_BOTTOM Z
	SLAB_TOP aa
	SNIFFER_EGG bu
	STAINED_GLASS_PANE_NOSIDE aE
	STAINED_GLASS_PANE_NOSIDE_ALT aF
	STAINED_GLASS_PANE_POST aG
	STAINED_GLASS_PANE_SIDE aH
	STAINED_GLASS_PANE_SIDE_ALT aI
	STAIRS_INNER ad
	STAIRS_OUTER ae
	STAIRS_STRAIGHT ac
	STEMS aR
	THREE_CANDLES bH
	THREE_LAYERED_ITEM bA
	THREE_TURTLE_EGGS bl
	TINTED_CROSS an
	TINTED_FLOWER_POT_CROSS ap
	TORCH bd
	TRAPDOOR_BOTTOM ag
	TRAPDOOR_OPEN ah
	TRAPDOOR_TOP af
	TURTLE_EGG bj
	TWO_CANDLES bG
	TWO_LAYERED_ITEM bz
	TWO_TURTLE_EGGS bk
	WALL_INVENTORY N
	WALL_LOW_SIDE L
	WALL_POST K
	WALL_TALL_SIDE M
	WALL_TORCH be
	create (Ljava/lang/String;Ljava/lang/String;[Lnet/minecraft/data/models/model/TextureSlot;)Lnet/minecraft/data/models/model/ModelTemplate; a
	create (Ljava/lang/String;[Lnet/minecraft/data/models/model/TextureSlot;)Lnet/minecraft/data/models/model/ModelTemplate; a
	create ([Lnet/minecraft/data/models/model/TextureSlot;)Lnet/minecraft/data/models/model/ModelTemplate; a
	createItem (Ljava/lang/String;[Lnet/minecraft/data/models/model/TextureSlot;)Lnet/minecraft/data/models/model/ModelTemplate; b
net/minecraft/data/models/model/TextureMapping lh
	forcedSlots b
	slots a
	attachedStem (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/data/models/model/TextureMapping; a
	campfire (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/data/models/model/TextureMapping; E
	candleCake (Lnet/minecraft/world/level/block/Block;Z)Lnet/minecraft/data/models/model/TextureMapping; a
	cauldron (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/data/models/model/TextureMapping; j
	column (Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/data/models/model/TextureMapping; a
	column (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/data/models/model/TextureMapping; k
	columnWithWall (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/data/models/model/TextureMapping; s
	commandBlock (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/data/models/model/TextureMapping; z
	copyAndUpdate (Lnet/minecraft/data/models/model/TextureSlot;Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/data/models/model/TextureMapping; c
	copyForced (Lnet/minecraft/data/models/model/TextureSlot;Lnet/minecraft/data/models/model/TextureSlot;)Lnet/minecraft/data/models/model/TextureMapping; b
	copySlot (Lnet/minecraft/data/models/model/TextureSlot;Lnet/minecraft/data/models/model/TextureSlot;)Lnet/minecraft/data/models/model/TextureMapping; a
	craftingTable (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/data/models/model/TextureMapping; c
	crop (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/data/models/model/TextureMapping; g
	cross (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/data/models/model/TextureMapping; c
	cross (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/data/models/model/TextureMapping; c
	cube (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/data/models/model/TextureMapping; b
	cube (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/data/models/model/TextureMapping; a
	cubeBottomTop (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/data/models/model/TextureMapping; q
	cubeBottomTopWithWall (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/data/models/model/TextureMapping; r
	cubeTop (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/data/models/model/TextureMapping; l
	customParticle (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/data/models/model/TextureMapping; p
	defaultTexture (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/data/models/model/TextureMapping; a
	defaultTexture (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/data/models/model/TextureMapping; b
	door (Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/data/models/model/TextureMapping; b
	door (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/data/models/model/TextureMapping; t
	fan (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/data/models/model/TextureMapping; j
	fence (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/data/models/model/TextureMapping; o
	fire0 (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/data/models/model/TextureMapping; v
	fire1 (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/data/models/model/TextureMapping; w
	fletchingTable (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/data/models/model/TextureMapping; d
	flowerbed (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/data/models/model/TextureMapping; g
	get (Lnet/minecraft/data/models/model/TextureSlot;)Lnet/minecraft/resources/ResourceLocation; a
	getBlockTexture (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/resources/ResourceLocation; G
	getBlockTexture (Lnet/minecraft/world/level/block/Block;Ljava/lang/String;)Lnet/minecraft/resources/ResourceLocation; a
	getForced ()Ljava/util/stream/Stream; a
	getItemTexture (Lnet/minecraft/world/item/Item;)Lnet/minecraft/resources/ResourceLocation; c
	getItemTexture (Lnet/minecraft/world/item/Item;Ljava/lang/String;)Lnet/minecraft/resources/ResourceLocation; a
	lantern (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/data/models/model/TextureMapping; x
	layer0 (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/data/models/model/TextureMapping; k
	layer0 (Lnet/minecraft/world/item/Item;)Lnet/minecraft/data/models/model/TextureMapping; b
	layer0 (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/data/models/model/TextureMapping; F
	layered (Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/data/models/model/TextureMapping; c
	layered (Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/data/models/model/TextureMapping; a
	logColumn (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/data/models/model/TextureMapping; n
	orientableCube (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/data/models/model/TextureMapping; A
	orientableCubeOnlyTop (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/data/models/model/TextureMapping; B
	orientableCubeSameEnds (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/data/models/model/TextureMapping; C
	pane (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/data/models/model/TextureMapping; b
	particle (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/data/models/model/TextureMapping; h
	particle (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/data/models/model/TextureMapping; u
	particleFromItem (Lnet/minecraft/world/item/Item;)Lnet/minecraft/data/models/model/TextureMapping; a
	pattern (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/data/models/model/TextureMapping; i
	plant (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/data/models/model/TextureMapping; d
	plant (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/data/models/model/TextureMapping; d
	pottedAzalea (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/data/models/model/TextureMapping; m
	put (Lnet/minecraft/data/models/model/TextureSlot;Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/data/models/model/TextureMapping; a
	putForced (Lnet/minecraft/data/models/model/TextureSlot;Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/data/models/model/TextureMapping; b
	rail (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/data/models/model/TextureMapping; e
	rail (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/data/models/model/TextureMapping; e
	sculkShrieker (Z)Lnet/minecraft/data/models/model/TextureMapping; a
	singleSlot (Lnet/minecraft/data/models/model/TextureSlot;Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/data/models/model/TextureMapping; d
	snifferEgg (Ljava/lang/String;)Lnet/minecraft/data/models/model/TextureMapping; a
	stem (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/data/models/model/TextureMapping; h
	top (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/data/models/model/TextureMapping; D
	torch (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/data/models/model/TextureMapping; i
	torch (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/data/models/model/TextureMapping; y
	wool (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/data/models/model/TextureMapping; f
	wool (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/data/models/model/TextureMapping; f
net/minecraft/data/models/model/TextureSlot li
	ALL a
	BACK h
	BOTTOM e
	CANDLE L
	CONTENT N
	CROP A
	CROSS p
	DIRT B
	DOWN o
	EAST l
	EDGE w
	END d
	FAN x
	FIRE C
	FLOWERBED P
	FRONT g
	INNER_TOP O
	INSIDE M
	LANTERN D
	LAYER0 H
	LAYER1 I
	LAYER2 J
	LIT_LOG K
	NORTH j
	PANE v
	PARTICLE c
	PATTERN u
	PLANT q
	PLATFORM E
	RAIL s
	SIDE i
	SOUTH k
	STEM y
	TEXTURE b
	TOP f
	TORCH G
	UNSTICKY F
	UP n
	UPPER_STEM z
	WALL r
	WEST m
	WOOL t
	id Q
	parent R
	create (Ljava/lang/String;)Lnet/minecraft/data/models/model/TextureSlot; a
	create (Ljava/lang/String;Lnet/minecraft/data/models/model/TextureSlot;)Lnet/minecraft/data/models/model/TextureSlot; a
	getId ()Ljava/lang/String; a
	getParent ()Lnet/minecraft/data/models/model/TextureSlot; b
net/minecraft/data/models/model/TexturedModel lj
	ANVIL q
	CARPET i
	COLUMN c
	COLUMN_ALT v
	COLUMN_HORIZONTAL d
	COLUMN_HORIZONTAL_ALT w
	COLUMN_WITH_WALL y
	CORAL_FAN o
	CUBE a
	CUBE_MIRRORED b
	CUBE_TOP f
	CUBE_TOP_BOTTOM e
	FLOWERBED_1 j
	FLOWERBED_2 k
	FLOWERBED_3 l
	FLOWERBED_4 m
	GLAZED_TERRACOTTA n
	HANGING_LANTERN t
	LANTERN s
	LEAVES r
	ORIENTABLE h
	ORIENTABLE_ONLY_TOP g
	PARTICLE_ONLY p
	SEAGRASS u
	TOP_BOTTOM_WITH_WALL x
	mapping z
	template A
	create (Lnet/minecraft/world/level/block/Block;Ljava/util/function/BiConsumer;)Lnet/minecraft/resources/ResourceLocation; a
	createAllSame (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/data/models/model/TexturedModel; a
	createDefault (Ljava/util/function/Function;Lnet/minecraft/data/models/model/ModelTemplate;)Lnet/minecraft/data/models/model/TexturedModel$Provider; a
	createWithSuffix (Lnet/minecraft/world/level/block/Block;Ljava/lang/String;Ljava/util/function/BiConsumer;)Lnet/minecraft/resources/ResourceLocation; a
	getMapping ()Lnet/minecraft/data/models/model/TextureMapping; b
	getTemplate ()Lnet/minecraft/data/models/model/ModelTemplate; a
	updateTextures (Ljava/util/function/Consumer;)Lnet/minecraft/data/models/model/TexturedModel; a
net/minecraft/data/models/model/TexturedModel$Provider lj$a
net/minecraft/data/recipes/CraftingRecipeBuilder ln
	determineBookCategory (Lnet/minecraft/data/recipes/RecipeCategory;)Lnet/minecraft/world/item/crafting/CraftingBookCategory; a
net/minecraft/data/recipes/CraftingRecipeBuilder$CraftingResult ln$a
	category a
	serializeRecipeData (Lcom/google/gson/JsonObject;)V a
net/minecraft/data/recipes/FinishedRecipe lo
	getAdvancementId ()Lnet/minecraft/resources/ResourceLocation; e
	getId ()Lnet/minecraft/resources/ResourceLocation; b
	getType ()Lnet/minecraft/world/item/crafting/RecipeSerializer; c
	serializeAdvancement ()Lcom/google/gson/JsonObject; d
	serializeRecipe ()Lcom/google/gson/JsonObject; a
	serializeRecipeData (Lcom/google/gson/JsonObject;)V a
net/minecraft/data/recipes/RecipeBuilder lp
	ROOT_RECIPE_ADVANCEMENT a
	getDefaultRecipeId (Lnet/minecraft/world/level/ItemLike;)Lnet/minecraft/resources/ResourceLocation; a
	getResult ()Lnet/minecraft/world/item/Item; a
	group (Ljava/lang/String;)Lnet/minecraft/data/recipes/RecipeBuilder; a
	save (Ljava/util/function/Consumer;)V a
	save (Ljava/util/function/Consumer;Ljava/lang/String;)V a
	save (Ljava/util/function/Consumer;Lnet/minecraft/resources/ResourceLocation;)V a
	unlockedBy (Ljava/lang/String;Lnet/minecraft/advancements/CriterionTriggerInstance;)Lnet/minecraft/data/recipes/RecipeBuilder; a
net/minecraft/data/recipes/RecipeCategory lq
	$VALUES k
	BREWING h
	BUILDING_BLOCKS a
	COMBAT f
	DECORATIONS b
	FOOD g
	MISC i
	REDSTONE c
	TOOLS e
	TRANSPORTATION d
	recipeFolderName j
	$values ()[Lnet/minecraft/data/recipes/RecipeCategory; b
	getFolderName ()Ljava/lang/String; a
net/minecraft/data/recipes/RecipeProvider lr
	SHAPE_BUILDERS f
	advancementPathProvider e
	recipePathProvider d
	banner (Ljava/util/function/Consumer;Lnet/minecraft/world/level/ItemLike;Lnet/minecraft/world/level/ItemLike;)V h
	bedFromPlanksAndWool (Ljava/util/function/Consumer;Lnet/minecraft/world/level/ItemLike;Lnet/minecraft/world/level/ItemLike;)V g
	buildAdvancement (Lnet/minecraft/data/CachedOutput;Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/advancements/Advancement$Builder;)Ljava/util/concurrent/CompletableFuture; a
	buildRecipes (Ljava/util/function/Consumer;)V a
	buttonBuilder (Lnet/minecraft/world/level/ItemLike;Lnet/minecraft/world/item/crafting/Ingredient;)Lnet/minecraft/data/recipes/RecipeBuilder; c
	candle (Ljava/util/function/Consumer;Lnet/minecraft/world/level/ItemLike;Lnet/minecraft/world/level/ItemLike;)V n
	carpet (Ljava/util/function/Consumer;Lnet/minecraft/world/level/ItemLike;Lnet/minecraft/world/level/ItemLike;)V f
	chestBoat (Ljava/util/function/Consumer;Lnet/minecraft/world/level/ItemLike;Lnet/minecraft/world/level/ItemLike;)V c
	chiseled (Ljava/util/function/Consumer;Lnet/minecraft/data/recipes/RecipeCategory;Lnet/minecraft/world/level/ItemLike;Lnet/minecraft/world/level/ItemLike;)V g
	chiseledBuilder (Lnet/minecraft/data/recipes/RecipeCategory;Lnet/minecraft/world/level/ItemLike;Lnet/minecraft/world/item/crafting/Ingredient;)Lnet/minecraft/data/recipes/ShapedRecipeBuilder; b
	colorBlockWithDye (Ljava/util/function/Consumer;Ljava/util/List;Ljava/util/List;Ljava/lang/String;)V a
	coloredTerracottaFromTerracottaAndDye (Ljava/util/function/Consumer;Lnet/minecraft/world/level/ItemLike;Lnet/minecraft/world/level/ItemLike;)V l
	concretePowder (Ljava/util/function/Consumer;Lnet/minecraft/world/level/ItemLike;Lnet/minecraft/world/level/ItemLike;)V m
	cookRecipes (Ljava/util/function/Consumer;Ljava/lang/String;Lnet/minecraft/world/item/crafting/RecipeSerializer;I)V a
	copySmithingTemplate (Ljava/util/function/Consumer;Lnet/minecraft/world/level/ItemLike;Lnet/minecraft/tags/TagKey;)V a
	copySmithingTemplate (Ljava/util/function/Consumer;Lnet/minecraft/world/level/ItemLike;Lnet/minecraft/world/level/ItemLike;)V o
	cut (Ljava/util/function/Consumer;Lnet/minecraft/data/recipes/RecipeCategory;Lnet/minecraft/world/level/ItemLike;Lnet/minecraft/world/level/ItemLike;)V f
	cutBuilder (Lnet/minecraft/data/recipes/RecipeCategory;Lnet/minecraft/world/level/ItemLike;Lnet/minecraft/world/item/crafting/Ingredient;)Lnet/minecraft/data/recipes/ShapedRecipeBuilder; f
	doorBuilder (Lnet/minecraft/world/level/ItemLike;Lnet/minecraft/world/item/crafting/Ingredient;)Lnet/minecraft/data/recipes/RecipeBuilder; a
	fenceBuilder (Lnet/minecraft/world/level/ItemLike;Lnet/minecraft/world/item/crafting/Ingredient;)Lnet/minecraft/data/recipes/RecipeBuilder; d
	fenceGateBuilder (Lnet/minecraft/world/level/ItemLike;Lnet/minecraft/world/item/crafting/Ingredient;)Lnet/minecraft/data/recipes/RecipeBuilder; e
	generateForEnabledBlockFamilies (Ljava/util/function/Consumer;Lnet/minecraft/world/flag/FeatureFlagSet;)V a
	generateRecipes (Ljava/util/function/Consumer;Lnet/minecraft/data/BlockFamily;)V a
	getBaseBlock (Lnet/minecraft/data/BlockFamily;Lnet/minecraft/data/BlockFamily$Variant;)Lnet/minecraft/world/level/block/Block; a
	getBlastingRecipeName (Lnet/minecraft/world/level/ItemLike;)Ljava/lang/String; f
	getConversionRecipeName (Lnet/minecraft/world/level/ItemLike;Lnet/minecraft/world/level/ItemLike;)Ljava/lang/String; a
	getHasName (Lnet/minecraft/world/level/ItemLike;)Ljava/lang/String; b
	getItemName (Lnet/minecraft/world/level/ItemLike;)Ljava/lang/String; c
	getName ()Ljava/lang/String; a
	getSimpleRecipeName (Lnet/minecraft/world/level/ItemLike;)Ljava/lang/String; d
	getSmeltingRecipeName (Lnet/minecraft/world/level/ItemLike;)Ljava/lang/String; e
	hangingSign (Ljava/util/function/Consumer;Lnet/minecraft/world/level/ItemLike;Lnet/minecraft/world/level/ItemLike;)V e
	has (Lnet/minecraft/advancements/critereon/MinMaxBounds$Ints;Lnet/minecraft/world/level/ItemLike;)Lnet/minecraft/advancements/critereon/InventoryChangeTrigger$TriggerInstance; a
	has (Lnet/minecraft/tags/TagKey;)Lnet/minecraft/advancements/critereon/InventoryChangeTrigger$TriggerInstance; a
	has (Lnet/minecraft/world/level/ItemLike;)Lnet/minecraft/advancements/critereon/InventoryChangeTrigger$TriggerInstance; a
	insideOf (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/advancements/critereon/EnterBlockTrigger$TriggerInstance; a
	inventoryTrigger ([Lnet/minecraft/advancements/critereon/ItemPredicate;)Lnet/minecraft/advancements/critereon/InventoryChangeTrigger$TriggerInstance; a
	mosaicBuilder (Ljava/util/function/Consumer;Lnet/minecraft/data/recipes/RecipeCategory;Lnet/minecraft/world/level/ItemLike;Lnet/minecraft/world/level/ItemLike;)V h
	netheriteSmithing (Ljava/util/function/Consumer;Lnet/minecraft/world/item/Item;Lnet/minecraft/data/recipes/RecipeCategory;Lnet/minecraft/world/item/Item;)V a
	nineBlockStorageRecipes (Ljava/util/function/Consumer;Lnet/minecraft/data/recipes/RecipeCategory;Lnet/minecraft/world/level/ItemLike;Lnet/minecraft/data/recipes/RecipeCategory;Lnet/minecraft/world/level/ItemLike;)V a
	nineBlockStorageRecipes (Ljava/util/function/Consumer;Lnet/minecraft/data/recipes/RecipeCategory;Lnet/minecraft/world/level/ItemLike;Lnet/minecraft/data/recipes/RecipeCategory;Lnet/minecraft/world/level/ItemLike;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V a
	nineBlockStorageRecipesRecipesWithCustomUnpacking (Ljava/util/function/Consumer;Lnet/minecraft/data/recipes/RecipeCategory;Lnet/minecraft/world/level/ItemLike;Lnet/minecraft/data/recipes/RecipeCategory;Lnet/minecraft/world/level/ItemLike;Ljava/lang/String;Ljava/lang/String;)V b
	nineBlockStorageRecipesWithCustomPacking (Ljava/util/function/Consumer;Lnet/minecraft/data/recipes/RecipeCategory;Lnet/minecraft/world/level/ItemLike;Lnet/minecraft/data/recipes/RecipeCategory;Lnet/minecraft/world/level/ItemLike;Ljava/lang/String;Ljava/lang/String;)V a
	oneToOneConversionRecipe (Ljava/util/function/Consumer;Lnet/minecraft/world/level/ItemLike;Lnet/minecraft/world/level/ItemLike;Ljava/lang/String;)V a
	oneToOneConversionRecipe (Ljava/util/function/Consumer;Lnet/minecraft/world/level/ItemLike;Lnet/minecraft/world/level/ItemLike;Ljava/lang/String;I)V a
	oreBlasting (Ljava/util/function/Consumer;Ljava/util/List;Lnet/minecraft/data/recipes/RecipeCategory;Lnet/minecraft/world/level/ItemLike;FILjava/lang/String;)V b
	oreCooking (Ljava/util/function/Consumer;Lnet/minecraft/world/item/crafting/RecipeSerializer;Ljava/util/List;Lnet/minecraft/data/recipes/RecipeCategory;Lnet/minecraft/world/level/ItemLike;FILjava/lang/String;Ljava/lang/String;)V a
	oreSmelting (Ljava/util/function/Consumer;Ljava/util/List;Lnet/minecraft/data/recipes/RecipeCategory;Lnet/minecraft/world/level/ItemLike;FILjava/lang/String;)V a
	planksFromLog (Ljava/util/function/Consumer;Lnet/minecraft/world/level/ItemLike;Lnet/minecraft/tags/TagKey;I)V a
	planksFromLogs (Ljava/util/function/Consumer;Lnet/minecraft/world/level/ItemLike;Lnet/minecraft/tags/TagKey;I)V b
	polished (Ljava/util/function/Consumer;Lnet/minecraft/data/recipes/RecipeCategory;Lnet/minecraft/world/level/ItemLike;Lnet/minecraft/world/level/ItemLike;)V e
	polishedBuilder (Lnet/minecraft/data/recipes/RecipeCategory;Lnet/minecraft/world/level/ItemLike;Lnet/minecraft/world/item/crafting/Ingredient;)Lnet/minecraft/data/recipes/RecipeBuilder; e
	pressurePlate (Ljava/util/function/Consumer;Lnet/minecraft/world/level/ItemLike;Lnet/minecraft/world/level/ItemLike;)V d
	pressurePlateBuilder (Lnet/minecraft/data/recipes/RecipeCategory;Lnet/minecraft/world/level/ItemLike;Lnet/minecraft/world/item/crafting/Ingredient;)Lnet/minecraft/data/recipes/RecipeBuilder; c
	run (Lnet/minecraft/data/CachedOutput;)Ljava/util/concurrent/CompletableFuture; a
	signBuilder (Lnet/minecraft/world/level/ItemLike;Lnet/minecraft/world/item/crafting/Ingredient;)Lnet/minecraft/data/recipes/RecipeBuilder; g
	simpleCookingRecipe (Ljava/util/function/Consumer;Ljava/lang/String;Lnet/minecraft/world/item/crafting/RecipeSerializer;ILnet/minecraft/world/level/ItemLike;Lnet/minecraft/world/level/ItemLike;F)V a
	slab (Ljava/util/function/Consumer;Lnet/minecraft/data/recipes/RecipeCategory;Lnet/minecraft/world/level/ItemLike;Lnet/minecraft/world/level/ItemLike;)V c
	slabBuilder (Lnet/minecraft/data/recipes/RecipeCategory;Lnet/minecraft/world/level/ItemLike;Lnet/minecraft/world/item/crafting/Ingredient;)Lnet/minecraft/data/recipes/RecipeBuilder; a
	smeltingResultFromBase (Ljava/util/function/Consumer;Lnet/minecraft/world/level/ItemLike;Lnet/minecraft/world/level/ItemLike;)V p
	stainedGlassFromGlassAndDye (Ljava/util/function/Consumer;Lnet/minecraft/world/level/ItemLike;Lnet/minecraft/world/level/ItemLike;)V i
	stainedGlassPaneFromGlassPaneAndDye (Ljava/util/function/Consumer;Lnet/minecraft/world/level/ItemLike;Lnet/minecraft/world/level/ItemLike;)V k
	stainedGlassPaneFromStainedGlass (Ljava/util/function/Consumer;Lnet/minecraft/world/level/ItemLike;Lnet/minecraft/world/level/ItemLike;)V j
	stairBuilder (Lnet/minecraft/world/level/ItemLike;Lnet/minecraft/world/item/crafting/Ingredient;)Lnet/minecraft/data/recipes/RecipeBuilder; b
	stonecutterResultFromBase (Ljava/util/function/Consumer;Lnet/minecraft/data/recipes/RecipeCategory;Lnet/minecraft/world/level/ItemLike;Lnet/minecraft/world/level/ItemLike;)V i
	stonecutterResultFromBase (Ljava/util/function/Consumer;Lnet/minecraft/data/recipes/RecipeCategory;Lnet/minecraft/world/level/ItemLike;Lnet/minecraft/world/level/ItemLike;I)V a
	threeByThreePacker (Ljava/util/function/Consumer;Lnet/minecraft/data/recipes/RecipeCategory;Lnet/minecraft/world/level/ItemLike;Lnet/minecraft/world/level/ItemLike;)V b
	threeByThreePacker (Ljava/util/function/Consumer;Lnet/minecraft/data/recipes/RecipeCategory;Lnet/minecraft/world/level/ItemLike;Lnet/minecraft/world/level/ItemLike;Ljava/lang/String;)V a
	trapdoorBuilder (Lnet/minecraft/world/level/ItemLike;Lnet/minecraft/world/item/crafting/Ingredient;)Lnet/minecraft/data/recipes/RecipeBuilder; f
	trimSmithing (Ljava/util/function/Consumer;Lnet/minecraft/world/item/Item;Lnet/minecraft/resources/ResourceLocation;)V a
	twoByTwoPacker (Ljava/util/function/Consumer;Lnet/minecraft/data/recipes/RecipeCategory;Lnet/minecraft/world/level/ItemLike;Lnet/minecraft/world/level/ItemLike;)V a
	wall (Ljava/util/function/Consumer;Lnet/minecraft/data/recipes/RecipeCategory;Lnet/minecraft/world/level/ItemLike;Lnet/minecraft/world/level/ItemLike;)V d
	wallBuilder (Lnet/minecraft/data/recipes/RecipeCategory;Lnet/minecraft/world/level/ItemLike;Lnet/minecraft/world/item/crafting/Ingredient;)Lnet/minecraft/data/recipes/RecipeBuilder; d
	waxRecipes (Ljava/util/function/Consumer;)V b
	woodFromLogs (Ljava/util/function/Consumer;Lnet/minecraft/world/level/ItemLike;Lnet/minecraft/world/level/ItemLike;)V a
	woodenBoat (Ljava/util/function/Consumer;Lnet/minecraft/world/level/ItemLike;Lnet/minecraft/world/level/ItemLike;)V b
net/minecraft/data/recipes/ShapedRecipeBuilder ls
	advancement g
	category b
	count d
	group h
	key f
	result c
	rows e
	showNotification i
	define (Ljava/lang/Character;Lnet/minecraft/tags/TagKey;)Lnet/minecraft/data/recipes/ShapedRecipeBuilder; a
	define (Ljava/lang/Character;Lnet/minecraft/world/item/crafting/Ingredient;)Lnet/minecraft/data/recipes/ShapedRecipeBuilder; a
	define (Ljava/lang/Character;Lnet/minecraft/world/level/ItemLike;)Lnet/minecraft/data/recipes/ShapedRecipeBuilder; a
	ensureValid (Lnet/minecraft/resources/ResourceLocation;)V a
	getResult ()Lnet/minecraft/world/item/Item; a
	group (Ljava/lang/String;)Lnet/minecraft/data/recipes/RecipeBuilder; a
	group (Ljava/lang/String;)Lnet/minecraft/data/recipes/ShapedRecipeBuilder; c
	pattern (Ljava/lang/String;)Lnet/minecraft/data/recipes/ShapedRecipeBuilder; b
	save (Ljava/util/function/Consumer;Lnet/minecraft/resources/ResourceLocation;)V a
	shaped (Lnet/minecraft/data/recipes/RecipeCategory;Lnet/minecraft/world/level/ItemLike;)Lnet/minecraft/data/recipes/ShapedRecipeBuilder; a
	shaped (Lnet/minecraft/data/recipes/RecipeCategory;Lnet/minecraft/world/level/ItemLike;I)Lnet/minecraft/data/recipes/ShapedRecipeBuilder; a
	showNotification (Z)Lnet/minecraft/data/recipes/ShapedRecipeBuilder; a
	unlockedBy (Ljava/lang/String;Lnet/minecraft/advancements/CriterionTriggerInstance;)Lnet/minecraft/data/recipes/RecipeBuilder; a
	unlockedBy (Ljava/lang/String;Lnet/minecraft/advancements/CriterionTriggerInstance;)Lnet/minecraft/data/recipes/ShapedRecipeBuilder; b
net/minecraft/data/recipes/ShapedRecipeBuilder$Result ls$a
	advancement g
	advancementId h
	count c
	group d
	id a
	key f
	pattern e
	result b
	showNotification i
	getAdvancementId ()Lnet/minecraft/resources/ResourceLocation; e
	getId ()Lnet/minecraft/resources/ResourceLocation; b
	getType ()Lnet/minecraft/world/item/crafting/RecipeSerializer; c
	serializeAdvancement ()Lcom/google/gson/JsonObject; d
	serializeRecipeData (Lcom/google/gson/JsonObject;)V a
net/minecraft/data/recipes/ShapelessRecipeBuilder lt
	advancement f
	category b
	count d
	group g
	ingredients e
	result c
	ensureValid (Lnet/minecraft/resources/ResourceLocation;)V a
	getResult ()Lnet/minecraft/world/item/Item; a
	group (Ljava/lang/String;)Lnet/minecraft/data/recipes/RecipeBuilder; a
	group (Ljava/lang/String;)Lnet/minecraft/data/recipes/ShapelessRecipeBuilder; b
	requires (Lnet/minecraft/tags/TagKey;)Lnet/minecraft/data/recipes/ShapelessRecipeBuilder; a
	requires (Lnet/minecraft/world/item/crafting/Ingredient;)Lnet/minecraft/data/recipes/ShapelessRecipeBuilder; a
	requires (Lnet/minecraft/world/item/crafting/Ingredient;I)Lnet/minecraft/data/recipes/ShapelessRecipeBuilder; a
	requires (Lnet/minecraft/world/level/ItemLike;)Lnet/minecraft/data/recipes/ShapelessRecipeBuilder; b
	requires (Lnet/minecraft/world/level/ItemLike;I)Lnet/minecraft/data/recipes/ShapelessRecipeBuilder; a
	save (Ljava/util/function/Consumer;Lnet/minecraft/resources/ResourceLocation;)V a
	shapeless (Lnet/minecraft/data/recipes/RecipeCategory;Lnet/minecraft/world/level/ItemLike;)Lnet/minecraft/data/recipes/ShapelessRecipeBuilder; a
	shapeless (Lnet/minecraft/data/recipes/RecipeCategory;Lnet/minecraft/world/level/ItemLike;I)Lnet/minecraft/data/recipes/ShapelessRecipeBuilder; a
	unlockedBy (Ljava/lang/String;Lnet/minecraft/advancements/CriterionTriggerInstance;)Lnet/minecraft/data/recipes/RecipeBuilder; a
	unlockedBy (Ljava/lang/String;Lnet/minecraft/advancements/CriterionTriggerInstance;)Lnet/minecraft/data/recipes/ShapelessRecipeBuilder; b
net/minecraft/data/recipes/ShapelessRecipeBuilder$Result lt$a
	advancement f
	advancementId g
	count c
	group d
	id a
	ingredients e
	result b
	getAdvancementId ()Lnet/minecraft/resources/ResourceLocation; e
	getId ()Lnet/minecraft/resources/ResourceLocation; b
	getType ()Lnet/minecraft/world/item/crafting/RecipeSerializer; c
	serializeAdvancement ()Lcom/google/gson/JsonObject; d
	serializeRecipeData (Lcom/google/gson/JsonObject;)V a
net/minecraft/data/recipes/SimpleCookingRecipeBuilder lu
	advancement h
	bookCategory c
	category b
	cookingTime g
	experience f
	group i
	ingredient e
	result d
	serializer j
	blasting (Lnet/minecraft/world/item/crafting/Ingredient;Lnet/minecraft/data/recipes/RecipeCategory;Lnet/minecraft/world/level/ItemLike;FI)Lnet/minecraft/data/recipes/SimpleCookingRecipeBuilder; b
	campfireCooking (Lnet/minecraft/world/item/crafting/Ingredient;Lnet/minecraft/data/recipes/RecipeCategory;Lnet/minecraft/world/level/ItemLike;FI)Lnet/minecraft/data/recipes/SimpleCookingRecipeBuilder; a
	determineBlastingRecipeCategory (Lnet/minecraft/world/level/ItemLike;)Lnet/minecraft/world/item/crafting/CookingBookCategory; c
	determineRecipeCategory (Lnet/minecraft/world/item/crafting/RecipeSerializer;Lnet/minecraft/world/level/ItemLike;)Lnet/minecraft/world/item/crafting/CookingBookCategory; a
	determineSmeltingRecipeCategory (Lnet/minecraft/world/level/ItemLike;)Lnet/minecraft/world/item/crafting/CookingBookCategory; b
	ensureValid (Lnet/minecraft/resources/ResourceLocation;)V a
	generic (Lnet/minecraft/world/item/crafting/Ingredient;Lnet/minecraft/data/recipes/RecipeCategory;Lnet/minecraft/world/level/ItemLike;FILnet/minecraft/world/item/crafting/RecipeSerializer;)Lnet/minecraft/data/recipes/SimpleCookingRecipeBuilder; a
	getResult ()Lnet/minecraft/world/item/Item; a
	group (Ljava/lang/String;)Lnet/minecraft/data/recipes/RecipeBuilder; a
	group (Ljava/lang/String;)Lnet/minecraft/data/recipes/SimpleCookingRecipeBuilder; b
	save (Ljava/util/function/Consumer;Lnet/minecraft/resources/ResourceLocation;)V a
	smelting (Lnet/minecraft/world/item/crafting/Ingredient;Lnet/minecraft/data/recipes/RecipeCategory;Lnet/minecraft/world/level/ItemLike;FI)Lnet/minecraft/data/recipes/SimpleCookingRecipeBuilder; c
	smoking (Lnet/minecraft/world/item/crafting/Ingredient;Lnet/minecraft/data/recipes/RecipeCategory;Lnet/minecraft/world/level/ItemLike;FI)Lnet/minecraft/data/recipes/SimpleCookingRecipeBuilder; d
	unlockedBy (Ljava/lang/String;Lnet/minecraft/advancements/CriterionTriggerInstance;)Lnet/minecraft/data/recipes/RecipeBuilder; a
	unlockedBy (Ljava/lang/String;Lnet/minecraft/advancements/CriterionTriggerInstance;)Lnet/minecraft/data/recipes/SimpleCookingRecipeBuilder; b
net/minecraft/data/recipes/SimpleCookingRecipeBuilder$Result lu$a
	advancement h
	advancementId i
	category c
	cookingTime g
	experience f
	group b
	id a
	ingredient d
	result e
	serializer j
	getAdvancementId ()Lnet/minecraft/resources/ResourceLocation; e
	getId ()Lnet/minecraft/resources/ResourceLocation; b
	getType ()Lnet/minecraft/world/item/crafting/RecipeSerializer; c
	serializeAdvancement ()Lcom/google/gson/JsonObject; d
	serializeRecipeData (Lcom/google/gson/JsonObject;)V a
net/minecraft/data/recipes/SingleItemRecipeBuilder lv
	advancement f
	category b
	count e
	group g
	ingredient d
	result c
	type h
	ensureValid (Lnet/minecraft/resources/ResourceLocation;)V a
	getResult ()Lnet/minecraft/world/item/Item; a
	group (Ljava/lang/String;)Lnet/minecraft/data/recipes/RecipeBuilder; a
	group (Ljava/lang/String;)Lnet/minecraft/data/recipes/SingleItemRecipeBuilder; b
	save (Ljava/util/function/Consumer;Lnet/minecraft/resources/ResourceLocation;)V a
	stonecutting (Lnet/minecraft/world/item/crafting/Ingredient;Lnet/minecraft/data/recipes/RecipeCategory;Lnet/minecraft/world/level/ItemLike;)Lnet/minecraft/data/recipes/SingleItemRecipeBuilder; a
	stonecutting (Lnet/minecraft/world/item/crafting/Ingredient;Lnet/minecraft/data/recipes/RecipeCategory;Lnet/minecraft/world/level/ItemLike;I)Lnet/minecraft/data/recipes/SingleItemRecipeBuilder; a
	unlockedBy (Ljava/lang/String;Lnet/minecraft/advancements/CriterionTriggerInstance;)Lnet/minecraft/data/recipes/RecipeBuilder; a
	unlockedBy (Ljava/lang/String;Lnet/minecraft/advancements/CriterionTriggerInstance;)Lnet/minecraft/data/recipes/SingleItemRecipeBuilder; b
net/minecraft/data/recipes/SingleItemRecipeBuilder$Result lv$a
	advancement f
	advancementId g
	count e
	group b
	id a
	ingredient c
	result d
	type h
	getAdvancementId ()Lnet/minecraft/resources/ResourceLocation; e
	getId ()Lnet/minecraft/resources/ResourceLocation; b
	getType ()Lnet/minecraft/world/item/crafting/RecipeSerializer; c
	serializeAdvancement ()Lcom/google/gson/JsonObject; d
	serializeRecipeData (Lcom/google/gson/JsonObject;)V a
net/minecraft/data/recipes/SmithingTransformRecipeBuilder lw
	addition c
	advancement f
	base b
	category d
	result e
	template a
	type g
	ensureValid (Lnet/minecraft/resources/ResourceLocation;)V a
	save (Ljava/util/function/Consumer;Ljava/lang/String;)V a
	save (Ljava/util/function/Consumer;Lnet/minecraft/resources/ResourceLocation;)V a
	smithing (Lnet/minecraft/world/item/crafting/Ingredient;Lnet/minecraft/world/item/crafting/Ingredient;Lnet/minecraft/world/item/crafting/Ingredient;Lnet/minecraft/data/recipes/RecipeCategory;Lnet/minecraft/world/item/Item;)Lnet/minecraft/data/recipes/SmithingTransformRecipeBuilder; a
	unlocks (Ljava/lang/String;Lnet/minecraft/advancements/CriterionTriggerInstance;)Lnet/minecraft/data/recipes/SmithingTransformRecipeBuilder; a
net/minecraft/data/recipes/SmithingTransformRecipeBuilder$Result lw$a
	addition e
	advancement g
	advancementId h
	base d
	id a
	result f
	template c
	type b
	addition ()Lnet/minecraft/world/item/crafting/Ingredient; j
	advancement ()Lnet/minecraft/advancements/Advancement$Builder; l
	advancementId ()Lnet/minecraft/resources/ResourceLocation; m
	base ()Lnet/minecraft/world/item/crafting/Ingredient; i
	getAdvancementId ()Lnet/minecraft/resources/ResourceLocation; e
	getId ()Lnet/minecraft/resources/ResourceLocation; b
	getType ()Lnet/minecraft/world/item/crafting/RecipeSerializer; c
	id ()Lnet/minecraft/resources/ResourceLocation; f
	result ()Lnet/minecraft/world/item/Item; k
	serializeAdvancement ()Lcom/google/gson/JsonObject; d
	serializeRecipeData (Lcom/google/gson/JsonObject;)V a
	template ()Lnet/minecraft/world/item/crafting/Ingredient; h
	type ()Lnet/minecraft/world/item/crafting/RecipeSerializer; g
net/minecraft/data/recipes/SmithingTrimRecipeBuilder lx
	addition d
	advancement e
	base c
	category a
	template b
	type f
	ensureValid (Lnet/minecraft/resources/ResourceLocation;)V a
	save (Ljava/util/function/Consumer;Lnet/minecraft/resources/ResourceLocation;)V a
	smithingTrim (Lnet/minecraft/world/item/crafting/Ingredient;Lnet/minecraft/world/item/crafting/Ingredient;Lnet/minecraft/world/item/crafting/Ingredient;Lnet/minecraft/data/recipes/RecipeCategory;)Lnet/minecraft/data/recipes/SmithingTrimRecipeBuilder; a
	unlocks (Ljava/lang/String;Lnet/minecraft/advancements/CriterionTriggerInstance;)Lnet/minecraft/data/recipes/SmithingTrimRecipeBuilder; a
net/minecraft/data/recipes/SmithingTrimRecipeBuilder$Result lx$a
	addition e
	advancement f
	advancementId g
	base d
	id a
	template c
	type b
	addition ()Lnet/minecraft/world/item/crafting/Ingredient; j
	advancement ()Lnet/minecraft/advancements/Advancement$Builder; k
	advancementId ()Lnet/minecraft/resources/ResourceLocation; l
	base ()Lnet/minecraft/world/item/crafting/Ingredient; i
	getAdvancementId ()Lnet/minecraft/resources/ResourceLocation; e
	getId ()Lnet/minecraft/resources/ResourceLocation; b
	getType ()Lnet/minecraft/world/item/crafting/RecipeSerializer; c
	id ()Lnet/minecraft/resources/ResourceLocation; f
	serializeAdvancement ()Lcom/google/gson/JsonObject; d
	serializeRecipeData (Lcom/google/gson/JsonObject;)V a
	template ()Lnet/minecraft/world/item/crafting/Ingredient; h
	type ()Lnet/minecraft/world/item/crafting/RecipeSerializer; g
net/minecraft/data/recipes/SpecialRecipeBuilder ly
	serializer a
	save (Ljava/util/function/Consumer;Ljava/lang/String;)V a
	special (Lnet/minecraft/world/item/crafting/RecipeSerializer;)Lnet/minecraft/data/recipes/SpecialRecipeBuilder; a
net/minecraft/data/recipes/packs/BundleRecipeProvider ma
	buildRecipes (Ljava/util/function/Consumer;)V a
net/minecraft/data/recipes/packs/VanillaRecipeProvider mb
	COAL_SMELTABLES d
	COPPER_SMELTABLES f
	DIAMOND_SMELTABLES h
	EMERALD_SMELTABLES k
	GOLD_SMELTABLES g
	IRON_SMELTABLES e
	LAPIS_SMELTABLES i
	REDSTONE_SMELTABLES j
	buildRecipes (Ljava/util/function/Consumer;)V a
	run (Lnet/minecraft/data/CachedOutput;)Ljava/util/concurrent/CompletableFuture; a
	smithingTrims ()Ljava/util/Map; b
net/minecraft/data/registries/RegistriesDatapackGenerator md
	LOGGER d
	output e
	registries f
	dumpRegistryCap (Lnet/minecraft/data/CachedOutput;Lnet/minecraft/core/HolderLookup$Provider;Lcom/mojang/serialization/DynamicOps;Lnet/minecraft/resources/RegistryDataLoader$RegistryData;)Ljava/util/Optional; a
	dumpValue (Ljava/nio/file/Path;Lnet/minecraft/data/CachedOutput;Lcom/mojang/serialization/DynamicOps;Lcom/mojang/serialization/Encoder;Ljava/lang/Object;)Ljava/util/concurrent/CompletableFuture; a
	getName ()Ljava/lang/String; a
	run (Lnet/minecraft/data/CachedOutput;)Ljava/util/concurrent/CompletableFuture; a
net/minecraft/data/registries/VanillaRegistries me
	BUILDER a
	createLookup ()Lnet/minecraft/core/HolderLookup$Provider; a
	validatePlacedFeature (Lnet/minecraft/world/level/levelgen/placement/PlacedFeature;)Z a
	validateThatAllBiomeFeaturesHaveBiomeFilter (Lnet/minecraft/core/HolderGetter;Lnet/minecraft/core/HolderLookup;)V a
	validateThatAllBiomeFeaturesHaveBiomeFilter (Lnet/minecraft/core/HolderLookup$Provider;)V a
net/minecraft/data/structures/NbtToSnbt mg
	LOGGER d
	inputFolders e
	output f
	convertStructure (Lnet/minecraft/data/CachedOutput;Ljava/nio/file/Path;Ljava/lang/String;Ljava/nio/file/Path;)Ljava/nio/file/Path; a
	getName ()Ljava/lang/String; a
	getName (Ljava/nio/file/Path;Ljava/nio/file/Path;)Ljava/lang/String; a
	run (Lnet/minecraft/data/CachedOutput;)Ljava/util/concurrent/CompletableFuture; a
	writeSnbt (Lnet/minecraft/data/CachedOutput;Ljava/nio/file/Path;Ljava/lang/String;)V a
net/minecraft/data/structures/SnbtToNbt mh
	DUMP_SNBT_TO d
	LOGGER e
	filters h
	inputFolders g
	output f
	addFilter (Lnet/minecraft/data/structures/SnbtToNbt$Filter;)Lnet/minecraft/data/structures/SnbtToNbt; a
	applyFilters (Ljava/lang/String;Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/nbt/CompoundTag; a
	getName ()Ljava/lang/String; a
	getName (Ljava/nio/file/Path;Ljava/nio/file/Path;)Ljava/lang/String; a
	readStructure (Ljava/nio/file/Path;Ljava/lang/String;)Lnet/minecraft/data/structures/SnbtToNbt$TaskResult; a
	run (Lnet/minecraft/data/CachedOutput;)Ljava/util/concurrent/CompletableFuture; a
	storeStructureIfChanged (Lnet/minecraft/data/CachedOutput;Lnet/minecraft/data/structures/SnbtToNbt$TaskResult;Ljava/nio/file/Path;)V a
net/minecraft/data/structures/SnbtToNbt$Filter mh$a
net/minecraft/data/structures/SnbtToNbt$StructureConversionException mh$b
net/minecraft/data/structures/SnbtToNbt$TaskResult mh$c
	hash d
	name a
	payload b
	snbtPayload c
	hash ()Lcom/google/common/hash/HashCode; d
	name ()Ljava/lang/String; a
	payload ()[B b
	snbtPayload ()Ljava/lang/String; c
net/minecraft/data/structures/StructureUpdater mi
	LOGGER a
	update (Ljava/lang/String;Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/nbt/CompoundTag; a
net/minecraft/data/tags/BannerPatternTagsProvider mk
	addTags (Lnet/minecraft/core/HolderLookup$Provider;)V a
net/minecraft/data/tags/BiomeTagsProvider ml
	addTags (Lnet/minecraft/core/HolderLookup$Provider;)V a
net/minecraft/data/tags/CatVariantTagsProvider mm
	addTags (Lnet/minecraft/core/HolderLookup$Provider;)V a
net/minecraft/data/tags/DamageTypeTagsProvider mn
	addTags (Lnet/minecraft/core/HolderLookup$Provider;)V a
net/minecraft/data/tags/EntityTypeTagsProvider mo
	addTags (Lnet/minecraft/core/HolderLookup$Provider;)V a
net/minecraft/data/tags/FlatLevelGeneratorPresetTagsProvider mp
	addTags (Lnet/minecraft/core/HolderLookup$Provider;)V a
net/minecraft/data/tags/FluidTagsProvider mq
	addTags (Lnet/minecraft/core/HolderLookup$Provider;)V a
net/minecraft/data/tags/GameEventTagsProvider mr
	VIBRATIONS_EXCEPT_FLAP d
	addTags (Lnet/minecraft/core/HolderLookup$Provider;)V a
net/minecraft/data/tags/InstrumentTagsProvider ms
	addTags (Lnet/minecraft/core/HolderLookup$Provider;)V a
net/minecraft/data/tags/IntrinsicHolderTagsProvider mt
	keyExtractor d
	tag (Lnet/minecraft/tags/TagKey;)Lnet/minecraft/data/tags/IntrinsicHolderTagsProvider$IntrinsicTagAppender; a
	tag (Lnet/minecraft/tags/TagKey;)Lnet/minecraft/data/tags/TagsProvider$TagAppender; b
net/minecraft/data/tags/IntrinsicHolderTagsProvider$IntrinsicTagAppender mt$a
	keyExtractor a
	add (Ljava/lang/Object;)Lnet/minecraft/data/tags/IntrinsicHolderTagsProvider$IntrinsicTagAppender; a
	add ([Ljava/lang/Object;)Lnet/minecraft/data/tags/IntrinsicHolderTagsProvider$IntrinsicTagAppender; a
	addTag (Lnet/minecraft/tags/TagKey;)Lnet/minecraft/data/tags/IntrinsicHolderTagsProvider$IntrinsicTagAppender; a
	addTag (Lnet/minecraft/tags/TagKey;)Lnet/minecraft/data/tags/TagsProvider$TagAppender; b
net/minecraft/data/tags/ItemTagsProvider mu
	blockTags d
	tagsToCopy g
	copy (Lnet/minecraft/tags/TagKey;Lnet/minecraft/tags/TagKey;)V a
	createContentsProvider ()Ljava/util/concurrent/CompletableFuture; b
net/minecraft/data/tags/PaintingVariantTagsProvider mv
	addTags (Lnet/minecraft/core/HolderLookup$Provider;)V a
net/minecraft/data/tags/PoiTypeTagsProvider mw
	addTags (Lnet/minecraft/core/HolderLookup$Provider;)V a
net/minecraft/data/tags/StructureTagsProvider mx
	addTags (Lnet/minecraft/core/HolderLookup$Provider;)V a
net/minecraft/data/tags/TagsProvider my
	LOGGER d
	builders j
	contentsDone h
	lookupProvider g
	parentProvider i
	pathProvider e
	registryKey f
	addTags (Lnet/minecraft/core/HolderLookup$Provider;)V a
	contentsGetter ()Ljava/util/concurrent/CompletableFuture; c
	createContentsProvider ()Ljava/util/concurrent/CompletableFuture; b
	getName ()Ljava/lang/String; a
	getOrCreateRawBuilder (Lnet/minecraft/tags/TagKey;)Lnet/minecraft/tags/TagBuilder; c
	run (Lnet/minecraft/data/CachedOutput;)Ljava/util/concurrent/CompletableFuture; a
	tag (Lnet/minecraft/tags/TagKey;)Lnet/minecraft/data/tags/TagsProvider$TagAppender; b
net/minecraft/data/tags/TagsProvider$TagAppender my$b
	builder a
	add (Lnet/minecraft/resources/ResourceKey;)Lnet/minecraft/data/tags/TagsProvider$TagAppender; a
	add ([Lnet/minecraft/resources/ResourceKey;)Lnet/minecraft/data/tags/TagsProvider$TagAppender; a
	addOptional (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/data/tags/TagsProvider$TagAppender; a
	addOptionalTag (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/data/tags/TagsProvider$TagAppender; b
	addTag (Lnet/minecraft/tags/TagKey;)Lnet/minecraft/data/tags/TagsProvider$TagAppender; b
net/minecraft/data/tags/TagsProvider$TagLookup my$c
net/minecraft/data/tags/VanillaBlockTagsProvider mz
	addTags (Lnet/minecraft/core/HolderLookup$Provider;)V a
net/minecraft/data/tags/VanillaItemTagsProvider na
	addTags (Lnet/minecraft/core/HolderLookup$Provider;)V a
net/minecraft/data/tags/WorldPresetTagsProvider nb
	addTags (Lnet/minecraft/core/HolderLookup$Provider;)V a
net/minecraft/data/worldgen/AncientCityStructurePieces nd
	START a
	bootstrap (Lnet/minecraft/data/worldgen/BootstapContext;)V a
net/minecraft/data/worldgen/AncientCityStructurePools ne
	bootstrap (Lnet/minecraft/data/worldgen/BootstapContext;)V a
net/minecraft/data/worldgen/BastionBridgePools nf
	bootstrap (Lnet/minecraft/data/worldgen/BootstapContext;)V a
net/minecraft/data/worldgen/BastionHoglinStablePools ng
	bootstrap (Lnet/minecraft/data/worldgen/BootstapContext;)V a
net/minecraft/data/worldgen/BastionHousingUnitsPools nh
	bootstrap (Lnet/minecraft/data/worldgen/BootstapContext;)V a
net/minecraft/data/worldgen/BastionPieces ni
	START a
	bootstrap (Lnet/minecraft/data/worldgen/BootstapContext;)V a
net/minecraft/data/worldgen/BastionSharedPools nj
	bootstrap (Lnet/minecraft/data/worldgen/BootstapContext;)V a
net/minecraft/data/worldgen/BastionTreasureRoomPools nk
	bootstrap (Lnet/minecraft/data/worldgen/BootstapContext;)V a
net/minecraft/data/worldgen/BiomeDefaultFeatures nl
	addAncientDebris (Lnet/minecraft/world/level/biome/BiomeGenerationSettings$Builder;)V av
	addBadlandExtraVegetation (Lnet/minecraft/world/level/biome/BiomeGenerationSettings$Builder;)V ae
	addBadlandGrass (Lnet/minecraft/world/level/biome/BiomeGenerationSettings$Builder;)V M
	addBadlandsTrees (Lnet/minecraft/world/level/biome/BiomeGenerationSettings$Builder;)V G
	addBambooVegetation (Lnet/minecraft/world/level/biome/BiomeGenerationSettings$Builder;)V r
	addBirchTrees (Lnet/minecraft/world/level/biome/BiomeGenerationSettings$Builder;)V v
	addBlueIce (Lnet/minecraft/world/level/biome/BiomeGenerationSettings$Builder;)V as
	addCherryGroveVegetation (Lnet/minecraft/world/level/biome/BiomeGenerationSettings$Builder;)V W
	addColdOceanExtraVegetation (Lnet/minecraft/world/level/biome/BiomeGenerationSettings$Builder;)V am
	addCommonBerryBushes (Lnet/minecraft/world/level/biome/BiomeGenerationSettings$Builder;)V p
	addDefaultCarversAndLakes (Lnet/minecraft/world/level/biome/BiomeGenerationSettings$Builder;)V a
	addDefaultCrystalFormations (Lnet/minecraft/world/level/biome/BiomeGenerationSettings$Builder;)V aw
	addDefaultExtraVegetation (Lnet/minecraft/world/level/biome/BiomeGenerationSettings$Builder;)V ad
	addDefaultFlowers (Lnet/minecraft/world/level/biome/BiomeGenerationSettings$Builder;)V V
	addDefaultGrass (Lnet/minecraft/world/level/biome/BiomeGenerationSettings$Builder;)V Z
	addDefaultMonsterRoom (Lnet/minecraft/world/level/biome/BiomeGenerationSettings$Builder;)V b
	addDefaultMushrooms (Lnet/minecraft/world/level/biome/BiomeGenerationSettings$Builder;)V ac
	addDefaultOres (Lnet/minecraft/world/level/biome/BiomeGenerationSettings$Builder;)V f
	addDefaultOres (Lnet/minecraft/world/level/biome/BiomeGenerationSettings$Builder;Z)V a
	addDefaultSeagrass (Lnet/minecraft/world/level/biome/BiomeGenerationSettings$Builder;)V an
	addDefaultSoftDisks (Lnet/minecraft/world/level/biome/BiomeGenerationSettings$Builder;)V j
	addDefaultSprings (Lnet/minecraft/world/level/biome/BiomeGenerationSettings$Builder;)V ap
	addDefaultUndergroundVariety (Lnet/minecraft/world/level/biome/BiomeGenerationSettings$Builder;)V c
	addDesertExtraDecoration (Lnet/minecraft/world/level/biome/BiomeGenerationSettings$Builder;)V ak
	addDesertExtraVegetation (Lnet/minecraft/world/level/biome/BiomeGenerationSettings$Builder;)V ai
	addDesertVegetation (Lnet/minecraft/world/level/biome/BiomeGenerationSettings$Builder;)V T
	addDripstone (Lnet/minecraft/world/level/biome/BiomeGenerationSettings$Builder;)V d
	addExtraEmeralds (Lnet/minecraft/world/level/biome/BiomeGenerationSettings$Builder;)V h
	addExtraGold (Lnet/minecraft/world/level/biome/BiomeGenerationSettings$Builder;)V g
	addFerns (Lnet/minecraft/world/level/biome/BiomeGenerationSettings$Builder;)V n
	addForestFlowers (Lnet/minecraft/world/level/biome/BiomeGenerationSettings$Builder;)V N
	addForestGrass (Lnet/minecraft/world/level/biome/BiomeGenerationSettings$Builder;)V O
	addFossilDecoration (Lnet/minecraft/world/level/biome/BiomeGenerationSettings$Builder;)V al
	addFrozenSprings (Lnet/minecraft/world/level/biome/BiomeGenerationSettings$Builder;)V aq
	addGiantTaigaVegetation (Lnet/minecraft/world/level/biome/BiomeGenerationSettings$Builder;)V U
	addGroveTrees (Lnet/minecraft/world/level/biome/BiomeGenerationSettings$Builder;)V t
	addIcebergs (Lnet/minecraft/world/level/biome/BiomeGenerationSettings$Builder;)V ar
	addInfestedStone (Lnet/minecraft/world/level/biome/BiomeGenerationSettings$Builder;)V i
	addJungleGrass (Lnet/minecraft/world/level/biome/BiomeGenerationSettings$Builder;)V I
	addJungleMelons (Lnet/minecraft/world/level/biome/BiomeGenerationSettings$Builder;)V af
	addJungleTrees (Lnet/minecraft/world/level/biome/BiomeGenerationSettings$Builder;)V E
	addJungleVines (Lnet/minecraft/world/level/biome/BiomeGenerationSettings$Builder;)V ah
	addLightBambooVegetation (Lnet/minecraft/world/level/biome/BiomeGenerationSettings$Builder;)V q
	addLukeWarmKelp (Lnet/minecraft/world/level/biome/BiomeGenerationSettings$Builder;)V ao
	addLushCavesSpecialOres (Lnet/minecraft/world/level/biome/BiomeGenerationSettings$Builder;)V B
	addLushCavesVegetationFeatures (Lnet/minecraft/world/level/biome/BiomeGenerationSettings$Builder;)V A
	addMangroveSwampDisks (Lnet/minecraft/world/level/biome/BiomeGenerationSettings$Builder;)V l
	addMangroveSwampVegetation (Lnet/minecraft/world/level/biome/BiomeGenerationSettings$Builder;)V Q
	addMeadowVegetation (Lnet/minecraft/world/level/biome/BiomeGenerationSettings$Builder;)V X
	addMossyStoneBlock (Lnet/minecraft/world/level/biome/BiomeGenerationSettings$Builder;)V m
	addMountainForestTrees (Lnet/minecraft/world/level/biome/BiomeGenerationSettings$Builder;)V D
	addMountainTrees (Lnet/minecraft/world/level/biome/BiomeGenerationSettings$Builder;)V C
	addMushroomFieldVegetation (Lnet/minecraft/world/level/biome/BiomeGenerationSettings$Builder;)V R
	addNetherDefaultOres (Lnet/minecraft/world/level/biome/BiomeGenerationSettings$Builder;)V au
	addOtherBirchTrees (Lnet/minecraft/world/level/biome/BiomeGenerationSettings$Builder;)V w
	addPlainGrass (Lnet/minecraft/world/level/biome/BiomeGenerationSettings$Builder;)V ab
	addPlainVegetation (Lnet/minecraft/world/level/biome/BiomeGenerationSettings$Builder;)V S
	addRareBerryBushes (Lnet/minecraft/world/level/biome/BiomeGenerationSettings$Builder;)V o
	addSavannaExtraGrass (Lnet/minecraft/world/level/biome/BiomeGenerationSettings$Builder;)V L
	addSavannaGrass (Lnet/minecraft/world/level/biome/BiomeGenerationSettings$Builder;)V J
	addSavannaTrees (Lnet/minecraft/world/level/biome/BiomeGenerationSettings$Builder;)V y
	addSculk (Lnet/minecraft/world/level/biome/BiomeGenerationSettings$Builder;)V e
	addShatteredSavannaGrass (Lnet/minecraft/world/level/biome/BiomeGenerationSettings$Builder;)V K
	addShatteredSavannaTrees (Lnet/minecraft/world/level/biome/BiomeGenerationSettings$Builder;)V z
	addSnowyTrees (Lnet/minecraft/world/level/biome/BiomeGenerationSettings$Builder;)V H
	addSparseJungleMelons (Lnet/minecraft/world/level/biome/BiomeGenerationSettings$Builder;)V ag
	addSparseJungleTrees (Lnet/minecraft/world/level/biome/BiomeGenerationSettings$Builder;)V F
	addSurfaceFreezing (Lnet/minecraft/world/level/biome/BiomeGenerationSettings$Builder;)V at
	addSwampClayDisk (Lnet/minecraft/world/level/biome/BiomeGenerationSettings$Builder;)V k
	addSwampExtraVegetation (Lnet/minecraft/world/level/biome/BiomeGenerationSettings$Builder;)V aj
	addSwampVegetation (Lnet/minecraft/world/level/biome/BiomeGenerationSettings$Builder;)V P
	addTaigaGrass (Lnet/minecraft/world/level/biome/BiomeGenerationSettings$Builder;)V aa
	addTaigaTrees (Lnet/minecraft/world/level/biome/BiomeGenerationSettings$Builder;)V s
	addTallBirchTrees (Lnet/minecraft/world/level/biome/BiomeGenerationSettings$Builder;)V x
	addWarmFlowers (Lnet/minecraft/world/level/biome/BiomeGenerationSettings$Builder;)V Y
	addWaterTrees (Lnet/minecraft/world/level/biome/BiomeGenerationSettings$Builder;)V u
	baseJungleSpawns (Lnet/minecraft/world/level/biome/MobSpawnSettings$Builder;)V i
	caveSpawns (Lnet/minecraft/world/level/biome/MobSpawnSettings$Builder;)V b
	commonSpawns (Lnet/minecraft/world/level/biome/MobSpawnSettings$Builder;)V c
	desertSpawns (Lnet/minecraft/world/level/biome/MobSpawnSettings$Builder;)V f
	dripstoneCavesSpawns (Lnet/minecraft/world/level/biome/MobSpawnSettings$Builder;)V g
	endSpawns (Lnet/minecraft/world/level/biome/MobSpawnSettings$Builder;)V j
	farmAnimals (Lnet/minecraft/world/level/biome/MobSpawnSettings$Builder;)V a
	monsters (Lnet/minecraft/world/level/biome/MobSpawnSettings$Builder;IIIZ)V a
	mooshroomSpawns (Lnet/minecraft/world/level/biome/MobSpawnSettings$Builder;)V h
	oceanSpawns (Lnet/minecraft/world/level/biome/MobSpawnSettings$Builder;III)V a
	plainsSpawns (Lnet/minecraft/world/level/biome/MobSpawnSettings$Builder;)V d
	snowySpawns (Lnet/minecraft/world/level/biome/MobSpawnSettings$Builder;)V e
	warmOceanSpawns (Lnet/minecraft/world/level/biome/MobSpawnSettings$Builder;II)V a
net/minecraft/data/worldgen/BootstapContext nm
	lookup (Lnet/minecraft/resources/ResourceKey;)Lnet/minecraft/core/HolderGetter; a
	register (Lnet/minecraft/resources/ResourceKey;Ljava/lang/Object;)Lnet/minecraft/core/Holder$Reference; a
	register (Lnet/minecraft/resources/ResourceKey;Ljava/lang/Object;Lcom/mojang/serialization/Lifecycle;)Lnet/minecraft/core/Holder$Reference; a
net/minecraft/data/worldgen/Carvers nn
	CANYON c
	CAVE a
	CAVE_EXTRA_UNDERGROUND b
	NETHER_CAVE d
	bootstrap (Lnet/minecraft/data/worldgen/BootstapContext;)V a
	createKey (Ljava/lang/String;)Lnet/minecraft/resources/ResourceKey; a
net/minecraft/data/worldgen/DesertVillagePools no
	START a
	TERMINATORS_KEY b
	ZOMBIE_TERMINATORS_KEY c
	bootstrap (Lnet/minecraft/data/worldgen/BootstapContext;)V a
net/minecraft/data/worldgen/DimensionTypes np
	bootstrap (Lnet/minecraft/data/worldgen/BootstapContext;)V a
net/minecraft/data/worldgen/NoiseData nq
	DEFAULT_SHIFT a
	bootstrap (Lnet/minecraft/data/worldgen/BootstapContext;)V a
	register (Lnet/minecraft/data/worldgen/BootstapContext;Lnet/minecraft/resources/ResourceKey;ID[D)V a
	registerBiomeNoises (Lnet/minecraft/data/worldgen/BootstapContext;ILnet/minecraft/resources/ResourceKey;Lnet/minecraft/resources/ResourceKey;Lnet/minecraft/resources/ResourceKey;Lnet/minecraft/resources/ResourceKey;)V a
net/minecraft/data/worldgen/PillagerOutpostPools nr
	START a
	bootstrap (Lnet/minecraft/data/worldgen/BootstapContext;)V a
net/minecraft/data/worldgen/PlainVillagePools ns
	START a
	TERMINATORS_KEY b
	bootstrap (Lnet/minecraft/data/worldgen/BootstapContext;)V a
net/minecraft/data/worldgen/Pools nt
	EMPTY a
	bootstrap (Lnet/minecraft/data/worldgen/BootstapContext;)V a
	createKey (Ljava/lang/String;)Lnet/minecraft/resources/ResourceKey; a
	register (Lnet/minecraft/data/worldgen/BootstapContext;Ljava/lang/String;Lnet/minecraft/world/level/levelgen/structure/pools/StructureTemplatePool;)V a
net/minecraft/data/worldgen/ProcessorLists nu
	ANCIENT_CITY_GENERIC_DEGRADATION H
	ANCIENT_CITY_START_DEGRADATION G
	ANCIENT_CITY_WALLS_DEGRADATION I
	BASTION_GENERIC_DEGRADATION w
	BOTTOM_RAMPART r
	BRIDGE z
	EMPTY M
	ENTRANCE_REPLACEMENT y
	FARM_DESERT p
	FARM_PLAINS l
	FARM_SAVANNA m
	FARM_SNOWY n
	FARM_TAIGA o
	FOSSIL_COAL E
	FOSSIL_DIAMONDS F
	FOSSIL_ROT D
	HIGH_RAMPART C
	HIGH_WALL B
	HOUSING t
	MOSSIFY_10_PERCENT f
	MOSSIFY_20_PERCENT g
	MOSSIFY_70_PERCENT h
	OUTPOST_ROT q
	RAMPART_DEGRADATION x
	ROOF A
	SIDE_WALL_DEGRADATION u
	STABLE_DEGRADATION v
	STREET_PLAINS i
	STREET_SAVANNA j
	STREET_SNOWY_OR_TAIGA k
	TRAIL_RUINS_HOUSES_ARCHAEOLOGY J
	TRAIL_RUINS_ROADS_ARCHAEOLOGY K
	TRAIL_RUINS_TOWER_TOP_ARCHAEOLOGY L
	TREASURE_ROOMS s
	ZOMBIE_DESERT e
	ZOMBIE_PLAINS a
	ZOMBIE_SAVANNA b
	ZOMBIE_SNOWY c
	ZOMBIE_TAIGA d
	bootstrap (Lnet/minecraft/data/worldgen/BootstapContext;)V a
	createKey (Ljava/lang/String;)Lnet/minecraft/resources/ResourceKey; a
	register (Lnet/minecraft/data/worldgen/BootstapContext;Lnet/minecraft/resources/ResourceKey;Ljava/util/List;)V a
	trailsArchyLootProcessor (Lnet/minecraft/resources/ResourceLocation;I)Lnet/minecraft/world/level/levelgen/structure/templatesystem/CappedProcessor; a
net/minecraft/data/worldgen/SavannaVillagePools nv
	START a
	TERMINATORS_KEY b
	ZOMBIE_TERMINATORS_KEY c
	bootstrap (Lnet/minecraft/data/worldgen/BootstapContext;)V a
net/minecraft/data/worldgen/SnowyVillagePools nw
	START a
	TERMINATORS_KEY b
	bootstrap (Lnet/minecraft/data/worldgen/BootstapContext;)V a
net/minecraft/data/worldgen/StructureSets nx
	bootstrap (Lnet/minecraft/data/worldgen/BootstapContext;)V a
net/minecraft/data/worldgen/Structures ny
	bootstrap (Lnet/minecraft/data/worldgen/BootstapContext;)V a
	structure (Lnet/minecraft/core/HolderSet;Ljava/util/Map;Lnet/minecraft/world/level/levelgen/GenerationStep$Decoration;Lnet/minecraft/world/level/levelgen/structure/TerrainAdjustment;)Lnet/minecraft/world/level/levelgen/structure/Structure$StructureSettings; a
	structure (Lnet/minecraft/core/HolderSet;Lnet/minecraft/world/level/levelgen/GenerationStep$Decoration;Lnet/minecraft/world/level/levelgen/structure/TerrainAdjustment;)Lnet/minecraft/world/level/levelgen/structure/Structure$StructureSettings; a
	structure (Lnet/minecraft/core/HolderSet;Lnet/minecraft/world/level/levelgen/structure/TerrainAdjustment;)Lnet/minecraft/world/level/levelgen/structure/Structure$StructureSettings; a
net/minecraft/data/worldgen/SurfaceRuleData nz
	AIR a
	BASALT C
	BEDROCK b
	BLACKSTONE D
	CALCITE o
	COARSE_DIRT l
	CRIMSON_NYLIUM H
	DEEPSLATE i
	DIRT j
	ENDSTONE I
	GRASS_BLOCK n
	GRAVEL p
	ICE w
	LAVA y
	MUD u
	MYCELIUM m
	NETHERRACK z
	NETHER_WART_BLOCK G
	ORANGE_TERRACOTTA d
	PACKED_ICE s
	PODZOL k
	POWDER_SNOW v
	RED_SAND f
	RED_SANDSTONE g
	SAND q
	SANDSTONE r
	SNOW_BLOCK t
	SOUL_SAND A
	SOUL_SOIL B
	STONE h
	TERRACOTTA e
	WARPED_NYLIUM F
	WARPED_WART_BLOCK E
	WATER x
	WHITE_TERRACOTTA c
	air ()Lnet/minecraft/world/level/levelgen/SurfaceRules$RuleSource; d
	end ()Lnet/minecraft/world/level/levelgen/SurfaceRules$RuleSource; c
	makeStateRule (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/world/level/levelgen/SurfaceRules$RuleSource; a
	nether ()Lnet/minecraft/world/level/levelgen/SurfaceRules$RuleSource; b
	overworld ()Lnet/minecraft/world/level/levelgen/SurfaceRules$RuleSource; a
	overworldLike (ZZZ)Lnet/minecraft/world/level/levelgen/SurfaceRules$RuleSource; a
	surfaceNoiseAbove (D)Lnet/minecraft/world/level/levelgen/SurfaceRules$ConditionSource; a
net/minecraft/data/worldgen/TaigaVillagePools oa
	START a
	TERMINATORS_KEY b
	bootstrap (Lnet/minecraft/data/worldgen/BootstapContext;)V a
net/minecraft/data/worldgen/TerrainProvider ob
	AMPLIFIED_FACTOR g
	AMPLIFIED_JAGGEDNESS h
	AMPLIFIED_OFFSET f
	BEACH_CONTINENTALNESS d
	DEEP_OCEAN_CONTINENTALNESS a
	NO_TRANSFORM e
	OCEAN_CONTINENTALNESS b
	PLAINS_CONTINENTALNESS c
	buildErosionJaggednessSpline (Lnet/minecraft/util/ToFloatFunction;Lnet/minecraft/util/ToFloatFunction;Lnet/minecraft/util/ToFloatFunction;FFFFLnet/minecraft/util/ToFloatFunction;)Lnet/minecraft/util/CubicSpline; a
	buildErosionOffsetSpline (Lnet/minecraft/util/ToFloatFunction;Lnet/minecraft/util/ToFloatFunction;FFFFFFZZLnet/minecraft/util/ToFloatFunction;)Lnet/minecraft/util/CubicSpline; a
	buildMountainRidgeSplineWithPoints (Lnet/minecraft/util/ToFloatFunction;FZLnet/minecraft/util/ToFloatFunction;)Lnet/minecraft/util/CubicSpline; a
	buildRidgeJaggednessSpline (Lnet/minecraft/util/ToFloatFunction;Lnet/minecraft/util/ToFloatFunction;FFLnet/minecraft/util/ToFloatFunction;)Lnet/minecraft/util/CubicSpline; a
	buildWeirdnessJaggednessSpline (Lnet/minecraft/util/ToFloatFunction;FLnet/minecraft/util/ToFloatFunction;)Lnet/minecraft/util/CubicSpline; a
	calculateMountainRidgeZeroContinentalnessPoint (F)F a
	calculateSlope (FFFF)F a
	getErosionFactor (Lnet/minecraft/util/ToFloatFunction;Lnet/minecraft/util/ToFloatFunction;Lnet/minecraft/util/ToFloatFunction;FZLnet/minecraft/util/ToFloatFunction;)Lnet/minecraft/util/CubicSpline; a
	mountainContinentalness (FFF)F a
	overworldFactor (Lnet/minecraft/util/ToFloatFunction;Lnet/minecraft/util/ToFloatFunction;Lnet/minecraft/util/ToFloatFunction;Lnet/minecraft/util/ToFloatFunction;Z)Lnet/minecraft/util/CubicSpline; a
	overworldJaggedness (Lnet/minecraft/util/ToFloatFunction;Lnet/minecraft/util/ToFloatFunction;Lnet/minecraft/util/ToFloatFunction;Lnet/minecraft/util/ToFloatFunction;Z)Lnet/minecraft/util/CubicSpline; b
	overworldOffset (Lnet/minecraft/util/ToFloatFunction;Lnet/minecraft/util/ToFloatFunction;Lnet/minecraft/util/ToFloatFunction;Z)Lnet/minecraft/util/CubicSpline; a
	ridgeSpline (Lnet/minecraft/util/ToFloatFunction;FFFFFFLnet/minecraft/util/ToFloatFunction;)Lnet/minecraft/util/CubicSpline; a
net/minecraft/data/worldgen/TrailRuinsStructurePools oc
	START a
	bootstrap (Lnet/minecraft/data/worldgen/BootstapContext;)V a
net/minecraft/data/worldgen/VillagePools od
	bootstrap (Lnet/minecraft/data/worldgen/BootstapContext;)V a
net/minecraft/data/worldgen/biome/BiomeData oe
	bootstrap (Lnet/minecraft/data/worldgen/BootstapContext;)V a
net/minecraft/data/worldgen/biome/EndBiomes of
	baseEndBiome (Lnet/minecraft/world/level/biome/BiomeGenerationSettings$Builder;)Lnet/minecraft/world/level/biome/Biome; a
	endBarrens (Lnet/minecraft/core/HolderGetter;Lnet/minecraft/core/HolderGetter;)Lnet/minecraft/world/level/biome/Biome; a
	endHighlands (Lnet/minecraft/core/HolderGetter;Lnet/minecraft/core/HolderGetter;)Lnet/minecraft/world/level/biome/Biome; d
	endMidlands (Lnet/minecraft/core/HolderGetter;Lnet/minecraft/core/HolderGetter;)Lnet/minecraft/world/level/biome/Biome; c
	smallEndIslands (Lnet/minecraft/core/HolderGetter;Lnet/minecraft/core/HolderGetter;)Lnet/minecraft/world/level/biome/Biome; e
	theEnd (Lnet/minecraft/core/HolderGetter;Lnet/minecraft/core/HolderGetter;)Lnet/minecraft/world/level/biome/Biome; b
net/minecraft/data/worldgen/biome/NetherBiomes og
	basaltDeltas (Lnet/minecraft/core/HolderGetter;Lnet/minecraft/core/HolderGetter;)Lnet/minecraft/world/level/biome/Biome; c
	crimsonForest (Lnet/minecraft/core/HolderGetter;Lnet/minecraft/core/HolderGetter;)Lnet/minecraft/world/level/biome/Biome; d
	netherWastes (Lnet/minecraft/core/HolderGetter;Lnet/minecraft/core/HolderGetter;)Lnet/minecraft/world/level/biome/Biome; a
	soulSandValley (Lnet/minecraft/core/HolderGetter;Lnet/minecraft/core/HolderGetter;)Lnet/minecraft/world/level/biome/Biome; b
	warpedForest (Lnet/minecraft/core/HolderGetter;Lnet/minecraft/core/HolderGetter;)Lnet/minecraft/world/level/biome/Biome; e
net/minecraft/data/worldgen/biome/OverworldBiomes oh
	NORMAL_MUSIC d
	NORMAL_WATER_COLOR a
	NORMAL_WATER_FOG_COLOR b
	OVERWORLD_FOG_COLOR c
	badlands (Lnet/minecraft/core/HolderGetter;Lnet/minecraft/core/HolderGetter;Z)Lnet/minecraft/world/level/biome/Biome; c
	bambooJungle (Lnet/minecraft/core/HolderGetter;Lnet/minecraft/core/HolderGetter;)Lnet/minecraft/world/level/biome/Biome; c
	baseJungle (Lnet/minecraft/core/HolderGetter;Lnet/minecraft/core/HolderGetter;FZZZLnet/minecraft/world/level/biome/MobSpawnSettings$Builder;Lnet/minecraft/sounds/Music;)Lnet/minecraft/world/level/biome/Biome; a
	baseOcean (Lnet/minecraft/world/level/biome/MobSpawnSettings$Builder;IILnet/minecraft/world/level/biome/BiomeGenerationSettings$Builder;)Lnet/minecraft/world/level/biome/Biome; a
	baseOceanGeneration (Lnet/minecraft/core/HolderGetter;Lnet/minecraft/core/HolderGetter;)Lnet/minecraft/world/level/biome/BiomeGenerationSettings$Builder; s
	beach (Lnet/minecraft/core/HolderGetter;Lnet/minecraft/core/HolderGetter;ZZ)Lnet/minecraft/world/level/biome/Biome; b
	biome (ZFFIILjava/lang/Integer;Ljava/lang/Integer;Lnet/minecraft/world/level/biome/MobSpawnSettings$Builder;Lnet/minecraft/world/level/biome/BiomeGenerationSettings$Builder;Lnet/minecraft/sounds/Music;)Lnet/minecraft/world/level/biome/Biome; a
	biome (ZFFLnet/minecraft/world/level/biome/MobSpawnSettings$Builder;Lnet/minecraft/world/level/biome/BiomeGenerationSettings$Builder;Lnet/minecraft/sounds/Music;)Lnet/minecraft/world/level/biome/Biome; a
	calculateSkyColor (F)I a
	coldOcean (Lnet/minecraft/core/HolderGetter;Lnet/minecraft/core/HolderGetter;Z)Lnet/minecraft/world/level/biome/Biome; d
	darkForest (Lnet/minecraft/core/HolderGetter;Lnet/minecraft/core/HolderGetter;)Lnet/minecraft/world/level/biome/Biome; g
	deepDark (Lnet/minecraft/core/HolderGetter;Lnet/minecraft/core/HolderGetter;)Lnet/minecraft/world/level/biome/Biome; r
	desert (Lnet/minecraft/core/HolderGetter;Lnet/minecraft/core/HolderGetter;)Lnet/minecraft/world/level/biome/Biome; d
	dripstoneCaves (Lnet/minecraft/core/HolderGetter;Lnet/minecraft/core/HolderGetter;)Lnet/minecraft/world/level/biome/Biome; q
	forest (Lnet/minecraft/core/HolderGetter;Lnet/minecraft/core/HolderGetter;ZZZ)Lnet/minecraft/world/level/biome/Biome; b
	frozenOcean (Lnet/minecraft/core/HolderGetter;Lnet/minecraft/core/HolderGetter;Z)Lnet/minecraft/world/level/biome/Biome; g
	frozenPeaks (Lnet/minecraft/core/HolderGetter;Lnet/minecraft/core/HolderGetter;)Lnet/minecraft/world/level/biome/Biome; k
	globalOverworldGeneration (Lnet/minecraft/world/level/biome/BiomeGenerationSettings$Builder;)V a
	grove (Lnet/minecraft/core/HolderGetter;Lnet/minecraft/core/HolderGetter;)Lnet/minecraft/world/level/biome/Biome; o
	jaggedPeaks (Lnet/minecraft/core/HolderGetter;Lnet/minecraft/core/HolderGetter;)Lnet/minecraft/world/level/biome/Biome; l
	jungle (Lnet/minecraft/core/HolderGetter;Lnet/minecraft/core/HolderGetter;)Lnet/minecraft/world/level/biome/Biome; b
	lukeWarmOcean (Lnet/minecraft/core/HolderGetter;Lnet/minecraft/core/HolderGetter;Z)Lnet/minecraft/world/level/biome/Biome; f
	lushCaves (Lnet/minecraft/core/HolderGetter;Lnet/minecraft/core/HolderGetter;)Lnet/minecraft/world/level/biome/Biome; p
	mangroveSwamp (Lnet/minecraft/core/HolderGetter;Lnet/minecraft/core/HolderGetter;)Lnet/minecraft/world/level/biome/Biome; i
	meadowOrCherryGrove (Lnet/minecraft/core/HolderGetter;Lnet/minecraft/core/HolderGetter;Z)Lnet/minecraft/world/level/biome/Biome; j
	mushroomFields (Lnet/minecraft/core/HolderGetter;Lnet/minecraft/core/HolderGetter;)Lnet/minecraft/world/level/biome/Biome; e
	ocean (Lnet/minecraft/core/HolderGetter;Lnet/minecraft/core/HolderGetter;Z)Lnet/minecraft/world/level/biome/Biome; e
	oldGrowthTaiga (Lnet/minecraft/core/HolderGetter;Lnet/minecraft/core/HolderGetter;Z)Lnet/minecraft/world/level/biome/Biome; a
	plains (Lnet/minecraft/core/HolderGetter;Lnet/minecraft/core/HolderGetter;ZZZ)Lnet/minecraft/world/level/biome/Biome; a
	river (Lnet/minecraft/core/HolderGetter;Lnet/minecraft/core/HolderGetter;Z)Lnet/minecraft/world/level/biome/Biome; i
	savanna (Lnet/minecraft/core/HolderGetter;Lnet/minecraft/core/HolderGetter;ZZ)Lnet/minecraft/world/level/biome/Biome; a
	snowySlopes (Lnet/minecraft/core/HolderGetter;Lnet/minecraft/core/HolderGetter;)Lnet/minecraft/world/level/biome/Biome; n
	sparseJungle (Lnet/minecraft/core/HolderGetter;Lnet/minecraft/core/HolderGetter;)Lnet/minecraft/world/level/biome/Biome; a
	stonyPeaks (Lnet/minecraft/core/HolderGetter;Lnet/minecraft/core/HolderGetter;)Lnet/minecraft/world/level/biome/Biome; m
	swamp (Lnet/minecraft/core/HolderGetter;Lnet/minecraft/core/HolderGetter;)Lnet/minecraft/world/level/biome/Biome; h
	taiga (Lnet/minecraft/core/HolderGetter;Lnet/minecraft/core/HolderGetter;Z)Lnet/minecraft/world/level/biome/Biome; h
	theVoid (Lnet/minecraft/core/HolderGetter;Lnet/minecraft/core/HolderGetter;)Lnet/minecraft/world/level/biome/Biome; j
	warmOcean (Lnet/minecraft/core/HolderGetter;Lnet/minecraft/core/HolderGetter;)Lnet/minecraft/world/level/biome/Biome; f
	windsweptHills (Lnet/minecraft/core/HolderGetter;Lnet/minecraft/core/HolderGetter;Z)Lnet/minecraft/world/level/biome/Biome; b
net/minecraft/data/worldgen/features/AquaticFeatures oj
	KELP g
	SEAGRASS_MID c
	SEAGRASS_SHORT a
	SEAGRASS_SIMPLE f
	SEAGRASS_SLIGHTLY_LESS_SHORT b
	SEAGRASS_TALL d
	SEA_PICKLE e
	WARM_OCEAN_VEGETATION h
	bootstrap (Lnet/minecraft/data/worldgen/BootstapContext;)V a
net/minecraft/data/worldgen/features/CaveFeatures ok
	AMETHYST_GEODE u
	CAVE_VINE j
	CAVE_VINE_IN_MOSS k
	CLAY_POOL_WITH_DRIPLEAVES q
	CLAY_WITH_DRIPLEAVES p
	DRIPLEAF o
	DRIPSTONE_CLUSTER d
	FOSSIL_COAL b
	FOSSIL_DIAMONDS c
	GLOW_LICHEN h
	LARGE_DRIPSTONE e
	LUSH_CAVES_CLAY r
	MONSTER_ROOM a
	MOSS_PATCH m
	MOSS_PATCH_BONEMEAL n
	MOSS_PATCH_CEILING s
	MOSS_VEGETATION l
	POINTED_DRIPSTONE f
	ROOTED_AZALEA_TREE i
	SCULK_PATCH_ANCIENT_CITY w
	SCULK_PATCH_DEEP_DARK v
	SCULK_VEIN x
	SPORE_BLOSSOM t
	UNDERWATER_MAGMA g
	bootstrap (Lnet/minecraft/data/worldgen/BootstapContext;)V a
	makeDripleaf (Lnet/minecraft/core/Direction;)Lnet/minecraft/core/Holder; a
	makeSmallDripleaf ()Lnet/minecraft/core/Holder; a
net/minecraft/data/worldgen/features/EndFeatures ol
	CHORUS_PLANT d
	END_GATEWAY_DELAYED c
	END_GATEWAY_RETURN b
	END_ISLAND e
	END_SPIKE a
	bootstrap (Lnet/minecraft/data/worldgen/BootstapContext;)V a
net/minecraft/data/worldgen/features/FeatureUtils om
	bootstrap (Lnet/minecraft/data/worldgen/BootstapContext;)V a
	createKey (Ljava/lang/String;)Lnet/minecraft/resources/ResourceKey; a
	register (Lnet/minecraft/data/worldgen/BootstapContext;Lnet/minecraft/resources/ResourceKey;Lnet/minecraft/world/level/levelgen/feature/Feature;)V a
	register (Lnet/minecraft/data/worldgen/BootstapContext;Lnet/minecraft/resources/ResourceKey;Lnet/minecraft/world/level/levelgen/feature/Feature;Lnet/minecraft/world/level/levelgen/feature/configurations/FeatureConfiguration;)V a
	simplePatchConfiguration (Lnet/minecraft/world/level/levelgen/feature/Feature;Lnet/minecraft/world/level/levelgen/feature/configurations/FeatureConfiguration;)Lnet/minecraft/world/level/levelgen/feature/configurations/RandomPatchConfiguration; a
	simplePatchConfiguration (Lnet/minecraft/world/level/levelgen/feature/Feature;Lnet/minecraft/world/level/levelgen/feature/configurations/FeatureConfiguration;Ljava/util/List;)Lnet/minecraft/world/level/levelgen/feature/configurations/RandomPatchConfiguration; a
	simplePatchConfiguration (Lnet/minecraft/world/level/levelgen/feature/Feature;Lnet/minecraft/world/level/levelgen/feature/configurations/FeatureConfiguration;Ljava/util/List;I)Lnet/minecraft/world/level/levelgen/feature/configurations/RandomPatchConfiguration; a
	simplePatchPredicate (Ljava/util/List;)Lnet/minecraft/world/level/levelgen/blockpredicates/BlockPredicate; a
	simpleRandomPatchConfiguration (ILnet/minecraft/core/Holder;)Lnet/minecraft/world/level/levelgen/feature/configurations/RandomPatchConfiguration; a
net/minecraft/data/worldgen/features/MiscOverworldFeatures on
	BLUE_ICE f
	BONUS_CHEST m
	DESERT_WELL o
	DISK_CLAY h
	DISK_GRASS l
	DISK_GRAVEL i
	DISK_SAND j
	FOREST_ROCK c
	FREEZE_TOP_LAYER k
	ICEBERG_BLUE e
	ICEBERG_PACKED d
	ICE_PATCH b
	ICE_SPIKE a
	LAKE_LAVA g
	SPRING_LAVA_FROZEN q
	SPRING_LAVA_OVERWORLD p
	SPRING_WATER r
	VOID_START_PLATFORM n
	bootstrap (Lnet/minecraft/data/worldgen/BootstapContext;)V a
net/minecraft/data/worldgen/features/NetherFeatures oo
	BASALT_BLOBS d
	BASALT_PILLAR q
	BLACKSTONE_BLOBS e
	CRIMSON_FOREST_VEGETATION g
	CRIMSON_FOREST_VEGETATION_BONEMEAL h
	DELTA a
	GLOWSTONE_EXTRA f
	LARGE_BASALT_COLUMNS c
	NETHER_SPROUTS k
	NETHER_SPROUTS_BONEMEAL l
	PATCH_CRIMSON_ROOTS p
	PATCH_FIRE u
	PATCH_SOUL_FIRE v
	SMALL_BASALT_COLUMNS b
	SPRING_LAVA_NETHER r
	SPRING_NETHER_CLOSED s
	SPRING_NETHER_OPEN t
	TWISTING_VINES m
	TWISTING_VINES_BONEMEAL n
	WARPED_FOREST_VEGETATION_BONEMEAL j
	WARPED_FOREST_VEGETION i
	WEEPING_VINES o
	bootstrap (Lnet/minecraft/data/worldgen/BootstapContext;)V a
net/minecraft/data/worldgen/features/OreFeatures op
	ORE_ANCIENT_DEBRIS_LARGE A
	ORE_ANCIENT_DEBRIS_SMALL B
	ORE_ANDESITE k
	ORE_BLACKSTONE f
	ORE_CLAY E
	ORE_COAL m
	ORE_COAL_BURIED n
	ORE_COPPER_LARGE D
	ORE_COPPPER_SMALL C
	ORE_DIAMOND_BURIED v
	ORE_DIAMOND_LARGE u
	ORE_DIAMOND_SMALL t
	ORE_DIORITE j
	ORE_DIRT g
	ORE_EMERALD z
	ORE_GOLD q
	ORE_GOLD_BURIED r
	ORE_GRANITE i
	ORE_GRAVEL h
	ORE_GRAVEL_NETHER e
	ORE_INFESTED y
	ORE_IRON o
	ORE_IRON_SMALL p
	ORE_LAPIS w
	ORE_LAPIS_BURIED x
	ORE_MAGMA a
	ORE_NETHER_GOLD c
	ORE_QUARTZ d
	ORE_REDSTONE s
	ORE_SOUL_SAND b
	ORE_TUFF l
	bootstrap (Lnet/minecraft/data/worldgen/BootstapContext;)V a
net/minecraft/data/worldgen/features/PileFeatures oq
	PILE_HAY a
	PILE_ICE d
	PILE_MELON b
	PILE_PUMPKIN e
	PILE_SNOW c
	bootstrap (Lnet/minecraft/data/worldgen/BootstapContext;)V a
net/minecraft/data/worldgen/features/TreeFeatures or
	ACACIA j
	AZALEA_TREE w
	BIRCH i
	BIRCH_BEES_0002 D
	BIRCH_BEES_002 E
	BIRCH_BEES_005 F
	CHERRY z
	CHERRY_BEES_005 K
	CRIMSON_FUNGUS a
	CRIMSON_FUNGUS_PLANTED b
	DARK_OAK h
	FANCY_OAK n
	FANCY_OAK_BEES J
	FANCY_OAK_BEES_0002 G
	FANCY_OAK_BEES_002 H
	FANCY_OAK_BEES_005 I
	HUGE_BROWN_MUSHROOM e
	HUGE_RED_MUSHROOM f
	JUNGLE_BUSH v
	JUNGLE_TREE m
	JUNGLE_TREE_NO_VINE o
	MANGROVE x
	MEGA_JUNGLE_TREE p
	MEGA_PINE r
	MEGA_SPRUCE q
	OAK g
	OAK_BEES_0002 A
	OAK_BEES_002 B
	OAK_BEES_005 C
	PINE l
	SPRUCE k
	SUPER_BIRCH_BEES t
	SUPER_BIRCH_BEES_0002 s
	SWAMP_OAK u
	TALL_MANGROVE y
	WARPED_FUNGUS c
	WARPED_FUNGUS_PLANTED d
	bootstrap (Lnet/minecraft/data/worldgen/BootstapContext;)V a
	cherry ()Lnet/minecraft/world/level/levelgen/feature/configurations/TreeConfiguration$TreeConfigurationBuilder; f
	createBirch ()Lnet/minecraft/world/level/levelgen/feature/configurations/TreeConfiguration$TreeConfigurationBuilder; b
	createFancyOak ()Lnet/minecraft/world/level/levelgen/feature/configurations/TreeConfiguration$TreeConfigurationBuilder; e
	createJungleTree ()Lnet/minecraft/world/level/levelgen/feature/configurations/TreeConfiguration$TreeConfigurationBuilder; d
	createOak ()Lnet/minecraft/world/level/levelgen/feature/configurations/TreeConfiguration$TreeConfigurationBuilder; a
	createStraightBlobTree (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/world/level/block/Block;IIII)Lnet/minecraft/world/level/levelgen/feature/configurations/TreeConfiguration$TreeConfigurationBuilder; a
	createSuperBirch ()Lnet/minecraft/world/level/levelgen/feature/configurations/TreeConfiguration$TreeConfigurationBuilder; c
net/minecraft/data/worldgen/features/VegetationFeatures os
	BAMBOO_NO_PODZOL a
	BAMBOO_SOME_PODZOL b
	BAMBOO_VEGETATION P
	BIRCH_TALL G
	DARK_FOREST_VEGETATION A
	FLOWER_CHERRY y
	FLOWER_DEFAULT t
	FLOWER_FLOWER_FOREST u
	FLOWER_MEADOW x
	FLOWER_PLAIN w
	FLOWER_SWAMP v
	FOREST_FLOWERS z
	MANGROVE_VEGETATION R
	MEADOW_TREES C
	MUSHROOM_ISLAND_VEGETATION Q
	PATCH_BERRY_BUSH h
	PATCH_BROWN_MUSHROOM d
	PATCH_CACTUS r
	PATCH_DEAD_BUSH m
	PATCH_GRASS j
	PATCH_GRASS_JUNGLE k
	PATCH_LARGE_FERN q
	PATCH_MELON n
	PATCH_PUMPKIN g
	PATCH_RED_MUSHROOM e
	PATCH_SUGAR_CANE s
	PATCH_SUNFLOWER f
	PATCH_TAIGA_GRASS i
	PATCH_TALL_GRASS p
	PATCH_WATERLILY o
	SINGLE_PIECE_OF_GRASS l
	TREES_BIRCH_AND_OAK J
	TREES_FLOWER_FOREST B
	TREES_GROVE E
	TREES_JUNGLE O
	TREES_OLD_GROWTH_PINE_TAIGA N
	TREES_OLD_GROWTH_SPRUCE_TAIGA M
	TREES_PLAINS K
	TREES_SAVANNA F
	TREES_SPARSE_JUNGLE L
	TREES_TAIGA D
	TREES_WATER I
	TREES_WINDSWEPT_HILLS H
	VINES c
	bootstrap (Lnet/minecraft/data/worldgen/BootstapContext;)V a
	grassPatch (Lnet/minecraft/world/level/levelgen/feature/stateproviders/BlockStateProvider;I)Lnet/minecraft/world/level/levelgen/feature/configurations/RandomPatchConfiguration; a
net/minecraft/data/worldgen/placement/AquaticPlacements ov
	KELP_COLD k
	KELP_WARM l
	SEAGRASS_COLD c
	SEAGRASS_DEEP g
	SEAGRASS_DEEP_COLD h
	SEAGRASS_DEEP_WARM f
	SEAGRASS_NORMAL b
	SEAGRASS_RIVER d
	SEAGRASS_SIMPLE i
	SEAGRASS_SWAMP e
	SEAGRASS_WARM a
	SEA_PICKLE j
	WARM_OCEAN_VEGETATION m
	bootstrap (Lnet/minecraft/data/worldgen/BootstapContext;)V a
	seagrassPlacement (I)Ljava/util/List; a
net/minecraft/data/worldgen/placement/CavePlacements ow
	AMETHYST_GEODE q
	CAVE_VINES k
	CLASSIC_VINES p
	DRIPSTONE_CLUSTER e
	FOSSIL_LOWER d
	FOSSIL_UPPER c
	GLOW_LICHEN i
	LARGE_DRIPSTONE f
	LUSH_CAVES_CEILING_VEGETATION n
	LUSH_CAVES_CLAY m
	LUSH_CAVES_VEGETATION l
	MONSTER_ROOM a
	MONSTER_ROOM_DEEP b
	POINTED_DRIPSTONE g
	ROOTED_AZALEA_TREE j
	SCULK_PATCH_ANCIENT_CITY s
	SCULK_PATCH_DEEP_DARK r
	SCULK_VEIN t
	SPORE_BLOSSOM o
	UNDERWATER_MAGMA h
	bootstrap (Lnet/minecraft/data/worldgen/BootstapContext;)V a
net/minecraft/data/worldgen/placement/EndPlacements ox
	CHORUS_PLANT c
	END_GATEWAY_RETURN b
	END_ISLAND_DECORATED d
	END_SPIKE a
	bootstrap (Lnet/minecraft/data/worldgen/BootstapContext;)V a
net/minecraft/data/worldgen/placement/MiscOverworldPlacements oy
	BLUE_ICE f
	DESERT_WELL o
	DISK_CLAY i
	DISK_GRASS l
	DISK_GRAVEL j
	DISK_SAND k
	FOREST_ROCK c
	FREEZE_TOP_LAYER m
	ICEBERG_BLUE e
	ICEBERG_PACKED d
	ICE_PATCH b
	ICE_SPIKE a
	LAKE_LAVA_SURFACE h
	LAKE_LAVA_UNDERGROUND g
	SPRING_LAVA p
	SPRING_LAVA_FROZEN q
	SPRING_WATER r
	VOID_START_PLATFORM n
	bootstrap (Lnet/minecraft/data/worldgen/BootstapContext;)V a
net/minecraft/data/worldgen/placement/NetherPlacements oz
	BASALT_BLOBS d
	BASALT_PILLAR n
	BLACKSTONE_BLOBS e
	CRIMSON_FOREST_VEGETATION h
	DELTA a
	GLOWSTONE g
	GLOWSTONE_EXTRA f
	LARGE_BASALT_COLUMNS c
	NETHER_SPROUTS j
	PATCH_CRIMSON_ROOTS m
	PATCH_FIRE t
	PATCH_SOUL_FIRE s
	SMALL_BASALT_COLUMNS b
	SPRING_CLOSED p
	SPRING_CLOSED_DOUBLE q
	SPRING_DELTA o
	SPRING_OPEN r
	TWISTING_VINES k
	WARPED_FOREST_VEGETATION i
	WEEPING_VINES l
	bootstrap (Lnet/minecraft/data/worldgen/BootstapContext;)V a
net/minecraft/data/worldgen/placement/OrePlacements pa
	ORE_ANCIENT_DEBRIS_LARGE I
	ORE_ANCIENT_DEBRIS_SMALL J
	ORE_ANDESITE_LOWER p
	ORE_ANDESITE_UPPER o
	ORE_BLACKSTONE h
	ORE_CLAY M
	ORE_COAL_LOWER s
	ORE_COAL_UPPER r
	ORE_COPPER K
	ORE_COPPER_LARGE L
	ORE_DIAMOND B
	ORE_DIAMOND_BURIED D
	ORE_DIAMOND_LARGE C
	ORE_DIORITE_LOWER n
	ORE_DIORITE_UPPER m
	ORE_DIRT i
	ORE_EMERALD H
	ORE_GOLD x
	ORE_GOLD_DELTAS c
	ORE_GOLD_EXTRA w
	ORE_GOLD_LOWER y
	ORE_GOLD_NETHER e
	ORE_GRANITE_LOWER l
	ORE_GRANITE_UPPER k
	ORE_GRAVEL j
	ORE_GRAVEL_NETHER g
	ORE_INFESTED G
	ORE_IRON_MIDDLE u
	ORE_IRON_SMALL v
	ORE_IRON_UPPER t
	ORE_LAPIS E
	ORE_LAPIS_BURIED F
	ORE_MAGMA a
	ORE_QUARTZ_DELTAS d
	ORE_QUARTZ_NETHER f
	ORE_REDSTONE z
	ORE_REDSTONE_LOWER A
	ORE_SOUL_SAND b
	ORE_TUFF q
	bootstrap (Lnet/minecraft/data/worldgen/BootstapContext;)V a
	commonOrePlacement (ILnet/minecraft/world/level/levelgen/placement/PlacementModifier;)Ljava/util/List; a
	orePlacement (Lnet/minecraft/world/level/levelgen/placement/PlacementModifier;Lnet/minecraft/world/level/levelgen/placement/PlacementModifier;)Ljava/util/List; a
	rareOrePlacement (ILnet/minecraft/world/level/levelgen/placement/PlacementModifier;)Ljava/util/List; b
net/minecraft/data/worldgen/placement/PlacementUtils pb
	FULL_RANGE e
	HEIGHTMAP a
	HEIGHTMAP_OCEAN_FLOOR d
	HEIGHTMAP_TOP_SOLID b
	HEIGHTMAP_WORLD_SURFACE c
	RANGE_10_10 f
	RANGE_4_4 h
	RANGE_8_8 g
	RANGE_BOTTOM_TO_MAX_TERRAIN_HEIGHT i
	bootstrap (Lnet/minecraft/data/worldgen/BootstapContext;)V a
	countExtra (IFI)Lnet/minecraft/world/level/levelgen/placement/PlacementModifier; a
	createKey (Ljava/lang/String;)Lnet/minecraft/resources/ResourceKey; a
	filtered (Lnet/minecraft/world/level/levelgen/feature/Feature;Lnet/minecraft/world/level/levelgen/feature/configurations/FeatureConfiguration;Lnet/minecraft/world/level/levelgen/blockpredicates/BlockPredicate;)Lnet/minecraft/core/Holder; a
	filteredByBlockSurvival (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/world/level/levelgen/placement/BlockPredicateFilter; a
	inlinePlaced (Lnet/minecraft/core/Holder;[Lnet/minecraft/world/level/levelgen/placement/PlacementModifier;)Lnet/minecraft/core/Holder; a
	inlinePlaced (Lnet/minecraft/world/level/levelgen/feature/Feature;Lnet/minecraft/world/level/levelgen/feature/configurations/FeatureConfiguration;[Lnet/minecraft/world/level/levelgen/placement/PlacementModifier;)Lnet/minecraft/core/Holder; a
	isEmpty ()Lnet/minecraft/world/level/levelgen/placement/PlacementFilter; a
	onlyWhenEmpty (Lnet/minecraft/world/level/levelgen/feature/Feature;Lnet/minecraft/world/level/levelgen/feature/configurations/FeatureConfiguration;)Lnet/minecraft/core/Holder; a
	register (Lnet/minecraft/data/worldgen/BootstapContext;Lnet/minecraft/resources/ResourceKey;Lnet/minecraft/core/Holder;Ljava/util/List;)V a
	register (Lnet/minecraft/data/worldgen/BootstapContext;Lnet/minecraft/resources/ResourceKey;Lnet/minecraft/core/Holder;[Lnet/minecraft/world/level/levelgen/placement/PlacementModifier;)V a
net/minecraft/data/worldgen/placement/TreePlacements pc
	ACACIA_CHECKED f
	BIRCH_BEES_0002_PLACED x
	BIRCH_BEES_002 y
	BIRCH_CHECKED e
	CHERRY_BEES_005 C
	CHERRY_CHECKED i
	CRIMSON_FUNGI a
	DARK_OAK_CHECKED d
	FANCY_OAK_BEES B
	FANCY_OAK_BEES_0002 z
	FANCY_OAK_BEES_002 A
	FANCY_OAK_CHECKED n
	JUNGLE_BUSH s
	JUNGLE_TREE_CHECKED m
	MANGROVE_CHECKED h
	MEGA_JUNGLE_TREE_CHECKED o
	MEGA_PINE_CHECKED q
	MEGA_SPRUCE_CHECKED p
	OAK_BEES_0002 v
	OAK_BEES_002 w
	OAK_CHECKED c
	PINE_CHECKED l
	PINE_ON_SNOW j
	SPRUCE_CHECKED g
	SPRUCE_ON_SNOW k
	SUPER_BIRCH_BEES u
	SUPER_BIRCH_BEES_0002 t
	TALL_MANGROVE_CHECKED r
	WARPED_FUNGI b
	bootstrap (Lnet/minecraft/data/worldgen/BootstapContext;)V a
net/minecraft/data/worldgen/placement/VegetationPlacements pd
	BAMBOO b
	BAMBOO_LIGHT a
	BAMBOO_VEGETATION au
	BIRCH_TALL ak
	BROWN_MUSHROOM_NETHER F
	BROWN_MUSHROOM_NORMAL H
	BROWN_MUSHROOM_OLD_GROWTH L
	BROWN_MUSHROOM_SWAMP N
	BROWN_MUSHROOM_TAIGA J
	DARK_FOREST_VEGETATION X
	FLOWER_CHERRY V
	FLOWER_DEFAULT Q
	FLOWER_FLOWER_FOREST R
	FLOWER_FOREST_FLOWERS Y
	FLOWER_MEADOW U
	FLOWER_PLAINS T
	FLOWER_SWAMP S
	FLOWER_WARM P
	FOREST_FLOWERS Z
	GRASS_BONEMEAL n
	MUSHROOM_ISLAND_VEGETATION av
	PATCH_BERRY_COMMON t
	PATCH_BERRY_RARE u
	PATCH_CACTUS_DECORATED A
	PATCH_CACTUS_DESERT z
	PATCH_DEAD_BUSH p
	PATCH_DEAD_BUSH_2 o
	PATCH_DEAD_BUSH_BADLANDS q
	PATCH_GRASS_BADLANDS h
	PATCH_GRASS_FOREST g
	PATCH_GRASS_JUNGLE m
	PATCH_GRASS_NORMAL j
	PATCH_GRASS_PLAIN f
	PATCH_GRASS_SAVANNA i
	PATCH_GRASS_TAIGA l
	PATCH_GRASS_TAIGA_2 k
	PATCH_LARGE_FERN y
	PATCH_MELON r
	PATCH_MELON_SPARSE s
	PATCH_PUMPKIN e
	PATCH_SUGAR_CANE E
	PATCH_SUGAR_CANE_BADLANDS D
	PATCH_SUGAR_CANE_DESERT C
	PATCH_SUGAR_CANE_SWAMP B
	PATCH_SUNFLOWER d
	PATCH_TALL_GRASS x
	PATCH_TALL_GRASS_2 w
	PATCH_WATERLILY v
	RED_MUSHROOM_NETHER G
	RED_MUSHROOM_NORMAL I
	RED_MUSHROOM_OLD_GROWTH M
	RED_MUSHROOM_SWAMP O
	RED_MUSHROOM_TAIGA K
	TREES_BADLANDS af
	TREES_BIRCH al
	TREES_BIRCH_AND_OAK ap
	TREES_CHERRY ac
	TREES_FLOWER_FOREST aa
	TREES_GROVE ae
	TREES_JUNGLE at
	TREES_MANGROVE aw
	TREES_MEADOW ab
	TREES_OLD_GROWTH_PINE_TAIGA as
	TREES_OLD_GROWTH_SPRUCE_TAIGA ar
	TREES_PLAINS W
	TREES_SAVANNA aj
	TREES_SNOWY ag
	TREES_SPARSE_JUNGLE aq
	TREES_SWAMP ah
	TREES_TAIGA ad
	TREES_WATER ao
	TREES_WINDSWEPT_FOREST am
	TREES_WINDSWEPT_HILLS an
	TREES_WINDSWEPT_SAVANNA ai
	TREE_THRESHOLD ax
	VINES c
	bootstrap (Lnet/minecraft/data/worldgen/BootstapContext;)V a
	getMushroomPlacement (ILnet/minecraft/world/level/levelgen/placement/PlacementModifier;)Ljava/util/List; a
	treePlacement (Lnet/minecraft/world/level/levelgen/placement/PlacementModifier;)Ljava/util/List; a
	treePlacement (Lnet/minecraft/world/level/levelgen/placement/PlacementModifier;Lnet/minecraft/world/level/block/Block;)Ljava/util/List; a
	treePlacementBase (Lnet/minecraft/world/level/levelgen/placement/PlacementModifier;)Lcom/google/common/collect/ImmutableList$Builder; b
	worldSurfaceSquaredWithCount (I)Ljava/util/List; a
net/minecraft/data/worldgen/placement/VillagePlacements pe
	ACACIA_VILLAGE g
	FLOWER_PLAIN_VILLAGE k
	OAK_VILLAGE f
	PATCH_BERRY_BUSH_VILLAGE m
	PATCH_CACTUS_VILLAGE j
	PATCH_TAIGA_GRASS_VILLAGE l
	PILE_HAY_VILLAGE a
	PILE_ICE_VILLAGE d
	PILE_MELON_VILLAGE b
	PILE_PUMPKIN_VILLAGE e
	PILE_SNOW_VILLAGE c
	PINE_VILLAGE i
	SPRUCE_VILLAGE h
	bootstrap (Lnet/minecraft/data/worldgen/BootstapContext;)V a
net/minecraft/gametest/framework/AfterBatch pg
	batch ()Ljava/lang/String; a
net/minecraft/gametest/framework/BeforeBatch ph
	batch ()Ljava/lang/String; a
net/minecraft/gametest/framework/ExhaustedAttemptsException pi
net/minecraft/gametest/framework/GameTest pj
	attempts ()I g
	batch ()Ljava/lang/String; b
	required ()Z d
	requiredSuccesses ()I h
	rotationSteps ()I c
	setupTicks ()J f
	template ()Ljava/lang/String; e
	timeoutTicks ()I a
net/minecraft/gametest/framework/GameTestAssertException pk
net/minecraft/gametest/framework/GameTestAssertPosException pl
	absolutePos a
	relativePos b
	tick c
	getAbsolutePos ()Lnet/minecraft/core/BlockPos; c
	getMessageToShowAtBlock ()Ljava/lang/String; a
	getRelativePos ()Lnet/minecraft/core/BlockPos; b
net/minecraft/gametest/framework/GameTestBatch pm
	DEFAULT_BATCH_NAME a
	afterBatchFunction e
	beforeBatchFunction d
	name b
	testFunctions c
	getName ()Ljava/lang/String; a
	getTestFunctions ()Ljava/util/Collection; b
	runAfterBatchFunction (Lnet/minecraft/server/level/ServerLevel;)V b
	runBeforeBatchFunction (Lnet/minecraft/server/level/ServerLevel;)V a
net/minecraft/gametest/framework/GameTestBatchRunner pn
	LOGGER a
	allTestInfos f
	batches g
	firstTestNorthWestCorner b
	level c
	nextTestNorthWestCorner h
	testTicker d
	testsPerRow e
	createStructuresForBatch (Ljava/util/Collection;)Ljava/util/Map; a
	getTestInfos ()Ljava/util/List; a
	runBatch (I)V a
	start ()V b
net/minecraft/gametest/framework/GameTestEvent po
	assertion b
	expectedDelay a
	create (JLjava/lang/Runnable;)Lnet/minecraft/gametest/framework/GameTestEvent; a
	create (Ljava/lang/Runnable;)Lnet/minecraft/gametest/framework/GameTestEvent; a
net/minecraft/gametest/framework/GameTestGenerator pp
net/minecraft/gametest/framework/GameTestHelper pq
	finalCheckAdded b
	testInfo a
	absolutePos (Lnet/minecraft/core/BlockPos;)Lnet/minecraft/core/BlockPos; i
	absoluteVec (Lnet/minecraft/world/phys/Vec3;)Lnet/minecraft/world/phys/Vec3; a
	assertAtTickTimeContainerContains (JLnet/minecraft/core/BlockPos;Lnet/minecraft/world/item/Item;)V a
	assertAtTickTimeContainerEmpty (JLnet/minecraft/core/BlockPos;)V a
	assertBlock (Lnet/minecraft/core/BlockPos;Ljava/util/function/Predicate;Ljava/lang/String;)V a
	assertBlock (Lnet/minecraft/core/BlockPos;Ljava/util/function/Predicate;Ljava/util/function/Supplier;)V a
	assertBlockNotPresent (Lnet/minecraft/world/level/block/Block;III)V b
	assertBlockNotPresent (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/core/BlockPos;)V b
	assertBlockPresent (Lnet/minecraft/world/level/block/Block;III)V a
	assertBlockPresent (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/core/BlockPos;)V a
	assertBlockProperty (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/properties/Property;Ljava/lang/Comparable;)V a
	assertBlockProperty (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/properties/Property;Ljava/util/function/Predicate;Ljava/lang/String;)V a
	assertBlockState (Lnet/minecraft/core/BlockPos;Ljava/util/function/Predicate;Ljava/util/function/Supplier;)V b
	assertContainerContains (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/item/Item;)V a
	assertContainerEmpty (Lnet/minecraft/core/BlockPos;)V g
	assertEntitiesPresent (Lnet/minecraft/world/entity/EntityType;Lnet/minecraft/core/BlockPos;ID)V a
	assertEntityData (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/EntityType;Ljava/util/function/Function;Ljava/lang/Object;)V a
	assertEntityInstancePresent (Lnet/minecraft/world/entity/Entity;III)V a
	assertEntityInstancePresent (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/core/BlockPos;)V a
	assertEntityInventoryContains (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/EntityType;Lnet/minecraft/world/item/Item;)V b
	assertEntityIsHolding (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/EntityType;Lnet/minecraft/world/item/Item;)V a
	assertEntityNotPresent (Lnet/minecraft/world/entity/EntityType;)V b
	assertEntityNotPresent (Lnet/minecraft/world/entity/EntityType;III)V d
	assertEntityNotPresent (Lnet/minecraft/world/entity/EntityType;Lnet/minecraft/core/BlockPos;)V d
	assertEntityNotTouching (Lnet/minecraft/world/entity/EntityType;DDD)V b
	assertEntityPresent (Lnet/minecraft/world/entity/EntityType;)V a
	assertEntityPresent (Lnet/minecraft/world/entity/EntityType;III)V c
	assertEntityPresent (Lnet/minecraft/world/entity/EntityType;Lnet/minecraft/core/BlockPos;)V c
	assertEntityPresent (Lnet/minecraft/world/entity/EntityType;Lnet/minecraft/core/BlockPos;D)V a
	assertEntityPresent (Lnet/minecraft/world/entity/EntityType;Lnet/minecraft/world/phys/Vec3;Lnet/minecraft/world/phys/Vec3;)V a
	assertEntityProperty (Lnet/minecraft/world/entity/Entity;Ljava/util/function/Function;Ljava/lang/String;Ljava/lang/Object;)V a
	assertEntityProperty (Lnet/minecraft/world/entity/Entity;Ljava/util/function/Predicate;Ljava/lang/String;)V a
	assertEntityTouching (Lnet/minecraft/world/entity/EntityType;DDD)V a
	assertFalse (ZLjava/lang/String;)V b
	assertItemEntityCountIs (Lnet/minecraft/world/item/Item;Lnet/minecraft/core/BlockPos;DI)V a
	assertItemEntityNotPresent (Lnet/minecraft/world/item/Item;Lnet/minecraft/core/BlockPos;D)V b
	assertItemEntityPresent (Lnet/minecraft/world/item/Item;Lnet/minecraft/core/BlockPos;D)V a
	assertRedstoneSignal (Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;Ljava/util/function/IntPredicate;Ljava/util/function/Supplier;)V a
	assertSameBlockState (Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)V a
	assertSameBlockStates (Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Lnet/minecraft/core/BlockPos;)V a
	assertTrue (ZLjava/lang/String;)V a
	destroyBlock (Lnet/minecraft/core/BlockPos;)V f
	ensureSingleFinalCheck ()V j
	fail (Ljava/lang/String;)V a
	fail (Ljava/lang/String;Lnet/minecraft/core/BlockPos;)V a
	fail (Ljava/lang/String;Lnet/minecraft/world/entity/Entity;)V a
	failIf (Ljava/lang/Runnable;)V c
	failIfEver (Ljava/lang/Runnable;)V d
	forEveryBlockInStructure (Ljava/util/function/Consumer;)V a
	getBlockEntity (Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/entity/BlockEntity; b
	getBlockState (Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
	getBounds ()Lnet/minecraft/world/phys/AABB; k
	getEntities (Lnet/minecraft/world/entity/EntityType;Lnet/minecraft/core/BlockPos;D)Ljava/util/List; b
	getHeight (Lnet/minecraft/world/level/levelgen/Heightmap$Types;II)I a
	getLevel ()Lnet/minecraft/server/level/ServerLevel; a
	getRelativeBounds ()Lnet/minecraft/world/phys/AABB; l
	getTick ()J i
	killAllEntities ()V b
	killAllEntitiesOfClass (Ljava/lang/Class;)V a
	makeAboutToDrown (Lnet/minecraft/world/entity/LivingEntity;)Lnet/minecraft/world/entity/LivingEntity; a
	makeMockPlayer ()Lnet/minecraft/world/entity/player/Player; d
	makeMockServerPlayerInLevel ()Lnet/minecraft/server/level/ServerPlayer; e
	makeMockSurvivalPlayer ()Lnet/minecraft/world/entity/player/Player; c
	onEachTick (Ljava/lang/Runnable;)V e
	placeAt (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;)V a
	pressButton (III)V a
	pressButton (Lnet/minecraft/core/BlockPos;)V c
	pullLever (III)V b
	pullLever (Lnet/minecraft/core/BlockPos;)V e
	pulseRedstone (Lnet/minecraft/core/BlockPos;J)V a
	randomTick (Lnet/minecraft/core/BlockPos;)V h
	relativePos (Lnet/minecraft/core/BlockPos;)Lnet/minecraft/core/BlockPos; j
	relativeVec (Lnet/minecraft/world/phys/Vec3;)Lnet/minecraft/world/phys/Vec3; b
	runAfterDelay (JLjava/lang/Runnable;)V b
	runAtTickTime (JLjava/lang/Runnable;)V a
	setBlock (IIILnet/minecraft/world/level/block/Block;)V a
	setBlock (IIILnet/minecraft/world/level/block/state/BlockState;)V a
	setBlock (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Block;)V a
	setBlock (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V a
	setDayTime (I)V a
	setNight ()V f
	spawn (Lnet/minecraft/world/entity/EntityType;FFF)Lnet/minecraft/world/entity/Entity; a
	spawn (Lnet/minecraft/world/entity/EntityType;III)Lnet/minecraft/world/entity/Entity; a
	spawn (Lnet/minecraft/world/entity/EntityType;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/entity/Entity; a
	spawn (Lnet/minecraft/world/entity/EntityType;Lnet/minecraft/world/phys/Vec3;)Lnet/minecraft/world/entity/Entity; a
	spawnItem (Lnet/minecraft/world/item/Item;FFF)Lnet/minecraft/world/entity/item/ItemEntity; a
	spawnItem (Lnet/minecraft/world/item/Item;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/entity/item/ItemEntity; a
	spawnWithNoFreeWill (Lnet/minecraft/world/entity/EntityType;FFF)Lnet/minecraft/world/entity/Mob; b
	spawnWithNoFreeWill (Lnet/minecraft/world/entity/EntityType;III)Lnet/minecraft/world/entity/Mob; b
	spawnWithNoFreeWill (Lnet/minecraft/world/entity/EntityType;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/entity/Mob; b
	spawnWithNoFreeWill (Lnet/minecraft/world/entity/EntityType;Lnet/minecraft/world/phys/Vec3;)Lnet/minecraft/world/entity/Mob; b
	startSequence ()Lnet/minecraft/gametest/framework/GameTestSequence; h
	succeed ()V g
	succeedIf (Ljava/lang/Runnable;)V a
	succeedOnTickWhen (ILjava/lang/Runnable;)V a
	succeedWhen (Ljava/lang/Runnable;)V b
	succeedWhenBlockPresent (Lnet/minecraft/world/level/block/Block;III)V c
	succeedWhenBlockPresent (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/core/BlockPos;)V c
	succeedWhenEntityData (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/EntityType;Ljava/util/function/Function;Ljava/lang/Object;)V b
	succeedWhenEntityNotPresent (Lnet/minecraft/world/entity/EntityType;III)V f
	succeedWhenEntityNotPresent (Lnet/minecraft/world/entity/EntityType;Lnet/minecraft/core/BlockPos;)V f
	succeedWhenEntityPresent (Lnet/minecraft/world/entity/EntityType;III)V e
	succeedWhenEntityPresent (Lnet/minecraft/world/entity/EntityType;Lnet/minecraft/core/BlockPos;)V e
	useBlock (Lnet/minecraft/core/BlockPos;)V d
	useBlock (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/player/Player;)V a
	useBlock (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/phys/BlockHitResult;)V a
	walkTo (Lnet/minecraft/world/entity/Mob;Lnet/minecraft/core/BlockPos;F)Lnet/minecraft/gametest/framework/GameTestSequence; a
	withLowHealth (Lnet/minecraft/world/entity/LivingEntity;)Lnet/minecraft/world/entity/LivingEntity; b
net/minecraft/gametest/framework/GameTestInfo pr
	done l
	error n
	level c
	listeners d
	rotation m
	runAtTickTimeMap g
	sequences f
	startTick h
	started j
	structureBlockEntity o
	structureBlockPos b
	testFunction a
	tickCount i
	timeoutTicks e
	timer k
	addListener (Lnet/minecraft/gametest/framework/GameTestListener;)V a
	clearStructure ()V o
	createSequence ()Lnet/minecraft/gametest/framework/GameTestSequence; q
	fail (Ljava/lang/Throwable;)V a
	finish ()V D
	getError ()Ljava/lang/Throwable; n
	getLevel ()Lnet/minecraft/server/level/ServerLevel; g
	getRotation ()Lnet/minecraft/world/level/block/Rotation; u
	getRunTime ()J l
	getStructureBlockEntity ()Lnet/minecraft/world/level/block/entity/StructureBlockEntity; C
	getStructureBlockPos ()Lnet/minecraft/core/BlockPos; d
	getStructureBounds ()Lnet/minecraft/world/phys/AABB; f
	getStructureName ()Ljava/lang/String; t
	getStructureSize ()Lnet/minecraft/core/Vec3i; e
	getTestFunction ()Lnet/minecraft/gametest/framework/TestFunction; v
	getTestName ()Ljava/lang/String; c
	getTick ()J p
	getTimeoutTicks ()I w
	hasFailed ()Z i
	hasStarted ()Z j
	hasSucceeded ()Z h
	isDone ()Z k
	isFlaky ()Z x
	isOptional ()Z s
	isRequired ()Z r
	maxAttempts ()I y
	requiredSuccesses ()I z
	setRunAtTickTime (JLjava/lang/Runnable;)V a
	setStructureBlockPos (Lnet/minecraft/core/BlockPos;)V a
	spawnStructure (Lnet/minecraft/core/BlockPos;I)V a
	startExecution ()V a
	startTest ()V B
	succeed ()V m
	tick ()V b
	tickInternal ()V A
net/minecraft/gametest/framework/GameTestListener ps
	testFailed (Lnet/minecraft/gametest/framework/GameTestInfo;)V c
	testPassed (Lnet/minecraft/gametest/framework/GameTestInfo;)V b
	testStructureLoaded (Lnet/minecraft/gametest/framework/GameTestInfo;)V a
net/minecraft/gametest/framework/GameTestRegistry pt
	AFTER_BATCH_FUNCTIONS d
	BEFORE_BATCH_FUNCTIONS c
	LAST_FAILED_TESTS e
	TEST_CLASS_NAMES b
	TEST_FUNCTIONS a
	findTestFunction (Ljava/lang/String;)Ljava/util/Optional; e
	forgetFailedTests ()V d
	getAfterBatchFunction (Ljava/lang/String;)Ljava/util/function/Consumer; d
	getAllTestClassNames ()Ljava/util/Collection; b
	getAllTestFunctions ()Ljava/util/Collection; a
	getBeforeBatchFunction (Ljava/lang/String;)Ljava/util/function/Consumer; c
	getLastFailedTests ()Ljava/util/Collection; c
	getTestFunction (Ljava/lang/String;)Lnet/minecraft/gametest/framework/TestFunction; f
	getTestFunctionsForClassName (Ljava/lang/String;)Ljava/util/Collection; a
	isTestClass (Ljava/lang/String;)Z b
	isTestFunctionPartOfClass (Lnet/minecraft/gametest/framework/TestFunction;Ljava/lang/String;)Z a
	register (Ljava/lang/Class;)V a
	register (Ljava/lang/reflect/Method;)V a
	registerBatchFunction (Ljava/lang/reflect/Method;Ljava/lang/Class;Ljava/util/function/Function;Ljava/util/Map;)V a
	rememberFailedTest (Lnet/minecraft/gametest/framework/TestFunction;)V a
	turnMethodIntoConsumer (Ljava/lang/reflect/Method;)Ljava/util/function/Consumer; d
	turnMethodIntoTestFunction (Ljava/lang/reflect/Method;)Lnet/minecraft/gametest/framework/TestFunction; c
	useTestGeneratorMethod (Ljava/lang/reflect/Method;)Ljava/util/Collection; b
net/minecraft/gametest/framework/GameTestRunner pu
	DEFAULT_TESTS_PER_ROW d
	MAX_TESTS_PER_BATCH e
	PADDING_AROUND_EACH_STRUCTURE a
	SPACE_BETWEEN_COLUMNS b
	SPACE_BETWEEN_ROWS c
	clearAllTests (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Lnet/minecraft/gametest/framework/GameTestTicker;I)V a
	clearMarkers (Lnet/minecraft/server/level/ServerLevel;)V a
	groupTestsIntoBatches (Ljava/util/Collection;)Ljava/util/Collection; a
	runTest (Lnet/minecraft/gametest/framework/GameTestInfo;Lnet/minecraft/core/BlockPos;Lnet/minecraft/gametest/framework/GameTestTicker;)V a
	runTestBatches (Ljava/util/Collection;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Rotation;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/gametest/framework/GameTestTicker;I)Ljava/util/Collection; a
	runTests (Ljava/util/Collection;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Rotation;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/gametest/framework/GameTestTicker;I)Ljava/util/Collection; b
net/minecraft/gametest/framework/GameTestSequence pv
	events b
	lastTick c
	parent a
	executeWithoutFail (Ljava/lang/Runnable;)V c
	thenExecute (Ljava/lang/Runnable;)Lnet/minecraft/gametest/framework/GameTestSequence; b
	thenExecuteAfter (ILjava/lang/Runnable;)Lnet/minecraft/gametest/framework/GameTestSequence; a
	thenExecuteFor (ILjava/lang/Runnable;)Lnet/minecraft/gametest/framework/GameTestSequence; b
	thenFail (Ljava/util/function/Supplier;)V a
	thenIdle (I)Lnet/minecraft/gametest/framework/GameTestSequence; a
	thenSucceed ()V a
	thenTrigger ()Lnet/minecraft/gametest/framework/GameTestSequence$Condition; b
	thenWaitUntil (JLjava/lang/Runnable;)Lnet/minecraft/gametest/framework/GameTestSequence; a
	thenWaitUntil (Ljava/lang/Runnable;)Lnet/minecraft/gametest/framework/GameTestSequence; a
	tick (J)V c
	tickAndContinue (J)V a
	tickAndFailIfNotComplete (J)V b
net/minecraft/gametest/framework/GameTestSequence$Condition pv$a
	NOT_TRIGGERED b
	triggerTime c
	assertTriggeredThisTick ()V a
	trigger (J)V a
net/minecraft/gametest/framework/GameTestServer pw
	LOGGER n
	NO_SERVICES p
	PROGRESS_REPORT_INTERVAL o
	TEST_GAME_RULES s
	WORLD_OPTIONS t
	spawnPos r
	testBatches q
	testTracker u
	create (Ljava/lang/Thread;Lnet/minecraft/world/level/storage/LevelStorageSource$LevelStorageAccess;Lnet/minecraft/server/packs/repository/PackRepository;Ljava/util/Collection;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/gametest/framework/GameTestServer; a
	fillServerSystemReport (Lnet/minecraft/SystemReport;)Lnet/minecraft/SystemReport; a
	getFunctionCompilationLevel ()I j
	getOperatorUserPermissionLevel ()I i
	getRateLimitPacketsPerSecond ()I m
	haveTestsStarted ()Z bf
	initServer ()Z e
	isCommandBlockEnabled ()Z o
	isDedicatedServer ()Z l
	isEpollEnabled ()Z n
	isHardcore ()Z h
	isPublished ()Z p
	isSingleplayerOwner (Lcom/mojang/authlib/GameProfile;)Z a
	onServerCrash (Lnet/minecraft/CrashReport;)V a
	onServerExit ()V g
	shouldInformAdmins ()Z N_
	shouldRconBroadcast ()Z k
	startTests (Lnet/minecraft/server/level/ServerLevel;)V b
	tickServer (Ljava/util/function/BooleanSupplier;)V a
	waitUntilNextTick ()V p_
net/minecraft/gametest/framework/GameTestTicker px
	SINGLETON a
	testInfos b
	add (Lnet/minecraft/gametest/framework/GameTestInfo;)V a
	clear ()V a
	tick ()V b
net/minecraft/gametest/framework/GameTestTimeoutException py
net/minecraft/gametest/framework/GlobalTestReporter pz
	DELEGATE a
	finish ()V a
	onTestFailed (Lnet/minecraft/gametest/framework/GameTestInfo;)V a
	onTestSuccess (Lnet/minecraft/gametest/framework/GameTestInfo;)V b
	replaceWith (Lnet/minecraft/gametest/framework/TestReporter;)V a
net/minecraft/gametest/framework/JUnitLikeTestReporter qa
	destination d
	document a
	stopwatch c
	testSuite b
	createTestCase (Lnet/minecraft/gametest/framework/GameTestInfo;Ljava/lang/String;)Lorg/w3c/dom/Element; a
	finish ()V a
	onTestFailed (Lnet/minecraft/gametest/framework/GameTestInfo;)V a
	onTestSuccess (Lnet/minecraft/gametest/framework/GameTestInfo;)V b
	save (Ljava/io/File;)V a
net/minecraft/gametest/framework/LogTestReporter qb
	LOGGER a
	onTestFailed (Lnet/minecraft/gametest/framework/GameTestInfo;)V a
	onTestSuccess (Lnet/minecraft/gametest/framework/GameTestInfo;)V b
net/minecraft/gametest/framework/MultipleTestTracker qc
	FAILED_OPTIONAL_TEST_CHAR d
	FAILED_REQUIRED_TEST_CHAR e
	NOT_STARTED_TEST_CHAR a
	ONGOING_TEST_CHAR b
	SUCCESSFUL_TEST_CHAR c
	listeners g
	tests f
	addFailureListener (Ljava/util/function/Consumer;)V a
	addListener (Lnet/minecraft/gametest/framework/GameTestListener;)V a
	addTestToTrack (Lnet/minecraft/gametest/framework/GameTestInfo;)V a
	getDoneCount ()I c
	getFailedOptional ()Ljava/util/Collection; g
	getFailedOptionalCount ()I b
	getFailedRequired ()Ljava/util/Collection; f
	getFailedRequiredCount ()I a
	getProgressBar ()Ljava/lang/String; j
	getTotalCount ()I h
	hasFailedOptional ()Z e
	hasFailedRequired ()Z d
	isDone ()Z i
net/minecraft/gametest/framework/ReportGameListener qd
	attempts a
	originalTestInfo c
	structurePos e
	successes b
	testTicker d
	createBook (Ljava/lang/String;ZLjava/lang/String;)Lnet/minecraft/world/item/ItemStack; a
	reportFailure (Lnet/minecraft/gametest/framework/GameTestInfo;Ljava/lang/Throwable;)V a
	reportPassed (Lnet/minecraft/gametest/framework/GameTestInfo;Ljava/lang/String;)V a
	rerunTest ()V a
	say (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/ChatFormatting;Ljava/lang/String;)V a
	showRedBox (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Ljava/lang/String;)V a
	spawnBeacon (Lnet/minecraft/gametest/framework/GameTestInfo;Lnet/minecraft/world/level/block/Block;)V a
	spawnLectern (Lnet/minecraft/gametest/framework/GameTestInfo;Ljava/lang/String;)V c
	testFailed (Lnet/minecraft/gametest/framework/GameTestInfo;)V c
	testPassed (Lnet/minecraft/gametest/framework/GameTestInfo;)V b
	testStructureLoaded (Lnet/minecraft/gametest/framework/GameTestInfo;)V a
	visualizeFailedTest (Lnet/minecraft/gametest/framework/GameTestInfo;Ljava/lang/Throwable;)V b
	visualizePassedTest (Lnet/minecraft/gametest/framework/GameTestInfo;Ljava/lang/String;)V b
net/minecraft/gametest/framework/StructureUtils qe
	DEFAULT_TEST_STRUCTURES_DIR a
	HOW_MANY_CHUNKS_TO_LOAD_IN_EACH_DIRECTION_OF_STRUCTURE d
	LOGGER c
	testStructuresDir b
	addCommandBlockAndButtonToStartTest (Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Rotation;Lnet/minecraft/server/level/ServerLevel;)V a
	clearBlock (ILnet/minecraft/core/BlockPos;Lnet/minecraft/server/level/ServerLevel;)V a
	clearSpaceForStructure (Lnet/minecraft/world/level/levelgen/structure/BoundingBox;ILnet/minecraft/server/level/ServerLevel;)V a
	createNewEmptyStructureBlock (Ljava/lang/String;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Vec3i;Lnet/minecraft/world/level/block/Rotation;Lnet/minecraft/server/level/ServerLevel;)V a
	createStructureBlock (Ljava/lang/String;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Rotation;Lnet/minecraft/server/level/ServerLevel;Z)Lnet/minecraft/world/level/block/entity/StructureBlockEntity; a
	doesStructureContain (Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;Lnet/minecraft/server/level/ServerLevel;)Z a
	findNearestStructureBlock (Lnet/minecraft/core/BlockPos;ILnet/minecraft/server/level/ServerLevel;)Lnet/minecraft/core/BlockPos; b
	findStructureBlockContainingPos (Lnet/minecraft/core/BlockPos;ILnet/minecraft/server/level/ServerLevel;)Ljava/util/Optional; a
	findStructureBlocks (Lnet/minecraft/core/BlockPos;ILnet/minecraft/server/level/ServerLevel;)Ljava/util/Collection; c
	forceLoadChunks (Lnet/minecraft/core/BlockPos;Lnet/minecraft/server/level/ServerLevel;)V a
	getRotationForRotationSteps (I)Lnet/minecraft/world/level/block/Rotation; a
	getRotationStepsForRotation (Lnet/minecraft/world/level/block/Rotation;)I a
	getStructureBoundingBox (Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Vec3i;Lnet/minecraft/world/level/block/Rotation;)Lnet/minecraft/world/level/levelgen/structure/BoundingBox; a
	getStructureBoundingBox (Lnet/minecraft/world/level/block/entity/StructureBlockEntity;)Lnet/minecraft/world/level/levelgen/structure/BoundingBox; b
	getStructureBounds (Lnet/minecraft/world/level/block/entity/StructureBlockEntity;)Lnet/minecraft/world/phys/AABB; a
	getStructureTemplate (Ljava/lang/String;Lnet/minecraft/server/level/ServerLevel;)Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplate; a
	main ([Ljava/lang/String;)V a
	spawnStructure (Ljava/lang/String;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Rotation;ILnet/minecraft/server/level/ServerLevel;Z)Lnet/minecraft/world/level/block/entity/StructureBlockEntity; a
	tryLoadStructure (Ljava/nio/file/Path;)Lnet/minecraft/nbt/CompoundTag; a
net/minecraft/gametest/framework/TeamcityTestReporter qf
	ESCAPER b
	LOGGER a
	onTestFailed (Lnet/minecraft/gametest/framework/GameTestInfo;)V a
	onTestSuccess (Lnet/minecraft/gametest/framework/GameTestInfo;)V b
net/minecraft/gametest/framework/TestClassNameArgument qg
	EXAMPLES a
	getTestClassName (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Ljava/lang/String; a
	parse (Lcom/mojang/brigadier/StringReader;)Ljava/lang/String; a
	testClassName ()Lnet/minecraft/gametest/framework/TestClassNameArgument; a
net/minecraft/gametest/framework/TestCommand qh
	DEFAULT_CLEAR_RADIUS a
	DEFAULT_X_SIZE g
	DEFAULT_Y_SIZE h
	DEFAULT_Z_SIZE i
	MAX_CLEAR_RADIUS b
	SHOW_POS_DURATION_MS f
	STRUCTURE_BLOCK_FULL_SEARCH_RADIUS d
	STRUCTURE_BLOCK_NEARBY_SEARCH_RADIUS c
	TEST_POS_Z_OFFSET_FROM_PLAYER e
	clearAllTests (Lnet/minecraft/commands/CommandSourceStack;I)I a
	createNewStructure (Lnet/minecraft/commands/CommandSourceStack;Ljava/lang/String;III)I a
	exportNearestTestStructure (Lnet/minecraft/commands/CommandSourceStack;)I c
	exportTestStructure (Lnet/minecraft/commands/CommandSourceStack;Ljava/lang/String;)I c
	importTestStructure (Lnet/minecraft/commands/CommandSourceStack;Ljava/lang/String;)I d
	register (Lcom/mojang/brigadier/CommandDispatcher;)V a
	runAllNearbyTests (Lnet/minecraft/commands/CommandSourceStack;)I b
	runAllTests (Lnet/minecraft/commands/CommandSourceStack;II)I a
	runAllTestsInClass (Lnet/minecraft/commands/CommandSourceStack;Ljava/lang/String;II)I a
	runLastFailedTests (Lnet/minecraft/commands/CommandSourceStack;ZII)I a
	runNearbyTest (Lnet/minecraft/commands/CommandSourceStack;)I a
	runTest (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/gametest/framework/TestFunction;I)I a
	runTest (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Lnet/minecraft/gametest/framework/MultipleTestTracker;)V a
	runTestPreparation (Lnet/minecraft/gametest/framework/TestFunction;Lnet/minecraft/server/level/ServerLevel;)V a
	runTests (Lnet/minecraft/commands/CommandSourceStack;Ljava/util/Collection;II)V a
	say (Lnet/minecraft/commands/CommandSourceStack;Ljava/lang/String;)V b
	say (Lnet/minecraft/server/level/ServerLevel;Ljava/lang/String;Lnet/minecraft/ChatFormatting;)V a
	showPos (Lnet/minecraft/commands/CommandSourceStack;Ljava/lang/String;)I a
	showTestSummaryIfAllDone (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/gametest/framework/MultipleTestTracker;)V a
net/minecraft/gametest/framework/TestCommand$TestSummaryDisplayer qh$a
	level a
	tracker b
	testFailed (Lnet/minecraft/gametest/framework/GameTestInfo;)V c
	testPassed (Lnet/minecraft/gametest/framework/GameTestInfo;)V b
	testStructureLoaded (Lnet/minecraft/gametest/framework/GameTestInfo;)V a
net/minecraft/gametest/framework/TestFunction qi
	batchName a
	function g
	maxAttempts e
	maxTicks h
	required d
	requiredSuccesses f
	rotation j
	setupTicks i
	structureName c
	testName b
	getBatchName ()Ljava/lang/String; e
	getMaxAttempts ()I i
	getMaxTicks ()I c
	getRequiredSuccesses ()I j
	getRotation ()Lnet/minecraft/world/level/block/Rotation; g
	getSetupTicks ()J f
	getStructureName ()Ljava/lang/String; b
	getTestName ()Ljava/lang/String; a
	isFlaky ()Z h
	isRequired ()Z d
	run (Lnet/minecraft/gametest/framework/GameTestHelper;)V a
net/minecraft/gametest/framework/TestFunctionArgument qj
	EXAMPLES a
	getTestFunction (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)Lnet/minecraft/gametest/framework/TestFunction; a
	parse (Lcom/mojang/brigadier/StringReader;)Lnet/minecraft/gametest/framework/TestFunction; a
	testFunctionArgument ()Lnet/minecraft/gametest/framework/TestFunctionArgument; a
net/minecraft/gametest/framework/TestReporter qk
	finish ()V a
	onTestFailed (Lnet/minecraft/gametest/framework/GameTestInfo;)V a
	onTestSuccess (Lnet/minecraft/gametest/framework/GameTestInfo;)V b
net/minecraft/locale/Language qm
	DEFAULT a
	GSON c
	LOGGER b
	UNSUPPORTED_FORMAT_PATTERN d
	instance e
	getInstance ()Lnet/minecraft/locale/Language; a
	getOrDefault (Ljava/lang/String;)Ljava/lang/String; a
	getOrDefault (Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; a
	getVisualOrder (Ljava/util/List;)Ljava/util/List; a
	getVisualOrder (Lnet/minecraft/network/chat/FormattedText;)Lnet/minecraft/util/FormattedCharSequence; a
	has (Ljava/lang/String;)Z b
	inject (Lnet/minecraft/locale/Language;)V a
	isDefaultRightToLeft ()Z b
	loadDefault ()Lnet/minecraft/locale/Language; c
	loadFromJson (Ljava/io/InputStream;Ljava/util/function/BiConsumer;)V a
	parseTranslations (Ljava/util/function/BiConsumer;Ljava/lang/String;)V a
net/minecraft/nbt/ByteArrayTag qo
	SELF_SIZE_IN_BYTES b
	TYPE a
	data c
	accept (Lnet/minecraft/nbt/StreamTagVisitor;)Lnet/minecraft/nbt/StreamTagVisitor$ValueResult; a
	accept (Lnet/minecraft/nbt/TagVisitor;)V a
	add (ILnet/minecraft/nbt/ByteTag;)V b
	add (ILnet/minecraft/nbt/Tag;)V c
	addTag (ILnet/minecraft/nbt/Tag;)Z b
	copy ()Lnet/minecraft/nbt/Tag; d
	get (I)Lnet/minecraft/nbt/ByteTag; a
	getAsByteArray ()[B e
	getElementType ()B f
	getId ()B b
	getType ()Lnet/minecraft/nbt/TagType; c
	remove (I)Lnet/minecraft/nbt/ByteTag; b
	remove (I)Lnet/minecraft/nbt/Tag; c
	set (ILnet/minecraft/nbt/ByteTag;)Lnet/minecraft/nbt/ByteTag; a
	set (ILnet/minecraft/nbt/Tag;)Lnet/minecraft/nbt/Tag; d
	setTag (ILnet/minecraft/nbt/Tag;)Z a
	sizeInBytes ()I a
	toArray (Ljava/util/List;)[B a
	write (Ljava/io/DataOutput;)V a
net/minecraft/nbt/ByteTag qp
	ONE c
	SELF_SIZE_IN_BYTES w
	TYPE a
	ZERO b
	data x
	accept (Lnet/minecraft/nbt/StreamTagVisitor;)Lnet/minecraft/nbt/StreamTagVisitor$ValueResult; a
	accept (Lnet/minecraft/nbt/TagVisitor;)V a
	copy ()Lnet/minecraft/nbt/ByteTag; e
	copy ()Lnet/minecraft/nbt/Tag; d
	getAsByte ()B i
	getAsDouble ()D j
	getAsFloat ()F k
	getAsInt ()I g
	getAsLong ()J f
	getAsNumber ()Ljava/lang/Number; l
	getAsShort ()S h
	getId ()B b
	getType ()Lnet/minecraft/nbt/TagType; c
	sizeInBytes ()I a
	valueOf (B)Lnet/minecraft/nbt/ByteTag; a
	valueOf (Z)Lnet/minecraft/nbt/ByteTag; a
	write (Ljava/io/DataOutput;)V a
net/minecraft/nbt/ByteTag$Cache qp$a
	cache a
net/minecraft/nbt/CollectionTag qq
	add (ILnet/minecraft/nbt/Tag;)V c
	addTag (ILnet/minecraft/nbt/Tag;)Z b
	getElementType ()B f
	remove (I)Lnet/minecraft/nbt/Tag; c
	set (ILnet/minecraft/nbt/Tag;)Lnet/minecraft/nbt/Tag; d
	setTag (ILnet/minecraft/nbt/Tag;)Z a
net/minecraft/nbt/CompoundTag qr
	CODEC a
	MAP_ENTRY_SIZE_IN_BYTES w
	SELF_SIZE_IN_BYTES c
	TYPE b
	tags x
	accept (Lnet/minecraft/nbt/StreamTagVisitor;)Lnet/minecraft/nbt/StreamTagVisitor$ValueResult; a
	accept (Lnet/minecraft/nbt/TagVisitor;)V a
	contains (Ljava/lang/String;)Z e
	contains (Ljava/lang/String;I)Z b
	copy ()Lnet/minecraft/nbt/CompoundTag; h
	copy ()Lnet/minecraft/nbt/Tag; d
	createReport (Ljava/lang/String;Lnet/minecraft/nbt/TagType;Ljava/lang/ClassCastException;)Lnet/minecraft/CrashReport; a
	entries ()Ljava/util/Map; i
	get (Ljava/lang/String;)Lnet/minecraft/nbt/Tag; c
	getAllKeys ()Ljava/util/Set; e
	getBoolean (Ljava/lang/String;)Z q
	getByte (Ljava/lang/String;)B f
	getByteArray (Ljava/lang/String;)[B m
	getCompound (Ljava/lang/String;)Lnet/minecraft/nbt/CompoundTag; p
	getDouble (Ljava/lang/String;)D k
	getFloat (Ljava/lang/String;)F j
	getId ()B b
	getInt (Ljava/lang/String;)I h
	getIntArray (Ljava/lang/String;)[I n
	getList (Ljava/lang/String;I)Lnet/minecraft/nbt/ListTag; c
	getLong (Ljava/lang/String;)J i
	getLongArray (Ljava/lang/String;)[J o
	getShort (Ljava/lang/String;)S g
	getString (Ljava/lang/String;)Ljava/lang/String; l
	getTagType (Ljava/lang/String;)B d
	getType ()Lnet/minecraft/nbt/TagType; c
	getUUID (Ljava/lang/String;)Ljava/util/UUID; a
	hasUUID (Ljava/lang/String;)Z b
	isEmpty ()Z g
	merge (Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/nbt/CompoundTag; a
	put (Ljava/lang/String;Lnet/minecraft/nbt/Tag;)Lnet/minecraft/nbt/Tag; a
	putBoolean (Ljava/lang/String;Z)V a
	putByte (Ljava/lang/String;B)V a
	putByteArray (Ljava/lang/String;Ljava/util/List;)V a
	putByteArray (Ljava/lang/String;[B)V a
	putDouble (Ljava/lang/String;D)V a
	putFloat (Ljava/lang/String;F)V a
	putInt (Ljava/lang/String;I)V a
	putIntArray (Ljava/lang/String;Ljava/util/List;)V b
	putIntArray (Ljava/lang/String;[I)V a
	putLong (Ljava/lang/String;J)V a
	putLongArray (Ljava/lang/String;Ljava/util/List;)V c
	putLongArray (Ljava/lang/String;[J)V a
	putShort (Ljava/lang/String;S)V a
	putString (Ljava/lang/String;Ljava/lang/String;)V a
	putUUID (Ljava/lang/String;Ljava/util/UUID;)V a
	readNamedTagData (Lnet/minecraft/nbt/TagType;Ljava/lang/String;Ljava/io/DataInput;ILnet/minecraft/nbt/NbtAccounter;)Lnet/minecraft/nbt/Tag; a
	readNamedTagName (Ljava/io/DataInput;Lnet/minecraft/nbt/NbtAccounter;)Ljava/lang/String; b
	readNamedTagType (Ljava/io/DataInput;Lnet/minecraft/nbt/NbtAccounter;)B a
	remove (Ljava/lang/String;)V r
	size ()I f
	sizeInBytes ()I a
	write (Ljava/io/DataOutput;)V a
	writeNamedTag (Ljava/lang/String;Lnet/minecraft/nbt/Tag;Ljava/io/DataOutput;)V a
net/minecraft/nbt/DoubleTag qs
	SELF_SIZE_IN_BYTES c
	TYPE b
	ZERO a
	data w
	accept (Lnet/minecraft/nbt/StreamTagVisitor;)Lnet/minecraft/nbt/StreamTagVisitor$ValueResult; a
	accept (Lnet/minecraft/nbt/TagVisitor;)V a
	copy ()Lnet/minecraft/nbt/DoubleTag; e
	copy ()Lnet/minecraft/nbt/Tag; d
	getAsByte ()B i
	getAsDouble ()D j
	getAsFloat ()F k
	getAsInt ()I g
	getAsLong ()J f
	getAsNumber ()Ljava/lang/Number; l
	getAsShort ()S h
	getId ()B b
	getType ()Lnet/minecraft/nbt/TagType; c
	sizeInBytes ()I a
	valueOf (D)Lnet/minecraft/nbt/DoubleTag; a
	write (Ljava/io/DataOutput;)V a
net/minecraft/nbt/EndTag qt
	INSTANCE b
	SELF_SIZE_IN_BYTES c
	TYPE a
	accept (Lnet/minecraft/nbt/StreamTagVisitor;)Lnet/minecraft/nbt/StreamTagVisitor$ValueResult; a
	accept (Lnet/minecraft/nbt/TagVisitor;)V a
	copy ()Lnet/minecraft/nbt/EndTag; e
	copy ()Lnet/minecraft/nbt/Tag; d
	getId ()B b
	getType ()Lnet/minecraft/nbt/TagType; c
	sizeInBytes ()I a
	write (Ljava/io/DataOutput;)V a
net/minecraft/nbt/FloatTag qu
	SELF_SIZE_IN_BYTES c
	TYPE b
	ZERO a
	data w
	accept (Lnet/minecraft/nbt/StreamTagVisitor;)Lnet/minecraft/nbt/StreamTagVisitor$ValueResult; a
	accept (Lnet/minecraft/nbt/TagVisitor;)V a
	copy ()Lnet/minecraft/nbt/FloatTag; e
	copy ()Lnet/minecraft/nbt/Tag; d
	getAsByte ()B i
	getAsDouble ()D j
	getAsFloat ()F k
	getAsInt ()I g
	getAsLong ()J f
	getAsNumber ()Ljava/lang/Number; l
	getAsShort ()S h
	getId ()B b
	getType ()Lnet/minecraft/nbt/TagType; c
	sizeInBytes ()I a
	valueOf (F)Lnet/minecraft/nbt/FloatTag; a
	write (Ljava/io/DataOutput;)V a
net/minecraft/nbt/IntArrayTag qv
	SELF_SIZE_IN_BYTES b
	TYPE a
	data c
	accept (Lnet/minecraft/nbt/StreamTagVisitor;)Lnet/minecraft/nbt/StreamTagVisitor$ValueResult; a
	accept (Lnet/minecraft/nbt/TagVisitor;)V a
	add (ILnet/minecraft/nbt/IntTag;)V b
	add (ILnet/minecraft/nbt/Tag;)V c
	addTag (ILnet/minecraft/nbt/Tag;)Z b
	copy ()Lnet/minecraft/nbt/IntArrayTag; e
	copy ()Lnet/minecraft/nbt/Tag; d
	get (I)Lnet/minecraft/nbt/IntTag; a
	getAsIntArray ()[I g
	getElementType ()B f
	getId ()B b
	getType ()Lnet/minecraft/nbt/TagType; c
	remove (I)Lnet/minecraft/nbt/IntTag; b
	remove (I)Lnet/minecraft/nbt/Tag; c
	set (ILnet/minecraft/nbt/IntTag;)Lnet/minecraft/nbt/IntTag; a
	set (ILnet/minecraft/nbt/Tag;)Lnet/minecraft/nbt/Tag; d
	setTag (ILnet/minecraft/nbt/Tag;)Z a
	sizeInBytes ()I a
	toArray (Ljava/util/List;)[I a
	write (Ljava/io/DataOutput;)V a
net/minecraft/nbt/IntTag qw
	SELF_SIZE_IN_BYTES b
	TYPE a
	data c
	accept (Lnet/minecraft/nbt/StreamTagVisitor;)Lnet/minecraft/nbt/StreamTagVisitor$ValueResult; a
	accept (Lnet/minecraft/nbt/TagVisitor;)V a
	copy ()Lnet/minecraft/nbt/IntTag; e
	copy ()Lnet/minecraft/nbt/Tag; d
	getAsByte ()B i
	getAsDouble ()D j
	getAsFloat ()F k
	getAsInt ()I g
	getAsLong ()J f
	getAsNumber ()Ljava/lang/Number; l
	getAsShort ()S h
	getId ()B b
	getType ()Lnet/minecraft/nbt/TagType; c
	sizeInBytes ()I a
	valueOf (I)Lnet/minecraft/nbt/IntTag; a
	write (Ljava/io/DataOutput;)V a
net/minecraft/nbt/IntTag$Cache qw$a
	HIGH b
	LOW c
	cache a
net/minecraft/nbt/ListTag qx
	SELF_SIZE_IN_BYTES b
	TYPE a
	list c
	type w
	accept (Lnet/minecraft/nbt/StreamTagVisitor;)Lnet/minecraft/nbt/StreamTagVisitor$ValueResult; a
	accept (Lnet/minecraft/nbt/TagVisitor;)V a
	add (ILnet/minecraft/nbt/Tag;)V c
	addTag (ILnet/minecraft/nbt/Tag;)Z b
	copy ()Lnet/minecraft/nbt/ListTag; e
	copy ()Lnet/minecraft/nbt/Tag; d
	get (I)Lnet/minecraft/nbt/Tag; k
	getCompound (I)Lnet/minecraft/nbt/CompoundTag; a
	getDouble (I)D h
	getElementType ()B f
	getFloat (I)F i
	getId ()B b
	getInt (I)I e
	getIntArray (I)[I f
	getList (I)Lnet/minecraft/nbt/ListTag; b
	getLongArray (I)[J g
	getShort (I)S d
	getString (I)Ljava/lang/String; j
	getType ()Lnet/minecraft/nbt/TagType; c
	remove (I)Lnet/minecraft/nbt/Tag; c
	set (ILnet/minecraft/nbt/Tag;)Lnet/minecraft/nbt/Tag; d
	setTag (ILnet/minecraft/nbt/Tag;)Z a
	sizeInBytes ()I a
	updateType (Lnet/minecraft/nbt/Tag;)Z a
	updateTypeAfterRemove ()V g
	write (Ljava/io/DataOutput;)V a
net/minecraft/nbt/LongArrayTag qy
	SELF_SIZE_IN_BYTES b
	TYPE a
	data c
	accept (Lnet/minecraft/nbt/StreamTagVisitor;)Lnet/minecraft/nbt/StreamTagVisitor$ValueResult; a
	accept (Lnet/minecraft/nbt/TagVisitor;)V a
	add (ILnet/minecraft/nbt/LongTag;)V b
	add (ILnet/minecraft/nbt/Tag;)V c
	addTag (ILnet/minecraft/nbt/Tag;)Z b
	copy ()Lnet/minecraft/nbt/LongArrayTag; e
	copy ()Lnet/minecraft/nbt/Tag; d
	get (I)Lnet/minecraft/nbt/LongTag; a
	getAsLongArray ()[J g
	getElementType ()B f
	getId ()B b
	getType ()Lnet/minecraft/nbt/TagType; c
	remove (I)Lnet/minecraft/nbt/LongTag; b
	remove (I)Lnet/minecraft/nbt/Tag; c
	set (ILnet/minecraft/nbt/LongTag;)Lnet/minecraft/nbt/LongTag; a
	set (ILnet/minecraft/nbt/Tag;)Lnet/minecraft/nbt/Tag; d
	setTag (ILnet/minecraft/nbt/Tag;)Z a
	sizeInBytes ()I a
	toArray (Ljava/util/List;)[J a
	write (Ljava/io/DataOutput;)V a
net/minecraft/nbt/LongTag qz
	SELF_SIZE_IN_BYTES b
	TYPE a
	data c
	accept (Lnet/minecraft/nbt/StreamTagVisitor;)Lnet/minecraft/nbt/StreamTagVisitor$ValueResult; a
	accept (Lnet/minecraft/nbt/TagVisitor;)V a
	copy ()Lnet/minecraft/nbt/LongTag; e
	copy ()Lnet/minecraft/nbt/Tag; d
	getAsByte ()B i
	getAsDouble ()D j
	getAsFloat ()F k
	getAsInt ()I g
	getAsLong ()J f
	getAsNumber ()Ljava/lang/Number; l
	getAsShort ()S h
	getId ()B b
	getType ()Lnet/minecraft/nbt/TagType; c
	sizeInBytes ()I a
	valueOf (J)Lnet/minecraft/nbt/LongTag; a
	write (Ljava/io/DataOutput;)V a
net/minecraft/nbt/LongTag$Cache qz$a
	HIGH b
	LOW c
	cache a
net/minecraft/nbt/NbtAccounter ra
	UNLIMITED a
	quota b
	usage c
	accountBytes (J)V a
	getUsage ()J a
net/minecraft/nbt/NbtIo rb
	createDecompressorStream (Ljava/io/InputStream;)Ljava/io/DataInputStream; b
	parse (Ljava/io/DataInput;Lnet/minecraft/nbt/StreamTagVisitor;)V a
	parseCompressed (Ljava/io/File;Lnet/minecraft/nbt/StreamTagVisitor;)V a
	parseCompressed (Ljava/io/InputStream;Lnet/minecraft/nbt/StreamTagVisitor;)V a
	read (Ljava/io/DataInput;)Lnet/minecraft/nbt/CompoundTag; a
	read (Ljava/io/DataInput;Lnet/minecraft/nbt/NbtAccounter;)Lnet/minecraft/nbt/CompoundTag; a
	read (Ljava/io/File;)Lnet/minecraft/nbt/CompoundTag; b
	readCompressed (Ljava/io/File;)Lnet/minecraft/nbt/CompoundTag; a
	readCompressed (Ljava/io/InputStream;)Lnet/minecraft/nbt/CompoundTag; a
	readUnnamedTag (Ljava/io/DataInput;ILnet/minecraft/nbt/NbtAccounter;)Lnet/minecraft/nbt/Tag; a
	write (Lnet/minecraft/nbt/CompoundTag;Ljava/io/DataOutput;)V a
	write (Lnet/minecraft/nbt/CompoundTag;Ljava/io/File;)V b
	writeCompressed (Lnet/minecraft/nbt/CompoundTag;Ljava/io/File;)V a
	writeCompressed (Lnet/minecraft/nbt/CompoundTag;Ljava/io/OutputStream;)V a
	writeUnnamedTag (Lnet/minecraft/nbt/Tag;Ljava/io/DataOutput;)V a
net/minecraft/nbt/NbtOps rc
	INSTANCE a
	WRAPPER_MARKER b
	convertTo (Lcom/mojang/serialization/DynamicOps;Lnet/minecraft/nbt/Tag;)Ljava/lang/Object; a
	createBoolean (Z)Lnet/minecraft/nbt/Tag; a
	createByte (B)Lnet/minecraft/nbt/Tag; a
	createByteList (Ljava/nio/ByteBuffer;)Lnet/minecraft/nbt/Tag; a
	createCollector (Lnet/minecraft/nbt/Tag;)Ljava/util/Optional; k
	createDouble (D)Lnet/minecraft/nbt/Tag; a
	createFloat (F)Lnet/minecraft/nbt/Tag; a
	createInt (I)Lnet/minecraft/nbt/Tag; a
	createIntList (Ljava/util/stream/IntStream;)Lnet/minecraft/nbt/Tag; a
	createList (Ljava/util/stream/Stream;)Lnet/minecraft/nbt/Tag; b
	createLong (J)Lnet/minecraft/nbt/Tag; a
	createLongList (Ljava/util/stream/LongStream;)Lnet/minecraft/nbt/Tag; a
	createMap (Ljava/util/stream/Stream;)Lnet/minecraft/nbt/Tag; a
	createNumeric (Ljava/lang/Number;)Lnet/minecraft/nbt/Tag; a
	createShort (S)Lnet/minecraft/nbt/Tag; a
	createString (Ljava/lang/String;)Lnet/minecraft/nbt/Tag; a
	empty ()Lnet/minecraft/nbt/Tag; a
	getByteBuffer (Lnet/minecraft/nbt/Tag;)Lcom/mojang/serialization/DataResult; h
	getIntStream (Lnet/minecraft/nbt/Tag;)Lcom/mojang/serialization/DataResult; i
	getList (Lnet/minecraft/nbt/Tag;)Lcom/mojang/serialization/DataResult; g
	getLongStream (Lnet/minecraft/nbt/Tag;)Lcom/mojang/serialization/DataResult; j
	getMap (Lnet/minecraft/nbt/Tag;)Lcom/mojang/serialization/DataResult; e
	getMapEntries (Lnet/minecraft/nbt/Tag;)Lcom/mojang/serialization/DataResult; d
	getMapValues (Lnet/minecraft/nbt/Tag;)Lcom/mojang/serialization/DataResult; c
	getNumberValue (Lnet/minecraft/nbt/Tag;)Lcom/mojang/serialization/DataResult; a
	getStream (Lnet/minecraft/nbt/Tag;)Lcom/mojang/serialization/DataResult; f
	getStringValue (Lnet/minecraft/nbt/Tag;)Lcom/mojang/serialization/DataResult; b
	mergeToList (Lnet/minecraft/nbt/Tag;Ljava/util/List;)Lcom/mojang/serialization/DataResult; a
	mergeToList (Lnet/minecraft/nbt/Tag;Lnet/minecraft/nbt/Tag;)Lcom/mojang/serialization/DataResult; a
	mergeToMap (Lnet/minecraft/nbt/Tag;Lcom/mojang/serialization/MapLike;)Lcom/mojang/serialization/DataResult; a
	mergeToMap (Lnet/minecraft/nbt/Tag;Lnet/minecraft/nbt/Tag;Lnet/minecraft/nbt/Tag;)Lcom/mojang/serialization/DataResult; a
	remove (Lnet/minecraft/nbt/Tag;Ljava/lang/String;)Lnet/minecraft/nbt/Tag; a
	tryUnwrap (Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/nbt/Tag; a
net/minecraft/nbt/NbtOps$ByteListCollector rc$a
	values a
	accept (Lnet/minecraft/nbt/Tag;)Lnet/minecraft/nbt/NbtOps$ListCollector; a
	result ()Lnet/minecraft/nbt/Tag; a
net/minecraft/nbt/NbtOps$HeterogenousListCollector rc$b
	result a
	accept (Lnet/minecraft/nbt/Tag;)Lnet/minecraft/nbt/NbtOps$ListCollector; a
	isWrapper (Lnet/minecraft/nbt/CompoundTag;)Z a
	result ()Lnet/minecraft/nbt/Tag; a
	wrapElement (Lnet/minecraft/nbt/Tag;)Lnet/minecraft/nbt/CompoundTag; c
	wrapIfNeeded (Lnet/minecraft/nbt/Tag;)Lnet/minecraft/nbt/Tag; b
net/minecraft/nbt/NbtOps$HomogenousListCollector rc$c
	result a
	accept (Lnet/minecraft/nbt/Tag;)Lnet/minecraft/nbt/NbtOps$ListCollector; a
	result ()Lnet/minecraft/nbt/Tag; a
net/minecraft/nbt/NbtOps$InitialListCollector rc$d
	INSTANCE a
	accept (Lnet/minecraft/nbt/Tag;)Lnet/minecraft/nbt/NbtOps$ListCollector; a
	result ()Lnet/minecraft/nbt/Tag; a
net/minecraft/nbt/NbtOps$IntListCollector rc$e
	values a
	accept (Lnet/minecraft/nbt/Tag;)Lnet/minecraft/nbt/NbtOps$ListCollector; a
	result ()Lnet/minecraft/nbt/Tag; a
net/minecraft/nbt/NbtOps$ListCollector rc$f
	accept (Lnet/minecraft/nbt/Tag;)Lnet/minecraft/nbt/NbtOps$ListCollector; a
	acceptAll (Ljava/lang/Iterable;)Lnet/minecraft/nbt/NbtOps$ListCollector; a
	acceptAll (Ljava/util/stream/Stream;)Lnet/minecraft/nbt/NbtOps$ListCollector; a
	result ()Lnet/minecraft/nbt/Tag; a
net/minecraft/nbt/NbtOps$LongListCollector rc$g
	values a
	accept (Lnet/minecraft/nbt/Tag;)Lnet/minecraft/nbt/NbtOps$ListCollector; a
	result ()Lnet/minecraft/nbt/Tag; a
net/minecraft/nbt/NbtOps$NbtRecordBuilder rc$h
	append (Ljava/lang/String;Lnet/minecraft/nbt/Tag;Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/nbt/CompoundTag; a
	build (Lnet/minecraft/nbt/CompoundTag;Lnet/minecraft/nbt/Tag;)Lcom/mojang/serialization/DataResult; a
	initBuilder ()Lnet/minecraft/nbt/CompoundTag; a
net/minecraft/nbt/NbtUtils rd
	COLON_SPLITTER i
	COMMA_SPLITTER h
	ELEMENT_SEPARATOR f
	INDENT k
	KEY_VALUE_SEPARATOR g
	LOGGER j
	NOT_FOUND l
	PROPERTIES_END e
	PROPERTIES_START d
	SNBT_DATA_TAG a
	YXZ_LISTTAG_DOUBLE_COMPARATOR c
	YXZ_LISTTAG_INT_COMPARATOR b
	addCurrentDataVersion (Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/nbt/CompoundTag; g
	addDataVersion (Lnet/minecraft/nbt/CompoundTag;I)Lnet/minecraft/nbt/CompoundTag; a
	compareNbt (Lnet/minecraft/nbt/Tag;Lnet/minecraft/nbt/Tag;Z)Z a
	createUUID (Ljava/util/UUID;)Lnet/minecraft/nbt/IntArrayTag; a
	getDataVersion (Lnet/minecraft/nbt/CompoundTag;I)I b
	getName (Lnet/minecraft/world/level/block/state/properties/Property;Ljava/lang/Comparable;)Ljava/lang/String; a
	indent (ILjava/lang/StringBuilder;)Ljava/lang/StringBuilder; a
	loadUUID (Lnet/minecraft/nbt/Tag;)Ljava/util/UUID; a
	packBlockState (Lnet/minecraft/nbt/CompoundTag;)Ljava/lang/String; f
	packStructureTemplate (Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/nbt/CompoundTag; d
	prettyPrint (Ljava/lang/StringBuilder;Lnet/minecraft/nbt/Tag;IZ)Ljava/lang/StringBuilder; a
	prettyPrint (Lnet/minecraft/nbt/Tag;)Ljava/lang/String; b
	prettyPrint (Lnet/minecraft/nbt/Tag;Z)Ljava/lang/String; a
	readBlockPos (Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/core/BlockPos; b
	readBlockState (Lnet/minecraft/core/HolderGetter;Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/world/level/block/state/BlockState; a
	readGameProfile (Lnet/minecraft/nbt/CompoundTag;)Lcom/mojang/authlib/GameProfile; a
	setValueHelper (Lnet/minecraft/world/level/block/state/StateHolder;Lnet/minecraft/world/level/block/state/properties/Property;Ljava/lang/String;Lnet/minecraft/nbt/CompoundTag;Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/world/level/block/state/StateHolder; a
	snbtToStructure (Ljava/lang/String;)Lnet/minecraft/nbt/CompoundTag; a
	structureToSnbt (Lnet/minecraft/nbt/CompoundTag;)Ljava/lang/String; c
	toPrettyComponent (Lnet/minecraft/nbt/Tag;)Lnet/minecraft/network/chat/Component; c
	unpackBlockState (Ljava/lang/String;)Lnet/minecraft/nbt/CompoundTag; b
	unpackStructureTemplate (Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/nbt/CompoundTag; e
	writeBlockPos (Lnet/minecraft/core/BlockPos;)Lnet/minecraft/nbt/CompoundTag; a
	writeBlockState (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/nbt/CompoundTag; a
	writeFluidState (Lnet/minecraft/world/level/material/FluidState;)Lnet/minecraft/nbt/CompoundTag; a
	writeGameProfile (Lnet/minecraft/nbt/CompoundTag;Lcom/mojang/authlib/GameProfile;)Lnet/minecraft/nbt/CompoundTag; a
net/minecraft/nbt/NumericTag re
	getAsByte ()B i
	getAsDouble ()D j
	getAsFloat ()F k
	getAsInt ()I g
	getAsLong ()J f
	getAsNumber ()Ljava/lang/Number; l
	getAsShort ()S h
net/minecraft/nbt/ShortTag rf
	SELF_SIZE_IN_BYTES b
	TYPE a
	data c
	accept (Lnet/minecraft/nbt/StreamTagVisitor;)Lnet/minecraft/nbt/StreamTagVisitor$ValueResult; a
	accept (Lnet/minecraft/nbt/TagVisitor;)V a
	copy ()Lnet/minecraft/nbt/ShortTag; e
	copy ()Lnet/minecraft/nbt/Tag; d
	getAsByte ()B i
	getAsDouble ()D j
	getAsFloat ()F k
	getAsInt ()I g
	getAsLong ()J f
	getAsNumber ()Ljava/lang/Number; l
	getAsShort ()S h
	getId ()B b
	getType ()Lnet/minecraft/nbt/TagType; c
	sizeInBytes ()I a
	valueOf (S)Lnet/minecraft/nbt/ShortTag; a
	write (Ljava/io/DataOutput;)V a
net/minecraft/nbt/ShortTag$Cache rf$a
	HIGH b
	LOW c
	cache a
net/minecraft/nbt/SnbtPrinterTagVisitor rg
	ELEMENT_SEPARATOR e
	ELEMENT_SPACING i
	KEY_ORDER a
	LIST_CLOSE g
	LIST_OPEN f
	LIST_TYPE_SEPARATOR h
	NAME_VALUE_SEPARATOR d
	NEWLINE l
	NO_INDENTATION b
	SIMPLE_VALUE c
	STRUCT_CLOSE k
	STRUCT_OPEN j
	depth n
	indentation m
	path o
	result p
	getKeys (Lnet/minecraft/nbt/CompoundTag;)Ljava/util/List; b
	handleEscapePretty (Ljava/lang/String;)Ljava/lang/String; a
	pathString ()Ljava/lang/String; a
	popPath ()V b
	pushPath (Ljava/lang/String;)V b
	visit (Lnet/minecraft/nbt/Tag;)Ljava/lang/String; a
	visitByte (Lnet/minecraft/nbt/ByteTag;)V a
	visitByteArray (Lnet/minecraft/nbt/ByteArrayTag;)V a
	visitCompound (Lnet/minecraft/nbt/CompoundTag;)V a
	visitDouble (Lnet/minecraft/nbt/DoubleTag;)V a
	visitEnd (Lnet/minecraft/nbt/EndTag;)V a
	visitFloat (Lnet/minecraft/nbt/FloatTag;)V a
	visitInt (Lnet/minecraft/nbt/IntTag;)V a
	visitIntArray (Lnet/minecraft/nbt/IntArrayTag;)V a
	visitList (Lnet/minecraft/nbt/ListTag;)V a
	visitLong (Lnet/minecraft/nbt/LongTag;)V a
	visitLongArray (Lnet/minecraft/nbt/LongArrayTag;)V a
	visitShort (Lnet/minecraft/nbt/ShortTag;)V a
	visitString (Lnet/minecraft/nbt/StringTag;)V a
net/minecraft/nbt/StreamTagVisitor rh
	visit (B)Lnet/minecraft/nbt/StreamTagVisitor$ValueResult; a
	visit (D)Lnet/minecraft/nbt/StreamTagVisitor$ValueResult; a
	visit (F)Lnet/minecraft/nbt/StreamTagVisitor$ValueResult; a
	visit (I)Lnet/minecraft/nbt/StreamTagVisitor$ValueResult; a
	visit (J)Lnet/minecraft/nbt/StreamTagVisitor$ValueResult; a
	visit (Ljava/lang/String;)Lnet/minecraft/nbt/StreamTagVisitor$ValueResult; a
	visit (S)Lnet/minecraft/nbt/StreamTagVisitor$ValueResult; a
	visit ([B)Lnet/minecraft/nbt/StreamTagVisitor$ValueResult; a
	visit ([I)Lnet/minecraft/nbt/StreamTagVisitor$ValueResult; a
	visit ([J)Lnet/minecraft/nbt/StreamTagVisitor$ValueResult; a
	visitContainerEnd ()Lnet/minecraft/nbt/StreamTagVisitor$ValueResult; b
	visitElement (Lnet/minecraft/nbt/TagType;I)Lnet/minecraft/nbt/StreamTagVisitor$EntryResult; b
	visitEnd ()Lnet/minecraft/nbt/StreamTagVisitor$ValueResult; a
	visitEntry (Lnet/minecraft/nbt/TagType;)Lnet/minecraft/nbt/StreamTagVisitor$EntryResult; a
	visitEntry (Lnet/minecraft/nbt/TagType;Ljava/lang/String;)Lnet/minecraft/nbt/StreamTagVisitor$EntryResult; a
	visitList (Lnet/minecraft/nbt/TagType;I)Lnet/minecraft/nbt/StreamTagVisitor$ValueResult; a
	visitRootEntry (Lnet/minecraft/nbt/TagType;)Lnet/minecraft/nbt/StreamTagVisitor$ValueResult; b
net/minecraft/nbt/StreamTagVisitor$EntryResult rh$a
	$VALUES e
	BREAK c
	ENTER a
	HALT d
	SKIP b
	$values ()[Lnet/minecraft/nbt/StreamTagVisitor$EntryResult; a
net/minecraft/nbt/StreamTagVisitor$ValueResult rh$b
	$VALUES d
	BREAK b
	CONTINUE a
	HALT c
	$values ()[Lnet/minecraft/nbt/StreamTagVisitor$ValueResult; a
net/minecraft/nbt/StringTag ri
	DOUBLE_QUOTE w
	EMPTY c
	ESCAPE y
	NOT_SET z
	SELF_SIZE_IN_BYTES b
	SINGLE_QUOTE x
	TYPE a
	data A
	accept (Lnet/minecraft/nbt/StreamTagVisitor;)Lnet/minecraft/nbt/StreamTagVisitor$ValueResult; a
	accept (Lnet/minecraft/nbt/TagVisitor;)V a
	copy ()Lnet/minecraft/nbt/StringTag; e
	copy ()Lnet/minecraft/nbt/Tag; d
	getAsString ()Ljava/lang/String; m_
	getId ()B b
	getType ()Lnet/minecraft/nbt/TagType; c
	quoteAndEscape (Ljava/lang/String;)Ljava/lang/String; b
	sizeInBytes ()I a
	skipString (Ljava/io/DataInput;)V a
	valueOf (Ljava/lang/String;)Lnet/minecraft/nbt/StringTag; a
	write (Ljava/io/DataOutput;)V a
net/minecraft/nbt/StringTagVisitor rj
	SIMPLE_VALUE a
	builder b
	handleEscape (Ljava/lang/String;)Ljava/lang/String; a
	visit (Lnet/minecraft/nbt/Tag;)Ljava/lang/String; a
	visitByte (Lnet/minecraft/nbt/ByteTag;)V a
	visitByteArray (Lnet/minecraft/nbt/ByteArrayTag;)V a
	visitCompound (Lnet/minecraft/nbt/CompoundTag;)V a
	visitDouble (Lnet/minecraft/nbt/DoubleTag;)V a
	visitEnd (Lnet/minecraft/nbt/EndTag;)V a
	visitFloat (Lnet/minecraft/nbt/FloatTag;)V a
	visitInt (Lnet/minecraft/nbt/IntTag;)V a
	visitIntArray (Lnet/minecraft/nbt/IntArrayTag;)V a
	visitList (Lnet/minecraft/nbt/ListTag;)V a
	visitLong (Lnet/minecraft/nbt/LongTag;)V a
	visitLongArray (Lnet/minecraft/nbt/LongArrayTag;)V a
	visitShort (Lnet/minecraft/nbt/ShortTag;)V a
	visitString (Lnet/minecraft/nbt/StringTag;)V a
net/minecraft/nbt/Tag rk
	ARRAY_HEADER e
	MAX_DEPTH v
	OBJECT_HEADER d
	OBJECT_REFERENCE f
	STRING_SIZE g
	TAG_ANY_NUMERIC u
	TAG_BYTE i
	TAG_BYTE_ARRAY o
	TAG_COMPOUND r
	TAG_DOUBLE n
	TAG_END h
	TAG_FLOAT m
	TAG_INT k
	TAG_INT_ARRAY s
	TAG_LIST q
	TAG_LONG l
	TAG_LONG_ARRAY t
	TAG_SHORT j
	TAG_STRING p
	accept (Lnet/minecraft/nbt/StreamTagVisitor;)Lnet/minecraft/nbt/StreamTagVisitor$ValueResult; a
	accept (Lnet/minecraft/nbt/TagVisitor;)V a
	acceptAsRoot (Lnet/minecraft/nbt/StreamTagVisitor;)V b
	copy ()Lnet/minecraft/nbt/Tag; d
	getAsString ()Ljava/lang/String; m_
	getId ()B b
	getType ()Lnet/minecraft/nbt/TagType; c
	sizeInBytes ()I a
	write (Ljava/io/DataOutput;)V a
net/minecraft/nbt/TagParser rl
	BYTE_PATTERN p
	DOUBLE_PATTERN n
	DOUBLE_PATTERN_NOSUFFIX m
	ELEMENT_SEPARATOR g
	ERROR_EXPECTED_KEY b
	ERROR_EXPECTED_VALUE c
	ERROR_INSERT_MIXED_ARRAY e
	ERROR_INSERT_MIXED_LIST d
	ERROR_INVALID_ARRAY f
	ERROR_TRAILING_DATA a
	FLOAT_PATTERN o
	INT_PATTERN s
	LIST_CLOSE j
	LIST_OPEN i
	LONG_PATTERN q
	NAME_VALUE_SEPARATOR h
	SHORT_PATTERN r
	STRUCT_CLOSE k
	STRUCT_OPEN l
	reader t
	expect (C)V a
	hasElementSeparator ()Z i
	parseTag (Ljava/lang/String;)Lnet/minecraft/nbt/CompoundTag; a
	readArray (Lnet/minecraft/nbt/TagType;Lnet/minecraft/nbt/TagType;)Ljava/util/List; a
	readArrayTag ()Lnet/minecraft/nbt/Tag; h
	readKey ()Ljava/lang/String; b
	readList ()Lnet/minecraft/nbt/Tag; e
	readListTag ()Lnet/minecraft/nbt/Tag; g
	readSingleStruct ()Lnet/minecraft/nbt/CompoundTag; a
	readStruct ()Lnet/minecraft/nbt/CompoundTag; f
	readTypedValue ()Lnet/minecraft/nbt/Tag; c
	readValue ()Lnet/minecraft/nbt/Tag; d
	type (Ljava/lang/String;)Lnet/minecraft/nbt/Tag; b
net/minecraft/nbt/TagType rm
	createInvalid (I)Lnet/minecraft/nbt/TagType; a
	getName ()Ljava/lang/String; a
	getPrettyName ()Ljava/lang/String; b
	isValue ()Z d
	load (Ljava/io/DataInput;ILnet/minecraft/nbt/NbtAccounter;)Lnet/minecraft/nbt/Tag; b
	parse (Ljava/io/DataInput;Lnet/minecraft/nbt/StreamTagVisitor;)Lnet/minecraft/nbt/StreamTagVisitor$ValueResult; a
	parseRoot (Ljava/io/DataInput;Lnet/minecraft/nbt/StreamTagVisitor;)V b
	skip (Ljava/io/DataInput;)V a
	skip (Ljava/io/DataInput;I)V a
net/minecraft/nbt/TagType$StaticSize rm$a
	size ()I c
	skip (Ljava/io/DataInput;)V a
	skip (Ljava/io/DataInput;I)V a
net/minecraft/nbt/TagType$VariableSize rm$b
	skip (Ljava/io/DataInput;I)V a
net/minecraft/nbt/TagTypes rn
	TYPES a
	getType (I)Lnet/minecraft/nbt/TagType; a
net/minecraft/nbt/TagVisitor ro
	visitByte (Lnet/minecraft/nbt/ByteTag;)V a
	visitByteArray (Lnet/minecraft/nbt/ByteArrayTag;)V a
	visitCompound (Lnet/minecraft/nbt/CompoundTag;)V a
	visitDouble (Lnet/minecraft/nbt/DoubleTag;)V a
	visitEnd (Lnet/minecraft/nbt/EndTag;)V a
	visitFloat (Lnet/minecraft/nbt/FloatTag;)V a
	visitInt (Lnet/minecraft/nbt/IntTag;)V a
	visitIntArray (Lnet/minecraft/nbt/IntArrayTag;)V a
	visitList (Lnet/minecraft/nbt/ListTag;)V a
	visitLong (Lnet/minecraft/nbt/LongTag;)V a
	visitLongArray (Lnet/minecraft/nbt/LongArrayTag;)V a
	visitShort (Lnet/minecraft/nbt/ShortTag;)V a
	visitString (Lnet/minecraft/nbt/StringTag;)V a
net/minecraft/nbt/TextComponentTagVisitor rp
	ELEMENT_SEPARATOR j
	ELEMENT_SPACING n
	INLINE_ELEMENT_TYPES c
	INLINE_LIST_THRESHOLD b
	LIST_CLOSE l
	LIST_OPEN k
	LIST_TYPE_SEPARATOR m
	LOGGER a
	NAME_VALUE_SEPARATOR i
	NEWLINE q
	SIMPLE_VALUE h
	STRUCT_CLOSE p
	STRUCT_OPEN o
	SYNTAX_HIGHLIGHTING_KEY d
	SYNTAX_HIGHLIGHTING_NUMBER f
	SYNTAX_HIGHLIGHTING_NUMBER_TYPE g
	SYNTAX_HIGHLIGHTING_STRING e
	depth s
	indentation r
	result t
	handleEscapePretty (Ljava/lang/String;)Lnet/minecraft/network/chat/Component; a
	visit (Lnet/minecraft/nbt/Tag;)Lnet/minecraft/network/chat/Component; a
	visitByte (Lnet/minecraft/nbt/ByteTag;)V a
	visitByteArray (Lnet/minecraft/nbt/ByteArrayTag;)V a
	visitCompound (Lnet/minecraft/nbt/CompoundTag;)V a
	visitDouble (Lnet/minecraft/nbt/DoubleTag;)V a
	visitEnd (Lnet/minecraft/nbt/EndTag;)V a
	visitFloat (Lnet/minecraft/nbt/FloatTag;)V a
	visitInt (Lnet/minecraft/nbt/IntTag;)V a
	visitIntArray (Lnet/minecraft/nbt/IntArrayTag;)V a
	visitList (Lnet/minecraft/nbt/ListTag;)V a
	visitLong (Lnet/minecraft/nbt/LongTag;)V a
	visitLongArray (Lnet/minecraft/nbt/LongArrayTag;)V a
	visitShort (Lnet/minecraft/nbt/ShortTag;)V a
	visitString (Lnet/minecraft/nbt/StringTag;)V a
net/minecraft/nbt/visitors/CollectFields rr
	fieldsToGetCount a
	stack c
	wantedTypes b
	getMissingFieldCount ()I c
	visitContainerEnd ()Lnet/minecraft/nbt/StreamTagVisitor$ValueResult; b
	visitEntry (Lnet/minecraft/nbt/TagType;)Lnet/minecraft/nbt/StreamTagVisitor$EntryResult; a
	visitEntry (Lnet/minecraft/nbt/TagType;Ljava/lang/String;)Lnet/minecraft/nbt/StreamTagVisitor$EntryResult; a
	visitRootEntry (Lnet/minecraft/nbt/TagType;)Lnet/minecraft/nbt/StreamTagVisitor$ValueResult; b
net/minecraft/nbt/visitors/CollectToTag rs
	consumerStack c
	lastId a
	rootTag b
	appendEntry (Lnet/minecraft/nbt/Tag;)V a
	depth ()I e
	enterContainerIfNeeded (Lnet/minecraft/nbt/TagType;)V c
	getResult ()Lnet/minecraft/nbt/Tag; d
	visit (B)Lnet/minecraft/nbt/StreamTagVisitor$ValueResult; a
	visit (D)Lnet/minecraft/nbt/StreamTagVisitor$ValueResult; a
	visit (F)Lnet/minecraft/nbt/StreamTagVisitor$ValueResult; a
	visit (I)Lnet/minecraft/nbt/StreamTagVisitor$ValueResult; a
	visit (J)Lnet/minecraft/nbt/StreamTagVisitor$ValueResult; a
	visit (Ljava/lang/String;)Lnet/minecraft/nbt/StreamTagVisitor$ValueResult; a
	visit (S)Lnet/minecraft/nbt/StreamTagVisitor$ValueResult; a
	visit ([B)Lnet/minecraft/nbt/StreamTagVisitor$ValueResult; a
	visit ([I)Lnet/minecraft/nbt/StreamTagVisitor$ValueResult; a
	visit ([J)Lnet/minecraft/nbt/StreamTagVisitor$ValueResult; a
	visitContainerEnd ()Lnet/minecraft/nbt/StreamTagVisitor$ValueResult; b
	visitElement (Lnet/minecraft/nbt/TagType;I)Lnet/minecraft/nbt/StreamTagVisitor$EntryResult; b
	visitEnd ()Lnet/minecraft/nbt/StreamTagVisitor$ValueResult; a
	visitEntry (Lnet/minecraft/nbt/TagType;)Lnet/minecraft/nbt/StreamTagVisitor$EntryResult; a
	visitEntry (Lnet/minecraft/nbt/TagType;Ljava/lang/String;)Lnet/minecraft/nbt/StreamTagVisitor$EntryResult; a
	visitList (Lnet/minecraft/nbt/TagType;I)Lnet/minecraft/nbt/StreamTagVisitor$ValueResult; a
	visitRootEntry (Lnet/minecraft/nbt/TagType;)Lnet/minecraft/nbt/StreamTagVisitor$ValueResult; b
net/minecraft/nbt/visitors/FieldSelector rt
	name c
	path a
	type b
	name ()Ljava/lang/String; c
	path ()Ljava/util/List; a
	type ()Lnet/minecraft/nbt/TagType; b
net/minecraft/nbt/visitors/FieldTree ru
	depth a
	fieldsToRecurse c
	selectedFields b
	addEntry (Lnet/minecraft/nbt/visitors/FieldSelector;)V a
	createRoot ()Lnet/minecraft/nbt/visitors/FieldTree; a
	depth ()I b
	fieldsToRecurse ()Ljava/util/Map; d
	isSelected (Lnet/minecraft/nbt/TagType;Ljava/lang/String;)Z a
	selectedFields ()Ljava/util/Map; c
net/minecraft/nbt/visitors/SkipAll rv
	INSTANCE a
	visit (B)Lnet/minecraft/nbt/StreamTagVisitor$ValueResult; a
	visit (D)Lnet/minecraft/nbt/StreamTagVisitor$ValueResult; a
	visit (F)Lnet/minecraft/nbt/StreamTagVisitor$ValueResult; a
	visit (I)Lnet/minecraft/nbt/StreamTagVisitor$ValueResult; a
	visit (J)Lnet/minecraft/nbt/StreamTagVisitor$ValueResult; a
	visit (Ljava/lang/String;)Lnet/minecraft/nbt/StreamTagVisitor$ValueResult; a
	visit (S)Lnet/minecraft/nbt/StreamTagVisitor$ValueResult; a
	visit ([B)Lnet/minecraft/nbt/StreamTagVisitor$ValueResult; a
	visit ([I)Lnet/minecraft/nbt/StreamTagVisitor$ValueResult; a
	visit ([J)Lnet/minecraft/nbt/StreamTagVisitor$ValueResult; a
	visitContainerEnd ()Lnet/minecraft/nbt/StreamTagVisitor$ValueResult; b
	visitElement (Lnet/minecraft/nbt/TagType;I)Lnet/minecraft/nbt/StreamTagVisitor$EntryResult; b
	visitEnd ()Lnet/minecraft/nbt/StreamTagVisitor$ValueResult; a
	visitEntry (Lnet/minecraft/nbt/TagType;)Lnet/minecraft/nbt/StreamTagVisitor$EntryResult; a
	visitEntry (Lnet/minecraft/nbt/TagType;Ljava/lang/String;)Lnet/minecraft/nbt/StreamTagVisitor$EntryResult; a
	visitList (Lnet/minecraft/nbt/TagType;I)Lnet/minecraft/nbt/StreamTagVisitor$ValueResult; a
	visitRootEntry (Lnet/minecraft/nbt/TagType;)Lnet/minecraft/nbt/StreamTagVisitor$ValueResult; b
net/minecraft/nbt/visitors/SkipFields rw
	stack a
	visitContainerEnd ()Lnet/minecraft/nbt/StreamTagVisitor$ValueResult; b
	visitEntry (Lnet/minecraft/nbt/TagType;Ljava/lang/String;)Lnet/minecraft/nbt/StreamTagVisitor$EntryResult; a
net/minecraft/network/CipherBase ry
	cipher a
	heapIn b
	heapOut c
	bufToByte (Lio/netty/buffer/ByteBuf;)[B a
	decipher (Lio/netty/channel/ChannelHandlerContext;Lio/netty/buffer/ByteBuf;)Lio/netty/buffer/ByteBuf; a
	encipher (Lio/netty/buffer/ByteBuf;Lio/netty/buffer/ByteBuf;)V a
net/minecraft/network/CipherDecoder rz
	cipher a
	decode (Lio/netty/channel/ChannelHandlerContext;Lio/netty/buffer/ByteBuf;Ljava/util/List;)V a
net/minecraft/network/CipherEncoder sa
	cipher a
	encode (Lio/netty/channel/ChannelHandlerContext;Lio/netty/buffer/ByteBuf;Lio/netty/buffer/ByteBuf;)V a
net/minecraft/network/CompressionDecoder sb
	MAXIMUM_COMPRESSED_LENGTH a
	MAXIMUM_UNCOMPRESSED_LENGTH b
	inflater c
	threshold d
	validateDecompressed e
	setThreshold (IZ)V a
net/minecraft/network/CompressionEncoder sc
	deflater b
	encodeBuf a
	threshold c
	encode (Lio/netty/channel/ChannelHandlerContext;Lio/netty/buffer/ByteBuf;Lio/netty/buffer/ByteBuf;)V a
	getThreshold ()I a
	setThreshold (I)V a
net/minecraft/network/Connection sd
	ATTRIBUTE_PROTOCOL e
	AVERAGE_PACKETS_SMOOTHING i
	LOCAL_WORKER_GROUP h
	LOGGER j
	NETWORK_EPOLL_WORKER_GROUP g
	NETWORK_WORKER_GROUP f
	PACKET_MARKER b
	PACKET_RECEIVED_MARKER c
	PACKET_SENT_MARKER d
	ROOT_MARKER a
	address n
	averageReceivedPackets u
	averageSentPackets v
	channel m
	delayedDisconnect y
	disconnectedReason p
	disconnectionHandled r
	encrypted q
	handlingFault x
	packetListener o
	queue l
	receivedPackets s
	receiving k
	sentPackets t
	tickCount w
	channelRead0 (Lio/netty/channel/ChannelHandlerContext;Lnet/minecraft/network/protocol/Packet;)V a
	configureSerialization (Lio/netty/channel/ChannelPipeline;Lnet/minecraft/network/protocol/PacketFlow;)V a
	connect (Ljava/net/InetSocketAddress;ZLnet/minecraft/network/Connection;)Lio/netty/channel/ChannelFuture; a
	connectToLocalServer (Ljava/net/SocketAddress;)Lnet/minecraft/network/Connection; a
	connectToServer (Ljava/net/InetSocketAddress;Z)Lnet/minecraft/network/Connection; a
	disconnect (Lnet/minecraft/network/chat/Component;)V a
	doSendPacket (Lnet/minecraft/network/protocol/Packet;Lnet/minecraft/network/PacketSendListener;Lnet/minecraft/network/ConnectionProtocol;Lnet/minecraft/network/ConnectionProtocol;)V a
	flushQueue ()V q
	genericsFtw (Lnet/minecraft/network/protocol/Packet;Lnet/minecraft/network/PacketListener;)V a
	getAverageReceivedPackets ()F n
	getAverageSentPackets ()F o
	getCurrentProtocol ()Lnet/minecraft/network/ConnectionProtocol; p
	getDisconnectedReason ()Lnet/minecraft/network/chat/Component; k
	getPacketListener ()Lnet/minecraft/network/PacketListener; j
	getReceiving ()Lnet/minecraft/network/protocol/PacketFlow; e
	getRemoteAddress ()Ljava/net/SocketAddress; c
	getSending ()Lnet/minecraft/network/protocol/PacketFlow; f
	handleDisconnection ()V m
	isConnected ()Z h
	isConnecting ()Z i
	isEncrypted ()Z g
	isMemoryConnection ()Z d
	send (Lnet/minecraft/network/protocol/Packet;)V a
	send (Lnet/minecraft/network/protocol/Packet;Lnet/minecraft/network/PacketSendListener;)V a
	sendPacket (Lnet/minecraft/network/protocol/Packet;Lnet/minecraft/network/PacketSendListener;)V b
	setEncryptionKey (Ljavax/crypto/Cipher;Ljavax/crypto/Cipher;)V a
	setListener (Lnet/minecraft/network/PacketListener;)V a
	setProtocol (Lnet/minecraft/network/ConnectionProtocol;)V a
	setReadOnly ()V l
	setupCompression (IZ)V a
	tick ()V a
	tickSecond ()V b
net/minecraft/network/Connection$PacketHolder sd$a
	listener b
	packet a
net/minecraft/network/ConnectionProtocol se
	$VALUES l
	HANDSHAKING a
	LOGIN d
	LOOKUP h
	MAX_PROTOCOL_ID g
	MIN_PROTOCOL_ID f
	NOT_REGISTERED e
	PLAY b
	PROTOCOL_BY_PACKET i
	STATUS c
	flows k
	id j
	$values ()[Lnet/minecraft/network/ConnectionProtocol; c
	createPacket (Lnet/minecraft/network/protocol/PacketFlow;ILnet/minecraft/network/FriendlyByteBuf;)Lnet/minecraft/network/protocol/Packet; a
	getBundlerInfo (Lnet/minecraft/network/protocol/PacketFlow;)Lnet/minecraft/network/protocol/BundlerInfo; a
	getById (I)Lnet/minecraft/network/ConnectionProtocol; a
	getId ()I a
	getPacketId (Lnet/minecraft/network/protocol/PacketFlow;Lnet/minecraft/network/protocol/Packet;)I a
	getPacketsByIds (Lnet/minecraft/network/protocol/PacketFlow;)Lit/unimi/dsi/fastutil/ints/Int2ObjectMap; b
	getProtocolForPacket (Lnet/minecraft/network/protocol/Packet;)Lnet/minecraft/network/ConnectionProtocol; a
	protocol ()Lnet/minecraft/network/ConnectionProtocol$ProtocolBuilder; b
net/minecraft/network/ConnectionProtocol$PacketSet se$a
	LOGGER a
	bundlerInfo d
	classToId b
	extraClasses e
	idToDeserializer c
	addPacket (Ljava/lang/Class;Ljava/util/function/Function;)Lnet/minecraft/network/ConnectionProtocol$PacketSet; a
	bundlerInfo ()Lnet/minecraft/network/protocol/BundlerInfo; a
	createPacket (ILnet/minecraft/network/FriendlyByteBuf;)Lnet/minecraft/network/protocol/Packet; a
	getId (Ljava/lang/Class;)I a
	listAllPackets (Ljava/util/function/Consumer;)V a
	withBundlePacket (Ljava/lang/Class;Ljava/util/function/Function;)Lnet/minecraft/network/ConnectionProtocol$PacketSet; b
net/minecraft/network/ConnectionProtocol$ProtocolBuilder se$b
	flows a
	addFlow (Lnet/minecraft/network/protocol/PacketFlow;Lnet/minecraft/network/ConnectionProtocol$PacketSet;)Lnet/minecraft/network/ConnectionProtocol$ProtocolBuilder; a
net/minecraft/network/FriendlyByteBuf sf
	DEFAULT_NBT_QUOTA a
	GSON j
	MAX_COMPONENT_STRING_LENGTH c
	MAX_PUBLIC_KEY_HEADER_SIZE h
	MAX_PUBLIC_KEY_LENGTH i
	MAX_STRING_LENGTH b
	MAX_VARINT_SIZE d
	MAX_VARLONG_SIZE e
	PUBLIC_KEY_SIZE g
	source f
	accessByteBufWithCorrectSize ()[B e
	getMaxEncodedUtfLength (I)I g
	getVarIntSize (I)I a
	getVarLongSize (J)I a
	limitValue (Ljava/util/function/IntFunction;I)Ljava/util/function/IntFunction; a
	readAnySizeNbt ()Lnet/minecraft/nbt/CompoundTag; q
	readBitSet ()Ljava/util/BitSet; y
	readBlockHitResult ()Lnet/minecraft/world/phys/BlockHitResult; x
	readBlockPos ()Lnet/minecraft/core/BlockPos; f
	readById (Lnet/minecraft/core/IdMap;)Ljava/lang/Object; a
	readById (Lnet/minecraft/core/IdMap;Lnet/minecraft/network/FriendlyByteBuf$Reader;)Lnet/minecraft/core/Holder; a
	readByteArray ()[B b
	readByteArray (I)[B b
	readChunkPos ()Lnet/minecraft/world/level/ChunkPos; g
	readCollection (Ljava/util/function/IntFunction;Lnet/minecraft/network/FriendlyByteBuf$Reader;)Ljava/util/Collection; a
	readComponent ()Lnet/minecraft/network/chat/Component; l
	readDate ()Ljava/util/Date; u
	readEither (Lnet/minecraft/network/FriendlyByteBuf$Reader;Lnet/minecraft/network/FriendlyByteBuf$Reader;)Lcom/mojang/datafixers/util/Either; b
	readEnum (Ljava/lang/Class;)Ljava/lang/Enum; b
	readEnumSet (Ljava/lang/Class;)Ljava/util/EnumSet; a
	readFixedBitSet (I)Ljava/util/BitSet; f
	readGameProfile ()Lcom/mojang/authlib/GameProfile; z
	readGameProfileProperties ()Lcom/mojang/authlib/properties/PropertyMap; A
	readGlobalPos ()Lnet/minecraft/core/GlobalPos; i
	readInstant ()Ljava/time/Instant; v
	readIntIdList ()Lit/unimi/dsi/fastutil/ints/IntList; a
	readItem ()Lnet/minecraft/world/item/ItemStack; r
	readJsonWithCodec (Lcom/mojang/serialization/Codec;)Ljava/lang/Object; a
	readList (Lnet/minecraft/network/FriendlyByteBuf$Reader;)Ljava/util/List; a
	readLongArray ()[J d
	readLongArray ([J)[J b
	readLongArray ([JI)[J a
	readMap (Ljava/util/function/IntFunction;Lnet/minecraft/network/FriendlyByteBuf$Reader;Lnet/minecraft/network/FriendlyByteBuf$Reader;)Ljava/util/Map; a
	readMap (Lnet/minecraft/network/FriendlyByteBuf$Reader;Lnet/minecraft/network/FriendlyByteBuf$Reader;)Ljava/util/Map; a
	readNbt ()Lnet/minecraft/nbt/CompoundTag; p
	readNbt (Lnet/minecraft/nbt/NbtAccounter;)Lnet/minecraft/nbt/CompoundTag; a
	readNullable (Lnet/minecraft/network/FriendlyByteBuf$Reader;)Ljava/lang/Object; c
	readOptional (Lnet/minecraft/network/FriendlyByteBuf$Reader;)Ljava/util/Optional; b
	readProperty ()Lcom/mojang/authlib/properties/Property; B
	readPublicKey ()Ljava/security/PublicKey; w
	readQuaternion ()Lorg/joml/Quaternionf; k
	readResourceKey (Lnet/minecraft/resources/ResourceKey;)Lnet/minecraft/resources/ResourceKey; a
	readResourceLocation ()Lnet/minecraft/resources/ResourceLocation; t
	readSectionPos ()Lnet/minecraft/core/SectionPos; h
	readUUID ()Ljava/util/UUID; o
	readUtf ()Ljava/lang/String; s
	readUtf (I)Ljava/lang/String; e
	readVarInt ()I m
	readVarIntArray ()[I c
	readVarIntArray (I)[I c
	readVarLong ()J n
	readVector3f ()Lorg/joml/Vector3f; j
	readWithCodec (Lcom/mojang/serialization/DynamicOps;Lcom/mojang/serialization/Codec;)Ljava/lang/Object; a
	readWithCount (Ljava/util/function/Consumer;)V a
	writeBitSet (Ljava/util/BitSet;)V a
	writeBlockHitResult (Lnet/minecraft/world/phys/BlockHitResult;)V a
	writeBlockPos (Lnet/minecraft/core/BlockPos;)Lnet/minecraft/network/FriendlyByteBuf; a
	writeByteArray ([B)Lnet/minecraft/network/FriendlyByteBuf; a
	writeChunkPos (Lnet/minecraft/world/level/ChunkPos;)Lnet/minecraft/network/FriendlyByteBuf; a
	writeCollection (Ljava/util/Collection;Lnet/minecraft/network/FriendlyByteBuf$Writer;)V a
	writeComponent (Lnet/minecraft/network/chat/Component;)Lnet/minecraft/network/FriendlyByteBuf; a
	writeDate (Ljava/util/Date;)Lnet/minecraft/network/FriendlyByteBuf; a
	writeEither (Lcom/mojang/datafixers/util/Either;Lnet/minecraft/network/FriendlyByteBuf$Writer;Lnet/minecraft/network/FriendlyByteBuf$Writer;)V a
	writeEnum (Ljava/lang/Enum;)Lnet/minecraft/network/FriendlyByteBuf; a
	writeEnumSet (Ljava/util/EnumSet;Ljava/lang/Class;)V a
	writeFixedBitSet (Ljava/util/BitSet;I)V a
	writeGameProfile (Lcom/mojang/authlib/GameProfile;)V a
	writeGameProfileProperties (Lcom/mojang/authlib/properties/PropertyMap;)V a
	writeGlobalPos (Lnet/minecraft/core/GlobalPos;)V a
	writeId (Lnet/minecraft/core/IdMap;Ljava/lang/Object;)V a
	writeId (Lnet/minecraft/core/IdMap;Lnet/minecraft/core/Holder;Lnet/minecraft/network/FriendlyByteBuf$Writer;)V a
	writeInstant (Ljava/time/Instant;)V a
	writeIntIdList (Lit/unimi/dsi/fastutil/ints/IntList;)V a
	writeItem (Lnet/minecraft/world/item/ItemStack;)Lnet/minecraft/network/FriendlyByteBuf; a
	writeJsonWithCodec (Lcom/mojang/serialization/Codec;Ljava/lang/Object;)V a
	writeLongArray ([J)Lnet/minecraft/network/FriendlyByteBuf; a
	writeMap (Ljava/util/Map;Lnet/minecraft/network/FriendlyByteBuf$Writer;Lnet/minecraft/network/FriendlyByteBuf$Writer;)V a
	writeNbt (Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/network/FriendlyByteBuf; a
	writeNullable (Ljava/lang/Object;Lnet/minecraft/network/FriendlyByteBuf$Writer;)V a
	writeOptional (Ljava/util/Optional;Lnet/minecraft/network/FriendlyByteBuf$Writer;)V a
	writeProperty (Lcom/mojang/authlib/properties/Property;)V a
	writePublicKey (Ljava/security/PublicKey;)Lnet/minecraft/network/FriendlyByteBuf; a
	writeQuaternion (Lorg/joml/Quaternionf;)V a
	writeResourceKey (Lnet/minecraft/resources/ResourceKey;)V b
	writeResourceLocation (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/network/FriendlyByteBuf; a
	writeSectionPos (Lnet/minecraft/core/SectionPos;)Lnet/minecraft/network/FriendlyByteBuf; a
	writeUUID (Ljava/util/UUID;)Lnet/minecraft/network/FriendlyByteBuf; a
	writeUtf (Ljava/lang/String;)Lnet/minecraft/network/FriendlyByteBuf; a
	writeUtf (Ljava/lang/String;I)Lnet/minecraft/network/FriendlyByteBuf; a
	writeVarInt (I)Lnet/minecraft/network/FriendlyByteBuf; d
	writeVarIntArray ([I)Lnet/minecraft/network/FriendlyByteBuf; a
	writeVarLong (J)Lnet/minecraft/network/FriendlyByteBuf; b
	writeVector3f (Lorg/joml/Vector3f;)V a
	writeWithCodec (Lcom/mojang/serialization/DynamicOps;Lcom/mojang/serialization/Codec;Ljava/lang/Object;)V a
net/minecraft/network/FriendlyByteBuf$Reader sf$a
net/minecraft/network/FriendlyByteBuf$Writer sf$b
net/minecraft/network/PacketBundlePacker sg
	currentBundler a
	flow c
	infoForCurrentBundler b
	decode (Lio/netty/channel/ChannelHandlerContext;Lnet/minecraft/network/protocol/Packet;Ljava/util/List;)V a
net/minecraft/network/PacketBundleUnpacker sh
	flow a
	encode (Lio/netty/channel/ChannelHandlerContext;Lnet/minecraft/network/protocol/Packet;Ljava/util/List;)V a
net/minecraft/network/PacketDecoder si
	LOGGER a
	flow b
net/minecraft/network/PacketEncoder sj
	LOGGER a
	flow b
	encode (Lio/netty/channel/ChannelHandlerContext;Lnet/minecraft/network/protocol/Packet;Lio/netty/buffer/ByteBuf;)V a
net/minecraft/network/PacketListener sk
	isAcceptingMessages ()Z a
	onDisconnect (Lnet/minecraft/network/chat/Component;)V a
	shouldPropagateHandlingExceptions ()Z b
net/minecraft/network/PacketSendListener sl
	exceptionallySend (Ljava/util/function/Supplier;)Lnet/minecraft/network/PacketSendListener; a
	onFailure ()Lnet/minecraft/network/protocol/Packet; b
	onSuccess ()V a
	thenRun (Ljava/lang/Runnable;)Lnet/minecraft/network/PacketSendListener; a
net/minecraft/network/RateKickingConnection sm
	EXCEED_REASON j
	LOGGER i
	rateLimitPacketsPerSecond k
	tickSecond ()V b
net/minecraft/network/SkipPacketException sn
net/minecraft/network/TickablePacketListener so
	tick ()V c
net/minecraft/network/Varint21FrameDecoder sp
net/minecraft/network/Varint21LengthFieldPrepender sq
	MAX_BYTES a
	encode (Lio/netty/channel/ChannelHandlerContext;Lio/netty/buffer/ByteBuf;Lio/netty/buffer/ByteBuf;)V a
net/minecraft/network/chat/ChatDecorator sr
	PLAIN a
net/minecraft/network/chat/ChatType ss
	CHAT c
	CODEC a
	DEFAULT_CHAT_DECORATION b
	EMOTE_COMMAND i
	MSG_COMMAND_INCOMING e
	MSG_COMMAND_OUTGOING f
	SAY_COMMAND d
	TEAM_MSG_COMMAND_INCOMING g
	TEAM_MSG_COMMAND_OUTGOING h
	chat j
	narration k
	bind (Lnet/minecraft/network/chat/Component;)Lnet/minecraft/network/chat/ChatType$Bound; a
	bind (Lnet/minecraft/resources/ResourceKey;Lnet/minecraft/commands/CommandSourceStack;)Lnet/minecraft/network/chat/ChatType$Bound; a
	bind (Lnet/minecraft/resources/ResourceKey;Lnet/minecraft/core/RegistryAccess;Lnet/minecraft/network/chat/Component;)Lnet/minecraft/network/chat/ChatType$Bound; a
	bind (Lnet/minecraft/resources/ResourceKey;Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/network/chat/ChatType$Bound; a
	bootstrap (Lnet/minecraft/data/worldgen/BootstapContext;)V a
	chat ()Lnet/minecraft/network/chat/ChatTypeDecoration; a
	create (Ljava/lang/String;)Lnet/minecraft/resources/ResourceKey; a
	narration ()Lnet/minecraft/network/chat/ChatTypeDecoration; b
net/minecraft/network/chat/ChatType$Bound ss$a
	chatType a
	name b
	targetName c
	chatType ()Lnet/minecraft/network/chat/ChatType; a
	decorate (Lnet/minecraft/network/chat/Component;)Lnet/minecraft/network/chat/Component; a
	decorateNarration (Lnet/minecraft/network/chat/Component;)Lnet/minecraft/network/chat/Component; b
	name ()Lnet/minecraft/network/chat/Component; b
	targetName ()Lnet/minecraft/network/chat/Component; c
	toNetwork (Lnet/minecraft/core/RegistryAccess;)Lnet/minecraft/network/chat/ChatType$BoundNetwork; a
	withTargetName (Lnet/minecraft/network/chat/Component;)Lnet/minecraft/network/chat/ChatType$Bound; c
net/minecraft/network/chat/ChatType$BoundNetwork ss$b
	chatType a
	name b
	targetName c
	chatType ()I a
	name ()Lnet/minecraft/network/chat/Component; b
	resolve (Lnet/minecraft/core/RegistryAccess;)Ljava/util/Optional; a
	targetName ()Lnet/minecraft/network/chat/Component; c
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/chat/ChatTypeDecoration st
	CODEC a
	parameters c
	style d
	translationKey b
	decorate (Lnet/minecraft/network/chat/Component;Lnet/minecraft/network/chat/ChatType$Bound;)Lnet/minecraft/network/chat/Component; a
	incomingDirectMessage (Ljava/lang/String;)Lnet/minecraft/network/chat/ChatTypeDecoration; b
	outgoingDirectMessage (Ljava/lang/String;)Lnet/minecraft/network/chat/ChatTypeDecoration; c
	parameters ()Ljava/util/List; b
	resolveParameters (Lnet/minecraft/network/chat/Component;Lnet/minecraft/network/chat/ChatType$Bound;)[Lnet/minecraft/network/chat/Component; b
	style ()Lnet/minecraft/network/chat/Style; c
	teamMessage (Ljava/lang/String;)Lnet/minecraft/network/chat/ChatTypeDecoration; d
	translationKey ()Ljava/lang/String; a
	withSender (Ljava/lang/String;)Lnet/minecraft/network/chat/ChatTypeDecoration; a
net/minecraft/network/chat/ChatTypeDecoration$Parameter st$a
	$VALUES g
	CODEC d
	CONTENT c
	SENDER a
	TARGET b
	name e
	selector f
	$values ()[Lnet/minecraft/network/chat/ChatTypeDecoration$Parameter; a
	getSerializedName ()Ljava/lang/String; c
	select (Lnet/minecraft/network/chat/Component;Lnet/minecraft/network/chat/ChatType$Bound;)Lnet/minecraft/network/chat/Component; a
net/minecraft/network/chat/ChatTypeDecoration$Parameter$Selector st$a$a
net/minecraft/network/chat/ClickEvent su
	action a
	value b
	getAction ()Lnet/minecraft/network/chat/ClickEvent$Action; a
	getValue ()Ljava/lang/String; b
net/minecraft/network/chat/ClickEvent$Action su$a
	$VALUES j
	CHANGE_PAGE e
	COPY_TO_CLIPBOARD f
	LOOKUP g
	OPEN_FILE b
	OPEN_URL a
	RUN_COMMAND c
	SUGGEST_COMMAND d
	allowFromServer h
	name i
	$values ()[Lnet/minecraft/network/chat/ClickEvent$Action; c
	getByName (Ljava/lang/String;)Lnet/minecraft/network/chat/ClickEvent$Action; a
	getName ()Ljava/lang/String; b
	isAllowedFromServer ()Z a
net/minecraft/network/chat/CommonComponents sv
	CONNECT_FAILED p
	ELLIPSIS s
	EMPTY a
	GUI_ACKNOWLEDGE m
	GUI_BACK k
	GUI_CANCEL e
	GUI_CONTINUE j
	GUI_COPY_LINK_TO_CLIPBOARD o
	GUI_DONE d
	GUI_NO g
	GUI_OK h
	GUI_OPEN_IN_BROWSER n
	GUI_PROCEED i
	GUI_TO_TITLE l
	GUI_YES f
	NARRATION_SEPARATOR r
	NEW_LINE q
	OPTION_OFF c
	OPTION_ON b
	SPACE t
	days (J)Lnet/minecraft/network/chat/MutableComponent; a
	hours (J)Lnet/minecraft/network/chat/MutableComponent; b
	joinForNarration ([Lnet/minecraft/network/chat/Component;)Lnet/minecraft/network/chat/MutableComponent; a
	joinLines (Ljava/util/Collection;)Lnet/minecraft/network/chat/Component; a
	joinLines ([Lnet/minecraft/network/chat/Component;)Lnet/minecraft/network/chat/Component; b
	minutes (J)Lnet/minecraft/network/chat/MutableComponent; c
	optionNameValue (Lnet/minecraft/network/chat/Component;Lnet/minecraft/network/chat/Component;)Lnet/minecraft/network/chat/MutableComponent; a
	optionStatus (Lnet/minecraft/network/chat/Component;Z)Lnet/minecraft/network/chat/MutableComponent; a
	optionStatus (Z)Lnet/minecraft/network/chat/Component; a
	space ()Lnet/minecraft/network/chat/MutableComponent; a
net/minecraft/network/chat/Component sw
	contains (Lnet/minecraft/network/chat/Component;)Z a
	copy ()Lnet/minecraft/network/chat/MutableComponent; e
	empty ()Lnet/minecraft/network/chat/MutableComponent; h
	getContents ()Lnet/minecraft/network/chat/ComponentContents; b
	getSiblings ()Ljava/util/List; c
	getString (I)Ljava/lang/String; a
	getStyle ()Lnet/minecraft/network/chat/Style; a
	getVisualOrderText ()Lnet/minecraft/util/FormattedCharSequence; f
	keybind (Ljava/lang/String;)Lnet/minecraft/network/chat/MutableComponent; d
	literal (Ljava/lang/String;)Lnet/minecraft/network/chat/MutableComponent; b
	nbt (Ljava/lang/String;ZLjava/util/Optional;Lnet/minecraft/network/chat/contents/DataSource;)Lnet/minecraft/network/chat/MutableComponent; a
	nullToEmpty (Ljava/lang/String;)Lnet/minecraft/network/chat/Component; a
	plainCopy ()Lnet/minecraft/network/chat/MutableComponent; d
	score (Ljava/lang/String;Ljava/lang/String;)Lnet/minecraft/network/chat/MutableComponent; b
	selector (Ljava/lang/String;Ljava/util/Optional;)Lnet/minecraft/network/chat/MutableComponent; a
	toFlatList ()Ljava/util/List; g
	toFlatList (Lnet/minecraft/network/chat/Style;)Ljava/util/List; a
	translatable (Ljava/lang/String;)Lnet/minecraft/network/chat/MutableComponent; c
	translatable (Ljava/lang/String;[Ljava/lang/Object;)Lnet/minecraft/network/chat/MutableComponent; a
	translatableWithFallback (Ljava/lang/String;Ljava/lang/String;)Lnet/minecraft/network/chat/MutableComponent; a
	translatableWithFallback (Ljava/lang/String;Ljava/lang/String;[Ljava/lang/Object;)Lnet/minecraft/network/chat/MutableComponent; a
	visit (Lnet/minecraft/network/chat/FormattedText$ContentConsumer;)Ljava/util/Optional; a
	visit (Lnet/minecraft/network/chat/FormattedText$StyledContentConsumer;Lnet/minecraft/network/chat/Style;)Ljava/util/Optional; a
net/minecraft/network/chat/Component$Serializer sw$a
	GSON a
	JSON_READER_LINESTART c
	JSON_READER_POS b
	deserialize (Lcom/google/gson/JsonElement;Ljava/lang/reflect/Type;Lcom/google/gson/JsonDeserializationContext;)Lnet/minecraft/network/chat/MutableComponent; a
	fromJson (Lcom/google/gson/JsonElement;)Lnet/minecraft/network/chat/MutableComponent; a
	fromJson (Lcom/mojang/brigadier/StringReader;)Lnet/minecraft/network/chat/MutableComponent; a
	fromJson (Ljava/lang/String;)Lnet/minecraft/network/chat/MutableComponent; a
	fromJsonLenient (Ljava/lang/String;)Lnet/minecraft/network/chat/MutableComponent; b
	getPos (Lcom/google/gson/stream/JsonReader;)I a
	parseSeparator (Ljava/lang/reflect/Type;Lcom/google/gson/JsonDeserializationContext;Lcom/google/gson/JsonObject;)Ljava/util/Optional; a
	serialize (Lnet/minecraft/network/chat/Component;Ljava/lang/reflect/Type;Lcom/google/gson/JsonSerializationContext;)Lcom/google/gson/JsonElement; a
	serializeSeparator (Lcom/google/gson/JsonSerializationContext;Lcom/google/gson/JsonObject;Ljava/util/Optional;)V a
	serializeStyle (Lnet/minecraft/network/chat/Style;Lcom/google/gson/JsonObject;Lcom/google/gson/JsonSerializationContext;)V a
	toJson (Lnet/minecraft/network/chat/Component;)Ljava/lang/String; a
	toJsonTree (Lnet/minecraft/network/chat/Component;)Lcom/google/gson/JsonElement; c
	toStableJson (Lnet/minecraft/network/chat/Component;)Ljava/lang/String; b
	unwrapTextArgument (Ljava/lang/Object;)Ljava/lang/Object; a
net/minecraft/network/chat/ComponentContents sx
	EMPTY a
	resolve (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/world/entity/Entity;I)Lnet/minecraft/network/chat/MutableComponent; a
	visit (Lnet/minecraft/network/chat/FormattedText$ContentConsumer;)Ljava/util/Optional; a
	visit (Lnet/minecraft/network/chat/FormattedText$StyledContentConsumer;Lnet/minecraft/network/chat/Style;)Ljava/util/Optional; a
net/minecraft/network/chat/ComponentUtils sy
	DEFAULT_NO_STYLE_SEPARATOR c
	DEFAULT_SEPARATOR b
	DEFAULT_SEPARATOR_TEXT a
	copyOnClickText (Ljava/lang/String;)Lnet/minecraft/network/chat/MutableComponent; a
	formatAndSortList (Ljava/util/Collection;Ljava/util/function/Function;)Lnet/minecraft/network/chat/Component; a
	formatList (Ljava/util/Collection;)Lnet/minecraft/network/chat/Component; a
	formatList (Ljava/util/Collection;Ljava/util/Optional;Ljava/util/function/Function;)Lnet/minecraft/network/chat/MutableComponent; a
	formatList (Ljava/util/Collection;Ljava/util/function/Function;)Lnet/minecraft/network/chat/Component; b
	formatList (Ljava/util/Collection;Lnet/minecraft/network/chat/Component;)Lnet/minecraft/network/chat/Component; a
	formatList (Ljava/util/Collection;Lnet/minecraft/network/chat/Component;Ljava/util/function/Function;)Lnet/minecraft/network/chat/MutableComponent; a
	fromMessage (Lcom/mojang/brigadier/Message;)Lnet/minecraft/network/chat/Component; a
	getDisplayName (Lcom/mojang/authlib/GameProfile;)Lnet/minecraft/network/chat/Component; a
	isTranslationResolvable (Lnet/minecraft/network/chat/Component;)Z b
	mergeStyles (Lnet/minecraft/network/chat/MutableComponent;Lnet/minecraft/network/chat/Style;)Lnet/minecraft/network/chat/MutableComponent; a
	resolveStyle (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/network/chat/Style;Lnet/minecraft/world/entity/Entity;I)Lnet/minecraft/network/chat/Style; a
	updateForEntity (Lnet/minecraft/commands/CommandSourceStack;Ljava/util/Optional;Lnet/minecraft/world/entity/Entity;I)Ljava/util/Optional; a
	updateForEntity (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/network/chat/Component;Lnet/minecraft/world/entity/Entity;I)Lnet/minecraft/network/chat/MutableComponent; a
	wrapInSquareBrackets (Lnet/minecraft/network/chat/Component;)Lnet/minecraft/network/chat/MutableComponent; a
net/minecraft/network/chat/FilterMask sz
	CODEC a
	FILTERED_STYLE d
	FULLY_FILTERED b
	FULLY_FILTERED_CODEC f
	HASH h
	PARTIALLY_FILTERED_CODEC g
	PASS_THROUGH c
	PASS_THROUGH_CODEC e
	mask i
	type j
	apply (Ljava/lang/String;)Ljava/lang/String; a
	applyWithFormatting (Ljava/lang/String;)Lnet/minecraft/network/chat/Component; b
	isEmpty ()Z a
	isFullyFiltered ()Z b
	mask ()Ljava/util/BitSet; d
	read (Lnet/minecraft/network/FriendlyByteBuf;)Lnet/minecraft/network/chat/FilterMask; a
	setFiltered (I)V a
	type ()Lnet/minecraft/network/chat/FilterMask$Type; c
	write (Lnet/minecraft/network/FriendlyByteBuf;Lnet/minecraft/network/chat/FilterMask;)V a
net/minecraft/network/chat/FilterMask$Type sz$a
	$VALUES f
	FULLY_FILTERED b
	PARTIALLY_FILTERED c
	PASS_THROUGH a
	codec e
	serializedName d
	$values ()[Lnet/minecraft/network/chat/FilterMask$Type; f
	codec ()Lcom/mojang/serialization/Codec; a
	getSerializedName ()Ljava/lang/String; c
net/minecraft/network/chat/FormattedText ta
	EMPTY b
	STOP_ITERATION a
	composite (Ljava/util/List;)Lnet/minecraft/network/chat/FormattedText; a
	composite ([Lnet/minecraft/network/chat/FormattedText;)Lnet/minecraft/network/chat/FormattedText; a
	of (Ljava/lang/String;)Lnet/minecraft/network/chat/FormattedText; e
	of (Ljava/lang/String;Lnet/minecraft/network/chat/Style;)Lnet/minecraft/network/chat/FormattedText; a
	visit (Lnet/minecraft/network/chat/FormattedText$ContentConsumer;)Ljava/util/Optional; a
	visit (Lnet/minecraft/network/chat/FormattedText$StyledContentConsumer;Lnet/minecraft/network/chat/Style;)Ljava/util/Optional; a
net/minecraft/network/chat/FormattedText$ContentConsumer ta$a
net/minecraft/network/chat/FormattedText$StyledContentConsumer ta$b
net/minecraft/network/chat/HoverEvent tb
	LOGGER a
	action b
	value c
	deserialize (Lcom/google/gson/JsonObject;)Lnet/minecraft/network/chat/HoverEvent; a
	getAction ()Lnet/minecraft/network/chat/HoverEvent$Action; a
	getValue (Lnet/minecraft/network/chat/HoverEvent$Action;)Ljava/lang/Object; a
	serialize ()Lcom/google/gson/JsonObject; b
net/minecraft/network/chat/HoverEvent$Action tb$a
	LOOKUP d
	SHOW_ENTITY c
	SHOW_ITEM b
	SHOW_TEXT a
	allowFromServer f
	argDeserializer g
	argSerializer h
	legacyArgDeserializer i
	name e
	cast (Ljava/lang/Object;)Ljava/lang/Object; b
	deserialize (Lcom/google/gson/JsonElement;)Lnet/minecraft/network/chat/HoverEvent; a
	deserializeFromLegacy (Lnet/minecraft/network/chat/Component;)Lnet/minecraft/network/chat/HoverEvent; a
	getByName (Ljava/lang/String;)Lnet/minecraft/network/chat/HoverEvent$Action; a
	getName ()Ljava/lang/String; b
	isAllowedFromServer ()Z a
	serializeArg (Ljava/lang/Object;)Lcom/google/gson/JsonElement; a
net/minecraft/network/chat/HoverEvent$EntityTooltipInfo tb$b
	id b
	linesCache d
	name c
	type a
	create (Lcom/google/gson/JsonElement;)Lnet/minecraft/network/chat/HoverEvent$EntityTooltipInfo; a
	create (Lnet/minecraft/network/chat/Component;)Lnet/minecraft/network/chat/HoverEvent$EntityTooltipInfo; a
	getTooltipLines ()Ljava/util/List; b
	serialize ()Lcom/google/gson/JsonElement; a
net/minecraft/network/chat/HoverEvent$ItemStackInfo tb$c
	count b
	item a
	itemStack d
	tag c
	create (Lcom/google/gson/JsonElement;)Lnet/minecraft/network/chat/HoverEvent$ItemStackInfo; a
	create (Lnet/minecraft/network/chat/Component;)Lnet/minecraft/network/chat/HoverEvent$ItemStackInfo; a
	getItemStack ()Lnet/minecraft/world/item/ItemStack; a
	serialize ()Lcom/google/gson/JsonElement; b
net/minecraft/network/chat/LastSeenMessages tc
	CODEC a
	EMPTY b
	LAST_SEEN_MESSAGES_MAX_LENGTH c
	entries d
	entries ()Ljava/util/List; a
	pack (Lnet/minecraft/network/chat/MessageSignatureCache;)Lnet/minecraft/network/chat/LastSeenMessages$Packed; a
	updateSignature (Lnet/minecraft/util/SignatureUpdater$Output;)V a
net/minecraft/network/chat/LastSeenMessages$Packed tc$a
	EMPTY a
	entries b
	entries ()Ljava/util/List; a
	unpack (Lnet/minecraft/network/chat/MessageSignatureCache;)Ljava/util/Optional; a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/chat/LastSeenMessages$Update tc$b
	acknowledged b
	offset a
	acknowledged ()Ljava/util/BitSet; b
	offset ()I a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/chat/LastSeenMessagesTracker td
	lastTrackedMessage d
	offset c
	tail b
	trackedMessages a
	addEntry (Lnet/minecraft/network/chat/LastSeenTrackedEntry;)V a
	addPending (Lnet/minecraft/network/chat/MessageSignature;Z)Z a
	generateAndApplyUpdate ()Lnet/minecraft/network/chat/LastSeenMessagesTracker$Update; b
	getAndClearOffset ()I a
	ignorePending (Lnet/minecraft/network/chat/MessageSignature;)V a
	offset ()I c
net/minecraft/network/chat/LastSeenMessagesTracker$Update td$a
	lastSeen a
	update b
	lastSeen ()Lnet/minecraft/network/chat/LastSeenMessages; a
	update ()Lnet/minecraft/network/chat/LastSeenMessages$Update; b
net/minecraft/network/chat/LastSeenMessagesValidator te
	lastPendingMessage c
	lastSeenCount a
	trackedMessages b
	addPending (Lnet/minecraft/network/chat/MessageSignature;)V a
	applyOffset (I)Z a
	applyUpdate (Lnet/minecraft/network/chat/LastSeenMessages$Update;)Ljava/util/Optional; a
	trackedMessagesCount ()I a
net/minecraft/network/chat/LastSeenTrackedEntry tf
	pending b
	signature a
	acknowledge ()Lnet/minecraft/network/chat/LastSeenTrackedEntry; a
	pending ()Z c
	signature ()Lnet/minecraft/network/chat/MessageSignature; b
net/minecraft/network/chat/LocalChatSession tg
	keyPair b
	sessionId a
	asRemote ()Lnet/minecraft/network/chat/RemoteChatSession; a
	create (Lnet/minecraft/world/entity/player/ProfileKeyPair;)Lnet/minecraft/network/chat/LocalChatSession; a
	createMessageEncoder (Ljava/util/UUID;)Lnet/minecraft/network/chat/SignedMessageChain$Encoder; a
	keyPair ()Lnet/minecraft/world/entity/player/ProfileKeyPair; c
	sessionId ()Ljava/util/UUID; b
net/minecraft/network/chat/MessageSignature th
	BYTES b
	CODEC a
	bytes c
	asByteBuffer ()Ljava/nio/ByteBuffer; a
	bytes ()[B b
	pack (Lnet/minecraft/network/chat/MessageSignatureCache;)Lnet/minecraft/network/chat/MessageSignature$Packed; a
	read (Lnet/minecraft/network/FriendlyByteBuf;)Lnet/minecraft/network/chat/MessageSignature; a
	verify (Lnet/minecraft/util/SignatureValidator;Lnet/minecraft/util/SignatureUpdater;)Z a
	write (Lnet/minecraft/network/FriendlyByteBuf;Lnet/minecraft/network/chat/MessageSignature;)V a
net/minecraft/network/chat/MessageSignature$Packed th$a
	FULL_SIGNATURE a
	fullSignature c
	id b
	fullSignature ()Lnet/minecraft/network/chat/MessageSignature; b
	id ()I a
	read (Lnet/minecraft/network/FriendlyByteBuf;)Lnet/minecraft/network/chat/MessageSignature$Packed; a
	unpack (Lnet/minecraft/network/chat/MessageSignatureCache;)Ljava/util/Optional; a
	write (Lnet/minecraft/network/FriendlyByteBuf;Lnet/minecraft/network/chat/MessageSignature$Packed;)V a
net/minecraft/network/chat/MessageSignatureCache ti
	DEFAULT_CAPACITY b
	NOT_FOUND a
	entries c
	createDefault ()Lnet/minecraft/network/chat/MessageSignatureCache; a
	pack (Lnet/minecraft/network/chat/MessageSignature;)I a
	push (Ljava/util/ArrayDeque;)V a
	push (Ljava/util/List;)V a
	push (Lnet/minecraft/network/chat/PlayerChatMessage;)V a
	unpack (I)Lnet/minecraft/network/chat/MessageSignature; a
net/minecraft/network/chat/MutableComponent tj
	contents c
	decomposedWith g
	siblings d
	style e
	visualOrderText f
	append (Ljava/lang/String;)Lnet/minecraft/network/chat/MutableComponent; f
	append (Lnet/minecraft/network/chat/Component;)Lnet/minecraft/network/chat/MutableComponent; b
	create (Lnet/minecraft/network/chat/ComponentContents;)Lnet/minecraft/network/chat/MutableComponent; a
	getContents ()Lnet/minecraft/network/chat/ComponentContents; b
	getSiblings ()Ljava/util/List; c
	getStyle ()Lnet/minecraft/network/chat/Style; a
	getVisualOrderText ()Lnet/minecraft/util/FormattedCharSequence; f
	setStyle (Lnet/minecraft/network/chat/Style;)Lnet/minecraft/network/chat/MutableComponent; b
	withStyle (Ljava/util/function/UnaryOperator;)Lnet/minecraft/network/chat/MutableComponent; a
	withStyle (Lnet/minecraft/ChatFormatting;)Lnet/minecraft/network/chat/MutableComponent; a
	withStyle (Lnet/minecraft/network/chat/Style;)Lnet/minecraft/network/chat/MutableComponent; c
	withStyle ([Lnet/minecraft/ChatFormatting;)Lnet/minecraft/network/chat/MutableComponent; a
net/minecraft/network/chat/OutgoingChatMessage tk
	content ()Lnet/minecraft/network/chat/Component; a
	create (Lnet/minecraft/network/chat/PlayerChatMessage;)Lnet/minecraft/network/chat/OutgoingChatMessage; a
	sendToPlayer (Lnet/minecraft/server/level/ServerPlayer;ZLnet/minecraft/network/chat/ChatType$Bound;)V a
net/minecraft/network/chat/OutgoingChatMessage$Disguised tk$a
	content a
	content ()Lnet/minecraft/network/chat/Component; a
	sendToPlayer (Lnet/minecraft/server/level/ServerPlayer;ZLnet/minecraft/network/chat/ChatType$Bound;)V a
net/minecraft/network/chat/OutgoingChatMessage$Player tk$b
	message a
	content ()Lnet/minecraft/network/chat/Component; a
	message ()Lnet/minecraft/network/chat/PlayerChatMessage; b
	sendToPlayer (Lnet/minecraft/server/level/ServerPlayer;ZLnet/minecraft/network/chat/ChatType$Bound;)V a
net/minecraft/network/chat/PlayerChatMessage tl
	MAP_CODEC a
	MESSAGE_EXPIRES_AFTER_CLIENT c
	MESSAGE_EXPIRES_AFTER_SERVER b
	SYSTEM_SENDER i
	filterMask h
	link d
	signature e
	signedBody f
	unsignedContent g
	decoratedContent ()Lnet/minecraft/network/chat/Component; c
	filter (Lnet/minecraft/network/chat/FilterMask;)Lnet/minecraft/network/chat/PlayerChatMessage; a
	filter (Z)Lnet/minecraft/network/chat/PlayerChatMessage; a
	filterMask ()Lnet/minecraft/network/chat/FilterMask; n
	hasExpiredClient (Ljava/time/Instant;)Z b
	hasExpiredServer (Ljava/time/Instant;)Z a
	hasSignature ()Z h
	hasSignatureFrom (Ljava/util/UUID;)Z a
	isFullyFiltered ()Z i
	isSystem ()Z g
	link ()Lnet/minecraft/network/chat/SignedMessageLink; j
	removeUnsignedContent ()Lnet/minecraft/network/chat/PlayerChatMessage; a
	salt ()J e
	sender ()Ljava/util/UUID; f
	signature ()Lnet/minecraft/network/chat/MessageSignature; k
	signedBody ()Lnet/minecraft/network/chat/SignedMessageBody; l
	signedContent ()Ljava/lang/String; b
	system (Ljava/lang/String;)Lnet/minecraft/network/chat/PlayerChatMessage; a
	timeStamp ()Ljava/time/Instant; d
	unsigned (Ljava/util/UUID;Ljava/lang/String;)Lnet/minecraft/network/chat/PlayerChatMessage; a
	unsignedContent ()Lnet/minecraft/network/chat/Component; m
	updateSignature (Lnet/minecraft/util/SignatureUpdater$Output;Lnet/minecraft/network/chat/SignedMessageLink;Lnet/minecraft/network/chat/SignedMessageBody;)V a
	verify (Lnet/minecraft/util/SignatureValidator;)Z a
	withUnsignedContent (Lnet/minecraft/network/chat/Component;)Lnet/minecraft/network/chat/PlayerChatMessage; a
net/minecraft/network/chat/RemoteChatSession tm
	profilePublicKey b
	sessionId a
	asData ()Lnet/minecraft/network/chat/RemoteChatSession$Data; b
	createMessageDecoder (Ljava/util/UUID;)Lnet/minecraft/network/chat/SignedMessageChain$Decoder; a
	createMessageValidator ()Lnet/minecraft/network/chat/SignedMessageValidator; a
	hasExpired ()Z c
	profilePublicKey ()Lnet/minecraft/world/entity/player/ProfilePublicKey; e
	sessionId ()Ljava/util/UUID; d
net/minecraft/network/chat/RemoteChatSession$Data tm$a
	profilePublicKey b
	sessionId a
	profilePublicKey ()Lnet/minecraft/world/entity/player/ProfilePublicKey$Data; b
	read (Lnet/minecraft/network/FriendlyByteBuf;)Lnet/minecraft/network/chat/RemoteChatSession$Data; a
	sessionId ()Ljava/util/UUID; a
	validate (Lcom/mojang/authlib/GameProfile;Lnet/minecraft/util/SignatureValidator;Ljava/time/Duration;)Lnet/minecraft/network/chat/RemoteChatSession; a
	write (Lnet/minecraft/network/FriendlyByteBuf;Lnet/minecraft/network/chat/RemoteChatSession$Data;)V a
net/minecraft/network/chat/SignableCommand tn
	arguments a
	arguments ()Ljava/util/List; a
	collectArguments (Ljava/lang/String;Lcom/mojang/brigadier/context/CommandContextBuilder;)Ljava/util/List; a
	of (Lcom/mojang/brigadier/ParseResults;)Lnet/minecraft/network/chat/SignableCommand; a
net/minecraft/network/chat/SignableCommand$Argument tn$a
	node a
	value b
	name ()Ljava/lang/String; a
	node ()Lcom/mojang/brigadier/tree/ArgumentCommandNode; b
	value ()Ljava/lang/String; c
net/minecraft/network/chat/SignedMessageBody to
	MAP_CODEC a
	content b
	lastSeen e
	salt d
	timeStamp c
	content ()Ljava/lang/String; a
	lastSeen ()Lnet/minecraft/network/chat/LastSeenMessages; d
	pack (Lnet/minecraft/network/chat/MessageSignatureCache;)Lnet/minecraft/network/chat/SignedMessageBody$Packed; a
	salt ()J c
	timeStamp ()Ljava/time/Instant; b
	unsigned (Ljava/lang/String;)Lnet/minecraft/network/chat/SignedMessageBody; a
	updateSignature (Lnet/minecraft/util/SignatureUpdater$Output;)V a
net/minecraft/network/chat/SignedMessageBody$Packed to$a
	content a
	lastSeen d
	salt c
	timeStamp b
	content ()Ljava/lang/String; a
	lastSeen ()Lnet/minecraft/network/chat/LastSeenMessages$Packed; d
	salt ()J c
	timeStamp ()Ljava/time/Instant; b
	unpack (Lnet/minecraft/network/chat/MessageSignatureCache;)Ljava/util/Optional; a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/chat/SignedMessageChain tp
	LOGGER a
	nextLink b
	advanceLink ()Lnet/minecraft/network/chat/SignedMessageLink; a
	decoder (Lnet/minecraft/world/entity/player/ProfilePublicKey;)Lnet/minecraft/network/chat/SignedMessageChain$Decoder; a
	encoder (Lnet/minecraft/util/Signer;)Lnet/minecraft/network/chat/SignedMessageChain$Encoder; a
net/minecraft/network/chat/SignedMessageChain$DecodeException tp$a
	shouldDisconnect a
	shouldDisconnect ()Z a
net/minecraft/network/chat/SignedMessageChain$Decoder tp$b
	REJECT_ALL a
net/minecraft/network/chat/SignedMessageChain$Encoder tp$c
	UNSIGNED a
net/minecraft/network/chat/SignedMessageLink tq
	CODEC a
	index b
	sender c
	sessionId d
	advance ()Lnet/minecraft/network/chat/SignedMessageLink; a
	index ()I b
	isDescendantOf (Lnet/minecraft/network/chat/SignedMessageLink;)Z a
	root (Ljava/util/UUID;Ljava/util/UUID;)Lnet/minecraft/network/chat/SignedMessageLink; a
	sender ()Ljava/util/UUID; c
	sessionId ()Ljava/util/UUID; d
	unsigned (Ljava/util/UUID;)Lnet/minecraft/network/chat/SignedMessageLink; a
	updateSignature (Lnet/minecraft/util/SignatureUpdater$Output;)V a
net/minecraft/network/chat/SignedMessageValidator tr
	ACCEPT_UNSIGNED a
	REJECT_ALL b
net/minecraft/network/chat/SignedMessageValidator$KeyBased tr$a
	isChainValid e
	lastMessage d
	validator c
	validateChain (Lnet/minecraft/network/chat/PlayerChatMessage;)Z a
net/minecraft/network/chat/Style ts
	DEFAULT_FONT c
	EMPTY a
	FORMATTING_CODEC b
	bold e
	clickEvent j
	color d
	font m
	hoverEvent k
	insertion l
	italic f
	obfuscated i
	strikethrough h
	underlined g
	applyFormat (Lnet/minecraft/ChatFormatting;)Lnet/minecraft/network/chat/Style; b
	applyFormats ([Lnet/minecraft/ChatFormatting;)Lnet/minecraft/network/chat/Style; a
	applyLegacyFormat (Lnet/minecraft/ChatFormatting;)Lnet/minecraft/network/chat/Style; c
	applyTo (Lnet/minecraft/network/chat/Style;)Lnet/minecraft/network/chat/Style; a
	create (Ljava/util/Optional;Ljava/util/Optional;Ljava/util/Optional;Ljava/util/Optional;Ljava/util/Optional;Ljava/util/Optional;Ljava/util/Optional;Ljava/util/Optional;)Lnet/minecraft/network/chat/Style; a
	getClickEvent ()Lnet/minecraft/network/chat/ClickEvent; h
	getColor ()Lnet/minecraft/network/chat/TextColor; a
	getFont ()Lnet/minecraft/resources/ResourceLocation; k
	getHoverEvent ()Lnet/minecraft/network/chat/HoverEvent; i
	getInsertion ()Ljava/lang/String; j
	isBold ()Z b
	isEmpty ()Z g
	isItalic ()Z c
	isObfuscated ()Z f
	isStrikethrough ()Z d
	isUnderlined ()Z e
	withBold (Ljava/lang/Boolean;)Lnet/minecraft/network/chat/Style; a
	withClickEvent (Lnet/minecraft/network/chat/ClickEvent;)Lnet/minecraft/network/chat/Style; a
	withColor (I)Lnet/minecraft/network/chat/Style; a
	withColor (Lnet/minecraft/ChatFormatting;)Lnet/minecraft/network/chat/Style; a
	withColor (Lnet/minecraft/network/chat/TextColor;)Lnet/minecraft/network/chat/Style; a
	withFont (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/network/chat/Style; a
	withHoverEvent (Lnet/minecraft/network/chat/HoverEvent;)Lnet/minecraft/network/chat/Style; a
	withInsertion (Ljava/lang/String;)Lnet/minecraft/network/chat/Style; a
	withItalic (Ljava/lang/Boolean;)Lnet/minecraft/network/chat/Style; b
	withObfuscated (Ljava/lang/Boolean;)Lnet/minecraft/network/chat/Style; e
	withStrikethrough (Ljava/lang/Boolean;)Lnet/minecraft/network/chat/Style; d
	withUnderlined (Ljava/lang/Boolean;)Lnet/minecraft/network/chat/Style; c
net/minecraft/network/chat/Style$Serializer ts$b
	deserialize (Lcom/google/gson/JsonElement;Ljava/lang/reflect/Type;Lcom/google/gson/JsonDeserializationContext;)Lnet/minecraft/network/chat/Style; a
	getClickEvent (Lcom/google/gson/JsonObject;)Lnet/minecraft/network/chat/ClickEvent; c
	getFont (Lcom/google/gson/JsonObject;)Lnet/minecraft/resources/ResourceLocation; a
	getHoverEvent (Lcom/google/gson/JsonObject;)Lnet/minecraft/network/chat/HoverEvent; b
	getInsertion (Lcom/google/gson/JsonObject;)Ljava/lang/String; d
	getOptionalFlag (Lcom/google/gson/JsonObject;Ljava/lang/String;)Ljava/lang/Boolean; a
	getTextColor (Lcom/google/gson/JsonObject;)Lnet/minecraft/network/chat/TextColor; e
	serialize (Lnet/minecraft/network/chat/Style;Ljava/lang/reflect/Type;Lcom/google/gson/JsonSerializationContext;)Lcom/google/gson/JsonElement; a
net/minecraft/network/chat/SubStringSource tt
	charStyles b
	plainText a
	reverseCharModifier c
	create (Lnet/minecraft/network/chat/FormattedText;)Lnet/minecraft/network/chat/SubStringSource; a
	create (Lnet/minecraft/network/chat/FormattedText;Lit/unimi/dsi/fastutil/ints/Int2IntFunction;Ljava/util/function/UnaryOperator;)Lnet/minecraft/network/chat/SubStringSource; a
	getPlainText ()Ljava/lang/String; a
	substring (IIZ)Ljava/util/List; a
net/minecraft/network/chat/TextColor tu
	CODEC a
	CUSTOM_COLOR_PREFIX b
	LEGACY_FORMAT_TO_COLOR c
	NAMED_COLORS d
	name f
	value e
	formatValue ()Ljava/lang/String; c
	fromLegacyFormat (Lnet/minecraft/ChatFormatting;)Lnet/minecraft/network/chat/TextColor; a
	fromRgb (I)Lnet/minecraft/network/chat/TextColor; a
	getValue ()I a
	parseColor (Ljava/lang/String;)Lnet/minecraft/network/chat/TextColor; a
	serialize ()Ljava/lang/String; b
net/minecraft/network/chat/ThrowingComponent tv
	component a
	getComponent ()Lnet/minecraft/network/chat/Component; b
net/minecraft/network/chat/contents/BlockDataSource tw
	compiledPos b
	posPattern a
	compilePos (Ljava/lang/String;)Lnet/minecraft/commands/arguments/coordinates/Coordinates; a
	compiledPos ()Lnet/minecraft/commands/arguments/coordinates/Coordinates; b
	posPattern ()Ljava/lang/String; a
net/minecraft/network/chat/contents/DataSource tx
net/minecraft/network/chat/contents/EntityDataSource ty
	compiledSelector b
	selectorPattern a
	compileSelector (Ljava/lang/String;)Lnet/minecraft/commands/arguments/selector/EntitySelector; a
	compiledSelector ()Lnet/minecraft/commands/arguments/selector/EntitySelector; b
	selectorPattern ()Ljava/lang/String; a
net/minecraft/network/chat/contents/KeybindContents tz
	name b
	nameResolver c
	getName ()Ljava/lang/String; a
	getNestedComponent ()Lnet/minecraft/network/chat/Component; b
	visit (Lnet/minecraft/network/chat/FormattedText$ContentConsumer;)Ljava/util/Optional; a
	visit (Lnet/minecraft/network/chat/FormattedText$StyledContentConsumer;Lnet/minecraft/network/chat/Style;)Ljava/util/Optional; a
net/minecraft/network/chat/contents/KeybindResolver ua
	keyResolver a
	setKeyResolver (Ljava/util/function/Function;)V a
net/minecraft/network/chat/contents/LiteralContents ub
	text b
	text ()Ljava/lang/String; a
	visit (Lnet/minecraft/network/chat/FormattedText$ContentConsumer;)Ljava/util/Optional; a
	visit (Lnet/minecraft/network/chat/FormattedText$StyledContentConsumer;Lnet/minecraft/network/chat/Style;)Ljava/util/Optional; a
net/minecraft/network/chat/contents/NbtContents uc
	LOGGER c
	compiledNbtPath b
	dataSource g
	interpreting d
	nbtPathPattern f
	separator e
	compileNbtPath (Ljava/lang/String;)Lnet/minecraft/commands/arguments/NbtPathArgument$NbtPath; a
	getDataSource ()Lnet/minecraft/network/chat/contents/DataSource; d
	getNbtPath ()Ljava/lang/String; a
	getSeparator ()Ljava/util/Optional; c
	isInterpreting ()Z b
	resolve (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/world/entity/Entity;I)Lnet/minecraft/network/chat/MutableComponent; a
net/minecraft/network/chat/contents/ScoreContents ud
	SCORER_PLACEHOLDER b
	name c
	objective e
	selector d
	findTargetName (Lnet/minecraft/commands/CommandSourceStack;)Ljava/lang/String; a
	getName ()Ljava/lang/String; a
	getObjective ()Ljava/lang/String; c
	getScore (Ljava/lang/String;Lnet/minecraft/commands/CommandSourceStack;)Ljava/lang/String; a
	getSelector ()Lnet/minecraft/commands/arguments/selector/EntitySelector; b
	parseSelector (Ljava/lang/String;)Lnet/minecraft/commands/arguments/selector/EntitySelector; a
	resolve (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/world/entity/Entity;I)Lnet/minecraft/network/chat/MutableComponent; a
net/minecraft/network/chat/contents/SelectorContents ue
	LOGGER c
	pattern d
	selector e
	separator b
	getPattern ()Ljava/lang/String; a
	getSelector ()Lnet/minecraft/commands/arguments/selector/EntitySelector; b
	getSeparator ()Ljava/util/Optional; c
	parseSelector (Ljava/lang/String;)Lnet/minecraft/commands/arguments/selector/EntitySelector; a
	resolve (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/world/entity/Entity;I)Lnet/minecraft/network/chat/MutableComponent; a
	visit (Lnet/minecraft/network/chat/FormattedText$ContentConsumer;)Ljava/util/Optional; a
	visit (Lnet/minecraft/network/chat/FormattedText$StyledContentConsumer;Lnet/minecraft/network/chat/Style;)Ljava/util/Optional; a
net/minecraft/network/chat/contents/StorageDataSource uf
	id a
	id ()Lnet/minecraft/resources/ResourceLocation; a
net/minecraft/network/chat/contents/TranslatableContents ug
	FORMAT_PATTERN j
	NO_ARGS b
	TEXT_NULL d
	TEXT_PERCENT c
	args g
	decomposedParts i
	decomposedWith h
	fallback f
	key e
	decompose ()V d
	decomposeTemplate (Ljava/lang/String;Ljava/util/function/Consumer;)V a
	getArgs ()[Ljava/lang/Object; c
	getArgument (I)Lnet/minecraft/network/chat/FormattedText; a
	getFallback ()Ljava/lang/String; b
	getKey ()Ljava/lang/String; a
	resolve (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/world/entity/Entity;I)Lnet/minecraft/network/chat/MutableComponent; a
	visit (Lnet/minecraft/network/chat/FormattedText$ContentConsumer;)Ljava/util/Optional; a
	visit (Lnet/minecraft/network/chat/FormattedText$StyledContentConsumer;Lnet/minecraft/network/chat/Style;)Ljava/util/Optional; a
net/minecraft/network/chat/contents/TranslatableFormatException uh
net/minecraft/network/protocol/BundleDelimiterPacket ul
	handle (Lnet/minecraft/network/PacketListener;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/BundlePacket um
	packets a
	subPackets ()Ljava/lang/Iterable; a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/BundlerInfo un
	BUNDLER_PROVIDER a
	BUNDLE_SIZE_LIMIT b
	EMPTY c
	createForPacket (Ljava/lang/Class;Ljava/util/function/Function;Lnet/minecraft/network/protocol/BundleDelimiterPacket;)Lnet/minecraft/network/protocol/BundlerInfo; a
	startPacketBundling (Lnet/minecraft/network/protocol/Packet;)Lnet/minecraft/network/protocol/BundlerInfo$Bundler; a
	unbundlePacket (Lnet/minecraft/network/protocol/Packet;Ljava/util/function/Consumer;)V a
net/minecraft/network/protocol/BundlerInfo$Bundler un$a
	addPacket (Lnet/minecraft/network/protocol/Packet;)Lnet/minecraft/network/protocol/Packet; a
net/minecraft/network/protocol/BundlerInfo$Provider un$b
	getBundlerInfo (Lnet/minecraft/network/protocol/PacketFlow;)Lnet/minecraft/network/protocol/BundlerInfo; a
net/minecraft/network/protocol/Packet uo
	handle (Lnet/minecraft/network/PacketListener;)V a
	isSkippable ()Z b
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/PacketFlow up
	$VALUES c
	CLIENTBOUND b
	SERVERBOUND a
	$values ()[Lnet/minecraft/network/protocol/PacketFlow; b
	getOpposite ()Lnet/minecraft/network/protocol/PacketFlow; a
net/minecraft/network/protocol/PacketUtils uq
	LOGGER a
	ensureRunningOnSameThread (Lnet/minecraft/network/protocol/Packet;Lnet/minecraft/network/PacketListener;Lnet/minecraft/server/level/ServerLevel;)V a
	ensureRunningOnSameThread (Lnet/minecraft/network/protocol/Packet;Lnet/minecraft/network/PacketListener;Lnet/minecraft/util/thread/BlockableEventLoop;)V a
net/minecraft/network/protocol/game/ClientGamePacketListener ur
	handleAddEntity (Lnet/minecraft/network/protocol/game/ClientboundAddEntityPacket;)V a
	handleAddExperienceOrb (Lnet/minecraft/network/protocol/game/ClientboundAddExperienceOrbPacket;)V a
	handleAddObjective (Lnet/minecraft/network/protocol/game/ClientboundSetObjectivePacket;)V a
	handleAddOrRemoveRecipes (Lnet/minecraft/network/protocol/game/ClientboundRecipePacket;)V a
	handleAddPlayer (Lnet/minecraft/network/protocol/game/ClientboundAddPlayerPacket;)V a
	handleAnimate (Lnet/minecraft/network/protocol/game/ClientboundAnimatePacket;)V a
	handleAwardStats (Lnet/minecraft/network/protocol/game/ClientboundAwardStatsPacket;)V a
	handleBlockChangedAck (Lnet/minecraft/network/protocol/game/ClientboundBlockChangedAckPacket;)V a
	handleBlockDestruction (Lnet/minecraft/network/protocol/game/ClientboundBlockDestructionPacket;)V a
	handleBlockEntityData (Lnet/minecraft/network/protocol/game/ClientboundBlockEntityDataPacket;)V a
	handleBlockEvent (Lnet/minecraft/network/protocol/game/ClientboundBlockEventPacket;)V a
	handleBlockUpdate (Lnet/minecraft/network/protocol/game/ClientboundBlockUpdatePacket;)V a
	handleBossUpdate (Lnet/minecraft/network/protocol/game/ClientboundBossEventPacket;)V a
	handleBundlePacket (Lnet/minecraft/network/protocol/game/ClientboundBundlePacket;)V a
	handleChangeDifficulty (Lnet/minecraft/network/protocol/game/ClientboundChangeDifficultyPacket;)V a
	handleChunkBlocksUpdate (Lnet/minecraft/network/protocol/game/ClientboundSectionBlocksUpdatePacket;)V a
	handleChunksBiomes (Lnet/minecraft/network/protocol/game/ClientboundChunksBiomesPacket;)V a
	handleCommandSuggestions (Lnet/minecraft/network/protocol/game/ClientboundCommandSuggestionsPacket;)V a
	handleCommands (Lnet/minecraft/network/protocol/game/ClientboundCommandsPacket;)V a
	handleContainerClose (Lnet/minecraft/network/protocol/game/ClientboundContainerClosePacket;)V a
	handleContainerContent (Lnet/minecraft/network/protocol/game/ClientboundContainerSetContentPacket;)V a
	handleContainerSetData (Lnet/minecraft/network/protocol/game/ClientboundContainerSetDataPacket;)V a
	handleContainerSetSlot (Lnet/minecraft/network/protocol/game/ClientboundContainerSetSlotPacket;)V a
	handleCustomChatCompletions (Lnet/minecraft/network/protocol/game/ClientboundCustomChatCompletionsPacket;)V a
	handleCustomPayload (Lnet/minecraft/network/protocol/game/ClientboundCustomPayloadPacket;)V a
	handleDamageEvent (Lnet/minecraft/network/protocol/game/ClientboundDamageEventPacket;)V a
	handleDeleteChat (Lnet/minecraft/network/protocol/game/ClientboundDeleteChatPacket;)V a
	handleDisconnect (Lnet/minecraft/network/protocol/game/ClientboundDisconnectPacket;)V a
	handleDisguisedChat (Lnet/minecraft/network/protocol/game/ClientboundDisguisedChatPacket;)V a
	handleEnabledFeatures (Lnet/minecraft/network/protocol/game/ClientboundUpdateEnabledFeaturesPacket;)V a
	handleEntityEvent (Lnet/minecraft/network/protocol/game/ClientboundEntityEventPacket;)V a
	handleEntityLinkPacket (Lnet/minecraft/network/protocol/game/ClientboundSetEntityLinkPacket;)V a
	handleExplosion (Lnet/minecraft/network/protocol/game/ClientboundExplodePacket;)V a
	handleForgetLevelChunk (Lnet/minecraft/network/protocol/game/ClientboundForgetLevelChunkPacket;)V a
	handleGameEvent (Lnet/minecraft/network/protocol/game/ClientboundGameEventPacket;)V a
	handleHorseScreenOpen (Lnet/minecraft/network/protocol/game/ClientboundHorseScreenOpenPacket;)V a
	handleHurtAnimation (Lnet/minecraft/network/protocol/game/ClientboundHurtAnimationPacket;)V a
	handleInitializeBorder (Lnet/minecraft/network/protocol/game/ClientboundInitializeBorderPacket;)V a
	handleItemCooldown (Lnet/minecraft/network/protocol/game/ClientboundCooldownPacket;)V a
	handleKeepAlive (Lnet/minecraft/network/protocol/game/ClientboundKeepAlivePacket;)V a
	handleLevelChunkWithLight (Lnet/minecraft/network/protocol/game/ClientboundLevelChunkWithLightPacket;)V a
	handleLevelEvent (Lnet/minecraft/network/protocol/game/ClientboundLevelEventPacket;)V a
	handleLightUpdatePacket (Lnet/minecraft/network/protocol/game/ClientboundLightUpdatePacket;)V a
	handleLogin (Lnet/minecraft/network/protocol/game/ClientboundLoginPacket;)V a
	handleLookAt (Lnet/minecraft/network/protocol/game/ClientboundPlayerLookAtPacket;)V a
	handleMapItemData (Lnet/minecraft/network/protocol/game/ClientboundMapItemDataPacket;)V a
	handleMerchantOffers (Lnet/minecraft/network/protocol/game/ClientboundMerchantOffersPacket;)V a
	handleMoveEntity (Lnet/minecraft/network/protocol/game/ClientboundMoveEntityPacket;)V a
	handleMovePlayer (Lnet/minecraft/network/protocol/game/ClientboundPlayerPositionPacket;)V a
	handleMoveVehicle (Lnet/minecraft/network/protocol/game/ClientboundMoveVehiclePacket;)V a
	handleOpenBook (Lnet/minecraft/network/protocol/game/ClientboundOpenBookPacket;)V a
	handleOpenScreen (Lnet/minecraft/network/protocol/game/ClientboundOpenScreenPacket;)V a
	handleOpenSignEditor (Lnet/minecraft/network/protocol/game/ClientboundOpenSignEditorPacket;)V a
	handleParticleEvent (Lnet/minecraft/network/protocol/game/ClientboundLevelParticlesPacket;)V a
	handlePing (Lnet/minecraft/network/protocol/game/ClientboundPingPacket;)V a
	handlePlaceRecipe (Lnet/minecraft/network/protocol/game/ClientboundPlaceGhostRecipePacket;)V a
	handlePlayerAbilities (Lnet/minecraft/network/protocol/game/ClientboundPlayerAbilitiesPacket;)V a
	handlePlayerChat (Lnet/minecraft/network/protocol/game/ClientboundPlayerChatPacket;)V a
	handlePlayerCombatEnd (Lnet/minecraft/network/protocol/game/ClientboundPlayerCombatEndPacket;)V a
	handlePlayerCombatEnter (Lnet/minecraft/network/protocol/game/ClientboundPlayerCombatEnterPacket;)V a
	handlePlayerCombatKill (Lnet/minecraft/network/protocol/game/ClientboundPlayerCombatKillPacket;)V a
	handlePlayerInfoRemove (Lnet/minecraft/network/protocol/game/ClientboundPlayerInfoRemovePacket;)V a
	handlePlayerInfoUpdate (Lnet/minecraft/network/protocol/game/ClientboundPlayerInfoUpdatePacket;)V a
	handleRemoveEntities (Lnet/minecraft/network/protocol/game/ClientboundRemoveEntitiesPacket;)V a
	handleRemoveMobEffect (Lnet/minecraft/network/protocol/game/ClientboundRemoveMobEffectPacket;)V a
	handleResourcePack (Lnet/minecraft/network/protocol/game/ClientboundResourcePackPacket;)V a
	handleRespawn (Lnet/minecraft/network/protocol/game/ClientboundRespawnPacket;)V a
	handleRotateMob (Lnet/minecraft/network/protocol/game/ClientboundRotateHeadPacket;)V a
	handleSelectAdvancementsTab (Lnet/minecraft/network/protocol/game/ClientboundSelectAdvancementsTabPacket;)V a
	handleServerData (Lnet/minecraft/network/protocol/game/ClientboundServerDataPacket;)V a
	handleSetBorderCenter (Lnet/minecraft/network/protocol/game/ClientboundSetBorderCenterPacket;)V a
	handleSetBorderLerpSize (Lnet/minecraft/network/protocol/game/ClientboundSetBorderLerpSizePacket;)V a
	handleSetBorderSize (Lnet/minecraft/network/protocol/game/ClientboundSetBorderSizePacket;)V a
	handleSetBorderWarningDelay (Lnet/minecraft/network/protocol/game/ClientboundSetBorderWarningDelayPacket;)V a
	handleSetBorderWarningDistance (Lnet/minecraft/network/protocol/game/ClientboundSetBorderWarningDistancePacket;)V a
	handleSetCamera (Lnet/minecraft/network/protocol/game/ClientboundSetCameraPacket;)V a
	handleSetCarriedItem (Lnet/minecraft/network/protocol/game/ClientboundSetCarriedItemPacket;)V a
	handleSetChunkCacheCenter (Lnet/minecraft/network/protocol/game/ClientboundSetChunkCacheCenterPacket;)V a
	handleSetChunkCacheRadius (Lnet/minecraft/network/protocol/game/ClientboundSetChunkCacheRadiusPacket;)V a
	handleSetDisplayObjective (Lnet/minecraft/network/protocol/game/ClientboundSetDisplayObjectivePacket;)V a
	handleSetEntityData (Lnet/minecraft/network/protocol/game/ClientboundSetEntityDataPacket;)V a
	handleSetEntityMotion (Lnet/minecraft/network/protocol/game/ClientboundSetEntityMotionPacket;)V a
	handleSetEntityPassengersPacket (Lnet/minecraft/network/protocol/game/ClientboundSetPassengersPacket;)V a
	handleSetEquipment (Lnet/minecraft/network/protocol/game/ClientboundSetEquipmentPacket;)V a
	handleSetExperience (Lnet/minecraft/network/protocol/game/ClientboundSetExperiencePacket;)V a
	handleSetHealth (Lnet/minecraft/network/protocol/game/ClientboundSetHealthPacket;)V a
	handleSetPlayerTeamPacket (Lnet/minecraft/network/protocol/game/ClientboundSetPlayerTeamPacket;)V a
	handleSetScore (Lnet/minecraft/network/protocol/game/ClientboundSetScorePacket;)V a
	handleSetSimulationDistance (Lnet/minecraft/network/protocol/game/ClientboundSetSimulationDistancePacket;)V a
	handleSetSpawn (Lnet/minecraft/network/protocol/game/ClientboundSetDefaultSpawnPositionPacket;)V a
	handleSetTime (Lnet/minecraft/network/protocol/game/ClientboundSetTimePacket;)V a
	handleSoundEntityEvent (Lnet/minecraft/network/protocol/game/ClientboundSoundEntityPacket;)V a
	handleSoundEvent (Lnet/minecraft/network/protocol/game/ClientboundSoundPacket;)V a
	handleStopSoundEvent (Lnet/minecraft/network/protocol/game/ClientboundStopSoundPacket;)V a
	handleSystemChat (Lnet/minecraft/network/protocol/game/ClientboundSystemChatPacket;)V a
	handleTabListCustomisation (Lnet/minecraft/network/protocol/game/ClientboundTabListPacket;)V a
	handleTagQueryPacket (Lnet/minecraft/network/protocol/game/ClientboundTagQueryPacket;)V a
	handleTakeItemEntity (Lnet/minecraft/network/protocol/game/ClientboundTakeItemEntityPacket;)V a
	handleTeleportEntity (Lnet/minecraft/network/protocol/game/ClientboundTeleportEntityPacket;)V a
	handleTitlesClear (Lnet/minecraft/network/protocol/game/ClientboundClearTitlesPacket;)V a
	handleUpdateAdvancementsPacket (Lnet/minecraft/network/protocol/game/ClientboundUpdateAdvancementsPacket;)V a
	handleUpdateAttributes (Lnet/minecraft/network/protocol/game/ClientboundUpdateAttributesPacket;)V a
	handleUpdateMobEffect (Lnet/minecraft/network/protocol/game/ClientboundUpdateMobEffectPacket;)V a
	handleUpdateRecipes (Lnet/minecraft/network/protocol/game/ClientboundUpdateRecipesPacket;)V a
	handleUpdateTags (Lnet/minecraft/network/protocol/game/ClientboundUpdateTagsPacket;)V a
	setActionBarText (Lnet/minecraft/network/protocol/game/ClientboundSetActionBarTextPacket;)V a
	setSubtitleText (Lnet/minecraft/network/protocol/game/ClientboundSetSubtitleTextPacket;)V a
	setTitleText (Lnet/minecraft/network/protocol/game/ClientboundSetTitleTextPacket;)V a
	setTitlesAnimation (Lnet/minecraft/network/protocol/game/ClientboundSetTitlesAnimationPacket;)V a
net/minecraft/network/protocol/game/ClientboundAddEntityPacket us
	LIMIT b
	MAGICAL_QUANTIZATION a
	data o
	id c
	type e
	uuid d
	x f
	xRot l
	xa i
	y g
	yHeadRot n
	yRot m
	ya j
	z h
	za k
	getData ()I n
	getId ()I a
	getType ()Lnet/minecraft/world/entity/EntityType; d
	getUUID ()Ljava/util/UUID; c
	getX ()D e
	getXRot ()F k
	getXa ()D h
	getY ()D f
	getYHeadRot ()F m
	getYRot ()F l
	getYa ()D i
	getZ ()D g
	getZa ()D j
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ClientboundAddExperienceOrbPacket ut
	id a
	value e
	x b
	y c
	z d
	getId ()I a
	getValue ()I f
	getX ()D c
	getY ()D d
	getZ ()D e
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ClientboundAddPlayerPacket uu
	entityId a
	playerId b
	x c
	xRot g
	y d
	yRot f
	z e
	getEntityId ()I a
	getPlayerId ()Ljava/util/UUID; c
	getX ()D d
	getY ()D e
	getZ ()D f
	getxRot ()B h
	getyRot ()B g
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ClientboundAnimatePacket uv
	CRITICAL_HIT d
	MAGIC_CRITICAL_HIT e
	SWING_MAIN_HAND a
	SWING_OFF_HAND c
	WAKE_UP b
	action g
	id f
	getAction ()I c
	getId ()I a
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ClientboundAwardStatsPacket uw
	stats a
	getStats ()Ljava/util/Map; a
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	readStatCap (Lnet/minecraft/network/FriendlyByteBuf;Lnet/minecraft/stats/StatType;)Lnet/minecraft/stats/Stat; a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
	writeStatCap (Lnet/minecraft/network/FriendlyByteBuf;Lnet/minecraft/stats/Stat;)V a
net/minecraft/network/protocol/game/ClientboundBlockChangedAckPacket ux
	sequence a
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	sequence ()I a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ClientboundBlockDestructionPacket uy
	id a
	pos b
	progress c
	getId ()I a
	getPos ()Lnet/minecraft/core/BlockPos; c
	getProgress ()I d
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ClientboundBlockEntityDataPacket uz
	pos a
	tag c
	type b
	create (Lnet/minecraft/world/level/block/entity/BlockEntity;)Lnet/minecraft/network/protocol/game/ClientboundBlockEntityDataPacket; a
	create (Lnet/minecraft/world/level/block/entity/BlockEntity;Ljava/util/function/Function;)Lnet/minecraft/network/protocol/game/ClientboundBlockEntityDataPacket; a
	getPos ()Lnet/minecraft/core/BlockPos; a
	getTag ()Lnet/minecraft/nbt/CompoundTag; d
	getType ()Lnet/minecraft/world/level/block/entity/BlockEntityType; c
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ClientboundBlockEventPacket va
	b0 b
	b1 c
	block d
	pos a
	getB0 ()I c
	getB1 ()I d
	getBlock ()Lnet/minecraft/world/level/block/Block; e
	getPos ()Lnet/minecraft/core/BlockPos; a
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ClientboundBlockUpdatePacket vb
	blockState b
	pos a
	getBlockState ()Lnet/minecraft/world/level/block/state/BlockState; a
	getPos ()Lnet/minecraft/core/BlockPos; c
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ClientboundBossEventPacket vc
	FLAG_DARKEN a
	FLAG_FOG c
	FLAG_MUSIC b
	REMOVE_OPERATION f
	id d
	operation e
	createAddPacket (Lnet/minecraft/world/BossEvent;)Lnet/minecraft/network/protocol/game/ClientboundBossEventPacket; a
	createRemovePacket (Ljava/util/UUID;)Lnet/minecraft/network/protocol/game/ClientboundBossEventPacket; a
	createUpdateNamePacket (Lnet/minecraft/world/BossEvent;)Lnet/minecraft/network/protocol/game/ClientboundBossEventPacket; c
	createUpdateProgressPacket (Lnet/minecraft/world/BossEvent;)Lnet/minecraft/network/protocol/game/ClientboundBossEventPacket; b
	createUpdatePropertiesPacket (Lnet/minecraft/world/BossEvent;)Lnet/minecraft/network/protocol/game/ClientboundBossEventPacket; e
	createUpdateStylePacket (Lnet/minecraft/world/BossEvent;)Lnet/minecraft/network/protocol/game/ClientboundBossEventPacket; d
	dispatch (Lnet/minecraft/network/protocol/game/ClientboundBossEventPacket$Handler;)V a
	encodeProperties (ZZZ)I a
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ClientboundBossEventPacket$AddOperation vc$a
	color c
	createWorldFog g
	darkenScreen e
	name a
	overlay d
	playMusic f
	progress b
	dispatch (Ljava/util/UUID;Lnet/minecraft/network/protocol/game/ClientboundBossEventPacket$Handler;)V a
	getType ()Lnet/minecraft/network/protocol/game/ClientboundBossEventPacket$OperationType; a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ClientboundBossEventPacket$Handler vc$b
	add (Ljava/util/UUID;Lnet/minecraft/network/chat/Component;FLnet/minecraft/world/BossEvent$BossBarColor;Lnet/minecraft/world/BossEvent$BossBarOverlay;ZZZ)V a
	remove (Ljava/util/UUID;)V a
	updateName (Ljava/util/UUID;Lnet/minecraft/network/chat/Component;)V a
	updateProgress (Ljava/util/UUID;F)V a
	updateProperties (Ljava/util/UUID;ZZZ)V a
	updateStyle (Ljava/util/UUID;Lnet/minecraft/world/BossEvent$BossBarColor;Lnet/minecraft/world/BossEvent$BossBarOverlay;)V a
net/minecraft/network/protocol/game/ClientboundBossEventPacket$Operation vc$c
	dispatch (Ljava/util/UUID;Lnet/minecraft/network/protocol/game/ClientboundBossEventPacket$Handler;)V a
	getType ()Lnet/minecraft/network/protocol/game/ClientboundBossEventPacket$OperationType; a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ClientboundBossEventPacket$OperationType vc$d
	$VALUES h
	ADD a
	REMOVE b
	UPDATE_NAME d
	UPDATE_PROGRESS c
	UPDATE_PROPERTIES f
	UPDATE_STYLE e
	reader g
	$values ()[Lnet/minecraft/network/protocol/game/ClientboundBossEventPacket$OperationType; a
net/minecraft/network/protocol/game/ClientboundBossEventPacket$UpdateNameOperation vc$e
	name a
	dispatch (Ljava/util/UUID;Lnet/minecraft/network/protocol/game/ClientboundBossEventPacket$Handler;)V a
	getType ()Lnet/minecraft/network/protocol/game/ClientboundBossEventPacket$OperationType; a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ClientboundBossEventPacket$UpdateProgressOperation vc$f
	progress a
	dispatch (Ljava/util/UUID;Lnet/minecraft/network/protocol/game/ClientboundBossEventPacket$Handler;)V a
	getType ()Lnet/minecraft/network/protocol/game/ClientboundBossEventPacket$OperationType; a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ClientboundBossEventPacket$UpdatePropertiesOperation vc$g
	createWorldFog c
	darkenScreen a
	playMusic b
	dispatch (Ljava/util/UUID;Lnet/minecraft/network/protocol/game/ClientboundBossEventPacket$Handler;)V a
	getType ()Lnet/minecraft/network/protocol/game/ClientboundBossEventPacket$OperationType; a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ClientboundBossEventPacket$UpdateStyleOperation vc$h
	color a
	overlay b
	dispatch (Ljava/util/UUID;Lnet/minecraft/network/protocol/game/ClientboundBossEventPacket$Handler;)V a
	getType ()Lnet/minecraft/network/protocol/game/ClientboundBossEventPacket$OperationType; a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ClientboundBundlePacket vd
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
net/minecraft/network/protocol/game/ClientboundChangeDifficultyPacket ve
	difficulty a
	locked b
	getDifficulty ()Lnet/minecraft/world/Difficulty; c
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	isLocked ()Z a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ClientboundChunksBiomesPacket vf
	TWO_MEGABYTES b
	chunkBiomeData a
	chunkBiomeData ()Ljava/util/List; a
	forChunks (Ljava/util/List;)Lnet/minecraft/network/protocol/game/ClientboundChunksBiomesPacket; a
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ClientboundChunksBiomesPacket$ChunkBiomeData vf$a
	buffer b
	pos a
	buffer ()[B c
	calculateChunkSize (Lnet/minecraft/world/level/chunk/LevelChunk;)I a
	extractChunkData (Lnet/minecraft/network/FriendlyByteBuf;Lnet/minecraft/world/level/chunk/LevelChunk;)V a
	getReadBuffer ()Lnet/minecraft/network/FriendlyByteBuf; a
	getWriteBuffer ()Lio/netty/buffer/ByteBuf; d
	pos ()Lnet/minecraft/world/level/ChunkPos; b
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ClientboundClearTitlesPacket vg
	resetTimes a
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	shouldResetTimes ()Z a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ClientboundCommandSuggestionsPacket vh
	id a
	suggestions b
	getId ()I a
	getSuggestions ()Lcom/mojang/brigadier/suggestion/Suggestions; c
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ClientboundCommandsPacket vi
	FLAG_CUSTOM_SUGGESTIONS d
	FLAG_EXECUTABLE b
	FLAG_REDIRECT c
	MASK_TYPE a
	TYPE_ARGUMENT g
	TYPE_LITERAL f
	TYPE_ROOT e
	entries i
	rootIndex h
	createEntries (Lit/unimi/dsi/fastutil/objects/Object2IntMap;)Ljava/util/List; a
	createEntry (Lcom/mojang/brigadier/tree/CommandNode;Lit/unimi/dsi/fastutil/objects/Object2IntMap;)Lnet/minecraft/network/protocol/game/ClientboundCommandsPacket$Entry; a
	enumerateNodes (Lcom/mojang/brigadier/tree/RootCommandNode;)Lit/unimi/dsi/fastutil/objects/Object2IntMap; a
	getRoot (Lnet/minecraft/commands/CommandBuildContext;)Lcom/mojang/brigadier/tree/RootCommandNode; a
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	read (Lnet/minecraft/network/FriendlyByteBuf;B)Lnet/minecraft/network/protocol/game/ClientboundCommandsPacket$NodeStub; a
	readNode (Lnet/minecraft/network/FriendlyByteBuf;)Lnet/minecraft/network/protocol/game/ClientboundCommandsPacket$Entry; b
	validateEntries (Ljava/util/List;)V a
	validateEntries (Ljava/util/List;Ljava/util/function/BiPredicate;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ClientboundCommandsPacket$ArgumentNodeStub vi$a
	argumentType b
	id a
	suggestionId c
	build (Lnet/minecraft/commands/CommandBuildContext;)Lcom/mojang/brigadier/builder/ArgumentBuilder; a
	getSuggestionId (Lcom/mojang/brigadier/suggestion/SuggestionProvider;)Lnet/minecraft/resources/ResourceLocation; a
	serializeCap (Lnet/minecraft/network/FriendlyByteBuf;Lnet/minecraft/commands/synchronization/ArgumentTypeInfo$Template;)V a
	serializeCap (Lnet/minecraft/network/FriendlyByteBuf;Lnet/minecraft/commands/synchronization/ArgumentTypeInfo;Lnet/minecraft/commands/synchronization/ArgumentTypeInfo$Template;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ClientboundCommandsPacket$Entry vi$b
	children d
	flags b
	redirect c
	stub a
	canBuild (Lit/unimi/dsi/fastutil/ints/IntSet;)Z a
	canResolve (Lit/unimi/dsi/fastutil/ints/IntSet;)Z b
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ClientboundCommandsPacket$LiteralNodeStub vi$c
	id a
	build (Lnet/minecraft/commands/CommandBuildContext;)Lcom/mojang/brigadier/builder/ArgumentBuilder; a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ClientboundCommandsPacket$NodeResolver vi$d
	context a
	entries b
	nodes c
	resolve (I)Lcom/mojang/brigadier/tree/CommandNode; a
net/minecraft/network/protocol/game/ClientboundCommandsPacket$NodeStub vi$e
	build (Lnet/minecraft/commands/CommandBuildContext;)Lcom/mojang/brigadier/builder/ArgumentBuilder; a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ClientboundContainerClosePacket vj
	containerId a
	getContainerId ()I a
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ClientboundContainerSetContentPacket vk
	carriedItem d
	containerId a
	items c
	stateId b
	getCarriedItem ()Lnet/minecraft/world/item/ItemStack; d
	getContainerId ()I a
	getItems ()Ljava/util/List; c
	getStateId ()I e
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ClientboundContainerSetDataPacket vl
	containerId a
	id b
	value c
	getContainerId ()I a
	getId ()I c
	getValue ()I d
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ClientboundContainerSetSlotPacket vm
	CARRIED_ITEM a
	PLAYER_INVENTORY b
	containerId c
	itemStack f
	slot e
	stateId d
	getContainerId ()I a
	getItem ()Lnet/minecraft/world/item/ItemStack; d
	getSlot ()I c
	getStateId ()I e
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ClientboundCooldownPacket vn
	duration b
	item a
	getDuration ()I c
	getItem ()Lnet/minecraft/world/item/Item; a
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ClientboundCustomChatCompletionsPacket vo
	action a
	entries b
	action ()Lnet/minecraft/network/protocol/game/ClientboundCustomChatCompletionsPacket$Action; a
	entries ()Ljava/util/List; c
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ClientboundCustomChatCompletionsPacket$Action vo$a
	$VALUES d
	ADD a
	REMOVE b
	SET c
	$values ()[Lnet/minecraft/network/protocol/game/ClientboundCustomChatCompletionsPacket$Action; a
net/minecraft/network/protocol/game/ClientboundCustomPayloadPacket vp
	BRAND a
	DEBUG_BEE l
	DEBUG_BRAIN k
	DEBUG_GAME_EVENT q
	DEBUG_GAME_EVENT_LISTENER r
	DEBUG_GAME_TEST_ADD_MARKER n
	DEBUG_GAME_TEST_CLEAR o
	DEBUG_GOAL_SELECTOR j
	DEBUG_HIVE m
	DEBUG_NEIGHBORSUPDATE_PACKET c
	DEBUG_PATHFINDING_PACKET b
	DEBUG_POI_ADDED_PACKET g
	DEBUG_POI_REMOVED_PACKET h
	DEBUG_POI_TICKET_COUNT_PACKET f
	DEBUG_RAIDS p
	DEBUG_STRUCTURES_PACKET d
	DEBUG_VILLAGE_SECTIONS i
	DEBUG_WORLDGENATTEMPT_PACKET e
	MAX_PAYLOAD_SIZE s
	data u
	identifier t
	getData ()Lnet/minecraft/network/FriendlyByteBuf; c
	getIdentifier ()Lnet/minecraft/resources/ResourceLocation; a
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ClientboundDamageEventPacket vq
	entityId a
	sourceCauseId c
	sourceDirectId d
	sourcePosition e
	sourceTypeId b
	entityId ()I a
	getSource (Lnet/minecraft/world/level/Level;)Lnet/minecraft/world/damagesource/DamageSource; a
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	readOptionalEntityId (Lnet/minecraft/network/FriendlyByteBuf;)I b
	sourceCauseId ()I d
	sourceDirectId ()I e
	sourcePosition ()Ljava/util/Optional; f
	sourceTypeId ()I c
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
	writeOptionalEntityId (Lnet/minecraft/network/FriendlyByteBuf;I)V a
net/minecraft/network/protocol/game/ClientboundDeleteChatPacket vr
	messageSignature a
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	messageSignature ()Lnet/minecraft/network/chat/MessageSignature$Packed; a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ClientboundDisconnectPacket vs
	reason a
	getReason ()Lnet/minecraft/network/chat/Component; a
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ClientboundDisguisedChatPacket vt
	chatType b
	message a
	chatType ()Lnet/minecraft/network/chat/ChatType$BoundNetwork; c
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	isSkippable ()Z b
	message ()Lnet/minecraft/network/chat/Component; a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ClientboundEntityEventPacket vu
	entityId a
	eventId b
	getEntity (Lnet/minecraft/world/level/Level;)Lnet/minecraft/world/entity/Entity; a
	getEventId ()B a
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ClientboundExplodePacket vv
	knockbackX f
	knockbackY g
	knockbackZ h
	power d
	toBlow e
	x a
	y b
	z c
	getKnockbackX ()F a
	getKnockbackY ()F c
	getKnockbackZ ()F d
	getPower ()F h
	getToBlow ()Ljava/util/List; i
	getX ()D e
	getY ()D f
	getZ ()D g
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ClientboundForgetLevelChunkPacket vw
	x a
	z b
	getX ()I a
	getZ ()I c
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ClientboundGameEventPacket vx
	ARROW_HIT_PLAYER g
	CHANGE_GAME_MODE d
	DEMO_EVENT f
	DEMO_PARAM_HINT_1 n
	DEMO_PARAM_HINT_2 o
	DEMO_PARAM_HINT_3 p
	DEMO_PARAM_HINT_4 q
	DEMO_PARAM_INTRO m
	GUARDIAN_ELDER_EFFECT k
	IMMEDIATE_RESPAWN l
	NO_RESPAWN_BLOCK_AVAILABLE a
	PUFFER_FISH_STING j
	RAIN_LEVEL_CHANGE h
	START_RAINING b
	STOP_RAINING c
	THUNDER_LEVEL_CHANGE i
	WIN_GAME e
	event r
	param s
	getEvent ()Lnet/minecraft/network/protocol/game/ClientboundGameEventPacket$Type; a
	getParam ()F c
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ClientboundGameEventPacket$Type vx$a
	TYPES a
	id b
net/minecraft/network/protocol/game/ClientboundHorseScreenOpenPacket vy
	containerId a
	entityId c
	size b
	getContainerId ()I a
	getEntityId ()I d
	getSize ()I c
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ClientboundHurtAnimationPacket vz
	id a
	yaw b
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	id ()I a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
	yaw ()F c
net/minecraft/network/protocol/game/ClientboundInitializeBorderPacket wa
	lerpTime e
	newAbsoluteMaxSize f
	newCenterX a
	newCenterZ b
	newSize d
	oldSize c
	warningBlocks g
	warningTime h
	getLerpTime ()J f
	getNewAbsoluteMaxSize ()I g
	getNewCenterX ()D a
	getNewCenterZ ()D c
	getNewSize ()D d
	getOldSize ()D e
	getWarningBlocks ()I i
	getWarningTime ()I h
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ClientboundKeepAlivePacket wb
	id a
	getId ()J a
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ClientboundLevelChunkPacketData wc
	TWO_MEGABYTES a
	blockEntitiesData d
	buffer c
	heightmaps b
	calculateChunkSize (Lnet/minecraft/world/level/chunk/LevelChunk;)I a
	extractChunkData (Lnet/minecraft/network/FriendlyByteBuf;Lnet/minecraft/world/level/chunk/LevelChunk;)V a
	getBlockEntitiesTags (Lnet/minecraft/network/protocol/game/ClientboundLevelChunkPacketData$BlockEntityTagOutput;II)V a
	getBlockEntitiesTagsConsumer (II)Ljava/util/function/Consumer; a
	getHeightmaps ()Lnet/minecraft/nbt/CompoundTag; b
	getReadBuffer ()Lnet/minecraft/network/FriendlyByteBuf; a
	getWriteBuffer ()Lio/netty/buffer/ByteBuf; c
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ClientboundLevelChunkPacketData$BlockEntityInfo wc$a
	packedXZ a
	tag d
	type c
	y b
	create (Lnet/minecraft/world/level/block/entity/BlockEntity;)Lnet/minecraft/network/protocol/game/ClientboundLevelChunkPacketData$BlockEntityInfo; a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ClientboundLevelChunkPacketData$BlockEntityTagOutput wc$b
net/minecraft/network/protocol/game/ClientboundLevelChunkWithLightPacket wd
	chunkData c
	lightData d
	x a
	z b
	getChunkData ()Lnet/minecraft/network/protocol/game/ClientboundLevelChunkPacketData; d
	getLightData ()Lnet/minecraft/network/protocol/game/ClientboundLightUpdatePacketData; e
	getX ()I a
	getZ ()I c
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ClientboundLevelEventPacket we
	data c
	globalEvent d
	pos b
	type a
	getData ()I d
	getPos ()Lnet/minecraft/core/BlockPos; e
	getType ()I c
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	isGlobalEvent ()Z a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ClientboundLevelParticlesPacket wf
	count h
	maxSpeed g
	overrideLimiter i
	particle j
	x a
	xDist d
	y b
	yDist e
	z c
	zDist f
	getCount ()I j
	getMaxSpeed ()F i
	getParticle ()Lnet/minecraft/core/particles/ParticleOptions; k
	getX ()D c
	getXDist ()F f
	getY ()D d
	getYDist ()F g
	getZ ()D e
	getZDist ()F h
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	isOverrideLimiter ()Z a
	readParticle (Lnet/minecraft/network/FriendlyByteBuf;Lnet/minecraft/core/particles/ParticleType;)Lnet/minecraft/core/particles/ParticleOptions; a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ClientboundLightUpdatePacket wg
	lightData c
	x a
	z b
	getLightData ()Lnet/minecraft/network/protocol/game/ClientboundLightUpdatePacketData; d
	getX ()I a
	getZ ()I c
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ClientboundLightUpdatePacketData wh
	blockUpdates f
	blockYMask b
	emptyBlockYMask d
	emptySkyYMask c
	skyUpdates e
	skyYMask a
	getBlockUpdates ()Ljava/util/List; f
	getBlockYMask ()Ljava/util/BitSet; d
	getEmptyBlockYMask ()Ljava/util/BitSet; e
	getEmptySkyYMask ()Ljava/util/BitSet; b
	getSkyUpdates ()Ljava/util/List; c
	getSkyYMask ()Ljava/util/BitSet; a
	prepareSectionData (Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/world/level/lighting/LevelLightEngine;Lnet/minecraft/world/level/LightLayer;ILjava/util/BitSet;Ljava/util/BitSet;Ljava/util/List;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ClientboundLoginPacket wi
	BUILTIN_CONTEXT_OPS s
	chunkRadius k
	dimension h
	dimensionType g
	gameType c
	hardcore b
	isDebug o
	isFlat p
	lastDeathLocation q
	levels e
	maxPlayers j
	playerId a
	portalCooldown r
	previousGameType d
	reducedDebugInfo m
	registryHolder f
	seed i
	showDeathScreen n
	simulationDistance l
	chunkRadius ()I l
	dimension ()Lnet/minecraft/resources/ResourceKey; i
	dimensionType ()Lnet/minecraft/resources/ResourceKey; h
	gameType ()Lnet/minecraft/world/level/GameType; d
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	hardcore ()Z c
	isDebug ()Z p
	isFlat ()Z q
	lastDeathLocation ()Ljava/util/Optional; r
	levels ()Ljava/util/Set; f
	maxPlayers ()I k
	playerId ()I a
	portalCooldown ()I s
	previousGameType ()Lnet/minecraft/world/level/GameType; e
	reducedDebugInfo ()Z n
	registryHolder ()Lnet/minecraft/core/RegistryAccess$Frozen; g
	seed ()J j
	showDeathScreen ()Z o
	simulationDistance ()I m
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ClientboundMapItemDataPacket wj
	colorPatch e
	decorations d
	locked c
	mapId a
	scale b
	applyToMap (Lnet/minecraft/world/level/saveddata/maps/MapItemSavedData;)V a
	getMapId ()I a
	getScale ()B c
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	isLocked ()Z d
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ClientboundMerchantOffersPacket wk
	canRestock f
	containerId a
	offers b
	showProgress e
	villagerLevel c
	villagerXp d
	canRestock ()Z g
	getContainerId ()I a
	getOffers ()Lnet/minecraft/world/item/trading/MerchantOffers; c
	getVillagerLevel ()I d
	getVillagerXp ()I e
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	showProgress ()Z f
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ClientboundMoveEntityPacket wl
	entityId a
	hasPos i
	hasRot h
	onGround g
	xRot f
	xa b
	yRot e
	ya c
	za d
	getEntity (Lnet/minecraft/world/level/Level;)Lnet/minecraft/world/entity/Entity; a
	getXa ()S a
	getYa ()S c
	getZa ()S d
	getxRot ()B f
	getyRot ()B e
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	hasPosition ()Z h
	hasRotation ()Z g
	isOnGround ()Z i
net/minecraft/network/protocol/game/ClientboundMoveEntityPacket$Pos wl$a
	handle (Lnet/minecraft/network/PacketListener;)V a
	read (Lnet/minecraft/network/FriendlyByteBuf;)Lnet/minecraft/network/protocol/game/ClientboundMoveEntityPacket$Pos; b
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ClientboundMoveEntityPacket$PosRot wl$b
	handle (Lnet/minecraft/network/PacketListener;)V a
	read (Lnet/minecraft/network/FriendlyByteBuf;)Lnet/minecraft/network/protocol/game/ClientboundMoveEntityPacket$PosRot; b
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ClientboundMoveEntityPacket$Rot wl$c
	handle (Lnet/minecraft/network/PacketListener;)V a
	read (Lnet/minecraft/network/FriendlyByteBuf;)Lnet/minecraft/network/protocol/game/ClientboundMoveEntityPacket$Rot; b
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ClientboundMoveVehiclePacket wm
	x a
	xRot e
	y b
	yRot d
	z c
	getX ()D a
	getXRot ()F f
	getY ()D c
	getYRot ()F e
	getZ ()D d
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ClientboundOpenBookPacket wn
	hand a
	getHand ()Lnet/minecraft/world/InteractionHand; a
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ClientboundOpenScreenPacket wo
	containerId a
	title c
	type b
	getContainerId ()I a
	getTitle ()Lnet/minecraft/network/chat/Component; d
	getType ()Lnet/minecraft/world/inventory/MenuType; c
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ClientboundOpenSignEditorPacket wp
	isFrontText b
	pos a
	getPos ()Lnet/minecraft/core/BlockPos; a
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	isFrontText ()Z c
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ClientboundPingPacket wq
	id a
	getId ()I a
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ClientboundPlaceGhostRecipePacket wr
	containerId a
	recipe b
	getContainerId ()I c
	getRecipe ()Lnet/minecraft/resources/ResourceLocation; a
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ClientboundPlayerAbilitiesPacket ws
	FLAG_CAN_FLY c
	FLAG_FLYING b
	FLAG_INSTABUILD d
	FLAG_INVULNERABLE a
	canFly g
	flyingSpeed i
	instabuild h
	invulnerable e
	isFlying f
	walkingSpeed j
	canFly ()Z d
	canInstabuild ()Z e
	getFlyingSpeed ()F f
	getWalkingSpeed ()F g
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	isFlying ()Z c
	isInvulnerable ()Z a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ClientboundPlayerChatPacket wt
	body d
	chatType g
	filterMask f
	index b
	sender a
	signature c
	unsignedContent e
	body ()Lnet/minecraft/network/chat/SignedMessageBody$Packed; e
	chatType ()Lnet/minecraft/network/chat/ChatType$BoundNetwork; h
	filterMask ()Lnet/minecraft/network/chat/FilterMask; g
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	index ()I c
	isSkippable ()Z b
	sender ()Ljava/util/UUID; a
	signature ()Lnet/minecraft/network/chat/MessageSignature; d
	unsignedContent ()Lnet/minecraft/network/chat/Component; f
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ClientboundPlayerCombatEndPacket wu
	duration a
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ClientboundPlayerCombatEnterPacket wv
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ClientboundPlayerCombatKillPacket ww
	message b
	playerId a
	getMessage ()Lnet/minecraft/network/chat/Component; c
	getPlayerId ()I a
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	isSkippable ()Z b
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ClientboundPlayerInfoRemovePacket wx
	profileIds a
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	profileIds ()Ljava/util/List; a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ClientboundPlayerInfoUpdatePacket wy
	actions a
	entries b
	actions ()Ljava/util/EnumSet; a
	createPlayerInitializing (Ljava/util/Collection;)Lnet/minecraft/network/protocol/game/ClientboundPlayerInfoUpdatePacket; a
	entries ()Ljava/util/List; c
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	newEntries ()Ljava/util/List; d
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ClientboundPlayerInfoUpdatePacket$Action wy$a
	$VALUES i
	ADD_PLAYER a
	INITIALIZE_CHAT b
	UPDATE_DISPLAY_NAME f
	UPDATE_GAME_MODE c
	UPDATE_LATENCY e
	UPDATE_LISTED d
	reader g
	writer h
	$values ()[Lnet/minecraft/network/protocol/game/ClientboundPlayerInfoUpdatePacket$Action; a
net/minecraft/network/protocol/game/ClientboundPlayerInfoUpdatePacket$Action$Reader wy$a$a
net/minecraft/network/protocol/game/ClientboundPlayerInfoUpdatePacket$Action$Writer wy$a$b
net/minecraft/network/protocol/game/ClientboundPlayerInfoUpdatePacket$Entry wy$b
	chatSession g
	displayName f
	gameMode e
	latency d
	listed c
	profile b
	profileId a
	chatSession ()Lnet/minecraft/network/chat/RemoteChatSession$Data; g
	displayName ()Lnet/minecraft/network/chat/Component; f
	gameMode ()Lnet/minecraft/world/level/GameType; e
	latency ()I d
	listed ()Z c
	profile ()Lcom/mojang/authlib/GameProfile; b
	profileId ()Ljava/util/UUID; a
net/minecraft/network/protocol/game/ClientboundPlayerInfoUpdatePacket$EntryBuilder wy$c
	chatSession g
	displayName f
	gameMode e
	latency d
	listed c
	profile b
	profileId a
	build ()Lnet/minecraft/network/protocol/game/ClientboundPlayerInfoUpdatePacket$Entry; a
net/minecraft/network/protocol/game/ClientboundPlayerLookAtPacket wz
	atEntity g
	entity d
	fromAnchor e
	toAnchor f
	x a
	y b
	z c
	getFromAnchor ()Lnet/minecraft/commands/arguments/EntityAnchorArgument$Anchor; a
	getPosition (Lnet/minecraft/world/level/Level;)Lnet/minecraft/world/phys/Vec3; a
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ClientboundPlayerPositionPacket xa
	id g
	relativeArguments f
	x a
	xRot e
	y b
	yRot d
	z c
	getId ()I g
	getRelativeArguments ()Ljava/util/Set; h
	getX ()D a
	getXRot ()F f
	getY ()D c
	getYRot ()F e
	getZ ()D d
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ClientboundRecipePacket xb
	bookSettings d
	recipes b
	state a
	toHighlight c
	getBookSettings ()Lnet/minecraft/stats/RecipeBookSettings; d
	getHighlights ()Ljava/util/List; c
	getRecipes ()Ljava/util/List; a
	getState ()Lnet/minecraft/network/protocol/game/ClientboundRecipePacket$State; e
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ClientboundRecipePacket$State xb$a
	$VALUES d
	ADD b
	INIT a
	REMOVE c
	$values ()[Lnet/minecraft/network/protocol/game/ClientboundRecipePacket$State; a
net/minecraft/network/protocol/game/ClientboundRemoveEntitiesPacket xc
	entityIds a
	getEntityIds ()Lit/unimi/dsi/fastutil/ints/IntList; a
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ClientboundRemoveMobEffectPacket xd
	effect b
	entityId a
	getEffect ()Lnet/minecraft/world/effect/MobEffect; a
	getEntity (Lnet/minecraft/world/level/Level;)Lnet/minecraft/world/entity/Entity; a
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ClientboundResourcePackPacket xe
	MAX_HASH_LENGTH a
	hash c
	prompt e
	required d
	url b
	getHash ()Ljava/lang/String; c
	getPrompt ()Lnet/minecraft/network/chat/Component; e
	getUrl ()Ljava/lang/String; a
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	isRequired ()Z d
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ClientboundRespawnPacket xf
	KEEP_ALL_DATA c
	KEEP_ATTRIBUTES a
	KEEP_ENTITY_DATA b
	dataToKeep k
	dimension e
	dimensionType d
	isDebug i
	isFlat j
	lastDeathLocation l
	playerGameType g
	portalCooldown m
	previousPlayerGameType h
	seed f
	getDimension ()Lnet/minecraft/resources/ResourceKey; c
	getDimensionType ()Lnet/minecraft/resources/ResourceKey; a
	getLastDeathLocation ()Ljava/util/Optional; i
	getPlayerGameType ()Lnet/minecraft/world/level/GameType; e
	getPortalCooldown ()I j
	getPreviousPlayerGameType ()Lnet/minecraft/world/level/GameType; f
	getSeed ()J d
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	isDebug ()Z g
	isFlat ()Z h
	shouldKeep (B)Z a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ClientboundRotateHeadPacket xg
	entityId a
	yHeadRot b
	getEntity (Lnet/minecraft/world/level/Level;)Lnet/minecraft/world/entity/Entity; a
	getYHeadRot ()B a
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ClientboundSectionBlocksUpdatePacket xh
	POS_IN_SECTION_BITS a
	positions c
	sectionPos b
	states d
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	runUpdates (Ljava/util/function/BiConsumer;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ClientboundSelectAdvancementsTabPacket xi
	tab a
	getTab ()Lnet/minecraft/resources/ResourceLocation; a
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ClientboundServerDataPacket xj
	enforcesSecureChat c
	iconBytes b
	motd a
	enforcesSecureChat ()Z d
	getIconBytes ()Ljava/util/Optional; c
	getMotd ()Lnet/minecraft/network/chat/Component; a
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ClientboundSetActionBarTextPacket xk
	text a
	getText ()Lnet/minecraft/network/chat/Component; a
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ClientboundSetBorderCenterPacket xl
	newCenterX a
	newCenterZ b
	getNewCenterX ()D c
	getNewCenterZ ()D a
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ClientboundSetBorderLerpSizePacket xm
	lerpTime c
	newSize b
	oldSize a
	getLerpTime ()J d
	getNewSize ()D c
	getOldSize ()D a
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ClientboundSetBorderSizePacket xn
	size a
	getSize ()D a
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ClientboundSetBorderWarningDelayPacket xo
	warningDelay a
	getWarningDelay ()I a
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ClientboundSetBorderWarningDistancePacket xp
	warningBlocks a
	getWarningBlocks ()I a
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ClientboundSetCameraPacket xq
	cameraId a
	getEntity (Lnet/minecraft/world/level/Level;)Lnet/minecraft/world/entity/Entity; a
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ClientboundSetCarriedItemPacket xr
	slot a
	getSlot ()I a
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ClientboundSetChunkCacheCenterPacket xs
	x a
	z b
	getX ()I a
	getZ ()I c
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ClientboundSetChunkCacheRadiusPacket xt
	radius a
	getRadius ()I a
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ClientboundSetDefaultSpawnPositionPacket xu
	angle b
	pos a
	getAngle ()F c
	getPos ()Lnet/minecraft/core/BlockPos; a
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ClientboundSetDisplayObjectivePacket xv
	objectiveName b
	slot a
	getObjectiveName ()Ljava/lang/String; c
	getSlot ()I a
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ClientboundSetEntityDataPacket xw
	EOF_MARKER a
	id b
	packedItems c
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	id ()I a
	pack (Ljava/util/List;Lnet/minecraft/network/FriendlyByteBuf;)V a
	packedItems ()Ljava/util/List; c
	unpack (Lnet/minecraft/network/FriendlyByteBuf;)Ljava/util/List; b
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ClientboundSetEntityLinkPacket xx
	destId b
	sourceId a
	getDestId ()I c
	getSourceId ()I a
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ClientboundSetEntityMotionPacket xy
	id a
	xa b
	ya c
	za d
	getId ()I a
	getXa ()I c
	getYa ()I d
	getZa ()I e
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ClientboundSetEquipmentPacket xz
	CONTINUE_MASK a
	entity b
	slots c
	getEntity ()I a
	getSlots ()Ljava/util/List; c
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ClientboundSetExperiencePacket ya
	experienceLevel c
	experienceProgress a
	totalExperience b
	getExperienceLevel ()I d
	getExperienceProgress ()F a
	getTotalExperience ()I c
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ClientboundSetHealthPacket yb
	food b
	health a
	saturation c
	getFood ()I c
	getHealth ()F a
	getSaturation ()F d
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ClientboundSetObjectivePacket yc
	METHOD_ADD a
	METHOD_CHANGE c
	METHOD_REMOVE b
	displayName e
	method g
	objectiveName d
	renderType f
	getDisplayName ()Lnet/minecraft/network/chat/Component; c
	getMethod ()I d
	getObjectiveName ()Ljava/lang/String; a
	getRenderType ()Lnet/minecraft/world/scores/criteria/ObjectiveCriteria$RenderType; e
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ClientboundSetPassengersPacket yd
	passengers b
	vehicle a
	getPassengers ()[I a
	getVehicle ()I c
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ClientboundSetPlayerTeamPacket ye
	MAX_COLLISION_LENGTH g
	MAX_VISIBILITY_LENGTH f
	METHOD_ADD a
	METHOD_CHANGE c
	METHOD_JOIN d
	METHOD_LEAVE e
	METHOD_REMOVE b
	method h
	name i
	parameters k
	players j
	createAddOrModifyPacket (Lnet/minecraft/world/scores/PlayerTeam;Z)Lnet/minecraft/network/protocol/game/ClientboundSetPlayerTeamPacket; a
	createPlayerPacket (Lnet/minecraft/world/scores/PlayerTeam;Ljava/lang/String;Lnet/minecraft/network/protocol/game/ClientboundSetPlayerTeamPacket$Action;)Lnet/minecraft/network/protocol/game/ClientboundSetPlayerTeamPacket; a
	createRemovePacket (Lnet/minecraft/world/scores/PlayerTeam;)Lnet/minecraft/network/protocol/game/ClientboundSetPlayerTeamPacket; a
	getName ()Ljava/lang/String; d
	getParameters ()Ljava/util/Optional; f
	getPlayerAction ()Lnet/minecraft/network/protocol/game/ClientboundSetPlayerTeamPacket$Action; a
	getPlayers ()Ljava/util/Collection; e
	getTeamAction ()Lnet/minecraft/network/protocol/game/ClientboundSetPlayerTeamPacket$Action; c
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	shouldHaveParameters (I)Z b
	shouldHavePlayerList (I)Z a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ClientboundSetPlayerTeamPacket$Action ye$a
	$VALUES c
	ADD a
	REMOVE b
	$values ()[Lnet/minecraft/network/protocol/game/ClientboundSetPlayerTeamPacket$Action; a
net/minecraft/network/protocol/game/ClientboundSetPlayerTeamPacket$Parameters ye$b
	collisionRule e
	color f
	displayName a
	nametagVisibility d
	options g
	playerPrefix b
	playerSuffix c
	getCollisionRule ()Ljava/lang/String; e
	getColor ()Lnet/minecraft/ChatFormatting; c
	getDisplayName ()Lnet/minecraft/network/chat/Component; a
	getNametagVisibility ()Ljava/lang/String; d
	getOptions ()I b
	getPlayerPrefix ()Lnet/minecraft/network/chat/Component; f
	getPlayerSuffix ()Lnet/minecraft/network/chat/Component; g
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ClientboundSetScorePacket yf
	method d
	objectiveName b
	owner a
	score c
	getMethod ()Lnet/minecraft/server/ServerScoreboard$Method; e
	getObjectiveName ()Ljava/lang/String; c
	getOwner ()Ljava/lang/String; a
	getScore ()I d
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ClientboundSetSimulationDistancePacket yg
	simulationDistance a
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	simulationDistance ()I a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ClientboundSetSubtitleTextPacket yh
	text a
	getText ()Lnet/minecraft/network/chat/Component; a
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ClientboundSetTimePacket yi
	dayTime b
	gameTime a
	getDayTime ()J c
	getGameTime ()J a
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ClientboundSetTitleTextPacket yj
	text a
	getText ()Lnet/minecraft/network/chat/Component; a
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ClientboundSetTitlesAnimationPacket yk
	fadeIn a
	fadeOut c
	stay b
	getFadeIn ()I a
	getFadeOut ()I d
	getStay ()I c
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ClientboundSoundEntityPacket yl
	id c
	pitch e
	seed f
	sound a
	source b
	volume d
	getId ()I d
	getPitch ()F f
	getSeed ()J g
	getSound ()Lnet/minecraft/core/Holder; a
	getSource ()Lnet/minecraft/sounds/SoundSource; c
	getVolume ()F e
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ClientboundSoundPacket ym
	LOCATION_ACCURACY a
	pitch h
	seed i
	sound b
	source c
	volume g
	x d
	y e
	z f
	getPitch ()F h
	getSeed ()J i
	getSound ()Lnet/minecraft/core/Holder; a
	getSource ()Lnet/minecraft/sounds/SoundSource; c
	getVolume ()F g
	getX ()D d
	getY ()D e
	getZ ()D f
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ClientboundStopSoundPacket yn
	HAS_SOUND b
	HAS_SOURCE a
	name c
	source d
	getName ()Lnet/minecraft/resources/ResourceLocation; a
	getSource ()Lnet/minecraft/sounds/SoundSource; c
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ClientboundSystemChatPacket yo
	content a
	overlay b
	content ()Lnet/minecraft/network/chat/Component; a
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	isSkippable ()Z b
	overlay ()Z c
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ClientboundTabListPacket yp
	footer b
	header a
	getFooter ()Lnet/minecraft/network/chat/Component; c
	getHeader ()Lnet/minecraft/network/chat/Component; a
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ClientboundTagQueryPacket yq
	tag b
	transactionId a
	getTag ()Lnet/minecraft/nbt/CompoundTag; c
	getTransactionId ()I a
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	isSkippable ()Z b
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ClientboundTakeItemEntityPacket yr
	amount c
	itemId a
	playerId b
	getAmount ()I d
	getItemId ()I a
	getPlayerId ()I c
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ClientboundTeleportEntityPacket ys
	id a
	onGround g
	x b
	xRot f
	y c
	yRot e
	z d
	getId ()I a
	getX ()D c
	getY ()D d
	getZ ()D e
	getxRot ()B g
	getyRot ()B f
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	isOnGround ()Z h
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ClientboundUpdateAdvancementsPacket yt
	added b
	progress d
	removed c
	reset a
	getAdded ()Ljava/util/Map; a
	getProgress ()Ljava/util/Map; d
	getRemoved ()Ljava/util/Set; c
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	shouldReset ()Z e
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ClientboundUpdateAttributesPacket yu
	attributes b
	entityId a
	getEntityId ()I a
	getValues ()Ljava/util/List; c
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ClientboundUpdateAttributesPacket$AttributeSnapshot yu$a
	attribute a
	base b
	modifiers c
	getAttribute ()Lnet/minecraft/world/entity/ai/attributes/Attribute; a
	getBase ()D b
	getModifiers ()Ljava/util/Collection; c
net/minecraft/network/protocol/game/ClientboundUpdateEnabledFeaturesPacket yv
	features a
	features ()Ljava/util/Set; a
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ClientboundUpdateMobEffectPacket yw
	FLAG_AMBIENT a
	FLAG_SHOW_ICON c
	FLAG_VISIBLE b
	effect e
	effectAmplifier f
	effectDurationTicks g
	entityId d
	factorData i
	flags h
	effectShowsIcon ()Z h
	getEffect ()Lnet/minecraft/world/effect/MobEffect; c
	getEffectAmplifier ()B d
	getEffectDurationTicks ()I e
	getEntityId ()I a
	getFactorData ()Lnet/minecraft/world/effect/MobEffectInstance$FactorData; i
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	isEffectAmbient ()Z g
	isEffectVisible ()Z f
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ClientboundUpdateRecipesPacket yx
	recipes a
	fromNetwork (Lnet/minecraft/network/FriendlyByteBuf;)Lnet/minecraft/world/item/crafting/Recipe; b
	getRecipes ()Ljava/util/List; a
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	toNetwork (Lnet/minecraft/network/FriendlyByteBuf;Lnet/minecraft/world/item/crafting/Recipe;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ClientboundUpdateTagsPacket yy
	tags a
	getTags ()Ljava/util/Map; a
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ClientGamePacketListener;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/DebugEntityNameGenerator yz
	NAMES_FIRST_PART a
	NAMES_SECOND_PART b
	getEntityName (Ljava/util/UUID;)Ljava/lang/String; a
	getEntityName (Lnet/minecraft/world/entity/Entity;)Ljava/lang/String; a
	getRandom (Ljava/util/UUID;)Lnet/minecraft/util/RandomSource; b
	getRandomString (Lnet/minecraft/util/RandomSource;[Ljava/lang/String;)Ljava/lang/String; a
net/minecraft/network/protocol/game/DebugPackets za
	LOGGER a
	getMemoryDescriptions (Lnet/minecraft/world/entity/LivingEntity;J)Ljava/util/List; a
	getShortDescription (Lnet/minecraft/server/level/ServerLevel;Ljava/lang/Object;)Ljava/lang/String; a
	sendBeeInfo (Lnet/minecraft/world/entity/animal/Bee;)V a
	sendEntityBrain (Lnet/minecraft/world/entity/LivingEntity;)V a
	sendGameEventInfo (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/level/gameevent/GameEvent;Lnet/minecraft/world/phys/Vec3;)V a
	sendGameEventListenerInfo (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/level/gameevent/GameEventListener;)V a
	sendGameTestAddMarker (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Ljava/lang/String;II)V a
	sendGameTestClearPacket (Lnet/minecraft/server/level/ServerLevel;)V a
	sendGoalSelector (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/Mob;Lnet/minecraft/world/entity/ai/goal/GoalSelector;)V a
	sendHiveInfo (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/entity/BeehiveBlockEntity;)V a
	sendNeighborsUpdatePacket (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)V a
	sendPacketToAllPlayers (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/network/FriendlyByteBuf;Lnet/minecraft/resources/ResourceLocation;)V a
	sendPathFindingPacket (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/Mob;Lnet/minecraft/world/level/pathfinder/Path;F)V a
	sendPoiAddedPacket (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;)V a
	sendPoiPacketsForChunk (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/level/ChunkPos;)V a
	sendPoiRemovedPacket (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;)V b
	sendPoiTicketCountPacket (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;)V c
	sendRaids (Lnet/minecraft/server/level/ServerLevel;Ljava/util/Collection;)V a
	sendStructurePacket (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/levelgen/structure/StructureStart;)V a
	sendVillageSectionsPacket (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;)V d
	writeBrain (Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ServerGamePacketListener zb
	handleAcceptTeleportPacket (Lnet/minecraft/network/protocol/game/ServerboundAcceptTeleportationPacket;)V a
	handleAnimate (Lnet/minecraft/network/protocol/game/ServerboundSwingPacket;)V a
	handleBlockEntityTagQuery (Lnet/minecraft/network/protocol/game/ServerboundBlockEntityTagQuery;)V a
	handleChangeDifficulty (Lnet/minecraft/network/protocol/game/ServerboundChangeDifficultyPacket;)V a
	handleChat (Lnet/minecraft/network/protocol/game/ServerboundChatPacket;)V a
	handleChatAck (Lnet/minecraft/network/protocol/game/ServerboundChatAckPacket;)V a
	handleChatCommand (Lnet/minecraft/network/protocol/game/ServerboundChatCommandPacket;)V a
	handleChatSessionUpdate (Lnet/minecraft/network/protocol/game/ServerboundChatSessionUpdatePacket;)V a
	handleClientCommand (Lnet/minecraft/network/protocol/game/ServerboundClientCommandPacket;)V a
	handleClientInformation (Lnet/minecraft/network/protocol/game/ServerboundClientInformationPacket;)V a
	handleContainerButtonClick (Lnet/minecraft/network/protocol/game/ServerboundContainerButtonClickPacket;)V a
	handleContainerClick (Lnet/minecraft/network/protocol/game/ServerboundContainerClickPacket;)V a
	handleContainerClose (Lnet/minecraft/network/protocol/game/ServerboundContainerClosePacket;)V a
	handleCustomCommandSuggestions (Lnet/minecraft/network/protocol/game/ServerboundCommandSuggestionPacket;)V a
	handleCustomPayload (Lnet/minecraft/network/protocol/game/ServerboundCustomPayloadPacket;)V a
	handleEditBook (Lnet/minecraft/network/protocol/game/ServerboundEditBookPacket;)V a
	handleEntityTagQuery (Lnet/minecraft/network/protocol/game/ServerboundEntityTagQuery;)V a
	handleInteract (Lnet/minecraft/network/protocol/game/ServerboundInteractPacket;)V a
	handleJigsawGenerate (Lnet/minecraft/network/protocol/game/ServerboundJigsawGeneratePacket;)V a
	handleKeepAlive (Lnet/minecraft/network/protocol/game/ServerboundKeepAlivePacket;)V a
	handleLockDifficulty (Lnet/minecraft/network/protocol/game/ServerboundLockDifficultyPacket;)V a
	handleMovePlayer (Lnet/minecraft/network/protocol/game/ServerboundMovePlayerPacket;)V a
	handleMoveVehicle (Lnet/minecraft/network/protocol/game/ServerboundMoveVehiclePacket;)V a
	handlePaddleBoat (Lnet/minecraft/network/protocol/game/ServerboundPaddleBoatPacket;)V a
	handlePickItem (Lnet/minecraft/network/protocol/game/ServerboundPickItemPacket;)V a
	handlePlaceRecipe (Lnet/minecraft/network/protocol/game/ServerboundPlaceRecipePacket;)V a
	handlePlayerAbilities (Lnet/minecraft/network/protocol/game/ServerboundPlayerAbilitiesPacket;)V a
	handlePlayerAction (Lnet/minecraft/network/protocol/game/ServerboundPlayerActionPacket;)V a
	handlePlayerCommand (Lnet/minecraft/network/protocol/game/ServerboundPlayerCommandPacket;)V a
	handlePlayerInput (Lnet/minecraft/network/protocol/game/ServerboundPlayerInputPacket;)V a
	handlePong (Lnet/minecraft/network/protocol/game/ServerboundPongPacket;)V a
	handleRecipeBookChangeSettingsPacket (Lnet/minecraft/network/protocol/game/ServerboundRecipeBookChangeSettingsPacket;)V a
	handleRecipeBookSeenRecipePacket (Lnet/minecraft/network/protocol/game/ServerboundRecipeBookSeenRecipePacket;)V a
	handleRenameItem (Lnet/minecraft/network/protocol/game/ServerboundRenameItemPacket;)V a
	handleResourcePackResponse (Lnet/minecraft/network/protocol/game/ServerboundResourcePackPacket;)V a
	handleSeenAdvancements (Lnet/minecraft/network/protocol/game/ServerboundSeenAdvancementsPacket;)V a
	handleSelectTrade (Lnet/minecraft/network/protocol/game/ServerboundSelectTradePacket;)V a
	handleSetBeaconPacket (Lnet/minecraft/network/protocol/game/ServerboundSetBeaconPacket;)V a
	handleSetCarriedItem (Lnet/minecraft/network/protocol/game/ServerboundSetCarriedItemPacket;)V a
	handleSetCommandBlock (Lnet/minecraft/network/protocol/game/ServerboundSetCommandBlockPacket;)V a
	handleSetCommandMinecart (Lnet/minecraft/network/protocol/game/ServerboundSetCommandMinecartPacket;)V a
	handleSetCreativeModeSlot (Lnet/minecraft/network/protocol/game/ServerboundSetCreativeModeSlotPacket;)V a
	handleSetJigsawBlock (Lnet/minecraft/network/protocol/game/ServerboundSetJigsawBlockPacket;)V a
	handleSetStructureBlock (Lnet/minecraft/network/protocol/game/ServerboundSetStructureBlockPacket;)V a
	handleSignUpdate (Lnet/minecraft/network/protocol/game/ServerboundSignUpdatePacket;)V a
	handleTeleportToEntityPacket (Lnet/minecraft/network/protocol/game/ServerboundTeleportToEntityPacket;)V a
	handleUseItem (Lnet/minecraft/network/protocol/game/ServerboundUseItemPacket;)V a
	handleUseItemOn (Lnet/minecraft/network/protocol/game/ServerboundUseItemOnPacket;)V a
net/minecraft/network/protocol/game/ServerPacketListener zc
	shouldPropagateHandlingExceptions ()Z b
net/minecraft/network/protocol/game/ServerboundAcceptTeleportationPacket zd
	id a
	getId ()I a
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ServerGamePacketListener;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ServerboundBlockEntityTagQuery ze
	pos b
	transactionId a
	getPos ()Lnet/minecraft/core/BlockPos; c
	getTransactionId ()I a
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ServerGamePacketListener;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ServerboundChangeDifficultyPacket zf
	difficulty a
	getDifficulty ()Lnet/minecraft/world/Difficulty; a
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ServerGamePacketListener;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ServerboundChatAckPacket zg
	offset a
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ServerGamePacketListener;)V a
	offset ()I a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ServerboundChatCommandPacket zh
	argumentSignatures d
	command a
	lastSeenMessages e
	salt c
	timeStamp b
	argumentSignatures ()Lnet/minecraft/commands/arguments/ArgumentSignatures; e
	command ()Ljava/lang/String; a
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ServerGamePacketListener;)V a
	lastSeenMessages ()Lnet/minecraft/network/chat/LastSeenMessages$Update; f
	salt ()J d
	timeStamp ()Ljava/time/Instant; c
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ServerboundChatPacket zi
	lastSeenMessages e
	message a
	salt c
	signature d
	timeStamp b
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ServerGamePacketListener;)V a
	lastSeenMessages ()Lnet/minecraft/network/chat/LastSeenMessages$Update; f
	message ()Ljava/lang/String; a
	salt ()J d
	signature ()Lnet/minecraft/network/chat/MessageSignature; e
	timeStamp ()Ljava/time/Instant; c
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ServerboundChatSessionUpdatePacket zj
	chatSession a
	chatSession ()Lnet/minecraft/network/chat/RemoteChatSession$Data; a
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ServerGamePacketListener;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ServerboundClientCommandPacket zk
	action a
	getAction ()Lnet/minecraft/network/protocol/game/ServerboundClientCommandPacket$Action; a
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ServerGamePacketListener;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ServerboundClientCommandPacket$Action zk$a
	$VALUES c
	PERFORM_RESPAWN a
	REQUEST_STATS b
	$values ()[Lnet/minecraft/network/protocol/game/ServerboundClientCommandPacket$Action; a
net/minecraft/network/protocol/game/ServerboundClientInformationPacket zl
	MAX_LANGUAGE_LENGTH a
	allowsListing i
	chatColors e
	chatVisibility d
	language b
	mainHand g
	modelCustomisation f
	textFilteringEnabled h
	viewDistance c
	allowsListing ()Z i
	chatColors ()Z e
	chatVisibility ()Lnet/minecraft/world/entity/player/ChatVisiblity; d
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ServerGamePacketListener;)V a
	language ()Ljava/lang/String; a
	mainHand ()Lnet/minecraft/world/entity/HumanoidArm; g
	modelCustomisation ()I f
	textFilteringEnabled ()Z h
	viewDistance ()I c
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ServerboundCommandSuggestionPacket zm
	command b
	id a
	getCommand ()Ljava/lang/String; c
	getId ()I a
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ServerGamePacketListener;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ServerboundContainerButtonClickPacket zn
	buttonId b
	containerId a
	getButtonId ()I c
	getContainerId ()I a
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ServerGamePacketListener;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ServerboundContainerClickPacket zo
	MAX_SLOT_COUNT a
	buttonNum e
	carriedItem g
	changedSlots h
	clickType f
	containerId b
	slotNum d
	stateId c
	getButtonNum ()I d
	getCarriedItem ()Lnet/minecraft/world/item/ItemStack; e
	getChangedSlots ()Lit/unimi/dsi/fastutil/ints/Int2ObjectMap; f
	getClickType ()Lnet/minecraft/world/inventory/ClickType; g
	getContainerId ()I a
	getSlotNum ()I c
	getStateId ()I h
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ServerGamePacketListener;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ServerboundContainerClosePacket zp
	containerId a
	getContainerId ()I a
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ServerGamePacketListener;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ServerboundCustomPayloadPacket zq
	BRAND a
	MAX_PAYLOAD_SIZE b
	data d
	identifier c
	getData ()Lnet/minecraft/network/FriendlyByteBuf; c
	getIdentifier ()Lnet/minecraft/resources/ResourceLocation; a
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ServerGamePacketListener;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ServerboundEditBookPacket zr
	MAX_BYTES_PER_CHAR a
	MAX_PAGES_COUNT d
	PAGE_MAX_CHARS c
	TITLE_MAX_CHARS b
	pages f
	slot e
	title g
	getPages ()Ljava/util/List; a
	getSlot ()I d
	getTitle ()Ljava/util/Optional; c
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ServerGamePacketListener;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ServerboundEntityTagQuery zs
	entityId b
	transactionId a
	getEntityId ()I c
	getTransactionId ()I a
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ServerGamePacketListener;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ServerboundInteractPacket zt
	ATTACK_ACTION d
	action b
	entityId a
	usingSecondaryAction c
	createAttackPacket (Lnet/minecraft/world/entity/Entity;Z)Lnet/minecraft/network/protocol/game/ServerboundInteractPacket; a
	createInteractionPacket (Lnet/minecraft/world/entity/Entity;ZLnet/minecraft/world/InteractionHand;)Lnet/minecraft/network/protocol/game/ServerboundInteractPacket; a
	createInteractionPacket (Lnet/minecraft/world/entity/Entity;ZLnet/minecraft/world/InteractionHand;Lnet/minecraft/world/phys/Vec3;)Lnet/minecraft/network/protocol/game/ServerboundInteractPacket; a
	dispatch (Lnet/minecraft/network/protocol/game/ServerboundInteractPacket$Handler;)V a
	getTarget (Lnet/minecraft/server/level/ServerLevel;)Lnet/minecraft/world/entity/Entity; a
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ServerGamePacketListener;)V a
	isUsingSecondaryAction ()Z a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ServerboundInteractPacket$Action zt$a
	dispatch (Lnet/minecraft/network/protocol/game/ServerboundInteractPacket$Handler;)V a
	getType ()Lnet/minecraft/network/protocol/game/ServerboundInteractPacket$ActionType; a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ServerboundInteractPacket$ActionType zt$b
	$VALUES e
	ATTACK b
	INTERACT a
	INTERACT_AT c
	reader d
	$values ()[Lnet/minecraft/network/protocol/game/ServerboundInteractPacket$ActionType; a
net/minecraft/network/protocol/game/ServerboundInteractPacket$Handler zt$c
	onAttack ()V a
	onInteraction (Lnet/minecraft/world/InteractionHand;)V a
	onInteraction (Lnet/minecraft/world/InteractionHand;Lnet/minecraft/world/phys/Vec3;)V a
net/minecraft/network/protocol/game/ServerboundInteractPacket$InteractionAction zt$d
	hand a
	dispatch (Lnet/minecraft/network/protocol/game/ServerboundInteractPacket$Handler;)V a
	getType ()Lnet/minecraft/network/protocol/game/ServerboundInteractPacket$ActionType; a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ServerboundInteractPacket$InteractionAtLocationAction zt$e
	hand a
	location b
	dispatch (Lnet/minecraft/network/protocol/game/ServerboundInteractPacket$Handler;)V a
	getType ()Lnet/minecraft/network/protocol/game/ServerboundInteractPacket$ActionType; a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ServerboundJigsawGeneratePacket zu
	keepJigsaws c
	levels b
	pos a
	getPos ()Lnet/minecraft/core/BlockPos; a
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ServerGamePacketListener;)V a
	keepJigsaws ()Z d
	levels ()I c
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ServerboundKeepAlivePacket zv
	id a
	getId ()J a
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ServerGamePacketListener;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ServerboundLockDifficultyPacket zw
	locked a
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ServerGamePacketListener;)V a
	isLocked ()Z a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ServerboundMovePlayerPacket zx
	hasPos g
	hasRot h
	onGround f
	x a
	xRot e
	y b
	yRot d
	z c
	getX (D)D a
	getXRot (F)F b
	getY (D)D b
	getYRot (F)F a
	getZ (D)D c
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ServerGamePacketListener;)V a
	hasPosition ()Z c
	hasRotation ()Z d
	isOnGround ()Z a
net/minecraft/network/protocol/game/ServerboundMovePlayerPacket$Pos zx$a
	handle (Lnet/minecraft/network/PacketListener;)V a
	read (Lnet/minecraft/network/FriendlyByteBuf;)Lnet/minecraft/network/protocol/game/ServerboundMovePlayerPacket$Pos; b
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ServerboundMovePlayerPacket$PosRot zx$b
	handle (Lnet/minecraft/network/PacketListener;)V a
	read (Lnet/minecraft/network/FriendlyByteBuf;)Lnet/minecraft/network/protocol/game/ServerboundMovePlayerPacket$PosRot; b
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ServerboundMovePlayerPacket$Rot zx$c
	handle (Lnet/minecraft/network/PacketListener;)V a
	read (Lnet/minecraft/network/FriendlyByteBuf;)Lnet/minecraft/network/protocol/game/ServerboundMovePlayerPacket$Rot; b
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ServerboundMovePlayerPacket$StatusOnly zx$d
	handle (Lnet/minecraft/network/PacketListener;)V a
	read (Lnet/minecraft/network/FriendlyByteBuf;)Lnet/minecraft/network/protocol/game/ServerboundMovePlayerPacket$StatusOnly; b
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ServerboundMoveVehiclePacket zy
	x a
	xRot e
	y b
	yRot d
	z c
	getX ()D a
	getXRot ()F f
	getY ()D c
	getYRot ()F e
	getZ ()D d
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ServerGamePacketListener;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ServerboundPaddleBoatPacket zz
	left a
	right b
	getLeft ()Z a
	getRight ()Z c
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ServerGamePacketListener;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ServerboundPickItemPacket aaa
	slot a
	getSlot ()I a
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ServerGamePacketListener;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ServerboundPlaceRecipePacket aab
	containerId a
	recipe b
	shiftDown c
	getContainerId ()I a
	getRecipe ()Lnet/minecraft/resources/ResourceLocation; c
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ServerGamePacketListener;)V a
	isShiftDown ()Z d
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ServerboundPlayerAbilitiesPacket aac
	FLAG_FLYING a
	isFlying b
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ServerGamePacketListener;)V a
	isFlying ()Z a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ServerboundPlayerActionPacket aad
	action c
	direction b
	pos a
	sequence d
	getAction ()Lnet/minecraft/network/protocol/game/ServerboundPlayerActionPacket$Action; d
	getDirection ()Lnet/minecraft/core/Direction; c
	getPos ()Lnet/minecraft/core/BlockPos; a
	getSequence ()I e
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ServerGamePacketListener;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ServerboundPlayerActionPacket$Action aad$a
	$VALUES h
	ABORT_DESTROY_BLOCK b
	DROP_ALL_ITEMS d
	DROP_ITEM e
	RELEASE_USE_ITEM f
	START_DESTROY_BLOCK a
	STOP_DESTROY_BLOCK c
	SWAP_ITEM_WITH_OFFHAND g
	$values ()[Lnet/minecraft/network/protocol/game/ServerboundPlayerActionPacket$Action; a
net/minecraft/network/protocol/game/ServerboundPlayerCommandPacket aae
	action b
	data c
	id a
	getAction ()Lnet/minecraft/network/protocol/game/ServerboundPlayerCommandPacket$Action; c
	getData ()I d
	getId ()I a
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ServerGamePacketListener;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ServerboundPlayerCommandPacket$Action aae$a
	$VALUES j
	OPEN_INVENTORY h
	PRESS_SHIFT_KEY a
	RELEASE_SHIFT_KEY b
	START_FALL_FLYING i
	START_RIDING_JUMP f
	START_SPRINTING d
	STOP_RIDING_JUMP g
	STOP_SLEEPING c
	STOP_SPRINTING e
	$values ()[Lnet/minecraft/network/protocol/game/ServerboundPlayerCommandPacket$Action; a
net/minecraft/network/protocol/game/ServerboundPlayerInputPacket aaf
	FLAG_JUMPING a
	FLAG_SHIFT_KEY_DOWN b
	isJumping e
	isShiftKeyDown f
	xxa c
	zza d
	getXxa ()F a
	getZza ()F c
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ServerGamePacketListener;)V a
	isJumping ()Z d
	isShiftKeyDown ()Z e
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ServerboundPongPacket aag
	id a
	getId ()I a
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ServerGamePacketListener;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ServerboundRecipeBookChangeSettingsPacket aah
	bookType a
	isFiltering c
	isOpen b
	getBookType ()Lnet/minecraft/world/inventory/RecipeBookType; a
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ServerGamePacketListener;)V a
	isFiltering ()Z d
	isOpen ()Z c
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ServerboundRecipeBookSeenRecipePacket aai
	recipe a
	getRecipe ()Lnet/minecraft/resources/ResourceLocation; a
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ServerGamePacketListener;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ServerboundRenameItemPacket aaj
	name a
	getName ()Ljava/lang/String; a
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ServerGamePacketListener;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ServerboundResourcePackPacket aak
	action a
	getAction ()Lnet/minecraft/network/protocol/game/ServerboundResourcePackPacket$Action; a
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ServerGamePacketListener;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ServerboundResourcePackPacket$Action aak$a
	$VALUES e
	ACCEPTED d
	DECLINED b
	FAILED_DOWNLOAD c
	SUCCESSFULLY_LOADED a
	$values ()[Lnet/minecraft/network/protocol/game/ServerboundResourcePackPacket$Action; a
net/minecraft/network/protocol/game/ServerboundSeenAdvancementsPacket aal
	action a
	tab b
	closedScreen ()Lnet/minecraft/network/protocol/game/ServerboundSeenAdvancementsPacket; a
	getAction ()Lnet/minecraft/network/protocol/game/ServerboundSeenAdvancementsPacket$Action; c
	getTab ()Lnet/minecraft/resources/ResourceLocation; d
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ServerGamePacketListener;)V a
	openedTab (Lnet/minecraft/advancements/Advancement;)Lnet/minecraft/network/protocol/game/ServerboundSeenAdvancementsPacket; a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ServerboundSeenAdvancementsPacket$Action aal$a
	$VALUES c
	CLOSED_SCREEN b
	OPENED_TAB a
	$values ()[Lnet/minecraft/network/protocol/game/ServerboundSeenAdvancementsPacket$Action; a
net/minecraft/network/protocol/game/ServerboundSelectTradePacket aam
	item a
	getItem ()I a
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ServerGamePacketListener;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ServerboundSetBeaconPacket aan
	primary a
	secondary b
	getPrimary ()Ljava/util/Optional; a
	getSecondary ()Ljava/util/Optional; c
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ServerGamePacketListener;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ServerboundSetCarriedItemPacket aao
	slot a
	getSlot ()I a
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ServerGamePacketListener;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ServerboundSetCommandBlockPacket aap
	FLAG_AUTOMATIC c
	FLAG_CONDITIONAL b
	FLAG_TRACK_OUTPUT a
	automatic h
	command e
	conditional g
	mode i
	pos d
	trackOutput f
	getCommand ()Ljava/lang/String; c
	getMode ()Lnet/minecraft/world/level/block/entity/CommandBlockEntity$Mode; g
	getPos ()Lnet/minecraft/core/BlockPos; a
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ServerGamePacketListener;)V a
	isAutomatic ()Z f
	isConditional ()Z e
	isTrackOutput ()Z d
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ServerboundSetCommandMinecartPacket aaq
	command b
	entity a
	trackOutput c
	getCommand ()Ljava/lang/String; a
	getCommandBlock (Lnet/minecraft/world/level/Level;)Lnet/minecraft/world/level/BaseCommandBlock; a
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ServerGamePacketListener;)V a
	isTrackOutput ()Z c
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ServerboundSetCreativeModeSlotPacket aar
	itemStack b
	slotNum a
	getItem ()Lnet/minecraft/world/item/ItemStack; c
	getSlotNum ()I a
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ServerGamePacketListener;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ServerboundSetJigsawBlockPacket aas
	finalState e
	joint f
	name b
	pool d
	pos a
	target c
	getFinalState ()Ljava/lang/String; f
	getJoint ()Lnet/minecraft/world/level/block/entity/JigsawBlockEntity$JointType; g
	getName ()Lnet/minecraft/resources/ResourceLocation; c
	getPool ()Lnet/minecraft/resources/ResourceLocation; e
	getPos ()Lnet/minecraft/core/BlockPos; a
	getTarget ()Lnet/minecraft/resources/ResourceLocation; d
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ServerGamePacketListener;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ServerboundSetStructureBlockPacket aat
	FLAG_IGNORE_ENTITIES a
	FLAG_SHOW_AIR b
	FLAG_SHOW_BOUNDING_BOX c
	data l
	ignoreEntities m
	integrity p
	mirror j
	mode f
	name g
	offset h
	pos d
	rotation k
	seed q
	showAir n
	showBoundingBox o
	size i
	updateType e
	getData ()Ljava/lang/String; j
	getIntegrity ()F n
	getMirror ()Lnet/minecraft/world/level/block/Mirror; h
	getMode ()Lnet/minecraft/world/level/block/state/properties/StructureMode; d
	getName ()Ljava/lang/String; e
	getOffset ()Lnet/minecraft/core/BlockPos; f
	getPos ()Lnet/minecraft/core/BlockPos; a
	getRotation ()Lnet/minecraft/world/level/block/Rotation; i
	getSeed ()J o
	getSize ()Lnet/minecraft/core/Vec3i; g
	getUpdateType ()Lnet/minecraft/world/level/block/entity/StructureBlockEntity$UpdateType; c
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ServerGamePacketListener;)V a
	isIgnoreEntities ()Z k
	isShowAir ()Z l
	isShowBoundingBox ()Z m
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ServerboundSignUpdatePacket aau
	MAX_STRING_LENGTH a
	isFrontText d
	lines c
	pos b
	getLines ()[Ljava/lang/String; d
	getPos ()Lnet/minecraft/core/BlockPos; a
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ServerGamePacketListener;)V a
	isFrontText ()Z c
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ServerboundSwingPacket aav
	hand a
	getHand ()Lnet/minecraft/world/InteractionHand; a
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ServerGamePacketListener;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ServerboundTeleportToEntityPacket aaw
	uuid a
	getEntity (Lnet/minecraft/server/level/ServerLevel;)Lnet/minecraft/world/entity/Entity; a
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ServerGamePacketListener;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ServerboundUseItemOnPacket aax
	blockHit a
	hand b
	sequence c
	getHand ()Lnet/minecraft/world/InteractionHand; a
	getHitResult ()Lnet/minecraft/world/phys/BlockHitResult; c
	getSequence ()I d
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ServerGamePacketListener;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/ServerboundUseItemPacket aay
	hand a
	sequence b
	getHand ()Lnet/minecraft/world/InteractionHand; a
	getSequence ()I c
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/game/ServerGamePacketListener;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/game/VecDeltaCodec aaz
	TRUNCATION_STEPS a
	base b
	decode (J)D a
	decode (JJJ)Lnet/minecraft/world/phys/Vec3; a
	delta (Lnet/minecraft/world/phys/Vec3;)Lnet/minecraft/world/phys/Vec3; d
	encode (D)J a
	encodeX (Lnet/minecraft/world/phys/Vec3;)J a
	encodeY (Lnet/minecraft/world/phys/Vec3;)J b
	encodeZ (Lnet/minecraft/world/phys/Vec3;)J c
	setBase (Lnet/minecraft/world/phys/Vec3;)V e
net/minecraft/network/protocol/handshake/ClientIntentionPacket abb
	MAX_HOST_LENGTH a
	hostName c
	intention e
	port d
	protocolVersion b
	getHostName ()Ljava/lang/String; d
	getIntention ()Lnet/minecraft/network/ConnectionProtocol; a
	getPort ()I e
	getProtocolVersion ()I c
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/handshake/ServerHandshakePacketListener;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/handshake/ServerHandshakePacketListener abc
	handleIntention (Lnet/minecraft/network/protocol/handshake/ClientIntentionPacket;)V a
net/minecraft/network/protocol/login/ClientLoginPacketListener abe
	handleCompression (Lnet/minecraft/network/protocol/login/ClientboundLoginCompressionPacket;)V a
	handleCustomQuery (Lnet/minecraft/network/protocol/login/ClientboundCustomQueryPacket;)V a
	handleDisconnect (Lnet/minecraft/network/protocol/login/ClientboundLoginDisconnectPacket;)V a
	handleGameProfile (Lnet/minecraft/network/protocol/login/ClientboundGameProfilePacket;)V a
	handleHello (Lnet/minecraft/network/protocol/login/ClientboundHelloPacket;)V a
net/minecraft/network/protocol/login/ClientboundCustomQueryPacket abf
	MAX_PAYLOAD_SIZE a
	data d
	identifier c
	transactionId b
	getData ()Lnet/minecraft/network/FriendlyByteBuf; d
	getIdentifier ()Lnet/minecraft/resources/ResourceLocation; c
	getTransactionId ()I a
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/login/ClientLoginPacketListener;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/login/ClientboundGameProfilePacket abg
	gameProfile a
	getGameProfile ()Lcom/mojang/authlib/GameProfile; a
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/login/ClientLoginPacketListener;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/login/ClientboundHelloPacket abh
	challenge c
	publicKey b
	serverId a
	getChallenge ()[B d
	getPublicKey ()Ljava/security/PublicKey; c
	getServerId ()Ljava/lang/String; a
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/login/ClientLoginPacketListener;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/login/ClientboundLoginCompressionPacket abi
	compressionThreshold a
	getCompressionThreshold ()I a
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/login/ClientLoginPacketListener;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/login/ClientboundLoginDisconnectPacket abj
	reason a
	getReason ()Lnet/minecraft/network/chat/Component; a
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/login/ClientLoginPacketListener;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/login/ServerLoginPacketListener abk
	handleCustomQueryPacket (Lnet/minecraft/network/protocol/login/ServerboundCustomQueryPacket;)V a
	handleHello (Lnet/minecraft/network/protocol/login/ServerboundHelloPacket;)V a
	handleKey (Lnet/minecraft/network/protocol/login/ServerboundKeyPacket;)V a
net/minecraft/network/protocol/login/ServerboundCustomQueryPacket abl
	MAX_PAYLOAD_SIZE a
	data c
	transactionId b
	getData ()Lnet/minecraft/network/FriendlyByteBuf; c
	getTransactionId ()I a
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/login/ServerLoginPacketListener;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/login/ServerboundHelloPacket abm
	name a
	profileId b
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/login/ServerLoginPacketListener;)V a
	name ()Ljava/lang/String; a
	profileId ()Ljava/util/Optional; c
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/login/ServerboundKeyPacket abn
	encryptedChallenge b
	keybytes a
	getSecretKey (Ljava/security/PrivateKey;)Ljavax/crypto/SecretKey; a
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/login/ServerLoginPacketListener;)V a
	isChallengeValid ([BLjava/security/PrivateKey;)Z a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/status/ClientStatusPacketListener abq
	handlePongResponse (Lnet/minecraft/network/protocol/status/ClientboundPongResponsePacket;)V a
	handleStatusResponse (Lnet/minecraft/network/protocol/status/ClientboundStatusResponsePacket;)V a
net/minecraft/network/protocol/status/ClientboundPongResponsePacket abr
	time a
	getTime ()J a
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/status/ClientStatusPacketListener;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/status/ClientboundStatusResponsePacket abs
	status a
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/status/ClientStatusPacketListener;)V a
	status ()Lnet/minecraft/network/protocol/status/ServerStatus; a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/status/ServerStatus abt
	CODEC a
	description b
	enforcesSecureChat f
	favicon e
	players c
	version d
	description ()Lnet/minecraft/network/chat/Component; a
	enforcesSecureChat ()Z e
	favicon ()Ljava/util/Optional; d
	players ()Ljava/util/Optional; b
	version ()Ljava/util/Optional; c
net/minecraft/network/protocol/status/ServerStatus$Favicon abt$a
	CODEC a
	PREFIX c
	iconBytes b
	iconBytes ()[B a
net/minecraft/network/protocol/status/ServerStatus$Players abt$b
	CODEC a
	PROFILE_CODEC e
	max b
	online c
	sample d
	max ()I a
	online ()I b
	sample ()Ljava/util/List; c
net/minecraft/network/protocol/status/ServerStatus$Version abt$c
	CODEC a
	name b
	protocol c
	current ()Lnet/minecraft/network/protocol/status/ServerStatus$Version; a
	name ()Ljava/lang/String; b
	protocol ()I c
net/minecraft/network/protocol/status/ServerStatusPacketListener abu
	handlePingRequest (Lnet/minecraft/network/protocol/status/ServerboundPingRequestPacket;)V a
	handleStatusRequest (Lnet/minecraft/network/protocol/status/ServerboundStatusRequestPacket;)V a
net/minecraft/network/protocol/status/ServerboundPingRequestPacket abv
	time a
	getTime ()J a
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/status/ServerStatusPacketListener;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/protocol/status/ServerboundStatusRequestPacket abw
	handle (Lnet/minecraft/network/PacketListener;)V a
	handle (Lnet/minecraft/network/protocol/status/ServerStatusPacketListener;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/network/syncher/EntityDataAccessor aby
	id a
	serializer b
	getId ()I a
	getSerializer ()Lnet/minecraft/network/syncher/EntityDataSerializer; b
net/minecraft/network/syncher/EntityDataSerializer abz
	copy (Ljava/lang/Object;)Ljava/lang/Object; a
	createAccessor (I)Lnet/minecraft/network/syncher/EntityDataAccessor; a
	optional (Lnet/minecraft/network/FriendlyByteBuf$Writer;Lnet/minecraft/network/FriendlyByteBuf$Reader;)Lnet/minecraft/network/syncher/EntityDataSerializer; b
	read (Lnet/minecraft/network/FriendlyByteBuf;)Ljava/lang/Object; a
	simple (Lnet/minecraft/network/FriendlyByteBuf$Writer;Lnet/minecraft/network/FriendlyByteBuf$Reader;)Lnet/minecraft/network/syncher/EntityDataSerializer; a
	simpleEnum (Ljava/lang/Class;)Lnet/minecraft/network/syncher/EntityDataSerializer; a
	simpleId (Lnet/minecraft/core/IdMap;)Lnet/minecraft/network/syncher/EntityDataSerializer; a
	write (Lnet/minecraft/network/FriendlyByteBuf;Ljava/lang/Object;)V a
net/minecraft/network/syncher/EntityDataSerializer$ForValueType abz$a
	copy (Ljava/lang/Object;)Ljava/lang/Object; a
net/minecraft/network/syncher/EntityDataSerializers aca
	BLOCK_POS n
	BLOCK_STATE i
	BOOLEAN k
	BYTE a
	CAT_VARIANT w
	COMPONENT f
	COMPOUND_TAG s
	DIRECTION p
	FLOAT d
	FROG_VARIANT x
	INT b
	ITEM_STACK h
	LONG c
	OPTIONAL_BLOCK_POS o
	OPTIONAL_BLOCK_STATE j
	OPTIONAL_COMPONENT g
	OPTIONAL_GLOBAL_POS r
	OPTIONAL_UNSIGNED_INT u
	OPTIONAL_UUID q
	PAINTING_VARIANT y
	PARTICLE l
	POSE v
	QUATERNION B
	ROTATIONS m
	SERIALIZERS C
	SNIFFER_STATE z
	STRING e
	VECTOR3 A
	VILLAGER_DATA t
	getSerializedId (Lnet/minecraft/network/syncher/EntityDataSerializer;)I b
	getSerializer (I)Lnet/minecraft/network/syncher/EntityDataSerializer; a
	registerSerializer (Lnet/minecraft/network/syncher/EntityDataSerializer;)V a
net/minecraft/network/syncher/SynchedEntityData acb
	ENTITY_ID_POOL b
	LOGGER a
	MAX_ID_VALUE c
	entity d
	isDirty g
	itemsById e
	lock f
	assignValue (Lnet/minecraft/network/syncher/SynchedEntityData$DataItem;Lnet/minecraft/network/syncher/SynchedEntityData$DataValue;)V a
	assignValues (Ljava/util/List;)V a
	createDataItem (Lnet/minecraft/network/syncher/EntityDataAccessor;Ljava/lang/Object;)V c
	define (Lnet/minecraft/network/syncher/EntityDataAccessor;Ljava/lang/Object;)V a
	defineId (Ljava/lang/Class;Lnet/minecraft/network/syncher/EntityDataSerializer;)Lnet/minecraft/network/syncher/EntityDataAccessor; a
	get (Lnet/minecraft/network/syncher/EntityDataAccessor;)Ljava/lang/Object; b
	getItem (Lnet/minecraft/network/syncher/EntityDataAccessor;)Lnet/minecraft/network/syncher/SynchedEntityData$DataItem; c
	getNonDefaultValues ()Ljava/util/List; c
	hasItem (Lnet/minecraft/network/syncher/EntityDataAccessor;)Z a
	isDirty ()Z a
	isEmpty ()Z d
	packDirty ()Ljava/util/List; b
	set (Lnet/minecraft/network/syncher/EntityDataAccessor;Ljava/lang/Object;)V b
	set (Lnet/minecraft/network/syncher/EntityDataAccessor;Ljava/lang/Object;Z)V a
net/minecraft/network/syncher/SynchedEntityData$DataItem acb$a
	accessor a
	dirty d
	initialValue c
	value b
	getAccessor ()Lnet/minecraft/network/syncher/EntityDataAccessor; a
	getValue ()Ljava/lang/Object; b
	isDirty ()Z c
	isSetToDefault ()Z d
	setDirty (Z)V a
	setValue (Ljava/lang/Object;)V a
	value ()Lnet/minecraft/network/syncher/SynchedEntityData$DataValue; e
net/minecraft/network/syncher/SynchedEntityData$DataValue acb$b
	id a
	serializer b
	value c
	create (Lnet/minecraft/network/syncher/EntityDataAccessor;Ljava/lang/Object;)Lnet/minecraft/network/syncher/SynchedEntityData$DataValue; a
	id ()I a
	read (Lnet/minecraft/network/FriendlyByteBuf;I)Lnet/minecraft/network/syncher/SynchedEntityData$DataValue; a
	read (Lnet/minecraft/network/FriendlyByteBuf;ILnet/minecraft/network/syncher/EntityDataSerializer;)Lnet/minecraft/network/syncher/SynchedEntityData$DataValue; a
	serializer ()Lnet/minecraft/network/syncher/EntityDataSerializer; b
	value ()Ljava/lang/Object; c
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/realms/DisconnectedRealmsScreen gaj
	message b
	parent c
	reason a
	textHeight G
	getNarrationMessage ()Lnet/minecraft/network/chat/Component; au_
	init ()V b
	onClose ()V aw_
	render (Lnet/minecraft/client/gui/GuiGraphics;IIF)V a
net/minecraft/realms/RealmsConnect gak
	LOGGER a
	aborted c
	connection d
	onlineScreen b
	abort ()V a
	connect (Lcom/mojang/realmsclient/dto/RealmsServer;Lnet/minecraft/client/multiplayer/resolver/ServerAddress;)V a
	tick ()V b
net/minecraft/realms/RealmsLabel gal
	color d
	text a
	x b
	y c
	getText ()Lnet/minecraft/network/chat/Component; a
	render (Lnet/minecraft/client/gui/GuiGraphics;IIF)V a
net/minecraft/realms/RealmsObjectSelectionList gam
	addEntry (Lnet/minecraft/client/gui/components/AbstractSelectionList$Entry;)I b
	addEntry (Lnet/minecraft/client/gui/components/ObjectSelectionList$Entry;)I a
	clear ()V v
	getItemCount ()I k
	getMaxPosition ()I a
	getRowLeft ()I o
	getRowTop (I)I g
	getRowWidth ()I b
	getScrollbarPosition ()I c
	itemClicked (IIDDII)V a
	replaceEntries (Ljava/util/Collection;)V a
	selectItem (I)V a
	setSelectedItem (I)V j
net/minecraft/realms/RealmsScreen gan
	COLOR_BLACK w
	COLOR_BRIGHT_YELLOW y
	COLOR_BUTTON_YELLOW D
	COLOR_DARK_GRAY q
	COLOR_DARK_GREEN t
	COLOR_GRAY p
	COLOR_GREEN s
	COLOR_INFO C
	COLOR_LINK z
	COLOR_LINK_HOVER A
	COLOR_MEDIUM_GRAY r
	COLOR_RED u
	COLOR_RED_FADE v
	COLOR_WHITE o
	COLOR_YELLOW x
	COMPONENT_HEIGHT l
	EXPIRATION_NOTIFICATION_DAYS m
	SIZE_LIMIT n
	SKIN_FACE_SIZE F
	TITLE_HEIGHT k
	UPDATE_BREAKS_ADVENTURE_URL E
	labels a
	addLabel (Lnet/minecraft/realms/RealmsLabel;)Lnet/minecraft/realms/RealmsLabel; a
	createLabelNarration ()Lnet/minecraft/network/chat/Component; l
	row (I)I h
net/minecraft/realms/RepeatedNarrator gao
	params b
	permitsPerSecond a
	narrate (Lnet/minecraft/client/GameNarrator;Lnet/minecraft/network/chat/Component;)V a
net/minecraft/realms/RepeatedNarrator$Params gao$a
	narration a
	rateLimiter b
net/minecraft/recipebook/PlaceRecipe acf
	addItemToSlot (Ljava/util/Iterator;IIII)V a
	placeRecipe (IIILnet/minecraft/world/item/crafting/Recipe;Ljava/util/Iterator;I)V a
net/minecraft/recipebook/ServerPlaceRecipe acg
	LOGGER d
	inventory b
	menu c
	stackedContents a
	addItemToSlot (Ljava/util/Iterator;IIII)V a
	clearGrid ()V a
	getAmountOfFreeSlotsInInventory ()I c
	getStackSize (ZIZ)I a
	handleRecipeClicked (Lnet/minecraft/world/item/crafting/Recipe;Z)V a
	moveItemToGrid (Lnet/minecraft/world/inventory/Slot;Lnet/minecraft/world/item/ItemStack;)V a
	recipeClicked (Lnet/minecraft/server/level/ServerPlayer;Lnet/minecraft/world/item/crafting/Recipe;Z)V a
	testClearGrid ()Z b
net/minecraft/resources/DelegatingOps aci
	delegate a
net/minecraft/resources/FileToIdConverter acj
	extension b
	prefix a
	fileToId (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/resources/ResourceLocation; b
	idToFile (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/resources/ResourceLocation; a
	json (Ljava/lang/String;)Lnet/minecraft/resources/FileToIdConverter; a
	listMatchingResourceStacks (Lnet/minecraft/server/packs/resources/ResourceManager;)Ljava/util/Map; b
	listMatchingResources (Lnet/minecraft/server/packs/resources/ResourceManager;)Ljava/util/Map; a
net/minecraft/resources/HolderSetCodec ack
	elementCodec b
	homogenousListCodec c
	registryAwareCodec d
	registryKey a
	create (Lnet/minecraft/resources/ResourceKey;Lcom/mojang/serialization/Codec;Z)Lcom/mojang/serialization/Codec; a
	decodeWithoutRegistry (Lcom/mojang/serialization/DynamicOps;Ljava/lang/Object;)Lcom/mojang/serialization/DataResult; a
	encode (Lnet/minecraft/core/HolderSet;Lcom/mojang/serialization/DynamicOps;Ljava/lang/Object;)Lcom/mojang/serialization/DataResult; a
	encodeWithoutRegistry (Lnet/minecraft/core/HolderSet;Lcom/mojang/serialization/DynamicOps;Ljava/lang/Object;)Lcom/mojang/serialization/DataResult; b
	homogenousList (Lcom/mojang/serialization/Codec;Z)Lcom/mojang/serialization/Codec; a
net/minecraft/resources/RegistryDataLoader acl
	DIMENSION_REGISTRIES b
	LOGGER c
	WORLDGEN_REGISTRIES a
	createContext (Lnet/minecraft/core/RegistryAccess;Ljava/util/List;)Lnet/minecraft/resources/RegistryOps$RegistryInfoLookup; a
	createInfoForContextRegistry (Lnet/minecraft/core/Registry;)Lnet/minecraft/resources/RegistryOps$RegistryInfo; a
	createInfoForNewRegistry (Lnet/minecraft/core/WritableRegistry;)Lnet/minecraft/resources/RegistryOps$RegistryInfo; a
	load (Lnet/minecraft/server/packs/resources/ResourceManager;Lnet/minecraft/core/RegistryAccess;Ljava/util/List;)Lnet/minecraft/core/RegistryAccess$Frozen; a
	loadRegistryContents (Lnet/minecraft/resources/RegistryOps$RegistryInfoLookup;Lnet/minecraft/server/packs/resources/ResourceManager;Lnet/minecraft/resources/ResourceKey;Lnet/minecraft/core/WritableRegistry;Lcom/mojang/serialization/Decoder;Ljava/util/Map;)V a
	logErrors (Ljava/util/Map;)V a
	registryDirPath (Lnet/minecraft/resources/ResourceLocation;)Ljava/lang/String; a
net/minecraft/resources/RegistryDataLoader$Loader acl$a
net/minecraft/resources/RegistryDataLoader$RegistryData acl$b
	elementCodec b
	key a
	create (Lcom/mojang/serialization/Lifecycle;Ljava/util/Map;)Lcom/mojang/datafixers/util/Pair; a
	elementCodec ()Lcom/mojang/serialization/Codec; b
	key ()Lnet/minecraft/resources/ResourceKey; a
net/minecraft/resources/RegistryFileCodec acm
	allowInline c
	elementCodec b
	registryKey a
	create (Lnet/minecraft/resources/ResourceKey;Lcom/mojang/serialization/Codec;)Lnet/minecraft/resources/RegistryFileCodec; a
	create (Lnet/minecraft/resources/ResourceKey;Lcom/mojang/serialization/Codec;Z)Lnet/minecraft/resources/RegistryFileCodec; a
	encode (Lnet/minecraft/core/Holder;Lcom/mojang/serialization/DynamicOps;Ljava/lang/Object;)Lcom/mojang/serialization/DataResult; a
net/minecraft/resources/RegistryFixedCodec acn
	registryKey a
	create (Lnet/minecraft/resources/ResourceKey;)Lnet/minecraft/resources/RegistryFixedCodec; a
	encode (Lnet/minecraft/core/Holder;Lcom/mojang/serialization/DynamicOps;Ljava/lang/Object;)Lcom/mojang/serialization/DataResult; a
net/minecraft/resources/RegistryOps aco
	lookupProvider b
	create (Lcom/mojang/serialization/DynamicOps;Lnet/minecraft/core/HolderLookup$Provider;)Lnet/minecraft/resources/RegistryOps; a
	create (Lcom/mojang/serialization/DynamicOps;Lnet/minecraft/resources/RegistryOps$RegistryInfoLookup;)Lnet/minecraft/resources/RegistryOps; a
	getter (Lnet/minecraft/resources/ResourceKey;)Ljava/util/Optional; b
	memoizeLookup (Lnet/minecraft/resources/RegistryOps$RegistryInfoLookup;)Lnet/minecraft/resources/RegistryOps$RegistryInfoLookup; a
	owner (Lnet/minecraft/resources/ResourceKey;)Ljava/util/Optional; a
	retrieveElement (Lnet/minecraft/resources/ResourceKey;)Lcom/mojang/serialization/codecs/RecordCodecBuilder; d
	retrieveGetter (Lnet/minecraft/resources/ResourceKey;)Lcom/mojang/serialization/codecs/RecordCodecBuilder; c
net/minecraft/resources/RegistryOps$RegistryInfo aco$a
	elementsLifecycle c
	getter b
	owner a
	elementsLifecycle ()Lcom/mojang/serialization/Lifecycle; c
	getter ()Lnet/minecraft/core/HolderGetter; b
	owner ()Lnet/minecraft/core/HolderOwner; a
net/minecraft/resources/RegistryOps$RegistryInfoLookup aco$b
	lookup (Lnet/minecraft/resources/ResourceKey;)Ljava/util/Optional; a
net/minecraft/resources/ResourceKey acp
	VALUES a
	location c
	registryName b
	cast (Lnet/minecraft/resources/ResourceKey;)Ljava/util/Optional; c
	codec (Lnet/minecraft/resources/ResourceKey;)Lcom/mojang/serialization/Codec; a
	create (Lnet/minecraft/resources/ResourceKey;Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/resources/ResourceKey; a
	create (Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/resources/ResourceKey; a
	createRegistryKey (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/resources/ResourceKey; a
	isFor (Lnet/minecraft/resources/ResourceKey;)Z b
	location ()Lnet/minecraft/resources/ResourceLocation; a
	registry ()Lnet/minecraft/resources/ResourceLocation; b
net/minecraft/resources/ResourceKey$InternKey acp$a
	location b
	registry a
	location ()Lnet/minecraft/resources/ResourceLocation; b
	registry ()Lnet/minecraft/resources/ResourceLocation; a
net/minecraft/resources/ResourceLocation acq
	CODEC a
	DEFAULT_NAMESPACE c
	ERROR_INVALID e
	NAMESPACE_SEPARATOR b
	REALMS_NAMESPACE d
	namespace f
	path g
	assertValidNamespace (Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; c
	assertValidPath (Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; d
	compareTo (Lnet/minecraft/resources/ResourceLocation;)I a
	decompose (Ljava/lang/String;C)[Ljava/lang/String; b
	getNamespace ()Ljava/lang/String; b
	getPath ()Ljava/lang/String; a
	isAllowedInResourceLocation (C)Z a
	isValidNamespace (Ljava/lang/String;)Z i
	isValidPath (Ljava/lang/String;)Z h
	isValidResourceLocation (Ljava/lang/String;)Z g
	of (Ljava/lang/String;C)Lnet/minecraft/resources/ResourceLocation; a
	read (Lcom/mojang/brigadier/StringReader;)Lnet/minecraft/resources/ResourceLocation; a
	read (Ljava/lang/String;)Lcom/mojang/serialization/DataResult; b
	toDebugFileName ()Ljava/lang/String; c
	toLanguageKey ()Ljava/lang/String; d
	toLanguageKey (Ljava/lang/String;)Ljava/lang/String; f
	toLanguageKey (Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; b
	toShortLanguageKey ()Ljava/lang/String; e
	tryBuild (Ljava/lang/String;Ljava/lang/String;)Lnet/minecraft/resources/ResourceLocation; a
	tryParse (Ljava/lang/String;)Lnet/minecraft/resources/ResourceLocation; a
	validNamespaceChar (C)Z c
	validPathChar (C)Z b
	withPath (Ljava/lang/String;)Lnet/minecraft/resources/ResourceLocation; c
	withPath (Ljava/util/function/UnaryOperator;)Lnet/minecraft/resources/ResourceLocation; a
	withPrefix (Ljava/lang/String;)Lnet/minecraft/resources/ResourceLocation; d
	withSuffix (Ljava/lang/String;)Lnet/minecraft/resources/ResourceLocation; e
net/minecraft/resources/ResourceLocation$Dummy acq$a
net/minecraft/resources/ResourceLocation$Serializer acq$b
	deserialize (Lcom/google/gson/JsonElement;Ljava/lang/reflect/Type;Lcom/google/gson/JsonDeserializationContext;)Lnet/minecraft/resources/ResourceLocation; a
	serialize (Lnet/minecraft/resources/ResourceLocation;Ljava/lang/reflect/Type;Lcom/google/gson/JsonSerializationContext;)Lcom/google/gson/JsonElement; a
net/minecraft/server/Bootstrap acs
	LOGGER d
	STDOUT a
	bootstrapDuration b
	isBootstrapped c
	bootStrap ()V a
	checkBootstrapCalled (Ljava/util/function/Supplier;)V a
	checkGameruleTranslations (Ljava/util/Set;)V a
	checkTranslations (Ljava/lang/Iterable;Ljava/util/function/Function;Ljava/util/Set;)V a
	createBootstrapException (Ljava/util/function/Supplier;)Ljava/lang/RuntimeException; b
	getMissingTranslations ()Ljava/util/Set; b
	realStdoutPrintln (Ljava/lang/String;)V a
	validate ()V c
	wrapStreams ()V d
net/minecraft/server/ChainedJsonException act
	entries a
	message b
	forException (Ljava/lang/Exception;)Lnet/minecraft/server/ChainedJsonException; a
	prependJsonKey (Ljava/lang/String;)V a
	setFilenameAndFlush (Ljava/lang/String;)V b
net/minecraft/server/ChainedJsonException$Entry act$a
	filename a
	jsonKeys b
	addJsonKey (Ljava/lang/String;)V a
	getFilename ()Ljava/lang/String; a
	getJsonKeys ()Ljava/lang/String; b
net/minecraft/server/ConsoleInput acu
	msg a
	source b
net/minecraft/server/DebugLoggedPrintStream acv
	LOGGER b
	logLine (Ljava/lang/String;)V a
net/minecraft/server/Eula acw
	LOGGER a
	agreed c
	file b
	hasAgreedToEULA ()Z a
	readFile ()Z b
	saveDefaults ()V c
net/minecraft/server/LoggedPrintStream acx
	LOGGER b
	name a
	logLine (Ljava/lang/String;)V a
net/minecraft/server/MinecraftServer$ReloadableResources net/minecraft/server/MinecraftServer$a
	managers b
	resourceManager a
	managers ()Lnet/minecraft/server/ReloadableServerResources; b
	resourceManager ()Lnet/minecraft/server/packs/resources/CloseableResourceManager; a
net/minecraft/server/MinecraftServer$ServerResourcePackInfo net/minecraft/server/MinecraftServer$b
	hash b
	isRequired c
	prompt d
	url a
	hash ()Ljava/lang/String; b
	isRequired ()Z c
	prompt ()Lnet/minecraft/network/chat/Component; d
	url ()Ljava/lang/String; a
net/minecraft/server/MinecraftServer$TimeProfiler net/minecraft/server/MinecraftServer$c
	startNanos a
	startTick b
	stop (JI)Lnet/minecraft/util/profiling/ProfileResults; a
net/minecraft/server/PlayerAdvancements acy
	GSON b
	LOGGER a
	TYPE_TOKEN c
	dataFixer d
	isFirstPacket m
	lastSelectedTab l
	player k
	playerList e
	playerSavePath f
	progress g
	progressChanged i
	rootsToUpdate j
	visible h
	award (Lnet/minecraft/advancements/Advancement;Ljava/lang/String;)Z a
	checkForAutomaticTriggers (Lnet/minecraft/server/ServerAdvancementManager;)V c
	flushDirty (Lnet/minecraft/server/level/ServerPlayer;)V b
	getOrStartProgress (Lnet/minecraft/advancements/Advancement;)Lnet/minecraft/advancements/AdvancementProgress; b
	load (Lnet/minecraft/server/ServerAdvancementManager;)V d
	markForVisibilityUpdate (Lnet/minecraft/advancements/Advancement;)V c
	registerListeners (Lnet/minecraft/advancements/Advancement;)V d
	registerListeners (Lnet/minecraft/server/ServerAdvancementManager;)V b
	reload (Lnet/minecraft/server/ServerAdvancementManager;)V a
	revoke (Lnet/minecraft/advancements/Advancement;Ljava/lang/String;)Z b
	save ()V b
	setPlayer (Lnet/minecraft/server/level/ServerPlayer;)V a
	setSelectedTab (Lnet/minecraft/advancements/Advancement;)V a
	startProgress (Lnet/minecraft/advancements/Advancement;Lnet/minecraft/advancements/AdvancementProgress;)V a
	stopListening ()V a
	unregisterListeners (Lnet/minecraft/advancements/Advancement;)V e
	updateTreeVisibility (Lnet/minecraft/advancements/Advancement;Ljava/util/Set;Ljava/util/Set;)V a
net/minecraft/server/RegistryLayer acz
	$VALUES g
	DIMENSIONS c
	RELOADABLE d
	STATIC a
	STATIC_ACCESS f
	VALUES e
	WORLDGEN b
	$values ()[Lnet/minecraft/server/RegistryLayer; b
	createRegistryAccess ()Lnet/minecraft/core/LayeredRegistryAccess; a
net/minecraft/server/ReloadableServerResources ada
	DATA_RELOAD_INITIAL_TASK b
	LOGGER a
	advancements h
	commandBuildContext c
	commands d
	functionLibrary i
	lootData g
	recipes e
	tagManager f
	getAdvancements ()Lnet/minecraft/server/ServerAdvancementManager; e
	getCommands ()Lnet/minecraft/commands/Commands; d
	getFunctionLibrary ()Lnet/minecraft/server/ServerFunctionLibrary; a
	getLootData ()Lnet/minecraft/world/level/storage/loot/LootDataManager; b
	getRecipeManager ()Lnet/minecraft/world/item/crafting/RecipeManager; c
	listeners ()Ljava/util/List; f
	loadResources (Lnet/minecraft/server/packs/resources/ResourceManager;Lnet/minecraft/core/RegistryAccess$Frozen;Lnet/minecraft/world/flag/FeatureFlagSet;Lnet/minecraft/commands/Commands$CommandSelection;ILjava/util/concurrent/Executor;Ljava/util/concurrent/Executor;)Ljava/util/concurrent/CompletableFuture; a
	updateRegistryTags (Lnet/minecraft/core/RegistryAccess;)V a
	updateRegistryTags (Lnet/minecraft/core/RegistryAccess;Lnet/minecraft/tags/TagManager$LoadResult;)V a
net/minecraft/server/RunningOnDifferentThreadException adb
	RUNNING_ON_DIFFERENT_THREAD a
net/minecraft/server/ServerAdvancementManager adc
	GSON b
	LOGGER a
	advancements c
	lootData d
	apply (Ljava/lang/Object;Lnet/minecraft/server/packs/resources/ResourceManager;Lnet/minecraft/util/profiling/ProfilerFiller;)V a
	apply (Ljava/util/Map;Lnet/minecraft/server/packs/resources/ResourceManager;Lnet/minecraft/util/profiling/ProfilerFiller;)V a
	getAdvancement (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/advancements/Advancement; a
	getAllAdvancements ()Ljava/util/Collection; a
net/minecraft/server/ServerFunctionLibrary add
	LISTER b
	LOGGER a
	dispatcher g
	functionCompilationLevel f
	functions c
	tags e
	tagsLoader d
	getAvailableTags ()Ljava/lang/Iterable; b
	getFunction (Lnet/minecraft/resources/ResourceLocation;)Ljava/util/Optional; a
	getFunctions ()Ljava/util/Map; a
	getTag (Lnet/minecraft/resources/ResourceLocation;)Ljava/util/Collection; b
	readLines (Lnet/minecraft/server/packs/resources/Resource;)Ljava/util/List; a
	reload (Lnet/minecraft/server/packs/resources/PreparableReloadListener$PreparationBarrier;Lnet/minecraft/server/packs/resources/ResourceManager;Lnet/minecraft/util/profiling/ProfilerFiller;Lnet/minecraft/util/profiling/ProfilerFiller;Ljava/util/concurrent/Executor;Ljava/util/concurrent/Executor;)Ljava/util/concurrent/CompletableFuture; a
net/minecraft/server/ServerFunctionManager ade
	LOAD_FUNCTION_TAG c
	NO_RECURSIVE_TRACES a
	TICK_FUNCTION_TAG b
	context e
	library h
	postReload g
	server d
	ticking f
	execute (Lnet/minecraft/commands/CommandFunction;Lnet/minecraft/commands/CommandSourceStack;)I a
	execute (Lnet/minecraft/commands/CommandFunction;Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/server/ServerFunctionManager$TraceCallbacks;)I a
	executeTagFunctions (Ljava/util/Collection;Lnet/minecraft/resources/ResourceLocation;)V a
	get (Lnet/minecraft/resources/ResourceLocation;)Ljava/util/Optional; a
	getCommandLimit ()I a
	getDispatcher ()Lcom/mojang/brigadier/CommandDispatcher; b
	getFunctionNames ()Ljava/lang/Iterable; e
	getGameLoopSender ()Lnet/minecraft/commands/CommandSourceStack; d
	getTag (Lnet/minecraft/resources/ResourceLocation;)Ljava/util/Collection; b
	getTagNames ()Ljava/lang/Iterable; f
	postReload (Lnet/minecraft/server/ServerFunctionLibrary;)V b
	replaceLibrary (Lnet/minecraft/server/ServerFunctionLibrary;)V a
	tick ()V c
net/minecraft/server/ServerFunctionManager$ExecutionContext ade$a
	abortCurrentDepth f
	commandQueue d
	depth b
	nestedCalls e
	tracer c
	delayFunctionCall (Lnet/minecraft/commands/CommandFunction;Lnet/minecraft/commands/CommandSourceStack;)V a
	reportError (Ljava/lang/String;)V a
	runTopCommand (Lnet/minecraft/commands/CommandFunction;Lnet/minecraft/commands/CommandSourceStack;)I b
	wrapSender (Lnet/minecraft/commands/CommandSourceStack;)Lnet/minecraft/commands/CommandSourceStack; a
net/minecraft/server/ServerFunctionManager$ExecutionContext$AbortingReturnValueConsumer ade$a$a
	wrapped b
net/minecraft/server/ServerFunctionManager$QueuedCommand ade$b
	depth b
	entry c
	sender a
	execute (Lnet/minecraft/server/ServerFunctionManager;Ljava/util/Deque;ILnet/minecraft/server/ServerFunctionManager$TraceCallbacks;)V a
net/minecraft/server/ServerFunctionManager$TraceCallbacks ade$c
	onCall (ILnet/minecraft/resources/ResourceLocation;I)V a
	onCommand (ILjava/lang/String;)V a
	onError (ILjava/lang/String;)V b
	onReturn (ILjava/lang/String;I)V a
net/minecraft/server/ServerInterface adf
	getLevelIdName ()Ljava/lang/String; q
	getMaxPlayers ()I I
	getPlayerCount ()I H
	getPlayerNames ()[Ljava/lang/String; J
	getPluginNames ()Ljava/lang/String; s
	getProperties ()Lnet/minecraft/server/dedicated/DedicatedServerProperties; a
	getServerIp ()Ljava/lang/String; b
	getServerName ()Ljava/lang/String; f
	getServerPort ()I d
	getServerVersion ()Ljava/lang/String; G
	runCommand (Ljava/lang/String;)Ljava/lang/String; a
net/minecraft/server/ServerScoreboard adg
	dirtyListeners i
	server g
	trackedObjectives h
	addDirtyListener (Ljava/lang/Runnable;)V a
	addPlayerToTeam (Ljava/lang/String;Lnet/minecraft/world/scores/PlayerTeam;)Z a
	createData ()Lnet/minecraft/world/scores/ScoreboardSaveData; b
	createData (Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/world/scores/ScoreboardSaveData; a
	getObjectiveDisplaySlotCount (Lnet/minecraft/world/scores/Objective;)I h
	getStartTrackingPackets (Lnet/minecraft/world/scores/Objective;)Ljava/util/List; d
	getStopTrackingPackets (Lnet/minecraft/world/scores/Objective;)Ljava/util/List; f
	onObjectiveAdded (Lnet/minecraft/world/scores/Objective;)V a
	onObjectiveChanged (Lnet/minecraft/world/scores/Objective;)V b
	onObjectiveRemoved (Lnet/minecraft/world/scores/Objective;)V c
	onPlayerRemoved (Ljava/lang/String;)V a
	onPlayerScoreRemoved (Ljava/lang/String;Lnet/minecraft/world/scores/Objective;)V a
	onScoreChanged (Lnet/minecraft/world/scores/Score;)V a
	onTeamAdded (Lnet/minecraft/world/scores/PlayerTeam;)V a
	onTeamChanged (Lnet/minecraft/world/scores/PlayerTeam;)V b
	onTeamRemoved (Lnet/minecraft/world/scores/PlayerTeam;)V c
	removePlayerFromTeam (Ljava/lang/String;Lnet/minecraft/world/scores/PlayerTeam;)V b
	setDirty ()V a
	setDisplayObjective (ILnet/minecraft/world/scores/Objective;)V a
	startTrackingObjective (Lnet/minecraft/world/scores/Objective;)V e
	stopTrackingObjective (Lnet/minecraft/world/scores/Objective;)V g
net/minecraft/server/ServerScoreboard$Method adg$a
	$VALUES c
	CHANGE a
	REMOVE b
	$values ()[Lnet/minecraft/server/ServerScoreboard$Method; a
net/minecraft/server/Services adh
	USERID_CACHE_FILE e
	profileCache d
	profileRepository c
	servicesKeySet b
	sessionService a
	create (Lcom/mojang/authlib/yggdrasil/YggdrasilAuthenticationService;Ljava/io/File;)Lnet/minecraft/server/Services; a
	profileCache ()Lnet/minecraft/server/players/GameProfileCache; e
	profileKeySignatureValidator ()Lnet/minecraft/util/SignatureValidator; a
	profileRepository ()Lcom/mojang/authlib/GameProfileRepository; d
	servicesKeySet ()Lcom/mojang/authlib/yggdrasil/ServicesKeySet; c
	sessionService ()Lcom/mojang/authlib/minecraft/MinecraftSessionService; b
net/minecraft/server/TickTask adi
	runnable b
	tick a
	getTick ()I a
net/minecraft/server/WorldLoader adj
	LOGGER a
	load (Lnet/minecraft/server/WorldLoader$InitConfig;Lnet/minecraft/server/WorldLoader$WorldDataSupplier;Lnet/minecraft/server/WorldLoader$ResultFactory;Ljava/util/concurrent/Executor;Ljava/util/concurrent/Executor;)Ljava/util/concurrent/CompletableFuture; a
	loadAndReplaceLayer (Lnet/minecraft/server/packs/resources/ResourceManager;Lnet/minecraft/core/LayeredRegistryAccess;Lnet/minecraft/server/RegistryLayer;Ljava/util/List;)Lnet/minecraft/core/LayeredRegistryAccess; b
	loadLayer (Lnet/minecraft/server/packs/resources/ResourceManager;Lnet/minecraft/core/LayeredRegistryAccess;Lnet/minecraft/server/RegistryLayer;Ljava/util/List;)Lnet/minecraft/core/RegistryAccess$Frozen; a
net/minecraft/server/WorldLoader$DataLoadContext adj$a
	dataConfiguration b
	datapackDimensions d
	datapackWorldgen c
	resources a
	dataConfiguration ()Lnet/minecraft/world/level/WorldDataConfiguration; b
	datapackDimensions ()Lnet/minecraft/core/RegistryAccess$Frozen; d
	datapackWorldgen ()Lnet/minecraft/core/RegistryAccess$Frozen; c
	resources ()Lnet/minecraft/server/packs/resources/ResourceManager; a
net/minecraft/server/WorldLoader$DataLoadOutput adj$b
	cookie a
	finalDimensions b
	cookie ()Ljava/lang/Object; a
	finalDimensions ()Lnet/minecraft/core/RegistryAccess$Frozen; b
net/minecraft/server/WorldLoader$InitConfig adj$c
	commandSelection b
	functionCompilationLevel c
	packConfig a
	commandSelection ()Lnet/minecraft/commands/Commands$CommandSelection; b
	functionCompilationLevel ()I c
	packConfig ()Lnet/minecraft/server/WorldLoader$PackConfig; a
net/minecraft/server/WorldLoader$PackConfig adj$d
	initMode d
	initialDataConfig b
	packRepository a
	safeMode c
	createResourceManager ()Lcom/mojang/datafixers/util/Pair; a
	initMode ()Z e
	initialDataConfig ()Lnet/minecraft/world/level/WorldDataConfiguration; c
	packRepository ()Lnet/minecraft/server/packs/repository/PackRepository; b
	safeMode ()Z d
net/minecraft/server/WorldLoader$ResultFactory adj$e
net/minecraft/server/WorldLoader$WorldDataSupplier adj$f
net/minecraft/server/WorldStem adk
	dataPackResources b
	registries c
	resourceManager a
	worldData d
	dataPackResources ()Lnet/minecraft/server/ReloadableServerResources; b
	registries ()Lnet/minecraft/core/LayeredRegistryAccess; c
	resourceManager ()Lnet/minecraft/server/packs/resources/CloseableResourceManager; a
	worldData ()Lnet/minecraft/world/level/storage/WorldData; d
net/minecraft/server/advancements/AdvancementVisibilityEvaluator adl
	VISIBILITY_DEPTH a
	evaluateVisibility (Lnet/minecraft/advancements/Advancement;Lit/unimi/dsi/fastutil/Stack;Ljava/util/function/Predicate;Lnet/minecraft/server/advancements/AdvancementVisibilityEvaluator$Output;)Z a
	evaluateVisibility (Lnet/minecraft/advancements/Advancement;Ljava/util/function/Predicate;Lnet/minecraft/server/advancements/AdvancementVisibilityEvaluator$Output;)V a
	evaluateVisibilityRule (Lnet/minecraft/advancements/Advancement;Z)Lnet/minecraft/server/advancements/AdvancementVisibilityEvaluator$VisibilityRule; a
	evaluateVisiblityForUnfinishedNode (Lit/unimi/dsi/fastutil/Stack;)Z a
net/minecraft/server/advancements/AdvancementVisibilityEvaluator$Output adl$a
net/minecraft/server/advancements/AdvancementVisibilityEvaluator$VisibilityRule adl$b
	$VALUES d
	HIDE b
	NO_CHANGE c
	SHOW a
	$values ()[Lnet/minecraft/server/advancements/AdvancementVisibilityEvaluator$VisibilityRule; a
net/minecraft/server/bossevents/CustomBossEvent adn
	id h
	max k
	players i
	value j
	addOfflinePlayer (Ljava/util/UUID;)V a
	addPlayer (Lnet/minecraft/server/level/ServerPlayer;)V a
	getDisplayName ()Lnet/minecraft/network/chat/Component; e
	getMax ()I d
	getTextId ()Lnet/minecraft/resources/ResourceLocation; a
	getValue ()I c
	load (Lnet/minecraft/nbt/CompoundTag;Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/server/bossevents/CustomBossEvent; a
	onPlayerConnect (Lnet/minecraft/server/level/ServerPlayer;)V c
	onPlayerDisconnect (Lnet/minecraft/server/level/ServerPlayer;)V d
	removeAllPlayers ()V b
	removePlayer (Lnet/minecraft/server/level/ServerPlayer;)V b
	save ()Lnet/minecraft/nbt/CompoundTag; f
	setMax (I)V b
	setPlayers (Ljava/util/Collection;)Z a
	setValue (I)V a
net/minecraft/server/bossevents/CustomBossEvents ado
	events a
	create (Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/network/chat/Component;)Lnet/minecraft/server/bossevents/CustomBossEvent; a
	get (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/server/bossevents/CustomBossEvent; a
	getEvents ()Ljava/util/Collection; b
	getIds ()Ljava/util/Collection; a
	load (Lnet/minecraft/nbt/CompoundTag;)V a
	onPlayerConnect (Lnet/minecraft/server/level/ServerPlayer;)V a
	onPlayerDisconnect (Lnet/minecraft/server/level/ServerPlayer;)V b
	remove (Lnet/minecraft/server/bossevents/CustomBossEvent;)V a
	save ()Lnet/minecraft/nbt/CompoundTag; c
net/minecraft/server/chase/ChaseClient adq
	LOGGER a
	RECONNECT_INTERVAL_SECONDS b
	server e
	serverHost c
	serverPort d
	socket g
	thread h
	wantsToRun f
	executeCommand (Ljava/lang/String;)V b
	handleMessage (Ljava/lang/String;)V a
	handleTeleport (Ljava/util/Scanner;)V a
	parseTarget (Ljava/util/Scanner;)Ljava/util/Optional; b
	run ()V c
	start ()V a
	stop ()V b
net/minecraft/server/chase/ChaseClient$TeleportTarget adq$a
	level a
	pos b
	rot c
	level ()Lnet/minecraft/resources/ResourceKey; a
	pos ()Lnet/minecraft/world/phys/Vec3; b
	rot ()Lnet/minecraft/world/phys/Vec2; c
net/minecraft/server/chase/ChaseServer adr
	LOGGER a
	broadcastIntervalMs e
	clientSockets h
	playerList d
	serverBindAddress b
	serverPort c
	serverSocket g
	wantsToRun f
	getPlayerPosition ()Lnet/minecraft/server/chase/ChaseServer$PlayerPosition; e
	runAcceptor ()V d
	runSender ()V c
	start ()V a
	stop ()V b
net/minecraft/server/chase/ChaseServer$PlayerPosition adr$a
	dimensionName a
	x b
	xRot f
	y c
	yRot e
	z d
	dimensionName ()Ljava/lang/String; a
	format ()Ljava/lang/String; g
	x ()D b
	xRot ()F f
	y ()D c
	yRot ()F e
	z ()D d
net/minecraft/server/commands/AdvancementCommands adt
	SUGGEST_ADVANCEMENTS a
	addChildren (Lnet/minecraft/advancements/Advancement;Ljava/util/List;)V a
	getAdvancements (Lnet/minecraft/advancements/Advancement;Lnet/minecraft/server/commands/AdvancementCommands$Mode;)Ljava/util/List; a
	perform (Lnet/minecraft/commands/CommandSourceStack;Ljava/util/Collection;Lnet/minecraft/server/commands/AdvancementCommands$Action;Ljava/util/Collection;)I a
	performCriterion (Lnet/minecraft/commands/CommandSourceStack;Ljava/util/Collection;Lnet/minecraft/server/commands/AdvancementCommands$Action;Lnet/minecraft/advancements/Advancement;Ljava/lang/String;)I a
	register (Lcom/mojang/brigadier/CommandDispatcher;)V a
net/minecraft/server/commands/AdvancementCommands$Action adt$a
	$VALUES d
	GRANT a
	REVOKE b
	key c
	$values ()[Lnet/minecraft/server/commands/AdvancementCommands$Action; b
	getKey ()Ljava/lang/String; a
	perform (Lnet/minecraft/server/level/ServerPlayer;Ljava/lang/Iterable;)I a
	perform (Lnet/minecraft/server/level/ServerPlayer;Lnet/minecraft/advancements/Advancement;)Z a
	performCriterion (Lnet/minecraft/server/level/ServerPlayer;Lnet/minecraft/advancements/Advancement;Ljava/lang/String;)Z a
net/minecraft/server/commands/AdvancementCommands$Mode adt$b
	$VALUES h
	EVERYTHING e
	FROM c
	ONLY a
	THROUGH b
	UNTIL d
	children g
	parents f
	$values ()[Lnet/minecraft/server/commands/AdvancementCommands$Mode; a
net/minecraft/server/commands/AttributeCommand adu
	ERROR_MODIFIER_ALREADY_PRESENT d
	ERROR_NOT_LIVING_ENTITY a
	ERROR_NO_SUCH_ATTRIBUTE b
	ERROR_NO_SUCH_MODIFIER c
	addModifier (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/world/entity/Entity;Lnet/minecraft/core/Holder;Ljava/util/UUID;Ljava/lang/String;DLnet/minecraft/world/entity/ai/attributes/AttributeModifier$Operation;)I a
	getAttributeBase (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/world/entity/Entity;Lnet/minecraft/core/Holder;D)I b
	getAttributeDescription (Lnet/minecraft/core/Holder;)Lnet/minecraft/network/chat/Component; a
	getAttributeInstance (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/core/Holder;)Lnet/minecraft/world/entity/ai/attributes/AttributeInstance; a
	getAttributeModifier (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/world/entity/Entity;Lnet/minecraft/core/Holder;Ljava/util/UUID;D)I a
	getAttributeValue (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/world/entity/Entity;Lnet/minecraft/core/Holder;D)I a
	getEntityWithAttribute (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/core/Holder;)Lnet/minecraft/world/entity/LivingEntity; b
	getLivingEntity (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/world/entity/LivingEntity; a
	register (Lcom/mojang/brigadier/CommandDispatcher;Lnet/minecraft/commands/CommandBuildContext;)V a
	removeModifier (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/world/entity/Entity;Lnet/minecraft/core/Holder;Ljava/util/UUID;)I a
	setAttributeBase (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/world/entity/Entity;Lnet/minecraft/core/Holder;D)I c
net/minecraft/server/commands/BanIpCommands adv
	ERROR_ALREADY_BANNED b
	ERROR_INVALID_IP a
	banIp (Lnet/minecraft/commands/CommandSourceStack;Ljava/lang/String;Lnet/minecraft/network/chat/Component;)I b
	banIpOrName (Lnet/minecraft/commands/CommandSourceStack;Ljava/lang/String;Lnet/minecraft/network/chat/Component;)I a
	register (Lcom/mojang/brigadier/CommandDispatcher;)V a
net/minecraft/server/commands/BanListCommands adw
	register (Lcom/mojang/brigadier/CommandDispatcher;)V a
	showList (Lnet/minecraft/commands/CommandSourceStack;Ljava/util/Collection;)I a
net/minecraft/server/commands/BanPlayerCommands adx
	ERROR_ALREADY_BANNED a
	banPlayers (Lnet/minecraft/commands/CommandSourceStack;Ljava/util/Collection;Lnet/minecraft/network/chat/Component;)I a
	register (Lcom/mojang/brigadier/CommandDispatcher;)V a
net/minecraft/server/commands/BossBarCommands ady
	ERROR_ALREADY_EXISTS b
	ERROR_ALREADY_HIDDEN j
	ERROR_ALREADY_VISIBLE k
	ERROR_DOESNT_EXIST c
	ERROR_NO_COLOR_CHANGE f
	ERROR_NO_MAX_CHANGE i
	ERROR_NO_NAME_CHANGE e
	ERROR_NO_PLAYER_CHANGE d
	ERROR_NO_STYLE_CHANGE g
	ERROR_NO_VALUE_CHANGE h
	SUGGEST_BOSS_BAR a
	createBar (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/network/chat/Component;)I a
	getBossBar (Lcom/mojang/brigadier/context/CommandContext;)Lnet/minecraft/server/bossevents/CustomBossEvent; a
	getMax (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/server/bossevents/CustomBossEvent;)I b
	getPlayers (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/server/bossevents/CustomBossEvent;)I d
	getValue (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/server/bossevents/CustomBossEvent;)I a
	getVisible (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/server/bossevents/CustomBossEvent;)I c
	listBars (Lnet/minecraft/commands/CommandSourceStack;)I a
	register (Lcom/mojang/brigadier/CommandDispatcher;)V a
	removeBar (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/server/bossevents/CustomBossEvent;)I e
	setColor (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/server/bossevents/CustomBossEvent;Lnet/minecraft/world/BossEvent$BossBarColor;)I a
	setMax (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/server/bossevents/CustomBossEvent;I)I b
	setName (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/server/bossevents/CustomBossEvent;Lnet/minecraft/network/chat/Component;)I a
	setPlayers (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/server/bossevents/CustomBossEvent;Ljava/util/Collection;)I a
	setStyle (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/server/bossevents/CustomBossEvent;Lnet/minecraft/world/BossEvent$BossBarOverlay;)I a
	setValue (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/server/bossevents/CustomBossEvent;I)I a
	setVisible (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/server/bossevents/CustomBossEvent;Z)I a
net/minecraft/server/commands/ChaseCommand adz
	BROADCAST_INTERVAL_MS e
	DEFAULT_BIND_ADDRESS c
	DEFAULT_CONNECT_HOST b
	DEFAULT_PORT d
	DIMENSION_NAMES a
	chaseClient g
	chaseServer f
	alreadyRunning (Lnet/minecraft/commands/CommandSourceStack;)Z b
	follow (Lnet/minecraft/commands/CommandSourceStack;Ljava/lang/String;I)I b
	lead (Lnet/minecraft/commands/CommandSourceStack;Ljava/lang/String;I)I a
	register (Lcom/mojang/brigadier/CommandDispatcher;)V a
	stop (Lnet/minecraft/commands/CommandSourceStack;)I a
net/minecraft/server/commands/ClearInventoryCommands aea
	ERROR_MULTIPLE b
	ERROR_SINGLE a
	clearInventory (Lnet/minecraft/commands/CommandSourceStack;Ljava/util/Collection;Ljava/util/function/Predicate;I)I a
	register (Lcom/mojang/brigadier/CommandDispatcher;Lnet/minecraft/commands/CommandBuildContext;)V a
net/minecraft/server/commands/CloneCommands aeb
	ERROR_AREA_TOO_LARGE c
	ERROR_FAILED d
	ERROR_OVERLAP b
	FILTER_AIR a
	beginEndDestinationAndModeSuffix (Lnet/minecraft/commands/CommandBuildContext;Lnet/minecraft/server/commands/CloneCommands$CommandFunction;)Lcom/mojang/brigadier/builder/ArgumentBuilder; a
	clone (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/server/commands/CloneCommands$DimensionAndPosition;Lnet/minecraft/server/commands/CloneCommands$DimensionAndPosition;Lnet/minecraft/server/commands/CloneCommands$DimensionAndPosition;Ljava/util/function/Predicate;Lnet/minecraft/server/commands/CloneCommands$Mode;)I a
	destinationAndModeSuffix (Lnet/minecraft/commands/CommandBuildContext;Lnet/minecraft/server/commands/CloneCommands$CommandFunction;Lnet/minecraft/server/commands/CloneCommands$CommandFunction;)Lcom/mojang/brigadier/builder/ArgumentBuilder; a
	getLoadedDimensionAndPosition (Lcom/mojang/brigadier/context/CommandContext;Lnet/minecraft/server/level/ServerLevel;Ljava/lang/String;)Lnet/minecraft/server/commands/CloneCommands$DimensionAndPosition; a
	register (Lcom/mojang/brigadier/CommandDispatcher;Lnet/minecraft/commands/CommandBuildContext;)V a
	wrapWithCloneMode (Lnet/minecraft/server/commands/CloneCommands$CommandFunction;Lnet/minecraft/server/commands/CloneCommands$CommandFunction;Lnet/minecraft/server/commands/CloneCommands$CommandFunction;Lnet/minecraft/server/commands/CloneCommands$CommandFunction;Lcom/mojang/brigadier/builder/ArgumentBuilder;)Lcom/mojang/brigadier/builder/ArgumentBuilder; a
net/minecraft/server/commands/CloneCommands$CloneBlockInfo aeb$a
	pos a
	state b
	tag c
net/minecraft/server/commands/CloneCommands$CommandFunction aeb$b
net/minecraft/server/commands/CloneCommands$DimensionAndPosition aeb$c
	dimension a
	position b
	dimension ()Lnet/minecraft/server/level/ServerLevel; a
	position ()Lnet/minecraft/core/BlockPos; b
net/minecraft/server/commands/CloneCommands$Mode aeb$d
	$VALUES e
	FORCE a
	MOVE b
	NORMAL c
	canOverlap d
	$values ()[Lnet/minecraft/server/commands/CloneCommands$Mode; b
	canOverlap ()Z a
net/minecraft/server/commands/DamageCommand aec
	ERROR_INVULNERABLE a
	damage (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/world/entity/Entity;FLnet/minecraft/world/damagesource/DamageSource;)I a
	register (Lcom/mojang/brigadier/CommandDispatcher;Lnet/minecraft/commands/CommandBuildContext;)V a
net/minecraft/server/commands/DataPackCommand aed
	ERROR_PACK_ALREADY_DISABLED c
	ERROR_PACK_ALREADY_ENABLED b
	ERROR_PACK_FEATURES_NOT_ENABLED d
	ERROR_UNKNOWN_PACK a
	SELECTED_PACKS e
	UNSELECTED_PACKS f
	disablePack (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/server/packs/repository/Pack;)I a
	enablePack (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/server/packs/repository/Pack;Lnet/minecraft/server/commands/DataPackCommand$Inserter;)I a
	getPack (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;Z)Lnet/minecraft/server/packs/repository/Pack; a
	listAvailablePacks (Lnet/minecraft/commands/CommandSourceStack;)I b
	listEnabledPacks (Lnet/minecraft/commands/CommandSourceStack;)I c
	listPacks (Lnet/minecraft/commands/CommandSourceStack;)I a
	register (Lcom/mojang/brigadier/CommandDispatcher;)V a
net/minecraft/server/commands/DataPackCommand$Inserter aed$a
net/minecraft/server/commands/DeOpCommands aee
	ERROR_NOT_OP a
	deopPlayers (Lnet/minecraft/commands/CommandSourceStack;Ljava/util/Collection;)I a
	register (Lcom/mojang/brigadier/CommandDispatcher;)V a
net/minecraft/server/commands/DebugCommand aef
	ERROR_ALREADY_RUNNING c
	ERROR_NOT_RUNNING b
	LOGGER a
	register (Lcom/mojang/brigadier/CommandDispatcher;)V a
	start (Lnet/minecraft/commands/CommandSourceStack;)I a
	stop (Lnet/minecraft/commands/CommandSourceStack;)I b
	traceFunction (Lnet/minecraft/commands/CommandSourceStack;Ljava/util/Collection;)I a
net/minecraft/server/commands/DebugCommand$Tracer aef$a
	INDENT_OFFSET b
	lastIndent d
	output c
	waitingForResult e
	acceptsFailure ()Z q_
	acceptsSuccess ()Z e_
	alwaysAccepts ()Z f_
	indentAndSave (I)V a
	newLine ()V e
	onCall (ILnet/minecraft/resources/ResourceLocation;I)V a
	onCommand (ILjava/lang/String;)V a
	onError (ILjava/lang/String;)V b
	onReturn (ILjava/lang/String;I)V a
	printIndent (I)V b
	sendSystemMessage (Lnet/minecraft/network/chat/Component;)V a
	shouldInformAdmins ()Z N_
net/minecraft/server/commands/DebugMobSpawningCommand aeg
	register (Lcom/mojang/brigadier/CommandDispatcher;)V a
	spawnMobs (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/world/entity/MobCategory;Lnet/minecraft/core/BlockPos;)I a
net/minecraft/server/commands/DebugPathCommand aeh
	ERROR_NOT_COMPLETE c
	ERROR_NOT_MOB a
	ERROR_NO_PATH b
	fillBlocks (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/core/BlockPos;)I a
	register (Lcom/mojang/brigadier/CommandDispatcher;)V a
net/minecraft/server/commands/DefaultGameModeCommands aei
	register (Lcom/mojang/brigadier/CommandDispatcher;)V a
	setMode (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/world/level/GameType;)I a
net/minecraft/server/commands/DifficultyCommand aej
	ERROR_ALREADY_DIFFICULT a
	register (Lcom/mojang/brigadier/CommandDispatcher;)V a
	setDifficulty (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/world/Difficulty;)I a
net/minecraft/server/commands/EffectCommands aek
	ERROR_CLEAR_EVERYTHING_FAILED b
	ERROR_CLEAR_SPECIFIC_FAILED c
	ERROR_GIVE_FAILED a
	clearEffect (Lnet/minecraft/commands/CommandSourceStack;Ljava/util/Collection;Lnet/minecraft/core/Holder;)I a
	clearEffects (Lnet/minecraft/commands/CommandSourceStack;Ljava/util/Collection;)I a
	giveEffect (Lnet/minecraft/commands/CommandSourceStack;Ljava/util/Collection;Lnet/minecraft/core/Holder;Ljava/lang/Integer;IZ)I a
	register (Lcom/mojang/brigadier/CommandDispatcher;Lnet/minecraft/commands/CommandBuildContext;)V a
net/minecraft/server/commands/EmoteCommands ael
	register (Lcom/mojang/brigadier/CommandDispatcher;)V a
net/minecraft/server/commands/EnchantCommand aem
	ERROR_INCOMPATIBLE c
	ERROR_LEVEL_TOO_HIGH d
	ERROR_NOTHING_HAPPENED e
	ERROR_NOT_LIVING_ENTITY a
	ERROR_NO_ITEM b
	enchant (Lnet/minecraft/commands/CommandSourceStack;Ljava/util/Collection;Lnet/minecraft/core/Holder;I)I a
	register (Lcom/mojang/brigadier/CommandDispatcher;Lnet/minecraft/commands/CommandBuildContext;)V a
net/minecraft/server/commands/ExecuteCommand aen
	CALLBACK_CHAINER e
	ERROR_AREA_TOO_LARGE b
	ERROR_CONDITIONAL_FAILED c
	ERROR_CONDITIONAL_FAILED_COUNT d
	MAX_TEST_AREA a
	SUGGEST_PREDICATE f
	addConditional (Lcom/mojang/brigadier/tree/CommandNode;Lcom/mojang/brigadier/builder/ArgumentBuilder;ZLnet/minecraft/server/commands/ExecuteCommand$CommandPredicate;)Lcom/mojang/brigadier/builder/ArgumentBuilder; a
	addConditionals (Lcom/mojang/brigadier/tree/CommandNode;Lcom/mojang/brigadier/builder/LiteralArgumentBuilder;ZLnet/minecraft/commands/CommandBuildContext;)Lcom/mojang/brigadier/builder/ArgumentBuilder; a
	addIfBlocksConditional (Lcom/mojang/brigadier/tree/CommandNode;Lcom/mojang/brigadier/builder/ArgumentBuilder;ZZ)Lcom/mojang/brigadier/builder/ArgumentBuilder; a
	checkCustomPredicate (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition;)Z a
	checkIfRegions (Lcom/mojang/brigadier/context/CommandContext;Z)I a
	checkMatchingData (Lnet/minecraft/server/commands/data/DataAccessor;Lnet/minecraft/commands/arguments/NbtPathArgument$NbtPath;)I a
	checkRegions (Lcom/mojang/brigadier/context/CommandContext;Z)Ljava/util/OptionalInt; c
	checkRegions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;Z)Ljava/util/OptionalInt; a
	checkScore (Lcom/mojang/brigadier/context/CommandContext;Ljava/util/function/BiPredicate;)Z a
	checkScore (Lcom/mojang/brigadier/context/CommandContext;Lnet/minecraft/advancements/critereon/MinMaxBounds$Ints;)Z a
	checkUnlessRegions (Lcom/mojang/brigadier/context/CommandContext;Z)I b
	createNumericConditionalHandler (ZLnet/minecraft/server/commands/ExecuteCommand$CommandNumericPredicate;)Lcom/mojang/brigadier/Command; a
	createRelationOperations (Lcom/mojang/brigadier/tree/CommandNode;Lcom/mojang/brigadier/builder/LiteralArgumentBuilder;)Lcom/mojang/brigadier/builder/LiteralArgumentBuilder; a
	expandOneToManyEntityRelation (Ljava/util/function/Function;)Lcom/mojang/brigadier/RedirectModifier; b
	expandOneToOneEntityRelation (Ljava/util/function/Function;)Lcom/mojang/brigadier/RedirectModifier; a
	expect (Lcom/mojang/brigadier/context/CommandContext;ZZ)Ljava/util/Collection; a
	isChunkLoaded (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;)Z a
	register (Lcom/mojang/brigadier/CommandDispatcher;Lnet/minecraft/commands/CommandBuildContext;)V a
	spawnEntityAndRedirect (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/core/Holder$Reference;)Lnet/minecraft/commands/CommandSourceStack; a
	storeData (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/server/commands/data/DataAccessor;Lnet/minecraft/commands/arguments/NbtPathArgument$NbtPath;Ljava/util/function/IntFunction;Z)Lnet/minecraft/commands/CommandSourceStack; a
	storeValue (Lnet/minecraft/commands/CommandSourceStack;Ljava/util/Collection;Lnet/minecraft/world/scores/Objective;Z)Lnet/minecraft/commands/CommandSourceStack; a
	storeValue (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/server/bossevents/CustomBossEvent;ZZ)Lnet/minecraft/commands/CommandSourceStack; a
	wrapStores (Lcom/mojang/brigadier/tree/LiteralCommandNode;Lcom/mojang/brigadier/builder/LiteralArgumentBuilder;Z)Lcom/mojang/brigadier/builder/ArgumentBuilder; a
net/minecraft/server/commands/ExecuteCommand$CommandNumericPredicate aen$a
net/minecraft/server/commands/ExecuteCommand$CommandPredicate aen$b
net/minecraft/server/commands/ExperienceCommand aeo
	ERROR_SET_POINTS_INVALID a
	addExperience (Lnet/minecraft/commands/CommandSourceStack;Ljava/util/Collection;ILnet/minecraft/server/commands/ExperienceCommand$Type;)I a
	queryExperience (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/server/level/ServerPlayer;Lnet/minecraft/server/commands/ExperienceCommand$Type;)I a
	register (Lcom/mojang/brigadier/CommandDispatcher;)V a
	setExperience (Lnet/minecraft/commands/CommandSourceStack;Ljava/util/Collection;ILnet/minecraft/server/commands/ExperienceCommand$Type;)I b
net/minecraft/server/commands/ExperienceCommand$Type aeo$a
	$VALUES g
	LEVELS b
	POINTS a
	add c
	name e
	query f
	set d
	$values ()[Lnet/minecraft/server/commands/ExperienceCommand$Type; a
net/minecraft/server/commands/FillBiomeCommand aep
	ERROR_NOT_LOADED a
	ERROR_VOLUME_TOO_LARGE b
	fill (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Holder$Reference;Ljava/util/function/Predicate;)I a
	makeResolver (Lorg/apache/commons/lang3/mutable/MutableInt;Lnet/minecraft/world/level/chunk/ChunkAccess;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Lnet/minecraft/core/Holder;Ljava/util/function/Predicate;)Lnet/minecraft/world/level/biome/BiomeResolver; a
	quantize (I)I a
	quantize (Lnet/minecraft/core/BlockPos;)Lnet/minecraft/core/BlockPos; a
	register (Lcom/mojang/brigadier/CommandDispatcher;Lnet/minecraft/commands/CommandBuildContext;)V a
net/minecraft/server/commands/FillCommand aeq
	ERROR_AREA_TOO_LARGE a
	ERROR_FAILED c
	HOLLOW_CORE b
	fillBlocks (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Lnet/minecraft/commands/arguments/blocks/BlockInput;Lnet/minecraft/server/commands/FillCommand$Mode;Ljava/util/function/Predicate;)I a
	register (Lcom/mojang/brigadier/CommandDispatcher;Lnet/minecraft/commands/CommandBuildContext;)V a
net/minecraft/server/commands/FillCommand$Mode aeq$a
	$VALUES f
	DESTROY d
	HOLLOW c
	OUTLINE b
	REPLACE a
	filter e
	$values ()[Lnet/minecraft/server/commands/FillCommand$Mode; a
net/minecraft/server/commands/ForceLoadCommand aer
	ERROR_ALL_ADDED d
	ERROR_NONE_REMOVED e
	ERROR_NOT_TICKING c
	ERROR_TOO_MANY_CHUNKS b
	MAX_CHUNK_LIMIT a
	changeForceLoad (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/server/level/ColumnPos;Lnet/minecraft/server/level/ColumnPos;Z)I a
	listForceLoad (Lnet/minecraft/commands/CommandSourceStack;)I a
	queryForceLoad (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/server/level/ColumnPos;)I a
	register (Lcom/mojang/brigadier/CommandDispatcher;)V a
	removeAll (Lnet/minecraft/commands/CommandSourceStack;)I b
net/minecraft/server/commands/FunctionCommand aes
	SUGGEST_FUNCTION a
	register (Lcom/mojang/brigadier/CommandDispatcher;)V a
	runFunction (Lnet/minecraft/commands/CommandSourceStack;Ljava/util/Collection;)I a
net/minecraft/server/commands/GameModeCommand aet
	PERMISSION_LEVEL a
	logGamemodeChange (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/server/level/ServerPlayer;Lnet/minecraft/world/level/GameType;)V a
	register (Lcom/mojang/brigadier/CommandDispatcher;)V a
	setMode (Lcom/mojang/brigadier/context/CommandContext;Ljava/util/Collection;Lnet/minecraft/world/level/GameType;)I a
net/minecraft/server/commands/GameRuleCommand aeu
	queryRule (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/world/level/GameRules$Key;)I a
	register (Lcom/mojang/brigadier/CommandDispatcher;)V a
	setRule (Lcom/mojang/brigadier/context/CommandContext;Lnet/minecraft/world/level/GameRules$Key;)I a
net/minecraft/server/commands/GiveCommand aev
	MAX_ALLOWED_ITEMSTACKS a
	giveItem (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/commands/arguments/item/ItemInput;Ljava/util/Collection;I)I a
	register (Lcom/mojang/brigadier/CommandDispatcher;Lnet/minecraft/commands/CommandBuildContext;)V a
net/minecraft/server/commands/HelpCommand aew
	ERROR_FAILED a
	register (Lcom/mojang/brigadier/CommandDispatcher;)V a
net/minecraft/server/commands/ItemCommands aex
	ERROR_SOURCE_INAPPLICABLE_SLOT d
	ERROR_SOURCE_NOT_A_CONTAINER c
	ERROR_TARGET_INAPPLICABLE_SLOT b
	ERROR_TARGET_NOT_A_CONTAINER a
	ERROR_TARGET_NO_CHANGES e
	ERROR_TARGET_NO_CHANGES_KNOWN_ITEM f
	SUGGEST_MODIFIER g
	applyModifier (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/world/level/storage/loot/functions/LootItemFunction;Lnet/minecraft/world/item/ItemStack;)Lnet/minecraft/world/item/ItemStack; a
	blockToBlock (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/core/BlockPos;ILnet/minecraft/core/BlockPos;I)I a
	blockToBlock (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/core/BlockPos;ILnet/minecraft/core/BlockPos;ILnet/minecraft/world/level/storage/loot/functions/LootItemFunction;)I a
	blockToEntities (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/core/BlockPos;ILjava/util/Collection;I)I a
	blockToEntities (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/core/BlockPos;ILjava/util/Collection;ILnet/minecraft/world/level/storage/loot/functions/LootItemFunction;)I a
	entityToBlock (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/world/entity/Entity;ILnet/minecraft/core/BlockPos;I)I a
	entityToBlock (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/world/entity/Entity;ILnet/minecraft/core/BlockPos;ILnet/minecraft/world/level/storage/loot/functions/LootItemFunction;)I a
	entityToEntities (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/world/entity/Entity;ILjava/util/Collection;I)I a
	entityToEntities (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/world/entity/Entity;ILjava/util/Collection;ILnet/minecraft/world/level/storage/loot/functions/LootItemFunction;)I a
	getBlockItem (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/core/BlockPos;I)Lnet/minecraft/world/item/ItemStack; a
	getContainer (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/core/BlockPos;Lcom/mojang/brigadier/exceptions/Dynamic3CommandExceptionType;)Lnet/minecraft/world/Container; a
	getEntityItem (Lnet/minecraft/world/entity/Entity;I)Lnet/minecraft/world/item/ItemStack; a
	modifyBlockItem (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/core/BlockPos;ILnet/minecraft/world/level/storage/loot/functions/LootItemFunction;)I a
	modifyEntityItem (Lnet/minecraft/commands/CommandSourceStack;Ljava/util/Collection;ILnet/minecraft/world/level/storage/loot/functions/LootItemFunction;)I a
	register (Lcom/mojang/brigadier/CommandDispatcher;Lnet/minecraft/commands/CommandBuildContext;)V a
	setBlockItem (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/core/BlockPos;ILnet/minecraft/world/item/ItemStack;)I a
	setEntityItem (Lnet/minecraft/commands/CommandSourceStack;Ljava/util/Collection;ILnet/minecraft/world/item/ItemStack;)I a
net/minecraft/server/commands/JfrCommand aey
	DUMP_FAILED b
	START_FAILED a
	register (Lcom/mojang/brigadier/CommandDispatcher;)V a
	startJfr (Lnet/minecraft/commands/CommandSourceStack;)I a
	stopJfr (Lnet/minecraft/commands/CommandSourceStack;)I b
net/minecraft/server/commands/KickCommand aez
	kickPlayers (Lnet/minecraft/commands/CommandSourceStack;Ljava/util/Collection;Lnet/minecraft/network/chat/Component;)I a
	register (Lcom/mojang/brigadier/CommandDispatcher;)V a
net/minecraft/server/commands/KillCommand afa
	kill (Lnet/minecraft/commands/CommandSourceStack;Ljava/util/Collection;)I a
	register (Lcom/mojang/brigadier/CommandDispatcher;)V a
net/minecraft/server/commands/ListPlayersCommand afb
	format (Lnet/minecraft/commands/CommandSourceStack;Ljava/util/function/Function;)I a
	listPlayers (Lnet/minecraft/commands/CommandSourceStack;)I a
	listPlayersWithUuids (Lnet/minecraft/commands/CommandSourceStack;)I b
	register (Lcom/mojang/brigadier/CommandDispatcher;)V a
net/minecraft/server/commands/LocateCommand afc
	BIOME_SAMPLE_RESOLUTION_HORIZONTAL h
	BIOME_SAMPLE_RESOLUTION_VERTICAL i
	ERROR_BIOME_NOT_FOUND d
	ERROR_POI_NOT_FOUND e
	ERROR_STRUCTURE_INVALID c
	ERROR_STRUCTURE_NOT_FOUND b
	LOGGER a
	MAX_BIOME_SEARCH_RADIUS g
	MAX_STRUCTURE_SEARCH_RADIUS f
	POI_SEARCH_RADIUS j
	dist (IIII)F a
	getElementName (Lcom/mojang/datafixers/util/Pair;)Ljava/lang/String; a
	getHolders (Lnet/minecraft/commands/arguments/ResourceOrTagKeyArgument$Result;Lnet/minecraft/core/Registry;)Ljava/util/Optional; a
	locateBiome (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/commands/arguments/ResourceOrTagArgument$Result;)I a
	locatePoi (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/commands/arguments/ResourceOrTagArgument$Result;)I b
	locateStructure (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/commands/arguments/ResourceOrTagKeyArgument$Result;)I a
	register (Lcom/mojang/brigadier/CommandDispatcher;Lnet/minecraft/commands/CommandBuildContext;)V a
	showLocateResult (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/commands/arguments/ResourceOrTagArgument$Result;Lnet/minecraft/core/BlockPos;Lcom/mojang/datafixers/util/Pair;Ljava/lang/String;ZLjava/time/Duration;)I a
	showLocateResult (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/commands/arguments/ResourceOrTagKeyArgument$Result;Lnet/minecraft/core/BlockPos;Lcom/mojang/datafixers/util/Pair;Ljava/lang/String;ZLjava/time/Duration;)I a
	showLocateResult (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/core/BlockPos;Lcom/mojang/datafixers/util/Pair;Ljava/lang/String;ZLjava/lang/String;Ljava/time/Duration;)I a
net/minecraft/server/commands/LootCommand afd
	ERROR_NO_HELD_ITEMS b
	ERROR_NO_LOOT_TABLE c
	SUGGEST_LOOT_TABLE a
	addTargets (Lcom/mojang/brigadier/builder/ArgumentBuilder;Lnet/minecraft/server/commands/LootCommand$TailProvider;)Lcom/mojang/brigadier/builder/ArgumentBuilder; a
	blockDistribute (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/core/BlockPos;Ljava/util/List;Lnet/minecraft/server/commands/LootCommand$Callback;)I a
	blockReplace (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/core/BlockPos;IILjava/util/List;Lnet/minecraft/server/commands/LootCommand$Callback;)I a
	callback (Lnet/minecraft/commands/CommandSourceStack;Ljava/util/List;)V a
	callback (Lnet/minecraft/commands/CommandSourceStack;Ljava/util/List;Lnet/minecraft/resources/ResourceLocation;)V a
	canMergeItems (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/item/ItemStack;)Z a
	distributeToContainer (Lnet/minecraft/world/Container;Lnet/minecraft/world/item/ItemStack;)Z a
	drop (Lcom/mojang/brigadier/context/CommandContext;Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/world/level/storage/loot/LootParams;Lnet/minecraft/server/commands/LootCommand$DropConsumer;)I a
	dropBlockLoot (Lcom/mojang/brigadier/context/CommandContext;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/server/commands/LootCommand$DropConsumer;)I a
	dropChestLoot (Lcom/mojang/brigadier/context/CommandContext;Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/server/commands/LootCommand$DropConsumer;)I a
	dropFishingLoot (Lcom/mojang/brigadier/context/CommandContext;Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/server/commands/LootCommand$DropConsumer;)I a
	dropInWorld (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/world/phys/Vec3;Ljava/util/List;Lnet/minecraft/server/commands/LootCommand$Callback;)I a
	dropKillLoot (Lcom/mojang/brigadier/context/CommandContext;Lnet/minecraft/world/entity/Entity;Lnet/minecraft/server/commands/LootCommand$DropConsumer;)I a
	entityReplace (Ljava/util/Collection;IILjava/util/List;Lnet/minecraft/server/commands/LootCommand$Callback;)I a
	getContainer (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/Container; a
	getSourceHandItem (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/world/entity/EquipmentSlot;)Lnet/minecraft/world/item/ItemStack; a
	playerGive (Ljava/util/Collection;Ljava/util/List;Lnet/minecraft/server/commands/LootCommand$Callback;)I a
	register (Lcom/mojang/brigadier/CommandDispatcher;Lnet/minecraft/commands/CommandBuildContext;)V a
	setSlots (Lnet/minecraft/world/entity/Entity;Ljava/util/List;IILjava/util/List;)V a
net/minecraft/server/commands/LootCommand$Callback afd$a
net/minecraft/server/commands/LootCommand$DropConsumer afd$b
net/minecraft/server/commands/LootCommand$TailProvider afd$c
net/minecraft/server/commands/MsgCommand afe
	register (Lcom/mojang/brigadier/CommandDispatcher;)V a
	sendMessage (Lnet/minecraft/commands/CommandSourceStack;Ljava/util/Collection;Lnet/minecraft/network/chat/PlayerChatMessage;)V a
net/minecraft/server/commands/OpCommand aff
	ERROR_ALREADY_OP a
	opPlayers (Lnet/minecraft/commands/CommandSourceStack;Ljava/util/Collection;)I a
	register (Lcom/mojang/brigadier/CommandDispatcher;)V a
net/minecraft/server/commands/PardonCommand afg
	ERROR_NOT_BANNED a
	pardonPlayers (Lnet/minecraft/commands/CommandSourceStack;Ljava/util/Collection;)I a
	register (Lcom/mojang/brigadier/CommandDispatcher;)V a
net/minecraft/server/commands/PardonIpCommand afh
	ERROR_INVALID a
	ERROR_NOT_BANNED b
	register (Lcom/mojang/brigadier/CommandDispatcher;)V a
	unban (Lnet/minecraft/commands/CommandSourceStack;Ljava/lang/String;)I a
net/minecraft/server/commands/ParticleCommand afi
	ERROR_FAILED a
	register (Lcom/mojang/brigadier/CommandDispatcher;Lnet/minecraft/commands/CommandBuildContext;)V a
	sendParticles (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/core/particles/ParticleOptions;Lnet/minecraft/world/phys/Vec3;Lnet/minecraft/world/phys/Vec3;FIZLjava/util/Collection;)I a
net/minecraft/server/commands/PerfCommand afj
	ERROR_ALREADY_RUNNING c
	ERROR_NOT_RUNNING b
	LOGGER a
	register (Lcom/mojang/brigadier/CommandDispatcher;)V a
	saveResults (Lnet/minecraft/commands/CommandSourceStack;Ljava/nio/file/Path;Lnet/minecraft/server/MinecraftServer;)V a
	startProfilingDedicatedServer (Lnet/minecraft/commands/CommandSourceStack;)I a
	stopProfilingDedicatedServer (Lnet/minecraft/commands/CommandSourceStack;)I b
	whenStopped (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/util/profiling/ProfileResults;)V a
net/minecraft/server/commands/PlaceCommand afk
	ERROR_FEATURE_FAILED a
	ERROR_JIGSAW_FAILED b
	ERROR_STRUCTURE_FAILED c
	ERROR_TEMPLATE_FAILED e
	ERROR_TEMPLATE_INVALID d
	SUGGEST_TEMPLATES f
	checkLoaded (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/world/level/ChunkPos;)V a
	placeFeature (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/core/Holder$Reference;Lnet/minecraft/core/BlockPos;)I a
	placeJigsaw (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/core/Holder;Lnet/minecraft/resources/ResourceLocation;ILnet/minecraft/core/BlockPos;)I a
	placeStructure (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/core/Holder$Reference;Lnet/minecraft/core/BlockPos;)I b
	placeTemplate (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Rotation;Lnet/minecraft/world/level/block/Mirror;FI)I a
	register (Lcom/mojang/brigadier/CommandDispatcher;)V a
net/minecraft/server/commands/PlaySoundCommand afl
	ERROR_TOO_FAR a
	playSound (Lnet/minecraft/commands/CommandSourceStack;Ljava/util/Collection;Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/sounds/SoundSource;Lnet/minecraft/world/phys/Vec3;FFF)I a
	register (Lcom/mojang/brigadier/CommandDispatcher;)V a
	source (Lnet/minecraft/sounds/SoundSource;)Lcom/mojang/brigadier/builder/LiteralArgumentBuilder; a
net/minecraft/server/commands/PublishCommand afm
	ERROR_ALREADY_PUBLISHED b
	ERROR_FAILED a
	getSuccessMessage (I)Lnet/minecraft/network/chat/MutableComponent; a
	publish (Lnet/minecraft/commands/CommandSourceStack;IZLnet/minecraft/world/level/GameType;)I a
	register (Lcom/mojang/brigadier/CommandDispatcher;)V a
net/minecraft/server/commands/RaidCommand afn
	check (Lnet/minecraft/commands/CommandSourceStack;)I d
	getRaid (Lnet/minecraft/server/level/ServerPlayer;)Lnet/minecraft/world/entity/raid/Raid; a
	glow (Lnet/minecraft/commands/CommandSourceStack;)I a
	playSound (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/network/chat/Component;)I a
	register (Lcom/mojang/brigadier/CommandDispatcher;)V a
	setBadOmenLevel (Lnet/minecraft/commands/CommandSourceStack;I)I a
	spawnLeader (Lnet/minecraft/commands/CommandSourceStack;)I b
	start (Lnet/minecraft/commands/CommandSourceStack;I)I b
	stop (Lnet/minecraft/commands/CommandSourceStack;)I c
net/minecraft/server/commands/RecipeCommand afo
	ERROR_GIVE_FAILED a
	ERROR_TAKE_FAILED b
	giveRecipes (Lnet/minecraft/commands/CommandSourceStack;Ljava/util/Collection;Ljava/util/Collection;)I a
	register (Lcom/mojang/brigadier/CommandDispatcher;)V a
	takeRecipes (Lnet/minecraft/commands/CommandSourceStack;Ljava/util/Collection;Ljava/util/Collection;)I b
net/minecraft/server/commands/ReloadCommand afp
	LOGGER a
	discoverNewPacks (Lnet/minecraft/server/packs/repository/PackRepository;Lnet/minecraft/world/level/storage/WorldData;Ljava/util/Collection;)Ljava/util/Collection; a
	register (Lcom/mojang/brigadier/CommandDispatcher;)V a
	reloadPacks (Ljava/util/Collection;Lnet/minecraft/commands/CommandSourceStack;)V a
net/minecraft/server/commands/ResetChunksCommand afq
	LOGGER a
	register (Lcom/mojang/brigadier/CommandDispatcher;)V a
	resetChunks (Lnet/minecraft/commands/CommandSourceStack;IZ)I a
net/minecraft/server/commands/ReturnCommand afr
	register (Lcom/mojang/brigadier/CommandDispatcher;)V a
	setReturn (Lnet/minecraft/commands/CommandSourceStack;I)I a
net/minecraft/server/commands/RideCommand afs
	ERROR_ALREADY_RIDING b
	ERROR_MOUNTING_LOOP e
	ERROR_MOUNTING_PLAYER d
	ERROR_MOUNT_FAILED c
	ERROR_NOT_RIDING a
	ERROR_WRONG_DIMENSION f
	dismount (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/world/entity/Entity;)I a
	mount (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/entity/Entity;)I a
	register (Lcom/mojang/brigadier/CommandDispatcher;)V a
net/minecraft/server/commands/SaveAllCommand aft
	ERROR_FAILED a
	register (Lcom/mojang/brigadier/CommandDispatcher;)V a
	saveAll (Lnet/minecraft/commands/CommandSourceStack;Z)I a
net/minecraft/server/commands/SaveOffCommand afu
	ERROR_ALREADY_OFF a
	register (Lcom/mojang/brigadier/CommandDispatcher;)V a
net/minecraft/server/commands/SaveOnCommand afv
	ERROR_ALREADY_ON a
	register (Lcom/mojang/brigadier/CommandDispatcher;)V a
net/minecraft/server/commands/SayCommand afw
	register (Lcom/mojang/brigadier/CommandDispatcher;)V a
net/minecraft/server/commands/ScheduleCommand afx
	ERROR_CANT_REMOVE b
	ERROR_SAME_TICK a
	SUGGEST_SCHEDULE c
	register (Lcom/mojang/brigadier/CommandDispatcher;)V a
	remove (Lnet/minecraft/commands/CommandSourceStack;Ljava/lang/String;)I a
	schedule (Lnet/minecraft/commands/CommandSourceStack;Lcom/mojang/datafixers/util/Pair;IZ)I a
net/minecraft/server/commands/ScoreboardCommand afy
	ERROR_DISPLAY_SLOT_ALREADY_EMPTY b
	ERROR_DISPLAY_SLOT_ALREADY_SET c
	ERROR_NOT_TRIGGER e
	ERROR_NO_VALUE f
	ERROR_OBJECTIVE_ALREADY_EXISTS a
	ERROR_TRIGGER_ALREADY_ENABLED d
	addObjective (Lnet/minecraft/commands/CommandSourceStack;Ljava/lang/String;Lnet/minecraft/world/scores/criteria/ObjectiveCriteria;Lnet/minecraft/network/chat/Component;)I a
	addScore (Lnet/minecraft/commands/CommandSourceStack;Ljava/util/Collection;Lnet/minecraft/world/scores/Objective;I)I b
	clearDisplaySlot (Lnet/minecraft/commands/CommandSourceStack;I)I a
	createRenderTypeModify ()Lcom/mojang/brigadier/builder/LiteralArgumentBuilder; a
	enableTrigger (Lnet/minecraft/commands/CommandSourceStack;Ljava/util/Collection;Lnet/minecraft/world/scores/Objective;)I a
	getScore (Lnet/minecraft/commands/CommandSourceStack;Ljava/lang/String;Lnet/minecraft/world/scores/Objective;)I a
	listObjectives (Lnet/minecraft/commands/CommandSourceStack;)I b
	listTrackedPlayerScores (Lnet/minecraft/commands/CommandSourceStack;Ljava/lang/String;)I a
	listTrackedPlayers (Lnet/minecraft/commands/CommandSourceStack;)I a
	performOperation (Lnet/minecraft/commands/CommandSourceStack;Ljava/util/Collection;Lnet/minecraft/world/scores/Objective;Lnet/minecraft/commands/arguments/OperationArgument$Operation;Ljava/util/Collection;Lnet/minecraft/world/scores/Objective;)I a
	register (Lcom/mojang/brigadier/CommandDispatcher;)V a
	removeObjective (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/world/scores/Objective;)I a
	removeScore (Lnet/minecraft/commands/CommandSourceStack;Ljava/util/Collection;Lnet/minecraft/world/scores/Objective;I)I c
	resetScore (Lnet/minecraft/commands/CommandSourceStack;Ljava/util/Collection;Lnet/minecraft/world/scores/Objective;)I b
	resetScores (Lnet/minecraft/commands/CommandSourceStack;Ljava/util/Collection;)I a
	setDisplayName (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/world/scores/Objective;Lnet/minecraft/network/chat/Component;)I a
	setDisplaySlot (Lnet/minecraft/commands/CommandSourceStack;ILnet/minecraft/world/scores/Objective;)I a
	setRenderType (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/world/scores/Objective;Lnet/minecraft/world/scores/criteria/ObjectiveCriteria$RenderType;)I a
	setScore (Lnet/minecraft/commands/CommandSourceStack;Ljava/util/Collection;Lnet/minecraft/world/scores/Objective;I)I a
	suggestTriggers (Lnet/minecraft/commands/CommandSourceStack;Ljava/util/Collection;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture; a
net/minecraft/server/commands/SeedCommand afz
	register (Lcom/mojang/brigadier/CommandDispatcher;Z)V a
net/minecraft/server/commands/SetBlockCommand aga
	ERROR_FAILED a
	register (Lcom/mojang/brigadier/CommandDispatcher;Lnet/minecraft/commands/CommandBuildContext;)V a
	setBlock (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/core/BlockPos;Lnet/minecraft/commands/arguments/blocks/BlockInput;Lnet/minecraft/server/commands/SetBlockCommand$Mode;Ljava/util/function/Predicate;)I a
net/minecraft/server/commands/SetBlockCommand$Filter aga$a
net/minecraft/server/commands/SetBlockCommand$Mode aga$b
	$VALUES c
	DESTROY b
	REPLACE a
	$values ()[Lnet/minecraft/server/commands/SetBlockCommand$Mode; a
net/minecraft/server/commands/SetPlayerIdleTimeoutCommand agb
	register (Lcom/mojang/brigadier/CommandDispatcher;)V a
	setIdleTimeout (Lnet/minecraft/commands/CommandSourceStack;I)I a
net/minecraft/server/commands/SetSpawnCommand agc
	register (Lcom/mojang/brigadier/CommandDispatcher;)V a
	setSpawn (Lnet/minecraft/commands/CommandSourceStack;Ljava/util/Collection;Lnet/minecraft/core/BlockPos;F)I a
net/minecraft/server/commands/SetWorldSpawnCommand agd
	register (Lcom/mojang/brigadier/CommandDispatcher;)V a
	setSpawn (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/core/BlockPos;F)I a
net/minecraft/server/commands/SpawnArmorTrimsCommand age
	MATERIAL_AND_SLOT_TO_ITEM a
	TRIM_MATERIAL_ORDER e
	TRIM_PATTERN_ORDER d
	VANILLA_TRIM_MATERIALS c
	VANILLA_TRIM_PATTERNS b
	register (Lcom/mojang/brigadier/CommandDispatcher;)V a
	spawnArmorTrims (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/world/entity/player/Player;)I a
net/minecraft/server/commands/SpectateCommand agf
	ERROR_NOT_SPECTATOR b
	ERROR_SELF a
	register (Lcom/mojang/brigadier/CommandDispatcher;)V a
	spectate (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/world/entity/Entity;Lnet/minecraft/server/level/ServerPlayer;)I a
net/minecraft/server/commands/SpreadPlayersCommand agg
	ERROR_FAILED_TO_SPREAD_ENTITIES c
	ERROR_FAILED_TO_SPREAD_TEAMS b
	ERROR_INVALID_MAX_HEIGHT d
	MAX_ITERATION_COUNT a
	createInitialPositions (Lnet/minecraft/util/RandomSource;IDDDD)[Lnet/minecraft/server/commands/SpreadPlayersCommand$Position; a
	getNumberOfTeams (Ljava/util/Collection;)I a
	register (Lcom/mojang/brigadier/CommandDispatcher;)V a
	setPlayerPositions (Ljava/util/Collection;Lnet/minecraft/server/level/ServerLevel;[Lnet/minecraft/server/commands/SpreadPlayersCommand$Position;IZ)D a
	spreadPlayers (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/world/phys/Vec2;FFIZLjava/util/Collection;)I a
	spreadPositions (Lnet/minecraft/world/phys/Vec2;DLnet/minecraft/server/level/ServerLevel;Lnet/minecraft/util/RandomSource;DDDDI[Lnet/minecraft/server/commands/SpreadPlayersCommand$Position;Z)V a
net/minecraft/server/commands/SpreadPlayersCommand$Position agg$a
	x a
	z b
	clamp (DDDD)Z a
	dist (Lnet/minecraft/server/commands/SpreadPlayersCommand$Position;)D a
	getLength ()D b
	getSpawnY (Lnet/minecraft/world/level/BlockGetter;I)I a
	isSafe (Lnet/minecraft/world/level/BlockGetter;I)Z b
	moveAway (Lnet/minecraft/server/commands/SpreadPlayersCommand$Position;)V b
	normalize ()V a
	randomize (Lnet/minecraft/util/RandomSource;DDDD)V a
net/minecraft/server/commands/StopCommand agh
	register (Lcom/mojang/brigadier/CommandDispatcher;)V a
net/minecraft/server/commands/StopSoundCommand agi
	register (Lcom/mojang/brigadier/CommandDispatcher;)V a
	stopSound (Lnet/minecraft/commands/CommandSourceStack;Ljava/util/Collection;Lnet/minecraft/sounds/SoundSource;Lnet/minecraft/resources/ResourceLocation;)I a
net/minecraft/server/commands/SummonCommand agj
	ERROR_DUPLICATE_UUID b
	ERROR_FAILED a
	INVALID_POSITION c
	createEntity (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/core/Holder$Reference;Lnet/minecraft/world/phys/Vec3;Lnet/minecraft/nbt/CompoundTag;Z)Lnet/minecraft/world/entity/Entity; a
	register (Lcom/mojang/brigadier/CommandDispatcher;Lnet/minecraft/commands/CommandBuildContext;)V a
	spawnEntity (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/core/Holder$Reference;Lnet/minecraft/world/phys/Vec3;Lnet/minecraft/nbt/CompoundTag;Z)I b
net/minecraft/server/commands/TagCommand agk
	ERROR_ADD_FAILED a
	ERROR_REMOVE_FAILED b
	addTag (Lnet/minecraft/commands/CommandSourceStack;Ljava/util/Collection;Ljava/lang/String;)I a
	getTags (Ljava/util/Collection;)Ljava/util/Collection; a
	listTags (Lnet/minecraft/commands/CommandSourceStack;Ljava/util/Collection;)I a
	register (Lcom/mojang/brigadier/CommandDispatcher;)V a
	removeTag (Lnet/minecraft/commands/CommandSourceStack;Ljava/util/Collection;Ljava/lang/String;)I b
net/minecraft/server/commands/TeamCommand agl
	ERROR_TEAM_ALREADY_COLOR d
	ERROR_TEAM_ALREADY_EMPTY b
	ERROR_TEAM_ALREADY_EXISTS a
	ERROR_TEAM_ALREADY_FRIENDLYFIRE_DISABLED f
	ERROR_TEAM_ALREADY_FRIENDLYFIRE_ENABLED e
	ERROR_TEAM_ALREADY_FRIENDLYINVISIBLES_DISABLED h
	ERROR_TEAM_ALREADY_FRIENDLYINVISIBLES_ENABLED g
	ERROR_TEAM_ALREADY_NAME c
	ERROR_TEAM_COLLISION_UNCHANGED k
	ERROR_TEAM_DEATH_MESSAGE_VISIBLITY_UNCHANGED j
	ERROR_TEAM_NAMETAG_VISIBLITY_UNCHANGED i
	createTeam (Lnet/minecraft/commands/CommandSourceStack;Ljava/lang/String;)I a
	createTeam (Lnet/minecraft/commands/CommandSourceStack;Ljava/lang/String;Lnet/minecraft/network/chat/Component;)I a
	deleteTeam (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/world/scores/PlayerTeam;)I b
	emptyTeam (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/world/scores/PlayerTeam;)I a
	joinTeam (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/world/scores/PlayerTeam;Ljava/util/Collection;)I a
	leaveTeam (Lnet/minecraft/commands/CommandSourceStack;Ljava/util/Collection;)I a
	listMembers (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/world/scores/PlayerTeam;)I c
	listTeams (Lnet/minecraft/commands/CommandSourceStack;)I a
	register (Lcom/mojang/brigadier/CommandDispatcher;)V a
	setCollision (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/world/scores/PlayerTeam;Lnet/minecraft/world/scores/Team$CollisionRule;)I a
	setColor (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/world/scores/PlayerTeam;Lnet/minecraft/ChatFormatting;)I a
	setDeathMessageVisibility (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/world/scores/PlayerTeam;Lnet/minecraft/world/scores/Team$Visibility;)I b
	setDisplayName (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/world/scores/PlayerTeam;Lnet/minecraft/network/chat/Component;)I a
	setFriendlyFire (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/world/scores/PlayerTeam;Z)I b
	setFriendlySight (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/world/scores/PlayerTeam;Z)I a
	setNametagVisibility (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/world/scores/PlayerTeam;Lnet/minecraft/world/scores/Team$Visibility;)I a
	setPrefix (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/world/scores/PlayerTeam;Lnet/minecraft/network/chat/Component;)I b
	setSuffix (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/world/scores/PlayerTeam;Lnet/minecraft/network/chat/Component;)I c
net/minecraft/server/commands/TeamMsgCommand agm
	ERROR_NOT_ON_TEAM b
	SUGGEST_STYLE a
	register (Lcom/mojang/brigadier/CommandDispatcher;)V a
	sendMessage (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/scores/PlayerTeam;Ljava/util/List;Lnet/minecraft/network/chat/PlayerChatMessage;)V a
net/minecraft/server/commands/TeleportCommand agn
	INVALID_POSITION a
	formatDouble (D)Ljava/lang/String; a
	performTeleport (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/world/entity/Entity;Lnet/minecraft/server/level/ServerLevel;DDDLjava/util/Set;FFLnet/minecraft/server/commands/TeleportCommand$LookAt;)V a
	register (Lcom/mojang/brigadier/CommandDispatcher;)V a
	teleportToEntity (Lnet/minecraft/commands/CommandSourceStack;Ljava/util/Collection;Lnet/minecraft/world/entity/Entity;)I a
	teleportToPos (Lnet/minecraft/commands/CommandSourceStack;Ljava/util/Collection;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/commands/arguments/coordinates/Coordinates;Lnet/minecraft/commands/arguments/coordinates/Coordinates;Lnet/minecraft/server/commands/TeleportCommand$LookAt;)I a
net/minecraft/server/commands/TeleportCommand$LookAt agn$a
	anchor c
	entity b
	position a
	perform (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/world/entity/Entity;)V a
net/minecraft/server/commands/TellRawCommand ago
	register (Lcom/mojang/brigadier/CommandDispatcher;)V a
net/minecraft/server/commands/TimeCommand agp
	addTime (Lnet/minecraft/commands/CommandSourceStack;I)I b
	getDayTime (Lnet/minecraft/server/level/ServerLevel;)I a
	queryTime (Lnet/minecraft/commands/CommandSourceStack;I)I c
	register (Lcom/mojang/brigadier/CommandDispatcher;)V a
	setTime (Lnet/minecraft/commands/CommandSourceStack;I)I a
net/minecraft/server/commands/TitleCommand agq
	clearTitle (Lnet/minecraft/commands/CommandSourceStack;Ljava/util/Collection;)I a
	register (Lcom/mojang/brigadier/CommandDispatcher;)V a
	resetTitle (Lnet/minecraft/commands/CommandSourceStack;Ljava/util/Collection;)I b
	setTimes (Lnet/minecraft/commands/CommandSourceStack;Ljava/util/Collection;III)I a
	showTitle (Lnet/minecraft/commands/CommandSourceStack;Ljava/util/Collection;Lnet/minecraft/network/chat/Component;Ljava/lang/String;Ljava/util/function/Function;)I a
net/minecraft/server/commands/TriggerCommand agr
	ERROR_INVALID_OBJECTIVE b
	ERROR_NOT_PRIMED a
	addValue (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/world/scores/Score;I)I a
	getScore (Lnet/minecraft/server/level/ServerPlayer;Lnet/minecraft/world/scores/Objective;)Lnet/minecraft/world/scores/Score; a
	register (Lcom/mojang/brigadier/CommandDispatcher;)V a
	setValue (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/world/scores/Score;I)I b
	simpleTrigger (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/world/scores/Score;)I a
	suggestObjectives (Lnet/minecraft/commands/CommandSourceStack;Lcom/mojang/brigadier/suggestion/SuggestionsBuilder;)Ljava/util/concurrent/CompletableFuture; a
net/minecraft/server/commands/WardenSpawnTrackerCommand ags
	register (Lcom/mojang/brigadier/CommandDispatcher;)V a
	resetTracker (Lnet/minecraft/commands/CommandSourceStack;Ljava/util/Collection;)I a
	setWarningLevel (Lnet/minecraft/commands/CommandSourceStack;Ljava/util/Collection;I)I a
net/minecraft/server/commands/WeatherCommand agt
	DEFAULT_TIME a
	getDuration (Lnet/minecraft/commands/CommandSourceStack;ILnet/minecraft/util/valueproviders/IntProvider;)I a
	register (Lcom/mojang/brigadier/CommandDispatcher;)V a
	setClear (Lnet/minecraft/commands/CommandSourceStack;I)I a
	setRain (Lnet/minecraft/commands/CommandSourceStack;I)I b
	setThunder (Lnet/minecraft/commands/CommandSourceStack;I)I c
net/minecraft/server/commands/WhitelistCommand agu
	ERROR_ALREADY_DISABLED b
	ERROR_ALREADY_ENABLED a
	ERROR_ALREADY_WHITELISTED c
	ERROR_NOT_WHITELISTED d
	addPlayers (Lnet/minecraft/commands/CommandSourceStack;Ljava/util/Collection;)I a
	disableWhitelist (Lnet/minecraft/commands/CommandSourceStack;)I c
	enableWhitelist (Lnet/minecraft/commands/CommandSourceStack;)I b
	register (Lcom/mojang/brigadier/CommandDispatcher;)V a
	reload (Lnet/minecraft/commands/CommandSourceStack;)I a
	removePlayers (Lnet/minecraft/commands/CommandSourceStack;Ljava/util/Collection;)I b
	showList (Lnet/minecraft/commands/CommandSourceStack;)I d
net/minecraft/server/commands/WorldBorderCommand agv
	ERROR_SAME_CENTER a
	ERROR_SAME_DAMAGE_AMOUNT i
	ERROR_SAME_DAMAGE_BUFFER h
	ERROR_SAME_SIZE b
	ERROR_SAME_WARNING_DISTANCE g
	ERROR_SAME_WARNING_TIME f
	ERROR_TOO_BIG d
	ERROR_TOO_FAR_OUT e
	ERROR_TOO_SMALL c
	getSize (Lnet/minecraft/commands/CommandSourceStack;)I a
	register (Lcom/mojang/brigadier/CommandDispatcher;)V a
	setCenter (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/world/phys/Vec2;)I a
	setDamageAmount (Lnet/minecraft/commands/CommandSourceStack;F)I b
	setDamageBuffer (Lnet/minecraft/commands/CommandSourceStack;F)I a
	setSize (Lnet/minecraft/commands/CommandSourceStack;DJ)I a
	setWarningDistance (Lnet/minecraft/commands/CommandSourceStack;I)I b
	setWarningTime (Lnet/minecraft/commands/CommandSourceStack;I)I a
net/minecraft/server/commands/data/BlockDataAccessor agw
	ERROR_NOT_A_BLOCK_ENTITY b
	PROVIDER a
	entity c
	pos d
	getData ()Lnet/minecraft/nbt/CompoundTag; a
	getModifiedSuccess ()Lnet/minecraft/network/chat/Component; b
	getPrintSuccess (Lnet/minecraft/commands/arguments/NbtPathArgument$NbtPath;DI)Lnet/minecraft/network/chat/Component; a
	getPrintSuccess (Lnet/minecraft/nbt/Tag;)Lnet/minecraft/network/chat/Component; a
	setData (Lnet/minecraft/nbt/CompoundTag;)V a
net/minecraft/server/commands/data/DataAccessor agx
	getData ()Lnet/minecraft/nbt/CompoundTag; a
	getModifiedSuccess ()Lnet/minecraft/network/chat/Component; b
	getPrintSuccess (Lnet/minecraft/commands/arguments/NbtPathArgument$NbtPath;DI)Lnet/minecraft/network/chat/Component; a
	getPrintSuccess (Lnet/minecraft/nbt/Tag;)Lnet/minecraft/network/chat/Component; a
	setData (Lnet/minecraft/nbt/CompoundTag;)V a
net/minecraft/server/commands/data/DataCommands agy
	ALL_PROVIDERS a
	ERROR_EXPECTED_OBJECT h
	ERROR_EXPECTED_VALUE i
	ERROR_GET_NON_EXISTENT f
	ERROR_GET_NOT_NUMBER e
	ERROR_INVALID_SUBSTRING j
	ERROR_MERGE_UNCHANGED d
	ERROR_MULTIPLE_TAGS g
	SOURCE_PROVIDERS c
	TARGET_PROVIDERS b
	decorateModification (Ljava/util/function/BiConsumer;)Lcom/mojang/brigadier/builder/ArgumentBuilder; a
	getAsText (Lnet/minecraft/nbt/Tag;)Ljava/lang/String; a
	getData (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/server/commands/data/DataAccessor;)I a
	getData (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/server/commands/data/DataAccessor;Lnet/minecraft/commands/arguments/NbtPathArgument$NbtPath;)I b
	getNumeric (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/server/commands/data/DataAccessor;Lnet/minecraft/commands/arguments/NbtPathArgument$NbtPath;D)I a
	getOffset (II)I a
	getSingleTag (Lnet/minecraft/commands/arguments/NbtPathArgument$NbtPath;Lnet/minecraft/server/commands/data/DataAccessor;)Lnet/minecraft/nbt/Tag; a
	getSingletonSource (Lcom/mojang/brigadier/context/CommandContext;Lnet/minecraft/server/commands/data/DataCommands$DataProvider;)Ljava/util/List; a
	manipulateData (Lcom/mojang/brigadier/context/CommandContext;Lnet/minecraft/server/commands/data/DataCommands$DataProvider;Lnet/minecraft/server/commands/data/DataCommands$DataManipulator;Ljava/util/List;)I a
	mergeData (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/server/commands/data/DataAccessor;Lnet/minecraft/nbt/CompoundTag;)I a
	register (Lcom/mojang/brigadier/CommandDispatcher;)V a
	removeData (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/server/commands/data/DataAccessor;Lnet/minecraft/commands/arguments/NbtPathArgument$NbtPath;)I a
	resolveSourcePath (Lcom/mojang/brigadier/context/CommandContext;Lnet/minecraft/server/commands/data/DataCommands$DataProvider;)Ljava/util/List; b
	stringifyTagList (Ljava/util/List;Lnet/minecraft/server/commands/data/DataCommands$StringProcessor;)Ljava/util/List; a
	substring (Ljava/lang/String;I)Ljava/lang/String; a
	substring (Ljava/lang/String;II)Ljava/lang/String; b
	validatedSubstring (Ljava/lang/String;II)Ljava/lang/String; a
net/minecraft/server/commands/data/DataCommands$DataManipulator agy$a
net/minecraft/server/commands/data/DataCommands$DataManipulatorDecorator agy$b
net/minecraft/server/commands/data/DataCommands$DataProvider agy$c
	access (Lcom/mojang/brigadier/context/CommandContext;)Lnet/minecraft/server/commands/data/DataAccessor; a
	wrap (Lcom/mojang/brigadier/builder/ArgumentBuilder;Ljava/util/function/Function;)Lcom/mojang/brigadier/builder/ArgumentBuilder; a
net/minecraft/server/commands/data/DataCommands$StringProcessor agy$d
net/minecraft/server/commands/data/EntityDataAccessor agz
	ERROR_NO_PLAYERS b
	PROVIDER a
	entity c
	getData ()Lnet/minecraft/nbt/CompoundTag; a
	getModifiedSuccess ()Lnet/minecraft/network/chat/Component; b
	getPrintSuccess (Lnet/minecraft/commands/arguments/NbtPathArgument$NbtPath;DI)Lnet/minecraft/network/chat/Component; a
	getPrintSuccess (Lnet/minecraft/nbt/Tag;)Lnet/minecraft/network/chat/Component; a
	setData (Lnet/minecraft/nbt/CompoundTag;)V a
net/minecraft/server/commands/data/StorageDataAccessor aha
	PROVIDER a
	SUGGEST_STORAGE b
	id d
	storage c
	getData ()Lnet/minecraft/nbt/CompoundTag; a
	getGlobalTags (Lcom/mojang/brigadier/context/CommandContext;)Lnet/minecraft/world/level/storage/CommandStorage; a
	getModifiedSuccess ()Lnet/minecraft/network/chat/Component; b
	getPrintSuccess (Lnet/minecraft/commands/arguments/NbtPathArgument$NbtPath;DI)Lnet/minecraft/network/chat/Component; a
	getPrintSuccess (Lnet/minecraft/nbt/Tag;)Lnet/minecraft/network/chat/Component; a
	setData (Lnet/minecraft/nbt/CompoundTag;)V a
net/minecraft/server/dedicated/DedicatedPlayerList ahd
	LOGGER a
	canBypassPlayerLimit (Lcom/mojang/authlib/GameProfile;)Z d
	deop (Lcom/mojang/authlib/GameProfile;)V b
	getServer ()Lnet/minecraft/server/MinecraftServer; c
	getServer ()Lnet/minecraft/server/dedicated/DedicatedServer; b
	isWhiteListed (Lcom/mojang/authlib/GameProfile;)Z c
	loadIpBanList ()V y
	loadOps ()V A
	loadUserBanList ()V z
	loadWhiteList ()V C
	op (Lcom/mojang/authlib/GameProfile;)V a
	reloadWhiteList ()V a
	saveIpBanList ()V w
	saveOps ()V B
	saveUserBanList ()V x
	saveWhiteList ()V D
	setUsingWhiteList (Z)V a
net/minecraft/server/dedicated/DedicatedServer ahe
	CONVERSION_RETRIES p
	CONVERSION_RETRY_DELAY_MS o
	LOGGER n
	consoleInput q
	gui v
	queryThreadGs4 r
	rconConsoleSource s
	rconThread t
	settings u
	textFilterClient w
	areNpcsEnabled ()Z X
	convertOldUsers ()Z bi
	createTextFilterForPlayer (Lnet/minecraft/server/level/ServerPlayer;)Lnet/minecraft/server/network/TextFilter; a
	dumpServerProperties (Ljava/nio/file/Path;)V a
	enforceSecureProfile ()Z aw
	fillServerSystemReport (Lnet/minecraft/SystemReport;)Lnet/minecraft/SystemReport; a
	forceDifficulty ()V r
	forceSynchronousWrites ()Z aS
	getAbsoluteMaxWorldSize ()I as
	getCompressionThreshold ()I av
	getForcedGameType ()Lnet/minecraft/world/level/GameType; aX
	getFunctionCompilationLevel ()I j
	getLevelIdName ()Ljava/lang/String; q
	getMaxChainedNeighborUpdates ()I bd
	getMaxTickLength ()J bj
	getOperatorUserPermissionLevel ()I i
	getPlayerList ()Lnet/minecraft/server/dedicated/DedicatedPlayerList; bg
	getPlayerList ()Lnet/minecraft/server/players/PlayerList; ac
	getPluginNames ()Ljava/lang/String; s
	getProperties ()Lnet/minecraft/server/dedicated/DedicatedServerProperties; a
	getRateLimitPacketsPerSecond ()I m
	getScaledTrackingDistance (I)I b
	getServerIp ()Ljava/lang/String; b
	getServerName ()Ljava/lang/String; f
	getServerPort ()I d
	getServerResourcePack ()Ljava/util/Optional; S
	getSpawnProtectionRadius ()I ah
	handleConsoleInput (Ljava/lang/String;Lnet/minecraft/commands/CommandSourceStack;)V a
	handleConsoleInputs ()V bf
	hasGui ()Z af
	hidesOnlinePlayers ()Z aj
	initServer ()Z e
	isCommandBlockEnabled ()Z o
	isDedicatedServer ()Z l
	isEpollEnabled ()Z n
	isHardcore ()Z h
	isNetherEnabled ()Z B
	isPublished ()Z p
	isSingleplayerOwner (Lcom/mojang/authlib/GameProfile;)Z a
	isSpawningAnimals ()Z W
	isSpawningMonsters ()Z Q
	isUnderSpawnProtection (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/player/Player;)Z a
	onServerExit ()V g
	repliesToStatus ()Z ai
	runCommand (Ljava/lang/String;)Ljava/lang/String; a
	setPlayerIdleTimeout (I)V c
	shouldInformAdmins ()Z N_
	shouldRconBroadcast ()Z k
	showGui ()V bh
	stopServer ()V t
	storeUsingWhiteList (Z)V i
	tickChildren (Ljava/util/function/BooleanSupplier;)V b
	waitForRetry ()V bs
net/minecraft/server/dedicated/DedicatedServerProperties ahf
	COMMA_SPLITTER ab
	LOGGER Z
	SHA1 aa
	allowFlight g
	allowNether v
	announcePlayerAchievements o
	broadcastConsoleToOps K
	broadcastRconToOps J
	difficulty k
	enableCommandBlock y
	enableJmxMonitoring N
	enableQuery p
	enableRcon r
	enableStatus O
	enforceSecureProfile W
	enforceWhitelist j
	entityBroadcastRangePercentage Q
	forceGameMode i
	functionPermissionLevel B
	gamemode l
	hardcore u
	hideOnlinePlayers P
	initialDataPackConfiguration T
	levelName m
	maxChainedNeighborUpdates D
	maxPlayers H
	maxTickTime C
	maxWorldSize L
	motd h
	networkCompressionThreshold I
	onlineMode a
	opPermissionLevel A
	playerIdleTimeout U
	preventProxyConnections b
	pvp f
	queryPort q
	rateLimitPacketsPerSecond E
	rconPassword t
	rconPort s
	serverIp c
	serverPort n
	serverResourcePackInfo S
	simulationDistance G
	spawnAnimals d
	spawnMonsters w
	spawnNpcs e
	spawnProtection z
	syncChunkWrites M
	textFilteringConfig R
	useNativeTransport x
	viewDistance F
	whiteList V
	worldDimensionData ac
	worldOptions X
	createDimensions (Lnet/minecraft/core/RegistryAccess;)Lnet/minecraft/world/level/levelgen/WorldDimensions; a
	fromFile (Ljava/nio/file/Path;)Lnet/minecraft/server/dedicated/DedicatedServerProperties; a
	getDatapackConfig (Ljava/lang/String;Ljava/lang/String;)Lnet/minecraft/world/level/DataPackConfig; b
	getFeatures (Ljava/lang/String;)Lnet/minecraft/world/flag/FeatureFlagSet; d
	getServerPackInfo (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;)Ljava/util/Optional; a
	parseResourcePackPrompt (Ljava/lang/String;)Lnet/minecraft/network/chat/Component; c
	reload (Lnet/minecraft/core/RegistryAccess;Ljava/util/Properties;)Lnet/minecraft/server/dedicated/DedicatedServerProperties; a
	reload (Lnet/minecraft/core/RegistryAccess;Ljava/util/Properties;)Lnet/minecraft/server/dedicated/Settings; b
net/minecraft/server/dedicated/DedicatedServerProperties$WorldDimensionData ahf$a
	LEGACY_PRESET_NAMES c
	generatorSettings a
	levelType b
	create (Lnet/minecraft/core/RegistryAccess;)Lnet/minecraft/world/level/levelgen/WorldDimensions; a
	generatorSettings ()Lcom/google/gson/JsonObject; a
	levelType ()Ljava/lang/String; b
net/minecraft/server/dedicated/DedicatedServerSettings ahg
	properties b
	source a
	forceSave ()V b
	getProperties ()Lnet/minecraft/server/dedicated/DedicatedServerProperties; a
	update (Ljava/util/function/UnaryOperator;)Lnet/minecraft/server/dedicated/DedicatedServerSettings; a
net/minecraft/server/dedicated/ServerWatchdog ahh
	LOGGER a
	MAX_SHUTDOWN_TIME b
	SHUTDOWN_STATUS c
	maxTickTime e
	server d
	exit ()V a
net/minecraft/server/dedicated/Settings ahi
	LOGGER a
	properties Y
	cloneProperties ()Ljava/util/Properties; a
	dispatchNumberOrString (Ljava/util/function/IntFunction;Ljava/util/function/Function;)Ljava/util/function/Function; a
	get (Ljava/lang/String;I)I a
	get (Ljava/lang/String;J)J a
	get (Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; a
	get (Ljava/lang/String;Ljava/util/function/Function;Ljava/lang/Object;)Ljava/lang/Object; a
	get (Ljava/lang/String;Ljava/util/function/Function;Ljava/util/function/Function;Ljava/lang/Object;)Ljava/lang/Object; a
	get (Ljava/lang/String;Ljava/util/function/Function;Ljava/util/function/UnaryOperator;Ljava/util/function/Function;Ljava/lang/Object;)Ljava/lang/Object; a
	get (Ljava/lang/String;Ljava/util/function/UnaryOperator;I)I a
	get (Ljava/lang/String;Z)Z a
	getLegacy (Ljava/lang/String;Ljava/util/function/Function;)Ljava/lang/Object; a
	getLegacyBoolean (Ljava/lang/String;)Ljava/lang/Boolean; b
	getLegacyString (Ljava/lang/String;)Ljava/lang/String; a
	getMutable (Ljava/lang/String;I)Lnet/minecraft/server/dedicated/Settings$MutableValue; b
	getMutable (Ljava/lang/String;Ljava/util/function/Function;Ljava/lang/Object;)Lnet/minecraft/server/dedicated/Settings$MutableValue; b
	getMutable (Ljava/lang/String;Ljava/util/function/Function;Ljava/util/function/Function;Ljava/lang/Object;)Lnet/minecraft/server/dedicated/Settings$MutableValue; b
	getMutable (Ljava/lang/String;Z)Lnet/minecraft/server/dedicated/Settings$MutableValue; b
	getStringRaw (Ljava/lang/String;)Ljava/lang/String; c
	loadFromFile (Ljava/nio/file/Path;)Ljava/util/Properties; b
	reload (Lnet/minecraft/core/RegistryAccess;Ljava/util/Properties;)Lnet/minecraft/server/dedicated/Settings; b
	store (Ljava/nio/file/Path;)V c
	wrapNumberDeserializer (Ljava/util/function/Function;)Ljava/util/function/Function; a
net/minecraft/server/dedicated/Settings$MutableValue ahi$a
	key b
	serializer d
	value c
	update (Lnet/minecraft/core/RegistryAccess;Ljava/lang/Object;)Lnet/minecraft/server/dedicated/Settings; a
net/minecraft/server/gui/MinecraftServerGui ahk
	LOGGER b
	MONOSPACED a
	SHUTDOWN_TITLE d
	TITLE c
	finalizers g
	isClosing h
	logAppenderThread f
	server e
	addFinalizer (Ljava/lang/Runnable;)V a
	buildChatPanel ()Ljavax/swing/JComponent; e
	buildInfoPanel ()Ljavax/swing/JComponent; c
	buildPlayerPanel ()Ljavax/swing/JComponent; d
	close ()V b
	print (Ljavax/swing/JTextArea;Ljavax/swing/JScrollPane;Ljava/lang/String;)V a
	runFinalizers ()V f
	showFrameFor (Lnet/minecraft/server/dedicated/DedicatedServer;)Lnet/minecraft/server/gui/MinecraftServerGui; a
	start ()V a
net/minecraft/server/gui/PlayerListComponent ahl
	server a
	tickCount b
	tick ()V a
net/minecraft/server/gui/StatsComponent ahm
	DECIMAL_FORMAT a
	msgs d
	server e
	timer f
	values b
	vp c
	close ()V a
	getAverage ([J)D a
	tick ()V b
net/minecraft/server/level/BlockDestructionProgress aho
	id a
	pos b
	progress c
	updatedRenderTick d
	compareTo (Lnet/minecraft/server/level/BlockDestructionProgress;)I a
	getId ()I a
	getPos ()Lnet/minecraft/core/BlockPos; b
	getProgress ()I c
	getUpdatedRenderTick ()I d
	setProgress (I)V a
	updateTick (I)V b
net/minecraft/server/level/ChunkHolder ahp
	CHUNK_STATUSES f
	NOT_DONE_YET d
	UNLOADED_CHUNK a
	UNLOADED_CHUNK_FUTURE b
	UNLOADED_LEVEL_CHUNK c
	UNLOADED_LEVEL_CHUNK_FUTURE e
	blockChangedLightSectionFilter t
	changedBlocksPerSection s
	chunkToSave l
	chunkToSaveHistory m
	entityTickingChunkFuture k
	fullChunkFuture i
	futures g
	hasChangedSections r
	levelHeightAccessor h
	lightEngine v
	oldTicketLevel n
	onLevelChange w
	pendingFullStateConfirmation z
	playerProvider x
	pos q
	queueLevel p
	skyChangedLightSectionFilter u
	ticketLevel o
	tickingChunkFuture j
	wasAccessibleSinceLastSave y
	addSaveDependency (Ljava/lang/String;Ljava/util/concurrent/CompletableFuture;)V a
	blockChanged (Lnet/minecraft/core/BlockPos;)V a
	broadcast (Ljava/util/List;Lnet/minecraft/network/protocol/Packet;)V a
	broadcastBlockEntity (Ljava/util/List;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)V a
	broadcastBlockEntityIfNeeded (Ljava/util/List;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V a
	broadcastChanges (Lnet/minecraft/world/level/chunk/LevelChunk;)V a
	demoteFullChunk (Lnet/minecraft/server/level/ChunkMap;Lnet/minecraft/server/level/FullChunkStatus;)V a
	getAllFutures ()Ljava/util/List; o
	getChunkToSave ()Ljava/util/concurrent/CompletableFuture; h
	getEntityTickingChunkFuture ()Ljava/util/concurrent/CompletableFuture; b
	getFullChunk ()Lnet/minecraft/world/level/chunk/LevelChunk; e
	getFullChunkFuture ()Ljava/util/concurrent/CompletableFuture; c
	getFullStatus ()Lnet/minecraft/server/level/FullChunkStatus; i
	getFutureIfPresent (Lnet/minecraft/world/level/chunk/ChunkStatus;)Ljava/util/concurrent/CompletableFuture; b
	getFutureIfPresentUnchecked (Lnet/minecraft/world/level/chunk/ChunkStatus;)Ljava/util/concurrent/CompletableFuture; a
	getLastAvailable ()Lnet/minecraft/world/level/chunk/ChunkAccess; g
	getLastAvailableStatus ()Lnet/minecraft/world/level/chunk/ChunkStatus; f
	getOrScheduleFuture (Lnet/minecraft/world/level/chunk/ChunkStatus;Lnet/minecraft/server/level/ChunkMap;)Ljava/util/concurrent/CompletableFuture; a
	getPos ()Lnet/minecraft/world/level/ChunkPos; j
	getQueueLevel ()I l
	getTicketLevel ()I k
	getTickingChunk ()Lnet/minecraft/world/level/chunk/LevelChunk; d
	getTickingChunkFuture ()Ljava/util/concurrent/CompletableFuture; a
	refreshAccessibility ()V n
	replaceProtoChunk (Lnet/minecraft/world/level/chunk/ImposterProtoChunk;)V a
	scheduleFullChunkPromotion (Lnet/minecraft/server/level/ChunkMap;Ljava/util/concurrent/CompletableFuture;Ljava/util/concurrent/Executor;Lnet/minecraft/server/level/FullChunkStatus;)V a
	sectionLightChanged (Lnet/minecraft/world/level/LightLayer;I)V a
	setQueueLevel (I)V b
	setTicketLevel (I)V a
	updateChunkToSave (Ljava/util/concurrent/CompletableFuture;Ljava/lang/String;)V a
	updateFutures (Lnet/minecraft/server/level/ChunkMap;Ljava/util/concurrent/Executor;)V a
	wasAccessibleSinceLastSave ()Z m
net/minecraft/server/level/ChunkHolder$ChunkLoadingFailure ahp$a
	UNLOADED b
net/minecraft/server/level/ChunkHolder$ChunkSaveDebug ahp$b
	future b
	source c
	thread a
net/minecraft/server/level/ChunkHolder$LevelChangeListener ahp$c
net/minecraft/server/level/ChunkHolder$PlayerProvider ahp$d
	getPlayers (Lnet/minecraft/world/level/ChunkPos;Z)Ljava/util/List; a
net/minecraft/server/level/ChunkLevel ahq
	BLOCK_TICKING_LEVEL c
	ENTITY_TICKING_LEVEL d
	FULL_CHUNK_LEVEL b
	MAX_LEVEL a
	byStatus (Lnet/minecraft/server/level/FullChunkStatus;)I a
	byStatus (Lnet/minecraft/world/level/chunk/ChunkStatus;)I a
	fullStatus (I)Lnet/minecraft/server/level/FullChunkStatus; b
	generationStatus (I)Lnet/minecraft/world/level/chunk/ChunkStatus; a
	isBlockTicking (I)Z d
	isEntityTicking (I)Z c
	isLoaded (I)Z e
net/minecraft/server/level/ChunkMap ahr
	CHUNK_SAVED_EAGERLY_PER_TICK j
	CHUNK_SAVED_PER_TICK i
	CHUNK_TYPE_FULL g
	CHUNK_TYPE_REPLACEABLE e
	CHUNK_TYPE_UNKNOWN f
	EAGER_CHUNK_SAVE_COOLDOWN_IN_MILLIS k
	FORCED_TICKET_LEVEL b
	LOGGER h
	MAX_VIEW_DISTANCE a
	MIN_VIEW_DISTANCE l
	chunkGeneratorState v
	chunkSaveCooldowns M
	chunkStatusListener E
	chunkTypeCache L
	distanceManager F
	entitiesInLevel p
	entityMap K
	generator t
	level q
	lightEngine r
	mainThreadExecutor s
	mainThreadMailbox C
	modified z
	overworldDataStorage w
	pendingUnloads o
	playerMap J
	poiManager x
	progressListener D
	queueSorter A
	randomState u
	storageName I
	structureTemplateManager H
	tickingGenerated G
	toDrop y
	unloadQueue N
	updatingChunkMap m
	viewDistance O
	visibleChunkMap n
	worldgenMailbox B
	addEntity (Lnet/minecraft/world/entity/Entity;)V a
	anyPlayerCloseEnoughForSpawning (Lnet/minecraft/world/level/ChunkPos;)Z c
	broadcast (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/network/protocol/Packet;)V a
	broadcastAndSend (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/network/protocol/Packet;)V b
	createEmptyChunk (Lnet/minecraft/world/level/ChunkPos;)Lnet/minecraft/world/level/chunk/ChunkAccess; g
	debugFuturesAndCreateReportedException (Ljava/lang/IllegalStateException;Ljava/lang/String;)Lnet/minecraft/ReportedException; a
	debugReloadGenerator ()V d
	dumpChunks (Ljava/io/Writer;)V a
	euclideanDistanceSquared (Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/world/entity/Entity;)D a
	generator ()Lnet/minecraft/world/level/chunk/ChunkGenerator; a
	generatorState ()Lnet/minecraft/world/level/chunk/ChunkGeneratorStructureState; b
	getChunkDebugData (Lnet/minecraft/world/level/ChunkPos;)Ljava/lang/String; a
	getChunkQueueLevel (J)Ljava/util/function/IntSupplier; c
	getChunkRangeFuture (Lnet/minecraft/server/level/ChunkHolder;ILjava/util/function/IntFunction;)Ljava/util/concurrent/CompletableFuture; a
	getChunks ()Ljava/lang/Iterable; k
	getDependencyStatus (Lnet/minecraft/world/level/chunk/ChunkStatus;I)Lnet/minecraft/world/level/chunk/ChunkStatus; a
	getDistanceManager ()Lnet/minecraft/server/level/DistanceManager; j
	getLightEngine ()Lnet/minecraft/server/level/ThreadedLevelLightEngine; e
	getPlayers (Lnet/minecraft/world/level/ChunkPos;Z)Ljava/util/List; a
	getPlayersCloseForSpawning (Lnet/minecraft/world/level/ChunkPos;)Ljava/util/List; d
	getPoiManager ()Lnet/minecraft/world/entity/ai/village/poi/PoiManager; m
	getStorageName ()Ljava/lang/String; n
	getTickingGenerated ()I h
	getUpdatingChunkIfPresent (J)Lnet/minecraft/server/level/ChunkHolder; a
	getVisibleChunkIfPresent (J)Lnet/minecraft/server/level/ChunkHolder; b
	handleChunkLoadFailure (Ljava/lang/Throwable;Lnet/minecraft/world/level/ChunkPos;)Lcom/mojang/datafixers/util/Either; a
	hasWork ()Z f
	isChunkDataValid (Lnet/minecraft/nbt/CompoundTag;)Z b
	isChunkInRange (IIIII)Z a
	isChunkOnRangeBorder (IIIII)Z b
	isExistingChunkFull (Lnet/minecraft/world/level/ChunkPos;)Z i
	markPosition (Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/world/level/chunk/ChunkStatus$ChunkType;)B a
	markPositionReplaceable (Lnet/minecraft/world/level/ChunkPos;)V h
	move (Lnet/minecraft/server/level/ServerPlayer;)V a
	onFullChunkStatusChange (Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/server/level/FullChunkStatus;)V a
	playerIsCloseEnoughForSpawning (Lnet/minecraft/server/level/ServerPlayer;Lnet/minecraft/world/level/ChunkPos;)Z a
	playerLoadedChunk (Lnet/minecraft/server/level/ServerPlayer;Lorg/apache/commons/lang3/mutable/MutableObject;Lnet/minecraft/world/level/chunk/LevelChunk;)V a
	postLoadProtoChunk (Lnet/minecraft/server/level/ServerLevel;Ljava/util/List;)V a
	prepareAccessibleChunk (Lnet/minecraft/server/level/ChunkHolder;)Ljava/util/concurrent/CompletableFuture; c
	prepareEntityTickingChunk (Lnet/minecraft/server/level/ChunkHolder;)Ljava/util/concurrent/CompletableFuture; a
	prepareTickingChunk (Lnet/minecraft/server/level/ChunkHolder;)Ljava/util/concurrent/CompletableFuture; b
	printFuture (Ljava/util/concurrent/CompletableFuture;)Ljava/lang/String; a
	processUnloads (Ljava/util/function/BooleanSupplier;)V b
	promoteChunkMap ()Z g
	protoChunkToFullChunk (Lnet/minecraft/server/level/ChunkHolder;)Ljava/util/concurrent/CompletableFuture; d
	randomState ()Lnet/minecraft/world/level/levelgen/RandomState; c
	readChunk (Lnet/minecraft/world/level/ChunkPos;)Ljava/util/concurrent/CompletableFuture; j
	releaseLightTicket (Lnet/minecraft/world/level/ChunkPos;)V b
	removeEntity (Lnet/minecraft/world/entity/Entity;)V b
	resendBiomesForChunks (Ljava/util/List;)V a
	save (Lnet/minecraft/world/level/chunk/ChunkAccess;)Z a
	saveAllChunks (Z)V a
	saveChunkIfNeeded (Lnet/minecraft/server/level/ChunkHolder;)Z e
	schedule (Lnet/minecraft/server/level/ChunkHolder;Lnet/minecraft/world/level/chunk/ChunkStatus;)Ljava/util/concurrent/CompletableFuture; a
	scheduleChunkGeneration (Lnet/minecraft/server/level/ChunkHolder;Lnet/minecraft/world/level/chunk/ChunkStatus;)Ljava/util/concurrent/CompletableFuture; b
	scheduleChunkLoad (Lnet/minecraft/world/level/ChunkPos;)Ljava/util/concurrent/CompletableFuture; f
	scheduleUnload (JLnet/minecraft/server/level/ChunkHolder;)V a
	setViewDistance (I)V a
	size ()I i
	skipPlayer (Lnet/minecraft/server/level/ServerPlayer;)Z b
	tick ()V l
	tick (Ljava/util/function/BooleanSupplier;)V a
	updateChunkScheduling (JILnet/minecraft/server/level/ChunkHolder;I)Lnet/minecraft/server/level/ChunkHolder; a
	updateChunkTracking (Lnet/minecraft/server/level/ServerPlayer;Lnet/minecraft/world/level/ChunkPos;Lorg/apache/commons/lang3/mutable/MutableObject;ZZ)V a
	updatePlayerPos (Lnet/minecraft/server/level/ServerPlayer;)Lnet/minecraft/core/SectionPos; c
	updatePlayerStatus (Lnet/minecraft/server/level/ServerPlayer;Z)V a
	upgradeChunkTag (Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/nbt/CompoundTag; c
net/minecraft/server/level/ChunkMap$DistanceManager ahr$a
	getChunk (J)Lnet/minecraft/server/level/ChunkHolder; b
	isChunkToRemove (J)Z a
	updateChunkScheduling (JILnet/minecraft/server/level/ChunkHolder;I)Lnet/minecraft/server/level/ChunkHolder; a
net/minecraft/server/level/ChunkMap$TrackedEntity ahr$b
	entity c
	lastSectionPos e
	range d
	seenBy f
	serverEntity b
	broadcast (Lnet/minecraft/network/protocol/Packet;)V a
	broadcastAndSend (Lnet/minecraft/network/protocol/Packet;)V b
	broadcastRemoved ()V a
	getEffectiveRange ()I b
	removePlayer (Lnet/minecraft/server/level/ServerPlayer;)V a
	scaledRange (I)I a
	updatePlayer (Lnet/minecraft/server/level/ServerPlayer;)V b
	updatePlayers (Ljava/util/List;)V a
net/minecraft/server/level/ChunkTaskPriorityQueue ahs
	PRIORITY_LEVEL_COUNT a
	acquired e
	firstQueue c
	maxTasks f
	name d
	taskQueue b
	acquire (J)Ljava/lang/Runnable; a
	getAcquired ()Lit/unimi/dsi/fastutil/longs/LongSet; c
	hasWork ()Z b
	pop ()Ljava/util/stream/Stream; a
	release (JZ)V a
	resortChunkTasks (ILnet/minecraft/world/level/ChunkPos;I)V a
	submit (Ljava/util/Optional;JI)V a
net/minecraft/server/level/ChunkTaskPriorityQueueSorter aht
	LOGGER a
	mailbox d
	queues b
	sleeping c
	getDebugStatus ()Ljava/lang/String; b
	getProcessor (Lnet/minecraft/util/thread/ProcessorHandle;Z)Lnet/minecraft/util/thread/ProcessorHandle; a
	getQueue (Lnet/minecraft/util/thread/ProcessorHandle;)Lnet/minecraft/server/level/ChunkTaskPriorityQueue; b
	getReleaseProcessor (Lnet/minecraft/util/thread/ProcessorHandle;)Lnet/minecraft/util/thread/ProcessorHandle; a
	hasWork ()Z a
	message (Ljava/lang/Runnable;JLjava/util/function/IntSupplier;)Lnet/minecraft/server/level/ChunkTaskPriorityQueueSorter$Message; a
	message (Ljava/util/function/Function;JLjava/util/function/IntSupplier;)Lnet/minecraft/server/level/ChunkTaskPriorityQueueSorter$Message; a
	message (Lnet/minecraft/server/level/ChunkHolder;Ljava/lang/Runnable;)Lnet/minecraft/server/level/ChunkTaskPriorityQueueSorter$Message; a
	message (Lnet/minecraft/server/level/ChunkHolder;Ljava/util/function/Function;)Lnet/minecraft/server/level/ChunkTaskPriorityQueueSorter$Message; a
	pollTask (Lnet/minecraft/server/level/ChunkTaskPriorityQueue;Lnet/minecraft/util/thread/ProcessorHandle;)V a
	release (Ljava/lang/Runnable;JZ)Lnet/minecraft/server/level/ChunkTaskPriorityQueueSorter$Release; a
	release (Lnet/minecraft/util/thread/ProcessorHandle;JLjava/lang/Runnable;Z)V a
	submit (Lnet/minecraft/util/thread/ProcessorHandle;Ljava/util/function/Function;JLjava/util/function/IntSupplier;Z)V a
net/minecraft/server/level/ChunkTaskPriorityQueueSorter$Message aht$a
	level c
	pos b
	task a
net/minecraft/server/level/ChunkTaskPriorityQueueSorter$Release aht$b
	clearQueue c
	pos b
	task a
net/minecraft/server/level/ChunkTracker ahu
	checkNeighborsAfterUpdate (JIZ)V a
	computeLevelFromNeighbor (JJI)I b
	getComputedLevel (JJI)I a
	getLevelFromSource (J)I b
	isSource (J)Z a
	update (JIZ)V b
net/minecraft/server/level/ColumnPos ahv
	COORD_BITS c
	COORD_MASK d
	x a
	z b
	asLong (II)J a
	getX (J)I a
	getZ (J)I b
	toChunkPos ()Lnet/minecraft/world/level/ChunkPos; a
	toLong ()J b
	x ()I c
	z ()I d
net/minecraft/server/level/DemoMode ahw
	DEMO_DAYS a
	TOTAL_PLAY_TICKS b
	demoEndedReminder g
	demoHasEnded f
	displayedIntro e
	gameModeTicks h
	handleBlockBreakAction (Lnet/minecraft/core/BlockPos;Lnet/minecraft/network/protocol/game/ServerboundPlayerActionPacket$Action;Lnet/minecraft/core/Direction;II)V a
	outputDemoReminder ()V f
	tick ()V a
	useItem (Lnet/minecraft/server/level/ServerPlayer;Lnet/minecraft/world/level/Level;Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResult; a
	useItemOn (Lnet/minecraft/server/level/ServerPlayer;Lnet/minecraft/world/level/Level;Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/InteractionHand;Lnet/minecraft/world/phys/BlockHitResult;)Lnet/minecraft/world/InteractionResult; a
net/minecraft/server/level/DistanceManager ahx
	INITIAL_TICKET_LIST_CAPACITY c
	LOGGER a
	PLAYER_TICKET_LEVEL b
	chunksToUpdateFutures j
	mainThreadExecutor o
	naturalSpawnChunkCounter g
	playerTicketManager i
	playersPerChunk d
	simulationDistance q
	ticketThrottler k
	ticketThrottlerInput l
	ticketThrottlerReleaser m
	ticketTickCounter p
	ticketTracker f
	tickets e
	ticketsToRelease n
	tickingTicketsTracker h
	addPlayer (Lnet/minecraft/core/SectionPos;Lnet/minecraft/server/level/ServerPlayer;)V a
	addRegionTicket (Lnet/minecraft/server/level/TicketType;Lnet/minecraft/world/level/ChunkPos;ILjava/lang/Object;)V c
	addTicket (JLnet/minecraft/server/level/Ticket;)V a
	addTicket (Lnet/minecraft/server/level/TicketType;Lnet/minecraft/world/level/ChunkPos;ILjava/lang/Object;)V a
	dumpTickets (Ljava/lang/String;)V a
	getChunk (J)Lnet/minecraft/server/level/ChunkHolder; b
	getDebugStatus ()Ljava/lang/String; c
	getNaturalSpawnChunkCount ()I b
	getPlayerTicketLevel ()I g
	getTicketDebugString (J)Ljava/lang/String; e
	getTicketLevelAt (Lnet/minecraft/util/SortedArraySet;)I a
	getTickets (J)Lnet/minecraft/util/SortedArraySet; g
	hasPlayersNearby (J)Z f
	hasTickets ()Z f
	inBlockTickingRange (J)Z d
	inEntityTickingRange (J)Z c
	isChunkToRemove (J)Z a
	purgeStaleTickets ()V a
	removePlayer (Lnet/minecraft/core/SectionPos;Lnet/minecraft/server/level/ServerPlayer;)V b
	removeRegionTicket (Lnet/minecraft/server/level/TicketType;Lnet/minecraft/world/level/ChunkPos;ILjava/lang/Object;)V d
	removeTicket (JLnet/minecraft/server/level/Ticket;)V b
	removeTicket (Lnet/minecraft/server/level/TicketType;Lnet/minecraft/world/level/ChunkPos;ILjava/lang/Object;)V b
	removeTicketsOnClosing ()V e
	runAllUpdates (Lnet/minecraft/server/level/ChunkMap;)Z a
	tickingTracker ()Lnet/minecraft/server/level/TickingTracker; d
	updateChunkForced (Lnet/minecraft/world/level/ChunkPos;Z)V a
	updateChunkScheduling (JILnet/minecraft/server/level/ChunkHolder;I)Lnet/minecraft/server/level/ChunkHolder; a
	updatePlayerTickets (I)V a
	updateSimulationDistance (I)V b
net/minecraft/server/level/DistanceManager$ChunkTicketTracker ahx$a
	MAX_LEVEL b
	getLevel (J)I c
	getLevelFromSource (J)I b
	runDistanceUpdates (I)I a
	setLevel (JI)V a
net/minecraft/server/level/DistanceManager$FixedPlayerDistanceChunkTracker ahx$b
	chunks a
	maxDistance b
	dumpChunks (Ljava/lang/String;)V a
	getLevel (J)I c
	getLevelFromSource (J)I b
	havePlayer (J)Z d
	onLevelChange (JII)V a
	runAllUpdates ()V a
	setLevel (JI)V a
net/minecraft/server/level/DistanceManager$PlayerTicketTracker ahx$c
	queueLevels h
	toUpdate i
	viewDistance g
	haveTicketFor (I)Z c
	onLevelChange (JII)V a
	onLevelChange (JIZZ)V a
	runAllUpdates ()V a
	updateViewDistance (I)V a
net/minecraft/server/level/FullChunkStatus ahy
	$VALUES e
	BLOCK_TICKING c
	ENTITY_TICKING d
	FULL b
	INACCESSIBLE a
	$values ()[Lnet/minecraft/server/level/FullChunkStatus; a
	isOrAfter (Lnet/minecraft/server/level/FullChunkStatus;)Z a
net/minecraft/server/level/PlayerMap ahz
	players a
	addPlayer (JLnet/minecraft/server/level/ServerPlayer;Z)V a
	getPlayers (J)Ljava/util/Set; a
	ignorePlayer (Lnet/minecraft/server/level/ServerPlayer;)V a
	ignored (Lnet/minecraft/server/level/ServerPlayer;)Z d
	ignoredOrUnknown (Lnet/minecraft/server/level/ServerPlayer;)Z c
	removePlayer (JLnet/minecraft/server/level/ServerPlayer;)V a
	unIgnorePlayer (Lnet/minecraft/server/level/ServerPlayer;)V b
	updatePlayer (JJLnet/minecraft/server/level/ServerPlayer;)V a
net/minecraft/server/level/PlayerRespawnLogic aia
	getOverworldRespawnPos (Lnet/minecraft/server/level/ServerLevel;II)Lnet/minecraft/core/BlockPos; a
	getSpawnPosInChunk (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/level/ChunkPos;)Lnet/minecraft/core/BlockPos; a
net/minecraft/server/level/SectionTracker aib
	checkNeighborsAfterUpdate (JIZ)V a
	computeLevelFromNeighbor (JJI)I b
	getComputedLevel (JJI)I a
	getLevelFromSource (J)I b
	update (JIZ)V b
net/minecraft/server/level/ServerBossEvent aic
	players h
	unmodifiablePlayers i
	visible j
	addPlayer (Lnet/minecraft/server/level/ServerPlayer;)V a
	broadcast (Ljava/util/function/Function;)V a
	getPlayers ()Ljava/util/Collection; h
	isVisible ()Z g
	removeAllPlayers ()V b
	removePlayer (Lnet/minecraft/server/level/ServerPlayer;)V b
	setColor (Lnet/minecraft/world/BossEvent$BossBarColor;)V a
	setCreateWorldFog (Z)Lnet/minecraft/world/BossEvent; c
	setDarkenScreen (Z)Lnet/minecraft/world/BossEvent; a
	setName (Lnet/minecraft/network/chat/Component;)V a
	setOverlay (Lnet/minecraft/world/BossEvent$BossBarOverlay;)V a
	setPlayBossMusic (Z)Lnet/minecraft/world/BossEvent; b
	setProgress (F)V a
	setVisible (Z)V d
net/minecraft/server/level/ServerChunkCache aid
	CACHE_SIZE l
	CHUNK_STATUSES b
	chunkMap a
	dataStorage h
	distanceManager c
	lastChunk o
	lastChunkPos m
	lastChunkStatus n
	lastInhabitedUpdate i
	lastSpawnState p
	level d
	lightEngine f
	mainThread e
	mainThreadProcessor g
	spawnEnemies j
	spawnFriendlies k
	addEntity (Lnet/minecraft/world/entity/Entity;)V b
	addRegionTicket (Lnet/minecraft/server/level/TicketType;Lnet/minecraft/world/level/ChunkPos;ILjava/lang/Object;)V a
	blockChanged (Lnet/minecraft/core/BlockPos;)V a
	broadcast (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/network/protocol/Packet;)V b
	broadcastAndSend (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/network/protocol/Packet;)V a
	chunkAbsent (Lnet/minecraft/server/level/ChunkHolder;I)Z a
	chunkScanner ()Lnet/minecraft/world/level/chunk/storage/ChunkScanAccess; m
	clearCache ()V r
	gatherStats ()Ljava/lang/String; e
	getChunk (IILnet/minecraft/world/level/chunk/ChunkStatus;Z)Lnet/minecraft/world/level/chunk/ChunkAccess; a
	getChunkDebugData (Lnet/minecraft/world/level/ChunkPos;)Ljava/lang/String; a
	getChunkForLighting (II)Lnet/minecraft/world/level/chunk/LightChunk; c
	getChunkFuture (IILnet/minecraft/world/level/chunk/ChunkStatus;Z)Ljava/util/concurrent/CompletableFuture; b
	getChunkFutureMainThread (IILnet/minecraft/world/level/chunk/ChunkStatus;Z)Ljava/util/concurrent/CompletableFuture; c
	getChunkNow (II)Lnet/minecraft/world/level/chunk/LevelChunk; a
	getDataStorage ()Lnet/minecraft/world/level/storage/DimensionDataStorage; k
	getFullChunk (JLjava/util/function/Consumer;)V a
	getGenerator ()Lnet/minecraft/world/level/chunk/ChunkGenerator; g
	getGeneratorState ()Lnet/minecraft/world/level/chunk/ChunkGeneratorStructureState; h
	getLastSpawnState ()Lnet/minecraft/world/level/NaturalSpawner$SpawnState; n
	getLevel ()Lnet/minecraft/world/level/BlockGetter; q
	getLevel ()Lnet/minecraft/world/level/Level; c
	getLightEngine ()Lnet/minecraft/server/level/ThreadedLevelLightEngine; a
	getLightEngine ()Lnet/minecraft/world/level/lighting/LevelLightEngine; p
	getLoadedChunksCount ()I j
	getPendingTasksCount ()I f
	getPoiManager ()Lnet/minecraft/world/entity/ai/village/poi/PoiManager; l
	getTickingGenerated ()I b
	getVisibleChunkIfPresent (J)Lnet/minecraft/server/level/ChunkHolder; b
	hasChunk (II)Z b
	isPositionTicking (J)Z a
	move (Lnet/minecraft/server/level/ServerPlayer;)V a
	onLightUpdate (Lnet/minecraft/world/level/LightLayer;Lnet/minecraft/core/SectionPos;)V a
	pollTask ()Z d
	randomState ()Lnet/minecraft/world/level/levelgen/RandomState; i
	removeEntity (Lnet/minecraft/world/entity/Entity;)V a
	removeRegionTicket (Lnet/minecraft/server/level/TicketType;Lnet/minecraft/world/level/ChunkPos;ILjava/lang/Object;)V b
	removeTicketsOnClosing ()V o
	runDistanceManagerUpdates ()Z s
	save (Z)V a
	setSimulationDistance (I)V b
	setSpawnSettings (ZZ)V a
	setViewDistance (I)V a
	storeInCache (JLnet/minecraft/world/level/chunk/ChunkAccess;Lnet/minecraft/world/level/chunk/ChunkStatus;)V a
	tick (Ljava/util/function/BooleanSupplier;Z)V a
	tickChunks ()V t
	updateChunkForced (Lnet/minecraft/world/level/ChunkPos;Z)V a
net/minecraft/server/level/ServerChunkCache$ChunkAndHolder aid$a
	chunk a
	holder b
	chunk ()Lnet/minecraft/world/level/chunk/LevelChunk; a
	holder ()Lnet/minecraft/server/level/ChunkHolder; b
net/minecraft/server/level/ServerChunkCache$MainThreadExecutor aid$b
	doRunTask (Ljava/lang/Runnable;)V d
	getRunningThread ()Ljava/lang/Thread; au
	pollTask ()Z x
	scheduleExecutables ()Z at
	shouldRun (Ljava/lang/Runnable;)Z e
	wrapRunnable (Ljava/lang/Runnable;)Ljava/lang/Runnable; f
net/minecraft/server/level/ServerEntity aie
	LOGGER a
	TOLERANCE_LEVEL_ROTATION b
	ap l
	broadcast g
	entity d
	lastPassengers o
	level c
	positionCodec h
	teleportDelay n
	tickCount m
	trackDelta f
	trackedDataValues r
	updateInterval e
	wasOnGround q
	wasRiding p
	xRotp j
	yHeadRotp k
	yRotp i
	addPairing (Lnet/minecraft/server/level/ServerPlayer;)V b
	broadcastAndSend (Lnet/minecraft/network/protocol/Packet;)V a
	removePairing (Lnet/minecraft/server/level/ServerPlayer;)V a
	removedPassengers (Ljava/util/List;Ljava/util/List;)Ljava/util/stream/Stream; a
	sendChanges ()V a
	sendDirtyEntityData ()V b
	sendPairingData (Lnet/minecraft/server/level/ServerPlayer;Ljava/util/function/Consumer;)V a
net/minecraft/server/level/ServerLevel aif
	EMPTY_TIME_NO_TICK F
	END_SPAWN_POINT a
	LOGGER E
	MAX_SCHEDULED_TICKS_PER_TICK G
	RAIN_DELAY b
	RAIN_DURATION c
	THUNDER_DELAY D
	THUNDER_DURATION d
	blockEvents V
	blockEventsToReschedule W
	blockTicks R
	chunkSource I
	customSpawners Y
	dragonFight Z
	dragonParts aa
	emptyTime P
	entityManager M
	entityTickList L
	fluidTicks S
	gameEventDispatcher N
	handlingTick X
	isUpdatingNavigations U
	navigatingMobs T
	noSave e
	players H
	portalForcer Q
	raids f
	randomSequences ae
	server J
	serverLevelData K
	sleepStatus O
	structureCheck ac
	structureManager ab
	tickTime ad
	addDuringCommandTeleport (Lnet/minecraft/server/level/ServerPlayer;)V a
	addDuringPortalTeleport (Lnet/minecraft/server/level/ServerPlayer;)V b
	addDuringTeleport (Lnet/minecraft/world/entity/Entity;)V d
	addEntity (Lnet/minecraft/world/entity/Entity;)Z j
	addFreshEntity (Lnet/minecraft/world/entity/Entity;)Z b
	addLegacyChunkEntities (Ljava/util/stream/Stream;)V a
	addNewPlayer (Lnet/minecraft/server/level/ServerPlayer;)V c
	addPlayer (Lnet/minecraft/server/level/ServerPlayer;)V e
	addRespawnedPlayer (Lnet/minecraft/server/level/ServerPlayer;)V d
	addWithUUID (Lnet/minecraft/world/entity/Entity;)Z c
	addWorldGenChunkEntities (Ljava/util/stream/Stream;)V b
	advanceWeatherCycle ()V ar
	announceSleepStatus ()V aq
	areEntitiesLoaded (J)Z c
	blockEvent (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Block;II)V a
	blockUpdated (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Block;)V b
	broadcastDamageEvent (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/damagesource/DamageSource;)V a
	broadcastEntityEvent (Lnet/minecraft/world/entity/Entity;B)V a
	canSleepThroughNights ()Z d
	clearBlockEvents (Lnet/minecraft/world/level/levelgen/structure/BoundingBox;)V a
	destroyBlockProgress (ILnet/minecraft/core/BlockPos;I)V a
	doBlockEvent (Lnet/minecraft/world/level/BlockEventData;)Z a
	dumpBlockEntityTickers (Ljava/io/Writer;)V a
	dumpEntities (Ljava/io/Writer;Ljava/lang/Iterable;)V a
	enabledFeatures ()Lnet/minecraft/world/flag/FeatureFlagSet; G
	explode (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/damagesource/DamageSource;Lnet/minecraft/world/level/ExplosionDamageCalculator;DDDFZLnet/minecraft/world/level/Level$ExplosionInteraction;)Lnet/minecraft/world/level/Explosion; a
	findClosestBiome3d (Ljava/util/function/Predicate;Lnet/minecraft/core/BlockPos;III)Lcom/mojang/datafixers/util/Pair; a
	findLightningRod (Lnet/minecraft/core/BlockPos;)Ljava/util/Optional; D
	findLightningTargetAround (Lnet/minecraft/core/BlockPos;)Lnet/minecraft/core/BlockPos; a
	findNearestMapStructure (Lnet/minecraft/tags/TagKey;Lnet/minecraft/core/BlockPos;IZ)Lnet/minecraft/core/BlockPos; a
	gameEvent (Lnet/minecraft/world/level/gameevent/GameEvent;Lnet/minecraft/world/phys/Vec3;Lnet/minecraft/world/level/gameevent/GameEvent$Context;)V a
	gatherChunkSourceStats ()Ljava/lang/String; F
	getAllEntities ()Ljava/lang/Iterable; y
	getBlockTicks ()Lnet/minecraft/world/ticks/LevelTickAccess; L
	getBlockTicks ()Lnet/minecraft/world/ticks/LevelTicks; l
	getChunkSource ()Lnet/minecraft/server/level/ServerChunkCache; k
	getChunkSource ()Lnet/minecraft/world/level/chunk/ChunkSource; J
	getDataStorage ()Lnet/minecraft/world/level/storage/DimensionDataStorage; s
	getDragonFight ()Lnet/minecraft/world/level/dimension/end/EndDragonFight; B
	getDragons ()Ljava/util/List; h
	getEntities ()Lnet/minecraft/world/level/entity/LevelEntityGetter; E
	getEntities (Lnet/minecraft/world/level/entity/EntityTypeTest;Ljava/util/function/Predicate;)Ljava/util/List; a
	getEntities (Lnet/minecraft/world/level/entity/EntityTypeTest;Ljava/util/function/Predicate;Ljava/util/List;)V a
	getEntities (Lnet/minecraft/world/level/entity/EntityTypeTest;Ljava/util/function/Predicate;Ljava/util/List;I)V a
	getEntity (I)Lnet/minecraft/world/entity/Entity; a
	getEntity (Ljava/util/UUID;)Lnet/minecraft/world/entity/Entity; a
	getEntityOrPart (I)Lnet/minecraft/world/entity/Entity; b
	getFluidTicks ()Lnet/minecraft/world/ticks/LevelTickAccess; K
	getFluidTicks ()Lnet/minecraft/world/ticks/LevelTicks; m
	getForcedChunks ()Lit/unimi/dsi/fastutil/longs/LongSet; u
	getFreeMapId ()I t
	getLevel ()Lnet/minecraft/server/level/ServerLevel; C
	getLogicalHeight ()I j
	getMapData (Ljava/lang/String;)Lnet/minecraft/world/level/saveddata/maps/MapItemSavedData; a
	getPlayers (Ljava/util/function/Predicate;)Ljava/util/List; a
	getPlayers (Ljava/util/function/Predicate;I)Ljava/util/List; a
	getPoiManager ()Lnet/minecraft/world/entity/ai/village/poi/PoiManager; w
	getPortalForcer ()Lnet/minecraft/world/level/portal/PortalForcer; o
	getRaidAt (Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/entity/raid/Raid; c
	getRaids ()Lnet/minecraft/world/entity/raid/Raids; x
	getRandomPlayer ()Lnet/minecraft/server/level/ServerPlayer; i
	getRandomSequence (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/util/RandomSource; a
	getRandomSequences ()Lnet/minecraft/world/RandomSequences; H
	getRecipeManager ()Lnet/minecraft/world/item/crafting/RecipeManager; q
	getScoreboard ()Lnet/minecraft/server/ServerScoreboard; f
	getScoreboard ()Lnet/minecraft/world/scores/Scoreboard; I
	getSeed ()J A
	getServer ()Lnet/minecraft/server/MinecraftServer; n
	getShade (Lnet/minecraft/core/Direction;Z)F a
	getStructureManager ()Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplateManager; p
	getTypeCount (Ljava/lang/Iterable;Ljava/util/function/Function;)Ljava/lang/String; a
	getUncachedNoiseBiome (III)Lnet/minecraft/core/Holder; a
	getWatchdogStats ()Ljava/lang/String; D
	globalLevelEvent (ILnet/minecraft/core/BlockPos;I)V b
	isCloseToVillage (Lnet/minecraft/core/BlockPos;I)Z a
	isFlat ()Z z
	isHandlingTick ()Z c
	isNaturalSpawningAllowed (Lnet/minecraft/core/BlockPos;)Z f
	isNaturalSpawningAllowed (Lnet/minecraft/world/level/ChunkPos;)Z a
	isPositionEntityTicking (Lnet/minecraft/core/BlockPos;)Z e
	isPositionTickingWithEntitiesLoaded (J)Z d
	isRaided (Lnet/minecraft/core/BlockPos;)Z d
	isVillage (Lnet/minecraft/core/BlockPos;)Z b
	isVillage (Lnet/minecraft/core/SectionPos;)Z a
	levelEvent (Lnet/minecraft/world/entity/player/Player;ILnet/minecraft/core/BlockPos;I)V a
	makeObsidianPlatform (Lnet/minecraft/server/level/ServerLevel;)V a
	mayInteract (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/core/BlockPos;)Z a
	neighborChanged (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Block;Lnet/minecraft/core/BlockPos;)V a
	neighborChanged (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Block;Lnet/minecraft/core/BlockPos;Z)V a
	noSave ()Z r
	onBlockStateChange (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/state/BlockState;)V a
	onReputationEvent (Lnet/minecraft/world/entity/ai/village/ReputationEventType;Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/entity/ReputationEventHandler;)V a
	onStructureStartsAvailable (Lnet/minecraft/world/level/chunk/ChunkAccess;)V a
	playSeededSound (Lnet/minecraft/world/entity/player/Player;DDDLnet/minecraft/core/Holder;Lnet/minecraft/sounds/SoundSource;FFJ)V a
	playSeededSound (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/entity/Entity;Lnet/minecraft/core/Holder;Lnet/minecraft/sounds/SoundSource;FFJ)V a
	players ()Ljava/util/List; v
	removePlayerImmediately (Lnet/minecraft/server/level/ServerPlayer;Lnet/minecraft/world/entity/Entity$RemovalReason;)V a
	resetEmptyTime ()V g
	resetWeatherCycle ()V as
	runBlockEvents ()V au
	save (Lnet/minecraft/util/ProgressListener;ZZ)V a
	saveDebugReport (Ljava/nio/file/Path;)V a
	saveLevelData ()V at
	sectionsToVillage (Lnet/minecraft/core/SectionPos;)I b
	sendBlockUpdated (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/state/BlockState;I)V a
	sendParticles (Lnet/minecraft/core/particles/ParticleOptions;DDDIDDDD)I a
	sendParticles (Lnet/minecraft/server/level/ServerPlayer;Lnet/minecraft/core/particles/ParticleOptions;ZDDDIDDDD)Z a
	sendParticles (Lnet/minecraft/server/level/ServerPlayer;ZDDDLnet/minecraft/network/protocol/Packet;)Z a
	setChunkForced (IIZ)Z a
	setDayTime (J)V b
	setDefaultSpawnPos (Lnet/minecraft/core/BlockPos;F)V a
	setDragonFight (Lnet/minecraft/world/level/dimension/end/EndDragonFight;)V a
	setMapData (Ljava/lang/String;Lnet/minecraft/world/level/saveddata/maps/MapItemSavedData;)V a
	setWeatherParameters (IIZZ)V a
	shouldDiscardEntity (Lnet/minecraft/world/entity/Entity;)Z i
	shouldTickBlocksAt (J)Z a
	startTickingChunk (Lnet/minecraft/world/level/chunk/LevelChunk;)V b
	structureManager ()Lnet/minecraft/world/level/StructureManager; a
	tick (Ljava/util/function/BooleanSupplier;)V a
	tickBlock (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Block;)V d
	tickChunk (Lnet/minecraft/world/level/chunk/LevelChunk;I)V a
	tickCustomSpawners (ZZ)V a
	tickFluid (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/material/Fluid;)V a
	tickNonPassenger (Lnet/minecraft/world/entity/Entity;)V a
	tickPassenger (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/entity/Entity;)V a
	tickTime ()V b
	tryAddFreshEntityWithPassengers (Lnet/minecraft/world/entity/Entity;)Z e
	unload (Lnet/minecraft/world/level/chunk/LevelChunk;)V a
	updateNeighborsAt (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Block;)V a
	updateNeighborsAtExceptFromFacing (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Block;Lnet/minecraft/core/Direction;)V a
	updateSleepingPlayerList ()V e
	wakeUpAllPlayers ()V ap
net/minecraft/server/level/ServerLevel$EntityCallbacks aif$a
	onCreated (Ljava/lang/Object;)V g
	onCreated (Lnet/minecraft/world/entity/Entity;)V a
	onDestroyed (Ljava/lang/Object;)V f
	onDestroyed (Lnet/minecraft/world/entity/Entity;)V b
	onSectionChange (Ljava/lang/Object;)V a
	onSectionChange (Lnet/minecraft/world/entity/Entity;)V g
	onTickingEnd (Ljava/lang/Object;)V d
	onTickingEnd (Lnet/minecraft/world/entity/Entity;)V d
	onTickingStart (Ljava/lang/Object;)V e
	onTickingStart (Lnet/minecraft/world/entity/Entity;)V c
	onTrackingEnd (Ljava/lang/Object;)V b
	onTrackingEnd (Lnet/minecraft/world/entity/Entity;)V f
	onTrackingStart (Ljava/lang/Object;)V c
	onTrackingStart (Lnet/minecraft/world/entity/Entity;)V e
net/minecraft/server/level/ServerPlayer aig
	LOGGER b
	NEUTRAL_MOB_DEATH_NOTIFICATION_RADII_XZ cl
	NEUTRAL_MOB_DEATH_NOTIFICATION_RADII_Y cm
	advancements cn
	allowsListing cU
	camera cD
	canChatColor cB
	chatSession cY
	chatVisibility cA
	connection c
	containerCounter cZ
	containerListener cX
	containerSynchronizer cW
	disconnected cJ
	enteredLavaOnVehiclePosition cM
	enteredNetherPosition cL
	gameMode e
	isChangingDimension cE
	lastActionTime cC
	lastFoodSaturationZero cx
	lastRecordedAirLevel cr
	lastRecordedArmor cs
	lastRecordedExperience cu
	lastRecordedFoodLevel cq
	lastRecordedHealthAndAbsorption cp
	lastRecordedLevel ct
	lastSectionPos cN
	lastSentExp cy
	lastSentFood cw
	lastSentHealth cv
	latency f
	levitationStartPos cH
	levitationStartTime cI
	recipeBook cG
	respawnAngle cR
	respawnDimension cO
	respawnForced cQ
	respawnPosition cP
	seenCredits cF
	server d
	spawnInvulnerableTime cz
	startingToFallPosition cK
	stats co
	textFilter cS
	textFilteringEnabled cT
	wardenSpawnTracker cV
	wonGame g
	acceptsChatMessages ()Z gq
	acceptsSystemMessages (Z)Z v
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	allowsListing ()Z V
	attack (Lnet/minecraft/world/entity/Entity;)V d
	awardKillScore (Lnet/minecraft/world/entity/Entity;ILnet/minecraft/world/damagesource/DamageSource;)V a
	awardRecipes (Ljava/util/Collection;)I a
	awardRecipesByKey ([Lnet/minecraft/resources/ResourceLocation;)V a
	awardStat (Lnet/minecraft/stats/Stat;I)V a
	bedBlocked (Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;)Z b
	bedInRange (Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;)Z a
	broadcastToPlayer (Lnet/minecraft/server/level/ServerPlayer;)Z a
	calculateGameModeForNewPlayer (Lnet/minecraft/world/level/GameType;)Lnet/minecraft/world/level/GameType; b
	canChatInColor ()Z z
	canHarmPlayer (Lnet/minecraft/world/entity/player/Player;)Z a
	changeDimension (Lnet/minecraft/server/level/ServerLevel;)Lnet/minecraft/world/entity/Entity; b
	checkFallDamage (DZLnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/BlockPos;)V a
	closeContainer ()V q
	completeUsingItem ()V Z_
	createEndPlatform (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;)V a
	createItemCooldowns ()Lnet/minecraft/world/item/ItemCooldowns; k
	crit (Lnet/minecraft/world/entity/Entity;)V a
	die (Lnet/minecraft/world/damagesource/DamageSource;)V a
	disconnect ()V s
	dismountTo (DDD)V a
	displayClientMessage (Lnet/minecraft/network/chat/Component;Z)V a
	doCheckFallDamage (DDDZ)V a
	doCloseContainer ()V r
	doTick ()V m
	drop (Lnet/minecraft/world/item/ItemStack;ZZ)Lnet/minecraft/world/entity/item/ItemEntity; a
	drop (Z)Z a
	findDimensionEntryPoint (Lnet/minecraft/server/level/ServerLevel;)Lnet/minecraft/world/level/portal/PortalInfo; a
	fudgeSpawnLocation (Lnet/minecraft/server/level/ServerLevel;)V d
	getAddEntityPacket ()Lnet/minecraft/network/protocol/Packet; S
	getAdvancements ()Lnet/minecraft/server/PlayerAdvancements; M
	getCamera ()Lnet/minecraft/world/entity/Entity; G
	getChatSession ()Lnet/minecraft/network/chat/RemoteChatSession; X
	getChatVisibility ()Lnet/minecraft/world/entity/player/ChatVisiblity; A
	getCoprime (I)I u
	getExitPortal (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;ZLnet/minecraft/world/level/border/WorldBorder;)Ljava/util/Optional; a
	getIpAddress ()Ljava/lang/String; y
	getLastActionTime ()J I
	getLastSectionPos ()Lnet/minecraft/core/SectionPos; R
	getPermissionLevel ()I B
	getRecipeBook ()Lnet/minecraft/stats/ServerRecipeBook; E
	getRespawnAngle ()F O
	getRespawnDimension ()Lnet/minecraft/resources/ResourceKey; P
	getRespawnPosition ()Lnet/minecraft/core/BlockPos; N
	getStats ()Lnet/minecraft/stats/ServerStatsCounter; D
	getTabListDisplayName ()Lnet/minecraft/network/chat/Component; J
	getTextFilter ()Lnet/minecraft/server/network/TextFilter; T
	getWardenSpawnTracker ()Ljava/util/Optional; W
	giveExperienceLevels (I)V c
	giveExperiencePoints (I)V d
	handleTeamKill (Ljava/lang/String;Ljava/lang/String;[Lnet/minecraft/world/scores/criteria/ObjectiveCriteria;)V a
	hasChangedDimension ()V L
	hasDisconnected ()Z t
	hurt (Lnet/minecraft/world/damagesource/DamageSource;F)Z a
	indicateDamage (DD)V a
	initInventoryMenu ()V h
	initMenu (Lnet/minecraft/world/inventory/AbstractContainerMenu;)V a
	isChangingDimension ()Z K
	isCreative ()Z f
	isInvulnerableTo (Lnet/minecraft/world/damagesource/DamageSource;)Z b
	isPvpAllowed ()Z go
	isReachableBedBlock (Lnet/minecraft/core/BlockPos;)Z i
	isRespawnForced ()Z Q
	isSpectator ()Z G_
	isTextFilteringEnabled ()Z U
	loadGameTypes (Lnet/minecraft/nbt/CompoundTag;)V c
	lookAt (Lnet/minecraft/commands/arguments/EntityAnchorArgument$Anchor;Lnet/minecraft/world/entity/Entity;Lnet/minecraft/commands/arguments/EntityAnchorArgument$Anchor;)V a
	lookAt (Lnet/minecraft/commands/arguments/EntityAnchorArgument$Anchor;Lnet/minecraft/world/phys/Vec3;)V a
	magicCrit (Lnet/minecraft/world/entity/Entity;)V b
	mayInteract (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)Z a
	moveTo (DDD)V d
	nextContainerCounter ()V gp
	onChangedBlock (Lnet/minecraft/core/BlockPos;)V c
	onEffectAdded (Lnet/minecraft/world/effect/MobEffectInstance;Lnet/minecraft/world/entity/Entity;)V a
	onEffectRemoved (Lnet/minecraft/world/effect/MobEffectInstance;)V a
	onEffectUpdated (Lnet/minecraft/world/effect/MobEffectInstance;ZLnet/minecraft/world/entity/Entity;)V a
	onEnchantmentPerformed (Lnet/minecraft/world/item/ItemStack;I)V a
	onEnterCombat ()V Q_
	onInsideBlock (Lnet/minecraft/world/level/block/state/BlockState;)V a
	onItemPickup (Lnet/minecraft/world/entity/item/ItemEntity;)V a
	onLeaveCombat ()V F_
	onUpdateAbilities ()V w
	openCommandBlock (Lnet/minecraft/world/level/block/entity/CommandBlockEntity;)V a
	openHorseInventory (Lnet/minecraft/world/entity/animal/horse/AbstractHorse;Lnet/minecraft/world/Container;)V a
	openItemGui (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/InteractionHand;)V a
	openMenu (Lnet/minecraft/world/MenuProvider;)Ljava/util/OptionalInt; a
	openTextEdit (Lnet/minecraft/world/level/block/entity/SignBlockEntity;Z)V a
	playNotifySound (Lnet/minecraft/sounds/SoundEvent;Lnet/minecraft/sounds/SoundSource;FF)V a
	processPortalCooldown ()V H
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	readPlayerMode (Lnet/minecraft/nbt/CompoundTag;Ljava/lang/String;)Lnet/minecraft/world/level/GameType; a
	resetFallDistance ()V n
	resetLastActionTime ()V C
	resetRecipes (Ljava/util/Collection;)I b
	resetSentInfo ()V u
	resetStat (Lnet/minecraft/stats/Stat;)V a
	restoreFrom (Lnet/minecraft/server/level/ServerPlayer;Z)V a
	sendChatMessage (Lnet/minecraft/network/chat/OutgoingChatMessage;ZLnet/minecraft/network/chat/ChatType$Bound;)V a
	sendMerchantOffers (ILnet/minecraft/world/item/trading/MerchantOffers;IIZZ)V a
	sendServerStatus (Lnet/minecraft/network/protocol/status/ServerStatus;)V a
	sendSystemMessage (Lnet/minecraft/network/chat/Component;)V a
	sendSystemMessage (Lnet/minecraft/network/chat/Component;Z)V b
	sendTexturePack (Ljava/lang/String;Ljava/lang/String;ZLnet/minecraft/network/chat/Component;)V a
	serverLevel ()Lnet/minecraft/server/level/ServerLevel; x
	setCamera (Lnet/minecraft/world/entity/Entity;)V c
	setChatSession (Lnet/minecraft/network/chat/RemoteChatSession;)V a
	setExperienceLevels (I)V b
	setExperiencePoints (I)V a
	setGameMode (Lnet/minecraft/world/level/GameType;)Z a
	setLastSectionPos (Lnet/minecraft/core/SectionPos;)V a
	setPlayerInput (FFZZ)V a
	setRespawnPosition (Lnet/minecraft/resources/ResourceKey;Lnet/minecraft/core/BlockPos;FZZ)V a
	setServerLevel (Lnet/minecraft/server/level/ServerLevel;)V c
	shouldFilterMessageTo (Lnet/minecraft/server/level/ServerPlayer;)Z b
	startRiding (Lnet/minecraft/world/entity/Entity;Z)Z a
	startSleepInBed (Lnet/minecraft/core/BlockPos;)Lcom/mojang/datafixers/util/Either; a
	startSleeping (Lnet/minecraft/core/BlockPos;)V b
	stopRiding ()V Y
	stopSleepInBed (ZZ)V a
	storeGameTypes (Lnet/minecraft/nbt/CompoundTag;)V k
	swing (Lnet/minecraft/world/InteractionHand;)V a
	take (Lnet/minecraft/world/entity/Entity;I)V a
	teleportRelative (DDD)V c
	teleportTo (DDD)V b
	teleportTo (Lnet/minecraft/server/level/ServerLevel;DDDFF)V a
	teleportTo (Lnet/minecraft/server/level/ServerLevel;DDDLjava/util/Set;FF)Z a
	tellNeutralMobsThatIDied ()V gn
	tick ()V l
	trackChunk (Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/network/protocol/Packet;)V a
	trackEnteredOrExitedLavaOnVehicle ()V p
	trackStartFallingPosition ()V o
	triggerDimensionChangeTriggers (Lnet/minecraft/server/level/ServerLevel;)V e
	triggerRecipeCrafted (Lnet/minecraft/world/item/crafting/Recipe;Ljava/util/List;)V a
	untrackChunk (Lnet/minecraft/world/level/ChunkPos;)V a
	updateInvisibilityStatus ()V F
	updateOptions (Lnet/minecraft/network/protocol/game/ServerboundClientInformationPacket;)V a
	updateScoreForCriteria (Lnet/minecraft/world/scores/criteria/ObjectiveCriteria;I)V a
	updateUsingItem (Lnet/minecraft/world/item/ItemStack;)V a
net/minecraft/server/level/ServerPlayerGameMode aih
	LOGGER a
	delayedDestroyPos k
	delayedTickStart l
	destroyPos h
	destroyProgressStart g
	gameModeForPlayer b
	gameTicks i
	hasDelayedDestroy j
	isDestroyingBlock f
	lastSentState m
	level c
	player d
	previousGameModeForPlayer e
	changeGameModeForPlayer (Lnet/minecraft/world/level/GameType;)Z a
	debugLogging (Lnet/minecraft/core/BlockPos;ZILjava/lang/String;)V a
	destroyAndAck (Lnet/minecraft/core/BlockPos;ILjava/lang/String;)V a
	destroyBlock (Lnet/minecraft/core/BlockPos;)Z a
	getGameModeForPlayer ()Lnet/minecraft/world/level/GameType; b
	getPreviousGameModeForPlayer ()Lnet/minecraft/world/level/GameType; c
	handleBlockBreakAction (Lnet/minecraft/core/BlockPos;Lnet/minecraft/network/protocol/game/ServerboundPlayerActionPacket$Action;Lnet/minecraft/core/Direction;II)V a
	incrementDestroyProgress (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/BlockPos;I)F a
	isCreative ()Z e
	isSurvival ()Z d
	setGameModeForPlayer (Lnet/minecraft/world/level/GameType;Lnet/minecraft/world/level/GameType;)V a
	setLevel (Lnet/minecraft/server/level/ServerLevel;)V a
	tick ()V a
	useItem (Lnet/minecraft/server/level/ServerPlayer;Lnet/minecraft/world/level/Level;Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResult; a
	useItemOn (Lnet/minecraft/server/level/ServerPlayer;Lnet/minecraft/world/level/Level;Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/InteractionHand;Lnet/minecraft/world/phys/BlockHitResult;)Lnet/minecraft/world/InteractionResult; a
net/minecraft/server/level/ThreadedLevelLightEngine aii
	DEFAULT_BATCH_SIZE a
	LOGGER d
	chunkMap g
	lightTasks f
	scheduled j
	sorterMailbox h
	taskMailbox e
	taskPerBatch i
	addTask (IILjava/util/function/IntSupplier;Lnet/minecraft/server/level/ThreadedLevelLightEngine$TaskType;Ljava/lang/Runnable;)V a
	addTask (IILnet/minecraft/server/level/ThreadedLevelLightEngine$TaskType;Ljava/lang/Runnable;)V a
	checkBlock (Lnet/minecraft/core/BlockPos;)V a
	initializeLight (Lnet/minecraft/world/level/chunk/ChunkAccess;Z)Ljava/util/concurrent/CompletableFuture; a
	lightChunk (Lnet/minecraft/world/level/chunk/ChunkAccess;Z)Ljava/util/concurrent/CompletableFuture; b
	propagateLightSources (Lnet/minecraft/world/level/ChunkPos;)V b
	queueSectionData (Lnet/minecraft/world/level/LightLayer;Lnet/minecraft/core/SectionPos;Lnet/minecraft/world/level/chunk/DataLayer;)V a
	retainData (Lnet/minecraft/world/level/ChunkPos;Z)V b
	runLightUpdates ()I a
	runUpdate ()V f
	setLightEnabled (Lnet/minecraft/world/level/ChunkPos;Z)V a
	tryScheduleUpdate ()V b
	updateChunkStatus (Lnet/minecraft/world/level/ChunkPos;)V a
	updateSectionStatus (Lnet/minecraft/core/SectionPos;Z)V a
net/minecraft/server/level/ThreadedLevelLightEngine$TaskType aii$a
	$VALUES c
	POST_UPDATE b
	PRE_UPDATE a
	$values ()[Lnet/minecraft/server/level/ThreadedLevelLightEngine$TaskType; a
net/minecraft/server/level/Ticket aij
	createdTick d
	key c
	ticketLevel b
	type a
	compareTo (Lnet/minecraft/server/level/Ticket;)I a
	getTicketLevel ()I b
	getType ()Lnet/minecraft/server/level/TicketType; a
	setCreatedTick (J)V a
	timedOut (J)Z b
net/minecraft/server/level/TicketType aik
	DRAGON b
	FORCED d
	LIGHT e
	PLAYER c
	PORTAL f
	POST_TELEPORT g
	START a
	UNKNOWN h
	comparator j
	name i
	timeout k
	create (Ljava/lang/String;Ljava/util/Comparator;)Lnet/minecraft/server/level/TicketType; a
	create (Ljava/lang/String;Ljava/util/Comparator;I)Lnet/minecraft/server/level/TicketType; a
	getComparator ()Ljava/util/Comparator; a
	timeout ()J b
net/minecraft/server/level/TickingTracker ail
	INITIAL_TICKET_LIST_CAPACITY c
	MAX_LEVEL a
	chunks b
	tickets d
	addTicket (JLnet/minecraft/server/level/Ticket;)V a
	addTicket (Lnet/minecraft/server/level/TicketType;Lnet/minecraft/world/level/ChunkPos;ILjava/lang/Object;)V a
	getLevel (J)I c
	getLevel (Lnet/minecraft/world/level/ChunkPos;)I a
	getLevelFromSource (J)I b
	getTicketDebugString (J)Ljava/lang/String; d
	getTicketLevelAt (Lnet/minecraft/util/SortedArraySet;)I a
	getTickets (J)Lnet/minecraft/util/SortedArraySet; g
	removeTicket (JLnet/minecraft/server/level/Ticket;)V b
	removeTicket (Lnet/minecraft/server/level/TicketType;Lnet/minecraft/world/level/ChunkPos;ILjava/lang/Object;)V b
	replacePlayerTicketsLevel (I)V a
	runAllUpdates ()V a
	setLevel (JI)V a
net/minecraft/server/level/WorldGenRegion aim
	LOGGER a
	WORLDGEN_REGION_RANDOM t
	biomeManager l
	blockTicks j
	cache b
	center c
	currentlyGenerating r
	dimensionType i
	firstPos m
	fluidTicks k
	generatingStatus p
	lastPos n
	level e
	levelData g
	random h
	seed f
	size d
	structureManager o
	subTickCount s
	writeRadiusCutoff q
	addFreshEntity (Lnet/minecraft/world/entity/Entity;)Z b
	addParticle (Lnet/minecraft/core/particles/ParticleOptions;DDDDDD)V a
	destroyBlock (Lnet/minecraft/core/BlockPos;ZLnet/minecraft/world/entity/Entity;I)Z a
	dimensionType ()Lnet/minecraft/world/level/dimension/DimensionType; x_
	enabledFeatures ()Lnet/minecraft/world/flag/FeatureFlagSet; G
	ensureCanWrite (Lnet/minecraft/core/BlockPos;)Z f_
	gameEvent (Lnet/minecraft/world/level/gameevent/GameEvent;Lnet/minecraft/world/phys/Vec3;Lnet/minecraft/world/level/gameevent/GameEvent$Context;)V a
	getBiomeManager ()Lnet/minecraft/world/level/biome/BiomeManager; z_
	getBlockEntity (Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/entity/BlockEntity; c_
	getBlockState (Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a_
	getBlockTicks ()Lnet/minecraft/world/ticks/LevelTickAccess; L
	getCenter ()Lnet/minecraft/world/level/ChunkPos; a
	getChunk (II)Lnet/minecraft/world/level/chunk/ChunkAccess; a
	getChunk (IILnet/minecraft/world/level/chunk/ChunkStatus;Z)Lnet/minecraft/world/level/chunk/ChunkAccess; a
	getChunkSource ()Lnet/minecraft/world/level/chunk/ChunkSource; J
	getCurrentDifficultyAt (Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/DifficultyInstance; d_
	getEntities (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/phys/AABB;Ljava/util/function/Predicate;)Ljava/util/List; a
	getEntities (Lnet/minecraft/world/level/entity/EntityTypeTest;Lnet/minecraft/world/phys/AABB;Ljava/util/function/Predicate;)Ljava/util/List; a
	getFluidState (Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/material/FluidState; b_
	getFluidTicks ()Lnet/minecraft/world/ticks/LevelTickAccess; K
	getHeight ()I D_
	getHeight (Lnet/minecraft/world/level/levelgen/Heightmap$Types;II)I a
	getLevel ()Lnet/minecraft/server/level/ServerLevel; C
	getLevelData ()Lnet/minecraft/world/level/storage/LevelData; u_
	getLightEngine ()Lnet/minecraft/world/level/lighting/LevelLightEngine; s_
	getMinBuildHeight ()I C_
	getNearestPlayer (DDDDLjava/util/function/Predicate;)Lnet/minecraft/world/entity/player/Player; a
	getRandom ()Lnet/minecraft/util/RandomSource; y_
	getSeaLevel ()I t_
	getSeed ()J A
	getServer ()Lnet/minecraft/server/MinecraftServer; n
	getShade (Lnet/minecraft/core/Direction;Z)F a
	getSkyDarken ()I v_
	getUncachedNoiseBiome (III)Lnet/minecraft/core/Holder; a
	getWorldBorder ()Lnet/minecraft/world/level/border/WorldBorder; w_
	hasChunk (II)Z b
	isClientSide ()Z r_
	isFluidAtPosition (Lnet/minecraft/core/BlockPos;Ljava/util/function/Predicate;)Z b
	isOldChunkAround (Lnet/minecraft/world/level/ChunkPos;I)Z a
	isStateAtPosition (Lnet/minecraft/core/BlockPos;Ljava/util/function/Predicate;)Z a
	levelEvent (Lnet/minecraft/world/entity/player/Player;ILnet/minecraft/core/BlockPos;I)V a
	markPosForPostprocessing (Lnet/minecraft/core/BlockPos;)V f
	nextSubTickCount ()J A_
	playSound (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/core/BlockPos;Lnet/minecraft/sounds/SoundEvent;Lnet/minecraft/sounds/SoundSource;FF)V a
	players ()Ljava/util/List; v
	registryAccess ()Lnet/minecraft/core/RegistryAccess; B_
	removeBlock (Lnet/minecraft/core/BlockPos;Z)Z a
	setBlock (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;II)Z a
	setCurrentlyGenerating (Ljava/util/function/Supplier;)V a
net/minecraft/server/level/progress/ChunkProgressListener aio
	onStatusChange (Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/world/level/chunk/ChunkStatus;)V a
	start ()V a
	stop ()V b
	updateSpawnPos (Lnet/minecraft/world/level/ChunkPos;)V a
net/minecraft/server/level/progress/ChunkProgressListenerFactory aip
net/minecraft/server/level/progress/LoggerChunkProgressListener aiq
	LOGGER a
	count c
	maxCount b
	nextTickTime e
	startTime d
	getProgress ()I c
	onStatusChange (Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/world/level/chunk/ChunkStatus;)V a
	start ()V a
	stop ()V b
	updateSpawnPos (Lnet/minecraft/world/level/ChunkPos;)V a
net/minecraft/server/level/progress/ProcessorChunkProgressListener air
	delegate a
	mailbox b
	createStarted (Lnet/minecraft/server/level/progress/ChunkProgressListener;Ljava/util/concurrent/Executor;)Lnet/minecraft/server/level/progress/ProcessorChunkProgressListener; a
	onStatusChange (Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/world/level/chunk/ChunkStatus;)V a
	start ()V a
	stop ()V b
	updateSpawnPos (Lnet/minecraft/world/level/ChunkPos;)V a
net/minecraft/server/level/progress/StoringChunkProgressListener ais
	delegate a
	diameter f
	fullDiameter d
	radius e
	spawnPos c
	started g
	statuses b
	getDiameter ()I d
	getFullDiameter ()I c
	getProgress ()I e
	getStatus (II)Lnet/minecraft/world/level/chunk/ChunkStatus; a
	onStatusChange (Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/world/level/chunk/ChunkStatus;)V a
	start ()V a
	stop ()V b
	updateSpawnPos (Lnet/minecraft/world/level/ChunkPos;)V a
net/minecraft/server/network/FilteredText aiu
	EMPTY a
	mask c
	raw b
	filtered ()Ljava/lang/String; a
	filteredOrEmpty ()Ljava/lang/String; b
	fullyFiltered (Ljava/lang/String;)Lnet/minecraft/server/network/FilteredText; b
	isFiltered ()Z c
	mask ()Lnet/minecraft/network/chat/FilterMask; e
	passThrough (Ljava/lang/String;)Lnet/minecraft/server/network/FilteredText; a
	raw ()Ljava/lang/String; d
net/minecraft/server/network/LegacyQueryHandler aiv
	FAKE_PROTOCOL_VERSION a
	LOGGER b
	serverConnectionListener c
	createReply (Ljava/lang/String;)Lio/netty/buffer/ByteBuf; a
	sendFlushAndClose (Lio/netty/channel/ChannelHandlerContext;Lio/netty/buffer/ByteBuf;)V a
net/minecraft/server/network/MemoryServerHandshakePacketListenerImpl aiw
	connection b
	server a
	handleIntention (Lnet/minecraft/network/protocol/handshake/ClientIntentionPacket;)V a
	isAcceptingMessages ()Z a
	onDisconnect (Lnet/minecraft/network/chat/Component;)V a
net/minecraft/server/network/ServerConnectionListener aix
	LOGGER d
	SERVER_EPOLL_EVENT_GROUP b
	SERVER_EVENT_GROUP a
	channels f
	connections g
	running c
	server e
	getConnections ()Ljava/util/List; e
	getServer ()Lnet/minecraft/server/MinecraftServer; d
	startMemoryChannel ()Ljava/net/SocketAddress; a
	startTcpServerListener (Ljava/net/InetAddress;I)V a
	stop ()V b
	tick ()V c
net/minecraft/server/network/ServerConnectionListener$LatencySimulator aix$a
	TIMER a
	delay b
	jitter c
	queuedMessages d
	delayDownstream (Lio/netty/channel/ChannelHandlerContext;Ljava/lang/Object;)V a
	onTimeout (Lio/netty/util/Timeout;)V a
net/minecraft/server/network/ServerConnectionListener$LatencySimulator$DelayedMessage aix$a$a
	ctx a
	msg b
net/minecraft/server/network/ServerGamePacketListenerImpl aiy
	CHAT_VALIDATION_FAILED g
	LATENCY_CHECK_INTERVAL d
	LOGGER c
	MAX_INTERACTION_DISTANCE a
	NO_BLOCK_UPDATES_TO_ACK e
	TRACKED_MESSAGE_DISCONNECT_THRESHOLD f
	aboveGroundTickCount H
	aboveGroundVehicleTickCount J
	ackBlockChangesUpTo k
	awaitingPositionFromClient D
	awaitingTeleport E
	awaitingTeleportTime F
	chatMessageChain R
	chatSession N
	chatSpamTickCount o
	clientIsFloating G
	clientVehicleIsFloating I
	connection h
	dropSpamTickCount p
	firstGoodX q
	firstGoodY r
	firstGoodZ s
	keepAliveChallenge n
	keepAlivePending m
	keepAliveTime l
	knownMovePacketCount L
	lastChatTimeStamp M
	lastGoodX t
	lastGoodY u
	lastGoodZ v
	lastSeenMessages P
	lastVehicle w
	messageSignatureCache Q
	player b
	receivedMovePacketCount K
	server i
	signedMessageDecoder O
	tickCount j
	vehicleFirstGoodX x
	vehicleFirstGoodY y
	vehicleFirstGoodZ z
	vehicleLastGoodX A
	vehicleLastGoodY B
	vehicleLastGoodZ C
	ackBlockChangesUpTo (I)V a
	addPendingMessage (Lnet/minecraft/network/chat/PlayerChatMessage;)V a
	broadcastChatMessage (Lnet/minecraft/network/chat/PlayerChatMessage;)V b
	clampHorizontal (D)D a
	clampVertical (D)D b
	collectSignedArguments (Lnet/minecraft/network/protocol/game/ServerboundChatCommandPacket;Lnet/minecraft/network/chat/SignableCommand;Lnet/minecraft/network/chat/LastSeenMessages;)Ljava/util/Map; a
	containsInvalidValues (DDDFF)Z b
	detectRateSpam ()V h
	disconnect (Lnet/minecraft/network/chat/Component;)V b
	filterTextPacket (Ljava/lang/Object;Ljava/util/function/BiFunction;)Ljava/util/concurrent/CompletableFuture; a
	filterTextPacket (Ljava/lang/String;)Ljava/util/concurrent/CompletableFuture; a
	filterTextPacket (Ljava/util/List;)Ljava/util/concurrent/CompletableFuture; a
	getPlayer ()Lnet/minecraft/server/level/ServerPlayer; f
	getRemoteAddress ()Ljava/net/SocketAddress; e
	getSignedMessage (Lnet/minecraft/network/protocol/game/ServerboundChatPacket;Lnet/minecraft/network/chat/LastSeenMessages;)Lnet/minecraft/network/chat/PlayerChatMessage; a
	handleAcceptTeleportPacket (Lnet/minecraft/network/protocol/game/ServerboundAcceptTeleportationPacket;)V a
	handleAnimate (Lnet/minecraft/network/protocol/game/ServerboundSwingPacket;)V a
	handleBlockEntityTagQuery (Lnet/minecraft/network/protocol/game/ServerboundBlockEntityTagQuery;)V a
	handleChangeDifficulty (Lnet/minecraft/network/protocol/game/ServerboundChangeDifficultyPacket;)V a
	handleChat (Lnet/minecraft/network/protocol/game/ServerboundChatPacket;)V a
	handleChatAck (Lnet/minecraft/network/protocol/game/ServerboundChatAckPacket;)V a
	handleChatCommand (Lnet/minecraft/network/protocol/game/ServerboundChatCommandPacket;)V a
	handleChatSessionUpdate (Lnet/minecraft/network/protocol/game/ServerboundChatSessionUpdatePacket;)V a
	handleClientCommand (Lnet/minecraft/network/protocol/game/ServerboundClientCommandPacket;)V a
	handleClientInformation (Lnet/minecraft/network/protocol/game/ServerboundClientInformationPacket;)V a
	handleContainerButtonClick (Lnet/minecraft/network/protocol/game/ServerboundContainerButtonClickPacket;)V a
	handleContainerClick (Lnet/minecraft/network/protocol/game/ServerboundContainerClickPacket;)V a
	handleContainerClose (Lnet/minecraft/network/protocol/game/ServerboundContainerClosePacket;)V a
	handleCustomCommandSuggestions (Lnet/minecraft/network/protocol/game/ServerboundCommandSuggestionPacket;)V a
	handleCustomPayload (Lnet/minecraft/network/protocol/game/ServerboundCustomPayloadPacket;)V a
	handleEditBook (Lnet/minecraft/network/protocol/game/ServerboundEditBookPacket;)V a
	handleEntityTagQuery (Lnet/minecraft/network/protocol/game/ServerboundEntityTagQuery;)V a
	handleInteract (Lnet/minecraft/network/protocol/game/ServerboundInteractPacket;)V a
	handleJigsawGenerate (Lnet/minecraft/network/protocol/game/ServerboundJigsawGeneratePacket;)V a
	handleKeepAlive (Lnet/minecraft/network/protocol/game/ServerboundKeepAlivePacket;)V a
	handleLockDifficulty (Lnet/minecraft/network/protocol/game/ServerboundLockDifficultyPacket;)V a
	handleMessageDecodeFailure (Lnet/minecraft/network/chat/SignedMessageChain$DecodeException;)V a
	handleMovePlayer (Lnet/minecraft/network/protocol/game/ServerboundMovePlayerPacket;)V a
	handleMoveVehicle (Lnet/minecraft/network/protocol/game/ServerboundMoveVehiclePacket;)V a
	handlePaddleBoat (Lnet/minecraft/network/protocol/game/ServerboundPaddleBoatPacket;)V a
	handlePickItem (Lnet/minecraft/network/protocol/game/ServerboundPickItemPacket;)V a
	handlePlaceRecipe (Lnet/minecraft/network/protocol/game/ServerboundPlaceRecipePacket;)V a
	handlePlayerAbilities (Lnet/minecraft/network/protocol/game/ServerboundPlayerAbilitiesPacket;)V a
	handlePlayerAction (Lnet/minecraft/network/protocol/game/ServerboundPlayerActionPacket;)V a
	handlePlayerCommand (Lnet/minecraft/network/protocol/game/ServerboundPlayerCommandPacket;)V a
	handlePlayerInput (Lnet/minecraft/network/protocol/game/ServerboundPlayerInputPacket;)V a
	handlePong (Lnet/minecraft/network/protocol/game/ServerboundPongPacket;)V a
	handleRecipeBookChangeSettingsPacket (Lnet/minecraft/network/protocol/game/ServerboundRecipeBookChangeSettingsPacket;)V a
	handleRecipeBookSeenRecipePacket (Lnet/minecraft/network/protocol/game/ServerboundRecipeBookSeenRecipePacket;)V a
	handleRenameItem (Lnet/minecraft/network/protocol/game/ServerboundRenameItemPacket;)V a
	handleResourcePackResponse (Lnet/minecraft/network/protocol/game/ServerboundResourcePackPacket;)V a
	handleSeenAdvancements (Lnet/minecraft/network/protocol/game/ServerboundSeenAdvancementsPacket;)V a
	handleSelectTrade (Lnet/minecraft/network/protocol/game/ServerboundSelectTradePacket;)V a
	handleSetBeaconPacket (Lnet/minecraft/network/protocol/game/ServerboundSetBeaconPacket;)V a
	handleSetCarriedItem (Lnet/minecraft/network/protocol/game/ServerboundSetCarriedItemPacket;)V a
	handleSetCommandBlock (Lnet/minecraft/network/protocol/game/ServerboundSetCommandBlockPacket;)V a
	handleSetCommandMinecart (Lnet/minecraft/network/protocol/game/ServerboundSetCommandMinecartPacket;)V a
	handleSetCreativeModeSlot (Lnet/minecraft/network/protocol/game/ServerboundSetCreativeModeSlotPacket;)V a
	handleSetJigsawBlock (Lnet/minecraft/network/protocol/game/ServerboundSetJigsawBlockPacket;)V a
	handleSetStructureBlock (Lnet/minecraft/network/protocol/game/ServerboundSetStructureBlockPacket;)V a
	handleSignUpdate (Lnet/minecraft/network/protocol/game/ServerboundSignUpdatePacket;)V a
	handleTeleportToEntityPacket (Lnet/minecraft/network/protocol/game/ServerboundTeleportToEntityPacket;)V a
	handleUseItem (Lnet/minecraft/network/protocol/game/ServerboundUseItemPacket;)V a
	handleUseItemOn (Lnet/minecraft/network/protocol/game/ServerboundUseItemOnPacket;)V a
	isAcceptingMessages ()Z a
	isChatMessageIllegal (Ljava/lang/String;)Z c
	isPlayerCollidingWithAnythingNew (Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/world/phys/AABB;DDD)Z a
	isSingleplayerOwner ()Z g
	noBlocksAround (Lnet/minecraft/world/entity/Entity;)Z a
	onDisconnect (Lnet/minecraft/network/chat/Component;)V a
	parseCommand (Ljava/lang/String;)Lcom/mojang/brigadier/ParseResults; b
	performChatCommand (Lnet/minecraft/network/protocol/game/ServerboundChatCommandPacket;Lnet/minecraft/network/chat/LastSeenMessages;)V a
	resetPlayerChatState (Lnet/minecraft/network/chat/RemoteChatSession;)V a
	resetPosition ()V d
	send (Lnet/minecraft/network/protocol/Packet;)V a
	send (Lnet/minecraft/network/protocol/Packet;Lnet/minecraft/network/PacketSendListener;)V a
	sendDisguisedChatMessage (Lnet/minecraft/network/chat/Component;Lnet/minecraft/network/chat/ChatType$Bound;)V a
	sendPlayerChatMessage (Lnet/minecraft/network/chat/PlayerChatMessage;Lnet/minecraft/network/chat/ChatType$Bound;)V a
	signBook (Lnet/minecraft/server/network/FilteredText;Ljava/util/List;I)V a
	teleport (DDDFF)V a
	teleport (DDDFFLjava/util/Set;)V a
	tick ()V c
	tryHandleChat (Ljava/lang/String;Ljava/time/Instant;Lnet/minecraft/network/chat/LastSeenMessages$Update;)Ljava/util/Optional; a
	unpackAndApplyLastSeen (Lnet/minecraft/network/chat/LastSeenMessages$Update;)Ljava/util/Optional; a
	updateBookContents (Ljava/util/List;I)V a
	updateBookPages (Ljava/util/List;Ljava/util/function/UnaryOperator;Lnet/minecraft/world/item/ItemStack;)V a
	updateChatOrder (Ljava/time/Instant;)Z a
	updateSignText (Lnet/minecraft/network/protocol/game/ServerboundSignUpdatePacket;Ljava/util/List;)V a
	wasBlockPlacementAttempt (Lnet/minecraft/server/level/ServerPlayer;Lnet/minecraft/world/item/ItemStack;)Z a
net/minecraft/server/network/ServerGamePacketListenerImpl$EntityInteraction aiy$a
net/minecraft/server/network/ServerHandshakePacketListenerImpl aiz
	IGNORE_STATUS_REASON a
	connection c
	server b
	handleIntention (Lnet/minecraft/network/protocol/handshake/ClientIntentionPacket;)V a
	isAcceptingMessages ()Z a
	onDisconnect (Lnet/minecraft/network/chat/Component;)V a
net/minecraft/server/network/ServerLoginPacketListenerImpl aja
	LOGGER b
	MAX_TICKS_BEFORE_LOGIN c
	RANDOM d
	UNIQUE_THREAD_ID a
	challenge e
	connection g
	delayedAcceptPlayer l
	gameProfile j
	server f
	serverId k
	state h
	tick i
	createFakeProfile (Lcom/mojang/authlib/GameProfile;)Lcom/mojang/authlib/GameProfile; a
	disconnect (Lnet/minecraft/network/chat/Component;)V b
	getUserName ()Ljava/lang/String; e
	handleAcceptedLogin ()V d
	handleCustomQueryPacket (Lnet/minecraft/network/protocol/login/ServerboundCustomQueryPacket;)V a
	handleHello (Lnet/minecraft/network/protocol/login/ServerboundHelloPacket;)V a
	handleKey (Lnet/minecraft/network/protocol/login/ServerboundKeyPacket;)V a
	isAcceptingMessages ()Z a
	isValidUsername (Ljava/lang/String;)Z a
	onDisconnect (Lnet/minecraft/network/chat/Component;)V a
	placeNewPlayer (Lnet/minecraft/server/level/ServerPlayer;)V a
	tick ()V c
net/minecraft/server/network/ServerLoginPacketListenerImpl$State aja$a
	$VALUES h
	ACCEPTED g
	AUTHENTICATING c
	DELAY_ACCEPT f
	HELLO a
	KEY b
	NEGOTIATING d
	READY_TO_ACCEPT e
	$values ()[Lnet/minecraft/server/network/ServerLoginPacketListenerImpl$State; a
net/minecraft/server/network/ServerPlayerConnection ajb
	getPlayer ()Lnet/minecraft/server/level/ServerPlayer; f
	send (Lnet/minecraft/network/protocol/Packet;)V a
net/minecraft/server/network/ServerStatusPacketListenerImpl ajc
	DISCONNECT_REASON a
	connection c
	hasRequestedStatus d
	status b
	handlePingRequest (Lnet/minecraft/network/protocol/status/ServerboundPingRequestPacket;)V a
	handleStatusRequest (Lnet/minecraft/network/protocol/status/ServerboundStatusRequestPacket;)V a
	isAcceptingMessages ()Z a
	onDisconnect (Lnet/minecraft/network/chat/Component;)V a
net/minecraft/server/network/TextFilter ajd
	DUMMY a
	join ()V a
	leave ()V b
	processMessageBundle (Ljava/util/List;)Ljava/util/concurrent/CompletableFuture; a
	processStreamMessage (Ljava/lang/String;)Ljava/util/concurrent/CompletableFuture; a
net/minecraft/server/network/TextFilterClient aje
	DEFAULT_ENDPOINT d
	LOGGER a
	THREAD_FACTORY c
	WORKER_COUNT b
	authKey k
	chatEncoder f
	chatEndpoint e
	chatIgnoreStrategy l
	joinEncoder h
	joinEndpoint g
	leaveEncoder j
	leaveEndpoint i
	workerPool m
	createContext (Lcom/mojang/authlib/GameProfile;)Lnet/minecraft/server/network/TextFilter; a
	createFromConfig (Ljava/lang/String;)Lnet/minecraft/server/network/TextFilterClient; a
	drainStream (Ljava/io/InputStream;)V a
	getEndpoint (Ljava/net/URI;Lcom/google/gson/JsonObject;Ljava/lang/String;Ljava/lang/String;)Ljava/net/URL; a
	getEndpointFromConfig (Lcom/google/gson/JsonObject;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; a
	makeRequest (Lcom/google/gson/JsonObject;Ljava/net/URL;)Ljava/net/HttpURLConnection; c
	parseMask (Ljava/lang/String;Lcom/google/gson/JsonArray;Lnet/minecraft/server/network/TextFilterClient$IgnoreStrategy;)Lnet/minecraft/network/chat/FilterMask; a
	processJoinOrLeave (Lcom/mojang/authlib/GameProfile;Ljava/net/URL;Lnet/minecraft/server/network/TextFilterClient$JoinOrLeaveEncoder;Ljava/util/concurrent/Executor;)V a
	processRequest (Lcom/google/gson/JsonObject;Ljava/net/URL;)V b
	processRequestResponse (Lcom/google/gson/JsonObject;Ljava/net/URL;)Lcom/google/gson/JsonObject; a
	requestMessageProcessing (Lcom/mojang/authlib/GameProfile;Ljava/lang/String;Lnet/minecraft/server/network/TextFilterClient$IgnoreStrategy;Ljava/util/concurrent/Executor;)Ljava/util/concurrent/CompletableFuture; a
net/minecraft/server/network/TextFilterClient$IgnoreStrategy aje$a
	IGNORE_FULLY_FILTERED b
	NEVER_IGNORE a
net/minecraft/server/network/TextFilterClient$JoinOrLeaveEncoder aje$b
net/minecraft/server/network/TextFilterClient$MessageEncoder aje$c
net/minecraft/server/network/TextFilterClient$PlayerContext aje$d
	profile c
	streamExecutor d
	join ()V a
	leave ()V b
	processMessageBundle (Ljava/util/List;)Ljava/util/concurrent/CompletableFuture; a
	processStreamMessage (Ljava/lang/String;)Ljava/util/concurrent/CompletableFuture; a
net/minecraft/server/network/TextFilterClient$RequestFailedException aje$e
net/minecraft/server/packs/AbstractPackResources ajh
	LOGGER a
	isBuiltin e
	name d
	getMetadataFromStream (Lnet/minecraft/server/packs/metadata/MetadataSectionSerializer;Ljava/io/InputStream;)Ljava/lang/Object; a
	getMetadataSection (Lnet/minecraft/server/packs/metadata/MetadataSectionSerializer;)Ljava/lang/Object; a
	isBuiltin ()Z b
	packId ()Ljava/lang/String; a
net/minecraft/server/packs/BuiltInMetadata aji
	EMPTY a
	values b
	get (Lnet/minecraft/server/packs/metadata/MetadataSectionSerializer;)Ljava/lang/Object; a
	of ()Lnet/minecraft/server/packs/BuiltInMetadata; a
	of (Lnet/minecraft/server/packs/metadata/MetadataSectionSerializer;Ljava/lang/Object;)Lnet/minecraft/server/packs/BuiltInMetadata; a
	of (Lnet/minecraft/server/packs/metadata/MetadataSectionSerializer;Ljava/lang/Object;Lnet/minecraft/server/packs/metadata/MetadataSectionSerializer;Ljava/lang/Object;)Lnet/minecraft/server/packs/BuiltInMetadata; a
net/minecraft/server/packs/FeatureFlagsMetadataSection ajj
	CODEC c
	TYPE a
	flags b
	flags ()Lnet/minecraft/world/flag/FeatureFlagSet; a
net/minecraft/server/packs/FilePackResources ajk
	LOGGER d
	SPLITTER a
	failedToLoad g
	file e
	zipFile f
	getNamespaces (Lnet/minecraft/server/packs/PackType;)Ljava/util/Set; a
	getOrCreateZipFile ()Ljava/util/zip/ZipFile; c
	getPathFromLocation (Lnet/minecraft/server/packs/PackType;Lnet/minecraft/resources/ResourceLocation;)Ljava/lang/String; b
	getResource (Ljava/lang/String;)Lnet/minecraft/server/packs/resources/IoSupplier; a
	getResource (Lnet/minecraft/server/packs/PackType;Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/server/packs/resources/IoSupplier; a
	getRootResource ([Ljava/lang/String;)Lnet/minecraft/server/packs/resources/IoSupplier; a
	listResources (Lnet/minecraft/server/packs/PackType;Ljava/lang/String;Ljava/lang/String;Lnet/minecraft/server/packs/PackResources$ResourceOutput;)V a
net/minecraft/server/packs/PackResources ajl
	METADATA_EXTENSION b
	PACK_META c
	getMetadataSection (Lnet/minecraft/server/packs/metadata/MetadataSectionSerializer;)Ljava/lang/Object; a
	getNamespaces (Lnet/minecraft/server/packs/PackType;)Ljava/util/Set; a
	getResource (Lnet/minecraft/server/packs/PackType;Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/server/packs/resources/IoSupplier; a
	getRootResource ([Ljava/lang/String;)Lnet/minecraft/server/packs/resources/IoSupplier; a
	isBuiltin ()Z b
	listResources (Lnet/minecraft/server/packs/PackType;Ljava/lang/String;Ljava/lang/String;Lnet/minecraft/server/packs/PackResources$ResourceOutput;)V a
	packId ()Ljava/lang/String; a
net/minecraft/server/packs/PackResources$ResourceOutput ajl$a
net/minecraft/server/packs/PackType ajm
	$VALUES d
	CLIENT_RESOURCES a
	SERVER_DATA b
	directory c
	$values ()[Lnet/minecraft/server/packs/PackType; b
	getDirectory ()Ljava/lang/String; a
net/minecraft/server/packs/PathPackResources ajn
	LOGGER a
	PATH_JOINER d
	root e
	getNamespaces (Lnet/minecraft/server/packs/PackType;)Ljava/util/Set; a
	getResource (Lnet/minecraft/resources/ResourceLocation;Ljava/nio/file/Path;)Lnet/minecraft/server/packs/resources/IoSupplier; a
	getResource (Lnet/minecraft/server/packs/PackType;Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/server/packs/resources/IoSupplier; a
	getRootResource ([Ljava/lang/String;)Lnet/minecraft/server/packs/resources/IoSupplier; a
	listPath (Ljava/lang/String;Ljava/nio/file/Path;Ljava/util/List;Lnet/minecraft/server/packs/PackResources$ResourceOutput;)V a
	listResources (Lnet/minecraft/server/packs/PackType;Ljava/lang/String;Ljava/lang/String;Lnet/minecraft/server/packs/PackResources$ResourceOutput;)V a
	returnFileIfExists (Ljava/nio/file/Path;)Lnet/minecraft/server/packs/resources/IoSupplier; b
	validatePath (Ljava/nio/file/Path;)Z a
net/minecraft/server/packs/VanillaPackResources ajo
	LOGGER a
	metadata d
	namespaces e
	pathsForType g
	rootPaths f
	asProvider ()Lnet/minecraft/server/packs/resources/ResourceProvider; c
	getMetadataSection (Lnet/minecraft/server/packs/metadata/MetadataSectionSerializer;)Ljava/lang/Object; a
	getNamespaces (Lnet/minecraft/server/packs/PackType;)Ljava/util/Set; a
	getResource (Lnet/minecraft/server/packs/PackType;Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/server/packs/resources/IoSupplier; a
	getResources (Lnet/minecraft/server/packs/PackResources$ResourceOutput;Ljava/lang/String;Ljava/nio/file/Path;Ljava/util/List;)V a
	getRootResource ([Ljava/lang/String;)Lnet/minecraft/server/packs/resources/IoSupplier; a
	isBuiltin ()Z b
	listRawPaths (Lnet/minecraft/server/packs/PackType;Lnet/minecraft/resources/ResourceLocation;Ljava/util/function/Consumer;)V a
	listResources (Lnet/minecraft/server/packs/PackType;Ljava/lang/String;Ljava/lang/String;Lnet/minecraft/server/packs/PackResources$ResourceOutput;)V a
	packId ()Ljava/lang/String; a
net/minecraft/server/packs/VanillaPackResourcesBuilder ajp
	LOGGER b
	ROOT_DIR_BY_TYPE c
	developmentConfig a
	metadata f
	namespaces g
	pathsForType e
	rootPaths d
	applyDevelopmentConfig ()Lnet/minecraft/server/packs/VanillaPackResourcesBuilder; b
	build ()Lnet/minecraft/server/packs/VanillaPackResources; c
	copyAndReverse (Ljava/util/Collection;)Ljava/util/List; a
	exposeNamespace ([Ljava/lang/String;)Lnet/minecraft/server/packs/VanillaPackResourcesBuilder; a
	pushAssetPath (Lnet/minecraft/server/packs/PackType;Ljava/nio/file/Path;)Lnet/minecraft/server/packs/VanillaPackResourcesBuilder; a
	pushClasspathResources (Lnet/minecraft/server/packs/PackType;Ljava/lang/Class;)Lnet/minecraft/server/packs/VanillaPackResourcesBuilder; a
	pushJarResources ()Lnet/minecraft/server/packs/VanillaPackResourcesBuilder; a
	pushPathForType (Lnet/minecraft/server/packs/PackType;Ljava/nio/file/Path;)V b
	pushRootPath (Ljava/nio/file/Path;)V c
	pushUniversalPath (Ljava/nio/file/Path;)Lnet/minecraft/server/packs/VanillaPackResourcesBuilder; a
	safeGetPath (Ljava/net/URI;)Ljava/nio/file/Path; a
	setMetadata (Lnet/minecraft/server/packs/BuiltInMetadata;)Lnet/minecraft/server/packs/VanillaPackResourcesBuilder; a
	validateDirPath (Ljava/nio/file/Path;)Z b
net/minecraft/server/packs/linkfs/DummyFileAttributes ajq
	EPOCH a
net/minecraft/server/packs/linkfs/LinkFSFileStore ajr
	name a
net/minecraft/server/packs/linkfs/LinkFSPath ajs
	DIRECTORY_ATTRIBUTES a
	FILE_ATTRIBUTES b
	PATH_COMPARATOR c
	fileSystem e
	name d
	parent f
	pathContents i
	pathString h
	pathToRoot g
	createRelativePath (Lnet/minecraft/server/packs/linkfs/LinkFSPath;Ljava/lang/String;)Lnet/minecraft/server/packs/linkfs/LinkFSPath; a
	exists ()Z g
	getBasicAttributeView ()Ljava/nio/file/attribute/BasicFileAttributeView; j
	getBasicAttributes ()Ljava/nio/file/attribute/BasicFileAttributes; k
	getDirectoryContents ()Lnet/minecraft/server/packs/linkfs/PathContents$DirectoryContents; i
	getFileName ()Lnet/minecraft/server/packs/linkfs/LinkFSPath; c
	getFileSystem ()Lnet/minecraft/server/packs/linkfs/LinkFileSystem; a
	getName (I)Lnet/minecraft/server/packs/linkfs/LinkFSPath; a
	getParent ()Lnet/minecraft/server/packs/linkfs/LinkFSPath; d
	getRoot ()Lnet/minecraft/server/packs/linkfs/LinkFSPath; b
	getTargetPath ()Ljava/nio/file/Path; h
	hasRealContents ()Z m
	isRelativeOrMissing (Lnet/minecraft/server/packs/linkfs/PathContents;)Z a
	normalize ()Lnet/minecraft/server/packs/linkfs/LinkFSPath; e
	pathToRoot ()Ljava/util/List; l
	pathToString ()Ljava/lang/String; n
	relativize (Ljava/nio/file/Path;)Lnet/minecraft/server/packs/linkfs/LinkFSPath; b
	resolve (Ljava/nio/file/Path;)Lnet/minecraft/server/packs/linkfs/LinkFSPath; a
	resolve (Ljava/util/List;)Lnet/minecraft/server/packs/linkfs/LinkFSPath; a
	resolveName (Ljava/lang/String;)Lnet/minecraft/server/packs/linkfs/LinkFSPath; a
	subpath (II)Lnet/minecraft/server/packs/linkfs/LinkFSPath; a
	toAbsolutePath ()Lnet/minecraft/server/packs/linkfs/LinkFSPath; f
	toLinkPath (Ljava/nio/file/Path;)Lnet/minecraft/server/packs/linkfs/LinkFSPath; c
	toRealPath ([Ljava/nio/file/LinkOption;)Lnet/minecraft/server/packs/linkfs/LinkFSPath; a
net/minecraft/server/packs/linkfs/LinkFSProvider ajt
	SCHEME a
	toLinkPath (Ljava/nio/file/Path;)Lnet/minecraft/server/packs/linkfs/LinkFSPath; a
net/minecraft/server/packs/linkfs/LinkFileSystem aju
	PATH_SEPARATOR a
	PATH_SPLITTER c
	VIEWS b
	provider e
	root f
	store d
	buildPath (Lnet/minecraft/server/packs/linkfs/LinkFileSystem$DirectoryEntry;Lnet/minecraft/server/packs/linkfs/LinkFileSystem;Ljava/lang/String;Lnet/minecraft/server/packs/linkfs/LinkFSPath;)Lnet/minecraft/server/packs/linkfs/LinkFSPath; a
	builder ()Lnet/minecraft/server/packs/linkfs/LinkFileSystem$Builder; c
	rootPath ()Lnet/minecraft/server/packs/linkfs/LinkFSPath; b
	store ()Ljava/nio/file/FileStore; a
net/minecraft/server/packs/linkfs/LinkFileSystem$Builder aju$a
	root a
	build (Ljava/lang/String;)Ljava/nio/file/FileSystem; a
	put (Ljava/util/List;Ljava/lang/String;Ljava/nio/file/Path;)Lnet/minecraft/server/packs/linkfs/LinkFileSystem$Builder; a
	put (Ljava/util/List;Ljava/nio/file/Path;)Lnet/minecraft/server/packs/linkfs/LinkFileSystem$Builder; a
net/minecraft/server/packs/linkfs/LinkFileSystem$DirectoryEntry aju$b
	children a
	files b
	children ()Ljava/util/Map; a
	files ()Ljava/util/Map; b
net/minecraft/server/packs/linkfs/PathContents ajv
	MISSING a
	RELATIVE b
net/minecraft/server/packs/linkfs/PathContents$DirectoryContents ajv$a
	children c
	children ()Ljava/util/Map; a
net/minecraft/server/packs/linkfs/PathContents$FileContents ajv$b
	contents c
	contents ()Ljava/nio/file/Path; a
net/minecraft/server/packs/metadata/MetadataSectionSerializer ajx
	fromJson (Lcom/google/gson/JsonObject;)Ljava/lang/Object; a
	getMetadataSectionName ()Ljava/lang/String; a
net/minecraft/server/packs/metadata/MetadataSectionType ajy
	fromCodec (Ljava/lang/String;Lcom/mojang/serialization/Codec;)Lnet/minecraft/server/packs/metadata/MetadataSectionType; a
	toJson (Ljava/lang/Object;)Lcom/google/gson/JsonObject; a
net/minecraft/server/packs/metadata/pack/PackMetadataSection ajz
	TYPE a
	description b
	packFormat c
	getDescription ()Lnet/minecraft/network/chat/Component; a
	getPackFormat ()I b
net/minecraft/server/packs/metadata/pack/PackMetadataSectionSerializer aka
	fromJson (Lcom/google/gson/JsonObject;)Ljava/lang/Object; a
	fromJson (Lcom/google/gson/JsonObject;)Lnet/minecraft/server/packs/metadata/pack/PackMetadataSection; b
	getMetadataSectionName ()Ljava/lang/String; a
	toJson (Ljava/lang/Object;)Lcom/google/gson/JsonObject; a
	toJson (Lnet/minecraft/server/packs/metadata/pack/PackMetadataSection;)Lcom/google/gson/JsonObject; a
net/minecraft/server/packs/repository/BuiltInPackSource ake
	LOGGER b
	VANILLA_ID a
	packDir e
	packType c
	vanillaPack d
	createBuiltinPack (Ljava/lang/String;Lnet/minecraft/server/packs/repository/Pack$ResourcesSupplier;Lnet/minecraft/network/chat/Component;)Lnet/minecraft/server/packs/repository/Pack; a
	createVanillaPack (Lnet/minecraft/server/packs/PackResources;)Lnet/minecraft/server/packs/repository/Pack; a
	discoverPacksInPath (Ljava/nio/file/Path;Ljava/util/function/BiConsumer;)V a
	getPackTitle (Ljava/lang/String;)Lnet/minecraft/network/chat/Component; a
	getVanillaPack ()Lnet/minecraft/server/packs/VanillaPackResources; a
	listBundledPacks (Ljava/util/function/Consumer;)V b
	loadPacks (Ljava/util/function/Consumer;)V a
	pathToId (Ljava/nio/file/Path;)Ljava/lang/String; a
	populatePackList (Ljava/util/function/BiConsumer;)V a
net/minecraft/server/packs/repository/FolderRepositorySource akf
	LOGGER a
	folder b
	packSource d
	packType c
	detectPackResources (Ljava/nio/file/Path;Z)Lnet/minecraft/server/packs/repository/Pack$ResourcesSupplier; a
	discoverPacks (Ljava/nio/file/Path;ZLjava/util/function/BiConsumer;)V a
	loadPacks (Ljava/util/function/Consumer;)V a
	nameFromPath (Ljava/nio/file/Path;)Ljava/lang/String; a
net/minecraft/server/packs/repository/Pack akg
	LOGGER a
	compatibility f
	defaultPosition h
	description e
	fixedPosition j
	id b
	packSource k
	requestedFeatures g
	required i
	resources c
	title d
	create (Ljava/lang/String;Lnet/minecraft/network/chat/Component;ZLnet/minecraft/server/packs/repository/Pack$ResourcesSupplier;Lnet/minecraft/server/packs/repository/Pack$Info;Lnet/minecraft/server/packs/PackType;Lnet/minecraft/server/packs/repository/Pack$Position;ZLnet/minecraft/server/packs/repository/PackSource;)Lnet/minecraft/server/packs/repository/Pack; a
	getChatLink (Z)Lnet/minecraft/network/chat/Component; a
	getCompatibility ()Lnet/minecraft/server/packs/repository/PackCompatibility; c
	getDefaultPosition ()Lnet/minecraft/server/packs/repository/Pack$Position; i
	getDescription ()Lnet/minecraft/network/chat/Component; b
	getId ()Ljava/lang/String; f
	getPackSource ()Lnet/minecraft/server/packs/repository/PackSource; j
	getRequestedFeatures ()Lnet/minecraft/world/flag/FeatureFlagSet; d
	getTitle ()Lnet/minecraft/network/chat/Component; a
	isFixedPosition ()Z h
	isRequired ()Z g
	open ()Lnet/minecraft/server/packs/PackResources; e
	readMetaAndCreate (Ljava/lang/String;Lnet/minecraft/network/chat/Component;ZLnet/minecraft/server/packs/repository/Pack$ResourcesSupplier;Lnet/minecraft/server/packs/PackType;Lnet/minecraft/server/packs/repository/Pack$Position;Lnet/minecraft/server/packs/repository/PackSource;)Lnet/minecraft/server/packs/repository/Pack; a
	readPackInfo (Ljava/lang/String;Lnet/minecraft/server/packs/repository/Pack$ResourcesSupplier;)Lnet/minecraft/server/packs/repository/Pack$Info; a
net/minecraft/server/packs/repository/Pack$Info akg$a
	description a
	format b
	requestedFeatures c
	compatibility (Lnet/minecraft/server/packs/PackType;)Lnet/minecraft/server/packs/repository/PackCompatibility; a
	description ()Lnet/minecraft/network/chat/Component; a
	format ()I b
	requestedFeatures ()Lnet/minecraft/world/flag/FeatureFlagSet; c
net/minecraft/server/packs/repository/Pack$Position akg$b
	$VALUES c
	BOTTOM b
	TOP a
	$values ()[Lnet/minecraft/server/packs/repository/Pack$Position; b
	insert (Ljava/util/List;Ljava/lang/Object;Ljava/util/function/Function;Z)I a
	opposite ()Lnet/minecraft/server/packs/repository/Pack$Position; a
net/minecraft/server/packs/repository/Pack$ResourcesSupplier akg$c
net/minecraft/server/packs/repository/PackCompatibility akh
	$VALUES f
	COMPATIBLE c
	TOO_NEW b
	TOO_OLD a
	confirmation e
	description d
	$values ()[Lnet/minecraft/server/packs/repository/PackCompatibility; d
	forFormat (ILnet/minecraft/server/packs/PackType;)Lnet/minecraft/server/packs/repository/PackCompatibility; a
	getConfirmation ()Lnet/minecraft/network/chat/Component; c
	getDescription ()Lnet/minecraft/network/chat/Component; b
	isCompatible ()Z a
net/minecraft/server/packs/repository/PackRepository aki
	available b
	selected c
	sources a
	addPack (Ljava/lang/String;)Z a
	discoverAvailable ()Ljava/util/Map; h
	getAvailableIds ()Ljava/util/Collection; b
	getAvailablePacks ()Ljava/util/Collection; c
	getAvailablePacks (Ljava/util/Collection;)Ljava/util/stream/Stream; c
	getPack (Ljava/lang/String;)Lnet/minecraft/server/packs/repository/Pack; c
	getRequestedFeatureFlags ()Lnet/minecraft/world/flag/FeatureFlagSet; e
	getSelectedIds ()Ljava/util/Collection; d
	getSelectedPacks ()Ljava/util/Collection; f
	isAvailable (Ljava/lang/String;)Z d
	openAllSelected ()Ljava/util/List; g
	rebuildSelected (Ljava/util/Collection;)Ljava/util/List; b
	reload ()V a
	removePack (Ljava/lang/String;)Z b
	setSelected (Ljava/util/Collection;)V a
net/minecraft/server/packs/repository/PackSource akj
	BUILT_IN c
	DEFAULT b
	FEATURE d
	NO_DECORATION a
	SERVER f
	WORLD e
	create (Ljava/util/function/UnaryOperator;Z)Lnet/minecraft/server/packs/repository/PackSource; a
	decorate (Lnet/minecraft/network/chat/Component;)Lnet/minecraft/network/chat/Component; a
	decorateWithSource (Ljava/lang/String;)Ljava/util/function/UnaryOperator; a
	shouldAddAutomatically ()Z a
net/minecraft/server/packs/repository/RepositorySource akk
	loadPacks (Ljava/util/function/Consumer;)V a
net/minecraft/server/packs/repository/ServerPacksSource akl
	BUILT_IN_METADATA d
	FEATURE_FLAGS_METADATA_SECTION c
	PACKS_DIR f
	VANILLA_NAME e
	VERSION_METADATA_SECTION b
	createBuiltinPack (Ljava/lang/String;Lnet/minecraft/server/packs/repository/Pack$ResourcesSupplier;Lnet/minecraft/network/chat/Component;)Lnet/minecraft/server/packs/repository/Pack; a
	createPackRepository (Ljava/nio/file/Path;)Lnet/minecraft/server/packs/repository/PackRepository; a
	createPackRepository (Lnet/minecraft/world/level/storage/LevelStorageSource$LevelStorageAccess;)Lnet/minecraft/server/packs/repository/PackRepository; a
	createVanillaPack (Lnet/minecraft/server/packs/PackResources;)Lnet/minecraft/server/packs/repository/Pack; a
	createVanillaPackSource ()Lnet/minecraft/server/packs/VanillaPackResources; b
	getPackTitle (Ljava/lang/String;)Lnet/minecraft/network/chat/Component; a
net/minecraft/server/packs/resources/CloseableResourceManager akn
net/minecraft/server/packs/resources/FallbackResourceManager ako
	LOGGER b
	fallbacks a
	namespace d
	type c
	applyPackFiltersToExistingResources (Lnet/minecraft/server/packs/resources/FallbackResourceManager$PackEntry;Ljava/util/Map;)V a
	convertToMetadata (Lnet/minecraft/server/packs/resources/IoSupplier;)Lnet/minecraft/server/packs/resources/IoSupplier; a
	createResource (Lnet/minecraft/server/packs/PackResources;Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/server/packs/resources/IoSupplier;Lnet/minecraft/server/packs/resources/IoSupplier;)Lnet/minecraft/server/packs/resources/Resource; a
	createStackMetadataFinder (Lnet/minecraft/resources/ResourceLocation;I)Lnet/minecraft/server/packs/resources/IoSupplier; a
	getMetadataLocation (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/resources/ResourceLocation; d
	getNamespaces ()Ljava/util/Set; a
	getResourceLocationFromMetadata (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/resources/ResourceLocation; c
	getResourceStack (Lnet/minecraft/resources/ResourceLocation;)Ljava/util/List; a
	isMetadata (Lnet/minecraft/resources/ResourceLocation;)Z b
	listPackResources (Lnet/minecraft/server/packs/resources/FallbackResourceManager$PackEntry;Ljava/lang/String;Ljava/util/function/Predicate;Ljava/util/Map;)V a
	listPacks ()Ljava/util/stream/Stream; b
	listResourceStacks (Ljava/lang/String;Ljava/util/function/Predicate;)Ljava/util/Map; c
	listResources (Ljava/lang/String;Ljava/util/function/Predicate;)Ljava/util/Map; b
	parseMetadata (Lnet/minecraft/server/packs/resources/IoSupplier;)Lnet/minecraft/server/packs/resources/ResourceMetadata; b
	push (Lnet/minecraft/server/packs/PackResources;)V a
	push (Lnet/minecraft/server/packs/PackResources;Ljava/util/function/Predicate;)V a
	pushFilterOnly (Ljava/lang/String;Ljava/util/function/Predicate;)V a
	pushInternal (Ljava/lang/String;Lnet/minecraft/server/packs/PackResources;Ljava/util/function/Predicate;)V a
	wrapForDebug (Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/server/packs/PackResources;Lnet/minecraft/server/packs/resources/IoSupplier;)Lnet/minecraft/server/packs/resources/IoSupplier; a
net/minecraft/server/packs/resources/FallbackResourceManager$EntryStack ako$b
	fileLocation a
	fileSources c
	metaSources d
	metadataLocation b
	fileLocation ()Lnet/minecraft/resources/ResourceLocation; a
	fileSources ()Ljava/util/List; c
	metaSources ()Ljava/util/Map; d
	metadataLocation ()Lnet/minecraft/resources/ResourceLocation; b
net/minecraft/server/packs/resources/FallbackResourceManager$LeakedResourceWarningInputStream ako$c
	closed b
	message a
net/minecraft/server/packs/resources/FallbackResourceManager$PackEntry ako$d
	filter c
	name a
	resources b
	filter ()Ljava/util/function/Predicate; c
	filterAll (Ljava/util/Collection;)V a
	isFiltered (Lnet/minecraft/resources/ResourceLocation;)Z a
	name ()Ljava/lang/String; a
	resources ()Lnet/minecraft/server/packs/PackResources; b
net/minecraft/server/packs/resources/FallbackResourceManager$ResourceWithSource ako$e
	resource b
	source a
	resource ()Lnet/minecraft/server/packs/resources/IoSupplier; b
	source ()Lnet/minecraft/server/packs/PackResources; a
net/minecraft/server/packs/resources/IoSupplier akp
net/minecraft/server/packs/resources/MultiPackResourceManager akq
	LOGGER a
	namespacedManagers b
	packs c
	checkTrailingDirectoryPath (Ljava/lang/String;)V a
	getNamespaces ()Ljava/util/Set; a
	getPackFilterSection (Lnet/minecraft/server/packs/PackResources;)Lnet/minecraft/server/packs/resources/ResourceFilterSection; a
	getResourceStack (Lnet/minecraft/resources/ResourceLocation;)Ljava/util/List; a
	listPacks ()Ljava/util/stream/Stream; b
	listResourceStacks (Ljava/lang/String;Ljava/util/function/Predicate;)Ljava/util/Map; c
	listResources (Ljava/lang/String;Ljava/util/function/Predicate;)Ljava/util/Map; b
net/minecraft/server/packs/resources/PreparableReloadListener akr
	getName ()Ljava/lang/String; c
	reload (Lnet/minecraft/server/packs/resources/PreparableReloadListener$PreparationBarrier;Lnet/minecraft/server/packs/resources/ResourceManager;Lnet/minecraft/util/profiling/ProfilerFiller;Lnet/minecraft/util/profiling/ProfilerFiller;Ljava/util/concurrent/Executor;Ljava/util/concurrent/Executor;)Ljava/util/concurrent/CompletableFuture; a
net/minecraft/server/packs/resources/PreparableReloadListener$PreparationBarrier akr$a
	wait (Ljava/lang/Object;)Ljava/util/concurrent/CompletableFuture; a
net/minecraft/server/packs/resources/ProfiledReloadInstance aks
	LOGGER c
	total d
	finish (Ljava/util/List;)Ljava/util/List; a
net/minecraft/server/packs/resources/ProfiledReloadInstance$State aks$a
	name a
	preparationNanos d
	preparationResult b
	reloadNanos e
	reloadResult c
net/minecraft/server/packs/resources/ReloadInstance akt
	checkExceptions ()V d
	done ()Ljava/util/concurrent/CompletableFuture; a
	getActualProgress ()F b
	isDone ()Z c
net/minecraft/server/packs/resources/ReloadableResourceManager aku
	LOGGER a
	listeners c
	resources b
	type d
	createReload (Ljava/util/concurrent/Executor;Ljava/util/concurrent/Executor;Ljava/util/concurrent/CompletableFuture;Ljava/util/List;)Lnet/minecraft/server/packs/resources/ReloadInstance; a
	getNamespaces ()Ljava/util/Set; a
	getResourceStack (Lnet/minecraft/resources/ResourceLocation;)Ljava/util/List; a
	listPacks ()Ljava/util/stream/Stream; b
	listResourceStacks (Ljava/lang/String;Ljava/util/function/Predicate;)Ljava/util/Map; c
	listResources (Ljava/lang/String;Ljava/util/function/Predicate;)Ljava/util/Map; b
	registerReloadListener (Lnet/minecraft/server/packs/resources/PreparableReloadListener;)V a
net/minecraft/server/packs/resources/Resource akv
	cachedMetadata d
	metadataSupplier c
	source a
	streamSupplier b
	isBuiltin ()Z c
	metadata ()Lnet/minecraft/server/packs/resources/ResourceMetadata; f
	open ()Ljava/io/InputStream; d
	openAsReader ()Ljava/io/BufferedReader; e
	source ()Lnet/minecraft/server/packs/PackResources; a
	sourcePackId ()Ljava/lang/String; b
net/minecraft/server/packs/resources/ResourceFilterSection akw
	CODEC b
	TYPE a
	blockList c
	isNamespaceFiltered (Ljava/lang/String;)Z a
	isPathFiltered (Ljava/lang/String;)Z b
net/minecraft/server/packs/resources/ResourceManager akx
	getNamespaces ()Ljava/util/Set; a
	getResourceStack (Lnet/minecraft/resources/ResourceLocation;)Ljava/util/List; a
	listPacks ()Ljava/util/stream/Stream; b
	listResourceStacks (Ljava/lang/String;Ljava/util/function/Predicate;)Ljava/util/Map; c
	listResources (Ljava/lang/String;Ljava/util/function/Predicate;)Ljava/util/Map; b
net/minecraft/server/packs/resources/ResourceManager$Empty akx$a
	$VALUES b
	INSTANCE a
	$values ()[Lnet/minecraft/server/packs/resources/ResourceManager$Empty; c
	getNamespaces ()Ljava/util/Set; a
	getResourceStack (Lnet/minecraft/resources/ResourceLocation;)Ljava/util/List; a
	listPacks ()Ljava/util/stream/Stream; b
	listResourceStacks (Ljava/lang/String;Ljava/util/function/Predicate;)Ljava/util/Map; c
	listResources (Ljava/lang/String;Ljava/util/function/Predicate;)Ljava/util/Map; b
net/minecraft/server/packs/resources/ResourceManagerReloadListener aky
	onResourceManagerReload (Lnet/minecraft/server/packs/resources/ResourceManager;)V a
	reload (Lnet/minecraft/server/packs/resources/PreparableReloadListener$PreparationBarrier;Lnet/minecraft/server/packs/resources/ResourceManager;Lnet/minecraft/util/profiling/ProfilerFiller;Lnet/minecraft/util/profiling/ProfilerFiller;Ljava/util/concurrent/Executor;Ljava/util/concurrent/Executor;)Ljava/util/concurrent/CompletableFuture; a
net/minecraft/server/packs/resources/ResourceMetadata akz
	EMPTY a
	EMPTY_SUPPLIER b
	fromJsonStream (Ljava/io/InputStream;)Lnet/minecraft/server/packs/resources/ResourceMetadata; a
	getSection (Lnet/minecraft/server/packs/metadata/MetadataSectionSerializer;)Ljava/util/Optional; a
net/minecraft/server/packs/resources/ResourceProvider ala
net/minecraft/server/packs/resources/SimpleJsonResourceReloadListener alb
	LOGGER a
	directory c
	gson b
	prepare (Lnet/minecraft/server/packs/resources/ResourceManager;Lnet/minecraft/util/profiling/ProfilerFiller;)Ljava/lang/Object; b
	prepare (Lnet/minecraft/server/packs/resources/ResourceManager;Lnet/minecraft/util/profiling/ProfilerFiller;)Ljava/util/Map; a
	scanDirectory (Lnet/minecraft/server/packs/resources/ResourceManager;Ljava/lang/String;Lcom/google/gson/Gson;Ljava/util/Map;)V a
net/minecraft/server/packs/resources/SimplePreparableReloadListener alc
	apply (Ljava/lang/Object;Lnet/minecraft/server/packs/resources/ResourceManager;Lnet/minecraft/util/profiling/ProfilerFiller;)V a
	prepare (Lnet/minecraft/server/packs/resources/ResourceManager;Lnet/minecraft/util/profiling/ProfilerFiller;)Ljava/lang/Object; b
	reload (Lnet/minecraft/server/packs/resources/PreparableReloadListener$PreparationBarrier;Lnet/minecraft/server/packs/resources/ResourceManager;Lnet/minecraft/util/profiling/ProfilerFiller;Lnet/minecraft/util/profiling/ProfilerFiller;Ljava/util/concurrent/Executor;Ljava/util/concurrent/Executor;)Ljava/util/concurrent/CompletableFuture; a
net/minecraft/server/packs/resources/SimpleReloadInstance ald
	EXTRA_RELOAD_PROGRESS_WEIGHT d
	LISTENER_PROGRESS_WEIGHT e
	PREPARATION_PROGRESS_WEIGHT c
	allDone b
	allPreparations a
	doneTaskCounter k
	finishedReloads i
	listenerCount g
	preparingListeners f
	startedReloads h
	startedTaskCounter j
	create (Lnet/minecraft/server/packs/resources/ResourceManager;Ljava/util/List;Ljava/util/concurrent/Executor;Ljava/util/concurrent/Executor;Ljava/util/concurrent/CompletableFuture;Z)Lnet/minecraft/server/packs/resources/ReloadInstance; a
	done ()Ljava/util/concurrent/CompletableFuture; a
	getActualProgress ()F b
	of (Lnet/minecraft/server/packs/resources/ResourceManager;Ljava/util/List;Ljava/util/concurrent/Executor;Ljava/util/concurrent/Executor;Ljava/util/concurrent/CompletableFuture;)Lnet/minecraft/server/packs/resources/SimpleReloadInstance; a
net/minecraft/server/packs/resources/SimpleReloadInstance$StateFactory ald$a
net/minecraft/server/players/BanListEntry alf
	DATE_FORMAT a
	EXPIRES_NEVER b
	created c
	expires e
	reason f
	source d
	getCreated ()Ljava/util/Date; a
	getDisplayName ()Lnet/minecraft/network/chat/Component; e
	getExpires ()Ljava/util/Date; c
	getReason ()Ljava/lang/String; d
	getSource ()Ljava/lang/String; b
	hasExpired ()Z f
	serialize (Lcom/google/gson/JsonObject;)V a
net/minecraft/server/players/GameProfileCache alg
	GAMEPROFILES_EXPIRATION_MONTHS c
	GAMEPROFILES_MRU_LIMIT b
	LOGGER a
	executor l
	file j
	gson i
	operationCount k
	profileRepository h
	profilesByName e
	profilesByUUID f
	requests g
	usesAuthentication d
	add (Lcom/mojang/authlib/GameProfile;)V a
	clearExecutor ()V a
	createDateFormat ()Ljava/text/DateFormat; f
	get (Ljava/lang/String;)Ljava/util/Optional; a
	get (Ljava/util/UUID;)Ljava/util/Optional; a
	getAsync (Ljava/lang/String;Ljava/util/function/Consumer;)V a
	getNextOperation ()J e
	getTopMRUProfiles (I)Ljava/util/stream/Stream; a
	load ()Ljava/util/List; b
	lookupGameProfile (Lcom/mojang/authlib/GameProfileRepository;Ljava/lang/String;)Ljava/util/Optional; a
	readGameProfile (Lcom/google/gson/JsonElement;Ljava/text/DateFormat;)Ljava/util/Optional; a
	safeAdd (Lnet/minecraft/server/players/GameProfileCache$GameProfileInfo;)V a
	save ()V c
	setExecutor (Ljava/util/concurrent/Executor;)V a
	setUsesAuthentication (Z)V a
	usesAuthentication ()Z d
	writeGameProfile (Lnet/minecraft/server/players/GameProfileCache$GameProfileInfo;Ljava/text/DateFormat;)Lcom/google/gson/JsonElement; a
net/minecraft/server/players/GameProfileCache$GameProfileInfo alg$a
	expirationDate b
	lastAccess c
	profile a
	getExpirationDate ()Ljava/util/Date; b
	getLastAccess ()J c
	getProfile ()Lcom/mojang/authlib/GameProfile; a
	setLastAccess (J)V a
net/minecraft/server/players/IpBanList alh
	createEntry (Lcom/google/gson/JsonObject;)Lnet/minecraft/server/players/StoredUserEntry; a
	get (Ljava/net/SocketAddress;)Lnet/minecraft/server/players/IpBanListEntry; b
	getIpFromAddress (Ljava/net/SocketAddress;)Ljava/lang/String; c
	isBanned (Ljava/lang/String;)Z a
	isBanned (Ljava/net/SocketAddress;)Z a
net/minecraft/server/players/IpBanListEntry ali
	createIpInfo (Lcom/google/gson/JsonObject;)Ljava/lang/String; b
	getDisplayName ()Lnet/minecraft/network/chat/Component; e
	serialize (Lcom/google/gson/JsonObject;)V a
net/minecraft/server/players/OldUsersConverter alj
	LOGGER e
	OLD_IPBANLIST a
	OLD_OPLIST c
	OLD_USERBANLIST b
	OLD_WHITELIST d
	areOldPlayersConverted (Lnet/minecraft/server/MinecraftServer;)Z f
	areOldUserlistsRemoved ()Z a
	convertIpBanlist (Lnet/minecraft/server/MinecraftServer;)Z b
	convertMobOwnerIfNecessary (Lnet/minecraft/server/MinecraftServer;Ljava/lang/String;)Ljava/util/UUID; a
	convertOpsList (Lnet/minecraft/server/MinecraftServer;)Z c
	convertPlayers (Lnet/minecraft/server/dedicated/DedicatedServer;)Z a
	convertUserBanlist (Lnet/minecraft/server/MinecraftServer;)Z a
	convertWhiteList (Lnet/minecraft/server/MinecraftServer;)Z d
	ensureDirectoryExists (Ljava/io/File;)V a
	getWorldPlayersDirectory (Lnet/minecraft/server/MinecraftServer;)Ljava/io/File; g
	lookupPlayers (Lnet/minecraft/server/MinecraftServer;Ljava/util/Collection;Lcom/mojang/authlib/ProfileLookupCallback;)V a
	parseDate (Ljava/lang/String;Ljava/util/Date;)Ljava/util/Date; a
	readOldListFormat (Ljava/io/File;Ljava/util/Map;)Ljava/util/List; a
	renameOldFile (Ljava/io/File;)V b
	serverReadyAfterUserconversion (Lnet/minecraft/server/MinecraftServer;)Z e
net/minecraft/server/players/OldUsersConverter$ConversionError alj$a
net/minecraft/server/players/PlayerList alk
	ALLOW_LOGOUTIVATOR z
	BAN_DATE_FORMAT i
	CHAT_FILTERED_FULL f
	IPBANLIST_FILE c
	LOGGER a
	OPLIST_FILE d
	SEND_PLAYER_INFO_INTERVAL h
	USERBANLIST_FILE b
	WHITELIST_FILE e
	advancements r
	allowCheatsForAllPlayers y
	bans m
	doWhiteList t
	ipBans n
	maxPlayers g
	ops o
	playerIo s
	players k
	playersByUUID l
	registries u
	sendAllPlayerInfoIn A
	server j
	simulationDistance x
	stats q
	synchronizedRegistries v
	viewDistance w
	whitelist p
	addWorldborderListener (Lnet/minecraft/server/level/ServerLevel;)V a
	broadcast (Lnet/minecraft/world/entity/player/Player;DDDDLnet/minecraft/resources/ResourceKey;Lnet/minecraft/network/protocol/Packet;)V a
	broadcastAll (Lnet/minecraft/network/protocol/Packet;)V a
	broadcastAll (Lnet/minecraft/network/protocol/Packet;Lnet/minecraft/resources/ResourceKey;)V a
	broadcastChatMessage (Lnet/minecraft/network/chat/PlayerChatMessage;Ljava/util/function/Predicate;Lnet/minecraft/server/level/ServerPlayer;Lnet/minecraft/network/chat/ChatType$Bound;)V a
	broadcastChatMessage (Lnet/minecraft/network/chat/PlayerChatMessage;Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/network/chat/ChatType$Bound;)V a
	broadcastChatMessage (Lnet/minecraft/network/chat/PlayerChatMessage;Lnet/minecraft/server/level/ServerPlayer;Lnet/minecraft/network/chat/ChatType$Bound;)V a
	broadcastSystemMessage (Lnet/minecraft/network/chat/Component;Ljava/util/function/Function;Z)V a
	broadcastSystemMessage (Lnet/minecraft/network/chat/Component;Z)V a
	broadcastSystemToAllExceptTeam (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/network/chat/Component;)V b
	broadcastSystemToTeam (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/network/chat/Component;)V a
	canBypassPlayerLimit (Lcom/mojang/authlib/GameProfile;)Z d
	canPlayerLogin (Ljava/net/SocketAddress;Lcom/mojang/authlib/GameProfile;)Lnet/minecraft/network/chat/Component; a
	deop (Lcom/mojang/authlib/GameProfile;)V b
	getBans ()Lnet/minecraft/server/players/UserBanList; f
	getIpBans ()Lnet/minecraft/server/players/IpBanList; g
	getMaxPlayers ()I n
	getOpNames ()[Ljava/lang/String; l
	getOps ()Lnet/minecraft/server/players/ServerOpList; k
	getPlayer (Ljava/util/UUID;)Lnet/minecraft/server/level/ServerPlayer; a
	getPlayerAdvancements (Lnet/minecraft/server/level/ServerPlayer;)Lnet/minecraft/server/PlayerAdvancements; f
	getPlayerByName (Ljava/lang/String;)Lnet/minecraft/server/level/ServerPlayer; a
	getPlayerCount ()I m
	getPlayerForLogin (Lcom/mojang/authlib/GameProfile;)Lnet/minecraft/server/level/ServerPlayer; e
	getPlayerNamesArray ()[Ljava/lang/String; e
	getPlayerStats (Lnet/minecraft/world/entity/player/Player;)Lnet/minecraft/stats/ServerStatsCounter; a
	getPlayers ()Ljava/util/List; t
	getPlayersWithAddress (Ljava/lang/String;)Ljava/util/List; b
	getServer ()Lnet/minecraft/server/MinecraftServer; c
	getSimulationDistance ()I q
	getSingleplayerData ()Lnet/minecraft/nbt/CompoundTag; r
	getViewDistance ()I p
	getWhiteList ()Lnet/minecraft/server/players/UserWhiteList; i
	getWhiteListNames ()[Ljava/lang/String; j
	isAllowCheatsForAllPlayers ()Z v
	isOp (Lcom/mojang/authlib/GameProfile;)Z f
	isUsingWhitelist ()Z o
	isWhiteListed (Lcom/mojang/authlib/GameProfile;)Z c
	load (Lnet/minecraft/server/level/ServerPlayer;)Lnet/minecraft/nbt/CompoundTag; a
	op (Lcom/mojang/authlib/GameProfile;)V a
	placeNewPlayer (Lnet/minecraft/network/Connection;Lnet/minecraft/server/level/ServerPlayer;)V a
	reloadResources ()V u
	reloadWhiteList ()V a
	remove (Lnet/minecraft/server/level/ServerPlayer;)V c
	removeAll ()V s
	respawn (Lnet/minecraft/server/level/ServerPlayer;Z)Lnet/minecraft/server/level/ServerPlayer; a
	save (Lnet/minecraft/server/level/ServerPlayer;)V b
	saveAll ()V h
	sendAllPlayerInfo (Lnet/minecraft/server/level/ServerPlayer;)V e
	sendLevelInfo (Lnet/minecraft/server/level/ServerPlayer;Lnet/minecraft/server/level/ServerLevel;)V a
	sendPlayerPermissionLevel (Lnet/minecraft/server/level/ServerPlayer;)V d
	sendPlayerPermissionLevel (Lnet/minecraft/server/level/ServerPlayer;I)V a
	setAllowCheatsForAllPlayers (Z)V b
	setSimulationDistance (I)V b
	setUsingWhiteList (Z)V a
	setViewDistance (I)V a
	tick ()V d
	updateEntireScoreboard (Lnet/minecraft/server/ServerScoreboard;Lnet/minecraft/server/level/ServerPlayer;)V a
	verifyChatTrusted (Lnet/minecraft/network/chat/PlayerChatMessage;)Z a
net/minecraft/server/players/ServerOpList all
	canBypassPlayerLimit (Lcom/mojang/authlib/GameProfile;)Z a
	createEntry (Lcom/google/gson/JsonObject;)Lnet/minecraft/server/players/StoredUserEntry; a
	getKeyForUser (Lcom/mojang/authlib/GameProfile;)Ljava/lang/String; b
	getKeyForUser (Ljava/lang/Object;)Ljava/lang/String; a
	getUserList ()[Ljava/lang/String; a
net/minecraft/server/players/ServerOpListEntry alm
	bypassesPlayerLimit b
	level a
	createGameProfile (Lcom/google/gson/JsonObject;)Lcom/mojang/authlib/GameProfile; b
	getBypassesPlayerLimit ()Z b
	getLevel ()I a
	serialize (Lcom/google/gson/JsonObject;)V a
net/minecraft/server/players/SleepStatus aln
	activePlayers a
	sleepingPlayers b
	amountSleeping ()I b
	areEnoughDeepSleeping (ILjava/util/List;)Z a
	areEnoughSleeping (I)Z a
	removeAllSleepers ()V a
	sleepersNeeded (I)I b
	update (Ljava/util/List;)Z a
net/minecraft/server/players/StoredUserEntry alo
	user a
	getUser ()Ljava/lang/Object; g
	hasExpired ()Z f
	serialize (Lcom/google/gson/JsonObject;)V a
net/minecraft/server/players/StoredUserList alp
	GSON b
	LOGGER a
	file c
	map d
	add (Lnet/minecraft/server/players/StoredUserEntry;)V a
	contains (Ljava/lang/Object;)Z d
	createEntry (Lcom/google/gson/JsonObject;)Lnet/minecraft/server/players/StoredUserEntry; a
	get (Ljava/lang/Object;)Lnet/minecraft/server/players/StoredUserEntry; b
	getEntries ()Ljava/util/Collection; d
	getFile ()Ljava/io/File; b
	getKeyForUser (Ljava/lang/Object;)Ljava/lang/String; a
	getUserList ()[Ljava/lang/String; a
	isEmpty ()Z c
	load ()V f
	remove (Ljava/lang/Object;)V c
	remove (Lnet/minecraft/server/players/StoredUserEntry;)V b
	removeExpired ()V g
	save ()V e
net/minecraft/server/players/UserBanList alq
	createEntry (Lcom/google/gson/JsonObject;)Lnet/minecraft/server/players/StoredUserEntry; a
	getKeyForUser (Lcom/mojang/authlib/GameProfile;)Ljava/lang/String; b
	getKeyForUser (Ljava/lang/Object;)Ljava/lang/String; a
	getUserList ()[Ljava/lang/String; a
	isBanned (Lcom/mojang/authlib/GameProfile;)Z a
net/minecraft/server/players/UserBanListEntry alr
	createGameProfile (Lcom/google/gson/JsonObject;)Lcom/mojang/authlib/GameProfile; b
	getDisplayName ()Lnet/minecraft/network/chat/Component; e
	serialize (Lcom/google/gson/JsonObject;)V a
net/minecraft/server/players/UserWhiteList als
	createEntry (Lcom/google/gson/JsonObject;)Lnet/minecraft/server/players/StoredUserEntry; a
	getKeyForUser (Lcom/mojang/authlib/GameProfile;)Ljava/lang/String; b
	getKeyForUser (Ljava/lang/Object;)Ljava/lang/String; a
	getUserList ()[Ljava/lang/String; a
	isWhiteListed (Lcom/mojang/authlib/GameProfile;)Z a
net/minecraft/server/players/UserWhiteListEntry alt
	createGameProfile (Lcom/google/gson/JsonObject;)Lcom/mojang/authlib/GameProfile; b
	serialize (Lcom/google/gson/JsonObject;)V a
net/minecraft/server/rcon/NetworkDataOutputStream alv
	dataOutputStream b
	outputStream a
	reset ()V b
	toByteArray ()[B a
	write (I)V a
	writeBytes ([B)V a
	writeFloat (F)V a
	writeInt (I)V b
	writeShort (S)V a
	writeString (Ljava/lang/String;)V a
net/minecraft/server/rcon/PktUtils alw
	HEX_CHAR b
	MAX_PACKET_SIZE a
	intFromByteArray ([BI)I a
	intFromByteArray ([BII)I b
	intFromNetworkByteArray ([BII)I c
	stringFromByteArray ([BII)Ljava/lang/String; a
	toHexString (B)Ljava/lang/String; a
net/minecraft/server/rcon/RconConsoleSource alx
	RCON b
	RCON_COMPONENT c
	buffer d
	server e
	acceptsFailure ()Z q_
	acceptsSuccess ()Z e_
	createCommandSourceStack ()Lnet/minecraft/commands/CommandSourceStack; g
	getCommandResponse ()Ljava/lang/String; f
	prepareForCommand ()V e
	sendSystemMessage (Lnet/minecraft/network/chat/Component;)V a
	shouldInformAdmins ()Z N_
net/minecraft/server/rcon/thread/GenericThread alz
	LOGGER d
	MAX_STOP_WAIT f
	UNIQUE_THREAD_ID e
	name b
	running a
	thread c
	isRunning ()Z c
	start ()Z a
	stop ()V b
net/minecraft/server/rcon/thread/QueryThreadGs4 ama
	CHALLENGE_CHECK_INTERVAL g
	GAME_ID f
	GAME_TYPE e
	LOGGER d
	RESPONSE_CACHE_TIME h
	buffer p
	hostIp q
	lastChallengeCheck i
	lastRulesResponse u
	maxPlayers l
	port j
	rulesResponse t
	serverInterface v
	serverIp r
	serverName m
	serverPort k
	socket o
	validChallenges s
	worldName n
	buildRuleResponse (Ljava/net/DatagramPacket;)[B b
	create (Lnet/minecraft/server/ServerInterface;)Lnet/minecraft/server/rcon/thread/QueryThreadGs4; a
	getIdentBytes (Ljava/net/SocketAddress;)[B a
	initSocket ()Z e
	processPacket (Ljava/net/DatagramPacket;)Z a
	pruneChallenges ()V d
	recoverSocketError (Ljava/lang/Exception;)V a
	sendChallenge (Ljava/net/DatagramPacket;)V d
	sendTo ([BLjava/net/DatagramPacket;)V a
	start ()Z a
	validChallenge (Ljava/net/DatagramPacket;)Ljava/lang/Boolean; c
net/minecraft/server/rcon/thread/QueryThreadGs4$RequestChallenge ama$a
	challenge b
	challengeBytes d
	ident e
	identBytes c
	time a
	before (J)Ljava/lang/Boolean; a
	getChallenge ()I a
	getChallengeBytes ()[B b
	getIdent ()Ljava/lang/String; d
	getIdentBytes ()[B c
net/minecraft/server/rcon/thread/RconClient amb
	LOGGER d
	SERVERDATA_AUTH e
	SERVERDATA_AUTH_FAILURE i
	SERVERDATA_AUTH_RESPONSE h
	SERVERDATA_EXECCOMMAND f
	SERVERDATA_RESPONSE_VALUE g
	authed j
	buf l
	client k
	rconPassword m
	serverInterface n
	closeSocket ()V e
	send (IILjava/lang/String;)V a
	sendAuthFailure ()V d
	sendCmdResponse (ILjava/lang/String;)V a
	stop ()V b
net/minecraft/server/rcon/thread/RconThread amc
	LOGGER d
	clients g
	rconPassword f
	serverInterface h
	socket e
	clearClients ()V d
	closeSocket (Ljava/net/ServerSocket;)V a
	create (Lnet/minecraft/server/ServerInterface;)Lnet/minecraft/server/rcon/thread/RconThread; a
	stop ()V b
net/minecraft/sounds/Music ame
	CODEC a
	event b
	maxDelay d
	minDelay c
	replaceCurrentMusic e
	getEvent ()Lnet/minecraft/core/Holder; a
	getMaxDelay ()I c
	getMinDelay ()I b
	replaceCurrentMusic ()Z d
net/minecraft/sounds/Musics amf
	CREATIVE b
	CREDITS c
	END e
	END_BOSS d
	FIVE_MINUTES l
	GAME g
	MENU a
	ONE_SECOND h
	TEN_MINUTES j
	THIRTY_SECONDS i
	TWENTY_MINUTES k
	UNDER_WATER f
	createGameMusic (Lnet/minecraft/core/Holder;)Lnet/minecraft/sounds/Music; a
net/minecraft/sounds/SoundEvent amg
	CODEC b
	DEFAULT_RANGE c
	DIRECT_CODEC a
	location d
	newSystem f
	range e
	create (Lnet/minecraft/resources/ResourceLocation;Ljava/util/Optional;)Lnet/minecraft/sounds/SoundEvent; a
	createFixedRangeEvent (Lnet/minecraft/resources/ResourceLocation;F)Lnet/minecraft/sounds/SoundEvent; a
	createVariableRangeEvent (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/sounds/SoundEvent; a
	fixedRange ()Ljava/util/Optional; b
	getLocation ()Lnet/minecraft/resources/ResourceLocation; a
	getRange (F)F a
	readFromNetwork (Lnet/minecraft/network/FriendlyByteBuf;)Lnet/minecraft/sounds/SoundEvent; b
	writeToNetwork (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/sounds/SoundEvents amh
	ALLAY_AMBIENT_WITHOUT_ITEM b
	ALLAY_AMBIENT_WITH_ITEM a
	ALLAY_DEATH c
	ALLAY_HURT d
	ALLAY_ITEM_GIVEN e
	ALLAY_ITEM_TAKEN f
	ALLAY_THROW g
	AMBIENT_BASALT_DELTAS_ADDITIONS i
	AMBIENT_BASALT_DELTAS_LOOP j
	AMBIENT_BASALT_DELTAS_MOOD k
	AMBIENT_CAVE h
	AMBIENT_CRIMSON_FOREST_ADDITIONS l
	AMBIENT_CRIMSON_FOREST_LOOP m
	AMBIENT_CRIMSON_FOREST_MOOD n
	AMBIENT_NETHER_WASTES_ADDITIONS o
	AMBIENT_NETHER_WASTES_LOOP p
	AMBIENT_NETHER_WASTES_MOOD q
	AMBIENT_SOUL_SAND_VALLEY_ADDITIONS r
	AMBIENT_SOUL_SAND_VALLEY_LOOP s
	AMBIENT_SOUL_SAND_VALLEY_MOOD t
	AMBIENT_UNDERWATER_ENTER x
	AMBIENT_UNDERWATER_EXIT y
	AMBIENT_UNDERWATER_LOOP z
	AMBIENT_UNDERWATER_LOOP_ADDITIONS A
	AMBIENT_UNDERWATER_LOOP_ADDITIONS_RARE B
	AMBIENT_UNDERWATER_LOOP_ADDITIONS_ULTRA_RARE C
	AMBIENT_WARPED_FOREST_ADDITIONS u
	AMBIENT_WARPED_FOREST_LOOP v
	AMBIENT_WARPED_FOREST_MOOD w
	AMETHYST_BLOCK_BREAK D
	AMETHYST_BLOCK_CHIME E
	AMETHYST_BLOCK_FALL F
	AMETHYST_BLOCK_HIT G
	AMETHYST_BLOCK_PLACE H
	AMETHYST_BLOCK_RESONATE I
	AMETHYST_BLOCK_STEP J
	AMETHYST_CLUSTER_BREAK K
	AMETHYST_CLUSTER_FALL L
	AMETHYST_CLUSTER_HIT M
	AMETHYST_CLUSTER_PLACE N
	AMETHYST_CLUSTER_STEP O
	ANCIENT_DEBRIS_BREAK P
	ANCIENT_DEBRIS_FALL T
	ANCIENT_DEBRIS_HIT S
	ANCIENT_DEBRIS_PLACE R
	ANCIENT_DEBRIS_STEP Q
	ANVIL_BREAK U
	ANVIL_DESTROY V
	ANVIL_FALL W
	ANVIL_HIT X
	ANVIL_LAND Y
	ANVIL_PLACE Z
	ANVIL_STEP aa
	ANVIL_USE ab
	ARMOR_EQUIP_CHAIN ac
	ARMOR_EQUIP_DIAMOND ad
	ARMOR_EQUIP_ELYTRA ae
	ARMOR_EQUIP_GENERIC af
	ARMOR_EQUIP_GOLD ag
	ARMOR_EQUIP_IRON ah
	ARMOR_EQUIP_LEATHER ai
	ARMOR_EQUIP_NETHERITE aj
	ARMOR_EQUIP_TURTLE ak
	ARMOR_STAND_BREAK al
	ARMOR_STAND_FALL am
	ARMOR_STAND_HIT an
	ARMOR_STAND_PLACE ao
	ARROW_HIT ap
	ARROW_HIT_PLAYER aq
	ARROW_SHOOT ar
	AXE_SCRAPE at
	AXE_STRIP as
	AXE_WAX_OFF au
	AXOLOTL_ATTACK av
	AXOLOTL_DEATH aw
	AXOLOTL_HURT ax
	AXOLOTL_IDLE_AIR ay
	AXOLOTL_IDLE_WATER az
	AXOLOTL_SPLASH aA
	AXOLOTL_SWIM aB
	AZALEA_BREAK aC
	AZALEA_FALL aD
	AZALEA_HIT aE
	AZALEA_LEAVES_BREAK aH
	AZALEA_LEAVES_FALL aI
	AZALEA_LEAVES_HIT aJ
	AZALEA_LEAVES_PLACE aK
	AZALEA_LEAVES_STEP aL
	AZALEA_PLACE aF
	AZALEA_STEP aG
	BAMBOO_BREAK aM
	BAMBOO_FALL aN
	BAMBOO_HIT aO
	BAMBOO_PLACE aP
	BAMBOO_SAPLING_BREAK aR
	BAMBOO_SAPLING_HIT aS
	BAMBOO_SAPLING_PLACE aT
	BAMBOO_STEP aQ
	BAMBOO_WOOD_BREAK aU
	BAMBOO_WOOD_BUTTON_CLICK_OFF bd
	BAMBOO_WOOD_BUTTON_CLICK_ON be
	BAMBOO_WOOD_DOOR_CLOSE aZ
	BAMBOO_WOOD_DOOR_OPEN ba
	BAMBOO_WOOD_FALL aV
	BAMBOO_WOOD_FENCE_GATE_CLOSE bh
	BAMBOO_WOOD_FENCE_GATE_OPEN bi
	BAMBOO_WOOD_HANGING_SIGN_BREAK kH
	BAMBOO_WOOD_HANGING_SIGN_FALL kI
	BAMBOO_WOOD_HANGING_SIGN_HIT kJ
	BAMBOO_WOOD_HANGING_SIGN_PLACE kK
	BAMBOO_WOOD_HANGING_SIGN_STEP kG
	BAMBOO_WOOD_HIT aW
	BAMBOO_WOOD_PLACE aX
	BAMBOO_WOOD_PRESSURE_PLATE_CLICK_OFF bf
	BAMBOO_WOOD_PRESSURE_PLATE_CLICK_ON bg
	BAMBOO_WOOD_STEP aY
	BAMBOO_WOOD_TRAPDOOR_CLOSE bb
	BAMBOO_WOOD_TRAPDOOR_OPEN bc
	BARREL_CLOSE bj
	BARREL_OPEN bk
	BASALT_BREAK bl
	BASALT_FALL bp
	BASALT_HIT bo
	BASALT_PLACE bn
	BASALT_STEP bm
	BAT_AMBIENT bq
	BAT_DEATH br
	BAT_HURT bs
	BAT_LOOP bt
	BAT_TAKEOFF bu
	BEACON_ACTIVATE bv
	BEACON_AMBIENT bw
	BEACON_DEACTIVATE bx
	BEACON_POWER_SELECT by
	BEEHIVE_DRIP bF
	BEEHIVE_ENTER bG
	BEEHIVE_EXIT bH
	BEEHIVE_SHEAR bI
	BEEHIVE_WORK bJ
	BEE_DEATH bz
	BEE_HURT bA
	BEE_LOOP bC
	BEE_LOOP_AGGRESSIVE bB
	BEE_POLLINATE bE
	BEE_STING bD
	BELL_BLOCK bK
	BELL_RESONATE bL
	BIG_DRIPLEAF_BREAK bM
	BIG_DRIPLEAF_FALL bN
	BIG_DRIPLEAF_HIT bO
	BIG_DRIPLEAF_PLACE bP
	BIG_DRIPLEAF_STEP bQ
	BIG_DRIPLEAF_TILT_DOWN gu
	BIG_DRIPLEAF_TILT_UP gv
	BLASTFURNACE_FIRE_CRACKLE cg
	BLAZE_AMBIENT bR
	BLAZE_BURN bS
	BLAZE_DEATH bT
	BLAZE_HURT bU
	BLAZE_SHOOT bV
	BOAT_PADDLE_LAND bW
	BOAT_PADDLE_WATER bX
	BONE_BLOCK_BREAK bY
	BONE_BLOCK_FALL bZ
	BONE_BLOCK_HIT ca
	BONE_BLOCK_PLACE cb
	BONE_BLOCK_STEP cc
	BONE_MEAL_USE cd
	BOOK_PAGE_TURN ce
	BOOK_PUT cf
	BOTTLE_EMPTY ch
	BOTTLE_FILL ci
	BOTTLE_FILL_DRAGONBREATH cj
	BREWING_STAND_BREW ck
	BRUSH_GENERIC cl
	BRUSH_GRAVEL cn
	BRUSH_GRAVEL_COMPLETED cp
	BRUSH_SAND cm
	BRUSH_SAND_COMPLETED co
	BUBBLE_COLUMN_BUBBLE_POP cq
	BUBBLE_COLUMN_UPWARDS_AMBIENT cr
	BUBBLE_COLUMN_UPWARDS_INSIDE cs
	BUBBLE_COLUMN_WHIRLPOOL_AMBIENT ct
	BUBBLE_COLUMN_WHIRLPOOL_INSIDE cu
	BUCKET_EMPTY cv
	BUCKET_EMPTY_AXOLOTL cw
	BUCKET_EMPTY_FISH cx
	BUCKET_EMPTY_LAVA cy
	BUCKET_EMPTY_POWDER_SNOW cz
	BUCKET_EMPTY_TADPOLE cA
	BUCKET_FILL cB
	BUCKET_FILL_AXOLOTL cC
	BUCKET_FILL_FISH cD
	BUCKET_FILL_LAVA cE
	BUCKET_FILL_POWDER_SNOW cF
	BUCKET_FILL_TADPOLE cG
	BUNDLE_DROP_CONTENTS cH
	BUNDLE_INSERT cI
	BUNDLE_REMOVE_ONE cJ
	CAKE_ADD_CANDLE cK
	CALCITE_BREAK cL
	CALCITE_FALL cP
	CALCITE_HIT cO
	CALCITE_PLACE cN
	CALCITE_STEP cM
	CAMEL_AMBIENT cQ
	CAMEL_DASH cR
	CAMEL_DASH_READY cS
	CAMEL_DEATH cT
	CAMEL_EAT cU
	CAMEL_HURT cV
	CAMEL_SADDLE cW
	CAMEL_SIT cX
	CAMEL_STAND cY
	CAMEL_STEP cZ
	CAMEL_STEP_SAND da
	CAMPFIRE_CRACKLE db
	CANDLE_AMBIENT dc
	CANDLE_BREAK dd
	CANDLE_EXTINGUISH de
	CANDLE_FALL df
	CANDLE_HIT dg
	CANDLE_PLACE dh
	CANDLE_STEP di
	CAT_AMBIENT dj
	CAT_BEG_FOR_FOOD do
	CAT_DEATH dl
	CAT_EAT dm
	CAT_HISS dn
	CAT_HURT dp
	CAT_PURR dq
	CAT_PURREOW dr
	CAT_STRAY_AMBIENT dk
	CAVE_VINES_BREAK ds
	CAVE_VINES_FALL dt
	CAVE_VINES_HIT du
	CAVE_VINES_PICK_BERRIES dx
	CAVE_VINES_PLACE dv
	CAVE_VINES_STEP dw
	CHAIN_BREAK dy
	CHAIN_FALL dz
	CHAIN_HIT dA
	CHAIN_PLACE dB
	CHAIN_STEP dC
	CHERRY_LEAVES_BREAK dN
	CHERRY_LEAVES_FALL dO
	CHERRY_LEAVES_HIT dP
	CHERRY_LEAVES_PLACE dQ
	CHERRY_LEAVES_STEP dR
	CHERRY_SAPLING_BREAK dI
	CHERRY_SAPLING_FALL dJ
	CHERRY_SAPLING_HIT dK
	CHERRY_SAPLING_PLACE dL
	CHERRY_SAPLING_STEP dM
	CHERRY_WOOD_BREAK dD
	CHERRY_WOOD_BUTTON_CLICK_OFF eb
	CHERRY_WOOD_BUTTON_CLICK_ON ec
	CHERRY_WOOD_DOOR_CLOSE dX
	CHERRY_WOOD_DOOR_OPEN dY
	CHERRY_WOOD_FALL dE
	CHERRY_WOOD_FENCE_GATE_CLOSE ef
	CHERRY_WOOD_FENCE_GATE_OPEN eg
	CHERRY_WOOD_HANGING_SIGN_BREAK dT
	CHERRY_WOOD_HANGING_SIGN_FALL dU
	CHERRY_WOOD_HANGING_SIGN_HIT dV
	CHERRY_WOOD_HANGING_SIGN_PLACE dW
	CHERRY_WOOD_HANGING_SIGN_STEP dS
	CHERRY_WOOD_HIT dF
	CHERRY_WOOD_PLACE dG
	CHERRY_WOOD_PRESSURE_PLATE_CLICK_OFF ed
	CHERRY_WOOD_PRESSURE_PLATE_CLICK_ON ee
	CHERRY_WOOD_STEP dH
	CHERRY_WOOD_TRAPDOOR_CLOSE dZ
	CHERRY_WOOD_TRAPDOOR_OPEN ea
	CHEST_CLOSE eh
	CHEST_LOCKED ei
	CHEST_OPEN ej
	CHICKEN_AMBIENT ek
	CHICKEN_DEATH el
	CHICKEN_EGG em
	CHICKEN_HURT en
	CHICKEN_STEP eo
	CHISELED_BOOKSHELF_BREAK ep
	CHISELED_BOOKSHELF_FALL eq
	CHISELED_BOOKSHELF_HIT er
	CHISELED_BOOKSHELF_INSERT es
	CHISELED_BOOKSHELF_INSERT_ENCHANTED et
	CHISELED_BOOKSHELF_PICKUP ev
	CHISELED_BOOKSHELF_PICKUP_ENCHANTED ew
	CHISELED_BOOKSHELF_PLACE ex
	CHISELED_BOOKSHELF_STEP eu
	CHORUS_FLOWER_DEATH ey
	CHORUS_FLOWER_GROW ez
	CHORUS_FRUIT_TELEPORT eA
	COD_AMBIENT eB
	COD_DEATH eC
	COD_FLOP eD
	COD_HURT eE
	COMPARATOR_CLICK eF
	COMPOSTER_EMPTY eG
	COMPOSTER_FILL eH
	COMPOSTER_FILL_SUCCESS eI
	COMPOSTER_READY eJ
	CONDUIT_ACTIVATE eK
	CONDUIT_AMBIENT eL
	CONDUIT_AMBIENT_SHORT eM
	CONDUIT_ATTACK_TARGET eN
	CONDUIT_DEACTIVATE eO
	COPPER_BREAK eP
	COPPER_FALL eT
	COPPER_HIT eS
	COPPER_PLACE eR
	COPPER_STEP eQ
	CORAL_BLOCK_BREAK eU
	CORAL_BLOCK_FALL eV
	CORAL_BLOCK_HIT eW
	CORAL_BLOCK_PLACE eX
	CORAL_BLOCK_STEP eY
	COW_AMBIENT eZ
	COW_DEATH fa
	COW_HURT fb
	COW_MILK fc
	COW_STEP fd
	CREEPER_DEATH fe
	CREEPER_HURT ff
	CREEPER_PRIMED fg
	CROP_BREAK fh
	CROP_PLANTED fi
	CROSSBOW_HIT fj
	CROSSBOW_LOADING_END fk
	CROSSBOW_LOADING_MIDDLE fl
	CROSSBOW_LOADING_START fm
	CROSSBOW_QUICK_CHARGE_1 fn
	CROSSBOW_QUICK_CHARGE_2 fo
	CROSSBOW_QUICK_CHARGE_3 fp
	CROSSBOW_SHOOT fq
	DECORATED_POT_BREAK fr
	DECORATED_POT_FALL fs
	DECORATED_POT_HIT ft
	DECORATED_POT_PLACE fv
	DECORATED_POT_SHATTER fw
	DECORATED_POT_STEP fu
	DEEPSLATE_BREAK fC
	DEEPSLATE_BRICKS_BREAK fx
	DEEPSLATE_BRICKS_FALL fy
	DEEPSLATE_BRICKS_HIT fz
	DEEPSLATE_BRICKS_PLACE fA
	DEEPSLATE_BRICKS_STEP fB
	DEEPSLATE_FALL fD
	DEEPSLATE_HIT fE
	DEEPSLATE_PLACE fF
	DEEPSLATE_STEP fG
	DEEPSLATE_TILES_BREAK fH
	DEEPSLATE_TILES_FALL fI
	DEEPSLATE_TILES_HIT fJ
	DEEPSLATE_TILES_PLACE fK
	DEEPSLATE_TILES_STEP fL
	DISPENSER_DISPENSE fM
	DISPENSER_FAIL fN
	DISPENSER_LAUNCH fO
	DOLPHIN_AMBIENT fP
	DOLPHIN_AMBIENT_WATER fQ
	DOLPHIN_ATTACK fR
	DOLPHIN_DEATH fS
	DOLPHIN_EAT fT
	DOLPHIN_HURT fU
	DOLPHIN_JUMP fV
	DOLPHIN_PLAY fW
	DOLPHIN_SPLASH fX
	DOLPHIN_SWIM fY
	DONKEY_AMBIENT fZ
	DONKEY_ANGRY ga
	DONKEY_CHEST gb
	DONKEY_DEATH gc
	DONKEY_EAT gd
	DONKEY_HURT ge
	DRAGON_FIREBALL_EXPLODE gV
	DRIPSTONE_BLOCK_BREAK gf
	DRIPSTONE_BLOCK_FALL gj
	DRIPSTONE_BLOCK_HIT gi
	DRIPSTONE_BLOCK_PLACE gh
	DRIPSTONE_BLOCK_STEP gg
	DROWNED_AMBIENT gw
	DROWNED_AMBIENT_WATER gx
	DROWNED_DEATH gy
	DROWNED_DEATH_WATER gz
	DROWNED_HURT gA
	DROWNED_HURT_WATER gB
	DROWNED_SHOOT gC
	DROWNED_STEP gD
	DROWNED_SWIM gE
	DYE_USE gF
	EGG_THROW gG
	ELDER_GUARDIAN_AMBIENT gH
	ELDER_GUARDIAN_AMBIENT_LAND gI
	ELDER_GUARDIAN_CURSE gJ
	ELDER_GUARDIAN_DEATH gK
	ELDER_GUARDIAN_DEATH_LAND gL
	ELDER_GUARDIAN_FLOP gM
	ELDER_GUARDIAN_HURT gN
	ELDER_GUARDIAN_HURT_LAND gO
	ELYTRA_FLYING gP
	EMPTY pp
	ENCHANTMENT_TABLE_USE gQ
	ENDERMAN_AMBIENT hc
	ENDERMAN_DEATH hd
	ENDERMAN_HURT he
	ENDERMAN_SCREAM hf
	ENDERMAN_STARE hg
	ENDERMAN_TELEPORT hh
	ENDERMITE_AMBIENT hi
	ENDERMITE_DEATH hj
	ENDERMITE_HURT hk
	ENDERMITE_STEP hl
	ENDER_CHEST_CLOSE gR
	ENDER_CHEST_OPEN gS
	ENDER_DRAGON_AMBIENT gT
	ENDER_DRAGON_DEATH gU
	ENDER_DRAGON_FLAP gW
	ENDER_DRAGON_GROWL gX
	ENDER_DRAGON_HURT gY
	ENDER_DRAGON_SHOOT gZ
	ENDER_EYE_DEATH ha
	ENDER_EYE_LAUNCH hb
	ENDER_PEARL_THROW hm
	END_GATEWAY_SPAWN hn
	END_PORTAL_FRAME_FILL ho
	END_PORTAL_SPAWN hp
	EVOKER_AMBIENT hq
	EVOKER_CAST_SPELL hr
	EVOKER_CELEBRATE hs
	EVOKER_DEATH ht
	EVOKER_FANGS_ATTACK hu
	EVOKER_HURT hv
	EVOKER_PREPARE_ATTACK hw
	EVOKER_PREPARE_SUMMON hx
	EVOKER_PREPARE_WOLOLO hy
	EXPERIENCE_BOTTLE_THROW hz
	EXPERIENCE_ORB_PICKUP hA
	FENCE_GATE_CLOSE hB
	FENCE_GATE_OPEN hC
	FIRECHARGE_USE hD
	FIREWORK_ROCKET_BLAST hE
	FIREWORK_ROCKET_BLAST_FAR hF
	FIREWORK_ROCKET_LARGE_BLAST hG
	FIREWORK_ROCKET_LARGE_BLAST_FAR hH
	FIREWORK_ROCKET_LAUNCH hI
	FIREWORK_ROCKET_SHOOT hJ
	FIREWORK_ROCKET_TWINKLE hK
	FIREWORK_ROCKET_TWINKLE_FAR hL
	FIRE_AMBIENT hM
	FIRE_EXTINGUISH hN
	FISHING_BOBBER_RETRIEVE hP
	FISHING_BOBBER_SPLASH hQ
	FISHING_BOBBER_THROW hR
	FISH_SWIM hO
	FLINTANDSTEEL_USE hS
	FLOWERING_AZALEA_BREAK hT
	FLOWERING_AZALEA_FALL hU
	FLOWERING_AZALEA_HIT hV
	FLOWERING_AZALEA_PLACE hW
	FLOWERING_AZALEA_STEP hX
	FOX_AGGRO hY
	FOX_AMBIENT hZ
	FOX_BITE ia
	FOX_DEATH ib
	FOX_EAT ic
	FOX_HURT id
	FOX_SCREECH ie
	FOX_SLEEP if
	FOX_SNIFF ig
	FOX_SPIT ih
	FOX_TELEPORT ii
	FROGLIGHT_BREAK it
	FROGLIGHT_FALL iu
	FROGLIGHT_HIT iv
	FROGLIGHT_PLACE iw
	FROGLIGHT_STEP ix
	FROGSPAWNSTEP iy
	FROGSPAWN_BREAK iz
	FROGSPAWN_FALL iA
	FROGSPAWN_HATCH iB
	FROGSPAWN_HIT iC
	FROGSPAWN_PLACE iD
	FROG_AMBIENT iE
	FROG_DEATH iF
	FROG_EAT iG
	FROG_HURT iH
	FROG_LAY_SPAWN iI
	FROG_LONG_JUMP iJ
	FROG_STEP iK
	FROG_TONGUE iL
	FUNGUS_BREAK pK
	FUNGUS_FALL pO
	FUNGUS_HIT pN
	FUNGUS_PLACE pM
	FUNGUS_STEP pL
	FURNACE_FIRE_CRACKLE iR
	GENERIC_BIG_FALL iS
	GENERIC_BURN iT
	GENERIC_DEATH iU
	GENERIC_DRINK iV
	GENERIC_EAT iW
	GENERIC_EXPLODE iX
	GENERIC_EXTINGUISH_FIRE iY
	GENERIC_HURT iZ
	GENERIC_SMALL_FALL ja
	GENERIC_SPLASH jb
	GENERIC_SWIM jc
	GHAST_AMBIENT jd
	GHAST_DEATH je
	GHAST_HURT jf
	GHAST_SCREAM jg
	GHAST_SHOOT jh
	GHAST_WARN ji
	GILDED_BLACKSTONE_BREAK jj
	GILDED_BLACKSTONE_FALL jk
	GILDED_BLACKSTONE_HIT jl
	GILDED_BLACKSTONE_PLACE jm
	GILDED_BLACKSTONE_STEP jn
	GLASS_BREAK jo
	GLASS_FALL jp
	GLASS_HIT jq
	GLASS_PLACE jr
	GLASS_STEP js
	GLOW_INK_SAC_USE jt
	GLOW_ITEM_FRAME_ADD_ITEM ju
	GLOW_ITEM_FRAME_BREAK jv
	GLOW_ITEM_FRAME_PLACE jw
	GLOW_ITEM_FRAME_REMOVE_ITEM jx
	GLOW_ITEM_FRAME_ROTATE_ITEM jy
	GLOW_SQUID_AMBIENT jz
	GLOW_SQUID_DEATH jA
	GLOW_SQUID_HURT jB
	GLOW_SQUID_SQUIRT jC
	GOAT_AMBIENT jD
	GOAT_DEATH jE
	GOAT_EAT jF
	GOAT_HORN_BREAK jL
	GOAT_HORN_PLAY jM
	GOAT_HORN_SOUND_VARIANTS ld
	GOAT_HORN_VARIANT_COUNT lc
	GOAT_HURT jG
	GOAT_LONG_JUMP jH
	GOAT_MILK jI
	GOAT_PREPARE_RAM jJ
	GOAT_RAM_IMPACT jK
	GOAT_SCREAMING_AMBIENT jN
	GOAT_SCREAMING_DEATH jO
	GOAT_SCREAMING_EAT jP
	GOAT_SCREAMING_HORN_BREAK jV
	GOAT_SCREAMING_HURT jQ
	GOAT_SCREAMING_LONG_JUMP jR
	GOAT_SCREAMING_MILK jS
	GOAT_SCREAMING_PREPARE_RAM jT
	GOAT_SCREAMING_RAM_IMPACT jU
	GOAT_STEP jW
	GRASS_BREAK jX
	GRASS_FALL jY
	GRASS_HIT jZ
	GRASS_PLACE ka
	GRASS_STEP kb
	GRAVEL_BREAK kc
	GRAVEL_FALL kd
	GRAVEL_HIT ke
	GRAVEL_PLACE kf
	GRAVEL_STEP kg
	GRINDSTONE_USE kh
	GROWING_PLANT_CROP ki
	GUARDIAN_AMBIENT kj
	GUARDIAN_AMBIENT_LAND kk
	GUARDIAN_ATTACK kl
	GUARDIAN_DEATH km
	GUARDIAN_DEATH_LAND kn
	GUARDIAN_FLOP ko
	GUARDIAN_HURT kp
	GUARDIAN_HURT_LAND kq
	HANGING_ROOTS_BREAK kr
	HANGING_ROOTS_FALL ks
	HANGING_ROOTS_HIT kt
	HANGING_ROOTS_PLACE ku
	HANGING_ROOTS_STEP kv
	HANGING_SIGN_BREAK kx
	HANGING_SIGN_FALL ky
	HANGING_SIGN_HIT kz
	HANGING_SIGN_PLACE kA
	HANGING_SIGN_STEP kw
	HOE_TILL kL
	HOGLIN_AMBIENT kM
	HOGLIN_ANGRY kN
	HOGLIN_ATTACK kO
	HOGLIN_CONVERTED_TO_ZOMBIFIED kP
	HOGLIN_DEATH kQ
	HOGLIN_HURT kR
	HOGLIN_RETREAT kS
	HOGLIN_STEP kT
	HONEYCOMB_WAX_ON la
	HONEY_BLOCK_BREAK kU
	HONEY_BLOCK_FALL kV
	HONEY_BLOCK_HIT kW
	HONEY_BLOCK_PLACE kX
	HONEY_BLOCK_SLIDE kY
	HONEY_BLOCK_STEP kZ
	HONEY_DRINK lb
	HORSE_AMBIENT le
	HORSE_ANGRY lf
	HORSE_ARMOR lg
	HORSE_BREATHE lh
	HORSE_DEATH li
	HORSE_EAT lj
	HORSE_GALLOP lk
	HORSE_HURT ll
	HORSE_JUMP lm
	HORSE_LAND ln
	HORSE_SADDLE lo
	HORSE_STEP lp
	HORSE_STEP_WOOD lq
	HOSTILE_BIG_FALL lr
	HOSTILE_DEATH ls
	HOSTILE_HURT lt
	HOSTILE_SMALL_FALL lu
	HOSTILE_SPLASH lv
	HOSTILE_SWIM lw
	HUSK_AMBIENT lx
	HUSK_CONVERTED_TO_ZOMBIE ly
	HUSK_DEATH lz
	HUSK_HURT lA
	HUSK_STEP lB
	ILLUSIONER_AMBIENT lC
	ILLUSIONER_CAST_SPELL lD
	ILLUSIONER_DEATH lE
	ILLUSIONER_HURT lF
	ILLUSIONER_MIRROR_MOVE lG
	ILLUSIONER_PREPARE_BLINDNESS lH
	ILLUSIONER_PREPARE_MIRROR lI
	INK_SAC_USE lJ
	IRON_DOOR_CLOSE lK
	IRON_DOOR_OPEN lL
	IRON_GOLEM_ATTACK lM
	IRON_GOLEM_DAMAGE lN
	IRON_GOLEM_DEATH lO
	IRON_GOLEM_HURT lP
	IRON_GOLEM_REPAIR lQ
	IRON_GOLEM_STEP lR
	IRON_TRAPDOOR_CLOSE lS
	IRON_TRAPDOOR_OPEN lT
	ITEM_BREAK lZ
	ITEM_FRAME_ADD_ITEM lU
	ITEM_FRAME_BREAK lV
	ITEM_FRAME_PLACE lW
	ITEM_FRAME_REMOVE_ITEM lX
	ITEM_FRAME_ROTATE_ITEM lY
	ITEM_PICKUP ma
	LADDER_BREAK mb
	LADDER_FALL mc
	LADDER_HIT md
	LADDER_PLACE me
	LADDER_STEP mf
	LANTERN_BREAK mg
	LANTERN_FALL mh
	LANTERN_HIT mi
	LANTERN_PLACE mj
	LANTERN_STEP mk
	LARGE_AMETHYST_BUD_BREAK ml
	LARGE_AMETHYST_BUD_PLACE mm
	LAVA_AMBIENT mn
	LAVA_EXTINGUISH mo
	LAVA_POP mp
	LEASH_KNOT_BREAK mq
	LEASH_KNOT_PLACE mr
	LEVER_CLICK ms
	LIGHTNING_BOLT_IMPACT mt
	LIGHTNING_BOLT_THUNDER mu
	LILY_PAD_PLACE ze
	LINGERING_POTION_THROW mv
	LLAMA_AMBIENT mw
	LLAMA_ANGRY mx
	LLAMA_CHEST my
	LLAMA_DEATH mz
	LLAMA_EAT mA
	LLAMA_HURT mB
	LLAMA_SPIT mC
	LLAMA_STEP mD
	LLAMA_SWAG mE
	LODESTONE_BREAK mG
	LODESTONE_COMPASS_LOCK mL
	LODESTONE_FALL mK
	LODESTONE_HIT mJ
	LODESTONE_PLACE mI
	LODESTONE_STEP mH
	MAGMA_CUBE_DEATH mM
	MAGMA_CUBE_DEATH_SMALL mF
	MAGMA_CUBE_HURT mN
	MAGMA_CUBE_HURT_SMALL mO
	MAGMA_CUBE_JUMP mP
	MAGMA_CUBE_SQUISH mQ
	MAGMA_CUBE_SQUISH_SMALL mR
	MANGROVE_ROOTS_BREAK mS
	MANGROVE_ROOTS_FALL mT
	MANGROVE_ROOTS_HIT mU
	MANGROVE_ROOTS_PLACE mV
	MANGROVE_ROOTS_STEP mW
	MEDIUM_AMETHYST_BUD_BREAK mX
	MEDIUM_AMETHYST_BUD_PLACE mY
	METAL_BREAK mZ
	METAL_FALL na
	METAL_HIT nb
	METAL_PLACE nc
	METAL_PRESSURE_PLATE_CLICK_OFF nd
	METAL_PRESSURE_PLATE_CLICK_ON ne
	METAL_STEP nf
	MINECART_INSIDE nh
	MINECART_INSIDE_UNDERWATER ng
	MINECART_RIDING ni
	MOOSHROOM_CONVERT nj
	MOOSHROOM_EAT nk
	MOOSHROOM_MILK nl
	MOOSHROOM_MILK_SUSPICIOUSLY nm
	MOOSHROOM_SHEAR nn
	MOSS_BREAK ny
	MOSS_CARPET_BREAK no
	MOSS_CARPET_FALL np
	MOSS_CARPET_HIT nq
	MOSS_CARPET_PLACE nr
	MOSS_CARPET_STEP ns
	MOSS_FALL nz
	MOSS_HIT nA
	MOSS_PLACE nB
	MOSS_STEP nC
	MUDDY_MANGROVE_ROOTS_BREAK nN
	MUDDY_MANGROVE_ROOTS_FALL nO
	MUDDY_MANGROVE_ROOTS_HIT nP
	MUDDY_MANGROVE_ROOTS_PLACE nQ
	MUDDY_MANGROVE_ROOTS_STEP nR
	MUD_BREAK nD
	MUD_BRICKS_BREAK nI
	MUD_BRICKS_FALL nJ
	MUD_BRICKS_HIT nK
	MUD_BRICKS_PLACE nL
	MUD_BRICKS_STEP nM
	MUD_FALL nE
	MUD_HIT nF
	MUD_PLACE nG
	MUD_STEP nH
	MULE_AMBIENT nS
	MULE_ANGRY nT
	MULE_CHEST nU
	MULE_DEATH nV
	MULE_EAT nW
	MULE_HURT nX
	MUSIC_BIOME_BADLANDS oO
	MUSIC_BIOME_BAMBOO_JUNGLE oR
	MUSIC_BIOME_BASALT_DELTAS ou
	MUSIC_BIOME_CHERRY_GROVE oF
	MUSIC_BIOME_CRIMSON_FOREST ov
	MUSIC_BIOME_DEEP_DARK ow
	MUSIC_BIOME_DESERT oN
	MUSIC_BIOME_DRIPSTONE_CAVES ox
	MUSIC_BIOME_FLOWER_FOREST oM
	MUSIC_BIOME_FOREST oC
	MUSIC_BIOME_FROZEN_PEAKS oH
	MUSIC_BIOME_GROVE oy
	MUSIC_BIOME_JAGGED_PEAKS oz
	MUSIC_BIOME_JUNGLE oP
	MUSIC_BIOME_LUSH_CAVES oA
	MUSIC_BIOME_MEADOW oE
	MUSIC_BIOME_NETHER_WASTES oG
	MUSIC_BIOME_OLD_GROWTH_TAIGA oD
	MUSIC_BIOME_SNOWY_SLOPES oI
	MUSIC_BIOME_SOUL_SAND_VALLEY oJ
	MUSIC_BIOME_SPARSE_JUNGLE oQ
	MUSIC_BIOME_STONY_PEAKS oK
	MUSIC_BIOME_SWAMP oB
	MUSIC_BIOME_WARPED_FOREST oL
	MUSIC_CREATIVE nY
	MUSIC_CREDITS nZ
	MUSIC_DISC_11 ob
	MUSIC_DISC_13 oc
	MUSIC_DISC_5 oa
	MUSIC_DISC_BLOCKS od
	MUSIC_DISC_CAT oe
	MUSIC_DISC_CHIRP of
	MUSIC_DISC_FAR og
	MUSIC_DISC_MALL oh
	MUSIC_DISC_MELLOHI oi
	MUSIC_DISC_OTHERSIDE oo
	MUSIC_DISC_PIGSTEP oj
	MUSIC_DISC_RELIC op
	MUSIC_DISC_STAL ok
	MUSIC_DISC_STRAD ol
	MUSIC_DISC_WAIT om
	MUSIC_DISC_WARD on
	MUSIC_DRAGON oq
	MUSIC_END or
	MUSIC_GAME os
	MUSIC_MENU ot
	MUSIC_UNDER_WATER oS
	NETHERITE_BLOCK_BREAK pZ
	NETHERITE_BLOCK_FALL qd
	NETHERITE_BLOCK_HIT qc
	NETHERITE_BLOCK_PLACE qb
	NETHERITE_BLOCK_STEP qa
	NETHERRACK_BREAK qe
	NETHERRACK_FALL qi
	NETHERRACK_HIT qh
	NETHERRACK_PLACE qg
	NETHERRACK_STEP qf
	NETHER_BRICKS_BREAK oT
	NETHER_BRICKS_FALL oX
	NETHER_BRICKS_HIT oW
	NETHER_BRICKS_PLACE oV
	NETHER_BRICKS_STEP oU
	NETHER_GOLD_ORE_BREAK ty
	NETHER_GOLD_ORE_FALL tz
	NETHER_GOLD_ORE_HIT tA
	NETHER_GOLD_ORE_PLACE tB
	NETHER_GOLD_ORE_STEP tC
	NETHER_ORE_BREAK tD
	NETHER_ORE_FALL tE
	NETHER_ORE_HIT tF
	NETHER_ORE_PLACE tG
	NETHER_ORE_STEP tH
	NETHER_SPROUTS_BREAK pF
	NETHER_SPROUTS_FALL pJ
	NETHER_SPROUTS_HIT pI
	NETHER_SPROUTS_PLACE pH
	NETHER_SPROUTS_STEP pG
	NETHER_WART_BREAK oY
	NETHER_WART_PLANTED oZ
	NETHER_WOOD_BREAK pa
	NETHER_WOOD_BUTTON_CLICK_OFF pj
	NETHER_WOOD_BUTTON_CLICK_ON pk
	NETHER_WOOD_DOOR_CLOSE pf
	NETHER_WOOD_DOOR_OPEN pg
	NETHER_WOOD_FALL pb
	NETHER_WOOD_FENCE_GATE_CLOSE pn
	NETHER_WOOD_FENCE_GATE_OPEN po
	NETHER_WOOD_HANGING_SIGN_BREAK kC
	NETHER_WOOD_HANGING_SIGN_FALL kD
	NETHER_WOOD_HANGING_SIGN_HIT kE
	NETHER_WOOD_HANGING_SIGN_PLACE kF
	NETHER_WOOD_HANGING_SIGN_STEP kB
	NETHER_WOOD_HIT pc
	NETHER_WOOD_PLACE pd
	NETHER_WOOD_PRESSURE_PLATE_CLICK_OFF pl
	NETHER_WOOD_PRESSURE_PLATE_CLICK_ON pm
	NETHER_WOOD_STEP pe
	NETHER_WOOD_TRAPDOOR_CLOSE ph
	NETHER_WOOD_TRAPDOOR_OPEN pi
	NOTE_BLOCK_BANJO qy
	NOTE_BLOCK_BASEDRUM qj
	NOTE_BLOCK_BASS qk
	NOTE_BLOCK_BELL ql
	NOTE_BLOCK_BIT qx
	NOTE_BLOCK_CHIME qm
	NOTE_BLOCK_COW_BELL qv
	NOTE_BLOCK_DIDGERIDOO qw
	NOTE_BLOCK_FLUTE qn
	NOTE_BLOCK_GUITAR qo
	NOTE_BLOCK_HARP qp
	NOTE_BLOCK_HAT qq
	NOTE_BLOCK_IMITATE_CREEPER qB
	NOTE_BLOCK_IMITATE_ENDER_DRAGON qC
	NOTE_BLOCK_IMITATE_PIGLIN qE
	NOTE_BLOCK_IMITATE_SKELETON qA
	NOTE_BLOCK_IMITATE_WITHER_SKELETON qD
	NOTE_BLOCK_IMITATE_ZOMBIE qz
	NOTE_BLOCK_IRON_XYLOPHONE qu
	NOTE_BLOCK_PLING qr
	NOTE_BLOCK_SNARE qs
	NOTE_BLOCK_XYLOPHONE qt
	NYLIUM_BREAK pA
	NYLIUM_FALL pE
	NYLIUM_HIT pD
	NYLIUM_PLACE pC
	NYLIUM_STEP pB
	OCELOT_AMBIENT qG
	OCELOT_DEATH qH
	OCELOT_HURT qF
	PACKED_MUD_BREAK pq
	PACKED_MUD_FALL pr
	PACKED_MUD_HIT ps
	PACKED_MUD_PLACE pt
	PACKED_MUD_STEP pu
	PAINTING_BREAK qI
	PAINTING_PLACE qJ
	PANDA_AGGRESSIVE_AMBIENT qR
	PANDA_AMBIENT qM
	PANDA_BITE qU
	PANDA_CANT_BREED qQ
	PANDA_DEATH qN
	PANDA_EAT qO
	PANDA_HURT qT
	PANDA_PRE_SNEEZE qK
	PANDA_SNEEZE qL
	PANDA_STEP qP
	PANDA_WORRIED_AMBIENT qS
	PARROT_AMBIENT qV
	PARROT_DEATH qW
	PARROT_EAT qX
	PARROT_FLY qY
	PARROT_HURT qZ
	PARROT_IMITATE_BLAZE ra
	PARROT_IMITATE_CREEPER rb
	PARROT_IMITATE_DROWNED rc
	PARROT_IMITATE_ELDER_GUARDIAN rd
	PARROT_IMITATE_ENDERMITE rf
	PARROT_IMITATE_ENDER_DRAGON re
	PARROT_IMITATE_EVOKER rg
	PARROT_IMITATE_GHAST rh
	PARROT_IMITATE_GUARDIAN ri
	PARROT_IMITATE_HOGLIN rj
	PARROT_IMITATE_HUSK rk
	PARROT_IMITATE_ILLUSIONER rl
	PARROT_IMITATE_MAGMA_CUBE rm
	PARROT_IMITATE_PHANTOM rn
	PARROT_IMITATE_PIGLIN ro
	PARROT_IMITATE_PIGLIN_BRUTE rp
	PARROT_IMITATE_PILLAGER rq
	PARROT_IMITATE_RAVAGER rr
	PARROT_IMITATE_SHULKER rs
	PARROT_IMITATE_SILVERFISH rt
	PARROT_IMITATE_SKELETON ru
	PARROT_IMITATE_SLIME rv
	PARROT_IMITATE_SPIDER rw
	PARROT_IMITATE_STRAY rx
	PARROT_IMITATE_VEX ry
	PARROT_IMITATE_VINDICATOR rz
	PARROT_IMITATE_WARDEN rA
	PARROT_IMITATE_WITCH rB
	PARROT_IMITATE_WITHER rC
	PARROT_IMITATE_WITHER_SKELETON rD
	PARROT_IMITATE_ZOGLIN rE
	PARROT_IMITATE_ZOMBIE rF
	PARROT_IMITATE_ZOMBIE_VILLAGER rG
	PARROT_STEP rH
	PHANTOM_AMBIENT rI
	PHANTOM_BITE rJ
	PHANTOM_DEATH rK
	PHANTOM_FLAP rL
	PHANTOM_HURT rM
	PHANTOM_SWOOP rN
	PIGLIN_ADMIRING_ITEM rT
	PIGLIN_AMBIENT rU
	PIGLIN_ANGRY rV
	PIGLIN_BRUTE_AMBIENT sd
	PIGLIN_BRUTE_ANGRY se
	PIGLIN_BRUTE_CONVERTED_TO_ZOMBIFIED si
	PIGLIN_BRUTE_DEATH sf
	PIGLIN_BRUTE_HURT sg
	PIGLIN_BRUTE_STEP sh
	PIGLIN_CELEBRATE rW
	PIGLIN_CONVERTED_TO_ZOMBIFIED sc
	PIGLIN_DEATH rX
	PIGLIN_HURT rZ
	PIGLIN_JEALOUS rY
	PIGLIN_RETREAT sa
	PIGLIN_STEP sb
	PIG_AMBIENT rO
	PIG_DEATH rP
	PIG_HURT rQ
	PIG_SADDLE rR
	PIG_STEP rS
	PILLAGER_AMBIENT sj
	PILLAGER_CELEBRATE sk
	PILLAGER_DEATH sl
	PILLAGER_HURT sm
	PINK_PETALS_BREAK nt
	PINK_PETALS_FALL nu
	PINK_PETALS_HIT nv
	PINK_PETALS_PLACE nw
	PINK_PETALS_STEP nx
	PISTON_CONTRACT sn
	PISTON_EXTEND so
	PLAYER_ATTACK_CRIT sp
	PLAYER_ATTACK_KNOCKBACK sq
	PLAYER_ATTACK_NODAMAGE sr
	PLAYER_ATTACK_STRONG ss
	PLAYER_ATTACK_SWEEP st
	PLAYER_ATTACK_WEAK su
	PLAYER_BIG_FALL sv
	PLAYER_BREATH sw
	PLAYER_BURP sx
	PLAYER_DEATH sy
	PLAYER_HURT sz
	PLAYER_HURT_DROWN sA
	PLAYER_HURT_FREEZE sB
	PLAYER_HURT_ON_FIRE sC
	PLAYER_HURT_SWEET_BERRY_BUSH sD
	PLAYER_LEVELUP sE
	PLAYER_SMALL_FALL sF
	PLAYER_SPLASH sG
	PLAYER_SPLASH_HIGH_SPEED sH
	PLAYER_SWIM sI
	POINTED_DRIPSTONE_BREAK gk
	POINTED_DRIPSTONE_DRIP_LAVA gq
	POINTED_DRIPSTONE_DRIP_LAVA_INTO_CAULDRON gs
	POINTED_DRIPSTONE_DRIP_WATER gr
	POINTED_DRIPSTONE_DRIP_WATER_INTO_CAULDRON gt
	POINTED_DRIPSTONE_FALL go
	POINTED_DRIPSTONE_HIT gn
	POINTED_DRIPSTONE_LAND gp
	POINTED_DRIPSTONE_PLACE gm
	POINTED_DRIPSTONE_STEP gl
	POLAR_BEAR_AMBIENT sJ
	POLAR_BEAR_AMBIENT_BABY sK
	POLAR_BEAR_DEATH sL
	POLAR_BEAR_HURT sM
	POLAR_BEAR_STEP sN
	POLAR_BEAR_WARNING sO
	POLISHED_DEEPSLATE_BREAK sP
	POLISHED_DEEPSLATE_FALL sQ
	POLISHED_DEEPSLATE_HIT sR
	POLISHED_DEEPSLATE_PLACE sS
	POLISHED_DEEPSLATE_STEP sT
	PORTAL_AMBIENT sU
	PORTAL_TRAVEL sV
	PORTAL_TRIGGER sW
	POWDER_SNOW_BREAK sX
	POWDER_SNOW_FALL sY
	POWDER_SNOW_HIT sZ
	POWDER_SNOW_PLACE ta
	POWDER_SNOW_STEP tb
	PUFFER_FISH_AMBIENT tc
	PUFFER_FISH_BLOW_OUT td
	PUFFER_FISH_BLOW_UP te
	PUFFER_FISH_DEATH tf
	PUFFER_FISH_FLOP tg
	PUFFER_FISH_HURT th
	PUFFER_FISH_STING ti
	PUMPKIN_CARVE tj
	RABBIT_AMBIENT tk
	RABBIT_ATTACK tl
	RABBIT_DEATH tm
	RABBIT_HURT tn
	RABBIT_JUMP to
	RAID_HORN tp
	RAVAGER_AMBIENT tq
	RAVAGER_ATTACK tr
	RAVAGER_CELEBRATE ts
	RAVAGER_DEATH tt
	RAVAGER_HURT tu
	RAVAGER_ROAR tx
	RAVAGER_STEP tv
	RAVAGER_STUNNED tw
	REDSTONE_TORCH_BURNOUT tI
	RESPAWN_ANCHOR_AMBIENT tJ
	RESPAWN_ANCHOR_CHARGE tK
	RESPAWN_ANCHOR_DEPLETE tL
	RESPAWN_ANCHOR_SET_SPAWN tM
	ROOTED_DIRT_BREAK tN
	ROOTED_DIRT_FALL tO
	ROOTED_DIRT_HIT tP
	ROOTED_DIRT_PLACE tQ
	ROOTED_DIRT_STEP tR
	ROOTS_BREAK iM
	ROOTS_FALL iQ
	ROOTS_HIT iP
	ROOTS_PLACE iO
	ROOTS_STEP iN
	SALMON_AMBIENT tS
	SALMON_DEATH tT
	SALMON_FLOP tU
	SALMON_HURT tV
	SAND_BREAK tW
	SAND_FALL tX
	SAND_HIT tY
	SAND_PLACE tZ
	SAND_STEP ua
	SCAFFOLDING_BREAK ub
	SCAFFOLDING_FALL uc
	SCAFFOLDING_HIT ud
	SCAFFOLDING_PLACE ue
	SCAFFOLDING_STEP uf
	SCULK_BLOCK_BREAK ui
	SCULK_BLOCK_CHARGE uh
	SCULK_BLOCK_FALL uj
	SCULK_BLOCK_HIT uk
	SCULK_BLOCK_PLACE ul
	SCULK_BLOCK_SPREAD ug
	SCULK_BLOCK_STEP um
	SCULK_CATALYST_BLOOM un
	SCULK_CATALYST_BREAK uo
	SCULK_CATALYST_FALL up
	SCULK_CATALYST_HIT uq
	SCULK_CATALYST_PLACE ur
	SCULK_CATALYST_STEP us
	SCULK_CLICKING ut
	SCULK_CLICKING_STOP uu
	SCULK_SENSOR_BREAK uv
	SCULK_SENSOR_FALL uw
	SCULK_SENSOR_HIT ux
	SCULK_SENSOR_PLACE uy
	SCULK_SENSOR_STEP uz
	SCULK_SHRIEKER_BREAK uA
	SCULK_SHRIEKER_FALL uB
	SCULK_SHRIEKER_HIT uC
	SCULK_SHRIEKER_PLACE uD
	SCULK_SHRIEKER_SHRIEK uE
	SCULK_SHRIEKER_STEP uF
	SCULK_VEIN_BREAK uG
	SCULK_VEIN_FALL uH
	SCULK_VEIN_HIT uI
	SCULK_VEIN_PLACE uJ
	SCULK_VEIN_STEP uK
	SHEEP_AMBIENT uL
	SHEEP_DEATH uM
	SHEEP_HURT uN
	SHEEP_SHEAR uO
	SHEEP_STEP uP
	SHIELD_BLOCK uQ
	SHIELD_BREAK uR
	SHOVEL_FLATTEN uX
	SHROOMLIGHT_BREAK uS
	SHROOMLIGHT_FALL uW
	SHROOMLIGHT_HIT uV
	SHROOMLIGHT_PLACE uU
	SHROOMLIGHT_STEP uT
	SHULKER_AMBIENT uY
	SHULKER_BOX_CLOSE uZ
	SHULKER_BOX_OPEN va
	SHULKER_BULLET_HIT vb
	SHULKER_BULLET_HURT vc
	SHULKER_CLOSE vd
	SHULKER_DEATH ve
	SHULKER_HURT vf
	SHULKER_HURT_CLOSED vg
	SHULKER_OPEN vh
	SHULKER_SHOOT vi
	SHULKER_TELEPORT vj
	SILVERFISH_AMBIENT vk
	SILVERFISH_DEATH vl
	SILVERFISH_HURT vm
	SILVERFISH_STEP vn
	SKELETON_AMBIENT vo
	SKELETON_CONVERTED_TO_STRAY vp
	SKELETON_DEATH vq
	SKELETON_HORSE_AMBIENT vr
	SKELETON_HORSE_AMBIENT_WATER vv
	SKELETON_HORSE_DEATH vs
	SKELETON_HORSE_GALLOP_WATER vw
	SKELETON_HORSE_HURT vt
	SKELETON_HORSE_JUMP_WATER vx
	SKELETON_HORSE_STEP_WATER vy
	SKELETON_HORSE_SWIM vu
	SKELETON_HURT vz
	SKELETON_SHOOT vA
	SKELETON_STEP vB
	SLIME_ATTACK vC
	SLIME_BLOCK_BREAK vH
	SLIME_BLOCK_FALL vI
	SLIME_BLOCK_HIT vJ
	SLIME_BLOCK_PLACE vK
	SLIME_BLOCK_STEP vL
	SLIME_DEATH vD
	SLIME_DEATH_SMALL ws
	SLIME_HURT vE
	SLIME_HURT_SMALL wt
	SLIME_JUMP vF
	SLIME_JUMP_SMALL wu
	SLIME_SQUISH vG
	SLIME_SQUISH_SMALL wv
	SMALL_AMETHYST_BUD_BREAK vM
	SMALL_AMETHYST_BUD_PLACE vN
	SMALL_DRIPLEAF_BREAK vO
	SMALL_DRIPLEAF_FALL vP
	SMALL_DRIPLEAF_HIT vQ
	SMALL_DRIPLEAF_PLACE vR
	SMALL_DRIPLEAF_STEP vS
	SMITHING_TABLE_USE ww
	SMOKER_SMOKE wx
	SNIFFER_DEATH wC
	SNIFFER_DIGGING wH
	SNIFFER_DIGGING_STOP wI
	SNIFFER_DROP_SEED wD
	SNIFFER_EAT wz
	SNIFFER_EGG_CRACK wL
	SNIFFER_EGG_HATCH wM
	SNIFFER_EGG_PLOP wK
	SNIFFER_HAPPY wJ
	SNIFFER_HURT wB
	SNIFFER_IDLE wA
	SNIFFER_SCENTING wE
	SNIFFER_SEARCHING wG
	SNIFFER_SNIFFING wF
	SNIFFER_STEP wy
	SNOWBALL_THROW wN
	SNOW_BREAK wO
	SNOW_FALL wP
	SNOW_GOLEM_AMBIENT wQ
	SNOW_GOLEM_DEATH wR
	SNOW_GOLEM_HURT wS
	SNOW_GOLEM_SHEAR wU
	SNOW_GOLEM_SHOOT wT
	SNOW_HIT wV
	SNOW_PLACE wW
	SNOW_STEP wX
	SOUL_ESCAPE wd
	SOUL_SAND_BREAK vT
	SOUL_SAND_FALL vX
	SOUL_SAND_HIT vW
	SOUL_SAND_PLACE vV
	SOUL_SAND_STEP vU
	SOUL_SOIL_BREAK vY
	SOUL_SOIL_FALL wc
	SOUL_SOIL_HIT wb
	SOUL_SOIL_PLACE wa
	SOUL_SOIL_STEP vZ
	SPIDER_AMBIENT wY
	SPIDER_DEATH wZ
	SPIDER_HURT xa
	SPIDER_STEP xb
	SPLASH_POTION_BREAK xc
	SPLASH_POTION_THROW xd
	SPORE_BLOSSOM_BREAK we
	SPORE_BLOSSOM_FALL wf
	SPORE_BLOSSOM_HIT wg
	SPORE_BLOSSOM_PLACE wh
	SPORE_BLOSSOM_STEP wi
	SPYGLASS_STOP_USING xf
	SPYGLASS_USE xe
	SQUID_AMBIENT xg
	SQUID_DEATH xh
	SQUID_HURT xi
	SQUID_SQUIRT xj
	STEM_BREAK pv
	STEM_FALL pz
	STEM_HIT py
	STEM_PLACE px
	STEM_STEP pw
	STONE_BREAK xk
	STONE_BUTTON_CLICK_OFF xl
	STONE_BUTTON_CLICK_ON xm
	STONE_FALL xn
	STONE_HIT xo
	STONE_PLACE xp
	STONE_PRESSURE_PLATE_CLICK_OFF xq
	STONE_PRESSURE_PLATE_CLICK_ON xr
	STONE_STEP xs
	STRAY_AMBIENT xt
	STRAY_DEATH xu
	STRAY_HURT xv
	STRAY_STEP xw
	STRIDER_AMBIENT wj
	STRIDER_DEATH wm
	STRIDER_EAT wq
	STRIDER_HAPPY wk
	STRIDER_HURT wn
	STRIDER_RETREAT wl
	STRIDER_SADDLE wr
	STRIDER_STEP wo
	STRIDER_STEP_LAVA wp
	SUSPICIOUS_GRAVEL_BREAK io
	SUSPICIOUS_GRAVEL_FALL is
	SUSPICIOUS_GRAVEL_HIT ir
	SUSPICIOUS_GRAVEL_PLACE iq
	SUSPICIOUS_GRAVEL_STEP ip
	SUSPICIOUS_SAND_BREAK ij
	SUSPICIOUS_SAND_FALL in
	SUSPICIOUS_SAND_HIT im
	SUSPICIOUS_SAND_PLACE il
	SUSPICIOUS_SAND_STEP ik
	SWEET_BERRY_BUSH_BREAK xx
	SWEET_BERRY_BUSH_PICK_BERRIES xz
	SWEET_BERRY_BUSH_PLACE xy
	TADPOLE_DEATH xA
	TADPOLE_FLOP xB
	TADPOLE_GROW_UP xC
	TADPOLE_HURT xD
	THORNS_HIT xE
	TNT_PRIMED xF
	TOTEM_USE xG
	TRIDENT_HIT xH
	TRIDENT_HIT_GROUND xI
	TRIDENT_RETURN xJ
	TRIDENT_RIPTIDE_1 xK
	TRIDENT_RIPTIDE_2 xL
	TRIDENT_RIPTIDE_3 xM
	TRIDENT_THROW xN
	TRIDENT_THUNDER xO
	TRIPWIRE_ATTACH xP
	TRIPWIRE_CLICK_OFF xQ
	TRIPWIRE_CLICK_ON xR
	TRIPWIRE_DETACH xS
	TROPICAL_FISH_AMBIENT xT
	TROPICAL_FISH_DEATH xU
	TROPICAL_FISH_FLOP xV
	TROPICAL_FISH_HURT xW
	TUFF_BREAK xX
	TUFF_FALL yb
	TUFF_HIT ya
	TUFF_PLACE xZ
	TUFF_STEP xY
	TURTLE_AMBIENT_LAND yc
	TURTLE_DEATH yd
	TURTLE_DEATH_BABY ye
	TURTLE_EGG_BREAK yf
	TURTLE_EGG_CRACK yg
	TURTLE_EGG_HATCH yh
	TURTLE_HURT yi
	TURTLE_HURT_BABY yj
	TURTLE_LAY_EGG yk
	TURTLE_SHAMBLE yl
	TURTLE_SHAMBLE_BABY ym
	TURTLE_SWIM yn
	UI_BUTTON_CLICK yo
	UI_CARTOGRAPHY_TABLE_TAKE_RESULT yr
	UI_LOOM_SELECT_PATTERN yp
	UI_LOOM_TAKE_RESULT yq
	UI_STONECUTTER_SELECT_RECIPE yt
	UI_STONECUTTER_TAKE_RESULT ys
	UI_TOAST_CHALLENGE_COMPLETE yu
	UI_TOAST_IN yv
	UI_TOAST_OUT yw
	VEX_AMBIENT yx
	VEX_CHARGE yy
	VEX_DEATH yz
	VEX_HURT yA
	VILLAGER_AMBIENT yB
	VILLAGER_CELEBRATE yC
	VILLAGER_DEATH yD
	VILLAGER_HURT yE
	VILLAGER_NO yF
	VILLAGER_TRADE yG
	VILLAGER_WORK_ARMORER yI
	VILLAGER_WORK_BUTCHER yJ
	VILLAGER_WORK_CARTOGRAPHER yK
	VILLAGER_WORK_CLERIC yL
	VILLAGER_WORK_FARMER yM
	VILLAGER_WORK_FISHERMAN yN
	VILLAGER_WORK_FLETCHER yO
	VILLAGER_WORK_LEATHERWORKER yP
	VILLAGER_WORK_LIBRARIAN yQ
	VILLAGER_WORK_MASON yR
	VILLAGER_WORK_SHEPHERD yS
	VILLAGER_WORK_TOOLSMITH yT
	VILLAGER_WORK_WEAPONSMITH yU
	VILLAGER_YES yH
	VINDICATOR_AMBIENT yV
	VINDICATOR_CELEBRATE yW
	VINDICATOR_DEATH yX
	VINDICATOR_HURT yY
	VINE_BREAK yZ
	VINE_FALL za
	VINE_HIT zb
	VINE_PLACE zc
	VINE_STEP zd
	WANDERING_TRADER_AMBIENT zf
	WANDERING_TRADER_DEATH zg
	WANDERING_TRADER_DISAPPEARED zh
	WANDERING_TRADER_DRINK_MILK zi
	WANDERING_TRADER_DRINK_POTION zj
	WANDERING_TRADER_HURT zk
	WANDERING_TRADER_NO zl
	WANDERING_TRADER_REAPPEARED zm
	WANDERING_TRADER_TRADE zn
	WANDERING_TRADER_YES zo
	WARDEN_AGITATED zp
	WARDEN_AMBIENT zq
	WARDEN_ANGRY zr
	WARDEN_ATTACK_IMPACT zs
	WARDEN_DEATH zt
	WARDEN_DIG zu
	WARDEN_EMERGE zv
	WARDEN_HEARTBEAT zw
	WARDEN_HURT zx
	WARDEN_LISTENING zy
	WARDEN_LISTENING_ANGRY zz
	WARDEN_NEARBY_CLOSE zA
	WARDEN_NEARBY_CLOSER zB
	WARDEN_NEARBY_CLOSEST zC
	WARDEN_ROAR zD
	WARDEN_SNIFF zE
	WARDEN_SONIC_BOOM zF
	WARDEN_SONIC_CHARGE zG
	WARDEN_STEP zH
	WARDEN_TENDRIL_CLICKS zI
	WART_BLOCK_BREAK pU
	WART_BLOCK_FALL pY
	WART_BLOCK_HIT pX
	WART_BLOCK_PLACE pW
	WART_BLOCK_STEP pV
	WATER_AMBIENT zK
	WAXED_SIGN_INTERACT_FAIL zJ
	WEATHER_RAIN zL
	WEATHER_RAIN_ABOVE zM
	WEEPING_VINES_BREAK pP
	WEEPING_VINES_FALL pT
	WEEPING_VINES_HIT pS
	WEEPING_VINES_PLACE pR
	WEEPING_VINES_STEP pQ
	WET_GRASS_BREAK zN
	WET_GRASS_FALL zO
	WET_GRASS_HIT zP
	WET_GRASS_PLACE zQ
	WET_GRASS_STEP zR
	WITCH_AMBIENT zS
	WITCH_CELEBRATE zT
	WITCH_DEATH zU
	WITCH_DRINK zV
	WITCH_HURT zW
	WITCH_THROW zX
	WITHER_AMBIENT zY
	WITHER_BREAK_BLOCK zZ
	WITHER_DEATH Aa
	WITHER_HURT Ab
	WITHER_SHOOT Ac
	WITHER_SKELETON_AMBIENT Ad
	WITHER_SKELETON_DEATH Ae
	WITHER_SKELETON_HURT Af
	WITHER_SKELETON_STEP Ag
	WITHER_SPAWN Ah
	WOLF_AMBIENT Ai
	WOLF_DEATH Aj
	WOLF_GROWL Ak
	WOLF_HOWL Al
	WOLF_HURT Am
	WOLF_PANT An
	WOLF_SHAKE Ao
	WOLF_STEP Ap
	WOLF_WHINE Aq
	WOODEN_BUTTON_CLICK_OFF Av
	WOODEN_BUTTON_CLICK_ON Aw
	WOODEN_DOOR_CLOSE Ar
	WOODEN_DOOR_OPEN As
	WOODEN_PRESSURE_PLATE_CLICK_OFF Ax
	WOODEN_PRESSURE_PLATE_CLICK_ON Ay
	WOODEN_TRAPDOOR_CLOSE At
	WOODEN_TRAPDOOR_OPEN Au
	WOOD_BREAK Az
	WOOD_FALL AA
	WOOD_HIT AB
	WOOD_PLACE AC
	WOOD_STEP AD
	WOOL_BREAK AE
	WOOL_FALL AF
	WOOL_HIT AG
	WOOL_PLACE AH
	WOOL_STEP AI
	ZOGLIN_AMBIENT AJ
	ZOGLIN_ANGRY AK
	ZOGLIN_ATTACK AL
	ZOGLIN_DEATH AM
	ZOGLIN_HURT AN
	ZOGLIN_STEP AO
	ZOMBIE_AMBIENT AP
	ZOMBIE_ATTACK_IRON_DOOR AR
	ZOMBIE_ATTACK_WOODEN_DOOR AQ
	ZOMBIE_BREAK_WOODEN_DOOR AS
	ZOMBIE_CONVERTED_TO_DROWNED AT
	ZOMBIE_DEATH AU
	ZOMBIE_DESTROY_EGG AV
	ZOMBIE_HORSE_AMBIENT AW
	ZOMBIE_HORSE_DEATH AX
	ZOMBIE_HORSE_HURT AY
	ZOMBIE_HURT AZ
	ZOMBIE_INFECT Ba
	ZOMBIE_STEP Bf
	ZOMBIE_VILLAGER_AMBIENT Bg
	ZOMBIE_VILLAGER_CONVERTED Bh
	ZOMBIE_VILLAGER_CURE Bi
	ZOMBIE_VILLAGER_DEATH Bj
	ZOMBIE_VILLAGER_HURT Bk
	ZOMBIE_VILLAGER_STEP Bl
	ZOMBIFIED_PIGLIN_AMBIENT Bb
	ZOMBIFIED_PIGLIN_ANGRY Bc
	ZOMBIFIED_PIGLIN_DEATH Bd
	ZOMBIFIED_PIGLIN_HURT Be
	register (Ljava/lang/String;)Lnet/minecraft/sounds/SoundEvent; a
	register (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/sounds/SoundEvent; a
	register (Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/sounds/SoundEvent; a
	register (Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/resources/ResourceLocation;F)Lnet/minecraft/core/Holder; a
	registerForHolder (Ljava/lang/String;)Lnet/minecraft/core/Holder$Reference; b
	registerForHolder (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/core/Holder$Reference; b
	registerForHolder (Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/core/Holder$Reference; b
	registerGoatHornSoundVariants ()Lcom/google/common/collect/ImmutableList; a
net/minecraft/sounds/SoundSource ami
	$VALUES l
	AMBIENT i
	BLOCKS e
	HOSTILE f
	MASTER a
	MUSIC b
	NEUTRAL g
	PLAYERS h
	RECORDS c
	VOICE j
	WEATHER d
	name k
	$values ()[Lnet/minecraft/sounds/SoundSource; b
	getName ()Ljava/lang/String; a
net/minecraft/stats/RecipeBook amk
	bookSettings c
	highlight b
	known a
	add (Lnet/minecraft/resources/ResourceLocation;)V a
	add (Lnet/minecraft/world/item/crafting/Recipe;)V a
	addHighlight (Lnet/minecraft/resources/ResourceLocation;)V d
	addHighlight (Lnet/minecraft/world/item/crafting/Recipe;)V f
	contains (Lnet/minecraft/resources/ResourceLocation;)Z b
	contains (Lnet/minecraft/world/item/crafting/Recipe;)Z b
	copyOverData (Lnet/minecraft/stats/RecipeBook;)V a
	getBookSettings ()Lnet/minecraft/stats/RecipeBookSettings; a
	isFiltering (Lnet/minecraft/world/inventory/RecipeBookMenu;)Z a
	isFiltering (Lnet/minecraft/world/inventory/RecipeBookType;)Z b
	isOpen (Lnet/minecraft/world/inventory/RecipeBookType;)Z a
	remove (Lnet/minecraft/resources/ResourceLocation;)V c
	remove (Lnet/minecraft/world/item/crafting/Recipe;)V c
	removeHighlight (Lnet/minecraft/world/item/crafting/Recipe;)V e
	setBookSetting (Lnet/minecraft/world/inventory/RecipeBookType;ZZ)V a
	setBookSettings (Lnet/minecraft/stats/RecipeBookSettings;)V a
	setFiltering (Lnet/minecraft/world/inventory/RecipeBookType;Z)V b
	setOpen (Lnet/minecraft/world/inventory/RecipeBookType;Z)V a
	willHighlight (Lnet/minecraft/world/item/crafting/Recipe;)Z d
net/minecraft/stats/RecipeBookSettings aml
	TAG_FIELDS a
	states b
	copy ()Lnet/minecraft/stats/RecipeBookSettings; a
	isFiltering (Lnet/minecraft/world/inventory/RecipeBookType;)Z b
	isOpen (Lnet/minecraft/world/inventory/RecipeBookType;)Z a
	read (Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/stats/RecipeBookSettings; a
	read (Lnet/minecraft/network/FriendlyByteBuf;)Lnet/minecraft/stats/RecipeBookSettings; a
	replaceFrom (Lnet/minecraft/stats/RecipeBookSettings;)V a
	setFiltering (Lnet/minecraft/world/inventory/RecipeBookType;Z)V b
	setOpen (Lnet/minecraft/world/inventory/RecipeBookType;Z)V a
	write (Lnet/minecraft/nbt/CompoundTag;)V b
	write (Lnet/minecraft/network/FriendlyByteBuf;)V b
net/minecraft/stats/RecipeBookSettings$TypeSettings aml$a
	filtering b
	open a
	copy ()Lnet/minecraft/stats/RecipeBookSettings$TypeSettings; a
net/minecraft/stats/ServerRecipeBook amm
	LOGGER d
	RECIPE_BOOK_TAG c
	addRecipes (Ljava/util/Collection;Lnet/minecraft/server/level/ServerPlayer;)I a
	fromNbt (Lnet/minecraft/nbt/CompoundTag;Lnet/minecraft/world/item/crafting/RecipeManager;)V a
	loadRecipes (Lnet/minecraft/nbt/ListTag;Ljava/util/function/Consumer;Lnet/minecraft/world/item/crafting/RecipeManager;)V a
	removeRecipes (Ljava/util/Collection;Lnet/minecraft/server/level/ServerPlayer;)I b
	sendInitialRecipeBook (Lnet/minecraft/server/level/ServerPlayer;)V a
	sendRecipes (Lnet/minecraft/network/protocol/game/ClientboundRecipePacket$State;Lnet/minecraft/server/level/ServerPlayer;Ljava/util/List;)V a
	toNbt ()Lnet/minecraft/nbt/CompoundTag; b
net/minecraft/stats/ServerStatsCounter amn
	LOGGER b
	dirty e
	file d
	server c
	fromJson (Lcom/google/gson/JsonObject;)Lnet/minecraft/nbt/CompoundTag; a
	getDirty ()Ljava/util/Set; d
	getKey (Lnet/minecraft/stats/Stat;)Lnet/minecraft/resources/ResourceLocation; b
	getStat (Lnet/minecraft/stats/StatType;Ljava/lang/String;)Ljava/util/Optional; a
	markAllDirty ()V c
	parseLocal (Lcom/mojang/datafixers/DataFixer;Ljava/lang/String;)V a
	save ()V a
	sendStats (Lnet/minecraft/server/level/ServerPlayer;)V a
	setValue (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/stats/Stat;I)V a
	toJson ()Ljava/lang/String; b
net/minecraft/stats/Stat amo
	formatter n
	type p
	value o
	buildName (Lnet/minecraft/stats/StatType;Ljava/lang/Object;)Ljava/lang/String; a
	format (I)Ljava/lang/String; a
	getType ()Lnet/minecraft/stats/StatType; a
	getValue ()Ljava/lang/Object; b
	locationToKey (Lnet/minecraft/resources/ResourceLocation;)Ljava/lang/String; a
net/minecraft/stats/StatFormatter amp
	DECIMAL_FORMAT a
	DEFAULT b
	DISTANCE d
	DIVIDE_BY_TEN c
	TIME e
net/minecraft/stats/StatType amq
	displayName c
	map b
	registry a
	contains (Ljava/lang/Object;)Z a
	get (Ljava/lang/Object;)Lnet/minecraft/stats/Stat; b
	get (Ljava/lang/Object;Lnet/minecraft/stats/StatFormatter;)Lnet/minecraft/stats/Stat; a
	getDisplayName ()Lnet/minecraft/network/chat/Component; c
	getRegistry ()Lnet/minecraft/core/Registry; a
	getTranslationKey ()Ljava/lang/String; b
net/minecraft/stats/Stats amr
	ANIMALS_BRED P
	AVIATE_ONE_CM B
	BELL_RING az
	BLOCK_MINED a
	BOAT_ONE_CM y
	CLEAN_ARMOR X
	CLEAN_BANNER Y
	CLEAN_SHULKER_BOX Z
	CLIMB_ONE_CM u
	CROUCH_ONE_CM q
	CROUCH_TIME o
	CUSTOM i
	DAMAGE_ABSORBED L
	DAMAGE_BLOCKED_BY_SHIELD K
	DAMAGE_DEALT G
	DAMAGE_DEALT_ABSORBED H
	DAMAGE_DEALT_RESISTED I
	DAMAGE_RESISTED M
	DAMAGE_TAKEN J
	DEATHS N
	DROP F
	EAT_CAKE_SLICE U
	ENCHANT_ITEM ak
	ENTITY_KILLED g
	ENTITY_KILLED_BY h
	FALL_ONE_CM t
	FILL_CAULDRON V
	FISH_CAUGHT R
	FLY_ONE_CM v
	HORSE_ONE_CM A
	INSPECT_DISPENSER ae
	INSPECT_DROPPER ac
	INSPECT_HOPPER ad
	INTERACT_WITH_ANVIL aC
	INTERACT_WITH_BEACON ab
	INTERACT_WITH_BLAST_FURNACE as
	INTERACT_WITH_BREWINGSTAND aa
	INTERACT_WITH_CAMPFIRE av
	INTERACT_WITH_CARTOGRAPHY_TABLE aw
	INTERACT_WITH_CRAFTING_TABLE an
	INTERACT_WITH_FURNACE am
	INTERACT_WITH_GRINDSTONE aD
	INTERACT_WITH_LECTERN au
	INTERACT_WITH_LOOM ax
	INTERACT_WITH_SMITHING_TABLE aF
	INTERACT_WITH_SMOKER at
	INTERACT_WITH_STONECUTTER ay
	ITEM_BROKEN d
	ITEM_CRAFTED b
	ITEM_DROPPED f
	ITEM_PICKED_UP e
	ITEM_USED c
	JUMP E
	LEAVE_GAME j
	MINECART_ONE_CM x
	MOB_KILLS O
	OPEN_BARREL ar
	OPEN_CHEST ao
	OPEN_ENDERCHEST aj
	OPEN_SHULKER_BOX aq
	PIG_ONE_CM z
	PLAYER_KILLS Q
	PLAY_NOTEBLOCK af
	PLAY_RECORD al
	PLAY_TIME k
	POT_FLOWER ah
	RAID_TRIGGER aA
	RAID_WIN aB
	SLEEP_IN_BED ap
	SPRINT_ONE_CM r
	STRIDER_ONE_CM D
	SWIM_ONE_CM C
	TALKED_TO_VILLAGER S
	TARGET_HIT aE
	TIME_SINCE_DEATH m
	TIME_SINCE_REST n
	TOTAL_WORLD_TIME l
	TRADED_WITH_VILLAGER T
	TRIGGER_TRAPPED_CHEST ai
	TUNE_NOTEBLOCK ag
	USE_CAULDRON W
	WALK_ONE_CM p
	WALK_ON_WATER_ONE_CM s
	WALK_UNDER_WATER_ONE_CM w
	makeCustomStat (Ljava/lang/String;Lnet/minecraft/stats/StatFormatter;)Lnet/minecraft/resources/ResourceLocation; a
	makeRegistryStatType (Ljava/lang/String;Lnet/minecraft/core/Registry;)Lnet/minecraft/stats/StatType; a
net/minecraft/stats/StatsCounter ams
	stats a
	getValue (Lnet/minecraft/stats/Stat;)I a
	getValue (Lnet/minecraft/stats/StatType;Ljava/lang/Object;)I a
	increment (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/stats/Stat;I)V b
	setValue (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/stats/Stat;I)V a
net/minecraft/tags/BannerPatternTags amu
	NO_ITEM_REQUIRED a
	PATTERN_ITEM_CREEPER c
	PATTERN_ITEM_FLOWER b
	PATTERN_ITEM_GLOBE f
	PATTERN_ITEM_MOJANG e
	PATTERN_ITEM_PIGLIN g
	PATTERN_ITEM_SKULL d
	create (Ljava/lang/String;)Lnet/minecraft/tags/TagKey; a
net/minecraft/tags/BiomeTags amv
	ALLOWS_SURFACE_SLIME_SPAWNS ap
	ALLOWS_TROPICAL_FISH_SPAWNS_AT_ANY_HEIGHT am
	HAS_ANCIENT_CITY T
	HAS_BASTION_REMNANT S
	HAS_BURIED_TREASURE p
	HAS_CLOSER_WATER_FOG Z
	HAS_DESERT_PYRAMID q
	HAS_END_CITY V
	HAS_IGLOO r
	HAS_JUNGLE_TEMPLE s
	HAS_MINESHAFT t
	HAS_MINESHAFT_MESA u
	HAS_NETHER_FORTRESS Q
	HAS_NETHER_FOSSIL R
	HAS_OCEAN_MONUMENT v
	HAS_OCEAN_RUIN_COLD w
	HAS_OCEAN_RUIN_WARM x
	HAS_PILLAGER_OUTPOST y
	HAS_RUINED_PORTAL_DESERT z
	HAS_RUINED_PORTAL_JUNGLE A
	HAS_RUINED_PORTAL_MOUNTAIN D
	HAS_RUINED_PORTAL_NETHER U
	HAS_RUINED_PORTAL_OCEAN B
	HAS_RUINED_PORTAL_STANDARD E
	HAS_RUINED_PORTAL_SWAMP C
	HAS_SHIPWRECK G
	HAS_SHIPWRECK_BEACHED F
	HAS_STRONGHOLD H
	HAS_SWAMP_HUT I
	HAS_TRAIL_RUINS O
	HAS_VILLAGE_DESERT J
	HAS_VILLAGE_PLAINS K
	HAS_VILLAGE_SAVANNA L
	HAS_VILLAGE_SNOWY M
	HAS_VILLAGE_TAIGA N
	HAS_WOODLAND_MANSION P
	INCREASED_FIRE_BURNOUT ac
	IS_BADLANDS f
	IS_BEACH c
	IS_DEEP_OCEAN a
	IS_END n
	IS_FOREST j
	IS_HILL g
	IS_JUNGLE i
	IS_MOUNTAIN e
	IS_NETHER m
	IS_OCEAN b
	IS_OVERWORLD l
	IS_RIVER d
	IS_SAVANNA k
	IS_TAIGA h
	MINESHAFT_BLOCKING X
	MORE_FREQUENT_DROWNED_SPAWNS ao
	PLAYS_UNDERWATER_MUSIC Y
	POLAR_BEARS_SPAWN_ON_ALTERNATE_BLOCKS an
	PRODUCES_CORALS_FROM_BONEMEAL ab
	REDUCED_WATER_AMBIENT_SPAWNS al
	REQUIRED_OCEAN_MONUMENT_SURROUNDING W
	SNOW_GOLEM_MELTS ad
	SPAWNS_COLD_VARIANT_FROGS ah
	SPAWNS_GOLD_RABBITS aj
	SPAWNS_SNOW_FOXES aq
	SPAWNS_WARM_VARIANT_FROGS ai
	SPAWNS_WHITE_RABBITS ak
	STRONGHOLD_BIASED_TO o
	WATER_ON_MAP_OUTLINES aa
	WITHOUT_PATROL_SPAWNS af
	WITHOUT_WANDERING_TRADER_SPAWNS ag
	WITHOUT_ZOMBIE_SIEGES ae
	create (Ljava/lang/String;)Lnet/minecraft/tags/TagKey; a
net/minecraft/tags/BlockTags amw
	ACACIA_LOGS x
	ALL_HANGING_SIGNS ay
	ALL_SIGNS az
	ANCIENT_CITY_REPLACEABLE bL
	ANIMALS_SPAWNABLE_ON bN
	ANVIL M
	AXOLOTLS_SPAWNABLE_ON bO
	AZALEA_GROWS_ON bX
	AZALEA_ROOT_REPLACEABLE bt
	BAMBOO_BLOCKS E
	BAMBOO_PLANTABLE_ON as
	BANNERS G
	BASE_STONE_NETHER bf
	BASE_STONE_OVERWORLD bc
	BEACON_BASE_BLOCKS aK
	BEDS R
	BEEHIVES aE
	BEE_GROWABLES aG
	BIG_DRIPLEAF_PLACEABLE bv
	BIRCH_LOGS w
	BUTTONS f
	CAMPFIRES aT
	CANDLES ae
	CANDLE_CAKES bi
	CAULDRONS bj
	CAVE_VINES bq
	CEILING_HANGING_SIGNS aw
	CHERRY_LOGS y
	CLIMBABLE aN
	COAL_ORES ab
	COMBINATION_STEP_SOUND_BLOCKS bm
	COMPLETES_FIND_TREE_TUTORIAL ah
	CONVERTABLE_TO_MUD bY
	COPPER_ORES ad
	CORALS ar
	CORAL_BLOCKS ao
	CORAL_PLANTS aq
	CRIMSON_STEMS C
	CROPS aF
	CRYSTAL_SOUND_BLOCKS bk
	DAMPENS_VIBRATIONS bo
	DARK_OAK_LOGS u
	DEAD_BUSH_MAY_PLACE_ON cb
	DEEPSLATE_ORE_REPLACEABLES be
	DIAMOND_ORES Y
	DIRT af
	DOORS p
	DRAGON_IMMUNE aA
	DRAGON_TRANSPARENT aB
	DRIPSTONE_REPLACEABLE bp
	EMERALD_ORES ac
	ENCHANTMENT_POWER_PROVIDER cl
	ENCHANTMENT_POWER_TRANSMITTER cm
	ENDERMAN_HOLDABLE aj
	FALL_DAMAGE_RESETTING aO
	FEATURES_CANNOT_REPLACE bF
	FENCES S
	FENCE_GATES aW
	FIRE aI
	FLOWERS U
	FLOWER_POTS ai
	FOXES_SPAWNABLE_ON bU
	FROGS_SPAWNABLE_ON bW
	FROG_PREFER_JUMP_TO bI
	GEODE_INVALID_BLOCKS bH
	GOATS_SPAWNABLE_ON bP
	GOLD_ORES W
	GUARDED_BY_PIGLINS aU
	HOGLIN_REPELLENTS aQ
	ICE ak
	IMPERMEABLE am
	INFINIBURN_END bb
	INFINIBURN_NETHER ba
	INFINIBURN_OVERWORLD aZ
	INSIDE_STEP_SOUND_BLOCKS bl
	INVALID_SPAWN_INSIDE cg
	IRON_ORES X
	JUNGLE_LOGS z
	LAPIS_ORES aa
	LAVA_POOL_STONE_CANNOT_REPLACE bG
	LEAVES O
	LOGS t
	LOGS_THAT_BURN r
	LUSH_GROUND_REPLACEABLE bs
	MAINTAINS_FARMLAND cn
	MANGROVE_LOGS B
	MANGROVE_LOGS_CAN_GROW_THROUGH bZ
	MANGROVE_ROOTS_CAN_GROW_THROUGH ca
	MINEABLE_WITH_AXE bx
	MINEABLE_WITH_HOE by
	MINEABLE_WITH_PICKAXE bz
	MINEABLE_WITH_SHOVEL bA
	MOOSHROOMS_SPAWNABLE_ON bQ
	MOSS_REPLACEABLE br
	MUSHROOM_GROW_BLOCK aY
	NEEDS_DIAMOND_TOOL bC
	NEEDS_IRON_TOOL bD
	NEEDS_STONE_TOOL bE
	NETHER_CARVER_REPLACEABLES bh
	NYLIUM aJ
	OAK_LOGS v
	OCCLUDES_VIBRATION_SIGNALS bn
	OVERWORLD_CARVER_REPLACEABLES bg
	OVERWORLD_NATURAL_LOGS s
	PARROTS_SPAWNABLE_ON bR
	PIGLIN_REPELLENTS V
	PLANKS b
	POLAR_BEARS_SPAWNABLE_ON_ALTERNATE bS
	PORTALS aH
	PRESSURE_PLATES l
	PREVENT_MOB_SPAWNING_INSIDE aV
	RABBITS_SPAWNABLE_ON bT
	RAILS N
	REDSTONE_ORES Z
	REPLACEABLE ck
	REPLACEABLE_BY_TREES cd
	SAND H
	SAPLINGS q
	SCULK_REPLACEABLE bJ
	SCULK_REPLACEABLE_WORLD_GEN bK
	SHULKER_BOXES aP
	SIGNS av
	SLABS K
	SMALL_DRIPLEAF_PLACEABLE bu
	SMALL_FLOWERS Q
	SMELTS_TO_GLASS I
	SNAPS_GOAT_HORN cc
	SNIFFER_DIGGABLE_BLOCK ch
	SNIFFER_EGG_HATCH_BOOST ci
	SNOW bw
	SNOW_LAYER_CANNOT_SURVIVE_ON ce
	SNOW_LAYER_CAN_SURVIVE_ON cf
	SOUL_FIRE_BASE_BLOCKS aR
	SOUL_SPEED_BLOCKS aL
	SPRUCE_LOGS A
	STAIRS J
	STANDING_SIGNS at
	STONE_BRICKS c
	STONE_BUTTONS e
	STONE_ORE_REPLACEABLES bd
	STONE_PRESSURE_PLATES n
	STRIDER_WARM_BLOCKS aS
	SWORD_EFFICIENT bB
	TALL_FLOWERS T
	TERRACOTTA ag
	TRAIL_RUINS_REPLACEABLE cj
	TRAPDOORS P
	UNDERWATER_BONEMEALS an
	UNSTABLE_BOTTOM_CENTER aX
	VALID_SPAWN al
	VIBRATION_RESONATORS bM
	WALLS L
	WALL_CORALS ap
	WALL_HANGING_SIGNS ax
	WALL_POST_OVERRIDE aM
	WALL_SIGNS au
	WARPED_STEMS D
	WART_BLOCKS F
	WITHER_IMMUNE aC
	WITHER_SUMMON_BASE_BLOCKS aD
	WOLVES_SPAWNABLE_ON bV
	WOODEN_BUTTONS d
	WOODEN_DOORS h
	WOODEN_FENCES k
	WOODEN_PRESSURE_PLATES m
	WOODEN_SLABS j
	WOODEN_STAIRS i
	WOODEN_TRAPDOORS o
	WOOL a
	WOOL_CARPETS g
	create (Ljava/lang/String;)Lnet/minecraft/tags/TagKey; a
net/minecraft/tags/CatVariantTags amx
	DEFAULT_SPAWNS a
	FULL_MOON_SPAWNS b
	create (Ljava/lang/String;)Lnet/minecraft/tags/TagKey; a
net/minecraft/tags/DamageTypeTags amy
	ALWAYS_HURTS_ENDER_DRAGONS y
	ALWAYS_MOST_SIGNIFICANT_FALL s
	ALWAYS_TRIGGERS_SILVERFISH x
	AVOIDS_GUARDIAN_THORNS w
	BURNS_ARMOR_STANDS v
	BYPASSES_ARMOR b
	BYPASSES_COOLDOWN e
	BYPASSES_EFFECTS f
	BYPASSES_ENCHANTMENTS h
	BYPASSES_INVULNERABILITY d
	BYPASSES_RESISTANCE g
	BYPASSES_SHIELD c
	DAMAGES_HELMET a
	IGNITES_ARMOR_STANDS u
	IS_DROWNING n
	IS_EXPLOSION l
	IS_FALL m
	IS_FIRE i
	IS_FREEZING o
	IS_LIGHTNING p
	IS_PROJECTILE j
	NO_ANGER q
	NO_IMPACT r
	WITCH_RESISTANT_TO k
	WITHER_IMMUNE_TO t
	create (Ljava/lang/String;)Lnet/minecraft/tags/TagKey; a
net/minecraft/tags/EntityTypeTags amz
	ARROWS d
	AXOLOTL_ALWAYS_HOSTILES g
	AXOLOTL_HUNT_TARGETS h
	BEEHIVE_INHABITORS c
	DISMOUNTS_UNDERWATER m
	FALL_DAMAGE_IMMUNE l
	FREEZE_HURTS_EXTRA_TYPES j
	FREEZE_IMMUNE_ENTITY_TYPES i
	FROG_FOOD k
	IMPACT_PROJECTILES e
	POWDER_SNOW_WALKABLE_MOBS f
	RAIDERS b
	SKELETONS a
	create (Ljava/lang/String;)Lnet/minecraft/tags/TagKey; a
net/minecraft/tags/FlatLevelGeneratorPresetTags ana
	VISIBLE a
	create (Ljava/lang/String;)Lnet/minecraft/tags/TagKey; a
net/minecraft/tags/FluidTags anb
	LAVA b
	WATER a
	create (Ljava/lang/String;)Lnet/minecraft/tags/TagKey; a
net/minecraft/tags/GameEventTags anc
	ALLAY_CAN_LISTEN e
	IGNORE_VIBRATIONS_SNEAKING d
	SHRIEKER_CAN_LISTEN c
	VIBRATIONS a
	WARDEN_CAN_LISTEN b
	create (Ljava/lang/String;)Lnet/minecraft/tags/TagKey; a
net/minecraft/tags/InstrumentTags and
	GOAT_HORNS c
	REGULAR_GOAT_HORNS a
	SCREAMING_GOAT_HORNS b
	create (Ljava/lang/String;)Lnet/minecraft/tags/TagKey; a
net/minecraft/tags/ItemTags ane
	ACACIA_LOGS v
	ANVIL K
	ARROWS at
	AXES aO
	AXOLOTL_TEMPT_ITEMS aA
	BAMBOO_BLOCKS C
	BANNERS E
	BEACON_PAYMENT_ITEMS aw
	BEDS P
	BIRCH_LOGS u
	BOATS am
	BOOKSHELF_BOOKS av
	BREAKS_DECORATED_POTS aT
	BUTTONS f
	CANDLES ai
	CHERRY_LOGS w
	CHEST_BOATS an
	CLUSTER_MAX_HARVESTABLES aC
	COALS as
	COAL_ORES ad
	COMPASSES aD
	COMPLETES_FIND_TREE_TUTORIAL al
	COPPER_ORES af
	CREEPER_DROP_MUSIC_DISCS ar
	CREEPER_IGNITERS aF
	CRIMSON_STEMS A
	DAMPENS_VIBRATIONS aB
	DARK_OAK_LOGS s
	DECORATED_POT_INGREDIENTS aM
	DECORATED_POT_SHERDS aL
	DIAMOND_ORES aa
	DIRT aj
	DOORS o
	EMERALD_ORES ae
	FENCES Q
	FENCE_GATES l
	FISHES ao
	FLOWERS S
	FOX_FOOD X
	FREEZE_IMMUNE_WEARABLES az
	GOLD_ORES Y
	HANGING_SIGNS aE
	HOES aP
	IGNORED_BY_PIGLIN_BABIES V
	IRON_ORES Z
	JUNGLE_LOGS x
	LAPIS_ORES ac
	LEAVES M
	LECTERN_BOOKS au
	LOGS r
	LOGS_THAT_BURN q
	MANGROVE_LOGS z
	MUSIC_DISCS aq
	NON_FLAMMABLE_WOOD ag
	NOTE_BLOCK_TOP_INSTRUMENTS aG
	OAK_LOGS t
	PICKAXES aQ
	PIGLIN_FOOD W
	PIGLIN_LOVED U
	PIGLIN_REPELLENTS T
	PLANKS b
	RAILS L
	REDSTONE_ORES ab
	SAND F
	SAPLINGS p
	SHOVELS aR
	SIGNS ap
	SLABS I
	SMALL_FLOWERS O
	SMELTS_TO_GLASS G
	SNIFFER_FOOD aK
	SOUL_FIRE_BASE_BLOCKS ah
	SPRUCE_LOGS y
	STAIRS H
	STONE_BRICKS c
	STONE_BUTTONS e
	STONE_CRAFTING_MATERIALS ay
	STONE_TOOL_MATERIALS ax
	SWORDS aN
	TALL_FLOWERS R
	TERRACOTTA ak
	TOOLS aS
	TRAPDOORS N
	TRIMMABLE_ARMOR aH
	TRIM_MATERIALS aI
	TRIM_TEMPLATES aJ
	VILLAGER_PLANTABLE_SEEDS aU
	WALLS J
	WARPED_STEMS B
	WART_BLOCKS D
	WOODEN_BUTTONS d
	WOODEN_DOORS h
	WOODEN_FENCES k
	WOODEN_PRESSURE_PLATES m
	WOODEN_SLABS j
	WOODEN_STAIRS i
	WOODEN_TRAPDOORS n
	WOOL a
	WOOL_CARPETS g
	bind (Ljava/lang/String;)Lnet/minecraft/tags/TagKey; a
net/minecraft/tags/PaintingVariantTags anf
	PLACEABLE a
	create (Ljava/lang/String;)Lnet/minecraft/tags/TagKey; a
net/minecraft/tags/PoiTypeTags ang
	ACQUIRABLE_JOB_SITE a
	BEE_HOME c
	VILLAGE b
	create (Ljava/lang/String;)Lnet/minecraft/tags/TagKey; a
net/minecraft/tags/StructureTags anh
	CATS_SPAWN_AS_BLACK g
	CATS_SPAWN_IN f
	DOLPHIN_LOCATED b
	EYE_OF_ENDER_LOCATED a
	MINESHAFT i
	OCEAN_RUIN l
	ON_OCEAN_EXPLORER_MAPS d
	ON_TREASURE_MAPS e
	ON_WOODLAND_EXPLORER_MAPS c
	RUINED_PORTAL k
	SHIPWRECK j
	VILLAGE h
	create (Ljava/lang/String;)Lnet/minecraft/tags/TagKey; a
net/minecraft/tags/TagBuilder ani
	entries a
	add (Lnet/minecraft/tags/TagEntry;)Lnet/minecraft/tags/TagBuilder; a
	addElement (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/tags/TagBuilder; a
	addOptionalElement (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/tags/TagBuilder; b
	addOptionalTag (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/tags/TagBuilder; d
	addTag (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/tags/TagBuilder; c
	build ()Ljava/util/List; b
	create ()Lnet/minecraft/tags/TagBuilder; a
net/minecraft/tags/TagEntry anj
	CODEC a
	FULL_CODEC b
	id c
	required e
	tag d
	build (Lnet/minecraft/tags/TagEntry$Lookup;Ljava/util/function/Consumer;)Z a
	element (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/tags/TagEntry; a
	elementOrTag ()Lnet/minecraft/util/ExtraCodecs$TagOrElementLocation; a
	optionalElement (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/tags/TagEntry; b
	optionalTag (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/tags/TagEntry; d
	tag (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/tags/TagEntry; c
	verifyIfPresent (Ljava/util/function/Predicate;Ljava/util/function/Predicate;)Z a
	visitOptionalDependencies (Ljava/util/function/Consumer;)V b
	visitRequiredDependencies (Ljava/util/function/Consumer;)V a
net/minecraft/tags/TagEntry$Lookup anj$a
	element (Lnet/minecraft/resources/ResourceLocation;)Ljava/lang/Object; a
	tag (Lnet/minecraft/resources/ResourceLocation;)Ljava/util/Collection; b
net/minecraft/tags/TagFile ank
	CODEC a
	entries b
	replace c
	entries ()Ljava/util/List; a
	replace ()Z b
net/minecraft/tags/TagKey anl
	VALUES c
	location b
	registry a
	cast (Lnet/minecraft/resources/ResourceKey;)Ljava/util/Optional; d
	codec (Lnet/minecraft/resources/ResourceKey;)Lcom/mojang/serialization/Codec; a
	create (Lnet/minecraft/resources/ResourceKey;Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/tags/TagKey; a
	hashedCodec (Lnet/minecraft/resources/ResourceKey;)Lcom/mojang/serialization/Codec; b
	isFor (Lnet/minecraft/resources/ResourceKey;)Z c
	location ()Lnet/minecraft/resources/ResourceLocation; b
	registry ()Lnet/minecraft/resources/ResourceKey; a
net/minecraft/tags/TagLoader anm
	LOGGER a
	directory c
	idToValue b
	build (Ljava/util/Map;)Ljava/util/Map; a
	build (Lnet/minecraft/tags/TagEntry$Lookup;Ljava/util/List;)Lcom/mojang/datafixers/util/Either; a
	load (Lnet/minecraft/server/packs/resources/ResourceManager;)Ljava/util/Map; a
	loadAndBuild (Lnet/minecraft/server/packs/resources/ResourceManager;)Ljava/util/Map; b
net/minecraft/tags/TagLoader$EntryWithSource anm$a
	entry a
	source b
	entry ()Lnet/minecraft/tags/TagEntry; a
	source ()Ljava/lang/String; b
net/minecraft/tags/TagLoader$SortingEntry anm$b
	entries a
	entries ()Ljava/util/List; a
	visitOptionalDependencies (Ljava/util/function/Consumer;)V b
	visitRequiredDependencies (Ljava/util/function/Consumer;)V a
net/minecraft/tags/TagManager ann
	CUSTOM_REGISTRY_DIRECTORIES a
	registryAccess b
	results c
	createLoader (Lnet/minecraft/server/packs/resources/ResourceManager;Ljava/util/concurrent/Executor;Lnet/minecraft/core/RegistryAccess$RegistryEntry;)Ljava/util/concurrent/CompletableFuture; a
	getResult ()Ljava/util/List; a
	getTagDir (Lnet/minecraft/resources/ResourceKey;)Ljava/lang/String; a
	reload (Lnet/minecraft/server/packs/resources/PreparableReloadListener$PreparationBarrier;Lnet/minecraft/server/packs/resources/ResourceManager;Lnet/minecraft/util/profiling/ProfilerFiller;Lnet/minecraft/util/profiling/ProfilerFiller;Ljava/util/concurrent/Executor;Ljava/util/concurrent/Executor;)Ljava/util/concurrent/CompletableFuture; a
net/minecraft/tags/TagManager$LoadResult ann$a
	key a
	tags b
	key ()Lnet/minecraft/resources/ResourceKey; a
	tags ()Ljava/util/Map; b
net/minecraft/tags/TagNetworkSerialization ano
	deserializeTagsFromNetwork (Lnet/minecraft/resources/ResourceKey;Lnet/minecraft/core/Registry;Lnet/minecraft/tags/TagNetworkSerialization$NetworkPayload;Lnet/minecraft/tags/TagNetworkSerialization$TagOutput;)V a
	serializeTagsToNetwork (Lnet/minecraft/core/LayeredRegistryAccess;)Ljava/util/Map; a
	serializeToNetwork (Lnet/minecraft/core/Registry;)Lnet/minecraft/tags/TagNetworkSerialization$NetworkPayload; a
net/minecraft/tags/TagNetworkSerialization$NetworkPayload ano$a
	tags a
	isEmpty ()Z a
	read (Lnet/minecraft/network/FriendlyByteBuf;)Lnet/minecraft/tags/TagNetworkSerialization$NetworkPayload; b
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/tags/TagNetworkSerialization$TagOutput ano$b
net/minecraft/tags/WorldPresetTags anp
	EXTENDED b
	NORMAL a
	create (Ljava/lang/String;)Lnet/minecraft/tags/TagKey; a
net/minecraft/util/AbortableIterationConsumer anr
net/minecraft/util/AbortableIterationConsumer$Continuation anr$a
	$VALUES c
	ABORT b
	CONTINUE a
	$values ()[Lnet/minecraft/util/AbortableIterationConsumer$Continuation; b
	shouldAbort ()Z a
net/minecraft/util/BitStorage ans
	copy ()Lnet/minecraft/util/BitStorage; d
	get (I)I a
	getAll (Ljava/util/function/IntConsumer;)V a
	getAndSet (II)I a
	getBits ()I c
	getRaw ()[J a
	getSize ()I b
	set (II)V b
	unpack ([I)V a
net/minecraft/util/Brightness ant
	CODEC b
	FULL_BRIGHT c
	LIGHT_VALUE_CODEC a
	block d
	sky e
	block ()I b
	pack ()I a
	sky ()I c
	unpack (I)Lnet/minecraft/util/Brightness; a
net/minecraft/util/ByIdMap anu
	continuous (Ljava/util/function/ToIntFunction;[Ljava/lang/Object;Lnet/minecraft/util/ByIdMap$OutOfBoundsStrategy;)Ljava/util/function/IntFunction; a
	createMap (Ljava/util/function/ToIntFunction;[Ljava/lang/Object;)Ljava/util/function/IntFunction; a
	createSortedArray (Ljava/util/function/ToIntFunction;[Ljava/lang/Object;)[Ljava/lang/Object; b
	sparse (Ljava/util/function/ToIntFunction;[Ljava/lang/Object;Ljava/lang/Object;)Ljava/util/function/IntFunction; a
net/minecraft/util/ByIdMap$OutOfBoundsStrategy anu$a
	$VALUES d
	CLAMP c
	WRAP b
	ZERO a
	$values ()[Lnet/minecraft/util/ByIdMap$OutOfBoundsStrategy; a
net/minecraft/util/ClassInstanceMultiMap anv
	allInstances c
	baseClass b
	byClass a
	find (Ljava/lang/Class;)Ljava/util/Collection; a
	getAllInstances ()Ljava/util/List; a
net/minecraft/util/CommonColors anw
	BLACK b
	GRAY c
	RED d
	WHITE a
net/minecraft/util/CommonLinks anx
	ACCESSIBILITY_HELP j
	ACCOUNT_SETTINGS f
	ATTRIBUTION c
	BLOCKING_HELP m
	BUY_MINECRAFT_JAVA e
	BUY_REALMS p
	EULA b
	GDPR a
	LICENSES d
	REALMS_CONTENT_CREATION r
	REALMS_TERMS q
	REALMS_UPDATE_MOJANG_ACCOUNT s
	RELEASE_FEEDBACK h
	REPORTING_HELP k
	SNAPSHOT_BUGS_FEEDBACK i
	SNAPSHOT_FEEDBACK g
	START_REALMS_TRIAL o
	SUSPENSION_HELP l
	SYMLINK_HELP n
	extendRealms (Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; a
	extendRealms (Ljava/lang/String;Ljava/lang/String;Z)Ljava/lang/String; a
net/minecraft/util/CrudeIncrementalIntIdentityHashBiMap any
	EMPTY_SLOT c
	LOADFACTOR d
	NOT_FOUND b
	byId g
	keys e
	nextId h
	size i
	values f
	add (Ljava/lang/Object;)I c
	addMapping (Ljava/lang/Object;I)V a
	byId (I)Ljava/lang/Object; a
	clear ()V a
	contains (I)Z d
	contains (Ljava/lang/Object;)Z b
	copy ()Lnet/minecraft/util/CrudeIncrementalIntIdentityHashBiMap; c
	create (I)Lnet/minecraft/util/CrudeIncrementalIntIdentityHashBiMap; c
	findEmpty (I)I g
	getId (Ljava/lang/Object;)I a
	getValue (I)I e
	grow (I)V f
	hash (Ljava/lang/Object;)I d
	indexOf (Ljava/lang/Object;I)I b
	nextId ()I d
	size ()I b
net/minecraft/util/Crypt anz
	ASYMMETRIC_ALGORITHM j
	ASYMMETRIC_BITS k
	BYTE_ENCODING l
	HASH_ALGORITHM m
	MIME_ENCODER e
	MIME_LINE_SEPARATOR d
	PEM_RSA_PRIVATE_KEY_FOOTER o
	PEM_RSA_PRIVATE_KEY_HEADER n
	PRIVATE_KEY_CODEC g
	PUBLIC_KEY_CODEC f
	RSA_PUBLIC_KEY_FOOTER p
	RSA_PUBLIC_KEY_HEADER c
	SIGNATURE_BYTES b
	SIGNING_ALGORITHM a
	SYMMETRIC_ALGORITHM h
	SYMMETRIC_BITS i
	byteToPrivateKey ([B)Ljava/security/PrivateKey; b
	byteToPublicKey ([B)Ljava/security/PublicKey; a
	cipherData (ILjava/security/Key;[B)[B a
	decryptByteToSecretKey (Ljava/security/PrivateKey;[B)Ljavax/crypto/SecretKey; a
	decryptUsingKey (Ljava/security/Key;[B)[B b
	digestData (Ljava/lang/String;Ljava/security/PublicKey;Ljavax/crypto/SecretKey;)[B a
	digestData ([[B)[B a
	encryptUsingKey (Ljava/security/Key;[B)[B a
	generateKeyPair ()Ljava/security/KeyPair; b
	generateSecretKey ()Ljavax/crypto/SecretKey; a
	getCipher (ILjava/security/Key;)Ljavax/crypto/Cipher; a
	pemRsaPrivateKeyToString (Ljava/security/PrivateKey;)Ljava/lang/String; a
	rsaPublicKeyToString (Ljava/security/PublicKey;)Ljava/lang/String; a
	rsaStringToKey (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lnet/minecraft/util/Crypt$ByteArrayToKeyFunction;)Ljava/security/Key; a
	setupCipher (ILjava/lang/String;Ljava/security/Key;)Ljavax/crypto/Cipher; a
	stringToPemRsaPrivateKey (Ljava/lang/String;)Ljava/security/PrivateKey; a
	stringToRsaPublicKey (Ljava/lang/String;)Ljava/security/PublicKey; b
net/minecraft/util/Crypt$ByteArrayToKeyFunction anz$a
net/minecraft/util/Crypt$SaltSignaturePair anz$b
	EMPTY a
	salt b
	signature c
	isValid ()Z a
	salt ()J c
	saltAsBytes ()[B b
	signature ()[B d
	write (Lnet/minecraft/network/FriendlyByteBuf;Lnet/minecraft/util/Crypt$SaltSignaturePair;)V a
net/minecraft/util/Crypt$SaltSupplier anz$c
	secureRandom a
	getLong ()J a
net/minecraft/util/CryptException aoa
net/minecraft/util/CsvOutput aob
	FIELD_SEPARATOR b
	LINE_SEPARATOR a
	columnCount d
	output c
	builder ()Lnet/minecraft/util/CsvOutput$Builder; a
	getStringValue (Ljava/lang/Object;)Ljava/lang/String; a
	writeLine (Ljava/util/stream/Stream;)V a
	writeRow ([Ljava/lang/Object;)V a
net/minecraft/util/CsvOutput$Builder aob$a
	headers a
	addColumn (Ljava/lang/String;)Lnet/minecraft/util/CsvOutput$Builder; a
	build (Ljava/io/Writer;)Lnet/minecraft/util/CsvOutput; a
net/minecraft/util/CubicSampler aoc
	GAUSSIAN_SAMPLE_BREADTH b
	GAUSSIAN_SAMPLE_KERNEL c
	GAUSSIAN_SAMPLE_RADIUS a
	gaussianSampleVec3 (Lnet/minecraft/world/phys/Vec3;Lnet/minecraft/util/CubicSampler$Vec3Fetcher;)Lnet/minecraft/world/phys/Vec3; a
net/minecraft/util/CubicSampler$Vec3Fetcher aoc$a
net/minecraft/util/CubicSpline aod
	builder (Lnet/minecraft/util/ToFloatFunction;)Lnet/minecraft/util/CubicSpline$Builder; a
	builder (Lnet/minecraft/util/ToFloatFunction;Lnet/minecraft/util/ToFloatFunction;)Lnet/minecraft/util/CubicSpline$Builder; a
	codec (Lcom/mojang/serialization/Codec;)Lcom/mojang/serialization/Codec; a
	constant (F)Lnet/minecraft/util/CubicSpline; a
	mapAll (Lnet/minecraft/util/CubicSpline$CoordinateVisitor;)Lnet/minecraft/util/CubicSpline; a
	parityString ()Ljava/lang/String; a
net/minecraft/util/CubicSpline$Builder aod$b
	coordinate a
	derivatives e
	locations c
	valueTransformer b
	values d
	addPoint (FF)Lnet/minecraft/util/CubicSpline$Builder; a
	addPoint (FFF)Lnet/minecraft/util/CubicSpline$Builder; a
	addPoint (FLnet/minecraft/util/CubicSpline;)Lnet/minecraft/util/CubicSpline$Builder; a
	addPoint (FLnet/minecraft/util/CubicSpline;F)Lnet/minecraft/util/CubicSpline$Builder; a
	build ()Lnet/minecraft/util/CubicSpline; a
net/minecraft/util/CubicSpline$Constant aod$c
	value b
	apply (Ljava/lang/Object;)F a
	mapAll (Lnet/minecraft/util/CubicSpline$CoordinateVisitor;)Lnet/minecraft/util/CubicSpline; a
	maxValue ()F c
	minValue ()F b
	parityString ()Ljava/lang/String; a
	value ()F d
net/minecraft/util/CubicSpline$CoordinateVisitor aod$d
net/minecraft/util/CubicSpline$Multipoint aod$e
	coordinate b
	derivatives e
	locations c
	maxValue g
	minValue f
	values d
	apply (Ljava/lang/Object;)F a
	coordinate ()Lnet/minecraft/util/ToFloatFunction; d
	create (Lnet/minecraft/util/ToFloatFunction;[FLjava/util/List;[F)Lnet/minecraft/util/CubicSpline$Multipoint; a
	derivatives ()[F g
	findIntervalStart ([FF)I a
	linearExtend (F[FF[FI)F a
	locations ()[F e
	mapAll (Lnet/minecraft/util/CubicSpline$CoordinateVisitor;)Lnet/minecraft/util/CubicSpline; a
	maxValue ()F c
	minValue ()F b
	parityString ()Ljava/lang/String; a
	toString ([F)Ljava/lang/String; a
	validateSizes ([FLjava/util/List;[F)V a
	values ()Ljava/util/List; f
net/minecraft/util/DebugBuffer aoe
	data a
	index b
	dump ()Ljava/util/List; a
	push (Ljava/lang/Object;)V a
net/minecraft/util/DependencySorter aof
	contents a
	addDependencyIfNotCyclic (Lcom/google/common/collect/Multimap;Ljava/lang/Object;Ljava/lang/Object;)V b
	addEntry (Ljava/lang/Object;Lnet/minecraft/util/DependencySorter$Entry;)Lnet/minecraft/util/DependencySorter; a
	isCyclic (Lcom/google/common/collect/Multimap;Ljava/lang/Object;Ljava/lang/Object;)Z a
	orderByDependencies (Ljava/util/function/BiConsumer;)V a
	visitDependenciesAndElement (Lcom/google/common/collect/Multimap;Ljava/util/Set;Ljava/lang/Object;Ljava/util/function/BiConsumer;)V a
net/minecraft/util/DependencySorter$Entry aof$a
	visitOptionalDependencies (Ljava/util/function/Consumer;)V b
	visitRequiredDependencies (Ljava/util/function/Consumer;)V a
net/minecraft/util/DirectoryLock aog
	DUMMY d
	LOCK_FILE a
	lock c
	lockFile b
	create (Ljava/nio/file/Path;)Lnet/minecraft/util/DirectoryLock; a
	isLocked (Ljava/nio/file/Path;)Z b
	isValid ()Z a
net/minecraft/util/DirectoryLock$LockException aog$a
	alreadyLocked (Ljava/nio/file/Path;)Lnet/minecraft/util/DirectoryLock$LockException; a
net/minecraft/util/ExceptionCollector aoh
	result a
	add (Ljava/lang/Throwable;)V a
	throwIfPresent ()V a
net/minecraft/util/ExtraCodecs aoi
	AXISANGLE4F f
	BASE64_STRING n
	BIT_SET r
	CODEPOINT v
	COMPONENT b
	FLAT_COMPONENT c
	GAME_PROFILE t
	INSTANT_ISO8601 m
	JSON a
	MATRIX4F h
	NON_EMPTY_STRING u
	NON_NEGATIVE_INT i
	PATTERN l
	POSITIVE_FLOAT k
	POSITIVE_INT j
	PROPERTY w
	PROPERTY_MAP s
	QUATERNIONF g
	QUATERNIONF_COMPONENTS e
	TAG_OR_ELEMENT_ID o
	VECTOR3F d
	fromOptionalLong q
	toOptionalLong p
	asOptionalLong (Lcom/mojang/serialization/MapCodec;)Lcom/mojang/serialization/MapCodec; a
	catchDecoderException (Lcom/mojang/serialization/Codec;)Lcom/mojang/serialization/Codec; c
	ensureHomogenous (Ljava/util/function/Function;)Ljava/util/function/Function; b
	floatRangeMinExclusiveWithMessage (FFLjava/util/function/Function;)Lcom/mojang/serialization/Codec; a
	idResolverCodec (Ljava/util/function/ToIntFunction;Ljava/util/function/IntFunction;I)Lcom/mojang/serialization/Codec; a
	instantCodec (Ljava/time/format/DateTimeFormatter;)Lcom/mojang/serialization/Codec; a
	intRange (II)Lcom/mojang/serialization/Codec; a
	intRangeWithMessage (IILjava/util/function/Function;)Lcom/mojang/serialization/Codec; a
	intervalCodec (Lcom/mojang/serialization/Codec;Ljava/lang/String;Ljava/lang/String;Ljava/util/function/BiFunction;Ljava/util/function/Function;Ljava/util/function/Function;)Lcom/mojang/serialization/Codec; a
	lazyInitializedCodec (Ljava/util/function/Supplier;)Lcom/mojang/serialization/Codec; a
	mapGameProfileToIdName (Lcom/mojang/authlib/GameProfile;)Lcom/mojang/serialization/DataResult; a
	mapIdNameToGameProfile (Lcom/mojang/datafixers/util/Pair;)Lcom/mojang/serialization/DataResult; a
	nonEmptyHolderSet (Lcom/mojang/serialization/Codec;)Lcom/mojang/serialization/Codec; b
	nonEmptyList (Lcom/mojang/serialization/Codec;)Lcom/mojang/serialization/Codec; a
	orCompressed (Lcom/mojang/serialization/Codec;Lcom/mojang/serialization/Codec;)Lcom/mojang/serialization/Codec; b
	orElsePartial (Ljava/lang/Object;)Lcom/mojang/serialization/Codec$ResultFunction; a
	overrideLifecycle (Lcom/mojang/serialization/Codec;Ljava/util/function/Function;Ljava/util/function/Function;)Lcom/mojang/serialization/Codec; a
	retrieveContext (Ljava/util/function/Function;)Lcom/mojang/serialization/MapCodec; a
	sizeLimitedString (II)Lcom/mojang/serialization/Codec; b
	stringResolverCodec (Ljava/util/function/Function;Ljava/util/function/Function;)Lcom/mojang/serialization/Codec; a
	validate (Lcom/mojang/serialization/Codec;Ljava/util/function/Function;)Lcom/mojang/serialization/Codec; a
	validate (Lcom/mojang/serialization/MapCodec;Ljava/util/function/Function;)Lcom/mojang/serialization/MapCodec; a
	xor (Lcom/mojang/serialization/Codec;Lcom/mojang/serialization/Codec;)Lcom/mojang/serialization/Codec; a
net/minecraft/util/ExtraCodecs$EitherCodec aoi$b
	first a
	second b
	encode (Lcom/mojang/datafixers/util/Either;Lcom/mojang/serialization/DynamicOps;Ljava/lang/Object;)Lcom/mojang/serialization/DataResult; a
net/minecraft/util/ExtraCodecs$LazyInitializedCodec aoi$c
	delegate a
	delegate ()Ljava/util/function/Supplier; a
net/minecraft/util/ExtraCodecs$TagOrElementLocation aoi$d
	id a
	tag b
	decoratedId ()Ljava/lang/String; c
	id ()Lnet/minecraft/resources/ResourceLocation; a
	tag ()Z b
net/minecraft/util/ExtraCodecs$XorCodec aoi$e
	first a
	second b
	encode (Lcom/mojang/datafixers/util/Either;Lcom/mojang/serialization/DynamicOps;Ljava/lang/Object;)Lcom/mojang/serialization/DataResult; a
net/minecraft/util/FastBufferedInputStream aoj
	DEFAULT_BUFFER_SIZE a
	buffer c
	in b
	limit d
	position e
	bytesInBuffer ()I a
	fill ()V b
net/minecraft/util/FastColor aok
net/minecraft/util/FastColor$ABGR32 aok$a
	alpha (I)I a
	blue (I)I d
	color (II)I a
	color (IIII)I a
	green (I)I c
	opaque (I)I f
	red (I)I b
	transparent (I)I e
net/minecraft/util/FastColor$ARGB32 aok$b
	alpha (I)I a
	blue (I)I d
	color (IIII)I a
	green (I)I c
	lerp (FII)I a
	multiply (II)I a
	red (I)I b
net/minecraft/util/FileZipper aol
	LOGGER a
	fs d
	outputFile b
	tempFile c
	add (Ljava/nio/file/Path;)V a
	add (Ljava/nio/file/Path;Ljava/io/File;)V a
	add (Ljava/nio/file/Path;Ljava/lang/String;)V a
net/minecraft/util/FormattedCharSequence aom
	EMPTY a
net/minecraft/util/FormattedCharSink aon
net/minecraft/util/FrameTimer aoo
	LOGGING_LENGTH a
	logEnd e
	logLength d
	logStart c
	loggedTimes b
	getAverageDuration (I)J a
	getLog ()[J c
	getLogEnd ()I b
	getLogStart ()I a
	logFrameDuration (J)V a
	scaleAverageDurationTo (II)I a
	scaleSampleTo (JII)I a
	wrapIndex (I)I b
net/minecraft/util/FutureChain aop
	LOGGER b
	checkedExecutor d
	closed e
	head c
net/minecraft/util/Graph aoq
	depthFirstSearch (Ljava/util/Map;Ljava/util/Set;Ljava/util/Set;Ljava/util/function/Consumer;Ljava/lang/Object;)Z a
net/minecraft/util/GsonHelper aor
	GSON a
	convertToBigDecimal (Lcom/google/gson/JsonElement;Ljava/lang/String;)Ljava/math/BigDecimal; j
	convertToBigInteger (Lcom/google/gson/JsonElement;Ljava/lang/String;)Ljava/math/BigInteger; k
	convertToBoolean (Lcom/google/gson/JsonElement;Ljava/lang/String;)Z c
	convertToByte (Lcom/google/gson/JsonElement;Ljava/lang/String;)B h
	convertToCharacter (Lcom/google/gson/JsonElement;Ljava/lang/String;)C i
	convertToDouble (Lcom/google/gson/JsonElement;Ljava/lang/String;)D d
	convertToFloat (Lcom/google/gson/JsonElement;Ljava/lang/String;)F e
	convertToInt (Lcom/google/gson/JsonElement;Ljava/lang/String;)I g
	convertToItem (Lcom/google/gson/JsonElement;Ljava/lang/String;)Lnet/minecraft/world/item/Item; b
	convertToJsonArray (Lcom/google/gson/JsonElement;Ljava/lang/String;)Lcom/google/gson/JsonArray; n
	convertToJsonObject (Lcom/google/gson/JsonElement;Ljava/lang/String;)Lcom/google/gson/JsonObject; m
	convertToLong (Lcom/google/gson/JsonElement;Ljava/lang/String;)J f
	convertToObject (Lcom/google/gson/JsonElement;Ljava/lang/String;Lcom/google/gson/JsonDeserializationContext;Ljava/lang/Class;)Ljava/lang/Object; a
	convertToShort (Lcom/google/gson/JsonElement;Ljava/lang/String;)S l
	convertToString (Lcom/google/gson/JsonElement;Ljava/lang/String;)Ljava/lang/String; a
	fromJson (Lcom/google/gson/Gson;Ljava/io/Reader;Lcom/google/gson/reflect/TypeToken;)Ljava/lang/Object; a
	fromJson (Lcom/google/gson/Gson;Ljava/io/Reader;Lcom/google/gson/reflect/TypeToken;Z)Ljava/lang/Object; b
	fromJson (Lcom/google/gson/Gson;Ljava/io/Reader;Ljava/lang/Class;)Ljava/lang/Object; a
	fromJson (Lcom/google/gson/Gson;Ljava/io/Reader;Ljava/lang/Class;Z)Ljava/lang/Object; b
	fromJson (Lcom/google/gson/Gson;Ljava/lang/String;Ljava/lang/Class;)Ljava/lang/Object; a
	fromJson (Lcom/google/gson/Gson;Ljava/lang/String;Ljava/lang/Class;Z)Ljava/lang/Object; a
	fromNullableJson (Lcom/google/gson/Gson;Ljava/io/Reader;Lcom/google/gson/reflect/TypeToken;Z)Ljava/lang/Object; a
	fromNullableJson (Lcom/google/gson/Gson;Ljava/io/Reader;Ljava/lang/Class;Z)Ljava/lang/Object; a
	fromNullableJson (Lcom/google/gson/Gson;Ljava/lang/String;Lcom/google/gson/reflect/TypeToken;)Ljava/lang/Object; a
	fromNullableJson (Lcom/google/gson/Gson;Ljava/lang/String;Lcom/google/gson/reflect/TypeToken;Z)Ljava/lang/Object; a
	fromNullableJson (Lcom/google/gson/Gson;Ljava/lang/String;Ljava/lang/Class;Z)Ljava/lang/Object; b
	getAsBigDecimal (Lcom/google/gson/JsonObject;Ljava/lang/String;)Ljava/math/BigDecimal; r
	getAsBigDecimal (Lcom/google/gson/JsonObject;Ljava/lang/String;Ljava/math/BigDecimal;)Ljava/math/BigDecimal; a
	getAsBigInteger (Lcom/google/gson/JsonObject;Ljava/lang/String;)Ljava/math/BigInteger; s
	getAsBigInteger (Lcom/google/gson/JsonObject;Ljava/lang/String;Ljava/math/BigInteger;)Ljava/math/BigInteger; a
	getAsBoolean (Lcom/google/gson/JsonObject;Ljava/lang/String;)Z k
	getAsBoolean (Lcom/google/gson/JsonObject;Ljava/lang/String;Z)Z a
	getAsByte (Lcom/google/gson/JsonObject;Ljava/lang/String;)B p
	getAsByte (Lcom/google/gson/JsonObject;Ljava/lang/String;B)B a
	getAsCharacter (Lcom/google/gson/JsonObject;Ljava/lang/String;)C q
	getAsCharacter (Lcom/google/gson/JsonObject;Ljava/lang/String;C)C a
	getAsDouble (Lcom/google/gson/JsonObject;Ljava/lang/String;)D l
	getAsDouble (Lcom/google/gson/JsonObject;Ljava/lang/String;D)D a
	getAsFloat (Lcom/google/gson/JsonObject;Ljava/lang/String;)F m
	getAsFloat (Lcom/google/gson/JsonObject;Ljava/lang/String;F)F a
	getAsInt (Lcom/google/gson/JsonObject;Ljava/lang/String;)I o
	getAsInt (Lcom/google/gson/JsonObject;Ljava/lang/String;I)I a
	getAsItem (Lcom/google/gson/JsonObject;Ljava/lang/String;)Lnet/minecraft/world/item/Item; j
	getAsItem (Lcom/google/gson/JsonObject;Ljava/lang/String;Lnet/minecraft/world/item/Item;)Lnet/minecraft/world/item/Item; a
	getAsJsonArray (Lcom/google/gson/JsonObject;Ljava/lang/String;)Lcom/google/gson/JsonArray; v
	getAsJsonArray (Lcom/google/gson/JsonObject;Ljava/lang/String;Lcom/google/gson/JsonArray;)Lcom/google/gson/JsonArray; a
	getAsJsonObject (Lcom/google/gson/JsonObject;Ljava/lang/String;)Lcom/google/gson/JsonObject; u
	getAsJsonObject (Lcom/google/gson/JsonObject;Ljava/lang/String;Lcom/google/gson/JsonObject;)Lcom/google/gson/JsonObject; a
	getAsLong (Lcom/google/gson/JsonObject;Ljava/lang/String;)J n
	getAsLong (Lcom/google/gson/JsonObject;Ljava/lang/String;J)J a
	getAsObject (Lcom/google/gson/JsonObject;Ljava/lang/String;Lcom/google/gson/JsonDeserializationContext;Ljava/lang/Class;)Ljava/lang/Object; a
	getAsObject (Lcom/google/gson/JsonObject;Ljava/lang/String;Ljava/lang/Object;Lcom/google/gson/JsonDeserializationContext;Ljava/lang/Class;)Ljava/lang/Object; a
	getAsShort (Lcom/google/gson/JsonObject;Ljava/lang/String;)S t
	getAsShort (Lcom/google/gson/JsonObject;Ljava/lang/String;S)S a
	getAsString (Lcom/google/gson/JsonObject;Ljava/lang/String;)Ljava/lang/String; i
	getAsString (Lcom/google/gson/JsonObject;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String; a
	getNonNull (Lcom/google/gson/JsonObject;Ljava/lang/String;)Lcom/google/gson/JsonElement; h
	getType (Lcom/google/gson/JsonElement;)Ljava/lang/String; d
	isArrayNode (Lcom/google/gson/JsonObject;Ljava/lang/String;)Z d
	isBooleanValue (Lcom/google/gson/JsonElement;)Z c
	isBooleanValue (Lcom/google/gson/JsonObject;Ljava/lang/String;)Z c
	isNumberValue (Lcom/google/gson/JsonElement;)Z b
	isNumberValue (Lcom/google/gson/JsonObject;Ljava/lang/String;)Z b
	isObjectNode (Lcom/google/gson/JsonObject;Ljava/lang/String;)Z e
	isStringValue (Lcom/google/gson/JsonElement;)Z a
	isStringValue (Lcom/google/gson/JsonObject;Ljava/lang/String;)Z a
	isValidNode (Lcom/google/gson/JsonObject;Ljava/lang/String;)Z g
	isValidPrimitive (Lcom/google/gson/JsonObject;Ljava/lang/String;)Z f
	parse (Ljava/io/Reader;)Lcom/google/gson/JsonObject; a
	parse (Ljava/io/Reader;Z)Lcom/google/gson/JsonObject; a
	parse (Ljava/lang/String;)Lcom/google/gson/JsonObject; a
	parse (Ljava/lang/String;Z)Lcom/google/gson/JsonObject; a
	parseArray (Ljava/io/Reader;)Lcom/google/gson/JsonArray; b
	parseArray (Ljava/lang/String;)Lcom/google/gson/JsonArray; b
	sortByKeyIfNeeded (Ljava/util/Collection;Ljava/util/Comparator;)Ljava/util/Collection; a
	toStableString (Lcom/google/gson/JsonElement;)Ljava/lang/String; e
	writeValue (Lcom/google/gson/stream/JsonWriter;Lcom/google/gson/JsonElement;Ljava/util/Comparator;)V a
net/minecraft/util/HttpUtil aos
	DOWNLOAD_EXECUTOR a
	LOGGER b
	downloadTo (Ljava/io/File;Ljava/net/URL;Ljava/util/Map;ILnet/minecraft/util/ProgressListener;Ljava/net/Proxy;)Ljava/util/concurrent/CompletableFuture; a
	getAvailablePort ()I a
	isPortAvailable (I)Z a
net/minecraft/util/InclusiveRange aot
	INT a
	maxInclusive c
	minInclusive b
	codec (Lcom/mojang/serialization/Codec;)Lcom/mojang/serialization/Codec; a
	codec (Lcom/mojang/serialization/Codec;Ljava/lang/Comparable;Ljava/lang/Comparable;)Lcom/mojang/serialization/Codec; a
	contains (Lnet/minecraft/util/InclusiveRange;)Z a
	create (Ljava/lang/Comparable;Ljava/lang/Comparable;)Lcom/mojang/serialization/DataResult; a
	isValueInRange (Ljava/lang/Comparable;)Z a
	maxInclusive ()Ljava/lang/Comparable; b
	minInclusive ()Ljava/lang/Comparable; a
net/minecraft/util/KeyDispatchDataCodec aou
	codec a
	codec ()Lcom/mojang/serialization/Codec; a
	of (Lcom/mojang/serialization/Codec;)Lnet/minecraft/util/KeyDispatchDataCodec; a
	of (Lcom/mojang/serialization/MapCodec;)Lnet/minecraft/util/KeyDispatchDataCodec; a
net/minecraft/util/LazyLoadedValue aov
	factory a
	get ()Ljava/lang/Object; a
net/minecraft/util/LinearCongruentialGenerator aow
	INCREMENT b
	MULTIPLIER a
	next (JJ)J a
net/minecraft/util/LowerCaseEnumTypeAdapterFactory aox
	toLowercase (Ljava/lang/Object;)Ljava/lang/String; a
net/minecraft/util/MemoryReserve aoy
	reserve a
	allocate ()V a
	release ()V b
net/minecraft/util/ModCheck aoz
	confidence a
	description b
	confidence ()Lnet/minecraft/util/ModCheck$Confidence; c
	description ()Ljava/lang/String; d
	fullDescription ()Ljava/lang/String; b
	identify (Ljava/lang/String;Ljava/util/function/Supplier;Ljava/lang/String;Ljava/lang/Class;)Lnet/minecraft/util/ModCheck; a
	merge (Lnet/minecraft/util/ModCheck;)Lnet/minecraft/util/ModCheck; a
	shouldReportAsModified ()Z a
net/minecraft/util/ModCheck$Confidence aoz$a
	$VALUES f
	DEFINITELY c
	PROBABLY_NOT a
	VERY_LIKELY b
	description d
	shouldReportAsModified e
	$values ()[Lnet/minecraft/util/ModCheck$Confidence; a
net/minecraft/util/Mth apa
	ASIN_TAB t
	COS_TAB u
	DEG_TO_RAD d
	EPSILON f
	FRAC_BIAS s
	FRAC_EXP q
	HALF_PI b
	LUT_SIZE r
	MULTIPLY_DE_BRUIJN_BIT_POSITION o
	ONE_SIXTH p
	PI a
	RAD_TO_DEG e
	RANDOM n
	SIN m
	SIN_SCALE l
	SQRT_OF_TWO g
	TWO_PI c
	UUID_VARIANT j
	UUID_VARIANT_2 k
	UUID_VERSION h
	UUID_VERSION_TYPE_4 i
	abs (F)F e
	abs (I)I a
	absMax (DD)D a
	approach (FFF)F d
	approachDegrees (FFF)F e
	atan2 (DD)D d
	binarySearch (IILjava/util/function/IntPredicate;)I a
	catmullrom (FFFFF)F a
	ceil (D)I c
	ceil (F)I f
	ceillog2 (I)I e
	clamp (DDD)D a
	clamp (FFF)F a
	clamp (III)I a
	clampedLerp (DDD)D b
	clampedLerp (FFF)F b
	clampedMap (DDDDD)D a
	clampedMap (FFFFF)F b
	color (FFF)I f
	cos (F)F b
	createInsecureUUID ()Ljava/util/UUID; a
	createInsecureUUID (Lnet/minecraft/util/RandomSource;)Ljava/util/UUID; a
	degreesDifference (FF)F c
	degreesDifferenceAbs (FF)F d
	equal (DD)Z b
	equal (FF)Z a
	fastInvCubeRoot (F)F j
	fastInvSqrt (D)D g
	floor (D)I a
	floor (F)I d
	floorDiv (II)I a
	frac (D)D e
	frac (F)F h
	getInt (Ljava/lang/String;I)I a
	getSeed (III)J b
	getSeed (Lnet/minecraft/core/Vec3i;)J a
	hsvToRgb (FFF)I h
	invSqrt (D)D f
	invSqrt (F)F i
	inverseLerp (DDD)D c
	inverseLerp (FFF)F g
	isMultipleOf (II)Z c
	isPowerOfTwo (I)Z d
	length (DD)D f
	length (DDD)D f
	lengthSquared (DD)D e
	lengthSquared (DDD)D e
	lerp (DDD)D d
	lerp (FFF)F i
	lerp2 (DDDDDD)D a
	lerp3 (DDDDDDDDDDD)D a
	lerpInt (FII)I a
	lfloor (D)J b
	log2 (I)I f
	map (DDDDD)D b
	map (FFFFF)F c
	murmurHash3Mixer (I)I g
	nextDouble (Lnet/minecraft/util/RandomSource;DD)D a
	nextFloat (Lnet/minecraft/util/RandomSource;FF)F a
	nextInt (Lnet/minecraft/util/RandomSource;II)I a
	normal (Lnet/minecraft/util/RandomSource;FF)F c
	outFromOrigin (III)Ljava/util/stream/IntStream; c
	outFromOrigin (IIII)Ljava/util/stream/IntStream; a
	positiveCeilDiv (II)I e
	positiveModulo (DD)D c
	positiveModulo (FF)F b
	positiveModulo (II)I b
	quantize (DI)I a
	randomBetween (Lnet/minecraft/util/RandomSource;FF)F b
	randomBetweenInclusive (Lnet/minecraft/util/RandomSource;II)I b
	rayIntersectsAABB (Lnet/minecraft/world/phys/Vec3;Lnet/minecraft/world/phys/Vec3;Lnet/minecraft/world/phys/AABB;)Z a
	rotLerp (FFF)F j
	rotateIfNecessary (FFF)F c
	roundToward (II)I d
	sign (D)I j
	sin (F)F a
	smallestEncompassingPowerOfTwo (I)I c
	smoothstep (D)D h
	smoothstepDerivative (D)D i
	sqrt (F)F c
	square (D)D k
	square (F)F k
	square (I)I h
	square (J)J a
	triangleWave (FF)F e
	wobble (D)D l
	wrapDegrees (D)D d
	wrapDegrees (F)F g
	wrapDegrees (I)I b
net/minecraft/util/NativeModuleLister apb
	CODEPAGE_MASK d
	DEFAULT_CODEPAGE e
	DEFAULT_LANG c
	LANG_MASK b
	LOGGER a
	addCrashSection (Lnet/minecraft/CrashReportCategory;)V a
	findLangAndCodepage ([I)Ljava/util/OptionalInt; a
	langTableKey (Ljava/lang/String;II)Ljava/lang/String; a
	listModules ()Ljava/util/List; a
	queryVersionString (Lcom/sun/jna/Pointer;Ljava/lang/String;Lcom/sun/jna/ptr/IntByReference;)Ljava/lang/String; b
	queryVersionValue (Lcom/sun/jna/Pointer;Ljava/lang/String;Lcom/sun/jna/ptr/IntByReference;)Lcom/sun/jna/Pointer; a
	tryGetVersion (Ljava/lang/String;)Ljava/util/Optional; a
net/minecraft/util/NativeModuleLister$NativeModuleInfo apb$a
	name a
	version b
net/minecraft/util/NativeModuleLister$NativeModuleVersion apb$b
	company c
	description a
	version b
net/minecraft/util/OptionEnum apc
	getCaption ()Lnet/minecraft/network/chat/Component; c
	getId ()I a
	getKey ()Ljava/lang/String; b
net/minecraft/util/ParticleUtils apd
	getRandomSpeedRanges (Lnet/minecraft/util/RandomSource;)Lnet/minecraft/world/phys/Vec3; a
	spawnParticleBelow (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/particles/ParticleOptions;)V a
	spawnParticleOnFace (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;Lnet/minecraft/core/particles/ParticleOptions;Lnet/minecraft/world/phys/Vec3;D)V a
	spawnParticlesAlongAxis (Lnet/minecraft/core/Direction$Axis;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;DLnet/minecraft/core/particles/ParticleOptions;Lnet/minecraft/util/valueproviders/UniformInt;)V a
	spawnParticlesOnBlockFace (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/particles/ParticleOptions;Lnet/minecraft/util/valueproviders/IntProvider;Lnet/minecraft/core/Direction;Ljava/util/function/Supplier;D)V a
	spawnParticlesOnBlockFaces (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/particles/ParticleOptions;Lnet/minecraft/util/valueproviders/IntProvider;)V a
net/minecraft/util/ProgressListener ape
	progressStage (Lnet/minecraft/network/chat/Component;)V c
	progressStagePercentage (I)V a
	progressStart (Lnet/minecraft/network/chat/Component;)V b
	progressStartNoAbort (Lnet/minecraft/network/chat/Component;)V a
	stop ()V a
net/minecraft/util/RandomSource apf
	GAUSSIAN_SPREAD_FACTOR a
	consumeCount (I)V b
	create ()Lnet/minecraft/util/RandomSource; a
	create (J)Lnet/minecraft/util/RandomSource; a
	createNewThreadLocalInstance ()Lnet/minecraft/util/RandomSource; c
	createThreadSafe ()Lnet/minecraft/util/RandomSource; b
	fork ()Lnet/minecraft/util/RandomSource; d
	forkPositional ()Lnet/minecraft/world/level/levelgen/PositionalRandomFactory; e
	nextBoolean ()Z h
	nextDouble ()D j
	nextFloat ()F i
	nextGaussian ()D k
	nextInt ()I f
	nextInt (I)I a
	nextInt (II)I b
	nextIntBetweenInclusive (II)I a
	nextLong ()J g
	setSeed (J)V b
	triangle (DD)D a
net/minecraft/util/ResourceLocationPattern apg
	CODEC a
	locationPredicate f
	namespacePattern b
	namespacePredicate c
	pathPattern d
	pathPredicate e
	locationPredicate ()Ljava/util/function/Predicate; c
	namespacePredicate ()Ljava/util/function/Predicate; a
	pathPredicate ()Ljava/util/function/Predicate; b
net/minecraft/util/SegmentedAnglePrecision aph
	angleToDegree d
	degreeToAngle c
	mask a
	precision b
	fromDegrees (F)I b
	fromDegreesWithTurns (F)I a
	fromDirection (Lnet/minecraft/core/Direction;)I a
	getMask ()I a
	isSameAxis (II)Z a
	normalize (I)I c
	toDegrees (I)F b
	toDegreesWithTurns (I)F a
net/minecraft/util/SignatureUpdater api
net/minecraft/util/SignatureUpdater$Output api$a
net/minecraft/util/SignatureValidator apj
	LOGGER b
	NO_VALIDATION a
	from (Lcom/mojang/authlib/yggdrasil/ServicesKeySet;Lcom/mojang/authlib/yggdrasil/ServicesKeyType;)Lnet/minecraft/util/SignatureValidator; a
	from (Ljava/security/PublicKey;Ljava/lang/String;)Lnet/minecraft/util/SignatureValidator; a
	validate ([B[B)Z a
	verifySignature (Lnet/minecraft/util/SignatureUpdater;[BLjava/security/Signature;)Z a
net/minecraft/util/Signer apk
	LOGGER a
	from (Ljava/security/PrivateKey;Ljava/lang/String;)Lnet/minecraft/util/Signer; a
	sign ([B)[B a
net/minecraft/util/SimpleBitStorage apl
	MAGIC a
	bits c
	data b
	divideAdd h
	divideMul g
	divideShift i
	mask d
	size e
	valuesPerLong f
	cellIndex (I)I b
	copy ()Lnet/minecraft/util/BitStorage; d
	get (I)I a
	getAll (Ljava/util/function/IntConsumer;)V a
	getAndSet (II)I a
	getBits ()I c
	getRaw ()[J a
	getSize ()I b
	set (II)V b
	unpack ([I)V a
net/minecraft/util/SimpleBitStorage$InitializationException apl$a
net/minecraft/util/SingleKeyCache apm
	cacheKey b
	cachedValue c
	computeValue a
	getValue (Ljava/lang/Object;)Ljava/lang/Object; a
net/minecraft/util/SmoothDouble apn
	lastAmount c
	remainingValue b
	targetValue a
	getNewDeltaValue (DD)D a
	reset ()V a
net/minecraft/util/SortedArraySet apo
	DEFAULT_INITIAL_CAPACITY a
	comparator b
	contents c
	size d
	addInternal (Ljava/lang/Object;I)V a
	addOrGet (Ljava/lang/Object;)Ljava/lang/Object; a
	castRawArray ([Ljava/lang/Object;)[Ljava/lang/Object; a
	create ()Lnet/minecraft/util/SortedArraySet; a
	create (I)Lnet/minecraft/util/SortedArraySet; a
	create (Ljava/util/Comparator;)Lnet/minecraft/util/SortedArraySet; a
	create (Ljava/util/Comparator;I)Lnet/minecraft/util/SortedArraySet; a
	findIndex (Ljava/lang/Object;)I c
	first ()Ljava/lang/Object; b
	get (Ljava/lang/Object;)Ljava/lang/Object; b
	getInsertionPosition (I)I b
	getInternal (I)Ljava/lang/Object; e
	grow (I)V c
	last ()Ljava/lang/Object; c
	removeInternal (I)V d
net/minecraft/util/SortedArraySet$ArrayIterator apo$a
	index b
	last c
net/minecraft/util/SpawnUtil app
	moveToPossibleSpawnPosition (Lnet/minecraft/server/level/ServerLevel;ILnet/minecraft/core/BlockPos$MutableBlockPos;Lnet/minecraft/util/SpawnUtil$Strategy;)Z a
	trySpawnMob (Lnet/minecraft/world/entity/EntityType;Lnet/minecraft/world/entity/MobSpawnType;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;IIILnet/minecraft/util/SpawnUtil$Strategy;)Ljava/util/Optional; a
net/minecraft/util/SpawnUtil$Strategy app$a
	LEGACY_IRON_GOLEM a
	ON_TOP_OF_COLLIDER b
net/minecraft/util/StringDecomposer apq
	REPLACEMENT_CHAR a
	STOP_ITERATION b
	feedChar (Lnet/minecraft/network/chat/Style;Lnet/minecraft/util/FormattedCharSink;IC)Z a
	filterBrokenSurrogates (Ljava/lang/String;)Ljava/lang/String; a
	getPlainText (Lnet/minecraft/network/chat/FormattedText;)Ljava/lang/String; a
	iterate (Ljava/lang/String;Lnet/minecraft/network/chat/Style;Lnet/minecraft/util/FormattedCharSink;)Z a
	iterateBackwards (Ljava/lang/String;Lnet/minecraft/network/chat/Style;Lnet/minecraft/util/FormattedCharSink;)Z b
	iterateFormatted (Ljava/lang/String;ILnet/minecraft/network/chat/Style;Lnet/minecraft/network/chat/Style;Lnet/minecraft/util/FormattedCharSink;)Z a
	iterateFormatted (Ljava/lang/String;ILnet/minecraft/network/chat/Style;Lnet/minecraft/util/FormattedCharSink;)Z a
	iterateFormatted (Ljava/lang/String;Lnet/minecraft/network/chat/Style;Lnet/minecraft/util/FormattedCharSink;)Z c
	iterateFormatted (Lnet/minecraft/network/chat/FormattedText;Lnet/minecraft/network/chat/Style;Lnet/minecraft/util/FormattedCharSink;)Z a
net/minecraft/util/StringRepresentable apr
	PRE_BUILT_MAP_THRESHOLD W
	fromEnum (Ljava/util/function/Supplier;)Lnet/minecraft/util/StringRepresentable$EnumCodec; a
	fromEnumWithMapping (Ljava/util/function/Supplier;Ljava/util/function/Function;)Lnet/minecraft/util/StringRepresentable$EnumCodec; a
	getSerializedName ()Ljava/lang/String; c
	keys ([Lnet/minecraft/util/StringRepresentable;)Lcom/mojang/serialization/Keyable; a
net/minecraft/util/StringRepresentable$EnumCodec apr$a
	codec a
	resolver b
	byName (Ljava/lang/String;)Ljava/lang/Enum; a
	byName (Ljava/lang/String;Ljava/lang/Enum;)Ljava/lang/Enum; a
	encode (Ljava/lang/Enum;Lcom/mojang/serialization/DynamicOps;Ljava/lang/Object;)Lcom/mojang/serialization/DataResult; a
net/minecraft/util/StringUtil aps
	LINE_END_PATTERN c
	LINE_PATTERN b
	STRIP_COLOR_PATTERN a
	endsWithNewLine (Ljava/lang/String;)Z d
	formatTickDuration (I)Ljava/lang/String; a
	isNullOrEmpty (Ljava/lang/String;)Z b
	lineCount (Ljava/lang/String;)I c
	stripColor (Ljava/lang/String;)Ljava/lang/String; a
	trimChatMessage (Ljava/lang/String;)Ljava/lang/String; e
	truncateStringIfNecessary (Ljava/lang/String;IZ)Ljava/lang/String; a
net/minecraft/util/TaskChainer apt
	LOGGER a
net/minecraft/util/TaskChainer$DelayedTask apt$a
net/minecraft/util/ThreadingDetector apu
	LOGGER a
	fullException f
	lock c
	name b
	stackTraceLock d
	threadThatFailedToAcquire e
	checkAndLock ()V a
	checkAndUnlock ()V b
	makeThreadingException (Ljava/lang/String;Ljava/lang/Thread;)Lnet/minecraft/ReportedException; a
	stackTrace (Ljava/lang/Thread;)Ljava/lang/String; a
net/minecraft/util/TimeSource apv
net/minecraft/util/TimeSource$NanoTimeSource apv$a
net/minecraft/util/TimeUtil apw
	NANOSECONDS_PER_MILLISECOND b
	NANOSECONDS_PER_SECOND a
	rangeOfSeconds (II)Lnet/minecraft/util/valueproviders/UniformInt; a
net/minecraft/util/ToFloatFunction apx
	IDENTITY a
	apply (Ljava/lang/Object;)F a
	comap (Ljava/util/function/Function;)Lnet/minecraft/util/ToFloatFunction; a
	createUnlimited (Lit/unimi/dsi/fastutil/floats/Float2FloatFunction;)Lnet/minecraft/util/ToFloatFunction; a
	maxValue ()F c
	minValue ()F b
net/minecraft/util/Tuple apy
	getA ()Ljava/lang/Object; a
	getB ()Ljava/lang/Object; b
	setA (Ljava/lang/Object;)V a
	setB (Ljava/lang/Object;)V b
net/minecraft/util/Unit apz
	$VALUES b
	INSTANCE a
	$values ()[Lnet/minecraft/util/Unit; a
net/minecraft/util/VisibleForDebug aqa
net/minecraft/util/ZeroBitStorage aqb
	RAW a
	size b
	copy ()Lnet/minecraft/util/BitStorage; d
	get (I)I a
	getAll (Ljava/util/function/IntConsumer;)V a
	getAndSet (II)I a
	getBits ()I c
	getRaw ()[J a
	getSize ()I b
	set (II)V b
	unpack ([I)V a
net/minecraft/util/datafix/DataFixTypes aqc
	$VALUES o
	ADVANCEMENTS i
	CHUNK c
	ENTITY_CHUNK l
	HOTBAR d
	LEVEL a
	OPTIONS e
	PLAYER b
	POI_CHUNK j
	SAVED_DATA h
	STATS g
	STRUCTURE f
	TYPES_FOR_LEVEL_LIST m
	WORLD_GEN_SETTINGS k
	type n
	$values ()[Lnet/minecraft/util/datafix/DataFixTypes; b
	currentVersion ()I a
	update (Lcom/mojang/datafixers/DataFixer;Lcom/mojang/serialization/Dynamic;II)Lcom/mojang/serialization/Dynamic; a
	update (Lcom/mojang/datafixers/DataFixer;Lnet/minecraft/nbt/CompoundTag;II)Lnet/minecraft/nbt/CompoundTag; a
	updateToCurrentVersion (Lcom/mojang/datafixers/DataFixer;Lcom/mojang/serialization/Dynamic;I)Lcom/mojang/serialization/Dynamic; a
	updateToCurrentVersion (Lcom/mojang/datafixers/DataFixer;Lnet/minecraft/nbt/CompoundTag;I)Lnet/minecraft/nbt/CompoundTag; a
net/minecraft/util/datafix/DataFixers aqd
	BLENDING_VERSION a
	SAME b
	SAME_NAMESPACED c
	dataFixer d
	addFixers (Lcom/mojang/datafixers/DataFixerBuilder;)V a
	createFixerUpper (Ljava/util/Set;)Lcom/mojang/datafixers/DataFixer; a
	createRenamer (Ljava/lang/String;Ljava/lang/String;)Ljava/util/function/UnaryOperator; a
	createRenamer (Ljava/util/Map;)Ljava/util/function/UnaryOperator; a
	getDataFixer ()Lcom/mojang/datafixers/DataFixer; a
net/minecraft/util/datafix/PackedBitStorage aqe
	BIT_TO_LONG_SHIFT a
	bits c
	data b
	mask d
	size e
	get (I)I a
	getBits ()I b
	getRaw ()[J a
	set (II)V a
net/minecraft/util/datafix/fixes/AbstractArrowPickupFix aqf
	updateEntity (Lcom/mojang/datafixers/Typed;Ljava/lang/String;Ljava/util/function/Function;)Lcom/mojang/datafixers/Typed; a
	updatePickup (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; a
	updateProjectiles (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; a
net/minecraft/util/datafix/fixes/AbstractPoiSectionFix aqg
	name a
	cap (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; a
	processRecords (Ljava/util/stream/Stream;)Ljava/util/stream/Stream; a
	processSection (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; b
	processSectionRecords (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; c
net/minecraft/util/datafix/fixes/AbstractUUIDFix aqh
	typeReference a
	createUUIDFromLongs (Lcom/mojang/serialization/Dynamic;Ljava/lang/String;Ljava/lang/String;)Ljava/util/Optional; d
	createUUIDFromML (Lcom/mojang/serialization/Dynamic;)Ljava/util/Optional; a
	createUUIDFromString (Lcom/mojang/serialization/Dynamic;Ljava/lang/String;)Ljava/util/Optional; a
	createUUIDTag (Lcom/mojang/serialization/Dynamic;JJ)Ljava/util/Optional; a
	replaceUUIDLeastMost (Lcom/mojang/serialization/Dynamic;Ljava/lang/String;Ljava/lang/String;)Ljava/util/Optional; c
	replaceUUIDMLTag (Lcom/mojang/serialization/Dynamic;Ljava/lang/String;Ljava/lang/String;)Ljava/util/Optional; b
	replaceUUIDString (Lcom/mojang/serialization/Dynamic;Ljava/lang/String;Ljava/lang/String;)Ljava/util/Optional; a
	updateNamedChoice (Lcom/mojang/datafixers/Typed;Ljava/lang/String;Ljava/util/function/Function;)Lcom/mojang/datafixers/Typed; a
net/minecraft/util/datafix/fixes/AddFlagIfNotPresentFix aqi
	flagKey c
	flagValue b
	name a
	typeReference d
net/minecraft/util/datafix/fixes/AddNewChoices aqj
	name a
	type b
	cap (Ljava/lang/String;Lcom/mojang/datafixers/types/templates/TaggedChoice$TaggedChoiceType;Lcom/mojang/datafixers/types/templates/TaggedChoice$TaggedChoiceType;)Lcom/mojang/datafixers/TypeRewriteRule; a
net/minecraft/util/datafix/fixes/AdvancementsFix aqk
	RENAMES a
net/minecraft/util/datafix/fixes/AdvancementsRenameFix aql
	name a
	renamer b
net/minecraft/util/datafix/fixes/AttributesRename aqm
	RENAMES a
	fixEntity (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; b
	fixItemStackTag (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; a
	fixName (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; a
net/minecraft/util/datafix/fixes/BedItemColorFix aqn
net/minecraft/util/datafix/fixes/BiomeFix aqo
	BIOMES a
net/minecraft/util/datafix/fixes/BitStorageAlignFix aqp
	BIT_TO_LONG_SHIFT a
	HEIGHTMAP_BITS e
	HEIGHTMAP_SIZE f
	SECTION_HEIGHT c
	SECTION_SIZE d
	SECTION_WIDTH b
	addPadding (II[J)[J a
	updateBitStorage (Lcom/mojang/serialization/Dynamic;Lcom/mojang/serialization/Dynamic;II)Lcom/mojang/serialization/Dynamic; a
	updateHeightmaps (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; a
	updateSections (Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; a
net/minecraft/util/datafix/fixes/BlendingDataFix aqq
	STATUSES_TO_SKIP_BLENDING b
	name a
	updateBlendingData (Lcom/mojang/serialization/Dynamic;II)Lcom/mojang/serialization/Dynamic; a
	updateChunkTag (Lcom/mojang/serialization/Dynamic;Lcom/mojang/serialization/OptionalDynamic;)Lcom/mojang/serialization/Dynamic; a
net/minecraft/util/datafix/fixes/BlendingDataRemoveFromNetherEndFix aqr
	updateChunkTag (Lcom/mojang/serialization/Dynamic;Lcom/mojang/serialization/OptionalDynamic;)Lcom/mojang/serialization/Dynamic; a
net/minecraft/util/datafix/fixes/BlockEntityBannerColorFix aqs
	fix (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; a
	fixTag (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; a
net/minecraft/util/datafix/fixes/BlockEntityBlockStateFix aqt
	fix (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; a
net/minecraft/util/datafix/fixes/BlockEntityCustomNameToComponentFix aqu
net/minecraft/util/datafix/fixes/BlockEntityIdFix aqv
	ID_MAP a
net/minecraft/util/datafix/fixes/BlockEntityJukeboxFix aqw
	fix (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; a
net/minecraft/util/datafix/fixes/BlockEntityKeepPacked aqx
	fix (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; a
	fixTag (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; a
net/minecraft/util/datafix/fixes/BlockEntityRenameFix aqy
	name a
	nameChangeLookup b
	create (Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;Ljava/util/function/UnaryOperator;)Lcom/mojang/datafixers/DataFix; a
net/minecraft/util/datafix/fixes/BlockEntityShulkerBoxColorFix aqz
	fix (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; a
net/minecraft/util/datafix/fixes/BlockEntitySignDoubleSidedEditableTextFix ara
	fix (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; a
	fixTag (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; a
	getEmptyComponent ()Ljava/lang/String; a
	getEmptyTextList (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; b
	getTextList (Lcom/mojang/serialization/Dynamic;Ljava/lang/String;)Lcom/mojang/serialization/Dynamic; a
net/minecraft/util/datafix/fixes/BlockEntitySignTextStrictJsonFix arb
	GSON a
	fix (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; a
	updateLine (Lcom/mojang/serialization/Dynamic;Ljava/lang/String;)Lcom/mojang/serialization/Dynamic; a
net/minecraft/util/datafix/fixes/BlockEntityUUIDFix arc
	updateConduit (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; c
	updateSkull (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; b
net/minecraft/util/datafix/fixes/BlockNameFlatteningFix ard
net/minecraft/util/datafix/fixes/BlockRenameFix are
	name a
	create (Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;Ljava/util/function/Function;)Lcom/mojang/datafixers/DataFix; a
	fixBlock (Ljava/lang/String;)Ljava/lang/String; a
net/minecraft/util/datafix/fixes/BlockRenameFixWithJigsaw arf
	name a
	create (Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;Ljava/util/function/Function;)Lcom/mojang/datafixers/DataFix; b
net/minecraft/util/datafix/fixes/BlockStateData arg
	BLOCK_DEFAULTS d
	FILTER_ME a
	ID_BY_OLD e
	ID_BY_OLD_NAME f
	LOGGER b
	MAP c
	bootstrap0 ()V a
	bootstrap1 ()V b
	bootstrap10 ()V k
	bootstrap11 ()V l
	bootstrap12 ()V m
	bootstrap13 ()V n
	bootstrap14 ()V o
	bootstrap15 ()V p
	bootstrap2 ()V c
	bootstrap3 ()V d
	bootstrap4 ()V e
	bootstrap5 ()V f
	bootstrap6 ()V g
	bootstrap7 ()V h
	bootstrap8 ()V i
	bootstrap9 ()V j
	finalizeMaps ()V q
	getTag (I)Lcom/mojang/serialization/Dynamic; b
	parse (Ljava/lang/String;)Lcom/mojang/serialization/Dynamic; b
	register (ILjava/lang/String;[Ljava/lang/String;)V a
	upgradeBlock (I)Ljava/lang/String; a
	upgradeBlock (Ljava/lang/String;)Ljava/lang/String; a
	upgradeBlockStateTag (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; a
net/minecraft/util/datafix/fixes/BlockStateStructureTemplateFix arh
net/minecraft/util/datafix/fixes/CatTypeFix ari
	fix (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; a
	fixTag (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; a
net/minecraft/util/datafix/fixes/CauldronRenameFix arj
	fix (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; a
net/minecraft/util/datafix/fixes/CavesAndCliffsRenames ark
	RENAMES a
net/minecraft/util/datafix/fixes/ChunkBedBlockEntityInjecterFix arl
	cap (Lcom/mojang/datafixers/types/Type;Lcom/mojang/datafixers/types/templates/List$ListType;)Lcom/mojang/datafixers/TypeRewriteRule; a
net/minecraft/util/datafix/fixes/ChunkBiomeFix arm
net/minecraft/util/datafix/fixes/ChunkDeleteIgnoredLightDataFix arn
net/minecraft/util/datafix/fixes/ChunkDeleteLightFix aro
net/minecraft/util/datafix/fixes/ChunkHeightAndBiomeFix arp
	BIOMES_BY_ID s
	BIOME_CONTAINER_LAYER_SIZE p
	BIOME_CONTAINER_SIZE q
	BIOME_CONTAINER_TOP_LAYER_OFFSET r
	BLOCKS_BEFORE_FEATURE_STATUS o
	BLOCKS_PER_SECTION b
	DATAFIXER_CONTEXT_TAG a
	DEFAULT_BIOME c
	HEIGHTMAP_BITS i
	HEIGHTMAP_MASK j
	HEIGHTMAP_OFFSET k
	HEIGHTMAP_TYPES l
	LONGS_PER_SECTION h
	NAME d
	NEW_MIN_SECTION_Y g
	NEW_SECTION_COUNT f
	OLD_SECTION_COUNT e
	STATUS_IS_OR_AFTER_NOISE n
	STATUS_IS_OR_AFTER_SURFACE m
	addPaddingEntries (Lcom/mojang/serialization/Dynamic;Ljava/lang/String;)Lcom/mojang/serialization/Dynamic; a
	ceillog2 (I)I a
	getBiomeContainers (Lcom/mojang/serialization/Dynamic;ZILorg/apache/commons/lang3/mutable/MutableBoolean;)[Lcom/mojang/serialization/Dynamic; a
	getFixedHeightmap (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; c
	getOldBiome ([II)I a
	makeBiomeContainer (Lcom/mojang/serialization/Dynamic;Lit/unimi/dsi/fastutil/ints/Int2IntFunction;)Lcom/mojang/serialization/Dynamic; a
	makeOptimizedPalettedContainer (Lcom/mojang/serialization/Dynamic;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; b
	makePalettedContainer (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; d
	makePalettedContainer (Lcom/mojang/serialization/Dynamic;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; a
	padPaletteEntries (Lcom/mojang/serialization/Dynamic;Lcom/mojang/serialization/Dynamic;Ljava/util/List;)Lcom/mojang/serialization/Dynamic; a
	predictChunkStatusBeforeSurface (Lcom/mojang/serialization/Dynamic;Ljava/util/Set;)Lcom/mojang/serialization/Dynamic; a
	shiftUpgradeData (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; a
	updateCarvingMasks (Lcom/mojang/serialization/Dynamic;II)Lcom/mojang/serialization/Dynamic; a
	updateChunkTag (Lcom/mojang/serialization/Dynamic;ZZZLjava/util/function/Supplier;)Lcom/mojang/serialization/Dynamic; a
	updateHeightmaps (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; b
net/minecraft/util/datafix/fixes/ChunkLightRemoveFix arq
net/minecraft/util/datafix/fixes/ChunkPalettedStorageFix arr
	AIR C
	BANNER_BLOCK_MAP B
	BED_BLOCK_MAP A
	DOOR_MAP x
	DYE_COLOR_MAP z
	EAST_MASK f
	FIX k
	FLOWER_POT_MAP v
	LOGGER i
	NORTH_EAST_MASK g
	NORTH_MASK h
	NORTH_WEST_MASK a
	NOTE_BLOCK_MAP y
	PUMPKIN l
	SIZE D
	SKULL_MAP w
	SNOWY_GRASS n
	SNOWY_MYCELIUM o
	SNOWY_PODZOL m
	SOUTH_EAST_MASK e
	SOUTH_MASK d
	SOUTH_WEST_MASK c
	UPPER_LARGE_FERN s
	UPPER_LILAC q
	UPPER_PEONY u
	UPPER_ROSE_BUSH t
	UPPER_SUNFLOWER p
	UPPER_TALL_GRASS r
	VIRTUAL j
	WEST_MASK b
	addBanners (Ljava/util/Map;ILjava/lang/String;)V b
	addBeds (Ljava/util/Map;ILjava/lang/String;)V a
	fix (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; b
	getName (Lcom/mojang/serialization/Dynamic;)Ljava/lang/String; a
	getProperty (Lcom/mojang/serialization/Dynamic;Ljava/lang/String;)Ljava/lang/String; a
	getSideMask (ZZZZ)I a
	idFor (Lnet/minecraft/util/CrudeIncrementalIntIdentityHashBiMap;Lcom/mojang/serialization/Dynamic;)I a
	mapDoor (Ljava/util/Map;Ljava/lang/String;I)V a
	mapSkull (Ljava/util/Map;ILjava/lang/String;Ljava/lang/String;)V a
net/minecraft/util/datafix/fixes/ChunkPalettedStorageFix$DataLayer arr$a
	NIBBLE_SIZE b
	SIZE a
	data c
	get (III)I a
	getPosition (I)I b
	isFirst (I)Z a
net/minecraft/util/datafix/fixes/ChunkPalettedStorageFix$Direction arr$b
	$VALUES i
	DOWN a
	EAST f
	NORTH c
	SOUTH d
	UP b
	WEST e
	axis g
	axisDirection h
	$values ()[Lnet/minecraft/util/datafix/fixes/ChunkPalettedStorageFix$Direction; c
	getAxis ()Lnet/minecraft/util/datafix/fixes/ChunkPalettedStorageFix$Direction$Axis; b
	getAxisDirection ()Lnet/minecraft/util/datafix/fixes/ChunkPalettedStorageFix$Direction$AxisDirection; a
net/minecraft/util/datafix/fixes/ChunkPalettedStorageFix$Direction$Axis arr$b$a
	$VALUES d
	X a
	Y b
	Z c
	$values ()[Lnet/minecraft/util/datafix/fixes/ChunkPalettedStorageFix$Direction$Axis; a
net/minecraft/util/datafix/fixes/ChunkPalettedStorageFix$Direction$AxisDirection arr$b$b
	$VALUES d
	NEGATIVE b
	POSITIVE a
	step c
	$values ()[Lnet/minecraft/util/datafix/fixes/ChunkPalettedStorageFix$Direction$AxisDirection; b
	getStep ()I a
net/minecraft/util/datafix/fixes/ChunkPalettedStorageFix$Section arr$c
	buffer i
	hasData e
	listTag c
	palette b
	section d
	seen h
	toFix f
	update g
	y a
	addFix (II)V a
	getBlock (I)Lcom/mojang/serialization/Dynamic; a
	setBlock (ILcom/mojang/serialization/Dynamic;)V a
	upgrade (I)I b
	write ()Lcom/mojang/serialization/Dynamic; a
net/minecraft/util/datafix/fixes/ChunkPalettedStorageFix$UpgradeChunk arr$d
	blockEntities f
	level c
	sections b
	sides a
	x d
	z e
	getBlock (I)Lcom/mojang/serialization/Dynamic; a
	getBlockEntity (I)Lcom/mojang/serialization/Dynamic; b
	getSection (I)Lnet/minecraft/util/datafix/fixes/ChunkPalettedStorageFix$Section; d
	relative (ILnet/minecraft/util/datafix/fixes/ChunkPalettedStorageFix$Direction;)I a
	removeBlockEntity (I)Lcom/mojang/serialization/Dynamic; c
	setBlock (ILcom/mojang/serialization/Dynamic;)V a
	write ()Lcom/mojang/serialization/Dynamic; a
net/minecraft/util/datafix/fixes/ChunkProtoTickListFix ars
	ALWAYS_WATERLOGGED b
	SECTION_WIDTH a
	createTick (Lcom/mojang/serialization/Dynamic;Ljava/util/function/Supplier;IIIILjava/util/function/Function;)Lcom/mojang/serialization/Dynamic; a
	getBlock (Lcom/mojang/serialization/Dynamic;)Ljava/lang/String; a
	getLiquid (Lcom/mojang/serialization/Dynamic;)Ljava/lang/String; b
	makeTickList (Lcom/mojang/serialization/Dynamic;Lit/unimi/dsi/fastutil/ints/Int2ObjectMap;BIILjava/lang/String;Ljava/util/function/Function;)Lcom/mojang/serialization/Dynamic; a
net/minecraft/util/datafix/fixes/ChunkProtoTickListFix$PoorMansPalettedContainer ars$a
	SIZE_BITS a
	bits d
	data c
	mask e
	palette b
	valuesPerLong f
	data ()[J b
	get (III)Lcom/mojang/serialization/Dynamic; a
	getIndex (III)I b
	palette ()Ljava/util/List; a
net/minecraft/util/datafix/fixes/ChunkRenamesFix art
	appendChunkName (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; a
	mergeRemainders (Lcom/mojang/datafixers/Typed;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; a
	renameField (Lcom/mojang/datafixers/Typed;Ljava/lang/String;Ljava/lang/String;)Lcom/mojang/datafixers/Typed; a
	renameFieldHelper (Lcom/mojang/datafixers/Typed;Ljava/lang/String;Ljava/lang/String;Lcom/mojang/datafixers/types/Type;)Lcom/mojang/datafixers/Typed; a
net/minecraft/util/datafix/fixes/ChunkStatusFix aru
net/minecraft/util/datafix/fixes/ChunkStatusFix2 arv
	RENAMES_AND_DOWNGRADES a
net/minecraft/util/datafix/fixes/ChunkStructuresTemplateRenameFix arw
	RENAMES a
	fixChildren (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; a
	fixTag (Lcom/mojang/serialization/Dynamic;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; a
net/minecraft/util/datafix/fixes/ChunkToProtochunkFix arx
	NUM_SECTIONS a
	fixChunkData (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; a
	packOffsetCoordinates (III)S a
	repackBiomes (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; b
	repackTicks (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; c
net/minecraft/util/datafix/fixes/ColorlessShulkerEntityFix ary
	fix (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; a
net/minecraft/util/datafix/fixes/CriteriaRenameFix arz
	advancementId b
	conversions c
	name a
	fixAdvancements (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; a
net/minecraft/util/datafix/fixes/DecoratedPotFieldRenameFix asa
	DECORATED_POT_ID a
net/minecraft/util/datafix/fixes/DyeItemRenameFix asb
	RENAMED_IDS a
net/minecraft/util/datafix/fixes/EffectDurationFix asc
	ITEM_TYPES a
	fix (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; b
	fixEffect (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; a
	updateEntity (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; c
net/minecraft/util/datafix/fixes/EntityArmorStandSilentFix asd
	fix (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; a
	fixTag (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; a
net/minecraft/util/datafix/fixes/EntityBlockStateFix ase
	MAP a
	getBlockId (Ljava/lang/String;)I a
	updateBlockToBlockState (Lcom/mojang/datafixers/Typed;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lcom/mojang/datafixers/Typed; a
	updateEntity (Lcom/mojang/datafixers/Typed;Ljava/lang/String;Ljava/util/function/Function;)Lcom/mojang/datafixers/Typed; a
	updateFallingBlock (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; a
net/minecraft/util/datafix/fixes/EntityBrushableBlockFieldsRenameFix asf
	fix (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; a
	fixTag (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; a
	renameField (Lcom/mojang/serialization/Dynamic;Ljava/lang/String;Ljava/lang/String;)Lcom/mojang/serialization/Dynamic; a
net/minecraft/util/datafix/fixes/EntityCatSplitFix asg
	getNewNameAndTag (Ljava/lang/String;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/datafixers/util/Pair; a
net/minecraft/util/datafix/fixes/EntityCodSalmonFix ash
	RENAMED_EGG_IDS b
	RENAMED_IDS a
	rename (Ljava/lang/String;)Ljava/lang/String; a
net/minecraft/util/datafix/fixes/EntityCustomNameToComponentFix asi
	fixTagCustomName (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; a
net/minecraft/util/datafix/fixes/EntityElderGuardianSplitFix asj
	getNewNameAndTag (Ljava/lang/String;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/datafixers/util/Pair; a
net/minecraft/util/datafix/fixes/EntityEquipmentToArmorAndHandFix ask
	cap (Lcom/mojang/datafixers/types/Type;)Lcom/mojang/datafixers/TypeRewriteRule; a
net/minecraft/util/datafix/fixes/EntityGoatMissingStateFix asl
	fix (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; a
net/minecraft/util/datafix/fixes/EntityHealthFix asm
	ENTITIES a
	fixTag (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; a
net/minecraft/util/datafix/fixes/EntityHorseSaddleFix asn
	fix (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; a
net/minecraft/util/datafix/fixes/EntityHorseSplitFix aso
	fix (Ljava/lang/String;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/util/Pair; a
net/minecraft/util/datafix/fixes/EntityIdFix asp
	ID_MAP a
net/minecraft/util/datafix/fixes/EntityItemFrameDirectionFix asq
	direction2dTo3d (B)B a
	fix (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; a
	fixTag (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; a
net/minecraft/util/datafix/fixes/EntityMinecartIdentifiersFix asr
	MINECART_BY_ID a
net/minecraft/util/datafix/fixes/EntityPaintingFieldsRenameFix ass
	fix (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; a
	fixTag (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; a
	renameField (Lcom/mojang/serialization/Dynamic;Ljava/lang/String;Ljava/lang/String;)Lcom/mojang/serialization/Dynamic; a
net/minecraft/util/datafix/fixes/EntityPaintingItemFrameDirectionFix ast
	DIRECTIONS a
	doFix (Lcom/mojang/serialization/Dynamic;ZZ)Lcom/mojang/serialization/Dynamic; a
net/minecraft/util/datafix/fixes/EntityPaintingMotiveFix asu
	MAP a
	fix (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; a
	fixTag (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; a
net/minecraft/util/datafix/fixes/EntityProjectileOwnerFix asv
	createUUIDArray (JJ)[I a
	setUUID (Lcom/mojang/serialization/Dynamic;JJ)Lcom/mojang/serialization/Dynamic; a
	updateEntity (Lcom/mojang/datafixers/Typed;Ljava/lang/String;Ljava/util/function/Function;)Lcom/mojang/datafixers/Typed; a
	updateItemPotion (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; c
	updateOwnerArrow (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; a
	updateOwnerLlamaSpit (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; b
	updateOwnerThrowable (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; d
	updateProjectiles (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; a
net/minecraft/util/datafix/fixes/EntityPufferfishRenameFix asw
	RENAMED_IDS a
	rename (Ljava/lang/String;)Ljava/lang/String; a
net/minecraft/util/datafix/fixes/EntityRavagerRenameFix asx
	RENAMED_IDS a
	rename (Ljava/lang/String;)Ljava/lang/String; a
net/minecraft/util/datafix/fixes/EntityRedundantChanceTagsFix asy
	FLOAT_LIST_CODEC a
	isZeroList (Lcom/mojang/serialization/OptionalDynamic;I)Z a
net/minecraft/util/datafix/fixes/EntityRenameFix asz
	name a
	fix (Ljava/lang/String;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/util/Pair; a
	getEntity (Ljava/lang/Object;Lcom/mojang/serialization/DynamicOps;Lcom/mojang/datafixers/types/Type;)Lcom/mojang/datafixers/Typed; a
net/minecraft/util/datafix/fixes/EntityRidingToPassengersFix ata
	cap (Lcom/mojang/datafixers/schemas/Schema;Lcom/mojang/datafixers/schemas/Schema;Lcom/mojang/datafixers/types/Type;Lcom/mojang/datafixers/types/Type;Lcom/mojang/datafixers/types/Type;)Lcom/mojang/datafixers/TypeRewriteRule; a
net/minecraft/util/datafix/fixes/EntityShulkerColorFix atb
	fix (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; a
	fixTag (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; a
net/minecraft/util/datafix/fixes/EntityShulkerRotationFix atc
	fix (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; a
	fixTag (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; a
net/minecraft/util/datafix/fixes/EntitySkeletonSplitFix atd
	getNewNameAndTag (Ljava/lang/String;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/datafixers/util/Pair; a
net/minecraft/util/datafix/fixes/EntityStringUuidFix ate
net/minecraft/util/datafix/fixes/EntityTheRenameningFix atf
	MINECRAFT_BRED d
	RENAMED_BLOCKS b
	RENAMED_IDS a
	RENAMED_ITEMS c
	rename (Ljava/lang/String;)Ljava/lang/String; a
net/minecraft/util/datafix/fixes/EntityTippedArrowFix atg
	rename (Ljava/lang/String;)Ljava/lang/String; a
net/minecraft/util/datafix/fixes/EntityUUIDFix ath
	ABSTRACT_HORSES c
	ANIMALS e
	LIVING_ENTITIES g
	LOGGER b
	MOBS f
	PROJECTILES h
	TAMEABLE_ANIMALS d
	updateAnimal (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; m
	updateAnimalOwner (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; l
	updateAreaEffectCloud (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; g
	updateEntityUUID (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; c
	updateEvokerFangs (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; e
	updateFox (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; j
	updateHurtBy (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; k
	updateItem (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; i
	updateLivingEntity (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; b
	updateMob (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; n
	updatePiglin (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; d
	updateProjectile (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; o
	updateShulkerBullet (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; h
	updateZombieVillager (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; f
net/minecraft/util/datafix/fixes/EntityVariantFix ati
	fieldName a
	idConversions b
	fix (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; a
	updateAndRename (Lcom/mojang/serialization/Dynamic;Ljava/lang/String;Ljava/lang/String;Ljava/util/function/Function;)Lcom/mojang/serialization/Dynamic; a
net/minecraft/util/datafix/fixes/EntityWolfColorFix atj
	fix (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; a
	fixTag (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; a
net/minecraft/util/datafix/fixes/EntityZombieSplitFix atk
	getNewNameAndTag (Ljava/lang/String;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/datafixers/util/Pair; a
net/minecraft/util/datafix/fixes/EntityZombieVillagerTypeFix atl
	PROFESSION_MAX a
	RANDOM b
	fix (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; a
	fixTag (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; a
	getVillagerProfession (I)I a
net/minecraft/util/datafix/fixes/EntityZombifiedPiglinRenameFix atm
	RENAMED_IDS a
	rename (Ljava/lang/String;)Ljava/lang/String; a
net/minecraft/util/datafix/fixes/FeatureFlagRemoveFix atn
	flagsToRemove b
	name a
	fixTag (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; a
net/minecraft/util/datafix/fixes/FilteredBooksFix ato
	fixItemStackTag (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; a
net/minecraft/util/datafix/fixes/FilteredSignsFix atp
	fix (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; a
net/minecraft/util/datafix/fixes/ForcePoiRebuild atq
	cap (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; a
net/minecraft/util/datafix/fixes/FurnaceRecipeFix atr
	cap (Lcom/mojang/datafixers/types/Type;)Lcom/mojang/datafixers/TypeRewriteRule; a
	updateFurnaceContents (Lcom/mojang/datafixers/types/Type;Lcom/mojang/datafixers/types/Type;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; a
net/minecraft/util/datafix/fixes/GoatHornIdFix ats
	INSTRUMENTS a
	fixItemStackTag (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; a
net/minecraft/util/datafix/fixes/GossipUUIDFix att
	fix (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; a
net/minecraft/util/datafix/fixes/HeightmapRenamingFix atu
	fix (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; a
net/minecraft/util/datafix/fixes/IglooMetadataRemovalFix atv
	fixTag (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; a
	isIglooPiece (Lcom/mojang/serialization/Dynamic;)Z c
	removeIglooPieces (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; b
net/minecraft/util/datafix/fixes/ItemBannerColorFix atw
net/minecraft/util/datafix/fixes/ItemCustomNameToComponentFix atx
	fixTag (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; a
net/minecraft/util/datafix/fixes/ItemIdFix aty
	ITEM_NAMES a
	getItem (I)Ljava/lang/String; a
net/minecraft/util/datafix/fixes/ItemLoreFix atz
	fixLoreEntry (Ljava/lang/String;)Ljava/lang/String; a
	fixLoreList (Ljava/util/stream/Stream;)Ljava/util/stream/Stream; a
net/minecraft/util/datafix/fixes/ItemPotionFix aua
	DEFAULT a
	POTIONS c
	SPLASH b
net/minecraft/util/datafix/fixes/ItemRemoveBlockEntityTagFix aub
	items a
net/minecraft/util/datafix/fixes/ItemRenameFix auc
	name a
	create (Lcom/mojang/datafixers/schemas/Schema;Ljava/lang/String;Ljava/util/function/Function;)Lcom/mojang/datafixers/DataFix; a
	fixItem (Ljava/lang/String;)Ljava/lang/String; a
net/minecraft/util/datafix/fixes/ItemShulkerBoxColorFix aud
	NAMES_BY_COLOR a
net/minecraft/util/datafix/fixes/ItemSpawnEggFix aue
	ID_TO_ENTITY a
net/minecraft/util/datafix/fixes/ItemStackEnchantmentNamesFix auf
	MAP a
	fixTag (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; a
net/minecraft/util/datafix/fixes/ItemStackMapIdFix aug
net/minecraft/util/datafix/fixes/ItemStackSpawnEggFix auh
	MAP b
	itemType a
net/minecraft/util/datafix/fixes/ItemStackTagFix aui
	idFilter b
	name a
	fixItemStackTag (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; a
net/minecraft/util/datafix/fixes/ItemStackTheFlatteningFix auj
	DAMAGE_IDS c
	IDS b
	MAP a
	updateItem (Ljava/lang/String;I)Ljava/lang/String; a
net/minecraft/util/datafix/fixes/ItemStackUUIDFix auk
	updateAttributeModifiers (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; b
	updateSkullOwner (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; c
net/minecraft/util/datafix/fixes/ItemWaterPotionFix aul
net/minecraft/util/datafix/fixes/ItemWrittenBookPagesStrictJsonFix aum
	fixTag (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; a
net/minecraft/util/datafix/fixes/JigsawPropertiesFix aun
	fix (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; a
	fixTag (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; a
net/minecraft/util/datafix/fixes/JigsawRotationFix auo
	RENAMES a
	fix (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; a
net/minecraft/util/datafix/fixes/LeavesFix aup
	DECAY_DISTANCE j
	DIRECTIONS i
	EAST_MASK f
	LEAVES m
	LOGS n
	NORTH_EAST_MASK g
	NORTH_MASK h
	NORTH_WEST_MASK a
	SIZE l
	SIZE_BITS k
	SOUTH_EAST_MASK e
	SOUTH_MASK d
	SOUTH_WEST_MASK c
	WEST_MASK b
	getIndex (III)I a
	getSideMask (ZZZZ)I a
	getX (I)I a
	getY (I)I b
	getZ (I)I c
net/minecraft/util/datafix/fixes/LeavesFix$LeavesSection aup$a
	DECAYABLE i
	DISTANCE j
	PERSISTENT h
	leaveIds k
	logIds l
	stateToIdMap m
	getDistance (I)I d
	isLeaf (I)Z b
	isLog (I)Z a
	makeLeafTag (Lcom/mojang/serialization/Dynamic;Ljava/lang/String;ZI)Lcom/mojang/serialization/Dynamic; a
	setDistance (III)V a
	skippable ()Z a
net/minecraft/util/datafix/fixes/LeavesFix$Section aup$b
	BLOCK_STATES_TAG a
	NAME_TAG b
	PROPERTIES_TAG c
	blockStateType h
	index f
	palette e
	paletteFinder d
	storage g
	getBlock (I)I c
	getIndex ()I c
	getStateId (Ljava/lang/String;ZI)I a
	isSkippable ()Z b
	readStorage (Lcom/mojang/serialization/Dynamic;)V a
	skippable ()Z a
	write (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; a
net/minecraft/util/datafix/fixes/LegacyDragonFightFix auq
net/minecraft/util/datafix/fixes/LevelDataGeneratorOptionsFix aur
	GENERATOR_OPTIONS b
	MAP a
	convert (Ljava/lang/String;Lcom/mojang/serialization/DynamicOps;)Lcom/mojang/serialization/Dynamic; a
	getLayerInfoFromString (Ljava/lang/String;)Lcom/mojang/datafixers/util/Pair; a
	getLayersInfoFromString (Ljava/lang/String;)Ljava/util/List; b
net/minecraft/util/datafix/fixes/LevelFlatGeneratorInfoFix aus
	AMOUNT_SPLITTER f
	BLOCK_SPLITTER g
	DEFAULT a
	GENERATOR_OPTIONS b
	LAYER_SPLITTER d
	OLD_AMOUNT_SPLITTER e
	SPLITTER c
	fix (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; a
	fixString (Ljava/lang/String;)Ljava/lang/String; a
net/minecraft/util/datafix/fixes/LevelUUIDFix aut
	LOGGER b
	updateCustomBossEvents (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; d
	updateDragonFight (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; c
	updateWanderingTrader (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; b
net/minecraft/util/datafix/fixes/MapIdFix auu
net/minecraft/util/datafix/fixes/MemoryExpiryDataFix auv
	fix (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; a
	fixTag (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; a
	updateBrain (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; b
	updateMemories (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; c
	updateMemoryEntry (Lcom/mojang/datafixers/util/Pair;)Lcom/mojang/datafixers/util/Pair; a
	wrapMemoryValue (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; d
net/minecraft/util/datafix/fixes/MissingDimensionFix auw
	fields (Ljava/lang/String;Lcom/mojang/datafixers/types/Type;)Lcom/mojang/datafixers/types/Type; a
	flatType (Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/Type; a
	optionalFields (Ljava/lang/String;Lcom/mojang/datafixers/types/Type;)Lcom/mojang/datafixers/types/Type; b
	optionalFields (Ljava/lang/String;Lcom/mojang/datafixers/types/Type;Ljava/lang/String;Lcom/mojang/datafixers/types/Type;)Lcom/mojang/datafixers/types/Type; a
	recreateSettings (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; a
net/minecraft/util/datafix/fixes/MobSpawnerEntityIdentifiersFix auy
	fix (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; a
net/minecraft/util/datafix/fixes/NamedEntityFix auz
	entityName b
	name a
	type c
	fix (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; a
net/minecraft/util/datafix/fixes/NamespacedTypeRenameFix ava
	name a
	renamer c
	type b
net/minecraft/util/datafix/fixes/NewVillageFix avb
	cap (Lcom/mojang/datafixers/types/templates/CompoundList$CompoundListType;)Lcom/mojang/datafixers/TypeRewriteRule; a
net/minecraft/util/datafix/fixes/ObjectiveDisplayNameFix avc
net/minecraft/util/datafix/fixes/ObjectiveRenderTypeFix avd
	getRenderType (Ljava/lang/String;)Ljava/lang/String; a
net/minecraft/util/datafix/fixes/OminousBannerBlockEntityRenameFix ave
	fix (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; a
	fixTag (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; a
net/minecraft/util/datafix/fixes/OminousBannerRenameFix avf
	fixItemStackTag (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; a
net/minecraft/util/datafix/fixes/OptionsAccessibilityOnboardFix avg
net/minecraft/util/datafix/fixes/OptionsAddTextBackgroundFix avh
	calculateBackground (Ljava/lang/String;)D a
net/minecraft/util/datafix/fixes/OptionsAmbientOcclusionFix avi
	updateValue (Ljava/lang/String;)Ljava/lang/String; a
net/minecraft/util/datafix/fixes/OptionsForceVBOFix avj
net/minecraft/util/datafix/fixes/OptionsKeyLwjgl3Fix avk
	KEY_UNKNOWN a
	MAP b
net/minecraft/util/datafix/fixes/OptionsKeyTranslationFix avl
net/minecraft/util/datafix/fixes/OptionsLowerCaseLanguageFix avm
net/minecraft/util/datafix/fixes/OptionsProgrammerArtFix avn
	fixList (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; a
net/minecraft/util/datafix/fixes/OptionsRenameFieldFix avo
	fieldFrom b
	fieldTo c
	fixName a
net/minecraft/util/datafix/fixes/OverreachingTickFix avp
	extractOverreachingTicks (Lcom/mojang/serialization/Dynamic;IILjava/util/Optional;Ljava/lang/String;)Lcom/mojang/serialization/Dynamic; a
net/minecraft/util/datafix/fixes/PlayerUUIDFix avq
net/minecraft/util/datafix/fixes/PoiTypeRemoveFix avr
	typesToKeep a
	processRecords (Ljava/util/stream/Stream;)Ljava/util/stream/Stream; a
	shouldKeepRecord (Lcom/mojang/serialization/Dynamic;)Z a
net/minecraft/util/datafix/fixes/PoiTypeRenameFix avs
	renamer a
	processRecords (Ljava/util/stream/Stream;)Ljava/util/stream/Stream; a
net/minecraft/util/datafix/fixes/RecipesFix avt
	RECIPES a
net/minecraft/util/datafix/fixes/RecipesRenameningFix avu
	RECIPES a
net/minecraft/util/datafix/fixes/RedstoneWireConnectionsFix avv
	isConnected (Ljava/lang/String;)Z a
	updateRedstoneConnections (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; a
net/minecraft/util/datafix/fixes/References avw
	ADVANCEMENTS i
	BIOME z
	BLOCK_ENTITY l
	BLOCK_NAME r
	BLOCK_STATE n
	CHUNK c
	ENTITY q
	ENTITY_CHUNK k
	ENTITY_NAME o
	ENTITY_TREE p
	GAME_EVENT_NAME t
	HOTBAR d
	ITEM_NAME s
	ITEM_STACK m
	LEVEL a
	MULTI_NOISE_BIOME_SOURCE_PARAMETER_LIST A
	OBJECTIVE w
	OPTIONS e
	PLAYER b
	POI_CHUNK j
	RECIPE y
	SAVED_DATA h
	STATS g
	STRUCTURE f
	STRUCTURE_FEATURE v
	TEAM x
	UNTAGGED_SPAWNER u
	WORLD_GEN_SETTINGS B
net/minecraft/util/datafix/fixes/RemapChunkStatusFix avx
	mapper b
	name a
	fixStatus (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; a
net/minecraft/util/datafix/fixes/RemoveGolemGossipFix avy
	fix (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; a
	fixValue (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; a
net/minecraft/util/datafix/fixes/RenamedCoralFansFix avz
	RENAMED_IDS a
net/minecraft/util/datafix/fixes/RenamedCoralFix awa
	RENAMED_IDS a
net/minecraft/util/datafix/fixes/ReorganizePoi awb
	cap (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; a
net/minecraft/util/datafix/fixes/SavedDataFeaturePoolElementFix awc
	FEATURES c
	INDEX_PATTERN a
	PIECE_TYPE b
	fixFeature (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; a
	fixTag (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; b
	get (Lcom/mojang/serialization/Dynamic;[Ljava/lang/String;)Lcom/mojang/serialization/OptionalDynamic; a
	getReplacement (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/util/Optional; a
	updateChildren (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; c
	updateChildren (Ljava/util/stream/Stream;)Ljava/util/stream/Stream; a
net/minecraft/util/datafix/fixes/SavedDataUUIDFix awd
	LOGGER b
net/minecraft/util/datafix/fixes/SimpleEntityRenameFix awe
	fix (Ljava/lang/String;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/util/Pair; a
	getNewNameAndTag (Ljava/lang/String;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/datafixers/util/Pair; a
net/minecraft/util/datafix/fixes/SimplestEntityRenameFix awf
	name a
	rename (Ljava/lang/String;)Ljava/lang/String; a
net/minecraft/util/datafix/fixes/SpawnerDataFix awg
	wrapEntityToSpawnData (Lcom/mojang/datafixers/types/Type;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; a
	wrapSpawnPotentialsToWeightedEntries (Lcom/mojang/datafixers/types/Type;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; b
net/minecraft/util/datafix/fixes/StatsCounterFix awh
	BLOCK_KEY c
	CUSTOM_MAP b
	ENTITIES g
	ENTITY_KEYS f
	ITEM_KEYS e
	NEW_BLOCK_KEY d
	NEW_CUSTOM_KEY h
	SKIP a
	upgradeBlock (Ljava/lang/String;)Ljava/lang/String; b
	upgradeItem (Ljava/lang/String;)Ljava/lang/String; a
net/minecraft/util/datafix/fixes/StatsRenameFix awi
	name a
	renames b
	createCriteriaRule ()Lcom/mojang/datafixers/TypeRewriteRule; a
	createStatRule ()Lcom/mojang/datafixers/TypeRewriteRule; b
net/minecraft/util/datafix/fixes/StriderGravityFix awj
	fix (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; a
	fixTag (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; a
net/minecraft/util/datafix/fixes/StructureReferenceCountFix awk
	setCountToAtLeastOne (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; a
net/minecraft/util/datafix/fixes/StructureSettingsFlattenFix awl
	fixDimension (Lcom/mojang/datafixers/util/Pair;)Lcom/mojang/datafixers/util/Pair; a
	fixStructures (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; a
net/minecraft/util/datafix/fixes/StructuresBecomeConfiguredFix awm
	CONVERSION_MAP a
	findUpdatedStructureType (Lcom/mojang/datafixers/util/Pair;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; c
	fix (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; a
	guessConfiguration (Lcom/mojang/serialization/Dynamic;Lnet/minecraft/util/datafix/fixes/StructuresBecomeConfiguredFix$Conversion;)Ljava/util/Optional; a
	updateReference (Lcom/mojang/datafixers/util/Pair;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/datafixers/util/Pair; b
	updateReferences (Lcom/mojang/serialization/Dynamic;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; b
	updateStart (Lcom/mojang/datafixers/util/Pair;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/datafixers/util/Pair; a
	updateStarts (Lcom/mojang/serialization/Dynamic;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; a
net/minecraft/util/datafix/fixes/StructuresBecomeConfiguredFix$Conversion awm$a
	biomeMapping a
	fallback b
	biomeMapped (Ljava/util/Map;Ljava/lang/String;)Lnet/minecraft/util/datafix/fixes/StructuresBecomeConfiguredFix$Conversion; a
	biomeMapping ()Ljava/util/Map; a
	fallback ()Ljava/lang/String; b
	trivial (Ljava/lang/String;)Lnet/minecraft/util/datafix/fixes/StructuresBecomeConfiguredFix$Conversion; a
	unpack (Ljava/util/Map;)Ljava/util/Map; a
net/minecraft/util/datafix/fixes/TeamDisplayNameFix awn
net/minecraft/util/datafix/fixes/TrappedChestBlockEntityFix awo
	LOGGER a
	SIZE b
	SIZE_BITS c
net/minecraft/util/datafix/fixes/TrappedChestBlockEntityFix$TrappedChestSection awo$a
	chestIds h
	isTrappedChest (I)Z a
	skippable ()Z a
net/minecraft/util/datafix/fixes/VariantRenameFix awp
	renames a
	fix (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; a
net/minecraft/util/datafix/fixes/VillagerDataFix awq
	fix (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; a
	upgradeData (II)Ljava/lang/String; a
net/minecraft/util/datafix/fixes/VillagerFollowRangeFix awr
	NEW_BASE_VALUE b
	ORIGINAL_VALUE a
	fix (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; a
	fixValue (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; a
net/minecraft/util/datafix/fixes/VillagerRebuildLevelAndXpFix aws
	LEVEL_XP_THRESHOLDS b
	TRADES_PER_LEVEL a
	addLevel (Lcom/mojang/datafixers/Typed;I)Lcom/mojang/datafixers/Typed; a
	addXpFromLevel (Lcom/mojang/datafixers/Typed;I)Lcom/mojang/datafixers/Typed; b
	getMinXpPerLevel (I)I a
net/minecraft/util/datafix/fixes/VillagerTradeFix awt
	fix (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; a
	updateItemStack (Lcom/mojang/datafixers/OpticFinder;Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; a
net/minecraft/util/datafix/fixes/WallPropertyFix awu
	WALL_BLOCKS a
	fixWallProperty (Lcom/mojang/serialization/Dynamic;Ljava/lang/String;)Lcom/mojang/serialization/Dynamic; a
	mapProperty (Ljava/lang/String;)Ljava/lang/String; a
	upgradeBlockStateTag (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; a
net/minecraft/util/datafix/fixes/WeaponSmithChestLootTableFix awv
	fix (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; a
net/minecraft/util/datafix/fixes/WorldGenSettingsDisallowOldCustomWorldsFix aww
net/minecraft/util/datafix/fixes/WorldGenSettingsFix awx
	DEFAULTS j
	DESERT_PYRAMID b
	END_CITY g
	IGLOO c
	JUNGLE_TEMPLE d
	OCEAN_MONUMENT i
	PILLAGER_OUTPOST f
	SWAMP_HUT e
	VILLAGE a
	WOODLAND_MANSION h
	defaultOverworld (Lcom/mojang/serialization/Dynamic;J)Lcom/mojang/serialization/Dynamic; a
	fix (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; a
	fixFlatStructures (Lcom/mojang/serialization/DynamicOps;Lcom/mojang/serialization/OptionalDynamic;)Ljava/util/Map; a
	getInt (Ljava/lang/String;I)I a
	getInt (Ljava/lang/String;II)I a
	noise (JLcom/mojang/serialization/DynamicLike;Lcom/mojang/serialization/Dynamic;Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; a
	setSpacing (Ljava/util/Map;Ljava/lang/String;Ljava/lang/String;I)V a
	vanillaBiomeSource (Lcom/mojang/serialization/Dynamic;JZZ)Lcom/mojang/serialization/Dynamic; a
	vanillaLevels (Lcom/mojang/serialization/Dynamic;JLcom/mojang/serialization/Dynamic;Z)Ljava/lang/Object; a
net/minecraft/util/datafix/fixes/WorldGenSettingsFix$StructureFeatureConfiguration awx$a
	CODEC a
	salt d
	separation c
	spacing b
	serialize (Lcom/mojang/serialization/DynamicOps;)Lcom/mojang/serialization/Dynamic; a
net/minecraft/util/datafix/fixes/WorldGenSettingsHeightAndBiomeFix awy
	NAME b
	WAS_PREVIOUSLY_INCREASED_KEY a
	updateLayers (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/Dynamic; a
net/minecraft/util/datafix/fixes/WriteAndReadFix awz
	name a
	type b
net/minecraft/util/datafix/fixes/ZombieVillagerRebuildXpFix axa
	fix (Lcom/mojang/datafixers/Typed;)Lcom/mojang/datafixers/Typed; a
net/minecraft/util/datafix/schemas/NamespacedSchema axd
	NAMESPACED_STRING b
	NAMESPACED_STRING_CODEC a
	ensureNamespaced (Ljava/lang/String;)Ljava/lang/String; a
	namespacedString ()Lcom/mojang/datafixers/types/Type; a
net/minecraft/util/datafix/schemas/V100 axe
	equipment (Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate; a
	registerMob (Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/lang/String;)V a
net/minecraft/util/datafix/schemas/V102 axf
net/minecraft/util/datafix/schemas/V1022 axg
net/minecraft/util/datafix/schemas/V106 axh
net/minecraft/util/datafix/schemas/V107 axi
net/minecraft/util/datafix/schemas/V1125 axj
net/minecraft/util/datafix/schemas/V135 axk
net/minecraft/util/datafix/schemas/V143 axl
net/minecraft/util/datafix/schemas/V1451 axm
net/minecraft/util/datafix/schemas/V1451_1 axn
net/minecraft/util/datafix/schemas/V1451_2 axo
net/minecraft/util/datafix/schemas/V1451_3 axp
net/minecraft/util/datafix/schemas/V1451_4 axq
net/minecraft/util/datafix/schemas/V1451_5 axr
net/minecraft/util/datafix/schemas/V1451_6 axs
	REPACK_OBJECTIVE_ID d
	SPECIAL_OBJECTIVE_MARKER b
	UNPACK_OBJECTIVE_ID c
	createCriterionTypes (Lcom/mojang/datafixers/schemas/Schema;)Ljava/util/Map; a
net/minecraft/util/datafix/schemas/V1460 axt
	registerInventory (Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/lang/String;)V b
	registerMob (Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/lang/String;)V a
net/minecraft/util/datafix/schemas/V1466 axu
net/minecraft/util/datafix/schemas/V1470 axv
	registerMob (Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/lang/String;)V a
net/minecraft/util/datafix/schemas/V1481 axw
net/minecraft/util/datafix/schemas/V1483 axx
net/minecraft/util/datafix/schemas/V1486 axy
net/minecraft/util/datafix/schemas/V1510 axz
net/minecraft/util/datafix/schemas/V1800 aya
net/minecraft/util/datafix/schemas/V1801 ayb
net/minecraft/util/datafix/schemas/V1904 ayc
net/minecraft/util/datafix/schemas/V1906 ayd
	registerInventory (Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/lang/String;)V a
net/minecraft/util/datafix/schemas/V1909 aye
net/minecraft/util/datafix/schemas/V1920 ayf
	registerInventory (Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/lang/String;)V a
net/minecraft/util/datafix/schemas/V1928 ayg
	equipment (Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate; a
	registerMob (Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/lang/String;)V a
net/minecraft/util/datafix/schemas/V1929 ayh
net/minecraft/util/datafix/schemas/V1931 ayi
net/minecraft/util/datafix/schemas/V2100 ayj
	registerMob (Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/lang/String;)V a
net/minecraft/util/datafix/schemas/V2501 ayk
	registerFurnace (Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/lang/String;)V a
net/minecraft/util/datafix/schemas/V2502 ayl
net/minecraft/util/datafix/schemas/V2505 aym
net/minecraft/util/datafix/schemas/V2509 ayn
net/minecraft/util/datafix/schemas/V2519 ayo
net/minecraft/util/datafix/schemas/V2522 ayp
net/minecraft/util/datafix/schemas/V2551 ayq
net/minecraft/util/datafix/schemas/V2568 ayr
net/minecraft/util/datafix/schemas/V2571 ays
net/minecraft/util/datafix/schemas/V2684 ayt
net/minecraft/util/datafix/schemas/V2686 ayu
net/minecraft/util/datafix/schemas/V2688 ayv
net/minecraft/util/datafix/schemas/V2704 ayw
net/minecraft/util/datafix/schemas/V2707 ayx
net/minecraft/util/datafix/schemas/V2831 ayy
net/minecraft/util/datafix/schemas/V2832 ayz
net/minecraft/util/datafix/schemas/V2842 aza
net/minecraft/util/datafix/schemas/V3076 azb
net/minecraft/util/datafix/schemas/V3078 azc
	registerMob (Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/lang/String;)V a
net/minecraft/util/datafix/schemas/V3081 azd
net/minecraft/util/datafix/schemas/V3082 aze
net/minecraft/util/datafix/schemas/V3083 azf
	registerMob (Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/lang/String;)V a
net/minecraft/util/datafix/schemas/V3202 azg
net/minecraft/util/datafix/schemas/V3203 azh
net/minecraft/util/datafix/schemas/V3204 azi
net/minecraft/util/datafix/schemas/V3325 azj
net/minecraft/util/datafix/schemas/V3326 azk
net/minecraft/util/datafix/schemas/V3327 azl
net/minecraft/util/datafix/schemas/V3328 azm
net/minecraft/util/datafix/schemas/V3438 azn
net/minecraft/util/datafix/schemas/V3448 azo
net/minecraft/util/datafix/schemas/V501 azp
net/minecraft/util/datafix/schemas/V700 azq
net/minecraft/util/datafix/schemas/V701 azr
	registerMob (Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/lang/String;)V a
net/minecraft/util/datafix/schemas/V702 azs
	registerMob (Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/lang/String;)V a
net/minecraft/util/datafix/schemas/V703 azt
net/minecraft/util/datafix/schemas/V704 azu
	ADD_NAMES b
	ITEM_TO_BLOCKENTITY a
	registerInventory (Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/lang/String;)V a
net/minecraft/util/datafix/schemas/V705 azv
	ADD_NAMES b
	registerMob (Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/lang/String;)V a
	registerThrowableProjectile (Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/lang/String;)V b
net/minecraft/util/datafix/schemas/V808 azw
	registerInventory (Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/lang/String;)V a
net/minecraft/util/datafix/schemas/V99 azx
	ADD_NAMES a
	ITEM_TO_BLOCKENTITY c
	LOGGER b
	addNames (Lcom/mojang/serialization/Dynamic;Ljava/util/Map;Ljava/lang/String;)Ljava/lang/Object; a
	equipment (Lcom/mojang/datafixers/schemas/Schema;)Lcom/mojang/datafixers/types/templates/TypeTemplate; a
	registerInventory (Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/lang/String;)V d
	registerMinecart (Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/lang/String;)V c
	registerMob (Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/lang/String;)V a
	registerThrowableProjectile (Lcom/mojang/datafixers/schemas/Schema;Ljava/util/Map;Ljava/lang/String;)V b
net/minecraft/util/eventlog/EventLogDirectory azz
	COMPRESSED_EXTENSION c
	COMPRESS_BUFFER_SIZE b
	LOGGER a
	extension e
	root d
	createNewFile (Ljava/time/LocalDate;)Lnet/minecraft/util/eventlog/EventLogDirectory$RawFile; a
	listFiles ()Lnet/minecraft/util/eventlog/EventLogDirectory$FileList; a
	open (Ljava/nio/file/Path;Ljava/lang/String;)Lnet/minecraft/util/eventlog/EventLogDirectory; a
	parseFile (Ljava/nio/file/Path;)Lnet/minecraft/util/eventlog/EventLogDirectory$File; a
	tryCompress (Ljava/nio/file/Path;Ljava/nio/file/Path;)V a
	writeCompressed (Ljava/nio/channels/ReadableByteChannel;Ljava/nio/file/Path;)V a
net/minecraft/util/eventlog/EventLogDirectory$CompressedFile azz$a
	id b
	path a
	compress ()Lnet/minecraft/util/eventlog/EventLogDirectory$CompressedFile; b
	id ()Lnet/minecraft/util/eventlog/EventLogDirectory$FileId; d
	openReader ()Ljava/io/Reader; a
	path ()Ljava/nio/file/Path; c
net/minecraft/util/eventlog/EventLogDirectory$File azz$b
	compress ()Lnet/minecraft/util/eventlog/EventLogDirectory$CompressedFile; b
	id ()Lnet/minecraft/util/eventlog/EventLogDirectory$FileId; d
	openReader ()Ljava/io/Reader; a
	path ()Ljava/nio/file/Path; c
net/minecraft/util/eventlog/EventLogDirectory$FileId azz$c
	DATE_FORMATTER c
	date a
	index b
	date ()Ljava/time/LocalDate; a
	index ()I b
	parse (Ljava/lang/String;)Lnet/minecraft/util/eventlog/EventLogDirectory$FileId; a
	toFileName (Ljava/lang/String;)Ljava/lang/String; b
net/minecraft/util/eventlog/EventLogDirectory$FileList azz$d
	files a
	compressAll ()Lnet/minecraft/util/eventlog/EventLogDirectory$FileList; a
	ids ()Ljava/util/Set; c
	prune (Ljava/time/LocalDate;I)Lnet/minecraft/util/eventlog/EventLogDirectory$FileList; a
	stream ()Ljava/util/stream/Stream; b
net/minecraft/util/eventlog/EventLogDirectory$RawFile azz$e
	id b
	path a
	compress ()Lnet/minecraft/util/eventlog/EventLogDirectory$CompressedFile; b
	id ()Lnet/minecraft/util/eventlog/EventLogDirectory$FileId; d
	openChannel ()Ljava/nio/channels/FileChannel; e
	openReader ()Ljava/io/Reader; a
	path ()Ljava/nio/file/Path; c
net/minecraft/util/eventlog/JsonEventLog baa
	GSON a
	channel c
	codec b
	referenceCount d
	open (Lcom/mojang/serialization/Codec;Ljava/nio/file/Path;)Lnet/minecraft/util/eventlog/JsonEventLog; a
	openReader ()Lnet/minecraft/util/eventlog/JsonEventLogReader; a
	releaseReference ()V b
	write (Ljava/lang/Object;)V a
net/minecraft/util/eventlog/JsonEventLogReader bab
	create (Lcom/mojang/serialization/Codec;Ljava/io/Reader;)Lnet/minecraft/util/eventlog/JsonEventLogReader; a
	next ()Ljava/lang/Object; a
net/minecraft/util/monitoring/jmx/MinecraftServerStatistics bad
	LOGGER a
	attributeDescriptionByName d
	mBeanInfo c
	server b
	getAverageTickTime ()F a
	getTickTimes ()[J b
	registerJmxMonitoring (Lnet/minecraft/server/MinecraftServer;)V a
net/minecraft/util/monitoring/jmx/MinecraftServerStatistics$AttributeDescription bad$a
	description c
	getter b
	name a
	type d
	asMBeanAttributeInfo ()Ljavax/management/MBeanAttributeInfo; a
net/minecraft/util/profiling/ActiveProfiler bag
	LOGGER c
	WARNING_TIME_NANOS a
	chartedPaths o
	currentEntry m
	entries f
	getRealTime h
	getTickTime g
	path k
	paths d
	startTimeNano i
	startTimeTicks j
	startTimes e
	started l
	warn n
	endTick ()V b
	getChartedPaths ()Ljava/util/Set; e
	getCurrentEntry ()Lnet/minecraft/util/profiling/ActiveProfiler$PathEntry; f
	getEntry (Ljava/lang/String;)Lnet/minecraft/util/profiling/ActiveProfiler$PathEntry; c
	getResults ()Lnet/minecraft/util/profiling/ProfileResults; d
	incrementCounter (Ljava/lang/String;I)V a
	incrementCounter (Ljava/util/function/Supplier;I)V a
	markForCharting (Lnet/minecraft/util/profiling/metrics/MetricCategory;)V a
	pop ()V c
	popPush (Ljava/lang/String;)V b
	popPush (Ljava/util/function/Supplier;)V b
	push (Ljava/lang/String;)V a
	push (Ljava/util/function/Supplier;)V a
	startTick ()V a
net/minecraft/util/profiling/ActiveProfiler$PathEntry bag$a
	accumulatedDuration c
	count d
	counters e
	maxDuration a
	minDuration b
	getCount ()J c
	getCounters ()Lit/unimi/dsi/fastutil/objects/Object2LongMap; d
	getDuration ()J a
	getMaxDuration ()J b
net/minecraft/util/profiling/ContinuousProfiler bah
	profiler c
	realTime a
	tickCount b
	disable ()V b
	enable ()V c
	getFiller ()Lnet/minecraft/util/profiling/ProfilerFiller; d
	getResults ()Lnet/minecraft/util/profiling/ProfileResults; e
	isEnabled ()Z a
net/minecraft/util/profiling/EmptyProfileResults bai
	EMPTY a
	getEndTimeNano ()J c
	getEndTimeTicks ()I d
	getProfilerResults ()Ljava/lang/String; e
	getStartTimeNano ()J a
	getStartTimeTicks ()I b
	getTimes (Ljava/lang/String;)Ljava/util/List; a
	saveResults (Ljava/nio/file/Path;)Z a
net/minecraft/util/profiling/FilledProfileResults baj
	COUNTER_ENTRY_COMPARATOR e
	EMPTY b
	LOGGER a
	SPLITTER c
	endTimeNano i
	endTimeTicks j
	entries f
	startTimeNano g
	startTimeTicks h
	tickDuration k
	appendCounterResults (ILjava/lang/String;Lnet/minecraft/util/profiling/FilledProfileResults$CounterCollector;ILjava/lang/StringBuilder;)V a
	appendCounters (Ljava/util/Map;Ljava/lang/StringBuilder;I)V a
	appendProfilerResults (ILjava/lang/String;Ljava/lang/StringBuilder;)V a
	getComment ()Ljava/lang/String; i
	getCounterValues ()Ljava/util/Map; h
	getEndTimeNano ()J c
	getEndTimeTicks ()I d
	getEntry (Ljava/lang/String;)Lnet/minecraft/util/profiling/ProfilerPathEntry; c
	getProfilerResults ()Ljava/lang/String; e
	getProfilerResults (JI)Ljava/lang/String; a
	getStartTimeNano ()J a
	getStartTimeTicks ()I b
	getTickDuration ()I f
	getTimes (Ljava/lang/String;)Ljava/util/List; a
	indentLine (Ljava/lang/StringBuilder;I)Ljava/lang/StringBuilder; a
	isDirectChild (Ljava/lang/String;Ljava/lang/String;)Z a
	saveResults (Ljava/nio/file/Path;)Z a
net/minecraft/util/profiling/FilledProfileResults$CounterCollector baj$a
	children c
	selfValue a
	totalValue b
	addValue (Ljava/util/Iterator;J)V a
net/minecraft/util/profiling/InactiveProfiler bak
	INSTANCE a
	endTick ()V b
	getChartedPaths ()Ljava/util/Set; e
	getEntry (Ljava/lang/String;)Lnet/minecraft/util/profiling/ActiveProfiler$PathEntry; c
	getResults ()Lnet/minecraft/util/profiling/ProfileResults; d
	incrementCounter (Ljava/lang/String;I)V a
	incrementCounter (Ljava/util/function/Supplier;I)V a
	markForCharting (Lnet/minecraft/util/profiling/metrics/MetricCategory;)V a
	pop ()V c
	popPush (Ljava/lang/String;)V b
	popPush (Ljava/util/function/Supplier;)V b
	push (Ljava/lang/String;)V a
	push (Ljava/util/function/Supplier;)V a
	startTick ()V a
net/minecraft/util/profiling/ProfileCollector bal
	getChartedPaths ()Ljava/util/Set; e
	getEntry (Ljava/lang/String;)Lnet/minecraft/util/profiling/ActiveProfiler$PathEntry; c
	getResults ()Lnet/minecraft/util/profiling/ProfileResults; d
net/minecraft/util/profiling/ProfileResults bam
	PATH_SEPARATOR d
	demanglePath (Ljava/lang/String;)Ljava/lang/String; b
	getEndTimeNano ()J c
	getEndTimeTicks ()I d
	getNanoDuration ()J g
	getProfilerResults ()Ljava/lang/String; e
	getStartTimeNano ()J a
	getStartTimeTicks ()I b
	getTickDuration ()I f
	getTimes (Ljava/lang/String;)Ljava/util/List; a
	saveResults (Ljava/nio/file/Path;)Z a
net/minecraft/util/profiling/ProfilerFiller ban
	ROOT b
	endTick ()V b
	incrementCounter (Ljava/lang/String;)V d
	incrementCounter (Ljava/lang/String;I)V a
	incrementCounter (Ljava/util/function/Supplier;)V c
	incrementCounter (Ljava/util/function/Supplier;I)V a
	markForCharting (Lnet/minecraft/util/profiling/metrics/MetricCategory;)V a
	pop ()V c
	popPush (Ljava/lang/String;)V b
	popPush (Ljava/util/function/Supplier;)V b
	push (Ljava/lang/String;)V a
	push (Ljava/util/function/Supplier;)V a
	startTick ()V a
	tee (Lnet/minecraft/util/profiling/ProfilerFiller;Lnet/minecraft/util/profiling/ProfilerFiller;)Lnet/minecraft/util/profiling/ProfilerFiller; a
net/minecraft/util/profiling/ProfilerPathEntry bao
	getCount ()J c
	getCounters ()Lit/unimi/dsi/fastutil/objects/Object2LongMap; d
	getDuration ()J a
	getMaxDuration ()J b
net/minecraft/util/profiling/ResultField bap
	count c
	globalPercentage b
	name d
	percentage a
	compareTo (Lnet/minecraft/util/profiling/ResultField;)I a
	getColor ()I a
net/minecraft/util/profiling/SingleTickProfiler baq
	LOGGER a
	location e
	profiler f
	realTime b
	saveThreshold c
	tick d
	createTickProfiler (Ljava/lang/String;)Lnet/minecraft/util/profiling/SingleTickProfiler; a
	decorateFiller (Lnet/minecraft/util/profiling/ProfilerFiller;Lnet/minecraft/util/profiling/SingleTickProfiler;)Lnet/minecraft/util/profiling/ProfilerFiller; a
	endTick ()V b
	startTick ()Lnet/minecraft/util/profiling/ProfilerFiller; a
net/minecraft/util/profiling/jfr/Environment bar
	$VALUES d
	CLIENT a
	SERVER b
	description c
	$values ()[Lnet/minecraft/util/profiling/jfr/Environment; b
	from (Lnet/minecraft/server/MinecraftServer;)Lnet/minecraft/util/profiling/jfr/Environment; a
	getDescription ()Ljava/lang/String; a
net/minecraft/util/profiling/jfr/JfrProfiler bas
	CUSTOM_EVENTS g
	DATE_TIME_FORMATTER i
	FLIGHT_RECORDER_CONFIG h
	INSTANCE j
	LOGGER f
	NETWORK_CATEGORY d
	ROOT_CATEGORY a
	TICK_CATEGORY c
	WORLD_GEN_CATEGORY b
	currentAverageTickTime l
	networkTrafficByAddress m
	recording k
	getInstance ()Lnet/minecraft/util/profiling/jfr/JfrProfiler; a
	isAvailable ()Z d
	isRunning ()Z c
	networkStatFor (Ljava/net/SocketAddress;)Lnet/minecraft/util/profiling/jfr/event/NetworkSummaryEvent$SumAggregation; a
	onChunkGenerate (Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/resources/ResourceKey;Ljava/lang/String;)Lnet/minecraft/util/profiling/jfr/callback/ProfiledDuration; a
	onPacketReceived (IILjava/net/SocketAddress;I)V a
	onPacketSent (IILjava/net/SocketAddress;I)V b
	onServerTick (F)V a
	onWorldLoadedStarted ()Lnet/minecraft/util/profiling/jfr/callback/ProfiledDuration; e
	setupSummaryListener ()V f
	start (Ljava/io/Reader;Lnet/minecraft/util/profiling/jfr/Environment;)Z a
	start (Lnet/minecraft/util/profiling/jfr/Environment;)Z a
	stop ()Ljava/nio/file/Path; b
net/minecraft/util/profiling/jfr/JvmProfiler bat
	INSTANCE e
	isAvailable ()Z d
	isRunning ()Z c
	onChunkGenerate (Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/resources/ResourceKey;Ljava/lang/String;)Lnet/minecraft/util/profiling/jfr/callback/ProfiledDuration; a
	onPacketReceived (IILjava/net/SocketAddress;I)V a
	onPacketSent (IILjava/net/SocketAddress;I)V b
	onServerTick (F)V a
	onWorldLoadedStarted ()Lnet/minecraft/util/profiling/jfr/callback/ProfiledDuration; e
	start (Lnet/minecraft/util/profiling/jfr/Environment;)Z a
	stop ()Ljava/nio/file/Path; b
net/minecraft/util/profiling/jfr/JvmProfiler$NoOpProfiler bat$a
	LOGGER b
	noOpCommit a
	isAvailable ()Z d
	isRunning ()Z c
	onChunkGenerate (Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/resources/ResourceKey;Ljava/lang/String;)Lnet/minecraft/util/profiling/jfr/callback/ProfiledDuration; a
	onPacketReceived (IILjava/net/SocketAddress;I)V a
	onPacketSent (IILjava/net/SocketAddress;I)V b
	onServerTick (F)V a
	onWorldLoadedStarted ()Lnet/minecraft/util/profiling/jfr/callback/ProfiledDuration; e
	start (Lnet/minecraft/util/profiling/jfr/Environment;)Z a
	stop ()Ljava/nio/file/Path; b
net/minecraft/util/profiling/jfr/Percentiles bau
	DEFAULT_INDEXES a
	evaluate ([D)Ljava/util/Map; a
	evaluate ([J)Ljava/util/Map; a
	sorted (Ljava/util/Map;)Ljava/util/Map; a
net/minecraft/util/profiling/jfr/SummaryReporter bav
	LOGGER a
	onDeregistration b
	infoWithFallback (Ljava/util/function/Supplier;)V a
	recordingStopped (Ljava/nio/file/Path;)V a
	warnWithFallback (Ljava/util/function/Supplier;Ljava/lang/Throwable;)V a
net/minecraft/util/profiling/jfr/callback/ProfiledDuration baw
net/minecraft/util/profiling/jfr/event/ChunkGenerationEvent$Fields net/minecraft/util/profiling/jfr/event/ChunkGenerationEvent$a
	CHUNK_POS_X c
	CHUNK_POS_Z d
	LEVEL f
	STATUS e
	WORLD_POS_X a
	WORLD_POS_Z b
net/minecraft/util/profiling/jfr/event/NetworkSummaryEvent$Fields net/minecraft/util/profiling/jfr/event/NetworkSummaryEvent$a
	RECEIVED_BYTES c
	RECEIVED_PACKETS e
	REMOTE_ADDRESS a
	SENT_BYTES b
	SENT_PACKETS d
net/minecraft/util/profiling/jfr/event/NetworkSummaryEvent$SumAggregation net/minecraft/util/profiling/jfr/event/NetworkSummaryEvent$b
	event e
	receivedBytes c
	receivedPackets d
	sentBytes a
	sentPackets b
	commitEvent ()V a
	trackReceivedPacket (I)V b
	trackSentPacket (I)V a
net/minecraft/util/profiling/jfr/event/PacketEvent bay
net/minecraft/util/profiling/jfr/event/PacketEvent$Fields bay$a
	BYTES d
	PACKET_ID c
	PROTOCOL_ID b
	REMOTE_ADDRESS a
net/minecraft/util/profiling/jfr/event/ServerTickTimeEvent$Fields net/minecraft/util/profiling/jfr/event/ServerTickTimeEvent$a
	AVERAGE_TICK_DURATION a
net/minecraft/util/profiling/jfr/parse/JfrStatsParser bbb
	chunkGenStats c
	cpuLoadStat d
	fileReads h
	fileWrites g
	garbageCollections i
	gcHeapStats k
	gcTotalDuration j
	receivedPackets e
	recordingEnded b
	recordingStarted a
	sentPackets f
	threadAllocationStats l
	tickTimes m
	worldCreationDuration n
	appendFileIO (Ljdk/jfr/consumer/RecordedEvent;Ljava/util/List;Ljava/lang/String;)V a
	capture (Ljava/util/stream/Stream;)V a
	collectPacketStats (Ljava/time/Duration;Ljava/util/Map;)Lnet/minecraft/util/profiling/jfr/stats/NetworkPacketSummary; a
	incrementPacket (Ljdk/jfr/consumer/RecordedEvent;ILjava/util/Map;)V a
	parse (Ljava/nio/file/Path;)Lnet/minecraft/util/profiling/jfr/parse/JfrStatsResult; a
	results ()Lnet/minecraft/util/profiling/jfr/parse/JfrStatsResult; a
net/minecraft/util/profiling/jfr/parse/JfrStatsParser$MutableCountAndSize bbb$a
	count a
	totalSize b
	increment (I)V a
	toCountAndSize ()Lnet/minecraft/util/profiling/jfr/stats/NetworkPacketSummary$PacketCountAndSize; a
net/minecraft/util/profiling/jfr/parse/JfrStatsResult bbc
	chunkGenStats m
	cpuLoadStats f
	fileReads l
	fileWrites k
	heapSummary g
	receivedPacketsSummary i
	recordingDuration c
	recordingEnded b
	recordingStarted a
	sentPacketsSummary j
	threadAllocationSummary h
	tickTimes e
	worldCreationDuration d
	asJson ()Ljava/lang/String; b
	chunkGenStats ()Ljava/util/List; o
	chunkGenSummary ()Ljava/util/List; a
	cpuLoadStats ()Ljava/util/List; h
	fileReads ()Lnet/minecraft/util/profiling/jfr/stats/FileIOStat$Summary; n
	fileWrites ()Lnet/minecraft/util/profiling/jfr/stats/FileIOStat$Summary; m
	heapSummary ()Lnet/minecraft/util/profiling/jfr/stats/GcHeapStat$Summary; i
	receivedPacketsSummary ()Lnet/minecraft/util/profiling/jfr/stats/NetworkPacketSummary; k
	recordingDuration ()Ljava/time/Duration; e
	recordingEnded ()Ljava/time/Instant; d
	recordingStarted ()Ljava/time/Instant; c
	sentPacketsSummary ()Lnet/minecraft/util/profiling/jfr/stats/NetworkPacketSummary; l
	threadAllocationSummary ()Lnet/minecraft/util/profiling/jfr/stats/ThreadAllocationStat$Summary; j
	tickTimes ()Ljava/util/List; g
	worldCreationDuration ()Ljava/time/Duration; f
net/minecraft/util/profiling/jfr/serialize/JfrResultJsonSerializer bbe
	BYTES_PER_SECOND b
	COUNT c
	COUNT_PER_SECOND f
	DURATION_NANOS_TOTAL d
	TOTAL_BYTES e
	gson a
	chunkGen (Ljava/util/List;)Lcom/google/gson/JsonElement; a
	cpu (Ljava/util/List;)Lcom/google/gson/JsonElement; c
	fileIO (Lnet/minecraft/util/profiling/jfr/parse/JfrStatsResult;)Lcom/google/gson/JsonElement; b
	fileIoSummary (Lnet/minecraft/util/profiling/jfr/stats/FileIOStat$Summary;)Lcom/google/gson/JsonElement; a
	format (Lnet/minecraft/util/profiling/jfr/parse/JfrStatsResult;)Ljava/lang/String; a
	heap (Lnet/minecraft/util/profiling/jfr/stats/GcHeapStat$Summary;)Lcom/google/gson/JsonElement; a
	network (Lnet/minecraft/util/profiling/jfr/parse/JfrStatsResult;)Lcom/google/gson/JsonElement; c
	packets (Lnet/minecraft/util/profiling/jfr/stats/NetworkPacketSummary;)Lcom/google/gson/JsonElement; a
	serverTicks (Ljava/util/List;)Lcom/google/gson/JsonElement; b
	threadAllocations (Lnet/minecraft/util/profiling/jfr/stats/ThreadAllocationStat$Summary;)Lcom/google/gson/JsonElement; a
net/minecraft/util/profiling/jfr/stats/ChunkGenStat bbg
	chunkPos b
	duration a
	level e
	status d
	worldPos c
	chunkPos ()Lnet/minecraft/world/level/ChunkPos; b
	duration ()Ljava/time/Duration; a
	from (Ljdk/jfr/consumer/RecordedEvent;)Lnet/minecraft/util/profiling/jfr/stats/ChunkGenStat; a
	level ()Ljava/lang/String; e
	status ()Lnet/minecraft/world/level/chunk/ChunkStatus; d
	worldPos ()Lnet/minecraft/server/level/ColumnPos; c
net/minecraft/util/profiling/jfr/stats/CpuLoadStat bbh
	jvm a
	system c
	userJvm b
	from (Ljdk/jfr/consumer/RecordedEvent;)Lnet/minecraft/util/profiling/jfr/stats/CpuLoadStat; a
	jvm ()D a
	system ()D c
	userJvm ()D b
net/minecraft/util/profiling/jfr/stats/FileIOStat bbi
	bytes c
	duration a
	path b
	bytes ()J c
	duration ()Ljava/time/Duration; a
	path ()Ljava/lang/String; b
	summary (Ljava/time/Duration;Ljava/util/List;)Lnet/minecraft/util/profiling/jfr/stats/FileIOStat$Summary; a
net/minecraft/util/profiling/jfr/stats/FileIOStat$Summary bbi$a
	bytesPerSecond b
	counts c
	countsPerSecond d
	timeSpentInIO e
	topTenContributorsByTotalBytes f
	totalBytes a
	bytesPerSecond ()D b
	counts ()J c
	countsPerSecond ()D d
	timeSpentInIO ()Ljava/time/Duration; e
	topTenContributorsByTotalBytes ()Ljava/util/List; f
	totalBytes ()J a
net/minecraft/util/profiling/jfr/stats/GcHeapStat bbj
	heapUsed b
	timestamp a
	timing c
	calculateAllocationRatePerSecond (Ljava/util/List;)D a
	from (Ljdk/jfr/consumer/RecordedEvent;)Lnet/minecraft/util/profiling/jfr/stats/GcHeapStat; a
	heapUsed ()J b
	summary (Ljava/time/Duration;Ljava/util/List;Ljava/time/Duration;I)Lnet/minecraft/util/profiling/jfr/stats/GcHeapStat$Summary; a
	timestamp ()Ljava/time/Instant; a
	timing ()Lnet/minecraft/util/profiling/jfr/stats/GcHeapStat$Timing; c
net/minecraft/util/profiling/jfr/stats/GcHeapStat$Summary bbj$a
	allocationRateBytesPerSecond d
	duration a
	gcTotalDuration b
	totalGCs c
	allocationRateBytesPerSecond ()D e
	duration ()Ljava/time/Duration; b
	gcOverHead ()F a
	gcTotalDuration ()Ljava/time/Duration; c
	totalGCs ()I d
net/minecraft/util/profiling/jfr/stats/GcHeapStat$Timing bbj$b
	$VALUES c
	AFTER_GC b
	BEFORE_GC a
	$values ()[Lnet/minecraft/util/profiling/jfr/stats/GcHeapStat$Timing; a
net/minecraft/util/profiling/jfr/stats/NetworkPacketSummary bbk
	largestSizeContributors b
	recordingDuration c
	totalPacketCountAndSize a
	getCountsPerSecond ()D a
	getSizePerSecond ()D b
	getTotalCount ()J c
	getTotalSize ()J d
	largestSizeContributors ()Ljava/util/List; e
net/minecraft/util/profiling/jfr/stats/NetworkPacketSummary$PacketCountAndSize bbk$a
	SIZE_THEN_COUNT c
	totalCount a
	totalSize b
	add (Lnet/minecraft/util/profiling/jfr/stats/NetworkPacketSummary$PacketCountAndSize;)Lnet/minecraft/util/profiling/jfr/stats/NetworkPacketSummary$PacketCountAndSize; a
	totalCount ()J a
	totalSize ()J b
net/minecraft/util/profiling/jfr/stats/NetworkPacketSummary$PacketIdentification bbk$b
	PACKET_NAME_BY_ID d
	direction a
	packetId c
	protocolId b
	direction ()Lnet/minecraft/network/protocol/PacketFlow; b
	from (Ljdk/jfr/consumer/RecordedEvent;)Lnet/minecraft/util/profiling/jfr/stats/NetworkPacketSummary$PacketIdentification; a
	packetId ()I d
	packetName ()Ljava/lang/String; a
	protocolId ()I c
net/minecraft/util/profiling/jfr/stats/ThreadAllocationStat bbl
	UNKNOWN_THREAD d
	threadName b
	timestamp a
	totalBytes c
	from (Ljdk/jfr/consumer/RecordedEvent;)Lnet/minecraft/util/profiling/jfr/stats/ThreadAllocationStat; a
	summary (Ljava/util/List;)Lnet/minecraft/util/profiling/jfr/stats/ThreadAllocationStat$Summary; a
	threadName ()Ljava/lang/String; b
	timestamp ()Ljava/time/Instant; a
	totalBytes ()J c
net/minecraft/util/profiling/jfr/stats/ThreadAllocationStat$Summary bbl$a
	allocationsPerSecondByThread a
	allocationsPerSecondByThread ()Ljava/util/Map; a
net/minecraft/util/profiling/jfr/stats/TickTimeStat bbm
	currentAverage b
	timestamp a
	currentAverage ()Ljava/time/Duration; b
	from (Ljdk/jfr/consumer/RecordedEvent;)Lnet/minecraft/util/profiling/jfr/stats/TickTimeStat; a
	timestamp ()Ljava/time/Instant; a
net/minecraft/util/profiling/jfr/stats/TimeStamped bbn
	getTimestamp ()Ljava/time/Instant; a
net/minecraft/util/profiling/jfr/stats/TimedStat bbo
	duration ()Ljava/time/Duration; a
net/minecraft/util/profiling/jfr/stats/TimedStatSummary bbp
	count d
	fastest a
	percentilesNanos e
	secondSlowest c
	slowest b
	totalDuration f
	count ()I d
	fastest ()Lnet/minecraft/util/profiling/jfr/stats/TimedStat; a
	percentilesNanos ()Ljava/util/Map; e
	secondSlowest ()Lnet/minecraft/util/profiling/jfr/stats/TimedStat; c
	slowest ()Lnet/minecraft/util/profiling/jfr/stats/TimedStat; b
	summary (Ljava/util/List;)Lnet/minecraft/util/profiling/jfr/stats/TimedStatSummary; a
	totalDuration ()Ljava/time/Duration; f
net/minecraft/util/profiling/metrics/MetricCategory bbr
	$VALUES k
	CHUNK_RENDERING f
	CHUNK_RENDERING_DISPATCHING g
	CPU h
	EVENT_LOOPS b
	GPU i
	JVM e
	MAIL_BOXES c
	PATH_FINDING a
	TICK_LOOP d
	description j
	$values ()[Lnet/minecraft/util/profiling/metrics/MetricCategory; b
	getDescription ()Ljava/lang/String; a
net/minecraft/util/profiling/metrics/MetricSampler bbs
	beforeTick h
	category c
	currentValue i
	isRunning g
	name b
	sampler d
	thresholdTest a
	ticks e
	values f
	builder (Ljava/lang/String;Lnet/minecraft/util/profiling/metrics/MetricCategory;Ljava/util/function/ToDoubleFunction;Ljava/lang/Object;)Lnet/minecraft/util/profiling/metrics/MetricSampler$MetricSamplerBuilder; a
	create (Ljava/lang/String;Lnet/minecraft/util/profiling/metrics/MetricCategory;Ljava/lang/Object;Ljava/util/function/ToDoubleFunction;)Lnet/minecraft/util/profiling/metrics/MetricSampler; a
	create (Ljava/lang/String;Lnet/minecraft/util/profiling/metrics/MetricCategory;Ljava/util/function/DoubleSupplier;)Lnet/minecraft/util/profiling/metrics/MetricSampler; a
	getCategory ()Lnet/minecraft/util/profiling/metrics/MetricCategory; e
	getName ()Ljava/lang/String; d
	getSampler ()Ljava/util/function/DoubleSupplier; c
	onEndTick (I)V a
	onFinished ()V b
	onStartTick ()V a
	result ()Lnet/minecraft/util/profiling/metrics/MetricSampler$SamplerResult; f
	triggersThreshold ()Z g
	verifyRunning ()V h
net/minecraft/util/profiling/metrics/MetricSampler$MetricSamplerBuilder bbs$a
	beforeTick e
	category b
	context d
	name a
	sampler c
	thresholdTest f
	build ()Lnet/minecraft/util/profiling/metrics/MetricSampler; a
	withBeforeTick (Ljava/util/function/Consumer;)Lnet/minecraft/util/profiling/metrics/MetricSampler$MetricSamplerBuilder; a
	withThresholdAlert (Lnet/minecraft/util/profiling/metrics/MetricSampler$ThresholdTest;)Lnet/minecraft/util/profiling/metrics/MetricSampler$MetricSamplerBuilder; a
net/minecraft/util/profiling/metrics/MetricSampler$SamplerResult bbs$b
	firstTick b
	lastTick c
	recording a
	getFirstTick ()I a
	getLastTick ()I b
	valueAtTick (I)D a
net/minecraft/util/profiling/metrics/MetricSampler$ThresholdTest bbs$c
net/minecraft/util/profiling/metrics/MetricSampler$ValueIncreasedByPercentage bbs$d
	percentageIncreaseThreshold a
	previousValue b
net/minecraft/util/profiling/metrics/MetricsRegistry bbt
	INSTANCE a
	measuredInstances b
	add (Lnet/minecraft/util/profiling/metrics/ProfilerMeasured;)V a
	aggregateDuplicates (Ljava/util/Map;)Ljava/util/List; a
	getRegisteredSamplers ()Ljava/util/List; a
net/minecraft/util/profiling/metrics/MetricsRegistry$AggregatedMetricSampler bbt$a
	delegates b
	averageValueFromDelegates (Ljava/util/List;)D c
	beforeTick (Ljava/util/List;)V b
	thresholdTest (Ljava/util/List;)Lnet/minecraft/util/profiling/metrics/MetricSampler$ThresholdTest; a
net/minecraft/util/profiling/metrics/MetricsSamplerProvider bbu
	samplers (Ljava/util/function/Supplier;)Ljava/util/Set; a
net/minecraft/util/profiling/metrics/ProfilerMeasured bbv
	profiledMetrics ()Ljava/util/List; bk
net/minecraft/util/profiling/metrics/profiling/ActiveMetricsRecorder bbx
	PROFILING_MAX_DURATION_SECONDS a
	currentTick l
	deadlineNano k
	deviationsBySampler c
	globalOnReportFinished b
	ioExecutor e
	killSwitch n
	metricsPersister f
	metricsSamplerProvider i
	onProfilingEnd g
	onReportFinished h
	singleTickProfiler m
	taskProfiler d
	thisTickSamplers o
	wallTimeSource j
	cancel ()V b
	cleanup (Ljava/util/Collection;)V a
	createStarted (Lnet/minecraft/util/profiling/metrics/MetricsSamplerProvider;Ljava/util/function/LongSupplier;Ljava/util/concurrent/Executor;Lnet/minecraft/util/profiling/metrics/storage/MetricsPersister;Ljava/util/function/Consumer;Ljava/util/function/Consumer;)Lnet/minecraft/util/profiling/metrics/profiling/ActiveMetricsRecorder; a
	end ()V a
	endTick ()V d
	getProfiler ()Lnet/minecraft/util/profiling/ProfilerFiller; f
	isRecording ()Z e
	registerGlobalCompletionCallback (Ljava/util/function/Consumer;)V a
	scheduleSaveResults (Lnet/minecraft/util/profiling/ProfileResults;)V a
	startTick ()V c
	verifyStarted ()V g
net/minecraft/util/profiling/metrics/profiling/InactiveMetricsRecorder bby
	INSTANCE a
	cancel ()V b
	end ()V a
	endTick ()V d
	getProfiler ()Lnet/minecraft/util/profiling/ProfilerFiller; f
	isRecording ()Z e
	startTick ()V c
net/minecraft/util/profiling/metrics/profiling/MetricsRecorder bbz
	cancel ()V b
	end ()V a
	endTick ()V d
	getProfiler ()Lnet/minecraft/util/profiling/ProfilerFiller; f
	isRecording ()Z e
	startTick ()V c
net/minecraft/util/profiling/metrics/profiling/ProfilerSamplerAdapter bca
	previouslyFoundSamplerNames a
	newSamplersFoundInProfiler (Ljava/util/function/Supplier;)Ljava/util/Set; a
	samplerForProfilingPath (Ljava/util/function/Supplier;Ljava/lang/String;Lnet/minecraft/util/profiling/metrics/MetricCategory;)Lnet/minecraft/util/profiling/metrics/MetricSampler; a
net/minecraft/util/profiling/metrics/profiling/ServerMetricsSamplersProvider bcb
	LOGGER a
	samplerFactory c
	samplers b
	runtimeIndependentSamplers ()Ljava/util/Set; a
	samplers (Ljava/util/function/Supplier;)Ljava/util/Set; a
	tickTimeSampler (Ljava/util/function/LongSupplier;)Lnet/minecraft/util/profiling/metrics/MetricSampler; a
net/minecraft/util/profiling/metrics/profiling/ServerMetricsSamplersProvider$CpuStats bcb$a
	currentLoad e
	lastPollMs f
	nrOfCpus a
	previousCpuLoadTick d
	processor c
	systemInfo b
	loadForCpu (I)D a
net/minecraft/util/profiling/metrics/storage/MetricsPersister bcd
	DEVIATIONS_DIR_NAME c
	LOGGER e
	METRICS_DIR_NAME b
	PROFILING_RESULTS_DIR a
	PROFILING_RESULT_FILENAME d
	rootFolderName f
	saveCategory (Lnet/minecraft/util/profiling/metrics/MetricCategory;Ljava/util/List;Ljava/nio/file/Path;)V a
	saveDeviations (Ljava/util/Map;Ljava/nio/file/Path;)V a
	saveMetrics (Ljava/util/Set;Ljava/nio/file/Path;)V a
	saveProfilingTaskExecutionResult (Lnet/minecraft/util/profiling/ProfileResults;Ljava/nio/file/Path;)V a
	saveReports (Ljava/util/Set;Ljava/util/Map;Lnet/minecraft/util/profiling/ProfileResults;)Ljava/nio/file/Path; a
net/minecraft/util/profiling/metrics/storage/RecordedDeviation bce
	profilerResultAtTick c
	tick b
	timestamp a
net/minecraft/util/random/SimpleWeightedRandomList bch
	builder ()Lnet/minecraft/util/random/SimpleWeightedRandomList$Builder; a
	empty ()Lnet/minecraft/util/random/SimpleWeightedRandomList; b
	getRandomValue (Lnet/minecraft/util/RandomSource;)Ljava/util/Optional; a
	single (Ljava/lang/Object;)Lnet/minecraft/util/random/SimpleWeightedRandomList; a
	wrappedCodec (Lcom/mojang/serialization/Codec;)Lcom/mojang/serialization/Codec; b
	wrappedCodecAllowingEmpty (Lcom/mojang/serialization/Codec;)Lcom/mojang/serialization/Codec; a
net/minecraft/util/random/SimpleWeightedRandomList$Builder bch$a
	result a
	add (Ljava/lang/Object;I)Lnet/minecraft/util/random/SimpleWeightedRandomList$Builder; a
	build ()Lnet/minecraft/util/random/SimpleWeightedRandomList; a
net/minecraft/util/random/Weight bci
	CODEC a
	LOGGER c
	ONE b
	value d
	asInt ()I a
	of (I)Lnet/minecraft/util/random/Weight; a
	validateWeight (I)V b
net/minecraft/util/random/WeightedEntry bcj
	getWeight ()Lnet/minecraft/util/random/Weight; a
	wrap (Ljava/lang/Object;I)Lnet/minecraft/util/random/WeightedEntry$Wrapper; a
net/minecraft/util/random/WeightedEntry$IntrusiveBase bcj$a
	weight a
	getWeight ()Lnet/minecraft/util/random/Weight; a
net/minecraft/util/random/WeightedEntry$Wrapper bcj$b
	data a
	weight b
	codec (Lcom/mojang/serialization/Codec;)Lcom/mojang/serialization/Codec; a
	getData ()Ljava/lang/Object; b
	getWeight ()Lnet/minecraft/util/random/Weight; a
net/minecraft/util/random/WeightedRandom bck
	getRandomItem (Lnet/minecraft/util/RandomSource;Ljava/util/List;)Ljava/util/Optional; a
	getRandomItem (Lnet/minecraft/util/RandomSource;Ljava/util/List;I)Ljava/util/Optional; a
	getTotalWeight (Ljava/util/List;)I a
	getWeightedItem (Ljava/util/List;I)Ljava/util/Optional; a
net/minecraft/util/random/WeightedRandomList bcl
	items b
	totalWeight a
	codec (Lcom/mojang/serialization/Codec;)Lcom/mojang/serialization/Codec; c
	create ()Lnet/minecraft/util/random/WeightedRandomList; c
	create (Ljava/util/List;)Lnet/minecraft/util/random/WeightedRandomList; a
	create ([Lnet/minecraft/util/random/WeightedEntry;)Lnet/minecraft/util/random/WeightedRandomList; a
	getRandom (Lnet/minecraft/util/RandomSource;)Ljava/util/Optional; b
	isEmpty ()Z d
	unwrap ()Ljava/util/List; e
net/minecraft/util/thread/BlockableEventLoop bcn
	LOGGER c
	blockingCount e
	name b
	pendingRunnables d
	doRunTask (Ljava/lang/Runnable;)V d
	dropAllTasks ()V bo
	executeBlocking (Ljava/lang/Runnable;)V h
	executeIfPossible (Ljava/lang/Runnable;)V c
	getPendingTasksCount ()I bm
	getRunningThread ()Ljava/lang/Thread; au
	isSameThread ()Z bl
	managedBlock (Ljava/util/function/BooleanSupplier;)V c
	name ()Ljava/lang/String; bn
	pollTask ()Z x
	profiledMetrics ()Ljava/util/List; bk
	runAllTasks ()V bp
	scheduleExecutables ()Z at
	shouldRun (Ljava/lang/Runnable;)Z e
	submit (Ljava/lang/Runnable;)Ljava/util/concurrent/CompletableFuture; g
	submit (Ljava/util/function/Supplier;)Ljava/util/concurrent/CompletableFuture; a
	submitAsync (Ljava/lang/Runnable;)Ljava/util/concurrent/CompletableFuture; a
	tell (Ljava/lang/Object;)V a
	tell (Ljava/lang/Runnable;)V i
	waitForTasks ()V bq
	wrapRunnable (Ljava/lang/Runnable;)Ljava/lang/Runnable; f
net/minecraft/util/thread/NamedThreadFactory bco
	LOGGER a
	group b
	namePrefix d
	threadNumber c
net/minecraft/util/thread/ProcessorHandle bcp
	ask (Ljava/util/function/Function;)Ljava/util/concurrent/CompletableFuture; b
	askEither (Ljava/util/function/Function;)Ljava/util/concurrent/CompletableFuture; c
	name ()Ljava/lang/String; bn
	of (Ljava/lang/String;Ljava/util/function/Consumer;)Lnet/minecraft/util/thread/ProcessorHandle; a
	tell (Ljava/lang/Object;)V a
net/minecraft/util/thread/ProcessorMailbox bcq
	CLOSED_BIT b
	LOGGER a
	SCHEDULED_BIT c
	dispatcher f
	name g
	queue e
	status d
	canBeScheduled ()Z f
	create (Ljava/util/concurrent/Executor;Ljava/lang/String;)Lnet/minecraft/util/thread/ProcessorMailbox; a
	hasWork ()Z c
	name ()Ljava/lang/String; bn
	pollTask ()Z h
	pollUntil (Lit/unimi/dsi/fastutil/ints/Int2BooleanFunction;)I a
	profiledMetrics ()Ljava/util/List; bk
	registerForExecution ()V i
	runAll ()V a
	setAsIdle ()V e
	setAsScheduled ()Z d
	shouldProcess ()Z g
	size ()I b
	tell (Ljava/lang/Object;)V a
net/minecraft/util/thread/ReentrantBlockableEventLoop bcr
	reentrantCount b
	doRunTask (Ljava/lang/Runnable;)V d
	runningTask ()Z br
	scheduleExecutables ()Z at
net/minecraft/util/thread/StrictQueue bcs
	isEmpty ()Z b
	pop ()Ljava/lang/Object; a
	push (Ljava/lang/Object;)Z a
	size ()I c
net/minecraft/util/thread/StrictQueue$FixedPriorityQueue bcs$a
	queues a
	size b
	isEmpty ()Z b
	pop ()Ljava/lang/Object; a
	pop ()Ljava/lang/Runnable; d
	push (Ljava/lang/Object;)Z a
	push (Lnet/minecraft/util/thread/StrictQueue$IntRunnable;)Z a
	size ()I c
net/minecraft/util/thread/StrictQueue$IntRunnable bcs$b
	priority a
	task b
	getPriority ()I a
net/minecraft/util/thread/StrictQueue$QueueStrictQueue bcs$c
	queue a
	isEmpty ()Z b
	pop ()Ljava/lang/Object; a
	push (Ljava/lang/Object;)Z a
	size ()I c
net/minecraft/util/valueproviders/BiasedToBottomInt bcu
	CODEC a
	maxInclusive f
	minInclusive b
	getMaxValue ()I b
	getMinValue ()I a
	getType ()Lnet/minecraft/util/valueproviders/IntProviderType; c
	of (II)Lnet/minecraft/util/valueproviders/BiasedToBottomInt; a
	sample (Lnet/minecraft/util/RandomSource;)I a
net/minecraft/util/valueproviders/ClampedInt bcv
	CODEC a
	maxInclusive g
	minInclusive f
	source b
	getMaxValue ()I b
	getMinValue ()I a
	getType ()Lnet/minecraft/util/valueproviders/IntProviderType; c
	of (Lnet/minecraft/util/valueproviders/IntProvider;II)Lnet/minecraft/util/valueproviders/ClampedInt; a
	sample (Lnet/minecraft/util/RandomSource;)I a
net/minecraft/util/valueproviders/ClampedNormalFloat bcw
	CODEC a
	deviation d
	max f
	mean b
	min e
	getMaxValue ()F b
	getMinValue ()F a
	getType ()Lnet/minecraft/util/valueproviders/FloatProviderType; c
	of (FFFF)Lnet/minecraft/util/valueproviders/ClampedNormalFloat; a
	sample (Lnet/minecraft/util/RandomSource;)F a
	sample (Lnet/minecraft/util/RandomSource;FFFF)F a
net/minecraft/util/valueproviders/ClampedNormalInt bcx
	CODEC a
	deviation f
	max_inclusive h
	mean b
	min_inclusive g
	getMaxValue ()I b
	getMinValue ()I a
	getType ()Lnet/minecraft/util/valueproviders/IntProviderType; c
	of (FFII)Lnet/minecraft/util/valueproviders/ClampedNormalInt; a
	sample (Lnet/minecraft/util/RandomSource;)I a
	sample (Lnet/minecraft/util/RandomSource;FFFF)I a
net/minecraft/util/valueproviders/ConstantFloat bcy
	CODEC b
	ZERO a
	value d
	getMaxValue ()F b
	getMinValue ()F a
	getType ()Lnet/minecraft/util/valueproviders/FloatProviderType; c
	getValue ()F d
	of (F)Lnet/minecraft/util/valueproviders/ConstantFloat; a
	sample (Lnet/minecraft/util/RandomSource;)F a
net/minecraft/util/valueproviders/ConstantInt bcz
	CODEC b
	ZERO a
	value f
	getMaxValue ()I b
	getMinValue ()I a
	getType ()Lnet/minecraft/util/valueproviders/IntProviderType; c
	getValue ()I d
	of (I)Lnet/minecraft/util/valueproviders/ConstantInt; a
	sample (Lnet/minecraft/util/RandomSource;)I a
net/minecraft/util/valueproviders/FloatProvider bda
	CODEC c
	CONSTANT_OR_DISPATCH_CODEC a
	codec (FF)Lcom/mojang/serialization/Codec; a
	getMaxValue ()F b
	getMinValue ()F a
	getType ()Lnet/minecraft/util/valueproviders/FloatProviderType; c
net/minecraft/util/valueproviders/FloatProviderType bdb
	CLAMPED_NORMAL c
	CONSTANT a
	TRAPEZOID d
	UNIFORM b
	register (Ljava/lang/String;Lcom/mojang/serialization/Codec;)Lnet/minecraft/util/valueproviders/FloatProviderType; a
net/minecraft/util/valueproviders/IntProvider bdc
	CODEC c
	CONSTANT_OR_DISPATCH_CODEC a
	NON_NEGATIVE_CODEC d
	POSITIVE_CODEC e
	codec (II)Lcom/mojang/serialization/Codec; b
	codec (IILcom/mojang/serialization/Codec;)Lcom/mojang/serialization/Codec; a
	getMaxValue ()I b
	getMinValue ()I a
	getType ()Lnet/minecraft/util/valueproviders/IntProviderType; c
	sample (Lnet/minecraft/util/RandomSource;)I a
net/minecraft/util/valueproviders/IntProviderType bdd
	BIASED_TO_BOTTOM c
	CLAMPED d
	CLAMPED_NORMAL f
	CONSTANT a
	UNIFORM b
	WEIGHTED_LIST e
	register (Ljava/lang/String;Lcom/mojang/serialization/Codec;)Lnet/minecraft/util/valueproviders/IntProviderType; a
net/minecraft/util/valueproviders/MultipliedFloats bde
	values a
	sample (Lnet/minecraft/util/RandomSource;)F a
net/minecraft/util/valueproviders/SampledFloat bdf
	sample (Lnet/minecraft/util/RandomSource;)F a
net/minecraft/util/valueproviders/TrapezoidFloat bdg
	CODEC a
	max d
	min b
	plateau e
	getMaxValue ()F b
	getMinValue ()F a
	getType ()Lnet/minecraft/util/valueproviders/FloatProviderType; c
	of (FFF)Lnet/minecraft/util/valueproviders/TrapezoidFloat; a
	sample (Lnet/minecraft/util/RandomSource;)F a
net/minecraft/util/valueproviders/UniformFloat bdh
	CODEC a
	maxExclusive d
	minInclusive b
	getMaxValue ()F b
	getMinValue ()F a
	getType ()Lnet/minecraft/util/valueproviders/FloatProviderType; c
	of (FF)Lnet/minecraft/util/valueproviders/UniformFloat; b
	sample (Lnet/minecraft/util/RandomSource;)F a
net/minecraft/util/valueproviders/UniformInt bdi
	CODEC a
	maxInclusive f
	minInclusive b
	getMaxValue ()I b
	getMinValue ()I a
	getType ()Lnet/minecraft/util/valueproviders/IntProviderType; c
	of (II)Lnet/minecraft/util/valueproviders/UniformInt; a
	sample (Lnet/minecraft/util/RandomSource;)I a
net/minecraft/util/valueproviders/WeightedListInt bdj
	CODEC a
	distribution b
	maxValue g
	minValue f
	getMaxValue ()I b
	getMinValue ()I a
	getType ()Lnet/minecraft/util/valueproviders/IntProviderType; c
	sample (Lnet/minecraft/util/RandomSource;)I a
net/minecraft/util/worldupdate/WorldUpgrader bdl
	LOGGER a
	REGEX q
	THREAD_FACTORY b
	converted m
	dataFixer h
	dimensions c
	eraseCache e
	finished j
	levelStorage f
	levels d
	overworldDataStorage r
	progress k
	progressMap o
	running i
	skipped n
	status p
	thread g
	totalChunks l
	cancel ()V a
	dimensionProgress (Lnet/minecraft/resources/ResourceKey;)F a
	getAllChunkPos (Lnet/minecraft/resources/ResourceKey;)Ljava/util/List; b
	getConverted ()I f
	getProgress ()F d
	getSkipped ()I g
	getStatus ()Lnet/minecraft/network/chat/Component; h
	getTotalChunks ()I e
	isFinished ()Z b
	levels ()Ljava/util/Set; c
	work ()V i
net/minecraft/world/BossEvent bdn
	color c
	createWorldFog g
	darkenScreen e
	id h
	name a
	overlay d
	playBossMusic f
	progress b
	getColor ()Lnet/minecraft/world/BossEvent$BossBarColor; l
	getId ()Ljava/util/UUID; i
	getName ()Lnet/minecraft/network/chat/Component; j
	getOverlay ()Lnet/minecraft/world/BossEvent$BossBarOverlay; m
	getProgress ()F k
	setColor (Lnet/minecraft/world/BossEvent$BossBarColor;)V a
	setCreateWorldFog (Z)Lnet/minecraft/world/BossEvent; c
	setDarkenScreen (Z)Lnet/minecraft/world/BossEvent; a
	setName (Lnet/minecraft/network/chat/Component;)V a
	setOverlay (Lnet/minecraft/world/BossEvent$BossBarOverlay;)V a
	setPlayBossMusic (Z)Lnet/minecraft/world/BossEvent; b
	setProgress (F)V a
	shouldCreateWorldFog ()Z p
	shouldDarkenScreen ()Z n
	shouldPlayBossMusic ()Z o
net/minecraft/world/BossEvent$BossBarColor bdn$a
	$VALUES j
	BLUE b
	GREEN d
	PINK a
	PURPLE f
	RED c
	WHITE g
	YELLOW e
	formatting i
	name h
	$values ()[Lnet/minecraft/world/BossEvent$BossBarColor; c
	byName (Ljava/lang/String;)Lnet/minecraft/world/BossEvent$BossBarColor; a
	getFormatting ()Lnet/minecraft/ChatFormatting; a
	getName ()Ljava/lang/String; b
net/minecraft/world/BossEvent$BossBarOverlay bdn$b
	$VALUES g
	NOTCHED_10 c
	NOTCHED_12 d
	NOTCHED_20 e
	NOTCHED_6 b
	PROGRESS a
	name f
	$values ()[Lnet/minecraft/world/BossEvent$BossBarOverlay; b
	byName (Ljava/lang/String;)Lnet/minecraft/world/BossEvent$BossBarOverlay; a
	getName ()Ljava/lang/String; a
net/minecraft/world/Clearable bdo
	clearContent ()V a
	tryClear (Ljava/lang/Object;)V a_
net/minecraft/world/CompoundContainer bdp
	container1 c
	container2 d
	canPlaceItem (ILnet/minecraft/world/item/ItemStack;)Z b
	clearContent ()V a
	contains (Lnet/minecraft/world/Container;)Z a
	getContainerSize ()I b
	getItem (I)Lnet/minecraft/world/item/ItemStack; a
	getMaxStackSize ()I ac_
	isEmpty ()Z ab_
	removeItem (II)Lnet/minecraft/world/item/ItemStack; a
	removeItemNoUpdate (I)Lnet/minecraft/world/item/ItemStack; b
	setChanged ()V e
	setItem (ILnet/minecraft/world/item/ItemStack;)V a
	startOpen (Lnet/minecraft/world/entity/player/Player;)V d_
	stillValid (Lnet/minecraft/world/entity/player/Player;)Z a
	stopOpen (Lnet/minecraft/world/entity/player/Player;)V c
net/minecraft/world/Container bdq
	DEFAULT_DISTANCE_LIMIT n_
	LARGE_MAX_STACK_SIZE m_
	canPlaceItem (ILnet/minecraft/world/item/ItemStack;)Z b
	canTakeItem (Lnet/minecraft/world/Container;ILnet/minecraft/world/item/ItemStack;)Z a
	countItem (Lnet/minecraft/world/item/Item;)I a_
	getContainerSize ()I b
	getItem (I)Lnet/minecraft/world/item/ItemStack; a
	getMaxStackSize ()I ac_
	hasAnyMatching (Ljava/util/function/Predicate;)Z a_
	hasAnyOf (Ljava/util/Set;)Z a
	isEmpty ()Z ab_
	removeItem (II)Lnet/minecraft/world/item/ItemStack; a
	removeItemNoUpdate (I)Lnet/minecraft/world/item/ItemStack; b
	setChanged ()V e
	setItem (ILnet/minecraft/world/item/ItemStack;)V a
	startOpen (Lnet/minecraft/world/entity/player/Player;)V d_
	stillValid (Lnet/minecraft/world/entity/player/Player;)Z a
	stillValidBlockEntity (Lnet/minecraft/world/level/block/entity/BlockEntity;Lnet/minecraft/world/entity/player/Player;)Z a
	stillValidBlockEntity (Lnet/minecraft/world/level/block/entity/BlockEntity;Lnet/minecraft/world/entity/player/Player;I)Z a
	stopOpen (Lnet/minecraft/world/entity/player/Player;)V c
net/minecraft/world/ContainerHelper bdr
	clearOrCountMatchingItems (Lnet/minecraft/world/Container;Ljava/util/function/Predicate;IZ)I a
	clearOrCountMatchingItems (Lnet/minecraft/world/item/ItemStack;Ljava/util/function/Predicate;IZ)I a
	loadAllItems (Lnet/minecraft/nbt/CompoundTag;Lnet/minecraft/core/NonNullList;)V b
	removeItem (Ljava/util/List;II)Lnet/minecraft/world/item/ItemStack; a
	saveAllItems (Lnet/minecraft/nbt/CompoundTag;Lnet/minecraft/core/NonNullList;)Lnet/minecraft/nbt/CompoundTag; a
	saveAllItems (Lnet/minecraft/nbt/CompoundTag;Lnet/minecraft/core/NonNullList;Z)Lnet/minecraft/nbt/CompoundTag; a
	takeItem (Ljava/util/List;I)Lnet/minecraft/world/item/ItemStack; a
net/minecraft/world/ContainerListener bds
	containerChanged (Lnet/minecraft/world/Container;)V a
net/minecraft/world/Containers bdt
	dropContents (Lnet/minecraft/world/level/Level;DDDLnet/minecraft/world/Container;)V a
	dropContents (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/NonNullList;)V a
	dropContents (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/Container;)V a
	dropContents (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/Container;)V a
	dropItemStack (Lnet/minecraft/world/level/Level;DDDLnet/minecraft/world/item/ItemStack;)V a
net/minecraft/world/Difficulty bdu
	$VALUES i
	BY_ID f
	CODEC e
	EASY b
	HARD d
	NORMAL c
	PEACEFUL a
	id g
	key h
	$values ()[Lnet/minecraft/world/Difficulty; f
	byId (I)Lnet/minecraft/world/Difficulty; a
	byName (Ljava/lang/String;)Lnet/minecraft/world/Difficulty; a
	getDisplayName ()Lnet/minecraft/network/chat/Component; b
	getId ()I a
	getInfo ()Lnet/minecraft/network/chat/Component; d
	getKey ()Ljava/lang/String; e
	getSerializedName ()Ljava/lang/String; c
net/minecraft/world/DifficultyInstance bdv
	DIFFICULTY_TIME_GLOBAL_OFFSET a
	MAX_DIFFICULTY_TIME_GLOBAL b
	MAX_DIFFICULTY_TIME_LOCAL c
	base d
	effectiveDifficulty e
	calculateDifficulty (Lnet/minecraft/world/Difficulty;JJF)F a
	getDifficulty ()Lnet/minecraft/world/Difficulty; a
	getEffectiveDifficulty ()F b
	getSpecialMultiplier ()F d
	isHard ()Z c
	isHarderThan (F)Z a
net/minecraft/world/InteractionHand bdw
	$VALUES c
	MAIN_HAND a
	OFF_HAND b
	$values ()[Lnet/minecraft/world/InteractionHand; a
net/minecraft/world/InteractionResult bdx
	$VALUES f
	CONSUME b
	CONSUME_PARTIAL c
	FAIL e
	PASS d
	SUCCESS a
	$values ()[Lnet/minecraft/world/InteractionResult; d
	consumesAction ()Z a
	shouldAwardStats ()Z c
	shouldSwing ()Z b
	sidedSuccess (Z)Lnet/minecraft/world/InteractionResult; a
net/minecraft/world/InteractionResultHolder bdy
	object b
	result a
	consume (Ljava/lang/Object;)Lnet/minecraft/world/InteractionResultHolder; b
	fail (Ljava/lang/Object;)Lnet/minecraft/world/InteractionResultHolder; d
	getObject ()Ljava/lang/Object; b
	getResult ()Lnet/minecraft/world/InteractionResult; a
	pass (Ljava/lang/Object;)Lnet/minecraft/world/InteractionResultHolder; c
	sidedSuccess (Ljava/lang/Object;Z)Lnet/minecraft/world/InteractionResultHolder; a
	success (Ljava/lang/Object;)Lnet/minecraft/world/InteractionResultHolder; a
net/minecraft/world/LockCode bdz
	NO_LOCK a
	TAG_LOCK b
	key c
	addToTag (Lnet/minecraft/nbt/CompoundTag;)V a
	fromTag (Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/world/LockCode; b
	unlocksWith (Lnet/minecraft/world/item/ItemStack;)Z a
net/minecraft/world/MenuProvider bea
	getDisplayName ()Lnet/minecraft/network/chat/Component; H_
net/minecraft/world/Nameable beb
	getCustomName ()Lnet/minecraft/network/chat/Component; ab
	getDisplayName ()Lnet/minecraft/network/chat/Component; H_
	getName ()Lnet/minecraft/network/chat/Component; Z
	hasCustomName ()Z aa
net/minecraft/world/RandomSequence bec
	CODEC a
	source b
	createSequence (JLnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/world/level/levelgen/XoroshiroRandomSource; a
	random ()Lnet/minecraft/util/RandomSource; a
	seedForKey (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/world/level/levelgen/RandomSupport$Seed128bit; a
net/minecraft/world/RandomSequences bed
	LOGGER a
	seed b
	sequences c
	get (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/util/RandomSource; a
	load (JLnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/world/RandomSequences; a
	save (Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/nbt/CompoundTag; a
net/minecraft/world/SimpleContainer bee
	items d
	listeners e
	size c
	addItem (Lnet/minecraft/world/item/ItemStack;)Lnet/minecraft/world/item/ItemStack; a
	addListener (Lnet/minecraft/world/ContainerListener;)V a
	canAddItem (Lnet/minecraft/world/item/ItemStack;)Z b
	clearContent ()V a
	createTag ()Lnet/minecraft/nbt/ListTag; g
	fillStackedContents (Lnet/minecraft/world/entity/player/StackedContents;)V a
	fromTag (Lnet/minecraft/nbt/ListTag;)V a
	getContainerSize ()I b
	getItem (I)Lnet/minecraft/world/item/ItemStack; a
	isEmpty ()Z ab_
	moveItemToEmptySlots (Lnet/minecraft/world/item/ItemStack;)V c
	moveItemToOccupiedSlotsWithSameType (Lnet/minecraft/world/item/ItemStack;)V d
	moveItemsBetweenStacks (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/item/ItemStack;)V a
	removeAllItems ()Ljava/util/List; f
	removeItem (II)Lnet/minecraft/world/item/ItemStack; a
	removeItemNoUpdate (I)Lnet/minecraft/world/item/ItemStack; b
	removeItemType (Lnet/minecraft/world/item/Item;I)Lnet/minecraft/world/item/ItemStack; a
	removeListener (Lnet/minecraft/world/ContainerListener;)V b
	setChanged ()V e
	setItem (ILnet/minecraft/world/item/ItemStack;)V a
	stillValid (Lnet/minecraft/world/entity/player/Player;)Z a
net/minecraft/world/SimpleMenuProvider bef
	menuConstructor b
	title a
	getDisplayName ()Lnet/minecraft/network/chat/Component; H_
net/minecraft/world/WorldlyContainer beg
	canPlaceItemThroughFace (ILnet/minecraft/world/item/ItemStack;Lnet/minecraft/core/Direction;)Z a
	canTakeItemThroughFace (ILnet/minecraft/world/item/ItemStack;Lnet/minecraft/core/Direction;)Z b
	getSlotsForFace (Lnet/minecraft/core/Direction;)[I a
net/minecraft/world/WorldlyContainerHolder beh
	getContainer (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/WorldlyContainer; a
net/minecraft/world/damagesource/CombatEntry bei
	damage b
	fallDistance d
	fallLocation c
	source a
	damage ()F b
	fallDistance ()F d
	fallLocation ()Lnet/minecraft/world/damagesource/FallLocation; c
	source ()Lnet/minecraft/world/damagesource/DamageSource; a
net/minecraft/world/damagesource/CombatRules bej
	ARMOR_PROTECTION_DIVIDER b
	BASE_ARMOR_TOUGHNESS c
	MAX_ARMOR a
	MIN_ARMOR_RATIO d
	NUM_ARMOR_ITEMS e
	getDamageAfterAbsorb (FFF)F a
	getDamageAfterMagicAbsorb (FF)F a
net/minecraft/world/damagesource/CombatTracker bek
	INTENTIONAL_GAME_DESIGN_STYLE c
	RESET_COMBAT_STATUS_TIME b
	RESET_DAMAGE_STATUS_TIME a
	combatEndTime h
	combatStartTime g
	entries d
	inCombat i
	lastDamageTime f
	mob e
	takingDamage j
	getCombatDuration ()I b
	getDeathMessage ()Lnet/minecraft/network/chat/Component; a
	getDisplayName (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/network/chat/Component; a
	getFallMessage (Lnet/minecraft/world/damagesource/CombatEntry;Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/network/chat/Component; a
	getMessageForAssistedFall (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/network/chat/Component;Ljava/lang/String;Ljava/lang/String;)Lnet/minecraft/network/chat/Component; a
	getMostSignificantFall ()Lnet/minecraft/world/damagesource/CombatEntry; d
	recheckStatus ()V c
	recordDamage (Lnet/minecraft/world/damagesource/DamageSource;F)V a
	shouldEnterCombat (Lnet/minecraft/world/damagesource/DamageSource;)Z a
net/minecraft/world/damagesource/DamageEffects bel
	$VALUES j
	BURNING d
	CODEC g
	DROWNING c
	FREEZING f
	HURT a
	POKING e
	THORNS b
	id h
	sound i
	$values ()[Lnet/minecraft/world/damagesource/DamageEffects; b
	getSerializedName ()Ljava/lang/String; c
	sound ()Lnet/minecraft/sounds/SoundEvent; a
net/minecraft/world/damagesource/DamageScaling bem
	$VALUES f
	ALWAYS c
	CODEC d
	NEVER a
	WHEN_CAUSED_BY_LIVING_NON_PLAYER b
	id e
	$values ()[Lnet/minecraft/world/damagesource/DamageScaling; a
	getSerializedName ()Ljava/lang/String; c
net/minecraft/world/damagesource/DamageSource ben
	causingEntity b
	damageSourcePosition d
	directEntity c
	type a
	getDirectEntity ()Lnet/minecraft/world/entity/Entity; c
	getEntity ()Lnet/minecraft/world/entity/Entity; d
	getFoodExhaustion ()F a
	getLocalizedDeathMessage (Lnet/minecraft/world/entity/LivingEntity;)Lnet/minecraft/network/chat/Component; a
	getMsgId ()Ljava/lang/String; e
	getSourcePosition ()Lnet/minecraft/world/phys/Vec3; h
	is (Lnet/minecraft/resources/ResourceKey;)Z a
	is (Lnet/minecraft/tags/TagKey;)Z a
	isCreativePlayer ()Z g
	isIndirect ()Z b
	scalesWithDifficulty ()Z f
	sourcePositionRaw ()Lnet/minecraft/world/phys/Vec3; i
	type ()Lnet/minecraft/world/damagesource/DamageType; j
	typeHolder ()Lnet/minecraft/core/Holder; k
net/minecraft/world/damagesource/DamageSources beo
	cactus k
	cramming h
	damageTypes a
	dragonBreath r
	drown i
	dryOut s
	fall l
	fellOutOfWorld n
	flyIntoWall m
	freeze u
	generic o
	genericKill x
	hotFloor f
	inFire b
	inWall g
	lava e
	lightningBolt c
	magic p
	onFire d
	outsideBorder w
	stalagmite v
	starve j
	sweetBerryBush t
	wither q
	anvil (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/world/damagesource/DamageSource; b
	arrow (Lnet/minecraft/world/entity/projectile/AbstractArrow;Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/world/damagesource/DamageSource; a
	badRespawnPointExplosion (Lnet/minecraft/world/phys/Vec3;)Lnet/minecraft/world/damagesource/DamageSource; a
	cactus ()Lnet/minecraft/world/damagesource/DamageSource; j
	cramming ()Lnet/minecraft/world/damagesource/DamageSource; g
	dragonBreath ()Lnet/minecraft/world/damagesource/DamageSource; q
	drown ()Lnet/minecraft/world/damagesource/DamageSource; h
	dryOut ()Lnet/minecraft/world/damagesource/DamageSource; r
	explosion (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/world/damagesource/DamageSource; d
	explosion (Lnet/minecraft/world/level/Explosion;)Lnet/minecraft/world/damagesource/DamageSource; a
	fall ()Lnet/minecraft/world/damagesource/DamageSource; k
	fallingBlock (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/world/damagesource/DamageSource; a
	fallingStalactite (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/world/damagesource/DamageSource; c
	fellOutOfWorld ()Lnet/minecraft/world/damagesource/DamageSource; m
	fireball (Lnet/minecraft/world/entity/projectile/Fireball;Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/world/damagesource/DamageSource; a
	fireworks (Lnet/minecraft/world/entity/projectile/FireworkRocketEntity;Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/world/damagesource/DamageSource; a
	flyIntoWall ()Lnet/minecraft/world/damagesource/DamageSource; l
	freeze ()Lnet/minecraft/world/damagesource/DamageSource; t
	generic ()Lnet/minecraft/world/damagesource/DamageSource; n
	genericKill ()Lnet/minecraft/world/damagesource/DamageSource; w
	hotFloor ()Lnet/minecraft/world/damagesource/DamageSource; e
	inFire ()Lnet/minecraft/world/damagesource/DamageSource; a
	inWall ()Lnet/minecraft/world/damagesource/DamageSource; f
	indirectMagic (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/world/damagesource/DamageSource; c
	lava ()Lnet/minecraft/world/damagesource/DamageSource; d
	lightningBolt ()Lnet/minecraft/world/damagesource/DamageSource; b
	magic ()Lnet/minecraft/world/damagesource/DamageSource; o
	mobAttack (Lnet/minecraft/world/entity/LivingEntity;)Lnet/minecraft/world/damagesource/DamageSource; b
	mobProjectile (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/entity/LivingEntity;)Lnet/minecraft/world/damagesource/DamageSource; a
	noAggroMobAttack (Lnet/minecraft/world/entity/LivingEntity;)Lnet/minecraft/world/damagesource/DamageSource; c
	onFire ()Lnet/minecraft/world/damagesource/DamageSource; c
	outOfBorder ()Lnet/minecraft/world/damagesource/DamageSource; v
	playerAttack (Lnet/minecraft/world/entity/player/Player;)Lnet/minecraft/world/damagesource/DamageSource; a
	sonicBoom (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/world/damagesource/DamageSource; e
	source (Lnet/minecraft/resources/ResourceKey;)Lnet/minecraft/world/damagesource/DamageSource; a
	source (Lnet/minecraft/resources/ResourceKey;Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/world/damagesource/DamageSource; a
	source (Lnet/minecraft/resources/ResourceKey;Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/world/damagesource/DamageSource; a
	stalagmite ()Lnet/minecraft/world/damagesource/DamageSource; u
	starve ()Lnet/minecraft/world/damagesource/DamageSource; i
	sting (Lnet/minecraft/world/entity/LivingEntity;)Lnet/minecraft/world/damagesource/DamageSource; a
	sweetBerryBush ()Lnet/minecraft/world/damagesource/DamageSource; s
	thorns (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/world/damagesource/DamageSource; d
	thrown (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/world/damagesource/DamageSource; b
	trident (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/world/damagesource/DamageSource; a
	wither ()Lnet/minecraft/world/damagesource/DamageSource; p
	witherSkull (Lnet/minecraft/world/entity/projectile/WitherSkull;Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/world/damagesource/DamageSource; a
net/minecraft/world/damagesource/DamageType bep
	CODEC a
	deathMessageType f
	effects e
	exhaustion d
	msgId b
	scaling c
	deathMessageType ()Lnet/minecraft/world/damagesource/DeathMessageType; e
	effects ()Lnet/minecraft/world/damagesource/DamageEffects; d
	exhaustion ()F c
	msgId ()Ljava/lang/String; a
	scaling ()Lnet/minecraft/world/damagesource/DamageScaling; b
net/minecraft/world/damagesource/DamageTypes beq
	ARROW C
	BAD_RESPAWN_POINT P
	CACTUS j
	CRAMMING g
	DRAGON_BREATH q
	DROWN h
	DRY_OUT r
	EXPLOSION M
	FALL k
	FALLING_ANVIL w
	FALLING_BLOCK v
	FALLING_STALACTITE x
	FELL_OUT_OF_WORLD m
	FIREBALL G
	FIREWORKS F
	FLY_INTO_WALL l
	FREEZE t
	GENERIC n
	GENERIC_KILL R
	HOT_FLOOR e
	INDIRECT_MAGIC K
	IN_FIRE a
	IN_WALL f
	LAVA d
	LIGHTNING_BOLT b
	MAGIC o
	MOB_ATTACK z
	MOB_ATTACK_NO_AGGRO A
	MOB_PROJECTILE E
	ON_FIRE c
	OUTSIDE_BORDER Q
	PLAYER_ATTACK B
	PLAYER_EXPLOSION N
	SONIC_BOOM O
	STALAGMITE u
	STARVE i
	STING y
	SWEET_BERRY_BUSH s
	THORNS L
	THROWN J
	TRIDENT D
	UNATTRIBUTED_FIREBALL H
	WITHER p
	WITHER_SKULL I
	bootstrap (Lnet/minecraft/data/worldgen/BootstapContext;)V a
net/minecraft/world/damagesource/DeathMessageType ber
	$VALUES f
	CODEC d
	DEFAULT a
	FALL_VARIANTS b
	INTENTIONAL_GAME_DESIGN c
	id e
	$values ()[Lnet/minecraft/world/damagesource/DeathMessageType; a
	getSerializedName ()Ljava/lang/String; c
net/minecraft/world/damagesource/FallLocation bes
	GENERIC a
	LADDER b
	OTHER_CLIMBABLE g
	SCAFFOLDING f
	TWISTING_VINES e
	VINES c
	WATER h
	WEEPING_VINES d
	id i
	blockToFallLocation (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/damagesource/FallLocation; a
	getCurrentFallLocation (Lnet/minecraft/world/entity/LivingEntity;)Lnet/minecraft/world/damagesource/FallLocation; a
	id ()Ljava/lang/String; b
	languageKey ()Ljava/lang/String; a
net/minecraft/world/effect/AbsoptionMobEffect beu
	addAttributeModifiers (Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/entity/ai/attributes/AttributeMap;I)V b
	removeAttributeModifiers (Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/entity/ai/attributes/AttributeMap;I)V a
net/minecraft/world/effect/AttackDamageMobEffect bev
	multiplier a
	getAttributeModifierValue (ILnet/minecraft/world/entity/ai/attributes/AttributeModifier;)D a
net/minecraft/world/effect/HealthBoostMobEffect bew
	removeAttributeModifiers (Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/entity/ai/attributes/AttributeMap;I)V a
net/minecraft/world/effect/InstantenousMobEffect bex
	isDurationEffectTick (II)Z a
	isInstantenous ()Z a
net/minecraft/world/effect/MobEffect bey
	attributeModifiers a
	category b
	color c
	descriptionId d
	factorDataFactory e
	addAttributeModifier (Lnet/minecraft/world/entity/ai/attributes/Attribute;Ljava/lang/String;DLnet/minecraft/world/entity/ai/attributes/AttributeModifier$Operation;)Lnet/minecraft/world/effect/MobEffect; a
	addAttributeModifiers (Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/entity/ai/attributes/AttributeMap;I)V b
	applyEffectTick (Lnet/minecraft/world/entity/LivingEntity;I)V a
	applyInstantenousEffect (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/entity/LivingEntity;ID)V a
	byId (I)Lnet/minecraft/world/effect/MobEffect; a
	createFactorData ()Ljava/util/Optional; b
	getAttributeModifierValue (ILnet/minecraft/world/entity/ai/attributes/AttributeModifier;)D a
	getAttributeModifiers ()Ljava/util/Map; h
	getCategory ()Lnet/minecraft/world/effect/MobEffectCategory; f
	getColor ()I g
	getDescriptionId ()Ljava/lang/String; d
	getDisplayName ()Lnet/minecraft/network/chat/Component; e
	getId (Lnet/minecraft/world/effect/MobEffect;)I a
	getIdFromNullable (Lnet/minecraft/world/effect/MobEffect;)I b
	getOrCreateDescriptionId ()Ljava/lang/String; c
	isBeneficial ()Z i
	isDurationEffectTick (II)Z a
	isInstantenous ()Z a
	removeAttributeModifiers (Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/entity/ai/attributes/AttributeMap;I)V a
	setFactorDataFactory (Ljava/util/function/Supplier;)Lnet/minecraft/world/effect/MobEffect; a
net/minecraft/world/effect/MobEffectCategory bez
	$VALUES e
	BENEFICIAL a
	HARMFUL b
	NEUTRAL c
	tooltipFormatting d
	$values ()[Lnet/minecraft/world/effect/MobEffectCategory; b
	getTooltipFormatting ()Lnet/minecraft/ChatFormatting; a
net/minecraft/world/effect/MobEffectInstance bfa
	INFINITE_DURATION a
	LOGGER b
	ambient f
	amplifier e
	duration d
	effect c
	factorData j
	hiddenEffect i
	showIcon h
	visible g
	applyEffect (Lnet/minecraft/world/entity/LivingEntity;)V a
	compareTo (Lnet/minecraft/world/effect/MobEffectInstance;)I c
	describeDuration ()Ljava/lang/String; l
	endsWithin (I)Z a
	getAmplifier ()I e
	getDescriptionId ()Ljava/lang/String; i
	getDuration ()I d
	getEffect ()Lnet/minecraft/world/effect/MobEffect; c
	getFactorData ()Ljava/util/Optional; a
	hasRemainingDuration ()Z j
	isAmbient ()Z f
	isInfiniteDuration ()Z b
	isShorterDurationThan (Lnet/minecraft/world/effect/MobEffectInstance;)Z d
	isVisible ()Z g
	load (Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/world/effect/MobEffectInstance; b
	loadSpecifiedEffect (Lnet/minecraft/world/effect/MobEffect;Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/world/effect/MobEffectInstance; a
	mapDuration (Lit/unimi/dsi/fastutil/ints/Int2IntFunction;)I a
	save (Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/nbt/CompoundTag; a
	setDetailsFrom (Lnet/minecraft/world/effect/MobEffectInstance;)V a
	showIcon ()Z h
	tick (Lnet/minecraft/world/entity/LivingEntity;Ljava/lang/Runnable;)Z a
	tickDownDuration ()I k
	update (Lnet/minecraft/world/effect/MobEffectInstance;)Z b
	writeDetailsTo (Lnet/minecraft/nbt/CompoundTag;)V c
net/minecraft/world/effect/MobEffectInstance$FactorData bfa$a
	CODEC a
	factorCurrent e
	factorPreviousFrame g
	factorStart c
	factorTarget d
	hadEffectLastTick h
	paddingDuration b
	ticksActive f
	getFactor (Lnet/minecraft/world/entity/LivingEntity;F)F a
	tick (Lnet/minecraft/world/effect/MobEffectInstance;)V a
net/minecraft/world/effect/MobEffectUtil bfb
	addEffectToPlayersAround (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/phys/Vec3;DLnet/minecraft/world/effect/MobEffectInstance;I)Ljava/util/List; a
	formatDuration (Lnet/minecraft/world/effect/MobEffectInstance;F)Lnet/minecraft/network/chat/Component; a
	getDigSpeedAmplification (Lnet/minecraft/world/entity/LivingEntity;)I b
	hasDigSpeed (Lnet/minecraft/world/entity/LivingEntity;)Z a
	hasWaterBreathing (Lnet/minecraft/world/entity/LivingEntity;)Z c
net/minecraft/world/effect/MobEffects bfc
	ABSORPTION v
	BAD_OMEN E
	BLINDNESS o
	CONDUIT_POWER C
	CONFUSION i
	DAMAGE_BOOST e
	DAMAGE_RESISTANCE k
	DARKNESS G
	DARKNESS_EFFECT_FACTOR_PADDING_DURATION_TICKS H
	DIG_SLOWDOWN d
	DIG_SPEED c
	DOLPHINS_GRACE D
	FIRE_RESISTANCE l
	GLOWING x
	HARM g
	HEAL f
	HEALTH_BOOST u
	HERO_OF_THE_VILLAGE F
	HUNGER q
	INVISIBILITY n
	JUMP h
	LEVITATION y
	LUCK z
	MOVEMENT_SLOWDOWN b
	MOVEMENT_SPEED a
	NIGHT_VISION p
	POISON s
	REGENERATION j
	SATURATION w
	SLOW_FALLING B
	UNLUCK A
	WATER_BREATHING m
	WEAKNESS r
	WITHER t
	register (ILjava/lang/String;Lnet/minecraft/world/effect/MobEffect;)Lnet/minecraft/world/effect/MobEffect; a
net/minecraft/world/entity/AgeableMob bfe
	BABY_START_AGE b
	DATA_BABY_ID bT
	FORCED_AGE_PARTICLE_TICKS bU
	age c
	forcedAge d
	forcedAgeTimer e
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	ageBoundaryReached ()V m
	ageUp (I)V b_
	ageUp (IZ)V a
	aiStep ()V b_
	canBreed ()Z P_
	defineSynchedData ()V a_
	finalizeSpawn (Lnet/minecraft/world/level/ServerLevelAccessor;Lnet/minecraft/world/DifficultyInstance;Lnet/minecraft/world/entity/MobSpawnType;Lnet/minecraft/world/entity/SpawnGroupData;Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/world/entity/SpawnGroupData; a
	getAge ()I h
	getBreedOffspring (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/AgeableMob;)Lnet/minecraft/world/entity/AgeableMob; a
	getSpeedUpSecondsWhenFeeding (I)I d_
	isBaby ()Z h_
	onSyncedDataUpdated (Lnet/minecraft/network/syncher/EntityDataAccessor;)V a
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	setAge (I)V c_
	setBaby (Z)V a
net/minecraft/world/entity/AgeableMob$AgeableMobGroupData bfe$a
	babySpawnChance c
	groupSize a
	shouldSpawnBaby b
	getBabySpawnChance ()F d
	getGroupSize ()I a
	increaseGroupSizeByOne ()V b
	isShouldSpawnBaby ()Z c
net/minecraft/world/entity/AnimationState bff
	STOPPED a
	accumulatedTime c
	lastTime b
	animateWhen (ZI)V a
	getAccumulatedTime ()J b
	ifStarted (Ljava/util/function/Consumer;)V a
	isStarted ()Z c
	start (I)V a
	startIfStopped (I)V b
	stop ()V a
	updateTime (FF)V a
net/minecraft/world/entity/AreaEffectCloud bfg
	DATA_COLOR g
	DATA_PARTICLE i
	DATA_RADIUS f
	DATA_WAITING h
	DEFAULT_RADIUS l
	DEFAULT_WIDTH b
	HEIGHT c
	LOGGER d
	MAX_RADIUS j
	MINIMAL_RADIUS k
	TIME_BETWEEN_APPLICATIONS e
	duration p
	durationOnUse t
	effects n
	fixedColor s
	owner aE
	ownerUUID aF
	potion m
	radiusOnUse u
	radiusPerTick aD
	reapplicationDelay r
	victims o
	waitTime q
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	addEffect (Lnet/minecraft/world/effect/MobEffectInstance;)V a
	defineSynchedData ()V a_
	getColor ()I i
	getDimensions (Lnet/minecraft/world/entity/Pose;)Lnet/minecraft/world/entity/EntityDimensions; a
	getDuration ()I m
	getDurationOnUse ()I q
	getOwner ()Lnet/minecraft/world/entity/Entity; v
	getOwner ()Lnet/minecraft/world/entity/LivingEntity; s
	getParticle ()Lnet/minecraft/core/particles/ParticleOptions; j
	getPistonPushReaction ()Lnet/minecraft/world/level/material/PushReaction; l_
	getPotion ()Lnet/minecraft/world/item/alchemy/Potion; t
	getRadius ()F h
	getRadiusOnUse ()F o
	getRadiusPerTick ()F p
	getWaitTime ()I r
	isWaiting ()Z k
	onSyncedDataUpdated (Lnet/minecraft/network/syncher/EntityDataAccessor;)V a
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	refreshDimensions ()V d_
	setDuration (I)V b
	setDurationOnUse (I)V c
	setFixedColor (I)V a
	setOwner (Lnet/minecraft/world/entity/LivingEntity;)V a
	setParticle (Lnet/minecraft/core/particles/ParticleOptions;)V a
	setPotion (Lnet/minecraft/world/item/alchemy/Potion;)V a
	setRadius (F)V a
	setRadiusOnUse (F)V b
	setRadiusPerTick (F)V c
	setWaitTime (I)V d
	setWaiting (Z)V a
	tick ()V l
	updateColor ()V w
net/minecraft/world/entity/Attackable bfh
	getLastAttacker ()Lnet/minecraft/world/entity/LivingEntity; M_
net/minecraft/world/entity/Display bfi
	DATA_BILLBOARD_RENDER_CONSTRAINTS_ID aD
	DATA_BRIGHTNESS_OVERRIDE_ID aE
	DATA_GLOW_COLOR_OVERRIDE_ID aK
	DATA_HEIGHT_ID aJ
	DATA_INTERPOLATION_DURATION_ID q
	DATA_INTERPOLATION_START_DELTA_TICKS_ID p
	DATA_LEFT_ROTATION_ID t
	DATA_RIGHT_ROTATION_ID u
	DATA_SCALE_ID s
	DATA_SHADOW_RADIUS_ID aG
	DATA_SHADOW_STRENGTH_ID aH
	DATA_TRANSLATION_ID r
	DATA_VIEW_RANGE_ID aF
	DATA_WIDTH_ID aI
	INITIAL_SHADOW_RADIUS aM
	INITIAL_SHADOW_STRENGTH aN
	LOGGER o
	NO_BRIGHTNESS_OVERRIDE b
	NO_GLOW_COLOR_OVERRIDE aO
	RENDER_STATE_IDS aL
	TAG_BILLBOARD f
	TAG_BRIGHTNESS g
	TAG_GLOW_COLOR_OVERRIDE m
	TAG_HEIGHT l
	TAG_INTERPOLATION_DURATION c
	TAG_SHADOW_RADIUS i
	TAG_SHADOW_STRENGTH j
	TAG_START_INTERPOLATION d
	TAG_TRANSFORMATION e
	TAG_VIEW_RANGE h
	TAG_WIDTH k
	cullingBoundingBox aT
	interpolationDuration aR
	interpolationStartClientTick aQ
	lastProgress aS
	orientation aP
	renderState aW
	updateInterpolationDuration aV
	updateRenderState n
	updateStartTick aU
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	calculateInterpolationProgress (F)F a
	createFreshRenderState ()Lnet/minecraft/world/entity/Display$RenderState; D
	createInterpolatedRenderState (Lnet/minecraft/world/entity/Display$RenderState;F)Lnet/minecraft/world/entity/Display$RenderState; a
	createTransformation (Lnet/minecraft/network/syncher/SynchedEntityData;)Lcom/mojang/math/Transformation; a
	defineSynchedData ()V a_
	getAddEntityPacket ()Lnet/minecraft/network/protocol/Packet; S
	getBillboardConstraints ()Lnet/minecraft/world/entity/Display$BillboardConstraints; q
	getBoundingBoxForCulling ()Lnet/minecraft/world/phys/AABB; j_
	getBrightnessOverride ()Lnet/minecraft/util/Brightness; r
	getGlowColorOverride ()I y
	getHeight ()F z
	getInterpolationDelay ()I p
	getInterpolationDuration ()I o
	getPackedBrightnessOverride ()I s
	getPistonPushReaction ()Lnet/minecraft/world/level/material/PushReaction; l_
	getShadowRadius ()F v
	getShadowStrength ()F w
	getTeamColor ()I k_
	getViewRange ()F t
	getWidth ()F x
	isIgnoringBlockTriggers ()Z c_
	onSyncedDataUpdated (Lnet/minecraft/network/syncher/EntityDataAccessor;)V a
	orientation ()Lorg/joml/Quaternionf; j
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	renderState ()Lnet/minecraft/world/entity/Display$RenderState; k
	setBillboardConstraints (Lnet/minecraft/world/entity/Display$BillboardConstraints;)V a
	setBrightnessOverride (Lnet/minecraft/util/Brightness;)V a
	setGlowColorOverride (I)V d
	setHeight (F)V w
	setInterpolationDelay (I)V c
	setInterpolationDuration (I)V b
	setPos (DDD)V e
	setShadowRadius (F)V t
	setShadowStrength (F)V u
	setTransformation (Lcom/mojang/math/Transformation;)V a
	setViewRange (F)V s
	setWidth (F)V v
	setXRot (F)V b_
	setYRot (F)V a_
	shouldRenderAtSqrDistance (D)Z a
	tick ()V l
	updateCulling ()V A
	updateOrientation ()V C
	updateRenderSubState (ZF)V a
net/minecraft/world/entity/Display$BillboardConstraints bfi$a
	$VALUES i
	BY_ID f
	CENTER d
	CODEC e
	FIXED a
	HORIZONTAL c
	VERTICAL b
	id g
	name h
	$values ()[Lnet/minecraft/world/entity/Display$BillboardConstraints; b
	getId ()B a
	getSerializedName ()Ljava/lang/String; c
net/minecraft/world/entity/Display$BlockDisplay bfi$b
	DATA_BLOCK_STATE_ID p
	TAG_BLOCK_STATE o
	blockRenderState q
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	blockRenderState ()Lnet/minecraft/world/entity/Display$BlockDisplay$BlockRenderState; o
	defineSynchedData ()V a_
	getBlockState ()Lnet/minecraft/world/level/block/state/BlockState; p
	onSyncedDataUpdated (Lnet/minecraft/network/syncher/EntityDataAccessor;)V a
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	setBlockState (Lnet/minecraft/world/level/block/state/BlockState;)V c
	updateRenderSubState (ZF)V a
net/minecraft/world/entity/Display$BlockDisplay$BlockRenderState bfi$b$a
	blockState a
	blockState ()Lnet/minecraft/world/level/block/state/BlockState; a
net/minecraft/world/entity/Display$ColorInterpolator bfi$c
	current b
	previous a
	current ()I b
	previous ()I a
net/minecraft/world/entity/Display$FloatInterpolator bfi$d
net/minecraft/world/entity/Display$GenericInterpolator bfi$e
net/minecraft/world/entity/Display$IntInterpolator bfi$f
net/minecraft/world/entity/Display$ItemDisplay bfi$g
	DATA_ITEM_DISPLAY_ID r
	DATA_ITEM_STACK_ID q
	TAG_ITEM o
	TAG_ITEM_DISPLAY p
	itemRenderState t
	slot s
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	defineSynchedData ()V a_
	getItemStack ()Lnet/minecraft/world/item/ItemStack; p
	getItemTransform ()Lnet/minecraft/world/item/ItemDisplayContext; q
	getSlot (I)Lnet/minecraft/world/entity/SlotAccess; a_
	itemRenderState ()Lnet/minecraft/world/entity/Display$ItemDisplay$ItemRenderState; o
	onSyncedDataUpdated (Lnet/minecraft/network/syncher/EntityDataAccessor;)V a
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	setItemStack (Lnet/minecraft/world/item/ItemStack;)V a
	setItemTransform (Lnet/minecraft/world/item/ItemDisplayContext;)V a
	updateRenderSubState (ZF)V a
net/minecraft/world/entity/Display$ItemDisplay$ItemRenderState bfi$g$a
	itemStack a
	itemTransform b
	itemStack ()Lnet/minecraft/world/item/ItemStack; a
	itemTransform ()Lnet/minecraft/world/item/ItemDisplayContext; b
net/minecraft/world/entity/Display$LinearFloatInterpolator bfi$h
	current b
	previous a
	current ()F b
	previous ()F a
net/minecraft/world/entity/Display$LinearIntInterpolator bfi$i
	current b
	previous a
	current ()I b
	previous ()I a
net/minecraft/world/entity/Display$RenderState bfi$j
	billboardConstraints b
	brightnessOverride c
	glowColorOverride f
	shadowRadius d
	shadowStrength e
	transformation a
	billboardConstraints ()Lnet/minecraft/world/entity/Display$BillboardConstraints; b
	brightnessOverride ()I c
	glowColorOverride ()I f
	shadowRadius ()Lnet/minecraft/world/entity/Display$FloatInterpolator; d
	shadowStrength ()Lnet/minecraft/world/entity/Display$FloatInterpolator; e
	transformation ()Lnet/minecraft/world/entity/Display$GenericInterpolator; a
net/minecraft/world/entity/Display$TextDisplay bfi$k
	DATA_BACKGROUND_COLOR_ID aN
	DATA_LINE_WIDTH_ID aM
	DATA_STYLE_FLAGS_ID aP
	DATA_TEXT_ID aL
	DATA_TEXT_OPACITY_ID aO
	FLAG_ALIGN_LEFT s
	FLAG_ALIGN_RIGHT t
	FLAG_SEE_THROUGH q
	FLAG_SHADOW p
	FLAG_USE_DEFAULT_BACKGROUND r
	INITIAL_BACKGROUND u
	INITIAL_TEXT_OPACITY aK
	TAG_ALIGNMENT aJ
	TAG_BACKGROUND_COLOR aF
	TAG_LINE_WIDTH aD
	TAG_SEE_THROUGH aH
	TAG_SHADOW aG
	TAG_TEXT o
	TAG_TEXT_OPACITY aE
	TAG_USE_DEFAULT_BACKGROUND aI
	TEXT_RENDER_STATE_IDS aQ
	clientDisplayCache aR
	textRenderState aS
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	cacheDisplay (Lnet/minecraft/world/entity/Display$TextDisplay$LineSplitter;)Lnet/minecraft/world/entity/Display$TextDisplay$CachedInfo; a
	createFreshTextRenderState ()Lnet/minecraft/world/entity/Display$TextDisplay$TextRenderState; v
	createInterpolatedTextRenderState (Lnet/minecraft/world/entity/Display$TextDisplay$TextRenderState;F)Lnet/minecraft/world/entity/Display$TextDisplay$TextRenderState; a
	defineSynchedData ()V a_
	getAlign (B)Lnet/minecraft/world/entity/Display$TextDisplay$Align; a
	getBackgroundColor ()I s
	getFlags ()B t
	getLineWidth ()I q
	getText ()Lnet/minecraft/network/chat/Component; p
	getTextOpacity ()B r
	loadFlag (BLnet/minecraft/nbt/CompoundTag;Ljava/lang/String;B)B a
	onSyncedDataUpdated (Lnet/minecraft/network/syncher/EntityDataAccessor;)V a
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	setBackgroundColor (I)V c
	setFlags (B)V d
	setLineWidth (I)V b
	setText (Lnet/minecraft/network/chat/Component;)V c
	setTextOpacity (B)V c
	storeFlag (BLnet/minecraft/nbt/CompoundTag;Ljava/lang/String;B)V b
	textRenderState ()Lnet/minecraft/world/entity/Display$TextDisplay$TextRenderState; o
	updateRenderSubState (ZF)V a
net/minecraft/world/entity/Display$TextDisplay$Align bfi$k$a
	$VALUES f
	CENTER a
	CODEC d
	LEFT b
	RIGHT c
	name e
	$values ()[Lnet/minecraft/world/entity/Display$TextDisplay$Align; a
	getSerializedName ()Ljava/lang/String; c
net/minecraft/world/entity/Display$TextDisplay$CachedInfo bfi$k$b
	lines a
	width b
	lines ()Ljava/util/List; a
	width ()I b
net/minecraft/world/entity/Display$TextDisplay$CachedLine bfi$k$c
	contents a
	width b
	contents ()Lnet/minecraft/util/FormattedCharSequence; a
	width ()I b
net/minecraft/world/entity/Display$TextDisplay$LineSplitter bfi$k$d
net/minecraft/world/entity/Display$TextDisplay$TextRenderState bfi$k$e
	backgroundColor d
	flags e
	lineWidth b
	text a
	textOpacity c
	backgroundColor ()Lnet/minecraft/world/entity/Display$IntInterpolator; d
	flags ()B e
	lineWidth ()I b
	text ()Lnet/minecraft/network/chat/Component; a
	textOpacity ()Lnet/minecraft/world/entity/Display$IntInterpolator; c
net/minecraft/world/entity/Display$TransformationInterpolator bfi$l
	current b
	previous a
	current ()Lcom/mojang/math/Transformation; b
	get (F)Lcom/mojang/math/Transformation; a
	previous ()Lcom/mojang/math/Transformation; a
net/minecraft/world/entity/Entity bfj
	BASE_TICKS_REQUIRED_TO_FREEZE E
	BOARDING_COOLDOWN x
	BREATHING_DISTANCE_BELOW_EYES D
	DATA_AIR_SUPPLY_ID aT
	DATA_CUSTOM_NAME aU
	DATA_CUSTOM_NAME_VISIBLE aV
	DATA_NO_GRAVITY aX
	DATA_POSE ar
	DATA_SHARED_FLAGS_ID an
	DATA_SILENT aW
	DATA_TICKS_FROZEN aY
	DEFAULT_BB_HEIGHT V
	DEFAULT_BB_WIDTH U
	DELTA_AFFECTED_BY_BLOCKS_BELOW_0_2 A
	DELTA_AFFECTED_BY_BLOCKS_BELOW_0_5 B
	DELTA_AFFECTED_BY_BLOCKS_BELOW_1_0 C
	EMPTY_LIST e
	ENTITY_COUNTER d
	FLAG_FALL_FLYING aq
	FLAG_GLOWING ap
	FLAG_INVISIBLE aS
	FLAG_ONFIRE ao
	FLAG_SHIFT_KEY_DOWN aP
	FLAG_SPRINTING aQ
	FLAG_SWIMMING aR
	FREEZE_HURT_FREQUENCY F
	ID_TAG v
	INITIAL_AABB k
	LAVA_FAST_FLOW_SCALE m
	LAVA_SLOW_FLOW_SCALE n
	LOGGER c
	MAX_ENTITY_TAG_COUNT z
	PASSENGERS_TAG w
	TOTAL_AIR_SUPPLY y
	UUID_TAG G
	WATER_FLOW_SCALE l
	bb aI
	blockPosition aD
	blocksBuilding H
	boardingCooldown I
	chunkPosition aE
	crystalSoundIntensity bk
	deltaMovement aF
	dimensions bh
	entityData am
	eyeHeight bi
	fallDistance aa
	feetBlockState bn
	firstTick al
	fluidHeight ai
	fluidOnEyes aO
	flyDist Z
	hasGlowingTag bd
	hasImpulse at
	hasVisualFire bm
	horizontalCollision O
	hurtMarked S
	id q
	invulnerable bc
	invulnerableTime ak
	isInPowderSnow az
	isInsidePortal au
	lastCrystalSoundPlayTick bl
	level t
	levelCallback aZ
	mainSupportingBlockPos aC
	maxUpStep aM
	minorHorizontalCollision R
	moveDist Y
	nextStep aL
	noCulling as
	noPhysics ae
	onGround aJ
	onGroundNoBlocks bj
	packetPositionCodec ba
	passengers r
	pistonDeltas bf
	pistonDeltasGameTime bg
	portalCooldown bb
	portalEntrancePos aw
	portalTime av
	position u
	random af
	remainingFireTicks aN
	removalReason aK
	stringUUID ay
	stuckSpeedMultiplier T
	tags be
	tickCount ag
	type p
	uuid ax
	vehicle s
	verticalCollision P
	verticalCollisionBelow Q
	viewScale o
	walkDist X
	walkDistO W
	wasEyeInWater aj
	wasInPowderSnow aA
	wasOnFire aB
	wasTouchingWater ah
	xOld ab
	xRot aH
	xRotO N
	xo J
	yOld ac
	yRot aG
	yRotO M
	yo K
	zOld ad
	zo L
	absMoveTo (DDD)V h
	absMoveTo (DDDFF)V a
	acceptsFailure ()Z q_
	acceptsSuccess ()Z e_
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	addDeltaMovement (Lnet/minecraft/world/phys/Vec3;)V g
	addPassenger (Lnet/minecraft/world/entity/Entity;)V m
	addTag (Ljava/lang/String;)Z a
	animateHurt (F)V m
	applyPistonMovementRestriction (Lnet/minecraft/core/Direction$Axis;D)D a
	awardKillScore (Lnet/minecraft/world/entity/Entity;ILnet/minecraft/world/damagesource/DamageSource;)V a
	baseTick ()V ao
	blockPosition ()Lnet/minecraft/core/BlockPos; di
	broadcastToPlayer (Lnet/minecraft/server/level/ServerPlayer;)Z a
	calculateUpVector (FF)Lnet/minecraft/world/phys/Vec3; c
	calculateViewVector (FF)Lnet/minecraft/world/phys/Vec3; b
	canAddPassenger (Lnet/minecraft/world/entity/Entity;)Z o
	canBeCollidedWith ()Z bu
	canBeHitByProjectile ()Z bn
	canChangeDimensions ()Z cq
	canCollideWith (Lnet/minecraft/world/entity/Entity;)Z h
	canEnterPose (Lnet/minecraft/world/entity/Pose;)Z d
	canFreeze ()Z dw
	canRide (Lnet/minecraft/world/entity/Entity;)Z l
	canSpawnSprintParticle ()Z bg
	canSprint ()Z dB
	causeFallDamage (FFLnet/minecraft/world/damagesource/DamageSource;)Z a
	changeDimension (Lnet/minecraft/server/level/ServerLevel;)Lnet/minecraft/world/entity/Entity; b
	checkBelowWorld ()V ap
	checkDespawn ()V du
	checkFallDamage (DZLnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/BlockPos;)V a
	checkInsideBlocks ()V aM
	checkSlowFallDistance ()V ck
	checkSupportingBlock (ZLnet/minecraft/world/phys/Vec3;)V b
	chunkPosition ()Lnet/minecraft/world/level/ChunkPos; dk
	clearFire ()V aw
	closerThan (Lnet/minecraft/world/entity/Entity;D)Z a
	closerThan (Lnet/minecraft/world/entity/Entity;DD)Z a
	collide (Lnet/minecraft/world/phys/Vec3;)Lnet/minecraft/world/phys/Vec3; h
	collideBoundingBox (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/phys/Vec3;Lnet/minecraft/world/phys/AABB;Lnet/minecraft/world/level/Level;Ljava/util/List;)Lnet/minecraft/world/phys/Vec3; a
	collideWithShapes (Lnet/minecraft/world/phys/Vec3;Lnet/minecraft/world/phys/AABB;Ljava/util/List;)Lnet/minecraft/world/phys/Vec3; a
	copyPosition (Lnet/minecraft/world/entity/Entity;)V s
	couldAcceptPassenger ()Z bB
	createCommandSourceStack ()Lnet/minecraft/commands/CommandSourceStack; da
	createHoverEvent ()Lnet/minecraft/network/chat/HoverEvent; cD
	damageSources ()Lnet/minecraft/world/damagesource/DamageSources; dJ
	dampensVibrations ()Z aT
	defineSynchedData ()V a_
	discard ()V ai
	dismountTo (DDD)V a
	dismountsUnderwater ()Z bO
	displayFireAnimation ()Z cs
	distanceTo (Lnet/minecraft/world/entity/Entity;)F e
	distanceToSqr (DDD)D i
	distanceToSqr (Lnet/minecraft/world/entity/Entity;)D f
	distanceToSqr (Lnet/minecraft/world/phys/Vec3;)D e
	doEnchantDamageEffects (Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/entity/Entity;)V a
	doWaterSplashEffect ()V bd
	ejectPassengers ()V bz
	extinguishFire ()V aB
	fillCrashReportCategory (Lnet/minecraft/CrashReportCategory;)V a
	findDimensionEntryPoint (Lnet/minecraft/server/level/ServerLevel;)Lnet/minecraft/world/level/portal/PortalInfo; a
	fireImmune ()Z aU
	fixupDimensions ()V cA
	gameEvent (Lnet/minecraft/world/level/gameevent/GameEvent;)V a
	gameEvent (Lnet/minecraft/world/level/gameevent/GameEvent;Lnet/minecraft/world/entity/Entity;)V a
	getAddEntityPacket ()Lnet/minecraft/network/protocol/Packet; S
	getAirSupply ()I cf
	getAllSlots ()Ljava/lang/Iterable; bK
	getArmorSlots ()Ljava/lang/Iterable; bJ
	getBbHeight ()F de
	getBbWidth ()F dd
	getBlockExplosionResistance (Lnet/minecraft/world/level/Explosion;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/material/FluidState;F)F a
	getBlockJumpFactor ()F aG
	getBlockPosBelowThatAffectsMyMovement ()Lnet/minecraft/core/BlockPos; aE
	getBlockSpeedFactor ()F aH
	getBlockStateOn ()Lnet/minecraft/world/level/block/state/BlockState; bf
	getBlockStateOnLegacy ()Lnet/minecraft/world/level/block/state/BlockState; be
	getBlockX ()I dm
	getBlockY ()I do
	getBlockZ ()I ds
	getBoundingBox ()Lnet/minecraft/world/phys/AABB; cE
	getBoundingBoxForCulling ()Lnet/minecraft/world/phys/AABB; j_
	getBoundingBoxForPose (Lnet/minecraft/world/entity/Pose;)Lnet/minecraft/world/phys/AABB; e
	getCollisionHorizontalEscapeVector (DDF)Lnet/minecraft/world/phys/Vec3; a
	getCommandSenderWorld ()Lnet/minecraft/world/level/Level; cH
	getControlledVehicle ()Lnet/minecraft/world/entity/Entity; cX
	getControllingPassenger ()Lnet/minecraft/world/entity/LivingEntity; cL
	getCustomName ()Lnet/minecraft/network/chat/Component; ab
	getDeltaMovement ()Lnet/minecraft/world/phys/Vec3; dl
	getDimensionChangingDelay ()I bH
	getDimensions (Lnet/minecraft/world/entity/Pose;)Lnet/minecraft/world/entity/EntityDimensions; a
	getDirection ()Lnet/minecraft/core/Direction; cB
	getDismountLocationForPassenger (Lnet/minecraft/world/entity/LivingEntity;)Lnet/minecraft/world/phys/Vec3; b
	getDisplayName ()Lnet/minecraft/network/chat/Component; H_
	getEncodeId ()Ljava/lang/String; br
	getEntityData ()Lnet/minecraft/network/syncher/SynchedEntityData; aj
	getExitPortal (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;ZLnet/minecraft/world/level/border/WorldBorder;)Ljava/util/Optional; a
	getEyeHeight ()F cF
	getEyeHeight (Lnet/minecraft/world/entity/Pose;)F f
	getEyeHeight (Lnet/minecraft/world/entity/Pose;Lnet/minecraft/world/entity/EntityDimensions;)F a
	getEyePosition ()Lnet/minecraft/world/phys/Vec3; bm
	getEyePosition (F)Lnet/minecraft/world/phys/Vec3; j
	getEyeY ()D dr
	getFeetBlockState ()Lnet/minecraft/world/level/block/state/BlockState; dj
	getFireImmuneTicks ()I cZ
	getFirstPassenger ()Lnet/minecraft/world/entity/Entity; cO
	getFluidHeight (Lnet/minecraft/tags/TagKey;)D b
	getFluidJumpThreshold ()D dc
	getForward ()Lnet/minecraft/world/phys/Vec3; bF
	getHandHoldingItemAngle (Lnet/minecraft/world/item/Item;)Lnet/minecraft/world/phys/Vec3; a
	getHandSlots ()Ljava/lang/Iterable; bI
	getId ()I af
	getIndirectPassengers ()Ljava/lang/Iterable; cR
	getIndirectPassengersStream ()Ljava/util/stream/Stream; t
	getInputVector (Lnet/minecraft/world/phys/Vec3;FF)Lnet/minecraft/world/phys/Vec3; a
	getLeashOffset ()Lnet/minecraft/world/phys/Vec3; cG
	getLeashOffset (F)Lnet/minecraft/world/phys/Vec3; p
	getLightLevelDependentMagicValue ()F bj
	getLightProbePosition (F)Lnet/minecraft/world/phys/Vec3; k
	getLookAngle ()Lnet/minecraft/world/phys/Vec3; bD
	getMaxAirSupply ()I ce
	getMaxFallDistance ()I cr
	getMotionDirection ()Lnet/minecraft/core/Direction; cC
	getMovementEmission ()Lnet/minecraft/world/entity/Entity$MovementEmission; aS
	getMyRidingOffset ()D bw
	getName ()Lnet/minecraft/network/chat/Component; Z
	getNameTagOffsetY ()F df
	getOnPos ()Lnet/minecraft/core/BlockPos; aF
	getOnPos (F)Lnet/minecraft/core/BlockPos; d
	getOnPosLegacy ()Lnet/minecraft/core/BlockPos; aD
	getPassengers ()Ljava/util/List; cN
	getPassengersAndSelf ()Ljava/util/stream/Stream; cQ
	getPassengersRidingOffset ()D bx
	getPercentFrozen ()F ch
	getPermissionLevel ()I B
	getPickRadius ()F bC
	getPickResult ()Lnet/minecraft/world/item/ItemStack; dv
	getPistonPushReaction ()Lnet/minecraft/world/level/material/PushReaction; l_
	getPortalCooldown ()I ar
	getPortalWaitTime ()I at
	getPose ()Lnet/minecraft/world/entity/Pose; al
	getPosition (F)Lnet/minecraft/world/phys/Vec3; l
	getPositionCodec ()Lnet/minecraft/network/protocol/game/VecDeltaCodec; ad
	getPrimaryStepSoundBlockPos (Lnet/minecraft/core/BlockPos;)Lnet/minecraft/core/BlockPos; e
	getRandomX (D)D d
	getRandomY ()D dq
	getRandomZ (D)D g
	getRelativePortalPosition (Lnet/minecraft/core/Direction$Axis;Lnet/minecraft/BlockUtil$FoundRectangle;)Lnet/minecraft/world/phys/Vec3; a
	getRemainingFireTicks ()I av
	getRemovalReason ()Lnet/minecraft/world/entity/Entity$RemovalReason; dE
	getRootVehicle ()Lnet/minecraft/world/entity/Entity; cT
	getRopeHoldPosition (F)Lnet/minecraft/world/phys/Vec3; q
	getRotationVector ()Lnet/minecraft/world/phys/Vec2; bE
	getScoreboardName ()Ljava/lang/String; cv
	getSelfAndPassengers ()Ljava/util/stream/Stream; cP
	getServer ()Lnet/minecraft/server/MinecraftServer; cI
	getSharedFlag (I)Z i
	getSlot (I)Lnet/minecraft/world/entity/SlotAccess; a_
	getSoundSource ()Lnet/minecraft/sounds/SoundSource; cY
	getStringUUID ()Ljava/lang/String; cu
	getSwimHighSpeedSplashSound ()Lnet/minecraft/sounds/SoundEvent; aL
	getSwimSound ()Lnet/minecraft/sounds/SoundEvent; aJ
	getSwimSplashSound ()Lnet/minecraft/sounds/SoundEvent; aK
	getTags ()Ljava/util/Set; ag
	getTeam ()Lnet/minecraft/world/scores/Team; cd
	getTeamColor ()I k_
	getTicksFrozen ()I cg
	getTicksRequiredToFreeze ()I cj
	getType ()Lnet/minecraft/world/entity/EntityType; ae
	getTypeName ()Lnet/minecraft/network/chat/Component; cl
	getUUID ()Ljava/util/UUID; ct
	getUpVector (F)Lnet/minecraft/world/phys/Vec3; i
	getVehicle ()Lnet/minecraft/world/entity/Entity; cW
	getViewScale ()D cx
	getViewVector (F)Lnet/minecraft/world/phys/Vec3; f
	getViewXRot (F)F g
	getViewYRot (F)F h
	getVisualRotationYInDegrees ()F dz
	getX ()D dn
	getX (D)D c
	getXRot ()F dA
	getY ()D dp
	getY (D)D e
	getYHeadRot ()F cm
	getYRot ()F dy
	getZ ()D dt
	getZ (D)D f
	handleDamageEvent (Lnet/minecraft/world/damagesource/DamageSource;)V c
	handleEntityEvent (B)V b
	handleInsidePortal (Lnet/minecraft/core/BlockPos;)V f
	handleNetherPortal ()V bG
	hasControllingPassenger ()Z cM
	hasCustomName ()Z aa
	hasExactlyOnePlayerPassenger ()Z cS
	hasGlowingTag ()Z bZ
	hasIndirectPassenger (Lnet/minecraft/world/entity/Entity;)Z w
	hasPassenger (Ljava/util/function/Predicate;)Z a
	hasPassenger (Lnet/minecraft/world/entity/Entity;)Z u
	hasPermissions (I)Z l
	hasPose (Lnet/minecraft/world/entity/Pose;)Z c
	hurt (Lnet/minecraft/world/damagesource/DamageSource;F)Z a
	ignoreExplosion ()Z cJ
	interact (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResult; a
	interactAt (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/phys/Vec3;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResult; a
	is (Lnet/minecraft/world/entity/Entity;)Z q
	isAlive ()Z bs
	isAlliedTo (Lnet/minecraft/world/entity/Entity;)Z p
	isAlliedTo (Lnet/minecraft/world/scores/Team;)Z a
	isAlwaysTicking ()Z dH
	isAttackable ()Z cn
	isColliding (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Z a
	isControlledByLocalInstance ()Z cU
	isCrouching ()Z bU
	isCurrentlyGlowing ()Z ca
	isCustomNameVisible ()Z cy
	isDescending ()Z bT
	isDiscrete ()Z bS
	isEffectiveAi ()Z cV
	isEyeInFluid (Lnet/minecraft/tags/TagKey;)Z a
	isFlapping ()Z aP
	isFree (DDD)Z g
	isFree (Lnet/minecraft/world/phys/AABB;)Z b
	isFreezing ()Z dx
	isFullyFrozen ()Z ci
	isHorizontalCollisionMinor (Lnet/minecraft/world/phys/Vec3;)Z b
	isIgnoringBlockTriggers ()Z c_
	isInBubbleColumn ()Z p
	isInLava ()Z bi
	isInRain ()Z o
	isInWall ()Z bt
	isInWater ()Z aV
	isInWaterOrBubble ()Z aY
	isInWaterOrRain ()Z aW
	isInWaterRainOrBubble ()Z aX
	isInvisible ()Z cb
	isInvisibleTo (Lnet/minecraft/world/entity/player/Player;)Z d
	isInvulnerable ()Z co
	isInvulnerableTo (Lnet/minecraft/world/damagesource/DamageSource;)Z b
	isNoGravity ()Z aR
	isOnFire ()Z bL
	isOnPortalCooldown ()Z as
	isOnRails ()Z cc
	isPassenger ()Z bM
	isPassengerOfSameVehicle (Lnet/minecraft/world/entity/Entity;)Z v
	isPickable ()Z bo
	isPushable ()Z bp
	isPushedByFluid ()Z cw
	isRemoved ()Z dD
	isShiftKeyDown ()Z bP
	isSilent ()Z aQ
	isSpectator ()Z G_
	isSprinting ()Z bV
	isStateClimbable (Lnet/minecraft/world/level/block/state/BlockState;)Z c
	isSteppingCarefully ()Z bQ
	isSupportedBy (Lnet/minecraft/core/BlockPos;)Z d
	isSuppressingBounce ()Z bR
	isSwimming ()Z bW
	isUnderWater ()Z aZ
	isVehicle ()Z bN
	isVisuallyCrawling ()Z bY
	isVisuallySwimming ()Z bX
	kill ()V ah
	killedEntity (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)Z a
	lavaHurt ()V au
	lerpHeadTo (FI)V a
	lerpMotion (DDD)V l
	lerpTo (DDDFFIZ)V a
	level ()Lnet/minecraft/world/level/Level; dI
	limitPistonMovement (Lnet/minecraft/world/phys/Vec3;)Lnet/minecraft/world/phys/Vec3; c
	load (Lnet/minecraft/nbt/CompoundTag;)V g
	lookAt (Lnet/minecraft/commands/arguments/EntityAnchorArgument$Anchor;Lnet/minecraft/world/phys/Vec3;)V a
	makeBoundingBox ()Lnet/minecraft/world/phys/AABB; am
	makeStuckInBlock (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/phys/Vec3;)V a
	markHurt ()V bl
	maxUpStep ()F dC
	mayInteract (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)Z a
	maybeBackOffFromEdge (Lnet/minecraft/world/phys/Vec3;Lnet/minecraft/world/entity/MoverType;)Lnet/minecraft/world/phys/Vec3; a
	mirror (Lnet/minecraft/world/level/block/Mirror;)F a
	move (Lnet/minecraft/world/entity/MoverType;Lnet/minecraft/world/phys/Vec3;)V a
	moveRelative (FLnet/minecraft/world/phys/Vec3;)V a
	moveTo (DDD)V d
	moveTo (DDDFF)V b
	moveTo (Lnet/minecraft/core/BlockPos;FF)V a
	moveTo (Lnet/minecraft/world/phys/Vec3;)V d
	moveTowardsClosestSpace (DDD)V m
	newDoubleList ([D)Lnet/minecraft/nbt/ListTag; a
	newFloatList ([F)Lnet/minecraft/nbt/ListTag; a
	nextStep ()F aI
	onAboveBubbleCol (Z)V k
	onBelowWorld ()V ax
	onClientRemoval ()V ak
	onFlap ()V aO
	onGround ()Z ay
	onInsideBlock (Lnet/minecraft/world/level/block/state/BlockState;)V a
	onInsideBubbleColumn (Z)V l
	onPassengerTurned (Lnet/minecraft/world/entity/Entity;)V j
	onSyncedDataUpdated (Ljava/util/List;)V a
	onSyncedDataUpdated (Lnet/minecraft/network/syncher/EntityDataAccessor;)V a
	onlyOpCanSetNbt ()Z cK
	pick (DFZ)Lnet/minecraft/world/phys/HitResult; a
	playAmethystStepSound ()V k
	playCombinationStepSounds (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/state/BlockState;)V a
	playEntityOnFireExtinguishedSound ()V aA
	playMuffledStepSound (Lnet/minecraft/world/level/block/state/BlockState;)V b
	playSound (Lnet/minecraft/sounds/SoundEvent;)V a
	playSound (Lnet/minecraft/sounds/SoundEvent;FF)V a
	playStepSound (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V b
	playSwimSound (F)V e
	playerTouch (Lnet/minecraft/world/entity/player/Player;)V b_
	position ()Lnet/minecraft/world/phys/Vec3; dg
	positionRider (Lnet/minecraft/world/entity/Entity;)V i
	positionRider (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/entity/Entity$MoveFunction;)V a
	processFlappingMovement ()V aC
	processPortalCooldown ()V H
	push (DDD)V j
	push (Lnet/minecraft/world/entity/Entity;)V g
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	reapplyPosition ()V an
	recreateFromPacket (Lnet/minecraft/network/protocol/game/ClientboundAddEntityPacket;)V a
	refreshDimensions ()V d_
	remove (Lnet/minecraft/world/entity/Entity$RemovalReason;)V a
	removeAction (Lnet/minecraft/network/chat/Component;)Lnet/minecraft/network/chat/Component; c
	removeAfterChangingDimensions ()V cp
	removePassenger (Lnet/minecraft/world/entity/Entity;)V n
	removeTag (Ljava/lang/String;)Z b
	removeVehicle ()V bA
	repositionEntityAfterLoad ()Z bq
	resetFallDistance ()V n
	restoreFrom (Lnet/minecraft/world/entity/Entity;)V t
	rideTick ()V bv
	rotate (Lnet/minecraft/world/level/block/Rotation;)F a
	save (Lnet/minecraft/nbt/CompoundTag;)Z e
	saveAsPassenger (Lnet/minecraft/nbt/CompoundTag;)Z d
	saveWithoutId (Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/nbt/CompoundTag; f
	sendSystemMessage (Lnet/minecraft/network/chat/Component;)V a
	setAirSupply (I)V j
	setBoundingBox (Lnet/minecraft/world/phys/AABB;)V a
	setCustomName (Lnet/minecraft/network/chat/Component;)V b
	setCustomNameVisible (Z)V n
	setDeltaMovement (DDD)V o
	setDeltaMovement (Lnet/minecraft/world/phys/Vec3;)V f
	setGlowingTag (Z)V i
	setId (I)V e
	setInvisible (Z)V j
	setInvulnerable (Z)V m
	setIsInPowderSnow (Z)V o
	setItemSlot (Lnet/minecraft/world/entity/EquipmentSlot;Lnet/minecraft/world/item/ItemStack;)V a
	setLevel (Lnet/minecraft/world/level/Level;)V a
	setLevelCallback (Lnet/minecraft/world/level/entity/EntityInLevelCallback;)V a
	setMaxUpStep (F)V r
	setNoGravity (Z)V e
	setOldPosAndRot ()V bk
	setOnGround (Z)V c
	setOnGroundWithKnownMovement (ZLnet/minecraft/world/phys/Vec3;)V a
	setPortalCooldown ()V aq
	setPortalCooldown (I)V f
	setPos (DDD)V e
	setPos (Lnet/minecraft/world/phys/Vec3;)V a
	setPosRaw (DDD)V p
	setPose (Lnet/minecraft/world/entity/Pose;)V b
	setRemainingFireTicks (I)V h
	setRemoved (Lnet/minecraft/world/entity/Entity$RemovalReason;)V b
	setRot (FF)V a
	setSecondsOnFire (I)V g
	setSharedFlag (IZ)V b
	setSharedFlagOnFire (Z)V a_
	setShiftKeyDown (Z)V f
	setSilent (Z)V d
	setSprinting (Z)V g
	setSwimming (Z)V h
	setTicksFrozen (I)V k
	setUUID (Ljava/util/UUID;)V a_
	setViewScale (D)V b
	setXRot (F)V b_
	setYBodyRot (F)V o
	setYHeadRot (F)V n
	setYRot (F)V a_
	shouldBeSaved ()Z dG
	shouldBlockExplode (Lnet/minecraft/world/level/Explosion;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;F)Z a
	shouldInformAdmins ()Z N_
	shouldPlayAmethystStepSound (Lnet/minecraft/world/level/block/state/BlockState;)Z d
	shouldRender (DDD)Z k
	shouldRenderAtSqrDistance (D)Z a
	shouldShowName ()Z cz
	showVehicleHealth ()Z by
	skipAttackInteraction (Lnet/minecraft/world/entity/Entity;)Z r
	spawnAtLocation (Lnet/minecraft/world/item/ItemStack;)Lnet/minecraft/world/entity/item/ItemEntity; b
	spawnAtLocation (Lnet/minecraft/world/item/ItemStack;F)Lnet/minecraft/world/entity/item/ItemEntity; a
	spawnAtLocation (Lnet/minecraft/world/level/ItemLike;)Lnet/minecraft/world/entity/item/ItemEntity; a
	spawnAtLocation (Lnet/minecraft/world/level/ItemLike;I)Lnet/minecraft/world/entity/item/ItemEntity; a
	spawnSprintParticle ()V bh
	startRiding (Lnet/minecraft/world/entity/Entity;)Z k
	startRiding (Lnet/minecraft/world/entity/Entity;Z)Z a
	startSeenByPlayer (Lnet/minecraft/server/level/ServerPlayer;)V c
	stopRiding ()V Y
	stopSeenByPlayer (Lnet/minecraft/server/level/ServerPlayer;)V d
	syncPacketPositionCodec (DDD)V f
	teleportPassengers ()V s
	teleportRelative (DDD)V c
	teleportTo (DDD)V b
	teleportTo (Lnet/minecraft/server/level/ServerLevel;DDDLjava/util/Set;FF)Z a
	teleportToWithTicket (DDD)V n
	thunderHit (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LightningBolt;)V a
	tick ()V l
	touchingUnloadedChunk ()Z db
	trackingPosition ()Lnet/minecraft/world/phys/Vec3; dh
	tryCheckInsideBlocks ()V az
	turn (DD)V b
	unRide ()V ac
	unsetRemoved ()V dF
	updateDynamicGameEventListener (Ljava/util/function/BiConsumer;)V a
	updateFluidHeightAndDoFluidPushing (Lnet/minecraft/tags/TagKey;D)Z a
	updateFluidOnEyes ()V q
	updateInWaterStateAndDoFluidPushing ()Z bb
	updateInWaterStateAndDoWaterCurrentPushing ()V bc
	updateSwimming ()V ba
	vibrationAndSoundEffectsFromBlock (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;ZZLnet/minecraft/world/phys/Vec3;)Z a
	walkingStepSound (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V c
	waterSwimSound ()V aN
net/minecraft/world/entity/Entity$MoveFunction bfj$a
net/minecraft/world/entity/Entity$MovementEmission bfj$b
	$VALUES g
	ALL d
	EVENTS c
	NONE a
	SOUNDS b
	events f
	sounds e
	$values ()[Lnet/minecraft/world/entity/Entity$MovementEmission; d
	emitsAnything ()Z a
	emitsEvents ()Z b
	emitsSounds ()Z c
net/minecraft/world/entity/Entity$RemovalReason bfj$c
	$VALUES h
	CHANGED_DIMENSION e
	DISCARDED b
	KILLED a
	UNLOADED_TO_CHUNK c
	UNLOADED_WITH_PLAYER d
	destroy f
	save g
	$values ()[Lnet/minecraft/world/entity/Entity$RemovalReason; c
	shouldDestroy ()Z a
	shouldSave ()Z b
net/minecraft/world/entity/EntityDimensions bfk
	fixed c
	height b
	width a
	fixed (FF)Lnet/minecraft/world/entity/EntityDimensions; c
	makeBoundingBox (DDD)Lnet/minecraft/world/phys/AABB; a
	makeBoundingBox (Lnet/minecraft/world/phys/Vec3;)Lnet/minecraft/world/phys/AABB; a
	scalable (FF)Lnet/minecraft/world/entity/EntityDimensions; b
	scale (F)Lnet/minecraft/world/entity/EntityDimensions; a
	scale (FF)Lnet/minecraft/world/entity/EntityDimensions; a
net/minecraft/world/entity/EntityEvent bfl
	ARMORSTAND_WOBBLE E
	ATTACK_BLOCKED B
	BAD_OMEN_TRIGGERED M
	CANCEL_SHAKE_WETNESS Y
	CHEST_BREAK S
	DEATH b
	DOLPHIN_LOOKING_FOR_TREASURE H
	EAT_GRASS i
	END_RAM aa
	FEET_BREAK U
	FIREWORKS_EXPLODE p
	FISHING_ROD_REEL_IN D
	FOX_EAT N
	FULL_DEBUG_INFO v
	GUARDIAN_ATTACK_SOUND t
	HEAD_BREAK R
	HONEY_JUMP W
	HONEY_SLIDE V
	IN_LOVE_HEARTS q
	JUMP a
	LEGS_BREAK T
	LOVE_HEARTS k
	MAINHAND_BREAK P
	OFFER_FLOWER j
	OFFHAND_BREAK Q
	PERMISSION_LEVEL_ADMINS z
	PERMISSION_LEVEL_ALL w
	PERMISSION_LEVEL_GAMEMASTERS y
	PERMISSION_LEVEL_MODERATORS x
	PERMISSION_LEVEL_OWNERS A
	POOF ab
	RAVAGER_STUNNED I
	REDUCED_DEBUG_INFO u
	SHAKE_WETNESS g
	SHIELD_DISABLED C
	SILVERFISH_MERGE_ANIM s
	SNIFFER_DIGGING_SOUND ae
	SONIC_CHARGE ad
	SQUID_ANIM_SYNCH r
	START_ATTACKING c
	START_RAM Z
	STOP_ATTACKING d
	STOP_OFFER_FLOWER F
	SWAP_HANDS X
	TALISMAN_ACTIVATE G
	TAMING_FAILED e
	TAMING_SUCCEEDED f
	TELEPORT O
	TENDRILS_SHIVER ac
	TRUSTING_FAILED J
	TRUSTING_SUCCEEDED K
	USE_ITEM_COMPLETE h
	VILLAGER_ANGRY l
	VILLAGER_HAPPY m
	VILLAGER_SWEAT L
	WITCH_HAT_MAGIC n
	ZOMBIE_CONVERTING o
net/minecraft/world/entity/EntitySelector bfm
	CAN_BE_COLLIDED_WITH g
	CONTAINER_ENTITY_SELECTOR d
	ENTITY_NOT_BEING_RIDDEN c
	ENTITY_STILL_ALIVE a
	LIVING_ENTITY_STILL_ALIVE b
	NO_CREATIVE_OR_SPECTATOR e
	NO_SPECTATORS f
	notRiding (Lnet/minecraft/world/entity/Entity;)Ljava/util/function/Predicate; b
	pushableBy (Lnet/minecraft/world/entity/Entity;)Ljava/util/function/Predicate; a
	withinDistance (DDDD)Ljava/util/function/Predicate; a
net/minecraft/world/entity/EntitySelector$MobCanWearArmorEntitySelector bfm$a
	itemStack a
	test (Lnet/minecraft/world/entity/Entity;)Z a
net/minecraft/world/entity/EntityType bfn
	ALLAY b
	AREA_EFFECT_CLOUD c
	ARMOR_STAND d
	ARROW e
	AXOLOTL f
	BAT g
	BEE h
	BLAZE i
	BLOCK_DISPLAY j
	BOAT k
	CAMEL l
	CAT m
	CAVE_SPIDER n
	CHEST_BOAT o
	CHEST_MINECART p
	CHICKEN q
	COD r
	COMMAND_BLOCK_MINECART s
	COW t
	CREEPER u
	DISPLAY_TRACKING_RANGE bz
	DOLPHIN v
	DONKEY w
	DRAGON_FIREBALL x
	DROWNED y
	EGG z
	ELDER_GUARDIAN A
	ENDERMAN E
	ENDERMITE F
	ENDER_DRAGON C
	ENDER_PEARL D
	END_CRYSTAL B
	ENTITY_TAG a
	EVOKER G
	EVOKER_FANGS H
	EXPERIENCE_BOTTLE I
	EXPERIENCE_ORB J
	EYE_OF_ENDER K
	FALLING_BLOCK L
	FIREBALL ag
	FIREWORK_ROCKET M
	FISHING_BOBBER bu
	FOX N
	FROG O
	FURNACE_MINECART P
	GHAST Q
	GIANT R
	GLOW_ITEM_FRAME S
	GLOW_SQUID T
	GOAT U
	GUARDIAN V
	HOGLIN W
	HOPPER_MINECART X
	HORSE Y
	HUSK Z
	ILLUSIONER aa
	INTERACTION ab
	IRON_GOLEM ac
	ITEM ad
	ITEM_DISPLAY ae
	ITEM_FRAME af
	LEASH_KNOT ah
	LIGHTNING_BOLT ai
	LLAMA aj
	LLAMA_SPIT ak
	LOGGER bw
	MAGIC_HORSE_WIDTH by
	MAGMA_CUBE al
	MARKER am
	MINECART an
	MOOSHROOM ao
	MULE ap
	OCELOT aq
	PAINTING ar
	PANDA as
	PARROT at
	PHANTOM au
	PIG av
	PIGLIN aw
	PIGLIN_BRUTE ax
	PILLAGER ay
	PLAYER bt
	POLAR_BEAR az
	POTION aA
	PUFFERFISH aB
	RABBIT aC
	RAVAGER aD
	SALMON aE
	SHEEP aF
	SHULKER aG
	SHULKER_BULLET aH
	SILVERFISH aI
	SKELETON aJ
	SKELETON_HORSE aK
	SLIME aL
	SMALL_FIREBALL aM
	SNIFFER aN
	SNOWBALL aP
	SNOW_GOLEM aO
	SPAWNER_MINECART aQ
	SPECTRAL_ARROW aR
	SPIDER aS
	SQUID aT
	STRAY aU
	STRIDER aV
	TADPOLE aW
	TEXT_DISPLAY aX
	TNT aY
	TNT_MINECART aZ
	TRADER_LLAMA ba
	TRIDENT bb
	TROPICAL_FISH bc
	TURTLE bd
	VEX be
	VILLAGER bf
	VINDICATOR bg
	WANDERING_TRADER bh
	WARDEN bi
	WITCH bj
	WITHER bk
	WITHER_SKELETON bl
	WITHER_SKULL bm
	WOLF bn
	ZOGLIN bo
	ZOMBIE bp
	ZOMBIE_HORSE bq
	ZOMBIE_VILLAGER br
	ZOMBIFIED_PIGLIN bs
	builtInRegistryHolder bx
	canSpawnFarFromPlayer bG
	category bB
	clientTrackingRange bH
	description bK
	descriptionId bJ
	dimensions bM
	factory bA
	fireImmune bF
	immuneTo bC
	lootTable bL
	requiredFeatures bN
	serialize bD
	summon bE
	updateInterval bI
	appendCustomEntityStackConfig (Ljava/util/function/Consumer;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/entity/player/Player;)Ljava/util/function/Consumer; b
	appendCustomNameConfig (Ljava/util/function/Consumer;Lnet/minecraft/world/item/ItemStack;)Ljava/util/function/Consumer; a
	appendDefaultStackConfig (Ljava/util/function/Consumer;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/entity/player/Player;)Ljava/util/function/Consumer; a
	builtInRegistryHolder ()Lnet/minecraft/core/Holder$Reference; r
	by (Lnet/minecraft/nbt/CompoundTag;)Ljava/util/Optional; a
	byString (Ljava/lang/String;)Ljava/util/Optional; a
	canSerialize ()Z b
	canSpawnFarFromPlayer ()Z e
	canSummon ()Z c
	clientTrackingRange ()I o
	create (Lnet/minecraft/nbt/CompoundTag;Lnet/minecraft/world/level/Level;)Ljava/util/Optional; a
	create (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/nbt/CompoundTag;Ljava/util/function/Consumer;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/MobSpawnType;ZZ)Lnet/minecraft/world/entity/Entity; b
	create (Lnet/minecraft/world/level/Level;)Lnet/minecraft/world/entity/Entity; a
	createDefaultStackConfig (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/entity/player/Player;)Ljava/util/function/Consumer; a
	fireImmune ()Z d
	getAABB (DDD)Lnet/minecraft/world/phys/AABB; a
	getBaseClass ()Ljava/lang/Class; a
	getCategory ()Lnet/minecraft/world/entity/MobCategory; f
	getDefaultLootTable ()Lnet/minecraft/resources/ResourceLocation; j
	getDescription ()Lnet/minecraft/network/chat/Component; h
	getDescriptionId ()Ljava/lang/String; g
	getDimensions ()Lnet/minecraft/world/entity/EntityDimensions; n
	getHeight ()F l
	getKey (Lnet/minecraft/world/entity/EntityType;)Lnet/minecraft/resources/ResourceLocation; a
	getWidth ()F k
	getYOffset (Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;ZLnet/minecraft/world/phys/AABB;)D a
	is (Lnet/minecraft/tags/TagKey;)Z a
	isBlockDangerous (Lnet/minecraft/world/level/block/state/BlockState;)Z a
	loadEntitiesRecursive (Ljava/util/List;Lnet/minecraft/world/level/Level;)Ljava/util/stream/Stream; a
	loadEntityRecursive (Lnet/minecraft/nbt/CompoundTag;Lnet/minecraft/world/level/Level;Ljava/util/function/Function;)Lnet/minecraft/world/entity/Entity; a
	loadStaticEntity (Lnet/minecraft/nbt/CompoundTag;Lnet/minecraft/world/level/Level;)Ljava/util/Optional; b
	register (Ljava/lang/String;Lnet/minecraft/world/entity/EntityType$Builder;)Lnet/minecraft/world/entity/EntityType; a
	requiredFeatures ()Lnet/minecraft/world/flag/FeatureFlagSet; m
	spawn (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/MobSpawnType;)Lnet/minecraft/world/entity/Entity; a
	spawn (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/nbt/CompoundTag;Ljava/util/function/Consumer;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/MobSpawnType;ZZ)Lnet/minecraft/world/entity/Entity; a
	spawn (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/MobSpawnType;ZZ)Lnet/minecraft/world/entity/Entity; a
	toShortString ()Ljava/lang/String; i
	trackDeltas ()Z q
	tryCast (Ljava/lang/Object;)Ljava/lang/Object; a
	tryCast (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/world/entity/Entity; a
	updateCustomEntityTag (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/entity/Entity;Lnet/minecraft/nbt/CompoundTag;)V a
	updateInterval ()I p
net/minecraft/world/entity/EntityType$Builder bfn$a
	canSpawnFarFromPlayer g
	category b
	clientTrackingRange h
	dimensions j
	factory a
	fireImmune f
	immuneTo c
	requiredFeatures k
	serialize d
	summon e
	updateInterval i
	build (Ljava/lang/String;)Lnet/minecraft/world/entity/EntityType; a
	canSpawnFarFromPlayer ()Lnet/minecraft/world/entity/EntityType$Builder; d
	clientTrackingRange (I)Lnet/minecraft/world/entity/EntityType$Builder; a
	createNothing (Lnet/minecraft/world/entity/MobCategory;)Lnet/minecraft/world/entity/EntityType$Builder; a
	fireImmune ()Lnet/minecraft/world/entity/EntityType$Builder; c
	immuneTo ([Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/world/entity/EntityType$Builder; a
	noSave ()Lnet/minecraft/world/entity/EntityType$Builder; b
	noSummon ()Lnet/minecraft/world/entity/EntityType$Builder; a
	of (Lnet/minecraft/world/entity/EntityType$EntityFactory;Lnet/minecraft/world/entity/MobCategory;)Lnet/minecraft/world/entity/EntityType$Builder; a
	requiredFeatures ([Lnet/minecraft/world/flag/FeatureFlag;)Lnet/minecraft/world/entity/EntityType$Builder; a
	sized (FF)Lnet/minecraft/world/entity/EntityType$Builder; a
	updateInterval (I)Lnet/minecraft/world/entity/EntityType$Builder; b
net/minecraft/world/entity/EntityType$EntityFactory bfn$b
net/minecraft/world/entity/EquipmentSlot bfo
	$VALUES k
	CHEST e
	FEET c
	HEAD f
	LEGS d
	MAINHAND a
	OFFHAND b
	filterFlag i
	index h
	name j
	type g
	$values ()[Lnet/minecraft/world/entity/EquipmentSlot; f
	byName (Ljava/lang/String;)Lnet/minecraft/world/entity/EquipmentSlot; a
	byTypeAndIndex (Lnet/minecraft/world/entity/EquipmentSlot$Type;I)Lnet/minecraft/world/entity/EquipmentSlot; a
	getFilterFlag ()I c
	getIndex ()I b
	getIndex (I)I a
	getName ()Ljava/lang/String; d
	getType ()Lnet/minecraft/world/entity/EquipmentSlot$Type; a
	isArmor ()Z e
net/minecraft/world/entity/EquipmentSlot$Type bfo$a
	$VALUES c
	ARMOR b
	HAND a
	$values ()[Lnet/minecraft/world/entity/EquipmentSlot$Type; a
net/minecraft/world/entity/ExperienceOrb bfp
	ENTITY_SCAN_PERIOD c
	LIFETIME b
	MAX_FOLLOW_DIST d
	ORB_GROUPS_PER_AREA e
	ORB_MERGE_DISTANCE f
	age g
	count j
	followingPlayer k
	health h
	value i
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	award (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/phys/Vec3;I)V a
	canMerge (Lnet/minecraft/world/entity/ExperienceOrb;)Z a
	canMerge (Lnet/minecraft/world/entity/ExperienceOrb;II)Z a
	defineSynchedData ()V a_
	doWaterSplashEffect ()V bd
	durabilityToXp (I)I c
	getAddEntityPacket ()Lnet/minecraft/network/protocol/Packet; S
	getBlockPosBelowThatAffectsMyMovement ()Lnet/minecraft/core/BlockPos; aE
	getExperienceValue (I)I b
	getIcon ()I k
	getMovementEmission ()Lnet/minecraft/world/entity/Entity$MovementEmission; aS
	getSoundSource ()Lnet/minecraft/sounds/SoundSource; cY
	getValue ()I j
	hurt (Lnet/minecraft/world/damagesource/DamageSource;F)Z a
	isAttackable ()Z cn
	merge (Lnet/minecraft/world/entity/ExperienceOrb;)V b
	playerTouch (Lnet/minecraft/world/entity/player/Player;)V b_
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	repairPlayerItems (Lnet/minecraft/world/entity/player/Player;I)I a
	scanForEntities ()V o
	setUnderwaterMovement ()V p
	tick ()V l
	tryMergeToExisting (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/phys/Vec3;I)Z b
	xpToDurability (I)I d
net/minecraft/world/entity/FlyingMob bfq
	checkFallDamage (DZLnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/BlockPos;)V a
	onClimbable ()Z i_
	travel (Lnet/minecraft/world/phys/Vec3;)V h
net/minecraft/world/entity/GlowSquid bfr
	DATA_DARK_TICKS_REMAINING bX
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	aiStep ()V b_
	checkGlowSquideSpawnRules (Lnet/minecraft/world/entity/EntityType;Lnet/minecraft/world/level/ServerLevelAccessor;Lnet/minecraft/world/entity/MobSpawnType;Lnet/minecraft/core/BlockPos;Lnet/minecraft/util/RandomSource;)Z a
	defineSynchedData ()V a_
	getAmbientSound ()Lnet/minecraft/sounds/SoundEvent; s
	getDarkTicksRemaining ()I w
	getDeathSound ()Lnet/minecraft/sounds/SoundEvent; g_
	getHurtSound (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEvent; d
	getInkParticle ()Lnet/minecraft/core/particles/ParticleOptions; q
	getSquirtSound ()Lnet/minecraft/sounds/SoundEvent; r
	hurt (Lnet/minecraft/world/damagesource/DamageSource;F)Z a
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	setDarkTicks (I)V c
net/minecraft/world/entity/HasCustomInventoryScreen bfs
	openCustomInventoryScreen (Lnet/minecraft/world/entity/player/Player;)V b
net/minecraft/world/entity/HumanoidArm bft
	$VALUES e
	LEFT a
	RIGHT b
	id c
	name d
	$values ()[Lnet/minecraft/world/entity/HumanoidArm; e
	getId ()I a
	getKey ()Ljava/lang/String; b
	getOpposite ()Lnet/minecraft/world/entity/HumanoidArm; d
net/minecraft/world/entity/Interaction bfu
	DATA_HEIGHT_ID d
	DATA_RESPONSE_ID e
	DATA_WIDTH_ID c
	LOGGER b
	TAG_ATTACK h
	TAG_HEIGHT g
	TAG_INTERACTION i
	TAG_RESPONSE j
	TAG_WIDTH f
	attack k
	interaction l
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	canBeHitByProjectile ()Z bn
	defineSynchedData ()V a_
	getDimensions ()Lnet/minecraft/world/entity/EntityDimensions; q
	getDimensions (Lnet/minecraft/world/entity/Pose;)Lnet/minecraft/world/entity/EntityDimensions; a
	getHeight ()F o
	getLastAttacker ()Lnet/minecraft/world/entity/LivingEntity; M_
	getPistonPushReaction ()Lnet/minecraft/world/level/material/PushReaction; l_
	getResponse ()Z p
	getTarget ()Lnet/minecraft/world/entity/LivingEntity; j
	getWidth ()F k
	interact (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResult; a
	isIgnoringBlockTriggers ()Z c_
	isPickable ()Z bo
	makeBoundingBox ()Lnet/minecraft/world/phys/AABB; am
	onSyncedDataUpdated (Lnet/minecraft/network/syncher/EntityDataAccessor;)V a
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	setHeight (F)V s
	setResponse (Z)V a
	setWidth (F)V a
	skipAttackInteraction (Lnet/minecraft/world/entity/Entity;)Z r
	tick ()V l
net/minecraft/world/entity/Interaction$PlayerAction bfu$a
	CODEC a
	player b
	timestamp c
	player ()Ljava/util/UUID; a
	timestamp ()J b
net/minecraft/world/entity/ItemBasedSteering bfv
	MAX_BOOST_TIME b
	MIN_BOOST_TIME a
	boostTime g
	boostTimeAccessor d
	boosting f
	entityData c
	hasSaddleAccessor e
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	boost (Lnet/minecraft/util/RandomSource;)Z a
	boostFactor ()F c
	boostTimeTotal ()I e
	hasSaddle ()Z d
	onSynced ()V a
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	setSaddle (Z)V a
	tickBoost ()V b
net/minecraft/world/entity/ItemSteerable bfw
	boost ()Z a
net/minecraft/world/entity/LerpingModel bfx
	getModelRotationValues ()Ljava/util/Map; a
net/minecraft/world/entity/LightningBolt bfy
	DAMAGE_RADIUS d
	DETECTION_RADIUS e
	START_LIFE c
	blocksSetOnFire k
	cause i
	flashes g
	hitEntities j
	life f
	seed b
	visualOnly h
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	clearCopperOnLightningStrike (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)V b
	defineSynchedData ()V a_
	getBlocksSetOnFire ()I k
	getCause ()Lnet/minecraft/server/level/ServerPlayer; j
	getHitEntities ()Ljava/util/stream/Stream; o
	getSoundSource ()Lnet/minecraft/sounds/SoundSource; cY
	getStrikePosition ()Lnet/minecraft/core/BlockPos; q
	powerLightningRod ()V p
	randomStepCleaningCopper (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)Ljava/util/Optional; c
	randomWalkCleaningCopper (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos$MutableBlockPos;I)V a
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	setCause (Lnet/minecraft/server/level/ServerPlayer;)V b
	setVisualOnly (Z)V a
	shouldRenderAtSqrDistance (D)Z a
	spawnFire (I)V b
	tick ()V l
net/minecraft/world/entity/LivingEntity bfz
	ARMOR_SLOTS i
	ARMOR_SLOT_OFFSET k
	BASE_JUMP_POWER bG
	DAMAGE_SOURCE_TIMEOUT bC
	DATA_ARROW_COUNT_ID bL
	DATA_EFFECT_AMBIENCE_ID bK
	DATA_EFFECT_COLOR_ID bJ
	DATA_HEALTH_ID bI
	DATA_LIVING_ENTITY_FLAGS u
	DATA_STINGER_COUNT_ID bM
	DEATH_DURATION p
	DEFAULT_BASE_GRAVITY o
	DEFAULT_EYE_HEIGHT aD
	EQUIPMENT_SLOT_OFFSET j
	EXTRA_RENDER_CULLING_SIZE_WITH_BIG_HAT aF
	FREE_FALL_EVENTS_PER_ELYTRA_BREAK bF
	HAND_SLOTS h
	LIVING_ENTITY_FLAG_IS_USING r
	LIVING_ENTITY_FLAG_OFF_HAND s
	LIVING_ENTITY_FLAG_SPIN_ATTACK t
	LOGGER b
	MAX_HEAD_ROTATION_RELATIVE_TO_BODY bO
	MAX_LINE_OF_SIGHT_TEST_RANGE bH
	MIN_MOVEMENT_DISTANCE n
	PLAYER_HURT_EXPERIENCE_TIME m
	SLEEPING_DIMENSIONS aE
	SLEEPING_POS_ID bN
	SPEED_MODIFIER_POWDER_SNOW_UUID e
	SPEED_MODIFIER_SOUL_SPEED_UUID d
	SPEED_MODIFIER_SPRINTING bB
	SPEED_MODIFIER_SPRINTING_UUID c
	SWING_DURATION l
	TICKS_PER_ELYTRA_FREE_FALL_EVENT bE
	USE_ITEM_INTERVAL q
	WAIT_TICKS_BEFORE_ITEM_USE_EFFECTS bD
	absorptionAmount cc
	activeEffects bR
	animStep bf
	animStepO bg
	attackAnim aP
	attackStrengthTicker aQ
	attributes bP
	autoSpinAttackTicks bz
	brain bA
	combatTracker bQ
	dead bb
	deathScore bi
	deathTime aN
	discardFriction bU
	effectsDirty bV
	fallFlyTicks by
	hurtDuration aM
	hurtTime aL
	invulnerableDuration aS
	jumping bk
	lastArmorItemStacks bT
	lastClimbablePos ce
	lastDamageSource cf
	lastDamageStamp cg
	lastHandItemStacks bS
	lastHurt bj
	lastHurtByMob bW
	lastHurtByMobTimestamp bX
	lastHurtByPlayer aZ
	lastHurtByPlayerTime ba
	lastHurtMob bY
	lastHurtMobTimestamp bZ
	lastPos cd
	lerpHeadSteps bv
	lerpSteps bo
	lerpX bp
	lerpXRot bt
	lerpY bq
	lerpYRot bs
	lerpZ br
	lyHeadRot bu
	noActionTime bc
	noJumpDelay cb
	oAttackAnim aO
	oRun bd
	removeArrowTime aJ
	removeStingerTime aK
	rotA aU
	rotOffs bh
	run be
	skipDropExperience cj
	speed ca
	swimAmount ch
	swimAmountO ci
	swingTime aI
	swinging aG
	swingingArm aH
	timeOffs aT
	useItem bw
	useItemRemaining bx
	walkAnimation aR
	xxa bl
	yBodyRot aV
	yBodyRotO aW
	yHeadRot aX
	yHeadRotO aY
	yya bm
	zza bn
	actuallyHurt (Lnet/minecraft/world/damagesource/DamageSource;F)V f
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	addEatEffect (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/LivingEntity;)V a
	addEffect (Lnet/minecraft/world/effect/MobEffectInstance;)Z b
	addEffect (Lnet/minecraft/world/effect/MobEffectInstance;Lnet/minecraft/world/entity/Entity;)Z b
	aiStep ()V b_
	animateHurt (F)V m
	areAllEffectsAmbient (Ljava/util/Collection;)Z c
	attackable ()Z fu
	baseTick ()V ao
	blockUsingShield (Lnet/minecraft/world/entity/LivingEntity;)V d
	blockedByShield (Lnet/minecraft/world/entity/LivingEntity;)V e
	brainProvider ()Lnet/minecraft/world/entity/ai/Brain$Provider; dL
	breakItem (Lnet/minecraft/world/item/ItemStack;)V i
	broadcastBreakEvent (Lnet/minecraft/world/InteractionHand;)V d
	broadcastBreakEvent (Lnet/minecraft/world/entity/EquipmentSlot;)V d
	calculateEntityAnimation (Z)V q
	calculateFallDamage (FF)I d
	canAttack (Lnet/minecraft/world/entity/LivingEntity;)Z c
	canAttack (Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/entity/ai/targeting/TargetingConditions;)Z a
	canAttackType (Lnet/minecraft/world/entity/EntityType;)Z a
	canBeAffected (Lnet/minecraft/world/effect/MobEffectInstance;)Z c
	canBeSeenAsEnemy ()Z ek
	canBeSeenByAnyone ()Z el
	canBreatheUnderwater ()Z dN
	canChangeDimensions ()Z cq
	canDisableShield ()Z fB
	canFreeze ()Z dw
	canSpawnSoulSpeedParticle ()Z dO
	canStandOnFluid (Lnet/minecraft/world/level/material/FluidState;)Z a
	canTakeItem (Lnet/minecraft/world/item/ItemStack;)Z f
	causeFallDamage (FFLnet/minecraft/world/damagesource/DamageSource;)Z a
	checkAutoSpinAttack (Lnet/minecraft/world/phys/AABB;Lnet/minecraft/world/phys/AABB;)V a
	checkBedExists ()Z I
	checkFallDamage (DZLnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/BlockPos;)V a
	checkTotemDeathProtection (Lnet/minecraft/world/damagesource/DamageSource;)Z h
	clearSleepingPos ()V fx
	collectEquipmentChanges ()Ljava/util/Map; A
	completeUsingItem ()V Z_
	createEquipmentSlotAccess (Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/entity/EquipmentSlot;)Lnet/minecraft/world/entity/SlotAccess; a
	createLivingAttributes ()Lnet/minecraft/world/entity/ai/attributes/AttributeSupplier$Builder; dM
	createWitherRose (Lnet/minecraft/world/entity/LivingEntity;)V f
	decreaseAirSupply (I)I m
	defineSynchedData ()V a_
	detectEquipmentUpdates ()V z
	die (Lnet/minecraft/world/damagesource/DamageSource;)V a
	dismountVehicle (Lnet/minecraft/world/entity/Entity;)V a
	doAutoAttackOnTouch (Lnet/minecraft/world/entity/LivingEntity;)V g
	doHurtTarget (Lnet/minecraft/world/entity/Entity;)Z z
	doPush (Lnet/minecraft/world/entity/Entity;)V A
	doesEmitEquipEvent (Lnet/minecraft/world/entity/EquipmentSlot;)Z a
	dropAllDeathLoot (Lnet/minecraft/world/damagesource/DamageSource;)V g
	dropCustomDeathLoot (Lnet/minecraft/world/damagesource/DamageSource;IZ)V a
	dropEquipment ()V eu
	dropExperience ()V ev
	dropFromLootTable (Lnet/minecraft/world/damagesource/DamageSource;Z)V a
	eat (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/item/ItemStack;)Lnet/minecraft/world/item/ItemStack; a
	entityEventForEquipmentBreak (Lnet/minecraft/world/entity/EquipmentSlot;)B g
	equipmentHasChanged (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/item/ItemStack;)Z a
	forceAddEffect (Lnet/minecraft/world/effect/MobEffectInstance;Lnet/minecraft/world/entity/Entity;)V c
	getAbsorptionAmount ()F ff
	getActiveEffects ()Ljava/util/Collection; eo
	getActiveEffectsMap ()Ljava/util/Map; ep
	getArmorCoverPercentage ()F eQ
	getArmorSlots ()Ljava/lang/Iterable; bJ
	getArmorValue ()I eF
	getArrowCount ()I eJ
	getAttackAnim (F)F x
	getAttribute (Lnet/minecraft/world/entity/ai/attributes/Attribute;)Lnet/minecraft/world/entity/ai/attributes/AttributeInstance; a
	getAttributeBaseValue (Lnet/minecraft/core/Holder;)D b
	getAttributeBaseValue (Lnet/minecraft/world/entity/ai/attributes/Attribute;)D c
	getAttributeValue (Lnet/minecraft/core/Holder;)D a
	getAttributeValue (Lnet/minecraft/world/entity/ai/attributes/Attribute;)D b
	getAttributes ()Lnet/minecraft/world/entity/ai/attributes/AttributeMap; eM
	getBedOrientation ()Lnet/minecraft/core/Direction; fA
	getBlockSpeedFactor ()F aH
	getBoundingBoxForCulling ()Lnet/minecraft/world/phys/AABB; j_
	getBrain ()Lnet/minecraft/world/entity/ai/Brain; dK
	getCombatTracker ()Lnet/minecraft/world/damagesource/CombatTracker; eG
	getCurrentSwingDuration ()I s
	getDamageAfterArmorAbsorb (Lnet/minecraft/world/damagesource/DamageSource;F)F d
	getDamageAfterMagicAbsorb (Lnet/minecraft/world/damagesource/DamageSource;F)F e
	getDeathSound ()Lnet/minecraft/sounds/SoundEvent; g_
	getDimensions (Lnet/minecraft/world/entity/Pose;)Lnet/minecraft/world/entity/EntityDimensions; a
	getDismountPoses ()Lcom/google/common/collect/ImmutableList; fv
	getDrinkingSound (Lnet/minecraft/world/item/ItemStack;)Lnet/minecraft/sounds/SoundEvent; c
	getEatingSound (Lnet/minecraft/world/item/ItemStack;)Lnet/minecraft/sounds/SoundEvent; d
	getEffect (Lnet/minecraft/world/effect/MobEffect;)Lnet/minecraft/world/effect/MobEffectInstance; b
	getEquipmentSlot (I)Lnet/minecraft/world/entity/EquipmentSlot; r
	getEquipmentSlotForItem (Lnet/minecraft/world/item/ItemStack;)Lnet/minecraft/world/entity/EquipmentSlot; h
	getExperienceReward ()I ea
	getEyeHeight (Lnet/minecraft/world/entity/Pose;Lnet/minecraft/world/entity/EntityDimensions;)F a
	getFallDamageSound (I)Lnet/minecraft/sounds/SoundEvent; d
	getFallFlyingTicks ()I fs
	getFallSounds ()Lnet/minecraft/world/entity/LivingEntity$Fallsounds; eC
	getFluidFallingAdjustedMovement (DZLnet/minecraft/world/phys/Vec3;)Lnet/minecraft/world/phys/Vec3; a
	getFlyingSpeed ()F eZ
	getFrictionInfluencedSpeed (F)F z
	getHealth ()F er
	getHurtDir ()F eB
	getHurtSound (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEvent; d
	getItemBySlot (Lnet/minecraft/world/entity/EquipmentSlot;)Lnet/minecraft/world/item/ItemStack; c
	getItemInHand (Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/item/ItemStack; b
	getJumpBoostPower ()F eV
	getJumpPower ()F eU
	getKillCredit ()Lnet/minecraft/world/entity/LivingEntity; eH
	getLastArmorItem (Lnet/minecraft/world/entity/EquipmentSlot;)Lnet/minecraft/world/item/ItemStack; e
	getLastAttacker ()Lnet/minecraft/world/entity/LivingEntity; M_
	getLastClimbablePos ()Ljava/util/Optional; eD
	getLastDamageSource ()Lnet/minecraft/world/damagesource/DamageSource; et
	getLastHandItem (Lnet/minecraft/world/entity/EquipmentSlot;)Lnet/minecraft/world/item/ItemStack; f
	getLastHurtByMob ()Lnet/minecraft/world/entity/LivingEntity; ed
	getLastHurtByMobTimestamp ()I ee
	getLastHurtMob ()Lnet/minecraft/world/entity/LivingEntity; ef
	getLastHurtMobTimestamp ()I eg
	getLocalBoundsForPose (Lnet/minecraft/world/entity/Pose;)Lnet/minecraft/world/phys/AABB; g
	getLootTable ()Lnet/minecraft/resources/ResourceLocation; ew
	getLootTableSeed ()J ex
	getMainArm ()Lnet/minecraft/world/entity/HumanoidArm; fh
	getMainHandItem ()Lnet/minecraft/world/item/ItemStack; eO
	getMaxHealth ()F eI
	getMeleeAttackReferencePosition ()Lnet/minecraft/world/phys/Vec3; eA
	getMobType ()Lnet/minecraft/world/entity/MobType; eN
	getNoActionTime ()I eh
	getOffhandItem ()Lnet/minecraft/world/item/ItemStack; eP
	getProjectile (Lnet/minecraft/world/item/ItemStack;)Lnet/minecraft/world/item/ItemStack; g
	getRandom ()Lnet/minecraft/util/RandomSource; ec
	getRelativePortalPosition (Lnet/minecraft/core/Direction$Axis;Lnet/minecraft/BlockUtil$FoundRectangle;)Lnet/minecraft/world/phys/Vec3; a
	getRiddenInput (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/phys/Vec3;)Lnet/minecraft/world/phys/Vec3; b
	getRiddenSpeed (Lnet/minecraft/world/entity/player/Player;)F e
	getScale ()F dV
	getSleepingPos ()Ljava/util/Optional; fw
	getSlot (I)Lnet/minecraft/world/entity/SlotAccess; a_
	getSoundVolume ()F eR
	getSpeed ()F fa
	getStandingEyeHeight (Lnet/minecraft/world/entity/Pose;Lnet/minecraft/world/entity/EntityDimensions;)F b
	getStingerCount ()I eK
	getSwimAmount (F)F a
	getTicksUsingItem ()I fm
	getUseItem ()Lnet/minecraft/world/item/ItemStack; fk
	getUseItemRemainingTicks ()I fl
	getUsedItemHand ()Lnet/minecraft/world/InteractionHand; fj
	getViewYRot (F)F h
	getVisibilityPercent (Lnet/minecraft/world/entity/Entity;)D y
	getVisualRotationYInDegrees ()F dz
	getVoicePitch ()F eS
	getWaterSlowDown ()F eY
	getYHeadRot ()F cm
	goDownInWater ()V eX
	handleDamageEvent (Lnet/minecraft/world/damagesource/DamageSource;)V c
	handleEntityEvent (B)V b
	handleEquipmentChanges (Ljava/util/Map;)V b
	handleHandSwap (Ljava/util/Map;)V a
	handleOnClimbable (Lnet/minecraft/world/phys/Vec3;)Lnet/minecraft/world/phys/Vec3; j
	handleRelativeFrictionAndCalculateMovement (Lnet/minecraft/world/phys/Vec3;F)Lnet/minecraft/world/phys/Vec3; a
	hasEffect (Lnet/minecraft/world/effect/MobEffect;)Z a
	hasItemInSlot (Lnet/minecraft/world/entity/EquipmentSlot;)Z b
	hasLineOfSight (Lnet/minecraft/world/entity/Entity;)Z B
	heal (F)V s
	hurt (Lnet/minecraft/world/damagesource/DamageSource;F)Z a
	hurtArmor (Lnet/minecraft/world/damagesource/DamageSource;F)V b
	hurtCurrentlyUsedShield (F)V u
	hurtHelmet (Lnet/minecraft/world/damagesource/DamageSource;F)V c
	increaseAirSupply (I)I n
	indicateDamage (DD)V a
	isAffectedByFluids ()Z dW
	isAffectedByPotions ()Z ft
	isAlive ()Z bs
	isAlwaysExperienceDropper ()Z eb
	isAutoSpinAttack ()Z fe
	isBaby ()Z h_
	isBlocking ()Z fp
	isCurrentlyGlowing ()Z ca
	isDamageSourceBlocked (Lnet/minecraft/world/damagesource/DamageSource;)Z f
	isDeadOrDying ()Z es
	isFallFlying ()Z fr
	isHolding (Ljava/util/function/Predicate;)Z b
	isHolding (Lnet/minecraft/world/item/Item;)Z b
	isImmobile ()Z eT
	isInWall ()Z bt
	isInvertedHealAndHarm ()Z eq
	isPickable ()Z bo
	isPushable ()Z bp
	isSensitiveToWater ()Z fb
	isSleeping ()Z fy
	isSuppressingSlidingDownLadder ()Z fq
	isUsingItem ()Z fi
	isVisuallySwimming ()Z bX
	jumpFromGround ()V eW
	jumpInLiquid (Lnet/minecraft/tags/TagKey;)V c
	kill ()V ah
	knockback (DDD)V q
	lerpHeadTo (FI)V a
	lerpTo (DDDFFIZ)V a
	lookAt (Lnet/minecraft/commands/arguments/EntityAnchorArgument$Anchor;Lnet/minecraft/world/phys/Vec3;)V a
	makeBrain (Lcom/mojang/serialization/Dynamic;)Lnet/minecraft/world/entity/ai/Brain; a
	makePoofParticles ()V x
	maxUpStep ()F dC
	onBelowWorld ()V ax
	onChangedBlock (Lnet/minecraft/core/BlockPos;)V c
	onClimbable ()Z i_
	onEffectAdded (Lnet/minecraft/world/effect/MobEffectInstance;Lnet/minecraft/world/entity/Entity;)V a
	onEffectRemoved (Lnet/minecraft/world/effect/MobEffectInstance;)V a
	onEffectUpdated (Lnet/minecraft/world/effect/MobEffectInstance;ZLnet/minecraft/world/entity/Entity;)V a
	onEnterCombat ()V Q_
	onEquipItem (Lnet/minecraft/world/entity/EquipmentSlot;Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/item/ItemStack;)V a
	onItemPickup (Lnet/minecraft/world/entity/item/ItemEntity;)V a
	onLeaveCombat ()V F_
	onSoulSpeedBlock ()Z dQ
	onSyncedDataUpdated (Lnet/minecraft/network/syncher/EntityDataAccessor;)V a
	playBlockFallSound ()V eE
	playHurtSound (Lnet/minecraft/world/damagesource/DamageSource;)V e
	push (Lnet/minecraft/world/entity/Entity;)V g
	pushEntities ()V fd
	randomTeleport (DDDZ)Z b
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	recreateFromPacket (Lnet/minecraft/network/protocol/game/ClientboundAddEntityPacket;)V a
	releaseUsingItem ()V fn
	remove (Lnet/minecraft/world/entity/Entity$RemovalReason;)V a
	removeAllEffects ()Z en
	removeEffect (Lnet/minecraft/world/effect/MobEffect;)Z d
	removeEffectNoUpdate (Lnet/minecraft/world/effect/MobEffect;)Lnet/minecraft/world/effect/MobEffectInstance; c
	removeEffectParticles ()V em
	removeFrost ()V dT
	removeSoulSpeed ()V dR
	resetForwardDirectionOfRelativePortalPosition (Lnet/minecraft/world/phys/Vec3;)Lnet/minecraft/world/phys/Vec3; i
	rideTick ()V bv
	sendEffectToPassengers (Lnet/minecraft/world/effect/MobEffectInstance;)V d
	serverAiStep ()V fc
	setAbsorptionAmount (F)V y
	setArrowCount (I)V p
	setDiscardFriction (Z)V p
	setHealth (F)V t
	setItemInHand (Lnet/minecraft/world/InteractionHand;Lnet/minecraft/world/item/ItemStack;)V a
	setItemSlot (Lnet/minecraft/world/entity/EquipmentSlot;Lnet/minecraft/world/item/ItemStack;)V a
	setJumping (Z)V r
	setLastArmorItem (Lnet/minecraft/world/entity/EquipmentSlot;Lnet/minecraft/world/item/ItemStack;)V b
	setLastHandItem (Lnet/minecraft/world/entity/EquipmentSlot;Lnet/minecraft/world/item/ItemStack;)V c
	setLastHurtByMob (Lnet/minecraft/world/entity/LivingEntity;)V a
	setLastHurtByPlayer (Lnet/minecraft/world/entity/player/Player;)V c
	setLastHurtMob (Lnet/minecraft/world/entity/Entity;)V x
	setLivingEntityFlag (IZ)V c
	setNoActionTime (I)V o
	setPosToBed (Lnet/minecraft/core/BlockPos;)V a
	setRecordPlayingNearby (Lnet/minecraft/core/BlockPos;Z)V a
	setSleepingPos (Lnet/minecraft/core/BlockPos;)V g
	setSpeed (F)V w
	setSprinting (Z)V g
	setStingerCount (I)V q
	setYBodyRot (F)V o
	setYHeadRot (F)V n
	shouldDiscardFriction ()Z ei
	shouldDropExperience ()Z dY
	shouldDropLoot ()Z dZ
	shouldRemoveSoulSpeed (Lnet/minecraft/world/level/block/state/BlockState;)Z c
	shouldShowName ()Z cz
	shouldTriggerItemUseEffects ()Z E
	skipDropExperience ()V ey
	spawnItemParticles (Lnet/minecraft/world/item/ItemStack;I)V a
	spawnSoulSpeedParticle ()V dP
	startSleeping (Lnet/minecraft/core/BlockPos;)V b
	startUsingItem (Lnet/minecraft/world/InteractionHand;)V c
	stopRiding ()V Y
	stopSleeping ()V fz
	stopUsingItem ()V fo
	swapHandItems ()V y
	swing (Lnet/minecraft/world/InteractionHand;)V a
	swing (Lnet/minecraft/world/InteractionHand;Z)V a
	take (Lnet/minecraft/world/entity/Entity;I)V a
	tick ()V l
	tickDeath ()V dX
	tickEffects ()V ej
	tickHeadTurn (FF)F e
	tickRidden (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/phys/Vec3;)V a
	trapdoorUsableAsLadder (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Z c
	travel (Lnet/minecraft/world/phys/Vec3;)V h
	travelRidden (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/phys/Vec3;)V c
	triggerItemUseEffects (Lnet/minecraft/world/item/ItemStack;I)V b
	tryAddFrost ()V dU
	tryAddSoulSpeed ()V dS
	updateEffectVisibility ()V fg
	updateFallFlying ()V C
	updateGlowingStatus ()V q
	updateInvisibilityStatus ()V F
	updateSwimAmount ()V G
	updateSwingTime ()V eL
	updateUsingItem (Lnet/minecraft/world/item/ItemStack;)V a
	updateWalkAnimation (F)V v
	updatingUsingItem ()V D
	verifyEquippedItem (Lnet/minecraft/world/item/ItemStack;)V e
	wasExperienceConsumed ()Z ez
net/minecraft/world/entity/LivingEntity$Fallsounds bfz$a
	big b
	small a
	big ()Lnet/minecraft/sounds/SoundEvent; b
	small ()Lnet/minecraft/sounds/SoundEvent; a
net/minecraft/world/entity/Marker bga
	DATA_TAG b
	data c
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	addPassenger (Lnet/minecraft/world/entity/Entity;)V m
	canAddPassenger (Lnet/minecraft/world/entity/Entity;)Z o
	couldAcceptPassenger ()Z bB
	defineSynchedData ()V a_
	getAddEntityPacket ()Lnet/minecraft/network/protocol/Packet; S
	getPistonPushReaction ()Lnet/minecraft/world/level/material/PushReaction; l_
	isIgnoringBlockTriggers ()Z c_
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	tick ()V l
net/minecraft/world/entity/Mob bgb
	DATA_MOB_FLAGS_ID b
	DEFAULT_EQUIPMENT_DROP_CHANCE bF
	ITEM_PICKUP_REACH bS
	LEASH_TAG bE
	MAX_ENCHANTED_ARMOR_CHANCE bC
	MAX_ENCHANTED_WEAPON_CHANCE bD
	MAX_PICKUP_LOOT_CHANCE bB
	MAX_WEARING_ARMOR_CHANCE g
	MOB_FLAG_AGGRESSIVE e
	MOB_FLAG_LEFTHANDED d
	MOB_FLAG_NO_AI c
	PICKUP_REACH f
	PRESERVE_ITEM_DROP_CHANCE bG
	UPDATE_GOAL_SELECTOR_EVERY_N_TICKS bH
	ambientSoundTime bI
	armorDropChances bR
	armorItems bX
	bodyRotationControl bT
	canPickUpLoot bY
	delayedLeashHolderId ce
	goalSelector bO
	handDropChances bQ
	handItems bW
	jumpControl bM
	leashHolder cd
	leashInfoTag cf
	lookControl bK
	lootTable cb
	lootTableSeed cc
	moveControl bL
	navigation bN
	pathfindingMalus ca
	persistenceRequired bZ
	restrictCenter cg
	restrictRadius ch
	sensing bV
	target bU
	targetSelector bP
	xpReward bJ
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	aiStep ()V b_
	ate ()V L
	baseTick ()V ao
	canAttackType (Lnet/minecraft/world/entity/EntityType;)Z a
	canBeLeashed (Lnet/minecraft/world/entity/player/Player;)Z a
	canFireProjectileWeapon (Lnet/minecraft/world/item/ProjectileWeaponItem;)Z a
	canHoldItem (Lnet/minecraft/world/item/ItemStack;)Z j
	canPickUpLoot ()Z fG
	canReplaceCurrentItem (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/item/ItemStack;)Z b
	canReplaceEqualItem (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/item/ItemStack;)Z c
	canTakeItem (Lnet/minecraft/world/item/ItemStack;)Z f
	checkAndHandleImportantInteractions (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResult; c
	checkDespawn ()V du
	checkMobSpawnRules (Lnet/minecraft/world/entity/EntityType;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/world/entity/MobSpawnType;Lnet/minecraft/core/BlockPos;Lnet/minecraft/util/RandomSource;)Z a
	checkSpawnObstruction (Lnet/minecraft/world/level/LevelReader;)Z a
	checkSpawnRules (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/world/entity/MobSpawnType;)Z a
	clearRestriction ()V fL
	convertTo (Lnet/minecraft/world/entity/EntityType;Z)Lnet/minecraft/world/entity/Mob; a
	createBodyControl ()Lnet/minecraft/world/entity/ai/control/BodyRotationControl; D
	createMobAttributes ()Lnet/minecraft/world/entity/ai/attributes/AttributeSupplier$Builder; y
	createNavigation (Lnet/minecraft/world/level/Level;)Lnet/minecraft/world/entity/ai/navigation/PathNavigation; b
	customServerAiStep ()V W
	defineSynchedData ()V a_
	doHurtTarget (Lnet/minecraft/world/entity/Entity;)Z z
	dropCustomDeathLoot (Lnet/minecraft/world/damagesource/DamageSource;IZ)V a
	dropFromLootTable (Lnet/minecraft/world/damagesource/DamageSource;Z)V a
	dropLeash (ZZ)V a
	enchantSpawnedArmor (Lnet/minecraft/util/RandomSource;FLnet/minecraft/world/entity/EquipmentSlot;)V a
	enchantSpawnedWeapon (Lnet/minecraft/util/RandomSource;F)V a
	equipItemIfPossible (Lnet/minecraft/world/item/ItemStack;)Lnet/minecraft/world/item/ItemStack; i
	finalizeSpawn (Lnet/minecraft/world/level/ServerLevelAccessor;Lnet/minecraft/world/DifficultyInstance;Lnet/minecraft/world/entity/MobSpawnType;Lnet/minecraft/world/entity/SpawnGroupData;Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/world/entity/SpawnGroupData; a
	getAmbientSound ()Lnet/minecraft/sounds/SoundEvent; s
	getAmbientSoundInterval ()I M
	getArmorSlots ()Ljava/lang/Iterable; bJ
	getControllingPassenger ()Lnet/minecraft/world/entity/LivingEntity; cL
	getDefaultLootTable ()Lnet/minecraft/resources/ResourceLocation; Q
	getEquipmentDropChance (Lnet/minecraft/world/entity/EquipmentSlot;)F f
	getEquipmentForSlot (Lnet/minecraft/world/entity/EquipmentSlot;I)Lnet/minecraft/world/item/Item; a
	getExperienceReward ()I ea
	getHandSlots ()Ljava/lang/Iterable; bI
	getHeadRotSpeed ()I fD
	getItemBySlot (Lnet/minecraft/world/entity/EquipmentSlot;)Lnet/minecraft/world/item/ItemStack; c
	getJumpControl ()Lnet/minecraft/world/entity/ai/control/JumpControl; I
	getLeashHolder ()Lnet/minecraft/world/entity/Entity; fP
	getLookControl ()Lnet/minecraft/world/entity/ai/control/LookControl; E
	getLootTable ()Lnet/minecraft/resources/ResourceLocation; ew
	getLootTableSeed ()J ex
	getMainArm ()Lnet/minecraft/world/entity/HumanoidArm; fh
	getMaxFallDistance ()I cr
	getMaxHeadXRot ()I X
	getMaxHeadYRot ()I fC
	getMaxSpawnClusterSize ()I fE
	getMeleeAttackRangeSqr (Lnet/minecraft/world/entity/LivingEntity;)D i
	getMoveControl ()Lnet/minecraft/world/entity/ai/control/MoveControl; G
	getNavigation ()Lnet/minecraft/world/entity/ai/navigation/PathNavigation; J
	getPathfindingMalus (Lnet/minecraft/world/level/pathfinder/BlockPathTypes;)F a
	getPerceivedTargetDistanceSquareForMeleeAttack (Lnet/minecraft/world/entity/LivingEntity;)D j
	getPickResult ()Lnet/minecraft/world/item/ItemStack; dv
	getPickupReach ()Lnet/minecraft/core/Vec3i; R
	getRestrictCenter ()Lnet/minecraft/core/BlockPos; fJ
	getRestrictRadius ()F fK
	getSensing ()Lnet/minecraft/world/entity/ai/sensing/Sensing; K
	getTarget ()Lnet/minecraft/world/entity/LivingEntity; j
	handleEntityEvent (B)V b
	hasRestriction ()Z fM
	interact (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResult; a
	isAggressive ()Z fS
	isEffectiveAi ()Z cV
	isLeashed ()Z fO
	isLeftHanded ()Z fR
	isMaxGroupSizeReached (I)Z d
	isNoAi ()Z fQ
	isPersistenceRequired ()Z fH
	isSunBurnTick ()Z fT
	isWithinMeleeAttackRange (Lnet/minecraft/world/entity/LivingEntity;)Z k
	isWithinRestriction ()Z fI
	isWithinRestriction (Lnet/minecraft/core/BlockPos;)Z a
	jumpInLiquid (Lnet/minecraft/tags/TagKey;)V c
	lookAt (Lnet/minecraft/world/entity/Entity;FF)V a
	maybeDisableShield (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/item/ItemStack;)V a
	mobInteract (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResult; b
	onOffspringSpawnedFromEgg (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/entity/Mob;)V a
	onPathfindingDone ()V C
	onPathfindingStart ()V A
	pickUpItem (Lnet/minecraft/world/entity/item/ItemEntity;)V b
	playAmbientSound ()V N
	playHurtSound (Lnet/minecraft/world/damagesource/DamageSource;)V e
	populateDefaultEquipmentEnchantments (Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/DifficultyInstance;)V b
	populateDefaultEquipmentSlots (Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/DifficultyInstance;)V a
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	registerGoals ()V x
	removeAfterChangingDimensions ()V cp
	removeAllGoals (Ljava/util/function/Predicate;)V c
	removeFreeWill ()V fU
	removeWhenFarAway (D)Z h
	requiresCustomPersistence ()Z T
	resetAmbientSoundTime ()V q
	restoreLeashFromSave ()V fV
	restrictTo (Lnet/minecraft/core/BlockPos;I)V a
	rotlerp (FFF)F a
	sendDebugPackets ()V V
	serverAiStep ()V fc
	setAggressive (Z)V v
	setBaby (Z)V a
	setCanPickUpLoot (Z)V s
	setDelayedLeashHolderId (I)V r
	setDropChance (Lnet/minecraft/world/entity/EquipmentSlot;F)V a
	setGuaranteedDrop (Lnet/minecraft/world/entity/EquipmentSlot;)V e
	setItemSlot (Lnet/minecraft/world/entity/EquipmentSlot;Lnet/minecraft/world/item/ItemStack;)V a
	setItemSlotAndDropWhenKilled (Lnet/minecraft/world/entity/EquipmentSlot;Lnet/minecraft/world/item/ItemStack;)V b
	setLeashedTo (Lnet/minecraft/world/entity/Entity;Z)V b
	setLeftHanded (Z)V u
	setNoAi (Z)V t
	setPathfindingMalus (Lnet/minecraft/world/level/pathfinder/BlockPathTypes;F)V a
	setPersistenceRequired ()V fF
	setSpeed (F)V w
	setTarget (Lnet/minecraft/world/entity/LivingEntity;)V h
	setXxa (F)V B
	setYya (F)V A
	setZza (F)V z
	shouldDespawnInPeaceful ()Z U
	shouldPassengersInheritMalus ()Z z
	spawnAnim ()V O
	startRiding (Lnet/minecraft/world/entity/Entity;Z)Z a
	tick ()V l
	tickHeadTurn (FF)F e
	tickLeash ()V fN
	updateControlFlags ()V P
	wantsToPickUp (Lnet/minecraft/world/item/ItemStack;)Z k
net/minecraft/world/entity/MobCategory bgc
	$VALUES p
	AMBIENT c
	AXOLOTLS d
	CODEC i
	CREATURE b
	MISC h
	MONSTER a
	UNDERGROUND_WATER_CREATURE e
	WATER_AMBIENT g
	WATER_CREATURE f
	despawnDistance o
	isFriendly k
	isPersistent l
	max j
	name m
	noDespawnDistance n
	$values ()[Lnet/minecraft/world/entity/MobCategory; h
	getDespawnDistance ()I f
	getMaxInstancesPerChunk ()I b
	getName ()Ljava/lang/String; a
	getNoDespawnDistance ()I g
	getSerializedName ()Ljava/lang/String; c
	isFriendly ()Z d
	isPersistent ()Z e
net/minecraft/world/entity/MobSpawnType bgd
	$VALUES q
	BREEDING e
	BUCKET l
	CHUNK_GENERATION b
	COMMAND n
	CONVERSION i
	DISPENSER o
	EVENT h
	JOCKEY g
	MOB_SUMMONED f
	NATURAL a
	PATROL p
	REINFORCEMENT j
	SPAWNER c
	SPAWN_EGG m
	STRUCTURE d
	TRIGGERED k
	$values ()[Lnet/minecraft/world/entity/MobSpawnType; a
net/minecraft/world/entity/MobType bge
	ARTHROPOD c
	ILLAGER d
	UNDEAD b
	UNDEFINED a
	WATER e
net/minecraft/world/entity/MoverType bgf
	$VALUES f
	PISTON c
	PLAYER b
	SELF a
	SHULKER e
	SHULKER_BOX d
	$values ()[Lnet/minecraft/world/entity/MoverType; a
net/minecraft/world/entity/NeutralMob bgg
	TAG_ANGER_TIME a_
	TAG_ANGRY_AT b_
	addPersistentAngerSaveData (Lnet/minecraft/nbt/CompoundTag;)V c
	canAttack (Lnet/minecraft/world/entity/LivingEntity;)Z c
	forgetCurrentTargetAndRefreshUniversalAnger ()V T_
	getLastHurtByMob ()Lnet/minecraft/world/entity/LivingEntity; ed
	getPersistentAngerTarget ()Ljava/util/UUID; b
	getRemainingPersistentAngerTime ()I a
	getTarget ()Lnet/minecraft/world/entity/LivingEntity; j
	isAngry ()Z S_
	isAngryAt (Lnet/minecraft/world/entity/LivingEntity;)Z a_
	isAngryAtAllPlayers (Lnet/minecraft/world/level/Level;)Z a_
	playerDied (Lnet/minecraft/world/entity/player/Player;)V a_
	readPersistentAngerSaveData (Lnet/minecraft/world/level/Level;Lnet/minecraft/nbt/CompoundTag;)V a
	setLastHurtByMob (Lnet/minecraft/world/entity/LivingEntity;)V a
	setLastHurtByPlayer (Lnet/minecraft/world/entity/player/Player;)V c
	setPersistentAngerTarget (Ljava/util/UUID;)V a
	setRemainingPersistentAngerTime (I)V a
	setTarget (Lnet/minecraft/world/entity/LivingEntity;)V h
	startPersistentAngerTimer ()V c
	stopBeingAngry ()V O_
	updatePersistentAnger (Lnet/minecraft/server/level/ServerLevel;Z)V a
net/minecraft/world/entity/OwnableEntity bgh
	getOwner ()Lnet/minecraft/world/entity/LivingEntity; I_
	getOwnerUUID ()Ljava/util/UUID; U_
	level ()Lnet/minecraft/world/level/EntityGetter; e
net/minecraft/world/entity/PathfinderMob bgi
	DEFAULT_WALK_TARGET_VALUE bS
	checkSpawnRules (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/world/entity/MobSpawnType;)Z a
	followLeashSpeed ()D fX
	getWalkTargetValue (Lnet/minecraft/core/BlockPos;)F h
	getWalkTargetValue (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/LevelReader;)F a
	isPathFinding ()Z fV
	onLeashDistance (F)V C
	shouldStayCloseToLeashHolder ()Z fW
	tickLeash ()V fN
net/minecraft/world/entity/PlayerRideable bgj
net/minecraft/world/entity/PlayerRideableJumping bgk
	canJump ()Z a
	getJumpCooldown ()I W_
	handleStartJump (I)V c
	handleStopJump ()V b
	onPlayerJump (I)V b
net/minecraft/world/entity/Pose bgl
	$VALUES p
	CROAKING i
	CROUCHING f
	DIGGING o
	DYING h
	EMERGING n
	FALL_FLYING b
	LONG_JUMPING g
	ROARING l
	SITTING k
	SLEEPING c
	SNIFFING m
	SPIN_ATTACK e
	STANDING a
	SWIMMING d
	USING_TONGUE j
	$values ()[Lnet/minecraft/world/entity/Pose; a
net/minecraft/world/entity/PowerableMob bgm
	isPowered ()Z a
net/minecraft/world/entity/RelativeMovement bgn
	$VALUES i
	ALL f
	ROTATION g
	X a
	X_ROT e
	Y b
	Y_ROT d
	Z c
	bit h
	$values ()[Lnet/minecraft/world/entity/RelativeMovement; b
	getMask ()I a
	isSet (I)Z b
	pack (Ljava/util/Set;)I a
	unpack (I)Ljava/util/Set; a
net/minecraft/world/entity/ReputationEventHandler bgo
	onReputationEventFrom (Lnet/minecraft/world/entity/ai/village/ReputationEventType;Lnet/minecraft/world/entity/Entity;)V a
net/minecraft/world/entity/RiderShieldingMount bgp
	getRiderShieldingHeight ()D d
net/minecraft/world/entity/Saddleable bgq
	equipSaddle (Lnet/minecraft/sounds/SoundSource;)V a
	getSaddleSoundEvent ()Lnet/minecraft/sounds/SoundEvent; R_
	isSaddleable ()Z g
	isSaddled ()Z i
net/minecraft/world/entity/Shearable bgr
	readyForShearing ()Z a
	shear (Lnet/minecraft/sounds/SoundSource;)V a
net/minecraft/world/entity/SlotAccess bgs
	NULL b
	forContainer (Lnet/minecraft/world/Container;I)Lnet/minecraft/world/entity/SlotAccess; a
	forContainer (Lnet/minecraft/world/Container;ILjava/util/function/Predicate;)Lnet/minecraft/world/entity/SlotAccess; a
	forEquipmentSlot (Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/entity/EquipmentSlot;)Lnet/minecraft/world/entity/SlotAccess; a
	forEquipmentSlot (Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/entity/EquipmentSlot;Ljava/util/function/Predicate;)Lnet/minecraft/world/entity/SlotAccess; a
	get ()Lnet/minecraft/world/item/ItemStack; a
	set (Lnet/minecraft/world/item/ItemStack;)Z a
net/minecraft/world/entity/SpawnGroupData bgt
net/minecraft/world/entity/SpawnPlacements bgu
	DATA_BY_TYPE a
	checkSpawnRules (Lnet/minecraft/world/entity/EntityType;Lnet/minecraft/world/level/ServerLevelAccessor;Lnet/minecraft/world/entity/MobSpawnType;Lnet/minecraft/core/BlockPos;Lnet/minecraft/util/RandomSource;)Z a
	getHeightmapType (Lnet/minecraft/world/entity/EntityType;)Lnet/minecraft/world/level/levelgen/Heightmap$Types; b
	getPlacementType (Lnet/minecraft/world/entity/EntityType;)Lnet/minecraft/world/entity/SpawnPlacements$Type; a
	register (Lnet/minecraft/world/entity/EntityType;Lnet/minecraft/world/entity/SpawnPlacements$Type;Lnet/minecraft/world/level/levelgen/Heightmap$Types;Lnet/minecraft/world/entity/SpawnPlacements$SpawnPredicate;)V a
net/minecraft/world/entity/SpawnPlacements$Data bgu$a
	heightMap a
	placement b
	predicate c
net/minecraft/world/entity/SpawnPlacements$SpawnPredicate bgu$b
net/minecraft/world/entity/SpawnPlacements$Type bgu$c
	$VALUES e
	IN_LAVA d
	IN_WATER b
	NO_RESTRICTIONS c
	ON_GROUND a
	$values ()[Lnet/minecraft/world/entity/SpawnPlacements$Type; a
net/minecraft/world/entity/TamableAnimal bgv
	DATA_FLAGS_ID bT
	DATA_OWNERUUID_ID bU
	orderedToSit bW
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	canAttack (Lnet/minecraft/world/entity/LivingEntity;)Z c
	canBeLeashed (Lnet/minecraft/world/entity/player/Player;)Z a
	defineSynchedData ()V a_
	die (Lnet/minecraft/world/damagesource/DamageSource;)V a
	getOwnerUUID ()Ljava/util/UUID; U_
	getTeam ()Lnet/minecraft/world/scores/Team; cd
	handleEntityEvent (B)V b
	isAlliedTo (Lnet/minecraft/world/entity/Entity;)Z p
	isInSittingPose ()Z w
	isOrderedToSit ()Z fY
	isOwnedBy (Lnet/minecraft/world/entity/LivingEntity;)Z l
	isTame ()Z q
	level ()Lnet/minecraft/world/level/EntityGetter; e
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	reassessTameGoals ()V r
	setInSittingPose (Z)V y
	setOrderedToSit (Z)V z
	setOwnerUUID (Ljava/util/UUID;)V b
	setTame (Z)V x
	spawnTamingParticles (Z)V w
	tame (Lnet/minecraft/world/entity/player/Player;)V f
	wantsToAttack (Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/entity/LivingEntity;)Z a
net/minecraft/world/entity/Targeting bgw
	getTarget ()Lnet/minecraft/world/entity/LivingEntity; j
net/minecraft/world/entity/TraceableEntity bgx
	getOwner ()Lnet/minecraft/world/entity/Entity; v
net/minecraft/world/entity/VariantHolder bgy
	getVariant ()Ljava/lang/Object; c
	setVariant (Ljava/lang/Object;)V a
net/minecraft/world/entity/WalkAnimationState bgz
	position c
	speed b
	speedOld a
	isMoving ()Z c
	position ()F b
	position (F)F c
	setSpeed (F)V a
	speed ()F a
	speed (F)F b
	update (FF)V a
net/minecraft/world/entity/ai/Brain bha
	LOGGER a
	SCHEDULE_UPDATE_DELAY c
	activeActivities k
	activityMemoriesToEraseWhenStopped i
	activityRequirements h
	availableBehaviorsByPriority f
	codec b
	coreActivities j
	defaultActivity l
	lastScheduleUpdate m
	memories d
	schedule g
	sensors e
	activityRequirementsAreMet (Lnet/minecraft/world/entity/schedule/Activity;)Z f
	addActivity (Lnet/minecraft/world/entity/schedule/Activity;ILcom/google/common/collect/ImmutableList;)V a
	addActivity (Lnet/minecraft/world/entity/schedule/Activity;Lcom/google/common/collect/ImmutableList;)V a
	addActivityAndRemoveMemoriesWhenStopped (Lnet/minecraft/world/entity/schedule/Activity;Lcom/google/common/collect/ImmutableList;Ljava/util/Set;Ljava/util/Set;)V a
	addActivityAndRemoveMemoryWhenStopped (Lnet/minecraft/world/entity/schedule/Activity;ILcom/google/common/collect/ImmutableList;Lnet/minecraft/world/entity/ai/memory/MemoryModuleType;)V a
	addActivityWithConditions (Lnet/minecraft/world/entity/schedule/Activity;Lcom/google/common/collect/ImmutableList;Ljava/util/Set;)V a
	checkMemory (Lnet/minecraft/world/entity/ai/memory/MemoryModuleType;Lnet/minecraft/world/entity/ai/memory/MemoryStatus;)Z a
	clearMemories ()V a
	codec (Ljava/util/Collection;Ljava/util/Collection;)Lcom/mojang/serialization/Codec; b
	copyWithoutBehaviors ()Lnet/minecraft/world/entity/ai/Brain; i
	createPriorityPairs (ILcom/google/common/collect/ImmutableList;)Lcom/google/common/collect/ImmutableList; a
	eraseMemoriesForOtherActivitesThan (Lnet/minecraft/world/entity/schedule/Activity;)V e
	eraseMemory (Lnet/minecraft/world/entity/ai/memory/MemoryModuleType;)V b
	forgetOutdatedMemories ()V k
	getActiveActivities ()Ljava/util/Set; d
	getActiveNonCoreActivity ()Ljava/util/Optional; g
	getMemories ()Ljava/util/Map; b
	getMemory (Lnet/minecraft/world/entity/ai/memory/MemoryModuleType;)Ljava/util/Optional; c
	getMemoryInternal (Lnet/minecraft/world/entity/ai/memory/MemoryModuleType;)Ljava/util/Optional; d
	getRunningBehaviors ()Ljava/util/List; e
	getSchedule ()Lnet/minecraft/world/entity/schedule/Schedule; c
	getTimeUntilExpiry (Lnet/minecraft/world/entity/ai/memory/MemoryModuleType;)J e
	hasMemoryValue (Lnet/minecraft/world/entity/ai/memory/MemoryModuleType;)Z a
	isActive (Lnet/minecraft/world/entity/schedule/Activity;)Z c
	isEmptyCollection (Ljava/lang/Object;)Z a
	isMemoryValue (Lnet/minecraft/world/entity/ai/memory/MemoryModuleType;Ljava/lang/Object;)Z b
	memories ()Ljava/util/stream/Stream; j
	provider (Ljava/util/Collection;Ljava/util/Collection;)Lnet/minecraft/world/entity/ai/Brain$Provider; a
	removeAllBehaviors ()V h
	serializeStart (Lcom/mojang/serialization/DynamicOps;)Lcom/mojang/serialization/DataResult; a
	setActiveActivity (Lnet/minecraft/world/entity/schedule/Activity;)V d
	setActiveActivityIfPossible (Lnet/minecraft/world/entity/schedule/Activity;)V a
	setActiveActivityToFirstValid (Ljava/util/List;)V a
	setCoreActivities (Ljava/util/Set;)V a
	setDefaultActivity (Lnet/minecraft/world/entity/schedule/Activity;)V b
	setMemory (Lnet/minecraft/world/entity/ai/memory/MemoryModuleType;Ljava/lang/Object;)V a
	setMemory (Lnet/minecraft/world/entity/ai/memory/MemoryModuleType;Ljava/util/Optional;)V a
	setMemoryInternal (Lnet/minecraft/world/entity/ai/memory/MemoryModuleType;Ljava/util/Optional;)V b
	setMemoryWithExpiry (Lnet/minecraft/world/entity/ai/memory/MemoryModuleType;Ljava/lang/Object;J)V a
	setSchedule (Lnet/minecraft/world/entity/schedule/Schedule;)V a
	startEachNonRunningBehavior (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)V d
	stopAll (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)V b
	tick (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)V a
	tickEachRunningBehavior (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)V e
	tickSensors (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)V c
	updateActivityFromSchedule (JJ)V a
	useDefaultActivity ()V f
net/minecraft/world/entity/ai/Brain$MemoryValue bha$a
	type a
	value b
	createUnchecked (Lnet/minecraft/world/entity/ai/memory/MemoryModuleType;Ljava/util/Optional;)Lnet/minecraft/world/entity/ai/Brain$MemoryValue; a
	serialize (Lcom/mojang/serialization/DynamicOps;Lcom/mojang/serialization/RecordBuilder;)V a
	setMemoryInternal (Lnet/minecraft/world/entity/ai/Brain;)V a
net/minecraft/world/entity/ai/Brain$Provider bha$b
	codec c
	memoryTypes a
	sensorTypes b
	makeBrain (Lcom/mojang/serialization/Dynamic;)Lnet/minecraft/world/entity/ai/Brain; a
net/minecraft/world/entity/ai/attributes/Attribute bhb
	MAX_NAME_LENGTH a
	defaultValue b
	descriptionId d
	syncable c
	getDefaultValue ()D a
	getDescriptionId ()Ljava/lang/String; c
	isClientSyncable ()Z b
	sanitizeValue (D)D a
	setSyncable (Z)Lnet/minecraft/world/entity/ai/attributes/Attribute; a
net/minecraft/world/entity/ai/attributes/AttributeInstance bhc
	attribute a
	baseValue e
	cachedValue g
	dirty f
	modifierById c
	modifiersByOperation b
	onDirty h
	permanentModifiers d
	addModifier (Lnet/minecraft/world/entity/ai/attributes/AttributeModifier;)V e
	addPermanentModifier (Lnet/minecraft/world/entity/ai/attributes/AttributeModifier;)V c
	addTransientModifier (Lnet/minecraft/world/entity/ai/attributes/AttributeModifier;)V b
	calculateValue ()D h
	getAttribute ()Lnet/minecraft/world/entity/ai/attributes/Attribute; a
	getBaseValue ()D b
	getModifier (Ljava/util/UUID;)Lnet/minecraft/world/entity/ai/attributes/AttributeModifier; a
	getModifiers ()Ljava/util/Set; c
	getModifiers (Lnet/minecraft/world/entity/ai/attributes/AttributeModifier$Operation;)Ljava/util/Set; a
	getModifiersOrEmpty (Lnet/minecraft/world/entity/ai/attributes/AttributeModifier$Operation;)Ljava/util/Collection; b
	getValue ()D f
	hasModifier (Lnet/minecraft/world/entity/ai/attributes/AttributeModifier;)Z a
	load (Lnet/minecraft/nbt/CompoundTag;)V a
	removeModifier (Ljava/util/UUID;)V b
	removeModifier (Lnet/minecraft/world/entity/ai/attributes/AttributeModifier;)V d
	removeModifiers ()V e
	removePermanentModifier (Ljava/util/UUID;)Z c
	replaceFrom (Lnet/minecraft/world/entity/ai/attributes/AttributeInstance;)V a
	save ()Lnet/minecraft/nbt/CompoundTag; g
	setBaseValue (D)V a
	setDirty ()V d
net/minecraft/world/entity/ai/attributes/AttributeMap bhd
	LOGGER a
	attributes b
	dirtyAttributes c
	supplier d
	addTransientAttributeModifiers (Lcom/google/common/collect/Multimap;)V b
	assignValues (Lnet/minecraft/world/entity/ai/attributes/AttributeMap;)V a
	getBaseValue (Lnet/minecraft/world/entity/ai/attributes/Attribute;)D d
	getDirtyAttributes ()Ljava/util/Set; a
	getInstance (Lnet/minecraft/core/Holder;)Lnet/minecraft/world/entity/ai/attributes/AttributeInstance; a
	getInstance (Lnet/minecraft/world/entity/ai/attributes/Attribute;)Lnet/minecraft/world/entity/ai/attributes/AttributeInstance; a
	getModifierValue (Lnet/minecraft/core/Holder;Ljava/util/UUID;)D b
	getModifierValue (Lnet/minecraft/world/entity/ai/attributes/Attribute;Ljava/util/UUID;)D b
	getSyncableAttributes ()Ljava/util/Collection; b
	getValue (Lnet/minecraft/world/entity/ai/attributes/Attribute;)D c
	hasAttribute (Lnet/minecraft/core/Holder;)Z b
	hasAttribute (Lnet/minecraft/world/entity/ai/attributes/Attribute;)Z b
	hasModifier (Lnet/minecraft/core/Holder;Ljava/util/UUID;)Z a
	hasModifier (Lnet/minecraft/world/entity/ai/attributes/Attribute;Ljava/util/UUID;)Z a
	load (Lnet/minecraft/nbt/ListTag;)V a
	onAttributeModified (Lnet/minecraft/world/entity/ai/attributes/AttributeInstance;)V a
	removeAttributeModifiers (Lcom/google/common/collect/Multimap;)V a
	save ()Lnet/minecraft/nbt/ListTag; c
net/minecraft/world/entity/ai/attributes/AttributeModifier bhe
	LOGGER a
	amount b
	id e
	nameGetter d
	operation c
	getAmount ()D d
	getId ()Ljava/util/UUID; a
	getName ()Ljava/lang/String; b
	getOperation ()Lnet/minecraft/world/entity/ai/attributes/AttributeModifier$Operation; c
	load (Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/world/entity/ai/attributes/AttributeModifier; a
	save ()Lnet/minecraft/nbt/CompoundTag; e
net/minecraft/world/entity/ai/attributes/AttributeModifier$Operation bhe$a
	$VALUES f
	ADDITION a
	MULTIPLY_BASE b
	MULTIPLY_TOTAL c
	OPERATIONS d
	value e
	$values ()[Lnet/minecraft/world/entity/ai/attributes/AttributeModifier$Operation; b
	fromValue (I)Lnet/minecraft/world/entity/ai/attributes/AttributeModifier$Operation; a
	toValue ()I a
net/minecraft/world/entity/ai/attributes/AttributeSupplier bhf
	instances a
	builder ()Lnet/minecraft/world/entity/ai/attributes/AttributeSupplier$Builder; a
	createInstance (Ljava/util/function/Consumer;Lnet/minecraft/world/entity/ai/attributes/Attribute;)Lnet/minecraft/world/entity/ai/attributes/AttributeInstance; a
	getAttributeInstance (Lnet/minecraft/world/entity/ai/attributes/Attribute;)Lnet/minecraft/world/entity/ai/attributes/AttributeInstance; d
	getBaseValue (Lnet/minecraft/world/entity/ai/attributes/Attribute;)D b
	getModifierValue (Lnet/minecraft/world/entity/ai/attributes/Attribute;Ljava/util/UUID;)D a
	getValue (Lnet/minecraft/world/entity/ai/attributes/Attribute;)D a
	hasAttribute (Lnet/minecraft/world/entity/ai/attributes/Attribute;)Z c
	hasModifier (Lnet/minecraft/world/entity/ai/attributes/Attribute;Ljava/util/UUID;)Z b
net/minecraft/world/entity/ai/attributes/AttributeSupplier$Builder bhf$a
	builder a
	instanceFrozen b
	add (Lnet/minecraft/world/entity/ai/attributes/Attribute;)Lnet/minecraft/world/entity/ai/attributes/AttributeSupplier$Builder; a
	add (Lnet/minecraft/world/entity/ai/attributes/Attribute;D)Lnet/minecraft/world/entity/ai/attributes/AttributeSupplier$Builder; a
	build ()Lnet/minecraft/world/entity/ai/attributes/AttributeSupplier; a
	create (Lnet/minecraft/world/entity/ai/attributes/Attribute;)Lnet/minecraft/world/entity/ai/attributes/AttributeInstance; b
net/minecraft/world/entity/ai/attributes/Attributes bhg
	ARMOR i
	ARMOR_TOUGHNESS j
	ATTACK_DAMAGE f
	ATTACK_KNOCKBACK g
	ATTACK_SPEED h
	FLYING_SPEED e
	FOLLOW_RANGE b
	JUMP_STRENGTH m
	KNOCKBACK_RESISTANCE c
	LUCK k
	MAX_HEALTH a
	MOVEMENT_SPEED d
	SPAWN_REINFORCEMENTS_CHANCE l
	register (Ljava/lang/String;Lnet/minecraft/world/entity/ai/attributes/Attribute;)Lnet/minecraft/world/entity/ai/attributes/Attribute; a
net/minecraft/world/entity/ai/attributes/DefaultAttributes bhh
	LOGGER a
	SUPPLIERS b
	getSupplier (Lnet/minecraft/world/entity/EntityType;)Lnet/minecraft/world/entity/ai/attributes/AttributeSupplier; a
	hasSupplier (Lnet/minecraft/world/entity/EntityType;)Z b
	validate ()V a
net/minecraft/world/entity/ai/attributes/RangedAttribute bhi
	maxValue c
	minValue b
	getMaxValue ()D e
	getMinValue ()D d
	sanitizeValue (D)D a
net/minecraft/world/entity/ai/behavior/AcquirePoi bhk
	SCAN_RANGE a
	create (Ljava/util/function/Predicate;Lnet/minecraft/world/entity/ai/memory/MemoryModuleType;Lnet/minecraft/world/entity/ai/memory/MemoryModuleType;ZLjava/util/Optional;)Lnet/minecraft/world/entity/ai/behavior/BehaviorControl; a
	create (Ljava/util/function/Predicate;Lnet/minecraft/world/entity/ai/memory/MemoryModuleType;ZLjava/util/Optional;)Lnet/minecraft/world/entity/ai/behavior/BehaviorControl; a
	findPathToPois (Lnet/minecraft/world/entity/Mob;Ljava/util/Set;)Lnet/minecraft/world/level/pathfinder/Path; a
net/minecraft/world/entity/ai/behavior/AcquirePoi$JitteredLinearRetry bhk$a
	MAX_INTERVAL_INCREASE b
	MAX_RETRY_PATHFINDING_INTERVAL c
	MIN_INTERVAL_INCREASE a
	currentDelay g
	nextScheduledAttemptTimestamp f
	previousAttemptTimestamp e
	random d
	isStillValid (J)Z b
	markAttempt (J)V a
	shouldRetry (J)Z c
net/minecraft/world/entity/ai/behavior/AnimalMakeLove bhl
	BREED_RANGE c
	MAX_DURATION e
	MIN_DURATION d
	partnerType f
	spawnChildAtTime h
	speedModifier g
	canStillUse (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)Z a
	canStillUse (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/animal/Animal;J)Z b
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)Z a
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/animal/Animal;)Z a
	findValidBreedPartner (Lnet/minecraft/world/entity/animal/Animal;)Ljava/util/Optional; c
	getBreedTarget (Lnet/minecraft/world/entity/animal/Animal;)Lnet/minecraft/world/entity/animal/Animal; a
	hasBreedTargetOfRightType (Lnet/minecraft/world/entity/animal/Animal;)Z b
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V d
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/animal/Animal;J)V a
	stop (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V b
	stop (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/animal/Animal;J)V d
	tick (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V c
	tick (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/animal/Animal;J)V c
net/minecraft/world/entity/ai/behavior/AnimalPanic bhm
	DEFAULT_SHOULD_PANIC_PREDICATE g
	PANIC_DISTANCE_HORIZONTAL e
	PANIC_DISTANCE_VERTICAL f
	PANIC_MAX_DURATION d
	PANIC_MIN_DURATION c
	shouldPanic i
	speedMultiplier h
	canStillUse (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)Z a
	canStillUse (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/PathfinderMob;J)Z a
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)Z a
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/PathfinderMob;)Z a
	getPanicPos (Lnet/minecraft/world/entity/PathfinderMob;Lnet/minecraft/server/level/ServerLevel;)Lnet/minecraft/world/phys/Vec3; a
	lookForWater (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/world/entity/Entity;)Ljava/util/Optional; a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V d
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/PathfinderMob;J)V b
	stop (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V b
	stop (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/PathfinderMob;J)V c
	tick (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V c
	tick (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/PathfinderMob;J)V d
net/minecraft/world/entity/ai/behavior/AssignProfessionFromJobSite bhn
	create ()Lnet/minecraft/world/entity/ai/behavior/BehaviorControl; a
net/minecraft/world/entity/ai/behavior/BabyFollowAdult bho
	create (Lnet/minecraft/util/valueproviders/UniformInt;F)Lnet/minecraft/world/entity/ai/behavior/OneShot; a
	create (Lnet/minecraft/util/valueproviders/UniformInt;Ljava/util/function/Function;)Lnet/minecraft/world/entity/ai/behavior/OneShot; a
net/minecraft/world/entity/ai/behavior/BackUpIfTooClose bhp
	create (IF)Lnet/minecraft/world/entity/ai/behavior/OneShot; a
net/minecraft/world/entity/ai/behavior/BecomePassiveIfMemoryPresent bhq
	create (Lnet/minecraft/world/entity/ai/memory/MemoryModuleType;I)Lnet/minecraft/world/entity/ai/behavior/BehaviorControl; a
net/minecraft/world/entity/ai/behavior/Behavior bhr
	DEFAULT_DURATION a
	endTimestamp d
	entryCondition b
	maxDuration f
	minDuration e
	status c
	canStillUse (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)Z a
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)Z a
	debugString ()Ljava/lang/String; b
	doStop (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V g
	getStatus ()Lnet/minecraft/world/entity/ai/behavior/Behavior$Status; a
	hasRequiredMemories (Lnet/minecraft/world/entity/LivingEntity;)Z a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V d
	stop (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V b
	tick (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V c
	tickOrStop (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V f
	timedOut (J)Z a
	tryStart (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)Z e
net/minecraft/world/entity/ai/behavior/Behavior$Status bhr$a
	$VALUES c
	RUNNING b
	STOPPED a
	$values ()[Lnet/minecraft/world/entity/ai/behavior/Behavior$Status; a
net/minecraft/world/entity/ai/behavior/BehaviorControl bhs
	debugString ()Ljava/lang/String; b
	doStop (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V g
	getStatus ()Lnet/minecraft/world/entity/ai/behavior/Behavior$Status; a
	tickOrStop (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V f
	tryStart (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)Z e
net/minecraft/world/entity/ai/behavior/BehaviorUtils bht
	canSee (Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/entity/LivingEntity;)Z b
	entityIsVisible (Lnet/minecraft/world/entity/ai/Brain;Lnet/minecraft/world/entity/LivingEntity;)Z a
	findSectionClosestToVillage (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/SectionPos;I)Lnet/minecraft/core/SectionPos; a
	getLivingEntityFromUUIDMemory (Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/entity/ai/memory/MemoryModuleType;)Ljava/util/Optional; a
	getNearestTarget (Lnet/minecraft/world/entity/LivingEntity;Ljava/util/Optional;Lnet/minecraft/world/entity/LivingEntity;)Lnet/minecraft/world/entity/LivingEntity; a
	getRandomSwimmablePos (Lnet/minecraft/world/entity/PathfinderMob;II)Lnet/minecraft/world/phys/Vec3; a
	getTargetNearestMe (Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/entity/LivingEntity;)Lnet/minecraft/world/entity/LivingEntity; a
	isBreeding (Lnet/minecraft/world/entity/LivingEntity;)Z a
	isOtherTargetMuchFurtherAwayThanCurrentAttackTarget (Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/entity/LivingEntity;D)Z a
	isWithinAttackRange (Lnet/minecraft/world/entity/Mob;Lnet/minecraft/world/entity/LivingEntity;I)Z a
	lockGazeAndWalkToEachOther (Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/entity/LivingEntity;F)V a
	lookAtEachOther (Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/entity/LivingEntity;)V c
	lookAtEntity (Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/entity/LivingEntity;)V a
	setWalkAndLookTargetMemories (Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/core/BlockPos;FI)V a
	setWalkAndLookTargetMemories (Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/entity/Entity;FI)V a
	setWalkAndLookTargetMemories (Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/entity/ai/behavior/PositionTracker;FI)V a
	setWalkAndLookTargetMemoriesToEachOther (Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/entity/LivingEntity;F)V b
	targetIsValid (Lnet/minecraft/world/entity/ai/Brain;Lnet/minecraft/world/entity/ai/memory/MemoryModuleType;Ljava/util/function/Predicate;)Z a
	targetIsValid (Lnet/minecraft/world/entity/ai/Brain;Lnet/minecraft/world/entity/ai/memory/MemoryModuleType;Lnet/minecraft/world/entity/EntityType;)Z a
	throwItem (Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/phys/Vec3;)V a
	throwItem (Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/phys/Vec3;Lnet/minecraft/world/phys/Vec3;F)V a
net/minecraft/world/entity/ai/behavior/BlockPosTracker bhu
	blockPos a
	centerPosition b
	currentBlockPosition ()Lnet/minecraft/core/BlockPos; b
	currentPosition ()Lnet/minecraft/world/phys/Vec3; a
	isVisibleBy (Lnet/minecraft/world/entity/LivingEntity;)Z a
net/minecraft/world/entity/ai/behavior/CelebrateVillagersSurvivedRaid bhv
	currentRaid c
	canStillUse (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)Z a
	canStillUse (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/npc/Villager;J)Z a
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)Z a
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/npc/Villager;)Z a
	getFirework (Lnet/minecraft/world/item/DyeColor;I)Lnet/minecraft/world/item/ItemStack; a
	stop (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V b
	stop (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/npc/Villager;J)V b
	tick (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V c
	tick (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/npc/Villager;J)V c
net/minecraft/world/entity/ai/behavior/CopyMemoryWithExpiry bhw
	create (Ljava/util/function/Predicate;Lnet/minecraft/world/entity/ai/memory/MemoryModuleType;Lnet/minecraft/world/entity/ai/memory/MemoryModuleType;Lnet/minecraft/util/valueproviders/UniformInt;)Lnet/minecraft/world/entity/ai/behavior/BehaviorControl; a
net/minecraft/world/entity/ai/behavior/CountDownCooldownTicks bhx
	cooldownTicks c
	canStillUse (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)Z a
	getCooldownTickMemory (Lnet/minecraft/world/entity/LivingEntity;)Ljava/util/Optional; b
	stop (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V b
	tick (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V c
	timedOut (J)Z a
net/minecraft/world/entity/ai/behavior/Croak bhy
	CROAK_TICKS c
	TIME_OUT_DURATION d
	croakCounter e
	canStillUse (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)Z a
	canStillUse (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/animal/frog/Frog;J)Z a
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)Z a
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/animal/frog/Frog;)Z a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V d
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/animal/frog/Frog;J)V b
	stop (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V b
	stop (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/animal/frog/Frog;J)V c
	tick (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V c
	tick (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/animal/frog/Frog;J)V d
net/minecraft/world/entity/ai/behavior/CrossbowAttack bhz
	TIMEOUT c
	attackDelay d
	crossbowState e
	canStillUse (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)Z a
	canStillUse (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/Mob;J)Z a
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)Z a
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/Mob;)Z a
	crossbowAttack (Lnet/minecraft/world/entity/Mob;Lnet/minecraft/world/entity/LivingEntity;)V a
	getAttackTarget (Lnet/minecraft/world/entity/LivingEntity;)Lnet/minecraft/world/entity/LivingEntity; b
	lookAtTarget (Lnet/minecraft/world/entity/Mob;Lnet/minecraft/world/entity/LivingEntity;)V b
	stop (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V b
	stop (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/Mob;J)V c
	tick (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V c
	tick (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/Mob;J)V b
net/minecraft/world/entity/ai/behavior/CrossbowAttack$CrossbowState bhz$a
	$VALUES e
	CHARGED c
	CHARGING b
	READY_TO_ATTACK d
	UNCHARGED a
	$values ()[Lnet/minecraft/world/entity/ai/behavior/CrossbowAttack$CrossbowState; a
net/minecraft/world/entity/ai/behavior/DismountOrSkipMounting bia
	create (ILjava/util/function/BiPredicate;)Lnet/minecraft/world/entity/ai/behavior/BehaviorControl; a
	isVehicleValid (Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/entity/Entity;I)Z a
net/minecraft/world/entity/ai/behavior/DoNothing bib
	endTimestamp d
	maxDuration b
	minDuration a
	status c
	debugString ()Ljava/lang/String; b
	doStop (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V g
	getStatus ()Lnet/minecraft/world/entity/ai/behavior/Behavior$Status; a
	tickOrStop (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V f
	tryStart (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)Z e
net/minecraft/world/entity/ai/behavior/EntityTracker bic
	entity a
	trackEyeHeight b
	currentBlockPosition ()Lnet/minecraft/core/BlockPos; b
	currentPosition ()Lnet/minecraft/world/phys/Vec3; a
	getEntity ()Lnet/minecraft/world/entity/Entity; c
	isVisibleBy (Lnet/minecraft/world/entity/LivingEntity;)Z a
net/minecraft/world/entity/ai/behavior/EraseMemoryIf bid
	create (Ljava/util/function/Predicate;Lnet/minecraft/world/entity/ai/memory/MemoryModuleType;)Lnet/minecraft/world/entity/ai/behavior/BehaviorControl; a
net/minecraft/world/entity/ai/behavior/FollowTemptation bie
	CLOSE_ENOUGH_DIST d
	TEMPTATION_COOLDOWN c
	closeEnoughDistance f
	speedModifier e
	canStillUse (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)Z a
	canStillUse (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/PathfinderMob;J)Z a
	getSpeedModifier (Lnet/minecraft/world/entity/PathfinderMob;)F a
	getTemptingPlayer (Lnet/minecraft/world/entity/PathfinderMob;)Ljava/util/Optional; b
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V d
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/PathfinderMob;J)V b
	stop (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V b
	stop (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/PathfinderMob;J)V c
	tick (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V c
	tick (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/PathfinderMob;J)V d
	timedOut (J)Z a
net/minecraft/world/entity/ai/behavior/GateBehavior bif
	behaviors e
	entryCondition a
	exitErasedMemories b
	orderPolicy c
	runningPolicy d
	status f
	debugString ()Ljava/lang/String; b
	doStop (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V g
	getStatus ()Lnet/minecraft/world/entity/ai/behavior/Behavior$Status; a
	hasRequiredMemories (Lnet/minecraft/world/entity/LivingEntity;)Z a
	tickOrStop (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V f
	tryStart (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)Z e
net/minecraft/world/entity/ai/behavior/GateBehavior$OrderPolicy bif$a
	$VALUES d
	ORDERED a
	SHUFFLED b
	consumer c
	$values ()[Lnet/minecraft/world/entity/ai/behavior/GateBehavior$OrderPolicy; a
	apply (Lnet/minecraft/world/entity/ai/behavior/ShufflingList;)V a
net/minecraft/world/entity/ai/behavior/GateBehavior$RunningPolicy bif$b
	$VALUES c
	RUN_ONE a
	TRY_ALL b
	$values ()[Lnet/minecraft/world/entity/ai/behavior/GateBehavior$RunningPolicy; a
	apply (Ljava/util/stream/Stream;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V a
net/minecraft/world/entity/ai/behavior/GiveGiftToHero big
	GIFTS g
	MAX_TIME_BETWEEN_GIFTS e
	MIN_TIME_BETWEEN_GIFTS d
	SPEED_MODIFIER h
	THROW_GIFT_AT_DISTANCE c
	TIME_TO_DELAY_FOR_HEAD_TO_FINISH_TURNING f
	giftGivenDuringThisRun j
	timeSinceStart k
	timeUntilNextGift i
	calculateTimeUntilNextGift (Lnet/minecraft/server/level/ServerLevel;)I a
	canStillUse (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)Z a
	canStillUse (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/npc/Villager;J)Z b
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)Z a
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/npc/Villager;)Z a
	getItemToThrow (Lnet/minecraft/world/entity/npc/Villager;)Ljava/util/List; a
	getNearestTargetableHero (Lnet/minecraft/world/entity/npc/Villager;)Ljava/util/Optional; c
	isHero (Lnet/minecraft/world/entity/player/Player;)Z a
	isHeroVisible (Lnet/minecraft/world/entity/npc/Villager;)Z b
	isWithinThrowingDistance (Lnet/minecraft/world/entity/npc/Villager;Lnet/minecraft/world/entity/player/Player;)Z a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V d
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/npc/Villager;J)V a
	stop (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V b
	stop (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/npc/Villager;J)V d
	throwGift (Lnet/minecraft/world/entity/npc/Villager;Lnet/minecraft/world/entity/LivingEntity;)V a
	tick (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V c
	tick (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/npc/Villager;J)V c
net/minecraft/world/entity/ai/behavior/GoAndGiveItemsToTarget bih
	CLOSE_ENOUGH_DISTANCE_TO_TARGET c
	ITEM_PICKUP_COOLDOWN_AFTER_THROWING d
	speedModifier f
	targetPositionGetter e
	canStillUse (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)Z a
	canThrowItemToTarget (Lnet/minecraft/world/entity/LivingEntity;)Z b
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)Z a
	getThrowPosition (Lnet/minecraft/world/entity/ai/behavior/PositionTracker;)Lnet/minecraft/world/phys/Vec3; a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V d
	throwItem (Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/phys/Vec3;)V a
	tick (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V c
	triggerDropItemOnBlock (Lnet/minecraft/world/entity/ai/behavior/PositionTracker;Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/server/level/ServerPlayer;)V a
net/minecraft/world/entity/ai/behavior/GoToClosestVillage bii
	create (FI)Lnet/minecraft/world/entity/ai/behavior/BehaviorControl; a
net/minecraft/world/entity/ai/behavior/GoToPotentialJobSite bij
	TICKS_UNTIL_TIMEOUT d
	speedModifier c
	canStillUse (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)Z a
	canStillUse (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/npc/Villager;J)Z a
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)Z a
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/npc/Villager;)Z a
	stop (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V b
	stop (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/npc/Villager;J)V c
	tick (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V c
	tick (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/npc/Villager;J)V b
net/minecraft/world/entity/ai/behavior/GoToTargetLocation bik
	create (Lnet/minecraft/world/entity/ai/memory/MemoryModuleType;IF)Lnet/minecraft/world/entity/ai/behavior/OneShot; a
	getNearbyPos (Lnet/minecraft/world/entity/Mob;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/core/BlockPos; a
	getRandomOffset (Lnet/minecraft/util/RandomSource;)I a
net/minecraft/world/entity/ai/behavior/GoToWantedItem bil
	create (FZI)Lnet/minecraft/world/entity/ai/behavior/BehaviorControl; a
	create (Ljava/util/function/Predicate;FZI)Lnet/minecraft/world/entity/ai/behavior/BehaviorControl; a
net/minecraft/world/entity/ai/behavior/HarvestFarmland bim
	HARVEST_DURATION d
	SPEED_MODIFIER c
	aboveFarmlandPos e
	nextOkStartTime f
	timeWorkedSoFar g
	validFarmlandAroundVillager h
	canStillUse (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)Z a
	canStillUse (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/npc/Villager;J)Z d
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)Z a
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/npc/Villager;)Z a
	getValidFarmland (Lnet/minecraft/server/level/ServerLevel;)Lnet/minecraft/core/BlockPos; a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V d
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/npc/Villager;J)V a
	stop (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V b
	stop (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/npc/Villager;J)V b
	tick (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V c
	tick (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/npc/Villager;J)V c
	validPos (Lnet/minecraft/core/BlockPos;Lnet/minecraft/server/level/ServerLevel;)Z a
net/minecraft/world/entity/ai/behavior/InsideBrownianWalk bin
	create (F)Lnet/minecraft/world/entity/ai/behavior/BehaviorControl; a
net/minecraft/world/entity/ai/behavior/InteractWith bio
	of (Lnet/minecraft/world/entity/EntityType;ILjava/util/function/Predicate;Ljava/util/function/Predicate;Lnet/minecraft/world/entity/ai/memory/MemoryModuleType;FI)Lnet/minecraft/world/entity/ai/behavior/BehaviorControl; a
	of (Lnet/minecraft/world/entity/EntityType;ILnet/minecraft/world/entity/ai/memory/MemoryModuleType;FI)Lnet/minecraft/world/entity/ai/behavior/BehaviorControl; a
net/minecraft/world/entity/ai/behavior/InteractWithDoor bip
	COOLDOWN_BEFORE_RERUNNING_IN_SAME_NODE a
	MAX_DISTANCE_TO_HOLD_DOOR_OPEN_FOR_OTHER_MOBS c
	SKIP_CLOSING_DOOR_IF_FURTHER_AWAY_THAN b
	areOtherMobsComingThroughDoor (Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/core/BlockPos;Ljava/util/Optional;)Z a
	closeDoorsThatIHaveOpenedOrPassedThrough (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/level/pathfinder/Node;Lnet/minecraft/world/level/pathfinder/Node;Ljava/util/Set;Ljava/util/Optional;)V a
	create ()Lnet/minecraft/world/entity/ai/behavior/BehaviorControl; a
	isDoorTooFarAway (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/core/GlobalPos;)Z a
	isMobComingThroughDoor (Lnet/minecraft/world/entity/ai/Brain;Lnet/minecraft/core/BlockPos;)Z a
	rememberDoorToClose (Lnet/minecraft/world/entity/ai/behavior/declarative/MemoryAccessor;Ljava/util/Optional;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;)Ljava/util/Optional; a
net/minecraft/world/entity/ai/behavior/JumpOnBed biq
	COOLDOWN_BETWEEN_JUMPS f
	MAX_JUMPS e
	MAX_TIME_TO_REACH_BED c
	MIN_JUMPS d
	remainingCooldownUntilNextJump k
	remainingJumps j
	remainingTimeToReachBed i
	speedModifier g
	targetBed h
	canStillUse (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)Z a
	canStillUse (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/Mob;J)Z c
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)Z a
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/Mob;)Z a
	getNearestBed (Lnet/minecraft/world/entity/Mob;)Ljava/util/Optional; a
	isBed (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;)Z a
	nearBed (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/Mob;)Z b
	onBedSurface (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/Mob;)Z d
	onOrOverBed (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/Mob;)Z c
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V d
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/Mob;J)V a
	startWalkingTowardsBed (Lnet/minecraft/world/entity/Mob;Lnet/minecraft/core/BlockPos;)V a
	stop (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V b
	stop (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/Mob;J)V b
	tick (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V c
	tick (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/Mob;J)V d
	timedOut (J)Z a
	tiredOfJumping (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/Mob;)Z f
	tiredOfWalking (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/Mob;)Z e
net/minecraft/world/entity/ai/behavior/LocateHidingPlace bir
	create (IFI)Lnet/minecraft/world/entity/ai/behavior/OneShot; a
net/minecraft/world/entity/ai/behavior/LongJumpMidJump bis
	TIME_OUT_DURATION c
	landingSound e
	timeBetweenLongJumps d
	canStillUse (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)Z a
	canStillUse (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/Mob;J)Z a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V d
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/Mob;J)V b
	stop (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V b
	stop (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/Mob;J)V c
net/minecraft/world/entity/ai/behavior/LongJumpToPreferredBlock bit
	currentlyWantingPreferredOnes p
	notPrefferedJumpCandidates o
	preferredBlockTag m
	preferredBlocksChance n
	getJumpCandidate (Lnet/minecraft/server/level/ServerLevel;)Ljava/util/Optional; a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V d
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/Mob;J)V a
net/minecraft/world/entity/ai/behavior/LongJumpToRandomPos biu
	ALLOWED_ANGLES o
	FIND_JUMP_TRIES c
	MIN_PATHFIND_DISTANCE_TO_VALID_JUMP d
	PREPARE_JUMP_DURATION m
	TIME_OUT_DURATION n
	acceptableLandingSpot r
	chosenJump j
	findJumpTries k
	getJumpSound q
	initialPosition i
	jumpCandidates h
	maxJumpVelocity g
	maxLongJumpHeight e
	maxLongJumpWidth f
	prepareJumpStart l
	timeBetweenLongJumps p
	calculateJumpVectorForAngle (Lnet/minecraft/world/entity/Mob;Lnet/minecraft/world/phys/Vec3;I)Lnet/minecraft/world/phys/Vec3; a
	calculateOptimalJumpVector (Lnet/minecraft/world/entity/Mob;Lnet/minecraft/world/phys/Vec3;)Lnet/minecraft/world/phys/Vec3; a
	canStillUse (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)Z a
	canStillUse (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/Mob;J)Z b
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)Z a
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/Mob;)Z a
	defaultAcceptableLandingSpot (Lnet/minecraft/world/entity/Mob;Lnet/minecraft/core/BlockPos;)Z a
	getJumpCandidate (Lnet/minecraft/server/level/ServerLevel;)Ljava/util/Optional; a
	isAcceptableLandingPosition (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/Mob;Lnet/minecraft/core/BlockPos;)Z a
	isClearTransition (Lnet/minecraft/world/entity/Mob;Lnet/minecraft/world/entity/EntityDimensions;Lnet/minecraft/world/phys/Vec3;Lnet/minecraft/world/phys/Vec3;)Z a
	pickCandidate (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/Mob;J)V d
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V d
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/Mob;J)V a
	tick (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V c
	tick (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/Mob;J)V c
net/minecraft/world/entity/ai/behavior/LongJumpToRandomPos$PossibleJump biu$a
	jumpTarget a
	getJumpTarget ()Lnet/minecraft/core/BlockPos; b
net/minecraft/world/entity/ai/behavior/LookAndFollowTradingPlayerSink biv
	speedModifier c
	canStillUse (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)Z a
	canStillUse (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/npc/Villager;J)Z a
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)Z a
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/npc/Villager;)Z a
	followPlayer (Lnet/minecraft/world/entity/npc/Villager;)V a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V d
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/npc/Villager;J)V b
	stop (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V b
	stop (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/npc/Villager;J)V c
	tick (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V c
	tick (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/npc/Villager;J)V d
	timedOut (J)Z a
net/minecraft/world/entity/ai/behavior/LookAtTargetSink biw
	canStillUse (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)Z a
	canStillUse (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/Mob;J)Z a
	stop (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V b
	stop (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/Mob;J)V b
	tick (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V c
	tick (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/Mob;J)V c
net/minecraft/world/entity/ai/behavior/MeleeAttack bix
	create (I)Lnet/minecraft/world/entity/ai/behavior/OneShot; a
	isHoldingUsableProjectileWeapon (Lnet/minecraft/world/entity/Mob;)Z a
net/minecraft/world/entity/ai/behavior/Mount biy
	CLOSE_ENOUGH_TO_START_RIDING_DIST a
	create (F)Lnet/minecraft/world/entity/ai/behavior/BehaviorControl; a
net/minecraft/world/entity/ai/behavior/MoveToSkySeeingSpot biz
	create (F)Lnet/minecraft/world/entity/ai/behavior/OneShot; a
	getOutdoorPosition (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)Lnet/minecraft/world/phys/Vec3; a
	hasNoBlocksAbove (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/core/BlockPos;)Z a
net/minecraft/world/entity/ai/behavior/MoveToTargetSink bja
	MAX_COOLDOWN_BEFORE_RETRYING c
	lastTargetPos f
	path e
	remainingCooldown d
	speedModifier g
	canStillUse (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)Z a
	canStillUse (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/Mob;J)Z a
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)Z a
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/Mob;)Z a
	isWalkTargetSpectator (Lnet/minecraft/world/entity/ai/memory/WalkTarget;)Z a
	reachedTarget (Lnet/minecraft/world/entity/Mob;Lnet/minecraft/world/entity/ai/memory/WalkTarget;)Z a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V d
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/Mob;J)V c
	stop (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V b
	stop (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/Mob;J)V b
	tick (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V c
	tick (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/Mob;J)V d
	tryComputePath (Lnet/minecraft/world/entity/Mob;Lnet/minecraft/world/entity/ai/memory/WalkTarget;J)Z a
net/minecraft/world/entity/ai/behavior/OneShot bjb
	status a
	debugString ()Ljava/lang/String; b
	doStop (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V g
	getStatus ()Lnet/minecraft/world/entity/ai/behavior/Behavior$Status; a
	tickOrStop (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V f
	tryStart (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)Z e
net/minecraft/world/entity/ai/behavior/PlayTagWithOtherKids bjc
	AVERAGE_WAIT_TIME_BETWEEN_RUNS f
	CHASE_SPEED_MODIFIER d
	FLEE_SPEED_MODIFIER c
	MAX_CHASERS_PER_TARGET e
	MAX_FLEE_XZ_DIST a
	MAX_FLEE_Y_DIST b
	chaseKid (Lnet/minecraft/world/entity/ai/behavior/declarative/MemoryAccessor;Lnet/minecraft/world/entity/ai/behavior/declarative/MemoryAccessor;Lnet/minecraft/world/entity/ai/behavior/declarative/MemoryAccessor;Lnet/minecraft/world/entity/LivingEntity;)V a
	checkHowManyChasersEachFriendHas (Ljava/util/List;)Ljava/util/Map; b
	create ()Lnet/minecraft/world/entity/ai/behavior/BehaviorControl; a
	findSomeoneBeingChased (Ljava/util/List;)Ljava/util/Optional; a
	isChasingSomeone (Lnet/minecraft/world/entity/LivingEntity;)Z b
	isFriendChasingMe (Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/entity/LivingEntity;)Z a
	whoAreYouChasing (Lnet/minecraft/world/entity/LivingEntity;)Lnet/minecraft/world/entity/LivingEntity; a
net/minecraft/world/entity/ai/behavior/PoiCompetitorScan bjd
	competesForSameJobsite (Lnet/minecraft/core/GlobalPos;Lnet/minecraft/core/Holder;Lnet/minecraft/world/entity/npc/Villager;)Z a
	create ()Lnet/minecraft/world/entity/ai/behavior/BehaviorControl; a
	hasMatchingProfession (Lnet/minecraft/core/Holder;Lnet/minecraft/world/entity/npc/VillagerProfession;)Z a
	selectWinner (Lnet/minecraft/world/entity/npc/Villager;Lnet/minecraft/world/entity/npc/Villager;)Lnet/minecraft/world/entity/npc/Villager; a
net/minecraft/world/entity/ai/behavior/PositionTracker bje
	currentBlockPosition ()Lnet/minecraft/core/BlockPos; b
	currentPosition ()Lnet/minecraft/world/phys/Vec3; a
	isVisibleBy (Lnet/minecraft/world/entity/LivingEntity;)Z a
net/minecraft/world/entity/ai/behavior/PrepareRamNearestTarget bjf
	TIME_OUT_DURATION c
	getCooldownOnFail d
	getPrepareRamSound j
	maxRamDistance f
	minRamDistance e
	ramCandidate l
	ramPrepareTime i
	ramTargeting h
	reachedRamPositionTimestamp k
	walkSpeed g
	calculateRammingStartPosition (Lnet/minecraft/world/entity/PathfinderMob;Lnet/minecraft/world/entity/LivingEntity;)Ljava/util/Optional; a
	canStillUse (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)Z a
	canStillUse (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/PathfinderMob;J)Z c
	chooseRamPosition (Lnet/minecraft/world/entity/PathfinderMob;Lnet/minecraft/world/entity/LivingEntity;)V b
	getEdgeOfBlock (Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/phys/Vec3; a
	isWalkableBlock (Lnet/minecraft/world/entity/PathfinderMob;Lnet/minecraft/core/BlockPos;)Z a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V d
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/PathfinderMob;J)V a
	stop (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V b
	stop (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/PathfinderMob;J)V b
	tick (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V c
	tick (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/PathfinderMob;J)V d
net/minecraft/world/entity/ai/behavior/PrepareRamNearestTarget$RamCandidate bjf$a
	startPosition a
	target c
	targetPosition b
	getStartPosition ()Lnet/minecraft/core/BlockPos; a
	getTarget ()Lnet/minecraft/world/entity/LivingEntity; c
	getTargetPosition ()Lnet/minecraft/core/BlockPos; b
net/minecraft/world/entity/ai/behavior/RamTarget bjg
	RAM_SPEED_FORCE_FACTOR d
	TIME_OUT_DURATION c
	getHornBreakSound k
	getImpactSound j
	getKnockbackForce h
	getTimeBetweenRams e
	ramDirection i
	ramTargeting f
	speed g
	canStillUse (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)Z a
	canStillUse (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/animal/goat/Goat;J)Z a
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)Z a
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/animal/goat/Goat;)Z a
	finishRam (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/animal/goat/Goat;)V b
	hasRammedHornBreakingBlock (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/animal/goat/Goat;)Z c
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V d
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/animal/goat/Goat;J)V b
	tick (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V c
	tick (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/animal/goat/Goat;J)V c
net/minecraft/world/entity/ai/behavior/RandomLookAround bjh
	interval c
	maxYaw d
	minPitch e
	pitchRange f
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V d
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/Mob;J)V a
net/minecraft/world/entity/ai/behavior/RandomStroll bji
	MAX_XZ_DIST a
	MAX_Y_DIST b
	SWIM_XY_DISTANCE_TIERS c
	fly (F)Lnet/minecraft/world/entity/ai/behavior/BehaviorControl; b
	getTargetFlyPos (Lnet/minecraft/world/entity/PathfinderMob;II)Lnet/minecraft/world/phys/Vec3; a
	getTargetSwimPos (Lnet/minecraft/world/entity/PathfinderMob;)Lnet/minecraft/world/phys/Vec3; a
	stroll (F)Lnet/minecraft/world/entity/ai/behavior/OneShot; a
	stroll (FII)Lnet/minecraft/world/entity/ai/behavior/BehaviorControl; a
	stroll (FZ)Lnet/minecraft/world/entity/ai/behavior/OneShot; a
	strollFlyOrSwim (FLjava/util/function/Function;Ljava/util/function/Predicate;)Lnet/minecraft/world/entity/ai/behavior/OneShot; a
	swim (F)Lnet/minecraft/world/entity/ai/behavior/BehaviorControl; c
net/minecraft/world/entity/ai/behavior/ReactToBell bjj
	create ()Lnet/minecraft/world/entity/ai/behavior/BehaviorControl; a
net/minecraft/world/entity/ai/behavior/ResetProfession bjk
	create ()Lnet/minecraft/world/entity/ai/behavior/BehaviorControl; a
net/minecraft/world/entity/ai/behavior/ResetRaidStatus bjl
	create ()Lnet/minecraft/world/entity/ai/behavior/BehaviorControl; a
net/minecraft/world/entity/ai/behavior/RingBell bjm
	BELL_RING_CHANCE b
	RING_BELL_FROM_DISTANCE a
	create ()Lnet/minecraft/world/entity/ai/behavior/BehaviorControl; a
net/minecraft/world/entity/ai/behavior/RunOne bjn
net/minecraft/world/entity/ai/behavior/SetClosestHomeAsWalkTarget bjo
	BATCH_SIZE b
	CACHE_TIMEOUT a
	OK_DISTANCE_SQR d
	RATE c
	create (F)Lnet/minecraft/world/entity/ai/behavior/BehaviorControl; a
net/minecraft/world/entity/ai/behavior/SetEntityLookTarget bjp
	create (F)Lnet/minecraft/world/entity/ai/behavior/OneShot; a
	create (Ljava/util/function/Predicate;F)Lnet/minecraft/world/entity/ai/behavior/OneShot; a
	create (Lnet/minecraft/world/entity/EntityType;F)Lnet/minecraft/world/entity/ai/behavior/OneShot; a
	create (Lnet/minecraft/world/entity/MobCategory;F)Lnet/minecraft/world/entity/ai/behavior/BehaviorControl; a
net/minecraft/world/entity/ai/behavior/SetEntityLookTargetSometimes bjq
	create (FLnet/minecraft/util/valueproviders/UniformInt;)Lnet/minecraft/world/entity/ai/behavior/BehaviorControl; a
	create (FLnet/minecraft/util/valueproviders/UniformInt;Ljava/util/function/Predicate;)Lnet/minecraft/world/entity/ai/behavior/BehaviorControl; a
	create (Lnet/minecraft/world/entity/EntityType;FLnet/minecraft/util/valueproviders/UniformInt;)Lnet/minecraft/world/entity/ai/behavior/BehaviorControl; a
net/minecraft/world/entity/ai/behavior/SetEntityLookTargetSometimes$Ticker bjq$a
	interval a
	ticksUntilNextStart b
	tickDownAndCheck (Lnet/minecraft/util/RandomSource;)Z a
net/minecraft/world/entity/ai/behavior/SetHiddenState bjr
	HIDE_TIMEOUT a
	create (II)Lnet/minecraft/world/entity/ai/behavior/BehaviorControl; a
net/minecraft/world/entity/ai/behavior/SetLookAndInteract bjs
	create (Lnet/minecraft/world/entity/EntityType;I)Lnet/minecraft/world/entity/ai/behavior/BehaviorControl; a
net/minecraft/world/entity/ai/behavior/SetRaidStatus bjt
	create ()Lnet/minecraft/world/entity/ai/behavior/BehaviorControl; a
net/minecraft/world/entity/ai/behavior/SetWalkTargetAwayFrom bju
	create (Lnet/minecraft/world/entity/ai/memory/MemoryModuleType;FIZLjava/util/function/Function;)Lnet/minecraft/world/entity/ai/behavior/OneShot; a
	entity (Lnet/minecraft/world/entity/ai/memory/MemoryModuleType;FIZ)Lnet/minecraft/world/entity/ai/behavior/OneShot; b
	pos (Lnet/minecraft/world/entity/ai/memory/MemoryModuleType;FIZ)Lnet/minecraft/world/entity/ai/behavior/BehaviorControl; a
net/minecraft/world/entity/ai/behavior/SetWalkTargetFromAttackTargetIfTargetOutOfReach bjv
	PROJECTILE_ATTACK_RANGE_BUFFER a
	create (F)Lnet/minecraft/world/entity/ai/behavior/BehaviorControl; a
	create (Ljava/util/function/Function;)Lnet/minecraft/world/entity/ai/behavior/BehaviorControl; a
net/minecraft/world/entity/ai/behavior/SetWalkTargetFromBlockMemory bjw
	create (Lnet/minecraft/world/entity/ai/memory/MemoryModuleType;FIII)Lnet/minecraft/world/entity/ai/behavior/OneShot; a
net/minecraft/world/entity/ai/behavior/SetWalkTargetFromLookTarget bjx
	create (FI)Lnet/minecraft/world/entity/ai/behavior/OneShot; a
	create (Ljava/util/function/Predicate;Ljava/util/function/Function;I)Lnet/minecraft/world/entity/ai/behavior/OneShot; a
net/minecraft/world/entity/ai/behavior/ShowTradesToPlayer bjy
	MAX_LOOK_TIME c
	STARTING_LOOK_TIME d
	cycleCounter g
	displayIndex h
	displayItems f
	lookTime i
	playerItemStack e
	canStillUse (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)Z a
	canStillUse (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/npc/Villager;J)Z a
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)Z a
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/npc/Villager;)Z a
	clearHeldItem (Lnet/minecraft/world/entity/npc/Villager;)V c
	displayAsHeldItem (Lnet/minecraft/world/entity/npc/Villager;Lnet/minecraft/world/item/ItemStack;)V a
	displayCyclingItems (Lnet/minecraft/world/entity/npc/Villager;)V e
	displayFirstItem (Lnet/minecraft/world/entity/npc/Villager;)V a
	findItemsToDisplay (Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/entity/npc/Villager;)V a
	lookAtTarget (Lnet/minecraft/world/entity/npc/Villager;)Lnet/minecraft/world/entity/LivingEntity; d
	playerItemStackMatchesCostOfOffer (Lnet/minecraft/world/item/trading/MerchantOffer;)Z a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V d
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/npc/Villager;J)V b
	stop (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V b
	stop (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/npc/Villager;J)V d
	tick (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V c
	tick (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/npc/Villager;J)V c
	updateDisplayItems (Lnet/minecraft/world/entity/npc/Villager;)V b
net/minecraft/world/entity/ai/behavior/ShufflingList bjz
	entries a
	random b
	add (Ljava/lang/Object;I)Lnet/minecraft/world/entity/ai/behavior/ShufflingList; a
	codec (Lcom/mojang/serialization/Codec;)Lcom/mojang/serialization/Codec; a
	shuffle ()Lnet/minecraft/world/entity/ai/behavior/ShufflingList; a
	stream ()Ljava/util/stream/Stream; b
net/minecraft/world/entity/ai/behavior/ShufflingList$WeightedEntry bjz$a
	data a
	randWeight c
	weight b
	codec (Lcom/mojang/serialization/Codec;)Lcom/mojang/serialization/Codec; a
	getData ()Ljava/lang/Object; a
	getRandWeight ()D c
	getWeight ()I b
	setRandom (F)V a
net/minecraft/world/entity/ai/behavior/SleepInBed bka
	COOLDOWN_AFTER_BEING_WOKEN c
	nextOkStartTime d
	canStillUse (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)Z a
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)Z a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V d
	stop (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V b
	timedOut (J)Z a
net/minecraft/world/entity/ai/behavior/SocializeAtBell bkb
	SPEED_MODIFIER a
	create ()Lnet/minecraft/world/entity/ai/behavior/OneShot; a
net/minecraft/world/entity/ai/behavior/StartAttacking bkc
	create (Ljava/util/function/Function;)Lnet/minecraft/world/entity/ai/behavior/BehaviorControl; a
	create (Ljava/util/function/Predicate;Ljava/util/function/Function;)Lnet/minecraft/world/entity/ai/behavior/BehaviorControl; a
net/minecraft/world/entity/ai/behavior/StartCelebratingIfTargetDead bkd
	create (ILjava/util/function/BiPredicate;)Lnet/minecraft/world/entity/ai/behavior/BehaviorControl; a
net/minecraft/world/entity/ai/behavior/StayCloseToTarget bke
	create (Ljava/util/function/Function;Ljava/util/function/Predicate;IIF)Lnet/minecraft/world/entity/ai/behavior/BehaviorControl; a
net/minecraft/world/entity/ai/behavior/StopAttackingIfTargetInvalid bkf
	TIMEOUT_TO_GET_WITHIN_ATTACK_RANGE a
	create ()Lnet/minecraft/world/entity/ai/behavior/BehaviorControl; a
	create (Ljava/util/function/BiConsumer;)Lnet/minecraft/world/entity/ai/behavior/BehaviorControl; a
	create (Ljava/util/function/Predicate;)Lnet/minecraft/world/entity/ai/behavior/BehaviorControl; a
	create (Ljava/util/function/Predicate;Ljava/util/function/BiConsumer;Z)Lnet/minecraft/world/entity/ai/behavior/BehaviorControl; a
	isTiredOfTryingToReachTarget (Lnet/minecraft/world/entity/LivingEntity;Ljava/util/Optional;)Z a
net/minecraft/world/entity/ai/behavior/StopBeingAngryIfTargetDead bkg
	create ()Lnet/minecraft/world/entity/ai/behavior/BehaviorControl; a
net/minecraft/world/entity/ai/behavior/StrollAroundPoi bkh
	MIN_TIME_BETWEEN_STROLLS a
	STROLL_MAX_XZ_DIST b
	STROLL_MAX_Y_DIST c
	create (Lnet/minecraft/world/entity/ai/memory/MemoryModuleType;FI)Lnet/minecraft/world/entity/ai/behavior/OneShot; a
net/minecraft/world/entity/ai/behavior/StrollToPoi bki
	create (Lnet/minecraft/world/entity/ai/memory/MemoryModuleType;FII)Lnet/minecraft/world/entity/ai/behavior/BehaviorControl; a
net/minecraft/world/entity/ai/behavior/StrollToPoiList bkj
	create (Lnet/minecraft/world/entity/ai/memory/MemoryModuleType;FIILnet/minecraft/world/entity/ai/memory/MemoryModuleType;)Lnet/minecraft/world/entity/ai/behavior/BehaviorControl; a
net/minecraft/world/entity/ai/behavior/Swim bkk
	chance c
	canStillUse (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)Z a
	canStillUse (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/Mob;J)Z a
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)Z a
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/Mob;)Z a
	tick (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V c
	tick (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/Mob;J)V b
net/minecraft/world/entity/ai/behavior/TradeWithVillager bkl
	INTERACT_DIST_SQR c
	SPEED_MODIFIER d
	trades e
	canStillUse (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)Z a
	canStillUse (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/npc/Villager;J)Z a
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)Z a
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/npc/Villager;)Z a
	figureOutWhatIAmWillingToTrade (Lnet/minecraft/world/entity/npc/Villager;Lnet/minecraft/world/entity/npc/Villager;)Ljava/util/Set; a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V d
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/npc/Villager;J)V b
	stop (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V b
	stop (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/npc/Villager;J)V d
	throwHalfStack (Lnet/minecraft/world/entity/npc/Villager;Ljava/util/Set;Lnet/minecraft/world/entity/LivingEntity;)V a
	tick (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V c
	tick (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/npc/Villager;J)V c
net/minecraft/world/entity/ai/behavior/TriggerGate bkm
	triggerGate (Ljava/util/List;Lnet/minecraft/world/entity/ai/behavior/GateBehavior$OrderPolicy;Lnet/minecraft/world/entity/ai/behavior/GateBehavior$RunningPolicy;)Lnet/minecraft/world/entity/ai/behavior/OneShot; a
	triggerOneShuffled (Ljava/util/List;)Lnet/minecraft/world/entity/ai/behavior/OneShot; a
net/minecraft/world/entity/ai/behavior/TryFindLand bkn
	COOLDOWN_TICKS a
	create (IF)Lnet/minecraft/world/entity/ai/behavior/BehaviorControl; a
net/minecraft/world/entity/ai/behavior/TryFindLandNearWater bko
	create (IF)Lnet/minecraft/world/entity/ai/behavior/BehaviorControl; a
net/minecraft/world/entity/ai/behavior/TryFindWater bkp
	create (IF)Lnet/minecraft/world/entity/ai/behavior/BehaviorControl; a
net/minecraft/world/entity/ai/behavior/TryLaySpawnOnWaterNearLand bkq
	create (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/world/entity/ai/behavior/BehaviorControl; a
net/minecraft/world/entity/ai/behavior/UpdateActivityFromSchedule bkr
	create ()Lnet/minecraft/world/entity/ai/behavior/BehaviorControl; a
net/minecraft/world/entity/ai/behavior/UseBonemeal bks
	BONEMEALING_DURATION c
	cropPos g
	lastBonemealingSession e
	nextWorkCycleTime d
	timeWorkedSoFar f
	canStillUse (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)Z a
	canStillUse (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/npc/Villager;J)Z a
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)Z a
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/npc/Villager;)Z a
	pickNextTarget (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/npc/Villager;)Ljava/util/Optional; b
	setCurrentCropAsTarget (Lnet/minecraft/world/entity/npc/Villager;)V a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V d
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/npc/Villager;J)V b
	stop (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V b
	stop (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/npc/Villager;J)V c
	tick (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V c
	tick (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/npc/Villager;J)V d
	validPos (Lnet/minecraft/core/BlockPos;Lnet/minecraft/server/level/ServerLevel;)Z a
net/minecraft/world/entity/ai/behavior/ValidateNearbyPoi bkt
	MAX_DISTANCE a
	bedIsOccupied (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/LivingEntity;)Z a
	create (Ljava/util/function/Predicate;Lnet/minecraft/world/entity/ai/memory/MemoryModuleType;)Lnet/minecraft/world/entity/ai/behavior/BehaviorControl; a
net/minecraft/world/entity/ai/behavior/VillageBoundRandomStroll bku
	MAX_XZ_DIST a
	MAX_Y_DIST b
	create (F)Lnet/minecraft/world/entity/ai/behavior/OneShot; a
	create (FII)Lnet/minecraft/world/entity/ai/behavior/OneShot; a
net/minecraft/world/entity/ai/behavior/VillagerCalmDown bkv
	SAFE_DISTANCE_FROM_DANGER a
	create ()Lnet/minecraft/world/entity/ai/behavior/BehaviorControl; a
net/minecraft/world/entity/ai/behavior/VillagerGoalPackages bkw
	STROLL_SPEED_MODIFIER a
	getCorePackage (Lnet/minecraft/world/entity/npc/VillagerProfession;F)Lcom/google/common/collect/ImmutableList; a
	getFullLookBehavior ()Lcom/mojang/datafixers/util/Pair; a
	getHidePackage (Lnet/minecraft/world/entity/npc/VillagerProfession;F)Lcom/google/common/collect/ImmutableList; i
	getIdlePackage (Lnet/minecraft/world/entity/npc/VillagerProfession;F)Lcom/google/common/collect/ImmutableList; e
	getMeetPackage (Lnet/minecraft/world/entity/npc/VillagerProfession;F)Lcom/google/common/collect/ImmutableList; d
	getMinimalLookBehavior ()Lcom/mojang/datafixers/util/Pair; b
	getPanicPackage (Lnet/minecraft/world/entity/npc/VillagerProfession;F)Lcom/google/common/collect/ImmutableList; f
	getPlayPackage (F)Lcom/google/common/collect/ImmutableList; a
	getPreRaidPackage (Lnet/minecraft/world/entity/npc/VillagerProfession;F)Lcom/google/common/collect/ImmutableList; g
	getRaidPackage (Lnet/minecraft/world/entity/npc/VillagerProfession;F)Lcom/google/common/collect/ImmutableList; h
	getRestPackage (Lnet/minecraft/world/entity/npc/VillagerProfession;F)Lcom/google/common/collect/ImmutableList; c
	getWorkPackage (Lnet/minecraft/world/entity/npc/VillagerProfession;F)Lcom/google/common/collect/ImmutableList; b
	raidExistsAndActive (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)Z a
	raidExistsAndNotVictory (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)Z b
net/minecraft/world/entity/ai/behavior/VillagerMakeLove bkx
	INTERACT_DIST_SQR c
	SPEED_MODIFIER d
	birthTimestamp e
	breed (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/npc/Villager;Lnet/minecraft/world/entity/npc/Villager;)Ljava/util/Optional; b
	canReach (Lnet/minecraft/world/entity/npc/Villager;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Holder;)Z a
	canStillUse (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)Z a
	canStillUse (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/npc/Villager;J)Z a
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)Z a
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/npc/Villager;)Z a
	giveBedToChild (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/npc/Villager;Lnet/minecraft/core/BlockPos;)V a
	isBreedingPossible (Lnet/minecraft/world/entity/npc/Villager;)Z a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V d
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/npc/Villager;J)V b
	stop (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V b
	stop (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/npc/Villager;J)V d
	takeVacantBed (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/npc/Villager;)Ljava/util/Optional; b
	tick (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V c
	tick (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/npc/Villager;J)V c
	tryToGiveBirth (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/npc/Villager;Lnet/minecraft/world/entity/npc/Villager;)V a
net/minecraft/world/entity/ai/behavior/VillagerPanicTrigger bky
	canStillUse (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)Z a
	canStillUse (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/npc/Villager;J)Z a
	hasHostile (Lnet/minecraft/world/entity/LivingEntity;)Z b
	isHurt (Lnet/minecraft/world/entity/LivingEntity;)Z c
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V d
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/npc/Villager;J)V b
	tick (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V c
	tick (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/npc/Villager;J)V c
net/minecraft/world/entity/ai/behavior/WakeUp bkz
	create ()Lnet/minecraft/world/entity/ai/behavior/BehaviorControl; a
net/minecraft/world/entity/ai/behavior/WorkAtComposter bla
	COMPOSTABLE_ITEMS c
	compostItems (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/npc/Villager;Lnet/minecraft/core/GlobalPos;Lnet/minecraft/world/level/block/state/BlockState;)V a
	makeBread (Lnet/minecraft/world/entity/npc/Villager;)V a
	spawnComposterFillEffects (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V a
	useWorkstation (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/npc/Villager;)V a
net/minecraft/world/entity/ai/behavior/WorkAtPoi blb
	CHECK_COOLDOWN c
	DISTANCE d
	lastCheck e
	canStillUse (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)Z a
	canStillUse (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/npc/Villager;J)Z b
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)Z a
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/npc/Villager;)Z b
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V d
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/npc/Villager;J)V a
	useWorkstation (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/npc/Villager;)V a
net/minecraft/world/entity/ai/behavior/YieldJobSite blc
	canReachPos (Lnet/minecraft/world/entity/PathfinderMob;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/ai/village/poi/PoiType;)Z a
	create (F)Lnet/minecraft/world/entity/ai/behavior/BehaviorControl; a
	nearbyWantsJobsite (Lnet/minecraft/core/Holder;Lnet/minecraft/world/entity/npc/Villager;Lnet/minecraft/core/BlockPos;)Z a
net/minecraft/world/entity/ai/behavior/declarative/BehaviorBuilder bld
	trigger a
	create (Ljava/util/function/Function;)Lnet/minecraft/world/entity/ai/behavior/OneShot; a
	create (Lnet/minecraft/world/entity/ai/behavior/declarative/BehaviorBuilder$TriggerWithResult;)Lnet/minecraft/world/entity/ai/behavior/declarative/BehaviorBuilder; a
	get (Lcom/mojang/datafixers/kinds/App;)Lnet/minecraft/world/entity/ai/behavior/declarative/BehaviorBuilder$TriggerWithResult; b
	instance ()Lnet/minecraft/world/entity/ai/behavior/declarative/BehaviorBuilder$Instance; a
	sequence (Lnet/minecraft/world/entity/ai/behavior/declarative/Trigger;Lnet/minecraft/world/entity/ai/behavior/declarative/Trigger;)Lnet/minecraft/world/entity/ai/behavior/OneShot; a
	triggerIf (Ljava/util/function/BiPredicate;)Lnet/minecraft/world/entity/ai/behavior/OneShot; a
	triggerIf (Ljava/util/function/Predicate;)Lnet/minecraft/world/entity/ai/behavior/OneShot; a
	triggerIf (Ljava/util/function/Predicate;Lnet/minecraft/world/entity/ai/behavior/OneShot;)Lnet/minecraft/world/entity/ai/behavior/OneShot; a
	unbox (Lcom/mojang/datafixers/kinds/App;)Lnet/minecraft/world/entity/ai/behavior/declarative/BehaviorBuilder; a
net/minecraft/world/entity/ai/behavior/declarative/BehaviorBuilder$Constant bld$a
net/minecraft/world/entity/ai/behavior/declarative/BehaviorBuilder$Instance bld$b
	absent (Lnet/minecraft/world/entity/ai/memory/MemoryModuleType;)Lnet/minecraft/world/entity/ai/behavior/declarative/BehaviorBuilder; c
	ap2 (Lcom/mojang/datafixers/kinds/App;Lcom/mojang/datafixers/kinds/App;Lcom/mojang/datafixers/kinds/App;)Lnet/minecraft/world/entity/ai/behavior/declarative/BehaviorBuilder; a
	ap3 (Lcom/mojang/datafixers/kinds/App;Lcom/mojang/datafixers/kinds/App;Lcom/mojang/datafixers/kinds/App;Lcom/mojang/datafixers/kinds/App;)Lnet/minecraft/world/entity/ai/behavior/declarative/BehaviorBuilder; a
	ap4 (Lcom/mojang/datafixers/kinds/App;Lcom/mojang/datafixers/kinds/App;Lcom/mojang/datafixers/kinds/App;Lcom/mojang/datafixers/kinds/App;Lcom/mojang/datafixers/kinds/App;)Lnet/minecraft/world/entity/ai/behavior/declarative/BehaviorBuilder; a
	get (Lnet/minecraft/world/entity/ai/behavior/declarative/MemoryAccessor;)Ljava/lang/Object; b
	ifTriggered (Lnet/minecraft/world/entity/ai/behavior/declarative/Trigger;)Lnet/minecraft/world/entity/ai/behavior/declarative/BehaviorBuilder; a
	map (Ljava/util/function/Function;Lcom/mojang/datafixers/kinds/App;)Lnet/minecraft/world/entity/ai/behavior/declarative/BehaviorBuilder; a
	point (Ljava/lang/Object;)Lnet/minecraft/world/entity/ai/behavior/declarative/BehaviorBuilder; a
	point (Ljava/util/function/Supplier;Ljava/lang/Object;)Lnet/minecraft/world/entity/ai/behavior/declarative/BehaviorBuilder; a
	present (Lnet/minecraft/world/entity/ai/memory/MemoryModuleType;)Lnet/minecraft/world/entity/ai/behavior/declarative/BehaviorBuilder; b
	registered (Lnet/minecraft/world/entity/ai/memory/MemoryModuleType;)Lnet/minecraft/world/entity/ai/behavior/declarative/BehaviorBuilder; a
	tryGet (Lnet/minecraft/world/entity/ai/behavior/declarative/MemoryAccessor;)Ljava/util/Optional; a
net/minecraft/world/entity/ai/behavior/declarative/BehaviorBuilder$Instance$Mu bld$b$a
net/minecraft/world/entity/ai/behavior/declarative/BehaviorBuilder$Mu bld$c
net/minecraft/world/entity/ai/behavior/declarative/BehaviorBuilder$PureMemory bld$d
net/minecraft/world/entity/ai/behavior/declarative/BehaviorBuilder$TriggerWithResult bld$e
	debugString ()Ljava/lang/String; a
	tryTrigger (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)Ljava/lang/Object; a
net/minecraft/world/entity/ai/behavior/declarative/BehaviorBuilder$TriggerWrapper bld$f
net/minecraft/world/entity/ai/behavior/declarative/MemoryAccessor ble
	brain a
	memoryType b
	value c
	erase ()V b
	set (Ljava/lang/Object;)V a
	setOrErase (Ljava/util/Optional;)V a
	setWithExpiry (Ljava/lang/Object;J)V a
	value ()Lcom/mojang/datafixers/kinds/App; a
net/minecraft/world/entity/ai/behavior/declarative/MemoryCondition blf
	condition ()Lnet/minecraft/world/entity/ai/memory/MemoryStatus; b
	createAccessor (Lnet/minecraft/world/entity/ai/Brain;Ljava/util/Optional;)Lnet/minecraft/world/entity/ai/behavior/declarative/MemoryAccessor; a
	memory ()Lnet/minecraft/world/entity/ai/memory/MemoryModuleType; a
net/minecraft/world/entity/ai/behavior/declarative/MemoryCondition$Absent blf$a
	memory a
	condition ()Lnet/minecraft/world/entity/ai/memory/MemoryStatus; b
	createAccessor (Lnet/minecraft/world/entity/ai/Brain;Ljava/util/Optional;)Lnet/minecraft/world/entity/ai/behavior/declarative/MemoryAccessor; a
	memory ()Lnet/minecraft/world/entity/ai/memory/MemoryModuleType; a
net/minecraft/world/entity/ai/behavior/declarative/MemoryCondition$Present blf$b
	memory a
	condition ()Lnet/minecraft/world/entity/ai/memory/MemoryStatus; b
	createAccessor (Lnet/minecraft/world/entity/ai/Brain;Ljava/util/Optional;)Lnet/minecraft/world/entity/ai/behavior/declarative/MemoryAccessor; a
	memory ()Lnet/minecraft/world/entity/ai/memory/MemoryModuleType; a
net/minecraft/world/entity/ai/behavior/declarative/MemoryCondition$Registered blf$c
	memory a
	condition ()Lnet/minecraft/world/entity/ai/memory/MemoryStatus; b
	createAccessor (Lnet/minecraft/world/entity/ai/Brain;Ljava/util/Optional;)Lnet/minecraft/world/entity/ai/behavior/declarative/MemoryAccessor; a
	memory ()Lnet/minecraft/world/entity/ai/memory/MemoryModuleType; a
net/minecraft/world/entity/ai/behavior/declarative/Trigger blg
net/minecraft/world/entity/ai/behavior/warden/Digging blj
	canStillUse (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)Z a
	canStillUse (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/monster/warden/Warden;J)Z a
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)Z a
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/monster/warden/Warden;)Z a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V d
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/monster/warden/Warden;J)V b
	stop (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V b
	stop (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/monster/warden/Warden;J)V c
net/minecraft/world/entity/ai/behavior/warden/Emerging blk
	canStillUse (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)Z a
	canStillUse (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/monster/warden/Warden;J)Z a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V d
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/monster/warden/Warden;J)V b
	stop (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V b
	stop (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/monster/warden/Warden;J)V c
net/minecraft/world/entity/ai/behavior/warden/ForceUnmount bll
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)Z a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V d
net/minecraft/world/entity/ai/behavior/warden/Roar blm
	ROAR_ANGER_INCREASE d
	TICKS_BEFORE_PLAYING_ROAR_SOUND c
	canStillUse (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)Z a
	canStillUse (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/monster/warden/Warden;J)Z b
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V d
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/monster/warden/Warden;J)V a
	stop (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V b
	stop (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/monster/warden/Warden;J)V d
	tick (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V c
	tick (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/monster/warden/Warden;J)V c
net/minecraft/world/entity/ai/behavior/warden/SetRoarTarget bln
	create (Ljava/util/function/Function;)Lnet/minecraft/world/entity/ai/behavior/BehaviorControl; a
net/minecraft/world/entity/ai/behavior/warden/SetWardenLookTarget blo
	create ()Lnet/minecraft/world/entity/ai/behavior/BehaviorControl; a
net/minecraft/world/entity/ai/behavior/warden/Sniffing blp
	ANGER_FROM_SNIFFING_MAX_DISTANCE_XZ c
	ANGER_FROM_SNIFFING_MAX_DISTANCE_Y d
	canStillUse (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)Z a
	canStillUse (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/monster/warden/Warden;J)Z a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V d
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/monster/warden/Warden;J)V b
	stop (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V b
	stop (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/monster/warden/Warden;J)V c
net/minecraft/world/entity/ai/behavior/warden/SonicBoom blq
	COOLDOWN c
	DISTANCE_XZ d
	DISTANCE_Y e
	DURATION i
	KNOCKBACK_HORIZONTAL g
	KNOCKBACK_VERTICAL f
	TICKS_BEFORE_PLAYING_SOUND h
	canStillUse (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)Z a
	canStillUse (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/monster/warden/Warden;J)Z a
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)Z a
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/monster/warden/Warden;)Z a
	setCooldown (Lnet/minecraft/world/entity/LivingEntity;I)V a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V d
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/monster/warden/Warden;J)V b
	stop (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V b
	stop (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/monster/warden/Warden;J)V d
	tick (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V c
	tick (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/monster/warden/Warden;J)V c
net/minecraft/world/entity/ai/behavior/warden/TryToSniff blr
	SNIFF_COOLDOWN a
	create ()Lnet/minecraft/world/entity/ai/behavior/BehaviorControl; a
net/minecraft/world/entity/ai/control/BodyRotationControl blt
	DELAY_UNTIL_STARTING_TO_FACE_FORWARD c
	HEAD_STABLE_ANGLE b
	HOW_LONG_IT_TAKES_TO_FACE_FORWARD d
	headStableTime e
	lastStableYHeadRot f
	mob a
	clientTick ()V a
	isMoving ()Z f
	notCarryingMobPassengers ()Z e
	rotateBodyIfNecessary ()V b
	rotateHeadIfNecessary ()V c
	rotateHeadTowardsFront ()V d
net/minecraft/world/entity/ai/control/Control blu
net/minecraft/world/entity/ai/control/FlyingMoveControl blv
	hoversInPlace m
	maxTurn l
	tick ()V a
net/minecraft/world/entity/ai/control/JumpControl blw
	jump a
	mob b
	jump ()V a
	tick ()V b
net/minecraft/world/entity/ai/control/LookControl blx
	lookAtCooldown d
	mob a
	wantedX e
	wantedY f
	wantedZ g
	xMaxRotAngle c
	yMaxRotSpeed b
	clampHeadRotationToBody ()V b
	getWantedX ()D e
	getWantedY ()D f
	getWantedY (Lnet/minecraft/world/entity/Entity;)D b
	getWantedZ ()D g
	getXRotD ()Ljava/util/Optional; h
	getYRotD ()Ljava/util/Optional; i
	isLookingAtTarget ()Z d
	resetXRotOnTick ()Z c
	rotateTowards (FFF)F a
	setLookAt (DDD)V a
	setLookAt (DDDFF)V a
	setLookAt (Lnet/minecraft/world/entity/Entity;)V a
	setLookAt (Lnet/minecraft/world/entity/Entity;FF)V a
	setLookAt (Lnet/minecraft/world/phys/Vec3;)V a
	tick ()V a
net/minecraft/world/entity/ai/control/MoveControl bly
	MAX_TURN c
	MIN_SPEED a
	MIN_SPEED_SQR b
	mob d
	operation k
	speedModifier h
	strafeForwards i
	strafeRight j
	wantedX e
	wantedY f
	wantedZ g
	getSpeedModifier ()D c
	getWantedX ()D d
	getWantedY ()D e
	getWantedZ ()D f
	hasWanted ()Z b
	isWalkable (FF)Z b
	rotlerp (FFF)F a
	setWantedPosition (DDDD)V a
	strafe (FF)V a
	tick ()V a
net/minecraft/world/entity/ai/control/MoveControl$Operation bly$a
	$VALUES e
	JUMPING d
	MOVE_TO b
	STRAFE c
	WAIT a
	$values ()[Lnet/minecraft/world/entity/ai/control/MoveControl$Operation; a
net/minecraft/world/entity/ai/control/SmoothSwimmingLookControl blz
	HEAD_TILT_X i
	HEAD_TILT_Y j
	maxYRotFromCenter h
	tick ()V a
net/minecraft/world/entity/ai/control/SmoothSwimmingMoveControl bma
	FULL_SPEED_TURN_THRESHOLD l
	STOP_TURN_THRESHOLD m
	applyGravity r
	inWaterSpeedModifier p
	maxTurnX n
	maxTurnY o
	outsideWaterSpeedModifier q
	getTurningSpeedFactor (F)F a
	tick ()V a
net/minecraft/world/entity/ai/goal/AvoidEntityGoal bmc
	avoidClass f
	avoidEntityTargeting k
	avoidPredicate g
	maxDist c
	mob a
	path d
	pathNav e
	predicateOnAvoidEntity h
	sprintSpeedModifier j
	toAvoid b
	walkSpeedModifier i
	canContinueToUse ()Z b
	canUse ()Z a
	start ()V c
	stop ()V d
	tick ()V e
net/minecraft/world/entity/ai/goal/BegGoal bmd
	begTargeting f
	level c
	lookDistance d
	lookTime e
	player b
	wolf a
	canContinueToUse ()Z b
	canUse ()Z a
	playerHoldingInteresting (Lnet/minecraft/world/entity/player/Player;)Z a
	start ()V c
	stop ()V d
	tick ()V e
net/minecraft/world/entity/ai/goal/BoatGoals bme
	$VALUES c
	GO_IN_BOAT_DIRECTION b
	GO_TO_BOAT a
	$values ()[Lnet/minecraft/world/entity/ai/goal/BoatGoals; a
net/minecraft/world/entity/ai/goal/BreakDoorGoal bmf
	DEFAULT_DOOR_BREAK_TIME g
	breakTime a
	doorBreakTime c
	lastBreakProgress b
	validDifficulties h
	canContinueToUse ()Z b
	canUse ()Z a
	getDoorBreakTime ()I f
	isValidDifficulty (Lnet/minecraft/world/Difficulty;)Z a
	start ()V c
	stop ()V d
	tick ()V e
net/minecraft/world/entity/ai/goal/BreathAirGoal bmg
	mob a
	canContinueToUse ()Z b
	canUse ()Z a
	findAirPosition ()V h
	givesAir (Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;)Z a
	isInterruptable ()Z J_
	start ()V c
	tick ()V e
net/minecraft/world/entity/ai/goal/BreedGoal bmh
	PARTNER_TARGETING d
	animal a
	level b
	loveTime f
	partner c
	partnerClass e
	speedModifier g
	breed ()V g
	canContinueToUse ()Z b
	canUse ()Z a
	getFreePartner ()Lnet/minecraft/world/entity/animal/Animal; h
	stop ()V d
	tick ()V e
net/minecraft/world/entity/ai/goal/CatLieOnBedGoal bmi
	cat g
	canUse ()Z a
	isValidTarget (Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;)Z a
	nextStartTick (Lnet/minecraft/world/entity/PathfinderMob;)I a
	start ()V c
	stop ()V d
	tick ()V e
net/minecraft/world/entity/ai/goal/CatSitOnBlockGoal bmj
	cat g
	canUse ()Z a
	isValidTarget (Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;)Z a
	start ()V c
	stop ()V d
	tick ()V e
net/minecraft/world/entity/ai/goal/ClimbOnTopOfPowderSnowGoal bmk
	level b
	mob a
	canUse ()Z a
	requiresUpdateEveryTick ()Z K_
	tick ()V e
net/minecraft/world/entity/ai/goal/DolphinJumpGoal bml
	STEPS_TO_CHECK a
	breached d
	dolphin b
	interval c
	canContinueToUse ()Z b
	canUse ()Z a
	isInterruptable ()Z J_
	start ()V c
	stop ()V d
	surfaceIsClear (Lnet/minecraft/core/BlockPos;III)Z b
	tick ()V e
	waterIsClear (Lnet/minecraft/core/BlockPos;III)Z a
net/minecraft/world/entity/ai/goal/DoorInteractGoal bmm
	doorOpenDirX b
	doorOpenDirZ c
	doorPos e
	hasDoor f
	mob d
	passed a
	canContinueToUse ()Z b
	canUse ()Z a
	isOpen ()Z h
	requiresUpdateEveryTick ()Z K_
	setOpen (Z)V a
	start ()V c
	tick ()V e
net/minecraft/world/entity/ai/goal/EatBlockGoal bmn
	EAT_ANIMATION_TICKS a
	IS_TALL_GRASS b
	eatAnimationTick e
	level d
	mob c
	canContinueToUse ()Z b
	canUse ()Z a
	getEatAnimationTick ()I h
	start ()V c
	stop ()V d
	tick ()V e
net/minecraft/world/entity/ai/goal/FleeSunGoal bmo
	level f
	mob a
	speedModifier e
	wantedX b
	wantedY c
	wantedZ d
	canContinueToUse ()Z b
	canUse ()Z a
	getHidePos ()Lnet/minecraft/world/phys/Vec3; i
	setWantedPos ()Z h
	start ()V c
net/minecraft/world/entity/ai/goal/FloatGoal bmp
	mob a
	canUse ()Z a
	requiresUpdateEveryTick ()Z K_
	tick ()V e
net/minecraft/world/entity/ai/goal/FollowBoatGoal bmq
	currentGoal d
	following c
	mob b
	timeToRecalcPath a
	canContinueToUse ()Z b
	canUse ()Z a
	isInterruptable ()Z J_
	start ()V c
	stop ()V d
	tick ()V e
net/minecraft/world/entity/ai/goal/FollowFlockLeaderGoal bmr
	INTERVAL_TICKS a
	mob b
	nextStartTick d
	timeToRecalcPath c
	canContinueToUse ()Z b
	canUse ()Z a
	nextStartTick (Lnet/minecraft/world/entity/animal/AbstractSchoolingFish;)I a
	start ()V c
	stop ()V d
	tick ()V e
net/minecraft/world/entity/ai/goal/FollowMobGoal bms
	areaSize i
	followPredicate b
	followingMob c
	mob a
	navigation e
	oldWaterCost h
	speedModifier d
	stopDistance g
	timeToRecalcPath f
	canContinueToUse ()Z b
	canUse ()Z a
	start ()V c
	stop ()V d
	tick ()V e
net/minecraft/world/entity/ai/goal/FollowOwnerGoal bmt
	MAX_HORIZONTAL_DISTANCE_FROM_PLAYER_WHEN_TELEPORTING c
	MAX_VERTICAL_DISTANCE_FROM_PLAYER_WHEN_TELEPORTING d
	MIN_HORIZONTAL_DISTANCE_FROM_PLAYER_WHEN_TELEPORTING b
	TELEPORT_WHEN_DISTANCE_IS a
	canFly n
	level g
	navigation i
	oldWaterCost m
	owner f
	speedModifier h
	startDistance l
	stopDistance k
	tamable e
	timeToRecalcPath j
	canContinueToUse ()Z b
	canTeleportTo (Lnet/minecraft/core/BlockPos;)Z a
	canUse ()Z a
	maybeTeleportTo (III)Z a
	randomIntInclusive (II)I a
	start ()V c
	stop ()V d
	teleportToOwner ()V i
	tick ()V e
	unableToMove ()Z h
net/minecraft/world/entity/ai/goal/FollowParentGoal bmu
	DONT_FOLLOW_IF_CLOSER_THAN c
	HORIZONTAL_SCAN_RANGE a
	VERTICAL_SCAN_RANGE b
	animal d
	parent e
	speedModifier f
	timeToRecalcPath g
	canContinueToUse ()Z b
	canUse ()Z a
	start ()V c
	stop ()V d
	tick ()V e
net/minecraft/world/entity/ai/goal/Goal bmv
	flags a
	adjustedTickDelay (I)I a
	canContinueToUse ()Z b
	canUse ()Z a
	getFlags ()Ljava/util/EnumSet; j
	isInterruptable ()Z J_
	reducedTickDelay (I)I b
	requiresUpdateEveryTick ()Z K_
	setFlags (Ljava/util/EnumSet;)V a
	start ()V c
	stop ()V d
	tick ()V e
net/minecraft/world/entity/ai/goal/Goal$Flag bmv$a
	$VALUES e
	JUMP c
	LOOK b
	MOVE a
	TARGET d
	$values ()[Lnet/minecraft/world/entity/ai/goal/Goal$Flag; a
net/minecraft/world/entity/ai/goal/GoalSelector bmw
	LOGGER a
	NO_GOAL b
	availableGoals d
	disabledFlags f
	lockedFlags c
	newGoalRate h
	profiler e
	tickCount g
	addGoal (ILnet/minecraft/world/entity/ai/goal/Goal;)V a
	disableControlFlag (Lnet/minecraft/world/entity/ai/goal/Goal$Flag;)V a
	enableControlFlag (Lnet/minecraft/world/entity/ai/goal/Goal$Flag;)V b
	getAvailableGoals ()Ljava/util/Set; b
	getRunningGoals ()Ljava/util/stream/Stream; c
	goalCanBeReplacedForAllFlags (Lnet/minecraft/world/entity/ai/goal/WrappedGoal;Ljava/util/Map;)Z a
	goalContainsAnyFlags (Lnet/minecraft/world/entity/ai/goal/WrappedGoal;Ljava/util/EnumSet;)Z a
	removeAllGoals (Ljava/util/function/Predicate;)V a
	removeGoal (Lnet/minecraft/world/entity/ai/goal/Goal;)V a
	setControlFlag (Lnet/minecraft/world/entity/ai/goal/Goal$Flag;Z)V a
	setNewGoalRate (I)V a
	tick ()V a
	tickRunningGoals (Z)V a
net/minecraft/world/entity/ai/goal/GolemRandomStrollInVillageGoal bmx
	POI_SECTION_SCAN_RADIUS i
	RANDOM_POS_XY_DISTANCE k
	RANDOM_POS_Y_DISTANCE l
	VILLAGER_SCAN_RADIUS j
	doesVillagerWantGolem (Lnet/minecraft/world/entity/npc/Villager;)Z a
	getPosition ()Lnet/minecraft/world/phys/Vec3; h
	getPositionTowardsAnywhere ()Lnet/minecraft/world/phys/Vec3; k
	getPositionTowardsPoi ()Lnet/minecraft/world/phys/Vec3; m
	getPositionTowardsVillagerWhoWantsGolem ()Lnet/minecraft/world/phys/Vec3; l
	getRandomPoiWithinSection (Lnet/minecraft/core/SectionPos;)Lnet/minecraft/core/BlockPos; a
	getRandomVillageSection ()Lnet/minecraft/core/SectionPos; n
net/minecraft/world/entity/ai/goal/InteractGoal bmy
net/minecraft/world/entity/ai/goal/JumpGoal bmz
net/minecraft/world/entity/ai/goal/LandOnOwnersShoulderGoal bna
	entity a
	isSittingOnShoulder c
	owner b
	canUse ()Z a
	isInterruptable ()Z J_
	start ()V c
	tick ()V e
net/minecraft/world/entity/ai/goal/LeapAtTargetGoal bnb
	mob a
	target b
	yd c
	canContinueToUse ()Z b
	canUse ()Z a
	start ()V c
net/minecraft/world/entity/ai/goal/LlamaFollowCaravanGoal bnc
	CARAVAN_LIMIT c
	distCheckCounter d
	llama a
	speedModifier b
	canContinueToUse ()Z b
	canUse ()Z a
	firstIsLeashed (Lnet/minecraft/world/entity/animal/horse/Llama;I)Z a
	stop ()V d
	tick ()V e
net/minecraft/world/entity/ai/goal/LookAtPlayerGoal bnd
	DEFAULT_PROBABILITY a
	lookAt c
	lookAtContext g
	lookAtType f
	lookDistance d
	lookTime h
	mob b
	onlyHorizontal i
	probability e
	canContinueToUse ()Z b
	canUse ()Z a
	start ()V c
	stop ()V d
	tick ()V e
net/minecraft/world/entity/ai/goal/LookAtTradingPlayerGoal bne
	villager h
	canUse ()Z a
net/minecraft/world/entity/ai/goal/MeleeAttackGoal bnf
	COOLDOWN_BETWEEN_CAN_USE_CHECKS l
	attackInterval j
	followingTargetEvenIfNotSeen c
	lastCanUseCheck k
	mob a
	path d
	pathedTargetX e
	pathedTargetY f
	pathedTargetZ g
	speedModifier b
	ticksUntilNextAttack i
	ticksUntilNextPathRecalculation h
	canContinueToUse ()Z b
	canUse ()Z a
	checkAndPerformAttack (Lnet/minecraft/world/entity/LivingEntity;D)V a
	getAttackInterval ()I l
	getAttackReachSqr (Lnet/minecraft/world/entity/LivingEntity;)D a
	getTicksUntilNextAttack ()I k
	isTimeToAttack ()Z i
	requiresUpdateEveryTick ()Z K_
	resetAttackCooldown ()V h
	start ()V c
	stop ()V d
	tick ()V e
net/minecraft/world/entity/ai/goal/MoveBackToVillageGoal bng
	MAX_XZ_DIST i
	MAX_Y_DIST j
	canUse ()Z a
	getPosition ()Lnet/minecraft/world/phys/Vec3; h
net/minecraft/world/entity/ai/goal/MoveThroughVillageGoal bnh
	canDealWithDoors h
	distanceToPoi g
	mob a
	onlyAtNight e
	path c
	poiPos d
	speedModifier b
	visited f
	canContinueToUse ()Z b
	canUse ()Z a
	hasNotVisited (Lnet/minecraft/core/BlockPos;)Z a
	start ()V c
	stop ()V d
	updateVisited ()V h
net/minecraft/world/entity/ai/goal/MoveToBlockGoal bni
	GIVE_UP_TICKS g
	INTERVAL_TICKS i
	STAY_TICKS h
	blockPos e
	maxStayTicks j
	mob a
	nextStartTick c
	reachedTarget k
	searchRange l
	speedModifier b
	tryTicks d
	verticalSearchRange m
	verticalSearchStart f
	acceptedDistance ()D i
	canContinueToUse ()Z b
	canUse ()Z a
	findNearestBlock ()Z n
	getMoveToTarget ()Lnet/minecraft/core/BlockPos; k
	isReachedTarget ()Z m
	isValidTarget (Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;)Z a
	moveMobToBlock ()V h
	nextStartTick (Lnet/minecraft/world/entity/PathfinderMob;)I a
	requiresUpdateEveryTick ()Z K_
	shouldRecalculatePath ()Z l
	start ()V c
	tick ()V e
net/minecraft/world/entity/ai/goal/MoveTowardsRestrictionGoal bnj
	mob a
	speedModifier e
	wantedX b
	wantedY c
	wantedZ d
	canContinueToUse ()Z b
	canUse ()Z a
	start ()V c
net/minecraft/world/entity/ai/goal/MoveTowardsTargetGoal bnk
	mob a
	speedModifier f
	target b
	wantedX c
	wantedY d
	wantedZ e
	within g
	canContinueToUse ()Z b
	canUse ()Z a
	start ()V c
	stop ()V d
net/minecraft/world/entity/ai/goal/OcelotAttackGoal bnl
	attackTime c
	mob a
	target b
	canContinueToUse ()Z b
	canUse ()Z a
	requiresUpdateEveryTick ()Z K_
	stop ()V d
	tick ()V e
net/minecraft/world/entity/ai/goal/OfferFlowerGoal bnm
	OFFER_TARGER_CONTEXT b
	OFFER_TICKS a
	golem c
	tick e
	villager d
	canContinueToUse ()Z b
	canUse ()Z a
	start ()V c
	stop ()V d
	tick ()V e
net/minecraft/world/entity/ai/goal/OpenDoorGoal bnn
	closeDoor a
	forgetTime b
	canContinueToUse ()Z b
	start ()V c
	stop ()V d
	tick ()V e
net/minecraft/world/entity/ai/goal/PanicGoal bno
	WATER_CHECK_DISTANCE_VERTICAL a
	isRunning g
	mob b
	posX d
	posY e
	posZ f
	speedModifier c
	canContinueToUse ()Z b
	canUse ()Z a
	findRandomPosition ()Z i
	isRunning ()Z k
	lookForWater (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/world/entity/Entity;I)Lnet/minecraft/core/BlockPos; a
	shouldPanic ()Z h
	start ()V c
	stop ()V d
net/minecraft/world/entity/ai/goal/PathfindToRaidGoal bnp
	RECRUITMENT_SEARCH_TICK_DELAY a
	SPEED_MODIFIER b
	mob c
	recruitmentTick d
	canContinueToUse ()Z b
	canUse ()Z a
	recruitNearby (Lnet/minecraft/world/entity/raid/Raid;)V a
	tick ()V e
net/minecraft/world/entity/ai/goal/RandomLookAroundGoal bnq
	lookTime d
	mob a
	relX b
	relZ c
	canContinueToUse ()Z b
	canUse ()Z a
	requiresUpdateEveryTick ()Z K_
	start ()V c
	tick ()V e
net/minecraft/world/entity/ai/goal/RandomStandGoal bnr
	horse a
	nextStand b
	canContinueToUse ()Z b
	canUse ()Z a
	playStandSound ()V h
	requiresUpdateEveryTick ()Z K_
	resetStandInterval (Lnet/minecraft/world/entity/animal/horse/AbstractHorse;)V a
	start ()V c
net/minecraft/world/entity/ai/goal/RandomStrollGoal bns
	DEFAULT_INTERVAL a
	checkNoActionTime i
	forceTrigger h
	interval g
	mob b
	speedModifier f
	wantedX c
	wantedY d
	wantedZ e
	canContinueToUse ()Z b
	canUse ()Z a
	getPosition ()Lnet/minecraft/world/phys/Vec3; h
	setInterval (I)V c
	start ()V c
	stop ()V d
	trigger ()V i
net/minecraft/world/entity/ai/goal/RandomSwimmingGoal bnt
	getPosition ()Lnet/minecraft/world/phys/Vec3; h
net/minecraft/world/entity/ai/goal/RangedAttackGoal bnu
	attackIntervalMax h
	attackIntervalMin g
	attackRadius i
	attackRadiusSqr j
	attackTime d
	mob a
	rangedAttackMob b
	seeTime f
	speedModifier e
	target c
	canContinueToUse ()Z b
	canUse ()Z a
	requiresUpdateEveryTick ()Z K_
	stop ()V d
	tick ()V e
net/minecraft/world/entity/ai/goal/RangedBowAttackGoal bnv
	attackIntervalMin c
	attackRadiusSqr d
	attackTime e
	mob a
	seeTime f
	speedModifier b
	strafingBackwards h
	strafingClockwise g
	strafingTime i
	canContinueToUse ()Z b
	canUse ()Z a
	isHoldingBow ()Z h
	requiresUpdateEveryTick ()Z K_
	setMinAttackInterval (I)V c
	start ()V c
	stop ()V d
	tick ()V e
net/minecraft/world/entity/ai/goal/RangedCrossbowAttackGoal bnw
	PATHFINDING_DELAY_RANGE a
	attackDelay g
	attackRadiusSqr e
	crossbowState c
	mob b
	seeTime f
	speedModifier d
	updatePathDelay h
	canContinueToUse ()Z b
	canRun ()Z k
	canUse ()Z a
	isHoldingCrossbow ()Z h
	isValidTarget ()Z i
	requiresUpdateEveryTick ()Z K_
	stop ()V d
	tick ()V e
net/minecraft/world/entity/ai/goal/RangedCrossbowAttackGoal$CrossbowState bnw$a
	$VALUES e
	CHARGED c
	CHARGING b
	READY_TO_ATTACK d
	UNCHARGED a
	$values ()[Lnet/minecraft/world/entity/ai/goal/RangedCrossbowAttackGoal$CrossbowState; a
net/minecraft/world/entity/ai/goal/RemoveBlockGoal bnx
	WAIT_AFTER_BLOCK_FOUND j
	blockToRemove g
	removerMob h
	ticksSinceReachedGoal i
	canUse ()Z a
	getPosWithBlock (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/BlockGetter;)Lnet/minecraft/core/BlockPos; a
	isValidTarget (Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;)Z a
	playBreakSound (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)V a
	playDestroyProgressSound (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;)V a
	start ()V c
	stop ()V d
	tick ()V e
net/minecraft/world/entity/ai/goal/RestrictSunGoal bny
	mob a
	canUse ()Z a
	start ()V c
	stop ()V d
net/minecraft/world/entity/ai/goal/RunAroundLikeCrazyGoal bnz
	horse a
	posX c
	posY d
	posZ e
	speedModifier b
	canContinueToUse ()Z b
	canUse ()Z a
	start ()V c
	tick ()V e
net/minecraft/world/entity/ai/goal/SitWhenOrderedToGoal boa
	mob a
	canContinueToUse ()Z b
	canUse ()Z a
	start ()V c
	stop ()V d
net/minecraft/world/entity/ai/goal/StrollThroughVillageGoal bob
	DISTANCE_THRESHOLD a
	interval c
	mob b
	wantedPos d
	canContinueToUse ()Z b
	canUse ()Z a
	moveRandomly ()V h
	tick ()V e
net/minecraft/world/entity/ai/goal/SwellGoal boc
	creeper a
	target b
	canUse ()Z a
	requiresUpdateEveryTick ()Z K_
	start ()V c
	stop ()V d
	tick ()V e
net/minecraft/world/entity/ai/goal/TemptGoal bod
	TEMP_TARGETING c
	calmDown k
	canScare n
	isRunning l
	items m
	mob a
	pRotX i
	pRotY j
	player b
	px f
	py g
	pz h
	speedModifier e
	targetingConditions d
	canContinueToUse ()Z b
	canScare ()Z h
	canUse ()Z a
	isRunning ()Z i
	shouldFollow (Lnet/minecraft/world/entity/LivingEntity;)Z a
	start ()V c
	stop ()V d
	tick ()V e
net/minecraft/world/entity/ai/goal/TradeWithPlayerGoal boe
	mob a
	canUse ()Z a
	start ()V c
	stop ()V d
net/minecraft/world/entity/ai/goal/TryFindWaterGoal bof
	mob a
	canUse ()Z a
	start ()V c
net/minecraft/world/entity/ai/goal/UseItemGoal bog
	canUseSelector c
	finishUsingSound d
	item b
	mob a
	canContinueToUse ()Z b
	canUse ()Z a
	start ()V c
	stop ()V d
net/minecraft/world/entity/ai/goal/WaterAvoidingRandomFlyingGoal boh
	getPosition ()Lnet/minecraft/world/phys/Vec3; h
net/minecraft/world/entity/ai/goal/WaterAvoidingRandomStrollGoal boi
	PROBABILITY i
	probability j
	getPosition ()Lnet/minecraft/world/phys/Vec3; h
net/minecraft/world/entity/ai/goal/WrappedGoal boj
	goal a
	isRunning c
	priority b
	adjustedTickDelay (I)I a
	canBeReplacedBy (Lnet/minecraft/world/entity/ai/goal/WrappedGoal;)Z a
	canContinueToUse ()Z b
	canUse ()Z a
	getFlags ()Ljava/util/EnumSet; j
	getGoal ()Lnet/minecraft/world/entity/ai/goal/Goal; k
	getPriority ()I i
	isInterruptable ()Z J_
	isRunning ()Z h
	requiresUpdateEveryTick ()Z K_
	setFlags (Ljava/util/EnumSet;)V a
	start ()V c
	stop ()V d
	tick ()V e
net/minecraft/world/entity/ai/goal/ZombieAttackGoal bok
	raiseArmTicks c
	zombie b
	start ()V c
	stop ()V d
	tick ()V e
net/minecraft/world/entity/ai/goal/target/DefendVillageTargetGoal bom
	attackTargeting c
	golem a
	potentialTarget b
	canUse ()Z a
	start ()V c
net/minecraft/world/entity/ai/goal/target/HurtByTargetGoal bon
	ALERT_RANGE_Y b
	HURT_BY_TARGETING a
	alertSameType c
	timestamp d
	toIgnoreAlert j
	toIgnoreDamage i
	alertOther (Lnet/minecraft/world/entity/Mob;Lnet/minecraft/world/entity/LivingEntity;)V a
	alertOthers ()V h
	canUse ()Z a
	setAlertOthers ([Ljava/lang/Class;)Lnet/minecraft/world/entity/ai/goal/target/HurtByTargetGoal; a
	start ()V c
net/minecraft/world/entity/ai/goal/target/NearestAttackableTargetGoal boo
	DEFAULT_RANDOM_INTERVAL i
	randomInterval b
	target c
	targetConditions d
	targetType a
	canUse ()Z a
	findTarget ()V h
	getTargetSearchArea (D)Lnet/minecraft/world/phys/AABB; a
	setTarget (Lnet/minecraft/world/entity/LivingEntity;)V a
	start ()V c
net/minecraft/world/entity/ai/goal/target/NearestAttackableWitchTargetGoal bop
	canAttack i
	canUse ()Z a
	setCanAttack (Z)V a
net/minecraft/world/entity/ai/goal/target/NearestHealableRaiderTargetGoal boq
	DEFAULT_COOLDOWN i
	cooldown j
	canUse ()Z a
	decrementCooldown ()V k
	getCooldown ()I i
	start ()V c
net/minecraft/world/entity/ai/goal/target/NonTameRandomTargetGoal bor
	tamableMob i
	canContinueToUse ()Z b
	canUse ()Z a
net/minecraft/world/entity/ai/goal/target/OwnerHurtByTargetGoal bos
	ownerLastHurtBy b
	tameAnimal a
	timestamp c
	canUse ()Z a
	start ()V c
net/minecraft/world/entity/ai/goal/target/OwnerHurtTargetGoal bot
	ownerLastHurt b
	tameAnimal a
	timestamp c
	canUse ()Z a
	start ()V c
net/minecraft/world/entity/ai/goal/target/ResetUniversalAngerTargetGoal bou
	ALERT_RANGE_Y a
	alertOthersOfSameType c
	lastHurtByPlayerTimestamp d
	mob b
	canUse ()Z a
	getNearbyMobsOfSameType ()Ljava/util/List; i
	start ()V c
	wasHurtByPlayer ()Z h
net/minecraft/world/entity/ai/goal/target/TargetGoal bov
	CANT_REACH_CACHE c
	CAN_REACH_CACHE b
	EMPTY_REACH_CACHE a
	mob e
	mustReach d
	mustSee f
	reachCache i
	reachCacheTime j
	targetMob g
	unseenMemoryTicks h
	unseenTicks k
	canAttack (Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/entity/ai/targeting/TargetingConditions;)Z a
	canContinueToUse ()Z b
	canReach (Lnet/minecraft/world/entity/LivingEntity;)Z a
	getFollowDistance ()D l
	setUnseenMemoryTicks (I)Lnet/minecraft/world/entity/ai/goal/target/TargetGoal; c
	start ()V c
	stop ()V d
net/minecraft/world/entity/ai/gossip/GossipContainer box
	DISCARD_THRESHOLD a
	LOGGER b
	gossips c
	add (Ljava/util/UUID;Lnet/minecraft/world/entity/ai/gossip/GossipType;I)V a
	decay ()V b
	getCountForType (Lnet/minecraft/world/entity/ai/gossip/GossipType;Ljava/util/function/DoublePredicate;)J a
	getGossipEntries ()Ljava/util/Map; a
	getOrCreate (Ljava/util/UUID;)Lnet/minecraft/world/entity/ai/gossip/GossipContainer$EntityGossips; a
	getReputation (Ljava/util/UUID;Ljava/util/function/Predicate;)I a
	mergeValuesForAddition (Lnet/minecraft/world/entity/ai/gossip/GossipType;II)I a
	mergeValuesForTransfer (II)I a
	remove (Ljava/util/UUID;Lnet/minecraft/world/entity/ai/gossip/GossipType;)V a
	remove (Ljava/util/UUID;Lnet/minecraft/world/entity/ai/gossip/GossipType;I)V b
	remove (Lnet/minecraft/world/entity/ai/gossip/GossipType;)V a
	selectGossipsForTransfer (Lnet/minecraft/util/RandomSource;I)Ljava/util/Collection; a
	store (Lcom/mojang/serialization/DynamicOps;)Ljava/lang/Object; a
	transferFrom (Lnet/minecraft/world/entity/ai/gossip/GossipContainer;Lnet/minecraft/util/RandomSource;I)V a
	unpack ()Ljava/util/stream/Stream; c
	update (Lcom/mojang/serialization/Dynamic;)V a
net/minecraft/world/entity/ai/gossip/GossipContainer$EntityGossips box$a
	entries a
	decay ()V a
	isEmpty ()Z b
	makeSureValueIsntTooLowOrTooHigh (Lnet/minecraft/world/entity/ai/gossip/GossipType;)V a
	remove (Lnet/minecraft/world/entity/ai/gossip/GossipType;)V b
	unpack (Ljava/util/UUID;)Ljava/util/stream/Stream; a
	weightedValue (Ljava/util/function/Predicate;)I a
net/minecraft/world/entity/ai/gossip/GossipContainer$GossipEntry box$b
	CODEC a
	LIST_CODEC b
	target c
	type d
	value e
	target ()Ljava/util/UUID; b
	type ()Lnet/minecraft/world/entity/ai/gossip/GossipType; c
	value ()I d
	weightedValue ()I a
net/minecraft/world/entity/ai/gossip/GossipType boy
	$VALUES o
	CODEC n
	MAJOR_NEGATIVE a
	MAJOR_POSITIVE d
	MINOR_NEGATIVE b
	MINOR_POSITIVE c
	REPUTATION_CHANGE_PER_EVENT f
	REPUTATION_CHANGE_PER_EVERLASTING_MEMORY g
	REPUTATION_CHANGE_PER_TRADE h
	TRADING e
	decayPerDay l
	decayPerTransfer m
	id i
	max k
	weight j
	$values ()[Lnet/minecraft/world/entity/ai/gossip/GossipType; a
	getSerializedName ()Ljava/lang/String; c
net/minecraft/world/entity/ai/memory/ExpirableValue bpa
	timeToLive b
	value a
	canExpire ()Z e
	codec (Lcom/mojang/serialization/Codec;)Lcom/mojang/serialization/Codec; a
	getTimeToLive ()J b
	getValue ()Ljava/lang/Object; c
	hasExpired ()Z d
	of (Ljava/lang/Object;)Lnet/minecraft/world/entity/ai/memory/ExpirableValue; a
	of (Ljava/lang/Object;J)Lnet/minecraft/world/entity/ai/memory/ExpirableValue; a
	tick ()V a
net/minecraft/world/entity/ai/memory/MemoryModuleType bpb
	ADMIRING_DISABLED af
	ADMIRING_ITEM ac
	ANGRY_AT aa
	ATE_RECENTLY au
	ATTACK_COOLING_DOWN p
	ATTACK_TARGET o
	AVOID_TARGET z
	BREED_TARGET r
	CANT_REACH_WALK_TARGET_SINCE E
	CELEBRATE_LOCATION ah
	DANCING ai
	DIG_COOLDOWN aD
	DISABLE_WALK_TO_ADMIRE_ITEM ae
	DISTURBANCE_LOCATION ay
	DOORS_TO_CLOSE v
	DUMMY a
	GAZE_COOLDOWN_TICKS P
	GOLEM_DETECTED_RECENTLY F
	HAS_HUNTING_COOLDOWN T
	HEARD_BELL_TIME D
	HIDING_PLACE C
	HOME b
	HUNTED_RECENTLY ag
	HURT_BY x
	HURT_BY_ENTITY y
	INTERACTABLE_DOORS u
	INTERACTION_TARGET q
	IS_EMERGING aB
	IS_IN_WATER W
	IS_PANICKING Y
	IS_PREGNANT X
	IS_SNIFFING aA
	IS_TEMPTED Q
	ITEM_PICKUP_COOLDOWN_TICKS aO
	JOB_SITE c
	LAST_SLEPT G
	LAST_WOKEN H
	LAST_WORKED_AT_POI I
	LIKED_NOTEBLOCK_COOLDOWN_TICKS aN
	LIKED_NOTEBLOCK_POSITION aM
	LIKED_PLAYER aL
	LONG_JUMP_COOLDOWN_TICKS R
	LONG_JUMP_MID_JUMP S
	LOOK_TARGET n
	MEETING_POINT e
	NEARBY_ADULT_PIGLINS am
	NEAREST_ATTACKABLE B
	NEAREST_BED w
	NEAREST_HOSTILE A
	NEAREST_LIVING_ENTITIES g
	NEAREST_PLAYERS j
	NEAREST_PLAYER_HOLDING_WANTED_ITEM at
	NEAREST_REPELLENT av
	NEAREST_TARGETABLE_PLAYER_NOT_WEARING_GOLD al
	NEAREST_VISIBLE_ADULT J
	NEAREST_VISIBLE_ADULT_HOGLINS ao
	NEAREST_VISIBLE_ADULT_PIGLIN ap
	NEAREST_VISIBLE_ADULT_PIGLINS an
	NEAREST_VISIBLE_ATTACKABLE_PLAYER l
	NEAREST_VISIBLE_BABY_HOGLIN ak
	NEAREST_VISIBLE_HUNTABLE_HOGLIN aj
	NEAREST_VISIBLE_LIVING_ENTITIES h
	NEAREST_VISIBLE_NEMESIS L
	NEAREST_VISIBLE_PLAYER k
	NEAREST_VISIBLE_WANTED_ITEM K
	NEAREST_VISIBLE_ZOMBIFIED aq
	PACIFIED aw
	PATH t
	PLAY_DEAD_TICKS M
	POTENTIAL_JOB_SITE d
	RAM_COOLDOWN_TICKS U
	RAM_TARGET V
	RECENT_PROJECTILE az
	RIDE_TARGET s
	ROAR_SOUND_COOLDOWN aE
	ROAR_SOUND_DELAY aC
	ROAR_TARGET ax
	SECONDARY_JOB_SITE f
	SNIFFER_DIGGING aR
	SNIFFER_EXPLORED_POSITIONS aP
	SNIFFER_HAPPY aS
	SNIFFER_SNIFFING_TARGET aQ
	SNIFF_COOLDOWN aF
	SONIC_BOOM_COOLDOWN aI
	SONIC_BOOM_SOUND_COOLDOWN aJ
	SONIC_BOOM_SOUND_DELAY aK
	TEMPTATION_COOLDOWN_TICKS O
	TEMPTING_PLAYER N
	TIME_TRYING_TO_REACH_ADMIRE_ITEM ad
	TOUCH_COOLDOWN aG
	UNIVERSAL_ANGER ab
	UNREACHABLE_TONGUE_TARGETS Z
	VIBRATION_COOLDOWN aH
	VISIBLE_ADULT_HOGLIN_COUNT as
	VISIBLE_ADULT_PIGLIN_COUNT ar
	VISIBLE_VILLAGER_BABIES i
	WALK_TARGET m
	codec aT
	getCodec ()Ljava/util/Optional; a
	register (Ljava/lang/String;)Lnet/minecraft/world/entity/ai/memory/MemoryModuleType; a
	register (Ljava/lang/String;Lcom/mojang/serialization/Codec;)Lnet/minecraft/world/entity/ai/memory/MemoryModuleType; a
net/minecraft/world/entity/ai/memory/MemoryStatus bpc
	$VALUES d
	REGISTERED c
	VALUE_ABSENT b
	VALUE_PRESENT a
	$values ()[Lnet/minecraft/world/entity/ai/memory/MemoryStatus; a
net/minecraft/world/entity/ai/memory/NearestVisibleLivingEntities bpd
	EMPTY a
	lineOfSightTest c
	nearbyEntities b
	contains (Ljava/util/function/Predicate;)Z d
	contains (Lnet/minecraft/world/entity/LivingEntity;)Z a
	empty ()Lnet/minecraft/world/entity/ai/memory/NearestVisibleLivingEntities; a
	find (Ljava/util/function/Predicate;)Ljava/util/stream/Stream; c
	findAll (Ljava/util/function/Predicate;)Ljava/lang/Iterable; b
	findClosest (Ljava/util/function/Predicate;)Ljava/util/Optional; a
net/minecraft/world/entity/ai/memory/WalkTarget bpe
	closeEnoughDist c
	speedModifier b
	target a
	getCloseEnoughDist ()I c
	getSpeedModifier ()F b
	getTarget ()Lnet/minecraft/world/entity/ai/behavior/PositionTracker; a
net/minecraft/world/entity/ai/navigation/AmphibiousPathNavigation bpg
	canMoveDirectly (Lnet/minecraft/world/phys/Vec3;Lnet/minecraft/world/phys/Vec3;)Z a
	canUpdatePath ()Z a
	createPathFinder (I)Lnet/minecraft/world/level/pathfinder/PathFinder; a
	getGroundY (Lnet/minecraft/world/phys/Vec3;)D a
	getTempMobPos ()Lnet/minecraft/world/phys/Vec3; b
	isStableDestination (Lnet/minecraft/core/BlockPos;)Z a
	setCanFloat (Z)V a
net/minecraft/world/entity/ai/navigation/FlyingPathNavigation bph
	canMoveDirectly (Lnet/minecraft/world/phys/Vec3;Lnet/minecraft/world/phys/Vec3;)Z a
	canOpenDoors ()Z e
	canPassDoors ()Z d
	canUpdatePath ()Z a
	createPath (Lnet/minecraft/world/entity/Entity;I)Lnet/minecraft/world/level/pathfinder/Path; a
	createPathFinder (I)Lnet/minecraft/world/level/pathfinder/PathFinder; a
	getTempMobPos ()Lnet/minecraft/world/phys/Vec3; b
	isStableDestination (Lnet/minecraft/core/BlockPos;)Z a
	setCanOpenDoors (Z)V b
	setCanPassDoors (Z)V c
	tick ()V c
net/minecraft/world/entity/ai/navigation/GroundPathNavigation bpi
	avoidSun p
	canOpenDoors ()Z f
	canPassDoors ()Z e
	canUpdatePath ()Z a
	createPath (Lnet/minecraft/core/BlockPos;I)Lnet/minecraft/world/level/pathfinder/Path; a
	createPath (Lnet/minecraft/world/entity/Entity;I)Lnet/minecraft/world/level/pathfinder/Path; a
	createPathFinder (I)Lnet/minecraft/world/level/pathfinder/PathFinder; a
	getSurfaceY ()I t
	getTempMobPos ()Lnet/minecraft/world/phys/Vec3; b
	hasValidPathType (Lnet/minecraft/world/level/pathfinder/BlockPathTypes;)Z a
	setAvoidSun (Z)V d
	setCanOpenDoors (Z)V b
	setCanPassDoors (Z)V c
	setCanWalkOverFences (Z)V e
	trimPath ()V L_
net/minecraft/world/entity/ai/navigation/PathNavigation bpj
	MAX_TIME_RECOMPUTE p
	STUCK_CHECK_INTERVAL q
	STUCK_THRESHOLD_DISTANCE_FACTOR r
	hasDelayedRecomputation m
	isStuck w
	lastStuckCheck f
	lastStuckCheckPos g
	lastTimeoutCheck j
	level b
	maxDistanceToWaypoint l
	maxVisitedNodesMultiplier u
	mob a
	nodeEvaluator o
	path c
	pathFinder v
	reachRange t
	speedModifier d
	targetPos s
	tick e
	timeLastRecompute n
	timeoutCachedNode h
	timeoutLimit k
	timeoutTimer i
	canCutCorner (Lnet/minecraft/world/level/pathfinder/BlockPathTypes;)Z b
	canFloat ()Z q
	canMoveDirectly (Lnet/minecraft/world/phys/Vec3;Lnet/minecraft/world/phys/Vec3;)Z a
	canUpdatePath ()Z a
	createPath (DDDI)Lnet/minecraft/world/level/pathfinder/Path; a
	createPath (Ljava/util/Set;I)Lnet/minecraft/world/level/pathfinder/Path; a
	createPath (Ljava/util/Set;IZI)Lnet/minecraft/world/level/pathfinder/Path; a
	createPath (Ljava/util/Set;IZIF)Lnet/minecraft/world/level/pathfinder/Path; a
	createPath (Ljava/util/stream/Stream;I)Lnet/minecraft/world/level/pathfinder/Path; a
	createPath (Lnet/minecraft/core/BlockPos;I)Lnet/minecraft/world/level/pathfinder/Path; a
	createPath (Lnet/minecraft/core/BlockPos;II)Lnet/minecraft/world/level/pathfinder/Path; a
	createPath (Lnet/minecraft/world/entity/Entity;I)Lnet/minecraft/world/level/pathfinder/Path; a
	createPathFinder (I)Lnet/minecraft/world/level/pathfinder/PathFinder; a
	doStuckDetection (Lnet/minecraft/world/phys/Vec3;)V b
	followThePath ()V k
	getGroundY (Lnet/minecraft/world/phys/Vec3;)D a
	getMaxDistanceToWaypoint ()F r
	getNodeEvaluator ()Lnet/minecraft/world/level/pathfinder/NodeEvaluator; p
	getPath ()Lnet/minecraft/world/level/pathfinder/Path; j
	getTargetPos ()Lnet/minecraft/core/BlockPos; h
	getTempMobPos ()Lnet/minecraft/world/phys/Vec3; b
	isClearForMovementBetween (Lnet/minecraft/world/entity/Mob;Lnet/minecraft/world/phys/Vec3;Lnet/minecraft/world/phys/Vec3;Z)Z a
	isDone ()Z l
	isInLiquid ()Z o
	isInProgress ()Z m
	isStableDestination (Lnet/minecraft/core/BlockPos;)Z a
	isStuck ()Z s
	moveTo (DDDD)Z a
	moveTo (Lnet/minecraft/world/entity/Entity;D)Z a
	moveTo (Lnet/minecraft/world/level/pathfinder/Path;D)Z a
	recomputePath ()V i
	resetMaxVisitedNodesMultiplier ()V g
	resetStuckTimeout ()V f
	setCanFloat (Z)V a
	setMaxVisitedNodesMultiplier (F)V a
	setSpeedModifier (D)V a
	shouldRecomputePath (Lnet/minecraft/core/BlockPos;)Z b
	shouldTargetNextNodeInDirection (Lnet/minecraft/world/phys/Vec3;)Z c
	stop ()V n
	tick ()V c
	timeoutPath ()V e
	trimPath ()V L_
net/minecraft/world/entity/ai/navigation/WallClimberNavigation bpk
	pathToPosition p
	createPath (Lnet/minecraft/core/BlockPos;I)Lnet/minecraft/world/level/pathfinder/Path; a
	createPath (Lnet/minecraft/world/entity/Entity;I)Lnet/minecraft/world/level/pathfinder/Path; a
	moveTo (Lnet/minecraft/world/entity/Entity;D)Z a
	tick ()V c
net/minecraft/world/entity/ai/navigation/WaterBoundPathNavigation bpl
	allowBreaching p
	canMoveDirectly (Lnet/minecraft/world/phys/Vec3;Lnet/minecraft/world/phys/Vec3;)Z a
	canUpdatePath ()Z a
	createPathFinder (I)Lnet/minecraft/world/level/pathfinder/PathFinder; a
	getGroundY (Lnet/minecraft/world/phys/Vec3;)D a
	getTempMobPos ()Lnet/minecraft/world/phys/Vec3; b
	isStableDestination (Lnet/minecraft/core/BlockPos;)Z a
	setCanFloat (Z)V a
net/minecraft/world/entity/ai/sensing/AdultSensor bpo
	doTick (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/AgeableMob;)V a
	doTick (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)V a
	requires ()Ljava/util/Set; a
	setNearestVisibleAdult (Lnet/minecraft/world/entity/AgeableMob;Lnet/minecraft/world/entity/ai/memory/NearestVisibleLivingEntities;)V a
net/minecraft/world/entity/ai/sensing/AxolotlAttackablesSensor bpp
	TARGET_DETECTION_DISTANCE a
	getMemory ()Lnet/minecraft/world/entity/ai/memory/MemoryModuleType; b
	isClose (Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/entity/LivingEntity;)Z f
	isHostileTarget (Lnet/minecraft/world/entity/LivingEntity;)Z b
	isHuntTarget (Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/entity/LivingEntity;)Z e
	isMatchingEntity (Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/entity/LivingEntity;)Z a
net/minecraft/world/entity/ai/sensing/DummySensor bpq
	doTick (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)V a
	requires ()Ljava/util/Set; a
net/minecraft/world/entity/ai/sensing/FrogAttackablesSensor bpr
	TARGET_DETECTION_DISTANCE a
	getMemory ()Lnet/minecraft/world/entity/ai/memory/MemoryModuleType; b
	isMatchingEntity (Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/entity/LivingEntity;)Z a
	isUnreachableAttackTarget (Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/entity/LivingEntity;)Z e
net/minecraft/world/entity/ai/sensing/GolemSensor bps
	GOLEM_SCAN_RATE a
	MEMORY_TIME_TO_LIVE c
	checkForNearbyGolem (Lnet/minecraft/world/entity/LivingEntity;)V a
	doTick (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)V a
	golemDetected (Lnet/minecraft/world/entity/LivingEntity;)V b
	requires ()Ljava/util/Set; a
net/minecraft/world/entity/ai/sensing/HoglinSpecificSensor bpt
	doTick (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)V a
	doTick (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/monster/hoglin/Hoglin;)V a
	findNearestRepellent (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/monster/hoglin/Hoglin;)Ljava/util/Optional; b
	requires ()Ljava/util/Set; a
net/minecraft/world/entity/ai/sensing/HurtBySensor bpu
	doTick (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)V a
	requires ()Ljava/util/Set; a
net/minecraft/world/entity/ai/sensing/IsInWaterSensor bpv
	doTick (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)V a
	requires ()Ljava/util/Set; a
net/minecraft/world/entity/ai/sensing/NearestBedSensor bpw
	BATCH_SIZE c
	CACHE_TIMEOUT a
	RATE d
	batchCache e
	lastUpdate g
	triedCount f
	doTick (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)V a
	doTick (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/Mob;)V a
	requires ()Ljava/util/Set; a
net/minecraft/world/entity/ai/sensing/NearestItemSensor bpx
	MAX_DISTANCE_TO_WANTED_ITEM a
	XZ_RANGE c
	Y_RANGE d
	doTick (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)V a
	doTick (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/Mob;)V a
	requires ()Ljava/util/Set; a
net/minecraft/world/entity/ai/sensing/NearestLivingEntitySensor bpy
	doTick (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)V a
	radiusXZ ()I b
	radiusY ()I c
	requires ()Ljava/util/Set; a
net/minecraft/world/entity/ai/sensing/NearestVisibleLivingEntitySensor bpz
	doTick (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)V a
	getMemory ()Lnet/minecraft/world/entity/ai/memory/MemoryModuleType; b
	getNearestEntity (Lnet/minecraft/world/entity/LivingEntity;)Ljava/util/Optional; b
	getVisibleEntities (Lnet/minecraft/world/entity/LivingEntity;)Ljava/util/Optional; a
	isMatchingEntity (Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/entity/LivingEntity;)Z a
	requires ()Ljava/util/Set; a
net/minecraft/world/entity/ai/sensing/PiglinBruteSpecificSensor bqa
	doTick (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)V a
	requires ()Ljava/util/Set; a
net/minecraft/world/entity/ai/sensing/PiglinSpecificSensor bqb
	doTick (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)V a
	findNearestRepellent (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)Ljava/util/Optional; c
	isValidRepellent (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;)Z a
	requires ()Ljava/util/Set; a
net/minecraft/world/entity/ai/sensing/PlayerSensor bqc
	doTick (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)V a
	requires ()Ljava/util/Set; a
net/minecraft/world/entity/ai/sensing/SecondaryPoiSensor bqd
	SCAN_RATE a
	doTick (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)V a
	doTick (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/npc/Villager;)V a
	requires ()Ljava/util/Set; a
net/minecraft/world/entity/ai/sensing/Sensing bqe
	mob a
	seen b
	unseen c
	hasLineOfSight (Lnet/minecraft/world/entity/Entity;)Z a
	tick ()V a
net/minecraft/world/entity/ai/sensing/Sensor bqf
	ATTACK_TARGET_CONDITIONS f
	ATTACK_TARGET_CONDITIONS_IGNORE_INVISIBILITY_AND_LINE_OF_SIGHT i
	ATTACK_TARGET_CONDITIONS_IGNORE_INVISIBILITY_TESTING g
	ATTACK_TARGET_CONDITIONS_IGNORE_LINE_OF_SIGHT h
	DEFAULT_SCAN_RATE c
	RANDOM a
	TARGETING_RANGE b
	TARGET_CONDITIONS d
	TARGET_CONDITIONS_IGNORE_INVISIBILITY_TESTING e
	scanRate j
	timeToTick k
	doTick (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)V a
	isEntityAttackable (Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/entity/LivingEntity;)Z c
	isEntityAttackableIgnoringLineOfSight (Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/entity/LivingEntity;)Z d
	isEntityTargetable (Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/entity/LivingEntity;)Z b
	requires ()Ljava/util/Set; a
	tick (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)V b
net/minecraft/world/entity/ai/sensing/SensorType bqg
	AXOLOTL_ATTACKABLES o
	AXOLOTL_TEMPTATIONS p
	CAMEL_TEMPTATIONS s
	DUMMY a
	FROG_ATTACKABLES t
	FROG_TEMPTATIONS r
	GOAT_TEMPTATIONS q
	GOLEM_DETECTED j
	HOGLIN_SPECIFIC_SENSOR m
	HURT_BY f
	IS_IN_WATER u
	NEAREST_ADULT n
	NEAREST_BED e
	NEAREST_ITEMS b
	NEAREST_LIVING_ENTITIES c
	NEAREST_PLAYERS d
	PIGLIN_BRUTE_SPECIFIC_SENSOR l
	PIGLIN_SPECIFIC_SENSOR k
	SECONDARY_POIS i
	SNIFFER_TEMPTATIONS w
	VILLAGER_BABIES h
	VILLAGER_HOSTILES g
	WARDEN_ENTITY_SENSOR v
	factory x
	create ()Lnet/minecraft/world/entity/ai/sensing/Sensor; a
	register (Ljava/lang/String;Ljava/util/function/Supplier;)Lnet/minecraft/world/entity/ai/sensing/SensorType; a
net/minecraft/world/entity/ai/sensing/TemptingSensor bqh
	TEMPTATION_RANGE a
	TEMPT_TARGETING c
	temptations d
	doTick (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)V a
	doTick (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/PathfinderMob;)V a
	isTemptation (Lnet/minecraft/world/item/ItemStack;)Z a
	playerHoldingTemptation (Lnet/minecraft/world/entity/player/Player;)Z a
	requires ()Ljava/util/Set; a
net/minecraft/world/entity/ai/sensing/VillagerBabiesSensor bqi
	doTick (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)V a
	getNearestVillagerBabies (Lnet/minecraft/world/entity/LivingEntity;)Ljava/util/List; a
	getVisibleEntities (Lnet/minecraft/world/entity/LivingEntity;)Lnet/minecraft/world/entity/ai/memory/NearestVisibleLivingEntities; c
	isVillagerBaby (Lnet/minecraft/world/entity/LivingEntity;)Z b
	requires ()Ljava/util/Set; a
net/minecraft/world/entity/ai/sensing/VillagerHostilesSensor bqj
	ACCEPTABLE_DISTANCE_FROM_HOSTILES a
	getMemory ()Lnet/minecraft/world/entity/ai/memory/MemoryModuleType; b
	isClose (Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/entity/LivingEntity;)Z e
	isHostile (Lnet/minecraft/world/entity/LivingEntity;)Z b
	isMatchingEntity (Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/entity/LivingEntity;)Z a
net/minecraft/world/entity/ai/sensing/WardenEntitySensor bqk
	doTick (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)V a
	doTick (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/monster/warden/Warden;)V a
	getClosest (Lnet/minecraft/world/entity/monster/warden/Warden;Ljava/util/function/Predicate;)Ljava/util/Optional; a
	radiusXZ ()I b
	radiusY ()I c
	requires ()Ljava/util/Set; a
net/minecraft/world/entity/ai/targeting/TargetingConditions bqm
	DEFAULT a
	MIN_VISIBILITY_DISTANCE_FOR_INVISIBLE_TARGET b
	checkLineOfSight e
	isCombat c
	range d
	selector g
	testInvisible f
	copy ()Lnet/minecraft/world/entity/ai/targeting/TargetingConditions; c
	forCombat ()Lnet/minecraft/world/entity/ai/targeting/TargetingConditions; a
	forNonCombat ()Lnet/minecraft/world/entity/ai/targeting/TargetingConditions; b
	ignoreInvisibilityTesting ()Lnet/minecraft/world/entity/ai/targeting/TargetingConditions; e
	ignoreLineOfSight ()Lnet/minecraft/world/entity/ai/targeting/TargetingConditions; d
	range (D)Lnet/minecraft/world/entity/ai/targeting/TargetingConditions; a
	selector (Ljava/util/function/Predicate;)Lnet/minecraft/world/entity/ai/targeting/TargetingConditions; a
	test (Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/entity/LivingEntity;)Z a
net/minecraft/world/entity/ai/util/AirAndWaterRandomPos bqo
	generateRandomPos (Lnet/minecraft/world/entity/PathfinderMob;IIIDDDZ)Lnet/minecraft/core/BlockPos; a
	getPos (Lnet/minecraft/world/entity/PathfinderMob;IIIDDD)Lnet/minecraft/world/phys/Vec3; a
net/minecraft/world/entity/ai/util/AirRandomPos bqp
	getPosTowards (Lnet/minecraft/world/entity/PathfinderMob;IIILnet/minecraft/world/phys/Vec3;D)Lnet/minecraft/world/phys/Vec3; a
net/minecraft/world/entity/ai/util/DefaultRandomPos bqq
	generateRandomPosTowardDirection (Lnet/minecraft/world/entity/PathfinderMob;IZLnet/minecraft/core/BlockPos;)Lnet/minecraft/core/BlockPos; a
	getPos (Lnet/minecraft/world/entity/PathfinderMob;II)Lnet/minecraft/world/phys/Vec3; a
	getPosAway (Lnet/minecraft/world/entity/PathfinderMob;IILnet/minecraft/world/phys/Vec3;)Lnet/minecraft/world/phys/Vec3; a
	getPosTowards (Lnet/minecraft/world/entity/PathfinderMob;IILnet/minecraft/world/phys/Vec3;D)Lnet/minecraft/world/phys/Vec3; a
net/minecraft/world/entity/ai/util/GoalUtils bqr
	hasGroundPathNavigation (Lnet/minecraft/world/entity/Mob;)Z a
	hasMalus (Lnet/minecraft/world/entity/PathfinderMob;Lnet/minecraft/core/BlockPos;)Z b
	isNotStable (Lnet/minecraft/world/entity/ai/navigation/PathNavigation;Lnet/minecraft/core/BlockPos;)Z a
	isOutsideLimits (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/PathfinderMob;)Z a
	isRestricted (ZLnet/minecraft/world/entity/PathfinderMob;Lnet/minecraft/core/BlockPos;)Z a
	isSolid (Lnet/minecraft/world/entity/PathfinderMob;Lnet/minecraft/core/BlockPos;)Z c
	isWater (Lnet/minecraft/world/entity/PathfinderMob;Lnet/minecraft/core/BlockPos;)Z a
	mobRestricted (Lnet/minecraft/world/entity/PathfinderMob;I)Z a
net/minecraft/world/entity/ai/util/HoverRandomPos bqs
	getPos (Lnet/minecraft/world/entity/PathfinderMob;IIDDFII)Lnet/minecraft/world/phys/Vec3; a
net/minecraft/world/entity/ai/util/LandRandomPos bqt
	generateRandomPosTowardDirection (Lnet/minecraft/world/entity/PathfinderMob;IZLnet/minecraft/core/BlockPos;)Lnet/minecraft/core/BlockPos; a
	getPos (Lnet/minecraft/world/entity/PathfinderMob;II)Lnet/minecraft/world/phys/Vec3; a
	getPos (Lnet/minecraft/world/entity/PathfinderMob;IILjava/util/function/ToDoubleFunction;)Lnet/minecraft/world/phys/Vec3; a
	getPosAway (Lnet/minecraft/world/entity/PathfinderMob;IILnet/minecraft/world/phys/Vec3;)Lnet/minecraft/world/phys/Vec3; b
	getPosInDirection (Lnet/minecraft/world/entity/PathfinderMob;IILnet/minecraft/world/phys/Vec3;Z)Lnet/minecraft/world/phys/Vec3; a
	getPosTowards (Lnet/minecraft/world/entity/PathfinderMob;IILnet/minecraft/world/phys/Vec3;)Lnet/minecraft/world/phys/Vec3; a
	movePosUpOutOfSolid (Lnet/minecraft/world/entity/PathfinderMob;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/core/BlockPos; a
net/minecraft/world/entity/ai/util/RandomPos bqu
	RANDOM_POS_ATTEMPTS a
	generateRandomDirection (Lnet/minecraft/util/RandomSource;II)Lnet/minecraft/core/BlockPos; a
	generateRandomDirectionWithinRadians (Lnet/minecraft/util/RandomSource;IIIDDD)Lnet/minecraft/core/BlockPos; a
	generateRandomPos (Ljava/util/function/Supplier;Ljava/util/function/ToDoubleFunction;)Lnet/minecraft/world/phys/Vec3; a
	generateRandomPos (Lnet/minecraft/world/entity/PathfinderMob;Ljava/util/function/Supplier;)Lnet/minecraft/world/phys/Vec3; a
	generateRandomPosTowardDirection (Lnet/minecraft/world/entity/PathfinderMob;ILnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/core/BlockPos; a
	moveUpOutOfSolid (Lnet/minecraft/core/BlockPos;ILjava/util/function/Predicate;)Lnet/minecraft/core/BlockPos; a
	moveUpToAboveSolid (Lnet/minecraft/core/BlockPos;IILjava/util/function/Predicate;)Lnet/minecraft/core/BlockPos; a
net/minecraft/world/entity/ai/village/ReputationEventType bqw
	GOLEM_KILLED b
	TRADE e
	VILLAGER_HURT c
	VILLAGER_KILLED d
	ZOMBIE_VILLAGER_CURED a
	register (Ljava/lang/String;)Lnet/minecraft/world/entity/ai/village/ReputationEventType; a
net/minecraft/world/entity/ai/village/VillageSiege bqx
	LOGGER a
	hasSetupSiege b
	nextSpawnTime e
	siegeState c
	spawnX f
	spawnY g
	spawnZ h
	zombiesToSpawn d
	findRandomSpawnPos (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/phys/Vec3; a
	tick (Lnet/minecraft/server/level/ServerLevel;ZZ)I a
	trySpawn (Lnet/minecraft/server/level/ServerLevel;)V b
	tryToSetupSiege (Lnet/minecraft/server/level/ServerLevel;)Z a
net/minecraft/world/entity/ai/village/VillageSiege$State bqx$a
	$VALUES d
	SIEGE_CAN_ACTIVATE a
	SIEGE_DONE c
	SIEGE_TONIGHT b
	$values ()[Lnet/minecraft/world/entity/ai/village/VillageSiege$State; a
net/minecraft/world/entity/ai/village/poi/PoiManager bqz
	MAX_VILLAGE_DISTANCE a
	VILLAGE_SECTION_SIZE b
	distanceTracker d
	loadedChunks e
	add (Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Holder;)V a
	checkConsistencyWithBlocks (Lnet/minecraft/core/SectionPos;Lnet/minecraft/world/level/chunk/LevelChunkSection;)V a
	ensureLoadedAndValid (Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;I)V a
	exists (Lnet/minecraft/core/BlockPos;Ljava/util/function/Predicate;)Z a
	existsAtPosition (Lnet/minecraft/resources/ResourceKey;Lnet/minecraft/core/BlockPos;)Z a
	find (Ljava/util/function/Predicate;Ljava/util/function/Predicate;Lnet/minecraft/core/BlockPos;ILnet/minecraft/world/entity/ai/village/poi/PoiManager$Occupancy;)Ljava/util/Optional; d
	findAll (Ljava/util/function/Predicate;Ljava/util/function/Predicate;Lnet/minecraft/core/BlockPos;ILnet/minecraft/world/entity/ai/village/poi/PoiManager$Occupancy;)Ljava/util/stream/Stream; a
	findAllClosestFirstWithType (Ljava/util/function/Predicate;Ljava/util/function/Predicate;Lnet/minecraft/core/BlockPos;ILnet/minecraft/world/entity/ai/village/poi/PoiManager$Occupancy;)Ljava/util/stream/Stream; c
	findAllWithType (Ljava/util/function/Predicate;Ljava/util/function/Predicate;Lnet/minecraft/core/BlockPos;ILnet/minecraft/world/entity/ai/village/poi/PoiManager$Occupancy;)Ljava/util/stream/Stream; b
	findClosest (Ljava/util/function/Predicate;Ljava/util/function/Predicate;Lnet/minecraft/core/BlockPos;ILnet/minecraft/world/entity/ai/village/poi/PoiManager$Occupancy;)Ljava/util/Optional; e
	findClosest (Ljava/util/function/Predicate;Lnet/minecraft/core/BlockPos;ILnet/minecraft/world/entity/ai/village/poi/PoiManager$Occupancy;)Ljava/util/Optional; d
	findClosestWithType (Ljava/util/function/Predicate;Lnet/minecraft/core/BlockPos;ILnet/minecraft/world/entity/ai/village/poi/PoiManager$Occupancy;)Ljava/util/Optional; e
	getCountInRange (Ljava/util/function/Predicate;Lnet/minecraft/core/BlockPos;ILnet/minecraft/world/entity/ai/village/poi/PoiManager$Occupancy;)J a
	getFreeTickets (Lnet/minecraft/core/BlockPos;)I d
	getInChunk (Ljava/util/function/Predicate;Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/world/entity/ai/village/poi/PoiManager$Occupancy;)Ljava/util/stream/Stream; a
	getInRange (Ljava/util/function/Predicate;Lnet/minecraft/core/BlockPos;ILnet/minecraft/world/entity/ai/village/poi/PoiManager$Occupancy;)Ljava/util/stream/Stream; c
	getInSquare (Ljava/util/function/Predicate;Lnet/minecraft/core/BlockPos;ILnet/minecraft/world/entity/ai/village/poi/PoiManager$Occupancy;)Ljava/util/stream/Stream; b
	getRandom (Ljava/util/function/Predicate;Ljava/util/function/Predicate;Lnet/minecraft/world/entity/ai/village/poi/PoiManager$Occupancy;Lnet/minecraft/core/BlockPos;ILnet/minecraft/util/RandomSource;)Ljava/util/Optional; a
	getType (Lnet/minecraft/core/BlockPos;)Ljava/util/Optional; c
	isVillageCenter (J)Z g
	mayHavePoi (Lnet/minecraft/world/level/chunk/LevelChunkSection;)Z a
	onSectionLoad (J)V b
	release (Lnet/minecraft/core/BlockPos;)Z b
	remove (Lnet/minecraft/core/BlockPos;)V a
	sectionsToVillage (Lnet/minecraft/core/SectionPos;)I a
	setDirty (J)V a
	take (Ljava/util/function/Predicate;Ljava/util/function/BiPredicate;Lnet/minecraft/core/BlockPos;I)Ljava/util/Optional; a
	tick (Ljava/util/function/BooleanSupplier;)V a
	updateFromSection (Lnet/minecraft/world/level/chunk/LevelChunkSection;Lnet/minecraft/core/SectionPos;Ljava/util/function/BiConsumer;)V a
net/minecraft/world/entity/ai/village/poi/PoiManager$DistanceTracker bqz$a
	levels b
	getLevel (J)I c
	getLevelFromSource (J)I b
	runAllUpdates ()V a
	setLevel (JI)V a
net/minecraft/world/entity/ai/village/poi/PoiManager$Occupancy bqz$b
	$VALUES e
	ANY c
	HAS_SPACE a
	IS_OCCUPIED b
	test d
	$values ()[Lnet/minecraft/world/entity/ai/village/poi/PoiManager$Occupancy; b
	getTest ()Ljava/util/function/Predicate; a
net/minecraft/world/entity/ai/village/poi/PoiRecord bra
	freeTickets c
	poiType b
	pos a
	setDirty d
	acquireTicket ()Z b
	codec (Ljava/lang/Runnable;)Lcom/mojang/serialization/Codec; a
	getFreeTickets ()I a
	getPoiType ()Lnet/minecraft/core/Holder; g
	getPos ()Lnet/minecraft/core/BlockPos; f
	hasSpace ()Z d
	isOccupied ()Z e
	releaseTicket ()Z c
net/minecraft/world/entity/ai/village/poi/PoiSection brb
	LOGGER a
	byType c
	isValid e
	records b
	setDirty d
	add (Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Holder;)V a
	add (Lnet/minecraft/world/entity/ai/village/poi/PoiRecord;)Z a
	clear ()V b
	codec (Ljava/lang/Runnable;)Lcom/mojang/serialization/Codec; a
	exists (Lnet/minecraft/core/BlockPos;Ljava/util/function/Predicate;)Z a
	getFreeTickets (Lnet/minecraft/core/BlockPos;)I b
	getPoiRecord (Lnet/minecraft/core/BlockPos;)Ljava/util/Optional; e
	getRecords (Ljava/util/function/Predicate;Lnet/minecraft/world/entity/ai/village/poi/PoiManager$Occupancy;)Ljava/util/stream/Stream; a
	getType (Lnet/minecraft/core/BlockPos;)Ljava/util/Optional; d
	isValid ()Z a
	refresh (Ljava/util/function/Consumer;)V a
	release (Lnet/minecraft/core/BlockPos;)Z c
	remove (Lnet/minecraft/core/BlockPos;)V a
net/minecraft/world/entity/ai/village/poi/PoiType brc
	NONE a
	matchingStates b
	maxTickets c
	validRange d
	is (Lnet/minecraft/world/level/block/state/BlockState;)Z a
	matchingStates ()Ljava/util/Set; a
	maxTickets ()I b
	validRange ()I c
net/minecraft/world/entity/ai/village/poi/PoiTypes brd
	ARMORER a
	BEDS u
	BEEHIVE p
	BEE_NEST q
	BUTCHER b
	CARTOGRAPHER c
	CAULDRONS v
	CLERIC d
	FARMER e
	FISHERMAN f
	FLETCHER g
	HOME n
	LEATHERWORKER h
	LIBRARIAN i
	LIGHTNING_ROD t
	LODESTONE s
	MASON j
	MEETING o
	NETHER_PORTAL r
	SHEPHERD k
	TOOLSMITH l
	TYPE_BY_STATE w
	WEAPONSMITH m
	bootstrap (Lnet/minecraft/core/Registry;)Lnet/minecraft/world/entity/ai/village/poi/PoiType; a
	createKey (Ljava/lang/String;)Lnet/minecraft/resources/ResourceKey; a
	forState (Lnet/minecraft/world/level/block/state/BlockState;)Ljava/util/Optional; a
	getBlockStates (Lnet/minecraft/world/level/block/Block;)Ljava/util/Set; a
	hasPoi (Lnet/minecraft/world/level/block/state/BlockState;)Z b
	register (Lnet/minecraft/core/Registry;Lnet/minecraft/resources/ResourceKey;Ljava/util/Set;II)Lnet/minecraft/world/entity/ai/village/poi/PoiType; a
	registerBlockStates (Lnet/minecraft/core/Holder;Ljava/util/Set;)V a
net/minecraft/world/entity/ambient/AmbientCreature brf
	canBeLeashed (Lnet/minecraft/world/entity/player/Player;)Z a
net/minecraft/world/entity/ambient/Bat brg
	BAT_RESTING_TARGETING bS
	DATA_ID_FLAGS d
	FLAG_RESTING e
	FLAP_DEGREES_PER_TICK b
	TICKS_PER_FLAP c
	targetPosition bT
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	checkBatSpawnRules (Lnet/minecraft/world/entity/EntityType;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/world/entity/MobSpawnType;Lnet/minecraft/core/BlockPos;Lnet/minecraft/util/RandomSource;)Z b
	checkFallDamage (DZLnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/BlockPos;)V a
	createAttributes ()Lnet/minecraft/world/entity/ai/attributes/AttributeSupplier$Builder; q
	customServerAiStep ()V W
	defineSynchedData ()V a_
	doPush (Lnet/minecraft/world/entity/Entity;)V A
	getAmbientSound ()Lnet/minecraft/sounds/SoundEvent; s
	getDeathSound ()Lnet/minecraft/sounds/SoundEvent; g_
	getHurtSound (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEvent; d
	getMovementEmission ()Lnet/minecraft/world/entity/Entity$MovementEmission; aS
	getSoundVolume ()F eR
	getStandingEyeHeight (Lnet/minecraft/world/entity/Pose;Lnet/minecraft/world/entity/EntityDimensions;)F b
	getVoicePitch ()F eS
	hurt (Lnet/minecraft/world/damagesource/DamageSource;F)Z a
	isFlapping ()Z aP
	isHalloween ()Z w
	isIgnoringBlockTriggers ()Z c_
	isPushable ()Z bp
	isResting ()Z r
	pushEntities ()V fd
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	setResting (Z)V w
	tick ()V l
net/minecraft/world/entity/animal/AbstractFish bri
	FROM_BUCKET b
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	aiStep ()V b_
	canRandomSwim ()Z fY
	createAttributes ()Lnet/minecraft/world/entity/ai/attributes/AttributeSupplier$Builder; q
	createNavigation (Lnet/minecraft/world/level/Level;)Lnet/minecraft/world/entity/ai/navigation/PathNavigation; b
	defineSynchedData ()V a_
	fromBucket ()Z r
	getFlopSound ()Lnet/minecraft/sounds/SoundEvent; fZ
	getMaxSpawnClusterSize ()I fE
	getPickupSound ()Lnet/minecraft/sounds/SoundEvent; w
	getStandingEyeHeight (Lnet/minecraft/world/entity/Pose;Lnet/minecraft/world/entity/EntityDimensions;)F b
	getSwimSound ()Lnet/minecraft/sounds/SoundEvent; aJ
	loadFromBucketTag (Lnet/minecraft/nbt/CompoundTag;)V c
	mobInteract (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResult; b
	playStepSound (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V b
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	registerGoals ()V x
	removeWhenFarAway (D)Z h
	requiresCustomPersistence ()Z T
	saveToBucketTag (Lnet/minecraft/world/item/ItemStack;)V l
	setFromBucket (Z)V w
	travel (Lnet/minecraft/world/phys/Vec3;)V h
net/minecraft/world/entity/animal/AbstractFish$FishMoveControl bri$a
	fish l
	tick ()V a
net/minecraft/world/entity/animal/AbstractFish$FishSwimGoal bri$b
	fish i
	canUse ()Z a
net/minecraft/world/entity/animal/AbstractGolem brj
	getAmbientSound ()Lnet/minecraft/sounds/SoundEvent; s
	getAmbientSoundInterval ()I M
	getDeathSound ()Lnet/minecraft/sounds/SoundEvent; g_
	getHurtSound (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEvent; d
	removeWhenFarAway (D)Z h
net/minecraft/world/entity/animal/AbstractSchoolingFish brk
	leader b
	schoolSize c
	addFollower ()V gh
	addFollowers (Ljava/util/stream/Stream;)V a
	canBeFollowed ()Z gd
	canRandomSwim ()Z fY
	finalizeSpawn (Lnet/minecraft/world/level/ServerLevelAccessor;Lnet/minecraft/world/DifficultyInstance;Lnet/minecraft/world/entity/MobSpawnType;Lnet/minecraft/world/entity/SpawnGroupData;Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/world/entity/SpawnGroupData; a
	getMaxSchoolSize ()I ga
	getMaxSpawnClusterSize ()I fE
	hasFollowers ()Z ge
	inRangeOfLeader ()Z gf
	isFollower ()Z gb
	pathToLeader ()V gg
	registerGoals ()V x
	removeFollower ()V gi
	startFollowing (Lnet/minecraft/world/entity/animal/AbstractSchoolingFish;)Lnet/minecraft/world/entity/animal/AbstractSchoolingFish; a
	stopFollowing ()V gc
	tick ()V l
net/minecraft/world/entity/animal/AbstractSchoolingFish$SchoolSpawnGroupData brk$a
	leader a
net/minecraft/world/entity/animal/Animal brl
	PARENT_AGE_AFTER_BREEDING bV
	inLove bT
	loveCause bU
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	aiStep ()V b_
	canFallInLove ()Z fZ
	canMate (Lnet/minecraft/world/entity/animal/Animal;)Z a
	checkAnimalSpawnRules (Lnet/minecraft/world/entity/EntityType;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/world/entity/MobSpawnType;Lnet/minecraft/core/BlockPos;Lnet/minecraft/util/RandomSource;)Z b
	customServerAiStep ()V W
	finalizeSpawnChildFromBreeding (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/animal/Animal;Lnet/minecraft/world/entity/AgeableMob;)V a
	getAmbientSoundInterval ()I M
	getExperienceReward ()I ea
	getInLoveTime ()I ga
	getLoveCause ()Lnet/minecraft/server/level/ServerPlayer; gb
	getMyRidingOffset ()D bw
	getWalkTargetValue (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/LevelReader;)F a
	handleEntityEvent (B)V b
	hurt (Lnet/minecraft/world/damagesource/DamageSource;F)Z a
	isBrightEnoughToSpawn (Lnet/minecraft/world/level/BlockAndTintGetter;Lnet/minecraft/core/BlockPos;)Z a
	isFood (Lnet/minecraft/world/item/ItemStack;)Z m
	isInLove ()Z gc
	mobInteract (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResult; b
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	removeWhenFarAway (D)Z h
	resetLove ()V gd
	setInLove (Lnet/minecraft/world/entity/player/Player;)V g
	setInLoveTime (I)V s
	spawnChildFromBreeding (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/animal/Animal;)V a
	usePlayerItem (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;Lnet/minecraft/world/item/ItemStack;)V a
net/minecraft/world/entity/animal/Bee brm
	COOLDOWN_BEFORE_LOCATING_NEW_FLOWER cD
	COOLDOWN_BEFORE_LOCATING_NEW_HIVE cB
	DATA_FLAGS_ID cd
	DATA_REMAINING_ANGER_TIME ce
	FLAG_HAS_NECTAR ch
	FLAG_HAS_STUNG cg
	FLAG_ROLL cf
	FLAP_DEGREES_PER_TICK bT
	HIVE_CLOSE_ENOUGH_DISTANCE cq
	HIVE_SEARCH_DISTANCE cs
	MAX_CROPS_GROWABLE cm
	MIN_ATTACK_DIST cl
	PATHFIND_TO_HIVE_WHEN_CLOSER_THAN cr
	PERSISTENT_ANGER_TIME ct
	POISON_SECONDS_HARD co
	POISON_SECONDS_NORMAL cn
	STING_DEATH_COUNTDOWN ci
	TAG_CANNOT_ENTER_HIVE_TICKS bX
	TAG_CROPS_GROWN_SINCE_POLLINATION bW
	TAG_FLOWER_POS cb
	TAG_HAS_NECTAR ca
	TAG_HAS_STUNG bZ
	TAG_HIVE_POS cc
	TAG_TICKS_SINCE_POLLINATION bY
	TICKS_BEFORE_GOING_TO_KNOWN_FLOWER cj
	TICKS_PER_FLAP bU
	TICKS_WITHOUT_NECTAR_BEFORE_GOING_HOME ck
	TOO_FAR_DISTANCE cp
	beePollinateGoal cH
	goToHiveGoal cI
	goToKnownFlowerGoal cJ
	hivePos cG
	numCropsGrownSincePollination cA
	persistentAngerTarget cu
	remainingCooldownBeforeLocatingNewFlower cE
	remainingCooldownBeforeLocatingNewHive cC
	rollAmount cv
	rollAmountO cw
	savedFlowerPos cF
	stayOutOfHiveCountdown cz
	ticksWithoutNectarSinceExitingHive cy
	timeSinceSting cx
	underWaterTicks cK
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	aiStep ()V b_
	checkFallDamage (DZLnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/BlockPos;)V a
	closerThan (Lnet/minecraft/core/BlockPos;I)Z b
	createAttributes ()Lnet/minecraft/world/entity/ai/attributes/AttributeSupplier$Builder; gk
	createNavigation (Lnet/minecraft/world/level/Level;)Lnet/minecraft/world/entity/ai/navigation/PathNavigation; b
	customServerAiStep ()V W
	defineSynchedData ()V a_
	doHurtTarget (Lnet/minecraft/world/entity/Entity;)Z z
	doesHiveHaveSpace (Lnet/minecraft/core/BlockPos;)Z k
	dropOffNectar ()V gm
	getAmbientSound ()Lnet/minecraft/sounds/SoundEvent; s
	getBlacklistedHives ()Ljava/util/List; fY
	getBreedOffspring (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/AgeableMob;)Lnet/minecraft/world/entity/AgeableMob; a
	getBreedOffspring (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/AgeableMob;)Lnet/minecraft/world/entity/animal/Bee; b
	getCropsGrownSincePollination ()I gr
	getDeathSound ()Lnet/minecraft/sounds/SoundEvent; g_
	getFlag (I)Z u
	getGoalSelector ()Lnet/minecraft/world/entity/ai/goal/GoalSelector; gh
	getHivePos ()Lnet/minecraft/core/BlockPos; gg
	getHurtSound (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEvent; d
	getLeashOffset ()Lnet/minecraft/world/phys/Vec3; cG
	getMobType ()Lnet/minecraft/world/entity/MobType; eN
	getPersistentAngerTarget ()Ljava/util/UUID; b
	getRemainingPersistentAngerTime ()I a
	getRollAmount (F)F D
	getSavedFlowerPos ()Lnet/minecraft/core/BlockPos; q
	getSoundVolume ()F eR
	getStandingEyeHeight (Lnet/minecraft/world/entity/Pose;Lnet/minecraft/world/entity/EntityDimensions;)F b
	getTravellingTicks ()I w
	getWalkTargetValue (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/LevelReader;)F a
	hasHive ()Z gf
	hasNectar ()Z gi
	hasSavedFlowerPos ()Z r
	hasStung ()Z gj
	hurt (Lnet/minecraft/world/damagesource/DamageSource;F)Z a
	incrementNumCropsGrownSincePollination ()V gt
	isFlapping ()Z aP
	isFlowerValid (Lnet/minecraft/core/BlockPos;)Z m
	isFlying ()Z gl
	isFood (Lnet/minecraft/world/item/ItemStack;)Z m
	isHiveNearFire ()Z gq
	isHiveValid ()Z gu
	isRolling ()Z gv
	isTiredOfLookingForNectar ()Z gn
	isTooFarAway (Lnet/minecraft/core/BlockPos;)Z l
	jumpInLiquid (Lnet/minecraft/tags/TagKey;)V c
	pathfindRandomlyTowards (Lnet/minecraft/core/BlockPos;)V j
	playStepSound (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V b
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	registerGoals ()V x
	resetNumCropsGrownSincePollination ()V gs
	resetTicksWithoutNectarSinceExitingHive ()V ge
	sendDebugPackets ()V V
	setFlag (IZ)V d
	setHasNectar (Z)V w
	setHasStung (Z)V x
	setPersistentAngerTarget (Ljava/util/UUID;)V a
	setRemainingPersistentAngerTime (I)V a
	setRolling (Z)V y
	setSavedFlowerPos (Lnet/minecraft/core/BlockPos;)V i
	setStayOutOfHiveCountdown (I)V t
	spawnFluidParticle (Lnet/minecraft/world/level/Level;DDDDDLnet/minecraft/core/particles/ParticleOptions;)V a
	startPersistentAngerTimer ()V c
	tick ()V l
	updateRollAmount ()V gp
	wantsToEnterHive ()Z go
net/minecraft/world/entity/animal/Bee$BaseBeeGoal brm$a
	canBeeContinueToUse ()Z i
	canBeeUse ()Z h
	canContinueToUse ()Z b
	canUse ()Z a
net/minecraft/world/entity/animal/Bee$BeeAttackGoal brm$b
	canContinueToUse ()Z b
	canUse ()Z a
net/minecraft/world/entity/animal/Bee$BeeBecomeAngryTargetGoal brm$c
	beeCanTarget ()Z i
	canContinueToUse ()Z b
	canUse ()Z a
net/minecraft/world/entity/animal/Bee$BeeEnterHiveGoal brm$d
	canBeeContinueToUse ()Z i
	canBeeUse ()Z h
	start ()V c
net/minecraft/world/entity/animal/Bee$BeeGoToHiveGoal brm$e
	MAX_BLACKLISTED_TARGETS e
	MAX_TRAVELLING_TICKS b
	TICKS_BEFORE_HIVE_DROP h
	blacklistedTargets f
	lastPath g
	ticksStuck i
	travellingTicks d
	blacklistTarget (Lnet/minecraft/core/BlockPos;)V c
	canBeeContinueToUse ()Z i
	canBeeUse ()Z h
	canContinueToUse ()Z b
	canUse ()Z a
	clearBlacklist ()V k
	dropAndBlacklistHive ()V l
	dropHive ()V m
	hasReachedTarget (Lnet/minecraft/core/BlockPos;)Z d
	isTargetBlacklisted (Lnet/minecraft/core/BlockPos;)Z b
	pathfindDirectlyTowards (Lnet/minecraft/core/BlockPos;)Z a
	start ()V c
	stop ()V d
	tick ()V e
net/minecraft/world/entity/animal/Bee$BeeGoToKnownFlowerGoal brm$f
	MAX_TRAVELLING_TICKS c
	travellingTicks d
	canBeeContinueToUse ()Z i
	canBeeUse ()Z h
	canContinueToUse ()Z b
	canUse ()Z a
	start ()V c
	stop ()V d
	tick ()V e
	wantsToGoToKnownFlower ()Z k
net/minecraft/world/entity/animal/Bee$BeeGrowCropGoal brm$g
	GROW_CHANCE b
	canBeeContinueToUse ()Z i
	canBeeUse ()Z h
	tick ()V e
net/minecraft/world/entity/animal/Bee$BeeHurtByOtherGoal brm$h
	alertOther (Lnet/minecraft/world/entity/Mob;Lnet/minecraft/world/entity/LivingEntity;)V a
	canContinueToUse ()Z b
net/minecraft/world/entity/animal/Bee$BeeLocateHiveGoal brm$i
	canBeeContinueToUse ()Z i
	canBeeUse ()Z h
	findNearbyHivesWithSpace ()Ljava/util/List; k
	start ()V c
net/minecraft/world/entity/animal/Bee$BeeLookControl brm$j
	resetXRotOnTick ()Z c
	tick ()V a
net/minecraft/world/entity/animal/Bee$BeePollinateGoal brm$k
	ARRIVAL_THRESHOLD g
	HOVER_HEIGHT_WITHIN_FLOWER j
	HOVER_POS_OFFSET k
	MAX_FIND_FLOWER_RETRY_COOLDOWN e
	MAX_POLLINATING_TICKS q
	MIN_FIND_FLOWER_RETRY_COOLDOWN d
	MIN_POLLINATION_TICKS c
	POSITION_CHANGE_CHANCE h
	SPEED_MODIFIER i
	VALID_POLLINATION_BLOCKS f
	hoverPos o
	lastSoundPlayedTick m
	pollinating n
	pollinatingTicks p
	successfulPollinatingTicks l
	canBeeContinueToUse ()Z i
	canBeeUse ()Z h
	findNearbyFlower ()Ljava/util/Optional; p
	findNearestBlock (Ljava/util/function/Predicate;D)Ljava/util/Optional; a
	getOffset ()F o
	hasPollinatedLongEnough ()Z k
	isPollinating ()Z l
	requiresUpdateEveryTick ()Z K_
	setWantedPos ()V n
	start ()V c
	stop ()V d
	stopPollinating ()V m
	tick ()V e
net/minecraft/world/entity/animal/Bee$BeeWanderGoal brm$l
	WANDER_THRESHOLD b
	canContinueToUse ()Z b
	canUse ()Z a
	findPos ()Lnet/minecraft/world/phys/Vec3; h
	start ()V c
net/minecraft/world/entity/animal/Bucketable brn
	bucketMobPickup (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;Lnet/minecraft/world/entity/LivingEntity;)Ljava/util/Optional; a
	fromBucket ()Z r
	getBucketItemStack ()Lnet/minecraft/world/item/ItemStack; b
	getPickupSound ()Lnet/minecraft/sounds/SoundEvent; w
	loadDefaultDataFromBucketTag (Lnet/minecraft/world/entity/Mob;Lnet/minecraft/nbt/CompoundTag;)V a
	loadFromBucketTag (Lnet/minecraft/nbt/CompoundTag;)V c
	saveDefaultDataToBucketTag (Lnet/minecraft/world/entity/Mob;Lnet/minecraft/world/item/ItemStack;)V a
	saveToBucketTag (Lnet/minecraft/world/item/ItemStack;)V l
	setFromBucket (Z)V w
net/minecraft/world/entity/animal/Cat bro
	DATA_COLLAR_COLOR cd
	DATA_VARIANT_ID ca
	IS_LYING cb
	RELAX_STATE_ONE cc
	SPRINT_SPEED_MOD bY
	TEMPT_INGREDIENT bZ
	TEMPT_SPEED_MOD bW
	WALK_SPEED_MOD bX
	avoidPlayersGoal ce
	lieDownAmount cg
	lieDownAmountO ch
	lieDownAmountOTail cj
	lieDownAmountTail ci
	relaxStateOneAmount ck
	relaxStateOneAmountO cl
	temptGoal cf
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	canMate (Lnet/minecraft/world/entity/animal/Animal;)Z a
	createAttributes ()Lnet/minecraft/world/entity/ai/attributes/AttributeSupplier$Builder; gk
	customServerAiStep ()V W
	defineSynchedData ()V a_
	doHurtTarget (Lnet/minecraft/world/entity/Entity;)Z z
	finalizeSpawn (Lnet/minecraft/world/level/ServerLevelAccessor;Lnet/minecraft/world/DifficultyInstance;Lnet/minecraft/world/entity/MobSpawnType;Lnet/minecraft/world/entity/SpawnGroupData;Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/world/entity/SpawnGroupData; a
	getAmbientSound ()Lnet/minecraft/sounds/SoundEvent; s
	getAmbientSoundInterval ()I M
	getAttackDamage ()F gl
	getBreedOffspring (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/AgeableMob;)Lnet/minecraft/world/entity/AgeableMob; a
	getBreedOffspring (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/AgeableMob;)Lnet/minecraft/world/entity/animal/Cat; b
	getCollarColor ()Lnet/minecraft/world/item/DyeColor; gi
	getDeathSound ()Lnet/minecraft/sounds/SoundEvent; g_
	getHurtSound (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEvent; d
	getLieDownAmount (F)F D
	getLieDownAmountTail (F)F E
	getRelaxStateOneAmount (F)F F
	getResourceLocation ()Lnet/minecraft/resources/ResourceLocation; ge
	getStandingEyeHeight (Lnet/minecraft/world/entity/Pose;Lnet/minecraft/world/entity/EntityDimensions;)F b
	getVariant ()Ljava/lang/Object; c
	getVariant ()Lnet/minecraft/world/entity/animal/CatVariant; gf
	handleLieDown ()V gm
	hiss ()V gj
	isFood (Lnet/minecraft/world/item/ItemStack;)Z m
	isLying ()Z gg
	isRelaxStateOne ()Z gh
	isSteppingCarefully ()Z bQ
	mobInteract (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResult; b
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	reassessTameGoals ()V r
	registerGoals ()V x
	removeWhenFarAway (D)Z h
	setCollarColor (Lnet/minecraft/world/item/DyeColor;)V a
	setLying (Z)V A
	setRelaxStateOne (Z)V B
	setVariant (Ljava/lang/Object;)V a
	setVariant (Lnet/minecraft/world/entity/animal/CatVariant;)V a
	tick ()V l
	updateLieDownAmount ()V gn
	updateRelaxStateOneAmount ()V go
	usePlayerItem (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;Lnet/minecraft/world/item/ItemStack;)V a
net/minecraft/world/entity/animal/Cat$CatAvoidEntityGoal bro$a
	cat i
	canContinueToUse ()Z b
	canUse ()Z a
net/minecraft/world/entity/animal/Cat$CatRelaxOnOwnerGoal bro$b
	cat a
	goalPos c
	onBedTicks d
	ownerPlayer b
	canContinueToUse ()Z b
	canUse ()Z a
	giveMorningGift ()V i
	spaceIsOccupied ()Z h
	start ()V c
	stop ()V d
	tick ()V e
net/minecraft/world/entity/animal/Cat$CatTemptGoal bro$c
	cat d
	selectedPlayer c
	canScare ()Z h
	canUse ()Z a
	tick ()V e
net/minecraft/world/entity/animal/CatVariant brp
	ALL_BLACK k
	BLACK b
	BRITISH_SHORTHAIR e
	CALICO f
	JELLIE j
	PERSIAN g
	RAGDOLL h
	RED c
	SIAMESE d
	TABBY a
	WHITE i
	texture l
	bootstrap (Lnet/minecraft/core/Registry;)Lnet/minecraft/world/entity/animal/CatVariant; a
	createKey (Ljava/lang/String;)Lnet/minecraft/resources/ResourceKey; a
	register (Lnet/minecraft/core/Registry;Lnet/minecraft/resources/ResourceKey;Ljava/lang/String;)Lnet/minecraft/world/entity/animal/CatVariant; a
	texture ()Lnet/minecraft/resources/ResourceLocation; a
net/minecraft/world/entity/animal/Chicken brq
	FOOD_ITEMS cb
	eggTime bZ
	flap bT
	flapSpeed bU
	flapping bY
	isChickenJockey ca
	nextFlap cc
	oFlap bX
	oFlapSpeed bW
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	aiStep ()V b_
	createAttributes ()Lnet/minecraft/world/entity/ai/attributes/AttributeSupplier$Builder; q
	getAmbientSound ()Lnet/minecraft/sounds/SoundEvent; s
	getBreedOffspring (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/AgeableMob;)Lnet/minecraft/world/entity/AgeableMob; a
	getBreedOffspring (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/AgeableMob;)Lnet/minecraft/world/entity/animal/Chicken; b
	getDeathSound ()Lnet/minecraft/sounds/SoundEvent; g_
	getExperienceReward ()I ea
	getHurtSound (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEvent; d
	getStandingEyeHeight (Lnet/minecraft/world/entity/Pose;Lnet/minecraft/world/entity/EntityDimensions;)F b
	isChickenJockey ()Z r
	isFlapping ()Z aP
	isFood (Lnet/minecraft/world/item/ItemStack;)Z m
	onFlap ()V aO
	playStepSound (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V b
	positionRider (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/entity/Entity$MoveFunction;)V a
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	registerGoals ()V x
	removeWhenFarAway (D)Z h
	setChickenJockey (Z)V w
net/minecraft/world/entity/animal/Cod brr
	getAmbientSound ()Lnet/minecraft/sounds/SoundEvent; s
	getBucketItemStack ()Lnet/minecraft/world/item/ItemStack; b
	getDeathSound ()Lnet/minecraft/sounds/SoundEvent; g_
	getFlopSound ()Lnet/minecraft/sounds/SoundEvent; fZ
	getHurtSound (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEvent; d
net/minecraft/world/entity/animal/Cow brs
	createAttributes ()Lnet/minecraft/world/entity/ai/attributes/AttributeSupplier$Builder; q
	getAmbientSound ()Lnet/minecraft/sounds/SoundEvent; s
	getBreedOffspring (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/AgeableMob;)Lnet/minecraft/world/entity/AgeableMob; a
	getBreedOffspring (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/AgeableMob;)Lnet/minecraft/world/entity/animal/Cow; b
	getDeathSound ()Lnet/minecraft/sounds/SoundEvent; g_
	getHurtSound (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEvent; d
	getSoundVolume ()F eR
	getStandingEyeHeight (Lnet/minecraft/world/entity/Pose;Lnet/minecraft/world/entity/EntityDimensions;)F b
	mobInteract (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResult; b
	playStepSound (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V b
	registerGoals ()V x
net/minecraft/world/entity/animal/Dolphin brt
	ALLOWED_ITEMS c
	GOT_FISH e
	MOISTNESS_LEVEL bT
	SWIM_WITH_PLAYER_TARGETING bU
	TOTAL_AIR_SUPPLY b
	TOTAL_MOISTNESS_LEVEL bV
	TREASURE_POS d
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	addParticlesAroundSelf (Lnet/minecraft/core/particles/ParticleOptions;)V a
	canBeLeashed (Lnet/minecraft/world/entity/player/Player;)Z a
	canBreatheUnderwater ()Z dN
	canRide (Lnet/minecraft/world/entity/Entity;)Z l
	canTakeItem (Lnet/minecraft/world/item/ItemStack;)Z f
	closeToNextPos ()Z fZ
	createAttributes ()Lnet/minecraft/world/entity/ai/attributes/AttributeSupplier$Builder; fY
	createNavigation (Lnet/minecraft/world/level/Level;)Lnet/minecraft/world/entity/ai/navigation/PathNavigation; b
	defineSynchedData ()V a_
	doHurtTarget (Lnet/minecraft/world/entity/Entity;)Z z
	finalizeSpawn (Lnet/minecraft/world/level/ServerLevelAccessor;Lnet/minecraft/world/DifficultyInstance;Lnet/minecraft/world/entity/MobSpawnType;Lnet/minecraft/world/entity/SpawnGroupData;Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/world/entity/SpawnGroupData; a
	getAmbientSound ()Lnet/minecraft/sounds/SoundEvent; s
	getDeathSound ()Lnet/minecraft/sounds/SoundEvent; g_
	getHurtSound (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEvent; d
	getMaxAirSupply ()I ce
	getMaxHeadXRot ()I X
	getMaxHeadYRot ()I fC
	getMoistnessLevel ()I w
	getStandingEyeHeight (Lnet/minecraft/world/entity/Pose;Lnet/minecraft/world/entity/EntityDimensions;)F b
	getSwimSound ()Lnet/minecraft/sounds/SoundEvent; aJ
	getSwimSplashSound ()Lnet/minecraft/sounds/SoundEvent; aK
	getTreasurePos ()Lnet/minecraft/core/BlockPos; q
	gotFish ()Z r
	handleAirSupply (I)V b
	handleEntityEvent (B)V b
	increaseAirSupply (I)I n
	mobInteract (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResult; b
	pickUpItem (Lnet/minecraft/world/entity/item/ItemEntity;)V b
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	registerGoals ()V x
	setGotFish (Z)V w
	setMoisntessLevel (I)V c
	setTreasurePos (Lnet/minecraft/core/BlockPos;)V i
	tick ()V l
	travel (Lnet/minecraft/world/phys/Vec3;)V h
net/minecraft/world/entity/animal/Dolphin$DolphinSwimToTreasureGoal brt$a
	dolphin a
	stuck b
	canContinueToUse ()Z b
	canUse ()Z a
	isInterruptable ()Z J_
	start ()V c
	stop ()V d
	tick ()V e
net/minecraft/world/entity/animal/Dolphin$DolphinSwimWithPlayerGoal brt$b
	dolphin a
	player c
	speedModifier b
	canContinueToUse ()Z b
	canUse ()Z a
	start ()V c
	stop ()V d
	tick ()V e
net/minecraft/world/entity/animal/Dolphin$PlayWithItemsGoal brt$c
	cooldown b
	canUse ()Z a
	drop (Lnet/minecraft/world/item/ItemStack;)V a
	start ()V c
	stop ()V d
	tick ()V e
net/minecraft/world/entity/animal/FlyingAnimal bru
	isFlying ()Z gl
net/minecraft/world/entity/animal/Fox brv
	ALLOWED_ITEMS cf
	AVOID_PLAYERS ci
	DATA_FLAGS_ID bY
	DATA_TRUSTED_ID_0 cd
	DATA_TRUSTED_ID_1 ce
	DATA_TYPE_ID bX
	FLAG_CROUCHING bT
	FLAG_DEFENDING cc
	FLAG_FACEPLANTED cb
	FLAG_INTERESTED bU
	FLAG_POUNCING bW
	FLAG_SITTING bZ
	FLAG_SLEEPING ca
	MIN_TICKS_BEFORE_EAT cj
	STALKABLE_PREY ch
	TRUSTED_TARGET_SELECTOR cg
	crouchAmount cp
	crouchAmountO cq
	fishTargetGoal cm
	interestedAngle cn
	interestedAngleO co
	landTargetGoal ck
	ticksSinceEaten cr
	turtleEggTargetGoal cl
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	addTrustedUUID (Ljava/util/UUID;)V b
	aiStep ()V b_
	calculateFallDamage (FF)I d
	canEat (Lnet/minecraft/world/item/ItemStack;)Z l
	canHoldItem (Lnet/minecraft/world/item/ItemStack;)Z j
	canMove ()Z gn
	canTakeItem (Lnet/minecraft/world/item/ItemStack;)Z f
	checkFoxSpawnRules (Lnet/minecraft/world/entity/EntityType;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/world/entity/MobSpawnType;Lnet/minecraft/core/BlockPos;Lnet/minecraft/util/RandomSource;)Z c
	clearStates ()V gm
	createAttributes ()Lnet/minecraft/world/entity/ai/attributes/AttributeSupplier$Builder; q
	defineSynchedData ()V a_
	dropAllDeathLoot (Lnet/minecraft/world/damagesource/DamageSource;)V g
	dropItemStack (Lnet/minecraft/world/item/ItemStack;)V o
	finalizeSpawn (Lnet/minecraft/world/level/ServerLevelAccessor;Lnet/minecraft/world/DifficultyInstance;Lnet/minecraft/world/entity/MobSpawnType;Lnet/minecraft/world/entity/SpawnGroupData;Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/world/entity/SpawnGroupData; a
	getAmbientSound ()Lnet/minecraft/sounds/SoundEvent; s
	getBreedOffspring (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/AgeableMob;)Lnet/minecraft/world/entity/AgeableMob; a
	getBreedOffspring (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/AgeableMob;)Lnet/minecraft/world/entity/animal/Fox; b
	getCrouchAmount (F)F E
	getDeathSound ()Lnet/minecraft/sounds/SoundEvent; g_
	getEatingSound (Lnet/minecraft/world/item/ItemStack;)Lnet/minecraft/sounds/SoundEvent; d
	getFlag (I)Z t
	getHeadRollAngle (F)F D
	getHurtSound (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEvent; d
	getLeashOffset ()Lnet/minecraft/world/phys/Vec3; cG
	getStandingEyeHeight (Lnet/minecraft/world/entity/Pose;Lnet/minecraft/world/entity/EntityDimensions;)F b
	getTrustedUUIDs ()Ljava/util/List; gj
	getVariant ()Ljava/lang/Object; c
	getVariant ()Lnet/minecraft/world/entity/animal/Fox$Type; r
	handleEntityEvent (B)V b
	isCrouching ()Z bU
	isDefending ()Z gk
	isFaceplanted ()Z fY
	isFood (Lnet/minecraft/world/item/ItemStack;)Z m
	isFullyCrouched ()Z gg
	isImmobile ()Z eT
	isInterested ()Z gh
	isJumping ()Z gf
	isPathClear (Lnet/minecraft/world/entity/animal/Fox;Lnet/minecraft/world/entity/LivingEntity;)Z a
	isPouncing ()Z ge
	isSitting ()Z w
	isSleeping ()Z fy
	onOffspringSpawnedFromEgg (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/entity/Mob;)V a
	pickUpItem (Lnet/minecraft/world/entity/item/ItemEntity;)V b
	playAmbientSound ()V N
	populateDefaultEquipmentSlots (Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/DifficultyInstance;)V a
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	registerGoals ()V x
	setDefending (Z)V B
	setFaceplanted (Z)V A
	setFlag (IZ)V d
	setIsCrouching (Z)V y
	setIsInterested (Z)V z
	setIsPouncing (Z)V x
	setSitting (Z)V w
	setSleeping (Z)V C
	setTarget (Lnet/minecraft/world/entity/LivingEntity;)V h
	setTargetGoals ()V gi
	setVariant (Ljava/lang/Object;)V a
	setVariant (Lnet/minecraft/world/entity/animal/Fox$Type;)V a
	spitOutItem (Lnet/minecraft/world/item/ItemStack;)V n
	tick ()V l
	trusts (Ljava/util/UUID;)Z c
	usePlayerItem (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;Lnet/minecraft/world/item/ItemStack;)V a
	wakeUp ()V gl
net/minecraft/world/entity/animal/Fox$DefendTrustedTargetGoal brv$a
	timestamp l
	trustedLastHurt k
	trustedLastHurtBy j
	canUse ()Z a
	start ()V c
net/minecraft/world/entity/animal/Fox$FaceplantGoal brv$b
	countdown a
	canContinueToUse ()Z b
	canUse ()Z a
	start ()V c
	stop ()V d
	tick ()V e
net/minecraft/world/entity/animal/Fox$FoxAlertableEntitiesSelector brv$c
	test (Lnet/minecraft/world/entity/LivingEntity;)Z a
net/minecraft/world/entity/animal/Fox$FoxBehaviorGoal brv$d
	alertableTargeting b
	alertable ()Z i
	hasShelter ()Z h
net/minecraft/world/entity/animal/Fox$FoxBreedGoal brv$e
	breed ()V g
	start ()V c
net/minecraft/world/entity/animal/Fox$FoxEatBerriesGoal brv$f
	WAIT_TICKS i
	ticksWaited g
	acceptedDistance ()D i
	canUse ()Z a
	isValidTarget (Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;)Z a
	onReachedTarget ()V o
	pickGlowBerry (Lnet/minecraft/world/level/block/state/BlockState;)V a
	pickSweetBerries (Lnet/minecraft/world/level/block/state/BlockState;)V b
	shouldRecalculatePath ()Z l
	start ()V c
	tick ()V e
net/minecraft/world/entity/animal/Fox$FoxFloatGoal brv$g
	canUse ()Z a
	start ()V c
net/minecraft/world/entity/animal/Fox$FoxFollowParentGoal brv$h
	fox e
	canContinueToUse ()Z b
	canUse ()Z a
	start ()V c
net/minecraft/world/entity/animal/Fox$FoxGroupData brv$i
	type a
net/minecraft/world/entity/animal/Fox$FoxLookAtPlayerGoal brv$j
	canContinueToUse ()Z b
	canUse ()Z a
net/minecraft/world/entity/animal/Fox$FoxLookControl brv$k
	resetXRotOnTick ()Z c
	tick ()V a
net/minecraft/world/entity/animal/Fox$FoxMeleeAttackGoal brv$l
	canUse ()Z a
	checkAndPerformAttack (Lnet/minecraft/world/entity/LivingEntity;D)V a
	start ()V c
net/minecraft/world/entity/animal/Fox$FoxMoveControl brv$m
	tick ()V a
net/minecraft/world/entity/animal/Fox$FoxPanicGoal brv$n
	shouldPanic ()Z h
net/minecraft/world/entity/animal/Fox$FoxPounceGoal brv$o
	canContinueToUse ()Z b
	canUse ()Z a
	isInterruptable ()Z J_
	start ()V c
	stop ()V d
	tick ()V e
net/minecraft/world/entity/animal/Fox$FoxSearchForItemsGoal brv$p
	canUse ()Z a
	start ()V c
	tick ()V e
net/minecraft/world/entity/animal/Fox$FoxStrollThroughVillageGoal brv$q
	canContinueToUse ()Z b
	canFoxMove ()Z h
	canUse ()Z a
	start ()V c
net/minecraft/world/entity/animal/Fox$PerchAndSearchGoal brv$r
	lookTime e
	looksRemaining f
	relX c
	relZ d
	canContinueToUse ()Z b
	canUse ()Z a
	resetLook ()V k
	start ()V c
	stop ()V d
	tick ()V e
net/minecraft/world/entity/animal/Fox$SeekShelterGoal brv$s
	interval c
	canUse ()Z a
	start ()V c
net/minecraft/world/entity/animal/Fox$SleepGoal brv$t
	WAIT_TIME_BEFORE_SLEEP c
	countdown d
	canContinueToUse ()Z b
	canSleep ()Z k
	canUse ()Z a
	start ()V c
	stop ()V d
net/minecraft/world/entity/animal/Fox$StalkPreyGoal brv$u
	canUse ()Z a
	start ()V c
	stop ()V d
	tick ()V e
net/minecraft/world/entity/animal/Fox$Type brv$v
	$VALUES g
	BY_ID d
	CODEC c
	RED a
	SNOW b
	id e
	name f
	$values ()[Lnet/minecraft/world/entity/animal/Fox$Type; b
	byBiome (Lnet/minecraft/core/Holder;)Lnet/minecraft/world/entity/animal/Fox$Type; a
	byId (I)Lnet/minecraft/world/entity/animal/Fox$Type; a
	byName (Ljava/lang/String;)Lnet/minecraft/world/entity/animal/Fox$Type; a
	getId ()I a
	getSerializedName ()Ljava/lang/String; c
net/minecraft/world/entity/animal/FrogVariant brw
	COLD c
	TEMPERATE a
	WARM b
	texture d
	register (Ljava/lang/String;Ljava/lang/String;)Lnet/minecraft/world/entity/animal/FrogVariant; a
	texture ()Lnet/minecraft/resources/ResourceLocation; a
net/minecraft/world/entity/animal/IronGolem brx
	DATA_FLAGS_ID c
	IRON_INGOT_HEAL_AMOUNT d
	PERSISTENT_ANGER_TIME bU
	attackAnimationTick e
	offerFlowerTick bT
	persistentAngerTarget bW
	remainingPersistentAngerTime bV
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	aiStep ()V b_
	canAttackType (Lnet/minecraft/world/entity/EntityType;)Z a
	canSpawnSprintParticle ()Z bg
	checkSpawnObstruction (Lnet/minecraft/world/level/LevelReader;)Z a
	createAttributes ()Lnet/minecraft/world/entity/ai/attributes/AttributeSupplier$Builder; q
	decreaseAirSupply (I)I m
	defineSynchedData ()V a_
	die (Lnet/minecraft/world/damagesource/DamageSource;)V a
	doHurtTarget (Lnet/minecraft/world/entity/Entity;)Z z
	doPush (Lnet/minecraft/world/entity/Entity;)V A
	getAttackAnimationTick ()I w
	getAttackDamage ()F ga
	getCrackiness ()Lnet/minecraft/world/entity/animal/IronGolem$Crackiness; r
	getDeathSound ()Lnet/minecraft/sounds/SoundEvent; g_
	getHurtSound (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEvent; d
	getLeashOffset ()Lnet/minecraft/world/phys/Vec3; cG
	getOfferFlowerTick ()I fY
	getPersistentAngerTarget ()Ljava/util/UUID; b
	getRemainingPersistentAngerTime ()I a
	handleEntityEvent (B)V b
	hurt (Lnet/minecraft/world/damagesource/DamageSource;F)Z a
	isPlayerCreated ()Z fZ
	mobInteract (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResult; b
	offerFlower (Z)V w
	playStepSound (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V b
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	registerGoals ()V x
	setPersistentAngerTarget (Ljava/util/UUID;)V a
	setPlayerCreated (Z)V x
	setRemainingPersistentAngerTime (I)V a
	startPersistentAngerTimer ()V c
net/minecraft/world/entity/animal/IronGolem$Crackiness brx$a
	$VALUES g
	BY_DAMAGE e
	HIGH d
	LOW b
	MEDIUM c
	NONE a
	fraction f
	$values ()[Lnet/minecraft/world/entity/animal/IronGolem$Crackiness; a
	byFraction (F)Lnet/minecraft/world/entity/animal/IronGolem$Crackiness; a
net/minecraft/world/entity/animal/MushroomCow bry
	DATA_TYPE bT
	MUTATE_CHANCE bU
	effect bW
	effectDuration bX
	lastLightningBoltUUID bY
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	checkMushroomSpawnRules (Lnet/minecraft/world/entity/EntityType;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/world/entity/MobSpawnType;Lnet/minecraft/core/BlockPos;Lnet/minecraft/util/RandomSource;)Z c
	defineSynchedData ()V a_
	getBreedOffspring (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/AgeableMob;)Lnet/minecraft/world/entity/AgeableMob; a
	getBreedOffspring (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/AgeableMob;)Lnet/minecraft/world/entity/animal/Cow; b
	getBreedOffspring (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/AgeableMob;)Lnet/minecraft/world/entity/animal/MushroomCow; c
	getEffectFromItemStack (Lnet/minecraft/world/item/ItemStack;)Ljava/util/Optional; l
	getOffspringType (Lnet/minecraft/world/entity/animal/MushroomCow;)Lnet/minecraft/world/entity/animal/MushroomCow$MushroomType; a
	getVariant ()Ljava/lang/Object; c
	getVariant ()Lnet/minecraft/world/entity/animal/MushroomCow$MushroomType; r
	getWalkTargetValue (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/LevelReader;)F a
	mobInteract (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResult; b
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	readyForShearing ()Z a
	setVariant (Ljava/lang/Object;)V a
	setVariant (Lnet/minecraft/world/entity/animal/MushroomCow$MushroomType;)V a
	shear (Lnet/minecraft/sounds/SoundSource;)V a
	thunderHit (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LightningBolt;)V a
net/minecraft/world/entity/animal/MushroomCow$MushroomType bry$a
	$VALUES f
	BROWN b
	CODEC c
	RED a
	blockState e
	type d
	$values ()[Lnet/minecraft/world/entity/animal/MushroomCow$MushroomType; b
	byType (Ljava/lang/String;)Lnet/minecraft/world/entity/animal/MushroomCow$MushroomType; a
	getBlockState ()Lnet/minecraft/world/level/block/state/BlockState; a
	getSerializedName ()Ljava/lang/String; c
net/minecraft/world/entity/animal/Ocelot brz
	CROUCH_SPEED_MOD bT
	DATA_TRUSTING bY
	SPRINT_SPEED_MOD bW
	TEMPT_INGREDIENT bX
	WALK_SPEED_MOD bU
	ocelotAvoidPlayersGoal bZ
	temptGoal ca
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	checkOcelotSpawnRules (Lnet/minecraft/world/entity/EntityType;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/world/entity/MobSpawnType;Lnet/minecraft/core/BlockPos;Lnet/minecraft/util/RandomSource;)Z c
	checkSpawnObstruction (Lnet/minecraft/world/level/LevelReader;)Z a
	createAttributes ()Lnet/minecraft/world/entity/ai/attributes/AttributeSupplier$Builder; q
	customServerAiStep ()V W
	defineSynchedData ()V a_
	doHurtTarget (Lnet/minecraft/world/entity/Entity;)Z z
	finalizeSpawn (Lnet/minecraft/world/level/ServerLevelAccessor;Lnet/minecraft/world/DifficultyInstance;Lnet/minecraft/world/entity/MobSpawnType;Lnet/minecraft/world/entity/SpawnGroupData;Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/world/entity/SpawnGroupData; a
	getAmbientSound ()Lnet/minecraft/sounds/SoundEvent; s
	getAmbientSoundInterval ()I M
	getAttackDamage ()F fY
	getBreedOffspring (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/AgeableMob;)Lnet/minecraft/world/entity/AgeableMob; a
	getBreedOffspring (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/AgeableMob;)Lnet/minecraft/world/entity/animal/Ocelot; b
	getDeathSound ()Lnet/minecraft/sounds/SoundEvent; g_
	getHurtSound (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEvent; d
	getLeashOffset ()Lnet/minecraft/world/phys/Vec3; cG
	handleEntityEvent (B)V b
	isFood (Lnet/minecraft/world/item/ItemStack;)Z m
	isSteppingCarefully ()Z bQ
	isTrusting ()Z w
	mobInteract (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResult; b
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	reassessTrustingGoals ()V r
	registerGoals ()V x
	removeWhenFarAway (D)Z h
	setTrusting (Z)V w
	spawnTrustingParticles (Z)V x
net/minecraft/world/entity/animal/Ocelot$OcelotAvoidEntityGoal brz$a
	ocelot i
	canContinueToUse ()Z b
	canUse ()Z a
net/minecraft/world/entity/animal/Ocelot$OcelotTemptGoal brz$b
	ocelot c
	canScare ()Z h
net/minecraft/world/entity/animal/Panda bsa
	BREED_TARGETING cc
	DATA_ID_FLAGS cb
	EAT_COUNTER bY
	EAT_TICK_INTERVAL ch
	FLAG_ON_BACK cg
	FLAG_ROLL ce
	FLAG_SIT cf
	FLAG_SNEEZE cd
	HIDDEN_GENE_ID ca
	MAIN_GENE_ID bZ
	PANDA_ITEMS ct
	SNEEZE_COUNTER bX
	TOTAL_ROLL_STEPS bT
	TOTAL_UNHAPPY_TIME ci
	UNHAPPY_COUNTER bW
	didBite ck
	gotBamboo cj
	lookAtPlayerGoal cs
	onBackAmount co
	onBackAmountO cp
	rollAmount cq
	rollAmountO cr
	rollCounter bU
	rollDelta cl
	sitAmount cm
	sitAmountO cn
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	addEatingParticles ()V gv
	afterSneeze ()V gA
	canBeLeashed (Lnet/minecraft/world/entity/player/Player;)Z a
	canPerformAction ()Z gs
	canTakeItem (Lnet/minecraft/world/item/ItemStack;)Z f
	createAttributes ()Lnet/minecraft/world/entity/ai/attributes/AttributeSupplier$Builder; gj
	defineSynchedData ()V a_
	doHurtTarget (Lnet/minecraft/world/entity/Entity;)Z z
	eat (Z)V y
	finalizeSpawn (Lnet/minecraft/world/level/ServerLevelAccessor;Lnet/minecraft/world/DifficultyInstance;Lnet/minecraft/world/entity/MobSpawnType;Lnet/minecraft/world/entity/SpawnGroupData;Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/world/entity/SpawnGroupData; a
	getAmbientSound ()Lnet/minecraft/sounds/SoundEvent; s
	getBreedOffspring (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/AgeableMob;)Lnet/minecraft/world/entity/AgeableMob; a
	getDeathSound ()Lnet/minecraft/sounds/SoundEvent; g_
	getEatCounter ()I gt
	getFlag (I)Z w
	getHiddenGene ()Lnet/minecraft/world/entity/animal/Panda$Gene; gh
	getHurtSound (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEvent; d
	getLieOnBackAmount (F)F E
	getMainGene ()Lnet/minecraft/world/entity/animal/Panda$Gene; gg
	getOneOfGenesRandomly ()Lnet/minecraft/world/entity/animal/Panda$Gene; gB
	getRollAmount (F)F F
	getSitAmount (F)F D
	getSneezeCounter ()I gf
	getUnhappyCounter ()I q
	getVariant ()Lnet/minecraft/world/entity/animal/Panda$Gene; gk
	handleEating ()V gu
	handleRoll ()V gz
	hurt (Lnet/minecraft/world/damagesource/DamageSource;F)Z a
	isAggressive ()Z fS
	isBrown ()Z go
	isEating ()Z ge
	isFood (Lnet/minecraft/world/item/ItemStack;)Z m
	isFoodOrCake (Lnet/minecraft/world/item/ItemStack;)Z l
	isLazy ()Z gl
	isOnBack ()Z fY
	isPlayful ()Z gn
	isRolling ()Z gi
	isScared ()Z gq
	isSitting ()Z w
	isSneezing ()Z r
	isWeak ()Z gp
	isWorried ()Z gm
	mobInteract (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResult; b
	pickUpItem (Lnet/minecraft/world/entity/item/ItemEntity;)V b
	playStepSound (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V b
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	registerGoals ()V x
	roll (Z)V A
	setAttributes ()V gr
	setEatCounter (I)V v
	setFlag (IZ)V d
	setGeneFromParents (Lnet/minecraft/world/entity/animal/Panda;Lnet/minecraft/world/entity/animal/Panda;)V a
	setHiddenGene (Lnet/minecraft/world/entity/animal/Panda$Gene;)V b
	setMainGene (Lnet/minecraft/world/entity/animal/Panda$Gene;)V a
	setOnBack (Z)V x
	setSneezeCounter (I)V u
	setUnhappyCounter (I)V t
	sit (Z)V w
	sneeze (Z)V z
	tick ()V l
	tryToSit ()V gC
	updateOnBackAnimation ()V gx
	updateRollAmount ()V gy
	updateSitAmount ()V gw
net/minecraft/world/entity/animal/Panda$Gene bsa$a
	$VALUES n
	AGGRESSIVE g
	BROWN e
	BY_ID i
	CODEC h
	LAZY b
	MAX_GENE j
	NORMAL a
	PLAYFUL d
	WEAK f
	WORRIED c
	id k
	isRecessive m
	name l
	$values ()[Lnet/minecraft/world/entity/animal/Panda$Gene; d
	byId (I)Lnet/minecraft/world/entity/animal/Panda$Gene; a
	byName (Ljava/lang/String;)Lnet/minecraft/world/entity/animal/Panda$Gene; a
	getId ()I a
	getRandom (Lnet/minecraft/util/RandomSource;)Lnet/minecraft/world/entity/animal/Panda$Gene; a
	getSerializedName ()Ljava/lang/String; c
	getVariantFromGenes (Lnet/minecraft/world/entity/animal/Panda$Gene;Lnet/minecraft/world/entity/animal/Panda$Gene;)Lnet/minecraft/world/entity/animal/Panda$Gene; a
	isRecessive ()Z b
net/minecraft/world/entity/animal/Panda$PandaAttackGoal bsa$b
	panda b
	canUse ()Z a
net/minecraft/world/entity/animal/Panda$PandaAvoidGoal bsa$c
	panda i
	canUse ()Z a
net/minecraft/world/entity/animal/Panda$PandaBreedGoal bsa$d
	panda d
	unhappyCooldown e
	canFindBamboo ()Z h
	canUse ()Z a
net/minecraft/world/entity/animal/Panda$PandaHurtByTargetGoal bsa$e
	panda a
	alertOther (Lnet/minecraft/world/entity/Mob;Lnet/minecraft/world/entity/LivingEntity;)V a
	canContinueToUse ()Z b
net/minecraft/world/entity/animal/Panda$PandaLieOnBackGoal bsa$f
	cooldown b
	panda a
	canContinueToUse ()Z b
	canUse ()Z a
	start ()V c
	stop ()V d
net/minecraft/world/entity/animal/Panda$PandaLookAtPlayerGoal bsa$g
	panda h
	canContinueToUse ()Z b
	canUse ()Z a
	setTarget (Lnet/minecraft/world/entity/LivingEntity;)V a
	tick ()V e
net/minecraft/world/entity/animal/Panda$PandaMoveControl bsa$h
	panda l
	tick ()V a
net/minecraft/world/entity/animal/Panda$PandaPanicGoal bsa$i
	panda h
	canContinueToUse ()Z b
	shouldPanic ()Z h
net/minecraft/world/entity/animal/Panda$PandaRollGoal bsa$j
	panda a
	canContinueToUse ()Z b
	canUse ()Z a
	isInterruptable ()Z J_
	start ()V c
net/minecraft/world/entity/animal/Panda$PandaSitGoal bsa$k
	cooldown b
	canContinueToUse ()Z b
	canUse ()Z a
	start ()V c
	stop ()V d
	tick ()V e
net/minecraft/world/entity/animal/Panda$PandaSneezeGoal bsa$l
	panda a
	canContinueToUse ()Z b
	canUse ()Z a
	start ()V c
net/minecraft/world/entity/animal/Parrot bsb
	DATA_VARIANT_ID ca
	MOB_SOUND_MAP ce
	NOT_PARROT_PREDICATE cb
	POISONOUS_FOOD cc
	TAME_FOOD cd
	flap bW
	flapSpeed bX
	flapping cf
	jukebox ci
	nextFlap cg
	oFlap bZ
	oFlapSpeed bY
	partyParrot ch
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	aiStep ()V b_
	calculateFlapping ()V gi
	canMate (Lnet/minecraft/world/entity/animal/Animal;)Z a
	checkFallDamage (DZLnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/BlockPos;)V a
	checkParrotSpawnRules (Lnet/minecraft/world/entity/EntityType;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/world/entity/MobSpawnType;Lnet/minecraft/core/BlockPos;Lnet/minecraft/util/RandomSource;)Z c
	createAttributes ()Lnet/minecraft/world/entity/ai/attributes/AttributeSupplier$Builder; ge
	createNavigation (Lnet/minecraft/world/level/Level;)Lnet/minecraft/world/entity/ai/navigation/PathNavigation; b
	defineSynchedData ()V a_
	doHurtTarget (Lnet/minecraft/world/entity/Entity;)Z z
	doPush (Lnet/minecraft/world/entity/Entity;)V A
	finalizeSpawn (Lnet/minecraft/world/level/ServerLevelAccessor;Lnet/minecraft/world/DifficultyInstance;Lnet/minecraft/world/entity/MobSpawnType;Lnet/minecraft/world/entity/SpawnGroupData;Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/world/entity/SpawnGroupData; a
	getAmbient (Lnet/minecraft/world/level/Level;Lnet/minecraft/util/RandomSource;)Lnet/minecraft/sounds/SoundEvent; a
	getAmbientSound ()Lnet/minecraft/sounds/SoundEvent; s
	getBreedOffspring (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/AgeableMob;)Lnet/minecraft/world/entity/AgeableMob; a
	getDeathSound ()Lnet/minecraft/sounds/SoundEvent; g_
	getHurtSound (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEvent; d
	getImitatedSound (Lnet/minecraft/world/entity/EntityType;)Lnet/minecraft/sounds/SoundEvent; b
	getLeashOffset ()Lnet/minecraft/world/phys/Vec3; cG
	getPitch (Lnet/minecraft/util/RandomSource;)F a
	getSoundSource ()Lnet/minecraft/sounds/SoundSource; cY
	getStandingEyeHeight (Lnet/minecraft/world/entity/Pose;Lnet/minecraft/world/entity/EntityDimensions;)F b
	getVariant ()Ljava/lang/Object; c
	getVariant ()Lnet/minecraft/world/entity/animal/Parrot$Variant; gg
	getVoicePitch ()F eS
	hurt (Lnet/minecraft/world/damagesource/DamageSource;F)Z a
	imitateNearbyMobs (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/Entity;)Z a
	isBaby ()Z h_
	isFlapping ()Z aP
	isFlying ()Z gl
	isFood (Lnet/minecraft/world/item/ItemStack;)Z m
	isPartyParrot ()Z gf
	isPushable ()Z bp
	mobInteract (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResult; b
	onFlap ()V aO
	playStepSound (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V b
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	registerGoals ()V x
	setRecordPlayingNearby (Lnet/minecraft/core/BlockPos;Z)V a
	setVariant (Ljava/lang/Object;)V a
	setVariant (Lnet/minecraft/world/entity/animal/Parrot$Variant;)V a
net/minecraft/world/entity/animal/Parrot$ParrotWanderGoal bsb$a
	getPosition ()Lnet/minecraft/world/phys/Vec3; h
	getTreePos ()Lnet/minecraft/world/phys/Vec3; k
net/minecraft/world/entity/animal/Parrot$Variant bsb$b
	$VALUES j
	BLUE b
	BY_ID g
	CODEC f
	GRAY e
	GREEN c
	RED_BLUE a
	YELLOW_BLUE d
	id h
	name i
	$values ()[Lnet/minecraft/world/entity/animal/Parrot$Variant; b
	byId (I)Lnet/minecraft/world/entity/animal/Parrot$Variant; a
	getId ()I a
	getSerializedName ()Ljava/lang/String; c
net/minecraft/world/entity/animal/Pig bsc
	DATA_BOOST_TIME bU
	DATA_SADDLE_ID bT
	FOOD_ITEMS bW
	steering bX
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	boost ()Z a
	createAttributes ()Lnet/minecraft/world/entity/ai/attributes/AttributeSupplier$Builder; q
	defineSynchedData ()V a_
	dropEquipment ()V eu
	equipSaddle (Lnet/minecraft/sounds/SoundSource;)V a
	getAmbientSound ()Lnet/minecraft/sounds/SoundEvent; s
	getBreedOffspring (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/AgeableMob;)Lnet/minecraft/world/entity/AgeableMob; a
	getBreedOffspring (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/AgeableMob;)Lnet/minecraft/world/entity/animal/Pig; b
	getControllingPassenger ()Lnet/minecraft/world/entity/LivingEntity; cL
	getDeathSound ()Lnet/minecraft/sounds/SoundEvent; g_
	getDismountLocationForPassenger (Lnet/minecraft/world/entity/LivingEntity;)Lnet/minecraft/world/phys/Vec3; b
	getHurtSound (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEvent; d
	getLeashOffset ()Lnet/minecraft/world/phys/Vec3; cG
	getRiddenInput (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/phys/Vec3;)Lnet/minecraft/world/phys/Vec3; b
	getRiddenSpeed (Lnet/minecraft/world/entity/player/Player;)F e
	isFood (Lnet/minecraft/world/item/ItemStack;)Z m
	isSaddleable ()Z g
	isSaddled ()Z i
	mobInteract (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResult; b
	onSyncedDataUpdated (Lnet/minecraft/network/syncher/EntityDataAccessor;)V a
	playStepSound (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V b
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	registerGoals ()V x
	thunderHit (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LightningBolt;)V a
	tickRidden (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/phys/Vec3;)V a
net/minecraft/world/entity/animal/PolarBear bsd
	DATA_STANDING_ID bT
	PERSISTENT_ANGER_TIME bZ
	STAND_ANIMATION_TICKS bU
	clientSideStandAnimation bX
	clientSideStandAnimationO bW
	persistentAngerTarget cb
	remainingPersistentAngerTime ca
	warningSoundTicks bY
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	checkPolarBearSpawnRules (Lnet/minecraft/world/entity/EntityType;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/world/entity/MobSpawnType;Lnet/minecraft/core/BlockPos;Lnet/minecraft/util/RandomSource;)Z c
	createAttributes ()Lnet/minecraft/world/entity/ai/attributes/AttributeSupplier$Builder; q
	defineSynchedData ()V a_
	doHurtTarget (Lnet/minecraft/world/entity/Entity;)Z z
	finalizeSpawn (Lnet/minecraft/world/level/ServerLevelAccessor;Lnet/minecraft/world/DifficultyInstance;Lnet/minecraft/world/entity/MobSpawnType;Lnet/minecraft/world/entity/SpawnGroupData;Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/world/entity/SpawnGroupData; a
	getAmbientSound ()Lnet/minecraft/sounds/SoundEvent; s
	getBreedOffspring (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/AgeableMob;)Lnet/minecraft/world/entity/AgeableMob; a
	getDeathSound ()Lnet/minecraft/sounds/SoundEvent; g_
	getDimensions (Lnet/minecraft/world/entity/Pose;)Lnet/minecraft/world/entity/EntityDimensions; a
	getHurtSound (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEvent; d
	getPersistentAngerTarget ()Ljava/util/UUID; b
	getRemainingPersistentAngerTime ()I a
	getStandingAnimationScale (F)F D
	getWaterSlowDown ()F eY
	isFood (Lnet/minecraft/world/item/ItemStack;)Z m
	isStanding ()Z w
	playStepSound (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V b
	playWarningSound ()V r
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	registerGoals ()V x
	setPersistentAngerTarget (Ljava/util/UUID;)V a
	setRemainingPersistentAngerTime (I)V a
	setStanding (Z)V w
	startPersistentAngerTimer ()V c
	tick ()V l
net/minecraft/world/entity/animal/PolarBear$PolarBearAttackPlayersGoal bsd$a
	canUse ()Z a
	getFollowDistance ()D l
net/minecraft/world/entity/animal/PolarBear$PolarBearHurtByTargetGoal bsd$b
	alertOther (Lnet/minecraft/world/entity/Mob;Lnet/minecraft/world/entity/LivingEntity;)V a
	start ()V c
net/minecraft/world/entity/animal/PolarBear$PolarBearMeleeAttackGoal bsd$c
	checkAndPerformAttack (Lnet/minecraft/world/entity/LivingEntity;D)V a
	getAttackReachSqr (Lnet/minecraft/world/entity/LivingEntity;)D a
	stop ()V d
net/minecraft/world/entity/animal/PolarBear$PolarBearPanicGoal bsd$d
	shouldPanic ()Z h
net/minecraft/world/entity/animal/Pufferfish bse
	PUFF_STATE e
	SCARY_MOB bV
	STATE_FULL d
	STATE_MID c
	STATE_SMALL b
	deflateTimer bU
	inflateCounter bT
	targetingConditions bW
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	aiStep ()V b_
	defineSynchedData ()V a_
	getAmbientSound ()Lnet/minecraft/sounds/SoundEvent; s
	getBucketItemStack ()Lnet/minecraft/world/item/ItemStack; b
	getDeathSound ()Lnet/minecraft/sounds/SoundEvent; g_
	getDimensions (Lnet/minecraft/world/entity/Pose;)Lnet/minecraft/world/entity/EntityDimensions; a
	getFlopSound ()Lnet/minecraft/sounds/SoundEvent; fZ
	getHurtSound (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEvent; d
	getPuffState ()I ga
	getScale (I)F s
	onSyncedDataUpdated (Lnet/minecraft/network/syncher/EntityDataAccessor;)V a
	playerTouch (Lnet/minecraft/world/entity/player/Player;)V b_
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	registerGoals ()V x
	setPuffState (I)V c
	tick ()V l
	touch (Lnet/minecraft/world/entity/Mob;)V a
net/minecraft/world/entity/animal/Pufferfish$PufferfishPuffGoal bse$a
	fish a
	canUse ()Z a
	start ()V c
	stop ()V d
net/minecraft/world/entity/animal/Rabbit bsf
	ATTACK_SPEED_MOD bY
	BREED_SPEED_MOD bU
	DATA_TYPE_ID cb
	EVIL_ARMOR_VALUE ca
	EVIL_ATTACK_POWER bZ
	FLEE_SPEED_MOD bX
	FOLLOW_SPEED_MOD bW
	KILLER_BUNNY cc
	MORE_CARROTS_DELAY cd
	STROLL_SPEED_MOD bT
	jumpDelayTicks ch
	jumpDuration cf
	jumpTicks ce
	moreCarrotTicks ci
	wasOnGround cg
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	aiStep ()V b_
	canSpawnSprintParticle ()Z bg
	checkLandingDelay ()V gh
	checkRabbitSpawnRules (Lnet/minecraft/world/entity/EntityType;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/world/entity/MobSpawnType;Lnet/minecraft/core/BlockPos;Lnet/minecraft/util/RandomSource;)Z c
	createAttributes ()Lnet/minecraft/world/entity/ai/attributes/AttributeSupplier$Builder; r
	customServerAiStep ()V W
	defineSynchedData ()V a_
	disableJumpControl ()V gf
	doHurtTarget (Lnet/minecraft/world/entity/Entity;)Z z
	enableJumpControl ()V ge
	facePoint (DD)V c
	finalizeSpawn (Lnet/minecraft/world/level/ServerLevelAccessor;Lnet/minecraft/world/DifficultyInstance;Lnet/minecraft/world/entity/MobSpawnType;Lnet/minecraft/world/entity/SpawnGroupData;Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/world/entity/SpawnGroupData; a
	getAmbientSound ()Lnet/minecraft/sounds/SoundEvent; s
	getBreedOffspring (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/AgeableMob;)Lnet/minecraft/world/entity/AgeableMob; a
	getBreedOffspring (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/AgeableMob;)Lnet/minecraft/world/entity/animal/Rabbit; b
	getDeathSound ()Lnet/minecraft/sounds/SoundEvent; g_
	getHurtSound (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEvent; d
	getJumpCompletion (F)F D
	getJumpPower ()F eU
	getJumpSound ()Lnet/minecraft/sounds/SoundEvent; w
	getLeashOffset ()Lnet/minecraft/world/phys/Vec3; cG
	getRandomRabbitVariant (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/entity/animal/Rabbit$Variant; a
	getSoundSource ()Lnet/minecraft/sounds/SoundSource; cY
	getVariant ()Ljava/lang/Object; c
	getVariant ()Lnet/minecraft/world/entity/animal/Rabbit$Variant; fY
	handleEntityEvent (B)V b
	isFood (Lnet/minecraft/world/item/ItemStack;)Z m
	isTemptingItem (Lnet/minecraft/world/item/ItemStack;)Z l
	jumpFromGround ()V eW
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	registerGoals ()V x
	setJumping (Z)V r
	setLandingDelay ()V gg
	setSpeedModifier (D)V i
	setVariant (Ljava/lang/Object;)V a
	setVariant (Lnet/minecraft/world/entity/animal/Rabbit$Variant;)V a
	startJumping ()V q
	wantsMoreFood ()Z gi
net/minecraft/world/entity/animal/Rabbit$EvilRabbitAttackGoal bsf$a
	getAttackReachSqr (Lnet/minecraft/world/entity/LivingEntity;)D a
net/minecraft/world/entity/animal/Rabbit$RabbitAvoidEntityGoal bsf$b
	rabbit i
	canUse ()Z a
net/minecraft/world/entity/animal/Rabbit$RabbitGroupData bsf$c
	variant a
net/minecraft/world/entity/animal/Rabbit$RabbitJumpControl bsf$d
	canJump c
	rabbit b
	canJump ()Z d
	setCanJump (Z)V a
	tick ()V b
	wantJump ()Z c
net/minecraft/world/entity/animal/Rabbit$RabbitMoveControl bsf$e
	nextJumpSpeed m
	rabbit l
	setWantedPosition (DDDD)V a
	tick ()V a
net/minecraft/world/entity/animal/Rabbit$RabbitPanicGoal bsf$f
	rabbit h
	tick ()V e
net/minecraft/world/entity/animal/Rabbit$RaidGardenGoal bsf$g
	canRaid i
	rabbit g
	wantsToRaid h
	canContinueToUse ()Z b
	canUse ()Z a
	isValidTarget (Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;)Z a
	tick ()V e
net/minecraft/world/entity/animal/Rabbit$Variant bsf$h
	$VALUES l
	BLACK c
	BROWN a
	BY_ID i
	CODEC h
	EVIL g
	GOLD e
	SALT f
	WHITE b
	WHITE_SPLOTCHED d
	id j
	name k
	$values ()[Lnet/minecraft/world/entity/animal/Rabbit$Variant; b
	byId (I)Lnet/minecraft/world/entity/animal/Rabbit$Variant; a
	getSerializedName ()Ljava/lang/String; c
	id ()I a
net/minecraft/world/entity/animal/Salmon bsg
	getAmbientSound ()Lnet/minecraft/sounds/SoundEvent; s
	getBucketItemStack ()Lnet/minecraft/world/item/ItemStack; b
	getDeathSound ()Lnet/minecraft/sounds/SoundEvent; g_
	getFlopSound ()Lnet/minecraft/sounds/SoundEvent; fZ
	getHurtSound (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEvent; d
	getMaxSchoolSize ()I ga
net/minecraft/world/entity/animal/Sheep bsh
	COLORARRAY_BY_COLOR bX
	DATA_WOOL_ID bU
	EAT_ANIMATION_TICKS bT
	ITEM_BY_DYE bW
	eatAnimationTick bY
	eatBlockGoal bZ
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	aiStep ()V b_
	ate ()V L
	createAttributes ()Lnet/minecraft/world/entity/ai/attributes/AttributeSupplier$Builder; q
	createSheepColor (Lnet/minecraft/world/item/DyeColor;)[F c
	customServerAiStep ()V W
	defineSynchedData ()V a_
	finalizeSpawn (Lnet/minecraft/world/level/ServerLevelAccessor;Lnet/minecraft/world/DifficultyInstance;Lnet/minecraft/world/entity/MobSpawnType;Lnet/minecraft/world/entity/SpawnGroupData;Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/world/entity/SpawnGroupData; a
	getAmbientSound ()Lnet/minecraft/sounds/SoundEvent; s
	getBreedOffspring (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/AgeableMob;)Lnet/minecraft/world/entity/AgeableMob; a
	getBreedOffspring (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/AgeableMob;)Lnet/minecraft/world/entity/animal/Sheep; b
	getColor ()Lnet/minecraft/world/item/DyeColor; r
	getColorArray (Lnet/minecraft/world/item/DyeColor;)[F a
	getDeathSound ()Lnet/minecraft/sounds/SoundEvent; g_
	getDefaultLootTable ()Lnet/minecraft/resources/ResourceLocation; Q
	getHeadEatAngleScale (F)F E
	getHeadEatPositionScale (F)F D
	getHurtSound (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEvent; d
	getOffspringColor (Lnet/minecraft/world/entity/animal/Animal;Lnet/minecraft/world/entity/animal/Animal;)Lnet/minecraft/world/item/DyeColor; a
	getRandomSheepColor (Lnet/minecraft/util/RandomSource;)Lnet/minecraft/world/item/DyeColor; a
	getStandingEyeHeight (Lnet/minecraft/world/entity/Pose;Lnet/minecraft/world/entity/EntityDimensions;)F b
	handleEntityEvent (B)V b
	isSheared ()Z w
	makeContainer (Lnet/minecraft/world/item/DyeColor;Lnet/minecraft/world/item/DyeColor;)Lnet/minecraft/world/inventory/CraftingContainer; a
	mobInteract (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResult; b
	playStepSound (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V b
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	readyForShearing ()Z a
	registerGoals ()V x
	setColor (Lnet/minecraft/world/item/DyeColor;)V b
	setSheared (Z)V w
	shear (Lnet/minecraft/sounds/SoundSource;)V a
net/minecraft/world/entity/animal/ShoulderRidingEntity bsi
	RIDE_COOLDOWN bW
	rideCooldownCounter bX
	canSitOnShoulder ()Z gh
	setEntityOnShoulder (Lnet/minecraft/server/level/ServerPlayer;)Z b
	tick ()V l
net/minecraft/world/entity/animal/SnowGolem bsj
	DATA_PUMPKIN_ID b
	EYE_HEIGHT d
	PUMPKIN_FLAG c
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	aiStep ()V b_
	createAttributes ()Lnet/minecraft/world/entity/ai/attributes/AttributeSupplier$Builder; q
	defineSynchedData ()V a_
	getAmbientSound ()Lnet/minecraft/sounds/SoundEvent; s
	getDeathSound ()Lnet/minecraft/sounds/SoundEvent; g_
	getHurtSound (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEvent; d
	getLeashOffset ()Lnet/minecraft/world/phys/Vec3; cG
	getStandingEyeHeight (Lnet/minecraft/world/entity/Pose;Lnet/minecraft/world/entity/EntityDimensions;)F b
	hasPumpkin ()Z r
	isSensitiveToWater ()Z fb
	mobInteract (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResult; b
	performRangedAttack (Lnet/minecraft/world/entity/LivingEntity;F)V a
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	readyForShearing ()Z a
	registerGoals ()V x
	setPumpkin (Z)V w
	shear (Lnet/minecraft/sounds/SoundSource;)V a
net/minecraft/world/entity/animal/Squid bsk
	oldTentacleAngle bW
	oldTentacleMovement bU
	rotateSpeed bZ
	speed bX
	tentacleAngle bV
	tentacleMovement bT
	tentacleSpeed bY
	tx ca
	ty cb
	tz cc
	xBodyRot b
	xBodyRotO c
	zBodyRot d
	zBodyRotO e
	aiStep ()V b_
	canBeLeashed (Lnet/minecraft/world/entity/player/Player;)Z a
	createAttributes ()Lnet/minecraft/world/entity/ai/attributes/AttributeSupplier$Builder; fY
	getAmbientSound ()Lnet/minecraft/sounds/SoundEvent; s
	getDeathSound ()Lnet/minecraft/sounds/SoundEvent; g_
	getHurtSound (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEvent; d
	getInkParticle ()Lnet/minecraft/core/particles/ParticleOptions; q
	getMovementEmission ()Lnet/minecraft/world/entity/Entity$MovementEmission; aS
	getSoundVolume ()F eR
	getSquirtSound ()Lnet/minecraft/sounds/SoundEvent; r
	getStandingEyeHeight (Lnet/minecraft/world/entity/Pose;Lnet/minecraft/world/entity/EntityDimensions;)F b
	handleEntityEvent (B)V b
	hasMovementVector ()Z fZ
	hurt (Lnet/minecraft/world/damagesource/DamageSource;F)Z a
	registerGoals ()V x
	rotateVector (Lnet/minecraft/world/phys/Vec3;)Lnet/minecraft/world/phys/Vec3; j
	setMovementVector (FFF)V a
	spawnInk ()V w
	travel (Lnet/minecraft/world/phys/Vec3;)V h
net/minecraft/world/entity/animal/Squid$SquidFleeGoal bsk$a
	SQUID_FLEE_MAX_DISTANCE d
	SQUID_FLEE_MIN_DISTANCE c
	SQUID_FLEE_SPEED b
	fleeTicks e
	canUse ()Z a
	requiresUpdateEveryTick ()Z K_
	start ()V c
	tick ()V e
net/minecraft/world/entity/animal/Squid$SquidRandomMovementGoal bsk$b
	squid b
	canUse ()Z a
	tick ()V e
net/minecraft/world/entity/animal/TropicalFish bsl
	BUCKET_VARIANT_TAG b
	COMMON_VARIANTS c
	DATA_ID_TYPE_VARIANT d
	isSchool e
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	checkTropicalFishSpawnRules (Lnet/minecraft/world/entity/EntityType;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/world/entity/MobSpawnType;Lnet/minecraft/core/BlockPos;Lnet/minecraft/util/RandomSource;)Z b
	defineSynchedData ()V a_
	finalizeSpawn (Lnet/minecraft/world/level/ServerLevelAccessor;Lnet/minecraft/world/DifficultyInstance;Lnet/minecraft/world/entity/MobSpawnType;Lnet/minecraft/world/entity/SpawnGroupData;Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/world/entity/SpawnGroupData; a
	getAmbientSound ()Lnet/minecraft/sounds/SoundEvent; s
	getBaseColor ()Lnet/minecraft/world/item/DyeColor; gh
	getBaseColor (I)Lnet/minecraft/world/item/DyeColor; s
	getBucketItemStack ()Lnet/minecraft/world/item/ItemStack; b
	getDeathSound ()Lnet/minecraft/sounds/SoundEvent; g_
	getFlopSound ()Lnet/minecraft/sounds/SoundEvent; fZ
	getHurtSound (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEvent; d
	getPackedVariant ()I gk
	getPattern (I)Lnet/minecraft/world/entity/animal/TropicalFish$Pattern; u
	getPatternColor ()Lnet/minecraft/world/item/DyeColor; gi
	getPatternColor (I)Lnet/minecraft/world/item/DyeColor; t
	getPredefinedName (I)Ljava/lang/String; c
	getVariant ()Ljava/lang/Object; c
	getVariant ()Lnet/minecraft/world/entity/animal/TropicalFish$Pattern; gj
	isMaxGroupSizeReached (I)Z d
	packVariant (Lnet/minecraft/world/entity/animal/TropicalFish$Pattern;Lnet/minecraft/world/item/DyeColor;Lnet/minecraft/world/item/DyeColor;)I a
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	saveToBucketTag (Lnet/minecraft/world/item/ItemStack;)V l
	setPackedVariant (I)V v
	setVariant (Ljava/lang/Object;)V a
	setVariant (Lnet/minecraft/world/entity/animal/TropicalFish$Pattern;)V a
net/minecraft/world/entity/animal/TropicalFish$Base bsl$a
	$VALUES d
	LARGE b
	SMALL a
	id c
	$values ()[Lnet/minecraft/world/entity/animal/TropicalFish$Base; a
net/minecraft/world/entity/animal/TropicalFish$Pattern bsl$b
	$VALUES s
	BETTY k
	BLOCKFISH j
	BRINELY e
	BY_ID n
	CLAYFISH l
	CODEC m
	DASHER d
	FLOPPER g
	GLITTER i
	KOB a
	SNOOPER c
	SPOTTY f
	STRIPEY h
	SUNSTREAK b
	base q
	displayName p
	name o
	packedId r
	$values ()[Lnet/minecraft/world/entity/animal/TropicalFish$Pattern; e
	base ()Lnet/minecraft/world/entity/animal/TropicalFish$Base; a
	byId (I)Lnet/minecraft/world/entity/animal/TropicalFish$Pattern; a
	displayName ()Lnet/minecraft/network/chat/Component; d
	getPackedId ()I b
	getSerializedName ()Ljava/lang/String; c
net/minecraft/world/entity/animal/TropicalFish$TropicalFishGroupData bsl$c
	variant b
net/minecraft/world/entity/animal/TropicalFish$Variant bsl$d
	baseColor b
	pattern a
	patternColor c
	baseColor ()Lnet/minecraft/world/item/DyeColor; c
	getPackedId ()I a
	pattern ()Lnet/minecraft/world/entity/animal/TropicalFish$Pattern; b
	patternColor ()Lnet/minecraft/world/item/DyeColor; d
net/minecraft/world/entity/animal/Turtle bsm
	BABY_ON_LAND_SELECTOR bU
	FOOD_ITEMS bT
	GOING_HOME ca
	HAS_EGG bX
	HOME_POS bW
	LAYING_EGG bY
	TRAVELLING cb
	TRAVEL_POS bZ
	layEggCounter cc
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	ageBoundaryReached ()V m
	aiStep ()V b_
	canBeLeashed (Lnet/minecraft/world/entity/player/Player;)Z a
	canBreatheUnderwater ()Z dN
	canFallInLove ()Z fZ
	checkTurtleSpawnRules (Lnet/minecraft/world/entity/EntityType;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/world/entity/MobSpawnType;Lnet/minecraft/core/BlockPos;Lnet/minecraft/util/RandomSource;)Z c
	createAttributes ()Lnet/minecraft/world/entity/ai/attributes/AttributeSupplier$Builder; w
	createNavigation (Lnet/minecraft/world/level/Level;)Lnet/minecraft/world/entity/ai/navigation/PathNavigation; b
	defineSynchedData ()V a_
	finalizeSpawn (Lnet/minecraft/world/level/ServerLevelAccessor;Lnet/minecraft/world/DifficultyInstance;Lnet/minecraft/world/entity/MobSpawnType;Lnet/minecraft/world/entity/SpawnGroupData;Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/world/entity/SpawnGroupData; a
	getAmbientSound ()Lnet/minecraft/sounds/SoundEvent; s
	getAmbientSoundInterval ()I M
	getBreedOffspring (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/AgeableMob;)Lnet/minecraft/world/entity/AgeableMob; a
	getDeathSound ()Lnet/minecraft/sounds/SoundEvent; g_
	getHomePos ()Lnet/minecraft/core/BlockPos; fY
	getHurtSound (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEvent; d
	getMobType ()Lnet/minecraft/world/entity/MobType; eN
	getScale ()F dV
	getSwimSound ()Lnet/minecraft/sounds/SoundEvent; aJ
	getTravelPos ()Lnet/minecraft/core/BlockPos; ge
	getWalkTargetValue (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/LevelReader;)F a
	hasEgg ()Z q
	isFood (Lnet/minecraft/world/item/ItemStack;)Z m
	isGoingHome ()Z gf
	isLayingEgg ()Z r
	isPushedByFluid ()Z cw
	isTravelling ()Z gg
	nextStep ()F aI
	playStepSound (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V b
	playSwimSound (F)V e
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	registerGoals ()V x
	setGoingHome (Z)V y
	setHasEgg (Z)V w
	setHomePos (Lnet/minecraft/core/BlockPos;)V i
	setLayingEgg (Z)V x
	setTravelPos (Lnet/minecraft/core/BlockPos;)V j
	setTravelling (Z)V z
	thunderHit (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LightningBolt;)V a
	travel (Lnet/minecraft/world/phys/Vec3;)V h
net/minecraft/world/entity/animal/Turtle$TurtleBreedGoal bsm$a
	turtle d
	breed ()V g
	canUse ()Z a
net/minecraft/world/entity/animal/Turtle$TurtleGoHomeGoal bsm$b
	GIVE_UP_TICKS e
	closeToHomeTryTicks d
	speedModifier b
	stuck c
	turtle a
	canContinueToUse ()Z b
	canUse ()Z a
	start ()V c
	stop ()V d
	tick ()V e
net/minecraft/world/entity/animal/Turtle$TurtleGoToWaterGoal bsm$c
	GIVE_UP_TICKS g
	turtle h
	canContinueToUse ()Z b
	canUse ()Z a
	isValidTarget (Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;)Z a
	shouldRecalculatePath ()Z l
net/minecraft/world/entity/animal/Turtle$TurtleLayEggGoal bsm$d
	turtle g
	canContinueToUse ()Z b
	canUse ()Z a
	isValidTarget (Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;)Z a
	tick ()V e
net/minecraft/world/entity/animal/Turtle$TurtleMoveControl bsm$e
	turtle l
	tick ()V a
	updateSpeed ()V g
net/minecraft/world/entity/animal/Turtle$TurtlePanicGoal bsm$f
	canUse ()Z a
net/minecraft/world/entity/animal/Turtle$TurtlePathNavigation bsm$g
	isStableDestination (Lnet/minecraft/core/BlockPos;)Z a
net/minecraft/world/entity/animal/Turtle$TurtleRandomStrollGoal bsm$h
	turtle i
	canUse ()Z a
net/minecraft/world/entity/animal/Turtle$TurtleTravelGoal bsm$i
	speedModifier b
	stuck c
	turtle a
	canContinueToUse ()Z b
	canUse ()Z a
	start ()V c
	stop ()V d
	tick ()V e
net/minecraft/world/entity/animal/WaterAnimal bsn
	baseTick ()V ao
	canBeLeashed (Lnet/minecraft/world/entity/player/Player;)Z a
	canBreatheUnderwater ()Z dN
	checkSpawnObstruction (Lnet/minecraft/world/level/LevelReader;)Z a
	checkSurfaceWaterAnimalSpawnRules (Lnet/minecraft/world/entity/EntityType;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/world/entity/MobSpawnType;Lnet/minecraft/core/BlockPos;Lnet/minecraft/util/RandomSource;)Z c
	getAmbientSoundInterval ()I M
	getExperienceReward ()I ea
	getMobType ()Lnet/minecraft/world/entity/MobType; eN
	handleAirSupply (I)V b
	isPushedByFluid ()Z cw
net/minecraft/world/entity/animal/Wolf bso
	DATA_COLLAR_COLOR bY
	DATA_INTERESTED_ID bX
	DATA_REMAINING_ANGER_TIME bZ
	PERSISTENT_ANGER_TIME ci
	PREY_SELECTOR bW
	START_HEALTH ca
	TAME_HEALTH cb
	interestedAngle cc
	interestedAngleO cd
	isShaking cf
	isWet ce
	persistentAngerTarget cj
	shakeAnim cg
	shakeAnimO ch
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	aiStep ()V b_
	canBeLeashed (Lnet/minecraft/world/entity/player/Player;)Z a
	canMate (Lnet/minecraft/world/entity/animal/Animal;)Z a
	cancelShake ()V gj
	checkWolfSpawnRules (Lnet/minecraft/world/entity/EntityType;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/world/entity/MobSpawnType;Lnet/minecraft/core/BlockPos;Lnet/minecraft/util/RandomSource;)Z c
	createAttributes ()Lnet/minecraft/world/entity/ai/attributes/AttributeSupplier$Builder; ge
	defineSynchedData ()V a_
	die (Lnet/minecraft/world/damagesource/DamageSource;)V a
	doHurtTarget (Lnet/minecraft/world/entity/Entity;)Z z
	getAmbientSound ()Lnet/minecraft/sounds/SoundEvent; s
	getBodyRollAngle (FF)F f
	getBreedOffspring (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/AgeableMob;)Lnet/minecraft/world/entity/AgeableMob; a
	getBreedOffspring (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/AgeableMob;)Lnet/minecraft/world/entity/animal/Wolf; b
	getCollarColor ()Lnet/minecraft/world/item/DyeColor; gh
	getDeathSound ()Lnet/minecraft/sounds/SoundEvent; g_
	getHeadRollAngle (F)F E
	getHurtSound (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEvent; d
	getLeashOffset ()Lnet/minecraft/world/phys/Vec3; cG
	getMaxHeadXRot ()I X
	getMaxSpawnClusterSize ()I fE
	getPersistentAngerTarget ()Ljava/util/UUID; b
	getRemainingPersistentAngerTime ()I a
	getSoundVolume ()F eR
	getStandingEyeHeight (Lnet/minecraft/world/entity/Pose;Lnet/minecraft/world/entity/EntityDimensions;)F b
	getTailAngle ()F gg
	getWetShade (F)F D
	handleEntityEvent (B)V b
	hurt (Lnet/minecraft/world/damagesource/DamageSource;F)Z a
	isFood (Lnet/minecraft/world/item/ItemStack;)Z m
	isInterested ()Z gi
	isWet ()Z gf
	mobInteract (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResult; b
	playStepSound (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V b
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	registerGoals ()V x
	setCollarColor (Lnet/minecraft/world/item/DyeColor;)V a
	setIsInterested (Z)V A
	setPersistentAngerTarget (Ljava/util/UUID;)V a
	setRemainingPersistentAngerTime (I)V a
	setTame (Z)V x
	startPersistentAngerTimer ()V c
	tick ()V l
	wantsToAttack (Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/entity/LivingEntity;)Z a
net/minecraft/world/entity/animal/Wolf$WolfAvoidEntityGoal bso$a
	wolf j
	avoidLlama (Lnet/minecraft/world/entity/animal/horse/Llama;)Z a
	canUse ()Z a
	start ()V c
	tick ()V e
net/minecraft/world/entity/animal/Wolf$WolfPanicGoal bso$b
	shouldPanic ()Z h
net/minecraft/world/entity/animal/allay/Allay bsp
	DANCING_LOOP_DURATION bV
	DATA_CAN_DUPLICATE cc
	DATA_DANCING cb
	DUPLICATION_COOLDOWN_TICKS bY
	DUPLICATION_ITEM bX
	ITEM_PICKUP_REACH bT
	LIFTING_ITEM_ANIMATION_DURATION bU
	LOGGER e
	MEMORY_TYPES c
	NUM_OF_DUPLICATION_HEARTS bZ
	RIDING_OFFSET ca
	SENSOR_TYPES b
	SPINNING_ANIMATION_DURATION bW
	THROW_SOUND_PITCHES d
	dancingAnimationTicks cm
	duplicationCooldown cj
	dynamicJukeboxListener cg
	dynamicVibrationListener cd
	holdingItemAnimationTicks ck
	holdingItemAnimationTicks0 cl
	inventory ch
	jukeboxPos ci
	spinningAnimationTicks cn
	spinningAnimationTicks0 co
	vibrationData ce
	vibrationUser cf
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	aiStep ()V b_
	allayConsidersItemEqual (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/item/ItemStack;)Z d
	brainProvider ()Lnet/minecraft/world/entity/ai/Brain$Provider; dL
	canDuplicate ()Z gi
	canPickUpLoot ()Z fG
	canTakeItem (Lnet/minecraft/world/item/ItemStack;)Z f
	checkFallDamage (DZLnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/BlockPos;)V a
	createAttributes ()Lnet/minecraft/world/entity/ai/attributes/AttributeSupplier$Builder; q
	createNavigation (Lnet/minecraft/world/level/Level;)Lnet/minecraft/world/entity/ai/navigation/PathNavigation; b
	customServerAiStep ()V W
	defineSynchedData ()V a_
	dropEquipment ()V eu
	duplicateAllay ()V gg
	equipmentHasChanged (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/item/ItemStack;)Z a
	getAmbientSound ()Lnet/minecraft/sounds/SoundEvent; s
	getBrain ()Lnet/minecraft/world/entity/ai/Brain; dK
	getDeathSound ()Lnet/minecraft/sounds/SoundEvent; g_
	getHoldingItemAnimationProgress (F)F D
	getHurtSound (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEvent; d
	getInventory ()Lnet/minecraft/world/SimpleContainer; w
	getLeashOffset ()Lnet/minecraft/world/phys/Vec3; cG
	getMyRidingOffset ()D bw
	getPickupReach ()Lnet/minecraft/core/Vec3i; R
	getSoundVolume ()F eR
	getSpinningProgress (F)F E
	getStandingEyeHeight (Lnet/minecraft/world/entity/Pose;Lnet/minecraft/world/entity/EntityDimensions;)F b
	getVibrationData ()Lnet/minecraft/world/level/gameevent/vibrations/VibrationSystem$Data; gb
	getVibrationUser ()Lnet/minecraft/world/level/gameevent/vibrations/VibrationSystem$User; gc
	handleEntityEvent (B)V b
	hasItemInHand ()Z r
	hasNonMatchingPotion (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/item/ItemStack;)Z e
	hurt (Lnet/minecraft/world/damagesource/DamageSource;F)Z a
	isDancing ()Z fY
	isDuplicationItem (Lnet/minecraft/world/item/ItemStack;)Z l
	isFlapping ()Z aP
	isOnPickupCooldown ()Z gd
	isPanicking ()Z fZ
	isSpinning ()Z ga
	makeBrain (Lcom/mojang/serialization/Dynamic;)Lnet/minecraft/world/entity/ai/Brain; a
	mobInteract (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResult; b
	pickUpItem (Lnet/minecraft/world/entity/item/ItemEntity;)V b
	playStepSound (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V b
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	removeInteractionItem (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/item/ItemStack;)V a
	removeWhenFarAway (D)Z h
	resetDuplicationCooldown ()V gh
	sendDebugPackets ()V V
	setDancing (Z)V w
	setJukeboxPlaying (Lnet/minecraft/core/BlockPos;Z)V b
	shouldStayCloseToLeashHolder ()Z fW
	shouldStopDancing ()Z ge
	spawnHeartParticle ()V gj
	tick ()V l
	travel (Lnet/minecraft/world/phys/Vec3;)V h
	updateDuplicationCooldown ()V gf
	updateDynamicGameEventListener (Ljava/util/function/BiConsumer;)V a
	wantsToPickUp (Lnet/minecraft/world/item/ItemStack;)Z k
net/minecraft/world/entity/animal/allay/Allay$JukeboxListener bsp$a
	listenerRadius c
	listenerSource b
	getListenerRadius ()I b
	getListenerSource ()Lnet/minecraft/world/level/gameevent/PositionSource; a
	handleGameEvent (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/level/gameevent/GameEvent;Lnet/minecraft/world/level/gameevent/GameEvent$Context;Lnet/minecraft/world/phys/Vec3;)Z a
net/minecraft/world/entity/animal/allay/Allay$VibrationUser bsp$b
	VIBRATION_EVENT_LISTENER_RANGE b
	positionSource c
	canReceiveVibration (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/gameevent/GameEvent;Lnet/minecraft/world/level/gameevent/GameEvent$Context;)Z a
	getListenableEvents ()Lnet/minecraft/tags/TagKey; c
	getListenerRadius ()I a
	getPositionSource ()Lnet/minecraft/world/level/gameevent/PositionSource; b
	onReceiveVibration (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/gameevent/GameEvent;Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/entity/Entity;F)V a
net/minecraft/world/entity/animal/allay/AllayAi bsq
	CLOSE_ENOUGH_TO_TARGET e
	DISTANCE_TO_WANTED_ITEM k
	GIVE_ITEM_TIMEOUT_DURATION l
	MAX_LOOK_DISTANCE g
	MAX_WAIT_DURATION i
	MIN_WAIT_DURATION h
	SPEED_MULTIPLIER_WHEN_FOLLOWING_DEPOSIT_TARGET b
	SPEED_MULTIPLIER_WHEN_IDLING a
	SPEED_MULTIPLIER_WHEN_PANICKING d
	SPEED_MULTIPLIER_WHEN_RETRIEVING_ITEM c
	TIME_TO_FORGET_NOTEBLOCK j
	TOO_FAR_FROM_TARGET f
	getItemDepositPosition (Lnet/minecraft/world/entity/LivingEntity;)Ljava/util/Optional; b
	getLikedPlayer (Lnet/minecraft/world/entity/LivingEntity;)Ljava/util/Optional; a
	getLikedPlayerPositionTracker (Lnet/minecraft/world/entity/LivingEntity;)Ljava/util/Optional; d
	hasWantedItem (Lnet/minecraft/world/entity/LivingEntity;)Z c
	hearNoteblock (Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/core/BlockPos;)V a
	initCoreActivity (Lnet/minecraft/world/entity/ai/Brain;)V b
	initIdleActivity (Lnet/minecraft/world/entity/ai/Brain;)V c
	makeBrain (Lnet/minecraft/world/entity/ai/Brain;)Lnet/minecraft/world/entity/ai/Brain; a
	shouldDepositItemsAtLikedNoteblock (Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/entity/ai/Brain;Lnet/minecraft/core/GlobalPos;)Z a
	updateActivity (Lnet/minecraft/world/entity/animal/allay/Allay;)V a
net/minecraft/world/entity/animal/axolotl/Axolotl bss
	AXOLOTL_TOTAL_AIR_SUPPLY cd
	DATA_PLAYING_DEAD cb
	DATA_VARIANT ca
	FROM_BUCKET cc
	MEMORY_TYPES bW
	PLAYER_REGEN_DETECTION_RANGE bX
	RARE_VARIANT_CHANCE bY
	REGEN_BUFF_BASE_DURATION ch
	REGEN_BUFF_MAX_DURATION cf
	REHYDRATE_AIR_SUPPLY ce
	SENSOR_TYPES bU
	TOTAL_PLAYDEAD_TIME bT
	VARIANT_TAG bZ
	modelRotationValues cg
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	applySupportingEffects (Lnet/minecraft/world/entity/player/Player;)V f
	baseTick ()V ao
	brainProvider ()Lnet/minecraft/world/entity/ai/Brain$Provider; dL
	canBeLeashed (Lnet/minecraft/world/entity/player/Player;)Z a
	canBeSeenAsEnemy ()Z ek
	canBreatheUnderwater ()Z dN
	checkAxolotlSpawnRules (Lnet/minecraft/world/entity/EntityType;Lnet/minecraft/world/level/ServerLevelAccessor;Lnet/minecraft/world/entity/MobSpawnType;Lnet/minecraft/core/BlockPos;Lnet/minecraft/util/RandomSource;)Z a
	checkSpawnObstruction (Lnet/minecraft/world/level/LevelReader;)Z a
	createAttributes ()Lnet/minecraft/world/entity/ai/attributes/AttributeSupplier$Builder; gf
	createNavigation (Lnet/minecraft/world/level/Level;)Lnet/minecraft/world/entity/ai/navigation/PathNavigation; b
	customServerAiStep ()V W
	defineSynchedData ()V a_
	doHurtTarget (Lnet/minecraft/world/entity/Entity;)Z z
	finalizeSpawn (Lnet/minecraft/world/level/ServerLevelAccessor;Lnet/minecraft/world/DifficultyInstance;Lnet/minecraft/world/entity/MobSpawnType;Lnet/minecraft/world/entity/SpawnGroupData;Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/world/entity/SpawnGroupData; a
	fromBucket ()Z r
	getAmbientSound ()Lnet/minecraft/sounds/SoundEvent; s
	getBrain ()Lnet/minecraft/world/entity/ai/Brain; dK
	getBreedOffspring (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/AgeableMob;)Lnet/minecraft/world/entity/AgeableMob; a
	getBucketItemStack ()Lnet/minecraft/world/item/ItemStack; b
	getDeathSound ()Lnet/minecraft/sounds/SoundEvent; g_
	getHurtSound (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEvent; d
	getMaxAirSupply ()I ce
	getMaxHeadXRot ()I X
	getMaxHeadYRot ()I fC
	getMeleeAttackRangeSqr (Lnet/minecraft/world/entity/LivingEntity;)D i
	getMobType ()Lnet/minecraft/world/entity/MobType; eN
	getModelRotationValues ()Ljava/util/Map; a
	getPickupSound ()Lnet/minecraft/sounds/SoundEvent; w
	getStandingEyeHeight (Lnet/minecraft/world/entity/Pose;Lnet/minecraft/world/entity/EntityDimensions;)F b
	getSwimSound ()Lnet/minecraft/sounds/SoundEvent; aJ
	getSwimSplashSound ()Lnet/minecraft/sounds/SoundEvent; aK
	getVariant ()Ljava/lang/Object; c
	getVariant ()Lnet/minecraft/world/entity/animal/axolotl/Axolotl$Variant; fY
	getWalkTargetValue (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/LevelReader;)F a
	handleAirSupply (I)V t
	hurt (Lnet/minecraft/world/damagesource/DamageSource;F)Z a
	isFood (Lnet/minecraft/world/item/ItemStack;)Z m
	isPlayingDead ()Z ge
	isPushedByFluid ()Z cw
	loadFromBucketTag (Lnet/minecraft/nbt/CompoundTag;)V c
	makeBrain (Lcom/mojang/serialization/Dynamic;)Lnet/minecraft/world/entity/ai/Brain; a
	mobInteract (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResult; b
	onStopAttacking (Lnet/minecraft/world/entity/animal/axolotl/Axolotl;Lnet/minecraft/world/entity/LivingEntity;)V a
	playAmbientSound ()V N
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	rehydrate ()V q
	removeWhenFarAway (D)Z h
	requiresCustomPersistence ()Z T
	saveToBucketTag (Lnet/minecraft/world/item/ItemStack;)V l
	sendDebugPackets ()V V
	setFromBucket (Z)V w
	setPlayingDead (Z)V x
	setVariant (Ljava/lang/Object;)V a
	setVariant (Lnet/minecraft/world/entity/animal/axolotl/Axolotl$Variant;)V a
	travel (Lnet/minecraft/world/phys/Vec3;)V h
	usePlayerItem (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;Lnet/minecraft/world/item/ItemStack;)V a
	useRareVariant (Lnet/minecraft/util/RandomSource;)Z a
net/minecraft/world/entity/animal/axolotl/Axolotl$AxolotlGroupData bss$a
	types a
	getVariant (Lnet/minecraft/util/RandomSource;)Lnet/minecraft/world/entity/animal/axolotl/Axolotl$Variant; a
net/minecraft/world/entity/animal/axolotl/Axolotl$AxolotlLookControl bss$b
	tick ()V a
net/minecraft/world/entity/animal/axolotl/Axolotl$AxolotlMoveControl bss$c
	axolotl l
	tick ()V a
net/minecraft/world/entity/animal/axolotl/Axolotl$Variant bss$d
	$VALUES k
	BLUE e
	BY_ID g
	CODEC f
	CYAN d
	GOLD c
	LUCY a
	WILD b
	common j
	id h
	name i
	$values ()[Lnet/minecraft/world/entity/animal/axolotl/Axolotl$Variant; d
	byId (I)Lnet/minecraft/world/entity/animal/axolotl/Axolotl$Variant; a
	getCommonSpawnVariant (Lnet/minecraft/util/RandomSource;)Lnet/minecraft/world/entity/animal/axolotl/Axolotl$Variant; a
	getId ()I a
	getName ()Ljava/lang/String; b
	getRareSpawnVariant (Lnet/minecraft/util/RandomSource;)Lnet/minecraft/world/entity/animal/axolotl/Axolotl$Variant; b
	getSerializedName ()Ljava/lang/String; c
	getSpawnVariant (Lnet/minecraft/util/RandomSource;Z)Lnet/minecraft/world/entity/animal/axolotl/Axolotl$Variant; a
net/minecraft/world/entity/animal/axolotl/AxolotlAi bst
	ADULT_FOLLOW_RANGE a
	SPEED_MULTIPLIER_ON_LAND c
	SPEED_MULTIPLIER_WHEN_CHASING_IN_WATER e
	SPEED_MULTIPLIER_WHEN_FOLLOWING_ADULT_IN_WATER f
	SPEED_MULTIPLIER_WHEN_IDLING_IN_WATER d
	SPEED_MULTIPLIER_WHEN_MAKING_LOVE b
	canSetWalkTargetFromLookTarget (Lnet/minecraft/world/entity/LivingEntity;)Z a
	findNearestValidAttackTarget (Lnet/minecraft/world/entity/animal/axolotl/Axolotl;)Ljava/util/Optional; b
	getSpeedModifier (Lnet/minecraft/world/entity/LivingEntity;)F d
	getSpeedModifierChasing (Lnet/minecraft/world/entity/LivingEntity;)F b
	getSpeedModifierFollowingAdult (Lnet/minecraft/world/entity/LivingEntity;)F c
	getTemptations ()Lnet/minecraft/world/item/crafting/Ingredient; a
	initCoreActivity (Lnet/minecraft/world/entity/ai/Brain;)V d
	initFightActivity (Lnet/minecraft/world/entity/ai/Brain;)V c
	initIdleActivity (Lnet/minecraft/world/entity/ai/Brain;)V e
	initPlayDeadActivity (Lnet/minecraft/world/entity/ai/Brain;)V b
	makeBrain (Lnet/minecraft/world/entity/ai/Brain;)Lnet/minecraft/world/entity/ai/Brain; a
	updateActivity (Lnet/minecraft/world/entity/animal/axolotl/Axolotl;)V a
net/minecraft/world/entity/animal/axolotl/PlayDead bsu
	canStillUse (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)Z a
	canStillUse (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/animal/axolotl/Axolotl;J)Z a
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)Z a
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/animal/axolotl/Axolotl;)Z a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V d
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/animal/axolotl/Axolotl;J)V b
net/minecraft/world/entity/animal/axolotl/ValidatePlayDead bsv
	create ()Lnet/minecraft/world/entity/ai/behavior/BehaviorControl; a
net/minecraft/world/entity/animal/camel/Camel bsx
	DASH bX
	DASH_COOLDOWN_TICKS bU
	DASH_HORIZONTAL_MOMENTUM cw
	DASH_MINIMUM_DURATION_TICKS cx
	DASH_VERTICAL_MOMENTUM cv
	IDLE_MINIMAL_DURATION_TICKS cA
	LAST_POSE_CHANGE_TICK bY
	MAX_HEAD_Y_ROT bW
	RUNNING_SPEED_BONUS cu
	SITDOWN_DURATION_TICKS cy
	SITTING_DIMENSIONS cC
	SITTING_HEIGHT_DIFFERENCE cB
	STANDUP_DURATION_TICKS cz
	TEMPTATION_ITEM bT
	dashAnimationState cd
	dashCooldown cD
	idleAnimationState cc
	idleAnimationTimeout cE
	sitAnimationState bZ
	sitPoseAnimationState ca
	sitUpAnimationState cb
	actuallyHurt (Lnet/minecraft/world/damagesource/DamageSource;F)V f
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	brainProvider ()Lnet/minecraft/world/entity/ai/Brain$Provider; dL
	canAddPassenger (Lnet/minecraft/world/entity/Entity;)Z o
	canJump ()Z a
	canMate (Lnet/minecraft/world/entity/animal/Animal;)Z a
	canPerformRearing ()Z ge
	canSprint ()Z dB
	clampHeadRotationToBody (Lnet/minecraft/world/entity/Entity;F)V a
	clampRotation (Lnet/minecraft/world/entity/Entity;)V a
	createAttributes ()Lnet/minecraft/world/entity/ai/attributes/AttributeSupplier$Builder; q
	createBodyControl ()Lnet/minecraft/world/entity/ai/control/BodyRotationControl; D
	customServerAiStep ()V W
	defineSynchedData ()V a_
	executeRidersJump (FLnet/minecraft/world/phys/Vec3;)V b
	finalizeSpawn (Lnet/minecraft/world/level/ServerLevelAccessor;Lnet/minecraft/world/DifficultyInstance;Lnet/minecraft/world/entity/MobSpawnType;Lnet/minecraft/world/entity/SpawnGroupData;Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/world/entity/SpawnGroupData; a
	getAmbientSound ()Lnet/minecraft/sounds/SoundEvent; s
	getBodyAnchorAnimationYOffset (ZF)D a
	getBreedOffspring (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/AgeableMob;)Lnet/minecraft/world/entity/AgeableMob; a
	getBreedOffspring (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/AgeableMob;)Lnet/minecraft/world/entity/animal/camel/Camel; b
	getControllingPassenger ()Lnet/minecraft/world/entity/LivingEntity; cL
	getDeathSound ()Lnet/minecraft/sounds/SoundEvent; g_
	getDimensions (Lnet/minecraft/world/entity/Pose;)Lnet/minecraft/world/entity/EntityDimensions; a
	getEatingSound ()Lnet/minecraft/sounds/SoundEvent; gf
	getHurtSound (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEvent; d
	getJumpCooldown ()I W_
	getLeashOffset (F)Lnet/minecraft/world/phys/Vec3; p
	getMaxHeadYRot ()I fC
	getPassengersRidingOffset ()D bx
	getPoseTime ()J gm
	getRiddenInput (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/phys/Vec3;)Lnet/minecraft/world/phys/Vec3; b
	getRiddenRotation (Lnet/minecraft/world/entity/LivingEntity;)Lnet/minecraft/world/phys/Vec2; l
	getRiddenSpeed (Lnet/minecraft/world/entity/player/Player;)F e
	getRiderShieldingHeight ()D d
	getSaddleSoundEvent ()Lnet/minecraft/sounds/SoundEvent; R_
	getStandingEyeHeight (Lnet/minecraft/world/entity/Pose;Lnet/minecraft/world/entity/EntityDimensions;)F b
	handleEating (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/item/ItemStack;)Z a
	handleStartJump (I)V c
	handleStopJump ()V b
	isCamelSitting ()Z gg
	isCamelVisuallySitting ()Z gh
	isDashing ()Z w
	isFood (Lnet/minecraft/world/item/ItemStack;)Z m
	isInPoseTransition ()Z gi
	isPanicking ()Z fY
	isTamed ()Z gn
	isVisuallySittingDown ()Z gL
	makeBrain (Lcom/mojang/serialization/Dynamic;)Lnet/minecraft/world/entity/ai/Brain; a
	mobInteract (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResult; b
	onLeashDistance (F)V C
	onPassengerTurned (Lnet/minecraft/world/entity/Entity;)V j
	onPlayerJump (I)V b
	onSyncedDataUpdated (Lnet/minecraft/network/syncher/EntityDataAccessor;)V a
	openCustomInventoryScreen (Lnet/minecraft/world/entity/player/Player;)V b
	playStepSound (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V b
	positionRider (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/entity/Entity$MoveFunction;)V a
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	refuseToMove ()Z r
	registerGoals ()V x
	resetLastPoseChangeTick (J)V a
	resetLastPoseChangeTickToFullStand (J)V b
	sendDebugPackets ()V V
	setDashing (Z)V w
	setupAnimationStates ()V gK
	sitDown ()V gj
	standUp ()V gk
	standUpInstantly ()V gl
	tick ()V l
	tickRidden (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/phys/Vec3;)V a
	travel (Lnet/minecraft/world/phys/Vec3;)V h
	updateWalkAnimation (F)V v
net/minecraft/world/entity/animal/camel/Camel$CamelBodyRotationControl bsx$a
	clientTick ()V a
net/minecraft/world/entity/animal/camel/Camel$CamelMoveControl bsx$b
	tick ()V a
net/minecraft/world/entity/animal/camel/CamelAi bsy
	ADULT_FOLLOW_RANGE f
	MEMORY_TYPES h
	SENSOR_TYPES g
	SPEED_MULTIPLIER_WHEN_FOLLOWING_ADULT d
	SPEED_MULTIPLIER_WHEN_IDLING b
	SPEED_MULTIPLIER_WHEN_MAKING_LOVE e
	SPEED_MULTIPLIER_WHEN_PANICKING a
	SPEED_MULTIPLIER_WHEN_TEMPTED c
	brainProvider ()Lnet/minecraft/world/entity/ai/Brain$Provider; a
	getTemptations ()Lnet/minecraft/world/item/crafting/Ingredient; b
	initCoreActivity (Lnet/minecraft/world/entity/ai/Brain;)V b
	initIdleActivity (Lnet/minecraft/world/entity/ai/Brain;)V c
	initMemories (Lnet/minecraft/world/entity/animal/camel/Camel;Lnet/minecraft/util/RandomSource;)V a
	makeBrain (Lnet/minecraft/world/entity/ai/Brain;)Lnet/minecraft/world/entity/ai/Brain; a
	updateActivity (Lnet/minecraft/world/entity/animal/camel/Camel;)V a
net/minecraft/world/entity/animal/camel/CamelAi$CamelPanic bsy$a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V d
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/PathfinderMob;J)V b
net/minecraft/world/entity/animal/camel/CamelAi$RandomSitting bsy$b
	minimalPoseTicks c
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)Z a
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/animal/camel/Camel;)Z a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V d
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/animal/camel/Camel;J)V a
net/minecraft/world/entity/animal/frog/Frog bta
	DATA_TONGUE_TARGET_ID cd
	DATA_VARIANT_ID cc
	FROG_FALL_DAMAGE_REDUCTION ce
	MEMORY_TYPES bW
	SENSOR_TYPES bU
	TEMPTATION_ITEM bT
	VARIANT_KEY bX
	croakAnimationState bZ
	jumpAnimationState bY
	swimIdleAnimationState cb
	tongueAnimationState ca
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	brainProvider ()Lnet/minecraft/world/entity/ai/Brain$Provider; dL
	calculateFallDamage (FF)I d
	canBreatheUnderwater ()Z dN
	canEat (Lnet/minecraft/world/entity/LivingEntity;)Z l
	checkFrogSpawnRules (Lnet/minecraft/world/entity/EntityType;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/world/entity/MobSpawnType;Lnet/minecraft/core/BlockPos;Lnet/minecraft/util/RandomSource;)Z c
	createAttributes ()Lnet/minecraft/world/entity/ai/attributes/AttributeSupplier$Builder; fY
	createNavigation (Lnet/minecraft/world/level/Level;)Lnet/minecraft/world/entity/ai/navigation/PathNavigation; b
	customServerAiStep ()V W
	defineSynchedData ()V a_
	eraseTongueTarget ()V q
	finalizeSpawn (Lnet/minecraft/world/level/ServerLevelAccessor;Lnet/minecraft/world/DifficultyInstance;Lnet/minecraft/world/entity/MobSpawnType;Lnet/minecraft/world/entity/SpawnGroupData;Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/world/entity/SpawnGroupData; a
	getAmbientSound ()Lnet/minecraft/sounds/SoundEvent; s
	getBrain ()Lnet/minecraft/world/entity/ai/Brain; dK
	getBreedOffspring (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/AgeableMob;)Lnet/minecraft/world/entity/AgeableMob; a
	getDeathSound ()Lnet/minecraft/sounds/SoundEvent; g_
	getHeadRotSpeed ()I fD
	getHurtSound (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEvent; d
	getMaxHeadYRot ()I fC
	getTongueTarget ()Ljava/util/Optional; r
	getVariant ()Ljava/lang/Object; c
	getVariant ()Lnet/minecraft/world/entity/animal/FrogVariant; w
	isBaby ()Z h_
	isFood (Lnet/minecraft/world/item/ItemStack;)Z m
	isPushedByFluid ()Z cw
	makeBrain (Lcom/mojang/serialization/Dynamic;)Lnet/minecraft/world/entity/ai/Brain; a
	onSyncedDataUpdated (Lnet/minecraft/network/syncher/EntityDataAccessor;)V a
	playStepSound (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V b
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	sendDebugPackets ()V V
	setBaby (Z)V a
	setTongueTarget (Lnet/minecraft/world/entity/Entity;)V a
	setVariant (Ljava/lang/Object;)V a
	setVariant (Lnet/minecraft/world/entity/animal/FrogVariant;)V a
	spawnChildFromBreeding (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/animal/Animal;)V a
	tick ()V l
	travel (Lnet/minecraft/world/phys/Vec3;)V h
	updateWalkAnimation (F)V v
net/minecraft/world/entity/animal/frog/Frog$FrogLookControl bta$a
	resetXRotOnTick ()Z c
net/minecraft/world/entity/animal/frog/Frog$FrogNodeEvaluator bta$b
	belowPos l
	getBlockPathType (Lnet/minecraft/world/level/BlockGetter;III)Lnet/minecraft/world/level/pathfinder/BlockPathTypes; a
	getStart ()Lnet/minecraft/world/level/pathfinder/Node; a
net/minecraft/world/entity/animal/frog/Frog$FrogPathNavigation bta$c
	canCutCorner (Lnet/minecraft/world/level/pathfinder/BlockPathTypes;)Z b
	createPathFinder (I)Lnet/minecraft/world/level/pathfinder/PathFinder; a
net/minecraft/world/entity/animal/frog/FrogAi btb
	MAX_JUMP_VELOCITY i
	MAX_LONG_JUMP_HEIGHT g
	MAX_LONG_JUMP_WIDTH h
	SPEED_MULTIPLIER_IN_WATER e
	SPEED_MULTIPLIER_ON_LAND d
	SPEED_MULTIPLIER_WHEN_IDLING c
	SPEED_MULTIPLIER_WHEN_MAKING_LOVE b
	SPEED_MULTIPLIER_WHEN_PANICKING a
	SPEED_MULTIPLIER_WHEN_TEMPTED j
	TIME_BETWEEN_LONG_JUMPS f
	canAttack (Lnet/minecraft/world/entity/animal/frog/Frog;)Z b
	getTemptations ()Lnet/minecraft/world/item/crafting/Ingredient; a
	initCoreActivity (Lnet/minecraft/world/entity/ai/Brain;)V b
	initIdleActivity (Lnet/minecraft/world/entity/ai/Brain;)V c
	initJumpActivity (Lnet/minecraft/world/entity/ai/Brain;)V f
	initLaySpawnActivity (Lnet/minecraft/world/entity/ai/Brain;)V e
	initMemories (Lnet/minecraft/world/entity/animal/frog/Frog;Lnet/minecraft/util/RandomSource;)V a
	initSwimActivity (Lnet/minecraft/world/entity/ai/Brain;)V d
	initTongueActivity (Lnet/minecraft/world/entity/ai/Brain;)V g
	isAcceptableLandingSpot (Lnet/minecraft/world/entity/Mob;Lnet/minecraft/core/BlockPos;)Z a
	makeBrain (Lnet/minecraft/world/entity/ai/Brain;)Lnet/minecraft/world/entity/ai/Brain; a
	updateActivity (Lnet/minecraft/world/entity/animal/frog/Frog;)V a
net/minecraft/world/entity/animal/frog/ShootTongue btc
	CATCH_ANIMATION_DURATION d
	EATING_DISTANCE h
	EATING_MOVEMENT_FACTOR i
	MAX_UNREACHBLE_TONGUE_TARGETS_IN_MEMORY g
	TIME_OUT_DURATION c
	TONGUE_ANIMATION_DURATION e
	UNREACHABLE_TONGUE_TARGETS_COOLDOWN_DURATION f
	calculatePathCounter k
	eatAnimationTimer j
	eatSound m
	itemSpawnPos n
	state o
	tongueSound l
	addUnreachableTargetToMemory (Lnet/minecraft/world/entity/animal/frog/Frog;Lnet/minecraft/world/entity/LivingEntity;)V b
	canPathfindToTarget (Lnet/minecraft/world/entity/animal/frog/Frog;Lnet/minecraft/world/entity/LivingEntity;)Z a
	canStillUse (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)Z a
	canStillUse (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/animal/frog/Frog;J)Z a
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)Z a
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/animal/frog/Frog;)Z a
	eatEntity (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/animal/frog/Frog;)V b
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V d
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/animal/frog/Frog;J)V b
	stop (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V b
	stop (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/animal/frog/Frog;J)V c
	tick (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V c
	tick (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/animal/frog/Frog;J)V d
net/minecraft/world/entity/animal/frog/ShootTongue$State btc$a
	$VALUES e
	CATCH_ANIMATION b
	DONE d
	EAT_ANIMATION c
	MOVE_TO_TARGET a
	$values ()[Lnet/minecraft/world/entity/animal/frog/ShootTongue$State; a
net/minecraft/world/entity/animal/frog/Tadpole btd
	HITBOX_HEIGHT d
	HITBOX_WIDTH c
	MEMORY_TYPES bT
	SENSOR_TYPES e
	age bU
	ticksToBeFrog b
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	ageUp ()V gc
	ageUp (I)V c
	aiStep ()V b_
	brainProvider ()Lnet/minecraft/world/entity/ai/Brain$Provider; dL
	createAttributes ()Lnet/minecraft/world/entity/ai/attributes/AttributeSupplier$Builder; ga
	createNavigation (Lnet/minecraft/world/level/Level;)Lnet/minecraft/world/entity/ai/navigation/PathNavigation; b
	customServerAiStep ()V W
	feed (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/item/ItemStack;)V a
	fromBucket ()Z r
	getAge ()I gb
	getAmbientSound ()Lnet/minecraft/sounds/SoundEvent; s
	getBrain ()Lnet/minecraft/world/entity/ai/Brain; dK
	getBucketItemStack ()Lnet/minecraft/world/item/ItemStack; b
	getDeathSound ()Lnet/minecraft/sounds/SoundEvent; g_
	getFlopSound ()Lnet/minecraft/sounds/SoundEvent; fZ
	getHurtSound (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEvent; d
	getPickupSound ()Lnet/minecraft/sounds/SoundEvent; w
	getTicksLeftUntilAdult ()I gd
	isFood (Lnet/minecraft/world/item/ItemStack;)Z m
	loadFromBucketTag (Lnet/minecraft/nbt/CompoundTag;)V c
	makeBrain (Lcom/mojang/serialization/Dynamic;)Lnet/minecraft/world/entity/ai/Brain; a
	mobInteract (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResult; b
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	saveToBucketTag (Lnet/minecraft/world/item/ItemStack;)V l
	sendDebugPackets ()V V
	setAge (I)V s
	setFromBucket (Z)V w
	shouldDropExperience ()Z dY
	usePlayerItem (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/item/ItemStack;)V b
net/minecraft/world/entity/animal/frog/TadpoleAi bte
	SPEED_MULTIPLIER_WHEN_IDLING_IN_WATER b
	SPEED_MULTIPLIER_WHEN_PANICKING a
	SPEED_MULTIPLIER_WHEN_TEMPTED c
	initCoreActivity (Lnet/minecraft/world/entity/ai/Brain;)V b
	initIdleActivity (Lnet/minecraft/world/entity/ai/Brain;)V c
	makeBrain (Lnet/minecraft/world/entity/ai/Brain;)Lnet/minecraft/world/entity/ai/Brain; a
	updateActivity (Lnet/minecraft/world/entity/animal/frog/Tadpole;)V a
net/minecraft/world/entity/animal/goat/Goat btg
	ADULT_ATTACK_DAMAGE ca
	BABY_ATTACK_DAMAGE cb
	DATA_HAS_LEFT_HORN cd
	DATA_HAS_RIGHT_HORN ce
	DATA_IS_SCREAMING_GOAT cc
	GOAT_FALL_DAMAGE_REDUCTION bX
	GOAT_SCREAMING_CHANCE bY
	LONG_JUMPING_DIMENSIONS bT
	MEMORY_TYPES bW
	SENSOR_TYPES bU
	UNIHORN_CHANCE bZ
	isLoweringHead cf
	lowerHeadTick cg
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	addHorns ()V gg
	ageBoundaryReached ()V m
	aiStep ()V b_
	brainProvider ()Lnet/minecraft/world/entity/ai/Brain$Provider; dL
	calculateFallDamage (FF)I d
	checkGoatSpawnRules (Lnet/minecraft/world/entity/EntityType;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/world/entity/MobSpawnType;Lnet/minecraft/core/BlockPos;Lnet/minecraft/util/RandomSource;)Z c
	createAttributes ()Lnet/minecraft/world/entity/ai/attributes/AttributeSupplier$Builder; r
	createHorn ()Lnet/minecraft/world/item/ItemStack; q
	customServerAiStep ()V W
	defineSynchedData ()V a_
	dropHorn ()Z gf
	finalizeSpawn (Lnet/minecraft/world/level/ServerLevelAccessor;Lnet/minecraft/world/DifficultyInstance;Lnet/minecraft/world/entity/MobSpawnType;Lnet/minecraft/world/entity/SpawnGroupData;Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/world/entity/SpawnGroupData; a
	getAmbientSound ()Lnet/minecraft/sounds/SoundEvent; s
	getBrain ()Lnet/minecraft/world/entity/ai/Brain; dK
	getBreedOffspring (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/AgeableMob;)Lnet/minecraft/world/entity/AgeableMob; a
	getBreedOffspring (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/AgeableMob;)Lnet/minecraft/world/entity/animal/goat/Goat; b
	getDeathSound ()Lnet/minecraft/sounds/SoundEvent; g_
	getDimensions (Lnet/minecraft/world/entity/Pose;)Lnet/minecraft/world/entity/EntityDimensions; a
	getEatingSound (Lnet/minecraft/world/item/ItemStack;)Lnet/minecraft/sounds/SoundEvent; d
	getHurtSound (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEvent; d
	getMaxHeadYRot ()I fC
	getMilkingSound ()Lnet/minecraft/sounds/SoundEvent; w
	getRammingXHeadRot ()F gj
	handleEntityEvent (B)V b
	hasLeftHorn ()Z fY
	hasRightHorn ()Z ge
	isScreamingGoat ()Z gi
	makeBrain (Lcom/mojang/serialization/Dynamic;)Lnet/minecraft/world/entity/ai/Brain; a
	mobInteract (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResult; b
	playStepSound (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V b
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	removeHorns ()V gh
	sendDebugPackets ()V V
	setScreamingGoat (Z)V w
	setYHeadRot (F)V n
net/minecraft/world/entity/animal/goat/GoatAi bth
	ADULT_FOLLOW_RANGE i
	ADULT_RAM_KNOCKBACK_FORCE g
	BABY_RAM_KNOCKBACK_FORCE h
	MAX_JUMP_VELOCITY e
	MAX_LONG_JUMP_HEIGHT c
	MAX_LONG_JUMP_WIDTH d
	RAM_MAX_DISTANCE b
	RAM_MIN_DISTANCE f
	RAM_PREPARE_TIME a
	RAM_TARGET_CONDITIONS s
	SPEED_MULTIPLIER_WHEN_FOLLOWING_ADULT l
	SPEED_MULTIPLIER_WHEN_IDLING k
	SPEED_MULTIPLIER_WHEN_MAKING_LOVE j
	SPEED_MULTIPLIER_WHEN_PANICKING n
	SPEED_MULTIPLIER_WHEN_PREPARING_TO_RAM o
	SPEED_MULTIPLIER_WHEN_RAMMING t
	SPEED_MULTIPLIER_WHEN_TEMPTED m
	TIME_BETWEEN_LONG_JUMPS p
	TIME_BETWEEN_RAMS q
	TIME_BETWEEN_RAMS_SCREAMER r
	getTemptations ()Lnet/minecraft/world/item/crafting/Ingredient; a
	initCoreActivity (Lnet/minecraft/world/entity/ai/Brain;)V b
	initIdleActivity (Lnet/minecraft/world/entity/ai/Brain;)V c
	initLongJumpActivity (Lnet/minecraft/world/entity/ai/Brain;)V d
	initMemories (Lnet/minecraft/world/entity/animal/goat/Goat;Lnet/minecraft/util/RandomSource;)V a
	initRamActivity (Lnet/minecraft/world/entity/ai/Brain;)V e
	makeBrain (Lnet/minecraft/world/entity/ai/Brain;)Lnet/minecraft/world/entity/ai/Brain; a
	updateActivity (Lnet/minecraft/world/entity/animal/goat/Goat;)V a
net/minecraft/world/entity/animal/horse/AbstractChestedHorse btj
	DATA_ID_CHEST bU
	INV_CHEST_COUNT bT
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	createBaseChestedHorseAttributes ()Lnet/minecraft/world/entity/ai/attributes/AttributeSupplier$Builder; q
	defineSynchedData ()V a_
	dropEquipment ()V eu
	equipChest (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/item/ItemStack;)V d
	getInventoryColumns ()I gg
	getInventorySize ()I V_
	getPassengersRidingOffset ()D bx
	getSlot (I)Lnet/minecraft/world/entity/SlotAccess; a_
	hasChest ()Z r
	mobInteract (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResult; b
	playChestEquipsSound ()V fY
	randomizeAttributes (Lnet/minecraft/util/RandomSource;)V a
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	setChest (Z)V w
net/minecraft/world/entity/animal/horse/AbstractHorse btk
	BACKWARDS_MOVE_SPEED_FACTOR ca
	BREEDING_CROSS_FACTOR ch
	CHEST_SLOT_OFFSET cf
	DATA_ID_FLAGS cv
	EQUIPMENT_SLOT_OFFSET ce
	FLAG_BRED cy
	FLAG_EATING cz
	FLAG_OPEN_MOUTH cB
	FLAG_SADDLE cx
	FLAG_STANDING cA
	FLAG_TAME cw
	FOOD_ITEMS cu
	INVENTORY_SLOT_OFFSET cg
	INV_BASE_COUNT ck
	INV_SLOT_ARMOR cj
	INV_SLOT_SADDLE ci
	MAX_HEALTH bZ
	MAX_JUMP_STRENGTH bX
	MAX_MOVEMENT_SPEED bU
	MIN_HEALTH bY
	MIN_JUMP_STRENGTH bW
	MIN_MOVEMENT_SPEED bT
	MOMMY_TARGETING cd
	PARENT_HORSE_SELECTOR cc
	SIDEWAYS_MOVE_SPEED_FACTOR cb
	allowStandSliding cr
	canGallop cs
	eatAnim cF
	eatAnimO cG
	eatingCounter cC
	gallopSoundCounter ct
	inventory co
	isJumping cn
	mouthAnim cJ
	mouthAnimO cK
	mouthCounter cD
	owner cL
	playerJumpPendingScale cq
	sprintCounter cm
	standAnim cH
	standAnimO cI
	standCounter cE
	tailCounter cl
	temper cp
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	addBehaviourGoals ()V go
	aiStep ()V b_
	calculateFallDamage (FF)I d
	canEatGrass ()Z gB
	canJump ()Z a
	canMate (Lnet/minecraft/world/entity/animal/Animal;)Z a
	canParent ()Z gG
	canPerformRearing ()Z ge
	canWearArmor ()Z gH
	causeFallDamage (FFLnet/minecraft/world/damagesource/DamageSource;)Z a
	containerChanged (Lnet/minecraft/world/Container;)V a
	createBaseHorseAttributes ()Lnet/minecraft/world/entity/ai/attributes/AttributeSupplier$Builder; gy
	createEquipmentSlotAccess (ILjava/util/function/Predicate;)Lnet/minecraft/world/entity/SlotAccess; a
	createInventory ()V gu
	createOffspringAttribute (DDDDLnet/minecraft/util/RandomSource;)D a
	defineSynchedData ()V a_
	doPlayerRide (Lnet/minecraft/world/entity/player/Player;)V f
	dropEquipment ()V eu
	eating ()V q
	equipArmor (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/item/ItemStack;)V b
	equipSaddle (Lnet/minecraft/sounds/SoundSource;)V a
	executeRidersJump (FLnet/minecraft/world/phys/Vec3;)V b
	fedFood (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/item/ItemStack;)Lnet/minecraft/world/InteractionResult; c
	finalizeSpawn (Lnet/minecraft/world/level/ServerLevelAccessor;Lnet/minecraft/world/DifficultyInstance;Lnet/minecraft/world/entity/MobSpawnType;Lnet/minecraft/world/entity/SpawnGroupData;Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/world/entity/SpawnGroupData; a
	followMommy ()V gA
	generateJumpStrength (Ljava/util/function/DoubleSupplier;)D a
	generateMaxHealth (Ljava/util/function/IntUnaryOperator;)F a
	generateSpeed (Ljava/util/function/DoubleSupplier;)D b
	getAmbientSoundInterval ()I M
	getAmbientStandInterval ()I gJ
	getAmbientStandSound ()Lnet/minecraft/sounds/SoundEvent; gC
	getAngrySound ()Lnet/minecraft/sounds/SoundEvent; gx
	getBreedOffspring (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/AgeableMob;)Lnet/minecraft/world/entity/AgeableMob; a
	getControllingPassenger ()Lnet/minecraft/world/entity/LivingEntity; cL
	getCustomJump ()D gw
	getDismountLocationForPassenger (Lnet/minecraft/world/entity/LivingEntity;)Lnet/minecraft/world/phys/Vec3; b
	getDismountLocationInDirection (Lnet/minecraft/world/phys/Vec3;Lnet/minecraft/world/entity/LivingEntity;)Lnet/minecraft/world/phys/Vec3; a
	getEatAnim (F)F D
	getEatingSound ()Lnet/minecraft/sounds/SoundEvent; gf
	getFlag (I)Z t
	getInventorySize ()I V_
	getMaxSpawnClusterSize ()I fE
	getMaxTemper ()I gz
	getMouthAnim (F)F F
	getOwnerUUID ()Ljava/util/UUID; U_
	getRiddenInput (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/phys/Vec3;)Lnet/minecraft/world/phys/Vec3; b
	getRiddenRotation (Lnet/minecraft/world/entity/LivingEntity;)Lnet/minecraft/world/phys/Vec2; l
	getRiddenSpeed (Lnet/minecraft/world/entity/player/Player;)F e
	getSlot (I)Lnet/minecraft/world/entity/SlotAccess; a_
	getSoundVolume ()F eR
	getStandAnim (F)F E
	getStandingEyeHeight (Lnet/minecraft/world/entity/Pose;Lnet/minecraft/world/entity/EntityDimensions;)F b
	getTemper ()I gt
	handleEating (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/item/ItemStack;)Z a
	handleEntityEvent (B)V b
	handleStartJump (I)V c
	handleStopJump ()V b
	hasInventoryChanged (Lnet/minecraft/world/Container;)Z b
	hurt (Lnet/minecraft/world/damagesource/DamageSource;F)Z a
	isArmor (Lnet/minecraft/world/item/ItemStack;)Z l
	isBred ()Z gs
	isEating ()Z gq
	isFood (Lnet/minecraft/world/item/ItemStack;)Z m
	isImmobile ()Z eT
	isJumping ()Z gp
	isPushable ()Z bp
	isSaddleable ()Z g
	isSaddled ()Z i
	isStanding ()Z gr
	isTamed ()Z gn
	isWearingArmor ()Z gI
	isWoodSoundType (Lnet/minecraft/world/level/block/SoundType;)Z b
	level ()Lnet/minecraft/world/level/EntityGetter; e
	makeMad ()V gE
	mobInteract (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResult; b
	modifyTemper (I)I v
	moveTail ()V r
	onClimbable ()Z i_
	onLeashDistance (F)V C
	onPlayerJump (I)V b
	openCustomInventoryScreen (Lnet/minecraft/world/entity/player/Player;)V b
	openMouth ()V fY
	playGallopSound (Lnet/minecraft/world/level/block/SoundType;)V a
	playJumpSound ()V gF
	playStepSound (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V b
	positionRider (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/entity/Entity$MoveFunction;)V a
	randomizeAttributes (Lnet/minecraft/util/RandomSource;)V a
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	registerGoals ()V x
	setBred (Z)V z
	setEating (Z)V A
	setFlag (IZ)V d
	setIsJumping (Z)V y
	setOffspringAttribute (Lnet/minecraft/world/entity/AgeableMob;Lnet/minecraft/world/entity/animal/horse/AbstractHorse;Lnet/minecraft/world/entity/ai/attributes/Attribute;DD)V a
	setOffspringAttributes (Lnet/minecraft/world/entity/AgeableMob;Lnet/minecraft/world/entity/animal/horse/AbstractHorse;)V a
	setOwnerUUID (Ljava/util/UUID;)V b
	setStanding (Z)V B
	setTamed (Z)V x
	setTemper (I)V u
	spawnTamingParticles (Z)V C
	standIfPossible ()V gD
	tameWithName (Lnet/minecraft/world/entity/player/Player;)Z h
	tick ()V l
	tickRidden (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/phys/Vec3;)V a
	updateContainerEquipment ()V gv
net/minecraft/world/entity/animal/horse/Donkey btl
	canMate (Lnet/minecraft/world/entity/animal/Animal;)Z a
	getAmbientSound ()Lnet/minecraft/sounds/SoundEvent; s
	getAngrySound ()Lnet/minecraft/sounds/SoundEvent; gx
	getBreedOffspring (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/AgeableMob;)Lnet/minecraft/world/entity/AgeableMob; a
	getDeathSound ()Lnet/minecraft/sounds/SoundEvent; g_
	getEatingSound ()Lnet/minecraft/sounds/SoundEvent; gf
	getHurtSound (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEvent; d
net/minecraft/world/entity/animal/horse/Horse btm
	ARMOR_MODIFIER_UUID bT
	DATA_ID_TYPE_VARIANT bU
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	canMate (Lnet/minecraft/world/entity/animal/Animal;)Z a
	canWearArmor ()Z gH
	containerChanged (Lnet/minecraft/world/Container;)V a
	defineSynchedData ()V a_
	finalizeSpawn (Lnet/minecraft/world/level/ServerLevelAccessor;Lnet/minecraft/world/DifficultyInstance;Lnet/minecraft/world/entity/MobSpawnType;Lnet/minecraft/world/entity/SpawnGroupData;Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/world/entity/SpawnGroupData; a
	getAmbientSound ()Lnet/minecraft/sounds/SoundEvent; s
	getAngrySound ()Lnet/minecraft/sounds/SoundEvent; gx
	getArmor ()Lnet/minecraft/world/item/ItemStack; q
	getBreedOffspring (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/AgeableMob;)Lnet/minecraft/world/entity/AgeableMob; a
	getDeathSound ()Lnet/minecraft/sounds/SoundEvent; g_
	getEatingSound ()Lnet/minecraft/sounds/SoundEvent; gf
	getHurtSound (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEvent; d
	getMarkings ()Lnet/minecraft/world/entity/animal/horse/Markings; fY
	getTypeVariant ()I gg
	getVariant ()Ljava/lang/Object; c
	getVariant ()Lnet/minecraft/world/entity/animal/horse/Variant; r
	isArmor (Lnet/minecraft/world/item/ItemStack;)Z l
	mobInteract (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResult; b
	playGallopSound (Lnet/minecraft/world/level/block/SoundType;)V a
	randomizeAttributes (Lnet/minecraft/util/RandomSource;)V a
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	setArmor (Lnet/minecraft/world/item/ItemStack;)V n
	setArmorEquipment (Lnet/minecraft/world/item/ItemStack;)V o
	setTypeVariant (I)V w
	setVariant (Ljava/lang/Object;)V a
	setVariant (Lnet/minecraft/world/entity/animal/horse/Variant;)V a
	setVariantAndMarkings (Lnet/minecraft/world/entity/animal/horse/Variant;Lnet/minecraft/world/entity/animal/horse/Markings;)V a
	updateContainerEquipment ()V gv
net/minecraft/world/entity/animal/horse/Horse$HorseGroupData btm$a
	variant a
net/minecraft/world/entity/animal/horse/Llama btn
	DATA_STRENGTH_ID bX
	DATA_SWAG_ID bY
	DATA_VARIANT_ID bZ
	FOOD_ITEMS bW
	MAX_STRENGTH bU
	caravanHead cb
	caravanTail cc
	didSpit ca
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	canEatGrass ()Z gB
	canMate (Lnet/minecraft/world/entity/animal/Animal;)Z a
	canPerformRearing ()Z ge
	canWearArmor ()Z gH
	causeFallDamage (FFLnet/minecraft/world/damagesource/DamageSource;)Z a
	containerChanged (Lnet/minecraft/world/Container;)V a
	createAttributes ()Lnet/minecraft/world/entity/ai/attributes/AttributeSupplier$Builder; gj
	defineSynchedData ()V a_
	finalizeSpawn (Lnet/minecraft/world/level/ServerLevelAccessor;Lnet/minecraft/world/DifficultyInstance;Lnet/minecraft/world/entity/MobSpawnType;Lnet/minecraft/world/entity/SpawnGroupData;Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/world/entity/SpawnGroupData; a
	followLeashSpeed ()D fX
	followMommy ()V gA
	getAmbientSound ()Lnet/minecraft/sounds/SoundEvent; s
	getAngrySound ()Lnet/minecraft/sounds/SoundEvent; gx
	getBreedOffspring (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/AgeableMob;)Lnet/minecraft/world/entity/AgeableMob; a
	getBreedOffspring (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/AgeableMob;)Lnet/minecraft/world/entity/animal/horse/Llama; b
	getCaravanHead ()Lnet/minecraft/world/entity/animal/horse/Llama; gN
	getControllingPassenger ()Lnet/minecraft/world/entity/LivingEntity; cL
	getDeathSound ()Lnet/minecraft/sounds/SoundEvent; g_
	getDyeColor (Lnet/minecraft/world/item/ItemStack;)Lnet/minecraft/world/item/DyeColor; n
	getEatingSound ()Lnet/minecraft/sounds/SoundEvent; gf
	getHurtSound (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEvent; d
	getInventoryColumns ()I gg
	getInventorySize ()I V_
	getLeashOffset ()Lnet/minecraft/world/phys/Vec3; cG
	getMaxTemper ()I gz
	getPassengersRidingOffset ()D bx
	getStrength ()I gi
	getSwag ()Lnet/minecraft/world/item/DyeColor; gl
	getVariant ()Ljava/lang/Object; c
	getVariant ()Lnet/minecraft/world/entity/animal/horse/Llama$Variant; gk
	handleEating (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/item/ItemStack;)Z a
	hasCaravanTail ()Z gL
	inCaravan ()Z gM
	isArmor (Lnet/minecraft/world/item/ItemStack;)Z l
	isFood (Lnet/minecraft/world/item/ItemStack;)Z m
	isImmobile ()Z eT
	isSaddleable ()Z g
	isTraderLlama ()Z gh
	isWearingArmor ()Z gI
	joinCaravan (Lnet/minecraft/world/entity/animal/horse/Llama;)V a
	leaveCaravan ()V gK
	makeNewLlama ()Lnet/minecraft/world/entity/animal/horse/Llama; gm
	performRangedAttack (Lnet/minecraft/world/entity/LivingEntity;F)V a
	playChestEquipsSound ()V fY
	playStepSound (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V b
	positionRider (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/entity/Entity$MoveFunction;)V a
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	registerGoals ()V x
	setDidSpit (Z)V D
	setRandomStrength (Lnet/minecraft/util/RandomSource;)V b
	setStrength (I)V w
	setSwag (Lnet/minecraft/world/item/DyeColor;)V a
	setVariant (Ljava/lang/Object;)V a
	setVariant (Lnet/minecraft/world/entity/animal/horse/Llama$Variant;)V a
	spit (Lnet/minecraft/world/entity/LivingEntity;)V m
	updateContainerEquipment ()V gv
net/minecraft/world/entity/animal/horse/Llama$LlamaAttackWolfGoal btn$a
	getFollowDistance ()D l
net/minecraft/world/entity/animal/horse/Llama$LlamaGroupData btn$b
	variant a
net/minecraft/world/entity/animal/horse/Llama$LlamaHurtByTargetGoal btn$c
	canContinueToUse ()Z b
net/minecraft/world/entity/animal/horse/Llama$Variant btn$d
	$VALUES i
	BROWN c
	BY_ID f
	CODEC e
	CREAMY a
	GRAY d
	WHITE b
	id g
	name h
	$values ()[Lnet/minecraft/world/entity/animal/horse/Llama$Variant; b
	byId (I)Lnet/minecraft/world/entity/animal/horse/Llama$Variant; a
	getId ()I a
	getSerializedName ()Ljava/lang/String; c
net/minecraft/world/entity/animal/horse/Markings bto
	$VALUES h
	BLACK_DOTS e
	BY_ID f
	NONE a
	WHITE b
	WHITE_DOTS d
	WHITE_FIELD c
	id g
	$values ()[Lnet/minecraft/world/entity/animal/horse/Markings; b
	byId (I)Lnet/minecraft/world/entity/animal/horse/Markings; a
	getId ()I a
net/minecraft/world/entity/animal/horse/Mule btp
	getAmbientSound ()Lnet/minecraft/sounds/SoundEvent; s
	getAngrySound ()Lnet/minecraft/sounds/SoundEvent; gx
	getBreedOffspring (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/AgeableMob;)Lnet/minecraft/world/entity/AgeableMob; a
	getDeathSound ()Lnet/minecraft/sounds/SoundEvent; g_
	getEatingSound ()Lnet/minecraft/sounds/SoundEvent; gf
	getHurtSound (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEvent; d
	playChestEquipsSound ()V fY
net/minecraft/world/entity/animal/horse/SkeletonHorse btq
	TRAP_MAX_LIFE bU
	isTrap bW
	skeletonTrapGoal bT
	trapTime bX
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	addBehaviourGoals ()V go
	aiStep ()V b_
	createAttributes ()Lnet/minecraft/world/entity/ai/attributes/AttributeSupplier$Builder; q
	getAmbientSound ()Lnet/minecraft/sounds/SoundEvent; s
	getBreedOffspring (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/AgeableMob;)Lnet/minecraft/world/entity/AgeableMob; a
	getDeathSound ()Lnet/minecraft/sounds/SoundEvent; g_
	getHurtSound (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEvent; d
	getMobType ()Lnet/minecraft/world/entity/MobType; eN
	getPassengersRidingOffset ()D bx
	getSwimSound ()Lnet/minecraft/sounds/SoundEvent; aJ
	getWaterSlowDown ()F eY
	isTrap ()Z r
	mobInteract (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResult; b
	playJumpSound ()V gF
	playSwimSound (F)V e
	randomizeAttributes (Lnet/minecraft/util/RandomSource;)V a
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	setTrap (Z)V w
net/minecraft/world/entity/animal/horse/SkeletonTrapGoal btr
	horse a
	canUse ()Z a
	createHorse (Lnet/minecraft/world/DifficultyInstance;)Lnet/minecraft/world/entity/animal/horse/AbstractHorse; a
	createSkeleton (Lnet/minecraft/world/DifficultyInstance;Lnet/minecraft/world/entity/animal/horse/AbstractHorse;)Lnet/minecraft/world/entity/monster/Skeleton; a
	disenchant (Lnet/minecraft/world/item/ItemStack;)Lnet/minecraft/world/item/ItemStack; a
	tick ()V e
net/minecraft/world/entity/animal/horse/TraderLlama bts
	despawnDelay bU
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	aiStep ()V b_
	canDespawn ()Z gP
	doPlayerRide (Lnet/minecraft/world/entity/player/Player;)V f
	finalizeSpawn (Lnet/minecraft/world/level/ServerLevelAccessor;Lnet/minecraft/world/DifficultyInstance;Lnet/minecraft/world/entity/MobSpawnType;Lnet/minecraft/world/entity/SpawnGroupData;Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/world/entity/SpawnGroupData; a
	isLeashedToSomethingOtherThanTheWanderingTrader ()Z gR
	isLeashedToWanderingTrader ()Z gQ
	isTraderLlama ()Z gh
	makeNewLlama ()Lnet/minecraft/world/entity/animal/horse/Llama; gm
	maybeDespawn ()V gO
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	registerGoals ()V x
	setDespawnDelay (I)V w
net/minecraft/world/entity/animal/horse/TraderLlama$TraderLlamaDefendWanderingTraderGoal bts$a
	llama a
	ownerLastHurtBy b
	timestamp c
	canUse ()Z a
	start ()V c
net/minecraft/world/entity/animal/horse/Variant btt
	$VALUES l
	BLACK e
	BROWN d
	BY_ID i
	CHESTNUT c
	CODEC h
	CREAMY b
	DARK_BROWN g
	GRAY f
	WHITE a
	id j
	name k
	$values ()[Lnet/minecraft/world/entity/animal/horse/Variant; b
	byId (I)Lnet/minecraft/world/entity/animal/horse/Variant; a
	getId ()I a
	getSerializedName ()Ljava/lang/String; c
net/minecraft/world/entity/animal/horse/ZombieHorse btu
	addBehaviourGoals ()V go
	createAttributes ()Lnet/minecraft/world/entity/ai/attributes/AttributeSupplier$Builder; q
	getAmbientSound ()Lnet/minecraft/sounds/SoundEvent; s
	getBreedOffspring (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/AgeableMob;)Lnet/minecraft/world/entity/AgeableMob; a
	getDeathSound ()Lnet/minecraft/sounds/SoundEvent; g_
	getHurtSound (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEvent; d
	getMobType ()Lnet/minecraft/world/entity/MobType; eN
	mobInteract (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResult; b
	randomizeAttributes (Lnet/minecraft/util/RandomSource;)V a
net/minecraft/world/entity/animal/sniffer/Sniffer btx
	DATA_DROP_SEED_AT_TICK ch
	DATA_STATE cg
	DIGGING_BB_HEIGHT_OFFSET ce
	DIGGING_DIMENSIONS cf
	DIGGING_DROP_SEED_OFFSET_TICKS cc
	DIGGING_PARTICLES_AMOUNT cb
	DIGGING_PARTICLES_DELAY_TICKS bZ
	DIGGING_PARTICLES_DURATION_TICKS ca
	SNIFFER_BABY_AGE_TICKS cd
	diggingAnimationState bX
	feelingHappyAnimationState bT
	risingAnimationState bY
	scentingAnimationState bU
	sniffingAnimationState bW
	brainProvider ()Lnet/minecraft/world/entity/ai/Brain$Provider; dL
	calculateDigPosition ()Ljava/util/Optional; gg
	canDig ()Z gh
	canDig (Lnet/minecraft/core/BlockPos;)Z i
	canMate (Lnet/minecraft/world/entity/animal/Animal;)Z a
	canPlayDiggingSound ()Z gf
	canSniff ()Z ge
	createAttributes ()Lnet/minecraft/world/entity/ai/attributes/AttributeSupplier$Builder; q
	customServerAiStep ()V W
	die (Lnet/minecraft/world/damagesource/DamageSource;)V a
	dropSeed ()V go
	emitDiggingParticles (Lnet/minecraft/world/entity/AnimationState;)Lnet/minecraft/world/entity/animal/sniffer/Sniffer; a
	getAmbientSound ()Lnet/minecraft/sounds/SoundEvent; s
	getBoundingBoxForCulling ()Lnet/minecraft/world/phys/AABB; j_
	getBrain ()Lnet/minecraft/world/entity/ai/Brain; dK
	getBreedOffspring (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/AgeableMob;)Lnet/minecraft/world/entity/AgeableMob; a
	getDeathSound ()Lnet/minecraft/sounds/SoundEvent; g_
	getDimensions (Lnet/minecraft/world/entity/Pose;)Lnet/minecraft/world/entity/EntityDimensions; a
	getEatingSound (Lnet/minecraft/world/item/ItemStack;)Lnet/minecraft/sounds/SoundEvent; d
	getExploredPositions ()Ljava/util/stream/Stream; gp
	getHeadBlock ()Lnet/minecraft/core/BlockPos; gi
	getHeadPosition ()Lnet/minecraft/world/phys/Vec3; gj
	getHurtSound (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEvent; d
	getMaxHeadYRot ()I fC
	getNameTagOffsetY ()F df
	getPassengersRidingOffset ()D bx
	getStandingEyeHeight (Lnet/minecraft/world/entity/Pose;Lnet/minecraft/world/entity/EntityDimensions;)F b
	getState ()Lnet/minecraft/world/entity/animal/sniffer/Sniffer$State; gk
	isFood (Lnet/minecraft/world/item/ItemStack;)Z m
	isPanicking ()Z r
	isSearching ()Z w
	isTempted ()Z fY
	jumpFromGround ()V eW
	makeBrain (Lcom/mojang/serialization/Dynamic;)Lnet/minecraft/world/entity/ai/Brain; a
	mobInteract (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResult; b
	onDiggingComplete (Z)Lnet/minecraft/world/entity/animal/sniffer/Sniffer; w
	onDiggingStart ()Lnet/minecraft/world/entity/animal/sniffer/Sniffer; gn
	onPathfindingDone ()V C
	onPathfindingStart ()V A
	onScentingStart ()Lnet/minecraft/world/entity/animal/sniffer/Sniffer; gm
	onSyncedDataUpdated (Lnet/minecraft/network/syncher/EntityDataAccessor;)V a
	playSearchingSound ()V gq
	playStepSound (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V b
	resetAnimations ()V gl
	sendDebugPackets ()V V
	setBaby (Z)V a
	setState (Lnet/minecraft/world/entity/animal/sniffer/Sniffer$State;)Lnet/minecraft/world/entity/animal/sniffer/Sniffer; b
	spawnChildFromBreeding (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/animal/Animal;)V a
	storeExploredPosition (Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/entity/animal/sniffer/Sniffer; j
	tick ()V l
	transitionTo (Lnet/minecraft/world/entity/animal/sniffer/Sniffer$State;)Lnet/minecraft/world/entity/animal/sniffer/Sniffer; a
net/minecraft/world/entity/animal/sniffer/Sniffer$State btx$a
	$VALUES h
	DIGGING f
	FEELING_HAPPY b
	IDLING a
	RISING g
	SCENTING c
	SEARCHING e
	SNIFFING d
	$values ()[Lnet/minecraft/world/entity/animal/sniffer/Sniffer$State; a
net/minecraft/world/entity/animal/sniffer/SnifferAi bty
	LOGGER c
	MAX_LOOK_DISTANCE d
	MEMORY_TYPES b
	SENSOR_TYPES a
	SNIFFING_COOLDOWN_TICKS e
	SPEED_MULTIPLIER_WHEN_IDLING f
	SPEED_MULTIPLIER_WHEN_PANICKING g
	SPEED_MULTIPLIER_WHEN_SNIFFING h
	SPEED_MULTIPLIER_WHEN_TEMPTED i
	getTemptations ()Lnet/minecraft/world/item/crafting/Ingredient; a
	initCoreActivity (Lnet/minecraft/world/entity/ai/Brain;)V b
	initDigActivity (Lnet/minecraft/world/entity/ai/Brain;)V d
	initIdleActivity (Lnet/minecraft/world/entity/ai/Brain;)V e
	initSniffingActivity (Lnet/minecraft/world/entity/ai/Brain;)V c
	makeBrain (Lnet/minecraft/world/entity/ai/Brain;)Lnet/minecraft/world/entity/ai/Brain; a
	resetSniffing (Lnet/minecraft/world/entity/animal/sniffer/Sniffer;)Lnet/minecraft/world/entity/animal/sniffer/Sniffer; b
	updateActivity (Lnet/minecraft/world/entity/animal/sniffer/Sniffer;)V a
net/minecraft/world/entity/animal/sniffer/SnifferAi$Digging bty$a
	canStillUse (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)Z a
	canStillUse (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/animal/sniffer/Sniffer;J)Z a
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)Z a
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/animal/sniffer/Sniffer;)Z a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V d
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/animal/sniffer/Sniffer;J)V b
	stop (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V b
	stop (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/animal/sniffer/Sniffer;J)V c
net/minecraft/world/entity/animal/sniffer/SnifferAi$FeelingHappy bty$b
	canStillUse (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)Z a
	canStillUse (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/animal/sniffer/Sniffer;J)Z a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V d
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/animal/sniffer/Sniffer;J)V b
	stop (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V b
	stop (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/animal/sniffer/Sniffer;J)V c
net/minecraft/world/entity/animal/sniffer/SnifferAi$FinishedDigging bty$c
	canStillUse (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)Z a
	canStillUse (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/animal/sniffer/Sniffer;J)Z a
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)Z a
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/animal/sniffer/Sniffer;)Z a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V d
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/animal/sniffer/Sniffer;J)V b
	stop (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V b
	stop (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/animal/sniffer/Sniffer;J)V c
net/minecraft/world/entity/animal/sniffer/SnifferAi$Scenting bty$d
	canStillUse (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)Z a
	canStillUse (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/animal/sniffer/Sniffer;J)Z a
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)Z a
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/animal/sniffer/Sniffer;)Z a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V d
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/animal/sniffer/Sniffer;J)V b
	stop (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V b
	stop (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/animal/sniffer/Sniffer;J)V c
net/minecraft/world/entity/animal/sniffer/SnifferAi$Searching bty$e
	canStillUse (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)Z a
	canStillUse (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/animal/sniffer/Sniffer;J)Z a
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)Z a
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/animal/sniffer/Sniffer;)Z a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V d
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/animal/sniffer/Sniffer;J)V b
	stop (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V b
	stop (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/animal/sniffer/Sniffer;J)V c
net/minecraft/world/entity/animal/sniffer/SnifferAi$Sniffing bty$f
	canStillUse (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)Z a
	canStillUse (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/animal/sniffer/Sniffer;J)Z a
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)Z a
	checkExtraStartConditions (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/animal/sniffer/Sniffer;)Z a
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V d
	start (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/animal/sniffer/Sniffer;J)V b
	stop (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)V b
	stop (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/animal/sniffer/Sniffer;J)V c
net/minecraft/world/entity/boss/EnderDragonPart btz
	name c
	parentMob b
	size d
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	defineSynchedData ()V a_
	getAddEntityPacket ()Lnet/minecraft/network/protocol/Packet; S
	getDimensions (Lnet/minecraft/world/entity/Pose;)Lnet/minecraft/world/entity/EntityDimensions; a
	getPickResult ()Lnet/minecraft/world/item/ItemStack; dv
	hurt (Lnet/minecraft/world/damagesource/DamageSource;F)Z a
	is (Lnet/minecraft/world/entity/Entity;)Z q
	isPickable ()Z bo
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	shouldBeSaved ()Z dG
net/minecraft/world/entity/boss/enderdragon/EndCrystal bua
	DATA_BEAM_TARGET c
	DATA_SHOW_BOTTOM d
	time b
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	defineSynchedData ()V a_
	getBeamTarget ()Lnet/minecraft/core/BlockPos; j
	getMovementEmission ()Lnet/minecraft/world/entity/Entity$MovementEmission; aS
	getPickResult ()Lnet/minecraft/world/item/ItemStack; dv
	hurt (Lnet/minecraft/world/damagesource/DamageSource;F)Z a
	isPickable ()Z bo
	kill ()V ah
	onDestroyedBy (Lnet/minecraft/world/damagesource/DamageSource;)V a
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	setBeamTarget (Lnet/minecraft/core/BlockPos;)V a
	setShowBottom (Z)V a
	shouldRenderAtSqrDistance (D)Z a
	showsBottom ()Z k
	tick ()V l
net/minecraft/world/entity/boss/enderdragon/EnderDragon bub
	CRYSTAL_DESTROY_TARGETING bZ
	DATA_PHASE b
	DRAGON_DEATH_TIME_KEY cd
	DRAGON_PHASE_KEY ce
	GROWL_INTERVAL_MAX cb
	GROWL_INTERVAL_MIN ca
	LOGGER bY
	SITTING_ALLOWED_DAMAGE_PERCENTAGE cc
	body ch
	dragonDeathTime bV
	dragonFight cn
	fightOrigin co
	flapTime bT
	growlTime cq
	head e
	inWall bU
	nearestCrystal bX
	neck cg
	nodeAdjacency ct
	nodes cs
	oFlapTime bS
	openSet cu
	phaseManager cp
	posPointer d
	positions c
	sittingDamageReceived cr
	subEntities cf
	tail1 ci
	tail2 cj
	tail3 ck
	wing1 cl
	wing2 cm
	yRotA bW
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	addEffect (Lnet/minecraft/world/effect/MobEffectInstance;Lnet/minecraft/world/entity/Entity;)Z b
	aiStep ()V b_
	canAttack (Lnet/minecraft/world/entity/LivingEntity;)Z c
	canChangeDimensions ()Z cq
	canRide (Lnet/minecraft/world/entity/Entity;)Z l
	checkCrystals ()V fZ
	checkDespawn ()V du
	checkWalls (Lnet/minecraft/world/phys/AABB;)Z b
	createAttributes ()Lnet/minecraft/world/entity/ai/attributes/AttributeSupplier$Builder; r
	defineSynchedData ()V a_
	findClosestNode ()I w
	findClosestNode (DDD)I r
	findPath (IILnet/minecraft/world/level/pathfinder/Node;)Lnet/minecraft/world/level/pathfinder/Path; a
	getAmbientSound ()Lnet/minecraft/sounds/SoundEvent; s
	getDragonFight ()Lnet/minecraft/world/level/dimension/end/EndDragonFight; fX
	getFightOrigin ()Lnet/minecraft/core/BlockPos; q
	getHeadLookVector (F)Lnet/minecraft/world/phys/Vec3; C
	getHeadPartYOffset (I[D[D)F a
	getHeadYOffset ()F fY
	getHurtSound (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEvent; d
	getLatencyPos (IF)[D a
	getPassengersRidingOffset ()D bx
	getPhaseManager ()Lnet/minecraft/world/entity/boss/enderdragon/phases/EnderDragonPhaseManager; fW
	getSoundSource ()Lnet/minecraft/sounds/SoundSource; cY
	getSoundVolume ()F eR
	getSubEntities ()[Lnet/minecraft/world/entity/boss/EnderDragonPart; fV
	hurt (Ljava/util/List;)V c
	hurt (Lnet/minecraft/world/damagesource/DamageSource;F)Z a
	hurt (Lnet/minecraft/world/entity/boss/EnderDragonPart;Lnet/minecraft/world/damagesource/DamageSource;F)Z a
	isFlapping ()Z aP
	isPickable ()Z bo
	kill ()V ah
	knockBack (Ljava/util/List;)V b
	onCrystalDestroyed (Lnet/minecraft/world/entity/boss/enderdragon/EndCrystal;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/damagesource/DamageSource;)V a
	onFlap ()V aO
	onSyncedDataUpdated (Lnet/minecraft/network/syncher/EntityDataAccessor;)V a
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	reallyHurt (Lnet/minecraft/world/damagesource/DamageSource;F)Z g
	reconstructPath (Lnet/minecraft/world/level/pathfinder/Node;Lnet/minecraft/world/level/pathfinder/Node;)Lnet/minecraft/world/level/pathfinder/Path; a
	recreateFromPacket (Lnet/minecraft/network/protocol/game/ClientboundAddEntityPacket;)V a
	rotWrap (D)F i
	setDragonFight (Lnet/minecraft/world/level/dimension/end/EndDragonFight;)V a
	setFightOrigin (Lnet/minecraft/core/BlockPos;)V h
	tickDeath ()V dX
	tickPart (Lnet/minecraft/world/entity/boss/EnderDragonPart;DDD)V a
net/minecraft/world/entity/boss/enderdragon/phases/AbstractDragonPhaseInstance bud
	dragon a
	begin ()V d
	doClientTick ()V b
	doServerTick ()V c
	end ()V e
	getFlySpeed ()F f
	getFlyTargetLocation ()Lnet/minecraft/world/phys/Vec3; g
	getTurnSpeed ()F h
	isSitting ()Z a
	onCrystalDestroyed (Lnet/minecraft/world/entity/boss/enderdragon/EndCrystal;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/damagesource/DamageSource;Lnet/minecraft/world/entity/player/Player;)V a
	onHurt (Lnet/minecraft/world/damagesource/DamageSource;F)F a
net/minecraft/world/entity/boss/enderdragon/phases/AbstractDragonSittingPhase bue
	isSitting ()Z a
	onHurt (Lnet/minecraft/world/damagesource/DamageSource;F)F a
net/minecraft/world/entity/boss/enderdragon/phases/DragonChargePlayerPhase buf
	CHARGE_RECOVERY_TIME c
	LOGGER b
	targetLocation d
	timeSinceCharge e
	begin ()V d
	doServerTick ()V c
	getFlySpeed ()F f
	getFlyTargetLocation ()Lnet/minecraft/world/phys/Vec3; g
	getPhase ()Lnet/minecraft/world/entity/boss/enderdragon/phases/EnderDragonPhase; i
	setTarget (Lnet/minecraft/world/phys/Vec3;)V a
net/minecraft/world/entity/boss/enderdragon/phases/DragonDeathPhase bug
	targetLocation b
	time c
	begin ()V d
	doClientTick ()V b
	doServerTick ()V c
	getFlySpeed ()F f
	getFlyTargetLocation ()Lnet/minecraft/world/phys/Vec3; g
	getPhase ()Lnet/minecraft/world/entity/boss/enderdragon/phases/EnderDragonPhase; i
net/minecraft/world/entity/boss/enderdragon/phases/DragonHoldingPatternPhase buh
	NEW_TARGET_TARGETING b
	clockwise e
	currentPath c
	targetLocation d
	begin ()V d
	doServerTick ()V c
	findNewTarget ()V j
	getFlyTargetLocation ()Lnet/minecraft/world/phys/Vec3; g
	getPhase ()Lnet/minecraft/world/entity/boss/enderdragon/phases/EnderDragonPhase; i
	navigateToNextPathNode ()V k
	onCrystalDestroyed (Lnet/minecraft/world/entity/boss/enderdragon/EndCrystal;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/damagesource/DamageSource;Lnet/minecraft/world/entity/player/Player;)V a
	strafePlayer (Lnet/minecraft/world/entity/player/Player;)V a
net/minecraft/world/entity/boss/enderdragon/phases/DragonHoverPhase bui
	targetLocation b
	begin ()V d
	doServerTick ()V c
	getFlySpeed ()F f
	getFlyTargetLocation ()Lnet/minecraft/world/phys/Vec3; g
	getPhase ()Lnet/minecraft/world/entity/boss/enderdragon/phases/EnderDragonPhase; i
	isSitting ()Z a
net/minecraft/world/entity/boss/enderdragon/phases/DragonLandingApproachPhase buj
	NEAR_EGG_TARGETING b
	currentPath c
	targetLocation d
	begin ()V d
	doServerTick ()V c
	findNewTarget ()V j
	getFlyTargetLocation ()Lnet/minecraft/world/phys/Vec3; g
	getPhase ()Lnet/minecraft/world/entity/boss/enderdragon/phases/EnderDragonPhase; i
	navigateToNextPathNode ()V k
net/minecraft/world/entity/boss/enderdragon/phases/DragonLandingPhase buk
	targetLocation b
	begin ()V d
	doClientTick ()V b
	doServerTick ()V c
	getFlySpeed ()F f
	getFlyTargetLocation ()Lnet/minecraft/world/phys/Vec3; g
	getPhase ()Lnet/minecraft/world/entity/boss/enderdragon/phases/EnderDragonPhase; i
	getTurnSpeed ()F h
net/minecraft/world/entity/boss/enderdragon/phases/DragonPhaseInstance bul
	begin ()V d
	doClientTick ()V b
	doServerTick ()V c
	end ()V e
	getFlySpeed ()F f
	getFlyTargetLocation ()Lnet/minecraft/world/phys/Vec3; g
	getPhase ()Lnet/minecraft/world/entity/boss/enderdragon/phases/EnderDragonPhase; i
	getTurnSpeed ()F h
	isSitting ()Z a
	onCrystalDestroyed (Lnet/minecraft/world/entity/boss/enderdragon/EndCrystal;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/damagesource/DamageSource;Lnet/minecraft/world/entity/player/Player;)V a
	onHurt (Lnet/minecraft/world/damagesource/DamageSource;F)F a
net/minecraft/world/entity/boss/enderdragon/phases/DragonSittingAttackingPhase bum
	ROAR_DURATION b
	attackingTicks c
	begin ()V d
	doClientTick ()V b
	doServerTick ()V c
	getPhase ()Lnet/minecraft/world/entity/boss/enderdragon/phases/EnderDragonPhase; i
net/minecraft/world/entity/boss/enderdragon/phases/DragonSittingFlamingPhase bun
	FLAME_DURATION b
	SITTING_FLAME_ATTACKS_COUNT c
	WARMUP_TIME d
	flame g
	flameCount f
	flameTicks e
	begin ()V d
	doClientTick ()V b
	doServerTick ()V c
	end ()V e
	getPhase ()Lnet/minecraft/world/entity/boss/enderdragon/phases/EnderDragonPhase; i
	resetFlameCount ()V j
net/minecraft/world/entity/boss/enderdragon/phases/DragonSittingScanningPhase buo
	CHARGE_TARGETING f
	SITTING_ATTACK_VIEW_RANGE d
	SITTING_ATTACK_Y_VIEW_RANGE c
	SITTING_CHARGE_VIEW_RANGE e
	SITTING_SCANNING_IDLE_TICKS b
	scanTargeting g
	scanningTime h
	begin ()V d
	doServerTick ()V c
	getPhase ()Lnet/minecraft/world/entity/boss/enderdragon/phases/EnderDragonPhase; i
net/minecraft/world/entity/boss/enderdragon/phases/DragonStrafePlayerPhase bup
	FIREBALL_CHARGE_AMOUNT c
	LOGGER b
	attackTarget g
	currentPath e
	fireballCharge d
	holdingPatternClockwise h
	targetLocation f
	begin ()V d
	doServerTick ()V c
	findNewTarget ()V j
	getFlyTargetLocation ()Lnet/minecraft/world/phys/Vec3; g
	getPhase ()Lnet/minecraft/world/entity/boss/enderdragon/phases/EnderDragonPhase; i
	navigateToNextPathNode ()V k
	setTarget (Lnet/minecraft/world/entity/LivingEntity;)V a
net/minecraft/world/entity/boss/enderdragon/phases/DragonTakeoffPhase buq
	currentPath c
	firstTick b
	targetLocation d
	begin ()V d
	doServerTick ()V c
	findNewTarget ()V j
	getFlyTargetLocation ()Lnet/minecraft/world/phys/Vec3; g
	getPhase ()Lnet/minecraft/world/entity/boss/enderdragon/phases/EnderDragonPhase; i
	navigateToNextPathNode ()V k
net/minecraft/world/entity/boss/enderdragon/phases/EnderDragonPhase bur
	CHARGING_PLAYER i
	DYING j
	HOLDING_PATTERN a
	HOVERING k
	LANDING d
	LANDING_APPROACH c
	SITTING_ATTACKING h
	SITTING_FLAMING f
	SITTING_SCANNING g
	STRAFE_PLAYER b
	TAKEOFF e
	id n
	instanceClass m
	name o
	phases l
	create (Ljava/lang/Class;Ljava/lang/String;)Lnet/minecraft/world/entity/boss/enderdragon/phases/EnderDragonPhase; a
	createInstance (Lnet/minecraft/world/entity/boss/enderdragon/EnderDragon;)Lnet/minecraft/world/entity/boss/enderdragon/phases/DragonPhaseInstance; a
	getById (I)Lnet/minecraft/world/entity/boss/enderdragon/phases/EnderDragonPhase; a
	getConstructor ()Ljava/lang/reflect/Constructor; a
	getCount ()I c
	getId ()I b
net/minecraft/world/entity/boss/enderdragon/phases/EnderDragonPhaseManager bus
	LOGGER a
	currentPhase d
	dragon b
	phases c
	getCurrentPhase ()Lnet/minecraft/world/entity/boss/enderdragon/phases/DragonPhaseInstance; a
	getPhase (Lnet/minecraft/world/entity/boss/enderdragon/phases/EnderDragonPhase;)Lnet/minecraft/world/entity/boss/enderdragon/phases/DragonPhaseInstance; b
	setPhase (Lnet/minecraft/world/entity/boss/enderdragon/phases/EnderDragonPhase;)V a
net/minecraft/world/entity/boss/wither/WitherBoss buv
	DATA_ID_INV bT
	DATA_TARGETS e
	DATA_TARGET_A b
	DATA_TARGET_B c
	DATA_TARGET_C d
	INVULNERABLE_TICKS bU
	LIVING_ENTITY_SELECTOR cd
	TARGETING_CONDITIONS ce
	bossEvent cc
	destroyBlocksTick cb
	idleHeadUpdates ca
	nextHeadUpdate bZ
	xRotHeads bV
	xRotOHeads bX
	yRotHeads bW
	yRotOHeads bY
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	addEffect (Lnet/minecraft/world/effect/MobEffectInstance;Lnet/minecraft/world/entity/Entity;)Z b
	aiStep ()V b_
	canBeAffected (Lnet/minecraft/world/effect/MobEffectInstance;)Z c
	canChangeDimensions ()Z cq
	canDestroy (Lnet/minecraft/world/level/block/state/BlockState;)Z d
	canRide (Lnet/minecraft/world/entity/Entity;)Z l
	checkDespawn ()V du
	createAttributes ()Lnet/minecraft/world/entity/ai/attributes/AttributeSupplier$Builder; r
	createNavigation (Lnet/minecraft/world/level/Level;)Lnet/minecraft/world/entity/ai/navigation/PathNavigation; b
	customServerAiStep ()V W
	defineSynchedData ()V a_
	dropCustomDeathLoot (Lnet/minecraft/world/damagesource/DamageSource;IZ)V a
	getAlternativeTarget (I)I t
	getAmbientSound ()Lnet/minecraft/sounds/SoundEvent; s
	getDeathSound ()Lnet/minecraft/sounds/SoundEvent; g_
	getHeadX (I)D u
	getHeadXRot (I)F c
	getHeadY (I)D v
	getHeadYRot (I)F b
	getHeadZ (I)D w
	getHurtSound (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEvent; d
	getInvulnerableTicks ()I w
	getMobType ()Lnet/minecraft/world/entity/MobType; eN
	hurt (Lnet/minecraft/world/damagesource/DamageSource;F)Z a
	isPowered ()Z a
	makeInvulnerable ()V q
	makeStuckInBlock (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/phys/Vec3;)V a
	performRangedAttack (IDDDZ)V a
	performRangedAttack (ILnet/minecraft/world/entity/LivingEntity;)V a
	performRangedAttack (Lnet/minecraft/world/entity/LivingEntity;F)V a
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	registerGoals ()V x
	rotlerp (FFF)F a
	setAlternativeTarget (II)V a
	setCustomName (Lnet/minecraft/network/chat/Component;)V b
	setInvulnerableTicks (I)V s
	startSeenByPlayer (Lnet/minecraft/server/level/ServerPlayer;)V c
	stopSeenByPlayer (Lnet/minecraft/server/level/ServerPlayer;)V d
net/minecraft/world/entity/boss/wither/WitherBoss$WitherDoNothingGoal buv$a
	canUse ()Z a
net/minecraft/world/entity/decoration/ArmorStand bux
	BABY_DIMENSIONS bS
	CHEST_OFFSET bU
	CLIENT_FLAG_MARKER bB
	CLIENT_FLAG_NO_BASEPLATE g
	CLIENT_FLAG_SHOW_ARMS f
	CLIENT_FLAG_SMALL e
	DATA_BODY_POSE bE
	DATA_CLIENT_FLAGS bC
	DATA_HEAD_POSE bD
	DATA_LEFT_ARM_POSE bF
	DATA_LEFT_LEG_POSE bH
	DATA_RIGHT_ARM_POSE bG
	DATA_RIGHT_LEG_POSE bI
	DEFAULT_BODY_POSE bM
	DEFAULT_HEAD_POSE bL
	DEFAULT_LEFT_ARM_POSE bN
	DEFAULT_LEFT_LEG_POSE bP
	DEFAULT_RIGHT_ARM_POSE bO
	DEFAULT_RIGHT_LEG_POSE bQ
	DISABLE_PUTTING_OFFSET d
	DISABLE_TAKING_OFFSET c
	ENABLE_ARMS bK
	FEET_OFFSET bT
	HEAD_OFFSET bW
	LEGS_OFFSET bV
	MARKER_DIMENSIONS bR
	RIDABLE_MINECARTS bX
	WOBBLE_TIME b
	armorItems bZ
	bodyPose cd
	disabledSlots cb
	handItems bY
	headPose cc
	invisible ca
	lastHit bJ
	leftArmPose ce
	leftLegPose cg
	rightArmPose cf
	rightLegPose ch
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	attackable ()Z fu
	brokenByAnything (Lnet/minecraft/world/damagesource/DamageSource;)V i
	brokenByPlayer (Lnet/minecraft/world/damagesource/DamageSource;)V h
	canBeSeenByAnyone ()Z el
	canTakeItem (Lnet/minecraft/world/item/ItemStack;)Z f
	causeDamage (Lnet/minecraft/world/damagesource/DamageSource;F)V g
	defineSynchedData ()V a_
	doPush (Lnet/minecraft/world/entity/Entity;)V A
	getArmorSlots ()Ljava/lang/Iterable; bJ
	getBodyPose ()Lnet/minecraft/core/Rotations; y
	getClickedSlot (Lnet/minecraft/world/phys/Vec3;)Lnet/minecraft/world/entity/EquipmentSlot; j
	getDeathSound ()Lnet/minecraft/sounds/SoundEvent; g_
	getDimensions (Lnet/minecraft/world/entity/Pose;)Lnet/minecraft/world/entity/EntityDimensions; a
	getDimensionsMarker (Z)Lnet/minecraft/world/entity/EntityDimensions; v
	getFallSounds ()Lnet/minecraft/world/entity/LivingEntity$Fallsounds; eC
	getHandSlots ()Ljava/lang/Iterable; bI
	getHeadPose ()Lnet/minecraft/core/Rotations; x
	getHurtSound (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEvent; d
	getItemBySlot (Lnet/minecraft/world/entity/EquipmentSlot;)Lnet/minecraft/world/item/ItemStack; c
	getLeftArmPose ()Lnet/minecraft/core/Rotations; z
	getLeftLegPose ()Lnet/minecraft/core/Rotations; C
	getLightProbePosition (F)Lnet/minecraft/world/phys/Vec3; k
	getMainArm ()Lnet/minecraft/world/entity/HumanoidArm; fh
	getMyRidingOffset ()D bw
	getPickResult ()Lnet/minecraft/world/item/ItemStack; dv
	getPistonPushReaction ()Lnet/minecraft/world/level/material/PushReaction; l_
	getRightArmPose ()Lnet/minecraft/core/Rotations; A
	getRightLegPose ()Lnet/minecraft/core/Rotations; D
	getStandingEyeHeight (Lnet/minecraft/world/entity/Pose;Lnet/minecraft/world/entity/EntityDimensions;)F b
	handleEntityEvent (B)V b
	hasPhysics ()Z E
	hurt (Lnet/minecraft/world/damagesource/DamageSource;F)Z a
	ignoreExplosion ()Z cJ
	interactAt (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/phys/Vec3;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResult; a
	isAffectedByPotions ()Z ft
	isBaby ()Z h_
	isDisabled (Lnet/minecraft/world/entity/EquipmentSlot;)Z e
	isEffectiveAi ()Z cV
	isIgnoringBlockTriggers ()Z c_
	isMarker ()Z w
	isNoBasePlate ()Z s
	isPickable ()Z bo
	isPushable ()Z bp
	isShowArms ()Z r
	isSmall ()Z q
	kill ()V ah
	onSyncedDataUpdated (Lnet/minecraft/network/syncher/EntityDataAccessor;)V a
	playBrokenSound ()V J
	pushEntities ()V fd
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	readPose (Lnet/minecraft/nbt/CompoundTag;)V c
	refreshDimensions ()V d_
	setBit (BIZ)B a
	setBodyPose (Lnet/minecraft/core/Rotations;)V b
	setHeadPose (Lnet/minecraft/core/Rotations;)V a
	setInvisible (Z)V j
	setItemSlot (Lnet/minecraft/world/entity/EquipmentSlot;Lnet/minecraft/world/item/ItemStack;)V a
	setLeftArmPose (Lnet/minecraft/core/Rotations;)V c
	setLeftLegPose (Lnet/minecraft/core/Rotations;)V e
	setMarker (Z)V u
	setNoBasePlate (Z)V s
	setRightArmPose (Lnet/minecraft/core/Rotations;)V d
	setRightLegPose (Lnet/minecraft/core/Rotations;)V f
	setShowArms (Z)V a
	setSmall (Z)V t
	setYBodyRot (F)V o
	setYHeadRot (F)V n
	shouldRenderAtSqrDistance (D)Z a
	showBreakingParticles ()V I
	skipAttackInteraction (Lnet/minecraft/world/entity/Entity;)Z r
	swapItem (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/entity/EquipmentSlot;Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/InteractionHand;)Z a
	thunderHit (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LightningBolt;)V a
	tick ()V l
	tickHeadTurn (FF)F e
	travel (Lnet/minecraft/world/phys/Vec3;)V h
	updateInvisibilityStatus ()V F
	writePose ()Lnet/minecraft/nbt/CompoundTag; G
net/minecraft/world/entity/decoration/GlowItemFrame buy
	getAddItemSound ()Lnet/minecraft/sounds/SoundEvent; p
	getBreakSound ()Lnet/minecraft/sounds/SoundEvent; k
	getFrameItemStack ()Lnet/minecraft/world/item/ItemStack; r
	getPlaceSound ()Lnet/minecraft/sounds/SoundEvent; o
	getRemoveItemSound ()Lnet/minecraft/sounds/SoundEvent; j
	getRotateItemSound ()Lnet/minecraft/sounds/SoundEvent; q
net/minecraft/world/entity/decoration/HangingEntity buz
	HANGING_ENTITY b
	LOGGER e
	checkInterval f
	direction d
	pos c
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	defineSynchedData ()V a_
	dropItem (Lnet/minecraft/world/entity/Entity;)V a
	getDirection ()Lnet/minecraft/core/Direction; cB
	getHeight ()I w
	getPos ()Lnet/minecraft/core/BlockPos; y
	getWidth ()I v
	hurt (Lnet/minecraft/world/damagesource/DamageSource;F)Z a
	isPickable ()Z bo
	mirror (Lnet/minecraft/world/level/block/Mirror;)F a
	move (Lnet/minecraft/world/entity/MoverType;Lnet/minecraft/world/phys/Vec3;)V a
	offs (I)D b
	playPlacementSound ()V x
	push (DDD)V j
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	recalculateBoundingBox ()V s
	refreshDimensions ()V d_
	repositionEntityAfterLoad ()Z bq
	rotate (Lnet/minecraft/world/level/block/Rotation;)F a
	setDirection (Lnet/minecraft/core/Direction;)V a
	setPos (DDD)V e
	skipAttackInteraction (Lnet/minecraft/world/entity/Entity;)Z r
	spawnAtLocation (Lnet/minecraft/world/item/ItemStack;F)Lnet/minecraft/world/entity/item/ItemEntity; a
	survives ()Z t
	thunderHit (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LightningBolt;)V a
	tick ()V l
net/minecraft/world/entity/decoration/ItemFrame bva
	DATA_ITEM g
	DATA_ROTATION h
	LOGGER f
	NUM_ROTATIONS e
	dropChance i
	fixed j
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	defineSynchedData ()V a_
	dropItem (Lnet/minecraft/world/entity/Entity;)V a
	dropItem (Lnet/minecraft/world/entity/Entity;Z)V b
	getAddEntityPacket ()Lnet/minecraft/network/protocol/Packet; S
	getAddItemSound ()Lnet/minecraft/sounds/SoundEvent; p
	getAnalogOutput ()I E
	getBreakSound ()Lnet/minecraft/sounds/SoundEvent; k
	getEyeHeight (Lnet/minecraft/world/entity/Pose;Lnet/minecraft/world/entity/EntityDimensions;)F a
	getFrameItemStack ()Lnet/minecraft/world/item/ItemStack; r
	getFramedMapId ()Ljava/util/OptionalInt; A
	getHeight ()I w
	getItem ()Lnet/minecraft/world/item/ItemStack; z
	getPickRadius ()F bC
	getPickResult ()Lnet/minecraft/world/item/ItemStack; dv
	getPlaceSound ()Lnet/minecraft/sounds/SoundEvent; o
	getRemoveItemSound ()Lnet/minecraft/sounds/SoundEvent; j
	getRotateItemSound ()Lnet/minecraft/sounds/SoundEvent; q
	getRotation ()I D
	getSlot (I)Lnet/minecraft/world/entity/SlotAccess; a_
	getVisualRotationYInDegrees ()F dz
	getWidth ()I v
	hasFramedMap ()Z C
	hurt (Lnet/minecraft/world/damagesource/DamageSource;F)Z a
	interact (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResult; a
	kill ()V ah
	move (Lnet/minecraft/world/entity/MoverType;Lnet/minecraft/world/phys/Vec3;)V a
	onItemChanged (Lnet/minecraft/world/item/ItemStack;)V d
	onSyncedDataUpdated (Lnet/minecraft/network/syncher/EntityDataAccessor;)V a
	playPlacementSound ()V x
	push (DDD)V j
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	recalculateBoundingBox ()V s
	recreateFromPacket (Lnet/minecraft/network/protocol/game/ClientboundAddEntityPacket;)V a
	removeFramedMap (Lnet/minecraft/world/item/ItemStack;)V c
	setDirection (Lnet/minecraft/core/Direction;)V a
	setItem (Lnet/minecraft/world/item/ItemStack;)V a
	setItem (Lnet/minecraft/world/item/ItemStack;Z)V a
	setRotation (I)V b
	setRotation (IZ)V a
	shouldRenderAtSqrDistance (D)Z a
	survives ()Z t
net/minecraft/world/entity/decoration/LeashFenceKnotEntity bvb
	OFFSET_Y e
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	dropItem (Lnet/minecraft/world/entity/Entity;)V a
	getAddEntityPacket ()Lnet/minecraft/network/protocol/Packet; S
	getEyeHeight (Lnet/minecraft/world/entity/Pose;Lnet/minecraft/world/entity/EntityDimensions;)F a
	getHeight ()I w
	getOrCreateKnot (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/entity/decoration/LeashFenceKnotEntity; b
	getPickResult ()Lnet/minecraft/world/item/ItemStack; dv
	getRopeHoldPosition (F)Lnet/minecraft/world/phys/Vec3; q
	getWidth ()I v
	interact (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResult; a
	playPlacementSound ()V x
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	recalculateBoundingBox ()V s
	setDirection (Lnet/minecraft/core/Direction;)V a
	shouldRenderAtSqrDistance (D)Z a
	survives ()Z t
net/minecraft/world/entity/decoration/Painting bvc
	DATA_PAINTING_VARIANT_ID f
	DEFAULT_VARIANT g
	VARIANT_TAG e
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	create (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;)Ljava/util/Optional; a
	defineSynchedData ()V a_
	dropItem (Lnet/minecraft/world/entity/Entity;)V a
	getAddEntityPacket ()Lnet/minecraft/network/protocol/Packet; S
	getDefaultVariant ()Lnet/minecraft/core/Holder; k
	getHeight ()I w
	getPickResult ()Lnet/minecraft/world/item/ItemStack; dv
	getVariant ()Ljava/lang/Object; c
	getVariant ()Lnet/minecraft/core/Holder; j
	getWidth ()I v
	lerpTo (DDDFFIZ)V a
	loadVariant (Lnet/minecraft/nbt/CompoundTag;)Ljava/util/Optional; c
	moveTo (DDDFF)V b
	onSyncedDataUpdated (Lnet/minecraft/network/syncher/EntityDataAccessor;)V a
	playPlacementSound ()V x
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	recreateFromPacket (Lnet/minecraft/network/protocol/game/ClientboundAddEntityPacket;)V a
	setVariant (Ljava/lang/Object;)V a
	setVariant (Lnet/minecraft/core/Holder;)V a
	storeVariant (Lnet/minecraft/nbt/CompoundTag;Lnet/minecraft/core/Holder;)V a
	trackingPosition ()Lnet/minecraft/world/phys/Vec3; dh
	variantArea (Lnet/minecraft/core/Holder;)I b
net/minecraft/world/entity/decoration/PaintingVariant bvd
	height b
	width a
	getHeight ()I b
	getWidth ()I a
net/minecraft/world/entity/decoration/PaintingVariants bve
	ALBAN c
	AZTEC b
	AZTEC2 d
	BOMB e
	BURNING_SKULL x
	BUST p
	COURBET i
	CREEBET l
	DONKEY_KONG z
	EARTH A
	FIGHTERS u
	FIRE D
	GRAHAM n
	KEBAB a
	MATCH o
	PIGSCENE w
	PLANT f
	POINTER v
	POOL h
	SEA j
	SKELETON y
	SKULL_AND_ROSES s
	STAGE q
	SUNSET k
	VOID r
	WANDERER m
	WASTELAND g
	WATER C
	WIND B
	WITHER t
	bootstrap (Lnet/minecraft/core/Registry;)Lnet/minecraft/world/entity/decoration/PaintingVariant; a
	create (Ljava/lang/String;)Lnet/minecraft/resources/ResourceKey; a
net/minecraft/world/entity/item/FallingBlockEntity bvg
	DATA_START_POS e
	LOGGER f
	blockData d
	blockState g
	cancelDrop h
	dropItem c
	fallDamageMax j
	fallDamagePerDistance k
	hurtEntities i
	time b
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	callOnBrokenAfterFall (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/core/BlockPos;)V a
	causeFallDamage (FFLnet/minecraft/world/damagesource/DamageSource;)Z a
	defineSynchedData ()V a_
	disableDrop ()V k
	displayFireAnimation ()Z cs
	fall (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/entity/item/FallingBlockEntity; a
	fillCrashReportCategory (Lnet/minecraft/CrashReportCategory;)V a
	getAddEntityPacket ()Lnet/minecraft/network/protocol/Packet; S
	getBlockState ()Lnet/minecraft/world/level/block/state/BlockState; o
	getMovementEmission ()Lnet/minecraft/world/entity/Entity$MovementEmission; aS
	getStartPos ()Lnet/minecraft/core/BlockPos; j
	getTypeName ()Lnet/minecraft/network/chat/Component; cl
	isAttackable ()Z cn
	isPickable ()Z bo
	onlyOpCanSetNbt ()Z cK
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	recreateFromPacket (Lnet/minecraft/network/protocol/game/ClientboundAddEntityPacket;)V a
	setHurtsEntities (FI)V b
	setStartPos (Lnet/minecraft/core/BlockPos;)V a
	tick ()V l
net/minecraft/world/entity/item/ItemEntity bvh
	DATA_ITEM c
	INFINITE_LIFETIME f
	INFINITE_PICKUP_DELAY e
	LIFETIME d
	age g
	bobOffs b
	health i
	pickupDelay h
	target k
	thrower j
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	areMergable (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/item/ItemStack;)Z a
	changeDimension (Lnet/minecraft/server/level/ServerLevel;)Lnet/minecraft/world/entity/Entity; b
	copy ()Lnet/minecraft/world/entity/item/ItemEntity; x
	dampensVibrations ()Z aT
	defineSynchedData ()V a_
	fireImmune ()Z aU
	getAge ()I k
	getBlockPosBelowThatAffectsMyMovement ()Lnet/minecraft/core/BlockPos; aE
	getItem ()Lnet/minecraft/world/item/ItemStack; j
	getMovementEmission ()Lnet/minecraft/world/entity/Entity$MovementEmission; aS
	getName ()Lnet/minecraft/network/chat/Component; Z
	getOwner ()Lnet/minecraft/world/entity/Entity; v
	getSoundSource ()Lnet/minecraft/sounds/SoundSource; cY
	getSpin (F)F a
	getVisualRotationYInDegrees ()F dz
	hasPickUpDelay ()Z r
	hurt (Lnet/minecraft/world/damagesource/DamageSource;F)Z a
	isAttackable ()Z cn
	isMergable ()Z C
	makeFakeItem ()V w
	merge (Lnet/minecraft/world/entity/item/ItemEntity;Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/entity/item/ItemEntity;Lnet/minecraft/world/item/ItemStack;)V a
	merge (Lnet/minecraft/world/entity/item/ItemEntity;Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/item/ItemStack;)V a
	merge (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/item/ItemStack;I)Lnet/minecraft/world/item/ItemStack; a
	mergeWithNeighbours ()V A
	onSyncedDataUpdated (Lnet/minecraft/network/syncher/EntityDataAccessor;)V a
	playerTouch (Lnet/minecraft/world/entity/player/Player;)V b_
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	setDefaultPickUpDelay ()V o
	setExtendedLifetime ()V t
	setItem (Lnet/minecraft/world/item/ItemStack;)V a
	setNeverPickUp ()V q
	setNoPickUpDelay ()V p
	setPickUpDelay (I)V b
	setTarget (Ljava/util/UUID;)V b
	setThrower (Ljava/util/UUID;)V c
	setUnderLavaMovement ()V z
	setUnderwaterMovement ()V y
	setUnlimitedLifetime ()V s
	tick ()V l
	tryToMerge (Lnet/minecraft/world/entity/item/ItemEntity;)V a
net/minecraft/world/entity/item/PrimedTnt bvi
	DATA_FUSE_ID b
	DEFAULT_FUSE_TIME c
	owner d
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	defineSynchedData ()V a_
	explode ()V o
	getEyeHeight (Lnet/minecraft/world/entity/Pose;Lnet/minecraft/world/entity/EntityDimensions;)F a
	getFuse ()I k
	getMovementEmission ()Lnet/minecraft/world/entity/Entity$MovementEmission; aS
	getOwner ()Lnet/minecraft/world/entity/Entity; v
	getOwner ()Lnet/minecraft/world/entity/LivingEntity; j
	isPickable ()Z bo
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	setFuse (I)V b
	tick ()V l
net/minecraft/world/entity/monster/AbstractIllager bvk
	canAttack (Lnet/minecraft/world/entity/LivingEntity;)Z c
	getArmPose ()Lnet/minecraft/world/entity/monster/AbstractIllager$IllagerArmPose; q
	getMobType ()Lnet/minecraft/world/entity/MobType; eN
	registerGoals ()V x
net/minecraft/world/entity/monster/AbstractIllager$IllagerArmPose bvk$a
	$VALUES i
	ATTACKING b
	BOW_AND_ARROW d
	CELEBRATING g
	CROSSBOW_CHARGE f
	CROSSBOW_HOLD e
	CROSSED a
	NEUTRAL h
	SPELLCASTING c
	$values ()[Lnet/minecraft/world/entity/monster/AbstractIllager$IllagerArmPose; a
net/minecraft/world/entity/monster/AbstractIllager$RaiderOpenDoorGoal bvk$b
	canUse ()Z a
net/minecraft/world/entity/monster/AbstractSkeleton bvl
	bowGoal b
	meleeGoal c
	aiStep ()V b_
	canFireProjectileWeapon (Lnet/minecraft/world/item/ProjectileWeaponItem;)Z a
	createAttributes ()Lnet/minecraft/world/entity/ai/attributes/AttributeSupplier$Builder; q
	finalizeSpawn (Lnet/minecraft/world/level/ServerLevelAccessor;Lnet/minecraft/world/DifficultyInstance;Lnet/minecraft/world/entity/MobSpawnType;Lnet/minecraft/world/entity/SpawnGroupData;Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/world/entity/SpawnGroupData; a
	getArrow (Lnet/minecraft/world/item/ItemStack;F)Lnet/minecraft/world/entity/projectile/AbstractArrow; b
	getMobType ()Lnet/minecraft/world/entity/MobType; eN
	getMyRidingOffset ()D bw
	getStandingEyeHeight (Lnet/minecraft/world/entity/Pose;Lnet/minecraft/world/entity/EntityDimensions;)F b
	getStepSound ()Lnet/minecraft/sounds/SoundEvent; r
	isShaking ()Z fY
	performRangedAttack (Lnet/minecraft/world/entity/LivingEntity;F)V a
	playStepSound (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V b
	populateDefaultEquipmentSlots (Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/DifficultyInstance;)V a
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	reassessWeaponGoal ()V w
	registerGoals ()V x
	rideTick ()V bv
	setItemSlot (Lnet/minecraft/world/entity/EquipmentSlot;Lnet/minecraft/world/item/ItemStack;)V a
net/minecraft/world/entity/monster/Blaze bvm
	DATA_FLAGS_ID d
	allowedHeightOffset b
	nextHeightOffsetChangeTick c
	aiStep ()V b_
	createAttributes ()Lnet/minecraft/world/entity/ai/attributes/AttributeSupplier$Builder; q
	customServerAiStep ()V W
	defineSynchedData ()V a_
	getAmbientSound ()Lnet/minecraft/sounds/SoundEvent; s
	getDeathSound ()Lnet/minecraft/sounds/SoundEvent; g_
	getHurtSound (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEvent; d
	getLightLevelDependentMagicValue ()F bj
	isCharged ()Z r
	isOnFire ()Z bL
	isSensitiveToWater ()Z fb
	registerGoals ()V x
	setCharged (Z)V w
net/minecraft/world/entity/monster/Blaze$BlazeAttackGoal bvm$a
	attackStep b
	attackTime c
	blaze a
	lastSeen d
	canUse ()Z a
	getFollowDistance ()D h
	requiresUpdateEveryTick ()Z K_
	start ()V c
	stop ()V d
	tick ()V e
net/minecraft/world/entity/monster/CaveSpider bvn
	createCaveSpider ()Lnet/minecraft/world/entity/ai/attributes/AttributeSupplier$Builder; q
	doHurtTarget (Lnet/minecraft/world/entity/Entity;)Z z
	finalizeSpawn (Lnet/minecraft/world/level/ServerLevelAccessor;Lnet/minecraft/world/DifficultyInstance;Lnet/minecraft/world/entity/MobSpawnType;Lnet/minecraft/world/entity/SpawnGroupData;Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/world/entity/SpawnGroupData; a
	getStandingEyeHeight (Lnet/minecraft/world/entity/Pose;Lnet/minecraft/world/entity/EntityDimensions;)F b
net/minecraft/world/entity/monster/Creeper bvo
	DATA_IS_IGNITED d
	DATA_IS_POWERED c
	DATA_SWELL_DIR b
	droppedSkulls bW
	explosionRadius bV
	maxSwell bU
	oldSwell e
	swell bT
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	canDropMobsSkull ()Z fZ
	causeFallDamage (FFLnet/minecraft/world/damagesource/DamageSource;)Z a
	createAttributes ()Lnet/minecraft/world/entity/ai/attributes/AttributeSupplier$Builder; q
	defineSynchedData ()V a_
	doHurtTarget (Lnet/minecraft/world/entity/Entity;)Z z
	dropCustomDeathLoot (Lnet/minecraft/world/damagesource/DamageSource;IZ)V a
	explodeCreeper ()V gb
	getDeathSound ()Lnet/minecraft/sounds/SoundEvent; g_
	getHurtSound (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEvent; d
	getMaxFallDistance ()I cr
	getSwellDir ()I r
	getSwelling (F)F D
	ignite ()V fY
	increaseDroppedSkulls ()V ga
	isIgnited ()Z w
	isPowered ()Z a
	mobInteract (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResult; b
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	registerGoals ()V x
	setSwellDir (I)V b
	setTarget (Lnet/minecraft/world/entity/LivingEntity;)V h
	spawnLingeringCloud ()V gc
	thunderHit (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LightningBolt;)V a
	tick ()V l
net/minecraft/world/entity/monster/CrossbowAttackMob bvp
	getProjectileShotVector (Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/phys/Vec3;F)Lorg/joml/Vector3f; a
	getTarget ()Lnet/minecraft/world/entity/LivingEntity; j
	onCrossbowAttackPerformed ()V a
	performCrossbowAttack (Lnet/minecraft/world/entity/LivingEntity;F)V b
	setChargingCrossbow (Z)V b
	shootCrossbowProjectile (Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/entity/projectile/Projectile;FF)V a
	shootCrossbowProjectile (Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/entity/projectile/Projectile;F)V a
net/minecraft/world/entity/monster/Drowned bvq
	NAUTILUS_SHELL_CHANCE b
	groundNavigation d
	searchingForLand bX
	waterNavigation c
	addBehaviourGoals ()V q
	canReplaceCurrentItem (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/item/ItemStack;)Z b
	checkDrownedSpawnRules (Lnet/minecraft/world/entity/EntityType;Lnet/minecraft/world/level/ServerLevelAccessor;Lnet/minecraft/world/entity/MobSpawnType;Lnet/minecraft/core/BlockPos;Lnet/minecraft/util/RandomSource;)Z a
	checkSpawnObstruction (Lnet/minecraft/world/level/LevelReader;)Z a
	closeToNextPos ()Z ga
	convertsInWater ()Z fZ
	finalizeSpawn (Lnet/minecraft/world/level/ServerLevelAccessor;Lnet/minecraft/world/DifficultyInstance;Lnet/minecraft/world/entity/MobSpawnType;Lnet/minecraft/world/entity/SpawnGroupData;Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/world/entity/SpawnGroupData; a
	getAmbientSound ()Lnet/minecraft/sounds/SoundEvent; s
	getDeathSound ()Lnet/minecraft/sounds/SoundEvent; g_
	getHurtSound (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEvent; d
	getSkull ()Lnet/minecraft/world/item/ItemStack; fY
	getStepSound ()Lnet/minecraft/sounds/SoundEvent; w
	getSwimSound ()Lnet/minecraft/sounds/SoundEvent; aJ
	isDeepEnoughToSpawn (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;)Z a
	isPushedByFluid ()Z cw
	isVisuallySwimming ()Z bX
	okTarget (Lnet/minecraft/world/entity/LivingEntity;)Z l
	performRangedAttack (Lnet/minecraft/world/entity/LivingEntity;F)V a
	populateDefaultEquipmentSlots (Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/DifficultyInstance;)V a
	setSearchingForLand (Z)V w
	supportsBreakDoorGoal ()Z r
	travel (Lnet/minecraft/world/phys/Vec3;)V h
	updateSwimming ()V ba
	wantsToSwim ()Z gi
net/minecraft/world/entity/monster/Drowned$DrownedAttackGoal bvq$a
	drowned b
	canContinueToUse ()Z b
	canUse ()Z a
net/minecraft/world/entity/monster/Drowned$DrownedGoToBeachGoal bvq$b
	drowned g
	canContinueToUse ()Z b
	canUse ()Z a
	isValidTarget (Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;)Z a
	start ()V c
	stop ()V d
net/minecraft/world/entity/monster/Drowned$DrownedGoToWaterGoal bvq$c
	level f
	mob a
	speedModifier e
	wantedX b
	wantedY c
	wantedZ d
	canContinueToUse ()Z b
	canUse ()Z a
	getWaterPos ()Lnet/minecraft/world/phys/Vec3; h
	start ()V c
net/minecraft/world/entity/monster/Drowned$DrownedMoveControl bvq$d
	drowned l
	tick ()V a
net/minecraft/world/entity/monster/Drowned$DrownedSwimUpGoal bvq$e
	drowned a
	seaLevel c
	speedModifier b
	stuck d
	canContinueToUse ()Z b
	canUse ()Z a
	start ()V c
	stop ()V d
	tick ()V e
net/minecraft/world/entity/monster/Drowned$DrownedTridentAttackGoal bvq$f
	drowned a
	canUse ()Z a
	start ()V c
	stop ()V d
net/minecraft/world/entity/monster/ElderGuardian bvr
	EFFECT_AMPLIFIER bV
	EFFECT_DISPLAY_LIMIT bW
	EFFECT_DURATION bU
	EFFECT_INTERVAL e
	EFFECT_RADIUS bT
	ELDER_SIZE_SCALE b
	createAttributes ()Lnet/minecraft/world/entity/ai/attributes/AttributeSupplier$Builder; q
	customServerAiStep ()V W
	getAmbientSound ()Lnet/minecraft/sounds/SoundEvent; s
	getAttackDuration ()I r
	getDeathSound ()Lnet/minecraft/sounds/SoundEvent; g_
	getFlopSound ()Lnet/minecraft/sounds/SoundEvent; w
	getHurtSound (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEvent; d
net/minecraft/world/entity/monster/EnderMan bvs
	DATA_CARRY_STATE bU
	DATA_CREEPY bV
	DATA_STARED_AT bW
	DELAY_BETWEEN_CREEPY_STARE_SOUND e
	MIN_DEAGGRESSION_TIME bT
	PERSISTENT_ANGER_TIME bZ
	SPEED_MODIFIER_ATTACKING d
	SPEED_MODIFIER_ATTACKING_UUID c
	lastStareSound bX
	persistentAngerTarget cb
	remainingPersistentAngerTime ca
	targetChangeTime bY
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	aiStep ()V b_
	createAttributes ()Lnet/minecraft/world/entity/ai/attributes/AttributeSupplier$Builder; q
	customServerAiStep ()V W
	defineSynchedData ()V a_
	dropCustomDeathLoot (Lnet/minecraft/world/damagesource/DamageSource;IZ)V a
	getAmbientSound ()Lnet/minecraft/sounds/SoundEvent; s
	getCarriedBlock ()Lnet/minecraft/world/level/block/state/BlockState; fY
	getDeathSound ()Lnet/minecraft/sounds/SoundEvent; g_
	getHurtSound (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEvent; d
	getPersistentAngerTarget ()Ljava/util/UUID; b
	getRemainingPersistentAngerTime ()I a
	getStandingEyeHeight (Lnet/minecraft/world/entity/Pose;Lnet/minecraft/world/entity/EntityDimensions;)F b
	hasBeenStaredAt ()Z ga
	hurt (Lnet/minecraft/world/damagesource/DamageSource;F)Z a
	hurtWithCleanWater (Lnet/minecraft/world/damagesource/DamageSource;Lnet/minecraft/world/entity/projectile/ThrownPotion;F)Z a
	isCreepy ()Z fZ
	isLookingAtMe (Lnet/minecraft/world/entity/player/Player;)Z g
	isSensitiveToWater ()Z fb
	onSyncedDataUpdated (Lnet/minecraft/network/syncher/EntityDataAccessor;)V a
	playStareSound ()V r
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	registerGoals ()V x
	requiresCustomPersistence ()Z T
	setBeingStaredAt ()V gb
	setCarriedBlock (Lnet/minecraft/world/level/block/state/BlockState;)V d
	setPersistentAngerTarget (Ljava/util/UUID;)V a
	setRemainingPersistentAngerTime (I)V a
	setTarget (Lnet/minecraft/world/entity/LivingEntity;)V h
	startPersistentAngerTimer ()V c
	teleport ()Z w
	teleport (DDD)Z r
	teleportTowards (Lnet/minecraft/world/entity/Entity;)Z a
net/minecraft/world/entity/monster/EnderMan$EndermanFreezeWhenLookedAt bvs$a
	enderman a
	target b
	canUse ()Z a
	start ()V c
	tick ()V e
net/minecraft/world/entity/monster/EnderMan$EndermanLeaveBlockGoal bvs$b
	enderman a
	canPlaceBlock (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/BlockPos;)Z a
	canUse ()Z a
	tick ()V e
net/minecraft/world/entity/monster/EnderMan$EndermanLookForPlayerGoal bvs$c
	aggroTime k
	continueAggroTargetConditions n
	enderman i
	isAngerInducing o
	pendingTarget j
	startAggroTargetConditions m
	teleportTime l
	canContinueToUse ()Z b
	canUse ()Z a
	start ()V c
	stop ()V d
	tick ()V e
net/minecraft/world/entity/monster/EnderMan$EndermanTakeBlockGoal bvs$d
	enderman a
	canUse ()Z a
	tick ()V e
net/minecraft/world/entity/monster/Endermite bvt
	MAX_LIFE b
	life c
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	aiStep ()V b_
	checkEndermiteSpawnRules (Lnet/minecraft/world/entity/EntityType;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/world/entity/MobSpawnType;Lnet/minecraft/core/BlockPos;Lnet/minecraft/util/RandomSource;)Z b
	createAttributes ()Lnet/minecraft/world/entity/ai/attributes/AttributeSupplier$Builder; q
	getAmbientSound ()Lnet/minecraft/sounds/SoundEvent; s
	getDeathSound ()Lnet/minecraft/sounds/SoundEvent; g_
	getHurtSound (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEvent; d
	getMobType ()Lnet/minecraft/world/entity/MobType; eN
	getMovementEmission ()Lnet/minecraft/world/entity/Entity$MovementEmission; aS
	getMyRidingOffset ()D bw
	getStandingEyeHeight (Lnet/minecraft/world/entity/Pose;Lnet/minecraft/world/entity/EntityDimensions;)F b
	playStepSound (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V b
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	registerGoals ()V x
	setYBodyRot (F)V o
	tick ()V l
net/minecraft/world/entity/monster/Enemy bvu
	XP_REWARD_BOSS k_
	XP_REWARD_HUGE j_
	XP_REWARD_LARGE i_
	XP_REWARD_MEDIUM h_
	XP_REWARD_NONE f_
	XP_REWARD_SMALL g_
net/minecraft/world/entity/monster/Evoker bvv
	wololoTarget e
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	applyRaidBuffs (IZ)V a
	createAttributes ()Lnet/minecraft/world/entity/ai/attributes/AttributeSupplier$Builder; r
	customServerAiStep ()V W
	defineSynchedData ()V a_
	getAmbientSound ()Lnet/minecraft/sounds/SoundEvent; s
	getCastingSoundEvent ()Lnet/minecraft/sounds/SoundEvent; fY
	getCelebrateSound ()Lnet/minecraft/sounds/SoundEvent; Y_
	getDeathSound ()Lnet/minecraft/sounds/SoundEvent; g_
	getHurtSound (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEvent; d
	getWololoTarget ()Lnet/minecraft/world/entity/animal/Sheep; gr
	isAlliedTo (Lnet/minecraft/world/entity/Entity;)Z p
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	registerGoals ()V x
	setWololoTarget (Lnet/minecraft/world/entity/animal/Sheep;)V a
net/minecraft/world/entity/monster/Evoker$EvokerAttackSpellGoal bvv$a
	createSpellEntity (DDDDFI)V a
	getCastingInterval ()I i
	getCastingTime ()I h
	getSpell ()Lnet/minecraft/world/entity/monster/SpellcasterIllager$IllagerSpell; m
	getSpellPrepareSound ()Lnet/minecraft/sounds/SoundEvent; l
	performSpellCasting ()V k
net/minecraft/world/entity/monster/Evoker$EvokerCastingSpellGoal bvv$b
	tick ()V e
net/minecraft/world/entity/monster/Evoker$EvokerSummonSpellGoal bvv$c
	vexCountTargeting e
	canUse ()Z a
	getCastingInterval ()I i
	getCastingTime ()I h
	getSpell ()Lnet/minecraft/world/entity/monster/SpellcasterIllager$IllagerSpell; m
	getSpellPrepareSound ()Lnet/minecraft/sounds/SoundEvent; l
	performSpellCasting ()V k
net/minecraft/world/entity/monster/Evoker$EvokerWololoSpellGoal bvv$d
	wololoTargeting e
	canContinueToUse ()Z b
	canUse ()Z a
	getCastWarmupTime ()I n
	getCastingInterval ()I i
	getCastingTime ()I h
	getSpell ()Lnet/minecraft/world/entity/monster/SpellcasterIllager$IllagerSpell; m
	getSpellPrepareSound ()Lnet/minecraft/sounds/SoundEvent; l
	performSpellCasting ()V k
	start ()V c
	stop ()V d
	tick ()V e
net/minecraft/world/entity/monster/Ghast bvw
	DATA_IS_CHARGING b
	explosionPower c
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	checkGhastSpawnRules (Lnet/minecraft/world/entity/EntityType;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/world/entity/MobSpawnType;Lnet/minecraft/core/BlockPos;Lnet/minecraft/util/RandomSource;)Z b
	createAttributes ()Lnet/minecraft/world/entity/ai/attributes/AttributeSupplier$Builder; w
	defineSynchedData ()V a_
	getAmbientSound ()Lnet/minecraft/sounds/SoundEvent; s
	getDeathSound ()Lnet/minecraft/sounds/SoundEvent; g_
	getExplosionPower ()I r
	getHurtSound (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEvent; d
	getMaxSpawnClusterSize ()I fE
	getSoundSource ()Lnet/minecraft/sounds/SoundSource; cY
	getSoundVolume ()F eR
	getStandingEyeHeight (Lnet/minecraft/world/entity/Pose;Lnet/minecraft/world/entity/EntityDimensions;)F b
	hurt (Lnet/minecraft/world/damagesource/DamageSource;F)Z a
	isCharging ()Z q
	isInvulnerableTo (Lnet/minecraft/world/damagesource/DamageSource;)Z b
	isReflectedFireball (Lnet/minecraft/world/damagesource/DamageSource;)Z h
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	registerGoals ()V x
	setCharging (Z)V w
	shouldDespawnInPeaceful ()Z U
net/minecraft/world/entity/monster/Ghast$GhastLookGoal bvw$a
	ghast a
	canUse ()Z a
	requiresUpdateEveryTick ()Z K_
	tick ()V e
net/minecraft/world/entity/monster/Ghast$GhastMoveControl bvw$b
	floatDuration m
	ghast l
	canReach (Lnet/minecraft/world/phys/Vec3;I)Z a
	tick ()V a
net/minecraft/world/entity/monster/Ghast$GhastShootFireballGoal bvw$c
	chargeTime a
	ghast b
	canUse ()Z a
	requiresUpdateEveryTick ()Z K_
	start ()V c
	stop ()V d
	tick ()V e
net/minecraft/world/entity/monster/Ghast$RandomFloatAroundGoal bvw$d
	ghast a
	canContinueToUse ()Z b
	canUse ()Z a
	start ()V c
net/minecraft/world/entity/monster/Giant bvx
	createAttributes ()Lnet/minecraft/world/entity/ai/attributes/AttributeSupplier$Builder; q
	getStandingEyeHeight (Lnet/minecraft/world/entity/Pose;Lnet/minecraft/world/entity/EntityDimensions;)F b
	getWalkTargetValue (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/LevelReader;)F a
net/minecraft/world/entity/monster/Guardian bvy
	ATTACK_TIME c
	DATA_ID_ATTACK_TARGET e
	DATA_ID_MOVING b
	clientSideAttackTime bZ
	clientSideCachedAttackTarget bY
	clientSideSpikesAnimation bW
	clientSideSpikesAnimationO bX
	clientSideTailAnimation bT
	clientSideTailAnimationO bU
	clientSideTailAnimationSpeed bV
	clientSideTouchedGround ca
	randomStrollGoal d
	aiStep ()V b_
	canBreatheUnderwater ()Z dN
	checkGuardianSpawnRules (Lnet/minecraft/world/entity/EntityType;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/world/entity/MobSpawnType;Lnet/minecraft/core/BlockPos;Lnet/minecraft/util/RandomSource;)Z b
	checkSpawnObstruction (Lnet/minecraft/world/level/LevelReader;)Z a
	createAttributes ()Lnet/minecraft/world/entity/ai/attributes/AttributeSupplier$Builder; fY
	createNavigation (Lnet/minecraft/world/level/Level;)Lnet/minecraft/world/entity/ai/navigation/PathNavigation; b
	defineSynchedData ()V a_
	getActiveAttackTarget ()Lnet/minecraft/world/entity/LivingEntity; gb
	getAmbientSound ()Lnet/minecraft/sounds/SoundEvent; s
	getAmbientSoundInterval ()I M
	getAttackAnimationScale (F)F F
	getAttackDuration ()I r
	getClientSideAttackTime ()F gc
	getDeathSound ()Lnet/minecraft/sounds/SoundEvent; g_
	getFlopSound ()Lnet/minecraft/sounds/SoundEvent; w
	getHurtSound (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEvent; d
	getMaxHeadXRot ()I X
	getMobType ()Lnet/minecraft/world/entity/MobType; eN
	getMovementEmission ()Lnet/minecraft/world/entity/Entity$MovementEmission; aS
	getSpikesAnimation (F)F E
	getStandingEyeHeight (Lnet/minecraft/world/entity/Pose;Lnet/minecraft/world/entity/EntityDimensions;)F b
	getTailAnimation (F)F D
	getWalkTargetValue (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/LevelReader;)F a
	hasActiveAttackTarget ()Z ga
	hurt (Lnet/minecraft/world/damagesource/DamageSource;F)Z a
	isMoving ()Z fZ
	onSyncedDataUpdated (Lnet/minecraft/network/syncher/EntityDataAccessor;)V a
	registerGoals ()V x
	setActiveAttackTarget (I)V b
	setMoving (Z)V w
	travel (Lnet/minecraft/world/phys/Vec3;)V h
net/minecraft/world/entity/monster/Guardian$GuardianAttackGoal bvy$a
	attackTime b
	elder c
	guardian a
	canContinueToUse ()Z b
	canUse ()Z a
	requiresUpdateEveryTick ()Z K_
	start ()V c
	stop ()V d
	tick ()V e
net/minecraft/world/entity/monster/Guardian$GuardianAttackSelector bvy$b
	guardian a
	test (Lnet/minecraft/world/entity/LivingEntity;)Z a
net/minecraft/world/entity/monster/Guardian$GuardianMoveControl bvy$c
	guardian l
	tick ()V a
net/minecraft/world/entity/monster/Husk bvz
	checkHuskSpawnRules (Lnet/minecraft/world/entity/EntityType;Lnet/minecraft/world/level/ServerLevelAccessor;Lnet/minecraft/world/entity/MobSpawnType;Lnet/minecraft/core/BlockPos;Lnet/minecraft/util/RandomSource;)Z a
	convertsInWater ()Z fZ
	doHurtTarget (Lnet/minecraft/world/entity/Entity;)Z z
	doUnderWaterConversion ()V gb
	getAmbientSound ()Lnet/minecraft/sounds/SoundEvent; s
	getDeathSound ()Lnet/minecraft/sounds/SoundEvent; g_
	getHurtSound (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEvent; d
	getSkull ()Lnet/minecraft/world/item/ItemStack; fY
	getStepSound ()Lnet/minecraft/sounds/SoundEvent; w
	isSunSensitive ()Z X_
net/minecraft/world/entity/monster/Illusioner bwa
	ILLUSION_SPREAD bU
	ILLUSION_TRANSITION_TICKS bT
	NUM_ILLUSIONS e
	clientSideIllusionOffsets bW
	clientSideIllusionTicks bV
	aiStep ()V b_
	applyRaidBuffs (IZ)V a
	createAttributes ()Lnet/minecraft/world/entity/ai/attributes/AttributeSupplier$Builder; r
	defineSynchedData ()V a_
	finalizeSpawn (Lnet/minecraft/world/level/ServerLevelAccessor;Lnet/minecraft/world/DifficultyInstance;Lnet/minecraft/world/entity/MobSpawnType;Lnet/minecraft/world/entity/SpawnGroupData;Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/world/entity/SpawnGroupData; a
	getAmbientSound ()Lnet/minecraft/sounds/SoundEvent; s
	getArmPose ()Lnet/minecraft/world/entity/monster/AbstractIllager$IllagerArmPose; q
	getBoundingBoxForCulling ()Lnet/minecraft/world/phys/AABB; j_
	getCastingSoundEvent ()Lnet/minecraft/sounds/SoundEvent; fY
	getCelebrateSound ()Lnet/minecraft/sounds/SoundEvent; Y_
	getDeathSound ()Lnet/minecraft/sounds/SoundEvent; g_
	getHurtSound (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEvent; d
	getIllusionOffsets (F)[Lnet/minecraft/world/phys/Vec3; D
	isAlliedTo (Lnet/minecraft/world/entity/Entity;)Z p
	performRangedAttack (Lnet/minecraft/world/entity/LivingEntity;F)V a
	registerGoals ()V x
net/minecraft/world/entity/monster/Illusioner$IllusionerBlindnessSpellGoal bwa$a
	lastTargetId e
	canUse ()Z a
	getCastingInterval ()I i
	getCastingTime ()I h
	getSpell ()Lnet/minecraft/world/entity/monster/SpellcasterIllager$IllagerSpell; m
	getSpellPrepareSound ()Lnet/minecraft/sounds/SoundEvent; l
	performSpellCasting ()V k
	start ()V c
net/minecraft/world/entity/monster/Illusioner$IllusionerMirrorSpellGoal bwa$b
	canUse ()Z a
	getCastingInterval ()I i
	getCastingTime ()I h
	getSpell ()Lnet/minecraft/world/entity/monster/SpellcasterIllager$IllagerSpell; m
	getSpellPrepareSound ()Lnet/minecraft/sounds/SoundEvent; l
	performSpellCasting ()V k
net/minecraft/world/entity/monster/MagmaCube bwb
	checkMagmaCubeSpawnRules (Lnet/minecraft/world/entity/EntityType;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/world/entity/MobSpawnType;Lnet/minecraft/core/BlockPos;Lnet/minecraft/util/RandomSource;)Z b
	checkSpawnObstruction (Lnet/minecraft/world/level/LevelReader;)Z a
	createAttributes ()Lnet/minecraft/world/entity/ai/attributes/AttributeSupplier$Builder; q
	decreaseSquish ()V fV
	getAttackDamage ()F fX
	getDeathSound ()Lnet/minecraft/sounds/SoundEvent; g_
	getHurtSound (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEvent; d
	getJumpDelay ()I w
	getJumpSound ()Lnet/minecraft/sounds/SoundEvent; fZ
	getLightLevelDependentMagicValue ()F bj
	getParticleType ()Lnet/minecraft/core/particles/ParticleOptions; r
	getSquishSound ()Lnet/minecraft/sounds/SoundEvent; fY
	isDealsDamage ()Z fW
	isOnFire ()Z bL
	jumpFromGround ()V eW
	jumpInLiquid (Lnet/minecraft/tags/TagKey;)V c
	setSize (IZ)V a
net/minecraft/world/entity/monster/Monster bwc
	aiStep ()V b_
	checkAnyLightMonsterSpawnRules (Lnet/minecraft/world/entity/EntityType;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/world/entity/MobSpawnType;Lnet/minecraft/core/BlockPos;Lnet/minecraft/util/RandomSource;)Z c
	checkMonsterSpawnRules (Lnet/minecraft/world/entity/EntityType;Lnet/minecraft/world/level/ServerLevelAccessor;Lnet/minecraft/world/entity/MobSpawnType;Lnet/minecraft/core/BlockPos;Lnet/minecraft/util/RandomSource;)Z b
	createMonsterAttributes ()Lnet/minecraft/world/entity/ai/attributes/AttributeSupplier$Builder; ge
	getDeathSound ()Lnet/minecraft/sounds/SoundEvent; g_
	getFallSounds ()Lnet/minecraft/world/entity/LivingEntity$Fallsounds; eC
	getHurtSound (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEvent; d
	getProjectile (Lnet/minecraft/world/item/ItemStack;)Lnet/minecraft/world/item/ItemStack; g
	getSoundSource ()Lnet/minecraft/sounds/SoundSource; cY
	getSwimSound ()Lnet/minecraft/sounds/SoundEvent; aJ
	getSwimSplashSound ()Lnet/minecraft/sounds/SoundEvent; aK
	getWalkTargetValue (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/LevelReader;)F a
	isDarkEnoughToSpawn (Lnet/minecraft/world/level/ServerLevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/util/RandomSource;)Z a
	isPreventingPlayerRest (Lnet/minecraft/world/entity/player/Player;)Z f
	shouldDespawnInPeaceful ()Z U
	shouldDropExperience ()Z dY
	shouldDropLoot ()Z dZ
	updateNoActionTime ()V gd
net/minecraft/world/entity/monster/PatrollingMonster bwd
	patrolLeader c
	patrolTarget b
	patrolling d
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	canBeLeader ()Z fZ
	canJoinPatrol ()Z gf
	checkPatrollingMonsterSpawnRules (Lnet/minecraft/world/entity/EntityType;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/world/entity/MobSpawnType;Lnet/minecraft/core/BlockPos;Lnet/minecraft/util/RandomSource;)Z b
	finalizeSpawn (Lnet/minecraft/world/level/ServerLevelAccessor;Lnet/minecraft/world/DifficultyInstance;Lnet/minecraft/world/entity/MobSpawnType;Lnet/minecraft/world/entity/SpawnGroupData;Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/world/entity/SpawnGroupData; a
	findPatrolTarget ()V gg
	getMyRidingOffset ()D bw
	getPatrolTarget ()Lnet/minecraft/core/BlockPos; ga
	hasPatrolTarget ()Z gb
	isPatrolLeader ()Z gc
	isPatrolling ()Z gh
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	registerGoals ()V x
	removeWhenFarAway (D)Z h
	setPatrolLeader (Z)V w
	setPatrolTarget (Lnet/minecraft/core/BlockPos;)V i
	setPatrolling (Z)V x
net/minecraft/world/entity/monster/PatrollingMonster$LongDistancePatrolGoal bwd$a
	NAVIGATION_FAILED_COOLDOWN a
	cooldownUntil e
	leaderSpeedModifier d
	mob b
	speedModifier c
	canUse ()Z a
	findPatrolCompanions ()Ljava/util/List; h
	moveRandomly ()Z i
	start ()V c
	stop ()V d
	tick ()V e
net/minecraft/world/entity/monster/Phantom bwe
	FLAP_DEGREES_PER_TICK b
	ID_SIZE d
	TICKS_PER_FLAP c
	anchorPoint bS
	attackPhase bT
	moveTargetPoint e
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	aiStep ()V b_
	canAttackType (Lnet/minecraft/world/entity/EntityType;)Z a
	createBodyControl ()Lnet/minecraft/world/entity/ai/control/BodyRotationControl; D
	customServerAiStep ()V W
	defineSynchedData ()V a_
	finalizeSpawn (Lnet/minecraft/world/level/ServerLevelAccessor;Lnet/minecraft/world/DifficultyInstance;Lnet/minecraft/world/entity/MobSpawnType;Lnet/minecraft/world/entity/SpawnGroupData;Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/world/entity/SpawnGroupData; a
	getAmbientSound ()Lnet/minecraft/sounds/SoundEvent; s
	getDeathSound ()Lnet/minecraft/sounds/SoundEvent; g_
	getDimensions (Lnet/minecraft/world/entity/Pose;)Lnet/minecraft/world/entity/EntityDimensions; a
	getHurtSound (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEvent; d
	getMobType ()Lnet/minecraft/world/entity/MobType; eN
	getPassengersRidingOffset ()D bx
	getPhantomSize ()I q
	getSoundSource ()Lnet/minecraft/sounds/SoundSource; cY
	getSoundVolume ()F eR
	getStandingEyeHeight (Lnet/minecraft/world/entity/Pose;Lnet/minecraft/world/entity/EntityDimensions;)F b
	getUniqueFlapTickOffset ()I r
	isFlapping ()Z aP
	onSyncedDataUpdated (Lnet/minecraft/network/syncher/EntityDataAccessor;)V a
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	registerGoals ()V x
	setPhantomSize (I)V b
	shouldDespawnInPeaceful ()Z U
	shouldRenderAtSqrDistance (D)Z a
	tick ()V l
	updatePhantomSizeInfo ()V w
net/minecraft/world/entity/monster/Phantom$AttackPhase bwe$a
	$VALUES c
	CIRCLE a
	SWOOP b
	$values ()[Lnet/minecraft/world/entity/monster/Phantom$AttackPhase; a
net/minecraft/world/entity/monster/Phantom$PhantomAttackPlayerTargetGoal bwe$b
	attackTargeting b
	nextScanTick c
	canContinueToUse ()Z b
	canUse ()Z a
net/minecraft/world/entity/monster/Phantom$PhantomAttackStrategyGoal bwe$c
	nextSweepTick b
	canUse ()Z a
	setAnchorAboveTarget ()V h
	start ()V c
	stop ()V d
	tick ()V e
net/minecraft/world/entity/monster/Phantom$PhantomBodyRotationControl bwe$d
	clientTick ()V a
net/minecraft/world/entity/monster/Phantom$PhantomCircleAroundAnchorGoal bwe$e
	angle c
	clockwise f
	distance d
	height e
	canUse ()Z a
	selectNext ()V i
	start ()V c
	tick ()V e
net/minecraft/world/entity/monster/Phantom$PhantomLookControl bwe$f
	tick ()V a
net/minecraft/world/entity/monster/Phantom$PhantomMoveControl bwe$g
	speed m
	tick ()V a
net/minecraft/world/entity/monster/Phantom$PhantomMoveTargetGoal bwe$h
	touchingTarget ()Z h
net/minecraft/world/entity/monster/Phantom$PhantomSweepAttackGoal bwe$i
	CAT_SEARCH_TICK_DELAY c
	catSearchTick e
	isScaredOfCat d
	canContinueToUse ()Z b
	canUse ()Z a
	start ()V c
	stop ()V d
	tick ()V e
net/minecraft/world/entity/monster/Pillager bwf
	CROSSBOW_POWER bU
	INVENTORY_SIZE e
	IS_CHARGING_CROSSBOW b
	SLOT_OFFSET bT
	inventory bV
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	applyRaidBuffs (IZ)V a
	canFireProjectileWeapon (Lnet/minecraft/world/item/ProjectileWeaponItem;)Z a
	createAttributes ()Lnet/minecraft/world/entity/ai/attributes/AttributeSupplier$Builder; r
	defineSynchedData ()V a_
	enchantSpawnedWeapon (Lnet/minecraft/util/RandomSource;F)V a
	finalizeSpawn (Lnet/minecraft/world/level/ServerLevelAccessor;Lnet/minecraft/world/DifficultyInstance;Lnet/minecraft/world/entity/MobSpawnType;Lnet/minecraft/world/entity/SpawnGroupData;Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/world/entity/SpawnGroupData; a
	getAmbientSound ()Lnet/minecraft/sounds/SoundEvent; s
	getArmPose ()Lnet/minecraft/world/entity/monster/AbstractIllager$IllagerArmPose; q
	getCelebrateSound ()Lnet/minecraft/sounds/SoundEvent; Y_
	getDeathSound ()Lnet/minecraft/sounds/SoundEvent; g_
	getHurtSound (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEvent; d
	getInventory ()Lnet/minecraft/world/SimpleContainer; w
	getMaxSpawnClusterSize ()I fE
	getSlot (I)Lnet/minecraft/world/entity/SlotAccess; a_
	getWalkTargetValue (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/LevelReader;)F a
	isAlliedTo (Lnet/minecraft/world/entity/Entity;)Z p
	isChargingCrossbow ()Z fY
	onCrossbowAttackPerformed ()V a
	performRangedAttack (Lnet/minecraft/world/entity/LivingEntity;F)V a
	pickUpItem (Lnet/minecraft/world/entity/item/ItemEntity;)V b
	populateDefaultEquipmentSlots (Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/DifficultyInstance;)V a
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	registerGoals ()V x
	setChargingCrossbow (Z)V b
	shootCrossbowProjectile (Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/entity/projectile/Projectile;F)V a
	wantsItem (Lnet/minecraft/world/item/ItemStack;)Z l
net/minecraft/world/entity/monster/RangedAttackMob bwg
	performRangedAttack (Lnet/minecraft/world/entity/LivingEntity;F)V a
net/minecraft/world/entity/monster/Ravager bwh
	ATTACK_DURATION bZ
	ATTACK_MOVEMENT_SPEED bU
	BASE_MOVEMENT_SPEED bT
	NO_RAVAGER_AND_ALIVE e
	STUNNED_COLOR bV
	STUNNED_COLOR_BLUE bW
	STUNNED_COLOR_GREEN bX
	STUNNED_COLOR_RED bY
	STUN_DURATION b
	attackTick ca
	roarTick cc
	stunnedTick cb
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	aiStep ()V b_
	applyRaidBuffs (IZ)V a
	blockedByShield (Lnet/minecraft/world/entity/LivingEntity;)V e
	canBeLeader ()Z fZ
	checkSpawnObstruction (Lnet/minecraft/world/level/LevelReader;)Z a
	createAttributes ()Lnet/minecraft/world/entity/ai/attributes/AttributeSupplier$Builder; q
	doHurtTarget (Lnet/minecraft/world/entity/Entity;)Z z
	getAmbientSound ()Lnet/minecraft/sounds/SoundEvent; s
	getAttackTick ()I r
	getCelebrateSound ()Lnet/minecraft/sounds/SoundEvent; Y_
	getControllingPassenger ()Lnet/minecraft/world/entity/LivingEntity; cL
	getDeathSound ()Lnet/minecraft/sounds/SoundEvent; g_
	getHurtSound (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEvent; d
	getMaxHeadYRot ()I fC
	getPassengersRidingOffset ()D bx
	getRoarTick ()I gi
	getStunnedTick ()I fY
	handleEntityEvent (B)V b
	hasLineOfSight (Lnet/minecraft/world/entity/Entity;)Z B
	isImmobile ()Z eT
	playStepSound (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V b
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	registerGoals ()V x
	roar ()V gk
	strongKnockback (Lnet/minecraft/world/entity/Entity;)V a
	stunEffect ()V gj
	updateControlFlags ()V P
net/minecraft/world/entity/monster/Ravager$RavagerMeleeAttackGoal bwh$a
	getAttackReachSqr (Lnet/minecraft/world/entity/LivingEntity;)D a
net/minecraft/world/entity/monster/Shulker bwi
	COVERED_ARMOR_MODIFIER bT
	COVERED_ARMOR_MODIFIER_UUID e
	DATA_ATTACH_FACE_ID b
	DATA_COLOR_ID d
	DATA_PEEK_ID c
	DEFAULT_COLOR bW
	FORWARD cb
	MAX_LID_OPEN cg
	MAX_TELEPORT_DISTANCE bX
	NO_COLOR bV
	OTHER_SHULKER_LIMIT bZ
	OTHER_SHULKER_SCAN_RADIUS bY
	PEEK_PER_TICK ca
	TELEPORT_STEPS bU
	clientOldAttachPosition ce
	clientSideTeleportInterpolation cf
	currentPeekAmount cd
	currentPeekAmountO cc
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	canBeCollidedWith ()Z bu
	canStayAt (Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;)Z a
	createAttributes ()Lnet/minecraft/world/entity/ai/attributes/AttributeSupplier$Builder; q
	createBodyControl ()Lnet/minecraft/world/entity/ai/control/BodyRotationControl; D
	defineSynchedData ()V a_
	finalizeSpawn (Lnet/minecraft/world/level/ServerLevelAccessor;Lnet/minecraft/world/DifficultyInstance;Lnet/minecraft/world/entity/MobSpawnType;Lnet/minecraft/world/entity/SpawnGroupData;Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/world/entity/SpawnGroupData; a
	findAttachableSurface (Lnet/minecraft/core/BlockPos;)Lnet/minecraft/core/Direction; i
	findNewAttachment ()V ga
	getAmbientSound ()Lnet/minecraft/sounds/SoundEvent; s
	getAttachFace ()Lnet/minecraft/core/Direction; w
	getClientPeekAmount (F)F D
	getColor ()Lnet/minecraft/world/item/DyeColor; fZ
	getDeathSound ()Lnet/minecraft/sounds/SoundEvent; g_
	getDeltaMovement ()Lnet/minecraft/world/phys/Vec3; dl
	getHurtSound (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEvent; d
	getMaxHeadXRot ()I X
	getMaxHeadYRot ()I fC
	getMovementEmission ()Lnet/minecraft/world/entity/Entity$MovementEmission; aS
	getMyRidingOffset ()D bw
	getPhysicalPeek (F)F F
	getPickRadius ()F bC
	getProgressAabb (Lnet/minecraft/core/Direction;F)Lnet/minecraft/world/phys/AABB; a
	getProgressDeltaAabb (Lnet/minecraft/core/Direction;FF)Lnet/minecraft/world/phys/AABB; a
	getRawPeekAmount ()I gf
	getRenderPosition (F)Ljava/util/Optional; E
	getSoundSource ()Lnet/minecraft/sounds/SoundSource; cY
	getStandingEyeHeight (Lnet/minecraft/world/entity/Pose;Lnet/minecraft/world/entity/EntityDimensions;)F b
	getVariant ()Ljava/lang/Object; c
	getVariant ()Ljava/util/Optional; fY
	hitByShulkerBullet ()V ge
	hurt (Lnet/minecraft/world/damagesource/DamageSource;F)Z a
	isClosed ()Z gd
	isPositionBlocked (Lnet/minecraft/core/BlockPos;)Z j
	lerpTo (DDDFFIZ)V a
	makeBoundingBox ()Lnet/minecraft/world/phys/AABB; am
	move (Lnet/minecraft/world/entity/MoverType;Lnet/minecraft/world/phys/Vec3;)V a
	onPeekAmountChange ()V gc
	onSyncedDataUpdated (Lnet/minecraft/network/syncher/EntityDataAccessor;)V a
	playAmbientSound ()V N
	push (Lnet/minecraft/world/entity/Entity;)V g
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	recreateFromPacket (Lnet/minecraft/network/protocol/game/ClientboundAddEntityPacket;)V a
	registerGoals ()V x
	setAttachFace (Lnet/minecraft/core/Direction;)V a
	setDeltaMovement (Lnet/minecraft/world/phys/Vec3;)V f
	setPos (DDD)V e
	setRawPeekAmount (I)V b
	setVariant (Ljava/lang/Object;)V a
	setVariant (Ljava/util/Optional;)V a
	startRiding (Lnet/minecraft/world/entity/Entity;Z)Z a
	stopRiding ()V Y
	teleportSomewhere ()Z r
	tick ()V l
	updatePeekAmount ()Z gb
net/minecraft/world/entity/monster/Shulker$ShulkerAttackGoal bwi$a
	attackTime b
	canUse ()Z a
	requiresUpdateEveryTick ()Z K_
	start ()V c
	stop ()V d
	tick ()V e
net/minecraft/world/entity/monster/Shulker$ShulkerBodyRotationControl bwi$b
	clientTick ()V a
net/minecraft/world/entity/monster/Shulker$ShulkerDefenseAttackGoal bwi$c
	canUse ()Z a
	getTargetSearchArea (D)Lnet/minecraft/world/phys/AABB; a
net/minecraft/world/entity/monster/Shulker$ShulkerLookControl bwi$d
	clampHeadRotationToBody ()V b
	getXRotD ()Ljava/util/Optional; h
	getYRotD ()Ljava/util/Optional; i
net/minecraft/world/entity/monster/Shulker$ShulkerNearestAttackGoal bwi$e
	canUse ()Z a
	getTargetSearchArea (D)Lnet/minecraft/world/phys/AABB; a
net/minecraft/world/entity/monster/Shulker$ShulkerPeekGoal bwi$f
	peekTime b
	canContinueToUse ()Z b
	canUse ()Z a
	start ()V c
	stop ()V d
	tick ()V e
net/minecraft/world/entity/monster/Silverfish bwj
	friendsGoal b
	checkSilverfishSpawnRules (Lnet/minecraft/world/entity/EntityType;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/world/entity/MobSpawnType;Lnet/minecraft/core/BlockPos;Lnet/minecraft/util/RandomSource;)Z b
	createAttributes ()Lnet/minecraft/world/entity/ai/attributes/AttributeSupplier$Builder; q
	getAmbientSound ()Lnet/minecraft/sounds/SoundEvent; s
	getDeathSound ()Lnet/minecraft/sounds/SoundEvent; g_
	getHurtSound (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEvent; d
	getMobType ()Lnet/minecraft/world/entity/MobType; eN
	getMovementEmission ()Lnet/minecraft/world/entity/Entity$MovementEmission; aS
	getMyRidingOffset ()D bw
	getStandingEyeHeight (Lnet/minecraft/world/entity/Pose;Lnet/minecraft/world/entity/EntityDimensions;)F b
	getWalkTargetValue (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/LevelReader;)F a
	hurt (Lnet/minecraft/world/damagesource/DamageSource;F)Z a
	playStepSound (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V b
	registerGoals ()V x
	setYBodyRot (F)V o
	tick ()V l
net/minecraft/world/entity/monster/Silverfish$SilverfishMergeWithStoneGoal bwj$a
	doMerge j
	selectedDirection i
	canContinueToUse ()Z b
	canUse ()Z a
	start ()V c
net/minecraft/world/entity/monster/Silverfish$SilverfishWakeUpFriendsGoal bwj$b
	lookForFriends b
	silverfish a
	canUse ()Z a
	notifyHurt ()V h
	tick ()V e
net/minecraft/world/entity/monster/Skeleton bwk
	CONVERSION_TAG b
	DATA_STRAY_CONVERSION_ID d
	TOTAL_CONVERSION_TIME c
	conversionTime bT
	inPowderSnowTime e
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	canFreeze ()Z dw
	defineSynchedData ()V a_
	doFreezeConversion ()V ga
	dropCustomDeathLoot (Lnet/minecraft/world/damagesource/DamageSource;IZ)V a
	getAmbientSound ()Lnet/minecraft/sounds/SoundEvent; s
	getDeathSound ()Lnet/minecraft/sounds/SoundEvent; g_
	getHurtSound (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEvent; d
	getStepSound ()Lnet/minecraft/sounds/SoundEvent; r
	isFreezeConverting ()Z fZ
	isShaking ()Z fY
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	setFreezeConverting (Z)V w
	startFreezeConversion (I)V b
	tick ()V l
net/minecraft/world/entity/monster/Slime bwl
	ID_SIZE bT
	MAX_SIZE c
	MIN_SIZE b
	oSquish bS
	squish e
	targetSquish d
	wasOnGround bU
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	checkSlimeSpawnRules (Lnet/minecraft/world/entity/EntityType;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/world/entity/MobSpawnType;Lnet/minecraft/core/BlockPos;Lnet/minecraft/util/RandomSource;)Z c
	dealDamage (Lnet/minecraft/world/entity/LivingEntity;)V l
	decreaseSquish ()V fV
	defineSynchedData ()V a_
	doPlayJumpSound ()Z gc
	finalizeSpawn (Lnet/minecraft/world/level/ServerLevelAccessor;Lnet/minecraft/world/DifficultyInstance;Lnet/minecraft/world/entity/MobSpawnType;Lnet/minecraft/world/entity/SpawnGroupData;Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/world/entity/SpawnGroupData; a
	getAttackDamage ()F fX
	getDeathSound ()Lnet/minecraft/sounds/SoundEvent; g_
	getDimensions (Lnet/minecraft/world/entity/Pose;)Lnet/minecraft/world/entity/EntityDimensions; a
	getHurtSound (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEvent; d
	getJumpDelay ()I w
	getJumpSound ()Lnet/minecraft/sounds/SoundEvent; fZ
	getMaxHeadXRot ()I X
	getParticleType ()Lnet/minecraft/core/particles/ParticleOptions; r
	getSize ()I ga
	getSoundPitch ()F q
	getSoundVolume ()F eR
	getSquishSound ()Lnet/minecraft/sounds/SoundEvent; fY
	getStandingEyeHeight (Lnet/minecraft/world/entity/Pose;Lnet/minecraft/world/entity/EntityDimensions;)F b
	getType ()Lnet/minecraft/world/entity/EntityType; ae
	isDealsDamage ()Z fW
	isTiny ()Z gb
	jumpFromGround ()V eW
	onSyncedDataUpdated (Lnet/minecraft/network/syncher/EntityDataAccessor;)V a
	playerTouch (Lnet/minecraft/world/entity/player/Player;)V b_
	push (Lnet/minecraft/world/entity/Entity;)V g
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	refreshDimensions ()V d_
	registerGoals ()V x
	remove (Lnet/minecraft/world/entity/Entity$RemovalReason;)V a
	setSize (IZ)V a
	shouldDespawnInPeaceful ()Z U
	tick ()V l
net/minecraft/world/entity/monster/Slime$SlimeAttackGoal bwl$a
	growTiredTimer b
	slime a
	canContinueToUse ()Z b
	canUse ()Z a
	requiresUpdateEveryTick ()Z K_
	start ()V c
	tick ()V e
net/minecraft/world/entity/monster/Slime$SlimeFloatGoal bwl$b
	slime a
	canUse ()Z a
	requiresUpdateEveryTick ()Z K_
	tick ()V e
net/minecraft/world/entity/monster/Slime$SlimeKeepOnJumpingGoal bwl$c
	slime a
	canUse ()Z a
	tick ()V e
net/minecraft/world/entity/monster/Slime$SlimeMoveControl bwl$d
	isAggressive o
	jumpDelay m
	slime n
	yRot l
	setDirection (FZ)V a
	setWantedMovement (D)V a
	tick ()V a
net/minecraft/world/entity/monster/Slime$SlimeRandomDirectionGoal bwl$e
	chosenDegrees b
	nextRandomizeTime c
	slime a
	canUse ()Z a
	tick ()V e
net/minecraft/world/entity/monster/SpellcasterIllager bwm
	DATA_SPELL_CASTING_ID e
	currentSpell bT
	spellCastingTickCount b
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	customServerAiStep ()V W
	defineSynchedData ()V a_
	getArmPose ()Lnet/minecraft/world/entity/monster/AbstractIllager$IllagerArmPose; q
	getCastingSoundEvent ()Lnet/minecraft/sounds/SoundEvent; fY
	getCurrentSpell ()Lnet/minecraft/world/entity/monster/SpellcasterIllager$IllagerSpell; gj
	getSpellCastingTime ()I gk
	isCastingSpell ()Z gi
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	setIsCastingSpell (Lnet/minecraft/world/entity/monster/SpellcasterIllager$IllagerSpell;)V a
	tick ()V l
net/minecraft/world/entity/monster/SpellcasterIllager$IllagerSpell bwm$a
	$VALUES j
	BLINDNESS f
	BY_ID g
	DISAPPEAR e
	FANGS c
	NONE a
	SUMMON_VEX b
	WOLOLO d
	id h
	spellColor i
	$values ()[Lnet/minecraft/world/entity/monster/SpellcasterIllager$IllagerSpell; a
	byId (I)Lnet/minecraft/world/entity/monster/SpellcasterIllager$IllagerSpell; a
net/minecraft/world/entity/monster/SpellcasterIllager$SpellcasterCastingSpellGoal bwm$b
	canUse ()Z a
	start ()V c
	stop ()V d
	tick ()V e
net/minecraft/world/entity/monster/SpellcasterIllager$SpellcasterUseSpellGoal bwm$c
	attackWarmupDelay b
	nextAttackTickCount c
	canContinueToUse ()Z b
	canUse ()Z a
	getCastWarmupTime ()I n
	getCastingInterval ()I i
	getCastingTime ()I h
	getSpell ()Lnet/minecraft/world/entity/monster/SpellcasterIllager$IllagerSpell; m
	getSpellPrepareSound ()Lnet/minecraft/sounds/SoundEvent; l
	performSpellCasting ()V k
	start ()V c
	tick ()V e
net/minecraft/world/entity/monster/Spider bwn
	DATA_FLAGS_ID b
	SPIDER_SPECIAL_EFFECT_CHANCE c
	canBeAffected (Lnet/minecraft/world/effect/MobEffectInstance;)Z c
	createAttributes ()Lnet/minecraft/world/entity/ai/attributes/AttributeSupplier$Builder; r
	createNavigation (Lnet/minecraft/world/level/Level;)Lnet/minecraft/world/entity/ai/navigation/PathNavigation; b
	defineSynchedData ()V a_
	finalizeSpawn (Lnet/minecraft/world/level/ServerLevelAccessor;Lnet/minecraft/world/DifficultyInstance;Lnet/minecraft/world/entity/MobSpawnType;Lnet/minecraft/world/entity/SpawnGroupData;Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/world/entity/SpawnGroupData; a
	getAmbientSound ()Lnet/minecraft/sounds/SoundEvent; s
	getDeathSound ()Lnet/minecraft/sounds/SoundEvent; g_
	getHurtSound (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEvent; d
	getMobType ()Lnet/minecraft/world/entity/MobType; eN
	getPassengersRidingOffset ()D bx
	getStandingEyeHeight (Lnet/minecraft/world/entity/Pose;Lnet/minecraft/world/entity/EntityDimensions;)F b
	isClimbing ()Z w
	makeStuckInBlock (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/phys/Vec3;)V a
	onClimbable ()Z i_
	playStepSound (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V b
	registerGoals ()V x
	setClimbing (Z)V w
	tick ()V l
net/minecraft/world/entity/monster/Spider$SpiderAttackGoal bwn$a
	canContinueToUse ()Z b
	canUse ()Z a
	getAttackReachSqr (Lnet/minecraft/world/entity/LivingEntity;)D a
net/minecraft/world/entity/monster/Spider$SpiderEffectsGroupData bwn$b
	effect a
	setRandomEffect (Lnet/minecraft/util/RandomSource;)V a
net/minecraft/world/entity/monster/Spider$SpiderTargetGoal bwn$c
	canUse ()Z a
net/minecraft/world/entity/monster/Stray bwo
	checkStraySpawnRules (Lnet/minecraft/world/entity/EntityType;Lnet/minecraft/world/level/ServerLevelAccessor;Lnet/minecraft/world/entity/MobSpawnType;Lnet/minecraft/core/BlockPos;Lnet/minecraft/util/RandomSource;)Z a
	getAmbientSound ()Lnet/minecraft/sounds/SoundEvent; s
	getArrow (Lnet/minecraft/world/item/ItemStack;F)Lnet/minecraft/world/entity/projectile/AbstractArrow; b
	getDeathSound ()Lnet/minecraft/sounds/SoundEvent; g_
	getHurtSound (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEvent; d
	getStepSound ()Lnet/minecraft/sounds/SoundEvent; r
net/minecraft/world/entity/monster/Strider bwp
	DATA_BOOST_TIME ca
	DATA_SADDLE_ID cc
	DATA_SUFFOCATING cb
	FOOD_ITEMS bY
	STEERING_MODIFIER bX
	SUFFOCATE_STEERING_MODIFIER bW
	SUFFOCATING_MODIFIER bU
	SUFFOCATING_MODIFIER_UUID bT
	TEMPT_ITEMS bZ
	panicGoal cf
	steering cd
	temptGoal ce
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	boost ()Z a
	canAddPassenger (Lnet/minecraft/world/entity/Entity;)Z o
	canStandOnFluid (Lnet/minecraft/world/level/material/FluidState;)Z a
	checkFallDamage (DZLnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/BlockPos;)V a
	checkSpawnObstruction (Lnet/minecraft/world/level/LevelReader;)Z a
	checkStriderSpawnRules (Lnet/minecraft/world/entity/EntityType;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/world/entity/MobSpawnType;Lnet/minecraft/core/BlockPos;Lnet/minecraft/util/RandomSource;)Z c
	createAttributes ()Lnet/minecraft/world/entity/ai/attributes/AttributeSupplier$Builder; r
	createNavigation (Lnet/minecraft/world/level/Level;)Lnet/minecraft/world/entity/ai/navigation/PathNavigation; b
	defineSynchedData ()V a_
	dropEquipment ()V eu
	equipSaddle (Lnet/minecraft/sounds/SoundSource;)V a
	finalizeSpawn (Lnet/minecraft/world/level/ServerLevelAccessor;Lnet/minecraft/world/DifficultyInstance;Lnet/minecraft/world/entity/MobSpawnType;Lnet/minecraft/world/entity/SpawnGroupData;Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/world/entity/SpawnGroupData; a
	floatStrider ()V ge
	getAmbientSound ()Lnet/minecraft/sounds/SoundEvent; s
	getBreedOffspring (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/AgeableMob;)Lnet/minecraft/world/entity/AgeableMob; a
	getBreedOffspring (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/AgeableMob;)Lnet/minecraft/world/entity/monster/Strider; b
	getControllingPassenger ()Lnet/minecraft/world/entity/LivingEntity; cL
	getDeathSound ()Lnet/minecraft/sounds/SoundEvent; g_
	getDismountLocationForPassenger (Lnet/minecraft/world/entity/LivingEntity;)Lnet/minecraft/world/phys/Vec3; b
	getHurtSound (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEvent; d
	getLeashOffset ()Lnet/minecraft/world/phys/Vec3; cG
	getPassengersRidingOffset ()D bx
	getRiddenInput (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/phys/Vec3;)Lnet/minecraft/world/phys/Vec3; b
	getRiddenSpeed (Lnet/minecraft/world/entity/player/Player;)F e
	getWalkTargetValue (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/LevelReader;)F a
	isBeingTempted ()Z fY
	isFood (Lnet/minecraft/world/item/ItemStack;)Z m
	isOnFire ()Z bL
	isPanicking ()Z w
	isSaddleable ()Z g
	isSaddled ()Z i
	isSensitiveToWater ()Z fb
	isSuffocating ()Z q
	mobInteract (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResult; b
	nextStep ()F aI
	onSyncedDataUpdated (Lnet/minecraft/network/syncher/EntityDataAccessor;)V a
	playStepSound (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V b
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	registerGoals ()V x
	setSuffocating (Z)V w
	shouldPassengersInheritMalus ()Z z
	spawnJockey (Lnet/minecraft/world/level/ServerLevelAccessor;Lnet/minecraft/world/DifficultyInstance;Lnet/minecraft/world/entity/Mob;Lnet/minecraft/world/entity/SpawnGroupData;)Lnet/minecraft/world/entity/SpawnGroupData; a
	tick ()V l
	tickRidden (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/phys/Vec3;)V a
net/minecraft/world/entity/monster/Strider$StriderGoToLavaGoal bwp$a
	strider g
	canContinueToUse ()Z b
	canUse ()Z a
	getMoveToTarget ()Lnet/minecraft/core/BlockPos; k
	isValidTarget (Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;)Z a
	shouldRecalculatePath ()Z l
net/minecraft/world/entity/monster/Strider$StriderPathNavigation bwp$b
	createPathFinder (I)Lnet/minecraft/world/level/pathfinder/PathFinder; a
	hasValidPathType (Lnet/minecraft/world/level/pathfinder/BlockPathTypes;)Z a
	isStableDestination (Lnet/minecraft/core/BlockPos;)Z a
net/minecraft/world/entity/monster/Vex bwq
	DATA_FLAGS_ID d
	FLAG_IS_CHARGING e
	FLAP_DEGREES_PER_TICK b
	RIDING_OFFSET bT
	TICKS_PER_FLAP c
	boundOrigin bV
	hasLimitedLife bW
	limitedLifeTicks bX
	owner bU
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	createAttributes ()Lnet/minecraft/world/entity/ai/attributes/AttributeSupplier$Builder; q
	defineSynchedData ()V a_
	finalizeSpawn (Lnet/minecraft/world/level/ServerLevelAccessor;Lnet/minecraft/world/DifficultyInstance;Lnet/minecraft/world/entity/MobSpawnType;Lnet/minecraft/world/entity/SpawnGroupData;Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/world/entity/SpawnGroupData; a
	getAmbientSound ()Lnet/minecraft/sounds/SoundEvent; s
	getBoundOrigin ()Lnet/minecraft/core/BlockPos; w
	getDeathSound ()Lnet/minecraft/sounds/SoundEvent; g_
	getHurtSound (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEvent; d
	getLightLevelDependentMagicValue ()F bj
	getMyRidingOffset ()D bw
	getOwner ()Lnet/minecraft/world/entity/Entity; v
	getOwner ()Lnet/minecraft/world/entity/Mob; r
	getStandingEyeHeight (Lnet/minecraft/world/entity/Pose;Lnet/minecraft/world/entity/EntityDimensions;)F b
	getVexFlag (I)Z c
	isCharging ()Z fY
	isFlapping ()Z aP
	move (Lnet/minecraft/world/entity/MoverType;Lnet/minecraft/world/phys/Vec3;)V a
	populateDefaultEquipmentSlots (Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/DifficultyInstance;)V a
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	registerGoals ()V x
	setBoundOrigin (Lnet/minecraft/core/BlockPos;)V i
	setIsCharging (Z)V w
	setLimitedLife (I)V b
	setOwner (Lnet/minecraft/world/entity/Mob;)V a
	setVexFlag (IZ)V a
	tick ()V l
net/minecraft/world/entity/monster/Vex$VexChargeAttackGoal bwq$a
	canContinueToUse ()Z b
	canUse ()Z a
	requiresUpdateEveryTick ()Z K_
	start ()V c
	stop ()V d
	tick ()V e
net/minecraft/world/entity/monster/Vex$VexCopyOwnerTargetGoal bwq$b
	copyOwnerTargeting b
	canUse ()Z a
	start ()V c
net/minecraft/world/entity/monster/Vex$VexMoveControl bwq$c
	tick ()V a
net/minecraft/world/entity/monster/Vex$VexRandomMoveGoal bwq$d
	canContinueToUse ()Z b
	canUse ()Z a
	tick ()V e
net/minecraft/world/entity/monster/Vindicator bwr
	DOOR_BREAKING_PREDICATE e
	TAG_JOHNNY b
	isJohnny bT
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	applyRaidBuffs (IZ)V a
	createAttributes ()Lnet/minecraft/world/entity/ai/attributes/AttributeSupplier$Builder; r
	customServerAiStep ()V W
	finalizeSpawn (Lnet/minecraft/world/level/ServerLevelAccessor;Lnet/minecraft/world/DifficultyInstance;Lnet/minecraft/world/entity/MobSpawnType;Lnet/minecraft/world/entity/SpawnGroupData;Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/world/entity/SpawnGroupData; a
	getAmbientSound ()Lnet/minecraft/sounds/SoundEvent; s
	getArmPose ()Lnet/minecraft/world/entity/monster/AbstractIllager$IllagerArmPose; q
	getCelebrateSound ()Lnet/minecraft/sounds/SoundEvent; Y_
	getDeathSound ()Lnet/minecraft/sounds/SoundEvent; g_
	getHurtSound (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEvent; d
	isAlliedTo (Lnet/minecraft/world/entity/Entity;)Z p
	populateDefaultEquipmentSlots (Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/DifficultyInstance;)V a
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	registerGoals ()V x
	setCustomName (Lnet/minecraft/network/chat/Component;)V b
net/minecraft/world/entity/monster/Vindicator$VindicatorBreakDoorGoal bwr$a
	canContinueToUse ()Z b
	canUse ()Z a
	start ()V c
net/minecraft/world/entity/monster/Vindicator$VindicatorJohnnyAttackGoal bwr$b
	canUse ()Z a
	start ()V c
net/minecraft/world/entity/monster/Vindicator$VindicatorMeleeAttackGoal bwr$c
	getAttackReachSqr (Lnet/minecraft/world/entity/LivingEntity;)D a
net/minecraft/world/entity/monster/Witch bws
	DATA_USING_ITEM bT
	SPEED_MODIFIER_DRINKING e
	SPEED_MODIFIER_DRINKING_UUID b
	attackPlayersGoal bW
	healRaidersGoal bV
	usingTime bU
	aiStep ()V b_
	applyRaidBuffs (IZ)V a
	canBeLeader ()Z fZ
	createAttributes ()Lnet/minecraft/world/entity/ai/attributes/AttributeSupplier$Builder; r
	defineSynchedData ()V a_
	getAmbientSound ()Lnet/minecraft/sounds/SoundEvent; s
	getCelebrateSound ()Lnet/minecraft/sounds/SoundEvent; Y_
	getDamageAfterMagicAbsorb (Lnet/minecraft/world/damagesource/DamageSource;F)F e
	getDeathSound ()Lnet/minecraft/sounds/SoundEvent; g_
	getHurtSound (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEvent; d
	getStandingEyeHeight (Lnet/minecraft/world/entity/Pose;Lnet/minecraft/world/entity/EntityDimensions;)F b
	handleEntityEvent (B)V b
	isDrinkingPotion ()Z q
	performRangedAttack (Lnet/minecraft/world/entity/LivingEntity;F)V a
	registerGoals ()V x
	setUsingItem (Z)V y
net/minecraft/world/entity/monster/WitherSkeleton bwt
	canBeAffected (Lnet/minecraft/world/effect/MobEffectInstance;)Z c
	doHurtTarget (Lnet/minecraft/world/entity/Entity;)Z z
	dropCustomDeathLoot (Lnet/minecraft/world/damagesource/DamageSource;IZ)V a
	finalizeSpawn (Lnet/minecraft/world/level/ServerLevelAccessor;Lnet/minecraft/world/DifficultyInstance;Lnet/minecraft/world/entity/MobSpawnType;Lnet/minecraft/world/entity/SpawnGroupData;Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/world/entity/SpawnGroupData; a
	getAmbientSound ()Lnet/minecraft/sounds/SoundEvent; s
	getArrow (Lnet/minecraft/world/item/ItemStack;F)Lnet/minecraft/world/entity/projectile/AbstractArrow; b
	getDeathSound ()Lnet/minecraft/sounds/SoundEvent; g_
	getHurtSound (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEvent; d
	getStandingEyeHeight (Lnet/minecraft/world/entity/Pose;Lnet/minecraft/world/entity/EntityDimensions;)F b
	getStepSound ()Lnet/minecraft/sounds/SoundEvent; r
	populateDefaultEquipmentEnchantments (Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/DifficultyInstance;)V b
	populateDefaultEquipmentSlots (Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/DifficultyInstance;)V a
	registerGoals ()V x
net/minecraft/world/entity/monster/Zoglin bwu
	ATTACK_DAMAGE bV
	ATTACK_DURATION bZ
	ATTACK_INTERVAL bX
	ATTACK_KNOCKBACK bT
	BABY_ATTACK_DAMAGE bW
	BABY_ATTACK_INTERVAL bY
	DATA_BABY_ID d
	KNOCKBACK_RESISTANCE bU
	MAX_HEALTH e
	MEMORY_TYPES c
	MOVEMENT_SPEED_WHEN_FIGHTING ca
	SENSOR_TYPES b
	SPEED_MULTIPLIER_WHEN_IDLING cb
	attackAnimationRemainingTicks cc
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	aiStep ()V b_
	blockedByShield (Lnet/minecraft/world/entity/LivingEntity;)V e
	brainProvider ()Lnet/minecraft/world/entity/ai/Brain$Provider; dL
	canBeLeashed (Lnet/minecraft/world/entity/player/Player;)Z a
	createAttributes ()Lnet/minecraft/world/entity/ai/attributes/AttributeSupplier$Builder; q
	customServerAiStep ()V W
	defineSynchedData ()V a_
	doHurtTarget (Lnet/minecraft/world/entity/Entity;)Z z
	findNearestValidAttackTarget ()Ljava/util/Optional; ga
	getAmbientSound ()Lnet/minecraft/sounds/SoundEvent; s
	getAttackAnimationRemainingTicks ()I fY
	getBrain ()Lnet/minecraft/world/entity/ai/Brain; dK
	getDeathSound ()Lnet/minecraft/sounds/SoundEvent; g_
	getHurtSound (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEvent; d
	getMobType ()Lnet/minecraft/world/entity/MobType; eN
	getPassengersRidingOffset ()D bx
	handleEntityEvent (B)V b
	hurt (Lnet/minecraft/world/damagesource/DamageSource;F)Z a
	initCoreActivity (Lnet/minecraft/world/entity/ai/Brain;)V a
	initFightActivity (Lnet/minecraft/world/entity/ai/Brain;)V c
	initIdleActivity (Lnet/minecraft/world/entity/ai/Brain;)V b
	isAdult ()Z r
	isBaby ()Z h_
	isTargetable (Lnet/minecraft/world/entity/LivingEntity;)Z l
	makeBrain (Lcom/mojang/serialization/Dynamic;)Lnet/minecraft/world/entity/ai/Brain; a
	onSyncedDataUpdated (Lnet/minecraft/network/syncher/EntityDataAccessor;)V a
	playAngrySound ()V fZ
	playStepSound (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V b
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	sendDebugPackets ()V V
	setAttackTarget (Lnet/minecraft/world/entity/LivingEntity;)V m
	setBaby (Z)V a
	updateActivity ()V w
net/minecraft/world/entity/monster/Zombie bwv
	BABY_EYE_HEIGHT_ADJUSTMENT bW
	BREAK_DOOR_CHANCE bZ
	DATA_BABY_ID d
	DATA_DROWNED_CONVERSION_ID bY
	DATA_SPECIAL_TYPE_ID bX
	DOOR_BREAKING_PREDICATE ca
	REINFORCEMENT_ATTEMPTS bT
	REINFORCEMENT_RANGE_MAX bU
	REINFORCEMENT_RANGE_MIN bV
	SPEED_MODIFIER_BABY c
	SPEED_MODIFIER_BABY_UUID b
	ZOMBIE_LEADER_CHANCE e
	breakDoorGoal cb
	canBreakDoors cc
	conversionTime ce
	inWaterTime cd
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	addBehaviourGoals ()V q
	aiStep ()V b_
	canBreakDoors ()Z gg
	canHoldItem (Lnet/minecraft/world/item/ItemStack;)Z j
	convertToZombieType (Lnet/minecraft/world/entity/EntityType;)V b
	convertsInWater ()Z fZ
	createAttributes ()Lnet/minecraft/world/entity/ai/attributes/AttributeSupplier$Builder; gc
	defineSynchedData ()V a_
	doHurtTarget (Lnet/minecraft/world/entity/Entity;)Z z
	doUnderWaterConversion ()V gb
	dropCustomDeathLoot (Lnet/minecraft/world/damagesource/DamageSource;IZ)V a
	finalizeSpawn (Lnet/minecraft/world/level/ServerLevelAccessor;Lnet/minecraft/world/DifficultyInstance;Lnet/minecraft/world/entity/MobSpawnType;Lnet/minecraft/world/entity/SpawnGroupData;Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/world/entity/SpawnGroupData; a
	getAmbientSound ()Lnet/minecraft/sounds/SoundEvent; s
	getDeathSound ()Lnet/minecraft/sounds/SoundEvent; g_
	getExperienceReward ()I ea
	getHurtSound (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEvent; d
	getMobType ()Lnet/minecraft/world/entity/MobType; eN
	getMyRidingOffset ()D bw
	getSkull ()Lnet/minecraft/world/item/ItemStack; fY
	getSpawnAsBabyOdds (Lnet/minecraft/util/RandomSource;)Z a
	getStandingEyeHeight (Lnet/minecraft/world/entity/Pose;Lnet/minecraft/world/entity/EntityDimensions;)F b
	getStepSound ()Lnet/minecraft/sounds/SoundEvent; w
	handleAttributes (F)V D
	hurt (Lnet/minecraft/world/damagesource/DamageSource;F)Z a
	isBaby ()Z h_
	isSunSensitive ()Z X_
	isUnderWaterConverting ()Z gf
	killedEntity (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)Z a
	onSyncedDataUpdated (Lnet/minecraft/network/syncher/EntityDataAccessor;)V a
	playStepSound (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V b
	populateDefaultEquipmentSlots (Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/DifficultyInstance;)V a
	randomizeReinforcementsChance ()V gh
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	registerGoals ()V x
	setBaby (Z)V a
	setCanBreakDoors (Z)V x
	startUnderWaterConversion (I)V b
	supportsBreakDoorGoal ()Z r
	tick ()V l
	wantsToPickUp (Lnet/minecraft/world/item/ItemStack;)Z k
net/minecraft/world/entity/monster/Zombie$ZombieAttackTurtleEggGoal bwv$a
	acceptedDistance ()D i
	playBreakSound (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)V a
	playDestroyProgressSound (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;)V a
net/minecraft/world/entity/monster/Zombie$ZombieGroupData bwv$b
	canSpawnJockey b
	isBaby a
net/minecraft/world/entity/monster/ZombieVillager bww
	DATA_CONVERTING_ID c
	DATA_VILLAGER_DATA d
	LOGGER b
	MAX_SPECIAL_BLOCKS_COUNT bZ
	SPECIAL_BLOCK_RADIUS ca
	VILLAGER_CONVERSION_WAIT_MAX bY
	VILLAGER_CONVERSION_WAIT_MIN bX
	conversionStarter cc
	gossips cd
	tradeOffers ce
	villagerConversionTime cb
	villagerXp cf
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	convertsInWater ()Z fZ
	defineSynchedData ()V a_
	finalizeSpawn (Lnet/minecraft/world/level/ServerLevelAccessor;Lnet/minecraft/world/DifficultyInstance;Lnet/minecraft/world/entity/MobSpawnType;Lnet/minecraft/world/entity/SpawnGroupData;Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/world/entity/SpawnGroupData; a
	finishConversion (Lnet/minecraft/server/level/ServerLevel;)V c
	getAmbientSound ()Lnet/minecraft/sounds/SoundEvent; s
	getConversionProgress ()I gl
	getDeathSound ()Lnet/minecraft/sounds/SoundEvent; g_
	getHurtSound (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEvent; d
	getSkull ()Lnet/minecraft/world/item/ItemStack; fY
	getStepSound ()Lnet/minecraft/sounds/SoundEvent; w
	getVillagerData ()Lnet/minecraft/world/entity/npc/VillagerData; gj
	getVillagerXp ()I gk
	getVoicePitch ()F eS
	handleEntityEvent (B)V b
	isConverting ()Z gi
	mobInteract (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResult; b
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	removeWhenFarAway (D)Z h
	setGossips (Lnet/minecraft/nbt/Tag;)V a
	setTradeOffers (Lnet/minecraft/nbt/CompoundTag;)V c
	setVillagerData (Lnet/minecraft/world/entity/npc/VillagerData;)V a
	setVillagerXp (I)V b
	startConverting (Ljava/util/UUID;I)V a
	tick ()V l
net/minecraft/world/entity/monster/ZombifiedPiglin bwx
	ALERT_INTERVAL cd
	ALERT_RANGE_Y cc
	FIRST_ANGER_SOUND_DELAY bX
	PERSISTENT_ANGER_TIME bZ
	SPEED_MODIFIER_ATTACKING d
	SPEED_MODIFIER_ATTACKING_UUID c
	ZOMBIFIED_PIGLIN_BABY_EYE_HEIGHT_ADJUSTMENT cg
	ZOMBIFIED_PIGLIN_EYE_HEIGHT cf
	persistentAngerTarget cb
	playFirstAngerSoundIn bY
	remainingPersistentAngerTime ca
	ticksUntilNextAlert ce
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	addBehaviourGoals ()V q
	alertOthers ()V gl
	checkSpawnObstruction (Lnet/minecraft/world/level/LevelReader;)Z a
	checkZombifiedPiglinSpawnRules (Lnet/minecraft/world/entity/EntityType;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/world/entity/MobSpawnType;Lnet/minecraft/core/BlockPos;Lnet/minecraft/util/RandomSource;)Z b
	convertsInWater ()Z fZ
	createAttributes ()Lnet/minecraft/world/entity/ai/attributes/AttributeSupplier$Builder; gi
	customServerAiStep ()V W
	getAmbientSound ()Lnet/minecraft/sounds/SoundEvent; s
	getDeathSound ()Lnet/minecraft/sounds/SoundEvent; g_
	getHurtSound (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEvent; d
	getMyRidingOffset ()D bw
	getPersistentAngerTarget ()Ljava/util/UUID; b
	getRemainingPersistentAngerTime ()I a
	getSkull ()Lnet/minecraft/world/item/ItemStack; fY
	getStandingEyeHeight (Lnet/minecraft/world/entity/Pose;Lnet/minecraft/world/entity/EntityDimensions;)F b
	isPreventingPlayerRest (Lnet/minecraft/world/entity/player/Player;)Z f
	maybeAlertOthers ()V gk
	maybePlayFirstAngerSound ()V gj
	playAngerSound ()V gm
	populateDefaultEquipmentSlots (Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/DifficultyInstance;)V a
	randomizeReinforcementsChance ()V gh
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	setPersistentAngerTarget (Ljava/util/UUID;)V a
	setRemainingPersistentAngerTime (I)V a
	setTarget (Lnet/minecraft/world/entity/LivingEntity;)V h
	startPersistentAngerTimer ()V c
	wantsToPickUp (Lnet/minecraft/world/item/ItemStack;)Z k
net/minecraft/world/entity/monster/hoglin/Hoglin bwy
	ATTACK_DAMAGE cc
	ATTACK_KNOCKBACK ca
	BABY_ATTACK_DAMAGE cd
	CONVERSION_TIME ce
	DATA_IMMUNE_TO_ZOMBIFICATION bW
	KNOCKBACK_RESISTANCE cb
	MAX_HEALTH bY
	MEMORY_TYPES bU
	MOVEMENT_SPEED_WHEN_FIGHTING bZ
	PROBABILITY_OF_SPAWNING_AS_BABY bX
	SENSOR_TYPES bT
	attackAnimationRemainingTicks cf
	cannotBeHunted ch
	timeInOverworld cg
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	ageBoundaryReached ()V m
	aiStep ()V b_
	blockedByShield (Lnet/minecraft/world/entity/LivingEntity;)V e
	brainProvider ()Lnet/minecraft/world/entity/ai/Brain$Provider; dL
	canBeHunted ()Z ge
	canBeLeashed (Lnet/minecraft/world/entity/player/Player;)Z a
	canFallInLove ()Z fZ
	checkHoglinSpawnRules (Lnet/minecraft/world/entity/EntityType;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/world/entity/MobSpawnType;Lnet/minecraft/core/BlockPos;Lnet/minecraft/util/RandomSource;)Z c
	createAttributes ()Lnet/minecraft/world/entity/ai/attributes/AttributeSupplier$Builder; q
	customServerAiStep ()V W
	defineSynchedData ()V a_
	doHurtTarget (Lnet/minecraft/world/entity/Entity;)Z z
	finalizeSpawn (Lnet/minecraft/world/level/ServerLevelAccessor;Lnet/minecraft/world/DifficultyInstance;Lnet/minecraft/world/entity/MobSpawnType;Lnet/minecraft/world/entity/SpawnGroupData;Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/world/entity/SpawnGroupData; a
	finishConversion (Lnet/minecraft/server/level/ServerLevel;)V c
	getAmbientSound ()Lnet/minecraft/sounds/SoundEvent; s
	getAttackAnimationRemainingTicks ()I fY
	getBrain ()Lnet/minecraft/world/entity/ai/Brain; dK
	getBreedOffspring (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/AgeableMob;)Lnet/minecraft/world/entity/AgeableMob; a
	getDeathSound ()Lnet/minecraft/sounds/SoundEvent; g_
	getExperienceReward ()I ea
	getHurtSound (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEvent; d
	getPassengersRidingOffset ()D bx
	getSoundSource ()Lnet/minecraft/sounds/SoundSource; cY
	getSwimSound ()Lnet/minecraft/sounds/SoundEvent; aJ
	getSwimSplashSound ()Lnet/minecraft/sounds/SoundEvent; aK
	getWalkTargetValue (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/LevelReader;)F a
	handleEntityEvent (B)V b
	hurt (Lnet/minecraft/world/damagesource/DamageSource;F)Z a
	isAdult ()Z r
	isConverting ()Z w
	isFood (Lnet/minecraft/world/item/ItemStack;)Z m
	isImmuneToZombification ()Z gf
	makeBrain (Lcom/mojang/serialization/Dynamic;)Lnet/minecraft/world/entity/ai/Brain; a
	mobInteract (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResult; b
	playSoundEvent (Lnet/minecraft/sounds/SoundEvent;)V b
	playStepSound (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V b
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	removeWhenFarAway (D)Z h
	sendDebugPackets ()V V
	setCannotBeHunted (Z)V x
	setImmuneToZombification (Z)V w
	shouldDropExperience ()Z dY
net/minecraft/world/entity/monster/hoglin/HoglinAi bwz
	ADULT_FOLLOW_RANGE j
	ATTACK_DURATION d
	ATTACK_INTERVAL g
	BABY_ATTACK_INTERVAL h
	DESIRED_DISTANCE_FROM_PIGLIN_WHEN_IDLING e
	DESIRED_DISTANCE_FROM_PIGLIN_WHEN_RETREATING f
	REPELLENT_DETECTION_RANGE_HORIZONTAL a
	REPELLENT_DETECTION_RANGE_VERTICAL b
	REPELLENT_PACIFY_TIME i
	RETREAT_DURATION c
	SPEED_MULTIPLIER_WHEN_AVOIDING_REPELLENT k
	SPEED_MULTIPLIER_WHEN_FOLLOWING_ADULT o
	SPEED_MULTIPLIER_WHEN_IDLING n
	SPEED_MULTIPLIER_WHEN_MAKING_LOVE m
	SPEED_MULTIPLIER_WHEN_RETREATING l
	broadcastAttackTarget (Lnet/minecraft/world/entity/monster/hoglin/Hoglin;Lnet/minecraft/world/entity/LivingEntity;)V h
	broadcastRetreat (Lnet/minecraft/world/entity/monster/hoglin/Hoglin;Lnet/minecraft/world/entity/LivingEntity;)V c
	createIdleMovementBehaviors ()Lnet/minecraft/world/entity/ai/behavior/RunOne; a
	findNearestValidAttackTarget (Lnet/minecraft/world/entity/monster/hoglin/Hoglin;)Ljava/util/Optional; d
	getSoundForActivity (Lnet/minecraft/world/entity/monster/hoglin/Hoglin;Lnet/minecraft/world/entity/schedule/Activity;)Lnet/minecraft/sounds/SoundEvent; a
	getSoundForCurrentActivity (Lnet/minecraft/world/entity/monster/hoglin/Hoglin;)Ljava/util/Optional; b
	getVisibleAdultHoglins (Lnet/minecraft/world/entity/monster/hoglin/Hoglin;)Ljava/util/List; g
	initCoreActivity (Lnet/minecraft/world/entity/ai/Brain;)V b
	initFightActivity (Lnet/minecraft/world/entity/ai/Brain;)V d
	initIdleActivity (Lnet/minecraft/world/entity/ai/Brain;)V c
	initRetreatActivity (Lnet/minecraft/world/entity/ai/Brain;)V e
	isBreeding (Lnet/minecraft/world/entity/monster/hoglin/Hoglin;)Z i
	isNearRepellent (Lnet/minecraft/world/entity/monster/hoglin/Hoglin;)Z h
	isPacified (Lnet/minecraft/world/entity/monster/hoglin/Hoglin;)Z c
	isPosNearNearestRepellent (Lnet/minecraft/world/entity/monster/hoglin/Hoglin;Lnet/minecraft/core/BlockPos;)Z a
	makeBrain (Lnet/minecraft/world/entity/ai/Brain;)Lnet/minecraft/world/entity/ai/Brain; a
	maybeRetaliate (Lnet/minecraft/world/entity/monster/hoglin/Hoglin;Lnet/minecraft/world/entity/LivingEntity;)V f
	onHitTarget (Lnet/minecraft/world/entity/monster/hoglin/Hoglin;Lnet/minecraft/world/entity/LivingEntity;)V a
	piglinsOutnumberHoglins (Lnet/minecraft/world/entity/monster/hoglin/Hoglin;)Z f
	retreatFromNearestTarget (Lnet/minecraft/world/entity/monster/hoglin/Hoglin;Lnet/minecraft/world/entity/LivingEntity;)V d
	setAttackTarget (Lnet/minecraft/world/entity/monster/hoglin/Hoglin;Lnet/minecraft/world/entity/LivingEntity;)V g
	setAttackTargetIfCloserThanCurrent (Lnet/minecraft/world/entity/monster/hoglin/Hoglin;Lnet/minecraft/world/entity/LivingEntity;)V i
	setAvoidTarget (Lnet/minecraft/world/entity/monster/hoglin/Hoglin;Lnet/minecraft/world/entity/LivingEntity;)V e
	updateActivity (Lnet/minecraft/world/entity/monster/hoglin/Hoglin;)V a
	wantsToStopFleeing (Lnet/minecraft/world/entity/monster/hoglin/Hoglin;)Z e
	wasHurtBy (Lnet/minecraft/world/entity/monster/hoglin/Hoglin;Lnet/minecraft/world/entity/LivingEntity;)V b
net/minecraft/world/entity/monster/hoglin/HoglinBase bxa
	ATTACK_ANIMATION_DURATION l_
	getAttackAnimationRemainingTicks ()I fY
	hurtAndThrowTarget (Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/entity/LivingEntity;)Z a
	throwTarget (Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/entity/LivingEntity;)V b
net/minecraft/world/entity/monster/piglin/AbstractPiglin bxd
	CONVERSION_TIME c
	DATA_IMMUNE_TO_ZOMBIFICATION b
	PIGLIN_EYE_HEIGHT d
	timeInOverworld e
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	applyOpenDoorsAbility ()V w
	canHunt ()Z q
	customServerAiStep ()V W
	defineSynchedData ()V a_
	finishConversion (Lnet/minecraft/server/level/ServerLevel;)V c
	getArmPose ()Lnet/minecraft/world/entity/monster/piglin/PiglinArmPose; ga
	getMyRidingOffset ()D bw
	getStandingEyeHeight (Lnet/minecraft/world/entity/Pose;Lnet/minecraft/world/entity/EntityDimensions;)F b
	getTarget ()Lnet/minecraft/world/entity/LivingEntity; j
	isAdult ()Z fZ
	isConverting ()Z fY
	isHoldingMeleeWeapon ()Z gb
	isImmuneToZombification ()Z r
	playAmbientSound ()V N
	playConvertedSound ()V gc
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	sendDebugPackets ()V V
	setImmuneToZombification (Z)V w
net/minecraft/world/entity/monster/piglin/Piglin bxe
	ATTACK_DAMAGE cc
	BABY_EYE_HEIGHT_ADJUSTMENT ch
	CHANCE_OF_WEARING_EACH_ARMOUR_ITEM ce
	CROSSBOW_POWER cd
	DATA_BABY_ID bV
	DATA_IS_CHARGING_CROSSBOW bW
	DATA_IS_DANCING bX
	MAX_HEALTH ca
	MAX_PASSENGERS_ON_ONE_HOGLIN cf
	MEMORY_TYPES bU
	MOVEMENT_SPEED_WHEN_FIGHTING cb
	PROBABILITY_OF_SPAWNING_AS_BABY cg
	PROBABILITY_OF_SPAWNING_WITH_CROSSBOW_INSTEAD_OF_SWORD ci
	SENSOR_TYPES bT
	SPEED_MODIFIER_BABY bZ
	SPEED_MODIFIER_BABY_UUID bY
	cannotHunt ck
	inventory cj
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	addToInventory (Lnet/minecraft/world/item/ItemStack;)Lnet/minecraft/world/item/ItemStack; l
	brainProvider ()Lnet/minecraft/world/entity/ai/Brain$Provider; dL
	canAddToInventory (Lnet/minecraft/world/item/ItemStack;)Z m
	canFireProjectileWeapon (Lnet/minecraft/world/item/ProjectileWeaponItem;)Z a
	canHunt ()Z q
	canReplaceCurrentItem (Lnet/minecraft/world/item/ItemStack;)Z p
	canReplaceCurrentItem (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/item/ItemStack;)Z b
	checkPiglinSpawnRules (Lnet/minecraft/world/entity/EntityType;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/world/entity/MobSpawnType;Lnet/minecraft/core/BlockPos;Lnet/minecraft/util/RandomSource;)Z b
	createAttributes ()Lnet/minecraft/world/entity/ai/attributes/AttributeSupplier$Builder; gf
	createSpawnWeapon ()Lnet/minecraft/world/item/ItemStack; gh
	customServerAiStep ()V W
	defineSynchedData ()V a_
	dropCustomDeathLoot (Lnet/minecraft/world/damagesource/DamageSource;IZ)V a
	finalizeSpawn (Lnet/minecraft/world/level/ServerLevelAccessor;Lnet/minecraft/world/DifficultyInstance;Lnet/minecraft/world/entity/MobSpawnType;Lnet/minecraft/world/entity/SpawnGroupData;Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/world/entity/SpawnGroupData; a
	finishConversion (Lnet/minecraft/server/level/ServerLevel;)V c
	getAmbientSound ()Lnet/minecraft/sounds/SoundEvent; s
	getArmPose ()Lnet/minecraft/world/entity/monster/piglin/PiglinArmPose; ga
	getBrain ()Lnet/minecraft/world/entity/ai/Brain; dK
	getDeathSound ()Lnet/minecraft/sounds/SoundEvent; g_
	getExperienceReward ()I ea
	getHurtSound (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEvent; d
	getInventory ()Lnet/minecraft/world/SimpleContainer; w
	getPassengersRidingOffset ()D bx
	getStandingEyeHeight (Lnet/minecraft/world/entity/Pose;Lnet/minecraft/world/entity/EntityDimensions;)F b
	getTopPassenger (Lnet/minecraft/world/entity/Entity;I)Lnet/minecraft/world/entity/Entity; b
	holdInMainHand (Lnet/minecraft/world/item/ItemStack;)V n
	holdInOffHand (Lnet/minecraft/world/item/ItemStack;)V o
	hurt (Lnet/minecraft/world/damagesource/DamageSource;F)Z a
	isBaby ()Z h_
	isChargingCrossbow ()Z gi
	isDancing ()Z gg
	makeBrain (Lcom/mojang/serialization/Dynamic;)Lnet/minecraft/world/entity/ai/Brain; a
	maybeWearArmor (Lnet/minecraft/world/entity/EquipmentSlot;Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/util/RandomSource;)V a
	mobInteract (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResult; b
	onCrossbowAttackPerformed ()V a
	onSyncedDataUpdated (Lnet/minecraft/network/syncher/EntityDataAccessor;)V a
	performRangedAttack (Lnet/minecraft/world/entity/LivingEntity;F)V a
	pickUpItem (Lnet/minecraft/world/entity/item/ItemEntity;)V b
	playConvertedSound ()V gc
	playSoundEvent (Lnet/minecraft/sounds/SoundEvent;)V b
	playStepSound (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V b
	populateDefaultEquipmentSlots (Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/DifficultyInstance;)V a
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	removeWhenFarAway (D)Z h
	setBaby (Z)V a
	setCannotHunt (Z)V y
	setChargingCrossbow (Z)V b
	setDancing (Z)V x
	shootCrossbowProjectile (Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/entity/projectile/Projectile;F)V a
	shouldDespawnInPeaceful ()Z U
	startRiding (Lnet/minecraft/world/entity/Entity;Z)Z a
	wantsToPickUp (Lnet/minecraft/world/item/ItemStack;)Z k
net/minecraft/world/entity/monster/piglin/PiglinAi bxf
	ADMIRE_DURATION g
	ANGER_DURATION f
	AVOID_ZOMBIFIED_DURATION A
	BABY_AVOID_NEMESIS_DURATION B
	BABY_FLEE_DURATION_AFTER_GETTING_HIT l
	BARTERING_ITEM c
	CELEBRATION_TIME k
	DESIRED_DISTANCE_FROM_ENTITY_WHEN_AVOIDING t
	DESIRED_DISTANCE_FROM_ZOMBIFIED z
	EAT_COOLDOWN s
	HIT_BY_PLAYER_MEMORY_TIMEOUT m
	HOW_LONG_TIME_TO_DISABLE_ADMIRE_WALKING_IF_CANT_REACH_ITEM j
	INTERACTION_RANGE w
	MAX_DISTANCE_TO_WALK_TO_ITEM h
	MAX_LOOK_DIST u
	MAX_LOOK_DIST_FOR_PLAYER_HOLDING_LOVED_ITEM v
	MAX_TIME_TO_WALK_TO_ITEM i
	MAX_WALK_DISTANCE_TO_START_RIDING n
	MELEE_ATTACK_COOLDOWN r
	MIN_DESIRED_DIST_FROM_TARGET_WHEN_HOLDING_CROSSBOW x
	PLAYER_ANGER_RANGE e
	PROBABILITY_OF_CELEBRATION_DANCE C
	REPELLENT_DETECTION_RANGE_HORIZONTAL a
	REPELLENT_DETECTION_RANGE_VERTICAL b
	RETREAT_DURATION q
	RIDE_DURATION p
	RIDE_START_INTERVAL o
	SPEED_MULTIPLIER_WHEN_AVOIDING D
	SPEED_MULTIPLIER_WHEN_DANCING I
	SPEED_MULTIPLIER_WHEN_GOING_TO_CELEBRATE_LOCATION H
	SPEED_MULTIPLIER_WHEN_GOING_TO_WANTED_ITEM G
	SPEED_MULTIPLIER_WHEN_IDLING J
	SPEED_MULTIPLIER_WHEN_MOUNTING F
	SPEED_MULTIPLIER_WHEN_RETREATING E
	SPEED_WHEN_STRAFING_BACK_FROM_TARGET y
	TIME_BETWEEN_HUNTS d
	admireGoldItem (Lnet/minecraft/world/entity/LivingEntity;)V d
	angerNearbyPiglins (Lnet/minecraft/world/entity/player/Player;Z)V a
	avoidRepellent ()Lnet/minecraft/world/entity/ai/behavior/BehaviorControl; d
	avoidZombified ()Lnet/minecraft/world/entity/ai/behavior/BehaviorControl; f
	babyAvoidNemesis ()Lnet/minecraft/world/entity/ai/behavior/BehaviorControl; e
	babySometimesRideBabyHoglin ()Lnet/minecraft/world/entity/ai/behavior/BehaviorControl; g
	broadcastAngerTarget (Lnet/minecraft/world/entity/monster/piglin/AbstractPiglin;Lnet/minecraft/world/entity/LivingEntity;)V b
	broadcastRetreat (Lnet/minecraft/world/entity/monster/piglin/Piglin;Lnet/minecraft/world/entity/LivingEntity;)V c
	broadcastUniversalAnger (Lnet/minecraft/world/entity/monster/piglin/AbstractPiglin;)V a
	canAdmire (Lnet/minecraft/world/entity/monster/piglin/Piglin;Lnet/minecraft/world/item/ItemStack;)Z b
	cancelAdmiring (Lnet/minecraft/world/entity/monster/piglin/Piglin;)V b
	createIdleLookBehaviors ()Lnet/minecraft/world/entity/ai/behavior/RunOne; b
	createIdleMovementBehaviors ()Lnet/minecraft/world/entity/ai/behavior/RunOne; c
	createLookBehaviors ()Lcom/google/common/collect/ImmutableList; a
	doesntSeeAnyPlayerHoldingLovedItem (Lnet/minecraft/world/entity/LivingEntity;)Z f
	dontKillAnyMoreHoglinsForAWhile (Lnet/minecraft/world/entity/monster/piglin/AbstractPiglin;)V c
	eat (Lnet/minecraft/world/entity/monster/piglin/Piglin;)V o
	findNearestValidAttackTarget (Lnet/minecraft/world/entity/monster/piglin/Piglin;)Ljava/util/Optional; i
	getAdultPiglins (Lnet/minecraft/world/entity/monster/piglin/AbstractPiglin;)Ljava/util/List; e
	getAngerTarget (Lnet/minecraft/world/entity/monster/piglin/AbstractPiglin;)Ljava/util/Optional; f
	getAvoidTarget (Lnet/minecraft/world/entity/monster/piglin/Piglin;)Ljava/util/Optional; e
	getBarterResponseItems (Lnet/minecraft/world/entity/monster/piglin/Piglin;)Ljava/util/List; g
	getNearestVisibleTargetablePlayer (Lnet/minecraft/world/entity/monster/piglin/AbstractPiglin;)Ljava/util/Optional; b
	getRandomNearbyPos (Lnet/minecraft/world/entity/monster/piglin/Piglin;)Lnet/minecraft/world/phys/Vec3; p
	getSoundForActivity (Lnet/minecraft/world/entity/monster/piglin/Piglin;Lnet/minecraft/world/entity/schedule/Activity;)Lnet/minecraft/sounds/SoundEvent; a
	getSoundForCurrentActivity (Lnet/minecraft/world/entity/monster/piglin/Piglin;)Ljava/util/Optional; c
	getVisibleAdultPiglins (Lnet/minecraft/world/entity/monster/piglin/Piglin;)Ljava/util/List; d
	hasCrossbow (Lnet/minecraft/world/entity/LivingEntity;)Z c
	hasEatenRecently (Lnet/minecraft/world/entity/monster/piglin/Piglin;)Z q
	hoglinsOutnumberPiglins (Lnet/minecraft/world/entity/monster/piglin/Piglin;)Z n
	holdInOffhand (Lnet/minecraft/world/entity/monster/piglin/Piglin;Lnet/minecraft/world/item/ItemStack;)V c
	initAdmireItemActivity (Lnet/minecraft/world/entity/ai/Brain;)V d
	initCelebrateActivity (Lnet/minecraft/world/entity/ai/Brain;)V c
	initCoreActivity (Lnet/minecraft/world/entity/ai/Brain;)V a
	initFightActivity (Lnet/minecraft/world/entity/monster/piglin/Piglin;Lnet/minecraft/world/entity/ai/Brain;)V b
	initIdleActivity (Lnet/minecraft/world/entity/ai/Brain;)V b
	initMemories (Lnet/minecraft/world/entity/monster/piglin/Piglin;Lnet/minecraft/util/RandomSource;)V a
	initRetreatActivity (Lnet/minecraft/world/entity/ai/Brain;)V e
	initRideHoglinActivity (Lnet/minecraft/world/entity/ai/Brain;)V f
	isAdmiringDisabled (Lnet/minecraft/world/entity/monster/piglin/Piglin;)Z t
	isAdmiringItem (Lnet/minecraft/world/entity/monster/piglin/Piglin;)Z r
	isBabyRidingBaby (Lnet/minecraft/world/entity/monster/piglin/Piglin;)Z f
	isBarterCurrency (Lnet/minecraft/world/item/ItemStack;)Z b
	isFood (Lnet/minecraft/world/item/ItemStack;)Z c
	isHoldingItemInOffHand (Lnet/minecraft/world/entity/monster/piglin/Piglin;)Z u
	isIdle (Lnet/minecraft/world/entity/monster/piglin/AbstractPiglin;)Z d
	isLovedItem (Lnet/minecraft/world/item/ItemStack;)Z a
	isNearAvoidTarget (Lnet/minecraft/world/entity/monster/piglin/Piglin;)Z j
	isNearRepellent (Lnet/minecraft/world/entity/monster/piglin/Piglin;)Z s
	isNearZombified (Lnet/minecraft/world/entity/monster/piglin/Piglin;)Z h
	isNearestValidAttackTarget (Lnet/minecraft/world/entity/monster/piglin/Piglin;Lnet/minecraft/world/entity/LivingEntity;)Z b
	isNotHoldingLovedItemInOffHand (Lnet/minecraft/world/entity/monster/piglin/Piglin;)Z v
	isPlayerHoldingLovedItem (Lnet/minecraft/world/entity/LivingEntity;)Z b
	isWearingGold (Lnet/minecraft/world/entity/LivingEntity;)Z a
	isZombified (Lnet/minecraft/world/entity/EntityType;)Z a
	makeBrain (Lnet/minecraft/world/entity/monster/piglin/Piglin;Lnet/minecraft/world/entity/ai/Brain;)Lnet/minecraft/world/entity/ai/Brain; a
	maybeRetaliate (Lnet/minecraft/world/entity/monster/piglin/AbstractPiglin;Lnet/minecraft/world/entity/LivingEntity;)V a
	mobInteract (Lnet/minecraft/world/entity/monster/piglin/Piglin;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResult; a
	pickUpItem (Lnet/minecraft/world/entity/monster/piglin/Piglin;Lnet/minecraft/world/entity/item/ItemEntity;)V a
	piglinsEqualOrOutnumberHoglins (Lnet/minecraft/world/entity/monster/piglin/Piglin;)Z m
	putInInventory (Lnet/minecraft/world/entity/monster/piglin/Piglin;Lnet/minecraft/world/item/ItemStack;)V d
	removeOneItemFromItemEntity (Lnet/minecraft/world/entity/item/ItemEntity;)Lnet/minecraft/world/item/ItemStack; a
	retreatFromNearestTarget (Lnet/minecraft/world/entity/monster/piglin/Piglin;Lnet/minecraft/world/entity/LivingEntity;)V d
	seesPlayerHoldingLovedItem (Lnet/minecraft/world/entity/LivingEntity;)Z e
	setAngerTarget (Lnet/minecraft/world/entity/monster/piglin/AbstractPiglin;Lnet/minecraft/world/entity/LivingEntity;)V c
	setAngerTargetIfCloserThanCurrent (Lnet/minecraft/world/entity/monster/piglin/AbstractPiglin;Lnet/minecraft/world/entity/LivingEntity;)V e
	setAngerTargetToNearestTargetablePlayerIfFound (Lnet/minecraft/world/entity/monster/piglin/AbstractPiglin;Lnet/minecraft/world/entity/LivingEntity;)V d
	setAvoidTargetAndDontHuntForAWhile (Lnet/minecraft/world/entity/monster/piglin/Piglin;Lnet/minecraft/world/entity/LivingEntity;)V e
	stopHoldingOffHandItem (Lnet/minecraft/world/entity/monster/piglin/Piglin;Z)V a
	stopWalking (Lnet/minecraft/world/entity/monster/piglin/Piglin;)V k
	throwItems (Lnet/minecraft/world/entity/monster/piglin/Piglin;Ljava/util/List;)V a
	throwItemsTowardPlayer (Lnet/minecraft/world/entity/monster/piglin/Piglin;Lnet/minecraft/world/entity/player/Player;Ljava/util/List;)V a
	throwItemsTowardPos (Lnet/minecraft/world/entity/monster/piglin/Piglin;Ljava/util/List;Lnet/minecraft/world/phys/Vec3;)V a
	throwItemsTowardRandomPos (Lnet/minecraft/world/entity/monster/piglin/Piglin;Ljava/util/List;)V b
	updateActivity (Lnet/minecraft/world/entity/monster/piglin/Piglin;)V a
	wantsToDance (Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/entity/LivingEntity;)Z a
	wantsToPickup (Lnet/minecraft/world/entity/monster/piglin/Piglin;Lnet/minecraft/world/item/ItemStack;)Z a
	wantsToStopFleeing (Lnet/minecraft/world/entity/monster/piglin/Piglin;)Z l
	wantsToStopRiding (Lnet/minecraft/world/entity/monster/piglin/Piglin;Lnet/minecraft/world/entity/Entity;)Z a
	wasHurtBy (Lnet/minecraft/world/entity/monster/piglin/Piglin;Lnet/minecraft/world/entity/LivingEntity;)V a
	wasHurtRecently (Lnet/minecraft/world/entity/LivingEntity;)Z g
net/minecraft/world/entity/monster/piglin/PiglinArmPose bxg
	$VALUES g
	ADMIRING_ITEM d
	ATTACKING_WITH_MELEE_WEAPON a
	CROSSBOW_CHARGE c
	CROSSBOW_HOLD b
	DANCING e
	DEFAULT f
	$values ()[Lnet/minecraft/world/entity/monster/piglin/PiglinArmPose; a
net/minecraft/world/entity/monster/piglin/PiglinBrute bxh
	ATTACK_DAMAGE bX
	MAX_HEALTH bV
	MEMORY_TYPES bU
	MOVEMENT_SPEED_WHEN_FIGHTING bW
	SENSOR_TYPES bT
	brainProvider ()Lnet/minecraft/world/entity/ai/Brain$Provider; dL
	canHunt ()Z q
	createAttributes ()Lnet/minecraft/world/entity/ai/attributes/AttributeSupplier$Builder; w
	customServerAiStep ()V W
	finalizeSpawn (Lnet/minecraft/world/level/ServerLevelAccessor;Lnet/minecraft/world/DifficultyInstance;Lnet/minecraft/world/entity/MobSpawnType;Lnet/minecraft/world/entity/SpawnGroupData;Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/world/entity/SpawnGroupData; a
	getAmbientSound ()Lnet/minecraft/sounds/SoundEvent; s
	getArmPose ()Lnet/minecraft/world/entity/monster/piglin/PiglinArmPose; ga
	getBrain ()Lnet/minecraft/world/entity/ai/Brain; dK
	getDeathSound ()Lnet/minecraft/sounds/SoundEvent; g_
	getHurtSound (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEvent; d
	hurt (Lnet/minecraft/world/damagesource/DamageSource;F)Z a
	makeBrain (Lcom/mojang/serialization/Dynamic;)Lnet/minecraft/world/entity/ai/Brain; a
	playAngrySound ()V gf
	playConvertedSound ()V gc
	playStepSound (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V b
	populateDefaultEquipmentSlots (Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/DifficultyInstance;)V a
	wantsToPickUp (Lnet/minecraft/world/item/ItemStack;)Z k
net/minecraft/world/entity/monster/piglin/PiglinBruteAi bxi
	ACTIVITY_SOUND_LIKELIHOOD_PER_TICK c
	ANGER_DURATION a
	HOME_CLOSE_ENOUGH_DISTANCE h
	HOME_STROLL_AROUND_DISTANCE j
	HOME_TOO_FAR_DISTANCE i
	INTERACTION_RANGE e
	MAX_LOOK_DIST d
	MELEE_ATTACK_COOLDOWN b
	SPEED_MULTIPLIER_WHEN_IDLING g
	TARGETING_RANGE f
	createIdleLookBehaviors ()Lnet/minecraft/world/entity/ai/behavior/RunOne; a
	createIdleMovementBehaviors ()Lnet/minecraft/world/entity/ai/behavior/RunOne; b
	findNearestValidAttackTarget (Lnet/minecraft/world/entity/monster/piglin/AbstractPiglin;)Ljava/util/Optional; a
	getTargetIfWithinRange (Lnet/minecraft/world/entity/monster/piglin/AbstractPiglin;Lnet/minecraft/world/entity/ai/memory/MemoryModuleType;)Ljava/util/Optional; a
	initCoreActivity (Lnet/minecraft/world/entity/monster/piglin/PiglinBrute;Lnet/minecraft/world/entity/ai/Brain;)V b
	initFightActivity (Lnet/minecraft/world/entity/monster/piglin/PiglinBrute;Lnet/minecraft/world/entity/ai/Brain;)V d
	initIdleActivity (Lnet/minecraft/world/entity/monster/piglin/PiglinBrute;Lnet/minecraft/world/entity/ai/Brain;)V c
	initMemories (Lnet/minecraft/world/entity/monster/piglin/PiglinBrute;)V a
	isNearestValidAttackTarget (Lnet/minecraft/world/entity/monster/piglin/AbstractPiglin;Lnet/minecraft/world/entity/LivingEntity;)Z a
	makeBrain (Lnet/minecraft/world/entity/monster/piglin/PiglinBrute;Lnet/minecraft/world/entity/ai/Brain;)Lnet/minecraft/world/entity/ai/Brain; a
	maybePlayActivitySound (Lnet/minecraft/world/entity/monster/piglin/PiglinBrute;)V c
	playActivitySound (Lnet/minecraft/world/entity/monster/piglin/PiglinBrute;)V d
	setAngerTarget (Lnet/minecraft/world/entity/monster/piglin/PiglinBrute;Lnet/minecraft/world/entity/LivingEntity;)V b
	updateActivity (Lnet/minecraft/world/entity/monster/piglin/PiglinBrute;)V b
	wasHurtBy (Lnet/minecraft/world/entity/monster/piglin/PiglinBrute;Lnet/minecraft/world/entity/LivingEntity;)V a
net/minecraft/world/entity/monster/piglin/RememberIfHoglinWasKilled bxj
	create ()Lnet/minecraft/world/entity/ai/behavior/BehaviorControl; a
net/minecraft/world/entity/monster/piglin/StartAdmiringItemIfSeen bxk
	create (I)Lnet/minecraft/world/entity/ai/behavior/BehaviorControl; a
net/minecraft/world/entity/monster/piglin/StartHuntingHoglin bxl
	create ()Lnet/minecraft/world/entity/ai/behavior/OneShot; a
	hasHuntedRecently (Lnet/minecraft/world/entity/monster/piglin/AbstractPiglin;)Z a
net/minecraft/world/entity/monster/piglin/StopAdmiringIfItemTooFarAway bxm
	create (I)Lnet/minecraft/world/entity/ai/behavior/BehaviorControl; a
net/minecraft/world/entity/monster/piglin/StopAdmiringIfTiredOfTryingToReachItem bxn
	create (II)Lnet/minecraft/world/entity/ai/behavior/BehaviorControl; a
net/minecraft/world/entity/monster/piglin/StopHoldingItemIfNoLongerAdmiring bxo
	create ()Lnet/minecraft/world/entity/ai/behavior/BehaviorControl; a
net/minecraft/world/entity/monster/warden/AngerLevel bxq
	$VALUES h
	AGITATED b
	ANGRY c
	CALM a
	SORTED_LEVELS d
	ambientSound f
	listeningSound g
	minimumAnger e
	$values ()[Lnet/minecraft/world/entity/monster/warden/AngerLevel; e
	byAnger (I)Lnet/minecraft/world/entity/monster/warden/AngerLevel; a
	getAmbientSound ()Lnet/minecraft/sounds/SoundEvent; b
	getListeningSound ()Lnet/minecraft/sounds/SoundEvent; c
	getMinimumAnger ()I a
	isAngry ()Z d
net/minecraft/world/entity/monster/warden/AngerManagement bxr
	CONVERSION_DELAY a
	DEFAULT_ANGER_DECREASE f
	MAX_ANGER b
	SUSPECT_ANGER_PAIR i
	angerBySuspect d
	angerByUuid e
	conversionDelay g
	filter j
	highestAnger h
	suspectSorter k
	suspects c
	clearAnger (Lnet/minecraft/world/entity/Entity;)V a
	codec (Ljava/util/function/Predicate;)Lcom/mojang/serialization/Codec; a
	convertFromUuids (Lnet/minecraft/server/level/ServerLevel;)V a
	createUuidAngerPairs ()Ljava/util/List; b
	getActiveAnger (Lnet/minecraft/world/entity/Entity;)I b
	getActiveEntity ()Ljava/util/Optional; a
	getTopSuspect ()Lnet/minecraft/world/entity/Entity; d
	increaseAnger (Lnet/minecraft/world/entity/Entity;I)I a
	sortAndUpdateHighestAnger ()V c
	tick (Lnet/minecraft/server/level/ServerLevel;Ljava/util/function/Predicate;)V a
net/minecraft/world/entity/monster/warden/AngerManagement$Sorter bxr$a
	angerManagement a
	angerManagement ()Lnet/minecraft/world/entity/monster/warden/AngerManagement; a
	compare (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/entity/Entity;)I a
net/minecraft/world/entity/monster/warden/Warden bxs
	ANGERMANAGEMENT_TICK_DELAY ci
	ATTACK_DAMAGE cc
	ATTACK_KNOCKBACK cb
	CLIENT_ANGER_LEVEL cd
	DARKNESS_DISPLAY_LIMIT ce
	DARKNESS_DURATION cf
	DARKNESS_INTERVAL ch
	DARKNESS_RADIUS cg
	DEFAULT_ANGER cj
	DIGGING_PARTICLES_AMOUNT co
	DIGGING_PARTICLES_DURATION cp
	DIGGING_PARTICLES_OFFSET cq
	KNOCKBACK_RESISTANCE ca
	LOGGER bV
	MAX_HEALTH bY
	MOVEMENT_SPEED_WHEN_FIGHTING bZ
	ON_HURT_ANGER_BOOST cl
	PROJECTILE_ANGER ck
	PROJECTILE_ANGER_DISTANCE cr
	RECENT_PROJECTILE_TICK_THRESHOLD cm
	TIME_TO_USE_MELEE_UNTIL_SONIC_BOOM bX
	TOUCH_COOLDOWN_TICKS cn
	VIBRATION_COOLDOWN_TICKS bW
	angerManagement cz
	attackAnimationState bT
	diggingAnimationState e
	dynamicGameEventListener cw
	emergeAnimationState d
	heartAnimation cu
	heartAnimationO cv
	roarAnimationState b
	sniffAnimationState c
	sonicBoomAnimationState bU
	tendrilAnimation cs
	tendrilAnimationO ct
	vibrationData cy
	vibrationUser cx
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	applyDarknessAround (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/phys/Vec3;Lnet/minecraft/world/entity/Entity;I)V a
	canDisableShield ()Z fB
	canRide (Lnet/minecraft/world/entity/Entity;)Z l
	canTargetEntity (Lnet/minecraft/world/entity/Entity;)Z a
	checkSpawnObstruction (Lnet/minecraft/world/level/LevelReader;)Z a
	clearAnger (Lnet/minecraft/world/entity/Entity;)V b
	clientDiggingParticles (Lnet/minecraft/world/entity/AnimationState;)V a
	createAttributes ()Lnet/minecraft/world/entity/ai/attributes/AttributeSupplier$Builder; q
	createNavigation (Lnet/minecraft/world/level/Level;)Lnet/minecraft/world/entity/ai/navigation/PathNavigation; b
	customServerAiStep ()V W
	dampensVibrations ()Z aT
	defineSynchedData ()V a_
	doHurtTarget (Lnet/minecraft/world/entity/Entity;)Z z
	doPush (Lnet/minecraft/world/entity/Entity;)V A
	finalizeSpawn (Lnet/minecraft/world/level/ServerLevelAccessor;Lnet/minecraft/world/DifficultyInstance;Lnet/minecraft/world/entity/MobSpawnType;Lnet/minecraft/world/entity/SpawnGroupData;Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/world/entity/SpawnGroupData; a
	getActiveAnger ()I gi
	getAddEntityPacket ()Lnet/minecraft/network/protocol/Packet; S
	getAmbientSound ()Lnet/minecraft/sounds/SoundEvent; s
	getAngerLevel ()Lnet/minecraft/world/entity/monster/warden/AngerLevel; w
	getAngerManagement ()Lnet/minecraft/world/entity/monster/warden/AngerManagement; fZ
	getBrain ()Lnet/minecraft/world/entity/ai/Brain; dK
	getClientAngerLevel ()I r
	getDeathSound ()Lnet/minecraft/sounds/SoundEvent; g_
	getDimensions (Lnet/minecraft/world/entity/Pose;)Lnet/minecraft/world/entity/EntityDimensions; a
	getEntityAngryAt ()Ljava/util/Optional; fY
	getHeartAnimation (F)F E
	getHeartBeatDelay ()I gg
	getHurtSound (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEvent; d
	getSoundVolume ()F eR
	getTarget ()Lnet/minecraft/world/entity/LivingEntity; j
	getTendrilAnimation (F)F D
	getVibrationData ()Lnet/minecraft/world/level/gameevent/vibrations/VibrationSystem$Data; gb
	getVibrationUser ()Lnet/minecraft/world/level/gameevent/vibrations/VibrationSystem$User; gc
	getWalkTargetValue (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/LevelReader;)F a
	handleEntityEvent (B)V b
	hurt (Lnet/minecraft/world/damagesource/DamageSource;F)Z a
	ignoreExplosion ()Z cJ
	increaseAngerAt (Lnet/minecraft/world/entity/Entity;)V c
	increaseAngerAt (Lnet/minecraft/world/entity/Entity;IZ)V a
	isDiggingOrEmerging ()Z ga
	isInvulnerableTo (Lnet/minecraft/world/damagesource/DamageSource;)Z b
	isPushable ()Z bp
	makeBrain (Lcom/mojang/serialization/Dynamic;)Lnet/minecraft/world/entity/ai/Brain; a
	nextStep ()F aI
	onSyncedDataUpdated (Lnet/minecraft/network/syncher/EntityDataAccessor;)V a
	playListeningSound ()V gh
	playStepSound (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V b
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	recreateFromPacket (Lnet/minecraft/network/protocol/game/ClientboundAddEntityPacket;)V a
	removeWhenFarAway (D)Z h
	sendDebugPackets ()V V
	setAttackTarget (Lnet/minecraft/world/entity/LivingEntity;)V l
	syncClientAngerLevel ()V gf
	tick ()V l
	updateDynamicGameEventListener (Ljava/util/function/BiConsumer;)V a
net/minecraft/world/entity/monster/warden/Warden$VibrationUser bxs$a
	GAME_EVENT_LISTENER_RANGE b
	positionSource c
	canReceiveVibration (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/gameevent/GameEvent;Lnet/minecraft/world/level/gameevent/GameEvent$Context;)Z a
	canTriggerAvoidVibration ()Z d
	getListenableEvents ()Lnet/minecraft/tags/TagKey; c
	getListenerRadius ()I a
	getPositionSource ()Lnet/minecraft/world/level/gameevent/PositionSource; b
	onReceiveVibration (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/gameevent/GameEvent;Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/entity/Entity;F)V a
net/minecraft/world/entity/monster/warden/WardenAi bxt
	DIGGING_COOLDOWN c
	DIGGING_DURATION h
	DIG_COOLDOWN_SETTER m
	DISTURBANCE_LOCATION_EXPIRY_TIME j
	EMERGE_DURATION a
	MELEE_ATTACK_COOLDOWN g
	MEMORY_TYPES l
	ROAR_DURATION b
	SENSOR_TYPES k
	SNIFFING_DURATION i
	SPEED_MULTIPLIER_WHEN_FIGHTING f
	SPEED_MULTIPLIER_WHEN_IDLING d
	SPEED_MULTIPLIER_WHEN_INVESTIGATING e
	initCoreActivity (Lnet/minecraft/world/entity/ai/Brain;)V a
	initDiggingActivity (Lnet/minecraft/world/entity/ai/Brain;)V c
	initEmergeActivity (Lnet/minecraft/world/entity/ai/Brain;)V b
	initFightActivity (Lnet/minecraft/world/entity/monster/warden/Warden;Lnet/minecraft/world/entity/ai/Brain;)V a
	initIdleActivity (Lnet/minecraft/world/entity/ai/Brain;)V d
	initInvestigateActivity (Lnet/minecraft/world/entity/ai/Brain;)V e
	initRoarActivity (Lnet/minecraft/world/entity/ai/Brain;)V g
	initSniffingActivity (Lnet/minecraft/world/entity/ai/Brain;)V f
	isTarget (Lnet/minecraft/world/entity/monster/warden/Warden;Lnet/minecraft/world/entity/LivingEntity;)Z a
	makeBrain (Lnet/minecraft/world/entity/monster/warden/Warden;Lcom/mojang/serialization/Dynamic;)Lnet/minecraft/world/entity/ai/Brain; a
	onTargetInvalid (Lnet/minecraft/world/entity/monster/warden/Warden;Lnet/minecraft/world/entity/LivingEntity;)V b
	setDigCooldown (Lnet/minecraft/world/entity/LivingEntity;)V a
	setDisturbanceLocation (Lnet/minecraft/world/entity/monster/warden/Warden;Lnet/minecraft/core/BlockPos;)V a
	updateActivity (Lnet/minecraft/world/entity/monster/warden/Warden;)V a
net/minecraft/world/entity/monster/warden/WardenSpawnTracker bxu
	CODEC a
	DECREASE_WARNING_LEVEL_EVERY_INTERVAL e
	MAX_WARNING_LEVEL b
	PLAYER_SEARCH_RADIUS c
	WARNING_CHECK_DIAMETER d
	WARNING_LEVEL_INCREASE_COOLDOWN f
	cooldownTicks i
	ticksSinceLastWarning g
	warningLevel h
	copyData (Lnet/minecraft/world/entity/monster/warden/WardenSpawnTracker;)V a
	decreaseWarningLevel ()V f
	getNearbyPlayers (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;)Ljava/util/List; b
	getWarningLevel ()I c
	hasNearbyWarden (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;)Z a
	increaseWarningLevel ()V e
	onCooldown ()Z d
	reset ()V b
	setWarningLevel (I)V a
	tick ()V a
	tryWarn (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Lnet/minecraft/server/level/ServerPlayer;)Ljava/util/OptionalInt; a
net/minecraft/world/entity/npc/AbstractVillager bxw
	DATA_UNHAPPY_COUNTER bV
	VILLAGER_INVENTORY_SIZE bW
	VILLAGER_SLOT_OFFSET bT
	inventory bY
	offers bU
	tradingPlayer bX
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	addOffersFromItemListings (Lnet/minecraft/world/item/trading/MerchantOffers;[Lnet/minecraft/world/entity/npc/VillagerTrades$ItemListing;I)V a
	addParticlesAroundSelf (Lnet/minecraft/core/particles/ParticleOptions;)V a
	canBeLeashed (Lnet/minecraft/world/entity/player/Player;)Z a
	changeDimension (Lnet/minecraft/server/level/ServerLevel;)Lnet/minecraft/world/entity/Entity; b
	defineSynchedData ()V a_
	die (Lnet/minecraft/world/damagesource/DamageSource;)V a
	finalizeSpawn (Lnet/minecraft/world/level/ServerLevelAccessor;Lnet/minecraft/world/DifficultyInstance;Lnet/minecraft/world/entity/MobSpawnType;Lnet/minecraft/world/entity/SpawnGroupData;Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/world/entity/SpawnGroupData; a
	getInventory ()Lnet/minecraft/world/SimpleContainer; w
	getNotifyTradeSound ()Lnet/minecraft/sounds/SoundEvent; gc
	getOffers ()Lnet/minecraft/world/item/trading/MerchantOffers; ga
	getRopeHoldPosition (F)Lnet/minecraft/world/phys/Vec3; q
	getSlot (I)Lnet/minecraft/world/entity/SlotAccess; a_
	getStandingEyeHeight (Lnet/minecraft/world/entity/Pose;Lnet/minecraft/world/entity/EntityDimensions;)F b
	getTradeUpdatedSound (Z)Lnet/minecraft/sounds/SoundEvent; w
	getTradingPlayer ()Lnet/minecraft/world/entity/player/Player; fY
	getUnhappyCounter ()I q
	getVillagerXp ()I r
	isClientSide ()Z gg
	isTrading ()Z fZ
	notifyTrade (Lnet/minecraft/world/item/trading/MerchantOffer;)V a
	notifyTradeUpdated (Lnet/minecraft/world/item/ItemStack;)V l
	overrideOffers (Lnet/minecraft/world/item/trading/MerchantOffers;)V a
	overrideXp (I)V t
	playCelebrateSound ()V gd
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	rewardTradeXp (Lnet/minecraft/world/item/trading/MerchantOffer;)V b
	setTradingPlayer (Lnet/minecraft/world/entity/player/Player;)V f
	setUnhappyCounter (I)V s
	showProgressBar ()Z gb
	stopTrading ()V ge
	updateTrades ()V gf
net/minecraft/world/entity/npc/CatSpawner bxx
	TICK_DELAY a
	nextTick b
	spawnCat (Lnet/minecraft/core/BlockPos;Lnet/minecraft/server/level/ServerLevel;)I a
	spawnInHut (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;)I b
	spawnInVillage (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;)I a
	tick (Lnet/minecraft/server/level/ServerLevel;ZZ)I a
net/minecraft/world/entity/npc/ClientSideMerchant bxy
	offers b
	source a
	xp c
	getNotifyTradeSound ()Lnet/minecraft/sounds/SoundEvent; gc
	getOffers ()Lnet/minecraft/world/item/trading/MerchantOffers; ga
	getTradingPlayer ()Lnet/minecraft/world/entity/player/Player; fY
	getVillagerXp ()I r
	isClientSide ()Z gg
	notifyTrade (Lnet/minecraft/world/item/trading/MerchantOffer;)V a
	notifyTradeUpdated (Lnet/minecraft/world/item/ItemStack;)V l
	overrideOffers (Lnet/minecraft/world/item/trading/MerchantOffers;)V a
	overrideXp (I)V t
	setTradingPlayer (Lnet/minecraft/world/entity/player/Player;)V f
	showProgressBar ()Z gb
net/minecraft/world/entity/npc/InventoryCarrier bxz
	TAG_INVENTORY c_
	getInventory ()Lnet/minecraft/world/SimpleContainer; w
	pickUpItem (Lnet/minecraft/world/entity/Mob;Lnet/minecraft/world/entity/npc/InventoryCarrier;Lnet/minecraft/world/entity/item/ItemEntity;)V a
	readInventoryFromTag (Lnet/minecraft/nbt/CompoundTag;)V c
	writeInventoryToTag (Lnet/minecraft/nbt/CompoundTag;)V a_
net/minecraft/world/entity/npc/Npc bya
net/minecraft/world/entity/npc/Villager byb
	BREEDING_FOOD_THRESHOLD bV
	DATA_VILLAGER_DATA ca
	FOOD_POINTS bW
	GOSSIP_COOLDOWN ce
	GOSSIP_DECAY_INTERVAL cf
	HOW_FAR_AWAY_TO_TALK_TO_OTHER_VILLAGERS_ABOUT_GOLEMS ch
	HOW_MANY_VILLAGERS_NEED_TO_AGREE_TO_SPAWN_A_GOLEM ci
	LOGGER bZ
	MAX_GOSSIP_TOPICS cd
	MEMORY_TYPES cx
	POI_MEMORIES bY
	REPUTATION_CHANGE_PER_EVENT cg
	SENSOR_TYPES cy
	SPEED_MODIFIER bX
	TIME_SINCE_SLEEPING_FOR_GOLEM_SPAWNING cj
	TRADES_PER_LEVEL cb
	WANTED_ITEMS cc
	assignProfessionWhenSpawned cw
	chasing cn
	foodLevel co
	gossips cp
	increaseProfessionLevelOnUpdate cl
	lastGossipDecayTime cr
	lastGossipTime cq
	lastRestockCheckDayTime cv
	lastRestockGameTime ct
	lastTradedPlayer cm
	numberOfRestocksToday cu
	updateMerchantTimer ck
	villagerXp cs
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	ageBoundaryReached ()V m
	allowedToRestock ()Z gy
	assignProfessionWhenSpawned ()Z gi
	brainProvider ()Lnet/minecraft/world/entity/ai/Brain$Provider; dL
	canBreed ()Z P_
	canRestock ()Z gk
	catchUpDemand ()V gz
	countFoodPointsInInventory ()I gG
	createAttributes ()Lnet/minecraft/world/entity/ai/attributes/AttributeSupplier$Builder; gh
	customServerAiStep ()V W
	defineSynchedData ()V a_
	die (Lnet/minecraft/world/damagesource/DamageSource;)V a
	digestFood (I)V v
	eatAndDigestFood ()V gp
	eatUntilFull ()V gD
	finalizeSpawn (Lnet/minecraft/world/level/ServerLevelAccessor;Lnet/minecraft/world/DifficultyInstance;Lnet/minecraft/world/entity/MobSpawnType;Lnet/minecraft/world/entity/SpawnGroupData;Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/world/entity/SpawnGroupData; a
	getAmbientSound ()Lnet/minecraft/sounds/SoundEvent; s
	getBrain ()Lnet/minecraft/world/entity/ai/Brain; dK
	getBreedOffspring (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/AgeableMob;)Lnet/minecraft/world/entity/AgeableMob; a
	getBreedOffspring (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/AgeableMob;)Lnet/minecraft/world/entity/npc/Villager; b
	getDeathSound ()Lnet/minecraft/sounds/SoundEvent; g_
	getGossips ()Lnet/minecraft/world/entity/ai/gossip/GossipContainer; gt
	getHurtSound (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEvent; d
	getPlayerReputation (Lnet/minecraft/world/entity/player/Player;)I g
	getTypeName ()Lnet/minecraft/network/chat/Component; cl
	getVillagerData ()Lnet/minecraft/world/entity/npc/VillagerData; gj
	getVillagerXp ()I r
	golemSpawnConditionsMet (J)Z b
	gossip (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/npc/Villager;J)V a
	handleEntityEvent (B)V b
	hasExcessFood ()Z gq
	hasFarmSeeds ()Z gs
	hungry ()Z gC
	increaseMerchantCareer ()V gF
	isChasing ()Z go
	isClientSide ()Z gg
	makeBrain (Lcom/mojang/serialization/Dynamic;)Lnet/minecraft/world/entity/ai/Brain; a
	maybeDecayGossip ()V gH
	mobInteract (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResult; b
	needsToRestock ()Z gx
	onReputationEventFrom (Lnet/minecraft/world/entity/ai/village/ReputationEventType;Lnet/minecraft/world/entity/Entity;)V a
	pickUpItem (Lnet/minecraft/world/entity/item/ItemEntity;)V b
	playWorkSound ()V gn
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	refreshBrain (Lnet/minecraft/server/level/ServerLevel;)V c
	registerBrainGoals (Lnet/minecraft/world/entity/ai/Brain;)V a
	releaseAllPois ()V gB
	releasePoi (Lnet/minecraft/world/entity/ai/memory/MemoryModuleType;)V a
	removeWhenFarAway (D)Z h
	resendOffersToTradingPlayer ()V gw
	resetNumberOfRestocks ()V gI
	resetSpecialPrices ()V gv
	restock ()V gl
	rewardTradeXp (Lnet/minecraft/world/item/trading/MerchantOffer;)V b
	sendDebugPackets ()V V
	setChasing (Z)V x
	setGossips (Lnet/minecraft/nbt/Tag;)V a
	setLastHurtByMob (Lnet/minecraft/world/entity/LivingEntity;)V a
	setOffers (Lnet/minecraft/world/item/trading/MerchantOffers;)V b
	setTradingPlayer (Lnet/minecraft/world/entity/player/Player;)V f
	setUnhappy ()V gu
	setVillagerData (Lnet/minecraft/world/entity/npc/VillagerData;)V a
	setVillagerXp (I)V u
	shouldIncreaseLevel ()Z gE
	shouldRestock ()Z gm
	spawnGolemIfNeeded (Lnet/minecraft/server/level/ServerLevel;JI)V a
	startSleeping (Lnet/minecraft/core/BlockPos;)V b
	startTrading (Lnet/minecraft/world/entity/player/Player;)V h
	stopSleeping ()V fz
	stopTrading ()V ge
	tellWitnessesThatIWasMurdered (Lnet/minecraft/world/entity/Entity;)V a
	thunderHit (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LightningBolt;)V a
	tick ()V l
	updateDemand ()V gA
	updateSpecialPrices (Lnet/minecraft/world/entity/player/Player;)V i
	updateTrades ()V gf
	wantsMoreFood ()Z gr
	wantsToPickUp (Lnet/minecraft/world/item/ItemStack;)Z k
	wantsToSpawnGolem (J)Z a
net/minecraft/world/entity/npc/VillagerData byc
	CODEC c
	MAX_VILLAGER_LEVEL b
	MIN_VILLAGER_LEVEL a
	NEXT_LEVEL_XP_THRESHOLDS d
	level g
	profession f
	type e
	canLevelUp (I)Z d
	getLevel ()I c
	getMaxXpPerLevel (I)I c
	getMinXpPerLevel (I)I b
	getProfession ()Lnet/minecraft/world/entity/npc/VillagerProfession; b
	getType ()Lnet/minecraft/world/entity/npc/VillagerType; a
	setLevel (I)Lnet/minecraft/world/entity/npc/VillagerData; a
	setProfession (Lnet/minecraft/world/entity/npc/VillagerProfession;)Lnet/minecraft/world/entity/npc/VillagerData; a
	setType (Lnet/minecraft/world/entity/npc/VillagerType;)Lnet/minecraft/world/entity/npc/VillagerData; a
net/minecraft/world/entity/npc/VillagerDataHolder byd
	getVariant ()Ljava/lang/Object; c
	getVariant ()Lnet/minecraft/world/entity/npc/VillagerType; a
	getVillagerData ()Lnet/minecraft/world/entity/npc/VillagerData; gj
	setVariant (Ljava/lang/Object;)V a
	setVariant (Lnet/minecraft/world/entity/npc/VillagerType;)V a
	setVillagerData (Lnet/minecraft/world/entity/npc/VillagerData;)V a
net/minecraft/world/entity/npc/VillagerProfession bye
	ALL_ACQUIRABLE_JOBS a
	ARMORER c
	BUTCHER d
	CARTOGRAPHER e
	CLERIC f
	FARMER g
	FISHERMAN h
	FLETCHER i
	LEATHERWORKER j
	LIBRARIAN k
	MASON l
	NITWIT m
	NONE b
	SHEPHERD n
	TOOLSMITH o
	WEAPONSMITH p
	acquirableJobSite s
	heldJobSite r
	name q
	requestedItems t
	secondaryPoi u
	workSound v
	acquirableJobSite ()Ljava/util/function/Predicate; c
	heldJobSite ()Ljava/util/function/Predicate; b
	name ()Ljava/lang/String; a
	register (Ljava/lang/String;Ljava/util/function/Predicate;Ljava/util/function/Predicate;Lcom/google/common/collect/ImmutableSet;Lcom/google/common/collect/ImmutableSet;Lnet/minecraft/sounds/SoundEvent;)Lnet/minecraft/world/entity/npc/VillagerProfession; a
	register (Ljava/lang/String;Ljava/util/function/Predicate;Ljava/util/function/Predicate;Lnet/minecraft/sounds/SoundEvent;)Lnet/minecraft/world/entity/npc/VillagerProfession; a
	register (Ljava/lang/String;Lnet/minecraft/resources/ResourceKey;Lcom/google/common/collect/ImmutableSet;Lcom/google/common/collect/ImmutableSet;Lnet/minecraft/sounds/SoundEvent;)Lnet/minecraft/world/entity/npc/VillagerProfession; a
	register (Ljava/lang/String;Lnet/minecraft/resources/ResourceKey;Lnet/minecraft/sounds/SoundEvent;)Lnet/minecraft/world/entity/npc/VillagerProfession; a
	requestedItems ()Lcom/google/common/collect/ImmutableSet; d
	secondaryPoi ()Lcom/google/common/collect/ImmutableSet; e
	workSound ()Lnet/minecraft/sounds/SoundEvent; f
net/minecraft/world/entity/npc/VillagerTrades byf
	COMMON_ITEMS_SUPPLY d
	DEFAULT_SUPPLY c
	HIGH_TIER_PRICE_MULTIPLIER p
	LOW_TIER_PRICE_MULTIPLIER o
	TRADES a
	UNCOMMON_ITEMS_SUPPLY e
	WANDERING_TRADER_TRADES b
	XP_LEVEL_1_BUY g
	XP_LEVEL_1_SELL f
	XP_LEVEL_2_BUY i
	XP_LEVEL_2_SELL h
	XP_LEVEL_3_BUY k
	XP_LEVEL_3_SELL j
	XP_LEVEL_4_BUY m
	XP_LEVEL_4_SELL l
	XP_LEVEL_5_TRADE n
	toIntMap (Lcom/google/common/collect/ImmutableMap;)Lit/unimi/dsi/fastutil/ints/Int2ObjectMap; a
net/minecraft/world/entity/npc/VillagerTrades$DyedArmorForEmeralds byf$a
	item a
	maxUses c
	value b
	villagerXp d
	getOffer (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/util/RandomSource;)Lnet/minecraft/world/item/trading/MerchantOffer; a
	getRandomDye (Lnet/minecraft/util/RandomSource;)Lnet/minecraft/world/item/DyeItem; a
net/minecraft/world/entity/npc/VillagerTrades$EmeraldForItems byf$b
	cost b
	item a
	maxUses c
	priceMultiplier e
	villagerXp d
	getOffer (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/util/RandomSource;)Lnet/minecraft/world/item/trading/MerchantOffer; a
net/minecraft/world/entity/npc/VillagerTrades$EmeraldsForVillagerTypeItem byf$c
	cost b
	maxUses c
	trades a
	villagerXp d
	getOffer (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/util/RandomSource;)Lnet/minecraft/world/item/trading/MerchantOffer; a
net/minecraft/world/entity/npc/VillagerTrades$EnchantBookForEmeralds byf$d
	villagerXp a
	getOffer (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/util/RandomSource;)Lnet/minecraft/world/item/trading/MerchantOffer; a
net/minecraft/world/entity/npc/VillagerTrades$EnchantedItemForEmeralds byf$e
	baseEmeraldCost b
	itemStack a
	maxUses c
	priceMultiplier e
	villagerXp d
	getOffer (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/util/RandomSource;)Lnet/minecraft/world/item/trading/MerchantOffer; a
net/minecraft/world/entity/npc/VillagerTrades$ItemListing byf$f
	getOffer (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/util/RandomSource;)Lnet/minecraft/world/item/trading/MerchantOffer; a
net/minecraft/world/entity/npc/VillagerTrades$ItemsAndEmeraldsToItems byf$g
	emeraldCost c
	fromCount b
	fromItem a
	maxUses f
	priceMultiplier h
	toCount e
	toItem d
	villagerXp g
	getOffer (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/util/RandomSource;)Lnet/minecraft/world/item/trading/MerchantOffer; a
net/minecraft/world/entity/npc/VillagerTrades$ItemsForEmeralds byf$h
	emeraldCost b
	itemStack a
	maxUses d
	numberOfItems c
	priceMultiplier f
	villagerXp e
	getOffer (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/util/RandomSource;)Lnet/minecraft/world/item/trading/MerchantOffer; a
net/minecraft/world/entity/npc/VillagerTrades$SuspiciousStewForEmerald byf$i
	duration b
	effect a
	priceMultiplier d
	xp c
	getOffer (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/util/RandomSource;)Lnet/minecraft/world/item/trading/MerchantOffer; a
net/minecraft/world/entity/npc/VillagerTrades$TippedArrowForItemsAndEmeralds byf$j
	emeraldCost c
	fromCount g
	fromItem f
	maxUses d
	priceMultiplier h
	toCount b
	toItem a
	villagerXp e
	getOffer (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/util/RandomSource;)Lnet/minecraft/world/item/trading/MerchantOffer; a
net/minecraft/world/entity/npc/VillagerTrades$TreasureMapForEmeralds byf$k
	destination b
	destinationType d
	displayName c
	emeraldCost a
	maxUses e
	villagerXp f
	getOffer (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/util/RandomSource;)Lnet/minecraft/world/item/trading/MerchantOffer; a
net/minecraft/world/entity/npc/VillagerType byg
	BY_BIOME i
	DESERT a
	JUNGLE b
	PLAINS c
	SAVANNA d
	SNOW e
	SWAMP f
	TAIGA g
	name h
	byBiome (Lnet/minecraft/core/Holder;)Lnet/minecraft/world/entity/npc/VillagerType; a
	register (Ljava/lang/String;)Lnet/minecraft/world/entity/npc/VillagerType; a
net/minecraft/world/entity/npc/WanderingTrader byh
	NUMBER_OF_TRADE_OFFERS bV
	despawnDelay bX
	wanderTarget bW
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	aiStep ()V b_
	getAmbientSound ()Lnet/minecraft/sounds/SoundEvent; s
	getBreedOffspring (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/AgeableMob;)Lnet/minecraft/world/entity/AgeableMob; a
	getDeathSound ()Lnet/minecraft/sounds/SoundEvent; g_
	getDespawnDelay ()I gh
	getDrinkingSound (Lnet/minecraft/world/item/ItemStack;)Lnet/minecraft/sounds/SoundEvent; c
	getHurtSound (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEvent; d
	getNotifyTradeSound ()Lnet/minecraft/sounds/SoundEvent; gc
	getTradeUpdatedSound (Z)Lnet/minecraft/sounds/SoundEvent; w
	getWanderTarget ()Lnet/minecraft/core/BlockPos; gj
	maybeDespawn ()V gi
	mobInteract (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResult; b
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	registerGoals ()V x
	removeWhenFarAway (D)Z h
	rewardTradeXp (Lnet/minecraft/world/item/trading/MerchantOffer;)V b
	setDespawnDelay (I)V u
	setWanderTarget (Lnet/minecraft/core/BlockPos;)V i
	showProgressBar ()Z gb
	updateTrades ()V gf
net/minecraft/world/entity/npc/WanderingTrader$WanderToPositionGoal byh$a
	speedModifier c
	stopDistance b
	trader a
	canUse ()Z a
	isTooFarAway (Lnet/minecraft/core/BlockPos;D)Z a
	stop ()V d
	tick ()V e
net/minecraft/world/entity/npc/WanderingTraderSpawner byi
	DEFAULT_SPAWN_DELAY a
	DEFAULT_TICK_DELAY b
	MAX_SPAWN_CHANCE d
	MIN_SPAWN_CHANCE c
	NUMBER_OF_SPAWN_ATTEMPTS g
	SPAWN_CHANCE_INCREASE e
	SPAWN_ONE_IN_X_CHANCE f
	random h
	serverLevelData i
	spawnChance l
	spawnDelay k
	tickDelay j
	findSpawnPositionNear (Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;I)Lnet/minecraft/core/BlockPos; a
	hasEnoughSpace (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Z a
	spawn (Lnet/minecraft/server/level/ServerLevel;)Z a
	tick (Lnet/minecraft/server/level/ServerLevel;ZZ)I a
	tryToSpawnLlamaFor (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/npc/WanderingTrader;I)V a
net/minecraft/world/entity/player/Abilities byl
	flying b
	flyingSpeed f
	instabuild d
	invulnerable a
	mayBuild e
	mayfly c
	walkingSpeed g
	addSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	getFlyingSpeed ()F a
	getWalkingSpeed ()F b
	loadSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	setFlyingSpeed (F)V a
	setWalkingSpeed (F)V b
net/minecraft/world/entity/player/ChatVisiblity bym
	$VALUES g
	BY_ID d
	FULL a
	HIDDEN c
	SYSTEM b
	id e
	key f
	$values ()[Lnet/minecraft/world/entity/player/ChatVisiblity; d
	byId (I)Lnet/minecraft/world/entity/player/ChatVisiblity; a
	getId ()I a
	getKey ()Ljava/lang/String; b
net/minecraft/world/entity/player/Inventory byn
	ALL_ARMOR_SLOTS g
	HELMET_SLOT_ONLY h
	INVENTORY_SIZE d
	NOT_FOUND_INDEX f
	POP_TIME_DURATION c
	SELECTION_SIZE n
	SLOT_OFFHAND e
	armor j
	compartments o
	items i
	offhand k
	player m
	selected l
	timesChanged p
	add (ILnet/minecraft/world/item/ItemStack;)Z c
	add (Lnet/minecraft/world/item/ItemStack;)Z e
	addResource (ILnet/minecraft/world/item/ItemStack;)I d
	addResource (Lnet/minecraft/world/item/ItemStack;)I i
	clearContent ()V a
	clearOrCountMatchingItems (Ljava/util/function/Predicate;ILnet/minecraft/world/Container;)I a
	contains (Lnet/minecraft/tags/TagKey;)Z a
	contains (Lnet/minecraft/world/item/ItemStack;)Z h
	dropAll ()V k
	fillStackedContents (Lnet/minecraft/world/entity/player/StackedContents;)V a
	findSlotMatchingItem (Lnet/minecraft/world/item/ItemStack;)I b
	findSlotMatchingUnusedItem (Lnet/minecraft/world/item/ItemStack;)I c
	getArmor (I)Lnet/minecraft/world/item/ItemStack; e
	getContainerSize ()I b
	getDestroySpeed (Lnet/minecraft/world/level/block/state/BlockState;)F a
	getFreeSlot ()I h
	getItem (I)Lnet/minecraft/world/item/ItemStack; a
	getName ()Lnet/minecraft/network/chat/Component; Z
	getSelected ()Lnet/minecraft/world/item/ItemStack; f
	getSelectionSize ()I g
	getSlotWithRemainingSpace (Lnet/minecraft/world/item/ItemStack;)I d
	getSuitableHotbarSlot ()I i
	getTimesChanged ()I l
	hasRemainingSpaceForItem (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/item/ItemStack;)Z a
	hurtArmor (Lnet/minecraft/world/damagesource/DamageSource;F[I)V a
	isEmpty ()Z ab_
	isHotbarSlot (I)Z d
	load (Lnet/minecraft/nbt/ListTag;)V b
	pickSlot (I)V c
	placeItemBackInInventory (Lnet/minecraft/world/item/ItemStack;)V f
	placeItemBackInInventory (Lnet/minecraft/world/item/ItemStack;Z)V a
	removeFromSelected (Z)Lnet/minecraft/world/item/ItemStack; a
	removeItem (II)Lnet/minecraft/world/item/ItemStack; a
	removeItem (Lnet/minecraft/world/item/ItemStack;)V g
	removeItemNoUpdate (I)Lnet/minecraft/world/item/ItemStack; b
	replaceWith (Lnet/minecraft/world/entity/player/Inventory;)V a
	save (Lnet/minecraft/nbt/ListTag;)Lnet/minecraft/nbt/ListTag; a
	setChanged ()V e
	setItem (ILnet/minecraft/world/item/ItemStack;)V a
	setPickedItem (Lnet/minecraft/world/item/ItemStack;)V a
	stillValid (Lnet/minecraft/world/entity/player/Player;)Z a
	swapPaint (D)V a
	tick ()V j
net/minecraft/world/entity/player/Player byo
	CROUCH_BB_HEIGHT bG
	DATA_PLAYER_ABSORPTION_ID e
	DATA_PLAYER_MAIN_HAND bM
	DATA_PLAYER_MODE_CUSTOMISATION bL
	DATA_SCORE_ID f
	DATA_SHOULDER_LEFT bN
	DATA_SHOULDER_RIGHT bO
	DEFAULT_EYE_HEIGHT bJ
	ENDER_SLOT_OFFSET bF
	FLY_ACHIEVEMENT_SPEED d
	LOGGER b
	MAX_HEALTH bC
	MAX_NAME_LENGTH bB
	POSES c
	SLEEP_DURATION bD
	STANDING_DIMENSIONS bK
	SWIMMING_BB_HEIGHT bI
	SWIMMING_BB_WIDTH bH
	WAKE_UP_DURATION bE
	abilities cn
	bob bV
	containerMenu bR
	cooldowns cs
	defaultFlySpeed ci
	enchantmentSeed ch
	enderChestInventory bP
	experienceLevel ce
	experienceProgress cg
	fishing cj
	foodData bS
	gameProfile cp
	hurtDir ck
	inventory cl
	inventoryMenu bQ
	jumpTriggerTime bT
	lastDeathLocation ct
	lastItemInMainHand cr
	lastLevelUpTime co
	oBob bU
	reducedDebugInfo cq
	sleepCounter cm
	takeXpDelay bW
	timeEntitySatOnShoulder g
	totalExperience cf
	wasUnderwater cd
	xCloak ca
	xCloakO bX
	yCloak cb
	yCloakO bY
	zCloak cc
	zCloakO bZ
	actuallyHurt (Lnet/minecraft/world/damagesource/DamageSource;F)V f
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	addItem (Lnet/minecraft/world/item/ItemStack;)Z i
	addParticlesAroundSelf (Lnet/minecraft/core/particles/ParticleOptions;)V a
	aiStep ()V b_
	animateHurt (F)V m
	attack (Lnet/minecraft/world/entity/Entity;)V d
	awardRecipes (Ljava/util/Collection;)I a
	awardRecipesByKey ([Lnet/minecraft/resources/ResourceLocation;)V a
	awardStat (Lnet/minecraft/resources/ResourceLocation;)V a
	awardStat (Lnet/minecraft/resources/ResourceLocation;I)V a
	awardStat (Lnet/minecraft/stats/Stat;)V b
	awardStat (Lnet/minecraft/stats/Stat;I)V a
	blockActionRestricted (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/GameType;)Z a
	blockUsingShield (Lnet/minecraft/world/entity/LivingEntity;)V d
	canBeHitByProjectile ()Z bn
	canBeSeenAsEnemy ()Z ek
	canEat (Z)Z t
	canHarmPlayer (Lnet/minecraft/world/entity/player/Player;)Z a
	canSprint ()Z dB
	canTakeItem (Lnet/minecraft/world/item/ItemStack;)Z f
	canUseGameMasterBlocks ()Z gk
	causeFallDamage (FFLnet/minecraft/world/damagesource/DamageSource;)Z a
	causeFoodExhaustion (F)V z
	checkMovementStatistics (DDD)V r
	checkRidingStatistics (DDD)V s
	closeContainer ()V q
	createAttributes ()Lnet/minecraft/world/entity/ai/attributes/AttributeSupplier$Builder; fC
	createItemCooldowns ()Lnet/minecraft/world/item/ItemCooldowns; k
	crit (Lnet/minecraft/world/entity/Entity;)V a
	decorateDisplayNameComponent (Lnet/minecraft/network/chat/MutableComponent;)Lnet/minecraft/network/chat/MutableComponent; a
	defineSynchedData ()V a_
	destroyVanishingCursedItems ()V fJ
	die (Lnet/minecraft/world/damagesource/DamageSource;)V a
	disableShield (Z)V s
	displayClientMessage (Lnet/minecraft/network/chat/Component;Z)V a
	doAutoAttackOnTouch (Lnet/minecraft/world/entity/LivingEntity;)V g
	doCloseContainer ()V r
	doWaterSplashEffect ()V bd
	doesEmitEquipEvent (Lnet/minecraft/world/entity/EquipmentSlot;)Z a
	drop (Lnet/minecraft/world/item/ItemStack;Z)Lnet/minecraft/world/entity/item/ItemEntity; a
	drop (Lnet/minecraft/world/item/ItemStack;ZZ)Lnet/minecraft/world/entity/item/ItemEntity; a
	dropEquipment ()V eu
	eat (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/item/ItemStack;)Lnet/minecraft/world/item/ItemStack; a
	findRespawnPositionAndUseSpawnBlock (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;FZZ)Ljava/util/Optional; a
	freeAt (Lnet/minecraft/core/BlockPos;)Z h
	getAbilities ()Lnet/minecraft/world/entity/player/Abilities; fO
	getAbsorptionAmount ()F ff
	getArmorSlots ()Ljava/lang/Iterable; bJ
	getAttackStrengthScale (F)F A
	getBlockSpeedFactor ()F aH
	getCooldowns ()Lnet/minecraft/world/item/ItemCooldowns; gi
	getCurrentItemAttackStrengthDelay ()F gg
	getDeathSound ()Lnet/minecraft/sounds/SoundEvent; g_
	getDestroySpeed (Lnet/minecraft/world/level/block/state/BlockState;)F d
	getDimensionChangingDelay ()I bH
	getDimensions (Lnet/minecraft/world/entity/Pose;)Lnet/minecraft/world/entity/EntityDimensions; a
	getDismountPoses ()Lcom/google/common/collect/ImmutableList; fv
	getDisplayName ()Lnet/minecraft/network/chat/Component; H_
	getEnchantmentSeed ()I fV
	getEnderChestInventory ()Lnet/minecraft/world/inventory/PlayerEnderChestContainer; ga
	getExperienceReward ()I ea
	getFallSounds ()Lnet/minecraft/world/entity/LivingEntity$Fallsounds; eC
	getFireImmuneTicks ()I cZ
	getFlyingSpeed ()F eZ
	getFoodData ()Lnet/minecraft/world/food/FoodData; fX
	getGameProfile ()Lcom/mojang/authlib/GameProfile; fM
	getHandSlots ()Ljava/lang/Iterable; bI
	getHurtDir ()F eB
	getHurtSound (Lnet/minecraft/world/damagesource/DamageSource;)Lnet/minecraft/sounds/SoundEvent; d
	getInventory ()Lnet/minecraft/world/entity/player/Inventory; fN
	getItemBySlot (Lnet/minecraft/world/entity/EquipmentSlot;)Lnet/minecraft/world/item/ItemStack; c
	getLastDeathLocation ()Ljava/util/Optional; gm
	getLuck ()F gj
	getMainArm ()Lnet/minecraft/world/entity/HumanoidArm; fh
	getMovementEmission ()Lnet/minecraft/world/entity/Entity$MovementEmission; aS
	getMyRidingOffset ()D bw
	getName ()Lnet/minecraft/network/chat/Component; Z
	getPortalWaitTime ()I at
	getProjectile (Lnet/minecraft/world/item/ItemStack;)Lnet/minecraft/world/item/ItemStack; g
	getRopeHoldPosition (F)Lnet/minecraft/world/phys/Vec3; q
	getScore ()I fI
	getScoreboard ()Lnet/minecraft/world/scores/Scoreboard; gc
	getScoreboardName ()Ljava/lang/String; cv
	getShoulderEntityLeft ()Lnet/minecraft/nbt/CompoundTag; ge
	getShoulderEntityRight ()Lnet/minecraft/nbt/CompoundTag; gf
	getSleepTimer ()I fR
	getSlot (I)Lnet/minecraft/world/entity/SlotAccess; a_
	getSoundSource ()Lnet/minecraft/sounds/SoundSource; cY
	getSpeed ()F fa
	getStandingEyeHeight (Lnet/minecraft/world/entity/Pose;Lnet/minecraft/world/entity/EntityDimensions;)F b
	getSwimHighSpeedSplashSound ()Lnet/minecraft/sounds/SoundEvent; aL
	getSwimSound ()Lnet/minecraft/sounds/SoundEvent; aJ
	getSwimSplashSound ()Lnet/minecraft/sounds/SoundEvent; aK
	getWardenSpawnTracker ()Ljava/util/Optional; W
	getXpNeededForNextLevel ()I fW
	giveExperienceLevels (I)V c
	giveExperiencePoints (I)V d
	handleEntityEvent (B)V b
	hasContainerOpen ()Z fP
	hasCorrectToolForDrops (Lnet/minecraft/world/level/block/state/BlockState;)Z e
	hurt (Lnet/minecraft/world/damagesource/DamageSource;F)Z a
	hurtArmor (Lnet/minecraft/world/damagesource/DamageSource;F)V b
	hurtCurrentlyUsedShield (F)V u
	hurtHelmet (Lnet/minecraft/world/damagesource/DamageSource;F)V c
	increaseScore (I)V s
	interactOn (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResult; a
	isAboveGround ()Z y
	isAffectedByFluids ()Z dW
	isAlwaysExperienceDropper ()Z eb
	isAlwaysTicking ()Z dH
	isCreative ()Z f
	isHurt ()Z fY
	isImmobile ()Z eT
	isInvulnerableTo (Lnet/minecraft/world/damagesource/DamageSource;)Z b
	isLocalPlayer ()Z g
	isModelPartShown (Lnet/minecraft/world/entity/player/PlayerModelPart;)Z a
	isPushedByFluid ()Z cw
	isReducedDebugInfo ()Z gd
	isScoping ()Z gl
	isSecondaryUseActive ()Z fD
	isSleepingLongEnough ()Z fQ
	isSpectator ()Z G_
	isStayingOnGroundSurface ()Z fF
	isSwimming ()Z bW
	isTextFilteringEnabled ()Z U
	jumpFromGround ()V eW
	killedEntity (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)Z a
	magicCrit (Lnet/minecraft/world/entity/Entity;)V b
	makeStuckInBlock (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/phys/Vec3;)V a
	mayBuild ()Z fZ
	mayUseItemAt (Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;Lnet/minecraft/world/item/ItemStack;)Z a
	maybeBackOffFromEdge (Lnet/minecraft/world/phys/Vec3;Lnet/minecraft/world/entity/MoverType;)Lnet/minecraft/world/phys/Vec3; a
	moveCloak ()V x
	onEnchantmentPerformed (Lnet/minecraft/world/item/ItemStack;I)V a
	onSoulSpeedBlock ()Z dQ
	onUpdateAbilities ()V w
	openCommandBlock (Lnet/minecraft/world/level/block/entity/CommandBlockEntity;)V a
	openHorseInventory (Lnet/minecraft/world/entity/animal/horse/AbstractHorse;Lnet/minecraft/world/Container;)V a
	openItemGui (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/InteractionHand;)V a
	openJigsawBlock (Lnet/minecraft/world/level/block/entity/JigsawBlockEntity;)V a
	openMenu (Lnet/minecraft/world/MenuProvider;)Ljava/util/OptionalInt; a
	openMinecartCommandBlock (Lnet/minecraft/world/level/BaseCommandBlock;)V a
	openStructureBlock (Lnet/minecraft/world/level/block/entity/StructureBlockEntity;)V a
	openTextEdit (Lnet/minecraft/world/level/block/entity/SignBlockEntity;Z)V a
	playNotifySound (Lnet/minecraft/sounds/SoundEvent;Lnet/minecraft/sounds/SoundSource;FF)V a
	playShoulderEntityAmbientSound (Lnet/minecraft/nbt/CompoundTag;)V c
	playSound (Lnet/minecraft/sounds/SoundEvent;FF)V a
	playStepSound (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V b
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	remove (Lnet/minecraft/world/entity/Entity$RemovalReason;)V a
	removeEntitiesOnShoulder ()V gb
	removeVehicle ()V bA
	resetAttackStrengthTicker ()V gh
	resetRecipes (Ljava/util/Collection;)I b
	resetStat (Lnet/minecraft/stats/Stat;)V a
	respawn ()V fL
	respawnEntityOnShoulder (Lnet/minecraft/nbt/CompoundTag;)V k
	rideTick ()V bv
	sendMerchantOffers (ILnet/minecraft/world/item/trading/MerchantOffers;IIZZ)V a
	serverAiStep ()V fc
	setAbsorptionAmount (F)V y
	setEntityOnShoulder (Lnet/minecraft/nbt/CompoundTag;)Z h
	setItemSlot (Lnet/minecraft/world/entity/EquipmentSlot;Lnet/minecraft/world/item/ItemStack;)V a
	setLastDeathLocation (Ljava/util/Optional;)V a
	setMainArm (Lnet/minecraft/world/entity/HumanoidArm;)V a
	setReducedDebugInfo (Z)V u
	setRemainingFireTicks (I)V h
	setScore (I)V r
	setShoulderEntityLeft (Lnet/minecraft/nbt/CompoundTag;)V i
	setShoulderEntityRight (Lnet/minecraft/nbt/CompoundTag;)V j
	shouldBeSaved ()Z dG
	shouldRemoveSoulSpeed (Lnet/minecraft/world/level/block/state/BlockState;)Z c
	shouldShowName ()Z cz
	startAutoSpinAttack (I)V t
	startFallFlying ()V fT
	startSleepInBed (Lnet/minecraft/core/BlockPos;)Lcom/mojang/datafixers/util/Either; a
	stopFallFlying ()V fU
	stopSleepInBed (ZZ)V a
	stopSleeping ()V fz
	sweepAttack ()V fK
	tick ()V l
	touch (Lnet/minecraft/world/entity/Entity;)V c
	travel (Lnet/minecraft/world/phys/Vec3;)V h
	triggerRecipeCrafted (Lnet/minecraft/world/item/crafting/Recipe;Ljava/util/List;)V a
	tryToStartFallFlying ()Z fS
	turtleHelmetTick ()V s
	updateIsUnderwater ()Z fG
	updatePlayerPose ()V fH
	updateSwimming ()V ba
	updateTutorialInventoryAction (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/inventory/ClickAction;)V a
	wantsToStopRiding ()Z fE
net/minecraft/world/entity/player/Player$BedSleepingProblem byo$a
	$VALUES h
	NOT_POSSIBLE_HERE a
	NOT_POSSIBLE_NOW b
	NOT_SAFE f
	OBSTRUCTED d
	OTHER_PROBLEM e
	TOO_FAR_AWAY c
	message g
	$values ()[Lnet/minecraft/world/entity/player/Player$BedSleepingProblem; b
	getMessage ()Lnet/minecraft/network/chat/Component; a
net/minecraft/world/entity/player/PlayerModelPart byp
	$VALUES l
	CAPE a
	HAT g
	JACKET b
	LEFT_PANTS_LEG e
	LEFT_SLEEVE c
	RIGHT_PANTS_LEG f
	RIGHT_SLEEVE d
	bit h
	id j
	mask i
	name k
	$values ()[Lnet/minecraft/world/entity/player/PlayerModelPart; e
	getBit ()I b
	getId ()Ljava/lang/String; c
	getMask ()I a
	getName ()Lnet/minecraft/network/chat/Component; d
net/minecraft/world/entity/player/ProfileKeyPair byq
	CODEC a
	privateKey b
	publicKey c
	refreshedAfter d
	dueRefresh ()Z a
	privateKey ()Ljava/security/PrivateKey; b
	publicKey ()Lnet/minecraft/world/entity/player/ProfilePublicKey; c
	refreshedAfter ()Ljava/time/Instant; d
net/minecraft/world/entity/player/ProfilePublicKey byr
	EXPIRED_PROFILE_PUBLIC_KEY a
	EXPIRY_GRACE_PERIOD b
	INVALID_SIGNATURE e
	TRUSTED_CODEC c
	data d
	createSignatureValidator ()Lnet/minecraft/util/SignatureValidator; a
	createValidated (Lnet/minecraft/util/SignatureValidator;Ljava/util/UUID;Lnet/minecraft/world/entity/player/ProfilePublicKey$Data;Ljava/time/Duration;)Lnet/minecraft/world/entity/player/ProfilePublicKey; a
	data ()Lnet/minecraft/world/entity/player/ProfilePublicKey$Data; b
net/minecraft/world/entity/player/ProfilePublicKey$Data byr$a
	CODEC a
	MAX_KEY_SIGNATURE_SIZE e
	expiresAt b
	key c
	keySignature d
	expiresAt ()Ljava/time/Instant; b
	hasExpired ()Z a
	hasExpired (Ljava/time/Duration;)Z a
	key ()Ljava/security/PublicKey; c
	keySignature ()[B d
	signedPayload (Ljava/util/UUID;)[B a
	validateSignature (Lnet/minecraft/util/SignatureValidator;Ljava/util/UUID;)Z a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/world/entity/player/ProfilePublicKey$ValidationException byr$b
net/minecraft/world/entity/player/StackedContents bys
	EMPTY b
	contents a
	accountSimpleStack (Lnet/minecraft/world/item/ItemStack;)V a
	accountStack (Lnet/minecraft/world/item/ItemStack;)V b
	accountStack (Lnet/minecraft/world/item/ItemStack;I)V a
	canCraft (Lnet/minecraft/world/item/crafting/Recipe;Lit/unimi/dsi/fastutil/ints/IntList;)Z a
	canCraft (Lnet/minecraft/world/item/crafting/Recipe;Lit/unimi/dsi/fastutil/ints/IntList;I)Z a
	clear ()V a
	fromStackingIndex (I)Lnet/minecraft/world/item/ItemStack; a
	getBiggestCraftableStack (Lnet/minecraft/world/item/crafting/Recipe;ILit/unimi/dsi/fastutil/ints/IntList;)I a
	getBiggestCraftableStack (Lnet/minecraft/world/item/crafting/Recipe;Lit/unimi/dsi/fastutil/ints/IntList;)I b
	getStackingIndex (Lnet/minecraft/world/item/ItemStack;)I c
	has (I)Z b
	put (II)V b
	take (II)I a
net/minecraft/world/entity/player/StackedContents$RecipePicker bys$a
	data g
	ingredientCount d
	ingredients c
	itemCount f
	items e
	path h
	recipe b
	dfs (I)Z a
	getIndex (ZII)I d
	getMinIngredientCount ()I b
	getSatisfiedIndex (I)I d
	getUniqueAvailableIngredientItems ()[I a
	getVisitedIndex (ZI)I c
	hasConnection (ZII)Z a
	hasResidual (ZII)Z b
	hasVisited (ZI)Z b
	isSatisfied (I)Z b
	setSatisfied (I)V c
	toggleResidual (ZII)V c
	tryPick (ILit/unimi/dsi/fastutil/ints/IntList;)Z a
	tryPickAll (ILit/unimi/dsi/fastutil/ints/IntList;)I b
	visit (ZI)V a
net/minecraft/world/entity/projectile/AbstractArrow byu
	ARROW_BASE_DAMAGE f
	FLAG_CRIT i
	FLAG_CROSSBOW k
	FLAG_NOPHYSICS j
	ID_FLAGS g
	PIERCE_LEVEL h
	baseDamage n
	inGround b
	inGroundTime c
	knockback o
	lastState l
	life m
	pickup d
	piercedAndKilledEntities r
	piercingIgnoreEntityIds q
	shakeTime e
	soundEvent p
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	canHitEntity (Lnet/minecraft/world/entity/Entity;)Z a
	defineSynchedData ()V a_
	doPostHurtEffects (Lnet/minecraft/world/entity/LivingEntity;)V a
	findHitEntity (Lnet/minecraft/world/phys/Vec3;Lnet/minecraft/world/phys/Vec3;)Lnet/minecraft/world/phys/EntityHitResult; a
	getBaseDamage ()D q
	getDefaultHitGroundSoundEvent ()Lnet/minecraft/sounds/SoundEvent; k
	getEyeHeight (Lnet/minecraft/world/entity/Pose;Lnet/minecraft/world/entity/EntityDimensions;)F a
	getHitGroundSoundEvent ()Lnet/minecraft/sounds/SoundEvent; o
	getKnockback ()I r
	getMovementEmission ()Lnet/minecraft/world/entity/Entity$MovementEmission; aS
	getPickupItem ()Lnet/minecraft/world/item/ItemStack; p
	getPierceLevel ()B w
	getWaterInertia ()F x
	isAttackable ()Z cn
	isCritArrow ()Z s
	isNoPhysics ()Z y
	lerpMotion (DDD)V l
	lerpTo (DDDFFIZ)V a
	move (Lnet/minecraft/world/entity/MoverType;Lnet/minecraft/world/phys/Vec3;)V a
	onHitBlock (Lnet/minecraft/world/phys/BlockHitResult;)V a
	onHitEntity (Lnet/minecraft/world/phys/EntityHitResult;)V a
	playerTouch (Lnet/minecraft/world/entity/player/Player;)V b_
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	resetPiercedEntities ()V E
	setBaseDamage (D)V h
	setCritArrow (Z)V a
	setEnchantmentEffectsFromEntity (Lnet/minecraft/world/entity/LivingEntity;F)V a
	setFlag (IZ)V a
	setKnockback (I)V b
	setNoPhysics (Z)V p
	setOwner (Lnet/minecraft/world/entity/Entity;)V b
	setPierceLevel (B)V a
	setShotFromCrossbow (Z)V q
	setSoundEvent (Lnet/minecraft/sounds/SoundEvent;)V b
	shoot (DDDFF)V c
	shotFromCrossbow ()Z t
	shouldFall ()Z z
	shouldRenderAtSqrDistance (D)Z a
	startFalling ()V D
	tick ()V l
	tickDespawn ()V j
	tryPickup (Lnet/minecraft/world/entity/player/Player;)Z a
net/minecraft/world/entity/projectile/AbstractArrow$Pickup byu$a
	$VALUES d
	ALLOWED b
	CREATIVE_ONLY c
	DISALLOWED a
	$values ()[Lnet/minecraft/world/entity/projectile/AbstractArrow$Pickup; a
	byOrdinal (I)Lnet/minecraft/world/entity/projectile/AbstractArrow$Pickup; a
net/minecraft/world/entity/projectile/AbstractHurtingProjectile byv
	xPower b
	yPower c
	zPower d
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	canHitEntity (Lnet/minecraft/world/entity/Entity;)Z a
	defineSynchedData ()V a_
	getAddEntityPacket ()Lnet/minecraft/network/protocol/Packet; S
	getInertia ()F o
	getLightLevelDependentMagicValue ()F bj
	getPickRadius ()F bC
	getTrailParticle ()Lnet/minecraft/core/particles/ParticleOptions; k
	hurt (Lnet/minecraft/world/damagesource/DamageSource;F)Z a
	isPickable ()Z bo
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	recreateFromPacket (Lnet/minecraft/network/protocol/game/ClientboundAddEntityPacket;)V a
	shouldBurn ()Z aa_
	shouldRenderAtSqrDistance (D)Z a
	tick ()V l
net/minecraft/world/entity/projectile/Arrow byw
	EVENT_POTION_PUFF i
	EXPOSED_POTION_DECAY_TIME f
	ID_EFFECT_COLOR h
	NO_EFFECT_COLOR g
	effects k
	fixedColor l
	potion j
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	addEffect (Lnet/minecraft/world/effect/MobEffectInstance;)V a
	defineSynchedData ()V a_
	doPostHurtEffects (Lnet/minecraft/world/entity/LivingEntity;)V a
	getColor ()I z
	getCustomColor (Lnet/minecraft/world/item/ItemStack;)I c
	getPickupItem ()Lnet/minecraft/world/item/ItemStack; p
	handleEntityEvent (B)V b
	makeParticle (I)V c
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	setEffectsFromItem (Lnet/minecraft/world/item/ItemStack;)V a
	setFixedColor (I)V d
	tick ()V l
	updateColor ()V D
net/minecraft/world/entity/projectile/DragonFireball byx
	SPLASH_RANGE e
	getTrailParticle ()Lnet/minecraft/core/particles/ParticleOptions; k
	hurt (Lnet/minecraft/world/damagesource/DamageSource;F)Z a
	isPickable ()Z bo
	onHit (Lnet/minecraft/world/phys/HitResult;)V a
	shouldBurn ()Z aa_
net/minecraft/world/entity/projectile/EvokerFangs byy
	ATTACK_DURATION b
	ATTACK_TRIGGER_TICKS d
	LIFE_OFFSET c
	clientSideAttackStarted h
	lifeTicks g
	owner i
	ownerUUID j
	sentSpikeEvent f
	warmupDelayTicks e
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	dealDamageTo (Lnet/minecraft/world/entity/LivingEntity;)V c
	defineSynchedData ()V a_
	getAnimationProgress (F)F a
	getOwner ()Lnet/minecraft/world/entity/Entity; v
	getOwner ()Lnet/minecraft/world/entity/LivingEntity; j
	handleEntityEvent (B)V b
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	setOwner (Lnet/minecraft/world/entity/LivingEntity;)V a
	tick ()V l
net/minecraft/world/entity/projectile/EyeOfEnder byz
	DATA_ITEM_STACK b
	life f
	surviveAfterDeath g
	tx c
	ty d
	tz e
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	defineSynchedData ()V a_
	getItem ()Lnet/minecraft/world/item/ItemStack; j
	getItemRaw ()Lnet/minecraft/world/item/ItemStack; k
	getLightLevelDependentMagicValue ()F bj
	isAttackable ()Z cn
	lerpMotion (DDD)V l
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	setItem (Lnet/minecraft/world/item/ItemStack;)V a
	shouldRenderAtSqrDistance (D)Z a
	signalTo (Lnet/minecraft/core/BlockPos;)V a
	tick ()V l
net/minecraft/world/entity/projectile/Fireball bza
	DATA_ITEM_STACK e
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	defineSynchedData ()V a_
	getItem ()Lnet/minecraft/world/item/ItemStack; j
	getItemRaw ()Lnet/minecraft/world/item/ItemStack; p
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	setItem (Lnet/minecraft/world/item/ItemStack;)V a
net/minecraft/world/entity/projectile/FireworkRocketEntity bzb
	DATA_ATTACHED_TO_TARGET c
	DATA_ID_FIREWORKS_ITEM b
	DATA_SHOT_AT_ANGLE d
	attachedToEntity g
	life e
	lifetime f
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	dealExplosionDamage ()V q
	defineSynchedData ()V a_
	explode ()V o
	getItem ()Lnet/minecraft/world/item/ItemStack; j
	handleEntityEvent (B)V b
	hasExplosion ()Z p
	isAttachedToEntity ()Z r
	isAttackable ()Z cn
	isShotAtAngle ()Z k
	onHitBlock (Lnet/minecraft/world/phys/BlockHitResult;)V a
	onHitEntity (Lnet/minecraft/world/phys/EntityHitResult;)V a
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	shouldRender (DDD)Z k
	shouldRenderAtSqrDistance (D)Z a
	tick ()V l
net/minecraft/world/entity/projectile/FishingHook bzc
	DATA_BITING h
	DATA_HOOKED_ENTITY g
	LOGGER b
	MAX_OUT_OF_WATER_TIME f
	biting d
	currentState p
	fishAngle m
	hookedIn o
	life i
	luck q
	lureSpeed r
	nibble j
	openWater n
	outOfWaterTime e
	syncronizedRandom c
	timeUntilHooked l
	timeUntilLured k
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	calculateOpenWater (Lnet/minecraft/core/BlockPos;)Z b
	canChangeDimensions ()Z cq
	canHitEntity (Lnet/minecraft/world/entity/Entity;)Z a
	catchingFish (Lnet/minecraft/core/BlockPos;)V a
	checkCollision ()V p
	defineSynchedData ()V a_
	getAddEntityPacket ()Lnet/minecraft/network/protocol/Packet; S
	getHookedIn ()Lnet/minecraft/world/entity/Entity; o
	getMovementEmission ()Lnet/minecraft/world/entity/Entity$MovementEmission; aS
	getOpenWaterTypeForArea (Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/entity/projectile/FishingHook$OpenWaterType; a
	getOpenWaterTypeForBlock (Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/entity/projectile/FishingHook$OpenWaterType; c
	getPlayerOwner ()Lnet/minecraft/world/entity/player/Player; k
	handleEntityEvent (B)V b
	isOpenWaterFishing ()Z j
	lerpTo (DDDFFIZ)V a
	onClientRemoval ()V ak
	onHitBlock (Lnet/minecraft/world/phys/BlockHitResult;)V a
	onHitEntity (Lnet/minecraft/world/phys/EntityHitResult;)V a
	onSyncedDataUpdated (Lnet/minecraft/network/syncher/EntityDataAccessor;)V a
	pullEntity (Lnet/minecraft/world/entity/Entity;)V c
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	recreateFromPacket (Lnet/minecraft/network/protocol/game/ClientboundAddEntityPacket;)V a
	remove (Lnet/minecraft/world/entity/Entity$RemovalReason;)V a
	retrieve (Lnet/minecraft/world/item/ItemStack;)I a
	setHookedEntity (Lnet/minecraft/world/entity/Entity;)V x
	setOwner (Lnet/minecraft/world/entity/Entity;)V b
	shouldRenderAtSqrDistance (D)Z a
	shouldStopFishing (Lnet/minecraft/world/entity/player/Player;)Z a
	tick ()V l
	updateOwnerInfo (Lnet/minecraft/world/entity/projectile/FishingHook;)V a
net/minecraft/world/entity/projectile/FishingHook$FishHookState bzc$a
	$VALUES d
	BOBBING c
	FLYING a
	HOOKED_IN_ENTITY b
	$values ()[Lnet/minecraft/world/entity/projectile/FishingHook$FishHookState; a
net/minecraft/world/entity/projectile/FishingHook$OpenWaterType bzc$b
	$VALUES d
	ABOVE_WATER a
	INSIDE_WATER b
	INVALID c
	$values ()[Lnet/minecraft/world/entity/projectile/FishingHook$OpenWaterType; a
net/minecraft/world/entity/projectile/ItemSupplier bzd
	getItem ()Lnet/minecraft/world/item/ItemStack; j
net/minecraft/world/entity/projectile/LargeFireball bze
	explosionPower e
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	onHit (Lnet/minecraft/world/phys/HitResult;)V a
	onHitEntity (Lnet/minecraft/world/phys/EntityHitResult;)V a
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
net/minecraft/world/entity/projectile/LlamaSpit bzf
	defineSynchedData ()V a_
	onHitBlock (Lnet/minecraft/world/phys/BlockHitResult;)V a
	onHitEntity (Lnet/minecraft/world/phys/EntityHitResult;)V a
	recreateFromPacket (Lnet/minecraft/network/protocol/game/ClientboundAddEntityPacket;)V a
	tick ()V l
net/minecraft/world/entity/projectile/Projectile bzg
	cachedOwner c
	hasBeenShot e
	leftOwner d
	ownerUUID b
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	canHitEntity (Lnet/minecraft/world/entity/Entity;)Z a
	checkLeftOwner ()Z k
	getAddEntityPacket ()Lnet/minecraft/network/protocol/Packet; S
	getEffectSource ()Lnet/minecraft/world/entity/Entity; A
	getOwner ()Lnet/minecraft/world/entity/Entity; v
	lerpMotion (DDD)V l
	lerpRotation (FF)F d
	mayInteract (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)Z a
	onHit (Lnet/minecraft/world/phys/HitResult;)V a
	onHitBlock (Lnet/minecraft/world/phys/BlockHitResult;)V a
	onHitEntity (Lnet/minecraft/world/phys/EntityHitResult;)V a
	ownedBy (Lnet/minecraft/world/entity/Entity;)Z d
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	recreateFromPacket (Lnet/minecraft/network/protocol/game/ClientboundAddEntityPacket;)V a
	setOwner (Lnet/minecraft/world/entity/Entity;)V b
	shoot (DDDFF)V c
	shootFromRotation (Lnet/minecraft/world/entity/Entity;FFFFF)V a
	tick ()V l
	updateRotation ()V C
net/minecraft/world/entity/projectile/ProjectileUtil bzh
	getEntityHitResult (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/phys/Vec3;Lnet/minecraft/world/phys/Vec3;Lnet/minecraft/world/phys/AABB;Ljava/util/function/Predicate;D)Lnet/minecraft/world/phys/EntityHitResult; a
	getEntityHitResult (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/phys/Vec3;Lnet/minecraft/world/phys/Vec3;Lnet/minecraft/world/phys/AABB;Ljava/util/function/Predicate;)Lnet/minecraft/world/phys/EntityHitResult; a
	getEntityHitResult (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/phys/Vec3;Lnet/minecraft/world/phys/Vec3;Lnet/minecraft/world/phys/AABB;Ljava/util/function/Predicate;F)Lnet/minecraft/world/phys/EntityHitResult; a
	getHitResult (Lnet/minecraft/world/phys/Vec3;Lnet/minecraft/world/entity/Entity;Ljava/util/function/Predicate;Lnet/minecraft/world/phys/Vec3;Lnet/minecraft/world/level/Level;)Lnet/minecraft/world/phys/HitResult; a
	getHitResultOnMoveVector (Lnet/minecraft/world/entity/Entity;Ljava/util/function/Predicate;)Lnet/minecraft/world/phys/HitResult; a
	getHitResultOnViewVector (Lnet/minecraft/world/entity/Entity;Ljava/util/function/Predicate;D)Lnet/minecraft/world/phys/HitResult; a
	getMobArrow (Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/item/ItemStack;F)Lnet/minecraft/world/entity/projectile/AbstractArrow; a
	getWeaponHoldingHand (Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/item/Item;)Lnet/minecraft/world/InteractionHand; a
	rotateTowardsMovement (Lnet/minecraft/world/entity/Entity;F)V a
net/minecraft/world/entity/projectile/ShulkerBullet bzi
	SPEED b
	currentMoveDirection d
	finalTarget c
	flightSteps e
	targetDeltaX f
	targetDeltaY g
	targetDeltaZ h
	targetId i
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	canHitEntity (Lnet/minecraft/world/entity/Entity;)Z a
	checkDespawn ()V du
	defineSynchedData ()V a_
	destroy ()V k
	getLightLevelDependentMagicValue ()F bj
	getMoveDirection ()Lnet/minecraft/core/Direction; j
	getSoundSource ()Lnet/minecraft/sounds/SoundSource; cY
	hurt (Lnet/minecraft/world/damagesource/DamageSource;F)Z a
	isOnFire ()Z bL
	isPickable ()Z bo
	onHit (Lnet/minecraft/world/phys/HitResult;)V a
	onHitBlock (Lnet/minecraft/world/phys/BlockHitResult;)V a
	onHitEntity (Lnet/minecraft/world/phys/EntityHitResult;)V a
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	recreateFromPacket (Lnet/minecraft/network/protocol/game/ClientboundAddEntityPacket;)V a
	selectNextMoveDirection (Lnet/minecraft/core/Direction$Axis;)V a
	setMoveDirection (Lnet/minecraft/core/Direction;)V a
	shouldRenderAtSqrDistance (D)Z a
	tick ()V l
net/minecraft/world/entity/projectile/SmallFireball bzj
	hurt (Lnet/minecraft/world/damagesource/DamageSource;F)Z a
	isPickable ()Z bo
	onHit (Lnet/minecraft/world/phys/HitResult;)V a
	onHitBlock (Lnet/minecraft/world/phys/BlockHitResult;)V a
	onHitEntity (Lnet/minecraft/world/phys/EntityHitResult;)V a
net/minecraft/world/entity/projectile/Snowball bzk
	getDefaultItem ()Lnet/minecraft/world/item/Item; k
	getParticle ()Lnet/minecraft/core/particles/ParticleOptions; q
	handleEntityEvent (B)V b
	onHit (Lnet/minecraft/world/phys/HitResult;)V a
	onHitEntity (Lnet/minecraft/world/phys/EntityHitResult;)V a
net/minecraft/world/entity/projectile/SpectralArrow bzl
	duration f
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	doPostHurtEffects (Lnet/minecraft/world/entity/LivingEntity;)V a
	getPickupItem ()Lnet/minecraft/world/item/ItemStack; p
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	tick ()V l
net/minecraft/world/entity/projectile/ThrowableItemProjectile bzm
	DATA_ITEM_STACK b
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	defineSynchedData ()V a_
	getDefaultItem ()Lnet/minecraft/world/item/Item; k
	getItem ()Lnet/minecraft/world/item/ItemStack; j
	getItemRaw ()Lnet/minecraft/world/item/ItemStack; o
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	setItem (Lnet/minecraft/world/item/ItemStack;)V a
net/minecraft/world/entity/projectile/ThrowableProjectile bzn
	getGravity ()F p
	shouldRenderAtSqrDistance (D)Z a
	tick ()V l
net/minecraft/world/entity/projectile/ThrownEgg bzo
	getDefaultItem ()Lnet/minecraft/world/item/Item; k
	handleEntityEvent (B)V b
	onHit (Lnet/minecraft/world/phys/HitResult;)V a
	onHitEntity (Lnet/minecraft/world/phys/EntityHitResult;)V a
net/minecraft/world/entity/projectile/ThrownEnderpearl bzp
	changeDimension (Lnet/minecraft/server/level/ServerLevel;)Lnet/minecraft/world/entity/Entity; b
	getDefaultItem ()Lnet/minecraft/world/item/Item; k
	onHit (Lnet/minecraft/world/phys/HitResult;)V a
	onHitEntity (Lnet/minecraft/world/phys/EntityHitResult;)V a
	tick ()V l
net/minecraft/world/entity/projectile/ThrownExperienceBottle bzq
	getDefaultItem ()Lnet/minecraft/world/item/Item; k
	getGravity ()F p
	onHit (Lnet/minecraft/world/phys/HitResult;)V a
net/minecraft/world/entity/projectile/ThrownPotion bzr
	SPLASH_RANGE b
	SPLASH_RANGE_SQ d
	WATER_SENSITIVE_OR_ON_FIRE c
	applySplash (Ljava/util/List;Lnet/minecraft/world/entity/Entity;)V a
	applyWater ()V q
	dowseFire (Lnet/minecraft/core/BlockPos;)V a
	getDefaultItem ()Lnet/minecraft/world/item/Item; k
	getGravity ()F p
	isLingering ()Z r
	makeAreaOfEffectCloud (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/item/alchemy/Potion;)V a
	onHit (Lnet/minecraft/world/phys/HitResult;)V a
	onHitBlock (Lnet/minecraft/world/phys/BlockHitResult;)V a
net/minecraft/world/entity/projectile/ThrownTrident bzs
	ID_FOIL h
	ID_LOYALTY g
	clientSideReturnTridentTickCount f
	dealtDamage j
	tridentItem i
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	defineSynchedData ()V a_
	findHitEntity (Lnet/minecraft/world/phys/Vec3;Lnet/minecraft/world/phys/Vec3;)Lnet/minecraft/world/phys/EntityHitResult; a
	getDefaultHitGroundSoundEvent ()Lnet/minecraft/sounds/SoundEvent; k
	getPickupItem ()Lnet/minecraft/world/item/ItemStack; p
	getWaterInertia ()F x
	isAcceptibleReturnOwner ()Z E
	isChanneling ()Z D
	isFoil ()Z z
	onHitEntity (Lnet/minecraft/world/phys/EntityHitResult;)V a
	playerTouch (Lnet/minecraft/world/entity/player/Player;)V b_
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	shouldRender (DDD)Z k
	tick ()V l
	tickDespawn ()V j
	tryPickup (Lnet/minecraft/world/entity/player/Player;)Z a
net/minecraft/world/entity/projectile/WitherSkull bzt
	DATA_DANGEROUS e
	defineSynchedData ()V a_
	getBlockExplosionResistance (Lnet/minecraft/world/level/Explosion;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/material/FluidState;F)F a
	getInertia ()F o
	hurt (Lnet/minecraft/world/damagesource/DamageSource;F)Z a
	isDangerous ()Z p
	isOnFire ()Z bL
	isPickable ()Z bo
	onHit (Lnet/minecraft/world/phys/HitResult;)V a
	onHitEntity (Lnet/minecraft/world/phys/EntityHitResult;)V a
	setDangerous (Z)V a
	shouldBurn ()Z aa_
net/minecraft/world/entity/raid/Raid bzv
	ATTEMPT_RAID_CLOSE j
	ATTEMPT_RAID_FARTHEST i
	ATTEMPT_RAID_INSIDE k
	DEFAULT_MAX_BAD_OMEN_LEVEL e
	DEFAULT_PRE_RAID_TICKS r
	DEFEAT w
	HERO_OF_THE_VILLAGE_DURATION z
	LOW_MOB_THRESHOLD t
	MAX_CELEBRATION_TICKS c
	MAX_NO_ACTION_TIME b
	NUM_SPAWN_ATTEMPTS n
	OMINOUS_BANNER_PATTERN_NAME o
	OUTSIDE_RAID_BOUNDS_TIMEOUT s
	POST_RAID_TICK_LIMIT q
	RAIDERS_REMAINING p
	RAID_BAR_DEFEAT_COMPONENT y
	RAID_BAR_VICTORY_COMPONENT x
	RAID_NAME_COMPONENT u
	RAID_REMOVAL_THRESHOLD_SQR g
	RAID_TIMEOUT_TICKS m
	SECTION_RADIUS_FOR_FINDING_NEW_VILLAGE_CENTER h
	TICKS_PER_DAY d
	VALID_RAID_RADIUS_SQR f
	VICTORY v
	VILLAGE_RADIUS_BUFFER a
	VILLAGE_SEARCH_RADIUS l
	active K
	badOmenLevel J
	celebrationTicks S
	center E
	groupRaiderMap B
	groupToLeaderMap A
	groupsSpawned L
	heroesOfTheVillage C
	id H
	level F
	numGroups Q
	postRaidTicks N
	raidCooldownTicks O
	raidEvent M
	random P
	started G
	status R
	ticksActive D
	totalHealth I
	waveSpawnPos T
	absorbBadOmen (Lnet/minecraft/world/entity/player/Player;)V a
	addHeroOfTheVillage (Lnet/minecraft/world/entity/Entity;)V a
	addWaveMob (ILnet/minecraft/world/entity/raid/Raider;)Z b
	addWaveMob (ILnet/minecraft/world/entity/raid/Raider;Z)Z a
	findRandomSpawnPos (II)Lnet/minecraft/core/BlockPos; a
	getAllRaiders ()Ljava/util/Set; h
	getBadOmenLevel ()I m
	getCenter ()Lnet/minecraft/core/BlockPos; t
	getDefaultNumSpawns (Lnet/minecraft/world/entity/raid/Raid$RaiderType;IZ)I a
	getEnchantOdds ()F w
	getGroupsSpawned ()I k
	getHealthOfLivingRaiders ()F q
	getId ()I u
	getLeader (I)Lnet/minecraft/world/entity/raid/Raider; b
	getLeaderBannerInstance ()Lnet/minecraft/world/item/ItemStack; s
	getLevel ()Lnet/minecraft/world/level/Level; i
	getMaxBadOmenLevel ()I l
	getNumGroups (Lnet/minecraft/world/Difficulty;)I a
	getPotentialBonusSpawns (Lnet/minecraft/world/entity/raid/Raid$RaiderType;Lnet/minecraft/util/RandomSource;ILnet/minecraft/world/DifficultyInstance;Z)I a
	getTotalHealth ()F g
	getTotalRaidersAlive ()I r
	getValidSpawnPos (I)Ljava/util/Optional; d
	hasBonusWave ()Z C
	hasFirstWaveSpawned ()Z c
	hasMoreWaves ()Z A
	hasSpawnedBonusWave ()Z D
	isActive ()Z v
	isBetweenWaves ()Z b
	isFinalWave ()Z B
	isLoss ()Z f
	isOver ()Z a
	isStarted ()Z j
	isStopped ()Z d
	isVictory ()Z e
	joinRaid (ILnet/minecraft/world/entity/raid/Raider;Lnet/minecraft/core/BlockPos;Z)V a
	moveRaidCenterToNearbyVillageSection ()V z
	playSound (Lnet/minecraft/core/BlockPos;)V a
	removeFromRaid (Lnet/minecraft/world/entity/raid/Raider;Z)V a
	removeLeader (I)V c
	save (Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/nbt/CompoundTag; a
	setBadOmenLevel (I)V a
	setCenter (Lnet/minecraft/core/BlockPos;)V c
	setDirty ()V H
	setLeader (ILnet/minecraft/world/entity/raid/Raider;)V a
	shouldSpawnBonusGroup ()Z E
	shouldSpawnGroup ()Z G
	spawnGroup (Lnet/minecraft/core/BlockPos;)V b
	stop ()V n
	tick ()V o
	updateBossbar ()V p
	updatePlayers ()V y
	updateRaiders ()V F
	validPlayer ()Ljava/util/function/Predicate; x
net/minecraft/world/entity/raid/Raid$RaidStatus bzv$a
	$VALUES f
	LOSS c
	ONGOING a
	STOPPED d
	VALUES e
	VICTORY b
	$values ()[Lnet/minecraft/world/entity/raid/Raid$RaidStatus; b
	getByName (Ljava/lang/String;)Lnet/minecraft/world/entity/raid/Raid$RaidStatus; a
	getName ()Ljava/lang/String; a
net/minecraft/world/entity/raid/Raid$RaiderType bzv$b
	$VALUES i
	EVOKER b
	PILLAGER c
	RAVAGER e
	VALUES f
	VINDICATOR a
	WITCH d
	entityType g
	spawnsPerWaveBeforeBonus h
	$values ()[Lnet/minecraft/world/entity/raid/Raid$RaiderType; a
net/minecraft/world/entity/raid/Raider bzw
	ALLOWED_ITEMS b
	IS_CELEBRATING c
	canJoinRaid bT
	raid d
	ticksOutsideRaid bU
	wave e
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	aiStep ()V b_
	applyRaidBuffs (IZ)V a
	canJoinPatrol ()Z gf
	canJoinRaid ()Z gl
	defineSynchedData ()V a_
	die (Lnet/minecraft/world/damagesource/DamageSource;)V a
	finalizeSpawn (Lnet/minecraft/world/level/ServerLevelAccessor;Lnet/minecraft/world/DifficultyInstance;Lnet/minecraft/world/entity/MobSpawnType;Lnet/minecraft/world/entity/SpawnGroupData;Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/world/entity/SpawnGroupData; a
	getCelebrateSound ()Lnet/minecraft/sounds/SoundEvent; Y_
	getCurrentRaid ()Lnet/minecraft/world/entity/raid/Raid; gm
	getTicksOutsideRaid ()I gq
	getWave ()I go
	hasActiveRaid ()Z gn
	hurt (Lnet/minecraft/world/damagesource/DamageSource;F)Z a
	isCelebrating ()Z gp
	pickUpItem (Lnet/minecraft/world/entity/item/ItemEntity;)V b
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	registerGoals ()V x
	removeWhenFarAway (D)Z h
	requiresCustomPersistence ()Z T
	setCanJoinRaid (Z)V z
	setCelebrating (Z)V A
	setCurrentRaid (Lnet/minecraft/world/entity/raid/Raid;)V a
	setTicksOutsideRaid (I)V c
	setWave (I)V b
	updateNoActionTime ()V gd
net/minecraft/world/entity/raid/Raider$HoldGroundAttackGoal bzw$a
	hostileRadiusSqr d
	mob c
	shoutTargeting a
	canUse ()Z a
	requiresUpdateEveryTick ()Z K_
	start ()V c
	stop ()V d
	tick ()V e
net/minecraft/world/entity/raid/Raider$ObtainRaidLeaderBannerGoal bzw$b
	mob b
	canUse ()Z a
	tick ()V e
net/minecraft/world/entity/raid/Raider$RaiderCelebration bzw$c
	mob b
	canUse ()Z a
	start ()V c
	stop ()V d
	tick ()V e
net/minecraft/world/entity/raid/Raider$RaiderMoveThroughVillageGoal bzw$d
	distanceToPoi e
	poiPos c
	raider a
	speedModifier b
	stuck f
	visited d
	canContinueToUse ()Z b
	canUse ()Z a
	hasNotVisited (Lnet/minecraft/core/BlockPos;)Z a
	hasSuitablePoi ()Z i
	isValidRaid ()Z h
	start ()V c
	stop ()V d
	tick ()V e
	updateVisited ()V k
net/minecraft/world/entity/raid/Raids bzx
	RAID_FILE_ID a
	level c
	nextAvailableID d
	raidMap b
	tick e
	canJoinRaid (Lnet/minecraft/world/entity/raid/Raider;Lnet/minecraft/world/entity/raid/Raid;)Z a
	createOrExtendRaid (Lnet/minecraft/server/level/ServerPlayer;)Lnet/minecraft/world/entity/raid/Raid; a
	get (I)Lnet/minecraft/world/entity/raid/Raid; a
	getFileId (Lnet/minecraft/core/Holder;)Ljava/lang/String; a
	getNearbyRaid (Lnet/minecraft/core/BlockPos;I)Lnet/minecraft/world/entity/raid/Raid; a
	getOrCreateRaid (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/entity/raid/Raid; a
	getUniqueId ()I d
	load (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/world/entity/raid/Raids; a
	save (Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/nbt/CompoundTag; a
	tick ()V a
net/minecraft/world/entity/schedule/Activity bzz
	ADMIRE_ITEM m
	AVOID n
	CELEBRATE l
	CORE a
	DIG z
	EMERGE y
	FIGHT k
	HIDE j
	IDLE b
	INVESTIGATE w
	LAY_SPAWN u
	LONG_JUMP q
	MEET f
	PANIC g
	PLAY d
	PLAY_DEAD p
	PRE_RAID i
	RAID h
	RAM r
	REST e
	RIDE o
	ROAR x
	SNIFF v
	SWIM t
	TONGUE s
	WORK c
	hashCode B
	name A
	getName ()Ljava/lang/String; a
	register (Ljava/lang/String;)Lnet/minecraft/world/entity/schedule/Activity; a
net/minecraft/world/entity/schedule/Keyframe caa
	timeStamp a
	value b
	getTimeStamp ()I a
	getValue ()F b
net/minecraft/world/entity/schedule/Schedule cab
	EMPTY c
	SIMPLE d
	TOTAL_WORK_TIME b
	VILLAGER_BABY e
	VILLAGER_DEFAULT f
	WORK_START_TIME a
	timelines g
	ensureTimelineExistsFor (Lnet/minecraft/world/entity/schedule/Activity;)V a
	getActivityAt (I)Lnet/minecraft/world/entity/schedule/Activity; a
	getAllTimelinesExceptFor (Lnet/minecraft/world/entity/schedule/Activity;)Ljava/util/List; c
	getTimelineFor (Lnet/minecraft/world/entity/schedule/Activity;)Lnet/minecraft/world/entity/schedule/Timeline; b
	register (Ljava/lang/String;)Lnet/minecraft/world/entity/schedule/ScheduleBuilder; a
net/minecraft/world/entity/schedule/ScheduleBuilder cac
	schedule a
	transitions b
	build ()Lnet/minecraft/world/entity/schedule/Schedule; a
	changeActivityAt (ILnet/minecraft/world/entity/schedule/Activity;)Lnet/minecraft/world/entity/schedule/ScheduleBuilder; a
net/minecraft/world/entity/schedule/ScheduleBuilder$ActivityTransition cac$a
	activity b
	time a
	getActivity ()Lnet/minecraft/world/entity/schedule/Activity; b
	getTime ()I a
net/minecraft/world/entity/schedule/Timeline cad
	keyframes a
	previousIndex b
	addKeyframe (IF)Lnet/minecraft/world/entity/schedule/Timeline; a
	addKeyframes (Ljava/util/Collection;)Lnet/minecraft/world/entity/schedule/Timeline; a
	getKeyframes ()Lcom/google/common/collect/ImmutableList; a
	getValueAt (I)F a
	sortAndDeduplicateKeyframes ()V b
net/minecraft/world/entity/vehicle/AbstractMinecart caf
	DATA_ID_CUSTOM_DISPLAY h
	DATA_ID_DAMAGE e
	DATA_ID_DISPLAY_BLOCK f
	DATA_ID_DISPLAY_OFFSET g
	DATA_ID_HURT c
	DATA_ID_HURTDIR d
	EXITS l
	POSE_DISMOUNT_HEIGHTS i
	WATER_SLOWDOWN_FACTOR b
	flipped j
	lSteps m
	lx n
	lxd s
	lxr r
	ly o
	lyd t
	lyr q
	lz p
	lzd u
	onRails k
	activateMinecart (IIIZ)V a
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	animateHurt (F)V m
	applyNaturalSlowdown ()V p
	canCollideWith (Lnet/minecraft/world/entity/Entity;)Z h
	comeOffTrack ()V o
	createMinecart (Lnet/minecraft/world/level/Level;DDDLnet/minecraft/world/entity/vehicle/AbstractMinecart$Type;)Lnet/minecraft/world/entity/vehicle/AbstractMinecart; a
	defineSynchedData ()V a_
	destroy (Lnet/minecraft/world/damagesource/DamageSource;)V a
	exits (Lnet/minecraft/world/level/block/state/properties/RailShape;)Lcom/mojang/datafixers/util/Pair; a
	getBlockSpeedFactor ()F aH
	getBoundingBoxForCulling ()Lnet/minecraft/world/phys/AABB; j_
	getDamage ()F q
	getDefaultDisplayBlockState ()Lnet/minecraft/world/level/block/state/BlockState; w
	getDefaultDisplayOffset ()I y
	getDismountLocationForPassenger (Lnet/minecraft/world/entity/LivingEntity;)Lnet/minecraft/world/phys/Vec3; b
	getDisplayBlockState ()Lnet/minecraft/world/level/block/state/BlockState; v
	getDisplayOffset ()I x
	getDropItem ()Lnet/minecraft/world/item/Item; j
	getHurtDir ()I s
	getHurtTime ()I r
	getMaxSpeed ()D k
	getMinecartType ()Lnet/minecraft/world/entity/vehicle/AbstractMinecart$Type; t
	getMotionDirection ()Lnet/minecraft/core/Direction; cC
	getMovementEmission ()Lnet/minecraft/world/entity/Entity$MovementEmission; aS
	getPassengersRidingOffset ()D bx
	getPickResult ()Lnet/minecraft/world/item/ItemStack; dv
	getPos (DDD)Lnet/minecraft/world/phys/Vec3; q
	getPosOffs (DDDD)Lnet/minecraft/world/phys/Vec3; a
	getRelativePortalPosition (Lnet/minecraft/core/Direction$Axis;Lnet/minecraft/BlockUtil$FoundRectangle;)Lnet/minecraft/world/phys/Vec3; a
	hasCustomDisplay ()Z z
	hurt (Lnet/minecraft/world/damagesource/DamageSource;F)Z a
	isOnRails ()Z cc
	isPickable ()Z bo
	isPushable ()Z bp
	isRedstoneConductor (Lnet/minecraft/core/BlockPos;)Z a
	lerpMotion (DDD)V l
	lerpTo (DDDFFIZ)V a
	moveAlongTrack (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V c
	push (Lnet/minecraft/world/entity/Entity;)V g
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	setCustomDisplay (Z)V a
	setDamage (F)V a
	setDisplayBlockState (Lnet/minecraft/world/level/block/state/BlockState;)V c
	setDisplayOffset (I)V m
	setHurtDir (I)V d
	setHurtTime (I)V c
	tick ()V l
net/minecraft/world/entity/vehicle/AbstractMinecart$Type caf$a
	$VALUES h
	CHEST b
	COMMAND_BLOCK g
	FURNACE c
	HOPPER f
	RIDEABLE a
	SPAWNER e
	TNT d
	$values ()[Lnet/minecraft/world/entity/vehicle/AbstractMinecart$Type; a
net/minecraft/world/entity/vehicle/AbstractMinecartContainer cag
	itemStacks c
	lootTable d
	lootTableSeed e
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	applyNaturalSlowdown ()V p
	clearContent ()V a
	clearItemStacks ()V E
	createMenu (ILnet/minecraft/world/entity/player/Inventory;)Lnet/minecraft/world/inventory/AbstractContainerMenu; a
	destroy (Lnet/minecraft/world/damagesource/DamageSource;)V a
	getItem (I)Lnet/minecraft/world/item/ItemStack; a
	getItemStacks ()Lnet/minecraft/core/NonNullList; D
	getLootTable ()Lnet/minecraft/resources/ResourceLocation; A
	getLootTableSeed ()J C
	getSlot (I)Lnet/minecraft/world/entity/SlotAccess; a_
	interact (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResult; a
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	remove (Lnet/minecraft/world/entity/Entity$RemovalReason;)V a
	removeItem (II)Lnet/minecraft/world/item/ItemStack; a
	removeItemNoUpdate (I)Lnet/minecraft/world/item/ItemStack; b
	setChanged ()V e
	setItem (ILnet/minecraft/world/item/ItemStack;)V a
	setLootTable (Lnet/minecraft/resources/ResourceLocation;)V a
	setLootTable (Lnet/minecraft/resources/ResourceLocation;J)V a
	setLootTableSeed (J)V a
	stillValid (Lnet/minecraft/world/entity/player/Player;)Z a
net/minecraft/world/entity/vehicle/Boat cah
	BUBBLE_TIME e
	DATA_ID_BUBBLE_TIME l
	DATA_ID_DAMAGE h
	DATA_ID_HURT f
	DATA_ID_HURTDIR g
	DATA_ID_PADDLE_LEFT j
	DATA_ID_PADDLE_RIGHT k
	DATA_ID_TYPE i
	PADDLE_LEFT b
	PADDLE_RIGHT c
	PADDLE_SOUND_TIME d
	PADDLE_SPEED n
	TIME_TO_EJECT m
	bubbleAngle aS
	bubbleAngleO aT
	bubbleColumnDirectionIsDown aQ
	bubbleMultiplier aR
	deltaRotation r
	inputDown aJ
	inputLeft aG
	inputRight aH
	inputUp aI
	invFriction p
	isAboveBubbleColumn aP
	landFriction aL
	lastYd aO
	lerpSteps s
	lerpX t
	lerpXRot aF
	lerpY u
	lerpYRot aE
	lerpZ aD
	oldStatus aN
	outOfControlTicks q
	paddlePositions o
	status aM
	waterLevel aK
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	animateHurt (F)V m
	canAddPassenger (Lnet/minecraft/world/entity/Entity;)Z o
	canBeCollidedWith ()Z bu
	canCollideWith (Lnet/minecraft/world/entity/Entity;)Z h
	canVehicleCollide (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/entity/Entity;)Z a
	checkFallDamage (DZLnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/BlockPos;)V a
	checkInWater ()Z A
	clampRotation (Lnet/minecraft/world/entity/Entity;)V b
	controlBoat ()V E
	defineSynchedData ()V a_
	destroy (Lnet/minecraft/world/damagesource/DamageSource;)V a
	floatBoat ()V D
	getBubbleAngle (F)F s
	getBubbleTime ()I F
	getControllingPassenger ()Lnet/minecraft/world/entity/LivingEntity; cL
	getDamage ()F r
	getDismountLocationForPassenger (Lnet/minecraft/world/entity/LivingEntity;)Lnet/minecraft/world/phys/Vec3; b
	getDropItem ()Lnet/minecraft/world/item/Item; j
	getEyeHeight (Lnet/minecraft/world/entity/Pose;Lnet/minecraft/world/entity/EntityDimensions;)F a
	getGroundFriction ()F p
	getHurtDir ()I t
	getHurtTime ()I s
	getMaxPassengers ()I w
	getMotionDirection ()Lnet/minecraft/core/Direction; cC
	getMovementEmission ()Lnet/minecraft/world/entity/Entity$MovementEmission; aS
	getPaddleSound ()Lnet/minecraft/sounds/SoundEvent; k
	getPaddleState (I)Z c
	getPassengersRidingOffset ()D bx
	getPickResult ()Lnet/minecraft/world/item/ItemStack; dv
	getRelativePortalPosition (Lnet/minecraft/core/Direction$Axis;Lnet/minecraft/BlockUtil$FoundRectangle;)Lnet/minecraft/world/phys/Vec3; a
	getRowingTime (IF)F a
	getSinglePassengerXOffset ()F q
	getStatus ()Lnet/minecraft/world/entity/vehicle/Boat$Status; z
	getVariant ()Ljava/lang/Object; c
	getVariant ()Lnet/minecraft/world/entity/vehicle/Boat$Type; v
	getWaterLevelAbove ()F o
	hasEnoughSpaceFor (Lnet/minecraft/world/entity/Entity;)Z a
	hurt (Lnet/minecraft/world/damagesource/DamageSource;F)Z a
	interact (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResult; a
	isPickable ()Z bo
	isPushable ()Z bp
	isUnderWater ()Z aZ
	isUnderwater ()Lnet/minecraft/world/entity/vehicle/Boat$Status; C
	lerpTo (DDDFFIZ)V a
	onAboveBubbleCol (Z)V k
	onPassengerTurned (Lnet/minecraft/world/entity/Entity;)V j
	positionRider (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/entity/Entity$MoveFunction;)V a
	push (Lnet/minecraft/world/entity/Entity;)V g
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	setBubbleTime (I)V b
	setDamage (F)V a
	setHurtDir (I)V m
	setHurtTime (I)V d
	setInput (ZZZZ)V a
	setPaddleState (ZZ)V a
	setVariant (Ljava/lang/Object;)V a
	setVariant (Lnet/minecraft/world/entity/vehicle/Boat$Type;)V a
	tick ()V l
	tickBubbleColumn ()V x
	tickLerp ()V y
net/minecraft/world/entity/vehicle/Boat$Status cah$a
	$VALUES f
	IN_AIR e
	IN_WATER a
	ON_LAND d
	UNDER_FLOWING_WATER c
	UNDER_WATER b
	$values ()[Lnet/minecraft/world/entity/vehicle/Boat$Status; a
net/minecraft/world/entity/vehicle/Boat$Type cah$b
	$VALUES n
	ACACIA e
	BAMBOO i
	BIRCH c
	BY_ID m
	CHERRY f
	CODEC j
	DARK_OAK g
	JUNGLE d
	MANGROVE h
	OAK a
	SPRUCE b
	name k
	planks l
	$values ()[Lnet/minecraft/world/entity/vehicle/Boat$Type; d
	byId (I)Lnet/minecraft/world/entity/vehicle/Boat$Type; a
	byName (Ljava/lang/String;)Lnet/minecraft/world/entity/vehicle/Boat$Type; a
	getName ()Ljava/lang/String; a
	getPlanks ()Lnet/minecraft/world/level/block/Block; b
	getSerializedName ()Ljava/lang/String; c
net/minecraft/world/entity/vehicle/ChestBoat cai
	CONTAINER_SIZE f
	itemStacks g
	lootTable h
	lootTableSeed i
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	clearContent ()V a
	clearItemStacks ()V E
	destroy (Lnet/minecraft/world/damagesource/DamageSource;)V a
	getContainerSize ()I b
	getDropItem ()Lnet/minecraft/world/item/Item; j
	getItem (I)Lnet/minecraft/world/item/ItemStack; a
	getItemStacks ()Lnet/minecraft/core/NonNullList; D
	getLootTable ()Lnet/minecraft/resources/ResourceLocation; A
	getLootTableSeed ()J C
	getMaxPassengers ()I w
	getSinglePassengerXOffset ()F q
	getSlot (I)Lnet/minecraft/world/entity/SlotAccess; a_
	interact (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResult; a
	openCustomInventoryScreen (Lnet/minecraft/world/entity/player/Player;)V b
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	remove (Lnet/minecraft/world/entity/Entity$RemovalReason;)V a
	removeItem (II)Lnet/minecraft/world/item/ItemStack; a
	removeItemNoUpdate (I)Lnet/minecraft/world/item/ItemStack; b
	setChanged ()V e
	setItem (ILnet/minecraft/world/item/ItemStack;)V a
	setLootTable (Lnet/minecraft/resources/ResourceLocation;)V a
	setLootTableSeed (J)V a
	stillValid (Lnet/minecraft/world/entity/player/Player;)Z a
	stopOpen (Lnet/minecraft/world/entity/player/Player;)V c
	unpackLootTable (Lnet/minecraft/world/entity/player/Player;)V e
net/minecraft/world/entity/vehicle/ContainerEntity caj
	addChestVehicleSaveData (Lnet/minecraft/nbt/CompoundTag;)V c
	chestVehicleDestroyed (Lnet/minecraft/world/damagesource/DamageSource;Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/Entity;)V a
	clearChestVehicleContent ()V f
	clearItemStacks ()V E
	getChestVehicleItem (I)Lnet/minecraft/world/item/ItemStack; f_
	getChestVehicleSlot (I)Lnet/minecraft/world/entity/SlotAccess; g_
	getItemStacks ()Lnet/minecraft/core/NonNullList; D
	getLootTable ()Lnet/minecraft/resources/ResourceLocation; A
	getLootTableSeed ()J C
	interactWithContainerVehicle (Lnet/minecraft/world/entity/player/Player;)Lnet/minecraft/world/InteractionResult; c_
	isChestVehicleEmpty ()Z g
	isChestVehicleStillValid (Lnet/minecraft/world/entity/player/Player;)Z g
	isEmpty ()Z ab_
	isRemoved ()Z dD
	level ()Lnet/minecraft/world/level/Level; dI
	position ()Lnet/minecraft/world/phys/Vec3; dg
	readChestVehicleSaveData (Lnet/minecraft/nbt/CompoundTag;)V b_
	removeChestVehicleItem (II)Lnet/minecraft/world/item/ItemStack; b
	removeChestVehicleItemNoUpdate (I)Lnet/minecraft/world/item/ItemStack; e_
	setChestVehicleItem (ILnet/minecraft/world/item/ItemStack;)V c
	setLootTable (Lnet/minecraft/resources/ResourceLocation;)V a
	setLootTableSeed (J)V a
	unpackChestVehicleLootTable (Lnet/minecraft/world/entity/player/Player;)V f
net/minecraft/world/entity/vehicle/DismountHelper cak
	canDismountTo (Lnet/minecraft/world/level/CollisionGetter;Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/phys/AABB;)Z a
	canDismountTo (Lnet/minecraft/world/level/CollisionGetter;Lnet/minecraft/world/phys/Vec3;Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/entity/Pose;)Z a
	findCeilingFrom (Lnet/minecraft/core/BlockPos;ILjava/util/function/Function;)D a
	findSafeDismountLocation (Lnet/minecraft/world/entity/EntityType;Lnet/minecraft/world/level/CollisionGetter;Lnet/minecraft/core/BlockPos;Z)Lnet/minecraft/world/phys/Vec3; a
	isBlockFloorValid (D)Z a
	nonClimbableShape (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	offsetsForDirection (Lnet/minecraft/core/Direction;)[[I a
net/minecraft/world/entity/vehicle/Minecart cal
	activateMinecart (IIIZ)V a
	getDropItem ()Lnet/minecraft/world/item/Item; j
	getMinecartType ()Lnet/minecraft/world/entity/vehicle/AbstractMinecart$Type; t
	interact (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResult; a
net/minecraft/world/entity/vehicle/MinecartChest cam
	createMenu (ILnet/minecraft/world/entity/player/Inventory;)Lnet/minecraft/world/inventory/AbstractContainerMenu; a
	getContainerSize ()I b
	getDefaultDisplayBlockState ()Lnet/minecraft/world/level/block/state/BlockState; w
	getDefaultDisplayOffset ()I y
	getDropItem ()Lnet/minecraft/world/item/Item; j
	getMinecartType ()Lnet/minecraft/world/entity/vehicle/AbstractMinecart$Type; t
	interact (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResult; a
	stopOpen (Lnet/minecraft/world/entity/player/Player;)V c
net/minecraft/world/entity/vehicle/MinecartCommandBlock can
	ACTIVATION_DELAY f
	DATA_ID_COMMAND_NAME c
	DATA_ID_LAST_OUTPUT d
	commandBlock e
	lastActivated g
	activateMinecart (IIIZ)V a
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	defineSynchedData ()V a_
	getCommandBlock ()Lnet/minecraft/world/level/BaseCommandBlock; A
	getDefaultDisplayBlockState ()Lnet/minecraft/world/level/block/state/BlockState; w
	getDropItem ()Lnet/minecraft/world/item/Item; j
	getMinecartType ()Lnet/minecraft/world/entity/vehicle/AbstractMinecart$Type; t
	interact (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResult; a
	onSyncedDataUpdated (Lnet/minecraft/network/syncher/EntityDataAccessor;)V a
	onlyOpCanSetNbt ()Z cK
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
net/minecraft/world/entity/vehicle/MinecartCommandBlock$MinecartCommandBase can$a
	createCommandSourceStack ()Lnet/minecraft/commands/CommandSourceStack; i
	getLevel ()Lnet/minecraft/server/level/ServerLevel; e
	getMinecart ()Lnet/minecraft/world/entity/vehicle/MinecartCommandBlock; h
	getPosition ()Lnet/minecraft/world/phys/Vec3; g
	isValid ()Z j
	onUpdated ()V f
net/minecraft/world/entity/vehicle/MinecartFurnace cao
	DATA_ID_FUEL e
	INGREDIENT g
	fuel f
	xPush c
	zPush d
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	applyNaturalSlowdown ()V p
	defineSynchedData ()V a_
	getDefaultDisplayBlockState ()Lnet/minecraft/world/level/block/state/BlockState; w
	getDropItem ()Lnet/minecraft/world/item/Item; j
	getMaxSpeed ()D k
	getMinecartType ()Lnet/minecraft/world/entity/vehicle/AbstractMinecart$Type; t
	hasFuel ()Z A
	interact (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResult; a
	moveAlongTrack (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V c
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	setHasFuel (Z)V p
	tick ()V l
net/minecraft/world/entity/vehicle/MinecartHopper cap
	enabled f
	activateMinecart (IIIZ)V a
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	createMenu (ILnet/minecraft/world/entity/player/Inventory;)Lnet/minecraft/world/inventory/AbstractContainerMenu; a
	getContainerSize ()I b
	getDefaultDisplayBlockState ()Lnet/minecraft/world/level/block/state/BlockState; w
	getDefaultDisplayOffset ()I y
	getDropItem ()Lnet/minecraft/world/item/Item; j
	getLevelX ()D G
	getLevelY ()D I
	getLevelZ ()D J
	getMinecartType ()Lnet/minecraft/world/entity/vehicle/AbstractMinecart$Type; t
	isEnabled ()Z F
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	setEnabled (Z)V p
	suckInItems ()Z K
	tick ()V l
net/minecraft/world/entity/vehicle/MinecartSpawner caq
	spawner c
	ticker d
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	createTicker (Lnet/minecraft/world/level/Level;)Ljava/lang/Runnable; b
	getDefaultDisplayBlockState ()Lnet/minecraft/world/level/block/state/BlockState; w
	getDropItem ()Lnet/minecraft/world/item/Item; j
	getMinecartType ()Lnet/minecraft/world/entity/vehicle/AbstractMinecart$Type; t
	getSpawner ()Lnet/minecraft/world/level/BaseSpawner; A
	handleEntityEvent (B)V b
	onlyOpCanSetNbt ()Z cK
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	tick ()V l
net/minecraft/world/entity/vehicle/MinecartTNT car
	EVENT_PRIME c
	fuse d
	activateMinecart (IIIZ)V a
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	causeFallDamage (FFLnet/minecraft/world/damagesource/DamageSource;)Z a
	destroy (Lnet/minecraft/world/damagesource/DamageSource;)V a
	explode (D)V h
	explode (Lnet/minecraft/world/damagesource/DamageSource;D)V a
	getBlockExplosionResistance (Lnet/minecraft/world/level/Explosion;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/material/FluidState;F)F a
	getDefaultDisplayBlockState ()Lnet/minecraft/world/level/block/state/BlockState; w
	getDropItem ()Lnet/minecraft/world/item/Item; j
	getFuse ()I C
	getMinecartType ()Lnet/minecraft/world/entity/vehicle/AbstractMinecart$Type; t
	handleEntityEvent (B)V b
	hurt (Lnet/minecraft/world/damagesource/DamageSource;F)Z a
	isPrimed ()Z D
	primeFuse ()V A
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	shouldBlockExplode (Lnet/minecraft/world/level/Explosion;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;F)Z a
	tick ()V l
net/minecraft/world/flag/FeatureElement cat
	FILTERED_REGISTRIES bv
	isEnabled (Lnet/minecraft/world/flag/FeatureFlagSet;)Z a
	requiredFeatures ()Lnet/minecraft/world/flag/FeatureFlagSet; m
net/minecraft/world/flag/FeatureFlag cau
	mask b
	universe a
net/minecraft/world/flag/FeatureFlagRegistry cav
	LOGGER a
	allFlags d
	names c
	universe b
	allFlags ()Lnet/minecraft/world/flag/FeatureFlagSet; a
	codec ()Lcom/mojang/serialization/Codec; b
	fromNames (Ljava/lang/Iterable;)Lnet/minecraft/world/flag/FeatureFlagSet; a
	fromNames (Ljava/lang/Iterable;Ljava/util/function/Consumer;)Lnet/minecraft/world/flag/FeatureFlagSet; a
	isSubset (Lnet/minecraft/world/flag/FeatureFlagSet;)Z a
	subset ([Lnet/minecraft/world/flag/FeatureFlag;)Lnet/minecraft/world/flag/FeatureFlagSet; a
	toNames (Lnet/minecraft/world/flag/FeatureFlagSet;)Ljava/util/Set; b
net/minecraft/world/flag/FeatureFlagRegistry$Builder cav$a
	flags c
	id b
	universe a
	build ()Lnet/minecraft/world/flag/FeatureFlagRegistry; a
	create (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/world/flag/FeatureFlag; a
	createVanilla (Ljava/lang/String;)Lnet/minecraft/world/flag/FeatureFlag; a
net/minecraft/world/flag/FeatureFlagSet caw
	EMPTY b
	MAX_CONTAINER_SIZE a
	mask d
	universe c
	computeMask (Lnet/minecraft/world/flag/FeatureFlagUniverse;JLjava/lang/Iterable;)J a
	contains (Lnet/minecraft/world/flag/FeatureFlag;)Z b
	create (Lnet/minecraft/world/flag/FeatureFlagUniverse;Ljava/util/Collection;)Lnet/minecraft/world/flag/FeatureFlagSet; a
	isSubsetOf (Lnet/minecraft/world/flag/FeatureFlagSet;)Z a
	join (Lnet/minecraft/world/flag/FeatureFlagSet;)Lnet/minecraft/world/flag/FeatureFlagSet; b
	of ()Lnet/minecraft/world/flag/FeatureFlagSet; a
	of (Lnet/minecraft/world/flag/FeatureFlag;)Lnet/minecraft/world/flag/FeatureFlagSet; a
	of (Lnet/minecraft/world/flag/FeatureFlag;[Lnet/minecraft/world/flag/FeatureFlag;)Lnet/minecraft/world/flag/FeatureFlagSet; a
net/minecraft/world/flag/FeatureFlagUniverse cax
	id a
net/minecraft/world/flag/FeatureFlags cay
	BUNDLE b
	CODEC d
	DEFAULT_FLAGS f
	REGISTRY c
	VANILLA a
	VANILLA_SET e
	isExperimental (Lnet/minecraft/world/flag/FeatureFlagSet;)Z a
	printMissingFlags (Lnet/minecraft/world/flag/FeatureFlagRegistry;Lnet/minecraft/world/flag/FeatureFlagSet;Lnet/minecraft/world/flag/FeatureFlagSet;)Ljava/lang/String; a
	printMissingFlags (Lnet/minecraft/world/flag/FeatureFlagSet;Lnet/minecraft/world/flag/FeatureFlagSet;)Ljava/lang/String; a
net/minecraft/world/food/FoodConstants cba
	EXHAUSTION_ATTACK u
	EXHAUSTION_CROUCH w
	EXHAUSTION_DROP e
	EXHAUSTION_HEAL q
	EXHAUSTION_JUMP r
	EXHAUSTION_MINE t
	EXHAUSTION_SPRINT x
	EXHAUSTION_SPRINT_JUMP s
	EXHAUSTION_SWIM y
	EXHAUSTION_WALK v
	FOOD_SATURATION_GOOD n
	FOOD_SATURATION_LOW l
	FOOD_SATURATION_MAX o
	FOOD_SATURATION_NORMAL m
	FOOD_SATURATION_POOR k
	FOOD_SATURATION_SUPERNATURAL p
	HEALTH_TICK_COUNT f
	HEALTH_TICK_COUNT_SATURATED g
	HEAL_LEVEL h
	MAX_FOOD a
	MAX_SATURATION b
	SATURATION_FLOOR d
	SPRINT_LEVEL i
	START_SATURATION c
	STARVE_LEVEL j
net/minecraft/world/food/FoodData cbb
	exhaustionLevel c
	foodLevel a
	lastFoodLevel e
	saturationLevel b
	tickTimer d
	addAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V b
	addExhaustion (F)V a
	eat (IF)V a
	eat (Lnet/minecraft/world/item/Item;Lnet/minecraft/world/item/ItemStack;)V a
	getExhaustionLevel ()F d
	getFoodLevel ()I a
	getLastFoodLevel ()I b
	getSaturationLevel ()F e
	needsFood ()Z c
	readAdditionalSaveData (Lnet/minecraft/nbt/CompoundTag;)V a
	setExhaustion (F)V c
	setFoodLevel (I)V a
	setSaturation (F)V b
	tick (Lnet/minecraft/world/entity/player/Player;)V a
net/minecraft/world/food/FoodProperties cbc
	canAlwaysEat d
	effects f
	fastFood e
	isMeat c
	nutrition a
	saturationModifier b
	canAlwaysEat ()Z d
	getEffects ()Ljava/util/List; f
	getNutrition ()I a
	getSaturationModifier ()F b
	isFastFood ()Z e
	isMeat ()Z c
net/minecraft/world/food/FoodProperties$Builder cbc$a
	canAlwaysEat d
	effects f
	fastFood e
	isMeat c
	nutrition a
	saturationModifier b
	alwaysEat ()Lnet/minecraft/world/food/FoodProperties$Builder; b
	build ()Lnet/minecraft/world/food/FoodProperties; d
	effect (Lnet/minecraft/world/effect/MobEffectInstance;F)Lnet/minecraft/world/food/FoodProperties$Builder; a
	fast ()Lnet/minecraft/world/food/FoodProperties$Builder; c
	meat ()Lnet/minecraft/world/food/FoodProperties$Builder; a
	nutrition (I)Lnet/minecraft/world/food/FoodProperties$Builder; a
	saturationMod (F)Lnet/minecraft/world/food/FoodProperties$Builder; a
net/minecraft/world/food/Foods cbd
	APPLE a
	BAKED_POTATO b
	BEEF c
	BEETROOT d
	BEETROOT_SOUP e
	BREAD f
	CARROT g
	CHICKEN h
	CHORUS_FRUIT i
	COD j
	COOKED_BEEF k
	COOKED_CHICKEN l
	COOKED_COD m
	COOKED_MUTTON n
	COOKED_PORKCHOP o
	COOKED_RABBIT p
	COOKED_SALMON q
	COOKIE r
	DRIED_KELP s
	ENCHANTED_GOLDEN_APPLE t
	GLOW_BERRIES M
	GOLDEN_APPLE u
	GOLDEN_CARROT v
	HONEY_BOTTLE w
	MELON_SLICE x
	MUSHROOM_STEW y
	MUTTON z
	POISONOUS_POTATO A
	PORKCHOP B
	POTATO C
	PUFFERFISH D
	PUMPKIN_PIE E
	RABBIT F
	RABBIT_STEW G
	ROTTEN_FLESH H
	SALMON I
	SPIDER_EYE J
	SUSPICIOUS_STEW K
	SWEET_BERRIES L
	TROPICAL_FISH N
	stew (I)Lnet/minecraft/world/food/FoodProperties$Builder; a
net/minecraft/world/inventory/AbstractContainerMenu cbf
	CARRIED_SLOT_SIZE h
	LOGGER k
	QUICKCRAFT_HEADER_CONTINUE f
	QUICKCRAFT_HEADER_END g
	QUICKCRAFT_HEADER_START e
	QUICKCRAFT_TYPE_CHARITABLE b
	QUICKCRAFT_TYPE_CLONE d
	QUICKCRAFT_TYPE_GREEDY c
	SLOT_CLICKED_OUTSIDE a
	carried n
	containerId j
	containerListeners w
	dataSlots m
	lastSlots l
	menuType s
	quickcraftSlots v
	quickcraftStatus u
	quickcraftType t
	remoteCarried q
	remoteDataSlots p
	remoteSlots o
	slots i
	stateId r
	suppressRemoteUpdates y
	synchronizer x
	addDataSlot (Lnet/minecraft/world/inventory/DataSlot;)Lnet/minecraft/world/inventory/DataSlot; a
	addDataSlots (Lnet/minecraft/world/inventory/ContainerData;)V a
	addSlot (Lnet/minecraft/world/inventory/Slot;)Lnet/minecraft/world/inventory/Slot; a
	addSlotListener (Lnet/minecraft/world/inventory/ContainerListener;)V a
	broadcastChanges ()V d
	broadcastFullState ()V e
	canDragTo (Lnet/minecraft/world/inventory/Slot;)Z b
	canItemQuickReplace (Lnet/minecraft/world/inventory/Slot;Lnet/minecraft/world/item/ItemStack;Z)Z a
	canTakeItemForPickAll (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/inventory/Slot;)Z a
	checkContainerDataCount (Lnet/minecraft/world/inventory/ContainerData;I)V a
	checkContainerSize (Lnet/minecraft/world/Container;I)V a
	clearContainer (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/Container;)V a
	clickMenuButton (Lnet/minecraft/world/entity/player/Player;I)Z b
	clicked (IILnet/minecraft/world/inventory/ClickType;Lnet/minecraft/world/entity/player/Player;)V a
	createCarriedSlotAccess ()Lnet/minecraft/world/entity/SlotAccess; m
	doClick (IILnet/minecraft/world/inventory/ClickType;Lnet/minecraft/world/entity/player/Player;)V b
	findSlot (Lnet/minecraft/world/Container;I)Ljava/util/OptionalInt; b
	getCarried ()Lnet/minecraft/world/item/ItemStack; g
	getItems ()Lnet/minecraft/core/NonNullList; c
	getQuickCraftPlaceCount (Ljava/util/Set;ILnet/minecraft/world/item/ItemStack;)I a
	getQuickcraftHeader (I)I d
	getQuickcraftMask (II)I b
	getQuickcraftType (I)I c
	getRedstoneSignalFromBlockEntity (Lnet/minecraft/world/level/block/entity/BlockEntity;)I a
	getRedstoneSignalFromContainer (Lnet/minecraft/world/Container;)I b
	getSlot (I)Lnet/minecraft/world/inventory/Slot; b
	getStateId ()I j
	getType ()Lnet/minecraft/world/inventory/MenuType; a
	incrementStateId ()I k
	initializeContents (ILjava/util/List;Lnet/minecraft/world/item/ItemStack;)V a
	isValidQuickcraftType (ILnet/minecraft/world/entity/player/Player;)Z a
	isValidSlotIndex (I)Z a
	moveItemStackTo (Lnet/minecraft/world/item/ItemStack;IIZ)Z a
	quickMoveStack (Lnet/minecraft/world/entity/player/Player;I)Lnet/minecraft/world/item/ItemStack; a
	removeSlotListener (Lnet/minecraft/world/inventory/ContainerListener;)V b
	removed (Lnet/minecraft/world/entity/player/Player;)V b
	resetQuickCraft ()V f
	resumeRemoteUpdates ()V i
	sendAllDataToRemote ()V b
	setCarried (Lnet/minecraft/world/item/ItemStack;)V b
	setData (II)V a
	setItem (IILnet/minecraft/world/item/ItemStack;)V a
	setRemoteCarried (Lnet/minecraft/world/item/ItemStack;)V a
	setRemoteSlot (ILnet/minecraft/world/item/ItemStack;)V a
	setRemoteSlotNoCopy (ILnet/minecraft/world/item/ItemStack;)V b
	setSynchronizer (Lnet/minecraft/world/inventory/ContainerSynchronizer;)V a
	slotsChanged (Lnet/minecraft/world/Container;)V a
	stillValid (Lnet/minecraft/world/entity/player/Player;)Z a
	stillValid (Lnet/minecraft/world/inventory/ContainerLevelAccess;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/level/block/Block;)Z a
	suppressRemoteUpdates ()V h
	synchronizeCarriedToRemote ()V l
	synchronizeDataSlotToRemote (II)V d
	synchronizeSlotToRemote (ILnet/minecraft/world/item/ItemStack;Ljava/util/function/Supplier;)V b
	transferState (Lnet/minecraft/world/inventory/AbstractContainerMenu;)V a
	triggerSlotListeners (ILnet/minecraft/world/item/ItemStack;Ljava/util/function/Supplier;)V a
	tryItemClickBehaviourOverride (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/inventory/ClickAction;Lnet/minecraft/world/inventory/Slot;Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/item/ItemStack;)Z a
	updateDataSlotListeners (II)V c
net/minecraft/world/inventory/AbstractFurnaceMenu cbg
	DATA_COUNT o
	FUEL_SLOT l
	INGREDIENT_SLOT k
	INV_SLOT_END r
	INV_SLOT_START q
	RESULT_SLOT m
	SLOT_COUNT n
	USE_ROW_SLOT_END t
	USE_ROW_SLOT_START s
	container u
	data v
	level p
	recipeBookType x
	recipeType w
	canSmelt (Lnet/minecraft/world/item/ItemStack;)Z c
	clearCraftingContent ()V l
	fillCraftSlotsStackedContents (Lnet/minecraft/world/entity/player/StackedContents;)V a
	getBurnProgress ()I q
	getGridHeight ()I o
	getGridWidth ()I n
	getLitProgress ()I r
	getRecipeBookType ()Lnet/minecraft/world/inventory/RecipeBookType; t
	getResultSlotIndex ()I m
	getSize ()I p
	isFuel (Lnet/minecraft/world/item/ItemStack;)Z d
	isLit ()Z s
	quickMoveStack (Lnet/minecraft/world/entity/player/Player;I)Lnet/minecraft/world/item/ItemStack; a
	recipeMatches (Lnet/minecraft/world/item/crafting/Recipe;)Z a
	shouldMoveToInventory (I)Z e
	stillValid (Lnet/minecraft/world/entity/player/Player;)Z a
net/minecraft/world/inventory/AnvilMenu cbh
	ADDITIONAL_SLOT l
	ADDITIONAL_SLOT_X_PLACEMENT F
	COST_ADDED_BASE z
	COST_BASE y
	COST_FAIL x
	COST_INCOMPATIBLE_PENALTY C
	COST_RENAME D
	COST_REPAIR_MATERIAL A
	COST_REPAIR_SACRIFICE B
	DEBUG_COST t
	INPUT_SLOT k
	INPUT_SLOT_X_PLACEMENT E
	LOGGER s
	MAX_NAME_LENGTH n
	RESULT_SLOT m
	RESULT_SLOT_X_PLACEMENT G
	SLOT_Y_PLACEMENT H
	cost w
	itemName v
	repairItemCountCost u
	calculateIncreasedRepairCost (I)I e
	createInputSlotDefinitions ()Lnet/minecraft/world/inventory/ItemCombinerMenuSlotDefinition; l
	createResult ()V m
	getCost ()I n
	isValidBlock (Lnet/minecraft/world/level/block/state/BlockState;)Z a
	mayPickup (Lnet/minecraft/world/entity/player/Player;Z)Z a
	onTake (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/item/ItemStack;)V a
	setItemName (Ljava/lang/String;)Z a
	validateName (Ljava/lang/String;)Ljava/lang/String; b
net/minecraft/world/inventory/BeaconMenu cbi
	DATA_COUNT m
	INV_SLOT_END o
	INV_SLOT_START n
	PAYMENT_SLOT k
	SLOT_COUNT l
	USE_ROW_SLOT_END q
	USE_ROW_SLOT_START p
	access t
	beacon r
	beaconData u
	paymentSlot s
	getLevels ()I l
	getPrimaryEffect ()Lnet/minecraft/world/effect/MobEffect; m
	getSecondaryEffect ()Lnet/minecraft/world/effect/MobEffect; n
	hasPayment ()Z o
	quickMoveStack (Lnet/minecraft/world/entity/player/Player;I)Lnet/minecraft/world/item/ItemStack; a
	removed (Lnet/minecraft/world/entity/player/Player;)V b
	setData (II)V a
	stillValid (Lnet/minecraft/world/entity/player/Player;)Z a
	updateEffects (Ljava/util/Optional;Ljava/util/Optional;)V a
net/minecraft/world/inventory/BeaconMenu$PaymentSlot cbi$a
	getMaxStackSize ()I a
	mayPlace (Lnet/minecraft/world/item/ItemStack;)Z a
net/minecraft/world/inventory/BlastFurnaceMenu cbj
net/minecraft/world/inventory/BrewingStandMenu cbk
	BOTTLE_SLOT_END l
	BOTTLE_SLOT_START k
	DATA_COUNT p
	FUEL_SLOT n
	INGREDIENT_SLOT m
	INV_SLOT_END r
	INV_SLOT_START q
	SLOT_COUNT o
	USE_ROW_SLOT_END t
	USE_ROW_SLOT_START s
	brewingStand u
	brewingStandData v
	ingredientSlot w
	getBrewingTicks ()I m
	getFuel ()I l
	quickMoveStack (Lnet/minecraft/world/entity/player/Player;I)Lnet/minecraft/world/item/ItemStack; a
	stillValid (Lnet/minecraft/world/entity/player/Player;)Z a
net/minecraft/world/inventory/BrewingStandMenu$FuelSlot cbk$a
	getMaxStackSize ()I a
	mayPlace (Lnet/minecraft/world/item/ItemStack;)Z a
	mayPlaceItem (Lnet/minecraft/world/item/ItemStack;)Z b
net/minecraft/world/inventory/BrewingStandMenu$IngredientsSlot cbk$b
	getMaxStackSize ()I a
	mayPlace (Lnet/minecraft/world/item/ItemStack;)Z a
net/minecraft/world/inventory/BrewingStandMenu$PotionSlot cbk$c
	getMaxStackSize ()I a
	mayPlace (Lnet/minecraft/world/item/ItemStack;)Z a
	mayPlaceItem (Lnet/minecraft/world/item/ItemStack;)Z b
	onTake (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/item/ItemStack;)V a
net/minecraft/world/inventory/CartographyTableMenu cbl
	ADDITIONAL_SLOT l
	INV_SLOT_END p
	INV_SLOT_START o
	MAP_SLOT k
	RESULT_SLOT m
	USE_ROW_SLOT_END r
	USE_ROW_SLOT_START q
	access s
	container n
	lastSoundTime t
	resultContainer u
	canTakeItemForPickAll (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/inventory/Slot;)Z a
	quickMoveStack (Lnet/minecraft/world/entity/player/Player;I)Lnet/minecraft/world/item/ItemStack; a
	removed (Lnet/minecraft/world/entity/player/Player;)V b
	setupResultSlot (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/item/ItemStack;)V a
	slotsChanged (Lnet/minecraft/world/Container;)V a
	stillValid (Lnet/minecraft/world/entity/player/Player;)Z a
net/minecraft/world/inventory/ChestMenu cbm
	SLOTS_PER_ROW k
	container l
	containerRows m
	fiveRows (ILnet/minecraft/world/entity/player/Inventory;)Lnet/minecraft/world/inventory/ChestMenu; e
	fourRows (ILnet/minecraft/world/entity/player/Inventory;)Lnet/minecraft/world/inventory/ChestMenu; d
	getContainer ()Lnet/minecraft/world/Container; l
	getRowCount ()I m
	oneRow (ILnet/minecraft/world/entity/player/Inventory;)Lnet/minecraft/world/inventory/ChestMenu; a
	quickMoveStack (Lnet/minecraft/world/entity/player/Player;I)Lnet/minecraft/world/item/ItemStack; a
	removed (Lnet/minecraft/world/entity/player/Player;)V b
	sixRows (ILnet/minecraft/world/entity/player/Inventory;)Lnet/minecraft/world/inventory/ChestMenu; f
	sixRows (ILnet/minecraft/world/entity/player/Inventory;Lnet/minecraft/world/Container;)Lnet/minecraft/world/inventory/ChestMenu; b
	stillValid (Lnet/minecraft/world/entity/player/Player;)Z a
	threeRows (ILnet/minecraft/world/entity/player/Inventory;)Lnet/minecraft/world/inventory/ChestMenu; c
	threeRows (ILnet/minecraft/world/entity/player/Inventory;Lnet/minecraft/world/Container;)Lnet/minecraft/world/inventory/ChestMenu; a
	twoRows (ILnet/minecraft/world/entity/player/Inventory;)Lnet/minecraft/world/inventory/ChestMenu; b
net/minecraft/world/inventory/ClickAction cbn
	$VALUES c
	PRIMARY a
	SECONDARY b
	$values ()[Lnet/minecraft/world/inventory/ClickAction; a
net/minecraft/world/inventory/ClickType cbo
	$VALUES h
	CLONE d
	PICKUP a
	PICKUP_ALL g
	QUICK_CRAFT f
	QUICK_MOVE b
	SWAP c
	THROW e
	$values ()[Lnet/minecraft/world/inventory/ClickType; a
net/minecraft/world/inventory/ContainerData cbp
	get (I)I a
	getCount ()I a
	set (II)V a
net/minecraft/world/inventory/ContainerLevelAccess cbq
	NULL a
	create (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/inventory/ContainerLevelAccess; a
	evaluate (Ljava/util/function/BiFunction;)Ljava/util/Optional; a
	evaluate (Ljava/util/function/BiFunction;Ljava/lang/Object;)Ljava/lang/Object; a
	execute (Ljava/util/function/BiConsumer;)V a
net/minecraft/world/inventory/ContainerListener cbr
	dataChanged (Lnet/minecraft/world/inventory/AbstractContainerMenu;II)V a
	slotChanged (Lnet/minecraft/world/inventory/AbstractContainerMenu;ILnet/minecraft/world/item/ItemStack;)V a
net/minecraft/world/inventory/ContainerSynchronizer cbs
	sendCarriedChange (Lnet/minecraft/world/inventory/AbstractContainerMenu;Lnet/minecraft/world/item/ItemStack;)V a
	sendDataChange (Lnet/minecraft/world/inventory/AbstractContainerMenu;II)V a
	sendInitialData (Lnet/minecraft/world/inventory/AbstractContainerMenu;Lnet/minecraft/core/NonNullList;Lnet/minecraft/world/item/ItemStack;[I)V a
	sendSlotChange (Lnet/minecraft/world/inventory/AbstractContainerMenu;ILnet/minecraft/world/item/ItemStack;)V a
net/minecraft/world/inventory/CraftingContainer cbt
	getHeight ()I g
	getItems ()Ljava/util/List; h
	getWidth ()I f
net/minecraft/world/inventory/CraftingMenu cbu
	CRAFT_SLOT_END m
	CRAFT_SLOT_START l
	INV_SLOT_END o
	INV_SLOT_START n
	RESULT_SLOT k
	USE_ROW_SLOT_END q
	USE_ROW_SLOT_START p
	access t
	craftSlots r
	player u
	resultSlots s
	canTakeItemForPickAll (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/inventory/Slot;)Z a
	clearCraftingContent ()V l
	fillCraftSlotsStackedContents (Lnet/minecraft/world/entity/player/StackedContents;)V a
	getGridHeight ()I o
	getGridWidth ()I n
	getRecipeBookType ()Lnet/minecraft/world/inventory/RecipeBookType; t
	getResultSlotIndex ()I m
	getSize ()I p
	quickMoveStack (Lnet/minecraft/world/entity/player/Player;I)Lnet/minecraft/world/item/ItemStack; a
	recipeMatches (Lnet/minecraft/world/item/crafting/Recipe;)Z a
	removed (Lnet/minecraft/world/entity/player/Player;)V b
	shouldMoveToInventory (I)Z e
	slotChangedCraftingGrid (Lnet/minecraft/world/inventory/AbstractContainerMenu;Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/inventory/CraftingContainer;Lnet/minecraft/world/inventory/ResultContainer;)V a
	slotsChanged (Lnet/minecraft/world/Container;)V a
	stillValid (Lnet/minecraft/world/entity/player/Player;)Z a
net/minecraft/world/inventory/DataSlot cbv
	prevValue a
	checkAndClearUpdateFlag ()Z c
	forContainer (Lnet/minecraft/world/inventory/ContainerData;I)Lnet/minecraft/world/inventory/DataSlot; a
	get ()I b
	set (I)V a
	shared ([II)Lnet/minecraft/world/inventory/DataSlot; a
	standalone ()Lnet/minecraft/world/inventory/DataSlot; a
net/minecraft/world/inventory/DispenserMenu cbw
	INV_SLOT_END m
	INV_SLOT_START l
	SLOT_COUNT k
	USE_ROW_SLOT_END o
	USE_ROW_SLOT_START n
	dispenser p
	quickMoveStack (Lnet/minecraft/world/entity/player/Player;I)Lnet/minecraft/world/item/ItemStack; a
	removed (Lnet/minecraft/world/entity/player/Player;)V b
	stillValid (Lnet/minecraft/world/entity/player/Player;)Z a
net/minecraft/world/inventory/EnchantmentMenu cbx
	access o
	costs k
	enchantClue l
	enchantSlots n
	enchantmentSeed q
	levelClue m
	random p
	clickMenuButton (Lnet/minecraft/world/entity/player/Player;I)Z b
	getEnchantmentList (Lnet/minecraft/world/item/ItemStack;II)Ljava/util/List; a
	getEnchantmentSeed ()I m
	getGoldCount ()I l
	quickMoveStack (Lnet/minecraft/world/entity/player/Player;I)Lnet/minecraft/world/item/ItemStack; a
	removed (Lnet/minecraft/world/entity/player/Player;)V b
	slotsChanged (Lnet/minecraft/world/Container;)V a
	stillValid (Lnet/minecraft/world/entity/player/Player;)Z a
net/minecraft/world/inventory/FurnaceFuelSlot cby
	menu a
	getMaxStackSize (Lnet/minecraft/world/item/ItemStack;)I a_
	isBucket (Lnet/minecraft/world/item/ItemStack;)Z c
	mayPlace (Lnet/minecraft/world/item/ItemStack;)Z a
net/minecraft/world/inventory/FurnaceMenu cbz
net/minecraft/world/inventory/FurnaceResultSlot cca
	player a
	removeCount b
	checkTakeAchievements (Lnet/minecraft/world/item/ItemStack;)V b_
	mayPlace (Lnet/minecraft/world/item/ItemStack;)Z a
	onQuickCraft (Lnet/minecraft/world/item/ItemStack;I)V a
	onTake (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/item/ItemStack;)V a
	remove (I)Lnet/minecraft/world/item/ItemStack; a
net/minecraft/world/inventory/GrindstoneMenu ccb
	ADDITIONAL_SLOT m
	INPUT_SLOT l
	INV_SLOT_END p
	INV_SLOT_START o
	MAX_NAME_LENGTH k
	RESULT_SLOT n
	USE_ROW_SLOT_END r
	USE_ROW_SLOT_START q
	access u
	repairSlots t
	resultSlots s
	createResult ()V l
	mergeEnchants (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/item/ItemStack;)Lnet/minecraft/world/item/ItemStack; a
	quickMoveStack (Lnet/minecraft/world/entity/player/Player;I)Lnet/minecraft/world/item/ItemStack; a
	removeNonCurses (Lnet/minecraft/world/item/ItemStack;II)Lnet/minecraft/world/item/ItemStack; a
	removed (Lnet/minecraft/world/entity/player/Player;)V b
	slotsChanged (Lnet/minecraft/world/Container;)V a
	stillValid (Lnet/minecraft/world/entity/player/Player;)Z a
net/minecraft/world/inventory/HopperMenu ccc
	CONTAINER_SIZE k
	hopper l
	quickMoveStack (Lnet/minecraft/world/entity/player/Player;I)Lnet/minecraft/world/item/ItemStack; a
	removed (Lnet/minecraft/world/entity/player/Player;)V b
	stillValid (Lnet/minecraft/world/entity/player/Player;)Z a
net/minecraft/world/inventory/HorseInventoryMenu ccd
	horse l
	horseContainer k
	hasChest (Lnet/minecraft/world/entity/animal/horse/AbstractHorse;)Z a
	quickMoveStack (Lnet/minecraft/world/entity/player/Player;I)Lnet/minecraft/world/item/ItemStack; a
	removed (Lnet/minecraft/world/entity/player/Player;)V b
	stillValid (Lnet/minecraft/world/entity/player/Player;)Z a
net/minecraft/world/inventory/InventoryMenu cce
	ARMOR_SLOT_END p
	ARMOR_SLOT_START o
	BLOCK_ATLAS v
	CONTAINER_ID k
	CRAFT_SLOT_END n
	CRAFT_SLOT_START m
	EMPTY_ARMOR_SLOT_BOOTS z
	EMPTY_ARMOR_SLOT_CHESTPLATE x
	EMPTY_ARMOR_SLOT_HELMET w
	EMPTY_ARMOR_SLOT_LEGGINGS y
	EMPTY_ARMOR_SLOT_SHIELD A
	INV_SLOT_END r
	INV_SLOT_START q
	RESULT_SLOT l
	SHIELD_SLOT u
	SLOT_IDS D
	TEXTURE_EMPTY_SLOTS C
	USE_ROW_SLOT_END t
	USE_ROW_SLOT_START s
	active B
	craftSlots E
	owner G
	resultSlots F
	canTakeItemForPickAll (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/inventory/Slot;)Z a
	clearCraftingContent ()V l
	fillCraftSlotsStackedContents (Lnet/minecraft/world/entity/player/StackedContents;)V a
	getCraftSlots ()Lnet/minecraft/world/inventory/CraftingContainer; q
	getGridHeight ()I o
	getGridWidth ()I n
	getRecipeBookType ()Lnet/minecraft/world/inventory/RecipeBookType; t
	getResultSlotIndex ()I m
	getSize ()I p
	isHotbarSlot (I)Z f
	onEquipItem (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/entity/EquipmentSlot;Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/item/ItemStack;)V a
	quickMoveStack (Lnet/minecraft/world/entity/player/Player;I)Lnet/minecraft/world/item/ItemStack; a
	recipeMatches (Lnet/minecraft/world/item/crafting/Recipe;)Z a
	removed (Lnet/minecraft/world/entity/player/Player;)V b
	shouldMoveToInventory (I)Z e
	slotsChanged (Lnet/minecraft/world/Container;)V a
	stillValid (Lnet/minecraft/world/entity/player/Player;)Z a
net/minecraft/world/inventory/ItemCombinerMenu ccf
	INVENTORY_SLOTS_PER_COLUMN l
	INVENTORY_SLOTS_PER_ROW k
	access o
	inputSlotIndexes m
	inputSlots q
	player p
	resultSlotIndex n
	resultSlots r
	canMoveIntoInputSlots (Lnet/minecraft/world/item/ItemStack;)Z c
	createContainer (I)Lnet/minecraft/world/SimpleContainer; e
	createInputSlotDefinitions ()Lnet/minecraft/world/inventory/ItemCombinerMenuSlotDefinition; l
	createInputSlots (Lnet/minecraft/world/inventory/ItemCombinerMenuSlotDefinition;)V a
	createInventorySlots (Lnet/minecraft/world/entity/player/Inventory;)V a
	createResult ()V m
	createResultSlot (Lnet/minecraft/world/inventory/ItemCombinerMenuSlotDefinition;)V b
	getInventorySlotEnd ()I p
	getInventorySlotStart ()I n
	getResultSlot ()I o
	getSlotToQuickMoveTo (Lnet/minecraft/world/item/ItemStack;)I d
	getUseRowEnd ()I r
	getUseRowStart ()I q
	isValidBlock (Lnet/minecraft/world/level/block/state/BlockState;)Z a
	mayPickup (Lnet/minecraft/world/entity/player/Player;Z)Z a
	onTake (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/item/ItemStack;)V a
	quickMoveStack (Lnet/minecraft/world/entity/player/Player;I)Lnet/minecraft/world/item/ItemStack; a
	removed (Lnet/minecraft/world/entity/player/Player;)V b
	slotsChanged (Lnet/minecraft/world/Container;)V a
	stillValid (Lnet/minecraft/world/entity/player/Player;)Z a
net/minecraft/world/inventory/ItemCombinerMenuSlotDefinition ccg
	resultSlot b
	slots a
	create ()Lnet/minecraft/world/inventory/ItemCombinerMenuSlotDefinition$Builder; a
	getInputSlotIndexes ()Ljava/util/List; f
	getNumOfInputSlots ()I d
	getResultSlot ()Lnet/minecraft/world/inventory/ItemCombinerMenuSlotDefinition$SlotDefinition; b
	getResultSlotIndex ()I e
	getSlot (I)Lnet/minecraft/world/inventory/ItemCombinerMenuSlotDefinition$SlotDefinition; b
	getSlots ()Ljava/util/List; c
	hasSlot (I)Z a
net/minecraft/world/inventory/ItemCombinerMenuSlotDefinition$Builder ccg$a
	resultSlot b
	slots a
	build ()Lnet/minecraft/world/inventory/ItemCombinerMenuSlotDefinition; a
	withResultSlot (III)Lnet/minecraft/world/inventory/ItemCombinerMenuSlotDefinition$Builder; a
	withSlot (IIILjava/util/function/Predicate;)Lnet/minecraft/world/inventory/ItemCombinerMenuSlotDefinition$Builder; a
net/minecraft/world/inventory/ItemCombinerMenuSlotDefinition$SlotDefinition ccg$b
	EMPTY e
	mayPlace d
	slotIndex a
	x b
	y c
	mayPlace ()Ljava/util/function/Predicate; d
	slotIndex ()I a
	x ()I b
	y ()I c
net/minecraft/world/inventory/LecternMenu cch
	BUTTON_NEXT_PAGE l
	BUTTON_PAGE_JUMP_RANGE_START n
	BUTTON_PREV_PAGE k
	BUTTON_TAKE_BOOK m
	DATA_COUNT o
	SLOT_COUNT p
	lectern q
	lecternData r
	clickMenuButton (Lnet/minecraft/world/entity/player/Player;I)Z b
	getBook ()Lnet/minecraft/world/item/ItemStack; l
	getPage ()I m
	quickMoveStack (Lnet/minecraft/world/entity/player/Player;I)Lnet/minecraft/world/item/ItemStack; a
	setData (II)V a
	stillValid (Lnet/minecraft/world/entity/player/Player;)Z a
net/minecraft/world/inventory/LoomMenu cci
	INV_SLOT_END m
	INV_SLOT_START l
	PATTERN_NOT_SET k
	USE_ROW_SLOT_END o
	USE_ROW_SLOT_START n
	access p
	bannerSlot t
	dyeSlot u
	inputContainer y
	lastSoundTime x
	outputContainer z
	patternSlot v
	resultSlot w
	selectablePatterns r
	selectedBannerPatternIndex q
	slotUpdateListener s
	clickMenuButton (Lnet/minecraft/world/entity/player/Player;I)Z b
	getBannerSlot ()Lnet/minecraft/world/inventory/Slot; n
	getDyeSlot ()Lnet/minecraft/world/inventory/Slot; o
	getPatternSlot ()Lnet/minecraft/world/inventory/Slot; p
	getResultSlot ()Lnet/minecraft/world/inventory/Slot; q
	getSelectablePatterns ()Ljava/util/List; l
	getSelectablePatterns (Lnet/minecraft/world/item/ItemStack;)Ljava/util/List; c
	getSelectedBannerPatternIndex ()I m
	isValidPatternIndex (I)Z e
	quickMoveStack (Lnet/minecraft/world/entity/player/Player;I)Lnet/minecraft/world/item/ItemStack; a
	registerUpdateListener (Ljava/lang/Runnable;)V a
	removed (Lnet/minecraft/world/entity/player/Player;)V b
	setupResultSlot (Lnet/minecraft/core/Holder;)V a
	slotsChanged (Lnet/minecraft/world/Container;)V a
	stillValid (Lnet/minecraft/world/entity/player/Player;)Z a
net/minecraft/world/inventory/MenuConstructor ccj
net/minecraft/world/inventory/MenuType cck
	ANVIL h
	BEACON i
	BLAST_FURNACE j
	BREWING_STAND k
	CARTOGRAPHY_TABLE w
	CRAFTING l
	ENCHANTMENT m
	FURNACE n
	GENERIC_3x3 g
	GENERIC_9x1 a
	GENERIC_9x2 b
	GENERIC_9x3 c
	GENERIC_9x4 d
	GENERIC_9x5 e
	GENERIC_9x6 f
	GRINDSTONE o
	HOPPER p
	LECTERN q
	LOOM r
	MERCHANT s
	SHULKER_BOX t
	SMITHING u
	SMOKER v
	STONECUTTER x
	constructor z
	requiredFeatures y
	create (ILnet/minecraft/world/entity/player/Inventory;)Lnet/minecraft/world/inventory/AbstractContainerMenu; a
	register (Ljava/lang/String;Lnet/minecraft/world/inventory/MenuType$MenuSupplier;)Lnet/minecraft/world/inventory/MenuType; a
	register (Ljava/lang/String;Lnet/minecraft/world/inventory/MenuType$MenuSupplier;[Lnet/minecraft/world/flag/FeatureFlag;)Lnet/minecraft/world/inventory/MenuType; a
	requiredFeatures ()Lnet/minecraft/world/flag/FeatureFlagSet; m
net/minecraft/world/inventory/MenuType$MenuSupplier cck$a
net/minecraft/world/inventory/MerchantContainer ccl
	activeOffer e
	futureXp g
	itemStacks d
	merchant c
	selectionHint f
	clearContent ()V a
	getActiveOffer ()Lnet/minecraft/world/item/trading/MerchantOffer; g
	getContainerSize ()I b
	getFutureXp ()I h
	getItem (I)Lnet/minecraft/world/item/ItemStack; a
	isEmpty ()Z ab_
	isPaymentSlot (I)Z d
	removeItem (II)Lnet/minecraft/world/item/ItemStack; a
	removeItemNoUpdate (I)Lnet/minecraft/world/item/ItemStack; b
	setChanged ()V e
	setItem (ILnet/minecraft/world/item/ItemStack;)V a
	setSelectionHint (I)V c
	stillValid (Lnet/minecraft/world/entity/player/Player;)Z a
	updateSellItem ()V f
net/minecraft/world/inventory/MerchantMenu ccm
	BUYSLOT_X t
	INV_SLOT_END o
	INV_SLOT_START n
	PAYMENT1_SLOT k
	PAYMENT2_SLOT l
	RESULT_SLOT m
	ROW_Y u
	SELLSLOT1_X r
	SELLSLOT2_X s
	USE_ROW_SLOT_END q
	USE_ROW_SLOT_START p
	canRestock z
	merchantLevel x
	showProgressBar y
	tradeContainer w
	trader v
	canRestock ()Z o
	canTakeItemForPickAll (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/inventory/Slot;)Z a
	getFutureTraderXp ()I m
	getOffers ()Lnet/minecraft/world/item/trading/MerchantOffers; p
	getTraderLevel ()I n
	getTraderXp ()I l
	moveFromInventoryToPaymentSlot (ILnet/minecraft/world/item/ItemStack;)V c
	playTradeSound ()V r
	quickMoveStack (Lnet/minecraft/world/entity/player/Player;I)Lnet/minecraft/world/item/ItemStack; a
	removed (Lnet/minecraft/world/entity/player/Player;)V b
	setCanRestock (Z)V b
	setMerchantLevel (I)V g
	setOffers (Lnet/minecraft/world/item/trading/MerchantOffers;)V a
	setSelectionHint (I)V e
	setShowProgressBar (Z)V a
	setXp (I)V f
	showProgressBar ()Z q
	slotsChanged (Lnet/minecraft/world/Container;)V a
	stillValid (Lnet/minecraft/world/entity/player/Player;)Z a
	tryMoveItems (I)V h
net/minecraft/world/inventory/MerchantResultSlot ccn
	merchant h
	player b
	removeCount c
	slots a
	checkTakeAchievements (Lnet/minecraft/world/item/ItemStack;)V b_
	mayPlace (Lnet/minecraft/world/item/ItemStack;)Z a
	onQuickCraft (Lnet/minecraft/world/item/ItemStack;I)V a
	onTake (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/item/ItemStack;)V a
	remove (I)Lnet/minecraft/world/item/ItemStack; a
net/minecraft/world/inventory/PlayerEnderChestContainer cco
	activeChest c
	createTag ()Lnet/minecraft/nbt/ListTag; g
	fromTag (Lnet/minecraft/nbt/ListTag;)V a
	isActiveChest (Lnet/minecraft/world/level/block/entity/EnderChestBlockEntity;)Z b
	setActiveChest (Lnet/minecraft/world/level/block/entity/EnderChestBlockEntity;)V a
	startOpen (Lnet/minecraft/world/entity/player/Player;)V d_
	stillValid (Lnet/minecraft/world/entity/player/Player;)Z a
	stopOpen (Lnet/minecraft/world/entity/player/Player;)V c
net/minecraft/world/inventory/RecipeBookMenu ccp
	clearCraftingContent ()V l
	fillCraftSlotsStackedContents (Lnet/minecraft/world/entity/player/StackedContents;)V a
	getGridHeight ()I o
	getGridWidth ()I n
	getRecipeBookType ()Lnet/minecraft/world/inventory/RecipeBookType; t
	getResultSlotIndex ()I m
	getSize ()I p
	handlePlacement (ZLnet/minecraft/world/item/crafting/Recipe;Lnet/minecraft/server/level/ServerPlayer;)V a
	recipeMatches (Lnet/minecraft/world/item/crafting/Recipe;)Z a
	shouldMoveToInventory (I)Z e
net/minecraft/world/inventory/RecipeBookType ccq
	$VALUES e
	BLAST_FURNACE c
	CRAFTING a
	FURNACE b
	SMOKER d
	$values ()[Lnet/minecraft/world/inventory/RecipeBookType; a
net/minecraft/world/inventory/RecipeHolder ccr
	awardUsedRecipes (Lnet/minecraft/world/entity/player/Player;Ljava/util/List;)V a
	getRecipeUsed ()Lnet/minecraft/world/item/crafting/Recipe; d
	setRecipeUsed (Lnet/minecraft/world/item/crafting/Recipe;)V a
	setRecipeUsed (Lnet/minecraft/world/level/Level;Lnet/minecraft/server/level/ServerPlayer;Lnet/minecraft/world/item/crafting/Recipe;)Z a
net/minecraft/world/inventory/ResultContainer ccs
	itemStacks c
	recipeUsed d
	clearContent ()V a
	getContainerSize ()I b
	getItem (I)Lnet/minecraft/world/item/ItemStack; a
	getRecipeUsed ()Lnet/minecraft/world/item/crafting/Recipe; d
	isEmpty ()Z ab_
	removeItem (II)Lnet/minecraft/world/item/ItemStack; a
	removeItemNoUpdate (I)Lnet/minecraft/world/item/ItemStack; b
	setChanged ()V e
	setItem (ILnet/minecraft/world/item/ItemStack;)V a
	setRecipeUsed (Lnet/minecraft/world/item/crafting/Recipe;)V a
	stillValid (Lnet/minecraft/world/entity/player/Player;)Z a
net/minecraft/world/inventory/ResultSlot cct
	craftSlots a
	player b
	removeCount c
	checkTakeAchievements (Lnet/minecraft/world/item/ItemStack;)V b_
	mayPlace (Lnet/minecraft/world/item/ItemStack;)Z a
	onQuickCraft (Lnet/minecraft/world/item/ItemStack;I)V a
	onSwapCraft (I)V b
	onTake (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/item/ItemStack;)V a
	remove (I)Lnet/minecraft/world/item/ItemStack; a
net/minecraft/world/inventory/ShulkerBoxMenu ccu
	CONTAINER_SIZE k
	container l
	quickMoveStack (Lnet/minecraft/world/entity/player/Player;I)Lnet/minecraft/world/item/ItemStack; a
	removed (Lnet/minecraft/world/entity/player/Player;)V b
	stillValid (Lnet/minecraft/world/entity/player/Player;)Z a
net/minecraft/world/inventory/ShulkerBoxSlot ccv
	mayPlace (Lnet/minecraft/world/item/ItemStack;)Z a
net/minecraft/world/inventory/SimpleContainerData ccw
	ints a
	get (I)I a
	getCount ()I a
	set (II)V a
net/minecraft/world/inventory/Slot ccx
	container d
	index e
	slot a
	x f
	y g
	allowModification (Lnet/minecraft/world/entity/player/Player;)Z b
	checkTakeAchievements (Lnet/minecraft/world/item/ItemStack;)V b_
	getContainerSlot ()I g
	getItem ()Lnet/minecraft/world/item/ItemStack; e
	getMaxStackSize ()I a
	getMaxStackSize (Lnet/minecraft/world/item/ItemStack;)I a_
	getNoItemIcon ()Lcom/mojang/datafixers/util/Pair; c
	hasItem ()Z f
	isActive ()Z b
	isHighlightable ()Z h
	mayPickup (Lnet/minecraft/world/entity/player/Player;)Z a
	mayPlace (Lnet/minecraft/world/item/ItemStack;)Z a
	onQuickCraft (Lnet/minecraft/world/item/ItemStack;I)V a
	onQuickCraft (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/item/ItemStack;)V a
	onSwapCraft (I)V b
	onTake (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/item/ItemStack;)V a
	remove (I)Lnet/minecraft/world/item/ItemStack; a
	safeInsert (Lnet/minecraft/world/item/ItemStack;)Lnet/minecraft/world/item/ItemStack; f
	safeInsert (Lnet/minecraft/world/item/ItemStack;I)Lnet/minecraft/world/item/ItemStack; b
	safeTake (IILnet/minecraft/world/entity/player/Player;)Lnet/minecraft/world/item/ItemStack; b
	set (Lnet/minecraft/world/item/ItemStack;)V e
	setByPlayer (Lnet/minecraft/world/item/ItemStack;)V d
	setChanged ()V d
	tryRemove (IILnet/minecraft/world/entity/player/Player;)Ljava/util/Optional; a
net/minecraft/world/inventory/SmithingMenu ccy
	ADDITIONAL_SLOT m
	ADDITIONAL_SLOT_X_PLACEMENT u
	BASE_SLOT l
	BASE_SLOT_X_PLACEMENT t
	RESULT_SLOT n
	RESULT_SLOT_X_PLACEMENT w
	SLOT_Y_PLACEMENT v
	TEMPLATE_SLOT k
	TEMPLATE_SLOT_X_PLACEMENT s
	level x
	recipes z
	selectedRecipe y
	canMoveIntoInputSlots (Lnet/minecraft/world/item/ItemStack;)Z c
	canTakeItemForPickAll (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/inventory/Slot;)Z a
	createInputSlotDefinitions ()Lnet/minecraft/world/inventory/ItemCombinerMenuSlotDefinition; l
	createResult ()V m
	findSlotMatchingIngredient (Lnet/minecraft/world/item/crafting/SmithingRecipe;Lnet/minecraft/world/item/ItemStack;)Ljava/util/Optional; a
	getRelevantItems ()Ljava/util/List; n
	getSlotToQuickMoveTo (Lnet/minecraft/world/item/ItemStack;)I d
	isValidBlock (Lnet/minecraft/world/level/block/state/BlockState;)Z a
	mayPickup (Lnet/minecraft/world/entity/player/Player;Z)Z a
	onTake (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/item/ItemStack;)V a
	shrinkStackInSlot (I)V e
net/minecraft/world/inventory/SmokerMenu ccz
net/minecraft/world/inventory/StackedContentsCompatible cda
	fillStackedContents (Lnet/minecraft/world/entity/player/StackedContents;)V a
net/minecraft/world/inventory/StonecutterMenu cdb
	INPUT_SLOT k
	INV_SLOT_END q
	INV_SLOT_START p
	RESULT_SLOT l
	USE_ROW_SLOT_END s
	USE_ROW_SLOT_START r
	access t
	container o
	input x
	inputSlot m
	lastSoundTime y
	level v
	recipes w
	resultContainer A
	resultSlot n
	selectedRecipeIndex u
	slotUpdateListener z
	canTakeItemForPickAll (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/inventory/Slot;)Z a
	clickMenuButton (Lnet/minecraft/world/entity/player/Player;I)Z b
	getNumRecipes ()I n
	getRecipes ()Ljava/util/List; m
	getSelectedRecipeIndex ()I l
	getType ()Lnet/minecraft/world/inventory/MenuType; a
	hasInputItem ()Z o
	isValidRecipeIndex (I)Z e
	quickMoveStack (Lnet/minecraft/world/entity/player/Player;I)Lnet/minecraft/world/item/ItemStack; a
	registerUpdateListener (Ljava/lang/Runnable;)V a
	removed (Lnet/minecraft/world/entity/player/Player;)V b
	setupRecipeList (Lnet/minecraft/world/Container;Lnet/minecraft/world/item/ItemStack;)V a
	setupResultSlot ()V p
	slotsChanged (Lnet/minecraft/world/Container;)V a
	stillValid (Lnet/minecraft/world/entity/player/Player;)Z a
net/minecraft/world/inventory/TransientCraftingContainer cdc
	height e
	items c
	menu f
	width d
	clearContent ()V a
	fillStackedContents (Lnet/minecraft/world/entity/player/StackedContents;)V a
	getContainerSize ()I b
	getHeight ()I g
	getItem (I)Lnet/minecraft/world/item/ItemStack; a
	getItems ()Ljava/util/List; h
	getWidth ()I f
	isEmpty ()Z ab_
	removeItem (II)Lnet/minecraft/world/item/ItemStack; a
	removeItemNoUpdate (I)Lnet/minecraft/world/item/ItemStack; b
	setChanged ()V e
	setItem (ILnet/minecraft/world/item/ItemStack;)V a
	stillValid (Lnet/minecraft/world/entity/player/Player;)Z a
net/minecraft/world/inventory/tooltip/BundleTooltip cde
	items a
	weight b
	getItems ()Lnet/minecraft/core/NonNullList; a
	getWeight ()I b
net/minecraft/world/inventory/tooltip/TooltipComponent cdf
net/minecraft/world/item/AdventureModeCheck cdh
	checksBlockEntity d
	lastCheckedBlock b
	lastResult c
	tagName a
	areSameBlocks (Lnet/minecraft/world/level/block/state/pattern/BlockInWorld;Lnet/minecraft/world/level/block/state/pattern/BlockInWorld;Z)Z a
	test (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/core/Registry;Lnet/minecraft/world/level/block/state/pattern/BlockInWorld;)Z a
net/minecraft/world/item/AirItem cdi
	block a
	appendHoverText (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/Level;Ljava/util/List;Lnet/minecraft/world/item/TooltipFlag;)V a
	getDescriptionId ()Ljava/lang/String; a
net/minecraft/world/item/ArmorItem cdj
	ARMOR_MODIFIER_UUID_PER_TYPE e
	DISPENSE_ITEM_BEHAVIOR a
	defaultModifiers h
	defense f
	knockbackResistance c
	material d
	toughness g
	type b
	dispenseArmor (Lnet/minecraft/core/BlockSource;Lnet/minecraft/world/item/ItemStack;)Z a
	getDefaultAttributeModifiers (Lnet/minecraft/world/entity/EquipmentSlot;)Lcom/google/common/collect/Multimap; a
	getDefense ()I e
	getEnchantmentValue ()I c
	getEquipSound ()Lnet/minecraft/sounds/SoundEvent; ak_
	getEquipmentSlot ()Lnet/minecraft/world/entity/EquipmentSlot; g
	getMaterial ()Lnet/minecraft/world/item/ArmorMaterial; d
	getToughness ()F f
	getType ()Lnet/minecraft/world/item/ArmorItem$Type; b
	isValidRepairItem (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/item/ItemStack;)Z a
	use (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResultHolder; a
net/minecraft/world/item/ArmorItem$Type cdj$a
	$VALUES g
	BOOTS d
	CHESTPLATE b
	HELMET a
	LEGGINGS c
	name f
	slot e
	$values ()[Lnet/minecraft/world/item/ArmorItem$Type; c
	getName ()Ljava/lang/String; b
	getSlot ()Lnet/minecraft/world/entity/EquipmentSlot; a
net/minecraft/world/item/ArmorMaterial cdk
	getDefenseForType (Lnet/minecraft/world/item/ArmorItem$Type;)I b
	getDurabilityForType (Lnet/minecraft/world/item/ArmorItem$Type;)I a
	getEnchantmentValue ()I a
	getEquipSound ()Lnet/minecraft/sounds/SoundEvent; b
	getKnockbackResistance ()F g
	getName ()Ljava/lang/String; e
	getRepairIngredient ()Lnet/minecraft/world/item/crafting/Ingredient; d
	getToughness ()F f
net/minecraft/world/item/ArmorMaterials cdl
	$VALUES r
	CHAIN b
	CODEC h
	DIAMOND e
	GOLD d
	HEALTH_FUNCTION_FOR_TYPE i
	IRON c
	LEATHER a
	NETHERITE g
	TURTLE f
	durabilityMultiplier k
	enchantmentValue m
	knockbackResistance p
	name j
	protectionFunctionForType l
	repairIngredient q
	sound n
	toughness o
	$values ()[Lnet/minecraft/world/item/ArmorMaterials; o
	getDefenseForType (Lnet/minecraft/world/item/ArmorItem$Type;)I b
	getDurabilityForType (Lnet/minecraft/world/item/ArmorItem$Type;)I a
	getEnchantmentValue ()I a
	getEquipSound ()Lnet/minecraft/sounds/SoundEvent; b
	getKnockbackResistance ()F g
	getName ()Ljava/lang/String; e
	getRepairIngredient ()Lnet/minecraft/world/item/crafting/Ingredient; d
	getSerializedName ()Ljava/lang/String; c
	getToughness ()F f
net/minecraft/world/item/ArmorStandItem cdm
	useOn (Lnet/minecraft/world/item/context/UseOnContext;)Lnet/minecraft/world/InteractionResult; a
net/minecraft/world/item/ArrowItem cdn
	createArrow (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/entity/LivingEntity;)Lnet/minecraft/world/entity/projectile/AbstractArrow; a
net/minecraft/world/item/AxeItem cdo
	STRIPPABLES a
	getStripped (Lnet/minecraft/world/level/block/state/BlockState;)Ljava/util/Optional; b
	useOn (Lnet/minecraft/world/item/context/UseOnContext;)Lnet/minecraft/world/InteractionResult; a
net/minecraft/world/item/BannerItem cdp
	PATTERN_PREFIX c
	appendHoverText (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/Level;Ljava/util/List;Lnet/minecraft/world/item/TooltipFlag;)V a
	appendHoverTextFromBannerBlockEntityTag (Lnet/minecraft/world/item/ItemStack;Ljava/util/List;)V a
	getColor ()Lnet/minecraft/world/item/DyeColor; b
net/minecraft/world/item/BannerPatternItem cdq
	bannerPattern a
	appendHoverText (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/Level;Ljava/util/List;Lnet/minecraft/world/item/TooltipFlag;)V a
	getBannerPattern ()Lnet/minecraft/tags/TagKey; b
	getDisplayName ()Lnet/minecraft/network/chat/MutableComponent; d
net/minecraft/world/item/BedItem cdr
	placeBlock (Lnet/minecraft/world/item/context/BlockPlaceContext;Lnet/minecraft/world/level/block/state/BlockState;)Z a
net/minecraft/world/item/BlockItem cds
	BLOCK_ENTITY_TAG a
	BLOCK_STATE_TAG b
	block c
	appendHoverText (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/Level;Ljava/util/List;Lnet/minecraft/world/item/TooltipFlag;)V a
	canFitInsideContainerItems ()Z ah_
	canPlace (Lnet/minecraft/world/item/context/BlockPlaceContext;Lnet/minecraft/world/level/block/state/BlockState;)Z b
	getBlock ()Lnet/minecraft/world/level/block/Block; e
	getBlockEntityData (Lnet/minecraft/world/item/ItemStack;)Lnet/minecraft/nbt/CompoundTag; a
	getDescriptionId ()Ljava/lang/String; a
	getPlaceSound (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/sounds/SoundEvent; a
	getPlacementState (Lnet/minecraft/world/item/context/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; c
	mustSurvive ()Z d
	onDestroyed (Lnet/minecraft/world/entity/item/ItemEntity;)V a
	place (Lnet/minecraft/world/item/context/BlockPlaceContext;)Lnet/minecraft/world/InteractionResult; a
	placeBlock (Lnet/minecraft/world/item/context/BlockPlaceContext;Lnet/minecraft/world/level/block/state/BlockState;)Z a
	registerBlocks (Ljava/util/Map;Lnet/minecraft/world/item/Item;)V a
	requiredFeatures ()Lnet/minecraft/world/flag/FeatureFlagSet; m
	setBlockEntityData (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/block/entity/BlockEntityType;Lnet/minecraft/nbt/CompoundTag;)V a
	updateBlockStateFromTag (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/Level;Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/state/BlockState; a
	updateCustomBlockEntityTag (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/block/state/BlockState;)Z a
	updateCustomBlockEntityTag (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/item/ItemStack;)Z a
	updatePlacementContext (Lnet/minecraft/world/item/context/BlockPlaceContext;)Lnet/minecraft/world/item/context/BlockPlaceContext; b
	updateState (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/state/properties/Property;Ljava/lang/String;)Lnet/minecraft/world/level/block/state/BlockState; a
	useOn (Lnet/minecraft/world/item/context/UseOnContext;)Lnet/minecraft/world/InteractionResult; a
net/minecraft/world/item/BoatItem cdt
	ENTITY_PREDICATE a
	hasChest c
	type b
	getBoat (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/phys/HitResult;)Lnet/minecraft/world/entity/vehicle/Boat; a
	use (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResultHolder; a
net/minecraft/world/item/BoneMealItem cdu
	GRASS_COUNT_MULTIPLIER c
	GRASS_SPREAD_HEIGHT b
	GRASS_SPREAD_WIDTH a
	addGrowthParticles (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;I)V a
	growCrop (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)Z a
	growWaterPlant (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;)Z a
	useOn (Lnet/minecraft/world/item/context/UseOnContext;)Lnet/minecraft/world/InteractionResult; a
net/minecraft/world/item/BookItem cdv
	getEnchantmentValue ()I c
	isEnchantable (Lnet/minecraft/world/item/ItemStack;)Z d_
net/minecraft/world/item/BottleItem cdw
	turnBottleIntoItem (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/item/ItemStack;)Lnet/minecraft/world/item/ItemStack; a
	use (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResultHolder; a
net/minecraft/world/item/BowItem cdx
	DEFAULT_RANGE b
	MAX_DRAW_DURATION a
	getAllSupportedProjectiles ()Ljava/util/function/Predicate; b
	getDefaultProjectileRange ()I d
	getPowerForTime (I)F a
	getUseAnimation (Lnet/minecraft/world/item/ItemStack;)Lnet/minecraft/world/item/UseAnim; c
	getUseDuration (Lnet/minecraft/world/item/ItemStack;)I b
	releaseUsing (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/LivingEntity;I)V a
	use (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResultHolder; a
net/minecraft/world/item/BowlFoodItem cdy
	finishUsingItem (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/LivingEntity;)Lnet/minecraft/world/item/ItemStack; a
net/minecraft/world/item/BrushItem cdz
	ANIMATION_DURATION a
	MAX_BRUSH_DISTANCE c
	USE_DURATION b
	calculateHitResult (Lnet/minecraft/world/entity/LivingEntity;)Lnet/minecraft/world/phys/HitResult; a
	getUseAnimation (Lnet/minecraft/world/item/ItemStack;)Lnet/minecraft/world/item/UseAnim; c
	getUseDuration (Lnet/minecraft/world/item/ItemStack;)I b
	onUseTick (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/item/ItemStack;I)V a
	spawnDustParticles (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/phys/BlockHitResult;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/phys/Vec3;Lnet/minecraft/world/entity/HumanoidArm;)V a
	useOn (Lnet/minecraft/world/item/context/UseOnContext;)Lnet/minecraft/world/InteractionResult; a
net/minecraft/world/item/BrushItem$DustParticlesDelta cdz$a
	ALONG_SIDE_DELTA d
	OUT_FROM_SIDE_DELTA e
	xd a
	yd b
	zd c
	fromDirection (Lnet/minecraft/world/phys/Vec3;Lnet/minecraft/core/Direction;)Lnet/minecraft/world/item/BrushItem$DustParticlesDelta; a
	xd ()D a
	yd ()D b
	zd ()D c
net/minecraft/world/item/BucketItem cea
	content a
	checkExtraContent (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/level/Level;Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/core/BlockPos;)V a
	emptyContents (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/BlockHitResult;)Z a
	getEmptySuccessItem (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/entity/player/Player;)Lnet/minecraft/world/item/ItemStack; a
	playEmptySound (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;)V a
	use (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResultHolder; a
net/minecraft/world/item/BundleItem ceb
	BAR_COLOR d
	BUNDLE_IN_BUNDLE_WEIGHT c
	MAX_WEIGHT a
	TAG_ITEMS b
	add (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/item/ItemStack;)I b
	appendHoverText (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/Level;Ljava/util/List;Lnet/minecraft/world/item/TooltipFlag;)V a
	dropContents (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/entity/player/Player;)Z a
	getBarColor (Lnet/minecraft/world/item/ItemStack;)I g
	getBarWidth (Lnet/minecraft/world/item/ItemStack;)I f
	getContentWeight (Lnet/minecraft/world/item/ItemStack;)I o
	getContents (Lnet/minecraft/world/item/ItemStack;)Ljava/util/stream/Stream; q
	getFullnessDisplay (Lnet/minecraft/world/item/ItemStack;)F d
	getMatchingItem (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/nbt/ListTag;)Ljava/util/Optional; a
	getTooltipImage (Lnet/minecraft/world/item/ItemStack;)Ljava/util/Optional; h
	getWeight (Lnet/minecraft/world/item/ItemStack;)I k
	isBarVisible (Lnet/minecraft/world/item/ItemStack;)Z e
	onDestroyed (Lnet/minecraft/world/entity/item/ItemEntity;)V a
	overrideOtherStackedOnMe (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/inventory/Slot;Lnet/minecraft/world/inventory/ClickAction;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/entity/SlotAccess;)Z a
	overrideStackedOnOther (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/inventory/Slot;Lnet/minecraft/world/inventory/ClickAction;Lnet/minecraft/world/entity/player/Player;)Z a
	playDropContentsSound (Lnet/minecraft/world/entity/Entity;)V c
	playInsertSound (Lnet/minecraft/world/entity/Entity;)V b
	playRemoveOneSound (Lnet/minecraft/world/entity/Entity;)V a
	removeOne (Lnet/minecraft/world/item/ItemStack;)Ljava/util/Optional; p
	use (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResultHolder; a
net/minecraft/world/item/ChorusFruitItem cec
	finishUsingItem (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/LivingEntity;)Lnet/minecraft/world/item/ItemStack; a
net/minecraft/world/item/CompassItem ced
	LOGGER d
	TAG_LODESTONE_DIMENSION b
	TAG_LODESTONE_POS a
	TAG_LODESTONE_TRACKED c
	addLodestoneTags (Lnet/minecraft/resources/ResourceKey;Lnet/minecraft/core/BlockPos;Lnet/minecraft/nbt/CompoundTag;)V a
	getDescriptionId (Lnet/minecraft/world/item/ItemStack;)Ljava/lang/String; j
	getLodestoneDimension (Lnet/minecraft/nbt/CompoundTag;)Ljava/util/Optional; c
	getLodestonePosition (Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/core/GlobalPos; a
	getSpawnPosition (Lnet/minecraft/world/level/Level;)Lnet/minecraft/core/GlobalPos; a
	inventoryTick (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/Entity;IZ)V a
	isFoil (Lnet/minecraft/world/item/ItemStack;)Z i
	isLodestoneCompass (Lnet/minecraft/world/item/ItemStack;)Z d
	useOn (Lnet/minecraft/world/item/context/UseOnContext;)Lnet/minecraft/world/InteractionResult; a
net/minecraft/world/item/ComplexItem cee
	getUpdatePacket (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/player/Player;)Lnet/minecraft/network/protocol/Packet; a
	isComplex ()Z ad_
net/minecraft/world/item/CreativeModeTab cef
	alignedRight e
	backgroundSuffix b
	canScroll c
	column g
	displayItems j
	displayItemsGenerator n
	displayItemsSearchTab k
	displayName a
	iconGenerator m
	iconItemStack i
	row f
	searchTreeBuilder l
	showTitle d
	type h
	buildContents (Lnet/minecraft/world/item/CreativeModeTab$ItemDisplayParameters;)V a
	builder (Lnet/minecraft/world/item/CreativeModeTab$Row;I)Lnet/minecraft/world/item/CreativeModeTab$Builder; a
	canScroll ()Z e
	column ()I f
	contains (Lnet/minecraft/world/item/ItemStack;)Z a
	getBackgroundSuffix ()Ljava/lang/String; c
	getDisplayItems ()Ljava/util/Collection; l
	getDisplayName ()Lnet/minecraft/network/chat/Component; a
	getIconItem ()Lnet/minecraft/world/item/ItemStack; b
	getSearchTabDisplayItems ()Ljava/util/Collection; m
	getType ()Lnet/minecraft/world/item/CreativeModeTab$Type; k
	hasAnyItems ()Z h
	isAlignedRight ()Z j
	rebuildSearchTree ()V n
	row ()Lnet/minecraft/world/item/CreativeModeTab$Row; g
	setSearchTreeBuilder (Ljava/util/function/Consumer;)V a
	shouldDisplay ()Z i
	showTitle ()Z d
net/minecraft/world/item/CreativeModeTab$Builder cef$a
	EMPTY_GENERATOR a
	alignedRight i
	backgroundSuffix k
	canScroll g
	column c
	displayItemsGenerator f
	displayName d
	iconGenerator e
	row b
	showTitle h
	type j
	alignedRight ()Lnet/minecraft/world/item/CreativeModeTab$Builder; a
	backgroundSuffix (Ljava/lang/String;)Lnet/minecraft/world/item/CreativeModeTab$Builder; a
	build ()Lnet/minecraft/world/item/CreativeModeTab; d
	displayItems (Lnet/minecraft/world/item/CreativeModeTab$DisplayItemsGenerator;)Lnet/minecraft/world/item/CreativeModeTab$Builder; a
	hideTitle ()Lnet/minecraft/world/item/CreativeModeTab$Builder; b
	icon (Ljava/util/function/Supplier;)Lnet/minecraft/world/item/CreativeModeTab$Builder; a
	noScrollBar ()Lnet/minecraft/world/item/CreativeModeTab$Builder; c
	title (Lnet/minecraft/network/chat/Component;)Lnet/minecraft/world/item/CreativeModeTab$Builder; a
	type (Lnet/minecraft/world/item/CreativeModeTab$Type;)Lnet/minecraft/world/item/CreativeModeTab$Builder; a
net/minecraft/world/item/CreativeModeTab$DisplayItemsGenerator cef$b
net/minecraft/world/item/CreativeModeTab$ItemDisplayBuilder cef$c
	featureFlagSet d
	searchTabContents b
	tab c
	tabContents a
	accept (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/item/CreativeModeTab$TabVisibility;)V a
net/minecraft/world/item/CreativeModeTab$ItemDisplayParameters cef$d
	enabledFeatures a
	hasPermissions b
	holders c
	enabledFeatures ()Lnet/minecraft/world/flag/FeatureFlagSet; a
	hasPermissions ()Z b
	holders ()Lnet/minecraft/core/HolderLookup$Provider; c
	needsUpdate (Lnet/minecraft/world/flag/FeatureFlagSet;ZLnet/minecraft/core/HolderLookup$Provider;)Z a
net/minecraft/world/item/CreativeModeTab$Output cef$e
	accept (Lnet/minecraft/world/item/ItemStack;)V a
	accept (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/item/CreativeModeTab$TabVisibility;)V a
	accept (Lnet/minecraft/world/level/ItemLike;)V a
	accept (Lnet/minecraft/world/level/ItemLike;Lnet/minecraft/world/item/CreativeModeTab$TabVisibility;)V a
	acceptAll (Ljava/util/Collection;)V a
	acceptAll (Ljava/util/Collection;Lnet/minecraft/world/item/CreativeModeTab$TabVisibility;)V a
net/minecraft/world/item/CreativeModeTab$Row cef$f
	$VALUES c
	BOTTOM b
	TOP a
	$values ()[Lnet/minecraft/world/item/CreativeModeTab$Row; a
net/minecraft/world/item/CreativeModeTab$TabVisibility cef$g
	$VALUES d
	PARENT_AND_SEARCH_TABS a
	PARENT_TAB_ONLY b
	SEARCH_TAB_ONLY c
	$values ()[Lnet/minecraft/world/item/CreativeModeTab$TabVisibility; a
net/minecraft/world/item/CreativeModeTab$Type cef$h
	$VALUES e
	CATEGORY a
	HOTBAR c
	INVENTORY b
	SEARCH d
	$values ()[Lnet/minecraft/world/item/CreativeModeTab$Type; a
net/minecraft/world/item/CreativeModeTabs ceg
	BUILDING_BLOCKS a
	CACHED_PARAMETERS p
	COLORED_BLOCKS b
	COMBAT i
	FOOD_AND_DRINKS j
	FUNCTIONAL_BLOCKS d
	HOTBAR f
	INGREDIENTS k
	INVENTORY n
	NATURAL_BLOCKS c
	OP_BLOCKS m
	PAINTING_COMPARATOR o
	REDSTONE_BLOCKS e
	SEARCH g
	SPAWN_EGGS l
	TOOLS_AND_UTILITIES h
	allTabs ()Ljava/util/List; d
	bootstrap (Lnet/minecraft/core/Registry;)Lnet/minecraft/world/item/CreativeModeTab; a
	buildAllTabContents (Lnet/minecraft/world/item/CreativeModeTab$ItemDisplayParameters;)V a
	createKey (Ljava/lang/String;)Lnet/minecraft/resources/ResourceKey; a
	generateEnchantmentBookTypesAllLevels (Lnet/minecraft/world/item/CreativeModeTab$Output;Lnet/minecraft/core/HolderLookup;Ljava/util/Set;Lnet/minecraft/world/item/CreativeModeTab$TabVisibility;)V b
	generateEnchantmentBookTypesOnlyMaxLevel (Lnet/minecraft/world/item/CreativeModeTab$Output;Lnet/minecraft/core/HolderLookup;Ljava/util/Set;Lnet/minecraft/world/item/CreativeModeTab$TabVisibility;)V a
	generateFireworksAllDurations (Lnet/minecraft/world/item/CreativeModeTab$Output;Lnet/minecraft/world/item/CreativeModeTab$TabVisibility;)V b
	generateInstrumentTypes (Lnet/minecraft/world/item/CreativeModeTab$Output;Lnet/minecraft/core/HolderLookup;Lnet/minecraft/world/item/Item;Lnet/minecraft/tags/TagKey;Lnet/minecraft/world/item/CreativeModeTab$TabVisibility;)V a
	generatePotionEffectTypes (Lnet/minecraft/world/item/CreativeModeTab$Output;Lnet/minecraft/core/HolderLookup;Lnet/minecraft/world/item/Item;Lnet/minecraft/world/item/CreativeModeTab$TabVisibility;)V a
	generatePresetPaintings (Lnet/minecraft/world/item/CreativeModeTab$Output;Lnet/minecraft/core/HolderLookup$RegistryLookup;Ljava/util/function/Predicate;Lnet/minecraft/world/item/CreativeModeTab$TabVisibility;)V a
	generateSuspiciousStews (Lnet/minecraft/world/item/CreativeModeTab$Output;Lnet/minecraft/world/item/CreativeModeTab$TabVisibility;)V a
	getDefaultTab ()Lnet/minecraft/world/item/CreativeModeTab; b
	searchTab ()Lnet/minecraft/world/item/CreativeModeTab; e
	streamAllTabs ()Ljava/util/stream/Stream; f
	tabs ()Ljava/util/List; c
	tryRebuildTabContents (Lnet/minecraft/world/flag/FeatureFlagSet;ZLnet/minecraft/core/HolderLookup$Provider;)Z a
	validate ()V a
net/minecraft/world/item/CrossbowItem ceh
	ARROW_POWER k
	DEFAULT_RANGE a
	FIREWORK_POWER r
	MAX_CHARGE_DURATION f
	MID_SOUND_PERCENT j
	START_SOUND_PERCENT i
	TAG_CHARGED b
	TAG_CHARGED_PROJECTILES e
	midLoadSoundPlayed h
	startSoundPlayed g
	addChargedProjectile (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/item/ItemStack;)V b
	appendHoverText (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/Level;Ljava/util/List;Lnet/minecraft/world/item/TooltipFlag;)V a
	clearChargedProjectiles (Lnet/minecraft/world/item/ItemStack;)V q
	containsChargedProjectile (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/item/Item;)Z a
	getAllSupportedProjectiles ()Ljava/util/function/Predicate; b
	getArrow (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/item/ItemStack;)Lnet/minecraft/world/entity/projectile/AbstractArrow; a
	getChargeDuration (Lnet/minecraft/world/item/ItemStack;)I k
	getChargedProjectiles (Lnet/minecraft/world/item/ItemStack;)Ljava/util/List; p
	getDefaultProjectileRange ()I d
	getPowerForTime (ILnet/minecraft/world/item/ItemStack;)F a
	getRandomShotPitch (ZLnet/minecraft/util/RandomSource;)F a
	getShootingPower (Lnet/minecraft/world/item/ItemStack;)F o
	getShotPitches (Lnet/minecraft/util/RandomSource;)[F a
	getStartSound (I)Lnet/minecraft/sounds/SoundEvent; a
	getSupportedHeldProjectiles ()Ljava/util/function/Predicate; e
	getUseAnimation (Lnet/minecraft/world/item/ItemStack;)Lnet/minecraft/world/item/UseAnim; c
	getUseDuration (Lnet/minecraft/world/item/ItemStack;)I b
	isCharged (Lnet/minecraft/world/item/ItemStack;)Z d
	loadProjectile (Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/item/ItemStack;ZZ)Z a
	onCrossbowShot (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/item/ItemStack;)V a
	onUseTick (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/item/ItemStack;I)V a
	performShooting (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/InteractionHand;Lnet/minecraft/world/item/ItemStack;FF)V a
	releaseUsing (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/LivingEntity;I)V a
	setCharged (Lnet/minecraft/world/item/ItemStack;Z)V a
	shootProjectile (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/InteractionHand;Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/item/ItemStack;FZFFF)V a
	tryLoadProjectiles (Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/item/ItemStack;)Z a
	use (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResultHolder; a
	useOnRelease (Lnet/minecraft/world/item/ItemStack;)Z l
net/minecraft/world/item/DebugStickItem cei
	canAttackBlock (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/player/Player;)Z a
	cycleState (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/state/properties/Property;Z)Lnet/minecraft/world/level/block/state/BlockState; a
	getNameHelper (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/state/properties/Property;)Ljava/lang/String; a
	getRelative (Ljava/lang/Iterable;Ljava/lang/Object;Z)Ljava/lang/Object; a
	handleInteraction (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;ZLnet/minecraft/world/item/ItemStack;)Z a
	isFoil (Lnet/minecraft/world/item/ItemStack;)Z i
	message (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/network/chat/Component;)V a
	useOn (Lnet/minecraft/world/item/context/UseOnContext;)Lnet/minecraft/world/InteractionResult; a
net/minecraft/world/item/DiggerItem cej
	attackDamageBaseline c
	blocks a
	defaultModifiers d
	speed b
	getAttackDamage ()F d
	getDefaultAttributeModifiers (Lnet/minecraft/world/entity/EquipmentSlot;)Lcom/google/common/collect/Multimap; a
	getDestroySpeed (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/block/state/BlockState;)F a
	hurtEnemy (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/entity/LivingEntity;)Z a
	isCorrectToolForDrops (Lnet/minecraft/world/level/block/state/BlockState;)Z a_
	mineBlock (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/Level;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/LivingEntity;)Z a
net/minecraft/world/item/DiscFragmentItem cek
	appendHoverText (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/Level;Ljava/util/List;Lnet/minecraft/world/item/TooltipFlag;)V a
	getDisplayName ()Lnet/minecraft/network/chat/MutableComponent; d
net/minecraft/world/item/DispensibleContainerItem cel
	checkExtraContent (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/level/Level;Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/core/BlockPos;)V a
	emptyContents (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/BlockHitResult;)Z a
net/minecraft/world/item/DoubleHighBlockItem cem
	placeBlock (Lnet/minecraft/world/item/context/BlockPlaceContext;Lnet/minecraft/world/level/block/state/BlockState;)Z a
net/minecraft/world/item/DyeColor cen
	$VALUES z
	BLACK p
	BLUE l
	BROWN m
	BY_FIREWORK_COLOR s
	BY_ID r
	CODEC q
	CYAN j
	GRAY h
	GREEN n
	LIGHT_BLUE d
	LIGHT_GRAY i
	LIME f
	MAGENTA c
	ORANGE b
	PINK g
	PURPLE k
	RED o
	WHITE a
	YELLOW e
	fireworkColor x
	id t
	mapColor v
	name u
	textColor y
	textureDiffuseColors w
	$values ()[Lnet/minecraft/world/item/DyeColor; h
	byFireworkColor (I)Lnet/minecraft/world/item/DyeColor; b
	byId (I)Lnet/minecraft/world/item/DyeColor; a
	byName (Ljava/lang/String;Lnet/minecraft/world/item/DyeColor;)Lnet/minecraft/world/item/DyeColor; a
	getFireworkColor ()I f
	getId ()I a
	getMapColor ()Lnet/minecraft/world/level/material/MapColor; e
	getName ()Ljava/lang/String; b
	getSerializedName ()Ljava/lang/String; c
	getTextColor ()I g
	getTextureDiffuseColors ()[F d
net/minecraft/world/item/DyeItem ceo
	ITEM_BY_COLOR a
	dyeColor b
	byColor (Lnet/minecraft/world/item/DyeColor;)Lnet/minecraft/world/item/DyeItem; a
	getDyeColor ()Lnet/minecraft/world/item/DyeColor; d
	interactLivingEntity (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResult; a
	tryApplyToSign (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/level/block/entity/SignBlockEntity;ZLnet/minecraft/world/entity/player/Player;)Z a
net/minecraft/world/item/DyeableArmorItem cep
net/minecraft/world/item/DyeableHorseArmorItem ceq
net/minecraft/world/item/DyeableLeatherItem cer
	DEFAULT_LEATHER_COLOR q_
	TAG_COLOR o_
	TAG_DISPLAY p_
	clearColor (Lnet/minecraft/world/item/ItemStack;)V f_
	dyeArmor (Lnet/minecraft/world/item/ItemStack;Ljava/util/List;)Lnet/minecraft/world/item/ItemStack; a
	getColor (Lnet/minecraft/world/item/ItemStack;)I e_
	hasCustomColor (Lnet/minecraft/world/item/ItemStack;)Z a
	setColor (Lnet/minecraft/world/item/ItemStack;I)V a
net/minecraft/world/item/EggItem ces
	use (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResultHolder; a
net/minecraft/world/item/ElytraItem cet
	getEquipSound ()Lnet/minecraft/sounds/SoundEvent; ak_
	getEquipmentSlot ()Lnet/minecraft/world/entity/EquipmentSlot; g
	isFlyEnabled (Lnet/minecraft/world/item/ItemStack;)Z d
	isValidRepairItem (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/item/ItemStack;)Z a
	use (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResultHolder; a
net/minecraft/world/item/EmptyMapItem ceu
	use (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResultHolder; a
net/minecraft/world/item/EnchantedBookItem cev
	TAG_STORED_ENCHANTMENTS a
	addEnchantment (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/item/enchantment/EnchantmentInstance;)V a
	appendHoverText (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/Level;Ljava/util/List;Lnet/minecraft/world/item/TooltipFlag;)V a
	createForEnchantment (Lnet/minecraft/world/item/enchantment/EnchantmentInstance;)Lnet/minecraft/world/item/ItemStack; a
	getEnchantments (Lnet/minecraft/world/item/ItemStack;)Lnet/minecraft/nbt/ListTag; d
	isEnchantable (Lnet/minecraft/world/item/ItemStack;)Z d_
	isFoil (Lnet/minecraft/world/item/ItemStack;)Z i
net/minecraft/world/item/EnchantedGoldenAppleItem cew
	isFoil (Lnet/minecraft/world/item/ItemStack;)Z i
net/minecraft/world/item/EndCrystalItem cex
	isFoil (Lnet/minecraft/world/item/ItemStack;)Z i
	useOn (Lnet/minecraft/world/item/context/UseOnContext;)Lnet/minecraft/world/InteractionResult; a
net/minecraft/world/item/EnderEyeItem cey
	use (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResultHolder; a
	useOn (Lnet/minecraft/world/item/context/UseOnContext;)Lnet/minecraft/world/InteractionResult; a
net/minecraft/world/item/EnderpearlItem cez
	use (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResultHolder; a
net/minecraft/world/item/Equipable cfa
	get (Lnet/minecraft/world/item/ItemStack;)Lnet/minecraft/world/item/Equipable; c_
	getEquipSound ()Lnet/minecraft/sounds/SoundEvent; ak_
	getEquipmentSlot ()Lnet/minecraft/world/entity/EquipmentSlot; g
	swapWithEquipmentSlot (Lnet/minecraft/world/item/Item;Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResultHolder; a
net/minecraft/world/item/ExperienceBottleItem cfb
	isFoil (Lnet/minecraft/world/item/ItemStack;)Z i
	use (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResultHolder; a
net/minecraft/world/item/FireChargeItem cfc
	playSound (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)V a
	useOn (Lnet/minecraft/world/item/context/UseOnContext;)Lnet/minecraft/world/InteractionResult; a
net/minecraft/world/item/FireworkRocketItem cfd
	CRAFTABLE_DURATIONS a
	ROCKET_PLACEMENT_OFFSET k
	TAG_EXPLOSION c
	TAG_EXPLOSIONS d
	TAG_EXPLOSION_COLORS i
	TAG_EXPLOSION_FADECOLORS j
	TAG_EXPLOSION_FLICKER h
	TAG_EXPLOSION_TRAIL g
	TAG_EXPLOSION_TYPE f
	TAG_FIREWORKS b
	TAG_FLIGHT e
	appendHoverText (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/Level;Ljava/util/List;Lnet/minecraft/world/item/TooltipFlag;)V a
	getDefaultInstance ()Lnet/minecraft/world/item/ItemStack; ae_
	setDuration (Lnet/minecraft/world/item/ItemStack;B)V a
	use (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResultHolder; a
	useOn (Lnet/minecraft/world/item/context/UseOnContext;)Lnet/minecraft/world/InteractionResult; a
net/minecraft/world/item/FireworkRocketItem$Shape cfd$a
	$VALUES i
	BURST e
	BY_ID f
	CREEPER d
	LARGE_BALL b
	SMALL_BALL a
	STAR c
	id g
	name h
	$values ()[Lnet/minecraft/world/item/FireworkRocketItem$Shape; c
	byId (I)Lnet/minecraft/world/item/FireworkRocketItem$Shape; a
	getId ()I a
	getName ()Ljava/lang/String; b
net/minecraft/world/item/FireworkStarItem cfe
	appendColors (Lnet/minecraft/network/chat/MutableComponent;[I)Lnet/minecraft/network/chat/Component; a
	appendHoverText (Lnet/minecraft/nbt/CompoundTag;Ljava/util/List;)V a
	appendHoverText (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/Level;Ljava/util/List;Lnet/minecraft/world/item/TooltipFlag;)V a
	getColorName (I)Lnet/minecraft/network/chat/Component; a
net/minecraft/world/item/FishingRodItem cff
	getEnchantmentValue ()I c
	use (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResultHolder; a
net/minecraft/world/item/FlintAndSteelItem cfg
	useOn (Lnet/minecraft/world/item/context/UseOnContext;)Lnet/minecraft/world/InteractionResult; a
net/minecraft/world/item/FoodOnAStickItem cfh
	canInteractWith a
	consumeItemDamage b
	use (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResultHolder; a
net/minecraft/world/item/GameMasterBlockItem cfi
	getPlacementState (Lnet/minecraft/world/item/context/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; c
net/minecraft/world/item/GlowInkSacItem cfj
	tryApplyToSign (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/level/block/entity/SignBlockEntity;ZLnet/minecraft/world/entity/player/Player;)Z a
net/minecraft/world/item/HangingEntityItem cfk
	TOOLTIP_RANDOM_VARIANT a
	type b
	appendHoverText (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/Level;Ljava/util/List;Lnet/minecraft/world/item/TooltipFlag;)V a
	mayPlace (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/core/Direction;Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/core/BlockPos;)Z a
	useOn (Lnet/minecraft/world/item/context/UseOnContext;)Lnet/minecraft/world/InteractionResult; a
net/minecraft/world/item/HangingSignItem cfl
	canPlace (Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/BlockPos;)Z a
net/minecraft/world/item/HoeItem cfm
	TILLABLES a
	changeIntoState (Lnet/minecraft/world/level/block/state/BlockState;)Ljava/util/function/Consumer; b
	changeIntoStateAndDropItem (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/ItemLike;)Ljava/util/function/Consumer; a
	onlyIfAirAbove (Lnet/minecraft/world/item/context/UseOnContext;)Z b
	useOn (Lnet/minecraft/world/item/context/UseOnContext;)Lnet/minecraft/world/InteractionResult; a
net/minecraft/world/item/HoneyBottleItem cfn
	DRINK_DURATION a
	finishUsingItem (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/LivingEntity;)Lnet/minecraft/world/item/ItemStack; a
	getDrinkingSound ()Lnet/minecraft/sounds/SoundEvent; af_
	getEatingSound ()Lnet/minecraft/sounds/SoundEvent; ag_
	getUseAnimation (Lnet/minecraft/world/item/ItemStack;)Lnet/minecraft/world/item/UseAnim; c
	getUseDuration (Lnet/minecraft/world/item/ItemStack;)I b
	use (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResultHolder; a
net/minecraft/world/item/HoneycombItem cfo
	WAXABLES a
	WAX_OFF_BY_BLOCK b
	canApplyToSign (Lnet/minecraft/world/level/block/entity/SignText;Lnet/minecraft/world/entity/player/Player;)Z a
	getWaxed (Lnet/minecraft/world/level/block/state/BlockState;)Ljava/util/Optional; b
	tryApplyToSign (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/level/block/entity/SignBlockEntity;ZLnet/minecraft/world/entity/player/Player;)Z a
	useOn (Lnet/minecraft/world/item/context/UseOnContext;)Lnet/minecraft/world/InteractionResult; a
net/minecraft/world/item/HorseArmorItem cfp
	TEX_FOLDER a
	protection b
	texture c
	getProtection ()I i
	getTexture ()Lnet/minecraft/resources/ResourceLocation; h
net/minecraft/world/item/InkSacItem cfq
	tryApplyToSign (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/level/block/entity/SignBlockEntity;ZLnet/minecraft/world/entity/player/Player;)Z a
net/minecraft/world/item/Instrument cfr
	CODEC a
	range d
	soundEvent b
	useDuration c
	range ()F c
	soundEvent ()Lnet/minecraft/core/Holder; a
	useDuration ()I b
net/minecraft/world/item/InstrumentItem cfs
	TAG_INSTRUMENT a
	instruments b
	appendHoverText (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/Level;Ljava/util/List;Lnet/minecraft/world/item/TooltipFlag;)V a
	create (Lnet/minecraft/world/item/Item;Lnet/minecraft/core/Holder;)Lnet/minecraft/world/item/ItemStack; a
	getInstrument (Lnet/minecraft/world/item/ItemStack;)Ljava/util/Optional; d
	getUseAnimation (Lnet/minecraft/world/item/ItemStack;)Lnet/minecraft/world/item/UseAnim; c
	getUseDuration (Lnet/minecraft/world/item/ItemStack;)I b
	play (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/item/Instrument;)V a
	setRandom (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/tags/TagKey;Lnet/minecraft/util/RandomSource;)V a
	setSoundVariantId (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/core/Holder;)V a
	use (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResultHolder; a
net/minecraft/world/item/Instruments cft
	ADMIRE_GOAT_HORN g
	CALL_GOAT_HORN h
	DREAM_GOAT_HORN j
	FEEL_GOAT_HORN f
	GOAT_HORN_DURATION b
	GOAT_HORN_RANGE_BLOCKS a
	PONDER_GOAT_HORN c
	SEEK_GOAT_HORN e
	SING_GOAT_HORN d
	YEARN_GOAT_HORN i
	bootstrap (Lnet/minecraft/core/Registry;)Lnet/minecraft/world/item/Instrument; a
	create (Ljava/lang/String;)Lnet/minecraft/resources/ResourceKey; a
net/minecraft/world/item/Item cfu
	BASE_ATTACK_DAMAGE_UUID m
	BASE_ATTACK_SPEED_UUID n
	BY_BLOCK l
	EAT_DURATION p
	LOGGER a
	MAX_BAR_WIDTH q
	MAX_STACK_SIZE o
	builtInRegistryHolder b
	craftingRemainingItem g
	descriptionId h
	foodProperties i
	isFireResistant f
	maxDamage e
	maxStackSize d
	rarity c
	requiredFeatures j
	appendHoverText (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/Level;Ljava/util/List;Lnet/minecraft/world/item/TooltipFlag;)V a
	asItem ()Lnet/minecraft/world/item/Item; k
	builtInRegistryHolder ()Lnet/minecraft/core/Holder$Reference; j
	byBlock (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/world/item/Item; a
	byId (I)Lnet/minecraft/world/item/Item; b
	canAttackBlock (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/player/Player;)Z a
	canBeDepleted ()Z o
	canBeHurtBy (Lnet/minecraft/world/damagesource/DamageSource;)Z a
	canFitInsideContainerItems ()Z ah_
	finishUsingItem (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/LivingEntity;)Lnet/minecraft/world/item/ItemStack; a
	getBarColor (Lnet/minecraft/world/item/ItemStack;)I g
	getBarWidth (Lnet/minecraft/world/item/ItemStack;)I f
	getCraftingRemainingItem ()Lnet/minecraft/world/item/Item; s
	getDefaultAttributeModifiers (Lnet/minecraft/world/entity/EquipmentSlot;)Lcom/google/common/collect/Multimap; a
	getDefaultInstance ()Lnet/minecraft/world/item/ItemStack; ae_
	getDescription ()Lnet/minecraft/network/chat/Component; p
	getDescriptionId ()Ljava/lang/String; a
	getDescriptionId (Lnet/minecraft/world/item/ItemStack;)Ljava/lang/String; j
	getDestroySpeed (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/block/state/BlockState;)F a
	getDrinkingSound ()Lnet/minecraft/sounds/SoundEvent; af_
	getEatingSound ()Lnet/minecraft/sounds/SoundEvent; ag_
	getEnchantmentValue ()I c
	getFoodProperties ()Lnet/minecraft/world/food/FoodProperties; v
	getId (Lnet/minecraft/world/item/Item;)I a
	getMaxDamage ()I n
	getMaxStackSize ()I l
	getName (Lnet/minecraft/world/item/ItemStack;)Lnet/minecraft/network/chat/Component; m
	getOrCreateDescriptionId ()Ljava/lang/String; q
	getPlayerPOVHitResult (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/level/ClipContext$Fluid;)Lnet/minecraft/world/phys/BlockHitResult; a
	getRarity (Lnet/minecraft/world/item/ItemStack;)Lnet/minecraft/world/item/Rarity; n
	getTooltipImage (Lnet/minecraft/world/item/ItemStack;)Ljava/util/Optional; h
	getUseAnimation (Lnet/minecraft/world/item/ItemStack;)Lnet/minecraft/world/item/UseAnim; c
	getUseDuration (Lnet/minecraft/world/item/ItemStack;)I b
	hasCraftingRemainingItem ()Z t
	hurtEnemy (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/entity/LivingEntity;)Z a
	interactLivingEntity (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResult; a
	inventoryTick (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/Entity;IZ)V a
	isBarVisible (Lnet/minecraft/world/item/ItemStack;)Z e
	isComplex ()Z ad_
	isCorrectToolForDrops (Lnet/minecraft/world/level/block/state/BlockState;)Z a_
	isEdible ()Z u
	isEnchantable (Lnet/minecraft/world/item/ItemStack;)Z d_
	isFireResistant ()Z w
	isFoil (Lnet/minecraft/world/item/ItemStack;)Z i
	isValidRepairItem (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/item/ItemStack;)Z a
	mineBlock (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/Level;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/LivingEntity;)Z a
	onCraftedBy (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/player/Player;)V b
	onDestroyed (Lnet/minecraft/world/entity/item/ItemEntity;)V a
	onUseTick (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/item/ItemStack;I)V a
	overrideOtherStackedOnMe (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/inventory/Slot;Lnet/minecraft/world/inventory/ClickAction;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/entity/SlotAccess;)Z a
	overrideStackedOnOther (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/inventory/Slot;Lnet/minecraft/world/inventory/ClickAction;Lnet/minecraft/world/entity/player/Player;)Z a
	releaseUsing (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/LivingEntity;I)V a
	requiredFeatures ()Lnet/minecraft/world/flag/FeatureFlagSet; m
	shouldOverrideMultiplayerNbt ()Z r
	use (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResultHolder; a
	useOn (Lnet/minecraft/world/item/context/UseOnContext;)Lnet/minecraft/world/InteractionResult; a
	useOnRelease (Lnet/minecraft/world/item/ItemStack;)Z l
	verifyTagAfterLoad (Lnet/minecraft/nbt/CompoundTag;)V b
net/minecraft/world/item/Item$Properties cfu$a
	craftingRemainingItem c
	foodProperties e
	isFireResistant f
	maxDamage b
	maxStackSize a
	rarity d
	requiredFeatures g
	craftRemainder (Lnet/minecraft/world/item/Item;)Lnet/minecraft/world/item/Item$Properties; a
	defaultDurability (I)Lnet/minecraft/world/item/Item$Properties; b
	durability (I)Lnet/minecraft/world/item/Item$Properties; c
	fireResistant ()Lnet/minecraft/world/item/Item$Properties; a
	food (Lnet/minecraft/world/food/FoodProperties;)Lnet/minecraft/world/item/Item$Properties; a
	rarity (Lnet/minecraft/world/item/Rarity;)Lnet/minecraft/world/item/Item$Properties; a
	requiredFeatures ([Lnet/minecraft/world/flag/FeatureFlag;)Lnet/minecraft/world/item/Item$Properties; a
	stacksTo (I)Lnet/minecraft/world/item/Item$Properties; a
net/minecraft/world/item/ItemCooldowns cfv
	cooldowns a
	tickCount b
	addCooldown (Lnet/minecraft/world/item/Item;I)V a
	getCooldownPercent (Lnet/minecraft/world/item/Item;F)F a
	isOnCooldown (Lnet/minecraft/world/item/Item;)Z a
	onCooldownEnded (Lnet/minecraft/world/item/Item;)V c
	onCooldownStarted (Lnet/minecraft/world/item/Item;I)V b
	removeCooldown (Lnet/minecraft/world/item/Item;)V b
	tick ()V a
net/minecraft/world/item/ItemCooldowns$CooldownInstance cfv$a
	endTime b
	startTime a
net/minecraft/world/item/ItemDisplayContext cfw
	$VALUES n
	BY_ID k
	CODEC j
	FIRST_PERSON_LEFT_HAND d
	FIRST_PERSON_RIGHT_HAND e
	FIXED i
	GROUND h
	GUI g
	HEAD f
	NONE a
	THIRD_PERSON_LEFT_HAND b
	THIRD_PERSON_RIGHT_HAND c
	id l
	name m
	$values ()[Lnet/minecraft/world/item/ItemDisplayContext; d
	firstPerson ()Z b
	getId ()B a
	getSerializedName ()Ljava/lang/String; c
net/minecraft/world/item/ItemFrameItem cfx
	mayPlace (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/core/Direction;Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/core/BlockPos;)Z a
net/minecraft/world/item/ItemNameBlockItem cfy
	getDescriptionId ()Ljava/lang/String; a
net/minecraft/world/item/ItemStack cfz
	ATTRIBUTE_MODIFIER_FORMAT c
	CODEC a
	DISABLED_ITEM_TOOLTIP p
	DONT_HIDE_TOOLTIP q
	EMPTY b
	LOGGER j
	LORE_STYLE r
	TAG_CAN_DESTROY_BLOCK_LIST m
	TAG_CAN_PLACE_ON_BLOCK_LIST n
	TAG_COLOR i
	TAG_DAMAGE h
	TAG_DISPLAY e
	TAG_DISPLAY_NAME f
	TAG_ENCH d
	TAG_HIDE_FLAGS o
	TAG_LORE g
	TAG_REPAIR_COST l
	TAG_UNBREAKABLE k
	adventureBreakCheck x
	adventurePlaceCheck y
	count s
	entityRepresentation w
	item u
	popTime t
	tag v
	addAttributeModifier (Lnet/minecraft/world/entity/ai/attributes/Attribute;Lnet/minecraft/world/entity/ai/attributes/AttributeModifier;Lnet/minecraft/world/entity/EquipmentSlot;)V a
	addTagElement (Ljava/lang/String;Lnet/minecraft/nbt/Tag;)V a
	appendEnchantmentNames (Ljava/util/List;Lnet/minecraft/nbt/ListTag;)V a
	copy ()Lnet/minecraft/world/item/ItemStack; p
	copyAndClear ()Lnet/minecraft/world/item/ItemStack; c
	copyWithCount (I)Lnet/minecraft/world/item/ItemStack; c
	enchant (Lnet/minecraft/world/item/enchantment/Enchantment;I)V a
	expandBlockState (Ljava/lang/String;)Ljava/util/Collection; d
	finishUsingItem (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/LivingEntity;)Lnet/minecraft/world/item/ItemStack; a
	getAttributeModifiers (Lnet/minecraft/world/entity/EquipmentSlot;)Lcom/google/common/collect/Multimap; a
	getBarColor ()I o
	getBarWidth ()I n
	getBaseRepairCost ()I I
	getCount ()I L
	getDamageValue ()I k
	getDescriptionId ()Ljava/lang/String; q
	getDestroySpeed (Lnet/minecraft/world/level/block/state/BlockState;)F a
	getDisplayName ()Lnet/minecraft/network/chat/Component; J
	getDrinkingSound ()Lnet/minecraft/sounds/SoundEvent; N
	getEatingSound ()Lnet/minecraft/sounds/SoundEvent; O
	getEnchantmentTags ()Lnet/minecraft/nbt/ListTag; x
	getEntityRepresentation ()Lnet/minecraft/world/entity/Entity; H
	getFrame ()Lnet/minecraft/world/entity/decoration/ItemFrame; G
	getHideFlags ()I P
	getHoverName ()Lnet/minecraft/network/chat/Component; y
	getItem ()Lnet/minecraft/world/item/Item; d
	getItemHolder ()Lnet/minecraft/core/Holder; e
	getMaxDamage ()I l
	getMaxStackSize ()I g
	getOrCreateTag ()Lnet/minecraft/nbt/CompoundTag; w
	getOrCreateTagElement (Ljava/lang/String;)Lnet/minecraft/nbt/CompoundTag; a
	getPopTime ()I K
	getRarity ()Lnet/minecraft/world/item/Rarity; C
	getTag ()Lnet/minecraft/nbt/CompoundTag; v
	getTagElement (Ljava/lang/String;)Lnet/minecraft/nbt/CompoundTag; b
	getTags ()Ljava/util/stream/Stream; f
	getTooltipImage ()Ljava/util/Optional; a
	getTooltipLines (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/item/TooltipFlag;)Ljava/util/List; a
	getUseAnimation ()Lnet/minecraft/world/item/UseAnim; s
	getUseDuration ()I r
	grow (I)V g
	hasAdventureModeBreakTagForBlock (Lnet/minecraft/core/Registry;Lnet/minecraft/world/level/block/state/pattern/BlockInWorld;)Z b
	hasAdventureModePlaceTagForBlock (Lnet/minecraft/core/Registry;Lnet/minecraft/world/level/block/state/pattern/BlockInWorld;)Z a
	hasCustomHoverName ()Z A
	hasFoil ()Z B
	hasTag ()Z u
	hideTooltipPart (Lnet/minecraft/world/item/ItemStack$TooltipPart;)V a
	hurt (ILnet/minecraft/util/RandomSource;Lnet/minecraft/server/level/ServerPlayer;)Z a
	hurtAndBreak (ILnet/minecraft/world/entity/LivingEntity;Ljava/util/function/Consumer;)V a
	hurtEnemy (Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/entity/player/Player;)V a
	interactLivingEntity (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResult; a
	inventoryTick (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/Entity;IZ)V a
	is (Ljava/util/function/Predicate;)Z a
	is (Lnet/minecraft/core/Holder;)Z a
	is (Lnet/minecraft/tags/TagKey;)Z a
	is (Lnet/minecraft/world/item/Item;)Z a
	isBarVisible ()Z m
	isCorrectToolForDrops (Lnet/minecraft/world/level/block/state/BlockState;)Z b
	isDamageableItem ()Z i
	isDamaged ()Z j
	isEdible ()Z M
	isEmpty ()Z b
	isEnchantable ()Z D
	isEnchanted ()Z E
	isFramed ()Z F
	isItemEnabled (Lnet/minecraft/world/flag/FeatureFlagSet;)Z a
	isSameItem (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/item/ItemStack;)Z b
	isSameItemSameTags (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/item/ItemStack;)Z c
	isStackable ()Z h
	matches (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/item/ItemStack;)Z a
	mineBlock (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/player/Player;)V a
	of (Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/world/item/ItemStack; a
	onCraftedBy (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/player/Player;I)V a
	onDestroyed (Lnet/minecraft/world/entity/item/ItemEntity;)V a
	onUseTick (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/LivingEntity;I)V b
	overrideOtherStackedOnMe (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/inventory/Slot;Lnet/minecraft/world/inventory/ClickAction;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/entity/SlotAccess;)Z a
	overrideStackedOnOther (Lnet/minecraft/world/inventory/Slot;Lnet/minecraft/world/inventory/ClickAction;Lnet/minecraft/world/entity/player/Player;)Z a
	releaseUsing (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/LivingEntity;I)V a
	removeTagKey (Ljava/lang/String;)V c
	resetHoverName ()V z
	save (Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/nbt/CompoundTag; b
	setCount (I)V f
	setDamageValue (I)V b
	setEntityRepresentation (Lnet/minecraft/world/entity/Entity;)V a
	setHoverName (Lnet/minecraft/network/chat/Component;)Lnet/minecraft/world/item/ItemStack; a
	setPopTime (I)V e
	setRepairCost (I)V d
	setTag (Lnet/minecraft/nbt/CompoundTag;)V c
	shouldShowInTooltip (ILnet/minecraft/world/item/ItemStack$TooltipPart;)Z a
	shrink (I)V h
	split (I)Lnet/minecraft/world/item/ItemStack; a
	use (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResultHolder; a
	useOn (Lnet/minecraft/world/item/context/UseOnContext;)Lnet/minecraft/world/InteractionResult; a
	useOnRelease ()Z t
net/minecraft/world/item/ItemStack$TooltipPart cfz$a
	$VALUES j
	ADDITIONAL f
	CAN_DESTROY d
	CAN_PLACE e
	DYE g
	ENCHANTMENTS a
	MODIFIERS b
	UNBREAKABLE c
	UPGRADES h
	mask i
	$values ()[Lnet/minecraft/world/item/ItemStack$TooltipPart; b
	getMask ()I a
net/minecraft/world/item/ItemStackLinkedSet cga
	TYPE_AND_TAG a
	createTypeAndTagSet ()Ljava/util/Set; a
	hashStackAndTag (Lnet/minecraft/world/item/ItemStack;)I a
net/minecraft/world/item/ItemUtils cgb
	createFilledResult (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/item/ItemStack;)Lnet/minecraft/world/item/ItemStack; a
	createFilledResult (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/item/ItemStack;Z)Lnet/minecraft/world/item/ItemStack; a
	onContainerDestroyed (Lnet/minecraft/world/entity/item/ItemEntity;Ljava/util/stream/Stream;)V a
	startUsingInstantly (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResultHolder; a
net/minecraft/world/item/Items cgc
	ACACIA_BOAT nq
	ACACIA_BUTTON lQ
	ACACIA_CHEST_BOAT nr
	ACACIA_DOOR mr
	ACACIA_FENCE eH
	ACACIA_FENCE_GATE mO
	ACACIA_HANGING_SIGN pD
	ACACIA_LEAVES cc
	ACACIA_LOG bk
	ACACIA_PLANKS B
	ACACIA_PRESSURE_PLATE mf
	ACACIA_SAPLING N
	ACACIA_SIGN ps
	ACACIA_SLAB dA
	ACACIA_STAIRS gb
	ACACIA_TRAPDOOR mD
	ACACIA_WOOD bS
	ACTIVATOR_RAIL mY
	AIR a
	ALLAY_SPAWN_EGG rF
	ALLIUM cR
	AMETHYST_BLOCK au
	AMETHYST_CLUSTER wo
	AMETHYST_SHARD nO
	ANCIENT_DEBRIS ap
	ANDESITE g
	ANDESITE_SLAB lc
	ANDESITE_STAIRS kL
	ANDESITE_WALL gv
	ANGLER_POTTERY_SHERD wN
	ANVIL gH
	APPLE nF
	ARCHER_POTTERY_SHERD wO
	ARMOR_STAND tL
	ARMS_UP_POTTERY_SHERD wP
	ARROW nH
	AXOLOTL_BUCKET pV
	AXOLOTL_SPAWN_EGG rG
	AZALEA ct
	AZALEA_LEAVES cg
	AZURE_BLUET cS
	BAKED_POTATO tn
	BAMBOO dv
	BAMBOO_BLOCK bs
	BAMBOO_BUTTON lU
	BAMBOO_CHEST_RAFT nz
	BAMBOO_DOOR mv
	BAMBOO_FENCE eL
	BAMBOO_FENCE_GATE mS
	BAMBOO_HANGING_SIGN pH
	BAMBOO_MOSAIC I
	BAMBOO_MOSAIC_SLAB dF
	BAMBOO_MOSAIC_STAIRS gg
	BAMBOO_PLANKS F
	BAMBOO_PRESSURE_PLATE mj
	BAMBOO_RAFT ny
	BAMBOO_SIGN pw
	BAMBOO_SLAB dE
	BAMBOO_STAIRS gf
	BAMBOO_TRAPDOOR mH
	BARREL vk
	BARRIER hf
	BASALT eU
	BAT_SPAWN_EGG rH
	BEACON gk
	BEDROCK R
	BEEF rl
	BEEHIVE vC
	BEETROOT uq
	BEETROOT_SEEDS ur
	BEETROOT_SOUP us
	BEE_NEST vB
	BEE_SPAWN_EGG rI
	BELL vs
	BIG_DRIPLEAF dt
	BIRCH_BOAT nm
	BIRCH_BUTTON lO
	BIRCH_CHEST_BOAT nn
	BIRCH_DOOR mp
	BIRCH_FENCE eF
	BIRCH_FENCE_GATE mM
	BIRCH_HANGING_SIGN pB
	BIRCH_LEAVES ca
	BIRCH_LOG bi
	BIRCH_PLANKS z
	BIRCH_PRESSURE_PLATE md
	BIRCH_SAPLING L
	BIRCH_SIGN pq
	BIRCH_SLAB dy
	BIRCH_STAIRS fZ
	BIRCH_TRAPDOOR mB
	BIRCH_WOOD bQ
	BLACKSTONE vH
	BLACKSTONE_SLAB vI
	BLACKSTONE_STAIRS vJ
	BLACKSTONE_WALL gA
	BLACK_BANNER uk
	BLACK_BED rd
	BLACK_CANDLE wk
	BLACK_CARPET hx
	BLACK_CONCRETE jC
	BLACK_CONCRETE_POWDER jS
	BLACK_DYE qJ
	BLACK_GLAZED_TERRACOTTA jm
	BLACK_SHULKER_BOX iW
	BLACK_STAINED_GLASS hW
	BLACK_STAINED_GLASS_PANE im
	BLACK_TERRACOTTA he
	BLACK_WOOL cN
	BLADE_POTTERY_SHERD wQ
	BLAST_FURNACE vm
	BLAZE_POWDER rz
	BLAZE_ROD rr
	BLAZE_SPAWN_EGG rJ
	BLUE_BANNER ug
	BLUE_BED qZ
	BLUE_CANDLE wg
	BLUE_CARPET ht
	BLUE_CONCRETE jy
	BLUE_CONCRETE_POWDER jO
	BLUE_DYE qF
	BLUE_GLAZED_TERRACOTTA ji
	BLUE_ICE kz
	BLUE_ORCHID cQ
	BLUE_SHULKER_BOX iS
	BLUE_STAINED_GLASS hS
	BLUE_STAINED_GLASS_PANE ii
	BLUE_TERRACOTTA ha
	BLUE_WOOL cJ
	BONE qL
	BONE_BLOCK iE
	BONE_MEAL qK
	BOOK qb
	BOOKSHELF ee
	BOW nG
	BOWL oC
	BRAIN_CORAL kg
	BRAIN_CORAL_BLOCK kb
	BRAIN_CORAL_FAN kq
	BREAD oJ
	BREWER_POTTERY_SHERD wR
	BREWING_STAND rB
	BRICK pX
	BRICKS ed
	BRICK_SLAB dO
	BRICK_STAIRS fB
	BRICK_WALL gn
	BROWN_BANNER uh
	BROWN_BED ra
	BROWN_CANDLE wh
	BROWN_CARPET hu
	BROWN_CONCRETE jz
	BROWN_CONCRETE_POWDER jP
	BROWN_DYE qG
	BROWN_GLAZED_TERRACOTTA jj
	BROWN_MUSHROOM de
	BROWN_MUSHROOM_BLOCK fs
	BROWN_SHULKER_BOX iT
	BROWN_STAINED_GLASS hT
	BROWN_STAINED_GLASS_PANE ij
	BROWN_TERRACOTTA hb
	BROWN_WOOL cK
	BRUSH wv
	BUBBLE_CORAL kh
	BUBBLE_CORAL_BLOCK kc
	BUBBLE_CORAL_FAN kr
	BUCKET pK
	BUDDING_AMETHYST av
	BUNDLE qg
	BURN_POTTERY_SHERD wS
	CACTUS eA
	CAKE qN
	CALCITE l
	CALIBRATED_SCULK_SENSOR lE
	CAMEL_SPAWN_EGG rL
	CAMPFIRE vx
	CANDLE vU
	CARROT tl
	CARROT_ON_A_STICK nf
	CARTOGRAPHY_TABLE vn
	CARVED_PUMPKIN eP
	CAT_SPAWN_EGG rK
	CAULDRON rC
	CAVE_SPIDER_SPAWN_EGG rM
	CHAIN fw
	CHAINMAIL_BOOTS oR
	CHAINMAIL_CHESTPLATE oP
	CHAINMAIL_HELMET oO
	CHAINMAIL_LEGGINGS oQ
	CHAIN_COMMAND_BLOCK iz
	CHARCOAL nJ
	CHERRY_BOAT ns
	CHERRY_BUTTON lR
	CHERRY_CHEST_BOAT nt
	CHERRY_DOOR ms
	CHERRY_FENCE eI
	CHERRY_FENCE_GATE mP
	CHERRY_HANGING_SIGN pE
	CHERRY_LEAVES cd
	CHERRY_LOG bl
	CHERRY_PLANKS C
	CHERRY_PRESSURE_PLATE mg
	CHERRY_SAPLING O
	CHERRY_SIGN pt
	CHERRY_SLAB dB
	CHERRY_STAIRS gc
	CHERRY_TRAPDOOR mE
	CHERRY_WOOD bT
	CHEST er
	CHEST_MINECART nb
	CHICKEN rn
	CHICKEN_SPAWN_EGG rN
	CHIPPED_ANVIL gI
	CHISELED_BOOKSHELF ef
	CHISELED_DEEPSLATE fq
	CHISELED_NETHER_BRICKS fI
	CHISELED_POLISHED_BLACKSTONE vO
	CHISELED_QUARTZ_BLOCK gK
	CHISELED_RED_SANDSTONE iv
	CHISELED_SANDSTONE co
	CHISELED_STONE_BRICKS fj
	CHORUS_FLOWER em
	CHORUS_FRUIT um
	CHORUS_PLANT el
	CLAY eB
	CLAY_BALL pY
	CLOCK qi
	COAL nI
	COAL_BLOCK aq
	COAL_ORE X
	COARSE_DIRT q
	COAST_ARMOR_TRIM_SMITHING_TEMPLATE wz
	COBBLED_DEEPSLATE j
	COBBLED_DEEPSLATE_SLAB lg
	COBBLED_DEEPSLATE_STAIRS kP
	COBBLED_DEEPSLATE_WALL gD
	COBBLESTONE w
	COBBLESTONE_SLAB dN
	COBBLESTONE_STAIRS ew
	COBBLESTONE_WALL gl
	COBWEB cq
	COCOA_BEANS qt
	COD ql
	COD_BUCKET pT
	COD_SPAWN_EGG rO
	COMMAND_BLOCK gj
	COMMAND_BLOCK_MINECART tS
	COMPARATOR lp
	COMPASS qe
	COMPOSTER vj
	CONDUIT kA
	COOKED_BEEF rm
	COOKED_CHICKEN ro
	COOKED_COD qp
	COOKED_MUTTON tU
	COOKED_PORKCHOP pk
	COOKED_RABBIT tH
	COOKED_SALMON qq
	COOKIE re
	COPPER_BLOCK ax
	COPPER_INGOT nS
	COPPER_ORE ab
	CORNFLOWER cY
	COW_SPAWN_EGG rP
	CRACKED_DEEPSLATE_BRICKS fn
	CRACKED_DEEPSLATE_TILES fp
	CRACKED_NETHER_BRICKS fH
	CRACKED_POLISHED_BLACKSTONE_BRICKS vS
	CRACKED_STONE_BRICKS fi
	CRAFTING_TABLE es
	CREEPER_BANNER_PATTERN vd
	CREEPER_HEAD tv
	CREEPER_SPAWN_EGG rQ
	CRIMSON_BUTTON lV
	CRIMSON_DOOR mw
	CRIMSON_FENCE eM
	CRIMSON_FENCE_GATE mT
	CRIMSON_FUNGUS dg
	CRIMSON_HANGING_SIGN pI
	CRIMSON_HYPHAE bW
	CRIMSON_NYLIUM u
	CRIMSON_PLANKS G
	CRIMSON_PRESSURE_PLATE mk
	CRIMSON_ROOTS di
	CRIMSON_SIGN px
	CRIMSON_SLAB dG
	CRIMSON_STAIRS gh
	CRIMSON_STEM bq
	CRIMSON_TRAPDOOR mI
	CROSSBOW uZ
	CRYING_OBSIDIAN vG
	CUT_COPPER aE
	CUT_COPPER_SLAB aM
	CUT_COPPER_STAIRS aI
	CUT_RED_SANDSTONE iw
	CUT_RED_SANDSTONE_SLAB dU
	CUT_SANDSTONE cp
	CUT_STANDSTONE_SLAB dL
	CYAN_BANNER ue
	CYAN_BED qX
	CYAN_CANDLE we
	CYAN_CARPET hr
	CYAN_CONCRETE jw
	CYAN_CONCRETE_POWDER jM
	CYAN_DYE qD
	CYAN_GLAZED_TERRACOTTA jg
	CYAN_SHULKER_BOX iQ
	CYAN_STAINED_GLASS hQ
	CYAN_STAINED_GLASS_PANE ig
	CYAN_TERRACOTTA gY
	CYAN_WOOL cH
	DAMAGED_ANVIL gJ
	DANDELION cO
	DANGER_POTTERY_SHERD wT
	DARK_OAK_BOAT nu
	DARK_OAK_BUTTON lS
	DARK_OAK_CHEST_BOAT nv
	DARK_OAK_DOOR mt
	DARK_OAK_FENCE eJ
	DARK_OAK_FENCE_GATE mQ
	DARK_OAK_HANGING_SIGN pF
	DARK_OAK_LEAVES ce
	DARK_OAK_LOG bm
	DARK_OAK_PLANKS D
	DARK_OAK_PRESSURE_PLATE mh
	DARK_OAK_SAPLING P
	DARK_OAK_SIGN pu
	DARK_OAK_SLAB dC
	DARK_OAK_STAIRS gd
	DARK_OAK_TRAPDOOR mF
	DARK_OAK_WOOD bU
	DARK_PRISMARINE ip
	DARK_PRISMARINE_SLAB dY
	DARK_PRISMARINE_STAIRS is
	DAYLIGHT_DETECTOR lC
	DEAD_BRAIN_CORAL kk
	DEAD_BRAIN_CORAL_BLOCK jW
	DEAD_BRAIN_CORAL_FAN kv
	DEAD_BUBBLE_CORAL kl
	DEAD_BUBBLE_CORAL_BLOCK jX
	DEAD_BUBBLE_CORAL_FAN kw
	DEAD_BUSH cv
	DEAD_FIRE_CORAL km
	DEAD_FIRE_CORAL_BLOCK jY
	DEAD_FIRE_CORAL_FAN kx
	DEAD_HORN_CORAL kn
	DEAD_HORN_CORAL_BLOCK jZ
	DEAD_HORN_CORAL_FAN ky
	DEAD_TUBE_CORAL ko
	DEAD_TUBE_CORAL_BLOCK jV
	DEAD_TUBE_CORAL_FAN ku
	DEBUG_STICK uD
	DECORATED_POT eg
	DEEPSLATE i
	DEEPSLATE_BRICKS fm
	DEEPSLATE_BRICK_SLAB li
	DEEPSLATE_BRICK_STAIRS kR
	DEEPSLATE_BRICK_WALL gF
	DEEPSLATE_COAL_ORE Y
	DEEPSLATE_COPPER_ORE ac
	DEEPSLATE_DIAMOND_ORE am
	DEEPSLATE_EMERALD_ORE ai
	DEEPSLATE_GOLD_ORE ae
	DEEPSLATE_IRON_ORE aa
	DEEPSLATE_LAPIS_ORE ak
	DEEPSLATE_REDSTONE_ORE ag
	DEEPSLATE_TILES fo
	DEEPSLATE_TILE_SLAB lj
	DEEPSLATE_TILE_STAIRS kS
	DEEPSLATE_TILE_WALL gG
	DETECTOR_RAIL mW
	DIAMOND nK
	DIAMOND_AXE ou
	DIAMOND_BLOCK az
	DIAMOND_BOOTS oZ
	DIAMOND_CHESTPLATE oX
	DIAMOND_HELMET oW
	DIAMOND_HOE ov
	DIAMOND_HORSE_ARMOR tO
	DIAMOND_LEGGINGS oY
	DIAMOND_ORE al
	DIAMOND_PICKAXE ot
	DIAMOND_SHOVEL os
	DIAMOND_SWORD or
	DIORITE e
	DIORITE_SLAB lf
	DIORITE_STAIRS kO
	DIORITE_WALL gz
	DIRT p
	DIRT_PATH hA
	DISC_FRAGMENT_5 uU
	DISPENSER lw
	DOLPHIN_SPAWN_EGG rR
	DONKEY_SPAWN_EGG rS
	DRAGON_BREATH ut
	DRAGON_EGG fT
	DRAGON_HEAD tw
	DRIED_KELP ri
	DRIED_KELP_BLOCK pZ
	DRIPSTONE_BLOCK n
	DROPPER lx
	DROWNED_SPAWN_EGG rT
	DUNE_ARMOR_TRIM_SMITHING_TEMPLATE wy
	ECHO_SHARD wu
	EGG qd
	ELDER_GUARDIAN_SPAWN_EGG rU
	ELYTRA nh
	EMERALD nL
	EMERALD_BLOCK fW
	EMERALD_ORE ah
	ENCHANTED_BOOK tC
	ENCHANTED_GOLDEN_APPLE pn
	ENCHANTING_TABLE fP
	ENDERMAN_SPAWN_EGG rW
	ENDERMITE_SPAWN_EGG rX
	ENDER_CHEST fV
	ENDER_DRAGON_SPAWN_EGG rV
	ENDER_EYE rD
	ENDER_PEARL rq
	END_CRYSTAL ul
	END_PORTAL_FRAME fQ
	END_ROD ek
	END_STONE fR
	END_STONE_BRICKS fS
	END_STONE_BRICK_SLAB kY
	END_STONE_BRICK_STAIRS kG
	END_STONE_BRICK_WALL gy
	EVOKER_SPAWN_EGG rY
	EXPERIENCE_BOTTLE te
	EXPLORER_POTTERY_SHERD wU
	EXPOSED_COPPER aB
	EXPOSED_CUT_COPPER aF
	EXPOSED_CUT_COPPER_SLAB aN
	EXPOSED_CUT_COPPER_STAIRS aJ
	EYE_ARMOR_TRIM_SMITHING_TEMPLATE wC
	FARMLAND et
	FEATHER oF
	FERMENTED_SPIDER_EYE ry
	FERN cs
	FILLED_MAP rf
	FIREWORK_ROCKET tA
	FIREWORK_STAR tB
	FIRE_CHARGE tf
	FIRE_CORAL ki
	FIRE_CORAL_BLOCK kd
	FIRE_CORAL_FAN ks
	FISHING_ROD qh
	FLETCHING_TABLE vo
	FLINT pi
	FLINT_AND_STEEL nE
	FLOWERING_AZALEA cu
	FLOWERING_AZALEA_LEAVES ch
	FLOWER_BANNER_PATTERN vc
	FLOWER_POT tk
	FOX_SPAWN_EGG rZ
	FRIEND_POTTERY_SHERD wV
	FROGSPAWN wt
	FROG_SPAWN_EGG sa
	FURNACE eu
	FURNACE_MINECART nc
	GHAST_SPAWN_EGG sb
	GHAST_TEAR rs
	GILDED_BLACKSTONE vK
	GLASS ck
	GLASS_BOTTLE rw
	GLASS_PANE fx
	GLISTERING_MELON_SLICE rE
	GLOBE_BANNER_PATTERN vg
	GLOWSTONE eY
	GLOWSTONE_DUST qk
	GLOW_BERRIES vw
	GLOW_INK_SAC qs
	GLOW_ITEM_FRAME tj
	GLOW_LICHEN fA
	GLOW_SQUID_SPAWN_EGG sc
	GOAT_HORN vi
	GOAT_SPAWN_EGG sd
	GOLDEN_APPLE pm
	GOLDEN_AXE ok
	GOLDEN_BOOTS pd
	GOLDEN_CARROT tq
	GOLDEN_CHESTPLATE pb
	GOLDEN_HELMET pa
	GOLDEN_HOE ol
	GOLDEN_HORSE_ARMOR tN
	GOLDEN_LEGGINGS pc
	GOLDEN_PICKAXE oj
	GOLDEN_SHOVEL oi
	GOLDEN_SWORD oh
	GOLD_BLOCK ay
	GOLD_INGOT nU
	GOLD_NUGGET rt
	GOLD_ORE ad
	GRANITE c
	GRANITE_SLAB lb
	GRANITE_STAIRS kK
	GRANITE_WALL gr
	GRASS cr
	GRASS_BLOCK o
	GRAVEL W
	GRAY_BANNER uc
	GRAY_BED qV
	GRAY_CANDLE wc
	GRAY_CARPET hp
	GRAY_CONCRETE ju
	GRAY_CONCRETE_POWDER jK
	GRAY_DYE qB
	GRAY_GLAZED_TERRACOTTA je
	GRAY_SHULKER_BOX iO
	GRAY_STAINED_GLASS hO
	GRAY_STAINED_GLASS_PANE ie
	GRAY_TERRACOTTA gW
	GRAY_WOOL cF
	GREEN_BANNER ui
	GREEN_BED rb
	GREEN_CANDLE wi
	GREEN_CARPET hv
	GREEN_CONCRETE jA
	GREEN_CONCRETE_POWDER jQ
	GREEN_DYE qH
	GREEN_GLAZED_TERRACOTTA jk
	GREEN_SHULKER_BOX iU
	GREEN_STAINED_GLASS hU
	GREEN_STAINED_GLASS_PANE ik
	GREEN_TERRACOTTA hc
	GREEN_WOOL cL
	GRINDSTONE vp
	GUARDIAN_SPAWN_EGG se
	GUNPOWDER oG
	HANGING_ROOTS ds
	HAY_BLOCK hh
	HEARTBREAK_POTTERY_SHERD wX
	HEART_OF_THE_SEA uY
	HEART_POTTERY_SHERD wW
	HEAVY_WEIGHTED_PRESSURE_PLATE ma
	HOGLIN_SPAWN_EGG sf
	HONEYCOMB vA
	HONEYCOMB_BLOCK vE
	HONEY_BLOCK lt
	HONEY_BOTTLE vD
	HOPPER lv
	HOPPER_MINECART ne
	HORN_CORAL kj
	HORN_CORAL_BLOCK ke
	HORN_CORAL_FAN kt
	HORSE_SPAWN_EGG sg
	HOST_ARMOR_TRIM_SMITHING_TEMPLATE wM
	HOWL_POTTERY_SHERD wY
	HUSK_SPAWN_EGG sh
	ICE ey
	INFESTED_CHISELED_STONE_BRICKS fe
	INFESTED_COBBLESTONE fa
	INFESTED_CRACKED_STONE_BRICKS fd
	INFESTED_DEEPSLATE ff
	INFESTED_MOSSY_STONE_BRICKS fc
	INFESTED_STONE eZ
	INFESTED_STONE_BRICKS fb
	INK_SAC qr
	IRON_AXE op
	IRON_BARS fv
	IRON_BLOCK aw
	IRON_BOOTS oV
	IRON_CHESTPLATE oT
	IRON_DOOR mm
	IRON_GOLEM_SPAWN_EGG si
	IRON_HELMET oS
	IRON_HOE oq
	IRON_HORSE_ARMOR tM
	IRON_INGOT nQ
	IRON_LEGGINGS oU
	IRON_NUGGET uB
	IRON_ORE Z
	IRON_PICKAXE oo
	IRON_SHOVEL on
	IRON_SWORD om
	IRON_TRAPDOOR my
	ITEM_FRAME ti
	JACK_O_LANTERN eQ
	JIGSAW nB
	JUKEBOX eC
	JUNGLE_BOAT no
	JUNGLE_BUTTON lP
	JUNGLE_CHEST_BOAT np
	JUNGLE_DOOR mq
	JUNGLE_FENCE eG
	JUNGLE_FENCE_GATE mN
	JUNGLE_HANGING_SIGN pC
	JUNGLE_LEAVES cb
	JUNGLE_LOG bj
	JUNGLE_PLANKS A
	JUNGLE_PRESSURE_PLATE me
	JUNGLE_SAPLING M
	JUNGLE_SIGN pr
	JUNGLE_SLAB dz
	JUNGLE_STAIRS ga
	JUNGLE_TRAPDOOR mC
	JUNGLE_WOOD bR
	KELP do
	KNOWLEDGE_BOOK uC
	LADDER ev
	LANTERN vt
	LAPIS_BLOCK cm
	LAPIS_LAZULI nM
	LAPIS_ORE aj
	LARGE_AMETHYST_BUD wn
	LARGE_FERN hG
	LAVA_BUCKET pM
	LEAD tQ
	LEATHER pP
	LEATHER_BOOTS oN
	LEATHER_CHESTPLATE oL
	LEATHER_HELMET oK
	LEATHER_HORSE_ARMOR tP
	LEATHER_LEGGINGS oM
	LECTERN ly
	LEVER lA
	LIGHT hg
	LIGHTNING_ROD lB
	LIGHT_BLUE_BANNER tY
	LIGHT_BLUE_BED qR
	LIGHT_BLUE_CANDLE vY
	LIGHT_BLUE_CARPET hl
	LIGHT_BLUE_CONCRETE jq
	LIGHT_BLUE_CONCRETE_POWDER jG
	LIGHT_BLUE_DYE qx
	LIGHT_BLUE_GLAZED_TERRACOTTA ja
	LIGHT_BLUE_SHULKER_BOX iK
	LIGHT_BLUE_STAINED_GLASS hK
	LIGHT_BLUE_STAINED_GLASS_PANE ia
	LIGHT_BLUE_TERRACOTTA gS
	LIGHT_BLUE_WOOL cB
	LIGHT_GRAY_BANNER ud
	LIGHT_GRAY_BED qW
	LIGHT_GRAY_CANDLE wd
	LIGHT_GRAY_CARPET hq
	LIGHT_GRAY_CONCRETE jv
	LIGHT_GRAY_CONCRETE_POWDER jL
	LIGHT_GRAY_DYE qC
	LIGHT_GRAY_GLAZED_TERRACOTTA jf
	LIGHT_GRAY_SHULKER_BOX iP
	LIGHT_GRAY_STAINED_GLASS hP
	LIGHT_GRAY_STAINED_GLASS_PANE if
	LIGHT_GRAY_TERRACOTTA gX
	LIGHT_GRAY_WOOL cG
	LIGHT_WEIGHTED_PRESSURE_PLATE lZ
	LILAC hC
	LILY_OF_THE_VALLEY cZ
	LILY_PAD fF
	LIME_BANNER ua
	LIME_BED qT
	LIME_CANDLE wa
	LIME_CARPET hn
	LIME_CONCRETE js
	LIME_CONCRETE_POWDER jI
	LIME_DYE qz
	LIME_GLAZED_TERRACOTTA jc
	LIME_SHULKER_BOX iM
	LIME_STAINED_GLASS hM
	LIME_STAINED_GLASS_PANE ic
	LIME_TERRACOTTA gU
	LIME_WOOL cD
	LINGERING_POTION ux
	LLAMA_SPAWN_EGG sj
	LODESTONE vF
	LOOM vb
	MAGENTA_BANNER tX
	MAGENTA_BED qQ
	MAGENTA_CANDLE vX
	MAGENTA_CARPET hk
	MAGENTA_CONCRETE jp
	MAGENTA_CONCRETE_POWDER jF
	MAGENTA_DYE qw
	MAGENTA_GLAZED_TERRACOTTA iZ
	MAGENTA_SHULKER_BOX iJ
	MAGENTA_STAINED_GLASS hJ
	MAGENTA_STAINED_GLASS_PANE hZ
	MAGENTA_TERRACOTTA gR
	MAGENTA_WOOL cA
	MAGMA_BLOCK iA
	MAGMA_CREAM rA
	MAGMA_CUBE_SPAWN_EGG sk
	MANGROVE_BOAT nw
	MANGROVE_BUTTON lT
	MANGROVE_CHEST_BOAT nx
	MANGROVE_DOOR mu
	MANGROVE_FENCE eK
	MANGROVE_FENCE_GATE mR
	MANGROVE_HANGING_SIGN pG
	MANGROVE_LEAVES cf
	MANGROVE_LOG bn
	MANGROVE_PLANKS E
	MANGROVE_PRESSURE_PLATE mi
	MANGROVE_PROPAGULE Q
	MANGROVE_ROOTS bo
	MANGROVE_SIGN pv
	MANGROVE_SLAB dD
	MANGROVE_STAIRS ge
	MANGROVE_TRAPDOOR mG
	MANGROVE_WOOD bV
	MAP tp
	MEDIUM_AMETHYST_BUD wm
	MELON fy
	MELON_SEEDS rk
	MELON_SLICE rh
	MILK_BUCKET pQ
	MINECART na
	MINER_POTTERY_SHERD wZ
	MOJANG_BANNER_PATTERN vf
	MOOSHROOM_SPAWN_EGG sl
	MOSSY_COBBLESTONE eh
	MOSSY_COBBLESTONE_SLAB kX
	MOSSY_COBBLESTONE_STAIRS kF
	MOSSY_COBBLESTONE_WALL gm
	MOSSY_STONE_BRICKS fh
	MOSSY_STONE_BRICK_SLAB kV
	MOSSY_STONE_BRICK_STAIRS kD
	MOSSY_STONE_BRICK_WALL gq
	MOSS_BLOCK dr
	MOSS_CARPET dp
	MOURNER_POTTERY_SHERD xa
	MUD t
	MUDDY_MANGROVE_ROOTS bp
	MUD_BRICKS fl
	MUD_BRICK_SLAB dQ
	MUD_BRICK_STAIRS fD
	MUD_BRICK_WALL gt
	MULE_SPAWN_EGG sm
	MUSHROOM_STEM fu
	MUSHROOM_STEW oD
	MUSIC_DISC_11 uO
	MUSIC_DISC_13 uE
	MUSIC_DISC_5 uS
	MUSIC_DISC_BLOCKS uG
	MUSIC_DISC_CAT uF
	MUSIC_DISC_CHIRP uH
	MUSIC_DISC_FAR uI
	MUSIC_DISC_MALL uJ
	MUSIC_DISC_MELLOHI uK
	MUSIC_DISC_OTHERSIDE uQ
	MUSIC_DISC_PIGSTEP uT
	MUSIC_DISC_RELIC uR
	MUSIC_DISC_STAL uL
	MUSIC_DISC_STRAD uM
	MUSIC_DISC_WAIT uP
	MUSIC_DISC_WARD uN
	MUTTON tT
	MYCELIUM fE
	NAME_TAG tR
	NAUTILUS_SHELL uX
	NETHERITE_AXE oz
	NETHERITE_BLOCK aA
	NETHERITE_BOOTS ph
	NETHERITE_CHESTPLATE pf
	NETHERITE_HELMET pe
	NETHERITE_HOE oA
	NETHERITE_INGOT nV
	NETHERITE_LEGGINGS pg
	NETHERITE_PICKAXE oy
	NETHERITE_SCRAP nW
	NETHERITE_SHOVEL ox
	NETHERITE_SWORD ow
	NETHERITE_UPGRADE_SMITHING_TEMPLATE ww
	NETHERRACK eR
	NETHER_BRICK tD
	NETHER_BRICKS fG
	NETHER_BRICK_FENCE fJ
	NETHER_BRICK_SLAB dR
	NETHER_BRICK_STAIRS fK
	NETHER_BRICK_WALL gu
	NETHER_GOLD_ORE an
	NETHER_QUARTZ_ORE ao
	NETHER_SPROUTS dk
	NETHER_STAR ty
	NETHER_WART ru
	NETHER_WART_BLOCK iB
	NOTE_BLOCK lJ
	OAK_BOAT ni
	OAK_BUTTON lM
	OAK_CHEST_BOAT nj
	OAK_DOOR mn
	OAK_FENCE eD
	OAK_FENCE_GATE mK
	OAK_HANGING_SIGN pz
	OAK_LEAVES bY
	OAK_LOG bg
	OAK_PLANKS x
	OAK_PRESSURE_PLATE mb
	OAK_SAPLING J
	OAK_SIGN po
	OAK_SLAB dw
	OAK_STAIRS fX
	OAK_TRAPDOOR mz
	OAK_WOOD bO
	OBSERVER lu
	OBSIDIAN ei
	OCELOT_SPAWN_EGG sn
	OCHRE_FROGLIGHT wq
	ORANGE_BANNER tW
	ORANGE_BED qP
	ORANGE_CANDLE vW
	ORANGE_CARPET hj
	ORANGE_CONCRETE jo
	ORANGE_CONCRETE_POWDER jE
	ORANGE_DYE qv
	ORANGE_GLAZED_TERRACOTTA iY
	ORANGE_SHULKER_BOX iI
	ORANGE_STAINED_GLASS hI
	ORANGE_STAINED_GLASS_PANE hY
	ORANGE_TERRACOTTA gQ
	ORANGE_TULIP cU
	ORANGE_WOOL cz
	OXEYE_DAISY cX
	OXIDIZED_COPPER aD
	OXIDIZED_CUT_COPPER aH
	OXIDIZED_CUT_COPPER_SLAB aP
	OXIDIZED_CUT_COPPER_STAIRS aL
	PACKED_ICE hz
	PACKED_MUD fk
	PAINTING pl
	PANDA_SPAWN_EGG so
	PAPER qa
	PARROT_SPAWN_EGG sp
	PEARLESCENT_FROGLIGHT ws
	PEONY hE
	PETRIFIED_OAK_SLAB dM
	PHANTOM_MEMBRANE uW
	PHANTOM_SPAWN_EGG sq
	PIGLIN_BANNER_PATTERN vh
	PIGLIN_BRUTE_SPAWN_EGG st
	PIGLIN_HEAD tx
	PIGLIN_SPAWN_EGG ss
	PIG_SPAWN_EGG sr
	PILLAGER_SPAWN_EGG su
	PINK_BANNER ub
	PINK_BED qU
	PINK_CANDLE wb
	PINK_CARPET ho
	PINK_CONCRETE jt
	PINK_CONCRETE_POWDER jJ
	PINK_DYE qA
	PINK_GLAZED_TERRACOTTA jd
	PINK_PETALS dq
	PINK_SHULKER_BOX iN
	PINK_STAINED_GLASS hN
	PINK_STAINED_GLASS_PANE id
	PINK_TERRACOTTA gV
	PINK_TULIP cW
	PINK_WOOL cE
	PISTON lq
	PITCHER_PLANT dc
	PITCHER_POD up
	PLAYER_HEAD tt
	PLENTY_POTTERY_SHERD xb
	PODZOL r
	POINTED_DRIPSTONE wp
	POISONOUS_POTATO to
	POLAR_BEAR_SPAWN_EGG sv
	POLISHED_ANDESITE h
	POLISHED_ANDESITE_SLAB le
	POLISHED_ANDESITE_STAIRS kN
	POLISHED_BASALT eV
	POLISHED_BLACKSTONE vL
	POLISHED_BLACKSTONE_BRICKS vP
	POLISHED_BLACKSTONE_BRICK_SLAB vQ
	POLISHED_BLACKSTONE_BRICK_STAIRS vR
	POLISHED_BLACKSTONE_BRICK_WALL gC
	POLISHED_BLACKSTONE_BUTTON lL
	POLISHED_BLACKSTONE_PRESSURE_PLATE lY
	POLISHED_BLACKSTONE_SLAB vM
	POLISHED_BLACKSTONE_STAIRS vN
	POLISHED_BLACKSTONE_WALL gB
	POLISHED_DEEPSLATE k
	POLISHED_DEEPSLATE_SLAB lh
	POLISHED_DEEPSLATE_STAIRS kQ
	POLISHED_DEEPSLATE_WALL gE
	POLISHED_DIORITE f
	POLISHED_DIORITE_SLAB kW
	POLISHED_DIORITE_STAIRS kE
	POLISHED_GRANITE d
	POLISHED_GRANITE_SLAB kT
	POLISHED_GRANITE_STAIRS kB
	POPPED_CHORUS_FRUIT un
	POPPY cP
	PORKCHOP pj
	POTATO tm
	POTION rv
	POWDER_SNOW_BUCKET pN
	POWERED_RAIL mV
	PRISMARINE in
	PRISMARINE_BRICKS io
	PRISMARINE_BRICK_SLAB dX
	PRISMARINE_BRICK_STAIRS ir
	PRISMARINE_CRYSTALS tF
	PRISMARINE_SHARD tE
	PRISMARINE_SLAB dW
	PRISMARINE_STAIRS iq
	PRISMARINE_WALL go
	PRIZE_POTTERY_SHERD xc
	PUFFERFISH qo
	PUFFERFISH_BUCKET pR
	PUFFERFISH_SPAWN_EGG sw
	PUMPKIN eO
	PUMPKIN_PIE tz
	PUMPKIN_SEEDS rj
	PURPLE_BANNER uf
	PURPLE_BED qY
	PURPLE_CANDLE wf
	PURPLE_CARPET hs
	PURPLE_CONCRETE jx
	PURPLE_CONCRETE_POWDER jN
	PURPLE_DYE qE
	PURPLE_GLAZED_TERRACOTTA jh
	PURPLE_SHULKER_BOX iR
	PURPLE_STAINED_GLASS hR
	PURPLE_STAINED_GLASS_PANE ih
	PURPLE_TERRACOTTA gZ
	PURPLE_WOOL cI
	PURPUR_BLOCK en
	PURPUR_PILLAR eo
	PURPUR_SLAB dV
	PURPUR_STAIRS ep
	QUARTZ nN
	QUARTZ_BLOCK gL
	QUARTZ_BRICKS gM
	QUARTZ_PILLAR gN
	QUARTZ_SLAB dS
	QUARTZ_STAIRS gO
	RABBIT tG
	RABBIT_FOOT tJ
	RABBIT_HIDE tK
	RABBIT_SPAWN_EGG sx
	RABBIT_STEW tI
	RAIL mX
	RAISER_ARMOR_TRIM_SMITHING_TEMPLATE wL
	RAVAGER_SPAWN_EGG sy
	RAW_COPPER nR
	RAW_COPPER_BLOCK as
	RAW_GOLD nT
	RAW_GOLD_BLOCK at
	RAW_IRON nP
	RAW_IRON_BLOCK ar
	RECOVERY_COMPASS qf
	REDSTONE ll
	REDSTONE_BLOCK ln
	REDSTONE_LAMP lI
	REDSTONE_ORE af
	REDSTONE_TORCH lm
	RED_BANNER uj
	RED_BED rc
	RED_CANDLE wj
	RED_CARPET hw
	RED_CONCRETE jB
	RED_CONCRETE_POWDER jR
	RED_DYE qI
	RED_GLAZED_TERRACOTTA jl
	RED_MUSHROOM df
	RED_MUSHROOM_BLOCK ft
	RED_NETHER_BRICKS iD
	RED_NETHER_BRICK_SLAB ld
	RED_NETHER_BRICK_STAIRS kM
	RED_NETHER_BRICK_WALL gw
	RED_SAND V
	RED_SANDSTONE iu
	RED_SANDSTONE_SLAB dT
	RED_SANDSTONE_STAIRS ix
	RED_SANDSTONE_WALL gp
	RED_SHULKER_BOX iV
	RED_STAINED_GLASS hV
	RED_STAINED_GLASS_PANE il
	RED_TERRACOTTA hd
	RED_TULIP cT
	RED_WOOL cM
	REINFORCED_DEEPSLATE fr
	REPEATER lo
	REPEATING_COMMAND_BLOCK iy
	RESPAWN_ANCHOR vT
	RIB_ARMOR_TRIM_SMITHING_TEMPLATE wG
	ROOTED_DIRT s
	ROSE_BUSH hD
	ROTTEN_FLESH rp
	SADDLE mZ
	SALMON qm
	SALMON_BUCKET pS
	SALMON_SPAWN_EGG sz
	SAND S
	SANDSTONE cn
	SANDSTONE_SLAB dK
	SANDSTONE_STAIRS fU
	SANDSTONE_WALL gx
	SCAFFOLDING lk
	SCULK fL
	SCULK_CATALYST fN
	SCULK_SENSOR lD
	SCULK_SHRIEKER fO
	SCULK_VEIN fM
	SCUTE nD
	SEAGRASS cw
	SEA_LANTERN it
	SEA_PICKLE cx
	SENTRY_ARMOR_TRIM_SMITHING_TEMPLATE wx
	SHAPER_ARMOR_TRIM_SMITHING_TEMPLATE wJ
	SHEAF_POTTERY_SHERD xd
	SHEARS rg
	SHEEP_SPAWN_EGG sA
	SHELTER_POTTERY_SHERD xe
	SHIELD uy
	SHROOMLIGHT vz
	SHULKER_BOX iG
	SHULKER_SHELL uA
	SHULKER_SPAWN_EGG sB
	SILENCE_ARMOR_TRIM_SMITHING_TEMPLATE wK
	SILVERFISH_SPAWN_EGG sC
	SKELETON_HORSE_SPAWN_EGG sE
	SKELETON_SKULL tr
	SKELETON_SPAWN_EGG sD
	SKULL_BANNER_PATTERN ve
	SKULL_POTTERY_SHERD xf
	SLIME_BALL qc
	SLIME_BLOCK ls
	SLIME_SPAWN_EGG sF
	SMALL_AMETHYST_BUD wl
	SMALL_DRIPLEAF du
	SMITHING_TABLE vq
	SMOKER vl
	SMOOTH_BASALT eW
	SMOOTH_QUARTZ dZ
	SMOOTH_QUARTZ_SLAB la
	SMOOTH_QUARTZ_STAIRS kJ
	SMOOTH_RED_SANDSTONE ea
	SMOOTH_RED_SANDSTONE_SLAB kU
	SMOOTH_RED_SANDSTONE_STAIRS kC
	SMOOTH_SANDSTONE eb
	SMOOTH_SANDSTONE_SLAB kZ
	SMOOTH_SANDSTONE_STAIRS kI
	SMOOTH_STONE ec
	SMOOTH_STONE_SLAB dJ
	SNIFFER_EGG jU
	SNIFFER_SPAWN_EGG sG
	SNORT_POTTERY_SHERD xg
	SNOUT_ARMOR_TRIM_SMITHING_TEMPLATE wF
	SNOW ex
	SNOWBALL pO
	SNOW_BLOCK ez
	SNOW_GOLEM_SPAWN_EGG sH
	SOUL_CAMPFIRE vy
	SOUL_LANTERN vu
	SOUL_SAND eS
	SOUL_SOIL eT
	SOUL_TORCH eX
	SPAWNER eq
	SPECTRAL_ARROW uv
	SPIDER_EYE rx
	SPIDER_SPAWN_EGG sI
	SPIRE_ARMOR_TRIM_SMITHING_TEMPLATE wH
	SPLASH_POTION uu
	SPONGE ci
	SPORE_BLOSSOM dd
	SPRUCE_BOAT nk
	SPRUCE_BUTTON lN
	SPRUCE_CHEST_BOAT nl
	SPRUCE_DOOR mo
	SPRUCE_FENCE eE
	SPRUCE_FENCE_GATE mL
	SPRUCE_HANGING_SIGN pA
	SPRUCE_LEAVES bZ
	SPRUCE_LOG bh
	SPRUCE_PLANKS y
	SPRUCE_PRESSURE_PLATE mc
	SPRUCE_SAPLING K
	SPRUCE_SIGN pp
	SPRUCE_SLAB dx
	SPRUCE_STAIRS fY
	SPRUCE_TRAPDOOR mA
	SPRUCE_WOOD bP
	SPYGLASS qj
	SQUID_SPAWN_EGG sJ
	STICK oB
	STICKY_PISTON lr
	STONE b
	STONECUTTER vr
	STONE_AXE of
	STONE_BRICKS fg
	STONE_BRICK_SLAB dP
	STONE_BRICK_STAIRS fC
	STONE_BRICK_WALL gs
	STONE_BUTTON lK
	STONE_HOE og
	STONE_PICKAXE oe
	STONE_PRESSURE_PLATE lX
	STONE_SHOVEL od
	STONE_SLAB dI
	STONE_STAIRS kH
	STONE_SWORD oc
	STRAY_SPAWN_EGG sK
	STRIDER_SPAWN_EGG sL
	STRING oE
	STRIPPED_ACACIA_LOG bx
	STRIPPED_ACACIA_WOOD bH
	STRIPPED_BAMBOO_BLOCK bN
	STRIPPED_BIRCH_LOG bv
	STRIPPED_BIRCH_WOOD bF
	STRIPPED_CHERRY_LOG by
	STRIPPED_CHERRY_WOOD bI
	STRIPPED_CRIMSON_HYPHAE bL
	STRIPPED_CRIMSON_STEM bB
	STRIPPED_DARK_OAK_LOG bz
	STRIPPED_DARK_OAK_WOOD bJ
	STRIPPED_JUNGLE_LOG bw
	STRIPPED_JUNGLE_WOOD bG
	STRIPPED_MANGROVE_LOG bA
	STRIPPED_MANGROVE_WOOD bK
	STRIPPED_OAK_LOG bt
	STRIPPED_OAK_WOOD bD
	STRIPPED_SPRUCE_LOG bu
	STRIPPED_SPRUCE_WOOD bE
	STRIPPED_WARPED_HYPHAE bM
	STRIPPED_WARPED_STEM bC
	STRUCTURE_BLOCK nA
	STRUCTURE_VOID iF
	SUGAR qM
	SUGAR_CANE dn
	SUNFLOWER hB
	SUSPICIOUS_GRAVEL U
	SUSPICIOUS_SAND T
	SUSPICIOUS_STEW va
	SWEET_BERRIES vv
	TADPOLE_BUCKET pW
	TADPOLE_SPAWN_EGG sM
	TALL_GRASS hF
	TARGET lz
	TERRACOTTA hy
	TIDE_ARMOR_TRIM_SMITHING_TEMPLATE wE
	TINTED_GLASS cl
	TIPPED_ARROW uw
	TNT lH
	TNT_MINECART nd
	TORCH ej
	TORCHFLOWER db
	TORCHFLOWER_SEEDS uo
	TOTEM_OF_UNDYING uz
	TRADER_LLAMA_SPAWN_EGG sN
	TRAPPED_CHEST lG
	TRIDENT uV
	TRIPWIRE_HOOK lF
	TROPICAL_FISH qn
	TROPICAL_FISH_BUCKET pU
	TROPICAL_FISH_SPAWN_EGG sO
	TUBE_CORAL kf
	TUBE_CORAL_BLOCK ka
	TUBE_CORAL_FAN kp
	TUFF m
	TURTLE_EGG jT
	TURTLE_HELMET nC
	TURTLE_SPAWN_EGG sP
	TWISTING_VINES dm
	VERDANT_FROGLIGHT wr
	VEX_ARMOR_TRIM_SMITHING_TEMPLATE wD
	VEX_SPAWN_EGG sQ
	VILLAGER_SPAWN_EGG sR
	VINDICATOR_SPAWN_EGG sS
	VINE fz
	WANDERING_TRADER_SPAWN_EGG sT
	WARDEN_SPAWN_EGG sU
	WARD_ARMOR_TRIM_SMITHING_TEMPLATE wB
	WARPED_BUTTON lW
	WARPED_DOOR mx
	WARPED_FENCE eN
	WARPED_FENCE_GATE mU
	WARPED_FUNGUS dh
	WARPED_FUNGUS_ON_A_STICK ng
	WARPED_HANGING_SIGN pJ
	WARPED_HYPHAE bX
	WARPED_NYLIUM v
	WARPED_PLANKS H
	WARPED_PRESSURE_PLATE ml
	WARPED_ROOTS dj
	WARPED_SIGN py
	WARPED_SLAB dH
	WARPED_STAIRS gi
	WARPED_STEM br
	WARPED_TRAPDOOR mJ
	WARPED_WART_BLOCK iC
	WATER_BUCKET pL
	WAXED_COPPER_BLOCK aQ
	WAXED_CUT_COPPER aU
	WAXED_CUT_COPPER_SLAB bc
	WAXED_CUT_COPPER_STAIRS aY
	WAXED_EXPOSED_COPPER aR
	WAXED_EXPOSED_CUT_COPPER aV
	WAXED_EXPOSED_CUT_COPPER_SLAB bd
	WAXED_EXPOSED_CUT_COPPER_STAIRS aZ
	WAXED_OXIDIZED_COPPER aT
	WAXED_OXIDIZED_CUT_COPPER aX
	WAXED_OXIDIZED_CUT_COPPER_SLAB bf
	WAXED_OXIDIZED_CUT_COPPER_STAIRS bb
	WAXED_WEATHERED_COPPER aS
	WAXED_WEATHERED_CUT_COPPER aW
	WAXED_WEATHERED_CUT_COPPER_SLAB be
	WAXED_WEATHERED_CUT_COPPER_STAIRS ba
	WAYFINDER_ARMOR_TRIM_SMITHING_TEMPLATE wI
	WEATHERED_COPPER aC
	WEATHERED_CUT_COPPER aG
	WEATHERED_CUT_COPPER_SLAB aO
	WEATHERED_CUT_COPPER_STAIRS aK
	WEEPING_VINES dl
	WET_SPONGE cj
	WHEAT oI
	WHEAT_SEEDS oH
	WHITE_BANNER tV
	WHITE_BED qO
	WHITE_CANDLE vV
	WHITE_CARPET hi
	WHITE_CONCRETE jn
	WHITE_CONCRETE_POWDER jD
	WHITE_DYE qu
	WHITE_GLAZED_TERRACOTTA iX
	WHITE_SHULKER_BOX iH
	WHITE_STAINED_GLASS hH
	WHITE_STAINED_GLASS_PANE hX
	WHITE_TERRACOTTA gP
	WHITE_TULIP cV
	WHITE_WOOL cy
	WILD_ARMOR_TRIM_SMITHING_TEMPLATE wA
	WITCH_SPAWN_EGG sV
	WITHER_ROSE da
	WITHER_SKELETON_SKULL ts
	WITHER_SKELETON_SPAWN_EGG sX
	WITHER_SPAWN_EGG sW
	WOLF_SPAWN_EGG sY
	WOODEN_AXE oa
	WOODEN_HOE ob
	WOODEN_PICKAXE nZ
	WOODEN_SHOVEL nY
	WOODEN_SWORD nX
	WRITABLE_BOOK tg
	WRITTEN_BOOK th
	YELLOW_BANNER tZ
	YELLOW_BED qS
	YELLOW_CANDLE vZ
	YELLOW_CARPET hm
	YELLOW_CONCRETE jr
	YELLOW_CONCRETE_POWDER jH
	YELLOW_DYE qy
	YELLOW_GLAZED_TERRACOTTA jb
	YELLOW_SHULKER_BOX iL
	YELLOW_STAINED_GLASS hL
	YELLOW_STAINED_GLASS_PANE ib
	YELLOW_TERRACOTTA gT
	YELLOW_WOOL cC
	ZOGLIN_SPAWN_EGG sZ
	ZOMBIE_HEAD tu
	ZOMBIE_HORSE_SPAWN_EGG tb
	ZOMBIE_SPAWN_EGG ta
	ZOMBIE_VILLAGER_SPAWN_EGG tc
	ZOMBIFIED_PIGLIN_SPAWN_EGG td
	registerBlock (Lnet/minecraft/world/item/BlockItem;)Lnet/minecraft/world/item/Item; a
	registerBlock (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/world/item/Item; a
	registerBlock (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/world/item/Item;)Lnet/minecraft/world/item/Item; a
	registerBlock (Lnet/minecraft/world/level/block/Block;[Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/world/item/Item; a
	registerItem (Ljava/lang/String;Lnet/minecraft/world/item/Item;)Lnet/minecraft/world/item/Item; a
	registerItem (Lnet/minecraft/resources/ResourceKey;Lnet/minecraft/world/item/Item;)Lnet/minecraft/world/item/Item; a
	registerItem (Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/world/item/Item;)Lnet/minecraft/world/item/Item; a
net/minecraft/world/item/KnowledgeBookItem cgd
	LOGGER b
	RECIPE_TAG a
	use (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResultHolder; a
net/minecraft/world/item/LeadItem cge
	bindPlayerMobs (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/InteractionResult; a
	useOn (Lnet/minecraft/world/item/context/UseOnContext;)Lnet/minecraft/world/InteractionResult; a
net/minecraft/world/item/LingeringPotionItem cgf
	appendHoverText (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/Level;Ljava/util/List;Lnet/minecraft/world/item/TooltipFlag;)V a
	use (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResultHolder; a
net/minecraft/world/item/MapItem cgg
	DEFAULT_MAP_COLOR e
	IMAGE_HEIGHT b
	IMAGE_WIDTH a
	MAP_LOCK_TAG d
	MAP_SCALE_TAG c
	TAG_MAP f
	appendHoverText (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/Level;Ljava/util/List;Lnet/minecraft/world/item/TooltipFlag;)V a
	create (Lnet/minecraft/world/level/Level;IIBZZ)Lnet/minecraft/world/item/ItemStack; a
	createAndStoreSavedData (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/Level;IIIZZLnet/minecraft/resources/ResourceKey;)V a
	createNewSavedData (Lnet/minecraft/world/level/Level;IIIZZLnet/minecraft/resources/ResourceKey;)I a
	getColor (Lnet/minecraft/world/item/ItemStack;)I k
	getCorrectStateForFluidBlock (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
	getMapId (Lnet/minecraft/world/item/ItemStack;)Ljava/lang/Integer; d
	getSavedData (Ljava/lang/Integer;Lnet/minecraft/world/level/Level;)Lnet/minecraft/world/level/saveddata/maps/MapItemSavedData; a
	getSavedData (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/Level;)Lnet/minecraft/world/level/saveddata/maps/MapItemSavedData; a
	getUpdatePacket (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/player/Player;)Lnet/minecraft/network/protocol/Packet; a
	inventoryTick (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/Entity;IZ)V a
	isBiomeWatery ([ZII)Z a
	lockMap (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/item/ItemStack;)V a
	makeKey (I)Ljava/lang/String; a
	onCraftedBy (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/player/Player;)V b
	renderBiomePreviewMap (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/item/ItemStack;)V a
	scaleMap (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/Level;I)V a
	storeMapData (Lnet/minecraft/world/item/ItemStack;I)V a
	update (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/level/saveddata/maps/MapItemSavedData;)V a
	useOn (Lnet/minecraft/world/item/context/UseOnContext;)Lnet/minecraft/world/InteractionResult; a
net/minecraft/world/item/MilkBucketItem cgh
	DRINK_DURATION a
	finishUsingItem (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/LivingEntity;)Lnet/minecraft/world/item/ItemStack; a
	getUseAnimation (Lnet/minecraft/world/item/ItemStack;)Lnet/minecraft/world/item/UseAnim; c
	getUseDuration (Lnet/minecraft/world/item/ItemStack;)I b
	use (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResultHolder; a
net/minecraft/world/item/MinecartItem cgi
	DISPENSE_ITEM_BEHAVIOR a
	type b
	useOn (Lnet/minecraft/world/item/context/UseOnContext;)Lnet/minecraft/world/InteractionResult; a
net/minecraft/world/item/MobBucketItem cgj
	emptySound b
	type a
	appendHoverText (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/Level;Ljava/util/List;Lnet/minecraft/world/item/TooltipFlag;)V a
	checkExtraContent (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/level/Level;Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/core/BlockPos;)V a
	playEmptySound (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;)V a
	spawn (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/core/BlockPos;)V a
net/minecraft/world/item/NameTagItem cgk
	interactLivingEntity (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResult; a
net/minecraft/world/item/PickaxeItem cgl
net/minecraft/world/item/PlaceOnWaterBlockItem cgm
	use (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResultHolder; a
	useOn (Lnet/minecraft/world/item/context/UseOnContext;)Lnet/minecraft/world/InteractionResult; a
net/minecraft/world/item/PlayerHeadItem cgn
	TAG_SKULL_OWNER c
	getName (Lnet/minecraft/world/item/ItemStack;)Lnet/minecraft/network/chat/Component; m
	verifyTagAfterLoad (Lnet/minecraft/nbt/CompoundTag;)V b
net/minecraft/world/item/PotionItem cgo
	DRINK_DURATION a
	appendHoverText (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/Level;Ljava/util/List;Lnet/minecraft/world/item/TooltipFlag;)V a
	finishUsingItem (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/LivingEntity;)Lnet/minecraft/world/item/ItemStack; a
	getDefaultInstance ()Lnet/minecraft/world/item/ItemStack; ae_
	getDescriptionId (Lnet/minecraft/world/item/ItemStack;)Ljava/lang/String; j
	getUseAnimation (Lnet/minecraft/world/item/ItemStack;)Lnet/minecraft/world/item/UseAnim; c
	getUseDuration (Lnet/minecraft/world/item/ItemStack;)I b
	use (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResultHolder; a
	useOn (Lnet/minecraft/world/item/context/UseOnContext;)Lnet/minecraft/world/InteractionResult; a
net/minecraft/world/item/ProjectileWeaponItem cgp
	ARROW_ONLY c
	ARROW_OR_FIREWORK d
	getAllSupportedProjectiles ()Ljava/util/function/Predicate; b
	getDefaultProjectileRange ()I d
	getEnchantmentValue ()I c
	getHeldProjectile (Lnet/minecraft/world/entity/LivingEntity;Ljava/util/function/Predicate;)Lnet/minecraft/world/item/ItemStack; a
	getSupportedHeldProjectiles ()Ljava/util/function/Predicate; e
net/minecraft/world/item/Rarity cgq
	$VALUES f
	COMMON a
	EPIC d
	RARE c
	UNCOMMON b
	color e
	$values ()[Lnet/minecraft/world/item/Rarity; a
net/minecraft/world/item/RecordItem cgr
	BY_NAME a
	analogOutput b
	lengthInTicks d
	sound c
	appendHoverText (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/Level;Ljava/util/List;Lnet/minecraft/world/item/TooltipFlag;)V a
	getAnalogOutput ()I h
	getBySound (Lnet/minecraft/sounds/SoundEvent;)Lnet/minecraft/world/item/RecordItem; a
	getDisplayName ()Lnet/minecraft/network/chat/MutableComponent; i
	getLengthInTicks ()I y
	getSound ()Lnet/minecraft/sounds/SoundEvent; x
	useOn (Lnet/minecraft/world/item/context/UseOnContext;)Lnet/minecraft/world/InteractionResult; a
net/minecraft/world/item/SaddleItem cgs
	interactLivingEntity (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResult; a
net/minecraft/world/item/ScaffoldingBlockItem cgt
	mustSurvive ()Z d
	updatePlacementContext (Lnet/minecraft/world/item/context/BlockPlaceContext;)Lnet/minecraft/world/item/context/BlockPlaceContext; b
net/minecraft/world/item/ServerItemCooldowns cgu
	player a
	onCooldownEnded (Lnet/minecraft/world/item/Item;)V c
	onCooldownStarted (Lnet/minecraft/world/item/Item;I)V b
net/minecraft/world/item/ShearsItem cgv
	getDestroySpeed (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/block/state/BlockState;)F a
	isCorrectToolForDrops (Lnet/minecraft/world/level/block/state/BlockState;)Z a_
	mineBlock (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/Level;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/LivingEntity;)Z a
	useOn (Lnet/minecraft/world/item/context/UseOnContext;)Lnet/minecraft/world/InteractionResult; a
net/minecraft/world/item/ShieldItem cgw
	EFFECTIVE_BLOCK_DELAY a
	MINIMUM_DURABILITY_DAMAGE b
	TAG_BASE_COLOR c
	appendHoverText (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/Level;Ljava/util/List;Lnet/minecraft/world/item/TooltipFlag;)V a
	getColor (Lnet/minecraft/world/item/ItemStack;)Lnet/minecraft/world/item/DyeColor; d
	getDescriptionId (Lnet/minecraft/world/item/ItemStack;)Ljava/lang/String; j
	getEquipmentSlot ()Lnet/minecraft/world/entity/EquipmentSlot; g
	getUseAnimation (Lnet/minecraft/world/item/ItemStack;)Lnet/minecraft/world/item/UseAnim; c
	getUseDuration (Lnet/minecraft/world/item/ItemStack;)I b
	isValidRepairItem (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/item/ItemStack;)Z a
	use (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResultHolder; a
net/minecraft/world/item/ShovelItem cgx
	FLATTENABLES a
	useOn (Lnet/minecraft/world/item/context/UseOnContext;)Lnet/minecraft/world/InteractionResult; a
net/minecraft/world/item/SignApplicator cgy
	canApplyToSign (Lnet/minecraft/world/level/block/entity/SignText;Lnet/minecraft/world/entity/player/Player;)Z a
	tryApplyToSign (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/level/block/entity/SignBlockEntity;ZLnet/minecraft/world/entity/player/Player;)Z a
net/minecraft/world/item/SignItem cgz
	updateCustomBlockEntityTag (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/block/state/BlockState;)Z a
net/minecraft/world/item/SimpleFoiledItem cha
	isFoil (Lnet/minecraft/world/item/ItemStack;)Z i
net/minecraft/world/item/SmithingTemplateItem chb
	APPLIES_TO_TITLE e
	ARMOR_TRIM_ADDITIONS_SLOT_DESCRIPTION j
	ARMOR_TRIM_APPLIES_TO g
	ARMOR_TRIM_BASE_SLOT_DESCRIPTION i
	ARMOR_TRIM_INGREDIENTS h
	DESCRIPTION_FORMAT b
	DESCRIPTION_ID c
	EMPTY_SLOT_AMETHYST_SHARD J
	EMPTY_SLOT_AXE z
	EMPTY_SLOT_BOOTS x
	EMPTY_SLOT_CHESTPLATE v
	EMPTY_SLOT_DIAMOND H
	EMPTY_SLOT_EMERALD G
	EMPTY_SLOT_HELMET u
	EMPTY_SLOT_HOE y
	EMPTY_SLOT_INGOT D
	EMPTY_SLOT_LAPIS_LAZULI I
	EMPTY_SLOT_LEGGINGS w
	EMPTY_SLOT_PICKAXE C
	EMPTY_SLOT_QUARTZ F
	EMPTY_SLOT_REDSTONE_DUST E
	EMPTY_SLOT_SHOVEL B
	EMPTY_SLOT_SWORD A
	INGREDIENTS_TITLE d
	NETHERITE_UPGRADE f
	NETHERITE_UPGRADE_ADDITIONS_SLOT_DESCRIPTION t
	NETHERITE_UPGRADE_APPLIES_TO k
	NETHERITE_UPGRADE_BASE_SLOT_DESCRIPTION s
	NETHERITE_UPGRADE_INGREDIENTS r
	TITLE_FORMAT a
	additionalSlotEmptyIcons Q
	additionsSlotDescription O
	appliesTo K
	baseSlotDescription N
	baseSlotEmptyIcons P
	ingredients L
	upgradeDescription M
	appendHoverText (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/Level;Ljava/util/List;Lnet/minecraft/world/item/TooltipFlag;)V a
	createArmorTrimTemplate (Lnet/minecraft/resources/ResourceKey;)Lnet/minecraft/world/item/SmithingTemplateItem; a
	createArmorTrimTemplate (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/world/item/SmithingTemplateItem; a
	createNetheriteUpgradeIconList ()Ljava/util/List; C
	createNetheriteUpgradeMaterialList ()Ljava/util/List; D
	createNetheriteUpgradeTemplate ()Lnet/minecraft/world/item/SmithingTemplateItem; h
	createTrimmableArmorIconList ()Ljava/util/List; A
	createTrimmableMaterialIconList ()Ljava/util/List; B
	getAdditionSlotDescription ()Lnet/minecraft/network/chat/Component; x
	getAdditionalSlotEmptyIcons ()Ljava/util/List; z
	getBaseSlotDescription ()Lnet/minecraft/network/chat/Component; i
	getBaseSlotEmptyIcons ()Ljava/util/List; y
	getDescriptionId ()Ljava/lang/String; a
net/minecraft/world/item/SnowballItem chc
	use (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResultHolder; a
net/minecraft/world/item/SolidBucketItem chd
	placeSound c
	emptyContents (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/BlockHitResult;)Z a
	getDescriptionId ()Ljava/lang/String; a
	getPlaceSound (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/sounds/SoundEvent; a
	useOn (Lnet/minecraft/world/item/context/UseOnContext;)Lnet/minecraft/world/InteractionResult; a
net/minecraft/world/item/SpawnEggItem che
	BY_ID a
	backgroundColor b
	defaultType d
	highlightColor c
	byId (Lnet/minecraft/world/entity/EntityType;)Lnet/minecraft/world/item/SpawnEggItem; a
	eggs ()Ljava/lang/Iterable; h
	getColor (I)I a
	getType (Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/world/entity/EntityType; a
	requiredFeatures ()Lnet/minecraft/world/flag/FeatureFlagSet; m
	spawnOffspringFromSpawnEgg (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/entity/Mob;Lnet/minecraft/world/entity/EntityType;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/phys/Vec3;Lnet/minecraft/world/item/ItemStack;)Ljava/util/Optional; a
	spawnsEntity (Lnet/minecraft/nbt/CompoundTag;Lnet/minecraft/world/entity/EntityType;)Z a
	use (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResultHolder; a
	useOn (Lnet/minecraft/world/item/context/UseOnContext;)Lnet/minecraft/world/InteractionResult; a
net/minecraft/world/item/SpectralArrowItem chf
	createArrow (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/entity/LivingEntity;)Lnet/minecraft/world/entity/projectile/AbstractArrow; a
net/minecraft/world/item/SplashPotionItem chg
	use (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResultHolder; a
net/minecraft/world/item/SpyglassItem chh
	USE_DURATION a
	ZOOM_FOV_MODIFIER b
	finishUsingItem (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/LivingEntity;)Lnet/minecraft/world/item/ItemStack; a
	getUseAnimation (Lnet/minecraft/world/item/ItemStack;)Lnet/minecraft/world/item/UseAnim; c
	getUseDuration (Lnet/minecraft/world/item/ItemStack;)I b
	releaseUsing (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/LivingEntity;I)V a
	stopUsing (Lnet/minecraft/world/entity/LivingEntity;)V a
	use (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResultHolder; a
net/minecraft/world/item/StandingAndWallBlockItem chi
	attachmentDirection c
	wallBlock d
	canPlace (Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/BlockPos;)Z a
	getPlacementState (Lnet/minecraft/world/item/context/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; c
	registerBlocks (Ljava/util/Map;Lnet/minecraft/world/item/Item;)V a
net/minecraft/world/item/SuspiciousStewItem chj
	DEFAULT_DURATION d
	EFFECTS_TAG a
	EFFECT_DURATION_TAG c
	EFFECT_ID_TAG b
	appendHoverText (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/Level;Ljava/util/List;Lnet/minecraft/world/item/TooltipFlag;)V a
	finishUsingItem (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/LivingEntity;)Lnet/minecraft/world/item/ItemStack; a
	listPotionEffects (Lnet/minecraft/world/item/ItemStack;Ljava/util/function/Consumer;)V a
	saveMobEffect (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/effect/MobEffect;I)V a
net/minecraft/world/item/SwordItem chk
	attackDamage a
	defaultModifiers b
	canAttackBlock (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/player/Player;)Z a
	getDamage ()F h
	getDefaultAttributeModifiers (Lnet/minecraft/world/entity/EquipmentSlot;)Lcom/google/common/collect/Multimap; a
	getDestroySpeed (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/block/state/BlockState;)F a
	hurtEnemy (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/entity/LivingEntity;)Z a
	isCorrectToolForDrops (Lnet/minecraft/world/level/block/state/BlockState;)Z a_
	mineBlock (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/Level;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/LivingEntity;)Z a
net/minecraft/world/item/ThrowablePotionItem chl
	use (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResultHolder; a
net/minecraft/world/item/Tier chm
	getAttackDamageBonus ()F c
	getEnchantmentValue ()I e
	getLevel ()I d
	getRepairIngredient ()Lnet/minecraft/world/item/crafting/Ingredient; f
	getSpeed ()F b
	getUses ()I a
net/minecraft/world/item/TieredItem chn
	tier a
	getEnchantmentValue ()I c
	getTier ()Lnet/minecraft/world/item/Tier; i
	isValidRepairItem (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/item/ItemStack;)Z a
net/minecraft/world/item/Tiers cho
	$VALUES m
	DIAMOND d
	GOLD e
	IRON c
	NETHERITE f
	STONE b
	WOOD a
	damage j
	enchantmentValue k
	level g
	repairIngredient l
	speed i
	uses h
	$values ()[Lnet/minecraft/world/item/Tiers; m
	getAttackDamageBonus ()F c
	getEnchantmentValue ()I e
	getLevel ()I d
	getRepairIngredient ()Lnet/minecraft/world/item/crafting/Ingredient; f
	getSpeed ()F b
	getUses ()I a
net/minecraft/world/item/TippedArrowItem chp
	appendHoverText (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/Level;Ljava/util/List;Lnet/minecraft/world/item/TooltipFlag;)V a
	getDefaultInstance ()Lnet/minecraft/world/item/ItemStack; ae_
	getDescriptionId (Lnet/minecraft/world/item/ItemStack;)Ljava/lang/String; j
net/minecraft/world/item/TooltipFlag chq
	ADVANCED b
	NORMAL a
	isAdvanced ()Z a
	isCreative ()Z b
net/minecraft/world/item/TooltipFlag$Default chq$a
	advanced c
	creative d
	advanced ()Z d
	asCreative ()Lnet/minecraft/world/item/TooltipFlag$Default; c
	creative ()Z e
	isAdvanced ()Z a
	isCreative ()Z b
net/minecraft/world/item/TridentItem chr
	BASE_DAMAGE b
	SHOOT_POWER c
	THROW_THRESHOLD_TIME a
	defaultModifiers d
	canAttackBlock (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/player/Player;)Z a
	getDefaultAttributeModifiers (Lnet/minecraft/world/entity/EquipmentSlot;)Lcom/google/common/collect/Multimap; a
	getEnchantmentValue ()I c
	getUseAnimation (Lnet/minecraft/world/item/ItemStack;)Lnet/minecraft/world/item/UseAnim; c
	getUseDuration (Lnet/minecraft/world/item/ItemStack;)I b
	hurtEnemy (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/entity/LivingEntity;)Z a
	mineBlock (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/Level;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/LivingEntity;)Z a
	releaseUsing (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/LivingEntity;I)V a
	use (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResultHolder; a
net/minecraft/world/item/UseAnim chs
	$VALUES k
	BLOCK d
	BOW e
	BRUSH j
	CROSSBOW g
	DRINK c
	EAT b
	NONE a
	SPEAR f
	SPYGLASS h
	TOOT_HORN i
	$values ()[Lnet/minecraft/world/item/UseAnim; a
net/minecraft/world/item/Vanishable cht
net/minecraft/world/item/WritableBookItem chu
	makeSureTagIsValid (Lnet/minecraft/nbt/CompoundTag;)Z a
	use (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResultHolder; a
	useOn (Lnet/minecraft/world/item/context/UseOnContext;)Lnet/minecraft/world/InteractionResult; a
net/minecraft/world/item/WrittenBookItem chv
	MAX_GENERATION f
	MAX_PAGES e
	PAGE_EDIT_LENGTH c
	PAGE_LENGTH d
	TAG_AUTHOR i
	TAG_FILTERED_PAGES k
	TAG_FILTERED_TITLE h
	TAG_GENERATION r
	TAG_PAGES j
	TAG_RESOLVED s
	TAG_TITLE g
	TITLE_LENGTH a
	TITLE_MAX_LENGTH b
	appendHoverText (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/Level;Ljava/util/List;Lnet/minecraft/world/item/TooltipFlag;)V a
	getGeneration (Lnet/minecraft/world/item/ItemStack;)I d
	getName (Lnet/minecraft/world/item/ItemStack;)Lnet/minecraft/network/chat/Component; m
	getPageCount (Lnet/minecraft/world/item/ItemStack;)I k
	isFoil (Lnet/minecraft/world/item/ItemStack;)Z i
	makeSureTagIsValid (Lnet/minecraft/nbt/CompoundTag;)Z a
	resolveBookComponents (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/world/entity/player/Player;)Z a
	resolvePage (Lnet/minecraft/commands/CommandSourceStack;Lnet/minecraft/world/entity/player/Player;Ljava/lang/String;)Ljava/lang/String; a
	use (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;)Lnet/minecraft/world/InteractionResultHolder; a
	useOn (Lnet/minecraft/world/item/context/UseOnContext;)Lnet/minecraft/world/InteractionResult; a
net/minecraft/world/item/alchemy/Potion chw
	effects b
	name a
	byName (Ljava/lang/String;)Lnet/minecraft/world/item/alchemy/Potion; a
	getEffects ()Ljava/util/List; a
	getName (Ljava/lang/String;)Ljava/lang/String; b
	hasInstantEffects ()Z b
net/minecraft/world/item/alchemy/PotionBrewing chx
	ALLOWED_CONTAINER e
	ALLOWED_CONTAINERS d
	BREWING_TIME_SECONDS a
	CONTAINER_MIXES c
	POTION_MIXES b
	addContainer (Lnet/minecraft/world/item/Item;)V a
	addContainerRecipe (Lnet/minecraft/world/item/Item;Lnet/minecraft/world/item/Item;Lnet/minecraft/world/item/Item;)V a
	addMix (Lnet/minecraft/world/item/alchemy/Potion;Lnet/minecraft/world/item/Item;Lnet/minecraft/world/item/alchemy/Potion;)V a
	bootStrap ()V a
	hasContainerMix (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/item/ItemStack;)Z b
	hasMix (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/item/ItemStack;)Z a
	hasPotionMix (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/item/ItemStack;)Z c
	isBrewablePotion (Lnet/minecraft/world/item/alchemy/Potion;)Z a
	isContainerIngredient (Lnet/minecraft/world/item/ItemStack;)Z b
	isIngredient (Lnet/minecraft/world/item/ItemStack;)Z a
	isPotionIngredient (Lnet/minecraft/world/item/ItemStack;)Z c
	mix (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/item/ItemStack;)Lnet/minecraft/world/item/ItemStack; d
net/minecraft/world/item/alchemy/PotionBrewing$Mix chx$a
	from a
	ingredient b
	to c
net/minecraft/world/item/alchemy/PotionUtils chy
	EMPTY_COLOR d
	NO_EFFECT e
	TAG_CUSTOM_POTION_COLOR b
	TAG_CUSTOM_POTION_EFFECTS a
	TAG_POTION c
	addPotionTooltip (Ljava/util/List;Ljava/util/List;F)V a
	addPotionTooltip (Lnet/minecraft/world/item/ItemStack;Ljava/util/List;F)V a
	getAllEffects (Lnet/minecraft/nbt/CompoundTag;)Ljava/util/List; a
	getAllEffects (Lnet/minecraft/world/item/alchemy/Potion;Ljava/util/Collection;)Ljava/util/List; a
	getColor (Ljava/util/Collection;)I a
	getColor (Lnet/minecraft/world/item/ItemStack;)I c
	getColor (Lnet/minecraft/world/item/alchemy/Potion;)I a
	getCustomEffects (Lnet/minecraft/nbt/CompoundTag;)Ljava/util/List; b
	getCustomEffects (Lnet/minecraft/nbt/CompoundTag;Ljava/util/List;)V a
	getCustomEffects (Lnet/minecraft/world/item/ItemStack;)Ljava/util/List; b
	getMobEffects (Lnet/minecraft/world/item/ItemStack;)Ljava/util/List; a
	getPotion (Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/world/item/alchemy/Potion; c
	getPotion (Lnet/minecraft/world/item/ItemStack;)Lnet/minecraft/world/item/alchemy/Potion; d
	setCustomEffects (Lnet/minecraft/world/item/ItemStack;Ljava/util/Collection;)Lnet/minecraft/world/item/ItemStack; a
	setPotion (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/item/alchemy/Potion;)Lnet/minecraft/world/item/ItemStack; a
net/minecraft/world/item/alchemy/Potions chz
	AWKWARD f
	EMPTY b
	EMPTY_ID a
	FIRE_RESISTANCE n
	HARMING C
	HEALING A
	INVISIBILITY i
	LEAPING k
	LONG_FIRE_RESISTANCE o
	LONG_INVISIBILITY j
	LONG_LEAPING l
	LONG_NIGHT_VISION h
	LONG_POISON F
	LONG_REGENERATION I
	LONG_SLOWNESS t
	LONG_SLOW_FALLING R
	LONG_STRENGTH L
	LONG_SWIFTNESS q
	LONG_TURTLE_MASTER w
	LONG_WATER_BREATHING z
	LONG_WEAKNESS O
	LUCK P
	MUNDANE d
	NIGHT_VISION g
	POISON E
	REGENERATION H
	SLOWNESS s
	SLOW_FALLING Q
	STRENGTH K
	STRONG_HARMING D
	STRONG_HEALING B
	STRONG_LEAPING m
	STRONG_POISON G
	STRONG_REGENERATION J
	STRONG_SLOWNESS u
	STRONG_STRENGTH M
	STRONG_SWIFTNESS r
	STRONG_TURTLE_MASTER x
	SWIFTNESS p
	THICK e
	TURTLE_MASTER v
	WATER c
	WATER_BREATHING y
	WEAKNESS N
	register (Ljava/lang/String;Lnet/minecraft/world/item/alchemy/Potion;)Lnet/minecraft/world/item/alchemy/Potion; a
	register (Lnet/minecraft/resources/ResourceKey;Lnet/minecraft/world/item/alchemy/Potion;)Lnet/minecraft/world/item/alchemy/Potion; a
net/minecraft/world/item/armortrim/ArmorTrim cib
	CODEC a
	LOGGER c
	TAG_TRIM_ID b
	UPGRADE_TITLE d
	innerTexture g
	material e
	outerTexture h
	pattern f
	appendUpgradeHoverText (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/core/RegistryAccess;Ljava/util/List;)V a
	getColorPaletteSuffix (Lnet/minecraft/world/item/ArmorMaterial;)Ljava/lang/String; c
	getTrim (Lnet/minecraft/core/RegistryAccess;Lnet/minecraft/world/item/ItemStack;)Ljava/util/Optional; a
	hasPatternAndMaterial (Lnet/minecraft/core/Holder;Lnet/minecraft/core/Holder;)Z a
	innerTexture (Lnet/minecraft/world/item/ArmorMaterial;)Lnet/minecraft/resources/ResourceLocation; a
	material ()Lnet/minecraft/core/Holder; b
	outerTexture (Lnet/minecraft/world/item/ArmorMaterial;)Lnet/minecraft/resources/ResourceLocation; b
	pattern ()Lnet/minecraft/core/Holder; a
	setTrim (Lnet/minecraft/core/RegistryAccess;Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/item/armortrim/ArmorTrim;)Z a
net/minecraft/world/item/armortrim/TrimMaterial cic
	CODEC b
	DIRECT_CODEC a
	assetName c
	description g
	ingredient d
	itemModelIndex e
	overrideArmorMaterials f
	assetName ()Ljava/lang/String; a
	create (Ljava/lang/String;Lnet/minecraft/world/item/Item;FLnet/minecraft/network/chat/Component;Ljava/util/Map;)Lnet/minecraft/world/item/armortrim/TrimMaterial; a
	description ()Lnet/minecraft/network/chat/Component; e
	ingredient ()Lnet/minecraft/core/Holder; b
	itemModelIndex ()F c
	overrideArmorMaterials ()Ljava/util/Map; d
net/minecraft/world/item/armortrim/TrimMaterials cid
	AMETHYST j
	COPPER e
	DIAMOND h
	EMERALD g
	GOLD f
	IRON b
	LAPIS i
	NETHERITE c
	QUARTZ a
	REDSTONE d
	bootstrap (Lnet/minecraft/data/worldgen/BootstapContext;)V a
	getFromIngredient (Lnet/minecraft/core/RegistryAccess;Lnet/minecraft/world/item/ItemStack;)Ljava/util/Optional; a
	register (Lnet/minecraft/data/worldgen/BootstapContext;Lnet/minecraft/resources/ResourceKey;Lnet/minecraft/world/item/Item;Lnet/minecraft/network/chat/Style;F)V a
	register (Lnet/minecraft/data/worldgen/BootstapContext;Lnet/minecraft/resources/ResourceKey;Lnet/minecraft/world/item/Item;Lnet/minecraft/network/chat/Style;FLjava/util/Map;)V a
	registryKey (Ljava/lang/String;)Lnet/minecraft/resources/ResourceKey; a
net/minecraft/world/item/armortrim/TrimPattern cie
	CODEC b
	DIRECT_CODEC a
	assetId c
	description e
	templateItem d
	assetId ()Lnet/minecraft/resources/ResourceLocation; a
	copyWithStyle (Lnet/minecraft/core/Holder;)Lnet/minecraft/network/chat/Component; a
	description ()Lnet/minecraft/network/chat/Component; c
	templateItem ()Lnet/minecraft/core/Holder; b
net/minecraft/world/item/armortrim/TrimPatterns cif
	COAST c
	DUNE b
	EYE f
	HOST p
	RAISER o
	RIB j
	SENTRY a
	SHAPER m
	SILENCE n
	SNOUT i
	SPIRE k
	TIDE h
	VEX g
	WARD e
	WAYFINDER l
	WILD d
	bootstrap (Lnet/minecraft/data/worldgen/BootstapContext;)V a
	getFromTemplate (Lnet/minecraft/core/RegistryAccess;Lnet/minecraft/world/item/ItemStack;)Ljava/util/Optional; a
	register (Lnet/minecraft/data/worldgen/BootstapContext;Lnet/minecraft/world/item/Item;Lnet/minecraft/resources/ResourceKey;)V a
	registryKey (Ljava/lang/String;)Lnet/minecraft/resources/ResourceKey; a
net/minecraft/world/item/context/BlockPlaceContext cih
	relativePos b
	replaceClicked a
	at (Lnet/minecraft/world/item/context/BlockPlaceContext;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;)Lnet/minecraft/world/item/context/BlockPlaceContext; a
	canPlace ()Z b
	getClickedPos ()Lnet/minecraft/core/BlockPos; a
	getNearestLookingDirection ()Lnet/minecraft/core/Direction; d
	getNearestLookingDirections ()[Lnet/minecraft/core/Direction; f
	getNearestLookingVerticalDirection ()Lnet/minecraft/core/Direction; e
	replacingClickedOnBlock ()Z c
net/minecraft/world/item/context/DirectionalPlaceContext cii
	direction b
	canPlace ()Z b
	getClickedPos ()Lnet/minecraft/core/BlockPos; a
	getHorizontalDirection ()Lnet/minecraft/core/Direction; g
	getNearestLookingDirection ()Lnet/minecraft/core/Direction; d
	getNearestLookingDirections ()[Lnet/minecraft/core/Direction; f
	getRotation ()F i
	isSecondaryUseActive ()Z h
	replacingClickedOnBlock ()Z c
net/minecraft/world/item/context/UseOnContext cij
	hand b
	hitResult c
	itemStack e
	level d
	player a
	getClickLocation ()Lnet/minecraft/world/phys/Vec3; l
	getClickedFace ()Lnet/minecraft/core/Direction; k
	getClickedPos ()Lnet/minecraft/core/BlockPos; a
	getHand ()Lnet/minecraft/world/InteractionHand; p
	getHitResult ()Lnet/minecraft/world/phys/BlockHitResult; j
	getHorizontalDirection ()Lnet/minecraft/core/Direction; g
	getItemInHand ()Lnet/minecraft/world/item/ItemStack; n
	getLevel ()Lnet/minecraft/world/level/Level; q
	getPlayer ()Lnet/minecraft/world/entity/player/Player; o
	getRotation ()F i
	isInside ()Z m
	isSecondaryUseActive ()Z h
net/minecraft/world/item/crafting/AbstractCookingRecipe cil
	category h
	cookingTime g
	experience f
	group c
	id b
	ingredient d
	result e
	type a
	assemble (Lnet/minecraft/world/Container;Lnet/minecraft/core/RegistryAccess;)Lnet/minecraft/world/item/ItemStack; a
	canCraftInDimensions (II)Z a
	category ()Lnet/minecraft/world/item/crafting/CookingBookCategory; g
	getCookingTime ()I d
	getExperience ()F b
	getGroup ()Ljava/lang/String; c
	getId ()Lnet/minecraft/resources/ResourceLocation; e
	getIngredients ()Lnet/minecraft/core/NonNullList; a
	getResultItem (Lnet/minecraft/core/RegistryAccess;)Lnet/minecraft/world/item/ItemStack; a
	getType ()Lnet/minecraft/world/item/crafting/RecipeType; f
	matches (Lnet/minecraft/world/Container;Lnet/minecraft/world/level/Level;)Z a
net/minecraft/world/item/crafting/ArmorDyeRecipe cim
	assemble (Lnet/minecraft/world/Container;Lnet/minecraft/core/RegistryAccess;)Lnet/minecraft/world/item/ItemStack; a
	assemble (Lnet/minecraft/world/inventory/CraftingContainer;Lnet/minecraft/core/RegistryAccess;)Lnet/minecraft/world/item/ItemStack; a
	canCraftInDimensions (II)Z a
	getSerializer ()Lnet/minecraft/world/item/crafting/RecipeSerializer; aj_
	matches (Lnet/minecraft/world/Container;Lnet/minecraft/world/level/Level;)Z a
	matches (Lnet/minecraft/world/inventory/CraftingContainer;Lnet/minecraft/world/level/Level;)Z a
net/minecraft/world/item/crafting/BannerDuplicateRecipe cin
	assemble (Lnet/minecraft/world/Container;Lnet/minecraft/core/RegistryAccess;)Lnet/minecraft/world/item/ItemStack; a
	assemble (Lnet/minecraft/world/inventory/CraftingContainer;Lnet/minecraft/core/RegistryAccess;)Lnet/minecraft/world/item/ItemStack; a
	canCraftInDimensions (II)Z a
	getRemainingItems (Lnet/minecraft/world/Container;)Lnet/minecraft/core/NonNullList; a
	getRemainingItems (Lnet/minecraft/world/inventory/CraftingContainer;)Lnet/minecraft/core/NonNullList; a
	getSerializer ()Lnet/minecraft/world/item/crafting/RecipeSerializer; aj_
	matches (Lnet/minecraft/world/Container;Lnet/minecraft/world/level/Level;)Z a
	matches (Lnet/minecraft/world/inventory/CraftingContainer;Lnet/minecraft/world/level/Level;)Z a
net/minecraft/world/item/crafting/BlastingRecipe cio
	getSerializer ()Lnet/minecraft/world/item/crafting/RecipeSerializer; aj_
	getToastSymbol ()Lnet/minecraft/world/item/ItemStack; h
net/minecraft/world/item/crafting/BookCloningRecipe cip
	assemble (Lnet/minecraft/world/Container;Lnet/minecraft/core/RegistryAccess;)Lnet/minecraft/world/item/ItemStack; a
	assemble (Lnet/minecraft/world/inventory/CraftingContainer;Lnet/minecraft/core/RegistryAccess;)Lnet/minecraft/world/item/ItemStack; a
	canCraftInDimensions (II)Z a
	getRemainingItems (Lnet/minecraft/world/Container;)Lnet/minecraft/core/NonNullList; a
	getRemainingItems (Lnet/minecraft/world/inventory/CraftingContainer;)Lnet/minecraft/core/NonNullList; a
	getSerializer ()Lnet/minecraft/world/item/crafting/RecipeSerializer; aj_
	matches (Lnet/minecraft/world/Container;Lnet/minecraft/world/level/Level;)Z a
	matches (Lnet/minecraft/world/inventory/CraftingContainer;Lnet/minecraft/world/level/Level;)Z a
net/minecraft/world/item/crafting/CampfireCookingRecipe ciq
	getSerializer ()Lnet/minecraft/world/item/crafting/RecipeSerializer; aj_
	getToastSymbol ()Lnet/minecraft/world/item/ItemStack; h
net/minecraft/world/item/crafting/CookingBookCategory cir
	$VALUES f
	BLOCKS b
	CODEC d
	FOOD a
	MISC c
	name e
	$values ()[Lnet/minecraft/world/item/crafting/CookingBookCategory; a
	getSerializedName ()Ljava/lang/String; c
net/minecraft/world/item/crafting/CraftingBookCategory cis
	$VALUES g
	BUILDING a
	CODEC e
	EQUIPMENT c
	MISC d
	REDSTONE b
	name f
	$values ()[Lnet/minecraft/world/item/crafting/CraftingBookCategory; a
	getSerializedName ()Ljava/lang/String; c
net/minecraft/world/item/crafting/CraftingRecipe cit
	category ()Lnet/minecraft/world/item/crafting/CraftingBookCategory; d
	getType ()Lnet/minecraft/world/item/crafting/RecipeType; f
net/minecraft/world/item/crafting/CustomRecipe ciu
	category b
	id a
	category ()Lnet/minecraft/world/item/crafting/CraftingBookCategory; d
	getId ()Lnet/minecraft/resources/ResourceLocation; e
	getResultItem (Lnet/minecraft/core/RegistryAccess;)Lnet/minecraft/world/item/ItemStack; a
	isSpecial ()Z ai_
net/minecraft/world/item/crafting/DecoratedPotRecipe civ
	assemble (Lnet/minecraft/world/Container;Lnet/minecraft/core/RegistryAccess;)Lnet/minecraft/world/item/ItemStack; a
	assemble (Lnet/minecraft/world/inventory/CraftingContainer;Lnet/minecraft/core/RegistryAccess;)Lnet/minecraft/world/item/ItemStack; a
	canCraftInDimensions (II)Z a
	createDecoratedPotItem (Lnet/minecraft/world/level/block/entity/DecoratedPotBlockEntity$Decorations;)Lnet/minecraft/world/item/ItemStack; a
	getSerializer ()Lnet/minecraft/world/item/crafting/RecipeSerializer; aj_
	matches (Lnet/minecraft/world/Container;Lnet/minecraft/world/level/Level;)Z a
	matches (Lnet/minecraft/world/inventory/CraftingContainer;Lnet/minecraft/world/level/Level;)Z a
net/minecraft/world/item/crafting/FireworkRocketRecipe ciw
	GUNPOWDER_INGREDIENT b
	PAPER_INGREDIENT a
	STAR_INGREDIENT c
	assemble (Lnet/minecraft/world/Container;Lnet/minecraft/core/RegistryAccess;)Lnet/minecraft/world/item/ItemStack; a
	assemble (Lnet/minecraft/world/inventory/CraftingContainer;Lnet/minecraft/core/RegistryAccess;)Lnet/minecraft/world/item/ItemStack; a
	canCraftInDimensions (II)Z a
	getResultItem (Lnet/minecraft/core/RegistryAccess;)Lnet/minecraft/world/item/ItemStack; a
	getSerializer ()Lnet/minecraft/world/item/crafting/RecipeSerializer; aj_
	matches (Lnet/minecraft/world/Container;Lnet/minecraft/world/level/Level;)Z a
	matches (Lnet/minecraft/world/inventory/CraftingContainer;Lnet/minecraft/world/level/Level;)Z a
net/minecraft/world/item/crafting/FireworkStarFadeRecipe cix
	STAR_INGREDIENT a
	assemble (Lnet/minecraft/world/Container;Lnet/minecraft/core/RegistryAccess;)Lnet/minecraft/world/item/ItemStack; a
	assemble (Lnet/minecraft/world/inventory/CraftingContainer;Lnet/minecraft/core/RegistryAccess;)Lnet/minecraft/world/item/ItemStack; a
	canCraftInDimensions (II)Z a
	getSerializer ()Lnet/minecraft/world/item/crafting/RecipeSerializer; aj_
	matches (Lnet/minecraft/world/Container;Lnet/minecraft/world/level/Level;)Z a
	matches (Lnet/minecraft/world/inventory/CraftingContainer;Lnet/minecraft/world/level/Level;)Z a
net/minecraft/world/item/crafting/FireworkStarRecipe ciy
	FLICKER_INGREDIENT c
	GUNPOWDER_INGREDIENT e
	SHAPE_BY_ITEM d
	SHAPE_INGREDIENT a
	TRAIL_INGREDIENT b
	assemble (Lnet/minecraft/world/Container;Lnet/minecraft/core/RegistryAccess;)Lnet/minecraft/world/item/ItemStack; a
	assemble (Lnet/minecraft/world/inventory/CraftingContainer;Lnet/minecraft/core/RegistryAccess;)Lnet/minecraft/world/item/ItemStack; a
	canCraftInDimensions (II)Z a
	getResultItem (Lnet/minecraft/core/RegistryAccess;)Lnet/minecraft/world/item/ItemStack; a
	getSerializer ()Lnet/minecraft/world/item/crafting/RecipeSerializer; aj_
	matches (Lnet/minecraft/world/Container;Lnet/minecraft/world/level/Level;)Z a
	matches (Lnet/minecraft/world/inventory/CraftingContainer;Lnet/minecraft/world/level/Level;)Z a
net/minecraft/world/item/crafting/Ingredient ciz
	EMPTY a
	itemStacks c
	stackingIds d
	values b
	fromJson (Lcom/google/gson/JsonElement;)Lnet/minecraft/world/item/crafting/Ingredient; a
	fromJson (Lcom/google/gson/JsonElement;Z)Lnet/minecraft/world/item/crafting/Ingredient; a
	fromNetwork (Lnet/minecraft/network/FriendlyByteBuf;)Lnet/minecraft/world/item/crafting/Ingredient; b
	fromValues (Ljava/util/stream/Stream;)Lnet/minecraft/world/item/crafting/Ingredient; b
	getItems ()[Lnet/minecraft/world/item/ItemStack; a
	getStackingIds ()Lit/unimi/dsi/fastutil/ints/IntList; b
	isEmpty ()Z d
	of ()Lnet/minecraft/world/item/crafting/Ingredient; e
	of (Ljava/util/stream/Stream;)Lnet/minecraft/world/item/crafting/Ingredient; a
	of (Lnet/minecraft/tags/TagKey;)Lnet/minecraft/world/item/crafting/Ingredient; a
	of ([Lnet/minecraft/world/item/ItemStack;)Lnet/minecraft/world/item/crafting/Ingredient; a
	of ([Lnet/minecraft/world/level/ItemLike;)Lnet/minecraft/world/item/crafting/Ingredient; a
	test (Lnet/minecraft/world/item/ItemStack;)Z a
	toJson ()Lcom/google/gson/JsonElement; c
	toNetwork (Lnet/minecraft/network/FriendlyByteBuf;)V a
	valueFromJson (Lcom/google/gson/JsonObject;)Lnet/minecraft/world/item/crafting/Ingredient$Value; a
net/minecraft/world/item/crafting/Ingredient$ItemValue ciz$a
	item a
	getItems ()Ljava/util/Collection; a
	serialize ()Lcom/google/gson/JsonObject; b
net/minecraft/world/item/crafting/Ingredient$TagValue ciz$b
	tag a
	getItems ()Ljava/util/Collection; a
	serialize ()Lcom/google/gson/JsonObject; b
net/minecraft/world/item/crafting/Ingredient$Value ciz$c
	getItems ()Ljava/util/Collection; a
	serialize ()Lcom/google/gson/JsonObject; b
net/minecraft/world/item/crafting/MapCloningRecipe cja
	assemble (Lnet/minecraft/world/Container;Lnet/minecraft/core/RegistryAccess;)Lnet/minecraft/world/item/ItemStack; a
	assemble (Lnet/minecraft/world/inventory/CraftingContainer;Lnet/minecraft/core/RegistryAccess;)Lnet/minecraft/world/item/ItemStack; a
	canCraftInDimensions (II)Z a
	getSerializer ()Lnet/minecraft/world/item/crafting/RecipeSerializer; aj_
	matches (Lnet/minecraft/world/Container;Lnet/minecraft/world/level/Level;)Z a
	matches (Lnet/minecraft/world/inventory/CraftingContainer;Lnet/minecraft/world/level/Level;)Z a
net/minecraft/world/item/crafting/MapExtendingRecipe cjb
	assemble (Lnet/minecraft/world/Container;Lnet/minecraft/core/RegistryAccess;)Lnet/minecraft/world/item/ItemStack; a
	assemble (Lnet/minecraft/world/inventory/CraftingContainer;Lnet/minecraft/core/RegistryAccess;)Lnet/minecraft/world/item/ItemStack; a
	findFilledMap (Lnet/minecraft/world/inventory/CraftingContainer;)Lnet/minecraft/world/item/ItemStack; a
	getSerializer ()Lnet/minecraft/world/item/crafting/RecipeSerializer; aj_
	isSpecial ()Z ai_
	matches (Lnet/minecraft/world/Container;Lnet/minecraft/world/level/Level;)Z a
	matches (Lnet/minecraft/world/inventory/CraftingContainer;Lnet/minecraft/world/level/Level;)Z a
net/minecraft/world/item/crafting/Recipe cjc
	assemble (Lnet/minecraft/world/Container;Lnet/minecraft/core/RegistryAccess;)Lnet/minecraft/world/item/ItemStack; a
	canCraftInDimensions (II)Z a
	getGroup ()Ljava/lang/String; c
	getId ()Lnet/minecraft/resources/ResourceLocation; e
	getIngredients ()Lnet/minecraft/core/NonNullList; a
	getRemainingItems (Lnet/minecraft/world/Container;)Lnet/minecraft/core/NonNullList; a
	getResultItem (Lnet/minecraft/core/RegistryAccess;)Lnet/minecraft/world/item/ItemStack; a
	getSerializer ()Lnet/minecraft/world/item/crafting/RecipeSerializer; aj_
	getToastSymbol ()Lnet/minecraft/world/item/ItemStack; h
	getType ()Lnet/minecraft/world/item/crafting/RecipeType; f
	isIncomplete ()Z j
	isSpecial ()Z ai_
	matches (Lnet/minecraft/world/Container;Lnet/minecraft/world/level/Level;)Z a
	showNotification ()Z i
net/minecraft/world/item/crafting/RecipeManager cjd
	GSON a
	LOGGER b
	byName d
	hasErrors e
	recipes c
	apply (Ljava/lang/Object;Lnet/minecraft/server/packs/resources/ResourceManager;Lnet/minecraft/util/profiling/ProfilerFiller;)V a
	apply (Ljava/util/Map;Lnet/minecraft/server/packs/resources/ResourceManager;Lnet/minecraft/util/profiling/ProfilerFiller;)V a
	byKey (Lnet/minecraft/resources/ResourceLocation;)Ljava/util/Optional; a
	byType (Lnet/minecraft/world/item/crafting/RecipeType;)Ljava/util/Map; c
	createCheck (Lnet/minecraft/world/item/crafting/RecipeType;)Lnet/minecraft/world/item/crafting/RecipeManager$CachedCheck; b
	fromJson (Lnet/minecraft/resources/ResourceLocation;Lcom/google/gson/JsonObject;)Lnet/minecraft/world/item/crafting/Recipe; a
	getAllRecipesFor (Lnet/minecraft/world/item/crafting/RecipeType;)Ljava/util/List; a
	getRecipeFor (Lnet/minecraft/world/item/crafting/RecipeType;Lnet/minecraft/world/Container;Lnet/minecraft/world/level/Level;)Ljava/util/Optional; a
	getRecipeFor (Lnet/minecraft/world/item/crafting/RecipeType;Lnet/minecraft/world/Container;Lnet/minecraft/world/level/Level;Lnet/minecraft/resources/ResourceLocation;)Ljava/util/Optional; a
	getRecipeIds ()Ljava/util/stream/Stream; d
	getRecipes ()Ljava/util/Collection; b
	getRecipesFor (Lnet/minecraft/world/item/crafting/RecipeType;Lnet/minecraft/world/Container;Lnet/minecraft/world/level/Level;)Ljava/util/List; b
	getRemainingItemsFor (Lnet/minecraft/world/item/crafting/RecipeType;Lnet/minecraft/world/Container;Lnet/minecraft/world/level/Level;)Lnet/minecraft/core/NonNullList; c
	hadErrorsLoading ()Z a
	replaceRecipes (Ljava/lang/Iterable;)V a
net/minecraft/world/item/crafting/RecipeManager$CachedCheck cjd$a
	getRecipeFor (Lnet/minecraft/world/Container;Lnet/minecraft/world/level/Level;)Ljava/util/Optional; a
net/minecraft/world/item/crafting/RecipeSerializer cje
	ARMOR_DYE c
	BANNER_DUPLICATE k
	BLASTING_RECIPE q
	BOOK_CLONING d
	CAMPFIRE_COOKING_RECIPE s
	DECORATED_POT_RECIPE w
	FIREWORK_ROCKET g
	FIREWORK_STAR h
	FIREWORK_STAR_FADE i
	MAP_CLONING e
	MAP_EXTENDING f
	REPAIR_ITEM o
	SHAPED_RECIPE a
	SHAPELESS_RECIPE b
	SHIELD_DECORATION l
	SHULKER_BOX_COLORING m
	SMELTING_RECIPE p
	SMITHING_TRANSFORM u
	SMITHING_TRIM v
	SMOKING_RECIPE r
	STONECUTTER t
	SUSPICIOUS_STEW n
	TIPPED_ARROW j
	fromJson (Lnet/minecraft/resources/ResourceLocation;Lcom/google/gson/JsonObject;)Lnet/minecraft/world/item/crafting/Recipe; a
	fromNetwork (Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/network/FriendlyByteBuf;)Lnet/minecraft/world/item/crafting/Recipe; a
	register (Ljava/lang/String;Lnet/minecraft/world/item/crafting/RecipeSerializer;)Lnet/minecraft/world/item/crafting/RecipeSerializer; a
	toNetwork (Lnet/minecraft/network/FriendlyByteBuf;Lnet/minecraft/world/item/crafting/Recipe;)V a
net/minecraft/world/item/crafting/RecipeType cjf
	BLASTING c
	CAMPFIRE_COOKING e
	CRAFTING a
	SMELTING b
	SMITHING g
	SMOKING d
	STONECUTTING f
	register (Ljava/lang/String;)Lnet/minecraft/world/item/crafting/RecipeType; a
net/minecraft/world/item/crafting/RepairItemRecipe cjg
	assemble (Lnet/minecraft/world/Container;Lnet/minecraft/core/RegistryAccess;)Lnet/minecraft/world/item/ItemStack; a
	assemble (Lnet/minecraft/world/inventory/CraftingContainer;Lnet/minecraft/core/RegistryAccess;)Lnet/minecraft/world/item/ItemStack; a
	canCraftInDimensions (II)Z a
	getSerializer ()Lnet/minecraft/world/item/crafting/RecipeSerializer; aj_
	matches (Lnet/minecraft/world/Container;Lnet/minecraft/world/level/Level;)Z a
	matches (Lnet/minecraft/world/inventory/CraftingContainer;Lnet/minecraft/world/level/Level;)Z a
net/minecraft/world/item/crafting/ShapedRecipe cjh
	category g
	group f
	height b
	id e
	recipeItems c
	result d
	showNotification h
	width a
	assemble (Lnet/minecraft/world/Container;Lnet/minecraft/core/RegistryAccess;)Lnet/minecraft/world/item/ItemStack; a
	assemble (Lnet/minecraft/world/inventory/CraftingContainer;Lnet/minecraft/core/RegistryAccess;)Lnet/minecraft/world/item/ItemStack; a
	canCraftInDimensions (II)Z a
	category ()Lnet/minecraft/world/item/crafting/CraftingBookCategory; d
	dissolvePattern ([Ljava/lang/String;Ljava/util/Map;II)Lnet/minecraft/core/NonNullList; a
	firstNonSpace (Ljava/lang/String;)I a
	getGroup ()Ljava/lang/String; c
	getHeight ()I l
	getId ()Lnet/minecraft/resources/ResourceLocation; e
	getIngredients ()Lnet/minecraft/core/NonNullList; a
	getResultItem (Lnet/minecraft/core/RegistryAccess;)Lnet/minecraft/world/item/ItemStack; a
	getSerializer ()Lnet/minecraft/world/item/crafting/RecipeSerializer; aj_
	getWidth ()I k
	isIncomplete ()Z j
	itemFromJson (Lcom/google/gson/JsonObject;)Lnet/minecraft/world/item/Item; b
	itemStackFromJson (Lcom/google/gson/JsonObject;)Lnet/minecraft/world/item/ItemStack; a
	keyFromJson (Lcom/google/gson/JsonObject;)Ljava/util/Map; c
	lastNonSpace (Ljava/lang/String;)I b
	matches (Lnet/minecraft/world/Container;Lnet/minecraft/world/level/Level;)Z a
	matches (Lnet/minecraft/world/inventory/CraftingContainer;IIZ)Z a
	matches (Lnet/minecraft/world/inventory/CraftingContainer;Lnet/minecraft/world/level/Level;)Z a
	patternFromJson (Lcom/google/gson/JsonArray;)[Ljava/lang/String; a
	showNotification ()Z i
	shrink ([Ljava/lang/String;)[Ljava/lang/String; a
net/minecraft/world/item/crafting/ShapedRecipe$Serializer cjh$a
	fromJson (Lnet/minecraft/resources/ResourceLocation;Lcom/google/gson/JsonObject;)Lnet/minecraft/world/item/crafting/Recipe; a
	fromJson (Lnet/minecraft/resources/ResourceLocation;Lcom/google/gson/JsonObject;)Lnet/minecraft/world/item/crafting/ShapedRecipe; b
	fromNetwork (Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/network/FriendlyByteBuf;)Lnet/minecraft/world/item/crafting/Recipe; a
	fromNetwork (Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/network/FriendlyByteBuf;)Lnet/minecraft/world/item/crafting/ShapedRecipe; b
	toNetwork (Lnet/minecraft/network/FriendlyByteBuf;Lnet/minecraft/world/item/crafting/Recipe;)V a
	toNetwork (Lnet/minecraft/network/FriendlyByteBuf;Lnet/minecraft/world/item/crafting/ShapedRecipe;)V a
net/minecraft/world/item/crafting/ShapelessRecipe cji
	category c
	group b
	id a
	ingredients e
	result d
	assemble (Lnet/minecraft/world/Container;Lnet/minecraft/core/RegistryAccess;)Lnet/minecraft/world/item/ItemStack; a
	assemble (Lnet/minecraft/world/inventory/CraftingContainer;Lnet/minecraft/core/RegistryAccess;)Lnet/minecraft/world/item/ItemStack; a
	canCraftInDimensions (II)Z a
	category ()Lnet/minecraft/world/item/crafting/CraftingBookCategory; d
	getGroup ()Ljava/lang/String; c
	getId ()Lnet/minecraft/resources/ResourceLocation; e
	getIngredients ()Lnet/minecraft/core/NonNullList; a
	getResultItem (Lnet/minecraft/core/RegistryAccess;)Lnet/minecraft/world/item/ItemStack; a
	getSerializer ()Lnet/minecraft/world/item/crafting/RecipeSerializer; aj_
	matches (Lnet/minecraft/world/Container;Lnet/minecraft/world/level/Level;)Z a
	matches (Lnet/minecraft/world/inventory/CraftingContainer;Lnet/minecraft/world/level/Level;)Z a
net/minecraft/world/item/crafting/ShapelessRecipe$Serializer cji$a
	fromJson (Lnet/minecraft/resources/ResourceLocation;Lcom/google/gson/JsonObject;)Lnet/minecraft/world/item/crafting/Recipe; a
	fromJson (Lnet/minecraft/resources/ResourceLocation;Lcom/google/gson/JsonObject;)Lnet/minecraft/world/item/crafting/ShapelessRecipe; b
	fromNetwork (Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/network/FriendlyByteBuf;)Lnet/minecraft/world/item/crafting/Recipe; a
	fromNetwork (Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/network/FriendlyByteBuf;)Lnet/minecraft/world/item/crafting/ShapelessRecipe; b
	itemsFromJson (Lcom/google/gson/JsonArray;)Lnet/minecraft/core/NonNullList; a
	toNetwork (Lnet/minecraft/network/FriendlyByteBuf;Lnet/minecraft/world/item/crafting/Recipe;)V a
	toNetwork (Lnet/minecraft/network/FriendlyByteBuf;Lnet/minecraft/world/item/crafting/ShapelessRecipe;)V a
net/minecraft/world/item/crafting/ShieldDecorationRecipe cjj
	assemble (Lnet/minecraft/world/Container;Lnet/minecraft/core/RegistryAccess;)Lnet/minecraft/world/item/ItemStack; a
	assemble (Lnet/minecraft/world/inventory/CraftingContainer;Lnet/minecraft/core/RegistryAccess;)Lnet/minecraft/world/item/ItemStack; a
	canCraftInDimensions (II)Z a
	getSerializer ()Lnet/minecraft/world/item/crafting/RecipeSerializer; aj_
	matches (Lnet/minecraft/world/Container;Lnet/minecraft/world/level/Level;)Z a
	matches (Lnet/minecraft/world/inventory/CraftingContainer;Lnet/minecraft/world/level/Level;)Z a
net/minecraft/world/item/crafting/ShulkerBoxColoring cjk
	assemble (Lnet/minecraft/world/Container;Lnet/minecraft/core/RegistryAccess;)Lnet/minecraft/world/item/ItemStack; a
	assemble (Lnet/minecraft/world/inventory/CraftingContainer;Lnet/minecraft/core/RegistryAccess;)Lnet/minecraft/world/item/ItemStack; a
	canCraftInDimensions (II)Z a
	getSerializer ()Lnet/minecraft/world/item/crafting/RecipeSerializer; aj_
	matches (Lnet/minecraft/world/Container;Lnet/minecraft/world/level/Level;)Z a
	matches (Lnet/minecraft/world/inventory/CraftingContainer;Lnet/minecraft/world/level/Level;)Z a
net/minecraft/world/item/crafting/SimpleCookingSerializer cjl
	defaultCookingTime x
	factory y
	fromJson (Lnet/minecraft/resources/ResourceLocation;Lcom/google/gson/JsonObject;)Lnet/minecraft/world/item/crafting/AbstractCookingRecipe; b
	fromJson (Lnet/minecraft/resources/ResourceLocation;Lcom/google/gson/JsonObject;)Lnet/minecraft/world/item/crafting/Recipe; a
	fromNetwork (Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/network/FriendlyByteBuf;)Lnet/minecraft/world/item/crafting/AbstractCookingRecipe; b
	fromNetwork (Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/network/FriendlyByteBuf;)Lnet/minecraft/world/item/crafting/Recipe; a
	toNetwork (Lnet/minecraft/network/FriendlyByteBuf;Lnet/minecraft/world/item/crafting/AbstractCookingRecipe;)V a
	toNetwork (Lnet/minecraft/network/FriendlyByteBuf;Lnet/minecraft/world/item/crafting/Recipe;)V a
net/minecraft/world/item/crafting/SimpleCookingSerializer$CookieBaker cjl$a
net/minecraft/world/item/crafting/SimpleCraftingRecipeSerializer cjm
	constructor x
	fromJson (Lnet/minecraft/resources/ResourceLocation;Lcom/google/gson/JsonObject;)Lnet/minecraft/world/item/crafting/CraftingRecipe; b
	fromJson (Lnet/minecraft/resources/ResourceLocation;Lcom/google/gson/JsonObject;)Lnet/minecraft/world/item/crafting/Recipe; a
	fromNetwork (Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/network/FriendlyByteBuf;)Lnet/minecraft/world/item/crafting/CraftingRecipe; b
	fromNetwork (Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/network/FriendlyByteBuf;)Lnet/minecraft/world/item/crafting/Recipe; a
	toNetwork (Lnet/minecraft/network/FriendlyByteBuf;Lnet/minecraft/world/item/crafting/CraftingRecipe;)V a
	toNetwork (Lnet/minecraft/network/FriendlyByteBuf;Lnet/minecraft/world/item/crafting/Recipe;)V a
net/minecraft/world/item/crafting/SimpleCraftingRecipeSerializer$Factory cjm$a
net/minecraft/world/item/crafting/SingleItemRecipe cjn
	group d
	id c
	ingredient a
	result b
	serializer f
	type e
	assemble (Lnet/minecraft/world/Container;Lnet/minecraft/core/RegistryAccess;)Lnet/minecraft/world/item/ItemStack; a
	canCraftInDimensions (II)Z a
	getGroup ()Ljava/lang/String; c
	getId ()Lnet/minecraft/resources/ResourceLocation; e
	getIngredients ()Lnet/minecraft/core/NonNullList; a
	getResultItem (Lnet/minecraft/core/RegistryAccess;)Lnet/minecraft/world/item/ItemStack; a
	getSerializer ()Lnet/minecraft/world/item/crafting/RecipeSerializer; aj_
	getType ()Lnet/minecraft/world/item/crafting/RecipeType; f
net/minecraft/world/item/crafting/SingleItemRecipe$Serializer cjn$a
	factory x
	fromJson (Lnet/minecraft/resources/ResourceLocation;Lcom/google/gson/JsonObject;)Lnet/minecraft/world/item/crafting/Recipe; a
	fromJson (Lnet/minecraft/resources/ResourceLocation;Lcom/google/gson/JsonObject;)Lnet/minecraft/world/item/crafting/SingleItemRecipe; b
	fromNetwork (Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/network/FriendlyByteBuf;)Lnet/minecraft/world/item/crafting/Recipe; a
	fromNetwork (Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/network/FriendlyByteBuf;)Lnet/minecraft/world/item/crafting/SingleItemRecipe; b
	toNetwork (Lnet/minecraft/network/FriendlyByteBuf;Lnet/minecraft/world/item/crafting/Recipe;)V a
	toNetwork (Lnet/minecraft/network/FriendlyByteBuf;Lnet/minecraft/world/item/crafting/SingleItemRecipe;)V a
net/minecraft/world/item/crafting/SingleItemRecipe$Serializer$SingleItemMaker cjn$a$a
net/minecraft/world/item/crafting/SmeltingRecipe cjo
	getSerializer ()Lnet/minecraft/world/item/crafting/RecipeSerializer; aj_
	getToastSymbol ()Lnet/minecraft/world/item/ItemStack; h
net/minecraft/world/item/crafting/SmithingRecipe cjp
	canCraftInDimensions (II)Z a
	getToastSymbol ()Lnet/minecraft/world/item/ItemStack; h
	getType ()Lnet/minecraft/world/item/crafting/RecipeType; f
	isAdditionIngredient (Lnet/minecraft/world/item/ItemStack;)Z c
	isBaseIngredient (Lnet/minecraft/world/item/ItemStack;)Z b
	isTemplateIngredient (Lnet/minecraft/world/item/ItemStack;)Z a
net/minecraft/world/item/crafting/SmithingTransformRecipe cjq
	addition d
	base c
	id a
	result e
	template b
	assemble (Lnet/minecraft/world/Container;Lnet/minecraft/core/RegistryAccess;)Lnet/minecraft/world/item/ItemStack; a
	getId ()Lnet/minecraft/resources/ResourceLocation; e
	getResultItem (Lnet/minecraft/core/RegistryAccess;)Lnet/minecraft/world/item/ItemStack; a
	getSerializer ()Lnet/minecraft/world/item/crafting/RecipeSerializer; aj_
	isAdditionIngredient (Lnet/minecraft/world/item/ItemStack;)Z c
	isBaseIngredient (Lnet/minecraft/world/item/ItemStack;)Z b
	isIncomplete ()Z j
	isTemplateIngredient (Lnet/minecraft/world/item/ItemStack;)Z a
	matches (Lnet/minecraft/world/Container;Lnet/minecraft/world/level/Level;)Z a
net/minecraft/world/item/crafting/SmithingTransformRecipe$Serializer cjq$a
	fromJson (Lnet/minecraft/resources/ResourceLocation;Lcom/google/gson/JsonObject;)Lnet/minecraft/world/item/crafting/Recipe; a
	fromJson (Lnet/minecraft/resources/ResourceLocation;Lcom/google/gson/JsonObject;)Lnet/minecraft/world/item/crafting/SmithingTransformRecipe; b
	fromNetwork (Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/network/FriendlyByteBuf;)Lnet/minecraft/world/item/crafting/Recipe; a
	fromNetwork (Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/network/FriendlyByteBuf;)Lnet/minecraft/world/item/crafting/SmithingTransformRecipe; b
	toNetwork (Lnet/minecraft/network/FriendlyByteBuf;Lnet/minecraft/world/item/crafting/Recipe;)V a
	toNetwork (Lnet/minecraft/network/FriendlyByteBuf;Lnet/minecraft/world/item/crafting/SmithingTransformRecipe;)V a
net/minecraft/world/item/crafting/SmithingTrimRecipe cjr
	addition d
	base c
	id a
	template b
	assemble (Lnet/minecraft/world/Container;Lnet/minecraft/core/RegistryAccess;)Lnet/minecraft/world/item/ItemStack; a
	getId ()Lnet/minecraft/resources/ResourceLocation; e
	getResultItem (Lnet/minecraft/core/RegistryAccess;)Lnet/minecraft/world/item/ItemStack; a
	getSerializer ()Lnet/minecraft/world/item/crafting/RecipeSerializer; aj_
	isAdditionIngredient (Lnet/minecraft/world/item/ItemStack;)Z c
	isBaseIngredient (Lnet/minecraft/world/item/ItemStack;)Z b
	isIncomplete ()Z j
	isTemplateIngredient (Lnet/minecraft/world/item/ItemStack;)Z a
	matches (Lnet/minecraft/world/Container;Lnet/minecraft/world/level/Level;)Z a
net/minecraft/world/item/crafting/SmithingTrimRecipe$Serializer cjr$a
	fromJson (Lnet/minecraft/resources/ResourceLocation;Lcom/google/gson/JsonObject;)Lnet/minecraft/world/item/crafting/Recipe; a
	fromJson (Lnet/minecraft/resources/ResourceLocation;Lcom/google/gson/JsonObject;)Lnet/minecraft/world/item/crafting/SmithingTrimRecipe; b
	fromNetwork (Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/network/FriendlyByteBuf;)Lnet/minecraft/world/item/crafting/Recipe; a
	fromNetwork (Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/network/FriendlyByteBuf;)Lnet/minecraft/world/item/crafting/SmithingTrimRecipe; b
	toNetwork (Lnet/minecraft/network/FriendlyByteBuf;Lnet/minecraft/world/item/crafting/Recipe;)V a
	toNetwork (Lnet/minecraft/network/FriendlyByteBuf;Lnet/minecraft/world/item/crafting/SmithingTrimRecipe;)V a
net/minecraft/world/item/crafting/SmokingRecipe cjs
	getSerializer ()Lnet/minecraft/world/item/crafting/RecipeSerializer; aj_
	getToastSymbol ()Lnet/minecraft/world/item/ItemStack; h
net/minecraft/world/item/crafting/StonecutterRecipe cjt
	getToastSymbol ()Lnet/minecraft/world/item/ItemStack; h
	matches (Lnet/minecraft/world/Container;Lnet/minecraft/world/level/Level;)Z a
net/minecraft/world/item/crafting/SuspiciousStewRecipe cju
	assemble (Lnet/minecraft/world/Container;Lnet/minecraft/core/RegistryAccess;)Lnet/minecraft/world/item/ItemStack; a
	assemble (Lnet/minecraft/world/inventory/CraftingContainer;Lnet/minecraft/core/RegistryAccess;)Lnet/minecraft/world/item/ItemStack; a
	canCraftInDimensions (II)Z a
	getSerializer ()Lnet/minecraft/world/item/crafting/RecipeSerializer; aj_
	matches (Lnet/minecraft/world/Container;Lnet/minecraft/world/level/Level;)Z a
	matches (Lnet/minecraft/world/inventory/CraftingContainer;Lnet/minecraft/world/level/Level;)Z a
net/minecraft/world/item/crafting/TippedArrowRecipe cjv
	assemble (Lnet/minecraft/world/Container;Lnet/minecraft/core/RegistryAccess;)Lnet/minecraft/world/item/ItemStack; a
	assemble (Lnet/minecraft/world/inventory/CraftingContainer;Lnet/minecraft/core/RegistryAccess;)Lnet/minecraft/world/item/ItemStack; a
	canCraftInDimensions (II)Z a
	getSerializer ()Lnet/minecraft/world/item/crafting/RecipeSerializer; aj_
	matches (Lnet/minecraft/world/Container;Lnet/minecraft/world/level/Level;)Z a
	matches (Lnet/minecraft/world/inventory/CraftingContainer;Lnet/minecraft/world/level/Level;)Z a
net/minecraft/world/item/enchantment/ArrowDamageEnchantment cjx
	getMaxCost (I)I b
	getMaxLevel ()I a
	getMinCost (I)I a
net/minecraft/world/item/enchantment/ArrowFireEnchantment cjy
	getMaxCost (I)I b
	getMinCost (I)I a
net/minecraft/world/item/enchantment/ArrowInfiniteEnchantment cjz
	checkCompatibility (Lnet/minecraft/world/item/enchantment/Enchantment;)Z a
	getMaxCost (I)I b
	getMinCost (I)I a
net/minecraft/world/item/enchantment/ArrowKnockbackEnchantment cka
	getMaxCost (I)I b
	getMaxLevel ()I a
	getMinCost (I)I a
net/minecraft/world/item/enchantment/ArrowPiercingEnchantment ckb
	checkCompatibility (Lnet/minecraft/world/item/enchantment/Enchantment;)Z a
	getMaxCost (I)I b
	getMaxLevel ()I a
	getMinCost (I)I a
net/minecraft/world/item/enchantment/BindingCurseEnchantment ckc
	canEnchant (Lnet/minecraft/world/item/ItemStack;)Z a
	getMaxCost (I)I b
	getMinCost (I)I a
	isCurse ()Z c
	isTreasureOnly ()Z b
net/minecraft/world/item/enchantment/DamageEnchantment ckd
	ALL a
	ARTHROPODS c
	LEVEL_COST i
	LEVEL_COST_SPAN j
	MIN_COST h
	NAMES g
	UNDEAD b
	type d
	canEnchant (Lnet/minecraft/world/item/ItemStack;)Z a
	checkCompatibility (Lnet/minecraft/world/item/enchantment/Enchantment;)Z a
	doPostAttack (Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/entity/Entity;I)V a
	getDamageBonus (ILnet/minecraft/world/entity/MobType;)F a
	getMaxCost (I)I b
	getMaxLevel ()I a
	getMinCost (I)I a
net/minecraft/world/item/enchantment/DigDurabilityEnchantment cke
	canEnchant (Lnet/minecraft/world/item/ItemStack;)Z a
	getMaxCost (I)I b
	getMaxLevel ()I a
	getMinCost (I)I a
	shouldIgnoreDurabilityDrop (Lnet/minecraft/world/item/ItemStack;ILnet/minecraft/util/RandomSource;)Z a
net/minecraft/world/item/enchantment/DiggingEnchantment ckf
	canEnchant (Lnet/minecraft/world/item/ItemStack;)Z a
	getMaxCost (I)I b
	getMaxLevel ()I a
	getMinCost (I)I a
net/minecraft/world/item/enchantment/Enchantment ckg
	category e
	descriptionId f
	rarity b
	slots a
	byId (I)Lnet/minecraft/world/item/enchantment/Enchantment; c
	canEnchant (Lnet/minecraft/world/item/ItemStack;)Z a
	checkCompatibility (Lnet/minecraft/world/item/enchantment/Enchantment;)Z a
	doPostAttack (Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/entity/Entity;I)V a
	doPostHurt (Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/entity/Entity;I)V b
	getDamageBonus (ILnet/minecraft/world/entity/MobType;)F a
	getDamageProtection (ILnet/minecraft/world/damagesource/DamageSource;)I a
	getDescriptionId ()Ljava/lang/String; g
	getFullname (I)Lnet/minecraft/network/chat/Component; d
	getMaxCost (I)I b
	getMaxLevel ()I a
	getMinCost (I)I a
	getMinLevel ()I e
	getOrCreateDescriptionId ()Ljava/lang/String; f
	getRarity ()Lnet/minecraft/world/item/enchantment/Enchantment$Rarity; d
	getSlotItems (Lnet/minecraft/world/entity/LivingEntity;)Ljava/util/Map; a
	isCompatibleWith (Lnet/minecraft/world/item/enchantment/Enchantment;)Z b
	isCurse ()Z c
	isDiscoverable ()Z i
	isTradeable ()Z h
	isTreasureOnly ()Z b
net/minecraft/world/item/enchantment/Enchantment$Rarity ckg$a
	$VALUES f
	COMMON a
	RARE c
	UNCOMMON b
	VERY_RARE d
	weight e
	$values ()[Lnet/minecraft/world/item/enchantment/Enchantment$Rarity; b
	getWeight ()I a
net/minecraft/world/item/enchantment/EnchantmentCategory ckh
	$VALUES o
	ARMOR a
	ARMOR_CHEST d
	ARMOR_FEET b
	ARMOR_HEAD e
	ARMOR_LEGS c
	BOW k
	BREAKABLE j
	CROSSBOW m
	DIGGER g
	FISHING_ROD h
	TRIDENT i
	VANISHABLE n
	WEAPON f
	WEARABLE l
	$values ()[Lnet/minecraft/world/item/enchantment/EnchantmentCategory; a
	canEnchant (Lnet/minecraft/world/item/Item;)Z a
net/minecraft/world/item/enchantment/EnchantmentHelper cki
	SWIFT_SNEAK_EXTRA_FACTOR c
	TAG_ENCH_ID a
	TAG_ENCH_LEVEL b
	deserializeEnchantments (Lnet/minecraft/nbt/ListTag;)Ljava/util/Map; a
	doPostDamageEffects (Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/entity/Entity;)V b
	doPostHurtEffects (Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/entity/Entity;)V a
	enchantItem (Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/item/ItemStack;IZ)Lnet/minecraft/world/item/ItemStack; a
	filterCompatibleEnchantments (Ljava/util/List;Lnet/minecraft/world/item/enchantment/EnchantmentInstance;)V a
	getAvailableEnchantmentResults (ILnet/minecraft/world/item/ItemStack;Z)Ljava/util/List; a
	getBlockEfficiency (Lnet/minecraft/world/entity/LivingEntity;)I g
	getDamageBonus (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/entity/MobType;)F a
	getDamageProtection (Ljava/lang/Iterable;Lnet/minecraft/world/damagesource/DamageSource;)I a
	getDepthStrider (Lnet/minecraft/world/entity/LivingEntity;)I f
	getEnchantmentCost (Lnet/minecraft/util/RandomSource;IILnet/minecraft/world/item/ItemStack;)I a
	getEnchantmentId (Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/resources/ResourceLocation; b
	getEnchantmentId (Lnet/minecraft/world/item/enchantment/Enchantment;)Lnet/minecraft/resources/ResourceLocation; a
	getEnchantmentLevel (Lnet/minecraft/nbt/CompoundTag;)I a
	getEnchantmentLevel (Lnet/minecraft/world/item/enchantment/Enchantment;Lnet/minecraft/world/entity/LivingEntity;)I a
	getEnchantments (Lnet/minecraft/world/item/ItemStack;)Ljava/util/Map; a
	getFireAspect (Lnet/minecraft/world/entity/LivingEntity;)I d
	getFishingLuckBonus (Lnet/minecraft/world/item/ItemStack;)I b
	getFishingSpeedBonus (Lnet/minecraft/world/item/ItemStack;)I c
	getItemEnchantmentLevel (Lnet/minecraft/world/item/enchantment/Enchantment;Lnet/minecraft/world/item/ItemStack;)I a
	getKnockbackBonus (Lnet/minecraft/world/entity/LivingEntity;)I c
	getLoyalty (Lnet/minecraft/world/item/ItemStack;)I g
	getMobLooting (Lnet/minecraft/world/entity/LivingEntity;)I h
	getRandomItemWith (Lnet/minecraft/world/item/enchantment/Enchantment;Lnet/minecraft/world/entity/LivingEntity;)Ljava/util/Map$Entry; b
	getRandomItemWith (Lnet/minecraft/world/item/enchantment/Enchantment;Lnet/minecraft/world/entity/LivingEntity;Ljava/util/function/Predicate;)Ljava/util/Map$Entry; a
	getRespiration (Lnet/minecraft/world/entity/LivingEntity;)I e
	getRiptide (Lnet/minecraft/world/item/ItemStack;)I h
	getSneakingSpeedBonus (Lnet/minecraft/world/entity/LivingEntity;)F b
	getSweepingDamageRatio (Lnet/minecraft/world/entity/LivingEntity;)F a
	hasAquaAffinity (Lnet/minecraft/world/entity/LivingEntity;)Z i
	hasBindingCurse (Lnet/minecraft/world/item/ItemStack;)Z d
	hasChanneling (Lnet/minecraft/world/item/ItemStack;)Z i
	hasFrostWalker (Lnet/minecraft/world/entity/LivingEntity;)Z j
	hasSilkTouch (Lnet/minecraft/world/item/ItemStack;)Z f
	hasSoulSpeed (Lnet/minecraft/world/entity/LivingEntity;)Z k
	hasVanishingCurse (Lnet/minecraft/world/item/ItemStack;)Z e
	isEnchantmentCompatible (Ljava/util/Collection;Lnet/minecraft/world/item/enchantment/Enchantment;)Z a
	runIterationOnInventory (Lnet/minecraft/world/item/enchantment/EnchantmentHelper$EnchantmentVisitor;Ljava/lang/Iterable;)V a
	runIterationOnItem (Lnet/minecraft/world/item/enchantment/EnchantmentHelper$EnchantmentVisitor;Lnet/minecraft/world/item/ItemStack;)V a
	selectEnchantment (Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/item/ItemStack;IZ)Ljava/util/List; b
	setEnchantmentLevel (Lnet/minecraft/nbt/CompoundTag;I)V a
	setEnchantments (Ljava/util/Map;Lnet/minecraft/world/item/ItemStack;)V a
	storeEnchantment (Lnet/minecraft/resources/ResourceLocation;I)Lnet/minecraft/nbt/CompoundTag; a
net/minecraft/world/item/enchantment/EnchantmentHelper$EnchantmentVisitor cki$a
net/minecraft/world/item/enchantment/EnchantmentInstance ckj
	enchantment a
	level b
net/minecraft/world/item/enchantment/Enchantments ckk
	ALL_DAMAGE_PROTECTION a
	AQUA_AFFINITY g
	ARMOR_SLOTS N
	BANE_OF_ARTHROPODS p
	BINDING_CURSE k
	BLAST_PROTECTION d
	BLOCK_EFFICIENCY u
	BLOCK_FORTUNE x
	CHANNELING H
	DEPTH_STRIDER i
	FALL_PROTECTION c
	FIRE_ASPECT r
	FIRE_PROTECTION b
	FISHING_LUCK C
	FISHING_SPEED D
	FLAMING_ARROWS A
	FROST_WALKER j
	IMPALING F
	INFINITY_ARROWS B
	KNOCKBACK q
	LOYALTY E
	MENDING L
	MOB_LOOTING s
	MULTISHOT I
	PIERCING K
	POWER_ARROWS y
	PROJECTILE_PROTECTION e
	PUNCH_ARROWS z
	QUICK_CHARGE J
	RESPIRATION f
	RIPTIDE G
	SHARPNESS n
	SILK_TOUCH v
	SMITE o
	SOUL_SPEED l
	SWEEPING_EDGE t
	SWIFT_SNEAK m
	THORNS h
	UNBREAKING w
	VANISHING_CURSE M
	register (Ljava/lang/String;Lnet/minecraft/world/item/enchantment/Enchantment;)Lnet/minecraft/world/item/enchantment/Enchantment; a
net/minecraft/world/item/enchantment/FireAspectEnchantment ckl
	getMaxCost (I)I b
	getMaxLevel ()I a
	getMinCost (I)I a
net/minecraft/world/item/enchantment/FishingSpeedEnchantment ckm
	getMaxCost (I)I b
	getMaxLevel ()I a
	getMinCost (I)I a
net/minecraft/world/item/enchantment/FrostWalkerEnchantment ckn
	checkCompatibility (Lnet/minecraft/world/item/enchantment/Enchantment;)Z a
	getMaxCost (I)I b
	getMaxLevel ()I a
	getMinCost (I)I a
	isTreasureOnly ()Z b
	onEntityMoved (Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;I)V a
net/minecraft/world/item/enchantment/KnockbackEnchantment cko
	getMaxCost (I)I b
	getMaxLevel ()I a
	getMinCost (I)I a
net/minecraft/world/item/enchantment/LootBonusEnchantment ckp
	checkCompatibility (Lnet/minecraft/world/item/enchantment/Enchantment;)Z a
	getMaxCost (I)I b
	getMaxLevel ()I a
	getMinCost (I)I a
net/minecraft/world/item/enchantment/MendingEnchantment ckq
	getMaxCost (I)I b
	getMinCost (I)I a
	isTreasureOnly ()Z b
net/minecraft/world/item/enchantment/MultiShotEnchantment ckr
	checkCompatibility (Lnet/minecraft/world/item/enchantment/Enchantment;)Z a
	getMaxCost (I)I b
	getMinCost (I)I a
net/minecraft/world/item/enchantment/OxygenEnchantment cks
	getMaxCost (I)I b
	getMaxLevel ()I a
	getMinCost (I)I a
net/minecraft/world/item/enchantment/ProtectionEnchantment ckt
	type a
	checkCompatibility (Lnet/minecraft/world/item/enchantment/Enchantment;)Z a
	getDamageProtection (ILnet/minecraft/world/damagesource/DamageSource;)I a
	getExplosionKnockbackAfterDampener (Lnet/minecraft/world/entity/LivingEntity;D)D a
	getFireAfterDampener (Lnet/minecraft/world/entity/LivingEntity;I)I a
	getMaxCost (I)I b
	getMaxLevel ()I a
	getMinCost (I)I a
net/minecraft/world/item/enchantment/ProtectionEnchantment$Type ckt$a
	$VALUES h
	ALL a
	EXPLOSION d
	FALL c
	FIRE b
	PROJECTILE e
	levelCost g
	minCost f
	$values ()[Lnet/minecraft/world/item/enchantment/ProtectionEnchantment$Type; c
	getLevelCost ()I b
	getMinCost ()I a
net/minecraft/world/item/enchantment/QuickChargeEnchantment cku
	getMaxCost (I)I b
	getMaxLevel ()I a
	getMinCost (I)I a
net/minecraft/world/item/enchantment/SoulSpeedEnchantment ckv
	getMaxCost (I)I b
	getMaxLevel ()I a
	getMinCost (I)I a
	isDiscoverable ()Z i
	isTradeable ()Z h
	isTreasureOnly ()Z b
net/minecraft/world/item/enchantment/SweepingEdgeEnchantment ckw
	getMaxCost (I)I b
	getMaxLevel ()I a
	getMinCost (I)I a
	getSweepingDamageRatio (I)F e
net/minecraft/world/item/enchantment/SwiftSneakEnchantment ckx
	getMaxCost (I)I b
	getMaxLevel ()I a
	getMinCost (I)I a
	isDiscoverable ()Z i
	isTradeable ()Z h
	isTreasureOnly ()Z b
net/minecraft/world/item/enchantment/ThornsEnchantment cky
	CHANCE_PER_LEVEL a
	canEnchant (Lnet/minecraft/world/item/ItemStack;)Z a
	doPostHurt (Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/entity/Entity;I)V b
	getDamage (ILnet/minecraft/util/RandomSource;)I b
	getMaxCost (I)I b
	getMaxLevel ()I a
	getMinCost (I)I a
	shouldHit (ILnet/minecraft/util/RandomSource;)Z a
net/minecraft/world/item/enchantment/TridentChannelingEnchantment ckz
	getMaxCost (I)I b
	getMinCost (I)I a
net/minecraft/world/item/enchantment/TridentImpalerEnchantment cla
	getDamageBonus (ILnet/minecraft/world/entity/MobType;)F a
	getMaxCost (I)I b
	getMaxLevel ()I a
	getMinCost (I)I a
net/minecraft/world/item/enchantment/TridentLoyaltyEnchantment clb
	getMaxCost (I)I b
	getMaxLevel ()I a
	getMinCost (I)I a
net/minecraft/world/item/enchantment/TridentRiptideEnchantment clc
	checkCompatibility (Lnet/minecraft/world/item/enchantment/Enchantment;)Z a
	getMaxCost (I)I b
	getMaxLevel ()I a
	getMinCost (I)I a
net/minecraft/world/item/enchantment/UntouchingEnchantment cld
	checkCompatibility (Lnet/minecraft/world/item/enchantment/Enchantment;)Z a
	getMaxCost (I)I b
	getMinCost (I)I a
net/minecraft/world/item/enchantment/VanishingCurseEnchantment cle
	getMaxCost (I)I b
	getMinCost (I)I a
	isCurse ()Z c
	isTreasureOnly ()Z b
net/minecraft/world/item/enchantment/WaterWalkerEnchantment clf
	checkCompatibility (Lnet/minecraft/world/item/enchantment/Enchantment;)Z a
	getMaxCost (I)I b
	getMaxLevel ()I a
	getMinCost (I)I a
net/minecraft/world/item/enchantment/WaterWorkerEnchantment clg
	getMaxCost (I)I b
	getMinCost (I)I a
net/minecraft/world/item/trading/Merchant clj
	canRestock ()Z gk
	getNotifyTradeSound ()Lnet/minecraft/sounds/SoundEvent; gc
	getOffers ()Lnet/minecraft/world/item/trading/MerchantOffers; ga
	getTradingPlayer ()Lnet/minecraft/world/entity/player/Player; fY
	getVillagerXp ()I r
	isClientSide ()Z gg
	notifyTrade (Lnet/minecraft/world/item/trading/MerchantOffer;)V a
	notifyTradeUpdated (Lnet/minecraft/world/item/ItemStack;)V l
	openTradingScreen (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/network/chat/Component;I)V a
	overrideOffers (Lnet/minecraft/world/item/trading/MerchantOffers;)V a
	overrideXp (I)V t
	setTradingPlayer (Lnet/minecraft/world/entity/player/Player;)V f
	showProgressBar ()Z gb
net/minecraft/world/item/trading/MerchantOffer clk
	baseCostA a
	costB b
	demand h
	maxUses e
	priceMultiplier i
	result c
	rewardExp f
	specialPriceDiff g
	uses d
	xp j
	addToSpecialPriceDiff (I)V a
	assemble ()Lnet/minecraft/world/item/ItemStack; f
	createTag ()Lnet/minecraft/nbt/CompoundTag; t
	getBaseCostA ()Lnet/minecraft/world/item/ItemStack; a
	getCostA ()Lnet/minecraft/world/item/ItemStack; b
	getCostB ()Lnet/minecraft/world/item/ItemStack; c
	getDemand ()I k
	getMaxUses ()I i
	getPriceMultiplier ()F n
	getResult ()Lnet/minecraft/world/item/ItemStack; d
	getSpecialPriceDiff ()I m
	getUses ()I g
	getXp ()I o
	increaseUses ()V j
	isOutOfStock ()Z p
	isRequiredItem (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/item/ItemStack;)Z c
	needsRestock ()Z r
	resetSpecialPriceDiff ()V l
	resetUses ()V h
	satisfiedBy (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/item/ItemStack;)Z a
	setSpecialPriceDiff (I)V b
	setToOutOfStock ()V q
	shouldRewardExp ()Z s
	take (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/item/ItemStack;)Z b
	updateDemand ()V e
net/minecraft/world/item/trading/MerchantOffers cll
	createFromStream (Lnet/minecraft/network/FriendlyByteBuf;)Lnet/minecraft/world/item/trading/MerchantOffers; b
	createTag ()Lnet/minecraft/nbt/CompoundTag; a
	getRecipeFor (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/item/ItemStack;I)Lnet/minecraft/world/item/trading/MerchantOffer; a
	writeToStream (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/world/level/BaseCommandBlock cln
	DEFAULT_NAME c
	TIME_FORMAT b
	command i
	lastExecution d
	lastOutput h
	name j
	successCount f
	trackOutput g
	updateLastExecution e
	acceptsFailure ()Z q_
	acceptsSuccess ()Z e_
	createCommandSourceStack ()Lnet/minecraft/commands/CommandSourceStack; i
	getCommand ()Ljava/lang/String; m
	getLastOutput ()Lnet/minecraft/network/chat/Component; l
	getLevel ()Lnet/minecraft/server/level/ServerLevel; e
	getName ()Lnet/minecraft/network/chat/Component; n
	getPosition ()Lnet/minecraft/world/phys/Vec3; g
	getSuccessCount ()I k
	isTrackOutput ()Z o
	isValid ()Z j
	load (Lnet/minecraft/nbt/CompoundTag;)V b
	onUpdated ()V f
	performCommand (Lnet/minecraft/world/level/Level;)Z a
	save (Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/nbt/CompoundTag; a
	sendSystemMessage (Lnet/minecraft/network/chat/Component;)V a
	setCommand (Ljava/lang/String;)V a
	setLastOutput (Lnet/minecraft/network/chat/Component;)V c
	setName (Lnet/minecraft/network/chat/Component;)V b
	setSuccessCount (I)V a
	setTrackOutput (Z)V a
	shouldInformAdmins ()Z N_
	usedBy (Lnet/minecraft/world/entity/player/Player;)Lnet/minecraft/world/InteractionResult; a
net/minecraft/world/level/BaseSpawner clo
	EVENT_SPAWN c
	LOGGER a
	SPAWN_DATA_TAG b
	displayEntity l
	maxNearbyEntities m
	maxSpawnDelay j
	minSpawnDelay i
	nextSpawnData f
	oSpin h
	requiredPlayerRange n
	spawnCount k
	spawnDelay d
	spawnPotentials e
	spawnRange o
	spin g
	broadcastEvent (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;I)V a
	clientTick (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)V a
	delay (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)V c
	getOrCreateDisplayEntity (Lnet/minecraft/world/level/Level;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/entity/Entity; a
	getOrCreateNextSpawnData (Lnet/minecraft/world/level/Level;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/SpawnData; b
	getSpin ()D a
	getoSpin ()D b
	isNearPlayer (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)Z b
	load (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/nbt/CompoundTag;)V a
	onEventTriggered (Lnet/minecraft/world/level/Level;I)Z a
	save (Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/nbt/CompoundTag; a
	serverTick (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;)V a
	setEntityId (Lnet/minecraft/world/entity/EntityType;Lnet/minecraft/world/level/Level;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPos;)V a
	setNextSpawnData (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/SpawnData;)V a
net/minecraft/world/level/BlockAndTintGetter clp
	canSeeSky (Lnet/minecraft/core/BlockPos;)Z g
	getBlockTint (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/ColorResolver;)I a
	getBrightness (Lnet/minecraft/world/level/LightLayer;Lnet/minecraft/core/BlockPos;)I a
	getLightEngine ()Lnet/minecraft/world/level/lighting/LevelLightEngine; s_
	getRawBrightness (Lnet/minecraft/core/BlockPos;I)I b
	getShade (Lnet/minecraft/core/Direction;Z)F a
net/minecraft/world/level/BlockCollisions clq
	box a
	cachedBlockGetter h
	cachedBlockGetterPos i
	collisionGetter f
	context b
	cursor c
	entityShape e
	onlySuffocatingBlocks g
	pos d
	resultProvider j
	getChunk (II)Lnet/minecraft/world/level/BlockGetter; a
net/minecraft/world/level/BlockEventData clr
	block b
	paramA c
	paramB d
	pos a
	block ()Lnet/minecraft/world/level/block/Block; b
	paramA ()I c
	paramB ()I d
	pos ()Lnet/minecraft/core/BlockPos; a
net/minecraft/world/level/BlockGetter cls
	clip (Lnet/minecraft/world/level/ClipContext;)Lnet/minecraft/world/phys/BlockHitResult; a
	clipWithInteractionOverride (Lnet/minecraft/world/phys/Vec3;Lnet/minecraft/world/phys/Vec3;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/VoxelShape;Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/phys/BlockHitResult; a
	getBlockEntity (Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/entity/BlockEntity; c_
	getBlockEntity (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/entity/BlockEntityType;)Ljava/util/Optional; a
	getBlockFloorHeight (Lnet/minecraft/core/BlockPos;)D i
	getBlockFloorHeight (Lnet/minecraft/world/phys/shapes/VoxelShape;Ljava/util/function/Supplier;)D a
	getBlockState (Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a_
	getBlockStates (Lnet/minecraft/world/phys/AABB;)Ljava/util/stream/Stream; a
	getFluidState (Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/material/FluidState; b_
	getLightEmission (Lnet/minecraft/core/BlockPos;)I h
	getMaxLightLevel ()I M
	isBlockInLine (Lnet/minecraft/world/level/ClipBlockStateContext;)Lnet/minecraft/world/phys/BlockHitResult; a
	traverseBlocks (Lnet/minecraft/world/phys/Vec3;Lnet/minecraft/world/phys/Vec3;Ljava/lang/Object;Ljava/util/function/BiFunction;Ljava/util/function/Function;)Ljava/lang/Object; a
net/minecraft/world/level/ChunkPos clt
	COORD_BITS h
	COORD_MASK i
	HASH_A l
	HASH_C m
	HASH_Z_XOR n
	INVALID_CHUNK_POS a
	REGION_BITS j
	REGION_MASK k
	REGION_MAX_INDEX d
	REGION_SIZE c
	SAFETY_MARGIN g
	ZERO b
	x e
	z f
	asLong (II)J c
	asLong (Lnet/minecraft/core/BlockPos;)J a
	getBlockAt (III)Lnet/minecraft/core/BlockPos; a
	getBlockX (I)I a
	getBlockZ (I)I b
	getChessboardDistance (Lnet/minecraft/world/level/ChunkPos;)I a
	getMaxBlockX ()I f
	getMaxBlockZ ()I g
	getMiddleBlockPosition (I)Lnet/minecraft/core/BlockPos; c
	getMiddleBlockX ()I b
	getMiddleBlockZ ()I c
	getMinBlockX ()I d
	getMinBlockZ ()I e
	getRegionLocalX ()I j
	getRegionLocalZ ()I k
	getRegionX ()I h
	getRegionZ ()I i
	getWorldPosition ()Lnet/minecraft/core/BlockPos; l
	getX (J)I a
	getZ (J)I b
	hash (II)I d
	maxFromRegion (II)Lnet/minecraft/world/level/ChunkPos; b
	minFromRegion (II)Lnet/minecraft/world/level/ChunkPos; a
	rangeClosed (Lnet/minecraft/world/level/ChunkPos;I)Ljava/util/stream/Stream; a
	rangeClosed (Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/world/level/ChunkPos;)Ljava/util/stream/Stream; a
	toLong ()J a
net/minecraft/world/level/ClipBlockStateContext clu
	block c
	from a
	to b
	getFrom ()Lnet/minecraft/world/phys/Vec3; b
	getTo ()Lnet/minecraft/world/phys/Vec3; a
	isTargetBlock ()Ljava/util/function/Predicate; c
net/minecraft/world/level/ClipContext clv
	block c
	collisionContext e
	fluid d
	from a
	to b
	getBlockShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	getFluidShape (Lnet/minecraft/world/level/material/FluidState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	getFrom ()Lnet/minecraft/world/phys/Vec3; b
	getTo ()Lnet/minecraft/world/phys/Vec3; a
net/minecraft/world/level/ClipContext$Block clv$a
	$VALUES f
	COLLIDER a
	FALLDAMAGE_RESETTING d
	OUTLINE b
	VISUAL c
	shapeGetter e
	$values ()[Lnet/minecraft/world/level/ClipContext$Block; a
net/minecraft/world/level/ClipContext$Fluid clv$b
	$VALUES f
	ANY c
	NONE a
	SOURCE_ONLY b
	WATER d
	canPick e
	$values ()[Lnet/minecraft/world/level/ClipContext$Fluid; a
	canPick (Lnet/minecraft/world/level/material/FluidState;)Z a
net/minecraft/world/level/ClipContext$ShapeGetter clv$c
net/minecraft/world/level/CollisionGetter clw
	borderCollision (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/phys/AABB;)Lnet/minecraft/world/phys/shapes/VoxelShape; g
	collidesWithSuffocatingBlock (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/phys/AABB;)Z e
	findFreePosition (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/phys/shapes/VoxelShape;Lnet/minecraft/world/phys/Vec3;DDD)Ljava/util/Optional; a
	findSupportingBlock (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/phys/AABB;)Ljava/util/Optional; f
	getBlockCollisions (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/phys/AABB;)Ljava/lang/Iterable; d
	getChunkForCollisions (II)Lnet/minecraft/world/level/BlockGetter; c
	getCollisions (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/phys/AABB;)Ljava/lang/Iterable; c
	getEntityCollisions (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/phys/AABB;)Ljava/util/List; b
	getWorldBorder ()Lnet/minecraft/world/level/border/WorldBorder; w_
	isUnobstructed (Lnet/minecraft/world/entity/Entity;)Z f
	isUnobstructed (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/phys/shapes/VoxelShape;)Z a
	isUnobstructed (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Z a
	noCollision (Lnet/minecraft/world/entity/Entity;)Z g
	noCollision (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/phys/AABB;)Z a
	noCollision (Lnet/minecraft/world/phys/AABB;)Z b
net/minecraft/world/level/ColorResolver clx
net/minecraft/world/level/CommonLevelAccessor cly
	getBlockEntity (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/entity/BlockEntityType;)Ljava/util/Optional; a
	getEntityCollisions (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/phys/AABB;)Ljava/util/List; b
	getHeightmapPos (Lnet/minecraft/world/level/levelgen/Heightmap$Types;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/core/BlockPos; a
	isUnobstructed (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/phys/shapes/VoxelShape;)Z a
net/minecraft/world/level/CustomSpawner clz
	tick (Lnet/minecraft/server/level/ServerLevel;ZZ)I a
net/minecraft/world/level/DataPackConfig cma
	CODEC b
	DEFAULT a
	disabled d
	enabled c
	getDisabled ()Ljava/util/List; b
	getEnabled ()Ljava/util/List; a
net/minecraft/world/level/EmptyBlockGetter cmb
	$VALUES b
	INSTANCE a
	$values ()[Lnet/minecraft/world/level/EmptyBlockGetter; a
	getBlockEntity (Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/entity/BlockEntity; c_
	getBlockState (Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a_
	getFluidState (Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/material/FluidState; b_
	getHeight ()I D_
	getMinBuildHeight ()I C_
net/minecraft/world/level/EntityBasedExplosionDamageCalculator cmc
	source a
	getBlockExplosionResistance (Lnet/minecraft/world/level/Explosion;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/material/FluidState;)Ljava/util/Optional; a
	shouldBlockExplode (Lnet/minecraft/world/level/Explosion;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;F)Z a
net/minecraft/world/level/EntityGetter cmd
	getEntities (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/phys/AABB;)Ljava/util/List; a_
	getEntities (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/phys/AABB;Ljava/util/function/Predicate;)Ljava/util/List; a
	getEntities (Lnet/minecraft/world/level/entity/EntityTypeTest;Lnet/minecraft/world/phys/AABB;Ljava/util/function/Predicate;)Ljava/util/List; a
	getEntitiesOfClass (Ljava/lang/Class;Lnet/minecraft/world/phys/AABB;)Ljava/util/List; a
	getEntitiesOfClass (Ljava/lang/Class;Lnet/minecraft/world/phys/AABB;Ljava/util/function/Predicate;)Ljava/util/List; a
	getEntityCollisions (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/phys/AABB;)Ljava/util/List; b
	getNearbyEntities (Ljava/lang/Class;Lnet/minecraft/world/entity/ai/targeting/TargetingConditions;Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/phys/AABB;)Ljava/util/List; a
	getNearbyPlayers (Lnet/minecraft/world/entity/ai/targeting/TargetingConditions;Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/phys/AABB;)Ljava/util/List; a
	getNearestEntity (Ljava/lang/Class;Lnet/minecraft/world/entity/ai/targeting/TargetingConditions;Lnet/minecraft/world/entity/LivingEntity;DDDLnet/minecraft/world/phys/AABB;)Lnet/minecraft/world/entity/LivingEntity; a
	getNearestEntity (Ljava/util/List;Lnet/minecraft/world/entity/ai/targeting/TargetingConditions;Lnet/minecraft/world/entity/LivingEntity;DDD)Lnet/minecraft/world/entity/LivingEntity; a
	getNearestPlayer (DDDDLjava/util/function/Predicate;)Lnet/minecraft/world/entity/player/Player; a
	getNearestPlayer (DDDDZ)Lnet/minecraft/world/entity/player/Player; a
	getNearestPlayer (Lnet/minecraft/world/entity/Entity;D)Lnet/minecraft/world/entity/player/Player; a
	getNearestPlayer (Lnet/minecraft/world/entity/ai/targeting/TargetingConditions;DDD)Lnet/minecraft/world/entity/player/Player; a
	getNearestPlayer (Lnet/minecraft/world/entity/ai/targeting/TargetingConditions;Lnet/minecraft/world/entity/LivingEntity;)Lnet/minecraft/world/entity/player/Player; a
	getNearestPlayer (Lnet/minecraft/world/entity/ai/targeting/TargetingConditions;Lnet/minecraft/world/entity/LivingEntity;DDD)Lnet/minecraft/world/entity/player/Player; a
	getPlayerByUUID (Ljava/util/UUID;)Lnet/minecraft/world/entity/player/Player; b
	hasNearbyAlivePlayer (DDDD)Z a
	isUnobstructed (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/phys/shapes/VoxelShape;)Z a
	players ()Ljava/util/List; v
net/minecraft/world/level/Explosion cme
	EXPLOSION_DAMAGE_CALCULATOR a
	MAX_DROPS_PER_COMBINED_STACK b
	blockInteraction d
	damageCalculator m
	damageSource l
	fire c
	hitPlayers o
	level f
	radius k
	random e
	source j
	toBlow n
	x g
	y h
	z i
	addBlockDrops (Lit/unimi/dsi/fastutil/objects/ObjectArrayList;Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/core/BlockPos;)V a
	clearToBlow ()V g
	explode ()V a
	finalizeExplosion (Z)V a
	getDamageSource ()Lnet/minecraft/world/damagesource/DamageSource; c
	getDirectSourceEntity ()Lnet/minecraft/world/entity/Entity; f
	getHitPlayers ()Ljava/util/Map; d
	getIndirectSourceEntity ()Lnet/minecraft/world/entity/LivingEntity; e
	getSeenPercent (Lnet/minecraft/world/phys/Vec3;Lnet/minecraft/world/entity/Entity;)F a
	getToBlow ()Ljava/util/List; h
	interactsWithBlocks ()Z b
	makeDamageCalculator (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/world/level/ExplosionDamageCalculator; a
net/minecraft/world/level/Explosion$BlockInteraction cme$a
	$VALUES d
	DESTROY b
	DESTROY_WITH_DECAY c
	KEEP a
	$values ()[Lnet/minecraft/world/level/Explosion$BlockInteraction; a
net/minecraft/world/level/ExplosionDamageCalculator cmf
	getBlockExplosionResistance (Lnet/minecraft/world/level/Explosion;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/material/FluidState;)Ljava/util/Optional; a
	shouldBlockExplode (Lnet/minecraft/world/level/Explosion;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;F)Z a
net/minecraft/world/level/FoliageColor cmg
	pixels a
	get (DD)I a
	getBirchColor ()I b
	getDefaultColor ()I c
	getEvergreenColor ()I a
	getMangroveColor ()I d
	init ([I)V a
net/minecraft/world/level/ForcedChunksSavedData cmh
	FILE_ID a
	TAG_FORCED b
	chunks c
	getChunks ()Lit/unimi/dsi/fastutil/longs/LongSet; a
	load (Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/world/level/ForcedChunksSavedData; b
	save (Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/nbt/CompoundTag; a
net/minecraft/world/level/GameRules cmi
	DEFAULT_RANDOM_TICK_SPEED a
	GAME_RULE_TYPES V
	LOGGER U
	RULE_ANNOUNCE_ADVANCEMENTS y
	RULE_BLOCK_EXPLOSION_DROP_DECAY M
	RULE_COMMANDBLOCKOUTPUT i
	RULE_COMMAND_MODIFICATION_BLOCK_LIMIT x
	RULE_DAYLIGHT k
	RULE_DISABLE_ELYTRA_MOVEMENT_CHECK s
	RULE_DISABLE_RAIDS z
	RULE_DOBLOCKDROPS g
	RULE_DOENTITYDROPS h
	RULE_DOFIRETICK b
	RULE_DOINSOMNIA A
	RULE_DOMOBLOOT f
	RULE_DOMOBSPAWNING e
	RULE_DO_IMMEDIATE_RESPAWN B
	RULE_DO_PATROL_SPAWNING G
	RULE_DO_TRADER_SPAWNING H
	RULE_DO_VINES_SPREAD T
	RULE_DO_WARDEN_SPAWNING I
	RULE_DROWNING_DAMAGE C
	RULE_FALL_DAMAGE D
	RULE_FIRE_DAMAGE E
	RULE_FORGIVE_DEAD_PLAYERS J
	RULE_FREEZE_DAMAGE F
	RULE_GLOBAL_SOUND_EVENTS S
	RULE_KEEPINVENTORY d
	RULE_LAVA_SOURCE_CONVERSION R
	RULE_LIMITED_CRAFTING v
	RULE_LOGADMINCOMMANDS l
	RULE_MAX_COMMAND_CHAIN_LENGTH w
	RULE_MAX_ENTITY_CRAMMING t
	RULE_MOBGRIEFING c
	RULE_MOB_EXPLOSION_DROP_DECAY N
	RULE_NATURAL_REGENERATION j
	RULE_PLAYERS_SLEEPING_PERCENTAGE L
	RULE_RANDOMTICKING n
	RULE_REDUCEDDEBUGINFO p
	RULE_SENDCOMMANDFEEDBACK o
	RULE_SHOWDEATHMESSAGES m
	RULE_SNOW_ACCUMULATION_HEIGHT P
	RULE_SPAWN_RADIUS r
	RULE_SPECTATORSGENERATECHUNKS q
	RULE_TNT_EXPLOSION_DROP_DECAY O
	RULE_UNIVERSAL_ANGER K
	RULE_WATER_SOURCE_CONVERSION Q
	RULE_WEATHER_CYCLE u
	rules W
	assignCap (Lnet/minecraft/world/level/GameRules$Key;Lnet/minecraft/world/level/GameRules;Lnet/minecraft/server/MinecraftServer;)V a
	assignFrom (Lnet/minecraft/world/level/GameRules;Lnet/minecraft/server/MinecraftServer;)V a
	callVisitorCap (Lnet/minecraft/world/level/GameRules$GameRuleTypeVisitor;Lnet/minecraft/world/level/GameRules$Key;Lnet/minecraft/world/level/GameRules$Type;)V a
	copy ()Lnet/minecraft/world/level/GameRules; b
	createTag ()Lnet/minecraft/nbt/CompoundTag; a
	getBoolean (Lnet/minecraft/world/level/GameRules$Key;)Z b
	getInt (Lnet/minecraft/world/level/GameRules$Key;)I c
	getRule (Lnet/minecraft/world/level/GameRules$Key;)Lnet/minecraft/world/level/GameRules$Value; a
	loadFromTag (Lcom/mojang/serialization/DynamicLike;)V a
	register (Ljava/lang/String;Lnet/minecraft/world/level/GameRules$Category;Lnet/minecraft/world/level/GameRules$Type;)Lnet/minecraft/world/level/GameRules$Key; a
	visitGameRuleTypes (Lnet/minecraft/world/level/GameRules$GameRuleTypeVisitor;)V a
net/minecraft/world/level/GameRules$BooleanValue cmi$a
	value b
	copy ()Lnet/minecraft/world/level/GameRules$BooleanValue; e
	copy ()Lnet/minecraft/world/level/GameRules$Value; f
	create (Z)Lnet/minecraft/world/level/GameRules$Type; a
	create (ZLjava/util/function/BiConsumer;)Lnet/minecraft/world/level/GameRules$Type; a
	deserialize (Ljava/lang/String;)V a
	get ()Z a
	getCommandResult ()I c
	getSelf ()Lnet/minecraft/world/level/GameRules$BooleanValue; d
	getSelf ()Lnet/minecraft/world/level/GameRules$Value; g
	serialize ()Ljava/lang/String; b
	set (ZLnet/minecraft/server/MinecraftServer;)V a
	setFrom (Lnet/minecraft/world/level/GameRules$BooleanValue;Lnet/minecraft/server/MinecraftServer;)V a
	setFrom (Lnet/minecraft/world/level/GameRules$Value;Lnet/minecraft/server/MinecraftServer;)V a
	updateFromArgument (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)V a
net/minecraft/world/level/GameRules$Category cmi$b
	$VALUES i
	CHAT f
	DROPS d
	MISC g
	MOBS b
	PLAYER a
	SPAWNING c
	UPDATES e
	descriptionId h
	$values ()[Lnet/minecraft/world/level/GameRules$Category; b
	getDescriptionId ()Ljava/lang/String; a
net/minecraft/world/level/GameRules$GameRuleTypeVisitor cmi$c
	visit (Lnet/minecraft/world/level/GameRules$Key;Lnet/minecraft/world/level/GameRules$Type;)V a
	visitBoolean (Lnet/minecraft/world/level/GameRules$Key;Lnet/minecraft/world/level/GameRules$Type;)V b
	visitInteger (Lnet/minecraft/world/level/GameRules$Key;Lnet/minecraft/world/level/GameRules$Type;)V c
net/minecraft/world/level/GameRules$IntegerValue cmi$d
	value b
	copy ()Lnet/minecraft/world/level/GameRules$IntegerValue; e
	copy ()Lnet/minecraft/world/level/GameRules$Value; f
	create (I)Lnet/minecraft/world/level/GameRules$Type; a
	create (ILjava/util/function/BiConsumer;)Lnet/minecraft/world/level/GameRules$Type; a
	deserialize (Ljava/lang/String;)V a
	get ()I a
	getCommandResult ()I c
	getSelf ()Lnet/minecraft/world/level/GameRules$IntegerValue; d
	getSelf ()Lnet/minecraft/world/level/GameRules$Value; g
	safeParse (Ljava/lang/String;)I c
	serialize ()Ljava/lang/String; b
	set (ILnet/minecraft/server/MinecraftServer;)V a
	setFrom (Lnet/minecraft/world/level/GameRules$IntegerValue;Lnet/minecraft/server/MinecraftServer;)V a
	setFrom (Lnet/minecraft/world/level/GameRules$Value;Lnet/minecraft/server/MinecraftServer;)V a
	tryDeserialize (Ljava/lang/String;)Z b
	updateFromArgument (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)V a
net/minecraft/world/level/GameRules$Key cmi$e
	category b
	id a
	getCategory ()Lnet/minecraft/world/level/GameRules$Category; c
	getDescriptionId ()Ljava/lang/String; b
	getId ()Ljava/lang/String; a
net/minecraft/world/level/GameRules$Type cmi$f
	argument a
	callback c
	constructor b
	visitorCaller d
	callVisitor (Lnet/minecraft/world/level/GameRules$GameRuleTypeVisitor;Lnet/minecraft/world/level/GameRules$Key;)V a
	createArgument (Ljava/lang/String;)Lcom/mojang/brigadier/builder/RequiredArgumentBuilder; a
	createRule ()Lnet/minecraft/world/level/GameRules$Value; a
net/minecraft/world/level/GameRules$Value cmi$g
	type a
	copy ()Lnet/minecraft/world/level/GameRules$Value; f
	deserialize (Ljava/lang/String;)V a
	getCommandResult ()I c
	getSelf ()Lnet/minecraft/world/level/GameRules$Value; g
	onChanged (Lnet/minecraft/server/MinecraftServer;)V a
	serialize ()Ljava/lang/String; b
	setFrom (Lnet/minecraft/world/level/GameRules$Value;Lnet/minecraft/server/MinecraftServer;)V a
	setFromArgument (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)V b
	updateFromArgument (Lcom/mojang/brigadier/context/CommandContext;Ljava/lang/String;)V a
net/minecraft/world/level/GameRules$VisitorCaller cmi$h
net/minecraft/world/level/GameType cmj
	$VALUES m
	ADVENTURE c
	BY_ID g
	CODEC f
	CREATIVE b
	DEFAULT_MODE e
	NOT_SET h
	SPECTATOR d
	SURVIVAL a
	id i
	longName l
	name j
	shortName k
	$values ()[Lnet/minecraft/world/level/GameType; i
	byId (I)Lnet/minecraft/world/level/GameType; a
	byName (Ljava/lang/String;)Lnet/minecraft/world/level/GameType; a
	byName (Ljava/lang/String;Lnet/minecraft/world/level/GameType;)Lnet/minecraft/world/level/GameType; a
	byNullableId (I)Lnet/minecraft/world/level/GameType; b
	getId ()I a
	getLongDisplayName ()Lnet/minecraft/network/chat/Component; d
	getName ()Ljava/lang/String; b
	getNullableId (Lnet/minecraft/world/level/GameType;)I a
	getSerializedName ()Ljava/lang/String; c
	getShortDisplayName ()Lnet/minecraft/network/chat/Component; e
	isBlockPlacingRestricted ()Z f
	isCreative ()Z g
	isSurvival ()Z h
	updatePlayerAbilities (Lnet/minecraft/world/entity/player/Abilities;)V a
net/minecraft/world/level/GrassColor cmk
	pixels a
	get (DD)I a
	getDefaultColor ()I a
	init ([I)V a
net/minecraft/world/level/ItemLike cml
	asItem ()Lnet/minecraft/world/item/Item; k
net/minecraft/world/level/Level cmm
	END j
	LONG_PARTICLE_CLIP_RANGE l
	MAX_BRIGHTNESS n
	MAX_ENTITY_SPAWN_Y p
	MAX_LEVEL_SIZE k
	MIN_ENTITY_SPAWN_Y q
	NETHER i
	OVERWORLD h
	RESOURCE_KEY_CODEC g
	SHORT_PARTICLE_CLIP_RANGE m
	TICKS_PER_DAY o
	addend u
	biomeManager H
	blockEntityTickers r
	damageSources K
	dimension I
	dimensionTypeId D
	dimensionTypeRegistration E
	isClientSide B
	isDebug d
	levelData A
	neighborUpdater s
	oRainLevel v
	oThunderLevel x
	pendingBlockEntityTickers a
	profiler F
	rainLevel w
	randValue t
	random z
	registryAccess J
	skyDarken e
	subTickCount L
	thread c
	threadSafeRandom f
	thunderLevel y
	tickingBlockEntities b
	worldBorder G
	addAlwaysVisibleParticle (Lnet/minecraft/core/particles/ParticleOptions;DDDDDD)V b
	addAlwaysVisibleParticle (Lnet/minecraft/core/particles/ParticleOptions;ZDDDDDD)V b
	addBlockEntityTicker (Lnet/minecraft/world/level/block/entity/TickingBlockEntity;)V a
	addDestroyBlockEffect (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V a
	addParticle (Lnet/minecraft/core/particles/ParticleOptions;DDDDDD)V a
	addParticle (Lnet/minecraft/core/particles/ParticleOptions;ZDDDDDD)V a
	blockEntityChanged (Lnet/minecraft/core/BlockPos;)V p
	blockEvent (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Block;II)V a
	broadcastDamageEvent (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/damagesource/DamageSource;)V a
	broadcastEntityEvent (Lnet/minecraft/world/entity/Entity;B)V a
	createFireworks (DDDDDDLnet/minecraft/nbt/CompoundTag;)V a
	damageSources ()Lnet/minecraft/world/damagesource/DamageSources; ag
	destroyBlock (Lnet/minecraft/core/BlockPos;ZLnet/minecraft/world/entity/Entity;I)Z a
	destroyBlockProgress (ILnet/minecraft/core/BlockPos;I)V a
	dimension ()Lnet/minecraft/resources/ResourceKey; ac
	dimensionType ()Lnet/minecraft/world/level/dimension/DimensionType; x_
	dimensionTypeId ()Lnet/minecraft/resources/ResourceKey; aa
	dimensionTypeRegistration ()Lnet/minecraft/core/Holder; ab
	disconnect ()V U
	explode (Lnet/minecraft/world/entity/Entity;DDDFLnet/minecraft/world/level/Level$ExplosionInteraction;)Lnet/minecraft/world/level/Explosion; a
	explode (Lnet/minecraft/world/entity/Entity;DDDFZLnet/minecraft/world/level/Level$ExplosionInteraction;)Lnet/minecraft/world/level/Explosion; a
	explode (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/damagesource/DamageSource;Lnet/minecraft/world/level/ExplosionDamageCalculator;DDDFZLnet/minecraft/world/level/Level$ExplosionInteraction;)Lnet/minecraft/world/level/Explosion; a
	explode (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/damagesource/DamageSource;Lnet/minecraft/world/level/ExplosionDamageCalculator;DDDFZLnet/minecraft/world/level/Level$ExplosionInteraction;Z)Lnet/minecraft/world/level/Explosion; a
	explode (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/damagesource/DamageSource;Lnet/minecraft/world/level/ExplosionDamageCalculator;Lnet/minecraft/world/phys/Vec3;FZLnet/minecraft/world/level/Level$ExplosionInteraction;)Lnet/minecraft/world/level/Explosion; a
	fillReportDetails (Lnet/minecraft/CrashReport;)Lnet/minecraft/CrashReportCategory; a
	gatherChunkSourceStats ()Ljava/lang/String; F
	getBiomeManager ()Lnet/minecraft/world/level/biome/BiomeManager; z_
	getBlockEntity (Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/entity/BlockEntity; c_
	getBlockRandomPos (IIII)Lnet/minecraft/core/BlockPos; a
	getBlockState (Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a_
	getChunk (II)Lnet/minecraft/world/level/chunk/ChunkAccess; a
	getChunk (II)Lnet/minecraft/world/level/chunk/LevelChunk; d
	getChunk (IILnet/minecraft/world/level/chunk/ChunkStatus;Z)Lnet/minecraft/world/level/chunk/ChunkAccess; a
	getChunkAt (Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/chunk/LevelChunk; l
	getChunkForCollisions (II)Lnet/minecraft/world/level/BlockGetter; c
	getCurrentDifficultyAt (Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/DifficultyInstance; d_
	getDayTime ()J W
	getDestroyType (Lnet/minecraft/world/level/GameRules$Key;)Lnet/minecraft/world/level/Explosion$BlockInteraction; a
	getEntities ()Lnet/minecraft/world/level/entity/LevelEntityGetter; E
	getEntities (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/phys/AABB;Ljava/util/function/Predicate;)Ljava/util/List; a
	getEntities (Lnet/minecraft/world/level/entity/EntityTypeTest;Lnet/minecraft/world/phys/AABB;Ljava/util/function/Predicate;)Ljava/util/List; a
	getEntities (Lnet/minecraft/world/level/entity/EntityTypeTest;Lnet/minecraft/world/phys/AABB;Ljava/util/function/Predicate;Ljava/util/List;)V a
	getEntities (Lnet/minecraft/world/level/entity/EntityTypeTest;Lnet/minecraft/world/phys/AABB;Ljava/util/function/Predicate;Ljava/util/List;I)V a
	getEntity (I)Lnet/minecraft/world/entity/Entity; a
	getFluidState (Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/material/FluidState; b_
	getFreeMapId ()I t
	getGameRules ()Lnet/minecraft/world/level/GameRules; X
	getGameTime ()J V
	getHeight (Lnet/minecraft/world/level/levelgen/Heightmap$Types;II)I a
	getLevelData ()Lnet/minecraft/world/level/storage/LevelData; u_
	getLightEngine ()Lnet/minecraft/world/level/lighting/LevelLightEngine; s_
	getMapData (Ljava/lang/String;)Lnet/minecraft/world/level/saveddata/maps/MapItemSavedData; a
	getProfiler ()Lnet/minecraft/util/profiling/ProfilerFiller; ad
	getProfilerSupplier ()Ljava/util/function/Supplier; ae
	getRainLevel (F)F d
	getRandom ()Lnet/minecraft/util/RandomSource; y_
	getRecipeManager ()Lnet/minecraft/world/item/crafting/RecipeManager; q
	getScoreboard ()Lnet/minecraft/world/scores/Scoreboard; I
	getSeaLevel ()I t_
	getServer ()Lnet/minecraft/server/MinecraftServer; n
	getSharedSpawnAngle ()F S
	getSharedSpawnPos ()Lnet/minecraft/core/BlockPos; R
	getSkyDarken ()I v_
	getSunAngle (F)F a
	getThunderLevel (F)F b
	getWorldBorder ()Lnet/minecraft/world/level/border/WorldBorder; w_
	globalLevelEvent (ILnet/minecraft/core/BlockPos;I)V b
	guardEntityTick (Ljava/util/function/Consumer;Lnet/minecraft/world/entity/Entity;)V a
	isClientSide ()Z r_
	isDay ()Z N
	isDebug ()Z af
	isFluidAtPosition (Lnet/minecraft/core/BlockPos;Ljava/util/function/Predicate;)Z b
	isInSpawnableBounds (Lnet/minecraft/core/BlockPos;)Z k
	isInWorldBounds (Lnet/minecraft/core/BlockPos;)Z j
	isInWorldBoundsHorizontal (Lnet/minecraft/core/BlockPos;)Z D
	isLoaded (Lnet/minecraft/core/BlockPos;)Z o
	isNight ()Z O
	isOutsideSpawnableHeight (I)Z b
	isRaining ()Z Z
	isRainingAt (Lnet/minecraft/core/BlockPos;)Z q
	isStateAtPosition (Lnet/minecraft/core/BlockPos;Ljava/util/function/Predicate;)Z a
	isThundering ()Z Y
	loadedAndEntityCanStandOn (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/Entity;)Z a
	loadedAndEntityCanStandOnFace (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/Entity;Lnet/minecraft/core/Direction;)Z a
	mayInteract (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/core/BlockPos;)Z a
	neighborChanged (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Block;Lnet/minecraft/core/BlockPos;)V a
	neighborChanged (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Block;Lnet/minecraft/core/BlockPos;Z)V a
	neighborShapeChanged (Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;II)V a
	nextSubTickCount ()J A_
	noSave ()Z r
	onBlockStateChange (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/state/BlockState;)V a
	playLocalSound (DDDLnet/minecraft/sounds/SoundEvent;Lnet/minecraft/sounds/SoundSource;FFZ)V a
	playLocalSound (Lnet/minecraft/core/BlockPos;Lnet/minecraft/sounds/SoundEvent;Lnet/minecraft/sounds/SoundSource;FFZ)V a
	playSeededSound (Lnet/minecraft/world/entity/player/Player;DDDLnet/minecraft/core/Holder;Lnet/minecraft/sounds/SoundSource;FFJ)V a
	playSeededSound (Lnet/minecraft/world/entity/player/Player;DDDLnet/minecraft/sounds/SoundEvent;Lnet/minecraft/sounds/SoundSource;FFJ)V a
	playSeededSound (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/entity/Entity;Lnet/minecraft/core/Holder;Lnet/minecraft/sounds/SoundSource;FFJ)V a
	playSound (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/core/BlockPos;Lnet/minecraft/sounds/SoundEvent;Lnet/minecraft/sounds/SoundSource;FF)V a
	playSound (Lnet/minecraft/world/entity/player/Player;DDDLnet/minecraft/sounds/SoundEvent;Lnet/minecraft/sounds/SoundSource;FF)V a
	playSound (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/core/BlockPos;Lnet/minecraft/sounds/SoundEvent;Lnet/minecraft/sounds/SoundSource;FF)V a
	playSound (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/entity/Entity;Lnet/minecraft/sounds/SoundEvent;Lnet/minecraft/sounds/SoundSource;FF)V a
	prepareWeather ()V T
	registryAccess ()Lnet/minecraft/core/RegistryAccess; B_
	removeBlock (Lnet/minecraft/core/BlockPos;Z)Z a
	removeBlockEntity (Lnet/minecraft/core/BlockPos;)V n
	sendBlockUpdated (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/state/BlockState;I)V a
	sendPacketToServer (Lnet/minecraft/network/protocol/Packet;)V a
	setBlock (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;I)Z a
	setBlock (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;II)Z a
	setBlockAndUpdate (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Z b
	setBlockEntity (Lnet/minecraft/world/level/block/entity/BlockEntity;)V a
	setBlocksDirty (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/state/BlockState;)V b
	setMapData (Ljava/lang/String;Lnet/minecraft/world/level/saveddata/maps/MapItemSavedData;)V a
	setRainLevel (F)V e
	setSkyFlashTime (I)V c
	setSpawnSettings (ZZ)V b
	setThunderLevel (F)V c
	shouldTickBlocksAt (J)Z a
	shouldTickBlocksAt (Lnet/minecraft/core/BlockPos;)Z m
	shouldTickDeath (Lnet/minecraft/world/entity/Entity;)Z h
	tickBlockEntities ()V P
	updateNeighborsAt (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Block;)V a
	updateNeighborsAtExceptFromFacing (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Block;Lnet/minecraft/core/Direction;)V a
	updateNeighbourForOutputSignal (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Block;)V c
	updateSkyBrightness ()V Q
net/minecraft/world/level/Level$ExplosionInteraction cmm$a
	$VALUES e
	BLOCK b
	MOB c
	NONE a
	TNT d
	$values ()[Lnet/minecraft/world/level/Level$ExplosionInteraction; a
net/minecraft/world/level/LevelAccessor cmn
	addParticle (Lnet/minecraft/core/particles/ParticleOptions;DDDDDD)V a
	blockUpdated (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Block;)V b
	createTick (Lnet/minecraft/core/BlockPos;Ljava/lang/Object;I)Lnet/minecraft/world/ticks/ScheduledTick; a
	createTick (Lnet/minecraft/core/BlockPos;Ljava/lang/Object;ILnet/minecraft/world/ticks/TickPriority;)Lnet/minecraft/world/ticks/ScheduledTick; a
	dayTime ()J ah
	gameEvent (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/level/gameevent/GameEvent;Lnet/minecraft/core/BlockPos;)V a
	gameEvent (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/level/gameevent/GameEvent;Lnet/minecraft/world/phys/Vec3;)V a
	gameEvent (Lnet/minecraft/world/level/gameevent/GameEvent;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/gameevent/GameEvent$Context;)V a
	gameEvent (Lnet/minecraft/world/level/gameevent/GameEvent;Lnet/minecraft/world/phys/Vec3;Lnet/minecraft/world/level/gameevent/GameEvent$Context;)V a
	getBlockTicks ()Lnet/minecraft/world/ticks/LevelTickAccess; L
	getChunkSource ()Lnet/minecraft/world/level/chunk/ChunkSource; J
	getCurrentDifficultyAt (Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/DifficultyInstance; d_
	getDifficulty ()Lnet/minecraft/world/Difficulty; ai
	getFluidTicks ()Lnet/minecraft/world/ticks/LevelTickAccess; K
	getLevelData ()Lnet/minecraft/world/level/storage/LevelData; u_
	getRandom ()Lnet/minecraft/util/RandomSource; y_
	getServer ()Lnet/minecraft/server/MinecraftServer; n
	hasChunk (II)Z b
	levelEvent (ILnet/minecraft/core/BlockPos;I)V c
	levelEvent (Lnet/minecraft/world/entity/player/Player;ILnet/minecraft/core/BlockPos;I)V a
	neighborShapeChanged (Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;II)V a
	nextSubTickCount ()J A_
	playSound (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/core/BlockPos;Lnet/minecraft/sounds/SoundEvent;Lnet/minecraft/sounds/SoundSource;)V a
	playSound (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/core/BlockPos;Lnet/minecraft/sounds/SoundEvent;Lnet/minecraft/sounds/SoundSource;FF)V a
	scheduleTick (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Block;I)V a
	scheduleTick (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Block;ILnet/minecraft/world/ticks/TickPriority;)V a
	scheduleTick (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/material/Fluid;I)V a
	scheduleTick (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/material/Fluid;ILnet/minecraft/world/ticks/TickPriority;)V a
net/minecraft/world/level/LevelHeightAccessor cmo
	create (II)Lnet/minecraft/world/level/LevelHeightAccessor; e
	getHeight ()I D_
	getMaxBuildHeight ()I aj
	getMaxSection ()I am
	getMinBuildHeight ()I C_
	getMinSection ()I al
	getSectionIndex (I)I e
	getSectionIndexFromSectionY (I)I f
	getSectionYFromSectionIndex (I)I g
	getSectionsCount ()I ak
	isOutsideBuildHeight (I)Z d
	isOutsideBuildHeight (Lnet/minecraft/core/BlockPos;)Z r
net/minecraft/world/level/LevelReader cmp
	canSeeSkyFromBelowWater (Lnet/minecraft/core/BlockPos;)Z u
	containsAnyLiquid (Lnet/minecraft/world/phys/AABB;)Z d
	dimensionType ()Lnet/minecraft/world/level/dimension/DimensionType; x_
	enabledFeatures ()Lnet/minecraft/world/flag/FeatureFlagSet; G
	getBiome (Lnet/minecraft/core/BlockPos;)Lnet/minecraft/core/Holder; s
	getBiomeManager ()Lnet/minecraft/world/level/biome/BiomeManager; z_
	getBlockStatesIfLoaded (Lnet/minecraft/world/phys/AABB;)Ljava/util/stream/Stream; c
	getBlockTint (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/ColorResolver;)I a
	getChunk (II)Lnet/minecraft/world/level/chunk/ChunkAccess; a
	getChunk (IILnet/minecraft/world/level/chunk/ChunkStatus;)Lnet/minecraft/world/level/chunk/ChunkAccess; a
	getChunk (IILnet/minecraft/world/level/chunk/ChunkStatus;Z)Lnet/minecraft/world/level/chunk/ChunkAccess; a
	getChunk (Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/chunk/ChunkAccess; x
	getChunkForCollisions (II)Lnet/minecraft/world/level/BlockGetter; c
	getHeight ()I D_
	getHeight (Lnet/minecraft/world/level/levelgen/Heightmap$Types;II)I a
	getHeightmapPos (Lnet/minecraft/world/level/levelgen/Heightmap$Types;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/core/BlockPos; a
	getLightLevelDependentMagicValue (Lnet/minecraft/core/BlockPos;)F w
	getMaxLocalRawBrightness (Lnet/minecraft/core/BlockPos;)I z
	getMaxLocalRawBrightness (Lnet/minecraft/core/BlockPos;I)I c
	getMinBuildHeight ()I C_
	getPathfindingCostFromLightLevels (Lnet/minecraft/core/BlockPos;)F v
	getSeaLevel ()I t_
	getSkyDarken ()I v_
	getUncachedNoiseBiome (III)Lnet/minecraft/core/Holder; a
	hasChunk (II)Z b
	hasChunkAt (II)Z f
	hasChunkAt (Lnet/minecraft/core/BlockPos;)Z A
	hasChunksAt (IIII)Z b
	hasChunksAt (IIIIII)Z a
	hasChunksAt (Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Z a
	holderLookup (Lnet/minecraft/resources/ResourceKey;)Lnet/minecraft/core/HolderLookup; a
	isClientSide ()Z r_
	isEmptyBlock (Lnet/minecraft/core/BlockPos;)Z t
	isWaterAt (Lnet/minecraft/core/BlockPos;)Z y
	registryAccess ()Lnet/minecraft/core/RegistryAccess; B_
net/minecraft/world/level/LevelSettings cmq
	allowCommands e
	dataConfiguration g
	difficulty d
	gameRules f
	gameType b
	hardcore c
	levelName a
	allowCommands ()Z e
	copy ()Lnet/minecraft/world/level/LevelSettings; h
	difficulty ()Lnet/minecraft/world/Difficulty; d
	gameRules ()Lnet/minecraft/world/level/GameRules; f
	gameType ()Lnet/minecraft/world/level/GameType; b
	getDataConfiguration ()Lnet/minecraft/world/level/WorldDataConfiguration; g
	hardcore ()Z c
	levelName ()Ljava/lang/String; a
	parse (Lcom/mojang/serialization/Dynamic;Lnet/minecraft/world/level/WorldDataConfiguration;)Lnet/minecraft/world/level/LevelSettings; a
	withDataConfiguration (Lnet/minecraft/world/level/WorldDataConfiguration;)Lnet/minecraft/world/level/LevelSettings; a
	withDifficulty (Lnet/minecraft/world/Difficulty;)Lnet/minecraft/world/level/LevelSettings; a
	withGameType (Lnet/minecraft/world/level/GameType;)Lnet/minecraft/world/level/LevelSettings; a
net/minecraft/world/level/LevelSimulatedRW cmr
net/minecraft/world/level/LevelSimulatedReader cms
	getBlockEntity (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/entity/BlockEntityType;)Ljava/util/Optional; a
	getHeightmapPos (Lnet/minecraft/world/level/levelgen/Heightmap$Types;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/core/BlockPos; a
	isFluidAtPosition (Lnet/minecraft/core/BlockPos;Ljava/util/function/Predicate;)Z b
	isStateAtPosition (Lnet/minecraft/core/BlockPos;Ljava/util/function/Predicate;)Z a
net/minecraft/world/level/LevelTimeAccess cmt
	dayTime ()J ah
	getMoonBrightness ()F an
	getMoonPhase ()I ao
	getTimeOfDay (F)F f
net/minecraft/world/level/LevelWriter cmu
	addFreshEntity (Lnet/minecraft/world/entity/Entity;)Z b
	destroyBlock (Lnet/minecraft/core/BlockPos;Z)Z b
	destroyBlock (Lnet/minecraft/core/BlockPos;ZLnet/minecraft/world/entity/Entity;)Z a
	destroyBlock (Lnet/minecraft/core/BlockPos;ZLnet/minecraft/world/entity/Entity;I)Z a
	removeBlock (Lnet/minecraft/core/BlockPos;Z)Z a
	setBlock (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;I)Z a
	setBlock (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;II)Z a
net/minecraft/world/level/LightLayer cmv
	$VALUES c
	BLOCK b
	SKY a
	$values ()[Lnet/minecraft/world/level/LightLayer; a
net/minecraft/world/level/LocalMobCapCalculator cmw
	chunkMap c
	playerMobCounts b
	playersNearChunk a
	addMob (Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/world/entity/MobCategory;)V a
	canSpawn (Lnet/minecraft/world/entity/MobCategory;Lnet/minecraft/world/level/ChunkPos;)Z a
	getPlayersNear (Lnet/minecraft/world/level/ChunkPos;)Ljava/util/List; a
net/minecraft/world/level/LocalMobCapCalculator$MobCounts cmw$a
	counts a
	add (Lnet/minecraft/world/entity/MobCategory;)V a
	canSpawn (Lnet/minecraft/world/entity/MobCategory;)Z b
net/minecraft/world/level/NaturalSpawner cmx
	LOGGER c
	MAGIC_NUMBER e
	MIN_SPAWN_DISTANCE d
	SPAWNING_CATEGORIES f
	SPAWN_DISTANCE_BLOCK b
	SPAWN_DISTANCE_CHUNK a
	canSpawnMobAt (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/level/StructureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/world/entity/MobCategory;Lnet/minecraft/world/level/biome/MobSpawnSettings$SpawnerData;Lnet/minecraft/core/BlockPos;)Z a
	createState (ILjava/lang/Iterable;Lnet/minecraft/world/level/NaturalSpawner$ChunkGetter;Lnet/minecraft/world/level/LocalMobCapCalculator;)Lnet/minecraft/world/level/NaturalSpawner$SpawnState; a
	getMobForSpawn (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/EntityType;)Lnet/minecraft/world/entity/Mob; a
	getRandomPosWithin (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/level/chunk/LevelChunk;)Lnet/minecraft/core/BlockPos; a
	getRandomSpawnMobAt (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/level/StructureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/world/entity/MobCategory;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPos;)Ljava/util/Optional; a
	getRoughBiome (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/chunk/ChunkAccess;)Lnet/minecraft/world/level/biome/Biome; a
	getTopNonCollidingPos (Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/world/entity/EntityType;II)Lnet/minecraft/core/BlockPos; a
	isInNetherFortressBounds (Lnet/minecraft/core/BlockPos;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/MobCategory;Lnet/minecraft/world/level/StructureManager;)Z a
	isRightDistanceToPlayerAndSpawnPoint (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/level/chunk/ChunkAccess;Lnet/minecraft/core/BlockPos$MutableBlockPos;D)Z a
	isSpawnPositionOk (Lnet/minecraft/world/entity/SpawnPlacements$Type;Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/EntityType;)Z a
	isValidEmptySpawnBlock (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/material/FluidState;Lnet/minecraft/world/entity/EntityType;)Z a
	isValidPositionForMob (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/Mob;D)Z a
	isValidSpawnPostitionForType (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/MobCategory;Lnet/minecraft/world/level/StructureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/world/level/biome/MobSpawnSettings$SpawnerData;Lnet/minecraft/core/BlockPos$MutableBlockPos;D)Z a
	mobsAt (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/level/StructureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/world/entity/MobCategory;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Holder;)Lnet/minecraft/util/random/WeightedRandomList; a
	spawnCategoryForChunk (Lnet/minecraft/world/entity/MobCategory;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/level/chunk/LevelChunk;Lnet/minecraft/world/level/NaturalSpawner$SpawnPredicate;Lnet/minecraft/world/level/NaturalSpawner$AfterSpawnCallback;)V a
	spawnCategoryForPosition (Lnet/minecraft/world/entity/MobCategory;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;)V a
	spawnCategoryForPosition (Lnet/minecraft/world/entity/MobCategory;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/level/chunk/ChunkAccess;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/NaturalSpawner$SpawnPredicate;Lnet/minecraft/world/level/NaturalSpawner$AfterSpawnCallback;)V a
	spawnForChunk (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/level/chunk/LevelChunk;Lnet/minecraft/world/level/NaturalSpawner$SpawnState;ZZZ)V a
	spawnMobsForChunkGeneration (Lnet/minecraft/world/level/ServerLevelAccessor;Lnet/minecraft/core/Holder;Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/util/RandomSource;)V a
net/minecraft/world/level/NaturalSpawner$AfterSpawnCallback cmx$a
net/minecraft/world/level/NaturalSpawner$ChunkGetter cmx$b
net/minecraft/world/level/NaturalSpawner$SpawnPredicate cmx$c
net/minecraft/world/level/NaturalSpawner$SpawnState cmx$d
	lastCharge h
	lastCheckedPos f
	lastCheckedType g
	localMobCapCalculator e
	mobCategoryCounts b
	spawnPotential c
	spawnableChunkCount a
	unmodifiableMobCategoryCounts d
	afterSpawn (Lnet/minecraft/world/entity/Mob;Lnet/minecraft/world/level/chunk/ChunkAccess;)V a
	canSpawn (Lnet/minecraft/world/entity/EntityType;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/chunk/ChunkAccess;)Z a
	canSpawnForCategory (Lnet/minecraft/world/entity/MobCategory;Lnet/minecraft/world/level/ChunkPos;)Z a
	getMobCategoryCounts ()Lit/unimi/dsi/fastutil/objects/Object2IntMap; b
	getSpawnableChunkCount ()I a
net/minecraft/world/level/NoiseColumn cmy
	column b
	minY a
	getBlock (I)Lnet/minecraft/world/level/block/state/BlockState; a
	setBlock (ILnet/minecraft/world/level/block/state/BlockState;)V a
net/minecraft/world/level/PathNavigationRegion cmz
	allEmpty d
	centerX a
	centerZ b
	chunks c
	level e
	plains f
	getBlockEntity (Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/entity/BlockEntity; c_
	getBlockState (Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a_
	getChunk (II)Lnet/minecraft/world/level/chunk/ChunkAccess; a
	getChunk (Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/chunk/ChunkAccess; d
	getChunkForCollisions (II)Lnet/minecraft/world/level/BlockGetter; c
	getEntityCollisions (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/phys/AABB;)Ljava/util/List; b
	getFluidState (Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/material/FluidState; b_
	getHeight ()I D_
	getMinBuildHeight ()I C_
	getProfiler ()Lnet/minecraft/util/profiling/ProfilerFiller; a
	getWorldBorder ()Lnet/minecraft/world/level/border/WorldBorder; w_
net/minecraft/world/level/PotentialCalculator cna
	charges a
	addCharge (Lnet/minecraft/core/BlockPos;D)V a
	getPotentialEnergyChange (Lnet/minecraft/core/BlockPos;D)D b
net/minecraft/world/level/PotentialCalculator$PointCharge cna$a
	charge b
	pos a
	getPotentialChange (Lnet/minecraft/core/BlockPos;)D a
net/minecraft/world/level/ServerLevelAccessor cnb
	addFreshEntityWithPassengers (Lnet/minecraft/world/entity/Entity;)V a_
	getLevel ()Lnet/minecraft/server/level/ServerLevel; C
net/minecraft/world/level/SignalGetter cnc
	DIRECTIONS C
	getBestNeighborSignal (Lnet/minecraft/core/BlockPos;)I C
	getControlInputSignal (Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;Z)I a
	getDirectSignal (Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;)I a
	getDirectSignalTo (Lnet/minecraft/core/BlockPos;)I e_
	getSignal (Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;)I c
	hasNeighborSignal (Lnet/minecraft/core/BlockPos;)Z B
	hasSignal (Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;)Z b
net/minecraft/world/level/SpawnData cnd
	CODEC b
	ENTITY_TAG a
	LIST_CODEC c
	customSpawnRules e
	entityToSpawn d
	customSpawnRules ()Ljava/util/Optional; d
	entityToSpawn ()Lnet/minecraft/nbt/CompoundTag; c
	getCustomSpawnRules ()Ljava/util/Optional; b
	getEntityToSpawn ()Lnet/minecraft/nbt/CompoundTag; a
net/minecraft/world/level/SpawnData$CustomSpawnRules cnd$a
	CODEC a
	LIGHT_RANGE d
	blockLightLimit b
	skyLightLimit c
	blockLightLimit ()Lnet/minecraft/util/InclusiveRange; a
	checkLightBoundaries (Lnet/minecraft/util/InclusiveRange;)Lcom/mojang/serialization/DataResult; a
	lightLimit (Ljava/lang/String;)Lcom/mojang/serialization/MapCodec; a
	skyLightLimit ()Lnet/minecraft/util/InclusiveRange; b
net/minecraft/world/level/StructureManager cne
	level a
	structureCheck c
	worldOptions b
	addReference (Lnet/minecraft/world/level/levelgen/structure/StructureStart;)V a
	addReferenceForStructure (Lnet/minecraft/core/SectionPos;Lnet/minecraft/world/level/levelgen/structure/Structure;JLnet/minecraft/world/level/chunk/StructureAccess;)V a
	checkStructurePresence (Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/world/level/levelgen/structure/Structure;Z)Lnet/minecraft/world/level/levelgen/structure/StructureCheckResult; a
	fillStartsForStructure (Lnet/minecraft/world/level/levelgen/structure/Structure;Lit/unimi/dsi/fastutil/longs/LongSet;Ljava/util/function/Consumer;)V a
	forWorldGenRegion (Lnet/minecraft/server/level/WorldGenRegion;)Lnet/minecraft/world/level/StructureManager; a
	getAllStructuresAt (Lnet/minecraft/core/BlockPos;)Ljava/util/Map; b
	getStartForStructure (Lnet/minecraft/core/SectionPos;Lnet/minecraft/world/level/levelgen/structure/Structure;Lnet/minecraft/world/level/chunk/StructureAccess;)Lnet/minecraft/world/level/levelgen/structure/StructureStart; a
	getStructureAt (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/levelgen/structure/Structure;)Lnet/minecraft/world/level/levelgen/structure/StructureStart; a
	getStructureWithPieceAt (Lnet/minecraft/core/BlockPos;Lnet/minecraft/resources/ResourceKey;)Lnet/minecraft/world/level/levelgen/structure/StructureStart; a
	getStructureWithPieceAt (Lnet/minecraft/core/BlockPos;Lnet/minecraft/tags/TagKey;)Lnet/minecraft/world/level/levelgen/structure/StructureStart; a
	getStructureWithPieceAt (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/levelgen/structure/Structure;)Lnet/minecraft/world/level/levelgen/structure/StructureStart; b
	hasAnyStructureAt (Lnet/minecraft/core/BlockPos;)Z a
	registryAccess ()Lnet/minecraft/core/RegistryAccess; b
	setStartForStructure (Lnet/minecraft/core/SectionPos;Lnet/minecraft/world/level/levelgen/structure/Structure;Lnet/minecraft/world/level/levelgen/structure/StructureStart;Lnet/minecraft/world/level/chunk/StructureAccess;)V a
	shouldGenerateStructures ()Z a
	startsForStructure (Lnet/minecraft/core/SectionPos;Lnet/minecraft/world/level/levelgen/structure/Structure;)Ljava/util/List; a
	startsForStructure (Lnet/minecraft/world/level/ChunkPos;Ljava/util/function/Predicate;)Ljava/util/List; a
	structureHasPieceAt (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/levelgen/structure/StructureStart;)Z a
net/minecraft/world/level/WorldDataConfiguration cnf
	CODEC b
	DEFAULT c
	ENABLED_FEATURES_ID a
	dataPacks d
	enabledFeatures e
	dataPacks ()Lnet/minecraft/world/level/DataPackConfig; a
	enabledFeatures ()Lnet/minecraft/world/flag/FeatureFlagSet; b
	expandFeatures (Lnet/minecraft/world/flag/FeatureFlagSet;)Lnet/minecraft/world/level/WorldDataConfiguration; a
net/minecraft/world/level/WorldGenLevel cng
	ensureCanWrite (Lnet/minecraft/core/BlockPos;)Z f_
	getSeed ()J A
	setCurrentlyGenerating (Ljava/util/function/Supplier;)V a
net/minecraft/world/level/biome/AmbientAdditionsSettings cnh
	CODEC a
	soundEvent b
	tickChance c
	getSoundEvent ()Lnet/minecraft/core/Holder; a
	getTickChance ()D b
net/minecraft/world/level/biome/AmbientMoodSettings cni
	CODEC a
	LEGACY_CAVE_SETTINGS b
	blockSearchExtent e
	soundEvent c
	soundPositionOffset f
	tickDelay d
	getBlockSearchExtent ()I c
	getSoundEvent ()Lnet/minecraft/core/Holder; a
	getSoundPositionOffset ()D d
	getTickDelay ()I b
net/minecraft/world/level/biome/AmbientParticleSettings cnj
	CODEC a
	options b
	probability c
	canSpawn (Lnet/minecraft/util/RandomSource;)Z a
	getOptions ()Lnet/minecraft/core/particles/ParticleOptions; a
net/minecraft/world/level/biome/Biome cnk
	BIOME_INFO_NOISE e
	CODEC c
	DIRECT_CODEC a
	FROZEN_TEMPERATURE_NOISE g
	LIST_CODEC d
	NETWORK_CODEC b
	TEMPERATURE_CACHE_SIZE h
	TEMPERATURE_NOISE f
	climateSettings i
	generationSettings j
	mobSettings k
	specialEffects l
	temperatureCache m
	coldEnoughToSnow (Lnet/minecraft/core/BlockPos;)Z b
	getAmbientAdditions ()Ljava/util/Optional; n
	getAmbientLoop ()Ljava/util/Optional; l
	getAmbientMood ()Ljava/util/Optional; m
	getAmbientParticle ()Ljava/util/Optional; k
	getBackgroundMusic ()Ljava/util/Optional; o
	getBaseTemperature ()F g
	getFogColor ()I e
	getFoliageColor ()I f
	getFoliageColorFromTexture ()I q
	getGenerationSettings ()Lnet/minecraft/world/level/biome/BiomeGenerationSettings; d
	getGrassColor (DD)I a
	getGrassColorFromTexture ()I p
	getHeightAdjustedTemperature (Lnet/minecraft/core/BlockPos;)F e
	getMobSettings ()Lnet/minecraft/world/level/biome/MobSpawnSettings; b
	getPrecipitationAt (Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/biome/Biome$Precipitation; a
	getSkyColor ()I a
	getSpecialEffects ()Lnet/minecraft/world/level/biome/BiomeSpecialEffects; h
	getTemperature (Lnet/minecraft/core/BlockPos;)F f
	getWaterColor ()I i
	getWaterFogColor ()I j
	hasPrecipitation ()Z c
	shouldFreeze (Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;)Z a
	shouldFreeze (Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;Z)Z a
	shouldMeltFrozenOceanIcebergSlightly (Lnet/minecraft/core/BlockPos;)Z d
	shouldSnow (Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;)Z b
	warmEnoughToRain (Lnet/minecraft/core/BlockPos;)Z c
net/minecraft/world/level/biome/Biome$BiomeBuilder cnk$a
	downfall d
	generationSettings g
	hasPrecipitation a
	mobSpawnSettings f
	specialEffects e
	temperature b
	temperatureModifier c
	build ()Lnet/minecraft/world/level/biome/Biome; a
	downfall (F)Lnet/minecraft/world/level/biome/Biome$BiomeBuilder; b
	generationSettings (Lnet/minecraft/world/level/biome/BiomeGenerationSettings;)Lnet/minecraft/world/level/biome/Biome$BiomeBuilder; a
	hasPrecipitation (Z)Lnet/minecraft/world/level/biome/Biome$BiomeBuilder; a
	mobSpawnSettings (Lnet/minecraft/world/level/biome/MobSpawnSettings;)Lnet/minecraft/world/level/biome/Biome$BiomeBuilder; a
	specialEffects (Lnet/minecraft/world/level/biome/BiomeSpecialEffects;)Lnet/minecraft/world/level/biome/Biome$BiomeBuilder; a
	temperature (F)Lnet/minecraft/world/level/biome/Biome$BiomeBuilder; a
	temperatureAdjustment (Lnet/minecraft/world/level/biome/Biome$TemperatureModifier;)Lnet/minecraft/world/level/biome/Biome$BiomeBuilder; a
net/minecraft/world/level/biome/Biome$ClimateSettings cnk$b
	CODEC a
	downfall e
	hasPrecipitation b
	temperature c
	temperatureModifier d
	downfall ()F d
	hasPrecipitation ()Z a
	temperature ()F b
	temperatureModifier ()Lnet/minecraft/world/level/biome/Biome$TemperatureModifier; c
net/minecraft/world/level/biome/Biome$Precipitation cnk$c
	$VALUES d
	NONE a
	RAIN b
	SNOW c
	$values ()[Lnet/minecraft/world/level/biome/Biome$Precipitation; a
net/minecraft/world/level/biome/Biome$TemperatureModifier cnk$d
	$VALUES e
	CODEC c
	FROZEN b
	NONE a
	name d
	$values ()[Lnet/minecraft/world/level/biome/Biome$TemperatureModifier; b
	getName ()Ljava/lang/String; a
	getSerializedName ()Ljava/lang/String; c
	modifyTemperature (Lnet/minecraft/core/BlockPos;F)F a
net/minecraft/world/level/biome/BiomeGenerationSettings cnl
	CODEC b
	EMPTY a
	LOGGER c
	carvers d
	featureSet g
	features e
	flowerFeatures f
	features ()Ljava/util/List; b
	getCarvers (Lnet/minecraft/world/level/levelgen/GenerationStep$Carving;)Ljava/lang/Iterable; a
	getFlowerFeatures ()Ljava/util/List; a
	hasFeature (Lnet/minecraft/world/level/levelgen/placement/PlacedFeature;)Z a
net/minecraft/world/level/biome/BiomeGenerationSettings$Builder cnl$a
	placedFeatures a
	worldCarvers b
	addCarver (Lnet/minecraft/world/level/levelgen/GenerationStep$Carving;Lnet/minecraft/resources/ResourceKey;)Lnet/minecraft/world/level/biome/BiomeGenerationSettings$Builder; a
	addFeature (Lnet/minecraft/world/level/levelgen/GenerationStep$Decoration;Lnet/minecraft/resources/ResourceKey;)Lnet/minecraft/world/level/biome/BiomeGenerationSettings$Builder; a
net/minecraft/world/level/biome/BiomeGenerationSettings$PlainBuilder cnl$b
	carvers a
	features b
	addCarver (Lnet/minecraft/world/level/levelgen/GenerationStep$Carving;Lnet/minecraft/core/Holder;)Lnet/minecraft/world/level/biome/BiomeGenerationSettings$PlainBuilder; a
	addFeature (ILnet/minecraft/core/Holder;)Lnet/minecraft/world/level/biome/BiomeGenerationSettings$PlainBuilder; a
	addFeature (Lnet/minecraft/world/level/levelgen/GenerationStep$Decoration;Lnet/minecraft/core/Holder;)Lnet/minecraft/world/level/biome/BiomeGenerationSettings$PlainBuilder; a
	addFeatureStepsUpTo (I)V a
	build ()Lnet/minecraft/world/level/biome/BiomeGenerationSettings; a
net/minecraft/world/level/biome/BiomeManager cnm
	CHUNK_CENTER_QUART a
	ZOOM c
	ZOOM_BITS b
	ZOOM_MASK d
	biomeZoomSeed f
	noiseBiomeSource e
	getBiome (Lnet/minecraft/core/BlockPos;)Lnet/minecraft/core/Holder; a
	getFiddle (J)D b
	getFiddledDistance (JIIIDDD)D a
	getNoiseBiomeAtPosition (DDD)Lnet/minecraft/core/Holder; a
	getNoiseBiomeAtPosition (Lnet/minecraft/core/BlockPos;)Lnet/minecraft/core/Holder; b
	getNoiseBiomeAtQuart (III)Lnet/minecraft/core/Holder; a
	obfuscateSeed (J)J a
	withDifferentSource (Lnet/minecraft/world/level/biome/BiomeManager$NoiseBiomeSource;)Lnet/minecraft/world/level/biome/BiomeManager; a
net/minecraft/world/level/biome/BiomeManager$NoiseBiomeSource cnm$a
net/minecraft/world/level/biome/BiomeResolver cnn
net/minecraft/world/level/biome/BiomeSource cno
	CODEC a
	possibleBiomes b
	addDebugInfo (Ljava/util/List;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/biome/Climate$Sampler;)V a
	codec ()Lcom/mojang/serialization/Codec; a
	collectPossibleBiomes ()Ljava/util/stream/Stream; b
	findBiomeHorizontal (IIIIILjava/util/function/Predicate;Lnet/minecraft/util/RandomSource;ZLnet/minecraft/world/level/biome/Climate$Sampler;)Lcom/mojang/datafixers/util/Pair; a
	findBiomeHorizontal (IIIILjava/util/function/Predicate;Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/biome/Climate$Sampler;)Lcom/mojang/datafixers/util/Pair; a
	findClosestBiome3d (Lnet/minecraft/core/BlockPos;IIILjava/util/function/Predicate;Lnet/minecraft/world/level/biome/Climate$Sampler;Lnet/minecraft/world/level/LevelReader;)Lcom/mojang/datafixers/util/Pair; a
	getBiomesWithin (IIIILnet/minecraft/world/level/biome/Climate$Sampler;)Ljava/util/Set; a
	possibleBiomes ()Ljava/util/Set; c
net/minecraft/world/level/biome/BiomeSources cnp
	bootstrap (Lnet/minecraft/core/Registry;)Lcom/mojang/serialization/Codec; a
net/minecraft/world/level/biome/BiomeSpecialEffects cnq
	CODEC a
	ambientAdditionsSettings l
	ambientLoopSoundEvent j
	ambientMoodSettings k
	ambientParticleSettings i
	backgroundMusic m
	fogColor b
	foliageColorOverride f
	grassColorModifier h
	grassColorOverride g
	skyColor e
	waterColor c
	waterFogColor d
	getAmbientAdditionsSettings ()Ljava/util/Optional; k
	getAmbientLoopSoundEvent ()Ljava/util/Optional; i
	getAmbientMoodSettings ()Ljava/util/Optional; j
	getAmbientParticleSettings ()Ljava/util/Optional; h
	getBackgroundMusic ()Ljava/util/Optional; l
	getFogColor ()I a
	getFoliageColorOverride ()Ljava/util/Optional; e
	getGrassColorModifier ()Lnet/minecraft/world/level/biome/BiomeSpecialEffects$GrassColorModifier; g
	getGrassColorOverride ()Ljava/util/Optional; f
	getSkyColor ()I d
	getWaterColor ()I b
	getWaterFogColor ()I c
net/minecraft/world/level/biome/BiomeSpecialEffects$Builder cnq$a
	ambientAdditionsSettings k
	ambientLoopSoundEvent i
	ambientMoodSettings j
	ambientParticle h
	backgroundMusic l
	fogColor a
	foliageColorOverride e
	grassColorModifier g
	grassColorOverride f
	skyColor d
	waterColor b
	waterFogColor c
	ambientAdditionsSound (Lnet/minecraft/world/level/biome/AmbientAdditionsSettings;)Lnet/minecraft/world/level/biome/BiomeSpecialEffects$Builder; a
	ambientLoopSound (Lnet/minecraft/core/Holder;)Lnet/minecraft/world/level/biome/BiomeSpecialEffects$Builder; a
	ambientMoodSound (Lnet/minecraft/world/level/biome/AmbientMoodSettings;)Lnet/minecraft/world/level/biome/BiomeSpecialEffects$Builder; a
	ambientParticle (Lnet/minecraft/world/level/biome/AmbientParticleSettings;)Lnet/minecraft/world/level/biome/BiomeSpecialEffects$Builder; a
	backgroundMusic (Lnet/minecraft/sounds/Music;)Lnet/minecraft/world/level/biome/BiomeSpecialEffects$Builder; a
	build ()Lnet/minecraft/world/level/biome/BiomeSpecialEffects; a
	fogColor (I)Lnet/minecraft/world/level/biome/BiomeSpecialEffects$Builder; a
	foliageColorOverride (I)Lnet/minecraft/world/level/biome/BiomeSpecialEffects$Builder; e
	grassColorModifier (Lnet/minecraft/world/level/biome/BiomeSpecialEffects$GrassColorModifier;)Lnet/minecraft/world/level/biome/BiomeSpecialEffects$Builder; a
	grassColorOverride (I)Lnet/minecraft/world/level/biome/BiomeSpecialEffects$Builder; f
	skyColor (I)Lnet/minecraft/world/level/biome/BiomeSpecialEffects$Builder; d
	waterColor (I)Lnet/minecraft/world/level/biome/BiomeSpecialEffects$Builder; b
	waterFogColor (I)Lnet/minecraft/world/level/biome/BiomeSpecialEffects$Builder; c
net/minecraft/world/level/biome/BiomeSpecialEffects$GrassColorModifier cnq$b
	$VALUES f
	CODEC d
	DARK_FOREST b
	NONE a
	SWAMP c
	name e
	$values ()[Lnet/minecraft/world/level/biome/BiomeSpecialEffects$GrassColorModifier; b
	getName ()Ljava/lang/String; a
	getSerializedName ()Ljava/lang/String; c
	modifyColor (DDI)I a
net/minecraft/world/level/biome/Biomes cnr
	BADLANDS A
	BAMBOO_JUNGLE z
	BASALT_DELTAS ag
	BEACH M
	BIRCH_FOREST k
	CHERRY_GROVE E
	COLD_OCEAN U
	CRIMSON_FOREST ae
	DARK_FOREST l
	DEEP_COLD_OCEAN V
	DEEP_DARK ab
	DEEP_FROZEN_OCEAN X
	DEEP_LUKEWARM_OCEAN R
	DEEP_OCEAN T
	DESERT f
	DRIPSTONE_CAVES Z
	END_BARRENS al
	END_HIGHLANDS ai
	END_MIDLANDS aj
	ERODED_BADLANDS B
	FLOWER_FOREST j
	FOREST i
	FROZEN_OCEAN W
	FROZEN_PEAKS H
	FROZEN_RIVER L
	GROVE F
	ICE_SPIKES e
	JAGGED_PEAKS I
	JUNGLE x
	LUKEWARM_OCEAN Q
	LUSH_CAVES aa
	MANGROVE_SWAMP h
	MEADOW D
	MUSHROOM_FIELDS Y
	NETHER_WASTES ac
	OCEAN S
	OLD_GROWTH_BIRCH_FOREST m
	OLD_GROWTH_PINE_TAIGA n
	OLD_GROWTH_SPRUCE_TAIGA o
	PLAINS b
	RIVER K
	SAVANNA r
	SAVANNA_PLATEAU s
	SMALL_END_ISLANDS ak
	SNOWY_BEACH N
	SNOWY_PLAINS d
	SNOWY_SLOPES G
	SNOWY_TAIGA q
	SOUL_SAND_VALLEY af
	SPARSE_JUNGLE y
	STONY_PEAKS J
	STONY_SHORE O
	SUNFLOWER_PLAINS c
	SWAMP g
	TAIGA p
	THE_END ah
	THE_VOID a
	WARM_OCEAN P
	WARPED_FOREST ad
	WINDSWEPT_FOREST v
	WINDSWEPT_GRAVELLY_HILLS u
	WINDSWEPT_HILLS t
	WINDSWEPT_SAVANNA w
	WOODED_BADLANDS C
	register (Ljava/lang/String;)Lnet/minecraft/resources/ResourceKey; a
net/minecraft/world/level/biome/CheckerboardColumnBiomeSource cns
	CODEC b
	allowedBiomes c
	bitShift d
	size e
	codec ()Lcom/mojang/serialization/Codec; a
	collectPossibleBiomes ()Ljava/util/stream/Stream; b
net/minecraft/world/level/biome/Climate cnt
	DEBUG_SLOW_BIOME_SEARCH b
	PARAMETER_COUNT a
	QUANTIZATION_FACTOR c
	empty ()Lnet/minecraft/world/level/biome/Climate$Sampler; a
	findSpawnPosition (Ljava/util/List;Lnet/minecraft/world/level/biome/Climate$Sampler;)Lnet/minecraft/core/BlockPos; a
	parameters (FFFFFFF)Lnet/minecraft/world/level/biome/Climate$ParameterPoint; a
	parameters (Lnet/minecraft/world/level/biome/Climate$Parameter;Lnet/minecraft/world/level/biome/Climate$Parameter;Lnet/minecraft/world/level/biome/Climate$Parameter;Lnet/minecraft/world/level/biome/Climate$Parameter;Lnet/minecraft/world/level/biome/Climate$Parameter;Lnet/minecraft/world/level/biome/Climate$Parameter;F)Lnet/minecraft/world/level/biome/Climate$ParameterPoint; a
	quantizeCoord (F)J a
	target (FFFFFF)Lnet/minecraft/world/level/biome/Climate$TargetPoint; a
	unquantizeCoord (J)F a
net/minecraft/world/level/biome/Climate$DistanceMetric cnt$a
net/minecraft/world/level/biome/Climate$Parameter cnt$b
	CODEC a
	max c
	min b
	distance (J)J a
	distance (Lnet/minecraft/world/level/biome/Climate$Parameter;)J a
	max ()J b
	min ()J a
	point (F)Lnet/minecraft/world/level/biome/Climate$Parameter; a
	span (FF)Lnet/minecraft/world/level/biome/Climate$Parameter; a
	span (Lnet/minecraft/world/level/biome/Climate$Parameter;)Lnet/minecraft/world/level/biome/Climate$Parameter; b
	span (Lnet/minecraft/world/level/biome/Climate$Parameter;Lnet/minecraft/world/level/biome/Climate$Parameter;)Lnet/minecraft/world/level/biome/Climate$Parameter; a
net/minecraft/world/level/biome/Climate$ParameterList cnt$c
	index b
	values a
	codec (Lcom/mojang/serialization/MapCodec;)Lcom/mojang/serialization/Codec; a
	findValue (Lnet/minecraft/world/level/biome/Climate$TargetPoint;)Ljava/lang/Object; a
	findValueBruteForce (Lnet/minecraft/world/level/biome/Climate$TargetPoint;)Ljava/lang/Object; b
	findValueIndex (Lnet/minecraft/world/level/biome/Climate$TargetPoint;)Ljava/lang/Object; c
	findValueIndex (Lnet/minecraft/world/level/biome/Climate$TargetPoint;Lnet/minecraft/world/level/biome/Climate$DistanceMetric;)Ljava/lang/Object; a
	values ()Ljava/util/List; a
net/minecraft/world/level/biome/Climate$ParameterPoint cnt$d
	CODEC a
	continentalness d
	depth f
	erosion e
	humidity c
	offset h
	temperature b
	weirdness g
	continentalness ()Lnet/minecraft/world/level/biome/Climate$Parameter; d
	depth ()Lnet/minecraft/world/level/biome/Climate$Parameter; f
	erosion ()Lnet/minecraft/world/level/biome/Climate$Parameter; e
	fitness (Lnet/minecraft/world/level/biome/Climate$TargetPoint;)J a
	humidity ()Lnet/minecraft/world/level/biome/Climate$Parameter; c
	offset ()J h
	parameterSpace ()Ljava/util/List; a
	temperature ()Lnet/minecraft/world/level/biome/Climate$Parameter; b
	weirdness ()Lnet/minecraft/world/level/biome/Climate$Parameter; g
net/minecraft/world/level/biome/Climate$RTree cnt$e
	CHILDREN_PER_NODE a
	lastResult c
	root b
	bucketize (Ljava/util/List;)Ljava/util/List; b
	build (ILjava/util/List;)Lnet/minecraft/world/level/biome/Climate$RTree$Node; a
	buildParameterSpace (Ljava/util/List;)Ljava/util/List; c
	comparator (IZ)Ljava/util/Comparator; a
	cost ([Lnet/minecraft/world/level/biome/Climate$Parameter;)J a
	create (Ljava/util/List;)Lnet/minecraft/world/level/biome/Climate$RTree; a
	search (Lnet/minecraft/world/level/biome/Climate$TargetPoint;Lnet/minecraft/world/level/biome/Climate$DistanceMetric;)Ljava/lang/Object; a
	sort (Ljava/util/List;IIZ)V a
net/minecraft/world/level/biome/Climate$RTree$Leaf cnt$e$a
	value b
	search ([JLnet/minecraft/world/level/biome/Climate$RTree$Leaf;Lnet/minecraft/world/level/biome/Climate$DistanceMetric;)Lnet/minecraft/world/level/biome/Climate$RTree$Leaf; a
net/minecraft/world/level/biome/Climate$RTree$Node cnt$e$b
	parameterSpace a
	distance ([J)J a
	search ([JLnet/minecraft/world/level/biome/Climate$RTree$Leaf;Lnet/minecraft/world/level/biome/Climate$DistanceMetric;)Lnet/minecraft/world/level/biome/Climate$RTree$Leaf; a
net/minecraft/world/level/biome/Climate$RTree$SubTree cnt$e$c
	children b
	search ([JLnet/minecraft/world/level/biome/Climate$RTree$Leaf;Lnet/minecraft/world/level/biome/Climate$DistanceMetric;)Lnet/minecraft/world/level/biome/Climate$RTree$Leaf; a
net/minecraft/world/level/biome/Climate$Sampler cnt$f
	continentalness c
	depth e
	erosion d
	humidity b
	spawnTarget g
	temperature a
	weirdness f
	continentalness ()Lnet/minecraft/world/level/levelgen/DensityFunction; d
	depth ()Lnet/minecraft/world/level/levelgen/DensityFunction; f
	erosion ()Lnet/minecraft/world/level/levelgen/DensityFunction; e
	findSpawnPosition ()Lnet/minecraft/core/BlockPos; a
	humidity ()Lnet/minecraft/world/level/levelgen/DensityFunction; c
	sample (III)Lnet/minecraft/world/level/biome/Climate$TargetPoint; a
	spawnTarget ()Ljava/util/List; h
	temperature ()Lnet/minecraft/world/level/levelgen/DensityFunction; b
	weirdness ()Lnet/minecraft/world/level/levelgen/DensityFunction; g
net/minecraft/world/level/biome/Climate$SpawnFinder cnt$g
	result a
	getSpawnPositionAndFitness (Ljava/util/List;Lnet/minecraft/world/level/biome/Climate$Sampler;II)Lnet/minecraft/world/level/biome/Climate$SpawnFinder$Result; a
	radialSearch (Ljava/util/List;Lnet/minecraft/world/level/biome/Climate$Sampler;FF)V a
net/minecraft/world/level/biome/Climate$SpawnFinder$Result cnt$g$a
	fitness b
	location a
	fitness ()J b
	location ()Lnet/minecraft/core/BlockPos; a
net/minecraft/world/level/biome/Climate$TargetPoint cnt$h
	continentalness c
	depth e
	erosion d
	humidity b
	temperature a
	weirdness f
	continentalness ()J d
	depth ()J f
	erosion ()J e
	humidity ()J c
	temperature ()J b
	toParameterArray ()[J a
	weirdness ()J g
net/minecraft/world/level/biome/FeatureSorter cnu
	buildFeaturesPerStep (Ljava/util/List;Ljava/util/function/Function;Z)Ljava/util/List; a
net/minecraft/world/level/biome/FeatureSorter$StepFeatureData cnu$b
	features a
	indexMapping b
	features ()Ljava/util/List; a
	indexMapping ()Ljava/util/function/ToIntFunction; b
net/minecraft/world/level/biome/FixedBiomeSource cnv
	CODEC b
	biome c
	codec ()Lcom/mojang/serialization/Codec; a
	collectPossibleBiomes ()Ljava/util/stream/Stream; b
	findBiomeHorizontal (IIIIILjava/util/function/Predicate;Lnet/minecraft/util/RandomSource;ZLnet/minecraft/world/level/biome/Climate$Sampler;)Lcom/mojang/datafixers/util/Pair; a
	findClosestBiome3d (Lnet/minecraft/core/BlockPos;IIILjava/util/function/Predicate;Lnet/minecraft/world/level/biome/Climate$Sampler;Lnet/minecraft/world/level/LevelReader;)Lcom/mojang/datafixers/util/Pair; a
	getBiomesWithin (IIIILnet/minecraft/world/level/biome/Climate$Sampler;)Ljava/util/Set; a
net/minecraft/world/level/biome/MobSpawnSettings cnw
	CODEC c
	DEFAULT_CREATURE_SPAWN_PROBABILITY e
	EMPTY b
	EMPTY_MOB_LIST a
	LOGGER d
	creatureGenerationProbability f
	mobSpawnCosts h
	spawners g
	getCreatureProbability ()F a
	getMobSpawnCost (Lnet/minecraft/world/entity/EntityType;)Lnet/minecraft/world/level/biome/MobSpawnSettings$MobSpawnCost; a
	getMobs (Lnet/minecraft/world/entity/MobCategory;)Lnet/minecraft/util/random/WeightedRandomList; a
net/minecraft/world/level/biome/MobSpawnSettings$Builder cnw$a
	creatureGenerationProbability c
	mobSpawnCosts b
	spawners a
	addMobCharge (Lnet/minecraft/world/entity/EntityType;DD)Lnet/minecraft/world/level/biome/MobSpawnSettings$Builder; a
	addSpawn (Lnet/minecraft/world/entity/MobCategory;Lnet/minecraft/world/level/biome/MobSpawnSettings$SpawnerData;)Lnet/minecraft/world/level/biome/MobSpawnSettings$Builder; a
	build ()Lnet/minecraft/world/level/biome/MobSpawnSettings; a
	creatureGenerationProbability (F)Lnet/minecraft/world/level/biome/MobSpawnSettings$Builder; a
net/minecraft/world/level/biome/MobSpawnSettings$MobSpawnCost cnw$b
	CODEC a
	charge c
	energyBudget b
	charge ()D b
	energyBudget ()D a
net/minecraft/world/level/biome/MobSpawnSettings$SpawnerData cnw$c
	CODEC a
	maxCount d
	minCount c
	type b
net/minecraft/world/level/biome/MultiNoiseBiomeSource cnx
	CODEC c
	DIRECT_CODEC b
	ENTRY_CODEC d
	PRESET_CODEC e
	parameters f
	addDebugInfo (Ljava/util/List;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/biome/Climate$Sampler;)V a
	codec ()Lcom/mojang/serialization/Codec; a
	collectPossibleBiomes ()Ljava/util/stream/Stream; b
	createFromList (Lnet/minecraft/world/level/biome/Climate$ParameterList;)Lnet/minecraft/world/level/biome/MultiNoiseBiomeSource; a
	createFromPreset (Lnet/minecraft/core/Holder;)Lnet/minecraft/world/level/biome/MultiNoiseBiomeSource; a
	getNoiseBiome (Lnet/minecraft/world/level/biome/Climate$TargetPoint;)Lnet/minecraft/core/Holder; a
	parameters ()Lnet/minecraft/world/level/biome/Climate$ParameterList; d
	stable (Lnet/minecraft/resources/ResourceKey;)Z a
net/minecraft/world/level/biome/MultiNoiseBiomeSourceParameterList cny
	CODEC b
	DIRECT_CODEC a
	parameters d
	preset c
	knownPresets ()Ljava/util/Map; b
	parameters ()Lnet/minecraft/world/level/biome/Climate$ParameterList; a
net/minecraft/world/level/biome/MultiNoiseBiomeSourceParameterList$Preset cny$a
	BY_NAME f
	CODEC c
	NETHER a
	OVERWORLD b
	id d
	provider e
	generateOverworldBiomes (Ljava/util/function/Function;)Lnet/minecraft/world/level/biome/Climate$ParameterList; a
	id ()Lnet/minecraft/resources/ResourceLocation; b
	provider ()Lnet/minecraft/world/level/biome/MultiNoiseBiomeSourceParameterList$Preset$SourceProvider; c
	usedBiomes ()Ljava/util/stream/Stream; a
net/minecraft/world/level/biome/MultiNoiseBiomeSourceParameterList$Preset$SourceProvider cny$a$a
net/minecraft/world/level/biome/MultiNoiseBiomeSourceParameterLists cnz
	NETHER a
	OVERWORLD b
	bootstrap (Lnet/minecraft/data/worldgen/BootstapContext;)V a
	register (Ljava/lang/String;)Lnet/minecraft/resources/ResourceKey; a
net/minecraft/world/level/biome/OverworldBiomeBuilder coa
	DEPTH_DEEP_DARK_DRYNESS_THRESHOLD n
	EROSION_DEEP_DARK_DRYNESS_THRESHOLD m
	EROSION_INDEX_1_START f
	EROSION_INDEX_2_START g
	FAR_INLAND_START e
	FROZEN_RANGE s
	FULL_RANGE o
	HIGH_END j
	HIGH_START a
	LOW_START i
	MIDDLE_BIOMES D
	MIDDLE_BIOMES_VARIANT E
	MID_INLAND_START d
	NEAR_INLAND_START c
	OCEANS C
	PEAK_END l
	PEAK_SIZE k
	PEAK_START b
	PLATEAU_BIOMES F
	PLATEAU_BIOMES_VARIANT G
	SHATTERED_BIOMES H
	UNFROZEN_RANGE t
	VALLEY_SIZE h
	coastContinentalness x
	deepOceanContinentalness v
	erosions r
	farInlandContinentalness B
	humidities q
	inlandContinentalness y
	midInlandContinentalness A
	mushroomFieldsContinentalness u
	nearInlandContinentalness z
	oceanContinentalness w
	temperatures p
	addBiomes (Ljava/util/function/Consumer;)V a
	addBottomBiome (Ljava/util/function/Consumer;Lnet/minecraft/world/level/biome/Climate$Parameter;Lnet/minecraft/world/level/biome/Climate$Parameter;Lnet/minecraft/world/level/biome/Climate$Parameter;Lnet/minecraft/world/level/biome/Climate$Parameter;Lnet/minecraft/world/level/biome/Climate$Parameter;FLnet/minecraft/resources/ResourceKey;)V c
	addDebugBiomes (Ljava/util/function/Consumer;)V b
	addHighSlice (Ljava/util/function/Consumer;Lnet/minecraft/world/level/biome/Climate$Parameter;)V b
	addInlandBiomes (Ljava/util/function/Consumer;)V d
	addLowSlice (Ljava/util/function/Consumer;Lnet/minecraft/world/level/biome/Climate$Parameter;)V d
	addMidSlice (Ljava/util/function/Consumer;Lnet/minecraft/world/level/biome/Climate$Parameter;)V c
	addOffCoastBiomes (Ljava/util/function/Consumer;)V c
	addPeaks (Ljava/util/function/Consumer;Lnet/minecraft/world/level/biome/Climate$Parameter;)V a
	addSurfaceBiome (Ljava/util/function/Consumer;Lnet/minecraft/world/level/biome/Climate$Parameter;Lnet/minecraft/world/level/biome/Climate$Parameter;Lnet/minecraft/world/level/biome/Climate$Parameter;Lnet/minecraft/world/level/biome/Climate$Parameter;Lnet/minecraft/world/level/biome/Climate$Parameter;FLnet/minecraft/resources/ResourceKey;)V a
	addUndergroundBiome (Ljava/util/function/Consumer;Lnet/minecraft/world/level/biome/Climate$Parameter;Lnet/minecraft/world/level/biome/Climate$Parameter;Lnet/minecraft/world/level/biome/Climate$Parameter;Lnet/minecraft/world/level/biome/Climate$Parameter;Lnet/minecraft/world/level/biome/Climate$Parameter;FLnet/minecraft/resources/ResourceKey;)V b
	addUndergroundBiomes (Ljava/util/function/Consumer;)V e
	addValleys (Ljava/util/function/Consumer;Lnet/minecraft/world/level/biome/Climate$Parameter;)V e
	getContinentalnessThresholds ()[Lnet/minecraft/world/level/biome/Climate$Parameter; e
	getDebugStringForContinentalness (D)Ljava/lang/String; b
	getDebugStringForErosion (D)Ljava/lang/String; c
	getDebugStringForHumidity (D)Ljava/lang/String; e
	getDebugStringForNoiseValue (D[Lnet/minecraft/world/level/biome/Climate$Parameter;)Ljava/lang/String; a
	getDebugStringForPeaksAndValleys (D)Ljava/lang/String; a
	getDebugStringForTemperature (D)Ljava/lang/String; d
	getErosionThresholds ()[Lnet/minecraft/world/level/biome/Climate$Parameter; d
	getHumidityThresholds ()[Lnet/minecraft/world/level/biome/Climate$Parameter; c
	getPeaksAndValleysThresholds ()[Lnet/minecraft/world/level/biome/Climate$Parameter; f
	getTemperatureThresholds ()[Lnet/minecraft/world/level/biome/Climate$Parameter; b
	getWeirdnessThresholds ()[Lnet/minecraft/world/level/biome/Climate$Parameter; g
	isDeepDarkRegion (Lnet/minecraft/world/level/levelgen/DensityFunction;Lnet/minecraft/world/level/levelgen/DensityFunction;Lnet/minecraft/world/level/levelgen/DensityFunction$FunctionContext;)Z a
	maybePickWindsweptSavannaBiome (IILnet/minecraft/world/level/biome/Climate$Parameter;Lnet/minecraft/resources/ResourceKey;)Lnet/minecraft/resources/ResourceKey; a
	pickBadlandsBiome (ILnet/minecraft/world/level/biome/Climate$Parameter;)Lnet/minecraft/resources/ResourceKey; a
	pickBeachBiome (II)Lnet/minecraft/resources/ResourceKey; a
	pickMiddleBiome (IILnet/minecraft/world/level/biome/Climate$Parameter;)Lnet/minecraft/resources/ResourceKey; a
	pickMiddleBiomeOrBadlandsIfHot (IILnet/minecraft/world/level/biome/Climate$Parameter;)Lnet/minecraft/resources/ResourceKey; b
	pickMiddleBiomeOrBadlandsIfHotOrSlopeIfCold (IILnet/minecraft/world/level/biome/Climate$Parameter;)Lnet/minecraft/resources/ResourceKey; c
	pickPeakBiome (IILnet/minecraft/world/level/biome/Climate$Parameter;)Lnet/minecraft/resources/ResourceKey; f
	pickPlateauBiome (IILnet/minecraft/world/level/biome/Climate$Parameter;)Lnet/minecraft/resources/ResourceKey; e
	pickShatteredBiome (IILnet/minecraft/world/level/biome/Climate$Parameter;)Lnet/minecraft/resources/ResourceKey; h
	pickShatteredCoastBiome (IILnet/minecraft/world/level/biome/Climate$Parameter;)Lnet/minecraft/resources/ResourceKey; d
	pickSlopeBiome (IILnet/minecraft/world/level/biome/Climate$Parameter;)Lnet/minecraft/resources/ResourceKey; g
	spawnTarget ()Ljava/util/List; a
net/minecraft/world/level/biome/TheEndBiomeSource cob
	CODEC b
	barrens g
	end c
	highlands d
	islands f
	midlands e
	codec ()Lcom/mojang/serialization/Codec; a
	collectPossibleBiomes ()Ljava/util/stream/Stream; b
	create (Lnet/minecraft/core/HolderGetter;)Lnet/minecraft/world/level/biome/TheEndBiomeSource; a
net/minecraft/world/level/block/AbstractBannerBlock cod
	color a
	getCloneItemStack (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/item/ItemStack; a
	getColor ()Lnet/minecraft/world/item/DyeColor; a
	isPossibleToRespawnInThis (Lnet/minecraft/world/level/block/state/BlockState;)Z a
	newBlockEntity (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/entity/BlockEntity; a
	setPlacedBy (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/item/ItemStack;)V a
net/minecraft/world/level/block/AbstractCandleBlock coe
	LIGHT_PER_CANDLE a
	LIT b
	addParticlesAndSound (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/phys/Vec3;Lnet/minecraft/util/RandomSource;)V a
	animateTick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/util/RandomSource;)V a
	canBeLit (Lnet/minecraft/world/level/block/state/BlockState;)Z d
	extinguish (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;)V a
	getParticleOffsets (Lnet/minecraft/world/level/block/state/BlockState;)Ljava/lang/Iterable; b
	isLit (Lnet/minecraft/world/level/block/state/BlockState;)Z c
	onProjectileHit (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/phys/BlockHitResult;Lnet/minecraft/world/entity/projectile/Projectile;)V a
	setLit (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/BlockPos;Z)V a
net/minecraft/world/level/block/AbstractCauldronBlock cof
	FLOOR_LEVEL a
	INSIDE g
	LEG_DEPTH f
	LEG_HEIGHT e
	LEG_WIDTH d
	SHAPE b
	SIDE_THICKNESS c
	interactions h
	canReceiveStalactiteDrip (Lnet/minecraft/world/level/material/Fluid;)Z a
	getContentHeight (Lnet/minecraft/world/level/block/state/BlockState;)D b
	getInteractionShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	hasAnalogOutputSignal (Lnet/minecraft/world/level/block/state/BlockState;)Z d_
	isEntityInsideContent (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/Entity;)Z a
	isFull (Lnet/minecraft/world/level/block/state/BlockState;)Z d
	isPathfindable (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/pathfinder/PathComputationType;)Z a
	receiveStalactiteDrip (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/material/Fluid;)V a
	tick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Lnet/minecraft/util/RandomSource;)V a
	use (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;Lnet/minecraft/world/phys/BlockHitResult;)Lnet/minecraft/world/InteractionResult; a
net/minecraft/world/level/block/AbstractChestBlock cog
	blockEntityType a
	combine (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Z)Lnet/minecraft/world/level/block/DoubleBlockCombiner$NeighborCombineResult; a
net/minecraft/world/level/block/AbstractFurnaceBlock coh
	FACING a
	LIT b
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	createFurnaceTicker (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/level/block/entity/BlockEntityType;Lnet/minecraft/world/level/block/entity/BlockEntityType;)Lnet/minecraft/world/level/block/entity/BlockEntityTicker; a
	getAnalogOutputSignal (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)I a
	getRenderShape (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/RenderShape; b_
	getStateForPlacement (Lnet/minecraft/world/item/context/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	hasAnalogOutputSignal (Lnet/minecraft/world/level/block/state/BlockState;)Z d_
	mirror (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Mirror;)Lnet/minecraft/world/level/block/state/BlockState; a
	onRemove (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)V a
	openContainer (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/player/Player;)V a
	rotate (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Rotation;)Lnet/minecraft/world/level/block/state/BlockState; a
	setPlacedBy (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/item/ItemStack;)V a
	use (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;Lnet/minecraft/world/phys/BlockHitResult;)Lnet/minecraft/world/InteractionResult; a
net/minecraft/world/level/block/AbstractGlassBlock coi
	getShadeBrightness (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)F b
	getVisualShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; b
	propagatesSkylightDown (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Z c
net/minecraft/world/level/block/AbstractSkullBlock coj
	type a
	getEquipmentSlot ()Lnet/minecraft/world/entity/EquipmentSlot; g
	getTicker (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/entity/BlockEntityType;)Lnet/minecraft/world/level/block/entity/BlockEntityTicker; a
	getType ()Lnet/minecraft/world/level/block/SkullBlock$Type; a
	isPathfindable (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/pathfinder/PathComputationType;)Z a
	newBlockEntity (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/entity/BlockEntity; a
net/minecraft/world/level/block/AirBlock cok
	getRenderShape (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/RenderShape; b_
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
net/minecraft/world/level/block/AmethystBlock col
	onProjectileHit (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/phys/BlockHitResult;Lnet/minecraft/world/entity/projectile/Projectile;)V a
net/minecraft/world/level/block/AmethystClusterBlock com
	FACING b
	WATERLOGGED a
	downAabb h
	eastAabb e
	northAabb c
	southAabb d
	upAabb g
	westAabb f
	canSurvive (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;)Z a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getFluidState (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/material/FluidState; c_
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	getStateForPlacement (Lnet/minecraft/world/item/context/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	mirror (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Mirror;)Lnet/minecraft/world/level/block/state/BlockState; a
	rotate (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Rotation;)Lnet/minecraft/world/level/block/state/BlockState; a
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
net/minecraft/world/level/block/AnvilBlock coo
	BASE b
	CONTAINER_TITLE k
	FACING a
	FALL_DAMAGE_MAX m
	FALL_DAMAGE_PER_DISTANCE l
	X_AXIS_AABB i
	X_LEG1 c
	X_LEG2 d
	X_TOP e
	Z_AXIS_AABB j
	Z_LEG1 f
	Z_LEG2 g
	Z_TOP h
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	damage (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/state/BlockState; e
	falling (Lnet/minecraft/world/entity/item/FallingBlockEntity;)V a
	getDustColor (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)I d
	getFallDamageSource (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/world/damagesource/DamageSource; a
	getMenuProvider (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/MenuProvider; b
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	getStateForPlacement (Lnet/minecraft/world/item/context/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	isPathfindable (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/pathfinder/PathComputationType;)Z a
	onBrokenAfterFall (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/item/FallingBlockEntity;)V a
	onLand (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/entity/item/FallingBlockEntity;)V a
	rotate (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Rotation;)Lnet/minecraft/world/level/block/state/BlockState; a
	use (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;Lnet/minecraft/world/phys/BlockHitResult;)Lnet/minecraft/world/InteractionResult; a
net/minecraft/world/level/block/AttachedStemBlock cop
	AABBS c
	AABB_OFFSET b
	FACING a
	fruit d
	seedSupplier e
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getCloneItemStack (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/item/ItemStack; a
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	mayPlaceOn (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Z d
	mirror (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Mirror;)Lnet/minecraft/world/level/block/state/BlockState; a
	rotate (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Rotation;)Lnet/minecraft/world/level/block/state/BlockState; a
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
net/minecraft/world/level/block/AzaleaBlock coq
	SHAPE b
	TREE_GROWER a
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	isBonemealSuccess (Lnet/minecraft/world/level/Level;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Z a
	isValidBonemealTarget (Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)Z a
	mayPlaceOn (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Z d
	performBonemeal (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V a
net/minecraft/world/level/block/BambooSaplingBlock cor
	SAPLING_AABB_OFFSET a
	SAPLING_SHAPE b
	canSurvive (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;)Z a
	getCloneItemStack (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/item/ItemStack; a
	getDestroyProgress (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)F a
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	growBamboo (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)V a
	isBonemealSuccess (Lnet/minecraft/world/level/Level;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Z a
	isValidBonemealTarget (Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)Z a
	performBonemeal (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V a
	randomTick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Lnet/minecraft/util/RandomSource;)V b
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
net/minecraft/world/level/block/BambooStalkBlock cos
	AGE g
	AGE_THICK_BAMBOO n
	AGE_THIN_BAMBOO m
	COLLISION_AABB_OFFSET c
	COLLISION_SHAPE f
	LARGE_LEAVES_AABB_OFFSET b
	LARGE_SHAPE e
	LEAVES h
	MAX_HEIGHT j
	SMALL_LEAVES_AABB_OFFSET a
	SMALL_SHAPE d
	STAGE i
	STAGE_DONE_GROWING l
	STAGE_GROWING k
	canSurvive (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;)Z a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getCollisionShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; c
	getDestroyProgress (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)F a
	getHeightAboveUpToMax (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)I a
	getHeightBelowUpToMax (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)I b
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	getStateForPlacement (Lnet/minecraft/world/item/context/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	growBamboo (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/util/RandomSource;I)V a
	isBonemealSuccess (Lnet/minecraft/world/level/Level;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Z a
	isCollisionShapeFullBlock (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Z a_
	isPathfindable (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/pathfinder/PathComputationType;)Z a
	isRandomlyTicking (Lnet/minecraft/world/level/block/state/BlockState;)Z e_
	isValidBonemealTarget (Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)Z a
	performBonemeal (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V a
	propagatesSkylightDown (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Z c
	randomTick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Lnet/minecraft/util/RandomSource;)V b
	tick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Lnet/minecraft/util/RandomSource;)V a
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
net/minecraft/world/level/block/BannerBlock cot
	BY_COLOR b
	ROTATION a
	SHAPE c
	byColor (Lnet/minecraft/world/item/DyeColor;)Lnet/minecraft/world/level/block/Block; a
	canSurvive (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;)Z a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	getStateForPlacement (Lnet/minecraft/world/item/context/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	mirror (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Mirror;)Lnet/minecraft/world/level/block/state/BlockState; a
	rotate (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Rotation;)Lnet/minecraft/world/level/block/state/BlockState; a
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
net/minecraft/world/level/block/BarrelBlock cou
	FACING a
	OPEN b
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getAnalogOutputSignal (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)I a
	getRenderShape (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/RenderShape; b_
	getStateForPlacement (Lnet/minecraft/world/item/context/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	hasAnalogOutputSignal (Lnet/minecraft/world/level/block/state/BlockState;)Z d_
	mirror (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Mirror;)Lnet/minecraft/world/level/block/state/BlockState; a
	newBlockEntity (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/entity/BlockEntity; a
	onRemove (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)V a
	rotate (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Rotation;)Lnet/minecraft/world/level/block/state/BlockState; a
	setPlacedBy (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/item/ItemStack;)V a
	tick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Lnet/minecraft/util/RandomSource;)V a
	use (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;Lnet/minecraft/world/phys/BlockHitResult;)Lnet/minecraft/world/InteractionResult; a
net/minecraft/world/level/block/BarrierBlock cov
	getRenderShape (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/RenderShape; b_
	getShadeBrightness (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)F b
	propagatesSkylightDown (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Z c
net/minecraft/world/level/block/BaseCoralFanBlock cow
	AABB a
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
net/minecraft/world/level/block/BaseCoralPlantBlock cox
	AABB_OFFSET a
	SHAPE b
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
net/minecraft/world/level/block/BaseCoralPlantTypeBlock coy
	AABB a
	WATERLOGGED c
	canSurvive (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;)Z a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getFluidState (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/material/FluidState; c_
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	getStateForPlacement (Lnet/minecraft/world/item/context/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	scanForWater (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Z e
	tryScheduleDieTick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;)V a
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
net/minecraft/world/level/block/BaseCoralWallFanBlock coz
	FACING a
	SHAPES b
	canSurvive (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;)Z a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	getStateForPlacement (Lnet/minecraft/world/item/context/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	mirror (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Mirror;)Lnet/minecraft/world/level/block/state/BlockState; a
	rotate (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Rotation;)Lnet/minecraft/world/level/block/state/BlockState; a
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
net/minecraft/world/level/block/BaseEntityBlock cpa
	createTickerHelper (Lnet/minecraft/world/level/block/entity/BlockEntityType;Lnet/minecraft/world/level/block/entity/BlockEntityType;Lnet/minecraft/world/level/block/entity/BlockEntityTicker;)Lnet/minecraft/world/level/block/entity/BlockEntityTicker; a
	getMenuProvider (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/MenuProvider; b
	getRenderShape (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/RenderShape; b_
	triggerEvent (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;II)Z a
net/minecraft/world/level/block/BaseFireBlock cpb
	AABB_OFFSET a
	DOWN_AABB b
	SECONDS_ON_FIRE c
	fireDamage d
	animateTick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/util/RandomSource;)V a
	canBePlacedAt (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;)Z a
	canBurn (Lnet/minecraft/world/level/block/state/BlockState;)Z f
	entityInside (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/Entity;)V a
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	getState (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
	getStateForPlacement (Lnet/minecraft/world/item/context/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	inPortalDimension (Lnet/minecraft/world/level/Level;)Z a
	isPortal (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;)Z b
	onPlace (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)V b
	playerWillDestroy (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/entity/player/Player;)V a
	spawnDestroyParticles (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V a
net/minecraft/world/level/block/BasePressurePlateBlock cpc
	AABB b
	PRESSED_AABB a
	TOUCH_AABB c
	type d
	canSurvive (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;)Z a
	checkPressed (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;I)V a
	entityInside (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/Entity;)V a
	getDirectSignal (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;)I b
	getEntityCount (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/phys/AABB;Ljava/lang/Class;)I a
	getPressedTime ()I a
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	getSignal (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;)I a
	getSignalForState (Lnet/minecraft/world/level/block/state/BlockState;)I g
	getSignalStrength (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)I b
	isPossibleToRespawnInThis (Lnet/minecraft/world/level/block/state/BlockState;)Z a
	isSignalSource (Lnet/minecraft/world/level/block/state/BlockState;)Z f_
	onRemove (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)V a
	setSignalForState (Lnet/minecraft/world/level/block/state/BlockState;I)Lnet/minecraft/world/level/block/state/BlockState; a
	tick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Lnet/minecraft/util/RandomSource;)V a
	updateNeighbours (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)V a
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
net/minecraft/world/level/block/BaseRailBlock cpd
	FLAT_AABB a
	HALF_BLOCK_AABB b
	WATERLOGGED c
	isStraight d
	canSurvive (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;)Z a
	getFluidState (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/material/FluidState; c_
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	getShapeProperty ()Lnet/minecraft/world/level/block/state/properties/Property; b
	getStateForPlacement (Lnet/minecraft/world/item/context/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	isRail (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)Z a
	isRail (Lnet/minecraft/world/level/block/state/BlockState;)Z g
	isStraight ()Z a
	neighborChanged (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Block;Lnet/minecraft/core/BlockPos;Z)V a
	onPlace (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)V b
	onRemove (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)V a
	shouldBeRemoved (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/Level;Lnet/minecraft/world/level/block/state/properties/RailShape;)Z a
	updateDir (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)Lnet/minecraft/world/level/block/state/BlockState; a
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
	updateState (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Block;)V a
	updateState (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Z)Lnet/minecraft/world/level/block/state/BlockState; a
net/minecraft/world/level/block/BeaconBeamBlock cpe
	getColor ()Lnet/minecraft/world/item/DyeColor; a
net/minecraft/world/level/block/BeaconBlock cpf
	getColor ()Lnet/minecraft/world/item/DyeColor; a
	getRenderShape (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/RenderShape; b_
	getTicker (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/entity/BlockEntityType;)Lnet/minecraft/world/level/block/entity/BlockEntityTicker; a
	newBlockEntity (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/entity/BlockEntity; a
	setPlacedBy (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/item/ItemStack;)V a
	use (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;Lnet/minecraft/world/phys/BlockHitResult;)Lnet/minecraft/world/InteractionResult; a
net/minecraft/world/level/block/BedBlock cpg
	BASE d
	EAST_SHAPE l
	HEIGHT c
	LEG_NORTH_EAST g
	LEG_NORTH_WEST e
	LEG_SOUTH_EAST h
	LEG_SOUTH_WEST f
	LEG_WIDTH m
	NORTH_SHAPE i
	OCCUPIED b
	PART a
	SOUTH_SHAPE j
	WEST_SHAPE k
	color n
	bedAboveStandUpOffsets (Lnet/minecraft/core/Direction;)[[I a
	bedStandUpOffsets (Lnet/minecraft/core/Direction;Lnet/minecraft/core/Direction;)[[I a
	bedSurroundStandUpOffsets (Lnet/minecraft/core/Direction;Lnet/minecraft/core/Direction;)[[I b
	bounceUp (Lnet/minecraft/world/entity/Entity;)V a
	canSetSpawn (Lnet/minecraft/world/level/Level;)Z a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	fallOn (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/Entity;F)V a
	findBunkBedStandUpPosition (Lnet/minecraft/world/entity/EntityType;Lnet/minecraft/world/level/CollisionGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;Lnet/minecraft/core/Direction;)Ljava/util/Optional; a
	findStandUpPosition (Lnet/minecraft/world/entity/EntityType;Lnet/minecraft/world/level/CollisionGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;F)Ljava/util/Optional; a
	findStandUpPositionAtOffset (Lnet/minecraft/world/entity/EntityType;Lnet/minecraft/world/level/CollisionGetter;Lnet/minecraft/core/BlockPos;[[IZ)Ljava/util/Optional; a
	getBedOrientation (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/core/Direction; a
	getBlockType (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/DoubleBlockCombiner$BlockType; h
	getColor ()Lnet/minecraft/world/item/DyeColor; a
	getConnectedDirection (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/core/Direction; g
	getNeighbourDirection (Lnet/minecraft/world/level/block/state/properties/BedPart;Lnet/minecraft/core/Direction;)Lnet/minecraft/core/Direction; a
	getRenderShape (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/RenderShape; b_
	getSeed (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/BlockPos;)J a
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	getStateForPlacement (Lnet/minecraft/world/item/context/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	isBunkBed (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Z b
	isPathfindable (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/pathfinder/PathComputationType;)Z a
	kickVillagerOutOfBed (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)Z a
	newBlockEntity (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/entity/BlockEntity; a
	playerWillDestroy (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/entity/player/Player;)V a
	setPlacedBy (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/item/ItemStack;)V a
	updateEntityAfterFallOn (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/world/entity/Entity;)V a
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
	use (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;Lnet/minecraft/world/phys/BlockHitResult;)Lnet/minecraft/world/InteractionResult; a
net/minecraft/world/level/block/BeehiveBlock cph
	FACING a
	HONEY_LEVEL b
	MAX_HONEY_LEVELS c
	SHEARED_HONEYCOMB_COUNT d
	angerNearbyBees (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)V b
	animateTick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/util/RandomSource;)V a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	dropHoneycomb (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)V a
	getAnalogOutputSignal (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)I a
	getDrops (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/storage/loot/LootParams$Builder;)Ljava/util/List; a
	getRenderShape (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/RenderShape; b_
	getStateForPlacement (Lnet/minecraft/world/item/context/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	getTicker (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/entity/BlockEntityType;)Lnet/minecraft/world/level/block/entity/BlockEntityTicker; a
	hasAnalogOutputSignal (Lnet/minecraft/world/level/block/state/BlockState;)Z d_
	hiveContainsBees (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)Z c
	newBlockEntity (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/entity/BlockEntity; a
	playerDestroy (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/entity/BlockEntity;Lnet/minecraft/world/item/ItemStack;)V a
	playerWillDestroy (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/entity/player/Player;)V a
	releaseBeesAndResetHoneyLevel (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/level/block/entity/BeehiveBlockEntity$BeeReleaseStatus;)V a
	resetHoneyLevel (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/BlockPos;)V a
	spawnFluidParticle (Lnet/minecraft/world/level/Level;DDDDD)V a
	spawnParticle (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/VoxelShape;D)V a
	trySpawnDripParticles (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V a
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
	use (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;Lnet/minecraft/world/phys/BlockHitResult;)Lnet/minecraft/world/InteractionResult; a
net/minecraft/world/level/block/BeetrootBlock cpi
	AGE b
	MAX_AGE a
	SHAPE_BY_AGE e
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getAgeProperty ()Lnet/minecraft/world/level/block/state/properties/IntegerProperty; a
	getBaseSeedId ()Lnet/minecraft/world/level/ItemLike; c
	getBonemealAgeIncrease (Lnet/minecraft/world/level/Level;)I a
	getMaxAge ()I b
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	randomTick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Lnet/minecraft/util/RandomSource;)V b
net/minecraft/world/level/block/BellBlock cpj
	ATTACHMENT b
	BELL_BOTTOM_SHAPE h
	BELL_SHAPE i
	BELL_TOP_SHAPE g
	CEILING_SHAPE E
	EAST_WEST_BETWEEN k
	EAST_WEST_FLOOR_SHAPE f
	EVENT_BELL_RING d
	FACING a
	NORTH_SOUTH_BETWEEN j
	NORTH_SOUTH_FLOOR_SHAPE e
	POWERED c
	TO_EAST m
	TO_NORTH n
	TO_SOUTH D
	TO_WEST l
	attemptToRing (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;)Z a
	attemptToRing (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;)Z a
	canSurvive (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;)Z a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getCollisionShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; c
	getConnectedDirection (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/core/Direction; n
	getRenderShape (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/RenderShape; b_
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	getStateForPlacement (Lnet/minecraft/world/item/context/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	getTicker (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/entity/BlockEntityType;)Lnet/minecraft/world/level/block/entity/BlockEntityTicker; a
	getVoxelShape (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/phys/shapes/VoxelShape; h
	isPathfindable (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/pathfinder/PathComputationType;)Z a
	isProperHit (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;D)Z a
	neighborChanged (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Block;Lnet/minecraft/core/BlockPos;Z)V a
	newBlockEntity (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/entity/BlockEntity; a
	onHit (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/phys/BlockHitResult;Lnet/minecraft/world/entity/player/Player;Z)Z a
	onProjectileHit (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/phys/BlockHitResult;Lnet/minecraft/world/entity/projectile/Projectile;)V a
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
	use (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;Lnet/minecraft/world/phys/BlockHitResult;)Lnet/minecraft/world/InteractionResult; a
net/minecraft/world/level/block/BigDripleafBlock cpk
	DELAY_UNTIL_NEXT_TILT_STATE d
	ENTITY_DETECTION_MIN_Y g
	LEAF_SHAPES i
	LOWEST_LEAF_TOP h
	MAX_GEN_HEIGHT e
	NO_TICK c
	STEM_SHAPES k
	STEM_SLICER j
	STEM_WIDTH f
	TILT b
	WATERLOGGED a
	shapesCache l
	calculateShape (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/phys/shapes/VoxelShape; h
	canEntityTilt (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/Entity;)Z a
	canPlaceAt (Lnet/minecraft/world/level/LevelHeightAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Z a
	canReplace (Lnet/minecraft/world/level/block/state/BlockState;)Z n
	canSurvive (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;)Z a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	entityInside (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/Entity;)V a
	getCollisionShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; c
	getFluidState (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/material/FluidState; c_
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	getStateForPlacement (Lnet/minecraft/world/item/context/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	isBonemealSuccess (Lnet/minecraft/world/level/Level;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Z a
	isValidBonemealTarget (Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)Z a
	neighborChanged (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Block;Lnet/minecraft/core/BlockPos;Z)V a
	onProjectileHit (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/phys/BlockHitResult;Lnet/minecraft/world/entity/projectile/Projectile;)V a
	performBonemeal (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V a
	place (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/material/FluidState;Lnet/minecraft/core/Direction;)Z a
	placeWithRandomHeight (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;)V a
	playTiltSound (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/sounds/SoundEvent;)V a
	resetTilt (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)V d
	setTilt (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/properties/Tilt;)V a
	setTiltAndScheduleTick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/properties/Tilt;Lnet/minecraft/sounds/SoundEvent;)V a
	tick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Lnet/minecraft/util/RandomSource;)V a
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
net/minecraft/world/level/block/BigDripleafStemBlock cpl
	EAST_SHAPE c
	NORTH_SHAPE a
	SOUTH_SHAPE b
	STEM_WIDTH f
	WATERLOGGED e
	WEST_SHAPE d
	canSurvive (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;)Z a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getCloneItemStack (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/item/ItemStack; a
	getFluidState (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/material/FluidState; c_
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	isBonemealSuccess (Lnet/minecraft/world/level/Level;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Z a
	isValidBonemealTarget (Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)Z a
	performBonemeal (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V a
	place (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/material/FluidState;Lnet/minecraft/core/Direction;)Z a
	tick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Lnet/minecraft/util/RandomSource;)V a
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
net/minecraft/world/level/block/BlastFurnaceBlock cpm
	animateTick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/util/RandomSource;)V a
	getTicker (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/entity/BlockEntityType;)Lnet/minecraft/world/level/block/entity/BlockEntityTicker; a
	newBlockEntity (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/entity/BlockEntity; a
	openContainer (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/player/Player;)V a
net/minecraft/world/level/block/Block cpn
	BLOCK_STATE_REGISTRY o
	CACHE_SIZE g
	INDESTRUCTIBLE z
	INSTANT A
	LOGGER a
	OCCLUSION_CACHE h
	SHAPE_FULL_BLOCK_CACHE c
	UPDATE_ALL x
	UPDATE_ALL_IMMEDIATE y
	UPDATE_CLIENTS q
	UPDATE_IMMEDIATE s
	UPDATE_INVISIBLE r
	UPDATE_KNOWN_SHAPE t
	UPDATE_LIMIT B
	UPDATE_MOVE_BY_PISTON v
	UPDATE_NEIGHBORS p
	UPDATE_NONE w
	UPDATE_SUPPRESS_DROPS u
	builtInRegistryHolder b
	defaultBlockState d
	descriptionId e
	item f
	stateDefinition C
	animateTick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/util/RandomSource;)V a
	appendHoverText (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/BlockGetter;Ljava/util/List;Lnet/minecraft/world/item/TooltipFlag;)V a
	asBlock ()Lnet/minecraft/world/level/block/Block; p
	asItem ()Lnet/minecraft/world/item/Item; k
	box (DDDDDD)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	builtInRegistryHolder ()Lnet/minecraft/core/Holder$Reference; q
	byItem (Lnet/minecraft/world/item/Item;)Lnet/minecraft/world/level/block/Block; a
	canSupportCenter (Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;)Z a
	canSupportRigidBlock (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Z c
	copyProperty (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/state/properties/Property;)Lnet/minecraft/world/level/block/state/BlockState; a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	defaultBlockState ()Lnet/minecraft/world/level/block/state/BlockState; n
	destroy (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V a
	dropFromExplosion (Lnet/minecraft/world/level/Explosion;)Z a
	dropResources (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)V c
	dropResources (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/entity/BlockEntity;Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/item/ItemStack;)V a
	dropResources (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/entity/BlockEntity;)V a
	fallOn (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/Entity;F)V a
	getCloneItemStack (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/item/ItemStack; a
	getDescriptionId ()Ljava/lang/String; f
	getDrops (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/entity/BlockEntity;)Ljava/util/List; a
	getDrops (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/entity/BlockEntity;Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/item/ItemStack;)Ljava/util/List; a
	getExplosionResistance ()F d
	getFriction ()F h
	getId (Lnet/minecraft/world/level/block/state/BlockState;)I i
	getJumpFactor ()F j
	getName ()Lnet/minecraft/network/chat/MutableComponent; e
	getShapeForEachState (Ljava/util/function/Function;)Lcom/google/common/collect/ImmutableMap; a
	getSoundType (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/SoundType; m
	getSpeedFactor ()F i
	getStateDefinition ()Lnet/minecraft/world/level/block/state/StateDefinition; l
	getStateForPlacement (Lnet/minecraft/world/item/context/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	handlePrecipitation (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/biome/Biome$Precipitation;)V a
	hasDynamicShape ()Z o
	isExceptionForConnection (Lnet/minecraft/world/level/block/state/BlockState;)Z j
	isFaceFull (Lnet/minecraft/world/phys/shapes/VoxelShape;Lnet/minecraft/core/Direction;)Z a
	isPossibleToRespawnInThis (Lnet/minecraft/world/level/block/state/BlockState;)Z a
	isRandomlyTicking (Lnet/minecraft/world/level/block/state/BlockState;)Z e_
	isShapeFullBlock (Lnet/minecraft/world/phys/shapes/VoxelShape;)Z a
	playerDestroy (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/entity/BlockEntity;Lnet/minecraft/world/item/ItemStack;)V a
	playerWillDestroy (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/entity/player/Player;)V a
	popExperience (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;I)V a
	popResource (Lnet/minecraft/world/level/Level;Ljava/util/function/Supplier;Lnet/minecraft/world/item/ItemStack;)V a
	popResource (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/item/ItemStack;)V a
	popResourceFromFace (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;Lnet/minecraft/world/item/ItemStack;)V a
	propagatesSkylightDown (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Z c
	pushEntitiesUp (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
	registerDefaultState (Lnet/minecraft/world/level/block/state/BlockState;)V k
	setPlacedBy (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/item/ItemStack;)V a
	shouldRenderFace (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;Lnet/minecraft/core/BlockPos;)Z a
	spawnDestroyParticles (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V a
	stateById (I)Lnet/minecraft/world/level/block/state/BlockState; a
	stepOn (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/entity/Entity;)V a
	tryDropExperience (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/util/valueproviders/IntProvider;)V a
	updateEntityAfterFallOn (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/world/entity/Entity;)V a
	updateFromNeighbourShapes (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; b
	updateOrDestroy (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;I)V a
	updateOrDestroy (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;II)V a
	wasExploded (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/Explosion;)V a
	withPropertiesOf (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/state/BlockState; l
net/minecraft/world/level/block/Block$BlockStatePairKey cpn$a
	direction c
	first a
	second b
net/minecraft/world/level/block/Blocks cpo
	ACACIA_BUTTON gz
	ACACIA_DOOR ko
	ACACIA_FENCE kg
	ACACIA_FENCE_GATE jY
	ACACIA_HANGING_SIGN dd
	ACACIA_LEAVES aI
	ACACIA_LOG Y
	ACACIA_PLANKS r
	ACACIA_PRESSURE_PLATE dD
	ACACIA_SAPLING B
	ACACIA_SIGN cH
	ACACIA_SLAB jx
	ACACIA_STAIRS hP
	ACACIA_TRAPDOOR eD
	ACACIA_WALL_HANGING_SIGN do
	ACACIA_WALL_SIGN cU
	ACACIA_WOOD as
	ACTIVATOR_RAIL hh
	AIR a
	ALLIUM bV
	AMETHYST_BLOCK qt
	AMETHYST_CLUSTER qv
	ANCIENT_DEBRIS pj
	ANDESITE g
	ANDESITE_SLAB nB
	ANDESITE_STAIRS no
	ANDESITE_WALL nN
	ANVIL gS
	ATTACHED_MELON_STEM fc
	ATTACHED_PUMPKIN_STEM fb
	AZALEA rx
	AZALEA_LEAVES aM
	AZURE_BLUET bW
	BAMBOO mZ
	BAMBOO_BLOCK ae
	BAMBOO_BUTTON gD
	BAMBOO_DOOR ks
	BAMBOO_FENCE kk
	BAMBOO_FENCE_GATE kc
	BAMBOO_HANGING_SIGN dk
	BAMBOO_MOSAIC w
	BAMBOO_MOSAIC_SLAB jC
	BAMBOO_MOSAIC_STAIRS hU
	BAMBOO_PLANKS v
	BAMBOO_PRESSURE_PLATE dH
	BAMBOO_SAPLING mY
	BAMBOO_SIGN cM
	BAMBOO_SLAB jB
	BAMBOO_STAIRS hT
	BAMBOO_TRAPDOOR eH
	BAMBOO_WALL_HANGING_SIGN dv
	BAMBOO_WALL_SIGN cZ
	BARREL nU
	BARRIER hW
	BASALT dZ
	BEACON fO
	BEDROCK F
	BEEHIVE pf
	BEETROOTS kD
	BEE_NEST pe
	BELL od
	BIG_DRIPLEAF rC
	BIG_DRIPLEAF_STEM rD
	BIRCH_BUTTON gx
	BIRCH_DOOR km
	BIRCH_FENCE ke
	BIRCH_FENCE_GATE jW
	BIRCH_HANGING_SIGN dc
	BIRCH_LEAVES aG
	BIRCH_LOG W
	BIRCH_PLANKS p
	BIRCH_PRESSURE_PLATE dB
	BIRCH_SAPLING z
	BIRCH_SIGN cG
	BIRCH_SLAB jv
	BIRCH_STAIRS fL
	BIRCH_TRAPDOOR eB
	BIRCH_WALL_HANGING_SIGN dn
	BIRCH_WALL_SIGN cT
	BIRCH_WOOD aq
	BLACKSTONE pr
	BLACKSTONE_SLAB pu
	BLACKSTONE_STAIRS ps
	BLACKSTONE_WALL pt
	BLACK_BANNER iY
	BLACK_BED bo
	BLACK_CANDLE qb
	BLACK_CANDLE_CAKE qs
	BLACK_CARPET iz
	BLACK_CONCRETE lL
	BLACK_CONCRETE_POWDER mb
	BLACK_GLAZED_TERRACOTTA lv
	BLACK_SHULKER_BOX lf
	BLACK_STAINED_GLASS ey
	BLACK_STAINED_GLASS_PANE hO
	BLACK_TERRACOTTA hy
	BLACK_WALL_BANNER jo
	BLACK_WOOL bP
	BLAST_FURNACE nW
	BLUE_BANNER iU
	BLUE_BED bk
	BLUE_CANDLE pX
	BLUE_CANDLE_CAKE qo
	BLUE_CARPET iv
	BLUE_CONCRETE lH
	BLUE_CONCRETE_POWDER lX
	BLUE_GLAZED_TERRACOTTA lr
	BLUE_ICE mW
	BLUE_ORCHID bU
	BLUE_SHULKER_BOX lb
	BLUE_STAINED_GLASS eu
	BLUE_STAINED_GLASS_PANE hK
	BLUE_TERRACOTTA hu
	BLUE_WALL_BANNER jk
	BLUE_WOOL bL
	BONE_BLOCK kM
	BOOKSHELF cl
	BRAIN_CORAL mx
	BRAIN_CORAL_BLOCK mn
	BRAIN_CORAL_FAN mH
	BRAIN_CORAL_WALL_FAN mR
	BREWING_STAND fs
	BRICKS cj
	BRICK_SLAB jJ
	BRICK_STAIRS fi
	BRICK_WALL nF
	BROWN_BANNER iV
	BROWN_BED bl
	BROWN_CANDLE pY
	BROWN_CANDLE_CAKE qp
	BROWN_CARPET iw
	BROWN_CONCRETE lI
	BROWN_CONCRETE_POWDER lY
	BROWN_GLAZED_TERRACOTTA ls
	BROWN_MUSHROOM cf
	BROWN_MUSHROOM_BLOCK eU
	BROWN_SHULKER_BOX lc
	BROWN_STAINED_GLASS ev
	BROWN_STAINED_GLASS_PANE hL
	BROWN_TERRACOTTA hv
	BROWN_WALL_BANNER jl
	BROWN_WOOL bM
	BUBBLE_COLUMN nd
	BUBBLE_CORAL my
	BUBBLE_CORAL_BLOCK mo
	BUBBLE_CORAL_FAN mI
	BUBBLE_CORAL_WALL_FAN mS
	BUDDING_AMETHYST qu
	CACTUS dQ
	CAKE eh
	CALCITE qA
	CALIBRATED_SCULK_SENSOR qE
	CAMPFIRE og
	CANDLE pL
	CANDLE_CAKE qc
	CARROTS gt
	CARTOGRAPHY_TABLE nX
	CARVED_PUMPKIN ef
	CAULDRON ft
	CAVE_AIR nc
	CAVE_VINES ru
	CAVE_VINES_PLANT rv
	CHAIN eY
	CHAIN_COMMAND_BLOCK kH
	CHERRY_BUTTON gA
	CHERRY_DOOR kp
	CHERRY_FENCE kh
	CHERRY_FENCE_GATE jZ
	CHERRY_HANGING_SIGN de
	CHERRY_LEAVES aJ
	CHERRY_LOG Z
	CHERRY_PLANKS s
	CHERRY_PRESSURE_PLATE dE
	CHERRY_SAPLING C
	CHERRY_SIGN cI
	CHERRY_SLAB jy
	CHERRY_STAIRS hQ
	CHERRY_TRAPDOOR eE
	CHERRY_WALL_HANGING_SIGN dp
	CHERRY_WALL_SIGN cV
	CHERRY_WOOD at
	CHEST cv
	CHIPPED_ANVIL gT
	CHISELED_BOOKSHELF cm
	CHISELED_DEEPSLATE rZ
	CHISELED_NETHER_BRICKS pI
	CHISELED_POLISHED_BLACKSTONE py
	CHISELED_QUARTZ_BLOCK he
	CHISELED_RED_SANDSTONE jq
	CHISELED_SANDSTONE aW
	CHISELED_STONE_BRICKS eL
	CHORUS_FLOWER kv
	CHORUS_PLANT ku
	CLAY dR
	COAL_BLOCK iB
	COAL_ORE R
	COARSE_DIRT k
	COBBLED_DEEPSLATE rJ
	COBBLED_DEEPSLATE_SLAB rL
	COBBLED_DEEPSLATE_STAIRS rK
	COBBLED_DEEPSLATE_WALL rM
	COBBLESTONE m
	COBBLESTONE_SLAB jI
	COBBLESTONE_STAIRS cQ
	COBBLESTONE_WALL fP
	COBWEB bs
	COCOA fC
	COMMAND_BLOCK fN
	COMPARATOR gY
	COMPOSTER pc
	CONDUIT mX
	COPPER_BLOCK qM
	COPPER_ORE qN
	CORNFLOWER cc
	CRACKED_DEEPSLATE_BRICKS sa
	CRACKED_DEEPSLATE_TILES sb
	CRACKED_NETHER_BRICKS pJ
	CRACKED_POLISHED_BLACKSTONE_BRICKS px
	CRACKED_STONE_BRICKS eK
	CRAFTING_TABLE cA
	CREEPER_HEAD gM
	CREEPER_WALL_HEAD gN
	CRIMSON_BUTTON oS
	CRIMSON_DOOR oU
	CRIMSON_FENCE oK
	CRIMSON_FENCE_GATE oO
	CRIMSON_FUNGUS ox
	CRIMSON_HANGING_SIGN dh
	CRIMSON_HYPHAE ou
	CRIMSON_NYLIUM ow
	CRIMSON_PLANKS oE
	CRIMSON_PRESSURE_PLATE oI
	CRIMSON_ROOTS oD
	CRIMSON_SIGN oW
	CRIMSON_SLAB oG
	CRIMSON_STAIRS oQ
	CRIMSON_STEM os
	CRIMSON_TRAPDOOR oM
	CRIMSON_WALL_HANGING_SIGN dt
	CRIMSON_WALL_SIGN oY
	CRYING_OBSIDIAN pk
	CUT_COPPER qS
	CUT_COPPER_SLAB ra
	CUT_COPPER_STAIRS qW
	CUT_RED_SANDSTONE jr
	CUT_RED_SANDSTONE_SLAB jP
	CUT_SANDSTONE aX
	CUT_SANDSTONE_SLAB jG
	CYAN_BANNER iS
	CYAN_BED bi
	CYAN_CANDLE pV
	CYAN_CANDLE_CAKE qm
	CYAN_CARPET it
	CYAN_CONCRETE lF
	CYAN_CONCRETE_POWDER lV
	CYAN_GLAZED_TERRACOTTA lp
	CYAN_SHULKER_BOX kZ
	CYAN_STAINED_GLASS es
	CYAN_STAINED_GLASS_PANE hI
	CYAN_TERRACOTTA hs
	CYAN_WALL_BANNER ji
	CYAN_WOOL bJ
	DAMAGED_ANVIL gU
	DANDELION bR
	DARK_OAK_BUTTON gB
	DARK_OAK_DOOR kq
	DARK_OAK_FENCE ki
	DARK_OAK_FENCE_GATE ka
	DARK_OAK_HANGING_SIGN dg
	DARK_OAK_LEAVES aK
	DARK_OAK_LOG aa
	DARK_OAK_PLANKS t
	DARK_OAK_PRESSURE_PLATE dF
	DARK_OAK_SAPLING D
	DARK_OAK_SIGN cK
	DARK_OAK_SLAB jz
	DARK_OAK_STAIRS hR
	DARK_OAK_TRAPDOOR eF
	DARK_OAK_WALL_HANGING_SIGN dr
	DARK_OAK_WALL_SIGN cX
	DARK_OAK_WOOD au
	DARK_PRISMARINE ib
	DARK_PRISMARINE_SLAB ih
	DARK_PRISMARINE_STAIRS ie
	DAYLIGHT_DETECTOR gZ
	DEAD_BRAIN_CORAL ms
	DEAD_BRAIN_CORAL_BLOCK mi
	DEAD_BRAIN_CORAL_FAN mC
	DEAD_BRAIN_CORAL_WALL_FAN mM
	DEAD_BUBBLE_CORAL mt
	DEAD_BUBBLE_CORAL_BLOCK mj
	DEAD_BUBBLE_CORAL_FAN mD
	DEAD_BUBBLE_CORAL_WALL_FAN mN
	DEAD_BUSH bv
	DEAD_FIRE_CORAL mu
	DEAD_FIRE_CORAL_BLOCK mk
	DEAD_FIRE_CORAL_FAN mE
	DEAD_FIRE_CORAL_WALL_FAN mO
	DEAD_HORN_CORAL mv
	DEAD_HORN_CORAL_BLOCK ml
	DEAD_HORN_CORAL_FAN mF
	DEAD_HORN_CORAL_WALL_FAN mP
	DEAD_TUBE_CORAL mr
	DEAD_TUBE_CORAL_BLOCK mh
	DEAD_TUBE_CORAL_FAN mB
	DEAD_TUBE_CORAL_WALL_FAN mL
	DECORATED_POT so
	DEEPSLATE rI
	DEEPSLATE_BRICKS rV
	DEEPSLATE_BRICK_SLAB rX
	DEEPSLATE_BRICK_STAIRS rW
	DEEPSLATE_BRICK_WALL rY
	DEEPSLATE_COAL_ORE S
	DEEPSLATE_COPPER_ORE qO
	DEEPSLATE_DIAMOND_ORE cy
	DEEPSLATE_EMERALD_ORE fF
	DEEPSLATE_GOLD_ORE O
	DEEPSLATE_IRON_ORE Q
	DEEPSLATE_LAPIS_ORE aS
	DEEPSLATE_REDSTONE_ORE dJ
	DEEPSLATE_TILES rR
	DEEPSLATE_TILE_SLAB rT
	DEEPSLATE_TILE_STAIRS rS
	DEEPSLATE_TILE_WALL rU
	DETECTOR_RAIL bq
	DIAMOND_BLOCK cz
	DIAMOND_ORE cx
	DIORITE e
	DIORITE_SLAB nE
	DIORITE_STAIRS nr
	DIORITE_WALL nR
	DIRT j
	DIRT_PATH kE
	DISPENSER aU
	DRAGON_EGG fA
	DRAGON_HEAD gO
	DRAGON_WALL_HEAD gP
	DRIED_KELP_BLOCK me
	DRIPSTONE_BLOCK rt
	DROPPER hi
	EMERALD_BLOCK fJ
	EMERALD_ORE fE
	ENCHANTING_TABLE fr
	ENDER_CHEST fG
	END_GATEWAY kF
	END_PORTAL fx
	END_PORTAL_FRAME fy
	END_ROD kt
	END_STONE fz
	END_STONE_BRICKS kz
	END_STONE_BRICK_SLAB nx
	END_STONE_BRICK_STAIRS nj
	END_STONE_BRICK_WALL nQ
	EXPOSED_COPPER qL
	EXPOSED_CUT_COPPER qR
	EXPOSED_CUT_COPPER_SLAB qZ
	EXPOSED_CUT_COPPER_STAIRS qV
	FARMLAND cC
	FERN bu
	FIRE cr
	FIRE_CORAL mz
	FIRE_CORAL_BLOCK mp
	FIRE_CORAL_FAN mJ
	FIRE_CORAL_WALL_FAN mT
	FLETCHING_TABLE nY
	FLOWERING_AZALEA ry
	FLOWERING_AZALEA_LEAVES aN
	FLOWER_POT fR
	FROGSPAWN sm
	FROSTED_ICE kI
	FURNACE cD
	GILDED_BLACKSTONE pC
	GLASS aQ
	GLASS_PANE eZ
	GLOWSTONE ed
	GLOW_LICHEN fg
	GOLD_BLOCK ch
	GOLD_ORE N
	GRANITE c
	GRANITE_SLAB nA
	GRANITE_STAIRS nn
	GRANITE_WALL nJ
	GRASS bt
	GRASS_BLOCK i
	GRAVEL L
	GRAY_BANNER iQ
	GRAY_BED bg
	GRAY_CANDLE pT
	GRAY_CANDLE_CAKE qk
	GRAY_CARPET ir
	GRAY_CONCRETE lD
	GRAY_CONCRETE_POWDER lT
	GRAY_GLAZED_TERRACOTTA ln
	GRAY_SHULKER_BOX kX
	GRAY_STAINED_GLASS eq
	GRAY_STAINED_GLASS_PANE hG
	GRAY_TERRACOTTA hq
	GRAY_WALL_BANNER jg
	GRAY_WOOL bH
	GREEN_BANNER iW
	GREEN_BED bm
	GREEN_CANDLE pZ
	GREEN_CANDLE_CAKE qq
	GREEN_CARPET ix
	GREEN_CONCRETE lJ
	GREEN_CONCRETE_POWDER lZ
	GREEN_GLAZED_TERRACOTTA lt
	GREEN_SHULKER_BOX ld
	GREEN_STAINED_GLASS ew
	GREEN_STAINED_GLASS_PANE hM
	GREEN_TERRACOTTA hw
	GREEN_WALL_BANNER jm
	GREEN_WOOL bN
	GRINDSTONE nZ
	HANGING_ROOTS rF
	HAY_BLOCK ij
	HEAVY_WEIGHTED_PRESSURE_PLATE gX
	HONEYCOMB_BLOCK ph
	HONEY_BLOCK pg
	HOPPER hc
	HORN_CORAL mA
	HORN_CORAL_BLOCK mq
	HORN_CORAL_FAN mK
	HORN_CORAL_WALL_FAN mU
	ICE dO
	INFESTED_CHISELED_STONE_BRICKS eT
	INFESTED_COBBLESTONE eP
	INFESTED_CRACKED_STONE_BRICKS eS
	INFESTED_DEEPSLATE sc
	INFESTED_MOSSY_STONE_BRICKS eR
	INFESTED_STONE eO
	INFESTED_STONE_BRICKS eQ
	IRON_BARS eX
	IRON_BLOCK ci
	IRON_DOOR dy
	IRON_ORE P
	IRON_TRAPDOOR hY
	JACK_O_LANTERN eg
	JIGSAW pb
	JUKEBOX dT
	JUNGLE_BUTTON gy
	JUNGLE_DOOR kn
	JUNGLE_FENCE kf
	JUNGLE_FENCE_GATE jX
	JUNGLE_HANGING_SIGN df
	JUNGLE_LEAVES aH
	JUNGLE_LOG X
	JUNGLE_PLANKS q
	JUNGLE_PRESSURE_PLATE dC
	JUNGLE_SAPLING A
	JUNGLE_SIGN cJ
	JUNGLE_SLAB jw
	JUNGLE_STAIRS fM
	JUNGLE_TRAPDOOR eC
	JUNGLE_WALL_HANGING_SIGN dq
	JUNGLE_WALL_SIGN cW
	JUNGLE_WOOD ar
	KELP mc
	KELP_PLANT md
	LADDER cO
	LANTERN oe
	LAPIS_BLOCK aT
	LAPIS_ORE aR
	LARGE_AMETHYST_BUD qw
	LARGE_FERN iI
	LAVA H
	LAVA_CAULDRON fv
	LECTERN oa
	LEVER dw
	LIGHT hX
	LIGHTNING_ROD rr
	LIGHT_BLUE_BANNER iM
	LIGHT_BLUE_BED bc
	LIGHT_BLUE_CANDLE pP
	LIGHT_BLUE_CANDLE_CAKE qg
	LIGHT_BLUE_CARPET in
	LIGHT_BLUE_CONCRETE lz
	LIGHT_BLUE_CONCRETE_POWDER lP
	LIGHT_BLUE_GLAZED_TERRACOTTA lj
	LIGHT_BLUE_SHULKER_BOX kT
	LIGHT_BLUE_STAINED_GLASS em
	LIGHT_BLUE_STAINED_GLASS_PANE hC
	LIGHT_BLUE_TERRACOTTA hm
	LIGHT_BLUE_WALL_BANNER jc
	LIGHT_BLUE_WOOL bD
	LIGHT_GRAY_BANNER iR
	LIGHT_GRAY_BED bh
	LIGHT_GRAY_CANDLE pU
	LIGHT_GRAY_CANDLE_CAKE ql
	LIGHT_GRAY_CARPET is
	LIGHT_GRAY_CONCRETE lE
	LIGHT_GRAY_CONCRETE_POWDER lU
	LIGHT_GRAY_GLAZED_TERRACOTTA lo
	LIGHT_GRAY_SHULKER_BOX kY
	LIGHT_GRAY_STAINED_GLASS er
	LIGHT_GRAY_STAINED_GLASS_PANE hH
	LIGHT_GRAY_TERRACOTTA hr
	LIGHT_GRAY_WALL_BANNER jh
	LIGHT_GRAY_WOOL bI
	LIGHT_WEIGHTED_PRESSURE_PLATE gW
	LILAC iE
	LILY_OF_THE_VALLEY ce
	LILY_PAD fm
	LIME_BANNER iO
	LIME_BED be
	LIME_CANDLE pR
	LIME_CANDLE_CAKE qi
	LIME_CARPET ip
	LIME_CONCRETE lB
	LIME_CONCRETE_POWDER lR
	LIME_GLAZED_TERRACOTTA ll
	LIME_SHULKER_BOX kV
	LIME_STAINED_GLASS eo
	LIME_STAINED_GLASS_PANE hE
	LIME_TERRACOTTA ho
	LIME_WALL_BANNER je
	LIME_WOOL bF
	LODESTONE pq
	LOOM nT
	MAGENTA_BANNER iL
	MAGENTA_BED bb
	MAGENTA_CANDLE pO
	MAGENTA_CANDLE_CAKE qf
	MAGENTA_CARPET im
	MAGENTA_CONCRETE ly
	MAGENTA_CONCRETE_POWDER lO
	MAGENTA_GLAZED_TERRACOTTA li
	MAGENTA_SHULKER_BOX kS
	MAGENTA_STAINED_GLASS el
	MAGENTA_STAINED_GLASS_PANE hB
	MAGENTA_TERRACOTTA hl
	MAGENTA_WALL_BANNER jb
	MAGENTA_WOOL bC
	MAGMA_BLOCK kJ
	MANGROVE_BUTTON gC
	MANGROVE_DOOR kr
	MANGROVE_FENCE kj
	MANGROVE_FENCE_GATE kb
	MANGROVE_HANGING_SIGN dj
	MANGROVE_LEAVES aL
	MANGROVE_LOG ab
	MANGROVE_PLANKS u
	MANGROVE_PRESSURE_PLATE dG
	MANGROVE_PROPAGULE E
	MANGROVE_ROOTS ac
	MANGROVE_SIGN cL
	MANGROVE_SLAB jA
	MANGROVE_STAIRS hS
	MANGROVE_TRAPDOOR eG
	MANGROVE_WALL_HANGING_SIGN ds
	MANGROVE_WALL_SIGN cY
	MANGROVE_WOOD av
	MEDIUM_AMETHYST_BUD qx
	MELON fa
	MELON_STEM fe
	MOSSY_COBBLESTONE cn
	MOSSY_COBBLESTONE_SLAB nw
	MOSSY_COBBLESTONE_STAIRS ni
	MOSSY_COBBLESTONE_WALL fQ
	MOSSY_STONE_BRICKS eJ
	MOSSY_STONE_BRICK_SLAB nu
	MOSSY_STONE_BRICK_STAIRS ng
	MOSSY_STONE_BRICK_WALL nI
	MOSS_BLOCK rB
	MOSS_CARPET rz
	MOVING_PISTON bQ
	MUD rH
	MUDDY_MANGROVE_ROOTS ad
	MUD_BRICKS eN
	MUD_BRICK_SLAB jL
	MUD_BRICK_STAIRS fk
	MUD_BRICK_WALL nL
	MUSHROOM_STEM eW
	MYCELIUM fl
	NETHERITE_BLOCK pi
	NETHERRACK dW
	NETHER_BRICKS fn
	NETHER_BRICK_FENCE fo
	NETHER_BRICK_SLAB jM
	NETHER_BRICK_STAIRS fp
	NETHER_BRICK_WALL nM
	NETHER_GOLD_ORE T
	NETHER_PORTAL ee
	NETHER_QUARTZ_ORE hb
	NETHER_SPROUTS or
	NETHER_WART fq
	NETHER_WART_BLOCK kK
	NOTE_BLOCK aY
	OAK_BUTTON gv
	OAK_DOOR cN
	OAK_FENCE dU
	OAK_FENCE_GATE fh
	OAK_HANGING_SIGN da
	OAK_LEAVES aE
	OAK_LOG U
	OAK_PLANKS n
	OAK_PRESSURE_PLATE dz
	OAK_SAPLING x
	OAK_SIGN cE
	OAK_SLAB jt
	OAK_STAIRS cu
	OAK_TRAPDOOR ez
	OAK_WALL_HANGING_SIGN dl
	OAK_WALL_SIGN cR
	OAK_WOOD ao
	OBSERVER kO
	OBSIDIAN co
	OCHRE_FROGLIGHT sj
	ORANGE_BANNER iK
	ORANGE_BED ba
	ORANGE_CANDLE pN
	ORANGE_CANDLE_CAKE qe
	ORANGE_CARPET il
	ORANGE_CONCRETE lx
	ORANGE_CONCRETE_POWDER lN
	ORANGE_GLAZED_TERRACOTTA lh
	ORANGE_SHULKER_BOX kR
	ORANGE_STAINED_GLASS ek
	ORANGE_STAINED_GLASS_PANE hA
	ORANGE_TERRACOTTA hk
	ORANGE_TULIP bY
	ORANGE_WALL_BANNER ja
	ORANGE_WOOL bB
	OXEYE_DAISY cb
	OXIDIZED_COPPER qJ
	OXIDIZED_CUT_COPPER qP
	OXIDIZED_CUT_COPPER_SLAB qX
	OXIDIZED_CUT_COPPER_STAIRS qT
	PACKED_ICE iC
	PACKED_MUD eM
	PEARLESCENT_FROGLIGHT sl
	PEONY iG
	PETRIFIED_OAK_SLAB jH
	PIGLIN_HEAD gQ
	PIGLIN_WALL_HEAD gR
	PINK_BANNER iP
	PINK_BED bf
	PINK_CANDLE pS
	PINK_CANDLE_CAKE qj
	PINK_CARPET iq
	PINK_CONCRETE lC
	PINK_CONCRETE_POWDER lS
	PINK_GLAZED_TERRACOTTA lm
	PINK_PETALS rA
	PINK_SHULKER_BOX kW
	PINK_STAINED_GLASS ep
	PINK_STAINED_GLASS_PANE hF
	PINK_TERRACOTTA hp
	PINK_TULIP ca
	PINK_WALL_BANNER jf
	PINK_WOOL bG
	PISTON by
	PISTON_HEAD bz
	PITCHER_CROP kB
	PITCHER_PLANT kC
	PLAYER_HEAD gK
	PLAYER_WALL_HEAD gL
	PODZOL l
	POINTED_DRIPSTONE rs
	POLISHED_ANDESITE h
	POLISHED_ANDESITE_SLAB nD
	POLISHED_ANDESITE_STAIRS nq
	POLISHED_BASALT ea
	POLISHED_BLACKSTONE pv
	POLISHED_BLACKSTONE_BRICKS pw
	POLISHED_BLACKSTONE_BRICK_SLAB pz
	POLISHED_BLACKSTONE_BRICK_STAIRS pA
	POLISHED_BLACKSTONE_BRICK_WALL pB
	POLISHED_BLACKSTONE_BUTTON pG
	POLISHED_BLACKSTONE_PRESSURE_PLATE pF
	POLISHED_BLACKSTONE_SLAB pE
	POLISHED_BLACKSTONE_STAIRS pD
	POLISHED_BLACKSTONE_WALL pH
	POLISHED_DEEPSLATE rN
	POLISHED_DEEPSLATE_SLAB rP
	POLISHED_DEEPSLATE_STAIRS rO
	POLISHED_DEEPSLATE_WALL rQ
	POLISHED_DIORITE f
	POLISHED_DIORITE_SLAB nv
	POLISHED_DIORITE_STAIRS nh
	POLISHED_GRANITE d
	POLISHED_GRANITE_SLAB ns
	POLISHED_GRANITE_STAIRS ne
	POPPY bT
	POTATOES gu
	POTTED_ACACIA_SAPLING fX
	POTTED_ALLIUM gf
	POTTED_AZALEA sh
	POTTED_AZURE_BLUET gg
	POTTED_BAMBOO na
	POTTED_BIRCH_SAPLING fV
	POTTED_BLUE_ORCHID ge
	POTTED_BROWN_MUSHROOM gq
	POTTED_CACTUS gs
	POTTED_CHERRY_SAPLING fY
	POTTED_CORNFLOWER gm
	POTTED_CRIMSON_FUNGUS pm
	POTTED_CRIMSON_ROOTS po
	POTTED_DANDELION gc
	POTTED_DARK_OAK_SAPLING fZ
	POTTED_DEAD_BUSH gr
	POTTED_FERN gb
	POTTED_FLOWERING_AZALEA si
	POTTED_JUNGLE_SAPLING fW
	POTTED_LILY_OF_THE_VALLEY gn
	POTTED_MANGROVE_PROPAGULE ga
	POTTED_OAK_SAPLING fT
	POTTED_ORANGE_TULIP gi
	POTTED_OXEYE_DAISY gl
	POTTED_PINK_TULIP gk
	POTTED_POPPY gd
	POTTED_RED_MUSHROOM gp
	POTTED_RED_TULIP gh
	POTTED_SPRUCE_SAPLING fU
	POTTED_TORCHFLOWER fS
	POTTED_WARPED_FUNGUS pn
	POTTED_WARPED_ROOTS pp
	POTTED_WHITE_TULIP gj
	POTTED_WITHER_ROSE go
	POWDER_SNOW qC
	POWDER_SNOW_CAULDRON fw
	POWERED_RAIL bp
	PRISMARINE hZ
	PRISMARINE_BRICKS ia
	PRISMARINE_BRICK_SLAB ig
	PRISMARINE_BRICK_STAIRS id
	PRISMARINE_SLAB if
	PRISMARINE_STAIRS ic
	PRISMARINE_WALL nG
	PUMPKIN dV
	PUMPKIN_STEM fd
	PURPLE_BANNER iT
	PURPLE_BED bj
	PURPLE_CANDLE pW
	PURPLE_CANDLE_CAKE qn
	PURPLE_CARPET iu
	PURPLE_CONCRETE lG
	PURPLE_CONCRETE_POWDER lW
	PURPLE_GLAZED_TERRACOTTA lq
	PURPLE_SHULKER_BOX la
	PURPLE_STAINED_GLASS et
	PURPLE_STAINED_GLASS_PANE hJ
	PURPLE_TERRACOTTA ht
	PURPLE_WALL_BANNER jj
	PURPLE_WOOL bK
	PURPUR_BLOCK kw
	PURPUR_PILLAR kx
	PURPUR_SLAB jQ
	PURPUR_STAIRS ky
	QUARTZ_BLOCK hd
	QUARTZ_BRICKS pK
	QUARTZ_PILLAR hf
	QUARTZ_SLAB jN
	QUARTZ_STAIRS hg
	RAIL cP
	RAW_COPPER_BLOCK sf
	RAW_GOLD_BLOCK sg
	RAW_IRON_BLOCK se
	REDSTONE_BLOCK ha
	REDSTONE_LAMP fB
	REDSTONE_ORE dI
	REDSTONE_TORCH dK
	REDSTONE_WALL_TORCH dL
	REDSTONE_WIRE cw
	RED_BANNER iX
	RED_BED bn
	RED_CANDLE qa
	RED_CANDLE_CAKE qr
	RED_CARPET iy
	RED_CONCRETE lK
	RED_CONCRETE_POWDER ma
	RED_GLAZED_TERRACOTTA lu
	RED_MUSHROOM cg
	RED_MUSHROOM_BLOCK eV
	RED_NETHER_BRICKS kL
	RED_NETHER_BRICK_SLAB nC
	RED_NETHER_BRICK_STAIRS np
	RED_NETHER_BRICK_WALL nO
	RED_SAND K
	RED_SANDSTONE jp
	RED_SANDSTONE_SLAB jO
	RED_SANDSTONE_STAIRS js
	RED_SANDSTONE_WALL nH
	RED_SHULKER_BOX le
	RED_STAINED_GLASS ex
	RED_STAINED_GLASS_PANE hN
	RED_TERRACOTTA hx
	RED_TULIP bX
	RED_WALL_BANNER jn
	RED_WOOL bO
	REINFORCED_DEEPSLATE sn
	REPEATER ei
	REPEATING_COMMAND_BLOCK kG
	RESPAWN_ANCHOR pl
	ROOTED_DIRT rG
	ROSE_BUSH iF
	SAND I
	SANDSTONE aV
	SANDSTONE_SLAB jF
	SANDSTONE_STAIRS fD
	SANDSTONE_WALL nP
	SCAFFOLDING nS
	SCULK qF
	SCULK_CATALYST qH
	SCULK_SENSOR qD
	SCULK_SHRIEKER qI
	SCULK_VEIN qG
	SEAGRASS bw
	SEA_LANTERN ii
	SEA_PICKLE mV
	SHROOMLIGHT oy
	SHULKER_BOX kP
	SKELETON_SKULL gE
	SKELETON_WALL_SKULL gF
	SLIME_BLOCK hV
	SMALL_AMETHYST_BUD qy
	SMALL_DRIPLEAF rE
	SMITHING_TABLE ob
	SMOKER nV
	SMOOTH_BASALT sd
	SMOOTH_QUARTZ jT
	SMOOTH_QUARTZ_SLAB nz
	SMOOTH_QUARTZ_STAIRS nm
	SMOOTH_RED_SANDSTONE jU
	SMOOTH_RED_SANDSTONE_SLAB nt
	SMOOTH_RED_SANDSTONE_STAIRS nf
	SMOOTH_SANDSTONE jS
	SMOOTH_SANDSTONE_SLAB ny
	SMOOTH_SANDSTONE_STAIRS nl
	SMOOTH_STONE jR
	SMOOTH_STONE_SLAB jE
	SNIFFER_EGG mg
	SNOW dN
	SNOW_BLOCK dP
	SOUL_CAMPFIRE oh
	SOUL_FIRE cs
	SOUL_LANTERN of
	SOUL_SAND dX
	SOUL_SOIL dY
	SOUL_TORCH eb
	SOUL_WALL_TORCH ec
	SPAWNER ct
	SPONGE aO
	SPORE_BLOSSOM rw
	SPRUCE_BUTTON gw
	SPRUCE_DOOR kl
	SPRUCE_FENCE kd
	SPRUCE_FENCE_GATE jV
	SPRUCE_HANGING_SIGN db
	SPRUCE_LEAVES aF
	SPRUCE_LOG V
	SPRUCE_PLANKS o
	SPRUCE_PRESSURE_PLATE dA
	SPRUCE_SAPLING y
	SPRUCE_SIGN cF
	SPRUCE_SLAB ju
	SPRUCE_STAIRS fK
	SPRUCE_TRAPDOOR eA
	SPRUCE_WALL_HANGING_SIGN dm
	SPRUCE_WALL_SIGN cS
	SPRUCE_WOOD ap
	STICKY_PISTON br
	STONE b
	STONECUTTER oc
	STONE_BRICKS eI
	STONE_BRICK_SLAB jK
	STONE_BRICK_STAIRS fj
	STONE_BRICK_WALL nK
	STONE_BUTTON dM
	STONE_PRESSURE_PLATE dx
	STONE_SLAB jD
	STONE_STAIRS nk
	STRIPPED_ACACIA_LOG ai
	STRIPPED_ACACIA_WOOD aA
	STRIPPED_BAMBOO_BLOCK an
	STRIPPED_BIRCH_LOG ag
	STRIPPED_BIRCH_WOOD ay
	STRIPPED_CHERRY_LOG aj
	STRIPPED_CHERRY_WOOD aB
	STRIPPED_CRIMSON_HYPHAE ov
	STRIPPED_CRIMSON_STEM ot
	STRIPPED_DARK_OAK_LOG ak
	STRIPPED_DARK_OAK_WOOD aC
	STRIPPED_JUNGLE_LOG ah
	STRIPPED_JUNGLE_WOOD az
	STRIPPED_MANGROVE_LOG am
	STRIPPED_MANGROVE_WOOD aD
	STRIPPED_OAK_LOG al
	STRIPPED_OAK_WOOD aw
	STRIPPED_SPRUCE_LOG af
	STRIPPED_SPRUCE_WOOD ax
	STRIPPED_WARPED_HYPHAE om
	STRIPPED_WARPED_STEM ok
	STRUCTURE_BLOCK pa
	STRUCTURE_VOID kN
	SUGAR_CANE dS
	SUNFLOWER iD
	SUSPICIOUS_GRAVEL M
	SUSPICIOUS_SAND J
	SWEET_BERRY_BUSH oi
	TALL_GRASS iH
	TALL_SEAGRASS bx
	TARGET pd
	TERRACOTTA iA
	TINTED_GLASS qB
	TNT ck
	TORCH cp
	TORCHFLOWER bS
	TORCHFLOWER_CROP kA
	TRAPPED_CHEST gV
	TRIPWIRE fI
	TRIPWIRE_HOOK fH
	TUBE_CORAL mw
	TUBE_CORAL_BLOCK mm
	TUBE_CORAL_FAN mG
	TUBE_CORAL_WALL_FAN mQ
	TUFF qz
	TURTLE_EGG mf
	TWISTING_VINES oB
	TWISTING_VINES_PLANT oC
	VERDANT_FROGLIGHT sk
	VINE ff
	VOID_AIR nb
	WALL_TORCH cq
	WARPED_BUTTON oT
	WARPED_DOOR oV
	WARPED_FENCE oL
	WARPED_FENCE_GATE oP
	WARPED_FUNGUS oo
	WARPED_HANGING_SIGN di
	WARPED_HYPHAE ol
	WARPED_NYLIUM on
	WARPED_PLANKS oF
	WARPED_PRESSURE_PLATE oJ
	WARPED_ROOTS oq
	WARPED_SIGN oX
	WARPED_SLAB oH
	WARPED_STAIRS oR
	WARPED_STEM oj
	WARPED_TRAPDOOR oN
	WARPED_WALL_HANGING_SIGN du
	WARPED_WALL_SIGN oZ
	WARPED_WART_BLOCK op
	WATER G
	WATER_CAULDRON fu
	WAXED_COPPER_BLOCK rb
	WAXED_CUT_COPPER ri
	WAXED_CUT_COPPER_SLAB rq
	WAXED_CUT_COPPER_STAIRS rm
	WAXED_EXPOSED_COPPER rd
	WAXED_EXPOSED_CUT_COPPER rh
	WAXED_EXPOSED_CUT_COPPER_SLAB rp
	WAXED_EXPOSED_CUT_COPPER_STAIRS rl
	WAXED_OXIDIZED_COPPER re
	WAXED_OXIDIZED_CUT_COPPER rf
	WAXED_OXIDIZED_CUT_COPPER_SLAB rn
	WAXED_OXIDIZED_CUT_COPPER_STAIRS rj
	WAXED_WEATHERED_COPPER rc
	WAXED_WEATHERED_CUT_COPPER rg
	WAXED_WEATHERED_CUT_COPPER_SLAB ro
	WAXED_WEATHERED_CUT_COPPER_STAIRS rk
	WEATHERED_COPPER qK
	WEATHERED_CUT_COPPER qQ
	WEATHERED_CUT_COPPER_SLAB qY
	WEATHERED_CUT_COPPER_STAIRS qU
	WEEPING_VINES oz
	WEEPING_VINES_PLANT oA
	WET_SPONGE aP
	WHEAT cB
	WHITE_BANNER iJ
	WHITE_BED aZ
	WHITE_CANDLE pM
	WHITE_CANDLE_CAKE qd
	WHITE_CARPET ik
	WHITE_CONCRETE lw
	WHITE_CONCRETE_POWDER lM
	WHITE_GLAZED_TERRACOTTA lg
	WHITE_SHULKER_BOX kQ
	WHITE_STAINED_GLASS ej
	WHITE_STAINED_GLASS_PANE hz
	WHITE_TERRACOTTA hj
	WHITE_TULIP bZ
	WHITE_WALL_BANNER iZ
	WHITE_WOOL bA
	WITHER_ROSE cd
	WITHER_SKELETON_SKULL gG
	WITHER_SKELETON_WALL_SKULL gH
	YELLOW_BANNER iN
	YELLOW_BED bd
	YELLOW_CANDLE pQ
	YELLOW_CANDLE_CAKE qh
	YELLOW_CARPET io
	YELLOW_CONCRETE lA
	YELLOW_CONCRETE_POWDER lQ
	YELLOW_GLAZED_TERRACOTTA lk
	YELLOW_SHULKER_BOX kU
	YELLOW_STAINED_GLASS en
	YELLOW_STAINED_GLASS_PANE hD
	YELLOW_TERRACOTTA hn
	YELLOW_WALL_BANNER jd
	YELLOW_WOOL bE
	ZOMBIE_HEAD gI
	ZOMBIE_WALL_HEAD gJ
	always (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Z a
	always (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/EntityType;)Ljava/lang/Boolean; b
	bed (Lnet/minecraft/world/item/DyeColor;)Lnet/minecraft/world/level/block/BedBlock; a
	candle (Lnet/minecraft/world/level/material/MapColor;)Lnet/minecraft/world/level/block/CandleBlock; b
	flowerPot (Lnet/minecraft/world/level/block/Block;[Lnet/minecraft/world/flag/FeatureFlag;)Lnet/minecraft/world/level/block/FlowerPotBlock; a
	leaves (Lnet/minecraft/world/level/block/SoundType;)Lnet/minecraft/world/level/block/LeavesBlock; a
	litBlockEmission (I)Ljava/util/function/ToIntFunction; a
	log (Lnet/minecraft/world/level/material/MapColor;Lnet/minecraft/world/level/material/MapColor;)Lnet/minecraft/world/level/block/RotatedPillarBlock; a
	log (Lnet/minecraft/world/level/material/MapColor;Lnet/minecraft/world/level/material/MapColor;Lnet/minecraft/world/level/block/SoundType;)Lnet/minecraft/world/level/block/RotatedPillarBlock; a
	netherStem (Lnet/minecraft/world/level/material/MapColor;)Lnet/minecraft/world/level/block/Block; a
	never (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Z b
	never (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/EntityType;)Ljava/lang/Boolean; a
	ocelotOrParrot (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/EntityType;)Ljava/lang/Boolean; c
	pistonBase (Z)Lnet/minecraft/world/level/block/piston/PistonBaseBlock; a
	rebuildCache ()V a
	register (Ljava/lang/String;Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/world/level/block/Block; a
	shulkerBox (Lnet/minecraft/world/item/DyeColor;Lnet/minecraft/world/level/block/state/BlockBehaviour$Properties;)Lnet/minecraft/world/level/block/ShulkerBoxBlock; a
	stainedGlass (Lnet/minecraft/world/item/DyeColor;)Lnet/minecraft/world/level/block/StainedGlassBlock; b
	stoneButton ()Lnet/minecraft/world/level/block/ButtonBlock; b
	woodenButton (Lnet/minecraft/world/level/block/state/properties/BlockSetType;[Lnet/minecraft/world/flag/FeatureFlag;)Lnet/minecraft/world/level/block/ButtonBlock; a
net/minecraft/world/level/block/BonemealableBlock cpp
	isBonemealSuccess (Lnet/minecraft/world/level/Level;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Z a
	isValidBonemealTarget (Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)Z a
	performBonemeal (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V a
net/minecraft/world/level/block/BrewingStandBlock cpq
	HAS_BOTTLE a
	SHAPE b
	animateTick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/util/RandomSource;)V a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getAnalogOutputSignal (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)I a
	getRenderShape (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/RenderShape; b_
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	getTicker (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/entity/BlockEntityType;)Lnet/minecraft/world/level/block/entity/BlockEntityTicker; a
	hasAnalogOutputSignal (Lnet/minecraft/world/level/block/state/BlockState;)Z d_
	isPathfindable (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/pathfinder/PathComputationType;)Z a
	newBlockEntity (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/entity/BlockEntity; a
	onRemove (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)V a
	setPlacedBy (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/item/ItemStack;)V a
	use (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;Lnet/minecraft/world/phys/BlockHitResult;)Lnet/minecraft/world/InteractionResult; a
net/minecraft/world/level/block/BrushableBlock cpr
	DUSTED b
	TICK_DELAY a
	brushCompletedSound e
	brushSound d
	turnsInto c
	animateTick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/util/RandomSource;)V a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getBrushCompletedSound ()Lnet/minecraft/sounds/SoundEvent; c
	getBrushSound ()Lnet/minecraft/sounds/SoundEvent; b
	getRenderShape (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/RenderShape; b_
	getTurnsInto ()Lnet/minecraft/world/level/block/Block; a
	newBlockEntity (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/entity/BlockEntity; a
	onBrokenAfterFall (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/item/FallingBlockEntity;)V a
	onPlace (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)V b
	tick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Lnet/minecraft/util/RandomSource;)V a
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
net/minecraft/world/level/block/BubbleColumnBlock cps
	CHECK_PERIOD b
	DRAG_DOWN a
	animateTick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/util/RandomSource;)V a
	canExistIn (Lnet/minecraft/world/level/block/state/BlockState;)Z h
	canSurvive (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;)Z a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	entityInside (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/Entity;)V a
	getColumnState (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/state/BlockState; n
	getFluidState (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/material/FluidState; c_
	getPickupSound ()Ljava/util/Optional; am_
	getRenderShape (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/RenderShape; b_
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	pickupBlock (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/item/ItemStack; c
	tick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Lnet/minecraft/util/RandomSource;)V a
	updateColumn (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V b
	updateColumn (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/state/BlockState;)V a
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
net/minecraft/world/level/block/BucketPickup cpt
	getPickupSound ()Ljava/util/Optional; am_
	pickupBlock (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/item/ItemStack; c
net/minecraft/world/level/block/BuddingAmethystBlock cpu
	DIRECTIONS b
	GROWTH_CHANCE a
	canClusterGrowAtState (Lnet/minecraft/world/level/block/state/BlockState;)Z g
	randomTick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Lnet/minecraft/util/RandomSource;)V b
net/minecraft/world/level/block/BushBlock cpv
	canSurvive (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;)Z a
	isPathfindable (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/pathfinder/PathComputationType;)Z a
	mayPlaceOn (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Z d
	propagatesSkylightDown (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Z c
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
net/minecraft/world/level/block/ButtonBlock cpw
	CEILING_AABB_X d
	CEILING_AABB_Z e
	EAST_AABB k
	FLOOR_AABB_X f
	FLOOR_AABB_Z g
	HALF_AABB_HEIGHT b
	HALF_AABB_WIDTH c
	NORTH_AABB h
	POWERED a
	PRESSED_CEILING_AABB_X l
	PRESSED_CEILING_AABB_Z m
	PRESSED_DEPTH J
	PRESSED_EAST_AABB H
	PRESSED_FLOOR_AABB_X n
	PRESSED_FLOOR_AABB_Z D
	PRESSED_NORTH_AABB E
	PRESSED_SOUTH_AABB F
	PRESSED_WEST_AABB G
	SOUTH_AABB i
	UNPRESSED_DEPTH K
	WEST_AABB j
	arrowsCanPress N
	ticksToStayPressed M
	type L
	checkPressed (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)V e
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	entityInside (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/Entity;)V a
	getDirectSignal (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;)I b
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	getSignal (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;)I a
	getSound (Z)Lnet/minecraft/sounds/SoundEvent; a
	isSignalSource (Lnet/minecraft/world/level/block/state/BlockState;)Z f_
	onRemove (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)V a
	playSound (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Z)V a
	press (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)V d
	tick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Lnet/minecraft/util/RandomSource;)V a
	updateNeighbours (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)V f
	use (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;Lnet/minecraft/world/phys/BlockHitResult;)Lnet/minecraft/world/InteractionResult; a
net/minecraft/world/level/block/CactusBlock cpx
	AABB_OFFSET c
	AGE a
	COLLISION_SHAPE d
	MAX_AGE b
	OUTLINE_SHAPE e
	canSurvive (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;)Z a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	entityInside (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/Entity;)V a
	getCollisionShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; c
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	isPathfindable (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/pathfinder/PathComputationType;)Z a
	randomTick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Lnet/minecraft/util/RandomSource;)V b
	tick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Lnet/minecraft/util/RandomSource;)V a
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
net/minecraft/world/level/block/CakeBlock cpy
	AABB_OFFSET d
	AABB_SIZE_PER_BITE e
	BITES b
	FULL_CAKE_SIGNAL c
	MAX_BITES a
	SHAPE_BY_BITE f
	canSurvive (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;)Z a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	eat (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/entity/player/Player;)Lnet/minecraft/world/InteractionResult; a
	getAnalogOutputSignal (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)I a
	getOutputSignal (I)I b
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	hasAnalogOutputSignal (Lnet/minecraft/world/level/block/state/BlockState;)Z d_
	isPathfindable (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/pathfinder/PathComputationType;)Z a
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
	use (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;Lnet/minecraft/world/phys/BlockHitResult;)Lnet/minecraft/world/InteractionResult; a
net/minecraft/world/level/block/CalibratedSculkSensorBlock cpz
	FACING a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getActiveTicks ()I b
	getSignal (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;)I a
	getStateForPlacement (Lnet/minecraft/world/item/context/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	getTicker (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/entity/BlockEntityType;)Lnet/minecraft/world/level/block/entity/BlockEntityTicker; a
	mirror (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Mirror;)Lnet/minecraft/world/level/block/state/BlockState; a
	newBlockEntity (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/entity/BlockEntity; a
	rotate (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Rotation;)Lnet/minecraft/world/level/block/state/BlockState; a
net/minecraft/world/level/block/CampfireBlock cqa
	FACING e
	LIT b
	SHAPE a
	SIGNAL_FIRE c
	SMOKE_DISTANCE g
	VIRTUAL_FENCE_POST f
	WATERLOGGED d
	fireDamage i
	spawnParticles h
	animateTick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/util/RandomSource;)V a
	canLight (Lnet/minecraft/world/level/block/state/BlockState;)Z h
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	dowse (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V a
	entityInside (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/Entity;)V a
	getFluidState (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/material/FluidState; c_
	getRenderShape (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/RenderShape; b_
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	getStateForPlacement (Lnet/minecraft/world/item/context/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	getTicker (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/entity/BlockEntityType;)Lnet/minecraft/world/level/block/entity/BlockEntityTicker; a
	isLitCampfire (Lnet/minecraft/world/level/block/state/BlockState;)Z g
	isPathfindable (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/pathfinder/PathComputationType;)Z a
	isSmokeSource (Lnet/minecraft/world/level/block/state/BlockState;)Z n
	isSmokeyPos (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)Z a
	makeParticles (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;ZZ)V a
	mirror (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Mirror;)Lnet/minecraft/world/level/block/state/BlockState; a
	newBlockEntity (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/entity/BlockEntity; a
	onProjectileHit (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/phys/BlockHitResult;Lnet/minecraft/world/entity/projectile/Projectile;)V a
	onRemove (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)V a
	placeLiquid (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/material/FluidState;)Z a
	rotate (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Rotation;)Lnet/minecraft/world/level/block/state/BlockState; a
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
	use (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;Lnet/minecraft/world/phys/BlockHitResult;)Lnet/minecraft/world/InteractionResult; a
net/minecraft/world/level/block/CandleBlock cqb
	CANDLES e
	FOUR_AABB m
	LIGHT_EMISSION h
	LIT f
	MAX_CANDLES d
	MIN_CANDLES c
	ONE_AABB j
	PARTICLE_OFFSETS i
	THREE_AABB l
	TWO_AABB k
	WATERLOGGED g
	canBeLit (Lnet/minecraft/world/level/block/state/BlockState;)Z d
	canBeReplaced (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/item/context/BlockPlaceContext;)Z a
	canLight (Lnet/minecraft/world/level/block/state/BlockState;)Z g
	canSurvive (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;)Z a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getFluidState (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/material/FluidState; c_
	getParticleOffsets (Lnet/minecraft/world/level/block/state/BlockState;)Ljava/lang/Iterable; b
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	getStateForPlacement (Lnet/minecraft/world/item/context/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	placeLiquid (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/material/FluidState;)Z a
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
	use (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;Lnet/minecraft/world/phys/BlockHitResult;)Lnet/minecraft/world/InteractionResult; a
net/minecraft/world/level/block/CandleCakeBlock cqc
	AABB_OFFSET d
	BY_CANDLE h
	CAKE_SHAPE e
	CANDLE_SHAPE f
	LIT c
	PARTICLE_OFFSETS i
	SHAPE g
	byCandle (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/world/level/block/state/BlockState; a
	canLight (Lnet/minecraft/world/level/block/state/BlockState;)Z g
	canSurvive (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;)Z a
	candleHit (Lnet/minecraft/world/phys/BlockHitResult;)Z a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getAnalogOutputSignal (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)I a
	getCloneItemStack (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/item/ItemStack; a
	getParticleOffsets (Lnet/minecraft/world/level/block/state/BlockState;)Ljava/lang/Iterable; b
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	hasAnalogOutputSignal (Lnet/minecraft/world/level/block/state/BlockState;)Z d_
	isPathfindable (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/pathfinder/PathComputationType;)Z a
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
	use (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;Lnet/minecraft/world/phys/BlockHitResult;)Lnet/minecraft/world/InteractionResult; a
net/minecraft/world/level/block/CarpetBlock cqd
	SHAPE a
	canSurvive (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;)Z a
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
net/minecraft/world/level/block/CarrotBlock cqe
	SHAPE_BY_AGE a
	getBaseSeedId ()Lnet/minecraft/world/level/ItemLike; c
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
net/minecraft/world/level/block/CartographyTableBlock cqf
	CONTAINER_TITLE a
	getMenuProvider (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/MenuProvider; b
	use (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;Lnet/minecraft/world/phys/BlockHitResult;)Lnet/minecraft/world/InteractionResult; a
net/minecraft/world/level/block/CarvedPumpkinBlock cqg
	FACING a
	PUMPKINS_PREDICATE f
	ironGolemBase d
	ironGolemFull e
	snowGolemBase b
	snowGolemFull c
	canSpawnGolem (Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;)Z a
	clearPatternBlocks (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/level/block/state/pattern/BlockPattern$BlockPatternMatch;)V a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getOrCreateIronGolemBase ()Lnet/minecraft/world/level/block/state/pattern/BlockPattern; u
	getOrCreateIronGolemFull ()Lnet/minecraft/world/level/block/state/pattern/BlockPattern; v
	getOrCreateSnowGolemBase ()Lnet/minecraft/world/level/block/state/pattern/BlockPattern; a
	getOrCreateSnowGolemFull ()Lnet/minecraft/world/level/block/state/pattern/BlockPattern; g
	getStateForPlacement (Lnet/minecraft/world/item/context/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	onPlace (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)V b
	spawnGolemInWorld (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/level/block/state/pattern/BlockPattern$BlockPatternMatch;Lnet/minecraft/world/entity/Entity;Lnet/minecraft/core/BlockPos;)V a
	trySpawnGolem (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)V a
	updatePatternBlocks (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/level/block/state/pattern/BlockPattern$BlockPatternMatch;)V b
net/minecraft/world/level/block/CauldronBlock cqh
	POWDER_SNOW_FILL_CHANCE d
	RAIN_FILL_CHANCE c
	canReceiveStalactiteDrip (Lnet/minecraft/world/level/material/Fluid;)Z a
	handlePrecipitation (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/biome/Biome$Precipitation;)V a
	isFull (Lnet/minecraft/world/level/block/state/BlockState;)Z d
	receiveStalactiteDrip (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/material/Fluid;)V a
	shouldHandlePrecipitation (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/level/biome/Biome$Precipitation;)Z a
net/minecraft/world/level/block/CaveVines cqi
	BERRIES s_
	SHAPE r_
	emission (I)Ljava/util/function/ToIntFunction; h_
	hasGlowBerries (Lnet/minecraft/world/level/block/state/BlockState;)Z h_
	use (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/InteractionResult; a
net/minecraft/world/level/block/CaveVinesBlock cqj
	CHANCE_OF_BERRIES_ON_GROWTH f
	canGrowInto (Lnet/minecraft/world/level/block/state/BlockState;)Z g
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getBlocksToGrowWhenBonemealed (Lnet/minecraft/util/RandomSource;)I a
	getBodyBlock ()Lnet/minecraft/world/level/block/Block; a
	getCloneItemStack (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/item/ItemStack; a
	getGrowIntoState (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/util/RandomSource;)Lnet/minecraft/world/level/block/state/BlockState; a
	isBonemealSuccess (Lnet/minecraft/world/level/Level;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Z a
	isValidBonemealTarget (Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)Z a
	performBonemeal (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V a
	updateBodyAfterConvertedFromHead (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/state/BlockState; a
	use (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;Lnet/minecraft/world/phys/BlockHitResult;)Lnet/minecraft/world/InteractionResult; a
net/minecraft/world/level/block/CaveVinesPlantBlock cqk
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getCloneItemStack (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/item/ItemStack; a
	getHeadBlock ()Lnet/minecraft/world/level/block/GrowingPlantHeadBlock; b
	isBonemealSuccess (Lnet/minecraft/world/level/Level;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Z a
	isValidBonemealTarget (Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)Z a
	performBonemeal (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V a
	updateHeadAfterConvertedFromBody (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/state/BlockState; a
	use (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;Lnet/minecraft/world/phys/BlockHitResult;)Lnet/minecraft/world/InteractionResult; a
net/minecraft/world/level/block/CeilingHangingSignBlock cql
	AABBS h
	AABB_OFFSET c
	ATTACHED b
	ROTATION a
	SHAPE d
	canSurvive (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;)Z a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getBlockSupportShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/phys/shapes/VoxelShape; b_
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	getStateForPlacement (Lnet/minecraft/world/item/context/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	getTicker (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/entity/BlockEntityType;)Lnet/minecraft/world/level/block/entity/BlockEntityTicker; a
	getYRotationDegrees (Lnet/minecraft/world/level/block/state/BlockState;)F g
	mirror (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Mirror;)Lnet/minecraft/world/level/block/state/BlockState; a
	newBlockEntity (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/entity/BlockEntity; a
	rotate (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Rotation;)Lnet/minecraft/world/level/block/state/BlockState; a
	shouldTryToChainAnotherHangingSign (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/phys/BlockHitResult;Lnet/minecraft/world/level/block/entity/SignBlockEntity;Lnet/minecraft/world/item/ItemStack;)Z a
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
	use (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;Lnet/minecraft/world/phys/BlockHitResult;)Lnet/minecraft/world/InteractionResult; a
net/minecraft/world/level/block/ChainBlock cqm
	AABB_MAX c
	AABB_MIN b
	WATERLOGGED a
	X_AXIS_AABB f
	Y_AXIS_AABB d
	Z_AXIS_AABB e
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getFluidState (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/material/FluidState; c_
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	getStateForPlacement (Lnet/minecraft/world/item/context/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	isPathfindable (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/pathfinder/PathComputationType;)Z a
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
net/minecraft/world/level/block/ChangeOverTimeBlock cqn
	SCAN_DISTANCE w_
	applyChangeOverTime (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Lnet/minecraft/util/RandomSource;)V c
	getAge ()Ljava/lang/Enum; b
	getChanceModifier ()F a
	getNext (Lnet/minecraft/world/level/block/state/BlockState;)Ljava/util/Optional; i_
	onRandomTick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Lnet/minecraft/util/RandomSource;)V a_
net/minecraft/world/level/block/CherryLeavesBlock cqo
	animateTick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/util/RandomSource;)V a
net/minecraft/world/level/block/ChestBlock cqp
	AABB l
	AABB_HEIGHT g
	AABB_OFFSET f
	CHEST_COMBINER m
	EAST_AABB k
	EVENT_SET_OPEN_COUNT e
	FACING b
	MENU_PROVIDER_COMBINER n
	NORTH_AABB h
	SOUTH_AABB i
	TYPE c
	WATERLOGGED d
	WEST_AABB j
	blockEntityType ()Lnet/minecraft/world/level/block/entity/BlockEntityType; c
	candidatePartnerFacing (Lnet/minecraft/world/item/context/BlockPlaceContext;Lnet/minecraft/core/Direction;)Lnet/minecraft/core/Direction; a
	combine (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Z)Lnet/minecraft/world/level/block/DoubleBlockCombiner$NeighborCombineResult; a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getAnalogOutputSignal (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)I a
	getBlockType (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/DoubleBlockCombiner$BlockType; g
	getConnectedDirection (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/core/Direction; h
	getContainer (Lnet/minecraft/world/level/block/ChestBlock;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Z)Lnet/minecraft/world/Container; a
	getFluidState (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/material/FluidState; c_
	getMenuProvider (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/MenuProvider; b
	getOpenChestStat ()Lnet/minecraft/stats/Stat; b
	getRenderShape (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/RenderShape; b_
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	getStateForPlacement (Lnet/minecraft/world/item/context/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	getTicker (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/entity/BlockEntityType;)Lnet/minecraft/world/level/block/entity/BlockEntityTicker; a
	hasAnalogOutputSignal (Lnet/minecraft/world/level/block/state/BlockState;)Z d_
	isBlockedChestByBlock (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Z a
	isCatSittingOnChest (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;)Z b
	isChestBlockedAt (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;)Z a
	isPathfindable (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/pathfinder/PathComputationType;)Z a
	mirror (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Mirror;)Lnet/minecraft/world/level/block/state/BlockState; a
	newBlockEntity (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/entity/BlockEntity; a
	onRemove (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)V a
	opennessCombiner (Lnet/minecraft/world/level/block/entity/LidBlockEntity;)Lnet/minecraft/world/level/block/DoubleBlockCombiner$Combiner; a
	rotate (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Rotation;)Lnet/minecraft/world/level/block/state/BlockState; a
	setPlacedBy (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/item/ItemStack;)V a
	tick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Lnet/minecraft/util/RandomSource;)V a
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
	use (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;Lnet/minecraft/world/phys/BlockHitResult;)Lnet/minecraft/world/InteractionResult; a
net/minecraft/world/level/block/ChiseledBookShelfBlock cqq
	BOOKS_PER_ROW a
	MAX_BOOKS_IN_STORAGE c
	SLOT_OCCUPIED_PROPERTIES b
	addBook (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/level/block/entity/ChiseledBookShelfBlockEntity;Lnet/minecraft/world/item/ItemStack;I)V a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getAnalogOutputSignal (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)I a
	getHitSlot (Lnet/minecraft/world/phys/Vec2;)I a
	getRelativeHitCoordinatesForBlockFace (Lnet/minecraft/world/phys/BlockHitResult;Lnet/minecraft/core/Direction;)Ljava/util/Optional; a
	getRenderShape (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/RenderShape; b_
	getSection (F)I a
	getStateForPlacement (Lnet/minecraft/world/item/context/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	hasAnalogOutputSignal (Lnet/minecraft/world/level/block/state/BlockState;)Z d_
	mirror (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Mirror;)Lnet/minecraft/world/level/block/state/BlockState; a
	newBlockEntity (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/entity/BlockEntity; a
	onRemove (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)V a
	removeBook (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/level/block/entity/ChiseledBookShelfBlockEntity;I)V a
	rotate (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Rotation;)Lnet/minecraft/world/level/block/state/BlockState; a
	use (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;Lnet/minecraft/world/phys/BlockHitResult;)Lnet/minecraft/world/InteractionResult; a
net/minecraft/world/level/block/ChorusFlowerBlock cqr
	AGE b
	DEAD_AGE a
	plant c
	allNeighborsEmpty (Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;)Z b
	canSurvive (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;)Z a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	generatePlant (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/util/RandomSource;I)V a
	growTreeRecursive (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPos;II)V a
	isRandomlyTicking (Lnet/minecraft/world/level/block/state/BlockState;)Z e_
	onProjectileHit (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/phys/BlockHitResult;Lnet/minecraft/world/entity/projectile/Projectile;)V a
	placeDeadFlower (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)V a
	placeGrownFlower (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;I)V a
	randomTick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Lnet/minecraft/util/RandomSource;)V b
	tick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Lnet/minecraft/util/RandomSource;)V a
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
net/minecraft/world/level/block/ChorusPlantBlock cqs
	canSurvive (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;)Z a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getStateForPlacement (Lnet/minecraft/world/item/context/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	getStateForPlacement (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
	isPathfindable (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/pathfinder/PathComputationType;)Z a
	tick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Lnet/minecraft/util/RandomSource;)V a
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
net/minecraft/world/level/block/CocoaBlock cqt
	AGE b
	AGE_0_HALFWIDTH e
	AGE_0_HEIGHT d
	AGE_0_WIDTH c
	AGE_1_HALFWIDTH h
	AGE_1_HEIGHT g
	AGE_1_WIDTH f
	AGE_2_HALFWIDTH k
	AGE_2_HEIGHT j
	AGE_2_WIDTH i
	EAST_AABB l
	MAX_AGE a
	NORTH_AABB n
	SOUTH_AABB D
	WEST_AABB m
	canSurvive (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;)Z a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	getStateForPlacement (Lnet/minecraft/world/item/context/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	isBonemealSuccess (Lnet/minecraft/world/level/Level;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Z a
	isPathfindable (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/pathfinder/PathComputationType;)Z a
	isRandomlyTicking (Lnet/minecraft/world/level/block/state/BlockState;)Z e_
	isValidBonemealTarget (Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)Z a
	performBonemeal (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V a
	randomTick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Lnet/minecraft/util/RandomSource;)V b
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
net/minecraft/world/level/block/CommandBlock cqu
	CONDITIONAL b
	FACING a
	LOGGER c
	automatic d
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	execute (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/BaseCommandBlock;Z)V a
	executeChain (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;)V a
	getAnalogOutputSignal (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)I a
	getRenderShape (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/RenderShape; b_
	getStateForPlacement (Lnet/minecraft/world/item/context/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	hasAnalogOutputSignal (Lnet/minecraft/world/level/block/state/BlockState;)Z d_
	mirror (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Mirror;)Lnet/minecraft/world/level/block/state/BlockState; a
	neighborChanged (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Block;Lnet/minecraft/core/BlockPos;Z)V a
	newBlockEntity (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/entity/BlockEntity; a
	rotate (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Rotation;)Lnet/minecraft/world/level/block/state/BlockState; a
	setPlacedBy (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/item/ItemStack;)V a
	tick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Lnet/minecraft/util/RandomSource;)V a
	use (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;Lnet/minecraft/world/phys/BlockHitResult;)Lnet/minecraft/world/InteractionResult; a
net/minecraft/world/level/block/ComparatorBlock cqv
	MODE a
	calculateOutputSignal (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)I e
	checkTickOnNeighbor (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V c
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getDelay (Lnet/minecraft/world/level/block/state/BlockState;)I g
	getInputSignal (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)I b
	getItemFrame (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/Direction;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/entity/decoration/ItemFrame; a
	getOutputSignal (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)I b
	newBlockEntity (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/entity/BlockEntity; a
	refreshOutputState (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V f
	shouldTurnOn (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Z a
	tick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Lnet/minecraft/util/RandomSource;)V a
	triggerEvent (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;II)Z a
	use (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;Lnet/minecraft/world/phys/BlockHitResult;)Lnet/minecraft/world/InteractionResult; a
net/minecraft/world/level/block/ComposterBlock cqw
	AABB_SIDE_THICKNESS f
	COMPOSTABLES e
	LEVEL d
	MAX_LEVEL c
	MIN_LEVEL b
	OUTER_SHAPE g
	READY a
	SHAPES h
	add (FLnet/minecraft/world/level/ItemLike;)V a
	addItem (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/item/ItemStack;)Lnet/minecraft/world/level/block/state/BlockState; a
	bootStrap ()V a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	empty (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
	extractProduce (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
	getAnalogOutputSignal (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)I a
	getCollisionShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; c
	getContainer (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/WorldlyContainer; a
	getInteractionShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	handleFill (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Z)V a
	hasAnalogOutputSignal (Lnet/minecraft/world/level/block/state/BlockState;)Z d_
	insertItem (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
	isPathfindable (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/pathfinder/PathComputationType;)Z a
	onPlace (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)V b
	tick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Lnet/minecraft/util/RandomSource;)V a
	use (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;Lnet/minecraft/world/phys/BlockHitResult;)Lnet/minecraft/world/InteractionResult; a
net/minecraft/world/level/block/ComposterBlock$EmptyContainer cqw$a
	canPlaceItemThroughFace (ILnet/minecraft/world/item/ItemStack;Lnet/minecraft/core/Direction;)Z a
	canTakeItemThroughFace (ILnet/minecraft/world/item/ItemStack;Lnet/minecraft/core/Direction;)Z b
	getSlotsForFace (Lnet/minecraft/core/Direction;)[I a
net/minecraft/world/level/block/ComposterBlock$InputContainer cqw$b
	changed f
	level d
	pos e
	state c
	canPlaceItemThroughFace (ILnet/minecraft/world/item/ItemStack;Lnet/minecraft/core/Direction;)Z a
	canTakeItemThroughFace (ILnet/minecraft/world/item/ItemStack;Lnet/minecraft/core/Direction;)Z b
	getMaxStackSize ()I ac_
	getSlotsForFace (Lnet/minecraft/core/Direction;)[I a
	setChanged ()V e
net/minecraft/world/level/block/ComposterBlock$OutputContainer cqw$c
	changed f
	level d
	pos e
	state c
	canPlaceItemThroughFace (ILnet/minecraft/world/item/ItemStack;Lnet/minecraft/core/Direction;)Z a
	canTakeItemThroughFace (ILnet/minecraft/world/item/ItemStack;Lnet/minecraft/core/Direction;)Z b
	getMaxStackSize ()I ac_
	getSlotsForFace (Lnet/minecraft/core/Direction;)[I a
	setChanged ()V e
net/minecraft/world/level/block/ConcretePowderBlock cqx
	concrete a
	canSolidify (Lnet/minecraft/world/level/block/state/BlockState;)Z n
	getDustColor (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)I d
	getStateForPlacement (Lnet/minecraft/world/item/context/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	onLand (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/entity/item/FallingBlockEntity;)V a
	shouldSolidify (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Z b
	touchesLiquid (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Z a
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
net/minecraft/world/level/block/ConduitBlock cqy
	SHAPE b
	SIZE c
	WATERLOGGED a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getFluidState (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/material/FluidState; c_
	getRenderShape (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/RenderShape; b_
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	getStateForPlacement (Lnet/minecraft/world/item/context/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	getTicker (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/entity/BlockEntityType;)Lnet/minecraft/world/level/block/entity/BlockEntityTicker; a
	isPathfindable (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/pathfinder/PathComputationType;)Z a
	newBlockEntity (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/entity/BlockEntity; a
	setPlacedBy (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/item/ItemStack;)V a
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
net/minecraft/world/level/block/CoralBlock cqz
	deadBlock a
	getStateForPlacement (Lnet/minecraft/world/item/context/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	scanForWater (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Z a
	tick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Lnet/minecraft/util/RandomSource;)V a
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
net/minecraft/world/level/block/CoralFanBlock cra
	deadBlock a
	onPlace (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)V b
	tick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Lnet/minecraft/util/RandomSource;)V a
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
net/minecraft/world/level/block/CoralPlantBlock crb
	AABB_OFFSET a
	SHAPE b
	deadBlock d
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	onPlace (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)V b
	tick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Lnet/minecraft/util/RandomSource;)V a
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
net/minecraft/world/level/block/CoralWallFanBlock crc
	deadBlock b
	onPlace (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)V b
	tick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Lnet/minecraft/util/RandomSource;)V a
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
net/minecraft/world/level/block/CraftingTableBlock crd
	CONTAINER_TITLE a
	getMenuProvider (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/MenuProvider; b
	use (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;Lnet/minecraft/world/phys/BlockHitResult;)Lnet/minecraft/world/InteractionResult; a
net/minecraft/world/level/block/CropBlock cre
	AGE d
	MAX_AGE c
	SHAPE_BY_AGE a
	canSurvive (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;)Z a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	entityInside (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/Entity;)V a
	getAge (Lnet/minecraft/world/level/block/state/BlockState;)I g
	getAgeProperty ()Lnet/minecraft/world/level/block/state/properties/IntegerProperty; a
	getBaseSeedId ()Lnet/minecraft/world/level/ItemLike; c
	getBonemealAgeIncrease (Lnet/minecraft/world/level/Level;)I a
	getCloneItemStack (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/item/ItemStack; a
	getGrowthSpeed (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)F a
	getMaxAge ()I b
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	getStateForAge (I)Lnet/minecraft/world/level/block/state/BlockState; b
	growCrops (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V a
	isBonemealSuccess (Lnet/minecraft/world/level/Level;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Z a
	isMaxAge (Lnet/minecraft/world/level/block/state/BlockState;)Z h
	isRandomlyTicking (Lnet/minecraft/world/level/block/state/BlockState;)Z e_
	isValidBonemealTarget (Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)Z a
	mayPlaceOn (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Z d
	performBonemeal (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V a
	randomTick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Lnet/minecraft/util/RandomSource;)V b
net/minecraft/world/level/block/CrossCollisionBlock crf
	EAST b
	NORTH a
	PROPERTY_BY_DIRECTION f
	SOUTH c
	WATERLOGGED e
	WEST d
	collisionShapeByIndex g
	shapeByIndex h
	stateToIndex i
	getAABBIndex (Lnet/minecraft/world/level/block/state/BlockState;)I g
	getCollisionShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; c
	getFluidState (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/material/FluidState; c_
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	indexFor (Lnet/minecraft/core/Direction;)I a
	isPathfindable (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/pathfinder/PathComputationType;)Z a
	makeShapes (FFFFF)[Lnet/minecraft/world/phys/shapes/VoxelShape; a
	mirror (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Mirror;)Lnet/minecraft/world/level/block/state/BlockState; a
	propagatesSkylightDown (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Z c
	rotate (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Rotation;)Lnet/minecraft/world/level/block/state/BlockState; a
net/minecraft/world/level/block/CryingObsidianBlock crg
	animateTick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/util/RandomSource;)V a
net/minecraft/world/level/block/DaylightDetectorBlock crh
	INVERTED b
	POWER a
	SHAPE c
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getRenderShape (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/RenderShape; b_
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	getSignal (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;)I a
	getTicker (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/entity/BlockEntityType;)Lnet/minecraft/world/level/block/entity/BlockEntityTicker; a
	isSignalSource (Lnet/minecraft/world/level/block/state/BlockState;)Z f_
	newBlockEntity (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/entity/BlockEntity; a
	tickEntity (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/entity/DaylightDetectorBlockEntity;)V a
	updateSignalStrength (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)V d
	use (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;Lnet/minecraft/world/phys/BlockHitResult;)Lnet/minecraft/world/InteractionResult; a
	useShapeForLightOcclusion (Lnet/minecraft/world/level/block/state/BlockState;)Z g_
net/minecraft/world/level/block/DeadBushBlock cri
	AABB_OFFSET a
	SHAPE b
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	mayPlaceOn (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Z d
net/minecraft/world/level/block/DecoratedPotBlock crj
	BOUNDING_BOX b
	CRACKED d
	HORIZONTAL_FACING c
	SHERDS_DYNAMIC_DROP_ID a
	WATERLOGGED e
	appendHoverText (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/BlockGetter;Ljava/util/List;Lnet/minecraft/world/item/TooltipFlag;)V a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getDrops (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/storage/loot/LootParams$Builder;)Ljava/util/List; a
	getFluidState (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/material/FluidState; c_
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	getSoundType (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/SoundType; m
	getStateForPlacement (Lnet/minecraft/world/item/context/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	isPathfindable (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/pathfinder/PathComputationType;)Z a
	newBlockEntity (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/entity/BlockEntity; a
	playerWillDestroy (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/entity/player/Player;)V a
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
net/minecraft/world/level/block/DetectorRailBlock crk
	POWERED e
	PRESSED_CHECK_PERIOD f
	SHAPE d
	checkPressed (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	entityInside (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/Entity;)V a
	getAnalogOutputSignal (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)I a
	getDirectSignal (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;)I b
	getInteractingMinecartOfType (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Ljava/lang/Class;Ljava/util/function/Predicate;)Ljava/util/List; a
	getSearchBB (Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/phys/AABB; a
	getShapeProperty ()Lnet/minecraft/world/level/block/state/properties/Property; b
	getSignal (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;)I a
	hasAnalogOutputSignal (Lnet/minecraft/world/level/block/state/BlockState;)Z d_
	isSignalSource (Lnet/minecraft/world/level/block/state/BlockState;)Z f_
	mirror (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Mirror;)Lnet/minecraft/world/level/block/state/BlockState; a
	onPlace (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)V b
	rotate (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Rotation;)Lnet/minecraft/world/level/block/state/BlockState; a
	tick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Lnet/minecraft/util/RandomSource;)V a
	updatePowerToConnected (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)V b
net/minecraft/world/level/block/DiodeBlock crl
	POWERED c
	SHAPE b
	canSurvive (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;)Z a
	checkTickOnNeighbor (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V c
	getAlternateSignal (Lnet/minecraft/world/level/SignalGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)I a
	getDelay (Lnet/minecraft/world/level/block/state/BlockState;)I g
	getDirectSignal (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;)I b
	getInputSignal (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)I b
	getOutputSignal (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)I b
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	getSignal (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;)I a
	getStateForPlacement (Lnet/minecraft/world/item/context/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	isDiode (Lnet/minecraft/world/level/block/state/BlockState;)Z h
	isLocked (Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Z a
	isSignalSource (Lnet/minecraft/world/level/block/state/BlockState;)Z f_
	neighborChanged (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Block;Lnet/minecraft/core/BlockPos;Z)V a
	onPlace (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)V b
	onRemove (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)V a
	setPlacedBy (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/item/ItemStack;)V a
	shouldPrioritize (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Z c
	shouldTurnOn (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Z a
	sideInputDiodesOnly ()Z a
	tick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Lnet/minecraft/util/RandomSource;)V a
	updateNeighborsInFront (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V d
net/minecraft/world/level/block/DirectionalBlock crm
	FACING a
net/minecraft/world/level/block/DirtPathBlock crn
	SHAPE a
	canSurvive (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;)Z a
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	getStateForPlacement (Lnet/minecraft/world/item/context/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	isPathfindable (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/pathfinder/PathComputationType;)Z a
	tick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Lnet/minecraft/util/RandomSource;)V a
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
	useShapeForLightOcclusion (Lnet/minecraft/world/level/block/state/BlockState;)Z g_
net/minecraft/world/level/block/DispenserBlock cro
	DISPENSER_REGISTRY c
	FACING a
	TRIGGERED b
	TRIGGER_DURATION d
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	dispenseFrom (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;)V a
	getAnalogOutputSignal (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)I a
	getDispenseMethod (Lnet/minecraft/world/item/ItemStack;)Lnet/minecraft/core/dispenser/DispenseItemBehavior; a
	getDispensePosition (Lnet/minecraft/core/BlockSource;)Lnet/minecraft/core/Position; a
	getRenderShape (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/RenderShape; b_
	getStateForPlacement (Lnet/minecraft/world/item/context/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	hasAnalogOutputSignal (Lnet/minecraft/world/level/block/state/BlockState;)Z d_
	mirror (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Mirror;)Lnet/minecraft/world/level/block/state/BlockState; a
	neighborChanged (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Block;Lnet/minecraft/core/BlockPos;Z)V a
	newBlockEntity (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/entity/BlockEntity; a
	onRemove (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)V a
	registerBehavior (Lnet/minecraft/world/level/ItemLike;Lnet/minecraft/core/dispenser/DispenseItemBehavior;)V a
	rotate (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Rotation;)Lnet/minecraft/world/level/block/state/BlockState; a
	setPlacedBy (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/item/ItemStack;)V a
	tick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Lnet/minecraft/util/RandomSource;)V a
	use (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;Lnet/minecraft/world/phys/BlockHitResult;)Lnet/minecraft/world/InteractionResult; a
net/minecraft/world/level/block/DoorBlock crp
	AABB_DOOR_THICKNESS f
	EAST_AABB j
	FACING a
	HALF e
	HINGE c
	NORTH_AABB h
	OPEN b
	POWERED d
	SOUTH_AABB g
	WEST_AABB i
	type k
	canSurvive (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;)Z a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getHinge (Lnet/minecraft/world/item/context/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/properties/DoorHingeSide; b
	getSeed (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/BlockPos;)J a
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	getStateForPlacement (Lnet/minecraft/world/item/context/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	isOpen (Lnet/minecraft/world/level/block/state/BlockState;)Z h
	isPathfindable (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/pathfinder/PathComputationType;)Z a
	isWoodenDoor (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)Z a
	isWoodenDoor (Lnet/minecraft/world/level/block/state/BlockState;)Z n
	mirror (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Mirror;)Lnet/minecraft/world/level/block/state/BlockState; a
	neighborChanged (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Block;Lnet/minecraft/core/BlockPos;Z)V a
	playSound (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Z)V a
	playerWillDestroy (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/entity/player/Player;)V a
	rotate (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Rotation;)Lnet/minecraft/world/level/block/state/BlockState; a
	setOpen (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/level/Level;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/BlockPos;Z)V a
	setPlacedBy (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/item/ItemStack;)V a
	type ()Lnet/minecraft/world/level/block/state/properties/BlockSetType; a
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
	use (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;Lnet/minecraft/world/phys/BlockHitResult;)Lnet/minecraft/world/InteractionResult; a
net/minecraft/world/level/block/DoubleBlockCombiner crq
	combineWithNeigbour (Lnet/minecraft/world/level/block/entity/BlockEntityType;Ljava/util/function/Function;Ljava/util/function/Function;Lnet/minecraft/world/level/block/state/properties/DirectionProperty;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Ljava/util/function/BiPredicate;)Lnet/minecraft/world/level/block/DoubleBlockCombiner$NeighborCombineResult; a
net/minecraft/world/level/block/DoubleBlockCombiner$BlockType crq$a
	$VALUES d
	FIRST b
	SECOND c
	SINGLE a
	$values ()[Lnet/minecraft/world/level/block/DoubleBlockCombiner$BlockType; a
net/minecraft/world/level/block/DoubleBlockCombiner$Combiner crq$b
	acceptDouble (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object; a
	acceptNone ()Ljava/lang/Object; b
	acceptSingle (Ljava/lang/Object;)Ljava/lang/Object; a
net/minecraft/world/level/block/DoubleBlockCombiner$NeighborCombineResult crq$c
net/minecraft/world/level/block/DoubleBlockCombiner$NeighborCombineResult$Double crq$c$a
	first a
	second b
net/minecraft/world/level/block/DoubleBlockCombiner$NeighborCombineResult$Single crq$c$b
	single a
net/minecraft/world/level/block/DoublePlantBlock crr
	HALF a
	canSurvive (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;)Z a
	copyWaterloggedFrom (Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/state/BlockState; a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getSeed (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/BlockPos;)J a
	getStateForPlacement (Lnet/minecraft/world/item/context/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	placeAt (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/BlockPos;I)V a
	playerDestroy (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/entity/BlockEntity;Lnet/minecraft/world/item/ItemStack;)V a
	playerWillDestroy (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/entity/player/Player;)V a
	preventCreativeDropFromBottomPart (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/entity/player/Player;)V b
	setPlacedBy (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/item/ItemStack;)V a
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
net/minecraft/world/level/block/DragonEggBlock crs
	SHAPE a
	attack (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/player/Player;)V a
	getDelayAfterPlace ()I a
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	isPathfindable (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/pathfinder/PathComputationType;)Z a
	teleport (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)V d
	use (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;Lnet/minecraft/world/phys/BlockHitResult;)Lnet/minecraft/world/InteractionResult; a
net/minecraft/world/level/block/DropExperienceBlock crt
	xpRange a
	spawnAfterBreak (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/item/ItemStack;Z)V a
net/minecraft/world/level/block/DropperBlock cru
	DISPENSE_BEHAVIOUR c
	dispenseFrom (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;)V a
	getDispenseMethod (Lnet/minecraft/world/item/ItemStack;)Lnet/minecraft/core/dispenser/DispenseItemBehavior; a
	newBlockEntity (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/entity/BlockEntity; a
net/minecraft/world/level/block/EnchantmentTableBlock crv
	BOOKSHELF_OFFSETS b
	SHAPE a
	animateTick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/util/RandomSource;)V a
	getMenuProvider (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/MenuProvider; b
	getRenderShape (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/RenderShape; b_
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	getTicker (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/entity/BlockEntityType;)Lnet/minecraft/world/level/block/entity/BlockEntityTicker; a
	isPathfindable (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/pathfinder/PathComputationType;)Z a
	isValidBookShelf (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Z a
	newBlockEntity (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/entity/BlockEntity; a
	setPlacedBy (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/item/ItemStack;)V a
	use (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;Lnet/minecraft/world/phys/BlockHitResult;)Lnet/minecraft/world/InteractionResult; a
	useShapeForLightOcclusion (Lnet/minecraft/world/level/block/state/BlockState;)Z g_
net/minecraft/world/level/block/EndGatewayBlock crw
	animateTick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/util/RandomSource;)V a
	canBeReplaced (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/material/Fluid;)Z a
	getCloneItemStack (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/item/ItemStack; a
	getTicker (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/entity/BlockEntityType;)Lnet/minecraft/world/level/block/entity/BlockEntityTicker; a
	newBlockEntity (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/entity/BlockEntity; a
net/minecraft/world/level/block/EndPortalBlock crx
	SHAPE a
	animateTick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/util/RandomSource;)V a
	canBeReplaced (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/material/Fluid;)Z a
	entityInside (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/Entity;)V a
	getCloneItemStack (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/item/ItemStack; a
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	newBlockEntity (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/entity/BlockEntity; a
net/minecraft/world/level/block/EndPortalFrameBlock cry
	BASE_SHAPE c
	EYE_SHAPE d
	FACING a
	FULL_SHAPE e
	HAS_EYE b
	portalShape f
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getAnalogOutputSignal (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)I a
	getOrCreatePortalShape ()Lnet/minecraft/world/level/block/state/pattern/BlockPattern; a
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	getStateForPlacement (Lnet/minecraft/world/item/context/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	hasAnalogOutputSignal (Lnet/minecraft/world/level/block/state/BlockState;)Z d_
	isPathfindable (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/pathfinder/PathComputationType;)Z a
	mirror (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Mirror;)Lnet/minecraft/world/level/block/state/BlockState; a
	rotate (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Rotation;)Lnet/minecraft/world/level/block/state/BlockState; a
	useShapeForLightOcclusion (Lnet/minecraft/world/level/block/state/BlockState;)Z g_
net/minecraft/world/level/block/EndRodBlock crz
	animateTick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/util/RandomSource;)V a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getStateForPlacement (Lnet/minecraft/world/item/context/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
net/minecraft/world/level/block/EnderChestBlock csa
	CONTAINER_TITLE e
	FACING b
	SHAPE d
	WATERLOGGED c
	animateTick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/util/RandomSource;)V a
	combine (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Z)Lnet/minecraft/world/level/block/DoubleBlockCombiner$NeighborCombineResult; a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getFluidState (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/material/FluidState; c_
	getRenderShape (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/RenderShape; b_
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	getStateForPlacement (Lnet/minecraft/world/item/context/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	getTicker (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/entity/BlockEntityType;)Lnet/minecraft/world/level/block/entity/BlockEntityTicker; a
	isPathfindable (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/pathfinder/PathComputationType;)Z a
	mirror (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Mirror;)Lnet/minecraft/world/level/block/state/BlockState; a
	newBlockEntity (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/entity/BlockEntity; a
	rotate (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Rotation;)Lnet/minecraft/world/level/block/state/BlockState; a
	tick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Lnet/minecraft/util/RandomSource;)V a
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
	use (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;Lnet/minecraft/world/phys/BlockHitResult;)Lnet/minecraft/world/InteractionResult; a
net/minecraft/world/level/block/EntityBlock csb
	getListener (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/level/block/entity/BlockEntity;)Lnet/minecraft/world/level/gameevent/GameEventListener; a
	getTicker (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/entity/BlockEntityType;)Lnet/minecraft/world/level/block/entity/BlockEntityTicker; a
	newBlockEntity (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/entity/BlockEntity; a
net/minecraft/world/level/block/EquipableCarvedPumpkinBlock csc
	getEquipmentSlot ()Lnet/minecraft/world/entity/EquipmentSlot; g
net/minecraft/world/level/block/FaceAttachedHorizontalDirectionalBlock csd
	FACE I
	canAttach (Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;)Z b
	canSurvive (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;)Z a
	getConnectedDirection (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/core/Direction; h
	getStateForPlacement (Lnet/minecraft/world/item/context/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
net/minecraft/world/level/block/Fallable cse
	getFallDamageSource (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/world/damagesource/DamageSource; a
	onBrokenAfterFall (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/item/FallingBlockEntity;)V a
	onLand (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/entity/item/FallingBlockEntity;)V a
net/minecraft/world/level/block/FallingBlock csf
	animateTick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/util/RandomSource;)V a
	falling (Lnet/minecraft/world/entity/item/FallingBlockEntity;)V a
	getDelayAfterPlace ()I a
	getDustColor (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)I d
	isFree (Lnet/minecraft/world/level/block/state/BlockState;)Z h
	onPlace (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)V b
	tick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Lnet/minecraft/util/RandomSource;)V a
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
net/minecraft/world/level/block/FarmBlock csg
	MAX_MOISTURE c
	MOISTURE a
	SHAPE b
	canSurvive (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;)Z a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	fallOn (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/Entity;F)V a
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	getStateForPlacement (Lnet/minecraft/world/item/context/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	isNearWater (Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;)Z a
	isPathfindable (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/pathfinder/PathComputationType;)Z a
	randomTick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Lnet/minecraft/util/RandomSource;)V b
	shouldMaintainFarmland (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Z a
	tick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Lnet/minecraft/util/RandomSource;)V a
	turnToDirt (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)V a
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
	useShapeForLightOcclusion (Lnet/minecraft/world/level/block/state/BlockState;)Z g_
net/minecraft/world/level/block/FenceBlock csh
	occlusionByIndex i
	connectsTo (Lnet/minecraft/world/level/block/state/BlockState;ZLnet/minecraft/core/Direction;)Z a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getOcclusionShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/phys/shapes/VoxelShape; f
	getStateForPlacement (Lnet/minecraft/world/item/context/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	getVisualShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; b
	isPathfindable (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/pathfinder/PathComputationType;)Z a
	isSameFence (Lnet/minecraft/world/level/block/state/BlockState;)Z h
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
	use (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;Lnet/minecraft/world/phys/BlockHitResult;)Lnet/minecraft/world/InteractionResult; a
net/minecraft/world/level/block/FenceGateBlock csi
	IN_WALL c
	OPEN a
	POWERED b
	X_COLLISION_SHAPE i
	X_OCCLUSION_SHAPE m
	X_OCCLUSION_SHAPE_LOW D
	X_SHAPE e
	X_SHAPE_LOW g
	X_SUPPORT_SHAPE k
	Z_COLLISION_SHAPE h
	Z_OCCLUSION_SHAPE l
	Z_OCCLUSION_SHAPE_LOW n
	Z_SHAPE d
	Z_SHAPE_LOW f
	Z_SUPPORT_SHAPE j
	type E
	connectsToDirection (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;)Z a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getBlockSupportShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/phys/shapes/VoxelShape; b_
	getCollisionShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; c
	getOcclusionShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/phys/shapes/VoxelShape; f
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	getStateForPlacement (Lnet/minecraft/world/item/context/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	isPathfindable (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/pathfinder/PathComputationType;)Z a
	isWall (Lnet/minecraft/world/level/block/state/BlockState;)Z h
	neighborChanged (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Block;Lnet/minecraft/core/BlockPos;Z)V a
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
	use (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;Lnet/minecraft/world/phys/BlockHitResult;)Lnet/minecraft/world/InteractionResult; a
net/minecraft/world/level/block/FireBlock csj
	AGE d
	BURN_EASY K
	BURN_HARD M
	BURN_INSTANT J
	BURN_MEDIUM L
	EAST f
	EAST_AABB m
	IGNITE_EASY G
	IGNITE_HARD I
	IGNITE_INSTANT F
	IGNITE_MEDIUM H
	MAX_AGE c
	NORTH e
	NORTH_AABB n
	PROPERTY_BY_DIRECTION j
	SOUTH g
	SOUTH_AABB D
	UP i
	UP_AABB k
	WEST h
	WEST_AABB l
	burnOdds O
	igniteOdds N
	shapesCache E
	bootStrap ()V a
	calculateShape (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/phys/shapes/VoxelShape; h
	canBurn (Lnet/minecraft/world/level/block/state/BlockState;)Z f
	canSurvive (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;)Z a
	checkBurnOut (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;ILnet/minecraft/util/RandomSource;I)V a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getBurnOdds (Lnet/minecraft/world/level/block/state/BlockState;)I n
	getFireTickDelay (Lnet/minecraft/util/RandomSource;)I a
	getIgniteOdds (Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;)I a
	getIgniteOdds (Lnet/minecraft/world/level/block/state/BlockState;)I o
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	getStateForPlacement (Lnet/minecraft/world/item/context/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	getStateForPlacement (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; b
	getStateWithAge (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;I)Lnet/minecraft/world/level/block/state/BlockState; a
	isNearRain (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)Z a
	isValidFireLocation (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Z d
	onPlace (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)V b
	setFlammable (Lnet/minecraft/world/level/block/Block;II)V a
	tick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Lnet/minecraft/util/RandomSource;)V a
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
net/minecraft/world/level/block/FletchingTableBlock csk
	use (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;Lnet/minecraft/world/phys/BlockHitResult;)Lnet/minecraft/world/InteractionResult; a
net/minecraft/world/level/block/FlowerBlock csl
	AABB_OFFSET a
	SHAPE b
	effectDuration d
	suspiciousStewEffect c
	getEffectDuration ()I b
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	getSuspiciousEffect ()Lnet/minecraft/world/effect/MobEffect; a
net/minecraft/world/level/block/FlowerPotBlock csm
	AABB_SIZE a
	POTTED_BY_CONTENT c
	SHAPE b
	content d
	getCloneItemStack (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/item/ItemStack; a
	getContent ()Lnet/minecraft/world/level/block/Block; a
	getRenderShape (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/RenderShape; b_
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	isEmpty ()Z g
	isPathfindable (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/pathfinder/PathComputationType;)Z a
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
	use (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;Lnet/minecraft/world/phys/BlockHitResult;)Lnet/minecraft/world/InteractionResult; a
net/minecraft/world/level/block/FrogspawnBlock csn
	DEFAULT_MAX_HATCH_TICK_DELAY e
	DEFAULT_MIN_HATCH_TICK_DELAY d
	MAX_TADPOLES_SPAWN c
	MIN_TADPOLES_SPAWN b
	SHAPE a
	maxHatchTickDelay g
	minHatchTickDelay f
	canSurvive (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;)Z a
	destroyBlock (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)V a
	entityInside (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/Entity;)V a
	getFrogspawnHatchDelay (Lnet/minecraft/util/RandomSource;)I a
	getRandomTadpolePositionOffset (Lnet/minecraft/util/RandomSource;)D b
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	hatchFrogspawn (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Lnet/minecraft/util/RandomSource;)V a
	mayPlaceOn (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Z a
	onPlace (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)V b
	setDefaultHatchDelay ()V a
	setHatchDelay (II)V a
	spawnTadpoles (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Lnet/minecraft/util/RandomSource;)V b
	tick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Lnet/minecraft/util/RandomSource;)V a
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
net/minecraft/world/level/block/FrostedIceBlock cso
	AGE b
	MAX_AGE a
	NEIGHBORS_TO_AGE c
	NEIGHBORS_TO_MELT d
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	fewerNeigboursThan (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;I)Z a
	getCloneItemStack (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/item/ItemStack; a
	neighborChanged (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Block;Lnet/minecraft/core/BlockPos;Z)V a
	randomTick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Lnet/minecraft/util/RandomSource;)V b
	slightlyMelt (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)Z e
	tick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Lnet/minecraft/util/RandomSource;)V a
net/minecraft/world/level/block/FungusBlock csp
	BONEMEAL_SUCCESS_PROBABILITY b
	SHAPE a
	feature d
	requiredBlock c
	getFeature (Lnet/minecraft/world/level/LevelReader;)Ljava/util/Optional; a
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	isBonemealSuccess (Lnet/minecraft/world/level/Level;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Z a
	isValidBonemealTarget (Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)Z a
	mayPlaceOn (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Z d
	performBonemeal (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V a
net/minecraft/world/level/block/FurnaceBlock csq
	animateTick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/util/RandomSource;)V a
	getTicker (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/entity/BlockEntityType;)Lnet/minecraft/world/level/block/entity/BlockEntityTicker; a
	newBlockEntity (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/entity/BlockEntity; a
	openContainer (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/player/Player;)V a
net/minecraft/world/level/block/GameMasterBlock csr
net/minecraft/world/level/block/GlassBlock css
net/minecraft/world/level/block/GlazedTerracottaBlock cst
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getStateForPlacement (Lnet/minecraft/world/item/context/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
net/minecraft/world/level/block/GlowLichenBlock csu
	WATERLOGGED b
	spreader c
	canBeReplaced (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/item/context/BlockPlaceContext;)Z a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	emission (I)Ljava/util/function/ToIntFunction; b
	getFluidState (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/material/FluidState; c_
	getSpreader ()Lnet/minecraft/world/level/block/MultifaceSpreader; b
	isBonemealSuccess (Lnet/minecraft/world/level/Level;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Z a
	isValidBonemealTarget (Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)Z a
	performBonemeal (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V a
	propagatesSkylightDown (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Z c
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
net/minecraft/world/level/block/GrassBlock csv
	isBonemealSuccess (Lnet/minecraft/world/level/Level;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Z a
	isValidBonemealTarget (Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)Z a
	performBonemeal (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V a
net/minecraft/world/level/block/GravelBlock csw
	getDustColor (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)I d
net/minecraft/world/level/block/GrindstoneBlock csx
	CEILING_EAST_WEST_ALL_LEGS aA
	CEILING_EAST_WEST_GRINDSTONE aB
	CEILING_EAST_WEST_LEFT_LEG ay
	CEILING_EAST_WEST_LEFT_PIVOT aw
	CEILING_EAST_WEST_LEFT_POST au
	CEILING_EAST_WEST_RIGHT_LEG az
	CEILING_EAST_WEST_RIGHT_PIVOT ax
	CEILING_EAST_WEST_RIGHT_POST av
	CEILING_NORTH_SOUTH_ALL_LEGS as
	CEILING_NORTH_SOUTH_GRINDSTONE at
	CEILING_NORTH_SOUTH_LEFT_LEG aq
	CEILING_NORTH_SOUTH_LEFT_PIVOT ao
	CEILING_NORTH_SOUTH_LEFT_POST am
	CEILING_NORTH_SOUTH_RIGHT_LEG ar
	CEILING_NORTH_SOUTH_RIGHT_PIVOT ap
	CEILING_NORTH_SOUTH_RIGHT_POST an
	CONTAINER_TITLE aP
	FLOOR_EAST_WEST_ALL_LEGS D
	FLOOR_EAST_WEST_GRINDSTONE E
	FLOOR_EAST_WEST_LEFT_LEG m
	FLOOR_EAST_WEST_LEFT_PIVOT k
	FLOOR_EAST_WEST_LEFT_POST i
	FLOOR_EAST_WEST_RIGHT_LEG n
	FLOOR_EAST_WEST_RIGHT_PIVOT l
	FLOOR_EAST_WEST_RIGHT_POST j
	FLOOR_NORTH_SOUTH_ALL_LEGS g
	FLOOR_NORTH_SOUTH_GRINDSTONE h
	FLOOR_NORTH_SOUTH_LEFT_LEG e
	FLOOR_NORTH_SOUTH_LEFT_PIVOT c
	FLOOR_NORTH_SOUTH_LEFT_POST a
	FLOOR_NORTH_SOUTH_RIGHT_LEG f
	FLOOR_NORTH_SOUTH_RIGHT_PIVOT d
	FLOOR_NORTH_SOUTH_RIGHT_POST b
	WALL_EAST_ALL_LEGS ak
	WALL_EAST_GRINDSTONE al
	WALL_EAST_LEFT_LEG ai
	WALL_EAST_LEFT_PIVOT ag
	WALL_EAST_LEFT_POST ae
	WALL_EAST_RIGHT_LEG aj
	WALL_EAST_RIGHT_PIVOT ah
	WALL_EAST_RIGHT_POST af
	WALL_NORTH_ALL_LEGS U
	WALL_NORTH_GRINDSTONE V
	WALL_NORTH_LEFT_LEG S
	WALL_NORTH_LEFT_PIVOT Q
	WALL_NORTH_LEFT_POST O
	WALL_NORTH_RIGHT_LEG T
	WALL_NORTH_RIGHT_PIVOT R
	WALL_NORTH_RIGHT_POST P
	WALL_SOUTH_ALL_LEGS M
	WALL_SOUTH_GRINDSTONE N
	WALL_SOUTH_LEFT_LEG K
	WALL_SOUTH_LEFT_PIVOT H
	WALL_SOUTH_LEFT_POST F
	WALL_SOUTH_RIGHT_LEG L
	WALL_SOUTH_RIGHT_PIVOT J
	WALL_SOUTH_RIGHT_POST G
	WALL_WEST_ALL_LEGS ac
	WALL_WEST_GRINDSTONE ad
	WALL_WEST_LEFT_LEG aa
	WALL_WEST_LEFT_PIVOT Y
	WALL_WEST_LEFT_POST W
	WALL_WEST_RIGHT_LEG ab
	WALL_WEST_RIGHT_PIVOT Z
	WALL_WEST_RIGHT_POST X
	canSurvive (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;)Z a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getCollisionShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; c
	getMenuProvider (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/MenuProvider; b
	getRenderShape (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/RenderShape; b_
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	getVoxelShape (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/phys/shapes/VoxelShape; n
	isPathfindable (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/pathfinder/PathComputationType;)Z a
	mirror (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Mirror;)Lnet/minecraft/world/level/block/state/BlockState; a
	rotate (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Rotation;)Lnet/minecraft/world/level/block/state/BlockState; a
	use (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;Lnet/minecraft/world/phys/BlockHitResult;)Lnet/minecraft/world/InteractionResult; a
net/minecraft/world/level/block/GrowingPlantBlock csy
	growthDirection a
	scheduleFluidTicks b
	shape c
	canAttachTo (Lnet/minecraft/world/level/block/state/BlockState;)Z h
	canSurvive (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;)Z a
	getBodyBlock ()Lnet/minecraft/world/level/block/Block; a
	getHeadBlock ()Lnet/minecraft/world/level/block/GrowingPlantHeadBlock; b
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	getStateForPlacement (Lnet/minecraft/world/item/context/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	getStateForPlacement (Lnet/minecraft/world/level/LevelAccessor;)Lnet/minecraft/world/level/block/state/BlockState; a
	tick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Lnet/minecraft/util/RandomSource;)V a
net/minecraft/world/level/block/GrowingPlantBodyBlock csz
	canBeReplaced (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/item/context/BlockPlaceContext;)Z a
	getBodyBlock ()Lnet/minecraft/world/level/block/Block; a
	getCloneItemStack (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/item/ItemStack; a
	getHeadPos (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Block;)Ljava/util/Optional; a
	isBonemealSuccess (Lnet/minecraft/world/level/Level;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Z a
	isValidBonemealTarget (Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)Z a
	performBonemeal (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V a
	updateHeadAfterConvertedFromBody (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/state/BlockState; a
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
net/minecraft/world/level/block/GrowingPlantHeadBlock cta
	AGE d
	MAX_AGE e
	growPerTickProbability f
	canGrowInto (Lnet/minecraft/world/level/block/state/BlockState;)Z g
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getBlocksToGrowWhenBonemealed (Lnet/minecraft/util/RandomSource;)I a
	getGrowIntoState (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/util/RandomSource;)Lnet/minecraft/world/level/block/state/BlockState; a
	getHeadBlock ()Lnet/minecraft/world/level/block/GrowingPlantHeadBlock; b
	getMaxAgeState (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/state/BlockState; n
	getStateForPlacement (Lnet/minecraft/world/level/LevelAccessor;)Lnet/minecraft/world/level/block/state/BlockState; a
	isBonemealSuccess (Lnet/minecraft/world/level/Level;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Z a
	isMaxAge (Lnet/minecraft/world/level/block/state/BlockState;)Z o
	isRandomlyTicking (Lnet/minecraft/world/level/block/state/BlockState;)Z e_
	isValidBonemealTarget (Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)Z a
	performBonemeal (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V a
	randomTick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Lnet/minecraft/util/RandomSource;)V b
	updateBodyAfterConvertedFromHead (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/state/BlockState; a
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
net/minecraft/world/level/block/HalfTransparentBlock ctb
	skipRendering (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;)Z a
net/minecraft/world/level/block/HangingRootsBlock ctc
	SHAPE a
	WATERLOGGED b
	canSurvive (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;)Z a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getFluidState (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/material/FluidState; c_
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	getStateForPlacement (Lnet/minecraft/world/item/context/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
net/minecraft/world/level/block/HayBlock ctd
	fallOn (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/Entity;F)V a
net/minecraft/world/level/block/HoneyBlock cte
	MIN_FALL_SPEED_TO_BE_CONSIDERED_SLIDING c
	SHAPE a
	SLIDE_ADVANCEMENT_CHECK_INTERVAL e
	SLIDE_STARTS_WHEN_VERTICAL_SPEED_IS_AT_LEAST b
	THROTTLE_SLIDE_SPEED_TO d
	doSlideMovement (Lnet/minecraft/world/entity/Entity;)V d
	doesEntityDoHoneyBlockSlideEffects (Lnet/minecraft/world/entity/Entity;)Z c
	entityInside (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/Entity;)V a
	fallOn (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/Entity;F)V a
	getCollisionShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; c
	isSlidingDown (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/Entity;)Z a
	maybeDoSlideAchievement (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/core/BlockPos;)V a
	maybeDoSlideEffects (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/Entity;)V a
	showJumpParticles (Lnet/minecraft/world/entity/Entity;)V b
	showParticles (Lnet/minecraft/world/entity/Entity;I)V a
	showSlideParticles (Lnet/minecraft/world/entity/Entity;)V a
net/minecraft/world/level/block/HopperBlock ctf
	BASE f
	CONVEX_BASE e
	DOWN_INTERACTION_SHAPE l
	DOWN_SHAPE g
	EAST_INTERACTION_SHAPE m
	EAST_SHAPE h
	ENABLED b
	FACING a
	FUNNEL d
	NORTH_INTERACTION_SHAPE n
	NORTH_SHAPE i
	SOUTH_INTERACTION_SHAPE D
	SOUTH_SHAPE j
	TOP c
	WEST_INTERACTION_SHAPE E
	WEST_SHAPE k
	checkPoweredState (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;I)V a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	entityInside (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/Entity;)V a
	getAnalogOutputSignal (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)I a
	getInteractionShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	getRenderShape (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/RenderShape; b_
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	getStateForPlacement (Lnet/minecraft/world/item/context/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	getTicker (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/entity/BlockEntityType;)Lnet/minecraft/world/level/block/entity/BlockEntityTicker; a
	hasAnalogOutputSignal (Lnet/minecraft/world/level/block/state/BlockState;)Z d_
	isPathfindable (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/pathfinder/PathComputationType;)Z a
	mirror (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Mirror;)Lnet/minecraft/world/level/block/state/BlockState; a
	neighborChanged (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Block;Lnet/minecraft/core/BlockPos;Z)V a
	newBlockEntity (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/entity/BlockEntity; a
	onPlace (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)V b
	onRemove (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)V a
	rotate (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Rotation;)Lnet/minecraft/world/level/block/state/BlockState; a
	setPlacedBy (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/item/ItemStack;)V a
	use (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;Lnet/minecraft/world/phys/BlockHitResult;)Lnet/minecraft/world/InteractionResult; a
net/minecraft/world/level/block/HorizontalDirectionalBlock ctg
	FACING aC
	mirror (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Mirror;)Lnet/minecraft/world/level/block/state/BlockState; a
	rotate (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Rotation;)Lnet/minecraft/world/level/block/state/BlockState; a
net/minecraft/world/level/block/HugeMushroomBlock cth
	DOWN f
	EAST b
	NORTH a
	PROPERTY_BY_DIRECTION g
	SOUTH c
	UP e
	WEST d
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getStateForPlacement (Lnet/minecraft/world/item/context/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	mirror (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Mirror;)Lnet/minecraft/world/level/block/state/BlockState; a
	rotate (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Rotation;)Lnet/minecraft/world/level/block/state/BlockState; a
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
net/minecraft/world/level/block/IceBlock cti
	melt (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)V d
	meltsInto ()Lnet/minecraft/world/level/block/state/BlockState; a
	playerDestroy (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/entity/BlockEntity;Lnet/minecraft/world/item/ItemStack;)V a
	randomTick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Lnet/minecraft/util/RandomSource;)V b
net/minecraft/world/level/block/InfestedBlock ctj
	BLOCK_BY_HOST_BLOCK b
	HOST_TO_INFESTED_STATES c
	INFESTED_TO_HOST_STATES d
	hostBlock a
	getHostBlock ()Lnet/minecraft/world/level/block/Block; a
	getNewStateWithProperties (Ljava/util/Map;Lnet/minecraft/world/level/block/state/BlockState;Ljava/util/function/Supplier;)Lnet/minecraft/world/level/block/state/BlockState; a
	hostStateByInfested (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/state/BlockState; o
	infestedStateByHost (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/state/BlockState; n
	isCompatibleHostBlock (Lnet/minecraft/world/level/block/state/BlockState;)Z h
	spawnAfterBreak (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/item/ItemStack;Z)V a
	spawnInfestation (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;)V a
net/minecraft/world/level/block/InfestedRotatedPillarBlock ctk
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getStateForPlacement (Lnet/minecraft/world/item/context/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	rotate (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Rotation;)Lnet/minecraft/world/level/block/state/BlockState; a
net/minecraft/world/level/block/IronBarsBlock ctl
	attachsTo (Lnet/minecraft/world/level/block/state/BlockState;Z)Z a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getStateForPlacement (Lnet/minecraft/world/item/context/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	getVisualShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; b
	skipRendering (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;)Z a
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
net/minecraft/world/level/block/JigsawBlock ctm
	ORIENTATION a
	canAttach (Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplate$StructureBlockInfo;Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplate$StructureBlockInfo;)Z a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getFrontFacing (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/core/Direction; h
	getStateForPlacement (Lnet/minecraft/world/item/context/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	getTopFacing (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/core/Direction; n
	mirror (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Mirror;)Lnet/minecraft/world/level/block/state/BlockState; a
	newBlockEntity (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/entity/BlockEntity; a
	rotate (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Rotation;)Lnet/minecraft/world/level/block/state/BlockState; a
	use (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;Lnet/minecraft/world/phys/BlockHitResult;)Lnet/minecraft/world/InteractionResult; a
net/minecraft/world/level/block/JukeboxBlock ctn
	HAS_RECORD a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getAnalogOutputSignal (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)I a
	getRenderShape (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/RenderShape; b_
	getSignal (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;)I a
	getTicker (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/entity/BlockEntityType;)Lnet/minecraft/world/level/block/entity/BlockEntityTicker; a
	hasAnalogOutputSignal (Lnet/minecraft/world/level/block/state/BlockState;)Z d_
	isSignalSource (Lnet/minecraft/world/level/block/state/BlockState;)Z f_
	newBlockEntity (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/entity/BlockEntity; a
	onRemove (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)V a
	setPlacedBy (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/item/ItemStack;)V a
	use (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;Lnet/minecraft/world/phys/BlockHitResult;)Lnet/minecraft/world/InteractionResult; a
net/minecraft/world/level/block/KelpBlock cto
	GROW_PER_TICK_PROBABILITY g
	SHAPE f
	canAttachTo (Lnet/minecraft/world/level/block/state/BlockState;)Z h
	canGrowInto (Lnet/minecraft/world/level/block/state/BlockState;)Z g
	canPlaceLiquid (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/material/Fluid;)Z a
	getBlocksToGrowWhenBonemealed (Lnet/minecraft/util/RandomSource;)I a
	getBodyBlock ()Lnet/minecraft/world/level/block/Block; a
	getFluidState (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/material/FluidState; c_
	getStateForPlacement (Lnet/minecraft/world/item/context/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	placeLiquid (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/material/FluidState;)Z a
net/minecraft/world/level/block/KelpPlantBlock ctp
	canAttachTo (Lnet/minecraft/world/level/block/state/BlockState;)Z h
	canPlaceLiquid (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/material/Fluid;)Z a
	getFluidState (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/material/FluidState; c_
	getHeadBlock ()Lnet/minecraft/world/level/block/GrowingPlantHeadBlock; b
	placeLiquid (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/material/FluidState;)Z a
net/minecraft/world/level/block/LadderBlock ctq
	AABB_OFFSET c
	EAST_AABB d
	FACING a
	NORTH_AABB g
	SOUTH_AABB f
	WATERLOGGED b
	WEST_AABB e
	canAttachTo (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;)Z a
	canSurvive (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;)Z a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getFluidState (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/material/FluidState; c_
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	getStateForPlacement (Lnet/minecraft/world/item/context/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	mirror (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Mirror;)Lnet/minecraft/world/level/block/state/BlockState; a
	rotate (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Rotation;)Lnet/minecraft/world/level/block/state/BlockState; a
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
net/minecraft/world/level/block/LanternBlock ctr
	AABB c
	HANGING a
	HANGING_AABB d
	WATERLOGGED b
	canSurvive (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;)Z a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getConnectedDirection (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/core/Direction; h
	getFluidState (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/material/FluidState; c_
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	getStateForPlacement (Lnet/minecraft/world/item/context/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	isPathfindable (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/pathfinder/PathComputationType;)Z a
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
net/minecraft/world/level/block/LavaCauldronBlock cts
	entityInside (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/Entity;)V a
	getAnalogOutputSignal (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)I a
	getContentHeight (Lnet/minecraft/world/level/block/state/BlockState;)D b
	isFull (Lnet/minecraft/world/level/block/state/BlockState;)Z d
net/minecraft/world/level/block/LayeredCauldronBlock ctt
	BASE_CONTENT_HEIGHT h
	HEIGHT_PER_LEVEL i
	LEVEL e
	MAX_FILL_LEVEL d
	MIN_FILL_LEVEL c
	RAIN f
	SNOW g
	fillPredicate j
	canReceiveStalactiteDrip (Lnet/minecraft/world/level/material/Fluid;)Z a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	entityInside (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/Entity;)V a
	getAnalogOutputSignal (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)I a
	getContentHeight (Lnet/minecraft/world/level/block/state/BlockState;)D b
	handleEntityOnFireInside (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)V d
	handlePrecipitation (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/biome/Biome$Precipitation;)V a
	isFull (Lnet/minecraft/world/level/block/state/BlockState;)Z d
	lowerFillLevel (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)V e
	receiveStalactiteDrip (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/material/Fluid;)V a
net/minecraft/world/level/block/LeavesBlock ctu
	DECAY_DISTANCE a
	DISTANCE b
	PERSISTENT c
	TICK_DELAY e
	WATERLOGGED d
	animateTick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/util/RandomSource;)V a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	decaying (Lnet/minecraft/world/level/block/state/BlockState;)Z h
	getBlockSupportShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/phys/shapes/VoxelShape; b_
	getDistanceAt (Lnet/minecraft/world/level/block/state/BlockState;)I o
	getFluidState (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/material/FluidState; c_
	getLightBlock (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)I g
	getOptionalDistanceAt (Lnet/minecraft/world/level/block/state/BlockState;)Ljava/util/OptionalInt; n
	getStateForPlacement (Lnet/minecraft/world/item/context/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	isRandomlyTicking (Lnet/minecraft/world/level/block/state/BlockState;)Z e_
	randomTick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Lnet/minecraft/util/RandomSource;)V b
	tick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Lnet/minecraft/util/RandomSource;)V a
	updateDistance (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
net/minecraft/world/level/block/LecternBlock ctv
	FACING a
	HAS_BOOK c
	PAGE_CHANGE_IMPULSE_TICKS m
	POWERED b
	SHAPE_BASE d
	SHAPE_COLLISION h
	SHAPE_COMMON f
	SHAPE_EAST k
	SHAPE_NORTH j
	SHAPE_POST e
	SHAPE_SOUTH l
	SHAPE_TOP_PLATE g
	SHAPE_WEST i
	changePowered (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)V a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getAnalogOutputSignal (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)I a
	getCollisionShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; c
	getDirectSignal (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;)I b
	getMenuProvider (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/MenuProvider; b
	getOcclusionShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/phys/shapes/VoxelShape; f
	getRenderShape (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/RenderShape; b_
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	getSignal (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;)I a
	getStateForPlacement (Lnet/minecraft/world/item/context/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	hasAnalogOutputSignal (Lnet/minecraft/world/level/block/state/BlockState;)Z d_
	isPathfindable (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/pathfinder/PathComputationType;)Z a
	isSignalSource (Lnet/minecraft/world/level/block/state/BlockState;)Z f_
	mirror (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Mirror;)Lnet/minecraft/world/level/block/state/BlockState; a
	newBlockEntity (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/entity/BlockEntity; a
	onRemove (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)V a
	openScreen (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/player/Player;)V a
	placeBook (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/item/ItemStack;)V b
	popBook (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)V d
	resetBookState (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)V a
	rotate (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Rotation;)Lnet/minecraft/world/level/block/state/BlockState; a
	signalPageChange (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V a
	tick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Lnet/minecraft/util/RandomSource;)V a
	tryPlaceBook (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/item/ItemStack;)Z a
	updateBelow (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V b
	use (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;Lnet/minecraft/world/phys/BlockHitResult;)Lnet/minecraft/world/InteractionResult; a
	useShapeForLightOcclusion (Lnet/minecraft/world/level/block/state/BlockState;)Z g_
net/minecraft/world/level/block/LevelEvent ctw
	ANIMATION_DRAGON_SUMMON_ROAR af
	ANIMATION_END_GATEWAY_SPAWN ae
	COMPOSTER_FILL O
	DRIPSTONE_DRIP S
	END_PORTAL_FRAME_FILL R
	LAVA_FIZZ P
	PARTICLES_AND_SOUND_BRUSH_BLOCK_COMPLETE am
	PARTICLES_AND_SOUND_PLANT_GROWTH T
	PARTICLES_AND_SOUND_WAX_ON ah
	PARTICLES_DESTROY_BLOCK V
	PARTICLES_DRAGON_BLOCK_BREAK ac
	PARTICLES_DRAGON_FIREBALL_SPLASH aa
	PARTICLES_EGG_CRACK an
	PARTICLES_ELECTRIC_SPARK ag
	PARTICLES_EYE_OF_ENDER_DEATH X
	PARTICLES_INSTANT_POTION_SPLASH ab
	PARTICLES_MOBBLOCK_SPAWN Y
	PARTICLES_PLANT_GROWTH Z
	PARTICLES_SCRAPE aj
	PARTICLES_SCULK_CHARGE ak
	PARTICLES_SCULK_SHRIEK al
	PARTICLES_SHOOT U
	PARTICLES_SPELL_POTION_SPLASH W
	PARTICLES_WATER_EVAPORATING ad
	PARTICLES_WAX_OFF ai
	REDSTONE_TORCH_BURNOUT Q
	SOUND_ANVIL_BROKEN w
	SOUND_ANVIL_LAND y
	SOUND_ANVIL_USED x
	SOUND_BAT_LIFTOFF s
	SOUND_BLAZE_FIREBALL l
	SOUND_BREWING_STAND_BREW C
	SOUND_CHORUS_DEATH B
	SOUND_CHORUS_GROW A
	SOUND_DISPENSER_DISPENSE a
	SOUND_DISPENSER_FAIL b
	SOUND_DISPENSER_PROJECTILE_LAUNCH c
	SOUND_DRAGON_DEATH v
	SOUND_DRAGON_FIREBALL k
	SOUND_DRIP_LAVA_INTO_CAULDRON L
	SOUND_DRIP_WATER_INTO_CAULDRON M
	SOUND_ENDER_EYE_LAUNCH d
	SOUND_END_PORTAL_SPAWN D
	SOUND_EXTINGUISH_FIRE f
	SOUND_FIREWORK_SHOOT e
	SOUND_GHAST_FIREBALL j
	SOUND_GHAST_WARNING i
	SOUND_GRINDSTONE_USED H
	SOUND_HUSK_TO_ZOMBIE G
	SOUND_PAGE_TURN I
	SOUND_PHANTOM_BITE E
	SOUND_PLAY_JUKEBOX_SONG g
	SOUND_POINTED_DRIPSTONE_LAND K
	SOUND_PORTAL_TRAVEL z
	SOUND_SKELETON_TO_STRAY N
	SOUND_SMITHING_TABLE_USED J
	SOUND_STOP_JUKEBOX_SONG h
	SOUND_WITHER_BLOCK_BREAK p
	SOUND_WITHER_BOSS_SHOOT r
	SOUND_WITHER_BOSS_SPAWN q
	SOUND_ZOMBIE_CONVERTED u
	SOUND_ZOMBIE_DOOR_CRASH o
	SOUND_ZOMBIE_INFECTED t
	SOUND_ZOMBIE_IRON_DOOR n
	SOUND_ZOMBIE_TO_DROWNED F
	SOUND_ZOMBIE_WOODEN_DOOR m
net/minecraft/world/level/block/LeverBlock ctx
	DEPTH b
	DOWN_AABB_X l
	DOWN_AABB_Z k
	EAST_AABB h
	HEIGHT d
	NORTH_AABB e
	POWERED a
	SOUTH_AABB f
	UP_AABB_X j
	UP_AABB_Z i
	WEST_AABB g
	WIDTH c
	animateTick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/util/RandomSource;)V a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getDirectSignal (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;)I b
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	getSignal (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;)I a
	isSignalSource (Lnet/minecraft/world/level/block/state/BlockState;)Z f_
	makeParticle (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;F)V a
	onRemove (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)V a
	pull (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; d
	updateNeighbours (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)V e
	use (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;Lnet/minecraft/world/phys/BlockHitResult;)Lnet/minecraft/world/InteractionResult; a
net/minecraft/world/level/block/LightBlock cty
	LEVEL b
	LIGHT_EMISSION d
	MAX_LEVEL a
	WATERLOGGED c
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getCloneItemStack (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/item/ItemStack; a
	getFluidState (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/material/FluidState; c_
	getRenderShape (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/RenderShape; b_
	getShadeBrightness (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)F b
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	propagatesSkylightDown (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Z c
	setLightOnStack (Lnet/minecraft/world/item/ItemStack;I)Lnet/minecraft/world/item/ItemStack; a
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
	use (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;Lnet/minecraft/world/phys/BlockHitResult;)Lnet/minecraft/world/InteractionResult; a
net/minecraft/world/level/block/LightningRodBlock ctz
	ACTIVATION_TICKS j
	POWERED c
	RANGE d
	SPARK_CYCLE k
	WATERLOGGED b
	animateTick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/util/RandomSource;)V a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getDirectSignal (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;)I b
	getFluidState (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/material/FluidState; c_
	getSignal (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;)I a
	getStateForPlacement (Lnet/minecraft/world/item/context/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	isSignalSource (Lnet/minecraft/world/level/block/state/BlockState;)Z f_
	onLightningStrike (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)V d
	onPlace (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)V b
	onProjectileHit (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/phys/BlockHitResult;Lnet/minecraft/world/entity/projectile/Projectile;)V a
	onRemove (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)V a
	tick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Lnet/minecraft/util/RandomSource;)V a
	updateNeighbours (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)V e
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
net/minecraft/world/level/block/LiquidBlock cua
	LEVEL a
	POSSIBLE_FLOW_DIRECTIONS d
	STABLE_SHAPE c
	fluid b
	stateCache e
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	fizz (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;)V a
	getCollisionShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; c
	getDrops (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/storage/loot/LootParams$Builder;)Ljava/util/List; a
	getFluidState (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/material/FluidState; c_
	getPickupSound ()Ljava/util/Optional; am_
	getRenderShape (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/RenderShape; b_
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	isPathfindable (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/pathfinder/PathComputationType;)Z a
	isRandomlyTicking (Lnet/minecraft/world/level/block/state/BlockState;)Z e_
	neighborChanged (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Block;Lnet/minecraft/core/BlockPos;Z)V a
	onPlace (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)V b
	pickupBlock (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/item/ItemStack; c
	propagatesSkylightDown (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Z c
	randomTick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Lnet/minecraft/util/RandomSource;)V b
	shouldSpreadLiquid (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Z a
	skipRendering (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;)Z a
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
net/minecraft/world/level/block/LiquidBlockContainer cub
	canPlaceLiquid (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/material/Fluid;)Z a
	placeLiquid (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/material/FluidState;)Z a
net/minecraft/world/level/block/LoomBlock cuc
	CONTAINER_TITLE a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getMenuProvider (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/MenuProvider; b
	getStateForPlacement (Lnet/minecraft/world/item/context/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	use (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;Lnet/minecraft/world/phys/BlockHitResult;)Lnet/minecraft/world/InteractionResult; a
net/minecraft/world/level/block/MagmaBlock cud
	BUBBLE_COLUMN_CHECK_DELAY a
	onPlace (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)V b
	stepOn (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/entity/Entity;)V a
	tick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Lnet/minecraft/util/RandomSource;)V a
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
net/minecraft/world/level/block/MangroveLeavesBlock cue
	isBonemealSuccess (Lnet/minecraft/world/level/Level;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Z a
	isValidBonemealTarget (Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)Z a
	performBonemeal (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V a
net/minecraft/world/level/block/MangrovePropaguleBlock cuf
	AGE a
	GROW_TALL_MANGROVE_PROBABILITY i
	HANGING c
	MAX_AGE b
	SHAPE_PER_AGE g
	WATERLOGGED h
	canSurvive (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;)Z a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	createNewHangingPropagule ()Lnet/minecraft/world/level/block/state/BlockState; b
	createNewHangingPropagule (I)Lnet/minecraft/world/level/block/state/BlockState; b
	getFluidState (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/material/FluidState; c_
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	getStateForPlacement (Lnet/minecraft/world/item/context/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	isBonemealSuccess (Lnet/minecraft/world/level/Level;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Z a
	isFullyGrown (Lnet/minecraft/world/level/block/state/BlockState;)Z n
	isHanging (Lnet/minecraft/world/level/block/state/BlockState;)Z h
	isValidBonemealTarget (Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)Z a
	mayPlaceOn (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Z d
	performBonemeal (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V a
	randomTick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Lnet/minecraft/util/RandomSource;)V b
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
net/minecraft/world/level/block/MangroveRootsBlock cug
	WATERLOGGED a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getFluidState (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/material/FluidState; c_
	getStateForPlacement (Lnet/minecraft/world/item/context/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	skipRendering (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;)Z a
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
net/minecraft/world/level/block/MelonBlock cuh
	getAttachedStem ()Lnet/minecraft/world/level/block/AttachedStemBlock; b
	getStem ()Lnet/minecraft/world/level/block/StemBlock; a
net/minecraft/world/level/block/Mirror cui
	$VALUES h
	CODEC d
	FRONT_BACK c
	LEFT_RIGHT b
	NONE a
	id e
	rotation g
	symbol f
	$values ()[Lnet/minecraft/world/level/block/Mirror; d
	getRotation (Lnet/minecraft/core/Direction;)Lnet/minecraft/world/level/block/Rotation; a
	getSerializedName ()Ljava/lang/String; c
	mirror (II)I a
	mirror (Lnet/minecraft/core/Direction;)Lnet/minecraft/core/Direction; b
	rotation ()Lcom/mojang/math/OctahedralGroup; a
	symbol ()Lnet/minecraft/network/chat/Component; b
net/minecraft/world/level/block/MossBlock cuj
	isBonemealSuccess (Lnet/minecraft/world/level/Level;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Z a
	isValidBonemealTarget (Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)Z a
	performBonemeal (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V a
net/minecraft/world/level/block/MudBlock cuk
	SHAPE a
	getBlockSupportShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/phys/shapes/VoxelShape; b_
	getCollisionShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; c
	getShadeBrightness (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)F b
	getVisualShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; b
	isPathfindable (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/pathfinder/PathComputationType;)Z a
net/minecraft/world/level/block/MultifaceBlock cul
	AABB_OFFSET b
	DIRECTIONS a
	DOWN_AABB d
	EAST_AABB f
	NORTH_AABB g
	PROPERTY_BY_DIRECTION i
	SHAPE_BY_DIRECTION j
	SOUTH_AABB h
	UP_AABB c
	WEST_AABB e
	canMirrorX m
	canMirrorZ n
	canRotate l
	shapesCache k
	availableFaces (Lnet/minecraft/world/level/block/state/BlockState;)Ljava/util/Set; h
	calculateMultifaceShape (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/phys/shapes/VoxelShape; o
	canAttachTo (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/Direction;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Z a
	canBeReplaced (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/item/context/BlockPlaceContext;)Z a
	canSurvive (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;)Z a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getDefaultMultifaceState (Lnet/minecraft/world/level/block/state/StateDefinition;)Lnet/minecraft/world/level/block/state/BlockState; a
	getFaceProperty (Lnet/minecraft/core/Direction;)Lnet/minecraft/world/level/block/state/properties/BooleanProperty; b
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	getSpreader ()Lnet/minecraft/world/level/block/MultifaceSpreader; b
	getStateForPlacement (Lnet/minecraft/world/item/context/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	getStateForPlacement (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;)Lnet/minecraft/world/level/block/state/BlockState; c
	hasAnyFace (Lnet/minecraft/world/level/block/state/BlockState;)Z n
	hasAnyVacantFace (Lnet/minecraft/world/level/block/state/BlockState;)Z p
	hasFace (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;)Z a
	isFaceSupported (Lnet/minecraft/core/Direction;)Z a
	isValidStateForPlacement (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;)Z a
	isWaterloggable ()Z g
	mapDirections (Lnet/minecraft/world/level/block/state/BlockState;Ljava/util/function/Function;)Lnet/minecraft/world/level/block/state/BlockState; a
	mirror (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Mirror;)Lnet/minecraft/world/level/block/state/BlockState; a
	pack (Ljava/util/Collection;)B a
	removeFace (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/state/properties/BooleanProperty;)Lnet/minecraft/world/level/block/state/BlockState; a
	rotate (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Rotation;)Lnet/minecraft/world/level/block/state/BlockState; a
	unpack (B)Ljava/util/Set; a
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
net/minecraft/world/level/block/MultifaceSpreader cum
	DEFAULT_SPREAD_ORDER a
	config b
	canSpreadInAnyDirection (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;)Z a
	getSpreadFromFaceTowardDirection (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/MultifaceSpreader$SpreadPredicate;)Ljava/util/Optional; a
	spreadAll (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Z)J a
	spreadFromFaceTowardAllDirections (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;Z)J a
	spreadFromFaceTowardDirection (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;Lnet/minecraft/core/Direction;Z)Ljava/util/Optional; a
	spreadFromFaceTowardRandomDirection (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;Lnet/minecraft/util/RandomSource;Z)Ljava/util/Optional; a
	spreadFromRandomFaceTowardRandomDirection (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/util/RandomSource;)Ljava/util/Optional; a
	spreadToFace (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/world/level/block/MultifaceSpreader$SpreadPos;Z)Ljava/util/Optional; a
net/minecraft/world/level/block/MultifaceSpreader$DefaultSpreaderConfig cum$a
	block a
	canSpreadInto (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/MultifaceSpreader$SpreadPos;)Z a
	getStateForPlacement (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;)Lnet/minecraft/world/level/block/state/BlockState; a
	stateCanBeReplaced (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;)Z a
net/minecraft/world/level/block/MultifaceSpreader$SpreadConfig cum$b
	canSpreadFrom (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;)Z b
	canSpreadInto (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/MultifaceSpreader$SpreadPos;)Z a
	getSpreadTypes ()[Lnet/minecraft/world/level/block/MultifaceSpreader$SpreadType; a
	getStateForPlacement (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;)Lnet/minecraft/world/level/block/state/BlockState; a
	hasFace (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;)Z a
	isOtherBlockValidAsSource (Lnet/minecraft/world/level/block/state/BlockState;)Z a
	placeBlock (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/world/level/block/MultifaceSpreader$SpreadPos;Lnet/minecraft/world/level/block/state/BlockState;Z)Z a
net/minecraft/world/level/block/MultifaceSpreader$SpreadPos cum$c
	face b
	pos a
	face ()Lnet/minecraft/core/Direction; b
	pos ()Lnet/minecraft/core/BlockPos; a
net/minecraft/world/level/block/MultifaceSpreader$SpreadPredicate cum$d
net/minecraft/world/level/block/MultifaceSpreader$SpreadType cum$e
	$VALUES d
	SAME_PLANE b
	SAME_POSITION a
	WRAP_AROUND c
	$values ()[Lnet/minecraft/world/level/block/MultifaceSpreader$SpreadType; a
	getSpreadPos (Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;Lnet/minecraft/core/Direction;)Lnet/minecraft/world/level/block/MultifaceSpreader$SpreadPos; a
net/minecraft/world/level/block/MushroomBlock cun
	AABB_OFFSET a
	SHAPE b
	feature c
	canSurvive (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;)Z a
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	growMushroom (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/util/RandomSource;)Z a
	isBonemealSuccess (Lnet/minecraft/world/level/Level;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Z a
	isValidBonemealTarget (Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)Z a
	mayPlaceOn (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Z d
	performBonemeal (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V a
	randomTick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Lnet/minecraft/util/RandomSource;)V b
net/minecraft/world/level/block/MyceliumBlock cuo
	animateTick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/util/RandomSource;)V a
net/minecraft/world/level/block/NetherPortalBlock cup
	AABB_OFFSET b
	AXIS a
	X_AXIS_AABB c
	Z_AXIS_AABB d
	animateTick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/util/RandomSource;)V a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	entityInside (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/Entity;)V a
	getCloneItemStack (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/item/ItemStack; a
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	randomTick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Lnet/minecraft/util/RandomSource;)V b
	rotate (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Rotation;)Lnet/minecraft/world/level/block/state/BlockState; a
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
net/minecraft/world/level/block/NetherSproutsBlock cuq
	SHAPE a
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	mayPlaceOn (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Z d
net/minecraft/world/level/block/NetherVines cur
	BONEMEAL_GROW_PROBABILITY_DECREASE_RATE b
	GROW_PER_TICK_PROBABILITY a
	getBlocksToGrowWhenBonemealed (Lnet/minecraft/util/RandomSource;)I a
	isValidGrowthState (Lnet/minecraft/world/level/block/state/BlockState;)Z a
net/minecraft/world/level/block/NetherWartBlock cus
	AGE b
	MAX_AGE a
	SHAPE_BY_AGE c
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getCloneItemStack (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/item/ItemStack; a
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	isRandomlyTicking (Lnet/minecraft/world/level/block/state/BlockState;)Z e_
	mayPlaceOn (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Z d
	randomTick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Lnet/minecraft/util/RandomSource;)V b
net/minecraft/world/level/block/NetherrackBlock cut
	isBonemealSuccess (Lnet/minecraft/world/level/Level;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Z a
	isValidBonemealTarget (Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)Z a
	performBonemeal (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V a
net/minecraft/world/level/block/NoteBlock cuu
	INSTRUMENT a
	NOTE c
	NOTE_VOLUME d
	POWERED b
	attack (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/player/Player;)V a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getCustomSoundId (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/resources/ResourceLocation; a
	getPitchFromNote (I)F b
	getStateForPlacement (Lnet/minecraft/world/item/context/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	neighborChanged (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Block;Lnet/minecraft/core/BlockPos;Z)V a
	playNote (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)V a
	setInstrument (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/state/BlockState; b
	triggerEvent (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;II)Z a
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
	use (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;Lnet/minecraft/world/phys/BlockHitResult;)Lnet/minecraft/world/InteractionResult; a
net/minecraft/world/level/block/NyliumBlock cuv
	canBeNylium (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;)Z b
	isBonemealSuccess (Lnet/minecraft/world/level/Level;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Z a
	isValidBonemealTarget (Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)Z a
	performBonemeal (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V a
	place (Lnet/minecraft/core/Registry;Lnet/minecraft/resources/ResourceKey;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPos;)V a
	randomTick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Lnet/minecraft/util/RandomSource;)V b
net/minecraft/world/level/block/ObserverBlock cuw
	POWERED b
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getDirectSignal (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;)I b
	getSignal (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;)I a
	getStateForPlacement (Lnet/minecraft/world/item/context/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	isSignalSource (Lnet/minecraft/world/level/block/state/BlockState;)Z f_
	mirror (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Mirror;)Lnet/minecraft/world/level/block/state/BlockState; a
	onPlace (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)V b
	onRemove (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)V a
	rotate (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Rotation;)Lnet/minecraft/world/level/block/state/BlockState; a
	startSignal (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;)V a
	tick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Lnet/minecraft/util/RandomSource;)V a
	updateNeighborsInFront (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V a
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
net/minecraft/world/level/block/PiglinWallSkullBlock cux
	AABBS b
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
net/minecraft/world/level/block/PinkPetalsBlock cuy
	AMOUNT d
	FACING c
	MAX_FLOWERS b
	MIN_FLOWERS a
	canBeReplaced (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/item/context/BlockPlaceContext;)Z a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	getStateForPlacement (Lnet/minecraft/world/item/context/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	isBonemealSuccess (Lnet/minecraft/world/level/Level;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Z a
	isValidBonemealTarget (Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)Z a
	mirror (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Mirror;)Lnet/minecraft/world/level/block/state/BlockState; a
	performBonemeal (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V a
	rotate (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Rotation;)Lnet/minecraft/world/level/block/state/BlockState; a
net/minecraft/world/level/block/PipeBlock cuz
	DIRECTIONS i
	DOWN f
	EAST b
	NORTH a
	PROPERTY_BY_DIRECTION g
	SOUTH c
	UP e
	WEST d
	shapeByIndex h
	getAABBIndex (Lnet/minecraft/world/level/block/state/BlockState;)I h
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	makeShapes (F)[Lnet/minecraft/world/phys/shapes/VoxelShape; a
	propagatesSkylightDown (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Z c
net/minecraft/world/level/block/PitcherCropBlock cva
	AGE b
	BONEMEAL_INCREASE e
	COLLISION_SHAPE_BULB h
	COLLISION_SHAPE_CROP i
	DOUBLE_PLANT_AGE_INTERSECTION d
	FULL_LOWER_SHAPE g
	FULL_UPPER_SHAPE f
	LOWER_SHAPE_BY_AGE k
	MAX_AGE c
	UPPER_SHAPE_BY_AGE j
	canBeReplaced (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/item/context/BlockPlaceContext;)Z a
	canGrow (Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;I)Z a
	canGrowInto (Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;)Z a
	canSurvive (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;)Z a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	entityInside (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/Entity;)V a
	getCollisionShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; c
	getLowerHalf (Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/PitcherCropBlock$PosAndState; b
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	getStateForPlacement (Lnet/minecraft/world/item/context/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	grow (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/BlockPos;I)V a
	isBonemealSuccess (Lnet/minecraft/world/level/Level;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Z a
	isLower (Lnet/minecraft/world/level/block/state/BlockState;)Z n
	isMaxAge (Lnet/minecraft/world/level/block/state/BlockState;)Z h
	isRandomlyTicking (Lnet/minecraft/world/level/block/state/BlockState;)Z e_
	isUpper (Lnet/minecraft/world/level/block/state/BlockState;)Z o
	isValidBonemealTarget (Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)Z a
	mayPlaceOn (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Z d
	performBonemeal (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V a
	randomTick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Lnet/minecraft/util/RandomSource;)V b
	setPlacedBy (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/item/ItemStack;)V a
	sufficientLight (Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;)Z b
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
net/minecraft/world/level/block/PitcherCropBlock$PosAndState cva$a
	pos a
	state b
	pos ()Lnet/minecraft/core/BlockPos; a
	state ()Lnet/minecraft/world/level/block/state/BlockState; b
net/minecraft/world/level/block/PlayerHeadBlock cvb
	setPlacedBy (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/item/ItemStack;)V a
net/minecraft/world/level/block/PlayerWallHeadBlock cvc
	getDrops (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/storage/loot/LootParams$Builder;)Ljava/util/List; a
	setPlacedBy (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/item/ItemStack;)V a
net/minecraft/world/level/block/PointedDripstoneBlock cvd
	AVERAGE_DAYS_PER_GROWTH F
	BASE_SHAPE P
	DELAY_BEFORE_FALLING e
	DRIP_PROBABILITY_PER_ANIMATE_TICK f
	DRIP_PROBABILITY_PER_ANIMATE_TICK_IF_UNDER_LIQUID_SOURCE g
	FRUSTUM_SHAPE N
	GROWTH_PROBABILITY_PER_RANDOM_TICK G
	LAVA_TRANSFER_PROBABILITY_PER_RANDOM_TICK j
	MAX_GROWTH_LENGTH H
	MAX_HORIZONTAL_OFFSET Q
	MAX_SEARCH_LENGTH_BETWEEN_STALACTITE_TIP_AND_CAULDRON h
	MAX_SEARCH_LENGTH_WHEN_CHECKING_DRIP_TYPE d
	MAX_STALACTITE_HEIGHT_FOR_DAMAGE_CALCULATION n
	MAX_STALAGMITE_SEARCH_RANGE_WHEN_GROWING I
	MIDDLE_SHAPE O
	MIN_TRIDENT_VELOCITY_TO_BREAK_DRIPSTONE k
	REQUIRED_SPACE_TO_DRIP_THROUGH_NON_SOLID_BLOCK R
	STALACTITE_DAMAGE_PER_FALL_DISTANCE_AND_SIZE l
	STALACTITE_DRIP_START_PIXEL J
	STALACTITE_MAX_DAMAGE m
	STALAGMITE_FALL_DAMAGE_MODIFIER E
	STALAGMITE_FALL_DISTANCE_OFFSET D
	THICKNESS b
	TIP_DIRECTION a
	TIP_MERGE_SHAPE K
	TIP_SHAPE_DOWN M
	TIP_SHAPE_UP L
	WATERLOGGED c
	WATER_TRANSFER_PROBABILITY_PER_RANDOM_TICK i
	animateTick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/util/RandomSource;)V a
	calculateDripstoneThickness (Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;Z)Lnet/minecraft/world/level/block/state/properties/DripstoneThickness; a
	calculateTipDirection (Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;)Lnet/minecraft/core/Direction; b
	canDrip (Lnet/minecraft/world/level/block/state/BlockState;)Z h
	canDripThrough (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Z b
	canFillCauldron (Lnet/minecraft/world/level/material/Fluid;)Z a
	canGrow (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/state/BlockState;)Z a
	canSurvive (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;)Z a
	canTipGrow (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;)Z b
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	createDripstone (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/properties/DripstoneThickness;)V a
	createMergedTips (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;)V a
	fallOn (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/Entity;F)V a
	findBlockVertical (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction$AxisDirection;Ljava/util/function/BiPredicate;Ljava/util/function/Predicate;I)Ljava/util/Optional; a
	findFillableCauldronBelowStalactiteTip (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/material/Fluid;)Lnet/minecraft/core/BlockPos; a
	findRootBlock (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;I)Ljava/util/Optional; a
	findStalactiteTipAboveCauldron (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/core/BlockPos; a
	findTip (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;IZ)Lnet/minecraft/core/BlockPos; a
	getCauldronFillFluidType (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/material/Fluid; a
	getDripFluid (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/level/material/Fluid;)Lnet/minecraft/world/level/material/Fluid; a
	getFallDamageSource (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/world/damagesource/DamageSource; a
	getFluidAboveStalactite (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Ljava/util/Optional; b
	getFluidState (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/material/FluidState; c_
	getMaxHorizontalOffset ()F al_
	getOcclusionShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/phys/shapes/VoxelShape; f
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	getStateForPlacement (Lnet/minecraft/world/item/context/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	grow (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;)V a
	growStalactiteOrStalagmiteIfPossible (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Lnet/minecraft/util/RandomSource;)V c
	growStalagmiteBelow (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;)V b
	isCollisionShapeFullBlock (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Z a_
	isPathfindable (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/pathfinder/PathComputationType;)Z a
	isPointedDripstoneWithDirection (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;)Z b
	isStalactite (Lnet/minecraft/world/level/block/state/BlockState;)Z n
	isStalactiteStartPos (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;)Z b
	isStalagmite (Lnet/minecraft/world/level/block/state/BlockState;)Z o
	isTip (Lnet/minecraft/world/level/block/state/BlockState;Z)Z a
	isUnmergedTipWithDirection (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;)Z a
	isValidPointedDripstonePlacement (Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;)Z c
	maybeTransferFluid (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;F)V a
	onBrokenAfterFall (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/item/FallingBlockEntity;)V a
	onProjectileHit (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/phys/BlockHitResult;Lnet/minecraft/world/entity/projectile/Projectile;)V a
	randomTick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Lnet/minecraft/util/RandomSource;)V b
	spawnDripParticle (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V a
	spawnDripParticle (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/material/Fluid;)V a
	spawnFallingStalactite (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;)V a
	tick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Lnet/minecraft/util/RandomSource;)V a
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
net/minecraft/world/level/block/PointedDripstoneBlock$FluidInfo cvd$a
	fluid b
	pos a
	sourceState c
	fluid ()Lnet/minecraft/world/level/material/Fluid; b
	pos ()Lnet/minecraft/core/BlockPos; a
	sourceState ()Lnet/minecraft/world/level/block/state/BlockState; c
net/minecraft/world/level/block/PotatoBlock cve
	SHAPE_BY_AGE a
	getBaseSeedId ()Lnet/minecraft/world/level/ItemLike; c
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
net/minecraft/world/level/block/PowderSnowBlock cvf
	FALLING_COLLISION_SHAPE e
	HORIZONTAL_PARTICLE_MOMENTUM_FACTOR a
	IN_BLOCK_HORIZONTAL_SPEED_MULTIPLIER b
	IN_BLOCK_VERTICAL_SPEED_MULTIPLIER c
	MINIMUM_FALL_DISTANCE_FOR_BIG_SOUND g
	MINIMUM_FALL_DISTANCE_FOR_SOUND f
	NUM_BLOCKS_TO_FALL_INTO_BLOCK d
	canEntityWalkOnPowderSnow (Lnet/minecraft/world/entity/Entity;)Z a
	entityInside (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/Entity;)V a
	fallOn (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/Entity;F)V a
	getCollisionShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; c
	getOcclusionShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/phys/shapes/VoxelShape; f
	getPickupSound ()Ljava/util/Optional; am_
	getVisualShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; b
	isPathfindable (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/pathfinder/PathComputationType;)Z a
	pickupBlock (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/item/ItemStack; c
	skipRendering (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;)Z a
net/minecraft/world/level/block/PowderSnowCauldronBlock cvg
	handleEntityOnFireInside (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)V d
net/minecraft/world/level/block/PoweredBlock cvh
	getSignal (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;)I a
	isSignalSource (Lnet/minecraft/world/level/block/state/BlockState;)Z f_
net/minecraft/world/level/block/PoweredRailBlock cvi
	POWERED e
	SHAPE d
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	findPoweredRailSignal (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;ZI)Z a
	getShapeProperty ()Lnet/minecraft/world/level/block/state/properties/Property; b
	isSameRailWithPower (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;ZILnet/minecraft/world/level/block/state/properties/RailShape;)Z a
	mirror (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Mirror;)Lnet/minecraft/world/level/block/state/BlockState; a
	rotate (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Rotation;)Lnet/minecraft/world/level/block/state/BlockState; a
	updateState (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Block;)V a
net/minecraft/world/level/block/PressurePlateBlock cvj
	POWERED d
	sensitivity e
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getSignalForState (Lnet/minecraft/world/level/block/state/BlockState;)I g
	getSignalStrength (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)I b
	setSignalForState (Lnet/minecraft/world/level/block/state/BlockState;I)Lnet/minecraft/world/level/block/state/BlockState; a
net/minecraft/world/level/block/PressurePlateBlock$Sensitivity cvj$a
	$VALUES c
	EVERYTHING a
	MOBS b
	$values ()[Lnet/minecraft/world/level/block/PressurePlateBlock$Sensitivity; a
net/minecraft/world/level/block/PumpkinBlock cvk
	getAttachedStem ()Lnet/minecraft/world/level/block/AttachedStemBlock; b
	getStem ()Lnet/minecraft/world/level/block/StemBlock; a
	use (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;Lnet/minecraft/world/phys/BlockHitResult;)Lnet/minecraft/world/InteractionResult; a
net/minecraft/world/level/block/RailBlock cvl
	SHAPE d
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getShapeProperty ()Lnet/minecraft/world/level/block/state/properties/Property; b
	mirror (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Mirror;)Lnet/minecraft/world/level/block/state/BlockState; a
	rotate (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Rotation;)Lnet/minecraft/world/level/block/state/BlockState; a
	updateState (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Block;)V a
net/minecraft/world/level/block/RailState cvm
	block c
	connections f
	isStraight e
	level a
	pos b
	state d
	canConnectTo (Lnet/minecraft/world/level/block/RailState;)Z b
	connectTo (Lnet/minecraft/world/level/block/RailState;)V c
	connectsTo (Lnet/minecraft/world/level/block/RailState;)Z a
	countPotentialConnections ()I b
	getConnections ()Ljava/util/List; a
	getRail (Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/RailState; b
	getState ()Lnet/minecraft/world/level/block/state/BlockState; c
	hasConnection (Lnet/minecraft/core/BlockPos;)Z c
	hasNeighborRail (Lnet/minecraft/core/BlockPos;)Z d
	hasRail (Lnet/minecraft/core/BlockPos;)Z a
	place (ZZLnet/minecraft/world/level/block/state/properties/RailShape;)Lnet/minecraft/world/level/block/RailState; a
	removeSoftConnections ()V d
	updateConnections (Lnet/minecraft/world/level/block/state/properties/RailShape;)V a
net/minecraft/world/level/block/RedStoneOreBlock cvn
	LIT a
	animateTick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/util/RandomSource;)V a
	attack (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/player/Player;)V a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	interact (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)V d
	isRandomlyTicking (Lnet/minecraft/world/level/block/state/BlockState;)Z e_
	randomTick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Lnet/minecraft/util/RandomSource;)V b
	spawnAfterBreak (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/item/ItemStack;Z)V a
	spawnParticles (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)V a
	stepOn (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/entity/Entity;)V a
	use (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;Lnet/minecraft/world/phys/BlockHitResult;)Lnet/minecraft/world/InteractionResult; a
net/minecraft/world/level/block/RedStoneWireBlock cvo
	COLORS E
	E i
	EAST b
	H g
	N j
	NORTH a
	PARTICLE_DENSITY F
	POWER e
	PROPERTY_BY_DIRECTION f
	S k
	SHAPES_CACHE D
	SHAPES_FLOOR m
	SHAPES_UP n
	SHAPE_DOT l
	SOUTH c
	W h
	WEST d
	crossState G
	shouldSignal H
	animateTick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/util/RandomSource;)V a
	calculateShape (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/phys/shapes/VoxelShape; n
	calculateTargetStrength (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)I a
	canSurvive (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;)Z a
	canSurviveOn (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Z b
	checkCornerChangeAt (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)V b
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getColorForPower (I)I b
	getConnectingSide (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;)Lnet/minecraft/world/level/block/state/properties/RedstoneSide; a
	getConnectingSide (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;Z)Lnet/minecraft/world/level/block/state/properties/RedstoneSide; a
	getConnectionState (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
	getDirectSignal (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;)I b
	getMissingConnections (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; b
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	getSignal (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;)I a
	getStateForPlacement (Lnet/minecraft/world/item/context/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	getWireSignal (Lnet/minecraft/world/level/block/state/BlockState;)I q
	isCross (Lnet/minecraft/world/level/block/state/BlockState;)Z o
	isDot (Lnet/minecraft/world/level/block/state/BlockState;)Z p
	isSignalSource (Lnet/minecraft/world/level/block/state/BlockState;)Z f_
	mirror (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Mirror;)Lnet/minecraft/world/level/block/state/BlockState; a
	neighborChanged (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Block;Lnet/minecraft/core/BlockPos;Z)V a
	onPlace (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)V b
	onRemove (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)V a
	rotate (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Rotation;)Lnet/minecraft/world/level/block/state/BlockState; a
	shouldConnectTo (Lnet/minecraft/world/level/block/state/BlockState;)Z h
	shouldConnectTo (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;)Z a
	spawnParticlesAlongLine (Lnet/minecraft/world/level/Level;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/Vec3;Lnet/minecraft/core/Direction;Lnet/minecraft/core/Direction;FF)V a
	updateIndirectNeighbourShapes (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;II)V a
	updateNeighborsOfNeighboringWires (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)V c
	updatePowerStrength (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V a
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
	updatesOnShapeChange (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/state/BlockState;)V a
	use (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;Lnet/minecraft/world/phys/BlockHitResult;)Lnet/minecraft/world/InteractionResult; a
net/minecraft/world/level/block/RedstoneLampBlock cvp
	LIT a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getStateForPlacement (Lnet/minecraft/world/item/context/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	neighborChanged (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Block;Lnet/minecraft/core/BlockPos;Z)V a
	tick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Lnet/minecraft/util/RandomSource;)V a
net/minecraft/world/level/block/RedstoneTorchBlock cvq
	LIT a
	MAX_RECENT_TOGGLES c
	RECENT_TOGGLES e
	RECENT_TOGGLE_TIMER b
	RESTART_DELAY d
	TOGGLE_DELAY f
	animateTick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/util/RandomSource;)V a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getDirectSignal (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;)I b
	getSignal (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;)I a
	hasNeighborSignal (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Z a
	isSignalSource (Lnet/minecraft/world/level/block/state/BlockState;)Z f_
	isToggledTooFrequently (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Z)Z a
	neighborChanged (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Block;Lnet/minecraft/core/BlockPos;Z)V a
	onPlace (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)V b
	onRemove (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)V a
	tick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Lnet/minecraft/util/RandomSource;)V a
net/minecraft/world/level/block/RedstoneTorchBlock$Toggle cvq$a
	pos a
	when b
net/minecraft/world/level/block/RedstoneWallTorchBlock cvr
	FACING e
	LIT f
	animateTick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/util/RandomSource;)V a
	canSurvive (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;)Z a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getDescriptionId ()Ljava/lang/String; f
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	getSignal (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;)I a
	getStateForPlacement (Lnet/minecraft/world/item/context/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	hasNeighborSignal (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Z a
	mirror (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Mirror;)Lnet/minecraft/world/level/block/state/BlockState; a
	rotate (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Rotation;)Lnet/minecraft/world/level/block/state/BlockState; a
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
net/minecraft/world/level/block/RenderShape cvs
	$VALUES d
	ENTITYBLOCK_ANIMATED b
	INVISIBLE a
	MODEL c
	$values ()[Lnet/minecraft/world/level/block/RenderShape; a
net/minecraft/world/level/block/RepeaterBlock cvt
	DELAY d
	LOCKED a
	animateTick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/util/RandomSource;)V a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getDelay (Lnet/minecraft/world/level/block/state/BlockState;)I g
	getStateForPlacement (Lnet/minecraft/world/item/context/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	isLocked (Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Z a
	sideInputDiodesOnly ()Z a
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
	use (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;Lnet/minecraft/world/phys/BlockHitResult;)Lnet/minecraft/world/InteractionResult; a
net/minecraft/world/level/block/RespawnAnchorBlock cvu
	CHARGE c
	MAX_CHARGES b
	MIN_CHARGES a
	RESPAWN_HORIZONTAL_OFFSETS d
	RESPAWN_OFFSETS e
	animateTick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/util/RandomSource;)V a
	canBeCharged (Lnet/minecraft/world/level/block/state/BlockState;)Z h
	canSetSpawn (Lnet/minecraft/world/level/Level;)Z a
	charge (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	explode (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)V d
	findStandUpPosition (Lnet/minecraft/world/entity/EntityType;Lnet/minecraft/world/level/CollisionGetter;Lnet/minecraft/core/BlockPos;)Ljava/util/Optional; a
	findStandUpPosition (Lnet/minecraft/world/entity/EntityType;Lnet/minecraft/world/level/CollisionGetter;Lnet/minecraft/core/BlockPos;Z)Ljava/util/Optional; a
	getAnalogOutputSignal (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)I a
	getScaledChargeLevel (Lnet/minecraft/world/level/block/state/BlockState;I)I a
	hasAnalogOutputSignal (Lnet/minecraft/world/level/block/state/BlockState;)Z d_
	isPathfindable (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/pathfinder/PathComputationType;)Z a
	isRespawnFuel (Lnet/minecraft/world/item/ItemStack;)Z a
	isWaterThatWouldFlow (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/Level;)Z a
	use (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;Lnet/minecraft/world/phys/BlockHitResult;)Lnet/minecraft/world/InteractionResult; a
net/minecraft/world/level/block/RodBlock cvv
	AABB_MAX f
	AABB_MIN e
	X_AXIS_AABB i
	Y_AXIS_AABB g
	Z_AXIS_AABB h
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	isPathfindable (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/pathfinder/PathComputationType;)Z a
	mirror (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Mirror;)Lnet/minecraft/world/level/block/state/BlockState; a
	rotate (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Rotation;)Lnet/minecraft/world/level/block/state/BlockState; a
net/minecraft/world/level/block/RootedDirtBlock cvw
	isBonemealSuccess (Lnet/minecraft/world/level/Level;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Z a
	isValidBonemealTarget (Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)Z a
	performBonemeal (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V a
net/minecraft/world/level/block/RootsBlock cvx
	AABB_OFFSET a
	SHAPE b
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	mayPlaceOn (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Z d
net/minecraft/world/level/block/RotatedPillarBlock cvy
	AXIS g
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getStateForPlacement (Lnet/minecraft/world/item/context/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	rotate (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Rotation;)Lnet/minecraft/world/level/block/state/BlockState; a
	rotatePillar (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Rotation;)Lnet/minecraft/world/level/block/state/BlockState; b
net/minecraft/world/level/block/Rotation cvz
	$VALUES h
	CLOCKWISE_180 c
	CLOCKWISE_90 b
	CODEC e
	COUNTERCLOCKWISE_90 d
	NONE a
	id f
	rotation g
	$values ()[Lnet/minecraft/world/level/block/Rotation; b
	getRandom (Lnet/minecraft/util/RandomSource;)Lnet/minecraft/world/level/block/Rotation; a
	getRotated (Lnet/minecraft/world/level/block/Rotation;)Lnet/minecraft/world/level/block/Rotation; a
	getSerializedName ()Ljava/lang/String; c
	getShuffled (Lnet/minecraft/util/RandomSource;)Ljava/util/List; b
	rotate (II)I a
	rotate (Lnet/minecraft/core/Direction;)Lnet/minecraft/core/Direction; a
	rotation ()Lcom/mojang/math/OctahedralGroup; a
net/minecraft/world/level/block/SandBlock cwa
	dustColor a
	getDustColor (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)I d
net/minecraft/world/level/block/SaplingBlock cwb
	AABB_OFFSET e
	SHAPE f
	STAGE d
	treeGrower a
	advanceTree (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/util/RandomSource;)V a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	isBonemealSuccess (Lnet/minecraft/world/level/Level;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Z a
	isValidBonemealTarget (Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)Z a
	performBonemeal (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V a
	randomTick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Lnet/minecraft/util/RandomSource;)V b
net/minecraft/world/level/block/ScaffoldingBlock cwc
	BELOW_BLOCK i
	BOTTOM d
	DISTANCE b
	STABILITY_MAX_DISTANCE a
	STABLE_SHAPE f
	TICK_DELAY e
	UNSTABLE_SHAPE g
	UNSTABLE_SHAPE_BOTTOM h
	WATERLOGGED c
	canBeReplaced (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/item/context/BlockPlaceContext;)Z a
	canSurvive (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;)Z a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getCollisionShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; c
	getDistance (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)I a
	getFluidState (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/material/FluidState; c_
	getInteractionShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	getStateForPlacement (Lnet/minecraft/world/item/context/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	isBottom (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;I)Z a
	onPlace (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)V b
	tick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Lnet/minecraft/util/RandomSource;)V a
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
net/minecraft/world/level/block/SculkBehaviour cwd
	DEFAULT t_
	attemptSpreadVein (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Ljava/util/Collection;Z)Z a
	attemptUseCharge (Lnet/minecraft/world/level/block/SculkSpreader$ChargeCursor;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/block/SculkSpreader;Z)I a
	canChangeBlockStateOnSpread ()Z c
	depositCharge (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/util/RandomSource;)Z a
	getSculkSpreadDelay ()B a
	onDischarged (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/BlockPos;Lnet/minecraft/util/RandomSource;)V a
	updateDecayDelay (I)I i_
net/minecraft/world/level/block/SculkBlock cwe
	attemptUseCharge (Lnet/minecraft/world/level/block/SculkSpreader$ChargeCursor;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/block/SculkSpreader;Z)I a
	canChangeBlockStateOnSpread ()Z c
	canPlaceGrowth (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;)Z a
	getDecayPenalty (Lnet/minecraft/world/level/block/SculkSpreader;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;I)I a
	getRandomGrowthState (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/util/RandomSource;Z)Lnet/minecraft/world/level/block/state/BlockState; a
net/minecraft/world/level/block/SculkCatalystBlock cwf
	PULSE a
	xpRange b
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getRenderShape (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/RenderShape; b_
	getTicker (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/entity/BlockEntityType;)Lnet/minecraft/world/level/block/entity/BlockEntityTicker; a
	newBlockEntity (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/entity/BlockEntity; a
	spawnAfterBreak (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/item/ItemStack;Z)V a
	tick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Lnet/minecraft/util/RandomSource;)V a
net/minecraft/world/level/block/SculkSensorBlock cwg
	ACTIVE_TICKS b
	COOLDOWN_TICKS c
	PHASE d
	POWER e
	RESONANCE_PITCH_BEND a
	SHAPE g
	WATERLOGGED f
	activate (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;II)V a
	animateTick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/util/RandomSource;)V a
	canActivate (Lnet/minecraft/world/level/block/state/BlockState;)Z n
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	deactivate (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V a
	getActiveTicks ()I b
	getAnalogOutputSignal (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)I a
	getDirectSignal (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;)I b
	getFluidState (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/material/FluidState; c_
	getPhase (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/state/properties/SculkSensorPhase; h
	getRenderShape (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/RenderShape; b_
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	getSignal (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;)I a
	getStateForPlacement (Lnet/minecraft/world/item/context/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	getTicker (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/entity/BlockEntityType;)Lnet/minecraft/world/level/block/entity/BlockEntityTicker; a
	hasAnalogOutputSignal (Lnet/minecraft/world/level/block/state/BlockState;)Z d_
	isPathfindable (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/pathfinder/PathComputationType;)Z a
	isSignalSource (Lnet/minecraft/world/level/block/state/BlockState;)Z f_
	newBlockEntity (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/entity/BlockEntity; a
	onPlace (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)V b
	onRemove (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)V a
	spawnAfterBreak (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/item/ItemStack;Z)V a
	stepOn (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/entity/Entity;)V a
	tick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Lnet/minecraft/util/RandomSource;)V a
	tryResonateVibration (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;I)V a
	updateNeighbours (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V b
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
	useShapeForLightOcclusion (Lnet/minecraft/world/level/block/state/BlockState;)Z g_
net/minecraft/world/level/block/SculkShriekerBlock cwh
	CAN_SUMMON c
	COLLIDER d
	SHRIEKING a
	TOP_Y e
	WATERLOGGED b
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getCollisionShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; c
	getFluidState (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/material/FluidState; c_
	getOcclusionShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/phys/shapes/VoxelShape; f
	getRenderShape (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/RenderShape; b_
	getStateForPlacement (Lnet/minecraft/world/item/context/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	getTicker (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/entity/BlockEntityType;)Lnet/minecraft/world/level/block/entity/BlockEntityTicker; a
	newBlockEntity (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/entity/BlockEntity; a
	onRemove (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)V a
	spawnAfterBreak (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/item/ItemStack;Z)V a
	stepOn (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/entity/Entity;)V a
	tick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Lnet/minecraft/util/RandomSource;)V a
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
	useShapeForLightOcclusion (Lnet/minecraft/world/level/block/state/BlockState;)Z g_
net/minecraft/world/level/block/SculkSpreader cwi
	LOGGER m
	MAX_CHARGE b
	MAX_CURSORS e
	MAX_DECAY_FACTOR c
	MAX_GROWTH_RATE_RADIUS a
	SHRIEKER_PLACEMENT_RATE d
	additionalDecayRate k
	chargeDecayRate j
	cursors l
	growthSpawnCost h
	isWorldGeneration f
	noGrowthRadius i
	replaceableBlocks g
	addCursor (Lnet/minecraft/world/level/block/SculkSpreader$ChargeCursor;)V a
	addCursors (Lnet/minecraft/core/BlockPos;I)V a
	additionalDecayRate ()I g
	chargeDecayRate ()I f
	clear ()V j
	createLevelSpreader ()Lnet/minecraft/world/level/block/SculkSpreader; a
	createWorldGenSpreader ()Lnet/minecraft/world/level/block/SculkSpreader; b
	getCursors ()Ljava/util/List; i
	growthSpawnCost ()I d
	isWorldGeneration ()Z h
	load (Lnet/minecraft/nbt/CompoundTag;)V a
	noGrowthRadius ()I e
	replaceableBlocks ()Lnet/minecraft/tags/TagKey; c
	save (Lnet/minecraft/nbt/CompoundTag;)V b
	updateCursors (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/util/RandomSource;Z)V a
net/minecraft/world/level/block/SculkSpreader$ChargeCursor cwi$a
	CODEC b
	DIRECTION_SET i
	MAX_CURSOR_DECAY_DELAY a
	NON_CORNER_NEIGHBOURS c
	charge e
	decayDelay g
	facings h
	pos d
	updateDelay f
	getBlockBehaviour (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/SculkBehaviour; a
	getCharge ()I b
	getDecayDelay ()I c
	getFacingData ()Ljava/util/Set; d
	getPos ()Lnet/minecraft/core/BlockPos; a
	getRandomizedNonCornerNeighbourOffsets (Lnet/minecraft/util/RandomSource;)Ljava/util/List; a
	getValidMovementPos (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/util/RandomSource;)Lnet/minecraft/core/BlockPos; a
	isMovementUnobstructed (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Z a
	isUnobstructed (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;)Z a
	mergeWith (Lnet/minecraft/world/level/block/SculkSpreader$ChargeCursor;)V a
	shouldUpdate (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Z)Z a
	update (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/block/SculkSpreader;Z)V a
net/minecraft/world/level/block/SculkVeinBlock cwj
	WATERLOGGED b
	sameSpaceSpreader d
	veinSpreader c
	attemptPlaceSculk (Lnet/minecraft/world/level/block/SculkSpreader;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/util/RandomSource;)Z a
	attemptUseCharge (Lnet/minecraft/world/level/block/SculkSpreader$ChargeCursor;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/block/SculkSpreader;Z)I a
	canBeReplaced (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/item/context/BlockPlaceContext;)Z a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getFluidState (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/material/FluidState; c_
	getSameSpaceSpreader ()Lnet/minecraft/world/level/block/MultifaceSpreader; g
	getSpreader ()Lnet/minecraft/world/level/block/MultifaceSpreader; b
	hasSubstrateAccess (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/BlockPos;)Z a
	onDischarged (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/BlockPos;Lnet/minecraft/util/RandomSource;)V a
	regrow (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Ljava/util/Collection;)Z a
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
net/minecraft/world/level/block/SculkVeinBlock$SculkVeinSpreaderConfig cwj$a
	spreadTypes c
	getSpreadTypes ()[Lnet/minecraft/world/level/block/MultifaceSpreader$SpreadType; a
	isOtherBlockValidAsSource (Lnet/minecraft/world/level/block/state/BlockState;)Z a
	stateCanBeReplaced (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;)Z a
net/minecraft/world/level/block/SeaPickleBlock cwk
	FOUR_AABB g
	MAX_PICKLES a
	ONE_AABB d
	PICKLES b
	THREE_AABB f
	TWO_AABB e
	WATERLOGGED c
	canBeReplaced (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/item/context/BlockPlaceContext;)Z a
	canSurvive (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;)Z a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getFluidState (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/material/FluidState; c_
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	getStateForPlacement (Lnet/minecraft/world/item/context/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	isBonemealSuccess (Lnet/minecraft/world/level/Level;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Z a
	isDead (Lnet/minecraft/world/level/block/state/BlockState;)Z h
	isPathfindable (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/pathfinder/PathComputationType;)Z a
	isValidBonemealTarget (Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)Z a
	mayPlaceOn (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Z d
	performBonemeal (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V a
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
net/minecraft/world/level/block/SeagrassBlock cwl
	AABB_OFFSET a
	SHAPE b
	canPlaceLiquid (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/material/Fluid;)Z a
	getFluidState (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/material/FluidState; c_
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	getStateForPlacement (Lnet/minecraft/world/item/context/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	isBonemealSuccess (Lnet/minecraft/world/level/Level;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Z a
	isValidBonemealTarget (Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)Z a
	mayPlaceOn (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Z d
	performBonemeal (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V a
	placeLiquid (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/material/FluidState;)Z a
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
net/minecraft/world/level/block/ShulkerBoxBlock cwm
	CONTENTS b
	DOWN_OPEN_AABB e
	EAST_OPEN_AABB g
	FACING a
	NORTH_OPEN_AABB h
	OPEN_AABB_SIZE c
	OPEN_SHAPE_BY_DIRECTION j
	SOUTH_OPEN_AABB i
	UP_OPEN_AABB d
	WES_OPEN_AABB f
	color k
	appendHoverText (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/BlockGetter;Ljava/util/List;Lnet/minecraft/world/item/TooltipFlag;)V a
	canOpen (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/entity/ShulkerBoxBlockEntity;)Z a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getAnalogOutputSignal (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)I a
	getBlockByColor (Lnet/minecraft/world/item/DyeColor;)Lnet/minecraft/world/level/block/Block; a
	getBlockSupportShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/phys/shapes/VoxelShape; b_
	getCloneItemStack (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/item/ItemStack; a
	getColor ()Lnet/minecraft/world/item/DyeColor; a
	getColorFromBlock (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/world/item/DyeColor; a
	getColorFromItem (Lnet/minecraft/world/item/Item;)Lnet/minecraft/world/item/DyeColor; b
	getColoredItemStack (Lnet/minecraft/world/item/DyeColor;)Lnet/minecraft/world/item/ItemStack; b
	getDrops (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/storage/loot/LootParams$Builder;)Ljava/util/List; a
	getRenderShape (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/RenderShape; b_
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	getStateForPlacement (Lnet/minecraft/world/item/context/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	getTicker (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/entity/BlockEntityType;)Lnet/minecraft/world/level/block/entity/BlockEntityTicker; a
	hasAnalogOutputSignal (Lnet/minecraft/world/level/block/state/BlockState;)Z d_
	mirror (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Mirror;)Lnet/minecraft/world/level/block/state/BlockState; a
	newBlockEntity (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/entity/BlockEntity; a
	onRemove (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)V a
	playerWillDestroy (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/entity/player/Player;)V a
	rotate (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Rotation;)Lnet/minecraft/world/level/block/state/BlockState; a
	setPlacedBy (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/item/ItemStack;)V a
	use (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;Lnet/minecraft/world/phys/BlockHitResult;)Lnet/minecraft/world/InteractionResult; a
net/minecraft/world/level/block/SignBlock cwn
	AABB_OFFSET f
	SHAPE g
	WATERLOGGED e
	type a
	getFluidState (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/material/FluidState; c_
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	getSignHitboxCenterPosition (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/phys/Vec3; h
	getTicker (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/entity/BlockEntityType;)Lnet/minecraft/world/level/block/entity/BlockEntityTicker; a
	getWoodType (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/world/level/block/state/properties/WoodType; a
	getYRotationDegrees (Lnet/minecraft/world/level/block/state/BlockState;)F g
	hasEditableText (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/level/block/entity/SignBlockEntity;Z)Z b
	isPossibleToRespawnInThis (Lnet/minecraft/world/level/block/state/BlockState;)Z a
	newBlockEntity (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/entity/BlockEntity; a
	openTextEdit (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/level/block/entity/SignBlockEntity;Z)V a
	otherPlayerIsEditingSign (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/level/block/entity/SignBlockEntity;)Z a
	type ()Lnet/minecraft/world/level/block/state/properties/WoodType; c
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
	use (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;Lnet/minecraft/world/phys/BlockHitResult;)Lnet/minecraft/world/InteractionResult; a
net/minecraft/world/level/block/SimpleWaterloggedBlock cwo
	canPlaceLiquid (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/material/Fluid;)Z a
	getPickupSound ()Ljava/util/Optional; am_
	pickupBlock (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/item/ItemStack; c
	placeLiquid (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/material/FluidState;)Z a
net/minecraft/world/level/block/SkullBlock cwp
	MAX a
	PIGLIN_SHAPE d
	ROTATION b
	ROTATIONS e
	SHAPE c
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getOcclusionShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/phys/shapes/VoxelShape; f
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	getStateForPlacement (Lnet/minecraft/world/item/context/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	mirror (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Mirror;)Lnet/minecraft/world/level/block/state/BlockState; a
	rotate (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Rotation;)Lnet/minecraft/world/level/block/state/BlockState; a
net/minecraft/world/level/block/SkullBlock$Type cwp$a
net/minecraft/world/level/block/SkullBlock$Types cwp$b
	$VALUES h
	CREEPER e
	DRAGON g
	PIGLIN f
	PLAYER c
	SKELETON a
	WITHER_SKELETON b
	ZOMBIE d
	$values ()[Lnet/minecraft/world/level/block/SkullBlock$Types; a
net/minecraft/world/level/block/SlabBlock cwq
	BOTTOM_AABB c
	TOP_AABB d
	TYPE a
	WATERLOGGED b
	canBeReplaced (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/item/context/BlockPlaceContext;)Z a
	canPlaceLiquid (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/material/Fluid;)Z a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getFluidState (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/material/FluidState; c_
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	getStateForPlacement (Lnet/minecraft/world/item/context/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	isPathfindable (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/pathfinder/PathComputationType;)Z a
	placeLiquid (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/material/FluidState;)Z a
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
	useShapeForLightOcclusion (Lnet/minecraft/world/level/block/state/BlockState;)Z g_
net/minecraft/world/level/block/SlimeBlock cwr
	bounceUp (Lnet/minecraft/world/entity/Entity;)V a
	fallOn (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/Entity;F)V a
	stepOn (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/entity/Entity;)V a
	updateEntityAfterFallOn (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/world/entity/Entity;)V a
net/minecraft/world/level/block/SmallDripleafBlock cws
	AABB_OFFSET c
	FACING b
	SHAPE d
	WATERLOGGED e
	canSurvive (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;)Z a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getFluidState (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/material/FluidState; c_
	getMaxVerticalOffset ()F an_
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	getStateForPlacement (Lnet/minecraft/world/item/context/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	isBonemealSuccess (Lnet/minecraft/world/level/Level;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Z a
	isValidBonemealTarget (Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)Z a
	mayPlaceOn (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Z d
	mirror (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Mirror;)Lnet/minecraft/world/level/block/state/BlockState; a
	performBonemeal (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V a
	rotate (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Rotation;)Lnet/minecraft/world/level/block/state/BlockState; a
	setPlacedBy (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/item/ItemStack;)V a
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
net/minecraft/world/level/block/SmithingTableBlock cwt
	CONTAINER_TITLE a
	getMenuProvider (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/MenuProvider; b
	use (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;Lnet/minecraft/world/phys/BlockHitResult;)Lnet/minecraft/world/InteractionResult; a
net/minecraft/world/level/block/SmokerBlock cwu
	animateTick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/util/RandomSource;)V a
	getTicker (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/entity/BlockEntityType;)Lnet/minecraft/world/level/block/entity/BlockEntityTicker; a
	newBlockEntity (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/entity/BlockEntity; a
	openContainer (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/player/Player;)V a
net/minecraft/world/level/block/SnifferEggBlock cwv
	BOOSTED_HATCH_TIME_TICKS d
	HATCH b
	MAX_HATCH_LEVEL a
	RANDOM_HATCH_OFFSET_TICKS e
	REGULAR_HATCH_TIME_TICKS c
	SHAPE f
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getHatchLevel (Lnet/minecraft/world/level/block/state/BlockState;)I h
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	hatchBoost (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Z a
	isPathfindable (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/pathfinder/PathComputationType;)Z a
	isReadyToHatch (Lnet/minecraft/world/level/block/state/BlockState;)Z n
	onPlace (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)V b
	tick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Lnet/minecraft/util/RandomSource;)V a
net/minecraft/world/level/block/SnowLayerBlock cww
	HEIGHT_IMPASSABLE d
	LAYERS b
	MAX_HEIGHT a
	SHAPE_BY_LAYER c
	canBeReplaced (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/item/context/BlockPlaceContext;)Z a
	canSurvive (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;)Z a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getBlockSupportShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/phys/shapes/VoxelShape; b_
	getCollisionShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; c
	getShadeBrightness (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)F b
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	getStateForPlacement (Lnet/minecraft/world/item/context/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	getVisualShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; b
	isPathfindable (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/pathfinder/PathComputationType;)Z a
	randomTick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Lnet/minecraft/util/RandomSource;)V b
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
	useShapeForLightOcclusion (Lnet/minecraft/world/level/block/state/BlockState;)Z g_
net/minecraft/world/level/block/SnowyDirtBlock cwx
	SNOWY a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getStateForPlacement (Lnet/minecraft/world/item/context/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	isSnowySetting (Lnet/minecraft/world/level/block/state/BlockState;)Z h
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
net/minecraft/world/level/block/SoulFireBlock cwy
	canBurn (Lnet/minecraft/world/level/block/state/BlockState;)Z f
	canSurvive (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;)Z a
	canSurviveOnBlock (Lnet/minecraft/world/level/block/state/BlockState;)Z h
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
net/minecraft/world/level/block/SoulSandBlock cwz
	BUBBLE_COLUMN_CHECK_DELAY b
	SHAPE a
	getBlockSupportShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/phys/shapes/VoxelShape; b_
	getCollisionShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; c
	getShadeBrightness (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)F b
	getVisualShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; b
	isPathfindable (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/pathfinder/PathComputationType;)Z a
	onPlace (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)V b
	tick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Lnet/minecraft/util/RandomSource;)V a
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
net/minecraft/world/level/block/SoundType cxa
	AMETHYST Y
	AMETHYST_CLUSTER Z
	ANCIENT_DEBRIS S
	ANVIL n
	AZALEA ak
	AZALEA_LEAVES at
	BAMBOO s
	BAMBOO_SAPLING t
	BAMBOO_WOOD aO
	BAMBOO_WOOD_HANGING_SIGN aN
	BASALT K
	BIG_DRIPLEAF ap
	BONE_BLOCK Q
	CALCITE ae
	CANDLE X
	CAVE_VINES ai
	CHAIN U
	CHERRY_LEAVES aS
	CHERRY_SAPLING aR
	CHERRY_WOOD aQ
	CHERRY_WOOD_HANGING_SIGN aT
	CHISELED_BOOKSHELF aU
	COPPER ah
	CORAL_BLOCK r
	CROP w
	DECORATED_POT aX
	DECORATED_POT_CRACKED aY
	DEEPSLATE aA
	DEEPSLATE_BRICKS aB
	DEEPSLATE_TILES aC
	DRIPSTONE_BLOCK af
	EMPTY a
	FLOWERING_AZALEA al
	FROGLIGHT aE
	FROGSPAWN aF
	FUNGUS D
	GILDED_BLACKSTONE W
	GLASS h
	GLOW_LICHEN az
	GRASS d
	GRAVEL c
	HANGING_ROOTS as
	HANGING_SIGN aL
	HARD_CROP x
	HONEY_BLOCK p
	LADDER m
	LANTERN A
	LARGE_AMETHYST_BUD ac
	LILY_PAD e
	LODESTONE T
	MANGROVE_ROOTS aG
	MEDIUM_AMETHYST_BUD ab
	METAL g
	MOSS ao
	MOSS_CARPET am
	MUD aI
	MUDDY_MANGROVE_ROOTS aH
	MUD_BRICKS aJ
	NETHERITE_BLOCK R
	NETHERRACK M
	NETHER_BRICKS N
	NETHER_GOLD_ORE V
	NETHER_ORE P
	NETHER_SPROUTS O
	NETHER_WART z
	NETHER_WOOD aP
	NETHER_WOOD_HANGING_SIGN aM
	NYLIUM C
	PACKED_MUD aK
	PINK_PETALS an
	POINTED_DRIPSTONE ag
	POLISHED_DEEPSLATE aD
	POWDER_SNOW l
	ROOTED_DIRT ar
	ROOTS E
	SAND j
	SCAFFOLDING u
	SCULK aw
	SCULK_CATALYST av
	SCULK_SENSOR au
	SCULK_SHRIEKER ay
	SCULK_VEIN ax
	SHROOMLIGHT F
	SLIME_BLOCK o
	SMALL_AMETHYST_BUD aa
	SMALL_DRIPLEAF aq
	SNOW k
	SOUL_SAND I
	SOUL_SOIL J
	SPORE_BLOSSOM aj
	STEM B
	STONE f
	SUSPICIOUS_GRAVEL aW
	SUSPICIOUS_SAND aV
	SWEET_BERRY_BUSH v
	TUFF ad
	TWISTING_VINES H
	VINE y
	WART_BLOCK L
	WEEPING_VINES G
	WET_GRASS q
	WOOD b
	WOOL i
	breakSound bb
	fallSound bf
	hitSound be
	pitch ba
	placeSound bd
	stepSound bc
	volume aZ
	getBreakSound ()Lnet/minecraft/sounds/SoundEvent; c
	getFallSound ()Lnet/minecraft/sounds/SoundEvent; g
	getHitSound ()Lnet/minecraft/sounds/SoundEvent; f
	getPitch ()F b
	getPlaceSound ()Lnet/minecraft/sounds/SoundEvent; e
	getStepSound ()Lnet/minecraft/sounds/SoundEvent; d
	getVolume ()F a
net/minecraft/world/level/block/SpawnerBlock cxb
	appendHoverText (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/BlockGetter;Ljava/util/List;Lnet/minecraft/world/item/TooltipFlag;)V a
	getRenderShape (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/RenderShape; b_
	getSpawnEntityDisplayName (Lnet/minecraft/world/item/ItemStack;)Ljava/util/Optional; a
	getTicker (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/entity/BlockEntityType;)Lnet/minecraft/world/level/block/entity/BlockEntityTicker; a
	newBlockEntity (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/entity/BlockEntity; a
	spawnAfterBreak (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/item/ItemStack;Z)V a
net/minecraft/world/level/block/SpongeBlock cxc
	ALL_DIRECTIONS c
	MAX_COUNT b
	MAX_DEPTH a
	neighborChanged (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Block;Lnet/minecraft/core/BlockPos;Z)V a
	onPlace (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)V b
	removeWaterBreadthFirstSearch (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)Z b
	tryAbsorbWater (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)V a
net/minecraft/world/level/block/SporeBlossomBlock cxd
	ADD_PARTICLE_ATTEMPTS b
	PARTICLE_XZ_RADIUS c
	PARTICLE_Y_MAX d
	SHAPE a
	animateTick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/util/RandomSource;)V a
	canSurvive (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;)Z a
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
net/minecraft/world/level/block/SpreadingSnowyDirtBlock cxe
	canBeGrass (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;)Z b
	canPropagate (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;)Z c
	randomTick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Lnet/minecraft/util/RandomSource;)V b
net/minecraft/world/level/block/StainedGlassBlock cxf
	color a
	getColor ()Lnet/minecraft/world/item/DyeColor; a
net/minecraft/world/level/block/StainedGlassPaneBlock cxg
	color i
	getColor ()Lnet/minecraft/world/item/DyeColor; a
net/minecraft/world/level/block/StairBlock cxh
	BOTTOM_AABB f
	BOTTOM_SHAPES E
	FACING a
	HALF b
	OCTET_NNN g
	OCTET_NNP h
	OCTET_NPN i
	OCTET_NPP j
	OCTET_PNN k
	OCTET_PNP l
	OCTET_PPN m
	OCTET_PPP n
	SHAPE c
	SHAPE_BY_STATE F
	TOP_AABB e
	TOP_SHAPES D
	WATERLOGGED d
	base G
	baseState H
	animateTick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/util/RandomSource;)V a
	attack (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/player/Player;)V a
	canTakeShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;)Z c
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	destroy (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V a
	getExplosionResistance ()F d
	getFluidState (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/material/FluidState; c_
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	getShapeIndex (Lnet/minecraft/world/level/block/state/BlockState;)I n
	getStairsShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/properties/StairsShape; i
	getStateForPlacement (Lnet/minecraft/world/item/context/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	isPathfindable (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/pathfinder/PathComputationType;)Z a
	isRandomlyTicking (Lnet/minecraft/world/level/block/state/BlockState;)Z e_
	isStairs (Lnet/minecraft/world/level/block/state/BlockState;)Z h
	makeShapes (Lnet/minecraft/world/phys/shapes/VoxelShape;Lnet/minecraft/world/phys/shapes/VoxelShape;Lnet/minecraft/world/phys/shapes/VoxelShape;Lnet/minecraft/world/phys/shapes/VoxelShape;Lnet/minecraft/world/phys/shapes/VoxelShape;)[Lnet/minecraft/world/phys/shapes/VoxelShape; a
	makeStairShape (ILnet/minecraft/world/phys/shapes/VoxelShape;Lnet/minecraft/world/phys/shapes/VoxelShape;Lnet/minecraft/world/phys/shapes/VoxelShape;Lnet/minecraft/world/phys/shapes/VoxelShape;Lnet/minecraft/world/phys/shapes/VoxelShape;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	mirror (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Mirror;)Lnet/minecraft/world/level/block/state/BlockState; a
	onPlace (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)V b
	onRemove (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)V a
	randomTick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Lnet/minecraft/util/RandomSource;)V b
	rotate (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Rotation;)Lnet/minecraft/world/level/block/state/BlockState; a
	stepOn (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/entity/Entity;)V a
	tick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Lnet/minecraft/util/RandomSource;)V a
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
	use (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;Lnet/minecraft/world/phys/BlockHitResult;)Lnet/minecraft/world/InteractionResult; a
	useShapeForLightOcclusion (Lnet/minecraft/world/level/block/state/BlockState;)Z g_
	wasExploded (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/Explosion;)V a
net/minecraft/world/level/block/StandingSignBlock cxi
	ROTATION a
	canSurvive (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;)Z a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getStateForPlacement (Lnet/minecraft/world/item/context/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	getYRotationDegrees (Lnet/minecraft/world/level/block/state/BlockState;)F g
	mirror (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Mirror;)Lnet/minecraft/world/level/block/state/BlockState; a
	rotate (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Rotation;)Lnet/minecraft/world/level/block/state/BlockState; a
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
net/minecraft/world/level/block/StemBlock cxj
	AABB_OFFSET c
	AGE b
	MAX_AGE a
	SHAPE_BY_AGE d
	fruit e
	seedSupplier f
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getCloneItemStack (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/item/ItemStack; a
	getFruit ()Lnet/minecraft/world/level/block/StemGrownBlock; a
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	isBonemealSuccess (Lnet/minecraft/world/level/Level;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Z a
	isValidBonemealTarget (Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)Z a
	mayPlaceOn (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Z d
	performBonemeal (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V a
	randomTick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Lnet/minecraft/util/RandomSource;)V b
net/minecraft/world/level/block/StemGrownBlock cxk
	getAttachedStem ()Lnet/minecraft/world/level/block/AttachedStemBlock; b
	getStem ()Lnet/minecraft/world/level/block/StemBlock; a
net/minecraft/world/level/block/StonecutterBlock cxl
	CONTAINER_TITLE c
	FACING a
	SHAPE b
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getMenuProvider (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/MenuProvider; b
	getRenderShape (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/RenderShape; b_
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	getStateForPlacement (Lnet/minecraft/world/item/context/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	isPathfindable (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/pathfinder/PathComputationType;)Z a
	mirror (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Mirror;)Lnet/minecraft/world/level/block/state/BlockState; a
	rotate (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Rotation;)Lnet/minecraft/world/level/block/state/BlockState; a
	use (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;Lnet/minecraft/world/phys/BlockHitResult;)Lnet/minecraft/world/InteractionResult; a
	useShapeForLightOcclusion (Lnet/minecraft/world/level/block/state/BlockState;)Z g_
net/minecraft/world/level/block/StructureBlock cxm
	MODE a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getRenderShape (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/RenderShape; b_
	neighborChanged (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Block;Lnet/minecraft/core/BlockPos;Z)V a
	newBlockEntity (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/entity/BlockEntity; a
	setPlacedBy (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/item/ItemStack;)V a
	trigger (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/level/block/entity/StructureBlockEntity;)V a
	use (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;Lnet/minecraft/world/phys/BlockHitResult;)Lnet/minecraft/world/InteractionResult; a
net/minecraft/world/level/block/StructureVoidBlock cxn
	SHAPE b
	SIZE a
	getRenderShape (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/RenderShape; b_
	getShadeBrightness (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)F b
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
net/minecraft/world/level/block/SugarCaneBlock cxo
	AABB_OFFSET b
	AGE a
	SHAPE c
	canSurvive (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;)Z a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	randomTick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Lnet/minecraft/util/RandomSource;)V b
	tick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Lnet/minecraft/util/RandomSource;)V a
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
net/minecraft/world/level/block/SupportType cxp
	$VALUES d
	CENTER b
	FULL a
	RIGID c
	$values ()[Lnet/minecraft/world/level/block/SupportType; a
	isSupporting (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;)Z a
net/minecraft/world/level/block/SuspiciousEffectHolder cxq
	getAllEffectHolders ()Ljava/util/List; c
	getEffectDuration ()I b
	getSuspiciousEffect ()Lnet/minecraft/world/effect/MobEffect; a
	tryGet (Lnet/minecraft/world/level/ItemLike;)Lnet/minecraft/world/level/block/SuspiciousEffectHolder; a
net/minecraft/world/level/block/SweetBerryBushBlock cxr
	AGE b
	HURT_SPEED_THRESHOLD c
	MAX_AGE a
	MID_GROWTH_SHAPE e
	SAPLING_SHAPE d
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	entityInside (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/Entity;)V a
	getCloneItemStack (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/item/ItemStack; a
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	isBonemealSuccess (Lnet/minecraft/world/level/Level;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Z a
	isRandomlyTicking (Lnet/minecraft/world/level/block/state/BlockState;)Z e_
	isValidBonemealTarget (Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)Z a
	performBonemeal (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V a
	randomTick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Lnet/minecraft/util/RandomSource;)V b
	use (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;Lnet/minecraft/world/phys/BlockHitResult;)Lnet/minecraft/world/InteractionResult; a
net/minecraft/world/level/block/TallFlowerBlock cxs
	isBonemealSuccess (Lnet/minecraft/world/level/Level;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Z a
	isValidBonemealTarget (Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)Z a
	performBonemeal (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V a
net/minecraft/world/level/block/TallGrassBlock cxt
	AABB_OFFSET a
	SHAPE b
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	isBonemealSuccess (Lnet/minecraft/world/level/Level;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Z a
	isValidBonemealTarget (Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)Z a
	performBonemeal (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V a
net/minecraft/world/level/block/TallSeagrassBlock cxu
	AABB_OFFSET c
	HALF b
	SHAPE d
	canPlaceLiquid (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/material/Fluid;)Z a
	canSurvive (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;)Z a
	getCloneItemStack (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/item/ItemStack; a
	getFluidState (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/material/FluidState; c_
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	getStateForPlacement (Lnet/minecraft/world/item/context/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	mayPlaceOn (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Z d
	placeLiquid (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/material/FluidState;)Z a
net/minecraft/world/level/block/TargetBlock cxv
	ACTIVATION_TICKS_ARROWS b
	ACTIVATION_TICKS_OTHER c
	OUTPUT_POWER a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getRedstoneStrength (Lnet/minecraft/world/phys/BlockHitResult;Lnet/minecraft/world/phys/Vec3;)I a
	getSignal (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;)I a
	isSignalSource (Lnet/minecraft/world/level/block/state/BlockState;)Z f_
	onPlace (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)V b
	onProjectileHit (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/phys/BlockHitResult;Lnet/minecraft/world/entity/projectile/Projectile;)V a
	setOutputPower (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/world/level/block/state/BlockState;ILnet/minecraft/core/BlockPos;I)V a
	tick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Lnet/minecraft/util/RandomSource;)V a
	updateRedstoneOutput (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/phys/BlockHitResult;Lnet/minecraft/world/entity/Entity;)I a
net/minecraft/world/level/block/TintedGlassBlock cxw
	getLightBlock (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)I g
	propagatesSkylightDown (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Z c
net/minecraft/world/level/block/TntBlock cxx
	UNSTABLE a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	dropFromExplosion (Lnet/minecraft/world/level/Explosion;)Z a
	explode (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)V a
	explode (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/LivingEntity;)V a
	neighborChanged (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Block;Lnet/minecraft/core/BlockPos;Z)V a
	onPlace (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)V b
	onProjectileHit (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/phys/BlockHitResult;Lnet/minecraft/world/entity/projectile/Projectile;)V a
	playerWillDestroy (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/entity/player/Player;)V a
	use (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;Lnet/minecraft/world/phys/BlockHitResult;)Lnet/minecraft/world/InteractionResult; a
	wasExploded (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/Explosion;)V a
net/minecraft/world/level/block/TorchBlock cxy
	AABB h
	AABB_STANDING_OFFSET g
	flameParticle i
	animateTick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/util/RandomSource;)V a
	canSurvive (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;)Z a
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
net/minecraft/world/level/block/TorchflowerCropBlock cxz
	AABB_OFFSET e
	AGE b
	BONEMEAL_INCREASE g
	MAX_AGE a
	SHAPE_BY_AGE f
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getAgeProperty ()Lnet/minecraft/world/level/block/state/properties/IntegerProperty; a
	getBaseSeedId ()Lnet/minecraft/world/level/ItemLike; c
	getBonemealAgeIncrease (Lnet/minecraft/world/level/Level;)I a
	getMaxAge ()I b
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	getStateForAge (I)Lnet/minecraft/world/level/block/state/BlockState; b
	randomTick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Lnet/minecraft/util/RandomSource;)V b
net/minecraft/world/level/block/TrapDoorBlock cya
	AABB_THICKNESS e
	BOTTOM_AABB j
	EAST_OPEN_AABB f
	HALF b
	NORTH_OPEN_AABB i
	OPEN a
	POWERED c
	SOUTH_OPEN_AABB h
	TOP_AABB k
	WATERLOGGED d
	WEST_OPEN_AABB g
	type l
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getFluidState (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/material/FluidState; c_
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	getStateForPlacement (Lnet/minecraft/world/item/context/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	isPathfindable (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/pathfinder/PathComputationType;)Z a
	neighborChanged (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Block;Lnet/minecraft/core/BlockPos;Z)V a
	playSound (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Z)V a
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
	use (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;Lnet/minecraft/world/phys/BlockHitResult;)Lnet/minecraft/world/InteractionResult; a
net/minecraft/world/level/block/TrappedChestBlock cyb
	getDirectSignal (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;)I b
	getOpenChestStat ()Lnet/minecraft/stats/Stat; b
	getSignal (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;)I a
	isSignalSource (Lnet/minecraft/world/level/block/state/BlockState;)Z f_
	newBlockEntity (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/entity/BlockEntity; a
net/minecraft/world/level/block/TripWireBlock cyc
	AABB h
	ATTACHED b
	DISARMED c
	EAST e
	NORTH d
	NOT_ATTACHED_AABB i
	POWERED a
	PROPERTY_BY_DIRECTION j
	RECHECK_PERIOD k
	SOUTH f
	WEST g
	hook l
	checkPressed (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)V a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	entityInside (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/Entity;)V a
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	getStateForPlacement (Lnet/minecraft/world/item/context/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	mirror (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Mirror;)Lnet/minecraft/world/level/block/state/BlockState; a
	onPlace (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)V b
	onRemove (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)V a
	playerWillDestroy (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/entity/player/Player;)V a
	rotate (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Rotation;)Lnet/minecraft/world/level/block/state/BlockState; a
	shouldConnectTo (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;)Z a
	tick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Lnet/minecraft/util/RandomSource;)V a
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
	updateSource (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V a
net/minecraft/world/level/block/TripWireHookBlock cyd
	AABB_OFFSET f
	ATTACHED c
	EAST_AABB j
	FACING a
	NORTH_AABB g
	POWERED b
	RECHECK_PERIOD k
	SOUTH_AABB h
	WEST_AABB i
	WIRE_DIST_MAX e
	WIRE_DIST_MIN d
	calculateState (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;ZZILnet/minecraft/world/level/block/state/BlockState;)V a
	canSurvive (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;)Z a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	emitState (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;ZZZZ)V a
	getDirectSignal (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;)I b
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	getSignal (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;)I a
	getStateForPlacement (Lnet/minecraft/world/item/context/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	isSignalSource (Lnet/minecraft/world/level/block/state/BlockState;)Z f_
	mirror (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Mirror;)Lnet/minecraft/world/level/block/state/BlockState; a
	notifyNeighbors (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;)V a
	onRemove (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)V a
	rotate (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Rotation;)Lnet/minecraft/world/level/block/state/BlockState; a
	setPlacedBy (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/item/ItemStack;)V a
	tick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Lnet/minecraft/util/RandomSource;)V a
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
net/minecraft/world/level/block/TurtleEggBlock cye
	EGGS e
	HATCH d
	MAX_EGGS c
	MAX_HATCH_LEVEL a
	MIN_EGGS b
	MULTIPLE_EGGS_AABB g
	ONE_EGG_AABB f
	canBeReplaced (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/item/context/BlockPlaceContext;)Z a
	canDestroyEgg (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/Entity;)Z a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	decreaseEggs (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V a
	destroyEgg (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/Entity;I)V a
	fallOn (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/Entity;F)V a
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	getStateForPlacement (Lnet/minecraft/world/item/context/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	isSand (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Z b
	onPlace (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)V b
	onSand (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Z a
	playerDestroy (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/entity/BlockEntity;Lnet/minecraft/world/item/ItemStack;)V a
	randomTick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Lnet/minecraft/util/RandomSource;)V b
	shouldUpdateHatchLevel (Lnet/minecraft/world/level/Level;)Z a
	stepOn (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/entity/Entity;)V a
net/minecraft/world/level/block/TwistingVinesBlock cyf
	SHAPE f
	canGrowInto (Lnet/minecraft/world/level/block/state/BlockState;)Z g
	getBlocksToGrowWhenBonemealed (Lnet/minecraft/util/RandomSource;)I a
	getBodyBlock ()Lnet/minecraft/world/level/block/Block; a
net/minecraft/world/level/block/TwistingVinesPlantBlock cyg
	SHAPE d
	getHeadBlock ()Lnet/minecraft/world/level/block/GrowingPlantHeadBlock; b
net/minecraft/world/level/block/VineBlock cyh
	AABB_OFFSET g
	EAST c
	EAST_AABB j
	NORTH b
	NORTH_AABB k
	PROPERTY_BY_DIRECTION f
	SOUTH d
	SOUTH_AABB l
	UP a
	UP_AABB h
	WEST e
	WEST_AABB i
	shapesCache m
	calculateShape (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/phys/shapes/VoxelShape; h
	canBeReplaced (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/item/context/BlockPlaceContext;)Z a
	canSpread (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Z a
	canSupportAtFace (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;)Z b
	canSurvive (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;)Z a
	copyRandomFaces (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/util/RandomSource;)Lnet/minecraft/world/level/block/state/BlockState; a
	countFaces (Lnet/minecraft/world/level/block/state/BlockState;)I o
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getPropertyForFace (Lnet/minecraft/core/Direction;)Lnet/minecraft/world/level/block/state/properties/BooleanProperty; a
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	getStateForPlacement (Lnet/minecraft/world/item/context/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	getUpdatedState (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; i
	hasFaces (Lnet/minecraft/world/level/block/state/BlockState;)Z n
	hasHorizontalConnection (Lnet/minecraft/world/level/block/state/BlockState;)Z p
	isAcceptableNeighbour (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;)Z a
	mirror (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Mirror;)Lnet/minecraft/world/level/block/state/BlockState; a
	propagatesSkylightDown (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Z c
	randomTick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Lnet/minecraft/util/RandomSource;)V b
	rotate (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Rotation;)Lnet/minecraft/world/level/block/state/BlockState; a
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
net/minecraft/world/level/block/WallBannerBlock cyi
	FACING a
	SHAPES b
	canSurvive (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;)Z a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getDescriptionId ()Ljava/lang/String; f
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	getStateForPlacement (Lnet/minecraft/world/item/context/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	mirror (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Mirror;)Lnet/minecraft/world/level/block/state/BlockState; a
	rotate (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Rotation;)Lnet/minecraft/world/level/block/state/BlockState; a
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
net/minecraft/world/level/block/WallBlock cyj
	EAST_TEST H
	EAST_WALL b
	NORTH_TEST E
	NORTH_WALL c
	POST_COVER_WIDTH l
	POST_TEST D
	POST_WIDTH k
	SOUTH_TEST F
	SOUTH_WALL d
	UP a
	WALL_COVER_END n
	WALL_COVER_START m
	WALL_HEIGHT j
	WALL_WIDTH i
	WATERLOGGED f
	WEST_TEST G
	WEST_WALL e
	collisionShapeByIndex h
	shapeByIndex g
	applyWallShape (Lnet/minecraft/world/phys/shapes/VoxelShape;Lnet/minecraft/world/level/block/state/properties/WallSide;Lnet/minecraft/world/phys/shapes/VoxelShape;Lnet/minecraft/world/phys/shapes/VoxelShape;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	connectsTo (Lnet/minecraft/world/level/block/state/BlockState;ZLnet/minecraft/core/Direction;)Z a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getCollisionShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; c
	getFluidState (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/material/FluidState; c_
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	getStateForPlacement (Lnet/minecraft/world/item/context/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	isConnected (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/state/properties/Property;)Z a
	isCovered (Lnet/minecraft/world/phys/shapes/VoxelShape;Lnet/minecraft/world/phys/shapes/VoxelShape;)Z a
	isPathfindable (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/pathfinder/PathComputationType;)Z a
	makeShapes (FFFFFF)Ljava/util/Map; a
	makeWallState (ZLnet/minecraft/world/phys/shapes/VoxelShape;Lnet/minecraft/world/phys/shapes/VoxelShape;)Lnet/minecraft/world/level/block/state/properties/WallSide; a
	mirror (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Mirror;)Lnet/minecraft/world/level/block/state/BlockState; a
	propagatesSkylightDown (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Z c
	rotate (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Rotation;)Lnet/minecraft/world/level/block/state/BlockState; a
	shouldRaisePost (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/phys/shapes/VoxelShape;)Z a
	sideUpdate (Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;)Lnet/minecraft/world/level/block/state/BlockState; a
	topUpdate (Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/state/BlockState; a
	updateShape (Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;ZZZZ)Lnet/minecraft/world/level/block/state/BlockState; a
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
	updateSides (Lnet/minecraft/world/level/block/state/BlockState;ZZZZLnet/minecraft/world/phys/shapes/VoxelShape;)Lnet/minecraft/world/level/block/state/BlockState; a
net/minecraft/world/level/block/WallHangingSignBlock cyk
	AABBS i
	FACING a
	PLANK_EASTWEST c
	PLANK_NORTHSOUTH b
	SHAPE_EASTWEST h
	SHAPE_NORTHSOUTH d
	canAttachTo (Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;)Z a
	canPlace (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;)Z b
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getBlockSupportShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/phys/shapes/VoxelShape; b_
	getCollisionShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; c
	getDescriptionId ()Ljava/lang/String; f
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	getStateForPlacement (Lnet/minecraft/world/item/context/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	getTicker (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/entity/BlockEntityType;)Lnet/minecraft/world/level/block/entity/BlockEntityTicker; a
	getYRotationDegrees (Lnet/minecraft/world/level/block/state/BlockState;)F g
	isHittingEditableSide (Lnet/minecraft/world/phys/BlockHitResult;Lnet/minecraft/world/level/block/state/BlockState;)Z a
	isPathfindable (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/pathfinder/PathComputationType;)Z a
	mirror (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Mirror;)Lnet/minecraft/world/level/block/state/BlockState; a
	newBlockEntity (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/entity/BlockEntity; a
	rotate (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Rotation;)Lnet/minecraft/world/level/block/state/BlockState; a
	shouldTryToChainAnotherHangingSign (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/phys/BlockHitResult;Lnet/minecraft/world/level/block/entity/SignBlockEntity;Lnet/minecraft/world/item/ItemStack;)Z a
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
	use (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;Lnet/minecraft/world/phys/BlockHitResult;)Lnet/minecraft/world/InteractionResult; a
net/minecraft/world/level/block/WallSignBlock cyl
	AABBS h
	AABB_BOTTOM c
	AABB_THICKNESS b
	AABB_TOP d
	FACING a
	canSurvive (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;)Z a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getDescriptionId ()Ljava/lang/String; f
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	getSignHitboxCenterPosition (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/phys/Vec3; h
	getStateForPlacement (Lnet/minecraft/world/item/context/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	getYRotationDegrees (Lnet/minecraft/world/level/block/state/BlockState;)F g
	mirror (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Mirror;)Lnet/minecraft/world/level/block/state/BlockState; a
	rotate (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Rotation;)Lnet/minecraft/world/level/block/state/BlockState; a
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
net/minecraft/world/level/block/WallSkullBlock cym
	AABBS b
	FACING a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getDescriptionId ()Ljava/lang/String; f
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	getStateForPlacement (Lnet/minecraft/world/item/context/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	mirror (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Mirror;)Lnet/minecraft/world/level/block/state/BlockState; a
	rotate (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Rotation;)Lnet/minecraft/world/level/block/state/BlockState; a
net/minecraft/world/level/block/WallTorchBlock cyn
	AABBS c
	AABB_OFFSET b
	FACING a
	animateTick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/util/RandomSource;)V a
	canSurvive (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;)Z a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getDescriptionId ()Ljava/lang/String; f
	getShape (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/phys/shapes/VoxelShape; h
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	getStateForPlacement (Lnet/minecraft/world/item/context/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	mirror (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Mirror;)Lnet/minecraft/world/level/block/state/BlockState; a
	rotate (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Rotation;)Lnet/minecraft/world/level/block/state/BlockState; a
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
net/minecraft/world/level/block/WaterlilyBlock cyo
	AABB a
	entityInside (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/Entity;)V a
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	mayPlaceOn (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Z d
net/minecraft/world/level/block/WeatheringCopper cyp
	NEXT_BY_BLOCK u_
	PREVIOUS_BY_BLOCK v_
	getChanceModifier ()F a
	getFirst (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/world/level/block/Block; b
	getFirst (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/state/BlockState; c
	getNext (Lnet/minecraft/world/level/block/Block;)Ljava/util/Optional; c
	getNext (Lnet/minecraft/world/level/block/state/BlockState;)Ljava/util/Optional; i_
	getPrevious (Lnet/minecraft/world/level/block/Block;)Ljava/util/Optional; a
	getPrevious (Lnet/minecraft/world/level/block/state/BlockState;)Ljava/util/Optional; b
net/minecraft/world/level/block/WeatheringCopper$WeatherState cyp$a
	$VALUES e
	EXPOSED b
	OXIDIZED d
	UNAFFECTED a
	WEATHERED c
	$values ()[Lnet/minecraft/world/level/block/WeatheringCopper$WeatherState; a
net/minecraft/world/level/block/WeatheringCopperFullBlock cyq
	weatherState d
	getAge ()Ljava/lang/Enum; b
	getAge ()Lnet/minecraft/world/level/block/WeatheringCopper$WeatherState; g
	isRandomlyTicking (Lnet/minecraft/world/level/block/state/BlockState;)Z e_
	randomTick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Lnet/minecraft/util/RandomSource;)V b
net/minecraft/world/level/block/WeatheringCopperSlabBlock cyr
	weatherState e
	getAge ()Ljava/lang/Enum; b
	getAge ()Lnet/minecraft/world/level/block/WeatheringCopper$WeatherState; g
	isRandomlyTicking (Lnet/minecraft/world/level/block/state/BlockState;)Z e_
	randomTick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Lnet/minecraft/util/RandomSource;)V b
net/minecraft/world/level/block/WeatheringCopperStairBlock cys
	weatherState F
	getAge ()Ljava/lang/Enum; b
	getAge ()Lnet/minecraft/world/level/block/WeatheringCopper$WeatherState; g
	isRandomlyTicking (Lnet/minecraft/world/level/block/state/BlockState;)Z e_
	randomTick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Lnet/minecraft/util/RandomSource;)V b
net/minecraft/world/level/block/WebBlock cyt
	entityInside (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/Entity;)V a
net/minecraft/world/level/block/WeepingVinesBlock cyu
	SHAPE f
	canGrowInto (Lnet/minecraft/world/level/block/state/BlockState;)Z g
	getBlocksToGrowWhenBonemealed (Lnet/minecraft/util/RandomSource;)I a
	getBodyBlock ()Lnet/minecraft/world/level/block/Block; a
net/minecraft/world/level/block/WeepingVinesPlantBlock cyv
	SHAPE d
	getHeadBlock ()Lnet/minecraft/world/level/block/GrowingPlantHeadBlock; b
net/minecraft/world/level/block/WeightedPressurePlateBlock cyw
	POWER d
	maxWeight e
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getPressedTime ()I a
	getSignalForState (Lnet/minecraft/world/level/block/state/BlockState;)I g
	getSignalStrength (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)I b
	setSignalForState (Lnet/minecraft/world/level/block/state/BlockState;I)Lnet/minecraft/world/level/block/state/BlockState; a
net/minecraft/world/level/block/WetSpongeBlock cyx
	animateTick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/util/RandomSource;)V a
	onPlace (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)V b
net/minecraft/world/level/block/WitherRoseBlock cyy
	animateTick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/util/RandomSource;)V a
	entityInside (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/Entity;)V a
	mayPlaceOn (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Z d
net/minecraft/world/level/block/WitherSkullBlock cyz
	witherPatternBase f
	witherPatternFull e
	canSpawnMob (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/item/ItemStack;)Z b
	checkSpawn (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/entity/SkullBlockEntity;)V a
	getOrCreateWitherBase ()Lnet/minecraft/world/level/block/state/pattern/BlockPattern; v
	getOrCreateWitherFull ()Lnet/minecraft/world/level/block/state/pattern/BlockPattern; u
	setPlacedBy (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/item/ItemStack;)V a
net/minecraft/world/level/block/WitherWallSkullBlock cza
	setPlacedBy (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/item/ItemStack;)V a
net/minecraft/world/level/block/WoolCarpetBlock czb
	color b
	getColor ()Lnet/minecraft/world/item/DyeColor; a
net/minecraft/world/level/block/entity/AbstractFurnaceBlockEntity czc
	BURN_COOL_SPEED l
	BURN_TIME_STANDARD k
	DATA_COOKING_PROGRESS h
	DATA_COOKING_TOTAL_TIME i
	DATA_LIT_DURATION g
	DATA_LIT_TIME f
	NUM_DATA_VALUES j
	SLOTS_FOR_DOWN s
	SLOTS_FOR_SIDES t
	SLOTS_FOR_UP r
	SLOT_FUEL d
	SLOT_INPUT c
	SLOT_RESULT e
	cookingProgress w
	cookingTotalTime x
	dataAccess n
	items m
	litDuration v
	litTime u
	quickCheck z
	recipesUsed y
	add (Ljava/util/Map;Lnet/minecraft/tags/TagKey;I)V a
	add (Ljava/util/Map;Lnet/minecraft/world/level/ItemLike;I)V a
	awardUsedRecipes (Lnet/minecraft/world/entity/player/Player;Ljava/util/List;)V a
	awardUsedRecipesAndPopExperience (Lnet/minecraft/server/level/ServerPlayer;)V a
	burn (Lnet/minecraft/core/RegistryAccess;Lnet/minecraft/world/item/crafting/Recipe;Lnet/minecraft/core/NonNullList;I)Z b
	canBurn (Lnet/minecraft/core/RegistryAccess;Lnet/minecraft/world/item/crafting/Recipe;Lnet/minecraft/core/NonNullList;I)Z a
	canPlaceItem (ILnet/minecraft/world/item/ItemStack;)Z b
	canPlaceItemThroughFace (ILnet/minecraft/world/item/ItemStack;Lnet/minecraft/core/Direction;)Z a
	canTakeItemThroughFace (ILnet/minecraft/world/item/ItemStack;Lnet/minecraft/core/Direction;)Z b
	clearContent ()V a
	createExperience (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/phys/Vec3;IF)V a
	fillStackedContents (Lnet/minecraft/world/entity/player/StackedContents;)V a
	getBurnDuration (Lnet/minecraft/world/item/ItemStack;)I a
	getContainerSize ()I b
	getFuel ()Ljava/util/Map; f
	getItem (I)Lnet/minecraft/world/item/ItemStack; a
	getRecipeUsed ()Lnet/minecraft/world/item/crafting/Recipe; d
	getRecipesToAwardAndPopExperience (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/phys/Vec3;)Ljava/util/List; a
	getSlotsForFace (Lnet/minecraft/core/Direction;)[I a
	getTotalCookTime (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/level/block/entity/AbstractFurnaceBlockEntity;)I a
	isEmpty ()Z ab_
	isFuel (Lnet/minecraft/world/item/ItemStack;)Z b
	isLit ()Z i
	isNeverAFurnaceFuel (Lnet/minecraft/world/item/Item;)Z b
	load (Lnet/minecraft/nbt/CompoundTag;)V a
	removeItem (II)Lnet/minecraft/world/item/ItemStack; a
	removeItemNoUpdate (I)Lnet/minecraft/world/item/ItemStack; b
	saveAdditional (Lnet/minecraft/nbt/CompoundTag;)V b
	serverTick (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/entity/AbstractFurnaceBlockEntity;)V a
	setItem (ILnet/minecraft/world/item/ItemStack;)V a
	setRecipeUsed (Lnet/minecraft/world/item/crafting/Recipe;)V a
	stillValid (Lnet/minecraft/world/entity/player/Player;)Z a
net/minecraft/world/level/block/entity/BannerBlockEntity czd
	MAX_PATTERNS a
	TAG_COLOR d
	TAG_PATTERN c
	TAG_PATTERNS b
	baseColor f
	itemPatterns g
	name e
	patterns h
	createPatterns (Lnet/minecraft/world/item/DyeColor;Lnet/minecraft/nbt/ListTag;)Ljava/util/List; a
	fromItem (Lnet/minecraft/world/item/ItemStack;)V b
	fromItem (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/item/DyeColor;)V a
	getBaseColor ()Lnet/minecraft/world/item/DyeColor; g
	getCustomName ()Lnet/minecraft/network/chat/Component; ab
	getItem ()Lnet/minecraft/world/item/ItemStack; f
	getItemPatterns (Lnet/minecraft/world/item/ItemStack;)Lnet/minecraft/nbt/ListTag; a
	getName ()Lnet/minecraft/network/chat/Component; Z
	getPatternCount (Lnet/minecraft/world/item/ItemStack;)I c
	getPatterns ()Ljava/util/List; c
	getUpdatePacket ()Lnet/minecraft/network/protocol/Packet; h
	getUpdatePacket ()Lnet/minecraft/network/protocol/game/ClientboundBlockEntityDataPacket; a
	getUpdateTag ()Lnet/minecraft/nbt/CompoundTag; ao_
	load (Lnet/minecraft/nbt/CompoundTag;)V a
	removeLastPattern (Lnet/minecraft/world/item/ItemStack;)V d
	saveAdditional (Lnet/minecraft/nbt/CompoundTag;)V b
	setCustomName (Lnet/minecraft/network/chat/Component;)V a
net/minecraft/world/level/block/entity/BannerPattern cze
	hashname a
	byHash (Ljava/lang/String;)Lnet/minecraft/core/Holder; a
	getHashname ()Ljava/lang/String; a
	location (Lnet/minecraft/resources/ResourceKey;Z)Lnet/minecraft/resources/ResourceLocation; a
net/minecraft/world/level/block/entity/BannerPattern$Builder cze$a
	patterns a
	addPattern (Lcom/mojang/datafixers/util/Pair;)Lnet/minecraft/world/level/block/entity/BannerPattern$Builder; a
	addPattern (Lnet/minecraft/core/Holder;Lnet/minecraft/world/item/DyeColor;)Lnet/minecraft/world/level/block/entity/BannerPattern$Builder; a
	addPattern (Lnet/minecraft/resources/ResourceKey;Lnet/minecraft/world/item/DyeColor;)Lnet/minecraft/world/level/block/entity/BannerPattern$Builder; a
	toListTag ()Lnet/minecraft/nbt/ListTag; a
net/minecraft/world/level/block/entity/BannerPatterns czf
	BASE a
	BORDER E
	BRICKS I
	CIRCLE_MIDDLE y
	CREEPER K
	CROSS o
	CURLY_BORDER F
	DIAGONAL_LEFT u
	DIAGONAL_LEFT_MIRROR w
	DIAGONAL_RIGHT v
	DIAGONAL_RIGHT_MIRROR x
	FLOWER M
	GLOBE J
	GRADIENT G
	GRADIENT_UP H
	HALF_HORIZONTAL B
	HALF_HORIZONTAL_MIRROR D
	HALF_VERTICAL A
	HALF_VERTICAL_MIRROR C
	MOJANG N
	PIGLIN O
	RHOMBUS_MIDDLE z
	SKULL L
	SQUARE_BOTTOM_LEFT b
	SQUARE_BOTTOM_RIGHT c
	SQUARE_TOP_LEFT d
	SQUARE_TOP_RIGHT e
	STRAIGHT_CROSS p
	STRIPE_BOTTOM f
	STRIPE_CENTER j
	STRIPE_DOWNLEFT m
	STRIPE_DOWNRIGHT l
	STRIPE_LEFT h
	STRIPE_MIDDLE k
	STRIPE_RIGHT i
	STRIPE_SMALL n
	STRIPE_TOP g
	TRIANGLES_BOTTOM s
	TRIANGLES_TOP t
	TRIANGLE_BOTTOM q
	TRIANGLE_TOP r
	bootstrap (Lnet/minecraft/core/Registry;)Lnet/minecraft/world/level/block/entity/BannerPattern; a
	create (Ljava/lang/String;)Lnet/minecraft/resources/ResourceKey; a
net/minecraft/world/level/block/entity/BarrelBlockEntity czg
	items c
	openersCounter f
	createMenu (ILnet/minecraft/world/entity/player/Inventory;)Lnet/minecraft/world/inventory/AbstractContainerMenu; a
	getContainerSize ()I b
	getDefaultName ()Lnet/minecraft/network/chat/Component; g
	getItems ()Lnet/minecraft/core/NonNullList; f
	load (Lnet/minecraft/nbt/CompoundTag;)V a
	playSound (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/sounds/SoundEvent;)V a
	recheckOpen ()V i
	saveAdditional (Lnet/minecraft/nbt/CompoundTag;)V b
	setItems (Lnet/minecraft/core/NonNullList;)V a
	startOpen (Lnet/minecraft/world/entity/player/Player;)V d_
	stopOpen (Lnet/minecraft/world/entity/player/Player;)V c
	updateBlockState (Lnet/minecraft/world/level/block/state/BlockState;Z)V a
net/minecraft/world/level/block/entity/BaseContainerBlockEntity czh
	lockKey c
	name d
	canOpen (Lnet/minecraft/world/entity/player/Player;)Z d
	canUnlock (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/LockCode;Lnet/minecraft/network/chat/Component;)Z a
	createMenu (ILnet/minecraft/world/entity/player/Inventory;)Lnet/minecraft/world/inventory/AbstractContainerMenu; a
	getCustomName ()Lnet/minecraft/network/chat/Component; ab
	getDefaultName ()Lnet/minecraft/network/chat/Component; g
	getDisplayName ()Lnet/minecraft/network/chat/Component; H_
	getName ()Lnet/minecraft/network/chat/Component; Z
	load (Lnet/minecraft/nbt/CompoundTag;)V a
	saveAdditional (Lnet/minecraft/nbt/CompoundTag;)V b
	setCustomName (Lnet/minecraft/network/chat/Component;)V a
net/minecraft/world/level/block/entity/BeaconBlockEntity czi
	BEACON_EFFECTS a
	BLOCKS_CHECK_PER_TICK h
	DATA_LEVELS b
	DATA_PRIMARY c
	DATA_SECONDARY d
	DEFAULT_NAME i
	MAX_LEVELS f
	NUM_DATA_VALUES e
	VALID_EFFECTS g
	beamSections j
	checkingBeamSections k
	dataAccess u
	lastCheckY m
	levels l
	lockKey t
	name s
	primaryPower n
	secondaryPower r
	applyEffects (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;ILnet/minecraft/world/effect/MobEffect;Lnet/minecraft/world/effect/MobEffect;)V a
	getBeamSections ()Ljava/util/List; c
	getCustomName ()Lnet/minecraft/network/chat/Component; ab
	getDisplayName ()Lnet/minecraft/network/chat/Component; H_
	getName ()Lnet/minecraft/network/chat/Component; Z
	getUpdatePacket ()Lnet/minecraft/network/protocol/Packet; h
	getUpdatePacket ()Lnet/minecraft/network/protocol/game/ClientboundBlockEntityDataPacket; f
	getUpdateTag ()Lnet/minecraft/nbt/CompoundTag; ao_
	getValidEffectById (I)Lnet/minecraft/world/effect/MobEffect; a
	load (Lnet/minecraft/nbt/CompoundTag;)V a
	playSound (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/sounds/SoundEvent;)V a
	saveAdditional (Lnet/minecraft/nbt/CompoundTag;)V b
	setCustomName (Lnet/minecraft/network/chat/Component;)V a
	setLevel (Lnet/minecraft/world/level/Level;)V a
	setRemoved ()V ap_
	tick (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/entity/BeaconBlockEntity;)V a
	updateBase (Lnet/minecraft/world/level/Level;III)I a
net/minecraft/world/level/block/entity/BeaconBlockEntity$BeaconBeamSection czi$a
	color a
	height b
	getColor ()[F b
	getHeight ()I c
	increaseHeight ()V a
net/minecraft/world/level/block/entity/BedBlockEntity czj
	color a
	getColor ()Lnet/minecraft/world/item/DyeColor; d
	getUpdatePacket ()Lnet/minecraft/network/protocol/Packet; h
	getUpdatePacket ()Lnet/minecraft/network/protocol/game/ClientboundBlockEntityDataPacket; c
	setColor (Lnet/minecraft/world/item/DyeColor;)V a
net/minecraft/world/level/block/entity/BeehiveBlockEntity czk
	BEES f
	ENTITY_DATA c
	HAS_NECTAR e
	IGNORED_BEE_TAGS i
	MAX_OCCUPANTS g
	MIN_OCCUPATION_TICKS b
	MIN_OCCUPATION_TICKS_NECTAR k
	MIN_OCCUPATION_TICKS_NECTARLESS h
	MIN_TICKS_BEFORE_REENTERING_HIVE j
	TAG_FLOWER_POS a
	TICKS_IN_HIVE d
	savedFlowerPos m
	stored l
	addOccupant (Lnet/minecraft/world/entity/Entity;Z)V a
	addOccupantWithPresetTicks (Lnet/minecraft/world/entity/Entity;ZI)V a
	emptyAllLivingFromHive (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/entity/BeehiveBlockEntity$BeeReleaseStatus;)V a
	getHoneyLevel (Lnet/minecraft/world/level/block/state/BlockState;)I a
	getOccupantCount ()I g
	hasSavedFlowerPos ()Z v
	isEmpty ()Z d
	isFireNearby ()Z c
	isFull ()Z f
	isSedated ()Z i
	load (Lnet/minecraft/nbt/CompoundTag;)V a
	releaseAllOccupants (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/entity/BeehiveBlockEntity$BeeReleaseStatus;)Ljava/util/List; a
	releaseOccupant (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/entity/BeehiveBlockEntity$BeeData;Ljava/util/List;Lnet/minecraft/world/level/block/entity/BeehiveBlockEntity$BeeReleaseStatus;Lnet/minecraft/core/BlockPos;)Z a
	removeIgnoredBeeTags (Lnet/minecraft/nbt/CompoundTag;)V d
	saveAdditional (Lnet/minecraft/nbt/CompoundTag;)V b
	serverTick (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/entity/BeehiveBlockEntity;)V a
	setBeeReleaseData (ILnet/minecraft/world/entity/animal/Bee;)V a
	setChanged ()V e
	storeBee (Lnet/minecraft/nbt/CompoundTag;IZ)V a
	tickOccupants (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Ljava/util/List;Lnet/minecraft/core/BlockPos;)V a
	writeBees ()Lnet/minecraft/nbt/ListTag; j
net/minecraft/world/level/block/entity/BeehiveBlockEntity$BeeData czk$a
	entityData a
	minOccupationTicks c
	ticksInHive b
net/minecraft/world/level/block/entity/BeehiveBlockEntity$BeeReleaseStatus czk$b
	$VALUES d
	BEE_RELEASED b
	EMERGENCY c
	HONEY_DELIVERED a
	$values ()[Lnet/minecraft/world/level/block/entity/BeehiveBlockEntity$BeeReleaseStatus; a
net/minecraft/world/level/block/entity/BellBlockEntity czl
	DURATION d
	GLOW_DURATION e
	HEAR_BELL_RADIUS j
	HIGHLIGHT_RAIDERS_RADIUS k
	MAX_RESONATION_TICKS g
	MIN_TICKS_BETWEEN_SEARCHES f
	SEARCH_RADIUS i
	TICKS_BEFORE_RESONATION h
	clickDirection c
	lastRingTimestamp l
	nearbyEntities m
	resonating n
	resonationTicks r
	shaking b
	ticks a
	areRaidersNearby (Lnet/minecraft/core/BlockPos;Ljava/util/List;)Z a
	clientTick (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/entity/BellBlockEntity;)V a
	glow (Lnet/minecraft/world/entity/LivingEntity;)V a
	isRaiderWithinRange (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/LivingEntity;)Z a
	makeRaidersGlow (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Ljava/util/List;)V a
	onHit (Lnet/minecraft/core/Direction;)V a
	serverTick (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/entity/BellBlockEntity;)V b
	showBellParticles (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Ljava/util/List;)V b
	tick (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/entity/BellBlockEntity;Lnet/minecraft/world/level/block/entity/BellBlockEntity$ResonationEndAction;)V a
	triggerEvent (II)Z a_
	updateEntities ()V c
net/minecraft/world/level/block/entity/BellBlockEntity$ResonationEndAction czl$a
net/minecraft/world/level/block/entity/BlastFurnaceBlockEntity czm
	createMenu (ILnet/minecraft/world/entity/player/Inventory;)Lnet/minecraft/world/inventory/AbstractContainerMenu; a
	getBurnDuration (Lnet/minecraft/world/item/ItemStack;)I a
	getDefaultName ()Lnet/minecraft/network/chat/Component; g
net/minecraft/world/level/block/entity/BlockEntity czn
	LOGGER c
	blockState e
	level o
	remove q
	type d
	worldPosition p
	addEntityType (Lnet/minecraft/nbt/CompoundTag;Lnet/minecraft/world/level/block/entity/BlockEntityType;)V a
	clearRemoved ()V s
	fillCrashReportCategory (Lnet/minecraft/CrashReportCategory;)V a
	getBlockPos ()Lnet/minecraft/core/BlockPos; p
	getBlockState ()Lnet/minecraft/world/level/block/state/BlockState; q
	getLevel ()Lnet/minecraft/world/level/Level; k
	getPosFromTag (Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/core/BlockPos; c
	getType ()Lnet/minecraft/world/level/block/entity/BlockEntityType; u
	getUpdatePacket ()Lnet/minecraft/network/protocol/Packet; h
	getUpdateTag ()Lnet/minecraft/nbt/CompoundTag; ao_
	hasLevel ()Z l
	isRemoved ()Z r
	load (Lnet/minecraft/nbt/CompoundTag;)V a
	loadStatic (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/world/level/block/entity/BlockEntity; a
	onlyOpCanSetNbt ()Z t
	saveAdditional (Lnet/minecraft/nbt/CompoundTag;)V b
	saveId (Lnet/minecraft/nbt/CompoundTag;)V d
	saveMetadata (Lnet/minecraft/nbt/CompoundTag;)V e
	saveToItem (Lnet/minecraft/world/item/ItemStack;)V e
	saveWithFullMetadata ()Lnet/minecraft/nbt/CompoundTag; m
	saveWithId ()Lnet/minecraft/nbt/CompoundTag; n
	saveWithoutMetadata ()Lnet/minecraft/nbt/CompoundTag; o
	setBlockState (Lnet/minecraft/world/level/block/state/BlockState;)V b
	setChanged ()V e
	setChanged (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V a
	setLevel (Lnet/minecraft/world/level/Level;)V a
	setRemoved ()V ap_
	triggerEvent (II)Z a_
net/minecraft/world/level/block/entity/BlockEntityTicker czo
net/minecraft/world/level/block/entity/BlockEntityType czp
	BANNER t
	BARREL A
	BEACON o
	BED y
	BEEHIVE H
	BELL E
	BLAST_FURNACE C
	BREWING_STAND l
	BRUSHABLE_BLOCK N
	CALIBRATED_SCULK_SENSOR J
	CAMPFIRE G
	CHEST b
	CHISELED_BOOKSHELF M
	COMMAND_BLOCK w
	COMPARATOR s
	CONDUIT z
	DAYLIGHT_DETECTOR q
	DECORATED_POT O
	DISPENSER f
	DROPPER g
	ENCHANTING_TABLE m
	ENDER_CHEST d
	END_GATEWAY v
	END_PORTAL n
	FURNACE a
	HANGING_SIGN i
	HOPPER r
	JIGSAW F
	JUKEBOX e
	LECTERN D
	LOGGER P
	MOB_SPAWNER j
	PISTON k
	SCULK_CATALYST K
	SCULK_SENSOR I
	SCULK_SHRIEKER L
	SHULKER_BOX x
	SIGN h
	SKULL p
	SMOKER B
	STRUCTURE_BLOCK u
	TRAPPED_CHEST c
	dataType S
	factory Q
	validBlocks R
	create (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/entity/BlockEntity; a
	getBlockEntity (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/entity/BlockEntity; a
	getKey (Lnet/minecraft/world/level/block/entity/BlockEntityType;)Lnet/minecraft/resources/ResourceLocation; a
	isValid (Lnet/minecraft/world/level/block/state/BlockState;)Z a
	register (Ljava/lang/String;Lnet/minecraft/world/level/block/entity/BlockEntityType$Builder;)Lnet/minecraft/world/level/block/entity/BlockEntityType; a
net/minecraft/world/level/block/entity/BlockEntityType$BlockEntitySupplier czp$a
net/minecraft/world/level/block/entity/BlockEntityType$Builder czp$b
	factory a
	validBlocks b
	build (Lcom/mojang/datafixers/types/Type;)Lnet/minecraft/world/level/block/entity/BlockEntityType; a
	of (Lnet/minecraft/world/level/block/entity/BlockEntityType$BlockEntitySupplier;[Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/world/level/block/entity/BlockEntityType$Builder; a
net/minecraft/world/level/block/entity/BrewingStandBlockEntity czq
	DATA_BREW_TIME d
	DATA_FUEL_USES e
	FUEL_SLOT i
	FUEL_USES c
	INGREDIENT_SLOT h
	NUM_DATA_VALUES f
	SLOTS_FOR_DOWN k
	SLOTS_FOR_SIDES l
	SLOTS_FOR_UP j
	brewTime n
	dataAccess g
	fuel t
	ingredient s
	items m
	lastPotionCount r
	canPlaceItem (ILnet/minecraft/world/item/ItemStack;)Z b
	canPlaceItemThroughFace (ILnet/minecraft/world/item/ItemStack;Lnet/minecraft/core/Direction;)Z a
	canTakeItemThroughFace (ILnet/minecraft/world/item/ItemStack;Lnet/minecraft/core/Direction;)Z b
	clearContent ()V a
	createMenu (ILnet/minecraft/world/entity/player/Inventory;)Lnet/minecraft/world/inventory/AbstractContainerMenu; a
	doBrew (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/NonNullList;)V a
	getContainerSize ()I b
	getDefaultName ()Lnet/minecraft/network/chat/Component; g
	getItem (I)Lnet/minecraft/world/item/ItemStack; a
	getPotionBits ()[Z f
	getSlotsForFace (Lnet/minecraft/core/Direction;)[I a
	isBrewable (Lnet/minecraft/core/NonNullList;)Z a
	isEmpty ()Z ab_
	load (Lnet/minecraft/nbt/CompoundTag;)V a
	removeItem (II)Lnet/minecraft/world/item/ItemStack; a
	removeItemNoUpdate (I)Lnet/minecraft/world/item/ItemStack; b
	saveAdditional (Lnet/minecraft/nbt/CompoundTag;)V b
	serverTick (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/entity/BrewingStandBlockEntity;)V a
	setItem (ILnet/minecraft/world/item/ItemStack;)V a
	stillValid (Lnet/minecraft/world/entity/player/Player;)Z a
net/minecraft/world/level/block/entity/BrushableBlockEntity czr
	BRUSH_COOLDOWN_TICKS f
	BRUSH_RESET_TICKS g
	HIT_DIRECTION_TAG d
	ITEM_TAG e
	LOGGER a
	LOOT_TABLE_SEED_TAG c
	LOOT_TABLE_TAG b
	REQUIRED_BRUSHES_TO_BREAK h
	brushCount i
	brushCountResetsAtTick j
	coolDownEndsAtTick k
	hitDirection m
	item l
	lootTable n
	lootTableSeed r
	brush (JLnet/minecraft/world/entity/player/Player;Lnet/minecraft/core/Direction;)Z a
	brushingCompleted (Lnet/minecraft/world/entity/player/Player;)V b
	checkReset ()V c
	dropContent (Lnet/minecraft/world/entity/player/Player;)V c
	getCompletionState ()I i
	getHitDirection ()Lnet/minecraft/core/Direction; f
	getItem ()Lnet/minecraft/world/item/ItemStack; g
	getUpdatePacket ()Lnet/minecraft/network/protocol/Packet; h
	getUpdatePacket ()Lnet/minecraft/network/protocol/game/ClientboundBlockEntityDataPacket; d
	getUpdateTag ()Lnet/minecraft/nbt/CompoundTag; ao_
	load (Lnet/minecraft/nbt/CompoundTag;)V a
	saveAdditional (Lnet/minecraft/nbt/CompoundTag;)V b
	setLootTable (Lnet/minecraft/resources/ResourceLocation;J)V a
	tryLoadLootTable (Lnet/minecraft/nbt/CompoundTag;)Z d
	trySaveLootTable (Lnet/minecraft/nbt/CompoundTag;)Z e
	unpackLootTable (Lnet/minecraft/world/entity/player/Player;)V a
net/minecraft/world/level/block/entity/CalibratedSculkSensorBlockEntity czs
	createVibrationUser ()Lnet/minecraft/world/level/gameevent/vibrations/VibrationSystem$User; c
net/minecraft/world/level/block/entity/CalibratedSculkSensorBlockEntity$VibrationUser czs$a
	canReceiveVibration (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/gameevent/GameEvent;Lnet/minecraft/world/level/gameevent/GameEvent$Context;)Z a
	getBackSignal (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)I a
	getListenerRadius ()I a
net/minecraft/world/level/block/entity/CampfireBlockEntity czt
	BURN_COOL_SPEED a
	NUM_SLOTS b
	cookingProgress d
	cookingTime e
	items c
	quickCheck f
	clearContent ()V a
	cookTick (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/entity/CampfireBlockEntity;)V a
	cooldownTick (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/entity/CampfireBlockEntity;)V b
	dowse ()V f
	getCookableRecipe (Lnet/minecraft/world/item/ItemStack;)Ljava/util/Optional; a
	getItems ()Lnet/minecraft/core/NonNullList; c
	getUpdatePacket ()Lnet/minecraft/network/protocol/Packet; h
	getUpdatePacket ()Lnet/minecraft/network/protocol/game/ClientboundBlockEntityDataPacket; d
	getUpdateTag ()Lnet/minecraft/nbt/CompoundTag; ao_
	load (Lnet/minecraft/nbt/CompoundTag;)V a
	markUpdated ()V g
	particleTick (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/entity/CampfireBlockEntity;)V c
	placeFood (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/item/ItemStack;I)Z a
	saveAdditional (Lnet/minecraft/nbt/CompoundTag;)V b
net/minecraft/world/level/block/entity/ChestBlockEntity czu
	EVENT_SET_OPEN_COUNT c
	chestLidController j
	items f
	openersCounter g
	createMenu (ILnet/minecraft/world/entity/player/Inventory;)Lnet/minecraft/world/inventory/AbstractContainerMenu; a
	getContainerSize ()I b
	getDefaultName ()Lnet/minecraft/network/chat/Component; g
	getItems ()Lnet/minecraft/core/NonNullList; f
	getOpenCount (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)I a
	getOpenNess (F)F a
	lidAnimateTick (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/entity/ChestBlockEntity;)V a
	load (Lnet/minecraft/nbt/CompoundTag;)V a
	playSound (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/sounds/SoundEvent;)V a
	recheckOpen ()V i
	saveAdditional (Lnet/minecraft/nbt/CompoundTag;)V b
	setItems (Lnet/minecraft/core/NonNullList;)V a
	signalOpenCount (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;II)V a
	startOpen (Lnet/minecraft/world/entity/player/Player;)V d_
	stopOpen (Lnet/minecraft/world/entity/player/Player;)V c
	swapContents (Lnet/minecraft/world/level/block/entity/ChestBlockEntity;Lnet/minecraft/world/level/block/entity/ChestBlockEntity;)V a
	triggerEvent (II)Z a_
net/minecraft/world/level/block/entity/ChestLidController czv
	oOpenness c
	openness b
	shouldBeOpen a
	getOpenness (F)F a
	shouldBeOpen (Z)V a
	tickLid ()V a
net/minecraft/world/level/block/entity/ChiseledBookShelfBlockEntity czw
	LOGGER d
	MAX_BOOKS_IN_STORAGE c
	items e
	lastInteractedSlot f
	canPlaceItem (ILnet/minecraft/world/item/ItemStack;)Z b
	canTakeItem (Lnet/minecraft/world/Container;ILnet/minecraft/world/item/ItemStack;)Z a
	clearContent ()V a
	count ()I f
	getContainerSize ()I b
	getItem (I)Lnet/minecraft/world/item/ItemStack; a
	getLastInteractedSlot ()I g
	getMaxStackSize ()I ac_
	isEmpty ()Z ab_
	load (Lnet/minecraft/nbt/CompoundTag;)V a
	removeItem (II)Lnet/minecraft/world/item/ItemStack; a
	removeItemNoUpdate (I)Lnet/minecraft/world/item/ItemStack; b
	saveAdditional (Lnet/minecraft/nbt/CompoundTag;)V b
	setItem (ILnet/minecraft/world/item/ItemStack;)V a
	stillValid (Lnet/minecraft/world/entity/player/Player;)Z a
	updateState (I)V c
net/minecraft/world/level/block/entity/CommandBlockEntity czx
	auto b
	commandBlock d
	conditionMet c
	powered a
	getCommandBlock ()Lnet/minecraft/world/level/BaseCommandBlock; c
	getMode ()Lnet/minecraft/world/level/block/entity/CommandBlockEntity$Mode; v
	isAutomatic ()Z f
	isConditional ()Z w
	isPowered ()Z d
	load (Lnet/minecraft/nbt/CompoundTag;)V a
	markConditionMet ()Z j
	onModeSwitch ()V g
	onlyOpCanSetNbt ()Z t
	saveAdditional (Lnet/minecraft/nbt/CompoundTag;)V b
	scheduleTick ()V x
	setAutomatic (Z)V b
	setPowered (Z)V a
	wasConditionMet ()Z i
net/minecraft/world/level/block/entity/CommandBlockEntity$Mode czx$a
	$VALUES d
	AUTO b
	REDSTONE c
	SEQUENCE a
	$values ()[Lnet/minecraft/world/level/block/entity/CommandBlockEntity$Mode; a
net/minecraft/world/level/block/entity/ComparatorBlockEntity czy
	output a
	getOutputSignal ()I c
	load (Lnet/minecraft/nbt/CompoundTag;)V a
	saveAdditional (Lnet/minecraft/nbt/CompoundTag;)V b
	setOutputSignal (I)V a
net/minecraft/world/level/block/entity/ConduitBlockEntity czz
	BLOCK_REFRESH_RATE b
	EFFECT_DURATION c
	KILL_RANGE g
	MIN_ACTIVE_SIZE e
	MIN_KILL_SIZE f
	ROTATION_SPEED d
	VALID_BLOCKS h
	activeRotation i
	destroyTarget m
	destroyTargetUUID n
	effectBlocks l
	isActive j
	isHunting k
	nextAmbientSoundActivation r
	tickCount a
	animationTick (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Ljava/util/List;Lnet/minecraft/world/entity/Entity;I)V a
	applyEffects (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Ljava/util/List;)V b
	clientTick (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/entity/ConduitBlockEntity;)V a
	findDestroyTarget (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Ljava/util/UUID;)Lnet/minecraft/world/entity/LivingEntity; a
	getActiveRotation (F)F a
	getDestroyRangeAABB (Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/phys/AABB; a
	getUpdatePacket ()Lnet/minecraft/network/protocol/Packet; h
	getUpdatePacket ()Lnet/minecraft/network/protocol/game/ClientboundBlockEntityDataPacket; c
	getUpdateTag ()Lnet/minecraft/nbt/CompoundTag; ao_
	isActive ()Z d
	isHunting ()Z f
	load (Lnet/minecraft/nbt/CompoundTag;)V a
	saveAdditional (Lnet/minecraft/nbt/CompoundTag;)V b
	serverTick (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/entity/ConduitBlockEntity;)V b
	setHunting (Z)V a
	updateClientTarget (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/entity/ConduitBlockEntity;)V a
	updateDestroyTarget (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Ljava/util/List;Lnet/minecraft/world/level/block/entity/ConduitBlockEntity;)V a
	updateHunting (Lnet/minecraft/world/level/block/entity/ConduitBlockEntity;Ljava/util/List;)V a
	updateShape (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Ljava/util/List;)Z a
net/minecraft/world/level/block/entity/ContainerOpenersCounter daa
	CHECK_TICK_DELAY a
	openCount b
	decrementOpeners (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V b
	getOpenCount (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)I a
	getOpenerCount ()I a
	incrementOpeners (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V a
	isOwnContainer (Lnet/minecraft/world/entity/player/Player;)Z a
	onClose (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V b
	onOpen (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V a
	openerCountChanged (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;II)V a
	recheckOpeners (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V c
	scheduleRecheck (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V d
net/minecraft/world/level/block/entity/DaylightDetectorBlockEntity dab
net/minecraft/world/level/block/entity/DecoratedPotBlockEntity dac
	TAG_SHERDS a
	decorations b
	getDecorations ()Lnet/minecraft/world/level/block/entity/DecoratedPotBlockEntity$Decorations; f
	getDirection ()Lnet/minecraft/core/Direction; d
	getUpdatePacket ()Lnet/minecraft/network/protocol/Packet; h
	getUpdatePacket ()Lnet/minecraft/network/protocol/game/ClientboundBlockEntityDataPacket; c
	getUpdateTag ()Lnet/minecraft/nbt/CompoundTag; ao_
	load (Lnet/minecraft/nbt/CompoundTag;)V a
	saveAdditional (Lnet/minecraft/nbt/CompoundTag;)V b
	setFromItem (Lnet/minecraft/world/item/ItemStack;)V a
net/minecraft/world/level/block/entity/DecoratedPotBlockEntity$Decorations dac$a
	EMPTY a
	back b
	front e
	left c
	right d
	back ()Lnet/minecraft/world/item/Item; b
	front ()Lnet/minecraft/world/item/Item; e
	itemFromTag (Lnet/minecraft/nbt/ListTag;I)Lnet/minecraft/world/item/Item; a
	left ()Lnet/minecraft/world/item/Item; c
	load (Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/world/level/block/entity/DecoratedPotBlockEntity$Decorations; b
	right ()Lnet/minecraft/world/item/Item; d
	save (Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/nbt/CompoundTag; a
	sorted ()Ljava/util/stream/Stream; a
net/minecraft/world/level/block/entity/DecoratedPotPatterns dad
	ANGLER y
	ANGLER_NAME d
	ARCHER z
	ARCHER_NAME e
	ARMS_UP A
	ARMS_UP_NAME f
	BASE a
	BASE_NAME b
	BLADE B
	BLADE_NAME g
	BREWER C
	BREWER_NAME h
	BRICK x
	BRICK_NAME c
	BURN D
	BURN_NAME i
	DANGER E
	DANGER_NAME j
	EXPLORER F
	EXPLORER_NAME k
	FRIEND G
	FRIEND_NAME l
	HEART H
	HEARTBREAK I
	HEARTBREAK_NAME n
	HEART_NAME m
	HOWL J
	HOWL_NAME o
	ITEM_TO_POT_TEXTURE S
	MINER K
	MINER_NAME p
	MOURNER L
	MOURNER_NAME q
	PLENTY M
	PLENTY_NAME r
	PRIZE N
	PRIZE_NAME s
	SHEAF O
	SHEAF_NAME t
	SHELTER P
	SHELTER_NAME u
	SKULL Q
	SKULL_NAME v
	SNORT R
	SNORT_NAME w
	bootstrap (Lnet/minecraft/core/Registry;)Ljava/lang/String; a
	create (Ljava/lang/String;)Lnet/minecraft/resources/ResourceKey; a
	getResourceKey (Lnet/minecraft/world/item/Item;)Lnet/minecraft/resources/ResourceKey; a
	location (Lnet/minecraft/resources/ResourceKey;)Lnet/minecraft/resources/ResourceLocation; a
net/minecraft/world/level/block/entity/DispenserBlockEntity dae
	CONTAINER_SIZE c
	items f
	addItem (Lnet/minecraft/world/item/ItemStack;)I a
	createMenu (ILnet/minecraft/world/entity/player/Inventory;)Lnet/minecraft/world/inventory/AbstractContainerMenu; a
	getContainerSize ()I b
	getDefaultName ()Lnet/minecraft/network/chat/Component; g
	getItems ()Lnet/minecraft/core/NonNullList; f
	getRandomSlot (Lnet/minecraft/util/RandomSource;)I a
	load (Lnet/minecraft/nbt/CompoundTag;)V a
	saveAdditional (Lnet/minecraft/nbt/CompoundTag;)V b
	setItems (Lnet/minecraft/core/NonNullList;)V a
net/minecraft/world/level/block/entity/DropperBlockEntity daf
	getDefaultName ()Lnet/minecraft/network/chat/Component; g
net/minecraft/world/level/block/entity/EnchantmentTableBlockEntity dag
	RANDOM k
	flip b
	flipA e
	flipT d
	name l
	oFlip c
	oOpen g
	oRot i
	open f
	rot h
	tRot j
	time a
	bookAnimationTick (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/entity/EnchantmentTableBlockEntity;)V a
	getCustomName ()Lnet/minecraft/network/chat/Component; ab
	getName ()Lnet/minecraft/network/chat/Component; Z
	load (Lnet/minecraft/nbt/CompoundTag;)V a
	saveAdditional (Lnet/minecraft/nbt/CompoundTag;)V b
	setCustomName (Lnet/minecraft/network/chat/Component;)V a
net/minecraft/world/level/block/entity/EnderChestBlockEntity dah
	chestLidController a
	openersCounter b
	getOpenNess (F)F a
	lidAnimateTick (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/entity/EnderChestBlockEntity;)V a
	recheckOpen ()V c
	startOpen (Lnet/minecraft/world/entity/player/Player;)V a
	stillValid (Lnet/minecraft/world/entity/player/Player;)Z c
	stopOpen (Lnet/minecraft/world/entity/player/Player;)V b
	triggerEvent (II)Z a_
net/minecraft/world/level/block/entity/FurnaceBlockEntity dai
	createMenu (ILnet/minecraft/world/entity/player/Inventory;)Lnet/minecraft/world/inventory/AbstractContainerMenu; a
	getDefaultName ()Lnet/minecraft/network/chat/Component; g
net/minecraft/world/level/block/entity/HangingSignBlockEntity daj
	MAX_TEXT_LINE_WIDTH a
	TEXT_LINE_HEIGHT b
	getMaxTextLineWidth ()I d
	getTextLineHeight ()I c
net/minecraft/world/level/block/entity/Hopper dak
	ABOVE x_
	INSIDE c
	SUCK y_
	getLevelX ()D G
	getLevelY ()D I
	getLevelZ ()D J
	getSuckShape ()Lnet/minecraft/world/phys/shapes/VoxelShape; aq_
net/minecraft/world/level/block/entity/HopperBlockEntity dal
	HOPPER_CONTAINER_SIZE g
	MOVE_ITEM_SPEED f
	cooldownTime k
	items j
	tickedGameTime l
	addItem (Lnet/minecraft/world/Container;Lnet/minecraft/world/Container;Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/core/Direction;)Lnet/minecraft/world/item/ItemStack; a
	addItem (Lnet/minecraft/world/Container;Lnet/minecraft/world/entity/item/ItemEntity;)Z a
	canMergeItems (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/item/ItemStack;)Z a
	canPlaceItemInContainer (Lnet/minecraft/world/Container;Lnet/minecraft/world/item/ItemStack;ILnet/minecraft/core/Direction;)Z a
	canTakeItemFromContainer (Lnet/minecraft/world/Container;Lnet/minecraft/world/Container;Lnet/minecraft/world/item/ItemStack;ILnet/minecraft/core/Direction;)Z a
	createMenu (ILnet/minecraft/world/entity/player/Inventory;)Lnet/minecraft/world/inventory/AbstractContainerMenu; a
	ejectItems (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/Container;)Z a
	entityInside (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/level/block/entity/HopperBlockEntity;)V a
	getAttachedContainer (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/Container; b
	getContainerAt (Lnet/minecraft/world/level/Level;DDD)Lnet/minecraft/world/Container; a
	getContainerAt (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/Container; a
	getContainerSize ()I b
	getDefaultName ()Lnet/minecraft/network/chat/Component; g
	getItems ()Lnet/minecraft/core/NonNullList; f
	getItemsAtAndAbove (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/level/block/entity/Hopper;)Ljava/util/List; b
	getLevelX ()D G
	getLevelY ()D I
	getLevelZ ()D J
	getSlots (Lnet/minecraft/world/Container;Lnet/minecraft/core/Direction;)Ljava/util/stream/IntStream; a
	getSourceContainer (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/level/block/entity/Hopper;)Lnet/minecraft/world/Container; c
	inventoryFull ()Z i
	isEmptyContainer (Lnet/minecraft/world/Container;Lnet/minecraft/core/Direction;)Z c
	isFullContainer (Lnet/minecraft/world/Container;Lnet/minecraft/core/Direction;)Z b
	isOnCooldown ()Z j
	isOnCustomCooldown ()Z v
	load (Lnet/minecraft/nbt/CompoundTag;)V a
	pushItemsTick (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/entity/HopperBlockEntity;)V a
	removeItem (II)Lnet/minecraft/world/item/ItemStack; a
	saveAdditional (Lnet/minecraft/nbt/CompoundTag;)V b
	setCooldown (I)V c
	setItem (ILnet/minecraft/world/item/ItemStack;)V a
	setItems (Lnet/minecraft/core/NonNullList;)V a
	suckInItems (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/level/block/entity/Hopper;)Z a
	tryMoveInItem (Lnet/minecraft/world/Container;Lnet/minecraft/world/Container;Lnet/minecraft/world/item/ItemStack;ILnet/minecraft/core/Direction;)Lnet/minecraft/world/item/ItemStack; b
	tryMoveItems (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/entity/HopperBlockEntity;Ljava/util/function/BooleanSupplier;)Z a
	tryTakeInItemFromSlot (Lnet/minecraft/world/level/block/entity/Hopper;Lnet/minecraft/world/Container;ILnet/minecraft/core/Direction;)Z a
net/minecraft/world/level/block/entity/JigsawBlockEntity dam
	FINAL_STATE e
	JOINT c
	NAME d
	POOL b
	TARGET a
	finalState j
	joint i
	name f
	pool h
	target g
	generate (Lnet/minecraft/server/level/ServerLevel;IZ)V a
	getFinalState ()Ljava/lang/String; g
	getJoint ()Lnet/minecraft/world/level/block/entity/JigsawBlockEntity$JointType; i
	getName ()Lnet/minecraft/resources/ResourceLocation; c
	getPool ()Lnet/minecraft/resources/ResourceKey; f
	getTarget ()Lnet/minecraft/resources/ResourceLocation; d
	getUpdatePacket ()Lnet/minecraft/network/protocol/Packet; h
	getUpdatePacket ()Lnet/minecraft/network/protocol/game/ClientboundBlockEntityDataPacket; j
	getUpdateTag ()Lnet/minecraft/nbt/CompoundTag; ao_
	load (Lnet/minecraft/nbt/CompoundTag;)V a
	saveAdditional (Lnet/minecraft/nbt/CompoundTag;)V b
	setFinalState (Ljava/lang/String;)V a
	setJoint (Lnet/minecraft/world/level/block/entity/JigsawBlockEntity$JointType;)V a
	setName (Lnet/minecraft/resources/ResourceLocation;)V a
	setPool (Lnet/minecraft/resources/ResourceKey;)V a
	setTarget (Lnet/minecraft/resources/ResourceLocation;)V b
net/minecraft/world/level/block/entity/JigsawBlockEntity$JointType dam$a
	$VALUES d
	ALIGNED b
	ROLLABLE a
	name c
	$values ()[Lnet/minecraft/world/level/block/entity/JigsawBlockEntity$JointType; b
	byName (Ljava/lang/String;)Ljava/util/Optional; a
	getSerializedName ()Ljava/lang/String; c
	getTranslatedName ()Lnet/minecraft/network/chat/Component; a
net/minecraft/world/level/block/entity/JukeboxBlockEntity dan
	SONG_END_PADDING c
	isPlaying h
	items d
	recordStartedTick g
	tickCount f
	ticksSinceLastEvent e
	canPlaceItem (ILnet/minecraft/world/item/ItemStack;)Z b
	canTakeItem (Lnet/minecraft/world/Container;ILnet/minecraft/world/item/ItemStack;)Z a
	getItem (I)Lnet/minecraft/world/item/ItemStack; a
	getMaxStackSize ()I ac_
	isRecordPlaying ()Z f
	load (Lnet/minecraft/nbt/CompoundTag;)V a
	playRecordTick (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/entity/JukeboxBlockEntity;)V a
	popOutRecord ()V i
	removeItem (II)Lnet/minecraft/world/item/ItemStack; a
	saveAdditional (Lnet/minecraft/nbt/CompoundTag;)V b
	setHasRecordBlockState (Lnet/minecraft/world/entity/Entity;Z)V a
	setItem (ILnet/minecraft/world/item/ItemStack;)V a
	setRecordWithoutPlaying (Lnet/minecraft/world/item/ItemStack;)V a
	shouldRecordStopPlaying (Lnet/minecraft/world/item/RecordItem;)Z a
	shouldSendJukeboxPlayingEvent ()Z w
	spawnMusicParticles (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)V a
	startPlaying ()V g
	stillValid (Lnet/minecraft/world/entity/player/Player;)Z a
	stopPlaying ()V v
	tick (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V b
net/minecraft/world/level/block/entity/LecternBlockEntity dao
	DATA_PAGE a
	NUM_DATA b
	NUM_SLOTS d
	SLOT_BOOK c
	book g
	bookAccess e
	dataAccess f
	page h
	pageCount i
	clearContent ()V a
	createCommandSourceStack (Lnet/minecraft/world/entity/player/Player;)Lnet/minecraft/commands/CommandSourceStack; a
	getBook ()Lnet/minecraft/world/item/ItemStack; c
	getDisplayName ()Lnet/minecraft/network/chat/Component; H_
	getPage ()I g
	getRedstoneSignal ()I i
	hasBook ()Z f
	load (Lnet/minecraft/nbt/CompoundTag;)V a
	onBookItemRemove ()V j
	onlyOpCanSetNbt ()Z t
	resolveBook (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/entity/player/Player;)Lnet/minecraft/world/item/ItemStack; b
	saveAdditional (Lnet/minecraft/nbt/CompoundTag;)V b
	setBook (Lnet/minecraft/world/item/ItemStack;)V a
	setBook (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/entity/player/Player;)V a
	setPage (I)V a
net/minecraft/world/level/block/entity/LidBlockEntity dap
	getOpenNess (F)F a
net/minecraft/world/level/block/entity/RandomizableContainerBlockEntity daq
	LOOT_TABLE_SEED_TAG e
	LOOT_TABLE_TAG d
	lootTable h
	lootTableSeed i
	canOpen (Lnet/minecraft/world/entity/player/Player;)Z d
	clearContent ()V a
	getItem (I)Lnet/minecraft/world/item/ItemStack; a
	getItems ()Lnet/minecraft/core/NonNullList; f
	isEmpty ()Z ab_
	removeItem (II)Lnet/minecraft/world/item/ItemStack; a
	removeItemNoUpdate (I)Lnet/minecraft/world/item/ItemStack; b
	setItem (ILnet/minecraft/world/item/ItemStack;)V a
	setItems (Lnet/minecraft/core/NonNullList;)V a
	setLootTable (Lnet/minecraft/resources/ResourceLocation;J)V a
	setLootTable (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPos;Lnet/minecraft/resources/ResourceLocation;)V a
	stillValid (Lnet/minecraft/world/entity/player/Player;)Z a
	tryLoadLootTable (Lnet/minecraft/nbt/CompoundTag;)Z d
	trySaveLootTable (Lnet/minecraft/nbt/CompoundTag;)Z e
	unpackLootTable (Lnet/minecraft/world/entity/player/Player;)V e
net/minecraft/world/level/block/entity/SculkCatalystBlockEntity dar
	catalystListener a
	getListener ()Lnet/minecraft/world/level/block/entity/SculkCatalystBlockEntity$CatalystListener; c
	getListener ()Lnet/minecraft/world/level/gameevent/GameEventListener; d
	load (Lnet/minecraft/nbt/CompoundTag;)V a
	saveAdditional (Lnet/minecraft/nbt/CompoundTag;)V b
	serverTick (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/entity/SculkCatalystBlockEntity;)V a
net/minecraft/world/level/block/entity/SculkCatalystBlockEntity$CatalystListener dar$a
	PULSE_TICKS a
	blockState c
	positionSource d
	sculkSpreader b
	bloom (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/util/RandomSource;)V a
	getDeliveryMode ()Lnet/minecraft/world/level/gameevent/GameEventListener$DeliveryMode; c
	getListenerRadius ()I b
	getListenerSource ()Lnet/minecraft/world/level/gameevent/PositionSource; a
	getSculkSpreader ()Lnet/minecraft/world/level/block/SculkSpreader; d
	handleGameEvent (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/level/gameevent/GameEvent;Lnet/minecraft/world/level/gameevent/GameEvent$Context;Lnet/minecraft/world/phys/Vec3;)Z a
	tryAwardItSpreadsAdvancement (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/LivingEntity;)V a
net/minecraft/world/level/block/entity/SculkSensorBlockEntity das
	LOGGER b
	lastVibrationFrequency g
	vibrationData c
	vibrationListener d
	vibrationUser e
	createVibrationUser ()Lnet/minecraft/world/level/gameevent/vibrations/VibrationSystem$User; c
	getLastVibrationFrequency ()I f
	getListener ()Lnet/minecraft/world/level/gameevent/GameEventListener; d
	getListener ()Lnet/minecraft/world/level/gameevent/vibrations/VibrationSystem$Listener; g
	getVibrationData ()Lnet/minecraft/world/level/gameevent/vibrations/VibrationSystem$Data; gb
	getVibrationUser ()Lnet/minecraft/world/level/gameevent/vibrations/VibrationSystem$User; gc
	load (Lnet/minecraft/nbt/CompoundTag;)V a
	saveAdditional (Lnet/minecraft/nbt/CompoundTag;)V b
	setLastVibrationFrequency (I)V a
net/minecraft/world/level/block/entity/SculkSensorBlockEntity$VibrationUser das$a
	LISTENER_RANGE b
	blockPos c
	positionSource a
	canReceiveVibration (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/gameevent/GameEvent;Lnet/minecraft/world/level/gameevent/GameEvent$Context;)Z a
	canTriggerAvoidVibration ()Z d
	getListenerRadius ()I a
	getPositionSource ()Lnet/minecraft/world/level/gameevent/PositionSource; b
	onDataChanged ()V e
	onReceiveVibration (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/gameevent/GameEvent;Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/entity/Entity;F)V a
	requiresAdjacentChunksToBeTicking ()Z f
net/minecraft/world/level/block/entity/SculkShriekerBlockEntity dat
	DARKNESS_RADIUS h
	LOGGER b
	SHRIEKING_TICKS i
	SOUND_BY_LEVEL j
	WARDEN_SPAWN_ATTEMPTS d
	WARDEN_SPAWN_RANGE_XZ e
	WARDEN_SPAWN_RANGE_Y g
	WARNING_SOUND_RADIUS c
	vibrationData m
	vibrationListener n
	vibrationUser l
	warningLevel k
	canRespond (Lnet/minecraft/server/level/ServerLevel;)Z b
	getListener ()Lnet/minecraft/world/level/gameevent/GameEventListener; d
	getListener ()Lnet/minecraft/world/level/gameevent/vibrations/VibrationSystem$Listener; c
	getVibrationData ()Lnet/minecraft/world/level/gameevent/vibrations/VibrationSystem$Data; gb
	getVibrationUser ()Lnet/minecraft/world/level/gameevent/vibrations/VibrationSystem$User; gc
	load (Lnet/minecraft/nbt/CompoundTag;)V a
	playWardenReplySound (Lnet/minecraft/world/level/Level;)V b
	saveAdditional (Lnet/minecraft/nbt/CompoundTag;)V b
	shriek (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/Entity;)V a
	tryGetPlayer (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/server/level/ServerPlayer; a
	tryRespond (Lnet/minecraft/server/level/ServerLevel;)V a
	tryShriek (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/server/level/ServerPlayer;)V a
	trySummonWarden (Lnet/minecraft/server/level/ServerLevel;)Z c
	tryToWarn (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/server/level/ServerPlayer;)Z b
net/minecraft/world/level/block/entity/SculkShriekerBlockEntity$VibrationUser dat$a
	LISTENER_RADIUS b
	positionSource c
	canReceiveVibration (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/gameevent/GameEvent;Lnet/minecraft/world/level/gameevent/GameEvent$Context;)Z a
	getListenableEvents ()Lnet/minecraft/tags/TagKey; c
	getListenerRadius ()I a
	getPositionSource ()Lnet/minecraft/world/level/gameevent/PositionSource; b
	onDataChanged ()V e
	onReceiveVibration (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/gameevent/GameEvent;Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/entity/Entity;F)V a
	requiresAdjacentChunksToBeTicking ()Z f
net/minecraft/world/level/block/entity/ShulkerBoxBlockEntity dau
	COLUMNS c
	CONTAINER_SIZE g
	EVENT_SET_OPEN_COUNT j
	ITEMS_TAG n
	MAX_LID_HEIGHT l
	MAX_LID_ROTATION m
	OPENING_TICK_LENGTH k
	ROWS f
	SLOTS r
	animationStatus u
	color x
	itemStacks s
	openCount t
	progress v
	progressOld w
	canPlaceItemThroughFace (ILnet/minecraft/world/item/ItemStack;Lnet/minecraft/core/Direction;)Z a
	canTakeItemThroughFace (ILnet/minecraft/world/item/ItemStack;Lnet/minecraft/core/Direction;)Z b
	createMenu (ILnet/minecraft/world/entity/player/Inventory;)Lnet/minecraft/world/inventory/AbstractContainerMenu; a
	doNeighborUpdates (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V d
	getAnimationStatus ()Lnet/minecraft/world/level/block/entity/ShulkerBoxBlockEntity$AnimationStatus; i
	getBoundingBox (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/phys/AABB; a
	getColor ()Lnet/minecraft/world/item/DyeColor; j
	getContainerSize ()I b
	getDefaultName ()Lnet/minecraft/network/chat/Component; g
	getItems ()Lnet/minecraft/core/NonNullList; f
	getProgress (F)F a
	getSlotsForFace (Lnet/minecraft/core/Direction;)[I a
	isClosed ()Z v
	load (Lnet/minecraft/nbt/CompoundTag;)V a
	loadFromTag (Lnet/minecraft/nbt/CompoundTag;)V f
	moveCollidedEntities (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V c
	saveAdditional (Lnet/minecraft/nbt/CompoundTag;)V b
	setItems (Lnet/minecraft/core/NonNullList;)V a
	startOpen (Lnet/minecraft/world/entity/player/Player;)V d_
	stopOpen (Lnet/minecraft/world/entity/player/Player;)V c
	tick (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/entity/ShulkerBoxBlockEntity;)V a
	triggerEvent (II)Z a_
	updateAnimation (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V b
net/minecraft/world/level/block/entity/ShulkerBoxBlockEntity$AnimationStatus dau$a
	$VALUES e
	CLOSED a
	CLOSING d
	OPENED c
	OPENING b
	$values ()[Lnet/minecraft/world/level/block/entity/ShulkerBoxBlockEntity$AnimationStatus; a
net/minecraft/world/level/block/entity/SignBlockEntity dav
	LOGGER a
	MAX_TEXT_LINE_WIDTH b
	TEXT_LINE_HEIGHT c
	backText f
	frontText e
	isWaxed g
	playerWhoMayEdit d
	canExecuteClickCommands (ZLnet/minecraft/world/entity/player/Player;)Z a
	clearInvalidPlayerWhoMayEdit (Lnet/minecraft/world/level/block/entity/SignBlockEntity;Lnet/minecraft/world/level/Level;Ljava/util/UUID;)V a
	createCommandSourceStack (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/commands/CommandSourceStack; a
	createDefaultSignText ()Lnet/minecraft/world/level/block/entity/SignText; f
	executeClickCommandsIfPresent (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Z)Z a
	getBackText ()Lnet/minecraft/world/level/block/entity/SignText; i
	getFrontText ()Lnet/minecraft/world/level/block/entity/SignText; g
	getMaxTextLineWidth ()I d
	getPlayerWhoMayEdit ()Ljava/util/UUID; v
	getText (Z)Lnet/minecraft/world/level/block/entity/SignText; a
	getTextFacingPlayer (Lnet/minecraft/world/entity/player/Player;)Lnet/minecraft/world/level/block/entity/SignText; b
	getTextLineHeight ()I c
	getUpdatePacket ()Lnet/minecraft/network/protocol/Packet; h
	getUpdatePacket ()Lnet/minecraft/network/protocol/game/ClientboundBlockEntityDataPacket; j
	getUpdateTag ()Lnet/minecraft/nbt/CompoundTag; ao_
	isFacingFrontText (Lnet/minecraft/world/entity/player/Player;)Z a
	isWaxed ()Z w
	load (Lnet/minecraft/nbt/CompoundTag;)V a
	loadLine (Lnet/minecraft/network/chat/Component;)Lnet/minecraft/network/chat/Component; a
	loadLines (Lnet/minecraft/world/level/block/entity/SignText;)Lnet/minecraft/world/level/block/entity/SignText; a
	markUpdated ()V x
	onlyOpCanSetNbt ()Z t
	playerIsTooFarAwayToEdit (Ljava/util/UUID;)Z b
	saveAdditional (Lnet/minecraft/nbt/CompoundTag;)V b
	setAllowedPlayerEditor (Ljava/util/UUID;)V a
	setBackText (Lnet/minecraft/world/level/block/entity/SignText;)Z b
	setFrontText (Lnet/minecraft/world/level/block/entity/SignText;)Z c
	setMessages (Lnet/minecraft/world/entity/player/Player;Ljava/util/List;Lnet/minecraft/world/level/block/entity/SignText;)Lnet/minecraft/world/level/block/entity/SignText; a
	setText (Lnet/minecraft/world/level/block/entity/SignText;Z)Z a
	setWaxed (Z)Z b
	tick (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/entity/SignBlockEntity;)V a
	updateSignText (Lnet/minecraft/world/entity/player/Player;ZLjava/util/List;)V a
	updateText (Ljava/util/function/UnaryOperator;Z)Z a
net/minecraft/world/level/block/entity/SignText daw
	DIRECT_CODEC a
	LINES b
	LINES_CODEC c
	color f
	filteredMessages e
	hasGlowingText g
	messages d
	renderMessagedFiltered i
	renderMessages h
	emptyMessages ()[Lnet/minecraft/network/chat/Component; c
	getColor ()Lnet/minecraft/world/item/DyeColor; b
	getMessage (IZ)Lnet/minecraft/network/chat/Component; a
	getMessages (Z)[Lnet/minecraft/network/chat/Component; b
	getOnlyFilteredMessages ()Ljava/util/Optional; d
	getRenderMessages (ZLjava/util/function/Function;)[Lnet/minecraft/util/FormattedCharSequence; a
	hasAnyClickCommands (Lnet/minecraft/world/entity/player/Player;)Z b
	hasGlowingText ()Z a
	hasMessage (Lnet/minecraft/world/entity/player/Player;)Z a
	load ([Lnet/minecraft/network/chat/Component;Ljava/util/Optional;Lnet/minecraft/world/item/DyeColor;Z)Lnet/minecraft/world/level/block/entity/SignText; a
	populateFilteredMessagesWithRawMessages ([Lnet/minecraft/network/chat/Component;[Lnet/minecraft/network/chat/Component;)V a
	setColor (Lnet/minecraft/world/item/DyeColor;)Lnet/minecraft/world/level/block/entity/SignText; a
	setHasGlowingText (Z)Lnet/minecraft/world/level/block/entity/SignText; a
	setMessage (ILnet/minecraft/network/chat/Component;)Lnet/minecraft/world/level/block/entity/SignText; a
	setMessage (ILnet/minecraft/network/chat/Component;Lnet/minecraft/network/chat/Component;)Lnet/minecraft/world/level/block/entity/SignText; a
net/minecraft/world/level/block/entity/SkullBlockEntity dax
	TAG_NOTE_BLOCK_SOUND b
	TAG_SKULL_OWNER a
	animationTickCount h
	isAnimating i
	mainThreadExecutor e
	noteBlockSound g
	owner f
	profileCache c
	sessionService d
	animation (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/entity/SkullBlockEntity;)V a
	clear ()V c
	getAnimation (F)F a
	getNoteBlockSound ()Lnet/minecraft/resources/ResourceLocation; f
	getOwnerProfile ()Lcom/mojang/authlib/GameProfile; d
	getUpdatePacket ()Lnet/minecraft/network/protocol/Packet; h
	getUpdatePacket ()Lnet/minecraft/network/protocol/game/ClientboundBlockEntityDataPacket; g
	getUpdateTag ()Lnet/minecraft/nbt/CompoundTag; ao_
	load (Lnet/minecraft/nbt/CompoundTag;)V a
	saveAdditional (Lnet/minecraft/nbt/CompoundTag;)V b
	setOwner (Lcom/mojang/authlib/GameProfile;)V a
	setup (Lnet/minecraft/server/Services;Ljava/util/concurrent/Executor;)V a
	updateGameprofile (Lcom/mojang/authlib/GameProfile;Ljava/util/function/Consumer;)V a
	updateOwnerProfile ()V i
net/minecraft/world/level/block/entity/SmokerBlockEntity day
	createMenu (ILnet/minecraft/world/entity/player/Inventory;)Lnet/minecraft/world/inventory/AbstractContainerMenu; a
	getBurnDuration (Lnet/minecraft/world/item/ItemStack;)I a
	getDefaultName ()Lnet/minecraft/network/chat/Component; g
net/minecraft/world/level/block/entity/SpawnerBlockEntity daz
	spawner a
	clientTick (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/entity/SpawnerBlockEntity;)V a
	getSpawner ()Lnet/minecraft/world/level/BaseSpawner; d
	getUpdatePacket ()Lnet/minecraft/network/protocol/Packet; h
	getUpdatePacket ()Lnet/minecraft/network/protocol/game/ClientboundBlockEntityDataPacket; c
	getUpdateTag ()Lnet/minecraft/nbt/CompoundTag; ao_
	load (Lnet/minecraft/nbt/CompoundTag;)V a
	onlyOpCanSetNbt ()Z t
	saveAdditional (Lnet/minecraft/nbt/CompoundTag;)V b
	serverTick (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/entity/SpawnerBlockEntity;)V b
	setEntityId (Lnet/minecraft/world/entity/EntityType;Lnet/minecraft/util/RandomSource;)V a
	triggerEvent (II)Z a_
net/minecraft/world/level/block/entity/StructureBlockEntity dba
	AUTHOR_TAG c
	MAX_OFFSET_PER_AXIS a
	MAX_SIZE_PER_AXIS b
	SCAN_CORNER_BLOCKS_RANGE d
	author f
	ignoreEntities m
	integrity t
	metaData g
	mirror j
	mode l
	powered n
	rotation k
	seed u
	showAir r
	showBoundingBox s
	structureName e
	structurePos h
	structureSize i
	calculateEnclosingBoundingBox (Lnet/minecraft/core/BlockPos;Ljava/util/stream/Stream;)Ljava/util/Optional; a
	createRandom (J)Lnet/minecraft/util/RandomSource; b
	createdBy (Lnet/minecraft/world/entity/LivingEntity;)V a
	detectSize ()Z C
	getIntegrity ()F A
	getMetaData ()Ljava/lang/String; x
	getMirror ()Lnet/minecraft/world/level/block/Mirror; v
	getMode ()Lnet/minecraft/world/level/block/state/properties/StructureMode; y
	getRelatedCorners (Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Ljava/util/stream/Stream; a
	getRotation ()Lnet/minecraft/world/level/block/Rotation; w
	getSeed ()J B
	getShowAir ()Z H
	getShowBoundingBox ()Z I
	getStructureName ()Ljava/lang/String; d
	getStructurePath ()Ljava/lang/String; f
	getStructurePos ()Lnet/minecraft/core/BlockPos; i
	getStructureSize ()Lnet/minecraft/core/Vec3i; j
	getUpdatePacket ()Lnet/minecraft/network/protocol/Packet; h
	getUpdatePacket ()Lnet/minecraft/network/protocol/game/ClientboundBlockEntityDataPacket; c
	getUpdateTag ()Lnet/minecraft/nbt/CompoundTag; ao_
	hasStructureName ()Z g
	isIgnoreEntities ()Z z
	isPowered ()Z G
	isStructureLoadable ()Z F
	load (Lnet/minecraft/nbt/CompoundTag;)V a
	loadStructure (Lnet/minecraft/server/level/ServerLevel;)Z a
	loadStructure (Lnet/minecraft/server/level/ServerLevel;Z)Z a
	loadStructure (Lnet/minecraft/server/level/ServerLevel;ZLnet/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplate;)Z a
	saveAdditional (Lnet/minecraft/nbt/CompoundTag;)V b
	saveStructure ()Z D
	saveStructure (Z)Z b
	setIgnoreEntities (Z)V a
	setIntegrity (F)V a
	setMetaData (Ljava/lang/String;)V b
	setMirror (Lnet/minecraft/world/level/block/Mirror;)V a
	setMode (Lnet/minecraft/world/level/block/state/properties/StructureMode;)V a
	setPowered (Z)V c
	setRotation (Lnet/minecraft/world/level/block/Rotation;)V a
	setSeed (J)V a
	setShowAir (Z)V d
	setShowBoundingBox (Z)V e
	setStructureName (Ljava/lang/String;)V a
	setStructureName (Lnet/minecraft/resources/ResourceLocation;)V a
	setStructurePos (Lnet/minecraft/core/BlockPos;)V a
	setStructureSize (Lnet/minecraft/core/Vec3i;)V a
	unloadStructure ()V E
	updateBlockState ()V J
	usedBy (Lnet/minecraft/world/entity/player/Player;)Z a
net/minecraft/world/level/block/entity/StructureBlockEntity$UpdateType dba$a
	$VALUES e
	LOAD_AREA c
	SAVE_AREA b
	SCAN_AREA d
	UPDATE_DATA a
	$values ()[Lnet/minecraft/world/level/block/entity/StructureBlockEntity$UpdateType; a
net/minecraft/world/level/block/entity/TheEndGatewayBlockEntity dbb
	ATTENTION_INTERVAL d
	COOLDOWN_TIME c
	EVENT_COOLDOWN e
	GATEWAY_HEIGHT_ABOVE_SURFACE f
	LOGGER a
	SPAWN_TIME b
	age g
	exactTeleport j
	exitPortal i
	teleportCooldown h
	beamAnimationTick (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/entity/TheEndGatewayBlockEntity;)V a
	canEntityTeleport (Lnet/minecraft/world/entity/Entity;)Z a
	findExitPortalXZPosTentative (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/phys/Vec3; b
	findExitPosition (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/core/BlockPos; a
	findOrCreateValidTeleportPos (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/core/BlockPos; a
	findTallestBlock (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;IZ)Lnet/minecraft/core/BlockPos; a
	findValidSpawnInChunk (Lnet/minecraft/world/level/chunk/LevelChunk;)Lnet/minecraft/core/BlockPos; a
	getChunk (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/phys/Vec3;)Lnet/minecraft/world/level/chunk/LevelChunk; a
	getCooldownPercent (F)F b
	getParticleAmount ()I g
	getSpawnPercent (F)F a
	getUpdatePacket ()Lnet/minecraft/network/protocol/Packet; h
	getUpdatePacket ()Lnet/minecraft/network/protocol/game/ClientboundBlockEntityDataPacket; f
	getUpdateTag ()Lnet/minecraft/nbt/CompoundTag; ao_
	isChunkEmpty (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/phys/Vec3;)Z a
	isCoolingDown ()Z d
	isSpawning ()Z c
	load (Lnet/minecraft/nbt/CompoundTag;)V a
	saveAdditional (Lnet/minecraft/nbt/CompoundTag;)V b
	setExitPosition (Lnet/minecraft/core/BlockPos;Z)V a
	shouldRenderFace (Lnet/minecraft/core/Direction;)Z a
	spawnGatewayPortal (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/levelgen/feature/configurations/EndGatewayConfiguration;)V a
	teleportEntity (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/level/block/entity/TheEndGatewayBlockEntity;)V a
	teleportTick (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/entity/TheEndGatewayBlockEntity;)V b
	triggerCooldown (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/entity/TheEndGatewayBlockEntity;)V c
	triggerEvent (II)Z a_
net/minecraft/world/level/block/entity/TheEndPortalBlockEntity dbc
	shouldRenderFace (Lnet/minecraft/core/Direction;)Z a
net/minecraft/world/level/block/entity/TickingBlockEntity dbd
	getPos ()Lnet/minecraft/core/BlockPos; c
	getType ()Ljava/lang/String; d
	isRemoved ()Z b
	tick ()V a
net/minecraft/world/level/block/entity/TrappedChestBlockEntity dbe
	signalOpenCount (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;II)V a
net/minecraft/world/level/block/grower/AbstractMegaTreeGrower dbg
	getConfiguredMegaFeature (Lnet/minecraft/util/RandomSource;)Lnet/minecraft/resources/ResourceKey; a
	growTree (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/util/RandomSource;)Z a
	isTwoByTwoSapling (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;II)Z a
	placeMega (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/util/RandomSource;II)Z a
net/minecraft/world/level/block/grower/AbstractTreeGrower dbh
	getConfiguredFeature (Lnet/minecraft/util/RandomSource;Z)Lnet/minecraft/resources/ResourceKey; a
	growTree (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/util/RandomSource;)Z a
	hasFlowers (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;)Z a
net/minecraft/world/level/block/grower/AcaciaTreeGrower dbi
	getConfiguredFeature (Lnet/minecraft/util/RandomSource;Z)Lnet/minecraft/resources/ResourceKey; a
net/minecraft/world/level/block/grower/AzaleaTreeGrower dbj
	getConfiguredFeature (Lnet/minecraft/util/RandomSource;Z)Lnet/minecraft/resources/ResourceKey; a
net/minecraft/world/level/block/grower/BirchTreeGrower dbk
	getConfiguredFeature (Lnet/minecraft/util/RandomSource;Z)Lnet/minecraft/resources/ResourceKey; a
net/minecraft/world/level/block/grower/CherryTreeGrower dbl
	getConfiguredFeature (Lnet/minecraft/util/RandomSource;Z)Lnet/minecraft/resources/ResourceKey; a
net/minecraft/world/level/block/grower/DarkOakTreeGrower dbm
	getConfiguredFeature (Lnet/minecraft/util/RandomSource;Z)Lnet/minecraft/resources/ResourceKey; a
	getConfiguredMegaFeature (Lnet/minecraft/util/RandomSource;)Lnet/minecraft/resources/ResourceKey; a
net/minecraft/world/level/block/grower/JungleTreeGrower dbn
	getConfiguredFeature (Lnet/minecraft/util/RandomSource;Z)Lnet/minecraft/resources/ResourceKey; a
	getConfiguredMegaFeature (Lnet/minecraft/util/RandomSource;)Lnet/minecraft/resources/ResourceKey; a
net/minecraft/world/level/block/grower/MangroveTreeGrower dbo
	tallProbability a
	getConfiguredFeature (Lnet/minecraft/util/RandomSource;Z)Lnet/minecraft/resources/ResourceKey; a
net/minecraft/world/level/block/grower/OakTreeGrower dbp
	getConfiguredFeature (Lnet/minecraft/util/RandomSource;Z)Lnet/minecraft/resources/ResourceKey; a
net/minecraft/world/level/block/grower/SpruceTreeGrower dbq
	getConfiguredFeature (Lnet/minecraft/util/RandomSource;Z)Lnet/minecraft/resources/ResourceKey; a
	getConfiguredMegaFeature (Lnet/minecraft/util/RandomSource;)Lnet/minecraft/resources/ResourceKey; a
net/minecraft/world/level/block/piston/MovingPistonBlock dbt
	FACING a
	TYPE b
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	destroy (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V a
	getBlockEntity (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/piston/PistonMovingBlockEntity; a
	getCloneItemStack (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/item/ItemStack; a
	getCollisionShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; c
	getDrops (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/storage/loot/LootParams$Builder;)Ljava/util/List; a
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	getTicker (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/entity/BlockEntityType;)Lnet/minecraft/world/level/block/entity/BlockEntityTicker; a
	isPathfindable (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/pathfinder/PathComputationType;)Z a
	mirror (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Mirror;)Lnet/minecraft/world/level/block/state/BlockState; a
	newBlockEntity (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/entity/BlockEntity; a
	newMovingBlockEntity (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;ZZ)Lnet/minecraft/world/level/block/entity/BlockEntity; a
	onRemove (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)V a
	rotate (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Rotation;)Lnet/minecraft/world/level/block/state/BlockState; a
	use (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;Lnet/minecraft/world/phys/BlockHitResult;)Lnet/minecraft/world/InteractionResult; a
net/minecraft/world/level/block/piston/PistonBaseBlock dbu
	DOWN_AABB l
	EAST_AABB g
	EXTENDED b
	NORTH_AABB j
	PLATFORM_THICKNESS f
	SOUTH_AABB i
	TRIGGER_CONTRACT d
	TRIGGER_DROP e
	TRIGGER_EXTEND c
	UP_AABB k
	WEST_AABB h
	isSticky m
	checkIfExtend (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getNeighborSignal (Lnet/minecraft/world/level/SignalGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;)Z a
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	getStateForPlacement (Lnet/minecraft/world/item/context/BlockPlaceContext;)Lnet/minecraft/world/level/block/state/BlockState; a
	isPathfindable (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/pathfinder/PathComputationType;)Z a
	isPushable (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;ZLnet/minecraft/core/Direction;)Z a
	mirror (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Mirror;)Lnet/minecraft/world/level/block/state/BlockState; a
	moveBlocks (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;Z)Z a
	neighborChanged (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Block;Lnet/minecraft/core/BlockPos;Z)V a
	onPlace (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)V b
	rotate (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Rotation;)Lnet/minecraft/world/level/block/state/BlockState; a
	setPlacedBy (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/entity/LivingEntity;Lnet/minecraft/world/item/ItemStack;)V a
	triggerEvent (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;II)Z a
	useShapeForLightOcclusion (Lnet/minecraft/world/level/block/state/BlockState;)Z g_
net/minecraft/world/level/block/piston/PistonHeadBlock dbv
	AABB_OFFSET k
	DOWN_AABB j
	DOWN_ARM_AABB D
	EAST_AABB e
	EAST_ARM_AABB G
	EDGE_MAX m
	EDGE_MIN l
	NORTH_AABB h
	NORTH_ARM_AABB F
	PLATFORM d
	SHAPES_LONG P
	SHAPES_SHORT O
	SHORT c
	SHORT_DOWN_ARM_AABB J
	SHORT_EAST_ARM_AABB M
	SHORT_NORTH_ARM_AABB L
	SHORT_SOUTH_ARM_AABB K
	SHORT_UP_ARM_AABB I
	SHORT_WEST_ARM_AABB N
	SOUTH_AABB g
	SOUTH_ARM_AABB E
	TYPE b
	UP_AABB i
	UP_ARM_AABB n
	WEST_AABB f
	WEST_ARM_AABB H
	calculateShape (Lnet/minecraft/core/Direction;Z)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	canSurvive (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;)Z a
	createBlockStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getCloneItemStack (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/item/ItemStack; a
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	isFittingBase (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/state/BlockState;)Z a
	isPathfindable (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/pathfinder/PathComputationType;)Z a
	makeShapes (Z)[Lnet/minecraft/world/phys/shapes/VoxelShape; a
	mirror (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Mirror;)Lnet/minecraft/world/level/block/state/BlockState; a
	neighborChanged (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Block;Lnet/minecraft/core/BlockPos;Z)V a
	onRemove (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)V a
	playerWillDestroy (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/entity/player/Player;)V a
	rotate (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Rotation;)Lnet/minecraft/world/level/block/state/BlockState; a
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
	useShapeForLightOcclusion (Lnet/minecraft/world/level/block/state/BlockState;)Z g_
net/minecraft/world/level/block/piston/PistonMath dbw
	getMovementArea (Lnet/minecraft/world/phys/AABB;Lnet/minecraft/core/Direction;D)Lnet/minecraft/world/phys/AABB; a
net/minecraft/world/level/block/piston/PistonMovingBlockEntity dbx
	NOCLIP h
	PUSH_OFFSET c
	TICKS_TO_EXTEND b
	TICK_MOVEMENT a
	deathTicks l
	direction e
	extending f
	isSourcePiston g
	lastTicked k
	movedState d
	progress i
	progressO j
	finalTick ()V j
	fixEntityWithinPistonBase (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/Entity;Lnet/minecraft/core/Direction;D)V a
	getCollisionRelatedBlockState ()Lnet/minecraft/world/level/block/state/BlockState; w
	getCollisionShape (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	getDirection ()Lnet/minecraft/core/Direction; d
	getExtendedProgress (F)F e
	getLastTicked ()J v
	getMovedState ()Lnet/minecraft/world/level/block/state/BlockState; i
	getMovement (Lnet/minecraft/world/phys/AABB;Lnet/minecraft/core/Direction;Lnet/minecraft/world/phys/AABB;)D a
	getMovementDirection ()Lnet/minecraft/core/Direction; g
	getProgress (F)F a
	getUpdateTag ()Lnet/minecraft/nbt/CompoundTag; ao_
	getXOff (F)F b
	getYOff (F)F c
	getZOff (F)F d
	isExtending ()Z c
	isSourcePiston ()Z f
	isStickyForEntities ()Z x
	load (Lnet/minecraft/nbt/CompoundTag;)V a
	matchesStickyCritera (Lnet/minecraft/world/phys/AABB;Lnet/minecraft/world/entity/Entity;Lnet/minecraft/core/BlockPos;)Z a
	moveByPositionAndProgress (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/AABB;Lnet/minecraft/world/level/block/piston/PistonMovingBlockEntity;)Lnet/minecraft/world/phys/AABB; a
	moveCollidedEntities (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;FLnet/minecraft/world/level/block/piston/PistonMovingBlockEntity;)V a
	moveEntityByPiston (Lnet/minecraft/core/Direction;Lnet/minecraft/world/entity/Entity;DLnet/minecraft/core/Direction;)V a
	moveStuckEntities (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;FLnet/minecraft/world/level/block/piston/PistonMovingBlockEntity;)V b
	saveAdditional (Lnet/minecraft/nbt/CompoundTag;)V b
	setLevel (Lnet/minecraft/world/level/Level;)V a
	tick (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/piston/PistonMovingBlockEntity;)V a
net/minecraft/world/level/block/piston/PistonStructureResolver dby
	MAX_PUSH_DEPTH a
	extending d
	level b
	pistonDirection i
	pistonPos c
	pushDirection f
	startPos e
	toDestroy h
	toPush g
	addBlockLine (Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;)Z a
	addBranchingBlocks (Lnet/minecraft/core/BlockPos;)Z a
	canStickToEachOther (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/state/BlockState;)Z a
	getPushDirection ()Lnet/minecraft/core/Direction; b
	getToDestroy ()Ljava/util/List; d
	getToPush ()Ljava/util/List; c
	isSticky (Lnet/minecraft/world/level/block/state/BlockState;)Z a
	reorderListAtCollision (II)V a
	resolve ()Z a
net/minecraft/world/level/block/state/BlockBehaviour dca
	UPDATE_SHAPE_ORDER aD
	drops aO
	dynamicShape aL
	explosionResistance aF
	friction aI
	hasCollision aE
	isRandomlyTicking aG
	jumpFactor aK
	properties aN
	requiredFeatures aM
	soundType aH
	speedFactor aJ
	asBlock ()Lnet/minecraft/world/level/block/Block; p
	asItem ()Lnet/minecraft/world/item/Item; k
	attack (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/player/Player;)V a
	canBeReplaced (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/item/context/BlockPlaceContext;)Z a
	canBeReplaced (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/material/Fluid;)Z a
	canSurvive (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;)Z a
	defaultDestroyTime ()F t
	defaultMapColor ()Lnet/minecraft/world/level/material/MapColor; s
	entityInside (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/Entity;)V a
	getAnalogOutputSignal (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)I a
	getBlockSupportShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/phys/shapes/VoxelShape; b_
	getCollisionShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; c
	getDestroyProgress (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)F a
	getDirectSignal (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;)I b
	getDrops (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/storage/loot/LootParams$Builder;)Ljava/util/List; a
	getFluidState (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/material/FluidState; c_
	getInteractionShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	getLightBlock (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)I g
	getLootTable ()Lnet/minecraft/resources/ResourceLocation; r
	getMaxHorizontalOffset ()F al_
	getMaxVerticalOffset ()F an_
	getMenuProvider (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/MenuProvider; b
	getOcclusionShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/phys/shapes/VoxelShape; f
	getRenderShape (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/RenderShape; b_
	getSeed (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/BlockPos;)J a
	getShadeBrightness (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)F b
	getShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	getSignal (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;)I a
	getVisualShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; b
	hasAnalogOutputSignal (Lnet/minecraft/world/level/block/state/BlockState;)Z d_
	isCollisionShapeFullBlock (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Z a_
	isOcclusionShapeFullBlock (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Z h
	isPathfindable (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/pathfinder/PathComputationType;)Z a
	isSignalSource (Lnet/minecraft/world/level/block/state/BlockState;)Z f_
	mirror (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Mirror;)Lnet/minecraft/world/level/block/state/BlockState; a
	neighborChanged (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Block;Lnet/minecraft/core/BlockPos;Z)V a
	onPlace (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)V b
	onProjectileHit (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/phys/BlockHitResult;Lnet/minecraft/world/entity/projectile/Projectile;)V a
	onRemove (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)V a
	randomTick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Lnet/minecraft/util/RandomSource;)V b
	requiredFeatures ()Lnet/minecraft/world/flag/FeatureFlagSet; m
	rotate (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/Rotation;)Lnet/minecraft/world/level/block/state/BlockState; a
	skipRendering (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;)Z a
	spawnAfterBreak (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/item/ItemStack;Z)V a
	tick (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Lnet/minecraft/util/RandomSource;)V a
	triggerEvent (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;II)Z a
	updateIndirectNeighbourShapes (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;II)V a
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
	use (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;Lnet/minecraft/world/phys/BlockHitResult;)Lnet/minecraft/world/InteractionResult; a
	useShapeForLightOcclusion (Lnet/minecraft/world/level/block/state/BlockState;)Z g_
net/minecraft/world/level/block/state/BlockBehaviour$BlockStateBase dca$a
	cache a
	canOcclude p
	destroySpeed n
	emissiveRendering u
	fluidState z
	hasPostProcess t
	ignitedByLava i
	instrument x
	isAir h
	isRandomlyTicking A
	isRedstoneConductor q
	isSuffocating r
	isViewBlocking s
	legacySolid k
	lightEmission b
	liquid j
	mapColor m
	offsetFunction v
	pushReaction l
	replaceable y
	requiresCorrectToolForDrops o
	spawnParticlesOnBreak w
	useShapeForLightOcclusion g
	asState ()Lnet/minecraft/world/level/block/state/BlockState; x
	attack (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/player/Player;)V a
	blocksMotion ()Z d
	calculateSolid ()Z D
	canBeReplaced ()Z r
	canBeReplaced (Lnet/minecraft/world/item/context/BlockPlaceContext;)Z a
	canBeReplaced (Lnet/minecraft/world/level/material/Fluid;)Z a
	canOcclude ()Z p
	canSurvive (Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;)Z a
	emissiveRendering (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Z e
	entityCanStandOn (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/Entity;)Z a
	entityCanStandOnFace (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/Entity;Lnet/minecraft/core/Direction;)Z a
	entityInside (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/Entity;)V a
	getAnalogOutputSignal (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)I a
	getBlock ()Lnet/minecraft/world/level/block/Block; b
	getBlockHolder ()Lnet/minecraft/core/Holder; c
	getBlockSupportShape (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/phys/shapes/VoxelShape; l
	getCollisionShape (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/phys/shapes/VoxelShape; k
	getCollisionShape (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; b
	getDestroyProgress (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)F a
	getDestroySpeed (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)F h
	getDirectSignal (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;)I c
	getDrops (Lnet/minecraft/world/level/storage/loot/LootParams$Builder;)Ljava/util/List; a
	getFaceOcclusionShape (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	getFluidState ()Lnet/minecraft/world/level/material/FluidState; u
	getInteractionShape (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/phys/shapes/VoxelShape; m
	getLightBlock (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)I b
	getLightEmission ()I h
	getMapColor (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/material/MapColor; d
	getMenuProvider (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/MenuProvider; b
	getOcclusionShape (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/phys/shapes/VoxelShape; c
	getOffset (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/phys/Vec3; n
	getPistonPushReaction ()Lnet/minecraft/world/level/material/PushReaction; o
	getRenderShape ()Lnet/minecraft/world/level/block/RenderShape; l
	getSeed (Lnet/minecraft/core/BlockPos;)J a
	getShadeBrightness (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)F f
	getShape (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/phys/shapes/VoxelShape; j
	getShape (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	getSignal (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;)I b
	getSoundType ()Lnet/minecraft/world/level/block/SoundType; w
	getTags ()Ljava/util/stream/Stream; s
	getTicker (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/level/block/entity/BlockEntityType;)Lnet/minecraft/world/level/block/entity/BlockEntityTicker; a
	getVisualShape (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/phys/shapes/CollisionContext;)Lnet/minecraft/world/phys/shapes/VoxelShape; c
	hasAnalogOutputSignal ()Z n
	hasBlockEntity ()Z t
	hasLargeCollisionShape ()Z f
	hasOffsetFunction ()Z q
	hasPostProcess (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Z q
	ignitedByLava ()Z j
	initCache ()V a
	instrument ()Lnet/minecraft/world/level/block/state/properties/NoteBlockInstrument; A
	is (Lnet/minecraft/core/HolderSet;)Z a
	is (Lnet/minecraft/tags/TagKey;)Z a
	is (Lnet/minecraft/tags/TagKey;Ljava/util/function/Predicate;)Z a
	is (Lnet/minecraft/world/level/block/Block;)Z a
	isAir ()Z i
	isCollisionShapeFullBlock (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Z r
	isFaceSturdy (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;)Z d
	isFaceSturdy (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/SupportType;)Z a
	isPathfindable (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/pathfinder/PathComputationType;)Z a
	isRandomlyTicking ()Z v
	isRedstoneConductor (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Z g
	isSignalSource ()Z m
	isSolid ()Z e
	isSolidRender (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Z i
	isSuffocating (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Z o
	isValidSpawn (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/EntityType;)Z a
	isViewBlocking (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Z p
	liquid ()Z k
	mirror (Lnet/minecraft/world/level/block/Mirror;)Lnet/minecraft/world/level/block/state/BlockState; a
	neighborChanged (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Block;Lnet/minecraft/core/BlockPos;Z)V a
	onPlace (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)V a
	onProjectileHit (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/phys/BlockHitResult;Lnet/minecraft/world/entity/projectile/Projectile;)V a
	onRemove (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)V b
	propagatesSkylightDown (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Z a
	randomTick (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Lnet/minecraft/util/RandomSource;)V b
	requiresCorrectToolForDrops ()Z y
	rotate (Lnet/minecraft/world/level/block/Rotation;)Lnet/minecraft/world/level/block/state/BlockState; a
	shouldSpawnParticlesOnBreak ()Z z
	skipRendering (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;)Z a
	spawnAfterBreak (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/item/ItemStack;Z)V a
	tick (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Lnet/minecraft/util/RandomSource;)V a
	triggerEvent (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;II)Z a
	updateIndirectNeighbourShapes (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;I)V b
	updateIndirectNeighbourShapes (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;II)V b
	updateNeighbourShapes (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;I)V a
	updateNeighbourShapes (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;II)V a
	updateShape (Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
	use (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/InteractionHand;Lnet/minecraft/world/phys/BlockHitResult;)Lnet/minecraft/world/InteractionResult; a
	useShapeForLightOcclusion ()Z g
net/minecraft/world/level/block/state/BlockBehaviour$BlockStateBase$Cache dca$a$a
	DIRECTIONS e
	SUPPORT_TYPE_COUNT f
	collisionShape b
	faceSturdy j
	isCollisionShapeFullBlock d
	largeCollisionShape c
	lightBlock h
	occlusionShapes i
	propagatesSkylightDown g
	solidRender a
	getFaceSupportIndex (Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/SupportType;)I b
	isFaceSturdy (Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/SupportType;)Z a
net/minecraft/world/level/block/state/BlockBehaviour$OffsetFunction dca$b
net/minecraft/world/level/block/state/BlockBehaviour$OffsetType dca$c
	$VALUES d
	NONE a
	XYZ c
	XZ b
	$values ()[Lnet/minecraft/world/level/block/state/BlockBehaviour$OffsetType; a
net/minecraft/world/level/block/state/BlockBehaviour$Properties dca$d
	canOcclude m
	destroyTime f
	drops l
	dynamicShape C
	emissiveRendering B
	explosionResistance e
	forceSolidOff q
	forceSolidOn r
	friction i
	hasCollision b
	hasPostProcess A
	ignitedByLava o
	instrument u
	isAir n
	isRandomlyTicking h
	isRedstoneConductor x
	isSuffocating y
	isValidSpawn w
	isViewBlocking z
	jumpFactor k
	lightEmission d
	liquid p
	mapColor a
	offsetFunction E
	pushReaction s
	replaceable v
	requiredFeatures D
	requiresCorrectToolForDrops g
	soundType c
	spawnParticlesOnBreak t
	speedFactor j
	air ()Lnet/minecraft/world/level/block/state/BlockBehaviour$Properties; l
	copy (Lnet/minecraft/world/level/block/state/BlockBehaviour;)Lnet/minecraft/world/level/block/state/BlockBehaviour$Properties; a
	destroyTime (F)Lnet/minecraft/world/level/block/state/BlockBehaviour$Properties; e
	dropsLike (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/world/level/block/state/BlockBehaviour$Properties; a
	dynamicShape ()Lnet/minecraft/world/level/block/state/BlockBehaviour$Properties; f
	emissiveRendering (Lnet/minecraft/world/level/block/state/BlockBehaviour$StatePredicate;)Lnet/minecraft/world/level/block/state/BlockBehaviour$Properties; e
	explosionResistance (F)Lnet/minecraft/world/level/block/state/BlockBehaviour$Properties; f
	forceSolidOff ()Lnet/minecraft/world/level/block/state/BlockBehaviour$Properties; k
	forceSolidOn ()Lnet/minecraft/world/level/block/state/BlockBehaviour$Properties; j
	friction (F)Lnet/minecraft/world/level/block/state/BlockBehaviour$Properties; a
	hasPostProcess (Lnet/minecraft/world/level/block/state/BlockBehaviour$StatePredicate;)Lnet/minecraft/world/level/block/state/BlockBehaviour$Properties; d
	ignitedByLava ()Lnet/minecraft/world/level/block/state/BlockBehaviour$Properties; h
	instabreak ()Lnet/minecraft/world/level/block/state/BlockBehaviour$Properties; d
	instrument (Lnet/minecraft/world/level/block/state/properties/NoteBlockInstrument;)Lnet/minecraft/world/level/block/state/BlockBehaviour$Properties; a
	isRedstoneConductor (Lnet/minecraft/world/level/block/state/BlockBehaviour$StatePredicate;)Lnet/minecraft/world/level/block/state/BlockBehaviour$Properties; a
	isSuffocating (Lnet/minecraft/world/level/block/state/BlockBehaviour$StatePredicate;)Lnet/minecraft/world/level/block/state/BlockBehaviour$Properties; b
	isValidSpawn (Lnet/minecraft/world/level/block/state/BlockBehaviour$StateArgumentPredicate;)Lnet/minecraft/world/level/block/state/BlockBehaviour$Properties; a
	isViewBlocking (Lnet/minecraft/world/level/block/state/BlockBehaviour$StatePredicate;)Lnet/minecraft/world/level/block/state/BlockBehaviour$Properties; c
	jumpFactor (F)Lnet/minecraft/world/level/block/state/BlockBehaviour$Properties; c
	lightLevel (Ljava/util/function/ToIntFunction;)Lnet/minecraft/world/level/block/state/BlockBehaviour$Properties; a
	liquid ()Lnet/minecraft/world/level/block/state/BlockBehaviour$Properties; i
	mapColor (Ljava/util/function/Function;)Lnet/minecraft/world/level/block/state/BlockBehaviour$Properties; a
	mapColor (Lnet/minecraft/world/item/DyeColor;)Lnet/minecraft/world/level/block/state/BlockBehaviour$Properties; a
	mapColor (Lnet/minecraft/world/level/material/MapColor;)Lnet/minecraft/world/level/block/state/BlockBehaviour$Properties; a
	noCollission ()Lnet/minecraft/world/level/block/state/BlockBehaviour$Properties; b
	noLootTable ()Lnet/minecraft/world/level/block/state/BlockBehaviour$Properties; g
	noOcclusion ()Lnet/minecraft/world/level/block/state/BlockBehaviour$Properties; c
	noParticlesOnBreak ()Lnet/minecraft/world/level/block/state/BlockBehaviour$Properties; n
	of ()Lnet/minecraft/world/level/block/state/BlockBehaviour$Properties; a
	offsetType (Lnet/minecraft/world/level/block/state/BlockBehaviour$OffsetType;)Lnet/minecraft/world/level/block/state/BlockBehaviour$Properties; a
	pushReaction (Lnet/minecraft/world/level/material/PushReaction;)Lnet/minecraft/world/level/block/state/BlockBehaviour$Properties; a
	randomTicks ()Lnet/minecraft/world/level/block/state/BlockBehaviour$Properties; e
	replaceable ()Lnet/minecraft/world/level/block/state/BlockBehaviour$Properties; o
	requiredFeatures ([Lnet/minecraft/world/flag/FeatureFlag;)Lnet/minecraft/world/level/block/state/BlockBehaviour$Properties; a
	requiresCorrectToolForDrops ()Lnet/minecraft/world/level/block/state/BlockBehaviour$Properties; m
	sound (Lnet/minecraft/world/level/block/SoundType;)Lnet/minecraft/world/level/block/state/BlockBehaviour$Properties; a
	speedFactor (F)Lnet/minecraft/world/level/block/state/BlockBehaviour$Properties; b
	strength (F)Lnet/minecraft/world/level/block/state/BlockBehaviour$Properties; d
	strength (FF)Lnet/minecraft/world/level/block/state/BlockBehaviour$Properties; a
net/minecraft/world/level/block/state/BlockBehaviour$StateArgumentPredicate dca$e
net/minecraft/world/level/block/state/BlockBehaviour$StatePredicate dca$f
net/minecraft/world/level/block/state/BlockState dcb
	CODEC b
	asState ()Lnet/minecraft/world/level/block/state/BlockState; x
net/minecraft/world/level/block/state/StateDefinition dcc
	NAME_PATTERN a
	owner b
	propertiesByName c
	states d
	any ()Lnet/minecraft/world/level/block/state/StateHolder; b
	appendPropertyCodec (Lcom/mojang/serialization/MapCodec;Ljava/util/function/Supplier;Ljava/lang/String;Lnet/minecraft/world/level/block/state/properties/Property;)Lcom/mojang/serialization/MapCodec; a
	getOwner ()Ljava/lang/Object; c
	getPossibleStates ()Lcom/google/common/collect/ImmutableList; a
	getProperties ()Ljava/util/Collection; d
	getProperty (Ljava/lang/String;)Lnet/minecraft/world/level/block/state/properties/Property; a
net/minecraft/world/level/block/state/StateDefinition$Builder dcc$a
	owner a
	properties b
	add ([Lnet/minecraft/world/level/block/state/properties/Property;)Lnet/minecraft/world/level/block/state/StateDefinition$Builder; a
	create (Ljava/util/function/Function;Lnet/minecraft/world/level/block/state/StateDefinition$Factory;)Lnet/minecraft/world/level/block/state/StateDefinition; a
	validateProperty (Lnet/minecraft/world/level/block/state/properties/Property;)V a
net/minecraft/world/level/block/state/StateDefinition$Factory dcc$b
net/minecraft/world/level/block/state/StateHolder dcd
	NAME_TAG c
	PROPERTIES_TAG d
	PROPERTY_ENTRY_TO_STRING_FUNCTION a
	neighbours g
	owner e
	propertiesCodec f
	values b
	codec (Lcom/mojang/serialization/Codec;Ljava/util/function/Function;)Lcom/mojang/serialization/Codec; a
	cycle (Lnet/minecraft/world/level/block/state/properties/Property;)Ljava/lang/Object; a
	findNextInCollection (Ljava/util/Collection;Ljava/lang/Object;)Ljava/lang/Object; a
	getOptionalValue (Lnet/minecraft/world/level/block/state/properties/Property;)Ljava/util/Optional; d
	getProperties ()Ljava/util/Collection; B
	getValue (Lnet/minecraft/world/level/block/state/properties/Property;)Ljava/lang/Comparable; c
	getValues ()Lcom/google/common/collect/ImmutableMap; C
	hasProperty (Lnet/minecraft/world/level/block/state/properties/Property;)Z b
	makeNeighbourValues (Lnet/minecraft/world/level/block/state/properties/Property;Ljava/lang/Comparable;)Ljava/util/Map; c
	populateNeighbours (Ljava/util/Map;)V a
	setValue (Lnet/minecraft/world/level/block/state/properties/Property;Ljava/lang/Comparable;)Ljava/lang/Object; a
	trySetValue (Lnet/minecraft/world/level/block/state/properties/Property;Ljava/lang/Comparable;)Ljava/lang/Object; b
net/minecraft/world/level/block/state/pattern/BlockInWorld dcf
	cachedEntity f
	entity e
	level a
	loadChunks c
	pos b
	state d
	getEntity ()Lnet/minecraft/world/level/block/entity/BlockEntity; b
	getLevel ()Lnet/minecraft/world/level/LevelReader; c
	getPos ()Lnet/minecraft/core/BlockPos; d
	getState ()Lnet/minecraft/world/level/block/state/BlockState; a
	hasState (Ljava/util/function/Predicate;)Ljava/util/function/Predicate; a
net/minecraft/world/level/block/state/pattern/BlockPattern dcg
	depth b
	height c
	pattern a
	width d
	createLevelCache (Lnet/minecraft/world/level/LevelReader;Z)Lcom/google/common/cache/LoadingCache; a
	find (Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/pattern/BlockPattern$BlockPatternMatch; a
	getDepth ()I a
	getHeight ()I b
	getPattern ()[[[Ljava/util/function/Predicate; d
	getWidth ()I c
	matches (Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;Lnet/minecraft/core/Direction;Lcom/google/common/cache/LoadingCache;)Lnet/minecraft/world/level/block/state/pattern/BlockPattern$BlockPatternMatch; a
	matches (Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;Lnet/minecraft/core/Direction;)Lnet/minecraft/world/level/block/state/pattern/BlockPattern$BlockPatternMatch; a
	translateAndRotate (Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;Lnet/minecraft/core/Direction;III)Lnet/minecraft/core/BlockPos; a
net/minecraft/world/level/block/state/pattern/BlockPattern$BlockCacheLoader dcg$a
	level a
	loadChunks b
	load (Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/pattern/BlockInWorld; a
net/minecraft/world/level/block/state/pattern/BlockPattern$BlockPatternMatch dcg$b
	cache d
	depth g
	forwards b
	frontTopLeft a
	height f
	up c
	width e
	getBlock (III)Lnet/minecraft/world/level/block/state/pattern/BlockInWorld; a
	getDepth ()I f
	getForwards ()Lnet/minecraft/core/Direction; b
	getFrontTopLeft ()Lnet/minecraft/core/BlockPos; a
	getHeight ()I e
	getUp ()Lnet/minecraft/core/Direction; c
	getWidth ()I d
net/minecraft/world/level/block/state/pattern/BlockPatternBuilder dch
	COMMA_JOINED a
	height d
	lookup c
	pattern b
	width e
	aisle ([Ljava/lang/String;)Lnet/minecraft/world/level/block/state/pattern/BlockPatternBuilder; a
	build ()Lnet/minecraft/world/level/block/state/pattern/BlockPattern; b
	createPattern ()[[[Ljava/util/function/Predicate; c
	ensureAllCharactersMatched ()V d
	start ()Lnet/minecraft/world/level/block/state/pattern/BlockPatternBuilder; a
	where (CLjava/util/function/Predicate;)Lnet/minecraft/world/level/block/state/pattern/BlockPatternBuilder; a
net/minecraft/world/level/block/state/predicate/BlockPredicate dcj
	block a
	forBlock (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/world/level/block/state/predicate/BlockPredicate; a
	test (Lnet/minecraft/world/level/block/state/BlockState;)Z a
net/minecraft/world/level/block/state/predicate/BlockStatePredicate dck
	ANY a
	definition b
	properties c
	applies (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/state/properties/Property;Ljava/util/function/Predicate;)Z a
	forBlock (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/world/level/block/state/predicate/BlockStatePredicate; a
	test (Lnet/minecraft/world/level/block/state/BlockState;)Z a
	where (Lnet/minecraft/world/level/block/state/properties/Property;Ljava/util/function/Predicate;)Lnet/minecraft/world/level/block/state/predicate/BlockStatePredicate; a
net/minecraft/world/level/block/state/properties/AttachFace dcm
	$VALUES e
	CEILING c
	FLOOR a
	WALL b
	name d
	$values ()[Lnet/minecraft/world/level/block/state/properties/AttachFace; a
	getSerializedName ()Ljava/lang/String; c
net/minecraft/world/level/block/state/properties/BambooLeaves dcn
	$VALUES e
	LARGE c
	NONE a
	SMALL b
	name d
	$values ()[Lnet/minecraft/world/level/block/state/properties/BambooLeaves; a
	getSerializedName ()Ljava/lang/String; c
net/minecraft/world/level/block/state/properties/BedPart dco
	$VALUES d
	FOOT b
	HEAD a
	name c
	$values ()[Lnet/minecraft/world/level/block/state/properties/BedPart; a
	getSerializedName ()Ljava/lang/String; c
net/minecraft/world/level/block/state/properties/BellAttachType dcp
	$VALUES f
	CEILING b
	DOUBLE_WALL d
	FLOOR a
	SINGLE_WALL c
	name e
	$values ()[Lnet/minecraft/world/level/block/state/properties/BellAttachType; a
	getSerializedName ()Ljava/lang/String; c
net/minecraft/world/level/block/state/properties/BlockSetType dcq
	ACACIA h
	BAMBOO o
	BIRCH g
	CHERRY i
	CRIMSON l
	DARK_OAK k
	GOLD b
	IRON a
	JUNGLE j
	MANGROVE n
	OAK e
	POLISHED_BLACKSTONE d
	SPRUCE f
	STONE c
	VALUES A
	WARPED m
	buttonClickOff y
	buttonClickOn z
	canOpenByHand q
	doorClose s
	doorOpen t
	name p
	pressurePlateClickOff w
	pressurePlateClickOn x
	soundType r
	trapdoorClose u
	trapdoorOpen v
	buttonClickOff ()Lnet/minecraft/sounds/SoundEvent; k
	buttonClickOn ()Lnet/minecraft/sounds/SoundEvent; l
	canOpenByHand ()Z c
	doorClose ()Lnet/minecraft/sounds/SoundEvent; e
	doorOpen ()Lnet/minecraft/sounds/SoundEvent; f
	name ()Ljava/lang/String; b
	pressurePlateClickOff ()Lnet/minecraft/sounds/SoundEvent; i
	pressurePlateClickOn ()Lnet/minecraft/sounds/SoundEvent; j
	register (Lnet/minecraft/world/level/block/state/properties/BlockSetType;)Lnet/minecraft/world/level/block/state/properties/BlockSetType; a
	soundType ()Lnet/minecraft/world/level/block/SoundType; d
	trapdoorClose ()Lnet/minecraft/sounds/SoundEvent; g
	trapdoorOpen ()Lnet/minecraft/sounds/SoundEvent; h
	values ()Ljava/util/stream/Stream; a
net/minecraft/world/level/block/state/properties/BlockStateProperties dcr
	AGE_1 aq
	AGE_15 aw
	AGE_2 ar
	AGE_25 ax
	AGE_3 as
	AGE_4 at
	AGE_5 au
	AGE_7 av
	ATTACHED a
	ATTACH_FACE U
	AXIS I
	BAMBOO_LEAVES bk
	BED_PART bb
	BELL_ATTACHMENT V
	BERRIES D
	BITES ay
	BLOOM E
	BOTTOM b
	CANDLES az
	CAN_SUMMON G
	CHEST_TYPE bc
	CHISELED_BOOKSHELF_SLOT_0_OCCUPIED bp
	CHISELED_BOOKSHELF_SLOT_1_OCCUPIED bq
	CHISELED_BOOKSHELF_SLOT_2_OCCUPIED br
	CHISELED_BOOKSHELF_SLOT_3_OCCUPIED bs
	CHISELED_BOOKSHELF_SLOT_4_OCCUPIED bt
	CHISELED_BOOKSHELF_SLOT_5_OCCUPIED bu
	CONDITIONAL c
	CRACKED bw
	DELAY aA
	DISARMED d
	DISTANCE aC
	DOOR_HINGE be
	DOUBLE_BLOCK_HALF ae
	DOWN K
	DRAG e
	DRIPSTONE_THICKNESS bn
	DUSTED bv
	EAST M
	EAST_REDSTONE aa
	EAST_WALL W
	EGGS aD
	ENABLED f
	EXTENDED g
	EYE h
	FACING P
	FACING_HOPPER Q
	FALLING i
	FLOWER_AMOUNT S
	HALF af
	HANGING j
	HAS_BOOK o
	HAS_BOTTLE_0 k
	HAS_BOTTLE_1 l
	HAS_BOTTLE_2 m
	HAS_RECORD n
	HATCH aE
	HORIZONTAL_AXIS H
	HORIZONTAL_FACING R
	INVERTED p
	IN_WALL q
	LAYERS aF
	LEVEL aP
	LEVEL_CAULDRON aK
	LEVEL_COMPOSTER aL
	LEVEL_FLOWING aM
	LEVEL_HONEY aN
	LIT r
	LOCKED s
	MAX_AGE_1 ai
	MAX_AGE_15 ao
	MAX_AGE_2 aj
	MAX_AGE_25 ap
	MAX_AGE_3 ak
	MAX_AGE_4 al
	MAX_AGE_5 am
	MAX_AGE_7 an
	MAX_DISTANCE aB
	MAX_LEVEL_15 aO
	MAX_LEVEL_3 aI
	MAX_LEVEL_8 aJ
	MAX_RESPAWN_ANCHOR_CHARGES aY
	MIN_LEVEL aG
	MIN_LEVEL_CAULDRON aH
	MIN_RESPAWN_ANCHOR_CHARGES aX
	MODE_COMPARATOR bd
	MOISTURE aQ
	NORTH L
	NORTH_REDSTONE ab
	NORTH_WALL X
	NOTE aR
	NOTEBLOCK_INSTRUMENT bf
	OCCUPIED t
	OPEN u
	ORIENTATION T
	PERSISTENT v
	PICKLES aS
	PISTON_TYPE bg
	POWER aT
	POWERED w
	RAIL_SHAPE ag
	RAIL_SHAPE_STRAIGHT ah
	RESPAWN_ANCHOR_CHARGES aZ
	ROTATION_16 ba
	SCULK_SENSOR_PHASE bo
	SHORT x
	SHRIEKING F
	SIGNAL_FIRE y
	SLAB_TYPE bh
	SNOWY z
	SOUTH N
	SOUTH_REDSTONE ac
	SOUTH_WALL Y
	STABILITY_DISTANCE aW
	STABILITY_MAX_DISTANCE aV
	STAGE aU
	STAIRS_SHAPE bi
	STRUCTUREBLOCK_MODE bj
	TILT bl
	TRIGGERED A
	UNSTABLE B
	UP J
	VERTICAL_DIRECTION bm
	WATERLOGGED C
	WEST O
	WEST_REDSTONE ad
	WEST_WALL Z
net/minecraft/world/level/block/state/properties/BooleanProperty dcs
	values a
	create (Ljava/lang/String;)Lnet/minecraft/world/level/block/state/properties/BooleanProperty; a
	generateHashCode ()I b
	getName (Ljava/lang/Boolean;)Ljava/lang/String; a
	getName (Ljava/lang/Comparable;)Ljava/lang/String; a
	getPossibleValues ()Ljava/util/Collection; a
	getValue (Ljava/lang/String;)Ljava/util/Optional; b
net/minecraft/world/level/block/state/properties/ChestType dct
	$VALUES e
	LEFT b
	RIGHT c
	SINGLE a
	name d
	$values ()[Lnet/minecraft/world/level/block/state/properties/ChestType; b
	getOpposite ()Lnet/minecraft/world/level/block/state/properties/ChestType; a
	getSerializedName ()Ljava/lang/String; c
net/minecraft/world/level/block/state/properties/ComparatorMode dcu
	$VALUES d
	COMPARE a
	SUBTRACT b
	name c
	$values ()[Lnet/minecraft/world/level/block/state/properties/ComparatorMode; a
	getSerializedName ()Ljava/lang/String; c
net/minecraft/world/level/block/state/properties/DirectionProperty dcv
	create (Ljava/lang/String;)Lnet/minecraft/world/level/block/state/properties/DirectionProperty; a
	create (Ljava/lang/String;Ljava/util/Collection;)Lnet/minecraft/world/level/block/state/properties/DirectionProperty; a
	create (Ljava/lang/String;Ljava/util/function/Predicate;)Lnet/minecraft/world/level/block/state/properties/DirectionProperty; a
	create (Ljava/lang/String;[Lnet/minecraft/core/Direction;)Lnet/minecraft/world/level/block/state/properties/DirectionProperty; a
net/minecraft/world/level/block/state/properties/DoorHingeSide dcw
	$VALUES c
	LEFT a
	RIGHT b
	$values ()[Lnet/minecraft/world/level/block/state/properties/DoorHingeSide; a
	getSerializedName ()Ljava/lang/String; c
net/minecraft/world/level/block/state/properties/DoubleBlockHalf dcx
	$VALUES c
	LOWER b
	UPPER a
	$values ()[Lnet/minecraft/world/level/block/state/properties/DoubleBlockHalf; a
	getSerializedName ()Ljava/lang/String; c
net/minecraft/world/level/block/state/properties/DripstoneThickness dcy
	$VALUES g
	BASE e
	FRUSTUM c
	MIDDLE d
	TIP b
	TIP_MERGE a
	name f
	$values ()[Lnet/minecraft/world/level/block/state/properties/DripstoneThickness; a
	getSerializedName ()Ljava/lang/String; c
net/minecraft/world/level/block/state/properties/EnumProperty dcz
	names b
	values a
	create (Ljava/lang/String;Ljava/lang/Class;)Lnet/minecraft/world/level/block/state/properties/EnumProperty; a
	create (Ljava/lang/String;Ljava/lang/Class;Ljava/util/Collection;)Lnet/minecraft/world/level/block/state/properties/EnumProperty; a
	create (Ljava/lang/String;Ljava/lang/Class;Ljava/util/function/Predicate;)Lnet/minecraft/world/level/block/state/properties/EnumProperty; a
	create (Ljava/lang/String;Ljava/lang/Class;[Ljava/lang/Enum;)Lnet/minecraft/world/level/block/state/properties/EnumProperty; a
	generateHashCode ()I b
	getName (Ljava/lang/Comparable;)Ljava/lang/String; a
	getName (Ljava/lang/Enum;)Ljava/lang/String; a
	getPossibleValues ()Ljava/util/Collection; a
	getValue (Ljava/lang/String;)Ljava/util/Optional; b
net/minecraft/world/level/block/state/properties/Half dda
	$VALUES d
	BOTTOM b
	TOP a
	name c
	$values ()[Lnet/minecraft/world/level/block/state/properties/Half; a
	getSerializedName ()Ljava/lang/String; c
net/minecraft/world/level/block/state/properties/IntegerProperty ddb
	max c
	min b
	values a
	create (Ljava/lang/String;II)Lnet/minecraft/world/level/block/state/properties/IntegerProperty; a
	generateHashCode ()I b
	getName (Ljava/lang/Comparable;)Ljava/lang/String; a
	getName (Ljava/lang/Integer;)Ljava/lang/String; a
	getPossibleValues ()Ljava/util/Collection; a
	getValue (Ljava/lang/String;)Ljava/util/Optional; b
net/minecraft/world/level/block/state/properties/NoteBlockInstrument ddc
	$VALUES A
	BANJO o
	BASEDRUM b
	BASS e
	BELL g
	BIT n
	CHIME i
	COW_BELL l
	CREEPER s
	CUSTOM_HEAD w
	DIDGERIDOO m
	DRAGON t
	FLUTE f
	GUITAR h
	HARP a
	HAT d
	IRON_XYLOPHONE k
	PIGLIN v
	PLING p
	SKELETON r
	SNARE c
	WITHER_SKELETON u
	XYLOPHONE j
	ZOMBIE q
	name x
	soundEvent y
	type z
	$values ()[Lnet/minecraft/world/level/block/state/properties/NoteBlockInstrument; f
	getSerializedName ()Ljava/lang/String; c
	getSoundEvent ()Lnet/minecraft/core/Holder; a
	hasCustomSound ()Z d
	isTunable ()Z b
	worksAboveNoteBlock ()Z e
net/minecraft/world/level/block/state/properties/NoteBlockInstrument$Type ddc$a
	$VALUES d
	BASE_BLOCK a
	CUSTOM c
	MOB_HEAD b
	$values ()[Lnet/minecraft/world/level/block/state/properties/NoteBlockInstrument$Type; a
net/minecraft/world/level/block/state/properties/PistonType ddd
	$VALUES d
	DEFAULT a
	STICKY b
	name c
	$values ()[Lnet/minecraft/world/level/block/state/properties/PistonType; a
	getSerializedName ()Ljava/lang/String; c
net/minecraft/world/level/block/state/properties/Property dde
	clazz a
	codec d
	hashCode c
	name b
	valueCodec e
	codec ()Lcom/mojang/serialization/Codec; d
	generateHashCode ()I b
	getAllValues ()Ljava/util/stream/Stream; c
	getName ()Ljava/lang/String; f
	getName (Ljava/lang/Comparable;)Ljava/lang/String; a
	getPossibleValues ()Ljava/util/Collection; a
	getValue (Ljava/lang/String;)Ljava/util/Optional; b
	getValueClass ()Ljava/lang/Class; g
	parseValue (Lcom/mojang/serialization/DynamicOps;Lnet/minecraft/world/level/block/state/StateHolder;Ljava/lang/Object;)Lcom/mojang/serialization/DataResult; a
	value (Ljava/lang/Comparable;)Lnet/minecraft/world/level/block/state/properties/Property$Value; b
	value (Lnet/minecraft/world/level/block/state/StateHolder;)Lnet/minecraft/world/level/block/state/properties/Property$Value; a
	valueCodec ()Lcom/mojang/serialization/Codec; e
net/minecraft/world/level/block/state/properties/Property$Value dde$a
	property a
	value b
	property ()Lnet/minecraft/world/level/block/state/properties/Property; a
	value ()Ljava/lang/Comparable; b
net/minecraft/world/level/block/state/properties/RailShape ddf
	$VALUES l
	ASCENDING_EAST c
	ASCENDING_NORTH e
	ASCENDING_SOUTH f
	ASCENDING_WEST d
	EAST_WEST b
	NORTH_EAST j
	NORTH_SOUTH a
	NORTH_WEST i
	SOUTH_EAST g
	SOUTH_WEST h
	name k
	$values ()[Lnet/minecraft/world/level/block/state/properties/RailShape; d
	getName ()Ljava/lang/String; a
	getSerializedName ()Ljava/lang/String; c
	isAscending ()Z b
net/minecraft/world/level/block/state/properties/RedstoneSide ddg
	$VALUES e
	NONE c
	SIDE b
	UP a
	name d
	$values ()[Lnet/minecraft/world/level/block/state/properties/RedstoneSide; b
	getSerializedName ()Ljava/lang/String; c
	isConnected ()Z a
net/minecraft/world/level/block/state/properties/RotationSegment ddh
	EAST_90 d
	MAX_SEGMENT_INDEX b
	NORTH_0 c
	SEGMENTED_ANGLE16 a
	SOUTH_180 e
	WEST_270 f
	convertToDegrees (I)F b
	convertToDirection (I)Ljava/util/Optional; a
	convertToSegment (F)I a
	convertToSegment (Lnet/minecraft/core/Direction;)I a
	getMaxSegmentIndex ()I a
net/minecraft/world/level/block/state/properties/SculkSensorPhase ddi
	$VALUES e
	ACTIVE b
	COOLDOWN c
	INACTIVE a
	name d
	$values ()[Lnet/minecraft/world/level/block/state/properties/SculkSensorPhase; a
	getSerializedName ()Ljava/lang/String; c
net/minecraft/world/level/block/state/properties/SlabType ddj
	$VALUES e
	BOTTOM b
	DOUBLE c
	TOP a
	name d
	$values ()[Lnet/minecraft/world/level/block/state/properties/SlabType; a
	getSerializedName ()Ljava/lang/String; c
net/minecraft/world/level/block/state/properties/StairsShape ddk
	$VALUES g
	INNER_LEFT b
	INNER_RIGHT c
	OUTER_LEFT d
	OUTER_RIGHT e
	STRAIGHT a
	name f
	$values ()[Lnet/minecraft/world/level/block/state/properties/StairsShape; a
	getSerializedName ()Ljava/lang/String; c
net/minecraft/world/level/block/state/properties/StructureMode ddl
	$VALUES g
	CORNER c
	DATA d
	LOAD b
	SAVE a
	displayName f
	name e
	$values ()[Lnet/minecraft/world/level/block/state/properties/StructureMode; b
	getDisplayName ()Lnet/minecraft/network/chat/Component; a
	getSerializedName ()Ljava/lang/String; c
net/minecraft/world/level/block/state/properties/Tilt ddm
	$VALUES g
	FULL d
	NONE a
	PARTIAL c
	UNSTABLE b
	causesVibration f
	name e
	$values ()[Lnet/minecraft/world/level/block/state/properties/Tilt; b
	causesVibration ()Z a
	getSerializedName ()Ljava/lang/String; c
net/minecraft/world/level/block/state/properties/WallSide ddn
	$VALUES e
	LOW b
	NONE a
	TALL c
	name d
	$values ()[Lnet/minecraft/world/level/block/state/properties/WallSide; a
	getSerializedName ()Ljava/lang/String; c
net/minecraft/world/level/block/state/properties/WoodType ddo
	ACACIA d
	BAMBOO k
	BIRCH c
	CHERRY e
	CRIMSON h
	DARK_OAK g
	JUNGLE f
	MANGROVE j
	OAK a
	SPRUCE b
	VALUES r
	WARPED i
	fenceGateClose p
	fenceGateOpen q
	hangingSignSoundType o
	name l
	setType m
	soundType n
	fenceGateClose ()Lnet/minecraft/sounds/SoundEvent; f
	fenceGateOpen ()Lnet/minecraft/sounds/SoundEvent; g
	hangingSignSoundType ()Lnet/minecraft/world/level/block/SoundType; e
	name ()Ljava/lang/String; b
	register (Lnet/minecraft/world/level/block/state/properties/WoodType;)Lnet/minecraft/world/level/block/state/properties/WoodType; a
	setType ()Lnet/minecraft/world/level/block/state/properties/BlockSetType; c
	soundType ()Lnet/minecraft/world/level/block/SoundType; d
	values ()Ljava/util/stream/Stream; a
net/minecraft/world/level/border/BorderChangeListener ddq
	onBorderCenterSet (Lnet/minecraft/world/level/border/WorldBorder;DD)V a
	onBorderSetDamagePerBlock (Lnet/minecraft/world/level/border/WorldBorder;D)V b
	onBorderSetDamageSafeZOne (Lnet/minecraft/world/level/border/WorldBorder;D)V c
	onBorderSetWarningBlocks (Lnet/minecraft/world/level/border/WorldBorder;I)V b
	onBorderSetWarningTime (Lnet/minecraft/world/level/border/WorldBorder;I)V a
	onBorderSizeLerping (Lnet/minecraft/world/level/border/WorldBorder;DDJ)V a
	onBorderSizeSet (Lnet/minecraft/world/level/border/WorldBorder;D)V a
net/minecraft/world/level/border/BorderChangeListener$DelegateBorderChangeListener ddq$a
	worldBorder a
	onBorderCenterSet (Lnet/minecraft/world/level/border/WorldBorder;DD)V a
	onBorderSetDamagePerBlock (Lnet/minecraft/world/level/border/WorldBorder;D)V b
	onBorderSetDamageSafeZOne (Lnet/minecraft/world/level/border/WorldBorder;D)V c
	onBorderSetWarningBlocks (Lnet/minecraft/world/level/border/WorldBorder;I)V b
	onBorderSetWarningTime (Lnet/minecraft/world/level/border/WorldBorder;I)V a
	onBorderSizeLerping (Lnet/minecraft/world/level/border/WorldBorder;DDJ)V a
	onBorderSizeSet (Lnet/minecraft/world/level/border/WorldBorder;D)V a
net/minecraft/world/level/border/BorderStatus ddr
	$VALUES e
	GROWING a
	SHRINKING b
	STATIONARY c
	color d
	$values ()[Lnet/minecraft/world/level/border/BorderStatus; b
	getColor ()I a
net/minecraft/world/level/border/WorldBorder dds
	DEFAULT_SETTINGS e
	MAX_CENTER_COORDINATE d
	MAX_SIZE c
	absoluteMaxSize k
	centerX i
	centerZ j
	damagePerBlock b
	damageSafeZone f
	extent l
	listeners a
	warningBlocks h
	warningTime g
	addListener (Lnet/minecraft/world/level/border/BorderChangeListener;)V a
	applySettings (Lnet/minecraft/world/level/border/WorldBorder$Settings;)V a
	clampToBounds (DDD)Lnet/minecraft/core/BlockPos; b
	createSettings ()Lnet/minecraft/world/level/border/WorldBorder$Settings; t
	getAbsoluteMaxSize ()I m
	getCenterX ()D a
	getCenterZ ()D b
	getCollisionShape ()Lnet/minecraft/world/phys/shapes/VoxelShape; c
	getDamagePerBlock ()D o
	getDamageSafeZone ()D n
	getDistanceToBorder (DD)D b
	getDistanceToBorder (Lnet/minecraft/world/entity/Entity;)D a
	getLerpRemainingTime ()J j
	getLerpSpeed ()D p
	getLerpTarget ()D k
	getListeners ()Ljava/util/List; l
	getMaxX ()D g
	getMaxZ ()D h
	getMinX ()D e
	getMinZ ()D f
	getSize ()D i
	getStatus ()Lnet/minecraft/world/level/border/BorderStatus; d
	getWarningBlocks ()I r
	getWarningTime ()I q
	isInsideCloseToBorder (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/phys/AABB;)Z a
	isWithinBounds (DD)Z a
	isWithinBounds (DDD)Z a
	isWithinBounds (Lnet/minecraft/core/BlockPos;)Z a
	isWithinBounds (Lnet/minecraft/world/level/ChunkPos;)Z a
	isWithinBounds (Lnet/minecraft/world/phys/AABB;)Z a
	lerpSizeBetween (DDJ)V a
	removeListener (Lnet/minecraft/world/level/border/BorderChangeListener;)V b
	setAbsoluteMaxSize (I)V a
	setCenter (DD)V c
	setDamagePerBlock (D)V c
	setDamageSafeZone (D)V b
	setSize (D)V a
	setWarningBlocks (I)V c
	setWarningTime (I)V b
	tick ()V s
net/minecraft/world/level/border/WorldBorder$BorderExtent dds$a
	getCollisionShape ()Lnet/minecraft/world/phys/shapes/VoxelShape; m
	getLerpRemainingTime ()J g
	getLerpSpeed ()D f
	getLerpTarget ()D h
	getMaxX ()D b
	getMaxZ ()D d
	getMinX ()D a
	getMinZ ()D c
	getSize ()D e
	getStatus ()Lnet/minecraft/world/level/border/BorderStatus; i
	onAbsoluteMaxSizeChange ()V j
	onCenterChange ()V k
	update ()Lnet/minecraft/world/level/border/WorldBorder$BorderExtent; l
net/minecraft/world/level/border/WorldBorder$MovingBorderExtent dds$b
	from b
	lerpBegin e
	lerpDuration f
	lerpEnd d
	to c
	getCollisionShape ()Lnet/minecraft/world/phys/shapes/VoxelShape; m
	getLerpRemainingTime ()J g
	getLerpSpeed ()D f
	getLerpTarget ()D h
	getMaxX ()D b
	getMaxZ ()D d
	getMinX ()D a
	getMinZ ()D c
	getSize ()D e
	getStatus ()Lnet/minecraft/world/level/border/BorderStatus; i
	onAbsoluteMaxSizeChange ()V j
	onCenterChange ()V k
	update ()Lnet/minecraft/world/level/border/WorldBorder$BorderExtent; l
net/minecraft/world/level/border/WorldBorder$Settings dds$c
	centerX a
	centerZ b
	damagePerBlock c
	safeZone d
	size g
	sizeLerpTarget i
	sizeLerpTime h
	warningBlocks e
	warningTime f
	getCenterX ()D a
	getCenterZ ()D b
	getDamagePerBlock ()D c
	getSafeZone ()D d
	getSize ()D g
	getSizeLerpTarget ()D i
	getSizeLerpTime ()J h
	getWarningBlocks ()I e
	getWarningTime ()I f
	read (Lcom/mojang/serialization/DynamicLike;Lnet/minecraft/world/level/border/WorldBorder$Settings;)Lnet/minecraft/world/level/border/WorldBorder$Settings; a
	write (Lnet/minecraft/nbt/CompoundTag;)V a
net/minecraft/world/level/border/WorldBorder$StaticBorderExtent dds$d
	maxX e
	maxZ f
	minX c
	minZ d
	shape g
	size b
	getCollisionShape ()Lnet/minecraft/world/phys/shapes/VoxelShape; m
	getLerpRemainingTime ()J g
	getLerpSpeed ()D f
	getLerpTarget ()D h
	getMaxX ()D b
	getMaxZ ()D d
	getMinX ()D a
	getMinZ ()D c
	getSize ()D e
	getStatus ()Lnet/minecraft/world/level/border/BorderStatus; i
	onAbsoluteMaxSizeChange ()V j
	onCenterChange ()V k
	update ()Lnet/minecraft/world/level/border/WorldBorder$BorderExtent; l
	updateBox ()V n
net/minecraft/world/level/chunk/BlockColumn ddu
	getBlock (I)Lnet/minecraft/world/level/block/state/BlockState; a
	setBlock (ILnet/minecraft/world/level/block/state/BlockState;)V a
net/minecraft/world/level/chunk/BulkSectionAccess ddv
	acquiredSections b
	lastSection c
	lastSectionKey d
	level a
	getBlockState (Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; b
	getSection (Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/chunk/LevelChunkSection; a
net/minecraft/world/level/chunk/CarvingMask ddw
	additionalMask c
	mask b
	minY a
	get (III)Z b
	getIndex (III)I c
	set (III)V a
	setAdditionalMask (Lnet/minecraft/world/level/chunk/CarvingMask$Mask;)V a
	stream (Lnet/minecraft/world/level/ChunkPos;)Ljava/util/stream/Stream; a
	toArray ()[J a
net/minecraft/world/level/chunk/CarvingMask$Mask ddw$a
net/minecraft/world/level/chunk/ChunkAccess ddx
	EMPTY_REFERENCE_SET o
	LOGGER n
	NO_FILLED_SECTION a
	blendingData g
	blockEntities k
	carverBiomeSettings r
	chunkPos d
	heightmaps h
	inhabitedTime q
	isLightCorrect p
	levelHeightAccessor l
	noiseChunk e
	pendingBlockEntities j
	postProcessing b
	sections m
	skyLightSources i
	structureStarts s
	structuresRefences t
	unsaved c
	upgradeData f
	addEntity (Lnet/minecraft/world/entity/Entity;)V a
	addPackedPostProcess (SI)V a
	addReferenceForStructure (Lnet/minecraft/world/level/levelgen/structure/Structure;J)V a
	carverBiome (Ljava/util/function/Supplier;)Lnet/minecraft/world/level/biome/BiomeGenerationSettings; a
	fillBiomesFromNoise (Lnet/minecraft/world/level/biome/BiomeResolver;Lnet/minecraft/world/level/biome/Climate$Sampler;)V a
	findBlockLightSources (Ljava/util/function/BiConsumer;)V a
	findBlocks (Ljava/util/function/Predicate;Ljava/util/function/BiConsumer;)V a
	getAllReferences ()Ljava/util/Map; h
	getAllStarts ()Ljava/util/Map; g
	getBelowZeroRetrogen ()Lnet/minecraft/world/level/levelgen/BelowZeroRetrogen; x
	getBlendingData ()Lnet/minecraft/world/level/levelgen/blending/BlendingData; t
	getBlockEntitiesPos ()Ljava/util/Set; c
	getBlockEntityNbt (Lnet/minecraft/core/BlockPos;)Lnet/minecraft/nbt/CompoundTag; f
	getBlockEntityNbtForSaving (Lnet/minecraft/core/BlockPos;)Lnet/minecraft/nbt/CompoundTag; g
	getBlockTicks ()Lnet/minecraft/world/ticks/TickContainerAccess; o
	getFluidTicks ()Lnet/minecraft/world/ticks/TickContainerAccess; p
	getHeight ()I D_
	getHeight (Lnet/minecraft/world/level/levelgen/Heightmap$Types;II)I a
	getHeightAccessorForGeneration ()Lnet/minecraft/world/level/LevelHeightAccessor; z
	getHeightmaps ()Ljava/util/Collection; e
	getHighestFilledSectionIndex ()I a
	getHighestGeneratedStatus ()Lnet/minecraft/world/level/chunk/ChunkStatus; k
	getHighestSectionPosition ()I b
	getInhabitedTime ()J u
	getListenerRegistry (I)Lnet/minecraft/world/level/gameevent/GameEventListenerRegistry; a
	getMinBuildHeight ()I C_
	getOrCreateHeightmapUnprimed (Lnet/minecraft/world/level/levelgen/Heightmap$Types;)Lnet/minecraft/world/level/levelgen/Heightmap; a
	getOrCreateNoiseChunk (Ljava/util/function/Function;)Lnet/minecraft/world/level/levelgen/NoiseChunk; a
	getOrCreateOffsetList ([Lit/unimi/dsi/fastutil/shorts/ShortList;I)Lit/unimi/dsi/fastutil/shorts/ShortList; a
	getPos ()Lnet/minecraft/world/level/ChunkPos; f
	getPostProcessing ()[Lit/unimi/dsi/fastutil/shorts/ShortList; n
	getReferencesForStructure (Lnet/minecraft/world/level/levelgen/structure/Structure;)Lit/unimi/dsi/fastutil/longs/LongSet; b
	getSection (I)Lnet/minecraft/world/level/chunk/LevelChunkSection; b
	getSections ()[Lnet/minecraft/world/level/chunk/LevelChunkSection; d
	getSkyLightSources ()Lnet/minecraft/world/level/lighting/ChunkSkyLightSources; B
	getStartForStructure (Lnet/minecraft/world/level/levelgen/structure/Structure;)Lnet/minecraft/world/level/levelgen/structure/StructureStart; a
	getStatus ()Lnet/minecraft/world/level/chunk/ChunkStatus; j
	getTicksForSerialization ()Lnet/minecraft/world/level/chunk/ChunkAccess$TicksToSave; q
	getUpgradeData ()Lnet/minecraft/world/level/chunk/UpgradeData; r
	hasAnyStructureReferences ()Z w
	hasPrimedHeightmap (Lnet/minecraft/world/level/levelgen/Heightmap$Types;)Z b
	incrementInhabitedTime (J)V a
	initializeLightSources ()V A
	isLightCorrect ()Z v
	isOldNoiseGeneration ()Z s
	isUnsaved ()Z i
	isUpgrading ()Z y
	isYSpaceEmpty (II)Z a
	markPosForPostprocessing (Lnet/minecraft/core/BlockPos;)V e
	removeBlockEntity (Lnet/minecraft/core/BlockPos;)V d
	replaceMissingSections (Lnet/minecraft/core/Registry;[Lnet/minecraft/world/level/chunk/LevelChunkSection;)V a
	setAllReferences (Ljava/util/Map;)V b
	setAllStarts (Ljava/util/Map;)V a
	setBlendingData (Lnet/minecraft/world/level/levelgen/blending/BlendingData;)V a
	setBlockEntity (Lnet/minecraft/world/level/block/entity/BlockEntity;)V a
	setBlockEntityNbt (Lnet/minecraft/nbt/CompoundTag;)V a
	setBlockState (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)Lnet/minecraft/world/level/block/state/BlockState; a
	setHeightmap (Lnet/minecraft/world/level/levelgen/Heightmap$Types;[J)V a
	setInhabitedTime (J)V b
	setLightCorrect (Z)V b
	setStartForStructure (Lnet/minecraft/world/level/levelgen/structure/Structure;Lnet/minecraft/world/level/levelgen/structure/StructureStart;)V a
	setUnsaved (Z)V a
net/minecraft/world/level/chunk/ChunkAccess$TicksToSave ddx$a
	blocks a
	fluids b
	blocks ()Lnet/minecraft/world/ticks/SerializableTickContainer; a
	fluids ()Lnet/minecraft/world/ticks/SerializableTickContainer; b
net/minecraft/world/level/chunk/ChunkGenerator ddy
	CODEC a
	biomeSource b
	featuresPerStep c
	generationSettingsGetter d
	addDebugScreenInfo (Ljava/util/List;Lnet/minecraft/world/level/levelgen/RandomState;Lnet/minecraft/core/BlockPos;)V a
	applyBiomeDecoration (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/chunk/ChunkAccess;Lnet/minecraft/world/level/StructureManager;)V a
	applyCarvers (Lnet/minecraft/server/level/WorldGenRegion;JLnet/minecraft/world/level/levelgen/RandomState;Lnet/minecraft/world/level/biome/BiomeManager;Lnet/minecraft/world/level/StructureManager;Lnet/minecraft/world/level/chunk/ChunkAccess;Lnet/minecraft/world/level/levelgen/GenerationStep$Carving;)V a
	buildSurface (Lnet/minecraft/server/level/WorldGenRegion;Lnet/minecraft/world/level/StructureManager;Lnet/minecraft/world/level/levelgen/RandomState;Lnet/minecraft/world/level/chunk/ChunkAccess;)V a
	codec ()Lcom/mojang/serialization/Codec; a
	createBiomes (Ljava/util/concurrent/Executor;Lnet/minecraft/world/level/levelgen/RandomState;Lnet/minecraft/world/level/levelgen/blending/Blender;Lnet/minecraft/world/level/StructureManager;Lnet/minecraft/world/level/chunk/ChunkAccess;)Ljava/util/concurrent/CompletableFuture; a
	createReferences (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/StructureManager;Lnet/minecraft/world/level/chunk/ChunkAccess;)V a
	createState (Lnet/minecraft/core/HolderLookup;Lnet/minecraft/world/level/levelgen/RandomState;J)Lnet/minecraft/world/level/chunk/ChunkGeneratorStructureState; a
	createStructures (Lnet/minecraft/core/RegistryAccess;Lnet/minecraft/world/level/chunk/ChunkGeneratorStructureState;Lnet/minecraft/world/level/StructureManager;Lnet/minecraft/world/level/chunk/ChunkAccess;Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplateManager;)V a
	fetchReferences (Lnet/minecraft/world/level/StructureManager;Lnet/minecraft/world/level/chunk/ChunkAccess;Lnet/minecraft/core/SectionPos;Lnet/minecraft/world/level/levelgen/structure/Structure;)I a
	fillFromNoise (Ljava/util/concurrent/Executor;Lnet/minecraft/world/level/levelgen/blending/Blender;Lnet/minecraft/world/level/levelgen/RandomState;Lnet/minecraft/world/level/StructureManager;Lnet/minecraft/world/level/chunk/ChunkAccess;)Ljava/util/concurrent/CompletableFuture; a
	findNearestMapStructure (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/HolderSet;Lnet/minecraft/core/BlockPos;IZ)Lcom/mojang/datafixers/util/Pair; a
	getBaseColumn (IILnet/minecraft/world/level/LevelHeightAccessor;Lnet/minecraft/world/level/levelgen/RandomState;)Lnet/minecraft/world/level/NoiseColumn; a
	getBaseHeight (IILnet/minecraft/world/level/levelgen/Heightmap$Types;Lnet/minecraft/world/level/LevelHeightAccessor;Lnet/minecraft/world/level/levelgen/RandomState;)I a
	getBiomeGenerationSettings (Lnet/minecraft/core/Holder;)Lnet/minecraft/world/level/biome/BiomeGenerationSettings; a
	getBiomeSource ()Lnet/minecraft/world/level/biome/BiomeSource; c
	getFirstFreeHeight (IILnet/minecraft/world/level/levelgen/Heightmap$Types;Lnet/minecraft/world/level/LevelHeightAccessor;Lnet/minecraft/world/level/levelgen/RandomState;)I b
	getFirstOccupiedHeight (IILnet/minecraft/world/level/levelgen/Heightmap$Types;Lnet/minecraft/world/level/LevelHeightAccessor;Lnet/minecraft/world/level/levelgen/RandomState;)I c
	getGenDepth ()I d
	getMinY ()I f
	getMobsAt (Lnet/minecraft/core/Holder;Lnet/minecraft/world/level/StructureManager;Lnet/minecraft/world/entity/MobCategory;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/util/random/WeightedRandomList; a
	getNearestGeneratedStructure (Ljava/util/Set;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/level/StructureManager;Lnet/minecraft/core/BlockPos;ZLnet/minecraft/world/level/levelgen/structure/placement/ConcentricRingsStructurePlacement;)Lcom/mojang/datafixers/util/Pair; a
	getNearestGeneratedStructure (Ljava/util/Set;Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/world/level/StructureManager;IIIZJLnet/minecraft/world/level/levelgen/structure/placement/RandomSpreadStructurePlacement;)Lcom/mojang/datafixers/util/Pair; a
	getSeaLevel ()I e
	getSpawnHeight (Lnet/minecraft/world/level/LevelHeightAccessor;)I a
	getStructureGeneratingAt (Ljava/util/Set;Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/world/level/StructureManager;ZLnet/minecraft/world/level/levelgen/structure/placement/StructurePlacement;Lnet/minecraft/world/level/ChunkPos;)Lcom/mojang/datafixers/util/Pair; a
	getTypeNameForDataFixer ()Ljava/util/Optional; b
	getWritableArea (Lnet/minecraft/world/level/chunk/ChunkAccess;)Lnet/minecraft/world/level/levelgen/structure/BoundingBox; a
	spawnOriginalMobs (Lnet/minecraft/server/level/WorldGenRegion;)V a
	tryAddReference (Lnet/minecraft/world/level/StructureManager;Lnet/minecraft/world/level/levelgen/structure/StructureStart;)Z a
	tryGenerateStructure (Lnet/minecraft/world/level/levelgen/structure/StructureSet$StructureSelectionEntry;Lnet/minecraft/world/level/StructureManager;Lnet/minecraft/core/RegistryAccess;Lnet/minecraft/world/level/levelgen/RandomState;Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplateManager;JLnet/minecraft/world/level/chunk/ChunkAccess;Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/core/SectionPos;)Z a
net/minecraft/world/level/chunk/ChunkGeneratorStructureState ddz
	LOGGER a
	biomeSource c
	concentricRingsSeed e
	hasGeneratedPositions h
	levelSeed d
	placementsForStructure f
	possibleStructureSets i
	randomState b
	ringPositions g
	createForFlat (Lnet/minecraft/world/level/levelgen/RandomState;JLnet/minecraft/world/level/biome/BiomeSource;Ljava/util/stream/Stream;)Lnet/minecraft/world/level/chunk/ChunkGeneratorStructureState; a
	createForNormal (Lnet/minecraft/world/level/levelgen/RandomState;JLnet/minecraft/world/level/biome/BiomeSource;Lnet/minecraft/core/HolderLookup;)Lnet/minecraft/world/level/chunk/ChunkGeneratorStructureState; a
	ensureStructuresGenerated ()V b
	generatePositions ()V e
	generateRingPositions (Lnet/minecraft/core/Holder;Lnet/minecraft/world/level/levelgen/structure/placement/ConcentricRingsStructurePlacement;)Ljava/util/concurrent/CompletableFuture; a
	getLevelSeed ()J d
	getPlacementsForStructure (Lnet/minecraft/core/Holder;)Ljava/util/List; a
	getRingPositionsFor (Lnet/minecraft/world/level/levelgen/structure/placement/ConcentricRingsStructurePlacement;)Ljava/util/List; a
	hasBiomesForStructureSet (Lnet/minecraft/world/level/levelgen/structure/StructureSet;Lnet/minecraft/world/level/biome/BiomeSource;)Z a
	hasStructureChunkInRange (Lnet/minecraft/core/Holder;III)Z a
	possibleStructureSets ()Ljava/util/List; a
	randomState ()Lnet/minecraft/world/level/levelgen/RandomState; c
net/minecraft/world/level/chunk/ChunkGenerators dea
	bootstrap (Lnet/minecraft/core/Registry;)Lcom/mojang/serialization/Codec; a
net/minecraft/world/level/chunk/ChunkSource deb
	gatherStats ()Ljava/lang/String; e
	getChunk (IILnet/minecraft/world/level/chunk/ChunkStatus;Z)Lnet/minecraft/world/level/chunk/ChunkAccess; a
	getChunk (IIZ)Lnet/minecraft/world/level/chunk/LevelChunk; a
	getChunkForLighting (II)Lnet/minecraft/world/level/chunk/LightChunk; c
	getChunkNow (II)Lnet/minecraft/world/level/chunk/LevelChunk; a
	getLightEngine ()Lnet/minecraft/world/level/lighting/LevelLightEngine; p
	getLoadedChunksCount ()I j
	hasChunk (II)Z b
	setSpawnSettings (ZZ)V a
	tick (Ljava/util/function/BooleanSupplier;Z)V a
	updateChunkForced (Lnet/minecraft/world/level/ChunkPos;Z)V a
net/minecraft/world/level/chunk/ChunkStatus dec
	BIOMES f
	CARVERS i
	EMPTY c
	FEATURES j
	FULL n
	INITIALIZE_LIGHT k
	LIGHT l
	MAX_STRUCTURE_DISTANCE a
	NOISE g
	PASSTHROUGH_LOAD_TASK p
	POST_FEATURES b
	PRE_FEATURES o
	RANGE_BY_STATUS r
	SPAWN m
	STATUS_BY_RANGE q
	STRUCTURE_REFERENCES e
	STRUCTURE_STARTS d
	SURFACE h
	chunkType y
	generationTask u
	hasLoadDependencies x
	heightmapsAfter z
	index s
	loadingTask v
	parent t
	range w
	byName (Ljava/lang/String;)Lnet/minecraft/world/level/chunk/ChunkStatus; a
	generate (Ljava/util/concurrent/Executor;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplateManager;Lnet/minecraft/server/level/ThreadedLevelLightEngine;Ljava/util/function/Function;Ljava/util/List;)Ljava/util/concurrent/CompletableFuture; a
	getChunkType ()Lnet/minecraft/world/level/chunk/ChunkStatus$ChunkType; g
	getDistance (Lnet/minecraft/world/level/chunk/ChunkStatus;)I a
	getIndex ()I c
	getParent ()Lnet/minecraft/world/level/chunk/ChunkStatus; d
	getRange ()I e
	getStatusAroundFullChunk (I)Lnet/minecraft/world/level/chunk/ChunkStatus; a
	getStatusList ()Ljava/util/List; a
	hasLoadDependencies ()Z f
	heightmapsAfter ()Ljava/util/EnumSet; h
	initializeLight (Lnet/minecraft/server/level/ThreadedLevelLightEngine;Lnet/minecraft/world/level/chunk/ChunkAccess;)Ljava/util/concurrent/CompletableFuture; a
	isLighted (Lnet/minecraft/world/level/chunk/ChunkAccess;)Z a
	isOrAfter (Lnet/minecraft/world/level/chunk/ChunkStatus;)Z b
	lightChunk (Lnet/minecraft/server/level/ThreadedLevelLightEngine;Lnet/minecraft/world/level/chunk/ChunkAccess;)Ljava/util/concurrent/CompletableFuture; b
	load (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplateManager;Lnet/minecraft/server/level/ThreadedLevelLightEngine;Ljava/util/function/Function;Lnet/minecraft/world/level/chunk/ChunkAccess;)Ljava/util/concurrent/CompletableFuture; a
	maxDistance ()I b
	register (Ljava/lang/String;Lnet/minecraft/world/level/chunk/ChunkStatus;ILjava/util/EnumSet;Lnet/minecraft/world/level/chunk/ChunkStatus$ChunkType;Lnet/minecraft/world/level/chunk/ChunkStatus$GenerationTask;)Lnet/minecraft/world/level/chunk/ChunkStatus; a
	register (Ljava/lang/String;Lnet/minecraft/world/level/chunk/ChunkStatus;IZLjava/util/EnumSet;Lnet/minecraft/world/level/chunk/ChunkStatus$ChunkType;Lnet/minecraft/world/level/chunk/ChunkStatus$GenerationTask;Lnet/minecraft/world/level/chunk/ChunkStatus$LoadingTask;)Lnet/minecraft/world/level/chunk/ChunkStatus; a
	registerSimple (Ljava/lang/String;Lnet/minecraft/world/level/chunk/ChunkStatus;ILjava/util/EnumSet;Lnet/minecraft/world/level/chunk/ChunkStatus$ChunkType;Lnet/minecraft/world/level/chunk/ChunkStatus$SimpleGenerationTask;)Lnet/minecraft/world/level/chunk/ChunkStatus; a
net/minecraft/world/level/chunk/ChunkStatus$ChunkType dec$a
	$VALUES c
	LEVELCHUNK b
	PROTOCHUNK a
	$values ()[Lnet/minecraft/world/level/chunk/ChunkStatus$ChunkType; a
net/minecraft/world/level/chunk/ChunkStatus$GenerationTask dec$b
net/minecraft/world/level/chunk/ChunkStatus$LoadingTask dec$c
net/minecraft/world/level/chunk/ChunkStatus$SimpleGenerationTask dec$d
net/minecraft/world/level/chunk/DataLayer ded
	LAYER_COUNT a
	LAYER_SIZE b
	NIBBLE_SIZE e
	SIZE c
	data d
	defaultValue f
	copy ()Lnet/minecraft/world/level/chunk/DataLayer; b
	fill (I)V a
	get (I)I d
	get (III)I a
	getByteIndex (I)I f
	getData ()[B a
	getIndex (III)I b
	getNibbleIndex (I)I e
	isDefinitelyFilledWith (I)Z c
	isDefinitelyHomogenous ()Z c
	isEmpty ()Z d
	layerToString (I)Ljava/lang/String; b
	packFilled (I)B g
	set (II)V a
	set (IIII)V a
net/minecraft/world/level/chunk/EmptyLevelChunk dee
	biome n
	addAndRegisterBlockEntity (Lnet/minecraft/world/level/block/entity/BlockEntity;)V b
	getBlockEntity (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/chunk/LevelChunk$EntityCreationType;)Lnet/minecraft/world/level/block/entity/BlockEntity; a
	getBlockState (Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a_
	getFluidState (Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/material/FluidState; b_
	getFullStatus ()Lnet/minecraft/server/level/FullChunkStatus; D
	getLightEmission (Lnet/minecraft/core/BlockPos;)I h
	isEmpty ()Z C
	isYSpaceEmpty (II)Z a
	removeBlockEntity (Lnet/minecraft/core/BlockPos;)V d
	setBlockEntity (Lnet/minecraft/world/level/block/entity/BlockEntity;)V a
	setBlockState (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)Lnet/minecraft/world/level/block/state/BlockState; a
net/minecraft/world/level/chunk/GlobalPalette def
	registry a
	copy ()Lnet/minecraft/world/level/chunk/Palette; c
	create (ILnet/minecraft/core/IdMap;Lnet/minecraft/world/level/chunk/PaletteResize;Ljava/util/List;)Lnet/minecraft/world/level/chunk/Palette; a
	getSerializedSize ()I a
	getSize ()I b
	idFor (Ljava/lang/Object;)I a
	maybeHas (Ljava/util/function/Predicate;)Z a
	read (Lnet/minecraft/network/FriendlyByteBuf;)V a
	valueFor (I)Ljava/lang/Object; a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V b
net/minecraft/world/level/chunk/HashMapPalette deg
	bits d
	registry a
	resizeHandler c
	values b
	copy ()Lnet/minecraft/world/level/chunk/Palette; c
	create (ILnet/minecraft/core/IdMap;Lnet/minecraft/world/level/chunk/PaletteResize;Ljava/util/List;)Lnet/minecraft/world/level/chunk/Palette; a
	getEntries ()Ljava/util/List; d
	getSerializedSize ()I a
	getSize ()I b
	idFor (Ljava/lang/Object;)I a
	maybeHas (Ljava/util/function/Predicate;)Z a
	read (Lnet/minecraft/network/FriendlyByteBuf;)V a
	valueFor (I)Ljava/lang/Object; a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V b
net/minecraft/world/level/chunk/ImposterProtoChunk deh
	allowWrites o
	wrapped n
	addEntity (Lnet/minecraft/world/entity/Entity;)V a
	addReferenceForStructure (Lnet/minecraft/world/level/levelgen/structure/Structure;J)V a
	fillBiomesFromNoise (Lnet/minecraft/world/level/biome/BiomeResolver;Lnet/minecraft/world/level/biome/Climate$Sampler;)V a
	findBlocks (Ljava/util/function/Predicate;Ljava/util/function/BiConsumer;)V a
	fixType (Lnet/minecraft/world/level/levelgen/Heightmap$Types;)Lnet/minecraft/world/level/levelgen/Heightmap$Types; c
	getAllReferences ()Ljava/util/Map; h
	getAllStarts ()Ljava/util/Map; g
	getBlendingData ()Lnet/minecraft/world/level/levelgen/blending/BlendingData; t
	getBlockEntity (Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/entity/BlockEntity; c_
	getBlockEntityNbt (Lnet/minecraft/core/BlockPos;)Lnet/minecraft/nbt/CompoundTag; f
	getBlockEntityNbtForSaving (Lnet/minecraft/core/BlockPos;)Lnet/minecraft/nbt/CompoundTag; g
	getBlockState (Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a_
	getBlockTicks ()Lnet/minecraft/world/ticks/TickContainerAccess; o
	getCarvingMask (Lnet/minecraft/world/level/levelgen/GenerationStep$Carving;)Lnet/minecraft/world/level/chunk/CarvingMask; a
	getFluidState (Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/material/FluidState; b_
	getFluidTicks ()Lnet/minecraft/world/ticks/TickContainerAccess; p
	getHeight (Lnet/minecraft/world/level/levelgen/Heightmap$Types;II)I a
	getMaxLightLevel ()I M
	getOrCreateCarvingMask (Lnet/minecraft/world/level/levelgen/GenerationStep$Carving;)Lnet/minecraft/world/level/chunk/CarvingMask; b
	getOrCreateHeightmapUnprimed (Lnet/minecraft/world/level/levelgen/Heightmap$Types;)Lnet/minecraft/world/level/levelgen/Heightmap; a
	getPos ()Lnet/minecraft/world/level/ChunkPos; f
	getReferencesForStructure (Lnet/minecraft/world/level/levelgen/structure/Structure;)Lit/unimi/dsi/fastutil/longs/LongSet; b
	getSection (I)Lnet/minecraft/world/level/chunk/LevelChunkSection; b
	getSections ()[Lnet/minecraft/world/level/chunk/LevelChunkSection; d
	getSkyLightSources ()Lnet/minecraft/world/level/lighting/ChunkSkyLightSources; B
	getStartForStructure (Lnet/minecraft/world/level/levelgen/structure/Structure;)Lnet/minecraft/world/level/levelgen/structure/StructureStart; a
	getStatus ()Lnet/minecraft/world/level/chunk/ChunkStatus; j
	getTicksForSerialization ()Lnet/minecraft/world/level/chunk/ChunkAccess$TicksToSave; q
	getWrapped ()Lnet/minecraft/world/level/chunk/LevelChunk; C
	initializeLightSources ()V A
	isLightCorrect ()Z v
	isUnsaved ()Z i
	markPosForPostprocessing (Lnet/minecraft/core/BlockPos;)V e
	removeBlockEntity (Lnet/minecraft/core/BlockPos;)V d
	setAllReferences (Ljava/util/Map;)V b
	setAllStarts (Ljava/util/Map;)V a
	setBlendingData (Lnet/minecraft/world/level/levelgen/blending/BlendingData;)V a
	setBlockEntity (Lnet/minecraft/world/level/block/entity/BlockEntity;)V a
	setBlockEntityNbt (Lnet/minecraft/nbt/CompoundTag;)V a
	setBlockState (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)Lnet/minecraft/world/level/block/state/BlockState; a
	setHeightmap (Lnet/minecraft/world/level/levelgen/Heightmap$Types;[J)V a
	setLightCorrect (Z)V b
	setStartForStructure (Lnet/minecraft/world/level/levelgen/structure/Structure;Lnet/minecraft/world/level/levelgen/structure/StructureStart;)V a
	setStatus (Lnet/minecraft/world/level/chunk/ChunkStatus;)V a
	setUnsaved (Z)V a
net/minecraft/world/level/chunk/LevelChunk dei
	LOGGER n
	NULL_TICKER o
	blockTicks v
	fluidTicks w
	fullStatus s
	gameEventListenerRegistrySections u
	level r
	loaded q
	postLoad t
	tickersInLevel p
	addAndRegisterBlockEntity (Lnet/minecraft/world/level/block/entity/BlockEntity;)V b
	addEntity (Lnet/minecraft/world/entity/Entity;)V a
	addGameEventListener (Lnet/minecraft/world/level/block/entity/BlockEntity;Lnet/minecraft/server/level/ServerLevel;)V b
	clearAllBlockEntities ()V I
	createBlockEntity (Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/entity/BlockEntity; j
	createTicker (Lnet/minecraft/world/level/block/entity/BlockEntity;Lnet/minecraft/world/level/block/entity/BlockEntityTicker;)Lnet/minecraft/world/level/block/entity/TickingBlockEntity; a
	getBlockEntities ()Ljava/util/Map; G
	getBlockEntity (Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/entity/BlockEntity; c_
	getBlockEntity (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/chunk/LevelChunk$EntityCreationType;)Lnet/minecraft/world/level/block/entity/BlockEntity; a
	getBlockEntityNbtForSaving (Lnet/minecraft/core/BlockPos;)Lnet/minecraft/nbt/CompoundTag; g
	getBlockState (Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a_
	getBlockTicks ()Lnet/minecraft/world/ticks/TickContainerAccess; o
	getFluidState (III)Lnet/minecraft/world/level/material/FluidState; a
	getFluidState (Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/material/FluidState; b_
	getFluidTicks ()Lnet/minecraft/world/ticks/TickContainerAccess; p
	getFullStatus ()Lnet/minecraft/server/level/FullChunkStatus; D
	getLevel ()Lnet/minecraft/world/level/Level; F
	getListenerRegistry (I)Lnet/minecraft/world/level/gameevent/GameEventListenerRegistry; a
	getStatus ()Lnet/minecraft/world/level/chunk/ChunkStatus; j
	getTicksForSerialization ()Lnet/minecraft/world/level/chunk/ChunkAccess$TicksToSave; q
	isEmpty ()Z C
	isInLevel ()Z K
	isTicking (Lnet/minecraft/core/BlockPos;)Z k
	postProcessGeneration ()V H
	promotePendingBlockEntity (Lnet/minecraft/core/BlockPos;Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/world/level/block/entity/BlockEntity; a
	registerAllBlockEntitiesAfterLevelLoad ()V J
	registerTickContainerInLevel (Lnet/minecraft/server/level/ServerLevel;)V a
	removeBlockEntity (Lnet/minecraft/core/BlockPos;)V d
	removeBlockEntityTicker (Lnet/minecraft/core/BlockPos;)V l
	removeGameEventListener (Lnet/minecraft/world/level/block/entity/BlockEntity;Lnet/minecraft/server/level/ServerLevel;)V a
	removeGameEventListenerRegistry (I)V c
	replaceBiomes (Lnet/minecraft/network/FriendlyByteBuf;)V a
	replaceWithPacketData (Lnet/minecraft/network/FriendlyByteBuf;Lnet/minecraft/nbt/CompoundTag;Ljava/util/function/Consumer;)V a
	runPostLoad ()V E
	setBlockEntity (Lnet/minecraft/world/level/block/entity/BlockEntity;)V a
	setBlockState (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)Lnet/minecraft/world/level/block/state/BlockState; a
	setFullStatus (Ljava/util/function/Supplier;)V b
	setLoaded (Z)V c
	unpackTicks (J)V c
	unregisterTickContainerFromLevel (Lnet/minecraft/server/level/ServerLevel;)V b
	updateBlockEntityTicker (Lnet/minecraft/world/level/block/entity/BlockEntity;)V c
net/minecraft/world/level/chunk/LevelChunk$BoundTickingBlockEntity dei$a
	blockEntity b
	loggedInvalidBlockState d
	ticker c
	getPos ()Lnet/minecraft/core/BlockPos; c
	getType ()Ljava/lang/String; d
	isRemoved ()Z b
	tick ()V a
net/minecraft/world/level/chunk/LevelChunk$EntityCreationType dei$b
	$VALUES d
	CHECK c
	IMMEDIATE a
	QUEUED b
	$values ()[Lnet/minecraft/world/level/chunk/LevelChunk$EntityCreationType; a
net/minecraft/world/level/chunk/LevelChunk$PostLoadProcessor dei$c
net/minecraft/world/level/chunk/LevelChunk$RebindableTickingBlockEntityWrapper dei$d
	ticker b
	getPos ()Lnet/minecraft/core/BlockPos; c
	getType ()Ljava/lang/String; d
	isRemoved ()Z b
	rebind (Lnet/minecraft/world/level/block/entity/TickingBlockEntity;)V a
	tick ()V a
net/minecraft/world/level/chunk/LevelChunkSection dej
	BIOME_CONTAINER_BITS d
	SECTION_HEIGHT b
	SECTION_SIZE c
	SECTION_WIDTH a
	biomes i
	nonEmptyBlockCount e
	states h
	tickingBlockCount f
	tickingFluidCount g
	acquire ()V a
	fillBiomesFromNoise (Lnet/minecraft/world/level/biome/BiomeResolver;Lnet/minecraft/world/level/biome/Climate$Sampler;III)V a
	getBiomes ()Lnet/minecraft/world/level/chunk/PalettedContainerRO; i
	getBlockState (III)Lnet/minecraft/world/level/block/state/BlockState; a
	getFluidState (III)Lnet/minecraft/world/level/material/FluidState; b
	getNoiseBiome (III)Lnet/minecraft/core/Holder; c
	getSerializedSize ()I j
	getStates ()Lnet/minecraft/world/level/chunk/PalettedContainer; h
	hasOnlyAir ()Z c
	isRandomlyTicking ()Z d
	isRandomlyTickingBlocks ()Z e
	isRandomlyTickingFluids ()Z f
	maybeHas (Ljava/util/function/Predicate;)Z a
	read (Lnet/minecraft/network/FriendlyByteBuf;)V a
	readBiomes (Lnet/minecraft/network/FriendlyByteBuf;)V b
	recalcBlockCounts ()V g
	release ()V b
	setBlockState (IIILnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/state/BlockState; a
	setBlockState (IIILnet/minecraft/world/level/block/state/BlockState;Z)Lnet/minecraft/world/level/block/state/BlockState; a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V c
net/minecraft/world/level/chunk/LightChunk dek
	findBlockLightSources (Ljava/util/function/BiConsumer;)V a
	getSkyLightSources ()Lnet/minecraft/world/level/lighting/ChunkSkyLightSources; B
net/minecraft/world/level/chunk/LightChunkGetter del
	getChunkForLighting (II)Lnet/minecraft/world/level/chunk/LightChunk; c
	getLevel ()Lnet/minecraft/world/level/BlockGetter; q
	onLightUpdate (Lnet/minecraft/world/level/LightLayer;Lnet/minecraft/core/SectionPos;)V a
net/minecraft/world/level/chunk/LinearPalette dem
	bits d
	registry a
	resizeHandler c
	size e
	values b
	copy ()Lnet/minecraft/world/level/chunk/Palette; c
	create (ILnet/minecraft/core/IdMap;Lnet/minecraft/world/level/chunk/PaletteResize;Ljava/util/List;)Lnet/minecraft/world/level/chunk/Palette; a
	getSerializedSize ()I a
	getSize ()I b
	idFor (Ljava/lang/Object;)I a
	maybeHas (Ljava/util/function/Predicate;)Z a
	read (Lnet/minecraft/network/FriendlyByteBuf;)V a
	valueFor (I)Ljava/lang/Object; a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V b
net/minecraft/world/level/chunk/MissingPaletteEntryException den
net/minecraft/world/level/chunk/Palette deo
	copy ()Lnet/minecraft/world/level/chunk/Palette; c
	getSerializedSize ()I a
	getSize ()I b
	idFor (Ljava/lang/Object;)I a
	maybeHas (Ljava/util/function/Predicate;)Z a
	read (Lnet/minecraft/network/FriendlyByteBuf;)V a
	valueFor (I)Ljava/lang/Object; a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V b
net/minecraft/world/level/chunk/Palette$Factory deo$a
net/minecraft/world/level/chunk/PaletteResize dep
net/minecraft/world/level/chunk/PalettedContainer deq
	MIN_PALETTE_BITS a
	data d
	dummyPaletteResize b
	registry c
	strategy e
	threadingDetector f
	acquire ()V a
	codec (Lnet/minecraft/core/IdMap;Lcom/mojang/serialization/Codec;Lnet/minecraft/world/level/chunk/PalettedContainer$Strategy;Ljava/lang/Object;Lnet/minecraft/world/level/chunk/PalettedContainerRO$Unpacker;)Lcom/mojang/serialization/Codec; a
	codecRO (Lnet/minecraft/core/IdMap;Lcom/mojang/serialization/Codec;Lnet/minecraft/world/level/chunk/PalettedContainer$Strategy;Ljava/lang/Object;)Lcom/mojang/serialization/Codec; b
	codecRW (Lnet/minecraft/core/IdMap;Lcom/mojang/serialization/Codec;Lnet/minecraft/world/level/chunk/PalettedContainer$Strategy;Ljava/lang/Object;)Lcom/mojang/serialization/Codec; a
	copy ()Lnet/minecraft/world/level/chunk/PalettedContainer; d
	count (Lnet/minecraft/world/level/chunk/PalettedContainer$CountConsumer;)V a
	createOrReuseData (Lnet/minecraft/world/level/chunk/PalettedContainer$Data;I)Lnet/minecraft/world/level/chunk/PalettedContainer$Data; a
	get (I)Ljava/lang/Object; a
	get (III)Ljava/lang/Object; a
	getAll (Ljava/util/function/Consumer;)V a
	getAndSet (IIILjava/lang/Object;)Ljava/lang/Object; a
	getAndSet (ILjava/lang/Object;)Ljava/lang/Object; a
	getAndSetUnchecked (IIILjava/lang/Object;)Ljava/lang/Object; b
	getSerializedSize ()I c
	maybeHas (Ljava/util/function/Predicate;)Z a
	pack (Lnet/minecraft/core/IdMap;Lnet/minecraft/world/level/chunk/PalettedContainer$Strategy;)Lnet/minecraft/world/level/chunk/PalettedContainerRO$PackedData; a
	read (Lnet/minecraft/network/FriendlyByteBuf;)V a
	recreate ()Lnet/minecraft/world/level/chunk/PalettedContainer; e
	release ()V b
	set (IIILjava/lang/Object;)V c
	set (ILjava/lang/Object;)V b
	swapPalette ([ILjava/util/function/IntUnaryOperator;)V a
	unpack (Lnet/minecraft/core/IdMap;Lnet/minecraft/world/level/chunk/PalettedContainer$Strategy;Lnet/minecraft/world/level/chunk/PalettedContainerRO$PackedData;)Lcom/mojang/serialization/DataResult; a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V b
net/minecraft/world/level/chunk/PalettedContainer$Configuration deq$a
	bits b
	factory a
	bits ()I b
	createData (Lnet/minecraft/core/IdMap;Lnet/minecraft/world/level/chunk/PaletteResize;I)Lnet/minecraft/world/level/chunk/PalettedContainer$Data; a
	factory ()Lnet/minecraft/world/level/chunk/Palette$Factory; a
net/minecraft/world/level/chunk/PalettedContainer$CountConsumer deq$b
net/minecraft/world/level/chunk/PalettedContainer$Data deq$c
	configuration a
	palette c
	storage b
	configuration ()Lnet/minecraft/world/level/chunk/PalettedContainer$Configuration; c
	copy ()Lnet/minecraft/world/level/chunk/PalettedContainer$Data; b
	copyFrom (Lnet/minecraft/world/level/chunk/Palette;Lnet/minecraft/util/BitStorage;)V a
	getSerializedSize ()I a
	palette ()Lnet/minecraft/world/level/chunk/Palette; e
	storage ()Lnet/minecraft/util/BitStorage; d
	write (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/world/level/chunk/PalettedContainer$Strategy deq$d
	GLOBAL_PALETTE_FACTORY f
	HASHMAP_PALETTE_FACTORY c
	LINEAR_PALETTE_FACTORY b
	SECTION_BIOMES e
	SECTION_STATES d
	SINGLE_VALUE_PALETTE_FACTORY a
	sizeBits g
	calculateBitsForSerialization (Lnet/minecraft/core/IdMap;I)I b
	getConfiguration (Lnet/minecraft/core/IdMap;I)Lnet/minecraft/world/level/chunk/PalettedContainer$Configuration; a
	getIndex (III)I a
	size ()I a
net/minecraft/world/level/chunk/PalettedContainerRO der
	count (Lnet/minecraft/world/level/chunk/PalettedContainer$CountConsumer;)V a
	get (III)Ljava/lang/Object; a
	getAll (Ljava/util/function/Consumer;)V a
	getSerializedSize ()I c
	maybeHas (Ljava/util/function/Predicate;)Z a
	pack (Lnet/minecraft/core/IdMap;Lnet/minecraft/world/level/chunk/PalettedContainer$Strategy;)Lnet/minecraft/world/level/chunk/PalettedContainerRO$PackedData; a
	recreate ()Lnet/minecraft/world/level/chunk/PalettedContainer; e
	write (Lnet/minecraft/network/FriendlyByteBuf;)V b
net/minecraft/world/level/chunk/PalettedContainerRO$PackedData der$a
	paletteEntries a
	storage b
	paletteEntries ()Ljava/util/List; a
	storage ()Ljava/util/Optional; b
net/minecraft/world/level/chunk/PalettedContainerRO$Unpacker der$b
net/minecraft/world/level/chunk/ProtoChunk des
	belowZeroRetrogen r
	blockTicks s
	carvingMasks q
	entities p
	fluidTicks t
	lightEngine n
	status o
	addEntity (Lnet/minecraft/nbt/CompoundTag;)V b
	addEntity (Lnet/minecraft/world/entity/Entity;)V a
	addPackedPostProcess (SI)V a
	getBelowZeroRetrogen ()Lnet/minecraft/world/level/levelgen/BelowZeroRetrogen; x
	getBlockEntities ()Ljava/util/Map; D
	getBlockEntity (Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/entity/BlockEntity; c_
	getBlockEntityNbtForSaving (Lnet/minecraft/core/BlockPos;)Lnet/minecraft/nbt/CompoundTag; g
	getBlockEntityNbts ()Ljava/util/Map; F
	getBlockState (Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a_
	getBlockTicks ()Lnet/minecraft/world/ticks/TickContainerAccess; o
	getCarvingMask (Lnet/minecraft/world/level/levelgen/GenerationStep$Carving;)Lnet/minecraft/world/level/chunk/CarvingMask; a
	getEntities ()Ljava/util/List; E
	getFluidState (Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/material/FluidState; b_
	getFluidTicks ()Lnet/minecraft/world/ticks/TickContainerAccess; p
	getHeightAccessorForGeneration ()Lnet/minecraft/world/level/LevelHeightAccessor; z
	getOrCreateCarvingMask (Lnet/minecraft/world/level/levelgen/GenerationStep$Carving;)Lnet/minecraft/world/level/chunk/CarvingMask; b
	getStatus ()Lnet/minecraft/world/level/chunk/ChunkStatus; j
	getTicksForSerialization ()Lnet/minecraft/world/level/chunk/ChunkAccess$TicksToSave; q
	markPosForPostprocessing (Lnet/minecraft/core/BlockPos;)V e
	packOffsetCoordinates (Lnet/minecraft/core/BlockPos;)S j
	removeBlockEntity (Lnet/minecraft/core/BlockPos;)V d
	setBelowZeroRetrogen (Lnet/minecraft/world/level/levelgen/BelowZeroRetrogen;)V a
	setBlockEntity (Lnet/minecraft/world/level/block/entity/BlockEntity;)V a
	setBlockState (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)Lnet/minecraft/world/level/block/state/BlockState; a
	setCarvingMask (Lnet/minecraft/world/level/levelgen/GenerationStep$Carving;Lnet/minecraft/world/level/chunk/CarvingMask;)V a
	setLightEngine (Lnet/minecraft/world/level/lighting/LevelLightEngine;)V a
	setStartForStructure (Lnet/minecraft/world/level/levelgen/structure/Structure;Lnet/minecraft/world/level/levelgen/structure/StructureStart;)V a
	setStatus (Lnet/minecraft/world/level/chunk/ChunkStatus;)V a
	unpackBlockTicks ()Lnet/minecraft/world/ticks/LevelChunkTicks; G
	unpackFluidTicks ()Lnet/minecraft/world/ticks/LevelChunkTicks; H
	unpackOffsetCoordinates (SILnet/minecraft/world/level/ChunkPos;)Lnet/minecraft/core/BlockPos; a
	unpackTicks (Lnet/minecraft/world/ticks/ProtoChunkTicks;)Lnet/minecraft/world/ticks/LevelChunkTicks; a
net/minecraft/world/level/chunk/SingleValuePalette det
	registry a
	resizeHandler c
	value b
	copy ()Lnet/minecraft/world/level/chunk/Palette; c
	create (ILnet/minecraft/core/IdMap;Lnet/minecraft/world/level/chunk/PaletteResize;Ljava/util/List;)Lnet/minecraft/world/level/chunk/Palette; a
	getSerializedSize ()I a
	getSize ()I b
	idFor (Ljava/lang/Object;)I a
	maybeHas (Ljava/util/function/Predicate;)Z a
	read (Lnet/minecraft/network/FriendlyByteBuf;)V a
	valueFor (I)Ljava/lang/Object; a
	write (Lnet/minecraft/network/FriendlyByteBuf;)V b
net/minecraft/world/level/chunk/StructureAccess deu
	addReferenceForStructure (Lnet/minecraft/world/level/levelgen/structure/Structure;J)V a
	getAllReferences ()Ljava/util/Map; h
	getReferencesForStructure (Lnet/minecraft/world/level/levelgen/structure/Structure;)Lit/unimi/dsi/fastutil/longs/LongSet; b
	getStartForStructure (Lnet/minecraft/world/level/levelgen/structure/Structure;)Lnet/minecraft/world/level/levelgen/structure/StructureStart; a
	setAllReferences (Ljava/util/Map;)V b
	setStartForStructure (Lnet/minecraft/world/level/levelgen/structure/Structure;Lnet/minecraft/world/level/levelgen/structure/StructureStart;)V a
net/minecraft/world/level/chunk/UpgradeData dev
	CHUNKY_FIXERS j
	DIRECTIONS d
	EMPTY a
	LOGGER b
	MAP i
	TAG_INDICES c
	index h
	neighborBlockTicks f
	neighborFluidTicks g
	sides e
	isEmpty ()Z a
	loadTicks (Lnet/minecraft/nbt/CompoundTag;Ljava/lang/String;Ljava/util/function/Function;Ljava/util/List;)V a
	updateState (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
	upgrade (Lnet/minecraft/world/level/chunk/LevelChunk;)V a
	upgradeInside (Lnet/minecraft/world/level/chunk/LevelChunk;)V b
	upgradeSides (Lnet/minecraft/world/level/chunk/LevelChunk;Lnet/minecraft/core/Direction8;)V a
	write ()Lnet/minecraft/nbt/CompoundTag; b
net/minecraft/world/level/chunk/UpgradeData$BlockFixer dev$a
	processChunk (Lnet/minecraft/world/level/LevelAccessor;)V a
	updateShape (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
net/minecraft/world/level/chunk/UpgradeData$BlockFixers dev$b
	$VALUES g
	BLACKLIST a
	CHEST c
	DEFAULT b
	DIRECTIONS f
	LEAVES d
	STEM_BLOCK e
	$values ()[Lnet/minecraft/world/level/chunk/UpgradeData$BlockFixers; a
net/minecraft/world/level/chunk/storage/ChunkScanAccess dex
	scanChunk (Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/nbt/StreamTagVisitor;)Ljava/util/concurrent/CompletableFuture; a
net/minecraft/world/level/chunk/storage/ChunkSerializer dey
	BLOCK_LIGHT_TAG f
	BLOCK_STATE_CODEC h
	BLOCK_TICKS_TAG k
	FLUID_TICKS_TAG l
	HEIGHTMAPS_TAG c
	IS_LIGHT_ON_TAG d
	LOGGER i
	SECTIONS_TAG e
	SKY_LIGHT_TAG g
	TAG_UPGRADE_DATA j
	X_POS_TAG a
	Z_POS_TAG b
	getChunkTypeFromTag (Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/world/level/chunk/ChunkStatus$ChunkType; a
	getListOfCompoundsOrNull (Lnet/minecraft/nbt/CompoundTag;Ljava/lang/String;)Lnet/minecraft/nbt/ListTag; a
	logErrors (Lnet/minecraft/world/level/ChunkPos;ILjava/lang/String;)V a
	makeBiomeCodec (Lnet/minecraft/core/Registry;)Lcom/mojang/serialization/Codec; a
	packOffsets ([Lit/unimi/dsi/fastutil/shorts/ShortList;)Lnet/minecraft/nbt/ListTag; a
	packStructureData (Lnet/minecraft/world/level/levelgen/structure/pieces/StructurePieceSerializationContext;Lnet/minecraft/world/level/ChunkPos;Ljava/util/Map;Ljava/util/Map;)Lnet/minecraft/nbt/CompoundTag; a
	postLoadChunk (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/world/level/chunk/LevelChunk$PostLoadProcessor; a
	read (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/ai/village/poi/PoiManager;Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/world/level/chunk/ProtoChunk; a
	saveTicks (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/nbt/CompoundTag;Lnet/minecraft/world/level/chunk/ChunkAccess$TicksToSave;)V a
	unpackStructureReferences (Lnet/minecraft/core/RegistryAccess;Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/nbt/CompoundTag;)Ljava/util/Map; a
	unpackStructureStart (Lnet/minecraft/world/level/levelgen/structure/pieces/StructurePieceSerializationContext;Lnet/minecraft/nbt/CompoundTag;J)Ljava/util/Map; a
	write (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/level/chunk/ChunkAccess;)Lnet/minecraft/nbt/CompoundTag; a
net/minecraft/world/level/chunk/storage/ChunkStorage dez
	LAST_MONOLYTH_STRUCTURE_DATA_VERSION c
	fixerUpper d
	legacyStructureHandler b
	worker a
	chunkScanner ()Lnet/minecraft/world/level/chunk/storage/ChunkScanAccess; p
	flushWorker ()V o
	getLegacyStructureHandler (Lnet/minecraft/resources/ResourceKey;Ljava/util/function/Supplier;)Lnet/minecraft/world/level/levelgen/structure/LegacyStructureDataHandler; a
	getVersion (Lnet/minecraft/nbt/CompoundTag;)I a
	injectDatafixingContext (Lnet/minecraft/nbt/CompoundTag;Lnet/minecraft/resources/ResourceKey;Ljava/util/Optional;)V a
	isOldChunkAround (Lnet/minecraft/world/level/ChunkPos;I)Z a
	read (Lnet/minecraft/world/level/ChunkPos;)Ljava/util/concurrent/CompletableFuture; e
	upgradeChunkTag (Lnet/minecraft/resources/ResourceKey;Ljava/util/function/Supplier;Lnet/minecraft/nbt/CompoundTag;Ljava/util/Optional;)Lnet/minecraft/nbt/CompoundTag; a
	write (Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/nbt/CompoundTag;)V a
net/minecraft/world/level/chunk/storage/EntityStorage dfa
	ENTITIES_TAG c
	LOGGER b
	POSITION_TAG d
	emptyChunks g
	entityDeserializerQueue h
	fixerUpper a
	level e
	worker f
	emptyChunk (Lnet/minecraft/world/level/ChunkPos;)Lnet/minecraft/world/level/entity/ChunkEntities; b
	flush (Z)V a
	loadEntities (Lnet/minecraft/world/level/ChunkPos;)Ljava/util/concurrent/CompletableFuture; a
	readChunkPos (Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/world/level/ChunkPos; a
	storeEntities (Lnet/minecraft/world/level/entity/ChunkEntities;)V a
	upgradeChunkTag (Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/nbt/CompoundTag; b
	writeChunkPos (Lnet/minecraft/nbt/CompoundTag;Lnet/minecraft/world/level/ChunkPos;)V a
net/minecraft/world/level/chunk/storage/IOWorker dfb
	LOGGER a
	REGION_CACHE_SIZE g
	mailbox c
	pendingWrites e
	regionCacheForBlender f
	shutdownRequested b
	storage d
	createOldDataForRegion (II)Ljava/util/concurrent/CompletableFuture; b
	getOrCreateOldDataForRegion (II)Ljava/util/concurrent/CompletableFuture; a
	isOldChunk (Lnet/minecraft/nbt/CompoundTag;)Z a
	isOldChunkAround (Lnet/minecraft/world/level/ChunkPos;I)Z a
	loadAsync (Lnet/minecraft/world/level/ChunkPos;)Ljava/util/concurrent/CompletableFuture; a
	runStore (Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/world/level/chunk/storage/IOWorker$PendingStore;)V a
	scanChunk (Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/nbt/StreamTagVisitor;)Ljava/util/concurrent/CompletableFuture; a
	store (Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/nbt/CompoundTag;)Ljava/util/concurrent/CompletableFuture; a
	storePendingChunk ()V a
	submitTask (Ljava/util/function/Supplier;)Ljava/util/concurrent/CompletableFuture; a
	synchronize (Z)Ljava/util/concurrent/CompletableFuture; a
	tellStorePending ()V b
net/minecraft/world/level/chunk/storage/IOWorker$PendingStore dfb$a
	data a
	result b
net/minecraft/world/level/chunk/storage/IOWorker$Priority dfb$b
	$VALUES d
	BACKGROUND b
	FOREGROUND a
	SHUTDOWN c
	$values ()[Lnet/minecraft/world/level/chunk/storage/IOWorker$Priority; a
net/minecraft/world/level/chunk/storage/RegionBitmap dfc
	used a
	allocate (I)I a
	force (II)V a
	free (II)V b
	getUsed ()Lit/unimi/dsi/fastutil/ints/IntSet; a
net/minecraft/world/level/chunk/storage/RegionFile dfd
	CHUNK_HEADER_SIZE e
	CHUNK_NOT_PRESENT k
	EXTERNAL_CHUNK_THRESHOLD j
	EXTERNAL_FILE_EXTENSION h
	EXTERNAL_STREAM_FLAG i
	HEADER_OFFSET f
	LOGGER c
	PADDING_BUFFER g
	SECTOR_BYTES d
	SECTOR_INTS a
	externalFileDir m
	file l
	header o
	offsets p
	timestamps q
	usedSectors b
	version n
	clear (Lnet/minecraft/world/level/ChunkPos;)V d
	createChunkInputStream (Lnet/minecraft/world/level/ChunkPos;BLjava/io/InputStream;)Ljava/io/DataInputStream; a
	createExternalChunkInputStream (Lnet/minecraft/world/level/ChunkPos;B)Ljava/io/DataInputStream; a
	createExternalStub ()Ljava/nio/ByteBuffer; c
	createStream (Ljava/nio/ByteBuffer;I)Ljava/io/ByteArrayInputStream; a
	doesChunkExist (Lnet/minecraft/world/level/ChunkPos;)Z b
	flush ()V a
	getChunkDataInputStream (Lnet/minecraft/world/level/ChunkPos;)Ljava/io/DataInputStream; a
	getChunkDataOutputStream (Lnet/minecraft/world/level/ChunkPos;)Ljava/io/DataOutputStream; c
	getExternalChunkPath (Lnet/minecraft/world/level/ChunkPos;)Ljava/nio/file/Path; f
	getExternalChunkVersion (B)B b
	getNumSectors (I)I a
	getOffset (Lnet/minecraft/world/level/ChunkPos;)I g
	getOffsetIndex (Lnet/minecraft/world/level/ChunkPos;)I h
	getSectorNumber (I)I b
	getTimestamp ()I b
	hasChunk (Lnet/minecraft/world/level/ChunkPos;)Z e
	isExternalStreamChunk (B)Z a
	packSectorOffset (II)I a
	padToFullSector ()V e
	sizeToSectors (I)I c
	write (Lnet/minecraft/world/level/ChunkPos;Ljava/nio/ByteBuffer;)V a
	writeHeader ()V d
	writeToExternalFile (Ljava/nio/file/Path;Ljava/nio/ByteBuffer;)Lnet/minecraft/world/level/chunk/storage/RegionFile$CommitOp; a
net/minecraft/world/level/chunk/storage/RegionFile$ChunkBuffer dfd$a
	pos b
net/minecraft/world/level/chunk/storage/RegionFile$CommitOp dfd$b
net/minecraft/world/level/chunk/storage/RegionFileStorage dfe
	ANVIL_EXTENSION a
	MAX_CACHE_SIZE b
	folder d
	regionCache c
	sync e
	flush ()V a
	getRegionFile (Lnet/minecraft/world/level/ChunkPos;)Lnet/minecraft/world/level/chunk/storage/RegionFile; b
	read (Lnet/minecraft/world/level/ChunkPos;)Lnet/minecraft/nbt/CompoundTag; a
	scanChunk (Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/nbt/StreamTagVisitor;)V a
	write (Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/nbt/CompoundTag;)V a
net/minecraft/world/level/chunk/storage/RegionFileVersion dff
	VERSIONS d
	VERSION_DEFLATE b
	VERSION_GZIP a
	VERSION_NONE c
	id e
	inputWrapper f
	outputWrapper g
	fromId (I)Lnet/minecraft/world/level/chunk/storage/RegionFileVersion; a
	getId ()I a
	isValidVersion (I)Z b
	register (Lnet/minecraft/world/level/chunk/storage/RegionFileVersion;)Lnet/minecraft/world/level/chunk/storage/RegionFileVersion; a
	wrap (Ljava/io/InputStream;)Ljava/io/InputStream; a
	wrap (Ljava/io/OutputStream;)Ljava/io/OutputStream; a
net/minecraft/world/level/chunk/storage/RegionFileVersion$StreamWrapper dff$a
net/minecraft/world/level/chunk/storage/SectionStorage dfg
	LOGGER a
	SECTIONS_TAG b
	codec g
	dirty f
	factory h
	fixerUpper i
	levelHeightAccessor c
	registryAccess k
	storage e
	type j
	worker d
	flush (Lnet/minecraft/world/level/ChunkPos;)V a
	get (J)Ljava/util/Optional; c
	getKey (Lnet/minecraft/world/level/ChunkPos;I)J a
	getOrCreate (J)Ljava/lang/Object; f
	getOrLoad (J)Ljava/util/Optional; d
	getVersion (Lcom/mojang/serialization/Dynamic;)I a
	hasWork ()Z a
	onSectionLoad (J)V b
	outsideStoredRange (J)Z e
	readColumn (Lnet/minecraft/world/level/ChunkPos;)V b
	readColumn (Lnet/minecraft/world/level/ChunkPos;Lcom/mojang/serialization/DynamicOps;Ljava/lang/Object;)V a
	setDirty (J)V a
	tick (Ljava/util/function/BooleanSupplier;)V a
	tryRead (Lnet/minecraft/world/level/ChunkPos;)Ljava/util/concurrent/CompletableFuture; c
	writeColumn (Lnet/minecraft/world/level/ChunkPos;)V d
	writeColumn (Lnet/minecraft/world/level/ChunkPos;Lcom/mojang/serialization/DynamicOps;)Lcom/mojang/serialization/Dynamic; a
net/minecraft/world/level/dimension/BuiltinDimensionTypes dfi
	END c
	END_EFFECTS g
	NETHER b
	NETHER_EFFECTS f
	OVERWORLD a
	OVERWORLD_CAVES d
	OVERWORLD_EFFECTS e
	register (Ljava/lang/String;)Lnet/minecraft/resources/ResourceKey; a
net/minecraft/world/level/dimension/DimensionDefaults dfj
	END_GENERATION_HEIGHT k
	END_LEVEL_HEIGHT j
	END_LOGICAL_HEIGHT l
	END_MIN_Y i
	NETHER_GENERATION_HEIGHT g
	NETHER_LEVEL_HEIGHT f
	NETHER_LOGICAL_HEIGHT h
	NETHER_MIN_Y e
	OVERWORLD_GENERATION_HEIGHT c
	OVERWORLD_LEVEL_HEIGHT b
	OVERWORLD_LOGICAL_HEIGHT d
	OVERWORLD_MIN_Y a
net/minecraft/world/level/dimension/DimensionType dfk
	BITS_FOR_Y a
	CODEC j
	DIRECT_CODEC h
	MAX_Y d
	MIN_HEIGHT b
	MIN_Y e
	MOON_BRIGHTNESS_PER_PHASE i
	MOON_PHASES z
	WAY_ABOVE_MAX_Y f
	WAY_BELOW_MIN_Y g
	Y_SIZE c
	ambientLight x
	bedWorks q
	coordinateScale p
	effectsLocation w
	fixedTime k
	hasCeiling m
	hasSkyLight l
	height t
	infiniburn v
	logicalHeight u
	minY s
	monsterSettings y
	natural o
	respawnAnchorWorks r
	ultraWarm n
	ambientLight ()F s
	bedWorks ()Z l
	coordinateScale ()D k
	effectsLocation ()Lnet/minecraft/resources/ResourceLocation; r
	fixedTime ()Ljava/util/OptionalLong; f
	getStorageFolder (Lnet/minecraft/resources/ResourceKey;Ljava/nio/file/Path;)Ljava/nio/file/Path; a
	getTeleportationScale (Lnet/minecraft/world/level/dimension/DimensionType;Lnet/minecraft/world/level/dimension/DimensionType;)D a
	hasCeiling ()Z h
	hasFixedTime ()Z a
	hasRaids ()Z c
	hasSkyLight ()Z g
	height ()I o
	infiniburn ()Lnet/minecraft/tags/TagKey; q
	logicalHeight ()I p
	minY ()I n
	monsterSettings ()Lnet/minecraft/world/level/dimension/DimensionType$MonsterSettings; t
	monsterSpawnBlockLightLimit ()I e
	monsterSpawnLightTest ()Lnet/minecraft/util/valueproviders/IntProvider; d
	moonPhase (J)I b
	natural ()Z j
	parseLegacy (Lcom/mojang/serialization/Dynamic;)Lcom/mojang/serialization/DataResult; a
	piglinSafe ()Z b
	respawnAnchorWorks ()Z m
	timeOfDay (J)F a
	ultraWarm ()Z i
net/minecraft/world/level/dimension/DimensionType$MonsterSettings dfk$a
	CODEC a
	hasRaids c
	monsterSpawnBlockLightLimit e
	monsterSpawnLightTest d
	piglinSafe b
	hasRaids ()Z b
	monsterSpawnBlockLightLimit ()I d
	monsterSpawnLightTest ()Lnet/minecraft/util/valueproviders/IntProvider; c
	piglinSafe ()Z a
net/minecraft/world/level/dimension/LevelStem dfl
	CODEC a
	END d
	NETHER c
	OVERWORLD b
	generator f
	type e
	generator ()Lnet/minecraft/world/level/chunk/ChunkGenerator; b
	type ()Lnet/minecraft/core/Holder; a
net/minecraft/world/level/dimension/end/DragonRespawnAnimation dfm
	$VALUES f
	END e
	PREPARING_TO_SUMMON_PILLARS b
	START a
	SUMMONING_DRAGON d
	SUMMONING_PILLARS c
	$values ()[Lnet/minecraft/world/level/dimension/end/DragonRespawnAnimation; a
	tick (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/level/dimension/end/EndDragonFight;Ljava/util/List;ILnet/minecraft/core/BlockPos;)V a
net/minecraft/world/level/dimension/end/EndDragonFight dfn
	ARENA_SIZE_CHUNKS g
	ARENA_TICKET_LEVEL b
	DRAGON_SPAWN_Y c
	GATEWAY_COUNT h
	GATEWAY_DISTANCE i
	LOGGER d
	MAX_TICKS_BEFORE_DRAGON_RESPAWN e
	TIME_BETWEEN_CRYSTAL_SCANS f
	TIME_BETWEEN_PLAYER_SCANS a
	crystalsAlive q
	dragonEvent k
	dragonKilled t
	dragonUUID w
	exitPortalPattern o
	gateways n
	level l
	needsStateScanning x
	origin m
	portalLocation y
	previouslyKilled u
	respawnCrystals B
	respawnStage z
	respawnTime A
	skipArenaLoadedCheck v
	ticksSinceCrystalsScanned r
	ticksSinceDragonSeen p
	ticksSinceLastPlayerScan s
	validPlayer j
	createNewDragon ()Lnet/minecraft/world/entity/boss/enderdragon/EnderDragon; r
	findExitPortal ()Lnet/minecraft/world/level/block/state/pattern/BlockPattern$BlockPatternMatch; m
	findOrCreateDragon ()V k
	getCrystalsAlive ()I e
	getDragonUUID ()Ljava/util/UUID; i
	hasActiveExitPortal ()Z l
	hasPreviouslyKilledDragon ()Z f
	isArenaLoaded ()Z n
	onCrystalDestroyed (Lnet/minecraft/world/entity/boss/enderdragon/EndCrystal;Lnet/minecraft/world/damagesource/DamageSource;)V a
	removeAllGateways ()V d
	resetSpikeCrystals ()V h
	respawnDragon (Ljava/util/List;)V a
	saveData ()Lnet/minecraft/world/level/dimension/end/EndDragonFight$Data; b
	scanState ()V j
	setDragonKilled (Lnet/minecraft/world/entity/boss/enderdragon/EnderDragon;)V a
	setRespawnStage (Lnet/minecraft/world/level/dimension/end/DragonRespawnAnimation;)V a
	skipArenaLoadedCheck ()V a
	spawnExitPortal (Z)V a
	spawnNewGateway ()V q
	spawnNewGateway (Lnet/minecraft/core/BlockPos;)V a
	tick ()V c
	tryRespawn ()V g
	updateCrystalCount ()V p
	updateDragon (Lnet/minecraft/world/entity/boss/enderdragon/EnderDragon;)V b
	updatePlayers ()V o
net/minecraft/world/level/dimension/end/EndDragonFight$Data dfn$a
	CODEC a
	DEFAULT b
	dragonKilled d
	dragonUUID g
	exitPortalLocation h
	gateways i
	isRespawning f
	needsStateScanning c
	previouslyKilled e
	dragonKilled ()Z b
	dragonUUID ()Ljava/util/Optional; e
	exitPortalLocation ()Ljava/util/Optional; f
	gateways ()Ljava/util/Optional; g
	isRespawning ()Z d
	needsStateScanning ()Z a
	previouslyKilled ()Z c
net/minecraft/world/level/entity/ChunkEntities dfq
	entities b
	pos a
	getEntities ()Ljava/util/stream/Stream; b
	getPos ()Lnet/minecraft/world/level/ChunkPos; a
	isEmpty ()Z c
net/minecraft/world/level/entity/ChunkStatusUpdateListener dfr
net/minecraft/world/level/entity/EntityAccess dfs
	blockPosition ()Lnet/minecraft/core/BlockPos; di
	getBoundingBox ()Lnet/minecraft/world/phys/AABB; cE
	getId ()I af
	getPassengersAndSelf ()Ljava/util/stream/Stream; cQ
	getSelfAndPassengers ()Ljava/util/stream/Stream; cP
	getUUID ()Ljava/util/UUID; ct
	isAlwaysTicking ()Z dH
	setLevelCallback (Lnet/minecraft/world/level/entity/EntityInLevelCallback;)V a
	setRemoved (Lnet/minecraft/world/entity/Entity$RemovalReason;)V b
	shouldBeSaved ()Z dG
net/minecraft/world/level/entity/EntityInLevelCallback dft
	NULL a
	onMove ()V a
	onRemove (Lnet/minecraft/world/entity/Entity$RemovalReason;)V a
net/minecraft/world/level/entity/EntityLookup dfu
	LOGGER a
	byId b
	byUuid c
	add (Lnet/minecraft/world/level/entity/EntityAccess;)V a
	count ()I b
	getAllEntities ()Ljava/lang/Iterable; a
	getEntities (Lnet/minecraft/world/level/entity/EntityTypeTest;Lnet/minecraft/util/AbortableIterationConsumer;)V a
	getEntity (I)Lnet/minecraft/world/level/entity/EntityAccess; a
	getEntity (Ljava/util/UUID;)Lnet/minecraft/world/level/entity/EntityAccess; a
	remove (Lnet/minecraft/world/level/entity/EntityAccess;)V b
net/minecraft/world/level/entity/EntityPersistentStorage dfv
	flush (Z)V a
	loadEntities (Lnet/minecraft/world/level/ChunkPos;)Ljava/util/concurrent/CompletableFuture; a
	storeEntities (Lnet/minecraft/world/level/entity/ChunkEntities;)V a
net/minecraft/world/level/entity/EntitySection dfw
	LOGGER a
	chunkStatus c
	storage b
	add (Lnet/minecraft/world/level/entity/EntityAccess;)V a
	getEntities ()Ljava/util/stream/Stream; b
	getEntities (Lnet/minecraft/world/level/entity/EntityTypeTest;Lnet/minecraft/world/phys/AABB;Lnet/minecraft/util/AbortableIterationConsumer;)Lnet/minecraft/util/AbortableIterationConsumer$Continuation; a
	getEntities (Lnet/minecraft/world/phys/AABB;Lnet/minecraft/util/AbortableIterationConsumer;)Lnet/minecraft/util/AbortableIterationConsumer$Continuation; a
	getStatus ()Lnet/minecraft/world/level/entity/Visibility; c
	isEmpty ()Z a
	remove (Lnet/minecraft/world/level/entity/EntityAccess;)Z b
	size ()I d
	updateChunkStatus (Lnet/minecraft/world/level/entity/Visibility;)Lnet/minecraft/world/level/entity/Visibility; a
net/minecraft/world/level/entity/EntitySectionStorage dfx
	entityClass a
	intialSectionVisibility b
	sectionIds d
	sections c
	count ()I b
	createSection (J)Lnet/minecraft/world/level/entity/EntitySection; g
	forEachAccessibleNonEmptySection (Lnet/minecraft/world/phys/AABB;Lnet/minecraft/util/AbortableIterationConsumer;)V a
	getAllChunksWithExistingSections ()Lit/unimi/dsi/fastutil/longs/LongSet; a
	getChunkKeyFromSectionKey (J)J f
	getChunkSections (II)Lit/unimi/dsi/fastutil/longs/LongSortedSet; a
	getEntities (Lnet/minecraft/world/level/entity/EntityTypeTest;Lnet/minecraft/world/phys/AABB;Lnet/minecraft/util/AbortableIterationConsumer;)V a
	getEntities (Lnet/minecraft/world/phys/AABB;Lnet/minecraft/util/AbortableIterationConsumer;)V b
	getExistingSectionPositionsInChunk (J)Ljava/util/stream/LongStream; a
	getExistingSectionsInChunk (J)Ljava/util/stream/Stream; b
	getOrCreateSection (J)Lnet/minecraft/world/level/entity/EntitySection; c
	getSection (J)Lnet/minecraft/world/level/entity/EntitySection; d
	remove (J)V e
net/minecraft/world/level/entity/EntityTickList dfy
	active a
	iterated c
	passive b
	add (Lnet/minecraft/world/entity/Entity;)V a
	contains (Lnet/minecraft/world/entity/Entity;)Z c
	ensureActiveIsNotIterated ()V a
	forEach (Ljava/util/function/Consumer;)V a
	remove (Lnet/minecraft/world/entity/Entity;)V b
net/minecraft/world/level/entity/EntityTypeTest dfz
	forClass (Ljava/lang/Class;)Lnet/minecraft/world/level/entity/EntityTypeTest; a
	getBaseClass ()Ljava/lang/Class; a
	tryCast (Ljava/lang/Object;)Ljava/lang/Object; a
net/minecraft/world/level/entity/LevelCallback dga
	onCreated (Ljava/lang/Object;)V g
	onDestroyed (Ljava/lang/Object;)V f
	onSectionChange (Ljava/lang/Object;)V a
	onTickingEnd (Ljava/lang/Object;)V d
	onTickingStart (Ljava/lang/Object;)V e
	onTrackingEnd (Ljava/lang/Object;)V b
	onTrackingStart (Ljava/lang/Object;)V c
net/minecraft/world/level/entity/LevelEntityGetter dgb
	get (I)Lnet/minecraft/world/level/entity/EntityAccess; a
	get (Ljava/util/UUID;)Lnet/minecraft/world/level/entity/EntityAccess; a
	get (Lnet/minecraft/world/level/entity/EntityTypeTest;Lnet/minecraft/util/AbortableIterationConsumer;)V a
	get (Lnet/minecraft/world/level/entity/EntityTypeTest;Lnet/minecraft/world/phys/AABB;Lnet/minecraft/util/AbortableIterationConsumer;)V a
	get (Lnet/minecraft/world/phys/AABB;Ljava/util/function/Consumer;)V a
	getAll ()Ljava/lang/Iterable; a
net/minecraft/world/level/entity/LevelEntityGetterAdapter dgc
	sectionStorage b
	visibleEntities a
	get (I)Lnet/minecraft/world/level/entity/EntityAccess; a
	get (Ljava/util/UUID;)Lnet/minecraft/world/level/entity/EntityAccess; a
	get (Lnet/minecraft/world/level/entity/EntityTypeTest;Lnet/minecraft/util/AbortableIterationConsumer;)V a
	get (Lnet/minecraft/world/level/entity/EntityTypeTest;Lnet/minecraft/world/phys/AABB;Lnet/minecraft/util/AbortableIterationConsumer;)V a
	get (Lnet/minecraft/world/phys/AABB;Ljava/util/function/Consumer;)V a
	getAll ()Ljava/lang/Iterable; a
net/minecraft/world/level/entity/PersistentEntitySectionManager dgd
	LOGGER a
	callbacks c
	chunkLoadStatuses i
	chunkVisibility h
	chunksToUnload j
	entityGetter g
	knownUuids b
	loadingInbox k
	permanentStorage d
	sectionStorage f
	visibleEntityStorage e
	addEntity (Lnet/minecraft/world/level/entity/EntityAccess;Z)Z a
	addEntityUuid (Lnet/minecraft/world/level/entity/EntityAccess;)Z b
	addLegacyChunkEntities (Ljava/util/stream/Stream;)V a
	addNewEntity (Lnet/minecraft/world/level/entity/EntityAccess;)Z a
	addWorldGenChunkEntities (Ljava/util/stream/Stream;)V b
	areEntitiesLoaded (J)Z a
	autoSave ()V b
	canPositionTick (Lnet/minecraft/core/BlockPos;)Z a
	canPositionTick (Lnet/minecraft/world/level/ChunkPos;)Z a
	dumpSections (Ljava/io/Writer;)V a
	ensureChunkQueuedForLoad (J)V b
	gatherStats ()Ljava/lang/String; e
	getAllChunksToSave ()Lit/unimi/dsi/fastutil/longs/LongSet; h
	getEffectiveStatus (Lnet/minecraft/world/level/entity/EntityAccess;Lnet/minecraft/world/level/entity/Visibility;)Lnet/minecraft/world/level/entity/Visibility; a
	getEntityGetter ()Lnet/minecraft/world/level/entity/LevelEntityGetter; d
	isLoaded (Ljava/util/UUID;)Z a
	processChunkUnload (J)Z d
	processPendingLoads ()V g
	processUnloads ()V f
	removeSectionIfEmpty (JLnet/minecraft/world/level/entity/EntitySection;)V a
	requestChunkLoad (J)V c
	saveAll ()V c
	startTicking (Lnet/minecraft/world/level/entity/EntityAccess;)V c
	startTracking (Lnet/minecraft/world/level/entity/EntityAccess;)V e
	stopTicking (Lnet/minecraft/world/level/entity/EntityAccess;)V d
	stopTracking (Lnet/minecraft/world/level/entity/EntityAccess;)V f
	storeChunkSections (JLjava/util/function/Consumer;)Z a
	tick ()V a
	unloadEntity (Lnet/minecraft/world/level/entity/EntityAccess;)V g
	updateChunkStatus (Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/server/level/FullChunkStatus;)V a
	updateChunkStatus (Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/world/level/entity/Visibility;)V a
net/minecraft/world/level/entity/PersistentEntitySectionManager$Callback dgd$a
	currentSection e
	currentSectionKey d
	entity c
	onMove ()V a
	onRemove (Lnet/minecraft/world/entity/Entity$RemovalReason;)V a
	updateStatus (Lnet/minecraft/world/level/entity/Visibility;Lnet/minecraft/world/level/entity/Visibility;)V a
net/minecraft/world/level/entity/PersistentEntitySectionManager$ChunkLoadStatus dgd$b
	$VALUES d
	FRESH a
	LOADED c
	PENDING b
	$values ()[Lnet/minecraft/world/level/entity/PersistentEntitySectionManager$ChunkLoadStatus; a
net/minecraft/world/level/entity/TransientEntitySectionManager dge
	LOGGER a
	callbacks b
	entityGetter f
	entityStorage c
	sectionStorage d
	tickingChunks e
	addEntity (Lnet/minecraft/world/level/entity/EntityAccess;)V a
	count ()I b
	gatherStats ()Ljava/lang/String; c
	getEntityGetter ()Lnet/minecraft/world/level/entity/LevelEntityGetter; a
	removeSectionIfEmpty (JLnet/minecraft/world/level/entity/EntitySection;)V a
	startTicking (Lnet/minecraft/world/level/ChunkPos;)V a
	stopTicking (Lnet/minecraft/world/level/ChunkPos;)V b
net/minecraft/world/level/entity/TransientEntitySectionManager$Callback dge$a
	currentSection e
	currentSectionKey d
	entity c
	onMove ()V a
	onRemove (Lnet/minecraft/world/entity/Entity$RemovalReason;)V a
net/minecraft/world/level/entity/Visibility dgf
	$VALUES f
	HIDDEN a
	TICKING c
	TRACKED b
	accessible d
	ticking e
	$values ()[Lnet/minecraft/world/level/entity/Visibility; c
	fromFullChunkStatus (Lnet/minecraft/server/level/FullChunkStatus;)Lnet/minecraft/world/level/entity/Visibility; a
	isAccessible ()Z b
	isTicking ()Z a
net/minecraft/world/level/gameevent/BlockPositionSource dgh
	CODEC a
	pos c
	getPosition (Lnet/minecraft/world/level/Level;)Ljava/util/Optional; a
	getType ()Lnet/minecraft/world/level/gameevent/PositionSourceType; a
net/minecraft/world/level/gameevent/BlockPositionSource$Type dgh$a
	codec ()Lcom/mojang/serialization/Codec; a
	read (Lnet/minecraft/network/FriendlyByteBuf;)Lnet/minecraft/world/level/gameevent/BlockPositionSource; a
	read (Lnet/minecraft/network/FriendlyByteBuf;)Lnet/minecraft/world/level/gameevent/PositionSource; b
	write (Lnet/minecraft/network/FriendlyByteBuf;Lnet/minecraft/world/level/gameevent/BlockPositionSource;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;Lnet/minecraft/world/level/gameevent/PositionSource;)V a
net/minecraft/world/level/gameevent/DynamicGameEventListener dgi
	lastSection b
	listener a
	add (Lnet/minecraft/server/level/ServerLevel;)V a
	getListener ()Lnet/minecraft/world/level/gameevent/GameEventListener; a
	ifChunkExists (Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/SectionPos;Ljava/util/function/Consumer;)V a
	move (Lnet/minecraft/server/level/ServerLevel;)V c
	remove (Lnet/minecraft/server/level/ServerLevel;)V b
net/minecraft/world/level/gameevent/EntityPositionSource dgj
	CODEC a
	entityOrUuidOrId c
	yOffset d
	getId ()I c
	getPosition (Lnet/minecraft/world/level/Level;)Ljava/util/Optional; a
	getType ()Lnet/minecraft/world/level/gameevent/PositionSourceType; a
	getUuid ()Ljava/util/UUID; b
	resolveEntity (Lnet/minecraft/world/level/Level;)V b
net/minecraft/world/level/gameevent/EntityPositionSource$Type dgj$a
	codec ()Lcom/mojang/serialization/Codec; a
	read (Lnet/minecraft/network/FriendlyByteBuf;)Lnet/minecraft/world/level/gameevent/EntityPositionSource; a
	read (Lnet/minecraft/network/FriendlyByteBuf;)Lnet/minecraft/world/level/gameevent/PositionSource; b
	write (Lnet/minecraft/network/FriendlyByteBuf;Lnet/minecraft/world/level/gameevent/EntityPositionSource;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;Lnet/minecraft/world/level/gameevent/PositionSource;)V a
net/minecraft/world/level/gameevent/EuclideanGameEventListenerRegistry dgk
	level f
	listeners b
	listenersToAdd d
	listenersToRemove c
	onEmptyAction h
	processing e
	sectionY g
	getPostableListenerPosition (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/phys/Vec3;Lnet/minecraft/world/level/gameevent/GameEventListener;)Ljava/util/Optional; a
	isEmpty ()Z a
	register (Lnet/minecraft/world/level/gameevent/GameEventListener;)V a
	unregister (Lnet/minecraft/world/level/gameevent/GameEventListener;)V b
	visitInRangeListeners (Lnet/minecraft/world/level/gameevent/GameEvent;Lnet/minecraft/world/phys/Vec3;Lnet/minecraft/world/level/gameevent/GameEvent$Context;Lnet/minecraft/world/level/gameevent/GameEventListenerRegistry$ListenerVisitor;)Z a
net/minecraft/world/level/gameevent/EuclideanGameEventListenerRegistry$OnEmptyAction dgk$a
net/minecraft/world/level/gameevent/GameEvent dgl
	BLOCK_ACTIVATE a
	BLOCK_ATTACH b
	BLOCK_CHANGE c
	BLOCK_CLOSE d
	BLOCK_DEACTIVATE e
	BLOCK_DESTROY f
	BLOCK_DETACH g
	BLOCK_OPEN h
	BLOCK_PLACE i
	CONTAINER_CLOSE j
	CONTAINER_OPEN k
	DEFAULT_NOTIFICATION_RADIUS ai
	DRINK l
	EAT m
	ELYTRA_GLIDE n
	ENTITY_DAMAGE o
	ENTITY_DIE p
	ENTITY_DISMOUNT q
	ENTITY_INTERACT r
	ENTITY_MOUNT s
	ENTITY_PLACE t
	ENTITY_ROAR u
	ENTITY_SHAKE v
	EQUIP w
	EXPLODE x
	FLAP y
	FLUID_PICKUP z
	FLUID_PLACE A
	HIT_GROUND B
	INSTRUMENT_PLAY C
	ITEM_INTERACT_FINISH D
	ITEM_INTERACT_START E
	JUKEBOX_PLAY F
	JUKEBOX_STOP_PLAY G
	LIGHTNING_STRIKE H
	NOTE_BLOCK_PLAY I
	PRIME_FUSE J
	PROJECTILE_LAND K
	PROJECTILE_SHOOT L
	RESONATE_1 T
	RESONATE_10 ac
	RESONATE_11 ad
	RESONATE_12 ae
	RESONATE_13 af
	RESONATE_14 ag
	RESONATE_15 ah
	RESONATE_2 U
	RESONATE_3 V
	RESONATE_4 W
	RESONATE_5 X
	RESONATE_6 Y
	RESONATE_7 Z
	RESONATE_8 aa
	RESONATE_9 ab
	SCULK_SENSOR_TENDRILS_CLICKING M
	SHEAR N
	SHRIEK O
	SPLASH P
	STEP Q
	SWIM R
	TELEPORT S
	builtInRegistryHolder al
	name aj
	notificationRadius ak
	builtInRegistryHolder ()Lnet/minecraft/core/Holder$Reference; c
	getName ()Ljava/lang/String; a
	getNotificationRadius ()I b
	is (Lnet/minecraft/tags/TagKey;)Z a
	register (Ljava/lang/String;)Lnet/minecraft/world/level/gameevent/GameEvent; a
	register (Ljava/lang/String;I)Lnet/minecraft/world/level/gameevent/GameEvent; a
net/minecraft/world/level/gameevent/GameEvent$Context dgl$a
	affectedState b
	sourceEntity a
	affectedState ()Lnet/minecraft/world/level/block/state/BlockState; b
	of (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/world/level/gameevent/GameEvent$Context; a
	of (Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/gameevent/GameEvent$Context; a
	of (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/gameevent/GameEvent$Context; a
	sourceEntity ()Lnet/minecraft/world/entity/Entity; a
net/minecraft/world/level/gameevent/GameEvent$ListenerInfo dgl$b
	context c
	distanceToRecipient e
	gameEvent a
	recipient d
	source b
	compareTo (Lnet/minecraft/world/level/gameevent/GameEvent$ListenerInfo;)I a
	context ()Lnet/minecraft/world/level/gameevent/GameEvent$Context; c
	gameEvent ()Lnet/minecraft/world/level/gameevent/GameEvent; a
	recipient ()Lnet/minecraft/world/level/gameevent/GameEventListener; d
	source ()Lnet/minecraft/world/phys/Vec3; b
net/minecraft/world/level/gameevent/GameEventDispatcher dgm
	level a
	handleGameEventMessagesInQueue (Ljava/util/List;)V a
	post (Lnet/minecraft/world/level/gameevent/GameEvent;Lnet/minecraft/world/phys/Vec3;Lnet/minecraft/world/level/gameevent/GameEvent$Context;)V a
net/minecraft/world/level/gameevent/GameEventListener dgn
	getDeliveryMode ()Lnet/minecraft/world/level/gameevent/GameEventListener$DeliveryMode; c
	getListenerRadius ()I b
	getListenerSource ()Lnet/minecraft/world/level/gameevent/PositionSource; a
	handleGameEvent (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/level/gameevent/GameEvent;Lnet/minecraft/world/level/gameevent/GameEvent$Context;Lnet/minecraft/world/phys/Vec3;)Z a
net/minecraft/world/level/gameevent/GameEventListener$DeliveryMode dgn$a
	$VALUES c
	BY_DISTANCE b
	UNSPECIFIED a
	$values ()[Lnet/minecraft/world/level/gameevent/GameEventListener$DeliveryMode; a
net/minecraft/world/level/gameevent/GameEventListener$Holder dgn$b
	getListener ()Lnet/minecraft/world/level/gameevent/GameEventListener; d
net/minecraft/world/level/gameevent/GameEventListenerRegistry dgo
	NOOP a
	isEmpty ()Z a
	register (Lnet/minecraft/world/level/gameevent/GameEventListener;)V a
	unregister (Lnet/minecraft/world/level/gameevent/GameEventListener;)V b
	visitInRangeListeners (Lnet/minecraft/world/level/gameevent/GameEvent;Lnet/minecraft/world/phys/Vec3;Lnet/minecraft/world/level/gameevent/GameEvent$Context;Lnet/minecraft/world/level/gameevent/GameEventListenerRegistry$ListenerVisitor;)Z a
net/minecraft/world/level/gameevent/GameEventListenerRegistry$ListenerVisitor dgo$a
net/minecraft/world/level/gameevent/PositionSource dgp
	CODEC b
	getPosition (Lnet/minecraft/world/level/Level;)Ljava/util/Optional; a
	getType ()Lnet/minecraft/world/level/gameevent/PositionSourceType; a
net/minecraft/world/level/gameevent/PositionSourceType dgq
	BLOCK a
	ENTITY b
	codec ()Lcom/mojang/serialization/Codec; a
	fromNetwork (Lnet/minecraft/network/FriendlyByteBuf;)Lnet/minecraft/world/level/gameevent/PositionSource; c
	read (Lnet/minecraft/network/FriendlyByteBuf;)Lnet/minecraft/world/level/gameevent/PositionSource; b
	register (Ljava/lang/String;Lnet/minecraft/world/level/gameevent/PositionSourceType;)Lnet/minecraft/world/level/gameevent/PositionSourceType; a
	toNetwork (Lnet/minecraft/world/level/gameevent/PositionSource;Lnet/minecraft/network/FriendlyByteBuf;)V a
	write (Lnet/minecraft/network/FriendlyByteBuf;Lnet/minecraft/world/level/gameevent/PositionSource;)V a
net/minecraft/world/level/gameevent/vibrations/VibrationInfo dgs
	CODEC a
	distance c
	entity g
	gameEvent b
	pos d
	projectileOwnerUuid f
	uuid e
	distance ()F b
	entity ()Lnet/minecraft/world/entity/Entity; f
	gameEvent ()Lnet/minecraft/world/level/gameevent/GameEvent; a
	getEntity (Lnet/minecraft/server/level/ServerLevel;)Ljava/util/Optional; a
	getProjectileOwner (Lnet/minecraft/server/level/ServerLevel;)Ljava/util/Optional; b
	getProjectileOwner (Lnet/minecraft/world/entity/Entity;)Ljava/util/UUID; a
	pos ()Lnet/minecraft/world/phys/Vec3; c
	projectileOwnerUuid ()Ljava/util/UUID; e
	uuid ()Ljava/util/UUID; d
net/minecraft/world/level/gameevent/vibrations/VibrationSelector dgt
	CODEC a
	currentVibrationData b
	addCandidate (Lnet/minecraft/world/level/gameevent/vibrations/VibrationInfo;J)V a
	chosenCandidate (J)Ljava/util/Optional; a
	shouldReplaceVibration (Lnet/minecraft/world/level/gameevent/vibrations/VibrationInfo;J)Z b
	startOver ()V a
net/minecraft/world/level/gameevent/vibrations/VibrationSystem dgu
	RESONANCE_EVENTS d_
	VIBRATION_FREQUENCY_FOR_EVENT e_
	getGameEventFrequency (Lnet/minecraft/world/level/gameevent/GameEvent;)I a_
	getRedstoneStrengthForDistance (FI)I a_
	getResonanceEventByFrequency (I)Lnet/minecraft/world/level/gameevent/GameEvent; b
	getVibrationData ()Lnet/minecraft/world/level/gameevent/vibrations/VibrationSystem$Data; gb
	getVibrationUser ()Lnet/minecraft/world/level/gameevent/vibrations/VibrationSystem$User; gc
net/minecraft/world/level/gameevent/vibrations/VibrationSystem$Data dgu$a
	CODEC a
	NBT_TAG_KEY b
	currentVibration c
	reloadVibrationParticle f
	selectionStrategy e
	travelTimeInTicks d
	decrementTravelTime ()V d
	getCurrentVibration ()Lnet/minecraft/world/level/gameevent/vibrations/VibrationInfo; b
	getSelectionStrategy ()Lnet/minecraft/world/level/gameevent/vibrations/VibrationSelector; a
	getTravelTimeInTicks ()I c
	setCurrentVibration (Lnet/minecraft/world/level/gameevent/vibrations/VibrationInfo;)V a
	setReloadVibrationParticle (Z)V a
	setTravelTimeInTicks (I)V a
	shouldReloadVibrationParticle ()Z e
net/minecraft/world/level/gameevent/vibrations/VibrationSystem$Listener dgu$b
	system a
	distanceBetweenInBlocks (Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)F a
	forceScheduleVibration (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/level/gameevent/GameEvent;Lnet/minecraft/world/level/gameevent/GameEvent$Context;Lnet/minecraft/world/phys/Vec3;)V b
	getListenerRadius ()I b
	getListenerSource ()Lnet/minecraft/world/level/gameevent/PositionSource; a
	handleGameEvent (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/level/gameevent/GameEvent;Lnet/minecraft/world/level/gameevent/GameEvent$Context;Lnet/minecraft/world/phys/Vec3;)Z a
	isOccluded (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/phys/Vec3;Lnet/minecraft/world/phys/Vec3;)Z a
	scheduleVibration (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/level/gameevent/vibrations/VibrationSystem$Data;Lnet/minecraft/world/level/gameevent/GameEvent;Lnet/minecraft/world/level/gameevent/GameEvent$Context;Lnet/minecraft/world/phys/Vec3;Lnet/minecraft/world/phys/Vec3;)V a
net/minecraft/world/level/gameevent/vibrations/VibrationSystem$Ticker dgu$c
	areAdjacentChunksTicking (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)Z a
	receiveVibration (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/level/gameevent/vibrations/VibrationSystem$Data;Lnet/minecraft/world/level/gameevent/vibrations/VibrationSystem$User;Lnet/minecraft/world/level/gameevent/vibrations/VibrationInfo;)Z a
	tick (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/level/gameevent/vibrations/VibrationSystem$Data;Lnet/minecraft/world/level/gameevent/vibrations/VibrationSystem$User;)V a
	tryReloadVibrationParticle (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/level/gameevent/vibrations/VibrationSystem$Data;Lnet/minecraft/world/level/gameevent/vibrations/VibrationSystem$User;)V b
	trySelectAndScheduleVibration (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/level/gameevent/vibrations/VibrationSystem$Data;Lnet/minecraft/world/level/gameevent/vibrations/VibrationSystem$User;)V a
net/minecraft/world/level/gameevent/vibrations/VibrationSystem$User dgu$d
	calculateTravelTimeInTicks (F)I a
	canReceiveVibration (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/gameevent/GameEvent;Lnet/minecraft/world/level/gameevent/GameEvent$Context;)Z a
	canTriggerAvoidVibration ()Z d
	getListenableEvents ()Lnet/minecraft/tags/TagKey; c
	getListenerRadius ()I a
	getPositionSource ()Lnet/minecraft/world/level/gameevent/PositionSource; b
	isValidVibration (Lnet/minecraft/world/level/gameevent/GameEvent;Lnet/minecraft/world/level/gameevent/GameEvent$Context;)Z a
	onDataChanged ()V e
	onReceiveVibration (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/gameevent/GameEvent;Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/entity/Entity;F)V a
	requiresAdjacentChunksToBeTicking ()Z f
net/minecraft/world/level/levelgen/Aquifer dgw
	computeSubstance (Lnet/minecraft/world/level/levelgen/DensityFunction$FunctionContext;D)Lnet/minecraft/world/level/block/state/BlockState; a
	create (Lnet/minecraft/world/level/levelgen/NoiseChunk;Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/world/level/levelgen/NoiseRouter;Lnet/minecraft/world/level/levelgen/PositionalRandomFactory;IILnet/minecraft/world/level/levelgen/Aquifer$FluidPicker;)Lnet/minecraft/world/level/levelgen/Aquifer; a
	createDisabled (Lnet/minecraft/world/level/levelgen/Aquifer$FluidPicker;)Lnet/minecraft/world/level/levelgen/Aquifer; a
	shouldScheduleFluidUpdate ()Z a
net/minecraft/world/level/levelgen/Aquifer$FluidPicker dgw$a
net/minecraft/world/level/levelgen/Aquifer$FluidStatus dgw$b
	fluidLevel a
	fluidType b
	at (I)Lnet/minecraft/world/level/block/state/BlockState; a
net/minecraft/world/level/levelgen/Aquifer$NoiseBasedAquifer dgw$c
	FLOWING_UPDATE_SIMULARITY k
	MAX_REASONABLE_DISTANCE_TO_AQUIFER_CENTER j
	SURFACE_SAMPLING_OFFSETS_IN_CHUNKS C
	X_RANGE a
	X_SEPARATION d
	X_SPACING g
	Y_RANGE b
	Y_SEPARATION e
	Y_SPACING h
	Z_RANGE c
	Z_SEPARATION f
	Z_SPACING i
	aquiferCache r
	aquiferLocationCache s
	barrierNoise m
	depth v
	erosion u
	fluidLevelFloodednessNoise n
	fluidLevelSpreadNoise o
	globalFluidPicker t
	gridSizeX A
	gridSizeZ B
	lavaNoise p
	minGridX x
	minGridY y
	minGridZ z
	noiseChunk l
	positionalRandomFactory q
	shouldScheduleFluidUpdate w
	calculatePressure (Lnet/minecraft/world/level/levelgen/DensityFunction$FunctionContext;Lorg/apache/commons/lang3/mutable/MutableDouble;Lnet/minecraft/world/level/levelgen/Aquifer$FluidStatus;Lnet/minecraft/world/level/levelgen/Aquifer$FluidStatus;)D a
	computeFluid (III)Lnet/minecraft/world/level/levelgen/Aquifer$FluidStatus; b
	computeFluidType (IIILnet/minecraft/world/level/levelgen/Aquifer$FluidStatus;I)Lnet/minecraft/world/level/block/state/BlockState; a
	computeRandomizedFluidSurfaceLevel (IIII)I a
	computeSubstance (Lnet/minecraft/world/level/levelgen/DensityFunction$FunctionContext;D)Lnet/minecraft/world/level/block/state/BlockState; a
	computeSurfaceLevel (IIILnet/minecraft/world/level/levelgen/Aquifer$FluidStatus;IZ)I a
	getAquiferStatus (J)Lnet/minecraft/world/level/levelgen/Aquifer$FluidStatus; a
	getIndex (III)I a
	gridX (I)I a
	gridY (I)I b
	gridZ (I)I c
	shouldScheduleFluidUpdate ()Z a
	similarity (II)D a
net/minecraft/world/level/levelgen/Beardifier dgx
	BEARD_KERNEL g
	BEARD_KERNEL_RADIUS a
	BEARD_KERNEL_SIZE f
	junctionIterator i
	pieceIterator h
	compute (Lnet/minecraft/world/level/levelgen/DensityFunction$FunctionContext;)D a
	computeBeardContribution (IDI)D a
	computeBeardContribution (III)D b
	forStructuresInChunk (Lnet/minecraft/world/level/StructureManager;Lnet/minecraft/world/level/ChunkPos;)Lnet/minecraft/world/level/levelgen/Beardifier; a
	getBeardContribution (IIII)D a
	getBuryContribution (III)D a
	isInKernelRange (I)Z a
	maxValue ()D b
	minValue ()D a
net/minecraft/world/level/levelgen/Beardifier$Rigid dgx$a
	box a
	groundLevelDelta c
	terrainAdjustment b
	box ()Lnet/minecraft/world/level/levelgen/structure/BoundingBox; a
	groundLevelDelta ()I c
	terrainAdjustment ()Lnet/minecraft/world/level/levelgen/structure/TerrainAdjustment; b
net/minecraft/world/level/levelgen/BelowZeroRetrogen dgy
	BITSET_CODEC d
	CODEC a
	EMPTY c
	NON_EMPTY_CHUNK_STATUS e
	RETAINED_RETROGEN_BIOMES f
	UPGRADE_HEIGHT_ACCESSOR b
	missingBedrock h
	targetStatus g
	applyBedrockMask (Lnet/minecraft/world/level/chunk/ProtoChunk;)V b
	getBiomeResolver (Lnet/minecraft/world/level/biome/BiomeResolver;Lnet/minecraft/world/level/chunk/ChunkAccess;)Lnet/minecraft/world/level/biome/BiomeResolver; a
	hasBedrockHole (II)Z a
	hasBedrockHoles ()Z b
	read (Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/world/level/levelgen/BelowZeroRetrogen; a
	replaceOldBedrock (Lnet/minecraft/world/level/chunk/ProtoChunk;)V a
	targetStatus ()Lnet/minecraft/world/level/chunk/ChunkStatus; a
net/minecraft/world/level/levelgen/BitRandomSource dgz
	DOUBLE_MULTIPLIER c
	FLOAT_MULTIPLIER b
	next (I)I c
	nextBoolean ()Z h
	nextDouble ()D j
	nextFloat ()F i
	nextInt ()I f
	nextInt (I)I a
	nextLong ()J g
net/minecraft/world/level/levelgen/Column dha
	above (I)Lnet/minecraft/world/level/levelgen/Column; c
	around (II)Lnet/minecraft/world/level/levelgen/Column$Range; a
	below (I)Lnet/minecraft/world/level/levelgen/Column; a
	create (Ljava/util/OptionalInt;Ljava/util/OptionalInt;)Lnet/minecraft/world/level/levelgen/Column; a
	fromHighest (I)Lnet/minecraft/world/level/levelgen/Column; b
	fromLowest (I)Lnet/minecraft/world/level/levelgen/Column; d
	getCeiling ()Ljava/util/OptionalInt; b
	getFloor ()Ljava/util/OptionalInt; c
	getHeight ()Ljava/util/OptionalInt; d
	inside (II)Lnet/minecraft/world/level/levelgen/Column$Range; b
	line ()Lnet/minecraft/world/level/levelgen/Column; a
	scan (Lnet/minecraft/world/level/LevelSimulatedReader;Lnet/minecraft/core/BlockPos;ILjava/util/function/Predicate;Ljava/util/function/Predicate;)Ljava/util/Optional; a
	scanDirection (Lnet/minecraft/world/level/LevelSimulatedReader;ILjava/util/function/Predicate;Ljava/util/function/Predicate;Lnet/minecraft/core/BlockPos$MutableBlockPos;ILnet/minecraft/core/Direction;)Ljava/util/OptionalInt; a
	withCeiling (Ljava/util/OptionalInt;)Lnet/minecraft/world/level/levelgen/Column; b
	withFloor (Ljava/util/OptionalInt;)Lnet/minecraft/world/level/levelgen/Column; a
net/minecraft/world/level/levelgen/Column$Line dha$a
	INSTANCE a
	getCeiling ()Ljava/util/OptionalInt; b
	getFloor ()Ljava/util/OptionalInt; c
	getHeight ()Ljava/util/OptionalInt; d
net/minecraft/world/level/levelgen/Column$Range dha$b
	ceiling b
	floor a
	ceiling ()I e
	floor ()I f
	getCeiling ()Ljava/util/OptionalInt; b
	getFloor ()Ljava/util/OptionalInt; c
	getHeight ()Ljava/util/OptionalInt; d
	height ()I g
net/minecraft/world/level/levelgen/Column$Ray dha$c
	edge a
	pointingUp b
	getCeiling ()Ljava/util/OptionalInt; b
	getFloor ()Ljava/util/OptionalInt; c
	getHeight ()Ljava/util/OptionalInt; d
net/minecraft/world/level/levelgen/DebugLevelSource dhb
	AIR d
	ALL_BLOCKS i
	BARRIER e
	BARRIER_HEIGHT g
	BLOCK_MARGIN h
	CODEC c
	GRID_HEIGHT k
	GRID_WIDTH j
	HEIGHT f
	addDebugScreenInfo (Ljava/util/List;Lnet/minecraft/world/level/levelgen/RandomState;Lnet/minecraft/core/BlockPos;)V a
	applyBiomeDecoration (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/chunk/ChunkAccess;Lnet/minecraft/world/level/StructureManager;)V a
	applyCarvers (Lnet/minecraft/server/level/WorldGenRegion;JLnet/minecraft/world/level/levelgen/RandomState;Lnet/minecraft/world/level/biome/BiomeManager;Lnet/minecraft/world/level/StructureManager;Lnet/minecraft/world/level/chunk/ChunkAccess;Lnet/minecraft/world/level/levelgen/GenerationStep$Carving;)V a
	buildSurface (Lnet/minecraft/server/level/WorldGenRegion;Lnet/minecraft/world/level/StructureManager;Lnet/minecraft/world/level/levelgen/RandomState;Lnet/minecraft/world/level/chunk/ChunkAccess;)V a
	codec ()Lcom/mojang/serialization/Codec; a
	fillFromNoise (Ljava/util/concurrent/Executor;Lnet/minecraft/world/level/levelgen/blending/Blender;Lnet/minecraft/world/level/levelgen/RandomState;Lnet/minecraft/world/level/StructureManager;Lnet/minecraft/world/level/chunk/ChunkAccess;)Ljava/util/concurrent/CompletableFuture; a
	getBaseColumn (IILnet/minecraft/world/level/LevelHeightAccessor;Lnet/minecraft/world/level/levelgen/RandomState;)Lnet/minecraft/world/level/NoiseColumn; a
	getBaseHeight (IILnet/minecraft/world/level/levelgen/Heightmap$Types;Lnet/minecraft/world/level/LevelHeightAccessor;Lnet/minecraft/world/level/levelgen/RandomState;)I a
	getBlockStateFor (II)Lnet/minecraft/world/level/block/state/BlockState; a
	getGenDepth ()I d
	getMinY ()I f
	getSeaLevel ()I e
	spawnOriginalMobs (Lnet/minecraft/server/level/WorldGenRegion;)V a
net/minecraft/world/level/levelgen/Density dhc
	SURFACE a
	UNRECOVERABLY_DENSE b
	UNRECOVERABLY_THIN c
net/minecraft/world/level/levelgen/DensityFunction dhd
	CODEC c
	DIRECT_CODEC b
	HOLDER_HELPER_CODEC d
	abs ()Lnet/minecraft/world/level/levelgen/DensityFunction; d
	clamp (DD)Lnet/minecraft/world/level/levelgen/DensityFunction; a
	codec ()Lnet/minecraft/util/KeyDispatchDataCodec; c
	compute (Lnet/minecraft/world/level/levelgen/DensityFunction$FunctionContext;)D a
	cube ()Lnet/minecraft/world/level/levelgen/DensityFunction; f
	fillArray ([DLnet/minecraft/world/level/levelgen/DensityFunction$ContextProvider;)V a
	halfNegative ()Lnet/minecraft/world/level/levelgen/DensityFunction; g
	mapAll (Lnet/minecraft/world/level/levelgen/DensityFunction$Visitor;)Lnet/minecraft/world/level/levelgen/DensityFunction; a
	maxValue ()D b
	minValue ()D a
	quarterNegative ()Lnet/minecraft/world/level/levelgen/DensityFunction; h
	square ()Lnet/minecraft/world/level/levelgen/DensityFunction; e
	squeeze ()Lnet/minecraft/world/level/levelgen/DensityFunction; i
net/minecraft/world/level/levelgen/DensityFunction$ContextProvider dhd$a
	fillAllDirectly ([DLnet/minecraft/world/level/levelgen/DensityFunction;)V a
	forIndex (I)Lnet/minecraft/world/level/levelgen/DensityFunction$FunctionContext; a
net/minecraft/world/level/levelgen/DensityFunction$FunctionContext dhd$b
	blockX ()I a
	blockY ()I b
	blockZ ()I c
	getBlender ()Lnet/minecraft/world/level/levelgen/blending/Blender; d
net/minecraft/world/level/levelgen/DensityFunction$NoiseHolder dhd$c
	CODEC a
	noise c
	noiseData b
	getValue (DDD)D a
	maxValue ()D a
	noise ()Lnet/minecraft/world/level/levelgen/synth/NormalNoise; c
	noiseData ()Lnet/minecraft/core/Holder; b
net/minecraft/world/level/levelgen/DensityFunction$SimpleFunction dhd$d
	fillArray ([DLnet/minecraft/world/level/levelgen/DensityFunction$ContextProvider;)V a
	mapAll (Lnet/minecraft/world/level/levelgen/DensityFunction$Visitor;)Lnet/minecraft/world/level/levelgen/DensityFunction; a
net/minecraft/world/level/levelgen/DensityFunction$SinglePointContext dhd$e
	blockX a
	blockY b
	blockZ c
	blockX ()I a
	blockY ()I b
	blockZ ()I c
net/minecraft/world/level/levelgen/DensityFunction$Visitor dhd$f
	visitNoise (Lnet/minecraft/world/level/levelgen/DensityFunction$NoiseHolder;)Lnet/minecraft/world/level/levelgen/DensityFunction$NoiseHolder; a
net/minecraft/world/level/levelgen/DensityFunctions dhe
	CODEC c
	DIRECT_CODEC b
	MAX_REASONABLE_NOISE_VALUE a
	NOISE_VALUE_CODEC d
	add (Lnet/minecraft/world/level/levelgen/DensityFunction;Lnet/minecraft/world/level/levelgen/DensityFunction;)Lnet/minecraft/world/level/levelgen/DensityFunction; a
	blendAlpha ()Lnet/minecraft/world/level/levelgen/DensityFunction; b
	blendDensity (Lnet/minecraft/world/level/levelgen/DensityFunction;)Lnet/minecraft/world/level/levelgen/DensityFunction; f
	blendOffset ()Lnet/minecraft/world/level/levelgen/DensityFunction; c
	bootstrap (Lnet/minecraft/core/Registry;)Lcom/mojang/serialization/Codec; a
	cache2d (Lnet/minecraft/world/level/levelgen/DensityFunction;)Lnet/minecraft/world/level/levelgen/DensityFunction; c
	cacheAllInCell (Lnet/minecraft/world/level/levelgen/DensityFunction;)Lnet/minecraft/world/level/levelgen/DensityFunction; e
	cacheOnce (Lnet/minecraft/world/level/levelgen/DensityFunction;)Lnet/minecraft/world/level/levelgen/DensityFunction; d
	constant (D)Lnet/minecraft/world/level/levelgen/DensityFunction; a
	doubleFunctionArgumentCodec (Ljava/util/function/BiFunction;Ljava/util/function/Function;Ljava/util/function/Function;)Lnet/minecraft/util/KeyDispatchDataCodec; a
	endIslands (J)Lnet/minecraft/world/level/levelgen/DensityFunction; a
	flatCache (Lnet/minecraft/world/level/levelgen/DensityFunction;)Lnet/minecraft/world/level/levelgen/DensityFunction; b
	interpolated (Lnet/minecraft/world/level/levelgen/DensityFunction;)Lnet/minecraft/world/level/levelgen/DensityFunction; a
	lerp (Lnet/minecraft/world/level/levelgen/DensityFunction;DLnet/minecraft/world/level/levelgen/DensityFunction;)Lnet/minecraft/world/level/levelgen/DensityFunction; a
	lerp (Lnet/minecraft/world/level/levelgen/DensityFunction;Lnet/minecraft/world/level/levelgen/DensityFunction;Lnet/minecraft/world/level/levelgen/DensityFunction;)Lnet/minecraft/world/level/levelgen/DensityFunction; a
	makeCodec (Lcom/mojang/serialization/MapCodec;)Lnet/minecraft/util/KeyDispatchDataCodec; a
	map (Lnet/minecraft/world/level/levelgen/DensityFunction;Lnet/minecraft/world/level/levelgen/DensityFunctions$Mapped$Type;)Lnet/minecraft/world/level/levelgen/DensityFunction; a
	mapFromUnitTo (Lnet/minecraft/world/level/levelgen/DensityFunction;DD)Lnet/minecraft/world/level/levelgen/DensityFunction; a
	mappedNoise (Lnet/minecraft/core/Holder;DD)Lnet/minecraft/world/level/levelgen/DensityFunction; a
	mappedNoise (Lnet/minecraft/core/Holder;DDD)Lnet/minecraft/world/level/levelgen/DensityFunction; a
	mappedNoise (Lnet/minecraft/core/Holder;DDDD)Lnet/minecraft/world/level/levelgen/DensityFunction; a
	max (Lnet/minecraft/world/level/levelgen/DensityFunction;Lnet/minecraft/world/level/levelgen/DensityFunction;)Lnet/minecraft/world/level/levelgen/DensityFunction; d
	min (Lnet/minecraft/world/level/levelgen/DensityFunction;Lnet/minecraft/world/level/levelgen/DensityFunction;)Lnet/minecraft/world/level/levelgen/DensityFunction; c
	mul (Lnet/minecraft/world/level/levelgen/DensityFunction;Lnet/minecraft/world/level/levelgen/DensityFunction;)Lnet/minecraft/world/level/levelgen/DensityFunction; b
	noise (Lnet/minecraft/core/Holder;)Lnet/minecraft/world/level/levelgen/DensityFunction; a
	noise (Lnet/minecraft/core/Holder;D)Lnet/minecraft/world/level/levelgen/DensityFunction; a
	noise (Lnet/minecraft/core/Holder;DD)Lnet/minecraft/world/level/levelgen/DensityFunction; b
	rangeChoice (Lnet/minecraft/world/level/levelgen/DensityFunction;DDLnet/minecraft/world/level/levelgen/DensityFunction;Lnet/minecraft/world/level/levelgen/DensityFunction;)Lnet/minecraft/world/level/levelgen/DensityFunction; a
	register (Lnet/minecraft/core/Registry;Ljava/lang/String;Lnet/minecraft/util/KeyDispatchDataCodec;)Lcom/mojang/serialization/Codec; a
	shift (Lnet/minecraft/core/Holder;)Lnet/minecraft/world/level/levelgen/DensityFunction; d
	shiftA (Lnet/minecraft/core/Holder;)Lnet/minecraft/world/level/levelgen/DensityFunction; b
	shiftB (Lnet/minecraft/core/Holder;)Lnet/minecraft/world/level/levelgen/DensityFunction; c
	shiftedNoise2d (Lnet/minecraft/world/level/levelgen/DensityFunction;Lnet/minecraft/world/level/levelgen/DensityFunction;DLnet/minecraft/core/Holder;)Lnet/minecraft/world/level/levelgen/DensityFunction; a
	singleArgumentCodec (Lcom/mojang/serialization/Codec;Ljava/util/function/Function;Ljava/util/function/Function;)Lnet/minecraft/util/KeyDispatchDataCodec; a
	singleFunctionArgumentCodec (Ljava/util/function/Function;Ljava/util/function/Function;)Lnet/minecraft/util/KeyDispatchDataCodec; a
	spline (Lnet/minecraft/util/CubicSpline;)Lnet/minecraft/world/level/levelgen/DensityFunction; a
	weirdScaledSampler (Lnet/minecraft/world/level/levelgen/DensityFunction;Lnet/minecraft/core/Holder;Lnet/minecraft/world/level/levelgen/DensityFunctions$WeirdScaledSampler$RarityValueMapper;)Lnet/minecraft/world/level/levelgen/DensityFunction; a
	yClampedGradient (IIDD)Lnet/minecraft/world/level/levelgen/DensityFunction; a
	zero ()Lnet/minecraft/world/level/levelgen/DensityFunction; a
net/minecraft/world/level/levelgen/DensityFunctions$Ap2 dhe$a
	argument1 f
	argument2 g
	maxValue i
	minValue h
	type e
	argument1 ()Lnet/minecraft/world/level/levelgen/DensityFunction; k
	argument2 ()Lnet/minecraft/world/level/levelgen/DensityFunction; l
	compute (Lnet/minecraft/world/level/levelgen/DensityFunction$FunctionContext;)D a
	fillArray ([DLnet/minecraft/world/level/levelgen/DensityFunction$ContextProvider;)V a
	mapAll (Lnet/minecraft/world/level/levelgen/DensityFunction$Visitor;)Lnet/minecraft/world/level/levelgen/DensityFunction; a
	maxValue ()D b
	minValue ()D a
	type ()Lnet/minecraft/world/level/levelgen/DensityFunctions$TwoArgumentSimpleFunction$Type; j
net/minecraft/world/level/levelgen/DensityFunctions$BeardifierMarker dhe$b
	$VALUES f
	INSTANCE a
	$values ()[Lnet/minecraft/world/level/levelgen/DensityFunctions$BeardifierMarker; j
	compute (Lnet/minecraft/world/level/levelgen/DensityFunction$FunctionContext;)D a
	fillArray ([DLnet/minecraft/world/level/levelgen/DensityFunction$ContextProvider;)V a
	maxValue ()D b
	minValue ()D a
net/minecraft/world/level/levelgen/DensityFunctions$BeardifierOrMarker dhe$c
	CODEC e
	codec ()Lnet/minecraft/util/KeyDispatchDataCodec; c
net/minecraft/world/level/levelgen/DensityFunctions$BlendAlpha dhe$d
	$VALUES f
	CODEC e
	INSTANCE a
	$values ()[Lnet/minecraft/world/level/levelgen/DensityFunctions$BlendAlpha; j
	codec ()Lnet/minecraft/util/KeyDispatchDataCodec; c
	compute (Lnet/minecraft/world/level/levelgen/DensityFunction$FunctionContext;)D a
	fillArray ([DLnet/minecraft/world/level/levelgen/DensityFunction$ContextProvider;)V a
	maxValue ()D b
	minValue ()D a
net/minecraft/world/level/levelgen/DensityFunctions$BlendDensity dhe$e
	CODEC e
	input a
	codec ()Lnet/minecraft/util/KeyDispatchDataCodec; c
	input ()Lnet/minecraft/world/level/levelgen/DensityFunction; j
	mapAll (Lnet/minecraft/world/level/levelgen/DensityFunction$Visitor;)Lnet/minecraft/world/level/levelgen/DensityFunction; a
	maxValue ()D b
	minValue ()D a
	transform (Lnet/minecraft/world/level/levelgen/DensityFunction$FunctionContext;D)D a
net/minecraft/world/level/levelgen/DensityFunctions$BlendOffset dhe$f
	$VALUES f
	CODEC e
	INSTANCE a
	$values ()[Lnet/minecraft/world/level/levelgen/DensityFunctions$BlendOffset; j
	codec ()Lnet/minecraft/util/KeyDispatchDataCodec; c
	compute (Lnet/minecraft/world/level/levelgen/DensityFunction$FunctionContext;)D a
	fillArray ([DLnet/minecraft/world/level/levelgen/DensityFunction$ContextProvider;)V a
	maxValue ()D b
	minValue ()D a
net/minecraft/world/level/levelgen/DensityFunctions$Clamp dhe$g
	CODEC a
	DATA_CODEC h
	input e
	maxValue g
	minValue f
	codec ()Lnet/minecraft/util/KeyDispatchDataCodec; c
	input ()Lnet/minecraft/world/level/levelgen/DensityFunction; as_
	mapAll (Lnet/minecraft/world/level/levelgen/DensityFunction$Visitor;)Lnet/minecraft/world/level/levelgen/DensityFunction; a
	maxValue ()D b
	minValue ()D a
	transform (D)D a
net/minecraft/world/level/levelgen/DensityFunctions$Constant dhe$h
	CODEC e
	ZERO f
	value a
	codec ()Lnet/minecraft/util/KeyDispatchDataCodec; c
	compute (Lnet/minecraft/world/level/levelgen/DensityFunction$FunctionContext;)D a
	fillArray ([DLnet/minecraft/world/level/levelgen/DensityFunction$ContextProvider;)V a
	maxValue ()D b
	minValue ()D a
	value ()D j
net/minecraft/world/level/levelgen/DensityFunctions$EndIslandDensityFunction dhe$i
	CODEC a
	ISLAND_THRESHOLD e
	islandNoise f
	codec ()Lnet/minecraft/util/KeyDispatchDataCodec; c
	compute (Lnet/minecraft/world/level/levelgen/DensityFunction$FunctionContext;)D a
	getHeightValue (Lnet/minecraft/world/level/levelgen/synth/SimplexNoise;II)F a
	maxValue ()D b
	minValue ()D a
net/minecraft/world/level/levelgen/DensityFunctions$HolderHolder dhe$j
	function a
	codec ()Lnet/minecraft/util/KeyDispatchDataCodec; c
	compute (Lnet/minecraft/world/level/levelgen/DensityFunction$FunctionContext;)D a
	fillArray ([DLnet/minecraft/world/level/levelgen/DensityFunction$ContextProvider;)V a
	function ()Lnet/minecraft/core/Holder; j
	mapAll (Lnet/minecraft/world/level/levelgen/DensityFunction$Visitor;)Lnet/minecraft/world/level/levelgen/DensityFunction; a
	maxValue ()D b
	minValue ()D a
net/minecraft/world/level/levelgen/DensityFunctions$Mapped dhe$k
	input e
	maxValue g
	minValue f
	type a
	codec ()Lnet/minecraft/util/KeyDispatchDataCodec; c
	create (Lnet/minecraft/world/level/levelgen/DensityFunctions$Mapped$Type;Lnet/minecraft/world/level/levelgen/DensityFunction;)Lnet/minecraft/world/level/levelgen/DensityFunctions$Mapped; a
	input ()Lnet/minecraft/world/level/levelgen/DensityFunction; as_
	mapAll (Lnet/minecraft/world/level/levelgen/DensityFunction$Visitor;)Lnet/minecraft/world/level/levelgen/DensityFunction; a
	mapAll (Lnet/minecraft/world/level/levelgen/DensityFunction$Visitor;)Lnet/minecraft/world/level/levelgen/DensityFunctions$Mapped; b
	maxValue ()D b
	minValue ()D a
	transform (D)D a
	transform (Lnet/minecraft/world/level/levelgen/DensityFunctions$Mapped$Type;D)D a
	type ()Lnet/minecraft/world/level/levelgen/DensityFunctions$Mapped$Type; k
net/minecraft/world/level/levelgen/DensityFunctions$Mapped$Type dhe$k$a
	$VALUES i
	ABS a
	CUBE c
	HALF_NEGATIVE d
	QUARTER_NEGATIVE e
	SQUARE b
	SQUEEZE f
	codec h
	name g
	$values ()[Lnet/minecraft/world/level/levelgen/DensityFunctions$Mapped$Type; a
	getSerializedName ()Ljava/lang/String; c
net/minecraft/world/level/levelgen/DensityFunctions$Marker dhe$l
	type a
	wrapped e
	compute (Lnet/minecraft/world/level/levelgen/DensityFunction$FunctionContext;)D a
	fillArray ([DLnet/minecraft/world/level/levelgen/DensityFunction$ContextProvider;)V a
	maxValue ()D b
	minValue ()D a
	type ()Lnet/minecraft/world/level/levelgen/DensityFunctions$Marker$Type; j
	wrapped ()Lnet/minecraft/world/level/levelgen/DensityFunction; k
net/minecraft/world/level/levelgen/DensityFunctions$Marker$Type dhe$l$a
	$VALUES h
	Cache2D c
	CacheAllInCell e
	CacheOnce d
	FlatCache b
	Interpolated a
	codec g
	name f
	$values ()[Lnet/minecraft/world/level/levelgen/DensityFunctions$Marker$Type; a
	getSerializedName ()Ljava/lang/String; c
net/minecraft/world/level/levelgen/DensityFunctions$MarkerOrMarked dhe$m
	codec ()Lnet/minecraft/util/KeyDispatchDataCodec; c
	mapAll (Lnet/minecraft/world/level/levelgen/DensityFunction$Visitor;)Lnet/minecraft/world/level/levelgen/DensityFunction; a
	type ()Lnet/minecraft/world/level/levelgen/DensityFunctions$Marker$Type; j
	wrapped ()Lnet/minecraft/world/level/levelgen/DensityFunction; k
net/minecraft/world/level/levelgen/DensityFunctions$MulOrAdd dhe$n
	argument i
	input f
	maxValue h
	minValue g
	specificType e
	argument ()D n
	argument1 ()Lnet/minecraft/world/level/levelgen/DensityFunction; k
	argument2 ()Lnet/minecraft/world/level/levelgen/DensityFunction; l
	input ()Lnet/minecraft/world/level/levelgen/DensityFunction; as_
	mapAll (Lnet/minecraft/world/level/levelgen/DensityFunction$Visitor;)Lnet/minecraft/world/level/levelgen/DensityFunction; a
	maxValue ()D b
	minValue ()D a
	specificType ()Lnet/minecraft/world/level/levelgen/DensityFunctions$MulOrAdd$Type; m
	transform (D)D a
	type ()Lnet/minecraft/world/level/levelgen/DensityFunctions$TwoArgumentSimpleFunction$Type; j
net/minecraft/world/level/levelgen/DensityFunctions$MulOrAdd$Type dhe$n$a
	$VALUES c
	ADD b
	MUL a
	$values ()[Lnet/minecraft/world/level/levelgen/DensityFunctions$MulOrAdd$Type; a
net/minecraft/world/level/levelgen/DensityFunctions$Noise dhe$o
	CODEC e
	DATA_CODEC a
	noise f
	xzScale g
	yScale h
	codec ()Lnet/minecraft/util/KeyDispatchDataCodec; c
	compute (Lnet/minecraft/world/level/levelgen/DensityFunction$FunctionContext;)D a
	fillArray ([DLnet/minecraft/world/level/levelgen/DensityFunction$ContextProvider;)V a
	mapAll (Lnet/minecraft/world/level/levelgen/DensityFunction$Visitor;)Lnet/minecraft/world/level/levelgen/DensityFunction; a
	maxValue ()D b
	minValue ()D a
	noise ()Lnet/minecraft/world/level/levelgen/DensityFunction$NoiseHolder; j
	xzScale ()D k
	yScale ()D l
net/minecraft/world/level/levelgen/DensityFunctions$PureTransformer dhe$p
	compute (Lnet/minecraft/world/level/levelgen/DensityFunction$FunctionContext;)D a
	fillArray ([DLnet/minecraft/world/level/levelgen/DensityFunction$ContextProvider;)V a
	input ()Lnet/minecraft/world/level/levelgen/DensityFunction; as_
	transform (D)D a
net/minecraft/world/level/levelgen/DensityFunctions$RangeChoice dhe$q
	CODEC e
	DATA_CODEC a
	input f
	maxExclusive h
	minInclusive g
	whenInRange i
	whenOutOfRange j
	codec ()Lnet/minecraft/util/KeyDispatchDataCodec; c
	compute (Lnet/minecraft/world/level/levelgen/DensityFunction$FunctionContext;)D a
	fillArray ([DLnet/minecraft/world/level/levelgen/DensityFunction$ContextProvider;)V a
	input ()Lnet/minecraft/world/level/levelgen/DensityFunction; j
	mapAll (Lnet/minecraft/world/level/levelgen/DensityFunction$Visitor;)Lnet/minecraft/world/level/levelgen/DensityFunction; a
	maxExclusive ()D l
	maxValue ()D b
	minInclusive ()D k
	minValue ()D a
	whenInRange ()Lnet/minecraft/world/level/levelgen/DensityFunction; m
	whenOutOfRange ()Lnet/minecraft/world/level/levelgen/DensityFunction; n
net/minecraft/world/level/levelgen/DensityFunctions$Shift dhe$r
	CODEC e
	offsetNoise a
	codec ()Lnet/minecraft/util/KeyDispatchDataCodec; c
	compute (Lnet/minecraft/world/level/levelgen/DensityFunction$FunctionContext;)D a
	mapAll (Lnet/minecraft/world/level/levelgen/DensityFunction$Visitor;)Lnet/minecraft/world/level/levelgen/DensityFunction; a
	offsetNoise ()Lnet/minecraft/world/level/levelgen/DensityFunction$NoiseHolder; j
net/minecraft/world/level/levelgen/DensityFunctions$ShiftA dhe$s
	CODEC e
	offsetNoise a
	codec ()Lnet/minecraft/util/KeyDispatchDataCodec; c
	compute (Lnet/minecraft/world/level/levelgen/DensityFunction$FunctionContext;)D a
	mapAll (Lnet/minecraft/world/level/levelgen/DensityFunction$Visitor;)Lnet/minecraft/world/level/levelgen/DensityFunction; a
	offsetNoise ()Lnet/minecraft/world/level/levelgen/DensityFunction$NoiseHolder; j
net/minecraft/world/level/levelgen/DensityFunctions$ShiftB dhe$t
	CODEC e
	offsetNoise a
	codec ()Lnet/minecraft/util/KeyDispatchDataCodec; c
	compute (Lnet/minecraft/world/level/levelgen/DensityFunction$FunctionContext;)D a
	mapAll (Lnet/minecraft/world/level/levelgen/DensityFunction$Visitor;)Lnet/minecraft/world/level/levelgen/DensityFunction; a
	offsetNoise ()Lnet/minecraft/world/level/levelgen/DensityFunction$NoiseHolder; j
net/minecraft/world/level/levelgen/DensityFunctions$ShiftNoise dhe$u
	compute (DDD)D a
	fillArray ([DLnet/minecraft/world/level/levelgen/DensityFunction$ContextProvider;)V a
	maxValue ()D b
	minValue ()D a
	offsetNoise ()Lnet/minecraft/world/level/levelgen/DensityFunction$NoiseHolder; j
net/minecraft/world/level/levelgen/DensityFunctions$ShiftedNoise dhe$v
	CODEC a
	DATA_CODEC k
	noise j
	shiftX e
	shiftY f
	shiftZ g
	xzScale h
	yScale i
	codec ()Lnet/minecraft/util/KeyDispatchDataCodec; c
	compute (Lnet/minecraft/world/level/levelgen/DensityFunction$FunctionContext;)D a
	fillArray ([DLnet/minecraft/world/level/levelgen/DensityFunction$ContextProvider;)V a
	mapAll (Lnet/minecraft/world/level/levelgen/DensityFunction$Visitor;)Lnet/minecraft/world/level/levelgen/DensityFunction; a
	maxValue ()D b
	minValue ()D a
	noise ()Lnet/minecraft/world/level/levelgen/DensityFunction$NoiseHolder; o
	shiftX ()Lnet/minecraft/world/level/levelgen/DensityFunction; j
	shiftY ()Lnet/minecraft/world/level/levelgen/DensityFunction; k
	shiftZ ()Lnet/minecraft/world/level/levelgen/DensityFunction; l
	xzScale ()D m
	yScale ()D n
net/minecraft/world/level/levelgen/DensityFunctions$Spline dhe$w
	CODEC a
	DATA_CODEC g
	SPLINE_CODEC f
	spline e
	codec ()Lnet/minecraft/util/KeyDispatchDataCodec; c
	compute (Lnet/minecraft/world/level/levelgen/DensityFunction$FunctionContext;)D a
	fillArray ([DLnet/minecraft/world/level/levelgen/DensityFunction$ContextProvider;)V a
	mapAll (Lnet/minecraft/world/level/levelgen/DensityFunction$Visitor;)Lnet/minecraft/world/level/levelgen/DensityFunction; a
	maxValue ()D b
	minValue ()D a
	spline ()Lnet/minecraft/util/CubicSpline; j
net/minecraft/world/level/levelgen/DensityFunctions$Spline$Coordinate dhe$w$a
	CODEC b
	function c
	apply (Ljava/lang/Object;)F a
	apply (Lnet/minecraft/world/level/levelgen/DensityFunctions$Spline$Point;)F a
	function ()Lnet/minecraft/core/Holder; a
	mapAll (Lnet/minecraft/world/level/levelgen/DensityFunction$Visitor;)Lnet/minecraft/world/level/levelgen/DensityFunctions$Spline$Coordinate; a
	maxValue ()F c
	minValue ()F b
net/minecraft/world/level/levelgen/DensityFunctions$Spline$Point dhe$w$b
	context a
	context ()Lnet/minecraft/world/level/levelgen/DensityFunction$FunctionContext; a
net/minecraft/world/level/levelgen/DensityFunctions$TransformerWithContext dhe$x
	compute (Lnet/minecraft/world/level/levelgen/DensityFunction$FunctionContext;)D a
	fillArray ([DLnet/minecraft/world/level/levelgen/DensityFunction$ContextProvider;)V a
	input ()Lnet/minecraft/world/level/levelgen/DensityFunction; j
	transform (Lnet/minecraft/world/level/levelgen/DensityFunction$FunctionContext;D)D a
net/minecraft/world/level/levelgen/DensityFunctions$TwoArgumentSimpleFunction dhe$y
	LOGGER a
	argument1 ()Lnet/minecraft/world/level/levelgen/DensityFunction; k
	argument2 ()Lnet/minecraft/world/level/levelgen/DensityFunction; l
	codec ()Lnet/minecraft/util/KeyDispatchDataCodec; c
	create (Lnet/minecraft/world/level/levelgen/DensityFunctions$TwoArgumentSimpleFunction$Type;Lnet/minecraft/world/level/levelgen/DensityFunction;Lnet/minecraft/world/level/levelgen/DensityFunction;)Lnet/minecraft/world/level/levelgen/DensityFunctions$TwoArgumentSimpleFunction; a
	type ()Lnet/minecraft/world/level/levelgen/DensityFunctions$TwoArgumentSimpleFunction$Type; j
net/minecraft/world/level/levelgen/DensityFunctions$TwoArgumentSimpleFunction$Type dhe$y$a
	$VALUES g
	ADD a
	MAX d
	MIN c
	MUL b
	codec e
	name f
	$values ()[Lnet/minecraft/world/level/levelgen/DensityFunctions$TwoArgumentSimpleFunction$Type; a
	getSerializedName ()Ljava/lang/String; c
net/minecraft/world/level/levelgen/DensityFunctions$WeirdScaledSampler dhe$z
	CODEC a
	DATA_CODEC h
	input e
	noise f
	rarityValueMapper g
	codec ()Lnet/minecraft/util/KeyDispatchDataCodec; c
	input ()Lnet/minecraft/world/level/levelgen/DensityFunction; j
	mapAll (Lnet/minecraft/world/level/levelgen/DensityFunction$Visitor;)Lnet/minecraft/world/level/levelgen/DensityFunction; a
	maxValue ()D b
	minValue ()D a
	noise ()Lnet/minecraft/world/level/levelgen/DensityFunction$NoiseHolder; k
	rarityValueMapper ()Lnet/minecraft/world/level/levelgen/DensityFunctions$WeirdScaledSampler$RarityValueMapper; l
	transform (Lnet/minecraft/world/level/levelgen/DensityFunction$FunctionContext;D)D a
net/minecraft/world/level/levelgen/DensityFunctions$WeirdScaledSampler$RarityValueMapper dhe$z$a
	$VALUES g
	CODEC c
	TYPE1 a
	TYPE2 b
	mapper e
	maxRarity f
	name d
	$values ()[Lnet/minecraft/world/level/levelgen/DensityFunctions$WeirdScaledSampler$RarityValueMapper; a
	getSerializedName ()Ljava/lang/String; c
net/minecraft/world/level/levelgen/DensityFunctions$YClampedGradient dhe$aa
	CODEC a
	DATA_CODEC i
	fromValue g
	fromY e
	toValue h
	toY f
	codec ()Lnet/minecraft/util/KeyDispatchDataCodec; c
	compute (Lnet/minecraft/world/level/levelgen/DensityFunction$FunctionContext;)D a
	fromValue ()D l
	fromY ()I j
	maxValue ()D b
	minValue ()D a
	toValue ()D m
	toY ()I k
net/minecraft/world/level/levelgen/FlatLevelSource dhf
	CODEC c
	settings d
	addDebugScreenInfo (Ljava/util/List;Lnet/minecraft/world/level/levelgen/RandomState;Lnet/minecraft/core/BlockPos;)V a
	applyCarvers (Lnet/minecraft/server/level/WorldGenRegion;JLnet/minecraft/world/level/levelgen/RandomState;Lnet/minecraft/world/level/biome/BiomeManager;Lnet/minecraft/world/level/StructureManager;Lnet/minecraft/world/level/chunk/ChunkAccess;Lnet/minecraft/world/level/levelgen/GenerationStep$Carving;)V a
	buildSurface (Lnet/minecraft/server/level/WorldGenRegion;Lnet/minecraft/world/level/StructureManager;Lnet/minecraft/world/level/levelgen/RandomState;Lnet/minecraft/world/level/chunk/ChunkAccess;)V a
	codec ()Lcom/mojang/serialization/Codec; a
	createState (Lnet/minecraft/core/HolderLookup;Lnet/minecraft/world/level/levelgen/RandomState;J)Lnet/minecraft/world/level/chunk/ChunkGeneratorStructureState; a
	fillFromNoise (Ljava/util/concurrent/Executor;Lnet/minecraft/world/level/levelgen/blending/Blender;Lnet/minecraft/world/level/levelgen/RandomState;Lnet/minecraft/world/level/StructureManager;Lnet/minecraft/world/level/chunk/ChunkAccess;)Ljava/util/concurrent/CompletableFuture; a
	getBaseColumn (IILnet/minecraft/world/level/LevelHeightAccessor;Lnet/minecraft/world/level/levelgen/RandomState;)Lnet/minecraft/world/level/NoiseColumn; a
	getBaseHeight (IILnet/minecraft/world/level/levelgen/Heightmap$Types;Lnet/minecraft/world/level/LevelHeightAccessor;Lnet/minecraft/world/level/levelgen/RandomState;)I a
	getGenDepth ()I d
	getMinY ()I f
	getSeaLevel ()I e
	getSpawnHeight (Lnet/minecraft/world/level/LevelHeightAccessor;)I a
	settings ()Lnet/minecraft/world/level/levelgen/flat/FlatLevelGeneratorSettings; g
	spawnOriginalMobs (Lnet/minecraft/server/level/WorldGenRegion;)V a
net/minecraft/world/level/levelgen/GenerationStep dhg
net/minecraft/world/level/levelgen/GenerationStep$Carving dhg$a
	$VALUES e
	AIR a
	CODEC c
	LIQUID b
	name d
	$values ()[Lnet/minecraft/world/level/levelgen/GenerationStep$Carving; b
	getName ()Ljava/lang/String; a
	getSerializedName ()Ljava/lang/String; c
net/minecraft/world/level/levelgen/GenerationStep$Decoration dhg$b
	$VALUES n
	CODEC l
	FLUID_SPRINGS i
	LAKES b
	LOCAL_MODIFICATIONS c
	RAW_GENERATION a
	STRONGHOLDS f
	SURFACE_STRUCTURES e
	TOP_LAYER_MODIFICATION k
	UNDERGROUND_DECORATION h
	UNDERGROUND_ORES g
	UNDERGROUND_STRUCTURES d
	VEGETAL_DECORATION j
	name m
	$values ()[Lnet/minecraft/world/level/levelgen/GenerationStep$Decoration; b
	getName ()Ljava/lang/String; a
	getSerializedName ()Ljava/lang/String; c
net/minecraft/world/level/levelgen/GeodeBlockSettings dhh
	CODEC i
	alternateInnerLayerProvider c
	cannotReplace g
	fillingProvider a
	innerLayerProvider b
	innerPlacements f
	invalidBlocks h
	middleLayerProvider d
	outerLayerProvider e
net/minecraft/world/level/levelgen/GeodeCrackSettings dhi
	CODEC a
	baseCrackSize c
	crackPointOffset d
	generateCrackChance b
net/minecraft/world/level/levelgen/GeodeLayerSettings dhj
	CODEC a
	LAYER_RANGE f
	filling b
	innerLayer c
	middleLayer d
	outerLayer e
net/minecraft/world/level/levelgen/Heightmap dhk
	LOGGER a
	MATERIAL_MOTION_BLOCKING c
	NOT_AIR b
	chunk f
	data d
	isOpaque e
	getFirstAvailable (I)I a
	getFirstAvailable (II)I a
	getHighestTaken (II)I b
	getIndex (II)I c
	getRawData ()[J a
	primeHeightmaps (Lnet/minecraft/world/level/chunk/ChunkAccess;Ljava/util/Set;)V a
	setHeight (III)V a
	setRawData (Lnet/minecraft/world/level/chunk/ChunkAccess;Lnet/minecraft/world/level/levelgen/Heightmap$Types;[J)V a
	update (IIILnet/minecraft/world/level/block/state/BlockState;)Z a
net/minecraft/world/level/levelgen/Heightmap$Types dhk$a
	$VALUES k
	CODEC g
	MOTION_BLOCKING e
	MOTION_BLOCKING_NO_LEAVES f
	OCEAN_FLOOR d
	OCEAN_FLOOR_WG c
	WORLD_SURFACE b
	WORLD_SURFACE_WG a
	isOpaque j
	serializationKey h
	usage i
	$values ()[Lnet/minecraft/world/level/levelgen/Heightmap$Types; f
	getSerializationKey ()Ljava/lang/String; a
	getSerializedName ()Ljava/lang/String; c
	isOpaque ()Ljava/util/function/Predicate; e
	keepAfterWorldgen ()Z d
	sendToClient ()Z b
net/minecraft/world/level/levelgen/Heightmap$Usage dhk$b
	$VALUES d
	CLIENT c
	LIVE_WORLD b
	WORLDGEN a
	$values ()[Lnet/minecraft/world/level/levelgen/Heightmap$Usage; a
net/minecraft/world/level/levelgen/LegacyRandomSource dhl
	INCREMENT g
	MODULUS_BITS d
	MODULUS_MASK e
	MULTIPLIER f
	gaussianSource i
	seed h
	fork ()Lnet/minecraft/util/RandomSource; d
	forkPositional ()Lnet/minecraft/world/level/levelgen/PositionalRandomFactory; e
	next (I)I c
	nextGaussian ()D k
	setSeed (J)V b
net/minecraft/world/level/levelgen/LegacyRandomSource$LegacyPositionalRandomFactory dhl$a
	seed a
	at (III)Lnet/minecraft/util/RandomSource; a
	fromHashOf (Ljava/lang/String;)Lnet/minecraft/util/RandomSource; a
	parityConfigString (Ljava/lang/StringBuilder;)V a
net/minecraft/world/level/levelgen/MarsagliaPolarGaussian dhm
	haveNextNextGaussian c
	nextNextGaussian b
	randomSource a
	nextGaussian ()D b
	reset ()V a
net/minecraft/world/level/levelgen/NoiseBasedChunkGenerator dhn
	AIR d
	CODEC c
	globalFluidPicker f
	settings e
	addDebugScreenInfo (Ljava/util/List;Lnet/minecraft/world/level/levelgen/RandomState;Lnet/minecraft/core/BlockPos;)V a
	applyCarvers (Lnet/minecraft/server/level/WorldGenRegion;JLnet/minecraft/world/level/levelgen/RandomState;Lnet/minecraft/world/level/biome/BiomeManager;Lnet/minecraft/world/level/StructureManager;Lnet/minecraft/world/level/chunk/ChunkAccess;Lnet/minecraft/world/level/levelgen/GenerationStep$Carving;)V a
	buildSurface (Lnet/minecraft/server/level/WorldGenRegion;Lnet/minecraft/world/level/StructureManager;Lnet/minecraft/world/level/levelgen/RandomState;Lnet/minecraft/world/level/chunk/ChunkAccess;)V a
	buildSurface (Lnet/minecraft/world/level/chunk/ChunkAccess;Lnet/minecraft/world/level/levelgen/WorldGenerationContext;Lnet/minecraft/world/level/levelgen/RandomState;Lnet/minecraft/world/level/StructureManager;Lnet/minecraft/world/level/biome/BiomeManager;Lnet/minecraft/core/Registry;Lnet/minecraft/world/level/levelgen/blending/Blender;)V a
	codec ()Lcom/mojang/serialization/Codec; a
	createBiomes (Ljava/util/concurrent/Executor;Lnet/minecraft/world/level/levelgen/RandomState;Lnet/minecraft/world/level/levelgen/blending/Blender;Lnet/minecraft/world/level/StructureManager;Lnet/minecraft/world/level/chunk/ChunkAccess;)Ljava/util/concurrent/CompletableFuture; a
	createFluidPicker (Lnet/minecraft/world/level/levelgen/NoiseGeneratorSettings;)Lnet/minecraft/world/level/levelgen/Aquifer$FluidPicker; a
	createNoiseChunk (Lnet/minecraft/world/level/chunk/ChunkAccess;Lnet/minecraft/world/level/StructureManager;Lnet/minecraft/world/level/levelgen/blending/Blender;Lnet/minecraft/world/level/levelgen/RandomState;)Lnet/minecraft/world/level/levelgen/NoiseChunk; a
	debugPreliminarySurfaceLevel (Lnet/minecraft/world/level/levelgen/NoiseChunk;IIILnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/state/BlockState; a
	doCreateBiomes (Lnet/minecraft/world/level/levelgen/blending/Blender;Lnet/minecraft/world/level/levelgen/RandomState;Lnet/minecraft/world/level/StructureManager;Lnet/minecraft/world/level/chunk/ChunkAccess;)V a
	doFill (Lnet/minecraft/world/level/levelgen/blending/Blender;Lnet/minecraft/world/level/StructureManager;Lnet/minecraft/world/level/levelgen/RandomState;Lnet/minecraft/world/level/chunk/ChunkAccess;II)Lnet/minecraft/world/level/chunk/ChunkAccess; a
	fillFromNoise (Ljava/util/concurrent/Executor;Lnet/minecraft/world/level/levelgen/blending/Blender;Lnet/minecraft/world/level/levelgen/RandomState;Lnet/minecraft/world/level/StructureManager;Lnet/minecraft/world/level/chunk/ChunkAccess;)Ljava/util/concurrent/CompletableFuture; a
	generatorSettings ()Lnet/minecraft/core/Holder; g
	getBaseColumn (IILnet/minecraft/world/level/LevelHeightAccessor;Lnet/minecraft/world/level/levelgen/RandomState;)Lnet/minecraft/world/level/NoiseColumn; a
	getBaseHeight (IILnet/minecraft/world/level/levelgen/Heightmap$Types;Lnet/minecraft/world/level/LevelHeightAccessor;Lnet/minecraft/world/level/levelgen/RandomState;)I a
	getGenDepth ()I d
	getMinY ()I f
	getSeaLevel ()I e
	iterateNoiseColumn (Lnet/minecraft/world/level/LevelHeightAccessor;Lnet/minecraft/world/level/levelgen/RandomState;IILorg/apache/commons/lang3/mutable/MutableObject;Ljava/util/function/Predicate;)Ljava/util/OptionalInt; a
	spawnOriginalMobs (Lnet/minecraft/server/level/WorldGenRegion;)V a
	stable (Lnet/minecraft/resources/ResourceKey;)Z a
net/minecraft/world/level/levelgen/NoiseChunk dho
	aquifer m
	arrayIndex I
	arrayInterpolationCounter H
	beardifier s
	blendAlpha q
	blendOffset r
	blender p
	blockStateRule o
	cellCaches j
	cellCountXZ b
	cellCountY c
	cellHeight x
	cellNoiseMinY d
	cellStartBlockX A
	cellStartBlockY B
	cellStartBlockZ C
	cellWidth w
	fillingCell z
	firstCellX e
	firstCellZ f
	firstNoiseX g
	firstNoiseZ h
	inCellX D
	inCellY E
	inCellZ F
	initialDensityNoJaggedness n
	interpolating y
	interpolationCounter G
	interpolators i
	lastBlendingDataPos t
	lastBlendingOutput u
	noiseSettings a
	noiseSizeXZ v
	preliminarySurfaceLevel l
	sliceFillingContextProvider J
	wrapped k
	advanceCellX (I)V b
	aquifer ()Lnet/minecraft/world/level/levelgen/Aquifer; i
	blockX ()I a
	blockY ()I b
	blockZ ()I c
	cachedClimateSampler (Lnet/minecraft/world/level/levelgen/NoiseRouter;Ljava/util/List;)Lnet/minecraft/world/level/biome/Climate$Sampler; a
	cellHeight ()I k
	cellWidth ()I j
	computePreliminarySurfaceLevel (J)I a
	fillAllDirectly ([DLnet/minecraft/world/level/levelgen/DensityFunction;)V a
	fillSlice (ZI)V a
	forChunk (Lnet/minecraft/world/level/chunk/ChunkAccess;Lnet/minecraft/world/level/levelgen/RandomState;Lnet/minecraft/world/level/levelgen/DensityFunctions$BeardifierOrMarker;Lnet/minecraft/world/level/levelgen/NoiseGeneratorSettings;Lnet/minecraft/world/level/levelgen/Aquifer$FluidPicker;Lnet/minecraft/world/level/levelgen/blending/Blender;)Lnet/minecraft/world/level/levelgen/NoiseChunk; a
	forIndex (I)Lnet/minecraft/world/level/levelgen/DensityFunction$FunctionContext; a
	forIndex (I)Lnet/minecraft/world/level/levelgen/NoiseChunk; c
	getBlender ()Lnet/minecraft/world/level/levelgen/blending/Blender; d
	getInterpolatedState ()Lnet/minecraft/world/level/block/state/BlockState; e
	getOrComputeBlendingOutput (II)Lnet/minecraft/world/level/levelgen/blending/Blender$BlendingOutput; c
	initializeForFirstCellX ()V f
	preliminarySurfaceLevel (II)I a
	selectCellYZ (II)V b
	stopInterpolation ()V g
	swapSlices ()V h
	updateForX (ID)V b
	updateForY (ID)V a
	updateForZ (ID)V c
	wrap (Lnet/minecraft/world/level/levelgen/DensityFunction;)Lnet/minecraft/world/level/levelgen/DensityFunction; a
	wrapNew (Lnet/minecraft/world/level/levelgen/DensityFunction;)Lnet/minecraft/world/level/levelgen/DensityFunction; b
net/minecraft/world/level/levelgen/NoiseChunk$BlendAlpha dho$a
	codec ()Lnet/minecraft/util/KeyDispatchDataCodec; c
	compute (Lnet/minecraft/world/level/levelgen/DensityFunction$FunctionContext;)D a
	fillArray ([DLnet/minecraft/world/level/levelgen/DensityFunction$ContextProvider;)V a
	mapAll (Lnet/minecraft/world/level/levelgen/DensityFunction$Visitor;)Lnet/minecraft/world/level/levelgen/DensityFunction; a
	maxValue ()D b
	minValue ()D a
	wrapped ()Lnet/minecraft/world/level/levelgen/DensityFunction; k
net/minecraft/world/level/levelgen/NoiseChunk$BlendOffset dho$b
	codec ()Lnet/minecraft/util/KeyDispatchDataCodec; c
	compute (Lnet/minecraft/world/level/levelgen/DensityFunction$FunctionContext;)D a
	fillArray ([DLnet/minecraft/world/level/levelgen/DensityFunction$ContextProvider;)V a
	mapAll (Lnet/minecraft/world/level/levelgen/DensityFunction$Visitor;)Lnet/minecraft/world/level/levelgen/DensityFunction; a
	maxValue ()D b
	minValue ()D a
	wrapped ()Lnet/minecraft/world/level/levelgen/DensityFunction; k
net/minecraft/world/level/levelgen/NoiseChunk$BlockStateFiller dho$c
net/minecraft/world/level/levelgen/NoiseChunk$Cache2D dho$d
	function a
	lastPos2D e
	lastValue f
	compute (Lnet/minecraft/world/level/levelgen/DensityFunction$FunctionContext;)D a
	fillArray ([DLnet/minecraft/world/level/levelgen/DensityFunction$ContextProvider;)V a
	type ()Lnet/minecraft/world/level/levelgen/DensityFunctions$Marker$Type; j
	wrapped ()Lnet/minecraft/world/level/levelgen/DensityFunction; k
net/minecraft/world/level/levelgen/NoiseChunk$CacheAllInCell dho$e
	noiseFiller e
	values f
	compute (Lnet/minecraft/world/level/levelgen/DensityFunction$FunctionContext;)D a
	fillArray ([DLnet/minecraft/world/level/levelgen/DensityFunction$ContextProvider;)V a
	type ()Lnet/minecraft/world/level/levelgen/DensityFunctions$Marker$Type; j
	wrapped ()Lnet/minecraft/world/level/levelgen/DensityFunction; k
net/minecraft/world/level/levelgen/NoiseChunk$CacheOnce dho$f
	function e
	lastArray i
	lastArrayCounter g
	lastCounter f
	lastValue h
	compute (Lnet/minecraft/world/level/levelgen/DensityFunction$FunctionContext;)D a
	fillArray ([DLnet/minecraft/world/level/levelgen/DensityFunction$ContextProvider;)V a
	type ()Lnet/minecraft/world/level/levelgen/DensityFunctions$Marker$Type; j
	wrapped ()Lnet/minecraft/world/level/levelgen/DensityFunction; k
net/minecraft/world/level/levelgen/NoiseChunk$FlatCache dho$g
	noiseFiller e
	values f
	compute (Lnet/minecraft/world/level/levelgen/DensityFunction$FunctionContext;)D a
	fillArray ([DLnet/minecraft/world/level/levelgen/DensityFunction$ContextProvider;)V a
	type ()Lnet/minecraft/world/level/levelgen/DensityFunctions$Marker$Type; j
	wrapped ()Lnet/minecraft/world/level/levelgen/DensityFunction; k
net/minecraft/world/level/levelgen/NoiseChunk$NoiseChunkDensityFunction dho$h
	maxValue ()D b
	minValue ()D a
	wrapped ()Lnet/minecraft/world/level/levelgen/DensityFunction; k
net/minecraft/world/level/levelgen/NoiseChunk$NoiseInterpolator dho$i
	noise000 h
	noise001 i
	noise010 l
	noise011 m
	noise100 j
	noise101 k
	noise110 n
	noise111 o
	noiseFiller g
	slice0 e
	slice1 f
	value v
	valueXZ00 p
	valueXZ01 r
	valueXZ10 q
	valueXZ11 s
	valueZ0 t
	valueZ1 u
	allocateSlice (II)[[D a
	compute (Lnet/minecraft/world/level/levelgen/DensityFunction$FunctionContext;)D a
	fillArray ([DLnet/minecraft/world/level/levelgen/DensityFunction$ContextProvider;)V a
	selectCellYZ (II)V b
	swapSlices ()V l
	type ()Lnet/minecraft/world/level/levelgen/DensityFunctions$Marker$Type; j
	updateForX (D)V b
	updateForY (D)V a
	updateForZ (D)V c
	wrapped ()Lnet/minecraft/world/level/levelgen/DensityFunction; k
net/minecraft/world/level/levelgen/NoiseGeneratorSettings dhp
	AMPLIFIED e
	CAVES h
	CODEC b
	DIRECT_CODEC a
	END g
	FLOATING_ISLANDS i
	LARGE_BIOMES d
	NETHER f
	OVERWORLD c
	aquifersEnabled r
	defaultBlock k
	defaultFluid l
	disableMobGeneration q
	noiseRouter m
	noiseSettings j
	oreVeinsEnabled s
	seaLevel p
	spawnTarget o
	surfaceRule n
	useLegacyRandomSource t
	aquifersEnabled ()Z m
	bootstrap (Lnet/minecraft/data/worldgen/BootstapContext;)V a
	caves (Lnet/minecraft/data/worldgen/BootstapContext;)Lnet/minecraft/world/level/levelgen/NoiseGeneratorSettings; d
	defaultBlock ()Lnet/minecraft/world/level/block/state/BlockState; g
	defaultFluid ()Lnet/minecraft/world/level/block/state/BlockState; h
	disableMobGeneration ()Z a
	dummy ()Lnet/minecraft/world/level/levelgen/NoiseGeneratorSettings; e
	end (Lnet/minecraft/data/worldgen/BootstapContext;)Lnet/minecraft/world/level/levelgen/NoiseGeneratorSettings; b
	floatingIslands (Lnet/minecraft/data/worldgen/BootstapContext;)Lnet/minecraft/world/level/levelgen/NoiseGeneratorSettings; e
	getRandomSource ()Lnet/minecraft/world/level/levelgen/WorldgenRandom$Algorithm; d
	isAquifersEnabled ()Z b
	nether (Lnet/minecraft/data/worldgen/BootstapContext;)Lnet/minecraft/world/level/levelgen/NoiseGeneratorSettings; c
	noiseRouter ()Lnet/minecraft/world/level/levelgen/NoiseRouter; i
	noiseSettings ()Lnet/minecraft/world/level/levelgen/NoiseSettings; f
	oreVeinsEnabled ()Z c
	overworld (Lnet/minecraft/data/worldgen/BootstapContext;ZZ)Lnet/minecraft/world/level/levelgen/NoiseGeneratorSettings; a
	seaLevel ()I l
	spawnTarget ()Ljava/util/List; k
	surfaceRule ()Lnet/minecraft/world/level/levelgen/SurfaceRules$RuleSource; j
	useLegacyRandomSource ()Z n
net/minecraft/world/level/levelgen/NoiseRouter dhq
	CODEC a
	barrierNoise b
	continents h
	depth j
	erosion i
	finalDensity m
	fluidLevelFloodednessNoise c
	fluidLevelSpreadNoise d
	initialDensityWithoutJaggedness l
	lavaNoise e
	ridges k
	temperature f
	vegetation g
	veinGap p
	veinRidged o
	veinToggle n
	barrierNoise ()Lnet/minecraft/world/level/levelgen/DensityFunction; a
	continents ()Lnet/minecraft/world/level/levelgen/DensityFunction; g
	depth ()Lnet/minecraft/world/level/levelgen/DensityFunction; i
	erosion ()Lnet/minecraft/world/level/levelgen/DensityFunction; h
	field (Ljava/lang/String;Ljava/util/function/Function;)Lcom/mojang/serialization/codecs/RecordCodecBuilder; a
	finalDensity ()Lnet/minecraft/world/level/levelgen/DensityFunction; l
	fluidLevelFloodednessNoise ()Lnet/minecraft/world/level/levelgen/DensityFunction; b
	fluidLevelSpreadNoise ()Lnet/minecraft/world/level/levelgen/DensityFunction; c
	initialDensityWithoutJaggedness ()Lnet/minecraft/world/level/levelgen/DensityFunction; k
	lavaNoise ()Lnet/minecraft/world/level/levelgen/DensityFunction; d
	mapAll (Lnet/minecraft/world/level/levelgen/DensityFunction$Visitor;)Lnet/minecraft/world/level/levelgen/NoiseRouter; a
	ridges ()Lnet/minecraft/world/level/levelgen/DensityFunction; j
	temperature ()Lnet/minecraft/world/level/levelgen/DensityFunction; e
	vegetation ()Lnet/minecraft/world/level/levelgen/DensityFunction; f
	veinGap ()Lnet/minecraft/world/level/levelgen/DensityFunction; o
	veinRidged ()Lnet/minecraft/world/level/levelgen/DensityFunction; n
	veinToggle ()Lnet/minecraft/world/level/levelgen/DensityFunction; m
net/minecraft/world/level/levelgen/NoiseRouterData dhr
	BASE_3D_NOISE_END A
	BASE_3D_NOISE_NETHER z
	BASE_3D_NOISE_OVERWORLD y
	BLENDING_FACTOR s
	BLENDING_JAGGEDNESS t
	CHEESE_NOISE_TARGET r
	CONTINENTS d
	CONTINENTS_LARGE l
	DEPTH k
	DEPTH_AMPLIFIED K
	DEPTH_LARGE F
	ENTRANCES O
	EROSION e
	EROSION_LARGE m
	FACTOR i
	FACTOR_AMPLIFIED I
	FACTOR_LARGE D
	GLOBAL_OFFSET a
	ISLAND_CHUNK_DISTANCE b
	ISLAND_CHUNK_DISTANCE_SQR c
	JAGGEDNESS j
	JAGGEDNESS_AMPLIFIED J
	JAGGEDNESS_LARGE E
	NOODLE P
	NOODLE_SPACING_AND_STRAIGHTNESS p
	OFFSET h
	OFFSET_AMPLIFIED H
	OFFSET_LARGE C
	ORE_THICKNESS n
	PILLARS Q
	RIDGES f
	RIDGES_FOLDED g
	SHIFT_X w
	SHIFT_Z x
	SLOPED_CHEESE B
	SLOPED_CHEESE_AMPLIFIED L
	SLOPED_CHEESE_END M
	SLOPED_CHEESE_LARGE G
	SPAGHETTI_2D S
	SPAGHETTI_2D_THICKNESS_MODULATOR R
	SPAGHETTI_ROUGHNESS_FUNCTION N
	SURFACE_DENSITY_THRESHOLD q
	VEININESS_FREQUENCY o
	Y v
	ZERO u
	bootstrap (Lnet/minecraft/data/worldgen/BootstapContext;)Lnet/minecraft/core/Holder; a
	caves (Lnet/minecraft/core/HolderGetter;Lnet/minecraft/core/HolderGetter;)Lnet/minecraft/world/level/levelgen/NoiseRouter; b
	createKey (Ljava/lang/String;)Lnet/minecraft/resources/ResourceKey; a
	end (Lnet/minecraft/core/HolderGetter;)Lnet/minecraft/world/level/levelgen/NoiseRouter; a
	entrances (Lnet/minecraft/core/HolderGetter;Lnet/minecraft/core/HolderGetter;)Lnet/minecraft/world/level/levelgen/DensityFunction; d
	floatingIslands (Lnet/minecraft/core/HolderGetter;Lnet/minecraft/core/HolderGetter;)Lnet/minecraft/world/level/levelgen/NoiseRouter; c
	getFunction (Lnet/minecraft/core/HolderGetter;Lnet/minecraft/resources/ResourceKey;)Lnet/minecraft/world/level/levelgen/DensityFunction; a
	nether (Lnet/minecraft/core/HolderGetter;Lnet/minecraft/core/HolderGetter;)Lnet/minecraft/world/level/levelgen/NoiseRouter; a
	noNewCaves (Lnet/minecraft/core/HolderGetter;Lnet/minecraft/core/HolderGetter;Lnet/minecraft/world/level/levelgen/DensityFunction;)Lnet/minecraft/world/level/levelgen/NoiseRouter; b
	noiseGradientDensity (Lnet/minecraft/world/level/levelgen/DensityFunction;Lnet/minecraft/world/level/levelgen/DensityFunction;)Lnet/minecraft/world/level/levelgen/DensityFunction; b
	none ()Lnet/minecraft/world/level/levelgen/NoiseRouter; a
	noodle (Lnet/minecraft/core/HolderGetter;Lnet/minecraft/core/HolderGetter;)Lnet/minecraft/world/level/levelgen/DensityFunction; e
	overworld (Lnet/minecraft/core/HolderGetter;Lnet/minecraft/core/HolderGetter;ZZ)Lnet/minecraft/world/level/levelgen/NoiseRouter; a
	peaksAndValleys (F)F a
	peaksAndValleys (Lnet/minecraft/world/level/levelgen/DensityFunction;)Lnet/minecraft/world/level/levelgen/DensityFunction; a
	pillars (Lnet/minecraft/core/HolderGetter;)Lnet/minecraft/world/level/levelgen/DensityFunction; c
	postProcess (Lnet/minecraft/world/level/levelgen/DensityFunction;)Lnet/minecraft/world/level/levelgen/DensityFunction; b
	registerAndWrap (Lnet/minecraft/data/worldgen/BootstapContext;Lnet/minecraft/resources/ResourceKey;Lnet/minecraft/world/level/levelgen/DensityFunction;)Lnet/minecraft/world/level/levelgen/DensityFunction; a
	registerTerrainNoises (Lnet/minecraft/data/worldgen/BootstapContext;Lnet/minecraft/core/HolderGetter;Lnet/minecraft/world/level/levelgen/DensityFunction;Lnet/minecraft/core/Holder;Lnet/minecraft/core/Holder;Lnet/minecraft/resources/ResourceKey;Lnet/minecraft/resources/ResourceKey;Lnet/minecraft/resources/ResourceKey;Lnet/minecraft/resources/ResourceKey;Lnet/minecraft/resources/ResourceKey;Z)V a
	slide (Lnet/minecraft/world/level/levelgen/DensityFunction;IIIIDIID)Lnet/minecraft/world/level/levelgen/DensityFunction; a
	slideEnd (Lnet/minecraft/world/level/levelgen/DensityFunction;)Lnet/minecraft/world/level/levelgen/DensityFunction; c
	slideEndLike (Lnet/minecraft/world/level/levelgen/DensityFunction;II)Lnet/minecraft/world/level/levelgen/DensityFunction; a
	slideNetherLike (Lnet/minecraft/core/HolderGetter;II)Lnet/minecraft/world/level/levelgen/DensityFunction; a
	slideOverworld (ZLnet/minecraft/world/level/levelgen/DensityFunction;)Lnet/minecraft/world/level/levelgen/DensityFunction; a
	spaghetti2D (Lnet/minecraft/core/HolderGetter;Lnet/minecraft/core/HolderGetter;)Lnet/minecraft/world/level/levelgen/DensityFunction; f
	spaghettiRoughnessFunction (Lnet/minecraft/core/HolderGetter;)Lnet/minecraft/world/level/levelgen/DensityFunction; b
	splineWithBlending (Lnet/minecraft/world/level/levelgen/DensityFunction;Lnet/minecraft/world/level/levelgen/DensityFunction;)Lnet/minecraft/world/level/levelgen/DensityFunction; a
	underground (Lnet/minecraft/core/HolderGetter;Lnet/minecraft/core/HolderGetter;Lnet/minecraft/world/level/levelgen/DensityFunction;)Lnet/minecraft/world/level/levelgen/DensityFunction; a
	yLimitedInterpolatable (Lnet/minecraft/world/level/levelgen/DensityFunction;Lnet/minecraft/world/level/levelgen/DensityFunction;III)Lnet/minecraft/world/level/levelgen/DensityFunction; a
net/minecraft/world/level/levelgen/NoiseRouterData$QuantizedSpaghettiRarity dhr$a
	getSpaghettiRarity3D (D)D b
	getSphaghettiRarity2D (D)D a
net/minecraft/world/level/levelgen/NoiseSettings dhs
	CAVES_NOISE_SETTINGS e
	CODEC a
	END_NOISE_SETTINGS d
	FLOATING_ISLANDS_NOISE_SETTINGS f
	NETHER_NOISE_SETTINGS c
	OVERWORLD_NOISE_SETTINGS b
	height h
	minY g
	noiseSizeHorizontal i
	noiseSizeVertical j
	clampToHeightAccessor (Lnet/minecraft/world/level/LevelHeightAccessor;)Lnet/minecraft/world/level/levelgen/NoiseSettings; a
	create (IIII)Lnet/minecraft/world/level/levelgen/NoiseSettings; a
	getCellHeight ()I a
	getCellWidth ()I b
	guardY (Lnet/minecraft/world/level/levelgen/NoiseSettings;)Lcom/mojang/serialization/DataResult; a
	height ()I d
	minY ()I c
	noiseSizeHorizontal ()I e
	noiseSizeVertical ()I f
net/minecraft/world/level/levelgen/Noises dht
	AQUIFER_BARRIER k
	AQUIFER_FLUID_LEVEL_FLOODEDNESS l
	AQUIFER_FLUID_LEVEL_SPREAD n
	AQUIFER_LAVA m
	BADLANDS_PILLAR Q
	BADLANDS_PILLAR_ROOF R
	BADLANDS_SURFACE S
	CALCITE X
	CAVE_CHEESE D
	CAVE_ENTRANCE B
	CAVE_LAYER C
	CLAY_BANDS_OFFSET P
	CONTINENTALNESS c
	CONTINENTALNESS_LARGE g
	EROSION d
	EROSION_LARGE h
	GRAVEL Y
	GRAVEL_LAYER ad
	ICE ab
	ICEBERG_PILLAR T
	ICEBERG_PILLAR_ROOF U
	ICEBERG_SURFACE V
	JAGGED M
	NETHERRACK af
	NETHER_STATE_SELECTOR ah
	NETHER_WART ag
	NOODLE I
	NOODLE_RIDGE_A K
	NOODLE_RIDGE_B L
	NOODLE_THICKNESS J
	ORE_GAP H
	ORE_VEININESS E
	ORE_VEIN_A F
	ORE_VEIN_B G
	PACKED_ICE aa
	PATCH ae
	PILLAR o
	PILLAR_RARENESS p
	PILLAR_THICKNESS q
	POWDER_SNOW Z
	RIDGE i
	SHIFT j
	SOUL_SAND_LAYER ac
	SPAGHETTI_2D r
	SPAGHETTI_2D_ELEVATION s
	SPAGHETTI_2D_MODULATOR t
	SPAGHETTI_2D_THICKNESS u
	SPAGHETTI_3D_1 v
	SPAGHETTI_3D_2 w
	SPAGHETTI_3D_RARITY x
	SPAGHETTI_3D_THICKNESS y
	SPAGHETTI_ROUGHNESS z
	SPAGHETTI_ROUGHNESS_MODULATOR A
	SURFACE N
	SURFACE_SECONDARY O
	SWAMP W
	TEMPERATURE a
	TEMPERATURE_LARGE e
	VEGETATION b
	VEGETATION_LARGE f
	createKey (Ljava/lang/String;)Lnet/minecraft/resources/ResourceKey; a
	instantiate (Lnet/minecraft/core/HolderGetter;Lnet/minecraft/world/level/levelgen/PositionalRandomFactory;Lnet/minecraft/resources/ResourceKey;)Lnet/minecraft/world/level/levelgen/synth/NormalNoise; a
net/minecraft/world/level/levelgen/OreVeinifier dhu
	CHANCE_OF_RAW_ORE_BLOCK h
	EDGE_ROUNDOFF_BEGIN b
	MAX_EDGE_ROUNDOFF c
	MAX_RICHNESS f
	MAX_RICHNESS_THRESHOLD g
	MIN_RICHNESS e
	SKIP_ORE_IF_GAP_NOISE_IS_BELOW i
	VEININESS_THRESHOLD a
	VEIN_SOLIDNESS d
	create (Lnet/minecraft/world/level/levelgen/DensityFunction;Lnet/minecraft/world/level/levelgen/DensityFunction;Lnet/minecraft/world/level/levelgen/DensityFunction;Lnet/minecraft/world/level/levelgen/PositionalRandomFactory;)Lnet/minecraft/world/level/levelgen/NoiseChunk$BlockStateFiller; a
net/minecraft/world/level/levelgen/OreVeinifier$VeinType dhu$a
	$VALUES h
	COPPER a
	IRON b
	filler g
	maxY d
	minY c
	ore e
	rawOreBlock f
	$values ()[Lnet/minecraft/world/level/levelgen/OreVeinifier$VeinType; a
net/minecraft/world/level/levelgen/PatrolSpawner dhv
	nextTick a
	spawnPatrolMember (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Lnet/minecraft/util/RandomSource;Z)Z a
	tick (Lnet/minecraft/server/level/ServerLevel;ZZ)I a
net/minecraft/world/level/levelgen/PhantomSpawner dhw
	nextTick a
	tick (Lnet/minecraft/server/level/ServerLevel;ZZ)I a
net/minecraft/world/level/levelgen/PositionalRandomFactory dhx
	at (III)Lnet/minecraft/util/RandomSource; a
	at (Lnet/minecraft/core/BlockPos;)Lnet/minecraft/util/RandomSource; a
	fromHashOf (Ljava/lang/String;)Lnet/minecraft/util/RandomSource; a
	fromHashOf (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/util/RandomSource; a
	parityConfigString (Ljava/lang/StringBuilder;)V a
net/minecraft/world/level/levelgen/RandomState dhy
	aquiferRandom f
	noiseIntances h
	noises b
	oreRandom g
	positionalRandoms i
	random a
	router c
	sampler d
	surfaceSystem e
	aquiferRandom ()Lnet/minecraft/world/level/levelgen/PositionalRandomFactory; d
	create (Lnet/minecraft/core/HolderGetter$Provider;Lnet/minecraft/resources/ResourceKey;J)Lnet/minecraft/world/level/levelgen/RandomState; a
	create (Lnet/minecraft/world/level/levelgen/NoiseGeneratorSettings;Lnet/minecraft/core/HolderGetter;J)Lnet/minecraft/world/level/levelgen/RandomState; a
	getOrCreateNoise (Lnet/minecraft/resources/ResourceKey;)Lnet/minecraft/world/level/levelgen/synth/NormalNoise; a
	getOrCreateRandomFactory (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/world/level/levelgen/PositionalRandomFactory; a
	oreRandom ()Lnet/minecraft/world/level/levelgen/PositionalRandomFactory; e
	router ()Lnet/minecraft/world/level/levelgen/NoiseRouter; a
	sampler ()Lnet/minecraft/world/level/biome/Climate$Sampler; b
	surfaceSystem ()Lnet/minecraft/world/level/levelgen/SurfaceSystem; c
net/minecraft/world/level/levelgen/RandomSupport dhz
	GOLDEN_RATIO_64 a
	MD5_128 c
	SEED_UNIQUIFIER d
	SILVER_RATIO_64 b
	generateUniqueSeed ()J a
	mixStafford13 (J)J a
	seedFromHashOf (Ljava/lang/String;)Lnet/minecraft/world/level/levelgen/RandomSupport$Seed128bit; a
	upgradeSeedTo128bit (J)Lnet/minecraft/world/level/levelgen/RandomSupport$Seed128bit; c
	upgradeSeedTo128bitUnmixed (J)Lnet/minecraft/world/level/levelgen/RandomSupport$Seed128bit; b
net/minecraft/world/level/levelgen/RandomSupport$Seed128bit dhz$a
	seedHi b
	seedLo a
	mixed ()Lnet/minecraft/world/level/levelgen/RandomSupport$Seed128bit; a
	seedHi ()J c
	seedLo ()J b
	xor (JJ)Lnet/minecraft/world/level/levelgen/RandomSupport$Seed128bit; a
	xor (Lnet/minecraft/world/level/levelgen/RandomSupport$Seed128bit;)Lnet/minecraft/world/level/levelgen/RandomSupport$Seed128bit; a
net/minecraft/world/level/levelgen/SingleThreadedRandomSource dia
	INCREMENT g
	MODULUS_BITS d
	MODULUS_MASK e
	MULTIPLIER f
	gaussianSource i
	seed h
	fork ()Lnet/minecraft/util/RandomSource; d
	forkPositional ()Lnet/minecraft/world/level/levelgen/PositionalRandomFactory; e
	next (I)I c
	nextGaussian ()D k
	setSeed (J)V b
net/minecraft/world/level/levelgen/SurfaceRules dib
	DEEP_UNDER_FLOOR c
	ON_CEILING e
	ON_FLOOR a
	UNDER_CEILING f
	UNDER_FLOOR b
	VERY_DEEP_UNDER_FLOOR d
	abovePreliminarySurface ()Lnet/minecraft/world/level/levelgen/SurfaceRules$ConditionSource; c
	bandlands ()Lnet/minecraft/world/level/levelgen/SurfaceRules$RuleSource; e
	hole ()Lnet/minecraft/world/level/levelgen/SurfaceRules$ConditionSource; b
	ifTrue (Lnet/minecraft/world/level/levelgen/SurfaceRules$ConditionSource;Lnet/minecraft/world/level/levelgen/SurfaceRules$RuleSource;)Lnet/minecraft/world/level/levelgen/SurfaceRules$RuleSource; a
	isBiome (Ljava/util/List;)Lnet/minecraft/world/level/levelgen/SurfaceRules$BiomeConditionSource; a
	isBiome ([Lnet/minecraft/resources/ResourceKey;)Lnet/minecraft/world/level/levelgen/SurfaceRules$ConditionSource; a
	noiseCondition (Lnet/minecraft/resources/ResourceKey;D)Lnet/minecraft/world/level/levelgen/SurfaceRules$ConditionSource; a
	noiseCondition (Lnet/minecraft/resources/ResourceKey;DD)Lnet/minecraft/world/level/levelgen/SurfaceRules$ConditionSource; a
	not (Lnet/minecraft/world/level/levelgen/SurfaceRules$ConditionSource;)Lnet/minecraft/world/level/levelgen/SurfaceRules$ConditionSource; a
	register (Lnet/minecraft/core/Registry;Ljava/lang/String;Lnet/minecraft/util/KeyDispatchDataCodec;)Lcom/mojang/serialization/Codec; a
	sequence ([Lnet/minecraft/world/level/levelgen/SurfaceRules$RuleSource;)Lnet/minecraft/world/level/levelgen/SurfaceRules$RuleSource; a
	state (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/levelgen/SurfaceRules$RuleSource; a
	steep ()Lnet/minecraft/world/level/levelgen/SurfaceRules$ConditionSource; a
	stoneDepthCheck (IZILnet/minecraft/world/level/levelgen/placement/CaveSurface;)Lnet/minecraft/world/level/levelgen/SurfaceRules$ConditionSource; a
	stoneDepthCheck (IZLnet/minecraft/world/level/levelgen/placement/CaveSurface;)Lnet/minecraft/world/level/levelgen/SurfaceRules$ConditionSource; a
	temperature ()Lnet/minecraft/world/level/levelgen/SurfaceRules$ConditionSource; d
	verticalGradient (Ljava/lang/String;Lnet/minecraft/world/level/levelgen/VerticalAnchor;Lnet/minecraft/world/level/levelgen/VerticalAnchor;)Lnet/minecraft/world/level/levelgen/SurfaceRules$ConditionSource; a
	waterBlockCheck (II)Lnet/minecraft/world/level/levelgen/SurfaceRules$ConditionSource; a
	waterStartCheck (II)Lnet/minecraft/world/level/levelgen/SurfaceRules$ConditionSource; b
	yBlockCheck (Lnet/minecraft/world/level/levelgen/VerticalAnchor;I)Lnet/minecraft/world/level/levelgen/SurfaceRules$ConditionSource; a
	yStartCheck (Lnet/minecraft/world/level/levelgen/VerticalAnchor;I)Lnet/minecraft/world/level/levelgen/SurfaceRules$ConditionSource; b
net/minecraft/world/level/levelgen/SurfaceRules$AbovePreliminarySurface dib$a
	$VALUES d
	CODEC c
	INSTANCE a
	$values ()[Lnet/minecraft/world/level/levelgen/SurfaceRules$AbovePreliminarySurface; b
	apply (Lnet/minecraft/world/level/levelgen/SurfaceRules$Context;)Lnet/minecraft/world/level/levelgen/SurfaceRules$Condition; a
	codec ()Lnet/minecraft/util/KeyDispatchDataCodec; a
net/minecraft/world/level/levelgen/SurfaceRules$Bandlands dib$b
	$VALUES d
	CODEC c
	INSTANCE a
	$values ()[Lnet/minecraft/world/level/levelgen/SurfaceRules$Bandlands; b
	apply (Lnet/minecraft/world/level/levelgen/SurfaceRules$Context;)Lnet/minecraft/world/level/levelgen/SurfaceRules$SurfaceRule; a
	codec ()Lnet/minecraft/util/KeyDispatchDataCodec; a
net/minecraft/world/level/levelgen/SurfaceRules$BiomeConditionSource dib$c
	CODEC a
	biomeNameTest d
	biomes c
	apply (Lnet/minecraft/world/level/levelgen/SurfaceRules$Context;)Lnet/minecraft/world/level/levelgen/SurfaceRules$Condition; a
	codec ()Lnet/minecraft/util/KeyDispatchDataCodec; a
net/minecraft/world/level/levelgen/SurfaceRules$BlockRuleSource dib$d
	CODEC d
	resultState a
	rule c
	apply (Lnet/minecraft/world/level/levelgen/SurfaceRules$Context;)Lnet/minecraft/world/level/levelgen/SurfaceRules$SurfaceRule; a
	codec ()Lnet/minecraft/util/KeyDispatchDataCodec; a
	resultState ()Lnet/minecraft/world/level/block/state/BlockState; b
	rule ()Lnet/minecraft/world/level/levelgen/SurfaceRules$StateRule; c
net/minecraft/world/level/levelgen/SurfaceRules$Condition dib$e
	test ()Z b
net/minecraft/world/level/levelgen/SurfaceRules$ConditionSource dib$f
	CODEC b
	bootstrap (Lnet/minecraft/core/Registry;)Lcom/mojang/serialization/Codec; a
	codec ()Lnet/minecraft/util/KeyDispatchDataCodec; a
net/minecraft/world/level/levelgen/SurfaceRules$Context dib$g
	HOW_FAR_BELOW_PRELIMINARY_SURFACE_LEVEL_TO_BUILD_SURFACE a
	SURFACE_CELL_BITS b
	SURFACE_CELL_MASK d
	SURFACE_CELL_SIZE c
	abovePreliminarySurface i
	biome A
	biomeGetter m
	blockX r
	blockY B
	blockZ s
	chunk k
	context n
	hole h
	lastMinSurfaceLevelUpdate w
	lastPreliminarySurfaceCellOrigin o
	lastSurfaceDepth2Update u
	lastUpdateXZ q
	lastUpdateY y
	minSurfaceLevel x
	noiseChunk l
	pos z
	preliminarySurfaceCache p
	randomState j
	steep g
	stoneDepthAbove E
	stoneDepthBelow D
	surfaceDepth t
	surfaceSecondary v
	system e
	temperature f
	waterHeight C
	blockCoordToSurfaceCell (I)I a
	getMinSurfaceLevel ()I b
	getSurfaceSecondary ()D a
	surfaceCellToBlockCoord (I)I b
	updateXZ (II)V a
	updateY (IIIIII)V a
net/minecraft/world/level/levelgen/SurfaceRules$Context$AbovePreliminarySurfaceCondition dib$g$a
	test ()Z b
net/minecraft/world/level/levelgen/SurfaceRules$Context$HoleCondition dib$g$b
	compute ()Z a
net/minecraft/world/level/levelgen/SurfaceRules$Context$SteepMaterialCondition dib$g$c
	compute ()Z a
net/minecraft/world/level/levelgen/SurfaceRules$Context$TemperatureHelperCondition dib$g$d
	compute ()Z a
net/minecraft/world/level/levelgen/SurfaceRules$Hole dib$h
	$VALUES d
	CODEC c
	INSTANCE a
	$values ()[Lnet/minecraft/world/level/levelgen/SurfaceRules$Hole; b
	apply (Lnet/minecraft/world/level/levelgen/SurfaceRules$Context;)Lnet/minecraft/world/level/levelgen/SurfaceRules$Condition; a
	codec ()Lnet/minecraft/util/KeyDispatchDataCodec; a
net/minecraft/world/level/levelgen/SurfaceRules$LazyCondition dib$i
	context c
	lastUpdate a
	result d
	compute ()Z a
	getContextLastUpdate ()J c
	test ()Z b
net/minecraft/world/level/levelgen/SurfaceRules$LazyXZCondition dib$j
	getContextLastUpdate ()J c
net/minecraft/world/level/levelgen/SurfaceRules$LazyYCondition dib$k
	getContextLastUpdate ()J c
net/minecraft/world/level/levelgen/SurfaceRules$NoiseThresholdConditionSource dib$l
	CODEC e
	maxThreshold d
	minThreshold c
	noise a
	apply (Lnet/minecraft/world/level/levelgen/SurfaceRules$Context;)Lnet/minecraft/world/level/levelgen/SurfaceRules$Condition; a
	codec ()Lnet/minecraft/util/KeyDispatchDataCodec; a
	maxThreshold ()D d
	minThreshold ()D c
	noise ()Lnet/minecraft/resources/ResourceKey; b
net/minecraft/world/level/levelgen/SurfaceRules$NotCondition dib$m
	target a
	target ()Lnet/minecraft/world/level/levelgen/SurfaceRules$Condition; a
	test ()Z b
net/minecraft/world/level/levelgen/SurfaceRules$NotConditionSource dib$n
	CODEC c
	target a
	apply (Lnet/minecraft/world/level/levelgen/SurfaceRules$Context;)Lnet/minecraft/world/level/levelgen/SurfaceRules$Condition; a
	codec ()Lnet/minecraft/util/KeyDispatchDataCodec; a
	target ()Lnet/minecraft/world/level/levelgen/SurfaceRules$ConditionSource; b
net/minecraft/world/level/levelgen/SurfaceRules$RuleSource dib$o
	CODEC b
	bootstrap (Lnet/minecraft/core/Registry;)Lcom/mojang/serialization/Codec; a
	codec ()Lnet/minecraft/util/KeyDispatchDataCodec; a
net/minecraft/world/level/levelgen/SurfaceRules$SequenceRule dib$p
	rules a
	rules ()Ljava/util/List; a
net/minecraft/world/level/levelgen/SurfaceRules$SequenceRuleSource dib$q
	CODEC c
	sequence a
	apply (Lnet/minecraft/world/level/levelgen/SurfaceRules$Context;)Lnet/minecraft/world/level/levelgen/SurfaceRules$SurfaceRule; a
	codec ()Lnet/minecraft/util/KeyDispatchDataCodec; a
	sequence ()Ljava/util/List; b
net/minecraft/world/level/levelgen/SurfaceRules$StateRule dib$r
	state a
	state ()Lnet/minecraft/world/level/block/state/BlockState; a
net/minecraft/world/level/levelgen/SurfaceRules$Steep dib$s
	$VALUES d
	CODEC c
	INSTANCE a
	$values ()[Lnet/minecraft/world/level/levelgen/SurfaceRules$Steep; b
	apply (Lnet/minecraft/world/level/levelgen/SurfaceRules$Context;)Lnet/minecraft/world/level/levelgen/SurfaceRules$Condition; a
	codec ()Lnet/minecraft/util/KeyDispatchDataCodec; a
net/minecraft/world/level/levelgen/SurfaceRules$StoneDepthCheck dib$t
	CODEC f
	addSurfaceDepth c
	offset a
	secondaryDepthRange d
	surfaceType e
	addSurfaceDepth ()Z c
	apply (Lnet/minecraft/world/level/levelgen/SurfaceRules$Context;)Lnet/minecraft/world/level/levelgen/SurfaceRules$Condition; a
	codec ()Lnet/minecraft/util/KeyDispatchDataCodec; a
	offset ()I b
	secondaryDepthRange ()I d
	surfaceType ()Lnet/minecraft/world/level/levelgen/placement/CaveSurface; e
net/minecraft/world/level/levelgen/SurfaceRules$SurfaceRule dib$u
net/minecraft/world/level/levelgen/SurfaceRules$Temperature dib$v
	$VALUES d
	CODEC c
	INSTANCE a
	$values ()[Lnet/minecraft/world/level/levelgen/SurfaceRules$Temperature; b
	apply (Lnet/minecraft/world/level/levelgen/SurfaceRules$Context;)Lnet/minecraft/world/level/levelgen/SurfaceRules$Condition; a
	codec ()Lnet/minecraft/util/KeyDispatchDataCodec; a
net/minecraft/world/level/levelgen/SurfaceRules$TestRule dib$w
	condition a
	followup b
	condition ()Lnet/minecraft/world/level/levelgen/SurfaceRules$Condition; a
	followup ()Lnet/minecraft/world/level/levelgen/SurfaceRules$SurfaceRule; b
net/minecraft/world/level/levelgen/SurfaceRules$TestRuleSource dib$x
	CODEC d
	ifTrue a
	thenRun c
	apply (Lnet/minecraft/world/level/levelgen/SurfaceRules$Context;)Lnet/minecraft/world/level/levelgen/SurfaceRules$SurfaceRule; a
	codec ()Lnet/minecraft/util/KeyDispatchDataCodec; a
	ifTrue ()Lnet/minecraft/world/level/levelgen/SurfaceRules$ConditionSource; b
	thenRun ()Lnet/minecraft/world/level/levelgen/SurfaceRules$RuleSource; c
net/minecraft/world/level/levelgen/SurfaceRules$VerticalGradientConditionSource dib$y
	CODEC e
	falseAtAndAbove d
	randomName a
	trueAtAndBelow c
	apply (Lnet/minecraft/world/level/levelgen/SurfaceRules$Context;)Lnet/minecraft/world/level/levelgen/SurfaceRules$Condition; a
	codec ()Lnet/minecraft/util/KeyDispatchDataCodec; a
	falseAtAndAbove ()Lnet/minecraft/world/level/levelgen/VerticalAnchor; d
	randomName ()Lnet/minecraft/resources/ResourceLocation; b
	trueAtAndBelow ()Lnet/minecraft/world/level/levelgen/VerticalAnchor; c
net/minecraft/world/level/levelgen/SurfaceRules$WaterConditionSource dib$z
	CODEC e
	addStoneDepth d
	offset a
	surfaceDepthMultiplier c
	addStoneDepth ()Z d
	apply (Lnet/minecraft/world/level/levelgen/SurfaceRules$Context;)Lnet/minecraft/world/level/levelgen/SurfaceRules$Condition; a
	codec ()Lnet/minecraft/util/KeyDispatchDataCodec; a
	offset ()I b
	surfaceDepthMultiplier ()I c
net/minecraft/world/level/levelgen/SurfaceRules$YConditionSource dib$aa
	CODEC e
	addStoneDepth d
	anchor a
	surfaceDepthMultiplier c
	addStoneDepth ()Z d
	anchor ()Lnet/minecraft/world/level/levelgen/VerticalAnchor; b
	apply (Lnet/minecraft/world/level/levelgen/SurfaceRules$Context;)Lnet/minecraft/world/level/levelgen/SurfaceRules$Condition; a
	codec ()Lnet/minecraft/util/KeyDispatchDataCodec; a
	surfaceDepthMultiplier ()I c
net/minecraft/world/level/levelgen/SurfaceSystem dic
	BROWN_TERRACOTTA e
	LIGHT_GRAY_TERRACOTTA g
	ORANGE_TERRACOTTA b
	PACKED_ICE h
	RED_TERRACOTTA f
	SNOW_BLOCK i
	TERRACOTTA c
	WHITE_TERRACOTTA a
	YELLOW_TERRACOTTA d
	badlandsPillarNoise n
	badlandsPillarRoofNoise o
	badlandsSurfaceNoise p
	clayBands l
	clayBandsOffsetNoise m
	defaultBlock j
	icebergPillarNoise q
	icebergPillarRoofNoise r
	icebergSurfaceNoise s
	noiseRandom t
	seaLevel k
	surfaceNoise u
	surfaceSecondaryNoise v
	buildSurface (Lnet/minecraft/world/level/levelgen/RandomState;Lnet/minecraft/world/level/biome/BiomeManager;Lnet/minecraft/core/Registry;ZLnet/minecraft/world/level/levelgen/WorldGenerationContext;Lnet/minecraft/world/level/chunk/ChunkAccess;Lnet/minecraft/world/level/levelgen/NoiseChunk;Lnet/minecraft/world/level/levelgen/SurfaceRules$RuleSource;)V a
	erodedBadlandsExtension (Lnet/minecraft/world/level/chunk/BlockColumn;IIILnet/minecraft/world/level/LevelHeightAccessor;)V a
	frozenOceanExtension (ILnet/minecraft/world/level/biome/Biome;Lnet/minecraft/world/level/chunk/BlockColumn;Lnet/minecraft/core/BlockPos$MutableBlockPos;III)V a
	generateBands (Lnet/minecraft/util/RandomSource;)[Lnet/minecraft/world/level/block/state/BlockState; a
	getBand (III)Lnet/minecraft/world/level/block/state/BlockState; a
	getSurfaceDepth (II)I a
	getSurfaceSecondary (II)D b
	isStone (Lnet/minecraft/world/level/block/state/BlockState;)Z a
	makeBands (Lnet/minecraft/util/RandomSource;[Lnet/minecraft/world/level/block/state/BlockState;ILnet/minecraft/world/level/block/state/BlockState;)V a
	topMaterial (Lnet/minecraft/world/level/levelgen/SurfaceRules$RuleSource;Lnet/minecraft/world/level/levelgen/carver/CarvingContext;Ljava/util/function/Function;Lnet/minecraft/world/level/chunk/ChunkAccess;Lnet/minecraft/world/level/levelgen/NoiseChunk;Lnet/minecraft/core/BlockPos;Z)Ljava/util/Optional; a
net/minecraft/world/level/levelgen/ThreadSafeLegacyRandomSource did
	INCREMENT g
	MODULUS_BITS d
	MODULUS_MASK e
	MULTIPLIER f
	gaussianSource i
	seed h
	fork ()Lnet/minecraft/util/RandomSource; d
	forkPositional ()Lnet/minecraft/world/level/levelgen/PositionalRandomFactory; e
	next (I)I c
	nextGaussian ()D k
	setSeed (J)V b
net/minecraft/world/level/levelgen/VerticalAnchor die
	BOTTOM b
	CODEC a
	TOP c
	aboveBottom (I)Lnet/minecraft/world/level/levelgen/VerticalAnchor; b
	absolute (I)Lnet/minecraft/world/level/levelgen/VerticalAnchor; a
	belowTop (I)Lnet/minecraft/world/level/levelgen/VerticalAnchor; c
	bottom ()Lnet/minecraft/world/level/levelgen/VerticalAnchor; a
	merge (Lcom/mojang/datafixers/util/Either;)Lnet/minecraft/world/level/levelgen/VerticalAnchor; a
	resolveY (Lnet/minecraft/world/level/levelgen/WorldGenerationContext;)I a
	split (Lnet/minecraft/world/level/levelgen/VerticalAnchor;)Lcom/mojang/datafixers/util/Either; a
	top ()Lnet/minecraft/world/level/levelgen/VerticalAnchor; b
net/minecraft/world/level/levelgen/VerticalAnchor$AboveBottom die$a
	CODEC d
	offset e
	offset ()I c
	resolveY (Lnet/minecraft/world/level/levelgen/WorldGenerationContext;)I a
net/minecraft/world/level/levelgen/VerticalAnchor$Absolute die$b
	CODEC d
	y e
	resolveY (Lnet/minecraft/world/level/levelgen/WorldGenerationContext;)I a
	y ()I c
net/minecraft/world/level/levelgen/VerticalAnchor$BelowTop die$c
	CODEC d
	offset e
	offset ()I c
	resolveY (Lnet/minecraft/world/level/levelgen/WorldGenerationContext;)I a
net/minecraft/world/level/levelgen/WorldDimensions dif
	BUILTIN_ORDER c
	CODEC a
	VANILLA_DIMENSION_COUNT d
	dimensions b
	bake (Lnet/minecraft/core/Registry;)Lnet/minecraft/world/level/levelgen/WorldDimensions$Complete; a
	checkStability (Lnet/minecraft/resources/ResourceKey;Lnet/minecraft/world/level/dimension/LevelStem;)Lcom/mojang/serialization/Lifecycle; a
	dimensions ()Lnet/minecraft/core/Registry; d
	get (Lnet/minecraft/resources/ResourceKey;)Ljava/util/Optional; a
	isDebug ()Z c
	isStableEnd (Lnet/minecraft/world/level/dimension/LevelStem;)Z c
	isStableNether (Lnet/minecraft/world/level/dimension/LevelStem;)Z b
	isStableOverworld (Lnet/minecraft/world/level/dimension/LevelStem;)Z a
	isVanillaLike (Lnet/minecraft/resources/ResourceKey;Lnet/minecraft/world/level/dimension/LevelStem;)Z b
	keysInOrder (Ljava/util/stream/Stream;)Ljava/util/stream/Stream; a
	levels ()Lcom/google/common/collect/ImmutableSet; b
	overworld ()Lnet/minecraft/world/level/chunk/ChunkGenerator; a
	replaceOverworldGenerator (Lnet/minecraft/core/RegistryAccess;Lnet/minecraft/world/level/chunk/ChunkGenerator;)Lnet/minecraft/world/level/levelgen/WorldDimensions; a
	specialWorldProperty (Lnet/minecraft/core/Registry;)Lnet/minecraft/world/level/storage/PrimaryLevelData$SpecialWorldProperty; b
	withOverworld (Lnet/minecraft/core/Registry;Lnet/minecraft/core/Holder;Lnet/minecraft/world/level/chunk/ChunkGenerator;)Lnet/minecraft/core/Registry; a
	withOverworld (Lnet/minecraft/core/Registry;Lnet/minecraft/core/Registry;Lnet/minecraft/world/level/chunk/ChunkGenerator;)Lnet/minecraft/core/Registry; a
net/minecraft/world/level/levelgen/WorldDimensions$Complete dif$b
	dimensions a
	specialWorldProperty b
	dimensions ()Lnet/minecraft/core/Registry; c
	dimensionsRegistryAccess ()Lnet/minecraft/core/RegistryAccess$Frozen; b
	lifecycle ()Lcom/mojang/serialization/Lifecycle; a
	specialWorldProperty ()Lnet/minecraft/world/level/storage/PrimaryLevelData$SpecialWorldProperty; d
net/minecraft/world/level/levelgen/WorldGenSettings dig
	CODEC a
	dimensions c
	options b
	dimensions ()Lnet/minecraft/world/level/levelgen/WorldDimensions; b
	encode (Lcom/mojang/serialization/DynamicOps;Lnet/minecraft/world/level/levelgen/WorldOptions;Lnet/minecraft/core/RegistryAccess;)Lcom/mojang/serialization/DataResult; a
	encode (Lcom/mojang/serialization/DynamicOps;Lnet/minecraft/world/level/levelgen/WorldOptions;Lnet/minecraft/world/level/levelgen/WorldDimensions;)Lcom/mojang/serialization/DataResult; a
	options ()Lnet/minecraft/world/level/levelgen/WorldOptions; a
net/minecraft/world/level/levelgen/WorldGenerationContext dih
	height b
	minY a
	getGenDepth ()I b
	getMinGenY ()I a
net/minecraft/world/level/levelgen/WorldOptions dii
	CODEC a
	DEMO_OPTIONS b
	generateBonusChest e
	generateStructures d
	legacyCustomOptions f
	seed c
	defaultWithRandomSeed ()Lnet/minecraft/world/level/levelgen/WorldOptions; a
	generateBonusChest ()Z d
	generateStructures ()Z c
	isOldCustomizedWorld ()Z e
	parseSeed (Ljava/lang/String;)Ljava/util/OptionalLong; a
	randomSeed ()J f
	seed ()J b
	withBonusChest (Z)Lnet/minecraft/world/level/levelgen/WorldOptions; a
	withSeed (Ljava/util/OptionalLong;)Lnet/minecraft/world/level/levelgen/WorldOptions; a
	withStructures (Z)Lnet/minecraft/world/level/levelgen/WorldOptions; b
net/minecraft/world/level/levelgen/WorldgenRandom dij
	count e
	randomSource d
	fork ()Lnet/minecraft/util/RandomSource; d
	forkPositional ()Lnet/minecraft/world/level/levelgen/PositionalRandomFactory; e
	getCount ()I l
	next (I)I c
	seedSlimeChunk (IIJJ)Lnet/minecraft/util/RandomSource; a
	setDecorationSeed (JII)J a
	setFeatureSeed (JII)V b
	setLargeFeatureSeed (JII)V c
	setLargeFeatureWithSalt (JIII)V a
	setSeed (J)V b
net/minecraft/world/level/levelgen/WorldgenRandom$Algorithm dij$a
	$VALUES d
	LEGACY a
	XOROSHIRO b
	constructor c
	$values ()[Lnet/minecraft/world/level/levelgen/WorldgenRandom$Algorithm; a
	newInstance (J)Lnet/minecraft/util/RandomSource; a
net/minecraft/world/level/levelgen/Xoroshiro128PlusPlus dik
	CODEC a
	seedHi c
	seedLo b
	nextLong ()J a
net/minecraft/world/level/levelgen/XoroshiroRandomSource dil
	CODEC b
	DOUBLE_UNIT d
	FLOAT_UNIT c
	gaussianSource f
	randomNumberGenerator e
	consumeCount (I)V b
	fork ()Lnet/minecraft/util/RandomSource; d
	forkPositional ()Lnet/minecraft/world/level/levelgen/PositionalRandomFactory; e
	nextBits (I)J c
	nextBoolean ()Z h
	nextDouble ()D j
	nextFloat ()F i
	nextGaussian ()D k
	nextInt ()I f
	nextInt (I)I a
	nextLong ()J g
	setSeed (J)V b
net/minecraft/world/level/levelgen/XoroshiroRandomSource$XoroshiroPositionalRandomFactory dil$a
	seedHi b
	seedLo a
	at (III)Lnet/minecraft/util/RandomSource; a
	fromHashOf (Ljava/lang/String;)Lnet/minecraft/util/RandomSource; a
	parityConfigString (Ljava/lang/StringBuilder;)V a
net/minecraft/world/level/levelgen/blending/Blender dim
	DENSITY_BLENDING_RANGE_CELLS e
	DENSITY_BLENDING_RANGE_CHUNKS f
	EMPTY a
	HEIGHT_BLENDING_RANGE_CELLS c
	HEIGHT_BLENDING_RANGE_CHUNKS d
	OLD_CHUNK_XZ_RADIUS g
	SHIFT_NOISE b
	densityBlendingData i
	heightAndBiomeBlendingData h
	addAroundOldChunksCarvingMaskFilter (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/chunk/ProtoChunk;)V a
	blendBiome (III)Lnet/minecraft/core/Holder; a
	blendDensity (Lnet/minecraft/world/level/levelgen/DensityFunction$FunctionContext;D)D a
	blendOffsetAndFactor (II)Lnet/minecraft/world/level/levelgen/blending/Blender$BlendingOutput; a
	distanceToCube (DDDDDD)D a
	empty ()Lnet/minecraft/world/level/levelgen/blending/Blender; a
	generateBorderTick (Lnet/minecraft/world/level/chunk/ChunkAccess;Lnet/minecraft/core/BlockPos;)V a
	generateBorderTicks (Lnet/minecraft/server/level/WorldGenRegion;Lnet/minecraft/world/level/chunk/ChunkAccess;)V a
	getBiomeResolver (Lnet/minecraft/world/level/biome/BiomeResolver;)Lnet/minecraft/world/level/biome/BiomeResolver; a
	getBlendingDataValue (IIILnet/minecraft/world/level/levelgen/blending/Blender$CellValueGetter;)D a
	getBlendingDataValue (Lnet/minecraft/world/level/levelgen/blending/Blender$CellValueGetter;IIIII)D a
	heightToOffset (D)D a
	makeOffsetOldChunkDistanceGetter (Lnet/minecraft/core/Direction8;Lnet/minecraft/world/level/levelgen/blending/BlendingData;)Lnet/minecraft/world/level/levelgen/blending/Blender$DistanceGetter; a
	makeOldChunkDistanceGetter (Lnet/minecraft/world/level/levelgen/blending/BlendingData;Ljava/util/Map;)Lnet/minecraft/world/level/levelgen/blending/Blender$DistanceGetter; a
	of (Lnet/minecraft/server/level/WorldGenRegion;)Lnet/minecraft/world/level/levelgen/blending/Blender; a
net/minecraft/world/level/levelgen/blending/Blender$BlendingOutput dim$a
	alpha a
	blendingOffset b
	alpha ()D a
	blendingOffset ()D b
net/minecraft/world/level/levelgen/blending/Blender$CellValueGetter dim$b
net/minecraft/world/level/levelgen/blending/Blender$DistanceGetter dim$c
net/minecraft/world/level/levelgen/blending/BlendingData din
	AIR_DENSITY h
	BLENDING_DENSITY_FACTOR f
	CELLS_PER_SECTION_Y i
	CELL_COLUMN_COUNT o
	CELL_COLUMN_INSIDE_COUNT m
	CELL_COLUMN_OUTSIDE_COUNT n
	CELL_HEIGHT b
	CELL_HORIZONTAL_MAX_INDEX_INSIDE k
	CELL_HORIZONTAL_MAX_INDEX_OUTSIDE l
	CELL_RATIO c
	CELL_WIDTH a
	CODEC e
	DOUBLE_ARRAY_CODEC v
	NO_VALUE d
	QUARTS_PER_SECTION j
	SOLID_DENSITY g
	SURFACE_BLOCKS q
	areaWithOldGeneration p
	biomes t
	densities u
	hasCalculatedData r
	heights s
	addValuesForColumn (ILnet/minecraft/world/level/chunk/ChunkAccess;II)V a
	calculateData (Lnet/minecraft/world/level/chunk/ChunkAccess;Ljava/util/Set;)V a
	cellCountPerColumn ()I b
	getAreaWithOldGeneration ()Lnet/minecraft/world/level/LevelHeightAccessor; a
	getBiomeColumn (Lnet/minecraft/world/level/chunk/ChunkAccess;II)Ljava/util/List; b
	getCellYIndex (I)I a
	getColumnMinY ()I d
	getDensity (III)D b
	getDensity ([DI)D a
	getDensityColumn (Lnet/minecraft/world/level/chunk/ChunkAccess;III)[D a
	getHeight (III)D a
	getHeightAtXZ (Lnet/minecraft/world/level/chunk/ChunkAccess;II)I a
	getInsideIndex (II)I a
	getMinY ()I e
	getOrUpdateBlendingData (Lnet/minecraft/server/level/WorldGenRegion;II)Lnet/minecraft/world/level/levelgen/blending/BlendingData; a
	getOutsideIndex (II)I b
	getX (I)I b
	getZ (I)I c
	isGround (Lnet/minecraft/world/level/chunk/ChunkAccess;Lnet/minecraft/core/BlockPos;)Z a
	iterateBiomes (IIILnet/minecraft/world/level/levelgen/blending/BlendingData$BiomeConsumer;)V a
	iterateDensities (IIIILnet/minecraft/world/level/levelgen/blending/BlendingData$DensityConsumer;)V a
	iterateHeights (IILnet/minecraft/world/level/levelgen/blending/BlendingData$HeightConsumer;)V a
	quartCountPerColumn ()I c
	read1 (Lnet/minecraft/world/level/chunk/ChunkAccess;Lnet/minecraft/core/BlockPos$MutableBlockPos;)D a
	read7 (Lnet/minecraft/world/level/chunk/ChunkAccess;Lnet/minecraft/core/BlockPos$MutableBlockPos;)D b
	sideByGenerationAge (Lnet/minecraft/world/level/WorldGenLevel;IIZ)Ljava/util/Set; a
	validateArraySize (Lnet/minecraft/world/level/levelgen/blending/BlendingData;)Lcom/mojang/serialization/DataResult; a
	zeroIfNegative (I)I d
net/minecraft/world/level/levelgen/blending/BlendingData$BiomeConsumer din$a
net/minecraft/world/level/levelgen/blending/BlendingData$DensityConsumer din$b
net/minecraft/world/level/levelgen/blending/BlendingData$HeightConsumer din$c
net/minecraft/world/level/levelgen/blockpredicates/AllOfPredicate dip
	CODEC a
	test (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/core/BlockPos;)Z a
	type ()Lnet/minecraft/world/level/levelgen/blockpredicates/BlockPredicateType; a
net/minecraft/world/level/levelgen/blockpredicates/AnyOfPredicate diq
	CODEC a
	test (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/core/BlockPos;)Z a
	type ()Lnet/minecraft/world/level/levelgen/blockpredicates/BlockPredicateType; a
net/minecraft/world/level/levelgen/blockpredicates/BlockPredicate dir
	CODEC b
	ONLY_IN_AIR_OR_WATER_PREDICATE d
	ONLY_IN_AIR_PREDICATE c
	allOf (Ljava/util/List;)Lnet/minecraft/world/level/levelgen/blockpredicates/BlockPredicate; a
	allOf (Lnet/minecraft/world/level/levelgen/blockpredicates/BlockPredicate;Lnet/minecraft/world/level/levelgen/blockpredicates/BlockPredicate;)Lnet/minecraft/world/level/levelgen/blockpredicates/BlockPredicate; a
	allOf ([Lnet/minecraft/world/level/levelgen/blockpredicates/BlockPredicate;)Lnet/minecraft/world/level/levelgen/blockpredicates/BlockPredicate; a
	alwaysTrue ()Lnet/minecraft/world/level/levelgen/blockpredicates/BlockPredicate; e
	anyOf (Ljava/util/List;)Lnet/minecraft/world/level/levelgen/blockpredicates/BlockPredicate; b
	anyOf (Lnet/minecraft/world/level/levelgen/blockpredicates/BlockPredicate;Lnet/minecraft/world/level/levelgen/blockpredicates/BlockPredicate;)Lnet/minecraft/world/level/levelgen/blockpredicates/BlockPredicate; b
	anyOf ([Lnet/minecraft/world/level/levelgen/blockpredicates/BlockPredicate;)Lnet/minecraft/world/level/levelgen/blockpredicates/BlockPredicate; b
	hasSturdyFace (Lnet/minecraft/core/Direction;)Lnet/minecraft/world/level/levelgen/blockpredicates/BlockPredicate; a
	hasSturdyFace (Lnet/minecraft/core/Vec3i;Lnet/minecraft/core/Direction;)Lnet/minecraft/world/level/levelgen/blockpredicates/BlockPredicate; a
	insideWorld (Lnet/minecraft/core/Vec3i;)Lnet/minecraft/world/level/levelgen/blockpredicates/BlockPredicate; d
	matchesBlocks (Ljava/util/List;)Lnet/minecraft/world/level/levelgen/blockpredicates/BlockPredicate; c
	matchesBlocks (Lnet/minecraft/core/Vec3i;Ljava/util/List;)Lnet/minecraft/world/level/levelgen/blockpredicates/BlockPredicate; a
	matchesBlocks (Lnet/minecraft/core/Vec3i;[Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/world/level/levelgen/blockpredicates/BlockPredicate; a
	matchesBlocks ([Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/world/level/levelgen/blockpredicates/BlockPredicate; a
	matchesFluids (Lnet/minecraft/core/Vec3i;Ljava/util/List;)Lnet/minecraft/world/level/levelgen/blockpredicates/BlockPredicate; b
	matchesFluids (Lnet/minecraft/core/Vec3i;[Lnet/minecraft/world/level/material/Fluid;)Lnet/minecraft/world/level/levelgen/blockpredicates/BlockPredicate; a
	matchesFluids ([Lnet/minecraft/world/level/material/Fluid;)Lnet/minecraft/world/level/levelgen/blockpredicates/BlockPredicate; a
	matchesTag (Lnet/minecraft/core/Vec3i;Lnet/minecraft/tags/TagKey;)Lnet/minecraft/world/level/levelgen/blockpredicates/BlockPredicate; a
	matchesTag (Lnet/minecraft/tags/TagKey;)Lnet/minecraft/world/level/levelgen/blockpredicates/BlockPredicate; a
	noFluid ()Lnet/minecraft/world/level/levelgen/blockpredicates/BlockPredicate; d
	noFluid (Lnet/minecraft/core/Vec3i;)Lnet/minecraft/world/level/levelgen/blockpredicates/BlockPredicate; c
	not (Lnet/minecraft/world/level/levelgen/blockpredicates/BlockPredicate;)Lnet/minecraft/world/level/levelgen/blockpredicates/BlockPredicate; a
	replaceable ()Lnet/minecraft/world/level/levelgen/blockpredicates/BlockPredicate; b
	replaceable (Lnet/minecraft/core/Vec3i;)Lnet/minecraft/world/level/levelgen/blockpredicates/BlockPredicate; a
	solid ()Lnet/minecraft/world/level/levelgen/blockpredicates/BlockPredicate; c
	solid (Lnet/minecraft/core/Vec3i;)Lnet/minecraft/world/level/levelgen/blockpredicates/BlockPredicate; b
	type ()Lnet/minecraft/world/level/levelgen/blockpredicates/BlockPredicateType; a
	wouldSurvive (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Vec3i;)Lnet/minecraft/world/level/levelgen/blockpredicates/BlockPredicate; a
net/minecraft/world/level/levelgen/blockpredicates/BlockPredicateType dis
	ALL_OF j
	ANY_OF i
	HAS_STURDY_FACE d
	INSIDE_WORLD_BOUNDS h
	MATCHING_BLOCKS a
	MATCHING_BLOCK_TAG b
	MATCHING_FLUIDS c
	NOT k
	REPLACEABLE f
	SOLID e
	TRUE l
	WOULD_SURVIVE g
	register (Ljava/lang/String;Lcom/mojang/serialization/Codec;)Lnet/minecraft/world/level/levelgen/blockpredicates/BlockPredicateType; a
net/minecraft/world/level/levelgen/blockpredicates/CombiningPredicate dit
	predicates e
	codec (Ljava/util/function/Function;)Lcom/mojang/serialization/Codec; a
net/minecraft/world/level/levelgen/blockpredicates/HasSturdyFacePredicate diu
	CODEC a
	direction f
	offset e
	test (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/core/BlockPos;)Z a
	type ()Lnet/minecraft/world/level/levelgen/blockpredicates/BlockPredicateType; a
net/minecraft/world/level/levelgen/blockpredicates/InsideWorldBoundsPredicate div
	CODEC a
	offset e
	test (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/core/BlockPos;)Z a
	type ()Lnet/minecraft/world/level/levelgen/blockpredicates/BlockPredicateType; a
net/minecraft/world/level/levelgen/blockpredicates/MatchingBlockTagPredicate diw
	CODEC e
	tag a
	test (Lnet/minecraft/world/level/block/state/BlockState;)Z a
	type ()Lnet/minecraft/world/level/levelgen/blockpredicates/BlockPredicateType; a
net/minecraft/world/level/levelgen/blockpredicates/MatchingBlocksPredicate dix
	CODEC a
	blocks e
	test (Lnet/minecraft/world/level/block/state/BlockState;)Z a
	type ()Lnet/minecraft/world/level/levelgen/blockpredicates/BlockPredicateType; a
net/minecraft/world/level/levelgen/blockpredicates/MatchingFluidsPredicate diy
	CODEC a
	fluids e
	test (Lnet/minecraft/world/level/block/state/BlockState;)Z a
	type ()Lnet/minecraft/world/level/levelgen/blockpredicates/BlockPredicateType; a
net/minecraft/world/level/levelgen/blockpredicates/NotPredicate diz
	CODEC a
	predicate e
	test (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/core/BlockPos;)Z a
	type ()Lnet/minecraft/world/level/levelgen/blockpredicates/BlockPredicateType; a
net/minecraft/world/level/levelgen/blockpredicates/ReplaceablePredicate dja
	CODEC a
	test (Lnet/minecraft/world/level/block/state/BlockState;)Z a
	type ()Lnet/minecraft/world/level/levelgen/blockpredicates/BlockPredicateType; a
net/minecraft/world/level/levelgen/blockpredicates/SolidPredicate djb
	CODEC a
	test (Lnet/minecraft/world/level/block/state/BlockState;)Z a
	type ()Lnet/minecraft/world/level/levelgen/blockpredicates/BlockPredicateType; a
net/minecraft/world/level/levelgen/blockpredicates/StateTestingPredicate djc
	offset f
	stateTestingCodec (Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/Products$P1; a
	test (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/core/BlockPos;)Z a
	test (Lnet/minecraft/world/level/block/state/BlockState;)Z a
net/minecraft/world/level/levelgen/blockpredicates/TrueBlockPredicate djd
	CODEC e
	INSTANCE a
	test (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/core/BlockPos;)Z a
	type ()Lnet/minecraft/world/level/levelgen/blockpredicates/BlockPredicateType; a
net/minecraft/world/level/levelgen/blockpredicates/WouldSurvivePredicate dje
	CODEC a
	offset e
	state f
	test (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/core/BlockPos;)Z a
	type ()Lnet/minecraft/world/level/levelgen/blockpredicates/BlockPredicateType; a
net/minecraft/world/level/levelgen/carver/CanyonCarverConfiguration djg
	CODEC a
	shape c
	verticalRotation b
net/minecraft/world/level/levelgen/carver/CanyonCarverConfiguration$CanyonShapeConfiguration djg$a
	CODEC a
	distanceFactor b
	horizontalRadiusFactor e
	thickness c
	verticalRadiusCenterFactor g
	verticalRadiusDefaultFactor f
	widthSmoothness d
net/minecraft/world/level/levelgen/carver/CanyonWorldCarver djh
	carve (Lnet/minecraft/world/level/levelgen/carver/CarvingContext;Lnet/minecraft/world/level/levelgen/carver/CanyonCarverConfiguration;Lnet/minecraft/world/level/chunk/ChunkAccess;Ljava/util/function/Function;Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/levelgen/Aquifer;Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/world/level/chunk/CarvingMask;)Z a
	carve (Lnet/minecraft/world/level/levelgen/carver/CarvingContext;Lnet/minecraft/world/level/levelgen/carver/CarverConfiguration;Lnet/minecraft/world/level/chunk/ChunkAccess;Ljava/util/function/Function;Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/levelgen/Aquifer;Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/world/level/chunk/CarvingMask;)Z a
	doCarve (Lnet/minecraft/world/level/levelgen/carver/CarvingContext;Lnet/minecraft/world/level/levelgen/carver/CanyonCarverConfiguration;Lnet/minecraft/world/level/chunk/ChunkAccess;Ljava/util/function/Function;JLnet/minecraft/world/level/levelgen/Aquifer;DDDFFFIIDLnet/minecraft/world/level/chunk/CarvingMask;)V a
	initWidthFactors (Lnet/minecraft/world/level/levelgen/carver/CarvingContext;Lnet/minecraft/world/level/levelgen/carver/CanyonCarverConfiguration;Lnet/minecraft/util/RandomSource;)[F a
	isStartChunk (Lnet/minecraft/world/level/levelgen/carver/CanyonCarverConfiguration;Lnet/minecraft/util/RandomSource;)Z a
	isStartChunk (Lnet/minecraft/world/level/levelgen/carver/CarverConfiguration;Lnet/minecraft/util/RandomSource;)Z a
	shouldSkip (Lnet/minecraft/world/level/levelgen/carver/CarvingContext;[FDDDI)Z a
	updateVerticalRadius (Lnet/minecraft/world/level/levelgen/carver/CanyonCarverConfiguration;Lnet/minecraft/util/RandomSource;DFF)D a
net/minecraft/world/level/levelgen/carver/CarverConfiguration dji
	CODEC d
	debugSettings h
	lavaLevel g
	replaceable i
	y e
	yScale f
net/minecraft/world/level/levelgen/carver/CarverDebugSettings djj
	CODEC b
	DEFAULT a
	airState d
	barrierState g
	debugMode c
	lavaState f
	waterState e
	getAirState ()Lnet/minecraft/world/level/block/state/BlockState; b
	getBarrierState ()Lnet/minecraft/world/level/block/state/BlockState; e
	getLavaState ()Lnet/minecraft/world/level/block/state/BlockState; d
	getWaterState ()Lnet/minecraft/world/level/block/state/BlockState; c
	isDebugMode ()Z a
	of (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/levelgen/carver/CarverDebugSettings; a
	of (ZLnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/levelgen/carver/CarverDebugSettings; a
	of (ZLnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/levelgen/carver/CarverDebugSettings; a
net/minecraft/world/level/levelgen/carver/CarvingContext djk
	noiseChunk b
	randomState c
	registryAccess a
	surfaceRule d
	randomState ()Lnet/minecraft/world/level/levelgen/RandomState; d
	registryAccess ()Lnet/minecraft/core/RegistryAccess; c
	topMaterial (Ljava/util/function/Function;Lnet/minecraft/world/level/chunk/ChunkAccess;Lnet/minecraft/core/BlockPos;Z)Ljava/util/Optional; a
net/minecraft/world/level/levelgen/carver/CaveCarverConfiguration djl
	CODEC a
	floorLevel j
	horizontalRadiusMultiplier b
	verticalRadiusMultiplier c
net/minecraft/world/level/levelgen/carver/CaveWorldCarver djm
	carve (Lnet/minecraft/world/level/levelgen/carver/CarvingContext;Lnet/minecraft/world/level/levelgen/carver/CarverConfiguration;Lnet/minecraft/world/level/chunk/ChunkAccess;Ljava/util/function/Function;Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/levelgen/Aquifer;Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/world/level/chunk/CarvingMask;)Z a
	carve (Lnet/minecraft/world/level/levelgen/carver/CarvingContext;Lnet/minecraft/world/level/levelgen/carver/CaveCarverConfiguration;Lnet/minecraft/world/level/chunk/ChunkAccess;Ljava/util/function/Function;Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/levelgen/Aquifer;Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/world/level/chunk/CarvingMask;)Z a
	createRoom (Lnet/minecraft/world/level/levelgen/carver/CarvingContext;Lnet/minecraft/world/level/levelgen/carver/CaveCarverConfiguration;Lnet/minecraft/world/level/chunk/ChunkAccess;Ljava/util/function/Function;Lnet/minecraft/world/level/levelgen/Aquifer;DDDFDLnet/minecraft/world/level/chunk/CarvingMask;Lnet/minecraft/world/level/levelgen/carver/WorldCarver$CarveSkipChecker;)V a
	createTunnel (Lnet/minecraft/world/level/levelgen/carver/CarvingContext;Lnet/minecraft/world/level/levelgen/carver/CaveCarverConfiguration;Lnet/minecraft/world/level/chunk/ChunkAccess;Ljava/util/function/Function;JLnet/minecraft/world/level/levelgen/Aquifer;DDDDDFFFIIDLnet/minecraft/world/level/chunk/CarvingMask;Lnet/minecraft/world/level/levelgen/carver/WorldCarver$CarveSkipChecker;)V a
	getCaveBound ()I a
	getThickness (Lnet/minecraft/util/RandomSource;)F a
	getYScale ()D b
	isStartChunk (Lnet/minecraft/world/level/levelgen/carver/CarverConfiguration;Lnet/minecraft/util/RandomSource;)Z a
	isStartChunk (Lnet/minecraft/world/level/levelgen/carver/CaveCarverConfiguration;Lnet/minecraft/util/RandomSource;)Z a
	shouldSkip (DDDD)Z a
net/minecraft/world/level/levelgen/carver/ConfiguredWorldCarver djn
	CODEC b
	DIRECT_CODEC a
	LIST_CODEC c
	config e
	worldCarver d
	carve (Lnet/minecraft/world/level/levelgen/carver/CarvingContext;Lnet/minecraft/world/level/chunk/ChunkAccess;Ljava/util/function/Function;Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/levelgen/Aquifer;Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/world/level/chunk/CarvingMask;)Z a
	config ()Lnet/minecraft/world/level/levelgen/carver/CarverConfiguration; b
	isStartChunk (Lnet/minecraft/util/RandomSource;)Z a
	worldCarver ()Lnet/minecraft/world/level/levelgen/carver/WorldCarver; a
net/minecraft/world/level/levelgen/carver/NetherWorldCarver djo
	carveBlock (Lnet/minecraft/world/level/levelgen/carver/CarvingContext;Lnet/minecraft/world/level/levelgen/carver/CarverConfiguration;Lnet/minecraft/world/level/chunk/ChunkAccess;Ljava/util/function/Function;Lnet/minecraft/world/level/chunk/CarvingMask;Lnet/minecraft/core/BlockPos$MutableBlockPos;Lnet/minecraft/core/BlockPos$MutableBlockPos;Lnet/minecraft/world/level/levelgen/Aquifer;Lorg/apache/commons/lang3/mutable/MutableBoolean;)Z a
	carveBlock (Lnet/minecraft/world/level/levelgen/carver/CarvingContext;Lnet/minecraft/world/level/levelgen/carver/CaveCarverConfiguration;Lnet/minecraft/world/level/chunk/ChunkAccess;Ljava/util/function/Function;Lnet/minecraft/world/level/chunk/CarvingMask;Lnet/minecraft/core/BlockPos$MutableBlockPos;Lnet/minecraft/core/BlockPos$MutableBlockPos;Lnet/minecraft/world/level/levelgen/Aquifer;Lorg/apache/commons/lang3/mutable/MutableBoolean;)Z a
	getCaveBound ()I a
	getThickness (Lnet/minecraft/util/RandomSource;)F a
	getYScale ()D b
net/minecraft/world/level/levelgen/carver/WorldCarver djp
	AIR d
	CANYON c
	CAVE a
	CAVE_AIR e
	LAVA g
	NETHER_CAVE b
	WATER f
	configuredCodec i
	liquids h
	canReach (Lnet/minecraft/world/level/ChunkPos;DDIIF)Z a
	canReplaceBlock (Lnet/minecraft/world/level/levelgen/carver/CarverConfiguration;Lnet/minecraft/world/level/block/state/BlockState;)Z a
	carve (Lnet/minecraft/world/level/levelgen/carver/CarvingContext;Lnet/minecraft/world/level/levelgen/carver/CarverConfiguration;Lnet/minecraft/world/level/chunk/ChunkAccess;Ljava/util/function/Function;Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/levelgen/Aquifer;Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/world/level/chunk/CarvingMask;)Z a
	carveBlock (Lnet/minecraft/world/level/levelgen/carver/CarvingContext;Lnet/minecraft/world/level/levelgen/carver/CarverConfiguration;Lnet/minecraft/world/level/chunk/ChunkAccess;Ljava/util/function/Function;Lnet/minecraft/world/level/chunk/CarvingMask;Lnet/minecraft/core/BlockPos$MutableBlockPos;Lnet/minecraft/core/BlockPos$MutableBlockPos;Lnet/minecraft/world/level/levelgen/Aquifer;Lorg/apache/commons/lang3/mutable/MutableBoolean;)Z a
	carveEllipsoid (Lnet/minecraft/world/level/levelgen/carver/CarvingContext;Lnet/minecraft/world/level/levelgen/carver/CarverConfiguration;Lnet/minecraft/world/level/chunk/ChunkAccess;Ljava/util/function/Function;Lnet/minecraft/world/level/levelgen/Aquifer;DDDDDLnet/minecraft/world/level/chunk/CarvingMask;Lnet/minecraft/world/level/levelgen/carver/WorldCarver$CarveSkipChecker;)Z a
	configured (Lnet/minecraft/world/level/levelgen/carver/CarverConfiguration;)Lnet/minecraft/world/level/levelgen/carver/ConfiguredWorldCarver; a
	configuredCodec ()Lcom/mojang/serialization/Codec; c
	getCarveState (Lnet/minecraft/world/level/levelgen/carver/CarvingContext;Lnet/minecraft/world/level/levelgen/carver/CarverConfiguration;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/levelgen/Aquifer;)Lnet/minecraft/world/level/block/state/BlockState; a
	getDebugState (Lnet/minecraft/world/level/levelgen/carver/CarverConfiguration;Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/state/BlockState; b
	getRange ()I d
	isDebugEnabled (Lnet/minecraft/world/level/levelgen/carver/CarverConfiguration;)Z b
	isStartChunk (Lnet/minecraft/world/level/levelgen/carver/CarverConfiguration;Lnet/minecraft/util/RandomSource;)Z a
	register (Ljava/lang/String;Lnet/minecraft/world/level/levelgen/carver/WorldCarver;)Lnet/minecraft/world/level/levelgen/carver/WorldCarver; a
net/minecraft/world/level/levelgen/carver/WorldCarver$CarveSkipChecker djp$a
net/minecraft/world/level/levelgen/feature/AbstractHugeMushroomFeature djr
	getTreeHeight (Lnet/minecraft/util/RandomSource;)I a
	getTreeRadiusForHeight (IIII)I a
	isValidPosition (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;ILnet/minecraft/core/BlockPos$MutableBlockPos;Lnet/minecraft/world/level/levelgen/feature/configurations/HugeMushroomFeatureConfiguration;)Z a
	makeCap (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPos;ILnet/minecraft/core/BlockPos$MutableBlockPos;Lnet/minecraft/world/level/levelgen/feature/configurations/HugeMushroomFeatureConfiguration;)V a
	place (Lnet/minecraft/world/level/levelgen/feature/FeaturePlaceContext;)Z a
	placeTrunk (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/levelgen/feature/configurations/HugeMushroomFeatureConfiguration;ILnet/minecraft/core/BlockPos$MutableBlockPos;)V a
net/minecraft/world/level/levelgen/feature/BambooFeature djs
	BAMBOO_FINAL_LARGE b
	BAMBOO_TOP_LARGE c
	BAMBOO_TOP_SMALL d
	BAMBOO_TRUNK a
	place (Lnet/minecraft/world/level/levelgen/feature/FeaturePlaceContext;)Z a
net/minecraft/world/level/levelgen/feature/BasaltColumnsFeature djt
	CANNOT_PLACE_ON a
	CLUSTERED_REACH b
	CLUSTERED_SIZE c
	UNCLUSTERED_REACH d
	UNCLUSTERED_SIZE an
	canPlaceAt (Lnet/minecraft/world/level/LevelAccessor;ILnet/minecraft/core/BlockPos$MutableBlockPos;)Z a
	findAir (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos$MutableBlockPos;I)Lnet/minecraft/core/BlockPos; a
	findSurface (Lnet/minecraft/world/level/LevelAccessor;ILnet/minecraft/core/BlockPos$MutableBlockPos;I)Lnet/minecraft/core/BlockPos; a
	isAirOrLavaOcean (Lnet/minecraft/world/level/LevelAccessor;ILnet/minecraft/core/BlockPos;)Z a
	place (Lnet/minecraft/world/level/levelgen/feature/FeaturePlaceContext;)Z a
	placeColumn (Lnet/minecraft/world/level/LevelAccessor;ILnet/minecraft/core/BlockPos;II)Z a
net/minecraft/world/level/levelgen/feature/BasaltPillarFeature dju
	place (Lnet/minecraft/world/level/levelgen/feature/FeaturePlaceContext;)Z a
	placeBaseHangOff (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPos;)V a
	placeHangOff (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPos;)Z b
net/minecraft/world/level/levelgen/feature/BlockBlobFeature djv
	place (Lnet/minecraft/world/level/levelgen/feature/FeaturePlaceContext;)Z a
net/minecraft/world/level/levelgen/feature/BlockColumnFeature djw
	place (Lnet/minecraft/world/level/levelgen/feature/FeaturePlaceContext;)Z a
	truncate ([IIIZ)V a
net/minecraft/world/level/levelgen/feature/BlockPileFeature djx
	mayPlaceOn (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/util/RandomSource;)Z a
	place (Lnet/minecraft/world/level/levelgen/feature/FeaturePlaceContext;)Z a
	tryPlaceBlock (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/levelgen/feature/configurations/BlockPileConfiguration;)V a
net/minecraft/world/level/levelgen/feature/BlueIceFeature djy
	place (Lnet/minecraft/world/level/levelgen/feature/FeaturePlaceContext;)Z a
net/minecraft/world/level/levelgen/feature/BonusChestFeature djz
	place (Lnet/minecraft/world/level/levelgen/feature/FeaturePlaceContext;)Z a
net/minecraft/world/level/levelgen/feature/ChorusPlantFeature dka
	place (Lnet/minecraft/world/level/levelgen/feature/FeaturePlaceContext;)Z a
net/minecraft/world/level/levelgen/feature/ConfiguredFeature dkb
	CODEC b
	DIRECT_CODEC a
	LIST_CODEC c
	config e
	feature d
	config ()Lnet/minecraft/world/level/levelgen/feature/configurations/FeatureConfiguration; c
	feature ()Lnet/minecraft/world/level/levelgen/feature/Feature; b
	getFeatures ()Ljava/util/stream/Stream; a
	place (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPos;)Z a
net/minecraft/world/level/levelgen/feature/CoralClawFeature dkc
	placeFeature (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Z a
net/minecraft/world/level/levelgen/feature/CoralFeature dkd
	place (Lnet/minecraft/world/level/levelgen/feature/FeaturePlaceContext;)Z a
	placeCoralBlock (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Z b
	placeFeature (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Z a
net/minecraft/world/level/levelgen/feature/CoralMushroomFeature dke
	placeFeature (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Z a
net/minecraft/world/level/levelgen/feature/CoralTreeFeature dkf
	placeFeature (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Z a
net/minecraft/world/level/levelgen/feature/DeltaFeature dkg
	CANNOT_REPLACE a
	DIRECTIONS b
	RIM_SPAWN_CHANCE c
	isClear (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/levelgen/feature/configurations/DeltaFeatureConfiguration;)Z a
	place (Lnet/minecraft/world/level/levelgen/feature/FeaturePlaceContext;)Z a
net/minecraft/world/level/levelgen/feature/DesertWellFeature dkh
	IS_SAND a
	sand b
	sandSlab c
	sandstone d
	water an
	place (Lnet/minecraft/world/level/levelgen/feature/FeaturePlaceContext;)Z a
	placeSusSand (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/core/BlockPos;)V b
net/minecraft/world/level/levelgen/feature/DiskFeature dki
	place (Lnet/minecraft/world/level/levelgen/feature/FeaturePlaceContext;)Z a
	placeColumn (Lnet/minecraft/world/level/levelgen/feature/configurations/DiskConfiguration;Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/util/RandomSource;IILnet/minecraft/core/BlockPos$MutableBlockPos;)Z a
net/minecraft/world/level/levelgen/feature/DripstoneClusterFeature dkj
	canBeAdjacentToWater (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;)Z a
	canPlacePool (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/core/BlockPos;)Z b
	getChanceOfStalagmiteOrStalactite (IIIILnet/minecraft/world/level/levelgen/feature/configurations/DripstoneClusterConfiguration;)D a
	getDripstoneHeight (Lnet/minecraft/util/RandomSource;IIFILnet/minecraft/world/level/levelgen/feature/configurations/DripstoneClusterConfiguration;)I a
	isLava (Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;)Z a
	place (Lnet/minecraft/world/level/levelgen/feature/FeaturePlaceContext;)Z a
	placeColumn (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPos;IIFDIFLnet/minecraft/world/level/levelgen/feature/configurations/DripstoneClusterConfiguration;)V a
	randomBetweenBiased (Lnet/minecraft/util/RandomSource;FFFF)F a
	replaceBlocksWithDripstoneBlocks (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/core/BlockPos;ILnet/minecraft/core/Direction;)V a
net/minecraft/world/level/levelgen/feature/DripstoneUtils dkk
	buildBaseToTipColumn (Lnet/minecraft/core/Direction;IZLjava/util/function/Consumer;)V a
	createPointedDripstone (Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/properties/DripstoneThickness;)Lnet/minecraft/world/level/block/state/BlockState; a
	getDripstoneHeight (DDDD)D a
	growPointedDripstone (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;IZ)V a
	isCircleMostlyEmbeddedInStone (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/core/BlockPos;I)Z a
	isDripstoneBase (Lnet/minecraft/world/level/block/state/BlockState;)Z b
	isDripstoneBaseOrLava (Lnet/minecraft/world/level/block/state/BlockState;)Z a
	isEmptyOrWater (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;)Z a
	isEmptyOrWater (Lnet/minecraft/world/level/block/state/BlockState;)Z c
	isEmptyOrWaterOrLava (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;)Z b
	isEmptyOrWaterOrLava (Lnet/minecraft/world/level/block/state/BlockState;)Z e
	isNeitherEmptyNorWater (Lnet/minecraft/world/level/block/state/BlockState;)Z d
	placeDripstoneBlockIfPossible (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;)Z c
net/minecraft/world/level/levelgen/feature/EndGatewayFeature dkl
	place (Lnet/minecraft/world/level/levelgen/feature/FeaturePlaceContext;)Z a
net/minecraft/world/level/levelgen/feature/EndIslandFeature dkm
	place (Lnet/minecraft/world/level/levelgen/feature/FeaturePlaceContext;)Z a
net/minecraft/world/level/levelgen/feature/EndPodiumFeature dkn
	CORNER_ROUNDING d
	END_PODIUM_LOCATION an
	PODIUM_PILLAR_HEIGHT b
	PODIUM_RADIUS a
	RIM_RADIUS c
	active ao
	getLocation (Lnet/minecraft/core/BlockPos;)Lnet/minecraft/core/BlockPos; a
	place (Lnet/minecraft/world/level/levelgen/feature/FeaturePlaceContext;)Z a
net/minecraft/world/level/levelgen/feature/Feature dko
	BAMBOO T
	BASALT_COLUMNS Y
	BASALT_PILLAR ad
	BLOCK_COLUMN w
	BLOCK_PILE j
	BLUE_ICE D
	BONUS_CHEST ac
	CHORUS_PLANT l
	CORAL_CLAW Q
	CORAL_MUSHROOM P
	CORAL_TREE O
	DELTA_FEATURE Z
	DESERT_WELL o
	DISK G
	DRIPSTONE_CLUSTER aj
	END_GATEWAY L
	END_ISLAND K
	END_SPIKE J
	FILL_LAYER ab
	FLOWER g
	FOREST_ROCK F
	FOSSIL p
	FREEZE_TOP_LAYER u
	GEODE ai
	GLOWSTONE_BLOB t
	HUGE_BROWN_MUSHROOM r
	HUGE_FUNGUS U
	HUGE_RED_MUSHROOM q
	ICEBERG E
	ICE_SPIKE s
	KELP N
	LAKE H
	LARGE_DRIPSTONE ak
	MONSTER_ROOM C
	MULTIFACE_GROWTH A
	NETHER_FOREST_VEGETATION V
	NO_BONEMEAL_FLOWER h
	NO_OP e
	ORE I
	POINTED_DRIPSTONE al
	RANDOM_BOOLEAN_SELECTOR ah
	RANDOM_PATCH i
	RANDOM_SELECTOR af
	REPLACE_BLOBS aa
	REPLACE_SINGLE_BLOCK m
	ROOT_SYSTEM z
	SCATTERED_ORE ae
	SCULK_PATCH am
	SEAGRASS M
	SEA_PICKLE R
	SIMPLE_BLOCK S
	SIMPLE_RANDOM_SELECTOR ag
	SPRING k
	TREE f
	TWISTING_VINES X
	UNDERWATER_MAGMA B
	VEGETATION_PATCH x
	VINES v
	VOID_START_PLATFORM n
	WATERLOGGED_VEGETATION_PATCH y
	WEEPING_VINES W
	configuredCodec a
	checkNeighbors (Ljava/util/function/Function;Lnet/minecraft/core/BlockPos;Ljava/util/function/Predicate;)Z a
	configuredCodec ()Lcom/mojang/serialization/Codec; a
	isAdjacentToAir (Ljava/util/function/Function;Lnet/minecraft/core/BlockPos;)Z a
	isDirt (Lnet/minecraft/world/level/block/state/BlockState;)Z b
	isGrassOrDirt (Lnet/minecraft/world/level/LevelSimulatedReader;Lnet/minecraft/core/BlockPos;)Z a
	isReplaceable (Lnet/minecraft/tags/TagKey;)Ljava/util/function/Predicate; a
	isStone (Lnet/minecraft/world/level/block/state/BlockState;)Z a
	markAboveForPostProcessing (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/core/BlockPos;)V a
	place (Lnet/minecraft/world/level/levelgen/feature/FeaturePlaceContext;)Z a
	place (Lnet/minecraft/world/level/levelgen/feature/configurations/FeatureConfiguration;Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPos;)Z a
	register (Ljava/lang/String;Lnet/minecraft/world/level/levelgen/feature/Feature;)Lnet/minecraft/world/level/levelgen/feature/Feature; a
	safeSetBlock (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Ljava/util/function/Predicate;)V a
	setBlock (Lnet/minecraft/world/level/LevelWriter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V a
net/minecraft/world/level/levelgen/feature/FeatureCountTracker dkp
	LOGGER a
	data b
	chunkDecorated (Lnet/minecraft/server/level/ServerLevel;)V a
	clearCounts ()V a
	featurePlaced (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/level/levelgen/feature/ConfiguredFeature;Ljava/util/Optional;)V a
	logCounts ()V b
net/minecraft/world/level/levelgen/feature/FeatureCountTracker$FeatureData dkp$a
	feature a
	topFeature b
	feature ()Lnet/minecraft/world/level/levelgen/feature/ConfiguredFeature; a
	topFeature ()Ljava/util/Optional; b
net/minecraft/world/level/levelgen/feature/FeatureCountTracker$LevelData dkp$b
	chunksWithFeatures b
	featureData a
	chunksWithFeatures ()Lorg/apache/commons/lang3/mutable/MutableInt; b
	featureData ()Lit/unimi/dsi/fastutil/objects/Object2IntMap; a
net/minecraft/world/level/levelgen/feature/FeaturePlaceContext dkq
	chunkGenerator c
	config f
	level b
	origin e
	random d
	topFeature a
	chunkGenerator ()Lnet/minecraft/world/level/chunk/ChunkGenerator; c
	config ()Lnet/minecraft/world/level/levelgen/feature/configurations/FeatureConfiguration; f
	level ()Lnet/minecraft/world/level/WorldGenLevel; b
	origin ()Lnet/minecraft/core/BlockPos; e
	random ()Lnet/minecraft/util/RandomSource; d
	topFeature ()Ljava/util/Optional; a
net/minecraft/world/level/levelgen/feature/FillLayerFeature dkr
	place (Lnet/minecraft/world/level/levelgen/feature/FeaturePlaceContext;)Z a
net/minecraft/world/level/levelgen/feature/FossilFeature dks
	countEmptyCorners (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;)I a
	place (Lnet/minecraft/world/level/levelgen/feature/FeaturePlaceContext;)Z a
net/minecraft/world/level/levelgen/feature/FossilFeatureConfiguration dkt
	CODEC a
	fossilProcessors d
	fossilStructures b
	maxEmptyCornersAllowed f
	overlayProcessors e
	overlayStructures c
net/minecraft/world/level/levelgen/feature/GeodeFeature dku
	DIRECTIONS a
	place (Lnet/minecraft/world/level/levelgen/feature/FeaturePlaceContext;)Z a
net/minecraft/world/level/levelgen/feature/GlowstoneFeature dkv
	place (Lnet/minecraft/world/level/levelgen/feature/FeaturePlaceContext;)Z a
net/minecraft/world/level/levelgen/feature/HugeBrownMushroomFeature dkw
	getTreeRadiusForHeight (IIII)I a
	makeCap (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPos;ILnet/minecraft/core/BlockPos$MutableBlockPos;Lnet/minecraft/world/level/levelgen/feature/configurations/HugeMushroomFeatureConfiguration;)V a
net/minecraft/world/level/levelgen/feature/HugeFungusConfiguration dkx
	CODEC a
	decorState e
	hatState d
	planted g
	replaceableBlocks f
	stemState c
	validBaseState b
net/minecraft/world/level/levelgen/feature/HugeFungusFeature dky
	HUGE_PROBABILITY a
	isReplaceable (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/levelgen/feature/HugeFungusConfiguration;Z)Z a
	place (Lnet/minecraft/world/level/levelgen/feature/FeaturePlaceContext;)Z a
	placeHat (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/levelgen/feature/HugeFungusConfiguration;Lnet/minecraft/core/BlockPos;IZ)V b
	placeHatBlock (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/levelgen/feature/HugeFungusConfiguration;Lnet/minecraft/core/BlockPos$MutableBlockPos;FFF)V a
	placeHatDropBlock (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Z)V a
	placeStem (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/levelgen/feature/HugeFungusConfiguration;Lnet/minecraft/core/BlockPos;IZ)V a
	tryPlaceWeepingVines (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/util/RandomSource;)V a
net/minecraft/world/level/levelgen/feature/HugeRedMushroomFeature dkz
	getTreeRadiusForHeight (IIII)I a
	makeCap (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPos;ILnet/minecraft/core/BlockPos$MutableBlockPos;Lnet/minecraft/world/level/levelgen/feature/configurations/HugeMushroomFeatureConfiguration;)V a
net/minecraft/world/level/levelgen/feature/IceSpikeFeature dla
	place (Lnet/minecraft/world/level/levelgen/feature/FeaturePlaceContext;)Z a
net/minecraft/world/level/levelgen/feature/IcebergFeature dlb
	belowIsAir (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Z a
	carve (IILnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/LevelAccessor;ZDLnet/minecraft/core/BlockPos;II)V a
	generateCutOut (Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/LevelAccessor;IILnet/minecraft/core/BlockPos;ZIDI)V a
	generateIcebergBlock (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPos;IIIIIIZIDZLnet/minecraft/world/level/block/state/BlockState;)V a
	getEllipseC (III)I a
	heightDependentRadiusEllipse (III)I b
	heightDependentRadiusRound (Lnet/minecraft/util/RandomSource;III)I a
	heightDependentRadiusSteep (Lnet/minecraft/util/RandomSource;III)I b
	isIcebergState (Lnet/minecraft/world/level/block/state/BlockState;)Z c
	place (Lnet/minecraft/world/level/levelgen/feature/FeaturePlaceContext;)Z a
	removeFloatingSnowLayer (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;)V a
	setIcebergBlock (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/util/RandomSource;IIZZLnet/minecraft/world/level/block/state/BlockState;)V a
	signedDistanceCircle (IILnet/minecraft/core/BlockPos;ILnet/minecraft/util/RandomSource;)D a
	signedDistanceEllipse (IILnet/minecraft/core/BlockPos;IID)D a
	smooth (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;IIZI)V a
net/minecraft/world/level/levelgen/feature/KelpFeature dlc
	place (Lnet/minecraft/world/level/levelgen/feature/FeaturePlaceContext;)Z a
net/minecraft/world/level/levelgen/feature/LakeFeature dld
	AIR a
	canReplaceBlock (Lnet/minecraft/world/level/block/state/BlockState;)Z c
	place (Lnet/minecraft/world/level/levelgen/feature/FeaturePlaceContext;)Z a
net/minecraft/world/level/levelgen/feature/LakeFeature$Configuration dld$a
	CODEC a
	barrier c
	fluid b
	barrier ()Lnet/minecraft/world/level/levelgen/feature/stateproviders/BlockStateProvider; b
	fluid ()Lnet/minecraft/world/level/levelgen/feature/stateproviders/BlockStateProvider; a
net/minecraft/world/level/levelgen/feature/LargeDripstoneFeature dle
	makeDripstone (Lnet/minecraft/core/BlockPos;ZLnet/minecraft/util/RandomSource;ILnet/minecraft/util/valueproviders/FloatProvider;Lnet/minecraft/util/valueproviders/FloatProvider;)Lnet/minecraft/world/level/levelgen/feature/LargeDripstoneFeature$LargeDripstone; a
	place (Lnet/minecraft/world/level/levelgen/feature/FeaturePlaceContext;)Z a
	placeDebugMarkers (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/levelgen/Column$Range;Lnet/minecraft/world/level/levelgen/feature/LargeDripstoneFeature$WindOffsetter;)V a
net/minecraft/world/level/levelgen/feature/LargeDripstoneFeature$LargeDripstone dle$a
	bluntness d
	pointingUp b
	radius c
	root a
	scale e
	getHeight ()I a
	getHeightAtRadius (F)I a
	getMaxY ()I c
	getMinY ()I b
	isSuitableForWind (Lnet/minecraft/world/level/levelgen/feature/configurations/LargeDripstoneConfiguration;)Z a
	moveBackUntilBaseIsInsideStoneAndShrinkRadiusIfNecessary (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/levelgen/feature/LargeDripstoneFeature$WindOffsetter;)Z a
	placeBlocks (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/levelgen/feature/LargeDripstoneFeature$WindOffsetter;)V a
net/minecraft/world/level/levelgen/feature/LargeDripstoneFeature$WindOffsetter dle$b
	originY a
	windSpeed b
	noWind ()Lnet/minecraft/world/level/levelgen/feature/LargeDripstoneFeature$WindOffsetter; a
	offset (Lnet/minecraft/core/BlockPos;)Lnet/minecraft/core/BlockPos; a
net/minecraft/world/level/levelgen/feature/MonsterRoomFeature dlf
	AIR c
	LOGGER a
	MOBS b
	place (Lnet/minecraft/world/level/levelgen/feature/FeaturePlaceContext;)Z a
	randomEntityId (Lnet/minecraft/util/RandomSource;)Lnet/minecraft/world/entity/EntityType; a
net/minecraft/world/level/levelgen/feature/MultifaceGrowthFeature dlg
	isAirOrWater (Lnet/minecraft/world/level/block/state/BlockState;)Z c
	place (Lnet/minecraft/world/level/levelgen/feature/FeaturePlaceContext;)Z a
	placeGrowthIfPossible (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/levelgen/feature/configurations/MultifaceGrowthConfiguration;Lnet/minecraft/util/RandomSource;Ljava/util/List;)Z a
net/minecraft/world/level/levelgen/feature/NetherForestVegetationFeature dlh
	place (Lnet/minecraft/world/level/levelgen/feature/FeaturePlaceContext;)Z a
net/minecraft/world/level/levelgen/feature/NoOpFeature dli
	place (Lnet/minecraft/world/level/levelgen/feature/FeaturePlaceContext;)Z a
net/minecraft/world/level/levelgen/feature/OreFeature dlj
	canPlaceOre (Lnet/minecraft/world/level/block/state/BlockState;Ljava/util/function/Function;Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/levelgen/feature/configurations/OreConfiguration;Lnet/minecraft/world/level/levelgen/feature/configurations/OreConfiguration$TargetBlockState;Lnet/minecraft/core/BlockPos$MutableBlockPos;)Z a
	doPlace (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/levelgen/feature/configurations/OreConfiguration;DDDDDDIIIII)Z a
	place (Lnet/minecraft/world/level/levelgen/feature/FeaturePlaceContext;)Z a
	shouldSkipAirCheck (Lnet/minecraft/util/RandomSource;F)Z a
net/minecraft/world/level/levelgen/feature/PointedDripstoneFeature dlk
	createPatchOfDripstoneBlocks (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/levelgen/feature/configurations/PointedDripstoneConfiguration;)V a
	getTipDirection (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/util/RandomSource;)Ljava/util/Optional; a
	place (Lnet/minecraft/world/level/levelgen/feature/FeaturePlaceContext;)Z a
net/minecraft/world/level/levelgen/feature/RandomBooleanSelectorFeature dll
	place (Lnet/minecraft/world/level/levelgen/feature/FeaturePlaceContext;)Z a
net/minecraft/world/level/levelgen/feature/RandomPatchFeature dlm
	place (Lnet/minecraft/world/level/levelgen/feature/FeaturePlaceContext;)Z a
net/minecraft/world/level/levelgen/feature/RandomSelectorFeature dln
	place (Lnet/minecraft/world/level/levelgen/feature/FeaturePlaceContext;)Z a
net/minecraft/world/level/levelgen/feature/ReplaceBlobsFeature dlo
	findTarget (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos$MutableBlockPos;Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/core/BlockPos; a
	place (Lnet/minecraft/world/level/levelgen/feature/FeaturePlaceContext;)Z a
net/minecraft/world/level/levelgen/feature/ReplaceBlockFeature dlp
	place (Lnet/minecraft/world/level/levelgen/feature/FeaturePlaceContext;)Z a
net/minecraft/world/level/levelgen/feature/RootSystemFeature dlq
	isAllowedTreeSpace (Lnet/minecraft/world/level/block/state/BlockState;II)Z a
	place (Lnet/minecraft/world/level/levelgen/feature/FeaturePlaceContext;)Z a
	placeDirt (Lnet/minecraft/core/BlockPos;ILnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/levelgen/feature/configurations/RootSystemConfiguration;Lnet/minecraft/util/RandomSource;)V a
	placeDirtAndTree (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/world/level/levelgen/feature/configurations/RootSystemConfiguration;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPos$MutableBlockPos;Lnet/minecraft/core/BlockPos;)Z a
	placeRootedDirt (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/levelgen/feature/configurations/RootSystemConfiguration;Lnet/minecraft/util/RandomSource;IILnet/minecraft/core/BlockPos$MutableBlockPos;)V a
	placeRoots (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/levelgen/feature/configurations/RootSystemConfiguration;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos$MutableBlockPos;)V a
	spaceForTree (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/levelgen/feature/configurations/RootSystemConfiguration;Lnet/minecraft/core/BlockPos;)Z a
net/minecraft/world/level/levelgen/feature/ScatteredOreFeature dlr
	MAX_DIST_FROM_ORIGIN a
	getRandomPlacementInOneAxisRelativeToOrigin (Lnet/minecraft/util/RandomSource;I)I a
	offsetTargetPos (Lnet/minecraft/core/BlockPos$MutableBlockPos;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPos;I)V a
	place (Lnet/minecraft/world/level/levelgen/feature/FeaturePlaceContext;)Z a
net/minecraft/world/level/levelgen/feature/SculkPatchFeature dls
	canSpreadFrom (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;)Z a
	place (Lnet/minecraft/world/level/levelgen/feature/FeaturePlaceContext;)Z a
net/minecraft/world/level/levelgen/feature/SeaPickleFeature dlt
	place (Lnet/minecraft/world/level/levelgen/feature/FeaturePlaceContext;)Z a
net/minecraft/world/level/levelgen/feature/SeagrassFeature dlu
	place (Lnet/minecraft/world/level/levelgen/feature/FeaturePlaceContext;)Z a
net/minecraft/world/level/levelgen/feature/SimpleBlockFeature dlv
	place (Lnet/minecraft/world/level/levelgen/feature/FeaturePlaceContext;)Z a
net/minecraft/world/level/levelgen/feature/SimpleRandomSelectorFeature dlw
	place (Lnet/minecraft/world/level/levelgen/feature/FeaturePlaceContext;)Z a
net/minecraft/world/level/levelgen/feature/SnowAndFreezeFeature dlx
	place (Lnet/minecraft/world/level/levelgen/feature/FeaturePlaceContext;)Z a
net/minecraft/world/level/levelgen/feature/SpikeFeature dly
	NUMBER_OF_SPIKES a
	SPIKE_CACHE c
	SPIKE_DISTANCE b
	getSpikesForLevel (Lnet/minecraft/world/level/WorldGenLevel;)Ljava/util/List; a
	place (Lnet/minecraft/world/level/levelgen/feature/FeaturePlaceContext;)Z a
	placeSpike (Lnet/minecraft/world/level/ServerLevelAccessor;Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/levelgen/feature/configurations/SpikeConfiguration;Lnet/minecraft/world/level/levelgen/feature/SpikeFeature$EndSpike;)V a
net/minecraft/world/level/levelgen/feature/SpikeFeature$EndSpike dly$a
	CODEC a
	centerX b
	centerZ c
	guarded f
	height e
	radius d
	topBoundingBox g
	getCenterX ()I a
	getCenterZ ()I b
	getHeight ()I d
	getRadius ()I c
	getTopBoundingBox ()Lnet/minecraft/world/phys/AABB; f
	isCenterWithinChunk (Lnet/minecraft/core/BlockPos;)Z a
	isGuarded ()Z e
net/minecraft/world/level/levelgen/feature/SpikeFeature$SpikeCacheLoader dly$b
	load (Ljava/lang/Long;)Ljava/util/List; a
net/minecraft/world/level/levelgen/feature/SpringFeature dlz
	place (Lnet/minecraft/world/level/levelgen/feature/FeaturePlaceContext;)Z a
net/minecraft/world/level/levelgen/feature/TreeFeature dma
	BLOCK_UPDATE_FLAGS a
	doPlace (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPos;Ljava/util/function/BiConsumer;Ljava/util/function/BiConsumer;Lnet/minecraft/world/level/levelgen/feature/foliageplacers/FoliagePlacer$FoliageSetter;Lnet/minecraft/world/level/levelgen/feature/configurations/TreeConfiguration;)Z a
	getMaxFreeTreeHeight (Lnet/minecraft/world/level/LevelSimulatedReader;ILnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/levelgen/feature/configurations/TreeConfiguration;)I a
	isAirOrLeaves (Lnet/minecraft/world/level/LevelSimulatedReader;Lnet/minecraft/core/BlockPos;)Z b
	isVine (Lnet/minecraft/world/level/LevelSimulatedReader;Lnet/minecraft/core/BlockPos;)Z d
	place (Lnet/minecraft/world/level/levelgen/feature/FeaturePlaceContext;)Z a
	setBlock (Lnet/minecraft/world/level/LevelWriter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V a
	setBlockKnownShape (Lnet/minecraft/world/level/LevelWriter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V b
	updateLeaves (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Ljava/util/Set;Ljava/util/Set;Ljava/util/Set;)Lnet/minecraft/world/phys/shapes/DiscreteVoxelShape; a
	validTreePos (Lnet/minecraft/world/level/LevelSimulatedReader;Lnet/minecraft/core/BlockPos;)Z c
net/minecraft/world/level/levelgen/feature/TwistingVinesFeature dmb
	findFirstAirBlockAboveGround (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos$MutableBlockPos;)Z a
	isInvalidPlacementLocation (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;)Z a
	place (Lnet/minecraft/world/level/levelgen/feature/FeaturePlaceContext;)Z a
	placeWeepingVinesColumn (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPos$MutableBlockPos;III)V a
net/minecraft/world/level/levelgen/feature/UnderwaterMagmaFeature dmc
	getFloorY (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/levelgen/feature/configurations/UnderwaterMagmaConfiguration;)Ljava/util/OptionalInt; a
	isValidPlacement (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/core/BlockPos;)Z b
	isWaterOrAir (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;)Z a
	place (Lnet/minecraft/world/level/levelgen/feature/FeaturePlaceContext;)Z a
net/minecraft/world/level/levelgen/feature/VegetationPatchFeature dmd
	distributeVegetation (Lnet/minecraft/world/level/levelgen/feature/FeaturePlaceContext;Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/levelgen/feature/configurations/VegetationPatchConfiguration;Lnet/minecraft/util/RandomSource;Ljava/util/Set;II)V a
	place (Lnet/minecraft/world/level/levelgen/feature/FeaturePlaceContext;)Z a
	placeGround (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/levelgen/feature/configurations/VegetationPatchConfiguration;Ljava/util/function/Predicate;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPos$MutableBlockPos;I)Z a
	placeGroundPatch (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/levelgen/feature/configurations/VegetationPatchConfiguration;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPos;Ljava/util/function/Predicate;II)Ljava/util/Set; a
	placeVegetation (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/levelgen/feature/configurations/VegetationPatchConfiguration;Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPos;)Z a
net/minecraft/world/level/levelgen/feature/VinesFeature dme
	place (Lnet/minecraft/world/level/levelgen/feature/FeaturePlaceContext;)Z a
net/minecraft/world/level/levelgen/feature/VoidStartPlatformFeature dmf
	PLATFORM_OFFSET a
	PLATFORM_ORIGIN_CHUNK b
	PLATFORM_RADIUS c
	PLATFORM_RADIUS_CHUNKS d
	checkerboardDistance (IIII)I a
	place (Lnet/minecraft/world/level/levelgen/feature/FeaturePlaceContext;)Z a
net/minecraft/world/level/levelgen/feature/WaterloggedVegetationPatchFeature dmg
	isExposed (Lnet/minecraft/world/level/WorldGenLevel;Ljava/util/Set;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos$MutableBlockPos;)Z a
	isExposedDirection (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos$MutableBlockPos;Lnet/minecraft/core/Direction;)Z a
	placeGroundPatch (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/levelgen/feature/configurations/VegetationPatchConfiguration;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPos;Ljava/util/function/Predicate;II)Ljava/util/Set; a
	placeVegetation (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/levelgen/feature/configurations/VegetationPatchConfiguration;Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPos;)Z a
net/minecraft/world/level/levelgen/feature/WeepingVinesFeature dmh
	DIRECTIONS a
	place (Lnet/minecraft/world/level/levelgen/feature/FeaturePlaceContext;)Z a
	placeRoofNetherWart (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPos;)V a
	placeRoofWeepingVines (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPos;)V b
	placeWeepingVinesColumn (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPos$MutableBlockPos;III)V a
net/minecraft/world/level/levelgen/feature/WeightedPlacedFeature dmi
	CODEC a
	chance c
	feature b
	place (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPos;)Z a
net/minecraft/world/level/levelgen/feature/configurations/BlockColumnConfiguration dmj
	CODEC a
	allowedPlacement d
	direction c
	layers b
	prioritizeTip e
	allowedPlacement ()Lnet/minecraft/world/level/levelgen/blockpredicates/BlockPredicate; c
	direction ()Lnet/minecraft/core/Direction; b
	layer (Lnet/minecraft/util/valueproviders/IntProvider;Lnet/minecraft/world/level/levelgen/feature/stateproviders/BlockStateProvider;)Lnet/minecraft/world/level/levelgen/feature/configurations/BlockColumnConfiguration$Layer; a
	layers ()Ljava/util/List; a
	prioritizeTip ()Z d
	simple (Lnet/minecraft/util/valueproviders/IntProvider;Lnet/minecraft/world/level/levelgen/feature/stateproviders/BlockStateProvider;)Lnet/minecraft/world/level/levelgen/feature/configurations/BlockColumnConfiguration; b
net/minecraft/world/level/levelgen/feature/configurations/BlockColumnConfiguration$Layer dmj$a
	CODEC a
	height b
	state c
	height ()Lnet/minecraft/util/valueproviders/IntProvider; a
	state ()Lnet/minecraft/world/level/levelgen/feature/stateproviders/BlockStateProvider; b
net/minecraft/world/level/levelgen/feature/configurations/BlockPileConfiguration dmk
	CODEC a
	stateProvider b
net/minecraft/world/level/levelgen/feature/configurations/BlockStateConfiguration dml
	CODEC a
	state b
net/minecraft/world/level/levelgen/feature/configurations/ColumnFeatureConfiguration dmm
	CODEC a
	height c
	reach b
	height ()Lnet/minecraft/util/valueproviders/IntProvider; b
	reach ()Lnet/minecraft/util/valueproviders/IntProvider; a
net/minecraft/world/level/levelgen/feature/configurations/CountConfiguration dmn
	CODEC a
	count b
	count ()Lnet/minecraft/util/valueproviders/IntProvider; a
net/minecraft/world/level/levelgen/feature/configurations/DeltaFeatureConfiguration dmo
	CODEC a
	contents b
	rim c
	rimSize e
	size d
	contents ()Lnet/minecraft/world/level/block/state/BlockState; a
	rim ()Lnet/minecraft/world/level/block/state/BlockState; b
	rimSize ()Lnet/minecraft/util/valueproviders/IntProvider; d
	size ()Lnet/minecraft/util/valueproviders/IntProvider; c
net/minecraft/world/level/levelgen/feature/configurations/DiskConfiguration dmp
	CODEC a
	halfHeight e
	radius d
	stateProvider b
	target c
	halfHeight ()I d
	radius ()Lnet/minecraft/util/valueproviders/IntProvider; c
	stateProvider ()Lnet/minecraft/world/level/levelgen/feature/stateproviders/RuleBasedBlockStateProvider; a
	target ()Lnet/minecraft/world/level/levelgen/blockpredicates/BlockPredicate; b
net/minecraft/world/level/levelgen/feature/configurations/DripstoneClusterConfiguration dmq
	CODEC a
	chanceOfDripstoneColumnAtMaxDistanceFromCenter j
	density h
	dripstoneBlockLayerThickness g
	floorToCeilingSearchRange b
	height c
	heightDeviation f
	maxDistanceFromCenterAffectingHeightBias l
	maxDistanceFromEdgeAffectingChanceOfDripstoneColumn k
	maxStalagmiteStalactiteHeightDiff e
	radius d
	wetness i
net/minecraft/world/level/levelgen/feature/configurations/EndGatewayConfiguration dmr
	CODEC a
	exact c
	exit b
	delayedExitSearch ()Lnet/minecraft/world/level/levelgen/feature/configurations/EndGatewayConfiguration; a
	getExit ()Ljava/util/Optional; b
	isExitExact ()Z c
	knownExit (Lnet/minecraft/core/BlockPos;Z)Lnet/minecraft/world/level/levelgen/feature/configurations/EndGatewayConfiguration; a
net/minecraft/world/level/levelgen/feature/configurations/FeatureConfiguration dms
	NONE m
	getFeatures ()Ljava/util/stream/Stream; e
net/minecraft/world/level/levelgen/feature/configurations/GeodeConfiguration dmt
	CHANCE_RANGE a
	CODEC b
	distributionPoints j
	geodeBlockSettings c
	geodeCrackSettings e
	geodeLayerSettings d
	invalidBlocksThreshold p
	maxGenOffset n
	minGenOffset l
	noiseMultiplier o
	outerWallDistance i
	placementsRequireLayer0Alternate h
	pointOffset k
	useAlternateLayer0Chance g
	usePotentialPlacementsChance f
net/minecraft/world/level/levelgen/feature/configurations/HugeMushroomFeatureConfiguration dmu
	CODEC a
	capProvider b
	foliageRadius d
	stemProvider c
net/minecraft/world/level/levelgen/feature/configurations/LargeDripstoneConfiguration dmv
	CODEC a
	columnRadius c
	floorToCeilingSearchRange b
	heightScale d
	maxColumnRadiusToCaveHeightRatio e
	minBluntnessForWind j
	minRadiusForWind i
	stalactiteBluntness f
	stalagmiteBluntness g
	windSpeed h
net/minecraft/world/level/levelgen/feature/configurations/LayerConfiguration dmw
	CODEC a
	height b
	state c
net/minecraft/world/level/levelgen/feature/configurations/MultifaceGrowthConfiguration dmx
	CODEC a
	canBePlacedOn h
	canPlaceOnCeiling e
	canPlaceOnFloor d
	canPlaceOnWall f
	chanceOfSpreading g
	placeBlock b
	searchRange c
	validDirections i
	apply (Lnet/minecraft/world/level/block/Block;)Lcom/mojang/serialization/DataResult; a
	getShuffledDirections (Lnet/minecraft/util/RandomSource;)Ljava/util/List; a
	getShuffledDirectionsExcept (Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/Direction;)Ljava/util/List; a
net/minecraft/world/level/levelgen/feature/configurations/NetherForestVegetationConfig dmy
	CODEC c
	spreadHeight e
	spreadWidth d
net/minecraft/world/level/levelgen/feature/configurations/NoneFeatureConfiguration dmz
	CODEC a
	INSTANCE b
net/minecraft/world/level/levelgen/feature/configurations/OreConfiguration dna
	CODEC a
	discardChanceOnAirExposure d
	size c
	targetStates b
	target (Lnet/minecraft/world/level/levelgen/structure/templatesystem/RuleTest;Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/levelgen/feature/configurations/OreConfiguration$TargetBlockState; a
net/minecraft/world/level/levelgen/feature/configurations/OreConfiguration$TargetBlockState dna$a
	CODEC a
	state c
	target b
net/minecraft/world/level/levelgen/feature/configurations/PointedDripstoneConfiguration dnb
	CODEC a
	chanceOfDirectionalSpread c
	chanceOfSpreadRadius2 d
	chanceOfSpreadRadius3 e
	chanceOfTallerDripstone b
net/minecraft/world/level/levelgen/feature/configurations/ProbabilityFeatureConfiguration dnc
	CODEC k
	probability l
net/minecraft/world/level/levelgen/feature/configurations/RandomBooleanFeatureConfiguration dnd
	CODEC a
	featureFalse c
	featureTrue b
	getFeatures ()Ljava/util/stream/Stream; e
net/minecraft/world/level/levelgen/feature/configurations/RandomFeatureConfiguration dne
	CODEC a
	defaultFeature c
	features b
	getFeatures ()Ljava/util/stream/Stream; e
net/minecraft/world/level/levelgen/feature/configurations/RandomPatchConfiguration dnf
	CODEC a
	feature e
	tries b
	xzSpread c
	ySpread d
	feature ()Lnet/minecraft/core/Holder; d
	tries ()I a
	xzSpread ()I b
	ySpread ()I c
net/minecraft/world/level/levelgen/feature/configurations/ReplaceBlockConfiguration dng
	CODEC a
	targetStates b
net/minecraft/world/level/levelgen/feature/configurations/ReplaceSphereConfiguration dnh
	CODEC a
	radius d
	replaceState c
	targetState b
	radius ()Lnet/minecraft/util/valueproviders/IntProvider; a
net/minecraft/world/level/levelgen/feature/configurations/RootSystemConfiguration dni
	CODEC a
	allowedTreePosition o
	allowedVerticalWaterForTree n
	hangingRootPlacementAttempts l
	hangingRootRadius i
	hangingRootStateProvider k
	hangingRootsVerticalSpan j
	requiredVerticalSpaceForTree c
	rootColumnMaxHeight h
	rootPlacementAttempts g
	rootRadius d
	rootReplaceable e
	rootStateProvider f
	treeFeature b
net/minecraft/world/level/levelgen/feature/configurations/SculkPatchConfiguration dnj
	CODEC a
	amountPerCharge c
	catalystChance h
	chargeCount b
	extraRareGrowths g
	growthRounds e
	spreadAttempts d
	spreadRounds f
	amountPerCharge ()I b
	catalystChance ()F h
	chargeCount ()I a
	extraRareGrowths ()Lnet/minecraft/util/valueproviders/IntProvider; g
	growthRounds ()I d
	spreadAttempts ()I c
	spreadRounds ()I f
net/minecraft/world/level/levelgen/feature/configurations/SimpleBlockConfiguration dnk
	CODEC a
	toPlace b
	toPlace ()Lnet/minecraft/world/level/levelgen/feature/stateproviders/BlockStateProvider; a
net/minecraft/world/level/levelgen/feature/configurations/SimpleRandomFeatureConfiguration dnl
	CODEC a
	features b
	getFeatures ()Ljava/util/stream/Stream; e
net/minecraft/world/level/levelgen/feature/configurations/SpikeConfiguration dnm
	CODEC a
	crystalBeamTarget d
	crystalInvulnerable b
	spikes c
	getCrystalBeamTarget ()Lnet/minecraft/core/BlockPos; c
	getSpikes ()Ljava/util/List; b
	isCrystalInvulnerable ()Z a
net/minecraft/world/level/levelgen/feature/configurations/SpringConfiguration dnn
	CODEC a
	holeCount e
	requiresBlockBelow c
	rockCount d
	state b
	validBlocks f
net/minecraft/world/level/levelgen/feature/configurations/TreeConfiguration dno
	CODEC a
	decorators i
	dirtProvider c
	foliagePlacer f
	foliageProvider e
	forceDirt k
	ignoreVines j
	minimumSize h
	rootPlacer g
	trunkPlacer d
	trunkProvider b
net/minecraft/world/level/levelgen/feature/configurations/TreeConfiguration$TreeConfigurationBuilder dno$a
	decorators h
	dirtProvider f
	foliagePlacer d
	foliageProvider b
	forceDirt j
	ignoreVines i
	minimumSize g
	rootPlacer e
	trunkPlacer c
	trunkProvider a
	build ()Lnet/minecraft/world/level/levelgen/feature/configurations/TreeConfiguration; c
	decorators (Ljava/util/List;)Lnet/minecraft/world/level/levelgen/feature/configurations/TreeConfiguration$TreeConfigurationBuilder; a
	dirt (Lnet/minecraft/world/level/levelgen/feature/stateproviders/BlockStateProvider;)Lnet/minecraft/world/level/levelgen/feature/configurations/TreeConfiguration$TreeConfigurationBuilder; a
	forceDirt ()Lnet/minecraft/world/level/levelgen/feature/configurations/TreeConfiguration$TreeConfigurationBuilder; b
	ignoreVines ()Lnet/minecraft/world/level/levelgen/feature/configurations/TreeConfiguration$TreeConfigurationBuilder; a
net/minecraft/world/level/levelgen/feature/configurations/TwistingVinesConfig dnp
	CODEC a
	maxHeight d
	spreadHeight c
	spreadWidth b
	maxHeight ()I c
	spreadHeight ()I b
	spreadWidth ()I a
net/minecraft/world/level/levelgen/feature/configurations/UnderwaterMagmaConfiguration dnq
	CODEC a
	floorSearchRange b
	placementProbabilityPerValidPosition d
	placementRadiusAroundFloor c
net/minecraft/world/level/levelgen/feature/configurations/VegetationPatchConfiguration dnr
	CODEC a
	depth f
	extraBottomBlockChance g
	extraEdgeColumnChance k
	groundState c
	replaceable b
	surface e
	vegetationChance i
	vegetationFeature d
	verticalRange h
	xzRadius j
net/minecraft/world/level/levelgen/feature/featuresize/FeatureSize dnt
	CODEC a
	MAX_WIDTH b
	minClippedHeight c
	getSizeAtHeight (II)I a
	minClippedHeight ()Ljava/util/OptionalInt; c
	minClippedHeightCodec ()Lcom/mojang/serialization/codecs/RecordCodecBuilder; a
	type ()Lnet/minecraft/world/level/levelgen/feature/featuresize/FeatureSizeType; b
net/minecraft/world/level/levelgen/feature/featuresize/FeatureSizeType dnu
	THREE_LAYERS_FEATURE_SIZE b
	TWO_LAYERS_FEATURE_SIZE a
	codec c
	codec ()Lcom/mojang/serialization/Codec; a
	register (Ljava/lang/String;Lcom/mojang/serialization/Codec;)Lnet/minecraft/world/level/levelgen/feature/featuresize/FeatureSizeType; a
net/minecraft/world/level/levelgen/feature/featuresize/ThreeLayersFeatureSize dnv
	CODEC d
	limit e
	lowerSize g
	middleSize h
	upperLimit f
	upperSize i
	getSizeAtHeight (II)I a
	type ()Lnet/minecraft/world/level/levelgen/feature/featuresize/FeatureSizeType; b
net/minecraft/world/level/levelgen/feature/featuresize/TwoLayersFeatureSize dnw
	CODEC d
	limit e
	lowerSize f
	upperSize g
	getSizeAtHeight (II)I a
	type ()Lnet/minecraft/world/level/levelgen/feature/featuresize/FeatureSizeType; b
net/minecraft/world/level/levelgen/feature/foliageplacers/AcaciaFoliagePlacer dny
	CODEC a
	createFoliage (Lnet/minecraft/world/level/LevelSimulatedReader;Lnet/minecraft/world/level/levelgen/feature/foliageplacers/FoliagePlacer$FoliageSetter;Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/levelgen/feature/configurations/TreeConfiguration;ILnet/minecraft/world/level/levelgen/feature/foliageplacers/FoliagePlacer$FoliageAttachment;III)V a
	foliageHeight (Lnet/minecraft/util/RandomSource;ILnet/minecraft/world/level/levelgen/feature/configurations/TreeConfiguration;)I a
	shouldSkipLocation (Lnet/minecraft/util/RandomSource;IIIIZ)Z a
	type ()Lnet/minecraft/world/level/levelgen/feature/foliageplacers/FoliagePlacerType; a
net/minecraft/world/level/levelgen/feature/foliageplacers/BlobFoliagePlacer dnz
	CODEC a
	height b
	blobParts (Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/Products$P3; a
	createFoliage (Lnet/minecraft/world/level/LevelSimulatedReader;Lnet/minecraft/world/level/levelgen/feature/foliageplacers/FoliagePlacer$FoliageSetter;Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/levelgen/feature/configurations/TreeConfiguration;ILnet/minecraft/world/level/levelgen/feature/foliageplacers/FoliagePlacer$FoliageAttachment;III)V a
	foliageHeight (Lnet/minecraft/util/RandomSource;ILnet/minecraft/world/level/levelgen/feature/configurations/TreeConfiguration;)I a
	shouldSkipLocation (Lnet/minecraft/util/RandomSource;IIIIZ)Z a
	type ()Lnet/minecraft/world/level/levelgen/feature/foliageplacers/FoliagePlacerType; a
net/minecraft/world/level/levelgen/feature/foliageplacers/BushFoliagePlacer doa
	CODEC c
	createFoliage (Lnet/minecraft/world/level/LevelSimulatedReader;Lnet/minecraft/world/level/levelgen/feature/foliageplacers/FoliagePlacer$FoliageSetter;Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/levelgen/feature/configurations/TreeConfiguration;ILnet/minecraft/world/level/levelgen/feature/foliageplacers/FoliagePlacer$FoliageAttachment;III)V a
	shouldSkipLocation (Lnet/minecraft/util/RandomSource;IIIIZ)Z a
	type ()Lnet/minecraft/world/level/levelgen/feature/foliageplacers/FoliagePlacerType; a
net/minecraft/world/level/levelgen/feature/foliageplacers/CherryFoliagePlacer dob
	CODEC a
	cornerHoleChance g
	hangingLeavesChance h
	hangingLeavesExtensionChance i
	height b
	wideBottomLayerHoleChance c
	createFoliage (Lnet/minecraft/world/level/LevelSimulatedReader;Lnet/minecraft/world/level/levelgen/feature/foliageplacers/FoliagePlacer$FoliageSetter;Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/levelgen/feature/configurations/TreeConfiguration;ILnet/minecraft/world/level/levelgen/feature/foliageplacers/FoliagePlacer$FoliageAttachment;III)V a
	foliageHeight (Lnet/minecraft/util/RandomSource;ILnet/minecraft/world/level/levelgen/feature/configurations/TreeConfiguration;)I a
	shouldSkipLocation (Lnet/minecraft/util/RandomSource;IIIIZ)Z a
	type ()Lnet/minecraft/world/level/levelgen/feature/foliageplacers/FoliagePlacerType; a
net/minecraft/world/level/levelgen/feature/foliageplacers/DarkOakFoliagePlacer doc
	CODEC a
	createFoliage (Lnet/minecraft/world/level/LevelSimulatedReader;Lnet/minecraft/world/level/levelgen/feature/foliageplacers/FoliagePlacer$FoliageSetter;Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/levelgen/feature/configurations/TreeConfiguration;ILnet/minecraft/world/level/levelgen/feature/foliageplacers/FoliagePlacer$FoliageAttachment;III)V a
	foliageHeight (Lnet/minecraft/util/RandomSource;ILnet/minecraft/world/level/levelgen/feature/configurations/TreeConfiguration;)I a
	shouldSkipLocation (Lnet/minecraft/util/RandomSource;IIIIZ)Z a
	shouldSkipLocationSigned (Lnet/minecraft/util/RandomSource;IIIIZ)Z b
	type ()Lnet/minecraft/world/level/levelgen/feature/foliageplacers/FoliagePlacerType; a
net/minecraft/world/level/levelgen/feature/foliageplacers/FancyFoliagePlacer dod
	CODEC c
	createFoliage (Lnet/minecraft/world/level/LevelSimulatedReader;Lnet/minecraft/world/level/levelgen/feature/foliageplacers/FoliagePlacer$FoliageSetter;Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/levelgen/feature/configurations/TreeConfiguration;ILnet/minecraft/world/level/levelgen/feature/foliageplacers/FoliagePlacer$FoliageAttachment;III)V a
	shouldSkipLocation (Lnet/minecraft/util/RandomSource;IIIIZ)Z a
	type ()Lnet/minecraft/world/level/levelgen/feature/foliageplacers/FoliagePlacerType; a
net/minecraft/world/level/levelgen/feature/foliageplacers/FoliagePlacer doe
	CODEC d
	offset f
	radius e
	createFoliage (Lnet/minecraft/world/level/LevelSimulatedReader;Lnet/minecraft/world/level/levelgen/feature/foliageplacers/FoliagePlacer$FoliageSetter;Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/levelgen/feature/configurations/TreeConfiguration;ILnet/minecraft/world/level/levelgen/feature/foliageplacers/FoliagePlacer$FoliageAttachment;II)V a
	createFoliage (Lnet/minecraft/world/level/LevelSimulatedReader;Lnet/minecraft/world/level/levelgen/feature/foliageplacers/FoliagePlacer$FoliageSetter;Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/levelgen/feature/configurations/TreeConfiguration;ILnet/minecraft/world/level/levelgen/feature/foliageplacers/FoliagePlacer$FoliageAttachment;III)V a
	foliageHeight (Lnet/minecraft/util/RandomSource;ILnet/minecraft/world/level/levelgen/feature/configurations/TreeConfiguration;)I a
	foliagePlacerParts (Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/Products$P2; b
	foliageRadius (Lnet/minecraft/util/RandomSource;I)I a
	offset (Lnet/minecraft/util/RandomSource;)I a
	placeLeavesRow (Lnet/minecraft/world/level/LevelSimulatedReader;Lnet/minecraft/world/level/levelgen/feature/foliageplacers/FoliagePlacer$FoliageSetter;Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/levelgen/feature/configurations/TreeConfiguration;Lnet/minecraft/core/BlockPos;IIZ)V a
	placeLeavesRowWithHangingLeavesBelow (Lnet/minecraft/world/level/LevelSimulatedReader;Lnet/minecraft/world/level/levelgen/feature/foliageplacers/FoliagePlacer$FoliageSetter;Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/levelgen/feature/configurations/TreeConfiguration;Lnet/minecraft/core/BlockPos;IIZFF)V a
	shouldSkipLocation (Lnet/minecraft/util/RandomSource;IIIIZ)Z a
	shouldSkipLocationSigned (Lnet/minecraft/util/RandomSource;IIIIZ)Z b
	tryPlaceExtension (Lnet/minecraft/world/level/LevelSimulatedReader;Lnet/minecraft/world/level/levelgen/feature/foliageplacers/FoliagePlacer$FoliageSetter;Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/levelgen/feature/configurations/TreeConfiguration;FLnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos$MutableBlockPos;)Z a
	tryPlaceLeaf (Lnet/minecraft/world/level/LevelSimulatedReader;Lnet/minecraft/world/level/levelgen/feature/foliageplacers/FoliagePlacer$FoliageSetter;Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/levelgen/feature/configurations/TreeConfiguration;Lnet/minecraft/core/BlockPos;)Z a
	type ()Lnet/minecraft/world/level/levelgen/feature/foliageplacers/FoliagePlacerType; a
net/minecraft/world/level/levelgen/feature/foliageplacers/FoliagePlacer$FoliageAttachment doe$a
	doubleTrunk c
	pos a
	radiusOffset b
	doubleTrunk ()Z c
	pos ()Lnet/minecraft/core/BlockPos; a
	radiusOffset ()I b
net/minecraft/world/level/levelgen/feature/foliageplacers/FoliagePlacer$FoliageSetter doe$b
	isSet (Lnet/minecraft/core/BlockPos;)Z a
	set (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V a
net/minecraft/world/level/levelgen/feature/foliageplacers/FoliagePlacerType dof
	ACACIA_FOLIAGE_PLACER d
	BLOB_FOLIAGE_PLACER a
	BUSH_FOLIAGE_PLACER e
	CHERRY_FOLIAGE_PLACER k
	DARK_OAK_FOLIAGE_PLACER i
	FANCY_FOLIAGE_PLACER f
	MEGA_JUNGLE_FOLIAGE_PLACER g
	MEGA_PINE_FOLIAGE_PLACER h
	PINE_FOLIAGE_PLACER c
	RANDOM_SPREAD_FOLIAGE_PLACER j
	SPRUCE_FOLIAGE_PLACER b
	codec l
	codec ()Lcom/mojang/serialization/Codec; a
	register (Ljava/lang/String;Lcom/mojang/serialization/Codec;)Lnet/minecraft/world/level/levelgen/feature/foliageplacers/FoliagePlacerType; a
net/minecraft/world/level/levelgen/feature/foliageplacers/MegaJungleFoliagePlacer dog
	CODEC a
	height b
	createFoliage (Lnet/minecraft/world/level/LevelSimulatedReader;Lnet/minecraft/world/level/levelgen/feature/foliageplacers/FoliagePlacer$FoliageSetter;Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/levelgen/feature/configurations/TreeConfiguration;ILnet/minecraft/world/level/levelgen/feature/foliageplacers/FoliagePlacer$FoliageAttachment;III)V a
	foliageHeight (Lnet/minecraft/util/RandomSource;ILnet/minecraft/world/level/levelgen/feature/configurations/TreeConfiguration;)I a
	shouldSkipLocation (Lnet/minecraft/util/RandomSource;IIIIZ)Z a
	type ()Lnet/minecraft/world/level/levelgen/feature/foliageplacers/FoliagePlacerType; a
net/minecraft/world/level/levelgen/feature/foliageplacers/MegaPineFoliagePlacer doh
	CODEC a
	crownHeight b
	createFoliage (Lnet/minecraft/world/level/LevelSimulatedReader;Lnet/minecraft/world/level/levelgen/feature/foliageplacers/FoliagePlacer$FoliageSetter;Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/levelgen/feature/configurations/TreeConfiguration;ILnet/minecraft/world/level/levelgen/feature/foliageplacers/FoliagePlacer$FoliageAttachment;III)V a
	foliageHeight (Lnet/minecraft/util/RandomSource;ILnet/minecraft/world/level/levelgen/feature/configurations/TreeConfiguration;)I a
	shouldSkipLocation (Lnet/minecraft/util/RandomSource;IIIIZ)Z a
	type ()Lnet/minecraft/world/level/levelgen/feature/foliageplacers/FoliagePlacerType; a
net/minecraft/world/level/levelgen/feature/foliageplacers/PineFoliagePlacer doi
	CODEC a
	height b
	createFoliage (Lnet/minecraft/world/level/LevelSimulatedReader;Lnet/minecraft/world/level/levelgen/feature/foliageplacers/FoliagePlacer$FoliageSetter;Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/levelgen/feature/configurations/TreeConfiguration;ILnet/minecraft/world/level/levelgen/feature/foliageplacers/FoliagePlacer$FoliageAttachment;III)V a
	foliageHeight (Lnet/minecraft/util/RandomSource;ILnet/minecraft/world/level/levelgen/feature/configurations/TreeConfiguration;)I a
	foliageRadius (Lnet/minecraft/util/RandomSource;I)I a
	shouldSkipLocation (Lnet/minecraft/util/RandomSource;IIIIZ)Z a
	type ()Lnet/minecraft/world/level/levelgen/feature/foliageplacers/FoliagePlacerType; a
net/minecraft/world/level/levelgen/feature/foliageplacers/RandomSpreadFoliagePlacer doj
	CODEC a
	foliageHeight b
	leafPlacementAttempts c
	createFoliage (Lnet/minecraft/world/level/LevelSimulatedReader;Lnet/minecraft/world/level/levelgen/feature/foliageplacers/FoliagePlacer$FoliageSetter;Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/levelgen/feature/configurations/TreeConfiguration;ILnet/minecraft/world/level/levelgen/feature/foliageplacers/FoliagePlacer$FoliageAttachment;III)V a
	foliageHeight (Lnet/minecraft/util/RandomSource;ILnet/minecraft/world/level/levelgen/feature/configurations/TreeConfiguration;)I a
	shouldSkipLocation (Lnet/minecraft/util/RandomSource;IIIIZ)Z a
	type ()Lnet/minecraft/world/level/levelgen/feature/foliageplacers/FoliagePlacerType; a
net/minecraft/world/level/levelgen/feature/foliageplacers/SpruceFoliagePlacer dok
	CODEC a
	trunkHeight b
	createFoliage (Lnet/minecraft/world/level/LevelSimulatedReader;Lnet/minecraft/world/level/levelgen/feature/foliageplacers/FoliagePlacer$FoliageSetter;Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/levelgen/feature/configurations/TreeConfiguration;ILnet/minecraft/world/level/levelgen/feature/foliageplacers/FoliagePlacer$FoliageAttachment;III)V a
	foliageHeight (Lnet/minecraft/util/RandomSource;ILnet/minecraft/world/level/levelgen/feature/configurations/TreeConfiguration;)I a
	shouldSkipLocation (Lnet/minecraft/util/RandomSource;IIIIZ)Z a
	type ()Lnet/minecraft/world/level/levelgen/feature/foliageplacers/FoliagePlacerType; a
net/minecraft/world/level/levelgen/feature/rootplacers/AboveRootPlacement don
	CODEC a
	aboveRootPlacementChance c
	aboveRootProvider b
	aboveRootPlacementChance ()F b
	aboveRootProvider ()Lnet/minecraft/world/level/levelgen/feature/stateproviders/BlockStateProvider; a
net/minecraft/world/level/levelgen/feature/rootplacers/MangroveRootPlacement doo
	CODEC a
	canGrowThrough b
	maxRootLength f
	maxRootWidth e
	muddyRootsIn c
	muddyRootsProvider d
	randomSkewChance g
	canGrowThrough ()Lnet/minecraft/core/HolderSet; a
	maxRootLength ()I e
	maxRootWidth ()I d
	muddyRootsIn ()Lnet/minecraft/core/HolderSet; b
	muddyRootsProvider ()Lnet/minecraft/world/level/levelgen/feature/stateproviders/BlockStateProvider; c
	randomSkewChance ()F f
net/minecraft/world/level/levelgen/feature/rootplacers/MangroveRootPlacer dop
	CODEC c
	ROOT_LENGTH_LIMIT b
	ROOT_WIDTH_LIMIT a
	mangroveRootPlacement h
	canPlaceRoot (Lnet/minecraft/world/level/LevelSimulatedReader;Lnet/minecraft/core/BlockPos;)Z a
	placeRoot (Lnet/minecraft/world/level/LevelSimulatedReader;Ljava/util/function/BiConsumer;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/levelgen/feature/configurations/TreeConfiguration;)V a
	placeRoots (Lnet/minecraft/world/level/LevelSimulatedReader;Ljava/util/function/BiConsumer;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/levelgen/feature/configurations/TreeConfiguration;)Z a
	potentialRootPositions (Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPos;)Ljava/util/List; a
	simulateRoots (Lnet/minecraft/world/level/LevelSimulatedReader;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;Lnet/minecraft/core/BlockPos;Ljava/util/List;I)Z a
	type ()Lnet/minecraft/world/level/levelgen/feature/rootplacers/RootPlacerType; a
net/minecraft/world/level/levelgen/feature/rootplacers/RootPlacer doq
	CODEC d
	aboveRootPlacement g
	rootProvider f
	trunkOffsetY e
	canPlaceRoot (Lnet/minecraft/world/level/LevelSimulatedReader;Lnet/minecraft/core/BlockPos;)Z a
	getPotentiallyWaterloggedState (Lnet/minecraft/world/level/LevelSimulatedReader;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/state/BlockState; a
	getTrunkOrigin (Lnet/minecraft/core/BlockPos;Lnet/minecraft/util/RandomSource;)Lnet/minecraft/core/BlockPos; a
	placeRoot (Lnet/minecraft/world/level/LevelSimulatedReader;Ljava/util/function/BiConsumer;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/levelgen/feature/configurations/TreeConfiguration;)V a
	placeRoots (Lnet/minecraft/world/level/LevelSimulatedReader;Ljava/util/function/BiConsumer;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/levelgen/feature/configurations/TreeConfiguration;)Z a
	rootPlacerParts (Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/Products$P3; a
	type ()Lnet/minecraft/world/level/levelgen/feature/rootplacers/RootPlacerType; a
net/minecraft/world/level/levelgen/feature/rootplacers/RootPlacerType dor
	MANGROVE_ROOT_PLACER a
	codec b
	codec ()Lcom/mojang/serialization/Codec; a
	register (Ljava/lang/String;Lcom/mojang/serialization/Codec;)Lnet/minecraft/world/level/levelgen/feature/rootplacers/RootPlacerType; a
net/minecraft/world/level/levelgen/feature/stateproviders/BlockStateProvider dot
	CODEC a
	getState (Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
	simple (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/world/level/levelgen/feature/stateproviders/SimpleStateProvider; a
	simple (Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/levelgen/feature/stateproviders/SimpleStateProvider; a
	type ()Lnet/minecraft/world/level/levelgen/feature/stateproviders/BlockStateProviderType; a
net/minecraft/world/level/levelgen/feature/stateproviders/BlockStateProviderType dou
	DUAL_NOISE_PROVIDER e
	NOISE_PROVIDER d
	NOISE_THRESHOLD_PROVIDER c
	RANDOMIZED_INT_STATE_PROVIDER g
	ROTATED_BLOCK_PROVIDER f
	SIMPLE_STATE_PROVIDER a
	WEIGHTED_STATE_PROVIDER b
	codec h
	codec ()Lcom/mojang/serialization/Codec; a
	register (Ljava/lang/String;Lcom/mojang/serialization/Codec;)Lnet/minecraft/world/level/levelgen/feature/stateproviders/BlockStateProviderType; a
net/minecraft/world/level/levelgen/feature/stateproviders/DualNoiseProvider dov
	CODEC b
	slowNoise l
	slowNoiseParameters j
	slowScale k
	variety i
	getSlowNoiseValue (Lnet/minecraft/core/BlockPos;)D a
	getState (Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
	type ()Lnet/minecraft/world/level/levelgen/feature/stateproviders/BlockStateProviderType; a
net/minecraft/world/level/levelgen/feature/stateproviders/NoiseBasedStateProvider dow
	noise f
	parameters d
	scale e
	seed c
	getNoiseValue (Lnet/minecraft/core/BlockPos;D)D a
	noiseCodec (Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/Products$P3; a
net/minecraft/world/level/levelgen/feature/stateproviders/NoiseProvider dox
	CODEC g
	states h
	getRandomState (Ljava/util/List;D)Lnet/minecraft/world/level/block/state/BlockState; a
	getRandomState (Ljava/util/List;Lnet/minecraft/core/BlockPos;D)Lnet/minecraft/world/level/block/state/BlockState; a
	getState (Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
	noiseProviderCodec (Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/Products$P4; b
	type ()Lnet/minecraft/world/level/levelgen/feature/stateproviders/BlockStateProviderType; a
net/minecraft/world/level/levelgen/feature/stateproviders/NoiseThresholdProvider doy
	CODEC b
	defaultState i
	highChance h
	highStates k
	lowStates j
	threshold g
	getState (Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
	type ()Lnet/minecraft/world/level/levelgen/feature/stateproviders/BlockStateProviderType; a
net/minecraft/world/level/levelgen/feature/stateproviders/RandomizedIntStateProvider doz
	CODEC b
	property e
	propertyName d
	source c
	values f
	findProperty (Lnet/minecraft/world/level/block/state/BlockState;Ljava/lang/String;)Lnet/minecraft/world/level/block/state/properties/IntegerProperty; a
	getState (Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
	type ()Lnet/minecraft/world/level/levelgen/feature/stateproviders/BlockStateProviderType; a
net/minecraft/world/level/levelgen/feature/stateproviders/RotatedBlockProvider dpa
	CODEC b
	block c
	getState (Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
	type ()Lnet/minecraft/world/level/levelgen/feature/stateproviders/BlockStateProviderType; a
net/minecraft/world/level/levelgen/feature/stateproviders/RuleBasedBlockStateProvider dpb
	CODEC a
	fallback b
	rules c
	fallback ()Lnet/minecraft/world/level/levelgen/feature/stateproviders/BlockStateProvider; a
	getState (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
	rules ()Ljava/util/List; b
	simple (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/world/level/levelgen/feature/stateproviders/RuleBasedBlockStateProvider; a
	simple (Lnet/minecraft/world/level/levelgen/feature/stateproviders/BlockStateProvider;)Lnet/minecraft/world/level/levelgen/feature/stateproviders/RuleBasedBlockStateProvider; a
net/minecraft/world/level/levelgen/feature/stateproviders/RuleBasedBlockStateProvider$Rule dpb$a
	CODEC a
	ifTrue b
	then c
	ifTrue ()Lnet/minecraft/world/level/levelgen/blockpredicates/BlockPredicate; a
	then ()Lnet/minecraft/world/level/levelgen/feature/stateproviders/BlockStateProvider; b
net/minecraft/world/level/levelgen/feature/stateproviders/SimpleStateProvider dpc
	CODEC b
	state c
	getState (Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
	type ()Lnet/minecraft/world/level/levelgen/feature/stateproviders/BlockStateProviderType; a
net/minecraft/world/level/levelgen/feature/stateproviders/WeightedStateProvider dpd
	CODEC b
	weightedList c
	create (Lnet/minecraft/util/random/SimpleWeightedRandomList;)Lcom/mojang/serialization/DataResult; a
	getState (Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
	type ()Lnet/minecraft/world/level/levelgen/feature/stateproviders/BlockStateProviderType; a
net/minecraft/world/level/levelgen/feature/treedecorators/AlterGroundDecorator dpf
	CODEC a
	provider b
	place (Lnet/minecraft/world/level/levelgen/feature/treedecorators/TreeDecorator$Context;)V a
	placeBlockAt (Lnet/minecraft/world/level/levelgen/feature/treedecorators/TreeDecorator$Context;Lnet/minecraft/core/BlockPos;)V b
	placeCircle (Lnet/minecraft/world/level/levelgen/feature/treedecorators/TreeDecorator$Context;Lnet/minecraft/core/BlockPos;)V a
	type ()Lnet/minecraft/world/level/levelgen/feature/treedecorators/TreeDecoratorType; a
net/minecraft/world/level/levelgen/feature/treedecorators/AttachedToLeavesDecorator dpg
	CODEC a
	blockProvider e
	directions g
	exclusionRadiusXZ c
	exclusionRadiusY d
	probability b
	requiredEmptyBlocks f
	hasRequiredEmptyBlocks (Lnet/minecraft/world/level/levelgen/feature/treedecorators/TreeDecorator$Context;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;)Z a
	place (Lnet/minecraft/world/level/levelgen/feature/treedecorators/TreeDecorator$Context;)V a
	type ()Lnet/minecraft/world/level/levelgen/feature/treedecorators/TreeDecoratorType; a
net/minecraft/world/level/levelgen/feature/treedecorators/BeehiveDecorator dph
	CODEC a
	SPAWN_DIRECTIONS c
	WORLDGEN_FACING b
	probability d
	place (Lnet/minecraft/world/level/levelgen/feature/treedecorators/TreeDecorator$Context;)V a
	type ()Lnet/minecraft/world/level/levelgen/feature/treedecorators/TreeDecoratorType; a
net/minecraft/world/level/levelgen/feature/treedecorators/CocoaDecorator dpi
	CODEC a
	probability b
	place (Lnet/minecraft/world/level/levelgen/feature/treedecorators/TreeDecorator$Context;)V a
	type ()Lnet/minecraft/world/level/levelgen/feature/treedecorators/TreeDecoratorType; a
net/minecraft/world/level/levelgen/feature/treedecorators/LeaveVineDecorator dpj
	CODEC a
	probability b
	addHangingVine (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/properties/BooleanProperty;Lnet/minecraft/world/level/levelgen/feature/treedecorators/TreeDecorator$Context;)V a
	place (Lnet/minecraft/world/level/levelgen/feature/treedecorators/TreeDecorator$Context;)V a
	type ()Lnet/minecraft/world/level/levelgen/feature/treedecorators/TreeDecoratorType; a
net/minecraft/world/level/levelgen/feature/treedecorators/TreeDecorator dpk
	CODEC h
	place (Lnet/minecraft/world/level/levelgen/feature/treedecorators/TreeDecorator$Context;)V a
	type ()Lnet/minecraft/world/level/levelgen/feature/treedecorators/TreeDecoratorType; a
net/minecraft/world/level/levelgen/feature/treedecorators/TreeDecorator$Context dpk$a
	decorationSetter b
	leaves e
	level a
	logs d
	random c
	roots f
	isAir (Lnet/minecraft/core/BlockPos;)Z a
	leaves ()Lit/unimi/dsi/fastutil/objects/ObjectArrayList; d
	level ()Lnet/minecraft/world/level/LevelSimulatedReader; a
	logs ()Lit/unimi/dsi/fastutil/objects/ObjectArrayList; c
	placeVine (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/properties/BooleanProperty;)V a
	random ()Lnet/minecraft/util/RandomSource; b
	roots ()Lit/unimi/dsi/fastutil/objects/ObjectArrayList; e
	setBlock (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V a
net/minecraft/world/level/levelgen/feature/treedecorators/TreeDecoratorType dpl
	ALTER_GROUND e
	ATTACHED_TO_LEAVES f
	BEEHIVE d
	COCOA c
	LEAVE_VINE b
	TRUNK_VINE a
	codec g
	codec ()Lcom/mojang/serialization/Codec; a
	register (Ljava/lang/String;Lcom/mojang/serialization/Codec;)Lnet/minecraft/world/level/levelgen/feature/treedecorators/TreeDecoratorType; a
net/minecraft/world/level/levelgen/feature/treedecorators/TrunkVineDecorator dpm
	CODEC a
	INSTANCE b
	place (Lnet/minecraft/world/level/levelgen/feature/treedecorators/TreeDecorator$Context;)V a
	type ()Lnet/minecraft/world/level/levelgen/feature/treedecorators/TreeDecoratorType; a
net/minecraft/world/level/levelgen/feature/trunkplacers/BendingTrunkPlacer dpo
	CODEC a
	bendLength h
	minHeightForLeaves b
	placeTrunk (Lnet/minecraft/world/level/LevelSimulatedReader;Ljava/util/function/BiConsumer;Lnet/minecraft/util/RandomSource;ILnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/levelgen/feature/configurations/TreeConfiguration;)Ljava/util/List; a
	type ()Lnet/minecraft/world/level/levelgen/feature/trunkplacers/TrunkPlacerType; a
net/minecraft/world/level/levelgen/feature/trunkplacers/CherryTrunkPlacer dpp
	BRANCH_START_CODEC b
	CODEC a
	branchCount h
	branchEndOffsetFromTop l
	branchHorizontalLength i
	branchStartOffsetFromTop j
	secondBranchStartOffsetFromTop k
	generateBranch (Lnet/minecraft/world/level/LevelSimulatedReader;Ljava/util/function/BiConsumer;Lnet/minecraft/util/RandomSource;ILnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/levelgen/feature/configurations/TreeConfiguration;Ljava/util/function/Function;Lnet/minecraft/core/Direction;IZLnet/minecraft/core/BlockPos$MutableBlockPos;)Lnet/minecraft/world/level/levelgen/feature/foliageplacers/FoliagePlacer$FoliageAttachment; a
	placeTrunk (Lnet/minecraft/world/level/LevelSimulatedReader;Ljava/util/function/BiConsumer;Lnet/minecraft/util/RandomSource;ILnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/levelgen/feature/configurations/TreeConfiguration;)Ljava/util/List; a
	type ()Lnet/minecraft/world/level/levelgen/feature/trunkplacers/TrunkPlacerType; a
net/minecraft/world/level/levelgen/feature/trunkplacers/DarkOakTrunkPlacer dpq
	CODEC a
	placeTrunk (Lnet/minecraft/world/level/LevelSimulatedReader;Ljava/util/function/BiConsumer;Lnet/minecraft/util/RandomSource;ILnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/levelgen/feature/configurations/TreeConfiguration;)Ljava/util/List; a
	type ()Lnet/minecraft/world/level/levelgen/feature/trunkplacers/TrunkPlacerType; a
net/minecraft/world/level/levelgen/feature/trunkplacers/FancyTrunkPlacer dpr
	BRANCH_LENGTH_MAGIC j
	BRANCH_SLOPE i
	CLUSTER_DENSITY_MAGIC h
	CODEC a
	TRUNK_HEIGHT_SCALE b
	getLogAxis (Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/core/Direction$Axis; a
	getSteps (Lnet/minecraft/core/BlockPos;)I a
	makeBranches (Lnet/minecraft/world/level/LevelSimulatedReader;Ljava/util/function/BiConsumer;Lnet/minecraft/util/RandomSource;ILnet/minecraft/core/BlockPos;Ljava/util/List;Lnet/minecraft/world/level/levelgen/feature/configurations/TreeConfiguration;)V a
	makeLimb (Lnet/minecraft/world/level/LevelSimulatedReader;Ljava/util/function/BiConsumer;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;ZLnet/minecraft/world/level/levelgen/feature/configurations/TreeConfiguration;)Z a
	placeTrunk (Lnet/minecraft/world/level/LevelSimulatedReader;Ljava/util/function/BiConsumer;Lnet/minecraft/util/RandomSource;ILnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/levelgen/feature/configurations/TreeConfiguration;)Ljava/util/List; a
	treeShape (II)F b
	trimBranches (II)Z a
	type ()Lnet/minecraft/world/level/levelgen/feature/trunkplacers/TrunkPlacerType; a
net/minecraft/world/level/levelgen/feature/trunkplacers/FancyTrunkPlacer$FoliageCoords dpr$a
	attachment a
	branchBase b
	getBranchBase ()I a
net/minecraft/world/level/levelgen/feature/trunkplacers/ForkingTrunkPlacer dps
	CODEC a
	placeTrunk (Lnet/minecraft/world/level/LevelSimulatedReader;Ljava/util/function/BiConsumer;Lnet/minecraft/util/RandomSource;ILnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/levelgen/feature/configurations/TreeConfiguration;)Ljava/util/List; a
	type ()Lnet/minecraft/world/level/levelgen/feature/trunkplacers/TrunkPlacerType; a
net/minecraft/world/level/levelgen/feature/trunkplacers/GiantTrunkPlacer dpt
	CODEC a
	placeLogIfFreeWithOffset (Lnet/minecraft/world/level/LevelSimulatedReader;Ljava/util/function/BiConsumer;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPos$MutableBlockPos;Lnet/minecraft/world/level/levelgen/feature/configurations/TreeConfiguration;Lnet/minecraft/core/BlockPos;III)V a
	placeTrunk (Lnet/minecraft/world/level/LevelSimulatedReader;Ljava/util/function/BiConsumer;Lnet/minecraft/util/RandomSource;ILnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/levelgen/feature/configurations/TreeConfiguration;)Ljava/util/List; a
	type ()Lnet/minecraft/world/level/levelgen/feature/trunkplacers/TrunkPlacerType; a
net/minecraft/world/level/levelgen/feature/trunkplacers/MegaJungleTrunkPlacer dpu
	CODEC b
	placeTrunk (Lnet/minecraft/world/level/LevelSimulatedReader;Ljava/util/function/BiConsumer;Lnet/minecraft/util/RandomSource;ILnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/levelgen/feature/configurations/TreeConfiguration;)Ljava/util/List; a
	type ()Lnet/minecraft/world/level/levelgen/feature/trunkplacers/TrunkPlacerType; a
net/minecraft/world/level/levelgen/feature/trunkplacers/StraightTrunkPlacer dpv
	CODEC a
	placeTrunk (Lnet/minecraft/world/level/LevelSimulatedReader;Ljava/util/function/BiConsumer;Lnet/minecraft/util/RandomSource;ILnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/levelgen/feature/configurations/TreeConfiguration;)Ljava/util/List; a
	type ()Lnet/minecraft/world/level/levelgen/feature/trunkplacers/TrunkPlacerType; a
net/minecraft/world/level/levelgen/feature/trunkplacers/TrunkPlacer dpw
	CODEC c
	MAX_BASE_HEIGHT a
	MAX_HEIGHT d
	MAX_RAND b
	baseHeight e
	heightRandA f
	heightRandB g
	getTreeHeight (Lnet/minecraft/util/RandomSource;)I a
	isDirt (Lnet/minecraft/world/level/LevelSimulatedReader;Lnet/minecraft/core/BlockPos;)Z c
	isFree (Lnet/minecraft/world/level/LevelSimulatedReader;Lnet/minecraft/core/BlockPos;)Z b
	placeLog (Lnet/minecraft/world/level/LevelSimulatedReader;Ljava/util/function/BiConsumer;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/levelgen/feature/configurations/TreeConfiguration;)Z b
	placeLog (Lnet/minecraft/world/level/LevelSimulatedReader;Ljava/util/function/BiConsumer;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/levelgen/feature/configurations/TreeConfiguration;Ljava/util/function/Function;)Z a
	placeLogIfFree (Lnet/minecraft/world/level/LevelSimulatedReader;Ljava/util/function/BiConsumer;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPos$MutableBlockPos;Lnet/minecraft/world/level/levelgen/feature/configurations/TreeConfiguration;)V a
	placeTrunk (Lnet/minecraft/world/level/LevelSimulatedReader;Ljava/util/function/BiConsumer;Lnet/minecraft/util/RandomSource;ILnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/levelgen/feature/configurations/TreeConfiguration;)Ljava/util/List; a
	setDirtAt (Lnet/minecraft/world/level/LevelSimulatedReader;Ljava/util/function/BiConsumer;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/levelgen/feature/configurations/TreeConfiguration;)V a
	trunkPlacerParts (Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/Products$P3; a
	type ()Lnet/minecraft/world/level/levelgen/feature/trunkplacers/TrunkPlacerType; a
	validTreePos (Lnet/minecraft/world/level/LevelSimulatedReader;Lnet/minecraft/core/BlockPos;)Z a
net/minecraft/world/level/levelgen/feature/trunkplacers/TrunkPlacerType dpx
	BENDING_TRUNK_PLACER g
	CHERRY_TRUNK_PLACER i
	DARK_OAK_TRUNK_PLACER e
	FANCY_TRUNK_PLACER f
	FORKING_TRUNK_PLACER b
	GIANT_TRUNK_PLACER c
	MEGA_JUNGLE_TRUNK_PLACER d
	STRAIGHT_TRUNK_PLACER a
	UPWARDS_BRANCHING_TRUNK_PLACER h
	codec j
	codec ()Lcom/mojang/serialization/Codec; a
	register (Ljava/lang/String;Lcom/mojang/serialization/Codec;)Lnet/minecraft/world/level/levelgen/feature/trunkplacers/TrunkPlacerType; a
net/minecraft/world/level/levelgen/feature/trunkplacers/UpwardsBranchingTrunkPlacer dpy
	CODEC a
	canGrowThrough j
	extraBranchLength i
	extraBranchSteps b
	placeBranchPerLogProbability h
	placeBranch (Lnet/minecraft/world/level/LevelSimulatedReader;Ljava/util/function/BiConsumer;Lnet/minecraft/util/RandomSource;ILnet/minecraft/world/level/levelgen/feature/configurations/TreeConfiguration;Ljava/util/List;Lnet/minecraft/core/BlockPos$MutableBlockPos;ILnet/minecraft/core/Direction;II)V a
	placeTrunk (Lnet/minecraft/world/level/LevelSimulatedReader;Ljava/util/function/BiConsumer;Lnet/minecraft/util/RandomSource;ILnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/levelgen/feature/configurations/TreeConfiguration;)Ljava/util/List; a
	type ()Lnet/minecraft/world/level/levelgen/feature/trunkplacers/TrunkPlacerType; a
	validTreePos (Lnet/minecraft/world/level/LevelSimulatedReader;Lnet/minecraft/core/BlockPos;)Z a
net/minecraft/world/level/levelgen/flat/FlatLayerInfo dqa
	CODEC a
	block b
	height c
	getBlockState ()Lnet/minecraft/world/level/block/state/BlockState; b
	getHeight ()I a
net/minecraft/world/level/levelgen/flat/FlatLevelGeneratorPreset dqb
	CODEC b
	DIRECT_CODEC a
	displayItem c
	settings d
	displayItem ()Lnet/minecraft/core/Holder; a
	settings ()Lnet/minecraft/world/level/levelgen/flat/FlatLevelGeneratorSettings; b
net/minecraft/world/level/levelgen/flat/FlatLevelGeneratorPresets dqc
	BOTTOMLESS_PIT f
	CLASSIC_FLAT a
	DESERT g
	OVERWORLD d
	REDSTONE_READY h
	SNOWY_KINGDOM e
	THE_VOID i
	TUNNELERS_DREAM b
	WATER_WORLD c
	bootstrap (Lnet/minecraft/data/worldgen/BootstapContext;)V a
	register (Ljava/lang/String;)Lnet/minecraft/resources/ResourceKey; a
net/minecraft/world/level/levelgen/flat/FlatLevelGeneratorPresets$Bootstrap dqc$a
	context a
	register (Lnet/minecraft/resources/ResourceKey;Lnet/minecraft/world/level/ItemLike;Lnet/minecraft/resources/ResourceKey;Ljava/util/Set;ZZ[Lnet/minecraft/world/level/levelgen/flat/FlatLayerInfo;)V a
	run ()V a
net/minecraft/world/level/levelgen/flat/FlatLevelGeneratorSettings dqd
	CODEC a
	LOGGER b
	addLakes i
	biome e
	decoration h
	lakes j
	layers f
	layersInfo d
	structureOverrides c
	voidGen g
	adjustGenerationSettings (Lnet/minecraft/core/Holder;)Lnet/minecraft/world/level/biome/BiomeGenerationSettings; a
	createLakesList (Lnet/minecraft/core/HolderGetter;)Ljava/util/List; b
	getBiome ()Lnet/minecraft/core/Holder; d
	getBiome (Ljava/util/Optional;Lnet/minecraft/core/Holder;)Lnet/minecraft/core/Holder; a
	getDefault (Lnet/minecraft/core/HolderGetter;Lnet/minecraft/core/HolderGetter;Lnet/minecraft/core/HolderGetter;)Lnet/minecraft/world/level/levelgen/flat/FlatLevelGeneratorSettings; a
	getDefaultBiome (Lnet/minecraft/core/HolderGetter;)Lnet/minecraft/core/Holder; a
	getLayers ()Ljava/util/List; f
	getLayersInfo ()Ljava/util/List; e
	setAddLakes ()V b
	setDecoration ()V a
	structureOverrides ()Ljava/util/Optional; c
	updateLayers ()V g
	validateHeight (Lnet/minecraft/world/level/levelgen/flat/FlatLevelGeneratorSettings;)Lcom/mojang/serialization/DataResult; a
	withBiomeAndLayers (Ljava/util/List;Ljava/util/Optional;Lnet/minecraft/core/Holder;)Lnet/minecraft/world/level/levelgen/flat/FlatLevelGeneratorSettings; a
net/minecraft/world/level/levelgen/heightproviders/BiasedToBottomHeight dqf
	CODEC a
	LOGGER b
	inner f
	maxInclusive e
	minInclusive d
	getType ()Lnet/minecraft/world/level/levelgen/heightproviders/HeightProviderType; a
	of (Lnet/minecraft/world/level/levelgen/VerticalAnchor;Lnet/minecraft/world/level/levelgen/VerticalAnchor;I)Lnet/minecraft/world/level/levelgen/heightproviders/BiasedToBottomHeight; a
	sample (Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/levelgen/WorldGenerationContext;)I a
net/minecraft/world/level/levelgen/heightproviders/ConstantHeight dqg
	CODEC b
	ZERO a
	value d
	getType ()Lnet/minecraft/world/level/levelgen/heightproviders/HeightProviderType; a
	getValue ()Lnet/minecraft/world/level/levelgen/VerticalAnchor; b
	of (Lnet/minecraft/world/level/levelgen/VerticalAnchor;)Lnet/minecraft/world/level/levelgen/heightproviders/ConstantHeight; a
	sample (Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/levelgen/WorldGenerationContext;)I a
net/minecraft/world/level/levelgen/heightproviders/HeightProvider dqh
	CODEC c
	CONSTANT_OR_DISPATCH_CODEC a
	getType ()Lnet/minecraft/world/level/levelgen/heightproviders/HeightProviderType; a
	sample (Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/levelgen/WorldGenerationContext;)I a
net/minecraft/world/level/levelgen/heightproviders/HeightProviderType dqi
	BIASED_TO_BOTTOM c
	CONSTANT a
	TRAPEZOID e
	UNIFORM b
	VERY_BIASED_TO_BOTTOM d
	WEIGHTED_LIST f
	register (Ljava/lang/String;Lcom/mojang/serialization/Codec;)Lnet/minecraft/world/level/levelgen/heightproviders/HeightProviderType; a
net/minecraft/world/level/levelgen/heightproviders/TrapezoidHeight dqj
	CODEC a
	LOGGER b
	maxInclusive e
	minInclusive d
	plateau f
	getType ()Lnet/minecraft/world/level/levelgen/heightproviders/HeightProviderType; a
	of (Lnet/minecraft/world/level/levelgen/VerticalAnchor;Lnet/minecraft/world/level/levelgen/VerticalAnchor;)Lnet/minecraft/world/level/levelgen/heightproviders/TrapezoidHeight; a
	of (Lnet/minecraft/world/level/levelgen/VerticalAnchor;Lnet/minecraft/world/level/levelgen/VerticalAnchor;I)Lnet/minecraft/world/level/levelgen/heightproviders/TrapezoidHeight; a
	sample (Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/levelgen/WorldGenerationContext;)I a
net/minecraft/world/level/levelgen/heightproviders/UniformHeight dqk
	CODEC a
	LOGGER b
	maxInclusive e
	minInclusive d
	warnedFor f
	getType ()Lnet/minecraft/world/level/levelgen/heightproviders/HeightProviderType; a
	of (Lnet/minecraft/world/level/levelgen/VerticalAnchor;Lnet/minecraft/world/level/levelgen/VerticalAnchor;)Lnet/minecraft/world/level/levelgen/heightproviders/UniformHeight; a
	sample (Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/levelgen/WorldGenerationContext;)I a
net/minecraft/world/level/levelgen/heightproviders/VeryBiasedToBottomHeight dql
	CODEC a
	LOGGER b
	inner f
	maxInclusive e
	minInclusive d
	getType ()Lnet/minecraft/world/level/levelgen/heightproviders/HeightProviderType; a
	of (Lnet/minecraft/world/level/levelgen/VerticalAnchor;Lnet/minecraft/world/level/levelgen/VerticalAnchor;I)Lnet/minecraft/world/level/levelgen/heightproviders/VeryBiasedToBottomHeight; a
	sample (Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/levelgen/WorldGenerationContext;)I a
net/minecraft/world/level/levelgen/heightproviders/WeightedListHeight dqm
	CODEC a
	distribution b
	getType ()Lnet/minecraft/world/level/levelgen/heightproviders/HeightProviderType; a
	sample (Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/levelgen/WorldGenerationContext;)I a
net/minecraft/world/level/levelgen/material/MaterialRuleList dqo
	materialRuleList a
	materialRuleList ()Ljava/util/List; a
net/minecraft/world/level/levelgen/material/WorldGenMaterialRule dqp
	apply (Lnet/minecraft/world/level/levelgen/NoiseChunk;III)Lnet/minecraft/world/level/block/state/BlockState; a
net/minecraft/world/level/levelgen/placement/BiomeFilter dqs
	CODEC a
	INSTANCE c
	biome ()Lnet/minecraft/world/level/levelgen/placement/BiomeFilter; a
	shouldPlace (Lnet/minecraft/world/level/levelgen/placement/PlacementContext;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPos;)Z a
	type ()Lnet/minecraft/world/level/levelgen/placement/PlacementModifierType; b
net/minecraft/world/level/levelgen/placement/BlockPredicateFilter dqt
	CODEC a
	predicate c
	forPredicate (Lnet/minecraft/world/level/levelgen/blockpredicates/BlockPredicate;)Lnet/minecraft/world/level/levelgen/placement/BlockPredicateFilter; a
	shouldPlace (Lnet/minecraft/world/level/levelgen/placement/PlacementContext;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPos;)Z a
	type ()Lnet/minecraft/world/level/levelgen/placement/PlacementModifierType; b
net/minecraft/world/level/levelgen/placement/CarvingMaskPlacement dqu
	CODEC a
	step c
	forStep (Lnet/minecraft/world/level/levelgen/GenerationStep$Carving;)Lnet/minecraft/world/level/levelgen/placement/CarvingMaskPlacement; a
	getPositions (Lnet/minecraft/world/level/levelgen/placement/PlacementContext;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPos;)Ljava/util/stream/Stream; a_
	type ()Lnet/minecraft/world/level/levelgen/placement/PlacementModifierType; b
net/minecraft/world/level/levelgen/placement/CaveSurface dqv
	$VALUES g
	CEILING a
	CODEC c
	FLOOR b
	direction d
	id f
	y e
	$values ()[Lnet/minecraft/world/level/levelgen/placement/CaveSurface; d
	getDirection ()Lnet/minecraft/core/Direction; a
	getSerializedName ()Ljava/lang/String; c
	getY ()I b
net/minecraft/world/level/levelgen/placement/CountOnEveryLayerPlacement dqw
	CODEC a
	count c
	findOnGroundYPosition (Lnet/minecraft/world/level/levelgen/placement/PlacementContext;IIII)I a
	getPositions (Lnet/minecraft/world/level/levelgen/placement/PlacementContext;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPos;)Ljava/util/stream/Stream; a_
	isEmpty (Lnet/minecraft/world/level/block/state/BlockState;)Z a
	of (I)Lnet/minecraft/world/level/levelgen/placement/CountOnEveryLayerPlacement; a
	of (Lnet/minecraft/util/valueproviders/IntProvider;)Lnet/minecraft/world/level/levelgen/placement/CountOnEveryLayerPlacement; a
	type ()Lnet/minecraft/world/level/levelgen/placement/PlacementModifierType; b
net/minecraft/world/level/levelgen/placement/CountPlacement dqx
	CODEC a
	count c
	count (Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPos;)I a
	of (I)Lnet/minecraft/world/level/levelgen/placement/CountPlacement; a
	of (Lnet/minecraft/util/valueproviders/IntProvider;)Lnet/minecraft/world/level/levelgen/placement/CountPlacement; a
	type ()Lnet/minecraft/world/level/levelgen/placement/PlacementModifierType; b
net/minecraft/world/level/levelgen/placement/EnvironmentScanPlacement dqy
	CODEC a
	allowedSearchCondition e
	directionOfSearch c
	maxSteps f
	targetCondition d
	getPositions (Lnet/minecraft/world/level/levelgen/placement/PlacementContext;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPos;)Ljava/util/stream/Stream; a_
	scanningFor (Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/levelgen/blockpredicates/BlockPredicate;I)Lnet/minecraft/world/level/levelgen/placement/EnvironmentScanPlacement; a
	scanningFor (Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/levelgen/blockpredicates/BlockPredicate;Lnet/minecraft/world/level/levelgen/blockpredicates/BlockPredicate;I)Lnet/minecraft/world/level/levelgen/placement/EnvironmentScanPlacement; a
	type ()Lnet/minecraft/world/level/levelgen/placement/PlacementModifierType; b
net/minecraft/world/level/levelgen/placement/HeightRangePlacement dqz
	CODEC a
	height c
	getPositions (Lnet/minecraft/world/level/levelgen/placement/PlacementContext;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPos;)Ljava/util/stream/Stream; a_
	of (Lnet/minecraft/world/level/levelgen/heightproviders/HeightProvider;)Lnet/minecraft/world/level/levelgen/placement/HeightRangePlacement; a
	triangle (Lnet/minecraft/world/level/levelgen/VerticalAnchor;Lnet/minecraft/world/level/levelgen/VerticalAnchor;)Lnet/minecraft/world/level/levelgen/placement/HeightRangePlacement; b
	type ()Lnet/minecraft/world/level/levelgen/placement/PlacementModifierType; b
	uniform (Lnet/minecraft/world/level/levelgen/VerticalAnchor;Lnet/minecraft/world/level/levelgen/VerticalAnchor;)Lnet/minecraft/world/level/levelgen/placement/HeightRangePlacement; a
net/minecraft/world/level/levelgen/placement/HeightmapPlacement dra
	CODEC a
	heightmap c
	getPositions (Lnet/minecraft/world/level/levelgen/placement/PlacementContext;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPos;)Ljava/util/stream/Stream; a_
	onHeightmap (Lnet/minecraft/world/level/levelgen/Heightmap$Types;)Lnet/minecraft/world/level/levelgen/placement/HeightmapPlacement; a
	type ()Lnet/minecraft/world/level/levelgen/placement/PlacementModifierType; b
net/minecraft/world/level/levelgen/placement/InSquarePlacement drb
	CODEC a
	INSTANCE c
	getPositions (Lnet/minecraft/world/level/levelgen/placement/PlacementContext;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPos;)Ljava/util/stream/Stream; a_
	spread ()Lnet/minecraft/world/level/levelgen/placement/InSquarePlacement; a
	type ()Lnet/minecraft/world/level/levelgen/placement/PlacementModifierType; b
net/minecraft/world/level/levelgen/placement/NoiseBasedCountPlacement drc
	CODEC a
	noiseFactor d
	noiseOffset e
	noiseToCountRatio c
	count (Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPos;)I a
	of (IDD)Lnet/minecraft/world/level/levelgen/placement/NoiseBasedCountPlacement; a
	type ()Lnet/minecraft/world/level/levelgen/placement/PlacementModifierType; b
net/minecraft/world/level/levelgen/placement/NoiseThresholdCountPlacement drd
	CODEC a
	aboveNoise e
	belowNoise d
	noiseLevel c
	count (Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPos;)I a
	of (DII)Lnet/minecraft/world/level/levelgen/placement/NoiseThresholdCountPlacement; a
	type ()Lnet/minecraft/world/level/levelgen/placement/PlacementModifierType; b
net/minecraft/world/level/levelgen/placement/PlacedFeature dre
	CODEC b
	DIRECT_CODEC a
	LIST_CODEC c
	LIST_OF_LISTS_CODEC d
	feature e
	placement f
	feature ()Lnet/minecraft/core/Holder; b
	getFeatures ()Ljava/util/stream/Stream; a
	place (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPos;)Z a
	placeWithBiomeCheck (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPos;)Z b
	placeWithContext (Lnet/minecraft/world/level/levelgen/placement/PlacementContext;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPos;)Z a
	placement ()Ljava/util/List; c
net/minecraft/world/level/levelgen/placement/PlacementContext drf
	generator b
	level a
	topFeature c
	generator ()Lnet/minecraft/world/level/chunk/ChunkGenerator; f
	getBlockState (Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; a
	getCarvingMask (Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/world/level/levelgen/GenerationStep$Carving;)Lnet/minecraft/world/level/chunk/CarvingMask; a
	getHeight (Lnet/minecraft/world/level/levelgen/Heightmap$Types;II)I a
	getLevel ()Lnet/minecraft/world/level/WorldGenLevel; d
	getMinBuildHeight ()I c
	topFeature ()Ljava/util/Optional; e
net/minecraft/world/level/levelgen/placement/PlacementFilter drg
	getPositions (Lnet/minecraft/world/level/levelgen/placement/PlacementContext;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPos;)Ljava/util/stream/Stream; a_
	shouldPlace (Lnet/minecraft/world/level/levelgen/placement/PlacementContext;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPos;)Z a
net/minecraft/world/level/levelgen/placement/PlacementModifier drh
	CODEC b
	getPositions (Lnet/minecraft/world/level/levelgen/placement/PlacementContext;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPos;)Ljava/util/stream/Stream; a_
	type ()Lnet/minecraft/world/level/levelgen/placement/PlacementModifierType; b
net/minecraft/world/level/levelgen/placement/PlacementModifierType dri
	BIOME_FILTER e
	BLOCK_PREDICATE_FILTER a
	CARVING_MASK_PLACEMENT o
	COUNT f
	COUNT_ON_EVERY_LAYER i
	ENVIRONMENT_SCAN j
	HEIGHTMAP k
	HEIGHT_RANGE l
	IN_SQUARE m
	NOISE_BASED_COUNT g
	NOISE_THRESHOLD_COUNT h
	RANDOM_OFFSET n
	RARITY_FILTER b
	SURFACE_RELATIVE_THRESHOLD_FILTER c
	SURFACE_WATER_DEPTH_FILTER d
	register (Ljava/lang/String;Lcom/mojang/serialization/Codec;)Lnet/minecraft/world/level/levelgen/placement/PlacementModifierType; a
net/minecraft/world/level/levelgen/placement/RandomOffsetPlacement drj
	CODEC a
	xzSpread c
	ySpread d
	getPositions (Lnet/minecraft/world/level/levelgen/placement/PlacementContext;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPos;)Ljava/util/stream/Stream; a_
	horizontal (Lnet/minecraft/util/valueproviders/IntProvider;)Lnet/minecraft/world/level/levelgen/placement/RandomOffsetPlacement; b
	of (Lnet/minecraft/util/valueproviders/IntProvider;Lnet/minecraft/util/valueproviders/IntProvider;)Lnet/minecraft/world/level/levelgen/placement/RandomOffsetPlacement; a
	type ()Lnet/minecraft/world/level/levelgen/placement/PlacementModifierType; b
	vertical (Lnet/minecraft/util/valueproviders/IntProvider;)Lnet/minecraft/world/level/levelgen/placement/RandomOffsetPlacement; a
net/minecraft/world/level/levelgen/placement/RarityFilter drk
	CODEC a
	chance c
	onAverageOnceEvery (I)Lnet/minecraft/world/level/levelgen/placement/RarityFilter; a
	shouldPlace (Lnet/minecraft/world/level/levelgen/placement/PlacementContext;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPos;)Z a
	type ()Lnet/minecraft/world/level/levelgen/placement/PlacementModifierType; b
net/minecraft/world/level/levelgen/placement/RepeatingPlacement drl
	count (Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPos;)I a
	getPositions (Lnet/minecraft/world/level/levelgen/placement/PlacementContext;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPos;)Ljava/util/stream/Stream; a_
net/minecraft/world/level/levelgen/placement/SurfaceRelativeThresholdFilter drm
	CODEC a
	heightmap c
	maxInclusive e
	minInclusive d
	of (Lnet/minecraft/world/level/levelgen/Heightmap$Types;II)Lnet/minecraft/world/level/levelgen/placement/SurfaceRelativeThresholdFilter; a
	shouldPlace (Lnet/minecraft/world/level/levelgen/placement/PlacementContext;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPos;)Z a
	type ()Lnet/minecraft/world/level/levelgen/placement/PlacementModifierType; b
net/minecraft/world/level/levelgen/placement/SurfaceWaterDepthFilter drn
	CODEC a
	maxWaterDepth c
	forMaxDepth (I)Lnet/minecraft/world/level/levelgen/placement/SurfaceWaterDepthFilter; a
	shouldPlace (Lnet/minecraft/world/level/levelgen/placement/PlacementContext;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPos;)Z a
	type ()Lnet/minecraft/world/level/levelgen/placement/PlacementModifierType; b
net/minecraft/world/level/levelgen/presets/WorldPreset drp
	CODEC b
	DIRECT_CODEC a
	dimensions c
	createRegistry ()Lnet/minecraft/core/Registry; c
	createWorldDimensions ()Lnet/minecraft/world/level/levelgen/WorldDimensions; a
	overworld ()Ljava/util/Optional; b
	requireOverworld (Lnet/minecraft/world/level/levelgen/presets/WorldPreset;)Lcom/mojang/serialization/DataResult; a
net/minecraft/world/level/levelgen/presets/WorldPresets drq
	AMPLIFIED d
	DEBUG f
	FLAT b
	LARGE_BIOMES c
	NORMAL a
	SINGLE_BIOME_SURFACE e
	bootstrap (Lnet/minecraft/data/worldgen/BootstapContext;)V a
	createNormalWorldDimensions (Lnet/minecraft/core/RegistryAccess;)Lnet/minecraft/world/level/levelgen/WorldDimensions; a
	fromSettings (Lnet/minecraft/core/Registry;)Ljava/util/Optional; a
	getNormalOverworld (Lnet/minecraft/core/RegistryAccess;)Lnet/minecraft/world/level/dimension/LevelStem; b
	register (Ljava/lang/String;)Lnet/minecraft/resources/ResourceKey; a
net/minecraft/world/level/levelgen/presets/WorldPresets$Bootstrap drq$a
	biomes c
	context a
	endStem i
	multiNoiseBiomeSourceParameterLists f
	netherStem h
	noiseSettings b
	overworldDimensionType g
	placedFeatures d
	structureSets e
	bootstrap ()V a
	createPresetWithCustomOverworld (Lnet/minecraft/world/level/dimension/LevelStem;)Lnet/minecraft/world/level/levelgen/presets/WorldPreset; a
	makeNoiseBasedOverworld (Lnet/minecraft/world/level/biome/BiomeSource;Lnet/minecraft/core/Holder;)Lnet/minecraft/world/level/dimension/LevelStem; a
	makeOverworld (Lnet/minecraft/world/level/chunk/ChunkGenerator;)Lnet/minecraft/world/level/dimension/LevelStem; a
	registerCustomOverworldPreset (Lnet/minecraft/resources/ResourceKey;Lnet/minecraft/world/level/dimension/LevelStem;)V a
	registerOverworlds (Lnet/minecraft/world/level/biome/BiomeSource;)V a
net/minecraft/world/level/levelgen/structure/BoundingBox drs
	CODEC a
	LOGGER b
	maxX f
	maxY g
	maxZ h
	minX c
	minY d
	minZ e
	encapsulate (Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/levelgen/structure/BoundingBox; a
	encapsulate (Lnet/minecraft/world/level/levelgen/structure/BoundingBox;)Lnet/minecraft/world/level/levelgen/structure/BoundingBox; b
	encapsulatingBoxes (Ljava/lang/Iterable;)Ljava/util/Optional; b
	encapsulatingPositions (Ljava/lang/Iterable;)Ljava/util/Optional; a
	forAllCorners (Ljava/util/function/Consumer;)V a
	fromCorners (Lnet/minecraft/core/Vec3i;Lnet/minecraft/core/Vec3i;)Lnet/minecraft/world/level/levelgen/structure/BoundingBox; a
	getCenter ()Lnet/minecraft/core/BlockPos; f
	getLength ()Lnet/minecraft/core/Vec3i; b
	getXSpan ()I c
	getYSpan ()I d
	getZSpan ()I e
	infinite ()Lnet/minecraft/world/level/levelgen/structure/BoundingBox; a
	inflatedBy (I)Lnet/minecraft/world/level/levelgen/structure/BoundingBox; a
	intersects (IIII)Z a
	intersects (Lnet/minecraft/world/level/levelgen/structure/BoundingBox;)Z a
	isInside (III)Z c
	isInside (Lnet/minecraft/core/Vec3i;)Z b
	maxX ()I j
	maxY ()I k
	maxZ ()I l
	minX ()I g
	minY ()I h
	minZ ()I i
	move (III)Lnet/minecraft/world/level/levelgen/structure/BoundingBox; a
	move (Lnet/minecraft/core/Vec3i;)Lnet/minecraft/world/level/levelgen/structure/BoundingBox; a
	moved (III)Lnet/minecraft/world/level/levelgen/structure/BoundingBox; b
	orientBox (IIIIIIIIILnet/minecraft/core/Direction;)Lnet/minecraft/world/level/levelgen/structure/BoundingBox; a
net/minecraft/world/level/levelgen/structure/BuiltinStructureSets drt
	ANCIENT_CITIES q
	BURIED_TREASURES i
	DESERT_PYRAMIDS b
	END_CITIES p
	IGLOOS c
	JUNGLE_TEMPLES d
	MINESHAFTS j
	NETHER_COMPLEXES n
	NETHER_FOSSILS o
	OCEAN_MONUMENTS g
	OCEAN_RUINS m
	PILLAGER_OUTPOSTS f
	RUINED_PORTALS k
	SHIPWRECKS l
	STRONGHOLDS r
	SWAMP_HUTS e
	TRAIL_RUINS s
	VILLAGES a
	WOODLAND_MANSIONS h
	register (Ljava/lang/String;)Lnet/minecraft/resources/ResourceKey; a
net/minecraft/world/level/levelgen/structure/BuiltinStructures dru
	ANCIENT_CITY F
	BASTION_REMNANT s
	BURIED_TREASURE r
	DESERT_PYRAMID f
	END_CITY q
	FORTRESS o
	IGLOO g
	JUNGLE_TEMPLE e
	MINESHAFT b
	MINESHAFT_MESA c
	NETHER_FOSSIL p
	OCEAN_MONUMENT l
	OCEAN_RUIN_COLD m
	OCEAN_RUIN_WARM n
	PILLAGER_OUTPOST a
	RUINED_PORTAL_DESERT z
	RUINED_PORTAL_JUNGLE A
	RUINED_PORTAL_MOUNTAIN C
	RUINED_PORTAL_NETHER E
	RUINED_PORTAL_OCEAN D
	RUINED_PORTAL_STANDARD y
	RUINED_PORTAL_SWAMP B
	SHIPWRECK h
	SHIPWRECK_BEACHED i
	STRONGHOLD k
	SWAMP_HUT j
	TRAIL_RUINS G
	VILLAGE_DESERT u
	VILLAGE_PLAINS t
	VILLAGE_SAVANNA v
	VILLAGE_SNOWY w
	VILLAGE_TAIGA x
	WOODLAND_MANSION d
	createKey (Ljava/lang/String;)Lnet/minecraft/resources/ResourceKey; a
net/minecraft/world/level/levelgen/structure/LegacyStructureDataHandler drv
	CURRENT_TO_LEGACY_MAP a
	LEGACY_TO_CURRENT_MAP b
	OLD_STRUCTURE_REGISTRY_KEYS c
	currentKeys h
	dataMap e
	hasLegacyData d
	indexMap f
	legacyKeys g
	getLegacyStructureHandler (Lnet/minecraft/resources/ResourceKey;Lnet/minecraft/world/level/storage/DimensionDataStorage;)Lnet/minecraft/world/level/levelgen/structure/LegacyStructureDataHandler; a
	hasLegacyStart (IILjava/lang/String;)Z a
	isUnhandledStructureStart (II)Z a
	populateCaches (Lnet/minecraft/world/level/storage/DimensionDataStorage;)V a
	removeIndex (J)V a
	updateFromLegacy (Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/nbt/CompoundTag; a
	updateStructureStart (Lnet/minecraft/nbt/CompoundTag;Lnet/minecraft/world/level/ChunkPos;)Lnet/minecraft/nbt/CompoundTag; a
net/minecraft/world/level/levelgen/structure/PoolElementStructurePiece drw
	LOGGER d
	element a
	groundLevelDelta h
	junctions i
	position b
	rotation c
	structureTemplateManager j
	addAdditionalSaveData (Lnet/minecraft/world/level/levelgen/structure/pieces/StructurePieceSerializationContext;Lnet/minecraft/nbt/CompoundTag;)V a
	addJunction (Lnet/minecraft/world/level/levelgen/structure/pools/JigsawJunction;)V a
	getElement ()Lnet/minecraft/world/level/levelgen/structure/pools/StructurePoolElement; b
	getGroundLevelDelta ()I d
	getJunctions ()Ljava/util/List; e
	getPosition ()Lnet/minecraft/core/BlockPos; c
	getRotation ()Lnet/minecraft/world/level/block/Rotation; a
	move (III)V a
	place (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/StructureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Lnet/minecraft/core/BlockPos;Z)V a
	postProcess (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/StructureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/core/BlockPos;)V a
net/minecraft/world/level/levelgen/structure/PostPlacementProcessor drx
	NONE a
net/minecraft/world/level/levelgen/structure/ScatteredFeaturePiece dry
	depth c
	height b
	heightPosition d
	width a
	addAdditionalSaveData (Lnet/minecraft/world/level/levelgen/structure/pieces/StructurePieceSerializationContext;Lnet/minecraft/nbt/CompoundTag;)V a
	updateAverageGroundHeight (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;I)Z a
	updateHeightPositionToLowestGroundHeight (Lnet/minecraft/world/level/LevelAccessor;I)Z a
net/minecraft/world/level/levelgen/structure/SinglePieceStructure drz
	constructor d
	depth f
	width e
	findGenerationPoint (Lnet/minecraft/world/level/levelgen/structure/Structure$GenerationContext;)Ljava/util/Optional; a
	generatePieces (Lnet/minecraft/world/level/levelgen/structure/pieces/StructurePiecesBuilder;Lnet/minecraft/world/level/levelgen/structure/Structure$GenerationContext;)V a
net/minecraft/world/level/levelgen/structure/SinglePieceStructure$PieceConstructor drz$a
net/minecraft/world/level/levelgen/structure/Structure dsa
	CODEC b
	DIRECT_CODEC a
	settings c
	adjustBoundingBox (Lnet/minecraft/world/level/levelgen/structure/BoundingBox;)Lnet/minecraft/world/level/levelgen/structure/BoundingBox; a
	afterPlace (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/StructureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/world/level/levelgen/structure/pieces/PiecesContainer;)V a
	biomes ()Lnet/minecraft/core/HolderSet; a
	findGenerationPoint (Lnet/minecraft/world/level/levelgen/structure/Structure$GenerationContext;)Ljava/util/Optional; a
	findValidGenerationPoint (Lnet/minecraft/world/level/levelgen/structure/Structure$GenerationContext;)Ljava/util/Optional; b
	generate (Lnet/minecraft/core/RegistryAccess;Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/world/level/biome/BiomeSource;Lnet/minecraft/world/level/levelgen/RandomState;Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplateManager;JLnet/minecraft/world/level/ChunkPos;ILnet/minecraft/world/level/LevelHeightAccessor;Ljava/util/function/Predicate;)Lnet/minecraft/world/level/levelgen/structure/StructureStart; a
	getCornerHeights (Lnet/minecraft/world/level/levelgen/structure/Structure$GenerationContext;IIII)[I b
	getLowestY (Lnet/minecraft/world/level/levelgen/structure/Structure$GenerationContext;II)I a
	getLowestY (Lnet/minecraft/world/level/levelgen/structure/Structure$GenerationContext;IIII)I a
	getLowestYIn5by5BoxOffset7Blocks (Lnet/minecraft/world/level/levelgen/structure/Structure$GenerationContext;Lnet/minecraft/world/level/block/Rotation;)Lnet/minecraft/core/BlockPos; a
	isValidBiome (Lnet/minecraft/world/level/levelgen/structure/Structure$GenerationStub;Lnet/minecraft/world/level/levelgen/structure/Structure$GenerationContext;)Z a
	onTopOfChunkCenter (Lnet/minecraft/world/level/levelgen/structure/Structure$GenerationContext;Lnet/minecraft/world/level/levelgen/Heightmap$Types;Ljava/util/function/Consumer;)Ljava/util/Optional; a
	settingsCodec (Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/serialization/codecs/RecordCodecBuilder; a
	simpleCodec (Ljava/util/function/Function;)Lcom/mojang/serialization/Codec; a
	spawnOverrides ()Ljava/util/Map; b
	step ()Lnet/minecraft/world/level/levelgen/GenerationStep$Decoration; c
	terrainAdaptation ()Lnet/minecraft/world/level/levelgen/structure/TerrainAdjustment; d
	type ()Lnet/minecraft/world/level/levelgen/structure/StructureType; e
net/minecraft/world/level/levelgen/structure/Structure$GenerationContext dsa$a
	biomeSource c
	chunkGenerator b
	chunkPos h
	heightAccessor i
	random f
	randomState d
	registryAccess a
	seed g
	structureTemplateManager e
	validBiome j
	biomeSource ()Lnet/minecraft/world/level/biome/BiomeSource; c
	chunkGenerator ()Lnet/minecraft/world/level/chunk/ChunkGenerator; b
	chunkPos ()Lnet/minecraft/world/level/ChunkPos; h
	heightAccessor ()Lnet/minecraft/world/level/LevelHeightAccessor; i
	makeRandom (JLnet/minecraft/world/level/ChunkPos;)Lnet/minecraft/world/level/levelgen/WorldgenRandom; a
	random ()Lnet/minecraft/world/level/levelgen/WorldgenRandom; f
	randomState ()Lnet/minecraft/world/level/levelgen/RandomState; d
	registryAccess ()Lnet/minecraft/core/RegistryAccess; a
	seed ()J g
	structureTemplateManager ()Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplateManager; e
	validBiome ()Ljava/util/function/Predicate; j
net/minecraft/world/level/levelgen/structure/Structure$GenerationStub dsa$b
	generator b
	position a
	generator ()Lcom/mojang/datafixers/util/Either; c
	getPiecesBuilder ()Lnet/minecraft/world/level/levelgen/structure/pieces/StructurePiecesBuilder; a
	position ()Lnet/minecraft/core/BlockPos; b
net/minecraft/world/level/levelgen/structure/Structure$StructureSettings dsa$c
	CODEC a
	biomes b
	spawnOverrides c
	step d
	terrainAdaptation e
	biomes ()Lnet/minecraft/core/HolderSet; a
	spawnOverrides ()Ljava/util/Map; b
	step ()Lnet/minecraft/world/level/levelgen/GenerationStep$Decoration; c
	terrainAdaptation ()Lnet/minecraft/world/level/levelgen/structure/TerrainAdjustment; d
net/minecraft/world/level/levelgen/structure/StructureCheck dsb
	LOGGER a
	NO_STRUCTURE b
	biomeSource l
	biomes e
	chunkGenerator i
	dimension h
	featureChecks p
	fixerUpper n
	heightAccessor k
	loadedChunks o
	randomState j
	registryAccess d
	seed m
	storageAccess c
	structureConfigs f
	structureTemplateManager g
	canCreateStructure (Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/world/level/levelgen/structure/Structure;)Z b
	checkStart (Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/world/level/levelgen/structure/Structure;Z)Lnet/minecraft/world/level/levelgen/structure/StructureCheckResult; a
	checkStructureInfo (Lit/unimi/dsi/fastutil/objects/Object2IntMap;Lnet/minecraft/world/level/levelgen/structure/Structure;Z)Lnet/minecraft/world/level/levelgen/structure/StructureCheckResult; a
	deduplicateEmptyMap (Lit/unimi/dsi/fastutil/objects/Object2IntMap;)Lit/unimi/dsi/fastutil/objects/Object2IntMap; a
	incrementReference (Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/world/level/levelgen/structure/Structure;)V a
	loadStructures (Lnet/minecraft/nbt/CompoundTag;)Lit/unimi/dsi/fastutil/objects/Object2IntMap; a
	onStructureLoad (Lnet/minecraft/world/level/ChunkPos;Ljava/util/Map;)V a
	storeFullResults (JLit/unimi/dsi/fastutil/objects/Object2IntMap;)V a
	tryLoadFromStorage (Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/world/level/levelgen/structure/Structure;ZJ)Lnet/minecraft/world/level/levelgen/structure/StructureCheckResult; a
net/minecraft/world/level/levelgen/structure/StructureCheckResult dsc
	$VALUES d
	CHUNK_LOAD_NEEDED c
	START_NOT_PRESENT b
	START_PRESENT a
	$values ()[Lnet/minecraft/world/level/levelgen/structure/StructureCheckResult; a
net/minecraft/world/level/levelgen/structure/StructureFeatureIndexSavedData dsd
	TAG_All_INDEXES b
	TAG_REMAINING_INDEXES a
	all c
	remaining d
	addIndex (J)V a
	getAll ()Lit/unimi/dsi/fastutil/longs/LongSet; a
	hasStartIndex (J)Z b
	hasUnhandledIndex (J)Z c
	load (Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/world/level/levelgen/structure/StructureFeatureIndexSavedData; b
	removeIndex (J)V d
	save (Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/nbt/CompoundTag; a
net/minecraft/world/level/levelgen/structure/StructurePiece dse
	CAVE_AIR e
	LOGGER a
	SHAPE_CHECK_BLOCKS i
	boundingBox f
	genDepth g
	mirror c
	orientation b
	rotation d
	type h
	addAdditionalSaveData (Lnet/minecraft/world/level/levelgen/structure/pieces/StructurePieceSerializationContext;Lnet/minecraft/nbt/CompoundTag;)V a
	addChildren (Lnet/minecraft/world/level/levelgen/structure/StructurePiece;Lnet/minecraft/world/level/levelgen/structure/StructurePieceAccessor;Lnet/minecraft/util/RandomSource;)V a
	canBeReplaced (Lnet/minecraft/world/level/LevelReader;IIILnet/minecraft/world/level/levelgen/structure/BoundingBox;)Z a
	createBoundingBox (Ljava/util/stream/Stream;)Lnet/minecraft/world/level/levelgen/structure/BoundingBox; a
	createChest (Lnet/minecraft/world/level/ServerLevelAccessor;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPos;Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/world/level/block/state/BlockState;)Z a
	createChest (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Lnet/minecraft/util/RandomSource;IIILnet/minecraft/resources/ResourceLocation;)Z a
	createDispenser (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Lnet/minecraft/util/RandomSource;IIILnet/minecraft/core/Direction;Lnet/minecraft/resources/ResourceLocation;)Z a
	createTag (Lnet/minecraft/world/level/levelgen/structure/pieces/StructurePieceSerializationContext;)Lnet/minecraft/nbt/CompoundTag; a
	fillColumnDown (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/block/state/BlockState;IIILnet/minecraft/world/level/levelgen/structure/BoundingBox;)V b
	findCollisionPiece (Ljava/util/List;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;)Lnet/minecraft/world/level/levelgen/structure/StructurePiece; a
	generateAirBox (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;IIIIII)V a
	generateBox (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;IIIIIILnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/state/BlockState;Z)V a
	generateBox (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;IIIIIIZLnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/levelgen/structure/StructurePiece$BlockSelector;)V a
	generateBox (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/state/BlockState;Z)V a
	generateBox (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;ZLnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/levelgen/structure/StructurePiece$BlockSelector;)V a
	generateMaybeBox (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Lnet/minecraft/util/RandomSource;FIIIIIILnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/state/BlockState;ZZ)V a
	generateUpperHalfSphere (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;IIIIIILnet/minecraft/world/level/block/state/BlockState;Z)V a
	getBlock (Lnet/minecraft/world/level/BlockGetter;IIILnet/minecraft/world/level/levelgen/structure/BoundingBox;)Lnet/minecraft/world/level/block/state/BlockState; a
	getBoundingBox ()Lnet/minecraft/world/level/levelgen/structure/BoundingBox; f
	getGenDepth ()I g
	getLocatorPosition ()Lnet/minecraft/core/BlockPos; h
	getMirror ()Lnet/minecraft/world/level/block/Mirror; j
	getOrientation ()Lnet/minecraft/core/Direction; i
	getRandomHorizontalDirection (Lnet/minecraft/util/RandomSource;)Lnet/minecraft/core/Direction; a
	getRotation ()Lnet/minecraft/world/level/block/Rotation; a
	getType ()Lnet/minecraft/world/level/levelgen/structure/pieces/StructurePieceType; k
	getWorldPos (III)Lnet/minecraft/core/BlockPos$MutableBlockPos; b
	getWorldX (II)I a
	getWorldY (I)I b
	getWorldZ (II)I b
	isCloseToChunk (Lnet/minecraft/world/level/ChunkPos;I)Z a
	isInterior (Lnet/minecraft/world/level/LevelReader;IIILnet/minecraft/world/level/levelgen/structure/BoundingBox;)Z b
	isReplaceableByStructures (Lnet/minecraft/world/level/block/state/BlockState;)Z a
	makeBoundingBox (IIILnet/minecraft/core/Direction;III)Lnet/minecraft/world/level/levelgen/structure/BoundingBox; a
	maybeGenerateBlock (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Lnet/minecraft/util/RandomSource;FIIILnet/minecraft/world/level/block/state/BlockState;)V a
	move (III)V a
	placeBlock (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/block/state/BlockState;IIILnet/minecraft/world/level/levelgen/structure/BoundingBox;)V a
	postProcess (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/StructureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/core/BlockPos;)V a
	reorient (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/state/BlockState; a
	setGenDepth (I)V a
	setOrientation (Lnet/minecraft/core/Direction;)V a
net/minecraft/world/level/levelgen/structure/StructurePiece$BlockSelector dse$a
	next a
	getNext ()Lnet/minecraft/world/level/block/state/BlockState; a
	next (Lnet/minecraft/util/RandomSource;IIIZ)V a
net/minecraft/world/level/levelgen/structure/StructurePieceAccessor dsf
	addPiece (Lnet/minecraft/world/level/levelgen/structure/StructurePiece;)V a
	findCollisionPiece (Lnet/minecraft/world/level/levelgen/structure/BoundingBox;)Lnet/minecraft/world/level/levelgen/structure/StructurePiece; a
net/minecraft/world/level/levelgen/structure/StructureSet dsg
	CODEC b
	DIRECT_CODEC a
	placement d
	structures c
	entry (Lnet/minecraft/core/Holder;)Lnet/minecraft/world/level/levelgen/structure/StructureSet$StructureSelectionEntry; a
	entry (Lnet/minecraft/core/Holder;I)Lnet/minecraft/world/level/levelgen/structure/StructureSet$StructureSelectionEntry; a
	placement ()Lnet/minecraft/world/level/levelgen/structure/placement/StructurePlacement; b
	structures ()Ljava/util/List; a
net/minecraft/world/level/levelgen/structure/StructureSet$StructureSelectionEntry dsg$a
	CODEC a
	structure b
	weight c
	structure ()Lnet/minecraft/core/Holder; a
	weight ()I b
net/minecraft/world/level/levelgen/structure/StructureSpawnOverride dsh
	CODEC a
	boundingBox b
	spawns c
	boundingBox ()Lnet/minecraft/world/level/levelgen/structure/StructureSpawnOverride$BoundingBoxType; a
	spawns ()Lnet/minecraft/util/random/WeightedRandomList; b
net/minecraft/world/level/levelgen/structure/StructureSpawnOverride$BoundingBoxType dsh$a
	$VALUES e
	CODEC c
	PIECE a
	STRUCTURE b
	id d
	$values ()[Lnet/minecraft/world/level/levelgen/structure/StructureSpawnOverride$BoundingBoxType; a
	getSerializedName ()Ljava/lang/String; c
net/minecraft/world/level/levelgen/structure/StructureStart dsi
	INVALID_START b
	INVALID_START_ID a
	LOGGER c
	cachedBoundingBox h
	chunkPos f
	pieceContainer e
	references g
	structure d
	addReference ()V e
	canBeReferenced ()Z d
	createTag (Lnet/minecraft/world/level/levelgen/structure/pieces/StructurePieceSerializationContext;Lnet/minecraft/world/level/ChunkPos;)Lnet/minecraft/nbt/CompoundTag; a
	getBoundingBox ()Lnet/minecraft/world/level/levelgen/structure/BoundingBox; a
	getChunkPos ()Lnet/minecraft/world/level/ChunkPos; c
	getMaxReferences ()I g
	getPieces ()Ljava/util/List; i
	getReferences ()I f
	getStructure ()Lnet/minecraft/world/level/levelgen/structure/Structure; h
	isValid ()Z b
	loadStaticStart (Lnet/minecraft/world/level/levelgen/structure/pieces/StructurePieceSerializationContext;Lnet/minecraft/nbt/CompoundTag;J)Lnet/minecraft/world/level/levelgen/structure/StructureStart; a
	placeInChunk (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/StructureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Lnet/minecraft/world/level/ChunkPos;)V a
net/minecraft/world/level/levelgen/structure/StructureType dsj
	BURIED_TREASURE a
	DESERT_PYRAMID b
	END_CITY c
	FORTRESS d
	IGLOO e
	JIGSAW f
	JUNGLE_TEMPLE g
	MINESHAFT h
	NETHER_FOSSIL i
	OCEAN_MONUMENT j
	OCEAN_RUIN k
	RUINED_PORTAL l
	SHIPWRECK m
	STRONGHOLD n
	SWAMP_HUT o
	WOODLAND_MANSION p
	register (Ljava/lang/String;Lcom/mojang/serialization/Codec;)Lnet/minecraft/world/level/levelgen/structure/StructureType; a
net/minecraft/world/level/levelgen/structure/TemplateStructurePiece dsk
	LOGGER h
	placeSettings c
	template b
	templateName a
	templatePosition d
	addAdditionalSaveData (Lnet/minecraft/world/level/levelgen/structure/pieces/StructurePieceSerializationContext;Lnet/minecraft/nbt/CompoundTag;)V a
	getRotation ()Lnet/minecraft/world/level/block/Rotation; a
	handleDataMarker (Ljava/lang/String;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/ServerLevelAccessor;Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;)V a
	makeTemplateLocation ()Lnet/minecraft/resources/ResourceLocation; b
	move (III)V a
	placeSettings ()Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructurePlaceSettings; e
	postProcess (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/StructureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/core/BlockPos;)V a
	template ()Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplate; c
	templatePosition ()Lnet/minecraft/core/BlockPos; d
net/minecraft/world/level/levelgen/structure/TerrainAdjustment dsl
	$VALUES g
	BEARD_BOX d
	BEARD_THIN c
	BURY b
	CODEC e
	NONE a
	id f
	$values ()[Lnet/minecraft/world/level/levelgen/structure/TerrainAdjustment; a
	getSerializedName ()Ljava/lang/String; c
net/minecraft/world/level/levelgen/structure/pieces/PieceGenerator dsn
net/minecraft/world/level/levelgen/structure/pieces/PieceGenerator$Context dsn$a
	chunkGenerator b
	chunkPos d
	config a
	heightAccessor e
	random f
	seed g
	structureTemplateManager c
	chunkGenerator ()Lnet/minecraft/world/level/chunk/ChunkGenerator; b
	chunkPos ()Lnet/minecraft/world/level/ChunkPos; d
	config ()Lnet/minecraft/world/level/levelgen/feature/configurations/FeatureConfiguration; a
	heightAccessor ()Lnet/minecraft/world/level/LevelHeightAccessor; e
	random ()Lnet/minecraft/world/level/levelgen/WorldgenRandom; f
	seed ()J g
	structureTemplateManager ()Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplateManager; c
net/minecraft/world/level/levelgen/structure/pieces/PieceGeneratorSupplier dso
net/minecraft/world/level/levelgen/structure/pieces/PieceGeneratorSupplier$Context dso$a
	biomeSource b
	chunkGenerator a
	chunkPos e
	config f
	heightAccessor g
	randomState c
	registryAccess j
	seed d
	structureTemplateManager i
	validBiome h
	biomeSource ()Lnet/minecraft/world/level/biome/BiomeSource; b
	chunkGenerator ()Lnet/minecraft/world/level/chunk/ChunkGenerator; a
	chunkPos ()Lnet/minecraft/world/level/ChunkPos; e
	config ()Lnet/minecraft/world/level/levelgen/feature/configurations/FeatureConfiguration; f
	heightAccessor ()Lnet/minecraft/world/level/LevelHeightAccessor; g
	randomState ()Lnet/minecraft/world/level/levelgen/RandomState; c
	registryAccess ()Lnet/minecraft/core/RegistryAccess; j
	seed ()J d
	structureTemplateManager ()Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplateManager; i
	validBiome ()Ljava/util/function/Predicate; h
	validBiomeOnTop (Lnet/minecraft/world/level/levelgen/Heightmap$Types;)Z a
net/minecraft/world/level/levelgen/structure/pieces/PiecesContainer dsp
	JIGSAW_RENAME c
	LOGGER b
	RENAMES d
	pieces a
	calculateBoundingBox ()Lnet/minecraft/world/level/levelgen/structure/BoundingBox; b
	isEmpty ()Z a
	isInsidePiece (Lnet/minecraft/core/BlockPos;)Z a
	load (Lnet/minecraft/nbt/ListTag;Lnet/minecraft/world/level/levelgen/structure/pieces/StructurePieceSerializationContext;)Lnet/minecraft/world/level/levelgen/structure/pieces/PiecesContainer; a
	pieces ()Ljava/util/List; c
	save (Lnet/minecraft/world/level/levelgen/structure/pieces/StructurePieceSerializationContext;)Lnet/minecraft/nbt/Tag; a
net/minecraft/world/level/levelgen/structure/pieces/StructurePieceSerializationContext dsq
	registryAccess b
	resourceManager a
	structureTemplateManager c
	fromLevel (Lnet/minecraft/server/level/ServerLevel;)Lnet/minecraft/world/level/levelgen/structure/pieces/StructurePieceSerializationContext; a
	registryAccess ()Lnet/minecraft/core/RegistryAccess; b
	resourceManager ()Lnet/minecraft/server/packs/resources/ResourceManager; a
	structureTemplateManager ()Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplateManager; c
net/minecraft/world/level/levelgen/structure/pieces/StructurePieceType dsr
	BURIED_TREASURE_PIECE aa
	DESERT_PYRAMID_PIECE L
	END_CITY_PIECE Y
	IGLOO I
	JIGSAW ad
	JUNGLE_PYRAMID_PIECE G
	MINE_SHAFT_CORRIDOR a
	MINE_SHAFT_CROSSING b
	MINE_SHAFT_ROOM c
	MINE_SHAFT_STAIRS d
	NETHER_FORTRESS_BRIDGE_CROSSING e
	NETHER_FORTRESS_BRIDGE_END_FILLER f
	NETHER_FORTRESS_BRIDGE_STRAIGHT g
	NETHER_FORTRESS_CASTLE_CORRIDOR_STAIRS h
	NETHER_FORTRESS_CASTLE_CORRIDOR_T_BALCONY i
	NETHER_FORTRESS_CASTLE_ENTRANCE j
	NETHER_FORTRESS_CASTLE_SMALL_CORRIDOR m
	NETHER_FORTRESS_CASTLE_SMALL_CORRIDOR_CROSSING k
	NETHER_FORTRESS_CASTLE_SMALL_CORRIDOR_LEFT_TURN l
	NETHER_FORTRESS_CASTLE_SMALL_CORRIDOR_RIGHT_TURN n
	NETHER_FORTRESS_CASTLE_STALK_ROOM o
	NETHER_FORTRESS_MONSTER_THRONE p
	NETHER_FORTRESS_ROOM_CROSSING q
	NETHER_FORTRESS_STAIRS_ROOM r
	NETHER_FORTRESS_START s
	NETHER_FOSSIL ac
	OCEAN_MONUMENT_BUILDING M
	OCEAN_MONUMENT_CORE_ROOM N
	OCEAN_MONUMENT_DOUBLE_XY_ROOM P
	OCEAN_MONUMENT_DOUBLE_X_ROOM O
	OCEAN_MONUMENT_DOUBLE_YZ_ROOM R
	OCEAN_MONUMENT_DOUBLE_Y_ROOM Q
	OCEAN_MONUMENT_DOUBLE_Z_ROOM S
	OCEAN_MONUMENT_ENTRY_ROOM T
	OCEAN_MONUMENT_PENTHOUSE U
	OCEAN_MONUMENT_SIMPLE_ROOM V
	OCEAN_MONUMENT_SIMPLE_TOP_ROOM W
	OCEAN_MONUMENT_WING_ROOM X
	OCEAN_RUIN H
	RUINED_PORTAL J
	SHIPWRECK_PIECE ab
	STRONGHOLD_CHEST_CORRIDOR t
	STRONGHOLD_FILLER_CORRIDOR u
	STRONGHOLD_FIVE_CROSSING v
	STRONGHOLD_LEFT_TURN w
	STRONGHOLD_LIBRARY x
	STRONGHOLD_PORTAL_ROOM y
	STRONGHOLD_PRISON_HALL z
	STRONGHOLD_RIGHT_TURN A
	STRONGHOLD_ROOM_CROSSING B
	STRONGHOLD_STAIRS_DOWN C
	STRONGHOLD_START D
	STRONGHOLD_STRAIGHT E
	STRONGHOLD_STRAIGHT_STAIRS_DOWN F
	SWAMPLAND_HUT K
	WOODLAND_MANSION_PIECE Z
	setFullContextPieceId (Lnet/minecraft/world/level/levelgen/structure/pieces/StructurePieceType;Ljava/lang/String;)Lnet/minecraft/world/level/levelgen/structure/pieces/StructurePieceType; a
	setPieceId (Lnet/minecraft/world/level/levelgen/structure/pieces/StructurePieceType$ContextlessType;Ljava/lang/String;)Lnet/minecraft/world/level/levelgen/structure/pieces/StructurePieceType; a
	setTemplatePieceId (Lnet/minecraft/world/level/levelgen/structure/pieces/StructurePieceType$StructureTemplateType;Ljava/lang/String;)Lnet/minecraft/world/level/levelgen/structure/pieces/StructurePieceType; a
net/minecraft/world/level/levelgen/structure/pieces/StructurePieceType$ContextlessType dsr$a
net/minecraft/world/level/levelgen/structure/pieces/StructurePieceType$StructureTemplateType dsr$b
net/minecraft/world/level/levelgen/structure/pieces/StructurePiecesBuilder dss
	pieces a
	addPiece (Lnet/minecraft/world/level/levelgen/structure/StructurePiece;)V a
	build ()Lnet/minecraft/world/level/levelgen/structure/pieces/PiecesContainer; a
	clear ()V b
	findCollisionPiece (Lnet/minecraft/world/level/levelgen/structure/BoundingBox;)Lnet/minecraft/world/level/levelgen/structure/StructurePiece; a
	getBoundingBox ()Lnet/minecraft/world/level/levelgen/structure/BoundingBox; d
	isEmpty ()Z c
	moveBelowSeaLevel (IILnet/minecraft/util/RandomSource;I)I a
	moveInsideHeights (Lnet/minecraft/util/RandomSource;II)V a
	offsetPiecesVertically (I)V a
net/minecraft/world/level/levelgen/structure/placement/ConcentricRingsStructurePlacement dsu
	CODEC a
	count e
	distance c
	preferredBiomes f
	spread d
	codec (Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/Products$P9; b
	count ()I c
	distance ()I a
	isPlacementChunk (Lnet/minecraft/world/level/chunk/ChunkGeneratorStructureState;II)Z a
	preferredBiomes ()Lnet/minecraft/core/HolderSet; d
	spread ()I b
	type ()Lnet/minecraft/world/level/levelgen/structure/placement/StructurePlacementType; e
net/minecraft/world/level/levelgen/structure/placement/RandomSpreadStructurePlacement dsv
	CODEC a
	separation d
	spacing c
	spreadType e
	getPotentialStructureChunk (JII)Lnet/minecraft/world/level/ChunkPos; a
	isPlacementChunk (Lnet/minecraft/world/level/chunk/ChunkGeneratorStructureState;II)Z a
	separation ()I b
	spacing ()I a
	spreadType ()Lnet/minecraft/world/level/levelgen/structure/placement/RandomSpreadType; c
	type ()Lnet/minecraft/world/level/levelgen/structure/placement/StructurePlacementType; e
	validate (Lnet/minecraft/world/level/levelgen/structure/placement/RandomSpreadStructurePlacement;)Lcom/mojang/serialization/DataResult; a
net/minecraft/world/level/levelgen/structure/placement/RandomSpreadType dsw
	$VALUES e
	CODEC c
	LINEAR a
	TRIANGULAR b
	id d
	$values ()[Lnet/minecraft/world/level/levelgen/structure/placement/RandomSpreadType; a
	evaluate (Lnet/minecraft/util/RandomSource;I)I a
	getSerializedName ()Ljava/lang/String; c
net/minecraft/world/level/levelgen/structure/placement/StructurePlacement dsx
	CODEC b
	HIGHLY_ARBITRARY_RANDOM_SALT a
	exclusionZone g
	frequency e
	frequencyReductionMethod d
	locateOffset c
	salt f
	exclusionZone ()Ljava/util/Optional; j
	frequency ()F h
	frequencyReductionMethod ()Lnet/minecraft/world/level/levelgen/structure/placement/StructurePlacement$FrequencyReductionMethod; g
	getLocatePos (Lnet/minecraft/world/level/ChunkPos;)Lnet/minecraft/core/BlockPos; a
	isPlacementChunk (Lnet/minecraft/world/level/chunk/ChunkGeneratorStructureState;II)Z a
	isStructureChunk (Lnet/minecraft/world/level/chunk/ChunkGeneratorStructureState;II)Z b
	legacyArbitrarySaltProbabilityReducer (JIIIF)Z c
	legacyPillagerOutpostReducer (JIIIF)Z d
	legacyProbabilityReducerWithDouble (JIIIF)Z b
	locateOffset ()Lnet/minecraft/core/Vec3i; f
	placementCodec (Lcom/mojang/serialization/codecs/RecordCodecBuilder$Instance;)Lcom/mojang/datafixers/Products$P5; a
	probabilityReducer (JIIIF)Z a
	salt ()I i
	type ()Lnet/minecraft/world/level/levelgen/structure/placement/StructurePlacementType; e
net/minecraft/world/level/levelgen/structure/placement/StructurePlacement$ExclusionZone dsx$a
	CODEC a
	chunkCount c
	otherSet b
	chunkCount ()I b
	isPlacementForbidden (Lnet/minecraft/world/level/chunk/ChunkGeneratorStructureState;II)Z a
	otherSet ()Lnet/minecraft/core/Holder; a
net/minecraft/world/level/levelgen/structure/placement/StructurePlacement$FrequencyReducer dsx$b
net/minecraft/world/level/levelgen/structure/placement/StructurePlacement$FrequencyReductionMethod dsx$c
	$VALUES h
	CODEC e
	DEFAULT a
	LEGACY_TYPE_1 b
	LEGACY_TYPE_2 c
	LEGACY_TYPE_3 d
	name f
	reducer g
	$values ()[Lnet/minecraft/world/level/levelgen/structure/placement/StructurePlacement$FrequencyReductionMethod; a
	getSerializedName ()Ljava/lang/String; c
	shouldGenerate (JIIIF)Z a
net/minecraft/world/level/levelgen/structure/placement/StructurePlacementType dsy
	CONCENTRIC_RINGS b
	RANDOM_SPREAD a
	register (Ljava/lang/String;Lcom/mojang/serialization/Codec;)Lnet/minecraft/world/level/levelgen/structure/placement/StructurePlacementType; a
net/minecraft/world/level/levelgen/structure/pools/EmptyPoolElement dta
	CODEC a
	INSTANCE b
	getBoundingBox (Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplateManager;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Rotation;)Lnet/minecraft/world/level/levelgen/structure/BoundingBox; a
	getShuffledJigsawBlocks (Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplateManager;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Rotation;Lnet/minecraft/util/RandomSource;)Ljava/util/List; a
	getSize (Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplateManager;Lnet/minecraft/world/level/block/Rotation;)Lnet/minecraft/core/Vec3i; a
	getType ()Lnet/minecraft/world/level/levelgen/structure/pools/StructurePoolElementType; a
	place (Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplateManager;Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/StructureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Rotation;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Lnet/minecraft/util/RandomSource;Z)Z a
net/minecraft/world/level/levelgen/structure/pools/FeaturePoolElement dtb
	CODEC a
	defaultJigsawNBT c
	feature b
	fillDefaultJigsawNBT ()Lnet/minecraft/nbt/CompoundTag; b
	getBoundingBox (Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplateManager;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Rotation;)Lnet/minecraft/world/level/levelgen/structure/BoundingBox; a
	getShuffledJigsawBlocks (Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplateManager;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Rotation;Lnet/minecraft/util/RandomSource;)Ljava/util/List; a
	getSize (Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplateManager;Lnet/minecraft/world/level/block/Rotation;)Lnet/minecraft/core/Vec3i; a
	getType ()Lnet/minecraft/world/level/levelgen/structure/pools/StructurePoolElementType; a
	place (Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplateManager;Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/StructureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Rotation;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Lnet/minecraft/util/RandomSource;Z)Z a
net/minecraft/world/level/levelgen/structure/pools/JigsawJunction dtc
	deltaY d
	destProjection e
	sourceGroundY b
	sourceX a
	sourceZ c
	deserialize (Lcom/mojang/serialization/Dynamic;)Lnet/minecraft/world/level/levelgen/structure/pools/JigsawJunction; a
	getDeltaY ()I d
	getDestProjection ()Lnet/minecraft/world/level/levelgen/structure/pools/StructureTemplatePool$Projection; e
	getSourceGroundY ()I b
	getSourceX ()I a
	getSourceZ ()I c
	serialize (Lcom/mojang/serialization/DynamicOps;)Lcom/mojang/serialization/Dynamic; a
net/minecraft/world/level/levelgen/structure/pools/JigsawPlacement dtd
	LOGGER a
	addPieces (Lnet/minecraft/world/level/levelgen/RandomState;IZLnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplateManager;Lnet/minecraft/world/level/LevelHeightAccessor;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/Registry;Lnet/minecraft/world/level/levelgen/structure/PoolElementStructurePiece;Ljava/util/List;Lnet/minecraft/world/phys/shapes/VoxelShape;)V a
	addPieces (Lnet/minecraft/world/level/levelgen/structure/Structure$GenerationContext;Lnet/minecraft/core/Holder;Ljava/util/Optional;ILnet/minecraft/core/BlockPos;ZLjava/util/Optional;I)Ljava/util/Optional; a
	generateJigsaw (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/Holder;Lnet/minecraft/resources/ResourceLocation;ILnet/minecraft/core/BlockPos;Z)Z a
	getRandomNamedJigsaw (Lnet/minecraft/world/level/levelgen/structure/pools/StructurePoolElement;Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Rotation;Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplateManager;Lnet/minecraft/world/level/levelgen/WorldgenRandom;)Ljava/util/Optional; a
net/minecraft/world/level/levelgen/structure/pools/JigsawPlacement$PieceState dtd$a
	depth c
	free b
	piece a
net/minecraft/world/level/levelgen/structure/pools/JigsawPlacement$Placer dtd$b
	chunkGenerator c
	maxDepth b
	pieces e
	placing g
	pools a
	random f
	structureTemplateManager d
	readPoolName (Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplate$StructureBlockInfo;)Lnet/minecraft/resources/ResourceKey; a
	tryPlacingChildren (Lnet/minecraft/world/level/levelgen/structure/PoolElementStructurePiece;Lorg/apache/commons/lang3/mutable/MutableObject;IZLnet/minecraft/world/level/LevelHeightAccessor;Lnet/minecraft/world/level/levelgen/RandomState;)V a
net/minecraft/world/level/levelgen/structure/pools/LegacySinglePoolElement dte
	CODEC a
	getSettings (Lnet/minecraft/world/level/block/Rotation;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Z)Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructurePlaceSettings; a
	getType ()Lnet/minecraft/world/level/levelgen/structure/pools/StructurePoolElementType; a
net/minecraft/world/level/levelgen/structure/pools/ListPoolElement dtf
	CODEC a
	elements b
	getBoundingBox (Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplateManager;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Rotation;)Lnet/minecraft/world/level/levelgen/structure/BoundingBox; a
	getShuffledJigsawBlocks (Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplateManager;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Rotation;Lnet/minecraft/util/RandomSource;)Ljava/util/List; a
	getSize (Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplateManager;Lnet/minecraft/world/level/block/Rotation;)Lnet/minecraft/core/Vec3i; a
	getType ()Lnet/minecraft/world/level/levelgen/structure/pools/StructurePoolElementType; a
	place (Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplateManager;Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/StructureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Rotation;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Lnet/minecraft/util/RandomSource;Z)Z a
	setProjection (Lnet/minecraft/world/level/levelgen/structure/pools/StructureTemplatePool$Projection;)Lnet/minecraft/world/level/levelgen/structure/pools/StructurePoolElement; a
	setProjectionOnEachElement (Lnet/minecraft/world/level/levelgen/structure/pools/StructureTemplatePool$Projection;)V b
net/minecraft/world/level/levelgen/structure/pools/SinglePoolElement dtg
	CODEC b
	TEMPLATE_CODEC a
	processors d
	template c
	encodeTemplate (Lcom/mojang/datafixers/util/Either;Lcom/mojang/serialization/DynamicOps;Ljava/lang/Object;)Lcom/mojang/serialization/DataResult; a
	getBoundingBox (Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplateManager;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Rotation;)Lnet/minecraft/world/level/levelgen/structure/BoundingBox; a
	getDataMarkers (Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplateManager;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Rotation;Z)Ljava/util/List; a
	getSettings (Lnet/minecraft/world/level/block/Rotation;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Z)Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructurePlaceSettings; a
	getShuffledJigsawBlocks (Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplateManager;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Rotation;Lnet/minecraft/util/RandomSource;)Ljava/util/List; a
	getSize (Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplateManager;Lnet/minecraft/world/level/block/Rotation;)Lnet/minecraft/core/Vec3i; a
	getTemplate (Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplateManager;)Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplate; a
	getType ()Lnet/minecraft/world/level/levelgen/structure/pools/StructurePoolElementType; a
	place (Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplateManager;Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/StructureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Rotation;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Lnet/minecraft/util/RandomSource;Z)Z a
	processorsCodec ()Lcom/mojang/serialization/codecs/RecordCodecBuilder; b
	templateCodec ()Lcom/mojang/serialization/codecs/RecordCodecBuilder; c
net/minecraft/world/level/levelgen/structure/pools/StructurePoolElement dth
	CODEC e
	EMPTY a
	projection b
	empty ()Ljava/util/function/Function; g
	feature (Lnet/minecraft/core/Holder;)Ljava/util/function/Function; a
	getBoundingBox (Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplateManager;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Rotation;)Lnet/minecraft/world/level/levelgen/structure/BoundingBox; a
	getGroundLevelDelta ()I f
	getProjection ()Lnet/minecraft/world/level/levelgen/structure/pools/StructureTemplatePool$Projection; e
	getShuffledJigsawBlocks (Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplateManager;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Rotation;Lnet/minecraft/util/RandomSource;)Ljava/util/List; a
	getSize (Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplateManager;Lnet/minecraft/world/level/block/Rotation;)Lnet/minecraft/core/Vec3i; a
	getType ()Lnet/minecraft/world/level/levelgen/structure/pools/StructurePoolElementType; a
	handleDataMarker (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplate$StructureBlockInfo;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Rotation;Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;)V a
	legacy (Ljava/lang/String;)Ljava/util/function/Function; a
	legacy (Ljava/lang/String;Lnet/minecraft/core/Holder;)Ljava/util/function/Function; a
	list (Ljava/util/List;)Ljava/util/function/Function; a
	place (Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplateManager;Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/StructureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Rotation;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Lnet/minecraft/util/RandomSource;Z)Z a
	projectionCodec ()Lcom/mojang/serialization/codecs/RecordCodecBuilder; d
	setProjection (Lnet/minecraft/world/level/levelgen/structure/pools/StructureTemplatePool$Projection;)Lnet/minecraft/world/level/levelgen/structure/pools/StructurePoolElement; a
	single (Ljava/lang/String;)Ljava/util/function/Function; b
	single (Ljava/lang/String;Lnet/minecraft/core/Holder;)Ljava/util/function/Function; b
net/minecraft/world/level/levelgen/structure/pools/StructurePoolElementType dti
	EMPTY d
	FEATURE c
	LEGACY e
	LIST b
	SINGLE a
	register (Ljava/lang/String;Lcom/mojang/serialization/Codec;)Lnet/minecraft/world/level/levelgen/structure/pools/StructurePoolElementType; a
net/minecraft/world/level/levelgen/structure/pools/StructureTemplatePool dtj
	CODEC b
	CODEC_REFERENCE d
	DIRECT_CODEC a
	SIZE_UNSET c
	fallback g
	maxSize h
	rawTemplates e
	templates f
	getFallback ()Lnet/minecraft/core/Holder; a
	getMaxSize (Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplateManager;)I a
	getRandomTemplate (Lnet/minecraft/util/RandomSource;)Lnet/minecraft/world/level/levelgen/structure/pools/StructurePoolElement; a
	getShuffledTemplates (Lnet/minecraft/util/RandomSource;)Ljava/util/List; b
	size ()I b
net/minecraft/world/level/levelgen/structure/pools/StructureTemplatePool$Projection dtj$a
	$VALUES f
	CODEC c
	RIGID b
	TERRAIN_MATCHING a
	name d
	processors e
	$values ()[Lnet/minecraft/world/level/levelgen/structure/pools/StructureTemplatePool$Projection; d
	byName (Ljava/lang/String;)Lnet/minecraft/world/level/levelgen/structure/pools/StructureTemplatePool$Projection; a
	getName ()Ljava/lang/String; a
	getProcessors ()Lcom/google/common/collect/ImmutableList; b
	getSerializedName ()Ljava/lang/String; c
net/minecraft/world/level/levelgen/structure/structures/BuriedTreasurePieces dtl
net/minecraft/world/level/levelgen/structure/structures/BuriedTreasurePieces$BuriedTreasurePiece dtl$a
	addAdditionalSaveData (Lnet/minecraft/world/level/levelgen/structure/pieces/StructurePieceSerializationContext;Lnet/minecraft/nbt/CompoundTag;)V a
	isLiquid (Lnet/minecraft/world/level/block/state/BlockState;)Z b
	postProcess (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/StructureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/core/BlockPos;)V a
net/minecraft/world/level/levelgen/structure/structures/BuriedTreasureStructure dtm
	CODEC d
	findGenerationPoint (Lnet/minecraft/world/level/levelgen/structure/Structure$GenerationContext;)Ljava/util/Optional; a
	generatePieces (Lnet/minecraft/world/level/levelgen/structure/pieces/StructurePiecesBuilder;Lnet/minecraft/world/level/levelgen/structure/Structure$GenerationContext;)V a
	type ()Lnet/minecraft/world/level/levelgen/structure/StructureType; e
net/minecraft/world/level/levelgen/structure/structures/DesertPyramidPiece dtn
	DEPTH i
	WIDTH h
	hasPlacedChest j
	potentialSuspiciousSandWorldPositions k
	randomCollapsedRoofPos l
	addAdditionalSaveData (Lnet/minecraft/world/level/levelgen/structure/pieces/StructurePieceSerializationContext;Lnet/minecraft/nbt/CompoundTag;)V a
	addCellar (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;)V a
	addCellarRoom (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;)V b
	addCellarStairs (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;)V a
	getPotentialSuspiciousSandWorldPositions ()Ljava/util/List; b
	getRandomCollapsedRoofPos ()Lnet/minecraft/core/BlockPos; c
	placeCollapsedRoof (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;IIIII)V a
	placeCollapsedRoofPiece (Lnet/minecraft/world/level/WorldGenLevel;IIILnet/minecraft/world/level/levelgen/structure/BoundingBox;)V a
	placeSand (III)V c
	placeSandBox (IIIIII)V a
	postProcess (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/StructureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/core/BlockPos;)V a
net/minecraft/world/level/levelgen/structure/structures/DesertPyramidStructure dto
	CODEC d
	afterPlace (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/StructureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/world/level/levelgen/structure/pieces/PiecesContainer;)V a
	placeSuspiciousSand (Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/core/BlockPos;)V a
	type ()Lnet/minecraft/world/level/levelgen/structure/StructureType; e
net/minecraft/world/level/levelgen/structure/structures/EndCityPieces dtp
	FAT_TOWER_BRIDGES f
	FAT_TOWER_GENERATOR g
	HOUSE_TOWER_GENERATOR b
	MAX_GEN_DEPTH a
	TOWER_BRIDGES c
	TOWER_BRIDGE_GENERATOR e
	TOWER_GENERATOR d
	addHelper (Ljava/util/List;Lnet/minecraft/world/level/levelgen/structure/structures/EndCityPieces$EndCityPiece;)Lnet/minecraft/world/level/levelgen/structure/structures/EndCityPieces$EndCityPiece; a
	addPiece (Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplateManager;Lnet/minecraft/world/level/levelgen/structure/structures/EndCityPieces$EndCityPiece;Lnet/minecraft/core/BlockPos;Ljava/lang/String;Lnet/minecraft/world/level/block/Rotation;Z)Lnet/minecraft/world/level/levelgen/structure/structures/EndCityPieces$EndCityPiece; a
	recursiveChildren (Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplateManager;Lnet/minecraft/world/level/levelgen/structure/structures/EndCityPieces$SectionGenerator;ILnet/minecraft/world/level/levelgen/structure/structures/EndCityPieces$EndCityPiece;Lnet/minecraft/core/BlockPos;Ljava/util/List;Lnet/minecraft/util/RandomSource;)Z a
	startHouseTower (Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplateManager;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Rotation;Ljava/util/List;Lnet/minecraft/util/RandomSource;)V a
net/minecraft/world/level/levelgen/structure/structures/EndCityPieces$EndCityPiece dtp$a
	addAdditionalSaveData (Lnet/minecraft/world/level/levelgen/structure/pieces/StructurePieceSerializationContext;Lnet/minecraft/nbt/CompoundTag;)V a
	handleDataMarker (Ljava/lang/String;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/ServerLevelAccessor;Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;)V a
	makeResourceLocation (Ljava/lang/String;)Lnet/minecraft/resources/ResourceLocation; a
	makeSettings (ZLnet/minecraft/world/level/block/Rotation;)Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructurePlaceSettings; a
	makeTemplateLocation ()Lnet/minecraft/resources/ResourceLocation; b
net/minecraft/world/level/levelgen/structure/structures/EndCityPieces$SectionGenerator dtp$b
	generate (Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplateManager;ILnet/minecraft/world/level/levelgen/structure/structures/EndCityPieces$EndCityPiece;Lnet/minecraft/core/BlockPos;Ljava/util/List;Lnet/minecraft/util/RandomSource;)Z a
	init ()V a
net/minecraft/world/level/levelgen/structure/structures/EndCityStructure dtq
	CODEC d
	findGenerationPoint (Lnet/minecraft/world/level/levelgen/structure/Structure$GenerationContext;)Ljava/util/Optional; a
	generatePieces (Lnet/minecraft/world/level/levelgen/structure/pieces/StructurePiecesBuilder;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Rotation;Lnet/minecraft/world/level/levelgen/structure/Structure$GenerationContext;)V a
	type ()Lnet/minecraft/world/level/levelgen/structure/StructureType; e
net/minecraft/world/level/levelgen/structure/structures/IglooPieces dtr
	GENERATION_HEIGHT a
	OFFSETS f
	PIVOTS e
	STRUCTURE_LOCATION_IGLOO b
	STRUCTURE_LOCATION_LABORATORY d
	STRUCTURE_LOCATION_LADDER c
	addPieces (Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplateManager;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Rotation;Lnet/minecraft/world/level/levelgen/structure/StructurePieceAccessor;Lnet/minecraft/util/RandomSource;)V a
net/minecraft/world/level/levelgen/structure/structures/IglooPieces$IglooPiece dtr$a
	addAdditionalSaveData (Lnet/minecraft/world/level/levelgen/structure/pieces/StructurePieceSerializationContext;Lnet/minecraft/nbt/CompoundTag;)V a
	handleDataMarker (Ljava/lang/String;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/ServerLevelAccessor;Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;)V a
	makePosition (Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/core/BlockPos;I)Lnet/minecraft/core/BlockPos; a
	makeSettings (Lnet/minecraft/world/level/block/Rotation;Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructurePlaceSettings; a
	postProcess (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/StructureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/core/BlockPos;)V a
net/minecraft/world/level/levelgen/structure/structures/IglooStructure dts
	CODEC d
	findGenerationPoint (Lnet/minecraft/world/level/levelgen/structure/Structure$GenerationContext;)Ljava/util/Optional; a
	generatePieces (Lnet/minecraft/world/level/levelgen/structure/pieces/StructurePiecesBuilder;Lnet/minecraft/world/level/levelgen/structure/Structure$GenerationContext;)V a
	type ()Lnet/minecraft/world/level/levelgen/structure/StructureType; e
net/minecraft/world/level/levelgen/structure/structures/JigsawStructure dtt
	CODEC e
	MAX_TOTAL_STRUCTURE_RANGE d
	maxDepth h
	maxDistanceFromCenter l
	projectStartToHeightmap k
	startHeight i
	startJigsawName g
	startPool f
	useExpansionHack j
	findGenerationPoint (Lnet/minecraft/world/level/levelgen/structure/Structure$GenerationContext;)Ljava/util/Optional; a
	type ()Lnet/minecraft/world/level/levelgen/structure/StructureType; e
	verifyRange (Lnet/minecraft/world/level/levelgen/structure/structures/JigsawStructure;)Lcom/mojang/serialization/DataResult; a
net/minecraft/world/level/levelgen/structure/structures/JungleTemplePiece dtu
	DEPTH i
	STONE_SELECTOR n
	WIDTH h
	placedHiddenChest k
	placedMainChest j
	placedTrap1 l
	placedTrap2 m
	addAdditionalSaveData (Lnet/minecraft/world/level/levelgen/structure/pieces/StructurePieceSerializationContext;Lnet/minecraft/nbt/CompoundTag;)V a
	postProcess (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/StructureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/core/BlockPos;)V a
net/minecraft/world/level/levelgen/structure/structures/JungleTemplePiece$MossStoneSelector dtu$a
	next (Lnet/minecraft/util/RandomSource;IIIZ)V a
net/minecraft/world/level/levelgen/structure/structures/JungleTempleStructure dtv
	CODEC d
	type ()Lnet/minecraft/world/level/levelgen/structure/StructureType; e
net/minecraft/world/level/levelgen/structure/structures/MineshaftPieces dtw
	DEFAULT_SHAFT_HEIGHT d
	DEFAULT_SHAFT_LENGTH e
	DEFAULT_SHAFT_WIDTH c
	LOGGER b
	MAGIC_START_Y a
	MAX_CHAIN_HEIGHT g
	MAX_DEPTH h
	MAX_PILLAR_HEIGHT f
	createRandomShaftPiece (Lnet/minecraft/world/level/levelgen/structure/StructurePieceAccessor;Lnet/minecraft/util/RandomSource;IIILnet/minecraft/core/Direction;ILnet/minecraft/world/level/levelgen/structure/structures/MineshaftStructure$Type;)Lnet/minecraft/world/level/levelgen/structure/structures/MineshaftPieces$MineShaftPiece; a
	generateAndAddPiece (Lnet/minecraft/world/level/levelgen/structure/StructurePiece;Lnet/minecraft/world/level/levelgen/structure/StructurePieceAccessor;Lnet/minecraft/util/RandomSource;IIILnet/minecraft/core/Direction;I)Lnet/minecraft/world/level/levelgen/structure/structures/MineshaftPieces$MineShaftPiece; a
net/minecraft/world/level/levelgen/structure/structures/MineshaftPieces$MineShaftCorridor dtw$a
	hasPlacedSpider d
	hasRails b
	numSections h
	spiderCorridor c
	addAdditionalSaveData (Lnet/minecraft/world/level/levelgen/structure/pieces/StructurePieceSerializationContext;Lnet/minecraft/nbt/CompoundTag;)V a
	addChildren (Lnet/minecraft/world/level/levelgen/structure/StructurePiece;Lnet/minecraft/world/level/levelgen/structure/StructurePieceAccessor;Lnet/minecraft/util/RandomSource;)V a
	canHangChainBelow (Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Z b
	canPlaceColumnOnTopOf (Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Z a
	createChest (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Lnet/minecraft/util/RandomSource;IIILnet/minecraft/resources/ResourceLocation;)Z a
	fillColumnBetween (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/BlockPos$MutableBlockPos;II)V a
	fillColumnDown (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/block/state/BlockState;IIILnet/minecraft/world/level/levelgen/structure/BoundingBox;)V b
	fillPillarDownOrChainUp (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/block/state/BlockState;IIILnet/minecraft/world/level/levelgen/structure/BoundingBox;)V c
	findCorridorSize (Lnet/minecraft/world/level/levelgen/structure/StructurePieceAccessor;Lnet/minecraft/util/RandomSource;IIILnet/minecraft/core/Direction;)Lnet/minecraft/world/level/levelgen/structure/BoundingBox; a
	hasSturdyNeighbours (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;IIII)Z a
	maybePlaceCobWeb (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Lnet/minecraft/util/RandomSource;FIII)V a
	placeDoubleLowerOrUpperSupport (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;III)V a
	placeSupport (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;IIIIILnet/minecraft/util/RandomSource;)V a
	postProcess (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/StructureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/core/BlockPos;)V a
net/minecraft/world/level/levelgen/structure/structures/MineshaftPieces$MineShaftCrossing dtw$b
	direction b
	isTwoFloored c
	addAdditionalSaveData (Lnet/minecraft/world/level/levelgen/structure/pieces/StructurePieceSerializationContext;Lnet/minecraft/nbt/CompoundTag;)V a
	addChildren (Lnet/minecraft/world/level/levelgen/structure/StructurePiece;Lnet/minecraft/world/level/levelgen/structure/StructurePieceAccessor;Lnet/minecraft/util/RandomSource;)V a
	findCrossing (Lnet/minecraft/world/level/levelgen/structure/StructurePieceAccessor;Lnet/minecraft/util/RandomSource;IIILnet/minecraft/core/Direction;)Lnet/minecraft/world/level/levelgen/structure/BoundingBox; a
	placeSupportPillar (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;IIII)V a
	postProcess (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/StructureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/core/BlockPos;)V a
net/minecraft/world/level/levelgen/structure/structures/MineshaftPieces$MineShaftPiece dtw$c
	type a
	addAdditionalSaveData (Lnet/minecraft/world/level/levelgen/structure/pieces/StructurePieceSerializationContext;Lnet/minecraft/nbt/CompoundTag;)V a
	canBeReplaced (Lnet/minecraft/world/level/LevelReader;IIILnet/minecraft/world/level/levelgen/structure/BoundingBox;)Z a
	isInInvalidLocation (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;)Z a
	isSupportingBox (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;IIII)Z a
	setPlanksBlock (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Lnet/minecraft/world/level/block/state/BlockState;III)V a
net/minecraft/world/level/levelgen/structure/structures/MineshaftPieces$MineShaftRoom dtw$d
	childEntranceBoxes b
	addAdditionalSaveData (Lnet/minecraft/world/level/levelgen/structure/pieces/StructurePieceSerializationContext;Lnet/minecraft/nbt/CompoundTag;)V a
	addChildren (Lnet/minecraft/world/level/levelgen/structure/StructurePiece;Lnet/minecraft/world/level/levelgen/structure/StructurePieceAccessor;Lnet/minecraft/util/RandomSource;)V a
	move (III)V a
	postProcess (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/StructureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/core/BlockPos;)V a
net/minecraft/world/level/levelgen/structure/structures/MineshaftPieces$MineShaftStairs dtw$e
	addChildren (Lnet/minecraft/world/level/levelgen/structure/StructurePiece;Lnet/minecraft/world/level/levelgen/structure/StructurePieceAccessor;Lnet/minecraft/util/RandomSource;)V a
	findStairs (Lnet/minecraft/world/level/levelgen/structure/StructurePieceAccessor;Lnet/minecraft/util/RandomSource;IIILnet/minecraft/core/Direction;)Lnet/minecraft/world/level/levelgen/structure/BoundingBox; a
	postProcess (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/StructureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/core/BlockPos;)V a
net/minecraft/world/level/levelgen/structure/structures/MineshaftStructure dtx
	CODEC d
	type e
	findGenerationPoint (Lnet/minecraft/world/level/levelgen/structure/Structure$GenerationContext;)Ljava/util/Optional; a
	generatePiecesAndAdjust (Lnet/minecraft/world/level/levelgen/structure/pieces/StructurePiecesBuilder;Lnet/minecraft/world/level/levelgen/structure/Structure$GenerationContext;)I a
	type ()Lnet/minecraft/world/level/levelgen/structure/StructureType; e
net/minecraft/world/level/levelgen/structure/structures/MineshaftStructure$Type dtx$a
	$VALUES i
	BY_ID d
	CODEC c
	MESA b
	NORMAL a
	fenceState h
	name e
	planksState g
	woodState f
	$values ()[Lnet/minecraft/world/level/levelgen/structure/structures/MineshaftStructure$Type; f
	byId (I)Lnet/minecraft/world/level/levelgen/structure/structures/MineshaftStructure$Type; a
	getFenceState ()Lnet/minecraft/world/level/block/state/BlockState; e
	getName ()Ljava/lang/String; a
	getPlanksState ()Lnet/minecraft/world/level/block/state/BlockState; d
	getSerializedName ()Ljava/lang/String; c
	getWoodState ()Lnet/minecraft/world/level/block/state/BlockState; b
net/minecraft/world/level/levelgen/structure/structures/NetherFortressPieces dty
	BRIDGE_PIECE_WEIGHTS d
	CASTLE_PIECE_WEIGHTS e
	LOWEST_Y_POSITION c
	MAGIC_START_Y a
	MAX_DEPTH b
	findAndCreateBridgePieceFactory (Lnet/minecraft/world/level/levelgen/structure/structures/NetherFortressPieces$PieceWeight;Lnet/minecraft/world/level/levelgen/structure/StructurePieceAccessor;Lnet/minecraft/util/RandomSource;IIILnet/minecraft/core/Direction;I)Lnet/minecraft/world/level/levelgen/structure/structures/NetherFortressPieces$NetherBridgePiece; a
net/minecraft/world/level/levelgen/structure/structures/NetherFortressPieces$BridgeCrossing dty$a
	DEPTH c
	HEIGHT b
	WIDTH a
	addChildren (Lnet/minecraft/world/level/levelgen/structure/StructurePiece;Lnet/minecraft/world/level/levelgen/structure/StructurePieceAccessor;Lnet/minecraft/util/RandomSource;)V a
	createPiece (Lnet/minecraft/world/level/levelgen/structure/StructurePieceAccessor;IIILnet/minecraft/core/Direction;I)Lnet/minecraft/world/level/levelgen/structure/structures/NetherFortressPieces$BridgeCrossing; a
	postProcess (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/StructureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/core/BlockPos;)V a
net/minecraft/world/level/levelgen/structure/structures/NetherFortressPieces$BridgeEndFiller dty$b
	DEPTH c
	HEIGHT b
	WIDTH a
	selfSeed d
	addAdditionalSaveData (Lnet/minecraft/world/level/levelgen/structure/pieces/StructurePieceSerializationContext;Lnet/minecraft/nbt/CompoundTag;)V a
	createPiece (Lnet/minecraft/world/level/levelgen/structure/StructurePieceAccessor;Lnet/minecraft/util/RandomSource;IIILnet/minecraft/core/Direction;I)Lnet/minecraft/world/level/levelgen/structure/structures/NetherFortressPieces$BridgeEndFiller; a
	postProcess (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/StructureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/core/BlockPos;)V a
net/minecraft/world/level/levelgen/structure/structures/NetherFortressPieces$BridgeStraight dty$c
	DEPTH c
	HEIGHT b
	WIDTH a
	addChildren (Lnet/minecraft/world/level/levelgen/structure/StructurePiece;Lnet/minecraft/world/level/levelgen/structure/StructurePieceAccessor;Lnet/minecraft/util/RandomSource;)V a
	createPiece (Lnet/minecraft/world/level/levelgen/structure/StructurePieceAccessor;Lnet/minecraft/util/RandomSource;IIILnet/minecraft/core/Direction;I)Lnet/minecraft/world/level/levelgen/structure/structures/NetherFortressPieces$BridgeStraight; a
	postProcess (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/StructureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/core/BlockPos;)V a
net/minecraft/world/level/levelgen/structure/structures/NetherFortressPieces$CastleCorridorStairsPiece dty$d
	DEPTH c
	HEIGHT b
	WIDTH a
	addChildren (Lnet/minecraft/world/level/levelgen/structure/StructurePiece;Lnet/minecraft/world/level/levelgen/structure/StructurePieceAccessor;Lnet/minecraft/util/RandomSource;)V a
	createPiece (Lnet/minecraft/world/level/levelgen/structure/StructurePieceAccessor;IIILnet/minecraft/core/Direction;I)Lnet/minecraft/world/level/levelgen/structure/structures/NetherFortressPieces$CastleCorridorStairsPiece; a
	postProcess (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/StructureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/core/BlockPos;)V a
net/minecraft/world/level/levelgen/structure/structures/NetherFortressPieces$CastleCorridorTBalconyPiece dty$e
	DEPTH c
	HEIGHT b
	WIDTH a
	addChildren (Lnet/minecraft/world/level/levelgen/structure/StructurePiece;Lnet/minecraft/world/level/levelgen/structure/StructurePieceAccessor;Lnet/minecraft/util/RandomSource;)V a
	createPiece (Lnet/minecraft/world/level/levelgen/structure/StructurePieceAccessor;IIILnet/minecraft/core/Direction;I)Lnet/minecraft/world/level/levelgen/structure/structures/NetherFortressPieces$CastleCorridorTBalconyPiece; a
	postProcess (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/StructureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/core/BlockPos;)V a
net/minecraft/world/level/levelgen/structure/structures/NetherFortressPieces$CastleEntrance dty$f
	DEPTH c
	HEIGHT b
	WIDTH a
	addChildren (Lnet/minecraft/world/level/levelgen/structure/StructurePiece;Lnet/minecraft/world/level/levelgen/structure/StructurePieceAccessor;Lnet/minecraft/util/RandomSource;)V a
	createPiece (Lnet/minecraft/world/level/levelgen/structure/StructurePieceAccessor;Lnet/minecraft/util/RandomSource;IIILnet/minecraft/core/Direction;I)Lnet/minecraft/world/level/levelgen/structure/structures/NetherFortressPieces$CastleEntrance; a
	postProcess (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/StructureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/core/BlockPos;)V a
net/minecraft/world/level/levelgen/structure/structures/NetherFortressPieces$CastleSmallCorridorCrossingPiece dty$g
	DEPTH c
	HEIGHT b
	WIDTH a
	addChildren (Lnet/minecraft/world/level/levelgen/structure/StructurePiece;Lnet/minecraft/world/level/levelgen/structure/StructurePieceAccessor;Lnet/minecraft/util/RandomSource;)V a
	createPiece (Lnet/minecraft/world/level/levelgen/structure/StructurePieceAccessor;IIILnet/minecraft/core/Direction;I)Lnet/minecraft/world/level/levelgen/structure/structures/NetherFortressPieces$CastleSmallCorridorCrossingPiece; a
	postProcess (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/StructureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/core/BlockPos;)V a
net/minecraft/world/level/levelgen/structure/structures/NetherFortressPieces$CastleSmallCorridorLeftTurnPiece dty$h
	DEPTH c
	HEIGHT b
	WIDTH a
	isNeedingChest d
	addAdditionalSaveData (Lnet/minecraft/world/level/levelgen/structure/pieces/StructurePieceSerializationContext;Lnet/minecraft/nbt/CompoundTag;)V a
	addChildren (Lnet/minecraft/world/level/levelgen/structure/StructurePiece;Lnet/minecraft/world/level/levelgen/structure/StructurePieceAccessor;Lnet/minecraft/util/RandomSource;)V a
	createPiece (Lnet/minecraft/world/level/levelgen/structure/StructurePieceAccessor;Lnet/minecraft/util/RandomSource;IIILnet/minecraft/core/Direction;I)Lnet/minecraft/world/level/levelgen/structure/structures/NetherFortressPieces$CastleSmallCorridorLeftTurnPiece; a
	postProcess (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/StructureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/core/BlockPos;)V a
net/minecraft/world/level/levelgen/structure/structures/NetherFortressPieces$CastleSmallCorridorPiece dty$i
	DEPTH c
	HEIGHT b
	WIDTH a
	addChildren (Lnet/minecraft/world/level/levelgen/structure/StructurePiece;Lnet/minecraft/world/level/levelgen/structure/StructurePieceAccessor;Lnet/minecraft/util/RandomSource;)V a
	createPiece (Lnet/minecraft/world/level/levelgen/structure/StructurePieceAccessor;IIILnet/minecraft/core/Direction;I)Lnet/minecraft/world/level/levelgen/structure/structures/NetherFortressPieces$CastleSmallCorridorPiece; a
	postProcess (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/StructureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/core/BlockPos;)V a
net/minecraft/world/level/levelgen/structure/structures/NetherFortressPieces$CastleSmallCorridorRightTurnPiece dty$j
	DEPTH c
	HEIGHT b
	WIDTH a
	isNeedingChest d
	addAdditionalSaveData (Lnet/minecraft/world/level/levelgen/structure/pieces/StructurePieceSerializationContext;Lnet/minecraft/nbt/CompoundTag;)V a
	addChildren (Lnet/minecraft/world/level/levelgen/structure/StructurePiece;Lnet/minecraft/world/level/levelgen/structure/StructurePieceAccessor;Lnet/minecraft/util/RandomSource;)V a
	createPiece (Lnet/minecraft/world/level/levelgen/structure/StructurePieceAccessor;Lnet/minecraft/util/RandomSource;IIILnet/minecraft/core/Direction;I)Lnet/minecraft/world/level/levelgen/structure/structures/NetherFortressPieces$CastleSmallCorridorRightTurnPiece; a
	postProcess (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/StructureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/core/BlockPos;)V a
net/minecraft/world/level/levelgen/structure/structures/NetherFortressPieces$CastleStalkRoom dty$k
	DEPTH c
	HEIGHT b
	WIDTH a
	addChildren (Lnet/minecraft/world/level/levelgen/structure/StructurePiece;Lnet/minecraft/world/level/levelgen/structure/StructurePieceAccessor;Lnet/minecraft/util/RandomSource;)V a
	createPiece (Lnet/minecraft/world/level/levelgen/structure/StructurePieceAccessor;IIILnet/minecraft/core/Direction;I)Lnet/minecraft/world/level/levelgen/structure/structures/NetherFortressPieces$CastleStalkRoom; a
	postProcess (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/StructureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/core/BlockPos;)V a
net/minecraft/world/level/levelgen/structure/structures/NetherFortressPieces$MonsterThrone dty$l
	DEPTH c
	HEIGHT b
	WIDTH a
	hasPlacedSpawner d
	addAdditionalSaveData (Lnet/minecraft/world/level/levelgen/structure/pieces/StructurePieceSerializationContext;Lnet/minecraft/nbt/CompoundTag;)V a
	createPiece (Lnet/minecraft/world/level/levelgen/structure/StructurePieceAccessor;IIIILnet/minecraft/core/Direction;)Lnet/minecraft/world/level/levelgen/structure/structures/NetherFortressPieces$MonsterThrone; a
	postProcess (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/StructureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/core/BlockPos;)V a
net/minecraft/world/level/levelgen/structure/structures/NetherFortressPieces$NetherBridgePiece dty$m
	addAdditionalSaveData (Lnet/minecraft/world/level/levelgen/structure/pieces/StructurePieceSerializationContext;Lnet/minecraft/nbt/CompoundTag;)V a
	generateAndAddPiece (Lnet/minecraft/world/level/levelgen/structure/structures/NetherFortressPieces$StartPiece;Lnet/minecraft/world/level/levelgen/structure/StructurePieceAccessor;Lnet/minecraft/util/RandomSource;IIILnet/minecraft/core/Direction;IZ)Lnet/minecraft/world/level/levelgen/structure/StructurePiece; a
	generateChildForward (Lnet/minecraft/world/level/levelgen/structure/structures/NetherFortressPieces$StartPiece;Lnet/minecraft/world/level/levelgen/structure/StructurePieceAccessor;Lnet/minecraft/util/RandomSource;IIZ)Lnet/minecraft/world/level/levelgen/structure/StructurePiece; a
	generateChildLeft (Lnet/minecraft/world/level/levelgen/structure/structures/NetherFortressPieces$StartPiece;Lnet/minecraft/world/level/levelgen/structure/StructurePieceAccessor;Lnet/minecraft/util/RandomSource;IIZ)Lnet/minecraft/world/level/levelgen/structure/StructurePiece; b
	generateChildRight (Lnet/minecraft/world/level/levelgen/structure/structures/NetherFortressPieces$StartPiece;Lnet/minecraft/world/level/levelgen/structure/StructurePieceAccessor;Lnet/minecraft/util/RandomSource;IIZ)Lnet/minecraft/world/level/levelgen/structure/StructurePiece; c
	generatePiece (Lnet/minecraft/world/level/levelgen/structure/structures/NetherFortressPieces$StartPiece;Ljava/util/List;Lnet/minecraft/world/level/levelgen/structure/StructurePieceAccessor;Lnet/minecraft/util/RandomSource;IIILnet/minecraft/core/Direction;I)Lnet/minecraft/world/level/levelgen/structure/structures/NetherFortressPieces$NetherBridgePiece; a
	isOkBox (Lnet/minecraft/world/level/levelgen/structure/BoundingBox;)Z a
	updatePieceWeight (Ljava/util/List;)I a
net/minecraft/world/level/levelgen/structure/structures/NetherFortressPieces$PieceWeight dty$n
	allowInRow e
	maxPlaceCount d
	pieceClass a
	placeCount c
	weight b
	doPlace (I)Z a
	isValid ()Z a
net/minecraft/world/level/levelgen/structure/structures/NetherFortressPieces$RoomCrossing dty$o
	DEPTH c
	HEIGHT b
	WIDTH a
	addChildren (Lnet/minecraft/world/level/levelgen/structure/StructurePiece;Lnet/minecraft/world/level/levelgen/structure/StructurePieceAccessor;Lnet/minecraft/util/RandomSource;)V a
	createPiece (Lnet/minecraft/world/level/levelgen/structure/StructurePieceAccessor;IIILnet/minecraft/core/Direction;I)Lnet/minecraft/world/level/levelgen/structure/structures/NetherFortressPieces$RoomCrossing; a
	postProcess (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/StructureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/core/BlockPos;)V a
net/minecraft/world/level/levelgen/structure/structures/NetherFortressPieces$StairsRoom dty$p
	DEPTH c
	HEIGHT b
	WIDTH a
	addChildren (Lnet/minecraft/world/level/levelgen/structure/StructurePiece;Lnet/minecraft/world/level/levelgen/structure/StructurePieceAccessor;Lnet/minecraft/util/RandomSource;)V a
	createPiece (Lnet/minecraft/world/level/levelgen/structure/StructurePieceAccessor;IIIILnet/minecraft/core/Direction;)Lnet/minecraft/world/level/levelgen/structure/structures/NetherFortressPieces$StairsRoom; a
	postProcess (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/StructureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/core/BlockPos;)V a
net/minecraft/world/level/levelgen/structure/structures/NetherFortressPieces$StartPiece dty$q
	availableBridgePieces b
	availableCastlePieces c
	pendingChildren d
	previousPiece a
net/minecraft/world/level/levelgen/structure/structures/NetherFortressStructure dtz
	CODEC e
	FORTRESS_ENEMIES d
	findGenerationPoint (Lnet/minecraft/world/level/levelgen/structure/Structure$GenerationContext;)Ljava/util/Optional; a
	generatePieces (Lnet/minecraft/world/level/levelgen/structure/pieces/StructurePiecesBuilder;Lnet/minecraft/world/level/levelgen/structure/Structure$GenerationContext;)V a
	type ()Lnet/minecraft/world/level/levelgen/structure/StructureType; e
net/minecraft/world/level/levelgen/structure/structures/NetherFossilPieces dua
	FOSSILS a
	addPieces (Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplateManager;Lnet/minecraft/world/level/levelgen/structure/StructurePieceAccessor;Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPos;)V a
net/minecraft/world/level/levelgen/structure/structures/NetherFossilPieces$NetherFossilPiece dua$a
	addAdditionalSaveData (Lnet/minecraft/world/level/levelgen/structure/pieces/StructurePieceSerializationContext;Lnet/minecraft/nbt/CompoundTag;)V a
	handleDataMarker (Ljava/lang/String;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/ServerLevelAccessor;Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;)V a
	makeSettings (Lnet/minecraft/world/level/block/Rotation;)Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructurePlaceSettings; a
	postProcess (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/StructureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/core/BlockPos;)V a
net/minecraft/world/level/levelgen/structure/structures/NetherFossilStructure dub
	CODEC d
	height e
	findGenerationPoint (Lnet/minecraft/world/level/levelgen/structure/Structure$GenerationContext;)Ljava/util/Optional; a
	type ()Lnet/minecraft/world/level/levelgen/structure/StructureType; e
net/minecraft/world/level/levelgen/structure/structures/OceanMonumentPieces duc
net/minecraft/world/level/levelgen/structure/structures/OceanMonumentPieces$FitDoubleXRoom duc$a
	create (Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/levelgen/structure/structures/OceanMonumentPieces$RoomDefinition;Lnet/minecraft/util/RandomSource;)Lnet/minecraft/world/level/levelgen/structure/structures/OceanMonumentPieces$OceanMonumentPiece; a
	fits (Lnet/minecraft/world/level/levelgen/structure/structures/OceanMonumentPieces$RoomDefinition;)Z a
net/minecraft/world/level/levelgen/structure/structures/OceanMonumentPieces$FitDoubleXYRoom duc$b
	create (Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/levelgen/structure/structures/OceanMonumentPieces$RoomDefinition;Lnet/minecraft/util/RandomSource;)Lnet/minecraft/world/level/levelgen/structure/structures/OceanMonumentPieces$OceanMonumentPiece; a
	fits (Lnet/minecraft/world/level/levelgen/structure/structures/OceanMonumentPieces$RoomDefinition;)Z a
net/minecraft/world/level/levelgen/structure/structures/OceanMonumentPieces$FitDoubleYRoom duc$c
	create (Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/levelgen/structure/structures/OceanMonumentPieces$RoomDefinition;Lnet/minecraft/util/RandomSource;)Lnet/minecraft/world/level/levelgen/structure/structures/OceanMonumentPieces$OceanMonumentPiece; a
	fits (Lnet/minecraft/world/level/levelgen/structure/structures/OceanMonumentPieces$RoomDefinition;)Z a
net/minecraft/world/level/levelgen/structure/structures/OceanMonumentPieces$FitDoubleYZRoom duc$d
	create (Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/levelgen/structure/structures/OceanMonumentPieces$RoomDefinition;Lnet/minecraft/util/RandomSource;)Lnet/minecraft/world/level/levelgen/structure/structures/OceanMonumentPieces$OceanMonumentPiece; a
	fits (Lnet/minecraft/world/level/levelgen/structure/structures/OceanMonumentPieces$RoomDefinition;)Z a
net/minecraft/world/level/levelgen/structure/structures/OceanMonumentPieces$FitDoubleZRoom duc$e
	create (Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/levelgen/structure/structures/OceanMonumentPieces$RoomDefinition;Lnet/minecraft/util/RandomSource;)Lnet/minecraft/world/level/levelgen/structure/structures/OceanMonumentPieces$OceanMonumentPiece; a
	fits (Lnet/minecraft/world/level/levelgen/structure/structures/OceanMonumentPieces$RoomDefinition;)Z a
net/minecraft/world/level/levelgen/structure/structures/OceanMonumentPieces$FitSimpleRoom duc$f
	create (Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/levelgen/structure/structures/OceanMonumentPieces$RoomDefinition;Lnet/minecraft/util/RandomSource;)Lnet/minecraft/world/level/levelgen/structure/structures/OceanMonumentPieces$OceanMonumentPiece; a
	fits (Lnet/minecraft/world/level/levelgen/structure/structures/OceanMonumentPieces$RoomDefinition;)Z a
net/minecraft/world/level/levelgen/structure/structures/OceanMonumentPieces$FitSimpleTopRoom duc$g
	create (Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/levelgen/structure/structures/OceanMonumentPieces$RoomDefinition;Lnet/minecraft/util/RandomSource;)Lnet/minecraft/world/level/levelgen/structure/structures/OceanMonumentPieces$OceanMonumentPiece; a
	fits (Lnet/minecraft/world/level/levelgen/structure/structures/OceanMonumentPieces$RoomDefinition;)Z a
net/minecraft/world/level/levelgen/structure/structures/OceanMonumentPieces$MonumentBuilding duc$h
	BIOME_RANGE_CHECK a
	DEPTH E
	HEIGHT D
	TOP_POSITION F
	WIDTH C
	childPieces I
	coreRoom H
	sourceRoom G
	generateEntranceArchs (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;)V a
	generateEntranceWall (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;)V b
	generateLowerWall (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;)V d
	generateMiddleWall (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;)V e
	generateRoofPiece (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;)V c
	generateRoomGraph (Lnet/minecraft/util/RandomSource;)Ljava/util/List; b
	generateUpperWall (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;)V f
	generateWing (ZILnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;)V a
	postProcess (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/StructureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/core/BlockPos;)V a
net/minecraft/world/level/levelgen/structure/structures/OceanMonumentPieces$MonumentRoomFitter duc$i
	create (Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/levelgen/structure/structures/OceanMonumentPieces$RoomDefinition;Lnet/minecraft/util/RandomSource;)Lnet/minecraft/world/level/levelgen/structure/structures/OceanMonumentPieces$OceanMonumentPiece; a
	fits (Lnet/minecraft/world/level/levelgen/structure/structures/OceanMonumentPieces$RoomDefinition;)Z a
net/minecraft/world/level/levelgen/structure/structures/OceanMonumentPieces$OceanMonumentCoreRoom duc$j
	postProcess (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/StructureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/core/BlockPos;)V a
net/minecraft/world/level/levelgen/structure/structures/OceanMonumentPieces$OceanMonumentDoubleXRoom duc$k
	postProcess (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/StructureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/core/BlockPos;)V a
net/minecraft/world/level/levelgen/structure/structures/OceanMonumentPieces$OceanMonumentDoubleXYRoom duc$l
	postProcess (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/StructureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/core/BlockPos;)V a
net/minecraft/world/level/levelgen/structure/structures/OceanMonumentPieces$OceanMonumentDoubleYRoom duc$m
	postProcess (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/StructureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/core/BlockPos;)V a
net/minecraft/world/level/levelgen/structure/structures/OceanMonumentPieces$OceanMonumentDoubleYZRoom duc$n
	postProcess (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/StructureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/core/BlockPos;)V a
net/minecraft/world/level/levelgen/structure/structures/OceanMonumentPieces$OceanMonumentDoubleZRoom duc$o
	postProcess (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/StructureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/core/BlockPos;)V a
net/minecraft/world/level/levelgen/structure/structures/OceanMonumentPieces$OceanMonumentEntryRoom duc$p
	postProcess (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/StructureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/core/BlockPos;)V a
net/minecraft/world/level/levelgen/structure/structures/OceanMonumentPieces$OceanMonumentPenthouse duc$q
	postProcess (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/StructureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/core/BlockPos;)V a
net/minecraft/world/level/levelgen/structure/structures/OceanMonumentPieces$OceanMonumentPiece duc$r
	BASE_BLACK d
	BASE_GRAY b
	BASE_LIGHT c
	DOT_DECO_DATA h
	DO_FILL j
	FILL_BLOCK k
	FILL_KEEP l
	GRIDROOM_DEPTH n
	GRIDROOM_HEIGHT o
	GRIDROOM_LEFTWING_CONNECT_INDEX w
	GRIDROOM_RIGHTWING_CONNECT_INDEX x
	GRIDROOM_SOURCE_INDEX u
	GRIDROOM_TOP_CONNECT_INDEX v
	GRIDROOM_WIDTH m
	GRID_DEPTH q
	GRID_FLOOR_COUNT s
	GRID_HEIGHT r
	GRID_SIZE t
	GRID_WIDTH p
	LAMP_BLOCK i
	LEFTWING_INDEX y
	PENTHOUSE_INDEX A
	RIGHTWING_INDEX z
	roomDefinition B
	addAdditionalSaveData (Lnet/minecraft/world/level/levelgen/structure/pieces/StructurePieceSerializationContext;Lnet/minecraft/nbt/CompoundTag;)V a
	chunkIntersects (Lnet/minecraft/world/level/levelgen/structure/BoundingBox;IIII)Z a
	generateBoxOnFillOnly (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;IIIIIILnet/minecraft/world/level/block/state/BlockState;)V a
	generateDefaultFloor (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;IIZ)V a
	generateWaterBox (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;IIIIII)V b
	getRoomIndex (III)I c
	makeBoundingBox (Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/levelgen/structure/structures/OceanMonumentPieces$RoomDefinition;III)Lnet/minecraft/world/level/levelgen/structure/BoundingBox; a
	spawnElder (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;III)V a
net/minecraft/world/level/levelgen/structure/structures/OceanMonumentPieces$OceanMonumentSimpleRoom duc$s
	mainDesign a
	postProcess (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/StructureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/core/BlockPos;)V a
net/minecraft/world/level/levelgen/structure/structures/OceanMonumentPieces$OceanMonumentSimpleTopRoom duc$t
	postProcess (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/StructureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/core/BlockPos;)V a
net/minecraft/world/level/levelgen/structure/structures/OceanMonumentPieces$OceanMonumentWingRoom duc$u
	mainDesign a
	postProcess (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/StructureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/core/BlockPos;)V a
net/minecraft/world/level/levelgen/structure/structures/OceanMonumentPieces$RoomDefinition duc$v
	claimed d
	connections b
	hasOpening c
	index a
	isSource e
	scanIndex f
	countOpenings ()I c
	findSource (I)Z a
	isSpecial ()Z b
	setConnection (Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/levelgen/structure/structures/OceanMonumentPieces$RoomDefinition;)V a
	updateOpenings ()V a
net/minecraft/world/level/levelgen/structure/structures/OceanMonumentStructure dud
	CODEC d
	createTopPiece (Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/world/level/levelgen/WorldgenRandom;)Lnet/minecraft/world/level/levelgen/structure/StructurePiece; a
	findGenerationPoint (Lnet/minecraft/world/level/levelgen/structure/Structure$GenerationContext;)Ljava/util/Optional; a
	generatePieces (Lnet/minecraft/world/level/levelgen/structure/pieces/StructurePiecesBuilder;Lnet/minecraft/world/level/levelgen/structure/Structure$GenerationContext;)V a
	regeneratePiecesAfterLoad (Lnet/minecraft/world/level/ChunkPos;JLnet/minecraft/world/level/levelgen/structure/pieces/PiecesContainer;)Lnet/minecraft/world/level/levelgen/structure/pieces/PiecesContainer; a
	type ()Lnet/minecraft/world/level/levelgen/structure/StructureType; e
net/minecraft/world/level/levelgen/structure/structures/OceanRuinPieces due
	BIG_RUINS_BRICK g
	BIG_RUINS_CRACKED i
	BIG_RUINS_MOSSY h
	BIG_WARM_RUINS j
	COLD_SUSPICIOUS_BLOCK_PROCESSOR b
	RUINS_BRICK d
	RUINS_CRACKED e
	RUINS_MOSSY f
	WARM_RUINS c
	WARM_SUSPICIOUS_BLOCK_PROCESSOR a
	addClusterRuins (Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplateManager;Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/block/Rotation;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/levelgen/structure/structures/OceanRuinStructure;Lnet/minecraft/world/level/levelgen/structure/StructurePieceAccessor;)V a
	addPiece (Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplateManager;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Rotation;Lnet/minecraft/world/level/levelgen/structure/StructurePieceAccessor;Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/levelgen/structure/structures/OceanRuinStructure;ZF)V a
	addPieces (Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplateManager;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Rotation;Lnet/minecraft/world/level/levelgen/structure/StructurePieceAccessor;Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/levelgen/structure/structures/OceanRuinStructure;)V a
	allPositions (Lnet/minecraft/util/RandomSource;Lnet/minecraft/core/BlockPos;)Ljava/util/List; a
	archyRuleProcessor (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/world/level/block/Block;Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureProcessor; a
	getBigWarmRuin (Lnet/minecraft/util/RandomSource;)Lnet/minecraft/resources/ResourceLocation; b
	getSmallWarmRuin (Lnet/minecraft/util/RandomSource;)Lnet/minecraft/resources/ResourceLocation; a
net/minecraft/world/level/levelgen/structure/structures/OceanRuinPieces$OceanRuinPiece due$a
	biomeType h
	integrity i
	isLarge j
	addAdditionalSaveData (Lnet/minecraft/world/level/levelgen/structure/pieces/StructurePieceSerializationContext;Lnet/minecraft/nbt/CompoundTag;)V a
	create (Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplateManager;Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/world/level/levelgen/structure/structures/OceanRuinPieces$OceanRuinPiece; a
	getHeight (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)I a
	handleDataMarker (Ljava/lang/String;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/ServerLevelAccessor;Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;)V a
	makeSettings (Lnet/minecraft/world/level/block/Rotation;FLnet/minecraft/world/level/levelgen/structure/structures/OceanRuinStructure$Type;)Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructurePlaceSettings; a
	postProcess (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/StructureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/core/BlockPos;)V a
net/minecraft/world/level/levelgen/structure/structures/OceanRuinStructure duf
	CODEC d
	biomeTemp e
	clusterProbability g
	largeProbability f
	findGenerationPoint (Lnet/minecraft/world/level/levelgen/structure/Structure$GenerationContext;)Ljava/util/Optional; a
	generatePieces (Lnet/minecraft/world/level/levelgen/structure/pieces/StructurePiecesBuilder;Lnet/minecraft/world/level/levelgen/structure/Structure$GenerationContext;)V a
	type ()Lnet/minecraft/world/level/levelgen/structure/StructureType; e
net/minecraft/world/level/levelgen/structure/structures/OceanRuinStructure$Type duf$a
	$VALUES e
	CODEC c
	COLD b
	WARM a
	name d
	$values ()[Lnet/minecraft/world/level/levelgen/structure/structures/OceanRuinStructure$Type; b
	getName ()Ljava/lang/String; a
	getSerializedName ()Ljava/lang/String; c
net/minecraft/world/level/levelgen/structure/structures/RuinedPortalPiece dug
	LOGGER h
	PROBABILITY_OF_GOLD_GONE i
	PROBABILITY_OF_MAGMA_INSTEAD_OF_LAVA k
	PROBABILITY_OF_MAGMA_INSTEAD_OF_NETHERRACK j
	properties m
	verticalPlacement l
	addAdditionalSaveData (Lnet/minecraft/world/level/levelgen/structure/pieces/StructurePieceSerializationContext;Lnet/minecraft/nbt/CompoundTag;)V a
	addNetherrackDripColumn (Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;)V c
	addNetherrackDripColumnsBelowPortal (Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/LevelAccessor;)V a
	canBlockBeReplacedByNetherrackOrMagma (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;)Z a
	getBlockReplaceRule (Lnet/minecraft/world/level/block/Block;FLnet/minecraft/world/level/block/Block;)Lnet/minecraft/world/level/levelgen/structure/templatesystem/ProcessorRule; a
	getBlockReplaceRule (Lnet/minecraft/world/level/block/Block;Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/world/level/levelgen/structure/templatesystem/ProcessorRule; a
	getHeightMapType (Lnet/minecraft/world/level/levelgen/structure/structures/RuinedPortalPiece$VerticalPlacement;)Lnet/minecraft/world/level/levelgen/Heightmap$Types; a
	getLavaProcessorRule (Lnet/minecraft/world/level/levelgen/structure/structures/RuinedPortalPiece$VerticalPlacement;Lnet/minecraft/world/level/levelgen/structure/structures/RuinedPortalPiece$Properties;)Lnet/minecraft/world/level/levelgen/structure/templatesystem/ProcessorRule; a
	getSurfaceY (Lnet/minecraft/world/level/LevelAccessor;IILnet/minecraft/world/level/levelgen/structure/structures/RuinedPortalPiece$VerticalPlacement;)I a
	handleDataMarker (Ljava/lang/String;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/ServerLevelAccessor;Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;)V a
	makeSettings (Lnet/minecraft/world/level/block/Mirror;Lnet/minecraft/world/level/block/Rotation;Lnet/minecraft/world/level/levelgen/structure/structures/RuinedPortalPiece$VerticalPlacement;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/levelgen/structure/structures/RuinedPortalPiece$Properties;)Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructurePlaceSettings; a
	makeSettings (Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplateManager;Lnet/minecraft/nbt/CompoundTag;Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructurePlaceSettings; a
	maybeAddLeavesAbove (Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;)V b
	maybeAddVines (Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;)V a
	placeNetherrackOrMagma (Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;)V d
	postProcess (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/StructureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/core/BlockPos;)V a
	spreadNetherrack (Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/LevelAccessor;)V b
net/minecraft/world/level/levelgen/structure/structures/RuinedPortalPiece$Properties dug$a
	CODEC a
	airPocket d
	cold b
	mossiness c
	overgrown e
	replaceWithBlackstone g
	vines f
net/minecraft/world/level/levelgen/structure/structures/RuinedPortalPiece$VerticalPlacement dug$b
	$VALUES i
	CODEC g
	IN_MOUNTAIN d
	IN_NETHER f
	ON_LAND_SURFACE a
	ON_OCEAN_FLOOR c
	PARTLY_BURIED b
	UNDERGROUND e
	name h
	$values ()[Lnet/minecraft/world/level/levelgen/structure/structures/RuinedPortalPiece$VerticalPlacement; b
	byName (Ljava/lang/String;)Lnet/minecraft/world/level/levelgen/structure/structures/RuinedPortalPiece$VerticalPlacement; a
	getName ()Ljava/lang/String; a
	getSerializedName ()Ljava/lang/String; c
net/minecraft/world/level/levelgen/structure/structures/RuinedPortalStructure duh
	CODEC d
	MIN_Y_INDEX h
	PROBABILITY_OF_GIANT_PORTAL g
	STRUCTURE_LOCATION_GIANT_PORTALS f
	STRUCTURE_LOCATION_PORTALS e
	setups i
	findGenerationPoint (Lnet/minecraft/world/level/levelgen/structure/Structure$GenerationContext;)Ljava/util/Optional; a
	findSuitableY (Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/world/level/levelgen/structure/structures/RuinedPortalPiece$VerticalPlacement;ZIILnet/minecraft/world/level/levelgen/structure/BoundingBox;Lnet/minecraft/world/level/LevelHeightAccessor;Lnet/minecraft/world/level/levelgen/RandomState;)I a
	getRandomWithinInterval (Lnet/minecraft/util/RandomSource;II)I a
	isCold (Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Holder;)Z a
	sample (Lnet/minecraft/world/level/levelgen/WorldgenRandom;F)Z a
	type ()Lnet/minecraft/world/level/levelgen/structure/StructureType; e
net/minecraft/world/level/levelgen/structure/structures/RuinedPortalStructure$Setup duh$a
	CODEC a
	airPocketProbability c
	canBeCold g
	mossiness d
	overgrown e
	placement b
	replaceWithBlackstone h
	vines f
	weight i
	airPocketProbability ()F b
	canBeCold ()Z f
	mossiness ()F c
	overgrown ()Z d
	placement ()Lnet/minecraft/world/level/levelgen/structure/structures/RuinedPortalPiece$VerticalPlacement; a
	replaceWithBlackstone ()Z g
	vines ()Z e
	weight ()F h
net/minecraft/world/level/levelgen/structure/structures/ShipwreckPieces dui
	MARKERS_TO_LOOT d
	PIVOT a
	STRUCTURE_LOCATION_BEACHED b
	STRUCTURE_LOCATION_OCEAN c
	addPieces (Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplateManager;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Rotation;Lnet/minecraft/world/level/levelgen/structure/StructurePieceAccessor;Lnet/minecraft/util/RandomSource;Z)V a
net/minecraft/world/level/levelgen/structure/structures/ShipwreckPieces$ShipwreckPiece dui$a
	isBeached h
	addAdditionalSaveData (Lnet/minecraft/world/level/levelgen/structure/pieces/StructurePieceSerializationContext;Lnet/minecraft/nbt/CompoundTag;)V a
	handleDataMarker (Ljava/lang/String;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/ServerLevelAccessor;Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;)V a
	makeSettings (Lnet/minecraft/world/level/block/Rotation;)Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructurePlaceSettings; a
	postProcess (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/StructureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/core/BlockPos;)V a
net/minecraft/world/level/levelgen/structure/structures/ShipwreckStructure duj
	CODEC d
	isBeached e
	findGenerationPoint (Lnet/minecraft/world/level/levelgen/structure/Structure$GenerationContext;)Ljava/util/Optional; a
	generatePieces (Lnet/minecraft/world/level/levelgen/structure/pieces/StructurePiecesBuilder;Lnet/minecraft/world/level/levelgen/structure/Structure$GenerationContext;)V a
	type ()Lnet/minecraft/world/level/levelgen/structure/StructureType; e
net/minecraft/world/level/levelgen/structure/structures/StrongholdPieces duk
	CHECK_AIR f
	LOWEST_Y_POSITION e
	MAGIC_START_Y a
	MAX_DEPTH d
	SMALL_DOOR_HEIGHT c
	SMALL_DOOR_WIDTH b
	SMOOTH_STONE_SELECTOR k
	STRONGHOLD_PIECE_WEIGHTS g
	currentPieces h
	imposedPiece i
	totalWeight j
	findAndCreatePieceFactory (Ljava/lang/Class;Lnet/minecraft/world/level/levelgen/structure/StructurePieceAccessor;Lnet/minecraft/util/RandomSource;IIILnet/minecraft/core/Direction;I)Lnet/minecraft/world/level/levelgen/structure/structures/StrongholdPieces$StrongholdPiece; a
	generateAndAddPiece (Lnet/minecraft/world/level/levelgen/structure/structures/StrongholdPieces$StartPiece;Lnet/minecraft/world/level/levelgen/structure/StructurePieceAccessor;Lnet/minecraft/util/RandomSource;IIILnet/minecraft/core/Direction;I)Lnet/minecraft/world/level/levelgen/structure/StructurePiece; b
	generatePieceFromSmallDoor (Lnet/minecraft/world/level/levelgen/structure/structures/StrongholdPieces$StartPiece;Lnet/minecraft/world/level/levelgen/structure/StructurePieceAccessor;Lnet/minecraft/util/RandomSource;IIILnet/minecraft/core/Direction;I)Lnet/minecraft/world/level/levelgen/structure/structures/StrongholdPieces$StrongholdPiece; a
	resetPieces ()V a
	updatePieceWeight ()Z b
net/minecraft/world/level/levelgen/structure/structures/StrongholdPieces$ChestCorridor duk$a
	DEPTH c
	HEIGHT b
	WIDTH a
	hasPlacedChest d
	addAdditionalSaveData (Lnet/minecraft/world/level/levelgen/structure/pieces/StructurePieceSerializationContext;Lnet/minecraft/nbt/CompoundTag;)V a
	addChildren (Lnet/minecraft/world/level/levelgen/structure/StructurePiece;Lnet/minecraft/world/level/levelgen/structure/StructurePieceAccessor;Lnet/minecraft/util/RandomSource;)V a
	createPiece (Lnet/minecraft/world/level/levelgen/structure/StructurePieceAccessor;Lnet/minecraft/util/RandomSource;IIILnet/minecraft/core/Direction;I)Lnet/minecraft/world/level/levelgen/structure/structures/StrongholdPieces$ChestCorridor; a
	postProcess (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/StructureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/core/BlockPos;)V a
net/minecraft/world/level/levelgen/structure/structures/StrongholdPieces$FillerCorridor duk$b
	steps a
	addAdditionalSaveData (Lnet/minecraft/world/level/levelgen/structure/pieces/StructurePieceSerializationContext;Lnet/minecraft/nbt/CompoundTag;)V a
	findPieceBox (Lnet/minecraft/world/level/levelgen/structure/StructurePieceAccessor;Lnet/minecraft/util/RandomSource;IIILnet/minecraft/core/Direction;)Lnet/minecraft/world/level/levelgen/structure/BoundingBox; a
	postProcess (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/StructureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/core/BlockPos;)V a
net/minecraft/world/level/levelgen/structure/structures/StrongholdPieces$FiveCrossing duk$c
	DEPTH c
	HEIGHT b
	WIDTH a
	leftHigh i
	leftLow d
	rightHigh k
	rightLow j
	addAdditionalSaveData (Lnet/minecraft/world/level/levelgen/structure/pieces/StructurePieceSerializationContext;Lnet/minecraft/nbt/CompoundTag;)V a
	addChildren (Lnet/minecraft/world/level/levelgen/structure/StructurePiece;Lnet/minecraft/world/level/levelgen/structure/StructurePieceAccessor;Lnet/minecraft/util/RandomSource;)V a
	createPiece (Lnet/minecraft/world/level/levelgen/structure/StructurePieceAccessor;Lnet/minecraft/util/RandomSource;IIILnet/minecraft/core/Direction;I)Lnet/minecraft/world/level/levelgen/structure/structures/StrongholdPieces$FiveCrossing; a
	postProcess (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/StructureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/core/BlockPos;)V a
net/minecraft/world/level/levelgen/structure/structures/StrongholdPieces$LeftTurn duk$d
	addChildren (Lnet/minecraft/world/level/levelgen/structure/StructurePiece;Lnet/minecraft/world/level/levelgen/structure/StructurePieceAccessor;Lnet/minecraft/util/RandomSource;)V a
	createPiece (Lnet/minecraft/world/level/levelgen/structure/StructurePieceAccessor;Lnet/minecraft/util/RandomSource;IIILnet/minecraft/core/Direction;I)Lnet/minecraft/world/level/levelgen/structure/structures/StrongholdPieces$LeftTurn; a
	postProcess (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/StructureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/core/BlockPos;)V a
net/minecraft/world/level/levelgen/structure/structures/StrongholdPieces$Library duk$e
	DEPTH d
	HEIGHT b
	TALL_HEIGHT c
	WIDTH a
	isTall i
	addAdditionalSaveData (Lnet/minecraft/world/level/levelgen/structure/pieces/StructurePieceSerializationContext;Lnet/minecraft/nbt/CompoundTag;)V a
	createPiece (Lnet/minecraft/world/level/levelgen/structure/StructurePieceAccessor;Lnet/minecraft/util/RandomSource;IIILnet/minecraft/core/Direction;I)Lnet/minecraft/world/level/levelgen/structure/structures/StrongholdPieces$Library; a
	postProcess (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/StructureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/core/BlockPos;)V a
net/minecraft/world/level/levelgen/structure/structures/StrongholdPieces$PieceWeight duk$f
	maxPlaceCount d
	pieceClass a
	placeCount c
	weight b
	doPlace (I)Z a
	isValid ()Z a
net/minecraft/world/level/levelgen/structure/structures/StrongholdPieces$PortalRoom duk$g
	DEPTH c
	HEIGHT b
	WIDTH a
	hasPlacedSpawner d
	addAdditionalSaveData (Lnet/minecraft/world/level/levelgen/structure/pieces/StructurePieceSerializationContext;Lnet/minecraft/nbt/CompoundTag;)V a
	addChildren (Lnet/minecraft/world/level/levelgen/structure/StructurePiece;Lnet/minecraft/world/level/levelgen/structure/StructurePieceAccessor;Lnet/minecraft/util/RandomSource;)V a
	createPiece (Lnet/minecraft/world/level/levelgen/structure/StructurePieceAccessor;IIILnet/minecraft/core/Direction;I)Lnet/minecraft/world/level/levelgen/structure/structures/StrongholdPieces$PortalRoom; a
	postProcess (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/StructureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/core/BlockPos;)V a
net/minecraft/world/level/levelgen/structure/structures/StrongholdPieces$PrisonHall duk$h
	DEPTH c
	HEIGHT b
	WIDTH a
	addChildren (Lnet/minecraft/world/level/levelgen/structure/StructurePiece;Lnet/minecraft/world/level/levelgen/structure/StructurePieceAccessor;Lnet/minecraft/util/RandomSource;)V a
	createPiece (Lnet/minecraft/world/level/levelgen/structure/StructurePieceAccessor;Lnet/minecraft/util/RandomSource;IIILnet/minecraft/core/Direction;I)Lnet/minecraft/world/level/levelgen/structure/structures/StrongholdPieces$PrisonHall; a
	postProcess (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/StructureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/core/BlockPos;)V a
net/minecraft/world/level/levelgen/structure/structures/StrongholdPieces$RightTurn duk$i
	addChildren (Lnet/minecraft/world/level/levelgen/structure/StructurePiece;Lnet/minecraft/world/level/levelgen/structure/StructurePieceAccessor;Lnet/minecraft/util/RandomSource;)V a
	createPiece (Lnet/minecraft/world/level/levelgen/structure/StructurePieceAccessor;Lnet/minecraft/util/RandomSource;IIILnet/minecraft/core/Direction;I)Lnet/minecraft/world/level/levelgen/structure/structures/StrongholdPieces$RightTurn; a
	postProcess (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/StructureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/core/BlockPos;)V a
net/minecraft/world/level/levelgen/structure/structures/StrongholdPieces$RoomCrossing duk$j
	DEPTH c
	HEIGHT b
	WIDTH a
	type d
	addAdditionalSaveData (Lnet/minecraft/world/level/levelgen/structure/pieces/StructurePieceSerializationContext;Lnet/minecraft/nbt/CompoundTag;)V a
	addChildren (Lnet/minecraft/world/level/levelgen/structure/StructurePiece;Lnet/minecraft/world/level/levelgen/structure/StructurePieceAccessor;Lnet/minecraft/util/RandomSource;)V a
	createPiece (Lnet/minecraft/world/level/levelgen/structure/StructurePieceAccessor;Lnet/minecraft/util/RandomSource;IIILnet/minecraft/core/Direction;I)Lnet/minecraft/world/level/levelgen/structure/structures/StrongholdPieces$RoomCrossing; a
	postProcess (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/StructureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/core/BlockPos;)V a
net/minecraft/world/level/levelgen/structure/structures/StrongholdPieces$SmoothStoneSelector duk$k
	next (Lnet/minecraft/util/RandomSource;IIIZ)V a
net/minecraft/world/level/levelgen/structure/structures/StrongholdPieces$StairsDown duk$l
	DEPTH c
	HEIGHT b
	WIDTH a
	isSource d
	addAdditionalSaveData (Lnet/minecraft/world/level/levelgen/structure/pieces/StructurePieceSerializationContext;Lnet/minecraft/nbt/CompoundTag;)V a
	addChildren (Lnet/minecraft/world/level/levelgen/structure/StructurePiece;Lnet/minecraft/world/level/levelgen/structure/StructurePieceAccessor;Lnet/minecraft/util/RandomSource;)V a
	createPiece (Lnet/minecraft/world/level/levelgen/structure/StructurePieceAccessor;Lnet/minecraft/util/RandomSource;IIILnet/minecraft/core/Direction;I)Lnet/minecraft/world/level/levelgen/structure/structures/StrongholdPieces$StairsDown; a
	postProcess (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/StructureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/core/BlockPos;)V a
net/minecraft/world/level/levelgen/structure/structures/StrongholdPieces$StartPiece duk$m
	pendingChildren c
	portalRoomPiece b
	previousPiece a
	getLocatorPosition ()Lnet/minecraft/core/BlockPos; h
net/minecraft/world/level/levelgen/structure/structures/StrongholdPieces$Straight duk$n
	DEPTH c
	HEIGHT b
	WIDTH a
	leftChild d
	rightChild i
	addAdditionalSaveData (Lnet/minecraft/world/level/levelgen/structure/pieces/StructurePieceSerializationContext;Lnet/minecraft/nbt/CompoundTag;)V a
	addChildren (Lnet/minecraft/world/level/levelgen/structure/StructurePiece;Lnet/minecraft/world/level/levelgen/structure/StructurePieceAccessor;Lnet/minecraft/util/RandomSource;)V a
	createPiece (Lnet/minecraft/world/level/levelgen/structure/StructurePieceAccessor;Lnet/minecraft/util/RandomSource;IIILnet/minecraft/core/Direction;I)Lnet/minecraft/world/level/levelgen/structure/structures/StrongholdPieces$Straight; a
	postProcess (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/StructureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/core/BlockPos;)V a
net/minecraft/world/level/levelgen/structure/structures/StrongholdPieces$StraightStairsDown duk$o
	DEPTH c
	HEIGHT b
	WIDTH a
	addChildren (Lnet/minecraft/world/level/levelgen/structure/StructurePiece;Lnet/minecraft/world/level/levelgen/structure/StructurePieceAccessor;Lnet/minecraft/util/RandomSource;)V a
	createPiece (Lnet/minecraft/world/level/levelgen/structure/StructurePieceAccessor;Lnet/minecraft/util/RandomSource;IIILnet/minecraft/core/Direction;I)Lnet/minecraft/world/level/levelgen/structure/structures/StrongholdPieces$StraightStairsDown; a
	postProcess (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/StructureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/core/BlockPos;)V a
net/minecraft/world/level/levelgen/structure/structures/StrongholdPieces$StrongholdPiece duk$p
	entryDoor h
	addAdditionalSaveData (Lnet/minecraft/world/level/levelgen/structure/pieces/StructurePieceSerializationContext;Lnet/minecraft/nbt/CompoundTag;)V a
	generateSmallDoor (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Lnet/minecraft/world/level/levelgen/structure/structures/StrongholdPieces$StrongholdPiece$SmallDoorType;III)V a
	generateSmallDoorChildForward (Lnet/minecraft/world/level/levelgen/structure/structures/StrongholdPieces$StartPiece;Lnet/minecraft/world/level/levelgen/structure/StructurePieceAccessor;Lnet/minecraft/util/RandomSource;II)Lnet/minecraft/world/level/levelgen/structure/StructurePiece; a
	generateSmallDoorChildLeft (Lnet/minecraft/world/level/levelgen/structure/structures/StrongholdPieces$StartPiece;Lnet/minecraft/world/level/levelgen/structure/StructurePieceAccessor;Lnet/minecraft/util/RandomSource;II)Lnet/minecraft/world/level/levelgen/structure/StructurePiece; b
	generateSmallDoorChildRight (Lnet/minecraft/world/level/levelgen/structure/structures/StrongholdPieces$StartPiece;Lnet/minecraft/world/level/levelgen/structure/StructurePieceAccessor;Lnet/minecraft/util/RandomSource;II)Lnet/minecraft/world/level/levelgen/structure/StructurePiece; c
	isOkBox (Lnet/minecraft/world/level/levelgen/structure/BoundingBox;)Z a
	randomSmallDoor (Lnet/minecraft/util/RandomSource;)Lnet/minecraft/world/level/levelgen/structure/structures/StrongholdPieces$StrongholdPiece$SmallDoorType; b
net/minecraft/world/level/levelgen/structure/structures/StrongholdPieces$StrongholdPiece$SmallDoorType duk$p$a
	$VALUES e
	GRATES c
	IRON_DOOR d
	OPENING a
	WOOD_DOOR b
	$values ()[Lnet/minecraft/world/level/levelgen/structure/structures/StrongholdPieces$StrongholdPiece$SmallDoorType; a
net/minecraft/world/level/levelgen/structure/structures/StrongholdPieces$Turn duk$q
	DEPTH c
	HEIGHT b
	WIDTH a
net/minecraft/world/level/levelgen/structure/structures/StrongholdStructure dul
	CODEC d
	findGenerationPoint (Lnet/minecraft/world/level/levelgen/structure/Structure$GenerationContext;)Ljava/util/Optional; a
	generatePieces (Lnet/minecraft/world/level/levelgen/structure/pieces/StructurePiecesBuilder;Lnet/minecraft/world/level/levelgen/structure/Structure$GenerationContext;)V a
	type ()Lnet/minecraft/world/level/levelgen/structure/StructureType; e
net/minecraft/world/level/levelgen/structure/structures/SwampHutPiece dum
	spawnedCat i
	spawnedWitch h
	addAdditionalSaveData (Lnet/minecraft/world/level/levelgen/structure/pieces/StructurePieceSerializationContext;Lnet/minecraft/nbt/CompoundTag;)V a
	postProcess (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/StructureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/core/BlockPos;)V a
	spawnCat (Lnet/minecraft/world/level/ServerLevelAccessor;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;)V a
net/minecraft/world/level/levelgen/structure/structures/SwampHutStructure dun
	CODEC d
	findGenerationPoint (Lnet/minecraft/world/level/levelgen/structure/Structure$GenerationContext;)Ljava/util/Optional; a
	generatePieces (Lnet/minecraft/world/level/levelgen/structure/pieces/StructurePiecesBuilder;Lnet/minecraft/world/level/levelgen/structure/Structure$GenerationContext;)V a
	type ()Lnet/minecraft/world/level/levelgen/structure/StructureType; e
net/minecraft/world/level/levelgen/structure/structures/WoodlandMansionPieces duo
	generateMansion (Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplateManager;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Rotation;Ljava/util/List;Lnet/minecraft/util/RandomSource;)V a
	main ([Ljava/lang/String;)V a
net/minecraft/world/level/levelgen/structure/structures/WoodlandMansionPieces$FirstFloorRoomCollection duo$a
	get1x1 (Lnet/minecraft/util/RandomSource;)Ljava/lang/String; a
	get1x1Secret (Lnet/minecraft/util/RandomSource;)Ljava/lang/String; b
	get1x2FrontEntrance (Lnet/minecraft/util/RandomSource;Z)Ljava/lang/String; b
	get1x2Secret (Lnet/minecraft/util/RandomSource;)Ljava/lang/String; c
	get1x2SideEntrance (Lnet/minecraft/util/RandomSource;Z)Ljava/lang/String; a
	get2x2 (Lnet/minecraft/util/RandomSource;)Ljava/lang/String; d
	get2x2Secret (Lnet/minecraft/util/RandomSource;)Ljava/lang/String; e
net/minecraft/world/level/levelgen/structure/structures/WoodlandMansionPieces$FloorRoomCollection duo$b
	get1x1 (Lnet/minecraft/util/RandomSource;)Ljava/lang/String; a
	get1x1Secret (Lnet/minecraft/util/RandomSource;)Ljava/lang/String; b
	get1x2FrontEntrance (Lnet/minecraft/util/RandomSource;Z)Ljava/lang/String; b
	get1x2Secret (Lnet/minecraft/util/RandomSource;)Ljava/lang/String; c
	get1x2SideEntrance (Lnet/minecraft/util/RandomSource;Z)Ljava/lang/String; a
	get2x2 (Lnet/minecraft/util/RandomSource;)Ljava/lang/String; d
	get2x2Secret (Lnet/minecraft/util/RandomSource;)Ljava/lang/String; e
net/minecraft/world/level/levelgen/structure/structures/WoodlandMansionPieces$MansionGrid duo$c
	BLOCKED g
	CLEAR b
	CORRIDOR c
	DEFAULT_SIZE a
	ROOM d
	ROOM_1x1 h
	ROOM_1x2 i
	ROOM_2x2 j
	ROOM_CORRIDOR_FLAG n
	ROOM_DOOR_FLAG l
	ROOM_ID_MASK p
	ROOM_ORIGIN_FLAG k
	ROOM_STAIRS_FLAG m
	ROOM_TYPE_MASK o
	START_ROOM e
	TEST_ROOM f
	baseGrid r
	entranceX u
	entranceY v
	floorRooms t
	random q
	thirdFloorGrid s
	cleanEdges (Lnet/minecraft/world/level/levelgen/structure/structures/WoodlandMansionPieces$SimpleGrid;)Z a
	get1x2RoomDirection (Lnet/minecraft/world/level/levelgen/structure/structures/WoodlandMansionPieces$SimpleGrid;IIII)Lnet/minecraft/core/Direction; b
	identifyRooms (Lnet/minecraft/world/level/levelgen/structure/structures/WoodlandMansionPieces$SimpleGrid;Lnet/minecraft/world/level/levelgen/structure/structures/WoodlandMansionPieces$SimpleGrid;)V a
	isHouse (Lnet/minecraft/world/level/levelgen/structure/structures/WoodlandMansionPieces$SimpleGrid;II)Z a
	isRoomId (Lnet/minecraft/world/level/levelgen/structure/structures/WoodlandMansionPieces$SimpleGrid;IIII)Z a
	print ()V a
	recursiveCorridor (Lnet/minecraft/world/level/levelgen/structure/structures/WoodlandMansionPieces$SimpleGrid;IILnet/minecraft/core/Direction;I)V a
	setupThirdFloor ()V b
net/minecraft/world/level/levelgen/structure/structures/WoodlandMansionPieces$MansionPiecePlacer duo$d
	random b
	startX c
	startY d
	structureTemplateManager a
	addRoom1x1 (Ljava/util/List;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Rotation;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/levelgen/structure/structures/WoodlandMansionPieces$FloorRoomCollection;)V a
	addRoom1x2 (Ljava/util/List;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Rotation;Lnet/minecraft/core/Direction;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/levelgen/structure/structures/WoodlandMansionPieces$FloorRoomCollection;Z)V a
	addRoom2x2 (Ljava/util/List;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Rotation;Lnet/minecraft/core/Direction;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/levelgen/structure/structures/WoodlandMansionPieces$FloorRoomCollection;)V a
	addRoom2x2Secret (Ljava/util/List;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Rotation;Lnet/minecraft/world/level/levelgen/structure/structures/WoodlandMansionPieces$FloorRoomCollection;)V a
	createMansion (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Rotation;Ljava/util/List;Lnet/minecraft/world/level/levelgen/structure/structures/WoodlandMansionPieces$MansionGrid;)V a
	createRoof (Ljava/util/List;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Rotation;Lnet/minecraft/world/level/levelgen/structure/structures/WoodlandMansionPieces$SimpleGrid;Lnet/minecraft/world/level/levelgen/structure/structures/WoodlandMansionPieces$SimpleGrid;)V a
	entrance (Ljava/util/List;Lnet/minecraft/world/level/levelgen/structure/structures/WoodlandMansionPieces$PlacementData;)V a
	traverseInnerTurn (Ljava/util/List;Lnet/minecraft/world/level/levelgen/structure/structures/WoodlandMansionPieces$PlacementData;)V d
	traverseOuterWalls (Ljava/util/List;Lnet/minecraft/world/level/levelgen/structure/structures/WoodlandMansionPieces$PlacementData;Lnet/minecraft/world/level/levelgen/structure/structures/WoodlandMansionPieces$SimpleGrid;Lnet/minecraft/core/Direction;IIII)V a
	traverseTurn (Ljava/util/List;Lnet/minecraft/world/level/levelgen/structure/structures/WoodlandMansionPieces$PlacementData;)V c
	traverseWallPiece (Ljava/util/List;Lnet/minecraft/world/level/levelgen/structure/structures/WoodlandMansionPieces$PlacementData;)V b
net/minecraft/world/level/levelgen/structure/structures/WoodlandMansionPieces$PlacementData duo$e
	position b
	rotation a
	wallType c
net/minecraft/world/level/levelgen/structure/structures/WoodlandMansionPieces$SecondFloorRoomCollection duo$f
	get1x1 (Lnet/minecraft/util/RandomSource;)Ljava/lang/String; a
	get1x1Secret (Lnet/minecraft/util/RandomSource;)Ljava/lang/String; b
	get1x2FrontEntrance (Lnet/minecraft/util/RandomSource;Z)Ljava/lang/String; b
	get1x2Secret (Lnet/minecraft/util/RandomSource;)Ljava/lang/String; c
	get1x2SideEntrance (Lnet/minecraft/util/RandomSource;Z)Ljava/lang/String; a
	get2x2 (Lnet/minecraft/util/RandomSource;)Ljava/lang/String; d
	get2x2Secret (Lnet/minecraft/util/RandomSource;)Ljava/lang/String; e
net/minecraft/world/level/levelgen/structure/structures/WoodlandMansionPieces$SimpleGrid duo$g
	grid a
	height c
	valueIfOutside d
	width b
	edgesTo (III)Z b
	get (II)I a
	set (III)V a
	set (IIIII)V a
	setif (IIII)V a
net/minecraft/world/level/levelgen/structure/structures/WoodlandMansionPieces$ThirdFloorRoomCollection duo$h
net/minecraft/world/level/levelgen/structure/structures/WoodlandMansionPieces$WoodlandMansionPiece duo$i
	addAdditionalSaveData (Lnet/minecraft/world/level/levelgen/structure/pieces/StructurePieceSerializationContext;Lnet/minecraft/nbt/CompoundTag;)V a
	handleDataMarker (Ljava/lang/String;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/ServerLevelAccessor;Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;)V a
	makeLocation (Ljava/lang/String;)Lnet/minecraft/resources/ResourceLocation; a
	makeSettings (Lnet/minecraft/world/level/block/Mirror;Lnet/minecraft/world/level/block/Rotation;)Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructurePlaceSettings; a
	makeTemplateLocation ()Lnet/minecraft/resources/ResourceLocation; b
net/minecraft/world/level/levelgen/structure/structures/WoodlandMansionStructure dup
	CODEC d
	afterPlace (Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/StructureManager;Lnet/minecraft/world/level/chunk/ChunkGenerator;Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/world/level/levelgen/structure/pieces/PiecesContainer;)V a
	findGenerationPoint (Lnet/minecraft/world/level/levelgen/structure/Structure$GenerationContext;)Ljava/util/Optional; a
	generatePieces (Lnet/minecraft/world/level/levelgen/structure/pieces/StructurePiecesBuilder;Lnet/minecraft/world/level/levelgen/structure/Structure$GenerationContext;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Rotation;)V a
	type ()Lnet/minecraft/world/level/levelgen/structure/StructureType; e
net/minecraft/world/level/levelgen/structure/templatesystem/AlwaysTrueTest dur
	CODEC a
	INSTANCE b
	getType ()Lnet/minecraft/world/level/levelgen/structure/templatesystem/RuleTestType; a
	test (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/util/RandomSource;)Z a
net/minecraft/world/level/levelgen/structure/templatesystem/AxisAlignedLinearPosTest dus
	CODEC a
	axis g
	maxChance d
	maxDist f
	minChance b
	minDist e
	getType ()Lnet/minecraft/world/level/levelgen/structure/templatesystem/PosRuleTestType; a
	test (Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;Lnet/minecraft/util/RandomSource;)Z a
net/minecraft/world/level/levelgen/structure/templatesystem/BlackstoneReplaceProcessor dut
	CODEC a
	INSTANCE b
	replacements c
	getType ()Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureProcessorType; a
	processBlock (Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplate$StructureBlockInfo;Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplate$StructureBlockInfo;Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructurePlaceSettings;)Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplate$StructureBlockInfo; a
net/minecraft/world/level/levelgen/structure/templatesystem/BlockAgeProcessor duu
	CODEC a
	NON_MOSSY_REPLACEMENTS e
	PROBABILITY_OF_REPLACING_FULL_BLOCK b
	PROBABILITY_OF_REPLACING_OBSIDIAN d
	PROBABILITY_OF_REPLACING_STAIRS c
	mossiness f
	getRandomBlock (Lnet/minecraft/util/RandomSource;[Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/state/BlockState; a
	getRandomBlock (Lnet/minecraft/util/RandomSource;[Lnet/minecraft/world/level/block/state/BlockState;[Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/state/BlockState; a
	getRandomFacingStairs (Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/world/level/block/state/BlockState; a
	getType ()Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureProcessorType; a
	maybeReplaceFullStoneBlock (Lnet/minecraft/util/RandomSource;)Lnet/minecraft/world/level/block/state/BlockState; a
	maybeReplaceObsidian (Lnet/minecraft/util/RandomSource;)Lnet/minecraft/world/level/block/state/BlockState; d
	maybeReplaceSlab (Lnet/minecraft/util/RandomSource;)Lnet/minecraft/world/level/block/state/BlockState; b
	maybeReplaceStairs (Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/block/state/BlockState; a
	maybeReplaceWall (Lnet/minecraft/util/RandomSource;)Lnet/minecraft/world/level/block/state/BlockState; c
	processBlock (Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplate$StructureBlockInfo;Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplate$StructureBlockInfo;Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructurePlaceSettings;)Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplate$StructureBlockInfo; a
net/minecraft/world/level/levelgen/structure/templatesystem/BlockIgnoreProcessor duv
	AIR c
	CODEC a
	STRUCTURE_AND_AIR d
	STRUCTURE_BLOCK b
	toIgnore e
	getType ()Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureProcessorType; a
	processBlock (Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplate$StructureBlockInfo;Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplate$StructureBlockInfo;Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructurePlaceSettings;)Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplate$StructureBlockInfo; a
net/minecraft/world/level/levelgen/structure/templatesystem/BlockMatchTest duw
	CODEC a
	block b
	getType ()Lnet/minecraft/world/level/levelgen/structure/templatesystem/RuleTestType; a
	test (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/util/RandomSource;)Z a
net/minecraft/world/level/levelgen/structure/templatesystem/BlockRotProcessor dux
	CODEC a
	integrity c
	rottableBlocks b
	getType ()Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureProcessorType; a
	processBlock (Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplate$StructureBlockInfo;Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplate$StructureBlockInfo;Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructurePlaceSettings;)Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplate$StructureBlockInfo; a
net/minecraft/world/level/levelgen/structure/templatesystem/BlockStateMatchTest duy
	CODEC a
	blockState b
	getType ()Lnet/minecraft/world/level/levelgen/structure/templatesystem/RuleTestType; a
	test (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/util/RandomSource;)Z a
net/minecraft/world/level/levelgen/structure/templatesystem/CappedProcessor duz
	CODEC a
	delegate b
	limit c
	finalizeProcessing (Lnet/minecraft/world/level/ServerLevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;Ljava/util/List;Ljava/util/List;Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructurePlaceSettings;)Ljava/util/List; a
	getType ()Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureProcessorType; a
net/minecraft/world/level/levelgen/structure/templatesystem/GravityProcessor dva
	CODEC a
	heightmap b
	offset c
	getType ()Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureProcessorType; a
	processBlock (Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplate$StructureBlockInfo;Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplate$StructureBlockInfo;Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructurePlaceSettings;)Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplate$StructureBlockInfo; a
net/minecraft/world/level/levelgen/structure/templatesystem/JigsawReplacementProcessor dvb
	CODEC a
	INSTANCE b
	LOGGER c
	getType ()Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureProcessorType; a
	processBlock (Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplate$StructureBlockInfo;Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplate$StructureBlockInfo;Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructurePlaceSettings;)Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplate$StructureBlockInfo; a
net/minecraft/world/level/levelgen/structure/templatesystem/LavaSubmergedBlockProcessor dvc
	CODEC a
	INSTANCE b
	getType ()Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureProcessorType; a
	processBlock (Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplate$StructureBlockInfo;Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplate$StructureBlockInfo;Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructurePlaceSettings;)Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplate$StructureBlockInfo; a
net/minecraft/world/level/levelgen/structure/templatesystem/LinearPosTest dvd
	CODEC a
	maxChance d
	maxDist f
	minChance b
	minDist e
	getType ()Lnet/minecraft/world/level/levelgen/structure/templatesystem/PosRuleTestType; a
	test (Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;Lnet/minecraft/util/RandomSource;)Z a
net/minecraft/world/level/levelgen/structure/templatesystem/NopProcessor dve
	CODEC a
	INSTANCE b
	getType ()Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureProcessorType; a
net/minecraft/world/level/levelgen/structure/templatesystem/PosAlwaysTrueTest dvf
	CODEC a
	INSTANCE b
	getType ()Lnet/minecraft/world/level/levelgen/structure/templatesystem/PosRuleTestType; a
	test (Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;Lnet/minecraft/util/RandomSource;)Z a
net/minecraft/world/level/levelgen/structure/templatesystem/PosRuleTest dvg
	CODEC c
	getType ()Lnet/minecraft/world/level/levelgen/structure/templatesystem/PosRuleTestType; a
	test (Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;Lnet/minecraft/util/RandomSource;)Z a
net/minecraft/world/level/levelgen/structure/templatesystem/PosRuleTestType dvh
	ALWAYS_TRUE_TEST a
	AXIS_ALIGNED_LINEAR_POS_TEST c
	LINEAR_POS_TEST b
	register (Ljava/lang/String;Lcom/mojang/serialization/Codec;)Lnet/minecraft/world/level/levelgen/structure/templatesystem/PosRuleTestType; a
net/minecraft/world/level/levelgen/structure/templatesystem/ProcessorRule dvi
	CODEC b
	DEFAULT_BLOCK_ENTITY_MODIFIER a
	blockEntityModifier g
	inputPredicate c
	locPredicate d
	outputState f
	posPredicate e
	getOutputState ()Lnet/minecraft/world/level/block/state/BlockState; a
	getOutputTag (Lnet/minecraft/util/RandomSource;Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/nbt/CompoundTag; a
	test (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;Lnet/minecraft/util/RandomSource;)Z a
net/minecraft/world/level/levelgen/structure/templatesystem/ProtectedBlockProcessor dvj
	CODEC b
	cannotReplace a
	getType ()Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureProcessorType; a
	processBlock (Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplate$StructureBlockInfo;Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplate$StructureBlockInfo;Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructurePlaceSettings;)Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplate$StructureBlockInfo; a
net/minecraft/world/level/levelgen/structure/templatesystem/RandomBlockMatchTest dvk
	CODEC a
	block b
	probability d
	getType ()Lnet/minecraft/world/level/levelgen/structure/templatesystem/RuleTestType; a
	test (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/util/RandomSource;)Z a
net/minecraft/world/level/levelgen/structure/templatesystem/RandomBlockStateMatchTest dvl
	CODEC a
	blockState b
	probability d
	getType ()Lnet/minecraft/world/level/levelgen/structure/templatesystem/RuleTestType; a
	test (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/util/RandomSource;)Z a
net/minecraft/world/level/levelgen/structure/templatesystem/RuleProcessor dvm
	CODEC a
	rules b
	getType ()Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureProcessorType; a
	processBlock (Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplate$StructureBlockInfo;Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplate$StructureBlockInfo;Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructurePlaceSettings;)Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplate$StructureBlockInfo; a
net/minecraft/world/level/levelgen/structure/templatesystem/RuleTest dvn
	CODEC c
	getType ()Lnet/minecraft/world/level/levelgen/structure/templatesystem/RuleTestType; a
	test (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/util/RandomSource;)Z a
net/minecraft/world/level/levelgen/structure/templatesystem/RuleTestType dvo
	ALWAYS_TRUE_TEST a
	BLOCKSTATE_TEST c
	BLOCK_TEST b
	RANDOM_BLOCKSTATE_TEST f
	RANDOM_BLOCK_TEST e
	TAG_TEST d
	register (Ljava/lang/String;Lcom/mojang/serialization/Codec;)Lnet/minecraft/world/level/levelgen/structure/templatesystem/RuleTestType; a
net/minecraft/world/level/levelgen/structure/templatesystem/StructurePlaceSettings dvp
	boundingBox e
	finalizeEntities k
	ignoreEntities d
	keepLiquids f
	knownShape j
	mirror a
	palette h
	processors i
	random g
	rotation b
	rotationPivot c
	addProcessor (Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureProcessor;)Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructurePlaceSettings; a
	clearProcessors ()Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructurePlaceSettings; b
	copy ()Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructurePlaceSettings; a
	getBoundingBox ()Lnet/minecraft/world/level/levelgen/structure/BoundingBox; g
	getKnownShape ()Z h
	getMirror ()Lnet/minecraft/world/level/block/Mirror; c
	getProcessors ()Ljava/util/List; i
	getRandom (Lnet/minecraft/core/BlockPos;)Lnet/minecraft/util/RandomSource; b
	getRandomPalette (Ljava/util/List;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplate$Palette; a
	getRotation ()Lnet/minecraft/world/level/block/Rotation; d
	getRotationPivot ()Lnet/minecraft/core/BlockPos; e
	isIgnoreEntities ()Z f
	popProcessor (Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureProcessor;)Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructurePlaceSettings; b
	setBoundingBox (Lnet/minecraft/world/level/levelgen/structure/BoundingBox;)Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructurePlaceSettings; a
	setFinalizeEntities (Z)Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructurePlaceSettings; d
	setIgnoreEntities (Z)Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructurePlaceSettings; a
	setKeepLiquids (Z)Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructurePlaceSettings; b
	setKnownShape (Z)Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructurePlaceSettings; c
	setMirror (Lnet/minecraft/world/level/block/Mirror;)Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructurePlaceSettings; a
	setRandom (Lnet/minecraft/util/RandomSource;)Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructurePlaceSettings; a
	setRotation (Lnet/minecraft/world/level/block/Rotation;)Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructurePlaceSettings; a
	setRotationPivot (Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructurePlaceSettings; a
	shouldFinalizeEntities ()Z k
	shouldKeepLiquids ()Z j
net/minecraft/world/level/levelgen/structure/templatesystem/StructureProcessor dvq
	finalizeProcessing (Lnet/minecraft/world/level/ServerLevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;Ljava/util/List;Ljava/util/List;Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructurePlaceSettings;)Ljava/util/List; a
	getType ()Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureProcessorType; a
	processBlock (Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplate$StructureBlockInfo;Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplate$StructureBlockInfo;Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructurePlaceSettings;)Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplate$StructureBlockInfo; a
net/minecraft/world/level/levelgen/structure/templatesystem/StructureProcessorList dvr
	list a
	list ()Ljava/util/List; a
net/minecraft/world/level/levelgen/structure/templatesystem/StructureProcessorType dvs
	BLACKSTONE_REPLACE l
	BLOCK_AGE k
	BLOCK_IGNORE e
	BLOCK_ROT f
	CAPPED o
	DIRECT_CODEC c
	GRAVITY g
	JIGSAW_REPLACEMENT h
	LAVA_SUBMERGED_BLOCK m
	LIST_CODEC d
	LIST_OBJECT_CODEC b
	NOP j
	PROTECTED_BLOCKS n
	RULE i
	SINGLE_CODEC a
	register (Ljava/lang/String;Lcom/mojang/serialization/Codec;)Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureProcessorType; a
net/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplate dvt
	BLOCKS_TAG d
	BLOCK_TAG_NBT g
	BLOCK_TAG_POS e
	BLOCK_TAG_STATE f
	ENTITIES_TAG c
	ENTITY_TAG_BLOCKPOS i
	ENTITY_TAG_NBT j
	ENTITY_TAG_POS h
	PALETTE_LIST_TAG b
	PALETTE_TAG a
	SIZE_TAG k
	author o
	entityInfoList m
	palettes l
	size n
	addToLists (Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplate$StructureBlockInfo;Ljava/util/List;Ljava/util/List;Ljava/util/List;)V a
	buildInfoList (Ljava/util/List;Ljava/util/List;Ljava/util/List;)Ljava/util/List; a
	calculateConnectedPosition (Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructurePlaceSettings;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructurePlaceSettings;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/core/BlockPos; a
	calculateRelativePosition (Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructurePlaceSettings;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/core/BlockPos; a
	createEntityIgnoreException (Lnet/minecraft/world/level/ServerLevelAccessor;Lnet/minecraft/nbt/CompoundTag;)Ljava/util/Optional; a
	fillEntityList (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)V a
	fillFromWorld (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Vec3i;ZLnet/minecraft/world/level/block/Block;)V a
	filterBlocks (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructurePlaceSettings;Lnet/minecraft/world/level/block/Block;)Ljava/util/List; a
	filterBlocks (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructurePlaceSettings;Lnet/minecraft/world/level/block/Block;Z)Lit/unimi/dsi/fastutil/objects/ObjectArrayList; a
	getAuthor ()Ljava/lang/String; b
	getBoundingBox (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Rotation;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Mirror;)Lnet/minecraft/world/level/levelgen/structure/BoundingBox; a
	getBoundingBox (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Rotation;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Mirror;Lnet/minecraft/core/Vec3i;)Lnet/minecraft/world/level/levelgen/structure/BoundingBox; a
	getBoundingBox (Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructurePlaceSettings;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/levelgen/structure/BoundingBox; b
	getSize ()Lnet/minecraft/core/Vec3i; a
	getSize (Lnet/minecraft/world/level/block/Rotation;)Lnet/minecraft/core/Vec3i; a
	getZeroPositionWithTransform (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Mirror;Lnet/minecraft/world/level/block/Rotation;)Lnet/minecraft/core/BlockPos; a
	getZeroPositionWithTransform (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Mirror;Lnet/minecraft/world/level/block/Rotation;II)Lnet/minecraft/core/BlockPos; a
	load (Lnet/minecraft/core/HolderGetter;Lnet/minecraft/nbt/CompoundTag;)V a
	loadPalette (Lnet/minecraft/core/HolderGetter;Lnet/minecraft/nbt/ListTag;Lnet/minecraft/nbt/ListTag;)V a
	newDoubleList ([D)Lnet/minecraft/nbt/ListTag; a
	newIntegerList ([I)Lnet/minecraft/nbt/ListTag; a
	placeEntities (Lnet/minecraft/world/level/ServerLevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Mirror;Lnet/minecraft/world/level/block/Rotation;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Z)V a
	placeInWorld (Lnet/minecraft/world/level/ServerLevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructurePlaceSettings;Lnet/minecraft/util/RandomSource;I)Z a
	processBlockInfos (Lnet/minecraft/world/level/ServerLevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructurePlaceSettings;Ljava/util/List;)Ljava/util/List; a
	save (Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/nbt/CompoundTag; a
	setAuthor (Ljava/lang/String;)V a
	transform (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Mirror;Lnet/minecraft/world/level/block/Rotation;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/core/BlockPos; a
	transform (Lnet/minecraft/world/phys/Vec3;Lnet/minecraft/world/level/block/Mirror;Lnet/minecraft/world/level/block/Rotation;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/phys/Vec3; a
	updateShapeAtEdge (Lnet/minecraft/world/level/LevelAccessor;ILnet/minecraft/world/phys/shapes/DiscreteVoxelShape;III)V a
net/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplate$Palette dvt$a
	blocks a
	cache b
	blocks ()Ljava/util/List; a
	blocks (Lnet/minecraft/world/level/block/Block;)Ljava/util/List; a
net/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplate$SimplePalette dvt$b
	DEFAULT_BLOCK_STATE a
	ids b
	lastId c
	addMapping (Lnet/minecraft/world/level/block/state/BlockState;I)V a
	idFor (Lnet/minecraft/world/level/block/state/BlockState;)I a
	stateFor (I)Lnet/minecraft/world/level/block/state/BlockState; a
net/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplate$StructureBlockInfo dvt$c
	nbt c
	pos a
	state b
	nbt ()Lnet/minecraft/nbt/CompoundTag; c
	pos ()Lnet/minecraft/core/BlockPos; a
	state ()Lnet/minecraft/world/level/block/state/BlockState; b
net/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplate$StructureEntityInfo dvt$d
	blockPos b
	nbt c
	pos a
net/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplateManager dvu
	LISTER l
	LOGGER a
	STRUCTURE_DIRECTORY_NAME b
	STRUCTURE_FILE_EXTENSION d
	STRUCTURE_TEXT_FILE_EXTENSION e
	TEST_STRUCTURES_DIR c
	blockLookup k
	fixerUpper g
	generatedDir i
	resourceManager h
	sources j
	structureRepository f
	createAndValidatePathToStructure (Ljava/nio/file/Path;Lnet/minecraft/resources/ResourceLocation;Ljava/lang/String;)Ljava/nio/file/Path; b
	createPathToStructure (Ljava/nio/file/Path;Lnet/minecraft/resources/ResourceLocation;Ljava/lang/String;)Ljava/nio/file/Path; a
	get (Lnet/minecraft/resources/ResourceLocation;)Ljava/util/Optional; b
	getOrCreate (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplate; a
	getPathToGeneratedStructure (Lnet/minecraft/resources/ResourceLocation;Ljava/lang/String;)Ljava/nio/file/Path; a
	listFolderContents (Ljava/nio/file/Path;Ljava/lang/String;Ljava/lang/String;)Ljava/util/stream/Stream; a
	listGenerated ()Ljava/util/stream/Stream; d
	listGeneratedInNamespace (Ljava/nio/file/Path;)Ljava/util/stream/Stream; a
	listResources ()Ljava/util/stream/Stream; b
	listTemplates ()Ljava/util/stream/Stream; a
	listTestStructures ()Ljava/util/stream/Stream; c
	load (Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplateManager$InputStreamOpener;Ljava/util/function/Consumer;)Ljava/util/Optional; a
	loadFromGenerated (Lnet/minecraft/resources/ResourceLocation;)Ljava/util/Optional; h
	loadFromResource (Lnet/minecraft/resources/ResourceLocation;)Ljava/util/Optional; f
	loadFromSnbt (Lnet/minecraft/resources/ResourceLocation;Ljava/nio/file/Path;)Ljava/util/Optional; a
	loadFromTestStructures (Lnet/minecraft/resources/ResourceLocation;)Ljava/util/Optional; g
	onResourceManagerReload (Lnet/minecraft/server/packs/resources/ResourceManager;)V a
	readStructure (Ljava/io/InputStream;)Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplate; a
	readStructure (Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplate; a
	relativize (Ljava/nio/file/Path;Ljava/nio/file/Path;)Ljava/lang/String; a
	remove (Lnet/minecraft/resources/ResourceLocation;)V d
	save (Lnet/minecraft/resources/ResourceLocation;)Z c
	tryLoad (Lnet/minecraft/resources/ResourceLocation;)Ljava/util/Optional; e
net/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplateManager$InputStreamOpener dvu$a
net/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplateManager$Source dvu$b
	lister b
	loader a
	lister ()Ljava/util/function/Supplier; b
	loader ()Ljava/util/function/Function; a
net/minecraft/world/level/levelgen/structure/templatesystem/TagMatchTest dvv
	CODEC a
	tag b
	getType ()Lnet/minecraft/world/level/levelgen/structure/templatesystem/RuleTestType; a
	test (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/util/RandomSource;)Z a
net/minecraft/world/level/levelgen/structure/templatesystem/rule/blockentity/AppendLoot dvx
	CODEC a
	LOGGER b
	lootTable d
	apply (Lnet/minecraft/util/RandomSource;Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/nbt/CompoundTag; a
	getType ()Lnet/minecraft/world/level/levelgen/structure/templatesystem/rule/blockentity/RuleBlockEntityModifierType; a
net/minecraft/world/level/levelgen/structure/templatesystem/rule/blockentity/AppendStatic dvy
	CODEC a
	tag b
	apply (Lnet/minecraft/util/RandomSource;Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/nbt/CompoundTag; a
	getType ()Lnet/minecraft/world/level/levelgen/structure/templatesystem/rule/blockentity/RuleBlockEntityModifierType; a
net/minecraft/world/level/levelgen/structure/templatesystem/rule/blockentity/Clear dvz
	CODEC a
	INSTANCE b
	apply (Lnet/minecraft/util/RandomSource;Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/nbt/CompoundTag; a
	getType ()Lnet/minecraft/world/level/levelgen/structure/templatesystem/rule/blockentity/RuleBlockEntityModifierType; a
net/minecraft/world/level/levelgen/structure/templatesystem/rule/blockentity/Passthrough dwa
	CODEC b
	INSTANCE a
	apply (Lnet/minecraft/util/RandomSource;Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/nbt/CompoundTag; a
	getType ()Lnet/minecraft/world/level/levelgen/structure/templatesystem/rule/blockentity/RuleBlockEntityModifierType; a
net/minecraft/world/level/levelgen/structure/templatesystem/rule/blockentity/RuleBlockEntityModifier dwb
	CODEC c
	apply (Lnet/minecraft/util/RandomSource;Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/nbt/CompoundTag; a
	getType ()Lnet/minecraft/world/level/levelgen/structure/templatesystem/rule/blockentity/RuleBlockEntityModifierType; a
net/minecraft/world/level/levelgen/structure/templatesystem/rule/blockentity/RuleBlockEntityModifierType dwc
	APPEND_LOOT d
	APPEND_STATIC c
	CLEAR a
	PASSTHROUGH b
	register (Ljava/lang/String;Lcom/mojang/serialization/Codec;)Lnet/minecraft/world/level/levelgen/structure/templatesystem/rule/blockentity/RuleBlockEntityModifierType; a
net/minecraft/world/level/levelgen/synth/BlendedNoise dwe
	CODEC a
	DATA_CODEC f
	SCALE_RANGE e
	mainNoise i
	maxLimitNoise h
	maxValue o
	minLimitNoise g
	smearScaleMultiplier n
	xzFactor l
	xzMultiplier j
	xzScale p
	yFactor m
	yMultiplier k
	yScale q
	codec ()Lnet/minecraft/util/KeyDispatchDataCodec; c
	compute (Lnet/minecraft/world/level/levelgen/DensityFunction$FunctionContext;)D a
	createUnseeded (DDDDD)Lnet/minecraft/world/level/levelgen/synth/BlendedNoise; a
	maxValue ()D b
	minValue ()D a
	parityConfigString (Ljava/lang/StringBuilder;)V a
	withNewRandom (Lnet/minecraft/util/RandomSource;)Lnet/minecraft/world/level/levelgen/synth/BlendedNoise; a
net/minecraft/world/level/levelgen/synth/ImprovedNoise dwf
	SHIFT_UP_EPSILON d
	p e
	xo a
	yo b
	zo c
	gradDot (IDDD)D a
	noise (DDD)D a
	noise (DDDDD)D a
	noiseWithDerivative (DDD[D)D a
	p (I)I a
	parityConfigString (Ljava/lang/StringBuilder;)V a
	sampleAndLerp (IIIDDDD)D a
	sampleWithDerivative (IIIDDD[D)D a
net/minecraft/world/level/levelgen/synth/NoiseUtils dwg
	biasTowardsExtreme (DD)D a
	parityNoiseOctaveConfigString (Ljava/lang/StringBuilder;DDD[B)V a
	parityNoiseOctaveConfigString (Ljava/lang/StringBuilder;DDD[I)V a
net/minecraft/world/level/levelgen/synth/NormalNoise dwh
	INPUT_FACTOR a
	TARGET_DEVIATION b
	first d
	maxValue f
	parameters g
	second e
	valueFactor c
	create (Lnet/minecraft/util/RandomSource;I[D)Lnet/minecraft/world/level/levelgen/synth/NormalNoise; a
	create (Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/levelgen/synth/NormalNoise$NoiseParameters;)Lnet/minecraft/world/level/levelgen/synth/NormalNoise; b
	createLegacyNetherBiome (Lnet/minecraft/util/RandomSource;Lnet/minecraft/world/level/levelgen/synth/NormalNoise$NoiseParameters;)Lnet/minecraft/world/level/levelgen/synth/NormalNoise; a
	expectedDeviation (I)D a
	getValue (DDD)D a
	maxValue ()D a
	parameters ()Lnet/minecraft/world/level/levelgen/synth/NormalNoise$NoiseParameters; b
	parityConfigString (Ljava/lang/StringBuilder;)V a
net/minecraft/world/level/levelgen/synth/NormalNoise$NoiseParameters dwh$a
	CODEC b
	DIRECT_CODEC a
	amplitudes d
	firstOctave c
	amplitudes ()Lit/unimi/dsi/fastutil/doubles/DoubleList; b
	firstOctave ()I a
net/minecraft/world/level/levelgen/synth/PerlinNoise dwi
	ROUND_OFF a
	amplitudes d
	firstOctave c
	lowestFreqInputFactor f
	lowestFreqValueFactor e
	maxValue g
	noiseLevels b
	amplitudes ()Lit/unimi/dsi/fastutil/doubles/DoubleList; c
	create (Lnet/minecraft/util/RandomSource;ID[D)Lnet/minecraft/world/level/levelgen/synth/PerlinNoise; a
	create (Lnet/minecraft/util/RandomSource;ILit/unimi/dsi/fastutil/doubles/DoubleList;)Lnet/minecraft/world/level/levelgen/synth/PerlinNoise; b
	create (Lnet/minecraft/util/RandomSource;Ljava/util/List;)Lnet/minecraft/world/level/levelgen/synth/PerlinNoise; a
	create (Lnet/minecraft/util/RandomSource;Ljava/util/stream/IntStream;)Lnet/minecraft/world/level/levelgen/synth/PerlinNoise; b
	createLegacyForBlendedNoise (Lnet/minecraft/util/RandomSource;Ljava/util/stream/IntStream;)Lnet/minecraft/world/level/levelgen/synth/PerlinNoise; a
	createLegacyForLegacyNetherBiome (Lnet/minecraft/util/RandomSource;ILit/unimi/dsi/fastutil/doubles/DoubleList;)Lnet/minecraft/world/level/levelgen/synth/PerlinNoise; a
	edgeValue (D)D c
	firstOctave ()I b
	getOctaveNoise (I)Lnet/minecraft/world/level/levelgen/synth/ImprovedNoise; a
	getValue (DDD)D a
	getValue (DDDDDZ)D a
	makeAmplitudes (Lit/unimi/dsi/fastutil/ints/IntSortedSet;)Lcom/mojang/datafixers/util/Pair; a
	maxBrokenValue (D)D a
	maxValue ()D a
	parityConfigString (Ljava/lang/StringBuilder;)V a
	skipOctave (Lnet/minecraft/util/RandomSource;)V a
	wrap (D)D b
net/minecraft/world/level/levelgen/synth/PerlinSimplexNoise dwj
	highestFreqInputFactor c
	highestFreqValueFactor b
	noiseLevels a
	getValue (DDZ)D a
net/minecraft/world/level/levelgen/synth/SimplexNoise dwk
	F2 f
	G2 g
	GRADIENT a
	SQRT_3 e
	p h
	xo b
	yo c
	zo d
	dot ([IDDD)D a
	getCornerNoise3D (IDDDD)D a
	getValue (DD)D a
	getValue (DDD)D a
	p (I)I a
net/minecraft/world/level/lighting/BlockLightEngine dwm
	mutablePos g
	checkNode (J)V a
	getEmission (JLnet/minecraft/world/level/block/state/BlockState;)I a
	propagateDecrease (JJ)V a
	propagateIncrease (JJI)V a
	propagateLightSources (Lnet/minecraft/world/level/ChunkPos;)V b
net/minecraft/world/level/lighting/BlockLightSectionStorage dwn
	getLightValue (J)I a
net/minecraft/world/level/lighting/BlockLightSectionStorage$BlockDataLayerStorageMap dwn$a
	copy ()Lnet/minecraft/world/level/lighting/BlockLightSectionStorage$BlockDataLayerStorageMap; a
	copy ()Lnet/minecraft/world/level/lighting/DataLayerStorageMap; b
net/minecraft/world/level/lighting/ChunkSkyLightSources dwo
	NEGATIVE_INFINITY a
	SIZE b
	heightmap d
	minY c
	mutablePos1 e
	mutablePos2 f
	extendSourcesBelowWorld (I)I c
	fill (I)V a
	fillFrom (Lnet/minecraft/world/level/chunk/ChunkAccess;)V a
	findLowestSourceBelow (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)I a
	findLowestSourceY (Lnet/minecraft/world/level/chunk/ChunkAccess;III)I a
	get (I)I b
	getHighestLowestSourceY ()I a
	getLowestSourceY (II)I a
	index (II)I c
	isEdgeOccluded (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Z a
	set (II)V b
	update (Lnet/minecraft/world/level/BlockGetter;III)Z a
	updateEdge (Lnet/minecraft/world/level/BlockGetter;IILnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Z a
net/minecraft/world/level/lighting/DataLayerStorageMap dwp
	CACHE_SIZE b
	cacheEnabled e
	lastSectionKeys c
	lastSections d
	map a
	clearCache ()V c
	copy ()Lnet/minecraft/world/level/lighting/DataLayerStorageMap; b
	copyDataLayer (J)Lnet/minecraft/world/level/chunk/DataLayer; a
	disableCache ()V d
	getLayer (J)Lnet/minecraft/world/level/chunk/DataLayer; c
	hasLayer (J)Z b
	removeLayer (J)Lnet/minecraft/world/level/chunk/DataLayer; d
	setLayer (JLnet/minecraft/world/level/chunk/DataLayer;)V a
net/minecraft/world/level/lighting/DynamicGraphMinFixedPoint dwq
	NO_COMPUTED_LEVEL a
	SOURCE e
	computedLevels c
	hasWork d
	levelCount f
	priorityQueue b
	calculatePriority (II)I a
	checkEdge (JJIIIZ)V a
	checkEdge (JJIZ)V a
	checkNeighbor (JJIZ)V b
	checkNeighborsAfterUpdate (JIZ)V a
	checkNode (J)V f
	computeLevelFromNeighbor (JJI)I b
	getComputedLevel (JJI)I a
	getLevel (J)I c
	getQueueSize ()I c
	hasWork ()Z b
	isSource (J)Z a
	removeFromQueue (J)V e
	removeIf (Ljava/util/function/LongPredicate;)V a
	runUpdates (I)I b
	setLevel (JI)V a
net/minecraft/world/level/lighting/LayerLightEventListener dwr
	getDataLayerData (Lnet/minecraft/core/SectionPos;)Lnet/minecraft/world/level/chunk/DataLayer; a
	getLightValue (Lnet/minecraft/core/BlockPos;)I b
net/minecraft/world/level/lighting/LayerLightEventListener$DummyLightLayerEventListener dwr$a
	$VALUES b
	INSTANCE a
	$values ()[Lnet/minecraft/world/level/lighting/LayerLightEventListener$DummyLightLayerEventListener; c
	checkBlock (Lnet/minecraft/core/BlockPos;)V a
	getDataLayerData (Lnet/minecraft/core/SectionPos;)Lnet/minecraft/world/level/chunk/DataLayer; a
	getLightValue (Lnet/minecraft/core/BlockPos;)I b
	hasLightWork ()Z E_
	propagateLightSources (Lnet/minecraft/world/level/ChunkPos;)V b
	runLightUpdates ()I a
	setLightEnabled (Lnet/minecraft/world/level/ChunkPos;Z)V a
	updateSectionStatus (Lnet/minecraft/core/SectionPos;Z)V a
net/minecraft/world/level/lighting/LayerLightSectionStorage dws
	changedSections e
	chunkSource a
	columnsToRetainQueuedDataFor k
	columnsWithSources j
	hasInconsistencies h
	layer i
	queuedSections g
	sectionStates b
	sectionsAffectedByLightUpdates f
	toRemove l
	updatingSectionData d
	visibleSectionData c
	createDataLayer (J)Lnet/minecraft/world/level/chunk/DataLayer; g
	getDataLayer (JZ)Lnet/minecraft/world/level/chunk/DataLayer; a
	getDataLayer (Lnet/minecraft/world/level/lighting/DataLayerStorageMap;J)Lnet/minecraft/world/level/chunk/DataLayer; a
	getDataLayerData (J)Lnet/minecraft/world/level/chunk/DataLayer; d
	getDataLayerToWrite (J)Lnet/minecraft/world/level/chunk/DataLayer; c
	getDebugSectionType (J)Lnet/minecraft/world/level/lighting/LayerLightSectionStorage$SectionType; k
	getLightValue (J)I a
	getStoredLevel (J)I e
	hasInconsistencies ()Z a
	initializeSection (J)V l
	lightOnInSection (J)Z j
	markNewInconsistencies (Lnet/minecraft/world/level/lighting/LightEngine;)V a
	markSectionAndNeighborsAsAffected (J)V f
	onNodeAdded (J)V h
	onNodeRemoved (J)V i
	putSectionState (JB)V a
	queueSectionData (JLnet/minecraft/world/level/chunk/DataLayer;)V a
	removeSection (J)V m
	retainData (JZ)V c
	setLightEnabled (JZ)V b
	setStoredLevel (JI)V a
	storingLightForSection (J)Z b
	swapSectionMap ()V b
	updateSectionStatus (JZ)V d
net/minecraft/world/level/lighting/LayerLightSectionStorage$SectionState dws$a
	EMPTY a
	HAS_DATA_BIT d
	MAX_NEIGHBORS c
	MIN_NEIGHBORS b
	NEIGHBOR_COUNT_BITS e
	hasData (B)Z a
	hasData (BZ)B a
	neighborCount (B)I b
	neighborCount (BI)B a
	type (B)Lnet/minecraft/world/level/lighting/LayerLightSectionStorage$SectionType; c
net/minecraft/world/level/lighting/LayerLightSectionStorage$SectionType dws$b
	$VALUES e
	EMPTY a
	LIGHT_AND_DATA c
	LIGHT_ONLY b
	display d
	$values ()[Lnet/minecraft/world/level/lighting/LayerLightSectionStorage$SectionType; b
	display ()Ljava/lang/String; a
net/minecraft/world/level/lighting/LevelLightEngine dwt
	LIGHT_SECTION_PADDING b
	blockEngine a
	levelHeightAccessor c
	skyEngine d
	checkBlock (Lnet/minecraft/core/BlockPos;)V a
	getDebugData (Lnet/minecraft/world/level/LightLayer;Lnet/minecraft/core/SectionPos;)Ljava/lang/String; a
	getDebugSectionType (Lnet/minecraft/world/level/LightLayer;Lnet/minecraft/core/SectionPos;)Lnet/minecraft/world/level/lighting/LayerLightSectionStorage$SectionType; b
	getLayerListener (Lnet/minecraft/world/level/LightLayer;)Lnet/minecraft/world/level/lighting/LayerLightEventListener; a
	getLightSectionCount ()I c
	getMaxLightSection ()I e
	getMinLightSection ()I d
	getRawBrightness (Lnet/minecraft/core/BlockPos;I)I a
	hasLightWork ()Z E_
	lightOnInSection (Lnet/minecraft/core/SectionPos;)Z a
	propagateLightSources (Lnet/minecraft/world/level/ChunkPos;)V b
	queueSectionData (Lnet/minecraft/world/level/LightLayer;Lnet/minecraft/core/SectionPos;Lnet/minecraft/world/level/chunk/DataLayer;)V a
	retainData (Lnet/minecraft/world/level/ChunkPos;Z)V b
	runLightUpdates ()I a
	setLightEnabled (Lnet/minecraft/world/level/ChunkPos;Z)V a
	updateSectionStatus (Lnet/minecraft/core/SectionPos;Z)V a
net/minecraft/world/level/lighting/LeveledPriorityQueue dwu
	firstQueuedLevel c
	levelCount a
	queues b
	checkFirstQueuedLevel (I)V a
	dequeue (JII)V a
	enqueue (JI)V a
	isEmpty ()Z b
	removeFirstLong ()J a
net/minecraft/world/level/lighting/LightEngine dwv
	CACHE_SIZE l
	MAX_LEVEL a
	MIN_OPACITY b
	MIN_QUEUE_SIZE g
	PROPAGATION_DIRECTIONS d
	PULL_LIGHT_IN_ENTRY c
	blockNodesToCheck h
	chunkSource e
	decreaseQueue i
	increaseQueue j
	lastChunk n
	lastChunkPos m
	mutablePos k
	storage f
	checkBlock (Lnet/minecraft/core/BlockPos;)V a
	checkNode (J)V a
	clearChunkCache ()V c
	enqueueDecrease (JJ)V b
	enqueueIncrease (JJ)V c
	getChunk (II)Lnet/minecraft/world/level/chunk/LightChunk; a
	getDataLayerData (Lnet/minecraft/core/SectionPos;)Lnet/minecraft/world/level/chunk/DataLayer; a
	getDebugData (J)Ljava/lang/String; b
	getDebugSectionType (J)Lnet/minecraft/world/level/lighting/LayerLightSectionStorage$SectionType; c
	getLightBlockInto (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;I)I a
	getLightValue (Lnet/minecraft/core/BlockPos;)I b
	getOcclusionShape (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	getOcclusionShape (Lnet/minecraft/world/level/block/state/BlockState;JLnet/minecraft/core/Direction;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	getOpacity (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/BlockPos;)I a
	getState (Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/block/state/BlockState; c
	hasDifferentLightProperties (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/state/BlockState;)Z a
	hasLightWork ()Z E_
	isEmptyShape (Lnet/minecraft/world/level/block/state/BlockState;)Z a
	propagateDecrease (JJ)V a
	propagateDecreases ()I e
	propagateIncrease (JJI)V a
	propagateIncreases ()I d
	queueSectionData (JLnet/minecraft/world/level/chunk/DataLayer;)V a
	retainData (Lnet/minecraft/world/level/ChunkPos;Z)V b
	runLightUpdates ()I a
	setLightEnabled (Lnet/minecraft/world/level/ChunkPos;Z)V a
	shapeOccludes (JLnet/minecraft/world/level/block/state/BlockState;JLnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;)Z a
	updateSectionStatus (Lnet/minecraft/core/SectionPos;Z)V a
net/minecraft/world/level/lighting/LightEngine$QueueEntry dwv$a
	DIRECTIONS_MASK d
	DIRECTION_BITS b
	FLAG_FROM_EMPTY_SHAPE e
	FLAG_INCREASE_FROM_EMISSION f
	FROM_LEVEL_BITS a
	LEVEL_MASK c
	decreaseAllDirections (I)J a
	decreaseSkipOneDirection (ILnet/minecraft/core/Direction;)J a
	getFromLevel (J)I a
	increaseLightFromEmission (IZ)J a
	increaseOnlyOneDirection (IZLnet/minecraft/core/Direction;)J b
	increaseSkipOneDirection (IZLnet/minecraft/core/Direction;)J a
	increaseSkySourceInDirections (ZZZZZ)J a
	isFromEmptyShape (J)Z b
	isIncreaseFromEmission (J)Z c
	shouldPropagateInDirection (JLnet/minecraft/core/Direction;)Z a
	withDirection (JLnet/minecraft/core/Direction;)J b
	withLevel (JI)J a
	withoutDirection (JLnet/minecraft/core/Direction;)J c
net/minecraft/world/level/lighting/LightEventListener dww
	checkBlock (Lnet/minecraft/core/BlockPos;)V a
	hasLightWork ()Z E_
	propagateLightSources (Lnet/minecraft/world/level/ChunkPos;)V b
	runLightUpdates ()I a
	setLightEnabled (Lnet/minecraft/world/level/ChunkPos;Z)V a
	updateSectionStatus (Lnet/minecraft/core/BlockPos;Z)V a
	updateSectionStatus (Lnet/minecraft/core/SectionPos;Z)V a
net/minecraft/world/level/lighting/SkyLightEngine dwx
	ADD_SKY_SOURCE_ENTRY i
	REMOVE_SKY_SOURCE_ENTRY h
	REMOVE_TOP_SKY_SOURCE_ENTRY g
	emptyChunkSources k
	mutablePos j
	addSourcesAbove (IIII)V b
	checkNode (J)V a
	countEmptySectionsBelowIfAtBorder (J)I d
	crossedSectionEdge (Lnet/minecraft/core/Direction;II)Z a
	getChunkSources (II)Lnet/minecraft/world/level/lighting/ChunkSkyLightSources; b
	getLowestSourceY (III)I a
	isSourceLevel (I)Z a
	propagateDecrease (JJ)V a
	propagateFromEmptySections (JLnet/minecraft/core/Direction;IZI)V a
	propagateIncrease (JJI)V a
	propagateLightSources (Lnet/minecraft/world/level/ChunkPos;)V b
	removeSourcesBelow (IIII)V a
	setLightEnabled (Lnet/minecraft/world/level/ChunkPos;Z)V a
	updateSourcesInColumn (III)V b
net/minecraft/world/level/lighting/SkyLightSectionStorage dwy
	createDataLayer (J)Lnet/minecraft/world/level/chunk/DataLayer; g
	getBottomSectionY ()I c
	getLightValue (J)I a
	getLightValue (JZ)I e
	getTopSectionY (J)I m
	hasLightDataAtOrBelow (I)Z a
	isAboveData (J)Z l
	onNodeAdded (J)V h
	onNodeRemoved (J)V i
	repeatFirstLayer (Lnet/minecraft/world/level/chunk/DataLayer;)Lnet/minecraft/world/level/chunk/DataLayer; a
net/minecraft/world/level/lighting/SkyLightSectionStorage$SkyDataLayerStorageMap dwy$a
	currentLowestY b
	topSections c
	copy ()Lnet/minecraft/world/level/lighting/DataLayerStorageMap; b
	copy ()Lnet/minecraft/world/level/lighting/SkyLightSectionStorage$SkyDataLayerStorageMap; a
net/minecraft/world/level/lighting/SpatialLongSet dwz
	map a
net/minecraft/world/level/lighting/SpatialLongSet$InternalMap dwz$a
	OUTER_MASK h
	X_BITS a
	X_OFFSET g
	Y_BITS c
	Y_OFFSET d
	Z_BITS b
	Z_OFFSET e
	lastOuterKey j
	lastPos i
	minSize k
	addBit (J)Z c
	getFullKey (JI)J a
	getInnerKey (J)I b
	getOuterKey (J)J a
	removeBit (J)Z d
	removeFirstBit ()J a
	removeFromEntry (IJ)Z b
	removeFromNullEntry (J)Z e
	replaceBit (IJ)Z a
net/minecraft/world/level/material/EmptyFluid dxb
	canBeReplacedWith (Lnet/minecraft/world/level/material/FluidState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/material/Fluid;Lnet/minecraft/core/Direction;)Z a
	createLegacyBlock (Lnet/minecraft/world/level/material/FluidState;)Lnet/minecraft/world/level/block/state/BlockState; b
	getAmount (Lnet/minecraft/world/level/material/FluidState;)I d
	getBucket ()Lnet/minecraft/world/item/Item; a
	getExplosionResistance ()F c
	getFlow (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/material/FluidState;)Lnet/minecraft/world/phys/Vec3; a
	getHeight (Lnet/minecraft/world/level/material/FluidState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)F a
	getOwnHeight (Lnet/minecraft/world/level/material/FluidState;)F a
	getShape (Lnet/minecraft/world/level/material/FluidState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/phys/shapes/VoxelShape; b
	getTickDelay (Lnet/minecraft/world/level/LevelReader;)I a
	isEmpty ()Z b
	isSource (Lnet/minecraft/world/level/material/FluidState;)Z c
net/minecraft/world/level/material/FlowingFluid dxc
	CACHE_SIZE e
	FALLING a
	LEVEL b
	OCCLUSION_CACHE f
	shapes g
	affectsFlow (Lnet/minecraft/world/level/material/FluidState;)Z g
	beforeDestroyingBlock (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V a
	canConvertToSource (Lnet/minecraft/world/level/Level;)Z a
	canHoldFluid (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/material/Fluid;)Z a
	canPassThrough (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/world/level/material/Fluid;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/material/FluidState;)Z a
	canPassThroughWall (Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Z a
	canSpreadTo (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/material/FluidState;Lnet/minecraft/world/level/material/Fluid;)Z a
	createFluidStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getAmount (Lnet/minecraft/world/level/material/FluidState;)I d
	getCacheKey (Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;)S a
	getDropOff (Lnet/minecraft/world/level/LevelReader;)I c
	getFlow (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/material/FluidState;)Lnet/minecraft/world/phys/Vec3; a
	getFlowing ()Lnet/minecraft/world/level/material/Fluid; d
	getFlowing (IZ)Lnet/minecraft/world/level/material/FluidState; a
	getHeight (Lnet/minecraft/world/level/material/FluidState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)F a
	getLegacyLevel (Lnet/minecraft/world/level/material/FluidState;)I e
	getNewLiquid (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Lnet/minecraft/world/level/material/FluidState; a
	getOwnHeight (Lnet/minecraft/world/level/material/FluidState;)F a
	getShape (Lnet/minecraft/world/level/material/FluidState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/phys/shapes/VoxelShape; b
	getSlopeDistance (Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;ILnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/BlockPos;Lit/unimi/dsi/fastutil/shorts/Short2ObjectMap;Lit/unimi/dsi/fastutil/shorts/Short2BooleanMap;)I a
	getSlopeFindDistance (Lnet/minecraft/world/level/LevelReader;)I b
	getSource ()Lnet/minecraft/world/level/material/Fluid; e
	getSource (Z)Lnet/minecraft/world/level/material/FluidState; a
	getSpread (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Ljava/util/Map; b
	getSpreadDelay (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/material/FluidState;Lnet/minecraft/world/level/material/FluidState;)I a
	hasSameAbove (Lnet/minecraft/world/level/material/FluidState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Z c
	isSolidFace (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;)Z a
	isSourceBlockOfThisType (Lnet/minecraft/world/level/material/FluidState;)Z h
	isWaterHole (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/world/level/material/Fluid;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)Z a
	sourceNeighborCount (Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;)I a
	spread (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/material/FluidState;)V a
	spreadTo (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/material/FluidState;)V a
	spreadToSides (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/material/FluidState;Lnet/minecraft/world/level/block/state/BlockState;)V a
	tick (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/material/FluidState;)V b
net/minecraft/world/level/material/Fluid dxd
	FLUID_STATE_REGISTRY c
	builtInRegistryHolder b
	defaultFluidState a
	stateDefinition d
	animateTick (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/material/FluidState;Lnet/minecraft/util/RandomSource;)V a
	builtInRegistryHolder ()Lnet/minecraft/core/Holder$Reference; k
	canBeReplacedWith (Lnet/minecraft/world/level/material/FluidState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/material/Fluid;Lnet/minecraft/core/Direction;)Z a
	createFluidStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	createLegacyBlock (Lnet/minecraft/world/level/material/FluidState;)Lnet/minecraft/world/level/block/state/BlockState; b
	defaultFluidState ()Lnet/minecraft/world/level/material/FluidState; g
	getAmount (Lnet/minecraft/world/level/material/FluidState;)I d
	getBucket ()Lnet/minecraft/world/item/Item; a
	getDripParticle ()Lnet/minecraft/core/particles/ParticleOptions; h
	getExplosionResistance ()F c
	getFlow (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/material/FluidState;)Lnet/minecraft/world/phys/Vec3; a
	getHeight (Lnet/minecraft/world/level/material/FluidState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)F a
	getOwnHeight (Lnet/minecraft/world/level/material/FluidState;)F a
	getPickupSound ()Ljava/util/Optional; j
	getShape (Lnet/minecraft/world/level/material/FluidState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/phys/shapes/VoxelShape; b
	getStateDefinition ()Lnet/minecraft/world/level/block/state/StateDefinition; f
	getTickDelay (Lnet/minecraft/world/level/LevelReader;)I a
	is (Lnet/minecraft/tags/TagKey;)Z a
	isEmpty ()Z b
	isRandomlyTicking ()Z i
	isSame (Lnet/minecraft/world/level/material/Fluid;)Z a
	isSource (Lnet/minecraft/world/level/material/FluidState;)Z c
	randomTick (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/material/FluidState;Lnet/minecraft/util/RandomSource;)V b
	registerDefaultState (Lnet/minecraft/world/level/material/FluidState;)V f
	tick (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/material/FluidState;)V b
net/minecraft/world/level/material/FluidState dxe
	AMOUNT_FULL g
	AMOUNT_MAX b
	CODEC a
	animateTick (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/util/RandomSource;)V a
	canBeReplacedWith (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/material/Fluid;Lnet/minecraft/core/Direction;)Z a
	createLegacyBlock ()Lnet/minecraft/world/level/block/state/BlockState; g
	getAmount ()I e
	getDripParticle ()Lnet/minecraft/core/particles/ParticleOptions; h
	getExplosionResistance ()F i
	getFlow (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/phys/Vec3; c
	getHeight (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)F a
	getOwnHeight ()F d
	getShape (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/phys/shapes/VoxelShape; d
	getTags ()Ljava/util/stream/Stream; k
	getType ()Lnet/minecraft/world/level/material/Fluid; a
	holder ()Lnet/minecraft/core/Holder; j
	is (Lnet/minecraft/core/HolderSet;)Z a
	is (Lnet/minecraft/tags/TagKey;)Z a
	is (Lnet/minecraft/world/level/material/Fluid;)Z b
	isEmpty ()Z c
	isRandomlyTicking ()Z f
	isSource ()Z b
	isSourceOfType (Lnet/minecraft/world/level/material/Fluid;)Z a
	randomTick (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/util/RandomSource;)V b
	shouldRenderBackwardUpFace (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Z b
	tick (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;)V a
net/minecraft/world/level/material/Fluids dxf
	EMPTY a
	FLOWING_LAVA d
	FLOWING_WATER b
	LAVA e
	WATER c
	register (Ljava/lang/String;Lnet/minecraft/world/level/material/Fluid;)Lnet/minecraft/world/level/material/Fluid; a
net/minecraft/world/level/material/FogType dxg
	$VALUES e
	LAVA a
	NONE d
	POWDER_SNOW c
	WATER b
	$values ()[Lnet/minecraft/world/level/material/FogType; a
net/minecraft/world/level/material/LavaFluid dxh
	MIN_LEVEL_CUTOFF e
	animateTick (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/material/FluidState;Lnet/minecraft/util/RandomSource;)V a
	beforeDestroyingBlock (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V a
	canBeReplacedWith (Lnet/minecraft/world/level/material/FluidState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/material/Fluid;Lnet/minecraft/core/Direction;)Z a
	canConvertToSource (Lnet/minecraft/world/level/Level;)Z a
	createLegacyBlock (Lnet/minecraft/world/level/material/FluidState;)Lnet/minecraft/world/level/block/state/BlockState; b
	fizz (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;)V a
	getBucket ()Lnet/minecraft/world/item/Item; a
	getDripParticle ()Lnet/minecraft/core/particles/ParticleOptions; h
	getDropOff (Lnet/minecraft/world/level/LevelReader;)I c
	getExplosionResistance ()F c
	getFlowing ()Lnet/minecraft/world/level/material/Fluid; d
	getPickupSound ()Ljava/util/Optional; j
	getSlopeFindDistance (Lnet/minecraft/world/level/LevelReader;)I b
	getSource ()Lnet/minecraft/world/level/material/Fluid; e
	getSpreadDelay (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/material/FluidState;Lnet/minecraft/world/level/material/FluidState;)I a
	getTickDelay (Lnet/minecraft/world/level/LevelReader;)I a
	hasFlammableNeighbours (Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;)Z a
	isFlammable (Lnet/minecraft/world/level/LevelReader;Lnet/minecraft/core/BlockPos;)Z b
	isRandomlyTicking ()Z i
	isSame (Lnet/minecraft/world/level/material/Fluid;)Z a
	randomTick (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/material/FluidState;Lnet/minecraft/util/RandomSource;)V b
	spreadTo (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/material/FluidState;)V a
net/minecraft/world/level/material/LavaFluid$Flowing dxh$a
	createFluidStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getAmount (Lnet/minecraft/world/level/material/FluidState;)I d
	isSource (Lnet/minecraft/world/level/material/FluidState;)Z c
net/minecraft/world/level/material/LavaFluid$Source dxh$b
	getAmount (Lnet/minecraft/world/level/material/FluidState;)I d
	isSource (Lnet/minecraft/world/level/material/FluidState;)Z c
net/minecraft/world/level/material/MapColor dxi
	CLAY j
	COLOR_BLACK D
	COLOR_BLUE z
	COLOR_BROWN A
	COLOR_CYAN x
	COLOR_GRAY v
	COLOR_GREEN B
	COLOR_LIGHT_BLUE r
	COLOR_LIGHT_GRAY w
	COLOR_LIGHT_GREEN t
	COLOR_MAGENTA q
	COLOR_ORANGE p
	COLOR_PINK u
	COLOR_PURPLE y
	COLOR_RED C
	COLOR_YELLOW s
	CRIMSON_HYPHAE ac
	CRIMSON_NYLIUM aa
	CRIMSON_STEM ab
	DEEPSLATE ah
	DIAMOND F
	DIRT k
	EMERALD H
	FIRE e
	GLOW_LICHEN aj
	GOLD E
	GRASS b
	ICE f
	LAPIS G
	MATERIAL_COLORS am
	METAL g
	NETHER J
	NONE a
	PLANT h
	PODZOL I
	QUARTZ o
	RAW_IRON ai
	SAND c
	SNOW i
	STONE l
	TERRACOTTA_BLACK Z
	TERRACOTTA_BLUE V
	TERRACOTTA_BROWN W
	TERRACOTTA_CYAN T
	TERRACOTTA_GRAY R
	TERRACOTTA_GREEN X
	TERRACOTTA_LIGHT_BLUE N
	TERRACOTTA_LIGHT_GRAY S
	TERRACOTTA_LIGHT_GREEN P
	TERRACOTTA_MAGENTA M
	TERRACOTTA_ORANGE L
	TERRACOTTA_PINK Q
	TERRACOTTA_PURPLE U
	TERRACOTTA_RED Y
	TERRACOTTA_WHITE K
	TERRACOTTA_YELLOW O
	WARPED_HYPHAE af
	WARPED_NYLIUM ad
	WARPED_STEM ae
	WARPED_WART_BLOCK ag
	WATER m
	WOOD n
	WOOL d
	col ak
	id al
	byId (I)Lnet/minecraft/world/level/material/MapColor; a
	byIdUnsafe (I)Lnet/minecraft/world/level/material/MapColor; c
	calculateRGBColor (Lnet/minecraft/world/level/material/MapColor$Brightness;)I a
	getColorFromPackedId (I)I b
	getPackedId (Lnet/minecraft/world/level/material/MapColor$Brightness;)B b
net/minecraft/world/level/material/MapColor$Brightness dxi$a
	$VALUES h
	HIGH c
	LOW a
	LOWEST d
	NORMAL b
	VALUES g
	id e
	modifier f
	$values ()[Lnet/minecraft/world/level/material/MapColor$Brightness; a
	byId (I)Lnet/minecraft/world/level/material/MapColor$Brightness; a
	byIdUnsafe (I)Lnet/minecraft/world/level/material/MapColor$Brightness; b
net/minecraft/world/level/material/PushReaction dxj
	$VALUES f
	BLOCK c
	DESTROY b
	IGNORE d
	NORMAL a
	PUSH_ONLY e
	$values ()[Lnet/minecraft/world/level/material/PushReaction; a
net/minecraft/world/level/material/WaterFluid dxk
	animateTick (Lnet/minecraft/world/level/Level;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/material/FluidState;Lnet/minecraft/util/RandomSource;)V a
	beforeDestroyingBlock (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/state/BlockState;)V a
	canBeReplacedWith (Lnet/minecraft/world/level/material/FluidState;Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/material/Fluid;Lnet/minecraft/core/Direction;)Z a
	canConvertToSource (Lnet/minecraft/world/level/Level;)Z a
	createLegacyBlock (Lnet/minecraft/world/level/material/FluidState;)Lnet/minecraft/world/level/block/state/BlockState; b
	getBucket ()Lnet/minecraft/world/item/Item; a
	getDripParticle ()Lnet/minecraft/core/particles/ParticleOptions; h
	getDropOff (Lnet/minecraft/world/level/LevelReader;)I c
	getExplosionResistance ()F c
	getFlowing ()Lnet/minecraft/world/level/material/Fluid; d
	getPickupSound ()Ljava/util/Optional; j
	getSlopeFindDistance (Lnet/minecraft/world/level/LevelReader;)I b
	getSource ()Lnet/minecraft/world/level/material/Fluid; e
	getTickDelay (Lnet/minecraft/world/level/LevelReader;)I a
	isSame (Lnet/minecraft/world/level/material/Fluid;)Z a
net/minecraft/world/level/material/WaterFluid$Flowing dxk$a
	createFluidStateDefinition (Lnet/minecraft/world/level/block/state/StateDefinition$Builder;)V a
	getAmount (Lnet/minecraft/world/level/material/FluidState;)I d
	isSource (Lnet/minecraft/world/level/material/FluidState;)Z c
net/minecraft/world/level/material/WaterFluid$Source dxk$b
	getAmount (Lnet/minecraft/world/level/material/FluidState;)I d
	isSource (Lnet/minecraft/world/level/material/FluidState;)Z c
net/minecraft/world/level/pathfinder/AmphibiousNodeEvaluator dxn
	oldWalkableCost m
	oldWaterBorderCost n
	prefersShallowSwimming l
	done ()V b
	getBlockPathType (Lnet/minecraft/world/level/BlockGetter;III)Lnet/minecraft/world/level/pathfinder/BlockPathTypes; a
	getGoal (DDD)Lnet/minecraft/world/level/pathfinder/Target; a
	getNeighbors ([Lnet/minecraft/world/level/pathfinder/Node;Lnet/minecraft/world/level/pathfinder/Node;)I a
	getStart ()Lnet/minecraft/world/level/pathfinder/Node; a
	isAmphibious ()Z c
	isVerticalNeighborValid (Lnet/minecraft/world/level/pathfinder/Node;Lnet/minecraft/world/level/pathfinder/Node;)Z b
	prepare (Lnet/minecraft/world/level/PathNavigationRegion;Lnet/minecraft/world/entity/Mob;)V a
net/minecraft/world/level/pathfinder/BinaryHeap dxo
	heap a
	size b
	changeCost (Lnet/minecraft/world/level/pathfinder/Node;F)V a
	clear ()V a
	downHeap (I)V b
	getHeap ()[Lnet/minecraft/world/level/pathfinder/Node; f
	insert (Lnet/minecraft/world/level/pathfinder/Node;)Lnet/minecraft/world/level/pathfinder/Node; a
	isEmpty ()Z e
	peek ()Lnet/minecraft/world/level/pathfinder/Node; b
	pop ()Lnet/minecraft/world/level/pathfinder/Node; c
	remove (Lnet/minecraft/world/level/pathfinder/Node;)V b
	size ()I d
	upHeap (I)V a
net/minecraft/world/level/pathfinder/BlockPathTypes dxp
	$VALUES A
	BLOCKED a
	BREACH u
	COCOA x
	DAMAGE_CAUTIOUS y
	DAMAGE_FIRE o
	DAMAGE_OTHER q
	DANGER_FIRE n
	DANGER_OTHER p
	DANGER_POWDER_SNOW g
	DOOR_IRON_CLOSED t
	DOOR_OPEN r
	DOOR_WOOD_CLOSED s
	FENCE h
	LAVA i
	LEAVES v
	OPEN b
	POWDER_SNOW f
	RAIL l
	STICKY_HONEY w
	TRAPDOOR e
	UNPASSABLE_RAIL m
	WALKABLE c
	WALKABLE_DOOR d
	WATER j
	WATER_BORDER k
	malus z
	$values ()[Lnet/minecraft/world/level/pathfinder/BlockPathTypes; b
	getMalus ()F a
net/minecraft/world/level/pathfinder/FlyNodeEvaluator dxq
	MAX_START_NODE_CANDIDATES n
	SMALL_MOB_INFLATED_START_NODE_BOUNDING_BOX m
	pathTypeByPosCache l
	canStartAt (Lnet/minecraft/core/BlockPos;)Z a
	done ()V b
	findAcceptedNode (III)Lnet/minecraft/world/level/pathfinder/Node; a
	getBlockPathType (Lnet/minecraft/world/level/BlockGetter;III)Lnet/minecraft/world/level/pathfinder/BlockPathTypes; a
	getBlockPathType (Lnet/minecraft/world/level/BlockGetter;IIILnet/minecraft/world/entity/Mob;)Lnet/minecraft/world/level/pathfinder/BlockPathTypes; a
	getCachedBlockPathType (III)Lnet/minecraft/world/level/pathfinder/BlockPathTypes; c
	getGoal (DDD)Lnet/minecraft/world/level/pathfinder/Target; a
	getNeighbors ([Lnet/minecraft/world/level/pathfinder/Node;Lnet/minecraft/world/level/pathfinder/Node;)I a
	getStart ()Lnet/minecraft/world/level/pathfinder/Node; a
	hasMalus (Lnet/minecraft/world/level/pathfinder/Node;)Z b
	isOpen (Lnet/minecraft/world/level/pathfinder/Node;)Z c
	iteratePathfindingStartNodeCandidatePositions (Lnet/minecraft/world/entity/Mob;)Ljava/lang/Iterable; a
	prepare (Lnet/minecraft/world/level/PathNavigationRegion;Lnet/minecraft/world/entity/Mob;)V a
net/minecraft/world/level/pathfinder/Node dxr
	cameFrom h
	closed i
	costMalus k
	f g
	g e
	h f
	hash m
	heapIdx d
	type l
	walkedDistance j
	x a
	y b
	z c
	asBlockPos ()Lnet/minecraft/core/BlockPos; a
	asVec3 ()Lnet/minecraft/world/phys/Vec3; b
	cloneAndMove (III)Lnet/minecraft/world/level/pathfinder/Node; a
	createFromStream (Lnet/minecraft/network/FriendlyByteBuf;)Lnet/minecraft/world/level/pathfinder/Node; b
	createHash (III)I b
	distanceManhattan (Lnet/minecraft/core/BlockPos;)F c
	distanceManhattan (Lnet/minecraft/world/level/pathfinder/Node;)F d
	distanceTo (Lnet/minecraft/core/BlockPos;)F a
	distanceTo (Lnet/minecraft/world/level/pathfinder/Node;)F a
	distanceToSqr (Lnet/minecraft/core/BlockPos;)F b
	distanceToSqr (Lnet/minecraft/world/level/pathfinder/Node;)F c
	distanceToXZ (Lnet/minecraft/world/level/pathfinder/Node;)F b
	inOpenSet ()Z c
	readContents (Lnet/minecraft/network/FriendlyByteBuf;Lnet/minecraft/world/level/pathfinder/Node;)V a
	writeToStream (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/world/level/pathfinder/NodeEvaluator dxs
	canFloat i
	canOpenDoors h
	canPassDoors g
	canWalkOverFences j
	entityDepth f
	entityHeight e
	entityWidth d
	level a
	mob b
	nodes c
	canFloat ()Z f
	canOpenDoors ()Z e
	canPassDoors ()Z d
	canWalkOverFences ()Z g
	done ()V b
	getBlockPathType (Lnet/minecraft/world/level/BlockGetter;III)Lnet/minecraft/world/level/pathfinder/BlockPathTypes; a
	getBlockPathType (Lnet/minecraft/world/level/BlockGetter;IIILnet/minecraft/world/entity/Mob;)Lnet/minecraft/world/level/pathfinder/BlockPathTypes; a
	getGoal (DDD)Lnet/minecraft/world/level/pathfinder/Target; a
	getNeighbors ([Lnet/minecraft/world/level/pathfinder/Node;Lnet/minecraft/world/level/pathfinder/Node;)I a
	getNode (III)Lnet/minecraft/world/level/pathfinder/Node; b
	getNode (Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/pathfinder/Node; b
	getStart ()Lnet/minecraft/world/level/pathfinder/Node; a
	getTargetFromNode (Lnet/minecraft/world/level/pathfinder/Node;)Lnet/minecraft/world/level/pathfinder/Target; a
	prepare (Lnet/minecraft/world/level/PathNavigationRegion;Lnet/minecraft/world/entity/Mob;)V a
	setCanFloat (Z)V c
	setCanOpenDoors (Z)V b
	setCanPassDoors (Z)V a
	setCanWalkOverFences (Z)V d
net/minecraft/world/level/pathfinder/Path dxt
	closedSet c
	distToTarget g
	nextNodeIndex e
	nodes a
	openSet b
	reached h
	target f
	targetNodes d
	advance ()V a
	canReach ()Z j
	createFromStream (Lnet/minecraft/network/FriendlyByteBuf;)Lnet/minecraft/world/level/pathfinder/Path; b
	getClosedSet ()[Lnet/minecraft/world/level/pathfinder/Node; l
	getDistToTarget ()F n
	getEndNode ()Lnet/minecraft/world/level/pathfinder/Node; d
	getEntityPosAtNode (Lnet/minecraft/world/entity/Entity;I)Lnet/minecraft/world/phys/Vec3; a
	getNextEntityPos (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/world/phys/Vec3; a
	getNextNode ()Lnet/minecraft/world/level/pathfinder/Node; h
	getNextNodeIndex ()I f
	getNextNodePos ()Lnet/minecraft/core/BlockPos; g
	getNode (I)Lnet/minecraft/world/level/pathfinder/Node; a
	getNodeCount ()I e
	getNodePos (I)Lnet/minecraft/core/BlockPos; d
	getOpenSet ()[Lnet/minecraft/world/level/pathfinder/Node; k
	getPreviousNode ()Lnet/minecraft/world/level/pathfinder/Node; i
	getTarget ()Lnet/minecraft/core/BlockPos; m
	isDone ()Z c
	notStarted ()Z b
	replaceNode (ILnet/minecraft/world/level/pathfinder/Node;)V a
	sameAs (Lnet/minecraft/world/level/pathfinder/Path;)Z a
	setDebug ([Lnet/minecraft/world/level/pathfinder/Node;[Lnet/minecraft/world/level/pathfinder/Node;Ljava/util/Set;)V a
	setNextNodeIndex (I)V c
	truncateNodes (I)V b
	writeToStream (Lnet/minecraft/network/FriendlyByteBuf;)V a
net/minecraft/world/level/pathfinder/PathComputationType dxu
	$VALUES d
	AIR c
	LAND a
	WATER b
	$values ()[Lnet/minecraft/world/level/pathfinder/PathComputationType; a
net/minecraft/world/level/pathfinder/PathFinder dxv
	DEBUG e
	FUDGING a
	maxVisitedNodes c
	neighbors b
	nodeEvaluator d
	openSet f
	distance (Lnet/minecraft/world/level/pathfinder/Node;Lnet/minecraft/world/level/pathfinder/Node;)F a
	findPath (Lnet/minecraft/util/profiling/ProfilerFiller;Lnet/minecraft/world/level/pathfinder/Node;Ljava/util/Map;FIF)Lnet/minecraft/world/level/pathfinder/Path; a
	findPath (Lnet/minecraft/world/level/PathNavigationRegion;Lnet/minecraft/world/entity/Mob;Ljava/util/Set;FIF)Lnet/minecraft/world/level/pathfinder/Path; a
	getBestH (Lnet/minecraft/world/level/pathfinder/Node;Ljava/util/Set;)F a
	reconstructPath (Lnet/minecraft/world/level/pathfinder/Node;Lnet/minecraft/core/BlockPos;Z)Lnet/minecraft/world/level/pathfinder/Path; a
net/minecraft/world/level/pathfinder/SwimNodeEvaluator dxw
	allowBreaching k
	pathTypesByPosCache l
	done ()V b
	findAcceptedNode (III)Lnet/minecraft/world/level/pathfinder/Node; a
	getBlockPathType (Lnet/minecraft/world/level/BlockGetter;III)Lnet/minecraft/world/level/pathfinder/BlockPathTypes; a
	getBlockPathType (Lnet/minecraft/world/level/BlockGetter;IIILnet/minecraft/world/entity/Mob;)Lnet/minecraft/world/level/pathfinder/BlockPathTypes; a
	getCachedBlockType (III)Lnet/minecraft/world/level/pathfinder/BlockPathTypes; c
	getGoal (DDD)Lnet/minecraft/world/level/pathfinder/Target; a
	getNeighbors ([Lnet/minecraft/world/level/pathfinder/Node;Lnet/minecraft/world/level/pathfinder/Node;)I a
	getStart ()Lnet/minecraft/world/level/pathfinder/Node; a
	isDiagonalNodeValid (Lnet/minecraft/world/level/pathfinder/Node;Lnet/minecraft/world/level/pathfinder/Node;Lnet/minecraft/world/level/pathfinder/Node;)Z a
	isNodeValid (Lnet/minecraft/world/level/pathfinder/Node;)Z b
	prepare (Lnet/minecraft/world/level/PathNavigationRegion;Lnet/minecraft/world/entity/Mob;)V a
net/minecraft/world/level/pathfinder/Target dxx
	bestHeuristic m
	bestNode n
	reached o
	createFromStream (Lnet/minecraft/network/FriendlyByteBuf;)Lnet/minecraft/world/level/pathfinder/Target; c
	getBestNode ()Lnet/minecraft/world/level/pathfinder/Node; d
	isReached ()Z f
	setReached ()V e
	updateBest (FLnet/minecraft/world/level/pathfinder/Node;)V a
net/minecraft/world/level/pathfinder/WalkNodeEvaluator dxy
	DEFAULT_MOB_JUMP_HEIGHT l
	SPACE_BETWEEN_WALL_POSTS k
	collisionCache n
	pathTypesByPosCache m
	canReachWithoutCollision (Lnet/minecraft/world/level/pathfinder/Node;)Z b
	canStartAt (Lnet/minecraft/core/BlockPos;)Z a
	checkNeighbourBlocks (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos$MutableBlockPos;Lnet/minecraft/world/level/pathfinder/BlockPathTypes;)Lnet/minecraft/world/level/pathfinder/BlockPathTypes; a
	doesBlockHavePartialCollision (Lnet/minecraft/world/level/pathfinder/BlockPathTypes;)Z a
	done ()V b
	evaluateBlockPathType (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/pathfinder/BlockPathTypes;)Lnet/minecraft/world/level/pathfinder/BlockPathTypes; a
	findAcceptedNode (IIIIDLnet/minecraft/core/Direction;Lnet/minecraft/world/level/pathfinder/BlockPathTypes;)Lnet/minecraft/world/level/pathfinder/Node; a
	getBlockPathType (Lnet/minecraft/world/entity/Mob;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/pathfinder/BlockPathTypes; a
	getBlockPathType (Lnet/minecraft/world/level/BlockGetter;III)Lnet/minecraft/world/level/pathfinder/BlockPathTypes; a
	getBlockPathType (Lnet/minecraft/world/level/BlockGetter;IIILnet/minecraft/world/entity/Mob;)Lnet/minecraft/world/level/pathfinder/BlockPathTypes; a
	getBlockPathTypeRaw (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/pathfinder/BlockPathTypes; b
	getBlockPathTypeStatic (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos$MutableBlockPos;)Lnet/minecraft/world/level/pathfinder/BlockPathTypes; a
	getBlockPathTypes (Lnet/minecraft/world/level/BlockGetter;IIILjava/util/EnumSet;Lnet/minecraft/world/level/pathfinder/BlockPathTypes;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/pathfinder/BlockPathTypes; a
	getBlockedNode (III)Lnet/minecraft/world/level/pathfinder/Node; a
	getCachedBlockType (Lnet/minecraft/world/entity/Mob;III)Lnet/minecraft/world/level/pathfinder/BlockPathTypes; a
	getFloorLevel (Lnet/minecraft/core/BlockPos;)D d
	getFloorLevel (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)D a
	getGoal (DDD)Lnet/minecraft/world/level/pathfinder/Target; a
	getMobJumpHeight ()D h
	getNeighbors ([Lnet/minecraft/world/level/pathfinder/Node;Lnet/minecraft/world/level/pathfinder/Node;)I a
	getNodeAndUpdateCostToMax (IIILnet/minecraft/world/level/pathfinder/BlockPathTypes;F)Lnet/minecraft/world/level/pathfinder/Node; a
	getStart ()Lnet/minecraft/world/level/pathfinder/Node; a
	getStartNode (Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/pathfinder/Node; c
	hasCollisions (Lnet/minecraft/world/phys/AABB;)Z a
	isAmphibious ()Z c
	isBurningBlock (Lnet/minecraft/world/level/block/state/BlockState;)Z a
	isDiagonalValid (Lnet/minecraft/world/level/pathfinder/Node;Lnet/minecraft/world/level/pathfinder/Node;Lnet/minecraft/world/level/pathfinder/Node;Lnet/minecraft/world/level/pathfinder/Node;)Z a
	isNeighborValid (Lnet/minecraft/world/level/pathfinder/Node;Lnet/minecraft/world/level/pathfinder/Node;)Z a
	prepare (Lnet/minecraft/world/level/PathNavigationRegion;Lnet/minecraft/world/entity/Mob;)V a
net/minecraft/world/level/portal/PortalForcer dya
	CREATE_RADIUS c
	FRAME_BOX f
	FRAME_BOX_END l
	FRAME_BOX_START k
	FRAME_HEIGHT d
	FRAME_HEIGHT_END h
	FRAME_HEIGHT_START g
	FRAME_WIDTH e
	FRAME_WIDTH_END j
	FRAME_WIDTH_START i
	NOTHING_FOUND m
	SEARCH_RADIUS b
	TICKET_RADIUS a
	level n
	canHostFrame (Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos$MutableBlockPos;Lnet/minecraft/core/Direction;I)Z a
	canPortalReplaceBlock (Lnet/minecraft/core/BlockPos$MutableBlockPos;)Z a
	createPortal (Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction$Axis;)Ljava/util/Optional; a
	findPortalAround (Lnet/minecraft/core/BlockPos;ZLnet/minecraft/world/level/border/WorldBorder;)Ljava/util/Optional; a
net/minecraft/world/level/portal/PortalInfo dyb
	pos a
	speed b
	xRot d
	yRot c
net/minecraft/world/level/portal/PortalShape dyc
	FRAME e
	MAX_HEIGHT b
	MAX_WIDTH a
	MIN_HEIGHT d
	MIN_WIDTH c
	SAFE_TRAVEL_MAX_ENTITY_XY f
	SAFE_TRAVEL_MAX_VERTICAL_DELTA g
	axis i
	bottomLeft l
	height m
	level h
	numPortalBlocks k
	rightDir j
	width n
	calculateBottomLeft (Lnet/minecraft/core/BlockPos;)Lnet/minecraft/core/BlockPos; a
	calculateHeight ()I e
	calculateWidth ()I d
	createPortalBlocks ()V b
	createPortalInfo (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/BlockUtil$FoundRectangle;Lnet/minecraft/core/Direction$Axis;Lnet/minecraft/world/phys/Vec3;Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/phys/Vec3;FF)Lnet/minecraft/world/level/portal/PortalInfo; a
	findCollisionFreePosition (Lnet/minecraft/world/phys/Vec3;Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/entity/EntityDimensions;)Lnet/minecraft/world/phys/Vec3; a
	findEmptyPortalShape (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction$Axis;)Ljava/util/Optional; a
	findPortalShape (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;Ljava/util/function/Predicate;Lnet/minecraft/core/Direction$Axis;)Ljava/util/Optional; a
	getDistanceUntilEdgeAboveFrame (Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/Direction;)I a
	getDistanceUntilTop (Lnet/minecraft/core/BlockPos$MutableBlockPos;)I a
	getRelativePosition (Lnet/minecraft/BlockUtil$FoundRectangle;Lnet/minecraft/core/Direction$Axis;Lnet/minecraft/world/phys/Vec3;Lnet/minecraft/world/entity/EntityDimensions;)Lnet/minecraft/world/phys/Vec3; a
	hasTopFrame (Lnet/minecraft/core/BlockPos$MutableBlockPos;I)Z a
	isComplete ()Z c
	isEmpty (Lnet/minecraft/world/level/block/state/BlockState;)Z a
	isValid ()Z a
net/minecraft/world/level/redstone/CollectingNeighborUpdater dye
	LOGGER b
	addedThisLayer f
	count g
	level c
	maxChainedNeighborUpdates d
	stack e
	addAndRun (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/redstone/CollectingNeighborUpdater$NeighborUpdates;)V a
	neighborChanged (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Block;Lnet/minecraft/core/BlockPos;)V a
	neighborChanged (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Block;Lnet/minecraft/core/BlockPos;Z)V a
	runUpdates ()V a
	shapeUpdate (Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;II)V a
	updateNeighborsAtExceptFromFacing (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Block;Lnet/minecraft/core/Direction;)V a
net/minecraft/world/level/redstone/CollectingNeighborUpdater$FullNeighborUpdate dye$a
	block c
	movedByPiston e
	neighborPos d
	pos b
	state a
	block ()Lnet/minecraft/world/level/block/Block; c
	movedByPiston ()Z e
	neighborPos ()Lnet/minecraft/core/BlockPos; d
	pos ()Lnet/minecraft/core/BlockPos; b
	runNext (Lnet/minecraft/world/level/Level;)Z a
	state ()Lnet/minecraft/world/level/block/state/BlockState; a
net/minecraft/world/level/redstone/CollectingNeighborUpdater$MultiNeighborUpdate dye$b
	idx d
	skipDirection c
	sourceBlock b
	sourcePos a
	runNext (Lnet/minecraft/world/level/Level;)Z a
net/minecraft/world/level/redstone/CollectingNeighborUpdater$NeighborUpdates dye$c
	runNext (Lnet/minecraft/world/level/Level;)Z a
net/minecraft/world/level/redstone/CollectingNeighborUpdater$ShapeUpdate dye$d
	direction a
	neighborPos d
	pos c
	state b
	updateFlags e
	updateLimit f
	direction ()Lnet/minecraft/core/Direction; a
	neighborPos ()Lnet/minecraft/core/BlockPos; d
	pos ()Lnet/minecraft/core/BlockPos; c
	runNext (Lnet/minecraft/world/level/Level;)Z a
	state ()Lnet/minecraft/world/level/block/state/BlockState; b
	updateFlags ()I e
	updateLimit ()I f
net/minecraft/world/level/redstone/CollectingNeighborUpdater$SimpleNeighborUpdate dye$e
	block b
	neighborPos c
	pos a
	block ()Lnet/minecraft/world/level/block/Block; b
	neighborPos ()Lnet/minecraft/core/BlockPos; c
	pos ()Lnet/minecraft/core/BlockPos; a
	runNext (Lnet/minecraft/world/level/Level;)Z a
net/minecraft/world/level/redstone/InstantNeighborUpdater dyf
	level b
	neighborChanged (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Block;Lnet/minecraft/core/BlockPos;)V a
	neighborChanged (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Block;Lnet/minecraft/core/BlockPos;Z)V a
	shapeUpdate (Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;II)V a
net/minecraft/world/level/redstone/NeighborUpdater dyg
	UPDATE_ORDER a
	executeShapeUpdate (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;II)V a
	executeUpdate (Lnet/minecraft/world/level/Level;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Block;Lnet/minecraft/core/BlockPos;Z)V a
	neighborChanged (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Block;Lnet/minecraft/core/BlockPos;)V a
	neighborChanged (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Block;Lnet/minecraft/core/BlockPos;Z)V a
	shapeUpdate (Lnet/minecraft/core/Direction;Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/core/BlockPos;Lnet/minecraft/core/BlockPos;II)V a
	updateNeighborsAtExceptFromFacing (Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/block/Block;Lnet/minecraft/core/Direction;)V a
net/minecraft/world/level/redstone/Redstone dyh
	SIGNAL_MAX b
	SIGNAL_MIN a
	SIGNAL_NONE c
net/minecraft/world/level/saveddata/SavedData dyj
	LOGGER a
	dirty b
	isDirty ()Z c
	save (Ljava/io/File;)V a
	save (Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/nbt/CompoundTag; a
	setDirty ()V b
	setDirty (Z)V a
net/minecraft/world/level/saveddata/maps/MapBanner dyk
	color b
	name c
	pos a
	fromWorld (Lnet/minecraft/world/level/BlockGetter;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/saveddata/maps/MapBanner; a
	getColor ()Lnet/minecraft/world/item/DyeColor; b
	getDecoration ()Lnet/minecraft/world/level/saveddata/maps/MapDecoration$Type; c
	getId ()Ljava/lang/String; f
	getName ()Lnet/minecraft/network/chat/Component; d
	getPos ()Lnet/minecraft/core/BlockPos; a
	load (Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/world/level/saveddata/maps/MapBanner; a
	save ()Lnet/minecraft/nbt/CompoundTag; e
net/minecraft/world/level/saveddata/maps/MapDecoration dyl
	name e
	rot d
	type a
	x b
	y c
	getImage ()B a
	getName ()Lnet/minecraft/network/chat/Component; g
	getRot ()B e
	getType ()Lnet/minecraft/world/level/saveddata/maps/MapDecoration$Type; b
	getX ()B c
	getY ()B d
	renderOnFrame ()Z f
net/minecraft/world/level/saveddata/maps/MapDecoration$Type dyl$a
	$VALUES F
	BANNER_BLACK z
	BANNER_BLUE v
	BANNER_BROWN w
	BANNER_CYAN t
	BANNER_GRAY r
	BANNER_GREEN x
	BANNER_LIGHT_BLUE n
	BANNER_LIGHT_GRAY s
	BANNER_LIME p
	BANNER_MAGENTA m
	BANNER_ORANGE l
	BANNER_PINK q
	BANNER_PURPLE u
	BANNER_RED y
	BANNER_WHITE k
	BANNER_YELLOW o
	BLUE_MARKER d
	FRAME b
	MANSION i
	MONUMENT j
	PLAYER a
	PLAYER_OFF_LIMITS h
	PLAYER_OFF_MAP g
	RED_MARKER c
	RED_X A
	TARGET_POINT f
	TARGET_X e
	icon B
	mapColor D
	renderedOnFrame C
	trackCount E
	$values ()[Lnet/minecraft/world/level/saveddata/maps/MapDecoration$Type; f
	byIcon (B)Lnet/minecraft/world/level/saveddata/maps/MapDecoration$Type; a
	getIcon ()B a
	getMapColor ()I d
	hasMapColor ()Z c
	isRenderedOnFrame ()Z b
	shouldTrackCount ()Z e
net/minecraft/world/level/saveddata/maps/MapFrame dym
	entityId c
	pos a
	rotation b
	frameId (Lnet/minecraft/core/BlockPos;)Ljava/lang/String; a
	getEntityId ()I d
	getId ()Ljava/lang/String; e
	getPos ()Lnet/minecraft/core/BlockPos; b
	getRotation ()I c
	load (Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/world/level/saveddata/maps/MapFrame; a
	save ()Lnet/minecraft/nbt/CompoundTag; a
net/minecraft/world/level/saveddata/maps/MapIndex dyn
	FILE_NAME a
	usedAuxIds b
	getFreeAuxValueForMap ()I a
	load (Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/world/level/saveddata/maps/MapIndex; b
	save (Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/nbt/CompoundTag; a
net/minecraft/world/level/saveddata/maps/MapItemSavedData dyo
	HALF_MAP_SIZE k
	LOGGER i
	MAP_SIZE j
	MAX_SCALE a
	TRACKED_DECORATION_LIMIT b
	bannerMarkers p
	carriedBy n
	carriedByPlayers o
	centerX c
	centerZ d
	colors g
	decorations q
	dimension e
	frameMarkers r
	locked h
	scale f
	trackedDecorationCount s
	trackingPosition l
	unlimitedTracking m
	addClientSideDecorations (Ljava/util/List;)V a
	addDecoration (Lnet/minecraft/world/level/saveddata/maps/MapDecoration$Type;Lnet/minecraft/world/level/LevelAccessor;Ljava/lang/String;DDDLnet/minecraft/network/chat/Component;)V a
	addTargetDecoration (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/core/BlockPos;Ljava/lang/String;Lnet/minecraft/world/level/saveddata/maps/MapDecoration$Type;)V a
	checkBanners (Lnet/minecraft/world/level/BlockGetter;II)V a
	createForClient (BZLnet/minecraft/resources/ResourceKey;)Lnet/minecraft/world/level/saveddata/maps/MapItemSavedData; a
	createFresh (DDBZZLnet/minecraft/resources/ResourceKey;)Lnet/minecraft/world/level/saveddata/maps/MapItemSavedData; a
	getBanners ()Ljava/util/Collection; d
	getDecorations ()Ljava/lang/Iterable; f
	getHoldingPlayer (Lnet/minecraft/world/entity/player/Player;)Lnet/minecraft/world/level/saveddata/maps/MapItemSavedData$HoldingPlayer; a
	getUpdatePacket (ILnet/minecraft/world/entity/player/Player;)Lnet/minecraft/network/protocol/Packet; a
	isExplorationMap ()Z e
	isTrackedCountOverLimit (I)Z b
	load (Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/world/level/saveddata/maps/MapItemSavedData; b
	locked ()Lnet/minecraft/world/level/saveddata/maps/MapItemSavedData; a
	removeDecoration (Ljava/lang/String;)V a
	removedFromFrame (Lnet/minecraft/core/BlockPos;I)V a
	save (Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/nbt/CompoundTag; a
	scaled (I)Lnet/minecraft/world/level/saveddata/maps/MapItemSavedData; a
	setColor (IIB)V b
	setColorsDirty (II)V a
	setDecorationsDirty ()V g
	tickCarriedBy (Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/item/ItemStack;)V a
	toggleBanner (Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;)Z a
	updateColor (IIB)Z a
net/minecraft/world/level/saveddata/maps/MapItemSavedData$HoldingPlayer dyo$a
	dirtyData d
	dirtyDecorations i
	maxDirtyX g
	maxDirtyY h
	minDirtyX e
	minDirtyY f
	player a
	step b
	tick j
	createPatch ()Lnet/minecraft/world/level/saveddata/maps/MapItemSavedData$MapPatch; a
	markColorsDirty (II)V a
	markDecorationsDirty ()V b
	nextUpdatePacket (I)Lnet/minecraft/network/protocol/Packet; a
net/minecraft/world/level/saveddata/maps/MapItemSavedData$MapPatch dyo$b
	height d
	mapColors e
	startX a
	startY b
	width c
	applyToMap (Lnet/minecraft/world/level/saveddata/maps/MapItemSavedData;)V a
net/minecraft/world/level/storage/CommandStorage dyr
	ID_PREFIX a
	namespaces b
	storage c
	createId (Ljava/lang/String;)Ljava/lang/String; b
	get (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/nbt/CompoundTag; a
	keys ()Ljava/util/stream/Stream; a
	newStorage (Ljava/lang/String;)Lnet/minecraft/world/level/storage/CommandStorage$Container; a
	set (Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/nbt/CompoundTag;)V a
net/minecraft/world/level/storage/CommandStorage$Container dyr$a
	TAG_CONTENTS a
	storage b
	get (Ljava/lang/String;)Lnet/minecraft/nbt/CompoundTag; a
	getKeys (Ljava/lang/String;)Ljava/util/stream/Stream; b
	load (Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/world/level/storage/CommandStorage$Container; b
	put (Ljava/lang/String;Lnet/minecraft/nbt/CompoundTag;)V a
	save (Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/nbt/CompoundTag; a
net/minecraft/world/level/storage/DataVersion dys
	MAIN_SERIES a
	series c
	version b
	getSeries ()Ljava/lang/String; b
	getVersion ()I c
	isCompatible (Lnet/minecraft/world/level/storage/DataVersion;)Z a
	isSideSeries ()Z a
net/minecraft/world/level/storage/DerivedLevelData dyt
	worldData a
	wrapped b
	fillCrashReportCategory (Lnet/minecraft/CrashReportCategory;Lnet/minecraft/world/level/LevelHeightAccessor;)V a
	getAllowCommands ()Z o
	getClearWeatherTime ()I h
	getDayTime ()J f
	getDifficulty ()Lnet/minecraft/world/Difficulty; s
	getGameRules ()Lnet/minecraft/world/level/GameRules; q
	getGameTime ()J e
	getGameType ()Lnet/minecraft/world/level/GameType; m
	getLevelName ()Ljava/lang/String; g
	getRainTime ()I l
	getScheduledEvents ()Lnet/minecraft/world/level/timers/TimerQueue; u
	getSpawnAngle ()F d
	getThunderTime ()I j
	getWanderingTraderId ()Ljava/util/UUID; x
	getWanderingTraderSpawnChance ()I w
	getWanderingTraderSpawnDelay ()I v
	getWorldBorder ()Lnet/minecraft/world/level/border/WorldBorder$Settings; r
	getXSpawn ()I a
	getYSpawn ()I b
	getZSpawn ()I c
	isDifficultyLocked ()Z t
	isHardcore ()Z n
	isInitialized ()Z p
	isRaining ()Z k
	isThundering ()Z i
	setClearWeatherTime (I)V a
	setDayTime (J)V b
	setGameTime (J)V a
	setGameType (Lnet/minecraft/world/level/GameType;)V a
	setInitialized (Z)V c
	setRainTime (I)V f
	setRaining (Z)V b
	setSpawn (Lnet/minecraft/core/BlockPos;F)V a
	setSpawnAngle (F)V a
	setThunderTime (I)V e
	setThundering (Z)V a
	setWanderingTraderId (Ljava/util/UUID;)V a
	setWanderingTraderSpawnChance (I)V h
	setWanderingTraderSpawnDelay (I)V g
	setWorldBorder (Lnet/minecraft/world/level/border/WorldBorder$Settings;)V a
	setXSpawn (I)V b
	setYSpawn (I)V c
	setZSpawn (I)V d
net/minecraft/world/level/storage/DimensionDataStorage dyu
	LOGGER a
	cache b
	dataFolder d
	fixerUpper c
	computeIfAbsent (Ljava/util/function/Function;Ljava/util/function/Supplier;Ljava/lang/String;)Lnet/minecraft/world/level/saveddata/SavedData; a
	get (Ljava/util/function/Function;Ljava/lang/String;)Lnet/minecraft/world/level/saveddata/SavedData; a
	getDataFile (Ljava/lang/String;)Ljava/io/File; a
	isGzip (Ljava/io/PushbackInputStream;)Z a
	readSavedData (Ljava/util/function/Function;Ljava/lang/String;)Lnet/minecraft/world/level/saveddata/SavedData; b
	readTagFromDisk (Ljava/lang/String;I)Lnet/minecraft/nbt/CompoundTag; a
	save ()V a
	set (Ljava/lang/String;Lnet/minecraft/world/level/saveddata/SavedData;)V a
net/minecraft/world/level/storage/LevelData dyv
	fillCrashReportCategory (Lnet/minecraft/CrashReportCategory;Lnet/minecraft/world/level/LevelHeightAccessor;)V a
	getDayTime ()J f
	getDifficulty ()Lnet/minecraft/world/Difficulty; s
	getGameRules ()Lnet/minecraft/world/level/GameRules; q
	getGameTime ()J e
	getSpawnAngle ()F d
	getXSpawn ()I a
	getYSpawn ()I b
	getZSpawn ()I c
	isDifficultyLocked ()Z t
	isHardcore ()Z n
	isRaining ()Z k
	isThundering ()Z i
	setRaining (Z)V b
net/minecraft/world/level/storage/LevelResource dyw
	DATAPACK_DIR j
	GENERATED_DIR i
	ICON_FILE g
	LEVEL_DATA_FILE e
	LOCK_FILE h
	MAP_RESOURCE_FILE k
	OLD_LEVEL_DATA_FILE f
	PLAYER_ADVANCEMENTS_DIR a
	PLAYER_DATA_DIR c
	PLAYER_OLD_DATA_DIR d
	PLAYER_STATS_DIR b
	ROOT l
	id m
	getId ()Ljava/lang/String; a
net/minecraft/world/level/storage/LevelStorageException dyx
	messageComponent a
	getMessageComponent ()Lnet/minecraft/network/chat/Component; a
net/minecraft/world/level/storage/LevelStorageSource dyy
	ALLOWED_SYMLINKS_CONFIG_NAME a
	FORMATTER c
	LOGGER b
	NO_SYMLINKS_ALLOWED f
	OLD_SETTINGS_KEYS d
	TAG_DATA e
	backupDir h
	baseDir g
	fixerUpper i
	worldDirValidator j
	createAccess (Ljava/lang/String;)Lnet/minecraft/world/level/storage/LevelStorageSource$LevelStorageAccess; d
	createDefault (Ljava/nio/file/Path;)Lnet/minecraft/world/level/storage/LevelStorageSource; b
	findLevelCandidates ()Lnet/minecraft/world/level/storage/LevelStorageSource$LevelCandidates; b
	getBackupPath ()Ljava/nio/file/Path; d
	getBaseDir ()Ljava/nio/file/Path; c
	getDataConfiguration (Ljava/nio/file/Path;Lcom/mojang/datafixers/DataFixer;)Lnet/minecraft/world/level/WorldDataConfiguration; a
	getLevelData (Lcom/mojang/serialization/DynamicOps;Lnet/minecraft/world/level/WorldDataConfiguration;Lnet/minecraft/core/Registry;Lcom/mojang/serialization/Lifecycle;)Ljava/util/function/BiFunction; a
	getLevelPath (Ljava/lang/String;)Ljava/nio/file/Path; e
	getName ()Ljava/lang/String; a
	getStorageVersion ()I f
	getWorldDirValidator ()Lnet/minecraft/world/level/validation/DirectoryValidator; e
	isNewLevelIdAcceptable (Ljava/lang/String;)Z a
	levelExists (Ljava/lang/String;)Z b
	levelSummaryReader (Lnet/minecraft/world/level/storage/LevelStorageSource$LevelDirectory;Z)Ljava/util/function/BiFunction; a
	loadLevelSummaries (Lnet/minecraft/world/level/storage/LevelStorageSource$LevelCandidates;)Ljava/util/concurrent/CompletableFuture; a
	parseFeatureFlagsFromSummary (Lcom/mojang/serialization/Dynamic;)Lnet/minecraft/world/flag/FeatureFlagSet; b
	parseValidator (Ljava/nio/file/Path;)Lnet/minecraft/world/level/validation/DirectoryValidator; a
	readDataConfig (Lcom/mojang/serialization/Dynamic;)Lnet/minecraft/world/level/WorldDataConfiguration; a
	readLevelData (Lnet/minecraft/world/level/storage/LevelStorageSource$LevelDirectory;Ljava/util/function/BiFunction;)Ljava/lang/Object; a
	readLightweightData (Ljava/nio/file/Path;)Lnet/minecraft/nbt/Tag; c
	readWorldGenSettings (Lcom/mojang/serialization/Dynamic;Lcom/mojang/datafixers/DataFixer;I)Lcom/mojang/serialization/DataResult; a
	validateAndCreateAccess (Ljava/lang/String;)Lnet/minecraft/world/level/storage/LevelStorageSource$LevelStorageAccess; c
net/minecraft/world/level/storage/LevelStorageSource$LevelCandidates dyy$a
	levels a
	isEmpty ()Z a
	levels ()Ljava/util/List; b
net/minecraft/world/level/storage/LevelStorageSource$LevelDirectory dyy$b
	path a
	corruptedDataFile (Ljava/time/LocalDateTime;)Ljava/nio/file/Path; a
	dataFile ()Ljava/nio/file/Path; b
	directoryName ()Ljava/lang/String; a
	iconFile ()Ljava/nio/file/Path; d
	lockFile ()Ljava/nio/file/Path; e
	oldDataFile ()Ljava/nio/file/Path; c
	path ()Ljava/nio/file/Path; f
	resourcePath (Lnet/minecraft/world/level/storage/LevelResource;)Ljava/nio/file/Path; a
net/minecraft/world/level/storage/LevelStorageSource$LevelStorageAccess dyy$c
	levelDirectory c
	levelId d
	lock b
	resources e
	checkLock ()V h
	createPlayerStorage ()Lnet/minecraft/world/level/storage/PlayerDataStorage; b
	deleteLevel ()V f
	getDataConfiguration ()Lnet/minecraft/world/level/WorldDataConfiguration; d
	getDataTag (Lcom/mojang/serialization/DynamicOps;Lnet/minecraft/world/level/WorldDataConfiguration;Lnet/minecraft/core/Registry;Lcom/mojang/serialization/Lifecycle;)Lcom/mojang/datafixers/util/Pair; a
	getDimensionPath (Lnet/minecraft/resources/ResourceKey;)Ljava/nio/file/Path; a
	getIconFile ()Ljava/util/Optional; e
	getLevelId ()Ljava/lang/String; a
	getLevelPath (Lnet/minecraft/world/level/storage/LevelResource;)Ljava/nio/file/Path; a
	getSummary ()Lnet/minecraft/world/level/storage/LevelSummary; c
	makeWorldBackup ()J g
	renameLevel (Ljava/lang/String;)V a
	saveDataTag (Lnet/minecraft/core/RegistryAccess;Lnet/minecraft/world/level/storage/WorldData;)V a
	saveDataTag (Lnet/minecraft/core/RegistryAccess;Lnet/minecraft/world/level/storage/WorldData;Lnet/minecraft/nbt/CompoundTag;)V a
net/minecraft/world/level/storage/LevelSummary dyz
	experimental f
	icon g
	info h
	levelId c
	levelVersion b
	locked e
	requiresManualConversion d
	settings a
	askToOpenWorld ()Z n
	backupStatus ()Lnet/minecraft/world/level/storage/LevelSummary$BackupStatus; o
	compareTo (Lnet/minecraft/world/level/storage/LevelSummary;)I a
	createInfo ()Lnet/minecraft/network/chat/Component; t
	getGameMode ()Lnet/minecraft/world/level/GameType; h
	getIcon ()Ljava/nio/file/Path; c
	getInfo ()Lnet/minecraft/network/chat/Component; s
	getLastPlayed ()J f
	getLevelId ()Ljava/lang/String; a
	getLevelName ()Ljava/lang/String; b
	getSettings ()Lnet/minecraft/world/level/LevelSettings; g
	getWorldVersionName ()Lnet/minecraft/network/chat/MutableComponent; k
	hasCheats ()Z j
	isCompatible ()Z r
	isDisabled ()Z q
	isExperimental ()Z e
	isHardcore ()Z i
	isLocked ()Z p
	levelVersion ()Lnet/minecraft/world/level/storage/LevelVersion; l
	markVersionInList ()Z m
	requiresManualConversion ()Z d
net/minecraft/world/level/storage/LevelSummary$BackupStatus dyz$a
	$VALUES g
	DOWNGRADE b
	NONE a
	UPGRADE_TO_SNAPSHOT c
	severe e
	shouldBackup d
	translationKey f
	$values ()[Lnet/minecraft/world/level/storage/LevelSummary$BackupStatus; d
	getTranslationKey ()Ljava/lang/String; c
	isSevere ()Z b
	shouldBackup ()Z a
net/minecraft/world/level/storage/LevelSummary$SymlinkLevelSummary dyz$b
	getInfo ()Lnet/minecraft/network/chat/Component; s
	getLastPlayed ()J f
	getLevelName ()Ljava/lang/String; b
	isDisabled ()Z q
net/minecraft/world/level/storage/LevelVersion dza
	lastPlayed b
	levelDataVersion a
	minecraftVersion d
	minecraftVersionName c
	snapshot e
	lastPlayed ()J b
	levelDataVersion ()I a
	minecraftVersion ()Lnet/minecraft/world/level/storage/DataVersion; d
	minecraftVersionName ()Ljava/lang/String; c
	parse (Lcom/mojang/serialization/Dynamic;)Lnet/minecraft/world/level/storage/LevelVersion; a
	snapshot ()Z e
net/minecraft/world/level/storage/PlayerDataStorage dzb
	LOGGER b
	fixerUpper a
	playerDir c
	getSeenPlayers ()[Ljava/lang/String; a
	load (Lnet/minecraft/world/entity/player/Player;)Lnet/minecraft/nbt/CompoundTag; b
	save (Lnet/minecraft/world/entity/player/Player;)V a
net/minecraft/world/level/storage/PrimaryLevelData dzc
	LOGGER e
	PLAYER a
	WORLD_GEN_SETTINGS b
	clearWeatherTime u
	customBossEvents D
	dayTime o
	difficultyLocked A
	endDragonFightData C
	fixerUpper p
	gameTime n
	initialized z
	knownServerBrands H
	loadedPlayerTag s
	playerDataVersion q
	rainTime w
	raining v
	removedFeatureFlags J
	scheduledEvents K
	settings f
	spawnAngle m
	specialWorldProperty h
	thunderTime y
	thundering x
	upgradedPlayerTag r
	version t
	wanderingTraderId G
	wanderingTraderSpawnChance F
	wanderingTraderSpawnDelay E
	wasModded I
	worldBorder B
	worldGenSettingsLifecycle i
	worldOptions g
	xSpawn j
	ySpawn k
	zSpawn l
	createTag (Lnet/minecraft/core/RegistryAccess;Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/nbt/CompoundTag; a
	endDragonFightData ()Lnet/minecraft/world/level/dimension/end/EndDragonFight$Data; E
	fillCrashReportCategory (Lnet/minecraft/CrashReportCategory;Lnet/minecraft/world/level/LevelHeightAccessor;)V a
	getAllowCommands ()Z o
	getClearWeatherTime ()I h
	getCustomBossEvents ()Lnet/minecraft/nbt/CompoundTag; G
	getDataConfiguration ()Lnet/minecraft/world/level/WorldDataConfiguration; F
	getDayTime ()J f
	getDifficulty ()Lnet/minecraft/world/Difficulty; s
	getGameRules ()Lnet/minecraft/world/level/GameRules; q
	getGameTime ()J e
	getGameType ()Lnet/minecraft/world/level/GameType; m
	getKnownServerBrands ()Ljava/util/Set; I
	getLevelName ()Ljava/lang/String; g
	getLevelSettings ()Lnet/minecraft/world/level/LevelSettings; L
	getLoadedPlayerTag ()Lnet/minecraft/nbt/CompoundTag; y
	getRainTime ()I l
	getRemovedFeatureFlags ()Ljava/util/Set; J
	getScheduledEvents ()Lnet/minecraft/world/level/timers/TimerQueue; u
	getSpawnAngle ()F d
	getThunderTime ()I j
	getVersion ()I z
	getWanderingTraderId ()Ljava/util/UUID; x
	getWanderingTraderSpawnChance ()I w
	getWanderingTraderSpawnDelay ()I v
	getWorldBorder ()Lnet/minecraft/world/level/border/WorldBorder$Settings; r
	getXSpawn ()I a
	getYSpawn ()I b
	getZSpawn ()I c
	isDebugWorld ()Z C
	isDifficultyLocked ()Z t
	isFlatWorld ()Z B
	isHardcore ()Z n
	isInitialized ()Z p
	isRaining ()Z k
	isThundering ()Z i
	overworldData ()Lnet/minecraft/world/level/storage/ServerLevelData; K
	parse (Lcom/mojang/serialization/Dynamic;Lcom/mojang/datafixers/DataFixer;ILnet/minecraft/nbt/CompoundTag;Lnet/minecraft/world/level/LevelSettings;Lnet/minecraft/world/level/storage/LevelVersion;Lnet/minecraft/world/level/storage/PrimaryLevelData$SpecialWorldProperty;Lnet/minecraft/world/level/levelgen/WorldOptions;Lcom/mojang/serialization/Lifecycle;)Lnet/minecraft/world/level/storage/PrimaryLevelData; a
	setClearWeatherTime (I)V a
	setCustomBossEvents (Lnet/minecraft/nbt/CompoundTag;)V a
	setDataConfiguration (Lnet/minecraft/world/level/WorldDataConfiguration;)V a
	setDayTime (J)V b
	setDifficulty (Lnet/minecraft/world/Difficulty;)V a
	setDifficultyLocked (Z)V d
	setEndDragonFightData (Lnet/minecraft/world/level/dimension/end/EndDragonFight$Data;)V a
	setGameTime (J)V a
	setGameType (Lnet/minecraft/world/level/GameType;)V a
	setInitialized (Z)V c
	setModdedInfo (Ljava/lang/String;Z)V a
	setRainTime (I)V f
	setRaining (Z)V b
	setSpawn (Lnet/minecraft/core/BlockPos;F)V a
	setSpawnAngle (F)V a
	setTagData (Lnet/minecraft/core/RegistryAccess;Lnet/minecraft/nbt/CompoundTag;Lnet/minecraft/nbt/CompoundTag;)V a
	setThunderTime (I)V e
	setThundering (Z)V a
	setWanderingTraderId (Ljava/util/UUID;)V a
	setWanderingTraderSpawnChance (I)V h
	setWanderingTraderSpawnDelay (I)V g
	setWorldBorder (Lnet/minecraft/world/level/border/WorldBorder$Settings;)V a
	setXSpawn (I)V b
	setYSpawn (I)V c
	setZSpawn (I)V d
	stringCollectionToTag (Ljava/util/Set;)Lnet/minecraft/nbt/ListTag; a
	updatePlayerTag ()V N
	wasModded ()Z H
	worldGenOptions ()Lnet/minecraft/world/level/levelgen/WorldOptions; A
	worldGenSettingsLifecycle ()Lcom/mojang/serialization/Lifecycle; D
net/minecraft/world/level/storage/PrimaryLevelData$SpecialWorldProperty dzc$a
	$VALUES d
	DEBUG c
	FLAT b
	NONE a
	$values ()[Lnet/minecraft/world/level/storage/PrimaryLevelData$SpecialWorldProperty; a
net/minecraft/world/level/storage/ServerLevelData dzd
	fillCrashReportCategory (Lnet/minecraft/CrashReportCategory;Lnet/minecraft/world/level/LevelHeightAccessor;)V a
	getAllowCommands ()Z o
	getClearWeatherTime ()I h
	getGameType ()Lnet/minecraft/world/level/GameType; m
	getLevelName ()Ljava/lang/String; g
	getRainTime ()I l
	getScheduledEvents ()Lnet/minecraft/world/level/timers/TimerQueue; u
	getThunderTime ()I j
	getWanderingTraderId ()Ljava/util/UUID; x
	getWanderingTraderSpawnChance ()I w
	getWanderingTraderSpawnDelay ()I v
	getWorldBorder ()Lnet/minecraft/world/level/border/WorldBorder$Settings; r
	isInitialized ()Z p
	setClearWeatherTime (I)V a
	setDayTime (J)V b
	setGameTime (J)V a
	setGameType (Lnet/minecraft/world/level/GameType;)V a
	setInitialized (Z)V c
	setRainTime (I)V f
	setThunderTime (I)V e
	setThundering (Z)V a
	setWanderingTraderId (Ljava/util/UUID;)V a
	setWanderingTraderSpawnChance (I)V h
	setWanderingTraderSpawnDelay (I)V g
	setWorldBorder (Lnet/minecraft/world/level/border/WorldBorder$Settings;)V a
net/minecraft/world/level/storage/WorldData dze
	ANVIL_VERSION_ID c
	MCREGION_VERSION_ID d
	createTag (Lnet/minecraft/core/RegistryAccess;Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/nbt/CompoundTag; a
	enabledFeatures ()Lnet/minecraft/world/flag/FeatureFlagSet; M
	endDragonFightData ()Lnet/minecraft/world/level/dimension/end/EndDragonFight$Data; E
	fillCrashReportCategory (Lnet/minecraft/CrashReportCategory;)V a
	getAllowCommands ()Z o
	getCustomBossEvents ()Lnet/minecraft/nbt/CompoundTag; G
	getDataConfiguration ()Lnet/minecraft/world/level/WorldDataConfiguration; F
	getDifficulty ()Lnet/minecraft/world/Difficulty; s
	getGameRules ()Lnet/minecraft/world/level/GameRules; q
	getGameType ()Lnet/minecraft/world/level/GameType; m
	getKnownServerBrands ()Ljava/util/Set; I
	getLevelName ()Ljava/lang/String; g
	getLevelSettings ()Lnet/minecraft/world/level/LevelSettings; L
	getLoadedPlayerTag ()Lnet/minecraft/nbt/CompoundTag; y
	getRemovedFeatureFlags ()Ljava/util/Set; J
	getStorageVersionName (I)Ljava/lang/String; i
	getVersion ()I z
	isDebugWorld ()Z C
	isDifficultyLocked ()Z t
	isFlatWorld ()Z B
	isHardcore ()Z n
	overworldData ()Lnet/minecraft/world/level/storage/ServerLevelData; K
	setCustomBossEvents (Lnet/minecraft/nbt/CompoundTag;)V a
	setDataConfiguration (Lnet/minecraft/world/level/WorldDataConfiguration;)V a
	setDifficulty (Lnet/minecraft/world/Difficulty;)V a
	setDifficultyLocked (Z)V d
	setEndDragonFightData (Lnet/minecraft/world/level/dimension/end/EndDragonFight$Data;)V a
	setGameType (Lnet/minecraft/world/level/GameType;)V a
	setModdedInfo (Ljava/lang/String;Z)V a
	wasModded ()Z H
	worldGenOptions ()Lnet/minecraft/world/level/levelgen/WorldOptions; A
	worldGenSettingsLifecycle ()Lcom/mojang/serialization/Lifecycle; D
net/minecraft/world/level/storage/WritableLevelData dzf
	setSpawn (Lnet/minecraft/core/BlockPos;F)V a
	setSpawnAngle (F)V a
	setXSpawn (I)V b
	setYSpawn (I)V c
	setZSpawn (I)V d
net/minecraft/world/level/storage/loot/BuiltInLootTables dzg
	ABANDONED_MINESHAFT u
	ANCIENT_CITY P
	ANCIENT_CITY_ICE_BOX Q
	ARMORER_GIFT an
	BASTION_BRIDGE N
	BASTION_HOGLIN_STABLE O
	BASTION_OTHER M
	BASTION_TREASURE L
	BURIED_TREASURE G
	BUTCHER_GIFT ao
	CARTOGRAPHER_GIFT ap
	CAT_MORNING_GIFT am
	CLERIC_GIFT aq
	DESERT_PYRAMID z
	DESERT_PYRAMID_ARCHAEOLOGY aD
	DESERT_WELL_ARCHAEOLOGY aC
	EMPTY a
	END_CITY_TREASURE c
	FARMER_GIFT ar
	FISHERMAN_GIFT as
	FISHING ai
	FISHING_FISH al
	FISHING_JUNK aj
	FISHING_TREASURE ak
	FLETCHER_GIFT at
	IGLOO_CHEST C
	IMMUTABLE_LOCATIONS aJ
	JUNGLE_TEMPLE A
	JUNGLE_TEMPLE_DISPENSER B
	LEATHERWORKER_GIFT au
	LIBRARIAN_GIFT av
	LOCATIONS aI
	MASON_GIFT aw
	NETHER_BRIDGE v
	OCEAN_RUIN_COLD_ARCHAEOLOGY aH
	OCEAN_RUIN_WARM_ARCHAEOLOGY aG
	PIGLIN_BARTERING aB
	PILLAGER_OUTPOST K
	RUINED_PORTAL R
	SHEEP_BLACK ah
	SHEEP_BLUE ad
	SHEEP_BROWN ae
	SHEEP_CYAN ab
	SHEEP_GRAY Z
	SHEEP_GREEN af
	SHEEP_LIGHT_BLUE V
	SHEEP_LIGHT_GRAY aa
	SHEEP_LIME X
	SHEEP_MAGENTA U
	SHEEP_ORANGE T
	SHEEP_PINK Y
	SHEEP_PURPLE ac
	SHEEP_RED ag
	SHEEP_WHITE S
	SHEEP_YELLOW W
	SHEPHERD_GIFT ax
	SHIPWRECK_MAP H
	SHIPWRECK_SUPPLY I
	SHIPWRECK_TREASURE J
	SIMPLE_DUNGEON d
	SNIFFER_DIGGING aA
	SPAWN_BONUS_CHEST b
	STRONGHOLD_CORRIDOR y
	STRONGHOLD_CROSSING x
	STRONGHOLD_LIBRARY w
	TOOLSMITH_GIFT ay
	TRAIL_RUINS_ARCHAEOLOGY_COMMON aE
	TRAIL_RUINS_ARCHAEOLOGY_RARE aF
	UNDERWATER_RUIN_BIG F
	UNDERWATER_RUIN_SMALL E
	VILLAGE_ARMORER g
	VILLAGE_BUTCHER k
	VILLAGE_CARTOGRAPHER h
	VILLAGE_DESERT_HOUSE p
	VILLAGE_FISHER m
	VILLAGE_FLETCHER l
	VILLAGE_MASON i
	VILLAGE_PLAINS_HOUSE q
	VILLAGE_SAVANNA_HOUSE t
	VILLAGE_SHEPHERD j
	VILLAGE_SNOWY_HOUSE s
	VILLAGE_TAIGA_HOUSE r
	VILLAGE_TANNERY n
	VILLAGE_TEMPLE o
	VILLAGE_TOOLSMITH f
	VILLAGE_WEAPONSMITH e
	WEAPONSMITH_GIFT az
	WOODLAND_MANSION D
	all ()Ljava/util/Set; a
	register (Ljava/lang/String;)Lnet/minecraft/resources/ResourceLocation; a
	register (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/resources/ResourceLocation; a
net/minecraft/world/level/storage/loot/Deserializers dzh
	createConditionSerializer ()Lcom/google/gson/GsonBuilder; a
	createFunctionSerializer ()Lcom/google/gson/GsonBuilder; b
	createLootTableSerializer ()Lcom/google/gson/GsonBuilder; c
net/minecraft/world/level/storage/loot/GsonAdapterFactory dzi
	builder (Lnet/minecraft/core/Registry;Ljava/lang/String;Ljava/lang/String;Ljava/util/function/Function;)Lnet/minecraft/world/level/storage/loot/GsonAdapterFactory$Builder; a
net/minecraft/world/level/storage/loot/GsonAdapterFactory$Builder dzi$a
	defaultType f
	elementName b
	inlineType e
	registry a
	typeGetter d
	typeKey c
	build ()Ljava/lang/Object; a
	withDefaultType (Lnet/minecraft/world/level/storage/loot/SerializerType;)Lnet/minecraft/world/level/storage/loot/GsonAdapterFactory$Builder; a
	withInlineSerializer (Lnet/minecraft/world/level/storage/loot/SerializerType;Lnet/minecraft/world/level/storage/loot/GsonAdapterFactory$InlineSerializer;)Lnet/minecraft/world/level/storage/loot/GsonAdapterFactory$Builder; a
net/minecraft/world/level/storage/loot/GsonAdapterFactory$InlineSerializer dzi$b
	deserialize (Lcom/google/gson/JsonElement;Lcom/google/gson/JsonDeserializationContext;)Ljava/lang/Object; a
	serialize (Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)Lcom/google/gson/JsonElement; a
net/minecraft/world/level/storage/loot/GsonAdapterFactory$JsonAdapter dzi$c
	defaultType e
	elementName b
	inlineType f
	registry a
	typeGetter d
	typeKey c
net/minecraft/world/level/storage/loot/IntRange dzj
	limiter c
	max b
	min a
	predicate d
	clamp (Lnet/minecraft/world/level/storage/loot/LootContext;I)I a
	exact (I)Lnet/minecraft/world/level/storage/loot/IntRange; a
	getReferencedContextParams ()Ljava/util/Set; a
	lowerBound (I)Lnet/minecraft/world/level/storage/loot/IntRange; b
	range (II)Lnet/minecraft/world/level/storage/loot/IntRange; a
	test (Lnet/minecraft/world/level/storage/loot/LootContext;I)Z b
	upperBound (I)Lnet/minecraft/world/level/storage/loot/IntRange; c
net/minecraft/world/level/storage/loot/IntRange$IntChecker dzj$a
net/minecraft/world/level/storage/loot/IntRange$IntLimiter dzj$b
net/minecraft/world/level/storage/loot/IntRange$Serializer dzj$c
	deserialize (Lcom/google/gson/JsonElement;Ljava/lang/reflect/Type;Lcom/google/gson/JsonDeserializationContext;)Lnet/minecraft/world/level/storage/loot/IntRange; a
	serialize (Lnet/minecraft/world/level/storage/loot/IntRange;Ljava/lang/reflect/Type;Lcom/google/gson/JsonSerializationContext;)Lcom/google/gson/JsonElement; a
net/minecraft/world/level/storage/loot/LootContext dzk
	lootDataResolver c
	params a
	random b
	visitedElements d
	addDynamicDrops (Lnet/minecraft/resources/ResourceLocation;Ljava/util/function/Consumer;)V a
	createVisitedEntry (Lnet/minecraft/world/level/storage/loot/LootTable;)Lnet/minecraft/world/level/storage/loot/LootContext$VisitedEntry; a
	createVisitedEntry (Lnet/minecraft/world/level/storage/loot/functions/LootItemFunction;)Lnet/minecraft/world/level/storage/loot/LootContext$VisitedEntry; a
	createVisitedEntry (Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition;)Lnet/minecraft/world/level/storage/loot/LootContext$VisitedEntry; a
	getLevel ()Lnet/minecraft/server/level/ServerLevel; d
	getLuck ()F c
	getParam (Lnet/minecraft/world/level/storage/loot/parameters/LootContextParam;)Ljava/lang/Object; b
	getParamOrNull (Lnet/minecraft/world/level/storage/loot/parameters/LootContextParam;)Ljava/lang/Object; c
	getRandom ()Lnet/minecraft/util/RandomSource; b
	getResolver ()Lnet/minecraft/world/level/storage/loot/LootDataResolver; a
	hasParam (Lnet/minecraft/world/level/storage/loot/parameters/LootContextParam;)Z a
	hasVisitedElement (Lnet/minecraft/world/level/storage/loot/LootContext$VisitedEntry;)Z a
	popVisitedElement (Lnet/minecraft/world/level/storage/loot/LootContext$VisitedEntry;)V c
	pushVisitedElement (Lnet/minecraft/world/level/storage/loot/LootContext$VisitedEntry;)Z b
net/minecraft/world/level/storage/loot/LootContext$Builder dzk$a
	params a
	random b
	create (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/world/level/storage/loot/LootContext; a
	getLevel ()Lnet/minecraft/server/level/ServerLevel; a
	withOptionalRandomSeed (J)Lnet/minecraft/world/level/storage/loot/LootContext$Builder; a
net/minecraft/world/level/storage/loot/LootContext$EntityTarget dzk$b
	$VALUES g
	DIRECT_KILLER c
	KILLER b
	KILLER_PLAYER d
	THIS a
	name e
	param f
	$values ()[Lnet/minecraft/world/level/storage/loot/LootContext$EntityTarget; b
	getByName (Ljava/lang/String;)Lnet/minecraft/world/level/storage/loot/LootContext$EntityTarget; a
	getParam ()Lnet/minecraft/world/level/storage/loot/parameters/LootContextParam; a
net/minecraft/world/level/storage/loot/LootContext$EntityTarget$Serializer dzk$b$a
	read (Lcom/google/gson/stream/JsonReader;)Lnet/minecraft/world/level/storage/loot/LootContext$EntityTarget; a
	write (Lcom/google/gson/stream/JsonWriter;Lnet/minecraft/world/level/storage/loot/LootContext$EntityTarget;)V a
net/minecraft/world/level/storage/loot/LootContext$VisitedEntry dzk$c
	type a
	value b
	type ()Lnet/minecraft/world/level/storage/loot/LootDataType; a
	value ()Ljava/lang/Object; b
net/minecraft/world/level/storage/loot/LootContextUser dzl
	getReferencedContextParams ()Ljava/util/Set; a
	validate (Lnet/minecraft/world/level/storage/loot/ValidationContext;)V a
net/minecraft/world/level/storage/loot/LootDataId dzm
	location b
	type a
	location ()Lnet/minecraft/resources/ResourceLocation; b
	type ()Lnet/minecraft/world/level/storage/loot/LootDataType; a
net/minecraft/world/level/storage/loot/LootDataManager dzn
	EMPTY_LOOT_TABLE_KEY a
	LOGGER b
	elements c
	typeKeys d
	apply (Ljava/util/Map;)V a
	castAndValidate (Lnet/minecraft/world/level/storage/loot/ValidationContext;Lnet/minecraft/world/level/storage/loot/LootDataId;Ljava/lang/Object;)V a
	createComposite ([Lnet/minecraft/world/level/storage/loot/functions/LootItemFunction;)Lnet/minecraft/world/level/storage/loot/functions/LootItemFunction; a
	createComposite ([Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition;)Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition; a
	getKeys (Lnet/minecraft/world/level/storage/loot/LootDataType;)Ljava/util/Collection; a
	reload (Lnet/minecraft/server/packs/resources/PreparableReloadListener$PreparationBarrier;Lnet/minecraft/server/packs/resources/ResourceManager;Lnet/minecraft/util/profiling/ProfilerFiller;Lnet/minecraft/util/profiling/ProfilerFiller;Ljava/util/concurrent/Executor;Ljava/util/concurrent/Executor;)Ljava/util/concurrent/CompletableFuture; a
	scheduleElementParse (Lnet/minecraft/world/level/storage/loot/LootDataType;Lnet/minecraft/server/packs/resources/ResourceManager;Ljava/util/concurrent/Executor;Ljava/util/Map;)Ljava/util/concurrent/CompletableFuture; a
net/minecraft/world/level/storage/loot/LootDataManager$CompositePredicate dzn$a
	composedPredicate b
	terms a
	getType ()Lnet/minecraft/world/level/storage/loot/predicates/LootItemConditionType; b
	test (Lnet/minecraft/world/level/storage/loot/LootContext;)Z a
	validate (Lnet/minecraft/world/level/storage/loot/ValidationContext;)V a
net/minecraft/world/level/storage/loot/LootDataManager$FunctionSequence dzn$b
	compositeFunction b
	functions a
	apply (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/storage/loot/LootContext;)Lnet/minecraft/world/item/ItemStack; a
	getType ()Lnet/minecraft/world/level/storage/loot/functions/LootItemFunctionType; b
	validate (Lnet/minecraft/world/level/storage/loot/ValidationContext;)V a
net/minecraft/world/level/storage/loot/LootDataResolver dzo
net/minecraft/world/level/storage/loot/LootDataType dzp
	LOGGER d
	MODIFIER b
	PREDICATE a
	TABLE c
	directory g
	parser e
	topDeserializer f
	validator h
	createLootTableValidator ()Lnet/minecraft/world/level/storage/loot/LootDataType$Validator; e
	createSimpleValidator ()Lnet/minecraft/world/level/storage/loot/LootDataType$Validator; d
	createSingleDeserialiser (Ljava/lang/Class;)Ljava/util/function/BiFunction; a
	createSingleOrMultipleDeserialiser (Ljava/lang/Class;Ljava/util/function/Function;)Ljava/util/function/BiFunction; a
	deserialize (Lnet/minecraft/resources/ResourceLocation;Lcom/google/gson/JsonElement;)Ljava/util/Optional; a
	directory ()Ljava/lang/String; b
	parser ()Lcom/google/gson/Gson; a
	runValidation (Lnet/minecraft/world/level/storage/loot/ValidationContext;Lnet/minecraft/world/level/storage/loot/LootDataId;Ljava/lang/Object;)V a
	values ()Ljava/util/stream/Stream; c
net/minecraft/world/level/storage/loot/LootDataType$Validator dzp$a
net/minecraft/world/level/storage/loot/LootParams dzq
	dynamicDrops c
	level a
	luck d
	params b
	addDynamicDrops (Lnet/minecraft/resources/ResourceLocation;Ljava/util/function/Consumer;)V a
	getLevel ()Lnet/minecraft/server/level/ServerLevel; a
	getLuck ()F b
	getOptionalParameter (Lnet/minecraft/world/level/storage/loot/parameters/LootContextParam;)Ljava/lang/Object; c
	getParamOrNull (Lnet/minecraft/world/level/storage/loot/parameters/LootContextParam;)Ljava/lang/Object; d
	getParameter (Lnet/minecraft/world/level/storage/loot/parameters/LootContextParam;)Ljava/lang/Object; b
	hasParam (Lnet/minecraft/world/level/storage/loot/parameters/LootContextParam;)Z a
net/minecraft/world/level/storage/loot/LootParams$Builder dzq$a
	dynamicDrops c
	level a
	luck d
	params b
	create (Lnet/minecraft/world/level/storage/loot/parameters/LootContextParamSet;)Lnet/minecraft/world/level/storage/loot/LootParams; a
	getLevel ()Lnet/minecraft/server/level/ServerLevel; a
	getOptionalParameter (Lnet/minecraft/world/level/storage/loot/parameters/LootContextParam;)Ljava/lang/Object; b
	getParameter (Lnet/minecraft/world/level/storage/loot/parameters/LootContextParam;)Ljava/lang/Object; a
	withDynamicDrop (Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/world/level/storage/loot/LootParams$DynamicDrop;)Lnet/minecraft/world/level/storage/loot/LootParams$Builder; a
	withLuck (F)Lnet/minecraft/world/level/storage/loot/LootParams$Builder; a
	withOptionalParameter (Lnet/minecraft/world/level/storage/loot/parameters/LootContextParam;Ljava/lang/Object;)Lnet/minecraft/world/level/storage/loot/LootParams$Builder; b
	withParameter (Lnet/minecraft/world/level/storage/loot/parameters/LootContextParam;Ljava/lang/Object;)Lnet/minecraft/world/level/storage/loot/LootParams$Builder; a
net/minecraft/world/level/storage/loot/LootParams$DynamicDrop dzq$b
net/minecraft/world/level/storage/loot/LootPool dzr
	bonusRolls g
	compositeCondition c
	compositeFunction e
	conditions b
	entries a
	functions d
	rolls f
	addRandomItem (Ljava/util/function/Consumer;Lnet/minecraft/world/level/storage/loot/LootContext;)V b
	addRandomItems (Ljava/util/function/Consumer;Lnet/minecraft/world/level/storage/loot/LootContext;)V a
	lootPool ()Lnet/minecraft/world/level/storage/loot/LootPool$Builder; a
	validate (Lnet/minecraft/world/level/storage/loot/ValidationContext;)V a
net/minecraft/world/level/storage/loot/LootPool$Builder dzr$a
	bonusRolls e
	conditions b
	entries a
	functions c
	rolls d
	add (Lnet/minecraft/world/level/storage/loot/entries/LootPoolEntryContainer$Builder;)Lnet/minecraft/world/level/storage/loot/LootPool$Builder; a
	apply (Lnet/minecraft/world/level/storage/loot/functions/LootItemFunction$Builder;)Lnet/minecraft/world/level/storage/loot/LootPool$Builder; a
	apply (Lnet/minecraft/world/level/storage/loot/functions/LootItemFunction$Builder;)Lnet/minecraft/world/level/storage/loot/functions/FunctionUserBuilder; b
	build ()Lnet/minecraft/world/level/storage/loot/LootPool; b
	setBonusRolls (Lnet/minecraft/world/level/storage/loot/providers/number/NumberProvider;)Lnet/minecraft/world/level/storage/loot/LootPool$Builder; b
	setRolls (Lnet/minecraft/world/level/storage/loot/providers/number/NumberProvider;)Lnet/minecraft/world/level/storage/loot/LootPool$Builder; a
	unwrap ()Lnet/minecraft/world/level/storage/loot/LootPool$Builder; a
	unwrap ()Lnet/minecraft/world/level/storage/loot/functions/FunctionUserBuilder; c
	unwrap ()Lnet/minecraft/world/level/storage/loot/predicates/ConditionUserBuilder; d
	when (Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition$Builder;)Lnet/minecraft/world/level/storage/loot/LootPool$Builder; a
	when (Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition$Builder;)Lnet/minecraft/world/level/storage/loot/predicates/ConditionUserBuilder; b
net/minecraft/world/level/storage/loot/LootPool$Serializer dzr$b
	deserialize (Lcom/google/gson/JsonElement;Ljava/lang/reflect/Type;Lcom/google/gson/JsonDeserializationContext;)Lnet/minecraft/world/level/storage/loot/LootPool; a
	serialize (Lnet/minecraft/world/level/storage/loot/LootPool;Ljava/lang/reflect/Type;Lcom/google/gson/JsonSerializationContext;)Lcom/google/gson/JsonElement; a
net/minecraft/world/level/storage/loot/LootTable dzs
	DEFAULT_PARAM_SET b
	EMPTY a
	LOGGER c
	compositeFunction h
	functions g
	paramSet d
	pools f
	randomSequence e
	createStackSplitter (Lnet/minecraft/server/level/ServerLevel;Ljava/util/function/Consumer;)Ljava/util/function/Consumer; a
	fill (Lnet/minecraft/world/Container;Lnet/minecraft/world/level/storage/loot/LootParams;J)V a
	getAvailableSlots (Lnet/minecraft/world/Container;Lnet/minecraft/util/RandomSource;)Ljava/util/List; a
	getParamSet ()Lnet/minecraft/world/level/storage/loot/parameters/LootContextParamSet; a
	getRandomItems (Lnet/minecraft/world/level/storage/loot/LootContext;)Lit/unimi/dsi/fastutil/objects/ObjectArrayList; a
	getRandomItems (Lnet/minecraft/world/level/storage/loot/LootContext;Ljava/util/function/Consumer;)V b
	getRandomItems (Lnet/minecraft/world/level/storage/loot/LootParams;)Lit/unimi/dsi/fastutil/objects/ObjectArrayList; a
	getRandomItems (Lnet/minecraft/world/level/storage/loot/LootParams;J)Lit/unimi/dsi/fastutil/objects/ObjectArrayList; a
	getRandomItems (Lnet/minecraft/world/level/storage/loot/LootParams;JLjava/util/function/Consumer;)V a
	getRandomItems (Lnet/minecraft/world/level/storage/loot/LootParams;Ljava/util/function/Consumer;)V b
	getRandomItemsRaw (Lnet/minecraft/world/level/storage/loot/LootContext;Ljava/util/function/Consumer;)V a
	getRandomItemsRaw (Lnet/minecraft/world/level/storage/loot/LootParams;Ljava/util/function/Consumer;)V a
	lootTable ()Lnet/minecraft/world/level/storage/loot/LootTable$Builder; b
	shuffleAndSplitItems (Lit/unimi/dsi/fastutil/objects/ObjectArrayList;ILnet/minecraft/util/RandomSource;)V a
	validate (Lnet/minecraft/world/level/storage/loot/ValidationContext;)V a
net/minecraft/world/level/storage/loot/LootTable$Builder dzs$a
	functions b
	paramSet c
	pools a
	randomSequence d
	apply (Lnet/minecraft/world/level/storage/loot/functions/LootItemFunction$Builder;)Lnet/minecraft/world/level/storage/loot/LootTable$Builder; a
	apply (Lnet/minecraft/world/level/storage/loot/functions/LootItemFunction$Builder;)Lnet/minecraft/world/level/storage/loot/functions/FunctionUserBuilder; b
	build ()Lnet/minecraft/world/level/storage/loot/LootTable; b
	setParamSet (Lnet/minecraft/world/level/storage/loot/parameters/LootContextParamSet;)Lnet/minecraft/world/level/storage/loot/LootTable$Builder; a
	setRandomSequence (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/world/level/storage/loot/LootTable$Builder; a
	unwrap ()Lnet/minecraft/world/level/storage/loot/LootTable$Builder; a
	unwrap ()Lnet/minecraft/world/level/storage/loot/functions/FunctionUserBuilder; c
	withPool (Lnet/minecraft/world/level/storage/loot/LootPool$Builder;)Lnet/minecraft/world/level/storage/loot/LootTable$Builder; a
net/minecraft/world/level/storage/loot/LootTable$Serializer dzs$b
	deserialize (Lcom/google/gson/JsonElement;Ljava/lang/reflect/Type;Lcom/google/gson/JsonDeserializationContext;)Lnet/minecraft/world/level/storage/loot/LootTable; a
	serialize (Lnet/minecraft/world/level/storage/loot/LootTable;Ljava/lang/reflect/Type;Lcom/google/gson/JsonSerializationContext;)Lcom/google/gson/JsonElement; a
net/minecraft/world/level/storage/loot/Serializer dzt
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Ljava/lang/Object; a
	serialize (Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V a
net/minecraft/world/level/storage/loot/SerializerType dzu
	serializer a
	getSerializer ()Lnet/minecraft/world/level/storage/loot/Serializer; a
net/minecraft/world/level/storage/loot/ValidationContext dzv
	context b
	contextCache f
	params c
	problems a
	resolver d
	visitedElements e
	enterElement (Ljava/lang/String;Lnet/minecraft/world/level/storage/loot/LootDataId;)Lnet/minecraft/world/level/storage/loot/ValidationContext; a
	forChild (Ljava/lang/String;)Lnet/minecraft/world/level/storage/loot/ValidationContext; b
	getContext ()Ljava/lang/String; c
	getProblems ()Lcom/google/common/collect/Multimap; a
	hasVisitedElement (Lnet/minecraft/world/level/storage/loot/LootDataId;)Z a
	reportProblem (Ljava/lang/String;)V a
	resolver ()Lnet/minecraft/world/level/storage/loot/LootDataResolver; b
	setParams (Lnet/minecraft/world/level/storage/loot/parameters/LootContextParamSet;)Lnet/minecraft/world/level/storage/loot/ValidationContext; a
	validateUser (Lnet/minecraft/world/level/storage/loot/LootContextUser;)V a
net/minecraft/world/level/storage/loot/entries/AlternativesEntry dzw
	alternatives (Ljava/util/Collection;Ljava/util/function/Function;)Lnet/minecraft/world/level/storage/loot/entries/AlternativesEntry$Builder; a
	alternatives ([Lnet/minecraft/world/level/storage/loot/entries/LootPoolEntryContainer$Builder;)Lnet/minecraft/world/level/storage/loot/entries/AlternativesEntry$Builder; a
	compose ([Lnet/minecraft/world/level/storage/loot/entries/ComposableEntryContainer;)Lnet/minecraft/world/level/storage/loot/entries/ComposableEntryContainer; a
	getType ()Lnet/minecraft/world/level/storage/loot/entries/LootPoolEntryType; a
	validate (Lnet/minecraft/world/level/storage/loot/ValidationContext;)V a
net/minecraft/world/level/storage/loot/entries/AlternativesEntry$Builder dzw$a
	entries a
	build ()Lnet/minecraft/world/level/storage/loot/entries/LootPoolEntryContainer; b
	getThis ()Lnet/minecraft/world/level/storage/loot/entries/AlternativesEntry$Builder; a
	getThis ()Lnet/minecraft/world/level/storage/loot/entries/LootPoolEntryContainer$Builder; at_
	otherwise (Lnet/minecraft/world/level/storage/loot/entries/LootPoolEntryContainer$Builder;)Lnet/minecraft/world/level/storage/loot/entries/AlternativesEntry$Builder; a
net/minecraft/world/level/storage/loot/entries/ComposableEntryContainer dzx
	ALWAYS_FALSE a
	ALWAYS_TRUE b
net/minecraft/world/level/storage/loot/entries/CompositeEntryBase dzy
	children c
	composedChildren e
	compose ([Lnet/minecraft/world/level/storage/loot/entries/ComposableEntryContainer;)Lnet/minecraft/world/level/storage/loot/entries/ComposableEntryContainer; a
	createSerializer (Lnet/minecraft/world/level/storage/loot/entries/CompositeEntryBase$CompositeEntryConstructor;)Lnet/minecraft/world/level/storage/loot/entries/LootPoolEntryContainer$Serializer; a
	validate (Lnet/minecraft/world/level/storage/loot/ValidationContext;)V a
net/minecraft/world/level/storage/loot/entries/CompositeEntryBase$CompositeEntryConstructor dzy$a
net/minecraft/world/level/storage/loot/entries/DynamicLoot dzz
	name i
	createItemStack (Ljava/util/function/Consumer;Lnet/minecraft/world/level/storage/loot/LootContext;)V a
	dynamicEntry (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/world/level/storage/loot/entries/LootPoolSingletonContainer$Builder; a
	getType ()Lnet/minecraft/world/level/storage/loot/entries/LootPoolEntryType; a
net/minecraft/world/level/storage/loot/entries/DynamicLoot$Serializer dzz$a
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;II[Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition;[Lnet/minecraft/world/level/storage/loot/functions/LootItemFunction;)Lnet/minecraft/world/level/storage/loot/entries/DynamicLoot; a
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;II[Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition;[Lnet/minecraft/world/level/storage/loot/functions/LootItemFunction;)Lnet/minecraft/world/level/storage/loot/entries/LootPoolSingletonContainer; b
	serializeCustom (Lcom/google/gson/JsonObject;Lnet/minecraft/world/level/storage/loot/entries/DynamicLoot;Lcom/google/gson/JsonSerializationContext;)V a
	serializeCustom (Lcom/google/gson/JsonObject;Lnet/minecraft/world/level/storage/loot/entries/LootPoolEntryContainer;Lcom/google/gson/JsonSerializationContext;)V a
	serializeCustom (Lcom/google/gson/JsonObject;Lnet/minecraft/world/level/storage/loot/entries/LootPoolSingletonContainer;Lcom/google/gson/JsonSerializationContext;)V a
net/minecraft/world/level/storage/loot/entries/EmptyLootItem eaa
	createItemStack (Ljava/util/function/Consumer;Lnet/minecraft/world/level/storage/loot/LootContext;)V a
	emptyItem ()Lnet/minecraft/world/level/storage/loot/entries/LootPoolSingletonContainer$Builder; b
	getType ()Lnet/minecraft/world/level/storage/loot/entries/LootPoolEntryType; a
net/minecraft/world/level/storage/loot/entries/EmptyLootItem$Serializer eaa$a
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;II[Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition;[Lnet/minecraft/world/level/storage/loot/functions/LootItemFunction;)Lnet/minecraft/world/level/storage/loot/entries/EmptyLootItem; a
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;II[Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition;[Lnet/minecraft/world/level/storage/loot/functions/LootItemFunction;)Lnet/minecraft/world/level/storage/loot/entries/LootPoolSingletonContainer; b
net/minecraft/world/level/storage/loot/entries/EntryGroup eab
	compose ([Lnet/minecraft/world/level/storage/loot/entries/ComposableEntryContainer;)Lnet/minecraft/world/level/storage/loot/entries/ComposableEntryContainer; a
	getType ()Lnet/minecraft/world/level/storage/loot/entries/LootPoolEntryType; a
	list ([Lnet/minecraft/world/level/storage/loot/entries/LootPoolEntryContainer$Builder;)Lnet/minecraft/world/level/storage/loot/entries/EntryGroup$Builder; a
net/minecraft/world/level/storage/loot/entries/EntryGroup$Builder eab$a
	entries a
	append (Lnet/minecraft/world/level/storage/loot/entries/LootPoolEntryContainer$Builder;)Lnet/minecraft/world/level/storage/loot/entries/EntryGroup$Builder; b
	build ()Lnet/minecraft/world/level/storage/loot/entries/LootPoolEntryContainer; b
	getThis ()Lnet/minecraft/world/level/storage/loot/entries/EntryGroup$Builder; a
	getThis ()Lnet/minecraft/world/level/storage/loot/entries/LootPoolEntryContainer$Builder; at_
net/minecraft/world/level/storage/loot/entries/LootItem eac
	item i
	createItemStack (Ljava/util/function/Consumer;Lnet/minecraft/world/level/storage/loot/LootContext;)V a
	getType ()Lnet/minecraft/world/level/storage/loot/entries/LootPoolEntryType; a
	lootTableItem (Lnet/minecraft/world/level/ItemLike;)Lnet/minecraft/world/level/storage/loot/entries/LootPoolSingletonContainer$Builder; a
net/minecraft/world/level/storage/loot/entries/LootItem$Serializer eac$a
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;II[Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition;[Lnet/minecraft/world/level/storage/loot/functions/LootItemFunction;)Lnet/minecraft/world/level/storage/loot/entries/LootItem; a
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;II[Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition;[Lnet/minecraft/world/level/storage/loot/functions/LootItemFunction;)Lnet/minecraft/world/level/storage/loot/entries/LootPoolSingletonContainer; b
	serializeCustom (Lcom/google/gson/JsonObject;Lnet/minecraft/world/level/storage/loot/entries/LootItem;Lcom/google/gson/JsonSerializationContext;)V a
	serializeCustom (Lcom/google/gson/JsonObject;Lnet/minecraft/world/level/storage/loot/entries/LootPoolEntryContainer;Lcom/google/gson/JsonSerializationContext;)V a
	serializeCustom (Lcom/google/gson/JsonObject;Lnet/minecraft/world/level/storage/loot/entries/LootPoolSingletonContainer;Lcom/google/gson/JsonSerializationContext;)V a
net/minecraft/world/level/storage/loot/entries/LootPoolEntries ead
	ALTERNATIVES f
	DYNAMIC d
	EMPTY a
	GROUP h
	ITEM b
	REFERENCE c
	SEQUENCE g
	TAG e
	createGsonAdapter ()Ljava/lang/Object; a
	register (Ljava/lang/String;Lnet/minecraft/world/level/storage/loot/Serializer;)Lnet/minecraft/world/level/storage/loot/entries/LootPoolEntryType; a
net/minecraft/world/level/storage/loot/entries/LootPoolEntry eae
	createItemStack (Ljava/util/function/Consumer;Lnet/minecraft/world/level/storage/loot/LootContext;)V a
	getWeight (F)I a
net/minecraft/world/level/storage/loot/entries/LootPoolEntryContainer eaf
	compositeCondition c
	conditions d
	canRun (Lnet/minecraft/world/level/storage/loot/LootContext;)Z a
	getType ()Lnet/minecraft/world/level/storage/loot/entries/LootPoolEntryType; a
	validate (Lnet/minecraft/world/level/storage/loot/ValidationContext;)V a
net/minecraft/world/level/storage/loot/entries/LootPoolEntryContainer$Builder eaf$a
	conditions a
	append (Lnet/minecraft/world/level/storage/loot/entries/LootPoolEntryContainer$Builder;)Lnet/minecraft/world/level/storage/loot/entries/EntryGroup$Builder; b
	build ()Lnet/minecraft/world/level/storage/loot/entries/LootPoolEntryContainer; b
	getConditions ()[Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition; f
	getThis ()Lnet/minecraft/world/level/storage/loot/entries/LootPoolEntryContainer$Builder; at_
	otherwise (Lnet/minecraft/world/level/storage/loot/entries/LootPoolEntryContainer$Builder;)Lnet/minecraft/world/level/storage/loot/entries/AlternativesEntry$Builder; a
	then (Lnet/minecraft/world/level/storage/loot/entries/LootPoolEntryContainer$Builder;)Lnet/minecraft/world/level/storage/loot/entries/SequentialEntry$Builder; c
	unwrap ()Lnet/minecraft/world/level/storage/loot/entries/LootPoolEntryContainer$Builder; e
	unwrap ()Lnet/minecraft/world/level/storage/loot/predicates/ConditionUserBuilder; d
	when (Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition$Builder;)Lnet/minecraft/world/level/storage/loot/entries/LootPoolEntryContainer$Builder; a
	when (Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition$Builder;)Lnet/minecraft/world/level/storage/loot/predicates/ConditionUserBuilder; b
net/minecraft/world/level/storage/loot/entries/LootPoolEntryContainer$Serializer eaf$b
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Ljava/lang/Object; a
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Lnet/minecraft/world/level/storage/loot/entries/LootPoolEntryContainer; b
	deserializeCustom (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition;)Lnet/minecraft/world/level/storage/loot/entries/LootPoolEntryContainer; b
	serialize (Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V a
	serialize (Lcom/google/gson/JsonObject;Lnet/minecraft/world/level/storage/loot/entries/LootPoolEntryContainer;Lcom/google/gson/JsonSerializationContext;)V b
	serializeCustom (Lcom/google/gson/JsonObject;Lnet/minecraft/world/level/storage/loot/entries/LootPoolEntryContainer;Lcom/google/gson/JsonSerializationContext;)V a
net/minecraft/world/level/storage/loot/entries/LootPoolEntryType eag
net/minecraft/world/level/storage/loot/entries/LootPoolSingletonContainer eah
	DEFAULT_QUALITY e
	DEFAULT_WEIGHT c
	compositeFunction i
	entry j
	functions h
	quality g
	weight f
	createItemStack (Ljava/util/function/Consumer;Lnet/minecraft/world/level/storage/loot/LootContext;)V a
	simpleBuilder (Lnet/minecraft/world/level/storage/loot/entries/LootPoolSingletonContainer$EntryConstructor;)Lnet/minecraft/world/level/storage/loot/entries/LootPoolSingletonContainer$Builder; a
	validate (Lnet/minecraft/world/level/storage/loot/ValidationContext;)V a
net/minecraft/world/level/storage/loot/entries/LootPoolSingletonContainer$Builder eah$a
	functions c
	quality b
	weight a
	apply (Lnet/minecraft/world/level/storage/loot/functions/LootItemFunction$Builder;)Lnet/minecraft/world/level/storage/loot/entries/LootPoolSingletonContainer$Builder; a
	apply (Lnet/minecraft/world/level/storage/loot/functions/LootItemFunction$Builder;)Lnet/minecraft/world/level/storage/loot/functions/FunctionUserBuilder; b
	getFunctions ()[Lnet/minecraft/world/level/storage/loot/functions/LootItemFunction; a
	setQuality (I)Lnet/minecraft/world/level/storage/loot/entries/LootPoolSingletonContainer$Builder; b
	setWeight (I)Lnet/minecraft/world/level/storage/loot/entries/LootPoolSingletonContainer$Builder; a
	unwrap ()Lnet/minecraft/world/level/storage/loot/functions/FunctionUserBuilder; c
net/minecraft/world/level/storage/loot/entries/LootPoolSingletonContainer$DummyBuilder eah$b
	constructor c
	build ()Lnet/minecraft/world/level/storage/loot/entries/LootPoolEntryContainer; b
	getThis ()Lnet/minecraft/world/level/storage/loot/entries/LootPoolEntryContainer$Builder; at_
	getThis ()Lnet/minecraft/world/level/storage/loot/entries/LootPoolSingletonContainer$DummyBuilder; g
net/minecraft/world/level/storage/loot/entries/LootPoolSingletonContainer$EntryBase eah$c
	getWeight (F)I a
net/minecraft/world/level/storage/loot/entries/LootPoolSingletonContainer$EntryConstructor eah$d
net/minecraft/world/level/storage/loot/entries/LootPoolSingletonContainer$Serializer eah$e
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;II[Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition;[Lnet/minecraft/world/level/storage/loot/functions/LootItemFunction;)Lnet/minecraft/world/level/storage/loot/entries/LootPoolSingletonContainer; b
	deserializeCustom (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition;)Lnet/minecraft/world/level/storage/loot/entries/LootPoolEntryContainer; b
	deserializeCustom (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition;)Lnet/minecraft/world/level/storage/loot/entries/LootPoolSingletonContainer; a
	serializeCustom (Lcom/google/gson/JsonObject;Lnet/minecraft/world/level/storage/loot/entries/LootPoolEntryContainer;Lcom/google/gson/JsonSerializationContext;)V a
	serializeCustom (Lcom/google/gson/JsonObject;Lnet/minecraft/world/level/storage/loot/entries/LootPoolSingletonContainer;Lcom/google/gson/JsonSerializationContext;)V a
net/minecraft/world/level/storage/loot/entries/LootTableReference eai
	name i
	createItemStack (Ljava/util/function/Consumer;Lnet/minecraft/world/level/storage/loot/LootContext;)V a
	getType ()Lnet/minecraft/world/level/storage/loot/entries/LootPoolEntryType; a
	lootTableReference (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/world/level/storage/loot/entries/LootPoolSingletonContainer$Builder; a
	validate (Lnet/minecraft/world/level/storage/loot/ValidationContext;)V a
net/minecraft/world/level/storage/loot/entries/LootTableReference$Serializer eai$a
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;II[Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition;[Lnet/minecraft/world/level/storage/loot/functions/LootItemFunction;)Lnet/minecraft/world/level/storage/loot/entries/LootPoolSingletonContainer; b
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;II[Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition;[Lnet/minecraft/world/level/storage/loot/functions/LootItemFunction;)Lnet/minecraft/world/level/storage/loot/entries/LootTableReference; a
	serializeCustom (Lcom/google/gson/JsonObject;Lnet/minecraft/world/level/storage/loot/entries/LootPoolEntryContainer;Lcom/google/gson/JsonSerializationContext;)V a
	serializeCustom (Lcom/google/gson/JsonObject;Lnet/minecraft/world/level/storage/loot/entries/LootPoolSingletonContainer;Lcom/google/gson/JsonSerializationContext;)V a
	serializeCustom (Lcom/google/gson/JsonObject;Lnet/minecraft/world/level/storage/loot/entries/LootTableReference;Lcom/google/gson/JsonSerializationContext;)V a
net/minecraft/world/level/storage/loot/entries/SequentialEntry eaj
	compose ([Lnet/minecraft/world/level/storage/loot/entries/ComposableEntryContainer;)Lnet/minecraft/world/level/storage/loot/entries/ComposableEntryContainer; a
	getType ()Lnet/minecraft/world/level/storage/loot/entries/LootPoolEntryType; a
	sequential ([Lnet/minecraft/world/level/storage/loot/entries/LootPoolEntryContainer$Builder;)Lnet/minecraft/world/level/storage/loot/entries/SequentialEntry$Builder; a
net/minecraft/world/level/storage/loot/entries/SequentialEntry$Builder eaj$a
	entries a
	build ()Lnet/minecraft/world/level/storage/loot/entries/LootPoolEntryContainer; b
	getThis ()Lnet/minecraft/world/level/storage/loot/entries/LootPoolEntryContainer$Builder; at_
	getThis ()Lnet/minecraft/world/level/storage/loot/entries/SequentialEntry$Builder; a
	then (Lnet/minecraft/world/level/storage/loot/entries/LootPoolEntryContainer$Builder;)Lnet/minecraft/world/level/storage/loot/entries/SequentialEntry$Builder; c
net/minecraft/world/level/storage/loot/entries/TagEntry eak
	expand j
	tag i
	createItemStack (Ljava/util/function/Consumer;Lnet/minecraft/world/level/storage/loot/LootContext;)V a
	expandTag (Lnet/minecraft/tags/TagKey;)Lnet/minecraft/world/level/storage/loot/entries/LootPoolSingletonContainer$Builder; b
	expandTag (Lnet/minecraft/world/level/storage/loot/LootContext;Ljava/util/function/Consumer;)Z a
	getType ()Lnet/minecraft/world/level/storage/loot/entries/LootPoolEntryType; a
	tagContents (Lnet/minecraft/tags/TagKey;)Lnet/minecraft/world/level/storage/loot/entries/LootPoolSingletonContainer$Builder; a
net/minecraft/world/level/storage/loot/entries/TagEntry$Serializer eak$a
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;II[Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition;[Lnet/minecraft/world/level/storage/loot/functions/LootItemFunction;)Lnet/minecraft/world/level/storage/loot/entries/LootPoolSingletonContainer; b
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;II[Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition;[Lnet/minecraft/world/level/storage/loot/functions/LootItemFunction;)Lnet/minecraft/world/level/storage/loot/entries/TagEntry; a
	serializeCustom (Lcom/google/gson/JsonObject;Lnet/minecraft/world/level/storage/loot/entries/LootPoolEntryContainer;Lcom/google/gson/JsonSerializationContext;)V a
	serializeCustom (Lcom/google/gson/JsonObject;Lnet/minecraft/world/level/storage/loot/entries/LootPoolSingletonContainer;Lcom/google/gson/JsonSerializationContext;)V a
	serializeCustom (Lcom/google/gson/JsonObject;Lnet/minecraft/world/level/storage/loot/entries/TagEntry;Lcom/google/gson/JsonSerializationContext;)V a
net/minecraft/world/level/storage/loot/functions/ApplyBonusCount eam
	FORMULAS a
	enchantment b
	formula c
	addBonusBinomialDistributionCount (Lnet/minecraft/world/item/enchantment/Enchantment;FI)Lnet/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction$Builder; a
	addOreBonusCount (Lnet/minecraft/world/item/enchantment/Enchantment;)Lnet/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction$Builder; a
	addUniformBonusCount (Lnet/minecraft/world/item/enchantment/Enchantment;)Lnet/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction$Builder; b
	addUniformBonusCount (Lnet/minecraft/world/item/enchantment/Enchantment;I)Lnet/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction$Builder; a
	getReferencedContextParams ()Ljava/util/Set; a
	getType ()Lnet/minecraft/world/level/storage/loot/functions/LootItemFunctionType; b
	run (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/storage/loot/LootContext;)Lnet/minecraft/world/item/ItemStack; a
net/minecraft/world/level/storage/loot/functions/ApplyBonusCount$BinomialWithBonusCount eam$a
	TYPE a
	extraRounds b
	probability c
	calculateNewCount (Lnet/minecraft/util/RandomSource;II)I a
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Lnet/minecraft/world/level/storage/loot/functions/ApplyBonusCount$Formula; a
	getType ()Lnet/minecraft/resources/ResourceLocation; a
	serializeParams (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonSerializationContext;)V a
net/minecraft/world/level/storage/loot/functions/ApplyBonusCount$Formula eam$b
	calculateNewCount (Lnet/minecraft/util/RandomSource;II)I a
	getType ()Lnet/minecraft/resources/ResourceLocation; a
	serializeParams (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonSerializationContext;)V a
net/minecraft/world/level/storage/loot/functions/ApplyBonusCount$FormulaDeserializer eam$c
net/minecraft/world/level/storage/loot/functions/ApplyBonusCount$OreDrops eam$d
	TYPE a
	calculateNewCount (Lnet/minecraft/util/RandomSource;II)I a
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Lnet/minecraft/world/level/storage/loot/functions/ApplyBonusCount$Formula; a
	getType ()Lnet/minecraft/resources/ResourceLocation; a
	serializeParams (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonSerializationContext;)V a
net/minecraft/world/level/storage/loot/functions/ApplyBonusCount$Serializer eam$e
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition;)Lnet/minecraft/world/level/storage/loot/functions/ApplyBonusCount; a
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition;)Lnet/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction; b
	serialize (Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V a
	serialize (Lcom/google/gson/JsonObject;Lnet/minecraft/world/level/storage/loot/functions/ApplyBonusCount;Lcom/google/gson/JsonSerializationContext;)V a
	serialize (Lcom/google/gson/JsonObject;Lnet/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction;Lcom/google/gson/JsonSerializationContext;)V a
net/minecraft/world/level/storage/loot/functions/ApplyBonusCount$UniformBonusCount eam$f
	TYPE a
	bonusMultiplier b
	calculateNewCount (Lnet/minecraft/util/RandomSource;II)I a
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Lnet/minecraft/world/level/storage/loot/functions/ApplyBonusCount$Formula; a
	getType ()Lnet/minecraft/resources/ResourceLocation; a
	serializeParams (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonSerializationContext;)V a
net/minecraft/world/level/storage/loot/functions/ApplyExplosionDecay ean
	explosionDecay ()Lnet/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction$Builder; c
	getType ()Lnet/minecraft/world/level/storage/loot/functions/LootItemFunctionType; b
	run (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/storage/loot/LootContext;)Lnet/minecraft/world/item/ItemStack; a
net/minecraft/world/level/storage/loot/functions/ApplyExplosionDecay$Serializer ean$a
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition;)Lnet/minecraft/world/level/storage/loot/functions/ApplyExplosionDecay; a
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition;)Lnet/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction; b
net/minecraft/world/level/storage/loot/functions/CopyBlockState eao
	block a
	properties b
	copyState (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/world/level/storage/loot/functions/CopyBlockState$Builder; a
	getReferencedContextParams ()Ljava/util/Set; a
	getType ()Lnet/minecraft/world/level/storage/loot/functions/LootItemFunctionType; b
	run (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/storage/loot/LootContext;)Lnet/minecraft/world/item/ItemStack; a
	serialize (Lnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/state/properties/Property;)Ljava/lang/String; a
net/minecraft/world/level/storage/loot/functions/CopyBlockState$Builder eao$a
	block a
	properties b
	build ()Lnet/minecraft/world/level/storage/loot/functions/LootItemFunction; b
	copy (Lnet/minecraft/world/level/block/state/properties/Property;)Lnet/minecraft/world/level/storage/loot/functions/CopyBlockState$Builder; a
	getThis ()Lnet/minecraft/world/level/storage/loot/functions/CopyBlockState$Builder; a
	getThis ()Lnet/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction$Builder; c
net/minecraft/world/level/storage/loot/functions/CopyBlockState$Serializer eao$b
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition;)Lnet/minecraft/world/level/storage/loot/functions/CopyBlockState; a
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition;)Lnet/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction; b
	serialize (Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V a
	serialize (Lcom/google/gson/JsonObject;Lnet/minecraft/world/level/storage/loot/functions/CopyBlockState;Lcom/google/gson/JsonSerializationContext;)V a
	serialize (Lcom/google/gson/JsonObject;Lnet/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction;Lcom/google/gson/JsonSerializationContext;)V a
net/minecraft/world/level/storage/loot/functions/CopyNameFunction eap
	source a
	copyName (Lnet/minecraft/world/level/storage/loot/functions/CopyNameFunction$NameSource;)Lnet/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction$Builder; a
	getReferencedContextParams ()Ljava/util/Set; a
	getType ()Lnet/minecraft/world/level/storage/loot/functions/LootItemFunctionType; b
	run (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/storage/loot/LootContext;)Lnet/minecraft/world/item/ItemStack; a
net/minecraft/world/level/storage/loot/functions/CopyNameFunction$NameSource eap$a
	$VALUES g
	BLOCK_ENTITY d
	KILLER b
	KILLER_PLAYER c
	THIS a
	name e
	param f
	$values ()[Lnet/minecraft/world/level/storage/loot/functions/CopyNameFunction$NameSource; a
	getByName (Ljava/lang/String;)Lnet/minecraft/world/level/storage/loot/functions/CopyNameFunction$NameSource; a
net/minecraft/world/level/storage/loot/functions/CopyNameFunction$Serializer eap$b
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition;)Lnet/minecraft/world/level/storage/loot/functions/CopyNameFunction; a
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition;)Lnet/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction; b
	serialize (Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V a
	serialize (Lcom/google/gson/JsonObject;Lnet/minecraft/world/level/storage/loot/functions/CopyNameFunction;Lcom/google/gson/JsonSerializationContext;)V a
	serialize (Lcom/google/gson/JsonObject;Lnet/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction;Lcom/google/gson/JsonSerializationContext;)V a
net/minecraft/world/level/storage/loot/functions/CopyNbtFunction eaq
	operations b
	source a
	compileNbtPath (Ljava/lang/String;)Lnet/minecraft/commands/arguments/NbtPathArgument$NbtPath; a
	copyData (Lnet/minecraft/world/level/storage/loot/LootContext$EntityTarget;)Lnet/minecraft/world/level/storage/loot/functions/CopyNbtFunction$Builder; a
	copyData (Lnet/minecraft/world/level/storage/loot/providers/nbt/NbtProvider;)Lnet/minecraft/world/level/storage/loot/functions/CopyNbtFunction$Builder; a
	getReferencedContextParams ()Ljava/util/Set; a
	getType ()Lnet/minecraft/world/level/storage/loot/functions/LootItemFunctionType; b
	run (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/storage/loot/LootContext;)Lnet/minecraft/world/item/ItemStack; a
net/minecraft/world/level/storage/loot/functions/CopyNbtFunction$Builder eaq$a
	ops b
	source a
	build ()Lnet/minecraft/world/level/storage/loot/functions/LootItemFunction; b
	copy (Ljava/lang/String;Ljava/lang/String;)Lnet/minecraft/world/level/storage/loot/functions/CopyNbtFunction$Builder; a
	copy (Ljava/lang/String;Ljava/lang/String;Lnet/minecraft/world/level/storage/loot/functions/CopyNbtFunction$MergeStrategy;)Lnet/minecraft/world/level/storage/loot/functions/CopyNbtFunction$Builder; a
	getThis ()Lnet/minecraft/world/level/storage/loot/functions/CopyNbtFunction$Builder; a
	getThis ()Lnet/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction$Builder; c
net/minecraft/world/level/storage/loot/functions/CopyNbtFunction$CopyOperation eaq$b
	op e
	sourcePath b
	sourcePathText a
	targetPath d
	targetPathText c
	apply (Ljava/util/function/Supplier;Lnet/minecraft/nbt/Tag;)V a
	fromJson (Lcom/google/gson/JsonObject;)Lnet/minecraft/world/level/storage/loot/functions/CopyNbtFunction$CopyOperation; a
	toJson ()Lcom/google/gson/JsonObject; a
net/minecraft/world/level/storage/loot/functions/CopyNbtFunction$MergeStrategy eaq$c
	$VALUES e
	APPEND b
	MERGE c
	REPLACE a
	name d
	$values ()[Lnet/minecraft/world/level/storage/loot/functions/CopyNbtFunction$MergeStrategy; a
	getByName (Ljava/lang/String;)Lnet/minecraft/world/level/storage/loot/functions/CopyNbtFunction$MergeStrategy; a
	merge (Lnet/minecraft/nbt/Tag;Lnet/minecraft/commands/arguments/NbtPathArgument$NbtPath;Ljava/util/List;)V a
net/minecraft/world/level/storage/loot/functions/CopyNbtFunction$Serializer eaq$d
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition;)Lnet/minecraft/world/level/storage/loot/functions/CopyNbtFunction; a
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition;)Lnet/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction; b
	serialize (Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V a
	serialize (Lcom/google/gson/JsonObject;Lnet/minecraft/world/level/storage/loot/functions/CopyNbtFunction;Lcom/google/gson/JsonSerializationContext;)V a
	serialize (Lcom/google/gson/JsonObject;Lnet/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction;Lcom/google/gson/JsonSerializationContext;)V a
net/minecraft/world/level/storage/loot/functions/EnchantRandomlyFunction ear
	LOGGER a
	enchantments b
	enchantItem (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/item/enchantment/Enchantment;Lnet/minecraft/util/RandomSource;)Lnet/minecraft/world/item/ItemStack; a
	getType ()Lnet/minecraft/world/level/storage/loot/functions/LootItemFunctionType; b
	randomApplicableEnchantment ()Lnet/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction$Builder; d
	randomEnchantment ()Lnet/minecraft/world/level/storage/loot/functions/EnchantRandomlyFunction$Builder; c
	run (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/storage/loot/LootContext;)Lnet/minecraft/world/item/ItemStack; a
net/minecraft/world/level/storage/loot/functions/EnchantRandomlyFunction$Builder ear$a
	enchantments a
	build ()Lnet/minecraft/world/level/storage/loot/functions/LootItemFunction; b
	getThis ()Lnet/minecraft/world/level/storage/loot/functions/EnchantRandomlyFunction$Builder; a
	getThis ()Lnet/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction$Builder; c
	withEnchantment (Lnet/minecraft/world/item/enchantment/Enchantment;)Lnet/minecraft/world/level/storage/loot/functions/EnchantRandomlyFunction$Builder; a
net/minecraft/world/level/storage/loot/functions/EnchantRandomlyFunction$Serializer ear$b
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition;)Lnet/minecraft/world/level/storage/loot/functions/EnchantRandomlyFunction; a
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition;)Lnet/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction; b
	serialize (Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V a
	serialize (Lcom/google/gson/JsonObject;Lnet/minecraft/world/level/storage/loot/functions/EnchantRandomlyFunction;Lcom/google/gson/JsonSerializationContext;)V a
	serialize (Lcom/google/gson/JsonObject;Lnet/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction;Lcom/google/gson/JsonSerializationContext;)V a
net/minecraft/world/level/storage/loot/functions/EnchantWithLevelsFunction eas
	levels a
	treasure b
	enchantWithLevels (Lnet/minecraft/world/level/storage/loot/providers/number/NumberProvider;)Lnet/minecraft/world/level/storage/loot/functions/EnchantWithLevelsFunction$Builder; a
	getReferencedContextParams ()Ljava/util/Set; a
	getType ()Lnet/minecraft/world/level/storage/loot/functions/LootItemFunctionType; b
	run (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/storage/loot/LootContext;)Lnet/minecraft/world/item/ItemStack; a
net/minecraft/world/level/storage/loot/functions/EnchantWithLevelsFunction$Builder eas$a
	levels a
	treasure b
	allowTreasure ()Lnet/minecraft/world/level/storage/loot/functions/EnchantWithLevelsFunction$Builder; e
	build ()Lnet/minecraft/world/level/storage/loot/functions/LootItemFunction; b
	getThis ()Lnet/minecraft/world/level/storage/loot/functions/EnchantWithLevelsFunction$Builder; a
	getThis ()Lnet/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction$Builder; c
net/minecraft/world/level/storage/loot/functions/EnchantWithLevelsFunction$Serializer eas$b
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition;)Lnet/minecraft/world/level/storage/loot/functions/EnchantWithLevelsFunction; a
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition;)Lnet/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction; b
	serialize (Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V a
	serialize (Lcom/google/gson/JsonObject;Lnet/minecraft/world/level/storage/loot/functions/EnchantWithLevelsFunction;Lcom/google/gson/JsonSerializationContext;)V a
	serialize (Lcom/google/gson/JsonObject;Lnet/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction;Lcom/google/gson/JsonSerializationContext;)V a
net/minecraft/world/level/storage/loot/functions/ExplorationMapFunction eat
	DEFAULT_DECORATION c
	DEFAULT_DECORATION_NAME b
	DEFAULT_DESTINATION a
	DEFAULT_SEARCH_RADIUS e
	DEFAULT_SKIP_EXISTING f
	DEFAULT_ZOOM d
	LOGGER h
	destination i
	mapDecoration j
	searchRadius l
	skipKnownStructures m
	zoom k
	getReferencedContextParams ()Ljava/util/Set; a
	getType ()Lnet/minecraft/world/level/storage/loot/functions/LootItemFunctionType; b
	makeExplorationMap ()Lnet/minecraft/world/level/storage/loot/functions/ExplorationMapFunction$Builder; c
	run (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/storage/loot/LootContext;)Lnet/minecraft/world/item/ItemStack; a
net/minecraft/world/level/storage/loot/functions/ExplorationMapFunction$Builder eat$a
	destination a
	mapDecoration b
	searchRadius d
	skipKnownStructures e
	zoom c
	build ()Lnet/minecraft/world/level/storage/loot/functions/LootItemFunction; b
	getThis ()Lnet/minecraft/world/level/storage/loot/functions/ExplorationMapFunction$Builder; a
	getThis ()Lnet/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction$Builder; c
	setDestination (Lnet/minecraft/tags/TagKey;)Lnet/minecraft/world/level/storage/loot/functions/ExplorationMapFunction$Builder; a
	setMapDecoration (Lnet/minecraft/world/level/saveddata/maps/MapDecoration$Type;)Lnet/minecraft/world/level/storage/loot/functions/ExplorationMapFunction$Builder; a
	setSearchRadius (I)Lnet/minecraft/world/level/storage/loot/functions/ExplorationMapFunction$Builder; a
	setSkipKnownStructures (Z)Lnet/minecraft/world/level/storage/loot/functions/ExplorationMapFunction$Builder; a
	setZoom (B)Lnet/minecraft/world/level/storage/loot/functions/ExplorationMapFunction$Builder; a
net/minecraft/world/level/storage/loot/functions/ExplorationMapFunction$Serializer eat$b
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition;)Lnet/minecraft/world/level/storage/loot/functions/ExplorationMapFunction; a
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition;)Lnet/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction; b
	readStructure (Lcom/google/gson/JsonObject;)Lnet/minecraft/tags/TagKey; a
	serialize (Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V a
	serialize (Lcom/google/gson/JsonObject;Lnet/minecraft/world/level/storage/loot/functions/ExplorationMapFunction;Lcom/google/gson/JsonSerializationContext;)V a
	serialize (Lcom/google/gson/JsonObject;Lnet/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction;Lcom/google/gson/JsonSerializationContext;)V a
net/minecraft/world/level/storage/loot/functions/FillPlayerHead eau
	entityTarget a
	fillPlayerHead (Lnet/minecraft/world/level/storage/loot/LootContext$EntityTarget;)Lnet/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction$Builder; a
	getReferencedContextParams ()Ljava/util/Set; a
	getType ()Lnet/minecraft/world/level/storage/loot/functions/LootItemFunctionType; b
	run (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/storage/loot/LootContext;)Lnet/minecraft/world/item/ItemStack; a
net/minecraft/world/level/storage/loot/functions/FillPlayerHead$Serializer eau$a
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition;)Lnet/minecraft/world/level/storage/loot/functions/FillPlayerHead; a
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition;)Lnet/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction; b
	serialize (Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V a
	serialize (Lcom/google/gson/JsonObject;Lnet/minecraft/world/level/storage/loot/functions/FillPlayerHead;Lcom/google/gson/JsonSerializationContext;)V a
	serialize (Lcom/google/gson/JsonObject;Lnet/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction;Lcom/google/gson/JsonSerializationContext;)V a
net/minecraft/world/level/storage/loot/functions/FunctionReference eav
	LOGGER a
	name b
	functionReference (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction$Builder; a
	getType ()Lnet/minecraft/world/level/storage/loot/functions/LootItemFunctionType; b
	run (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/storage/loot/LootContext;)Lnet/minecraft/world/item/ItemStack; a
	validate (Lnet/minecraft/world/level/storage/loot/ValidationContext;)V a
net/minecraft/world/level/storage/loot/functions/FunctionReference$Serializer eav$a
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition;)Lnet/minecraft/world/level/storage/loot/functions/FunctionReference; a
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition;)Lnet/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction; b
	serialize (Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V a
	serialize (Lcom/google/gson/JsonObject;Lnet/minecraft/world/level/storage/loot/functions/FunctionReference;Lcom/google/gson/JsonSerializationContext;)V a
	serialize (Lcom/google/gson/JsonObject;Lnet/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction;Lcom/google/gson/JsonSerializationContext;)V a
net/minecraft/world/level/storage/loot/functions/FunctionUserBuilder eaw
	apply (Ljava/lang/Iterable;Ljava/util/function/Function;)Lnet/minecraft/world/level/storage/loot/functions/FunctionUserBuilder; a
	apply (Lnet/minecraft/world/level/storage/loot/functions/LootItemFunction$Builder;)Lnet/minecraft/world/level/storage/loot/functions/FunctionUserBuilder; b
	apply ([Ljava/lang/Object;Ljava/util/function/Function;)Lnet/minecraft/world/level/storage/loot/functions/FunctionUserBuilder; a
	unwrap ()Lnet/minecraft/world/level/storage/loot/functions/FunctionUserBuilder; c
net/minecraft/world/level/storage/loot/functions/LimitCount eax
	limiter a
	getReferencedContextParams ()Ljava/util/Set; a
	getType ()Lnet/minecraft/world/level/storage/loot/functions/LootItemFunctionType; b
	limitCount (Lnet/minecraft/world/level/storage/loot/IntRange;)Lnet/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction$Builder; a
	run (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/storage/loot/LootContext;)Lnet/minecraft/world/item/ItemStack; a
net/minecraft/world/level/storage/loot/functions/LimitCount$Serializer eax$a
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition;)Lnet/minecraft/world/level/storage/loot/functions/LimitCount; a
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition;)Lnet/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction; b
	serialize (Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V a
	serialize (Lcom/google/gson/JsonObject;Lnet/minecraft/world/level/storage/loot/functions/LimitCount;Lcom/google/gson/JsonSerializationContext;)V a
	serialize (Lcom/google/gson/JsonObject;Lnet/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction;Lcom/google/gson/JsonSerializationContext;)V a
net/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction eay
	compositePredicates a
	predicates g
	apply (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/storage/loot/LootContext;)Lnet/minecraft/world/item/ItemStack; b
	run (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/storage/loot/LootContext;)Lnet/minecraft/world/item/ItemStack; a
	simpleBuilder (Ljava/util/function/Function;)Lnet/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction$Builder; a
	validate (Lnet/minecraft/world/level/storage/loot/ValidationContext;)V a
net/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction$Builder eay$a
	conditions a
	getConditions ()[Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition; g
	getThis ()Lnet/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction$Builder; c
	unwrap ()Lnet/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction$Builder; f
	unwrap ()Lnet/minecraft/world/level/storage/loot/predicates/ConditionUserBuilder; d
	when (Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition$Builder;)Lnet/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction$Builder; a
	when (Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition$Builder;)Lnet/minecraft/world/level/storage/loot/predicates/ConditionUserBuilder; b
net/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction$DummyBuilder eay$b
	constructor a
	build ()Lnet/minecraft/world/level/storage/loot/functions/LootItemFunction; b
	getThis ()Lnet/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction$Builder; c
	getThis ()Lnet/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction$DummyBuilder; a
net/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction$Serializer eay$c
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Ljava/lang/Object; a
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Lnet/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction; b
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition;)Lnet/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction; b
	serialize (Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V a
	serialize (Lcom/google/gson/JsonObject;Lnet/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction;Lcom/google/gson/JsonSerializationContext;)V a
net/minecraft/world/level/storage/loot/functions/LootItemFunction eaz
	decorate (Ljava/util/function/BiFunction;Ljava/util/function/Consumer;Lnet/minecraft/world/level/storage/loot/LootContext;)Ljava/util/function/Consumer; a
	getType ()Lnet/minecraft/world/level/storage/loot/functions/LootItemFunctionType; b
net/minecraft/world/level/storage/loot/functions/LootItemFunction$Builder eaz$a
	build ()Lnet/minecraft/world/level/storage/loot/functions/LootItemFunction; b
net/minecraft/world/level/storage/loot/functions/LootItemFunctionType eba
net/minecraft/world/level/storage/loot/functions/LootItemFunctions ebb
	APPLY_BONUS q
	COPY_NAME n
	COPY_NBT v
	COPY_STATE w
	ENCHANT_RANDOMLY d
	ENCHANT_WITH_LEVELS c
	EXPLORATION_MAP l
	EXPLOSION_DECAY s
	FILL_PLAYER_HEAD u
	FURNACE_SMELT g
	IDENTITY a
	LIMIT_COUNT p
	LOOTING_ENCHANT h
	REFERENCE A
	SET_ATTRIBUTES j
	SET_BANNER_PATTERN x
	SET_CONTENTS o
	SET_COUNT b
	SET_DAMAGE i
	SET_ENCHANTMENTS e
	SET_INSTRUMENT z
	SET_LOOT_TABLE r
	SET_LORE t
	SET_NAME k
	SET_NBT f
	SET_POTION y
	SET_STEW_EFFECT m
	compose ([Ljava/util/function/BiFunction;)Ljava/util/function/BiFunction; a
	createGsonAdapter ()Ljava/lang/Object; a
	register (Ljava/lang/String;Lnet/minecraft/world/level/storage/loot/Serializer;)Lnet/minecraft/world/level/storage/loot/functions/LootItemFunctionType; a
net/minecraft/world/level/storage/loot/functions/LootingEnchantFunction ebc
	NO_LIMIT a
	limit c
	value b
	getReferencedContextParams ()Ljava/util/Set; a
	getType ()Lnet/minecraft/world/level/storage/loot/functions/LootItemFunctionType; b
	hasLimit ()Z c
	lootingMultiplier (Lnet/minecraft/world/level/storage/loot/providers/number/NumberProvider;)Lnet/minecraft/world/level/storage/loot/functions/LootingEnchantFunction$Builder; a
	run (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/storage/loot/LootContext;)Lnet/minecraft/world/item/ItemStack; a
net/minecraft/world/level/storage/loot/functions/LootingEnchantFunction$Builder ebc$a
	count a
	limit b
	build ()Lnet/minecraft/world/level/storage/loot/functions/LootItemFunction; b
	getThis ()Lnet/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction$Builder; c
	getThis ()Lnet/minecraft/world/level/storage/loot/functions/LootingEnchantFunction$Builder; a
	setLimit (I)Lnet/minecraft/world/level/storage/loot/functions/LootingEnchantFunction$Builder; a
net/minecraft/world/level/storage/loot/functions/LootingEnchantFunction$Serializer ebc$b
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition;)Lnet/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction; b
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition;)Lnet/minecraft/world/level/storage/loot/functions/LootingEnchantFunction; a
	serialize (Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V a
	serialize (Lcom/google/gson/JsonObject;Lnet/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction;Lcom/google/gson/JsonSerializationContext;)V a
	serialize (Lcom/google/gson/JsonObject;Lnet/minecraft/world/level/storage/loot/functions/LootingEnchantFunction;Lcom/google/gson/JsonSerializationContext;)V a
net/minecraft/world/level/storage/loot/functions/SetAttributesFunction ebd
	modifiers a
	getReferencedContextParams ()Ljava/util/Set; a
	getType ()Lnet/minecraft/world/level/storage/loot/functions/LootItemFunctionType; b
	modifier (Ljava/lang/String;Lnet/minecraft/world/entity/ai/attributes/Attribute;Lnet/minecraft/world/entity/ai/attributes/AttributeModifier$Operation;Lnet/minecraft/world/level/storage/loot/providers/number/NumberProvider;)Lnet/minecraft/world/level/storage/loot/functions/SetAttributesFunction$ModifierBuilder; a
	run (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/storage/loot/LootContext;)Lnet/minecraft/world/item/ItemStack; a
	setAttributes ()Lnet/minecraft/world/level/storage/loot/functions/SetAttributesFunction$Builder; c
net/minecraft/world/level/storage/loot/functions/SetAttributesFunction$Builder ebd$a
	modifiers a
	build ()Lnet/minecraft/world/level/storage/loot/functions/LootItemFunction; b
	getThis ()Lnet/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction$Builder; c
	getThis ()Lnet/minecraft/world/level/storage/loot/functions/SetAttributesFunction$Builder; a
	withModifier (Lnet/minecraft/world/level/storage/loot/functions/SetAttributesFunction$ModifierBuilder;)Lnet/minecraft/world/level/storage/loot/functions/SetAttributesFunction$Builder; a
net/minecraft/world/level/storage/loot/functions/SetAttributesFunction$Modifier ebd$b
	amount d
	attribute b
	id e
	name a
	operation c
	slots f
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Lnet/minecraft/world/level/storage/loot/functions/SetAttributesFunction$Modifier; a
	operationFromString (Ljava/lang/String;)Lnet/minecraft/world/entity/ai/attributes/AttributeModifier$Operation; a
	operationToString (Lnet/minecraft/world/entity/ai/attributes/AttributeModifier$Operation;)Ljava/lang/String; a
	serialize (Lcom/google/gson/JsonSerializationContext;)Lcom/google/gson/JsonObject; a
net/minecraft/world/level/storage/loot/functions/SetAttributesFunction$ModifierBuilder ebd$c
	amount d
	attribute b
	id e
	name a
	operation c
	slots f
	build ()Lnet/minecraft/world/level/storage/loot/functions/SetAttributesFunction$Modifier; a
	forSlot (Lnet/minecraft/world/entity/EquipmentSlot;)Lnet/minecraft/world/level/storage/loot/functions/SetAttributesFunction$ModifierBuilder; a
	withUuid (Ljava/util/UUID;)Lnet/minecraft/world/level/storage/loot/functions/SetAttributesFunction$ModifierBuilder; a
net/minecraft/world/level/storage/loot/functions/SetAttributesFunction$Serializer ebd$d
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition;)Lnet/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction; b
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition;)Lnet/minecraft/world/level/storage/loot/functions/SetAttributesFunction; a
	serialize (Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V a
	serialize (Lcom/google/gson/JsonObject;Lnet/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction;Lcom/google/gson/JsonSerializationContext;)V a
	serialize (Lcom/google/gson/JsonObject;Lnet/minecraft/world/level/storage/loot/functions/SetAttributesFunction;Lcom/google/gson/JsonSerializationContext;)V a
net/minecraft/world/level/storage/loot/functions/SetBannerPatternFunction ebe
	append b
	patterns a
	getType ()Lnet/minecraft/world/level/storage/loot/functions/LootItemFunctionType; b
	run (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/storage/loot/LootContext;)Lnet/minecraft/world/item/ItemStack; a
	setBannerPattern (Z)Lnet/minecraft/world/level/storage/loot/functions/SetBannerPatternFunction$Builder; a
net/minecraft/world/level/storage/loot/functions/SetBannerPatternFunction$Builder ebe$a
	append b
	patterns a
	addPattern (Lnet/minecraft/core/Holder;Lnet/minecraft/world/item/DyeColor;)Lnet/minecraft/world/level/storage/loot/functions/SetBannerPatternFunction$Builder; a
	addPattern (Lnet/minecraft/resources/ResourceKey;Lnet/minecraft/world/item/DyeColor;)Lnet/minecraft/world/level/storage/loot/functions/SetBannerPatternFunction$Builder; a
	build ()Lnet/minecraft/world/level/storage/loot/functions/LootItemFunction; b
	getThis ()Lnet/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction$Builder; c
	getThis ()Lnet/minecraft/world/level/storage/loot/functions/SetBannerPatternFunction$Builder; a
net/minecraft/world/level/storage/loot/functions/SetBannerPatternFunction$Serializer ebe$b
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition;)Lnet/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction; b
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition;)Lnet/minecraft/world/level/storage/loot/functions/SetBannerPatternFunction; a
	serialize (Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V a
	serialize (Lcom/google/gson/JsonObject;Lnet/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction;Lcom/google/gson/JsonSerializationContext;)V a
	serialize (Lcom/google/gson/JsonObject;Lnet/minecraft/world/level/storage/loot/functions/SetBannerPatternFunction;Lcom/google/gson/JsonSerializationContext;)V a
net/minecraft/world/level/storage/loot/functions/SetContainerContents ebf
	entries a
	type b
	getType ()Lnet/minecraft/world/level/storage/loot/functions/LootItemFunctionType; b
	run (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/storage/loot/LootContext;)Lnet/minecraft/world/item/ItemStack; a
	setContents (Lnet/minecraft/world/level/block/entity/BlockEntityType;)Lnet/minecraft/world/level/storage/loot/functions/SetContainerContents$Builder; a
	validate (Lnet/minecraft/world/level/storage/loot/ValidationContext;)V a
net/minecraft/world/level/storage/loot/functions/SetContainerContents$Builder ebf$a
	entries a
	type b
	build ()Lnet/minecraft/world/level/storage/loot/functions/LootItemFunction; b
	getThis ()Lnet/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction$Builder; c
	getThis ()Lnet/minecraft/world/level/storage/loot/functions/SetContainerContents$Builder; a
	withEntry (Lnet/minecraft/world/level/storage/loot/entries/LootPoolEntryContainer$Builder;)Lnet/minecraft/world/level/storage/loot/functions/SetContainerContents$Builder; a
net/minecraft/world/level/storage/loot/functions/SetContainerContents$Serializer ebf$b
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition;)Lnet/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction; b
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition;)Lnet/minecraft/world/level/storage/loot/functions/SetContainerContents; a
	serialize (Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V a
	serialize (Lcom/google/gson/JsonObject;Lnet/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction;Lcom/google/gson/JsonSerializationContext;)V a
	serialize (Lcom/google/gson/JsonObject;Lnet/minecraft/world/level/storage/loot/functions/SetContainerContents;Lcom/google/gson/JsonSerializationContext;)V a
net/minecraft/world/level/storage/loot/functions/SetContainerLootTable ebg
	name a
	seed b
	type c
	getType ()Lnet/minecraft/world/level/storage/loot/functions/LootItemFunctionType; b
	run (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/storage/loot/LootContext;)Lnet/minecraft/world/item/ItemStack; a
	validate (Lnet/minecraft/world/level/storage/loot/ValidationContext;)V a
	withLootTable (Lnet/minecraft/world/level/block/entity/BlockEntityType;Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction$Builder; a
	withLootTable (Lnet/minecraft/world/level/block/entity/BlockEntityType;Lnet/minecraft/resources/ResourceLocation;J)Lnet/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction$Builder; a
net/minecraft/world/level/storage/loot/functions/SetContainerLootTable$Serializer ebg$a
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition;)Lnet/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction; b
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition;)Lnet/minecraft/world/level/storage/loot/functions/SetContainerLootTable; a
	serialize (Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V a
	serialize (Lcom/google/gson/JsonObject;Lnet/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction;Lcom/google/gson/JsonSerializationContext;)V a
	serialize (Lcom/google/gson/JsonObject;Lnet/minecraft/world/level/storage/loot/functions/SetContainerLootTable;Lcom/google/gson/JsonSerializationContext;)V a
net/minecraft/world/level/storage/loot/functions/SetEnchantmentsFunction ebh
	add b
	enchantments a
	getReferencedContextParams ()Ljava/util/Set; a
	getType ()Lnet/minecraft/world/level/storage/loot/functions/LootItemFunctionType; b
	run (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/storage/loot/LootContext;)Lnet/minecraft/world/item/ItemStack; a
	updateEnchantment (Ljava/util/Map;Lnet/minecraft/world/item/enchantment/Enchantment;I)V a
net/minecraft/world/level/storage/loot/functions/SetEnchantmentsFunction$Builder ebh$a
	add b
	enchantments a
	build ()Lnet/minecraft/world/level/storage/loot/functions/LootItemFunction; b
	getThis ()Lnet/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction$Builder; c
	getThis ()Lnet/minecraft/world/level/storage/loot/functions/SetEnchantmentsFunction$Builder; a
	withEnchantment (Lnet/minecraft/world/item/enchantment/Enchantment;Lnet/minecraft/world/level/storage/loot/providers/number/NumberProvider;)Lnet/minecraft/world/level/storage/loot/functions/SetEnchantmentsFunction$Builder; a
net/minecraft/world/level/storage/loot/functions/SetEnchantmentsFunction$Serializer ebh$b
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition;)Lnet/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction; b
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition;)Lnet/minecraft/world/level/storage/loot/functions/SetEnchantmentsFunction; a
	serialize (Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V a
	serialize (Lcom/google/gson/JsonObject;Lnet/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction;Lcom/google/gson/JsonSerializationContext;)V a
	serialize (Lcom/google/gson/JsonObject;Lnet/minecraft/world/level/storage/loot/functions/SetEnchantmentsFunction;Lcom/google/gson/JsonSerializationContext;)V a
net/minecraft/world/level/storage/loot/functions/SetInstrumentFunction ebi
	options a
	getType ()Lnet/minecraft/world/level/storage/loot/functions/LootItemFunctionType; b
	run (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/storage/loot/LootContext;)Lnet/minecraft/world/item/ItemStack; a
	setInstrumentOptions (Lnet/minecraft/tags/TagKey;)Lnet/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction$Builder; a
net/minecraft/world/level/storage/loot/functions/SetInstrumentFunction$Serializer ebi$a
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition;)Lnet/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction; b
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition;)Lnet/minecraft/world/level/storage/loot/functions/SetInstrumentFunction; a
	serialize (Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V a
	serialize (Lcom/google/gson/JsonObject;Lnet/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction;Lcom/google/gson/JsonSerializationContext;)V a
	serialize (Lcom/google/gson/JsonObject;Lnet/minecraft/world/level/storage/loot/functions/SetInstrumentFunction;Lcom/google/gson/JsonSerializationContext;)V a
net/minecraft/world/level/storage/loot/functions/SetItemCountFunction ebj
	add b
	value a
	getReferencedContextParams ()Ljava/util/Set; a
	getType ()Lnet/minecraft/world/level/storage/loot/functions/LootItemFunctionType; b
	run (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/storage/loot/LootContext;)Lnet/minecraft/world/item/ItemStack; a
	setCount (Lnet/minecraft/world/level/storage/loot/providers/number/NumberProvider;)Lnet/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction$Builder; a
	setCount (Lnet/minecraft/world/level/storage/loot/providers/number/NumberProvider;Z)Lnet/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction$Builder; a
net/minecraft/world/level/storage/loot/functions/SetItemCountFunction$Serializer ebj$a
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition;)Lnet/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction; b
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition;)Lnet/minecraft/world/level/storage/loot/functions/SetItemCountFunction; a
	serialize (Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V a
	serialize (Lcom/google/gson/JsonObject;Lnet/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction;Lcom/google/gson/JsonSerializationContext;)V a
	serialize (Lcom/google/gson/JsonObject;Lnet/minecraft/world/level/storage/loot/functions/SetItemCountFunction;Lcom/google/gson/JsonSerializationContext;)V a
net/minecraft/world/level/storage/loot/functions/SetItemDamageFunction ebk
	LOGGER a
	add c
	damage b
	getReferencedContextParams ()Ljava/util/Set; a
	getType ()Lnet/minecraft/world/level/storage/loot/functions/LootItemFunctionType; b
	run (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/storage/loot/LootContext;)Lnet/minecraft/world/item/ItemStack; a
	setDamage (Lnet/minecraft/world/level/storage/loot/providers/number/NumberProvider;)Lnet/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction$Builder; a
	setDamage (Lnet/minecraft/world/level/storage/loot/providers/number/NumberProvider;Z)Lnet/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction$Builder; a
net/minecraft/world/level/storage/loot/functions/SetItemDamageFunction$Serializer ebk$a
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition;)Lnet/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction; b
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition;)Lnet/minecraft/world/level/storage/loot/functions/SetItemDamageFunction; a
	serialize (Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V a
	serialize (Lcom/google/gson/JsonObject;Lnet/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction;Lcom/google/gson/JsonSerializationContext;)V a
	serialize (Lcom/google/gson/JsonObject;Lnet/minecraft/world/level/storage/loot/functions/SetItemDamageFunction;Lcom/google/gson/JsonSerializationContext;)V a
net/minecraft/world/level/storage/loot/functions/SetLoreFunction ebl
	lore b
	replace a
	resolutionContext c
	getLoreTag (Lnet/minecraft/world/item/ItemStack;Z)Lnet/minecraft/nbt/ListTag; a
	getReferencedContextParams ()Ljava/util/Set; a
	getType ()Lnet/minecraft/world/level/storage/loot/functions/LootItemFunctionType; b
	run (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/storage/loot/LootContext;)Lnet/minecraft/world/item/ItemStack; a
	setLore ()Lnet/minecraft/world/level/storage/loot/functions/SetLoreFunction$Builder; c
net/minecraft/world/level/storage/loot/functions/SetLoreFunction$Builder ebl$a
	lore c
	replace a
	resolutionContext b
	addLine (Lnet/minecraft/network/chat/Component;)Lnet/minecraft/world/level/storage/loot/functions/SetLoreFunction$Builder; a
	build ()Lnet/minecraft/world/level/storage/loot/functions/LootItemFunction; b
	getThis ()Lnet/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction$Builder; c
	getThis ()Lnet/minecraft/world/level/storage/loot/functions/SetLoreFunction$Builder; a
	setReplace (Z)Lnet/minecraft/world/level/storage/loot/functions/SetLoreFunction$Builder; a
	setResolutionContext (Lnet/minecraft/world/level/storage/loot/LootContext$EntityTarget;)Lnet/minecraft/world/level/storage/loot/functions/SetLoreFunction$Builder; a
net/minecraft/world/level/storage/loot/functions/SetLoreFunction$Serializer ebl$b
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition;)Lnet/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction; b
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition;)Lnet/minecraft/world/level/storage/loot/functions/SetLoreFunction; a
	serialize (Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V a
	serialize (Lcom/google/gson/JsonObject;Lnet/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction;Lcom/google/gson/JsonSerializationContext;)V a
	serialize (Lcom/google/gson/JsonObject;Lnet/minecraft/world/level/storage/loot/functions/SetLoreFunction;Lcom/google/gson/JsonSerializationContext;)V a
net/minecraft/world/level/storage/loot/functions/SetNameFunction ebm
	LOGGER a
	name b
	resolutionContext c
	createResolver (Lnet/minecraft/world/level/storage/loot/LootContext;Lnet/minecraft/world/level/storage/loot/LootContext$EntityTarget;)Ljava/util/function/UnaryOperator; a
	getReferencedContextParams ()Ljava/util/Set; a
	getType ()Lnet/minecraft/world/level/storage/loot/functions/LootItemFunctionType; b
	run (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/storage/loot/LootContext;)Lnet/minecraft/world/item/ItemStack; a
	setName (Lnet/minecraft/network/chat/Component;)Lnet/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction$Builder; a
	setName (Lnet/minecraft/network/chat/Component;Lnet/minecraft/world/level/storage/loot/LootContext$EntityTarget;)Lnet/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction$Builder; a
net/minecraft/world/level/storage/loot/functions/SetNameFunction$Serializer ebm$a
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition;)Lnet/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction; b
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition;)Lnet/minecraft/world/level/storage/loot/functions/SetNameFunction; a
	serialize (Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V a
	serialize (Lcom/google/gson/JsonObject;Lnet/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction;Lcom/google/gson/JsonSerializationContext;)V a
	serialize (Lcom/google/gson/JsonObject;Lnet/minecraft/world/level/storage/loot/functions/SetNameFunction;Lcom/google/gson/JsonSerializationContext;)V a
net/minecraft/world/level/storage/loot/functions/SetNbtFunction ebn
	tag a
	getType ()Lnet/minecraft/world/level/storage/loot/functions/LootItemFunctionType; b
	run (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/storage/loot/LootContext;)Lnet/minecraft/world/item/ItemStack; a
	setTag (Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction$Builder; a
net/minecraft/world/level/storage/loot/functions/SetNbtFunction$Serializer ebn$a
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition;)Lnet/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction; b
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition;)Lnet/minecraft/world/level/storage/loot/functions/SetNbtFunction; a
	serialize (Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V a
	serialize (Lcom/google/gson/JsonObject;Lnet/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction;Lcom/google/gson/JsonSerializationContext;)V a
	serialize (Lcom/google/gson/JsonObject;Lnet/minecraft/world/level/storage/loot/functions/SetNbtFunction;Lcom/google/gson/JsonSerializationContext;)V a
net/minecraft/world/level/storage/loot/functions/SetPotionFunction ebo
	potion a
	getType ()Lnet/minecraft/world/level/storage/loot/functions/LootItemFunctionType; b
	run (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/storage/loot/LootContext;)Lnet/minecraft/world/item/ItemStack; a
	setPotion (Lnet/minecraft/world/item/alchemy/Potion;)Lnet/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction$Builder; a
net/minecraft/world/level/storage/loot/functions/SetPotionFunction$Serializer ebo$a
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition;)Lnet/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction; b
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition;)Lnet/minecraft/world/level/storage/loot/functions/SetPotionFunction; a
	serialize (Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V a
	serialize (Lcom/google/gson/JsonObject;Lnet/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction;Lcom/google/gson/JsonSerializationContext;)V a
	serialize (Lcom/google/gson/JsonObject;Lnet/minecraft/world/level/storage/loot/functions/SetPotionFunction;Lcom/google/gson/JsonSerializationContext;)V a
net/minecraft/world/level/storage/loot/functions/SetStewEffectFunction ebp
	effectDurationMap a
	getReferencedContextParams ()Ljava/util/Set; a
	getType ()Lnet/minecraft/world/level/storage/loot/functions/LootItemFunctionType; b
	run (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/storage/loot/LootContext;)Lnet/minecraft/world/item/ItemStack; a
	stewEffect ()Lnet/minecraft/world/level/storage/loot/functions/SetStewEffectFunction$Builder; c
net/minecraft/world/level/storage/loot/functions/SetStewEffectFunction$Builder ebp$a
	effectDurationMap a
	build ()Lnet/minecraft/world/level/storage/loot/functions/LootItemFunction; b
	getThis ()Lnet/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction$Builder; c
	getThis ()Lnet/minecraft/world/level/storage/loot/functions/SetStewEffectFunction$Builder; a
	withEffect (Lnet/minecraft/world/effect/MobEffect;Lnet/minecraft/world/level/storage/loot/providers/number/NumberProvider;)Lnet/minecraft/world/level/storage/loot/functions/SetStewEffectFunction$Builder; a
net/minecraft/world/level/storage/loot/functions/SetStewEffectFunction$Serializer ebp$b
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition;)Lnet/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction; b
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition;)Lnet/minecraft/world/level/storage/loot/functions/SetStewEffectFunction; a
	serialize (Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V a
	serialize (Lcom/google/gson/JsonObject;Lnet/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction;Lcom/google/gson/JsonSerializationContext;)V a
	serialize (Lcom/google/gson/JsonObject;Lnet/minecraft/world/level/storage/loot/functions/SetStewEffectFunction;Lcom/google/gson/JsonSerializationContext;)V a
net/minecraft/world/level/storage/loot/functions/SmeltItemFunction ebq
	LOGGER a
	getType ()Lnet/minecraft/world/level/storage/loot/functions/LootItemFunctionType; b
	run (Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/level/storage/loot/LootContext;)Lnet/minecraft/world/item/ItemStack; a
	smelted ()Lnet/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction$Builder; c
net/minecraft/world/level/storage/loot/functions/SmeltItemFunction$Serializer ebq$a
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition;)Lnet/minecraft/world/level/storage/loot/functions/LootItemConditionalFunction; b
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;[Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition;)Lnet/minecraft/world/level/storage/loot/functions/SmeltItemFunction; a
net/minecraft/world/level/storage/loot/parameters/LootContextParam ebt
	name a
	getName ()Lnet/minecraft/resources/ResourceLocation; a
net/minecraft/world/level/storage/loot/parameters/LootContextParamSet ebu
	all b
	required a
	builder ()Lnet/minecraft/world/level/storage/loot/parameters/LootContextParamSet$Builder; c
	getAllowed ()Ljava/util/Set; b
	getRequired ()Ljava/util/Set; a
	isAllowed (Lnet/minecraft/world/level/storage/loot/parameters/LootContextParam;)Z a
	validateUser (Lnet/minecraft/world/level/storage/loot/ValidationContext;Lnet/minecraft/world/level/storage/loot/LootContextUser;)V a
net/minecraft/world/level/storage/loot/parameters/LootContextParamSet$Builder ebu$a
	optional b
	required a
	build ()Lnet/minecraft/world/level/storage/loot/parameters/LootContextParamSet; a
	optional (Lnet/minecraft/world/level/storage/loot/parameters/LootContextParam;)Lnet/minecraft/world/level/storage/loot/parameters/LootContextParamSet$Builder; b
	required (Lnet/minecraft/world/level/storage/loot/parameters/LootContextParam;)Lnet/minecraft/world/level/storage/loot/parameters/LootContextParamSet$Builder; a
net/minecraft/world/level/storage/loot/parameters/LootContextParamSets ebv
	ADVANCEMENT_ENTITY k
	ADVANCEMENT_LOCATION l
	ADVANCEMENT_REWARD j
	ALL_PARAMS m
	ARCHAEOLOGY g
	BLOCK n
	CHEST b
	COMMAND c
	EMPTY a
	ENTITY f
	FISHING e
	GIFT h
	PIGLIN_BARTER i
	REGISTRY o
	SELECTOR d
	get (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/world/level/storage/loot/parameters/LootContextParamSet; a
	getKey (Lnet/minecraft/world/level/storage/loot/parameters/LootContextParamSet;)Lnet/minecraft/resources/ResourceLocation; a
	register (Ljava/lang/String;Ljava/util/function/Consumer;)Lnet/minecraft/world/level/storage/loot/parameters/LootContextParamSet; a
net/minecraft/world/level/storage/loot/parameters/LootContextParams ebw
	BLOCK_ENTITY h
	BLOCK_STATE g
	DAMAGE_SOURCE c
	DIRECT_KILLER_ENTITY e
	EXPLOSION_RADIUS j
	KILLER_ENTITY d
	LAST_DAMAGE_PLAYER b
	ORIGIN f
	THIS_ENTITY a
	TOOL i
	create (Ljava/lang/String;)Lnet/minecraft/world/level/storage/loot/parameters/LootContextParam; a
net/minecraft/world/level/storage/loot/predicates/AllOfCondition eby
	allOf ([Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition$Builder;)Lnet/minecraft/world/level/storage/loot/predicates/AllOfCondition$Builder; a
	getType ()Lnet/minecraft/world/level/storage/loot/predicates/LootItemConditionType; b
net/minecraft/world/level/storage/loot/predicates/AllOfCondition$Builder eby$a
	create ([Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition;)Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition; a
net/minecraft/world/level/storage/loot/predicates/AllOfCondition$Serializer eby$b
	create ([Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition;)Lnet/minecraft/world/level/storage/loot/predicates/AllOfCondition; a
	create ([Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition;)Lnet/minecraft/world/level/storage/loot/predicates/CompositeLootItemCondition; b
net/minecraft/world/level/storage/loot/predicates/AnyOfCondition ebz
	anyOf ([Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition$Builder;)Lnet/minecraft/world/level/storage/loot/predicates/AnyOfCondition$Builder; a
	getType ()Lnet/minecraft/world/level/storage/loot/predicates/LootItemConditionType; b
net/minecraft/world/level/storage/loot/predicates/AnyOfCondition$Builder ebz$a
	create ([Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition;)Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition; a
net/minecraft/world/level/storage/loot/predicates/AnyOfCondition$Serializer ebz$b
	create ([Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition;)Lnet/minecraft/world/level/storage/loot/predicates/AnyOfCondition; a
	create ([Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition;)Lnet/minecraft/world/level/storage/loot/predicates/CompositeLootItemCondition; b
net/minecraft/world/level/storage/loot/predicates/BonusLevelTableCondition eca
	enchantment a
	values b
	bonusLevelFlatChance (Lnet/minecraft/world/item/enchantment/Enchantment;[F)Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition$Builder; a
	getReferencedContextParams ()Ljava/util/Set; a
	getType ()Lnet/minecraft/world/level/storage/loot/predicates/LootItemConditionType; b
	test (Lnet/minecraft/world/level/storage/loot/LootContext;)Z a
net/minecraft/world/level/storage/loot/predicates/BonusLevelTableCondition$Serializer eca$a
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Ljava/lang/Object; a
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Lnet/minecraft/world/level/storage/loot/predicates/BonusLevelTableCondition; b
	serialize (Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V a
	serialize (Lcom/google/gson/JsonObject;Lnet/minecraft/world/level/storage/loot/predicates/BonusLevelTableCondition;Lcom/google/gson/JsonSerializationContext;)V a
net/minecraft/world/level/storage/loot/predicates/CompositeLootItemCondition ecb
	composedPredicate b
	terms a
	test (Lnet/minecraft/world/level/storage/loot/LootContext;)Z a
	validate (Lnet/minecraft/world/level/storage/loot/ValidationContext;)V a
net/minecraft/world/level/storage/loot/predicates/CompositeLootItemCondition$Builder ecb$a
	terms a
	addTerm (Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition$Builder;)V a
	create ([Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition;)Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition; a
net/minecraft/world/level/storage/loot/predicates/CompositeLootItemCondition$Serializer ecb$b
	create ([Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition;)Lnet/minecraft/world/level/storage/loot/predicates/CompositeLootItemCondition; b
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Ljava/lang/Object; a
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Lnet/minecraft/world/level/storage/loot/predicates/CompositeLootItemCondition; b
	serialize (Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V a
	serialize (Lcom/google/gson/JsonObject;Lnet/minecraft/world/level/storage/loot/predicates/CompositeLootItemCondition;Lcom/google/gson/JsonSerializationContext;)V a
net/minecraft/world/level/storage/loot/predicates/ConditionReference ecc
	LOGGER a
	name b
	conditionReference (Lnet/minecraft/resources/ResourceLocation;)Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition$Builder; a
	getType ()Lnet/minecraft/world/level/storage/loot/predicates/LootItemConditionType; b
	test (Lnet/minecraft/world/level/storage/loot/LootContext;)Z a
	validate (Lnet/minecraft/world/level/storage/loot/ValidationContext;)V a
net/minecraft/world/level/storage/loot/predicates/ConditionReference$Serializer ecc$a
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Ljava/lang/Object; a
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Lnet/minecraft/world/level/storage/loot/predicates/ConditionReference; b
	serialize (Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V a
	serialize (Lcom/google/gson/JsonObject;Lnet/minecraft/world/level/storage/loot/predicates/ConditionReference;Lcom/google/gson/JsonSerializationContext;)V a
net/minecraft/world/level/storage/loot/predicates/ConditionUserBuilder ecd
	unwrap ()Lnet/minecraft/world/level/storage/loot/predicates/ConditionUserBuilder; d
	when (Ljava/lang/Iterable;Ljava/util/function/Function;)Lnet/minecraft/world/level/storage/loot/predicates/ConditionUserBuilder; a_
	when (Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition$Builder;)Lnet/minecraft/world/level/storage/loot/predicates/ConditionUserBuilder; b
net/minecraft/world/level/storage/loot/predicates/DamageSourceCondition ece
	predicate a
	getReferencedContextParams ()Ljava/util/Set; a
	getType ()Lnet/minecraft/world/level/storage/loot/predicates/LootItemConditionType; b
	hasDamageSource (Lnet/minecraft/advancements/critereon/DamageSourcePredicate$Builder;)Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition$Builder; a
	test (Lnet/minecraft/world/level/storage/loot/LootContext;)Z a
net/minecraft/world/level/storage/loot/predicates/DamageSourceCondition$Serializer ece$a
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Ljava/lang/Object; a
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Lnet/minecraft/world/level/storage/loot/predicates/DamageSourceCondition; b
	serialize (Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V a
	serialize (Lcom/google/gson/JsonObject;Lnet/minecraft/world/level/storage/loot/predicates/DamageSourceCondition;Lcom/google/gson/JsonSerializationContext;)V a
net/minecraft/world/level/storage/loot/predicates/EntityHasScoreCondition ecf
	entityTarget b
	scores a
	getReferencedContextParams ()Ljava/util/Set; a
	getType ()Lnet/minecraft/world/level/storage/loot/predicates/LootItemConditionType; b
	hasScore (Lnet/minecraft/world/level/storage/loot/LootContext;Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/scores/Scoreboard;Ljava/lang/String;Lnet/minecraft/world/level/storage/loot/IntRange;)Z a
	hasScores (Lnet/minecraft/world/level/storage/loot/LootContext$EntityTarget;)Lnet/minecraft/world/level/storage/loot/predicates/EntityHasScoreCondition$Builder; a
	test (Lnet/minecraft/world/level/storage/loot/LootContext;)Z a
net/minecraft/world/level/storage/loot/predicates/EntityHasScoreCondition$Builder ecf$a
	entityTarget b
	scores a
	withScore (Ljava/lang/String;Lnet/minecraft/world/level/storage/loot/IntRange;)Lnet/minecraft/world/level/storage/loot/predicates/EntityHasScoreCondition$Builder; a
net/minecraft/world/level/storage/loot/predicates/EntityHasScoreCondition$Serializer ecf$b
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Ljava/lang/Object; a
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Lnet/minecraft/world/level/storage/loot/predicates/EntityHasScoreCondition; b
	serialize (Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V a
	serialize (Lcom/google/gson/JsonObject;Lnet/minecraft/world/level/storage/loot/predicates/EntityHasScoreCondition;Lcom/google/gson/JsonSerializationContext;)V a
net/minecraft/world/level/storage/loot/predicates/ExplosionCondition ecg
	INSTANCE a
	getReferencedContextParams ()Ljava/util/Set; a
	getType ()Lnet/minecraft/world/level/storage/loot/predicates/LootItemConditionType; b
	survivesExplosion ()Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition$Builder; c
	test (Lnet/minecraft/world/level/storage/loot/LootContext;)Z a
net/minecraft/world/level/storage/loot/predicates/ExplosionCondition$Serializer ecg$a
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Ljava/lang/Object; a
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Lnet/minecraft/world/level/storage/loot/predicates/ExplosionCondition; b
	serialize (Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V a
	serialize (Lcom/google/gson/JsonObject;Lnet/minecraft/world/level/storage/loot/predicates/ExplosionCondition;Lcom/google/gson/JsonSerializationContext;)V a
net/minecraft/world/level/storage/loot/predicates/InvertedLootItemCondition ech
	term a
	getReferencedContextParams ()Ljava/util/Set; a
	getType ()Lnet/minecraft/world/level/storage/loot/predicates/LootItemConditionType; b
	invert (Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition$Builder;)Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition$Builder; a
	test (Lnet/minecraft/world/level/storage/loot/LootContext;)Z a
	validate (Lnet/minecraft/world/level/storage/loot/ValidationContext;)V a
net/minecraft/world/level/storage/loot/predicates/InvertedLootItemCondition$Serializer ech$a
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Ljava/lang/Object; a
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Lnet/minecraft/world/level/storage/loot/predicates/InvertedLootItemCondition; b
	serialize (Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V a
	serialize (Lcom/google/gson/JsonObject;Lnet/minecraft/world/level/storage/loot/predicates/InvertedLootItemCondition;Lcom/google/gson/JsonSerializationContext;)V a
net/minecraft/world/level/storage/loot/predicates/LocationCheck eci
	offset b
	predicate a
	checkLocation (Lnet/minecraft/advancements/critereon/LocationPredicate$Builder;)Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition$Builder; a
	checkLocation (Lnet/minecraft/advancements/critereon/LocationPredicate$Builder;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition$Builder; a
	getType ()Lnet/minecraft/world/level/storage/loot/predicates/LootItemConditionType; b
	test (Lnet/minecraft/world/level/storage/loot/LootContext;)Z a
net/minecraft/world/level/storage/loot/predicates/LocationCheck$Serializer eci$a
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Ljava/lang/Object; a
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Lnet/minecraft/world/level/storage/loot/predicates/LocationCheck; b
	serialize (Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V a
	serialize (Lcom/google/gson/JsonObject;Lnet/minecraft/world/level/storage/loot/predicates/LocationCheck;Lcom/google/gson/JsonSerializationContext;)V a
net/minecraft/world/level/storage/loot/predicates/LootItemBlockStatePropertyCondition ecj
	block a
	properties b
	getReferencedContextParams ()Ljava/util/Set; a
	getType ()Lnet/minecraft/world/level/storage/loot/predicates/LootItemConditionType; b
	hasBlockStateProperties (Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/world/level/storage/loot/predicates/LootItemBlockStatePropertyCondition$Builder; a
	test (Lnet/minecraft/world/level/storage/loot/LootContext;)Z a
net/minecraft/world/level/storage/loot/predicates/LootItemBlockStatePropertyCondition$Builder ecj$a
	block a
	properties b
	setProperties (Lnet/minecraft/advancements/critereon/StatePropertiesPredicate$Builder;)Lnet/minecraft/world/level/storage/loot/predicates/LootItemBlockStatePropertyCondition$Builder; a
net/minecraft/world/level/storage/loot/predicates/LootItemBlockStatePropertyCondition$Serializer ecj$b
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Ljava/lang/Object; a
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Lnet/minecraft/world/level/storage/loot/predicates/LootItemBlockStatePropertyCondition; b
	serialize (Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V a
	serialize (Lcom/google/gson/JsonObject;Lnet/minecraft/world/level/storage/loot/predicates/LootItemBlockStatePropertyCondition;Lcom/google/gson/JsonSerializationContext;)V a
net/minecraft/world/level/storage/loot/predicates/LootItemCondition eck
	getType ()Lnet/minecraft/world/level/storage/loot/predicates/LootItemConditionType; b
net/minecraft/world/level/storage/loot/predicates/LootItemCondition$Builder eck$a
net/minecraft/world/level/storage/loot/predicates/LootItemConditionType ecl
net/minecraft/world/level/storage/loot/predicates/LootItemConditions ecm
	ALL_OF c
	ANY_OF b
	BLOCK_STATE_PROPERTY i
	DAMAGE_SOURCE_PROPERTIES m
	ENTITY_PROPERTIES f
	ENTITY_SCORES h
	INVERTED a
	KILLED_BY_PLAYER g
	LOCATION_CHECK n
	MATCH_TOOL j
	RANDOM_CHANCE d
	RANDOM_CHANCE_WITH_LOOTING e
	REFERENCE p
	SURVIVES_EXPLOSION l
	TABLE_BONUS k
	TIME_CHECK q
	VALUE_CHECK r
	WEATHER_CHECK o
	andConditions ([Ljava/util/function/Predicate;)Ljava/util/function/Predicate; a
	createGsonAdapter ()Ljava/lang/Object; a
	orConditions ([Ljava/util/function/Predicate;)Ljava/util/function/Predicate; b
	register (Ljava/lang/String;Lnet/minecraft/world/level/storage/loot/Serializer;)Lnet/minecraft/world/level/storage/loot/predicates/LootItemConditionType; a
net/minecraft/world/level/storage/loot/predicates/LootItemEntityPropertyCondition ecn
	entityTarget b
	predicate a
	entityPresent (Lnet/minecraft/world/level/storage/loot/LootContext$EntityTarget;)Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition$Builder; a
	getReferencedContextParams ()Ljava/util/Set; a
	getType ()Lnet/minecraft/world/level/storage/loot/predicates/LootItemConditionType; b
	hasProperties (Lnet/minecraft/world/level/storage/loot/LootContext$EntityTarget;Lnet/minecraft/advancements/critereon/EntityPredicate$Builder;)Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition$Builder; a
	hasProperties (Lnet/minecraft/world/level/storage/loot/LootContext$EntityTarget;Lnet/minecraft/advancements/critereon/EntityPredicate;)Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition$Builder; a
	test (Lnet/minecraft/world/level/storage/loot/LootContext;)Z a
net/minecraft/world/level/storage/loot/predicates/LootItemEntityPropertyCondition$Serializer ecn$a
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Ljava/lang/Object; a
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Lnet/minecraft/world/level/storage/loot/predicates/LootItemEntityPropertyCondition; b
	serialize (Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V a
	serialize (Lcom/google/gson/JsonObject;Lnet/minecraft/world/level/storage/loot/predicates/LootItemEntityPropertyCondition;Lcom/google/gson/JsonSerializationContext;)V a
net/minecraft/world/level/storage/loot/predicates/LootItemKilledByPlayerCondition eco
	INSTANCE a
	getReferencedContextParams ()Ljava/util/Set; a
	getType ()Lnet/minecraft/world/level/storage/loot/predicates/LootItemConditionType; b
	killedByPlayer ()Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition$Builder; c
	test (Lnet/minecraft/world/level/storage/loot/LootContext;)Z a
net/minecraft/world/level/storage/loot/predicates/LootItemKilledByPlayerCondition$Serializer eco$a
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Ljava/lang/Object; a
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Lnet/minecraft/world/level/storage/loot/predicates/LootItemKilledByPlayerCondition; b
	serialize (Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V a
	serialize (Lcom/google/gson/JsonObject;Lnet/minecraft/world/level/storage/loot/predicates/LootItemKilledByPlayerCondition;Lcom/google/gson/JsonSerializationContext;)V a
net/minecraft/world/level/storage/loot/predicates/LootItemRandomChanceCondition ecp
	probability a
	getType ()Lnet/minecraft/world/level/storage/loot/predicates/LootItemConditionType; b
	randomChance (F)Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition$Builder; a
	test (Lnet/minecraft/world/level/storage/loot/LootContext;)Z a
net/minecraft/world/level/storage/loot/predicates/LootItemRandomChanceCondition$Serializer ecp$a
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Ljava/lang/Object; a
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Lnet/minecraft/world/level/storage/loot/predicates/LootItemRandomChanceCondition; b
	serialize (Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V a
	serialize (Lcom/google/gson/JsonObject;Lnet/minecraft/world/level/storage/loot/predicates/LootItemRandomChanceCondition;Lcom/google/gson/JsonSerializationContext;)V a
net/minecraft/world/level/storage/loot/predicates/LootItemRandomChanceWithLootingCondition ecq
	lootingMultiplier b
	percent a
	getReferencedContextParams ()Ljava/util/Set; a
	getType ()Lnet/minecraft/world/level/storage/loot/predicates/LootItemConditionType; b
	randomChanceAndLootingBoost (FF)Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition$Builder; a
	test (Lnet/minecraft/world/level/storage/loot/LootContext;)Z a
net/minecraft/world/level/storage/loot/predicates/LootItemRandomChanceWithLootingCondition$Serializer ecq$a
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Ljava/lang/Object; a
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Lnet/minecraft/world/level/storage/loot/predicates/LootItemRandomChanceWithLootingCondition; b
	serialize (Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V a
	serialize (Lcom/google/gson/JsonObject;Lnet/minecraft/world/level/storage/loot/predicates/LootItemRandomChanceWithLootingCondition;Lcom/google/gson/JsonSerializationContext;)V a
net/minecraft/world/level/storage/loot/predicates/MatchTool ecr
	predicate a
	getReferencedContextParams ()Ljava/util/Set; a
	getType ()Lnet/minecraft/world/level/storage/loot/predicates/LootItemConditionType; b
	test (Lnet/minecraft/world/level/storage/loot/LootContext;)Z a
	toolMatches (Lnet/minecraft/advancements/critereon/ItemPredicate$Builder;)Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition$Builder; a
net/minecraft/world/level/storage/loot/predicates/MatchTool$Serializer ecr$a
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Ljava/lang/Object; a
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Lnet/minecraft/world/level/storage/loot/predicates/MatchTool; b
	serialize (Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V a
	serialize (Lcom/google/gson/JsonObject;Lnet/minecraft/world/level/storage/loot/predicates/MatchTool;Lcom/google/gson/JsonSerializationContext;)V a
net/minecraft/world/level/storage/loot/predicates/TimeCheck ecs
	period a
	value b
	getReferencedContextParams ()Ljava/util/Set; a
	getType ()Lnet/minecraft/world/level/storage/loot/predicates/LootItemConditionType; b
	test (Lnet/minecraft/world/level/storage/loot/LootContext;)Z a
	time (Lnet/minecraft/world/level/storage/loot/IntRange;)Lnet/minecraft/world/level/storage/loot/predicates/TimeCheck$Builder; a
net/minecraft/world/level/storage/loot/predicates/TimeCheck$Builder ecs$a
	period a
	value b
	build ()Lnet/minecraft/world/level/storage/loot/predicates/TimeCheck; a
	setPeriod (J)Lnet/minecraft/world/level/storage/loot/predicates/TimeCheck$Builder; a
net/minecraft/world/level/storage/loot/predicates/TimeCheck$Serializer ecs$b
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Ljava/lang/Object; a
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Lnet/minecraft/world/level/storage/loot/predicates/TimeCheck; b
	serialize (Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V a
	serialize (Lcom/google/gson/JsonObject;Lnet/minecraft/world/level/storage/loot/predicates/TimeCheck;Lcom/google/gson/JsonSerializationContext;)V a
net/minecraft/world/level/storage/loot/predicates/ValueCheckCondition ect
	provider a
	range b
	getReferencedContextParams ()Ljava/util/Set; a
	getType ()Lnet/minecraft/world/level/storage/loot/predicates/LootItemConditionType; b
	hasValue (Lnet/minecraft/world/level/storage/loot/providers/number/NumberProvider;Lnet/minecraft/world/level/storage/loot/IntRange;)Lnet/minecraft/world/level/storage/loot/predicates/LootItemCondition$Builder; a
	test (Lnet/minecraft/world/level/storage/loot/LootContext;)Z a
net/minecraft/world/level/storage/loot/predicates/ValueCheckCondition$Serializer ect$a
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Ljava/lang/Object; a
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Lnet/minecraft/world/level/storage/loot/predicates/ValueCheckCondition; b
	serialize (Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V a
	serialize (Lcom/google/gson/JsonObject;Lnet/minecraft/world/level/storage/loot/predicates/ValueCheckCondition;Lcom/google/gson/JsonSerializationContext;)V a
net/minecraft/world/level/storage/loot/predicates/WeatherCheck ecu
	isRaining a
	isThundering b
	getType ()Lnet/minecraft/world/level/storage/loot/predicates/LootItemConditionType; b
	test (Lnet/minecraft/world/level/storage/loot/LootContext;)Z a
	weather ()Lnet/minecraft/world/level/storage/loot/predicates/WeatherCheck$Builder; c
net/minecraft/world/level/storage/loot/predicates/WeatherCheck$Builder ecu$a
	isRaining a
	isThundering b
	build ()Lnet/minecraft/world/level/storage/loot/predicates/WeatherCheck; a
	setRaining (Ljava/lang/Boolean;)Lnet/minecraft/world/level/storage/loot/predicates/WeatherCheck$Builder; a
	setThundering (Ljava/lang/Boolean;)Lnet/minecraft/world/level/storage/loot/predicates/WeatherCheck$Builder; b
net/minecraft/world/level/storage/loot/predicates/WeatherCheck$Serializer ecu$b
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Ljava/lang/Object; a
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Lnet/minecraft/world/level/storage/loot/predicates/WeatherCheck; b
	serialize (Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V a
	serialize (Lcom/google/gson/JsonObject;Lnet/minecraft/world/level/storage/loot/predicates/WeatherCheck;Lcom/google/gson/JsonSerializationContext;)V a
net/minecraft/world/level/storage/loot/providers/nbt/ContextNbtProvider ecw
	BLOCK_ENTITY a
	BLOCK_ENTITY_ID b
	BLOCK_ENTITY_PROVIDER c
	getter d
	createFromContext (Ljava/lang/String;)Lnet/minecraft/world/level/storage/loot/providers/nbt/ContextNbtProvider; a
	forContextEntity (Lnet/minecraft/world/level/storage/loot/LootContext$EntityTarget;)Lnet/minecraft/world/level/storage/loot/providers/nbt/NbtProvider; a
	forEntity (Lnet/minecraft/world/level/storage/loot/LootContext$EntityTarget;)Lnet/minecraft/world/level/storage/loot/providers/nbt/ContextNbtProvider$Getter; b
	get (Lnet/minecraft/world/level/storage/loot/LootContext;)Lnet/minecraft/nbt/Tag; a
	getReferencedContextParams ()Ljava/util/Set; b
	getType ()Lnet/minecraft/world/level/storage/loot/providers/nbt/LootNbtProviderType; a
net/minecraft/world/level/storage/loot/providers/nbt/ContextNbtProvider$Getter ecw$a
	get (Lnet/minecraft/world/level/storage/loot/LootContext;)Lnet/minecraft/nbt/Tag; a
	getId ()Ljava/lang/String; a
	getReferencedContextParams ()Ljava/util/Set; b
net/minecraft/world/level/storage/loot/providers/nbt/ContextNbtProvider$InlineSerializer ecw$b
	deserialize (Lcom/google/gson/JsonElement;Lcom/google/gson/JsonDeserializationContext;)Ljava/lang/Object; a
	deserialize (Lcom/google/gson/JsonElement;Lcom/google/gson/JsonDeserializationContext;)Lnet/minecraft/world/level/storage/loot/providers/nbt/ContextNbtProvider; b
	serialize (Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)Lcom/google/gson/JsonElement; a
	serialize (Lnet/minecraft/world/level/storage/loot/providers/nbt/ContextNbtProvider;Lcom/google/gson/JsonSerializationContext;)Lcom/google/gson/JsonElement; a
net/minecraft/world/level/storage/loot/providers/nbt/ContextNbtProvider$Serializer ecw$c
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Ljava/lang/Object; a
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Lnet/minecraft/world/level/storage/loot/providers/nbt/ContextNbtProvider; b
	serialize (Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V a
	serialize (Lcom/google/gson/JsonObject;Lnet/minecraft/world/level/storage/loot/providers/nbt/ContextNbtProvider;Lcom/google/gson/JsonSerializationContext;)V a
net/minecraft/world/level/storage/loot/providers/nbt/LootNbtProviderType ecx
net/minecraft/world/level/storage/loot/providers/nbt/NbtProvider ecy
	get (Lnet/minecraft/world/level/storage/loot/LootContext;)Lnet/minecraft/nbt/Tag; a
	getReferencedContextParams ()Ljava/util/Set; b
	getType ()Lnet/minecraft/world/level/storage/loot/providers/nbt/LootNbtProviderType; a
net/minecraft/world/level/storage/loot/providers/nbt/NbtProviders ecz
	CONTEXT b
	STORAGE a
	createGsonAdapter ()Ljava/lang/Object; a
	register (Ljava/lang/String;Lnet/minecraft/world/level/storage/loot/Serializer;)Lnet/minecraft/world/level/storage/loot/providers/nbt/LootNbtProviderType; a
net/minecraft/world/level/storage/loot/providers/nbt/StorageNbtProvider eda
	id a
	get (Lnet/minecraft/world/level/storage/loot/LootContext;)Lnet/minecraft/nbt/Tag; a
	getReferencedContextParams ()Ljava/util/Set; b
	getType ()Lnet/minecraft/world/level/storage/loot/providers/nbt/LootNbtProviderType; a
net/minecraft/world/level/storage/loot/providers/nbt/StorageNbtProvider$Serializer eda$a
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Ljava/lang/Object; a
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Lnet/minecraft/world/level/storage/loot/providers/nbt/StorageNbtProvider; b
	serialize (Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V a
	serialize (Lcom/google/gson/JsonObject;Lnet/minecraft/world/level/storage/loot/providers/nbt/StorageNbtProvider;Lcom/google/gson/JsonSerializationContext;)V a
net/minecraft/world/level/storage/loot/providers/number/BinomialDistributionGenerator edc
	n a
	p b
	binomial (IF)Lnet/minecraft/world/level/storage/loot/providers/number/BinomialDistributionGenerator; a
	getFloat (Lnet/minecraft/world/level/storage/loot/LootContext;)F b
	getInt (Lnet/minecraft/world/level/storage/loot/LootContext;)I a
	getReferencedContextParams ()Ljava/util/Set; a
	getType ()Lnet/minecraft/world/level/storage/loot/providers/number/LootNumberProviderType; b
net/minecraft/world/level/storage/loot/providers/number/BinomialDistributionGenerator$Serializer edc$a
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Ljava/lang/Object; a
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Lnet/minecraft/world/level/storage/loot/providers/number/BinomialDistributionGenerator; b
	serialize (Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V a
	serialize (Lcom/google/gson/JsonObject;Lnet/minecraft/world/level/storage/loot/providers/number/BinomialDistributionGenerator;Lcom/google/gson/JsonSerializationContext;)V a
net/minecraft/world/level/storage/loot/providers/number/ConstantValue edd
	value a
	exactly (F)Lnet/minecraft/world/level/storage/loot/providers/number/ConstantValue; a
	getFloat (Lnet/minecraft/world/level/storage/loot/LootContext;)F b
	getType ()Lnet/minecraft/world/level/storage/loot/providers/number/LootNumberProviderType; b
net/minecraft/world/level/storage/loot/providers/number/ConstantValue$InlineSerializer edd$a
	deserialize (Lcom/google/gson/JsonElement;Lcom/google/gson/JsonDeserializationContext;)Ljava/lang/Object; a
	deserialize (Lcom/google/gson/JsonElement;Lcom/google/gson/JsonDeserializationContext;)Lnet/minecraft/world/level/storage/loot/providers/number/ConstantValue; b
	serialize (Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)Lcom/google/gson/JsonElement; a
	serialize (Lnet/minecraft/world/level/storage/loot/providers/number/ConstantValue;Lcom/google/gson/JsonSerializationContext;)Lcom/google/gson/JsonElement; a
net/minecraft/world/level/storage/loot/providers/number/ConstantValue$Serializer edd$b
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Ljava/lang/Object; a
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Lnet/minecraft/world/level/storage/loot/providers/number/ConstantValue; b
	serialize (Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V a
	serialize (Lcom/google/gson/JsonObject;Lnet/minecraft/world/level/storage/loot/providers/number/ConstantValue;Lcom/google/gson/JsonSerializationContext;)V a
net/minecraft/world/level/storage/loot/providers/number/LootNumberProviderType ede
net/minecraft/world/level/storage/loot/providers/number/NumberProvider edf
	getFloat (Lnet/minecraft/world/level/storage/loot/LootContext;)F b
	getInt (Lnet/minecraft/world/level/storage/loot/LootContext;)I a
	getType ()Lnet/minecraft/world/level/storage/loot/providers/number/LootNumberProviderType; b
net/minecraft/world/level/storage/loot/providers/number/NumberProviders edg
	BINOMIAL c
	CONSTANT a
	SCORE d
	UNIFORM b
	createGsonAdapter ()Ljava/lang/Object; a
	register (Ljava/lang/String;Lnet/minecraft/world/level/storage/loot/Serializer;)Lnet/minecraft/world/level/storage/loot/providers/number/LootNumberProviderType; a
net/minecraft/world/level/storage/loot/providers/number/ScoreboardValue edh
	scale c
	score b
	target a
	fromScoreboard (Lnet/minecraft/world/level/storage/loot/LootContext$EntityTarget;Ljava/lang/String;)Lnet/minecraft/world/level/storage/loot/providers/number/ScoreboardValue; a
	fromScoreboard (Lnet/minecraft/world/level/storage/loot/LootContext$EntityTarget;Ljava/lang/String;F)Lnet/minecraft/world/level/storage/loot/providers/number/ScoreboardValue; a
	getFloat (Lnet/minecraft/world/level/storage/loot/LootContext;)F b
	getReferencedContextParams ()Ljava/util/Set; a
	getType ()Lnet/minecraft/world/level/storage/loot/providers/number/LootNumberProviderType; b
net/minecraft/world/level/storage/loot/providers/number/ScoreboardValue$Serializer edh$a
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Ljava/lang/Object; a
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Lnet/minecraft/world/level/storage/loot/providers/number/ScoreboardValue; b
	serialize (Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V a
	serialize (Lcom/google/gson/JsonObject;Lnet/minecraft/world/level/storage/loot/providers/number/ScoreboardValue;Lcom/google/gson/JsonSerializationContext;)V a
net/minecraft/world/level/storage/loot/providers/number/UniformGenerator edi
	max b
	min a
	between (FF)Lnet/minecraft/world/level/storage/loot/providers/number/UniformGenerator; a
	getFloat (Lnet/minecraft/world/level/storage/loot/LootContext;)F b
	getInt (Lnet/minecraft/world/level/storage/loot/LootContext;)I a
	getReferencedContextParams ()Ljava/util/Set; a
	getType ()Lnet/minecraft/world/level/storage/loot/providers/number/LootNumberProviderType; b
net/minecraft/world/level/storage/loot/providers/number/UniformGenerator$Serializer edi$a
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Ljava/lang/Object; a
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Lnet/minecraft/world/level/storage/loot/providers/number/UniformGenerator; b
	serialize (Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V a
	serialize (Lcom/google/gson/JsonObject;Lnet/minecraft/world/level/storage/loot/providers/number/UniformGenerator;Lcom/google/gson/JsonSerializationContext;)V a
net/minecraft/world/level/storage/loot/providers/score/ContextScoreboardNameProvider edk
	target a
	forTarget (Lnet/minecraft/world/level/storage/loot/LootContext$EntityTarget;)Lnet/minecraft/world/level/storage/loot/providers/score/ScoreboardNameProvider; a
	getReferencedContextParams ()Ljava/util/Set; b
	getScoreboardName (Lnet/minecraft/world/level/storage/loot/LootContext;)Ljava/lang/String; a
	getType ()Lnet/minecraft/world/level/storage/loot/providers/score/LootScoreProviderType; a
net/minecraft/world/level/storage/loot/providers/score/ContextScoreboardNameProvider$InlineSerializer edk$a
	deserialize (Lcom/google/gson/JsonElement;Lcom/google/gson/JsonDeserializationContext;)Ljava/lang/Object; a
	deserialize (Lcom/google/gson/JsonElement;Lcom/google/gson/JsonDeserializationContext;)Lnet/minecraft/world/level/storage/loot/providers/score/ContextScoreboardNameProvider; b
	serialize (Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)Lcom/google/gson/JsonElement; a
	serialize (Lnet/minecraft/world/level/storage/loot/providers/score/ContextScoreboardNameProvider;Lcom/google/gson/JsonSerializationContext;)Lcom/google/gson/JsonElement; a
net/minecraft/world/level/storage/loot/providers/score/ContextScoreboardNameProvider$Serializer edk$b
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Ljava/lang/Object; a
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Lnet/minecraft/world/level/storage/loot/providers/score/ContextScoreboardNameProvider; b
	serialize (Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V a
	serialize (Lcom/google/gson/JsonObject;Lnet/minecraft/world/level/storage/loot/providers/score/ContextScoreboardNameProvider;Lcom/google/gson/JsonSerializationContext;)V a
net/minecraft/world/level/storage/loot/providers/score/FixedScoreboardNameProvider edl
	name a
	forName (Ljava/lang/String;)Lnet/minecraft/world/level/storage/loot/providers/score/ScoreboardNameProvider; a
	getName ()Ljava/lang/String; c
	getReferencedContextParams ()Ljava/util/Set; b
	getScoreboardName (Lnet/minecraft/world/level/storage/loot/LootContext;)Ljava/lang/String; a
	getType ()Lnet/minecraft/world/level/storage/loot/providers/score/LootScoreProviderType; a
net/minecraft/world/level/storage/loot/providers/score/FixedScoreboardNameProvider$Serializer edl$a
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Ljava/lang/Object; a
	deserialize (Lcom/google/gson/JsonObject;Lcom/google/gson/JsonDeserializationContext;)Lnet/minecraft/world/level/storage/loot/providers/score/FixedScoreboardNameProvider; b
	serialize (Lcom/google/gson/JsonObject;Ljava/lang/Object;Lcom/google/gson/JsonSerializationContext;)V a
	serialize (Lcom/google/gson/JsonObject;Lnet/minecraft/world/level/storage/loot/providers/score/FixedScoreboardNameProvider;Lcom/google/gson/JsonSerializationContext;)V a
net/minecraft/world/level/storage/loot/providers/score/LootScoreProviderType edm
net/minecraft/world/level/storage/loot/providers/score/ScoreboardNameProvider edn
	getReferencedContextParams ()Ljava/util/Set; b
	getScoreboardName (Lnet/minecraft/world/level/storage/loot/LootContext;)Ljava/lang/String; a
	getType ()Lnet/minecraft/world/level/storage/loot/providers/score/LootScoreProviderType; a
net/minecraft/world/level/storage/loot/providers/score/ScoreboardNameProviders edo
	CONTEXT b
	FIXED a
	createGsonAdapter ()Ljava/lang/Object; a
	register (Ljava/lang/String;Lnet/minecraft/world/level/storage/loot/Serializer;)Lnet/minecraft/world/level/storage/loot/providers/score/LootScoreProviderType; a
net/minecraft/world/level/timers/FunctionCallback edr
	functionId a
	handle (Lnet/minecraft/server/MinecraftServer;Lnet/minecraft/world/level/timers/TimerQueue;J)V a
net/minecraft/world/level/timers/FunctionCallback$Serializer edr$a
	deserialize (Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/world/level/timers/FunctionCallback; a
	deserialize (Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/world/level/timers/TimerCallback; b
	serialize (Lnet/minecraft/nbt/CompoundTag;Lnet/minecraft/world/level/timers/FunctionCallback;)V a
	serialize (Lnet/minecraft/nbt/CompoundTag;Lnet/minecraft/world/level/timers/TimerCallback;)V a
net/minecraft/world/level/timers/FunctionTagCallback eds
	tagId a
	handle (Lnet/minecraft/server/MinecraftServer;Lnet/minecraft/world/level/timers/TimerQueue;J)V a
net/minecraft/world/level/timers/FunctionTagCallback$Serializer eds$a
	deserialize (Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/world/level/timers/FunctionTagCallback; a
	deserialize (Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/world/level/timers/TimerCallback; b
	serialize (Lnet/minecraft/nbt/CompoundTag;Lnet/minecraft/world/level/timers/FunctionTagCallback;)V a
	serialize (Lnet/minecraft/nbt/CompoundTag;Lnet/minecraft/world/level/timers/TimerCallback;)V a
net/minecraft/world/level/timers/TimerCallback edt
net/minecraft/world/level/timers/TimerCallback$Serializer edt$a
	cls b
	id a
	deserialize (Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/world/level/timers/TimerCallback; b
	getCls ()Ljava/lang/Class; b
	getId ()Lnet/minecraft/resources/ResourceLocation; a
	serialize (Lnet/minecraft/nbt/CompoundTag;Lnet/minecraft/world/level/timers/TimerCallback;)V a
net/minecraft/world/level/timers/TimerCallbacks edu
	LOGGER b
	SERVER_CALLBACKS a
	classToSerializer d
	idToSerializer c
	deserialize (Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/world/level/timers/TimerCallback; a
	getSerializer (Ljava/lang/Class;)Lnet/minecraft/world/level/timers/TimerCallback$Serializer; a
	register (Lnet/minecraft/world/level/timers/TimerCallback$Serializer;)Lnet/minecraft/world/level/timers/TimerCallbacks; a
	serialize (Lnet/minecraft/world/level/timers/TimerCallback;)Lnet/minecraft/nbt/CompoundTag; a
net/minecraft/world/level/timers/TimerQueue edv
	CALLBACK_DATA_TAG b
	LOGGER a
	TIMER_NAME_TAG c
	TIMER_TRIGGER_TIME_TAG d
	callbacksRegistry e
	events h
	queue f
	sequentialId g
	createComparator ()Ljava/util/Comparator; c
	getEventsIds ()Ljava/util/Set; a
	loadEvent (Lnet/minecraft/nbt/CompoundTag;)V a
	remove (Ljava/lang/String;)I a
	schedule (Ljava/lang/String;JLnet/minecraft/world/level/timers/TimerCallback;)V a
	store ()Lnet/minecraft/nbt/ListTag; b
	storeEvent (Lnet/minecraft/world/level/timers/TimerQueue$Event;)Lnet/minecraft/nbt/CompoundTag; a
	tick (Ljava/lang/Object;J)V a
net/minecraft/world/level/timers/TimerQueue$Event edv$a
	callback d
	id c
	sequentialId b
	triggerTime a
net/minecraft/world/level/validation/ContentValidationException edx
	directory a
	entries b
	getMessage (Ljava/nio/file/Path;Ljava/util/List;)Ljava/lang/String; a
net/minecraft/world/level/validation/DirectoryValidator edy
	symlinkTargetAllowList a
	validateSave (Ljava/nio/file/Path;Z)Ljava/util/List; a
	validateSymlink (Ljava/nio/file/Path;Ljava/util/List;)V a
net/minecraft/world/level/validation/ForbiddenSymlinkInfo edz
	link a
	target b
	link ()Ljava/nio/file/Path; a
	target ()Ljava/nio/file/Path; b
net/minecraft/world/level/validation/PathAllowList eea
	COMMENT_PREFIX b
	LOGGER a
	compiledPaths d
	entries c
	getForFileSystem (Ljava/nio/file/FileSystem;)Ljava/nio/file/PathMatcher; a
	readPlain (Ljava/io/BufferedReader;)Lnet/minecraft/world/level/validation/PathAllowList; a
net/minecraft/world/level/validation/PathAllowList$ConfigEntry eea$a
	pattern b
	type a
	compile (Ljava/nio/file/FileSystem;)Ljava/nio/file/PathMatcher; a
	glob (Ljava/lang/String;)Lnet/minecraft/world/level/validation/PathAllowList$ConfigEntry; b
	parse (Ljava/lang/String;)Ljava/util/Optional; a
	pattern ()Ljava/lang/String; b
	prefix (Ljava/lang/String;)Lnet/minecraft/world/level/validation/PathAllowList$ConfigEntry; d
	regex (Ljava/lang/String;)Lnet/minecraft/world/level/validation/PathAllowList$ConfigEntry; c
	type ()Lnet/minecraft/world/level/validation/PathAllowList$EntryType; a
net/minecraft/world/level/validation/PathAllowList$EntryType eea$b
	FILESYSTEM a
	PREFIX b
net/minecraft/world/phys/AABB eed
	EPSILON g
	maxX d
	maxY e
	maxZ f
	minX a
	minY b
	minZ c
	clip (Ljava/lang/Iterable;Lnet/minecraft/world/phys/Vec3;Lnet/minecraft/world/phys/Vec3;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/phys/BlockHitResult; a
	clip (Lnet/minecraft/world/phys/Vec3;Lnet/minecraft/world/phys/Vec3;)Ljava/util/Optional; b
	clipPoint ([DLnet/minecraft/core/Direction;DDDDDDDDLnet/minecraft/core/Direction;DDD)Lnet/minecraft/core/Direction; a
	contains (DDD)Z e
	contains (Lnet/minecraft/world/phys/Vec3;)Z d
	contract (DDD)Lnet/minecraft/world/phys/AABB; a
	deflate (D)Lnet/minecraft/world/phys/AABB; h
	deflate (DDD)Lnet/minecraft/world/phys/AABB; f
	distanceToSqr (Lnet/minecraft/world/phys/Vec3;)D e
	expandTowards (DDD)Lnet/minecraft/world/phys/AABB; b
	expandTowards (Lnet/minecraft/world/phys/Vec3;)Lnet/minecraft/world/phys/AABB; b
	getCenter ()Lnet/minecraft/world/phys/Vec3; f
	getDirection (Lnet/minecraft/world/phys/AABB;Lnet/minecraft/world/phys/Vec3;[DLnet/minecraft/core/Direction;DDD)Lnet/minecraft/core/Direction; a
	getSize ()D a
	getXsize ()D b
	getYsize ()D c
	getZsize ()D d
	hasNaN ()Z e
	inflate (D)Lnet/minecraft/world/phys/AABB; g
	inflate (DDD)Lnet/minecraft/world/phys/AABB; c
	intersect (Lnet/minecraft/world/phys/AABB;)Lnet/minecraft/world/phys/AABB; a
	intersects (DDDDDD)Z a
	intersects (Lnet/minecraft/world/phys/AABB;)Z c
	intersects (Lnet/minecraft/world/phys/Vec3;Lnet/minecraft/world/phys/Vec3;)Z a
	max (Lnet/minecraft/core/Direction$Axis;)D b
	min (Lnet/minecraft/core/Direction$Axis;)D a
	minmax (Lnet/minecraft/world/phys/AABB;)Lnet/minecraft/world/phys/AABB; b
	move (DDD)Lnet/minecraft/world/phys/AABB; d
	move (Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/phys/AABB; a
	move (Lnet/minecraft/world/phys/Vec3;)Lnet/minecraft/world/phys/AABB; c
	of (Lnet/minecraft/world/level/levelgen/structure/BoundingBox;)Lnet/minecraft/world/phys/AABB; a
	ofSize (Lnet/minecraft/world/phys/Vec3;DDD)Lnet/minecraft/world/phys/AABB; a
	setMaxX (D)Lnet/minecraft/world/phys/AABB; d
	setMaxY (D)Lnet/minecraft/world/phys/AABB; e
	setMaxZ (D)Lnet/minecraft/world/phys/AABB; f
	setMinX (D)Lnet/minecraft/world/phys/AABB; a
	setMinY (D)Lnet/minecraft/world/phys/AABB; b
	setMinZ (D)Lnet/minecraft/world/phys/AABB; c
	unitCubeFromLowerCorner (Lnet/minecraft/world/phys/Vec3;)Lnet/minecraft/world/phys/AABB; a
net/minecraft/world/phys/BlockHitResult eee
	blockPos c
	direction b
	inside e
	miss d
	getBlockPos ()Lnet/minecraft/core/BlockPos; a
	getDirection ()Lnet/minecraft/core/Direction; b
	getType ()Lnet/minecraft/world/phys/HitResult$Type; c
	isInside ()Z d
	miss (Lnet/minecraft/world/phys/Vec3;Lnet/minecraft/core/Direction;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/phys/BlockHitResult; a
	withDirection (Lnet/minecraft/core/Direction;)Lnet/minecraft/world/phys/BlockHitResult; a
	withPosition (Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/phys/BlockHitResult; a
net/minecraft/world/phys/EntityHitResult eef
	entity b
	getEntity ()Lnet/minecraft/world/entity/Entity; a
	getType ()Lnet/minecraft/world/phys/HitResult$Type; c
net/minecraft/world/phys/HitResult eeg
	location a
	distanceTo (Lnet/minecraft/world/entity/Entity;)D a
	getLocation ()Lnet/minecraft/world/phys/Vec3; e
	getType ()Lnet/minecraft/world/phys/HitResult$Type; c
net/minecraft/world/phys/HitResult$Type eeg$a
	$VALUES d
	BLOCK b
	ENTITY c
	MISS a
	$values ()[Lnet/minecraft/world/phys/HitResult$Type; a
net/minecraft/world/phys/Vec2 eeh
	MAX g
	MIN h
	NEG_UNIT_X d
	NEG_UNIT_Y f
	ONE b
	UNIT_X c
	UNIT_Y e
	ZERO a
	x i
	y j
	add (F)Lnet/minecraft/world/phys/Vec2; b
	add (Lnet/minecraft/world/phys/Vec2;)Lnet/minecraft/world/phys/Vec2; b
	distanceToSqr (Lnet/minecraft/world/phys/Vec2;)F d
	dot (Lnet/minecraft/world/phys/Vec2;)F a
	equals (Lnet/minecraft/world/phys/Vec2;)Z c
	length ()F b
	lengthSquared ()F c
	negated ()Lnet/minecraft/world/phys/Vec2; d
	normalized ()Lnet/minecraft/world/phys/Vec2; a
	scale (F)Lnet/minecraft/world/phys/Vec2; a
net/minecraft/world/phys/Vec3 eei
	CODEC a
	ZERO b
	x c
	y d
	z e
	add (DDD)Lnet/minecraft/world/phys/Vec3; b
	add (Lnet/minecraft/world/phys/Vec3;)Lnet/minecraft/world/phys/Vec3; e
	align (Ljava/util/EnumSet;)Lnet/minecraft/world/phys/Vec3; a
	atBottomCenterOf (Lnet/minecraft/core/Vec3i;)Lnet/minecraft/world/phys/Vec3; c
	atCenterOf (Lnet/minecraft/core/Vec3i;)Lnet/minecraft/world/phys/Vec3; b
	atLowerCornerOf (Lnet/minecraft/core/Vec3i;)Lnet/minecraft/world/phys/Vec3; a
	atLowerCornerWithOffset (Lnet/minecraft/core/Vec3i;DDD)Lnet/minecraft/world/phys/Vec3; a
	closerThan (Lnet/minecraft/core/Position;D)Z a
	cross (Lnet/minecraft/world/phys/Vec3;)Lnet/minecraft/world/phys/Vec3; c
	directionFromRotation (FF)Lnet/minecraft/world/phys/Vec3; a
	directionFromRotation (Lnet/minecraft/world/phys/Vec2;)Lnet/minecraft/world/phys/Vec3; a
	distanceTo (Lnet/minecraft/world/phys/Vec3;)D f
	distanceToSqr (DDD)D c
	distanceToSqr (Lnet/minecraft/world/phys/Vec3;)D g
	dot (Lnet/minecraft/world/phys/Vec3;)D b
	fromRGB24 (I)Lnet/minecraft/world/phys/Vec3; a
	get (Lnet/minecraft/core/Direction$Axis;)D a
	horizontalDistance ()D h
	horizontalDistanceSqr ()D i
	length ()D f
	lengthSqr ()D g
	lerp (Lnet/minecraft/world/phys/Vec3;D)Lnet/minecraft/world/phys/Vec3; a
	multiply (DDD)Lnet/minecraft/world/phys/Vec3; d
	multiply (Lnet/minecraft/world/phys/Vec3;)Lnet/minecraft/world/phys/Vec3; h
	normalize ()Lnet/minecraft/world/phys/Vec3; d
	offsetRandom (Lnet/minecraft/util/RandomSource;F)Lnet/minecraft/world/phys/Vec3; a
	relative (Lnet/minecraft/core/Direction;D)Lnet/minecraft/world/phys/Vec3; a
	reverse ()Lnet/minecraft/world/phys/Vec3; e
	scale (D)Lnet/minecraft/world/phys/Vec3; a
	subtract (DDD)Lnet/minecraft/world/phys/Vec3; a
	subtract (Lnet/minecraft/world/phys/Vec3;)Lnet/minecraft/world/phys/Vec3; d
	toVector3f ()Lorg/joml/Vector3f; j
	upFromBottomCenterOf (Lnet/minecraft/core/Vec3i;D)Lnet/minecraft/world/phys/Vec3; a
	vectorTo (Lnet/minecraft/world/phys/Vec3;)Lnet/minecraft/world/phys/Vec3; a
	with (Lnet/minecraft/core/Direction$Axis;D)Lnet/minecraft/world/phys/Vec3; a
	x ()D a
	xRot (F)Lnet/minecraft/world/phys/Vec3; a
	y ()D b
	yRot (F)Lnet/minecraft/world/phys/Vec3; b
	z ()D c
	zRot (F)Lnet/minecraft/world/phys/Vec3; c
net/minecraft/world/phys/shapes/ArrayVoxelShape eek
	xs b
	ys c
	zs d
	getCoords (Lnet/minecraft/core/Direction$Axis;)Lit/unimi/dsi/fastutil/doubles/DoubleList; a
net/minecraft/world/phys/shapes/BitSetDiscreteVoxelShape eel
	storage d
	xMax h
	xMin e
	yMax i
	yMin f
	zMax j
	zMin g
	clearZStrip (IIII)V b
	fill (III)V c
	fillUpdateBounds (IIIZ)V a
	firstFull (Lnet/minecraft/core/Direction$Axis;)I a
	forAllBoxes (Lnet/minecraft/world/phys/shapes/DiscreteVoxelShape;Lnet/minecraft/world/phys/shapes/DiscreteVoxelShape$IntLineConsumer;Z)V a
	getIndex (III)I a
	isEmpty ()Z a
	isFull (III)Z b
	isXZRectangleFull (IIIII)Z a
	isZStripFull (IIII)Z a
	join (Lnet/minecraft/world/phys/shapes/DiscreteVoxelShape;Lnet/minecraft/world/phys/shapes/DiscreteVoxelShape;Lnet/minecraft/world/phys/shapes/IndexMerger;Lnet/minecraft/world/phys/shapes/IndexMerger;Lnet/minecraft/world/phys/shapes/IndexMerger;Lnet/minecraft/world/phys/shapes/BooleanOp;)Lnet/minecraft/world/phys/shapes/BitSetDiscreteVoxelShape; a
	lastFull (Lnet/minecraft/core/Direction$Axis;)I b
	withFilledBounds (IIIIIIIII)Lnet/minecraft/world/phys/shapes/BitSetDiscreteVoxelShape; a
net/minecraft/world/phys/shapes/BooleanOp eem
	AND i
	CAUSED_BY n
	CAUSES l
	FALSE a
	FIRST m
	NOT_AND h
	NOT_FIRST d
	NOT_OR b
	NOT_SAME g
	NOT_SECOND f
	ONLY_FIRST e
	ONLY_SECOND c
	OR o
	SAME j
	SECOND k
	TRUE p
net/minecraft/world/phys/shapes/CollisionContext een
	canStandOnFluid (Lnet/minecraft/world/level/material/FluidState;Lnet/minecraft/world/level/material/FluidState;)Z a
	empty ()Lnet/minecraft/world/phys/shapes/CollisionContext; a
	isAbove (Lnet/minecraft/world/phys/shapes/VoxelShape;Lnet/minecraft/core/BlockPos;Z)Z a
	isDescending ()Z b
	isHoldingItem (Lnet/minecraft/world/item/Item;)Z a
	of (Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/world/phys/shapes/CollisionContext; a
net/minecraft/world/phys/shapes/CubePointRange eeo
	parts a
net/minecraft/world/phys/shapes/CubeVoxelShape eep
	findIndex (Lnet/minecraft/core/Direction$Axis;D)I a
	getCoords (Lnet/minecraft/core/Direction$Axis;)Lit/unimi/dsi/fastutil/doubles/DoubleList; a
net/minecraft/world/phys/shapes/DiscreteCubeMerger eeq
	firstDiv b
	result a
	secondDiv c
	forMergedIndexes (Lnet/minecraft/world/phys/shapes/IndexMerger$IndexConsumer;)Z a
	getList ()Lit/unimi/dsi/fastutil/doubles/DoubleList; a
net/minecraft/world/phys/shapes/DiscreteVoxelShape eer
	AXIS_VALUES d
	xSize a
	ySize b
	zSize c
	fill (III)V c
	firstFull (Lnet/minecraft/core/Direction$Axis;)I a
	firstFull (Lnet/minecraft/core/Direction$Axis;II)I a
	forAllAxisEdges (Lnet/minecraft/world/phys/shapes/DiscreteVoxelShape$IntLineConsumer;Lnet/minecraft/core/AxisCycle;Z)V a
	forAllAxisFaces (Lnet/minecraft/world/phys/shapes/DiscreteVoxelShape$IntFaceConsumer;Lnet/minecraft/core/AxisCycle;)V a
	forAllBoxes (Lnet/minecraft/world/phys/shapes/DiscreteVoxelShape$IntLineConsumer;Z)V b
	forAllEdges (Lnet/minecraft/world/phys/shapes/DiscreteVoxelShape$IntLineConsumer;Z)V a
	forAllFaces (Lnet/minecraft/world/phys/shapes/DiscreteVoxelShape$IntFaceConsumer;)V a
	getSize (Lnet/minecraft/core/Direction$Axis;)I c
	getXSize ()I b
	getYSize ()I c
	getZSize ()I d
	isEmpty ()Z a
	isFull (III)Z b
	isFull (Lnet/minecraft/core/AxisCycle;III)Z b
	isFullWide (III)Z d
	isFullWide (Lnet/minecraft/core/AxisCycle;III)Z a
	lastFull (Lnet/minecraft/core/Direction$Axis;)I b
	lastFull (Lnet/minecraft/core/Direction$Axis;II)I b
net/minecraft/world/phys/shapes/DiscreteVoxelShape$IntFaceConsumer eer$a
net/minecraft/world/phys/shapes/DiscreteVoxelShape$IntLineConsumer eer$b
net/minecraft/world/phys/shapes/EntityCollisionContext ees
	EMPTY a
	canStandOnFluid e
	descending b
	entity f
	entityBottom c
	heldItem d
	canStandOnFluid (Lnet/minecraft/world/level/material/FluidState;Lnet/minecraft/world/level/material/FluidState;)Z a
	getEntity ()Lnet/minecraft/world/entity/Entity; c
	isAbove (Lnet/minecraft/world/phys/shapes/VoxelShape;Lnet/minecraft/core/BlockPos;Z)Z a
	isDescending ()Z b
	isHoldingItem (Lnet/minecraft/world/item/Item;)Z a
net/minecraft/world/phys/shapes/IdenticalMerger eet
	coords a
	forMergedIndexes (Lnet/minecraft/world/phys/shapes/IndexMerger$IndexConsumer;)Z a
	getList ()Lit/unimi/dsi/fastutil/doubles/DoubleList; a
net/minecraft/world/phys/shapes/IndexMerger eeu
	forMergedIndexes (Lnet/minecraft/world/phys/shapes/IndexMerger$IndexConsumer;)Z a
	getList ()Lit/unimi/dsi/fastutil/doubles/DoubleList; a
net/minecraft/world/phys/shapes/IndexMerger$IndexConsumer eeu$a
net/minecraft/world/phys/shapes/IndirectMerger eev
	EMPTY a
	firstIndices c
	result b
	resultLength e
	secondIndices d
	forMergedIndexes (Lnet/minecraft/world/phys/shapes/IndexMerger$IndexConsumer;)Z a
	getList ()Lit/unimi/dsi/fastutil/doubles/DoubleList; a
net/minecraft/world/phys/shapes/NonOverlappingMerger eew
	lower a
	swap c
	upper b
	forMergedIndexes (Lnet/minecraft/world/phys/shapes/IndexMerger$IndexConsumer;)Z a
	forNonSwappedIndexes (Lnet/minecraft/world/phys/shapes/IndexMerger$IndexConsumer;)Z b
	getList ()Lit/unimi/dsi/fastutil/doubles/DoubleList; a
net/minecraft/world/phys/shapes/OffsetDoubleList eex
	delegate a
	offset b
net/minecraft/world/phys/shapes/Shapes eey
	BIG_EPSILON b
	BLOCK d
	EMPTY e
	EPSILON a
	INFINITY c
	block ()Lnet/minecraft/world/phys/shapes/VoxelShape; b
	blockOccudes (Lnet/minecraft/world/phys/shapes/VoxelShape;Lnet/minecraft/world/phys/shapes/VoxelShape;Lnet/minecraft/core/Direction;)Z a
	box (DDDDDD)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	collide (Lnet/minecraft/core/Direction$Axis;Lnet/minecraft/world/phys/AABB;Ljava/lang/Iterable;D)D a
	create (DDDDDD)Lnet/minecraft/world/phys/shapes/VoxelShape; b
	create (Lnet/minecraft/world/phys/AABB;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	createIndexMerger (ILit/unimi/dsi/fastutil/doubles/DoubleList;Lit/unimi/dsi/fastutil/doubles/DoubleList;ZZ)Lnet/minecraft/world/phys/shapes/IndexMerger; a
	empty ()Lnet/minecraft/world/phys/shapes/VoxelShape; a
	faceShapeOccludes (Lnet/minecraft/world/phys/shapes/VoxelShape;Lnet/minecraft/world/phys/shapes/VoxelShape;)Z b
	findBits (DD)I a
	getFaceShape (Lnet/minecraft/world/phys/shapes/VoxelShape;Lnet/minecraft/core/Direction;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	join (Lnet/minecraft/world/phys/shapes/VoxelShape;Lnet/minecraft/world/phys/shapes/VoxelShape;Lnet/minecraft/world/phys/shapes/BooleanOp;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	joinIsNotEmpty (Lnet/minecraft/world/phys/shapes/IndexMerger;Lnet/minecraft/world/phys/shapes/IndexMerger;Lnet/minecraft/world/phys/shapes/IndexMerger;Lnet/minecraft/world/phys/shapes/DiscreteVoxelShape;Lnet/minecraft/world/phys/shapes/DiscreteVoxelShape;Lnet/minecraft/world/phys/shapes/BooleanOp;)Z a
	joinIsNotEmpty (Lnet/minecraft/world/phys/shapes/VoxelShape;Lnet/minecraft/world/phys/shapes/VoxelShape;Lnet/minecraft/world/phys/shapes/BooleanOp;)Z c
	joinUnoptimized (Lnet/minecraft/world/phys/shapes/VoxelShape;Lnet/minecraft/world/phys/shapes/VoxelShape;Lnet/minecraft/world/phys/shapes/BooleanOp;)Lnet/minecraft/world/phys/shapes/VoxelShape; b
	lcm (II)J a
	mergedFaceOccludes (Lnet/minecraft/world/phys/shapes/VoxelShape;Lnet/minecraft/world/phys/shapes/VoxelShape;Lnet/minecraft/core/Direction;)Z b
	or (Lnet/minecraft/world/phys/shapes/VoxelShape;Lnet/minecraft/world/phys/shapes/VoxelShape;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	or (Lnet/minecraft/world/phys/shapes/VoxelShape;[Lnet/minecraft/world/phys/shapes/VoxelShape;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
net/minecraft/world/phys/shapes/Shapes$DoubleLineConsumer eey$a
net/minecraft/world/phys/shapes/SliceShape eez
	SLICE_COORDS d
	axis c
	delegate b
	getCoords (Lnet/minecraft/core/Direction$Axis;)Lit/unimi/dsi/fastutil/doubles/DoubleList; a
	makeSlice (Lnet/minecraft/world/phys/shapes/DiscreteVoxelShape;Lnet/minecraft/core/Direction$Axis;I)Lnet/minecraft/world/phys/shapes/DiscreteVoxelShape; a
net/minecraft/world/phys/shapes/SubShape efa
	endX h
	endY i
	endZ j
	parent d
	startX e
	startY f
	startZ g
	clampToShape (Lnet/minecraft/core/Direction$Axis;I)I a
	fill (III)V c
	firstFull (Lnet/minecraft/core/Direction$Axis;)I a
	isFull (III)Z b
	lastFull (Lnet/minecraft/core/Direction$Axis;)I b
net/minecraft/world/phys/shapes/VoxelShape efb
	faces b
	shape a
	bounds ()Lnet/minecraft/world/phys/AABB; a
	calculateFace (Lnet/minecraft/core/Direction;)Lnet/minecraft/world/phys/shapes/VoxelShape; b
	clip (Lnet/minecraft/world/phys/Vec3;Lnet/minecraft/world/phys/Vec3;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/phys/BlockHitResult; a
	closestPointTo (Lnet/minecraft/world/phys/Vec3;)Ljava/util/Optional; a
	collide (Lnet/minecraft/core/Direction$Axis;Lnet/minecraft/world/phys/AABB;D)D a
	collideX (Lnet/minecraft/core/AxisCycle;Lnet/minecraft/world/phys/AABB;D)D a
	findIndex (Lnet/minecraft/core/Direction$Axis;D)I a
	forAllBoxes (Lnet/minecraft/world/phys/shapes/Shapes$DoubleLineConsumer;)V b
	forAllEdges (Lnet/minecraft/world/phys/shapes/Shapes$DoubleLineConsumer;)V a
	get (Lnet/minecraft/core/Direction$Axis;I)D a
	getCoords (Lnet/minecraft/core/Direction$Axis;)Lit/unimi/dsi/fastutil/doubles/DoubleList; a
	getFaceShape (Lnet/minecraft/core/Direction;)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	isEmpty ()Z b
	max (Lnet/minecraft/core/Direction$Axis;)D c
	max (Lnet/minecraft/core/Direction$Axis;DD)D b
	min (Lnet/minecraft/core/Direction$Axis;)D b
	min (Lnet/minecraft/core/Direction$Axis;DD)D a
	move (DDD)Lnet/minecraft/world/phys/shapes/VoxelShape; a
	optimize ()Lnet/minecraft/world/phys/shapes/VoxelShape; c
	toAabbs ()Ljava/util/List; d
net/minecraft/world/scores/Objective efd
	criteria c
	displayName d
	formattedDisplayName e
	name b
	renderType f
	scoreboard a
	createFormattedDisplayName ()Lnet/minecraft/network/chat/Component; g
	getCriteria ()Lnet/minecraft/world/scores/criteria/ObjectiveCriteria; c
	getDisplayName ()Lnet/minecraft/network/chat/Component; d
	getFormattedDisplayName ()Lnet/minecraft/network/chat/Component; e
	getName ()Ljava/lang/String; b
	getRenderType ()Lnet/minecraft/world/scores/criteria/ObjectiveCriteria$RenderType; f
	getScoreboard ()Lnet/minecraft/world/scores/Scoreboard; a
	setDisplayName (Lnet/minecraft/network/chat/Component;)V a
	setRenderType (Lnet/minecraft/world/scores/criteria/ObjectiveCriteria$RenderType;)V a
net/minecraft/world/scores/PlayerTeam efe
	BIT_FRIENDLY_FIRE a
	BIT_SEE_INVISIBLES b
	allowFriendlyFire i
	collisionRule n
	color m
	deathMessageVisibility l
	displayName f
	displayNameStyle o
	name d
	nameTagVisibility k
	playerPrefix g
	playerSuffix h
	players e
	scoreboard c
	seeFriendlyInvisibles j
	canSeeFriendlyInvisibles ()Z i
	formatNameForTeam (Lnet/minecraft/world/scores/Team;Lnet/minecraft/network/chat/Component;)Lnet/minecraft/network/chat/MutableComponent; a
	getCollisionRule ()Lnet/minecraft/world/scores/Team$CollisionRule; l
	getColor ()Lnet/minecraft/ChatFormatting; n
	getDeathMessageVisibility ()Lnet/minecraft/world/scores/Team$Visibility; k
	getDisplayName ()Lnet/minecraft/network/chat/Component; c
	getFormattedDisplayName ()Lnet/minecraft/network/chat/MutableComponent; d
	getFormattedName (Lnet/minecraft/network/chat/Component;)Lnet/minecraft/network/chat/MutableComponent; d
	getName ()Ljava/lang/String; b
	getNameTagVisibility ()Lnet/minecraft/world/scores/Team$Visibility; j
	getPlayerPrefix ()Lnet/minecraft/network/chat/Component; e
	getPlayerSuffix ()Lnet/minecraft/network/chat/Component; f
	getPlayers ()Ljava/util/Collection; g
	getScoreboard ()Lnet/minecraft/world/scores/Scoreboard; a
	isAllowFriendlyFire ()Z h
	packOptions ()I m
	setAllowFriendlyFire (Z)V a
	setCollisionRule (Lnet/minecraft/world/scores/Team$CollisionRule;)V a
	setColor (Lnet/minecraft/ChatFormatting;)V a
	setDeathMessageVisibility (Lnet/minecraft/world/scores/Team$Visibility;)V b
	setDisplayName (Lnet/minecraft/network/chat/Component;)V a
	setNameTagVisibility (Lnet/minecraft/world/scores/Team$Visibility;)V a
	setPlayerPrefix (Lnet/minecraft/network/chat/Component;)V b
	setPlayerSuffix (Lnet/minecraft/network/chat/Component;)V c
	setSeeFriendlyInvisibles (Z)V b
	unpackOptions (I)V a
net/minecraft/world/scores/Score eff
	SCORE_COMPARATOR a
	count e
	forceUpdate g
	locked f
	objective c
	owner d
	scoreboard b
	add (I)V a
	getObjective ()Lnet/minecraft/world/scores/Objective; d
	getOwner ()Ljava/lang/String; e
	getScore ()I b
	getScoreboard ()Lnet/minecraft/world/scores/Scoreboard; f
	increment ()V a
	isLocked ()Z g
	reset ()V c
	setLocked (Z)V a
	setScore (I)V b
net/minecraft/world/scores/Scoreboard efg
	DISPLAY_SLOTS f
	DISPLAY_SLOT_BELOW_NAME c
	DISPLAY_SLOT_LIST a
	DISPLAY_SLOT_SIDEBAR b
	DISPLAY_SLOT_TEAMS_SIDEBAR_END e
	DISPLAY_SLOT_TEAMS_SIDEBAR_START d
	LOGGER g
	displayObjectives k
	displaySlotNames n
	objectivesByCriteria i
	objectivesByName h
	playerScores j
	teamsByName l
	teamsByPlayer m
	addObjective (Ljava/lang/String;Lnet/minecraft/world/scores/criteria/ObjectiveCriteria;Lnet/minecraft/network/chat/Component;Lnet/minecraft/world/scores/criteria/ObjectiveCriteria$RenderType;)Lnet/minecraft/world/scores/Objective; a
	addPlayerTeam (Ljava/lang/String;)Lnet/minecraft/world/scores/PlayerTeam; g
	addPlayerToTeam (Ljava/lang/String;Lnet/minecraft/world/scores/PlayerTeam;)Z a
	entityRemoved (Lnet/minecraft/world/entity/Entity;)V a
	forAllObjectives (Lnet/minecraft/world/scores/criteria/ObjectiveCriteria;Ljava/lang/String;Ljava/util/function/Consumer;)V a
	getDisplayObjective (I)Lnet/minecraft/world/scores/Objective; a
	getDisplaySlotByName (Ljava/lang/String;)I j
	getDisplaySlotName (I)Ljava/lang/String; b
	getDisplaySlotNames ()[Ljava/lang/String; h
	getObjective (Ljava/lang/String;)Lnet/minecraft/world/scores/Objective; d
	getObjectiveNames ()Ljava/util/Collection; d
	getObjectives ()Ljava/util/Collection; c
	getOrCreateObjective (Ljava/lang/String;)Lnet/minecraft/world/scores/Objective; c
	getOrCreatePlayerScore (Ljava/lang/String;Lnet/minecraft/world/scores/Objective;)Lnet/minecraft/world/scores/Score; c
	getPlayerScores (Ljava/lang/String;)Ljava/util/Map; e
	getPlayerScores (Lnet/minecraft/world/scores/Objective;)Ljava/util/Collection; i
	getPlayerTeam (Ljava/lang/String;)Lnet/minecraft/world/scores/PlayerTeam; f
	getPlayerTeams ()Ljava/util/Collection; g
	getPlayersTeam (Ljava/lang/String;)Lnet/minecraft/world/scores/PlayerTeam; i
	getTeamNames ()Ljava/util/Collection; f
	getTrackedPlayers ()Ljava/util/Collection; e
	hasObjective (Ljava/lang/String;)Z b
	hasPlayerScore (Ljava/lang/String;Lnet/minecraft/world/scores/Objective;)Z b
	loadPlayerScores (Lnet/minecraft/nbt/ListTag;)V a
	onObjectiveAdded (Lnet/minecraft/world/scores/Objective;)V a
	onObjectiveChanged (Lnet/minecraft/world/scores/Objective;)V b
	onObjectiveRemoved (Lnet/minecraft/world/scores/Objective;)V c
	onPlayerRemoved (Ljava/lang/String;)V a
	onPlayerScoreRemoved (Ljava/lang/String;Lnet/minecraft/world/scores/Objective;)V a
	onScoreChanged (Lnet/minecraft/world/scores/Score;)V a
	onTeamAdded (Lnet/minecraft/world/scores/PlayerTeam;)V a
	onTeamChanged (Lnet/minecraft/world/scores/PlayerTeam;)V b
	onTeamRemoved (Lnet/minecraft/world/scores/PlayerTeam;)V c
	removeObjective (Lnet/minecraft/world/scores/Objective;)V j
	removePlayerFromTeam (Ljava/lang/String;)Z h
	removePlayerFromTeam (Ljava/lang/String;Lnet/minecraft/world/scores/PlayerTeam;)V b
	removePlayerTeam (Lnet/minecraft/world/scores/PlayerTeam;)V d
	resetPlayerScore (Ljava/lang/String;Lnet/minecraft/world/scores/Objective;)V d
	savePlayerScores ()Lnet/minecraft/nbt/ListTag; i
	setDisplayObjective (ILnet/minecraft/world/scores/Objective;)V a
net/minecraft/world/scores/ScoreboardSaveData efh
	FILE_ID a
	scoreboard b
	load (Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/world/scores/ScoreboardSaveData; b
	loadDisplaySlots (Lnet/minecraft/nbt/CompoundTag;)V c
	loadObjectives (Lnet/minecraft/nbt/ListTag;)V b
	loadTeamPlayers (Lnet/minecraft/world/scores/PlayerTeam;Lnet/minecraft/nbt/ListTag;)V a
	loadTeams (Lnet/minecraft/nbt/ListTag;)V a
	save (Lnet/minecraft/nbt/CompoundTag;)Lnet/minecraft/nbt/CompoundTag; a
	saveDisplaySlots (Lnet/minecraft/nbt/CompoundTag;)V d
	saveObjectives ()Lnet/minecraft/nbt/ListTag; d
	saveTeams ()Lnet/minecraft/nbt/ListTag; a
net/minecraft/world/scores/Team efi
	canSeeFriendlyInvisibles ()Z i
	getCollisionRule ()Lnet/minecraft/world/scores/Team$CollisionRule; l
	getColor ()Lnet/minecraft/ChatFormatting; n
	getDeathMessageVisibility ()Lnet/minecraft/world/scores/Team$Visibility; k
	getFormattedName (Lnet/minecraft/network/chat/Component;)Lnet/minecraft/network/chat/MutableComponent; d
	getName ()Ljava/lang/String; b
	getNameTagVisibility ()Lnet/minecraft/world/scores/Team$Visibility; j
	getPlayers ()Ljava/util/Collection; g
	isAlliedTo (Lnet/minecraft/world/scores/Team;)Z a
	isAllowFriendlyFire ()Z h
net/minecraft/world/scores/Team$CollisionRule efi$a
	$VALUES h
	ALWAYS a
	BY_NAME g
	NEVER b
	PUSH_OTHER_TEAMS c
	PUSH_OWN_TEAM d
	id f
	name e
	$values ()[Lnet/minecraft/world/scores/Team$CollisionRule; b
	byName (Ljava/lang/String;)Lnet/minecraft/world/scores/Team$CollisionRule; a
	getDisplayName ()Lnet/minecraft/network/chat/Component; a
net/minecraft/world/scores/Team$Visibility efi$b
	$VALUES h
	ALWAYS a
	BY_NAME g
	HIDE_FOR_OTHER_TEAMS c
	HIDE_FOR_OWN_TEAM d
	NEVER b
	id f
	name e
	$values ()[Lnet/minecraft/world/scores/Team$Visibility; c
	byName (Ljava/lang/String;)Lnet/minecraft/world/scores/Team$Visibility; a
	getAllNames ()[Ljava/lang/String; a
	getDisplayName ()Lnet/minecraft/network/chat/Component; b
net/minecraft/world/scores/criteria/ObjectiveCriteria efj
	AIR h
	ARMOR i
	CRITERIA_CACHE o
	CUSTOM_CRITERIA n
	DEATH_COUNT c
	DUMMY a
	EXPERIENCE j
	FOOD g
	HEALTH f
	KILLED_BY_TEAM m
	KILL_COUNT_ALL e
	KILL_COUNT_PLAYERS d
	LEVEL k
	TEAM_KILL l
	TRIGGER b
	name p
	readOnly q
	renderType r
	byName (Ljava/lang/String;)Ljava/util/Optional; a
	getCustomCriteriaNames ()Ljava/util/Set; c
	getDefaultRenderType ()Lnet/minecraft/world/scores/criteria/ObjectiveCriteria$RenderType; f
	getName ()Ljava/lang/String; d
	getStat (Lnet/minecraft/stats/StatType;Lnet/minecraft/resources/ResourceLocation;)Ljava/util/Optional; a
	isReadOnly ()Z e
	registerCustom (Ljava/lang/String;)Lnet/minecraft/world/scores/criteria/ObjectiveCriteria; b
	registerCustom (Ljava/lang/String;ZLnet/minecraft/world/scores/criteria/ObjectiveCriteria$RenderType;)Lnet/minecraft/world/scores/criteria/ObjectiveCriteria; a
net/minecraft/world/scores/criteria/ObjectiveCriteria$RenderType efj$a
	$VALUES e
	CODEC c
	HEARTS b
	INTEGER a
	id d
	$values ()[Lnet/minecraft/world/scores/criteria/ObjectiveCriteria$RenderType; b
	byId (Ljava/lang/String;)Lnet/minecraft/world/scores/criteria/ObjectiveCriteria$RenderType; a
	getId ()Ljava/lang/String; a
	getSerializedName ()Ljava/lang/String; c
net/minecraft/world/ticks/BlackholeTickAccess efm
	CONTAINER_BLACKHOLE a
	LEVEL_BLACKHOLE b
	emptyContainer ()Lnet/minecraft/world/ticks/TickContainerAccess; a
	emptyLevelList ()Lnet/minecraft/world/ticks/LevelTickAccess; b
net/minecraft/world/ticks/ContainerSingleItem efn
	clearContent ()V a
	getContainerSize ()I b
	getFirstItem ()Lnet/minecraft/world/item/ItemStack; ar_
	isEmpty ()Z ab_
	removeFirstItem ()Lnet/minecraft/world/item/ItemStack; j
	removeItemNoUpdate (I)Lnet/minecraft/world/item/ItemStack; b
	setFirstItem (Lnet/minecraft/world/item/ItemStack;)V b
net/minecraft/world/ticks/LevelChunkTicks efo
	onTickAdded d
	pendingTicks b
	tickQueue a
	ticksPerPosition c
	count ()I a
	getAll ()Ljava/util/stream/Stream; d
	hasScheduledTick (Lnet/minecraft/core/BlockPos;Ljava/lang/Object;)Z a
	load (Lnet/minecraft/nbt/ListTag;Ljava/util/function/Function;Lnet/minecraft/world/level/ChunkPos;)Lnet/minecraft/world/ticks/LevelChunkTicks; a
	peek ()Lnet/minecraft/world/ticks/ScheduledTick; b
	poll ()Lnet/minecraft/world/ticks/ScheduledTick; c
	removeIf (Ljava/util/function/Predicate;)V a
	save (JLjava/util/function/Function;)Lnet/minecraft/nbt/ListTag; a
	save (JLjava/util/function/Function;)Lnet/minecraft/nbt/Tag; b
	schedule (Lnet/minecraft/world/ticks/ScheduledTick;)V a
	scheduleUnchecked (Lnet/minecraft/world/ticks/ScheduledTick;)V b
	setOnTickAdded (Ljava/util/function/BiConsumer;)V a
	unpack (J)V a
net/minecraft/world/ticks/LevelTickAccess efp
	willTickThisTick (Lnet/minecraft/core/BlockPos;Ljava/lang/Object;)Z b
net/minecraft/world/ticks/LevelTicks efq
	CONTAINER_DRAIN_ORDER a
	allContainers d
	alreadyRunThisTick h
	chunkScheduleUpdater j
	containersToTick f
	nextTickForContainer e
	profiler c
	tickCheck b
	toRunThisTick g
	toRunThisTickSet i
	addContainer (Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/world/ticks/LevelChunkTicks;)V a
	calculateTickSetIfNeeded ()V d
	canScheduleMoreTicks (I)Z a
	cleanupAfterTick ()V c
	clearArea (Lnet/minecraft/world/level/levelgen/structure/BoundingBox;)V a
	collectTicks (JILnet/minecraft/util/profiling/ProfilerFiller;)V a
	copyArea (Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Lnet/minecraft/core/Vec3i;)V a
	copyAreaFrom (Lnet/minecraft/world/ticks/LevelTicks;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Lnet/minecraft/core/Vec3i;)V a
	count ()I a
	drainContainers (JI)V a
	drainFromCurrentContainer (Ljava/util/Queue;Lnet/minecraft/world/ticks/LevelChunkTicks;JI)V a
	forContainersInArea (Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Lnet/minecraft/world/ticks/LevelTicks$PosAndContainerConsumer;)V a
	hasScheduledTick (Lnet/minecraft/core/BlockPos;Ljava/lang/Object;)Z a
	removeContainer (Lnet/minecraft/world/level/ChunkPos;)V a
	rescheduleLeftoverContainers ()V b
	runCollectedTicks (Ljava/util/function/BiConsumer;)V a
	schedule (Lnet/minecraft/world/ticks/ScheduledTick;)V a
	scheduleForThisTick (Lnet/minecraft/world/ticks/ScheduledTick;)V c
	sortContainersToTick (J)V a
	tick (JILjava/util/function/BiConsumer;)V a
	updateContainerScheduling (Lnet/minecraft/world/ticks/ScheduledTick;)V b
	willTickThisTick (Lnet/minecraft/core/BlockPos;Ljava/lang/Object;)Z b
net/minecraft/world/ticks/LevelTicks$PosAndContainerConsumer efq$a
net/minecraft/world/ticks/ProtoChunkTicks efr
	ticks a
	ticksPerPosition b
	count ()I a
	hasScheduledTick (Lnet/minecraft/core/BlockPos;Ljava/lang/Object;)Z a
	load (Lnet/minecraft/nbt/ListTag;Ljava/util/function/Function;Lnet/minecraft/world/level/ChunkPos;)Lnet/minecraft/world/ticks/ProtoChunkTicks; a
	save (JLjava/util/function/Function;)Lnet/minecraft/nbt/Tag; b
	schedule (Lnet/minecraft/world/ticks/SavedTick;)V a
	schedule (Lnet/minecraft/world/ticks/ScheduledTick;)V a
	scheduledTicks ()Ljava/util/List; b
net/minecraft/world/ticks/SavedTick efs
	TAG_DELAY j
	TAG_ID f
	TAG_PRIORITY k
	TAG_X g
	TAG_Y h
	TAG_Z i
	UNIQUE_TICK_HASH a
	delay d
	pos c
	priority e
	type b
	delay ()I c
	loadTick (Lnet/minecraft/nbt/CompoundTag;Ljava/util/function/Function;)Ljava/util/Optional; a
	loadTickList (Lnet/minecraft/nbt/ListTag;Ljava/util/function/Function;Lnet/minecraft/world/level/ChunkPos;Ljava/util/function/Consumer;)V a
	pos ()Lnet/minecraft/core/BlockPos; b
	priority ()Lnet/minecraft/world/ticks/TickPriority; d
	probe (Ljava/lang/Object;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/ticks/SavedTick; a
	save (Ljava/util/function/Function;)Lnet/minecraft/nbt/CompoundTag; a
	saveTick (Ljava/lang/String;Lnet/minecraft/core/BlockPos;ILnet/minecraft/world/ticks/TickPriority;)Lnet/minecraft/nbt/CompoundTag; a
	saveTick (Lnet/minecraft/world/ticks/ScheduledTick;Ljava/util/function/Function;J)Lnet/minecraft/nbt/CompoundTag; a
	type ()Ljava/lang/Object; a
	unpack (JJ)Lnet/minecraft/world/ticks/ScheduledTick; a
net/minecraft/world/ticks/ScheduledTick eft
	DRAIN_ORDER a
	INTRA_TICK_DRAIN_ORDER b
	UNIQUE_TICK_HASH c
	pos e
	priority g
	subTickOrder h
	triggerTick f
	type d
	pos ()Lnet/minecraft/core/BlockPos; b
	priority ()Lnet/minecraft/world/ticks/TickPriority; d
	probe (Ljava/lang/Object;Lnet/minecraft/core/BlockPos;)Lnet/minecraft/world/ticks/ScheduledTick; a
	subTickOrder ()J e
	triggerTick ()J c
	type ()Ljava/lang/Object; a
net/minecraft/world/ticks/SerializableTickContainer efu
	save (JLjava/util/function/Function;)Lnet/minecraft/nbt/Tag; b
net/minecraft/world/ticks/TickAccess efv
	count ()I a
	hasScheduledTick (Lnet/minecraft/core/BlockPos;Ljava/lang/Object;)Z a
	schedule (Lnet/minecraft/world/ticks/ScheduledTick;)V a
net/minecraft/world/ticks/TickContainerAccess efw
net/minecraft/world/ticks/TickPriority efx
	$VALUES i
	EXTREMELY_HIGH a
	EXTREMELY_LOW g
	HIGH c
	LOW e
	NORMAL d
	VERY_HIGH b
	VERY_LOW f
	value h
	$values ()[Lnet/minecraft/world/ticks/TickPriority; b
	byValue (I)Lnet/minecraft/world/ticks/TickPriority; a
	getValue ()I a
net/minecraft/world/ticks/WorldGenTickAccess efy
	containerGetter a
	count ()I a
	hasScheduledTick (Lnet/minecraft/core/BlockPos;Ljava/lang/Object;)Z a
	schedule (Lnet/minecraft/world/ticks/ScheduledTick;)V a
	willTickThisTick (Lnet/minecraft/core/BlockPos;Ljava/lang/Object;)Z b
net/minecraft/client/ClientBrandRetriever net/minecraft/client/ClientBrandRetriever
	VANILLA_NAME a
net/minecraft/client/main/Main net/minecraft/client/main/Main
	LOGGER a
	emptyStringToEmptyOptional (Ljava/lang/String;)Ljava/util/Optional; a
	ofNullable (Ljava/lang/Integer;)Ljava/util/OptionalInt; a
	parseArgument (Ljoptsimple/OptionSet;Ljoptsimple/OptionSpec;)Ljava/lang/Object; a
	stringHasValue (Ljava/lang/String;)Z b
net/minecraft/server/Main net/minecraft/server/Main
	LOGGER a
	forceUpgrade (Lnet/minecraft/world/level/storage/LevelStorageSource$LevelStorageAccess;Lcom/mojang/datafixers/DataFixer;ZLjava/util/function/BooleanSupplier;Lnet/minecraft/core/Registry;)V a
	loadOrCreateConfig (Lnet/minecraft/server/dedicated/DedicatedServerProperties;Lnet/minecraft/world/level/storage/LevelStorageSource$LevelStorageAccess;ZLnet/minecraft/server/packs/repository/PackRepository;)Lnet/minecraft/server/WorldLoader$InitConfig; a
	writePidFile (Ljava/nio/file/Path;)V a
net/minecraft/server/MinecraftServer net/minecraft/server/MinecraftServer
	ABSOLUTE_MAX_WORLD_SIZE e
	ANONYMOUS_PLAYER_PROFILE g
	AUTOSAVE_INTERVAL v
	AVERAGE_TICK_TIME_SMOOTHING o
	DELAYED_TASKS_TICK_EXTENSION x
	DEMO_SETTINGS f
	LOGGER n
	MAX_STATUS_PLAYER_SAMPLE t
	MAX_TICK_LATENCY w
	MS_PER_TICK c
	OVERLOADED_THRESHOLD q
	OVERLOADED_WARNING_INTERVAL r
	START_CHUNK_RADIUS d
	START_TICKING_CHUNK_COUNT u
	STATUS_EXPIRE_TIME_NS s
	TICK_STATS_SPAN p
	VANILLA_BRAND b
	allowFlight X
	averageTickTime ar
	commandStorage am
	connection G
	customBossEvents an
	debugCommandProfiler E
	debugCommandProfilerDelayStart F
	delayedTasksMaxNextTickTime ai
	enforceWhitelist aq
	executor as
	fixerUpper L
	frameTimer ap
	functionManager ao
	isDemo ac
	isReady ad
	isSaving aw
	keyPair aa
	lastOverloadWarning ae
	lastServerStatus af
	levels P
	localIp M
	mayHaveDelayedTasks aj
	metricsRecorder z
	motd Y
	nextTickTime ah
	onMetricsRecordingFinished C
	onMetricsRecordingStopped B
	onlineMode U
	packRepository ak
	playerDataStorage i
	playerIdleTimeout Z
	playerList Q
	port N
	preventProxyConnections V
	profiler A
	progressListenerFactory H
	proxy j
	pvp W
	random K
	registries O
	resources au
	running R
	scoreboard al
	serverId at
	serverThread ag
	services l
	singleplayerProfile ab
	status I
	statusIcon J
	stopped S
	storageSource h
	structureTemplateManager av
	tickCount T
	tickTimes k
	tickables y
	willStartRecordingMetrics D
	worldData m
	acceptsFailure ()Z q_
	acceptsSuccess ()Z e_
	addTickable (Ljava/lang/Runnable;)V b
	areNpcsEnabled ()Z X
	buildPlayerStatus ()Lnet/minecraft/network/protocol/status/ServerStatus$Players; bj
	buildServerStatus ()Lnet/minecraft/network/protocol/status/ServerStatus; bi
	cancelRecordingMetrics ()V aR
	configurePackRepository (Lnet/minecraft/server/packs/repository/PackRepository;Lnet/minecraft/world/level/DataPackConfig;ZLnet/minecraft/world/flag/FeatureFlagSet;)Lnet/minecraft/world/level/WorldDataConfiguration; a
	constructOrExtractCrashReport (Ljava/lang/Throwable;)Lnet/minecraft/CrashReport; a
	createCommandSourceStack ()Lnet/minecraft/commands/CommandSourceStack; aD
	createGameModeForPlayer (Lnet/minecraft/server/level/ServerPlayer;)Lnet/minecraft/server/level/ServerPlayerGameMode; b
	createLevels (Lnet/minecraft/server/level/progress/ChunkProgressListener;)V a
	createTextFilterForPlayer (Lnet/minecraft/server/level/ServerPlayer;)Lnet/minecraft/server/network/TextFilter; a
	doRunTask (Ljava/lang/Runnable;)V d
	doRunTask (Lnet/minecraft/server/TickTask;)V b
	dumpClasspath (Ljava/nio/file/Path;)V e
	dumpGameRules (Ljava/nio/file/Path;)V d
	dumpMiscStats (Ljava/nio/file/Path;)V c
	dumpNativeModules (Ljava/nio/file/Path;)V g
	dumpServerProperties (Ljava/nio/file/Path;)V a
	dumpThreads (Ljava/nio/file/Path;)V f
	endMetricsRecordingTick ()V bu
	enforceSecureProfile ()Z aw
	executeIfPossible (Ljava/lang/Runnable;)V c
	fillServerSystemReport (Lnet/minecraft/SystemReport;)Lnet/minecraft/SystemReport; a
	fillSystemReport (Lnet/minecraft/SystemReport;)Lnet/minecraft/SystemReport; b
	finishRecordingMetrics ()V aQ
	forceDifficulty ()V r
	forceSynchronousWrites ()Z aS
	forceTimeSynchronization ()V A
	getAbsoluteMaxWorldSize ()I as
	getAdvancements ()Lnet/minecraft/server/ServerAdvancementManager; az
	getAllLevels ()Ljava/lang/Iterable; F
	getAverageTickTime ()F aL
	getChatDecorator ()Lnet/minecraft/network/chat/ChatDecorator; be
	getCommandStorage ()Lnet/minecraft/world/level/storage/CommandStorage; aG
	getCommands ()Lnet/minecraft/commands/Commands; aC
	getCompressionThreshold ()I av
	getConnection ()Lnet/minecraft/server/network/ServerConnectionListener; ad
	getCustomBossEvents ()Lnet/minecraft/server/bossevents/CustomBossEvents; aJ
	getDefaultGameType ()Lnet/minecraft/world/level/GameType; o_
	getFile (Ljava/lang/String;)Ljava/io/File; c
	getFixerUpper ()Lcom/mojang/datafixers/DataFixer; ay
	getForcedGameType ()Lnet/minecraft/world/level/GameType; aX
	getFrameTimer ()Lnet/minecraft/util/FrameTimer; aM
	getFunctionCompilationLevel ()I j
	getFunctions ()Lnet/minecraft/server/ServerFunctionManager; aA
	getGameRules ()Lnet/minecraft/world/level/GameRules; aI
	getKeyPair ()Ljava/security/KeyPair; L
	getLevel (Lnet/minecraft/resources/ResourceKey;)Lnet/minecraft/server/level/ServerLevel; a
	getLocalIp ()Ljava/lang/String; u
	getLootData ()Lnet/minecraft/world/level/storage/loot/LootDataManager; aH
	getMaxChainedNeighborUpdates ()I bd
	getMaxPlayers ()I I
	getModdedStatus ()Lnet/minecraft/util/ModCheck; K
	getMotd ()Ljava/lang/String; aa
	getNextTickTime ()J ax
	getOperatorUserPermissionLevel ()I i
	getPackRepository ()Lnet/minecraft/server/packs/repository/PackRepository; aB
	getPlayerCount ()I H
	getPlayerIdleTimeout ()I al
	getPlayerList ()Lnet/minecraft/server/players/PlayerList; ac
	getPlayerNames ()[Ljava/lang/String; J
	getPort ()I M
	getPreventProxyConnections ()Z V
	getProfileCache ()Lnet/minecraft/server/players/GameProfileCache; ap
	getProfileKeySignatureValidator ()Lnet/minecraft/util/SignatureValidator; an
	getProfilePermissions (Lcom/mojang/authlib/GameProfile;)I c
	getProfileRepository ()Lcom/mojang/authlib/GameProfileRepository; ao
	getProfiler ()Lnet/minecraft/util/profiling/ProfilerFiller; aN
	getProxy ()Ljava/net/Proxy; ak
	getRateLimitPacketsPerSecond ()I m
	getRecipeManager ()Lnet/minecraft/world/item/crafting/RecipeManager; aE
	getResourceManager ()Lnet/minecraft/server/packs/resources/ResourceManager; aY
	getRunningThread ()Ljava/lang/Thread; au
	getScaledTrackingDistance (I)I b
	getScoreboard ()Lnet/minecraft/server/ServerScoreboard; aF
	getSelectedPacks (Lnet/minecraft/server/packs/repository/PackRepository;)Lnet/minecraft/world/level/DataPackConfig; a
	getServerDirectory ()Ljava/io/File; z
	getServerResourcePack ()Ljava/util/Optional; S
	getServerVersion ()Ljava/lang/String; G
	getSessionService ()Lcom/mojang/authlib/minecraft/MinecraftSessionService; am
	getSingleplayerProfile ()Lcom/mojang/authlib/GameProfile; N
	getSpawnProtectionRadius ()I ah
	getSpawnRadius (Lnet/minecraft/server/level/ServerLevel;)I a
	getStatus ()Lnet/minecraft/network/protocol/status/ServerStatus; aq
	getStructureManager ()Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplateManager; aT
	getTickCount ()I ag
	getWorldData ()Lnet/minecraft/world/level/storage/WorldData; aU
	getWorldPath (Lnet/minecraft/world/level/storage/LevelResource;)Ljava/nio/file/Path; a
	getWorldScreenshotFile ()Ljava/util/Optional; y
	halt (Z)V a
	hasGui ()Z af
	haveTime ()Z bf
	hidesOnlinePlayers ()Z aj
	initServer ()Z e
	initializeKeyPair ()V P
	invalidateStatus ()V ar
	isCommandBlockEnabled ()Z o
	isCurrentlySaving ()Z aZ
	isDedicatedServer ()Z l
	isDemo ()Z R
	isEnforceWhitelist ()Z aK
	isEpollEnabled ()Z n
	isFlightAllowed ()Z Z
	isHardcore ()Z h
	isNetherEnabled ()Z B
	isPublished ()Z p
	isPvpAllowed ()Z Y
	isReady ()Z ae
	isRecordingMetrics ()Z aO
	isResourcePackRequired ()Z T
	isRunning ()Z v
	isShutdown ()Z C
	isSingleplayer ()Z O
	isSingleplayerOwner (Lcom/mojang/authlib/GameProfile;)Z a
	isSpawningAnimals ()Z W
	isSpawningMonsters ()Z Q
	isStopped ()Z ab
	isTimeProfilerRunning ()Z ba
	isUnderSpawnProtection (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/entity/player/Player;)Z a
	kickUnlistedPlayers (Lnet/minecraft/commands/CommandSourceStack;)V a
	levelKeys ()Ljava/util/Set; E
	loadLevel ()V n_
	loadStatusIcon ()Ljava/util/Optional; bh
	logChatMessage (Lnet/minecraft/network/chat/Component;Lnet/minecraft/network/chat/ChatType$Bound;Ljava/lang/String;)V a
	onServerCrash (Lnet/minecraft/CrashReport;)V a
	onServerExit ()V g
	overworld ()Lnet/minecraft/server/level/ServerLevel; D
	pollTask ()Z x
	pollTaskInternal ()Z bg
	prepareLevels (Lnet/minecraft/server/level/progress/ChunkProgressListener;)V b
	publishServer (Lnet/minecraft/world/level/GameType;ZI)Z a
	readScoreboard (Lnet/minecraft/world/level/storage/DimensionDataStorage;)V a
	registries ()Lnet/minecraft/core/LayeredRegistryAccess; aW
	registryAccess ()Lnet/minecraft/core/RegistryAccess$Frozen; aV
	reloadResources (Ljava/util/Collection;)Ljava/util/concurrent/CompletableFuture; a
	repliesToStatus ()Z ai
	runServer ()V w
	saveAllChunks (ZZZ)Z a
	saveDebugReport (Ljava/nio/file/Path;)V b
	saveEverything (ZZZ)Z b
	scheduleExecutables ()Z at
	sendDifficultyUpdate (Lnet/minecraft/server/level/ServerPlayer;)V c
	sendSystemMessage (Lnet/minecraft/network/chat/Component;)V a
	setDefaultGameType (Lnet/minecraft/world/level/GameType;)V a
	setDemo (Z)V c
	setDifficulty (Lnet/minecraft/world/Difficulty;Z)V a
	setDifficultyLocked (Z)V b
	setEnforceWhitelist (Z)V h
	setFlightAllowed (Z)V g
	setId (Ljava/lang/String;)V b
	setInitialSpawn (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/level/storage/ServerLevelData;ZZ)V a
	setLocalIp (Ljava/lang/String;)V a_
	setMotd (Ljava/lang/String;)V d
	setPlayerIdleTimeout (I)V c
	setPlayerList (Lnet/minecraft/server/players/PlayerList;)V a
	setPort (I)V a
	setPreventProxyConnections (Z)V e
	setPvpAllowed (Z)V f
	setSingleplayerProfile (Lcom/mojang/authlib/GameProfile;)V b
	setUsesAuthentication (Z)V d
	setupDebugLevel (Lnet/minecraft/world/level/storage/WorldData;)V a
	shouldInformAdmins ()Z N_
	shouldRconBroadcast ()Z k
	shouldRun (Ljava/lang/Runnable;)Z e
	shouldRun (Lnet/minecraft/server/TickTask;)Z a
	spin (Ljava/util/function/Function;)Lnet/minecraft/server/MinecraftServer; a
	startMetricsRecordingTick ()V bt
	startRecordingMetrics (Ljava/util/function/Consumer;Ljava/util/function/Consumer;)V a
	startTimeProfiler ()V bb
	stopRecordingMetrics ()V aP
	stopServer ()V t
	stopTimeProfiler ()Lnet/minecraft/util/profiling/ProfileResults; bc
	synchronizeTime (Lnet/minecraft/server/level/ServerLevel;)V b
	tickChildren (Ljava/util/function/BooleanSupplier;)V b
	tickServer (Ljava/util/function/BooleanSupplier;)V a
	updateMobSpawningFlags ()V bs
	usesAuthentication ()Z U
	waitUntilNextTick ()V p_
	wrapRunnable (Ljava/lang/Runnable;)Ljava/lang/Runnable; f
	wrapRunnable (Ljava/lang/Runnable;)Lnet/minecraft/server/TickTask; a
net/minecraft/data/Main net/minecraft/data/Main
	bindRegistries (Ljava/util/function/BiFunction;Ljava/util/concurrent/CompletableFuture;)Lnet/minecraft/data/DataProvider$Factory; a
	createStandardGenerator (Ljava/nio/file/Path;Ljava/util/Collection;ZZZZZLnet/minecraft/WorldVersion;Z)Lnet/minecraft/data/DataGenerator; a

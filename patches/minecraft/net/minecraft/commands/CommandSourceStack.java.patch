--- a/net/minecraft/commands/CommandSourceStack.java
+++ b/net/minecraft/commands/CommandSourceStack.java
@@ -40,7 +_,7 @@
 import net.minecraft.world.phys.Vec2;
 import net.minecraft.world.phys.Vec3;
 
-public class CommandSourceStack implements SharedSuggestionProvider {
+public class CommandSourceStack implements SharedSuggestionProvider, net.minecraftforge.common.extensions.IForgeCommandSourceStack {
    public static final SimpleCommandExceptionType ERROR_NOT_PLAYER = new SimpleCommandExceptionType(Component.translatable("permissions.requires.player"));
    public static final SimpleCommandExceptionType ERROR_NOT_ENTITY = new SimpleCommandExceptionType(Component.translatable("permissions.requires.entity"));
    public final CommandSource source;
@@ -60,6 +_,8 @@
    private final CommandSigningContext signingContext;
    private final TaskChainer chatMessageChainer;
    private final IntConsumer returnValueConsumer;
+   public volatile com.mojang.brigadier.tree.CommandNode currentCommand; // CraftBukkit
+   public volatile boolean isForgeCommand; // Ketting
 
    public CommandSourceStack(CommandSource p_81302_, Vec3 p_81303_, Vec2 p_81304_, ServerLevel p_81305_, int p_81306_, String p_81307_, Component p_81308_, MinecraftServer p_81309_, @Nullable Entity p_81310_) {
       this(p_81302_, p_81303_, p_81304_, p_81305_, p_81306_, p_81307_, p_81308_, p_81309_, p_81310_, false, (p_81361_, p_81362_, p_81363_) -> {
@@ -168,9 +_,23 @@
    }
 
    public boolean hasPermission(int p_81370_) {
+      // CraftBukkit start
+      com.mojang.brigadier.tree.CommandNode currentCommand = this.currentCommand;
+      if (currentCommand != null && !org.kettingpowered.ketting.command.ForgeCommand.checkIfForgeCommand(currentCommand)) { //Ketting - skip if forge command
+         return hasPermission(p_81370_, org.bukkit.craftbukkit.v1_20_R2.command.VanillaCommandWrapper.getPermission(currentCommand));
+      }
+      // CraftBukkit end
+
       return this.permissionLevel >= p_81370_;
    }
 
+   // CraftBukkit start
+   public boolean hasPermission(int i, String bukkitPermission) {
+      // World is null when loading functions
+      return ((getLevel() == null || !getLevel().getCraftServer().ignoreVanillaPermissions) && this.permissionLevel >= i) || getBukkitSender().hasPermission(bukkitPermission);
+   }
+   // CraftBukkit end
+
    public Vec3 getPosition() {
       return this.worldPosition;
    }
@@ -295,13 +_,13 @@
       Component component = Component.translatable("chat.type.admin", this.getDisplayName(), p_81367_).withStyle(ChatFormatting.GRAY, ChatFormatting.ITALIC);
       if (this.server.getGameRules().getBoolean(GameRules.RULE_SENDCOMMANDFEEDBACK)) {
          for(ServerPlayer serverplayer : this.server.getPlayerList().getPlayers()) {
-            if (serverplayer != this.source && this.server.getPlayerList().isOp(serverplayer.getGameProfile())) {
+            if (serverplayer != this.source && serverplayer.getBukkitEntity().hasPermission("minecraft.admin.command_feedback")) { // CraftBukkit
                serverplayer.sendSystemMessage(component);
             }
          }
       }
 
-      if (this.source != this.server && this.server.getGameRules().getBoolean(GameRules.RULE_LOGADMINCOMMANDS)) {
+      if (this.source != this.server && this.server.getGameRules().getBoolean(GameRules.RULE_LOGADMINCOMMANDS) && !org.spigotmc.SpigotConfig.silentCommandBlocks) { // Spigot
          this.server.sendSystemMessage(component);
       }
 
@@ -359,4 +_,10 @@
    public FeatureFlagSet enabledFeatures() {
       return this.level.enabledFeatures();
    }
+
+   // CraftBukkit start
+   public org.bukkit.command.CommandSender getBukkitSender() {
+      return source.getBukkitSender(this);
+   }
+   // CraftBukkit end
 }

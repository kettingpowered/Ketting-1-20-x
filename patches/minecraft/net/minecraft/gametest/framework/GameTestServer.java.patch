--- a/net/minecraft/gametest/framework/GameTestServer.java
+++ b/net/minecraft/gametest/framework/GameTestServer.java
@@ -8,6 +_,6 @@
 import com.mojang.authlib.yggdrasil.ServicesKeySet;
 import com.mojang.logging.LogUtils;
 import com.mojang.serialization.Lifecycle;
 import java.net.Proxy;
 import java.util.ArrayList;
 import java.util.Collection;
@@ -18,6 +_,6 @@
 import net.minecraft.CrashReport;
 import net.minecraft.SystemReport;
 import net.minecraft.Util;
 import net.minecraft.commands.Commands;
 import net.minecraft.core.BlockPos;
 import net.minecraft.core.LayeredRegistryAccess;
@@ -49,6 +_,6 @@
 import net.minecraft.world.level.levelgen.presets.WorldPresets;
 import net.minecraft.world.level.storage.LevelStorageSource;
 import net.minecraft.world.level.storage.PrimaryLevelData;
 import org.slf4j.Logger;
 
 public class GameTestServer extends MinecraftServer {
@@ -105,13 +_,30 @@
    public boolean initServer() {
       this.setPlayerList(new PlayerList(this, this.registries(), this.playerDataStorage, 1) {
       });
+      if (!net.minecraftforge.server.ServerLifecycleHooks.handleServerAboutToStart(this)) return false;
+      // Ketting start
+      org.spigotmc.SpigotConfig.init((java.io.File) options.valueOf("spigot-settings"));
+      org.spigotmc.SpigotConfig.registerCommands();
+      if (this.getPort() < 0) {
+         this.setPort(25565);
+      }
+      try {
+         this.getConnection().startTcpServerListener(java.net.InetAddress.getLocalHost(), this.getPort());
+      } catch (java.io.IOException ioexception) {
+         LOGGER.warn("**** FAILED TO BIND TO PORT!");
+         LOGGER.warn("The exception was: {}", (Object)ioexception.toString());
+         LOGGER.warn("Perhaps a server is already running on that port?");
+         return false;
+      }
+      // Ketting end
+      this.prepareLoadLevel(storageSource.getLevelId()); //Ketting
       this.loadLevel();
       ServerLevel serverlevel = this.overworld();
       serverlevel.setDefaultSpawnPos(this.spawnPos, 0.0F);
       int i = 20000000;
       serverlevel.setWeatherParameters(20000000, 20000000, false, false);
       LOGGER.info("Started game test server");
-      return true;
+      return net.minecraftforge.server.ServerLifecycleHooks.handleServerStarting(this);
    }
 
    public void tickServer(BooleanSupplier p_177619_) {
@@ -217,10 +_,16 @@
    public boolean isPublished() {
       return false;
    }
-
    public boolean shouldInformAdmins() {
       return false;
    }
+
+   // Ketting start
+   @Override
+   public org.bukkit.command.CommandSender getBukkitSender(net.minecraft.commands.CommandSourceStack wrapper) {
+      return null;
+   }
+   // Ketting end
 
    public boolean isSingleplayerOwner(GameProfile p_177617_) {
       return false;

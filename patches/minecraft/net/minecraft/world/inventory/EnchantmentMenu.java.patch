--- a/net/minecraft/world/inventory/EnchantmentMenu.java
+++ b/net/minecraft/world/inventory/EnchantmentMenu.java
@@ -27,18 +_,17 @@
 
 public class EnchantmentMenu extends AbstractContainerMenu {
    static final ResourceLocation EMPTY_SLOT_LAPIS_LAZULI = new ResourceLocation("item/empty_slot_lapis_lazuli");
-   private final Container enchantSlots = new SimpleContainer(2) {
-      public void setChanged() {
-         super.setChanged();
-         EnchantmentMenu.this.slotsChanged(this);
-      }
-   };
+   private final Container enchantSlots;
    private final ContainerLevelAccess access;
    private final RandomSource random = RandomSource.create();
    private final DataSlot enchantmentSeed = DataSlot.standalone();
    public final int[] costs = new int[3];
    public final int[] enchantClue = new int[]{-1, -1, -1};
    public final int[] levelClue = new int[]{-1, -1, -1};
+   // CraftBukkit start
+   private org.bukkit.craftbukkit.v1_20_R2.inventory.CraftInventoryView bukkitEntity = null;
+   private org.bukkit.entity.Player player;
+   // CraftBukkit end
 
    public EnchantmentMenu(int p_39454_, Inventory p_39455_) {
       this(p_39454_, p_39455_, ContainerLevelAccess.NULL);
@@ -46,6 +_,19 @@
 
    public EnchantmentMenu(int p_39457_, Inventory p_39458_, ContainerLevelAccess p_39459_) {
       super(MenuType.ENCHANTMENT, p_39457_);
+      this.enchantSlots = new SimpleContainer(2) {
+         public void setChanged() {
+            super.setChanged();
+            EnchantmentMenu.this.slotsChanged(this);
+         }
+
+         // CraftBukkit start
+         @Override
+         public org.bukkit.Location getLocation() {
+            return p_39459_.getLocation();
+         }
+         // CraftBukkit end
+      };
       this.access = p_39459_;
       this.addSlot(new Slot(this.enchantSlots, 0, 15, 47) {
          public int getMaxStackSize() {
@@ -54,7 +_,7 @@
       });
       this.addSlot(new Slot(this.enchantSlots, 1, 35, 47) {
          public boolean mayPlace(ItemStack p_39517_) {
-            return p_39517_.is(Items.LAPIS_LAZULI);
+            return p_39517_.is(net.minecraftforge.common.Tags.Items.ENCHANTING_FUELS);
          }
 
          public Pair<ResourceLocation, ResourceLocation> getNoItemIcon() {
@@ -82,30 +_,34 @@
       this.addDataSlot(DataSlot.shared(this.levelClue, 0));
       this.addDataSlot(DataSlot.shared(this.levelClue, 1));
       this.addDataSlot(DataSlot.shared(this.levelClue, 2));
+      // CraftBukkit start
+      player = (org.bukkit.entity.Player) p_39458_.player.getBukkitEntity();
+      // CraftBukkit end
    }
 
    public void slotsChanged(Container p_39461_) {
       if (p_39461_ == this.enchantSlots) {
          ItemStack itemstack = p_39461_.getItem(0);
-         if (!itemstack.isEmpty() && itemstack.isEnchantable()) {
+         if (!itemstack.isEmpty()) { // CraftBukkit - relax condition
             this.access.execute((p_39485_, p_39486_) -> {
-               int j = 0;
+               float j = 0;
 
                for(BlockPos blockpos : EnchantmentTableBlock.BOOKSHELF_OFFSETS) {
                   if (EnchantmentTableBlock.isValidBookShelf(p_39485_, p_39486_, blockpos)) {
-                     ++j;
+                     j += p_39485_.getBlockState(p_39486_.offset(blockpos)).getEnchantPowerBonus(p_39485_, p_39486_.offset(blockpos));
                   }
                }
 
                this.random.setSeed((long)this.enchantmentSeed.get());
 
                for(int k = 0; k < 3; ++k) {
-                  this.costs[k] = EnchantmentHelper.getEnchantmentCost(this.random, k, j, itemstack);
+                  this.costs[k] = EnchantmentHelper.getEnchantmentCost(this.random, k, (int)j, itemstack);
                   this.enchantClue[k] = -1;
                   this.levelClue[k] = -1;
                   if (this.costs[k] < k + 1) {
                      this.costs[k] = 0;
                   }
+                  this.costs[k] = net.minecraftforge.event.ForgeEventFactory.onEnchantmentLevelSet(p_39485_, p_39486_, k, (int)j, itemstack, costs[k]);
                }
 
                for(int l = 0; l < 3; ++l) {
@@ -119,6 +_,41 @@
                   }
                }
 
+               // CraftBukkit start
+               org.bukkit.craftbukkit.v1_20_R2.inventory.CraftItemStack item = org.bukkit.craftbukkit.v1_20_R2.inventory.CraftItemStack.asCraftMirror(itemstack);
+               org.bukkit.enchantments.EnchantmentOffer[] offers = new org.bukkit.enchantments.EnchantmentOffer[3];
+               for (int m = 0; m < 3; ++m) {
+                  org.bukkit.enchantments.Enchantment enchantment = (this.enchantClue[m] >= 0) ? org.bukkit.enchantments.Enchantment.getByKey(org.bukkit.craftbukkit.v1_20_R2.util.CraftNamespacedKey.fromMinecraft(BuiltInRegistries.ENCHANTMENT.getKey(BuiltInRegistries.ENCHANTMENT.byId(this.enchantClue[m])))) : null;
+                  offers[m] = (enchantment != null) ? new org.bukkit.enchantments.EnchantmentOffer(enchantment, this.levelClue[m], this.costs[m]) : null;
+               }
+
+               org.bukkit.event.enchantment.PrepareItemEnchantEvent event = new org.bukkit.event.enchantment.PrepareItemEnchantEvent(player, this.getBukkitView(), access.getLocation().getBlock(), item, offers, (int) j); //Ketting - convert float to int
+               event.setCancelled(!itemstack.isEnchantable());
+               p_39485_.getCraftServer().getPluginManager().callEvent(event);
+
+               if (event.isCancelled()) {
+                  for (int n = 0; n < 3; ++n) {
+                     this.costs[n] = 0;
+                     this.enchantClue[n] = -1;
+                     this.levelClue[n] = -1;
+                  }
+                  return;
+               }
+
+               for (int o = 0; o < 3; o++) {
+                  org.bukkit.enchantments.EnchantmentOffer offer = event.getOffers()[o];
+                  if (offer != null) {
+                     this.costs[o] = offer.getCost();
+                     this.enchantClue[o] = BuiltInRegistries.ENCHANTMENT.getId(BuiltInRegistries.ENCHANTMENT.get(org.bukkit.craftbukkit.v1_20_R2.util.CraftNamespacedKey.toMinecraft(offer.getEnchantment().getKey())));
+                     this.levelClue[o] = offer.getEnchantmentLevel();
+                  } else {
+                     this.costs[o] = 0;
+                     this.enchantClue[o] = -1;
+                     this.levelClue[o] = -1;
+                  }
+               }
+               // CraftBukkit end
+
                this.broadcastChanges();
             });
          } else {
@@ -145,8 +_,26 @@
             this.access.execute((p_296875_, p_296876_) -> {
                ItemStack itemstack2 = itemstack;
                List<EnchantmentInstance> list = this.getEnchantmentList(itemstack, p_39466_, this.costs[p_39466_]);
-               if (!list.isEmpty()) {
-                  p_39465_.onEnchantmentPerformed(itemstack, i);
+
+               // CraftBukkit start
+               if (true || !list.isEmpty()) {
+                  // p_39465_.onEnchantmentPerformed(itemstack, i); // Moved down
+                  java.util.Map<org.bukkit.enchantments.Enchantment, Integer> enchants = new java.util.HashMap<org.bukkit.enchantments.Enchantment, Integer>();
+                  for (EnchantmentInstance instance : list) {
+                     enchants.put(org.bukkit.enchantments.Enchantment.getByKey(org.bukkit.craftbukkit.v1_20_R2.util.CraftNamespacedKey.fromMinecraft(BuiltInRegistries.ENCHANTMENT.getKey(instance.enchantment))), instance.level);
+                  }
+                  org.bukkit.craftbukkit.v1_20_R2.inventory.CraftItemStack item = org.bukkit.craftbukkit.v1_20_R2.inventory.CraftItemStack.asCraftMirror(itemstack2);
+
+                  org.bukkit.enchantments.Enchantment hintedEnchantment = org.bukkit.enchantments.Enchantment.getByKey(org.bukkit.craftbukkit.v1_20_R2.util.CraftNamespacedKey.fromMinecraft(BuiltInRegistries.ENCHANTMENT.getKey(net.minecraft.world.item.enchantment.Enchantment.byId(enchantClue[i]))));
+                  int hintedEnchantmentLevel = levelClue[i];
+                  org.bukkit.event.enchantment.EnchantItemEvent event = new org.bukkit.event.enchantment.EnchantItemEvent((org.bukkit.entity.Player) p_39465_.getBukkitEntity(), this.getBukkitView(), access.getLocation().getBlock(), item, this.costs[i], enchants, hintedEnchantment, hintedEnchantmentLevel, i);
+                  p_296875_.getCraftServer().getPluginManager().callEvent(event);
+
+                  int level = event.getExpLevelCost();
+                  if (event.isCancelled() || (level > p_39465_.experienceLevel && !p_39465_.getAbilities().instabuild) || event.getEnchantsToAdd().isEmpty()) {
+                     return;
+                  }
+                  // CraftBukkit end
                   boolean flag = itemstack.is(Items.BOOK);
                   if (flag) {
                      itemstack2 = new ItemStack(Items.ENCHANTED_BOOK);
@@ -158,14 +_,30 @@
                      this.enchantSlots.setItem(0, itemstack2);
                   }
 
-                  for(EnchantmentInstance enchantmentinstance : list) {
-                     if (flag) {
-                        EnchantedBookItem.addEnchantment(itemstack2, enchantmentinstance);
-                     } else {
-                        itemstack2.enchant(enchantmentinstance.enchantment, enchantmentinstance.level);
+                  // CraftBukkit start
+                  for(java.util.Map.Entry<org.bukkit.enchantments.Enchantment, Integer> entry : event.getEnchantsToAdd().entrySet()) {
+                     try {
+                        if (flag) {
+                           org.bukkit.NamespacedKey enchantId = entry.getKey().getKey();
+                           net.minecraft.world.item.enchantment.Enchantment nms = BuiltInRegistries.ENCHANTMENT.get(org.bukkit.craftbukkit.v1_20_R2.util.CraftNamespacedKey.toMinecraft(enchantId));
+                           if (nms == null) {
+                              continue;
+                           }
+
+                           EnchantmentInstance enchantmentinstance = new EnchantmentInstance(nms, entry.getValue());
+                           EnchantedBookItem.addEnchantment(itemstack2, enchantmentinstance);
+                        } else {
+                           item.addUnsafeEnchantment(entry.getKey(), entry.getValue());
+                        }
+                     } catch (IllegalArgumentException e) {
+                        /* Just swallow invalid enchantments */
                      }
                   }
 
+                  p_39465_.onEnchantmentPerformed(itemstack, i);
+                  // CraftBukkit end
+
+                  // CraftBukkit - TODO: let plugins change this
                   if (!p_39465_.getAbilities().instabuild) {
                      itemstack1.shrink(i);
                      if (itemstack1.isEmpty()) {
@@ -220,6 +_,7 @@
    }
 
    public boolean stillValid(Player p_39463_) {
+      if (!this.checkReachable) return true; // CraftBukkit
       return stillValid(this.access, p_39463_, Blocks.ENCHANTING_TABLE);
    }
 
@@ -237,7 +_,7 @@
             if (!this.moveItemStackTo(itemstack1, 2, 38, true)) {
                return ItemStack.EMPTY;
             }
-         } else if (itemstack1.is(Items.LAPIS_LAZULI)) {
+         } else if (itemstack1.is(net.minecraftforge.common.Tags.Items.ENCHANTING_FUELS)) {
             if (!this.moveItemStackTo(itemstack1, 1, 2, true)) {
                return ItemStack.EMPTY;
             }
@@ -266,4 +_,17 @@
 
       return itemstack;
    }
+
+   // CraftBukkit start
+   @Override
+   public org.bukkit.craftbukkit.v1_20_R2.inventory.CraftInventoryView getBukkitView() {
+      if (bukkitEntity != null) {
+         return bukkitEntity;
+      }
+
+      org.bukkit.craftbukkit.v1_20_R2.inventory.CraftInventoryEnchanting inventory = new org.bukkit.craftbukkit.v1_20_R2.inventory.CraftInventoryEnchanting(this.enchantSlots);
+      bukkitEntity = new org.bukkit.craftbukkit.v1_20_R2.inventory.CraftInventoryView(this.player, inventory, this);
+      return bukkitEntity;
+   }
+   // CraftBukkit end
 }

--- a/net/minecraft/world/item/trading/MerchantOffer.java
+++ b/net/minecraft/world/item/trading/MerchantOffer.java
@@ -6,16 +_,32 @@
 import net.minecraft.world.item.ItemStack;
 
 public class MerchantOffer {
-   private final ItemStack baseCostA;
-   private final ItemStack costB;
-   private final ItemStack result;
-   private int uses;
-   private final int maxUses;
-   private boolean rewardExp = true;
-   private int specialPriceDiff;
-   private int demand;
-   private float priceMultiplier;
-   private int xp = 1;
+   public ItemStack baseCostA;
+   public ItemStack costB;
+   public final ItemStack result;
+   public int uses;
+   public int maxUses;
+   public boolean rewardExp = true;
+   public int specialPriceDiff;
+   public int demand;
+   public float priceMultiplier;
+   public int xp = 1;
+   // CraftBukkit start
+   private org.bukkit.craftbukkit.v1_20_R2.inventory.CraftMerchantRecipe bukkitHandle;
+
+   public org.bukkit.craftbukkit.v1_20_R2.inventory.CraftMerchantRecipe asBukkit() {
+      return (bukkitHandle == null) ? bukkitHandle = new org.bukkit.craftbukkit.v1_20_R2.inventory.CraftMerchantRecipe(this) : bukkitHandle;
+   }
+
+   public MerchantOffer(ItemStack itemstack, ItemStack itemstack1, ItemStack itemstack2, int uses, int maxUses, int experience, float priceMultiplier, org.bukkit.craftbukkit.v1_20_R2.inventory.CraftMerchantRecipe bukkit) {
+      this(itemstack, itemstack1, itemstack2, uses, maxUses, experience, priceMultiplier, 0, bukkit);
+   }
+
+   public MerchantOffer(ItemStack itemstack, ItemStack itemstack1, ItemStack itemstack2, int uses, int maxUses, int experience, float priceMultiplier, int demand, org.bukkit.craftbukkit.v1_20_R2.inventory.CraftMerchantRecipe bukkit) {
+      this(itemstack, itemstack1, itemstack2, uses, maxUses, experience, priceMultiplier, demand);
+      this.bukkitHandle = bukkit;
+   }
+   // CraftBukkit end
 
    public MerchantOffer(CompoundTag p_45351_) {
       this.baseCostA = ItemStack.of(p_45351_.getCompound("buy"));
@@ -89,8 +_,9 @@
          return ItemStack.EMPTY;
       } else {
          int i = this.baseCostA.getCount();
+         if (i <= 0) return ItemStack.EMPTY; // CraftBukkit - SPIGOT-5476
          int j = Math.max(0, Mth.floor((float)(i * this.demand) * this.priceMultiplier));
-         return this.baseCostA.copyWithCount(Mth.clamp(i + j + this.specialPriceDiff, 1, this.baseCostA.getItem().getMaxStackSize()));
+         return this.baseCostA.copyWithCount(Mth.clamp(i + j + this.specialPriceDiff, 1, this.baseCostA.getMaxStackSize()));
       }
    }
 
@@ -194,7 +_,7 @@
          return true;
       } else {
          ItemStack itemstack = p_45366_.copy();
-         if (itemstack.getItem().canBeDepleted()) {
+         if (itemstack.getItem().isDamageable(itemstack)) {
             itemstack.setDamageValue(itemstack.getDamageValue());
          }
 
@@ -206,7 +_,11 @@
       if (!this.satisfiedBy(p_45362_, p_45363_)) {
          return false;
       } else {
-         p_45362_.shrink(this.getCostA().getCount());
+         // CraftBukkit start
+         if (!this.getCostA().isEmpty()) {
+            p_45362_.shrink(this.getCostA().getCount());
+         }
+         // CraftBukkit end
          if (!this.getCostB().isEmpty()) {
             p_45363_.shrink(this.getCostB().getCount());
          }

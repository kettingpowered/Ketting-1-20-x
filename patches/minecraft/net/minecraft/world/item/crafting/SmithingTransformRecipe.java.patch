--- a/net/minecraft/world/item/crafting/SmithingTransformRecipe.java
+++ b/net/minecraft/world/item/crafting/SmithingTransformRecipe.java
@@ -58,8 +_,19 @@
    }
 
    public boolean isIncomplete() {
-      return Stream.of(this.template, this.base, this.addition).anyMatch(Ingredient::isEmpty);
-   }
+      return Stream.of(this.template, this.base, this.addition).anyMatch(net.minecraftforge.common.ForgeHooks::hasNoElements);
+   }
+
+   // CraftBukkit start
+   @Override
+   public org.bukkit.inventory.Recipe toBukkitRecipe(org.bukkit.NamespacedKey id) {
+      org.bukkit.craftbukkit.v1_20_R2.inventory.CraftItemStack result = org.bukkit.craftbukkit.v1_20_R2.inventory.CraftItemStack.asCraftMirror(this.result);
+
+      org.bukkit.craftbukkit.v1_20_R2.inventory.CraftSmithingTransformRecipe recipe = new org.bukkit.craftbukkit.v1_20_R2.inventory.CraftSmithingTransformRecipe(id, result, org.bukkit.craftbukkit.v1_20_R2.inventory.CraftRecipe.toBukkit(this.template), org.bukkit.craftbukkit.v1_20_R2.inventory.CraftRecipe.toBukkit(this.base), org.bukkit.craftbukkit.v1_20_R2.inventory.CraftRecipe.toBukkit(this.addition));
+
+      return recipe;
+   }
+   // CraftBukkit end
 
    public static class Serializer implements RecipeSerializer<SmithingTransformRecipe> {
       private static final Codec<SmithingTransformRecipe> CODEC = RecordCodecBuilder.create((p_301330_) -> {

--- a/net/minecraft/world/item/crafting/SmithingTrimRecipe.java
+++ b/net/minecraft/world/item/crafting/SmithingTrimRecipe.java
@@ -23,7 +_,7 @@
    final Ingredient base;
    final Ingredient addition;
 
-   SmithingTrimRecipe(Ingredient p_267298_, Ingredient p_266862_, Ingredient p_267050_) {
+   public SmithingTrimRecipe(Ingredient p_267298_, Ingredient p_266862_, Ingredient p_267050_) {
       this.template = p_267298_;
       this.base = p_266862_;
       this.addition = p_267050_;
@@ -87,8 +_,15 @@
    }
 
    public boolean isIncomplete() {
-      return Stream.of(this.template, this.base, this.addition).anyMatch(Ingredient::isEmpty);
-   }
+      return Stream.of(this.template, this.base, this.addition).anyMatch(net.minecraftforge.common.ForgeHooks::hasNoElements);
+   }
+
+   // CraftBukkit start
+   @Override
+   public org.bukkit.inventory.Recipe toBukkitRecipe(org.bukkit.NamespacedKey id) {
+      return new org.bukkit.craftbukkit.v1_20_R2.inventory.CraftSmithingTrimRecipe(id, org.bukkit.craftbukkit.v1_20_R2.inventory.CraftRecipe.toBukkit(this.template), org.bukkit.craftbukkit.v1_20_R2.inventory.CraftRecipe.toBukkit(this.base), org.bukkit.craftbukkit.v1_20_R2.inventory.CraftRecipe.toBukkit(this.addition));
+   }
+   // CraftBukkit end
 
    public static class Serializer implements RecipeSerializer<SmithingTrimRecipe> {
       private static final Codec<SmithingTrimRecipe> CODEC = RecordCodecBuilder.create((p_297394_) -> {

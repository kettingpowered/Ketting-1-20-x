--- a/net/minecraft/world/entity/LightningBolt.java
+++ b/net/minecraft/world/entity/LightningBolt.java
@@ -37,6 +_,8 @@
    private ServerPlayer cause;
    private final Set<Entity> hitEntities = Sets.newHashSet();
    private int blocksSetOnFire;
+   private float damage = 5.0F;
+   public boolean isSilent = false; // Spigot
 
    public LightningBolt(EntityType<? extends LightningBolt> p_20865_, Level p_20866_) {
       super(p_20865_, p_20866_);
@@ -72,9 +_,17 @@
 
    }
 
+   public void setDamage(float damage) {
+      this.damage = damage;
+   }
+
+   public float getDamage() {
+      return this.damage;
+   }
+
    public void tick() {
       super.tick();
-      if (this.life == 2) {
+      if (!isSilent && this.life == 2) { // Spigot
          if (this.level().isClientSide()) {
             this.level().playLocalSound(this.getX(), this.getY(), this.getZ(), SoundEvents.LIGHTNING_BOLT_THUNDER, SoundSource.WEATHER, 10000.0F, 0.8F + this.random.nextFloat() * 0.2F, false);
             this.level().playLocalSound(this.getX(), this.getY(), this.getZ(), SoundEvents.LIGHTNING_BOLT_IMPACT, SoundSource.WEATHER, 2.0F, 0.5F + this.random.nextFloat() * 0.2F, false);
@@ -114,13 +_,14 @@
          }
       }
 
-      if (this.life >= 0) {
+      if (this.life >= 0 && !this.visualOnly) { // CraftBukkit - add !this.visualOnly
          if (!(this.level() instanceof ServerLevel)) {
             this.level().setSkyFlashTime(2);
          } else if (!this.visualOnly) {
             List<Entity> list1 = this.level().getEntities(this, new AABB(this.getX() - 3.0D, this.getY() - 3.0D, this.getZ() - 3.0D, this.getX() + 3.0D, this.getY() + 6.0D + 3.0D, this.getZ() + 3.0D), Entity::isAlive);
 
             for(Entity entity : list1) {
+               if (!net.minecraftforge.event.ForgeEventFactory.onEntityStruckByLightning(entity, this))
                entity.thunderHit((ServerLevel)this.level(), this);
             }
 
@@ -142,17 +_,26 @@
       if (!this.visualOnly && !this.level().isClientSide && this.level().getGameRules().getBoolean(GameRules.RULE_DOFIRETICK)) {
          BlockPos blockpos = this.blockPosition();
          BlockState blockstate = BaseFireBlock.getState(this.level(), blockpos);
+
          if (this.level().getBlockState(blockpos).isAir() && blockstate.canSurvive(this.level(), blockpos)) {
-            this.level().setBlockAndUpdate(blockpos, blockstate);
-            ++this.blocksSetOnFire;
+            // CraftBukkit start - add "!visualOnly"
+            if (!visualOnly && !org.bukkit.craftbukkit.v1_20_R2.event.CraftEventFactory.callBlockIgniteEvent(this.level(), blockpos, this).isCancelled()) {
+               this.level().setBlockAndUpdate(blockpos, blockstate);
+               ++this.blocksSetOnFire;
+            }
+            // CraftBukkit end
          }
 
          for(int i = 0; i < p_20871_; ++i) {
             BlockPos blockpos1 = blockpos.offset(this.random.nextInt(3) - 1, this.random.nextInt(3) - 1, this.random.nextInt(3) - 1);
             blockstate = BaseFireBlock.getState(this.level(), blockpos1);
             if (this.level().getBlockState(blockpos1).isAir() && blockstate.canSurvive(this.level(), blockpos1)) {
-               this.level().setBlockAndUpdate(blockpos1, blockstate);
-               ++this.blocksSetOnFire;
+               // CraftBukkit start - add "!visualOnly"
+               if (!visualOnly && !org.bukkit.craftbukkit.v1_20_R2.event.CraftEventFactory.callBlockIgniteEvent(this.level(), blockpos1, this).isCancelled()) {
+                  this.level().setBlockAndUpdate(blockpos1, blockstate);
+                  ++this.blocksSetOnFire;
+               }
+               // CraftBukkit end
             }
          }
 

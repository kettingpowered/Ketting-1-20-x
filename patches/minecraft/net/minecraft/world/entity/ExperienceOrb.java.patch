--- a/net/minecraft/world/entity/ExperienceOrb.java
+++ b/net/minecraft/world/entity/ExperienceOrb.java
@@ -53,6 +_,7 @@
 
    public void tick() {
       super.tick();
+      Player prevTarget = this.followingPlayer;// CraftBukkit - store old target
       this.xo = this.getX();
       this.yo = this.getY();
       this.zo = this.getZ();
@@ -78,7 +_,22 @@
          this.followingPlayer = null;
       }
 
-      if (this.followingPlayer != null) {
+      // CraftBukkit start
+      boolean cancelled = false;
+      if (this.followingPlayer != prevTarget) {
+         org.bukkit.event.entity.EntityTargetLivingEntityEvent event = org.bukkit.craftbukkit.v1_20_R2.event.CraftEventFactory.callEntityTargetLivingEvent(this, followingPlayer, (followingPlayer != null) ? org.bukkit.event.entity.EntityTargetEvent.TargetReason.CLOSEST_PLAYER : org.bukkit.event.entity.EntityTargetEvent.TargetReason.FORGOT_TARGET);
+         LivingEntity target = (event.getTarget() == null) ? null : ((org.bukkit.craftbukkit.v1_20_R2.entity.CraftLivingEntity) event.getTarget()).getHandle();
+         cancelled = event.isCancelled();
+
+         if (cancelled) {
+            followingPlayer = prevTarget;
+         } else {
+            followingPlayer = (target instanceof Player) ? (Player) target : null;
+         }
+      }
+
+      if (this.followingPlayer != null && !cancelled) {
+         // CraftBukkit end
          Vec3 vec3 = new Vec3(this.followingPlayer.getX() - this.getX(), this.followingPlayer.getY() + (double)this.followingPlayer.getEyeHeight() / 2.0D - this.getY(), this.followingPlayer.getZ() - this.getZ());
          double d0 = vec3.lengthSqr();
          if (d0 < 64.0D) {
@@ -90,7 +_,8 @@
       this.move(MoverType.SELF, this.getDeltaMovement());
       float f = 0.98F;
       if (this.onGround()) {
-         f = this.level().getBlockState(this.getBlockPosBelowThatAffectsMyMovement()).getBlock().getFriction() * 0.98F;
+         BlockPos pos = getBlockPosBelowThatAffectsMyMovement();
+         f = this.level().getBlockState(pos).getFriction(this.level(), pos, this) * 0.98F;
       }
 
       this.setDeltaMovement(this.getDeltaMovement().multiply((double)f, 0.98D, (double)f));
@@ -172,6 +_,7 @@
    }
 
    public boolean hurt(DamageSource p_20785_, float p_20786_) {
+      if (this.level().isClientSide || this.isRemoved()) return false; //Forge: Fixes MC-53850
       if (this.isInvulnerableTo(p_20785_)) {
          return false;
       } else if (this.level().isClientSide) {
@@ -204,11 +_,13 @@
    public void playerTouch(Player p_20792_) {
       if (!this.level().isClientSide) {
          if (p_20792_.takeXpDelay == 0) {
+            if (net.minecraftforge.common.MinecraftForge.EVENT_BUS.post(new net.minecraftforge.event.entity.player.PlayerXpEvent.PickupXp(p_20792_, this))) return;
             p_20792_.takeXpDelay = 2;
             p_20792_.take(this, 1);
             int i = this.repairPlayerItems(p_20792_, this.value);
+
             if (i > 0) {
-               p_20792_.giveExperiencePoints(i);
+               p_20792_.giveExperiencePoints(org.bukkit.craftbukkit.v1_20_R2.event.CraftEventFactory.callPlayerExpChangeEvent(p_20792_, i).getAmount()); // CraftBukkit - this.value -> event.getAmount()
             }
 
             --this.count;
@@ -224,9 +_,19 @@
       Map.Entry<EquipmentSlot, ItemStack> entry = EnchantmentHelper.getRandomItemWith(Enchantments.MENDING, p_147093_, ItemStack::isDamaged);
       if (entry != null) {
          ItemStack itemstack = entry.getValue();
-         int i = Math.min(this.xpToDurability(this.value), itemstack.getDamageValue());
+         int i = Math.min((int) (this.value * itemstack.getXpRepairRatio()), itemstack.getDamageValue());
+         // CraftBukkit start
+         org.bukkit.event.player.PlayerItemMendEvent event = org.bukkit.craftbukkit.v1_20_R2.event.CraftEventFactory.callPlayerItemMendEvent(p_147093_, this, itemstack, entry.getKey(), i);
+         i = event.getRepairAmount();
+         if (event.isCancelled()) {
+            return p_147094_;
+         }
+         // CraftBukkit end
+
          itemstack.setDamageValue(itemstack.getDamageValue() - i);
          int j = p_147094_ - this.durabilityToXp(i);
+         this.value = j; // CraftBukkit - update exp value of orb for PlayerItemMendEvent calls
+
          return j > 0 ? this.repairPlayerItems(p_147093_, j) : 0;
       } else {
          return p_147094_;
@@ -270,6 +_,24 @@
    }
 
    public static int getExperienceValue(int p_20783_) {
+      // CraftBukkit start
+      if (p_20783_ > 162670129) return p_20783_ - 100000;
+      if (p_20783_ > 81335063) return 81335063;
+      if (p_20783_ > 40667527) return 40667527;
+      if (p_20783_ > 20333759) return 20333759;
+      if (p_20783_ > 10166857) return 10166857;
+      if (p_20783_ > 5083423) return 5083423;
+      if (p_20783_ > 2541701) return 2541701;
+      if (p_20783_ > 1270849) return 1270849;
+      if (p_20783_ > 635413) return 635413;
+      if (p_20783_ > 317701) return 317701;
+      if (p_20783_ > 158849) return 158849;
+      if (p_20783_ > 79423) return 79423;
+      if (p_20783_ > 39709) return 39709;
+      if (p_20783_ > 19853) return 19853;
+      if (p_20783_ > 9923) return 9923;
+      if (p_20783_ > 4957) return 4957;
+      // CraftBukkit end
       if (p_20783_ >= 2477) {
          return 2477;
       } else if (p_20783_ >= 1237) {

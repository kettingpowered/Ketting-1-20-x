--- a/net/minecraft/world/entity/monster/ZombieVillager.java
+++ b/net/minecraft/world/entity/monster/ZombieVillager.java
@@ -65,6 +_,7 @@
    @Nullable
    private CompoundTag tradeOffers;
    private int villagerXp;
+   private int lastTick = net.minecraft.server.MinecraftServer.currentTick; // CraftBukkit - add field
 
    public ZombieVillager(EntityType<? extends ZombieVillager> p_34368_, Level p_34369_) {
       super(p_34368_, p_34369_);
@@ -128,13 +_,18 @@
    public void tick() {
       if (!this.level().isClientSide && this.isAlive() && this.isConverting()) {
          int i = this.getConversionProgress();
+         // CraftBukkit start - Use wall time instead of ticks for villager conversion
+         int elapsedTicks = net.minecraft.server.MinecraftServer.currentTick - this.lastTick;
+         i *= elapsedTicks;
+         // CraftBukkit end
          this.villagerConversionTime -= i;
-         if (this.villagerConversionTime <= 0) {
+         if (this.villagerConversionTime <= 0 && net.minecraftforge.event.ForgeEventFactory.canLivingConvert(this, EntityType.VILLAGER, (timer) -> this.villagerConversionTime = timer)) {
             this.finishConversion((ServerLevel)this.level());
          }
       }
 
       super.tick();
+      this.lastTick = net.minecraft.server.MinecraftServer.currentTick; // CraftBukkit
    }
 
    public InteractionResult mobInteract(Player p_34394_, InteractionHand p_34395_) {
@@ -174,8 +_,10 @@
       this.conversionStarter = p_34384_;
       this.villagerConversionTime = p_34385_;
       this.getEntityData().set(DATA_CONVERTING_ID, true);
-      this.removeEffect(MobEffects.WEAKNESS);
-      this.addEffect(new MobEffectInstance(MobEffects.DAMAGE_BOOST, p_34385_, Math.min(this.level().getDifficulty().getId() - 1, 0)));
+      // CraftBukkit start
+      this.removeEffect(MobEffects.WEAKNESS, org.bukkit.event.entity.EntityPotionEffectEvent.Cause.CONVERSION);
+      this.addEffect(new MobEffectInstance(MobEffects.DAMAGE_BOOST, p_34385_, Math.min(this.level().getDifficulty().getId() - 1, 0)), org.bukkit.event.entity.EntityPotionEffectEvent.Cause.CONVERSION);
+      // CraftBukkit end
       this.level().broadcastEntityEvent(this, (byte)16);
    }
 
@@ -191,7 +_,13 @@
    }
 
    private void finishConversion(ServerLevel p_34399_) {
-      Villager villager = this.convertTo(EntityType.VILLAGER, false);
+      // CraftBukkit start
+      Villager villager = (Villager) this.convertTo(EntityType.VILLAGER, false, org.bukkit.event.entity.EntityTransformEvent.TransformReason.CURED, org.bukkit.event.entity.CreatureSpawnEvent.SpawnReason.CURED);
+      if (villager == null) {
+         ((org.bukkit.entity.ZombieVillager) getBukkitEntity()).setConversionTime(-1); // SPIGOT-5208: End conversion to stop event spam
+         return;
+      }
+      // CraftBukkit end
 
       for(EquipmentSlot equipmentslot : EquipmentSlot.values()) {
          ItemStack itemstack = this.getItemBySlot(equipmentslot);
@@ -201,7 +_,9 @@
             } else {
                double d0 = (double)this.getEquipmentDropChance(equipmentslot);
                if (d0 > 1.0D) {
+                  this.forceDrops = true; // CraftBukkit
                   this.spawnAtLocation(itemstack);
+                  this.forceDrops = false; // CraftBukkit
                }
             }
          }
@@ -227,11 +_,11 @@
          }
       }
 
-      villager.addEffect(new MobEffectInstance(MobEffects.CONFUSION, 200, 0));
+      villager.addEffect(new MobEffectInstance(MobEffects.CONFUSION, 200, 0), org.bukkit.event.entity.EntityPotionEffectEvent.Cause.CONVERSION); // CraftBukkit
       if (!this.isSilent()) {
          p_34399_.levelEvent((Player)null, 1027, this.blockPosition(), 0);
       }
-
+      net.minecraftforge.event.ForgeEventFactory.onLivingConvert(this, villager);
    }
 
    private int getConversionProgress() {

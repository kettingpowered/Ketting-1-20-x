--- a/net/minecraft/world/entity/monster/Slime.java
+++ b/net/minecraft/world/entity/monster/Slime.java
@@ -1,6 +_,7 @@
 package net.minecraft.world.entity.monster;
 
 import com.google.common.annotations.VisibleForTesting;
+
 import java.util.EnumSet;
 import javax.annotation.Nullable;
 import net.minecraft.core.BlockPos;
@@ -130,6 +_,8 @@
       if (this.onGround() && !this.wasOnGround) {
          int i = this.getSize();
 
+         // Forge: Don't spawn particles if it's handled by the implementation itself
+         if (!spawnCustomParticles())
          for(int j = 0; j < i * 8; ++j) {
             float f = this.random.nextFloat() * ((float)Math.PI * 2F);
             float f1 = this.random.nextFloat() * 0.5F + 0.5F;
@@ -190,6 +_,19 @@
          int j = i / 2;
          int k = 2 + this.random.nextInt(3);
 
+         // CraftBukkit start
+         org.bukkit.event.entity.SlimeSplitEvent event = new org.bukkit.event.entity.SlimeSplitEvent((org.bukkit.entity.Slime) this.getBukkitEntity(), k);
+         this.level().getCraftServer().getPluginManager().callEvent(event);
+
+         if (!event.isCancelled() && event.getCount() > 0) {
+            k = event.getCount();
+         } else {
+            super.remove(p_149847_);
+            return;
+         }
+         java.util.List<LivingEntity> slimes = new java.util.ArrayList<>(j);
+         // CraftBukkit end
+
          for(int l = 0; l < k; ++l) {
             float f1 = ((float)(l % 2) - 0.5F) * f;
             float f2 = ((float)(l / 2) - 0.5F) * f;
@@ -204,9 +_,19 @@
                slime.setInvulnerable(this.isInvulnerable());
                slime.setSize(j, true);
                slime.moveTo(this.getX() + (double)f1, this.getY() + 0.5D, this.getZ() + (double)f2, this.random.nextFloat() * 360.0F, 0.0F);
-               this.level().addFreshEntity(slime);
+               slimes.add(slime); // CraftBukkit
             }
          }
+
+         // CraftBukkit start
+         if (org.bukkit.craftbukkit.v1_20_R2.event.CraftEventFactory.callEntityTransformEvent(this, slimes, org.bukkit.event.entity.EntityTransformEvent.TransformReason.SPLIT).isCancelled()) {
+            super.remove(p_149847_);
+            return;
+         }
+         for (LivingEntity living : slimes) {
+            this.level().addFreshEntity(living, org.bukkit.event.entity.CreatureSpawnEvent.SpawnReason.SLIME_SPLIT); // CraftBukkit - SpawnReason
+         }
+         // CraftBukkit end
       }
 
       super.remove(p_149847_);
@@ -277,7 +_,7 @@
          }
 
          ChunkPos chunkpos = new ChunkPos(p_219116_);
-         boolean flag = WorldgenRandom.seedSlimeChunk(chunkpos.x, chunkpos.z, ((WorldGenLevel)p_219114_).getSeed(), 987234911L).nextInt(10) == 0;
+         boolean flag = WorldgenRandom.seedSlimeChunk(chunkpos.x, chunkpos.z, ((WorldGenLevel)p_219114_).getSeed(), p_219114_.getMinecraftWorld().spigotConfig.slimeSeed).nextInt(10) == 0; // Spigot
          if (p_219117_.nextInt(10) == 0 && flag && p_219116_.getY() < 40) {
             return checkMobSpawnRules(p_219113_, p_219114_, p_219115_, p_219116_, p_219117_);
          }
@@ -329,6 +_,12 @@
    public EntityDimensions getDimensions(Pose p_33597_) {
       return super.getDimensions(p_33597_).scale(0.255F * (float)this.getSize());
    }
+
+   /**
+    * Called when the slime spawns particles on landing, see onUpdate.
+    * Return true to prevent the spawning of the default particles.
+    */
+   protected boolean spawnCustomParticles() { return false; }
 
    static class SlimeAttackGoal extends Goal {
       private final Slime slime;

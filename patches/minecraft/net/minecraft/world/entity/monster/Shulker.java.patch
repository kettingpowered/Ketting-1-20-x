--- a/net/minecraft/world/entity/monster/Shulker.java
+++ b/net/minecraft/world/entity/monster/Shulker.java
@@ -62,7 +_,7 @@
    private static final AttributeModifier COVERED_ARMOR_MODIFIER = new AttributeModifier(COVERED_ARMOR_MODIFIER_UUID, "Covered armor bonus", 20.0D, AttributeModifier.Operation.ADDITION);
    protected static final EntityDataAccessor<Direction> DATA_ATTACH_FACE_ID = SynchedEntityData.defineId(Shulker.class, EntityDataSerializers.DIRECTION);
    protected static final EntityDataAccessor<Byte> DATA_PEEK_ID = SynchedEntityData.defineId(Shulker.class, EntityDataSerializers.BYTE);
-   protected static final EntityDataAccessor<Byte> DATA_COLOR_ID = SynchedEntityData.defineId(Shulker.class, EntityDataSerializers.BYTE);
+   public static final EntityDataAccessor<Byte> DATA_COLOR_ID = SynchedEntityData.defineId(Shulker.class, EntityDataSerializers.BYTE);
    private static final int TELEPORT_STEPS = 6;
    private static final byte NO_COLOR = 16;
    private static final byte DEFAULT_COLOR = 16;
@@ -354,6 +_,20 @@
             if (blockpos1.getY() > this.level().getMinBuildHeight() && this.level().isEmptyBlock(blockpos1) && this.level().getWorldBorder().isWithinBounds(blockpos1) && this.level().noCollision(this, (new AABB(blockpos1)).deflate(1.0E-6D))) {
                Direction direction = this.findAttachableSurface(blockpos1);
                if (direction != null) {
+                  net.minecraftforge.event.entity.EntityTeleportEvent.EnderEntity event = net.minecraftforge.event.ForgeEventFactory.onEnderTeleport(this, blockpos1.getX(), blockpos1.getY(), blockpos1.getZ());
+                  if (event.isCanceled()) direction = null;
+                  blockpos1 = BlockPos.containing(event.getTargetX(), event.getTargetY(), event.getTargetZ());
+               }
+
+               if (direction != null) {
+                  // CraftBukkit start
+                  org.bukkit.event.entity.EntityTeleportEvent teleportEvent = org.bukkit.craftbukkit.v1_20_R2.event.CraftEventFactory.callEntityTeleportEvent(this, blockpos1.getX(), blockpos1.getY(), blockpos1.getZ());
+                  if (teleportEvent.isCancelled()) {
+                     return false;
+                  } else {
+                     blockpos1 = org.bukkit.craftbukkit.v1_20_R2.util.CraftLocation.toBlockPosition(teleportEvent.getTo());
+                  }
+                  // CraftBukkit end
                   this.unRide();
                   this.setAttachFace(direction);
                   this.playSound(SoundEvents.SHULKER_TELEPORT, 1.0F, 1.0F);
@@ -417,7 +_,7 @@
             if (shulker != null) {
                shulker.setVariant(this.getVariant());
                shulker.moveTo(vec3);
-               this.level().addFreshEntity(shulker);
+               this.level().addFreshEntity(shulker, org.bukkit.event.entity.CreatureSpawnEvent.SpawnReason.BREEDING); // CraftBukkit - the mysteries of life
             }
 
          }
@@ -432,7 +_,7 @@
       return this.entityData.get(DATA_ATTACH_FACE_ID);
    }
 
-   private void setAttachFace(Direction p_149789_) {
+   public void setAttachFace(Direction p_149789_) {
       this.entityData.set(DATA_ATTACH_FACE_ID, p_149789_);
    }
 
@@ -444,11 +_,11 @@
       super.onSyncedDataUpdated(p_33434_);
    }
 
-   private int getRawPeekAmount() {
+   public int getRawPeekAmount() {
       return this.entityData.get(DATA_PEEK_ID);
    }
 
-   void setRawPeekAmount(int p_33419_) {
+   public void setRawPeekAmount(int p_33419_) {
       if (!this.level().isClientSide) {
          this.getAttribute(Attributes.ARMOR).removeModifier(COVERED_ARMOR_MODIFIER.getId());
          if (p_33419_ == 0) {

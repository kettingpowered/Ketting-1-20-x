--- a/net/minecraft/world/entity/monster/EnderMan.java
+++ b/net/minecraft/world/entity/monster/EnderMan.java
@@ -68,6 +_,6 @@
 import net.minecraft.world.phys.AABB;
 import net.minecraft.world.phys.BlockHitResult;
 import net.minecraft.world.phys.Vec3;
 import org.joml.Vector3f;
 
 public class EnderMan extends Monster implements NeutralMob {
@@ -110,8 +_,20 @@
       return Monster.createMonsterAttributes().add(Attributes.MAX_HEALTH, 40.0D).add(Attributes.MOVEMENT_SPEED, (double)0.3F).add(Attributes.ATTACK_DAMAGE, 7.0D).add(Attributes.FOLLOW_RANGE, 64.0D);
    }
 
+   @Override
    public void setTarget(@Nullable LivingEntity p_32537_) {
-      super.setTarget(p_32537_);
+      // CraftBukkit start - fire event
+      setTarget(p_32537_, org.bukkit.event.entity.EntityTargetEvent.TargetReason.UNKNOWN, true);
+   }
+
+   @Override
+   public boolean setTarget(LivingEntity p_32537_, org.bukkit.event.entity.EntityTargetEvent.TargetReason reason, boolean fireEvent) {
+      if (!super.setTarget(p_32537_, reason, fireEvent)) {
+         return false;
+      }
+      p_32537_ = getTarget();
+      // CraftBukkit end
+
       AttributeInstance attributeinstance = this.getAttribute(Attributes.MOVEMENT_SPEED);
       if (p_32537_ == null) {
          this.targetChangeTime = 0;
@@ -126,6 +_,7 @@
          }
       }
 
+      return true;
    }
 
    protected void defineSynchedData() {
@@ -200,7 +_,7 @@
 
    boolean isLookingAtMe(Player p_32535_) {
       ItemStack itemstack = p_32535_.getInventory().armor.get(3);
-      if (itemstack.is(Blocks.CARVED_PUMPKIN.asItem())) {
+      if (net.minecraftforge.common.ForgeHooks.shouldSuppressEnderManAnger(this, p_32535_, itemstack)) {
          return false;
       } else {
          Vec3 vec3 = p_32535_.getViewVector(1.0F).normalize();
@@ -251,7 +_,7 @@
       super.customServerAiStep();
    }
 
-   protected boolean teleport() {
+   public boolean teleport() {
       if (!this.level().isClientSide() && this.isAlive()) {
          double d0 = this.getX() + (this.random.nextDouble() - 0.5D) * 64.0D;
          double d1 = this.getY() + (double)(this.random.nextInt(64) - 32);
@@ -262,7 +_,7 @@
       }
    }
 
-   boolean teleportTowards(Entity p_32501_) {
+   public boolean teleportTowards(Entity p_32501_) {
       Vec3 vec3 = new Vec3(this.getX() - p_32501_.getX(), this.getY(0.5D) - p_32501_.getEyeY(), this.getZ() - p_32501_.getZ());
       vec3 = vec3.normalize();
       double d0 = 16.0D;
@@ -283,8 +_,10 @@
       boolean flag = blockstate.blocksMotion();
       boolean flag1 = blockstate.getFluidState().is(FluidTags.WATER);
       if (flag && !flag1) {
+         net.minecraftforge.event.entity.EntityTeleportEvent.EnderEntity event = net.minecraftforge.event.ForgeEventFactory.onEnderTeleport(this, p_32544_, p_32545_, p_32546_);
+         if (event.isCanceled()) return false;
          Vec3 vec3 = this.position();
-         boolean flag2 = this.randomTeleport(p_32544_, p_32545_, p_32546_, true);
+         boolean flag2 = this.randomTeleport(event.getTargetX(), event.getTargetY(), event.getTargetZ(), true);
          if (flag2) {
             this.level().gameEvent(GameEvent.TELEPORT, vec3, GameEvent.Context.of(this));
             if (!this.isSilent()) {
@@ -424,7 +_,7 @@
       public boolean canUse() {
          if (this.enderman.getCarriedBlock() == null) {
             return false;
-         } else if (!this.enderman.level().getGameRules().getBoolean(GameRules.RULE_MOBGRIEFING)) {
+         } else if (!net.minecraftforge.event.ForgeEventFactory.getMobGriefingEvent(this.enderman.level(), this.enderman)) {
             return false;
          } else {
             return this.enderman.getRandom().nextInt(reducedTickDelay(2000)) == 0;
@@ -444,17 +_,19 @@
          BlockState blockstate2 = this.enderman.getCarriedBlock();
          if (blockstate2 != null) {
             blockstate2 = Block.updateFromNeighbourShapes(blockstate2, this.enderman.level(), blockpos);
-            if (this.canPlaceBlock(level, blockpos, blockstate2, blockstate, blockstate1, blockpos1)) {
-               level.setBlock(blockpos, blockstate2, 3);
-               level.gameEvent(GameEvent.BLOCK_PLACE, blockpos, GameEvent.Context.of(this.enderman, blockstate2));
-               this.enderman.setCarriedBlock((BlockState)null);
+            if (this.canPlaceBlock(level, blockpos, blockstate2, blockstate, blockstate1, blockpos1) && !net.minecraftforge.event.ForgeEventFactory.onBlockPlace(enderman, net.minecraftforge.common.util.BlockSnapshot.create(level.dimension(), level, blockpos1), net.minecraft.core.Direction.UP)) {
+               if (org.bukkit.craftbukkit.v1_20_R2.event.CraftEventFactory.callEntityChangeBlockEvent(this.enderman, blockpos, blockstate2)) { // CraftBukkit - Place event
+                  level.setBlock(blockpos, blockstate2, 3);
+                  level.gameEvent(GameEvent.BLOCK_PLACE, blockpos, GameEvent.Context.of(this.enderman, blockstate2));
+                  this.enderman.setCarriedBlock((BlockState) null);
+               } // CraftBukkit
             }
 
          }
       }
 
       private boolean canPlaceBlock(Level p_32559_, BlockPos p_32560_, BlockState p_32561_, BlockState p_32562_, BlockState p_32563_, BlockPos p_32564_) {
-         return p_32562_.isAir() && !p_32563_.isAir() && !p_32563_.is(Blocks.BEDROCK) && p_32563_.isCollisionShapeFullBlock(p_32559_, p_32564_) && p_32561_.canSurvive(p_32559_, p_32560_) && p_32559_.getEntities(this.enderman, AABB.unitCubeFromLowerCorner(Vec3.atLowerCornerOf(p_32560_))).isEmpty();
+         return p_32562_.isAir() && !p_32563_.isAir() && !p_32563_.is(Blocks.BEDROCK) && !p_32563_.is(net.minecraftforge.common.Tags.Blocks.ENDERMAN_PLACE_ON_BLACKLIST) && p_32563_.isCollisionShapeFullBlock(p_32559_, p_32564_) && p_32561_.canSurvive(p_32559_, p_32560_) && p_32559_.getEntities(this.enderman, AABB.unitCubeFromLowerCorner(Vec3.atLowerCornerOf(p_32560_))).isEmpty();
       }
    }
 
@@ -556,7 +_,7 @@
       public boolean canUse() {
          if (this.enderman.getCarriedBlock() != null) {
             return false;
-         } else if (!this.enderman.level().getGameRules().getBoolean(GameRules.RULE_MOBGRIEFING)) {
+         } else if (!net.minecraftforge.event.ForgeEventFactory.getMobGriefingEvent(this.enderman.level(), this.enderman)) {
             return false;
          } else {
             return this.enderman.getRandom().nextInt(reducedTickDelay(20)) == 0;
@@ -576,9 +_,11 @@
          BlockHitResult blockhitresult = level.clip(new ClipContext(vec3, vec31, ClipContext.Block.OUTLINE, ClipContext.Fluid.NONE, this.enderman));
          boolean flag = blockhitresult.getBlockPos().equals(blockpos);
          if (blockstate.is(BlockTags.ENDERMAN_HOLDABLE) && flag) {
-            level.removeBlock(blockpos, false);
-            level.gameEvent(GameEvent.BLOCK_DESTROY, blockpos, GameEvent.Context.of(this.enderman, blockstate));
-            this.enderman.setCarriedBlock(blockstate.getBlock().defaultBlockState());
+            if (org.bukkit.craftbukkit.v1_20_R2.event.CraftEventFactory.callEntityChangeBlockEvent(this.enderman, blockpos, Blocks.AIR.defaultBlockState())) { // CraftBukkit - Place event
+               level.removeBlock(blockpos, false);
+               level.gameEvent(GameEvent.BLOCK_DESTROY, blockpos, GameEvent.Context.of(this.enderman, blockstate));
+               this.enderman.setCarriedBlock(blockstate.getBlock().defaultBlockState());
+            } // CraftBukkit
          }
 
       }

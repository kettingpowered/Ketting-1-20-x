--- a/net/minecraft/world/entity/decoration/HangingEntity.java
+++ b/net/minecraft/world/entity/decoration/HangingEntity.java
@@ -32,7 +_,7 @@
       return p_31734_ instanceof HangingEntity;
    };
    private int checkInterval;
-   protected BlockPos pos;
+   public BlockPos pos;
    protected Direction direction = Direction.SOUTH;
 
    protected HangingEntity(EntityType<? extends HangingEntity> p_31703_, Level p_31704_) {
@@ -47,7 +_,7 @@
    protected void defineSynchedData() {
    }
 
-   protected void setDirection(Direction p_31728_) {
+   public void setDirection(Direction p_31728_) {
       Validate.notNull(p_31728_);
       Validate.isTrue(p_31728_.getAxis().isHorizontal());
       this.direction = p_31728_;
@@ -58,36 +_,47 @@
 
    protected void recalculateBoundingBox() {
       if (this.direction != null) {
-         double d0 = (double)this.pos.getX() + 0.5D;
-         double d1 = (double)this.pos.getY() + 0.5D;
-         double d2 = (double)this.pos.getZ() + 0.5D;
-         double d3 = 0.46875D;
-         double d4 = this.offs(this.getWidth());
-         double d5 = this.offs(this.getHeight());
-         d0 -= (double)this.direction.getStepX() * 0.46875D;
-         d2 -= (double)this.direction.getStepZ() * 0.46875D;
-         d1 += d5;
-         Direction direction = this.direction.getCounterClockWise();
-         d0 += d4 * (double)direction.getStepX();
-         d2 += d4 * (double)direction.getStepZ();
-         this.setPosRaw(d0, d1, d2);
-         double d6 = (double)this.getWidth();
-         double d7 = (double)this.getHeight();
-         double d8 = (double)this.getWidth();
-         if (this.direction.getAxis() == Direction.Axis.Z) {
-            d8 = 1.0D;
-         } else {
-            d6 = 1.0D;
-         }
-
-         d6 /= 32.0D;
-         d7 /= 32.0D;
-         d8 /= 32.0D;
-         this.setBoundingBox(new AABB(d0 - d6, d1 - d7, d2 - d8, d0 + d6, d1 + d7, d2 + d8));
-      }
-   }
-
-   private double offs(int p_31710_) {
+         // CraftBukkit start code moved in to calculateBoundingBox
+         this.setBoundingBox(calculateBoundingBox(this, this.pos, this.direction, this.getWidth(), this.getHeight()));
+         // CraftBukkit end
+      }
+   }
+
+   // CraftBukkit start - break out BB calc into own method
+   public static AABB calculateBoundingBox(@Nullable Entity entity, BlockPos blockPosition, Direction direction, int width, int height) {
+
+      double d0 = (double) blockPosition.getX() + 0.5D;
+      double d1 = (double) blockPosition.getY() + 0.5D;
+      double d2 = (double) blockPosition.getZ() + 0.5D;
+      double d3 = 0.46875D;
+      double d4 = offs(width);
+      double d5 = offs(height);
+      d0 -= (double) direction.getStepX() * 0.46875D;
+      d2 -= (double) direction.getStepZ() * 0.46875D;
+      d1 += d5;
+      Direction direction1 = direction.getCounterClockWise();
+      d0 += d4 * (double) direction.getStepX();
+      d2 += d4 * (double) direction.getStepZ();
+      if (entity != null) {
+         entity.setPosRaw(d0, d1, d2);
+      }
+      double d6 = (double) width;
+      double d7 = (double) height;
+      double d8 = (double) width;
+      if (direction.getAxis() == Direction.Axis.Z) {
+         d8 = 1.0D;
+      } else {
+         d6 = 1.0D;
+      }
+
+      d6 /= 32.0D;
+      d7 /= 32.0D;
+      d8 /= 32.0D;
+      return new AABB(d0 - d6, d1 - d7, d2 - d8, d0 + d6, d1 + d7, d2 + d8);
+   }
+   // CraftBukkit end
+
+   private static double offs(int p_31710_) { // CraftBukkit - static
       return p_31710_ % 32 == 0 ? 0.5D : 0.0D;
    }
 
@@ -97,6 +_,24 @@
          if (this.checkInterval++ == 100) {
             this.checkInterval = 0;
             if (!this.isRemoved() && !this.survives()) {
+               // CraftBukkit start - fire break events
+               BlockState material = this.level().getBlockState(this.blockPosition());
+               org.bukkit.event.hanging.HangingBreakEvent.RemoveCause cause;
+
+               if (!material.isAir()) {
+                  // TODO: This feels insufficient to catch 100% of suffocation cases
+                  cause = org.bukkit.event.hanging.HangingBreakEvent.RemoveCause.OBSTRUCTION;
+               } else {
+                  cause = org.bukkit.event.hanging.HangingBreakEvent.RemoveCause.PHYSICS;
+               }
+
+               org.bukkit.event.hanging.HangingBreakEvent event = new org.bukkit.event.hanging.HangingBreakEvent((org.bukkit.entity.Hanging) this.getBukkitEntity(), cause);
+               this.level().getCraftServer().getPluginManager().callEvent(event);
+
+               if (this.isRemoved() || event.isCancelled()) {
+                  return;
+               }
+               // CraftBukkit end
                this.discard();
                this.dropItem((Entity)null);
             }
@@ -121,6 +_,8 @@
                int j1 = (j - 1) / -2;
                blockpos$mutableblockpos.set(blockpos).move(direction, k + i1).move(Direction.UP, l + j1);
                BlockState blockstate = this.level().getBlockState(blockpos$mutableblockpos);
+               if (net.minecraft.world.level.block.Block.canSupportCenter(this.level(), blockpos$mutableblockpos, this.direction))
+                  continue;
                if (!blockstate.isSolid() && !DiodeBlock.isDiode(blockstate)) {
                   return false;
                }
@@ -152,6 +_,22 @@
          return false;
       } else {
          if (!this.isRemoved() && !this.level().isClientSide) {
+            // CraftBukkit start - fire break events
+            Entity damager = (p_31715_.isIndirect()) ? p_31715_.getEntity() : p_31715_.getDirectEntity();
+            org.bukkit.event.hanging.HangingBreakEvent event;
+            if (damager != null) {
+               event = new org.bukkit.event.hanging.HangingBreakByEntityEvent((org.bukkit.entity.Hanging) this.getBukkitEntity(), damager.getBukkitEntity(), p_31715_.is(net.minecraft.tags.DamageTypeTags.IS_EXPLOSION) ? org.bukkit.event.hanging.HangingBreakEvent.RemoveCause.EXPLOSION : org.bukkit.event.hanging.HangingBreakEvent.RemoveCause.ENTITY);
+            } else {
+               event = new org.bukkit.event.hanging.HangingBreakEvent((org.bukkit.entity.Hanging) this.getBukkitEntity(), p_31715_.is(net.minecraft.tags.DamageTypeTags.IS_EXPLOSION) ? org.bukkit.event.hanging.HangingBreakEvent.RemoveCause.EXPLOSION : org.bukkit.event.hanging.HangingBreakEvent.RemoveCause.DEFAULT);
+            }
+
+            this.level().getCraftServer().getPluginManager().callEvent(event);
+
+            if (this.isRemoved() || event.isCancelled()) {
+               return true;
+            }
+            // CraftBukkit end
+
             this.kill();
             this.markHurt();
             this.dropItem(p_31715_.getEntity());
@@ -163,6 +_,17 @@
 
    public void move(MoverType p_31719_, Vec3 p_31720_) {
       if (!this.level().isClientSide && !this.isRemoved() && p_31720_.lengthSqr() > 0.0D) {
+         if (this.isRemoved()) return; // CraftBukkit
+
+         // CraftBukkit start - fire break events
+         // TODO - Does this need its own cause? Seems to only be triggered by pistons
+         org.bukkit.event.hanging.HangingBreakEvent event = new org.bukkit.event.hanging.HangingBreakEvent((org.bukkit.entity.Hanging) this.getBukkitEntity(), org.bukkit.event.hanging.HangingBreakEvent.RemoveCause.PHYSICS);
+         this.level().getCraftServer().getPluginManager().callEvent(event);
+
+         if (this.isRemoved() || event.isCancelled()) {
+            return;
+         }
+         // CraftBukkit end
          this.kill();
          this.dropItem((Entity)null);
       }
@@ -170,7 +_,7 @@
    }
 
    public void push(double p_31744_, double p_31745_, double p_31746_) {
-      if (!this.level().isClientSide && !this.isRemoved() && p_31744_ * p_31744_ + p_31745_ * p_31745_ + p_31746_ * p_31746_ > 0.0D) {
+      if (false && !this.level().isClientSide && !this.isRemoved() && p_31744_ * p_31744_ + p_31745_ * p_31745_ + p_31746_ * p_31746_ > 0.0D) { // CraftBukkit - not needed
          this.kill();
          this.dropItem((Entity)null);
       }

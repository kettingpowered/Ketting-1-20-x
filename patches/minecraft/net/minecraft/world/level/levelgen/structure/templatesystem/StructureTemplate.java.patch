--- a/net/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplate.java
+++ b/net/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplate.java
@@ -64,11 +_,16 @@
    public static final String ENTITY_TAG_BLOCKPOS = "blockPos";
    public static final String ENTITY_TAG_NBT = "nbt";
    public static final String SIZE_TAG = "size";
-   private final List<StructureTemplate.Palette> palettes = Lists.newArrayList();
-   private final List<StructureTemplate.StructureEntityInfo> entityInfoList = Lists.newArrayList();
+   public final List<StructureTemplate.Palette> palettes = Lists.newArrayList();
+   public final List<StructureTemplate.StructureEntityInfo> entityInfoList = Lists.newArrayList();
    private Vec3i size = Vec3i.ZERO;
    private String author = "?";
 
+   // CraftBukkit start - data containers
+   private static final org.bukkit.craftbukkit.v1_20_R2.persistence.CraftPersistentDataTypeRegistry DATA_TYPE_REGISTRY = new org.bukkit.craftbukkit.v1_20_R2.persistence.CraftPersistentDataTypeRegistry();
+   public org.bukkit.craftbukkit.v1_20_R2.persistence.CraftPersistentDataContainer persistentDataContainer = new org.bukkit.craftbukkit.v1_20_R2.persistence.CraftPersistentDataContainer(DATA_TYPE_REGISTRY);
+   // CraftBukkit end
+
    public Vec3i getSize() {
       return this.size;
    }
@@ -201,10 +_,27 @@
       return transform(p_74565_, p_74564_.getMirror(), p_74564_.getRotation(), p_74564_.getRotationPivot());
    }
 
+   public static Vec3 transformedVec3d(StructurePlaceSettings placementIn, Vec3 pos) {
+      return transform(pos, placementIn.getMirror(), placementIn.getRotation(), placementIn.getRotationPivot());
+   }
+
    public boolean placeInWorld(ServerLevelAccessor p_230329_, BlockPos p_230330_, BlockPos p_230331_, StructurePlaceSettings p_230332_, RandomSource p_230333_, int p_230334_) {
       if (this.palettes.isEmpty()) {
          return false;
       } else {
+         // CraftBukkit start
+         // We only want the TransformerGeneratorAccess at certain locations because in here are many "block update" calls that shouldn't be transformed
+         ServerLevelAccessor wrappedAccess = p_230329_;
+         org.bukkit.craftbukkit.v1_20_R2.util.CraftStructureTransformer structureTransformer = null;
+         if (wrappedAccess instanceof org.bukkit.craftbukkit.v1_20_R2.util.TransformerGeneratorAccess transformerAccess) {
+            p_230329_ = transformerAccess.getHandle();
+            structureTransformer = transformerAccess.getStructureTransformer();
+            // The structureTransformer is not needed if we can not transform blocks therefore we can save a little bit of performance doing this
+            if (structureTransformer != null && !structureTransformer.canTransformBlocks()) {
+               structureTransformer = null;
+            }
+         }
+         // CraftBukkit end
          List<StructureTemplate.StructureBlockInfo> list = p_230332_.getRandomPalette(this.palettes, p_230330_).blocks();
          if ((!list.isEmpty() || !p_230332_.isIgnoreEntities() && !this.entityInfoList.isEmpty()) && this.size.getX() >= 1 && this.size.getY() >= 1 && this.size.getZ() >= 1) {
             BoundingBox boundingbox = p_230332_.getBoundingBox();
@@ -218,7 +_,7 @@
             int i1 = Integer.MIN_VALUE;
             int j1 = Integer.MIN_VALUE;
 
-            for(StructureTemplate.StructureBlockInfo structuretemplate$structureblockinfo : processBlockInfos(p_230329_, p_230330_, p_230331_, p_230332_, list)) {
+            for(StructureTemplate.StructureBlockInfo structuretemplate$structureblockinfo : processBlockInfos(p_230329_, p_230330_, p_230331_, p_230332_, list, this)) {
                BlockPos blockpos = structuretemplate$structureblockinfo.pos;
                if (boundingbox == null || boundingbox.isInside(blockpos)) {
                   FluidState fluidstate = p_230332_.shouldKeepLiquids() ? p_230329_.getFluidState(blockpos) : null;
@@ -228,6 +_,20 @@
                      Clearable.tryClear(blockentity);
                      p_230329_.setBlock(blockpos, Blocks.BARRIER.defaultBlockState(), 20);
                   }
+                  // CraftBukkit start
+                  if (structureTransformer != null) {
+                     org.bukkit.craftbukkit.v1_20_R2.block.CraftBlockState craftBlockState = (org.bukkit.craftbukkit.v1_20_R2.block.CraftBlockState) org.bukkit.craftbukkit.v1_20_R2.block.CraftBlockStates.getBlockState(blockpos, blockstate, null);
+                     if (structuretemplate$structureblockinfo.nbt != null && craftBlockState instanceof org.bukkit.craftbukkit.v1_20_R2.block.CraftBlockEntityState<?> entityState) {
+                        entityState.loadData(structuretemplate$structureblockinfo.nbt);
+                        if (craftBlockState instanceof org.bukkit.craftbukkit.v1_20_R2.block.CraftLootable<?> craftLootable) {
+                           craftLootable.setSeed(p_230333_.nextLong());
+                        }
+                     }
+                     craftBlockState = structureTransformer.transformCraftState(craftBlockState);
+                     blockstate = craftBlockState.getHandle();
+                     structuretemplate$structureblockinfo = new StructureTemplate.StructureBlockInfo(blockpos, blockstate, (craftBlockState instanceof org.bukkit.craftbukkit.v1_20_R2.block.CraftBlockEntityState<?> craftBlockEntityState ? craftBlockEntityState.getSnapshotNBT() : null));
+                  }
+                  // CraftBukkit end
 
                   if (p_230329_.setBlock(blockpos, blockstate, p_230334_)) {
                      i = Math.min(i, blockpos.getX());
@@ -240,7 +_,7 @@
                      if (structuretemplate$structureblockinfo.nbt != null) {
                         BlockEntity blockentity1 = p_230329_.getBlockEntity(blockpos);
                         if (blockentity1 != null) {
-                           if (blockentity1 instanceof RandomizableContainerBlockEntity) {
+                           if (wrappedAccess == p_230329_ && blockentity1 instanceof RandomizableContainerBlockEntity) { // CraftBukkit - only process if don't have a transformer access (originalAccess == worldaccess)
                               structuretemplate$structureblockinfo.nbt.putLong("LootTableSeed", p_230333_.nextLong());
                            }
 
@@ -330,7 +_,7 @@
             }
 
             if (!p_230332_.isIgnoreEntities()) {
-               this.placeEntities(p_230329_, p_230330_, p_230332_.getMirror(), p_230332_.getRotation(), p_230332_.getRotationPivot(), boundingbox, p_230332_.shouldFinalizeEntities());
+               this.addEntitiesToWorld(wrappedAccess, p_230330_, p_230332_);
             }
 
             return true;
@@ -359,7 +_,15 @@
       });
    }
 
+   /**
+    * @deprecated Forge: Use {@link #processBlockInfos(ServerLevelAccessor, BlockPos, BlockPos, StructurePlaceSettings, List, StructureTemplate)} instead.
+    */
+   @Deprecated
    public static List<StructureTemplate.StructureBlockInfo> processBlockInfos(ServerLevelAccessor p_278297_, BlockPos p_74519_, BlockPos p_74520_, StructurePlaceSettings p_74521_, List<StructureTemplate.StructureBlockInfo> p_74522_) {
+      return processBlockInfos(p_278297_, p_74519_, p_74520_, p_74521_, p_74522_, null);
+   }
+
+   public static List<StructureTemplate.StructureBlockInfo> processBlockInfos(ServerLevelAccessor p_278297_, BlockPos p_74519_, BlockPos p_74520_, StructurePlaceSettings p_74521_, List<StructureTemplate.StructureBlockInfo> p_74522_, @Nullable StructureTemplate template) {
       List<StructureTemplate.StructureBlockInfo> list = new ArrayList<>();
       List<StructureTemplate.StructureBlockInfo> list1 = new ArrayList<>();
 
@@ -367,7 +_,7 @@
          BlockPos blockpos = calculateRelativePosition(p_74521_, structuretemplate$structureblockinfo.pos).offset(p_74519_);
          StructureTemplate.StructureBlockInfo structuretemplate$structureblockinfo1 = new StructureTemplate.StructureBlockInfo(blockpos, structuretemplate$structureblockinfo.state, structuretemplate$structureblockinfo.nbt != null ? structuretemplate$structureblockinfo.nbt.copy() : null);
 
-         for(Iterator<StructureProcessor> iterator = p_74521_.getProcessors().iterator(); structuretemplate$structureblockinfo1 != null && iterator.hasNext(); structuretemplate$structureblockinfo1 = iterator.next().processBlock(p_278297_, p_74519_, p_74520_, structuretemplate$structureblockinfo, structuretemplate$structureblockinfo1, p_74521_)) {
+         for(Iterator<StructureProcessor> iterator = p_74521_.getProcessors().iterator(); structuretemplate$structureblockinfo1 != null && iterator.hasNext(); structuretemplate$structureblockinfo1 = iterator.next().process(p_278297_, p_74519_, p_74520_, structuretemplate$structureblockinfo, structuretemplate$structureblockinfo1, p_74521_, template)) {
          }
 
          if (structuretemplate$structureblockinfo1 != null) {
@@ -383,13 +_,29 @@
       return list1;
    }
 
-   private void placeEntities(ServerLevelAccessor p_74524_, BlockPos p_74525_, Mirror p_74526_, Rotation p_74527_, BlockPos p_74528_, @Nullable BoundingBox p_74529_, boolean p_74530_) {
-      for(StructureTemplate.StructureEntityInfo structuretemplate$structureentityinfo : this.entityInfoList) {
-         BlockPos blockpos = transform(structuretemplate$structureentityinfo.blockPos, p_74526_, p_74527_, p_74528_).offset(p_74525_);
-         if (p_74529_ == null || p_74529_.isInside(blockpos)) {
+   public static List<StructureTemplate.StructureEntityInfo> processEntityInfos(@Nullable StructureTemplate template, LevelAccessor p_215387_0_, BlockPos p_215387_1_, StructurePlaceSettings p_215387_2_, List<StructureTemplate.StructureEntityInfo> p_215387_3_) {
+      List<StructureTemplate.StructureEntityInfo> list = Lists.newArrayList();
+      for(StructureTemplate.StructureEntityInfo entityInfo : p_215387_3_) {
+         Vec3 pos = transformedVec3d(p_215387_2_, entityInfo.pos).add(Vec3.atLowerCornerOf(p_215387_1_));
+         BlockPos blockpos = calculateRelativePosition(p_215387_2_, entityInfo.blockPos).offset(p_215387_1_);
+         StructureTemplate.StructureEntityInfo info = new StructureTemplate.StructureEntityInfo(pos, blockpos, entityInfo.nbt);
+         for (StructureProcessor proc : p_215387_2_.getProcessors()) {
+            info = proc.processEntity(p_215387_0_, p_215387_1_, entityInfo, info, p_215387_2_, template);
+            if (info == null)
+               break;
+         }
+         if (info != null)
+            list.add(info);
+      }
+      return list;
+   }
+
+   private void addEntitiesToWorld(ServerLevelAccessor p_74524_, BlockPos p_74525_, StructurePlaceSettings placementIn) {
+      for(StructureTemplate.StructureEntityInfo structuretemplate$structureentityinfo : processEntityInfos(this, p_74524_, p_74525_, placementIn, this.entityInfoList)) {
+         BlockPos blockpos = structuretemplate$structureentityinfo.blockPos; // FORGE: Position will have already been transformed by processEntityInfos
+         if (placementIn.getBoundingBox() == null || placementIn.getBoundingBox().isInside(blockpos)) {
             CompoundTag compoundtag = structuretemplate$structureentityinfo.nbt.copy();
-            Vec3 vec3 = transform(structuretemplate$structureentityinfo.pos, p_74526_, p_74527_, p_74528_);
-            Vec3 vec31 = vec3.add((double)p_74525_.getX(), (double)p_74525_.getY(), (double)p_74525_.getZ());
+            Vec3 vec31 = structuretemplate$structureentityinfo.pos; // FORGE: Position will have already been transformed by processEntityInfos
             ListTag listtag = new ListTag();
             listtag.add(DoubleTag.valueOf(vec31.x));
             listtag.add(DoubleTag.valueOf(vec31.y));
@@ -397,10 +_,10 @@
             compoundtag.put("Pos", listtag);
             compoundtag.remove("UUID");
             createEntityIgnoreException(p_74524_, compoundtag).ifPresent((p_275190_) -> {
-               float f = p_275190_.rotate(p_74527_);
-               f += p_275190_.mirror(p_74526_) - p_275190_.getYRot();
+               float f = p_275190_.rotate(placementIn.getRotation());
+               f += p_275190_.mirror(placementIn.getMirror()) - p_275190_.getYRot();
                p_275190_.moveTo(vec31.x, vec31.y, vec31.z, f, p_275190_.getXRot());
-               if (p_74530_ && p_275190_ instanceof Mob) {
+               if (placementIn.shouldFinalizeEntities() && p_275190_ instanceof Mob) {
                   ((Mob)p_275190_).finalizeSpawn(p_74524_, p_74524_.getCurrentDifficultyAt(BlockPos.containing(vec31)), MobSpawnType.STRUCTURE, (SpawnGroupData)null, compoundtag);
                }
 
@@ -412,11 +_,13 @@
    }
 
    private static Optional<Entity> createEntityIgnoreException(ServerLevelAccessor p_74544_, CompoundTag p_74545_) {
-      try {
+      // CraftBukkit start
+      // try {
          return EntityType.create(p_74545_, p_74544_.getLevel());
-      } catch (Exception exception) {
-         return Optional.empty();
-      }
+      // } catch (Exception exception) {
+      //    return Optional.empty();
+      // }
+      // CraftBukkit end
    }
 
    public Vec3i getSize(Rotation p_163809_) {
@@ -607,6 +_,11 @@
 
       p_74619_.put("entities", listtag);
       p_74619_.put("size", this.newIntegerList(this.size.getX(), this.size.getY(), this.size.getZ()));
+      // CraftBukkit start - PDC
+      if (!this.persistentDataContainer.isEmpty()) {
+         p_74619_.put("BukkitValues", this.persistentDataContainer.toTagCompound());
+      }
+      // CraftBukkit end
       return NbtUtils.addCurrentDataVersion(p_74619_);
    }
 
@@ -640,6 +_,12 @@
          }
       }
 
+      // CraftBukkit start - PDC
+      net.minecraft.nbt.Tag base = p_248574_.get("BukkitValues");
+      if (base instanceof CompoundTag) {
+         this.persistentDataContainer.putAll((CompoundTag) base);
+      }
+      // CraftBukkit end
    }
 
    private void loadPalette(HolderGetter<Block> p_256546_, ListTag p_251056_, ListTag p_251493_) {

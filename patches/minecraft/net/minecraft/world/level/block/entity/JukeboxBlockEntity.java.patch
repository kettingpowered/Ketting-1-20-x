--- a/net/minecraft/world/level/block/entity/JukeboxBlockEntity.java
+++ b/net/minecraft/world/level/block/entity/JukeboxBlockEntity.java
@@ -1,6 +_,7 @@
 package net.minecraft.world.level.block.entity;
 
 import com.google.common.annotations.VisibleForTesting;
+
 import java.util.Objects;
 import javax.annotation.Nullable;
 import net.minecraft.core.BlockPos;
@@ -23,14 +_,50 @@
 import net.minecraft.world.level.gameevent.GameEvent;
 import net.minecraft.world.phys.Vec3;
 import net.minecraft.world.ticks.ContainerSingleItem;
 
 public class JukeboxBlockEntity extends BlockEntity implements Clearable, ContainerSingleItem {
    private static final int SONG_END_PADDING = 20;
    private final NonNullList<ItemStack> items = NonNullList.withSize(this.getContainerSize(), ItemStack.EMPTY);
    private int ticksSinceLastEvent;
-   private long tickCount;
-   private long recordStartedTick;
-   private boolean isPlaying;
+   public long tickCount;
+   public long recordStartedTick;
+   public boolean isPlaying;
+   // CraftBukkit start - add fields and methods
+   public java.util.List<org.bukkit.entity.HumanEntity> transaction = new java.util.ArrayList<org.bukkit.entity.HumanEntity>();
+   private int maxStack = MAX_STACK;
+   public boolean opened;
+
+   @Override
+   public java.util.List<ItemStack> getContents() {
+      return this.items;
+   }
+
+   @Override
+   public void onOpen(org.bukkit.craftbukkit.v1_20_R2.entity.CraftHumanEntity who) {
+      transaction.add(who);
+   }
+
+   @Override
+   public void onClose(org.bukkit.craftbukkit.v1_20_R2.entity.CraftHumanEntity who) {
+      transaction.remove(who);
+   }
+
+   @Override
+   public java.util.List<org.bukkit.entity.HumanEntity> getViewers() {
+      return transaction;
+   }
+
+   @Override
+   public void setMaxStackSize(int size) {
+      maxStack = size;
+   }
+
+   @Override
+   public org.bukkit.Location getLocation() {
+      if (level == null) return null;
+      return new org.bukkit.Location(level.getWorld(), worldPosition.getX(), worldPosition.getY(), worldPosition.getZ());
+   }
+   // CraftBukkit end
 
    public JukeboxBlockEntity(BlockPos p_155613_, BlockState p_155614_) {
       super(BlockEntityType.JUKEBOX, p_155613_, p_155614_);
@@ -141,7 +_,7 @@
    }
 
    public int getMaxStackSize() {
-      return 1;
+      return maxStack; // CraftBukkit
    }
 
    public boolean stillValid(Player p_273466_) {
@@ -187,7 +_,11 @@
    @VisibleForTesting
    public void setRecordWithoutPlaying(ItemStack p_272693_) {
       this.items.set(0, p_272693_);
-      this.level.updateNeighborsAt(this.getBlockPos(), this.getBlockState().getBlock());
+      // CraftBukkit start - add null check for level
+      if (level != null) {
+         this.level.updateNeighborsAt(this.getBlockPos(), this.getBlockState().getBlock());
+      }
+      // CraftBukkit end
       this.setChanged();
    }
 }

--- a/net/minecraft/world/level/block/entity/BeehiveBlockEntity.java
+++ b/net/minecraft/world/level/block/entity/BeehiveBlockEntity.java
@@ -42,6 +_,7 @@
    private final List<BeehiveBlockEntity.BeeData> stored = Lists.newArrayList();
    @Nullable
    public BlockPos savedFlowerPos;
+   public int maxBees = 3; // CraftBukkit - allow setting max amount of bees a hive can hold
 
    public BeehiveBlockEntity(BlockPos p_155134_, BlockState p_155135_) {
       super(BlockEntityType.BEEHIVE, p_155134_, p_155135_);
@@ -74,7 +_,7 @@
    }
 
    public boolean isFull() {
-      return this.stored.size() == 3;
+      return this.stored.size() == this.maxBees; // CraftBukkit
    }
 
    public void emptyAllLivingFromHive(@Nullable Player p_58749_, BlockState p_58750_, BeehiveBlockEntity.BeeReleaseStatus p_58751_) {
@@ -85,7 +_,7 @@
                Bee bee = (Bee)entity;
                if (p_58749_.position().distanceToSqr(entity.position()) <= 16.0D) {
                   if (!this.isSedated()) {
-                     bee.setTarget(p_58749_);
+                     bee.setTarget(p_58749_, org.bukkit.event.entity.EntityTargetEvent.TargetReason.CLOSEST_PLAYER, true); // CraftBukkit
                   } else {
                      bee.setStayOutOfHiveCountdown(400);
                   }
@@ -97,9 +_,15 @@
    }
 
    private List<Entity> releaseAllOccupants(BlockState p_58760_, BeehiveBlockEntity.BeeReleaseStatus p_58761_) {
+      // CraftBukkit start - This allows us to bypass the night/rain/emergency check
+      return releaseBees(p_58760_, p_58761_, false);
+   }
+
+   public List<Entity> releaseBees(BlockState p_58760_, BeehiveBlockEntity.BeeReleaseStatus p_58761_, boolean force) {
       List<Entity> list = Lists.newArrayList();
       this.stored.removeIf((p_272556_) -> {
-         return releaseOccupant(this.level, this.worldPosition, p_58760_, p_272556_, list, p_58761_, this.savedFlowerPos);
+         return releaseBee(this.level, this.worldPosition, p_58760_, p_272556_, list, p_58761_, this.savedFlowerPos, force);
+         // CraftBukkit end
       });
       if (!list.isEmpty()) {
          super.setChanged();
@@ -127,7 +_,19 @@
    }
 
    public void addOccupantWithPresetTicks(Entity p_58745_, boolean p_58746_, int p_58747_) {
-      if (this.stored.size() < 3) {
+      if (this.stored.size() < this.maxBees) { // CraftBukkit
+         // CraftBukkit start
+         if (this.level != null) {
+            org.bukkit.event.entity.EntityEnterBlockEvent event = new org.bukkit.event.entity.EntityEnterBlockEvent(p_58745_.getBukkitEntity(), org.bukkit.craftbukkit.v1_20_R2.block.CraftBlock.at(level, getBlockPos()));
+            org.bukkit.Bukkit.getPluginManager().callEvent(event);
+            if (event.isCancelled()) {
+               if (p_58745_ instanceof Bee) {
+                  ((Bee) p_58745_).setStayOutOfHiveCountdown(400);
+               }
+               return;
+            }
+         }
+         // CraftBukkit end
          p_58745_.stopRiding();
          p_58745_.ejectPassengers();
          CompoundTag compoundtag = new CompoundTag();
@@ -154,9 +_,14 @@
    public void storeBee(CompoundTag p_155158_, int p_155159_, boolean p_155160_) {
       this.stored.add(new BeehiveBlockEntity.BeeData(p_155158_, p_155159_, p_155160_ ? 2400 : 600));
    }
-
    private static boolean releaseOccupant(Level p_155137_, BlockPos p_155138_, BlockState p_155139_, BeehiveBlockEntity.BeeData p_155140_, @Nullable List<Entity> p_155141_, BeehiveBlockEntity.BeeReleaseStatus p_155142_, @Nullable BlockPos p_155143_) {
-      if ((p_155137_.isNight() || p_155137_.isRaining()) && p_155142_ != BeehiveBlockEntity.BeeReleaseStatus.EMERGENCY) {
+      // CraftBukkit start - This allows us to bypass the night/rain/emergency check
+      return releaseBee(p_155137_, p_155138_, p_155139_, p_155140_, p_155141_, p_155142_, p_155143_, false);
+   }
+
+   private static boolean releaseBee(Level p_155137_, BlockPos p_155138_, BlockState p_155139_, BeehiveBlockEntity.BeeData p_155140_, @Nullable List<Entity> p_155141_, BeehiveBlockEntity.BeeReleaseStatus p_155142_, @Nullable BlockPos p_155143_, boolean force) {
+      if (!force && (p_155137_.isNight() || p_155137_.isRaining()) && p_155142_ != BeehiveBlockEntity.BeeReleaseStatus.EMERGENCY) {
+         // CraftBukkit end
          return false;
       } else {
          CompoundTag compoundtag = p_155140_.entityData.copy();
@@ -176,6 +_,18 @@
                if (!entity.getType().is(EntityTypeTags.BEEHIVE_INHABITORS)) {
                   return false;
                } else {
+                  // CraftBukkit start
+                  if (entity instanceof Bee) {
+                     float f = entity.getBbWidth();
+                     double d0 = flag ? 0.0D : 0.55D + (double) (f / 2.0F);
+                     double d1 = (double) p_155138_.getX() + 0.5D + d0 * (double) direction.getStepX();
+                     double d2 = (double) p_155138_.getY() + 0.5D - (double) (entity.getBbHeight() / 2.0F);
+                     double d3 = (double) p_155138_.getZ() + 0.5D + d0 * (double) direction.getStepZ();
+
+                     entity.moveTo(d1, d2, d3, entity.getYRot(), entity.getXRot());
+                  }
+                  if (!p_155137_.addFreshEntity(entity, org.bukkit.event.entity.CreatureSpawnEvent.SpawnReason.BEEHIVE)) return false; // CraftBukkit - SpawnReason, moved from below
+                  // CraftBukkit end
                   if (entity instanceof Bee) {
                      Bee bee = (Bee)entity;
                      if (p_155143_ != null && !bee.hasSavedFlowerPos() && p_155137_.random.nextFloat() < 0.9F) {
@@ -204,17 +_,19 @@
                         p_155141_.add(bee);
                      }
 
+                     /* // CraftBukkit start
                      float f = entity.getBbWidth();
                      double d3 = flag ? 0.0D : 0.55D + (double)(f / 2.0F);
                      double d0 = (double)p_155138_.getX() + 0.5D + d3 * (double)direction.getStepX();
                      double d1 = (double)p_155138_.getY() + 0.5D - (double)(entity.getBbHeight() / 2.0F);
                      double d2 = (double)p_155138_.getZ() + 0.5D + d3 * (double)direction.getStepZ();
                      entity.moveTo(d0, d1, d2, entity.getYRot(), entity.getXRot());
+                     */ // CraftBukkit end
                   }
 
                   p_155137_.playSound((Player)null, p_155138_, SoundEvents.BEEHIVE_EXIT, SoundSource.BLOCKS, 1.0F, 1.0F);
                   p_155137_.gameEvent(GameEvent.BLOCK_CHANGE, p_155138_, GameEvent.Context.of(entity, p_155137_.getBlockState(p_155138_)));
-                  return p_155137_.addFreshEntity(entity);
+                  return true; // return p_155137_.addFreshEntity(entity); // CraftBukkit - moved up
                }
             } else {
                return false;
@@ -256,6 +_,10 @@
             if (releaseOccupant(p_155150_, p_155151_, p_155152_, beehiveblockentity$beedata, (List<Entity>)null, beehiveblockentity$beereleasestatus, p_155154_)) {
                flag = true;
                iterator.remove();
+               // CraftBukkit start
+            } else {
+               beehiveblockentity$beedata.ticksInHive = beehiveblockentity$beedata.minOccupationTicks / 2; // Not strictly Vanilla behaviour in cases where bees cannot spawn but still reasonable
+               // CraftBukkit end
             }
          }
       }
@@ -294,6 +_,11 @@
          this.savedFlowerPos = NbtUtils.readBlockPos(p_155156_.getCompound("FlowerPos"));
       }
 
+      // CraftBukkit start
+      if (p_155156_.contains("Bukkit.MaxEntities")) {
+         this.maxBees = p_155156_.getInt("Bukkit.MaxEntities");
+      }
+      // CraftBukkit end
    }
 
    protected void saveAdditional(CompoundTag p_187467_) {
@@ -303,6 +_,7 @@
          p_187467_.put("FlowerPos", NbtUtils.writeBlockPos(this.savedFlowerPos));
       }
 
+      p_187467_.putInt("Bukkit.MaxEntities", this.maxBees); // CraftBukkit
    }
 
    public ListTag writeBees() {

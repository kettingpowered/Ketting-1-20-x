--- a/net/minecraft/world/level/block/entity/SignBlockEntity.java
+++ b/net/minecraft/world/level/block/entity/SignBlockEntity.java
@@ -29,12 +_,12 @@
 import net.minecraft.world.phys.Vec3;
 import org.slf4j.Logger;
 
-public class SignBlockEntity extends BlockEntity {
+public class SignBlockEntity extends BlockEntity implements CommandSource { // CraftBukkit - implements
    private static final Logger LOGGER = LogUtils.getLogger();
    private static final int MAX_TEXT_LINE_WIDTH = 90;
    private static final int TEXT_LINE_HEIGHT = 10;
    @Nullable
-   private UUID playerWhoMayEdit;
+   public UUID playerWhoMayEdit;
    private SignText frontText = this.createDefaultSignText();
    private SignText backText = this.createDefaultSignText();
    private boolean isWaxed;
@@ -142,12 +_,13 @@
    public void updateSignText(Player p_278048_, boolean p_278103_, List<FilteredText> p_277990_) {
       if (!this.isWaxed() && p_278048_.getUUID().equals(this.getPlayerWhoMayEdit()) && this.level != null) {
          this.updateText((p_277776_) -> {
-            return this.setMessages(p_278048_, p_277990_, p_277776_);
+            return this.setMessages(p_278048_, p_277990_, p_277776_, p_278103_); // CraftBukkit
          }, p_278103_);
          this.setAllowedPlayerEditor((UUID)null);
          this.level.sendBlockUpdated(this.getBlockPos(), this.getBlockState(), this.getBlockState(), 3);
       } else {
          LOGGER.warn("Player {} just tried to change non-editable sign", (Object)p_278048_.getName().getString());
+         ((net.minecraft.server.level.ServerPlayer) p_278048_).connection.send(this.getUpdatePacket()); // CraftBukkit
       }
    }
 
@@ -156,7 +_,8 @@
       return this.setText(p_277877_.apply(signtext), p_277426_);
    }
 
-   private SignText setMessages(Player p_277396_, List<FilteredText> p_277744_, SignText p_277359_) {
+   private SignText setMessages(Player p_277396_, List<FilteredText> p_277744_, SignText p_277359_, boolean front) { // CraftBukkit
+      SignText originalText = p_277359_; // CraftBukkit
       for(int i = 0; i < p_277744_.size(); ++i) {
          FilteredText filteredtext = p_277744_.get(i);
          Style style = p_277359_.getMessage(i, p_277396_.isTextFilteringEnabled()).getStyle();
@@ -167,6 +_,29 @@
          }
       }
 
+      // CraftBukkit start
+      org.bukkit.entity.Player player = ((net.minecraft.server.level.ServerPlayer) p_277396_).getBukkitEntity();
+      String[] lines = new String[4];
+
+      for (int i = 0; i < p_277744_.size(); ++i) {
+         lines[i] = org.bukkit.craftbukkit.v1_20_R2.util.CraftChatMessage.fromComponent(p_277359_.getMessage(i, p_277396_.isTextFilteringEnabled()));
+      }
+
+      org.bukkit.event.block.SignChangeEvent event = new org.bukkit.event.block.SignChangeEvent(org.bukkit.craftbukkit.v1_20_R2.block.CraftBlock.at(this.level, this.worldPosition), player, lines.clone(), (front) ? org.bukkit.block.sign.Side.FRONT : org.bukkit.block.sign.Side.BACK);
+      p_277396_.level().getCraftServer().getPluginManager().callEvent(event);
+
+      if (event.isCancelled()) {
+         return originalText;
+      }
+
+      Component[] components = org.bukkit.craftbukkit.v1_20_R2.block.CraftSign.sanitizeLines(event.getLines());
+      for (int i = 0; i < components.length; i++) {
+         if (!java.util.Objects.equals(lines[i], event.getLine(i))) {
+            p_277359_ = p_277359_.setMessage(i, components[i]);
+         }
+      }
+      // CraftBukkit end
+
       return p_277359_;
    }
 
@@ -213,10 +_,37 @@
       return flag;
    }
 
-   private static CommandSourceStack createCommandSourceStack(@Nullable Player p_279428_, Level p_279359_, BlockPos p_279430_) {
-      String s = p_279428_ == null ? "Sign" : p_279428_.getName().getString();
-      Component component = (Component)(p_279428_ == null ? Component.literal("Sign") : p_279428_.getDisplayName());
-      return new CommandSourceStack(CommandSource.NULL, Vec3.atCenterOf(p_279430_), Vec2.ZERO, (ServerLevel)p_279359_, 2, s, component, p_279359_.getServer(), p_279428_);
+   // CraftBukkit start
+   @Override
+   public void sendSystemMessage(Component ichatbasecomponent) {}
+
+   @Override
+   public org.bukkit.command.CommandSender getBukkitSender(CommandSourceStack wrapper) {
+      return wrapper.getEntity() != null ? wrapper.getEntity().getBukkitSender(wrapper) : new org.bukkit.craftbukkit.v1_20_R2.command.CraftBlockCommandSender(wrapper, this);
+   }
+
+   @Override
+   public boolean acceptsSuccess() {
+      return false;
+   }
+
+   @Override
+   public boolean acceptsFailure() {
+      return false;
+   }
+
+   @Override
+   public boolean shouldInformAdmins() {
+      return false;
+   }
+
+   private CommandSourceStack createCommandSourceStack(@Nullable Player entityhuman, Level world, BlockPos blockposition) {
+      // CraftBukkit end
+      String s = entityhuman == null ? "Sign" : entityhuman.getName().getString();
+      Object object = entityhuman == null ? Component.literal("Sign") : entityhuman.getDisplayName();
+
+      // CraftBukkit - this
+      return new CommandSourceStack(this, Vec3.atCenterOf(blockposition), Vec2.ZERO, (ServerLevel) world, 2, s, (Component) object, world.getServer(), entityhuman);
    }
 
    public ClientboundBlockEntityDataPacket getUpdatePacket() {
@@ -242,7 +_,7 @@
 
    private void markUpdated() {
       this.setChanged();
-      this.level.sendBlockUpdated(this.getBlockPos(), this.getBlockState(), this.getBlockState(), 3);
+      if (this.level != null) this.level.sendBlockUpdated(this.getBlockPos(), this.getBlockState(), this.getBlockState(), 3); // CraftBukkit - skip notify if world is null (SPIGOT-5122)
    }
 
    public boolean isWaxed() {
@@ -277,5 +_,10 @@
          p_277656_.setAllowedPlayerEditor((UUID)null);
       }
 
+   }
+
+   @Override
+   public net.minecraft.world.phys.AABB getRenderBoundingBox() {
+      return new net.minecraft.world.phys.AABB(this.getBlockPos(), this.getBlockPos().offset(1, 1, 1));
    }
 }

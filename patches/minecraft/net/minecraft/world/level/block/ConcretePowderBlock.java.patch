--- a/net/minecraft/world/level/block/ConcretePowderBlock.java
+++ b/net/minecraft/world/level/block/ConcretePowderBlock.java
@@ -10,6 +_,6 @@
 import net.minecraft.world.level.LevelAccessor;
 import net.minecraft.world.level.block.state.BlockBehaviour;
 import net.minecraft.world.level.block.state.BlockState;
 
 public class ConcretePowderBlock extends FallingBlock {
    private final BlockState concrete;
@@ -20,8 +_,8 @@
    }
 
    public void onLand(Level p_52068_, BlockPos p_52069_, BlockState p_52070_, BlockState p_52071_, FallingBlockEntity p_52072_) {
-      if (shouldSolidify(p_52068_, p_52069_, p_52071_)) {
-         p_52068_.setBlock(p_52069_, this.concrete, 3);
+      if (shouldSolidify(p_52068_, p_52069_, p_52070_, p_52071_.getFluidState())) { // Forge: Use block of falling entity instead of block at replaced position, and check if shouldSolidify with the FluidState of the replaced block
+         org.bukkit.craftbukkit.v1_20_R2.event.CraftEventFactory.handleBlockFormEvent(p_52068_, p_52069_, this.concrete, 3); // CraftBukkit
       }
 
    }
@@ -30,23 +_,44 @@
       BlockGetter blockgetter = p_52063_.getLevel();
       BlockPos blockpos = p_52063_.getClickedPos();
       BlockState blockstate = blockgetter.getBlockState(blockpos);
-      return shouldSolidify(blockgetter, blockpos, blockstate) ? this.concrete : super.getStateForPlacement(p_52063_);
+      // CraftBukkit start
+      if (!shouldSolidify(blockgetter, blockpos, blockstate)) {
+         return super.getStateForPlacement(p_52063_);
+      }
+
+      // TODO: An event factory call for methods like this
+      org.bukkit.craftbukkit.v1_20_R2.block.CraftBlockState blockState = org.bukkit.craftbukkit.v1_20_R2.block.CraftBlockStates.getBlockState(p_52063_.getLevel(), blockpos);
+      blockState.setData(this.concrete);
+
+      org.bukkit.event.block.BlockFormEvent event = new org.bukkit.event.block.BlockFormEvent(blockState.getBlock(), blockState);
+      p_52063_.getLevel().getServer().server.getPluginManager().callEvent(event);
+
+      if (!event.isCancelled()) {
+         return blockState.getHandle();
+      }
+
+      return super.getStateForPlacement(p_52063_);
+      // CraftBukkit end
+   }
+
+   private static boolean shouldSolidify(BlockGetter p_52081_, BlockPos p_52082_, BlockState p_52083_, net.minecraft.world.level.material.FluidState fluidState) {
+      return p_52083_.canBeHydrated(p_52081_, p_52082_, fluidState, p_52082_) || touchesLiquid(p_52081_, p_52082_, p_52083_);
    }
 
    private static boolean shouldSolidify(BlockGetter p_52081_, BlockPos p_52082_, BlockState p_52083_) {
-      return canSolidify(p_52083_) || touchesLiquid(p_52081_, p_52082_);
+      return shouldSolidify(p_52081_, p_52082_, p_52083_, p_52081_.getFluidState(p_52082_));
    }
 
-   private static boolean touchesLiquid(BlockGetter p_52065_, BlockPos p_52066_) {
+   private static boolean touchesLiquid(BlockGetter p_52065_, BlockPos p_52066_, BlockState state) {
       boolean flag = false;
       BlockPos.MutableBlockPos blockpos$mutableblockpos = p_52066_.mutable();
 
       for(Direction direction : Direction.values()) {
          BlockState blockstate = p_52065_.getBlockState(blockpos$mutableblockpos);
-         if (direction != Direction.DOWN || canSolidify(blockstate)) {
+         if (direction != Direction.DOWN || state.canBeHydrated(p_52065_, p_52066_, blockstate.getFluidState(), blockpos$mutableblockpos)) {
             blockpos$mutableblockpos.setWithOffset(p_52066_, direction);
             blockstate = p_52065_.getBlockState(blockpos$mutableblockpos);
-            if (canSolidify(blockstate) && !blockstate.isFaceSturdy(p_52065_, p_52066_, direction.getOpposite())) {
+            if (state.canBeHydrated(p_52065_, p_52066_, blockstate.getFluidState(), blockpos$mutableblockpos) && !blockstate.isFaceSturdy(p_52065_, p_52066_, direction.getOpposite())) {
                flag = true;
                break;
             }
@@ -61,7 +_,25 @@
    }
 
    public BlockState updateShape(BlockState p_52074_, Direction p_52075_, BlockState p_52076_, LevelAccessor p_52077_, BlockPos p_52078_, BlockPos p_52079_) {
-      return touchesLiquid(p_52077_, p_52078_) ? this.concrete : super.updateShape(p_52074_, p_52075_, p_52076_, p_52077_, p_52078_, p_52079_);
+      // CraftBukkit start
+      if (touchesLiquid(p_52077_, p_52078_, p_52074_)) {
+         // Suppress during worldgen
+         if (!(p_52077_ instanceof Level)) {
+            return this.concrete;
+         }
+         org.bukkit.craftbukkit.v1_20_R2.block.CraftBlockState blockState = org.bukkit.craftbukkit.v1_20_R2.block.CraftBlockStates.getBlockState(p_52077_, p_52078_);
+         blockState.setData(this.concrete);
+
+         org.bukkit.event.block.BlockFormEvent event = new org.bukkit.event.block.BlockFormEvent(blockState.getBlock(), blockState);
+         ((Level) p_52077_).getCraftServer().getPluginManager().callEvent(event);
+
+         if (!event.isCancelled()) {
+            return blockState.getHandle();
+         }
+      }
+
+      return super.updateShape(p_52074_, p_52075_, p_52076_, p_52077_, p_52078_, p_52079_);
+      // CraftBukkit end
    }
 
    public int getDustColor(BlockState p_52085_, BlockGetter p_52086_, BlockPos p_52087_) {

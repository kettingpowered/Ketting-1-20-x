--- a/net/minecraft/world/level/block/ComparatorBlock.java
+++ b/net/minecraft/world/level/block/ComparatorBlock.java
@@ -26,6 +_,6 @@
 import net.minecraft.world.phys.AABB;
 import net.minecraft.world.phys.BlockHitResult;
 import net.minecraft.world.ticks.TickPriority;
 
 public class ComparatorBlock extends DiodeBlock implements EntityBlock {
    public static final EnumProperty<ComparatorMode> MODE = BlockStateProperties.MODE_COMPARATOR;
@@ -143,8 +_,18 @@
          boolean flag1 = this.shouldTurnOn(p_51908_, p_51909_, p_51910_);
          boolean flag = p_51910_.getValue(POWERED);
          if (flag && !flag1) {
+            // CraftBukkit start
+            if (org.bukkit.craftbukkit.v1_20_R2.event.CraftEventFactory.callRedstoneChange(p_51908_, p_51909_, 15, 0).getNewCurrent() != 0) {
+               return;
+            }
+            // CraftBukkit end
             p_51908_.setBlock(p_51909_, p_51910_.setValue(POWERED, Boolean.valueOf(false)), 2);
          } else if (!flag && flag1) {
+            // CraftBukkit start
+            if (org.bukkit.craftbukkit.v1_20_R2.event.CraftEventFactory.callRedstoneChange(p_51908_, p_51909_, 0, 15).getNewCurrent() != 15) {
+               return;
+            }
+            // CraftBukkit end
             p_51908_.setBlock(p_51909_, p_51910_.setValue(POWERED, Boolean.valueOf(true)), 2);
          }
 
@@ -169,5 +_,17 @@
 
    protected void createBlockStateDefinition(StateDefinition.Builder<Block, BlockState> p_51887_) {
       p_51887_.add(FACING, MODE, POWERED);
+   }
+
+   @Override
+   public boolean getWeakChanges(BlockState state, net.minecraft.world.level.LevelReader world, BlockPos pos) {
+      return state.is(Blocks.COMPARATOR);
+   }
+
+   @Override
+   public void onNeighborChange(BlockState state, net.minecraft.world.level.LevelReader world, BlockPos pos, BlockPos neighbor) {
+      if (pos.getY() == neighbor.getY() && world instanceof Level && !((Level)world).isClientSide()) {
+         state.neighborChanged((Level)world, pos, world.getBlockState(neighbor).getBlock(), neighbor, false);
+      }
    }
 }

--- a/net/minecraft/world/level/block/FarmBlock.java
+++ b/net/minecraft/world/level/block/FarmBlock.java
@@ -74,41 +_,68 @@
       if (!isNearWater(p_221140_, p_221141_) && !p_221140_.isRainingAt(p_221141_.above())) {
          if (i > 0) {
             p_221140_.setBlock(p_221141_, p_221139_.setValue(MOISTURE, Integer.valueOf(i - 1)), 2);
+            org.bukkit.craftbukkit.v1_20_R2.event.CraftEventFactory.handleMoistureChangeEvent(p_221140_, p_221141_, (BlockState) p_221139_.setValue(FarmBlock.MOISTURE, i - 1), 2); // CraftBukkit
          } else if (!shouldMaintainFarmland(p_221140_, p_221141_)) {
             turnToDirt((Entity)null, p_221139_, p_221140_, p_221141_);
          }
       } else if (i < 7) {
-         p_221140_.setBlock(p_221141_, p_221139_.setValue(MOISTURE, Integer.valueOf(7)), 2);
+         org.bukkit.craftbukkit.v1_20_R2.event.CraftEventFactory.handleMoistureChangeEvent(p_221140_, p_221141_, (BlockState) p_221139_.setValue(FarmBlock.MOISTURE, 7), 2); // CraftBukkit
       }
 
    }
 
    public void fallOn(Level p_153227_, BlockState p_153228_, BlockPos p_153229_, Entity p_153230_, float p_153231_) {
-      if (!p_153227_.isClientSide && p_153227_.random.nextFloat() < p_153231_ - 0.5F && p_153230_ instanceof LivingEntity && (p_153230_ instanceof Player || p_153227_.getGameRules().getBoolean(GameRules.RULE_MOBGRIEFING)) && p_153230_.getBbWidth() * p_153230_.getBbWidth() * p_153230_.getBbHeight() > 0.512F) {
+      super.fallOn(p_153227_, p_153228_, p_153229_, p_153230_, p_153231_); // CraftBukkit - moved here as game rules / events shouldn't affect fall damage.
+      if (!p_153227_.isClientSide && net.minecraftforge.common.ForgeHooks.onFarmlandTrample(p_153227_, p_153229_, Blocks.DIRT.defaultBlockState(), p_153231_, p_153230_)) { // Forge: Move logic to Entity#canTrample
+         // CraftBukkit start - Interact soil
+         org.bukkit.event.Cancellable cancellable;
+         if (p_153230_ instanceof Player) {
+            cancellable = org.bukkit.craftbukkit.v1_20_R2.event.CraftEventFactory.callPlayerInteractEvent((Player) p_153230_, org.bukkit.event.block.Action.PHYSICAL, p_153229_, null, null, null);
+         } else {
+            cancellable = new org.bukkit.event.entity.EntityInteractEvent(p_153230_.getBukkitEntity(), p_153227_.getWorld().getBlockAt(p_153229_.getX(), p_153229_.getY(), p_153229_.getZ()));
+            p_153227_.getCraftServer().getPluginManager().callEvent((org.bukkit.event.entity.EntityInteractEvent) cancellable);
+         }
+
+         if (cancellable.isCancelled()) {
+            return;
+         }
+
+         if (!org.bukkit.craftbukkit.v1_20_R2.event.CraftEventFactory.callEntityChangeBlockEvent(p_153230_, p_153229_, Blocks.DIRT.defaultBlockState())) {
+            return;
+         }
+         // CraftBukkit end
          turnToDirt(p_153230_, p_153228_, p_153227_, p_153229_);
       }
 
-      super.fallOn(p_153227_, p_153228_, p_153229_, p_153230_, p_153231_);
+      // super.fallOn(p_153227_, p_153228_, p_153229_, p_153230_, p_153231_); // CraftBukkit - moved up
    }
 
    public static void turnToDirt(@Nullable Entity p_270981_, BlockState p_270402_, Level p_270568_, BlockPos p_270551_) {
+      // CraftBukkit start
+      if (org.bukkit.craftbukkit.v1_20_R2.event.CraftEventFactory.callBlockFadeEvent(p_270568_, p_270551_, Blocks.DIRT.defaultBlockState()).isCancelled()) {
+         return;
+      }
+      // CraftBukkit end
       BlockState blockstate = pushEntitiesUp(p_270402_, Blocks.DIRT.defaultBlockState(), p_270568_, p_270551_);
       p_270568_.setBlockAndUpdate(p_270551_, blockstate);
       p_270568_.gameEvent(GameEvent.BLOCK_CHANGE, p_270551_, GameEvent.Context.of(p_270981_, blockstate));
    }
 
    private static boolean shouldMaintainFarmland(BlockGetter p_279219_, BlockPos p_279209_) {
-      return p_279219_.getBlockState(p_279209_.above()).is(BlockTags.MAINTAINS_FARMLAND);
+      BlockState plant = p_279219_.getBlockState(p_279209_.above());
+      BlockState state = p_279219_.getBlockState(p_279209_);
+      return plant.getBlock() instanceof net.minecraftforge.common.IPlantable && state.canSustainPlant(p_279219_, p_279209_, Direction.UP, (net.minecraftforge.common.IPlantable)plant.getBlock());
    }
 
    private static boolean isNearWater(LevelReader p_53259_, BlockPos p_53260_) {
+      BlockState state = p_53259_.getBlockState(p_53260_);
       for(BlockPos blockpos : BlockPos.betweenClosed(p_53260_.offset(-4, 0, -4), p_53260_.offset(4, 1, 4))) {
-         if (p_53259_.getFluidState(blockpos).is(FluidTags.WATER)) {
+         if (state.canBeHydrated(p_53259_, p_53260_, p_53259_.getFluidState(blockpos), blockpos)) {
             return true;
          }
       }
 
-      return false;
+      return net.minecraftforge.common.FarmlandWaterManager.hasBlockWaterTicket(p_53259_, p_53260_);
    }
 
    protected void createBlockStateDefinition(StateDefinition.Builder<Block, BlockState> p_53283_) {

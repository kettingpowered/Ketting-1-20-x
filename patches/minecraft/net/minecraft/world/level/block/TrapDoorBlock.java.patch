--- a/net/minecraft/world/level/block/TrapDoorBlock.java
+++ b/net/minecraft/world/level/block/TrapDoorBlock.java
@@ -102,12 +_,25 @@
       if (!p_57548_.isClientSide) {
          boolean flag = p_57548_.hasNeighborSignal(p_57549_);
          if (flag != p_57547_.getValue(POWERED)) {
+            // CraftBukkit start
+            org.bukkit.World bworld = p_57548_.getWorld();
+            org.bukkit.block.Block bblock = bworld.getBlockAt(p_57549_.getX(), p_57549_.getY(), p_57549_.getZ());
+
+            int power = bblock.getBlockPower();
+            int oldPower = (Boolean) p_57547_.getValue(OPEN) ? 15 : 0;
+
+            if (oldPower == 0 ^ power == 0 || p_57550_.defaultBlockState().isSignalSource()) {
+               org.bukkit.event.block.BlockRedstoneEvent eventRedstone = new org.bukkit.event.block.BlockRedstoneEvent(bblock, oldPower, power);
+               p_57548_.getCraftServer().getPluginManager().callEvent(eventRedstone);
+               flag = eventRedstone.getNewCurrent() > 0;
+            }
+            // CraftBukkit end
             if (p_57547_.getValue(OPEN) != flag) {
-               p_57547_ = p_57547_.setValue(OPEN, Boolean.valueOf(flag));
+               p_57547_ = p_57547_.setValue(OPEN, flag);
                this.playSound((Player)null, p_57548_, p_57549_, flag);
             }
 
-            p_57548_.setBlock(p_57549_, p_57547_.setValue(POWERED, Boolean.valueOf(flag)), 2);
+            p_57548_.setBlock(p_57549_, p_57547_.setValue(POWERED, flag), 2);
             if (p_57547_.getValue(WATERLOGGED)) {
                p_57548_.scheduleTick(p_57549_, Fluids.WATER, Fluids.WATER.getTickDelay(p_57548_));
             }
@@ -148,4 +_,17 @@
 
       return super.updateShape(p_57554_, p_57555_, p_57556_, p_57557_, p_57558_, p_57559_);
    }
+
+   //Forge Start
+   @Override
+   public boolean isLadder(BlockState state, net.minecraft.world.level.LevelReader world, BlockPos pos, net.minecraft.world.entity.LivingEntity entity) {
+      if (state.getValue(OPEN)) {
+         BlockPos downPos = pos.below();
+         BlockState down = world.getBlockState(downPos);
+         return down.getBlock().makesOpenTrapdoorAboveClimbable(down, world, downPos, state);
+      }
+      return false;
+   }
+   //Forge End
+
 }
